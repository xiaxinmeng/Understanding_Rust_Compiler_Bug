{"sha": "f18c74a73d3920097ff25bf87b4941afda6eb42d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjE4Yzc0YTczZDM5MjAwOTdmZjI1YmY4N2I0OTQxYWZkYTZlYjQyZA==", "commit": {"author": {"name": "Janne Blomqvist", "email": "jb@gcc.gnu.org", "date": "2010-01-03T18:08:27Z"}, "committer": {"name": "Janne Blomqvist", "email": "jb@gcc.gnu.org", "date": "2010-01-03T18:08:27Z"}, "message": "Rotate ChangeLogs for 2008 and 2009\n\nFrom-SVN: r155592", "tree": {"sha": "27e811fef4f90d1af0c1b57f3c524b9ed7e61ee1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/27e811fef4f90d1af0c1b57f3c524b9ed7e61ee1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f18c74a73d3920097ff25bf87b4941afda6eb42d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f18c74a73d3920097ff25bf87b4941afda6eb42d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f18c74a73d3920097ff25bf87b4941afda6eb42d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f18c74a73d3920097ff25bf87b4941afda6eb42d/comments", "author": null, "committer": null, "parents": [{"sha": "d7fb0a6db193bc525447791b2881ecdc17d7cb07", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7fb0a6db193bc525447791b2881ecdc17d7cb07", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7fb0a6db193bc525447791b2881ecdc17d7cb07"}], "stats": {"total": 10041, "additions": 5021, "deletions": 5020}, "files": [{"sha": "8b137891791fe96927ad78e64b0aad7bded08bdc", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 0, "deletions": 5020, "changes": 5020, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f18c74a73d3920097ff25bf87b4941afda6eb42d/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f18c74a73d3920097ff25bf87b4941afda6eb42d/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=f18c74a73d3920097ff25bf87b4941afda6eb42d"}, {"sha": "98cb28c15e447935182f05611d5241f50ec0d84b", "filename": "libgfortran/ChangeLog-2008", "status": "added", "additions": 2525, "deletions": 0, "changes": 2525, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f18c74a73d3920097ff25bf87b4941afda6eb42d/libgfortran%2FChangeLog-2008", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f18c74a73d3920097ff25bf87b4941afda6eb42d/libgfortran%2FChangeLog-2008", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog-2008?ref=f18c74a73d3920097ff25bf87b4941afda6eb42d", "patch": "@@ -0,0 +1,2525 @@\n+2008-12-29  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n+\n+\tPR fortran/31832\n+\t* acinclude.m4 (LIBGFOR_CHECK_FOR_BROKEN_POWF): New autoconf check for\n+\tbroken powf.\n+\t* configure.ac (LIBGFOR_CHECK_FOR_BROKEN_POWF): Use it.\n+\t* intrinsics/c99_functions.c: Use internal powf implementation if\n+\tHAVE_BROKEN_POWF is defined.\n+\t* configure: Rebuilt.\n+\t* config.h.in: Rebuilt.\n+\n+2008-12-22  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libfortran/37472\n+\t* io/write_float.def (output_float_FMT_G_): Modify calculation of temp\n+\tto avoid sensitivity to round-off.\n+\n+2008-12-21  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libfortran/38398\n+\t* io/io.h (st_parameter_dt): Add new bit to keep track of when to\n+\tsuppress blanks for g0 formatting.\n+\t* io/transfer.c (formatted_transfer_scalar): Always call write_real_g0\n+\tfor g0 formatting.\n+\t* io.c (write.c): Do not use ES formatting and use new bit to suppress\n+\tblanks.\n+\t* io/write_float.def (output_float): Adjust the location of setting the\n+\twidth so that it can be adjusted when suppressing blanks.  Set number of\n+\tblanks to zero when dtp->u.p.g0_no_blanks is set. Do some minor code\n+\tclean-up and add some white space for readability.\n+\t\n+2008-12-18  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n+\n+\t* configure: Regenerate.\n+\n+2008-12-13  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libfortran/38504\n+\tio/write.c (write_decimal): Skip extra sign '-' at beginning of string\n+\treturned by gfc_itoa.\n+\n+2008-12-08  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libfortran/38430\n+\t* io/transfer.c (data_transfer_init): Move constraint check for REC=\n+\tand STREAM access into condition for other REC= constraints to simplify.\n+\tComment out this constraint to avoid breaking compatibility with 4.3\n+\tuntil later.  Added a TODO for above comment and this one.\n+\tFix test for max pos.\n+\n+2008-12-06  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libfortran/38291\n+\t* io/transfer.c (data_transfer_init): Add fbuf_flush inadvertently\n+\tommitted.  Add check for invalid use of REC= with ACCESS=\"stream\".  Fix\n+\tcomment.\n+\n+2008-12-06  Adam Nemet  <anemet@caviumnetworks.com>\n+\n+\t* runtime/main.c (store_exe_path): Don't crash if argv0 is NULL.\n+\n+2008-12-05  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libfortran/38291\n+\t* io/transfer.c (data_transfer_init): Add checks for POS= valid range.\n+\tAdd check for unit opened with ACCESS=\"stream\". Flush and seek if\n+\tcurrent stream position does not match. Check ENDFILE on read.\n+\n+2008-12-04  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR fortran/38285\n+\t* write_float.def (WRITE_FLOAT): Zero the float value for special case\n+\tonly if\tscale_factor = 0.\n+\t\n+2008-11-23  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR libfortran/38234\n+\t* intrinsics/reshape_generic.c (reshape_internal):\n+\tSource can be larger than shape.\n+\t* m4/reshape.m4:  Likewise.\n+\t* generated/reshape_c10.c Regenerated.\n+\t* generated/reshape_c16.c Regenerated.\n+\t* generated/reshape_c4.c Regenerated.\n+\t* generated/reshape_c8.c Regenerated.\n+\t* generated/reshape_i16.c Regenerated.\n+\t* generated/reshape_i4.c Regenerated.\n+\t* generated/reshape_i8.c Regenerated.\n+\t* generated/reshape_r10.c Regenerated.\n+\t* generated/reshape_r16.c Regenerated.\n+\t* generated/reshape_r4.c Regenerated.\n+\t* generated/reshape_r8.c Regenerated.\n+\n+2008-11-22  Danny Smith  <dannysmith@users.sourceforge.net>\n+\n+\t* libgfortran.h (__mingw_snprintf): Declare with gnu_printf\n+\tformat attribute.\n+\n+\n+2008-11-22  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR libfortran/38225\n+\t* intrinsics/reshape_generic.c (reshape_internal):\n+\tUse all dimensions of source for bounds checking.\n+\t* m4/reshape.m4:  Likewise.\n+\t* generated/reshape_c10.c Regenerated.\n+\t* generated/reshape_c16.c Regenerated.\n+\t* generated/reshape_c4.c Regenerated.\n+\t* generated/reshape_c8.c Regenerated.\n+\t* generated/reshape_i16.c Regenerated.\n+\t* generated/reshape_i4.c Regenerated.\n+\t* generated/reshape_i8.c Regenerated.\n+\t* generated/reshape_r10.c Regenerated.\n+\t* generated/reshape_r16.c Regenerated.\n+\t* generated/reshape_r4.c Regenerated.\n+\t* generated/reshape_r8.c Regenerated.\n+\n+2008-11-22  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR libfortran/37839\n+\t* io/io.h (IOPARM_INQUIRE_HAS_ROUND, IOPARM_INQUIRE_HAS_SIGN,\n+\tIOPARM_INQUIRE_HAS_PENDING): Adjust values.\n+\t(st_parameter_inquire): Reorder and fix types of round, sign and\n+\tpending fields.\n+\t(st_parameter_43, st_parameter_44): Removed.\n+\t(st_parameter_dt): Put back struct definition directly to u.p\n+\tdeclaration.  Change type of u.p.size_used from gfc_offset to\n+\tGFC_IO_INT.  Decrease back size of u.pad to 16 pointers and\n+\t32 ints.  Put id, pos, asynchronous, blank, decimal, delim,\n+\tpad, round and sign fields after the union.\n+\t* io/inquire.c (inquire_via_unit, inquire_via_filename): Only read\n+\tflags2 if it is defined.\n+\t* io/transfer.c (read_sf, read_block_form, write_block): Cast\n+\tadditions to size_used to GFC_IO_INT instead of gfc_offset.\n+\t(data_transfer_init): Clear whole u.p struct.  Adjust\n+\tfor moving id, pos, asynchronous, blank, decimal, delim, pad,\n+\tround and sign fields from u.p directly into st_parameter_dt.\n+\t(finalize_transfer): Don't cast size_used to GFC_IO_INT.\n+\t* io/file_pos.c (st_endfile): Clear whole u.p struct.\n+\n+2008-11-20  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libfortran/37472\n+\t* io/write_float.def (output_float_FMT_G_): Adjust conversion of\n+\tG format specification to F format.\n+\n+2008-11-18  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR libfortran/38135\n+\t* m4/reshape.m4:  Correct bounds checking when PAD is present.\n+\tTreat PAD as if it were SOURCE when SOURCE is empty.\n+\t* intrinsics/reshape_generic.c:  Likewise.\n+\t* generated/reshape_c10.c Regenerated.\n+\t* generated/reshape_c16.c Regenerated.\n+\t* generated/reshape_c4.c Regenerated.\n+\t* generated/reshape_c8.c Regenerated.\n+\t* generated/reshape_i16.c Regenerated.\n+\t* generated/reshape_i4.c Regenerated.\n+\t* generated/reshape_i8.c Regenerated.\n+\t* generated/reshape_r10.c Regenerated.\n+\t* generated/reshape_r16.c Regenerated.\n+\t* generated/reshape_r4.c Regenerated.\n+\t* generated/reshape_r8.c Regenerated.\n+\n+2008-11-16  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libfortran/38097\n+\t* io/read.c (read_f): Initialize exponent. Fix comment. Set loop\n+\tconditions for BZ/BN.\n+\t* io/unit.c (get_internal_unit): Initialize flags.blank.\n+\t* io/transfer.c (data_transfer_init): Fix whitespace.\n+\n+2008-11-15  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libfortran/37294\n+\t* io/write.c (namelist_write_newline): Use array loop specification to\n+\tadvance to next internal array unit record. (namelist_write): Adjust to\n+\taccomodate the internal array unit behavior.\n+\n+2008-11-01  Dennis Wassel  <dennis.wassel@gmail.com>\n+\n+\tPR fortran/37159\n+\t* intrinsics/random.c: Added comment to adapt check.c, should\n+\tkiss_size change.\n+\tFew cosmetic changes to existing comments.\n+\n+2008-10-22  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libfortran/37707\n+\t* io/list_read.c (read_character): Remove code to look ahead in namelist\n+\treads to descriminate non-delimited strings from namelist objects.\n+\t* io/write.c (namelist_write): Delimit character strings with quote or\n+\tapostrophe, defaulting to quote.\n+\n+2008-10-21  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR libfortran/34670\n+\t* intrinsics/transpose_generic.c:  Implement bounds checking.\n+\t* m4/transpose.m4:  Likewise.\n+\t* generated/transpose_c8.c: Regenerated.\n+\t* generated/transpose_c16.c: Regenerated.\n+\t* generated/transpose_r10.c: Regenerated.\n+\t* generated/transpose_i8.c: Regenerated.\n+\t* generated/transpose_c10.c: Regenerated.\n+\t* generated/transpose_r4.c: Regenerated.\n+\t* generated/transpose_c4.c: Regenerated.\n+\t* generated/transpose_i16.c: Regenerated.\n+\t* generated/transpose_i4.c: Regenerated.\n+\t* generated/transpose_r8.c: Regenerated.\n+\t* generated/transpose_r16.c: Regenerated.\n+\n+2008-10-19  Jerry DeLisle  <jvdelisle@gcc.gnu.org\n+\n+\tPR libfortran/37834\n+\t* io/write_float.def (output_float): Emit '0.' for special case of\n+\tformat specifier 'f0.0' and value of zero. Likewise emit '0' for 'f1.0'.\n+\n+2008-10-17  Jerry DeLisle  <jvdelisle@gcc.gnu.org\n+\n+\tPR libfortran/37863\n+\t* io/write_float.def (WRITE_FLOAT): Round to 1.0 correctly.\n+\t* io/io.h (st_parameter_44): Fix id type declaration.\n+\n+2008-10-16  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\t* io/file_pos.c (unformatted_backspace): Normal case is\n+\tGFC_CONVERT_NATIVE.\n+\t* io/transfer.c (read_sf):  Mark paths leading to generate_error()\n+\tas unlikely.\n+\t(readl_block_form):  Likewise.\n+\t(read_block_direct):  Likewise.\n+\t(write_block):  Likewise.\n+\t(write_buf):  Likewise.\n+\t(us_read):  Likewise.  Normal case is GFC_CONVERT_NATIVE.\n+\t(next_record_w_unf):  Mark paths leading to generate_error()\n+\tas unlikely.\n+\n+2008-10-16  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR libfortran/34670\n+\t* generated/spread_r4.c: Regenerated.\n+\n+2008-10-15  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR libfortran/34670\n+\t* intrinsics/reshape_generic.c:  Add bounds checking.\n+\t* m4/reshape.m4:  Likewise.\n+\t* generated/reshape_c10.c: Regenerated.\n+\t* generated/reshape_c16.c: Regenerated.\n+\t* generated/reshape_c4.c: Regenerated.\n+\t* generated/reshape_c8.c: Regenerated.\n+\t* generated/reshape_i16.c: Regenerated.\n+\t* generated/reshape_i4.c: Regenerated.\n+\t* generated/reshape_i8.c: Regenerated.\n+\t* generated/reshape_r10.c: Regenerated.\n+\t* generated/reshape_r16.c: Regenerated.\n+\t* generated/reshape_r4.c: Regenerated.\n+\t* generated/reshape_r8.c: Regenerated.\n+\t* generated/spread_r4.c: Regenerated.\n+\n+2008-10-13  Jerry DeLisle  <jvdelisle@gcc.gnu.org\n+\n+\tPR libfortran/37083\n+\t* io/list_read.c (next_char): Simplify EOF tests and set endfile flag.\n+\t(finish_list_read): Add EOF check.\n+\n+2008-10-09  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR libfortran/37753\n+\t* io/transfer.c (unformatted_read):  CONVERT_NATIVE\n+\tis the usual case.  Check for kind==1 for non-byte-reversing\n+\toperation.\n+\t(unformatted_write):  Likewise.\n+\n+2008-10-08  Jerry DeLisle  <jvdelisle@gcc.gnu.org\n+\n+\tPR libfortran/37707\n+\t* io/list_read.c (nml_get_obj_data): If the first namelist object rank\n+\tis greater than zero, call nml_object_read with the first object rather\n+\tthan the sub-object.\n+\n+2008-09-26  Peter O'Gorman  <pogma@thewrittenword.com>\n+\t    Steve Ellcey  <sje@cup.hp.com>\n+\n+\t* configure: Regenerate for new libtool.\n+\t* Makefile.in: Ditto.\n+\n+2008-09-25  Jerry DeLisle  <jvdelisle@gcc.gnu.org\n+\n+\tPR libfortran/37498\n+\t* list_read.c (eat_separator): Revert previous patch and move\n+\tdelim_status, decimal_status, and pad_status to gfc_unit.\n+\t(parse_real): Ditto. (read_real): Ditto.\n+\t* read.c (read_a): Likewise. (read_a_char4): Likewise.\n+\t(read_f): Likewise.\n+\t* inquire.c (inquire_via_unit): Add missing check for\n+\tIOPARM_INQUIRE_HAS_FLAGS2. (inquire_via_filename): Likewise.\n+\t* io.h (unit_sign_s): Move delim_status, decimal_status, and pad_status\n+\tto gfc_unit.\n+\t* transfer.c (read_sf): Ditto. (read_block_form): Ditto.\n+\t(formatted_transfer_scalar): Ditto. (data_transfer_init): Ditto.\n+\t* write.c (write_default_char4): Ditto. (write_utf8_char4): Ditto.\n+\t(write_character): Ditto. (write_real_g0): Ditto.\n+\t(list_formatted_write_scalar): Ditto. (nml_write_obj): Ditto.\n+\t(namelist_write): Ditto.\n+\t* write_float.def (calculate_sign): Ditto. (output_float): Ditto.\n+\n+2008-09-24  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* runtime/compile_options.c (init_compile_options):\n+\tSync flags with front end.\n+\n+2008-09-22  Jerry DeLisle  <jvdelisle@gcc.gnu.org\n+\n+\tPR libfortran/37498\n+\t* file_pos (st_endfile): Clear memory only for libfortran 4.3 private\n+\tarea.\n+\t* list_read.c (eat_separator): Only access F2003 I/O parameters if\n+\tIOPARM_DT_HAS_F2003 bit is set. (parse_real): Ditto.\n+\t(read_real): Ditto.\n+\t* read.c (read_a): Likewise. (read_a_char4): Likewise though not\n+\tstrictly necessary. (read_f): Likewise.\n+\t* io.h (unit_sign_s): New enumerator to allow duplication of\n+\tst_parameter structures. (IOPARM_DT_HAS_F2003): New mask bit.\n+\t(st_parameter_43): New structure copied from 4.3 version of \n+\tst_paramater_dt private section. (st_parameter_44): New structure with\n+\tF2003 items added. (st_parameter_dt): Modified to create union of new\n+\tand old structures to allow correct memory setting for 4.3 ABI\n+\tcompatibility. Bumped the pad size.\n+\t* transfer.c (read_sf): Do not use F2003 I/O memory areas unless\n+\tIOPARM_DT_HAS_F2003 bit has been set. (read_block_form): Ditto.\n+\t(formatted_transfer_scalar): Ditto. (data_transfer_init): Ditto and\n+\tadd comment, fix formatting.\n+\t* write.c (write_default_char4): Likewise though not strictly necessary.\n+\t(write_utf8_char4): Ditto. (write_character): Ditto.\n+\t(write_real_g0): Ditto. (list_formatted_write_scalar): Ditto.\n+\t(nml_write_obj): Ditto. (namelist_write): Ditto.\n+\t* write_float.def (calculate_sign): Eliminate warning by including all\n+\tcases in switch. (output_float): Output only decimal point of F2003 flag\n+\tis not set.\n+\n+2008-09-10  Tobias Burnus  <burnus@net-b.de>\n+\t    H. J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* mk-sik-inc.sh: Make -Wunused-variable proof.\n+\t* mk-srk-inc.sh: Make -Wunused-variable proof.\n+\n+2008-09-10  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* mk-kinds-h.sh: Make -Wunused-variable proof.\n+\n+2008-09-07  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/37203\n+\t* intrinsics/reshape_generic.c:  Add checking on\n+\tout-of-bounds and duplicate values of order argument.\n+\t* m4/reshape.m4:  Likewise.\n+\t* generated/reshape_c10.c: Regenerated.\n+\t* generated/reshape_c16.c: Regenerated.\n+\t* generated/reshape_c4.c: Regenerated.\n+\t* generated/reshape_c8.c: Regenerated.\n+\t* generated/reshape_i16.c: Regenerated.\n+\t* generated/reshape_i4.c: Regenerated.\n+\t* generated/reshape_i8.c: Regenerated.\n+\t* generated/reshape_r10.c: Regenerated.\n+\t* generated/reshape_r16.c: Regenerated.\n+\t* generated/reshape_r4.c: Regenerated.\n+\t* generated/reshape_r8.c: Regenerated.\n+\n+2008-09-06  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* libgfortran.h (likely,unlikely): New makros.\n+\t(runtime_warning_at,__mingw_snprintf): Add __attribute__(format()).\n+\t* m4/spread.m4 (spread_'rtype_code`): Use unlikely for bounds_check.\n+\t* m4/iforeach.m4 (name`'rtype_qual`_'atype_code): Ditto.\n+\t* m4/matmull.m4 (matmul_'rtype_code`): Ditto.\n+\t* m4/ifunction_logical.m4 (name`'rtype_qual`_'atype_code): Ditto.\n+\t* m4/ifunction.m4 (name`'rtype_qual`_'atype_code): Ditto.\n+\t* m4/matmul.m4 (matmul_'rtype_code`): Ditto.\n+\n+\t* generated/minval_r8.c: Regenerated.\n+\t* generated/spread_r10.c: Regenerated.\n+\t* generated/minloc1_16_r16.c: Regenerated.\n+\t* generated/maxloc1_4_r8.c: Regenerated.\n+\t* generated/sum_i8.c: Regenerated.\n+\t* generated/any_l16.c: Regenerated.\n+\t* generated/spread_i8.c: Regenerated.\n+\t* generated/maxval_i2.c: Regenerated.\n+\t* generated/any_l2.c: Regenerated.\n+\t* generated/product_r4.c: Regenerated.\n+\t* generated/maxloc1_8_i4.c: Regenerated.\n+\t* generated/maxloc0_4_r4.c: Regenerated.\n+\t* generated/all_l1.c: Regenerated.\n+\t* generated/matmul_r8.c: Regenerated.\n+\t* generated/product_i2.c: Regenerated.\n+\t* generated/minloc0_4_r16.c: Regenerated.\n+\t* generated/minloc0_4_i1.c: Regenerated.\n+\t* generated/maxloc0_4_r16.c: Regenerated.\n+\t* generated/maxloc0_4_i2.c: Regenerated.\n+\t* generated/minloc1_8_r16.c: Regenerated.\n+\t* generated/maxloc1_8_r16.c: Regenerated.\n+\t* generated/maxloc0_8_i8.c: Regenerated.\n+\t* generated/sum_r16.c: Regenerated.\n+\t* generated/sum_i1.c: Regenerated.\n+\t* generated/minloc1_4_r8.c: Regenerated.\n+\t* generated/maxloc1_16_r16.c: Regenerated.\n+\t* generated/minloc1_16_i4.c: Regenerated.\n+\t* generated/maxloc1_16_i4.c: Regenerated.\n+\t* generated/minloc0_16_i8.c: Regenerated.\n+\t* generated/spread_i1.c: Regenerated.\n+\t* generated/maxloc0_16_i8.c: Regenerated.\n+\t* generated/maxval_r16.c: Regenerated.\n+\t* generated/product_c10.c: Regenerated.\n+\t* generated/minloc1_8_i4.c: Regenerated.\n+\t* generated/minloc0_16_i16.c: Regenerated.\n+\t* generated/matmul_r16.c: Regenerated.\n+\t* generated/minloc0_4_r4.c: Regenerated.\n+\t* generated/all_l2.c: Regenerated.\n+\t* generated/product_c4.c: Regenerated.\n+\t* generated/sum_r4.c: Regenerated.\n+\t* generated/minloc0_4_i2.c: Regenerated.\n+\t* generated/spread_c10.c: Regenerated.\n+\t* generated/maxloc0_8_i1.c: Regenerated.\n+\t* generated/spread_r4.c: Regenerated.\n+\t* generated/minloc0_8_i8.c: Regenerated.\n+\t* generated/matmul_c8.c: Regenerated.\n+\t* generated/all_l16.c: Regenerated.\n+\t* generated/minloc1_16_r10.c: Regenerated.\n+\t* generated/sum_i2.c: Regenerated.\n+\t* generated/minloc0_16_i1.c: Regenerated.\n+\t* generated/maxloc0_16_i1.c: Regenerated.\n+\t* generated/maxloc1_8_r8.c: Regenerated.\n+\t* generated/minval_i16.c: Regenerated.\n+\t* generated/spread_i2.c: Regenerated.\n+\t* generated/maxval_i4.c: Regenerated.\n+\t* generated/minval_i8.c: Regenerated.\n+\t* generated/any_l4.c: Regenerated.\n+\t* generated/maxloc1_4_i8.c: Regenerated.\n+\t* generated/maxloc0_16_i16.c: Regenerated.\n+\t* generated/maxloc0_8_r4.c: Regenerated.\n+\t* generated/minloc1_4_i16.c: Regenerated.\n+\t* generated/maxloc1_4_i16.c: Regenerated.\n+\t* generated/minloc0_4_r10.c: Regenerated.\n+\t* generated/minloc0_8_i16.c: Regenerated.\n+\t* generated/maxloc0_4_r10.c: Regenerated.\n+\t* generated/maxloc0_8_i16.c: Regenerated.\n+\t* generated/minloc1_8_r10.c: Regenerated.\n+\t* generated/product_i4.c: Regenerated.\n+\t* generated/minloc0_16_r4.c: Regenerated.\n+\t* generated/sum_c16.c: Regenerated.\n+\t* generated/maxloc1_8_r10.c: Regenerated.\n+\t* generated/maxloc0_16_r4.c: Regenerated.\n+\t* generated/minloc1_16_r8.c: Regenerated.\n+\t* generated/minloc0_8_i1.c: Regenerated.\n+\t* generated/maxloc0_4_i4.c: Regenerated.\n+\t* generated/maxloc1_16_r8.c: Regenerated.\n+\t* generated/maxloc0_8_i2.c: Regenerated.\n+\t* generated/sum_r10.c: Regenerated.\n+\t* generated/count_4_l.c: Regenerated.\n+\t* generated/sum_c4.c: Regenerated.\n+\t* generated/count_8_l.c: Regenerated.\n+\t* generated/maxloc1_16_r10.c: Regenerated.\n+\t* generated/matmul_i8.c: Regenerated.\n+\t* generated/minloc0_16_i2.c: Regenerated.\n+\t* generated/minloc1_8_r8.c: Regenerated.\n+\t* generated/maxloc0_16_i2.c: Regenerated.\n+\t* generated/spread_c4.c: Regenerated.\n+\t* generated/matmul_c16.c: Regenerated.\n+\t* generated/maxval_r10.c: Regenerated.\n+\t* generated/minval_i1.c: Regenerated.\n+\t* generated/maxloc1_4_i1.c: Regenerated.\n+\t* generated/matmul_r10.c: Regenerated.\n+\t* generated/minloc1_4_i8.c: Regenerated.\n+\t* generated/minloc0_8_r4.c: Regenerated.\n+\t* generated/matmul_l4.c: Regenerated.\n+\t* generated/product_i16.c: Regenerated.\n+\t* generated/minloc0_16_r16.c: Regenerated.\n+\t* generated/all_l4.c: Regenerated.\n+\t* generated/minloc0_4_i4.c: Regenerated.\n+\t* generated/minloc0_8_i2.c: Regenerated.\n+\t* generated/matmul_i1.c: Regenerated.\n+\t* generated/minval_r4.c: Regenerated.\n+\t* generated/maxloc1_4_r4.c: Regenerated.\n+\t* generated/spread_i16.c: Regenerated.\n+\t* generated/sum_i4.c: Regenerated.\n+\t* generated/maxval_r8.c: Regenerated.\n+\t* generated/spread_i4.c: Regenerated.\n+\t* generated/minloc1_4_i1.c: Regenerated.\n+\t* generated/minval_r16.c: Regenerated.\n+\t* generated/minval_i2.c: Regenerated.\n+\t* generated/maxloc1_4_i2.c: Regenerated.\n+\t* generated/product_r8.c: Regenerated.\n+\t* generated/maxloc1_8_i8.c: Regenerated.\n+\t* generated/maxloc0_4_r8.c: Regenerated.\n+\t* generated/maxloc0_16_r16.c: Regenerated.\n+\t* generated/matmul_r4.c: Regenerated.\n+\t* generated/sum_c10.c: Regenerated.\n+\t* generated/minloc1_4_r16.c: Regenerated.\n+\t* generated/maxloc1_4_r16.c: Regenerated.\n+\t* generated/minloc0_8_r16.c: Regenerated.\n+\t* generated/maxloc0_8_r16.c: Regenerated.\n+\t* generated/count_1_l.c: Regenerated.\n+\t* generated/maxloc0_8_i4.c: Regenerated.\n+\t* generated/matmul_i2.c: Regenerated.\n+\t* generated/minloc1_4_r4.c: Regenerated.\n+\t* generated/matmul_c10.c: Regenerated.\n+\t* generated/minloc0_16_i4.c: Regenerated.\n+\t* generated/maxloc0_16_i4.c: Regenerated.\n+\t* generated/minloc1_16_i8.c: Regenerated.\n+\t* generated/maxloc1_16_i8.c: Regenerated.\n+\t* generated/minloc1_4_i2.c: Regenerated.\n+\t* generated/matmul_l16.c: Regenerated.\n+\t* generated/maxloc1_8_i1.c: Regenerated.\n+\t* generated/minloc0_16_r10.c: Regenerated.\n+\t* generated/minloc1_8_i8.c: Regenerated.\n+\t* generated/minloc0_4_r8.c: Regenerated.\n+\t* generated/product_r16.c: Regenerated.\n+\t* generated/product_c8.c: Regenerated.\n+\t* generated/sum_r8.c: Regenerated.\n+\t* generated/minloc0_8_i4.c: Regenerated.\n+\t* generated/matmul_c4.c: Regenerated.\n+\t* generated/minloc1_16_i16.c: Regenerated.\n+\t* generated/spread_r8.c: Regenerated.\n+\t* generated/maxloc1_8_r4.c: Regenerated.\n+\t* generated/minloc1_16_i1.c: Regenerated.\n+\t* generated/maxloc1_16_i1.c: Regenerated.\n+\t* generated/spread_r16.c: Regenerated.\n+\t* generated/minval_r10.c: Regenerated.\n+\t* generated/count_16_l.c: Regenerated.\n+\t* generated/minval_i4.c: Regenerated.\n+\t* generated/minloc1_8_i1.c: Regenerated.\n+\t* generated/maxloc1_4_i4.c: Regenerated.\n+\t* generated/maxloc1_8_i2.c: Regenerated.\n+\t* generated/maxval_i8.c: Regenerated.\n+\t* generated/any_l8.c: Regenerated.\n+\t* generated/maxloc0_16_r10.c: Regenerated.\n+\t* generated/minloc0_4_i16.c: Regenerated.\n+\t* generated/maxloc0_8_r8.c: Regenerated.\n+\t* generated/maxloc0_4_i16.c: Regenerated.\n+\t* generated/minloc1_4_r10.c: Regenerated.\n+\t* generated/minloc1_8_i16.c: Regenerated.\n+\t* generated/maxloc1_4_r10.c: Regenerated.\n+\t* generated/maxloc1_8_i16.c: Regenerated.\n+\t* generated/minloc0_8_r10.c: Regenerated.\n+\t* generated/maxloc0_8_r10.c: Regenerated.\n+\t* generated/minloc1_16_r4.c: Regenerated.\n+\t* generated/maxloc1_16_r4.c: Regenerated.\n+\t* generated/minloc0_16_r8.c: Regenerated.\n+\t* generated/product_i8.c: Regenerated.\n+\t* generated/maxloc0_16_r8.c: Regenerated.\n+\t* generated/sum_i16.c: Regenerated.\n+\t* generated/count_2_l.c: Regenerated.\n+\t* generated/maxloc0_4_i8.c: Regenerated.\n+\t* generated/maxloc1_16_i16.c: Regenerated.\n+\t* generated/matmul_i4.c: Regenerated.\n+\t* generated/minloc1_8_r4.c: Regenerated.\n+\t* generated/sum_c8.c: Regenerated.\n+\t* generated/minloc1_16_i2.c: Regenerated.\n+\t* generated/maxloc1_16_i2.c: Regenerated.\n+\t* generated/maxval_i16.c: Regenerated.\n+\t* generated/spread_c8.c: Regenerated.\n+\t* generated/matmul_i16.c: Regenerated.\n+\t* generated/minloc1_4_i4.c: Regenerated.\n+\t* generated/maxval_i1.c: Regenerated.\n+\t* generated/minloc1_8_i2.c: Regenerated.\n+\t* generated/any_l1.c: Regenerated.\n+\t* generated/product_c16.c: Regenerated.\n+\t* generated/minloc0_8_r8.c: Regenerated.\n+\t* generated/matmul_l8.c: Regenerated.\n+\t* generated/product_r10.c: Regenerated.\n+\t* generated/product_i1.c: Regenerated.\n+\t* generated/all_l8.c: Regenerated.\n+\t* generated/maxloc0_4_i1.c: Regenerated.\n+\t* generated/minloc0_4_i8.c: Regenerated.\n+\t* generated/spread_c16.c: Regenerated.\n+\t* generated/maxval_r4.c: Regenerated.\n+\n+2008-09-01  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libfortran/37301\n+\tPR libfortran/37228\n+\t* io/io.h (write_real_g0): Declare new function to handle g0.d format.\n+\t* io/transfer.c (formatted_transfer_scalar): Use new function.\n+\t* io/format.c (parse_format_list): Enable g0.d.\n+\t* io/write.c (write_a_char4): Delete unused var.\n+\t(set_fnode_default): New function to set the default fnode w, d, and e\n+\tfactored from write_real. (write_real): Use new factored function.\n+\t(write_real_g0): New function that sets d to that passed by g0.d format\n+\tspecifier and set format to ES.  Default values for w and e are used\n+\tfrom the new function, set_fnode_default.\n+\n+2008-09-01  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\t* runtime/error.c: Fix cast for printf.\n+\n+2008-08-30  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libfortran/36895\n+\t* io/write.c (namelist_write_newline): New function to correctly mark\n+\tnext records in both external and internal units.\n+\t(nml_write_obj): Use new function.\n+\t(namelist_write: Use new function.\n+\n+2008-08-19  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR libfortran/35863\n+\t* io/write.c (write_a_char4): Add missing variable declaration\n+\tin HAVE_CRLF block.\n+\n+2008-08-15  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libfortran/35863\n+\t* intrinsics/selected_char_kind.c: Enable iso_10646.\n+\t* io/read.c (typedef uchar): New type.\n+\t(read_utf8): New function to read a single UTF-8 encoded character.\n+\t(read_utf8_char1): New function to read UTF-8 into a KIND=1 string.\n+\t(read_default_char1): New functio to read default into KIND=1 string.\n+\t(read_utf8_char4): New function to read UTF-8 into a KIND=4 string.\n+\t(read_default_char4): New function to read UTF-8 into a KIND=4 string.\n+\t(read_a): Modify to use the new functions.\n+\t(read_a_char4): Modify to use the new functions.\n+\t* io/write.c (error.h): Add include. (typedef uchar): New type.\n+\t(write_default_char4): New function to default write KIND=4 string.\n+\t(write_utf8_char4): New function to UTF-8 write KIND=4 string.\n+\t(write_a_char4): Modify to use new functions.\n+\t(write_character): Modify to use new functions.\n+\n+2008-08-14  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR libfortran/37123\n+\t* intrinsics/cshift0.c (cshift0): Fix 2 typos.\n+\n+2008-08-14  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR libfortran/36886\n+\t* Makefile.am:  Added $(i_cshift0_c).\n+\tAdded $(i_cshift0_c) to gfor_built_specific_src.\n+\tAdd rule to build from cshift0.m4.\n+\t* Makefile.in:  Regenerated.\n+\t* libgfortran.h:  Addedd prototypes for cshift0_i1,\n+\tcshift0_i2, cshift0_i4, cshift0_i8, cshift0_i16,\n+\tcshift0_r4, cshift0_r8, cshift0_r10, cshift0_r16,\n+\tcshift0_c4, cshift0_c8, cshift0_c10, cshift0_c16.\n+\tDefine Macros GFC_UNALIGNED_C4 and GFC_UNALIGNED_C8.\n+\t* intrinsics/cshift0.c:  Remove helper functions for\n+\tthe innter shift loop.\n+\t(cshift0):  Call specific functions depending on type\n+\tof array argument.  Only call specific functions for\n+\tcorrect alignment for other types.\n+\t* m4/cshift0.m4:  New file.\n+\t* generated/cshift0_i1.c:  New file.\n+\t* generated/cshift0_i2.c:  New file.\n+\t* generated/cshift0_i4.c:  New file.\n+\t* generated/cshift0_i8:.c  New file.\n+\t* generated/cshift0_i16.c:  New file.\n+\t* generated/cshift0_r4.c:  New file.\n+\t* generated/cshift0_r8.c:  New file.\n+\t* generated/cshift0_r10.c:  New file.\n+\t* generated/cshift0_r16.c:  New file.\n+\t* generated/cshift0_c4.c:  New file.\n+\t* generated/cshift0_c8.c:  New file.\n+\t* generated/cshift0_c10.c:  New file.\n+\t* generated/cshift0_c16.c:  New file.\n+\n+2008-07-27  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/36132\n+\tPR fortran/29952\n+\tPR fortran/36909\n+\t* runtime/error.c: New function runtime_error_at.\n+\t* gfortran.map: Ditto.\n+\t* libgfortran.h: Ditto.\n+\n+2008-07-22  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR fortran/36582\n+\t* io/list_read.c: If variable rank is zero, do not adjust the found\n+\tnamelist object pointer.\n+\n+2008-07-22  Daniel Kraft  <d@domob.eu>\n+\n+\tPR fortran/29835\n+\t* io/format.c (struct format_data):  New member error_element.\n+\t(unexpected_element):  Added '%c' to message.\n+\t(next_char):  Keep track of last parsed character in fmt->error_element.\n+\t(format_error):  If the message is unexpected_element, output the\n+\toffending character, too.\n+\n+2008-07-22  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR libfortran/36890\n+\t* io/file_pos.c:  Declare READ_CHUNK as signed to avoid\n+\tsigned/unsigned comparison warning in formatted_backspace.\n+\n+2008-07-21  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR libfortran/36773\n+\t* intrinsics/cshift0.c (cshift0):  Return early if size of array\n+\tis zero.\n+\t* intrinsics/eoshift0.c (eoshift0):  Return early if size of\n+\treturn array is zero.\n+\t* intrinsics/eoshift2.c (eoshift2):  Likewise.\n+\t* m4/eoshift1.m4 (eoshift1):  Return early if size of array\n+\tis zero.\n+\t* m4/eoshift3.m4 (eoshift3):  Likewise.\n+\t* m4/eoshift2.m4 (eoshift2):  Return early if size of return\n+\tarray is zero.\n+\t* m4/eoshift4.m4 (eoshift2):  Return early if size of return\n+\tarray is zero.\n+\t* generated/cshift1_16.c: Regenerated.\n+\t* generated/cshift1_4.c: Regenerated.\n+\t* generated/cshift1_8.c: Regenerated.\n+\t* generated/eoshift1_16.c: Regenerated.\n+\t* generated/eoshift1_4.c: Regenerated.\n+\t* generated/eoshift1_8.c: Regenerated.\n+\t* generated/eoshift3_16.c: Regenerated.\n+\t* generated/eoshift3_4.c: Regenerated.\n+\t* generated/eoshift3_8.c: Regenerated.\n+\n+2008-07-20  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR fortran/36857\n+\t* io/write_float.def: Comment out locale dependent code and fix general\n+\tcomments.\n+\t\n+2008-07-07  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/36341\n+\tPR fortran/34670\n+\t* m4/matmul.m4:  Add bounds checking.\n+\t* m4/matmull.m4:  Likewise.\n+\t* generated/matmul_c10.c: Regenerated.\n+\t* generated/matmul_c16.c: Regenerated.\n+\t* generated/matmul_c4.c: Regenerated.\n+\t* generated/matmul_c8.c: Regenerated.\n+\t* generated/matmul_i1.c: Regenerated.\n+\t* generated/matmul_i16.c: Regenerated.\n+\t* generated/matmul_i2.c: Regenerated.\n+\t* generated/matmul_i4.c: Regenerated.\n+\t* generated/matmul_i8.c: Regenerated.\n+\t* generated/matmul_l16.c: Regenerated.\n+\t* generated/matmul_l4.c: Regenerated.\n+\t* generated/matmul_l8.c: Regenerated.\n+\t* generated/matmul_r10.c: Regenerated.\n+\t* generated/matmul_r16.c: Regenerated.\n+\t* generated/matmul_r4.c: Regenerated.\n+\t* generated/matmul_r8.c: Regenerated.\n+\n+2008-07-07  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n+\n+\t* acinclude.m4 (LIBGFOR_CHECK_GTHR_DEFAULT): Fix configure cache\n+\tvariable name.\n+\t* configure: Regenerate.\n+\n+2008-07-01  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR fortran/36676\n+\t* io/list_read.c (find_nml_name): Use eat_separator instead of eat_line.\n+\t\n+2008-06-28  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR fortran/36657\n+\t* io/list_read.c (read_character): Check for '!' along with separators.\n+\t(find_nml_name): Likewise and eat the comment if found.\n+\n+2008-06-17  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n+\n+\t* configure: Regenerate.\n+\n+2008-06-16  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR fortran/36546\n+\t* io/list_read.c (eat_separator): Add tab character to condition\n+\tfor looping past whitespace.\n+\n+2008-06-14  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR fortran/36515\n+\t* libgfortran.h (compile_options_t): Add int range_check to structure.\n+\t* runtime/compile_options.c (set_options): Add range_check option.\n+\t(init_compile_options): Likewise.\n+\t*io/read.c (read_decimal): Change overflow checks to include\n+\trange_check.\n+\t\n+2008-06-13  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR fortran/36538\n+\t* io/list_read.c (namelist_read): Add eat_separator to eliminate leading\n+\ttabs.\n+\n+2008-06-13  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR fortran/35863\n+\t* libgfortran.h: Change l8_to_l4_offset to big_endian and add endian_off.\n+\t* runtime/main.c: Fix error in comment. Change l8_to_l4_offset to\n+\tbig_endian. (determine_endianness): Add endian_off and set its value\n+\taccording to big_endian.\n+\t* gfortran.map: Add symbol for new _gfortran_transfer_character_wide.\n+\t* io/io.h: Add prototype declarations for new functions.\n+\t* io/list_read.c (list_formatted_read_scalar): Modify to handle kind=4.\n+\t(list_formatted_read): Calculate stride based on kind for character type\n+\tand use it when calling list_formatted_read_scalar.\n+\t* io/inquire.c (inquire_via_unit): Change l8_to_l4_offset to big_endian.\n+\t* io/open.c (st_open): Change l8_to_l4_offset to big_endian.\n+\t* io/read.c (read_a_char4): New function to handle formatted read.\n+\t* io/write.c: Define GFC_CHAR4(x) to improve readability of code.\n+\t(write_a_char4): New function to handle formatted write.\n+\t(write_character): Modify to accept the kind parameter and adjust for\n+\tendianess of the machine. (list_formatted_write): Calculate the stride\n+\tresulting from the kind and adjust the list_formatted_write_scalar call\n+\taccordingly. (nml_write_obj): Adjust calls to write_character.\n+\t(namelist_write): Likewise.\n+\t* io/transfer.c (formatted_transfer_scaler): Rename 'len' argument to\n+\t'kind' argument to better describe what it is. Add calls to new\n+\tfunctions for kind == 4. (formatted_transfer): Modify to handle the case\n+\tof type character and kind equals 4 to pass in the kind to the transfer\n+\troutines. (transfer_character_wide): Add this new function.\n+\t(transfer_array): Don't set kind to the character string length. Adjust\n+\tstrides bases on character kind.\n+\t(unformatted_read): Adjust size based on kind for character types.\n+\t(unformatted_write): Likewise. (data_transfer_init): Change\n+\tl8_to_l4_offset to big_endian.\n+\tio/fbuf.c (fbuf_seek): Add cast to eliminate warning.\n+\n+2008-06-13  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* configure.ac (AM_CFLAGS): Remove -Werror again.\n+\t* configure: Regenerate.\n+\n+2008-06-13  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR libgfortran/36518\n+\t* configure.ac (AM_CFLAGS): Add -Werror.\n+\t* configure: Regenerate.\n+\t* m4/ifunction_logical.m4: Cast \"n\" to \"(int)\".\n+\t* generated/any_l16.c: Regenerate.\n+\t* generated/any_l2.c: Regenerate.\n+\t* generated/all_l1.c: Regenerate.\n+\t* generated/all_l2.c: Regenerate.\n+\t* generated/all_l16.c: Regenerate.\n+\t* generated/any_l4.c: Regenerate.\n+\t* generated/count_4_l.c: Regenerate.\n+\t* generated/count_8_l.c: Regenerate.\n+\t* generated/all_l4.c: Regenerate.\n+\t* generated/count_1_l.c: Regenerate.\n+\t* generated/count_16_l.c: Regenerate.\n+\t* generated/any_l8.c: Regenerate.\n+\t* generated/count_2_l.c: Regenerate.\n+\t* generated/any_l1.c: Regenerate.\n+\t* generated/all_l8.c: Regenerate.\n+\n+2008-06-13  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/36495\n+\t* configure.ac (AM_FCFLAGS): Add \"-Werror -fimplicit-none\".\n+\t* configure: (generated) ditto.\n+\t* intrinsics/dprod_r8.f90: Add \"implicit none\".\n+\n+2008-06-07  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libfortran/36420\n+\tPR libfortran/36421\n+\tPR libfortran/36422\n+\t* io/io.h: Add prototype for write_real.\n+\t* io/transfer.c (formatted_transfer_scalar): For FMT_G and width zero,\n+\tuse write_real.\n+\t* io/format.c: Add zero width error message. (parse_format_list): Use\n+\terror message for FMT_A if followed by FMT_ZERO. Use zero width error\n+\tmessage\tfor FMT_G if mode is READ or if -std=f95 or f2003. (fmormat0):\n+\tFix typo in comment.\n+\t* io/write.c(write_a): Set wlen to len if FMT_G\tand length is zero.\n+\t(write_l): Add wlen variable and use it if FMT_G and width is zero.\n+\t(write_decimal): If FMT_G, set m to -1 to flag processor dependent\n+\tformatting. (write_real): Remove static declaration.\n+\n+2008-05-28  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\tPR fortran/36319\n+\t* intrinsics/string_intrinsics_inc.c (string_index): Return\n+\tcorrect value for zero-length substring.\n+\t* intrinsics/cshift0.c: Add _char4 variant.\n+\t* intrinsics/eoshift0.c (eoshift0): Allow filler to be a pattern\n+\twider than a single byte. Add _char4 variant and use above\n+\tfunctionality.\n+\t* intrinsics/eoshift2.c (eoshift2): Likewise.\n+\t* m4/eoshift1.m4: Likewise.\n+\t* m4/eoshift3.m4: Likewise.\n+\t* m4/cshift1.m4: Add _char4 variants.\n+\t* gfortran.map (GFORTRAN_1.1): Add _gfortran_cshift0_1_char4,\n+\t_gfortran_cshift0_2_char4, _gfortran_cshift0_4_char4,\n+\t_gfortran_cshift0_8_char4, _gfortran_cshift1_16_char4,\n+\t_gfortran_cshift1_4_char4, _gfortran_cshift1_8_char4,\n+\t_gfortran_eoshift0_1_char4, _gfortran_eoshift0_2_char4,\n+\t_gfortran_eoshift0_4_char4, _gfortran_eoshift0_8_char4,\n+\t_gfortran_eoshift1_16_char4, _gfortran_eoshift1_4_char4,\n+\t_gfortran_eoshift1_8_char4, _gfortran_eoshift2_1_char4,\n+\t_gfortran_eoshift2_2_char4, _gfortran_eoshift2_4_char4,\n+\t_gfortran_eoshift2_8_char4, _gfortran_eoshift3_16_char4,\n+\t_gfortran_eoshift3_4_char4 and _gfortran_eoshift3_8_char4.\n+\t* generated/eoshift3_4.c: Regenerate.\n+\t* generated/eoshift1_8.c: Regenerate.\n+\t* generated/eoshift1_16.c: Regenerate.\n+\t* generated/cshift1_4.c: Regenerate.\n+\t* generated/eoshift1_4.c: Regenerate.\n+\t* generated/eoshift3_8.c: Regenerate.\n+\t* generated/eoshift3_16.c: Regenerate.\n+\t* generated/cshift1_8.c: Regenerate.\n+\t* generated/cshift1_16.c: Regenerate.\n+\n+2008-05-25  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/32600\n+\t* intrinsics/iso_c_binding.c (c_f_procpointer): Remove.\n+\t* intrinsics/iso_c_binding.h (c_f_procpointer): Remove.\n+\t* gfortran.map (c_f_procpointer): Remove.\n+\n+2008-05-22  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR libgfortran/36302\n+\t* gfortran.map (GFORTRAN_1.1): Add _gfortran_eoshift0_16,\n+\t_gfortran_eoshift0_16_char, _gfortran_eoshift2_16,\n+\t_gfortran_eoshift2_16_char,_gfortran_cshift0_16,\n+\t_gfortran_cshift0_16_char.  Sort alphabetically.\n+\t* intrinsics/eoshift0.c:  Add function for kind=16 integer.\n+\t* intrinsics/eoshift2.c:  Likewise.\n+\t* intrinsics/cshift0.c:  Likewise.\n+\n+2008-05-18  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\t* m4/in_pack.m4 (internal_pack_'rtype_code`):  Destination\n+\tpointer is restrict.\n+\t* m4/transpose.m4 (transpose_'rtype_code`):  Likewise.\n+\t* m4/pack.m4 (pack_'rtype_code`):  Likewise.\n+\t* m4/spread.m4 (spread_'rtype_code`):  Likewise.\n+\t(spread_scalar_'rtype_code`): Likewise.\n+\t* m4/iforeach.m4 (name`'rtype_qual`_'atype_code):  Likewise.\n+\t* m4/eoshift1.m4 (eoshift1):  Likewise.\n+\t* m4/eoshift3.m4 (eoshift3):  Likewise.\n+\t* m4/in_unpack.m4 (internal_unpack_'rtype_ccode`):  Likewise.\n+\t* m4/unpack.m4 (unpack0_'rtype_code`):  Likewise.\n+\t(unpack1_'rtype_code`):  Likewise.\n+\t* intrinsics/pack_generic.c (pack_generic.c):  Likewise.\n+\t* intrinsics/unpack_generic.c (unpack_internal):  Likewise.\n+\t* intrinsics/eoshift0.c (eoshift0):  Likewise.\n+\t* intrinsics/eoshift2.c (eoshift2):  Likewise.\n+\t* intrinsics/reshape_generic.c (reshape_internal):  Likewise.\n+\t* intrinsics/reshape_packed.c (reshape_packed):  Likewise.\n+\t* generated/eoshift1_16.c: Regenerated.\n+\t* generated/eoshift1_4.c: Regenerated.\n+\t* generated/eoshift1_8.c: Regenerated.\n+\t* generated/eoshift3_16.c: Regenerated.\n+\t* generated/eoshift3_4.c: Regenerated.\n+\t* generated/eoshift3_8.c: Regenerated.\n+\t* generated/in_pack_c10.c: Regenerated.\n+\t* generated/in_pack_c16.c: Regenerated.\n+\t* generated/in_pack_c4.c: Regenerated.\n+\t* generated/in_pack_c8.c: Regenerated.\n+\t* generated/in_pack_i1.c: Regenerated.\n+\t* generated/in_pack_i16.c: Regenerated.\n+\t* generated/in_pack_i2.c: Regenerated.\n+\t* generated/in_pack_i4.c: Regenerated.\n+\t* generated/in_pack_i8.c: Regenerated.\n+\t* generated/in_pack_r10.c: Regenerated.\n+\t* generated/in_pack_r16.c: Regenerated.\n+\t* generated/in_pack_r4.c: Regenerated.\n+\t* generated/in_pack_r8.c: Regenerated.\n+\t* generated/in_unpack_c10.c: Regenerated.\n+\t* generated/in_unpack_c16.c: Regenerated.\n+\t* generated/in_unpack_c4.c: Regenerated.\n+\t* generated/in_unpack_c8.c: Regenerated.\n+\t* generated/in_unpack_i1.c: Regenerated.\n+\t* generated/in_unpack_i16.c: Regenerated.\n+\t* generated/in_unpack_i2.c: Regenerated.\n+\t* generated/in_unpack_i4.c: Regenerated.\n+\t* generated/in_unpack_i8.c: Regenerated.\n+\t* generated/in_unpack_r10.c: Regenerated.\n+\t* generated/in_unpack_r16.c: Regenerated.\n+\t* generated/in_unpack_r4.c: Regenerated.\n+\t* generated/in_unpack_r8.c: Regenerated.\n+\t* generated/maxloc0_16_i1.c: Regenerated.\n+\t* generated/maxloc0_16_i16.c: Regenerated.\n+\t* generated/maxloc0_16_i2.c: Regenerated.\n+\t* generated/maxloc0_16_i4.c: Regenerated.\n+\t* generated/maxloc0_16_i8.c: Regenerated.\n+\t* generated/maxloc0_16_r10.c: Regenerated.\n+\t* generated/maxloc0_16_r16.c: Regenerated.\n+\t* generated/maxloc0_16_r4.c: Regenerated.\n+\t* generated/maxloc0_16_r8.c: Regenerated.\n+\t* generated/maxloc0_4_i1.c: Regenerated.\n+\t* generated/maxloc0_4_i16.c: Regenerated.\n+\t* generated/maxloc0_4_i2.c: Regenerated.\n+\t* generated/maxloc0_4_i4.c: Regenerated.\n+\t* generated/maxloc0_4_i8.c: Regenerated.\n+\t* generated/maxloc0_4_r10.c: Regenerated.\n+\t* generated/maxloc0_4_r16.c: Regenerated.\n+\t* generated/maxloc0_4_r4.c: Regenerated.\n+\t* generated/maxloc0_4_r8.c: Regenerated.\n+\t* generated/maxloc0_8_i1.c: Regenerated.\n+\t* generated/maxloc0_8_i16.c: Regenerated.\n+\t* generated/maxloc0_8_i2.c: Regenerated.\n+\t* generated/maxloc0_8_i4.c: Regenerated.\n+\t* generated/maxloc0_8_i8.c: Regenerated.\n+\t* generated/maxloc0_8_r10.c: Regenerated.\n+\t* generated/maxloc0_8_r16.c: Regenerated.\n+\t* generated/maxloc0_8_r4.c: Regenerated.\n+\t* generated/maxloc0_8_r8.c: Regenerated.\n+\t* generated/minloc0_16_i1.c: Regenerated.\n+\t* generated/minloc0_16_i16.c: Regenerated.\n+\t* generated/minloc0_16_i2.c: Regenerated.\n+\t* generated/minloc0_16_i4.c: Regenerated.\n+\t* generated/minloc0_16_i8.c: Regenerated.\n+\t* generated/minloc0_16_r10.c: Regenerated.\n+\t* generated/minloc0_16_r16.c: Regenerated.\n+\t* generated/minloc0_16_r4.c: Regenerated.\n+\t* generated/minloc0_16_r8.c: Regenerated.\n+\t* generated/minloc0_4_i1.c: Regenerated.\n+\t* generated/minloc0_4_i16.c: Regenerated.\n+\t* generated/minloc0_4_i2.c: Regenerated.\n+\t* generated/minloc0_4_i4.c: Regenerated.\n+\t* generated/minloc0_4_i8.c: Regenerated.\n+\t* generated/minloc0_4_r10.c: Regenerated.\n+\t* generated/minloc0_4_r16.c: Regenerated.\n+\t* generated/minloc0_4_r4.c: Regenerated.\n+\t* generated/minloc0_4_r8.c: Regenerated.\n+\t* generated/minloc0_8_i1.c: Regenerated.\n+\t* generated/minloc0_8_i16.c: Regenerated.\n+\t* generated/minloc0_8_i2.c: Regenerated.\n+\t* generated/minloc0_8_i4.c: Regenerated.\n+\t* generated/minloc0_8_i8.c: Regenerated.\n+\t* generated/minloc0_8_r10.c: Regenerated.\n+\t* generated/minloc0_8_r16.c: Regenerated.\n+\t* generated/minloc0_8_r4.c: Regenerated.\n+\t* generated/minloc0_8_r8.c: Regenerated.\n+\t* generated/pack_c10.c: Regenerated.\n+\t* generated/pack_c16.c: Regenerated.\n+\t* generated/pack_c4.c: Regenerated.\n+\t* generated/pack_c8.c: Regenerated.\n+\t* generated/pack_i1.c: Regenerated.\n+\t* generated/pack_i16.c: Regenerated.\n+\t* generated/pack_i2.c: Regenerated.\n+\t* generated/pack_i4.c: Regenerated.\n+\t* generated/pack_i8.c: Regenerated.\n+\t* generated/pack_r10.c: Regenerated.\n+\t* generated/pack_r16.c: Regenerated.\n+\t* generated/pack_r4.c: Regenerated.\n+\t* generated/pack_r8.c: Regenerated.\n+\t* generated/spread_c10.c: Regenerated.\n+\t* generated/spread_c16.c: Regenerated.\n+\t* generated/spread_c4.c: Regenerated.\n+\t* generated/spread_c8.c: Regenerated.\n+\t* generated/spread_i1.c: Regenerated.\n+\t* generated/spread_i16.c: Regenerated.\n+\t* generated/spread_i2.c: Regenerated.\n+\t* generated/spread_i4.c: Regenerated.\n+\t* generated/spread_i8.c: Regenerated.\n+\t* generated/spread_r10.c: Regenerated.\n+\t* generated/spread_r16.c: Regenerated.\n+\t* generated/spread_r4.c: Regenerated.\n+\t* generated/spread_r8.c: Regenerated.\n+\t* generated/transpose_c10.c: Regenerated.\n+\t* generated/transpose_c16.c: Regenerated.\n+\t* generated/transpose_c4.c: Regenerated.\n+\t* generated/transpose_c8.c: Regenerated.\n+\t* generated/transpose_i16.c: Regenerated.\n+\t* generated/transpose_i4.c: Regenerated.\n+\t* generated/transpose_i8.c: Regenerated.\n+\t* generated/transpose_r10.c: Regenerated.\n+\t* generated/transpose_r16.c: Regenerated.\n+\t* generated/transpose_r4.c: Regenerated.\n+\t* generated/transpose_r8.c: Regenerated.\n+\t* generated/unpack_c10.c: Regenerated.\n+\t* generated/unpack_c16.c: Regenerated.\n+\t* generated/unpack_c4.c: Regenerated.\n+\t* generated/unpack_c8.c: Regenerated.\n+\t* generated/unpack_i1.c: Regenerated.\n+\t* generated/unpack_i16.c: Regenerated.\n+\t* generated/unpack_i2.c: Regenerated.\n+\t* generated/unpack_i4.c: Regenerated.\n+\t* generated/unpack_i8.c: Regenerated.\n+\t* generated/unpack_r10.c: Regenerated.\n+\t* generated/unpack_r16.c: Regenerated.\n+\t* generated/unpack_r4.c: Regenerated.\n+\t* generated/unpack_r8.c: Regenerated.\n+\n+2008-05-18  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\t* runtime/select.c: Moved content to select_inc.c. Include it. \n+\tAdd macros for different character types.\n+\t* runtime/select_inc.c: New file.\n+\t* runtime/convert_char.c: New file.\n+\t* intrinsics/pack_generic.c (pack_char4, pack_s_char4): New\n+\tfunctions.\n+\t* intrinsics/transpose_generic.c (transpose_char4): New function.\n+\t* intrinsics/spread_generic.c (spread_char4, spread_char4_scalar):\n+\tNew functions.\n+\t* intrinsics/unpack_generic.c (unpack1_char4, unpack0_char4): \n+\tNew functions.\n+\t* intrinsics/reshape_generic.c (reshape_char): Use\n+\tgfc_charlen_type as type for length variables.\n+\t(reshape_char4): New function.\n+\t* gfortran.map (GFORTRAN_1.1): Add _gfortran_select_string_char4,\n+\t_gfortran_convert_char1_to_char4, _gfortran_convert_char4_to_char1,\n+\t_gfortran_transpose_char4, _gfortran_spread_char4,\n+\t_gfortran_spread_char4_scalar, _gfortran_reshape_char4,\n+\t_gfortran_pack_char4, _gfortran_pack_s_char4,\n+\t_gfortran_unpack0_char4 and _gfortran_unpack1_char4.\n+\t* Makefile.am: Add runtime/convert_char.c.\n+\t* Makefile.in: Regenerate.\n+\n+2008-05-17  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\t* io/list_read.c (list_formatted_read_scalar):  Declare\n+\ttype as volatile to shut up compiler warning.\n+\n+2008-05-16  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\tPR libfortran/25561\n+\t* io/io.h (struct fbuf): Change pointer to position offset.\n+\t* io/fbuf.c (fbuf_init): Reduce default size of buffer, ptr=>pos\n+\tchanges.\n+\t(fbuf_reset): ptr=>pos changes.\n+\t(fbuf_alloc): If the request doesn't fit, don't waste memory by\n+\tkeeping flushed bytes. ptr=>pos changes.\n+\t(fbuf_flush): ptr=>pos changes.\n+\t(fbuf_seek): Don't seek past the left tab limit, don't update active\n+\tbyte count.\n+\t* io/open.c (new_unit): If RECL has been specified, used that as\n+\tinitial buffer size.\n+\n+2008-05-16  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\tPR libfortran/35632\n+\t* io/open.c (new_unit): Set stream position to correct value.\n+\n+2008-05-15  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\tPR libfortran/25561\n+\t* Makefile.am: Add fbuf.c to gfor_io_src.\n+\t* Makefile.in: Regenerate.\n+\t* io/io.h (read_block): Remove.\n+\t(struct stream): Remove alloc_r_at function pointer.\n+\t(salloc_r): Remove.\n+\t(salloc_r_at): Remove.\n+\t(salloc_w_at): Remove.\n+\t(salloc_w): Remove offset argument.\n+\t(struct fbuf): New struct for format buffer.\n+\t(struct gfc_unit): Add fbuf.\n+\t(read_block_form): New prototype.\n+\t(fbuf_init): Likewise.\n+\t(fbuf_destroy): Likewise.\n+\t(fbuf_reset): Likewise.\n+\t(fbuf_alloc): Likewise.\n+\t(fbuf_flush): Likewise.\n+\t(fbuf_seek): Likewise.\n+\t* io/file_pos.c (formatted_backspace): Change to use sread.\n+\t(unformatted_backspace): Likewise.\n+\t(st_backspace): Flush format buffer.\n+\t(st_rewind): Likewise.\n+\t* io/list_read.c (next_char): Likewise.\n+\t(nml_query): Tidying, flush format buffer.\n+\t* io/open.c (new_unit): Init format buffer.\n+\t* io/read.c (read_l): Change to use read_block_form.\n+\t(read_a): Likewise.\n+\t(read_decimal): Likewise.\n+\t(read_radix): Likewise.\n+\t(read_f): Likewise.\n+\t(read_x): Empty reads also for stream I/O.\n+\t* io/transfer.c (read_sf): Change to use sread.\n+\t(read_block): Rename to read_block_form, change prototype, use sread.\n+\t(read_block_direct): Don't seek stream files.\n+\t(write_block): Change to use fbuf if external file, don't seek stream\n+\tfiles.\n+\t(write_buf): Don't seek stream files.\n+\t(formatted_transfer_scalar): Use fbuf for external files.\n+\t(us_read): Change to use sread.\n+\t(pre_position): Do nothing for stream I/O.\n+\t(data_transfer_init): Flush fbuf when switching from write to read, if\n+\tPOS is specified, seek stream file to correct offset.\n+\t(skip_record): Change to use sread.\n+\t(min_off): New function.\n+\t(next_record_r): Change to use sread.\n+\t(next_record_w): Change to use sset/sseek, flush fbuf.\n+\t(finalize_transfer): Flush fbuf.\n+\t* io/unit.c (init_units): Init fbuf for stdout, stderr.\n+\t(close_unit_1): Destroy fbuf.\n+\t(finish_last_advance_record): Flush fbuf, no need to seek.\n+\t* io/unix.c (fd_alloc_r_at): Remove unused where argument.\n+\t(fd_alloc_w_at): Likewise.\n+\t(fd_read): Remove third argument to fd_alloc_r_at.\n+\t(fd_write): Remove third argument to fd_alloc_w_at.\n+\t(fd_sset): Likewise.\n+\t(fd_open): Don't set alloc_r_at.\n+\t(mem_alloc_r_at): Remove unused where argument.\n+\t(mem_alloc_w_at): Likewise.\n+\t(mem_read): Don't incorrectly return previous errno, remove unused\n+\tthird argument to alloc function.\n+\t(mem_write): Likewise.\n+\t(mem_set): Likewise.\n+\t(open_internal): Don't set alloc_r_at pointer.\n+\t* io/fbuf.c: New file.\n+\n+2008-05-14  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\t* libgfortran.h (gfc_char4_t): New type.\n+\t(GFC_SIZE_OF_CHAR_KIND): New macro.\n+\t(compare_string): Adjust prototype.\n+\t(compare_string_char4): New prototype.\n+\t* gfortran.map (GFORTRAN_1.1): Add _gfortran_adjustl_char4,\n+\t_gfortran_adjustr_char4, _gfortran_compare_string_char4,\n+\t_gfortran_concat_string_char4, _gfortran_string_index_char4,\n+\t_gfortran_string_len_trim_char4, _gfortran_string_minmax_char4,\n+\t_gfortran_string_scan_char4, _gfortran_string_trim_char4 and\n+\t_gfortran_string_verify_char4.\n+\t* intrinsics/string_intrinsics_inc.c: New file from content of\n+\tstring_intrinsics.c with types replaced by macros.\n+\t* intrinsics/string_intrinsics.c: Move content to\n+\tstring_intrinsics_inc.c.\n+\n+2008-05-11  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libfortran/36202\n+\t* io/list_read (eat_separator): Handle the CR-LF case correctly.\n+\n+2008-05-09  Julian Brown  <julian@codesourcery.com>\n+\n+\t* Makefile.am (LTLDFLAGS): New.\n+\t(libgfortran_la_LDFLAGS): Use above.\n+\t* Makefile.in: Regenerate.\n+\n+2008-05-05  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libfortran/36131\n+\t* io/transfer.c (formatted_transfer_scalar): Revert patch for PR34974.\n+\t(next_record_w): Likewise.\n+\n+2008-05-04  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR libfortran/35995\n+\t* m4/ifunction_logical.m4:  If the extent of \"array\"\n+\tis less than zero, set it to zero.  Use an explicit\n+\tflag for breaking out of the main loop to avoid, because\n+\tthe data pointer for \"array\" may be NULL for an empty\n+\tarray.\n+\t* m4/ifunction.m4:  Likewise.\n+\t* generated/all_l1.c: Regenerated.\n+\t* generated/all_l16.c: Regenerated.\n+\t* generated/all_l2.c: Regenerated.\n+\t* generated/all_l4.c: Regenerated.\n+\t* generated/all_l8.c: Regenerated.\n+\t* generated/any_l1.c: Regenerated.\n+\t* generated/any_l16.c: Regenerated.\n+\t* generated/any_l2.c: Regenerated.\n+\t* generated/any_l4.c: Regenerated.\n+\t* generated/any_l8.c: Regenerated.\n+\t* generated/count_16_l.c: Regenerated.\n+\t* generated/count_1_l.c: Regenerated.\n+\t* generated/count_2_l.c: Regenerated.\n+\t* generated/count_4_l.c: Regenerated.\n+\t* generated/count_8_l.c: Regenerated.\n+\t* generated/maxloc1_16_i1.c: Regenerated.\n+\t* generated/maxloc1_16_i16.c: Regenerated.\n+\t* generated/maxloc1_16_i2.c: Regenerated.\n+\t* generated/maxloc1_16_i4.c: Regenerated.\n+\t* generated/maxloc1_16_i8.c: Regenerated.\n+\t* generated/maxloc1_16_r10.c: Regenerated.\n+\t* generated/maxloc1_16_r16.c: Regenerated.\n+\t* generated/maxloc1_16_r4.c: Regenerated.\n+\t* generated/maxloc1_16_r8.c: Regenerated.\n+\t* generated/maxloc1_4_i1.c: Regenerated.\n+\t* generated/maxloc1_4_i16.c: Regenerated.\n+\t* generated/maxloc1_4_i2.c: Regenerated.\n+\t* generated/maxloc1_4_i4.c: Regenerated.\n+\t* generated/maxloc1_4_i8.c: Regenerated.\n+\t* generated/maxloc1_4_r10.c: Regenerated.\n+\t* generated/maxloc1_4_r16.c: Regenerated.\n+\t* generated/maxloc1_4_r4.c: Regenerated.\n+\t* generated/maxloc1_4_r8.c: Regenerated.\n+\t* generated/maxloc1_8_i1.c: Regenerated.\n+\t* generated/maxloc1_8_i16.c: Regenerated.\n+\t* generated/maxloc1_8_i2.c: Regenerated.\n+\t* generated/maxloc1_8_i4.c: Regenerated.\n+\t* generated/maxloc1_8_i8.c: Regenerated.\n+\t* generated/maxloc1_8_r10.c: Regenerated.\n+\t* generated/maxloc1_8_r16.c: Regenerated.\n+\t* generated/maxloc1_8_r4.c: Regenerated.\n+\t* generated/maxloc1_8_r8.c: Regenerated.\n+\t* generated/maxval_i1.c: Regenerated.\n+\t* generated/maxval_i16.c: Regenerated.\n+\t* generated/maxval_i2.c: Regenerated.\n+\t* generated/maxval_i4.c: Regenerated.\n+\t* generated/maxval_i8.c: Regenerated.\n+\t* generated/maxval_r10.c: Regenerated.\n+\t* generated/maxval_r16.c: Regenerated.\n+\t* generated/maxval_r4.c: Regenerated.\n+\t* generated/maxval_r8.c: Regenerated.\n+\t* generated/minloc1_16_i1.c: Regenerated.\n+\t* generated/minloc1_16_i16.c: Regenerated.\n+\t* generated/minloc1_16_i2.c: Regenerated.\n+\t* generated/minloc1_16_i4.c: Regenerated.\n+\t* generated/minloc1_16_i8.c: Regenerated.\n+\t* generated/minloc1_16_r10.c: Regenerated.\n+\t* generated/minloc1_16_r16.c: Regenerated.\n+\t* generated/minloc1_16_r4.c: Regenerated.\n+\t* generated/minloc1_16_r8.c: Regenerated.\n+\t* generated/minloc1_4_i1.c: Regenerated.\n+\t* generated/minloc1_4_i16.c: Regenerated.\n+\t* generated/minloc1_4_i2.c: Regenerated.\n+\t* generated/minloc1_4_i4.c: Regenerated.\n+\t* generated/minloc1_4_i8.c: Regenerated.\n+\t* generated/minloc1_4_r10.c: Regenerated.\n+\t* generated/minloc1_4_r16.c: Regenerated.\n+\t* generated/minloc1_4_r4.c: Regenerated.\n+\t* generated/minloc1_4_r8.c: Regenerated.\n+\t* generated/minloc1_8_i1.c: Regenerated.\n+\t* generated/minloc1_8_i16.c: Regenerated.\n+\t* generated/minloc1_8_i2.c: Regenerated.\n+\t* generated/minloc1_8_i4.c: Regenerated.\n+\t* generated/minloc1_8_i8.c: Regenerated.\n+\t* generated/minloc1_8_r10.c: Regenerated.\n+\t* generated/minloc1_8_r16.c: Regenerated.\n+\t* generated/minloc1_8_r4.c: Regenerated.\n+\t* generated/minloc1_8_r8.c: Regenerated.\n+\t* generated/minval_i1.c: Regenerated.\n+\t* generated/minval_i16.c: Regenerated.\n+\t* generated/minval_i2.c: Regenerated.\n+\t* generated/minval_i4.c: Regenerated.\n+\t* generated/minval_i8.c: Regenerated.\n+\t* generated/minval_r10.c: Regenerated.\n+\t* generated/minval_r16.c: Regenerated.\n+\t* generated/minval_r4.c: Regenerated.\n+\t* generated/minval_r8.c: Regenerated.\n+\t* generated/product_c10.c: Regenerated.\n+\t* generated/product_c16.c: Regenerated.\n+\t* generated/product_c4.c: Regenerated.\n+\t* generated/product_c8.c: Regenerated.\n+\t* generated/product_i1.c: Regenerated.\n+\t* generated/product_i16.c: Regenerated.\n+\t* generated/product_i2.c: Regenerated.\n+\t* generated/product_i4.c: Regenerated.\n+\t* generated/product_i8.c: Regenerated.\n+\t* generated/product_r10.c: Regenerated.\n+\t* generated/product_r16.c: Regenerated.\n+\t* generated/product_r4.c: Regenerated.\n+\t* generated/product_r8.c: Regenerated.\n+\t* generated/sum_c10.c: Regenerated.\n+\t* generated/sum_c16.c: Regenerated.\n+\t* generated/sum_c4.c: Regenerated.\n+\t* generated/sum_c8.c: Regenerated.\n+\t* generated/sum_i1.c: Regenerated.\n+\t* generated/sum_i16.c: Regenerated.\n+\t* generated/sum_i2.c: Regenerated.\n+\t* generated/sum_i4.c: Regenerated.\n+\t* generated/sum_i8.c: Regenerated.\n+\t* generated/sum_r10.c: Regenerated.\n+\t* generated/sum_r16.c: Regenerated.\n+\t* generated/sum_r4.c: Regenerated.\n+\t* generated/sum_r8.c: Regenerated.\n+\n+2008-05-04  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR libfortran/35990\n+\t* intrinsics/pack_generic.c:  Really commit.\n+\n+2008-05-04  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR libfortran/35990\n+\t* intrinsics/pack_generic.c:  If an extent of the source\n+\tarray is less then zero, set it to zero.  Set the source\n+\tpointer to NULL if the source size is zero.  Set the total\n+\tnumber of elements to zero if the vector has an extent\n+\tless or equal to zero.\n+\t* m4/pack.m4:  Set the source pointer to NULL if the\n+\tsource array is zero-sized.  Set the total number of\n+\telemements to zero if the vector has an extent less or\n+\tequal to zero.\n+\t* generated/pack_i1.c:  Regenerated.\n+\t* generated/pack_i2.c:  Regenerated.\n+\t* generated/pack_i4.c:  Regenerated.\n+\t* generated/pack_i8.c:  Regenerated.\n+\t* generated/pack_i16.c:  Regenerated.\n+\t* generated/pack_r4.c:  Regenerated.\n+\t* generated/pack_r8.c:  Regenerated.\n+\t* generated/pack_r10.c:  Regenerated.\n+\t* generated/pack_r16.c:  Regenerated.\n+\t* generated/pack_c4.c:  Regenerated.\n+\t* generated/pack_c8.c:  Regenerated.\n+\t* generated/pack_c10.c:  Regenerated.\n+\t* generated/pack_c16.c:  Regenerated.\n+\n+2008-05-01  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libfortran/36094\n+\t* runtime/error.c (show_locus): Provide modified error message when\n+\tfilename has not yet been associated with a unit number.\n+\t* io/open.c (encoding_opt[]): Comment out \"utf-8\" option and add TODO.\n+\n+2008-04-30  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\t* intrinsics/selected_char_kind.c: New file.\n+\t* gfortran.map (GFORTRAN_1.1): Add _gfortran_selected_char_kind.\n+\t* Makefile.am: Add intrinsics/selected_char_kind.c.\n+\t* Makefile.in: Regenerate.\n+\n+2008-04-30  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR libfortran/35993\n+\t* ifunction.m4 (SCALAR_ARRAY_FUNCTION):  Use correct\n+\timplementation for multi-dimensional return arrays when\n+\tthe mask is .false.\n+\t* generated/maxloc1_16_i1.c: Regenerated.\n+\t* generated/maxloc1_16_i16.c: Regenerated.\n+\t* generated/maxloc1_16_i2.c: Regenerated.\n+\t* generated/maxloc1_16_i4.c: Regenerated.\n+\t* generated/maxloc1_16_i8.c: Regenerated.\n+\t* generated/maxloc1_16_r10.c: Regenerated.\n+\t* generated/maxloc1_16_r16.c: Regenerated.\n+\t* generated/maxloc1_16_r4.c: Regenerated.\n+\t* generated/maxloc1_16_r8.c: Regenerated.\n+\t* generated/maxloc1_4_i1.c: Regenerated.\n+\t* generated/maxloc1_4_i16.c: Regenerated.\n+\t* generated/maxloc1_4_i2.c: Regenerated.\n+\t* generated/maxloc1_4_i4.c: Regenerated.\n+\t* generated/maxloc1_4_i8.c: Regenerated.\n+\t* generated/maxloc1_4_r10.c: Regenerated.\n+\t* generated/maxloc1_4_r16.c: Regenerated.\n+\t* generated/maxloc1_4_r4.c: Regenerated.\n+\t* generated/maxloc1_4_r8.c: Regenerated.\n+\t* generated/maxloc1_8_i1.c: Regenerated.\n+\t* generated/maxloc1_8_i16.c: Regenerated.\n+\t* generated/maxloc1_8_i2.c: Regenerated.\n+\t* generated/maxloc1_8_i4.c: Regenerated.\n+\t* generated/maxloc1_8_i8.c: Regenerated.\n+\t* generated/maxloc1_8_r10.c: Regenerated.\n+\t* generated/maxloc1_8_r16.c: Regenerated.\n+\t* generated/maxloc1_8_r4.c: Regenerated.\n+\t* generated/maxloc1_8_r8.c: Regenerated.\n+\t* generated/maxval_i1.c: Regenerated.\n+\t* generated/maxval_i16.c: Regenerated.\n+\t* generated/maxval_i2.c: Regenerated.\n+\t* generated/maxval_i4.c: Regenerated.\n+\t* generated/maxval_i8.c: Regenerated.\n+\t* generated/maxval_r10.c: Regenerated.\n+\t* generated/maxval_r16.c: Regenerated.\n+\t* generated/maxval_r4.c: Regenerated.\n+\t* generated/maxval_r8.c: Regenerated.\n+\t* generated/minloc1_16_i1.c: Regenerated.\n+\t* generated/minloc1_16_i16.c: Regenerated.\n+\t* generated/minloc1_16_i2.c: Regenerated.\n+\t* generated/minloc1_16_i4.c: Regenerated.\n+\t* generated/minloc1_16_i8.c: Regenerated.\n+\t* generated/minloc1_16_r10.c: Regenerated.\n+\t* generated/minloc1_16_r16.c: Regenerated.\n+\t* generated/minloc1_16_r4.c: Regenerated.\n+\t* generated/minloc1_16_r8.c: Regenerated.\n+\t* generated/minloc1_4_i1.c: Regenerated.\n+\t* generated/minloc1_4_i16.c: Regenerated.\n+\t* generated/minloc1_4_i2.c: Regenerated.\n+\t* generated/minloc1_4_i4.c: Regenerated.\n+\t* generated/minloc1_4_i8.c: Regenerated.\n+\t* generated/minloc1_4_r10.c: Regenerated.\n+\t* generated/minloc1_4_r16.c: Regenerated.\n+\t* generated/minloc1_4_r4.c: Regenerated.\n+\t* generated/minloc1_4_r8.c: Regenerated.\n+\t* generated/minloc1_8_i1.c: Regenerated.\n+\t* generated/minloc1_8_i16.c: Regenerated.\n+\t* generated/minloc1_8_i2.c: Regenerated.\n+\t* generated/minloc1_8_i4.c: Regenerated.\n+\t* generated/minloc1_8_i8.c: Regenerated.\n+\t* generated/minloc1_8_r10.c: Regenerated.\n+\t* generated/minloc1_8_r16.c: Regenerated.\n+\t* generated/minloc1_8_r4.c: Regenerated.\n+\t* generated/minloc1_8_r8.c: Regenerated.\n+\t* generated/minval_i1.c: Regenerated.\n+\t* generated/minval_i16.c: Regenerated.\n+\t* generated/minval_i2.c: Regenerated.\n+\t* generated/minval_i4.c: Regenerated.\n+\t* generated/minval_i8.c: Regenerated.\n+\t* generated/minval_r10.c: Regenerated.\n+\t* generated/minval_r16.c: Regenerated.\n+\t* generated/minval_r4.c: Regenerated.\n+\t* generated/minval_r8.c: Regenerated.\n+\t* generated/product_c10.c: Regenerated.\n+\t* generated/product_c16.c: Regenerated.\n+\t* generated/product_c4.c: Regenerated.\n+\t* generated/product_c8.c: Regenerated.\n+\t* generated/product_i1.c: Regenerated.\n+\t* generated/product_i16.c: Regenerated.\n+\t* generated/product_i2.c: Regenerated.\n+\t* generated/product_i4.c: Regenerated.\n+\t* generated/product_i8.c: Regenerated.\n+\t* generated/product_r10.c: Regenerated.\n+\t* generated/product_r16.c: Regenerated.\n+\t* generated/product_r4.c: Regenerated.\n+\t* generated/product_r8.c: Regenerated.\n+\t* generated/sum_c10.c: Regenerated.\n+\t* generated/sum_c16.c: Regenerated.\n+\t* generated/sum_c4.c: Regenerated.\n+\t* generated/sum_c8.c: Regenerated.\n+\t* generated/sum_i1.c: Regenerated.\n+\t* generated/sum_i16.c: Regenerated.\n+\t* generated/sum_i2.c: Regenerated.\n+\t* generated/sum_i4.c: Regenerated.\n+\t* generated/sum_i8.c: Regenerated.\n+\t* generated/sum_r10.c: Regenerated.\n+\t* generated/sum_r16.c: Regenerated.\n+\t* generated/sum_r4.c: Regenerated.\n+\t* generated/sum_r8.c: Regenerated.\n+\n+2008-04-25  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR libfortran/35960\n+\t* m4/reshape.m4:  Fix typo in last commit.\n+\t* generated/reshape_i4.c:  Regererated.\n+\t* generated/reshape_i8.c:  Regenerated.\n+\t* generated/reshape_i16.c:  Regenerated.\n+\t* generated/reshape_r4.c:  Regenerated.\n+\t* generated/reshape_r8.c:  Regenerated.\n+\t* generated/reshape_r10.c:  Regenerated.\n+\t* generated/reshape_r16.c:  Regenerated.\n+\t* generated/reshape_c4.c:  Regenerated.\n+\t* generated/reshape_c8.c:  Regenerated.\n+\t* generated/reshape_c10.c:  Regenerated.\n+\t* generated/reshape_c16.c:  Regenerated.\n+\n+2008-04-24  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\t* intrinsics/time_1.h (__time_1): Remove unused variable.\n+\n+2008-04-23  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR libfortran/35988\n+\t* m4/matmul.m4:  Only issue a runtime error if extents are\n+\tnon-zero.\n+\t* generated/matmul_i1.c:  Regenerated.\n+\t* generated/matmul_i2.c:  Regenerated.\n+\t* generated/matmul_i4.c:  Regenerated.\n+\t* generated/matmul_i8.c:  Regenerated.\n+\t* generated/matmul_i16.c:  Regenerated.\n+\t* generated/matmul_r4.c:  Regenerated.\n+\t* generated/matmul_r8.c:  Regenerated.\n+\t* generated/matmul_r10.c:  Regenerated.\n+\t* generated/matmul_r16.c:  Regenerated.\n+\t* generated/matmul_c4.c:  Regenerated.\n+\t* generated/matmul_c8.c:  Regenerated.\n+\t* generated/matmul_c10.c:  Regenerated.\n+\t* generated/matmul_c16.c:  Regenerated.\n+\n+2008-04-21  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n+\n+\t* acinclude.m4 (LIBGFOR_CHECK_ATTRIBUTE_VISIBILITY)\n+\t(LIBGFOR_CHECK_ATTRIBUTE_DLLEXPORT)\n+\t(LIBGFOR_CHECK_ATTRIBUTE_ALIAS, LIBGFOR_CHECK_SYNC_FETCH_AND_ADD)\n+\t(LIBGFOR_GTHREAD_WEAK, LIBGFOR_CHECK_UNLINK_OPEN_FILE)\n+\t(LIBGFOR_CHECK_CRLF, LIBGFOR_CHECK_FOR_BROKEN_ISFINITE)\n+\t(LIBGFOR_CHECK_FOR_BROKEN_ISNAN)\n+\t(LIBGFOR_CHECK_FOR_BROKEN_FPCLASSIFY, LIBGFOR_CHECK_WORKING_STAT)\n+\t(LIBGFOR_CHECK_FPSETMASK, LIBGFOR_CHECK_MINGW_SNPRINTF):\n+\tFix cache variable names.\n+\t* configure, Makefile.in: Regenerate.\n+\n+2008-04-20  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR fortran/35991\n+\t* intrinsics/cshift0.c (cshift0): Avoid divide by zero.\n+\n+2008-04-20  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR libfortran/35960\n+\t* intrinsics/reshape_generic.c (reshape_internal): If the size\n+\tof the resized array is zero, as determined by the SHAPE\n+\targument, return early.\n+\t* m4/reshape.m4:  Likewise.\n+\t* generated/reshape_i4.c:  Regererated.\n+\t* generated/reshape_i8.c:  Regenerated.\n+\t* generated/reshape_i16.c:  Regenerated.\n+\t* generated/reshape_r4.c:  Regenerated.\n+\t* generated/reshape_r8.c:  Regenerated.\n+\t* generated/reshape_r10.c:  Regenerated.\n+\t* generated/reshape_r16.c:  Regenerated.\n+\t* generated/reshape_c4.c:  Regenerated.\n+\t* generated/reshape_c8.c:  Regenerated.\n+\t* generated/reshape_c10.c:  Regenerated.\n+\t* generated/reshape_c16.c:  Regenerated.\n+\n+2008-04-18  Paolo Bonzini  <bonzini@gnu.org>\n+\n+\tPR bootstrap/35457\n+\t* aclocal.m4: Regenerate.\n+\t* configure: Regenerate.\n+\n+2008-04-14  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR libfortran/32972\n+\t* intrinsics/spread_generic.c (spread):  Use spread_i2()\n+\tfor GFC_DTYPE_DERIVED_2 (fix typo from previous commit).\n+\n+2008-04-13  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\tFrancois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\tPR libfortran/32972\n+\tPR libfortran/32512\n+\tconfigure.ac:  Add test for uintptr_t.\n+\tconfigure:  Regenerated.\n+\tconfig.h.in:  Regenerated.\n+\t* libgfortran.h: GFC_DTYPE_DERIVED_1:  New macro.\n+\tGFC_DTYPE_DERIVED_2:  New macro.\n+\tGFC_DTYPE_DERIVED_4:  New macro.\n+\tGFC_DTYPE_DERIVED_8:  New macro.\n+\tGFC_DTYPE_DERIVED_16:  New macro.\n+\tGFC_UNALIGNED_2:  New macro.\n+\tGFC_UNALIGNED_4:  New macro.\n+\tGFC_UNALIGNED_8:  New macro.\n+\tGFC_UNALIGNED_16:  New macro.\n+\tintptr_t:  Define if we don't have it.\n+\tuintptr_t:  Likewise.\n+\t* runtime/backtrace.c (show_backtrace):  Use intptr_t.\n+\t* intrinsics/signal.c (signal_sub):  Likewise.\n+\t(signal_sub_int):  Likewise.\n+\t(alarm_sub_int_i4):  Likewise.\n+\t* intrinsics/spread_generic.c (spread):  Use the integer\n+\troutines for handling derived types of sizes 1, 2, 4, 8 and 16\n+\tif the alignment of all pointers is correct.\n+\t(spread_scalar):  Likewise.\n+\t* intrinsics/pack_generic.c (pack):  Likewise.\n+\tUse GFD_DTYPE_TYPE_SIZE to avoid nested switch statements.\n+\t* intrinsics/unpack_generic.c (unpack1):  Likewise.\n+\t(unpack0):  Likewise.\n+\t* runtime/in_pack_generic.c (internal_pack):  Likewise.\n+\t* runtime/in_unpack_generic.c (internal_unpack):  Likewise.\n+\n+2008-04-09  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* io/list_read.c (snprintf): Define if HAVE_SNPRINTF isn't defined.\n+\t(nml_read_obj): Add nml_err_msg_size argument.  Pass it down to\n+\trecursive call.  Use snprintf instead of sprintf when %s nl->var_name\n+\tis used.\n+\t(nml_get_obj_data): Add nml_err_msg_size argument.  Pass it down to\n+\tnml_read_obj call.  Use snprintf instead of sprintf when %s\n+\tnl->var_name is used.  Pass nml_err_msg to nml_parse_qualifier instead\n+\tof parse_err_msg array.  Append \" for namelist variable \" and\n+\tnl->var_name to it.\n+\t(namelist_read): Increase size of nml_err_msg array to 200.  Pass\n+\tsizeof nml_err_msg as extra argument to nml_get_obj_data.\n+\n+2008-04-07  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR fortran/25829 28655\n+\t* io/open.c (edit_modes): Set flags.async. (new_unit) Set flags.async\n+\tand flags.status. (st_open): Initialize flags.async.\n+\t* io/list_read.c (read_charactor): Use delim_status instead of\n+\tflags.delim.\n+\t* io/read.c (read_x): Use pad_status instead of flags.pad.\n+\t* io/inquire.c (inquire_via_unit): Add new checks.\n+\t(inquire_via_filename): Likewise.\n+\t* io/io.h (st_parameter_inquire): Add new flags.\n+\t(st_parameter_dt): Likewise.\n+\t* io/unit.c (get_internal_unit): Set flags.async. (init_units): Set\n+\tflags.async.\n+\t* io/transfer.c: Add delim and pad option arrays. (read_sf): Use\n+\tpad_status instead of flags.pad. (read_block): Likewise.\n+\t(data_transfer_init): Set flags.async and add checks.\n+\t* io/write.c (write_character): Use delim_status.\n+\t(list_formatted_write_scalar): Likewise. (nml_write_obj): Likewise.\n+\t(namelist_write): Likewise.\n+\n+2008-04-05  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR fortran/25829 28655\n+\t* gfortran.map: Add new symbol, _gfortran_st_wait.\n+\t* libgfortran.h (st_paramter_common): Add new I/O parameters.\n+\t* open.c (st_option decimal_opt[], st_option encoding_opt[],\n+\tst_option round_opt[], st_option sign_opt[], st_option async_opt[]): New\n+\tparameter option arrays. (edit_modes): Add checks for new parameters.\n+\t(new_unit): Likewise. (st_open): Likewise.\n+\t* list_read.c (CASE_SEPERATORS): Add ';' as a valid separator.\n+\t(eat_separator): Handle deimal comma. (read_logical): Fix whitespace.\n+\t(parse_real): Handle decimal comma. (read_real): Handle decimal comma.\n+\t* read.c (read_a): Use decimal status flag to allow comma in place of a\n+\tdecimal point. (read_f): Allow comma as acceptable character in float.\n+\tAccording to decimal flag, substitute a period for a comma.\n+\t(read_x): If decimal status flag is comma, disable the read_comma flag,\n+\tnot allowing comma as a delimiter, an extension otherwise.\n+\t* io.h: (unit_decimal, unit_encoding, unit_round, unit_sign,\n+\tunit_async): New enumerators. Add all new I/O parameters.\n+\t* unix.c (unix_stream, int_stream): Add io_mode\tasychronous I/O\tcontrol.\n+\t(move_pos_offset, fd_alloc_w_at): Fix some whitespace.\n+\t(fd_sfree): Use new enumerator. (fd_read): Likewise.\n+\t(fd_write): Likewise. (fd_close): Fix whitespace.\n+\t(fd_open): Use new enumertors. (tempfile, regular_file,\n+\topen_external): Fix whitespace. (output_stream, error_stream): Set\n+\tmethod. (stream_offset): Fix whitespace.\n+\t* transfer.c: (st_option decimal_opt[], sign_opt[], blank_opt[]): New\n+\toption arrays. \t(formatted_transfer_scalar): Set sf_read_comma flag\n+\tbased on new decimal_status flag. (data_transfer_init): Initialize new\n+\tparameters. Add checks for decimal, sign, and blank. (st_wait): New stub.\n+\t* format.c: (format_lex): Add format specifiers DP, DC, and D.\n+\t(parse_format_list): Parse the new specifiers.\n+\t* write.c (write_decimal): Use new sign enumerators to set the sign.\n+\t(write_complex): Handle decimal comma and semi-colon separator.\n+\t(nml_write_obj): Likewise.\n+\t* write_float.def: Revise sign enumerators. (calculate_sign): Use new\n+\tsign enumerators. (output_float): Likewise. Use new decimal_status flag\n+\tto set the decimal character to a point or a comma.\n+\t\n+2008-03-28  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR libfortran/32972\n+\tPR libfortran/32512\n+\t* Makefile.am:  Add new variable, i_spread_c, containing\n+\tpack_i1.c, pack_i2.c, pack_i4.c, pack_i8.c, spread_i16.c,\n+\tspread_r4.c, spread_r8.c, spread_r10.c, spread_r16.c,\n+\tspread_c4.c, spread_c8.c, spread_c10.c, spread_c16.c.\n+\t* Makefile.in:  Regenerated.\n+\t* libgfortran.h:  Add prototypes for spread_i1, spread_i2,\n+\tspread_i4, spread_i8, spread_i16, spread_r4, spread_r8,\n+\tspread_c4, spread_c8, spread_c10, spread_c16,\n+\tspread_scalar_i1, spread_scalar_i2, spread_scalar_i4,\n+\tspread_scalar_i8, spread_scalar_i16, spread_scalar_r4\n+\tspread_scalar_r8, spread_scalar_c4, spread_scalar_c8,\n+\tspread_scalar_c10 and spread_scalar_c16.\n+\tAdd macros to isolate both type and size information\n+\tfrom array descriptors with a single mask operation.\n+\t* intrinsics/spread_generic.c:  Add calls to specific\n+\tspread functions.\n+\t* m4/spread.m4:  New file.\n+\t* generated/spread_i1.c:  New file.\n+\t* generated/spread_i2.c:  New file.\n+\t* generated/spread_i4.c:  New file.\n+\t* generated/spread_i8.c:  New file.\n+\t* generated/spread_i16.c:  New file.\n+\t* generated/spread_r4.c:  New file.\n+\t* generated/spread_r8.c:  New file.\n+\t* generated/spread_r10.c:  New file.\n+\t* generated/spread_r16.c:  New file.\n+\t* generated/spread_c4.c:  New file.\n+\t* generated/spread_c8.c:  New file.\n+\t* generated/spread_c10.c:  New file.\n+\t* generated/spread_c16.c:  New file.\n+\n+2008-03-28  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libfortran/35699\n+\t* io/transfer.c (write_buf):  Don't pad the record, just return if the\n+\tdata is NULL.  (next_record_w): If there are bytes left in the record\n+\tfor unformatted direct I/O, pad out the record with zero bytes.\n+\n+2008-03-28  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/35721\n+\t* intrinsics/associated.c (associated): Ignore different\n+\tstride of pointer vs. target if only one element is referred.\n+\n+2008-03-26  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\t* io/unix.c (fd_close):  Do not close STDIN.\n+\n+2008-03-23  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR libfortran/32972\n+\t* Makefile.am:  Add new variable, i_unpack_c, containing\n+\tunpack_i1.c, unpack_i2.c, unpack_i4.c, unpack_i8.c,\n+\tunpack_i16.c, unpack_r4.c, unpack_r8.c, unpack_r10.c,\n+\tunpack_r16.c, unpack_c4.c, unpack_c8.c, unpack_c10.c\n+\tand unpack_c16.c\n+\tAdd i_unpack_c to gfor_built_src.\n+\tAdd rule to generate i_unpack_c from m4/unpack.m4.\n+\t* Makefile.in:  Regenerated.\n+\t* libgfortran.h: Add prototypes for unpack0_i1, unpack0_i2,\n+\tunpack0_i4, unpack0_i8, unpack0_i16, unpack0_r4, unpack0_r8,\n+\tunpack0_r10, unpack0_r16, unpack0_c4, unpack0_c8, unpack0_c10,\n+\tunpack0_c16, unpack1_i1, unpack1_i2, unpack1_i4, unpack1_i8,\n+\tunpack1_i16, unpack1_r4, unpack1_r8, unpack1_r10, unpack1_r16,\n+\tunpack1_c4, unpack1_c8, unpack1_c10 and unpack1_c16.\n+\t* intrinsics/pack_generic.c (unpack1):  Add calls to specific\n+\tunpack1 functions.\n+\t(unpack0):  Add calls to specific unpack0 functions.\n+\t* m4/unpack.m4:  New file.\n+\t* generated/unpack_i1.c:  New file.\n+\t* generated/unpack_i2.c:  New file.\n+\t* generated/unpack_i4.c:  New file.\n+\t* generated/unpack_i8.c:  New file.\n+\t* generated/unpack_i16.c:  New file.\n+\t* generated/unpack_r4.c:  New file.\n+\t* generated/unpack_r8.c:  New file.\n+\t* generated/unpack_r10.c:  New file.\n+\t* generated/unpack_r16.c:  New file.\n+\t* generated/unpack_c4.c:  New file.\n+\t* generated/unpack_c8.c:  New file.\n+\t* generated/unpack_c10.c:  New file.\n+\t* generated/unpack_c16.c:  New file.\n+\n+2008-03-22  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libfortran/35632\n+\t* io/transfer.c (data_transfer_init):  Fix whitespace.\n+\t(next_record_w): Truncate the file only if the stream\n+\tposition is short of the file end.\n+\n+2008-03-21  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\t* intrinsics/pack_generic.c:  Fix typo.\n+\n+2008-03-21  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\t* gfortran.map: Move erfc_scaled symbols to new symbol node\n+\tGFORTRAN_1.1, thereby fixing ABI bug introduced in r132846.\n+\n+2008-03-21  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR libfortran/32972\n+\t* runtime/in_pack_generic.c (internal_pack):  Call correct\n+\tfunction, pack_i16, for GFC_INTEGER_16.\n+\n+2008-03-21  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR libfortran/32972\n+\t* Makefile.am:  Add new variable, i_pack_c, containing\n+\tpack_i1.c, pack_i2.c, pack_i4.c, pack_i8.c, pack_i16.c,\n+\tpack_r4.c, pack_r8.c, pack_r10.c, pack_r16.c, pack_c4.c,\n+\tpack_c8.c, pack_c10.c, pack_c16.c.\n+\tAdd m4/pack.m4 to m4_files.\n+\tAdd i_pack_c to gfor_built_src.\n+\tAdd rule to generate i_pack_c from m4/pack.m4.\n+\t* Makefile.in:  Regenerated.\n+\t* libgfortran.h: Add prototypes for pack_i1, pack_i2, pack_i4,\n+\tpack_i8, pack_i16, pack_r4, pack_r8, pack_c4, pack_c8,\n+\tpack_c10, pack_c16.\n+\t* intrinsics/pack_generic.c:  Add calls to specific\n+\tpack functions.\n+\t* m4/pack.m4:  New file.\n+\t* generated/pack_i1.c:  New file.\n+\t* generated/pack_i2.c:  New file.\n+\t* generated/pack_i4.c:  New file.\n+\t* generated/pack_i8.c:  New file.\n+\t* generated/pack_i16.c:  New file.\n+\t* generated/pack_r4.c:  New file.\n+\t* generated/pack_r8.c:  New file.\n+\t* generated/pack_r10.c:  New file.\n+\t* generated/pack_r16.c:  New file.\n+\t* generated/pack_c4.c:  New file.\n+\t* generated/pack_c8.c:  New file.\n+\t* generated/pack_c10.c:  New file.\n+\t* generated/pack_c16.c:  New file.\n+\n+2008-03-19  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libfortran/35627\n+\t* io/list_read.c (free_line): Clear the line buffer enable flag and\n+\treset the index into line_buffer, aka item_count.\n+\t(next_char): Cleanup whitespace.\n+\t(read_logical): Use unget_char to assure that the first character of the\n+\tbad logical is saved in case it is part of an object name. Remove the\n+\tclearing of index and flag that is now in free_line.\n+\t(read_real): Likewise.\n+\n+2008-03-19  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR libfortran/32972\n+\t* runtime/in_pack_generic.c (internal_pack):  Fix typo in\n+\tlast commit.\n+\n+2008-03-19  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR libfortran/32972\n+\t* Makefile.am (in_pack_c): Add in_pack_i1.c, in_pack_i2.c,\n+\tin_pack_r4.c, in_pack_r8.c, in_pack_r10.c and in_pack_r16.c.\n+\t(in_unpack_c): Add in_unpack_i1.c, in_unpack_i2.c,\n+\tin_unpack_r4.c, in_unpack_r8.c, in_unpack_r10.c and\n+\tin_unpack_r16.c.\n+\t* Makefile.in: Regenerate.\n+\t* libgfortran.h:  Add prototypes for internal_pack_1,\n+\tinternal_pack_2, internal_pack_16, internal_pack_r4,\n+\tinternal_pack_r8, internal_pack_r10, internal_pack_r16,\n+\tinternal_pack_c10 and internal_pack_c16.  Add prototypes for\n+\tinternal_unpack_1, internal_unpack_2, internal_unpack_16,\n+\tinternal_unpack_r4, internal_unpack_r8, internal_unpack_r10,\n+\tinternal_unpack_r16, internal_unpack_c10 and\n+\tinternal_unpack_c16.\n+\t* runtime/in_pack_generic.c (internal_pack): Use sizeof instead\n+\tof hardwired sizes.\n+\tAdd calls to internal_pack_1, internal_pack_2,\n+\tinternal_pack_16, internal_pack_r4, internal_pack_r8,\n+\tinternal_pack_r10, internal_pack_r16, internal_pack_c10 and\n+\tinternal_pack_c16.\n+\t* runtime/in_unpack_generic.c (internal_unpack):  Use sizeof\n+\tinstead of hardwired sizes.\n+\tAdd calls to internal_unpack_1, internal_unpack_2,\n+\tinternal_unpack_16, internal_unpack_r4, internal_unpack_r8,\n+\tinternal_unpack_r10, internal_unpack_r16, internal_unpack_c10\n+\tand internal_unpack_c16.\n+\t* generated/in_pack_r4.c:  New file.\n+\t* generated/in_pack_i2.c:  New file.\n+\t* generated/in_unpack_i1.c:  New file.\n+\t* generated/in_pack_r10.c:  New file.\n+\t* generated/in_unpack_r4.c:  New file.\n+\t* generated/in_unpack_i2.c:  New file.\n+\t* generated/in_unpack_r16.c:  New file.\n+\t* generated/in_pack_r8.c:  New file.\n+\t* generated/in_unpack_r10.c:  New file.\n+\t* generated/in_unpack_r8.c:  New file.\n+\t* generated/in_pack_r16.c:  New file.\n+\t* generated/in_pack_i1.c:  New file.\n+\n+2008-03-17  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libfortran/35617\n+\t* io/list_read.c (eat_separator): If next character after eatline is '!'\n+\tthen eatline again. \n+\n+2008-03-16  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n+\n+\t* aclocal.m4: Regenerate.\n+\t* configure: Likewise.\n+\t* Makefile.in: Likewise.\n+\n+2008-03-12  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\tPR libfortran/35524\n+\t* intrinsics/erfc_scaled_inc.c: Only define the long double\n+\tvariant of erfc_scaled if expl is available.\n+\n+2008-03-11  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\tPR libfortran/32812\n+\t* intrinsics/random.c (scramble_seed, unscramble_seed): New\n+\tfunctions.\n+\t(random_seed_i4): Scramble the seed the user gives us before\n+\tstoring it, and unscramble it when we return it back later.\n+\n+2008-03-05  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\tPR libfortran/35293\n+\t* io/unix.c (fd_truncate): Fold s->special_file case into\n+\tsuccess case of ftruncate/chsize call instead of the failure case.\n+\tMake failure case actually return failure.  Properly update stream\n+\tpointers on failure.  Call runtime_error for targets without\n+\tneither ftruncate nor chsize where such a call would be needed.\n+\n+2008-03-03  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\tPR fortran/33197\n+\t* intrinsics/erfc_scaled_inc.c: New file.\n+\t* intrinsics/erfc_scaled.c: New file.\n+\t* gfortran.map (GFORTRAN_1.0): Add _gfortran_erfc_scaled_r*.\n+\t* Makefile.am: Add intrinsics/erfc_scaled.c.\n+\t* config.h.in: Regenerate.\n+\t* configure: Regenerate.\n+\t* Makefile.in: Regenerate.\n+\n+2008-03-01  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\tPR libfortran/35355\n+\t* intrinsics/time_1.h (__time_1): Fix calculation of user_usec\n+\tfor mingw.\n+\n+2008-03-01  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\tPR libfortran/35063\n+\t* io/unit.c (destroy_unit_mutex): Call __gthread_mutex_destroy\n+\tinstead of macro kludge.\n+\t\n+2008-02-25  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\tPR fortran/29549\n+\t* Makefile.am: Add -fcx-fortran-rules to AM_CFLAGS for all of\n+\tlibgfortran.\n+\t* Makefile.in: Regenerated.\n+\n+2008-02-25  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\t* m4/ifunction_logical.m4: Add casts to get rid of warnings.\n+\t* generated/all_l1.c: Regenerate.\n+\t* generated/all_l2.c: Regenerate.\n+\t* generated/all_l4.c: Regenerate.\n+\t* generated/all_l8.c: Regenerate.\n+\t* generated/all_l16.c: Regenerate.\n+\t* generated/any_l1.c: Regenerate.\n+\t* generated/any_l2.c: Regenerate.\n+\t* generated/any_l4.c: Regenerate.\n+\t* generated/any_l8.c: Regenerate.\n+\t* generated/any_l16.c: Regenerate.\n+\t* generated/count_1_l.c: Regenerate.\n+\t* generated/count_2_l.c: Regenerate.\n+\t* generated/count_4_l.c: Regenerate.\n+\t* generated/count_8_l.c: Regenerate.\n+\t* generated/count_16_l.c: Regenerate.\n+\n+2008-02-24  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\tPR libfortran/32841\n+\t* acinclude.m4: Don't use HAVE_MATH_H.\n+\t* configure: Regenerate.\n+\n+2008-02-20  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libfortran/35132\n+\t* io/transfer.c (next_record_w): Truncate after the last record for\n+\tSTREAM I/O.\n+\n+\tPR libfortran/34954\n+\t* io/transfer.c (data_transfer_init): Initialize dtp->rec if writing.\n+\n+\tPR libfortran/34974\n+\t* io/transfer.c (formatted_transfer_scalar): Flush the buffer if skips\n+\tis less than zero. (next_record_w): Use sseek to position the file to\n+\tthe max position reached.\n+\n+2008-02-20  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libfortran/35036\n+\t* write_float.def (output_float):  Add error checks for zero digits\n+\tafter decimal point in E and D format specifiers.\n+\t\n+2008-02-10  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libfortran/35063\n+\t* io/unit.c (destroy_unit_mutex): New function that uses\n+\t__gthread_mutex_destroy_function or pthread_mutex_destroy after\n+\tunlocking and before free_mem for final closure of I/O unit.\n+\t(delete_root): Use new function.\n+\t(free_internal_unit): Likewise.\n+\t(close_unit_1): Likewise.\n+\n+2008-02-02  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR libfortran/35001\n+\t* m4/shape.m4:  Return 0 for extents <= 0.\n+\t* generated/shape_i4.c:  Regenerated.\n+\t* generated/shape_i8.c:  Regenerated.\n+\t* generated/shape_i16.c:  Regenerated.\n+\n+2008-01-27  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR libfortran/34980\n+\t* m4/shape.m4:  If return array is empty, return early.\n+\t* generated/shape_i4.c:  Regenerated.\n+\t* generated/shape_i8.c:  Regenerated.\n+\t* generated/shape_i16.c:  Regenerated.\n+\n+2008-01-26  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR libfofortran/34887\n+\t* io/transfer.c (next_record_w): Always move to the farthest\n+\tposition when completing the record (also when we are\n+\tprocessing a slash edit descriptor).\n+\n+2008-01-25  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libfortran/34876\n+\t* io/transfer.c (write_buf): Handle case of zero sized array.\n+\t(transfer_array): Set data pointer to NULL and size to zero.  Then\n+\tmake a data transfer and return.\n+\t\n+2008-01-24  David Edelsohn  <edelsohn@gnu.org>\n+\n+\t* configure: Regenerate.\n+\n+2008-01-19  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libfortran/34795\n+\t* io/inquire.c (inquire_via_unit): If a unit is opened, return values\n+\taccording to the open action for DIRECT, FORMATTED, and\tUNFORMATTED.\n+\t(inquire_via_filename): Return \"UNKNOWN\" for SEQUENTIAL, DIRECT,\n+\tFORAMATTED, and UNFORMATTED inquiries.\n+\t* io/unix.c (inquire_sequential): Return \"UNKNOWN\" when appropriate\n+\tfor files that are not opened. (inquire_direct): Same.\n+\t(inquire_formatted): Same.\n+\t\n+2008-01-18  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libfortran/34782\n+\t* io/transfer.c (formatted_transfer_scalar): Set max_pos to the greater\n+\tof the current max_pos or the newly calculated position.\n+\n+2008-01-18  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* io/write.c (write_real): Increase default precision\n+\tfor REAL(16) by one.\n+\n+2008-01-16  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\tPR libfortran/34669\n+\t* mk-kinds-h.sh: Compile with -S to avoid calling the assembler,\n+\tto avoid piping the -fdump-parse-tree output to the assembler\n+\twhen configuring with -pipe.\n+\t* mk-sik-inc.sh: Likewise.\n+\t* mk-srk-inc.sh: Likewise.\n+\n+2008-01-15  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR libfortran/34671\n+\t* gfortran.am: Added _gfortran_all_l1, _gfortran_all_l2,\n+\t_gfortran_any_l1, _gfortran_any_l2, -28,15 _gfortran_count_1_l,\n+\t_gfortran_count_16_l, _gfortran_count_2_l, _gfortran_count_4_l and\n+\t_gfortran_count_8_l Removed _gfortran_count_16_l16,\n+\t_gfortran_count_16_l4, _gfortran_count_16_l8,\n+\t_gfortran_count_4_l16, _gfortran_count_4_l4, _gfortran_count_4_l8,\n+\t_gfortran_count_8_l16, _gfortran_count_8_l4 and\n+\t_gfortran_count_8_l8.\n+\t* Makefile.am: Added generated/any_l1.c and generated/any_l2.c to\n+\ti_any_c.  Added generated/all_l1. and generated/all_l2.c to\n+\ti_all_c.  Removed generated/count_4_l4.c, generated/count_8_l4.c,\n+\tgenerated/count_16_l4.c, generated/count_4_l8.c,\n+\tgenerated/count_8_l8.c, generated/count_16_l8.c,\n+\tgenerated/count_4_l16.c, generated/count_8_l16.c, and\n+\tgenerated/count_16_l16.c from i_count_c.  Added count_1_l.c,\n+\tcount_2_l.c, count_4_l.c, count_8_l.c and count_16_l.c to\n+\ti_count_c.  I_M4_DEPS2 depends on ifunction_logical.m4, for\n+\tany of the files generated from all.m4, any.m4 and count.m4.\n+\t* Makefile.in:  Regenerated.\n+\t* m4/ifunction_logical.m4:  New file.  Use\n+\tGFC_LOGICAL_1 pointer for access to source arrays.\n+\t* m4/any.m4:  Include ifunction_logical.m4 instead of\n+\tifunction.m4.  Don't check atype_name.\n+\t* m4/all.m4:  Likewise.\n+\t* m4/count.m4:  Likewise.\n+\t* generated/any_l1.c:  New file.\n+\t* generated/any_l2.c:  New file.\n+\t* generated/all_l1.c:  New file.\n+\t* generated/count_1_l.c:  New file.\n+\t* generated/count_2_l.c:  New file.\n+\t* generated/count_4_l.c:  New file.\n+\t* generated/count_8_l.c:  New file.\n+\t* generated/count_16_l.c:  New file.\n+\t* generated/any_l4.c:  Regenerated.\n+\t* generated/any_l8.c:  Regenerated.\n+\t* generated/any_l16.c:  Regenerated.\n+\t* generated/all_l4.c: Regenerated.\n+\t* generated/all_l8.c: Regenerated.\n+\t* generated/all_l16.c: Regenerated.\n+\t* generated/count_4_l4.c:  Removed.\n+\t* generated/count_4_l8.c:  Removed.\n+\t* generated/count_4_l16.c:  Removed.\n+\t* generated/count_8_l4.c:  Removed.\n+\t* generated/count_8_l8.c:  Removed.\n+\t* generated/count_8_l16.c:  Removed.\n+\t* generated/count_16_l4.c:  Removed.\n+\t* generated/count_16_l8.c:  Removed.\n+\t* generated/count_16_l16.c:  Removed.\n+\n+2008-01-13  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR libfortran/34746\n+\t* m4/iforeach.m4 (name`'rtype_qual`_'atype_code):  Use %ld\n+\tin printf format for all bounds checking; cast all\n+\tinteger-like arguments to runtime_error() to long int.\n+\t(`m'name`'rtype_qual`_'atype_code):  Likewise.\n+\t(`s'name`'rtype_qual`_'atype_code):  Likewise.\n+\t* m4/ifunction.m4 (name`'rtype_qual`_'atype_code):  Likewise.\n+\t(`m'name`'rtype_qual`_'atype_code):  Likewise.\n+\t(`s'name`'rtype_qual`_'atype_code):  Likewise.\n+\t* generated/all_l16.c: Regenerated.\n+\t* generated/all_l4.c: Regenerated.\n+\t* generated/all_l8.c: Regenerated.\n+\t* generated/any_l16.c: Regenerated.\n+\t* generated/any_l4.c: Regenerated.\n+\t* generated/any_l8.c: Regenerated.\n+\t* generated/count_16_l16.c: Regenerated.\n+\t* generated/count_16_l4.c: Regenerated.\n+\t* generated/count_16_l8.c: Regenerated.\n+\t* generated/count_4_l16.c: Regenerated.\n+\t* generated/count_4_l4.c: Regenerated.\n+\t* generated/count_4_l8.c: Regenerated.\n+\t* generated/count_8_l16.c: Regenerated.\n+\t* generated/count_8_l4.c: Regenerated.\n+\t* generated/count_8_l8.c: Regenerated.\n+\t* generated/maxloc0_16_i1.c: Regenerated.\n+\t* generated/maxloc0_16_i16.c: Regenerated.\n+\t* generated/maxloc0_16_i2.c: Regenerated.\n+\t* generated/maxloc0_16_i4.c: Regenerated.\n+\t* generated/maxloc0_16_i8.c: Regenerated.\n+\t* generated/maxloc0_16_r10.c: Regenerated.\n+\t* generated/maxloc0_16_r16.c: Regenerated.\n+\t* generated/maxloc0_16_r4.c: Regenerated.\n+\t* generated/maxloc0_16_r8.c: Regenerated.\n+\t* generated/maxloc0_4_i1.c: Regenerated.\n+\t* generated/maxloc0_4_i16.c: Regenerated.\n+\t* generated/maxloc0_4_i2.c: Regenerated.\n+\t* generated/maxloc0_4_i4.c: Regenerated.\n+\t* generated/maxloc0_4_i8.c: Regenerated.\n+\t* generated/maxloc0_4_r10.c: Regenerated.\n+\t* generated/maxloc0_4_r16.c: Regenerated.\n+\t* generated/maxloc0_4_r4.c: Regenerated.\n+\t* generated/maxloc0_4_r8.c: Regenerated.\n+\t* generated/maxloc0_8_i1.c: Regenerated.\n+\t* generated/maxloc0_8_i16.c: Regenerated.\n+\t* generated/maxloc0_8_i2.c: Regenerated.\n+\t* generated/maxloc0_8_i4.c: Regenerated.\n+\t* generated/maxloc0_8_i8.c: Regenerated.\n+\t* generated/maxloc0_8_r10.c: Regenerated.\n+\t* generated/maxloc0_8_r16.c: Regenerated.\n+\t* generated/maxloc0_8_r4.c: Regenerated.\n+\t* generated/maxloc0_8_r8.c: Regenerated.\n+\t* generated/maxloc1_16_i1.c: Regenerated.\n+\t* generated/maxloc1_16_i16.c: Regenerated.\n+\t* generated/maxloc1_16_i2.c: Regenerated.\n+\t* generated/maxloc1_16_i4.c: Regenerated.\n+\t* generated/maxloc1_16_i8.c: Regenerated.\n+\t* generated/maxloc1_16_r10.c: Regenerated.\n+\t* generated/maxloc1_16_r16.c: Regenerated.\n+\t* generated/maxloc1_16_r4.c: Regenerated.\n+\t* generated/maxloc1_16_r8.c: Regenerated.\n+\t* generated/maxloc1_4_i1.c: Regenerated.\n+\t* generated/maxloc1_4_i16.c: Regenerated.\n+\t* generated/maxloc1_4_i2.c: Regenerated.\n+\t* generated/maxloc1_4_i4.c: Regenerated.\n+\t* generated/maxloc1_4_i8.c: Regenerated.\n+\t* generated/maxloc1_4_r10.c: Regenerated.\n+\t* generated/maxloc1_4_r16.c: Regenerated.\n+\t* generated/maxloc1_4_r4.c: Regenerated.\n+\t* generated/maxloc1_4_r8.c: Regenerated.\n+\t* generated/maxloc1_8_i1.c: Regenerated.\n+\t* generated/maxloc1_8_i16.c: Regenerated.\n+\t* generated/maxloc1_8_i2.c: Regenerated.\n+\t* generated/maxloc1_8_i4.c: Regenerated.\n+\t* generated/maxloc1_8_i8.c: Regenerated.\n+\t* generated/maxloc1_8_r10.c: Regenerated.\n+\t* generated/maxloc1_8_r16.c: Regenerated.\n+\t* generated/maxloc1_8_r4.c: Regenerated.\n+\t* generated/maxloc1_8_r8.c: Regenerated.\n+\t* generated/maxval_i1.c: Regenerated.\n+\t* generated/maxval_i16.c: Regenerated.\n+\t* generated/maxval_i2.c: Regenerated.\n+\t* generated/maxval_i4.c: Regenerated.\n+\t* generated/maxval_i8.c: Regenerated.\n+\t* generated/maxval_r10.c: Regenerated.\n+\t* generated/maxval_r16.c: Regenerated.\n+\t* generated/maxval_r4.c: Regenerated.\n+\t* generated/maxval_r8.c: Regenerated.\n+\t* generated/minloc0_16_i1.c: Regenerated.\n+\t* generated/minloc0_16_i16.c: Regenerated.\n+\t* generated/minloc0_16_i2.c: Regenerated.\n+\t* generated/minloc0_16_i4.c: Regenerated.\n+\t* generated/minloc0_16_i8.c: Regenerated.\n+\t* generated/minloc0_16_r10.c: Regenerated.\n+\t* generated/minloc0_16_r16.c: Regenerated.\n+\t* generated/minloc0_16_r4.c: Regenerated.\n+\t* generated/minloc0_16_r8.c: Regenerated.\n+\t* generated/minloc0_4_i1.c: Regenerated.\n+\t* generated/minloc0_4_i16.c: Regenerated.\n+\t* generated/minloc0_4_i2.c: Regenerated.\n+\t* generated/minloc0_4_i4.c: Regenerated.\n+\t* generated/minloc0_4_i8.c: Regenerated.\n+\t* generated/minloc0_4_r10.c: Regenerated.\n+\t* generated/minloc0_4_r16.c: Regenerated.\n+\t* generated/minloc0_4_r4.c: Regenerated.\n+\t* generated/minloc0_4_r8.c: Regenerated.\n+\t* generated/minloc0_8_i1.c: Regenerated.\n+\t* generated/minloc0_8_i16.c: Regenerated.\n+\t* generated/minloc0_8_i2.c: Regenerated.\n+\t* generated/minloc0_8_i4.c: Regenerated.\n+\t* generated/minloc0_8_i8.c: Regenerated.\n+\t* generated/minloc0_8_r10.c: Regenerated.\n+\t* generated/minloc0_8_r16.c: Regenerated.\n+\t* generated/minloc0_8_r4.c: Regenerated.\n+\t* generated/minloc0_8_r8.c: Regenerated.\n+\t* generated/minloc1_16_i1.c: Regenerated.\n+\t* generated/minloc1_16_i16.c: Regenerated.\n+\t* generated/minloc1_16_i2.c: Regenerated.\n+\t* generated/minloc1_16_i4.c: Regenerated.\n+\t* generated/minloc1_16_i8.c: Regenerated.\n+\t* generated/minloc1_16_r10.c: Regenerated.\n+\t* generated/minloc1_16_r16.c: Regenerated.\n+\t* generated/minloc1_16_r4.c: Regenerated.\n+\t* generated/minloc1_16_r8.c: Regenerated.\n+\t* generated/minloc1_4_i1.c: Regenerated.\n+\t* generated/minloc1_4_i16.c: Regenerated.\n+\t* generated/minloc1_4_i2.c: Regenerated.\n+\t* generated/minloc1_4_i4.c: Regenerated.\n+\t* generated/minloc1_4_i8.c: Regenerated.\n+\t* generated/minloc1_4_r10.c: Regenerated.\n+\t* generated/minloc1_4_r16.c: Regenerated.\n+\t* generated/minloc1_4_r4.c: Regenerated.\n+\t* generated/minloc1_4_r8.c: Regenerated.\n+\t* generated/minloc1_8_i1.c: Regenerated.\n+\t* generated/minloc1_8_i16.c: Regenerated.\n+\t* generated/minloc1_8_i2.c: Regenerated.\n+\t* generated/minloc1_8_i4.c: Regenerated.\n+\t* generated/minloc1_8_i8.c: Regenerated.\n+\t* generated/minloc1_8_r10.c: Regenerated.\n+\t* generated/minloc1_8_r16.c: Regenerated.\n+\t* generated/minloc1_8_r4.c: Regenerated.\n+\t* generated/minloc1_8_r8.c: Regenerated.\n+\t* generated/minval_i1.c: Regenerated.\n+\t* generated/minval_i16.c: Regenerated.\n+\t* generated/minval_i2.c: Regenerated.\n+\t* generated/minval_i4.c: Regenerated.\n+\t* generated/minval_i8.c: Regenerated.\n+\t* generated/minval_r10.c: Regenerated.\n+\t* generated/minval_r16.c: Regenerated.\n+\t* generated/minval_r4.c: Regenerated.\n+\t* generated/minval_r8.c: Regenerated.\n+\t* generated/product_c10.c: Regenerated.\n+\t* generated/product_c16.c: Regenerated.\n+\t* generated/product_c4.c: Regenerated.\n+\t* generated/product_c8.c: Regenerated.\n+\t* generated/product_i1.c: Regenerated.\n+\t* generated/product_i16.c: Regenerated.\n+\t* generated/product_i2.c: Regenerated.\n+\t* generated/product_i4.c: Regenerated.\n+\t* generated/product_i8.c: Regenerated.\n+\t* generated/product_r10.c: Regenerated.\n+\t* generated/product_r16.c: Regenerated.\n+\t* generated/product_r4.c: Regenerated.\n+\t* generated/product_r8.c: Regenerated.\n+\t* generated/sum_c10.c: Regenerated.\n+\t* generated/sum_c16.c: Regenerated.\n+\t* generated/sum_c4.c: Regenerated.\n+\t* generated/sum_c8.c: Regenerated.\n+\t* generated/sum_i1.c: Regenerated.\n+\t* generated/sum_i16.c: Regenerated.\n+\t* generated/sum_i2.c: Regenerated.\n+\t* generated/sum_i4.c: Regenerated.\n+\t* generated/sum_i8.c: Regenerated.\n+\t* generated/sum_r10.c: Regenerated.\n+\t* generated/sum_r16.c: Regenerated.\n+\t* generated/sum_r4.c: Regenerated.\n+\t* generated/sum_r8.c: Regenerated.\n+\n+2008-01-11  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR libfortran/34670\n+\t* m4/iparm.m4 (upcase):  New macro (copied from the m4 manual).\n+\t(u_name):  New macro for the upper case name of the intrinsic.\n+\t* m4/iforeach.m4 (name`'rtype_qual`_'atype_code):  Add\n+\tbounds checking and rank check, depending on\n+\tcompile_options.bounds_check.\n+\t(`m'name`'rtype_qual`_'atype_code):  Likewise.\n+\t(`s'name`'rtype_qual`_'atype_code):  Likewise.\n+\t* m4/ifunction.m4 (name`'rtype_qual`_'atype_code):  Add\n+\tbounds checking and rank check, depending on\n+\tcompile_options.bounds_check.\n+\t(`m'name`'rtype_qual`_'atype_code):  Likewise.\n+\t(`s'name`'rtype_qual`_'atype_code):  Likewise.\n+\t* generated/all_l16.c: Regenerated.\n+\t* generated/all_l4.c: Regenerated.\n+\t* generated/all_l8.c: Regenerated.\n+\t* generated/any_l16.c: Regenerated.\n+\t* generated/any_l4.c: Regenerated.\n+\t* generated/any_l8.c: Regenerated.\n+\t* generated/count_16_l16.c: Regenerated.\n+\t* generated/count_16_l4.c: Regenerated.\n+\t* generated/count_16_l8.c: Regenerated.\n+\t* generated/count_4_l16.c: Regenerated.\n+\t* generated/count_4_l4.c: Regenerated.\n+\t* generated/count_4_l8.c: Regenerated.\n+\t* generated/count_8_l16.c: Regenerated.\n+\t* generated/count_8_l4.c: Regenerated.\n+\t* generated/count_8_l8.c: Regenerated.\n+\t* generated/maxloc0_16_i1.c: Regenerated.\n+\t* generated/maxloc0_16_i16.c: Regenerated.\n+\t* generated/maxloc0_16_i2.c: Regenerated.\n+\t* generated/maxloc0_16_i4.c: Regenerated.\n+\t* generated/maxloc0_16_i8.c: Regenerated.\n+\t* generated/maxloc0_16_r10.c: Regenerated.\n+\t* generated/maxloc0_16_r16.c: Regenerated.\n+\t* generated/maxloc0_16_r4.c: Regenerated.\n+\t* generated/maxloc0_16_r8.c: Regenerated.\n+\t* generated/maxloc0_4_i1.c: Regenerated.\n+\t* generated/maxloc0_4_i16.c: Regenerated.\n+\t* generated/maxloc0_4_i2.c: Regenerated.\n+\t* generated/maxloc0_4_i4.c: Regenerated.\n+\t* generated/maxloc0_4_i8.c: Regenerated.\n+\t* generated/maxloc0_4_r10.c: Regenerated.\n+\t* generated/maxloc0_4_r16.c: Regenerated.\n+\t* generated/maxloc0_4_r4.c: Regenerated.\n+\t* generated/maxloc0_4_r8.c: Regenerated.\n+\t* generated/maxloc0_8_i1.c: Regenerated.\n+\t* generated/maxloc0_8_i16.c: Regenerated.\n+\t* generated/maxloc0_8_i2.c: Regenerated.\n+\t* generated/maxloc0_8_i4.c: Regenerated.\n+\t* generated/maxloc0_8_i8.c: Regenerated.\n+\t* generated/maxloc0_8_r10.c: Regenerated.\n+\t* generated/maxloc0_8_r16.c: Regenerated.\n+\t* generated/maxloc0_8_r4.c: Regenerated.\n+\t* generated/maxloc0_8_r8.c: Regenerated.\n+\t* generated/maxloc1_16_i1.c: Regenerated.\n+\t* generated/maxloc1_16_i16.c: Regenerated.\n+\t* generated/maxloc1_16_i2.c: Regenerated.\n+\t* generated/maxloc1_16_i4.c: Regenerated.\n+\t* generated/maxloc1_16_i8.c: Regenerated.\n+\t* generated/maxloc1_16_r10.c: Regenerated.\n+\t* generated/maxloc1_16_r16.c: Regenerated.\n+\t* generated/maxloc1_16_r4.c: Regenerated.\n+\t* generated/maxloc1_16_r8.c: Regenerated.\n+\t* generated/maxloc1_4_i1.c: Regenerated.\n+\t* generated/maxloc1_4_i16.c: Regenerated.\n+\t* generated/maxloc1_4_i2.c: Regenerated.\n+\t* generated/maxloc1_4_i4.c: Regenerated.\n+\t* generated/maxloc1_4_i8.c: Regenerated.\n+\t* generated/maxloc1_4_r10.c: Regenerated.\n+\t* generated/maxloc1_4_r16.c: Regenerated.\n+\t* generated/maxloc1_4_r4.c: Regenerated.\n+\t* generated/maxloc1_4_r8.c: Regenerated.\n+\t* generated/maxloc1_8_i1.c: Regenerated.\n+\t* generated/maxloc1_8_i16.c: Regenerated.\n+\t* generated/maxloc1_8_i2.c: Regenerated.\n+\t* generated/maxloc1_8_i4.c: Regenerated.\n+\t* generated/maxloc1_8_i8.c: Regenerated.\n+\t* generated/maxloc1_8_r10.c: Regenerated.\n+\t* generated/maxloc1_8_r16.c: Regenerated.\n+\t* generated/maxloc1_8_r4.c: Regenerated.\n+\t* generated/maxloc1_8_r8.c: Regenerated.\n+\t* generated/maxval_i1.c: Regenerated.\n+\t* generated/maxval_i16.c: Regenerated.\n+\t* generated/maxval_i2.c: Regenerated.\n+\t* generated/maxval_i4.c: Regenerated.\n+\t* generated/maxval_i8.c: Regenerated.\n+\t* generated/maxval_r10.c: Regenerated.\n+\t* generated/maxval_r16.c: Regenerated.\n+\t* generated/maxval_r4.c: Regenerated.\n+\t* generated/maxval_r8.c: Regenerated.\n+\t* generated/minloc0_16_i1.c: Regenerated.\n+\t* generated/minloc0_16_i16.c: Regenerated.\n+\t* generated/minloc0_16_i2.c: Regenerated.\n+\t* generated/minloc0_16_i4.c: Regenerated.\n+\t* generated/minloc0_16_i8.c: Regenerated.\n+\t* generated/minloc0_16_r10.c: Regenerated.\n+\t* generated/minloc0_16_r16.c: Regenerated.\n+\t* generated/minloc0_16_r4.c: Regenerated.\n+\t* generated/minloc0_16_r8.c: Regenerated.\n+\t* generated/minloc0_4_i1.c: Regenerated.\n+\t* generated/minloc0_4_i16.c: Regenerated.\n+\t* generated/minloc0_4_i2.c: Regenerated.\n+\t* generated/minloc0_4_i4.c: Regenerated.\n+\t* generated/minloc0_4_i8.c: Regenerated.\n+\t* generated/minloc0_4_r10.c: Regenerated.\n+\t* generated/minloc0_4_r16.c: Regenerated.\n+\t* generated/minloc0_4_r4.c: Regenerated.\n+\t* generated/minloc0_4_r8.c: Regenerated.\n+\t* generated/minloc0_8_i1.c: Regenerated.\n+\t* generated/minloc0_8_i16.c: Regenerated.\n+\t* generated/minloc0_8_i2.c: Regenerated.\n+\t* generated/minloc0_8_i4.c: Regenerated.\n+\t* generated/minloc0_8_i8.c: Regenerated.\n+\t* generated/minloc0_8_r10.c: Regenerated.\n+\t* generated/minloc0_8_r16.c: Regenerated.\n+\t* generated/minloc0_8_r4.c: Regenerated.\n+\t* generated/minloc0_8_r8.c: Regenerated.\n+\t* generated/minloc1_16_i1.c: Regenerated.\n+\t* generated/minloc1_16_i16.c: Regenerated.\n+\t* generated/minloc1_16_i2.c: Regenerated.\n+\t* generated/minloc1_16_i4.c: Regenerated.\n+\t* generated/minloc1_16_i8.c: Regenerated.\n+\t* generated/minloc1_16_r10.c: Regenerated.\n+\t* generated/minloc1_16_r16.c: Regenerated.\n+\t* generated/minloc1_16_r4.c: Regenerated.\n+\t* generated/minloc1_16_r8.c: Regenerated.\n+\t* generated/minloc1_4_i1.c: Regenerated.\n+\t* generated/minloc1_4_i16.c: Regenerated.\n+\t* generated/minloc1_4_i2.c: Regenerated.\n+\t* generated/minloc1_4_i4.c: Regenerated.\n+\t* generated/minloc1_4_i8.c: Regenerated.\n+\t* generated/minloc1_4_r10.c: Regenerated.\n+\t* generated/minloc1_4_r16.c: Regenerated.\n+\t* generated/minloc1_4_r4.c: Regenerated.\n+\t* generated/minloc1_4_r8.c: Regenerated.\n+\t* generated/minloc1_8_i1.c: Regenerated.\n+\t* generated/minloc1_8_i16.c: Regenerated.\n+\t* generated/minloc1_8_i2.c: Regenerated.\n+\t* generated/minloc1_8_i4.c: Regenerated.\n+\t* generated/minloc1_8_i8.c: Regenerated.\n+\t* generated/minloc1_8_r10.c: Regenerated.\n+\t* generated/minloc1_8_r16.c: Regenerated.\n+\t* generated/minloc1_8_r4.c: Regenerated.\n+\t* generated/minloc1_8_r8.c: Regenerated.\n+\t* generated/minval_i1.c: Regenerated.\n+\t* generated/minval_i16.c: Regenerated.\n+\t* generated/minval_i2.c: Regenerated.\n+\t* generated/minval_i4.c: Regenerated.\n+\t* generated/minval_i8.c: Regenerated.\n+\t* generated/minval_r10.c: Regenerated.\n+\t* generated/minval_r16.c: Regenerated.\n+\t* generated/minval_r4.c: Regenerated.\n+\t* generated/minval_r8.c: Regenerated.\n+\t* generated/product_c10.c: Regenerated.\n+\t* generated/product_c16.c: Regenerated.\n+\t* generated/product_c4.c: Regenerated.\n+\t* generated/product_c8.c: Regenerated.\n+\t* generated/product_i1.c: Regenerated.\n+\t* generated/product_i16.c: Regenerated.\n+\t* generated/product_i2.c: Regenerated.\n+\t* generated/product_i4.c: Regenerated.\n+\t* generated/product_i8.c: Regenerated.\n+\t* generated/product_r10.c: Regenerated.\n+\t* generated/product_r16.c: Regenerated.\n+\t* generated/product_r4.c: Regenerated.\n+\t* generated/product_r8.c: Regenerated.\n+\t* generated/sum_c10.c: Regenerated.\n+\t* generated/sum_c16.c: Regenerated.\n+\t* generated/sum_c4.c: Regenerated.\n+\t* generated/sum_c8.c: Regenerated.\n+\t* generated/sum_i1.c: Regenerated.\n+\t* generated/sum_i16.c: Regenerated.\n+\t* generated/sum_i2.c: Regenerated.\n+\t* generated/sum_i4.c: Regenerated.\n+\t* generated/sum_i8.c: Regenerated.\n+\t* generated/sum_r10.c: Regenerated.\n+\t* generated/sum_r16.c: Regenerated.\n+\t* generated/sum_r4.c: Regenerated.\n+\t* generated/sum_r8.c: Regenerated.\n+\n+2008-01-05  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libfortran/34676\n+\t* io/list_read.c (next_char): Only save the EOF condition for later if\n+\tadvance=\"no\".\n+\n+2008-01-03  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR libfortran/34565\n+\t* io/io.h:  Adjust protoypes for open_internal(),\n+\tnext_array_record() and init_loop_spec().\n+\t* io/list_read.c (next_char):  Use argument \"finished\"\n+\tof next_array_record to check for end on internal file.\n+\t* io/unit.c:  Calculate the offset for an array\n+\tinternal file and supply this informatin to open_internal().\n+\t* io/unix.c (open_internal):  Set the offset for the internal\n+\tfile on open.\n+\t* io/transfer.c (init_loop_spec):  Calculate the starting\n+\trecord in case of negative strides.  Return size of 0 for\n+\tan empty array.\n+\t(next_array_record):  Use an extra flag to signal that the\n+\tarray is finished.\n+\t(next_record_r):  Use the new flag to next_array_record().\n+\t(next_record_w):  Likewise."}, {"sha": "de77bf1c570ac9d163ae8750aa19595301cefe95", "filename": "libgfortran/ChangeLog-2009", "status": "added", "additions": 2496, "deletions": 0, "changes": 2496, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f18c74a73d3920097ff25bf87b4941afda6eb42d/libgfortran%2FChangeLog-2009", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f18c74a73d3920097ff25bf87b4941afda6eb42d/libgfortran%2FChangeLog-2009", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog-2009?ref=f18c74a73d3920097ff25bf87b4941afda6eb42d", "patch": "@@ -0,0 +1,2496 @@\n+2009-12-19  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\t* intrinsics/system_clock.c: Fix library name in comment, move TCK\n+\tdefinition into functions.\n+\t(system_clock_4): Remove unused struct timezone.\n+\t(system_clock_8): Remove unused struct timezone, increase TCK.\n+\n+2009-12-08  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/41711\n+\t* io/read.c (set_integer): Support kind=10 for reading\n+\treal/complex BOZ.\n+\n+2009-12-06  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/41478\n+\tPR fortran/42268\n+\t* intrinsics/pack_generic.c (pack): Add safety checks for the case that\n+\t'vector' is NULL.\n+\n+2009-12-05  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n+\n+\t* Makefile.in: Regenerate.\n+\t* configure: Regenerate.\n+\n+2009-12-04  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\tPR libfortran/40812\n+\t* libgfortran.h: typedef gfc_offset differently for MinGW.\n+\t* io/unix.h (struct stream): Change function pointers to use\n+\tgfc_offset instead of off_t.\n+\t(sseek): Change prototype to use gfc_offset instead of off_t.\n+\t(stell): Likewise.\n+\t(struncate): Likewise.\n+\t* io/unix.c: Redefine lseek() for mingw.\n+\t(raw_seek): Use gfc_offset instead of off_t.\n+\t(raw_tell): Likewise.\n+\t(buf_seek): Likewise.\n+\t(buf_tell): Likewise.\n+\t(buf_truncate): Likewise.\n+\t(mem_seek): Likewise.\n+\t(mem_tell): Likewise.\n+\t(mem_truncate): Likewise.\n+\t(fd_to_stream): Likewise.\n+\t(file_length): Likewise.\n+\t(raw_truncate): Use gfc_offset instead of off_t, add large file\n+\tcapable implementation for MinGW.\n+\n+2009-11-30  Janus Weil  <janus@gcc.gnu.org>\n+\n+\t* gfortran.map: Add _gfortran_is_extension_of.\n+\t* Makefile.am: Add intrinsics/extends_type_of.c.\n+\t* Makefile.in: Regenerated.\n+\t* intrinsics/extends_type_of.c: New file. \n+\n+2009-11-30  Kai Tietz  <Kai.Tietz@onevision.com>\n+\n+\t* io/unix.c (find_file): Add variable id conditionally for\n+\tmingw targets.\n+\n+2009-11-28  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* intrinsics/pack_generic.c (pack_internal): Remove unused\n+\tzero_sized variable.\n+\t* intrinsics/unpack_generic.c (unpack0): Remove unused size\n+\tvariable.\n+\t* io/write.c (namelist_write_newline): Remove unused length\n+\tvariable.\n+\t* io/unix.c (find_file): Remove unused id variable.\n+\t* m4/ifunction.m4 (SCALAR_ARRAY_FUNCTION): Remove unused sstride\n+\tvariable.\n+\t* generated/maxloc1_16_i1.c: Regenerated.\n+\t* generated/maxloc1_16_i16.c: Regenerated.\n+\t* generated/maxloc1_16_i2.c: Regenerated.\n+\t* generated/maxloc1_16_i4.c: Regenerated.\n+\t* generated/maxloc1_16_i8.c: Regenerated.\n+\t* generated/maxloc1_16_r10.c: Regenerated.\n+\t* generated/maxloc1_16_r16.c: Regenerated.\n+\t* generated/maxloc1_16_r4.c: Regenerated.\n+\t* generated/maxloc1_16_r8.c: Regenerated.\n+\t* generated/maxloc1_4_i1.c: Regenerated.\n+\t* generated/maxloc1_4_i16.c: Regenerated.\n+\t* generated/maxloc1_4_i2.c: Regenerated.\n+\t* generated/maxloc1_4_i4.c: Regenerated.\n+\t* generated/maxloc1_4_i8.c: Regenerated.\n+\t* generated/maxloc1_4_r10.c: Regenerated.\n+\t* generated/maxloc1_4_r16.c: Regenerated.\n+\t* generated/maxloc1_4_r4.c: Regenerated.\n+\t* generated/maxloc1_4_r8.c: Regenerated.\n+\t* generated/maxloc1_8_i1.c: Regenerated.\n+\t* generated/maxloc1_8_i16.c: Regenerated.\n+\t* generated/maxloc1_8_i2.c: Regenerated.\n+\t* generated/maxloc1_8_i4.c: Regenerated.\n+\t* generated/maxloc1_8_i8.c: Regenerated.\n+\t* generated/maxloc1_8_r10.c: Regenerated.\n+\t* generated/maxloc1_8_r16.c: Regenerated.\n+\t* generated/maxloc1_8_r4.c: Regenerated.\n+\t* generated/maxloc1_8_r8.c: Regenerated.\n+\t* generated/maxval_i1.c: Regenerated.\n+\t* generated/maxval_i16.c: Regenerated.\n+\t* generated/maxval_i2.c: Regenerated.\n+\t* generated/maxval_i4.c: Regenerated.\n+\t* generated/maxval_i8.c: Regenerated.\n+\t* generated/maxval_r10.c: Regenerated.\n+\t* generated/maxval_r16.c: Regenerated.\n+\t* generated/maxval_r4.c: Regenerated.\n+\t* generated/maxval_r8.c: Regenerated.\n+\t* generated/minloc1_16_i1.c: Regenerated.\n+\t* generated/minloc1_16_i16.c: Regenerated.\n+\t* generated/minloc1_16_i2.c: Regenerated.\n+\t* generated/minloc1_16_i4.c: Regenerated.\n+\t* generated/minloc1_16_i8.c: Regenerated.\n+\t* generated/minloc1_16_r10.c: Regenerated.\n+\t* generated/minloc1_16_r16.c: Regenerated.\n+\t* generated/minloc1_16_r4.c: Regenerated.\n+\t* generated/minloc1_16_r8.c: Regenerated.\n+\t* generated/minloc1_4_i1.c: Regenerated.\n+\t* generated/minloc1_4_i16.c: Regenerated.\n+\t* generated/minloc1_4_i2.c: Regenerated.\n+\t* generated/minloc1_4_i4.c: Regenerated.\n+\t* generated/minloc1_4_i8.c: Regenerated.\n+\t* generated/minloc1_4_r10.c: Regenerated.\n+\t* generated/minloc1_4_r16.c: Regenerated.\n+\t* generated/minloc1_4_r4.c: Regenerated.\n+\t* generated/minloc1_4_r8.c: Regenerated.\n+\t* generated/minloc1_8_i1.c: Regenerated.\n+\t* generated/minloc1_8_i16.c: Regenerated.\n+\t* generated/minloc1_8_i2.c: Regenerated.\n+\t* generated/minloc1_8_i4.c: Regenerated.\n+\t* generated/minloc1_8_i8.c: Regenerated.\n+\t* generated/minloc1_8_r10.c: Regenerated.\n+\t* generated/minloc1_8_r16.c: Regenerated.\n+\t* generated/minloc1_8_r4.c: Regenerated.\n+\t* generated/minloc1_8_r8.c: Regenerated.\n+\t* generated/minval_i1.c: Regenerated.\n+\t* generated/minval_i16.c: Regenerated.\n+\t* generated/minval_i2.c: Regenerated.\n+\t* generated/minval_i4.c: Regenerated.\n+\t* generated/minval_i8.c: Regenerated.\n+\t* generated/minval_r10.c: Regenerated.\n+\t* generated/minval_r16.c: Regenerated.\n+\t* generated/minval_r4.c: Regenerated.\n+\t* generated/minval_r8.c: Regenerated.\n+\t* generated/product_c10.c: Regenerated.\n+\t* generated/product_c16.c: Regenerated.\n+\t* generated/product_c4.c: Regenerated.\n+\t* generated/product_c8.c: Regenerated.\n+\t* generated/product_i1.c: Regenerated.\n+\t* generated/product_i16.c: Regenerated.\n+\t* generated/product_i2.c: Regenerated.\n+\t* generated/product_i4.c: Regenerated.\n+\t* generated/product_i8.c: Regenerated.\n+\t* generated/product_r10.c: Regenerated.\n+\t* generated/product_r16.c: Regenerated.\n+\t* generated/product_r4.c: Regenerated.\n+\t* generated/product_r8.c: Regenerated.\n+\t* generated/sum_c10.c: Regenerated.\n+\t* generated/sum_c16.c: Regenerated.\n+\t* generated/sum_c4.c: Regenerated.\n+\t* generated/sum_c8.c: Regenerated.\n+\t* generated/sum_i1.c: Regenerated.\n+\t* generated/sum_i16.c: Regenerated.\n+\t* generated/sum_i2.c: Regenerated.\n+\t* generated/sum_i4.c: Regenerated.\n+\t* generated/sum_i8.c: Regenerated.\n+\t* generated/sum_r10.c: Regenerated.\n+\t* generated/sum_r16.c: Regenerated.\n+\t* generated/sum_r4.c: Regenerated.\n+\t* generated/sum_r8.c: Regenerated.\n+\n+2009-11-19  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\t* io/fbuf.h: Move includes after include guard.\n+\t* io/format.h: Likewise.\n+\t* io/unix.h: Likewise.\n+\n+2009-11-18  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libgfortran/42090\n+\t* io/transfer.c (skip_record): Set bytes_left_subrecord to zero after\n+\tskipping the remaining bytes in the record.\n+\t(next_record_r): Call skip_record with the number of bytes_left to be\n+\tskipped.\n+\n+2009-11-02  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\t* Makefile.am (gfor_io_headers): Add fbuf.h, format.h, unix.h.\n+\t* Makefile.in: Regenerated.\n+\t* io/fbuf.h: New file.\n+\t* io/format.h: New file.\n+\t* io/unix.h: New file.\n+\t* io/io.h (struct stream): Move to unix.h, add forward declaration.\n+\t(sread): Likewise.\n+\t(swrite): Likewise.\n+\t(sseek): Likewise.\n+\t(stell): Likewise.\n+\t(struncate): Likewise.\n+\t(sflush): Likewise.\n+\t(sflush): Likewise.\n+\t(sclose): Likewise.\n+\t(compared_files): Move prototype to unix.h.\n+\t(open_external): Likewise.\n+\t(open_internal): Likewise.\n+\t(mem_alloc_w): Likewise.\n+\t(mem_alloc_r): Likewise.\n+\t(input_stream): Likewise.\n+\t(output_stream): Likewise.\n+\t(error_stream): Likewise.\n+\t(compare_file_filename): Likewise.\n+\t(find_file): Likewise.\n+\t(delete_file): Likewise.\n+\t(file_exists): Likewise.\n+\t(inquire_sequential): Likewise.\n+\t(inquire_direct): Likewise.\n+\t(inquire_formatted): Likewise.\n+\t(inquire_unformatted): Likewise.\n+\t(inquire_read): Likewise.\n+\t(inquire_write): Likewise.\n+\t(inquire_readwrite): Likewise.\n+\t(file_length): Likewise.\n+\t(is_seekable): Likewise.\n+\t(is_special): Likewise.\n+\t(flush_if_preconnected): Likewise.\n+\t(empty_internal_buffer): Likewise.\n+\t(stream_isatty): Likewise.\n+\t(stream_ttyname): Likewise.\n+\t(unpack_filename): Likewise.\n+\t(struct fbuf): Move to fbuf.h, add forward declaration.\n+\t(fbuf_init): Move prototype to fbuf.h.\n+\t(fbuf_destroy): Likewise.\n+\t(fbuf_reset): Likewise.\n+\t(fbuf_alloc): Likewise.\n+\t(fbuf_flush): Likewise.\n+\t(fbuf_seek): Likewise.\n+\t(fbuf_read): Likewise.\n+\t(fbuf_getc_refill): Likewise.\n+\t(fbuf_getc): Move inline function to fbuf.h.\n+\t(enum format_token): Move to format.h.\n+\t(struct fnode): Move to format.h, add forward declaration.\n+\t(parse_format): Move prototype to format.h.\n+\t(next_format): Likewise.\n+\t(unget_format): Likewise.\n+\t(format_error): Likewise.\n+\t(free_format_data): Likewise.\n+\t(free_format_hash_table): Likewise.\n+\t(init_format_hash): Likewise.\n+\t(free_format_hash): Likewise.\n+\t* io/close.c: Include unix.h.\n+\t* io/fbuf.c: Include fbuf.h and unix.h.\n+\t* io/file_pos.c: Include fbuf.h and unix.h.\n+\t* io/format.c: Include format.h.\n+\t* io/inquire.c: Include unix.h.\n+\t* io/intrinsics.c: Include fbuf.h and unix.h.\n+\t* io/list_read.c: Include fbuf.h and unix.h.\n+\t* io/open.c: Include fbuf.h and unix.h.\n+\t* io/read.c: Include format.h.\n+\t* io/transfer.c: Include fbuf.h, format.h, and unix.h.\n+\t* io/unit.c: Likewise.\n+\t* io/unix.c: Include unix.h.\n+\t* io/write.c: Include format.h and unix.h.\n+\n+2009-10-31  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\tPR libfortran/41219\n+\t* intrinsics/unpack_generic.c (unpack_internal): Remove unused\n+\targument from prototype.\n+\t(unpack1): Update unpack_internal call.\n+\t(unpack1_char): Likewise.\n+\t(unpack1_char4): Likewise.\n+\t(unpack0): Likewise.\n+\t(unpack0_char): Likewise.\n+\t(unpack0_char4): Likewise.\n+\t* intrinsics/iso_c_binding.c (c_f_pointer_u0): Get rid of\n+\tuninitialized variable warning.\n+\n+2009-10-29  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libgfortran/41711\n+\t* libgfortran.h: Define larger sizes for BOZ conversion\tbuffers.\n+\t* io/write.c (extract_uint): Include case where size is 10 if integer\n+\tis large enough. (write_int): Rename to\twrite_boz. (write_boz): Factor\n+\tout extract_uint and delete the\tconversion function.\n+\t(btoa_big): New binary conversion function.\n+\t(otoa_big): New octal conversion function.\n+\t(ztoa_big): New\thexidecimal conversion function.\n+\t(write_b): Modify to use new function.\n+\t(write_o): Likewise.\n+\t(write_z): Likewise.\n+\n+2009-10-12  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libgfortran/41683\n+\t* io/format.c (parse_format_list): Allow a repeat specifier immediately\n+\tafter a P specifier.\n+\t\n+2009-10-11  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libgfortran/38439\n+\t* io/format.c (parse_format_list): Correct logic for FMT_F reading vs\n+\twriting. Code clean-up.\n+\n+2009-10-11  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libgfortran/38439\n+\t* io/format.c (parse_format_list): Add check for tokens not allowed\n+\tafter P specifier. Fix comments.  Remove un-needed code. Fix the\n+\tdefault exponent list. Correct pointer assignment error.\n+\n+2009-10-05  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libgfortran/35862\n+\t* write_float.def (outout_float): Fix handling of special case where no\n+\tdigits after the decimal point and values less than 1.0. Adjust index\n+\tinto digits string. (WRITE_FLOAT): Remove special case code from macro.\n+\n+2009-09-28  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libgfortran/35862\n+\t* io.h (gfc_unit): Add round_status.\n+\t(format_token): Add enumerators for rounding format specifiers.\n+\t* transfer.c (round_opt): New options table.\n+\t(formatted_transfer_scalar_read): Add set round_status for each rounding\n+\tformat token. (formatted_transfer_scalar_write): Likewise.\n+\t* format.c (format_lex): Tokenize the rounding format specifiers.\n+\t(parse_format_list): Parse the rounding format specifiers.\n+\t* write_float.def (outout_float): Modify rounding code to use new\n+\tvariable rchar to set the appropriate rounding. Fix some whitespace.\n+\t* unit.c (get_internal_unit): Initialize rounding mode for internal\n+\tunits. (init_units): Likewise.\n+\n+2009-09-19  Iain Sandoe  <iain.sandoe@sandoe-acoustics.co.uk>\n+\n+\t* configure.ac: Check for GFORTRAN_C99_1.1 funcs in OS libm.\n+        * configure: Regenerate.\n+        * config.h.in: Ditto.\n+\n+2009-09-18  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libgfortran/41328\n+\t* io/transfer.c (read_sf): Set at_eof flag on short read if any\n+\tcharacters were successfully read so that EOF condition with no EOR\n+\tmarker succeeds.\n+\n+2009-09-12  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libgfortran/41328\n+\t* io/transfer.c (read_sf): Adjust fbuf position and do proper\n+\tfbuf reads to traverse CR, CR-LF, and LF style line ends.\n+\n+2009-09-12  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libgfortran/41219\n+\t* io/write.c (write_a_char4): Use correct type for crlf constant.\n+\n+2009-09-11  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n+\n+\t* Makefile.am (libgfortranbegin_la_LINK): New.\n+\t* Makefile.in: Regenerate.\n+\n+2009-09-09  Paolo Bonzini  <bonzini@gnu.org>\n+\n+\t* configure: Regenerate.\n+\n+2009-09-08  Paolo Bonzini  <bonzini@gnu.org>\n+\n+\t* configure: Regenerate.\n+\n+2009-09-07  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libgfortran/41192\n+\t* io/list_read.c (eat_line): Enable eat_line to function on\n+\tinternal units.\n+\n+\tPR libgfortran/41219\n+\t* io/list_read.c (nml_read_obj): Replace GFC_DTYPE_UNKNOWN with\n+\tBT_NULL to get rid of warning.\n+\t\n+2009-09-04  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/41219\n+\t* intrinsics/getlog.c: Define _POSIX for MINGW32.\n+\n+2009-09-03  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/41219\n+\t* intrinsics/iso_c_binding.c (c_f_pointer_u0): Move variable\n+\tdeclaration out of the loop.\n+\n+2009-08-30  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\t* m4/pack.m4 (pack_'rtype_code`): Use count_0 for counting true\n+\tvalues in a logical array.  Mark bounds checking tests as\n+\tunlikely.\n+\t* intrinsics/pack_generic.c (pack_internal): Likewise.\n+\t* runtime/bounds.c (count_0):  Fix off-by-one error in detecting\n+\tempty arrays.\n+\t* generated/pack_c4.c: Regenerated.\n+\t* generated/pack_c8.c: Regenerated.\n+\t* generated/pack_c10.c: Regenerated.\n+\t* generated/pack_c16.c: Regenerated.\n+\t* generated/pack_i1.c: Regenerated.\n+\t* generated/pack_i16.c: Regenerated.\n+\t* generated/pack_i2.c: Regenerated.\n+\t* generated/pack_i4.c: Regenerated.\n+\t* generated/pack_i8.c: Regenerated.\n+\t* generated/pack_r4.c: Regenerated.\n+\t* generated/pack_r8.c: Regenerated.\n+\t* generated/pack_r10.c: Regenerated.\n+\t* generated/pack_r16.c: Regenerated.\n+\n+2009-08-25  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR libfortran/34670\n+\t* runtime/bounds.c (count_0):  New function.\n+\t* intrinsics/unpack_generic (unpack_bounds):  New function.\n+\t(unpack_internal):  Remove zero stride checks.\n+\t(unpack1):  Use unpack_bounds.\n+\t(unpack1_char):  Likeweise.\n+\t(unpack1_char4):  Likewise\n+\t(unpack0):  Likewise.\n+\t(unpack0_char):  Likewise.\n+\t(unpack0_char4):  Likewise.\n+\n+2009-08-24  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/41157\n+\t* dtime.c (dtime_sub): Fix computing time increment.\n+\t* time_1.h: Add <sys/types.h> header.  Use RUSAGE_SELF macro instead\n+\tof a hardcoded 0.\n+\n+2009-08-24  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n+\n+\t* configure.ac (AC_PREREQ): Bump to 2.64.\n+\n+2009-08-23  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\t* intrinsics/cshift0.c: Update license to GPL3+exception.\n+\t* runtime/fpu.c: Add a GPL3+exception statement.\n+\n+2009-08-22  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n+\n+\t* Makefile.am (install-html, install-pdf): Remove.\n+\t* Makefile.in: Regenerate.\n+\n+\t* Makefile.in: Regenerate.\n+\t* aclocal.m4: Regenerate.\n+\t* config.h.in: Regenerate.\n+\t* configure: Regenerate.\n+\n+2009-08-22  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n+\n+\t* Makefile.am (libgfortran_la_LINK): Add $(libgfortran_la_LDFLAGS).\n+\t* Makefile.in: Regenerate.\n+\n+2009-08-20  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR libfortran/40962\n+\t* iso_c_binding.c (c_f_pointer_u0):  Multiply stride by\n+\tprevious stride.\n+\n+2009-08-20  Dave Korn  <dave.korn.cygwin@gmail.com>\n+\n+\t* Makefile.am (LTLDFLAGS): Add -bindir flag.\n+\t* Makefile.in: Regenerate.\n+\n+2009-08-17  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR fortran/41075\n+\t* io/io.h (enum format_token): Add FMT_STAR.\n+\t* io/format.c (format_lex): Add case for FMT_STAR.\n+\t(parse_format_list): Parse FMT_STAR and check for left paren\n+\tafter. (next_format0): Modify helper function to check for\n+\tunimited format and return the repeated format node.  Update\n+\tcomments to clarify.\n+\t\n+2009-08-15  Kai Tietz  <kai.tietz@onevision.com>\n+\n+\t* intrinsics/string_intrinsics_inc.c (string_len_trim): Use\n+\t__INTPTR_TYPE__ to cast from pointer to scalar integer, if\n+\t__INTPTR_TYPE is defined.\n+\n+2009-08-14  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\t* fmain.c: Add comment saying file is deprecated.\n+\n+2009-08-14  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\tPR libfortran/40863\n+\t* gfortran.map: Move new symbols to GFORTRAN_C99_1.1 version node.\n+\n+2009-08-09 Francois-Xavier Coudert <fxcoudert@gcc.gnu.org>\n+\n+\tPR libfortran/40549\n+\t* Makefile.in (LTLDFLAGS): Add -no-undefined.\n+\t* Makefile.am: Regenerate.\n+\t* libgfortran.h: Remove unused block of code.\n+\n+2009-08-02  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libfortran/40853\n+\t* io/list_read.c (nml_get_obj_data): Do not set nl\n+\tpointer to first_nl if nl->next is NULL.\n+\n+2009-07-31  Kaz Kojima  <kkojima@gcc.gnu.org>\n+\n+\t* Makefile.am: Don't set SECTION_FLAGS with @SECTION_FLAGS@.\n+\tDon't set IEEE_FLAGS with @IEEE_FLAGS@.\n+\t* Makefile.in: Regenerate.\n+\n+2009-07-30  Kaz Kojima  <kkojima@gcc.gnu.org>\n+\n+\t* configure.host: Define ieee_flags and set it to -mieee for sh.\n+\t* configure.ac: Set IEEE_FLAGS with ieee_flags.\n+\t* Makefile.am: Add IEEE_FLAGS to AM_CFLAGS.\n+\t* configure: Regenerate.\n+\t* Makefile.in: Regenerate.\n+\n+2009-07-30  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n+\n+\t* configure.ac (_AC_ARG_VAR_PRECIOUS): Use m4_rename_force.\n+\n+2009-07-27  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/40863\n+\t* c99_functions.c: Define complex I, if not defined.\n+\tCreate prototypes for C99 functions to silence warnings.\n+\t* gfortran.map: Add missing functions to GFORTRAN_C99_1.0\n+\tand new GFORTRAN_C99_1.1.\n+\n+2009-07-25  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/33197\n+\t* intrinsics/c99_functions.c (cacosf,cacos,cacosl,casinf,\n+\tcasin,casind,catanf,catan,catanl,cacoshf,cacosh,cacoshl,\n+\tcasinhf,casinh,casinhf,catanhf,catanh,catanhl): New functions.\n+\t* c99_protos.h: Add prototypes for those.\n+\n+2009-07-24  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR fortran/40643\n+\tPR fortran/31067\n+\t* libgfortran.h (GFC_REAL_4_INFINITY, GFC_REAL_8_INFINITY,\n+\tGFC_REAL_10_INFINITY, GFC_REAL_16_INFINITY, GFC_REAL_4_QUIET_NAN,\n+\tGFC_REAL_8_QUIET_NAN, GFC_REAL_10_QUIET_NAN, GFC_REAL_16_QUIET_NAN):\n+\tDefine.\n+\t* m4/iparm.m4 (atype_inf, atype_nan): Define.\n+\t* m4/ifunction.m4: Formatting.\n+\t* m4/iforeach.m4: Likewise.\n+\t(START_FOREACH_FUNCTION): Initialize dest to all 1s, not all 0s.\n+\t(START_FOREACH_BLOCK, FINISH_FOREACH_FUNCTION,\n+\tFINISH_MASKED_FOREACH_FUNCTION): Run foreach block inside a loop\n+\tuntil count[0] == extent[0].\n+\t* m4/minval.m4: Formatting.  Handle NaNs and infinities.  Optimize.\n+\t* m4/maxval.m4: Likewise.\n+\t* m4/minloc0.m4: Likewise.\n+\t* m4/maxloc0.m4: Likewise.\n+\t* m4/minloc1.m4: Likewise.\n+\t* m4/maxloc1.m4: Likewise.\n+\t* generated/maxloc0_16_i16.c: Regenerated.\n+\t* generated/maxloc0_16_i1.c: Likewise.\n+\t* generated/maxloc0_16_i2.c: Likewise.\n+\t* generated/maxloc0_16_i4.c: Likewise.\n+\t* generated/maxloc0_16_i8.c: Likewise.\n+\t* generated/maxloc0_16_r10.c: Likewise.\n+\t* generated/maxloc0_16_r16.c: Likewise.\n+\t* generated/maxloc0_16_r4.c: Likewise.\n+\t* generated/maxloc0_16_r8.c: Likewise.\n+\t* generated/maxloc0_4_i16.c: Likewise.\n+\t* generated/maxloc0_4_i1.c: Likewise.\n+\t* generated/maxloc0_4_i2.c: Likewise.\n+\t* generated/maxloc0_4_i4.c: Likewise.\n+\t* generated/maxloc0_4_i8.c: Likewise.\n+\t* generated/maxloc0_4_r10.c: Likewise.\n+\t* generated/maxloc0_4_r16.c: Likewise.\n+\t* generated/maxloc0_4_r4.c: Likewise.\n+\t* generated/maxloc0_4_r8.c: Likewise.\n+\t* generated/maxloc0_8_i16.c: Likewise.\n+\t* generated/maxloc0_8_i1.c: Likewise.\n+\t* generated/maxloc0_8_i2.c: Likewise.\n+\t* generated/maxloc0_8_i4.c: Likewise.\n+\t* generated/maxloc0_8_i8.c: Likewise.\n+\t* generated/maxloc0_8_r10.c: Likewise.\n+\t* generated/maxloc0_8_r16.c: Likewise.\n+\t* generated/maxloc0_8_r4.c: Likewise.\n+\t* generated/maxloc0_8_r8.c: Likewise.\n+\t* generated/maxloc1_16_i16.c: Likewise.\n+\t* generated/maxloc1_16_i1.c: Likewise.\n+\t* generated/maxloc1_16_i2.c: Likewise.\n+\t* generated/maxloc1_16_i4.c: Likewise.\n+\t* generated/maxloc1_16_i8.c: Likewise.\n+\t* generated/maxloc1_16_r10.c: Likewise.\n+\t* generated/maxloc1_16_r16.c: Likewise.\n+\t* generated/maxloc1_16_r4.c: Likewise.\n+\t* generated/maxloc1_16_r8.c: Likewise.\n+\t* generated/maxloc1_4_i16.c: Likewise.\n+\t* generated/maxloc1_4_i1.c: Likewise.\n+\t* generated/maxloc1_4_i2.c: Likewise.\n+\t* generated/maxloc1_4_i4.c: Likewise.\n+\t* generated/maxloc1_4_i8.c: Likewise.\n+\t* generated/maxloc1_4_r10.c: Likewise.\n+\t* generated/maxloc1_4_r16.c: Likewise.\n+\t* generated/maxloc1_4_r4.c: Likewise.\n+\t* generated/maxloc1_4_r8.c: Likewise.\n+\t* generated/maxloc1_8_i16.c: Likewise.\n+\t* generated/maxloc1_8_i1.c: Likewise.\n+\t* generated/maxloc1_8_i2.c: Likewise.\n+\t* generated/maxloc1_8_i4.c: Likewise.\n+\t* generated/maxloc1_8_i8.c: Likewise.\n+\t* generated/maxloc1_8_r10.c: Likewise.\n+\t* generated/maxloc1_8_r16.c: Likewise.\n+\t* generated/maxloc1_8_r4.c: Likewise.\n+\t* generated/maxloc1_8_r8.c: Likewise.\n+\t* generated/maxval_i16.c: Likewise.\n+\t* generated/maxval_i1.c: Likewise.\n+\t* generated/maxval_i2.c: Likewise.\n+\t* generated/maxval_i4.c: Likewise.\n+\t* generated/maxval_i8.c: Likewise.\n+\t* generated/maxval_r10.c: Likewise.\n+\t* generated/maxval_r16.c: Likewise.\n+\t* generated/maxval_r4.c: Likewise.\n+\t* generated/maxval_r8.c: Likewise.\n+\t* generated/minloc0_16_i16.c: Likewise.\n+\t* generated/minloc0_16_i1.c: Likewise.\n+\t* generated/minloc0_16_i2.c: Likewise.\n+\t* generated/minloc0_16_i4.c: Likewise.\n+\t* generated/minloc0_16_i8.c: Likewise.\n+\t* generated/minloc0_16_r10.c: Likewise.\n+\t* generated/minloc0_16_r16.c: Likewise.\n+\t* generated/minloc0_16_r4.c: Likewise.\n+\t* generated/minloc0_16_r8.c: Likewise.\n+\t* generated/minloc0_4_i16.c: Likewise.\n+\t* generated/minloc0_4_i1.c: Likewise.\n+\t* generated/minloc0_4_i2.c: Likewise.\n+\t* generated/minloc0_4_i4.c: Likewise.\n+\t* generated/minloc0_4_i8.c: Likewise.\n+\t* generated/minloc0_4_r10.c: Likewise.\n+\t* generated/minloc0_4_r16.c: Likewise.\n+\t* generated/minloc0_4_r4.c: Likewise.\n+\t* generated/minloc0_4_r8.c: Likewise.\n+\t* generated/minloc0_8_i16.c: Likewise.\n+\t* generated/minloc0_8_i1.c: Likewise.\n+\t* generated/minloc0_8_i2.c: Likewise.\n+\t* generated/minloc0_8_i4.c: Likewise.\n+\t* generated/minloc0_8_i8.c: Likewise.\n+\t* generated/minloc0_8_r10.c: Likewise.\n+\t* generated/minloc0_8_r16.c: Likewise.\n+\t* generated/minloc0_8_r4.c: Likewise.\n+\t* generated/minloc0_8_r8.c: Likewise.\n+\t* generated/minloc1_16_i16.c: Likewise.\n+\t* generated/minloc1_16_i1.c: Likewise.\n+\t* generated/minloc1_16_i2.c: Likewise.\n+\t* generated/minloc1_16_i4.c: Likewise.\n+\t* generated/minloc1_16_i8.c: Likewise.\n+\t* generated/minloc1_16_r10.c: Likewise.\n+\t* generated/minloc1_16_r16.c: Likewise.\n+\t* generated/minloc1_16_r4.c: Likewise.\n+\t* generated/minloc1_16_r8.c: Likewise.\n+\t* generated/minloc1_4_i16.c: Likewise.\n+\t* generated/minloc1_4_i1.c: Likewise.\n+\t* generated/minloc1_4_i2.c: Likewise.\n+\t* generated/minloc1_4_i4.c: Likewise.\n+\t* generated/minloc1_4_i8.c: Likewise.\n+\t* generated/minloc1_4_r10.c: Likewise.\n+\t* generated/minloc1_4_r16.c: Likewise.\n+\t* generated/minloc1_4_r4.c: Likewise.\n+\t* generated/minloc1_4_r8.c: Likewise.\n+\t* generated/minloc1_8_i16.c: Likewise.\n+\t* generated/minloc1_8_i1.c: Likewise.\n+\t* generated/minloc1_8_i2.c: Likewise.\n+\t* generated/minloc1_8_i4.c: Likewise.\n+\t* generated/minloc1_8_i8.c: Likewise.\n+\t* generated/minloc1_8_r10.c: Likewise.\n+\t* generated/minloc1_8_r16.c: Likewise.\n+\t* generated/minloc1_8_r4.c: Likewise.\n+\t* generated/minloc1_8_r8.c: Likewise.\n+\t* generated/minval_i16.c: Likewise.\n+\t* generated/minval_i1.c: Likewise.\n+\t* generated/minval_i2.c: Likewise.\n+\t* generated/minval_i4.c: Likewise.\n+\t* generated/minval_i8.c: Likewise.\n+\t* generated/minval_r10.c: Likewise.\n+\t* generated/minval_r16.c: Likewise.\n+\t* generated/minval_r4.c: Likewise.\n+\t* generated/minval_r8.c: Likewise.\n+\t* generated/product_c10.c: Likewise.\n+\t* generated/product_c16.c: Likewise.\n+\t* generated/product_c4.c: Likewise.\n+\t* generated/product_c8.c: Likewise.\n+\t* generated/product_i16.c: Likewise.\n+\t* generated/product_i1.c: Likewise.\n+\t* generated/product_i2.c: Likewise.\n+\t* generated/product_i4.c: Likewise.\n+\t* generated/product_i8.c: Likewise.\n+\t* generated/product_r10.c: Likewise.\n+\t* generated/product_r16.c: Likewise.\n+\t* generated/product_r4.c: Likewise.\n+\t* generated/product_r8.c: Likewise.\n+\t* generated/sum_c10.c: Likewise.\n+\t* generated/sum_c16.c: Likewise.\n+\t* generated/sum_c4.c: Likewise.\n+\t* generated/sum_c8.c: Likewise.\n+\t* generated/sum_i16.c: Likewise.\n+\t* generated/sum_i1.c: Likewise.\n+\t* generated/sum_i2.c: Likewise.\n+\t* generated/sum_i4.c: Likewise.\n+\t* generated/sum_i8.c: Likewise.\n+\t* generated/sum_r10.c: Likewise.\n+\t* generated/sum_r16.c: Likewise.\n+\t* generated/sum_r4.c: Likewise.\n+\t* generated/sum_r8.c: Likewise.\n+\n+2009-07-22  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libfortran/32784\n+\t* unix.c (regular_file): Check for CONIN$ CONOUT$, and CONERR$ and open\n+\tthe respective /dev/conin or /dev/conout devices.  This is Cygwin\n+\tspecific.\n+\n+2009-07-19  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR libfortran/34670\n+\tPR libfortran/36874\n+\t* Makefile.am:  Add bounds.c\n+\t* libgfortran.h (bounds_equal_extents):  Add prototype.\n+\t(bounds_iforeach_return):  Likewise.\n+\t(bounds_ifunction_return):  Likewise.\n+\t(bounds_reduced_extents):  Likewise.\n+\t* runtime/bounds.c:  New file.\n+\t(bounds_iforeach_return):  New function; correct typo in\n+\terror message.\n+\t(bounds_ifunction_return):  New function.\n+\t(bounds_equal_extents):  New function.\n+\t(bounds_reduced_extents):  Likewise.\n+\t* intrinsics/cshift0.c (cshift0):  Use new functions\n+\tfor bounds checking.\n+\t* intrinsics/eoshift0.c (eoshift0):  Likewise.\n+\t* intrinsics/eoshift2.c (eoshift2):  Likewise.\n+\t* m4/iforeach.m4:  Likewise.\n+\t* m4/eoshift1.m4:  Likewise.\n+\t* m4/eoshift3.m4:  Likewise.\n+\t* m4/cshift1.m4:  Likewise.\n+\t* m4/ifunction.m4:  Likewise.\n+\t* Makefile.in:  Regenerated.\n+\t* generated/cshift1_16.c: Regenerated.\n+\t* generated/cshift1_4.c: Regenerated.\n+\t* generated/cshift1_8.c: Regenerated.\n+\t* generated/eoshift1_16.c: Regenerated.\n+\t* generated/eoshift1_4.c: Regenerated.\n+\t* generated/eoshift1_8.c: Regenerated.\n+\t* generated/eoshift3_16.c: Regenerated.\n+\t* generated/eoshift3_4.c: Regenerated.\n+\t* generated/eoshift3_8.c: Regenerated.\n+\t* generated/maxloc0_16_i1.c: Regenerated.\n+\t* generated/maxloc0_16_i16.c: Regenerated.\n+\t* generated/maxloc0_16_i2.c: Regenerated.\n+\t* generated/maxloc0_16_i4.c: Regenerated.\n+\t* generated/maxloc0_16_i8.c: Regenerated.\n+\t* generated/maxloc0_16_r10.c: Regenerated.\n+\t* generated/maxloc0_16_r16.c: Regenerated.\n+\t* generated/maxloc0_16_r4.c: Regenerated.\n+\t* generated/maxloc0_16_r8.c: Regenerated.\n+\t* generated/maxloc0_4_i1.c: Regenerated.\n+\t* generated/maxloc0_4_i16.c: Regenerated.\n+\t* generated/maxloc0_4_i2.c: Regenerated.\n+\t* generated/maxloc0_4_i4.c: Regenerated.\n+\t* generated/maxloc0_4_i8.c: Regenerated.\n+\t* generated/maxloc0_4_r10.c: Regenerated.\n+\t* generated/maxloc0_4_r16.c: Regenerated.\n+\t* generated/maxloc0_4_r4.c: Regenerated.\n+\t* generated/maxloc0_4_r8.c: Regenerated.\n+\t* generated/maxloc0_8_i1.c: Regenerated.\n+\t* generated/maxloc0_8_i16.c: Regenerated.\n+\t* generated/maxloc0_8_i2.c: Regenerated.\n+\t* generated/maxloc0_8_i4.c: Regenerated.\n+\t* generated/maxloc0_8_i8.c: Regenerated.\n+\t* generated/maxloc0_8_r10.c: Regenerated.\n+\t* generated/maxloc0_8_r16.c: Regenerated.\n+\t* generated/maxloc0_8_r4.c: Regenerated.\n+\t* generated/maxloc0_8_r8.c: Regenerated.\n+\t* generated/maxloc1_16_i1.c: Regenerated.\n+\t* generated/maxloc1_16_i16.c: Regenerated.\n+\t* generated/maxloc1_16_i2.c: Regenerated.\n+\t* generated/maxloc1_16_i4.c: Regenerated.\n+\t* generated/maxloc1_16_i8.c: Regenerated.\n+\t* generated/maxloc1_16_r10.c: Regenerated.\n+\t* generated/maxloc1_16_r16.c: Regenerated.\n+\t* generated/maxloc1_16_r4.c: Regenerated.\n+\t* generated/maxloc1_16_r8.c: Regenerated.\n+\t* generated/maxloc1_4_i1.c: Regenerated.\n+\t* generated/maxloc1_4_i16.c: Regenerated.\n+\t* generated/maxloc1_4_i2.c: Regenerated.\n+\t* generated/maxloc1_4_i4.c: Regenerated.\n+\t* generated/maxloc1_4_i8.c: Regenerated.\n+\t* generated/maxloc1_4_r10.c: Regenerated.\n+\t* generated/maxloc1_4_r16.c: Regenerated.\n+\t* generated/maxloc1_4_r4.c: Regenerated.\n+\t* generated/maxloc1_4_r8.c: Regenerated.\n+\t* generated/maxloc1_8_i1.c: Regenerated.\n+\t* generated/maxloc1_8_i16.c: Regenerated.\n+\t* generated/maxloc1_8_i2.c: Regenerated.\n+\t* generated/maxloc1_8_i4.c: Regenerated.\n+\t* generated/maxloc1_8_i8.c: Regenerated.\n+\t* generated/maxloc1_8_r10.c: Regenerated.\n+\t* generated/maxloc1_8_r16.c: Regenerated.\n+\t* generated/maxloc1_8_r4.c: Regenerated.\n+\t* generated/maxloc1_8_r8.c: Regenerated.\n+\t* generated/maxval_i1.c: Regenerated.\n+\t* generated/maxval_i16.c: Regenerated.\n+\t* generated/maxval_i2.c: Regenerated.\n+\t* generated/maxval_i4.c: Regenerated.\n+\t* generated/maxval_i8.c: Regenerated.\n+\t* generated/maxval_r10.c: Regenerated.\n+\t* generated/maxval_r16.c: Regenerated.\n+\t* generated/maxval_r4.c: Regenerated.\n+\t* generated/maxval_r8.c: Regenerated.\n+\t* generated/minloc0_16_i1.c: Regenerated.\n+\t* generated/minloc0_16_i16.c: Regenerated.\n+\t* generated/minloc0_16_i2.c: Regenerated.\n+\t* generated/minloc0_16_i4.c: Regenerated.\n+\t* generated/minloc0_16_i8.c: Regenerated.\n+\t* generated/minloc0_16_r10.c: Regenerated.\n+\t* generated/minloc0_16_r16.c: Regenerated.\n+\t* generated/minloc0_16_r4.c: Regenerated.\n+\t* generated/minloc0_16_r8.c: Regenerated.\n+\t* generated/minloc0_4_i1.c: Regenerated.\n+\t* generated/minloc0_4_i16.c: Regenerated.\n+\t* generated/minloc0_4_i2.c: Regenerated.\n+\t* generated/minloc0_4_i4.c: Regenerated.\n+\t* generated/minloc0_4_i8.c: Regenerated.\n+\t* generated/minloc0_4_r10.c: Regenerated.\n+\t* generated/minloc0_4_r16.c: Regenerated.\n+\t* generated/minloc0_4_r4.c: Regenerated.\n+\t* generated/minloc0_4_r8.c: Regenerated.\n+\t* generated/minloc0_8_i1.c: Regenerated.\n+\t* generated/minloc0_8_i16.c: Regenerated.\n+\t* generated/minloc0_8_i2.c: Regenerated.\n+\t* generated/minloc0_8_i4.c: Regenerated.\n+\t* generated/minloc0_8_i8.c: Regenerated.\n+\t* generated/minloc0_8_r10.c: Regenerated.\n+\t* generated/minloc0_8_r16.c: Regenerated.\n+\t* generated/minloc0_8_r4.c: Regenerated.\n+\t* generated/minloc0_8_r8.c: Regenerated.\n+\t* generated/minloc1_16_i1.c: Regenerated.\n+\t* generated/minloc1_16_i16.c: Regenerated.\n+\t* generated/minloc1_16_i2.c: Regenerated.\n+\t* generated/minloc1_16_i4.c: Regenerated.\n+\t* generated/minloc1_16_i8.c: Regenerated.\n+\t* generated/minloc1_16_r10.c: Regenerated.\n+\t* generated/minloc1_16_r16.c: Regenerated.\n+\t* generated/minloc1_16_r4.c: Regenerated.\n+\t* generated/minloc1_16_r8.c: Regenerated.\n+\t* generated/minloc1_4_i1.c: Regenerated.\n+\t* generated/minloc1_4_i16.c: Regenerated.\n+\t* generated/minloc1_4_i2.c: Regenerated.\n+\t* generated/minloc1_4_i4.c: Regenerated.\n+\t* generated/minloc1_4_i8.c: Regenerated.\n+\t* generated/minloc1_4_r10.c: Regenerated.\n+\t* generated/minloc1_4_r16.c: Regenerated.\n+\t* generated/minloc1_4_r4.c: Regenerated.\n+\t* generated/minloc1_4_r8.c: Regenerated.\n+\t* generated/minloc1_8_i1.c: Regenerated.\n+\t* generated/minloc1_8_i16.c: Regenerated.\n+\t* generated/minloc1_8_i2.c: Regenerated.\n+\t* generated/minloc1_8_i4.c: Regenerated.\n+\t* generated/minloc1_8_i8.c: Regenerated.\n+\t* generated/minloc1_8_r10.c: Regenerated.\n+\t* generated/minloc1_8_r16.c: Regenerated.\n+\t* generated/minloc1_8_r4.c: Regenerated.\n+\t* generated/minloc1_8_r8.c: Regenerated.\n+\t* generated/minval_i1.c: Regenerated.\n+\t* generated/minval_i16.c: Regenerated.\n+\t* generated/minval_i2.c: Regenerated.\n+\t* generated/minval_i4.c: Regenerated.\n+\t* generated/minval_i8.c: Regenerated.\n+\t* generated/minval_r10.c: Regenerated.\n+\t* generated/minval_r16.c: Regenerated.\n+\t* generated/minval_r4.c: Regenerated.\n+\t* generated/minval_r8.c: Regenerated.\n+\t* generated/product_c10.c: Regenerated.\n+\t* generated/product_c16.c: Regenerated.\n+\t* generated/product_c4.c: Regenerated.\n+\t* generated/product_c8.c: Regenerated.\n+\t* generated/product_i1.c: Regenerated.\n+\t* generated/product_i16.c: Regenerated.\n+\t* generated/product_i2.c: Regenerated.\n+\t* generated/product_i4.c: Regenerated.\n+\t* generated/product_i8.c: Regenerated.\n+\t* generated/product_r10.c: Regenerated.\n+\t* generated/product_r16.c: Regenerated.\n+\t* generated/product_r4.c: Regenerated.\n+\t* generated/product_r8.c: Regenerated.\n+\t* generated/sum_c10.c: Regenerated.\n+\t* generated/sum_c16.c: Regenerated.\n+\t* generated/sum_c4.c: Regenerated.\n+\t* generated/sum_c8.c: Regenerated.\n+\t* generated/sum_i1.c: Regenerated.\n+\t* generated/sum_i16.c: Regenerated.\n+\t* generated/sum_i2.c: Regenerated.\n+\t* generated/sum_i4.c: Regenerated.\n+\t* generated/sum_i8.c: Regenerated.\n+\t* generated/sum_r10.c: Regenerated.\n+\t* generated/sum_r16.c: Regenerated.\n+\t* generated/sum_r4.c: Regenerated.\n+\t* generated/sum_r8.c: Regenerated.\n+\n+2009-07-17  Janne Blomqvist  <jb@gcc.gnu.org>\n+\t    Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\t\t\n+\tPR libfortran/40714\n+\t* io/transfer.c (finalize_transfer): Set current_record to 0\n+\tbefore returning in case of error.\n+\n+2009-07-12  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR libfortran/22423\n+\t* io/io.h (namelist_type): Use the proper enum for GFC_DTYPE_*.\n+\t* intrinsics/iso_c_binding.c (c_f_pointer_u0): Make sure\n+\tvariable is initialized to silence warning.\n+\n+2009-07-10  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\t* c99_functions.c (ccoshf, ccosh, ccoshl, ctanhf, ctanh, ctanl):\n+\tFix errant minus.\n+\n+2009-07-08  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libfortran/40330\n+\tPR libfortran/40662\n+\t* io/io.h (st_parameter_dt): Define format_not_saved bit used to signal\n+\twhether the parsed format data was previously saved. Used to determine\n+\tif the current format data should be freed or not.\n+\t* io/transfer.c (st_read_done): Use the format_not_saved bit.\n+\t(st_write_done): Likewise.\n+\t* io/format.c (parse_format_list): Add boolean pointer to arg list. This\n+\tpointer is used to return status to the caller regarding whether it is\n+\tsafe to cache the parsed format data.  Currently, if a FMT_STRING token\n+\tis encounetered, it is not safe to cache. Also, added a local boolean\n+\tvariable to hold this information as recursive calls to\n+\tparse_format_list are made.  Remove previous save_format logic.\n+\t(parse_format): Do not use the format caching facility if the current\n+\tunit is an internal unit or if it is not safe to save parsed format\n+\tdata.\n+\t\n+2009-06-29  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libfortran/40576\n+\t* io/transfer.c (sset): Adjust exit condition for loop.\n+\n+2009-06-22  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libfortran/40508\n+\t* io/format.c: Don't save parsed format data for internal units.\n+\n+2009-06-21  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/37577\n+\tPort from fortran-dev\n+\t* runtime/in_pack_generic (internal_pack):  Remove unnecessary\n+\ttest for stride == 0.\n+\t* runtime/in_unpack_generic.c (internal_unpack):  Likewise.\n+\t* intrinsics/iso_c_binding.c (c_f_pointer_u0):  Take care\n+\tof stride in \"shape\" argument.  Use array access macros for\n+\taccessing array descriptors.\n+\t* libgfortran.h (struct descriptor_dimension):  Change stride\n+\tto _stride, lbound to _lbound and ubound to _ubound.\n+\t(GFC_DIMENSION_LBOUND):  Use new name(s) in struct\n+\tdescriptor_dimension.\n+\t(GFC_DIMENSION_UBOUND):  Likewise.\n+\t(GFC_DIMENSION_STRIDE):  Likewise.\n+\t(GFC_DIMENSION_EXTENT):  Likewise.\n+\t(GFC_DIMENSION_SET):  Likewise.\n+\t(GFC_DESCRIPTOR_LBOUND):  Likewise.\n+\t(GFC_DESCRIPTOR_UBOUND):  Likewise.\n+\t(GFC_DESCRIPTOR_EXTENT):  Likewise.\n+\t(GFC_DESCRIPTOR_STRIDE):  Likewise.\n+\t* io/transfer.c (transfer_array):  Use array access macros.\n+\tUse byte-sized strides.\n+\t* intrinsics/eoshift0.c (eoshift0):  Use array access\n+\tmacros everywhere.\n+\t* m4/in_pack.m4 (internal_pack_'rtype_ccode`):  Use\n+\tarray access macros for accessing array descriptors.\n+\t* m4/in_unpack.m4 (internal_unpack_'rtype_ccode`):\n+\tLikewise.\n+\t* m4/matmull.m4 (matmul_'rtype_code`):  Likewise.\n+\t* m4/matmul.m4 (matmul_'rtype_code`):  Likewise.\n+\t* m4/unpack.m4 (unpack0_'rtype_code`):  Likewise.\n+\t(unpack1_'rtype_code`):  Likewise.\n+\t* m4/ifunction_logical.m4 (name`'rtype_qual`_'atype_code): Likewise.\n+\t* m4/ifunction.m4 (name`'rtype_qual`_'atype_code): Use array access\n+\tmacros everywhere.\n+\t\t* intrinsics/dtime.c (dtime_sub):  Use array access macros\n+\tfor accessing array descriptors.\n+\t* intrinsics/cshift0 (cshift0):  Likewise.\n+\t* intrinsics/etime.c:  Likewise.  Remove redundant calculation\n+\tof rdim.\n+\t* m4/cshift0.m4 (cshift0_'rtype_code`):  Use array access macros\n+\tfor accessing array descriptors.\n+\t* m4/pack.m4 (pack_'rtype_code`):  Likewise.\n+\t* m4/spread.m4 (spread_'rtype_code`):  Likewise.\n+\t(spread_scalar_'rtype_code`):  Likewise.\n+\t* m4/transpose.m4 (transpose_'rtype_code`):  Likewise.\n+\t* m4/iforeach.m4 (name`'rtype_qual`_'atype_code):  Likewise.\n+\t* m4/eoshift1.m4 (eoshift1):  Likewise.  Remove size argument,\n+\tcalculate within function.\n+\t(eoshift1_'atype_kind`):  Remove size argument from call\n+\tto eoshift1.\n+\t(eoshift1_'atype_kind`_char):  Likewise.\n+\t(eoshift1_'atype_kind`_char4):  Likewise.\n+\t* m4/eoshift3.m4 (eoshift3):  Remove size argument, calculate\n+\twithin function. Use array access macros for accessing array\n+\tdescriptors.\n+\t(eoshift3_'atype_kind`):  Remove size argument from call\n+\tto eoshift1.\n+\t(eoshift3_'atype_kind`_char):  Likewise.\n+\t(eoshift3_'atype_kind`_char4):  Likewise.\n+\t* m4/shape.m4 (shape_'rtype_kind`):  Use array access macros\n+\tfor accessing array descriptors.\n+\t* m4/cshift1.m4 (cshift1): Remove size argument, calculate\n+\twithin function. Use array access macros for accessing array\n+\tdescriptors.\n+\t(cshift1_'atype_kind`):  Remove size argument from call to\n+\tcshift1.\n+\t(cshift1_'atype_kind`_char):  Remove size argument from call to\n+\tcshift1.\n+\t(cshift1_'atype_kind`_char4):  Remove size argument from call to\n+\tcshift1.\n+\t* m4/reshape.m4 (reshape_'rtype_ccode`):  Use array access macros\n+\tfor accessing array descriptors.\n+\t* m4/ifunction.m4 (name`'rtype_qual`_'atype_code):  Likewise.\n+\t* intrinsics/pack_generic.c (pack_internal):  Use array access\n+\tmacros for accessing array descriptors.\n+\t(pack_s_internal):  Likewise.\n+\t* intrinsics/transpose_generic.c (transpose_internal):  Remove\n+\tsize argument, calculate from array descriptor. Use array\n+\taccess macros for accessing array descriptors.\n+\t(transpose):  Remove size argument from call.\n+\t(transpoe_char):  Likewise.\n+\t(transpose_char4):  Likewise.\n+\t* intrinsics/move_alloc.c (move_alloc):  Use array access macros\n+\tfor accessing array descriptors.\n+\t* intrinsics/spread_generic.c (spread_internal):  Remove size\n+\targument, calculate from array descriptor.  Use array access\n+\tmacros for accessing array descriptors.\n+\t(spread_internal_scalar):  Likewise.\n+\t(spread):  Remove size argument from call to spread_internal.\n+\t(spread_char):  Mark argument source_length as unused.\n+\tRemove size argument from call to spread_internal.\n+\t(spread_char4):  Likewise.\n+\t(spread_char_scalar):  Likewise.\n+\t(spread_char4_scalar):  Likewise.\n+\t* intrinsics/unpack_generic.c (unpack_internal):  Use array access\n+\tmacros for accessing array descriptors.\n+\t* intrinsics/eoshift2.c (eoshift2):  Remove size argument, calculate\n+\tfrom array descriptor instead.  Use array access macros for\n+\taccessing array descriptors.\n+\t(eoshift2_##N):  Remove size argument from call to eoshift2.\n+\t(eoshift2_##N_##char):  Likewise.\n+\t(eoshift2_##N_##char4):  Likewise.\n+\t* intrinsics/reshape_generic.c (reshape_internal):  Use array\n+\taccess macross for accessing array descriptors.\n+\t* libgfortran.h:  Introduce new macros GFC_DIMENSION_LBOUND,\n+\tGFC_DIMENSION_UBOUND,GFC_DIMENSION_STRIDE, GFC_DIMENSION_EXTENT,\n+\tGFC_DIMENSION_SET, GFC_DESCRIPTOR_LBOUND, GFC_DESCRIPTOR_UBOUND,\n+\tGFC_DESCRIPTOR_EXTENT, GFC_DESCRIPTOR_EXTENT_BYTES,\n+\tGFC_DESCRIPTOR_STRIDE, GFC_DESCRIPTOR_STRIDE_BYTES\n+\t* runtime/in_pack_generic.c (internal_pack):  Use new macros\n+\tfor array descriptor access.\n+\t* runtime/in_unpack_generic.c (internal_unpack):  Likewise.\n+\t* intrinsics/dtime.c (dtime_sub):  Likewise.\n+\t* intrinsics/cshift0 (cshift0):  Remove argument size,\n+\tcalculate directly from the array descriptor.  Use new macros\n+\tfor array descriptor access.\n+\t* cshift0_##N:  Remove shift argument in call to cshift0.\n+\t* cshift0_##N_char:  Mark array_length as unused.  Remove\n+\tarray_length in call to cshift0.\n+\t* cshift0_##N_char4:  Likewise.\n+\t* intrisics/etime.c:  Use new macros for array descriptor access.\n+\t* intrinsics/stat.c (stat_i4_sub_0):  Likewise.\n+\t(stat_i8_sub_0):  Likewise.\n+\t(fstat_i4_sub):  Likewise.\n+\t(fstat_i8_sub):  Likewise.\n+\t* intrinsics/date_and_time.c (date_and_time):  Likewise.\n+\t(secnds):  Likewise.\n+\t(itime_i4):  Likewise.\n+\t(itime_i8):  Likewise.\n+\t(idate_i4):  Likewise.\n+\t(idate_i8):  Likewise.\n+\t(gmtime_i4):  Likewise.\n+\t(gmtime_i8):  Likewise.\n+\t(ltime_i4):  Likewise.\n+\t(litme_i8):  Likewise.\n+\t* intrinsics/associated.c (associated):  Likewise.\n+\t* intrinsics/eoshift0.c (eoshift0):  Likewise.\n+\t* intriniscs/size.c (size0):  Likewise.\n+\t* intrinsics/random.c (arandom_r4):  Likewise.\n+\t(arandom_r8):  Likewise.\n+\t(arandom_r10):  Likewise.\n+\t(arandom_r16):  Likewise.\n+\t(random_seed_i4):  Likewise.\n+\t(random_seed_i8):  Likewise.\n+\t* io/list_read.c (nml_parse_qualifier):  Likewise.\n+\t(nml_touch_nodes):  Likewise.\n+\t(nml_read_obj):  Likewise.\n+\t(get_name):  Likewise.\n+\t* io/transfer.c (transfer_array):  Likewise.\n+\t(init_loop_spec):  Likewise.\n+\t(st_set_nml_var_dim):  Likewise.\n+\t* io/write.c (nml_write_obj):  Likewise.\n+\t(obj_loop):  Likewise.\n+\t* generated/all_l1.c: Regenerated.\n+\t* generated/all_l16.c: Regenerated.\n+\t* generated/all_l2.c: Regenerated.\n+\t* generated/all_l4.c: Regenerated.\n+\t* generated/all_l8.c: Regenerated.\n+\t* generated/any_l1.c: Regenerated.\n+\t* generated/any_l16.c: Regenerated.\n+\t* generated/any_l2.c: Regenerated.\n+\t* generated/any_l4.c: Regenerated.\n+\t* generated/any_l8.c: Regenerated.\n+\t* generated/count_16_l.c: Regenerated.\n+\t* generated/count_1_l.c: Regenerated.\n+\t* generated/count_2_l.c: Regenerated.\n+\t* generated/count_4_l.c: Regenerated.\n+\t* generated/count_8_l.c: Regenerated.\n+\t* generated/cshift0_c10.c: Regenerated.\n+\t* generated/cshift0_c16.c: Regenerated.\n+\t* generated/cshift0_c4.c: Regenerated.\n+\t* generated/cshift0_c8.c: Regenerated.\n+\t* generated/cshift0_i1.c: Regenerated.\n+\t* generated/cshift0_i16.c: Regenerated.\n+\t* generated/cshift0_i2.c: Regenerated.\n+\t* generated/cshift0_i4.c: Regenerated.\n+\t* generated/cshift0_i8.c: Regenerated.\n+\t* generated/cshift0_r10.c: Regenerated.\n+\t* generated/cshift0_r16.c: Regenerated.\n+\t* generated/cshift0_r4.c: Regenerated.\n+\t* generated/cshift0_r8.c: Regenerated.\n+\t* generated/cshift1_16.c: Regenerated.\n+\t* generated/cshift1_4.c: Regenerated.\n+\t* generated/cshift1_8.c: Regenerated.\n+\t* generated/eoshift1_16.c: Regenerated.\n+\t* generated/eoshift1_4.c: Regenerated.\n+\t* generated/eoshift1_8.c: Regenerated.\n+\t* generated/eoshift3_16.c: Regenerated.\n+\t* generated/eoshift3_4.c: Regenerated.\n+\t* generated/eoshift3_8.c: Regenerated.\n+\t* generated/in_pack_c10.c: Regenerated.\n+\t* generated/in_pack_c16.c: Regenerated.\n+\t* generated/in_pack_c4.c: Regenerated.\n+\t* generated/in_pack_c8.c: Regenerated.\n+\t* generated/in_pack_i1.c: Regenerated.\n+\t* generated/in_pack_i16.c: Regenerated.\n+\t* generated/in_pack_i2.c: Regenerated.\n+\t* generated/in_pack_i4.c: Regenerated.\n+\t* generated/in_pack_i8.c: Regenerated.\n+\t* generated/in_pack_r10.c: Regenerated.\n+\t* generated/in_pack_r16.c: Regenerated.\n+\t* generated/in_pack_r4.c: Regenerated.\n+\t* generated/in_pack_r8.c: Regenerated.\n+\t* generated/in_unpack_c10.c: Regenerated.\n+\t* generated/in_unpack_c16.c: Regenerated.\n+\t* generated/in_unpack_c4.c: Regenerated.\n+\t* generated/in_unpack_c8.c: Regenerated.\n+\t* generated/in_unpack_i1.c: Regenerated.\n+\t* generated/in_unpack_i16.c: Regenerated.\n+\t* generated/in_unpack_i2.c: Regenerated.\n+\t* generated/in_unpack_i4.c: Regenerated.\n+\t* generated/in_unpack_i8.c: Regenerated.\n+\t* generated/in_unpack_r10.c: Regenerated.\n+\t* generated/in_unpack_r16.c: Regenerated.\n+\t* generated/in_unpack_r4.c: Regenerated.\n+\t* generated/in_unpack_r8.c: Regenerated.\n+\t* generated/matmul_c10.c: Regenerated.\n+\t* generated/matmul_c16.c: Regenerated.\n+\t* generated/matmul_c4.c: Regenerated.\n+\t* generated/matmul_c8.c: Regenerated.\n+\t* generated/matmul_i1.c: Regenerated.\n+\t* generated/matmul_i16.c: Regenerated.\n+\t* generated/matmul_i2.c: Regenerated.\n+\t* generated/matmul_i4.c: Regenerated.\n+\t* generated/matmul_i8.c: Regenerated.\n+\t* generated/matmul_l16.c: Regenerated.\n+\t* generated/matmul_l4.c: Regenerated.\n+\t* generated/matmul_l8.c: Regenerated.\n+\t* generated/matmul_r10.c: Regenerated.\n+\t* generated/matmul_r16.c: Regenerated.\n+\t* generated/matmul_r4.c: Regenerated.\n+\t* generated/matmul_r8.c: Regenerated.\n+\t* generated/maxloc0_16_i1.c: Regenerated.\n+\t* generated/maxloc0_16_i16.c: Regenerated.\n+\t* generated/maxloc0_16_i2.c: Regenerated.\n+\t* generated/maxloc0_16_i4.c: Regenerated.\n+\t* generated/maxloc0_16_i8.c: Regenerated.\n+\t* generated/maxloc0_16_r10.c: Regenerated.\n+\t* generated/maxloc0_16_r16.c: Regenerated.\n+\t* generated/maxloc0_16_r4.c: Regenerated.\n+\t* generated/maxloc0_16_r8.c: Regenerated.\n+\t* generated/maxloc0_4_i1.c: Regenerated.\n+\t* generated/maxloc0_4_i16.c: Regenerated.\n+\t* generated/maxloc0_4_i2.c: Regenerated.\n+\t* generated/maxloc0_4_i4.c: Regenerated.\n+\t* generated/maxloc0_4_i8.c: Regenerated.\n+\t* generated/maxloc0_4_r10.c: Regenerated.\n+\t* generated/maxloc0_4_r16.c: Regenerated.\n+\t* generated/maxloc0_4_r4.c: Regenerated.\n+\t* generated/maxloc0_4_r8.c: Regenerated.\n+\t* generated/maxloc0_8_i1.c: Regenerated.\n+\t* generated/maxloc0_8_i16.c: Regenerated.\n+\t* generated/maxloc0_8_i2.c: Regenerated.\n+\t* generated/maxloc0_8_i4.c: Regenerated.\n+\t* generated/maxloc0_8_i8.c: Regenerated.\n+\t* generated/maxloc0_8_r10.c: Regenerated.\n+\t* generated/maxloc0_8_r16.c: Regenerated.\n+\t* generated/maxloc0_8_r4.c: Regenerated.\n+\t* generated/maxloc0_8_r8.c: Regenerated.\n+\t* generated/maxloc1_16_i1.c: Regenerated.\n+\t* generated/maxloc1_16_i16.c: Regenerated.\n+\t* generated/maxloc1_16_i2.c: Regenerated.\n+\t* generated/maxloc1_16_i4.c: Regenerated.\n+\t* generated/maxloc1_16_i8.c: Regenerated.\n+\t* generated/maxloc1_16_r10.c: Regenerated.\n+\t* generated/maxloc1_16_r16.c: Regenerated.\n+\t* generated/maxloc1_16_r4.c: Regenerated.\n+\t* generated/maxloc1_16_r8.c: Regenerated.\n+\t* generated/maxloc1_4_i1.c: Regenerated.\n+\t* generated/maxloc1_4_i16.c: Regenerated.\n+\t* generated/maxloc1_4_i2.c: Regenerated.\n+\t* generated/maxloc1_4_i4.c: Regenerated.\n+\t* generated/maxloc1_4_i8.c: Regenerated.\n+\t* generated/maxloc1_4_r10.c: Regenerated.\n+\t* generated/maxloc1_4_r16.c: Regenerated.\n+\t* generated/maxloc1_4_r4.c: Regenerated.\n+\t* generated/maxloc1_4_r8.c: Regenerated.\n+\t* generated/maxloc1_8_i1.c: Regenerated.\n+\t* generated/maxloc1_8_i16.c: Regenerated.\n+\t* generated/maxloc1_8_i2.c: Regenerated.\n+\t* generated/maxloc1_8_i4.c: Regenerated.\n+\t* generated/maxloc1_8_i8.c: Regenerated.\n+\t* generated/maxloc1_8_r10.c: Regenerated.\n+\t* generated/maxloc1_8_r16.c: Regenerated.\n+\t* generated/maxloc1_8_r4.c: Regenerated.\n+\t* generated/maxloc1_8_r8.c: Regenerated.\n+\t* generated/maxval_i1.c: Regenerated.\n+\t* generated/maxval_i16.c: Regenerated.\n+\t* generated/maxval_i2.c: Regenerated.\n+\t* generated/maxval_i4.c: Regenerated.\n+\t* generated/maxval_i8.c: Regenerated.\n+\t* generated/maxval_r10.c: Regenerated.\n+\t* generated/maxval_r16.c: Regenerated.\n+\t* generated/maxval_r4.c: Regenerated.\n+\t* generated/maxval_r8.c: Regenerated.\n+\t* generated/minloc0_16_i1.c: Regenerated.\n+\t* generated/minloc0_16_i16.c: Regenerated.\n+\t* generated/minloc0_16_i2.c: Regenerated.\n+\t* generated/minloc0_16_i4.c: Regenerated.\n+\t* generated/minloc0_16_i8.c: Regenerated.\n+\t* generated/minloc0_16_r10.c: Regenerated.\n+\t* generated/minloc0_16_r16.c: Regenerated.\n+\t* generated/minloc0_16_r4.c: Regenerated.\n+\t* generated/minloc0_16_r8.c: Regenerated.\n+\t* generated/minloc0_4_i1.c: Regenerated.\n+\t* generated/minloc0_4_i16.c: Regenerated.\n+\t* generated/minloc0_4_i2.c: Regenerated.\n+\t* generated/minloc0_4_i4.c: Regenerated.\n+\t* generated/minloc0_4_i8.c: Regenerated.\n+\t* generated/minloc0_4_r10.c: Regenerated.\n+\t* generated/minloc0_4_r16.c: Regenerated.\n+\t* generated/minloc0_4_r4.c: Regenerated.\n+\t* generated/minloc0_4_r8.c: Regenerated.\n+\t* generated/minloc0_8_i1.c: Regenerated.\n+\t* generated/minloc0_8_i16.c: Regenerated.\n+\t* generated/minloc0_8_i2.c: Regenerated.\n+\t* generated/minloc0_8_i4.c: Regenerated.\n+\t* generated/minloc0_8_i8.c: Regenerated.\n+\t* generated/minloc0_8_r10.c: Regenerated.\n+\t* generated/minloc0_8_r16.c: Regenerated.\n+\t* generated/minloc0_8_r4.c: Regenerated.\n+\t* generated/minloc0_8_r8.c: Regenerated.\n+\t* generated/minloc1_16_i1.c: Regenerated.\n+\t* generated/minloc1_16_i16.c: Regenerated.\n+\t* generated/minloc1_16_i2.c: Regenerated.\n+\t* generated/minloc1_16_i4.c: Regenerated.\n+\t* generated/minloc1_16_i8.c: Regenerated.\n+\t* generated/minloc1_16_r10.c: Regenerated.\n+\t* generated/minloc1_16_r16.c: Regenerated.\n+\t* generated/minloc1_16_r4.c: Regenerated.\n+\t* generated/minloc1_16_r8.c: Regenerated.\n+\t* generated/minloc1_4_i1.c: Regenerated.\n+\t* generated/minloc1_4_i16.c: Regenerated.\n+\t* generated/minloc1_4_i2.c: Regenerated.\n+\t* generated/minloc1_4_i4.c: Regenerated.\n+\t* generated/minloc1_4_i8.c: Regenerated.\n+\t* generated/minloc1_4_r10.c: Regenerated.\n+\t* generated/minloc1_4_r16.c: Regenerated.\n+\t* generated/minloc1_4_r4.c: Regenerated.\n+\t* generated/minloc1_4_r8.c: Regenerated.\n+\t* generated/minloc1_8_i1.c: Regenerated.\n+\t* generated/minloc1_8_i16.c: Regenerated.\n+\t* generated/minloc1_8_i2.c: Regenerated.\n+\t* generated/minloc1_8_i4.c: Regenerated.\n+\t* generated/minloc1_8_i8.c: Regenerated.\n+\t* generated/minloc1_8_r10.c: Regenerated.\n+\t* generated/minloc1_8_r16.c: Regenerated.\n+\t* generated/minloc1_8_r4.c: Regenerated.\n+\t* generated/minloc1_8_r8.c: Regenerated.\n+\t* generated/minval_i1.c: Regenerated.\n+\t* generated/minval_i16.c: Regenerated.\n+\t* generated/minval_i2.c: Regenerated.\n+\t* generated/minval_i4.c: Regenerated.\n+\t* generated/minval_i8.c: Regenerated.\n+\t* generated/minval_r10.c: Regenerated.\n+\t* generated/minval_r16.c: Regenerated.\n+\t* generated/minval_r4.c: Regenerated.\n+\t* generated/minval_r8.c: Regenerated.\n+\t* generated/pack_c10.c: Regenerated.\n+\t* generated/pack_c16.c: Regenerated.\n+\t* generated/pack_c4.c: Regenerated.\n+\t* generated/pack_c8.c: Regenerated.\n+\t* generated/pack_i1.c: Regenerated.\n+\t* generated/pack_i16.c: Regenerated.\n+\t* generated/pack_i2.c: Regenerated.\n+\t* generated/pack_i4.c: Regenerated.\n+\t* generated/pack_i8.c: Regenerated.\n+\t* generated/pack_r10.c: Regenerated.\n+\t* generated/pack_r16.c: Regenerated.\n+\t* generated/pack_r4.c: Regenerated.\n+\t* generated/pack_r8.c: Regenerated.\n+\t* generated/product_c10.c: Regenerated.\n+\t* generated/product_c16.c: Regenerated.\n+\t* generated/product_c4.c: Regenerated.\n+\t* generated/product_c8.c: Regenerated.\n+\t* generated/product_i1.c: Regenerated.\n+\t* generated/product_i16.c: Regenerated.\n+\t* generated/product_i2.c: Regenerated.\n+\t* generated/product_i4.c: Regenerated.\n+\t* generated/product_i8.c: Regenerated.\n+\t* generated/product_r10.c: Regenerated.\n+\t* generated/product_r16.c: Regenerated.\n+\t* generated/product_r4.c: Regenerated.\n+\t* generated/product_r8.c: Regenerated.\n+\t* generated/reshape_c10.c: Regenerated.\n+\t* generated/reshape_c16.c: Regenerated.\n+\t* generated/reshape_c4.c: Regenerated.\n+\t* generated/reshape_c8.c: Regenerated.\n+\t* generated/reshape_i16.c: Regenerated.\n+\t* generated/reshape_i4.c: Regenerated.\n+\t* generated/reshape_i8.c: Regenerated.\n+\t* generated/reshape_r10.c: Regenerated.\n+\t* generated/reshape_r16.c: Regenerated.\n+\t* generated/reshape_r4.c: Regenerated.\n+\t* generated/reshape_r8.c: Regenerated.\n+\t* generated/shape_i16.c: Regenerated.\n+\t* generated/shape_i4.c: Regenerated.\n+\t* generated/shape_i8.c: Regenerated.\n+\t* generated/spread_c10.c: Regenerated.\n+\t* generated/spread_c16.c: Regenerated.\n+\t* generated/spread_c4.c: Regenerated.\n+\t* generated/spread_c8.c: Regenerated.\n+\t* generated/spread_i1.c: Regenerated.\n+\t* generated/spread_i16.c: Regenerated.\n+\t* generated/spread_i2.c: Regenerated.\n+\t* generated/spread_i4.c: Regenerated.\n+\t* generated/spread_i8.c: Regenerated.\n+\t* generated/spread_r10.c: Regenerated.\n+\t* generated/spread_r16.c: Regenerated.\n+\t* generated/spread_r4.c: Regenerated.\n+\t* generated/spread_r8.c: Regenerated.\n+\t* generated/sum_c10.c: Regenerated.\n+\t* generated/sum_c16.c: Regenerated.\n+\t* generated/sum_c4.c: Regenerated.\n+\t* generated/sum_c8.c: Regenerated.\n+\t* generated/sum_i1.c: Regenerated.\n+\t* generated/sum_i16.c: Regenerated.\n+\t* generated/sum_i2.c: Regenerated.\n+\t* generated/sum_i4.c: Regenerated.\n+\t* generated/sum_i8.c: Regenerated.\n+\t* generated/sum_r10.c: Regenerated.\n+\t* generated/sum_r16.c: Regenerated.\n+\t* generated/sum_r4.c: Regenerated.\n+\t* generated/sum_r8.c: Regenerated.\n+\t* generated/transpose_c10.c: Regenerated.\n+\t* generated/transpose_c16.c: Regenerated.\n+\t* generated/transpose_c4.c: Regenerated.\n+\t* generated/transpose_c8.c: Regenerated.\n+\t* generated/transpose_i16.c: Regenerated.\n+\t* generated/transpose_i4.c: Regenerated.\n+\t* generated/transpose_i8.c: Regenerated.\n+\t* generated/transpose_r10.c: Regenerated.\n+\t* generated/transpose_r16.c: Regenerated.\n+\t* generated/transpose_r4.c: Regenerated.\n+\t* generated/transpose_r8.c: Regenerated.\n+\t* generated/unpack_c10.c: Regenerated.\n+\t* generated/unpack_c16.c: Regenerated.\n+\t* generated/unpack_c4.c: Regenerated.\n+\t* generated/unpack_c8.c: Regenerated.\n+\t* generated/unpack_i1.c: Regenerated.\n+\t* generated/unpack_i16.c: Regenerated.\n+\t* generated/unpack_i2.c: Regenerated.\n+\t* generated/unpack_i4.c: Regenerated.\n+\t* generated/unpack_i8.c: Regenerated.\n+\t* generated/unpack_r10.c: Regenerated.\n+\t* generated/unpack_r16.c: Regenerated.\n+\t* generated/unpack_r4.c: Regenerated.\n+\t* generated/unpack_r8.c: Regenerated.\n+\n+2009-06-14 Francois-Xavier Coudert <fxcoudert@gcc.gnu.org>\n+\n+\t* fmain.c (main): Don't PREFIX set_args.\n+\t* libgfortran.h (set_args): Use iexport_proto.\n+\t* runtime/main.c (set_args): Use iexport.\n+\n+2009-06-07  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libfortran/40008\n+\t* libgfortran.h: Define IOPARM_OPEN_HAS_NEWUNIT.\n+\t* io/open.c (st_open): Don't error on negative unit number if NEWUNIT\n+\twas specified. If NEWUNIT is specified, call new function to get the\n+\tunique unit number and assign it.\n+\t* io/io.h (st_parameter_open): Add pointer to newunit.  Add prototype for\n+\tnext_available_newunit. Add prototype for new function,\n+\tget_unique_unit_number.\n+\t* io/unit.c: Declare next_available_newunit. Define the first newunit\n+\tnumber. (init_units): Initialize next_available_unit.\n+\t(get_unique_unit_number): New function. Fix whitespace and comments.\n+\t* io/transfer.c (data_transfer_init): Update error message to not be\n+\tspecific to OPEN statements.\n+\n+2009-06-07  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libfortran/40334\n+\t* io/list_read.c (list_formatted_read_scalar): Set the end file\n+\tconditions after a return from EOF error.\n+\n+2009-06-04  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\tPR libfortran/40330\n+\t* io/format.c (free_format_hash_table): Also free and nullify hash key.\n+\t(save_parsed_format): Copy string rather than pointer copy.\n+\t\n+2009-05-29  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\tPR fortran/40019\n+\t* intrinsics/bit_intrinsics.c: New file.\n+\t* gfortran.map (GFORTRAN_1.2): New list.\n+\t* Makefile.am: Add intrinsics/bit_intrinsics.c.\n+\t* Makefile.in: Regenerate.\n+\n+2009-05-29  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\tPR libfortran/40190\n+\t* configure.ac: Check for localtime_r and gmtime_r.\n+\t* intrinsics/date_and_time.c: Add fallback implementations for\n+\tlocaltime_r and gmtime_r.\n+\t(date_and_time): Change to use localtime_r and gmtime_r instead of\n+\tlocaltime and gmtime, respectively.\n+\t(itime0): Use localtime_r instead of localtime.\n+\t(ltime_0): Likewise.\n+\t(gmtime_0): Use gmtime_r instead of gmtime.\n+\t* config.h.in: Regenerated\n+\t* configure: Regenerated.\n+\n+2009-05-27  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\tPR fortran/39178\n+\t* runtime/main.c (store_exe_path): Remove static attribute.\n+\t* libgfortran.h: Add back store_exe_path prototype.\n+\n+2009-05-27  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR libfortran/40187\n+\t* intrinsics/iso_c_binding.c (c_f_pointer_u0):  Take care\n+\tof stride in \"shape\" argument.\n+\n+2009-05-26  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/39178\n+\t* runtime/main.c (store_exe_path): Make static\n+\tand multiple-times callable.\n+\t(set_args): Call store_exe_path.\n+\t* libgfortran.h: Remove store_exe_path prototype.\n+\t* fmain.c (main): Remove store_exe_path call.\n+\n+2009-05-19  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libfortran/37754\n+\t* io/write_float.def: Simplify format calculation.\n+\t\n+2009-05-07  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\tPR fortran/22423\n+\t* io/transfer.c (read_block_direct): Avoid warning.\n+\t* runtime/string.c (compare0): Avoid warning.\n+\n+2009-04-30  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\tPR libfortran/39667\n+\t* io/file_pos.c (st_rewind): Don't truncate or flush.\n+\t* io/intrinsics.c (fgetc): Flush if switching mode.\n+\t(fputc): Likewise.\n+\n+2009-04-18  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\tPR libfortran/39782\n+\t* io/transfer.c (data_transfer_init): Don't flush before seek.\n+\t(finalize_transfer): Remove extra flush.\n+\n+2009-04-17  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\t* io/io.h (is_preconnected): Remove prototype.\n+\t* io/unix.c (is_preconnected): Remove function.\n+\n+2009-04-17  Ulrich Weigand  <Ulrich.Weigand@de.ibm.com>\n+\n+\t* configure.ac: Test for -ffunction-sections -fdata-sections and\n+\tset SECTION_FLAGS accordingly.\n+\t* configure: Regenerate.\n+\n+\t* Makefile.am: Add SECTION_FLAGS to AM_CFLAGS.\n+\t* Makefile.in: Regenerate.\n+\n+2009-04-15  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\tPR libfortran/38668\n+\t* io/transfer.c (finalize_transfer): Don't flush for advance='no'.\n+\n+2009-04-15 Danny Smith  <dannysmith@clear.net.nz>\n+\n+\t* io/write.c (itoa) : Rename back to gfc_itoa.\n+\t(write_i): Adjust call to write_decimal.\n+\t(write_integer):  Use gfc_itoa.\n+\n+2009-04-10  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\t* io/io.h (move_pos_offset): Remove prototype.\n+\t* io/transfer.c (formatted_transfer_scalar_read): Use sseek\n+\tinstead of move_pos_offset.\n+\t* io/unix.c (move_pos_offset): Remove.\n+\n+2009-04-10  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\tPR libfortran/39665 libfortran/39702 libfortran/39709\n+\t* io/io.h (st_parameter_dt): Revert aligned attribute from u.p.value.\n+\t* io/list_read.c (read_complex): Read directly into user pointer.\n+\t(read_real): Likewise.\n+\t(list_formatted_read_scalar): Update read_complex and read_real calls.\n+\t(nml_read_obj): Read directly into user pointer.\n+\n+2009-04-09  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\tPR libfortran/39665\n+\t* io/io.h (st_parameter_dt): Add aligned attribute to u.p.value.\n+\t* io/read.c (convert_real): Add note about alignment requirements.\n+\n+2009-04-09  Nick Clifton  <nickc@redhat.com>\n+\n+\t* m4/cshift0.m4: Change copyright header to refer to version 3\n+\tof the GNU General Public License with version 3.1 of the GCC\n+\tRuntime Library Exception and to point readers at the COPYING3\n+\tand COPYING3.RUNTIME files and the FSF's license web page.\n+\t* c99_protos.h: Likewise.\n+\t* config/fpu-387.h: Likewise.\n+\t* config/fpu-aix.h: Likewise.\n+\t* config/fpu-generic.h: Likewise.\n+\t* config/fpu-glibc.h: Likewise.\n+\t* config/fpu-sysv.h: Likewise.\n+\t* intrinsics/abort.c: Likewise.\n+\t* intrinsics/access.c: Likewise.\n+\t* intrinsics/args.c: Likewise.\n+\t* intrinsics/associated.c: Likewise.\n+\t* intrinsics/c99_functions.c: Likewise.\n+\t* intrinsics/chdir.c: Likewise.\n+\t* intrinsics/chmod.c: Likewise.\n+\t* intrinsics/clock.c: Likewise.\n+\t* intrinsics/cpu_time.c: Likewise.\n+\t* intrinsics/cshift0.c: Likewise.\n+\t* intrinsics/ctime.c: Likewise.\n+\t* intrinsics/date_and_time.c: Likewise.\n+\t* intrinsics/dprod_r8.f90: Likewise.\n+\t* intrinsics/dtime.c: Likewise.\n+\t* intrinsics/env.c: Likewise.\n+\t* intrinsics/eoshift0.c: Likewise.\n+\t* intrinsics/eoshift2.c: Likewise.\n+\t* intrinsics/erfc_scaled.c: Likewise.\n+\t* intrinsics/erfc_scaled_inc.c: Likewise.\n+\t* intrinsics/etime.c: Likewise.\n+\t* intrinsics/exit.c: Likewise.\n+\t* intrinsics/f2c_specifics.F90: Likewise.\n+\t* intrinsics/fnum.c: Likewise.\n+\t* intrinsics/gerror.c: Likewise.\n+\t* intrinsics/getXid.c: Likewise.\n+\t* intrinsics/getcwd.c: Likewise.\n+\t* intrinsics/getlog.c: Likewise.\n+\t* intrinsics/hostnm.c: Likewise.\n+\t* intrinsics/ierrno.c: Likewise.\n+\t* intrinsics/ishftc.c: Likewise.\n+\t* intrinsics/iso_c_binding.c: Likewise.\n+\t* intrinsics/iso_c_binding.h: Likewise.\n+\t* intrinsics/iso_c_generated_procs.c: Likewise.\n+\t* intrinsics/kill.c: Likewise.\n+\t* intrinsics/link.c: Likewise.\n+\t* intrinsics/malloc.c: Likewise.\n+\t* intrinsics/move_alloc.c: Likewise.\n+\t* intrinsics/mvbits.c: Likewise.\n+\t* intrinsics/pack_generic.c: Likewise.\n+\t* intrinsics/perror.c: Likewise.\n+\t* intrinsics/rand.c: Likewise.\n+\t* intrinsics/random.c: Likewise.\n+\t* intrinsics/rename.c: Likewise.\n+\t* intrinsics/reshape_generic.c: Likewise.\n+\t* intrinsics/reshape_packed.c: Likewise.\n+\t* intrinsics/selected_char_kind.c: Likewise.\n+\t* intrinsics/selected_int_kind.f90: Likewise.\n+\t* intrinsics/selected_real_kind.f90: Likewise.\n+\t* intrinsics/signal.c: Likewise.\n+\t* intrinsics/size.c: Likewise.\n+\t* intrinsics/sleep.c: Likewise.\n+\t* intrinsics/spread_generic.c: Likewise.\n+\t* intrinsics/stat.c: Likewise.\n+\t* intrinsics/string_intrinsics.c: Likewise.\n+\t* intrinsics/string_intrinsics_inc.c: Likewise.\n+\t* intrinsics/symlnk.c: Likewise.\n+\t* intrinsics/system.c: Likewise.\n+\t* intrinsics/system_clock.c: Likewise.\n+\t* intrinsics/time.c: Likewise.\n+\t* intrinsics/time_1.h: Likewise.\n+\t* intrinsics/transpose_generic.c: Likewise.\n+\t* intrinsics/umask.c: Likewise.\n+\t* intrinsics/unlink.c: Likewise.\n+\t* intrinsics/unpack_generic.c: Likewise.\n+\t* io/close.c: Likewise.\n+\t* io/fbuf.c: Likewise.\n+\t* io/file_pos.c: Likewise.\n+\t* io/format.c: Likewise.\n+\t* io/inquire.c: Likewise.\n+\t* io/intrinsics.c: Likewise.\n+\t* io/io.h: Likewise.\n+\t* io/list_read.c: Likewise.\n+\t* io/lock.c: Likewise.\n+\t* io/open.c: Likewise.\n+\t* io/read.c: Likewise.\n+\t* io/size_from_kind.c: Likewise.\n+\t* io/transfer.c: Likewise.\n+\t* io/unit.c: Likewise.\n+\t* io/unix.c: Likewise.\n+\t* io/write.c: Likewise.\n+\t* io/write_float.def: Likewise.\n+\t* libgfortran.h: Likewise.\n+\t* m4/all.m4: Likewise.\n+\t* m4/any.m4: Likewise.\n+\t* m4/count.m4: Likewise.\n+\t* m4/cshift1.m4: Likewise.\n+\t* m4/eoshift1.m4: Likewise.\n+\t* m4/eoshift3.m4: Likewise.\n+\t* m4/exponent.m4: Likewise.\n+\t* m4/fraction.m4: Likewise.\n+\t* m4/head.m4: Likewise.\n+\t* m4/in_pack.m4: Likewise.\n+\t* m4/in_unpack.m4: Likewise.\n+\t* m4/matmul.m4: Likewise.\n+\t* m4/matmull.m4: Likewise.\n+\t* m4/maxloc0.m4: Likewise.\n+\t* m4/maxloc1.m4: Likewise.\n+\t* m4/maxval.m4: Likewise.\n+\t* m4/minloc0.m4: Likewise.\n+\t* m4/minloc1.m4: Likewise.\n+\t* m4/minval.m4: Likewise.\n+\t* m4/nearest.m4: Likewise.\n+\t* m4/pack.m4: Likewise.\n+\t* m4/pow.m4: Likewise.\n+\t* m4/product.m4: Likewise.\n+\t* m4/reshape.m4: Likewise.\n+\t* m4/rrspacing.m4: Likewise.\n+\t* m4/set_exponent.m4: Likewise.\n+\t* m4/shape.m4: Likewise.\n+\t* m4/spacing.m4: Likewise.\n+\t* m4/spread.m4: Likewise.\n+\t* m4/sum.m4: Likewise.\n+\t* m4/transpose.m4: Likewise.\n+\t* m4/unpack.m4: Likewise.\n+\t* runtime/backtrace.c: Likewise.\n+\t* runtime/compile_options.c: Likewise.\n+\t* runtime/convert_char.c: Likewise.\n+\t* runtime/environ.c: Likewise.\n+\t* runtime/error.c: Likewise.\n+\t* runtime/in_pack_generic.c: Likewise.\n+\t* runtime/in_unpack_generic.c: Likewise.\n+\t* runtime/main.c: Likewise.\n+\t* runtime/memory.c: Likewise.\n+\t* runtime/pause.c: Likewise.\n+\t* runtime/select.c: Likewise.\n+\t* runtime/select_inc.c: Likewise.\n+\t* runtime/stop.c: Likewise.\n+\t* runtime/string.c: Likewise.\n+\t* generated/_abs_c10.F90: Regenerate.\n+\t* generated/_abs_c16.F90: Regenerate.\n+\t* generated/_abs_c4.F90: Regenerate.\n+\t* generated/_abs_c8.F90: Regenerate.\n+\t* generated/_abs_i16.F90: Regenerate.\n+\t* generated/_abs_i4.F90: Regenerate.\n+\t* generated/_abs_i8.F90: Regenerate.\n+\t* generated/_abs_r10.F90: Regenerate.\n+\t* generated/_abs_r16.F90: Regenerate.\n+\t* generated/_abs_r4.F90: Regenerate.\n+\t* generated/_abs_r8.F90: Regenerate.\n+\t* generated/_acos_r10.F90: Regenerate.\n+\t* generated/_acos_r16.F90: Regenerate.\n+\t* generated/_acos_r4.F90: Regenerate.\n+\t* generated/_acos_r8.F90: Regenerate.\n+\t* generated/_acosh_r10.F90: Regenerate.\n+\t* generated/_acosh_r16.F90: Regenerate.\n+\t* generated/_acosh_r4.F90: Regenerate.\n+\t* generated/_acosh_r8.F90: Regenerate.\n+\t* generated/_aimag_c10.F90: Regenerate.\n+\t* generated/_aimag_c16.F90: Regenerate.\n+\t* generated/_aimag_c4.F90: Regenerate.\n+\t* generated/_aimag_c8.F90: Regenerate.\n+\t* generated/_aint_r10.F90: Regenerate.\n+\t* generated/_aint_r16.F90: Regenerate.\n+\t* generated/_aint_r4.F90: Regenerate.\n+\t* generated/_aint_r8.F90: Regenerate.\n+\t* generated/_anint_r10.F90: Regenerate.\n+\t* generated/_anint_r16.F90: Regenerate.\n+\t* generated/_anint_r4.F90: Regenerate.\n+\t* generated/_anint_r8.F90: Regenerate.\n+\t* generated/_asin_r10.F90: Regenerate.\n+\t* generated/_asin_r16.F90: Regenerate.\n+\t* generated/_asin_r4.F90: Regenerate.\n+\t* generated/_asin_r8.F90: Regenerate.\n+\t* generated/_asinh_r10.F90: Regenerate.\n+\t* generated/_asinh_r16.F90: Regenerate.\n+\t* generated/_asinh_r4.F90: Regenerate.\n+\t* generated/_asinh_r8.F90: Regenerate.\n+\t* generated/_atan2_r10.F90: Regenerate.\n+\t* generated/_atan2_r16.F90: Regenerate.\n+\t* generated/_atan2_r4.F90: Regenerate.\n+\t* generated/_atan2_r8.F90: Regenerate.\n+\t* generated/_atan_r10.F90: Regenerate.\n+\t* generated/_atan_r16.F90: Regenerate.\n+\t* generated/_atan_r4.F90: Regenerate.\n+\t* generated/_atan_r8.F90: Regenerate.\n+\t* generated/_atanh_r10.F90: Regenerate.\n+\t* generated/_atanh_r16.F90: Regenerate.\n+\t* generated/_atanh_r4.F90: Regenerate.\n+\t* generated/_atanh_r8.F90: Regenerate.\n+\t* generated/_conjg_c10.F90: Regenerate.\n+\t* generated/_conjg_c16.F90: Regenerate.\n+\t* generated/_conjg_c4.F90: Regenerate.\n+\t* generated/_conjg_c8.F90: Regenerate.\n+\t* generated/_cos_c10.F90: Regenerate.\n+\t* generated/_cos_c16.F90: Regenerate.\n+\t* generated/_cos_c4.F90: Regenerate.\n+\t* generated/_cos_c8.F90: Regenerate.\n+\t* generated/_cos_r10.F90: Regenerate.\n+\t* generated/_cos_r16.F90: Regenerate.\n+\t* generated/_cos_r4.F90: Regenerate.\n+\t* generated/_cos_r8.F90: Regenerate.\n+\t* generated/_cosh_r10.F90: Regenerate.\n+\t* generated/_cosh_r16.F90: Regenerate.\n+\t* generated/_cosh_r4.F90: Regenerate.\n+\t* generated/_cosh_r8.F90: Regenerate.\n+\t* generated/_dim_i16.F90: Regenerate.\n+\t* generated/_dim_i4.F90: Regenerate.\n+\t* generated/_dim_i8.F90: Regenerate.\n+\t* generated/_dim_r10.F90: Regenerate.\n+\t* generated/_dim_r16.F90: Regenerate.\n+\t* generated/_dim_r4.F90: Regenerate.\n+\t* generated/_dim_r8.F90: Regenerate.\n+\t* generated/_exp_c10.F90: Regenerate.\n+\t* generated/_exp_c16.F90: Regenerate.\n+\t* generated/_exp_c4.F90: Regenerate.\n+\t* generated/_exp_c8.F90: Regenerate.\n+\t* generated/_exp_r10.F90: Regenerate.\n+\t* generated/_exp_r16.F90: Regenerate.\n+\t* generated/_exp_r4.F90: Regenerate.\n+\t* generated/_exp_r8.F90: Regenerate.\n+\t* generated/_log10_r10.F90: Regenerate.\n+\t* generated/_log10_r16.F90: Regenerate.\n+\t* generated/_log10_r4.F90: Regenerate.\n+\t* generated/_log10_r8.F90: Regenerate.\n+\t* generated/_log_c10.F90: Regenerate.\n+\t* generated/_log_c16.F90: Regenerate.\n+\t* generated/_log_c4.F90: Regenerate.\n+\t* generated/_log_c8.F90: Regenerate.\n+\t* generated/_log_r10.F90: Regenerate.\n+\t* generated/_log_r16.F90: Regenerate.\n+\t* generated/_log_r4.F90: Regenerate.\n+\t* generated/_log_r8.F90: Regenerate.\n+\t* generated/_mod_i16.F90: Regenerate.\n+\t* generated/_mod_i4.F90: Regenerate.\n+\t* generated/_mod_i8.F90: Regenerate.\n+\t* generated/_mod_r10.F90: Regenerate.\n+\t* generated/_mod_r16.F90: Regenerate.\n+\t* generated/_mod_r4.F90: Regenerate.\n+\t* generated/_mod_r8.F90: Regenerate.\n+\t* generated/_sign_i16.F90: Regenerate.\n+\t* generated/_sign_i4.F90: Regenerate.\n+\t* generated/_sign_i8.F90: Regenerate.\n+\t* generated/_sign_r10.F90: Regenerate.\n+\t* generated/_sign_r16.F90: Regenerate.\n+\t* generated/_sign_r4.F90: Regenerate.\n+\t* generated/_sign_r8.F90: Regenerate.\n+\t* generated/_sin_c10.F90: Regenerate.\n+\t* generated/_sin_c16.F90: Regenerate.\n+\t* generated/_sin_c4.F90: Regenerate.\n+\t* generated/_sin_c8.F90: Regenerate.\n+\t* generated/_sin_r10.F90: Regenerate.\n+\t* generated/_sin_r16.F90: Regenerate.\n+\t* generated/_sin_r4.F90: Regenerate.\n+\t* generated/_sin_r8.F90: Regenerate.\n+\t* generated/_sinh_r10.F90: Regenerate.\n+\t* generated/_sinh_r16.F90: Regenerate.\n+\t* generated/_sinh_r4.F90: Regenerate.\n+\t* generated/_sinh_r8.F90: Regenerate.\n+\t* generated/_sqrt_c10.F90: Regenerate.\n+\t* generated/_sqrt_c16.F90: Regenerate.\n+\t* generated/_sqrt_c4.F90: Regenerate.\n+\t* generated/_sqrt_c8.F90: Regenerate.\n+\t* generated/_sqrt_r10.F90: Regenerate.\n+\t* generated/_sqrt_r16.F90: Regenerate.\n+\t* generated/_sqrt_r4.F90: Regenerate.\n+\t* generated/_sqrt_r8.F90: Regenerate.\n+\t* generated/_tan_r10.F90: Regenerate.\n+\t* generated/_tan_r16.F90: Regenerate.\n+\t* generated/_tan_r4.F90: Regenerate.\n+\t* generated/_tan_r8.F90: Regenerate.\n+\t* generated/_tanh_r10.F90: Regenerate.\n+\t* generated/_tanh_r16.F90: Regenerate.\n+\t* generated/_tanh_r4.F90: Regenerate.\n+\t* generated/_tanh_r8.F90: Regenerate.\n+\t* generated/all_l1.c: Regenerate.\n+\t* generated/all_l16.c: Regenerate.\n+\t* generated/all_l2.c: Regenerate.\n+\t* generated/all_l4.c: Regenerate.\n+\t* generated/all_l8.c: Regenerate.\n+\t* generated/any_l1.c: Regenerate.\n+\t* generated/any_l16.c: Regenerate.\n+\t* generated/any_l2.c: Regenerate.\n+\t* generated/any_l4.c: Regenerate.\n+\t* generated/any_l8.c: Regenerate.\n+\t* generated/count_16_l.c: Regenerate.\n+\t* generated/count_1_l.c: Regenerate.\n+\t* generated/count_2_l.c: Regenerate.\n+\t* generated/count_4_l.c: Regenerate.\n+\t* generated/count_8_l.c: Regenerate.\n+\t* generated/cshift0_c10.c: Regenerate.\n+\t* generated/cshift0_c16.c: Regenerate.\n+\t* generated/cshift0_c4.c: Regenerate.\n+\t* generated/cshift0_c8.c: Regenerate.\n+\t* generated/cshift0_i1.c: Regenerate.\n+\t* generated/cshift0_i16.c: Regenerate.\n+\t* generated/cshift0_i2.c: Regenerate.\n+\t* generated/cshift0_i4.c: Regenerate.\n+\t* generated/cshift0_i8.c: Regenerate.\n+\t* generated/cshift0_r10.c: Regenerate.\n+\t* generated/cshift0_r16.c: Regenerate.\n+\t* generated/cshift0_r4.c: Regenerate.\n+\t* generated/cshift0_r8.c: Regenerate.\n+\t* generated/cshift1_16.c: Regenerate.\n+\t* generated/cshift1_4.c: Regenerate.\n+\t* generated/cshift1_8.c: Regenerate.\n+\t* generated/eoshift1_16.c: Regenerate.\n+\t* generated/eoshift1_4.c: Regenerate.\n+\t* generated/eoshift1_8.c: Regenerate.\n+\t* generated/eoshift3_16.c: Regenerate.\n+\t* generated/eoshift3_4.c: Regenerate.\n+\t* generated/eoshift3_8.c: Regenerate.\n+\t* generated/exponent_r10.c: Regenerate.\n+\t* generated/exponent_r16.c: Regenerate.\n+\t* generated/exponent_r4.c: Regenerate.\n+\t* generated/exponent_r8.c: Regenerate.\n+\t* generated/fraction_r10.c: Regenerate.\n+\t* generated/fraction_r16.c: Regenerate.\n+\t* generated/fraction_r4.c: Regenerate.\n+\t* generated/fraction_r8.c: Regenerate.\n+\t* generated/in_pack_c10.c: Regenerate.\n+\t* generated/in_pack_c16.c: Regenerate.\n+\t* generated/in_pack_c4.c: Regenerate.\n+\t* generated/in_pack_c8.c: Regenerate.\n+\t* generated/in_pack_i1.c: Regenerate.\n+\t* generated/in_pack_i16.c: Regenerate.\n+\t* generated/in_pack_i2.c: Regenerate.\n+\t* generated/in_pack_i4.c: Regenerate.\n+\t* generated/in_pack_i8.c: Regenerate.\n+\t* generated/in_pack_r10.c: Regenerate.\n+\t* generated/in_pack_r16.c: Regenerate.\n+\t* generated/in_pack_r4.c: Regenerate.\n+\t* generated/in_pack_r8.c: Regenerate.\n+\t* generated/in_unpack_c10.c: Regenerate.\n+\t* generated/in_unpack_c16.c: Regenerate.\n+\t* generated/in_unpack_c4.c: Regenerate.\n+\t* generated/in_unpack_c8.c: Regenerate.\n+\t* generated/in_unpack_i1.c: Regenerate.\n+\t* generated/in_unpack_i16.c: Regenerate.\n+\t* generated/in_unpack_i2.c: Regenerate.\n+\t* generated/in_unpack_i4.c: Regenerate.\n+\t* generated/in_unpack_i8.c: Regenerate.\n+\t* generated/in_unpack_r10.c: Regenerate.\n+\t* generated/in_unpack_r16.c: Regenerate.\n+\t* generated/in_unpack_r4.c: Regenerate.\n+\t* generated/in_unpack_r8.c: Regenerate.\n+\t* generated/matmul_c10.c: Regenerate.\n+\t* generated/matmul_c16.c: Regenerate.\n+\t* generated/matmul_c4.c: Regenerate.\n+\t* generated/matmul_c8.c: Regenerate.\n+\t* generated/matmul_i1.c: Regenerate.\n+\t* generated/matmul_i16.c: Regenerate.\n+\t* generated/matmul_i2.c: Regenerate.\n+\t* generated/matmul_i4.c: Regenerate.\n+\t* generated/matmul_i8.c: Regenerate.\n+\t* generated/matmul_l16.c: Regenerate.\n+\t* generated/matmul_l4.c: Regenerate.\n+\t* generated/matmul_l8.c: Regenerate.\n+\t* generated/matmul_r10.c: Regenerate.\n+\t* generated/matmul_r16.c: Regenerate.\n+\t* generated/matmul_r4.c: Regenerate.\n+\t* generated/matmul_r8.c: Regenerate.\n+\t* generated/maxloc0_16_i1.c: Regenerate.\n+\t* generated/maxloc0_16_i16.c: Regenerate.\n+\t* generated/maxloc0_16_i2.c: Regenerate.\n+\t* generated/maxloc0_16_i4.c: Regenerate.\n+\t* generated/maxloc0_16_i8.c: Regenerate.\n+\t* generated/maxloc0_16_r10.c: Regenerate.\n+\t* generated/maxloc0_16_r16.c: Regenerate.\n+\t* generated/maxloc0_16_r4.c: Regenerate.\n+\t* generated/maxloc0_16_r8.c: Regenerate.\n+\t* generated/maxloc0_4_i1.c: Regenerate.\n+\t* generated/maxloc0_4_i16.c: Regenerate.\n+\t* generated/maxloc0_4_i2.c: Regenerate.\n+\t* generated/maxloc0_4_i4.c: Regenerate.\n+\t* generated/maxloc0_4_i8.c: Regenerate.\n+\t* generated/maxloc0_4_r10.c: Regenerate.\n+\t* generated/maxloc0_4_r16.c: Regenerate.\n+\t* generated/maxloc0_4_r4.c: Regenerate.\n+\t* generated/maxloc0_4_r8.c: Regenerate.\n+\t* generated/maxloc0_8_i1.c: Regenerate.\n+\t* generated/maxloc0_8_i16.c: Regenerate.\n+\t* generated/maxloc0_8_i2.c: Regenerate.\n+\t* generated/maxloc0_8_i4.c: Regenerate.\n+\t* generated/maxloc0_8_i8.c: Regenerate.\n+\t* generated/maxloc0_8_r10.c: Regenerate.\n+\t* generated/maxloc0_8_r16.c: Regenerate.\n+\t* generated/maxloc0_8_r4.c: Regenerate.\n+\t* generated/maxloc0_8_r8.c: Regenerate.\n+\t* generated/maxloc1_16_i1.c: Regenerate.\n+\t* generated/maxloc1_16_i16.c: Regenerate.\n+\t* generated/maxloc1_16_i2.c: Regenerate.\n+\t* generated/maxloc1_16_i4.c: Regenerate.\n+\t* generated/maxloc1_16_i8.c: Regenerate.\n+\t* generated/maxloc1_16_r10.c: Regenerate.\n+\t* generated/maxloc1_16_r16.c: Regenerate.\n+\t* generated/maxloc1_16_r4.c: Regenerate.\n+\t* generated/maxloc1_16_r8.c: Regenerate.\n+\t* generated/maxloc1_4_i1.c: Regenerate.\n+\t* generated/maxloc1_4_i16.c: Regenerate.\n+\t* generated/maxloc1_4_i2.c: Regenerate.\n+\t* generated/maxloc1_4_i4.c: Regenerate.\n+\t* generated/maxloc1_4_i8.c: Regenerate.\n+\t* generated/maxloc1_4_r10.c: Regenerate.\n+\t* generated/maxloc1_4_r16.c: Regenerate.\n+\t* generated/maxloc1_4_r4.c: Regenerate.\n+\t* generated/maxloc1_4_r8.c: Regenerate.\n+\t* generated/maxloc1_8_i1.c: Regenerate.\n+\t* generated/maxloc1_8_i16.c: Regenerate.\n+\t* generated/maxloc1_8_i2.c: Regenerate.\n+\t* generated/maxloc1_8_i4.c: Regenerate.\n+\t* generated/maxloc1_8_i8.c: Regenerate.\n+\t* generated/maxloc1_8_r10.c: Regenerate.\n+\t* generated/maxloc1_8_r16.c: Regenerate.\n+\t* generated/maxloc1_8_r4.c: Regenerate.\n+\t* generated/maxloc1_8_r8.c: Regenerate.\n+\t* generated/maxval_i1.c: Regenerate.\n+\t* generated/maxval_i16.c: Regenerate.\n+\t* generated/maxval_i2.c: Regenerate.\n+\t* generated/maxval_i4.c: Regenerate.\n+\t* generated/maxval_i8.c: Regenerate.\n+\t* generated/maxval_r10.c: Regenerate.\n+\t* generated/maxval_r16.c: Regenerate.\n+\t* generated/maxval_r4.c: Regenerate.\n+\t* generated/maxval_r8.c: Regenerate.\n+\t* generated/minloc0_16_i1.c: Regenerate.\n+\t* generated/minloc0_16_i16.c: Regenerate.\n+\t* generated/minloc0_16_i2.c: Regenerate.\n+\t* generated/minloc0_16_i4.c: Regenerate.\n+\t* generated/minloc0_16_i8.c: Regenerate.\n+\t* generated/minloc0_16_r10.c: Regenerate.\n+\t* generated/minloc0_16_r16.c: Regenerate.\n+\t* generated/minloc0_16_r4.c: Regenerate.\n+\t* generated/minloc0_16_r8.c: Regenerate.\n+\t* generated/minloc0_4_i1.c: Regenerate.\n+\t* generated/minloc0_4_i16.c: Regenerate.\n+\t* generated/minloc0_4_i2.c: Regenerate.\n+\t* generated/minloc0_4_i4.c: Regenerate.\n+\t* generated/minloc0_4_i8.c: Regenerate.\n+\t* generated/minloc0_4_r10.c: Regenerate.\n+\t* generated/minloc0_4_r16.c: Regenerate.\n+\t* generated/minloc0_4_r4.c: Regenerate.\n+\t* generated/minloc0_4_r8.c: Regenerate.\n+\t* generated/minloc0_8_i1.c: Regenerate.\n+\t* generated/minloc0_8_i16.c: Regenerate.\n+\t* generated/minloc0_8_i2.c: Regenerate.\n+\t* generated/minloc0_8_i4.c: Regenerate.\n+\t* generated/minloc0_8_i8.c: Regenerate.\n+\t* generated/minloc0_8_r10.c: Regenerate.\n+\t* generated/minloc0_8_r16.c: Regenerate.\n+\t* generated/minloc0_8_r4.c: Regenerate.\n+\t* generated/minloc0_8_r8.c: Regenerate.\n+\t* generated/minloc1_16_i1.c: Regenerate.\n+\t* generated/minloc1_16_i16.c: Regenerate.\n+\t* generated/minloc1_16_i2.c: Regenerate.\n+\t* generated/minloc1_16_i4.c: Regenerate.\n+\t* generated/minloc1_16_i8.c: Regenerate.\n+\t* generated/minloc1_16_r10.c: Regenerate.\n+\t* generated/minloc1_16_r16.c: Regenerate.\n+\t* generated/minloc1_16_r4.c: Regenerate.\n+\t* generated/minloc1_16_r8.c: Regenerate.\n+\t* generated/minloc1_4_i1.c: Regenerate.\n+\t* generated/minloc1_4_i16.c: Regenerate.\n+\t* generated/minloc1_4_i2.c: Regenerate.\n+\t* generated/minloc1_4_i4.c: Regenerate.\n+\t* generated/minloc1_4_i8.c: Regenerate.\n+\t* generated/minloc1_4_r10.c: Regenerate.\n+\t* generated/minloc1_4_r16.c: Regenerate.\n+\t* generated/minloc1_4_r4.c: Regenerate.\n+\t* generated/minloc1_4_r8.c: Regenerate.\n+\t* generated/minloc1_8_i1.c: Regenerate.\n+\t* generated/minloc1_8_i16.c: Regenerate.\n+\t* generated/minloc1_8_i2.c: Regenerate.\n+\t* generated/minloc1_8_i4.c: Regenerate.\n+\t* generated/minloc1_8_i8.c: Regenerate.\n+\t* generated/minloc1_8_r10.c: Regenerate.\n+\t* generated/minloc1_8_r16.c: Regenerate.\n+\t* generated/minloc1_8_r4.c: Regenerate.\n+\t* generated/minloc1_8_r8.c: Regenerate.\n+\t* generated/minval_i1.c: Regenerate.\n+\t* generated/minval_i16.c: Regenerate.\n+\t* generated/minval_i2.c: Regenerate.\n+\t* generated/minval_i4.c: Regenerate.\n+\t* generated/minval_i8.c: Regenerate.\n+\t* generated/minval_r10.c: Regenerate.\n+\t* generated/minval_r16.c: Regenerate.\n+\t* generated/minval_r4.c: Regenerate.\n+\t* generated/minval_r8.c: Regenerate.\n+\t* generated/misc_specifics.F90: Regenerate.\n+\t* generated/nearest_r10.c: Regenerate.\n+\t* generated/nearest_r16.c: Regenerate.\n+\t* generated/nearest_r4.c: Regenerate.\n+\t* generated/nearest_r8.c: Regenerate.\n+\t* generated/pack_c10.c: Regenerate.\n+\t* generated/pack_c16.c: Regenerate.\n+\t* generated/pack_c4.c: Regenerate.\n+\t* generated/pack_c8.c: Regenerate.\n+\t* generated/pack_i1.c: Regenerate.\n+\t* generated/pack_i16.c: Regenerate.\n+\t* generated/pack_i2.c: Regenerate.\n+\t* generated/pack_i4.c: Regenerate.\n+\t* generated/pack_i8.c: Regenerate.\n+\t* generated/pack_r10.c: Regenerate.\n+\t* generated/pack_r16.c: Regenerate.\n+\t* generated/pack_r4.c: Regenerate.\n+\t* generated/pack_r8.c: Regenerate.\n+\t* generated/pow_c10_i16.c: Regenerate.\n+\t* generated/pow_c10_i4.c: Regenerate.\n+\t* generated/pow_c10_i8.c: Regenerate.\n+\t* generated/pow_c16_i16.c: Regenerate.\n+\t* generated/pow_c16_i4.c: Regenerate.\n+\t* generated/pow_c16_i8.c: Regenerate.\n+\t* generated/pow_c4_i16.c: Regenerate.\n+\t* generated/pow_c4_i4.c: Regenerate.\n+\t* generated/pow_c4_i8.c: Regenerate.\n+\t* generated/pow_c8_i16.c: Regenerate.\n+\t* generated/pow_c8_i4.c: Regenerate.\n+\t* generated/pow_c8_i8.c: Regenerate.\n+\t* generated/pow_i16_i16.c: Regenerate.\n+\t* generated/pow_i16_i4.c: Regenerate.\n+\t* generated/pow_i16_i8.c: Regenerate.\n+\t* generated/pow_i4_i16.c: Regenerate.\n+\t* generated/pow_i4_i4.c: Regenerate.\n+\t* generated/pow_i4_i8.c: Regenerate.\n+\t* generated/pow_i8_i16.c: Regenerate.\n+\t* generated/pow_i8_i4.c: Regenerate.\n+\t* generated/pow_i8_i8.c: Regenerate.\n+\t* generated/pow_r10_i16.c: Regenerate.\n+\t* generated/pow_r10_i8.c: Regenerate.\n+\t* generated/pow_r16_i16.c: Regenerate.\n+\t* generated/pow_r16_i8.c: Regenerate.\n+\t* generated/pow_r4_i16.c: Regenerate.\n+\t* generated/pow_r4_i8.c: Regenerate.\n+\t* generated/pow_r8_i16.c: Regenerate.\n+\t* generated/pow_r8_i8.c: Regenerate.\n+\t* generated/product_c10.c: Regenerate.\n+\t* generated/product_c16.c: Regenerate.\n+\t* generated/product_c4.c: Regenerate.\n+\t* generated/product_c8.c: Regenerate.\n+\t* generated/product_i1.c: Regenerate.\n+\t* generated/product_i16.c: Regenerate.\n+\t* generated/product_i2.c: Regenerate.\n+\t* generated/product_i4.c: Regenerate.\n+\t* generated/product_i8.c: Regenerate.\n+\t* generated/product_r10.c: Regenerate.\n+\t* generated/product_r16.c: Regenerate.\n+\t* generated/product_r4.c: Regenerate.\n+\t* generated/product_r8.c: Regenerate.\n+\t* generated/reshape_c10.c: Regenerate.\n+\t* generated/reshape_c16.c: Regenerate.\n+\t* generated/reshape_c4.c: Regenerate.\n+\t* generated/reshape_c8.c: Regenerate.\n+\t* generated/reshape_i16.c: Regenerate.\n+\t* generated/reshape_i4.c: Regenerate.\n+\t* generated/reshape_i8.c: Regenerate.\n+\t* generated/reshape_r10.c: Regenerate.\n+\t* generated/reshape_r16.c: Regenerate.\n+\t* generated/reshape_r4.c: Regenerate.\n+\t* generated/reshape_r8.c: Regenerate.\n+\t* generated/rrspacing_r10.c: Regenerate.\n+\t* generated/rrspacing_r16.c: Regenerate.\n+\t* generated/rrspacing_r4.c: Regenerate.\n+\t* generated/rrspacing_r8.c: Regenerate.\n+\t* generated/set_exponent_r10.c: Regenerate.\n+\t* generated/set_exponent_r16.c: Regenerate.\n+\t* generated/set_exponent_r4.c: Regenerate.\n+\t* generated/set_exponent_r8.c: Regenerate.\n+\t* generated/shape_i16.c: Regenerate.\n+\t* generated/shape_i4.c: Regenerate.\n+\t* generated/shape_i8.c: Regenerate.\n+\t* generated/spacing_r10.c: Regenerate.\n+\t* generated/spacing_r16.c: Regenerate.\n+\t* generated/spacing_r4.c: Regenerate.\n+\t* generated/spacing_r8.c: Regenerate.\n+\t* generated/spread_c10.c: Regenerate.\n+\t* generated/spread_c16.c: Regenerate.\n+\t* generated/spread_c4.c: Regenerate.\n+\t* generated/spread_c8.c: Regenerate.\n+\t* generated/spread_i1.c: Regenerate.\n+\t* generated/spread_i16.c: Regenerate.\n+\t* generated/spread_i2.c: Regenerate.\n+\t* generated/spread_i4.c: Regenerate.\n+\t* generated/spread_i8.c: Regenerate.\n+\t* generated/spread_r10.c: Regenerate.\n+\t* generated/spread_r16.c: Regenerate.\n+\t* generated/spread_r4.c: Regenerate.\n+\t* generated/spread_r8.c: Regenerate.\n+\t* generated/sum_c10.c: Regenerate.\n+\t* generated/sum_c16.c: Regenerate.\n+\t* generated/sum_c4.c: Regenerate.\n+\t* generated/sum_c8.c: Regenerate.\n+\t* generated/sum_i1.c: Regenerate.\n+\t* generated/sum_i16.c: Regenerate.\n+\t* generated/sum_i2.c: Regenerate.\n+\t* generated/sum_i4.c: Regenerate.\n+\t* generated/sum_i8.c: Regenerate.\n+\t* generated/sum_r10.c: Regenerate.\n+\t* generated/sum_r16.c: Regenerate.\n+\t* generated/sum_r4.c: Regenerate.\n+\t* generated/sum_r8.c: Regenerate.\n+\t* generated/transpose_c10.c: Regenerate.\n+\t* generated/transpose_c16.c: Regenerate.\n+\t* generated/transpose_c4.c: Regenerate.\n+\t* generated/transpose_c8.c: Regenerate.\n+\t* generated/transpose_i16.c: Regenerate.\n+\t* generated/transpose_i4.c: Regenerate.\n+\t* generated/transpose_i8.c: Regenerate.\n+\t* generated/transpose_r10.c: Regenerate.\n+\t* generated/transpose_r16.c: Regenerate.\n+\t* generated/transpose_r4.c: Regenerate.\n+\t* generated/transpose_r8.c: Regenerate.\n+\t* generated/unpack_c10.c: Regenerate.\n+\t* generated/unpack_c16.c: Regenerate.\n+\t* generated/unpack_c4.c: Regenerate.\n+\t* generated/unpack_c8.c: Regenerate.\n+\t* generated/unpack_i1.c: Regenerate.\n+\t* generated/unpack_i16.c: Regenerate.\n+\t* generated/unpack_i2.c: Regenerate.\n+\t* generated/unpack_i4.c: Regenerate.\n+\t* generated/unpack_i8.c: Regenerate.\n+\t* generated/unpack_r10.c: Regenerate.\n+\t* generated/unpack_r16.c: Regenerate.\n+\t* generated/unpack_r4.c: Regenerate.\n+\t* generated/unpack_r8.c: Regenerate.\n+\n+2009-04-08  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\t* io/open.c (already_open): Test for POSIX close return value.\n+\t* io/unit.c (close_unit_1): Likewise.\n+\t* io/unix.c (raw_close): Return 0 for success for preconnected units.\n+\n+2009-04-08  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\t* runtime/string.c (compare0): Use gfc_charlen_type.\n+\t* runtime/error.c (gfc_itoa): Move to io/write.c\n+\t(xtoa): Rename to gfc_xtoa.\n+\t* runtime/backtrace.c (show_backtrace): Call gfc_xtoa.\n+\t* intrinsics/cshift0.c (cshift0): Use index_type for shift arg.\n+\t* intrinsics/date_and_time.c (date_and_time): Use index_type.\n+\t(itime_i4): Likewise.\n+\t(itime_i8): Likewise.\n+\t(idate_i4): Likewise.\n+\t(idate_i8): Likewise.\n+\t(gmtime_i4): Likewise.\n+\t(gmtime_i8): Likewise.\n+\t(ltime_i4): Likewise.\n+\t(ltime_i8): Likewise.\n+\t* libgfortran.h (gfc_itoa): Remove prototype.\n+\t(xtoa): Rename prototype to gfc_xtoa.\n+\t* io/list_read.c (nml_read_obj): Use size_t for string length.\n+\t* io/transfer.c (read_block_direct): Change nbytes arg from\n+\tpointer to value.\n+\t(unformatted_read): Minor cleanup, call read_block_directly properly.\n+\t(skip_record): Use ssize_t.\n+\t(next_record_w_unf): Avoid stell() call by calling sseek with SEEK_CUR.\n+\t(iolength_transfer): Make sure to multiply before cast.\n+\t* io/intrinsics.c (fgetc): Remove unnecessary variable.\n+\t* io/format.c (format_hash): Use gfc_charlen_type.\n+\t* io/write.c (itoa): Move from runtime/error.c:gfc_itoa, rename,\n+\tmake static.\n+\t(write_i): Call with pointer to itoa.\n+\t(write_z): Call with pointer to gfc_xtoa.\n+\t(write_integer): Pointer to itoa.\n+\t(nml_write_obj): Type cleanup, don't call strlen in loop.\n+\t\n+2009-04-06  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR libgfortran/39664\n+\t* io/unix.c (raw_close): Don't close STDOUT_FILENO,\n+\tSTDERR_FILENO nor STDIN_FILENO.\n+\n+2009-04-06  David Edelsohn  <edelsohn@gnu.org>\n+\t\n+\t* io/io.h (struct stream): Rename truncate to trunc.\n+\t(struncate): Same.\n+\t* io/unix.c (raw_init): Rename truncate to trunc.\n+\t(buf_init): Same.\n+\t(open_internal): Same.\n+\t\n+2009-04-05  Daniel Kraft  <d@domob.eu>\n+\n+\tPR fortran/38654\n+\t* io/read.c (read_f): Reworked to speed up floating point parsing.\n+\t(convert_real): Use pointer-casting instead of memcpy and temporaries.\n+\n+2009-04-05  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libfortran/37754\n+\t* io/io.h (format_hash_entry): New structure for hash table.\n+\t(format_hash_table): The hash table itself.\n+\t(free_format_data): Revise function prototype.\n+\t(free_format_hash_table, init_format_hash,\n+\tfree_format_hash): New function prototypes.\n+\t* io/unit.c (close_unit_1): Use free_format_hash_table.\n+\t* io/transfer.c (st_read_done, st_write_done): Free format data if\n+\tinternal unit.\n+\t* io/format.c (free_format_hash_table): New function that frees any\n+\tmemory allocated previously for cached format data.\n+\t(reset_node): New static helper function to reset the format counters\n+\tfor a format node.\n+\t(reset_fnode_counters): New static function recursively calls reset_node\n+\tto traverse the\tfnode tree.\n+\t(format_hash): New simple hash function based on XOR, probabalistic,\n+\ttosses collisions.\n+\t(save_parsed_format): New static function to save the parsed format\n+\tdata to use again.\n+\t(find_parsed_format): New static function searches the hash table\n+\tlooking for a match.\n+\t(free_format_data): Revised to accept pointer to format data rather than\n+\tthe dtp pointer so that the function can be used in more places.\n+\t(format_lex): Editorial.\n+\t(parse_format_list): Set flag used to determine of format data hashing\n+\tis to be used.  Internal units are not persistent enough for this.\n+\t(revert): Move to ne location in file.\n+\t(parse_format): Use new functions to look for previously parsed\n+\tformat strings and use them rather than re-parse.  If not found, saves\n+\tthe parsed format data for later use.\n+\t\n+2009-04-05  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libfortran/37754\n+\t* io/transfer.c (formatted_transfer_scalar): Remove this function by\n+\tfactoring it into two new functions, one for read and one for write,\n+\teliminating all the conditionals for read or write mode.\n+\t(formatted transfer_scalar_read): New function.\n+\t(formatted transfer_scalar_write): New function.\n+\t(formatted_transfer): Use new functions.\n+\n+2009-04-05  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\tPR libfortran/25561 libfortran/37754\n+\t* io/io.h (struct stream): Define new stream interface function\n+\tpointers, and inline functions for accessing it.\n+\t(struct fbuf): Use int instead of size_t, remove flushed element.\n+\t(mem_alloc_w): New prototype.\n+\t(mem_alloc_r): New prototype.\n+\t(stream_at_bof): Remove prototype.\n+\t(stream_at_eof): Remove prototype.\n+\t(file_position): Remove prototype.\n+\t(flush): Remove prototype.\n+\t(stream_offset): Remove prototype.\n+\t(unit_truncate): New prototype.\n+\t(read_block_form): Change to return pointer, int* argument.\n+\t(hit_eof): New prototype.\n+\t(fbuf_init): Change prototype.\n+\t(fbuf_reset): Change prototype.\n+\t(fbuf_alloc): Change prototype.\n+\t(fbuf_flush): Change prototype.\n+\t(fbuf_seek): Change prototype.\n+\t(fbuf_read): New prototype.\n+\t(fbuf_getc_refill): New prototype.\n+\t(fbuf_getc): New inline function.\n+\t* io/fbuf.c (fbuf_init): Use int, get rid of flushed.\n+\t(fbuf_debug): New function.\n+\t(fbuf_reset): Flush, and return position offset.\n+\t(fbuf_alloc): Simplify, don't flush, just realloc.\n+\t(fbuf_flush): Make usable for read mode, salvage remaining bytes.\n+\t(fbuf_seek): New whence argument.\n+\t(fbuf_read): New function.\n+\t(fbuf_getc_refill): New function.\n+\t* io/file_pos.c (formatted_backspace): Use new stream interface.\n+\t(unformatted_backspace): Likewise.\n+\t(st_backspace): Make sure format buffer is reset, use new stream\n+\tinterface, use unit_truncate.\n+\t(st_endfile): Likewise.\n+\t(st_rewind): Likewise.\n+\t* io/intrinsics.c: Use new stream interface.\n+\t* io/list_read.c (push_char): Don't use u.p.scratch, use realloc\n+\tto resize.\n+\t(free_saved): Don't check u.p.scratch.\n+\t(next_char): Use new stream interface, use fbuf_getc() for external files.\n+\t(finish_list_read): flush format buffer.\n+\t(nml_query): Update to use modified interface:s\n+\t* io/open.c (test_endfile): Use new stream interface.\n+\t(edit_modes): Likewise.\n+\t(new_unit): Likewise, set bytes_left to 1 for stream files.\n+\t* io/read.c (read_l): Use new read_block_form interface.\n+\t(read_utf8): Likewise.\n+\t(read_utf8_char1): Likewise.\n+\t(read_default_char1): Likewise.\n+\t(read_utf8_char4): Likewise.\n+\t(read_default_char4): Likewise.\n+\t(read_a): Likewise.\n+\t(read_a_char4): Likewise.\n+\t(read_decimal): Likewise.\n+\t(read_radix): Likewise.\n+\t(read_f): Likewise.\n+\t* io/transfer.c (read_sf): Use fbuf_read and mem_alloc_r, remove\n+\tusage of u.p.line_buffer.\n+\t(read_block_form): Update interface to return pointer, use\n+\tfbuf_read for direct access.\n+\t(read_block_direct): Update to new stream interface.\n+\t(write_block): Use mem_alloc_w for internal I/O.\n+\t(write_buf): Update to new stream interface.\n+\t(formatted_transfer_scalar): Don't use u.p.line_buffer, use\n+\tfbuf_seek for external files.\n+\t(us_read): Update to new stream interface.\n+\t(us_write): Likewise.\n+\t(data_transfer_init): Always check if we switch modes and flush.\n+\t(skip_record): Use new stream interface, fix comparison.\n+\t(next_record_r): Check for and reset u.p.at_eof, use new stream\n+\tinterface, use fbuf_getc for spacing.\n+\t(write_us_marker): Update to new stream interface, don't inline.\n+\t(next_record_w_unf): Likewise.\n+\t(sset): New function.\n+\t(next_record_w): Use new stream interface, use fbuf for printing\n+\tnewline.\n+\t(next_record): Use new stream interface.\n+\t(finalize_transfer): Remove sfree call, use new stream interface.\n+\t(st_iolength_done): Don't use u.p.scratch.\n+\t(st_read): Don't check for end of file.\n+\t(st_read_done): Don't use u.p.scratch, use unit_truncate.\n+\t(hit_eof): New function.\n+\t* io/unit.c (init_units): Always init fbuf for formatted units.\n+\t(update_position): Use new stream interface.\n+\t(unit_truncate): New function.\n+\t(finish_last_advance_record): Use fbuf to print newline.\n+\t* io/unix.c: Remove unused SSIZE_MAX macro.\n+\t(BUFFER_SIZE): Make static const variable rather than macro.\n+\t(struct unix_stream): Remove dirty_offset, len, method,\n+\tsmall_buffer. Order elements by decreasing size.\n+\t(struct int_stream): Remove.\n+\t(move_pos_offset): Remove usage of dirty_offset.\n+\t(reset_stream): Remove.\n+\t(do_read): Rename to raw_read, update to match new stream\n+\tinterface.\n+\t(do_write): Rename to raw_write, update to new stream interface.\n+\t(raw_seek): New function.\n+\t(raw_tell): New function.\n+\t(raw_truncate): New function.\n+\t(raw_close): New function.\n+\t(raw_flush): New function.\n+\t(raw_init): New function.\n+\t(fd_alloc): Remove.\n+\t(fd_alloc_r_at): Remove.\n+\t(fd_alloc_w_at): Remove.\n+\t(fd_sfree): Remove.\n+\t(fd_seek): Remove.\n+\t(fd_truncate): Remove.\n+\t(fd_sset): Remove.\n+\t(fd_read): Remove.\n+\t(fd_write): Remove.\n+\t(fd_close): Remove.\n+\t(fd_open): Remove.\n+\t(fd_flush): Rename to buf_flush, update to new stream interface\n+\tand unix_stream.\n+\t(buf_read): New function.\n+\t(buf_write): New function.\n+\t(buf_seek): New function.\n+\t(buf_tell): New function.\n+\t(buf_truncate): New function.\n+\t(buf_close): New function.\n+\t(buf_init): New function.\n+\t(mem_alloc_r_at): Rename to mem_alloc_r, change prototype.\n+\t(mem_alloc_w_at): Rename to mem_alloc_w, change prototype.\n+\t(mem_read): Change to match new stream interface.\n+\t(mem_write): Likewise.\n+\t(mem_seek): Likewise.\n+\t(mem_tell): Likewise.\n+\t(mem_truncate): Likewise.\n+\t(mem_close): Likewise.\n+\t(mem_flush): New function.\n+\t(mem_sfree): Remove.\n+\t(empty_internal_buffer): Cast to correct type.\n+\t(open_internal): Use correct type, init function pointers.\n+\t(fd_to_stream): Test whether to open file as buffered or raw.\n+\t(output_stream): Remove mode set.\n+\t(error_stream): Likewise.\n+\t(flush_all_units_1): Use new stream interface.\n+\t(flush_all_units): Likewise.\n+\t(stream_at_bof): Remove.\n+\t(stream_at_eof): Remove.\n+\t(file_position): Remove.\n+\t(file_length): Update logic to use stream interface.\n+\t(flush): Remove.\n+\t(stream_offset): Remove.\n+\t* io/write.c (write_utf8_char4): Use int instead of size_t.\n+\t(write_x): Extra safety check.\n+\t(namelist_write_newline): Use new stream interface.\n+\n+2009-03-29  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n+\n+\tPR fortran/33595\n+\t* intrinsics/c99_functions.c (round): Use floor instead of ceil.\n+\tRevise checks to round up.\n+\t(roundf): Likewise.\n+\n+2009-03-28  Daniel Kraft  <d@domob.eu>\n+\n+\t* intrinsics/string_intrinsics.c: #include <assert.h>\n+\t* intrinsics/string_intrinsics_inc.c (string_trim): Use string_len_trim\n+\tinstead of calculating the length directly.\n+\t(string_len_trim): For KIND=1, speed search up.\n+\n+2009-03-24  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libfortran/39528\n+\t* io/list_read.c (list_formatted_read_scalar): Move check for read\n+\tcompletion to just after the check for a repeated value.\n+\n+2009-03-08  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libfortran/39402\n+\t* io/write_float.def (output_float): Handle F0.d formatting correctly\n+\tfor any d when value is 0.0.\n+\n+2009-03-01  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n+\n+\t* configure: Regenerate.\n+\n+2009-01-21  Daniel Kraft  <d@domob.eu>\n+\n+\tPR fortran/38887\n+\t* runtime/in_unpack_generic.c (internal_unpack):  Return instead of\n+\tabort when called with empty array.\n+\t* m4/in_unpack.m4:  Ditto.\n+\t* generated/in_unpack_i1.c:  Regenerated.\n+\t* generated/in_unpack_i2.c:  Regenerated.\n+\t* generated/in_unpack_i4.c:  Regenerated.\n+\t* generated/in_unpack_i8.c:  Regenerated.\n+\t* generated/in_unpack_i16.c: Regenerated.\n+\t* generated/in_unpack_r4.c:  Regenerated.\n+\t* generated/in_unpack_r8.c:  Regenerated.\n+\t* generated/in_unpack_r10.c: Regenerated.\n+\t* generated/in_unpack_r16.c: Regenerated.\n+\t* generated/in_unpack_c4.c:  Regenerated.\n+\t* generated/in_unpack_c8.c:  Regenerated.\n+\t* generated/in_unpack_c10.c: Regenerated.\n+\t* generated/in_unpack_c16.c: Regenerated.\n+\n+2009-01-12  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libfortran/38772\n+\t* io/read.c (read_f): Clean up loop conditions for BZ/BN,\n+\tallowing proper digit testing. White space fix.\n+\n+2009-01-05  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libfortran/38735\n+\t* io/unit.c (get_internal_unit): Set default BLANK= status to NULL for\n+\tinternal units.\n+"}]}