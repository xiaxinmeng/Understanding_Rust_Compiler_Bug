{"sha": "7b6baae190cc4db3f48e6d292030ea1c86fd4cb1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2I2YmFhZTE5MGNjNGRiM2Y0OGU2ZDI5MjAzMGVhMWM4NmZkNGNiMQ==", "commit": {"author": {"name": "Andreas Krebbel", "email": "krebbel1@de.ibm.com", "date": "2007-03-19T08:49:53Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2007-03-19T08:49:53Z"}, "message": "s390.md: Only non-functional changes.\n\n2007-03-19  Andreas Krebbel  <krebbel1@de.ibm.com>\n\n\t* config/s390/s390.md: Only non-functional changes.  Renamed\n\tFPR mode macro to BFP all over the file.\n\nFrom-SVN: r123057", "tree": {"sha": "4f27915d6c8171d248f324d345d1e7f33e811b3a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4f27915d6c8171d248f324d345d1e7f33e811b3a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7b6baae190cc4db3f48e6d292030ea1c86fd4cb1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b6baae190cc4db3f48e6d292030ea1c86fd4cb1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b6baae190cc4db3f48e6d292030ea1c86fd4cb1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b6baae190cc4db3f48e6d292030ea1c86fd4cb1/comments", "author": null, "committer": null, "parents": [{"sha": "85dae55a9a920bec8242338a8ec024b9f44b63c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85dae55a9a920bec8242338a8ec024b9f44b63c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85dae55a9a920bec8242338a8ec024b9f44b63c3"}], "stats": {"total": 271, "additions": 138, "deletions": 133}, "files": [{"sha": "d4f136e039b42e4beb4dd24a56bac4ee3ef08ba7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b6baae190cc4db3f48e6d292030ea1c86fd4cb1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b6baae190cc4db3f48e6d292030ea1c86fd4cb1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7b6baae190cc4db3f48e6d292030ea1c86fd4cb1", "patch": "@@ -1,3 +1,8 @@\n+2007-03-19  Andreas Krebbel  <krebbel1@de.ibm.com>\n+\n+\t* config/s390/s390.md: Only non-functional changes.  Renamed\n+\tFPR mode macro to BFP all over the file.\n+\n 2007-03-19  Andreas Krebbel  <krebbel1@de.ibm.com>\n \n \t* config/s390/s390.md (UNSPEC_COPYSIGN): New constant."}, {"sha": "27733a02fbbbc66f584874673db1cee7ea761f67", "filename": "gcc/config/s390/s390.md", "status": "modified", "additions": 133, "deletions": 133, "changes": 266, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b6baae190cc4db3f48e6d292030ea1c86fd4cb1/gcc%2Fconfig%2Fs390%2Fs390.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b6baae190cc4db3f48e6d292030ea1c86fd4cb1/gcc%2Fconfig%2Fs390%2Fs390.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.md?ref=7b6baae190cc4db3f48e6d292030ea1c86fd4cb1", "patch": "@@ -214,7 +214,7 @@\n \n ;; This mode macro allows floating point patterns to be generated from the\n ;; same template.\n-(define_mode_macro FPR [TF DF SF])\n+(define_mode_macro BFP [TF DF SF])\n (define_mode_macro DSF [DF SF])\n \n ;; These mode macros allow 31-bit and 64-bit TDSI patterns to be generated\n@@ -256,20 +256,20 @@\n \t\t\t  (plus \"add\") (minus \"sub\") (mult \"nand\")])\n \n \n-;; In FPR templates, a string like \"lt<de>br\" will expand to \"ltxbr\" in TFmode,\n+;; In BFP templates, a string like \"lt<de>br\" will expand to \"ltxbr\" in TFmode,\n ;; \"ltdbr\" in DFmode, and \"ltebr\" in SFmode.\n (define_mode_attr xde [(TF \"x\") (DF \"d\") (SF \"e\")])\n \n-;; In FPR templates, a string like \"m<dee>br\" will expand to \"mxbr\" in TFmode,\n+;; In BFP templates, a string like \"m<dee>br\" will expand to \"mxbr\" in TFmode,\n ;; \"mdbr\" in DFmode, and \"meebr\" in SFmode.\n (define_mode_attr xdee [(TF \"x\") (DF \"d\") (SF \"ee\")])\n \n-;; In FPR templates, \"<RRe>\" will expand to \"RRE\" in TFmode and \"RR\" otherwise.\n+;; In BFP templates, \"<RRe>\" will expand to \"RRE\" in TFmode and \"RR\" otherwise.\n ;; Likewise for \"<RXe>\".\n (define_mode_attr RRe [(TF \"RRE\") (DF \"RR\") (SF \"RR\")])\n (define_mode_attr RXe [(TF \"RXE\") (DF \"RX\") (SF \"RX\")])\n \n-;; In FPR templates, \"<Rf>\" will expand to \"f\" in TFmode and \"R\" otherwise.\n+;; In BFP templates, \"<Rf>\" will expand to \"f\" in TFmode and \"R\" otherwise.\n ;; This is used to disable the memory alternative in TFmode patterns.\n (define_mode_attr Rf [(TF \"f\") (DF \"R\") (SF \"R\")])\n \n@@ -362,8 +362,8 @@\n \n (define_expand \"cmp<mode>\"\n   [(set (reg:CC CC_REGNUM)\n-        (compare:CC (match_operand:FPR 0 \"register_operand\" \"\")\n-                    (match_operand:FPR 1 \"general_operand\" \"\")))]\n+        (compare:CC (match_operand:BFP 0 \"register_operand\" \"\")\n+                    (match_operand:BFP 1 \"general_operand\" \"\")))]\n   \"TARGET_HARD_FLOAT\"\n {\n   s390_compare_op0 = operands[0];\n@@ -753,8 +753,8 @@\n ; ltxbr, ltdbr, ltebr\n (define_insn \"*cmp<mode>_ccs_0\"\n   [(set (reg CC_REGNUM)\n-        (compare (match_operand:FPR 0 \"register_operand\" \"f\")\n-                 (match_operand:FPR 1 \"const0_operand\" \"\")))]\n+        (compare (match_operand:BFP 0 \"register_operand\" \"f\")\n+                 (match_operand:BFP 1 \"const0_operand\" \"\")))]\n   \"s390_match_ccmode(insn, CCSmode) && TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"lt<xde>br\\t%0,%0\"\n    [(set_attr \"op_type\" \"RRE\")\n@@ -763,8 +763,8 @@\n ; ltxr, ltdr, lter\n (define_insn \"*cmp<mode>_ccs_0_ibm\"\n   [(set (reg CC_REGNUM)\n-        (compare (match_operand:FPR 0 \"register_operand\" \"f\")\n-                 (match_operand:FPR 1 \"const0_operand\" \"\")))]\n+        (compare (match_operand:BFP 0 \"register_operand\" \"f\")\n+                 (match_operand:BFP 1 \"const0_operand\" \"\")))]\n   \"s390_match_ccmode(insn, CCSmode) && TARGET_HARD_FLOAT && TARGET_IBM_FLOAT\"\n   \"lt<xde>r\\t%0,%0\"\n    [(set_attr \"op_type\" \"<RRe>\")\n@@ -773,8 +773,8 @@\n ; cxbr, cdbr, cebr, cxb, cdb, ceb\n (define_insn \"*cmp<mode>_ccs\"\n   [(set (reg CC_REGNUM)\n-        (compare (match_operand:FPR 0 \"register_operand\" \"f,f\")\n-                 (match_operand:FPR 1 \"general_operand\" \"f,<Rf>\")))]\n+        (compare (match_operand:BFP 0 \"register_operand\" \"f,f\")\n+                 (match_operand:BFP 1 \"general_operand\" \"f,<Rf>\")))]\n   \"s390_match_ccmode(insn, CCSmode) && TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"@\n    c<xde>br\\t%0,%1\n@@ -785,8 +785,8 @@\n ; cxr, cdr, cer, cx, cd, ce\n (define_insn \"*cmp<mode>_ccs_ibm\"\n   [(set (reg CC_REGNUM)\n-        (compare (match_operand:FPR 0 \"register_operand\" \"f,f\")\n-                 (match_operand:FPR 1 \"general_operand\" \"f,<Rf>\")))]\n+        (compare (match_operand:BFP 0 \"register_operand\" \"f,f\")\n+                 (match_operand:BFP 1 \"general_operand\" \"f,<Rf>\")))]\n   \"s390_match_ccmode(insn, CCSmode) && TARGET_HARD_FLOAT && TARGET_IBM_FLOAT\"\n   \"@\n    c<xde>r\\t%0,%1\n@@ -1554,7 +1554,7 @@\n   operands[1] = replace_equiv_address (operands[1], addr);\n })\n \n-; TFmode in FPRs splitters\n+; TFmode in BFPs splitters\n \n (define_split\n   [(set (match_operand:TF 0 \"register_operand\" \"\")\n@@ -3148,31 +3148,31 @@\n ; fixuns_trunc(sf|df)(si|di)2 and fix_trunc(sf|df)(si|di)2 instruction pattern(s).\n ;\n \n-(define_expand \"fixuns_trunc<FPR:mode><GPR:mode>2\"\n+(define_expand \"fixuns_trunc<BFP:mode><GPR:mode>2\"\n   [(set (match_operand:GPR 0 \"register_operand\" \"\")\n-        (unsigned_fix:GPR (match_operand:FPR 1 \"register_operand\" \"\")))]\n+        (unsigned_fix:GPR (match_operand:BFP 1 \"register_operand\" \"\")))]\n   \"TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n {\n   rtx label1 = gen_label_rtx ();\n   rtx label2 = gen_label_rtx ();\n-  rtx temp = gen_reg_rtx (<FPR:MODE>mode);\n+  rtx temp = gen_reg_rtx (<BFP:MODE>mode);\n   REAL_VALUE_TYPE cmp, sub;\n   \n-  operands[1] = force_reg (<FPR:MODE>mode, operands[1]);\n+  operands[1] = force_reg (<BFP:MODE>mode, operands[1]);\n   real_2expN (&cmp, GET_MODE_BITSIZE(<GPR:MODE>mode) - 1);\n   real_2expN (&sub, GET_MODE_BITSIZE(<GPR:MODE>mode));\n   \n-  emit_insn (gen_cmp<FPR:mode> (operands[1],\n-\tCONST_DOUBLE_FROM_REAL_VALUE (cmp, <FPR:MODE>mode)));\n+  emit_insn (gen_cmp<BFP:mode> (operands[1],\n+\tCONST_DOUBLE_FROM_REAL_VALUE (cmp, <BFP:MODE>mode)));\n   emit_jump_insn (gen_blt (label1));\n-  emit_insn (gen_sub<FPR:mode>3 (temp, operands[1],\n-\tCONST_DOUBLE_FROM_REAL_VALUE (sub, <FPR:MODE>mode)));\n-  emit_insn (gen_fix_trunc<FPR:mode><GPR:mode>2_ieee (operands[0], temp,\n+  emit_insn (gen_sub<BFP:mode>3 (temp, operands[1],\n+\tCONST_DOUBLE_FROM_REAL_VALUE (sub, <BFP:MODE>mode)));\n+  emit_insn (gen_fix_trunc<BFP:mode><GPR:mode>2_ieee (operands[0], temp,\n \tGEN_INT(7)));\n   emit_jump (label2);\n \n   emit_label (label1);\n-  emit_insn (gen_fix_trunc<FPR:mode><GPR:mode>2_ieee (operands[0],\n+  emit_insn (gen_fix_trunc<BFP:mode><GPR:mode>2_ieee (operands[0],\n \toperands[1], GEN_INT(5)));\n   emit_label (label2);\n   DONE;\n@@ -3190,13 +3190,13 @@\n })\n \n ; cgxbr, cgdbr, cgebr, cfxbr, cfdbr, cfebr\n-(define_insn \"fix_trunc<FPR:mode><GPR:mode>2_ieee\"\n+(define_insn \"fix_trunc<BFP:mode><GPR:mode>2_ieee\"\n   [(set (match_operand:GPR 0 \"register_operand\" \"=d\")\n-        (fix:GPR (match_operand:FPR 1 \"register_operand\" \"f\")))\n+        (fix:GPR (match_operand:BFP 1 \"register_operand\" \"f\")))\n    (unspec:GPR [(match_operand:GPR 2 \"immediate_operand\" \"K\")] UNSPEC_ROUND)\n    (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n-  \"c<GPR:gf><FPR:xde>br\\t%0,%h2,%1\"\n+  \"c<GPR:gf><BFP:xde>br\\t%0,%h2,%1\"\n   [(set_attr \"op_type\" \"RRE\")\n    (set_attr \"type\"    \"ftoi\")])\n \n@@ -3290,17 +3290,17 @@\n \n ; cxgbr, cdgbr, cegbr\n (define_insn \"floatdi<mode>2\"\n-  [(set (match_operand:FPR 0 \"register_operand\" \"=f\")\n-        (float:FPR (match_operand:DI 1 \"register_operand\" \"d\")))]\n+  [(set (match_operand:BFP 0 \"register_operand\" \"=f\")\n+        (float:BFP (match_operand:DI 1 \"register_operand\" \"d\")))]\n   \"TARGET_64BIT && TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"c<xde>gbr\\t%0,%1\"\n   [(set_attr \"op_type\" \"RRE\")\n    (set_attr \"type\"    \"itof\" )])\n \n ; cxfbr, cdfbr, cefbr\n (define_insn \"floatsi<mode>2_ieee\"\n-  [(set (match_operand:FPR 0 \"register_operand\" \"=f\")\n-        (float:FPR (match_operand:SI 1 \"register_operand\" \"d\")))]\n+  [(set (match_operand:BFP 0 \"register_operand\" \"=f\")\n+        (float:BFP (match_operand:SI 1 \"register_operand\" \"d\")))]\n   \"TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"c<xde>fbr\\t%0,%1\"\n   [(set_attr \"op_type\" \"RRE\")\n@@ -3883,18 +3883,18 @@\n \n (define_expand \"add<mode>3\"\n   [(parallel\n-    [(set (match_operand:FPR 0 \"register_operand\" \"=f,f\")\n-          (plus:FPR (match_operand:FPR 1 \"nonimmediate_operand\" \"%0,0\")\n-                    (match_operand:FPR 2 \"general_operand\" \"f,<Rf>\")))\n+    [(set (match_operand:BFP 0 \"register_operand\" \"=f,f\")\n+          (plus:BFP (match_operand:BFP 1 \"nonimmediate_operand\" \"%0,0\")\n+                    (match_operand:BFP 2 \"general_operand\" \"f,<Rf>\")))\n      (clobber (reg:CC CC_REGNUM))])]\n   \"TARGET_HARD_FLOAT\"\n   \"\")\n \n ; axbr, adbr, aebr, axb, adb, aeb\n (define_insn \"*add<mode>3\"\n-  [(set (match_operand:FPR 0 \"register_operand\" \"=f,f\")\n-        (plus:FPR (match_operand:FPR 1 \"nonimmediate_operand\" \"%0,0\")\n-                  (match_operand:FPR 2 \"general_operand\" \"f,<Rf>\")))\n+  [(set (match_operand:BFP 0 \"register_operand\" \"=f,f\")\n+        (plus:BFP (match_operand:BFP 1 \"nonimmediate_operand\" \"%0,0\")\n+                  (match_operand:BFP 2 \"general_operand\" \"f,<Rf>\")))\n    (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"@\n@@ -3906,11 +3906,11 @@\n ; axbr, adbr, aebr, axb, adb, aeb\n (define_insn \"*add<mode>3_cc\"\n   [(set (reg CC_REGNUM)\n-\t(compare (plus:FPR (match_operand:FPR 1 \"nonimmediate_operand\" \"%0,0\")\n-\t\t\t   (match_operand:FPR 2 \"general_operand\" \"f,<Rf>\"))\n-\t\t (match_operand:FPR 3 \"const0_operand\" \"\")))\n-   (set (match_operand:FPR 0 \"register_operand\" \"=f,f\")\n-\t(plus:FPR (match_dup 1) (match_dup 2)))]\n+\t(compare (plus:BFP (match_operand:BFP 1 \"nonimmediate_operand\" \"%0,0\")\n+\t\t\t   (match_operand:BFP 2 \"general_operand\" \"f,<Rf>\"))\n+\t\t (match_operand:BFP 3 \"const0_operand\" \"\")))\n+   (set (match_operand:BFP 0 \"register_operand\" \"=f,f\")\n+\t(plus:BFP (match_dup 1) (match_dup 2)))]\n   \"s390_match_ccmode (insn, CCSmode) && TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"@\n    a<xde>br\\t%0,%2\n@@ -3921,10 +3921,10 @@\n ; axbr, adbr, aebr, axb, adb, aeb\n (define_insn \"*add<mode>3_cconly\"\n   [(set (reg CC_REGNUM)\n-\t(compare (plus:FPR (match_operand:FPR 1 \"nonimmediate_operand\" \"%0,0\")\n-\t\t\t   (match_operand:FPR 2 \"general_operand\" \"f,<Rf>\"))\n-\t\t (match_operand:FPR 3 \"const0_operand\" \"\")))\n-   (clobber (match_scratch:FPR 0 \"=f,f\"))]\n+\t(compare (plus:BFP (match_operand:BFP 1 \"nonimmediate_operand\" \"%0,0\")\n+\t\t\t   (match_operand:BFP 2 \"general_operand\" \"f,<Rf>\"))\n+\t\t (match_operand:BFP 3 \"const0_operand\" \"\")))\n+   (clobber (match_scratch:BFP 0 \"=f,f\"))]\n   \"s390_match_ccmode (insn, CCSmode) && TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"@\n    a<xde>br\\t%0,%2\n@@ -3934,9 +3934,9 @@\n \n ; axr, adr, aer, ax, ad, ae\n (define_insn \"*add<mode>3_ibm\"\n-  [(set (match_operand:FPR 0 \"register_operand\" \"=f,f\")\n-        (plus:FPR (match_operand:FPR 1 \"nonimmediate_operand\" \"%0,0\")\n-                  (match_operand:FPR 2 \"general_operand\" \"f,<Rf>\")))\n+  [(set (match_operand:BFP 0 \"register_operand\" \"=f,f\")\n+        (plus:BFP (match_operand:BFP 1 \"nonimmediate_operand\" \"%0,0\")\n+                  (match_operand:BFP 2 \"general_operand\" \"f,<Rf>\")))\n    (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_HARD_FLOAT && TARGET_IBM_FLOAT\"\n   \"@\n@@ -4226,18 +4226,18 @@\n \n (define_expand \"sub<mode>3\"\n   [(parallel\n-    [(set (match_operand:FPR 0 \"register_operand\" \"=f,f\")\n-          (minus:FPR (match_operand:FPR 1 \"register_operand\" \"0,0\")\n-                     (match_operand:FPR 2 \"general_operand\" \"f,R\")))\n+    [(set (match_operand:BFP 0 \"register_operand\" \"=f,f\")\n+          (minus:BFP (match_operand:BFP 1 \"register_operand\" \"0,0\")\n+                     (match_operand:BFP 2 \"general_operand\" \"f,R\")))\n      (clobber (reg:CC CC_REGNUM))])]\n   \"TARGET_HARD_FLOAT\"\n   \"\")\n \n ; sxbr, sdbr, sebr, sxb, sdb, seb\n (define_insn \"*sub<mode>3\"\n-  [(set (match_operand:FPR 0 \"register_operand\" \"=f,f\")\n-        (minus:FPR (match_operand:FPR 1 \"register_operand\" \"0,0\")\n-                   (match_operand:FPR 2 \"general_operand\" \"f,<Rf>\")))\n+  [(set (match_operand:BFP 0 \"register_operand\" \"=f,f\")\n+        (minus:BFP (match_operand:BFP 1 \"register_operand\" \"0,0\")\n+                   (match_operand:BFP 2 \"general_operand\" \"f,<Rf>\")))\n    (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"@\n@@ -4249,11 +4249,11 @@\n ; sxbr, sdbr, sebr, sxb, sdb, seb\n (define_insn \"*sub<mode>3_cc\"\n   [(set (reg CC_REGNUM)\n-\t(compare (minus:FPR (match_operand:FPR 1 \"nonimmediate_operand\" \"0,0\")\n-\t\t\t    (match_operand:FPR 2 \"general_operand\" \"f,<Rf>\"))\n-\t\t (match_operand:FPR 3 \"const0_operand\" \"\")))\n-   (set (match_operand:FPR 0 \"register_operand\" \"=f,f\")\n-\t(minus:FPR (match_dup 1) (match_dup 2)))]\n+\t(compare (minus:BFP (match_operand:BFP 1 \"nonimmediate_operand\" \"0,0\")\n+\t\t\t    (match_operand:BFP 2 \"general_operand\" \"f,<Rf>\"))\n+\t\t (match_operand:BFP 3 \"const0_operand\" \"\")))\n+   (set (match_operand:BFP 0 \"register_operand\" \"=f,f\")\n+\t(minus:BFP (match_dup 1) (match_dup 2)))]\n   \"s390_match_ccmode (insn, CCSmode) && TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"@\n    s<xde>br\\t%0,%2\n@@ -4264,10 +4264,10 @@\n ; sxbr, sdbr, sebr, sxb, sdb, seb\n (define_insn \"*sub<mode>3_cconly\"\n   [(set (reg CC_REGNUM)\n-\t(compare (minus:FPR (match_operand:FPR 1 \"nonimmediate_operand\" \"0,0\")\n-\t\t\t    (match_operand:FPR 2 \"general_operand\" \"f,<Rf>\"))\n-\t\t (match_operand:FPR 3 \"const0_operand\" \"\")))\n-   (clobber (match_scratch:FPR 0 \"=f,f\"))]\n+\t(compare (minus:BFP (match_operand:BFP 1 \"nonimmediate_operand\" \"0,0\")\n+\t\t\t    (match_operand:BFP 2 \"general_operand\" \"f,<Rf>\"))\n+\t\t (match_operand:BFP 3 \"const0_operand\" \"\")))\n+   (clobber (match_scratch:BFP 0 \"=f,f\"))]\n   \"s390_match_ccmode (insn, CCSmode) && TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"@\n    s<xde>br\\t%0,%2\n@@ -4277,9 +4277,9 @@\n \n ; sxr, sdr, ser, sx, sd, se\n (define_insn \"*sub<mode>3_ibm\"\n-  [(set (match_operand:FPR 0 \"register_operand\" \"=f,f\")\n-        (minus:FPR (match_operand:FPR 1 \"register_operand\" \"0,0\")\n-                   (match_operand:FPR 2 \"general_operand\" \"f,<Rf>\")))\n+  [(set (match_operand:BFP 0 \"register_operand\" \"=f,f\")\n+        (minus:BFP (match_operand:BFP 1 \"register_operand\" \"0,0\")\n+                   (match_operand:BFP 2 \"general_operand\" \"f,<Rf>\")))\n    (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_HARD_FLOAT && TARGET_IBM_FLOAT\"\n   \"@\n@@ -4535,17 +4535,17 @@\n ;\n \n (define_expand \"mul<mode>3\"\n-  [(set (match_operand:FPR 0 \"register_operand\" \"=f,f\")\n-        (mult:FPR (match_operand:FPR 1 \"nonimmediate_operand\" \"%0,0\")\n-                  (match_operand:FPR 2 \"general_operand\" \"f,<Rf>\")))]\n+  [(set (match_operand:BFP 0 \"register_operand\" \"=f,f\")\n+        (mult:BFP (match_operand:BFP 1 \"nonimmediate_operand\" \"%0,0\")\n+                  (match_operand:BFP 2 \"general_operand\" \"f,<Rf>\")))]\n   \"TARGET_HARD_FLOAT\"\n   \"\")\n \n ; mxbr mdbr, meebr, mxb, mxb, meeb\n (define_insn \"*mul<mode>3\"\n-  [(set (match_operand:FPR 0 \"register_operand\" \"=f,f\")\n-        (mult:FPR (match_operand:FPR 1 \"nonimmediate_operand\" \"%0,0\")\n-                  (match_operand:FPR 2 \"general_operand\" \"f,<Rf>\")))]\n+  [(set (match_operand:BFP 0 \"register_operand\" \"=f,f\")\n+        (mult:BFP (match_operand:BFP 1 \"nonimmediate_operand\" \"%0,0\")\n+                  (match_operand:BFP 2 \"general_operand\" \"f,<Rf>\")))]\n   \"TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"@\n    m<xdee>br\\t%0,%2\n@@ -4555,9 +4555,9 @@\n \n ; mxr, mdr, mer, mx, md, me\n (define_insn \"*mul<mode>3_ibm\"\n-  [(set (match_operand:FPR 0 \"register_operand\" \"=f,f\")\n-        (mult:FPR (match_operand:FPR 1 \"nonimmediate_operand\" \"%0,0\")\n-                  (match_operand:FPR 2 \"general_operand\" \"f,<Rf>\")))]\n+  [(set (match_operand:BFP 0 \"register_operand\" \"=f,f\")\n+        (mult:BFP (match_operand:BFP 1 \"nonimmediate_operand\" \"%0,0\")\n+                  (match_operand:BFP 2 \"general_operand\" \"f,<Rf>\")))]\n   \"TARGET_HARD_FLOAT && TARGET_IBM_FLOAT\"\n   \"@\n    m<xde>r\\t%0,%2\n@@ -5014,17 +5014,17 @@\n ;\n \n (define_expand \"div<mode>3\"\n-  [(set (match_operand:FPR 0 \"register_operand\" \"=f,f\")\n-        (div:FPR (match_operand:FPR 1 \"register_operand\" \"0,0\")\n-                 (match_operand:FPR 2 \"general_operand\" \"f,<Rf>\")))]\n+  [(set (match_operand:BFP 0 \"register_operand\" \"=f,f\")\n+        (div:BFP (match_operand:BFP 1 \"register_operand\" \"0,0\")\n+                 (match_operand:BFP 2 \"general_operand\" \"f,<Rf>\")))]\n   \"TARGET_HARD_FLOAT\"\n   \"\")\n \n ; dxbr, ddbr, debr, dxb, ddb, deb\n (define_insn \"*div<mode>3\"\n-  [(set (match_operand:FPR 0 \"register_operand\" \"=f,f\")\n-        (div:FPR (match_operand:FPR 1 \"register_operand\" \"0,0\")\n-                 (match_operand:FPR 2 \"general_operand\" \"f,<Rf>\")))]\n+  [(set (match_operand:BFP 0 \"register_operand\" \"=f,f\")\n+        (div:BFP (match_operand:BFP 1 \"register_operand\" \"0,0\")\n+                 (match_operand:BFP 2 \"general_operand\" \"f,<Rf>\")))]\n   \"TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"@\n    d<xde>br\\t%0,%2\n@@ -5034,9 +5034,9 @@\n \n ; dxr, ddr, der, dx, dd, de\n (define_insn \"*div<mode>3_ibm\"\n-  [(set (match_operand:FPR 0 \"register_operand\" \"=f,f\")\n-        (div:FPR (match_operand:FPR 1 \"register_operand\" \"0,0\")\n-                 (match_operand:FPR 2 \"general_operand\" \"f,<Rf>\")))]\n+  [(set (match_operand:BFP 0 \"register_operand\" \"=f,f\")\n+        (div:BFP (match_operand:BFP 1 \"register_operand\" \"0,0\")\n+                 (match_operand:BFP 2 \"general_operand\" \"f,<Rf>\")))]\n   \"TARGET_HARD_FLOAT && TARGET_IBM_FLOAT\"\n   \"@\n    d<xde>r\\t%0,%2\n@@ -6014,19 +6014,19 @@\n \n (define_expand \"neg<mode>2\"\n   [(parallel\n-    [(set (match_operand:FPR 0 \"register_operand\" \"=f\")\n-          (neg:FPR (match_operand:FPR 1 \"register_operand\" \"f\")))\n+    [(set (match_operand:BFP 0 \"register_operand\" \"=f\")\n+          (neg:BFP (match_operand:BFP 1 \"register_operand\" \"f\")))\n      (clobber (reg:CC CC_REGNUM))])]\n   \"TARGET_HARD_FLOAT\"\n   \"\")\n \n ; lcxbr, lcdbr, lcebr\n (define_insn \"*neg<mode>2_cc\"\n   [(set (reg CC_REGNUM)\n-        (compare (neg:FPR (match_operand:FPR 1 \"register_operand\" \"f\"))\n-                 (match_operand:FPR 2 \"const0_operand\" \"\")))\n-   (set (match_operand:FPR 0 \"register_operand\" \"=f\")\n-        (neg:FPR (match_dup 1)))]\n+        (compare (neg:BFP (match_operand:BFP 1 \"register_operand\" \"f\"))\n+                 (match_operand:BFP 2 \"const0_operand\" \"\")))\n+   (set (match_operand:BFP 0 \"register_operand\" \"=f\")\n+        (neg:BFP (match_dup 1)))]\n   \"s390_match_ccmode (insn, CCSmode) && TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"lc<xde>br\\t%0,%1\"\n   [(set_attr \"op_type\"  \"RRE\")\n@@ -6035,27 +6035,27 @@\n ; lcxbr, lcdbr, lcebr\n (define_insn \"*neg<mode>2_cconly\"\n   [(set (reg CC_REGNUM)\n-        (compare (neg:FPR (match_operand:FPR 1 \"register_operand\" \"f\"))\n-                 (match_operand:FPR 2 \"const0_operand\" \"\")))\n-   (clobber (match_scratch:FPR 0 \"=f\"))]\n+        (compare (neg:BFP (match_operand:BFP 1 \"register_operand\" \"f\"))\n+                 (match_operand:BFP 2 \"const0_operand\" \"\")))\n+   (clobber (match_scratch:BFP 0 \"=f\"))]\n   \"s390_match_ccmode (insn, CCSmode) && TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"lc<xde>br\\t%0,%1\"\n   [(set_attr \"op_type\"  \"RRE\")\n    (set_attr \"type\"     \"fsimp<mode>\")])\n \n ; lcdfr\n (define_insn \"*neg<mode>2_nocc\"\n-  [(set (match_operand:FPR 0 \"register_operand\"          \"=f\")\n-        (neg:FPR (match_operand:FPR 1 \"register_operand\" \"<fT0>\")))]\n+  [(set (match_operand:BFP 0 \"register_operand\"          \"=f\")\n+        (neg:BFP (match_operand:BFP 1 \"register_operand\" \"<fT0>\")))]\n   \"TARGET_HARD_FLOAT && TARGET_DFP\"\n   \"lcdfr\\t%0,%1\"\n   [(set_attr \"op_type\"  \"RRE\")\n    (set_attr \"type\"     \"fsimp<mode>\")])\n \n ; lcxbr, lcdbr, lcebr\n (define_insn \"*neg<mode>2\"\n-  [(set (match_operand:FPR 0 \"register_operand\" \"=f\")\n-        (neg:FPR (match_operand:FPR 1 \"register_operand\" \"f\")))\n+  [(set (match_operand:BFP 0 \"register_operand\" \"=f\")\n+        (neg:BFP (match_operand:BFP 1 \"register_operand\" \"f\")))\n    (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"lc<xde>br\\t%0,%1\"\n@@ -6064,8 +6064,8 @@\n \n ; lcxr, lcdr, lcer\n (define_insn \"*neg<mode>2_ibm\"\n-  [(set (match_operand:FPR 0 \"register_operand\" \"=f\")\n-        (neg:FPR (match_operand:FPR 1 \"register_operand\" \"f\")))\n+  [(set (match_operand:BFP 0 \"register_operand\" \"=f\")\n+        (neg:BFP (match_operand:BFP 1 \"register_operand\" \"f\")))\n    (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_HARD_FLOAT && TARGET_IBM_FLOAT\"\n   \"lc<xde>r\\t%0,%1\"\n@@ -6137,19 +6137,19 @@\n \n (define_expand \"abs<mode>2\"\n   [(parallel\n-    [(set (match_operand:FPR 0 \"register_operand\" \"=f\")\n-          (abs:FPR (match_operand:FPR 1 \"register_operand\" \"f\")))\n+    [(set (match_operand:BFP 0 \"register_operand\" \"=f\")\n+          (abs:BFP (match_operand:BFP 1 \"register_operand\" \"f\")))\n      (clobber (reg:CC CC_REGNUM))])]\n   \"TARGET_HARD_FLOAT\"\n   \"\")\n \n ; lpxbr, lpdbr, lpebr\n (define_insn \"*abs<mode>2_cc\"\n   [(set (reg CC_REGNUM)\n-        (compare (abs:FPR (match_operand:FPR 1 \"register_operand\" \"f\"))\n-                 (match_operand:FPR 2 \"const0_operand\" \"\")))\n-   (set (match_operand:FPR 0 \"register_operand\" \"=f\")\n-        (abs:FPR (match_dup 1)))]\n+        (compare (abs:BFP (match_operand:BFP 1 \"register_operand\" \"f\"))\n+                 (match_operand:BFP 2 \"const0_operand\" \"\")))\n+   (set (match_operand:BFP 0 \"register_operand\" \"=f\")\n+        (abs:BFP (match_dup 1)))]\n   \"s390_match_ccmode (insn, CCSmode) && TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"lp<xde>br\\t%0,%1\"\n   [(set_attr \"op_type\"  \"RRE\")\n@@ -6158,27 +6158,27 @@\n ; lpxbr, lpdbr, lpebr\n (define_insn \"*abs<mode>2_cconly\"\n   [(set (reg CC_REGNUM)\n-        (compare (abs:FPR (match_operand:FPR 1 \"register_operand\" \"f\"))\n-                 (match_operand:FPR 2 \"const0_operand\" \"\")))\n-   (clobber (match_scratch:FPR 0 \"=f\"))]\n+        (compare (abs:BFP (match_operand:BFP 1 \"register_operand\" \"f\"))\n+                 (match_operand:BFP 2 \"const0_operand\" \"\")))\n+   (clobber (match_scratch:BFP 0 \"=f\"))]\n   \"s390_match_ccmode (insn, CCSmode) && TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"lp<xde>br\\t%0,%1\"\n   [(set_attr \"op_type\"  \"RRE\")\n    (set_attr \"type\"     \"fsimp<mode>\")])\n \n ; lpdfr\n (define_insn \"*abs<mode>2_nocc\"\n-  [(set (match_operand:FPR 0 \"register_operand\"          \"=f\")\n-        (abs:FPR (match_operand:FPR 1 \"register_operand\" \"<fT0>\")))]\n+  [(set (match_operand:BFP 0 \"register_operand\"          \"=f\")\n+        (abs:BFP (match_operand:BFP 1 \"register_operand\" \"<fT0>\")))]\n   \"TARGET_HARD_FLOAT && TARGET_DFP\"\n   \"lpdfr\\t%0,%1\"\n   [(set_attr \"op_type\"  \"RRE\")\n    (set_attr \"type\"     \"fsimp<mode>\")])\n \n ; lpxbr, lpdbr, lpebr\n (define_insn \"*abs<mode>2\"\n-  [(set (match_operand:FPR 0 \"register_operand\" \"=f\")\n-        (abs:FPR (match_operand:FPR 1 \"register_operand\" \"f\")))\n+  [(set (match_operand:BFP 0 \"register_operand\" \"=f\")\n+        (abs:BFP (match_operand:BFP 1 \"register_operand\" \"f\")))\n    (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"lp<xde>br\\t%0,%1\"\n@@ -6187,8 +6187,8 @@\n \n ; lpxr, lpdr, lper\n (define_insn \"*abs<mode>2_ibm\"\n-  [(set (match_operand:FPR 0 \"register_operand\" \"=f\")\n-        (abs:FPR (match_operand:FPR 1 \"register_operand\" \"f\")))\n+  [(set (match_operand:BFP 0 \"register_operand\" \"=f\")\n+        (abs:BFP (match_operand:BFP 1 \"register_operand\" \"f\")))\n    (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_HARD_FLOAT && TARGET_IBM_FLOAT\"\n   \"lp<xde>r\\t%0,%1\"\n@@ -6261,10 +6261,10 @@\n ; lnxbr, lndbr, lnebr\n (define_insn \"*negabs<mode>2_cc\"\n   [(set (reg CC_REGNUM)\n-        (compare (neg:FPR (abs:FPR (match_operand:FPR 1 \"register_operand\" \"f\")))\n-                 (match_operand:FPR 2 \"const0_operand\" \"\")))\n-   (set (match_operand:FPR 0 \"register_operand\" \"=f\")\n-        (neg:FPR (abs:FPR (match_dup 1))))]\n+        (compare (neg:BFP (abs:BFP (match_operand:BFP 1 \"register_operand\" \"f\")))\n+                 (match_operand:BFP 2 \"const0_operand\" \"\")))\n+   (set (match_operand:BFP 0 \"register_operand\" \"=f\")\n+        (neg:BFP (abs:BFP (match_dup 1))))]\n   \"s390_match_ccmode (insn, CCSmode) && TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"ln<xde>br\\t%0,%1\"\n   [(set_attr \"op_type\"  \"RRE\")\n@@ -6273,27 +6273,27 @@\n ; lnxbr, lndbr, lnebr\n (define_insn \"*negabs<mode>2_cconly\"\n   [(set (reg CC_REGNUM)\n-        (compare (neg:FPR (abs:FPR (match_operand:FPR 1 \"register_operand\" \"f\")))\n-                 (match_operand:FPR 2 \"const0_operand\" \"\")))\n-   (clobber (match_scratch:FPR 0 \"=f\"))]\n+        (compare (neg:BFP (abs:BFP (match_operand:BFP 1 \"register_operand\" \"f\")))\n+                 (match_operand:BFP 2 \"const0_operand\" \"\")))\n+   (clobber (match_scratch:BFP 0 \"=f\"))]\n   \"s390_match_ccmode (insn, CCSmode) && TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"ln<xde>br\\t%0,%1\"\n   [(set_attr \"op_type\"  \"RRE\")\n    (set_attr \"type\"     \"fsimp<mode>\")])\n \n ; lndfr\n (define_insn \"*negabs<mode>2_nocc\"\n-  [(set (match_operand:FPR 0 \"register_operand\"                   \"=f\")\n-        (neg:FPR (abs:FPR (match_operand:FPR 1 \"register_operand\" \"<fT0>\"))))]\n+  [(set (match_operand:BFP 0 \"register_operand\"                   \"=f\")\n+        (neg:BFP (abs:BFP (match_operand:BFP 1 \"register_operand\" \"<fT0>\"))))]\n   \"TARGET_HARD_FLOAT && TARGET_DFP\"\n   \"lndfr\\t%0,%1\"\n   [(set_attr \"op_type\"  \"RRE\")\n    (set_attr \"type\"     \"fsimp<mode>\")])\n \n ; lnxbr, lndbr, lnebr\n (define_insn \"*negabs<mode>2\"\n-  [(set (match_operand:FPR 0 \"register_operand\" \"=f\")\n-        (neg:FPR (abs:FPR (match_operand:FPR 1 \"register_operand\" \"f\"))))\n+  [(set (match_operand:BFP 0 \"register_operand\" \"=f\")\n+        (neg:BFP (abs:BFP (match_operand:BFP 1 \"register_operand\" \"f\"))))\n    (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"ln<xde>br\\t%0,%1\"\n@@ -6306,9 +6306,9 @@\n \n ; cpsdr\n (define_insn \"copysign<mode>3\"\n-  [(set (match_operand:FPR 0 \"register_operand\" \"=f\")\n-\t(unspec:FPR [(match_operand:FPR 1 \"register_operand\" \"<fT0>\")\n-\t\t     (match_operand:FPR 2 \"register_operand\" \"f\")] \n+  [(set (match_operand:BFP 0 \"register_operand\" \"=f\")\n+\t(unspec:BFP [(match_operand:BFP 1 \"register_operand\" \"<fT0>\")\n+\t\t     (match_operand:BFP 2 \"register_operand\" \"f\")] \n \t\t    UNSPEC_COPYSIGN))]\n   \"TARGET_HARD_FLOAT && TARGET_DFP\"\n   \"cpsdr\\t%0,%2,%1\"\n@@ -6325,8 +6325,8 @@\n \n ; sqxbr, sqdbr, sqebr, sqxb, sqdb, sqeb\n (define_insn \"sqrt<mode>2\"\n-  [(set (match_operand:FPR 0 \"register_operand\" \"=f,f\")\n-\t(sqrt:FPR (match_operand:FPR 1 \"general_operand\" \"f,<Rf>\")))]\n+  [(set (match_operand:BFP 0 \"register_operand\" \"=f,f\")\n+\t(sqrt:BFP (match_operand:BFP 1 \"general_operand\" \"f,<Rf>\")))]\n   \"TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"@\n    sq<xde>br\\t%0,%1"}]}