{"sha": "884efbd523b7191edd7763ae8bba8afc96e3c238", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODg0ZWZiZDUyM2I3MTkxZWRkNzc2M2FlOGJiYThhZmM5NmUzYzIzOA==", "commit": {"author": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2019-08-10T14:11:49Z"}, "committer": {"name": "Iain Buclaw", "email": "ibuclaw@gcc.gnu.org", "date": "2019-08-10T14:11:49Z"}, "message": "d: Fix internal compiler error: in add_expr, at tree.c:7794\n\ngcc/d/ChangeLog:\n\n\tPR d/91238\n\t* d-codegen.cc (build_address): If taking the address of a CALL_EXPR,\n\twrap it in a TARGET_EXPR.\n\ngcc/testsuite/ChangeLog:\n\n\tPR d/91238\n\t* gdc.dg/pr91238.d: New test.\n\nFrom-SVN: r274253", "tree": {"sha": "ed325cb3a0094824e1a0f426ec64e3ea7964608b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ed325cb3a0094824e1a0f426ec64e3ea7964608b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/884efbd523b7191edd7763ae8bba8afc96e3c238", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/884efbd523b7191edd7763ae8bba8afc96e3c238", "html_url": "https://github.com/Rust-GCC/gccrs/commit/884efbd523b7191edd7763ae8bba8afc96e3c238", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/884efbd523b7191edd7763ae8bba8afc96e3c238/comments", "author": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "77eb117f588686e6fb018d103fc3d1899be9b008", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77eb117f588686e6fb018d103fc3d1899be9b008", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77eb117f588686e6fb018d103fc3d1899be9b008"}], "stats": {"total": 37, "additions": 34, "deletions": 3}, "files": [{"sha": "04eaccf3fed52af6ae81da927c1d701199147e85", "filename": "gcc/d/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/884efbd523b7191edd7763ae8bba8afc96e3c238/gcc%2Fd%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/884efbd523b7191edd7763ae8bba8afc96e3c238/gcc%2Fd%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2FChangeLog?ref=884efbd523b7191edd7763ae8bba8afc96e3c238", "patch": "@@ -1,3 +1,9 @@\n+2019-08-10  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\tPR d/91238\n+\t* d-codegen.cc (build_address): If taking the address of a CALL_EXPR,\n+\twrap it in a TARGET_EXPR.\n+\n 2019-08-10  Iain Buclaw  <ibuclaw@gdcproject.org>\n \n \tPR d/90893"}, {"sha": "cf50693b2f5c983f2b90d66a6d8f518ea7e41d7a", "filename": "gcc/d/d-codegen.cc", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/884efbd523b7191edd7763ae8bba8afc96e3c238/gcc%2Fd%2Fd-codegen.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/884efbd523b7191edd7763ae8bba8afc96e3c238/gcc%2Fd%2Fd-codegen.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fd-codegen.cc?ref=884efbd523b7191edd7763ae8bba8afc96e3c238", "patch": "@@ -651,9 +651,11 @@ build_address (tree exp)\n   if (TREE_CODE (exp) == CONST_DECL)\n     exp = DECL_INITIAL (exp);\n \n-  /* Some expression lowering may request an address of a compile-time constant.\n-     Make sure it is assigned to a location we can reference.  */\n-  if (CONSTANT_CLASS_P (exp) && TREE_CODE (exp) != STRING_CST)\n+  /* Some expression lowering may request an address of a compile-time constant,\n+     or other non-lvalue expression.  Make sure it is assigned to a location we\n+     can reference.  */\n+  if ((CONSTANT_CLASS_P (exp) && TREE_CODE (exp) != STRING_CST)\n+      || TREE_CODE (exp) == CALL_EXPR)\n     exp = force_target_expr (exp);\n \n   d_mark_addressable (exp);"}, {"sha": "ed12eadfd1644efaa1034d2e84c3cdeedec86d60", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/884efbd523b7191edd7763ae8bba8afc96e3c238/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/884efbd523b7191edd7763ae8bba8afc96e3c238/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=884efbd523b7191edd7763ae8bba8afc96e3c238", "patch": "@@ -1,3 +1,8 @@\n+2019-08-10  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\tPR d/91238\n+\t* gdc.dg/pr91238.d: New test.\n+\n 2019-08-10  Jakub Jelinek  <jakub@redhat.com>\n \n \t* c-c++-common/gomp/declare-target-2.c: Don't expect error for"}, {"sha": "26efb9062124858881ede3c52e646fedaff28684", "filename": "gcc/testsuite/gdc.dg/pr91238.d", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/884efbd523b7191edd7763ae8bba8afc96e3c238/gcc%2Ftestsuite%2Fgdc.dg%2Fpr91238.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/884efbd523b7191edd7763ae8bba8afc96e3c238/gcc%2Ftestsuite%2Fgdc.dg%2Fpr91238.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.dg%2Fpr91238.d?ref=884efbd523b7191edd7763ae8bba8afc96e3c238", "patch": "@@ -0,0 +1,18 @@\n+// https://gcc.gnu.org/bugzilla/show_bug.cgi?id=91238\n+// { dg-do compile }\n+\n+alias T = const(char)*;\n+\n+T name()\n+{\n+    return \"\";\n+}\n+\n+void collect(ref T)\n+{\n+}\n+\n+void configure(T[T] targets)\n+{\n+    collect(targets[name]);\n+}"}]}