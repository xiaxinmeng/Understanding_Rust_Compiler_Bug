{"sha": "b1dccb2878d087171ec51072708f6dfe656d1d78", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjFkY2NiMjg3OGQwODcxNzFlYzUxMDcyNzA4ZjZkZmU2NTZkMWQ3OA==", "commit": {"author": {"name": "Herman A.J. ten Brugge", "email": "hermantenbrugge@home.nl", "date": "2004-01-25T02:20:16Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2004-01-25T02:20:16Z"}, "message": "re PR target/12978 (problem with -fweb and c4x target)\n\n2004-01-24  Herman A.J. ten Brugge  <hermantenbrugge@home.nl>\n\n        PR target/12978\n        * c4x.md: (movstrqi*) Use match_scratch instead of match_dup.\n        Remove movstrqi_small because it conflicts with movstrqi_large.\n\nFrom-SVN: r76534", "tree": {"sha": "967f90463e3c48ba296d21aa2ff93442b9a24379", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/967f90463e3c48ba296d21aa2ff93442b9a24379"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b1dccb2878d087171ec51072708f6dfe656d1d78", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1dccb2878d087171ec51072708f6dfe656d1d78", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1dccb2878d087171ec51072708f6dfe656d1d78", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1dccb2878d087171ec51072708f6dfe656d1d78/comments", "author": {"login": "hermantb", "id": 55298268, "node_id": "MDQ6VXNlcjU1Mjk4MjY4", "avatar_url": "https://avatars.githubusercontent.com/u/55298268?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hermantb", "html_url": "https://github.com/hermantb", "followers_url": "https://api.github.com/users/hermantb/followers", "following_url": "https://api.github.com/users/hermantb/following{/other_user}", "gists_url": "https://api.github.com/users/hermantb/gists{/gist_id}", "starred_url": "https://api.github.com/users/hermantb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hermantb/subscriptions", "organizations_url": "https://api.github.com/users/hermantb/orgs", "repos_url": "https://api.github.com/users/hermantb/repos", "events_url": "https://api.github.com/users/hermantb/events{/privacy}", "received_events_url": "https://api.github.com/users/hermantb/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bda95edfff638e71645431f663613338c4dc5fd8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bda95edfff638e71645431f663613338c4dc5fd8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bda95edfff638e71645431f663613338c4dc5fd8"}], "stats": {"total": 92, "additions": 36, "deletions": 56}, "files": [{"sha": "92d5d74178dc4ed7a1d6932d01726daa8fb12a36", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1dccb2878d087171ec51072708f6dfe656d1d78/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1dccb2878d087171ec51072708f6dfe656d1d78/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b1dccb2878d087171ec51072708f6dfe656d1d78", "patch": "@@ -1,3 +1,9 @@\n+2004-01-24  Herman A.J. ten Brugge  <hermantenbrugge@home.nl>\n+\n+\tPR target/12978\n+\t* c4x.md: (movstrqi*) Use match_scratch instead of match_dup.\n+\tRemove movstrqi_small because it conflicts with movstrqi_large.\n+\n 2004-01-24  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* config/cris/cris.c (TARGET_PROMOTE_FUNCTION_ARGS): New."}, {"sha": "cf3cf7a03411de226b2c6078a5561da28d2a267a", "filename": "gcc/config/c4x/c4x.md", "status": "modified", "additions": 30, "deletions": 56, "changes": 86, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1dccb2878d087171ec51072708f6dfe656d1d78/gcc%2Fconfig%2Fc4x%2Fc4x.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1dccb2878d087171ec51072708f6dfe656d1d78/gcc%2Fconfig%2Fc4x%2Fc4x.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fc4x%2Fc4x.md?ref=b1dccb2878d087171ec51072708f6dfe656d1d78", "patch": "@@ -5653,7 +5653,7 @@\n   \"0\"\n   \"\")\n \n-(define_expand \"movstrqi_small2\"\n+(define_expand \"movstrqi_small\"\n   [(parallel [(set (mem:BLK (match_operand:BLK 0 \"src_operand\" \"\"))\n                    (mem:BLK (match_operand:BLK 1 \"src_operand\" \"\")))\n               (use (match_operand:QI 2 \"immediate_operand\" \"\"))\n@@ -5713,71 +5713,51 @@\n ; operand 3 is the shared alignment\n ; operand 4 is a scratch register\n \n-(define_insn \"movstrqi_small\"\n-  [(set (mem:BLK (match_operand:QI 0 \"addr_reg_operand\" \"+a\"))\n-        (mem:BLK (match_operand:QI 1 \"addr_reg_operand\" \"+a\")))\n-   (use (match_operand:QI 2 \"immediate_operand\" \"i\"))\n-   (use (match_operand:QI 3 \"immediate_operand\" \"\"))\n-   (clobber (match_operand:QI 4 \"ext_low_reg_operand\" \"=&q\"))\n-   (clobber (match_dup 0))\n-   (clobber (match_dup 1))]\n-  \"\"\n-  \"*\n- {\n-   int i;\n-   int len = INTVAL (operands[2]);\n-   int first = 1;\n-\n-   for (i = 0; i < len; i++)\n-    {\n-      if (first)\n-        output_asm_insn (\\\"ldiu\\\\t*%1++,%4\\\", operands);\n-      else\n-        output_asm_insn (\\\"|| ldi\\\\t*%1++,%4\\\", operands);\n-      output_asm_insn (\\\"sti\\\\t%4,*%0++\\\", operands);\n-      first = 0;\n-    } \n-  return \\\"\\\";\n-  }\n-  \"\n-  [(set_attr \"type\" \"multi\")])\n-\n (define_insn \"movstrqi_large\"\n-  [(set (mem:BLK (match_operand:QI 0 \"addr_reg_operand\" \"+a\"))\n-        (mem:BLK (match_operand:QI 1 \"addr_reg_operand\" \"+a\")))\n+  [(set (mem:BLK (match_operand:QI 0 \"addr_reg_operand\" \"a\"))\n+        (mem:BLK (match_operand:QI 1 \"addr_reg_operand\" \"a\")))\n    (use (match_operand:QI 2 \"immediate_operand\" \"i\"))\n    (use (match_operand:QI 3 \"immediate_operand\" \"\"))\n    (clobber (match_operand:QI 4 \"ext_low_reg_operand\" \"=&q\"))\n-   (clobber (match_dup 0))\n-   (clobber (match_dup 1))\n+   (clobber (match_scratch:QI 5 \"=0\"))\n+   (clobber (match_scratch:QI 6 \"=1\"))\n    (clobber (reg:QI 25))\n    (clobber (reg:QI 26))\n    (clobber (reg:QI 27))]\n   \"\"\n   \"*\n  {\n+   int i;\n    int len = INTVAL (operands[2]);\n \n    output_asm_insn (\\\"ldiu\\\\t*%1++,%4\\\", operands);\n-   if (TARGET_RPTS_CYCLES (len))\n+   if (len < 8)\n      {\n-        output_asm_insn (\\\"rpts\\\\t%2-2\\\", operands);  \n-        output_asm_insn (\\\"sti\\\\t%4,*%0++\\\", operands);\n-        output_asm_insn (\\\"|| ldi\\\\t*%1++,%4\\\", operands);\n-        return \\\"sti\\\\t%4,*%0++\\\";\n+       for (i = 1; i < len; i++)\n+        {\n+           output_asm_insn (\\\"sti\\\\t%4,*%0++\\\", operands);\n+           output_asm_insn (\\\"|| ldi\\\\t*%1++,%4\\\", operands);\n+         } \n      }\n    else\n      {\n-        output_asm_insn (\\\"ldiu\\\\t%2-2,rc\\\", operands);\n-        output_asm_insn (\\\"rptb\\\\t$+1\\\", operands);  \n-        output_asm_insn (\\\"sti\\\\t%4,*%0++\\\", operands);\n-        output_asm_insn (\\\"|| ldi\\\\t*%1++,%4\\\", operands);\n-\n-        return \\\"sti\\\\t%4,*%0++\\\";\n+       if (TARGET_RPTS_CYCLES (len))\n+         {\n+           output_asm_insn (\\\"rpts\\\\t%2-2\\\", operands);  \n+           output_asm_insn (\\\"sti\\\\t%4,*%0++\\\", operands);\n+           output_asm_insn (\\\"|| ldi\\\\t*%1++,%4\\\", operands);\n+         }\n+       else\n+         {\n+           output_asm_insn (\\\"ldiu\\\\t%2-2,rc\\\", operands);\n+           output_asm_insn (\\\"rptb\\\\t$+1\\\", operands);  \n+           output_asm_insn (\\\"sti\\\\t%4,*%0++\\\", operands);\n+           output_asm_insn (\\\"|| ldi\\\\t*%1++,%4\\\", operands);\n+        }\n      }\n-  }\n-  \"\n-  [(set_attr \"type\" \"multi\")])\n+   return \\\"sti\\\\t%4,*%0++\\\";\n+ }\"\n+ [(set_attr \"type\" \"multi\")])\n \n ; Operand 2 is the count, operand 3 is the alignment.\n (define_expand \"movstrqi\"\n@@ -5799,14 +5779,8 @@\n    operands[0] = copy_to_mode_reg (Pmode, XEXP (operands[0], 0));\n    operands[1] = copy_to_mode_reg (Pmode, XEXP (operands[1], 0));\n    tmp = gen_reg_rtx (QImode);\n-   if (INTVAL (operands[2]) < 8)\n-     emit_insn (gen_movstrqi_small2 (operands[0], operands[1], operands[2],\n-                                    operands[3], tmp));\n-   else\n-     {\n-      emit_insn (gen_movstrqi_large (operands[0], operands[1], operands[2],\n-                                     operands[3], tmp));\n-     }\n+   emit_insn (gen_movstrqi_large (operands[0], operands[1], operands[2],\n+                                  operands[3], tmp));\n    DONE;\n  }\")\n "}]}