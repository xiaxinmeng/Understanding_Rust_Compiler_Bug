{"sha": "f62866740b93747b2d3f1dd4d4637e6890e0fa22", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjYyODY2NzQwYjkzNzQ3YjJkM2YxZGQ0ZDQ2MzdlNjg5MGUwZmEyMg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2012-05-14T18:47:05Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2012-05-14T18:47:05Z"}, "message": "[multiple changes]\n\n2012-05-14  Andrew Pinski  <apinski@cavium.com>\n\t    H.J. Lu  <hongjiu.lu@intel.com>\n\t    Jakub Jelinek  <jakub@redhat.com>\n\n\tPR target/53315\n\t* config/i386/i386.md (xbegin_1): Use + in constraint and\n\tmatch_dup.\n\t(xbegin): Updated.\n\n2012-05-14  Andi Kleen <ak@linux.intel.com>\n\t    Jakub Jelinek  <jakub@redhat.com>\n\n\tPR target/53315\n\t* gcc.target/i386/i386.exp (check_effective_target_rtm): New.\n\t* gcc.target/i386/rtm-check.h: New file.\n\t* gcc.target/i386/pr53315.c: New test.\n\nFrom-SVN: r187477", "tree": {"sha": "c7f37836c3bd59f4662d6c178f2ef861f2d3a79a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c7f37836c3bd59f4662d6c178f2ef861f2d3a79a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f62866740b93747b2d3f1dd4d4637e6890e0fa22", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f62866740b93747b2d3f1dd4d4637e6890e0fa22", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f62866740b93747b2d3f1dd4d4637e6890e0fa22", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f62866740b93747b2d3f1dd4d4637e6890e0fa22/comments", "author": null, "committer": null, "parents": [{"sha": "210cfe6365e5b2f696bb1e32b8bc25628b1064c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/210cfe6365e5b2f696bb1e32b8bc25628b1064c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/210cfe6365e5b2f696bb1e32b8bc25628b1064c1"}], "stats": {"total": 102, "additions": 95, "deletions": 7}, "files": [{"sha": "da88c52b790f0a78884e62c91f91129075306799", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f62866740b93747b2d3f1dd4d4637e6890e0fa22/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f62866740b93747b2d3f1dd4d4637e6890e0fa22/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f62866740b93747b2d3f1dd4d4637e6890e0fa22", "patch": "@@ -1,3 +1,12 @@\n+2012-05-14  Andrew Pinski  <apinski@cavium.com>\n+\t    H.J. Lu  <hongjiu.lu@intel.com>\n+\t    Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/53315\n+\t* config/i386/i386.md (xbegin_1): Use + in constraint and\n+\tmatch_dup.\n+\t(xbegin): Updated.\n+\n 2012-05-14  Jakub Jelinek  <jakub@redhat.com>\n \n \t* dwarf2out.c (dwarf2out_define, dwarf2out_undef): Treat"}, {"sha": "01e2421de7d10620f4687c37448d7043c4c73884", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f62866740b93747b2d3f1dd4d4637e6890e0fa22/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f62866740b93747b2d3f1dd4d4637e6890e0fa22/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=f62866740b93747b2d3f1dd4d4637e6890e0fa22", "patch": "@@ -18436,25 +18436,26 @@\n \n   operands[1] = force_reg (SImode, constm1_rtx);\n \n-  emit_jump_insn (gen_xbegin_1 (operands[0], operands[1], label));\n+  emit_jump_insn (gen_xbegin_1 (operands[1], label));\n \n   emit_label (label);\n   LABEL_NUSES (label) = 1;\n \n+  emit_move_insn (operands[0], operands[1]);\n+\n   DONE;\n })\n \n (define_insn \"xbegin_1\"\n   [(set (pc)\n \t(if_then_else (ne (unspec [(const_int 0)] UNSPEC_XBEGIN_ABORT)\n \t\t\t  (const_int 0))\n-\t\t      (label_ref (match_operand 2))\n+\t\t      (label_ref (match_operand 1))\n \t\t      (pc)))\n-   (set (match_operand:SI 0 \"register_operand\" \"=a\")\n-\t(unspec_volatile:SI [(match_operand:SI 1 \"register_operand\" \"0\")]\n-\t\t\t    UNSPECV_XBEGIN))]\n+   (set (match_operand:SI 0 \"register_operand\" \"+a\")\n+\t(unspec_volatile:SI [(match_dup 0)] UNSPECV_XBEGIN))]\n   \"TARGET_RTM\"\n-  \"xbegin\\t%l2\"\n+  \"xbegin\\t%l1\"\n   [(set_attr \"type\" \"other\")\n    (set_attr \"length\" \"6\")])\n "}, {"sha": "c160fae15302e99347d8f33b112c7479cb796471", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f62866740b93747b2d3f1dd4d4637e6890e0fa22/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f62866740b93747b2d3f1dd4d4637e6890e0fa22/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f62866740b93747b2d3f1dd4d4637e6890e0fa22", "patch": "@@ -1,3 +1,11 @@\n+2012-05-14  Andi Kleen <ak@linux.intel.com>\n+\t    Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/53315\n+\t* gcc.target/i386/i386.exp (check_effective_target_rtm): New.\n+\t* gcc.target/i386/rtm-check.h: New file.\n+\t* gcc.target/i386/pr53315.c: New test.\n+\n 2012-05-14  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/49110"}, {"sha": "88ff715dc2494e98f40380fa381e5c74bf8859c3", "filename": "gcc/testsuite/gcc.target/i386/i386.exp", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f62866740b93747b2d3f1dd4d4637e6890e0fa22/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fi386.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f62866740b93747b2d3f1dd4d4637e6890e0fa22/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fi386.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fi386.exp?ref=f62866740b93747b2d3f1dd4d4637e6890e0fa22", "patch": "@@ -1,4 +1,4 @@\n-# Copyright (C) 1997, 2004, 2007, 2008, 2009, 2010\n+# Copyright (C) 1997, 2004, 2007, 2008, 2009, 2010, 2011, 2012\n # Free Software Foundation, Inc.\n \n # This program is free software; you can redistribute it and/or modify\n@@ -243,6 +243,17 @@ proc check_effective_target_bmi2 { } {\n     } \"-mbmi2\" ]\n }\n \n+# Return 1 if rtm instructions can be compiled.\n+proc check_effective_target_rtm { } {\n+    return [check_no_compiler_messages rtm object {\n+\tvoid\n+\t_rtm_xend (void)\n+\t{\n+\t    return __builtin_ia32_xend ();\n+\t}\n+    } \"-mrtm\" ]\n+}\n+\n # If the linker used understands -M <mapfile>, pass it to clear hardware\n # capabilities set by the Sun assembler.\n set clearcap_ldflags \"-Wl,-M,$srcdir/$subdir/clearcap.map\""}, {"sha": "350efa7246656db68e05c18fbe6ee06aad163b5e", "filename": "gcc/testsuite/gcc.target/i386/pr53315.c", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f62866740b93747b2d3f1dd4d4637e6890e0fa22/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr53315.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f62866740b93747b2d3f1dd4d4637e6890e0fa22/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr53315.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr53315.c?ref=f62866740b93747b2d3f1dd4d4637e6890e0fa22", "patch": "@@ -0,0 +1,27 @@\n+/* PR target/53315 and PR target/53291 */\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -mrtm\" } */\n+/* { dg-require-effective-target rtm } */\n+\n+#include <x86intrin.h>\n+#include \"rtm-check.h\"\n+\n+static void\n+rtm_test (void)\n+{\n+  int flag = -1;\n+  unsigned status;\n+\n+  if ((status = _xbegin ()) == _XBEGIN_STARTED)\n+    {\n+      flag = _xtest ();\n+      _xend ();\n+    }\n+  else\n+    return;\n+\n+  if (flag != 1)\n+    abort ();\n+  if (_xtest () != 0)\n+    abort ();\n+}"}, {"sha": "593b40391c792d7dbf52b56c2c5e351e7ab5b5dc", "filename": "gcc/testsuite/gcc.target/i386/rtm-check.h", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f62866740b93747b2d3f1dd4d4637e6890e0fa22/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Frtm-check.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f62866740b93747b2d3f1dd4d4637e6890e0fa22/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Frtm-check.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Frtm-check.h?ref=f62866740b93747b2d3f1dd4d4637e6890e0fa22", "patch": "@@ -0,0 +1,32 @@\n+#include <stdlib.h>\n+#include \"cpuid.h\"\n+\n+static void rtm_test (void);\n+\n+static void __attribute__ ((noinline)) do_test (void)\n+{\n+  rtm_test ();\n+}\n+\n+int\n+main ()\n+{\n+  unsigned int eax, ebx, ecx, edx;\n+\n+  if (__get_cpuid_max (0, NULL) >= 7)\n+    {\n+      __cpuid_count (7, 0, eax, ebx, ecx, edx);\n+      if (ebx & bit_RTM)\n+\t{\n+\t  do_test ();\n+#ifdef DEBUG\n+\t  printf (\"PASSED\\n\");\n+#endif\n+\t  return 0;\n+\t}\n+    }\n+#ifdef DEBUG\n+  printf (\"SKIPPED\\n\");\n+#endif\n+  return 0;\n+}"}]}