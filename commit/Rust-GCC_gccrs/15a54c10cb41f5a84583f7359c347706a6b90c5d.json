{"sha": "15a54c10cb41f5a84583f7359c347706a6b90c5d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTVhNTRjMTBjYjQxZjVhODQ1ODNmNzM1OWMzNDc3MDZhNmI5MGM1ZA==", "commit": {"author": {"name": "Michael Matz", "email": "matz@suse.de", "date": "2010-09-03T14:42:46Z"}, "committer": {"name": "Michael Matz", "email": "matz@gcc.gnu.org", "date": "2010-09-03T14:42:46Z"}, "message": "re PR middle-end/45415 (ICE in partition_view_bitmap, at tree-ssa-live.c:334)\n\n\tPR middle-end/45415\n\t* tree-sra.c (sra_modify_assign): If we modify the statement,\n\tsay so.\n\n\t* tree-ssa.c (verify_ssa): Check number of operands and links\n\tper statement to agree.\n\ntestsuite/\n\tPR middle-end/45415\n\t* gcc.dg/pr45415.c: New test.\n\nFrom-SVN: r163822", "tree": {"sha": "aa614bb1c0bc6ea02ae1dfcf2d8530766219c8ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aa614bb1c0bc6ea02ae1dfcf2d8530766219c8ee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/15a54c10cb41f5a84583f7359c347706a6b90c5d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15a54c10cb41f5a84583f7359c347706a6b90c5d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15a54c10cb41f5a84583f7359c347706a6b90c5d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15a54c10cb41f5a84583f7359c347706a6b90c5d/comments", "author": {"login": "susematz", "id": 4117296, "node_id": "MDQ6VXNlcjQxMTcyOTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4117296?v=4", "gravatar_id": "", "url": "https://api.github.com/users/susematz", "html_url": "https://github.com/susematz", "followers_url": "https://api.github.com/users/susematz/followers", "following_url": "https://api.github.com/users/susematz/following{/other_user}", "gists_url": "https://api.github.com/users/susematz/gists{/gist_id}", "starred_url": "https://api.github.com/users/susematz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/susematz/subscriptions", "organizations_url": "https://api.github.com/users/susematz/orgs", "repos_url": "https://api.github.com/users/susematz/repos", "events_url": "https://api.github.com/users/susematz/events{/privacy}", "received_events_url": "https://api.github.com/users/susematz/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ed6e090eb29cebdf2c48f2de0bb5d858c1eb9b8c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed6e090eb29cebdf2c48f2de0bb5d858c1eb9b8c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed6e090eb29cebdf2c48f2de0bb5d858c1eb9b8c"}], "stats": {"total": 99, "additions": 99, "deletions": 0}, "files": [{"sha": "fafdbabb398e40c8c7b9165c7471a32bcc9c4953", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15a54c10cb41f5a84583f7359c347706a6b90c5d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15a54c10cb41f5a84583f7359c347706a6b90c5d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=15a54c10cb41f5a84583f7359c347706a6b90c5d", "patch": "@@ -1,3 +1,12 @@\n+2010-09-03  Michael Matz  <matz@suse.de>\n+\n+\tPR middle-end/45415\n+\t* tree-sra.c (sra_modify_assign): If we modify the statement,\n+\tsay so.\n+\n+\t* tree-ssa.c (verify_ssa): Check number of operands and links\n+\tper statement to agree.\n+\n 2010-09-03  Uros Bizjak  <ubizjak@gmail.com>\n \t    Iain Sandoe  <iains@gcc.gnu.org>\n "}, {"sha": "3cdb32f4208f4071c4b36dc5ed5b314baf767997", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15a54c10cb41f5a84583f7359c347706a6b90c5d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15a54c10cb41f5a84583f7359c347706a6b90c5d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=15a54c10cb41f5a84583f7359c347706a6b90c5d", "patch": "@@ -1,3 +1,8 @@\n+2010-09-03  Michael Matz  <matz@suse.de>\n+\n+\tPR middle-end/45415\n+\t* gcc.dg/pr45415.c: New test.\n+\n 2010-09-03  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR tree-optimization/45506"}, {"sha": "12d9fc0f5a1c8eee818990641e9a152fedc00f19", "filename": "gcc/testsuite/gcc.dg/pr45415.c", "status": "added", "additions": 68, "deletions": 0, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15a54c10cb41f5a84583f7359c347706a6b90c5d/gcc%2Ftestsuite%2Fgcc.dg%2Fpr45415.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15a54c10cb41f5a84583f7359c347706a6b90c5d/gcc%2Ftestsuite%2Fgcc.dg%2Fpr45415.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr45415.c?ref=15a54c10cb41f5a84583f7359c347706a6b90c5d", "patch": "@@ -0,0 +1,68 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O1 -fno-tree-dominator-opts\" } */\n+\n+typedef unsigned long int st;\n+typedef unsigned long long dt;\n+typedef union\n+{\n+  dt d;\n+  struct\n+  {\n+    st h, l;\n+  }\n+  s;\n+} t_be;\n+\n+typedef union\n+{\n+  dt d;\n+  struct\n+  {\n+    st l, h;\n+  }\n+  s;\n+} t_le;\n+\n+#define df(f, t) \\\n+int \\\n+f (t afh, t bfh) \\\n+{ \\\n+  t hh; \\\n+  t hp, lp, dp, m; \\\n+  st ad, bd; \\\n+  int s; \\\n+  s = 0; \\\n+  ad = afh.s.h - afh.s.l; \\\n+  bd = bfh.s.l - bfh.s.h; \\\n+  if (bd > bfh.s.l) \\\n+    { \\\n+      bd = -bd; \\\n+      s = ~s; \\\n+    } \\\n+  lp.d = (dt) afh.s.l * bfh.s.l; \\\n+  hp.d = (dt) afh.s.h * bfh.s.h; \\\n+  dp.d = (dt) ad *bd; \\\n+  dp.d ^= s; \\\n+  hh.d = hp.d + hp.s.h + lp.s.h + dp.s.h; \\\n+  m.d = (dt) lp.s.h + hp.s.l + lp.s.l + dp.s.l; \\\n+  return hh.s.l + m.s.l; \\\n+}\n+\n+df(f_le, t_le)\n+df(f_be, t_be)\n+\n+void abort (void);\n+void exit (int);\n+main ()\n+{\n+  t_be x;\n+  x.s.h = 0x10000000U;\n+  x.s.l = 0xe0000000U;\n+  if (x.d == 0x10000000e0000000ULL\n+      && f_be ((t_be) 0x100000000ULL, (t_be) 0x100000000ULL) != -1)\n+    abort ();\n+  if (x.d == 0xe000000010000000ULL\n+      && f_le ((t_le) 0x100000000ULL, (t_le) 0x100000000ULL) != -1)\n+    abort ();\n+  exit (0);\n+}"}, {"sha": "75e7682fcacf6e6ee3e7315a94c9309bd0b2a015", "filename": "gcc/tree-sra.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15a54c10cb41f5a84583f7359c347706a6b90c5d/gcc%2Ftree-sra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15a54c10cb41f5a84583f7359c347706a6b90c5d/gcc%2Ftree-sra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-sra.c?ref=15a54c10cb41f5a84583f7359c347706a6b90c5d", "patch": "@@ -2783,6 +2783,7 @@ sra_modify_assign (gimple *stmt, gimple_stmt_iterator *gsi)\n \t\t\t\t    true, GSI_SAME_STMT);\n   if (gimple_assign_rhs1 (*stmt) != rhs)\n     {\n+      modify_this_stmt = true;\n       gimple_assign_set_rhs_from_tree (&orig_gsi, rhs);\n       gcc_assert (*stmt == gsi_stmt (orig_gsi));\n     }"}, {"sha": "9202f049670b56650259e6eafc56f570462fdc01", "filename": "gcc/tree-ssa.c", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15a54c10cb41f5a84583f7359c347706a6b90c5d/gcc%2Ftree-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15a54c10cb41f5a84583f7359c347706a6b90c5d/gcc%2Ftree-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa.c?ref=15a54c10cb41f5a84583f7359c347706a6b90c5d", "patch": "@@ -938,6 +938,8 @@ verify_ssa (bool check_modified_stmt)\n \t  gimple stmt = gsi_stmt (gsi);\n \t  use_operand_p use_p;\n \t  bool has_err;\n+\t  int count;\n+\t  unsigned i;\n \n \t  if (check_modified_stmt && gimple_modified_p (stmt))\n \t    {\n@@ -1007,6 +1009,7 @@ verify_ssa (bool check_modified_stmt)\n \t      goto err;\n \t    }\n \n+\t  count = 0;\n \t  FOR_EACH_SSA_TREE_OPERAND (op, stmt, iter, SSA_OP_USE|SSA_OP_DEF)\n \t    {\n \t      if (verify_ssa_name (op, false))\n@@ -1015,6 +1018,19 @@ verify_ssa (bool check_modified_stmt)\n \t\t  print_gimple_stmt (stderr, stmt, 0, TDF_VOPS|TDF_MEMSYMS);\n \t\t  goto err;\n \t\t}\n+\t      count++;\n+\t    }\n+\n+\t  for (i = 0; i < gimple_num_ops (stmt); i++)\n+\t    {\n+\t      op = gimple_op (stmt, i);\n+\t      if (op && TREE_CODE (op) == SSA_NAME && --count < 0)\n+\t\t{\n+\t\t  error (\"nr of operands and imm-links doesn't agree\");\n+\t\t  error (\"in statement\");\n+\t\t  print_gimple_stmt (stderr, stmt, 0, TDF_VOPS|TDF_MEMSYMS);\n+\t\t  goto err;\n+\t\t}\n \t    }\n \n \t  FOR_EACH_SSA_USE_OPERAND (use_p, stmt, iter, SSA_OP_USE|SSA_OP_VUSE)"}]}