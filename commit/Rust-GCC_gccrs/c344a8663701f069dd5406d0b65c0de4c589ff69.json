{"sha": "c344a8663701f069dd5406d0b65c0de4c589ff69", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzM0NGE4NjYzNzAxZjA2OWRkNTQwNmQwYjY1YzBkZTRjNTg5ZmY2OQ==", "commit": {"author": {"name": "Joern Rennecke", "email": "joern.rennecke@embecosm.com", "date": "2011-07-25T21:32:56Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2011-07-25T21:32:56Z"}, "message": "genattr.c (write_upcase, [...]): Move to ...\n\n        * genattr.c (write_upcase, gen_attr <enum definition writing>):\n        Move to ...\n        * genattr-common.c ... here.\n        (main): Call gen_attr.\n        * optc-gen.awk: Make generated program include insn-attr-common.h .\n        * Makefile.in (oprions.o): Depend on insn-attr-common.h\n\nFrom-SVN: r176769", "tree": {"sha": "8b716a26eaea9d3c08639ff1d1e19e739ed75ba9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8b716a26eaea9d3c08639ff1d1e19e739ed75ba9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c344a8663701f069dd5406d0b65c0de4c589ff69", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c344a8663701f069dd5406d0b65c0de4c589ff69", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c344a8663701f069dd5406d0b65c0de4c589ff69", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c344a8663701f069dd5406d0b65c0de4c589ff69/comments", "author": {"login": "amylaar", "id": 1663475, "node_id": "MDQ6VXNlcjE2NjM0NzU=", "avatar_url": "https://avatars.githubusercontent.com/u/1663475?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amylaar", "html_url": "https://github.com/amylaar", "followers_url": "https://api.github.com/users/amylaar/followers", "following_url": "https://api.github.com/users/amylaar/following{/other_user}", "gists_url": "https://api.github.com/users/amylaar/gists{/gist_id}", "starred_url": "https://api.github.com/users/amylaar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amylaar/subscriptions", "organizations_url": "https://api.github.com/users/amylaar/orgs", "repos_url": "https://api.github.com/users/amylaar/repos", "events_url": "https://api.github.com/users/amylaar/events{/privacy}", "received_events_url": "https://api.github.com/users/amylaar/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b97927a4e92fce96a44ef58468b532526e91ebfe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b97927a4e92fce96a44ef58468b532526e91ebfe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b97927a4e92fce96a44ef58468b532526e91ebfe"}], "stats": {"total": 74, "additions": 47, "deletions": 27}, "files": [{"sha": "421fcee2efa0cff142664625514adf60f0cd484d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c344a8663701f069dd5406d0b65c0de4c589ff69/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c344a8663701f069dd5406d0b65c0de4c589ff69/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c344a8663701f069dd5406d0b65c0de4c589ff69", "patch": "@@ -1,3 +1,12 @@\n+2011-07-25  Joern Rennecke  <joern.rennecke@embecosm.com>\n+\n+\t* genattr.c (write_upcase, gen_attr <enum definition writing>):\n+\tMove to ...\n+\t* genattr-common.c ... here.\n+\t(main): Call gen_attr.\n+\t* optc-gen.awk: Make generated program include insn-attr-common.h .\n+\t* Makefile.in (oprions.o): Depend on insn-attr-common.h\n+\n 2011-07-25  Anatoly Sokolov  <aesok@post.ru>\n \n \t* config/m32c/m32c.h (PRINT_OPERAND, PRINT_OPERAND_ADDRESS,"}, {"sha": "7a5c176065fbea8d156868fa6c2fcc60c5f7057a", "filename": "gcc/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c344a8663701f069dd5406d0b65c0de4c589ff69/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c344a8663701f069dd5406d0b65c0de4c589ff69/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=c344a8663701f069dd5406d0b65c0de4c589ff69", "patch": "@@ -2257,7 +2257,7 @@ s-options-h: optionlist $(srcdir)/opt-functions.awk $(srcdir)/opt-read.awk \\\n \t$(STAMP) $@\n \n options.o: options.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-\t$(TM_H) $(OPTS_H) intl.h $(OPTIONS_C_EXTRA)\n+\t$(TM_H) $(OPTS_H) intl.h $(OPTIONS_C_EXTRA) insn-attr-common.h\n \n options-save.o: options-save.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TARGET_H) $(FLAGS_H) \\\n \t$(TM_H) $(OPTS_H) intl.h $(OPTIONS_C_EXTRA)"}, {"sha": "d219fd1e613e58396173605d439aeea901720456", "filename": "gcc/genattr-common.c", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c344a8663701f069dd5406d0b65c0de4c589ff69/gcc%2Fgenattr-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c344a8663701f069dd5406d0b65c0de4c589ff69/gcc%2Fgenattr-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenattr-common.c?ref=c344a8663701f069dd5406d0b65c0de4c589ff69", "patch": "@@ -30,6 +30,36 @@ along with GCC; see the file COPYING3.  If not see\n #include \"read-md.h\"\n #include \"gensupport.h\"\n \n+static void\n+write_upcase (const char *str)\n+{\n+  for (; *str; str++)\n+    putchar (TOUPPER(*str));\n+}\n+\n+static void\n+gen_attr (rtx attr)\n+{\n+  const char *p, *tag;\n+\n+  p = XSTR (attr, 1);\n+  if (*p != '\\0')\n+    {\n+      printf (\"enum attr_%s {\", XSTR (attr, 0));\n+\n+      while ((tag = scan_comma_elt (&p)) != 0)\n+\t{\n+\t  write_upcase (XSTR (attr, 0));\n+\t  putchar ('_');\n+\t  while (tag != p)\n+\t    putchar (TOUPPER (*tag++));\n+\t  if (*p == ',')\n+\t    fputs (\", \", stdout);\n+\t}\n+      fputs (\"};\\n\", stdout);\n+    }\n+}\n+\n int\n main (int argc, char **argv)\n {\n@@ -57,6 +87,9 @@ main (int argc, char **argv)\n       if (desc == NULL)\n \tbreak;\n \n+      if (GET_CODE (desc) == DEFINE_ATTR)\n+\tgen_attr (desc);\n+\n       if (GET_CODE (desc) == DEFINE_DELAY)\n         {\n \t  if (!have_delay)"}, {"sha": "34e710d429d3f50a24cad568fd08ad8ee6570217", "filename": "gcc/genattr.c", "status": "modified", "additions": 3, "deletions": 26, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c344a8663701f069dd5406d0b65c0de4c589ff69/gcc%2Fgenattr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c344a8663701f069dd5406d0b65c0de4c589ff69/gcc%2Fgenattr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenattr.c?ref=c344a8663701f069dd5406d0b65c0de4c589ff69", "patch": "@@ -30,23 +30,15 @@ along with GCC; see the file COPYING3.  If not see\n #include \"gensupport.h\"\n \n \n-static void write_upcase (const char *);\n static void gen_attr (rtx);\n \n-static void\n-write_upcase (const char *str)\n-{\n-  for (; *str; str++)\n-    putchar (TOUPPER(*str));\n-}\n-\n static VEC (rtx, heap) *const_attrs, *reservations;\n \n \n static void\n gen_attr (rtx attr)\n {\n-  const char *p, *tag;\n+  const char *p;\n   int is_const = GET_CODE (XEXP (attr, 2)) == CONST;\n \n   if (is_const)\n@@ -65,23 +57,8 @@ gen_attr (rtx attr)\n \tprintf (\"extern int get_attr_%s (%s);\\n\", XSTR (attr, 0),\n \t\t(is_const ? \"void\" : \"rtx\"));\n       else\n-\t{\n-\t  printf (\"enum attr_%s {\", XSTR (attr, 0));\n-\n-\t  while ((tag = scan_comma_elt (&p)) != 0)\n-\t    {\n-\t      write_upcase (XSTR (attr, 0));\n-\t      putchar ('_');\n-\t      while (tag != p)\n-\t\tputchar (TOUPPER (*tag++));\n-\t      if (*p == ',')\n-\t\tfputs (\", \", stdout);\n-\t    }\n-\t  fputs (\"};\\n\", stdout);\n-\n-\t  printf (\"extern enum attr_%s get_attr_%s (%s);\\n\\n\",\n-\t\t  XSTR (attr, 0), XSTR (attr, 0), (is_const ? \"void\" : \"rtx\"));\n-\t}\n+\tprintf (\"extern enum attr_%s get_attr_%s (%s);\\n\\n\",\n+\t\tXSTR (attr, 0), XSTR (attr, 0), (is_const ? \"void\" : \"rtx\"));\n     }\n \n   /* If `length' attribute, write additional function definitions and define"}, {"sha": "71a03fbdcb6ed6aae2df6bd2c71ab6b789b6347a", "filename": "gcc/optc-gen.awk", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c344a8663701f069dd5406d0b65c0de4c589ff69/gcc%2Foptc-gen.awk", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c344a8663701f069dd5406d0b65c0de4c589ff69/gcc%2Foptc-gen.awk", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptc-gen.awk?ref=c344a8663701f069dd5406d0b65c0de4c589ff69", "patch": "@@ -37,6 +37,7 @@ for (i = 1; i <= n_headers; i++)\n \tprint \"#include \" quote headers[i] quote\n print \"#include \" quote \"opts.h\" quote\n print \"#include \" quote \"intl.h\" quote\n+print \"#include \" quote \"insn-attr-common.h\" quote\n print \"\"\n \n if (n_extra_c_includes > 0) {"}]}