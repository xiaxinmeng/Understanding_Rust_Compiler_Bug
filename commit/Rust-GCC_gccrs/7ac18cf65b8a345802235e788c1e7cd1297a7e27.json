{"sha": "7ac18cf65b8a345802235e788c1e7cd1297a7e27", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2FjMThjZjY1YjhhMzQ1ODAyMjM1ZTc4OGMxZTdjZDEyOTdhN2UyNw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-04-28T14:38:02Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-04-28T14:38:02Z"}, "message": "(mov[sd]i and splits): Change call to alpha_emit_set_const.\n\nFrom-SVN: r9533", "tree": {"sha": "18c546b854f90b29d2e7b33c48bdcfa5f4d6c763", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/18c546b854f90b29d2e7b33c48bdcfa5f4d6c763"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7ac18cf65b8a345802235e788c1e7cd1297a7e27", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ac18cf65b8a345802235e788c1e7cd1297a7e27", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ac18cf65b8a345802235e788c1e7cd1297a7e27", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ac18cf65b8a345802235e788c1e7cd1297a7e27/comments", "author": null, "committer": null, "parents": [{"sha": "c8e9adecbb12197ab8758bccf11e078ae51f2a1a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8e9adecbb12197ab8758bccf11e078ae51f2a1a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8e9adecbb12197ab8758bccf11e078ae51f2a1a"}], "stats": {"total": 28, "additions": 21, "deletions": 7}, "files": [{"sha": "4f46a130c412d2dfa9e0de9b45f839cb488a6c20", "filename": "gcc/config/alpha/alpha.md", "status": "modified", "additions": 21, "deletions": 7, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ac18cf65b8a345802235e788c1e7cd1297a7e27/gcc%2Fconfig%2Falpha%2Falpha.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ac18cf65b8a345802235e788c1e7cd1297a7e27/gcc%2Fconfig%2Falpha%2Falpha.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.md?ref=7ac18cf65b8a345802235e788c1e7cd1297a7e27", "patch": "@@ -3071,10 +3071,10 @@\n     ;\n   else if (GET_CODE (operands[1]) == CONST_INT)\n     {\n-      if (alpha_emit_set_const (operands[0], INTVAL (operands[1]), 3))\n+      operands[1]\n+\t= alpha_emit_set_const (operands[0], SImode, INTVAL (operands[1]), 3);\n+      if (rtx_equal_p (operands[0], operands[1]))\n \tDONE;\n-      else\n-\tabort ();\n     }\n }\")\n \n@@ -3088,7 +3088,10 @@\n   [(set (match_dup 0) (match_dup 2))\n    (set (match_dup 0) (plus:SI (match_dup 0) (match_dup 3)))]\n   \"\n-{ if (alpha_emit_set_const (operands[0], INTVAL (operands[1]), 2))\n+{ rtx tem\n+    = alpha_emit_set_const (operands[0], SImode, INTVAL (operands[1]), 2);\n+\n+  if (tem == operands[0])\n     DONE;\n   else\n     FAIL;\n@@ -3123,15 +3126,23 @@\n   \"\"\n   \"\n {\n+  rtx tem;\n+\n   if (GET_CODE (operands[0]) == MEM\n       && ! reg_or_0_operand (operands[1], DImode))\n     operands[1] = force_reg (DImode, operands[1]);\n \n   if (! CONSTANT_P (operands[1]) || input_operand (operands[1], DImode))\n     ;\n   else if (GET_CODE (operands[1]) == CONST_INT\n-\t   && alpha_emit_set_const (operands[0], INTVAL (operands[1]), 3))\n-    DONE;\n+\t   && (tem = alpha_emit_set_const (operands[0], DImode,\n+\t\t\t\t\t   INTVAL (operands[1]), 3)) != 0)\n+    {\n+      if (rtx_equal_p (tem, operands[0]))\n+\tDONE;\n+      else\n+\toperands[1] = tem;\n+    }\n   else if (CONSTANT_P (operands[1]))\n     {\n       operands[1] = force_const_mem (DImode, operands[1]);\n@@ -3157,7 +3168,10 @@\n   [(set (match_dup 0) (match_dup 2))\n    (set (match_dup 0) (plus:DI (match_dup 0) (match_dup 3)))]\n   \"\n-{ if (alpha_emit_set_const (operands[0], INTVAL (operands[1]), 2))\n+{ rtx tem\n+    = alpha_emit_set_const (operands[0], DImode, INTVAL (operands[1]), 2);\n+\n+  if (tem == operands[0])\n     DONE;\n   else\n     FAIL;"}]}