{"sha": "5840cf94b92bb1742326722082c0b4782160b96f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTg0MGNmOTRiOTJiYjE3NDIzMjY3MjIwODJjMGI0NzgyMTYwYjk2Zg==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1992-03-04T21:58:05Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1992-03-04T21:58:05Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r393", "tree": {"sha": "08fdb68eff59efb305bf5aaa2d4d9412dcccffad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/08fdb68eff59efb305bf5aaa2d4d9412dcccffad"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5840cf94b92bb1742326722082c0b4782160b96f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5840cf94b92bb1742326722082c0b4782160b96f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5840cf94b92bb1742326722082c0b4782160b96f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5840cf94b92bb1742326722082c0b4782160b96f/comments", "author": null, "committer": null, "parents": [{"sha": "724d9f3ddea0faa286ac0fa464625ae77d2e807a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/724d9f3ddea0faa286ac0fa464625ae77d2e807a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/724d9f3ddea0faa286ac0fa464625ae77d2e807a"}], "stats": {"total": 22, "additions": 12, "deletions": 10}, "files": [{"sha": "0dee079a2b7d6787e48fca0a01c48fcefa643903", "filename": "gcc/ginclude/stdarg.h", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5840cf94b92bb1742326722082c0b4782160b96f/gcc%2Fginclude%2Fstdarg.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5840cf94b92bb1742326722082c0b4782160b96f/gcc%2Fginclude%2Fstdarg.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fginclude%2Fstdarg.h?ref=5840cf94b92bb1742326722082c0b4782160b96f", "patch": "@@ -22,6 +22,9 @@\n #ifdef __mips__\n #include \"va-mips.h\"\n #else\n+#ifdef __sparc__\n+#include \"va-sparc.h\"\n+#else\n \n #ifdef _HIDDEN_VA_LIST  /* On OSF1, this means varargs.h is \"half-loaded\".  */\n #undef _VA_LIST\n@@ -43,14 +46,8 @@ typedef char *va_list;\n #define __va_rounded_size(TYPE)  \\\n   (((sizeof (TYPE) + sizeof (int) - 1) / sizeof (int)) * sizeof (int))\n \n-#ifndef __sparc__\n #define va_start(AP, LASTARG) \t\t\t\t\t\t\\\n  (AP = ((char *) __builtin_next_arg ()))\n-#else\n-#define va_start(AP, LASTARG) \t\t\t\t\t\t\\\n- (__builtin_saveregs (),\t\t\t\t\t\t\\\n-  AP = ((char *) __builtin_next_arg ()))\n-#endif\n \n void va_end (va_list);\t\t/* Defined in libgcc.a */\n #define va_end(AP)\n@@ -59,6 +56,7 @@ void va_end (va_list);\t\t/* Defined in libgcc.a */\n  (AP += __va_rounded_size (TYPE),\t\t\t\t\t\\\n   *((TYPE *) (AP - __va_rounded_size (TYPE))))\n \n+#endif /* not sparc */\n #endif /* not mips */\n #endif /* not hp9000s800 */\n #endif /* not i860 */"}, {"sha": "02c6613d407913e8473d08d10c00c09bf3907410", "filename": "gcc/ginclude/va-sparc.h", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5840cf94b92bb1742326722082c0b4782160b96f/gcc%2Fginclude%2Fva-sparc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5840cf94b92bb1742326722082c0b4782160b96f/gcc%2Fginclude%2Fva-sparc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fginclude%2Fva-sparc.h?ref=5840cf94b92bb1742326722082c0b4782160b96f", "patch": "@@ -20,10 +20,14 @@ typedef char * __va___list;\n /* The ... causes current_function_varargs to be set in cc1.  */\n #define va_dcl    int __builtin_va_alist; __va_ellipsis\n \n-/* The difference is to store the stack address in both components\n-   instead of in AP itself.  */\n+#ifdef _STDARG_H\n+#define va_start(AP, LASTARG)\t\t\t\t\t\\\n+  (__builtin_saveregs (), AP = ((char *) __builtin_next_arg ()))\n+#else\n #define va_start(AP) \t\t\t\t\t\t\\\n  (__builtin_saveregs (), (AP) = ((char *) &__builtin_va_alist))\n+#endif\n+\n #define va_end(pvar)\n \n #define __va_rounded_size(TYPE)  \\\n@@ -43,6 +47,6 @@ __extension__\t\t\t\t\t\t\t\\\n ({ TYPE __va_temp;\t\t\t\t\t\t\\\n    ((__builtin_classify_type (__va_temp) >= 12)\t\t\t\\\n     ? ((pvar) += __va_rounded_size (TYPE *),\t\t\t\\\n-       **(TYPE **) (pvar) - __va_rounded_size (TYPE *))\t\t\\\n-    : ((pvar) += __va_rounded_size (TYPE),\t\t\\\n+       **(TYPE **) ((pvar) - __va_rounded_size (TYPE *)))\t\\\n+    : ((pvar) += __va_rounded_size (TYPE),\t\t\t\\\n        *((TYPE *) ((pvar) - __va_rounded_size (TYPE)))));})"}]}