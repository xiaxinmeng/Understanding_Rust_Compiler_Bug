{"sha": "67da32876e58df26f1ae062ad41d8fe8862eddea", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjdkYTMyODc2ZTU4ZGYyNmYxYWUwNjJhZDQxZDhmZTg4NjJlZGRlYQ==", "commit": {"author": {"name": "Mark Mitchell", "email": "mmitchell@usa.net", "date": "1998-02-03T01:33:09Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-02-03T01:33:09Z"}, "message": "parse.y (primary): Deal with statement-expressions in templates.\n\n\t* parse.y (primary): Deal with statement-expressions in\n\ttemplates.\n\t* pt.c (tsubst_copy): Handle BIND_EXPR.\n\t* tree.c (mapcar): Likewise.\n\nFrom-SVN: r17611", "tree": {"sha": "e8583bff9035e30156e2809d28ce75b40805ba4c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e8583bff9035e30156e2809d28ce75b40805ba4c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/67da32876e58df26f1ae062ad41d8fe8862eddea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67da32876e58df26f1ae062ad41d8fe8862eddea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67da32876e58df26f1ae062ad41d8fe8862eddea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67da32876e58df26f1ae062ad41d8fe8862eddea/comments", "author": null, "committer": null, "parents": [{"sha": "0340ed6c77f2fea0bfdbe82c1e32a1494251235e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0340ed6c77f2fea0bfdbe82c1e32a1494251235e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0340ed6c77f2fea0bfdbe82c1e32a1494251235e"}], "stats": {"total": 1159, "additions": 609, "deletions": 550}, "files": [{"sha": "4e33900d44264a4c2f6cdb7b1e5c7af5d09f48ab", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67da32876e58df26f1ae062ad41d8fe8862eddea/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67da32876e58df26f1ae062ad41d8fe8862eddea/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=67da32876e58df26f1ae062ad41d8fe8862eddea", "patch": "@@ -1,5 +1,10 @@\n Mon Feb  2 11:24:22 1998  Mark Mitchell  <mmitchell@usa.net>\n \n+\t* parse.y (primary): Deal with statement-expressions in\n+\ttemplates. \n+\t* pt.c (tsubst_copy): Handle BIND_EXPR.\n+\t* tree.c (mapcar): Likewise.\n+\n \t* call.c (add_template_candidate_real): Pass extra parameter to\n \tfn_type_unification. \n \t* cp-tree.h (fn_type_unification): Add parameter."}, {"sha": "17f1aa0e7423b4c4b7b75f4d71feb750191a6bd0", "filename": "gcc/cp/parse.c", "status": "modified", "additions": 553, "deletions": 540, "changes": 1093, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67da32876e58df26f1ae062ad41d8fe8862eddea/gcc%2Fcp%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67da32876e58df26f1ae062ad41d8fe8862eddea/gcc%2Fcp%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparse.c?ref=67da32876e58df26f1ae062ad41d8fe8862eddea"}, {"sha": "e9eebcc2fc20fda942c5cd062958854b438fbe93", "filename": "gcc/cp/parse.y", "status": "modified", "additions": 19, "deletions": 6, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67da32876e58df26f1ae062ad41d8fe8862eddea/gcc%2Fcp%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67da32876e58df26f1ae062ad41d8fe8862eddea/gcc%2Fcp%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparse.y?ref=67da32876e58df26f1ae062ad41d8fe8862eddea", "patch": "@@ -1434,20 +1434,33 @@ primary:\n \t\t      YYERROR;\n \t\t    }\n \t\t  keep_next_level ();\n-\t\t  $<ttype>$ = expand_start_stmt_expr (); }\n+\t\t  if (!processing_template_decl)\n+\t\t    $<ttype>$ = expand_start_stmt_expr (); \n+\t\t  else\n+\t\t    $<ttype>$ = NULL_TREE;\n+\t\t}\n \t  compstmt ')'\n \t\t{ tree rtl_exp;\n \t\t  if (pedantic)\n \t\t    pedwarn (\"ANSI C++ forbids braced-groups within expressions\");\n-\t\t  rtl_exp = expand_end_stmt_expr ($<ttype>2);\n-\t\t  /* The statements have side effects, so the group does.  */\n-\t\t  TREE_SIDE_EFFECTS (rtl_exp) = 1;\n+\t\t  if (!processing_template_decl)\n+\t\t    {\n+\t\t      rtl_exp = expand_end_stmt_expr ($<ttype>2);\n+\t\t      /* The statements have side effects, so the\n+\t\t\t group does.  */ \n+\t\t      TREE_SIDE_EFFECTS (rtl_exp) = 1;\n+\t\t    }\n \n \t\t  if (TREE_CODE ($3) == BLOCK)\n \t\t    {\n \t\t      /* Make a BIND_EXPR for the BLOCK already made.  */\n-\t\t      $$ = build (BIND_EXPR, TREE_TYPE (rtl_exp),\n-\t\t\t\t  NULL_TREE, rtl_exp, $3);\n+\t\t      if (processing_template_decl)\n+\t\t\t$$ = build (BIND_EXPR, NULL_TREE,\n+\t\t\t\t    NULL_TREE, last_tree, $3);\n+\t\t      else\n+\t\t\t$$ = build (BIND_EXPR, TREE_TYPE (rtl_exp),\n+\t\t\t\t    NULL_TREE, rtl_exp, $3);\n+\n \t\t      /* Remove the block from the tree at this point.\n \t\t\t It gets put back at the proper place\n \t\t\t when the BIND_EXPR is expanded.  */"}, {"sha": "597c75a11119aebbfb0781aab21155a7c539d9d8", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 25, "deletions": 4, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67da32876e58df26f1ae062ad41d8fe8862eddea/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67da32876e58df26f1ae062ad41d8fe8862eddea/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=67da32876e58df26f1ae062ad41d8fe8862eddea", "patch": "@@ -4121,12 +4121,33 @@ tsubst_copy (t, args, nargs, in_decl)\n \t   NULL_TREE);\n       }\n \n+    case BIND_EXPR:\n     case COND_EXPR:\n     case MODOP_EXPR:\n-      return build_nt\n-\t(code, tsubst_copy (TREE_OPERAND (t, 0), args, nargs, in_decl),\n-\t tsubst_copy (TREE_OPERAND (t, 1), args, nargs, in_decl),\n-\t tsubst_copy (TREE_OPERAND (t, 2), args, nargs, in_decl));\n+      {\n+\ttree r = build_nt\n+\t  (code, tsubst_copy (TREE_OPERAND (t, 0), args, nargs, in_decl),\n+\t   tsubst_copy (TREE_OPERAND (t, 1), args, nargs, in_decl),\n+\t   tsubst_copy (TREE_OPERAND (t, 2), args, nargs, in_decl));\n+\n+\tif (code == BIND_EXPR && !processing_template_decl)\n+\t  {\n+\t    /* This processing  should really occur in tsubst_expr,\n+\t       However, tsubst_expr does not recurse into expressions,\n+\t       since it assumes that there aren't any statements\n+\t       inside them.  Instead, it simply calls\n+\t       build_expr_from_tree.  So, we need to expand the\n+\t       BIND_EXPR here.  */ \n+\t    tree rtl_exp = expand_start_stmt_expr();\n+\t    tsubst_expr (TREE_OPERAND (r, 1), args, nargs, in_decl);\n+\t    rtl_exp = expand_end_stmt_expr (rtl_exp);\n+\t    TREE_SIDE_EFFECTS (rtl_exp) = 1;\n+\t    return build (BIND_EXPR, TREE_TYPE (rtl_exp), \n+\t\t\t  NULL_TREE, rtl_exp, TREE_OPERAND (r, 2));\n+\t  }\n+\n+\treturn r;\n+      }\n \n     case NEW_EXPR:\n       {"}, {"sha": "6ad57402be43df47984b57d3baeae331d3ac7da5", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67da32876e58df26f1ae062ad41d8fe8862eddea/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67da32876e58df26f1ae062ad41d8fe8862eddea/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=67da32876e58df26f1ae062ad41d8fe8862eddea", "patch": "@@ -1645,6 +1645,13 @@ mapcar (t, func)\n     case TEMPLATE_TEMPLATE_PARM:\n       return copy_template_template_parm (t);\n \n+    case BIND_EXPR:\n+      t = copy_node (t);\n+      TREE_OPERAND (t, 0) = mapcar (TREE_OPERAND (t, 0), func);\n+      TREE_OPERAND (t, 1) = mapcar (TREE_OPERAND (t, 1), func);\n+      TREE_OPERAND (t, 2) = NULL_TREE;\n+      return t;\n+\n     case RECORD_TYPE:\n       if (TYPE_PTRMEMFUNC_P (t))\n \treturn build_ptrmemfunc_type"}]}