{"sha": "73c9f270181676873dcacaa7629fea4ad2b9c5d3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzNjOWYyNzAxODE2NzY4NzNkY2FjYWE3NjI5ZmVhNGFkMmI5YzVkMw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@yorick.cygnus.com", "date": "1998-05-06T02:40:36Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-05-06T02:40:36Z"}, "message": "tree.c (perm_manip): Also regenerate the RTL of an extern.\n\n\t* tree.c (perm_manip): Also regenerate the RTL of an extern.\n\t(copy_to_permanent): Use end_temporary_allocation.\n\nFrom-SVN: r19560", "tree": {"sha": "bb82d8c10cb61fd53cb36529e7a950106fe4284d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bb82d8c10cb61fd53cb36529e7a950106fe4284d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/73c9f270181676873dcacaa7629fea4ad2b9c5d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73c9f270181676873dcacaa7629fea4ad2b9c5d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73c9f270181676873dcacaa7629fea4ad2b9c5d3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73c9f270181676873dcacaa7629fea4ad2b9c5d3/comments", "author": null, "committer": null, "parents": [{"sha": "15ebe47d89fc04267f3b232556ebedd6e19d3bcc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15ebe47d89fc04267f3b232556ebedd6e19d3bcc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15ebe47d89fc04267f3b232556ebedd6e19d3bcc"}], "stats": {"total": 29, "additions": 18, "deletions": 11}, "files": [{"sha": "ce8d77066407e6170e740faed71854442d873c5b", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73c9f270181676873dcacaa7629fea4ad2b9c5d3/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73c9f270181676873dcacaa7629fea4ad2b9c5d3/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=73c9f270181676873dcacaa7629fea4ad2b9c5d3", "patch": "@@ -1,3 +1,8 @@\n+Wed May  6 02:33:39 1998  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* tree.c (perm_manip): Also regenerate the RTL of an extern.\n+\t(copy_to_permanent): Use end_temporary_allocation.\n+\n Tue May  5 23:54:04 1998  Jason Merrill  <jason@yorick.cygnus.com>\n \n \t* init.c (expand_vec_init): The initialization of each array"}, {"sha": "fc9fd37d953892174b7eec428f2cf056ffc5216c", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 13, "deletions": 11, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73c9f270181676873dcacaa7629fea4ad2b9c5d3/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73c9f270181676873dcacaa7629fea4ad2b9c5d3/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=73c9f270181676873dcacaa7629fea4ad2b9c5d3", "patch": "@@ -1685,10 +1685,19 @@ perm_manip (t)\n {\n   if (TREE_PERMANENT (t))\n     return t;\n+\n   /* Support `void f () { extern int i; A<&i> a; }' */\n   if ((TREE_CODE (t) == VAR_DECL || TREE_CODE (t) == FUNCTION_DECL)\n       && TREE_PUBLIC (t))\n-    return copy_node (t);\n+    {\n+      t = copy_node (t);\n+\n+      /* copy_rtx won't make a new SYMBOL_REF, so call make_decl_rtl again.  */\n+      DECL_RTL (t) = 0;\n+      make_decl_rtl (t, NULL_PTR, 1);\n+\n+      return t;\n+    }\n   return NULL_TREE;\n }\n \n@@ -1699,22 +1708,15 @@ tree\n copy_to_permanent (t)\n      tree t;\n {\n-  register struct obstack *ambient_obstack = current_obstack;\n-  register struct obstack *ambient_saveable_obstack = saveable_obstack;\n-  register struct obstack *ambient_expression_obstack = expression_obstack;\n-\n   if (t == NULL_TREE || TREE_PERMANENT (t))\n     return t;\n \n-  saveable_obstack = &permanent_obstack;\n-  current_obstack = saveable_obstack;\n-  expression_obstack = saveable_obstack;\n+  push_obstacks_nochange ();\n+  end_temporary_allocation ();\n \n   t = mapcar (t, perm_manip);\n \n-  current_obstack = ambient_obstack;\n-  saveable_obstack = ambient_saveable_obstack;\n-  expression_obstack = ambient_expression_obstack;\n+  pop_obstacks ();\n \n   return t;\n }"}]}