{"sha": "cd123354c511316c020bf7ff7e4527989b440223", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2QxMjMzNTRjNTExMzE2YzAyMGJmN2ZmN2U0NTI3OTg5YjQ0MDIyMw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-01-03T07:20:04Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-01-03T07:20:04Z"}, "message": "re PR middle-end/78901 (ICE: verify_gimple failed (error: statement marked for throw in middle of block))\n\n\tPR middle-end/78901\n\t* gimple-ssa-sprintf.c (try_substitute_return_value): Don't change\n\tpossibly throwing calls.\n\n\t* g++.dg/opt/pr78901.C: New test.\n\nFrom-SVN: r244013", "tree": {"sha": "4fa7ba8f61eb91be1857c52eae3cadc7f87666c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4fa7ba8f61eb91be1857c52eae3cadc7f87666c4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cd123354c511316c020bf7ff7e4527989b440223", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd123354c511316c020bf7ff7e4527989b440223", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd123354c511316c020bf7ff7e4527989b440223", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd123354c511316c020bf7ff7e4527989b440223/comments", "author": null, "committer": null, "parents": [{"sha": "d003cf5ef683191902c19cad6cd3d7ddf957dcde", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d003cf5ef683191902c19cad6cd3d7ddf957dcde", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d003cf5ef683191902c19cad6cd3d7ddf957dcde"}], "stats": {"total": 66, "additions": 49, "deletions": 17}, "files": [{"sha": "7e1b2df89183b7ffd30c8a5a407b2d7184251aaf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd123354c511316c020bf7ff7e4527989b440223/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd123354c511316c020bf7ff7e4527989b440223/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cd123354c511316c020bf7ff7e4527989b440223", "patch": "@@ -1,5 +1,9 @@\n 2017-01-03  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR middle-end/78901\n+\t* gimple-ssa-sprintf.c (try_substitute_return_value): Don't change\n+\tpossibly throwing calls.\n+\n \t* genmatch.c (dt_node::gen_kids_1): If generic_exprs include SSA_NAME\n \tand exprs_len || fns_len, emit the code for SSA_NAME next to the exprs\n \tand fns handling, rather than in a separate case SSA_NAME."}, {"sha": "ecd2267ae93fbe1ad92847eabf81584301d3b955", "filename": "gcc/gimple-ssa-sprintf.c", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd123354c511316c020bf7ff7e4527989b440223/gcc%2Fgimple-ssa-sprintf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd123354c511316c020bf7ff7e4527989b440223/gcc%2Fgimple-ssa-sprintf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-ssa-sprintf.c?ref=cd123354c511316c020bf7ff7e4527989b440223", "patch": "@@ -2696,9 +2696,15 @@ try_substitute_return_value (gimple_stmt_iterator *gsi,\n      the output overflows the destination object (but leave it enabled\n      when the function is bounded because then the behavior is well-\n      defined).  */\n-  if (lhs && res.bounded && res.under4k\n+  if (lhs\n+      && res.bounded\n+      && res.under4k\n       && (info.bounded || res.number_chars <= info.objsize)\n-      && res.number_chars - 1 <= target_int_max ())\n+      && res.number_chars - 1 <= target_int_max ()\n+      /* Not prepared to handle possibly throwing calls here; they shouldn't\n+\t appear in non-artificial testcases, except when the __*_chk routines\n+\t are badly declared.  */\n+      && !stmt_ends_bb_p (info.callstmt))\n     {\n       tree cst = build_int_cst (integer_type_node, res.number_chars - 1);\n "}, {"sha": "bdaa2fe5d6874fcfa4f3d631644911973b069773", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 19, "deletions": 15, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd123354c511316c020bf7ff7e4527989b440223/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd123354c511316c020bf7ff7e4527989b440223/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cd123354c511316c020bf7ff7e4527989b440223", "patch": "@@ -1,20 +1,24 @@\n+2017-01-03  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/78901\n+\t* g++.dg/opt/pr78901.C: New test.\n+\n 2017-01-03  Janne Blomqvist  <jb@gcc.gnu.org>\n \n-        PR fortran/78534\n-        PR fortran/66310\n-        * gfortran.dg/dependency_49.f90: Change scan-tree-dump-times\n-          due to gfc_trans_string_copy change to avoid\n-          -Wstringop-overflow.\n-        * gfortran.dg/repeat_4.f90: Use integers of kind C_SIZE_T.\n-        * gfortran.dg/repeat_7.f90: New test for PR 66310.\n-        * gfortran.dg/scan_2.f90: Handle potential cast in assignment.\n-        * gfortran.dg/string_1.f90: Limit to ilp32 targets.\n-        * gfortran.dg/string_1_lp64.f90: New test.\n-        * gfortran.dg/string_3.f90: Limit to ilp32 targets.\n-        * gfortran.dg/string_3_lp64.f90: New test.\n-        * gfortran.dg/transfer_intrinsic_1.f90: Change\n-          scan-tree-dump-times due to gfc_trans_string_copy change to\n-          avoid -Wstringop-overflow.\n+\tPR fortran/78534\n+\tPR fortran/66310\n+\t* gfortran.dg/dependency_49.f90: Change scan-tree-dump-times\n+\tdue to gfc_trans_string_copy change to avoid -Wstringop-overflow.\n+\t* gfortran.dg/repeat_4.f90: Use integers of kind C_SIZE_T.\n+\t* gfortran.dg/repeat_7.f90: New test for PR 66310.\n+\t* gfortran.dg/scan_2.f90: Handle potential cast in assignment.\n+\t* gfortran.dg/string_1.f90: Limit to ilp32 targets.\n+\t* gfortran.dg/string_1_lp64.f90: New test.\n+\t* gfortran.dg/string_3.f90: Limit to ilp32 targets.\n+\t* gfortran.dg/string_3_lp64.f90: New test.\n+\t* gfortran.dg/transfer_intrinsic_1.f90: Change\n+\tscan-tree-dump-times due to gfc_trans_string_copy change to\n+\tavoid -Wstringop-overflow.\n \n 2017-01-02  Uros Bizjak  <ubizjak@gmail.com>\n "}, {"sha": "932462fd03b4635a11db0ce89cb3a43287e2391a", "filename": "gcc/testsuite/g++.dg/opt/pr78901.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd123354c511316c020bf7ff7e4527989b440223/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr78901.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd123354c511316c020bf7ff7e4527989b440223/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr78901.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr78901.C?ref=cd123354c511316c020bf7ff7e4527989b440223", "patch": "@@ -0,0 +1,18 @@\n+// PR middle-end/78901\n+// { dg-do compile }\n+// { dg-options \"-O2 -Wno-stringop-overflow\" }\n+\n+extern \"C\" int __snprintf_chk (char *, __SIZE_TYPE__, int, __SIZE_TYPE__, const char *, ...);\n+\n+int\n+foo (char *c)\n+{\n+  try\n+    {\n+      return __snprintf_chk (c, 64, 0, 32, \"%s\", \"abcdefghijklmnopq\");\n+    }\n+  catch (...)\n+    {\n+      return -1;\n+    }\n+}"}]}