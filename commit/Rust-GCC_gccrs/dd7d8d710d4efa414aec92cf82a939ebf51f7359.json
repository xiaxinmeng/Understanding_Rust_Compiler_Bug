{"sha": "dd7d8d710d4efa414aec92cf82a939ebf51f7359", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGQ3ZDhkNzEwZDRlZmE0MTRhZWM5MmNmODJhOTM5ZWJmNTFmNzM1OQ==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@codesourcery.com", "date": "2006-01-17T15:43:30Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2006-01-17T15:43:30Z"}, "message": "name-lookup.c (lookup_namespace_name): Remove.\n\n\t* name-lookup.c (lookup_namespace_name): Remove.\n\t* name-lookup.h: Remove the prototype for\n\tlookup_namespace_name.\n\nFrom-SVN: r109821", "tree": {"sha": "74249027425a05d4e072007fdacc7b47ddde3629", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/74249027425a05d4e072007fdacc7b47ddde3629"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dd7d8d710d4efa414aec92cf82a939ebf51f7359", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd7d8d710d4efa414aec92cf82a939ebf51f7359", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd7d8d710d4efa414aec92cf82a939ebf51f7359", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd7d8d710d4efa414aec92cf82a939ebf51f7359/comments", "author": null, "committer": null, "parents": [{"sha": "84af16a69c896a55c013f09edd756438dc990bb6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84af16a69c896a55c013f09edd756438dc990bb6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84af16a69c896a55c013f09edd756438dc990bb6"}], "stats": {"total": 85, "additions": 6, "deletions": 79}, "files": [{"sha": "1f26299ee035823758f8dd774398f28f1ba4d46b", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd7d8d710d4efa414aec92cf82a939ebf51f7359/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd7d8d710d4efa414aec92cf82a939ebf51f7359/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=dd7d8d710d4efa414aec92cf82a939ebf51f7359", "patch": "@@ -1,3 +1,9 @@\n+2006-01-17  Kazu Hirata  <kazu@codesourcery.com>\n+\n+\t* name-lookup.c (lookup_namespace_name): Remove.\n+\t* name-lookup.h: Remove the prototype for\n+\tlookup_namespace_name.\n+\n 2006-01-17  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c/25682"}, {"sha": "4a6c627a72806ab02f13e7b23ab477e3aa7c99aa", "filename": "gcc/cp/name-lookup.c", "status": "modified", "additions": 0, "deletions": 78, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd7d8d710d4efa414aec92cf82a939ebf51f7359/gcc%2Fcp%2Fname-lookup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd7d8d710d4efa414aec92cf82a939ebf51f7359/gcc%2Fcp%2Fname-lookup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fname-lookup.c?ref=dd7d8d710d4efa414aec92cf82a939ebf51f7359", "patch": "@@ -3521,84 +3521,6 @@ remove_hidden_names (tree fns)\n   return fns;\n }\n \n-/* Look up NAME in the NAMESPACE.  */\n-\n-tree\n-lookup_namespace_name (tree namespace, tree name)\n-{\n-  tree val;\n-  tree template_id = NULL_TREE;\n-  struct scope_binding binding = EMPTY_SCOPE_BINDING;\n-\n-  timevar_push (TV_NAME_LOOKUP);\n-  gcc_assert (TREE_CODE (namespace) == NAMESPACE_DECL);\n-\n-  if (TREE_CODE (name) == NAMESPACE_DECL)\n-    /* This happens for A::B<int> when B is a namespace.  */\n-    POP_TIMEVAR_AND_RETURN (TV_NAME_LOOKUP, name);\n-  else if (TREE_CODE (name) == TEMPLATE_DECL)\n-    {\n-      /* This happens for A::B where B is a template, and there are no\n-\t template arguments.  */\n-      error (\"invalid use of %qD\", name);\n-      POP_TIMEVAR_AND_RETURN (TV_NAME_LOOKUP, error_mark_node);\n-    }\n-\n-  namespace = ORIGINAL_NAMESPACE (namespace);\n-\n-  if (TREE_CODE (name) == TEMPLATE_ID_EXPR)\n-    {\n-      template_id = name;\n-      name = TREE_OPERAND (name, 0);\n-      if (TREE_CODE (name) == OVERLOAD)\n-\tname = DECL_NAME (OVL_CURRENT (name));\n-      else if (DECL_P (name))\n-\tname = DECL_NAME (name);\n-    }\n-\n-  gcc_assert (TREE_CODE (name) == IDENTIFIER_NODE);\n-\n-  if (!qualified_lookup_using_namespace (name, namespace, &binding, 0))\n-    POP_TIMEVAR_AND_RETURN (TV_NAME_LOOKUP, error_mark_node);\n-\n-  if (binding.value)\n-    {\n-      val = binding.value;\n-\n-      if (template_id)\n-\t{\n-\t  if (DECL_CLASS_TEMPLATE_P (val))\n-\t    val = lookup_template_class (val,\n-\t\t\t\t\t TREE_OPERAND (template_id, 1),\n-\t\t\t\t\t /*in_decl=*/NULL_TREE,\n-\t\t\t\t\t /*context=*/NULL_TREE,\n-\t\t\t\t\t /*entering_scope=*/0,\n-\t\t\t\t\t tf_error | tf_warning);\n-\t  else if (DECL_FUNCTION_TEMPLATE_P (val)\n-\t\t   || TREE_CODE (val) == OVERLOAD)\n-\t    val = lookup_template_function (val,\n-\t\t\t\t\t    TREE_OPERAND (template_id, 1));\n-\t  else\n-\t    {\n-\t      error (\"%<%D::%D%> is not a template\", namespace, name);\n-\t      POP_TIMEVAR_AND_RETURN (TV_NAME_LOOKUP, error_mark_node);\n-\t    }\n-\t}\n-\n-      /* If we have a single function from a using decl, pull it out.  */\n-      if (TREE_CODE (val) == OVERLOAD && ! really_overloaded_fn (val))\n-\tval = OVL_FUNCTION (val);\n-\n-      /* Ignore built-in functions and friends that haven't been declared\n-\t yet.  */\n-      if (!val || !hidden_name_p (val))\n-\tPOP_TIMEVAR_AND_RETURN (TV_NAME_LOOKUP, val);\n-    }\n-\n-  error (\"%qD undeclared in namespace %qD\", name, namespace);\n-  POP_TIMEVAR_AND_RETURN (TV_NAME_LOOKUP, error_mark_node);\n-}\n-\n /* Select the right _DECL from multiple choices.  */\n \n static tree"}, {"sha": "12cb697f32b4a5562588376bf6ccb8a31908353c", "filename": "gcc/cp/name-lookup.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd7d8d710d4efa414aec92cf82a939ebf51f7359/gcc%2Fcp%2Fname-lookup.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd7d8d710d4efa414aec92cf82a939ebf51f7359/gcc%2Fcp%2Fname-lookup.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fname-lookup.h?ref=dd7d8d710d4efa414aec92cf82a939ebf51f7359", "patch": "@@ -319,7 +319,6 @@ extern tree namespace_binding (tree, tree);\n extern void set_namespace_binding (tree, tree, tree);\n extern bool hidden_name_p (tree);\n extern tree remove_hidden_names (tree);\n-extern tree lookup_namespace_name (tree, tree);\n extern tree lookup_qualified_name (tree, tree, bool, bool);\n extern tree lookup_name_nonclass (tree);\n extern tree lookup_function_nonclass (tree, tree, bool);"}]}