{"sha": "56af35de3d11960100996b96034dc9ccd7c75ca3", "node_id": "C_kwDOANBUbNoAKDU2YWYzNWRlM2QxMTk2MDEwMDk5NmI5NjAzNGRjOWNjZDdjNzVjYTM", "commit": {"author": {"name": "Andrew MacLeod", "email": "amacleod@redhat.com", "date": "2021-11-09T14:29:23Z"}, "committer": {"name": "Andrew MacLeod", "email": "amacleod@redhat.com", "date": "2021-11-09T18:27:42Z"}, "message": "Keep x_range_query NULL for global ranges.\n\nInstead of x_range_query always pointing to an object, have it default to\nNULL and return a pointer to the global query in that case.\n\n\t* function.c (allocate_struct_function): Don't set x_range_query.\n\t* function.h (get_range_query): Move to value-query.h.\n\t* gimple-range.cc (enable_ranger): Check that query is currently NULL.\n\t(disable_ranger): Clear function current query field.\n\t* value-query.cc (get_global_range_query): Relocate to:\n\t* value-query.h (get_global_range_query): Here and inline.\n\t(get_range_query): Relocate here from function.h.", "tree": {"sha": "cf373ec2c094fa6ef46252f65481e55c65181d27", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cf373ec2c094fa6ef46252f65481e55c65181d27"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/56af35de3d11960100996b96034dc9ccd7c75ca3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56af35de3d11960100996b96034dc9ccd7c75ca3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/56af35de3d11960100996b96034dc9ccd7c75ca3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56af35de3d11960100996b96034dc9ccd7c75ca3/comments", "author": null, "committer": null, "parents": [{"sha": "53080c5b4ce3742d20a0aa4643203215f20aadf6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53080c5b4ce3742d20a0aa4643203215f20aadf6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/53080c5b4ce3742d20a0aa4643203215f20aadf6"}], "stats": {"total": 42, "additions": 19, "deletions": 23}, "files": [{"sha": "61b3bd036b877763133e2abdd5f6ef157085765c", "filename": "gcc/function.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56af35de3d11960100996b96034dc9ccd7c75ca3/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56af35de3d11960100996b96034dc9ccd7c75ca3/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=56af35de3d11960100996b96034dc9ccd7c75ca3", "patch": "@@ -4873,8 +4873,6 @@ allocate_struct_function (tree fndecl, bool abstract_p)\n      binding annotations among them.  */\n   cfun->debug_nonbind_markers = lang_hooks.emits_begin_stmt\n     && MAY_HAVE_DEBUG_MARKER_STMTS;\n-\n-  cfun->x_range_query = &global_ranges;\n }\n \n /* This is like allocate_struct_function, but pushes a new cfun for FNDECL"}, {"sha": "899430833cefa8189e2179e8ad9a03490e0aea64", "filename": "gcc/function.h", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56af35de3d11960100996b96034dc9ccd7c75ca3/gcc%2Ffunction.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56af35de3d11960100996b96034dc9ccd7c75ca3/gcc%2Ffunction.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.h?ref=56af35de3d11960100996b96034dc9ccd7c75ca3", "patch": "@@ -719,15 +719,4 @@ extern const char *current_function_name (void);\n \n extern void used_types_insert (tree);\n \n-/* Returns the currently active range access class.  When there is no active\n-   range class, global ranges are used.  Never returns null.  */\n-\n-ATTRIBUTE_RETURNS_NONNULL inline range_query *\n-get_range_query (const struct function *fun)\n-{\n-  return fun->x_range_query;\n-}\n-\n-extern range_query *get_global_range_query ();\n-\n #endif  /* GCC_FUNCTION_H */"}, {"sha": "a2b68b2bc80fa1359bc9d324da52c66c6aac8da0", "filename": "gcc/gimple-range.cc", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56af35de3d11960100996b96034dc9ccd7c75ca3/gcc%2Fgimple-range.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56af35de3d11960100996b96034dc9ccd7c75ca3/gcc%2Fgimple-range.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-range.cc?ref=56af35de3d11960100996b96034dc9ccd7c75ca3", "patch": "@@ -467,6 +467,7 @@ enable_ranger (struct function *fun)\n {\n   gimple_ranger *r;\n \n+  gcc_checking_assert (!fun->x_range_query);\n   r = new gimple_ranger;\n   fun->x_range_query = r;\n \n@@ -479,7 +480,7 @@ enable_ranger (struct function *fun)\n void\n disable_ranger (struct function *fun)\n {\n+  gcc_checking_assert (fun->x_range_query);\n   delete fun->x_range_query;\n-\n-  fun->x_range_query = &global_ranges;\n+  fun->x_range_query = NULL;\n }"}, {"sha": "b7d9e6653b1173aca53ecef941c0533c10ec5db1", "filename": "gcc/value-query.cc", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56af35de3d11960100996b96034dc9ccd7c75ca3/gcc%2Fvalue-query.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56af35de3d11960100996b96034dc9ccd7c75ca3/gcc%2Fvalue-query.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvalue-query.cc?ref=56af35de3d11960100996b96034dc9ccd7c75ca3", "patch": "@@ -435,14 +435,6 @@ gimple_range_global (tree name)\n \n global_range_query global_ranges;\n \n-// Like get_range_query, but for accessing global ranges.\n-\n-range_query *\n-get_global_range_query ()\n-{\n-  return &global_ranges;\n-}\n-\n bool\n global_range_query::range_of_expr (irange &r, tree expr, gimple *stmt)\n {"}, {"sha": "38e23bb357b69586ae39dbc55760b4a94f7354ae", "filename": "gcc/value-query.h", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56af35de3d11960100996b96034dc9ccd7c75ca3/gcc%2Fvalue-query.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56af35de3d11960100996b96034dc9ccd7c75ca3/gcc%2Fvalue-query.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvalue-query.h?ref=56af35de3d11960100996b96034dc9ccd7c75ca3", "patch": "@@ -127,6 +127,22 @@ class global_range_query : public range_query\n };\n \n extern global_range_query global_ranges;\n+\n+inline range_query *\n+get_global_range_query ()\n+{\n+  return &global_ranges;\n+}\n+\n+/* Returns the currently active range access class.  When there is no active\n+   range class, global ranges are used.  Never returns null.  */\n+\n+ATTRIBUTE_RETURNS_NONNULL inline range_query *\n+get_range_query (const struct function *fun)\n+{\n+  return fun->x_range_query ? fun->x_range_query : &global_ranges;\n+}\n+\n extern value_range gimple_range_global (tree name);\n extern bool update_global_range (irange &r, tree name);\n "}]}