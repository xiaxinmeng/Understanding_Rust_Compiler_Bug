{"sha": "26c24398d3615aef43e599f87911c1ecc3bd2841", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjZjMjQzOThkMzYxNWFlZjQzZTU5OWY4NzkxMWMxZWNjM2JkMjg0MQ==", "commit": {"author": {"name": "Bill Schmidt", "email": "wschmidt@linux.ibm.com", "date": "2020-08-28T16:47:01Z"}, "committer": {"name": "Bill Schmidt", "email": "wschmidt@linux.ibm.com", "date": "2020-08-28T16:47:01Z"}, "message": "rs6000: r12 copy cleanup\n\nRemove unnecessary tests before copying function address to r12.\n\n2020-08-28  Bill Schmidt  <wschmidt@linux.ibm.com>\n\ngcc/\n\t* config/rs6000/rs6000.c (rs6000_call_aix): Remove test for r12.\n\t(rs6000_sibcall_aix): Likewise.", "tree": {"sha": "55e19d5b3ff6a3f123a536337c30f41a57d98cc4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/55e19d5b3ff6a3f123a536337c30f41a57d98cc4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/26c24398d3615aef43e599f87911c1ecc3bd2841", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26c24398d3615aef43e599f87911c1ecc3bd2841", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26c24398d3615aef43e599f87911c1ecc3bd2841", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26c24398d3615aef43e599f87911c1ecc3bd2841/comments", "author": null, "committer": null, "parents": [{"sha": "1c1e41b06509c60c054792839618fad094ba17d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c1e41b06509c60c054792839618fad094ba17d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c1e41b06509c60c054792839618fad094ba17d1"}], "stats": {"total": 6, "additions": 2, "deletions": 4}, "files": [{"sha": "ca5b71ecdd3b0066791133244c0cbcb8ca3b0218", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26c24398d3615aef43e599f87911c1ecc3bd2841/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26c24398d3615aef43e599f87911c1ecc3bd2841/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=26c24398d3615aef43e599f87911c1ecc3bd2841", "patch": "@@ -24725,8 +24725,7 @@ rs6000_call_aix (rtx value, rtx func_desc, rtx tlsarg, rtx cookie)\n \t  /* A function pointer in the ELFv2 ABI is just a plain address, but\n \t     the ABI requires it to be loaded into r12 before the call.  */\n \t  func_addr = gen_rtx_REG (Pmode, 12);\n-\t  if (!rtx_equal_p (func_addr, func))\n-\t    emit_move_insn (func_addr, func);\n+\t  emit_move_insn (func_addr, func);\n \t  abi_reg = func_addr;\n \t  /* Indirect calls via CTR are strongly preferred over indirect\n \t     calls via LR, so move the address there.  Needed to mark\n@@ -24846,8 +24845,7 @@ rs6000_sibcall_aix (rtx value, rtx func_desc, rtx tlsarg, rtx cookie)\n   if (GET_CODE (func_desc) != SYMBOL_REF && DEFAULT_ABI == ABI_ELFv2)\n     {\n       r12 = gen_rtx_REG (Pmode, 12);\n-      if (!rtx_equal_p (r12, func_desc))\n-\temit_move_insn (r12, func_desc);\n+      emit_move_insn (r12, func_desc);\n       func_addr = gen_rtx_REG (Pmode, CTR_REGNO);\n       emit_move_insn (func_addr, r12);\n     }"}]}