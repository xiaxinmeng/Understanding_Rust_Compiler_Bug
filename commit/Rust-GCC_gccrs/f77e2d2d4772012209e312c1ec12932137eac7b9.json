{"sha": "f77e2d2d4772012209e312c1ec12932137eac7b9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjc3ZTJkMmQ0NzcyMDEyMjA5ZTMxMmMxZWMxMjkzMjEzN2VhYzdiOQ==", "commit": {"author": {"name": "Jan-Benedict Glaw", "email": "jbglaw@lug-owl.de", "date": "2013-09-16T09:03:33Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2013-09-16T09:03:33Z"}, "message": "alpha.c: Include tree-ssa.h.\n\n\t* config/alpha.c: Include tree-ssa.h.\n\nFrom-SVN: r202621", "tree": {"sha": "15bf6a9ac0b5497d8c79d267b86242e5ac87c536", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/15bf6a9ac0b5497d8c79d267b86242e5ac87c536"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f77e2d2d4772012209e312c1ec12932137eac7b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f77e2d2d4772012209e312c1ec12932137eac7b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f77e2d2d4772012209e312c1ec12932137eac7b9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f77e2d2d4772012209e312c1ec12932137eac7b9/comments", "author": {"login": "jbglaw", "id": 7965297, "node_id": "MDQ6VXNlcjc5NjUyOTc=", "avatar_url": "https://avatars.githubusercontent.com/u/7965297?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbglaw", "html_url": "https://github.com/jbglaw", "followers_url": "https://api.github.com/users/jbglaw/followers", "following_url": "https://api.github.com/users/jbglaw/following{/other_user}", "gists_url": "https://api.github.com/users/jbglaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbglaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbglaw/subscriptions", "organizations_url": "https://api.github.com/users/jbglaw/orgs", "repos_url": "https://api.github.com/users/jbglaw/repos", "events_url": "https://api.github.com/users/jbglaw/events{/privacy}", "received_events_url": "https://api.github.com/users/jbglaw/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "36875e8f6d06fa647a540264befd109479cdea43", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36875e8f6d06fa647a540264befd109479cdea43", "html_url": "https://github.com/Rust-GCC/gccrs/commit/36875e8f6d06fa647a540264befd109479cdea43"}], "stats": {"total": 41, "additions": 24, "deletions": 17}, "files": [{"sha": "b0d43498a38ba5cb0f474b373f838c3b841fb32b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 23, "deletions": 17, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f77e2d2d4772012209e312c1ec12932137eac7b9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f77e2d2d4772012209e312c1ec12932137eac7b9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f77e2d2d4772012209e312c1ec12932137eac7b9", "patch": "@@ -1,3 +1,7 @@\n+2013-09-16  Jan-Benedict Glaw  <jbglaw@lug-owl.de>\n+\n+\t* config/alpha.c: Include tree-ssa.h.\n+\n 2013-09-16  Richard Biener  <rguenther@suse.de>\n \n \t* tree-loop-distribution.c (enum rdg_dep_type): Add control_dd.\n@@ -35,7 +39,8 @@\n \n \tPR target/48094\n \t* config/darwin.c (darwin_objc2_section): Note if ObjC Metadata is\n-\tseen.  (darwin_objc1_section): Likewise.\n+\tseen.\n+\t(darwin_objc1_section): Likewise.\n \t(darwin_file_end): Emit Image Info section when required.\n \n 2013-09-14  Jan Hubicka  <jh@suse.cz>\n@@ -54,13 +59,13 @@\n 2013-09-14  Iain Sandoe  <iain@codesourcery.com>\n \n \tPR target/58269\n-\tconfig/i386/i386.c (ix86_function_arg_regno_p): Make Darwin use the\n+\t* config/i386/i386.c (ix86_function_arg_regno_p): Make Darwin use the\n \txmm register set described in the psABI.\n \n 2013-09-13  Evgeny Gavrin <e.gavrin@samsung.com>\n \n-        * dwarf2out.c (should_emit_struct_debug): Add check\n-        for type_decl variable is not NULL.\n+\t* dwarf2out.c (should_emit_struct_debug): Add check\n+\tfor type_decl variable is not NULL.\n \n 2013-09-13  Jacek Caban  <jacek@codeweavers.com>\n \n@@ -252,12 +257,13 @@\n \ttree-flow-inline.h.\n \t* tree-flow.h (_edge_var_map, edge_var_map_vector): Move to tree-ssa.h.\n \tMove prototypes belonging to tree-ssa.c.\n-\t* tree-flow-inline.h (redirect_edge_var_map_def, \n+\t* tree-flow-inline.h (redirect_edge_var_map_def,\n \tredirect_edge_var_map_result, redirect_edge_var_map_location): Move to\n \ttree-ssa.h.\n \t* gimple.h: Adjust prototypes.\n-\t* tree-ssa.c (useless_type_conversion_p, types_compatible_p): Move to...\n-\t* gimple.c (useless_type_conversion_p, types_compatible_p):  Here.\n+\t* tree-ssa.c (useless_type_conversion_p, types_compatible_p): Move\n+\tto...\n+\t* gimple.c (useless_type_conversion_p, types_compatible_p): Here.\n \t* tree.h: Move prototype to tree-ssa.h.\n \t* gengtype.c (open_base_files): Replace tree-flow.h with tree-ssa.h.\n \t* Makefile.in: (TREE_SSA_H, TREE_FLOW_H): Adjust dependencies.\n@@ -267,11 +273,12 @@\n \tggc-page.c, gimple-fold.c, gimple-iterator.c, gimple-low.c,\n \tgimple-pretty-print.c, gimple-ssa-strength-reduction.c,\n \tgimple-streamer-in.c, gimple-streamer-out.c, gimple.c, gimplify.c,\n-\tgraphite-blocking.c, graphite-clast-to-gimple.c, graphite-dependences.c,\n-\tgraphite-interchange.c, graphite-optimize-isl.c, graphite-poly.c,\n-\tgraphite-scop-detection.c, graphite-sese-to-poly.c, graphite.c,\n-\tipa-cp.c, ipa-inline-analysis.c, ipa-inline-transform.c, ipa-inline.c,\n-\tipa-prop.c, ipa-pure-const.c, ipa-reference.c, ipa-split.c, ipa-utils.c,\n+\tgraphite-blocking.c, graphite-clast-to-gimple.c,\n+\tgraphite-dependences.c, graphite-interchange.c,\n+\tgraphite-optimize-isl.c, graphite-poly.c, graphite-scop-detection.c,\n+\tgraphite-sese-to-poly.c, graphite.c, ipa-cp.c, ipa-inline-analysis.c,\n+\tipa-inline-transform.c, ipa-inline.c, ipa-prop.c, ipa-pure-const.c,\n+\tipa-reference.c, ipa-split.c, ipa-utils.c,\n \tloop-init.c, lto-cgraph.c, lto-section-in.c, lto-section-out.c,\n \tlto-streamer-in.c, lto-streamer-out.c, lto-streamer.c, omp-low.c,\n \tpasses.c, predict.c, print-tree.c, profile.c, sese.c, targhooks.c,\n@@ -563,12 +570,11 @@\n \n \t* lra.c (lra): Clear lra_optional_reload_pseudos before every\n \tconstraint pass.\n-\t* lra-constraints.c (curr_insn_transform): Switch on optional\n-\treloads.  Check destination too to check move insn.\n+\t* lra-constraints.c (curr_insn_transform): Switch on optional reloads.\n+\tCheck destination too to check move insn.\n \t(undo_optional_reloads): Add check that the original peudo did not\n-\tchanged its allocation and the optional reload was inherited on\n-\tlast inheritance pass.  Break loop after deciding to keep optional\n-\treload.\n+\tchanged its allocation and the optional reload was inherited on last\n+\tinheritance pass.  Break loop after deciding to keep optional reload.\n \t(lra_undo_inheritance): Add check that inherited pseudo still in\n \tmemory.\n "}, {"sha": "3759205c07ba38e5a1169d3e39597680d0a1740d", "filename": "gcc/config/alpha/alpha.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f77e2d2d4772012209e312c1ec12932137eac7b9/gcc%2Fconfig%2Falpha%2Falpha.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f77e2d2d4772012209e312c1ec12932137eac7b9/gcc%2Fconfig%2Falpha%2Falpha.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.c?ref=f77e2d2d4772012209e312c1ec12932137eac7b9", "patch": "@@ -50,6 +50,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"splay-tree.h\"\n #include \"gimple.h\"\n #include \"tree-flow.h\"\n+#include \"tree-ssa.h\"\n #include \"tree-stdarg.h\"\n #include \"tm-constrs.h\"\n #include \"df.h\""}]}