{"sha": "8d2adc244b117d1560a75caf39b0698eeb6c96ef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGQyYWRjMjQ0YjExN2QxNTYwYTc1Y2FmMzliMDY5OGVlYjZjOTZlZg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2010-06-22T18:21:25Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2010-06-22T18:21:25Z"}, "message": "cgraphunit.c (cgraph_redirect_edge_call_stmt_to_callee): Chain the new statement and adjust VDEF only if necessary.\n\n\t* cgraphunit.c (cgraph_redirect_edge_call_stmt_to_callee): Chain the\n\tnew statement and adjust VDEF only if necessary.  Remove superfluous\n\tcall to maybe_clean_or_replace_eh_stmt.\n\t* gimple.c (gimple_call_copy_skip_args): Use gimple_call_copy_flags to\n\tcopy the flags.\n\t* gimple-iterator.c (gsi_replace): Clear BB of old statement here...\n\t* tree-inline.c (copy_bb): ...and not there.\n\nFrom-SVN: r161221", "tree": {"sha": "e85874c9f8f854e3483015176601bba12e52e10c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e85874c9f8f854e3483015176601bba12e52e10c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8d2adc244b117d1560a75caf39b0698eeb6c96ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d2adc244b117d1560a75caf39b0698eeb6c96ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d2adc244b117d1560a75caf39b0698eeb6c96ef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d2adc244b117d1560a75caf39b0698eeb6c96ef/comments", "author": null, "committer": null, "parents": [{"sha": "ca3e07b4edd28f5c643dd4a601d51db135fde67b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca3e07b4edd28f5c643dd4a601d51db135fde67b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca3e07b4edd28f5c643dd4a601d51db135fde67b"}], "stats": {"total": 69, "additions": 41, "deletions": 28}, "files": [{"sha": "573ce95bfa232d21e322ff6034aa68235de79aeb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 17, "deletions": 5, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d2adc244b117d1560a75caf39b0698eeb6c96ef/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d2adc244b117d1560a75caf39b0698eeb6c96ef/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8d2adc244b117d1560a75caf39b0698eeb6c96ef", "patch": "@@ -1,3 +1,13 @@\n+2010-06-22  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* cgraphunit.c (cgraph_redirect_edge_call_stmt_to_callee): Chain the\n+\tnew statement and adjust VDEF only if necessary.  Remove superfluous\n+\tcall to maybe_clean_or_replace_eh_stmt.\n+\t* gimple.c (gimple_call_copy_skip_args): Use gimple_call_copy_flags to\n+\tcopy the flags.\n+\t* gimple-iterator.c (gsi_replace): Clear BB of old statement here...\n+\t* tree-inline.c (copy_bb): ...and not there.\n+\n 2010-06-22  Cary Coutant  <ccoutant@google.com>\n \n \t* dwarf2out.c (is_nested_in_subprogram): New function.\n@@ -12,15 +22,17 @@\n \n 2010-06-22  Jan Hubicka  <jh@suse.cz>\n \n-\t* gimple.h (gimple_expr_code): Do checking on when gimple checking is enabled.\n+\t* gimple.h (gimple_expr_code): Do checking on when gimple checking is\n+\tenabled.\n \n 2010-06-22  Jan Hubicka  <jh@suse.cz>\n \n-\t* df-problems.c (df_rd_confluence_n, df_lr_confluence_n, df_live_confluence_n,\n-\tdf_byte_lr_confluence_n, df_md_confluence_n): Return true if something changed.\n+\t* df-problems.c (df_rd_confluence_n, df_lr_confluence_n,\n+\tdf_live_confluence_n, df_byte_lr_confluence_n, df_md_confluence_n):\n+\tReturn true if something changed.\n \t* df.h (df_confluence_function_n): Return bool.\n-\t* df-core.c (df_worklist_propagate_forward, df_worklist_propagate_backward):\n-\ttrack changes and ages.\n+\t* df-core.c (df_worklist_propagate_forward,\n+\tdf_worklist_propagate_backward): Track changes and ages.\n \t(df_worklist_dataflow_doublequeue): Use bitmap iterator for main walk;\n \ttrack ages.\n \t* dse.c (dse_confluence_n): Return always true."}, {"sha": "0a1622ee8e1ebd9d1c4e3c400e19c05194ac43bf", "filename": "gcc/cgraphunit.c", "status": "modified", "additions": 19, "deletions": 15, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d2adc244b117d1560a75caf39b0698eeb6c96ef/gcc%2Fcgraphunit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d2adc244b117d1560a75caf39b0698eeb6c96ef/gcc%2Fcgraphunit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphunit.c?ref=8d2adc244b117d1560a75caf39b0698eeb6c96ef", "patch": "@@ -2345,7 +2345,6 @@ cgraph_redirect_edge_call_stmt_to_callee (struct cgraph_edge *e)\n {\n   tree decl = gimple_call_fndecl (e->call_stmt);\n   gimple new_stmt;\n-  gimple_stmt_iterator gsi;\n #ifdef ENABLE_CHECKING\n   struct cgraph_node *node;\n #endif\n@@ -2367,29 +2366,34 @@ cgraph_redirect_edge_call_stmt_to_callee (struct cgraph_edge *e)\n \t       cgraph_node_name (e->callee), e->callee->uid);\n       print_gimple_stmt (cgraph_dump_file, e->call_stmt, 0, dump_flags);\n       if (e->callee->clone.combined_args_to_skip)\n-        {\n-          fprintf (cgraph_dump_file, \" combined args to skip: \");\n-          dump_bitmap (cgraph_dump_file, e->callee->clone.combined_args_to_skip);\n+\t{\n+\t  fprintf (cgraph_dump_file, \" combined args to skip: \");\n+\t  dump_bitmap (cgraph_dump_file,\n+\t\t       e->callee->clone.combined_args_to_skip);\n \t}\n     }\n \n   if (e->callee->clone.combined_args_to_skip)\n-    new_stmt = gimple_call_copy_skip_args (e->call_stmt,\n-\t\t\t\t       e->callee->clone.combined_args_to_skip);\n+    {\n+      gimple_stmt_iterator gsi;\n+\n+      new_stmt\n+\t= gimple_call_copy_skip_args (e->call_stmt,\n+\t\t\t\t      e->callee->clone.combined_args_to_skip);\n+\n+      if (gimple_vdef (new_stmt)\n+\t  && TREE_CODE (gimple_vdef (new_stmt)) == SSA_NAME)\n+\tSSA_NAME_DEF_STMT (gimple_vdef (new_stmt)) = new_stmt;\n+\n+      gsi = gsi_for_stmt (e->call_stmt);\n+      gsi_replace (&gsi, new_stmt, true);\n+    }\n   else\n     new_stmt = e->call_stmt;\n-  if (gimple_vdef (new_stmt)\n-      && TREE_CODE (gimple_vdef (new_stmt)) == SSA_NAME)\n-    SSA_NAME_DEF_STMT (gimple_vdef (new_stmt)) = new_stmt;\n-  gimple_call_set_fndecl (new_stmt, e->callee->decl);\n \n-  gsi = gsi_for_stmt (e->call_stmt);\n-  gsi_replace (&gsi, new_stmt, true);\n+  gimple_call_set_fndecl (new_stmt, e->callee->decl);\n   update_stmt (new_stmt);\n \n-  /* Update EH information too, just in case.  */\n-  maybe_clean_or_replace_eh_stmt (e->call_stmt, new_stmt);\n-\n   cgraph_set_call_stmt_including_clones (e->caller, e->call_stmt, new_stmt);\n \n   if (cgraph_dump_file)"}, {"sha": "1402c0d8c399ad9d2d33b0af36b2e142c094c9c8", "filename": "gcc/gimple-iterator.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d2adc244b117d1560a75caf39b0698eeb6c96ef/gcc%2Fgimple-iterator.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d2adc244b117d1560a75caf39b0698eeb6c96ef/gcc%2Fgimple-iterator.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-iterator.c?ref=8d2adc244b117d1560a75caf39b0698eeb6c96ef", "patch": "@@ -381,8 +381,12 @@ gsi_replace (gimple_stmt_iterator *gsi, gimple stmt, bool update_eh_info)\n     maybe_clean_or_replace_eh_stmt (orig_stmt, stmt);\n \n   gimple_duplicate_stmt_histograms (cfun, stmt, cfun, orig_stmt);\n+\n+  /* Free all the data flow information for ORIG_STMT.  */\n+  gimple_set_bb (orig_stmt, NULL);\n   gimple_remove_stmt_histograms (cfun, orig_stmt);\n   delink_stmt_imm_use (orig_stmt);\n+\n   *gsi_stmt_ptr (gsi) = stmt;\n   gimple_set_modified (stmt, true);\n   update_modified_stmt (stmt);"}, {"sha": "d82a93c6c467580be0ec282d613a6d7b92cb3616", "filename": "gcc/gimple.c", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d2adc244b117d1560a75caf39b0698eeb6c96ef/gcc%2Fgimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d2adc244b117d1560a75caf39b0698eeb6c96ef/gcc%2Fgimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple.c?ref=8d2adc244b117d1560a75caf39b0698eeb6c96ef", "patch": "@@ -3085,14 +3085,8 @@ gimple_call_copy_skip_args (gimple stmt, bitmap args_to_skip)\n   gimple_set_block (new_stmt, gimple_block (stmt));\n   if (gimple_has_location (stmt))\n     gimple_set_location (new_stmt, gimple_location (stmt));\n-\n-  /* Carry all the flags to the new GIMPLE_CALL.  */\n+  gimple_call_copy_flags (new_stmt, stmt);\n   gimple_call_set_chain (new_stmt, gimple_call_chain (stmt));\n-  gimple_call_set_tail (new_stmt, gimple_call_tail_p (stmt));\n-  gimple_call_set_cannot_inline (new_stmt, gimple_call_cannot_inline_p (stmt));\n-  gimple_call_set_return_slot_opt (new_stmt, gimple_call_return_slot_opt_p (stmt));\n-  gimple_call_set_from_thunk (new_stmt, gimple_call_from_thunk_p (stmt));\n-  gimple_call_set_va_arg_pack (new_stmt, gimple_call_va_arg_pack_p (stmt));\n \n   gimple_set_modified (new_stmt, true);\n "}, {"sha": "0b6a7d2e2eeae0421ac383509a28f1fe3bac515f", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d2adc244b117d1560a75caf39b0698eeb6c96ef/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d2adc244b117d1560a75caf39b0698eeb6c96ef/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=8d2adc244b117d1560a75caf39b0698eeb6c96ef", "patch": "@@ -1604,7 +1604,6 @@ copy_bb (copy_body_data *id, basic_block bb, int frequency_scale,\n \t      gimple_call_set_lhs (new_call, gimple_call_lhs (stmt));\n \n \t      gsi_replace (&copy_gsi, new_call, false);\n-\t      gimple_set_bb (stmt, NULL);\n \t      stmt = new_call;\n \t    }\n \t  else if (is_gimple_call (stmt)"}]}