{"sha": "aafaa3254ec6fc3d5e3a15a40185950d3af04432", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWFmYWEzMjU0ZWM2ZmMzZDVlM2ExNWE0MDE4NTk1MGQzYWYwNDQzMg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2018-03-26T13:09:10Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2018-03-26T13:09:10Z"}, "message": "Add workaround to std::variant for Clang bug 31852\n\n\t* include/std/variant (__get): Qualify calls to avoid ADL.\n\t(__select_index): Adjust whitespace.\n\t(variant): Add using-declaration to workaround Clang bug.\n\nFrom-SVN: r258854", "tree": {"sha": "e0689930669e5b7944916b0dea25cd2869b429b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e0689930669e5b7944916b0dea25cd2869b429b2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aafaa3254ec6fc3d5e3a15a40185950d3af04432", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aafaa3254ec6fc3d5e3a15a40185950d3af04432", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aafaa3254ec6fc3d5e3a15a40185950d3af04432", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aafaa3254ec6fc3d5e3a15a40185950d3af04432/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "46dbeb4085e4a5492579d06641d0aae25b80b465", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46dbeb4085e4a5492579d06641d0aae25b80b465", "html_url": "https://github.com/Rust-GCC/gccrs/commit/46dbeb4085e4a5492579d06641d0aae25b80b465"}], "stats": {"total": 25, "additions": 20, "deletions": 5}, "files": [{"sha": "bdd4c6b4f83421afb04e372ee1167c5ef8cb381b", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aafaa3254ec6fc3d5e3a15a40185950d3af04432/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aafaa3254ec6fc3d5e3a15a40185950d3af04432/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=aafaa3254ec6fc3d5e3a15a40185950d3af04432", "patch": "@@ -1,3 +1,9 @@\n+2018-03-26  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/std/variant (__get): Qualify calls to avoid ADL.\n+\t(__select_index): Adjust whitespace.\n+\t(variant): Add using-declaration to workaround Clang bug.\n+\n 2018-03-22  Jonathan Wakely  <jwakely@redhat.com>\n \n \tPR libstdc++/85040"}, {"sha": "e4ae6573ed48e10cfae9e99f8556b11b216eb054", "filename": "libstdc++-v3/include/std/variant", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aafaa3254ec6fc3d5e3a15a40185950d3af04432/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fvariant", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aafaa3254ec6fc3d5e3a15a40185950d3af04432/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fvariant", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fvariant?ref=aafaa3254ec6fc3d5e3a15a40185950d3af04432", "patch": "@@ -223,13 +223,17 @@ namespace __variant\n \n   template<size_t _Np, typename _Union>\n     constexpr decltype(auto) __get(in_place_index_t<_Np>, _Union&& __u)\n-    { return __get(in_place_index<_Np-1>, std::forward<_Union>(__u)._M_rest); }\n+    {\n+      return __variant::__get(in_place_index<_Np-1>,\n+\t\t\t      std::forward<_Union>(__u)._M_rest);\n+    }\n \n   // Returns the typed storage for __v.\n   template<size_t _Np, typename _Variant>\n     constexpr decltype(auto) __get(_Variant&& __v)\n     {\n-      return __get(std::in_place_index<_Np>, std::forward<_Variant>(__v)._M_u);\n+      return __variant::__get(std::in_place_index<_Np>,\n+\t\t\t      std::forward<_Variant>(__v)._M_u);\n     }\n \n   // Various functions as \"vtable\" entries, where those vtables are used by\n@@ -358,10 +362,9 @@ namespace __variant\n \n   template <typename... _Types>\n   using __select_index =\n-    typename __select_int::_Select_int_base<sizeof...(_Types)+1,\n+    typename __select_int::_Select_int_base<sizeof...(_Types) + 1,\n \t\t\t\t\t    unsigned char,\n-\t\t\t\t\t    unsigned short>\n-    ::type::value_type;\n+\t\t\t\t\t    unsigned short>::type::value_type;\n \n   template<typename... _Types>\n     struct _Variant_storage<false, _Types...>\n@@ -1304,6 +1307,12 @@ namespace __variant\n \n #undef _VARIANT_RELATION_FUNCTION_TEMPLATE\n \n+#ifdef __clang__\n+    public:\n+      using _Base::_M_u; // See https://bugs.llvm.org/show_bug.cgi?id=31852\n+    private:\n+#endif\n+\n       template<size_t _Np, typename _Vp>\n \tfriend constexpr decltype(auto) __detail::__variant::__get(_Vp&& __v);\n "}]}