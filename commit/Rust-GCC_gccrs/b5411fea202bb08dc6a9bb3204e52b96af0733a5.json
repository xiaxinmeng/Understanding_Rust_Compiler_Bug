{"sha": "b5411fea202bb08dc6a9bb3204e52b96af0733a5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjU0MTFmZWEyMDJiYjA4ZGM2YTliYjMyMDRlNTJiOTZhZjA3MzNhNQ==", "commit": {"author": {"name": "James E Wilson", "email": "wilson@specifixinc.com", "date": "2004-07-15T00:35:28Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "2004-07-15T00:35:28Z"}, "message": "Fix MIPS SPEC95 FP 146.wave5 -fprofile-generate failure.\n\nPR target/16325\n* config/mips/mips.h (STARTING_FRAME_OFFSET): When flag_profile_value\nand ! TARGET_64BIT, include REG_PARM_STACK_SPACE.\n* gcc.dg/profile-generate-1.c: New.\n\nFrom-SVN: r84727", "tree": {"sha": "58433eb9bf47575d3df4ec6a4c6a3121e37b5bcb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/58433eb9bf47575d3df4ec6a4c6a3121e37b5bcb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b5411fea202bb08dc6a9bb3204e52b96af0733a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5411fea202bb08dc6a9bb3204e52b96af0733a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5411fea202bb08dc6a9bb3204e52b96af0733a5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5411fea202bb08dc6a9bb3204e52b96af0733a5/comments", "author": null, "committer": null, "parents": [{"sha": "27f3c2ce8dee061493849fe78104c1afcbc3656c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27f3c2ce8dee061493849fe78104c1afcbc3656c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27f3c2ce8dee061493849fe78104c1afcbc3656c"}], "stats": {"total": 60, "additions": 58, "deletions": 2}, "files": [{"sha": "e9f8b71bc6206d62146775ab509603cc13c5acbd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5411fea202bb08dc6a9bb3204e52b96af0733a5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5411fea202bb08dc6a9bb3204e52b96af0733a5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b5411fea202bb08dc6a9bb3204e52b96af0733a5", "patch": "@@ -1,3 +1,9 @@\n+2004-07-14  James E Wilson  <wilson@specifixinc.com>\n+\n+\tPR target/16325\n+\t* config/mips/mips.h (STARTING_FRAME_OFFSET): When flag_profile_value\n+\tand ! TARGET_64BIT, include REG_PARM_STACK_SPACE.\n+\n 2004-07-15  Jakub Jelinek  <jakub@redhat.com>\n \n \t* expr.c (expand_assignment): Reenable bitfield += optimizations."}, {"sha": "c3c58278153de82c98b203c4d7b9d95a3c556c4d", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5411fea202bb08dc6a9bb3204e52b96af0733a5/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5411fea202bb08dc6a9bb3204e52b96af0733a5/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=b5411fea202bb08dc6a9bb3204e52b96af0733a5", "patch": "@@ -2132,9 +2132,21 @@ extern enum reg_class mips_char_to_class[256];\n #define STACK_GROWS_DOWNWARD\n \n /* The offset of the first local variable from the beginning of the frame.\n-   See compute_frame_size for details about the frame layout.  */\n+   See compute_frame_size for details about the frame layout.\n+\n+   ??? If flag_profile_values is true, and we are generating 32-bit code, then\n+   we assume that we will need 16 bytes of argument space.  This is because\n+   the value profiling code may emit calls to cmpdi2 in leaf functions.\n+   Without this hack, the local variables will start at sp+8 and the gp save\n+   area will be at sp+16, and thus they will overlap.  compute_frame_size is\n+   OK because it uses STARTING_FRAME_OFFSET to compute cprestore_size, which\n+   will end up as 24 instead of 8.  This won't be needed if profiling code is\n+   inserted before virtual register instantiation.  */\n+\n #define STARTING_FRAME_OFFSET\t\t\t\t\t\t\\\n-  (current_function_outgoing_args_size\t\t\t\t\t\\\n+  ((flag_profile_values && ! TARGET_64BIT\t\t\t\t\\\n+    ? MAX (REG_PARM_STACK_SPACE(NULL), current_function_outgoing_args_size) \\\n+    : current_function_outgoing_args_size)\t\t\t\t\\\n    + (TARGET_ABICALLS && !TARGET_NEWABI\t\t\t\t\t\\\n       ? MIPS_STACK_ALIGN (UNITS_PER_WORD) : 0))\n "}, {"sha": "b98486d19ae1206dade2d046266cfcd23a008a97", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5411fea202bb08dc6a9bb3204e52b96af0733a5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5411fea202bb08dc6a9bb3204e52b96af0733a5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b5411fea202bb08dc6a9bb3204e52b96af0733a5", "patch": "@@ -1,3 +1,8 @@\n+2004-07-14  James E Wilson  <wilson@specifixinc.com>\n+\n+\tPR target/16325\n+\t* gcc.dg/profile-generate-1.c: New.\n+\n 2004-07-15  Jakub Jelinek  <jakub@redhat.com>\n \n \t* gcc.c-torture/execute/20040709-1.c: New test."}, {"sha": "64ebb0e3a5ea471502b963dc246902e83d39d6bf", "filename": "gcc/testsuite/gcc.dg/profile-generate-1.c", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5411fea202bb08dc6a9bb3204e52b96af0733a5/gcc%2Ftestsuite%2Fgcc.dg%2Fprofile-generate-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5411fea202bb08dc6a9bb3204e52b96af0733a5/gcc%2Ftestsuite%2Fgcc.dg%2Fprofile-generate-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fprofile-generate-1.c?ref=b5411fea202bb08dc6a9bb3204e52b96af0733a5", "patch": "@@ -0,0 +1,33 @@\n+/* Bug 16325.  */\n+/* { dg-options \"-O -fprofile-generate\" } */\n+\n+int *p1;\n+int *p2;\n+int *p3;\n+\n+int ga = 100;\n+\n+int\n+sub (int i, int j)\n+{\n+  int k;\n+  int l;\n+  int m;\n+  int n;\n+  p1 = &k;\n+  p2 = &l;\n+  p3 = &m;\n+  k = 20;\n+  l = 30;\n+  m = 40;\n+  n = i / j;\n+  return n + ga;\n+}\n+\n+int\n+main(void)\n+{\n+  if (sub (99, 33) != 103)\n+    abort ();\n+  return 0;\n+}"}]}