{"sha": "97c6f7ad7363ba6842373bbf8e14f9a34b5db413", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTdjNmY3YWQ3MzYzYmE2ODQyMzczYmJmOGUxNGY5YTM0YjVkYjQxMw==", "commit": {"author": {"name": "Ulrich Weigand", "email": "uweigand@de.ibm.com", "date": "2003-03-22T17:52:10Z"}, "committer": {"name": "Ulrich Weigand", "email": "uweigand@gcc.gnu.org", "date": "2003-03-22T17:52:10Z"}, "message": "s390.md (\"movti\", [...]): Use 'o' instead of 'm' constraint in forced-split alternatives.\n\n\t* config/s390/s390.md (\"movti\", \"*movdi_31\", \"*movdf_31\"): Use 'o' instead\n\tof 'm' constraint in forced-split alternatives.\n\t(\"*adddi3_31\", \"*subdi3_31\"): Likewise.  Also, pass 0 instead of 1 as\n\tVALIDATE_ADDRESS parameter to operand_subword.\n\t* gcc.dg/20030321-1.c: New test.\n\nFrom-SVN: r64718", "tree": {"sha": "a9784e53b2291fc15de3b2d55b0832d028e86de7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a9784e53b2291fc15de3b2d55b0832d028e86de7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/97c6f7ad7363ba6842373bbf8e14f9a34b5db413", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97c6f7ad7363ba6842373bbf8e14f9a34b5db413", "html_url": "https://github.com/Rust-GCC/gccrs/commit/97c6f7ad7363ba6842373bbf8e14f9a34b5db413", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97c6f7ad7363ba6842373bbf8e14f9a34b5db413/comments", "author": null, "committer": null, "parents": [{"sha": "b8c25665b0bc2e74a01fde725c7dcf792fb7f1ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8c25665b0bc2e74a01fde725c7dcf792fb7f1ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8c25665b0bc2e74a01fde725c7dcf792fb7f1ef"}], "stats": {"total": 69, "additions": 49, "deletions": 20}, "files": [{"sha": "c7d76cb0650e025598f93f854a2b1ed4d17d0f0d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97c6f7ad7363ba6842373bbf8e14f9a34b5db413/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97c6f7ad7363ba6842373bbf8e14f9a34b5db413/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=97c6f7ad7363ba6842373bbf8e14f9a34b5db413", "patch": "@@ -1,3 +1,10 @@\n+2003-03-22  Ulrich Weigand  <uweigand@de.ibm.com>\n+\n+\t* config/s390/s390.md (\"movti\", \"*movdi_31\", \"*movdf_31\"): Use 'o' instead\n+\tof 'm' constraint in forced-split alternatives.\n+\t(\"*adddi3_31\", \"*subdi3_31\"): Likewise.  Also, pass 0 instead of 1 as\n+\tVALIDATE_ADDRESS parameter to operand_subword.\n+\n 2003-03-22  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* config/h8300/h8300.c (notice_update_cc): Correctly handle"}, {"sha": "d357df07163a862f50e6f74a29f0760d9842be5a", "filename": "gcc/config/s390/s390.md", "status": "modified", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97c6f7ad7363ba6842373bbf8e14f9a34b5db413/gcc%2Fconfig%2Fs390%2Fs390.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97c6f7ad7363ba6842373bbf8e14f9a34b5db413/gcc%2Fconfig%2Fs390%2Fs390.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.md?ref=97c6f7ad7363ba6842373bbf8e14f9a34b5db413", "patch": "@@ -904,8 +904,8 @@\n ;\n \n (define_insn \"movti\"\n-  [(set (match_operand:TI 0 \"nonimmediate_operand\" \"=d,Q,d,m,Q\")\n-        (match_operand:TI 1 \"general_operand\" \"Q,d,dKm,d,Q\"))]\n+  [(set (match_operand:TI 0 \"nonimmediate_operand\" \"=d,Q,d,o,Q\")\n+        (match_operand:TI 1 \"general_operand\" \"Q,d,dKo,d,Q\"))]\n   \"TARGET_64BIT\"\n   \"@\n    lmg\\\\t%0,%N0,%1\n@@ -1043,8 +1043,8 @@\n    (set_attr \"type\" \"lr,load,store,floadd,floadd,fstored,cs\")])\n \n (define_insn \"*movdi_31\"\n-  [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=d,Q,d,m,!*f,!*f,!m,Q\")\n-        (match_operand:DI 1 \"general_operand\" \"Q,d,dKm,d,*f,m,*f,Q\"))]\n+  [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=d,Q,d,o,!*f,!*f,!m,Q\")\n+        (match_operand:DI 1 \"general_operand\" \"Q,d,dKo,d,*f,m,*f,Q\"))]\n   \"!TARGET_64BIT\"\n   \"@\n    lm\\\\t%0,%N0,%1\n@@ -1353,8 +1353,8 @@\n    (set_attr \"type\" \"floadd,floadd,fstored,lr,load,store,cs\")])\n \n (define_insn \"*movdf_31\"\n-  [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=f,f,m,d,Q,d,m,Q\")\n-        (match_operand:DF 1 \"general_operand\" \"f,m,f,Q,d,dKm,d,Q\"))]\n+  [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=f,f,m,d,Q,d,o,Q\")\n+        (match_operand:DF 1 \"general_operand\" \"f,m,f,Q,d,dKo,d,Q\"))]\n   \"!TARGET_64BIT\"\n   \"@\n    ldr\\\\t%0,%1\n@@ -3034,7 +3034,7 @@\n (define_insn_and_split \"*adddi3_31\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=&d\")\n         (plus:DI (match_operand:DI 1 \"nonimmediate_operand\" \"%0\")\n-                 (match_operand:DI 2 \"general_operand\" \"dm\") ) )\n+                 (match_operand:DI 2 \"general_operand\" \"do\") ) )\n    (clobber (reg:CC 33))]\n   \"!TARGET_64BIT\"\n   \"#\"\n@@ -3055,12 +3055,12 @@\n     [(set (match_dup 3) (plus:SI (match_dup 3) (const_int 1)))\n      (clobber (reg:CC 33))])\n    (match_dup 9)]\n-  \"operands[3] = operand_subword (operands[0], 0, 1, DImode);\n-   operands[4] = operand_subword (operands[1], 0, 1, DImode);\n-   operands[5] = operand_subword (operands[2], 0, 1, DImode);\n-   operands[6] = operand_subword (operands[0], 1, 1, DImode);\n-   operands[7] = operand_subword (operands[1], 1, 1, DImode);\n-   operands[8] = operand_subword (operands[2], 1, 1, DImode);\n+  \"operands[3] = operand_subword (operands[0], 0, 0, DImode);\n+   operands[4] = operand_subword (operands[1], 0, 0, DImode);\n+   operands[5] = operand_subword (operands[2], 0, 0, DImode);\n+   operands[6] = operand_subword (operands[0], 1, 0, DImode);\n+   operands[7] = operand_subword (operands[1], 1, 0, DImode);\n+   operands[8] = operand_subword (operands[2], 1, 0, DImode);\n    operands[9] = gen_label_rtx ();\"\n   [(set_attr \"op_type\"  \"NN\")])\n \n@@ -3498,7 +3498,7 @@\n (define_insn_and_split \"*subdi3_31\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=&d\")\n         (minus:DI (match_operand:DI 1 \"register_operand\" \"0\")\n-                  (match_operand:DI 2 \"general_operand\" \"dm\") ) )\n+                  (match_operand:DI 2 \"general_operand\" \"do\") ) )\n    (clobber (reg:CC 33))]\n   \"!TARGET_64BIT\"\n   \"#\"\n@@ -3519,12 +3519,12 @@\n     [(set (match_dup 3) (plus:SI (match_dup 3) (const_int -1)))\n      (clobber (reg:CC 33))])\n    (match_dup 9)]\n-  \"operands[3] = operand_subword (operands[0], 0, 1, DImode);\n-   operands[4] = operand_subword (operands[1], 0, 1, DImode);\n-   operands[5] = operand_subword (operands[2], 0, 1, DImode);\n-   operands[6] = operand_subword (operands[0], 1, 1, DImode);\n-   operands[7] = operand_subword (operands[1], 1, 1, DImode);\n-   operands[8] = operand_subword (operands[2], 1, 1, DImode);\n+  \"operands[3] = operand_subword (operands[0], 0, 0, DImode);\n+   operands[4] = operand_subword (operands[1], 0, 0, DImode);\n+   operands[5] = operand_subword (operands[2], 0, 0, DImode);\n+   operands[6] = operand_subword (operands[0], 1, 0, DImode);\n+   operands[7] = operand_subword (operands[1], 1, 0, DImode);\n+   operands[8] = operand_subword (operands[2], 1, 0, DImode);\n    operands[9] = gen_label_rtx ();\"\n   [(set_attr \"op_type\"  \"NN\")])\n "}, {"sha": "34b0946ff28760d72b251093dd9e4807d4ac00b2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97c6f7ad7363ba6842373bbf8e14f9a34b5db413/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97c6f7ad7363ba6842373bbf8e14f9a34b5db413/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=97c6f7ad7363ba6842373bbf8e14f9a34b5db413", "patch": "@@ -1,3 +1,7 @@\n+2003-03-22  Ulrich Weigand  <uweigand@de.ibm.com>\n+\n+\t* gcc.dg/20030321-1.c: New test.\n+\n 2003-03-22  Zack Weinberg  <zack@codesourcery.com>\n \n \t* gcc.dg/Wshadow-1.c: Add a dg-warning line."}, {"sha": "228acec5471f29f3e9f8e090073a6fbc41de35e2", "filename": "gcc/testsuite/gcc.dg/20030321-1.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97c6f7ad7363ba6842373bbf8e14f9a34b5db413/gcc%2Ftestsuite%2Fgcc.dg%2F20030321-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97c6f7ad7363ba6842373bbf8e14f9a34b5db413/gcc%2Ftestsuite%2Fgcc.dg%2F20030321-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20030321-1.c?ref=97c6f7ad7363ba6842373bbf8e14f9a34b5db413", "patch": "@@ -0,0 +1,18 @@\n+/* This used to ICE on s390 due to displacement overflow \n+   when accessing the low-order subword.  */\n+\n+/* { dg-do compile } */\n+/* { dg-options \"\" } */\n+\n+struct array \n+{\n+  char align[4092];\n+  long long elem[2] __attribute__ ((__packed__));\n+};\n+\n+long long\n+test (struct array *array, int i)\n+{\n+  return array->elem[i];\n+}\n+"}]}