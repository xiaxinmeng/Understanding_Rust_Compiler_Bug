{"sha": "875c5a311a5d97da6163e9a2140f780fb20f18a3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODc1YzVhMzExYTVkOTdkYTYxNjNlOWEyMTQwZjc4MGZiMjBmMThhMw==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-10-22T12:05:31Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-10-22T12:05:31Z"}, "message": "(GO_IF_INDEXABLE_BASE): Allow LABEL_REF only if it's for a jump table.\n\nFrom-SVN: r2553", "tree": {"sha": "c0bf16b29b9c2cdb15be3229858caef0158e9e5b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c0bf16b29b9c2cdb15be3229858caef0158e9e5b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/875c5a311a5d97da6163e9a2140f780fb20f18a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/875c5a311a5d97da6163e9a2140f780fb20f18a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/875c5a311a5d97da6163e9a2140f780fb20f18a3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/875c5a311a5d97da6163e9a2140f780fb20f18a3/comments", "author": null, "committer": null, "parents": [{"sha": "4cdb3e7843ead19ab0e8a49af32dc76bbc8755ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4cdb3e7843ead19ab0e8a49af32dc76bbc8755ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4cdb3e7843ead19ab0e8a49af32dc76bbc8755ef"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "0ae542586285a2519eab16529b6160039f43135d", "filename": "gcc/config/m68k/m68k.h", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/875c5a311a5d97da6163e9a2140f780fb20f18a3/gcc%2Fconfig%2Fm68k%2Fm68k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/875c5a311a5d97da6163e9a2140f780fb20f18a3/gcc%2Fconfig%2Fm68k%2Fm68k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.h?ref=875c5a311a5d97da6163e9a2140f780fb20f18a3", "patch": "@@ -1128,8 +1128,15 @@ __transfer_from_trampoline ()\t\t\t\t\t\\\n #define GO_IF_NONINDEXED_ADDRESS(X, ADDR)  \\\n { if (INDIRECTABLE_1_ADDRESS_P (X)) goto ADDR; }\n \n-#define GO_IF_INDEXABLE_BASE(X, ADDR)\t\\\n-{ if (GET_CODE (X) == LABEL_REF) goto ADDR;\t\t\t\t\\\n+/* Only labels on dispatch tables are valid for indexing from.  */\n+#define GO_IF_INDEXABLE_BASE(X, ADDR)\t\t\t\t\\\n+{ rtx temp;\t\t\t\t\t\t\t\\\n+  if (GET_CODE (X) == LABEL_REF\t\t\t\t\t\\\n+      && (temp = next_nonnote_insn (XEXP (X, 0))) != 0\t\t\\\n+      && GET_CODE (temp) == JUMP_INSN\t\t\t\t\\\n+      && (GET_CODE (PATTERN (temp)) == ADDR_VEC\t\t\t\\\n+\t  || GET_CODE (PATTERN (temp)) == ADDR_DIFF_VEC))\t\\\n+    goto ADDR;\t\t\t\t\t\t\t\\\n   if (GET_CODE (X) == REG && REG_OK_FOR_BASE_P (X)) goto ADDR; }\n \n #define GO_IF_INDEXING(X, ADDR)\t\\"}]}