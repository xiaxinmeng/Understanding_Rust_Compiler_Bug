{"sha": "be4a6551ed37c1e7dbdfb9400fc2e2b5d40c5be2", "node_id": "C_kwDOANBUbNoAKGJlNGE2NTUxZWQzN2MxZTdkYmRmYjk0MDBmYzJlMmI1ZDQwYzViZTI", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2022-09-27T06:05:30Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2022-09-27T08:43:11Z"}, "message": "irange: keep better track of powers of 2.\n\nWhen setting the nonzero bits to a mask containing only one bit, set\nthe range immediately, as it can be devined from the mask.  This helps\nus keep better track of powers of two.\n\nFor example, with this patch a nonzero mask of 0x8000 is set to a\nrange of [0,0][0x8000,0x8000] with a nonzero mask of 0x8000.\n\ngcc/ChangeLog:\n\n\t* value-range.cc (irange::set_nonzero_bits): Set range when known.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.dg/tree-ssa/popcount6.c: New test.", "tree": {"sha": "a6917d20d2b4d0c3b4a6abbc47c58b7495d48bf0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a6917d20d2b4d0c3b4a6abbc47c58b7495d48bf0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/be4a6551ed37c1e7dbdfb9400fc2e2b5d40c5be2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be4a6551ed37c1e7dbdfb9400fc2e2b5d40c5be2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be4a6551ed37c1e7dbdfb9400fc2e2b5d40c5be2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be4a6551ed37c1e7dbdfb9400fc2e2b5d40c5be2/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1db05e1a1c1ee3d8a95826d477173fb7c557c002", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1db05e1a1c1ee3d8a95826d477173fb7c557c002", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1db05e1a1c1ee3d8a95826d477173fb7c557c002"}], "stats": {"total": 25, "additions": 25, "deletions": 0}, "files": [{"sha": "1406ad9d33b1aa196506798151aee5c245819eff", "filename": "gcc/testsuite/gcc.dg/tree-ssa/popcount6.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be4a6551ed37c1e7dbdfb9400fc2e2b5d40c5be2/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpopcount6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be4a6551ed37c1e7dbdfb9400fc2e2b5d40c5be2/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpopcount6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpopcount6.c?ref=be4a6551ed37c1e7dbdfb9400fc2e2b5d40c5be2", "patch": "@@ -0,0 +1,12 @@\n+// { dg-do compile }\n+// { dg-options \"-O2 -fdump-tree-evrp\" }\n+\n+int g(int n)\n+{\n+  n &= 0x8000;\n+  if (n == 0)\n+    return 1;\n+  return __builtin_popcount(n);\n+}\n+\n+// { dg-final { scan-tree-dump \"return 1;\" \"evrp\" } }"}, {"sha": "6154d73ccf5dccb0b89e5fb8a4937090ea0a441c", "filename": "gcc/value-range.cc", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be4a6551ed37c1e7dbdfb9400fc2e2b5d40c5be2/gcc%2Fvalue-range.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be4a6551ed37c1e7dbdfb9400fc2e2b5d40c5be2/gcc%2Fvalue-range.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvalue-range.cc?ref=be4a6551ed37c1e7dbdfb9400fc2e2b5d40c5be2", "patch": "@@ -2930,6 +2930,19 @@ irange::set_nonzero_bits (const wide_int_ref &bits)\n       set_nonzero_bits (NULL);\n       return;\n     }\n+  // If we have only one bit set in the mask, we can figure out the\n+  // range immediately.\n+  if (wi::popcount (bits) == 1)\n+    {\n+      bool has_zero = contains_p (build_zero_cst (type ()));\n+      set (type (), bits, bits);\n+      if (has_zero)\n+\t{\n+\t  int_range<2> zero;\n+\t  zero.set_zero (type ());\n+\t  union_ (zero);\n+\t}\n+    }\n   set_nonzero_bits (wide_int_to_tree (type (), bits));\n }\n "}]}