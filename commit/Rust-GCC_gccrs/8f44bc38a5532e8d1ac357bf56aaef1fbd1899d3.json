{"sha": "8f44bc38a5532e8d1ac357bf56aaef1fbd1899d3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGY0NGJjMzhhNTUzMmU4ZDFhYzM1N2JmNTZhYWVmMWZiZDE4OTlkMw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@vlsi1.ultra.nyu.edu", "date": "2004-06-25T20:33:09Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2004-06-25T20:33:09Z"}, "message": "tree-nested.c (build_addr): Merge real/imagpart with handled_component_p.\n\n\t* tree-nested.c (build_addr): Merge real/imagpart with\n\thandled_component_p.\n\t(convert_nonlocal_reference, convert_local_reference): Process extra\n\targs to COMPONENT_REF and ARRAY_REF.\n\t* tree-outof-ssa.c (discover_nonconstant_array_refs_r): Check for\n\tlower bound and field offset being constant.\n\nFrom-SVN: r83677", "tree": {"sha": "3d9c5cfe771b86fe61f70f6241520331fea18e67", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3d9c5cfe771b86fe61f70f6241520331fea18e67"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8f44bc38a5532e8d1ac357bf56aaef1fbd1899d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f44bc38a5532e8d1ac357bf56aaef1fbd1899d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f44bc38a5532e8d1ac357bf56aaef1fbd1899d3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f44bc38a5532e8d1ac357bf56aaef1fbd1899d3/comments", "author": null, "committer": null, "parents": [{"sha": "e804f8229005019d5907146aaee4ff48df081535", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e804f8229005019d5907146aaee4ff48df081535", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e804f8229005019d5907146aaee4ff48df081535"}], "stats": {"total": 51, "additions": 37, "deletions": 14}, "files": [{"sha": "f38a5e0ad507680696b1b36421f24e77e5772ce0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f44bc38a5532e8d1ac357bf56aaef1fbd1899d3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f44bc38a5532e8d1ac357bf56aaef1fbd1899d3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8f44bc38a5532e8d1ac357bf56aaef1fbd1899d3", "patch": "@@ -1,3 +1,12 @@\n+2004-06-25  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* tree-nested.c (build_addr): Merge real/imagpart with\n+\thandled_component_p.\n+\t(convert_nonlocal_reference, convert_local_reference): Process extra\n+\targs to COMPONENT_REF and ARRAY_REF.\n+\t* tree-outof-ssa.c (discover_nonconstant_array_refs_r): Check for\n+\tlower bound and field offset being constant.\n+\n 2004-06-25  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR wrong-code/16129"}, {"sha": "10bf1ce091cc8749250478032dbcb0c5022e7eb7", "filename": "gcc/tree-nested.c", "status": "modified", "additions": 16, "deletions": 6, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f44bc38a5532e8d1ac357bf56aaef1fbd1899d3/gcc%2Ftree-nested.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f44bc38a5532e8d1ac357bf56aaef1fbd1899d3/gcc%2Ftree-nested.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-nested.c?ref=8f44bc38a5532e8d1ac357bf56aaef1fbd1899d3", "patch": "@@ -158,11 +158,9 @@ build_addr (tree exp)\n {\n   tree base = exp;\n \n-  if (TREE_CODE (base) == REALPART_EXPR || TREE_CODE (base) == IMAGPART_EXPR)\n+  while (TREE_CODE (base) == REALPART_EXPR || TREE_CODE (base) == IMAGPART_EXPR\n+\t || handled_component_p (base))\n     base = TREE_OPERAND (base, 0);\n-  else\n-    while (handled_component_p (base))\n-      base = TREE_OPERAND (base, 0);\n \n   if (DECL_P (base))\n     TREE_ADDRESSABLE (base) = 1;\n@@ -797,14 +795,20 @@ convert_nonlocal_reference (tree *tp, int *walk_subtrees, void *data)\n       }\n       break;\n \n-    case COMPONENT_REF:\n     case REALPART_EXPR:\n     case IMAGPART_EXPR:\n       wi->val_only = false;\n       walk_tree (&TREE_OPERAND (t, 0), convert_nonlocal_reference, wi, NULL);\n       wi->val_only = true;\n       break;\n \n+    case COMPONENT_REF:\n+      wi->val_only = false;\n+      walk_tree (&TREE_OPERAND (t, 0), convert_nonlocal_reference, wi, NULL);\n+      wi->val_only = true;\n+      walk_tree (&TREE_OPERAND (t, 2), convert_nonlocal_reference, wi, NULL);\n+      break;\n+\n     case ARRAY_REF:\n     case ARRAY_RANGE_REF:\n       wi->val_only = false;\n@@ -932,14 +936,20 @@ convert_local_reference (tree *tp, int *walk_subtrees, void *data)\n       tsi_link_after (&wi->tsi, x, TSI_SAME_STMT);\n       break;\n \n-    case COMPONENT_REF:\n     case REALPART_EXPR:\n     case IMAGPART_EXPR:\n       wi->val_only = false;\n       walk_tree (&TREE_OPERAND (t, 0), convert_local_reference, wi, NULL);\n       wi->val_only = true;\n       break;\n \n+    case COMPONENT_REF:\n+      wi->val_only = false;\n+      walk_tree (&TREE_OPERAND (t, 0), convert_local_reference, wi, NULL);\n+      wi->val_only = true;\n+      walk_tree (&TREE_OPERAND (t, 2), convert_local_reference, wi, NULL);\n+      break;\n+\n     case ARRAY_REF:\n     case ARRAY_RANGE_REF:\n       wi->val_only = false;"}, {"sha": "517e2b8df5327cb91d80162fc2a8dab71bb7adc1", "filename": "gcc/tree-outof-ssa.c", "status": "modified", "additions": 12, "deletions": 8, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f44bc38a5532e8d1ac357bf56aaef1fbd1899d3/gcc%2Ftree-outof-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f44bc38a5532e8d1ac357bf56aaef1fbd1899d3/gcc%2Ftree-outof-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-outof-ssa.c?ref=8f44bc38a5532e8d1ac357bf56aaef1fbd1899d3", "patch": "@@ -1763,17 +1763,21 @@ discover_nonconstant_array_refs_r (tree * tp, int *walk_subtrees,\n \n   if (TYPE_P (t) || DECL_P (t))\n     *walk_subtrees = 0;\n-  else if (TREE_CODE (t) == ARRAY_REF || TREE_CODE (t) == ARRAY_RANGE_REF)\n+  if (TREE_CODE (t) == ARRAY_REF || TREE_CODE (t) == ARRAY_RANGE_REF)\n     {\n       while (((TREE_CODE (t) == ARRAY_REF || TREE_CODE (t) == ARRAY_RANGE_REF)\n-\t      && is_gimple_min_invariant (TREE_OPERAND (t, 1)))\n+\t      && is_gimple_min_invariant (TREE_OPERAND (t, 1))\n+\t      && (!TREE_OPERAND (t, 2)\n+\t\t  || is_gimple_min_invariant (TREE_OPERAND (t, 2))))\n \t     || (TREE_CODE (t) == COMPONENT_REF\n-\t\t || TREE_CODE (t) == BIT_FIELD_REF\n-\t\t || TREE_CODE (t) == REALPART_EXPR\n-\t\t || TREE_CODE (t) == IMAGPART_EXPR\n-\t\t || TREE_CODE (t) == VIEW_CONVERT_EXPR\n-\t\t || TREE_CODE (t) == NOP_EXPR\n-\t\t || TREE_CODE (t) == CONVERT_EXPR))\n+\t\t && (!TREE_OPERAND (t,2)\n+\t\t     || is_gimple_min_invariant (TREE_OPERAND (t, 2))))\n+\t     || TREE_CODE (t) == BIT_FIELD_REF\n+\t     || TREE_CODE (t) == REALPART_EXPR\n+\t     || TREE_CODE (t) == IMAGPART_EXPR\n+\t     || TREE_CODE (t) == VIEW_CONVERT_EXPR\n+\t     || TREE_CODE (t) == NOP_EXPR\n+\t     || TREE_CODE (t) == CONVERT_EXPR)\n \tt = TREE_OPERAND (t, 0);\n \n       if (TREE_CODE (t) == ARRAY_REF || TREE_CODE (t) == ARRAY_RANGE_REF)"}]}