{"sha": "2be0bff8f1836abfa08d9b52c8372f7b03468777", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmJlMGJmZjhmMTgzNmFiZmEwOGQ5YjUyYzgzNzJmN2IwMzQ2ODc3Nw==", "commit": {"author": {"name": "Thomas Quinot", "email": "quinot@adacore.com", "date": "2009-07-10T13:12:10Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-07-10T13:12:10Z"}, "message": "sem_aggr.adb: Minor comments editing\n\n2009-07-10  Thomas Quinot  <quinot@adacore.com>\n\n\t* sem_aggr.adb: Minor comments editing\n\n\t* exp_tss.adb, exp_ch3.adb: Minor reformatting\n\nFrom-SVN: r149473", "tree": {"sha": "df8586f79822a2ca08ed10f32d72377b0bfa0cd2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/df8586f79822a2ca08ed10f32d72377b0bfa0cd2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2be0bff8f1836abfa08d9b52c8372f7b03468777", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2be0bff8f1836abfa08d9b52c8372f7b03468777", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2be0bff8f1836abfa08d9b52c8372f7b03468777", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2be0bff8f1836abfa08d9b52c8372f7b03468777/comments", "author": null, "committer": null, "parents": [{"sha": "9304142e10e1d694d07b6fde8118a69e06fa7e56", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9304142e10e1d694d07b6fde8118a69e06fa7e56", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9304142e10e1d694d07b6fde8118a69e06fa7e56"}], "stats": {"total": 60, "additions": 33, "deletions": 27}, "files": [{"sha": "a089ac4abe62aa9864858b29a4197fd5a1013358", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2be0bff8f1836abfa08d9b52c8372f7b03468777/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2be0bff8f1836abfa08d9b52c8372f7b03468777/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=2be0bff8f1836abfa08d9b52c8372f7b03468777", "patch": "@@ -1,3 +1,9 @@\n+2009-07-10  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* sem_aggr.adb: Minor comments editing\n+\n+\t* exp_tss.adb, exp_ch3.adb: Minor reformatting\n+\n 2009-07-10  Robert Dewar  <dewar@adacore.com>\n \n \t* exp_util.adb: Minor code reorganization (use N_Short_Circuit)"}, {"sha": "d33698d55ecc5d84c7f3beeb14e20fdbfd21f088", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 17, "deletions": 16, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2be0bff8f1836abfa08d9b52c8372f7b03468777/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2be0bff8f1836abfa08d9b52c8372f7b03468777/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=2be0bff8f1836abfa08d9b52c8372f7b03468777", "patch": "@@ -2622,13 +2622,15 @@ package body Exp_Ch3 is\n                      Stmts :=\n                        Build_Initialization_Call\n                          (Loc,\n-                          Make_Selected_Component (Loc,\n-                            Prefix => Make_Identifier (Loc, Name_uInit),\n-                            Selector_Name => New_Occurrence_Of (Id, Loc)),\n-                          Typ,\n-                          In_Init_Proc => True,\n-                          Enclos_Type => Rec_Type,\n-                          Discr_Map => Discr_Map,\n+                          Id_Ref          =>\n+                            Make_Selected_Component (Loc,\n+                              Prefix        =>\n+                                Make_Identifier (Loc, Name_uInit),\n+                              Selector_Name => New_Occurrence_Of (Id, Loc)),\n+                          Typ             => Typ,\n+                          In_Init_Proc    => True,\n+                          Enclos_Type     => Rec_Type,\n+                          Discr_Map       => Discr_Map,\n                           Constructor_Ref => Expression (Decl));\n                   else\n                      Stmts := Build_Assignment (Id, Expression (Decl));\n@@ -2642,13 +2644,14 @@ package body Exp_Ch3 is\n                   Stmts :=\n                     Build_Initialization_Call\n                       (Loc,\n-                       Make_Selected_Component (Loc,\n-                         Prefix => Make_Identifier (Loc, Name_uInit),\n-                         Selector_Name => New_Occurrence_Of (Id, Loc)),\n-                       Typ,\n+                       Id_Ref       =>\n+                         Make_Selected_Component (Loc,\n+                           Prefix        => Make_Identifier (Loc, Name_uInit),\n+                           Selector_Name => New_Occurrence_Of (Id, Loc)),\n+                       Typ          => Typ,\n                        In_Init_Proc => True,\n-                       Enclos_Type => Rec_Type,\n-                       Discr_Map => Discr_Map);\n+                       Enclos_Type  => Rec_Type,\n+                       Discr_Map    => Discr_Map);\n \n                   Clean_Task_Names (Typ, Proc_Id);\n \n@@ -5704,9 +5707,7 @@ package body Exp_Ch3 is\n \n       --  Handle constructors of non-tagged CPP_Class types\n \n-      if not Is_Tagged_Type (Def_Id)\n-        and then Is_CPP_Class (Def_Id)\n-      then\n+      if not Is_Tagged_Type (Def_Id) and then Is_CPP_Class (Def_Id) then\n          Set_CPP_Constructors (Def_Id);\n       end if;\n "}, {"sha": "b1a28517948ac3b3325aabb3efbda1e19e1a5bd7", "filename": "gcc/ada/exp_tss.adb", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2be0bff8f1836abfa08d9b52c8372f7b03468777/gcc%2Fada%2Fexp_tss.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2be0bff8f1836abfa08d9b52c8372f7b03468777/gcc%2Fada%2Fexp_tss.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_tss.adb?ref=2be0bff8f1836abfa08d9b52c8372f7b03468777", "patch": "@@ -212,9 +212,8 @@ package body Exp_Tss is\n                if not Is_CPP_Class (Typ) then\n                   return Node (Elmt);\n \n-               --  In case of CPP classes we are searching here for the\n-               --  default constructor and hence we must skip non-default\n-               --  constructors (if any)\n+               --  For CPP classes, we are looking for the default constructor,\n+               --  and so we must skip any non-default constructor.\n \n                elsif\n                  No (Next\n@@ -228,13 +227,13 @@ package body Exp_Tss is\n             Next_Elmt (Elmt);\n          end loop;\n \n-      --  Non-default constructors are currently supported only in the\n-      --  context of interfacing with C++\n+      --  Non-default constructors are currently supported only in the context\n+      --  of interfacing with C++.\n \n       else pragma Assert (Is_CPP_Class (Typ));\n \n-         --  Use the referenced function to locate the IP procedure that\n-         --  corresponds with the C++ constructor\n+         --  Use the referenced function to locate the init_proc matching\n+         --  the C++ constructor.\n \n          Elmt := First_Elmt (TSS_Elist (FN));\n          while Present (Elmt) loop"}, {"sha": "9bff18efb9ffb0dc589e2bc77c87ead4c171d8dc", "filename": "gcc/ada/sem_aggr.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2be0bff8f1836abfa08d9b52c8372f7b03468777/gcc%2Fada%2Fsem_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2be0bff8f1836abfa08d9b52c8372f7b03468777/gcc%2Fada%2Fsem_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aggr.adb?ref=2be0bff8f1836abfa08d9b52c8372f7b03468777", "patch": "@@ -2373,7 +2373,7 @@ package body Sem_Aggr is\n       --  Builds a new N_Component_Association node which associates\n       --  Component to expression Expr and adds it to the association\n       --  list being built, either New_Assoc_List, or the association\n-      --  being build for an inner aggregate.\n+      --  being built for an inner aggregate.\n \n       function Discr_Present (Discr : Entity_Id) return Boolean;\n       --  If aggregate N is a regular aggregate this routine will return True.\n@@ -3368,7 +3368,7 @@ package body Sem_Aggr is\n                            Assoc_List : List_Id;\n                            Comp       : Entity_Id);\n                         --  Nested components may themselves be discriminated\n-                        --  types constrained by outer discriminants. Their\n+                        --  types constrained by outer discriminants, whose\n                         --  values must be captured before the aggregate is\n                         --  expanded into assignments.\n \n@@ -3505,7 +3505,7 @@ package body Sem_Aggr is\n                         --  have been collected in the aggregate earlier, and\n                         --  they may appear as constraints of subcomponents.\n                         --  Similarly if this component has discriminants, they\n-                        --  might it turn be propagated to their components.\n+                        --  might in turn be propagated to their components.\n \n                         if Has_Discriminants (Typ) then\n                            Add_Discriminant_Values (Expr, New_Assoc_List);\n@@ -3524,7 +3524,7 @@ package body Sem_Aggr is\n \n                            begin\n                               --  If the type has additional components, create\n-                              --  an others box association for them.\n+                              --  an OTHERS box association for them.\n \n                               Comp := First_Component (Ctyp);\n                               while Present (Comp) loop"}]}