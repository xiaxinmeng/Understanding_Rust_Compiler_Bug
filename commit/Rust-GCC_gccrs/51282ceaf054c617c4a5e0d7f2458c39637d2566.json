{"sha": "51282ceaf054c617c4a5e0d7f2458c39637d2566", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTEyODJjZWFmMDU0YzYxN2M0YTVlMGQ3ZjI0NThjMzk2MzdkMjU2Ng==", "commit": {"author": {"name": "Chris Burdess", "email": "dog@gnu.org", "date": "2005-04-27T18:57:02Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2005-04-27T18:57:02Z"}, "message": "HTTPURLConnection.java (connect): Accept absolute and relative paths in Location header.\n\n2005-04-27  Chris Burdess  <dog@gnu.org>\n\n\t* java/net/protocol/http/HTTPURLConnection.java (connect): Accept\n\tabsolute and relative paths in Location header.\n\n2005-04-27  Chris Burdess  <dog@gnu.org>\n\n\t* gnu/java/net/protocol/http/HTTPURLConnection.java: Throw\n\tFileNotFoundException and implement getErrorStream on 404.\n\nFrom-SVN: r98875", "tree": {"sha": "0566c2174e9e0c3723a146c7c44e27f3928e5bb3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0566c2174e9e0c3723a146c7c44e27f3928e5bb3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/51282ceaf054c617c4a5e0d7f2458c39637d2566", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51282ceaf054c617c4a5e0d7f2458c39637d2566", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51282ceaf054c617c4a5e0d7f2458c39637d2566", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51282ceaf054c617c4a5e0d7f2458c39637d2566/comments", "author": null, "committer": null, "parents": [{"sha": "465ee71e97935394f5aafbe32ae9b6f3f3ecb434", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/465ee71e97935394f5aafbe32ae9b6f3f3ecb434", "html_url": "https://github.com/Rust-GCC/gccrs/commit/465ee71e97935394f5aafbe32ae9b6f3f3ecb434"}], "stats": {"total": 40, "additions": 39, "deletions": 1}, "files": [{"sha": "9d66db23bdf949b168087e5b4b79b9f2e27162be", "filename": "libjava/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51282ceaf054c617c4a5e0d7f2458c39637d2566/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51282ceaf054c617c4a5e0d7f2458c39637d2566/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=51282ceaf054c617c4a5e0d7f2458c39637d2566", "patch": "@@ -1,3 +1,13 @@\n+2005-04-27  Chris Burdess  <dog@gnu.org>\n+\n+\t* java/net/protocol/http/HTTPURLConnection.java (connect): Accept\n+\tabsolute and relative paths in Location header.\n+\n+2005-04-27  Chris Burdess  <dog@gnu.org>\n+\n+\t* gnu/java/net/protocol/http/HTTPURLConnection.java: Throw\n+\tFileNotFoundException and implement getErrorStream on 404.\n+\n 2005-04-27  Sven de Marothy <sven@physto.se>\n \n \t* java/util/TimeZone.java,"}, {"sha": "50a6ed12e7a0320346e5a89eb97f1418190c7dc1", "filename": "libjava/gnu/java/net/protocol/http/HTTPURLConnection.java", "status": "modified", "additions": 29, "deletions": 1, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51282ceaf054c617c4a5e0d7f2458c39637d2566/libjava%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FHTTPURLConnection.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51282ceaf054c617c4a5e0d7f2458c39637d2566/libjava%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FHTTPURLConnection.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FHTTPURLConnection.java?ref=51282ceaf054c617c4a5e0d7f2458c39637d2566", "patch": "@@ -40,6 +40,7 @@\n \n import java.io.ByteArrayInputStream;\n import java.io.ByteArrayOutputStream;\n+import java.io.FileNotFoundException;\n import java.io.IOException;\n import java.io.InputStream;\n import java.io.OutputStream;\n@@ -94,6 +95,7 @@\n \n   private Response response;\n   private ByteArrayInputStream responseSink;\n+  private ByteArrayInputStream errorSink;\n \n   private HandshakeCompletedEvent handshakeEvent;\n \n@@ -281,11 +283,32 @@ else if (location.startsWith(\"https:\"))\n                 file = location.substring(end);\n                 retry = true;\n               }\n-            // Otherwise this is not an HTTP redirect, can't follow\n+\t    else if (location.length() > 0)\n+\t      {\n+\t\t// Malformed absolute URI, treat as file part of URI\n+\t\tif (location.charAt(0) == '/')\n+\t\t  {\n+\t\t    // Absolute path\n+\t\t    file = location;\n+\t\t  }\n+\t\telse\n+\t\t  {\n+\t\t    // Relative path\n+\t\t    int lsi = file.lastIndexOf('/');\n+\t\t    file = (lsi == -1) ? \"/\" : file.substring(0, lsi + 1);\n+\t\t    file += location;\n+\t\t  }\n+\t\tretry = true;\n+\t      }\n           }\n         else\n           {\n             responseSink = new ByteArrayInputStream(reader.toByteArray ());\n+            if (response.getCode() == 404)\n+              {\n+                errorSink = responseSink;\n+                throw new FileNotFoundException(url.toString());\n+              }\n           }\n       }\n     while (retry);\n@@ -455,6 +478,11 @@ public InputStream getInputStream()\n     return responseSink;\n   }\n \n+  public InputStream getErrorStream()\n+  {\n+    return errorSink;\n+  }\n+\n   public Map getHeaderFields()\n   {\n     if (!connected)"}]}