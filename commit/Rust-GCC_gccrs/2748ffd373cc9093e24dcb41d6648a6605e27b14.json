{"sha": "2748ffd373cc9093e24dcb41d6648a6605e27b14", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjc0OGZmZDM3M2NjOTA5M2UyNGRjYjQxZDY2NDhhNjYwNWUyN2IxNA==", "commit": {"author": {"name": "Christophe Lyon", "email": "christophe.lyon@linaro.org", "date": "2015-01-26T15:54:22Z"}, "committer": {"name": "Christophe Lyon", "email": "clyon@gcc.gnu.org", "date": "2015-01-26T15:54:22Z"}, "message": "[ARM/AArch64][testsuite] Add vpaddl tests.\n\n2015-01-26  Christophe Lyon  <christophe.lyon@linaro.org>\n\n\t* gcc.target/aarch64/advsimd-intrinsics/vpaddl.c: New file.\n\nFrom-SVN: r220124", "tree": {"sha": "2c52abe244d171de77311d7f3d87ef1e66ec3226", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2c52abe244d171de77311d7f3d87ef1e66ec3226"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2748ffd373cc9093e24dcb41d6648a6605e27b14", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2748ffd373cc9093e24dcb41d6648a6605e27b14", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2748ffd373cc9093e24dcb41d6648a6605e27b14", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2748ffd373cc9093e24dcb41d6648a6605e27b14/comments", "author": null, "committer": null, "parents": [{"sha": "4ef07c7620db6c3c22313db78d88bb004eb7c9ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ef07c7620db6c3c22313db78d88bb004eb7c9ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ef07c7620db6c3c22313db78d88bb004eb7c9ca"}], "stats": {"total": 120, "additions": 120, "deletions": 0}, "files": [{"sha": "07f6f66f32faf790acdcaae9a7ea4bee263f6666", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2748ffd373cc9093e24dcb41d6648a6605e27b14/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2748ffd373cc9093e24dcb41d6648a6605e27b14/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2748ffd373cc9093e24dcb41d6648a6605e27b14", "patch": "@@ -1,3 +1,7 @@\n+2015-01-26  Christophe Lyon  <christophe.lyon@linaro.org>\n+\n+\t* gcc.target/aarch64/advsimd-intrinsics/vpaddl.c: New file.\n+\n 2015-01-26  Christophe Lyon  <christophe.lyon@linaro.org>\n \n \t* gcc.target/aarch64/advsimd-intrinsics/vpadal.c: New file."}, {"sha": "8dc768d584ac405d58d13bb759024f5c65a1b46d", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vpaddl.c", "status": "added", "additions": 116, "deletions": 0, "changes": 116, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2748ffd373cc9093e24dcb41d6648a6605e27b14/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvpaddl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2748ffd373cc9093e24dcb41d6648a6605e27b14/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvpaddl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvpaddl.c?ref=2748ffd373cc9093e24dcb41d6648a6605e27b14", "patch": "@@ -0,0 +1,116 @@\n+#include <arm_neon.h>\n+#include \"arm-neon-ref.h\"\n+#include \"compute-ref-data.h\"\n+\n+/* Expected results.  */\n+VECT_VAR_DECL(expected,int,16,4) [] = { 0xffe1, 0xffe5, 0xffe9, 0xffed };\n+VECT_VAR_DECL(expected,int,32,2) [] = { 0xffffffe1, 0xffffffe5 };\n+VECT_VAR_DECL(expected,int,64,1) [] = { 0xffffffffffffffe1 };\n+VECT_VAR_DECL(expected,uint,16,4) [] = { 0x1e1, 0x1e5, 0x1e9, 0x1ed };\n+VECT_VAR_DECL(expected,uint,32,2) [] = { 0x1ffe1, 0x1ffe5 };\n+VECT_VAR_DECL(expected,uint,64,1) [] = { 0x1ffffffe1 };\n+VECT_VAR_DECL(expected,int,16,8) [] = { 0xffe1, 0xffe5, 0xffe9, 0xffed,\n+\t\t\t\t\t0xfff1, 0xfff5, 0xfff9, 0xfffd };\n+VECT_VAR_DECL(expected,int,32,4) [] = { 0xffffffe1, 0xffffffe5,\n+\t\t\t\t\t0xffffffe9, 0xffffffed };\n+VECT_VAR_DECL(expected,int,64,2) [] = { 0xffffffffffffffe1,\n+\t\t\t\t\t0xffffffffffffffe5 };\n+VECT_VAR_DECL(expected,uint,16,8) [] = { 0x1e1, 0x1e5, 0x1e9, 0x1ed,\n+\t\t\t\t\t 0x1f1, 0x1f5, 0x1f9, 0x1fd };\n+VECT_VAR_DECL(expected,uint,32,4) [] = { 0x1ffe1, 0x1ffe5, 0x1ffe9, 0x1ffed };\n+VECT_VAR_DECL(expected,uint,64,2) [] = { 0x1ffffffe1, 0x1ffffffe5 };\n+\n+#define INSN_NAME vpaddl\n+#define TEST_MSG \"VPADDL/VPADDLQ\"\n+\n+#define FNNAME1(NAME) void exec_ ## NAME (void)\n+#define FNNAME(NAME) FNNAME1(NAME)\n+\n+FNNAME (INSN_NAME)\n+{\n+  /* Basic test: y=OP(x), then store the result.  */\n+#define TEST_VPADDL1(INSN, Q, T1, T2, W, N, W2, N2)\t\\\n+  VECT_VAR(vector_res, T1, W2, N2) =\t\t\t\\\n+    INSN##Q##_##T2##W(VECT_VAR(vector, T1, W, N));\t\\\n+  vst1##Q##_##T2##W2(VECT_VAR(result, T1, W2, N2),\t\\\n+\t\t    VECT_VAR(vector_res, T1, W2, N2))\n+\n+#define TEST_VPADDL(INSN, Q, T1, T2, W, N, W2, N2)\t\\\n+  TEST_VPADDL1(INSN, Q, T1, T2, W, N, W2, N2)\n+\n+  /* No need for 64 bits elements variants.  */\n+  DECL_VARIABLE(vector, int, 8, 8);\n+  DECL_VARIABLE(vector, int, 16, 4);\n+  DECL_VARIABLE(vector, int, 32, 2);\n+  DECL_VARIABLE(vector, uint, 8, 8);\n+  DECL_VARIABLE(vector, uint, 16, 4);\n+  DECL_VARIABLE(vector, uint, 32, 2);\n+  DECL_VARIABLE(vector, int, 8, 16);\n+  DECL_VARIABLE(vector, int, 16, 8);\n+  DECL_VARIABLE(vector, int, 32, 4);\n+  DECL_VARIABLE(vector, uint, 8, 16);\n+  DECL_VARIABLE(vector, uint, 16, 8);\n+  DECL_VARIABLE(vector, uint, 32, 4);\n+\n+  DECL_VARIABLE(vector_res, int, 16, 4);\n+  DECL_VARIABLE(vector_res, int, 32, 2);\n+  DECL_VARIABLE(vector_res, int, 64, 1);\n+  DECL_VARIABLE(vector_res, uint, 16, 4);\n+  DECL_VARIABLE(vector_res, uint, 32, 2);\n+  DECL_VARIABLE(vector_res, uint, 64, 1);\n+  DECL_VARIABLE(vector_res, int, 16, 8);\n+  DECL_VARIABLE(vector_res, int, 32, 4);\n+  DECL_VARIABLE(vector_res, int, 64, 2);\n+  DECL_VARIABLE(vector_res, uint, 16, 8);\n+  DECL_VARIABLE(vector_res, uint, 32, 4);\n+  DECL_VARIABLE(vector_res, uint, 64, 2);\n+\n+  clean_results ();\n+\n+  /* Initialize input \"vector\" from \"buffer\".  */\n+  VLOAD(vector, buffer, , int, s, 8, 8);\n+  VLOAD(vector, buffer, , int, s, 16, 4);\n+  VLOAD(vector, buffer, , int, s, 32, 2);\n+  VLOAD(vector, buffer, , uint, u, 8, 8);\n+  VLOAD(vector, buffer, , uint, u, 16, 4);\n+  VLOAD(vector, buffer, , uint, u, 32, 2);\n+  VLOAD(vector, buffer, q, int, s, 8, 16);\n+  VLOAD(vector, buffer, q, int, s, 16, 8);\n+  VLOAD(vector, buffer, q, int, s, 32, 4);\n+  VLOAD(vector, buffer, q, uint, u, 8, 16);\n+  VLOAD(vector, buffer, q, uint, u, 16, 8);\n+  VLOAD(vector, buffer, q, uint, u, 32, 4);\n+\n+  /* Apply a unary operator named INSN_NAME.  */\n+  TEST_VPADDL(INSN_NAME, , int, s, 8, 8, 16, 4);\n+  TEST_VPADDL(INSN_NAME, , int, s, 16, 4, 32, 2);\n+  TEST_VPADDL(INSN_NAME, , int, s, 32, 2, 64, 1);\n+  TEST_VPADDL(INSN_NAME, , uint, u, 8, 8, 16, 4);\n+  TEST_VPADDL(INSN_NAME, , uint, u, 16, 4, 32, 2);\n+  TEST_VPADDL(INSN_NAME, , uint, u, 32, 2, 64, 1);\n+  TEST_VPADDL(INSN_NAME, q, int, s, 8, 16, 16, 8);\n+  TEST_VPADDL(INSN_NAME, q, int, s, 16, 8, 32, 4);\n+  TEST_VPADDL(INSN_NAME, q, int, s, 32, 4, 64, 2);\n+  TEST_VPADDL(INSN_NAME, q, uint, u, 8, 16, 16, 8);\n+  TEST_VPADDL(INSN_NAME, q, uint, u, 16, 8, 32, 4);\n+  TEST_VPADDL(INSN_NAME, q, uint, u, 32, 4, 64, 2);\n+\n+  CHECK(TEST_MSG, int, 16, 4, PRIx16, expected, \"\");\n+  CHECK(TEST_MSG, int, 32, 2, PRIx32, expected, \"\");\n+  CHECK(TEST_MSG, int, 64, 1, PRIx64, expected, \"\");\n+  CHECK(TEST_MSG, uint, 16, 4, PRIx16, expected, \"\");\n+  CHECK(TEST_MSG, uint, 32, 2, PRIx32, expected, \"\");\n+  CHECK(TEST_MSG, uint, 64, 1, PRIx64, expected, \"\");\n+  CHECK(TEST_MSG, int, 16, 8, PRIx16, expected, \"\");\n+  CHECK(TEST_MSG, int, 32, 4, PRIx32, expected, \"\");\n+  CHECK(TEST_MSG, int, 64, 2, PRIx64, expected, \"\");\n+  CHECK(TEST_MSG, uint, 16, 8, PRIx16, expected, \"\");\n+  CHECK(TEST_MSG, uint, 32, 4, PRIx32, expected, \"\");\n+  CHECK(TEST_MSG, uint, 64, 2, PRIx64, expected, \"\");\n+}\n+\n+int main (void)\n+{\n+  exec_vpaddl ();\n+  return 0;\n+}"}]}