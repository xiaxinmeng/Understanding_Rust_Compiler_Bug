{"sha": "67ce0d7e96fd6802815643dbfb8505fad5318e95", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjdjZTBkN2U5NmZkNjgwMjgxNTY0M2RiZmI4NTA1ZmFkNTMxOGU5NQ==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2007-10-15T13:53:48Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-10-15T13:53:48Z"}, "message": "s-taprop-solaris.adb, [...]: Minor reformatting.\n\n2007-10-15  Robert Dewar  <dewar@adacore.com>\n\n\t* s-taprop-solaris.adb, s-taprop-vms.adb, s-taprop-mingw.adb, \n\ts-taprop-vxworks.adb, s-taprop-posix.adb, a-calend-vms.adb,\n\ta-calend.adb, a-nuflra.adb, a-tigeau.adb, a-wtgeau.adb, \n\tchecks.adb, bindgen.adb, eval_fat.adb, exp_fixd.adb, fmap.adb, \n\tfreeze.adb, g-awk.adb, g-calend.adb, g-diopit.adb, g-expect.adb, \n\tgnatchop.adb, gnatlink.adb, g-spipat.adb, g-thread.adb, make.adb, \n\tmdll.adb, mlib.adb, mlib-prj.adb, osint.adb, par-ch3.adb, prj.adb, \n\tprj-makr.adb, sem_prag.adb, sem_type.adb, s-fatgen.adb, s-fileio.adb, \n\tsinfo.ads, sinput-d.adb, s-taasde.adb, s-tasdeb.ads, s-tasren.adb, \n\ts-tassta.adb, s-tpobop.adb, s-tposen.adb, stylesw.adb, types.ads,\n\tuintp.adb, validsw.adb, makegpr.adb, a-rbtgso.adb, a-crbtgo.adb, \n\ta-coorse.adb, a-convec.adb, a-coinve.adb, a-cohama.adb, a-ciorse.adb, \n\ta-cihama.adb, a-cidlli.adb, a-chtgop.adb, a-cdlili.adb, a-cdlili.adb, \n\ta-coormu.adb, a-ciormu.adb, a-cihase.adb, a-cohase.adb, a-ciorma.adb, \n\ta-coorma.adb, a-ztgeau.adb, symbols-vms.adb, a-crdlli.adb, \n\ta-calari.adb, a-calfor.adb, s-os_lib.adb, s-regpat.adb, a-ngrear.adb:\n\tMinor reformatting.\n\tAdd Unreferenced and Warnings (Off) pragmas for cases of\n\tvariables modified calls where they are IN OUT or OUT parameters and\n\tthe resulting values are not subsequently referenced. In a few cases,\n\twe also remove redundant code found by the new warnings.\n\n\t* ug_words, vms_data.ads, usage.adb, sem_util.adb, sem_util.ads, \n\tsem_warn.adb, sem_warn.ads, sem_res.adb, sem_ch7.adb, sem_ch8.adb,\n\tsem_ch5.adb, opt.ads, lib-xref.adb, lib-xref.ads, exp_smem.adb,\n\tsem_ch11.adb, exp_ch6.adb, einfo.ads, einfo.adb: implement a new\n\twarning controlled by -gnatw.o that warns on cases of out parameter\n\tvalues being ignored.\n\nFrom-SVN: r129318", "tree": {"sha": "a52f2a80bd9bc0b3d34328c89d877fdc3113b84f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a52f2a80bd9bc0b3d34328c89d877fdc3113b84f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/67ce0d7e96fd6802815643dbfb8505fad5318e95", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67ce0d7e96fd6802815643dbfb8505fad5318e95", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67ce0d7e96fd6802815643dbfb8505fad5318e95", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67ce0d7e96fd6802815643dbfb8505fad5318e95/comments", "author": null, "committer": null, "parents": [{"sha": "f3bc37238b942ce0e901d3bdc6c93a5b776a9a2b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3bc37238b942ce0e901d3bdc6c93a5b776a9a2b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f3bc37238b942ce0e901d3bdc6c93a5b776a9a2b"}], "stats": {"total": 1470, "additions": 1055, "deletions": 415}, "files": [{"sha": "198f3d5cd1120706d30397bd41c5f0b7a97b5603", "filename": "gcc/ada/a-calari.adb", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fa-calari.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fa-calari.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-calari.adb?ref=67ce0d7e96fd6802815643dbfb8505fad5318e95", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---            Copyright (C) 2006, Free Software Foundation, Inc.            --\n+--          Copyright (C) 2006-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -70,6 +70,9 @@ package body Ada.Calendar.Arithmetic is\n       Days         : Long_Integer;\n       Seconds      : Duration;\n       Leap_Seconds : Integer;\n+      pragma Warnings (Off, Seconds);        -- temporary ???\n+      pragma Warnings (Off, Leap_Seconds);   -- temporary ???\n+      pragma Unreferenced (Seconds, Leap_Seconds);\n    begin\n       Arithmetic_Operations.Difference\n         (Left, Right, Days, Seconds, Leap_Seconds);"}, {"sha": "fb5ac13cfe88261ae4594ec59d5a9190473c2271", "filename": "gcc/ada/a-calend-vms.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fa-calend-vms.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fa-calend-vms.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-calend-vms.adb?ref=67ce0d7e96fd6802815643dbfb8505fad5318e95", "patch": "@@ -37,6 +37,8 @@ with System.Aux_DEC; use System.Aux_DEC;\n \n with Ada.Unchecked_Conversion;\n \n+pragma Warnings (Off); -- temp till we fix out param warnings ???\n+\n package body Ada.Calendar is\n \n    --------------------------"}, {"sha": "dfe97ac277d4abbbd836520a05507fce2ab81fb8", "filename": "gcc/ada/a-calend.adb", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fa-calend.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fa-calend.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-calend.adb?ref=67ce0d7e96fd6802815643dbfb8505fad5318e95", "patch": "@@ -467,10 +467,11 @@ package body Ada.Calendar is\n    ---------\n \n    function Day (Date : Time) return Day_Number is\n+      D : Day_Number;\n       Y : Year_Number;\n       M : Month_Number;\n-      D : Day_Number;\n       S : Day_Duration;\n+      pragma Unreferenced (Y, M, S);\n    begin\n       Split (Date, Y, M, D, S);\n       return D;\n@@ -508,6 +509,7 @@ package body Ada.Calendar is\n       M : Month_Number;\n       D : Day_Number;\n       S : Day_Duration;\n+      pragma Unreferenced (Y, D, S);\n    begin\n       Split (Date, Y, M, D, S);\n       return M;\n@@ -522,6 +524,7 @@ package body Ada.Calendar is\n       M : Month_Number;\n       D : Day_Number;\n       S : Day_Duration;\n+      pragma Unreferenced (Y, M, D);\n    begin\n       Split (Date, Y, M, D, S);\n       return S;\n@@ -544,6 +547,8 @@ package body Ada.Calendar is\n       Ss : Duration;\n       Le : Boolean;\n \n+      pragma Unreferenced (H, M, Se, Ss, Le);\n+\n    begin\n       --  Even though the input time zone is UTC (0), the flag Is_Ada_05 will\n       --  ensure that Split picks up the local time zone.\n@@ -631,6 +636,7 @@ package body Ada.Calendar is\n       M : Month_Number;\n       D : Day_Number;\n       S : Day_Duration;\n+      pragma Unreferenced (M, D, S);\n    begin\n       Split (Date, Y, M, D, S);\n       return Y;\n@@ -822,6 +828,8 @@ package body Ada.Calendar is\n          Su : Duration;\n          Le : Boolean;\n \n+         pragma Unreferenced (Ds, H, Mi, Se, Su, Le);\n+\n          Day_Count : Long_Integer;\n          Res_Dur   : Time_Dur;\n          Res_N     : Time_Rep;"}, {"sha": "9804e2208287f45f173c61da2cb1b7f15d4ade6a", "filename": "gcc/ada/a-calfor.adb", "status": "modified", "additions": 21, "deletions": 1, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fa-calfor.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fa-calfor.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-calfor.adb?ref=67ce0d7e96fd6802815643dbfb8505fad5318e95", "patch": "@@ -34,6 +34,8 @@\n with Ada.Calendar;            use Ada.Calendar;\n with Ada.Calendar.Time_Zones; use Ada.Calendar.Time_Zones;\n \n+pragma Warnings (Off); -- temp till we fix out param warnings ???\n+\n package body Ada.Calendar.Formatting is\n \n    --------------------------\n@@ -93,6 +95,8 @@ package body Ada.Calendar.Formatting is\n       Ss : Second_Duration;\n       Le : Boolean;\n \n+      pragma Unreferenced (Y, Mo, H, Mi);\n+\n    begin\n       Split (Date, Y, Mo, D, H, Mi, Se, Ss, Le, Time_Zone);\n       return D;\n@@ -124,6 +128,8 @@ package body Ada.Calendar.Formatting is\n       Ss : Second_Duration;\n       Le : Boolean;\n \n+      pragma Unreferenced (Y, Mo, D, Mi);\n+\n    begin\n       Split (Date, Y, Mo, D, H, Mi, Se, Ss, Le, Time_Zone);\n       return H;\n@@ -345,6 +351,9 @@ package body Ada.Calendar.Formatting is\n       Se : Second_Number;\n       Ss : Second_Duration;\n       Le : Boolean;\n+\n+      pragma Unreferenced (Y, Mo, D, H);\n+\n    begin\n       Split (Date, Y, Mo, D, H, Mi, Se, Ss, Le, Time_Zone);\n       return Mi;\n@@ -366,6 +375,9 @@ package body Ada.Calendar.Formatting is\n       Se : Second_Number;\n       Ss : Second_Duration;\n       Le : Boolean;\n+\n+      pragma Unreferenced (Y, D, H, Mi);\n+\n    begin\n       Split (Date, Y, Mo, D, H, Mi, Se, Ss, Le, Time_Zone);\n       return Mo;\n@@ -384,6 +396,9 @@ package body Ada.Calendar.Formatting is\n       Se : Second_Number;\n       Ss : Second_Duration;\n       Le : Boolean;\n+\n+      pragma Unreferenced (Y, Mo, D, H, Mi);\n+\n    begin\n       Split (Date, Y, Mo, D, H, Mi, Se, Ss, Le);\n       return Se;\n@@ -413,7 +428,7 @@ package body Ada.Calendar.Formatting is\n       return Day_Duration (Hour   * 3_600) +\n              Day_Duration (Minute *    60) +\n              Day_Duration (Second)         +\n-                           Sub_Second;\n+             Sub_Second;\n    end Seconds_Of;\n \n    -----------\n@@ -613,6 +628,9 @@ package body Ada.Calendar.Formatting is\n       Se : Second_Number;\n       Ss : Second_Duration;\n       Le : Boolean;\n+\n+      pragma Unreferenced (Y, Mo, D, H, Mi);\n+\n    begin\n       Split (Date, Y, Mo, D, H, Mi, Se, Ss, Le);\n       return Ss;\n@@ -923,6 +941,8 @@ package body Ada.Calendar.Formatting is\n       Ss : Second_Duration;\n       Le : Boolean;\n \n+      pragma Unreferenced (Mo, D, H, Mi);\n+\n    begin\n       Split (Date, Y, Mo, D, H, Mi, Se, Ss, Le, Time_Zone);\n       return Y;"}, {"sha": "68222ce2d49f4afc06522f91a27cca95e0d60e0c", "filename": "gcc/ada/a-cdlili.adb", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fa-cdlili.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fa-cdlili.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cdlili.adb?ref=67ce0d7e96fd6802815643dbfb8505fad5318e95", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2004-2006, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -175,7 +175,9 @@ package body Ada.Containers.Doubly_Linked_Lists is\n       Container.Last := null;\n       Container.Length := 0;\n \n+      pragma Warnings (Off);\n       Free (X);\n+      pragma Warnings (On);\n    end Clear;\n \n    --------------\n@@ -491,6 +493,7 @@ package body Ada.Containers.Doubly_Linked_Lists is\n             if RI.Node.Element < LI.Node.Element then\n                declare\n                   RJ : Cursor := RI;\n+                  pragma Warnings (Off, RJ);\n                begin\n                   RI.Node := RI.Node.Next;\n                   Splice (Target, LI, Source, RJ);\n@@ -664,6 +667,7 @@ package body Ada.Containers.Doubly_Linked_Lists is\n       Count     : Count_Type := 1)\n    is\n       Position : Cursor;\n+      pragma Unreferenced (Position);\n    begin\n       Insert (Container, Before, New_Item, Position, Count);\n    end Insert;"}, {"sha": "dd97c2ebb0580f4889a853de6fa230c221ee1d8f", "filename": "gcc/ada/a-chtgop.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fa-chtgop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fa-chtgop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-chtgop.adb?ref=67ce0d7e96fd6802815643dbfb8505fad5318e95", "patch": "@@ -583,6 +583,7 @@ package body Ada.Containers.Hash_Tables.Generic_Operations is\n \n          declare\n             X : Buckets_Access := HT.Buckets;\n+            pragma Warnings (Off, X);\n          begin\n             HT.Buckets := New_Buckets (Length => NN);\n             Free_Buckets (X);\n@@ -628,6 +629,7 @@ package body Ada.Containers.Hash_Tables.Generic_Operations is\n       Rehash : declare\n          Dst_Buckets : Buckets_Access := New_Buckets (Length => NN);\n          Src_Buckets : Buckets_Access := HT.Buckets;\n+         pragma Warnings (Off, Src_Buckets);\n \n          L : Count_Type renames HT.Length;\n          LL : constant Count_Type := L;"}, {"sha": "4bd0db77b038cf5f8b27731cc1ca917f8e3fba98", "filename": "gcc/ada/a-cidlli.adb", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fa-cidlli.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fa-cidlli.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cidlli.adb?ref=67ce0d7e96fd6802815643dbfb8505fad5318e95", "patch": "@@ -7,7 +7,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2004-2006, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -162,6 +162,7 @@ package body Ada.Containers.Indefinite_Doubly_Linked_Lists is\n \n    procedure Clear (Container : in out List) is\n       X : Node_Access;\n+      pragma Warnings (Off, X);\n \n    begin\n       if Container.Length = 0 then\n@@ -539,6 +540,7 @@ package body Ada.Containers.Indefinite_Doubly_Linked_Lists is\n             if RI.Node.Element.all < LI.Node.Element.all then\n                declare\n                   RJ : Cursor := RI;\n+                  pragma Warnings (Off, RJ);\n                begin\n                   RI.Node := RI.Node.Next;\n                   Splice (Target, LI, Source, RJ);\n@@ -735,6 +737,7 @@ package body Ada.Containers.Indefinite_Doubly_Linked_Lists is\n       Count     : Count_Type := 1)\n    is\n       Position : Cursor;\n+      pragma Unreferenced (Position);\n    begin\n       Insert (Container, Before, New_Item, Position, Count);\n    end Insert;"}, {"sha": "45dfe984d51114d2142fedc220e33d368b9ba3a6", "filename": "gcc/ada/a-cihama.adb", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fa-cihama.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fa-cihama.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cihama.adb?ref=67ce0d7e96fd6802815643dbfb8505fad5318e95", "patch": "@@ -568,6 +568,8 @@ package body Ada.Containers.Indefinite_Hashed_Maps is\n       New_Item  : Element_Type)\n    is\n       Position : Cursor;\n+      pragma Unreferenced (Position);\n+\n       Inserted : Boolean;\n \n    begin\n@@ -965,9 +967,13 @@ package body Ada.Containers.Indefinite_Hashed_Maps is\n \n          declare\n             K : Key_Type renames Position.Node.Key.all;\n+\n             E : Element_Type renames Position.Node.Element.all;\n+            pragma Unreferenced (E);\n+\n          begin\n             Process (K, E);\n+\n          exception\n             when others =>\n                L := L - 1;"}, {"sha": "235f6e36806d2ce2b5bb65b934ee46bc23599e3a", "filename": "gcc/ada/a-cihase.adb", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fa-cihase.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fa-cihase.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cihase.adb?ref=67ce0d7e96fd6802815643dbfb8505fad5318e95", "patch": "@@ -703,6 +703,8 @@ package body Ada.Containers.Indefinite_Hashed_Sets is\n       New_Item  : Element_Type)\n    is\n       Position : Cursor;\n+      pragma Unreferenced (Position);\n+\n       Inserted : Boolean;\n \n    begin\n@@ -1138,6 +1140,7 @@ package body Ada.Containers.Indefinite_Hashed_Sets is\n                Element_Keys.Find (Container.HT, New_Item);\n \n       X : Element_Access;\n+      pragma Warnings (Off, X);\n \n    begin\n       if Node = null then\n@@ -1471,9 +1474,11 @@ package body Ada.Containers.Indefinite_Hashed_Sets is\n    ------------\n \n    function To_Set (New_Item : Element_Type) return Set is\n-      HT       : Hash_Table_Type;\n+      HT : Hash_Table_Type;\n+\n       Node     : Node_Access;\n       Inserted : Boolean;\n+      pragma Unreferenced (Node, Inserted);\n \n    begin\n       Insert (HT, New_Item, Node, Inserted);\n@@ -1523,6 +1528,7 @@ package body Ada.Containers.Indefinite_Hashed_Sets is\n \n          Tgt_Node : Node_Access;\n          Success  : Boolean;\n+         pragma Unreferenced (Tgt_Node, Success);\n \n       --  Start of processing for Process\n "}, {"sha": "4372ad404f00fc96fb490c3f61bebeb5ad0071c4", "filename": "gcc/ada/a-ciorma.adb", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fa-ciorma.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fa-ciorma.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ciorma.adb?ref=67ce0d7e96fd6802815643dbfb8505fad5318e95", "patch": "@@ -7,7 +7,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2004-2006, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -707,8 +707,9 @@ package body Ada.Containers.Indefinite_Ordered_Maps is\n       Key       : Key_Type;\n       New_Item  : Element_Type)\n    is\n-\n       Position : Cursor;\n+      pragma Unreferenced (Position);\n+\n       Inserted : Boolean;\n \n    begin\n@@ -1301,10 +1302,13 @@ package body Ada.Containers.Indefinite_Ordered_Maps is\n \n          declare\n             K : Key_Type renames Position.Node.Key.all;\n+\n             E : Element_Type renames Position.Node.Element.all;\n+            pragma Unreferenced (E);\n \n          begin\n             Process (K, E);\n+\n          exception\n             when others =>\n                L := L - 1;"}, {"sha": "93e1c841efa3c16ea9f64a6d2ed13404d387d83b", "filename": "gcc/ada/a-ciormu.adb", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fa-ciormu.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fa-ciormu.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ciormu.adb?ref=67ce0d7e96fd6802815643dbfb8505fad5318e95", "patch": "@@ -7,7 +7,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2004-2006, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1052,6 +1052,7 @@ package body Ada.Containers.Indefinite_Ordered_Multisets is\n \n    procedure Insert (Container : in out Set; New_Item : Element_Type) is\n       Position : Cursor;\n+      pragma Unreferenced (Position);\n    begin\n       Insert (Container, New_Item, Position);\n    end Insert;\n@@ -1794,9 +1795,9 @@ package body Ada.Containers.Indefinite_Ordered_Multisets is\n    ------------\n \n    function To_Set (New_Item : Element_Type) return Set is\n-      Tree     : Tree_Type;\n-      Node     : Node_Access;\n-\n+      Tree : Tree_Type;\n+      Node : Node_Access;\n+      pragma Unreferenced (Node);\n    begin\n       Insert_Sans_Hint (Tree, New_Item, Node);\n       return Set'(Controlled with Tree);"}, {"sha": "e12abaca00b9c49c4687a7043310126459df68fd", "filename": "gcc/ada/a-ciorse.adb", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fa-ciorse.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fa-ciorse.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ciorse.adb?ref=67ce0d7e96fd6802815643dbfb8505fad5318e95", "patch": "@@ -7,7 +7,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2004-2006, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -964,7 +964,10 @@ package body Ada.Containers.Indefinite_Ordered_Sets is\n \n    procedure Insert (Container : in out Set; New_Item  : Element_Type) is\n       Position : Cursor;\n+      pragma Unreferenced (Position);\n+\n       Inserted : Boolean;\n+\n    begin\n       Insert (Container, New_Item, Position, Inserted);\n \n@@ -1032,7 +1035,8 @@ package body Ada.Containers.Indefinite_Ordered_Sets is\n       Src_Node : Node_Access;\n       Dst_Node : out Node_Access)\n    is\n-      Success  : Boolean;\n+      Success : Boolean;\n+      pragma Unreferenced (Success);\n \n       function New_Node return Node_Access;\n \n@@ -1434,6 +1438,7 @@ package body Ada.Containers.Indefinite_Ordered_Sets is\n                Element_Keys.Find (Container.Tree, New_Item);\n \n       X : Element_Access;\n+      pragma Warnings (Off, X);\n \n    begin\n       if Node = null then\n@@ -1687,9 +1692,11 @@ package body Ada.Containers.Indefinite_Ordered_Sets is\n    ------------\n \n    function To_Set (New_Item : Element_Type) return Set is\n-      Tree     : Tree_Type;\n+      Tree : Tree_Type;\n+\n       Node     : Node_Access;\n       Inserted : Boolean;\n+      pragma Unreferenced (Node, Inserted);\n \n    begin\n       Insert_Sans_Hint (Tree, New_Item, Node, Inserted);"}, {"sha": "d8f7ff95d77b8254d5d77acbda68dccdbe4847ec", "filename": "gcc/ada/a-cohama.adb", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fa-cohama.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fa-cohama.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cohama.adb?ref=67ce0d7e96fd6802815643dbfb8505fad5318e95", "patch": "@@ -520,6 +520,8 @@ package body Ada.Containers.Hashed_Maps is\n       New_Item  : Element_Type)\n    is\n       Position : Cursor;\n+      pragma Unreferenced (Position);\n+\n       Inserted : Boolean;\n \n    begin\n@@ -850,6 +852,7 @@ package body Ada.Containers.Hashed_Maps is\n          declare\n             K : Key_Type renames Position.Node.Key;\n             E : Element_Type renames Position.Node.Element;\n+            pragma Unreferenced (E);\n          begin\n             Process (K, E);\n          exception"}, {"sha": "a3de9502734805d47e397dd681cd269c6af077f8", "filename": "gcc/ada/a-cohase.adb", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fa-cohase.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fa-cohase.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cohase.adb?ref=67ce0d7e96fd6802815643dbfb8505fad5318e95", "patch": "@@ -645,6 +645,8 @@ package body Ada.Containers.Hashed_Sets is\n       New_Item  : Element_Type)\n    is\n       Position : Cursor;\n+      pragma Unreferenced (Position);\n+\n       Inserted : Boolean;\n \n    begin\n@@ -1329,9 +1331,11 @@ package body Ada.Containers.Hashed_Sets is\n    ------------\n \n    function To_Set (New_Item : Element_Type) return Set is\n-      HT       : Hash_Table_Type;\n+      HT : Hash_Table_Type;\n+\n       Node     : Node_Access;\n       Inserted : Boolean;\n+      pragma Unreferenced (Node, Inserted);\n \n    begin\n       Insert (HT, New_Item, Node, Inserted);\n@@ -1375,6 +1379,7 @@ package body Ada.Containers.Hashed_Sets is\n \n          Tgt_Node : Node_Access;\n          Success  : Boolean;\n+         pragma Unreferenced (Tgt_Node, Success);\n \n       --  Start of processing for Process\n "}, {"sha": "c97f4eb2406c6d276c6a7207391e8685b40392be", "filename": "gcc/ada/a-coinve.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fa-coinve.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fa-coinve.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-coinve.adb?ref=67ce0d7e96fd6802815643dbfb8505fad5318e95", "patch": "@@ -620,6 +620,8 @@ package body Ada.Containers.Indefinite_Vectors is\n       Position  : in out Cursor;\n       Count     : Count_Type := 1)\n    is\n+      pragma Warnings (Off, Position);\n+\n    begin\n       if Position.Container = null then\n          raise Constraint_Error with \"Position cursor has no element\";"}, {"sha": "5cbfa0915af3bbc117dc7af7ca4e196be8f09d70", "filename": "gcc/ada/a-convec.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fa-convec.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fa-convec.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-convec.adb?ref=67ce0d7e96fd6802815643dbfb8505fad5318e95", "patch": "@@ -425,6 +425,8 @@ package body Ada.Containers.Vectors is\n       Position  : in out Cursor;\n       Count     : Count_Type := 1)\n    is\n+      pragma Warnings (Off, Position);\n+\n    begin\n       if Position.Container = null then\n          raise Constraint_Error with \"Position cursor has no element\";"}, {"sha": "01074d5851248f48b1ab4554c800fcd9049fd93b", "filename": "gcc/ada/a-coorma.adb", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fa-coorma.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fa-coorma.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-coorma.adb?ref=67ce0d7e96fd6802815643dbfb8505fad5318e95", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2004-2006, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -595,6 +595,8 @@ package body Ada.Containers.Ordered_Maps is\n       New_Item  : Element_Type)\n    is\n       Position : Cursor;\n+      pragma Unreferenced (Position);\n+\n       Inserted : Boolean;\n \n    begin\n@@ -1181,10 +1183,13 @@ package body Ada.Containers.Ordered_Maps is\n \n          declare\n             K : Key_Type renames Position.Node.Key;\n+\n             E : Element_Type renames Position.Node.Element;\n+            pragma Unreferenced (E);\n \n          begin\n             Process (K, E);\n+\n          exception\n             when others =>\n                L := L - 1;"}, {"sha": "07f42a35261ba6a72d4501619b4fd31041937980", "filename": "gcc/ada/a-coormu.adb", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fa-coormu.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fa-coormu.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-coormu.adb?ref=67ce0d7e96fd6802815643dbfb8505fad5318e95", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2004-2006, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -983,6 +983,7 @@ package body Ada.Containers.Ordered_Multisets is\n \n    procedure Insert (Container : in out Set; New_Item : Element_Type) is\n       Position : Cursor;\n+      pragma Unreferenced (Position);\n    begin\n       Insert (Container, New_Item, Position);\n    end Insert;\n@@ -1700,9 +1701,9 @@ package body Ada.Containers.Ordered_Multisets is\n    ------------\n \n    function To_Set (New_Item : Element_Type) return Set is\n-      Tree     : Tree_Type;\n-      Node     : Node_Access;\n-\n+      Tree : Tree_Type;\n+      Node : Node_Access;\n+      pragma Unreferenced (Node);\n    begin\n       Insert_Sans_Hint (Tree, New_Item, Node);\n       return Set'(Controlled with Tree);"}, {"sha": "8a75ee485aef853edd13f2e4e37c5e605636e135", "filename": "gcc/ada/a-coorse.adb", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fa-coorse.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fa-coorse.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-coorse.adb?ref=67ce0d7e96fd6802815643dbfb8505fad5318e95", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2004-2006, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -891,6 +891,8 @@ package body Ada.Containers.Ordered_Sets is\n       New_Item  : Element_Type)\n    is\n       Position : Cursor;\n+      pragma Unreferenced (Position);\n+\n       Inserted : Boolean;\n \n    begin\n@@ -955,6 +957,7 @@ package body Ada.Containers.Ordered_Sets is\n       Dst_Node : out Node_Access)\n    is\n       Success : Boolean;\n+      pragma Unreferenced (Success);\n \n       function New_Node return Node_Access;\n       pragma Inline (New_Node);\n@@ -1591,7 +1594,7 @@ package body Ada.Containers.Ordered_Sets is\n       Tree     : Tree_Type;\n       Node     : Node_Access;\n       Inserted : Boolean;\n-\n+      pragma Unreferenced (Node, Inserted);\n    begin\n       Insert_Sans_Hint (Tree, New_Item, Node, Inserted);\n       return Set'(Controlled with Tree);"}, {"sha": "83c980dc182d174a9c0be3cf030d1d235d1cac90", "filename": "gcc/ada/a-crbtgo.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fa-crbtgo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fa-crbtgo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-crbtgo.adb?ref=67ce0d7e96fd6802815643dbfb8505fad5318e95", "patch": "@@ -7,7 +7,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2004-2006, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -598,6 +598,7 @@ package body Ada.Containers.Red_Black_Trees.Generic_Operations is\n \n    procedure Generic_Delete_Tree (X : in out Node_Access) is\n       Y : Node_Access;\n+      pragma Warnings (Off, Y);\n    begin\n       while X /= null loop\n          Y := Right (X);"}, {"sha": "b5b22bdf82d619e49a6bc73ddf3887bfcbc5910e", "filename": "gcc/ada/a-crdlli.adb", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fa-crdlli.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fa-crdlli.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-crdlli.adb?ref=67ce0d7e96fd6802815643dbfb8505fad5318e95", "patch": "@@ -7,7 +7,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2004-2006, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -664,7 +664,7 @@ package body Ada.Containers.Restricted_Doubly_Linked_Lists is\n       Count     : Count_Type := 1)\n    is\n       Position : Cursor;\n-\n+      pragma Unreferenced (Position);\n    begin\n       Insert (Container, Before, New_Item, Position, Count);\n    end Insert;\n@@ -1300,7 +1300,9 @@ package body Ada.Containers.Restricted_Doubly_Linked_Lists is\n \n       declare\n          I_Next : constant Cursor := Next (I);\n+\n          J_Copy : Cursor := J;\n+         pragma Warnings (Off, J_Copy);\n \n       begin\n          if I_Next = J then\n@@ -1309,7 +1311,9 @@ package body Ada.Containers.Restricted_Doubly_Linked_Lists is\n          else\n             declare\n                J_Next : constant Cursor := Next (J);\n+\n                I_Copy : Cursor := I;\n+               pragma Warnings (Off, I_Copy);\n \n             begin\n                if J_Next = I then"}, {"sha": "098d5a9a2c5b2f95be8b4adf3896109931271066", "filename": "gcc/ada/a-ngrear.adb", "status": "modified", "additions": 17, "deletions": 6, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fa-ngrear.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fa-ngrear.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ngrear.adb?ref=67ce0d7e96fd6802815643dbfb8505fad5318e95", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---            Copyright (C) 2006, Free Software Foundation, Inc.            --\n+--          Copyright (C) 2006-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -455,11 +455,13 @@ package body Ada.Numerics.Generic_Real_Arrays is\n       Vectors : out Real_Matrix)\n    is\n       N      : constant Natural := Length (A);\n-      E      : Real_Vector (1 .. N);\n       Tau    : Real_Vector (1 .. N);\n       L_Work : Real_Vector (1 .. 1);\n       Info   : aliased Integer;\n \n+      E : Real_Vector (1 .. N);\n+      pragma Warnings (Off, E);\n+\n    begin\n       if Values'Length /= N then\n          raise Constraint_Error with \"wrong length for output vector\";\n@@ -491,7 +493,9 @@ package body Ada.Numerics.Generic_Real_Arrays is\n              Info   => Info'Access);\n \n       declare\n-         Work   : Real_Vector (1 .. Integer'Max (Integer (L_Work (1)), 2 * N));\n+         Work : Real_Vector (1 .. Integer'Max (Integer (L_Work (1)), 2 * N));\n+         pragma Warnings (Off, Work);\n+\n          Comp_Z : aliased constant Character := 'V';\n \n       begin\n@@ -554,12 +558,16 @@ package body Ada.Numerics.Generic_Real_Arrays is\n       Values : out Real_Vector)\n    is\n       N      : constant Natural := Length (A);\n-      B      : Real_Matrix (1 .. N, 1 .. N);\n-      E      : Real_Vector (1 .. N);\n-      Tau    : Real_Vector (1 .. N);\n       L_Work : Real_Vector (1 .. 1);\n       Info   : aliased Integer;\n \n+      B   : Real_Matrix (1 .. N, 1 .. N);\n+      Tau : Real_Vector (1 .. N);\n+      E   : Real_Vector (1 .. N);\n+      pragma Warnings (Off, B);\n+      pragma Warnings (Off, Tau);\n+      pragma Warnings (Off, E);\n+\n    begin\n       if Values'Length /= N then\n          raise Constraint_Error with \"wrong length for output vector\";\n@@ -592,6 +600,7 @@ package body Ada.Numerics.Generic_Real_Arrays is\n \n       declare\n          Work : Real_Vector (1 .. Integer'Min (Integer (L_Work (1)), 4 * N));\n+         pragma Warnings (Off, Work);\n \n       begin\n          --  Reduce matrix to tridiagonal form\n@@ -677,6 +686,8 @@ package body Ada.Numerics.Generic_Real_Arrays is\n \n       declare\n          Work : Real_Vector (1 .. Integer (L_Work (1)));\n+         pragma Warnings (Off, Work);\n+\n       begin\n          --  Compute inverse from LU decomposition\n "}, {"sha": "397398b3e2495311a470e73879edb12c6b3e25d8", "filename": "gcc/ada/a-nuflra.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fa-nuflra.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fa-nuflra.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-nuflra.adb?ref=67ce0d7e96fd6802815643dbfb8505fad5318e95", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -117,7 +117,7 @@ package body Ada.Numerics.Float_Random is\n \n    function Euclid (P, Q : Int) return Int is\n       X, Y, GCD : Int;\n-\n+      pragma Unreferenced (Y, GCD);\n    begin\n       Euclid (P, Q, X, Y, GCD);\n       return X;"}, {"sha": "ad4f76f5df6cc521461f136192fbc925889bdb5f", "filename": "gcc/ada/a-rbtgso.adb", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fa-rbtgso.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fa-rbtgso.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-rbtgso.adb?ref=67ce0d7e96fd6802815643dbfb8505fad5318e95", "patch": "@@ -7,7 +7,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2004-2006, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -51,6 +51,7 @@ package body Ada.Containers.Red_Black_Trees.Generic_Set_Operations is\n       pragma Assert (Tree.Lock = 0);\n \n       Root : Node_Access := Tree.Root;\n+      pragma Warnings (Off, Root);\n \n    begin\n       Tree.Root := null;\n@@ -145,6 +146,7 @@ package body Ada.Containers.Red_Black_Trees.Generic_Set_Operations is\n       R_Node : Node_Access := Right.First;\n \n       Dst_Node : Node_Access;\n+      pragma Warnings (Off, Dst_Node);\n \n    begin\n       if Left'Address = Right'Address then\n@@ -268,6 +270,7 @@ package body Ada.Containers.Red_Black_Trees.Generic_Set_Operations is\n       R_Node : Node_Access := Right.First;\n \n       Dst_Node : Node_Access;\n+      pragma Warnings (Off, Dst_Node);\n \n    begin\n       if Left'Address = Right'Address then\n@@ -396,6 +399,7 @@ package body Ada.Containers.Red_Black_Trees.Generic_Set_Operations is\n       Src : Node_Access := Source.First;\n \n       New_Tgt_Node : Node_Access;\n+      pragma Warnings (Off, New_Tgt_Node);\n \n    begin\n       if Target.Busy > 0 then\n@@ -460,6 +464,7 @@ package body Ada.Containers.Red_Black_Trees.Generic_Set_Operations is\n       R_Node : Node_Access := Right.First;\n \n       Dst_Node : Node_Access;\n+      pragma Warnings (Off, Dst_Node);\n \n    begin\n       if Left'Address = Right'Address then"}, {"sha": "1feed2b4377eac9d33be82be5104623a10839609", "filename": "gcc/ada/a-tigeau.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fa-tigeau.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fa-tigeau.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-tigeau.adb?ref=67ce0d7e96fd6802815643dbfb8505fad5318e95", "patch": "@@ -319,7 +319,7 @@ package body Ada.Text_IO.Generic_Aux is\n       Ptr    : in out Integer)\n    is\n       Junk : Boolean;\n-\n+      pragma Unreferenced (Junk);\n    begin\n       Load_Extended_Digits (File, Buf, Ptr, Junk);\n    end Load_Extended_Digits;"}, {"sha": "57b9cb72d74e46d91b259ad483ff3f0d634e9fca", "filename": "gcc/ada/a-wtgeau.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fa-wtgeau.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fa-wtgeau.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-wtgeau.adb?ref=67ce0d7e96fd6802815643dbfb8505fad5318e95", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -345,7 +345,7 @@ package body Ada.Wide_Text_IO.Generic_Aux is\n       Ptr    : in out Integer)\n    is\n       Junk : Boolean;\n-\n+      pragma Unreferenced (Junk);\n    begin\n       Load_Extended_Digits (File, Buf, Ptr, Junk);\n    end Load_Extended_Digits;"}, {"sha": "fcf3633176727f9e095671530b4b9023dc7f5e71", "filename": "gcc/ada/a-ztgeau.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fa-ztgeau.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fa-ztgeau.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ztgeau.adb?ref=67ce0d7e96fd6802815643dbfb8505fad5318e95", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -345,7 +345,7 @@ package body Ada.Wide_Wide_Text_IO.Generic_Aux is\n       Ptr    : in out Integer)\n    is\n       Junk : Boolean;\n-\n+      pragma Unreferenced (Junk);\n    begin\n       Load_Extended_Digits (File, Buf, Ptr, Junk);\n    end Load_Extended_Digits;"}, {"sha": "ba6a5a3c1cef32ffa7ca14598eb0b3d32f272fcb", "filename": "gcc/ada/bindgen.adb", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fbindgen.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fbindgen.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindgen.adb?ref=67ce0d7e96fd6802815643dbfb8505fad5318e95", "patch": "@@ -2400,9 +2400,9 @@ package body Bindgen is\n    -----------------------\n \n    procedure Gen_Output_File_C (Filename : String) is\n-\n       Bfile : Name_Id;\n-      --  Name of generated bind file\n+      pragma Warnings (Off, Bfile);\n+      --  Name of generated bind file (not referenced)\n \n    begin\n       Create_Binder_Output (Filename, 'c', Bfile);\n@@ -2421,7 +2421,6 @@ package body Bindgen is\n       if Use_Pragma_Linker_Constructor then\n          WBI (\"extern void \" & Ada_Init_Name.all &\n               \" (void) __attribute__((constructor));\");\n-\n       else\n          WBI (\"extern void \" & Ada_Init_Name.all & \" (void);\");\n       end if;"}, {"sha": "f9f0c1041bf93bd862bf8414dfb584d8e6601483", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 8, "deletions": 10, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=67ce0d7e96fd6802815643dbfb8505fad5318e95", "patch": "@@ -1315,7 +1315,10 @@ package body Checks is\n       LOK : Boolean;\n       Rlo : Uint;\n       Rhi : Uint;\n-      ROK : Boolean;\n+      ROK   : Boolean;\n+\n+      pragma Warnings (Off, Lhi);\n+      --  Don't actually use this value\n \n    begin\n       if Expander_Active\n@@ -5201,7 +5204,10 @@ package body Checks is\n \n       Num_Saved_Checks := 0;\n \n-      for J in 1 .. Saved_Checks_TOS loop\n+      --  Note: the Int'Min here avoids any possibility of J being out of\n+      --  range when called from e.g. Conditional_Statements_Begin.\n+\n+      for J in 1 .. Int'Min (Saved_Checks_TOS, Saved_Checks_Stack'Last) loop\n          Saved_Checks_Stack (J) := 0;\n       end loop;\n    end Kill_All_Checks;\n@@ -6658,10 +6664,6 @@ package body Checks is\n \n                   L_Index : Node_Id;\n                   R_Index : Node_Id;\n-                  L_Low   : Node_Id;\n-                  L_High  : Node_Id;\n-                  R_Low   : Node_Id;\n-                  R_High  : Node_Id;\n \n                begin\n                   L_Index := First_Index (T_Typ);\n@@ -6672,9 +6674,6 @@ package body Checks is\n                                or else\n                              Nkind (R_Index) = N_Raise_Constraint_Error)\n                      then\n-                        Get_Index_Bounds (L_Index, L_Low, L_High);\n-                        Get_Index_Bounds (R_Index, R_Low, R_High);\n-\n                         --  Deal with compile time length check. Note that we\n                         --  skip this in the access case, because the access\n                         --  value may be null, so we cannot know statically.\n@@ -6691,7 +6690,6 @@ package body Checks is\n                               Evolve_Or_Else\n                                 (Cond,\n                                  Range_Equal_E_Cond (Exptyp, T_Typ, Indx));\n-\n                            else\n                               Evolve_Or_Else\n                                 (Cond, Range_E_Cond (Exptyp, T_Typ, Indx));"}, {"sha": "ffa4ad08794b3bd47e8152178a256f9062a542ce", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 39, "deletions": 14, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=67ce0d7e96fd6802815643dbfb8505fad5318e95", "patch": "@@ -174,7 +174,6 @@ package body Einfo is\n    --    Directly_Designated_Type        Node20\n    --    Discriminant_Checking_Func      Node20\n    --    Discriminant_Default_Value      Node20\n-   --    Last_Assignment                 Node20\n    --    Last_Entity                     Node20\n    --    Register_Exception_Call         Node20\n    --    Scalar_Range                    Node20\n@@ -217,7 +216,8 @@ package body Einfo is\n    --    DT_Offset_To_Top_Func           Node25\n    --    Task_Body_Procedure             Node25\n \n-   --    Dispatch_Table_Wrapper          Node16\n+   --    Dispatch_Table_Wrapper          Node26\n+   --    Last_Assignment                 Node26\n    --    Overridden_Operation            Node26\n    --    Package_Instantiation           Node26\n    --    Related_Interface               Node26\n@@ -554,7 +554,7 @@ package body Einfo is\n          (Ekind (Id) = E_Constant\n            or else Ekind (Id) = E_Variable\n            or else Ekind (Id) = E_Generic_In_Out_Parameter\n-           or else Ekind (Id) in  E_In_Parameter .. E_In_Out_Parameter);\n+           or else Is_Formal (Id));\n       return Node17 (Id);\n    end Actual_Subtype;\n \n@@ -2051,8 +2051,8 @@ package body Einfo is\n \n    function Last_Assignment (Id : E) return N is\n    begin\n-      pragma Assert (Ekind (Id) = E_Variable);\n-      return Node20 (Id);\n+      pragma Assert (Is_Assignable (Id));\n+      return Node26 (Id);\n    end Last_Assignment;\n \n    function Last_Entity (Id : E) return E is\n@@ -2608,6 +2608,11 @@ package body Einfo is\n       return Ekind (Id) in Array_Kind;\n    end Is_Array_Type;\n \n+   function Is_Assignable                       (Id : E) return B is\n+   begin\n+      return Ekind (Id) in Assignable_Kind;\n+   end Is_Assignable;\n+\n    function Is_Class_Wide_Type                  (Id : E) return B is\n    begin\n       return Ekind (Id) in Class_Wide_Kind;\n@@ -2855,7 +2860,7 @@ package body Einfo is\n          (Ekind (Id) = E_Constant\n            or else Ekind (Id) = E_Variable\n            or else Ekind (Id) = E_Generic_In_Out_Parameter\n-           or else Ekind (Id) in  E_In_Parameter .. E_In_Out_Parameter);\n+           or else Is_Formal (Id));\n       Set_Node17 (Id, V);\n    end Set_Actual_Subtype;\n \n@@ -4378,8 +4383,8 @@ package body Einfo is\n \n    procedure Set_Last_Assignment (Id : E; V : N) is\n    begin\n-      pragma Assert (Ekind (Id) = E_Variable);\n-      Set_Node20 (Id, V);\n+      pragma Assert (Is_Assignable (Id));\n+      Set_Node26 (Id, V);\n    end Set_Last_Assignment;\n \n    procedure Set_Last_Entity (Id : E; V : E) is\n@@ -5489,11 +5494,29 @@ package body Einfo is\n \n       --  Normal case, search enclosing scopes\n \n+      --  Note: the test for Present (S) should not be required, it is a\n+      --  defence against an ill-formed tree.\n+\n       S := Scope (Id);\n-      while S /= Standard_Standard\n-        and then not Is_Dynamic_Scope (S)\n       loop\n-         S := Scope (S);\n+         --  If we somehow got an empty value for Scope, the tree must be\n+         --  malformed. Rather than blow up we return Standard in this case.\n+\n+         if No (S) then\n+            return Standard_Standard;\n+\n+         --  Quit if we get to standard or a dynamic scope\n+\n+         elsif S = Standard_Standard\n+           or else Is_Dynamic_Scope (S)\n+         then\n+            return S;\n+\n+         --  Otherwise keep climbing\n+\n+         else\n+            S := Scope (S);\n+         end if;\n       end loop;\n \n       return S;\n@@ -8038,9 +8061,6 @@ package body Einfo is\n          when E_Exception                                  =>\n             Write_Str (\"Register_Exception_Call\");\n \n-         when E_Variable                                   =>\n-            Write_Str (\"Last_Assignment\");\n-\n          when others                                       =>\n             Write_Str (\"Field20??\");\n       end case;\n@@ -8283,6 +8303,11 @@ package body Einfo is\n               E_Record_Type_With_Private                   =>\n             Write_Str (\"Dispatch_Table_Wrapper\");\n \n+         when E_In_Out_Parameter                               |\n+              E_Out_Parameter                           |\n+              E_Variable                                   =>\n+            Write_Str (\"Last_Assignment\");\n+\n          when others                                       =>\n             Write_Str (\"Field26??\");\n       end case;"}, {"sha": "8e659f12ab302cc50e84cc883e664e54e9073605", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 28, "deletions": 18, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=67ce0d7e96fd6802815643dbfb8505fad5318e95", "patch": "@@ -2711,11 +2711,12 @@ package Einfo is\n --       initialization, it may or may not be set if the type does have\n --       preelaborable initialization.\n \n---    Last_Assignment (Node20)\n---       Present in entities for variables. Set for a local variable to point\n---       to the left side of an assignment statement assigning a value to the\n---       variable. Cleared if the value of the variable is referenced. Used to\n---       warn about dubious assignment statements whose value is not used.\n+--    Last_Assignment (Node26)\n+--       Present in entities for variables, and OUT or IN OUT formals. Set for\n+--       a local variable or formal to point to the left side of an assignment\n+--       statement assigning a value to the variable. Cleared if the value of\n+--       the entity is referenced. Used to warn about dubious assignment\n+--       statements whose value is not used.\n \n --    Last_Entity (Node20)\n --       Present in all entities which act as scopes to which a list of\n@@ -3630,9 +3631,6 @@ package Einfo is\n       -- Objects --\n       -------------\n \n-      E_Variable,\n-      --  Variables created by an object declaration with no constant keyword\n-\n       E_Component,\n       --  Components of a record declaration, private declarations of\n       --  protected objects.\n@@ -3647,21 +3645,24 @@ package Einfo is\n       E_Loop_Parameter,\n       --  A loop parameter created by a for loop\n \n+      E_Variable,\n+      --  Variables created by an object declaration with no constant keyword\n+\n       ------------------------\n       -- Parameter Entities --\n       ------------------------\n \n       --  Parameters are also objects\n \n-      E_In_Parameter,\n-      --  An in parameter of a subprogram or entry\n-\n       E_Out_Parameter,\n       --  An out parameter of a subprogram or entry\n \n       E_In_Out_Parameter,\n       --  An in-out parameter of a subprogram or entry\n \n+      E_In_Parameter,\n+      --  An in parameter of a subprogram or entry\n+\n       --------------------------------\n       -- Generic Parameter Entities --\n       --------------------------------\n@@ -4046,6 +4047,11 @@ package Einfo is\n    --  E_String_Subtype\n        E_String_Literal_Subtype;\n \n+   subtype Assignable_Kind             is Entity_Kind range\n+       E_Variable ..\n+   --  E_Out_Parameter\n+       E_In_Out_Parameter;\n+\n    subtype Class_Wide_Kind             is Entity_Kind range\n        E_Class_Wide_Type ..\n        E_Class_Wide_Subtype;\n@@ -4156,9 +4162,9 @@ package Einfo is\n        E_Floating_Point_Subtype;\n \n    subtype Formal_Kind                 is Entity_Kind range\n-       E_In_Parameter ..\n-   --  E_Out_Parameter\n-       E_In_Out_Parameter;\n+       E_Out_Parameter ..\n+   --  E_In_Out_Parameter\n+       E_In_Parameter;\n \n    subtype Formal_Object_Kind          is Entity_Kind range\n        E_Generic_In_Out_Parameter ..\n@@ -4214,14 +4220,14 @@ package Einfo is\n        E_Floating_Point_Subtype;\n \n    subtype Object_Kind                is Entity_Kind range\n-       E_Variable ..\n-   --  E_Component\n+       E_Component ..\n    --  E_Constant\n    --  E_Discriminant\n    --  E_Loop_Parameter\n-   --  E_In_Parameter\n+   --  E_Variable\n    --  E_Out_Parameter\n    --  E_In_Out_Parameter\n+   --  E_In_Parameter\n    --  E_Generic_In_Out_Parameter\n        E_Generic_In_Parameter;\n \n@@ -4902,12 +4908,14 @@ package Einfo is\n    --    Extra_Formal                        (Node15)\n    --    Unset_Reference                     (Node16)\n    --    Actual_Subtype                      (Node17)\n+\n    --    Renamed_Object                      (Node18)\n    --    Spec_Entity                         (Node19)\n    --    Default_Value                       (Node20)\n    --    Default_Expr_Function               (Node21)\n    --    Protected_Formal                    (Node22)\n    --    Extra_Constrained                   (Node23)\n+   --    Last_Assignment                     (Node26)   (OUT, IN-OUT only)\n    --    Has_Initial_Value                   (Flag219)\n    --    Is_Controlling_Formal               (Flag97)\n    --    Is_Optional_Parameter               (Flag134)\n@@ -5282,11 +5290,11 @@ package Einfo is\n    --    Actual_Subtype                      (Node17)\n    --    Renamed_Object                      (Node18)\n    --    Size_Check_Code                     (Node19)\n-   --    Last_Assignment                     (Node20)\n    --    Interface_Name                      (Node21)\n    --    Shared_Var_Assign_Proc              (Node22)\n    --    Extra_Constrained                   (Node23)\n    --    Debug_Renaming_Link                 (Node25)\n+   --    Last_Assignment                     (Node26)\n    --    Has_Alignment_Clause                (Flag46)\n    --    Has_Atomic_Components               (Flag86)\n    --    Has_Biased_Representation           (Flag139)\n@@ -5901,6 +5909,7 @@ package Einfo is\n    function Is_Access_Type                      (Id : E) return B;\n    function Is_Access_Protected_Subprogram_Type (Id : E) return B;\n    function Is_Array_Type                       (Id : E) return B;\n+   function Is_Assignable                       (Id : E) return B;\n    function Is_Class_Wide_Type                  (Id : E) return B;\n    function Is_Composite_Type                   (Id : E) return B;\n    function Is_Concurrent_Body                  (Id : E) return B;\n@@ -6846,6 +6855,7 @@ package Einfo is\n    pragma Inline (Is_Access_Protected_Subprogram_Type);\n    pragma Inline (Is_Aliased);\n    pragma Inline (Is_Array_Type);\n+   pragma Inline (Is_Assignable);\n    pragma Inline (Is_Asynchronous);\n    pragma Inline (Is_Atomic);\n    pragma Inline (Is_Bit_Packed_Array);"}, {"sha": "ab5e49fbf7169aa24c2ae4e9f6f961ceeef6fc5c", "filename": "gcc/ada/eval_fat.adb", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Feval_fat.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Feval_fat.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feval_fat.adb?ref=67ce0d7e96fd6802815643dbfb8505fad5318e95", "patch": "@@ -114,6 +114,7 @@ package body Eval_Fat is\n    function Compose (RT : R; Fraction : T; Exponent : UI) return T is\n       Arg_Frac : T;\n       Arg_Exp  : UI;\n+      pragma Warnings (Off, Arg_Exp);\n    begin\n       if UR_Is_Zero (Fraction) then\n          return Fraction;\n@@ -435,6 +436,7 @@ package body Eval_Fat is\n    function Exponent (RT : R; X : T) return UI is\n       X_Frac : UI;\n       X_Exp  : UI;\n+      pragma Warnings (Off, X_Frac);\n    begin\n       if UR_Is_Zero (X) then\n          return Uint_0;\n@@ -470,6 +472,7 @@ package body Eval_Fat is\n    function Fraction (RT : R; X : T) return T is\n       X_Frac : T;\n       X_Exp  : UI;\n+      pragma Warnings (Off, X_Exp);\n    begin\n       if UR_Is_Zero (X) then\n          return X;\n@@ -726,6 +729,8 @@ package body Eval_Fat is\n       K        : UI;\n       P_Even   : Boolean;\n \n+      pragma Warnings (Off, Arg_Frac);\n+\n    begin\n       if UR_Is_Positive (X) then\n          Sign_X :=  Ureal_1;"}, {"sha": "451fa0b7d38ad7b3a0f4365634373e258d2b153e", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 42, "deletions": 4, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=67ce0d7e96fd6802815643dbfb8505fad5318e95", "patch": "@@ -2412,8 +2412,30 @@ package body Exp_Ch6 is\n \n          if Ekind (Formal) /= E_In_Parameter\n            and then Is_Entity_Name (Actual)\n+           and then Present (Entity (Actual))\n          then\n-            Kill_Current_Values (Entity (Actual));\n+            declare\n+               Ent : constant Entity_Id := Entity (Actual);\n+               Sav : Node_Id;\n+\n+            begin\n+               --  For an OUT parameter that is an assignable entity, we do not\n+               --  want to clobber the Last_Assignment field, since if it is\n+               --  set, it was precisely because it is indeed an OUT parameter!\n+\n+               if Ekind (Formal) = E_Out_Parameter\n+                 and then Is_Assignable (Ent)\n+               then\n+                  Sav := Last_Assignment (Ent);\n+                  Kill_Current_Values (Ent);\n+                  Set_Last_Assignment (Ent, Sav);\n+\n+                  --  For all other cases, just kill the current values\n+\n+               else\n+                  Kill_Current_Values (Ent);\n+               end if;\n+            end;\n          end if;\n \n          --  If the formal is class wide and the actual is an aggregate, force\n@@ -5685,10 +5707,26 @@ package body Exp_Ch6 is\n          --  ensure the correct replacement of the object declaration by the\n          --  object renaming declaration to avoid homograph conflicts (since\n          --  the object declaration's defining identifier was already entered\n-         --  in current scope).\n+         --  in current scope). The Next_Entity links of the two entities also\n+         --  have to be swapped since the entities are part of the return\n+         --  scope's entity list and the list structure would otherwise be\n+         --  corrupted.\n+\n+         declare\n+            Renaming_Def_Id  : constant Entity_Id :=\n+                                 Defining_Identifier (Object_Decl);\n+            Next_Entity_Temp : constant Entity_Id :=\n+                                 Next_Entity (Renaming_Def_Id);\n+         begin\n+            Set_Chars (Renaming_Def_Id, Chars (Obj_Def_Id));\n+\n+            --  Swap next entity links in preparation for exchanging entities\n \n-         Set_Chars (Defining_Identifier (Object_Decl), Chars (Obj_Def_Id));\n-         Exchange_Entities (Defining_Identifier (Object_Decl), Obj_Def_Id);\n+            Set_Next_Entity (Renaming_Def_Id, Next_Entity (Obj_Def_Id));\n+            Set_Next_Entity (Obj_Def_Id, Next_Entity_Temp);\n+\n+            Exchange_Entities (Renaming_Def_Id, Obj_Def_Id);\n+         end;\n       end if;\n \n       --  If the object entity has a class-wide Etype, then we need to change"}, {"sha": "98268d246e92d09cd504377267cce8001fc3789e", "filename": "gcc/ada/exp_fixd.adb", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fexp_fixd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fexp_fixd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_fixd.adb?ref=67ce0d7e96fd6802815643dbfb8505fad5318e95", "patch": "@@ -416,6 +416,8 @@ package body Exp_Fixd is\n             Rnn  : Entity_Id;\n             Code : List_Id;\n \n+            pragma Warnings (Off, Rnn);\n+\n          begin\n             Build_Double_Divide_Code (N, X, Y, Z, Qnn, Rnn, Code);\n             Insert_Actions (N, Code);\n@@ -803,6 +805,8 @@ package body Exp_Fixd is\n             Rnn  : Entity_Id;\n             Code : List_Id;\n \n+            pragma Warnings (Off, Rnn);\n+\n          begin\n             Build_Scaled_Divide_Code (N, X, Y, Z, Qnn, Rnn, Code);\n             Insert_Actions (N, Code);"}, {"sha": "b34a1ef80dcb578bf735494aa229e9e72224960e", "filename": "gcc/ada/exp_smem.adb", "status": "modified", "additions": 7, "deletions": 39, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fexp_smem.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fexp_smem.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_smem.adb?ref=67ce0d7e96fd6802815643dbfb8505fad5318e95", "patch": "@@ -69,7 +69,7 @@ package body Exp_Smem is\n    function Is_Out_Actual (N : Node_Id) return Boolean;\n    --  In a similar manner, this function determines if N appears as an\n    --  OUT or IN OUT parameter to a procedure call. If the result is\n-   --  True, then Insert_Node is set to point to the assignment.\n+   --  True, then Insert_Node is set to point to the call.\n \n    ---------------------\n    -- Add_Read_Before --\n@@ -245,50 +245,18 @@ package body Exp_Smem is\n    -------------------\n \n    function Is_Out_Actual (N : Node_Id) return Boolean is\n-      Parnt  : constant Node_Id := Parent (N);\n-      Formal : Entity_Id;\n-      Call   : Node_Id;\n-      Actual : Node_Id;\n+      Kind : Entity_Kind;\n+      Call : Node_Id;\n \n    begin\n-      if (Nkind (Parnt) = N_Indexed_Component\n-            or else\n-          Nkind (Parnt) = N_Selected_Component)\n-        and then N = Prefix (Parnt)\n-      then\n-         return Is_Out_Actual (Parnt);\n-\n-      elsif Nkind (Parnt) = N_Parameter_Association\n-        and then N = Explicit_Actual_Parameter (Parnt)\n-      then\n-         Call := Parent (Parnt);\n-\n-      elsif Nkind (Parnt) = N_Procedure_Call_Statement then\n-         Call := Parnt;\n+      Find_Actual_Mode (N, Kind, Call);\n \n+      if Kind = E_Out_Parameter or else Kind = E_In_Out_Parameter then\n+         Insert_Node := Call;\n+         return True;\n       else\n          return False;\n       end if;\n-\n-      --  Fall here if we are definitely a parameter\n-\n-      Actual := First_Actual (Call);\n-      Formal := First_Formal (Entity (Name (Call)));\n-\n-      loop\n-         if Actual = N then\n-            if Ekind (Formal) /= E_In_Parameter then\n-               Insert_Node := Call;\n-               return True;\n-            else\n-               return False;\n-            end if;\n-\n-         else\n-            Actual := Next_Actual (Actual);\n-            Formal := Next_Formal (Formal);\n-         end if;\n-      end loop;\n    end Is_Out_Actual;\n \n    ---------------------------"}, {"sha": "8f286b3b6f7b528149004c5066c4424cb60a5439", "filename": "gcc/ada/fmap.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Ffmap.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Ffmap.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffmap.adb?ref=67ce0d7e96fd6802815643dbfb8505fad5318e95", "patch": "@@ -490,7 +490,7 @@ package body Fmap is\n          if Last_In_Table = 0 then\n             declare\n                Discard : Boolean;\n-\n+               pragma Warnings (Off, Discard);\n             begin\n                Delete_File (File_Name, Discard);\n             end;"}, {"sha": "c6ce9dfa451fbdedf5ee6750e74389a2ca247a08", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=67ce0d7e96fd6802815643dbfb8505fad5318e95", "patch": "@@ -1449,10 +1449,12 @@ package body Freeze is\n       procedure Freeze_Record_Type (Rec : Entity_Id) is\n          Comp : Entity_Id;\n          IR   : Node_Id;\n-         Junk : Boolean;\n          ADC  : Node_Id;\n          Prev : Entity_Id;\n \n+         Junk : Boolean;\n+         pragma Warnings (Off, Junk);\n+\n          Unplaced_Component : Boolean := False;\n          --  Set True if we find at least one component with no component\n          --  clause (used to warn about useless Pack pragmas).\n@@ -2899,8 +2901,10 @@ package body Freeze is\n                  and then Known_RM_Size (E)\n                then\n                   declare\n+                     SizC : constant Node_Id := Size_Clause (E);\n+\n                      Discard : Boolean;\n-                     SizC    : constant Node_Id := Size_Clause (E);\n+                     pragma Warnings (Off, Discard);\n \n                   begin\n                      --  It is not clear if it is possible to have no size"}, {"sha": "60a85b51c5dbce0a2e3ef01709e474f71c172f7b", "filename": "gcc/ada/g-awk.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fg-awk.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fg-awk.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-awk.adb?ref=67ce0d7e96fd6802815643dbfb8505fad5318e95", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 2000-2006 AdaCore                      --\n+--                     Copyright (C) 2000-2007, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1475,6 +1475,7 @@ package body GNAT.AWK is\n \n    procedure Split_Line (Session : Session_Type) is\n       Fields : Field_Table.Instance renames Session.Data.Fields;\n+      pragma Unreferenced (Fields);\n    begin\n       Field_Table.Init (Fields);\n       Split.Current_Line (Session.Data.Separators.all, Session);"}, {"sha": "e2edaff657de8ec7a39a65070641bedeee5336e8", "filename": "gcc/ada/g-calend.adb", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fg-calend.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fg-calend.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-calend.adb?ref=67ce0d7e96fd6802815643dbfb8505fad5318e95", "patch": "@@ -45,6 +45,7 @@ package body GNAT.Calendar is\n       Month    : Month_Number;\n       Day      : Day_Number;\n       Day_Secs : Day_Duration;\n+      pragma Unreferenced (Day_Secs);\n    begin\n       Split (Date, Year, Month, Day, Day_Secs);\n       return Julian_Day (Year, Month, Day) - Julian_Day (Year, 1, 1) + 1;\n@@ -59,6 +60,7 @@ package body GNAT.Calendar is\n       Month    : Month_Number;\n       Day      : Day_Number;\n       Day_Secs : Day_Duration;\n+      pragma Unreferenced (Day_Secs);\n    begin\n       Split (Date, Year, Month, Day, Day_Secs);\n       return Day_Name'Val ((Julian_Day (Year, Month, Day)) mod 7);\n@@ -76,6 +78,7 @@ package body GNAT.Calendar is\n       Minute     : Minute_Number;\n       Second     : Second_Number;\n       Sub_Second : Second_Duration;\n+      pragma Unreferenced (Year, Month, Day, Minute, Second, Sub_Second);\n    begin\n       Split (Date, Year, Month, Day, Hour, Minute, Second, Sub_Second);\n       return Hour;\n@@ -135,6 +138,7 @@ package body GNAT.Calendar is\n       Minute     : Minute_Number;\n       Second     : Second_Number;\n       Sub_Second : Second_Duration;\n+      pragma Unreferenced (Year, Month, Day, Hour, Second, Sub_Second);\n    begin\n       Split (Date, Year, Month, Day, Hour, Minute, Second, Sub_Second);\n       return Minute;\n@@ -152,6 +156,7 @@ package body GNAT.Calendar is\n       Minute     : Minute_Number;\n       Second     : Second_Number;\n       Sub_Second : Second_Duration;\n+      pragma Unreferenced (Year, Month, Day, Hour, Minute, Sub_Second);\n    begin\n       Split (Date, Year, Month, Day, Hour, Minute, Second, Sub_Second);\n       return Second;\n@@ -202,6 +207,7 @@ package body GNAT.Calendar is\n       Minute     : Minute_Number;\n       Second     : Second_Number;\n       Sub_Second : Second_Duration;\n+      pragma Unreferenced (Year, Month, Day, Hour, Minute, Second);\n    begin\n       Split (Date, Year, Month, Day, Hour, Minute, Second, Sub_Second);\n       return Sub_Second;\n@@ -220,6 +226,7 @@ package body GNAT.Calendar is\n       Second     : Second_Number;\n       Sub_Second : Second_Duration := 0.0) return Time\n    is\n+\n       Day_Secs : constant Day_Duration :=\n                    Day_Duration (Hour   * 3_600) +\n                    Day_Duration (Minute *    60) +\n@@ -297,6 +304,8 @@ package body GNAT.Calendar is\n       Shift      : Week_In_Year_Number;\n       Start_Week : Week_In_Year_Number;\n \n+      pragma Unreferenced (Hour, Minute, Second, Sub_Second);\n+\n       function Is_Leap (Year : Year_Number) return Boolean;\n       --  Return True if Year denotes a leap year. Leap centential years are\n       --  properly handled."}, {"sha": "e88d2ee6c43096385aac5285794c63763e54470f", "filename": "gcc/ada/g-diopit.adb", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fg-diopit.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fg-diopit.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-diopit.adb?ref=67ce0d7e96fd6802815643dbfb8505fad5318e95", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 2001-2005, AdaCore                     --\n+--                     Copyright (C) 2001-2007, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -78,10 +78,12 @@ package body GNAT.Directory_Operations.Iteration is\n       --------------------\n \n       procedure Read_Directory (Directory : Dir_Name_Str) is\n-         Dir    : Dir_Type;\n          Buffer : String (1 .. 2_048);\n          Last   : Natural;\n \n+         Dir : Dir_Type;\n+         pragma Warnings (Off, Dir);\n+\n       begin\n          Open (Dir, Directory);\n \n@@ -319,7 +321,10 @@ package body GNAT.Directory_Operations.Iteration is\n       is\n          File_Regexp : constant Regexp.Regexp :=\n                          Regexp.Compile (File_Pattern, Glob => True);\n-         Dir    : Dir_Type;\n+\n+         Dir : Dir_Type;\n+         pragma Warnings (Off, Dir);\n+\n          Buffer : String (1 .. 2_048);\n          Last   : Natural;\n "}, {"sha": "237f3f498fbfaa087eec5fe23f1f5d2ad3cd586d", "filename": "gcc/ada/g-expect.adb", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fg-expect.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fg-expect.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-expect.adb?ref=67ce0d7e96fd6802815643dbfb8505fad5318e95", "patch": "@@ -248,6 +248,7 @@ package body GNAT.Expect is\n \n    procedure Close (Descriptor : in out Process_Descriptor) is\n       Status : Integer;\n+      pragma Unreferenced (Status);\n    begin\n       Close (Descriptor, Status);\n    end Close;\n@@ -299,7 +300,7 @@ package body GNAT.Expect is\n       Full_Buffer : Boolean := False)\n    is\n       Matched : GNAT.Regpat.Match_Array (0 .. 0);\n-\n+      pragma Warnings (Off, Matched);\n    begin\n       Expect (Descriptor, Result, Regexp, Matched, Timeout, Full_Buffer);\n    end Expect;\n@@ -385,7 +386,9 @@ package body GNAT.Expect is\n       Full_Buffer : Boolean := False)\n    is\n       Patterns : Compiled_Regexp_Array (Regexps'Range);\n-      Matched  : GNAT.Regpat.Match_Array (0 .. 0);\n+\n+      Matched : GNAT.Regpat.Match_Array (0 .. 0);\n+      pragma Warnings (Off, Matched);\n \n    begin\n       for J in Regexps'Range loop\n@@ -407,7 +410,7 @@ package body GNAT.Expect is\n       Full_Buffer : Boolean := False)\n    is\n       Matched : GNAT.Regpat.Match_Array (0 .. 0);\n-\n+      pragma Warnings (Off, Matched);\n    begin\n       Expect (Descriptor, Result, Regexps, Matched, Timeout, Full_Buffer);\n    end Expect;\n@@ -419,7 +422,7 @@ package body GNAT.Expect is\n       Full_Buffer : Boolean := False)\n    is\n       Matched : GNAT.Regpat.Match_Array (0 .. 0);\n-\n+      pragma Warnings (Off, Matched);\n    begin\n       Expect (Result, Regexps, Matched, Timeout, Full_Buffer);\n    end Expect;\n@@ -815,6 +818,7 @@ package body GNAT.Expect is\n \n       declare\n          Result : Expect_Match;\n+         pragma Unreferenced (Result);\n \n       begin\n          --  This loop runs until the call to Expect raises Process_Died\n@@ -1117,10 +1121,11 @@ package body GNAT.Expect is\n       Empty_Buffer : Boolean := False)\n    is\n       Line_Feed   : aliased constant String := (1 .. 1 => ASCII.LF);\n-      Result      : Expect_Match;\n       Descriptors : Array_Of_Pd := (1 => Descriptor'Unrestricted_Access);\n \n+      Result  : Expect_Match;\n       Discard : Natural;\n+      pragma Warnings (Off, Result);\n       pragma Warnings (Off, Discard);\n \n    begin\n@@ -1238,6 +1243,7 @@ package body GNAT.Expect is\n       Pipe3      : not null access Pipe_Type)\n    is\n       Status : Boolean;\n+      pragma Unreferenced (Status);\n \n    begin\n       --  Create the pipes"}, {"sha": "09f2efaacf957f48b0a1dbd801c049e0cd97dd63", "filename": "gcc/ada/g-spipat.adb", "status": "modified", "additions": 19, "deletions": 6, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fg-spipat.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fg-spipat.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-spipat.adb?ref=67ce0d7e96fd6802815643dbfb8505fad5318e95", "patch": "@@ -2803,11 +2803,13 @@ package body GNAT.Spitbol.Patterns is\n      (Subject : VString;\n       Pat     : Pattern) return Boolean\n    is\n-      Start : Natural;\n-      Stop  : Natural;\n       S     : String_Access;\n       L     : Natural;\n \n+      Start : Natural;\n+      Stop  : Natural;\n+      pragma Unreferenced (Stop);\n+\n    begin\n       Get_String (Subject, S, L);\n \n@@ -2825,6 +2827,8 @@ package body GNAT.Spitbol.Patterns is\n       Pat     : Pattern) return Boolean\n    is\n       Start, Stop : Natural;\n+      pragma Unreferenced (Stop);\n+\n       subtype String1 is String (1 .. Subject'Length);\n \n    begin\n@@ -2898,10 +2902,12 @@ package body GNAT.Spitbol.Patterns is\n      (Subject : VString;\n       Pat     : Pattern)\n    is\n+      S : String_Access;\n+      L : Natural;\n+\n       Start : Natural;\n       Stop  : Natural;\n-      S     : String_Access;\n-      L     : Natural;\n+      pragma Unreferenced (Start, Stop);\n \n    begin\n       Get_String (Subject, S, L);\n@@ -2918,7 +2924,10 @@ package body GNAT.Spitbol.Patterns is\n       Pat     : Pattern)\n    is\n       Start, Stop : Natural;\n+      pragma Unreferenced (Start, Stop);\n+\n       subtype String1 is String (1 .. Subject'Length);\n+\n    begin\n       if Debug_Mode then\n          XMatchD (String1 (Subject), Pat.P, Pat.Stk, Start, Stop);\n@@ -3093,10 +3102,12 @@ package body GNAT.Spitbol.Patterns is\n      (Subject : VString;\n       Pat     : PString)\n    is\n+      S : String_Access;\n+      L : Natural;\n+\n       Start : Natural;\n       Stop  : Natural;\n-      S     : String_Access;\n-      L     : Natural;\n+      pragma Unreferenced (Start, Stop);\n \n    begin\n       Get_String (Subject, S, L);\n@@ -3113,6 +3124,8 @@ package body GNAT.Spitbol.Patterns is\n       Pat     : PString)\n    is\n       Start, Stop : Natural;\n+      pragma Unreferenced (Start, Stop);\n+\n       subtype String1 is String (1 .. Subject'Length);\n \n    begin"}, {"sha": "9f584fdc1ceb025e62d897e6c0aa22e6ad478b7b", "filename": "gcc/ada/g-thread.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fg-thread.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fg-thread.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-thread.adb?ref=67ce0d7e96fd6802815643dbfb8505fad5318e95", "patch": "@@ -68,6 +68,7 @@ package body GNAT.Threads is\n       Parm : Void_Ptr;\n       Code : Code_Proc)\n    is\n+      pragma Unreferenced (Parm);\n       pragma Priority (Prio);\n       pragma Storage_Size (Stsz);\n    end Thread;"}, {"sha": "9957dee094f40545426c54c47211124408a2c9d1", "filename": "gcc/ada/gnatchop.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fgnatchop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fgnatchop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatchop.adb?ref=67ce0d7e96fd6802815643dbfb8505fad5318e95", "patch": "@@ -428,9 +428,11 @@ procedure Gnatchop is\n                   File.Table (Input).Name.all & ASCII.Nul;\n       Length  : File_Offset;\n       Buffer  : String_Access;\n-      Success : Boolean;\n       Result  : String_Access;\n \n+      Success : Boolean;\n+      pragma Warnings (Off, Success);\n+\n    begin\n       FD := Open_Read (Name'Address, Binary);\n "}, {"sha": "42fcdc94bb98188a4d017875d53dae15a2067cf4", "filename": "gcc/ada/gnatlink.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fgnatlink.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fgnatlink.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatlink.adb?ref=67ce0d7e96fd6802815643dbfb8505fad5318e95", "patch": "@@ -692,6 +692,7 @@ procedure Gnatlink is\n       --  Used for various Interfaces.C_Streams calls\n \n       Closing_Status : Boolean;\n+      pragma Warnings (Off, Closing_Status);\n       --  For call to Close\n \n       GNAT_Static : Boolean := False;\n@@ -1589,7 +1590,7 @@ begin\n                      --  convenient to eliminate the redundancy by keying the\n                      --  compilation mode on a single switch, namely --RTS.\n \n-                     --  Pass -mrtp to the linker if --RTS=rtp was passed.\n+                     --  Pass -mrtp to the linker if --RTS=rtp was passed\n \n                      if Linker_Path = Gcc_Path\n                        and then Arg'Length > 8\n@@ -1599,7 +1600,7 @@ begin\n                         Linker_Options.Table (Linker_Options.Last) :=\n                           new String'(\"-mrtp\");\n \n-                     --  Pass -fsjlj to the linker if --RTS=sjlj was passed.\n+                     --  Pass -fsjlj to the linker if --RTS=sjlj was passed\n \n                      elsif Linker_Path = Gcc_Path\n                        and then Arg'Length > 9"}, {"sha": "b0a96af5c267dff512fa0a18cdf80169c2a1df9a", "filename": "gcc/ada/lib-xref.adb", "status": "modified", "additions": 114, "deletions": 40, "changes": 154, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Flib-xref.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Flib-xref.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-xref.adb?ref=67ce0d7e96fd6802815643dbfb8505fad5318e95", "patch": "@@ -44,7 +44,7 @@ with Stand;    use Stand;\n with Table;    use Table;\n with Widechar; use Widechar;\n \n-with GNAT.Heap_Sort_A;\n+with GNAT.Heap_Sort_G;\n \n package body Lib.Xref is\n \n@@ -200,30 +200,37 @@ package body Lib.Xref is\n    ------------------------\n \n    procedure Generate_Reference\n-     (E       : Entity_Id;\n-      N       : Node_Id;\n-      Typ     : Character := 'r';\n-      Set_Ref : Boolean   := True;\n-      Force   : Boolean   := False)\n+     (E             : Entity_Id;\n+      N             : Node_Id;\n+      Typ           : Character := 'r';\n+      Set_Ref       : Boolean   := True;\n+      Force         : Boolean   := False)\n    is\n       Indx : Nat;\n       Nod  : Node_Id;\n       Ref  : Source_Ptr;\n       Def  : Source_Ptr;\n       Ent  : Entity_Id;\n \n+      Kind : Entity_Kind;\n+      Call : Node_Id;\n+      --  Arguments used in call to Find_Actual_Mode\n+\n       function Is_On_LHS (Node : Node_Id) return Boolean;\n       --  Used to check if a node is on the left hand side of an assignment.\n       --  The following cases are handled:\n       --\n-      --   Variable  Node is a direct descendant of an assignment statement.\n+      --   Variable    Node is a direct descendant of left hand side of an\n+      --               assignment statement.\n+      --\n+      --   Prefix      Of an indexed or selected component that is present in\n+      --               a subtree rooted by an assignment statement. There is\n+      --               no restriction of nesting of components, thus cases\n+      --               such as A.B (C).D are handled properly. However a prefix\n+      --               of a dereference (either implicit or explicit) is never\n+      --               considered as on a LHS.\n       --\n-      --   Prefix    Of an indexed or selected component that is present in a\n-      --             subtree rooted by an assignment statement. There is no\n-      --             restriction of nesting of components, thus cases such as\n-      --             A.B (C).D are handled properly.\n-      --             However a prefix of a dereference (either implicit or\n-      --             explicit) is never considered as on a LHS.\n+      --   Out param   Same as above cases, but OUT parameter\n \n       ---------------\n       -- Is_On_LHS --\n@@ -235,28 +242,41 @@ package body Lib.Xref is\n       --      Sem_Util.May_Be_Lvalue\n       --      Sem_Util.Known_To_Be_Assigned\n       --      Exp_Ch2.Expand_Entry_Parameter.In_Assignment_Context\n+      --      Exp_Smem.Is_Out_Actual\n \n       function Is_On_LHS (Node : Node_Id) return Boolean is\n-         N : Node_Id := Node;\n+         N : Node_Id;\n+         P : Node_Id;\n+         K : Node_Kind;\n \n       begin\n          --  Only identifiers are considered, is this necessary???\n \n-         if Nkind (N) /= N_Identifier then\n+         if Nkind (Node) /= N_Identifier then\n             return False;\n          end if;\n \n-         --  Reach the assignment statement subtree root. In the case of a\n-         --  variable being a direct descendant of an assignment statement,\n-         --  the loop is skiped.\n+         --  Immediat return if appeared as OUT parameter\n \n-         while Nkind (Parent (N)) /= N_Assignment_Statement loop\n+         if Kind = E_Out_Parameter then\n+            return True;\n+         end if;\n \n-            --  Check whether the parent is a component and the current node\n-            --  is its prefix, but return False if the current node has an\n-            --  access type, as in that case the selected or indexed component\n-            --  is an implicit dereference, and the LHS is the designated\n-            --  object, not the access object.\n+         --  Search for assignment statement subtree root\n+\n+         N := Node;\n+         loop\n+            P := Parent (N);\n+            K := Nkind (P);\n+\n+            if K = N_Assignment_Statement then\n+               return Name (P) = N;\n+\n+            --  Check whether the parent is a component and the current node is\n+            --  its prefix, but return False if the current node has an access\n+            --  type, as in that case the selected or indexed component is an\n+            --  implicit dereference, and the LHS is the designated object, not\n+            --  the access object.\n \n             --  ??? case of a slice assignment?\n \n@@ -267,15 +287,16 @@ package body Lib.Xref is\n             --  dereference. If the dereference is on an LHS, this causes a\n             --  false positive.\n \n-            if (Nkind (Parent (N)) = N_Selected_Component\n-                  or else\n-                Nkind (Parent (N)) = N_Indexed_Component)\n-              and then Prefix (Parent (N)) = N\n+            elsif (K = N_Selected_Component or else K = N_Indexed_Component)\n+              and then Prefix (P) = N\n               and then not (Present (Etype (N))\n                               and then\n                             Is_Access_Type (Etype (N)))\n             then\n-               N := Parent (N);\n+               N := P;\n+\n+            --  All other cases, definitely not on left side\n+\n             else\n                return False;\n             end if;\n@@ -290,6 +311,7 @@ package body Lib.Xref is\n \n    begin\n       pragma Assert (Nkind (E) in N_Entity);\n+      Find_Actual_Mode (N, Kind, Call);\n \n       --  Check for obsolescent reference to package ASCII. GNAT treats this\n       --  element of annex J specially since in practice, programs make a lot\n@@ -393,7 +415,18 @@ package body Lib.Xref is\n          if (Ekind (E) = E_Variable or else Is_Formal (E))\n            and then Is_On_LHS (N)\n          then\n-            Set_Referenced_As_LHS (E);\n+            --  If we have the OUT parameter case and the warning mode for\n+            --  OUT parameters is not set, treat this as an ordinary reference\n+            --  since we don't want warnings about it being unset.\n+\n+            if Kind = E_Out_Parameter and not Warn_On_Out_Parameter_Unread then\n+               Set_Referenced (E);\n+\n+            --  For other cases, set referenced on LHS\n+\n+            else\n+               Set_Referenced_As_LHS (E);\n+            end if;\n \n          --  Check for a reference in a pragma that should not count as a\n          --  making the variable referenced for warning purposes.\n@@ -433,13 +466,49 @@ package body Lib.Xref is\n          then\n             null;\n \n-         --  Any other occurrence counts as referencing the entity\n+         --  All other cases\n \n          else\n-            Set_Referenced (E);\n+            --  Special processing for IN OUT and OUT parameters, where we\n+            --  have an implicit assignment to a simple variable.\n+\n+            if (Kind = E_Out_Parameter or else Kind = E_In_Out_Parameter)\n+              and then Is_Entity_Name (N)\n+              and then Present (Entity (N))\n+              and then Is_Assignable (Entity (N))\n+            then\n+               --  Record implicit assignment unless we have an intrinsic\n+               --  subprogram, which is most likely an instantiation of\n+               --  Unchecked_Deallocation which we do not want to consider\n+               --  as an assignment since it generates false positives. We\n+               --  also exclude the case of an IN OUT parameter to a procedure\n+               --  called Free, since we suspect similar semantics.\n+\n+               if Is_Entity_Name (Name (Call))\n+                 and then not Is_Intrinsic_Subprogram (Entity (Name (Call)))\n+                 and then (Kind /= E_In_Out_Parameter\n+                             or else Chars (Name (Call)) /= Name_Free)\n+               then\n+                  Set_Referenced_As_LHS (E);\n+               end if;\n+\n+               --  For IN OUT case, treat as also being normal reference\n+\n+               if Kind = E_In_Out_Parameter then\n+                  Set_Referenced (E);\n+               end if;\n+\n+               --  Any other occurrence counts as referencing the entity\n+\n+            else\n+               Set_Referenced (E);\n+\n+               --  If variable, this is an OK reference after an assignment\n+               --  so we can clear the Last_Assignment indication.\n \n-            if Ekind (E) = E_Variable then\n-               Set_Last_Assignment (E, Empty);\n+               if Is_Assignable (E) then\n+                  Set_Last_Assignment (E, Empty);\n+               end if;\n             end if;\n          end if;\n \n@@ -954,11 +1023,14 @@ package body Lib.Xref is\n       Handle_Orphan_Type_References : declare\n          J    : Nat;\n          Tref : Entity_Id;\n-         L, R : Character;\n          Indx : Nat;\n          Ent  : Entity_Id;\n          Loc  : Source_Ptr;\n \n+         L, R : Character;\n+         pragma Warnings (Off, L);\n+         pragma Warnings (Off, R);\n+\n          procedure New_Entry (E : Entity_Id);\n          --  Make an additional entry into the Xref table for a type entity\n          --  that is related to the current entity (parent, type ancestor,\n@@ -1140,6 +1212,8 @@ package body Lib.Xref is\n          procedure Move (From : Natural; To : Natural);\n          --  Move procedure for Sort call\n \n+         package Sorting is new GNAT.Heap_Sort_G (Move, Lt);\n+\n          --------\n          -- Lt --\n          --------\n@@ -1230,10 +1304,7 @@ package body Lib.Xref is\n \n          --  Sort the references\n \n-         GNAT.Heap_Sort_A.Sort\n-           (Integer (Nrefs),\n-            Move'Unrestricted_Access,\n-            Lt'Unrestricted_Access);\n+         Sorting.Sort (Integer (Nrefs));\n \n          --  Eliminate duplicate entries\n \n@@ -1272,9 +1343,12 @@ package body Lib.Xref is\n          for Refno in 1 .. Nrefs loop\n             Output_One_Ref : declare\n                P2  : Source_Ptr;\n+               Ent : Entity_Id;\n+\n                WC  : Char_Code;\n                Err : Boolean;\n-               Ent : Entity_Id;\n+               pragma Warnings (Off, WC);\n+               pragma Warnings (Off, Err);\n \n                XE : Xref_Entry renames Xrefs.Table (Rnums (Refno));\n                --  The current entry to be accessed"}, {"sha": "1a96e81e6a419e27e972c8d319865672c3dd5fea", "filename": "gcc/ada/lib-xref.ads", "status": "modified", "additions": 23, "deletions": 16, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Flib-xref.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Flib-xref.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-xref.ads?ref=67ce0d7e96fd6802815643dbfb8505fad5318e95", "patch": "@@ -115,11 +115,18 @@ package Lib.Xref is\n \n    --          For a type that implements multiple interfaces, there is an\n    --          entry of the form  LR=<> for each of the interfaces appearing\n-   --          in the type declaration.\n+   --          in the type declaration. In the data structures of ali.ads,\n+   --          the type that the entity extends (or the first interface if\n+   --          there is no such type) is stored in Xref_Entity_Record.Tref*,\n+   --          additional interfaces are stored in the list of references\n+   --          with a special type of Interface_Reference.\n \n    --          For an array type, there is an entry of the form LR=<> for\n    --          each of the index types appearing in the type declaration.\n    --          The index types follow the entry for the component type.\n+   --          In the data structures of ali.ads, however, the list of index\n+   --          types are output in the list of references with a special\n+   --          Rtype set to Array_Index_Reference.\n \n    --          In the above list LR shows the brackets used in the output,\n    --          which has one of the two following forms:\n@@ -561,11 +568,11 @@ package Lib.Xref is\n    --  a renaming of a predefined operator.\n \n    procedure Generate_Reference\n-     (E       : Entity_Id;\n-      N       : Node_Id;\n-      Typ     : Character := 'r';\n-      Set_Ref : Boolean   := True;\n-      Force   : Boolean   := False);\n+     (E             : Entity_Id;\n+      N             : Node_Id;\n+      Typ           : Character := 'r';\n+      Set_Ref       : Boolean   := True;\n+      Force         : Boolean   := False);\n    --  This procedure is called to record a reference. N is the location\n    --  of the reference and E is the referenced entity. Typ is one of:\n    --\n@@ -605,22 +612,22 @@ package Lib.Xref is\n    --    the node N is not an identifier, defining identifier, or expanded name\n    --    the type is 'p' and the entity is not in the extended main source\n    --\n-   --  If all these conditions are met, then the Is_Referenced flag of E\n-   --  is set (unless Set_Ref is False) and a cross-reference entry is\n-   --  recorded for later output when Output_References is called.\n+   --  If all these conditions are met, then the Is_Referenced flag of E is set\n+   --  (unless Set_Ref is False) and a cross-reference entry is recorded for\n+   --  later output when Output_References is called.\n    --\n    --  Note: the dummy space entry is for the convenience of some callers,\n    --  who find it easier to pass a space to suppress the entry than to do\n    --  a specific test. The call has no effect if the type is a space.\n    --\n-   --  The parameter Set_Ref is normally True, and indicates that in\n-   --  addition to generating a cross-reference, the Referenced flag\n-   --  of the specified entity should be set. If this parameter is\n-   --  False, then setting of the Referenced flag is inhibited.\n+   --  The parameter Set_Ref is normally True, and indicates that in addition\n+   --  to generating a cross-reference, the Referenced flag of the specified\n+   --  entity should be set. If this parameter is False, then setting of the\n+   --  Referenced flag is inhibited.\n    --\n-   --  The parameter Force is set to True to force a reference to be\n-   --  generated even if Comes_From_Source is false. This is used for\n-   --  certain implicit references, and also for end label references.\n+   --  The parameter Force is set to True to force a reference to be generated\n+   --  even if Comes_From_Source is false. This is used for certain implicit\n+   --  references, and also for end label references.\n \n    procedure Generate_Reference_To_Formals (E : Entity_Id);\n    --  Add a reference to the definition of each formal on the line for"}, {"sha": "a5c784d0b3abb261f77cdcc05061565871aaf2a6", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=67ce0d7e96fd6802815643dbfb8505fad5318e95", "patch": "@@ -3947,6 +3947,7 @@ package body Make is\n \n    procedure Delete_Mapping_Files is\n       Success : Boolean;\n+      pragma Warnings (Off, Success);\n    begin\n       if not Debug.Debug_Flag_N then\n          if The_Mapping_File_Names /= null then\n@@ -3968,6 +3969,8 @@ package body Make is\n \n    procedure Delete_Temp_Config_Files is\n       Success : Boolean;\n+      pragma Warnings (Off, Success);\n+\n    begin\n       if (not Debug.Debug_Flag_N) and Main_Project /= No_Project then\n          for Project in Project_Table.First ..\n@@ -4203,6 +4206,7 @@ package body Make is\n       --  The path name of the mapping file\n \n       Discard : Boolean;\n+      pragma Warnings (Off, Discard);\n \n       procedure Check_Mains;\n       --  Check that the main subprograms do exist and that they all\n@@ -7077,9 +7081,11 @@ package body Make is\n                                  Get_Name_String (Source_File);\n             Saved_Verbosity  : constant Verbosity := Current_Verbosity;\n             Project          : Project_Id         := No_Project;\n-            Path_Name        : Path_Name_Type     := No_Path;\n             Data             : Project_Data;\n \n+            Path_Name : Path_Name_Type := No_Path;\n+            pragma Warnings (Off, Path_Name);\n+\n          begin\n             --  Call Get_Reference to know the ultimate extending project of\n             --  the source. Call it with verbosity default to avoid verbose"}, {"sha": "3011c420bb8f8e1d5931c26ec2fb7a1fe231ccf3", "filename": "gcc/ada/makegpr.adb", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fmakegpr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fmakegpr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakegpr.adb?ref=67ce0d7e96fd6802815643dbfb8505fad5318e95", "patch": "@@ -1058,7 +1058,9 @@ package body Makegpr is\n       Time_Stamp          : Time_Stamp_Type;\n       Saved_Last_Argument : Natural;\n       First_Object        : Natural;\n-      Discard             : Boolean;\n+\n+      Discard : Boolean;\n+      pragma Warnings (Off, Discard);\n \n    begin\n       Check_Archive_Builder;\n@@ -2239,7 +2241,9 @@ package body Makegpr is\n             declare\n                Dep_File : Ada.Text_IO.File_Type;\n                Result   : Expect_Match;\n-               Status   : Integer;\n+\n+               Status : Integer;\n+               pragma Warnings (Off, Status);\n \n             begin\n                --  Create the dependency file"}, {"sha": "e6eb5e936a3254d030a4c63b86e8eb015a2ef51c", "filename": "gcc/ada/mdll.adb", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fmdll.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fmdll.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmdll.adb?ref=67ce0d7e96fd6802815643dbfb8505fad5318e95", "patch": "@@ -111,6 +111,7 @@ package body MDLL is\n          --  Objects plus the export table (.exp) file\n \n          Success : Boolean;\n+         pragma Warnings (Off, Success);\n \n       begin\n          if not Quiet then\n@@ -192,6 +193,7 @@ package body MDLL is\n \n       procedure Ada_Build_Reloc_DLL is\n          Success : Boolean;\n+         pragma Warnings (Off, Success);\n \n       begin\n          if not Quiet then\n@@ -296,6 +298,7 @@ package body MDLL is\n \n       procedure Build_Non_Reloc_DLL is\n          Success : Boolean;\n+         pragma Warnings (Off, Success);\n \n       begin\n          if not Quiet then\n@@ -348,6 +351,7 @@ package body MDLL is\n \n       procedure Ada_Build_Non_Reloc_DLL is\n          Success : Boolean;\n+         pragma Warnings (Off, Success);\n \n       begin\n          if not Quiet then"}, {"sha": "2805b8c97a19aa223ce0ab12823fa6ad24f070b9", "filename": "gcc/ada/mlib-prj.adb", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fmlib-prj.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fmlib-prj.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-prj.adb?ref=67ce0d7e96fd6802815643dbfb8505fad5318e95", "patch": "@@ -1699,7 +1699,8 @@ package body MLib.Prj is\n             --  Designates the full library path name. Either DLL_Name or\n             --  Archive_Name, depending on the library kind.\n \n-            Success : Boolean := False;\n+            Success : Boolean;\n+            pragma Warnings (Off, Success);\n             --  Used to call Delete_File\n \n          begin\n@@ -1774,6 +1775,7 @@ package body MLib.Prj is\n             Last : Natural;\n \n             Disregard : Boolean;\n+            pragma Warnings (Off, Disregard);\n \n             DLL_Name : aliased constant String :=\n                          Lib_Filename.all & \".\" & DLL_Ext;\n@@ -1963,6 +1965,7 @@ package body MLib.Prj is\n                Last : Natural;\n \n                Disregard : Boolean;\n+               pragma Warnings (Off, Disregard);\n \n             begin\n                Open (Dir, \".\");\n@@ -2181,7 +2184,8 @@ package body MLib.Prj is\n       ----------\n \n       procedure Copy (File_Name : File_Name_Type) is\n-         Success : Boolean := False;\n+         Success : Boolean;\n+         pragma Warnings (Off, Success);\n \n       begin\n          Unit_Loop :"}, {"sha": "b0301d2817cc96676c6e50afde2d10c912bb98f5", "filename": "gcc/ada/mlib.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fmlib.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fmlib.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib.adb?ref=67ce0d7e96fd6802815643dbfb8505fad5318e95", "patch": "@@ -303,11 +303,11 @@ package body MLib is\n          Newpath : System.Address) return Integer;\n       pragma Import (C, Symlink, \"__gnat_symlink\");\n \n-      Success      : Boolean;\n       Version_Path : String_Access;\n \n-      Result : Integer;\n-      pragma Unreferenced (Result);\n+      Success : Boolean;\n+      Result  : Integer;\n+      pragma Unreferenced (Success, Result);\n \n    begin\n       if Is_Absolute_Path (Lib_Version) then"}, {"sha": "00a9cef9076ea5b51d2b7b018b7c674ce67a55e6", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 17, "deletions": 4, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=67ce0d7e96fd6802815643dbfb8505fad5318e95", "patch": "@@ -36,6 +36,7 @@\n --  other GNAT tools. The comments indicate which options are used by which\n --  programs (GNAT, GNATBIND, GNATLINK, GNATMAKE, GPRMAKE, etc).\n \n+with Debug;\n with Hostparm; use Hostparm;\n with Types;    use Types;\n \n@@ -252,8 +253,8 @@ package Opt is\n    --  GNATMAKE, GNATCLEAN, GPRMAKE\n    --  GNATMAKE, GPRMAKE: set to True to skip bind and link steps (except when\n    --                     Bind_Only is True).\n-   --  GNATCLEAN: set to True to only the files produced by the compiler are to\n-   --             be deleted, but not the library files or executable files.\n+   --  GNATCLEAN: set to True to delete only the files produced by the compiler\n+   --             but not the library files or the executable files.\n \n    Config_File : Boolean := True;\n    --  GNAT\n@@ -601,6 +602,13 @@ package Opt is\n    --  then elaboration flag checks are to be generated in the binder\n    --  generated file.\n \n+   Inspector_Mode : Boolean renames Debug.Debug_Flag_Dot_II;\n+   --  GNAT\n+   --  True if compiling in inspector mode (-gnatd.I switch).\n+   --  Only relevant when VM_Target /= None. The compiler will attempt to\n+   --  generate code even in case of unsupported construct, so that the byte\n+   --  code can be used by static analysis tools.\n+\n    Follow_Links : Boolean := False;\n    --  GNATMAKE\n    --  Set to True (-eL) to process the project files in trusted mode\n@@ -1186,8 +1194,13 @@ package Opt is\n    Warn_On_Modified_Unread : Boolean := False;\n    --  GNAT\n    --  Set to True to generate warnings if a variable is assigned but is never\n-   --  read. The default is that this warning is suppressed. Also controls\n-   --  warnings about assignments whose value is never read.\n+   --  read. The default is that this warning is suppressed.\n+\n+   Warn_On_Out_Parameter_Unread : Boolean := False;\n+   --  GNAT\n+   --  Set to True to generate warnings if a variable is modified by being\n+   --  passed as to an IN OUT or OUT formal, but the resulting value is never\n+   --  read. The default is that this warning is suppressed.\n \n    Warn_On_No_Value_Assigned : Boolean := True;\n    --  GNAT"}, {"sha": "eb9d23c207e68b0c4d72309bc0d19b8893fe6d26", "filename": "gcc/ada/osint.adb", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fosint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fosint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint.adb?ref=67ce0d7e96fd6802815643dbfb8505fad5318e95", "patch": "@@ -295,6 +295,7 @@ package body Osint is\n          Ch         : Character;\n \n          Status : Boolean;\n+         pragma Warnings (Off, Status);\n          --  For the call to Close\n \n       begin\n@@ -2042,6 +2043,7 @@ package body Osint is\n       --  Allocated text buffer\n \n       Status : Boolean;\n+      pragma Warnings (Off, Status);\n       --  For the calls to Close\n \n    begin\n@@ -2174,6 +2176,7 @@ package body Osint is\n       Actual_Len : Integer;\n \n       Status : Boolean;\n+      pragma Warnings (Off, Status);\n       --  For the call to Close\n \n    begin\n@@ -2811,6 +2814,7 @@ package body Osint is\n \n    procedure Write_With_Check (A  : Address; N  : Integer) is\n       Ignore : Boolean;\n+      pragma Warnings (Off, Ignore);\n \n    begin\n       if N = Write (Output_FD, A, N) then"}, {"sha": "b28c93ea5a7f40d445396112f4b9fa1c7d2968e2", "filename": "gcc/ada/par-ch3.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fpar-ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fpar-ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch3.adb?ref=67ce0d7e96fd6802815643dbfb8505fad5318e95", "patch": "@@ -4412,7 +4412,7 @@ package body Ch3 is\n \n    procedure Skip_Declaration (S : List_Id) is\n       Dummy_Done : Boolean;\n-\n+      pragma Warnings (Off, Dummy_Done);\n    begin\n       P_Declarative_Items (S, Dummy_Done, False);\n    end Skip_Declaration;"}, {"sha": "aef87437b882f1a7ff4ed05f8eda49f284983e01", "filename": "gcc/ada/prj-makr.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fprj-makr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fprj-makr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-makr.adb?ref=67ce0d7e96fd6802815643dbfb8505fad5318e95", "patch": "@@ -937,6 +937,7 @@ package body Prj.Makr is\n \n          declare\n             Discard : Boolean;\n+            pragma Warnings (Off, Discard);\n          begin\n             Delete_File\n               (Source_List_Path (1 .. Source_List_Last),\n@@ -1350,6 +1351,7 @@ package body Prj.Makr is\n \n       declare\n          Discard : Boolean;\n+         pragma Warnings (Off, Discard);\n \n       begin\n          --  Delete the file if it already exists"}, {"sha": "0bd6028102c234e352f8de66298c640ffd02d7d7", "filename": "gcc/ada/prj.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fprj.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fprj.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.adb?ref=67ce0d7e96fd6802815643dbfb8505fad5318e95", "patch": "@@ -364,6 +364,7 @@ package body Prj is\n \n    procedure Delete_All_Temp_Files is\n       Dont_Care : Boolean;\n+      pragma Warnings (Off, Dont_Care);\n    begin\n       if not Debug.Debug_Flag_N then\n          for Index in 1 .. Temp_Files.Last loop"}, {"sha": "20f3ead28282202c744f78b4243bdaa35a9d6d31", "filename": "gcc/ada/s-fatgen.adb", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fs-fatgen.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fs-fatgen.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-fatgen.adb?ref=67ce0d7e96fd6802815643dbfb8505fad5318e95", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -129,6 +129,7 @@ package body System.Fat_Gen is\n    function Compose (Fraction : T; Exponent : UI) return T is\n       Arg_Frac : T;\n       Arg_Exp  : UI;\n+      pragma Unreferenced (Arg_Exp);\n    begin\n       Decompose (Fraction, Arg_Frac, Arg_Exp);\n       return Scaling (Arg_Frac, Exponent);\n@@ -251,6 +252,7 @@ package body System.Fat_Gen is\n    function Exponent (X : T) return UI is\n       X_Frac : T;\n       X_Exp  : UI;\n+      pragma Unreferenced (X_Frac);\n    begin\n       Decompose (X, X_Frac, X_Exp);\n       return X_Exp;\n@@ -279,6 +281,7 @@ package body System.Fat_Gen is\n    function Fraction (X : T) return T is\n       X_Frac : T;\n       X_Exp  : UI;\n+      pragma Unreferenced (X_Exp);\n    begin\n       Decompose (X, X_Frac, X_Exp);\n       return X_Frac;\n@@ -451,7 +454,6 @@ package body System.Fat_Gen is\n       B        : T;\n       Arg      : T;\n       P        : T;\n-      Arg_Frac : T;\n       P_Frac   : T;\n       Sign_X   : T;\n       IEEE_Rem : T;\n@@ -460,6 +462,9 @@ package body System.Fat_Gen is\n       K        : UI;\n       P_Even   : Boolean;\n \n+      Arg_Frac : T;\n+      pragma Unreferenced (Arg_Frac);\n+\n    begin\n       if Y = 0.0 then\n          raise Constraint_Error;"}, {"sha": "e2c0e3df29c6518b88c4bfeb0a441b431ea8d744", "filename": "gcc/ada/s-fileio.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fs-fileio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fs-fileio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-fileio.adb?ref=67ce0d7e96fd6802815643dbfb8505fad5318e95", "patch": "@@ -523,6 +523,7 @@ package body System.File_IO is\n       return    Boolean\n    is\n       V1, V2 : Natural;\n+      pragma Unreferenced (V2);\n \n    begin\n       Form_Parameter (Form, Keyword, V1, V2);"}, {"sha": "af4c394b47b511d7135e9bf3fa19aabae51c6b7e", "filename": "gcc/ada/s-os_lib.adb", "status": "modified", "additions": 27, "deletions": 8, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fs-os_lib.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fs-os_lib.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-os_lib.adb?ref=67ce0d7e96fd6802815643dbfb8505fad5318e95", "patch": "@@ -1091,12 +1091,15 @@ package body System.OS_Lib is\n    ------------\n \n    function GM_Day (Date : OS_Time) return Day_Type is\n+      D  : Day_Type;\n+\n+      pragma Warnings (Off);\n       Y  : Year_Type;\n       Mo : Month_Type;\n-      D  : Day_Type;\n       H  : Hour_Type;\n       Mn : Minute_Type;\n       S  : Second_Type;\n+      pragma Warnings (On);\n \n    begin\n       GM_Split (Date, Y, Mo, D, H, Mn, S);\n@@ -1108,12 +1111,15 @@ package body System.OS_Lib is\n    -------------\n \n    function GM_Hour (Date : OS_Time) return Hour_Type is\n+      H  : Hour_Type;\n+\n+      pragma Warnings (Off);\n       Y  : Year_Type;\n       Mo : Month_Type;\n       D  : Day_Type;\n-      H  : Hour_Type;\n       Mn : Minute_Type;\n       S  : Second_Type;\n+      pragma Warnings (On);\n \n    begin\n       GM_Split (Date, Y, Mo, D, H, Mn, S);\n@@ -1125,12 +1131,15 @@ package body System.OS_Lib is\n    ---------------\n \n    function GM_Minute (Date : OS_Time) return Minute_Type is\n+      Mn : Minute_Type;\n+\n+      pragma Warnings (Off);\n       Y  : Year_Type;\n       Mo : Month_Type;\n       D  : Day_Type;\n       H  : Hour_Type;\n-      Mn : Minute_Type;\n       S  : Second_Type;\n+      pragma Warnings (On);\n \n    begin\n       GM_Split (Date, Y, Mo, D, H, Mn, S);\n@@ -1142,12 +1151,15 @@ package body System.OS_Lib is\n    --------------\n \n    function GM_Month (Date : OS_Time) return Month_Type is\n-      Y  : Year_Type;\n       Mo : Month_Type;\n+\n+      pragma Warnings (Off);\n+      Y  : Year_Type;\n       D  : Day_Type;\n       H  : Hour_Type;\n       Mn : Minute_Type;\n       S  : Second_Type;\n+      pragma Warnings (On);\n \n    begin\n       GM_Split (Date, Y, Mo, D, H, Mn, S);\n@@ -1159,12 +1171,15 @@ package body System.OS_Lib is\n    ---------------\n \n    function GM_Second (Date : OS_Time) return Second_Type is\n+      S  : Second_Type;\n+\n+      pragma Warnings (Off);\n       Y  : Year_Type;\n       Mo : Month_Type;\n       D  : Day_Type;\n       H  : Hour_Type;\n       Mn : Minute_Type;\n-      S  : Second_Type;\n+      pragma Warnings (On);\n \n    begin\n       GM_Split (Date, Y, Mo, D, H, Mn, S);\n@@ -1226,11 +1241,14 @@ package body System.OS_Lib is\n \n    function GM_Year (Date : OS_Time) return Year_Type is\n       Y  : Year_Type;\n+\n+      pragma Warnings (Off);\n       Mo : Month_Type;\n       D  : Day_Type;\n       H  : Hour_Type;\n       Mn : Minute_Type;\n       S  : Second_Type;\n+      pragma Warnings (On);\n \n    begin\n       GM_Split (Date, Y, Mo, D, H, Mn, S);\n@@ -1464,9 +1482,9 @@ package body System.OS_Lib is\n      (Program_Name : String;\n       Args         : Argument_List) return Process_Id\n    is\n-      Junk : Integer;\n       Pid  : Process_Id;\n-\n+      Junk : Integer;\n+      pragma Warnings (Off, Junk);\n    begin\n       Spawn_Internal (Program_Name, Args, Junk, Pid, Blocking => False);\n       return Pid;\n@@ -2287,8 +2305,9 @@ package body System.OS_Lib is\n      (Program_Name : String;\n       Args         : Argument_List) return Integer\n    is\n-      Junk   : Process_Id;\n       Result : Integer;\n+      Junk   : Process_Id;\n+      pragma Warnings (Off, Junk);\n    begin\n       Spawn_Internal (Program_Name, Args, Result, Junk, Blocking => True);\n       return Result;"}, {"sha": "4204f0cfa06017d130b563157500f8694dcac3b8", "filename": "gcc/ada/s-regpat.adb", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fs-regpat.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fs-regpat.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-regpat.adb?ref=67ce0d7e96fd6802815643dbfb8505fad5318e95", "patch": "@@ -2059,8 +2059,12 @@ package body System.Regpat is\n          return Class;\n       end Parse_Posix_Character_Class;\n \n+      --  Local Declarations\n+\n+      Result : Pointer;\n+\n       Expr_Flags : Expression_Flags;\n-      Result     : Pointer;\n+      pragma Unreferenced (Expr_Flags);\n \n    --  Start of processing for Compile\n \n@@ -2090,6 +2094,7 @@ package body System.Regpat is\n    is\n       Size  : Program_Size;\n       Dummy : Pattern_Matcher (0);\n+      pragma Unreferenced (Dummy);\n \n    begin\n       Compile (Dummy, Expression, Size, Flags);\n@@ -2108,6 +2113,7 @@ package body System.Regpat is\n       Flags      : Regexp_Flags := No_Flags)\n    is\n       Size : Program_Size;\n+      pragma Unreferenced (Size);\n    begin\n       Compile (Matcher, Expression, Size, Flags);\n    end Compile;\n@@ -3442,7 +3448,7 @@ package body System.Regpat is\n    is\n       PM            : Pattern_Matcher (Size);\n       Finalize_Size : Program_Size;\n-\n+      pragma Unreferenced (Finalize_Size);\n    begin\n       if Size = 0 then\n          Match (Compile (Expression), Data, Matches, Data_First, Data_Last);\n@@ -3464,8 +3470,8 @@ package body System.Regpat is\n       Data_Last  : Positive     := Positive'Last) return Natural\n    is\n       PM         : Pattern_Matcher (Size);\n-      Final_Size : Program_Size; -- unused\n-\n+      Final_Size : Program_Size;\n+      pragma Unreferenced (Final_Size);\n    begin\n       if Size = 0 then\n          return Match (Compile (Expression), Data, Data_First, Data_Last);\n@@ -3488,8 +3494,8 @@ package body System.Regpat is\n    is\n       Matches    : Match_Array (0 .. 0);\n       PM         : Pattern_Matcher (Size);\n-      Final_Size : Program_Size; -- unused\n-\n+      Final_Size : Program_Size;\n+      pragma Unreferenced (Final_Size);\n    begin\n       if Size = 0 then\n          Match (Compile (Expression), Data, Matches, Data_First, Data_Last);"}, {"sha": "b3e67eeb67992231d1426e3b63f5d7d1de354345", "filename": "gcc/ada/s-taasde.adb", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fs-taasde.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fs-taasde.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taasde.adb?ref=67ce0d7e96fd6802815643dbfb8505fad5318e95", "patch": "@@ -304,7 +304,7 @@ package body System.Tasking.Async_Delays is\n    task body Timer_Server is\n       function Get_Next_Wakeup_Time return Duration;\n       --  Used to initialize Next_Wakeup_Time, but also to ensure that\n-      --  Make_Independent is called during the elaboration of this task\n+      --  Make_Independent is called during the elaboration of this task.\n \n       --------------------------\n       -- Get_Next_Wakeup_Time --\n@@ -316,13 +316,17 @@ package body System.Tasking.Async_Delays is\n          return Duration'Last;\n       end Get_Next_Wakeup_Time;\n \n+      --  Local Declarations\n+\n       Next_Wakeup_Time : Duration := Get_Next_Wakeup_Time;\n       Timedout         : Boolean;\n       Yielded          : Boolean;\n       Now              : Duration;\n       Dequeued         : Delay_Block_Access;\n       Dequeued_Task    : Task_Id;\n \n+      pragma Unreferenced (Timedout, Yielded);\n+\n    begin\n       Timer_Server_ID := STPO.Self;\n \n@@ -376,7 +380,6 @@ package body System.Tasking.Async_Delays is\n          Timer_Attention := False;\n \n          Now := STPO.Monotonic_Clock;\n-\n          while Timer_Queue.Succ.Resume_Time <= Now loop\n \n             --  Dequeue the waiting task from the front of the queue"}, {"sha": "d0ba725272dc162f995204c3883c52ee72b569e1", "filename": "gcc/ada/s-taprop-mingw.adb", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fs-taprop-mingw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fs-taprop-mingw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-mingw.adb?ref=67ce0d7e96fd6802815643dbfb8505fad5318e95", "patch": "@@ -547,7 +547,9 @@ package body System.Task_Primitives.Operations is\n       Check_Time : Duration := Monotonic_Clock;\n       Rel_Time   : Duration;\n       Abs_Time   : Duration;\n-      Result     : Integer;\n+\n+      Result : Integer;\n+      pragma Unreferenced (Result);\n \n       Local_Timedout : Boolean;\n \n@@ -607,10 +609,10 @@ package body System.Task_Primitives.Operations is\n       Check_Time : Duration := Monotonic_Clock;\n       Rel_Time   : Duration;\n       Abs_Time   : Duration;\n-      Timedout   : Boolean;\n \n-      Result : Integer;\n-      pragma Warnings (Off, Integer);\n+      Timedout : Boolean;\n+      Result   : Integer;\n+      pragma Unreferenced (Timedout, Result);\n \n    begin\n       if Single_Lock then"}, {"sha": "f9b30ce69c6102295f940fedbab572a6973457b7", "filename": "gcc/ada/s-taprop-posix.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fs-taprop-posix.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fs-taprop-posix.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-posix.adb?ref=67ce0d7e96fd6802815643dbfb8505fad5318e95", "patch": "@@ -204,9 +204,11 @@ package body System.Task_Primitives.Operations is\n       pragma Unreferenced (Sig);\n \n       T       : constant Task_Id := Self;\n-      Result  : Interfaces.C.int;\n       Old_Set : aliased sigset_t;\n \n+      Result : Interfaces.C.int;\n+      pragma Warnings (Off, Result);\n+\n    begin\n       --  It is not safe to raise an exception when using ZCX and the GCC\n       --  exception handling mechanism."}, {"sha": "330519db8ea03bcf6a5a5c268dc5897dcf3c0148", "filename": "gcc/ada/s-taprop-solaris.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fs-taprop-solaris.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fs-taprop-solaris.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-solaris.adb?ref=67ce0d7e96fd6802815643dbfb8505fad5318e95", "patch": "@@ -270,6 +270,7 @@ package body System.Task_Primitives.Operations is\n       Old_Set : aliased sigset_t;\n \n       Result : Interfaces.C.int;\n+      pragma Warnings (Off, Result);\n \n    begin\n       --  It is not safe to raise an exception when using ZCX and the GCC"}, {"sha": "0440ff3d3597b572ea89028f7c80c4a6680155a0", "filename": "gcc/ada/s-taprop-vms.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fs-taprop-vms.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fs-taprop-vms.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-vms.adb?ref=67ce0d7e96fd6802815643dbfb8505fad5318e95", "patch": "@@ -150,7 +150,8 @@ package body System.Task_Primitives.Operations is\n    --  Signal the condition variable when AST fires\n \n    procedure Timer_Sleep_AST (ID : Address) is\n-      Result  : Interfaces.C.int;\n+      Result : Interfaces.C.int;\n+      pragma Warnings (Off, Result);\n       Self_ID : constant Task_Id := To_Task_Id (ID);\n    begin\n       Self_ID.Common.LL.AST_Pending := False;"}, {"sha": "9af031a499a4ff3610a7da07be1132ba0dd7c0f9", "filename": "gcc/ada/s-taprop-vxworks.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fs-taprop-vxworks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fs-taprop-vxworks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-vxworks.adb?ref=67ce0d7e96fd6802815643dbfb8505fad5318e95", "patch": "@@ -176,9 +176,11 @@ package body System.Task_Primitives.Operations is\n       pragma Unreferenced (signo);\n \n       Self_ID : constant Task_Id := Self;\n-      Result  : int;\n       Old_Set : aliased sigset_t;\n \n+      Result : int;\n+      pragma Warnings (Off, Result);\n+\n    begin\n       --  It is not safe to raise an exception when using ZCX and the GCC\n       --  exception handling mechanism."}, {"sha": "9aebe943d4d804c8e95e8d010276373062f54c1a", "filename": "gcc/ada/s-tasdeb.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fs-tasdeb.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fs-tasdeb.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tasdeb.ads?ref=67ce0d7e96fd6802815643dbfb8505fad5318e95", "patch": "@@ -98,7 +98,7 @@ package System.Tasking.Debug is\n    procedure Stop_All_Tasks_Handler;\n    --  Stop all the tasks by traversing All_Tasks_Lists and calling\n    --  System.Task_Primitives.Operations.Stop_All_Task. This function\n-   --  can be used in a interrupt handler.\n+   --  can be used in an interrupt handler.\n \n    procedure Stop_All_Tasks;\n    --  Stop all the tasks by traversing All_Tasks_Lists and calling"}, {"sha": "40111c8fd3a27f2835e12511d55c20c9966213f7", "filename": "gcc/ada/s-tasren.adb", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fs-tasren.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fs-tasren.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tasren.adb?ref=67ce0d7e96fd6802815643dbfb8505fad5318e95", "patch": "@@ -392,6 +392,7 @@ package body System.Tasking.Rendezvous is\n       Uninterpreted_Data : System.Address)\n    is\n       Rendezvous_Successful : Boolean;\n+      pragma Unreferenced (Rendezvous_Successful);\n \n    begin\n       --  If pragma Detect_Blocking is active then Program_Error must be\n@@ -1706,7 +1707,9 @@ package body System.Tasking.Rendezvous is\n       Self_Id    : constant Task_Id := STPO.Self;\n       Level      : ATC_Level;\n       Entry_Call : Entry_Call_Link;\n-      Yielded    : Boolean;\n+\n+      Yielded : Boolean;\n+      pragma Unreferenced (Yielded);\n \n    begin\n       --  If pragma Detect_Blocking is active then Program_Error must be"}, {"sha": "ceea9352b3e629de597fb649b6777978ed6a6bb5", "filename": "gcc/ada/s-tassta.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fs-tassta.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fs-tassta.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tassta.adb?ref=67ce0d7e96fd6802815643dbfb8505fad5318e95", "patch": "@@ -749,7 +749,9 @@ package body System.Tasking.Stages is\n \n    procedure Finalize_Global_Tasks is\n       Self_ID : constant Task_Id := STPO.Self;\n+\n       Ignore  : Boolean;\n+      pragma Unreferenced (Ignore);\n \n    begin\n       if Self_ID.Deferral_Level = 0 then"}, {"sha": "f034f9e63a57f9c82ef8e4fa7f8e40231701bfab", "filename": "gcc/ada/s-tpobop.adb", "status": "modified", "additions": 73, "deletions": 60, "changes": 133, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fs-tpobop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fs-tpobop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tpobop.adb?ref=67ce0d7e96fd6802815643dbfb8505fad5318e95", "patch": "@@ -114,11 +114,10 @@ package body System.Tasking.Protected_Objects.Operations is\n      (Entry_Call : Entry_Call_Link;\n       With_Abort : Boolean);\n    pragma Inline (Update_For_Queue_To_PO);\n-   --  Update the state of an existing entry call to reflect\n-   --  the fact that it is being enqueued, based on\n-   --  whether the current queuing action is with or without abort.\n-   --  Call this only while holding the PO's lock.\n-   --  It returns with the PO's lock still held.\n+   --  Update the state of an existing entry call to reflect the fact that it\n+   --  is being enqueued, based on whether the current queuing action is with\n+   --  or without abort. Call this only while holding the PO's lock. It returns\n+   --  with the PO's lock still held.\n \n    procedure Requeue_Call\n      (Self_Id    : Task_Id;\n@@ -132,28 +131,30 @@ package body System.Tasking.Protected_Objects.Operations is\n    -- Cancel_Protected_Entry_Call --\n    ---------------------------------\n \n-   --  Compiler interface only.  Do not call from within the RTS.\n-   --  This should have analogous effect to Cancel_Task_Entry_Call,\n-   --  setting the value of Block.Cancelled instead of returning\n-   --  the parameter value Cancelled.\n+   --  Compiler interface only (do not call from within the RTS)\n+\n+   --  This should have analogous effect to Cancel_Task_Entry_Call, setting\n+   --  the value of Block.Cancelled instead of returning the parameter value\n+   --  Cancelled.\n \n-   --  The effect should be idempotent, since the call may already\n-   --  have been dequeued.\n+   --  The effect should be idempotent, since the call may already have been\n+   --  dequeued.\n \n-   --  source code:\n+   --  Source code:\n \n    --      select r.e;\n    --         ...A...\n    --      then abort\n    --         ...B...\n    --      end select;\n \n-   --  expanded code:\n+   --  Expanded code:\n \n    --      declare\n    --         X : protected_entry_index := 1;\n    --         B80b : communication_block;\n    --         communication_blockIP (B80b);\n+\n    --      begin\n    --         begin\n    --            A79b : label\n@@ -165,6 +166,7 @@ package body System.Tasking.Protected_Objects.Operations is\n    --                  end if;\n    --                  return;\n    --               end _clean;\n+\n    --            begin\n    --               protected_entry_call (rTV!(r)._object'unchecked_access, X,\n    --                 null_address, asynchronous_call, B80b, objectF => 0);\n@@ -174,11 +176,13 @@ package body System.Tasking.Protected_Objects.Operations is\n    --            at end\n    --               _clean;\n    --            end A79b;\n+\n    --         exception\n    --            when _abort_signal =>\n    --               abort_undefer.all;\n    --               null;\n    --         end;\n+\n    --         if not cancelled (B80b) then\n    --            x := ...A...\n    --         end if;\n@@ -188,37 +192,34 @@ package body System.Tasking.Protected_Objects.Operations is\n    --  Abort_Signal should be raised and ATC will take us to the at-end\n    --  handler, which will call _clean.\n \n-   --  If the entry call returns with the call already completed,\n-   --  we can skip this, and use the \"if enqueued()\" to go past\n-   --  the at-end handler, but we will still call _clean.\n+   --  If the entry call returns with the call already completed, we can skip\n+   --  this, and use the \"if enqueued()\" to go past the at-end handler, but we\n+   --  will still call _clean.\n \n-   --  If the abortable part completes before the entry call is Done,\n-   --  it will call _clean.\n+   --  If the abortable part completes before the entry call is Done, it will\n+   --  call _clean.\n \n    --  If the entry call or the abortable part raises an exception,\n    --  we will still call _clean, but the value of Cancelled should not matter.\n \n    --  Whoever calls _clean first gets to decide whether the call\n    --  has been \"cancelled\".\n \n-   --  Enqueued should be true if there is any chance that the call\n-   --  is still on a queue. It seems to be safe to make it True if\n-   --  the call was Onqueue at some point before return from\n-   --  Protected_Entry_Call.\n+   --  Enqueued should be true if there is any chance that the call is still on\n+   --  a queue. It seems to be safe to make it True if the call was Onqueue at\n+   --  some point before return from Protected_Entry_Call.\n \n    --  Cancelled should be true iff the abortable part completed\n    --  and succeeded in cancelling the entry call before it completed.\n \n    --  ?????\n-   --  The need for Enqueued is less obvious.\n-   --  The \"if enqueued ()\" tests are not necessary, since both\n-   --  Cancel_Protected_Entry_Call and Protected_Entry_Call must\n-   --  do the same test internally, with locking. The one that\n-   --  makes cancellation conditional may be a useful heuristic\n-   --  since at least 1/2 the time the call should be off-queue\n-   --  by that point. The other one seems totally useless, since\n-   --  Protected_Entry_Call must do the same check and then\n-   --  possibly wait for the call to be abortable, internally.\n+   --  The need for Enqueued is less obvious. The \"if enqueued ()\" tests are\n+   --  not necessary, since Cancel_Protected_Entry_Call/Protected_Entry_Call\n+   --  must do the same test internally, with locking. The one that makes\n+   --  cancellation conditional may be a useful heuristic since at least 1/2\n+   --  the time the call should be off-queue by that point. The other one seems\n+   --  totally useless, since Protected_Entry_Call must do the same check and\n+   --  then possibly wait for the call to be abortable, internally.\n \n    --  We can check Call.State here without locking the caller's mutex,\n    --  since the call must be over after returning from Wait_For_Completion.\n@@ -277,15 +278,17 @@ package body System.Tasking.Protected_Objects.Operations is\n       pragma Debug\n        (Debug.Trace (STPO.Self, \"Exceptional_Complete_Entry_Body\", 'P'));\n \n-      --  We must have abort deferred, since we are inside\n-      --  a protected operation.\n+      --  We must have abort deferred, since we are inside a protected\n+      --  operation.\n \n       if Entry_Call /= null then\n-         --  The call was not requeued.\n+\n+         --  The call was not requeued\n \n          Entry_Call.Exception_To_Raise := Ex;\n \n          if Ex /= Ada.Exceptions.Null_Id then\n+\n             --  An exception was raised and abort was deferred, so adjust\n             --  before propagating, otherwise the task will stay with deferral\n             --  enabled for its remaining life.\n@@ -299,6 +302,7 @@ package body System.Tasking.Protected_Objects.Operations is\n \n          --  Wakeup_Entry_Caller will be called from PO_Do_Or_Queue or\n          --  PO_Service_Entries on return.\n+\n       end if;\n \n       if Runtime_Traces then\n@@ -331,7 +335,7 @@ package body System.Tasking.Protected_Objects.Operations is\n \n       if Barrier_Value then\n \n-         --  Not abortable while service is in progress.\n+         --  Not abortable while service is in progress\n \n          if Entry_Call.State = Now_Abortable then\n             Entry_Call.State := Was_Abortable;\n@@ -439,7 +443,7 @@ package body System.Tasking.Protected_Objects.Operations is\n \n          E := Protected_Entry_Index (Entry_Call.E);\n \n-         --  Not abortable while service is in progress.\n+         --  Not abortable while service is in progress\n \n          if Entry_Call.State = Now_Abortable then\n             Entry_Call.State := Was_Abortable;\n@@ -454,10 +458,12 @@ package body System.Tasking.Protected_Objects.Operations is\n             end if;\n \n             pragma Debug\n-             (Debug.Trace (Self_ID, \"POSE: start entry body\", 'P'));\n-            Object.Entry_Bodies (\n-              Object.Find_Body_Index (Object.Compiler_Info, E)).Action (\n-                Object.Compiler_Info, Entry_Call.Uninterpreted_Data, E);\n+              (Debug.Trace (Self_ID, \"POSE: start entry body\", 'P'));\n+\n+            Object.Entry_Bodies\n+              (Object.Find_Body_Index (Object.Compiler_Info, E)).Action\n+                (Object.Compiler_Info, Entry_Call.Uninterpreted_Data, E);\n+\n          exception\n             when others =>\n                Queuing.Broadcast_Program_Error\n@@ -497,8 +503,7 @@ package body System.Tasking.Protected_Objects.Operations is\n \n    function Protected_Count\n      (Object : Protection_Entries'Class;\n-      E      : Protected_Entry_Index)\n-      return   Natural\n+      E      : Protected_Entry_Index) return Natural\n    is\n    begin\n       return Queuing.Count_Waiting (Object.Entry_Queues (E));\n@@ -508,7 +513,7 @@ package body System.Tasking.Protected_Objects.Operations is\n    -- Protected_Entry_Call --\n    --------------------------\n \n-   --  Compiler interface only.  Do not call from within the RTS.\n+   --  Compiler interface only (do not call from within the RTS)\n \n    --  select r.e;\n    --     ...A...\n@@ -520,9 +525,11 @@ package body System.Tasking.Protected_Objects.Operations is\n    --     X : protected_entry_index := 1;\n    --     B85b : communication_block;\n    --     communication_blockIP (B85b);\n+\n    --  begin\n    --     protected_entry_call (rTV!(r)._object'unchecked_access, X,\n    --       null_address, conditional_call, B85b, objectF => 0);\n+\n    --     if cancelled (B85b) then\n    --        ...B...\n    --     else\n@@ -636,7 +643,7 @@ package body System.Tasking.Protected_Objects.Operations is\n \n       if Entry_Call.State >= Done then\n \n-         --  Once State >= Done it will not change any more.\n+         --  Once State >= Done it will not change any more\n \n          if Single_Lock then\n             STPO.Lock_RTS;\n@@ -657,16 +664,17 @@ package body System.Tasking.Protected_Objects.Operations is\n          return;\n \n       else\n-         --  In this case we cannot conclude anything,\n-         --  since State can change concurrently.\n+         --  In this case we cannot conclude anything, since State can change\n+         --  concurrently.\n+\n          null;\n       end if;\n \n-      --  Now for the general case.\n+      --  Now for the general case\n \n       if Mode = Asynchronous_Call then\n \n-         --  Try to avoid an expensive call.\n+         --  Try to avoid an expensive call\n \n          if not Initially_Abortable then\n             if Single_Lock then\n@@ -686,6 +694,7 @@ package body System.Tasking.Protected_Objects.Operations is\n             STPO.Lock_RTS;\n             Entry_Calls.Wait_For_Completion (Entry_Call);\n             STPO.Unlock_RTS;\n+\n          else\n             STPO.Write_Lock (Self_ID);\n             Entry_Calls.Wait_For_Completion (Entry_Call);\n@@ -750,8 +759,7 @@ package body System.Tasking.Protected_Objects.Operations is\n \n             if Ceiling_Violation then\n                Object.Call_In_Progress := null;\n-               Queuing.Broadcast_Program_Error\n-                 (Self_Id, Object, Entry_Call);\n+               Queuing.Broadcast_Program_Error (Self_Id, Object, Entry_Call);\n \n             else\n                PO_Do_Or_Queue (Self_Id, New_Object, Entry_Call);\n@@ -761,17 +769,17 @@ package body System.Tasking.Protected_Objects.Operations is\n          else\n             --  Requeue is to same protected object\n \n-            --  ??? Try to compensate apparent failure of the\n-            --  scheduler on some OS (e.g VxWorks) to give higher\n-            --  priority tasks a chance to run (see CXD6002).\n+            --  ??? Try to compensate apparent failure of the scheduler on some\n+            --  OS (e.g VxWorks) to give higher priority tasks a chance to run\n+            --  (see CXD6002).\n \n             STPO.Yield (False);\n \n             if Entry_Call.With_Abort\n               and then Entry_Call.Cancellation_Attempted\n             then\n-               --  If this is a requeue with abort and someone tried\n-               --  to cancel this call, cancel it at this point.\n+               --  If this is a requeue with abort and someone tried to cancel\n+               --  this call, cancel it at this point.\n \n                Entry_Call.State := Cancelled;\n                return;\n@@ -804,6 +812,7 @@ package body System.Tasking.Protected_Objects.Operations is\n                   if Single_Lock then\n                      STPO.Unlock_RTS;\n                   end if;\n+\n                else\n                   Queuing.Enqueue\n                     (New_Object.Entry_Queues (E), Entry_Call);\n@@ -831,7 +840,7 @@ package body System.Tasking.Protected_Objects.Operations is\n    -- Requeue_Protected_Entry --\n    -----------------------------\n \n-   --  Compiler interface only.  Do not call from within the RTS.\n+   --  Compiler interface only (do not call from within the RTS)\n \n    --  entry e when b is\n    --  begin\n@@ -893,7 +902,7 @@ package body System.Tasking.Protected_Objects.Operations is\n    -- Requeue_Task_To_Protected_Entry --\n    -------------------------------------\n \n-   --  Compiler interface only.\n+   --  Compiler interface only (do not call from within the RTS)\n \n    --    accept e1 do\n    --      ...A...\n@@ -902,6 +911,7 @@ package body System.Tasking.Protected_Objects.Operations is\n \n    --    A79b : address;\n    --    L78b : label\n+\n    --    begin\n    --       accept_call (1, A79b);\n    --       ...A...\n@@ -910,6 +920,7 @@ package body System.Tasking.Protected_Objects.Operations is\n    --       goto L78b;\n    --       <<L78b>>\n    --       complete_rendezvous;\n+\n    --    exception\n    --       when all others =>\n    --          exceptional_complete_rendezvous (get_gnat_exception);\n@@ -951,7 +962,7 @@ package body System.Tasking.Protected_Objects.Operations is\n    -- Timed_Protected_Entry_Call --\n    --------------------------------\n \n-   --  Compiler interface only.  Do not call from within the RTS.\n+   --  Compiler interface only (do not call from within the RTS)\n \n    procedure Timed_Protected_Entry_Call\n      (Object                : Protection_Entries_Access;\n@@ -964,7 +975,9 @@ package body System.Tasking.Protected_Objects.Operations is\n       Self_Id           : constant Task_Id  := STPO.Self;\n       Entry_Call        : Entry_Call_Link;\n       Ceiling_Violation : Boolean;\n-      Yielded           : Boolean;\n+\n+      Yielded : Boolean;\n+      pragma Unreferenced (Yielded);\n \n    begin\n       if Self_Id.ATC_Nesting_Level = ATC_Level'Last then\n@@ -1028,7 +1041,7 @@ package body System.Tasking.Protected_Objects.Operations is\n          STPO.Write_Lock (Self_Id);\n       end if;\n \n-      --  Try to avoid waiting for completed or cancelled calls.\n+      --  Try to avoid waiting for completed or cancelled calls\n \n       if Entry_Call.State >= Done then\n          Utilities.Exit_One_ATC_Level (Self_Id);"}, {"sha": "aeee03684b4fb5babf71f50ed31bfdc956f36b62", "filename": "gcc/ada/s-tposen.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fs-tposen.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fs-tposen.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tposen.adb?ref=67ce0d7e96fd6802815643dbfb8505fad5318e95", "patch": "@@ -211,7 +211,9 @@ package body System.Tasking.Protected_Objects.Single_Entry is\n    is\n       Self_Id  : constant Task_Id := Entry_Call.Self;\n       Timedout : Boolean;\n+\n       Yielded  : Boolean;\n+      pragma Unreferenced (Yielded);\n \n       use type Ada.Exceptions.Exception_Id;\n \n@@ -663,7 +665,7 @@ package body System.Tasking.Protected_Objects.Single_Entry is\n    -- Timed_Protected_Single_Entry_Call --\n    ---------------------------------------\n \n-   --  Compiler interface only. Do not call from within the RTS.\n+   --  Compiler interface only (do not call from within the RTS)\n \n    procedure Timed_Protected_Single_Entry_Call\n      (Object                : Protection_Entry_Access;"}, {"sha": "66cfc88a99302f3045b4115ad6fc73d8a4f11c38", "filename": "gcc/ada/sem_ch11.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fsem_ch11.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fsem_ch11.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch11.adb?ref=67ce0d7e96fd6802815643dbfb8505fad5318e95", "patch": "@@ -534,6 +534,8 @@ package body Sem_Ch11 is\n             Analyze_And_Resolve (Expression (N), Standard_String);\n          end if;\n       end if;\n+\n+      Kill_Current_Values (Last_Assignment_Only => True);\n    end Analyze_Raise_Statement;\n \n    -----------------------------"}, {"sha": "553f20040cb6686462e5360b3908b676ba2bb51b", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=67ce0d7e96fd6802815643dbfb8505fad5318e95", "patch": "@@ -707,8 +707,11 @@ package body Sem_Ch5 is\n                --  generate bogus warnings when an assignment is rewritten as\n                --  another assignment, and gets tied up with itself.\n \n+               --  Note: we don't use Record_Last_Assignment here, because we\n+               --  have lots of other stuff to do under control of this test.\n+\n                if Warn_On_Modified_Unread\n-                 and then Ekind (Ent) = E_Variable\n+                 and then Is_Assignable (Ent)\n                  and then Comes_From_Source (N)\n                  and then In_Extended_Main_Source_Unit (Ent)\n                then\n@@ -884,6 +887,10 @@ package body Sem_Ch5 is\n       Dont_Care      : Boolean;\n       Others_Present : Boolean;\n \n+      pragma Warnings (Off, Last_Choice);\n+      pragma Warnings (Off, Dont_Care);\n+      --  Don't care about assigned values\n+\n       Statements_Analyzed : Boolean := False;\n       --  Set True if at least some statement sequences get analyzed.\n       --  If False on exit, means we had a serious error that prevented\n@@ -981,6 +988,7 @@ package body Sem_Ch5 is\n       --  a call to Number_Of_Choices to get the right number of entries.\n \n       Case_Table : Choice_Table_Type (1 .. Number_Of_Choices (N));\n+      pragma Warnings (Off, Case_Table);\n \n    --  Start of processing for Analyze_Case_Statement\n \n@@ -1171,6 +1179,7 @@ package body Sem_Ch5 is\n \n    begin\n       Check_Unreachable_Code (N);\n+      Kill_Current_Values (Last_Assignment_Only => True);\n \n       Analyze (Label);\n       Label_Ent := Entity (Label);\n@@ -1771,6 +1780,8 @@ package body Sem_Ch5 is\n                         Hhi : Uint;\n                         HOK : Boolean;\n \n+                        pragma Warnings (Off, Hlo);\n+\n                      begin\n                         Determine_Range (L, LOK, Llo, Lhi);\n                         Determine_Range (H, HOK, Hlo, Hhi);"}, {"sha": "e7076b34e501f5e54f63df1064afe19967348967", "filename": "gcc/ada/sem_ch7.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fsem_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fsem_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch7.adb?ref=67ce0d7e96fd6802815643dbfb8505fad5318e95", "patch": "@@ -808,7 +808,7 @@ package body Sem_Ch7 is\n \n          E := FE;\n          while Present (E) and then E /= Id loop\n-            if Ekind (E) = E_Variable then\n+            if Is_Assignable (E) then\n                Set_Never_Set_In_Source (E, False);\n                Set_Is_True_Constant    (E, False);\n                Set_Current_Value       (E, Empty);"}, {"sha": "8a5ae003e5fe0bdf2c6df73f4030afbf38369018", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 40, "deletions": 5, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=67ce0d7e96fd6802815643dbfb8505fad5318e95", "patch": "@@ -3014,6 +3014,15 @@ package body Sem_Ch8 is\n       --  entity requires special handling because it may be use-visible\n       --  but hides directly visible entities defined outside the instance.\n \n+      function Is_Actual_Parameter return Boolean;\n+      --  This function checks if the node N is an identifier that is an actual\n+      --  parameter of a procedure call. If so it returns True, otherwise it\n+      --  return False. The reason for this check is that at this stage we do\n+      --  not know what procedure is being called if the procedure might be\n+      --  overloaded, so it is premature to go setting referenced flags or\n+      --  making calls to Generate_Reference. We will wait till Resolve_Actuals\n+      --  for that processing\n+\n       function Known_But_Invisible (E : Entity_Id) return Boolean;\n       --  This function determines whether the entity E (which is not\n       --  visible) can reasonably be considered to be known to the writer\n@@ -3093,6 +3102,23 @@ package body Sem_Ch8 is\n          end if;\n       end From_Actual_Package;\n \n+      -------------------------\n+      -- Is_Actual_Parameter --\n+      -------------------------\n+\n+      function Is_Actual_Parameter return Boolean is\n+      begin\n+         return\n+           Nkind (N) = N_Identifier\n+             and then\n+               (Nkind (Parent (N)) = N_Procedure_Call_Statement\n+                  or else\n+                    (Nkind (Parent (N)) = N_Parameter_Association\n+                       and then N = Explicit_Actual_Parameter (Parent (N))\n+                       and then Nkind (Parent (Parent (N))) =\n+                                          N_Procedure_Call_Statement));\n+      end Is_Actual_Parameter;\n+\n       -------------------------\n       -- Known_But_Invisible --\n       -------------------------\n@@ -3837,7 +3863,9 @@ package body Sem_Ch8 is\n             --  If no homonyms were visible, the entity is unambiguous\n \n             if not Is_Overloaded (N) then\n-               Generate_Reference (E, N);\n+               if not Is_Actual_Parameter then\n+                  Generate_Reference (E, N);\n+               end if;\n             end if;\n \n          --  Case of non-overloadable entity, set the entity providing that\n@@ -3856,10 +3884,11 @@ package body Sem_Ch8 is\n             if Nkind (Parent (N)) = N_Label then\n                declare\n                   R : constant Boolean := Referenced (E);\n-\n                begin\n-                  Generate_Reference (E, N);\n-                  Set_Referenced (E, R);\n+                  if not Is_Actual_Parameter then\n+                     Generate_Reference (E, N);\n+                     Set_Referenced (E, R);\n+                  end if;\n                end;\n \n             --  Normal case, not a label: generate reference\n@@ -3870,9 +3899,15 @@ package body Sem_Ch8 is\n             --    determine whether this reference modifies the denoted object\n             --    (because implicit derefences cannot be identified prior to\n             --    full type resolution).\n+            --\n+            --  ??? The Is_Actual_Parameter routine takes care of one of these\n+            --    cases but there are others probably\n \n             else\n-               Generate_Reference (E, N);\n+               if not Is_Actual_Parameter then\n+                  Generate_Reference (E, N);\n+               end if;\n+\n                Check_Nested_Access (E);\n             end if;\n "}, {"sha": "65ee2870de5c69437c6a73c570f26f23dbebff82", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=67ce0d7e96fd6802815643dbfb8505fad5318e95", "patch": "@@ -5519,6 +5519,8 @@ package body Sem_Prag is\n          when Pragma_Convention => Convention : declare\n             C : Convention_Id;\n             E : Entity_Id;\n+            pragma Warnings (Off, C);\n+            pragma Warnings (Off, E);\n          begin\n             Check_Arg_Order ((Name_Convention, Name_Entity));\n             Check_Ada_83_Warning;\n@@ -6151,6 +6153,8 @@ package body Sem_Prag is\n             C      : Convention_Id;\n             Def_Id : Entity_Id;\n \n+            pragma Warnings (Off, C);\n+\n          begin\n             Check_Ada_83_Warning;\n             Check_Arg_Order\n@@ -6540,8 +6544,11 @@ package body Sem_Prag is\n          --    [, [Link_Name     =>] static_string_EXPRESSION ]);\n \n          when Pragma_External => External : declare\n-            C      : Convention_Id;\n-            Def_Id : Entity_Id;\n+               Def_Id : Entity_Id;\n+\n+               C : Convention_Id;\n+               pragma Warnings (Off, C);\n+\n          begin\n             GNAT_Pragma;\n             Check_Arg_Order"}, {"sha": "258064aa20d28a582c3ee35c8ab24817f9a1fadc", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 88, "deletions": 20, "changes": 108, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=67ce0d7e96fd6802815643dbfb8505fad5318e95", "patch": "@@ -116,6 +116,10 @@ package body Sem_Res is\n    --  initialization of individual components within the init proc itself.\n    --  Could be optimized away perhaps?\n \n+   function Is_Definite_Access_Type (E : Entity_Id) return Boolean;\n+   --  Determine whether E is an access type declared by an access\n+   --  declaration, and not an (anonymous) allocator type.\n+\n    function Is_Predefined_Op (Nam : Entity_Id) return Boolean;\n    --  Utility to check whether the name in the call is a predefined\n    --  operator, in which case the call is made into an operator node.\n@@ -989,6 +993,18 @@ package body Sem_Res is\n       end if;\n    end Check_Parameterless_Call;\n \n+   -----------------------------\n+   -- Is_Definite_Access_Type --\n+   -----------------------------\n+\n+   function Is_Definite_Access_Type (E : Entity_Id) return Boolean is\n+      Btyp : constant Entity_Id := Base_Type (E);\n+   begin\n+      return Ekind (Btyp) = E_Access_Type\n+        or else (Ekind (Btyp) = E_Access_Subprogram_Type\n+                  and then Comes_From_Source (Btyp));\n+   end Is_Definite_Access_Type;\n+\n    ----------------------\n    -- Is_Predefined_Op --\n    ----------------------\n@@ -1024,10 +1040,6 @@ package body Sem_Res is\n \n       type Kind_Test is access function (E : Entity_Id) return Boolean;\n \n-      function Is_Definite_Access_Type (E : Entity_Id) return Boolean;\n-      --  Determine whether E is an access type declared by an access decla-\n-      --  ration, and  not an (anonymous) allocator type.\n-\n       function Operand_Type_In_Scope (S : Entity_Id) return Boolean;\n       --  If the operand is not universal, and the operator is given by a\n       --  expanded name,  verify that the operand has an interpretation with\n@@ -1037,18 +1049,6 @@ package body Sem_Res is\n       --  Find a type of the given class in the package Pack that contains\n       --  the operator.\n \n-      -----------------------------\n-      -- Is_Definite_Access_Type --\n-      -----------------------------\n-\n-      function Is_Definite_Access_Type (E : Entity_Id) return Boolean is\n-         Btyp : constant Entity_Id := Base_Type (E);\n-      begin\n-         return Ekind (Btyp) = E_Access_Type\n-           or else (Ekind (Btyp) = E_Access_Subprogram_Type\n-                     and then Comes_From_Source (Btyp));\n-      end Is_Definite_Access_Type;\n-\n       ---------------------------\n       -- Operand_Type_In_Scope --\n       ---------------------------\n@@ -2568,6 +2568,7 @@ package body Sem_Res is\n       A_Typ  : Entity_Id;\n       F_Typ  : Entity_Id;\n       Prev   : Node_Id := Empty;\n+      Orig_A : Node_Id;\n \n       procedure Check_Prefixed_Call;\n       --  If the original node is an overloaded call in prefix notation,\n@@ -3042,10 +3043,44 @@ package body Sem_Res is\n                end if;\n             end if;\n \n-            if Ekind (F) /= E_In_Parameter\n-              and then not Is_OK_Variable_For_Out_Formal (A)\n-            then\n-               Error_Msg_NE (\"actual for& must be a variable\", A, F);\n+            --  For IN parameter, this is where we generate a reference after\n+            --  resolution is complete.\n+\n+            if Ekind (F) = E_In_Parameter then\n+               Orig_A := Original_Node (A);\n+\n+               if Is_Entity_Name (Orig_A)\n+                 and then Present (Entity (Orig_A))\n+               then\n+                  Generate_Reference (Entity (Orig_A), Orig_A);\n+               end if;\n+\n+            --  Case of OUT or IN OUT parameter\n+\n+            else\n+               --  Validate the form of the actual. Note that the call to\n+               --  Is_OK_Variable_For_Out_Formal generates the required\n+               --  reference in this case.\n+\n+               if not Is_OK_Variable_For_Out_Formal (A) then\n+                  Error_Msg_NE (\"actual for& must be a variable\", A, F);\n+               end if;\n+\n+               --  For an Out parameter, check for useless assignment. Note\n+               --  that we can't set Last_Assignment this early, because we\n+               --  may kill current values in Resolve_Call, and that call\n+               --  would clobber the Last_Assignment field.\n+\n+               if Ekind (F) = E_Out_Parameter then\n+                  if Warn_On_Out_Parameter_Unread\n+                    and then Is_Entity_Name (A)\n+                    and then Present (Entity (A))\n+                  then\n+                     Warn_On_Useless_Assignment (Entity (A), Sloc (A));\n+                  end if;\n+               end if;\n+\n+               --  What's the following about???\n \n                if Is_Entity_Name (A) then\n                   Kill_Checks (Entity (A));\n@@ -4774,6 +4809,37 @@ package body Sem_Res is\n          Kill_Current_Values;\n       end if;\n \n+      --  If we are warning about unread out parameters, this is the place to\n+      --  set Last_Assignment for out parameters. We have to do this after the\n+      --  above call to Kill_Current_Values (since that call clears the\n+      --  Last_Assignment field of all local variables).\n+\n+      if Warn_On_Out_Parameter_Unread\n+        and then Comes_From_Source (N)\n+        and then In_Extended_Main_Source_Unit (N)\n+      then\n+         declare\n+            F : Entity_Id;\n+            A : Node_Id;\n+\n+         begin\n+            F := First_Formal (Nam);\n+            A := First_Actual (N);\n+            while Present (F) and then Present (A) loop\n+               if Ekind (F) = E_Out_Parameter\n+                 and then Is_Entity_Name (A)\n+                 and then Present (Entity (A))\n+                 and then Safe_To_Capture_Value (N, Entity (A))\n+               then\n+                  Set_Last_Assignment (Entity (A), A);\n+               end if;\n+\n+               Next_Formal (F);\n+               Next_Actual (A);\n+            end loop;\n+         end;\n+      end if;\n+\n       --  If the subprogram is a primitive operation, check whether or not\n       --  it is a correct dispatching call.\n \n@@ -4804,6 +4870,8 @@ package body Sem_Res is\n          Check_Intrinsic_Call (N);\n       end if;\n \n+      --  All done, evaluate call and deal with elaboration issues\n+\n       Eval_Call (N);\n       Check_Elab_Call (N);\n    end Resolve_Call;"}, {"sha": "4612ad365178d4e123a74e90d7f9c72ea2531164", "filename": "gcc/ada/sem_type.adb", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fsem_type.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fsem_type.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_type.adb?ref=67ce0d7e96fd6802815643dbfb8505fad5318e95", "patch": "@@ -494,10 +494,13 @@ package body Sem_Type is\n            and then Is_Overloaded (Name (N))\n          then\n             declare\n-               I  : Interp_Index;\n                It : Interp;\n+\n+               Itn : Interp_Index;\n+               pragma Warnings (Off, Itn);\n+\n             begin\n-               Get_First_Interp (Name (N), I, It);\n+               Get_First_Interp (Name (N), Itn, It);\n                Add_Entry (It.Nam, Etype (N));\n             end;\n "}, {"sha": "a6c35d3e9ef3340f051b92ecfe5e8d333c0c19fd", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 84, "deletions": 11, "changes": 95, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=67ce0d7e96fd6802815643dbfb8505fad5318e95", "patch": "@@ -2192,6 +2192,9 @@ package body Sem_Util is\n       if Dynamic_Scope = Standard_Standard then\n          return Empty;\n \n+      elsif Dynamic_Scope = Empty then\n+         return Empty;\n+\n       elsif Ekind (Dynamic_Scope) = E_Subprogram_Body then\n          return Corresponding_Spec (Parent (Parent (Dynamic_Scope)));\n \n@@ -2629,6 +2632,69 @@ package body Sem_Util is\n       end if;\n    end Explain_Limited_Type;\n \n+   ----------------------\n+   -- Find_Actual_Mode --\n+   ----------------------\n+\n+   procedure Find_Actual_Mode\n+     (N    : Node_Id;\n+      Kind : out Entity_Kind;\n+      Call : out Node_Id)\n+   is\n+      Parnt  : constant Node_Id := Parent (N);\n+      Formal : Entity_Id;\n+      Actual : Node_Id;\n+\n+   begin\n+      if (Nkind (Parnt) = N_Indexed_Component\n+            or else\n+          Nkind (Parnt) = N_Selected_Component)\n+        and then N = Prefix (Parnt)\n+      then\n+         Find_Actual_Mode (Parnt, Kind, Call);\n+         return;\n+\n+      elsif Nkind (Parnt) = N_Parameter_Association\n+        and then N = Explicit_Actual_Parameter (Parnt)\n+      then\n+         Call := Parent (Parnt);\n+\n+      elsif Nkind (Parnt) = N_Procedure_Call_Statement then\n+         Call := Parnt;\n+\n+      else\n+         Kind := E_Void;\n+         Call := Empty;\n+         return;\n+      end if;\n+\n+      --  If we have a call to a subprogram look for the parametere\n+\n+      if Is_Entity_Name (Name (Call))\n+        and then Present (Entity (Name (Call)))\n+        and then Is_Overloadable (Entity (Name (Call)))\n+      then\n+         --  Fall here if we are definitely a parameter\n+\n+         Actual := First_Actual (Call);\n+         Formal := First_Formal (Entity (Name (Call)));\n+         while Present (Formal) and then Present (Actual) loop\n+            if Actual = N then\n+               Kind := Ekind (Formal);\n+               return;\n+            else\n+               Actual := Next_Actual (Actual);\n+               Formal := Next_Formal (Formal);\n+            end if;\n+         end loop;\n+      end if;\n+\n+      --  Fall through here if we did not find matching actual\n+\n+      Kind := E_Void;\n+      Call := Empty;\n+   end Find_Actual_Mode;\n+\n    -------------------------------------\n    -- Find_Corresponding_Discriminant --\n    -------------------------------------\n@@ -5827,7 +5893,9 @@ package body Sem_Util is\n       Comp_List     : Node_Id;\n       Discr         : Entity_Id;\n       Discr_Val     : Node_Id;\n+\n       Report_Errors : Boolean;\n+      pragma Warnings (Off, Report_Errors);\n \n    begin\n       if Serious_Errors_Detected > 0 then\n@@ -6923,16 +6991,19 @@ package body Sem_Util is\n    -- Kill_Current_Values --\n    -------------------------\n \n-   procedure Kill_Current_Values (Ent : Entity_Id) is\n+   procedure Kill_Current_Values\n+     (Ent                  : Entity_Id;\n+      Last_Assignment_Only : Boolean := False)\n+   is\n    begin\n-      if Is_Object (Ent) then\n+      if Is_Assignable (Ent) then\n+         Set_Last_Assignment (Ent, Empty);\n+      end if;\n+\n+      if not Last_Assignment_Only and then Is_Object (Ent) then\n          Kill_Checks (Ent);\n          Set_Current_Value (Ent, Empty);\n \n-         if Ekind (Ent) = E_Variable then\n-            Set_Last_Assignment (Ent, Empty);\n-         end if;\n-\n          if not Can_Never_Be_Null (Ent) then\n             Set_Is_Known_Non_Null (Ent, False);\n          end if;\n@@ -6941,7 +7012,7 @@ package body Sem_Util is\n       end if;\n    end Kill_Current_Values;\n \n-   procedure Kill_Current_Values is\n+   procedure Kill_Current_Values (Last_Assignment_Only : Boolean := False) is\n       S : Entity_Id;\n \n       procedure Kill_Current_Values_For_Entity_Chain (E : Entity_Id);\n@@ -6956,7 +7027,7 @@ package body Sem_Util is\n       begin\n          Ent := E;\n          while Present (Ent) loop\n-            Kill_Current_Values (Ent);\n+            Kill_Current_Values (Ent, Last_Assignment_Only);\n             Next_Entity (Ent);\n          end loop;\n       end Kill_Current_Values_For_Entity_Chain;\n@@ -6966,7 +7037,9 @@ package body Sem_Util is\n    begin\n       --  Kill all saved checks, a special case of killing saved values\n \n-      Kill_All_Checks;\n+      if not Last_Assignment_Only then\n+         Kill_All_Checks;\n+      end if;\n \n       --  Loop through relevant scopes, which includes the current scope and\n       --  any parent scopes if the current scope is a block or a package.\n@@ -7766,8 +7839,8 @@ package body Sem_Util is\n                  and then Nkind (Expression (Parent (Entity (P))))\n                    = N_Reference\n                then\n-                  --  Case of a reference to a value on which\n-                  --  side effects have been removed.\n+                  --  Case of a reference to a value on which side effects have\n+                  --  been removed.\n \n                   Exp := Prefix (Expression (Parent (Entity (P))));\n                   goto Continue;"}, {"sha": "1e023252b568481bbac96f2cc13866de83cd5310", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 28, "deletions": 4, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=67ce0d7e96fd6802815643dbfb8505fad5318e95", "patch": "@@ -283,6 +283,17 @@ package Sem_Util is\n    --  adds additional continuation lines to the message explaining\n    --  why type T is limited. Messages are placed at node N.\n \n+   procedure Find_Actual_Mode\n+     (N    : Node_Id;\n+      Kind : out Entity_Kind;\n+      Call : out Node_Id);\n+   --  Determines if the node N is an actual parameter of a procedure call. If\n+   --  so, then Kind is E_In_Parameter, E_Out_Parameter, E_In_Out_Parameter on\n+   --  return as appropriate, and Call is set to the node for the corresponding\n+   --  call. If the node N is not an actual parameter, then Kind = E_Void, Call\n+   --  = Empty. Note that this only applies to procedure calls, for function\n+   --  calls, the result is always E_Void.\n+\n    function Find_Corresponding_Discriminant\n      (Id   : Node_Id;\n       Typ  : Entity_Id) return Entity_Id;\n@@ -743,7 +754,7 @@ package Sem_Util is\n    --  here is for something actually declared as volatile, not for an object\n    --  that gets treated as volatile (see Einfo.Treat_As_Volatile).\n \n-   procedure Kill_Current_Values;\n+   procedure Kill_Current_Values (Last_Assignment_Only : Boolean := False);\n    --  This procedure is called to clear all constant indications from all\n    --  entities in the current scope and in any parent scopes if the current\n    --  scope is a block or a package (and that recursion continues to the top\n@@ -756,11 +767,24 @@ package Sem_Util is\n    --  Kill_All_Checks, since this is a special case of needing to forget saved\n    --  values. This procedure also clears Is_Known_Non_Null flags in variables,\n    --  constants or parameters since these are also not known to be valid.\n-\n-   procedure Kill_Current_Values (Ent : Entity_Id);\n+   --\n+   --  The Last_Assignment_Only flag is set True to clear only Last_Assignment\n+   --  fields and leave other fields unchanged. This is used when we encounter\n+   --  an unconditional flow of control change (return, goto, raise). In such\n+   --  cases we don't need to clear the current values, since it may be that\n+   --  the flow of control change occurs in a conditional context, and if it\n+   --  is not taken, then it is just fine to keep the current values. But the\n+   --  Last_Assignment field is different, if we have a sequence assign-to-v,\n+   --  conditional-return, assign-to-v, we do not want to complain that the\n+   --  second assignment clobbers the first.\n+\n+   procedure Kill_Current_Values\n+     (Ent                  : Entity_Id;\n+      Last_Assignment_Only : Boolean := False);\n    --  This performs the same processing as described above for the form with\n    --  no argument, but for the specific entity given. The call has no effect\n-   --  if the entity Ent is not for an object.\n+   --  if the entity Ent is not for an object. Again, Last_Assignment_Only is\n+   --  set if you want to clear only the Last_Assignment field (see above).\n \n    procedure Kill_Size_Check_Code (E : Entity_Id);\n    --  Called when an address clause or pragma Import is applied to an"}, {"sha": "65ea957c74436f865ec7d2a0d999d19b9ac3c54b", "filename": "gcc/ada/sem_warn.adb", "status": "modified", "additions": 29, "deletions": 7, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fsem_warn.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fsem_warn.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_warn.adb?ref=67ce0d7e96fd6802815643dbfb8505fad5318e95", "patch": "@@ -1119,8 +1119,9 @@ package body Sem_Warn is\n                            or else\n                         (Check_Unreferenced_Formals and then Is_Formal (E1))\n                            or else\n-                        (Warn_On_Modified_Unread\n-                          and then Referenced_As_LHS_Check_Spec (E1)))\n+                        ((Warn_On_Modified_Unread\n+                             or Warn_On_Out_Parameter_Unread)\n+                           and then Referenced_As_LHS_Check_Spec (E1)))\n \n                --  Labels, and enumeration literals, and exceptions. The\n                --  warnings are also placed on local packages that cannot be\n@@ -2529,6 +2530,12 @@ package body Sem_Warn is\n          when 'C' =>\n             Warn_On_Unrepped_Components         := False;\n \n+         when 'o' =>\n+            Warn_On_Out_Parameter_Unread        := True;\n+\n+         when 'O' =>\n+            Warn_On_Out_Parameter_Unread        := False;\n+\n          when 'r' =>\n             Warn_On_Object_Renames_Function     := True;\n \n@@ -2597,6 +2604,7 @@ package body Sem_Warn is\n             Warn_On_No_Value_Assigned           := False;\n             Warn_On_Non_Local_Exception         := False;\n             Warn_On_Obsolescent_Feature         := False;\n+            Warn_On_Out_Parameter_Unread        := False;\n             Warn_On_Questionable_Missing_Parens := False;\n             Warn_On_Redundant_Constructs        := False;\n             Warn_On_Object_Renames_Function     := False;\n@@ -3256,6 +3264,7 @@ package body Sem_Warn is\n       Body_E : Entity_Id := Empty)\n    is\n       E : Entity_Id := Spec_E;\n+\n    begin\n       if not Referenced_Check_Spec (E) and then not Warnings_Off (E) then\n          case Ekind (E) is\n@@ -3269,7 +3278,7 @@ package body Sem_Warn is\n                  and then No (Address_Clause (E))\n                  and then not Is_Volatile (E)\n                then\n-                  if Warn_On_Modified_Unread\n+                  if (Warn_On_Modified_Unread or Warn_On_Out_Parameter_Unread)\n                     and then not Is_Imported (E)\n                     and then not Is_Return_Object (E)\n \n@@ -3425,7 +3434,7 @@ package body Sem_Warn is\n       --  last assignment field set, with warnings enabled, and which is\n       --  not imported or exported.\n \n-      if Ekind (Ent) = E_Variable\n+      if Is_Assignable (Ent)\n         and then not Is_Return_Object (Ent)\n         and then Present (Last_Assignment (Ent))\n         and then not Warnings_Off (Ent)\n@@ -3451,17 +3460,30 @@ package body Sem_Warn is\n             elsif Nkind (P) = N_Subprogram_Body\n               or else Nkind (P) = N_Package_Body\n             then\n+               --  Case of assigned value never referenced\n+\n                if Loc = No_Location then\n-                  Error_Msg_NE\n-                    (\"?useless assignment to&, value never referenced!\",\n-                     Last_Assignment (Ent), Ent);\n+\n+                  --  Don't give this for OUT and IN OUT formals, since\n+                  --  clearly caller may reference the assigned value.\n+\n+                  if Ekind (Ent) = E_Variable then\n+                     Error_Msg_NE\n+                       (\"?useless assignment to&, value never referenced!\",\n+                        Last_Assignment (Ent), Ent);\n+                  end if;\n+\n+               --  Case of assigned value overwritten\n+\n                else\n                   Error_Msg_Sloc := Loc;\n                   Error_Msg_NE\n                     (\"?useless assignment to&, value overwritten #!\",\n                      Last_Assignment (Ent), Ent);\n                end if;\n \n+               --  Clear last assignment indication and we are done\n+\n                Set_Last_Assignment (Ent, Empty);\n                return;\n "}, {"sha": "23618d105c2ca424f0e11d9ab2dac480b5cff2fe", "filename": "gcc/ada/sem_warn.ads", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fsem_warn.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fsem_warn.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_warn.ads?ref=67ce0d7e96fd6802815643dbfb8505fad5318e95", "patch": "@@ -179,10 +179,11 @@ package Sem_Warn is\n       Loc : Source_Ptr := No_Location);\n    --  Called to check if we have a case of a useless assignment to the given\n    --  entity Ent, as indicated by a non-empty Last_Assignment field. This call\n-   --  should only be made if Warn_On_Modified_Unread is True, and if Ent is in\n-   --  the extended main source unit. Loc is No_Location for the end of block\n-   --  call (warning msg says value unreferenced), or the it is the location of\n-   --  an overwriting assignment (warning msg points to this assignment).\n+   --  should only be made if at least one of the flags Warn_On_Modified_Unread\n+   --  or Warn_On_Out_Parameter_Unread is True, and if Ent is in the extended\n+   --  main source unit. Loc is No_Location for the end of block call (warning\n+   --  message says value unreferenced), or the it is the location of an\n+   --  overwriting assignment (warning message points to this assignment).\n \n    procedure Warn_On_Useless_Assignments (E : Entity_Id);\n    pragma Inline (Warn_On_Useless_Assignments);"}, {"sha": "61a1400369e5b39da101a9a793f320df615cac8c", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=67ce0d7e96fd6802815643dbfb8505fad5318e95", "patch": "@@ -3672,10 +3672,10 @@ package Sinfo is\n       --  N_Allocator\n       --  Sloc points to NEW\n       --  Expression (Node3) subtype indication or qualified expression\n-      --  Null_Exclusion_Present (Flag11)\n       --  Storage_Pool (Node1-Sem)\n       --  Procedure_To_Call (Node2-Sem)\n       --  Coextensions (Elist4-Sem)\n+      --  Null_Exclusion_Present (Flag11)\n       --  No_Initialization (Flag13-Sem)\n       --  Is_Static_Coextension (Flag14-Sem)\n       --  Do_Storage_Check (Flag17-Sem)"}, {"sha": "a860058c9002e7f003a3dd80f831352ab65f7557", "filename": "gcc/ada/sinput-d.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fsinput-d.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fsinput-d.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinput-d.adb?ref=67ce0d7e96fd6802815643dbfb8505fad5318e95", "patch": "@@ -39,6 +39,8 @@ package body Sinput.D is\n       S    : Source_File_Record renames Source_File.Table (Dfile);\n       Src  : Source_Buffer_Ptr;\n \n+      pragma Warnings (Off, S);\n+\n    begin\n       Trim_Lines_Table (Dfile);\n       Close_Debug_File;"}, {"sha": "a6cd38c591b6e8e603af4f5eaedea02f86d1b6eb", "filename": "gcc/ada/stylesw.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fstylesw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fstylesw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fstylesw.adb?ref=67ce0d7e96fd6802815643dbfb8505fad5318e95", "patch": "@@ -180,6 +180,7 @@ package body Stylesw is\n    procedure Set_Style_Check_Options (Options : String) is\n       OK : Boolean;\n       EC : Natural;\n+      pragma Warnings (Off, EC);\n    begin\n       Set_Style_Check_Options (Options, OK, EC);\n       pragma Assert (OK);"}, {"sha": "39c9beb3202b07265995a85ab936ce9744d81b62", "filename": "gcc/ada/symbols-vms.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fsymbols-vms.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fsymbols-vms.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsymbols-vms.adb?ref=67ce0d7e96fd6802815643dbfb8505fad5318e95", "patch": "@@ -103,7 +103,6 @@ package body Symbols is\n    begin\n       if Result (Result'First) = ' ' then\n          return Result (Result'First + 1 .. Result'Last);\n-\n       else\n          return Result;\n       end if;"}, {"sha": "61318c8bcb81217ca9df3372c3f75b68e40e561f", "filename": "gcc/ada/types.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Ftypes.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Ftypes.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftypes.ads?ref=67ce0d7e96fd6802815643dbfb8505fad5318e95", "patch": "@@ -93,7 +93,7 @@ package Types is\n \n    EOF : constant Character := ASCII.SUB;\n    --  The character SUB (16#1A#) is used in DOS and other systems derived\n-   --  from DOS (OS/2, NT etc) to signal the end of a text file. Internally\n+   --  from DOS (XP, NT etc) to signal the end of a text file. Internally\n    --  all source files are ended by an EOF character, even on Unix systems.\n    --  An EOF character acts as the end of file only as the last character\n    --  of a source buffer, in any other position, it is treated as a blank"}, {"sha": "2582b6360cc8235d38baf646f55db2f1a46ed00a", "filename": "gcc/ada/ug_words", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fug_words", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fug_words", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fug_words?ref=67ce0d7e96fd6802815643dbfb8505fad5318e95", "patch": "@@ -140,6 +140,8 @@ gcc -c          ^ GNAT COMPILE\n -gnatwn         ^ /WARNINGS=NORMAL\n -gnatwo         ^ /WARNINGS=OVERLAYS\n -gnatwO         ^ /WARNINGS=NOOVERLAYS\n+-gnatw.o        ^ /WARNINGS=OUT_PARAM_UNREF\n+-gnatw.O        ^ /WARNINGS=NOOUT_PARAM_UNREF\n -gnatwp         ^ /WARNINGS=INEFFECTIVE_INLINE\n -gnatwP         ^ /WARNINGS=NOINEFFECTIVE_INLINE\n -gnatwq         ^ /WARNINGS=MISSING_PARENS"}, {"sha": "4ee886ebc9eaf5f8441631e1a23f2dc5a25df3e2", "filename": "gcc/ada/uintp.adb", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fuintp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fuintp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fuintp.adb?ref=67ce0d7e96fd6802815643dbfb8505fad5318e95", "patch": "@@ -1259,6 +1259,7 @@ package body Uintp is\n    function UI_Div (Left, Right : Uint) return Uint is\n       Quotient  : Uint;\n       Remainder : Uint;\n+      pragma Warnings (Off, Remainder);\n    begin\n       UI_Div_Rem\n         (Left, Right,\n@@ -1536,6 +1537,7 @@ package body Uintp is\n                declare\n                   Remainder_V : UI_Vector (1 .. R_Length);\n                   Discard_Int : Int;\n+                  pragma Warnings (Off, Discard_Int);\n                begin\n                   UI_Div_Vector\n                     (Dividend (Dividend'Last - R_Length + 1 .. Dividend'Last),\n@@ -2571,7 +2573,9 @@ package body Uintp is\n       end if;\n \n       declare\n-         Quotient, Remainder : Uint;\n+         Remainder : Uint;\n+         Quotient  : Uint;\n+         pragma Warnings (Off, Quotient);\n       begin\n          UI_Div_Rem\n            (Left, Right, Quotient, Remainder,"}, {"sha": "ae5ee42268b7a3bf33c5e64a671ed3942f8c347c", "filename": "gcc/ada/usage.adb", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fusage.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fusage.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fusage.adb?ref=67ce0d7e96fd6802815643dbfb8505fad5318e95", "patch": "@@ -362,7 +362,7 @@ begin\n \n    Write_Switch_Char (\"wxx\");\n    Write_Line (\"Enable selected warning modes, xx = list of parameters:\");\n-   Write_Line (\"        a    turn on all optional warnings (except d,h,l,t)\");\n+   Write_Line (\"        a    turn on all optional warnings (except d h l .o)\");\n    Write_Line (\"        A    turn off all optional warnings\");\n    Write_Line (\"        b    turn on warnings for bad fixed value \" &\n                                                   \"(not multiple of small)\");\n@@ -400,6 +400,10 @@ begin\n    Write_Line (\"        n*   normal warning mode (cancels -gnatws/-gnatwe)\");\n    Write_Line (\"        o*   turn on warnings for address clause overlay\");\n    Write_Line (\"        O    turn off warnings for address clause overlay\");\n+   Write_Line (\"        .o   turn on warnings for out parameter assigned \" &\n+                                                  \"but not read\");\n+   Write_Line (\"        .O*  turn off warnings for out parameter assigned \" &\n+                                                  \"but not read\");\n    Write_Line (\"        p    turn on warnings for ineffective pragma \" &\n                                              \"Inline in frontend\");\n    Write_Line (\"        P*   turn off warnings for ineffective pragma \" &"}, {"sha": "1c7d5cfc63a6684483aedf460ee29fd205fe1dec", "filename": "gcc/ada/validsw.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fvalidsw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fvalidsw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fvalidsw.adb?ref=67ce0d7e96fd6802815643dbfb8505fad5318e95", "patch": "@@ -104,7 +104,8 @@ package body Validsw is\n    procedure Set_Validity_Check_Options (Options : String) is\n       OK : Boolean;\n       EC : Natural;\n-\n+      pragma Warnings (Off, OK);\n+      pragma Warnings (Off, EC);\n    begin\n       Set_Validity_Check_Options (Options, OK, EC);\n    end Set_Validity_Check_Options;"}, {"sha": "5b8d59bd5a7f2887ef00b6e1eaca4f144d1e24d0", "filename": "gcc/ada/vms_data.ads", "status": "modified", "additions": 49, "deletions": 46, "changes": 95, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fvms_data.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ce0d7e96fd6802815643dbfb8505fad5318e95/gcc%2Fada%2Fvms_data.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fvms_data.ads?ref=67ce0d7e96fd6802815643dbfb8505fad5318e95", "patch": "@@ -2586,6 +2586,10 @@ package VMS_Data is\n                                                \"!-gnatws,!-gnatwe \"        &\n                                             \"ALL \"                         &\n                                                \"-gnatwa \"                  &\n+                                            \"OPTIONAL \"                    &\n+                                               \"-gnatwa \"                  &\n+                                            \"NOOPTIONAL \"                  &\n+                                               \"-gnatwA \"                  &\n                                             \"NOALL \"                       &\n                                                \"-gnatwA \"                  &\n                                             \"ALL_GCC \"                     &\n@@ -2602,20 +2606,20 @@ package VMS_Data is\n                                                \"-gnatw.c \"                 &\n                                             \"NOMISSING_COMPONENT_CLAUSES \" &\n                                                \"-gnatw.C \"                 &\n-                                            \"CONSTANT_VARIABLES \"          &\n-                                               \"-gnatwk \"                  &\n-                                            \"NOCONSTANT_VARIABLES \"        &\n-                                               \"-gnatwK \"                  &\n                                             \"IMPLICIT_DEREFERENCE \"        &\n                                                \"-gnatwd \"                  &\n                                             \"NO_IMPLICIT_DEREFERENCE \"     &\n                                                \"-gnatwD \"                  &\n-                                            \"ELABORATION \"                 &\n-                                               \"-gnatwl \"                  &\n-                                            \"NOELABORATION \"               &\n-                                               \"-gnatwL \"                  &\n                                             \"ERRORS \"                      &\n                                                \"-gnatwe \"                  &\n+                                            \"UNREFERENCED_FORMALS \"        &\n+                                               \"-gnatwf \"                  &\n+                                            \"NOUNREFERENCED_FORMALS \"      &\n+                                               \"-gnatwF \"                  &\n+                                            \"UNRECOGNIZED_PRAGMAS \"        &\n+                                               \"-gnatwg \"                  &\n+                                            \"NOUNRECOGNIZED_PRAGMAS \"      &\n+                                               \"-gnatwG \"                  &\n                                             \"HIDING \"                      &\n                                                \"-gnatwh \"                  &\n                                             \"NOHIDING \"                    &\n@@ -2624,36 +2628,48 @@ package VMS_Data is\n                                                \"-gnatwi \"                  &\n                                             \"NOIMPLEMENTATION \"            &\n                                                \"-gnatwI \"                  &\n-                                            \"INEFFECTIVE_INLINE \"          &\n-                                               \"-gnatwp \"                  &\n-                                            \"NOINEFFECTIVE_INLINE \"        &\n-                                               \"-gnatwP \"                  &\n-                                            \"MISSING_PARENS \"              &\n-                                               \"-gnatwq \"                  &\n-                                            \"NOMISSING_PARENS \"            &\n-                                               \"-gnatwQ \"                  &\n+                                            \"OBSOLESCENT \"                 &\n+                                               \"-gnatwj \"                  &\n+                                            \"NOOBSOLESCENT \"               &\n+                                               \"-gnatwJ \"                  &\n+                                            \"CONSTANT_VARIABLES \"          &\n+                                               \"-gnatwk \"                  &\n+                                            \"NOCONSTANT_VARIABLES \"        &\n+                                               \"-gnatwK \"                  &\n+                                            \"ELABORATION \"                 &\n+                                               \"-gnatwl \"                  &\n+                                            \"NOELABORATION \"               &\n+                                               \"-gnatwL \"                  &\n                                             \"MODIFIED_UNREF \"              &\n                                                \"-gnatwm \"                  &\n                                             \"NOMODIFIED_UNREF \"            &\n                                                \"-gnatwM \"                  &\n                                             \"NORMAL \"                      &\n                                                \"-gnatwn \"                  &\n-                                            \"OBSOLESCENT \"                 &\n-                                               \"-gnatwj \"                  &\n-                                            \"NOOBSOLESCENT \"               &\n-                                               \"-gnatwJ \"                  &\n-                                            \"OPTIONAL \"                    &\n-                                               \"-gnatwa \"                  &\n-                                            \"NOOPTIONAL \"                  &\n-                                               \"-gnatwA \"                  &\n                                             \"OVERLAYS \"                    &\n                                                \"-gnatwo \"                  &\n                                             \"NOOVERLAYS \"                  &\n                                                \"-gnatwO \"                  &\n+                                            \"OUT_PARAM_UNREF \"             &\n+                                               \"-gnatw.o \"                 &\n+                                            \"NOOUT_PARAM_UNREF \"           &\n+                                               \"-gnatw.O \"                 &\n+                                            \"INEFFECTIVE_INLINE \"          &\n+                                               \"-gnatwp \"                  &\n+                                            \"NOINEFFECTIVE_INLINE \"        &\n+                                               \"-gnatwP \"                  &\n+                                            \"MISSING_PARENS \"              &\n+                                               \"-gnatwq \"                  &\n+                                            \"NOMISSING_PARENS \"            &\n+                                               \"-gnatwQ \"                  &\n                                             \"REDUNDANT \"                   &\n                                                \"-gnatwr \"                  &\n                                             \"NOREDUNDANT \"                 &\n                                                \"-gnatwR \"                  &\n+                                            \"OBJECT_RENAMES \"              &\n+                                               \"-gnatw.r \"                 &\n+                                            \"NOOBJECT_RENAMES \"            &\n+                                               \"-gnatw.R \"                 &\n                                             \"SUPPRESS \"                    &\n                                                \"-gnatws \"                  &\n                                             \"DELETED_CODE \"                &\n@@ -2662,14 +2678,6 @@ package VMS_Data is\n                                                \"-gnatwT \"                  &\n                                             \"UNINITIALIZED \"               &\n                                                \"-Wuninitialized \"          &\n-                                            \"UNREFERENCED_FORMALS \"        &\n-                                               \"-gnatwf \"                  &\n-                                            \"NOUNREFERENCED_FORMALS \"      &\n-                                               \"-gnatwF \"                  &\n-                                            \"UNRECOGNIZED_PRAGMAS \"        &\n-                                               \"-gnatwg \"                  &\n-                                            \"NOUNRECOGNIZED_PRAGMAS \"      &\n-                                               \"-gnatwG \"                  &\n                                             \"UNUSED \"                      &\n                                                \"-gnatwu \"                  &\n                                             \"NOUNUSED \"                    &\n@@ -2870,20 +2878,15 @@ package VMS_Data is\n    --   NOOBSOLESCENT           Disables warnings on use of obsolescent\n    --                           features.\n    --\n-   --   OPTIONAL                Activate all optional warning messages.\n-   --                           See other options under this qualifier\n-   --                           for details on optional warning messages\n-   --                           that can be individually controlled. The\n-   --                           one exception is that /WARNINGS=OPTIONAL\n-   --                           doesn't activate warnings for hiding\n-   --                           variables (/WARNINGS=HIDING), so if this\n-   --                           warning is required it must be explicitly\n-   --                           set.\n-   --\n-   --   NOOPTIONAL              Suppress all optional warning messages.\n-   --                           See other options under this qualifier\n-   --                           for details on optional warning messages\n-   --                           that can be individually controlled.\n+   --   OBJECT_RENAME           Activate warnings for non limited objects\n+   --                           renaming parameterless functions.\n+   --\n+   --   NOOBJECT_RENAME         Suppress warnings for non limited objects\n+   --                           renaming parameterless functions.\n+   --\n+   --   OPTIONAL                Equivalent to ALL.\n+   --\n+   --   NOOPTIONAL              Equivalent to NOALL.\n    --\n    --   OVERLAYS                Activate warnings for possibly unintended\n    --                           initialization effects of defining address"}]}