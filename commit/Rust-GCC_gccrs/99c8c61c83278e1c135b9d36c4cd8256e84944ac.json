{"sha": "99c8c61c83278e1c135b9d36c4cd8256e84944ac", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTljOGM2MWM4MzI3OGUxYzEzNWI5ZDM2YzRjZDgyNTZlODQ5NDRhYw==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2000-12-20T09:03:23Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2000-12-20T09:03:23Z"}, "message": "final.c (output_addr_const): Use ASM_OUTPUT_SYMBOL_REF.\n\n* final.c (output_addr_const): Use ASM_OUTPUT_SYMBOL_REF.\n* tm.texi: Document it.\n\nFrom-SVN: r38395", "tree": {"sha": "1fb56eb504c690b60263fbce975e03a73ddf0157", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1fb56eb504c690b60263fbce975e03a73ddf0157"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/99c8c61c83278e1c135b9d36c4cd8256e84944ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99c8c61c83278e1c135b9d36c4cd8256e84944ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99c8c61c83278e1c135b9d36c4cd8256e84944ac", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99c8c61c83278e1c135b9d36c4cd8256e84944ac/comments", "author": null, "committer": null, "parents": [{"sha": "f4665e9ba48443614d87456513fa926ec4e26f84", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4665e9ba48443614d87456513fa926ec4e26f84", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4665e9ba48443614d87456513fa926ec4e26f84"}], "stats": {"total": 17, "additions": 17, "deletions": 0}, "files": [{"sha": "1bfbdfa17f1c964a5e9b6d9b53afd46bda046154", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99c8c61c83278e1c135b9d36c4cd8256e84944ac/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99c8c61c83278e1c135b9d36c4cd8256e84944ac/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=99c8c61c83278e1c135b9d36c4cd8256e84944ac", "patch": "@@ -1,3 +1,8 @@\n+2000-12-20  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\t* final.c (output_addr_const): Use ASM_OUTPUT_SYMBOL_REF.\n+\t* tm.texi: Document it.\n+\n 2000-12-19  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* Makefile.in (-DGPLUSPLUS_TOOL_INCLUDE_DIR): Use build_tooldir"}, {"sha": "bbdb59eb13e6b4cb8c827a3bb7315e2f893706b8", "filename": "gcc/final.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99c8c61c83278e1c135b9d36c4cd8256e84944ac/gcc%2Ffinal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99c8c61c83278e1c135b9d36c4cd8256e84944ac/gcc%2Ffinal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffinal.c?ref=99c8c61c83278e1c135b9d36c4cd8256e84944ac", "patch": "@@ -3673,7 +3673,11 @@ output_addr_const (file, x)\n       break;\n \n     case SYMBOL_REF:\n+#ifdef ASM_OUTPUT_SYMBOL_REF\n+      ASM_OUTPUT_SYMBOL_REF (file, x);\n+#else\n       assemble_name (file, XSTR (x, 0));\n+#endif\n       break;\n \n     case LABEL_REF:"}, {"sha": "511f8f0dd4dd569f0bbe233d60fcc32be5f5694b", "filename": "gcc/tm.texi", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99c8c61c83278e1c135b9d36c4cd8256e84944ac/gcc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99c8c61c83278e1c135b9d36c4cd8256e84944ac/gcc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftm.texi?ref=99c8c61c83278e1c135b9d36c4cd8256e84944ac", "patch": "@@ -5949,6 +5949,14 @@ The definition should be a C statement to output a word containing\n a reference to the label @var{label}.\n @end ignore\n \n+@findex ASM_OUTPUT_SYMBOL_REF\n+@item ASM_OUTPUT_SYMBOL_REF (@var{stream}, @var{sym})\n+A C statement (sans semicolon) to output a reference to\n+@code{SYMBOL_REF} @var{sym}.  If not defined, @code{assemble_output}\n+will be used to output the name of the symbol.  This macro may be used\n+to modify the way a symbol is referenced depending on information\n+encoded by @code{ENCODE_SECTION_INFO}.\n+\n @findex ASM_OUTPUT_INTERNAL_LABEL\n @item ASM_OUTPUT_INTERNAL_LABEL (@var{stream}, @var{prefix}, @var{num})\n A C statement to output to the stdio stream @var{stream} a label whose"}]}