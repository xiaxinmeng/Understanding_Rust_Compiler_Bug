{"sha": "842eeb9b72e45297b0f6c8a712aa0ec03157b434", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODQyZWViOWI3MmU0NTI5N2IwZjZjOGE3MTJhYTBlYzAzMTU3YjQzNA==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2011-07-26T17:21:21Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2011-07-26T17:21:21Z"}, "message": "tree-sra.c (tree_non_mode_aligned_mem_p): Strip conversions and return false for invariants.\n\n2011-07-26  Martin Jambor  <mjambor@suse.cz>\n\n\t* tree-sra.c (tree_non_mode_aligned_mem_p): Strip conversions and\n\treturn false for invariants.\n\nFrom-SVN: r176797", "tree": {"sha": "6a6aa7d363a1e6f02730b72a15c2d5638595607d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6a6aa7d363a1e6f02730b72a15c2d5638595607d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/842eeb9b72e45297b0f6c8a712aa0ec03157b434", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/842eeb9b72e45297b0f6c8a712aa0ec03157b434", "html_url": "https://github.com/Rust-GCC/gccrs/commit/842eeb9b72e45297b0f6c8a712aa0ec03157b434", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/842eeb9b72e45297b0f6c8a712aa0ec03157b434/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "52bed4d7eeab395604e0d5e92d291be661d46222", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52bed4d7eeab395604e0d5e92d291be661d46222", "html_url": "https://github.com/Rust-GCC/gccrs/commit/52bed4d7eeab395604e0d5e92d291be661d46222"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "bc2fd587c1b346488cde5214251c26aa9196416b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/842eeb9b72e45297b0f6c8a712aa0ec03157b434/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/842eeb9b72e45297b0f6c8a712aa0ec03157b434/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=842eeb9b72e45297b0f6c8a712aa0ec03157b434", "patch": "@@ -1,3 +1,8 @@\n+2011-07-26  Martin Jambor  <mjambor@suse.cz>\n+\n+\t* tree-sra.c (tree_non_mode_aligned_mem_p): Strip conversions and\n+\treturn false for invariants.\n+\n 2011-07-26  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/i386.md (add->lea splitter): Implement using SWI"}, {"sha": "cc5cd36123f5030c3386bad00074d593c4f49f08", "filename": "gcc/tree-sra.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/842eeb9b72e45297b0f6c8a712aa0ec03157b434/gcc%2Ftree-sra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/842eeb9b72e45297b0f6c8a712aa0ec03157b434/gcc%2Ftree-sra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-sra.c?ref=842eeb9b72e45297b0f6c8a712aa0ec03157b434", "patch": "@@ -1075,9 +1075,13 @@ tree_non_mode_aligned_mem_p (tree exp)\n   enum machine_mode mode = TYPE_MODE (TREE_TYPE (exp));\n   unsigned int align;\n \n+  if (TREE_CODE (exp) == VIEW_CONVERT_EXPR)\n+    exp = TREE_OPERAND (exp, 0);\n+\n   if (TREE_CODE (exp) == SSA_NAME\n       || TREE_CODE (exp) == MEM_REF\n       || mode == BLKmode\n+      || is_gimple_min_invariant (exp)\n       || !STRICT_ALIGNMENT)\n     return false;\n "}]}