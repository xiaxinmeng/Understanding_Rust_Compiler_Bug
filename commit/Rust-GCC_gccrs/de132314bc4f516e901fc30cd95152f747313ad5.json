{"sha": "de132314bc4f516e901fc30cd95152f747313ad5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGUxMzIzMTRiYzRmNTE2ZTkwMWZjMzBjZDk1MTUyZjc0NzMxM2FkNQ==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2003-03-26T21:56:34Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2003-03-26T21:56:34Z"}, "message": "PR bootstrap/10051, PR bootstrap/10169.\n\n\t* mips-tfile.c (init_file): Don't provide a static initializer.\n\t(initialize_init_file): Initialize the contents of init_file.\n\t(add_file): Call initialize_init_file if not already initialized.\n\nFrom-SVN: r64904", "tree": {"sha": "2d9ba061eab8fa0740470731c09f8e63a49d06b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2d9ba061eab8fa0740470731c09f8e63a49d06b2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/de132314bc4f516e901fc30cd95152f747313ad5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de132314bc4f516e901fc30cd95152f747313ad5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de132314bc4f516e901fc30cd95152f747313ad5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de132314bc4f516e901fc30cd95152f747313ad5/comments", "author": null, "committer": null, "parents": [{"sha": "6f84708ae065be56867aa161a5e9d07a328a8782", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f84708ae065be56867aa161a5e9d07a328a8782", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f84708ae065be56867aa161a5e9d07a328a8782"}], "stats": {"total": 130, "additions": 44, "deletions": 86}, "files": [{"sha": "6aba36fde217dfd223f16648ce90a73e428a1ad5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de132314bc4f516e901fc30cd95152f747313ad5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de132314bc4f516e901fc30cd95152f747313ad5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=de132314bc4f516e901fc30cd95152f747313ad5", "patch": "@@ -1,3 +1,10 @@\n+2003-03-26  Roger Sayle  <roger@eyesopen.com>\n+\n+\tPR bootstrap/10051, PR bootstrap/10169.\n+\t* mips-tfile.c (init_file): Don't provide a static initializer.\n+\t(initialize_init_file): Initialize the contents of init_file.\n+\t(add_file): Call initialize_init_file if not already initialized.\n+\n 2003-03-26  Ulrich Weigand  <uweigand@de.ibm.com>\n \n \t* config/s390/s390.c (s390_optimize_prolog): Do not save/restore"}, {"sha": "b29a7da223480f73e22be5188358e797fdc6ec43", "filename": "gcc/mips-tfile.c", "status": "modified", "additions": 37, "deletions": 86, "changes": 123, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de132314bc4f516e901fc30cd95152f747313ad5/gcc%2Fmips-tfile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de132314bc4f516e901fc30cd95152f747313ad5/gcc%2Fmips-tfile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmips-tfile.c?ref=de132314bc4f516e901fc30cd95152f747313ad5", "patch": "@@ -950,6 +950,13 @@ typedef struct varray {\n   OBJECTS_PER_PAGE (type),\t/* objects_last_page */\t\t\t\\\n }\n \n+#define INITIALIZE_VARRAY(x,type)\t\t\t\\\n+do {\t\t\t\t\t\t\t\\\n+  (x)->object_size = sizeof (type);\t\t\t\\\n+  (x)->objects_per_page = OBJECTS_PER_PAGE (type); \t\\\n+  (x)->objects_last_page = OBJECTS_PER_PAGE (type);\t\\\n+} while (0)\n+\n /* Master type for indexes within the symbol table.  */\n typedef unsigned long symint_t;\n \n@@ -1066,92 +1073,8 @@ typedef struct efdr {\n } efdr_t;\n \n /* Pre-initialized extended file structure.  */\n-static efdr_t init_file = \n-{\n-  {\t\t\t/* FDR structure */\n-#ifdef __alpha\n-    0,\t\t\t/* adr:\t\tmemory address of beginning of file */\n-    0,\t\t\t/* cbLineOffset: byte offset from header for this file ln's */\n-    0,\t\t\t/* cbLine:\tsize of lines for this file */\n-    0,\t\t\t/* cbSs:\tnumber of bytes in the ss */\n-    0,\t\t\t/* rss:\t\tfile name (of source, if known) */\n-    0,\t\t\t/* issBase:\tfile's string space */\n-    0,\t\t\t/* isymBase:\tbeginning of symbols */\n-    0,\t\t\t/* csym:\tcount file's of symbols */\n-    0,\t\t\t/* ilineBase:\tfile's line symbols */\n-    0,\t\t\t/* cline:\tcount of file's line symbols */\n-    0,\t\t\t/* ioptBase:\tfile's optimization entries */\n-    0,\t\t\t/* copt:\tcount of file's optimization entries */\n-    0,\t\t\t/* ipdFirst:\tstart of procedures for this file */\n-    0,\t\t\t/* cpd:\t\tcount of procedures for this file */\n-    0,\t\t\t/* iauxBase:\tfile's auxiliary entries */\n-    0,\t\t\t/* caux:\tcount of file's auxiliary entries */\n-    0,\t\t\t/* rfdBase:\tindex into the file indirect table */\n-    0,\t\t\t/* crfd:\tcount file indirect entries */\n-    langC,\t\t/* lang:\tlanguage for this file */\n-    1,\t\t\t/* fMerge:\twhether this file can be merged */\n-    0,\t\t\t/* fReadin:\ttrue if read in (not just created) */\n-#ifdef HOST_WORDS_BIG_ENDIAN\n-    1,\t\t\t/* fBigendian:\tif 1, compiled on big endian machine */\n-#else\n-    0,\t\t\t/* fBigendian:\tif 1, compiled on big endian machine */\n-#endif\n-    0,\t\t\t/* fTrim:\twhether the symbol table was trimmed */\n-    GLEVEL_2,\t\t/* glevel:\tlevel this file was compiled with */\n-    0,\t\t\t/* reserved:\treserved for future use */\n-    0,\t\t\t/* cbLineOffset: byte offset from header for this file ln's */\n-    0,\t\t\t/* cbLine:\tsize of lines for this file */\n-#else\n-    0,\t\t\t/* adr:\t\tmemory address of beginning of file */\n-    0,\t\t\t/* rss:\t\tfile name (of source, if known) */\n-    0,\t\t\t/* issBase:\tfile's string space */\n-    0,\t\t\t/* cbSs:\tnumber of bytes in the ss */\n-    0,\t\t\t/* isymBase:\tbeginning of symbols */\n-    0,\t\t\t/* csym:\tcount file's of symbols */\n-    0,\t\t\t/* ilineBase:\tfile's line symbols */\n-    0,\t\t\t/* cline:\tcount of file's line symbols */\n-    0,\t\t\t/* ioptBase:\tfile's optimization entries */\n-    0,\t\t\t/* copt:\tcount of file's optimization entries */\n-    0,\t\t\t/* ipdFirst:\tstart of procedures for this file */\n-    0,\t\t\t/* cpd:\t\tcount of procedures for this file */\n-    0,\t\t\t/* iauxBase:\tfile's auxiliary entries */\n-    0,\t\t\t/* caux:\tcount of file's auxiliary entries */\n-    0,\t\t\t/* rfdBase:\tindex into the file indirect table */\n-    0,\t\t\t/* crfd:\tcount file indirect entries */\n-    langC,\t\t/* lang:\tlanguage for this file */\n-    1,\t\t\t/* fMerge:\twhether this file can be merged */\n-    0,\t\t\t/* fReadin:\ttrue if read in (not just created) */\n-#ifdef HOST_WORDS_BIG_ENDIAN\n-    1,\t\t\t/* fBigendian:\tif 1, compiled on big endian machine */\n-#else\n-    0,\t\t\t/* fBigendian:\tif 1, compiled on big endian machine */\n-#endif\n-    GLEVEL_2,\t\t/* glevel:\tlevel this file was compiled with */\n-    0,\t\t\t/* reserved:\treserved for future use */\n-    0,\t\t\t/* cbLineOffset: byte offset from header for this file ln's */\n-    0,\t\t\t/* cbLine:\tsize of lines for this file */\n-#endif\n-  },\n-\n-  (FDR *) 0,\t\t/* orig_fdr:\toriginal file header pointer */\n-  (char *) 0,\t\t/* name:\tpointer to filename */\n-  0,\t\t\t/* name_len:\tlength of filename */\n-  0,\t\t\t/* void_type:\tptr to aux node for void type */\n-  0,\t\t\t/* int_type:\tptr to aux node for int type */\n-  (scope_t *) 0,\t/* cur_scope:\tcurrent scope being processed */\n-  0,\t\t\t/* file_index:\tcurrent file # */\n-  0,\t\t\t/* nested_scopes: # nested scopes */\n-  INIT_VARRAY (char),\t/* strings:\tlocal string varray */\n-  INIT_VARRAY (SYMR),\t/* symbols:\tlocal symbols varray */\n-  INIT_VARRAY (PDR),\t/* procs:\tprocedure varray */\n-  INIT_VARRAY (AUXU),\t/* aux_syms:\tauxiliary symbols varray */\n-\n-  (struct efdr *) 0,\t/* next_file:\tnext file structure */\n-\n-  (shash_t **) 0,\t/* shash_head:\tstring hash table */\n-  { 0 },\t\t/* thash_head:\ttype hash table */\n-};\n-\n+static int init_file_initialized = 0;\n+static efdr_t init_file;\n \n static efdr_t *first_file;\t\t\t/* first file descriptor */\n static efdr_t **last_file_ptr = &first_file;\t/* file descriptor tail */\n@@ -1651,6 +1574,8 @@ STATIC void\tadd_unknown_tag\tPARAMS ((tag_t *));\n STATIC void\tadd_procedure\tPARAMS ((const char *,\n \t\t\t\t\t const char *));\n \n+STATIC void\tinitialize_init_file\tPARAMS ((void));\n+\n STATIC void\tadd_file\tPARAMS ((const char *,\n \t\t\t\t\t const char *));\n \n@@ -2475,6 +2400,29 @@ add_procedure (func_start, func_end_p1)\n }\n \n \f\n+/* Initialize the init_file structure.  */\n+\n+STATIC void\n+initialize_init_file ()\n+{\n+  memset ((void*) &init_file, 0, sizeof (init_file));\n+\n+  init_file.fdr.lang = langC;\n+  init_file.fdr.fMerge = 1;\n+  init_file.fdr.glevel = GLEVEL_2;\n+\n+#ifdef HOST_WORDS_BIG_ENDIAN\n+  init_file.fdr.fBigendian = 1;\n+#endif\n+\n+  INITIALIZE_VARRAY (&init_file.strings, char);\n+  INITIALIZE_VARRAY (&init_file.symbols, SYMR);\n+  INITIALIZE_VARRAY (&init_file.procs, PDR);\n+  INITIALIZE_VARRAY (&init_file.aux_syms, AUXU);\n+\n+  init_file_initialized = 1;\n+}\n+\n /* Add a new filename, and set up all of the file relative\n    virtual arrays (strings, symbols, aux syms, etc.).  Record\n    where the current file structure lives.  */\n@@ -2513,6 +2461,9 @@ add_file (file_start, file_end_p1)\n       if (file_desc.objects_last_page == file_desc.objects_per_page)\n \tadd_varray_page (&file_desc);\n \n+      if (! init_file_initialized)\n+\tinitialize_init_file ();\n+\n       file_ptr = cur_file_ptr\n \t= &file_desc.last->datum->file[ file_desc.objects_last_page++ ];\n       *file_ptr = init_file;"}]}