{"sha": "d5a752ebc3c0105387c5298079ddc90043fcee2a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDVhNzUyZWJjM2MwMTA1Mzg3YzUyOTgwNzlkZGM5MDA0M2ZjZWUyYQ==", "commit": {"author": {"name": "Andre Vieira", "email": "andre.simoesdiasvieira@arm.com", "date": "2016-12-09T16:46:42Z"}, "committer": {"name": "Andre Vieira", "email": "avieira@gcc.gnu.org", "date": "2016-12-09T16:46:42Z"}, "message": "PR78255: Make postreload aware of NO_FUNCTION_CSE\n\ngcc/ChangeLog:\n2016-12-09  Andre Vieira <andre.simoesdiasvieira@arm.com>\n\n\tPR rtl-optimization/78255\n\t* gcc/postreload.c (reload_cse_simplify): Do not CSE a function if\n\tNO_FUNCTION_CSE is true.\n\ngcc/testsuite/ChangeLog:\n2016-12-09  Andre Vieira <andre.simoesdiasvieira@arm.com>\n\n\tPR rtl-optimization/78255\n\t* gcc.target/aarch64/pr78255.c: New.\n\t* gcc.target/arm/pr78255-1.c: New.\n\t* gcc.target/arm/pr78255-2.c: New.\n\nFrom-SVN: r243494", "tree": {"sha": "7a4c38b46db4e11a9e271ed95ebbb80ac6a2a445", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7a4c38b46db4e11a9e271ed95ebbb80ac6a2a445"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d5a752ebc3c0105387c5298079ddc90043fcee2a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5a752ebc3c0105387c5298079ddc90043fcee2a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5a752ebc3c0105387c5298079ddc90043fcee2a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5a752ebc3c0105387c5298079ddc90043fcee2a/comments", "author": {"login": "avieira-arm", "id": 68072104, "node_id": "MDQ6VXNlcjY4MDcyMTA0", "avatar_url": "https://avatars.githubusercontent.com/u/68072104?v=4", "gravatar_id": "", "url": "https://api.github.com/users/avieira-arm", "html_url": "https://github.com/avieira-arm", "followers_url": "https://api.github.com/users/avieira-arm/followers", "following_url": "https://api.github.com/users/avieira-arm/following{/other_user}", "gists_url": "https://api.github.com/users/avieira-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/avieira-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/avieira-arm/subscriptions", "organizations_url": "https://api.github.com/users/avieira-arm/orgs", "repos_url": "https://api.github.com/users/avieira-arm/repos", "events_url": "https://api.github.com/users/avieira-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/avieira-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d9e0fdff4fda08d9d2f60eff01e0c50dedf51ae9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9e0fdff4fda08d9d2f60eff01e0c50dedf51ae9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d9e0fdff4fda08d9d2f60eff01e0c50dedf51ae9"}], "stats": {"total": 99, "additions": 99, "deletions": 0}, "files": [{"sha": "96853f280a513414f35d382364160c3052b157d5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5a752ebc3c0105387c5298079ddc90043fcee2a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5a752ebc3c0105387c5298079ddc90043fcee2a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d5a752ebc3c0105387c5298079ddc90043fcee2a", "patch": "@@ -1,3 +1,9 @@\n+2016-12-09  Andre Vieira <andre.simoesdiasvieira@arm.com>\n+\n+\tPR rtl-optimization/78255\n+\t* gcc/postreload.c (reload_cse_simplify): Do not CSE a function if\n+\tNO_FUNCTION_CSE is true.\n+\n 2016-12-09  Cesar Philippidis  <cesar@codesourcery.com>\n \n \tPR ipa/78027"}, {"sha": "8325d121c403786fdb7804956724a81d134252a2", "filename": "gcc/postreload.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5a752ebc3c0105387c5298079ddc90043fcee2a/gcc%2Fpostreload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5a752ebc3c0105387c5298079ddc90043fcee2a/gcc%2Fpostreload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpostreload.c?ref=d5a752ebc3c0105387c5298079ddc90043fcee2a", "patch": "@@ -90,6 +90,11 @@ reload_cse_simplify (rtx_insn *insn, rtx testreg)\n   basic_block insn_bb = BLOCK_FOR_INSN (insn);\n   unsigned insn_bb_succs = EDGE_COUNT (insn_bb->succs);\n \n+  /* If NO_FUNCTION_CSE has been set by the target, then we should not try\n+     to cse function calls.  */\n+  if (NO_FUNCTION_CSE && CALL_P (insn))\n+    return false;\n+\n   if (GET_CODE (body) == SET)\n     {\n       int count = 0;"}, {"sha": "defbd5ecc24be2e615706016f96f1b1edbbdcf83", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5a752ebc3c0105387c5298079ddc90043fcee2a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5a752ebc3c0105387c5298079ddc90043fcee2a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d5a752ebc3c0105387c5298079ddc90043fcee2a", "patch": "@@ -1,3 +1,10 @@\n+2016-12-09  Andre Vieira <andre.simoesdiasvieira@arm.com>\n+\n+\tPR rtl-optimization/78255\n+\t* gcc.target/aarch64/pr78255.c: New.\n+\t* gcc.target/arm/pr78255-1.c: New.\n+\t* gcc.target/arm/pr78255-2.c: New.\n+\n 2016-12-09  Will Schmidt  <will_schmidt@vnet.ibm.com>\n \n \t* gcc.target/powerpc/dimode-1.c: Update syntax on scan-assembler"}, {"sha": "b078cf3e1c1c7717c9e227721a367f9846f0c7fe", "filename": "gcc/testsuite/gcc.target/aarch64/pr78255.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5a752ebc3c0105387c5298079ddc90043fcee2a/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr78255.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5a752ebc3c0105387c5298079ddc90043fcee2a/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr78255.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr78255.c?ref=d5a752ebc3c0105387c5298079ddc90043fcee2a", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mcmodel=tiny\" } */\n+\n+extern int bar (void *);\n+\n+int\n+foo (void)\n+{\n+  return bar ((void *)bar);\n+}\n+\n+/* { dg-final { scan-assembler \"b\\\\s+bar\" } } */"}, {"sha": "5a696825295d18d09822edfc48f211c5712e95bb", "filename": "gcc/testsuite/gcc.target/arm/pr78255-1.c", "status": "added", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5a752ebc3c0105387c5298079ddc90043fcee2a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr78255-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5a752ebc3c0105387c5298079ddc90043fcee2a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr78255-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr78255-1.c?ref=d5a752ebc3c0105387c5298079ddc90043fcee2a", "patch": "@@ -0,0 +1,57 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O2\" }  */\n+\n+#include <string.h>\n+\n+struct table_s\n+    {\n+    void (*fun0)\n+        ( void );\n+    void (*fun1)\n+        ( void );\n+    void (*fun2)\n+        ( void );\n+    void (*fun3)\n+        ( void );\n+    void (*fun4)\n+        ( void );\n+    void (*fun5)\n+        ( void );\n+    void (*fun6)\n+        ( void );\n+    void (*fun7)\n+        ( void );\n+    } table;\n+\n+void callback0(){__asm(\"mov r0, r0 \\n\\t\");}\n+void callback1(){__asm(\"mov r0, r0 \\n\\t\");}\n+void callback2(){__asm(\"mov r0, r0 \\n\\t\");}\n+void callback3(){__asm(\"mov r0, r0 \\n\\t\");}\n+void callback4(){__asm(\"mov r0, r0 \\n\\t\");}\n+\n+void test (void) {\n+    memset(&table, 0, sizeof table);\n+\n+    asm volatile (\"\" : : : \"r3\");\n+\n+    table.fun0 = callback0;\n+    table.fun1 = callback1;\n+    table.fun2 = callback2;\n+    table.fun3 = callback3;\n+    table.fun4 = callback4;\n+    table.fun0();\n+}\n+\n+void foo (void)\n+{\n+  __builtin_abort ();\n+}\n+\n+int main (void)\n+{\n+  unsigned long p = (unsigned long) &foo;\n+  asm volatile (\"mov r3, %0\" : : \"r\" (p));\n+  test ();\n+\n+  return 0;\n+}"}, {"sha": "efa01e750b3962497cccb05ab9862fd3935397a3", "filename": "gcc/testsuite/gcc.target/arm/pr78255-2.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5a752ebc3c0105387c5298079ddc90043fcee2a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr78255-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5a752ebc3c0105387c5298079ddc90043fcee2a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr78255-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr78255-2.c?ref=d5a752ebc3c0105387c5298079ddc90043fcee2a", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" }  */\n+\n+extern int bar (void *);\n+\n+int\n+foo (void)\n+{\n+  return bar ((void*)bar);\n+}\n+\n+/* { dg-final { scan-assembler \"b\\\\s+bar\" } } */"}]}