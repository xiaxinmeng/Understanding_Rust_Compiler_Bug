{"sha": "199cb84e3c198d1f47a386f7756f6c35ae4c0a25", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTk5Y2I4NGUzYzE5OGQxZjQ3YTM4NmY3NzU2ZjZjMzVhZTRjMGEyNQ==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2010-03-01T12:32:02Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2010-03-01T12:32:02Z"}, "message": "re PR libgcj/38251 (tools.zip doesn't build on systems with short command lines)\n\n\tPR libgcj/38251\n\t* tools/Makefile.am (dist-hook): Prune .svn directories in asm and\n\tclasses copies.\n\t* tools/Makefile.in: Regenerate.\n\n\tRevert:\n\t2008-11-05  Andrew Haley  <aph@redhat.com>\n\n\t* tools/Makefile.am (UPDATE_TOOLS_ZIP, CREATE_TOOLS_ZIP): Exclude\n\t.svn direcories.\n\nFrom-SVN: r157137", "tree": {"sha": "928846b1de85d6704f8295582d018d869bdf20d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/928846b1de85d6704f8295582d018d869bdf20d5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/199cb84e3c198d1f47a386f7756f6c35ae4c0a25", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/199cb84e3c198d1f47a386f7756f6c35ae4c0a25", "html_url": "https://github.com/Rust-GCC/gccrs/commit/199cb84e3c198d1f47a386f7756f6c35ae4c0a25", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/199cb84e3c198d1f47a386f7756f6c35ae4c0a25/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7d82c626c3b226392f82d873d03940be44512321", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d82c626c3b226392f82d873d03940be44512321", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d82c626c3b226392f82d873d03940be44512321"}], "stats": {"total": 35, "additions": 27, "deletions": 8}, "files": [{"sha": "4c1362e000e71863a25afd6f2f01e00309ff450b", "filename": "libjava/classpath/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/199cb84e3c198d1f47a386f7756f6c35ae4c0a25/libjava%2Fclasspath%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/199cb84e3c198d1f47a386f7756f6c35ae4c0a25/libjava%2Fclasspath%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2FChangeLog?ref=199cb84e3c198d1f47a386f7756f6c35ae4c0a25", "patch": "@@ -1,3 +1,16 @@\n+2010-03-01  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\tPR libgcj/38251\n+\t* tools/Makefile.am (dist-hook): Prune .svn directories in asm and\n+\tclasses copies.\n+\t* tools/Makefile.in: Regenerate.\n+\n+\tRevert:\n+\t2008-11-05  Andrew Haley  <aph@redhat.com>\n+\n+\t* tools/Makefile.am (UPDATE_TOOLS_ZIP, CREATE_TOOLS_ZIP): Exclude\n+\t.svn direcories.\n+\n 2010-01-18  Andreas Tobler  <andreast@fgznet.ch>\n \n \t* tools/Makefile.am (GJDOC_EX): Use find -name pattern -prune -o."}, {"sha": "44489c89afd25e094da3f977a5f56a52c5a221ba", "filename": "libjava/classpath/tools/Makefile.am", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/199cb84e3c198d1f47a386f7756f6c35ae4c0a25/libjava%2Fclasspath%2Ftools%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/199cb84e3c198d1f47a386f7756f6c35ae4c0a25/libjava%2Fclasspath%2Ftools%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Ftools%2FMakefile.am?ref=199cb84e3c198d1f47a386f7756f6c35ae4c0a25", "patch": "@@ -371,6 +371,9 @@ endif\n ## BEGIN GCJ LOCAL\n \tcp -pR $(srcdir)/asm .\n \tcp -pR $(srcdir)/classes .\n+\tif [ -d asm/.svn ]; then \\\n+\t  find asm classes -depth -type d -name .svn -exec rm -rf \\{\\} \\;; \\\n+\tfi\n ## END GCJ LOCAL\n if CREATE_GJDOC\n ## Copy over gjdoc resource files.\n@@ -383,11 +386,11 @@ if CREATE_GJDOC\n endif\n \n if WITH_JAR\n-CREATE_TOOLS_ZIP=$(JAR) cf ../$(TOOLS_ZIP) `find . -name .svn -prune -o -type f -print`\n-UPDATE_TOOLS_ZIP=$(JAR) uf ../$(TOOLS_ZIP) `find . -name .svn -prune -o -type f -print`\n+CREATE_TOOLS_ZIP=$(JAR) cf ../$(TOOLS_ZIP) .\n+UPDATE_TOOLS_ZIP=$(JAR) uf ../$(TOOLS_ZIP) .\n else\n-CREATE_TOOLS_ZIP=$(ZIP) -r ../$(TOOLS_ZIP) `find . -name .svn -prune -o -type f -print`\n-UPDATE_TOOLS_ZIP=$(ZIP) -u -r ../$(TOOLS_ZIP) `find . -name .svn -prune -o -type f -print`\n+CREATE_TOOLS_ZIP=$(ZIP) -r ../$(TOOLS_ZIP) .\n+UPDATE_TOOLS_ZIP=$(ZIP) -u -r ../$(TOOLS_ZIP) .\n endif\n \n ## First add classpath tools stuff."}, {"sha": "5f3052d0d2071def57a647946f1f1bff453ab414", "filename": "libjava/classpath/tools/Makefile.in", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/199cb84e3c198d1f47a386f7756f6c35ae4c0a25/libjava%2Fclasspath%2Ftools%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/199cb84e3c198d1f47a386f7756f6c35ae4c0a25/libjava%2Fclasspath%2Ftools%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Ftools%2FMakefile.in?ref=199cb84e3c198d1f47a386f7756f6c35ae4c0a25", "patch": "@@ -708,10 +708,10 @@ noinst_DATA = $(TOOLS_ZIP)\n \n # Where we want these data files installed.\n TOOLSdir = $(pkgdatadir)\n-@WITH_JAR_FALSE@CREATE_TOOLS_ZIP = $(ZIP) -r ../$(TOOLS_ZIP) `find . -name .svn -prune -o -type f -print`\n-@WITH_JAR_TRUE@CREATE_TOOLS_ZIP = $(JAR) cf ../$(TOOLS_ZIP) `find . -name .svn -prune -o -type f -print`\n-@WITH_JAR_FALSE@UPDATE_TOOLS_ZIP = $(ZIP) -u -r ../$(TOOLS_ZIP) `find . -name .svn -prune -o -type f -print`\n-@WITH_JAR_TRUE@UPDATE_TOOLS_ZIP = $(JAR) uf ../$(TOOLS_ZIP) `find . -name .svn -prune -o -type f -print`\n+@WITH_JAR_FALSE@CREATE_TOOLS_ZIP = $(ZIP) -r ../$(TOOLS_ZIP) .\n+@WITH_JAR_TRUE@CREATE_TOOLS_ZIP = $(JAR) cf ../$(TOOLS_ZIP) .\n+@WITH_JAR_FALSE@UPDATE_TOOLS_ZIP = $(ZIP) -u -r ../$(TOOLS_ZIP) .\n+@WITH_JAR_TRUE@UPDATE_TOOLS_ZIP = $(JAR) uf ../$(TOOLS_ZIP) .\n all: $(BUILT_SOURCES)\n \t$(MAKE) $(AM_MAKEFLAGS) all-am\n \n@@ -1424,6 +1424,9 @@ $(TOOLS_ZIP): $(ALL_TOOLS_FILES)\n \tdone\n \tcp -pR $(srcdir)/asm .\n \tcp -pR $(srcdir)/classes .\n+\tif [ -d asm/.svn ]; then \\\n+\t  find asm classes -depth -type d -name .svn -exec rm -rf \\{\\} \\;; \\\n+\tfi\n @CREATE_GJDOC_TRUE@\tfor res in $(gjdoc_resources); do \\\n @CREATE_GJDOC_TRUE@\t  dir=classes/`dirname $$res`; \\\n @CREATE_GJDOC_TRUE@\t  if ! test -d \"$$dir\"; then @mkdir_p@ \"$$dir\"; fi; \\"}]}