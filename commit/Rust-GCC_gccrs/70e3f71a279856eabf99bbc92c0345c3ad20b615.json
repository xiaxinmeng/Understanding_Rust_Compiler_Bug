{"sha": "70e3f71a279856eabf99bbc92c0345c3ad20b615", "node_id": "C_kwDOANBUbNoAKDcwZTNmNzFhMjc5ODU2ZWFiZjk5YmJjOTJjMDM0NWMzYWQyMGI2MTU", "commit": {"author": {"name": "Lewis Hyatt", "email": "lhyatt@gmail.com", "date": "2022-10-01T16:05:13Z"}, "committer": {"name": "Lewis Hyatt", "email": "lhyatt@gmail.com", "date": "2022-10-04T01:12:47Z"}, "message": "diagnostics: Add test for fixed _Pragma location issue [PR91669]\n\nThis PR related to _Pragma locations and diagnostic pragmas was fixed by a\ncombination of r10-325 and r13-1596. Add missing test coverage.\n\ngcc/testsuite/ChangeLog:\n\n\tPR c/91669\n\t* c-c++-common/pr91669.c: New test.", "tree": {"sha": "1b25c0d309390da0d1bb6445adddc8b742f52bc7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1b25c0d309390da0d1bb6445adddc8b742f52bc7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/70e3f71a279856eabf99bbc92c0345c3ad20b615", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70e3f71a279856eabf99bbc92c0345c3ad20b615", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70e3f71a279856eabf99bbc92c0345c3ad20b615", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70e3f71a279856eabf99bbc92c0345c3ad20b615/comments", "author": null, "committer": null, "parents": [{"sha": "69fd6dcc32c92132010b7d1fe4c2a37bc045d524", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69fd6dcc32c92132010b7d1fe4c2a37bc045d524", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69fd6dcc32c92132010b7d1fe4c2a37bc045d524"}], "stats": {"total": 28, "additions": 28, "deletions": 0}, "files": [{"sha": "1070751ed2eaa702de8546d4a2e7055d7babf395", "filename": "gcc/testsuite/c-c++-common/pr91669.c", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70e3f71a279856eabf99bbc92c0345c3ad20b615/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr91669.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70e3f71a279856eabf99bbc92c0345c3ad20b615/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr91669.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr91669.c?ref=70e3f71a279856eabf99bbc92c0345c3ad20b615", "patch": "@@ -0,0 +1,28 @@\n+/* { dg-do compile } */\n+/* { dg-additional-options \"-Wreturn-type\" } */\n+\n+/* The location of the right brace within the macro expansion can be an adhoc\n+   location, because the frontend attached custom data to it.  In order for the\n+   diagnostic pragma to correctly understand that the diagnostic pop occurs\n+   after the function and not before, linemap_location_before_p needs to handle\n+   adhoc locations within a macro map, which was broken until fixed by r10-325.\n+   Verify that we get it right, both when the brace is a macro token and when it\n+   is part of the macro expansion.  */\n+\n+#define ENDFUNC1 \\\n+  _Pragma(\"GCC diagnostic push\") \\\n+  _Pragma(\"GCC diagnostic ignored \\\"-Wreturn-type\\\"\") \\\n+  } /* { dg-bogus {-Wreturn-type} } */ \\\n+  _Pragma(\"GCC diagnostic pop\")\n+\n+int f1 () {\n+ENDFUNC1 /* { dg-bogus {in expansion of macro 'ENDFUNC1' } } */\n+\n+#define ENDFUNC2(term) \\\n+  _Pragma(\"GCC diagnostic push\") \\\n+  _Pragma(\"GCC diagnostic ignored \\\"-Wreturn-type\\\"\") \\\n+  term /* { dg-bogus {in definition of macro 'ENDFUNC2'} } */ \\\n+  _Pragma(\"GCC diagnostic pop\")\n+\n+int f2 () {\n+ENDFUNC2(}) /* { dg-bogus {-Wreturn-type} } */"}]}