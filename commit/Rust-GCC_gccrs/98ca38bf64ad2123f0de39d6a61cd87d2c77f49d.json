{"sha": "98ca38bf64ad2123f0de39d6a61cd87d2c77f49d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OThjYTM4YmY2NGFkMjEyM2YwZGUzOWQ2YTYxY2Q4N2QyYzc3ZjQ5ZA==", "commit": {"author": {"name": "Mike Frysinger", "email": "vapier@gentoo.org", "date": "2015-05-30T16:39:52Z"}, "committer": {"name": "Mike Frysinger", "email": "vapier@gcc.gnu.org", "date": "2015-05-30T16:39:52Z"}, "message": "alpha: turn -mcpu=<cpu> into -m<cpu> for the assembler all the time\n\nIf you create a toolchain with the target alphaev68-unknown-linux-gnu, gcc\nwill use the -mcpu=ev67 by default when compiling.  Some software packages\n(like gmp) will use this target info to decide that it may freely use\nassembly code that targets ev67+.  The trouble comes in when trying to\ncompile that pure assembly code.\n\nWhile gcc will use -mcpu=ev67 just fine, it will invoke gas without an\n-mev67 option, so the assembler will default to the lowest common\ndenominator -- ev4 in this case.  Inline assembly in C code is normally\njust peachy because gcc's assembler output will start with \".arch <cpu>\"\nand the assembler will accept that.  But if the hand coded assembly code\nlacks that .arch, you easily end up with errors like so:\n\topcode `cttz' not supported for target <all>\n\nWhile the assembly code could/should be fixed to explicitly output the\n.arch directive, I think it's reasonable to expect this to work:\n\techo 'cttz $20,$21' | gcc -x assembler -c - -o /dev/null -mcpu=ev67\n\nThis simple patch implements that, although I guess it is a bit redundant\nin the default case where gcc outputs .arch.  Perhaps that should all be\npunted in favor of a specs-only approach.  Considering gas respects .arch\nin the code over the command line, it should also make things more natural.\nThe command line is processed in the standard/expected way -- gcc defaults\nthe -m option while user's custom -mcpu/-Wa,-m options come after, and the\nguy writing the assembly code is free to use .arch to override everything\nelse.\n\nFrom-SVN: r223888", "tree": {"sha": "e042c38f95d8c0110b333ff2cc62178e656e3a9e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e042c38f95d8c0110b333ff2cc62178e656e3a9e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/98ca38bf64ad2123f0de39d6a61cd87d2c77f49d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98ca38bf64ad2123f0de39d6a61cd87d2c77f49d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98ca38bf64ad2123f0de39d6a61cd87d2c77f49d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98ca38bf64ad2123f0de39d6a61cd87d2c77f49d/comments", "author": {"login": "vapier", "id": 176950, "node_id": "MDQ6VXNlcjE3Njk1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vapier", "html_url": "https://github.com/vapier", "followers_url": "https://api.github.com/users/vapier/followers", "following_url": "https://api.github.com/users/vapier/following{/other_user}", "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}", "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vapier/subscriptions", "organizations_url": "https://api.github.com/users/vapier/orgs", "repos_url": "https://api.github.com/users/vapier/repos", "events_url": "https://api.github.com/users/vapier/events{/privacy}", "received_events_url": "https://api.github.com/users/vapier/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4af8bb97627ff9ac46116bf5121187fada59ec60", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4af8bb97627ff9ac46116bf5121187fada59ec60", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4af8bb97627ff9ac46116bf5121187fada59ec60"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "7b3c784b9fcd4b3bfacd43ee62cc030a83ab5ef6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98ca38bf64ad2123f0de39d6a61cd87d2c77f49d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98ca38bf64ad2123f0de39d6a61cd87d2c77f49d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=98ca38bf64ad2123f0de39d6a61cd87d2c77f49d", "patch": "@@ -1,3 +1,7 @@\n+2015-05-30  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* gcc/config/alpha/elf.h (ASM_SPEC): Add %{mcpu=*:-m%*}.\n+\n 2015-05-28  DJ Delorie  <dj@redhat.com>\n \n \t* expmed.c (extract_bit_field_1): Avoid clobbering a"}, {"sha": "92bdfa3cfe97f8a4bf473a865144a447595b638b", "filename": "gcc/config/alpha/elf.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98ca38bf64ad2123f0de39d6a61cd87d2c77f49d/gcc%2Fconfig%2Falpha%2Felf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98ca38bf64ad2123f0de39d6a61cd87d2c77f49d/gcc%2Fconfig%2Falpha%2Felf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Felf.h?ref=98ca38bf64ad2123f0de39d6a61cd87d2c77f49d", "patch": "@@ -22,7 +22,7 @@ along with GCC; see the file COPYING3.  If not see\n #define CC1_SPEC  \"%{G*}\"\n \n #undef  ASM_SPEC\n-#define ASM_SPEC  \"%{G*} %{relax:-relax} %{!gstabs*:-no-mdebug}%{gstabs*:-mdebug}\"\n+#define ASM_SPEC  \"%{G*} %{relax:-relax} %{!gstabs*:-no-mdebug}%{gstabs*:-mdebug} %{mcpu=*:-m%*}\"\n \n /* Do not output a .file directive at the beginning of the input file.  */\n  "}]}