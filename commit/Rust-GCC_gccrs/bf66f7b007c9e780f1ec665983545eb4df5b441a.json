{"sha": "bf66f7b007c9e780f1ec665983545eb4df5b441a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmY2NmY3YjAwN2M5ZTc4MGYxZWM2NjU5ODM1NDVlYjRkZjViNDQxYQ==", "commit": {"author": {"name": "Nathanael Nerode", "email": "neroden@gcc.gnu.org", "date": "2003-07-15T00:43:24Z"}, "committer": {"name": "Nathanael Nerode", "email": "neroden@gcc.gnu.org", "date": "2003-07-15T00:43:24Z"}, "message": "inclhack.def (avoid_bool_define, [...]): Bypass with __cplusplus, not \"we must use the C++ compiler's type\"\n\n\t* fixinc/inclhack.def (avoid_bool_define, avoid_bool_type): Bypass\n\twith __cplusplus, not \"we must use the C++ compiler's type\"\n\t* fixinc/inclhack.def (void_null): Note that Interix needs this.\n\t* fixinc/fixincl.x: Regenerate.\n\nFrom-SVN: r69373", "tree": {"sha": "5d8041f7737e251b8450f9ba14a6eb4388d6e09c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5d8041f7737e251b8450f9ba14a6eb4388d6e09c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bf66f7b007c9e780f1ec665983545eb4df5b441a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf66f7b007c9e780f1ec665983545eb4df5b441a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf66f7b007c9e780f1ec665983545eb4df5b441a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf66f7b007c9e780f1ec665983545eb4df5b441a/comments", "author": null, "committer": null, "parents": [{"sha": "b9ce931dbea28e93eb92a56d1f344f75891ed11a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9ce931dbea28e93eb92a56d1f344f75891ed11a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b9ce931dbea28e93eb92a56d1f344f75891ed11a"}], "stats": {"total": 21, "additions": 14, "deletions": 7}, "files": [{"sha": "28a130ce69f24f3660761eeffd6008a1c28ef757", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf66f7b007c9e780f1ec665983545eb4df5b441a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf66f7b007c9e780f1ec665983545eb4df5b441a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bf66f7b007c9e780f1ec665983545eb4df5b441a", "patch": "@@ -1,3 +1,10 @@\n+2003-07-14  Nathanael Nerode  <neroden@gcc.gnu.org>\n+\n+\t* fixinc/inclhack.def (avoid_bool_define, avoid_bool_type): Bypass\n+\twith __cplusplus, not \"we must use the C++ compiler's type\"\n+\t* fixinc/inclhack.def (void_null): Note that Interix needs this.\n+\t* fixinc/fixincl.x: Regenerate.\n+\n 2003-07-14  Geoffrey Keating  <geoffk@apple.com>\n \n \t* unwind-dw2-fde-darwin.c (live_image_destructor): Get seen_objects"}, {"sha": "8bb2b0fcb8a6678b6e5099325fea3812feab20dc", "filename": "gcc/fixinc/fixincl.x", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf66f7b007c9e780f1ec665983545eb4df5b441a/gcc%2Ffixinc%2Ffixincl.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf66f7b007c9e780f1ec665983545eb4df5b441a/gcc%2Ffixinc%2Ffixincl.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ffixincl.x?ref=bf66f7b007c9e780f1ec665983545eb4df5b441a", "patch": "@@ -2,11 +2,11 @@\n  * \n  * DO NOT EDIT THIS FILE   (fixincl.x)\n  * \n- * It has been AutoGen-ed  Sunday July 13, 2003 at 02:48:14 AM EDT\n+ * It has been AutoGen-ed  Monday July 14, 2003 at 08:37:56 PM EDT\n  * From the definitions    inclhack.def\n  * and the template file   fixincl\n  */\n-/* DO NOT CVS-MERGE THIS FILE, EITHER Sun Jul 13 02:48:14 EDT 2003\n+/* DO NOT CVS-MERGE THIS FILE, EITHER Mon Jul 14 20:37:56 EDT 2003\n  *\n  * You must regenerate it.  Use the ./genfixes script.\n  *\n@@ -919,7 +919,7 @@ tSCC zAvoid_Bool_DefineSelect0[] =\n  *  content bypass pattern - skip fix if pattern found\n  */\n tSCC zAvoid_Bool_DefineBypass0[] =\n-       \"we must use the C\\\\+\\\\+ compiler's type\";\n+       \"__cplusplus\";\n \n #define    AVOID_BOOL_DEFINE_TEST_CT  2\n static tTestDesc aAvoid_Bool_DefineTests[] = {\n@@ -964,7 +964,7 @@ tSCC zAvoid_Bool_TypeSelect0[] =\n  *  content bypass pattern - skip fix if pattern found\n  */\n tSCC zAvoid_Bool_TypeBypass0[] =\n-       \"we must use the C\\\\+\\\\+ compiler's type\";\n+       \"__cplusplus\";\n \n #define    AVOID_BOOL_TYPE_TEST_CT  2\n static tTestDesc aAvoid_Bool_TypeTests[] = {"}, {"sha": "63f5ce00ce4b07c16fd1ee603f7114f2db7094b5", "filename": "gcc/fixinc/inclhack.def", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf66f7b007c9e780f1ec665983545eb4df5b441a/gcc%2Ffixinc%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf66f7b007c9e780f1ec665983545eb4df5b441a/gcc%2Ffixinc%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Finclhack.def?ref=bf66f7b007c9e780f1ec665983545eb4df5b441a", "patch": "@@ -604,7 +604,7 @@ fix = {\n     files     = tinfo.h;\n \n     select    = \"#[ \\t]*define[ \\t]+bool[ \\t]\";\n-    bypass    = \"we must use the C\\\\+\\\\+ compiler's type\";\n+    bypass    = \"__cplusplus\";\n \n     c_fix     = format;\n     c_fix_arg = \"#ifndef __cplusplus\\n%0\\n#endif\";\n@@ -622,7 +622,7 @@ fix = {\n     files    = tinfo.h;\n \n     select    = \"^[ \\t]*typedef[ \\t].*[ \\t]bool[ \\t]*;\";\n-    bypass    = \"we must use the C\\\\+\\\\+ compiler's type\";\n+    bypass    = \"__cplusplus\";\n \n     c_fix     = format;\n     c_fix_arg = \"#ifndef __cplusplus\\n%0\\n#endif\";\n@@ -3362,7 +3362,7 @@ fix = {\n \n \n /*\n- *  AIX headers define NULL to be cast to a void pointer,\n+ *  AIX and Interix headers define NULL to be cast to a void pointer,\n  *  which is illegal in ANSI C++.\n  */\n fix = {"}]}