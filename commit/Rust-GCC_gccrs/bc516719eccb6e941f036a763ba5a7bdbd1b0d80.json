{"sha": "bc516719eccb6e941f036a763ba5a7bdbd1b0d80", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmM1MTY3MTllY2NiNmU5NDFmMDM2YTc2M2JhNWE3YmRiZDFiMGQ4MA==", "commit": {"author": {"name": "Andreas Schwab", "email": "schwab@issan.informatik.uni-dortmund.de", "date": "1998-06-03T02:13:21Z"}, "committer": {"name": "Andreas Schwab", "email": "schwab@gcc.gnu.org", "date": "1998-06-03T02:13:21Z"}, "message": "c-common.c (check_format_info): Put back check for C9x `hh' length modifier.\n\n\t* c-common.c (check_format_info): Put back check for C9x `hh'\n\tlength modifier.  Warn about %n format writing into const.  Remove\n\tobsolete comment.\n\t(format_char_info): Fix comments.\n\nFrom-SVN: r20207", "tree": {"sha": "1be42e6b3c97dc34ee2b190ab6f70fcfa5215f16", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1be42e6b3c97dc34ee2b190ab6f70fcfa5215f16"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bc516719eccb6e941f036a763ba5a7bdbd1b0d80", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc516719eccb6e941f036a763ba5a7bdbd1b0d80", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc516719eccb6e941f036a763ba5a7bdbd1b0d80", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc516719eccb6e941f036a763ba5a7bdbd1b0d80/comments", "author": null, "committer": null, "parents": [{"sha": "7fdc2757cbeda7edde71bdcf75ba55d1c18a6448", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7fdc2757cbeda7edde71bdcf75ba55d1c18a6448", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7fdc2757cbeda7edde71bdcf75ba55d1c18a6448"}], "stats": {"total": 31, "additions": 18, "deletions": 13}, "files": [{"sha": "35fde3f67e1c3bbdf80e5bf3131c77ce9a348f6f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc516719eccb6e941f036a763ba5a7bdbd1b0d80/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc516719eccb6e941f036a763ba5a7bdbd1b0d80/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bc516719eccb6e941f036a763ba5a7bdbd1b0d80", "patch": "@@ -1,5 +1,10 @@\n Wed Jun  3 11:02:24 1998  Andreas Schwab  <schwab@issan.informatik.uni-dortmund.de>\n \n+\t* c-common.c (check_format_info): Put back check for C9x `hh'\n+\tlength modifier.  Warn about %n format writing into const.  Remove\n+\tobsolete comment.\n+\t(format_char_info): Fix comments. \n+\n \t* configure.in: Set float_format to m68k for all m68k targets that\n \tdo not override LONG_DOUBLE_TYPE_SIZE.\n \t* config/float-m68k.h: New file."}, {"sha": "9983cdbc5efad5cf163d8d0f5028021afc1ce6fb", "filename": "gcc/c-common.c", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc516719eccb6e941f036a763ba5a7bdbd1b0d80/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc516719eccb6e941f036a763ba5a7bdbd1b0d80/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=bc516719eccb6e941f036a763ba5a7bdbd1b0d80", "patch": "@@ -979,10 +979,10 @@ typedef struct {\n   int pointer_count;\n   /* Type of argument if no length modifier is used.  */\n   tree *nolen;\n-  /* Type of argument if length modifier for shortening is used.\n+  /* Type of argument if length modifier for shortening to byte is used.\n      If NULL, then this modifier is not allowed.  */\n   tree *hhlen;\n-  /* Type of argument if length modifier for shortening to byte if used.\n+  /* Type of argument if length modifier for shortening is used.\n      If NULL, then this modifier is not allowed.  */\n   tree *hlen;\n   /* Type of argument if length modifier `l' is used.\n@@ -1556,6 +1556,13 @@ check_format_info (info, params)\n \t      if (pedantic)\n \t\twarning (\"ANSI C does not support the `ll' length modifier\");\n \t    }\n+\t  else if (length_char == 'h' && *format_chars == 'h')\n+\t    {\n+\t      length_char = 'H', format_chars++;\n+\t      /* FIXME: Is allowed in ISO C 9x.  */\n+\t      if (pedantic)\n+\t\twarning (\"ANSI C does not support the `hh' length modifier\");\n+\t    }\n \t  if (*format_chars == 'a' && info->format_type == scanf_format_type)\n \t    {\n \t      if (format_chars[1] == 's' || format_chars[1] == 'S'\n@@ -1688,15 +1695,6 @@ check_format_info (info, params)\n \twarning (\"use of `%c' length character with `%c' type character\",\n \t\t length_char, format_char);\n \n-      /*\n-       ** XXX -- should kvetch about stuff such as\n-       **\t{\n-       **\t\tconst int\ti;\n-       **\n-       **\t\tscanf (\"%d\", &i);\n-       **\t}\n-       */\n-\n       /* Finally. . .check type of argument against desired type!  */\n       if (info->first_arg_num == 0)\n \tcontinue;\n@@ -1739,8 +1737,10 @@ check_format_info (info, params)\n \t}\n \n       /* See if this is an attempt to write into a const type with\n-\t scanf.  */\n-      if (info->format_type == scanf_format_type\n+\t scanf or with printf \"%n\".  */\n+      if ((info->format_type == scanf_format_type\n+\t   || (info->format_type == printf_format_type\n+\t       && format_char == 'n'))\n \t  && i == fci->pointer_count + aflag\n \t  && wanted_type != 0\n \t  && TREE_CODE (cur_type) != ERROR_MARK"}]}