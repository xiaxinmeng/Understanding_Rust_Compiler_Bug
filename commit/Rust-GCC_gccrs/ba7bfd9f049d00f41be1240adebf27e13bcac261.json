{"sha": "ba7bfd9f049d00f41be1240adebf27e13bcac261", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmE3YmZkOWYwNDlkMDBmNDFiZTEyNDBhZGViZjI3ZTEzYmNhYzI2MQ==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2017-11-02T20:09:18Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2017-11-02T20:09:18Z"}, "message": "Move selftest::test_diagnostic_context to its own header\n\nIt's useful to not rely on global_dc in selftests, so this patch\nmoves class selftest::test_diagnostic_context from\ndiagnostic-show-locus.c to a new header and source file.\n\ngcc/ChangeLog:\n\t* Makefile.in (OBJS-libcommon): Add selftest-diagnostic.o.\n\t* diagnostic-show-locus.c: Include \"selftest-diagnostic.h\".\n\t(class selftest::test_diagnostic_context): Move to...\n\t* selftest-diagnostic.c: New file.\n\t* selftest-diagnostic.h: New file.\n\nFrom-SVN: r254354", "tree": {"sha": "b67059978ac4433c1dd625a2b91b9cc71871a9f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b67059978ac4433c1dd625a2b91b9cc71871a9f5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ba7bfd9f049d00f41be1240adebf27e13bcac261", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba7bfd9f049d00f41be1240adebf27e13bcac261", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba7bfd9f049d00f41be1240adebf27e13bcac261", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba7bfd9f049d00f41be1240adebf27e13bcac261/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7c42a3675c791b2eafae4a352a7d8adbe510e027", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c42a3675c791b2eafae4a352a7d8adbe510e027", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c42a3675c791b2eafae4a352a7d8adbe510e027"}], "stats": {"total": 150, "additions": 121, "deletions": 29}, "files": [{"sha": "ca51e711fc0480f77d2e9235033c56e03d540e1d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba7bfd9f049d00f41be1240adebf27e13bcac261/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba7bfd9f049d00f41be1240adebf27e13bcac261/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ba7bfd9f049d00f41be1240adebf27e13bcac261", "patch": "@@ -1,3 +1,11 @@\n+2017-11-02  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* Makefile.in (OBJS-libcommon): Add selftest-diagnostic.o.\n+\t* diagnostic-show-locus.c: Include \"selftest-diagnostic.h\".\n+\t(class selftest::test_diagnostic_context): Move to...\n+\t* selftest-diagnostic.c: New file.\n+\t* selftest-diagnostic.h: New file.\n+\n 2017-11-02  James Bowman  <james.bowman@ftdichip.com>\n \n \t* config/ft32/ft32.c (ft32_addr_space_legitimate_address_p): increase"}, {"sha": "51968e4a66f5fbcaf98c438cf65df4b5d2545369", "filename": "gcc/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba7bfd9f049d00f41be1240adebf27e13bcac261/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba7bfd9f049d00f41be1240adebf27e13bcac261/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=ba7bfd9f049d00f41be1240adebf27e13bcac261", "patch": "@@ -1591,7 +1591,7 @@ OBJS-libcommon = diagnostic.o diagnostic-color.o diagnostic-show-locus.o \\\n \tpretty-print.o intl.o \\\n \tsbitmap.o \\\n \tvec.o input.o version.o hash-table.o ggc-none.o memory-block.o \\\n-\tselftest.o\n+\tselftest.o selftest-diagnostic.o\n \n # Objects in libcommon-target.a, used by drivers and by the core\n # compiler and containing target-dependent code."}, {"sha": "a1ce682403b1df1593ef3bf25a3808d8b0d507ce", "filename": "gcc/diagnostic-show-locus.c", "status": "modified", "additions": 1, "deletions": 28, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba7bfd9f049d00f41be1240adebf27e13bcac261/gcc%2Fdiagnostic-show-locus.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba7bfd9f049d00f41be1240adebf27e13bcac261/gcc%2Fdiagnostic-show-locus.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdiagnostic-show-locus.c?ref=ba7bfd9f049d00f41be1240adebf27e13bcac261", "patch": "@@ -29,6 +29,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"diagnostic-color.h\"\n #include \"gcc-rich-location.h\"\n #include \"selftest.h\"\n+#include \"selftest-diagnostic.h\"\n \n #ifdef HAVE_TERMIOS_H\n # include <termios.h>\n@@ -1987,34 +1988,6 @@ namespace selftest {\n \n /* Selftests for diagnostic_show_locus.  */\n \n-/* Convenience subclass of diagnostic_context for testing\n-   diagnostic_show_locus.  */\n-\n-class test_diagnostic_context : public diagnostic_context\n-{\n- public:\n-  test_diagnostic_context ()\n-  {\n-    diagnostic_initialize (this, 0);\n-    show_caret = true;\n-    show_column = true;\n-    start_span = start_span_cb;\n-  }\n-  ~test_diagnostic_context ()\n-  {\n-    diagnostic_finish (this);\n-  }\n-\n-  /* Implementation of diagnostic_start_span_fn, hiding the\n-     real filename (to avoid printing the names of tempfiles).  */\n-  static void\n-  start_span_cb (diagnostic_context *context, expanded_location exploc)\n-  {\n-    exploc.file = \"FILENAME\";\n-    default_diagnostic_start_span_fn (context, exploc);\n-  }\n-};\n-\n /* Verify that diagnostic_show_locus works sanely on UNKNOWN_LOCATION.  */\n \n static void"}, {"sha": "201806288e41035da4b0b99756a66fdd28a7df7b", "filename": "gcc/selftest-diagnostic.c", "status": "added", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba7bfd9f049d00f41be1240adebf27e13bcac261/gcc%2Fselftest-diagnostic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba7bfd9f049d00f41be1240adebf27e13bcac261/gcc%2Fselftest-diagnostic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fselftest-diagnostic.c?ref=ba7bfd9f049d00f41be1240adebf27e13bcac261", "patch": "@@ -0,0 +1,62 @@\n+/* Selftest support for diagnostics.\n+   Copyright (C) 2016-2017 Free Software Foundation, Inc.\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify it under\n+the terms of the GNU General Public License as published by the Free\n+Software Foundation; either version 3, or (at your option) any later\n+version.\n+\n+GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#include \"config.h\"\n+#include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"diagnostic.h\"\n+#include \"selftest.h\"\n+#include \"selftest-diagnostic.h\"\n+\n+/* The selftest code should entirely disappear in a production\n+   configuration, hence we guard all of it with #if CHECKING_P.  */\n+\n+#if CHECKING_P\n+\n+namespace selftest {\n+\n+/* Implementation of class selftest::test_diagnostic_context.  */\n+\n+test_diagnostic_context::test_diagnostic_context ()\n+{\n+  diagnostic_initialize (this, 0);\n+  show_caret = true;\n+  show_column = true;\n+  start_span = start_span_cb;\n+}\n+\n+test_diagnostic_context::~test_diagnostic_context ()\n+{\n+  diagnostic_finish (this);\n+}\n+\n+/* Implementation of diagnostic_start_span_fn, hiding the\n+   real filename (to avoid printing the names of tempfiles).  */\n+\n+void\n+test_diagnostic_context::start_span_cb (diagnostic_context *context,\n+\t\t\t\t\texpanded_location exploc)\n+{\n+  exploc.file = \"FILENAME\";\n+  default_diagnostic_start_span_fn (context, exploc);\n+}\n+\n+} // namespace selftest\n+\n+#endif /* #if CHECKING_P */"}, {"sha": "61525dcfd43b66d27f6ba9693075cca15a19d4ff", "filename": "gcc/selftest-diagnostic.h", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba7bfd9f049d00f41be1240adebf27e13bcac261/gcc%2Fselftest-diagnostic.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba7bfd9f049d00f41be1240adebf27e13bcac261/gcc%2Fselftest-diagnostic.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fselftest-diagnostic.h?ref=ba7bfd9f049d00f41be1240adebf27e13bcac261", "patch": "@@ -0,0 +1,49 @@\n+/* Selftest support for diagnostics.\n+   Copyright (C) 2016-2017 Free Software Foundation, Inc.\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify it under\n+the terms of the GNU General Public License as published by the Free\n+Software Foundation; either version 3, or (at your option) any later\n+version.\n+\n+GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#ifndef GCC_SELFTEST_DIAGNOSTIC_H\n+#define GCC_SELFTEST_DIAGNOSTIC_H\n+\n+/* The selftest code should entirely disappear in a production\n+   configuration, hence we guard all of it with #if CHECKING_P.  */\n+\n+#if CHECKING_P\n+\n+namespace selftest {\n+\n+/* Convenience subclass of diagnostic_context for testing\n+   the diagnostic subsystem.  */\n+\n+class test_diagnostic_context : public diagnostic_context\n+{\n+ public:\n+  test_diagnostic_context ();\n+  ~test_diagnostic_context ();\n+\n+  /* Implementation of diagnostic_start_span_fn, hiding the\n+     real filename (to avoid printing the names of tempfiles).  */\n+  static void\n+  start_span_cb (diagnostic_context *context, expanded_location exploc);\n+};\n+\n+} // namespace selftest\n+\n+#endif /* #if CHECKING_P */\n+\n+#endif /* GCC_SELFTEST_DIAGNOSTIC_H */"}]}