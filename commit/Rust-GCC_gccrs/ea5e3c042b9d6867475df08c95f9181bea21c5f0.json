{"sha": "ea5e3c042b9d6867475df08c95f9181bea21c5f0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWE1ZTNjMDQyYjlkNjg2NzQ3NWRmMDhjOTVmOTE4MWJlYTIxYzVmMA==", "commit": {"author": {"name": "Janne Blomqvist", "email": "jb@gcc.gnu.org", "date": "2011-11-01T11:44:12Z"}, "committer": {"name": "Janne Blomqvist", "email": "jb@gcc.gnu.org", "date": "2011-11-01T11:44:12Z"}, "message": "Cleanup NEWUNIT allocation.\n\n2011-11-01  Janne Blomqvist  <jb@gcc.gnu.org>\n\n\t* io/io.h (next_available_newunit): Remove prototype.\n\t* io/unit.h (next_available_newunit): Make variable static,\n\tinitialize it.\n\t(init_units): Don't initialize next_available_newunit.\n\t(get_unique_unit_number): Use atomic builtin if available.\n\nFrom-SVN: r180734", "tree": {"sha": "3763f8dc50f9d3254ab5d03e9aebcd277367ab70", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3763f8dc50f9d3254ab5d03e9aebcd277367ab70"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ea5e3c042b9d6867475df08c95f9181bea21c5f0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea5e3c042b9d6867475df08c95f9181bea21c5f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea5e3c042b9d6867475df08c95f9181bea21c5f0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea5e3c042b9d6867475df08c95f9181bea21c5f0/comments", "author": null, "committer": null, "parents": [{"sha": "1f9ed162eb30f1b40b65d164b3a40ac78e1f006e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f9ed162eb30f1b40b65d164b3a40ac78e1f006e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f9ed162eb30f1b40b65d164b3a40ac78e1f006e"}], "stats": {"total": 26, "additions": 16, "deletions": 10}, "files": [{"sha": "a022ee2ec639b48b90d6dffb20428eb6460df150", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea5e3c042b9d6867475df08c95f9181bea21c5f0/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea5e3c042b9d6867475df08c95f9181bea21c5f0/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=ea5e3c042b9d6867475df08c95f9181bea21c5f0", "patch": "@@ -1,3 +1,11 @@\n+2011-11-01  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\t* io/io.h (next_available_newunit): Remove prototype.\n+\t* io/unit.h (next_available_newunit): Make variable static,\n+\tinitialize it.\n+\t(init_units): Don't initialize next_available_newunit.\n+\t(get_unique_unit_number): Use atomic builtin if available.\n+\n 2011-10-31  Janne Blomqvist  <jb@gcc.gnu.org>\n \n \t* io/inquire.c (inquire_via_unit): Check whether we're at the"}, {"sha": "3569c543f01276e685098886c65b8541a09a7ee4", "filename": "libgfortran/io/io.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea5e3c042b9d6867475df08c95f9181bea21c5f0/libgfortran%2Fio%2Fio.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea5e3c042b9d6867475df08c95f9181bea21c5f0/libgfortran%2Fio%2Fio.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fio.h?ref=ea5e3c042b9d6867475df08c95f9181bea21c5f0", "patch": "@@ -576,10 +576,6 @@ gfc_unit;\n extern gfc_offset max_offset;\n internal_proto(max_offset);\n \n-/* Unit number to be assigned when NEWUNIT is used in an OPEN statement.  */\n-extern GFC_INTEGER_4 next_available_newunit;\n-internal_proto(next_available_newunit);\n-\n /* Unit tree root.  */\n extern gfc_unit *unit_root;\n internal_proto(unit_root);"}, {"sha": "33072fe9ae8823eec1542f92d9acfd7e075b8e74", "filename": "libgfortran/io/unit.c", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea5e3c042b9d6867475df08c95f9181bea21c5f0/libgfortran%2Fio%2Funit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea5e3c042b9d6867475df08c95f9181bea21c5f0/libgfortran%2Fio%2Funit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Funit.c?ref=ea5e3c042b9d6867475df08c95f9181bea21c5f0", "patch": "@@ -71,8 +71,9 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n \n /* Subroutines related to units */\n \n-GFC_INTEGER_4 next_available_newunit;\n+/* Unit number to be assigned when NEWUNIT is used in an OPEN statement.  */\n #define GFC_FIRST_NEWUNIT -10\n+static GFC_INTEGER_4 next_available_newunit = GFC_FIRST_NEWUNIT;\n \n #define CACHE_SIZE 3\n static gfc_unit *unit_cache[CACHE_SIZE];\n@@ -525,8 +526,6 @@ init_units (void)\n   __GTHREAD_MUTEX_INIT_FUNCTION (&unit_lock);\n #endif\n \n-  next_available_newunit = GFC_FIRST_NEWUNIT;\n-\n   if (options.stdin_unit >= 0)\n     {\t\t\t\t/* STDIN */\n       u = insert_unit (options.stdin_unit);\n@@ -808,16 +807,19 @@ get_unique_unit_number (st_parameter_open *opp)\n {\n   GFC_INTEGER_4 num;\n \n+#ifdef HAVE_SYNC_FETCH_AND_ADD\n+  num = __sync_fetch_and_add (&next_available_newunit, -1);\n+#else\n   __gthread_mutex_lock (&unit_lock);\n   num = next_available_newunit--;\n+  __gthread_mutex_unlock (&unit_lock);\n+#endif\n \n   /* Do not allow NEWUNIT numbers to wrap.  */\n-  if (next_available_newunit >=  GFC_FIRST_NEWUNIT )\n+  if (num > GFC_FIRST_NEWUNIT )\n     {\n-      __gthread_mutex_unlock (&unit_lock);\n       generate_error (&opp->common, LIBERROR_INTERNAL, \"NEWUNIT exhausted\");\n       return 0;\n     }\n-  __gthread_mutex_unlock (&unit_lock);\n   return num;\n }"}]}