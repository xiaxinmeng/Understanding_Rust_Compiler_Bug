{"sha": "c61b6f0f3c7d3419603e9143a7065fefb3340247", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzYxYjZmMGYzYzdkMzQxOTYwM2U5MTQzYTcwNjVmZWZiMzM0MDI0Nw==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2012-01-23T09:33:31Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-01-23T09:33:31Z"}, "message": "a-catizo.ads, [...]: Minor reformatting.\n\n2012-01-23  Robert Dewar  <dewar@adacore.com>\n\n\t* a-catizo.ads, a-calend.adb, a-calend.ads, par-ch13.adb: Minor\n\treformatting.\n\nFrom-SVN: r183417", "tree": {"sha": "134cdf8b625a5b3f0325c31ba459d2691866b623", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/134cdf8b625a5b3f0325c31ba459d2691866b623"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c61b6f0f3c7d3419603e9143a7065fefb3340247", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c61b6f0f3c7d3419603e9143a7065fefb3340247", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c61b6f0f3c7d3419603e9143a7065fefb3340247", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c61b6f0f3c7d3419603e9143a7065fefb3340247/comments", "author": null, "committer": null, "parents": [{"sha": "b57cca0bb0336092479d84249e8d4824deede3f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b57cca0bb0336092479d84249e8d4824deede3f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b57cca0bb0336092479d84249e8d4824deede3f5"}], "stats": {"total": 48, "additions": 40, "deletions": 8}, "files": [{"sha": "edc4dc458fc0c63f0e8c3f702c2c79fc5a3f0536", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c61b6f0f3c7d3419603e9143a7065fefb3340247/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c61b6f0f3c7d3419603e9143a7065fefb3340247/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=c61b6f0f3c7d3419603e9143a7065fefb3340247", "patch": "@@ -1,3 +1,8 @@\n+2012-01-23  Robert Dewar  <dewar@adacore.com>\n+\n+\t* a-catizo.ads, a-calend.adb, a-calend.ads, par-ch13.adb: Minor\n+\treformatting.\n+\n 2012-01-23  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_ch6.adb (Analyze_Subprogram_Declaration): Do not set the"}, {"sha": "d85eb2cbc5b3efa0b354a3eb867e9efe3c4b59ce", "filename": "gcc/ada/a-calend.adb", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c61b6f0f3c7d3419603e9143a7065fefb3340247/gcc%2Fada%2Fa-calend.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c61b6f0f3c7d3419603e9143a7065fefb3340247/gcc%2Fada%2Fa-calend.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-calend.adb?ref=c61b6f0f3c7d3419603e9143a7065fefb3340247", "patch": "@@ -30,7 +30,9 @@\n ------------------------------------------------------------------------------\n \n with Ada.Unchecked_Conversion;\n+\n with Interfaces.C;\n+\n with System.OS_Primitives;\n \n package body Ada.Calendar is\n@@ -115,11 +117,12 @@ package body Ada.Calendar is\n    --  This routine acts as an Ada wrapper around __gnat_localtime_tzoff which\n    --  in turn utilizes various OS-dependent mechanisms to calculate the time\n    --  zone offset of a date. Formal parameter Date represents an arbitrary\n-   --  time stamp, either in the past, now, or in the future. If flag\n+   --  time stamp, either in the past, now, or in the future. If the flag\n    --  Is_Historic is set, this routine would try to calculate to the best of\n    --  the OS's abilities the time zone offset that was or will be in effect\n    --  on Date. If the flag is set to False, the routine returns the current\n    --  time zone with Date effectively set to Clock.\n+   --\n    --  NOTE: Targets which support localtime_r will aways return a historic\n    --  time zone even if flag Is_Historic is set to False because this is how\n    --  localtime_r operates.\n@@ -191,7 +194,7 @@ package body Ada.Calendar is\n    Unix_Min : constant Time_Rep :=\n                 Ada_Low + Time_Rep (17 * 366 + 52 * 365) * Nanos_In_Day;\n \n-   --  The Unix upper time bound expressed as nonoseconds since the start of\n+   --  The Unix upper time bound expressed as nanoseconds since the start of\n    --  Ada time in UTC.\n \n    Unix_Max : constant Time_Rep :="}, {"sha": "9e08c79375bfec5d040e60bd26ae1deec802c2ba", "filename": "gcc/ada/a-calend.ads", "status": "modified", "additions": 30, "deletions": 1, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c61b6f0f3c7d3419603e9143a7065fefb3340247/gcc%2Fada%2Fa-calend.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c61b6f0f3c7d3419603e9143a7065fefb3340247/gcc%2Fada%2Fa-calend.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-calend.ads?ref=c61b6f0f3c7d3419603e9143a7065fefb3340247", "patch": "@@ -193,6 +193,35 @@ private\n    --  of year - 4 to year + 4. Internally, routines Split and Time_Of add or\n    --  subtract a \"fake\" February 29 to facilitate the arithmetic involved.\n \n+   ------------------------------------\n+   -- Time zones and UTC_Time_Offset --\n+   ------------------------------------\n+\n+   --  The implementation-defined time zone of Ada.Calendar routines is the\n+   --  local time zone. The term \"local time zone\" can be interpreted in two\n+   --  different ways - either the offset from UTC of the \"now\" or the offset\n+   --  from UTC of some input date.\n+\n+   --  For efficency reasons, Split and Time_Of take the first approach. Since\n+   --  the Ada Reference Manual does not mandate that Split and Time_Of should\n+   --  be concious of historic time zones, this interpretation is acceptable\n+   --  and efficent in terms of performance. Split and Time_Of localize their\n+   --  respective input regardless of whether it represent a past or a future\n+   --  date.\n+\n+   --  UTC_Time_Offset on the other hand must be knowledgeable of historic time\n+   --  zones. To achieve this, the implementation relies on various operating\n+   --  system routines. Note that not all operating systems support time zones.\n+   --  UTC_Time_Offset calculates the offset from UTC as it occurred or will\n+   --  occur on the input date relative to the local time zone. Example:\n+\n+   --     Date         Offset    Reason\n+   --     2012-01-11   -300\n+   --     2011-03-12   -300\n+   --     2011-03-14   -240      Daylight savings is in effect\n+\n+   --  Local declarations\n+\n    --  The underlying type of Time has been chosen to be a 64 bit signed\n    --  integer number since it allows for easier processing of sub seconds\n    --  and arithmetic.\n@@ -351,7 +380,7 @@ private\n    package Time_Zones_Operations is\n \n       function UTC_Time_Offset (Date : Time) return Long_Integer;\n-      --  Return (in seconds), the difference between the local time zone and\n+      --  Return (in seconds) the difference between the local time zone and\n       --  UTC time at a specific historic date.\n \n    end Time_Zones_Operations;"}, {"sha": "5f558691eef6c4125aeac76baddfc0e09a43a162", "filename": "gcc/ada/a-catizo.ads", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c61b6f0f3c7d3419603e9143a7065fefb3340247/gcc%2Fada%2Fa-catizo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c61b6f0f3c7d3419603e9143a7065fefb3340247/gcc%2Fada%2Fa-catizo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-catizo.ads?ref=c61b6f0f3c7d3419603e9143a7065fefb3340247", "patch": "@@ -6,8 +6,6 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---         Copyright (C) 2005-2012, Free Software Foundation, Inc.          --\n---                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --"}, {"sha": "9526e325e0a22bf55585a84cd5da357f22229dfe", "filename": "gcc/ada/par-ch13.adb", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c61b6f0f3c7d3419603e9143a7065fefb3340247/gcc%2Fada%2Fpar-ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c61b6f0f3c7d3419603e9143a7065fefb3340247/gcc%2Fada%2Fpar-ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch13.adb?ref=c61b6f0f3c7d3419603e9143a7065fefb3340247", "patch": "@@ -514,14 +514,11 @@ package body Ch13 is\n \n             if Token = Tok_Comma\n               or else Token = Tok_Semicolon\n-\n             then\n-               --  or else (not Semicolon and then Token /= Tok_Arrow)\n                if Aspect_Argument (A_Id) /= Optional then\n                   Error_Msg_Node_1 := Identifier (Aspect);\n                   Error_Msg_AP (\"aspect& requires an aspect definition\");\n                   OK := False;\n-\n                end if;\n \n             elsif not Semicolon and then Token /= Tok_Arrow then"}]}