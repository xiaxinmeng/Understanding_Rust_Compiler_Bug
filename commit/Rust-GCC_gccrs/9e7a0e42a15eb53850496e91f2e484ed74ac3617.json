{"sha": "9e7a0e42a15eb53850496e91f2e484ed74ac3617", "node_id": "C_kwDOANBUbNoAKDllN2EwZTQyYTE1ZWI1Mzg1MDQ5NmU5MWYyZTQ4NGVkNzRhYzM2MTc", "commit": {"author": {"name": "Roger Sayle", "email": "roger@nextmovesoftware.com", "date": "2022-05-24T13:29:27Z"}, "committer": {"name": "Roger Sayle", "email": "roger@nextmovesoftware.com", "date": "2022-05-24T13:31:59Z"}, "message": "Minor improvement to genpreds.cc\n\nThis simple patch implements Richard Biener's suggestion in comment #6\nof PR tree-optimization/52171 (from February 2013) that the insn-preds\ncode generated by genpreds can avoid using strncmp when matching constant\nstrings of length one.\n\nThe effect of this patch is best explained by the diff of insn-preds.cc:\n<       if (!strncmp (str + 1, \"g\", 1))\n---\n>       if (str[1] == 'g')\n3104c3104\n<       if (!strncmp (str + 1, \"m\", 1))\n---\n>       if (str[1] == 'm')\n3106c3106\n<       if (!strncmp (str + 1, \"c\", 1))\n---\n>       if (str[1] == 'c')\n...\n\nThe equivalent optimization is performed by GCC (but perhaps not by the\nhost compiler), but generating simpler/smaller code may encourage further\noptimizations (such as use of a switch statement).\n\n2022-05-24  Roger Sayle  <roger@nextmovesoftware.com>\n\ngcc/ChangeLog\n\t* genpreds.cc (write_lookup_constraint_1): Avoid generating a call\n\tto strncmp for strings of length one.", "tree": {"sha": "c246a1891935ff3cf148eb27e4064a7c495153b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c246a1891935ff3cf148eb27e4064a7c495153b6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9e7a0e42a15eb53850496e91f2e484ed74ac3617", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e7a0e42a15eb53850496e91f2e484ed74ac3617", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e7a0e42a15eb53850496e91f2e484ed74ac3617", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e7a0e42a15eb53850496e91f2e484ed74ac3617/comments", "author": {"login": "rogersayle", "id": 13512313, "node_id": "MDQ6VXNlcjEzNTEyMzEz", "avatar_url": "https://avatars.githubusercontent.com/u/13512313?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rogersayle", "html_url": "https://github.com/rogersayle", "followers_url": "https://api.github.com/users/rogersayle/followers", "following_url": "https://api.github.com/users/rogersayle/following{/other_user}", "gists_url": "https://api.github.com/users/rogersayle/gists{/gist_id}", "starred_url": "https://api.github.com/users/rogersayle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rogersayle/subscriptions", "organizations_url": "https://api.github.com/users/rogersayle/orgs", "repos_url": "https://api.github.com/users/rogersayle/repos", "events_url": "https://api.github.com/users/rogersayle/events{/privacy}", "received_events_url": "https://api.github.com/users/rogersayle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rogersayle", "id": 13512313, "node_id": "MDQ6VXNlcjEzNTEyMzEz", "avatar_url": "https://avatars.githubusercontent.com/u/13512313?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rogersayle", "html_url": "https://github.com/rogersayle", "followers_url": "https://api.github.com/users/rogersayle/followers", "following_url": "https://api.github.com/users/rogersayle/following{/other_user}", "gists_url": "https://api.github.com/users/rogersayle/gists{/gist_id}", "starred_url": "https://api.github.com/users/rogersayle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rogersayle/subscriptions", "organizations_url": "https://api.github.com/users/rogersayle/orgs", "repos_url": "https://api.github.com/users/rogersayle/repos", "events_url": "https://api.github.com/users/rogersayle/events{/privacy}", "received_events_url": "https://api.github.com/users/rogersayle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d0ef9e06197d14d7ba60404e37bd27c21791ba3d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0ef9e06197d14d7ba60404e37bd27c21791ba3d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d0ef9e06197d14d7ba60404e37bd27c21791ba3d"}], "stats": {"total": 13, "additions": 9, "deletions": 4}, "files": [{"sha": "4571ac7ec6b286a7fd76180fc1d7c4bb619bb08b", "filename": "gcc/genpreds.cc", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e7a0e42a15eb53850496e91f2e484ed74ac3617/gcc%2Fgenpreds.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e7a0e42a15eb53850496e91f2e484ed74ac3617/gcc%2Fgenpreds.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenpreds.cc?ref=9e7a0e42a15eb53850496e91f2e484ed74ac3617", "patch": "@@ -1089,10 +1089,15 @@ write_lookup_constraint_1 (void)\n \t{\n \t  do\n \t    {\n-\t      printf (\"      if (!strncmp (str + 1, \\\"%s\\\", %lu))\\n\"\n-\t\t      \"        return CONSTRAINT_%s;\\n\",\n-\t\t      c->name + 1, (unsigned long int) c->namelen - 1,\n-\t\t      c->c_name);\n+\t      if (c->namelen > 2)\n+\t\tprintf (\"      if (!strncmp (str + 1, \\\"%s\\\", %lu))\\n\"\n+\t\t\t\"        return CONSTRAINT_%s;\\n\",\n+\t\t\tc->name + 1, (unsigned long int) c->namelen - 1,\n+\t\t\tc->c_name);\n+\t      else\n+\t\tprintf (\"      if (str[1] == '%c')\\n\"\n+\t\t\t\"        return CONSTRAINT_%s;\\n\",\n+\t\t\tc->name[1], c->c_name);\n \t      c = c->next_this_letter;\n \t    }\n \t  while (c);"}]}