{"sha": "d8a55d096037ca3ed16b81d1caaff4b2b1623777", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDhhNTVkMDk2MDM3Y2EzZWQxNmI4MWQxY2FhZmY0YjJiMTYyMzc3Nw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-05-08T22:13:33Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-05-08T22:13:33Z"}, "message": "(_objc_load_callback): Add declaration.\n\n(__objc_exec_class): Call _objc_load_callback after every Class or Category\nis added.\n\nFrom-SVN: r9592", "tree": {"sha": "74f01f414f5c161c6b80c9478e8a8333e484aa41", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/74f01f414f5c161c6b80c9478e8a8333e484aa41"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d8a55d096037ca3ed16b81d1caaff4b2b1623777", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8a55d096037ca3ed16b81d1caaff4b2b1623777", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8a55d096037ca3ed16b81d1caaff4b2b1623777", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8a55d096037ca3ed16b81d1caaff4b2b1623777/comments", "author": null, "committer": null, "parents": [{"sha": "1125706fe491a34a72905b8ec38dc810e0c52d6f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1125706fe491a34a72905b8ec38dc810e0c52d6f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1125706fe491a34a72905b8ec38dc810e0c52d6f"}], "stats": {"total": 13, "additions": 13, "deletions": 0}, "files": [{"sha": "eb0e288215c744a2d288680c42a742a85f36ed09", "filename": "gcc/objc/init.c", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a55d096037ca3ed16b81d1caaff4b2b1623777/gcc%2Fobjc%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a55d096037ca3ed16b81d1caaff4b2b1623777/gcc%2Fobjc%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Finit.c?ref=d8a55d096037ca3ed16b81d1caaff4b2b1623777", "patch": "@@ -48,6 +48,12 @@ static void __objc_init_protocols (struct objc_protocol_list* protos);\n /* Add protocol to class */\n static void __objc_class_add_protocols (Class, struct objc_protocol_list*);\n \n+/* This is a hook which is called by __objc_exec_class every time a class\n+   or a category is loaded into the runtime.  This may e.g. help a\n+   dynamic loader determine the classes that have been loaded when\n+   an object file is dynamically linked in */\n+void (*_objc_load_callback)(Class class, Category* category) = 0;\n+\n /* Is all categories/classes resolved? */\n BOOL __objc_dangling_categories = NO;\n \n@@ -190,6 +196,9 @@ __objc_exec_class (Module_t module)\n \n       if (class->protocols)\n \t__objc_init_protocols (class->protocols);\n+\n+      if (_objc_load_callback)\n+\t_objc_load_callback(class, 0);\n    }\n \n   /* Process category information from the module.  */\n@@ -221,6 +230,8 @@ __objc_exec_class (Module_t module)\n \t      __objc_class_add_protocols (class, category->protocols);\n \t    }\n \n+          if (_objc_load_callback)\n+\t    _objc_load_callback(class, category);\n \t}\n       else\n \t{\n@@ -264,6 +275,8 @@ __objc_exec_class (Module_t module)\n \t      __objc_class_add_protocols (class, category->protocols);\n \t    }\n \t  \n+          if (_objc_load_callback)\n+\t    _objc_load_callback(class, category);\n \t}\n     }\n   "}]}