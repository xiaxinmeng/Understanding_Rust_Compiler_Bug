{"sha": "1a5640b4e146e0a991b2172ccac9f0ae99e84ab5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWE1NjQwYjRlMTQ2ZTBhOTkxYjIxNzJjY2FjOWYwYWU5OWU4NGFiNQ==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@codesourcery.com", "date": "2006-04-17T12:42:37Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2006-04-17T12:42:37Z"}, "message": "alias.c (alias_sets): Change the type to VEC(alias_set_entry,gc) *.\n\n\t* alias.c (alias_sets): Change the type to\n\tVEC(alias_set_entry,gc) *.\n\t(get_alias_set_entry, new_alias_set, record_alias_subset): Use\n\tVEC instead of VARRAY.\n\t(last_alias_set): Remove.\n\nFrom-SVN: r113005", "tree": {"sha": "7fcb3d3a8e89b861815b7ebb499e0edf9c557b0e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7fcb3d3a8e89b861815b7ebb499e0edf9c557b0e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1a5640b4e146e0a991b2172ccac9f0ae99e84ab5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a5640b4e146e0a991b2172ccac9f0ae99e84ab5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a5640b4e146e0a991b2172ccac9f0ae99e84ab5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a5640b4e146e0a991b2172ccac9f0ae99e84ab5/comments", "author": null, "committer": null, "parents": [{"sha": "08c796829cf14288f1916299cbd74d0381f3e890", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08c796829cf14288f1916299cbd74d0381f3e890", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08c796829cf14288f1916299cbd74d0381f3e890"}], "stats": {"total": 26, "additions": 16, "deletions": 10}, "files": [{"sha": "201d21751ce6999099edb40d084923d5c52df1ab", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a5640b4e146e0a991b2172ccac9f0ae99e84ab5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a5640b4e146e0a991b2172ccac9f0ae99e84ab5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1a5640b4e146e0a991b2172ccac9f0ae99e84ab5", "patch": "@@ -5,6 +5,12 @@\n \t(REG_BASE_VALUE, find_base_value, record_set,\n \tinit_alias_analysis): Use VEC instead of VARRAY.\n \n+\t* alias.c (alias_sets): Change the type to\n+\tVEC(alias_set_entry,gc) *.\n+\t(get_alias_set_entry, new_alias_set, record_alias_subset): Use\n+\tVEC instead of VARRAY.\n+\t(last_alias_set): Remove.\n+\n 2006-04-16  Roger Sayle  <roger@eyesopen.com>\n \n \tPR target/26961"}, {"sha": "db8555fdc6a3543d92e589ccef66263090f85185", "filename": "gcc/alias.c", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a5640b4e146e0a991b2172ccac9f0ae99e84ab5/gcc%2Falias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a5640b4e146e0a991b2172ccac9f0ae99e84ab5/gcc%2Falias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Falias.c?ref=1a5640b4e146e0a991b2172ccac9f0ae99e84ab5", "patch": "@@ -248,16 +248,19 @@ static bool *reg_known_equiv_p;\n    NOTE_INSN_FUNCTION_BEG note.  */\n static bool copying_arguments;\n \n+DEF_VEC_P(alias_set_entry);\n+DEF_VEC_ALLOC_P(alias_set_entry,gc);\n+\n /* The splay-tree used to store the various alias set entries.  */\n-static GTY ((param_is (struct alias_set_entry))) varray_type alias_sets;\n+static GTY (()) VEC(alias_set_entry,gc) *alias_sets;\n \f\n /* Returns a pointer to the alias set entry for ALIAS_SET, if there is\n    such an entry, or NULL otherwise.  */\n \n static inline alias_set_entry\n get_alias_set_entry (HOST_WIDE_INT alias_set)\n {\n-  return (alias_set_entry)VARRAY_GENERIC_PTR (alias_sets, alias_set);\n+  return VEC_index (alias_set_entry, alias_sets, alias_set);\n }\n \n /* Returns nonzero if the alias sets for MEM1 and MEM2 are such that\n@@ -622,18 +625,15 @@ get_alias_set (tree t)\n \n /* Return a brand-new alias set.  */\n \n-static GTY(()) HOST_WIDE_INT last_alias_set;\n-\n HOST_WIDE_INT\n new_alias_set (void)\n {\n   if (flag_strict_aliasing)\n     {\n-      if (!alias_sets)\n-\tVARRAY_GENERIC_PTR_INIT (alias_sets, 10, \"alias sets\");\n-      else\n-\tVARRAY_GROW (alias_sets, last_alias_set + 2);\n-      return ++last_alias_set;\n+      if (alias_sets == 0)\n+\tVEC_safe_push (alias_set_entry, gc, alias_sets, 0);\n+      VEC_safe_push (alias_set_entry, gc, alias_sets, 0);\n+      return VEC_length (alias_set_entry, alias_sets) - 1;\n     }\n   else\n     return 0;\n@@ -675,7 +675,7 @@ record_alias_subset (HOST_WIDE_INT superset, HOST_WIDE_INT subset)\n       superset_entry->children\n \t= splay_tree_new_ggc (splay_tree_compare_ints);\n       superset_entry->has_zero_child = 0;\n-      VARRAY_GENERIC_PTR (alias_sets, superset) = superset_entry;\n+      VEC_replace (alias_set_entry, alias_sets, superset, superset_entry);\n     }\n \n   if (subset == 0)"}]}