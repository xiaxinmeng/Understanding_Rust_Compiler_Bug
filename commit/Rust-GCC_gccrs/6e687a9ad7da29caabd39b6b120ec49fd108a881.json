{"sha": "6e687a9ad7da29caabd39b6b120ec49fd108a881", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmU2ODdhOWFkN2RhMjljYWFiZDM5YjZiMTIwZWM0OWZkMTA4YTg4MQ==", "commit": {"author": {"name": "Ralf Wildenhues", "email": "Ralf.Wildenhues@gmx.de", "date": "2010-09-19T09:44:24Z"}, "committer": {"name": "Ralf Wildenhues", "email": "rwild@gcc.gnu.org", "date": "2010-09-19T09:44:24Z"}, "message": "Uglify C++ headers some more.\n\nlibstdc++-v3/:\n\t* include/ext/throw_allocator.h\n\t(hash<__gnu_cxx::throw_value_limit>::operator()): Uglify local.\n\t(hash<__gnu_cxx::throw_value_random>::operator()): Likewise.\n\t* include/parallel/set_operations.h (__symmetric_difference_func):\n\tUglify remaining arguments to __count, __first_empty, _M_invoke.\n\t(__difference_func): Likewise for __count.\n\t* include/profile/impl/profiler_node.h\n\t(__object_info_base::__write): Uglify parameter.\n\nFrom-SVN: r164411", "tree": {"sha": "5bb0a7ce008a72a7273992b69b023410a87af30c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5bb0a7ce008a72a7273992b69b023410a87af30c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6e687a9ad7da29caabd39b6b120ec49fd108a881", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e687a9ad7da29caabd39b6b120ec49fd108a881", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e687a9ad7da29caabd39b6b120ec49fd108a881", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e687a9ad7da29caabd39b6b120ec49fd108a881/comments", "author": null, "committer": null, "parents": [{"sha": "61e60481d004f39c8bc5497e9ca1f5893658f3d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61e60481d004f39c8bc5497e9ca1f5893658f3d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61e60481d004f39c8bc5497e9ca1f5893658f3d1"}], "stats": {"total": 39, "additions": 25, "deletions": 14}, "files": [{"sha": "bfcc965809c96243d2a85534ce31fa6afd16003f", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e687a9ad7da29caabd39b6b120ec49fd108a881/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e687a9ad7da29caabd39b6b120ec49fd108a881/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=6e687a9ad7da29caabd39b6b120ec49fd108a881", "patch": "@@ -1,3 +1,14 @@\n+2010-09-19  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n+\n+\t* include/ext/throw_allocator.h\n+\t(hash<__gnu_cxx::throw_value_limit>::operator()): Uglify local.\n+\t(hash<__gnu_cxx::throw_value_random>::operator()): Likewise.\n+\t* include/parallel/set_operations.h (__symmetric_difference_func):\n+\tUglify remaining arguments to __count, __first_empty, _M_invoke.\n+\t(__difference_func): Likewise for __count.\n+\t* include/profile/impl/profiler_node.h\n+\t(__object_info_base::__write): Uglify parameter.\n+\n 2010-09-19  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* src/hash_bytes.cc: Compile load_bytes and shift_mix only when"}, {"sha": "cc344787e8377ca91f0bb820ada78539d26d99ce", "filename": "libstdc++-v3/include/ext/throw_allocator.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e687a9ad7da29caabd39b6b120ec49fd108a881/libstdc%2B%2B-v3%2Finclude%2Fext%2Fthrow_allocator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e687a9ad7da29caabd39b6b120ec49fd108a881/libstdc%2B%2B-v3%2Finclude%2Fext%2Fthrow_allocator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fthrow_allocator.h?ref=6e687a9ad7da29caabd39b6b120ec49fd108a881", "patch": "@@ -737,8 +737,8 @@ namespace std\n       size_t\n       operator()(const __gnu_cxx::throw_value_limit& __val) const\n       {\n-\tstd::hash<std::size_t> h;\n-\tsize_t __result = h(__val._M_i);\n+\tstd::hash<std::size_t> __h;\n+\tsize_t __result = __h(__val._M_i);\n \treturn __result;\n       }\n     };\n@@ -751,8 +751,8 @@ namespace std\n       size_t\n       operator()(const __gnu_cxx::throw_value_random& __val) const\n       {\n-\tstd::hash<std::size_t> h;\n-\tsize_t __result = h(__val._M_i);\n+\tstd::hash<std::size_t> __h;\n+\tsize_t __result = __h(__val._M_i);\n \treturn __result;\n       }\n     };"}, {"sha": "f552c1dda1b776597586908f3c18377a27e958bd", "filename": "libstdc++-v3/include/parallel/set_operations.h", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e687a9ad7da29caabd39b6b120ec49fd108a881/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fset_operations.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e687a9ad7da29caabd39b6b120ec49fd108a881/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fset_operations.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fset_operations.h?ref=6e687a9ad7da29caabd39b6b120ec49fd108a881", "patch": "@@ -103,11 +103,11 @@ namespace __gnu_parallel\n       }\n \n       _DifferenceType\n-      __count(_IIter __a, _IIter __b, _IIter __c, _IIter d) const\n+      __count(_IIter __a, _IIter __b, _IIter __c, _IIter __d) const\n       {\n \t_DifferenceType __counter = 0;\n \n-\twhile (__a != __b && __c != d)\n+\twhile (__a != __b && __c != __d)\n           {\n             if (_M_comp(*__a, *__c))\n               {\n@@ -126,12 +126,12 @@ namespace __gnu_parallel\n               }\n           }\n \n-\treturn __counter + (__b - __a) + (d - __c);\n+\treturn __counter + (__b - __a) + (__d - __c);\n       }\n \n       _OutputIterator\n-      __first_empty(_IIter __c, _IIter d, _OutputIterator __out) const\n-      { return std::copy(__c, d, __out); }\n+      __first_empty(_IIter __c, _IIter __d, _OutputIterator __out) const\n+      { return std::copy(__c, __d, __out); }\n \n       _OutputIterator\n       __second_empty(_IIter __a, _IIter __b, _OutputIterator __out) const\n@@ -153,10 +153,10 @@ namespace __gnu_parallel\n       _Compare _M_comp;\n \n       _OutputIterator\n-      _M_invoke(_IIter __a, _IIter __b, _IIter __c, _IIter d,\n+      _M_invoke(_IIter __a, _IIter __b, _IIter __c, _IIter __d,\n \t\t_OutputIterator __r) const\n       {\n-\twhile (__a != __b && __c != d)\n+\twhile (__a != __b && __c != __d)\n           {\n             if (_M_comp(*__a, *__c))\n               {\n@@ -177,11 +177,11 @@ namespace __gnu_parallel\n \n       _DifferenceType\n       __count(_IIter __a, _IIter __b,\n-\t      _IIter __c, _IIter d) const\n+\t      _IIter __c, _IIter __d) const\n       {\n \t_DifferenceType __counter = 0;\n \n-\twhile (__a != __b && __c != d)\n+\twhile (__a != __b && __c != __d)\n           {\n             if (_M_comp(*__a, *__c))\n               {"}, {"sha": "86f541f59d7b2678c6f59bcb5cd58681e9983e72", "filename": "libstdc++-v3/include/profile/impl/profiler_node.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e687a9ad7da29caabd39b6b120ec49fd108a881/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fimpl%2Fprofiler_node.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e687a9ad7da29caabd39b6b120ec49fd108a881/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fimpl%2Fprofiler_node.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fimpl%2Fprofiler_node.h?ref=6e687a9ad7da29caabd39b6b120ec49fd108a881", "patch": "@@ -148,7 +148,7 @@ namespace __gnu_profile\n     __stack() const\n     { return _M_stack; }\n     \n-    virtual void __write(FILE* f) const = 0;\n+    virtual void __write(FILE* __f) const = 0;\n \n   protected:\n     __stack_t _M_stack;"}]}