{"sha": "352620476c902cea186f10e68a97880edb255743", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzUyNjIwNDc2YzkwMmNlYTE4NmYxMGU2OGE5Nzg4MGVkYjI1NTc0Mw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-06-23T09:32:31Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-06-23T09:32:31Z"}, "message": "[multiple changes]\n\n2009-06-23  Pascal Obry  <obry@adacore.com>\n\n\t* s-strhas.adb, s-strhas.ads: Minor reformatting.\n\n2009-06-23  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch10.adb (Install_Limited_Withed_Unit): a null procedure does\n\tnot indicate that the enclosing unit needs a body.\n\nFrom-SVN: r148836", "tree": {"sha": "552ccebad0f49026020c3ba3b37a87b8e3857526", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/552ccebad0f49026020c3ba3b37a87b8e3857526"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/352620476c902cea186f10e68a97880edb255743", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/352620476c902cea186f10e68a97880edb255743", "html_url": "https://github.com/Rust-GCC/gccrs/commit/352620476c902cea186f10e68a97880edb255743", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/352620476c902cea186f10e68a97880edb255743/comments", "author": null, "committer": null, "parents": [{"sha": "abe19d88066a6afdaf8c6917a631d21e30e4091c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/abe19d88066a6afdaf8c6917a631d21e30e4091c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/abe19d88066a6afdaf8c6917a631d21e30e4091c"}], "stats": {"total": 51, "additions": 39, "deletions": 12}, "files": [{"sha": "fb43672d50a21d82ea8fc6df01651d0affb7f4a7", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/352620476c902cea186f10e68a97880edb255743/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/352620476c902cea186f10e68a97880edb255743/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=352620476c902cea186f10e68a97880edb255743", "patch": "@@ -1,3 +1,12 @@\n+2009-06-23  Pascal Obry  <obry@adacore.com>\n+\n+\t* s-strhas.adb, s-strhas.ads: Minor reformatting.\n+\n+2009-06-23  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch10.adb (Install_Limited_Withed_Unit): a null procedure does\n+\tnot indicate that the enclosing unit needs a body.\n+\n 2009-06-23  Emmanuel Briot  <briot@adacore.com>\n \n \t* prj-conf.ads, prj-conf.adb: New files part of the project manager."}, {"sha": "158fb077e7b66c3c5fc73c16732334be331ac727", "filename": "gcc/ada/s-strhas.adb", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/352620476c902cea186f10e68a97880edb255743/gcc%2Fada%2Fs-strhas.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/352620476c902cea186f10e68a97880edb255743/gcc%2Fada%2Fs-strhas.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-strhas.adb?ref=352620476c902cea186f10e68a97880edb255743", "patch": "@@ -35,18 +35,26 @@ package body System.String_Hash is\n    --  the algorithm used in GNU Awk and the ndbm substitute SDBM by\n    --  Ozan Yigit.\n \n-   function Hash (Key : Key_Type) return Hash_Type\n-   is\n+   ----------\n+   -- Hash --\n+   ----------\n+\n+   function Hash (Key : Key_Type) return Hash_Type is\n+\n       function Shift_Left\n-        (Value : Hash_Type; Amount : Natural) return Hash_Type;\n+        (Value  : Hash_Type;\n+         Amount : Natural) return Hash_Type;\n       pragma Import (Intrinsic, Shift_Left);\n \n-      H : Hash_Type := 0;\n+      H : Hash_Type;\n+\n    begin\n+      H := 0;\n       for J in Key'Range loop\n          H := Char_Type'Pos (Key (J))\n-           + Shift_Left (H, 6) + Shift_Left (H, 16) - H;\n+                + Shift_Left (H, 6) + Shift_Left (H, 16) - H;\n       end loop;\n+\n       return H;\n    end Hash;\n "}, {"sha": "7e721558732ef76cf8e8596838b8f85ea1a35acf", "filename": "gcc/ada/s-strhas.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/352620476c902cea186f10e68a97880edb255743/gcc%2Fada%2Fs-strhas.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/352620476c902cea186f10e68a97880edb255743/gcc%2Fada%2Fs-strhas.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-strhas.ads?ref=352620476c902cea186f10e68a97880edb255743", "patch": "@@ -42,16 +42,16 @@ package System.String_Hash is\n \n    generic\n       type Char_Type is (<>);\n-      --  The character type composing the key string type.\n+      --  The character type composing the key string type\n \n       type Key_Type is array (Positive range <>) of Char_Type;\n-      --  The string type to use as a hash key.\n+      --  The string type to use as a hash key\n \n       type Hash_Type is mod <>;\n-      --  The type to be returned as a hash value.\n+      --  The type to be returned as a hash value\n \n    function Hash (Key : Key_Type) return Hash_Type;\n    pragma Inline (Hash);\n-   --  Compute a hash value for a key.\n+   --  Compute a hash value for a key\n \n end System.String_Hash;"}, {"sha": "04f6f99536c01e4bdccde4ef78780fa138f08982", "filename": "gcc/ada/sem_ch10.adb", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/352620476c902cea186f10e68a97880edb255743/gcc%2Fada%2Fsem_ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/352620476c902cea186f10e68a97880edb255743/gcc%2Fada%2Fsem_ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch10.adb?ref=352620476c902cea186f10e68a97880edb255743", "patch": "@@ -4140,19 +4140,29 @@ package body Sem_Ch10 is\n             end;\n \n             --  Finally, check whether there are subprograms that still\n-            --  require a body.\n+            --  require a body, i.e. are not renamings or null.\n \n             if not Is_Empty_Elmt_List (Subp_List) then\n                declare\n                   Subp_Id : Elmt_Id;\n+                  Spec    : Node_Id;\n \n                begin\n                   Subp_Id := First_Elmt (Subp_List);\n+                  Spec    := Parent (Node (Subp_Id));\n \n                   while Present (Subp_Id) loop\n-                     if Nkind (Parent (Parent (Node (Subp_Id))))\n-                        /= N_Subprogram_Renaming_Declaration\n+                     if Nkind (Parent (Spec))\n+                        = N_Subprogram_Renaming_Declaration\n                      then\n+                        null;\n+\n+                     elsif Nkind (Spec) = N_Procedure_Specification\n+                       and then Null_Present (Spec)\n+                     then\n+                        null;\n+\n+                     else\n                         Set_Body_Required (Library_Unit (N));\n                         return;\n                      end if;"}]}