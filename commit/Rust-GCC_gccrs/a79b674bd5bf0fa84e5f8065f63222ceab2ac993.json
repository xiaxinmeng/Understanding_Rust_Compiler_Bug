{"sha": "a79b674bd5bf0fa84e5f8065f63222ceab2ac993", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTc5YjY3NGJkNWJmMGZhODRlNWY4MDY1ZjYzMjIyY2VhYjJhYzk5Mw==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2014-08-29T00:09:39Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2014-08-29T00:09:39Z"}, "message": "Use rtx_insn in various places in resource.[ch]\n\ngcc/\n2014-08-28  David Malcolm  <dmalcolm@redhat.com>\n\n\t* resource.h (clear_hashed_info_for_insn): Strengthen param from\n\trtx to rtx_insn *.\n\t(incr_ticks_for_insn): Likewise.\n\t(init_resource_info): Likewise.\n\n\t* resource.c (init_resource_info): Likewise.\n\t(clear_hashed_info_for_insn): Likewise.\n\t(incr_ticks_for_insn): Likewise.\n\n\t* reorg.c (delete_scheduled_jump): Strengthen param \"insn\" from\n\trtx to rtx_insn *.\n\t(steal_delay_list_from_target): Use methods of \"seq\".\n\t(try_merge_delay_insns): Use methods of \"merged_insns\".\n\t(update_block): Strengthen param \"insn\" from rtx to rtx_insn *.\n\t(reorg_redirect_jump): Likewise for param \"jump\".\n\nFrom-SVN: r214702", "tree": {"sha": "ab17eaeebce68a54ad1fc71b1e452a4517be2116", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ab17eaeebce68a54ad1fc71b1e452a4517be2116"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a79b674bd5bf0fa84e5f8065f63222ceab2ac993", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a79b674bd5bf0fa84e5f8065f63222ceab2ac993", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a79b674bd5bf0fa84e5f8065f63222ceab2ac993", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a79b674bd5bf0fa84e5f8065f63222ceab2ac993/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "17f385d8dabbfff8eeb45012d63c8cd232958330", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17f385d8dabbfff8eeb45012d63c8cd232958330", "html_url": "https://github.com/Rust-GCC/gccrs/commit/17f385d8dabbfff8eeb45012d63c8cd232958330"}], "stats": {"total": 52, "additions": 35, "deletions": 17}, "files": [{"sha": "294c7e04690eb5a56b282ff09fc9855131ab2c65", "filename": "gcc/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a79b674bd5bf0fa84e5f8065f63222ceab2ac993/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a79b674bd5bf0fa84e5f8065f63222ceab2ac993/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a79b674bd5bf0fa84e5f8065f63222ceab2ac993", "patch": "@@ -1,3 +1,21 @@\n+2014-08-28  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* resource.h (clear_hashed_info_for_insn): Strengthen param from\n+\trtx to rtx_insn *.\n+\t(incr_ticks_for_insn): Likewise.\n+\t(init_resource_info): Likewise.\n+\n+\t* resource.c (init_resource_info): Likewise.\n+\t(clear_hashed_info_for_insn): Likewise.\n+\t(incr_ticks_for_insn): Likewise.\n+\n+\t* reorg.c (delete_scheduled_jump): Strengthen param \"insn\" from\n+\trtx to rtx_insn *.\n+\t(steal_delay_list_from_target): Use methods of \"seq\".\n+\t(try_merge_delay_insns): Use methods of \"merged_insns\".\n+\t(update_block): Strengthen param \"insn\" from rtx to rtx_insn *.\n+\t(reorg_redirect_jump): Likewise for param \"jump\".\n+\n 2014-08-28  David Malcolm  <dmalcolm@redhat.com>\n \n \t* insn-addr.h (insn_addresses_new): Strengthen param \"insn\" from"}, {"sha": "68779e4ee5c7c5a1bce6954a4bd9eb6b5f46ac16", "filename": "gcc/reorg.c", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a79b674bd5bf0fa84e5f8065f63222ceab2ac993/gcc%2Freorg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a79b674bd5bf0fa84e5f8065f63222ceab2ac993/gcc%2Freorg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freorg.c?ref=a79b674bd5bf0fa84e5f8065f63222ceab2ac993", "patch": "@@ -210,7 +210,7 @@ static rtx_code_label *find_end_label (rtx);\n static rtx_insn *emit_delay_sequence (rtx_insn *, rtx_insn_list *, int);\n static rtx_insn_list *add_to_delay_list (rtx_insn *, rtx_insn_list *);\n static rtx_insn *delete_from_delay_slot (rtx_insn *);\n-static void delete_scheduled_jump (rtx);\n+static void delete_scheduled_jump (rtx_insn *);\n static void note_delay_statistics (int, int);\n #if defined(ANNUL_IFFALSE_SLOTS) || defined(ANNUL_IFTRUE_SLOTS)\n static rtx_insn_list *optimize_skip (rtx_insn *);\n@@ -240,8 +240,8 @@ static rtx_insn_list *steal_delay_list_from_fallthrough (rtx_insn *, rtx,\n static void try_merge_delay_insns (rtx, rtx_insn *);\n static rtx redundant_insn (rtx, rtx_insn *, rtx);\n static int own_thread_p (rtx_insn *, rtx, int);\n-static void update_block (rtx, rtx);\n-static int reorg_redirect_jump (rtx, rtx);\n+static void update_block (rtx_insn *, rtx);\n+static int reorg_redirect_jump (rtx_insn *, rtx);\n static void update_reg_dead_notes (rtx, rtx);\n static void fix_reg_dead_note (rtx, rtx);\n static void update_reg_unused_notes (rtx, rtx);\n@@ -666,7 +666,7 @@ delete_from_delay_slot (rtx_insn *insn)\n    the insn that sets CC0 for it and delete it too.  */\n \n static void\n-delete_scheduled_jump (rtx insn)\n+delete_scheduled_jump (rtx_insn *insn)\n {\n   /* Delete the insn that sets cc0 for us.  On machines without cc0, we could\n      delete the insn that sets the condition code, but it is hard to find it.\n@@ -1197,9 +1197,9 @@ steal_delay_list_from_target (rtx_insn *insn, rtx condition, rtx_sequence *seq,\n \n   /* Record the effect of the instructions that were redundant and which\n      we therefore decided not to copy.  */\n-  for (i = 1; i < XVECLEN (seq, 0); i++)\n+  for (i = 1; i < seq->len (); i++)\n     if (redundant[i])\n-      update_block (XVECEXP (seq, 0, i), insn);\n+      update_block (seq->insn (i), insn);\n \n   /* Show the place to which we will be branching.  */\n   *pnew_thread = first_active_target_insn (JUMP_LABEL_AS_INSN (seq->insn (0)));\n@@ -1460,15 +1460,15 @@ try_merge_delay_insns (rtx insn, rtx_insn *thread)\n \t    {\n \t      rtx_insn *new_rtx;\n \n-\t      update_block (XEXP (merged_insns, 0), thread);\n+\t      update_block (merged_insns->insn (), thread);\n \t      new_rtx = delete_from_delay_slot (merged_insns->insn ());\n \t      if (INSN_DELETED_P (thread))\n \t\tthread = new_rtx;\n \t    }\n \t  else\n \t    {\n-\t      update_block (XEXP (merged_insns, 0), thread);\n-\t      delete_related_insns (XEXP (merged_insns, 0));\n+\t      update_block (merged_insns->insn (), thread);\n+\t      delete_related_insns (merged_insns->insn ());\n \t    }\n \t}\n \n@@ -1759,7 +1759,7 @@ own_thread_p (rtx_insn *thread, rtx label, int allow_fallthrough)\n    BARRIER in relax_delay_slots.  */\n \n static void\n-update_block (rtx insn, rtx where)\n+update_block (rtx_insn *insn, rtx where)\n {\n   /* Ignore if this was in a delay slot and it came from the target of\n      a branch.  */\n@@ -1778,7 +1778,7 @@ update_block (rtx insn, rtx where)\n    the basic block containing the jump.  */\n \n static int\n-reorg_redirect_jump (rtx jump, rtx nlabel)\n+reorg_redirect_jump (rtx_insn *jump, rtx nlabel)\n {\n   incr_ticks_for_insn (jump);\n   return redirect_jump (jump, nlabel, 1);"}, {"sha": "607baa000e798e2b7c0ae034ec8576d5cbd9ca3c", "filename": "gcc/resource.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a79b674bd5bf0fa84e5f8065f63222ceab2ac993/gcc%2Fresource.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a79b674bd5bf0fa84e5f8065f63222ceab2ac993/gcc%2Fresource.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fresource.c?ref=a79b674bd5bf0fa84e5f8065f63222ceab2ac993", "patch": "@@ -1155,7 +1155,7 @@ mark_target_live_regs (rtx_insn *insns, rtx_insn *target, struct resources *res)\n    This should be invoked before the first call to mark_target_live_regs.  */\n \n void\n-init_resource_info (rtx epilogue_insn)\n+init_resource_info (rtx_insn *epilogue_insn)\n {\n   int i;\n   basic_block bb;\n@@ -1275,7 +1275,7 @@ free_resource_info (void)\n /* Clear any hashed information that we have stored for INSN.  */\n \n void\n-clear_hashed_info_for_insn (rtx insn)\n+clear_hashed_info_for_insn (rtx_insn *insn)\n {\n   struct target_info *tinfo;\n \n@@ -1294,7 +1294,7 @@ clear_hashed_info_for_insn (rtx insn)\n /* Increment the tick count for the basic block that contains INSN.  */\n \n void\n-incr_ticks_for_insn (rtx insn)\n+incr_ticks_for_insn (rtx_insn *insn)\n {\n   int b = find_basic_block (insn, MAX_DELAY_SLOT_LIVE_SEARCH);\n "}, {"sha": "5bc30fd3bda2ee28b14b2f1b5077eda30a4be9a9", "filename": "gcc/resource.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a79b674bd5bf0fa84e5f8065f63222ceab2ac993/gcc%2Fresource.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a79b674bd5bf0fa84e5f8065f63222ceab2ac993/gcc%2Fresource.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fresource.h?ref=a79b674bd5bf0fa84e5f8065f63222ceab2ac993", "patch": "@@ -48,10 +48,10 @@ extern void mark_target_live_regs (rtx_insn *, rtx_insn *, struct resources *);\n extern void mark_set_resources (rtx, struct resources *, int,\n \t\t\t\tenum mark_resource_type);\n extern void mark_referenced_resources (rtx, struct resources *, bool);\n-extern void clear_hashed_info_for_insn (rtx);\n-extern void incr_ticks_for_insn (rtx);\n+extern void clear_hashed_info_for_insn (rtx_insn *);\n+extern void incr_ticks_for_insn (rtx_insn *);\n extern void mark_end_of_function_resources (rtx, bool);\n-extern void init_resource_info (rtx);\n+extern void init_resource_info (rtx_insn *);\n extern void free_resource_info (void);\n \n #endif /* GCC_RESOURCE_H */"}]}