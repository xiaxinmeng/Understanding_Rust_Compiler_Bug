{"sha": "ce5ba43a4ea1fe705546313188ce51b783b4037c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2U1YmE0M2E0ZWExZmU3MDU1NDYzMTMxODhjZTUxYjc4M2I0MDM3Yw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-08-04T08:06:12Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-08-04T08:06:12Z"}, "message": "[multiple changes]\n\n2014-08-04  Yannick Moy  <moy@adacore.com>\n\n\t* sem_aggr.adb, sem_ch3.adb, sem_ch5.adb, sem_ch7.adb, sem_ch9.adb,\n\tsem_ch12.adb, sem_util.adb, sem_util.ads, sem_res.adb, sem_attr.adb,\n\texp_ch6.adb, sem_ch4.adb, restrict.adb, restrict.ads, sem_ch6.adb,\n\tsem_ch8.adb, sem_ch11.adb: Update some subprogram names to refer to\n\tSPARK_05 instead of SPARK.\n\n2014-08-04  Robert Dewar  <dewar@adacore.com>\n\n\t* sem.ads: Minor reformatting.\n\t* sem_ch13.adb (Analyze_Aspect_External_Or_Link_Name): Minor\n\treformatting.\n\t(Analyze_Aspect_Specifications, case Convention): Put External_Name\n\tbefore Link_Name when constructing pragma.\n\nFrom-SVN: r213537", "tree": {"sha": "4890091d59f2dd0dc44a4e48fdec942cb7df294f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4890091d59f2dd0dc44a4e48fdec942cb7df294f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ce5ba43a4ea1fe705546313188ce51b783b4037c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce5ba43a4ea1fe705546313188ce51b783b4037c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce5ba43a4ea1fe705546313188ce51b783b4037c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce5ba43a4ea1fe705546313188ce51b783b4037c/comments", "author": null, "committer": null, "parents": [{"sha": "3dd7e28d9fdd0210987e9281f158bd97db4e1f06", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3dd7e28d9fdd0210987e9281f158bd97db4e1f06", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3dd7e28d9fdd0210987e9281f158bd97db4e1f06"}], "stats": {"total": 425, "additions": 225, "deletions": 200}, "files": [{"sha": "09575ebfab3cdf04fecb5bd3dcdc156b531d9f49", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce5ba43a4ea1fe705546313188ce51b783b4037c/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce5ba43a4ea1fe705546313188ce51b783b4037c/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ce5ba43a4ea1fe705546313188ce51b783b4037c", "patch": "@@ -1,3 +1,19 @@\n+2014-08-04  Yannick Moy  <moy@adacore.com>\n+\n+\t* sem_aggr.adb, sem_ch3.adb, sem_ch5.adb, sem_ch7.adb, sem_ch9.adb,\n+\tsem_ch12.adb, sem_util.adb, sem_util.ads, sem_res.adb, sem_attr.adb,\n+\texp_ch6.adb, sem_ch4.adb, restrict.adb, restrict.ads, sem_ch6.adb,\n+\tsem_ch8.adb, sem_ch11.adb: Update some subprogram names to refer to\n+\tSPARK_05 instead of SPARK.\n+\n+2014-08-04  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem.ads: Minor reformatting.\n+\t* sem_ch13.adb (Analyze_Aspect_External_Or_Link_Name): Minor\n+\treformatting.\n+\t(Analyze_Aspect_Specifications, case Convention): Put External_Name\n+\tbefore Link_Name when constructing pragma.\n+\n 2014-08-04  Yannick Moy  <moy@adacore.com>\n \n \t* sem.adb, sem.ads (In_Default_Expr): Global flag that is set"}, {"sha": "f0b27b4d8fc5aebf9a6fda3d8093491df96e2b21", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce5ba43a4ea1fe705546313188ce51b783b4037c/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce5ba43a4ea1fe705546313188ce51b783b4037c/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=ce5ba43a4ea1fe705546313188ce51b783b4037c", "patch": "@@ -5546,7 +5546,7 @@ package body Exp_Ch6 is\n \n       if Nkind (Parent (N)) /= N_Package_Specification then\n          if Nkind (Parent (N)) = N_Compilation_Unit then\n-            Check_SPARK_Restriction\n+            Check_SPARK_05_Restriction\n               (\"subprogram declaration is not a library item\", N);\n \n          elsif Present (Next (N))\n@@ -5560,7 +5560,7 @@ package body Exp_Ch6 is\n \n             null;\n          else\n-            Check_SPARK_Restriction\n+            Check_SPARK_05_Restriction\n               (\"subprogram declaration is not allowed here\", N);\n          end if;\n       end if;"}, {"sha": "f2e6a1f9e5e742d11a53900e3b9c8dcfbdb49abe", "filename": "gcc/ada/restrict.adb", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce5ba43a4ea1fe705546313188ce51b783b4037c/gcc%2Fada%2Frestrict.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce5ba43a4ea1fe705546313188ce51b783b4037c/gcc%2Fada%2Frestrict.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frestrict.adb?ref=ce5ba43a4ea1fe705546313188ce51b783b4037c", "patch": "@@ -491,7 +491,7 @@ package body Restrict is\n       --  No_Dispatch restriction is not set.\n \n       if R = No_Dispatch then\n-         Check_SPARK_Restriction (\"class-wide is not allowed\", N);\n+         Check_SPARK_05_Restriction (\"class-wide is not allowed\", N);\n       end if;\n \n       if UI_Is_In_Int_Range (V) then\n@@ -1418,11 +1418,11 @@ package body Restrict is\n       end if;\n    end Set_Restriction_No_Use_Of_Pragma;\n \n-   -----------------------------\n-   -- Check_SPARK_Restriction --\n-   -----------------------------\n+   --------------------------------\n+   -- Check_SPARK_05_Restriction --\n+   --------------------------------\n \n-   procedure Check_SPARK_Restriction\n+   procedure Check_SPARK_05_Restriction\n      (Msg   : String;\n       N     : Node_Id;\n       Force : Boolean := False)\n@@ -1471,9 +1471,9 @@ package body Restrict is\n             Error_Msg_F (\"\\\\| \" & Msg, N);\n          end if;\n       end if;\n-   end Check_SPARK_Restriction;\n+   end Check_SPARK_05_Restriction;\n \n-   procedure Check_SPARK_Restriction (Msg1, Msg2 : String; N : Node_Id) is\n+   procedure Check_SPARK_05_Restriction (Msg1, Msg2 : String; N : Node_Id) is\n       Msg_Issued          : Boolean;\n       Save_Error_Msg_Sloc : Source_Ptr;\n \n@@ -1500,7 +1500,7 @@ package body Restrict is\n             Error_Msg_F (Msg2, N);\n          end if;\n       end if;\n-   end Check_SPARK_Restriction;\n+   end Check_SPARK_05_Restriction;\n \n    ----------------------------------\n    -- Suppress_Restriction_Message --"}, {"sha": "b16e674b9d28547ddaf17d77483918df34c20fdb", "filename": "gcc/ada/restrict.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce5ba43a4ea1fe705546313188ce51b783b4037c/gcc%2Fada%2Frestrict.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce5ba43a4ea1fe705546313188ce51b783b4037c/gcc%2Fada%2Frestrict.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frestrict.ads?ref=ce5ba43a4ea1fe705546313188ce51b783b4037c", "patch": "@@ -258,7 +258,7 @@ package Restrict is\n    --  elaboration routine. If elaboration code is not allowed, an error\n    --  message is posted on the node given as argument.\n \n-   procedure Check_SPARK_Restriction\n+   procedure Check_SPARK_05_Restriction\n      (Msg   : String;\n       N     : Node_Id;\n       Force : Boolean := False);\n@@ -267,9 +267,9 @@ package Restrict is\n    --  the SPARK_05 restriction is set, then an error is issued on N. Msg\n    --  is appended to the restriction failure message.\n \n-   procedure Check_SPARK_Restriction (Msg1, Msg2 : String; N : Node_Id);\n-   --  Same as Check_SPARK_Restriction except there is a continuation message\n-   --  Msg2 following the initial message Msg1.\n+   procedure Check_SPARK_05_Restriction (Msg1, Msg2 : String; N : Node_Id);\n+   --  Same as Check_SPARK_05_Restriction except there is a continuation\n+   --  message Msg2 following the initial message Msg1.\n \n    procedure Check_No_Implicit_Aliasing (Obj : Node_Id);\n    --  Obj is a node for which Is_Aliased_View is True, which is being used in"}, {"sha": "26c760d28837fa36914d4b2260e9bef2a78264c5", "filename": "gcc/ada/sem.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce5ba43a4ea1fe705546313188ce51b783b4037c/gcc%2Fada%2Fsem.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce5ba43a4ea1fe705546313188ce51b783b4037c/gcc%2Fada%2Fsem.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem.ads?ref=ce5ba43a4ea1fe705546313188ce51b783b4037c", "patch": "@@ -250,13 +250,13 @@ package Sem is\n    --  that expression. Probably a boolean would be good enough, since we think\n    --  that such expressions cannot nest, but that might not be true in the\n    --  future (e.g. if let expressions are added to Ada) so we prepare for that\n-   --  future possibility by making it a counter. Like In_Spec_Expression, it\n-   --  must be recursively saved on a Semantics call.\n+   --  future possibility by making it a counter. As with In_Spec_Expression,\n+   --  it must be recursively saved and restored for a Semantics call.\n \n    In_Default_Expr : Boolean := False;\n    --  Switch to indicate that we are analyzing a default component expression.\n-   --  Like In_Spec_Expression, it must be recursively saved on a Semantics\n-   --  call.\n+   --  As with In_Spec_Expression, it must be recursively saved and restored\n+   --  for a Semantics call.\n \n    In_Inlined_Body : Boolean := False;\n    --  Switch to indicate that we are analyzing and resolving an inlined body."}, {"sha": "56c4fad0348ab33c8def4c34cbca2fa7ed8e46e0", "filename": "gcc/ada/sem_aggr.adb", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce5ba43a4ea1fe705546313188ce51b783b4037c/gcc%2Fada%2Fsem_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce5ba43a4ea1fe705546313188ce51b783b4037c/gcc%2Fada%2Fsem_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aggr.adb?ref=ce5ba43a4ea1fe705546313188ce51b783b4037c", "patch": "@@ -712,7 +712,7 @@ package body Sem_Aggr is\n    begin\n       if Level = 0 then\n          if Nkind (Parent (Expr)) /= N_Qualified_Expression then\n-            Check_SPARK_Restriction (\"aggregate should be qualified\", Expr);\n+            Check_SPARK_05_Restriction (\"aggregate should be qualified\", Expr);\n          end if;\n \n       else\n@@ -925,12 +925,12 @@ package body Sem_Aggr is\n            and then not Is_Constrained (Etype (Name (Parent (N))))\n          then\n             if not Is_Others_Aggregate (N) then\n-               Check_SPARK_Restriction\n+               Check_SPARK_05_Restriction\n                  (\"array aggregate should have only OTHERS\", N);\n             end if;\n \n          elsif Is_Top_Level_Aggregate (N) then\n-            Check_SPARK_Restriction (\"aggregate should be qualified\", N);\n+            Check_SPARK_05_Restriction (\"aggregate should be qualified\", N);\n \n          --  The legality of this unqualified aggregate is checked by calling\n          --  Check_Qualified_Aggregate from one of its enclosing aggregate,\n@@ -1934,7 +1934,7 @@ package body Sem_Aggr is\n                               or else (Nkind (Choice) = N_Range\n                                         and then Is_OK_Static_Range (Choice)))\n                      then\n-                        Check_SPARK_Restriction\n+                        Check_SPARK_05_Restriction\n                           (\"choice should be static\", Choice);\n                      end if;\n                   end if;\n@@ -2744,7 +2744,7 @@ package body Sem_Aggr is\n       if Is_Entity_Name (A)\n         and then Is_Type (Entity (A))\n       then\n-         Check_SPARK_Restriction (\"ancestor part cannot be a type mark\", A);\n+         Check_SPARK_05_Restriction (\"ancestor part cannot be a type mark\", A);\n \n          --  AI05-0115: if the ancestor part is a subtype mark, the ancestor\n          --  must not have unknown discriminants.\n@@ -3512,7 +3512,7 @@ package body Sem_Aggr is\n       then\n \n          if Present (Expressions (N)) then\n-            Check_SPARK_Restriction\n+            Check_SPARK_05_Restriction\n               (\"named association cannot follow positional one\",\n                First (Choices (First (Component_Associations (N)))));\n          end if;\n@@ -3524,13 +3524,13 @@ package body Sem_Aggr is\n             Assoc := First (Component_Associations (N));\n             while Present (Assoc) loop\n                if List_Length (Choices (Assoc)) > 1 then\n-                  Check_SPARK_Restriction\n+                  Check_SPARK_05_Restriction\n                     (\"component association in record aggregate must \"\n                      & \"contain a single choice\", Assoc);\n                end if;\n \n                if Nkind (First (Choices (Assoc))) = N_Others_Choice then\n-                  Check_SPARK_Restriction\n+                  Check_SPARK_05_Restriction\n                     (\"record aggregate cannot contain OTHERS\", Assoc);\n                end if;\n "}, {"sha": "2fab55aafad3055f0bb19061ed3920b62c418085", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 20, "deletions": 18, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce5ba43a4ea1fe705546313188ce51b783b4037c/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce5ba43a4ea1fe705546313188ce51b783b4037c/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=ce5ba43a4ea1fe705546313188ce51b783b4037c", "patch": "@@ -320,7 +320,7 @@ package body Sem_Attr is\n       --  Verify that prefix of attribute N is a float type and that\n       --  two attribute expressions are present\n \n-      procedure Check_SPARK_Restriction_On_Attribute;\n+      procedure Check_SPARK_05_Restriction_On_Attribute;\n       --  Issue an error in formal mode because attribute N is allowed\n \n       procedure Check_Integer_Type;\n@@ -755,7 +755,7 @@ package body Sem_Attr is\n       --  Start of processing for Analyze_Access_Attribute\n \n       begin\n-         Check_SPARK_Restriction_On_Attribute;\n+         Check_SPARK_05_Restriction_On_Attribute;\n          Check_E0;\n \n          if Nkind (P) = N_Character_Literal then\n@@ -1804,14 +1804,14 @@ package body Sem_Attr is\n       end Check_Scalar_Type;\n \n       ------------------------------------------\n-      -- Check_SPARK_Restriction_On_Attribute --\n+      -- Check_SPARK_05_Restriction_On_Attribute --\n       ------------------------------------------\n \n-      procedure Check_SPARK_Restriction_On_Attribute is\n+      procedure Check_SPARK_05_Restriction_On_Attribute is\n       begin\n          Error_Msg_Name_1 := Aname;\n-         Check_SPARK_Restriction (\"attribute % is not allowed\", P);\n-      end Check_SPARK_Restriction_On_Attribute;\n+         Check_SPARK_05_Restriction (\"attribute % is not allowed\", P);\n+      end Check_SPARK_05_Restriction_On_Attribute;\n \n       ---------------------------\n       -- Check_Standard_Prefix --\n@@ -2556,7 +2556,7 @@ package body Sem_Attr is\n         and then not In_Open_Scopes (Scope (P_Type))\n         and then not In_Spec_Expression\n       then\n-         Check_SPARK_Restriction (\"invisible attribute of type\", N);\n+         Check_SPARK_05_Restriction (\"invisible attribute of type\", N);\n       end if;\n \n       --  Remaining processing depends on attribute\n@@ -2726,7 +2726,7 @@ package body Sem_Attr is\n \n          if Nkind (Parent (N)) /= N_Attribute_Reference then\n             Error_Msg_Name_1 := Aname;\n-            Check_SPARK_Restriction\n+            Check_SPARK_05_Restriction\n               (\"attribute% is only allowed as prefix of another attribute\", P);\n          end if;\n \n@@ -3571,7 +3571,7 @@ package body Sem_Attr is\n \n       when Attribute_Image => Image :\n       begin\n-         Check_SPARK_Restriction_On_Attribute;\n+         Check_SPARK_05_Restriction_On_Attribute;\n          Check_Scalar_Type;\n          Set_Etype (N, Standard_String);\n \n@@ -4770,7 +4770,7 @@ package body Sem_Attr is\n          if Is_Boolean_Type (P_Type) then\n             Error_Msg_Name_1 := Aname;\n             Error_Msg_Name_2 := Chars (P_Type);\n-            Check_SPARK_Restriction\n+            Check_SPARK_05_Restriction\n               (\"attribute% is not allowed for type%\", P);\n          end if;\n \n@@ -4796,7 +4796,8 @@ package body Sem_Attr is\n          if Is_Real_Type (P_Type) or else Is_Boolean_Type (P_Type) then\n             Error_Msg_Name_1 := Aname;\n             Error_Msg_Name_2 := Chars (P_Type);\n-            Check_SPARK_Restriction (\"attribute% is not allowed for type%\", P);\n+            Check_SPARK_05_Restriction\n+              (\"attribute% is not allowed for type%\", P);\n          end if;\n \n          Resolve (E1, P_Base_Type);\n@@ -5689,7 +5690,8 @@ package body Sem_Attr is\n          if Is_Real_Type (P_Type) or else Is_Boolean_Type (P_Type) then\n             Error_Msg_Name_1 := Aname;\n             Error_Msg_Name_2 := Chars (P_Type);\n-            Check_SPARK_Restriction (\"attribute% is not allowed for type%\", P);\n+            Check_SPARK_05_Restriction\n+              (\"attribute% is not allowed for type%\", P);\n          end if;\n \n          Resolve (E1, P_Base_Type);\n@@ -6392,7 +6394,7 @@ package body Sem_Attr is\n          if Is_Boolean_Type (P_Type) then\n             Error_Msg_Name_1 := Aname;\n             Error_Msg_Name_2 := Chars (P_Type);\n-            Check_SPARK_Restriction\n+            Check_SPARK_05_Restriction\n               (\"attribute% is not allowed for type%\", P);\n          end if;\n \n@@ -6471,7 +6473,7 @@ package body Sem_Attr is\n \n       when Attribute_Value => Value :\n       begin\n-         Check_SPARK_Restriction_On_Attribute;\n+         Check_SPARK_05_Restriction_On_Attribute;\n          Check_E1;\n          Check_Scalar_Type;\n \n@@ -6550,7 +6552,7 @@ package body Sem_Attr is\n \n       when Attribute_Wide_Image => Wide_Image :\n       begin\n-         Check_SPARK_Restriction_On_Attribute;\n+         Check_SPARK_05_Restriction_On_Attribute;\n          Check_Scalar_Type;\n          Set_Etype (N, Standard_Wide_String);\n          Check_E1;\n@@ -6593,7 +6595,7 @@ package body Sem_Attr is\n \n       when Attribute_Wide_Value => Wide_Value :\n       begin\n-         Check_SPARK_Restriction_On_Attribute;\n+         Check_SPARK_05_Restriction_On_Attribute;\n          Check_E1;\n          Check_Scalar_Type;\n \n@@ -6650,7 +6652,7 @@ package body Sem_Attr is\n       ----------------\n \n       when Attribute_Wide_Width =>\n-         Check_SPARK_Restriction_On_Attribute;\n+         Check_SPARK_05_Restriction_On_Attribute;\n          Check_E0;\n          Check_Scalar_Type;\n          Set_Etype (N, Universal_Integer);\n@@ -6660,7 +6662,7 @@ package body Sem_Attr is\n       -----------\n \n       when Attribute_Width =>\n-         Check_SPARK_Restriction_On_Attribute;\n+         Check_SPARK_05_Restriction_On_Attribute;\n          Check_E0;\n          Check_Scalar_Type;\n          Set_Etype (N, Universal_Integer);"}, {"sha": "45b4a082a47be6c405b2e562ba494477dd72ea39", "filename": "gcc/ada/sem_ch11.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce5ba43a4ea1fe705546313188ce51b783b4037c/gcc%2Fada%2Fsem_ch11.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce5ba43a4ea1fe705546313188ce51b783b4037c/gcc%2Fada%2Fsem_ch11.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch11.adb?ref=ce5ba43a4ea1fe705546313188ce51b783b4037c", "patch": "@@ -437,7 +437,7 @@ package body Sem_Ch11 is\n          Check_Compiler_Unit (\"raise expression\", N);\n       end if;\n \n-      Check_SPARK_Restriction (\"raise expression is not allowed\", N);\n+      Check_SPARK_05_Restriction (\"raise expression is not allowed\", N);\n \n       --  Check exception restrictions on the original source\n \n@@ -495,7 +495,7 @@ package body Sem_Ch11 is\n \n    begin\n       if Comes_From_Source (N) then\n-         Check_SPARK_Restriction (\"raise statement is not allowed\", N);\n+         Check_SPARK_05_Restriction (\"raise statement is not allowed\", N);\n       end if;\n \n       Check_Unreachable_Code (N);\n@@ -702,7 +702,7 @@ package body Sem_Ch11 is\n \n    begin\n       if Nkind (Original_Node (N)) = N_Raise_Statement then\n-         Check_SPARK_Restriction (\"raise statement is not allowed\", N);\n+         Check_SPARK_05_Restriction (\"raise statement is not allowed\", N);\n       end if;\n \n       if No (Etype (N)) then"}, {"sha": "f2e3eca820225635bd100dad5d89af1c11d67288", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce5ba43a4ea1fe705546313188ce51b783b4037c/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce5ba43a4ea1fe705546313188ce51b783b4037c/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=ce5ba43a4ea1fe705546313188ce51b783b4037c", "patch": "@@ -3189,7 +3189,7 @@ package body Sem_Ch12 is\n       Decl        : Node_Id;\n \n    begin\n-      Check_SPARK_Restriction (\"generic is not allowed\", N);\n+      Check_SPARK_05_Restriction (\"generic is not allowed\", N);\n \n       --  We introduce a renaming of the enclosing package, to have a usable\n       --  entity as the prefix of an expanded name for a local entity of the\n@@ -3322,7 +3322,7 @@ package body Sem_Ch12 is\n       Typ         : Entity_Id;\n \n    begin\n-      Check_SPARK_Restriction (\"generic is not allowed\", N);\n+      Check_SPARK_05_Restriction (\"generic is not allowed\", N);\n \n       --  Create copy of generic unit, and save for instantiation. If the unit\n       --  is a child unit, do not copy the specifications for the parent, which\n@@ -3618,7 +3618,7 @@ package body Sem_Ch12 is\n    --  Start of processing for Analyze_Package_Instantiation\n \n    begin\n-      Check_SPARK_Restriction (\"generic is not allowed\", N);\n+      Check_SPARK_05_Restriction (\"generic is not allowed\", N);\n \n       --  Very first thing: check for Text_IO sp[ecial unit in case we are\n       --  instantiating one of the children of [[Wide_]Wide_]Text_IO.\n@@ -4865,7 +4865,7 @@ package body Sem_Ch12 is\n    --  Start of processing for Analyze_Subprogram_Instantiation\n \n    begin\n-      Check_SPARK_Restriction (\"generic is not allowed\", N);\n+      Check_SPARK_05_Restriction (\"generic is not allowed\", N);\n \n       --  Very first thing: check for special Text_IO unit in case we are\n       --  instantiating one of the children of [[Wide_]Wide_]Text_IO. Of course"}, {"sha": "15bb5b3856e27e2f3e4b86f19f50af045e941622", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce5ba43a4ea1fe705546313188ce51b783b4037c/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce5ba43a4ea1fe705546313188ce51b783b4037c/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=ce5ba43a4ea1fe705546313188ce51b783b4037c", "patch": "@@ -1417,7 +1417,7 @@ package body Sem_Ch13 is\n                   if No (A) then\n                      Error_Msg_N\n                        (\"missing Import/Export for Link/External name\",\n-                         Aspect);\n+                        Aspect);\n                   end if;\n                end;\n             end Analyze_Aspect_External_Or_Link_Name;\n@@ -1927,14 +1927,14 @@ package body Sem_Ch13 is\n \n                      --  Assemble the full argument list\n \n-                     if Present (Link_Arg) then\n-                        Append_To (Args, Link_Arg);\n-                     end if;\n-\n                      if Present (Extern_Arg) then\n                         Append_To (Args, Extern_Arg);\n                      end if;\n \n+                     if Present (Link_Arg) then\n+                        Append_To (Args, Link_Arg);\n+                     end if;\n+\n                      Make_Aitem_Pragma\n                        (Pragma_Argument_Associations => Args,\n                         Pragma_Name                  => Prag_Nam);"}, {"sha": "94995d426a524c57bd689170b6bc20bfa2e65cbd", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 40, "deletions": 39, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce5ba43a4ea1fe705546313188ce51b783b4037c/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce5ba43a4ea1fe705546313188ce51b783b4037c/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=ce5ba43a4ea1fe705546313188ce51b783b4037c", "patch": "@@ -730,7 +730,7 @@ package body Sem_Ch3 is\n       Enclosing_Prot_Type : Entity_Id := Empty;\n \n    begin\n-      Check_SPARK_Restriction (\"access type is not allowed\", N);\n+      Check_SPARK_05_Restriction (\"access type is not allowed\", N);\n \n       if Is_Entry (Current_Scope)\n         and then Is_Task_Type (Etype (Scope (Current_Scope)))\n@@ -1053,7 +1053,7 @@ package body Sem_Ch3 is\n    --  Start of processing for Access_Subprogram_Declaration\n \n    begin\n-      Check_SPARK_Restriction (\"access type is not allowed\", T_Def);\n+      Check_SPARK_05_Restriction (\"access type is not allowed\", T_Def);\n \n       --  Associate the Itype node with the inner full-type declaration or\n       --  subprogram spec or entry body. This is required to handle nested\n@@ -1322,7 +1322,7 @@ package body Sem_Ch3 is\n       Full_Desig : Entity_Id;\n \n    begin\n-      Check_SPARK_Restriction (\"access type is not allowed\", Def);\n+      Check_SPARK_05_Restriction (\"access type is not allowed\", Def);\n \n       --  Check for permissible use of incomplete type\n \n@@ -1884,7 +1884,7 @@ package body Sem_Ch3 is\n                 (Subtype_Indication (Component_Definition (N)), N);\n \n          if not Nkind_In (Typ, N_Identifier, N_Expanded_Name) then\n-            Check_SPARK_Restriction (\"subtype mark required\", Typ);\n+            Check_SPARK_05_Restriction (\"subtype mark required\", Typ);\n          end if;\n \n       --  Ada 2005 (AI-230): Access Definition case\n@@ -1937,7 +1937,7 @@ package body Sem_Ch3 is\n       --  package Sem).\n \n       if Present (E) then\n-         Check_SPARK_Restriction (\"default expression is not allowed\", E);\n+         Check_SPARK_05_Restriction (\"default expression is not allowed\", E);\n          Preanalyze_Default_Expression (E, T);\n          Check_Initialization (T, E);\n \n@@ -2256,7 +2256,7 @@ package body Sem_Ch3 is\n          if Nkind (Decl) = N_Package_Declaration\n            and then Nkind (Parent (L)) = N_Package_Specification\n          then\n-            Check_SPARK_Restriction\n+            Check_SPARK_05_Restriction\n               (\"package specification cannot contain a package declaration\",\n                Decl);\n          end if;\n@@ -2549,7 +2549,7 @@ package body Sem_Ch3 is\n \n          when N_Record_Definition =>\n             if Present (Discriminant_Specifications (N)) then\n-               Check_SPARK_Restriction\n+               Check_SPARK_05_Restriction\n                  (\"discriminant type is not allowed\",\n                   Defining_Identifier\n                     (First (Discriminant_Specifications (N))));\n@@ -2658,7 +2658,7 @@ package body Sem_Ch3 is\n       --  Controlled type is not allowed in SPARK\n \n       if Is_Visibly_Controlled (T) then\n-         Check_SPARK_Restriction (\"controlled type is not allowed\", N);\n+         Check_SPARK_05_Restriction (\"controlled type is not allowed\", N);\n       end if;\n \n       --  Some common processing for all types\n@@ -2775,7 +2775,7 @@ package body Sem_Ch3 is\n       T : Entity_Id;\n \n    begin\n-      Check_SPARK_Restriction (\"incomplete type is not allowed\", N);\n+      Check_SPARK_05_Restriction (\"incomplete type is not allowed\", N);\n \n       Generate_Definition (Defining_Identifier (N));\n \n@@ -3448,22 +3448,22 @@ package body Sem_Ch3 is\n       if not\n         Nkind_In (Object_Definition (N), N_Identifier, N_Expanded_Name)\n       then\n-         Check_SPARK_Restriction\n+         Check_SPARK_05_Restriction\n            (\"subtype mark required\", Object_Definition (N));\n \n       elsif Is_Array_Type (T)\n         and then not Is_Constrained (T)\n         and then T /= Standard_String\n       then\n-         Check_SPARK_Restriction\n+         Check_SPARK_05_Restriction\n            (\"subtype mark of constrained type expected\",\n             Object_Definition (N));\n       end if;\n \n       --  There are no aliased objects in SPARK\n \n       if Aliased_Present (N) then\n-         Check_SPARK_Restriction (\"aliased object is not allowed\", N);\n+         Check_SPARK_05_Restriction (\"aliased object is not allowed\", N);\n       end if;\n \n       --  Process initialization expression if present and not in error\n@@ -3618,9 +3618,9 @@ package body Sem_Ch3 is\n            --  Only call test if needed\n \n            and then Restriction_Check_Required (SPARK_05)\n-           and then not Is_SPARK_Initialization_Expr (Original_Node (E))\n+           and then not Is_SPARK_05_Initialization_Expr (Original_Node (E))\n          then\n-            Check_SPARK_Restriction\n+            Check_SPARK_05_Restriction\n               (\"initialization expression is not appropriate\", E);\n          end if;\n       end if;\n@@ -3676,7 +3676,7 @@ package body Sem_Ch3 is\n          --  only for constants of type string.\n \n          if Is_String_Type (T) and then not Constant_Present (N) then\n-            Check_SPARK_Restriction\n+            Check_SPARK_05_Restriction\n               (\"declaration of object of unconstrained type not allowed\", N);\n          end if;\n \n@@ -4460,7 +4460,7 @@ package body Sem_Ch3 is\n       if Is_Boolean_Type (T)\n         and then Nkind (Subtype_Indication (N)) = N_Subtype_Indication\n       then\n-         Check_SPARK_Restriction\n+         Check_SPARK_05_Restriction\n            (\"subtype of Boolean cannot have constraint\", N);\n       end if;\n \n@@ -4482,7 +4482,7 @@ package body Sem_Ch3 is\n                   if not\n                     Nkind_In (One_Cstr, N_Identifier, N_Expanded_Name)\n                   then\n-                     Check_SPARK_Restriction\n+                     Check_SPARK_05_Restriction\n                        (\"subtype mark required\", One_Cstr);\n \n                   --  String subtype must have a lower bound of 1 in SPARK.\n@@ -4496,7 +4496,7 @@ package body Sem_Ch3 is\n                      if Is_OK_Static_Expression (Low)\n                        and then Expr_Value (Low) /= 1\n                      then\n-                        Check_SPARK_Restriction\n+                        Check_SPARK_05_Restriction\n                           (\"String subtype must have lower bound of 1\", N);\n                      end if;\n                   end if;\n@@ -4518,7 +4518,7 @@ package body Sem_Ch3 is\n          --  in SPARK.\n \n          if Is_Array_Type (T) and then not Is_Constrained (T) then\n-            Check_SPARK_Restriction\n+            Check_SPARK_05_Restriction\n               (\"subtype of unconstrained array must have constraint\", N);\n          end if;\n \n@@ -5092,7 +5092,7 @@ package body Sem_Ch3 is\n          --  Check SPARK restriction requiring a subtype mark\n \n          if not Nkind_In (Index, N_Identifier, N_Expanded_Name) then\n-            Check_SPARK_Restriction (\"subtype mark required\", Index);\n+            Check_SPARK_05_Restriction (\"subtype mark required\", Index);\n          end if;\n \n          --  Add a subtype declaration for each index of private array type\n@@ -5169,7 +5169,8 @@ package body Sem_Ch3 is\n          Set_Etype (Component_Typ, Element_Type);\n \n          if not Nkind_In (Component_Typ, N_Identifier, N_Expanded_Name) then\n-            Check_SPARK_Restriction (\"subtype mark required\", Component_Typ);\n+            Check_SPARK_05_Restriction\n+              (\"subtype mark required\", Component_Typ);\n          end if;\n \n       --  Ada 2005 (AI-230): Access Definition case\n@@ -5282,7 +5283,7 @@ package body Sem_Ch3 is\n       Set_Packed_Array_Impl_Type (T, Empty);\n \n       if Aliased_Present (Component_Definition (Def)) then\n-         Check_SPARK_Restriction\n+         Check_SPARK_05_Restriction\n            (\"aliased is not allowed\", Component_Definition (Def));\n          Set_Has_Aliased_Components (Etype (T));\n       end if;\n@@ -12123,7 +12124,7 @@ package body Sem_Ch3 is\n       else\n          pragma Assert (Nkind (C) = N_Digits_Constraint);\n \n-         Check_SPARK_Restriction (\"digits constraint is not allowed\", S);\n+         Check_SPARK_05_Restriction (\"digits constraint is not allowed\", S);\n \n          Digits_Expr := Digits_Expression (C);\n          Analyze_And_Resolve (Digits_Expr, Any_Integer);\n@@ -12351,7 +12352,7 @@ package body Sem_Ch3 is\n \n       if Nkind (C) = N_Digits_Constraint then\n \n-         Check_SPARK_Restriction (\"digits constraint is not allowed\", S);\n+         Check_SPARK_05_Restriction (\"digits constraint is not allowed\", S);\n          Check_Restriction (No_Obsolescent_Features, C);\n \n          if Warn_On_Obsolescent_Feature then\n@@ -12582,7 +12583,7 @@ package body Sem_Ch3 is\n \n       if Nkind (C) = N_Delta_Constraint then\n \n-         Check_SPARK_Restriction (\"delta constraint is not allowed\", S);\n+         Check_SPARK_05_Restriction (\"delta constraint is not allowed\", S);\n          Check_Restriction (No_Obsolescent_Features, C);\n \n          if Warn_On_Obsolescent_Feature then\n@@ -13235,7 +13236,7 @@ package body Sem_Ch3 is\n       Bound_Val     : Ureal;\n \n    begin\n-      Check_SPARK_Restriction\n+      Check_SPARK_05_Restriction\n         (\"decimal fixed point type is not allowed\", Def);\n       Check_Restriction (No_Fixed_Point, Def);\n \n@@ -14790,7 +14791,7 @@ package body Sem_Ch3 is\n       --  parent is also an interface.\n \n       if Interface_Present (Def) then\n-         Check_SPARK_Restriction (\"interface is not allowed\", Def);\n+         Check_SPARK_05_Restriction (\"interface is not allowed\", Def);\n \n          if not Is_Interface (Parent_Type) then\n             Diagnose_Interface (Indic, Parent_Type);\n@@ -15044,7 +15045,7 @@ package body Sem_Ch3 is\n                Defining_Identifier (First (Discriminant_Specifications (N))));\n             Set_Has_Discriminants (T, False);\n          else\n-            Check_SPARK_Restriction (\"discriminant type is not allowed\", N);\n+            Check_SPARK_05_Restriction (\"discriminant type is not allowed\", N);\n          end if;\n       end if;\n \n@@ -15235,7 +15236,7 @@ package body Sem_Ch3 is\n       --  extensions of tagged record types.\n \n       if No (Extension) then\n-         Check_SPARK_Restriction\n+         Check_SPARK_05_Restriction\n            (\"derived type is not allowed\", Original_Node (N));\n       end if;\n    end Derived_Type_Declaration;\n@@ -17577,7 +17578,7 @@ package body Sem_Ch3 is\n          --  Non-binary case\n \n          elsif M_Val < 2 ** Bits then\n-            Check_SPARK_Restriction (\"modulus should be a power of 2\", T);\n+            Check_SPARK_05_Restriction (\"modulus should be a power of 2\", T);\n             Set_Non_Binary_Modulus (T);\n \n             if Bits > System_Max_Nonbinary_Modulus_Power then\n@@ -18507,7 +18508,7 @@ package body Sem_Ch3 is\n \n             if Priv_Parent /= Full_Parent then\n                Error_Msg_Name_1 := Chars (Priv_Parent);\n-               Check_SPARK_Restriction (\"% expected\", Full_Indic);\n+               Check_SPARK_05_Restriction (\"% expected\", Full_Indic);\n             end if;\n \n             --  Check the rules of 7.3(10): if the private extension inherits\n@@ -19113,7 +19114,7 @@ package body Sem_Ch3 is\n          if not In_Iter_Schm\n            and then not Is_OK_Static_Range (R)\n          then\n-            Check_SPARK_Restriction (\"range should be static\", R);\n+            Check_SPARK_05_Restriction (\"range should be static\", R);\n          end if;\n \n          Lo := Low_Bound (R);\n@@ -20269,11 +20270,11 @@ package body Sem_Ch3 is\n         or else not Interface_Present (Def)\n       then\n          if Limited_Present (Def) then\n-            Check_SPARK_Restriction (\"limited is not allowed\", N);\n+            Check_SPARK_05_Restriction (\"limited is not allowed\", N);\n          end if;\n \n          if Abstract_Present (Def) then\n-            Check_SPARK_Restriction (\"abstract is not allowed\", N);\n+            Check_SPARK_05_Restriction (\"abstract is not allowed\", N);\n          end if;\n \n          --  The flag Is_Tagged_Type might have already been set by\n@@ -20295,7 +20296,7 @@ package body Sem_Ch3 is\n                                       or else Abstract_Present (Def));\n \n       else\n-         Check_SPARK_Restriction (\"interface is not allowed\", N);\n+         Check_SPARK_05_Restriction (\"interface is not allowed\", N);\n \n          Is_Tagged := True;\n          Analyze_Interface_Declaration (T, Def);\n@@ -20459,13 +20460,13 @@ package body Sem_Ch3 is\n             if Nkind (Ctxt) = N_Package_Body\n               and then Nkind (Parent (Ctxt)) = N_Compilation_Unit\n             then\n-               Check_SPARK_Restriction\n+               Check_SPARK_05_Restriction\n                  (\"type should be defined in package specification\", Typ);\n \n             elsif Nkind (Ctxt) /= N_Package_Specification\n               or else Nkind (Parent (Parent (Ctxt))) /= N_Compilation_Unit\n             then\n-               Check_SPARK_Restriction\n+               Check_SPARK_05_Restriction\n                  (\"type should be defined in library unit package\", Typ);\n             end if;\n          end;\n@@ -20494,14 +20495,14 @@ package body Sem_Ch3 is\n         or else Null_Present (Component_List (Def))\n       then\n          if not Is_Tagged_Type (T) then\n-            Check_SPARK_Restriction (\"untagged record cannot be null\", Def);\n+            Check_SPARK_05_Restriction (\"untagged record cannot be null\", Def);\n          end if;\n \n       else\n          Analyze_Declarations (Component_Items (Component_List (Def)));\n \n          if Present (Variant_Part (Component_List (Def))) then\n-            Check_SPARK_Restriction (\"variant part is not allowed\", Def);\n+            Check_SPARK_05_Restriction (\"variant part is not allowed\", Def);\n             Analyze (Variant_Part (Component_List (Def)));\n          end if;\n       end if;"}, {"sha": "2e1722e103964e732458b61427b4f7fe626c3e47", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce5ba43a4ea1fe705546313188ce51b783b4037c/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce5ba43a4ea1fe705546313188ce51b783b4037c/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=ce5ba43a4ea1fe705546313188ce51b783b4037c", "patch": "@@ -403,7 +403,7 @@ package body Sem_Ch4 is\n       Onode    : Node_Id;\n \n    begin\n-      Check_SPARK_Restriction (\"allocator is not allowed\", N);\n+      Check_SPARK_05_Restriction (\"allocator is not allowed\", N);\n \n       --  Deal with allocator restrictions\n \n@@ -936,7 +936,7 @@ package body Sem_Ch4 is\n             case Nkind (Actual) is\n                when N_Parameter_Association =>\n                   if Named_Seen then\n-                     Check_SPARK_Restriction\n+                     Check_SPARK_05_Restriction\n                        (\"named association cannot follow positional one\",\n                         Actual);\n                      exit;\n@@ -1833,7 +1833,7 @@ package body Sem_Ch4 is\n       --  source node check, because ???\n \n       if Comes_From_Source (N) then\n-         Check_SPARK_Restriction (\"explicit dereference is not allowed\", N);\n+         Check_SPARK_05_Restriction (\"explicit dereference is not allowed\", N);\n       end if;\n \n       --  In formal verification mode, keep track of all reads and writes\n@@ -2052,7 +2052,7 @@ package body Sem_Ch4 is\n       end if;\n \n       if Comes_From_Source (N) then\n-         Check_SPARK_Restriction (\"if expression is not allowed\", N);\n+         Check_SPARK_05_Restriction (\"if expression is not allowed\", N);\n       end if;\n \n       Else_Expr := Next (Then_Expr);\n@@ -2887,7 +2887,7 @@ package body Sem_Ch4 is\n \n    procedure Analyze_Null (N : Node_Id) is\n    begin\n-      Check_SPARK_Restriction (\"null is not allowed\", N);\n+      Check_SPARK_05_Restriction (\"null is not allowed\", N);\n \n       Set_Etype (N, Any_Access);\n    end Analyze_Null;\n@@ -3664,7 +3664,7 @@ package body Sem_Ch4 is\n    --  Start of processing for Analyze_Quantified_Expression\n \n    begin\n-      Check_SPARK_Restriction (\"quantified expression is not allowed\", N);\n+      Check_SPARK_05_Restriction (\"quantified expression is not allowed\", N);\n \n       --  Create a scope to emulate the loop-like behavior of the quantified\n       --  expression. The scope is needed to provide proper visibility of the\n@@ -4877,7 +4877,7 @@ package body Sem_Ch4 is\n \n    begin\n       if Comes_From_Source (N) then\n-         Check_SPARK_Restriction (\"slice is not allowed\", N);\n+         Check_SPARK_05_Restriction (\"slice is not allowed\", N);\n       end if;\n \n       Analyze (P);"}, {"sha": "37b62d18a1b94927602445bf8b478496f9b7c81a", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce5ba43a4ea1fe705546313188ce51b783b4037c/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce5ba43a4ea1fe705546313188ce51b783b4037c/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=ce5ba43a4ea1fe705546313188ce51b783b4037c", "patch": "@@ -893,7 +893,7 @@ package body Sem_Ch5 is\n       --  block statements generated by the expander is fine.\n \n       if Nkind (Original_Node (N)) = N_Block_Statement then\n-         Check_SPARK_Restriction (\"block statement is not allowed\", N);\n+         Check_SPARK_05_Restriction (\"block statement is not allowed\", N);\n       end if;\n \n       --  If no handled statement sequence is present, things are really messed\n@@ -1212,7 +1212,7 @@ package body Sem_Ch5 is\n       --  Case statement with single OTHERS alternative not allowed in SPARK\n \n       if Others_Present and then List_Length (Alternatives (N)) = 1 then\n-         Check_SPARK_Restriction\n+         Check_SPARK_05_Restriction\n            (\"OTHERS as unique case alternative is not allowed\", N);\n       end if;\n \n@@ -1299,7 +1299,7 @@ package body Sem_Ch5 is\n \n          else\n             if Has_Loop_In_Inner_Open_Scopes (U_Name) then\n-               Check_SPARK_Restriction\n+               Check_SPARK_05_Restriction\n                  (\"exit label must name the closest enclosing loop\", N);\n             end if;\n \n@@ -1343,34 +1343,34 @@ package body Sem_Ch5 is\n \n       if Present (Cond) then\n          if Nkind (Parent (N)) /= N_Loop_Statement then\n-            Check_SPARK_Restriction\n+            Check_SPARK_05_Restriction\n               (\"exit with when clause must be directly in loop\", N);\n          end if;\n \n       else\n          if Nkind (Parent (N)) /= N_If_Statement then\n             if Nkind (Parent (N)) = N_Elsif_Part then\n-               Check_SPARK_Restriction\n+               Check_SPARK_05_Restriction\n                  (\"exit must be in IF without ELSIF\", N);\n             else\n-               Check_SPARK_Restriction (\"exit must be directly in IF\", N);\n+               Check_SPARK_05_Restriction (\"exit must be directly in IF\", N);\n             end if;\n \n          elsif Nkind (Parent (Parent (N))) /= N_Loop_Statement then\n-            Check_SPARK_Restriction\n+            Check_SPARK_05_Restriction\n               (\"exit must be in IF directly in loop\", N);\n \n          --  First test the presence of ELSE, so that an exit in an ELSE leads\n          --  to an error mentioning the ELSE.\n \n          elsif Present (Else_Statements (Parent (N))) then\n-            Check_SPARK_Restriction (\"exit must be in IF without ELSE\", N);\n+            Check_SPARK_05_Restriction (\"exit must be in IF without ELSE\", N);\n \n          --  An exit in an ELSIF does not reach here, as it would have been\n          --  detected in the case (Nkind (Parent (N)) /= N_If_Statement).\n \n          elsif Present (Elsif_Parts (Parent (N))) then\n-            Check_SPARK_Restriction (\"exit must be in IF without ELSIF\", N);\n+            Check_SPARK_05_Restriction (\"exit must be in IF without ELSIF\", N);\n          end if;\n       end if;\n \n@@ -1398,7 +1398,7 @@ package body Sem_Ch5 is\n       Label_Ent   : Entity_Id;\n \n    begin\n-      Check_SPARK_Restriction (\"goto statement is not allowed\", N);\n+      Check_SPARK_05_Restriction (\"goto statement is not allowed\", N);\n \n       --  Actual semantic checks\n \n@@ -2481,7 +2481,7 @@ package body Sem_Ch5 is\n       --  Loop parameter specification must include subtype mark in SPARK\n \n       if Nkind (DS) = N_Range then\n-         Check_SPARK_Restriction\n+         Check_SPARK_05_Restriction\n            (\"loop parameter specification must include subtype mark\", N);\n       end if;\n \n@@ -3348,7 +3348,7 @@ package body Sem_Ch5 is\n                   --  Now issue the warning (or error in formal mode)\n \n                   if Restriction_Check_Required (SPARK_05) then\n-                     Check_SPARK_Restriction\n+                     Check_SPARK_05_Restriction\n                        (\"unreachable code is not allowed\", Error_Node);\n                   else\n                      Error_Msg (\"??unreachable code!\", Sloc (Error_Node));"}, {"sha": "09978735d6ef0a2a1e0f89062ba065f702358fe4", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 12, "deletions": 11, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce5ba43a4ea1fe705546313188ce51b783b4037c/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce5ba43a4ea1fe705546313188ce51b783b4037c/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=ce5ba43a4ea1fe705546313188ce51b783b4037c", "patch": "@@ -213,7 +213,7 @@ package body Sem_Ch6 is\n       Scop       : constant Entity_Id := Current_Scope;\n \n    begin\n-      Check_SPARK_Restriction (\"abstract subprogram is not allowed\", N);\n+      Check_SPARK_05_Restriction (\"abstract subprogram is not allowed\", N);\n \n       Generate_Definition (Designator);\n       Set_Contract (Designator, Make_Contract (Sloc (Designator)));\n@@ -882,12 +882,12 @@ package body Sem_Ch6 is\n              (Nkind (Parent (Parent (N))) /= N_Subprogram_Body\n                or else Present (Next (N)))\n          then\n-            Check_SPARK_Restriction\n+            Check_SPARK_05_Restriction\n               (\"RETURN should be the last statement in function\", N);\n          end if;\n \n       else\n-         Check_SPARK_Restriction (\"extended RETURN is not allowed\", N);\n+         Check_SPARK_05_Restriction (\"extended RETURN is not allowed\", N);\n \n          --  Analyze parts specific to extended_return_statement:\n \n@@ -1861,7 +1861,7 @@ package body Sem_Ch6 is\n \n       if Result_Definition (N) /= Error then\n          if Nkind (Result_Definition (N)) = N_Access_Definition then\n-            Check_SPARK_Restriction\n+            Check_SPARK_05_Restriction\n               (\"access result is not allowed\", Result_Definition (N));\n \n             --  Ada 2005 (AI-254): Handle anonymous access to subprograms\n@@ -1895,7 +1895,7 @@ package body Sem_Ch6 is\n             --  Unconstrained array as result is not allowed in SPARK\n \n             if Is_Array_Type (Typ) and then not Is_Constrained (Typ) then\n-               Check_SPARK_Restriction\n+               Check_SPARK_05_Restriction\n                  (\"returning an unconstrained array is not allowed\",\n                   Result_Definition (N));\n             end if;\n@@ -2674,7 +2674,7 @@ package body Sem_Ch6 is\n                  and then not Nkind_In (Stat, N_Simple_Return_Statement,\n                                               N_Extended_Return_Statement)\n                then\n-                  Check_SPARK_Restriction\n+                  Check_SPARK_05_Restriction\n                     (\"last statement in function should be RETURN\", Stat);\n                end if;\n             end;\n@@ -2692,7 +2692,7 @@ package body Sem_Ch6 is\n             --  borrow the Check_Returns procedure here ???\n \n             if Return_Present (Id) then\n-               Check_SPARK_Restriction\n+               Check_SPARK_05_Restriction\n                  (\"procedure should not have RETURN\", N);\n             end if;\n          end if;\n@@ -4144,7 +4144,7 @@ package body Sem_Ch6 is\n       if Nkind (Specification (N)) = N_Procedure_Specification\n         and then Null_Present (Specification (N))\n       then\n-         Check_SPARK_Restriction (\"null procedure is not allowed\", N);\n+         Check_SPARK_05_Restriction (\"null procedure is not allowed\", N);\n \n          if Is_Protected_Type (Current_Scope) then\n             Error_Msg_N (\"protected operation cannot be a null procedure\", N);\n@@ -4351,7 +4351,8 @@ package body Sem_Ch6 is\n       if Nkind (Defining_Unit_Name (N)) = N_Defining_Operator_Symbol\n         and then Nkind (Parent (N)) /= N_Subprogram_Renaming_Declaration\n       then\n-         Check_SPARK_Restriction (\"user-defined operator is not allowed\", N);\n+         Check_SPARK_05_Restriction\n+           (\"user-defined operator is not allowed\", N);\n       end if;\n \n       --  Proceed with analysis. Do not emit a cross-reference entry if the\n@@ -9771,7 +9772,7 @@ package body Sem_Ch6 is\n \n          if Nkind (S) /= N_Defining_Operator_Symbol then\n             Error_Msg_Sloc := Sloc (Homonym (S));\n-            Check_SPARK_Restriction\n+            Check_SPARK_05_Restriction\n               (\"overloading not allowed with entity#\", S);\n          end if;\n \n@@ -10081,7 +10082,7 @@ package body Sem_Ch6 is\n          Default := Expression (Param_Spec);\n \n          if Present (Default) then\n-            Check_SPARK_Restriction\n+            Check_SPARK_05_Restriction\n               (\"default expression is not allowed\", Default);\n \n             if Out_Present (Param_Spec) then"}, {"sha": "722825ed2e2f9959b0b115a6fd2a11b7c78e39e6", "filename": "gcc/ada/sem_ch7.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce5ba43a4ea1fe705546313188ce51b783b4037c/gcc%2Fada%2Fsem_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce5ba43a4ea1fe705546313188ce51b783b4037c/gcc%2Fada%2Fsem_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch7.adb?ref=ce5ba43a4ea1fe705546313188ce51b783b4037c", "patch": "@@ -1093,7 +1093,7 @@ package body Sem_Ch7 is\n \n                   else\n                      Error_Msg_Sloc := Sloc (Previous);\n-                     Check_SPARK_Restriction\n+                     Check_SPARK_05_Restriction\n                        (\"at most one tagged type or type extension allowed\",\n                         \"\\\\ previous declaration#\",\n                         Decl);"}, {"sha": "251fc43f7516f45db3e456fae960d130763343af", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce5ba43a4ea1fe705546313188ce51b783b4037c/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce5ba43a4ea1fe705546313188ce51b783b4037c/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=ce5ba43a4ea1fe705546313188ce51b783b4037c", "patch": "@@ -552,7 +552,7 @@ package body Sem_Ch8 is\n       Nam : constant Node_Id := Name (N);\n \n    begin\n-      Check_SPARK_Restriction (\"exception renaming is not allowed\", N);\n+      Check_SPARK_05_Restriction (\"exception renaming is not allowed\", N);\n \n       Enter_Name (Id);\n       Analyze (Nam);\n@@ -658,7 +658,7 @@ package body Sem_Ch8 is\n          return;\n       end if;\n \n-      Check_SPARK_Restriction (\"generic renaming is not allowed\", N);\n+      Check_SPARK_05_Restriction (\"generic renaming is not allowed\", N);\n \n       Generate_Definition (New_P);\n \n@@ -836,7 +836,7 @@ package body Sem_Ch8 is\n          return;\n       end if;\n \n-      Check_SPARK_Restriction (\"object renaming is not allowed\", N);\n+      Check_SPARK_05_Restriction (\"object renaming is not allowed\", N);\n \n       Set_Is_Pure (Id, Is_Pure (Current_Scope));\n       Enter_Name (Id);\n@@ -3430,7 +3430,7 @@ package body Sem_Ch8 is\n    --  Start of processing for Analyze_Use_Package\n \n    begin\n-      Check_SPARK_Restriction (\"use clause is not allowed\", N);\n+      Check_SPARK_05_Restriction (\"use clause is not allowed\", N);\n \n       Set_Hidden_By_Use_Clause (N, No_Elist);\n \n@@ -6392,12 +6392,13 @@ package body Sem_Ch8 is\n \n       if Restriction_Check_Required (SPARK_05) then\n          if Nkind (Selector_Name (N)) = N_Character_Literal then\n-            Check_SPARK_Restriction\n+            Check_SPARK_05_Restriction\n               (\"character literal cannot be prefixed\", N);\n          elsif Nkind (Selector_Name (N)) = N_Operator_Symbol\n            and then Nkind (Parent (N)) /= N_Subprogram_Renaming_Declaration\n          then\n-            Check_SPARK_Restriction (\"operator symbol cannot be prefixed\", N);\n+            Check_SPARK_05_Restriction\n+              (\"operator symbol cannot be prefixed\", N);\n          end if;\n       end if;\n \n@@ -6765,10 +6766,10 @@ package body Sem_Ch8 is\n            and then Restriction_Check_Required (SPARK_05)\n          then\n             if Is_Subprogram (P_Name) then\n-               Check_SPARK_Restriction\n+               Check_SPARK_05_Restriction\n                  (\"prefix of expanded name cannot be a subprogram\", P);\n             elsif Ekind (P_Name) = E_Loop then\n-               Check_SPARK_Restriction\n+               Check_SPARK_05_Restriction\n                  (\"prefix of expanded name cannot be a loop statement\", P);\n             end if;\n          end if;\n@@ -6927,7 +6928,7 @@ package body Sem_Ch8 is\n \n          elsif Attribute_Name (N) = Name_Base then\n             Error_Msg_Name_1 := Name_Base;\n-            Check_SPARK_Restriction\n+            Check_SPARK_05_Restriction\n               (\"attribute% is only allowed as prefix of another attribute\", N);\n \n             if Ada_Version = Ada_83 and then Comes_From_Source (N) then"}, {"sha": "6be4f559a6c22cb0679b515a157b2965156a2f49", "filename": "gcc/ada/sem_ch9.adb", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce5ba43a4ea1fe705546313188ce51b783b4037c/gcc%2Fada%2Fsem_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce5ba43a4ea1fe705546313188ce51b783b4037c/gcc%2Fada%2Fsem_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch9.adb?ref=ce5ba43a4ea1fe705546313188ce51b783b4037c", "patch": "@@ -701,7 +701,7 @@ package body Sem_Ch9 is\n \n    begin\n       Tasking_Used := True;\n-      Check_SPARK_Restriction (\"abort statement is not allowed\", N);\n+      Check_SPARK_05_Restriction (\"abort statement is not allowed\", N);\n \n       T_Name := First (Names (N));\n       while Present (T_Name) loop\n@@ -772,7 +772,7 @@ package body Sem_Ch9 is\n \n    begin\n       Tasking_Used := True;\n-      Check_SPARK_Restriction (\"accept statement is not allowed\", N);\n+      Check_SPARK_05_Restriction (\"accept statement is not allowed\", N);\n \n       --  Entry name is initialized to Any_Id. It should get reset to the\n       --  matching entry entity. An error is signalled if it is not reset.\n@@ -1003,7 +1003,7 @@ package body Sem_Ch9 is\n \n    begin\n       Tasking_Used := True;\n-      Check_SPARK_Restriction (\"select statement is not allowed\", N);\n+      Check_SPARK_05_Restriction (\"select statement is not allowed\", N);\n       Check_Restriction (Max_Asynchronous_Select_Nesting, N);\n       Check_Restriction (No_Select_Statements, N);\n \n@@ -1049,7 +1049,7 @@ package body Sem_Ch9 is\n \n    begin\n       Tasking_Used := True;\n-      Check_SPARK_Restriction (\"select statement is not allowed\", N);\n+      Check_SPARK_05_Restriction (\"select statement is not allowed\", N);\n       Check_Restriction (No_Select_Statements, N);\n \n       --  Ada 2005 (AI-345): The trigger may be a dispatching call\n@@ -1146,7 +1146,7 @@ package body Sem_Ch9 is\n       E : constant Node_Id := Expression (N);\n    begin\n       Tasking_Used := True;\n-      Check_SPARK_Restriction (\"delay statement is not allowed\", N);\n+      Check_SPARK_05_Restriction (\"delay statement is not allowed\", N);\n       Check_Restriction (No_Relative_Delay, N);\n       Check_Restriction (No_Delay, N);\n       Check_Potentially_Blocking_Operation (N);\n@@ -1164,7 +1164,7 @@ package body Sem_Ch9 is\n \n    begin\n       Tasking_Used := True;\n-      Check_SPARK_Restriction (\"delay statement is not allowed\", N);\n+      Check_SPARK_05_Restriction (\"delay statement is not allowed\", N);\n       Check_Restriction (No_Delay, N);\n       Check_Potentially_Blocking_Operation (N);\n       Analyze (E);\n@@ -1453,7 +1453,7 @@ package body Sem_Ch9 is\n \n    begin\n       Tasking_Used := True;\n-      Check_SPARK_Restriction (\"entry call is not allowed\", N);\n+      Check_SPARK_05_Restriction (\"entry call is not allowed\", N);\n \n       if Present (Pragmas_Before (N)) then\n          Analyze_List (Pragmas_Before (N));\n@@ -1886,7 +1886,7 @@ package body Sem_Ch9 is\n \n    begin\n       Tasking_Used := True;\n-      Check_SPARK_Restriction (\"protected definition is not allowed\", N);\n+      Check_SPARK_05_Restriction (\"protected definition is not allowed\", N);\n       Analyze_Declarations (Visible_Declarations (N));\n \n       if Present (Private_Declarations (N))\n@@ -2176,7 +2176,7 @@ package body Sem_Ch9 is\n \n    begin\n       Tasking_Used := True;\n-      Check_SPARK_Restriction (\"requeue statement is not allowed\", N);\n+      Check_SPARK_05_Restriction (\"requeue statement is not allowed\", N);\n       Check_Restriction (No_Requeue_Statements, N);\n       Check_Unreachable_Code (N);\n \n@@ -2471,7 +2471,7 @@ package body Sem_Ch9 is\n \n    begin\n       Tasking_Used := True;\n-      Check_SPARK_Restriction (\"select statement is not allowed\", N);\n+      Check_SPARK_05_Restriction (\"select statement is not allowed\", N);\n       Check_Restriction (No_Select_Statements, N);\n \n       --  Loop to analyze alternatives\n@@ -2862,7 +2862,7 @@ package body Sem_Ch9 is\n \n    begin\n       Tasking_Used := True;\n-      Check_SPARK_Restriction (\"task definition is not allowed\", N);\n+      Check_SPARK_05_Restriction (\"task definition is not allowed\", N);\n \n       if Present (Visible_Declarations (N)) then\n          Analyze_Declarations (Visible_Declarations (N));\n@@ -3045,7 +3045,7 @@ package body Sem_Ch9 is\n \n    begin\n       Tasking_Used := True;\n-      Check_SPARK_Restriction (\"select statement is not allowed\", N);\n+      Check_SPARK_05_Restriction (\"select statement is not allowed\", N);\n       Check_Restriction (No_Select_Statements, N);\n \n       --  Ada 2005 (AI-345): The trigger may be a dispatching call"}, {"sha": "b7fa5f523bd121410d6abdc028032e799e25aa74", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 23, "deletions": 23, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce5ba43a4ea1fe705546313188ce51b783b4037c/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce5ba43a4ea1fe705546313188ce51b783b4037c/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=ce5ba43a4ea1fe705546313188ce51b783b4037c", "patch": "@@ -3885,7 +3885,7 @@ package body Sem_Res is\n                --  conversions of objects), not general expressions.\n \n                if Is_Actual_Tagged_Parameter (A) then\n-                  if Is_SPARK_Object_Reference (A) then\n+                  if Is_SPARK_05_Object_Reference (A) then\n                      null;\n \n                   elsif Nkind (A) = N_Type_Conversion then\n@@ -3895,8 +3895,8 @@ package body Sem_Res is\n                         Target_Typ  : constant Entity_Id := A_Typ;\n \n                      begin\n-                        if not Is_SPARK_Object_Reference (Operand) then\n-                           Check_SPARK_Restriction\n+                        if not Is_SPARK_05_Object_Reference (Operand) then\n+                           Check_SPARK_05_Restriction\n                              (\"object required\", Operand);\n \n                         --  In formal mode, the only view conversions are those\n@@ -3912,11 +3912,11 @@ package body Sem_Res is\n                            if Ekind_In\n                              (F, E_Out_Parameter, E_In_Out_Parameter)\n                            then\n-                              Check_SPARK_Restriction\n+                              Check_SPARK_05_Restriction\n                                 (\"ancestor conversion is the only permitted \"\n                                  & \"view conversion\", A);\n                            else\n-                              Check_SPARK_Restriction\n+                              Check_SPARK_05_Restriction\n                                 (\"ancestor conversion required\", A);\n                            end if;\n \n@@ -3926,7 +3926,7 @@ package body Sem_Res is\n                      end;\n \n                   else\n-                     Check_SPARK_Restriction (\"object required\", A);\n+                     Check_SPARK_05_Restriction (\"object required\", A);\n                   end if;\n \n                --  In formal mode, the only view conversions are those\n@@ -3935,7 +3935,7 @@ package body Sem_Res is\n                elsif Nkind (A) = N_Type_Conversion\n                  and then Ekind_In (F, E_Out_Parameter, E_In_Out_Parameter)\n                then\n-                  Check_SPARK_Restriction\n+                  Check_SPARK_05_Restriction\n                     (\"ancestor conversion is the only permitted view \"\n                      & \"conversion\", A);\n                end if;\n@@ -5238,7 +5238,7 @@ package body Sem_Res is\n         and then\n           not Nkind_In (Parent (N), N_Qualified_Expression, N_Type_Conversion)\n       then\n-         Check_SPARK_Restriction\n+         Check_SPARK_05_Restriction\n            (\"operation should be qualified or explicitly converted\", N);\n       end if;\n \n@@ -5610,7 +5610,7 @@ package body Sem_Res is\n \n         and then Ekind (Nam) /= E_Enumeration_Literal\n       then\n-         Check_SPARK_Restriction\n+         Check_SPARK_05_Restriction\n            (\"call to subprogram cannot appear before its body\", N);\n       end if;\n \n@@ -5780,7 +5780,7 @@ package body Sem_Res is\n          if Restriction_Check_Required (SPARK_05)\n            and then Same_Or_Aliased_Subprograms (Nam, Scop)\n          then\n-            Check_SPARK_Restriction\n+            Check_SPARK_05_Restriction\n               (\"subprogram may not contain direct call to itself\", N);\n          end if;\n \n@@ -6149,7 +6149,7 @@ package body Sem_Res is\n         and then Is_Entity_Name (Name (N))\n         and then Is_Inherited_Operation_For_Type (Entity (Name (N)), Etype (N))\n       then\n-         Check_SPARK_Restriction (\"function not inherited\", N);\n+         Check_SPARK_05_Restriction (\"function not inherited\", N);\n       end if;\n \n       --  Implement rule in 12.5.1 (23.3/2): In an instance, if the actual is\n@@ -6462,13 +6462,13 @@ package body Sem_Res is\n       --  types or array types except String.\n \n       if Is_Boolean_Type (T) then\n-         Check_SPARK_Restriction\n+         Check_SPARK_05_Restriction\n            (\"comparison is not defined on Boolean type\", N);\n \n       elsif Is_Array_Type (T)\n         and then Base_Type (T) /= Standard_String\n       then\n-         Check_SPARK_Restriction\n+         Check_SPARK_05_Restriction\n            (\"comparison is not defined on array types other than String\", N);\n       end if;\n \n@@ -7514,7 +7514,7 @@ package body Sem_Res is\n               and then Etype (R) /= Any_Composite  --  or else R in error\n               and then not Matching_Static_Array_Bounds (Etype (L), Etype (R))\n             then\n-               Check_SPARK_Restriction\n+               Check_SPARK_05_Restriction\n                  (\"array types should have matching static bounds\", N);\n             end if;\n          end if;\n@@ -8272,7 +8272,7 @@ package body Sem_Res is\n               and then Right_Typ /= Any_Composite  --  or Right_Opnd in error\n               and then not Matching_Static_Array_Bounds (Left_Typ, Right_Typ)\n             then\n-               Check_SPARK_Restriction\n+               Check_SPARK_05_Restriction\n                  (\"array types should have matching static bounds\", N);\n             end if;\n          end;\n@@ -8571,7 +8571,7 @@ package body Sem_Res is\n       end loop;\n \n       if Base_Type (Etype (N)) /= Standard_String then\n-         Check_SPARK_Restriction\n+         Check_SPARK_05_Restriction\n            (\"result of concatenation should have type String\", N);\n       end if;\n    end Resolve_Op_Concat;\n@@ -8706,7 +8706,7 @@ package body Sem_Res is\n \n       if Is_Character_Type (Etype (Arg)) then\n          if not Is_OK_Static_Expression (Arg) then\n-            Check_SPARK_Restriction\n+            Check_SPARK_05_Restriction\n               (\"character operand for concatenation should be static\", Arg);\n          end if;\n \n@@ -8715,7 +8715,7 @@ package body Sem_Res is\n                   and then Is_Constant_Object (Entity (Arg)))\n            and then not Is_OK_Static_Expression (Arg)\n          then\n-            Check_SPARK_Restriction\n+            Check_SPARK_05_Restriction\n               (\"string operand for concatenation should be static\", Arg);\n          end if;\n \n@@ -9026,7 +9026,7 @@ package body Sem_Res is\n         and then Etype (Expr) /= Any_Composite  --  or else Expr in error\n         and then not Matching_Static_Array_Bounds (Target_Typ, Etype (Expr))\n       then\n-         Check_SPARK_Restriction\n+         Check_SPARK_05_Restriction\n            (\"array types should have matching static bounds\", N);\n       end if;\n \n@@ -10235,7 +10235,7 @@ package body Sem_Res is\n         and then Operand_Typ /= Any_Composite  --  or else Operand in error\n         and then not Matching_Static_Array_Bounds (Target_Typ, Operand_Typ)\n       then\n-         Check_SPARK_Restriction\n+         Check_SPARK_05_Restriction\n            (\"array types should have matching static bounds\", N);\n       end if;\n \n@@ -10247,9 +10247,9 @@ package body Sem_Res is\n         and then Is_Tagged_Type (Operand_Typ)\n         and then not Is_Class_Wide_Type (Operand_Typ)\n         and then Is_Ancestor (Target_Typ, Operand_Typ)\n-        and then not Is_SPARK_Object_Reference (Operand)\n+        and then not Is_SPARK_05_Object_Reference (Operand)\n       then\n-         Check_SPARK_Restriction (\"object required\", Operand);\n+         Check_SPARK_05_Restriction (\"object required\", Operand);\n       end if;\n \n       Analyze_Dimension (N);\n@@ -10520,7 +10520,7 @@ package body Sem_Res is\n    begin\n       if Is_Modular_Integer_Type (Typ) and then Nkind (N) /= N_Op_Not then\n          Error_Msg_Name_1 := Chars (Typ);\n-         Check_SPARK_Restriction\n+         Check_SPARK_05_Restriction\n            (\"unary operator not defined for modular type%\", N);\n       end if;\n "}, {"sha": "4c8bddd515bda7e4983f88655dd24cc2a40ee7f2", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 25, "deletions": 23, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce5ba43a4ea1fe705546313188ce51b783b4037c/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce5ba43a4ea1fe705546313188ce51b783b4037c/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=ce5ba43a4ea1fe705546313188ce51b783b4037c", "patch": "@@ -2557,7 +2557,7 @@ package body Sem_Util is\n                      end if;\n                   else\n                      Error_Msg_Sloc := Body_Sloc;\n-                     Check_SPARK_Restriction\n+                     Check_SPARK_05_Restriction\n                        (\"decl cannot appear after body#\", Decl);\n                   end if;\n                end if;\n@@ -5426,7 +5426,7 @@ package body Sem_Util is\n               and then Comes_From_Source (C)\n             then\n                Error_Msg_Sloc := Sloc (C);\n-               Check_SPARK_Restriction\n+               Check_SPARK_05_Restriction\n                  (\"redeclaration of identifier &#\", Def_Id);\n             end if;\n          end;\n@@ -11459,11 +11459,11 @@ package body Sem_Util is\n       end if;\n    end Is_Selector_Name;\n \n-   ----------------------------------\n-   -- Is_SPARK_Initialization_Expr --\n-   ----------------------------------\n+   -------------------------------------\n+   -- Is_SPARK_05_Initialization_Expr --\n+   -------------------------------------\n \n-   function Is_SPARK_Initialization_Expr (N : Node_Id) return Boolean is\n+   function Is_SPARK_05_Initialization_Expr (N : Node_Id) return Boolean is\n       Is_Ok     : Boolean;\n       Expr      : Node_Id;\n       Comp_Assn : Node_Id;\n@@ -11507,27 +11507,28 @@ package body Sem_Util is\n \n          when N_Qualified_Expression |\n               N_Type_Conversion      =>\n-            Is_Ok := Is_SPARK_Initialization_Expr (Expression (Orig_N));\n+            Is_Ok := Is_SPARK_05_Initialization_Expr (Expression (Orig_N));\n \n          when N_Unary_Op =>\n-            Is_Ok := Is_SPARK_Initialization_Expr (Right_Opnd (Orig_N));\n+            Is_Ok := Is_SPARK_05_Initialization_Expr (Right_Opnd (Orig_N));\n \n          when N_Binary_Op       |\n               N_Short_Circuit   |\n               N_Membership_Test =>\n-            Is_Ok := Is_SPARK_Initialization_Expr (Left_Opnd (Orig_N))\n+            Is_Ok := Is_SPARK_05_Initialization_Expr (Left_Opnd (Orig_N))\n                        and then\n-                         Is_SPARK_Initialization_Expr (Right_Opnd (Orig_N));\n+                         Is_SPARK_05_Initialization_Expr (Right_Opnd (Orig_N));\n \n          when N_Aggregate           |\n               N_Extension_Aggregate =>\n             if Nkind (Orig_N) = N_Extension_Aggregate then\n-               Is_Ok := Is_SPARK_Initialization_Expr (Ancestor_Part (Orig_N));\n+               Is_Ok :=\n+                 Is_SPARK_05_Initialization_Expr (Ancestor_Part (Orig_N));\n             end if;\n \n             Expr := First (Expressions (Orig_N));\n             while Present (Expr) loop\n-               if not Is_SPARK_Initialization_Expr (Expr) then\n+               if not Is_SPARK_05_Initialization_Expr (Expr) then\n                   Is_Ok := False;\n                   goto Done;\n                end if;\n@@ -11539,7 +11540,7 @@ package body Sem_Util is\n             while Present (Comp_Assn) loop\n                Expr := Expression (Comp_Assn);\n                if Present (Expr)  --  needed for box association\n-                 and then not Is_SPARK_Initialization_Expr (Expr)\n+                 and then not Is_SPARK_05_Initialization_Expr (Expr)\n                then\n                   Is_Ok := False;\n                   goto Done;\n@@ -11550,12 +11551,12 @@ package body Sem_Util is\n \n          when N_Attribute_Reference =>\n             if Nkind (Prefix (Orig_N)) in N_Subexpr then\n-               Is_Ok := Is_SPARK_Initialization_Expr (Prefix (Orig_N));\n+               Is_Ok := Is_SPARK_05_Initialization_Expr (Prefix (Orig_N));\n             end if;\n \n             Expr := First (Expressions (Orig_N));\n             while Present (Expr) loop\n-               if not Is_SPARK_Initialization_Expr (Expr) then\n+               if not Is_SPARK_05_Initialization_Expr (Expr) then\n                   Is_Ok := False;\n                   goto Done;\n                end if;\n@@ -11575,13 +11576,13 @@ package body Sem_Util is\n \n    <<Done>>\n       return Is_Ok;\n-   end Is_SPARK_Initialization_Expr;\n+   end Is_SPARK_05_Initialization_Expr;\n \n-   -------------------------------\n-   -- Is_SPARK_Object_Reference --\n-   -------------------------------\n+   ----------------------------------\n+   -- Is_SPARK_05_Object_Reference --\n+   ----------------------------------\n \n-   function Is_SPARK_Object_Reference (N : Node_Id) return Boolean is\n+   function Is_SPARK_05_Object_Reference (N : Node_Id) return Boolean is\n    begin\n       if Is_Entity_Name (N) then\n          return Present (Entity (N))\n@@ -11592,13 +11593,13 @@ package body Sem_Util is\n       else\n          case Nkind (N) is\n             when N_Selected_Component =>\n-               return Is_SPARK_Object_Reference (Prefix (N));\n+               return Is_SPARK_05_Object_Reference (Prefix (N));\n \n             when others =>\n                return False;\n          end case;\n       end if;\n-   end Is_SPARK_Object_Reference;\n+   end Is_SPARK_05_Object_Reference;\n \n    ------------------\n    -- Is_Statement --\n@@ -15116,7 +15117,8 @@ package body Sem_Util is\n            and then (Typ = 't' or else Ekind (Ent) = E_Package)\n          then\n             Error_Msg_Node_1 := Endl;\n-            Check_SPARK_Restriction (\"`END &` required\", Endl, Force => True);\n+            Check_SPARK_05_Restriction\n+              (\"`END &` required\", Endl, Force => True);\n          end if;\n       end if;\n "}, {"sha": "cdb84dc97ca78d6de4319e5520781b8d6987f8e1", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce5ba43a4ea1fe705546313188ce51b783b4037c/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce5ba43a4ea1fe705546313188ce51b783b4037c/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=ce5ba43a4ea1fe705546313188ce51b783b4037c", "patch": "@@ -1312,14 +1312,16 @@ package Sem_Util is\n    --  represent use of the N_Identifier node for a true identifier, when\n    --  normally such nodes represent a direct name.\n \n-   function Is_SPARK_Initialization_Expr (N : Node_Id) return Boolean;\n+   function Is_SPARK_05_Initialization_Expr (N : Node_Id) return Boolean;\n    --  Determines if the tree referenced by N represents an initialization\n-   --  expression in SPARK, suitable for initializing an object in an object\n-   --  declaration.\n-\n-   function Is_SPARK_Object_Reference (N : Node_Id) return Boolean;\n-   --  Determines if the tree referenced by N represents an object in SPARK.\n-   --  This differs from Is_Object_Reference in that ???\n+   --  expression in SPARK 2005, suitable for initializing an object in an\n+   --  object declaration.\n+\n+   function Is_SPARK_05_Object_Reference (N : Node_Id) return Boolean;\n+   --  Determines if the tree referenced by N represents an object in SPARK\n+   --  2005. This differs from Is_Object_Reference in that only variables,\n+   --  constants, formal parameters, and selected_components of those are\n+   --  valid objects in SPARK 2005.\n \n    function Is_Statement (N : Node_Id) return Boolean;\n    pragma Inline (Is_Statement);"}]}