{"sha": "d0a2c5a9e7eb16099be1f4b1068f9fe1ff9d9d19", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDBhMmM1YTllN2ViMTYwOTliZTFmNGIxMDY4ZjlmZTFmZjlkOWQxOQ==", "commit": {"author": {"name": "Bud Davis", "email": "bdavis9659@sbcglobal.net", "date": "2010-04-09T02:03:10Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2010-04-09T02:03:10Z"}, "message": "re PR fortran/28039 (Warn when ignoring extra characters in the format specification)\n\n2010-04-08  Bud Davis  <bdavis9659@sbcglobal.net>\n\n\tPR fortran/28039\n\t* io.c (check_format_string):  Added check for additional non \n\tblank characters after the format string was successfully \n\tparsed.\n\t* io.c (check_format): Changed the error messages for positive\n\tint required and period required to drop through the error logic\n\tand report with gfc_error instead of gfc_error_now.  Corrected\n\tformat postion for hollerith strings.\n\nFrom-SVN: r158147", "tree": {"sha": "9178c104384627411065bdb3f8bea6f559d57ada", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9178c104384627411065bdb3f8bea6f559d57ada"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d0a2c5a9e7eb16099be1f4b1068f9fe1ff9d9d19", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0a2c5a9e7eb16099be1f4b1068f9fe1ff9d9d19", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d0a2c5a9e7eb16099be1f4b1068f9fe1ff9d9d19", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0a2c5a9e7eb16099be1f4b1068f9fe1ff9d9d19/comments", "author": null, "committer": null, "parents": [{"sha": "c02105beb38f80c405ff8b90e3aec9223a49c39e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c02105beb38f80c405ff8b90e3aec9223a49c39e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c02105beb38f80c405ff8b90e3aec9223a49c39e"}], "stats": {"total": 39, "additions": 32, "deletions": 7}, "files": [{"sha": "0b6bfaeadf013774700328273430f01beb71333c", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0a2c5a9e7eb16099be1f4b1068f9fe1ff9d9d19/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0a2c5a9e7eb16099be1f4b1068f9fe1ff9d9d19/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=d0a2c5a9e7eb16099be1f4b1068f9fe1ff9d9d19", "patch": "@@ -1,3 +1,14 @@\n+2010-04-08  Bud Davis  <bdavis9659@sbcglobal.net>\n+\n+\tPR fortran/28039\n+\t* io.c (check_format_string):  Added check for additional non \n+\tblank characters after the format string was successfully \n+\tparsed.\n+\t* io.c (check_format): Changed the error messages for positive\n+\tint required and period required to drop through the error logic\n+\tand report with gfc_error instead of gfc_error_now.  Corrected\n+\tformat postion for hollerith strings.\n+\n 2010-04-08  Tobias Burnus  <burnus@net-b.de>\n \n \t* module.c (use_iso_fortran_env_module): Fix standard check."}, {"sha": "1ce26df570d6e17f842136822cd025197839da19", "filename": "gcc/fortran/io.c", "status": "modified", "additions": 21, "deletions": 7, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0a2c5a9e7eb16099be1f4b1068f9fe1ff9d9d19/gcc%2Ffortran%2Fio.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0a2c5a9e7eb16099be1f4b1068f9fe1ff9d9d19/gcc%2Ffortran%2Fio.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fio.c?ref=d0a2c5a9e7eb16099be1f4b1068f9fe1ff9d9d19", "patch": "@@ -850,11 +850,11 @@ check_format (bool is_input)\n       if (u != FMT_POSINT)\n \t{\n \t  format_locus.nextc += format_string_pos;\n-\t  gfc_error_now (\"Positive width required in format \"\n+\t  gfc_error (\"Positive width required in format \"\n \t\t\t \"specifier %s at %L\", token_to_string (t),\n \t\t\t &format_locus);\n \t  saved_token = u;\n-\t  goto finished;\n+\t  goto fail;\n \t}\n \n       u = format_lex ();\n@@ -866,11 +866,11 @@ check_format (bool is_input)\n \t  format_locus.nextc += format_string_pos;\n \t  if (gfc_option.warn_std != 0)\n \t    {\n-\t      gfc_error_now (\"Period required in format \"\n+\t      gfc_error (\"Period required in format \"\n \t\t\t     \"specifier %s at %L\", token_to_string (t),\n \t\t\t     &format_locus);\n \t      saved_token = u;\n-\t      goto finished;\n+              goto fail;\n \t    }\n \t  else\n \t    gfc_warning (\"Period required in format \"\n@@ -970,11 +970,11 @@ check_format (bool is_input)\n \t  gfc_warning (\"The H format specifier at %L is\"\n \t\t       \" a Fortran 95 deleted feature\", &format_locus);\n \t}\n-\n       if (mode == MODE_STRING)\n \t{\n \t  format_string += value;\n \t  format_length -= value;\n+          format_string_pos += repeat;\n \t}\n       else\n \t{\n@@ -1152,6 +1152,8 @@ check_format (bool is_input)\n static gfc_try\n check_format_string (gfc_expr *e, bool is_input)\n {\n+  gfc_try rv;\n+  int i;\n   if (!e || e->ts.type != BT_CHARACTER || e->expr_type != EXPR_CONSTANT)\n     return SUCCESS;\n \n@@ -1162,8 +1164,20 @@ check_format_string (gfc_expr *e, bool is_input)\n      format string that has been calculated, but that's probably not worth the\n      effort.  */\n   format_locus = e->where;\n-\n-  return check_format (is_input);\n+  rv = check_format (is_input);\n+  /* check for extraneous characters at the end of an otherwise valid format\n+     string, like '(A10,I3)F5'\n+     start at the end and move back to the last character processed,\n+     spaces are OK */\n+  if (rv == SUCCESS && e->value.character.length > format_string_pos)\n+    for (i=e->value.character.length-1;i>format_string_pos-1;i--)\n+      if (e->value.character.string[i] != ' ')\n+        {\n+          format_locus.nextc += format_length + 1; \n+          gfc_warning (\"Extraneous characters in format at %L\", &format_locus); \n+          break;\n+        }\n+  return rv;\n }\n \n "}]}