{"sha": "e2c14f5d512a5a5e8a658030789dea947c42068e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTJjMTRmNWQ1MTJhNWE1ZThhNjU4MDMwNzg5ZGVhOTQ3YzQyMDY4ZQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard@codesourcery.com", "date": "2007-07-02T10:11:56Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2007-07-02T10:11:56Z"}, "message": "gcc/\n\t* config.gcc (mipsisa32-*-elf*, mipsisa32el-*-elf*)\n\t(mipsisa32r2-*-elf*, mipsisa32r2el-*-elf*)\n\t(mipsisa64-*-elf*, mipsisa64el-*-elf*): Combine top-level\n\tstanzas.  Use the first part of the triplet to set MIPS_ISA_DEFAULT.\n\tRemove redundant setting of MASK_FLOAT64 and MASK_64BIT for the\n\t64-bit targets.  Add support for *-elfoabi*.\n\t* config/mips/t-isa3264 (MULTILIB_OPTIONS, MULTILIB_DIRNAMES): Use\n\tdifferent settings if $(tm_defines) does not select the EABI.\n\t(MULTILIB_EXCLUSIONS): Define in those circumstances.\n\t* config/mips/mips.h (MIPS_ISA_LEVEL_OPTION_SPEC): New macro.\n\t(MIPS_ARCH_OPTION_SPEC): Likewise.\n\t(MIPS_ISA_LEVEL_SPEC): Likewise.\n\t(OPTION_DEFAULT_SPECS): Use MIPS_ARCH_OPTION_SPEC.\n\t* config/mips/elfoabi.h: New file.\n\nFrom-SVN: r126195", "tree": {"sha": "0032f4d9416bd1cb36c8e003f578b206cb2e73b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0032f4d9416bd1cb36c8e003f578b206cb2e73b1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e2c14f5d512a5a5e8a658030789dea947c42068e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2c14f5d512a5a5e8a658030789dea947c42068e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2c14f5d512a5a5e8a658030789dea947c42068e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2c14f5d512a5a5e8a658030789dea947c42068e/comments", "author": null, "committer": null, "parents": [{"sha": "36618b93d0cbf25b1de5ec50998c3430e29c4585", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36618b93d0cbf25b1de5ec50998c3430e29c4585", "html_url": "https://github.com/Rust-GCC/gccrs/commit/36618b93d0cbf25b1de5ec50998c3430e29c4585"}], "stats": {"total": 134, "additions": 118, "deletions": 16}, "files": [{"sha": "f1452ac2a195c88de7ab2061a65e728f4708490d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2c14f5d512a5a5e8a658030789dea947c42068e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2c14f5d512a5a5e8a658030789dea947c42068e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e2c14f5d512a5a5e8a658030789dea947c42068e", "patch": "@@ -1,3 +1,20 @@\n+2007-07-02  Richard Sandiford  <richard@codesourcery.com>\n+\n+\t* config.gcc (mipsisa32-*-elf*, mipsisa32el-*-elf*)\n+\t(mipsisa32r2-*-elf*, mipsisa32r2el-*-elf*)\n+\t(mipsisa64-*-elf*, mipsisa64el-*-elf*): Combine top-level\n+\tstanzas.  Use the first part of the triplet to set MIPS_ISA_DEFAULT.\n+\tRemove redundant setting of MASK_FLOAT64 and MASK_64BIT for the\n+\t64-bit targets.  Add support for *-elfoabi*.\n+\t* config/mips/t-isa3264 (MULTILIB_OPTIONS, MULTILIB_DIRNAMES): Use\n+\tdifferent settings if $(tm_defines) does not select the EABI.\n+\t(MULTILIB_EXCLUSIONS): Define in those circumstances.\n+\t* config/mips/mips.h (MIPS_ISA_LEVEL_OPTION_SPEC): New macro.\n+\t(MIPS_ARCH_OPTION_SPEC): Likewise.\n+\t(MIPS_ISA_LEVEL_SPEC): Likewise.\n+\t(OPTION_DEFAULT_SPECS): Use MIPS_ARCH_OPTION_SPEC.\n+\t* config/mips/elfoabi.h: New file.\n+\n 2007-07-02  Richard Guenther  <rguenther@suse.de>\n \n \t* tree-flow.h (tree_ssa_useless_type_conversion_1): Rename to ..."}, {"sha": "d3358c3fad430ece1de87ece073a3ada42a08b0b", "filename": "gcc/config.gcc", "status": "modified", "additions": 26, "deletions": 15, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2c14f5d512a5a5e8a658030789dea947c42068e/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2c14f5d512a5a5e8a658030789dea947c42068e/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=e2c14f5d512a5a5e8a658030789dea947c42068e", "patch": "@@ -1673,24 +1673,35 @@ mips*-*-openbsd*)\n \t*)  tm_defines=\"${tm_defines} TARGET_ENDIAN_DEFAULT=MASK_BIG_ENDIAN\";;\n         esac\n \t;;\n-mipsisa32-*-elf* | mipsisa32el-*-elf*)\n-\ttm_file=\"elfos.h ${tm_file} mips/elf.h\"\n-\ttmake_file=mips/t-isa3264\n-\ttm_defines=\"${tm_defines} MIPS_ISA_DEFAULT=32 MIPS_ABI_DEFAULT=ABI_EABI\"\n-\tuse_fixproto=yes\n-\t;;\n-mipsisa32r2-*-elf* | mipsisa32r2el-*-elf*)\n-\ttm_file=\"elfos.h ${tm_file} mips/elf.h\"\n-\ttmake_file=mips/t-isa3264\n-\ttm_defines=\"${tm_defines} MIPS_ISA_DEFAULT=33 MIPS_ABI_DEFAULT=ABI_EABI\"\n-\tuse_fixproto=yes\n-\t;;\n+mipsisa32-*-elf* | mipsisa32el-*-elf* | \\\n+mipsisa32r2-*-elf* | mipsisa32r2el-*-elf* | \\\n mipsisa64-*-elf* | mipsisa64el-*-elf*)\n \ttm_file=\"elfos.h ${tm_file} mips/elf.h\"\n \ttmake_file=mips/t-isa3264\n-\ttarget_cpu_default=\"MASK_64BIT|MASK_FLOAT64\"\n-\ttm_defines=\"${tm_defines} MIPS_ISA_DEFAULT=64 MIPS_ABI_DEFAULT=ABI_EABI\"\n-\tuse_fixproto=yes\n+\tcase ${target} in\n+\t  mipsisa32r2*)\n+\t    tm_defines=\"${tm_defines} MIPS_ISA_DEFAULT=33\"\n+\t    ;;\n+\t  mipsisa32*)\n+\t    tm_defines=\"${tm_defines} MIPS_ISA_DEFAULT=32\"\n+\t    ;;\n+\t  mipsisa64*)\n+\t    tm_defines=\"${tm_defines} MIPS_ISA_DEFAULT=64\"\n+\t    ;;\n+\tesac\n+\tcase ${target} in\n+\t  mipsisa32*-*-elfoabi*)\n+\t    tm_defines=\"${tm_defines} MIPS_ABI_DEFAULT=ABI_32\"\n+\t    tm_file=\"${tm_file} mips/elfoabi.h\"\n+\t    ;;\n+\t  mipsisa64*-*-elfoabi*)\n+\t    tm_defines=\"${tm_defines} MIPS_ABI_DEFAULT=ABI_O64\"\n+\t    tm_file=\"${tm_file} mips/elfoabi.h\"\n+\t    ;;\n+\t  *-*-elf*)\n+\t    tm_defines=\"${tm_defines} MIPS_ABI_DEFAULT=ABI_EABI\"\n+\t    ;;\n+\tesac\n \t;;\n mipsisa64sr71k-*-elf*)\n         tm_file=\"elfos.h ${tm_file} mips/elf.h\""}, {"sha": "a6cffe101e788236212dd6030ff6b6aaed54542d", "filename": "gcc/config/mips/elfoabi.h", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2c14f5d512a5a5e8a658030789dea947c42068e/gcc%2Fconfig%2Fmips%2Felfoabi.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2c14f5d512a5a5e8a658030789dea947c42068e/gcc%2Fconfig%2Fmips%2Felfoabi.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Felfoabi.h?ref=e2c14f5d512a5a5e8a658030789dea947c42068e", "patch": "@@ -0,0 +1,41 @@\n+/* Target macros for mips*-elf targets that selected between o32 and o64\n+   based on the target architecture.\n+   Copyright (C) 1994, 1997, 1999, 2000, 2002, 2003, 2004\n+   Free Software Foundation, Inc.\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GCC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 51 Franklin Street, Fifth Floor,\n+Boston, MA 02110-1301, USA.  */\n+\n+#define DRIVER_SELF_SPECS\t\t\t\t\t\t\\\n+  /* Infer a -mips option from a -march option.  This makes\t\t\\\n+     -march pick the right multilib, and also makes the later\t\t\\\n+     specs easier to write.  */\t\t\t\t\t\t\\\n+  MIPS_ISA_LEVEL_SPEC,\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+  /* If no architecture option is specified, force the default to\t\\\n+     be listed explicitly.  This too makes later specs easier to\t\\\n+     write.  */\t\t\t\t\t\t\t       \t\\\n+  \"%{\" MIPS_ISA_LEVEL_OPTION_SPEC \":;: -\" MULTILIB_ISA_DEFAULT \"}\",\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+  /* If no ABI option is specified, infer one from the ISA level\t\\\n+     or -mgp setting.  */\t\t\t\t\t\t\\\n+  \"%{!mabi=*: %{mips1|mips2|mips32*|mgp32: -mabi=32;: -mabi=o64}}\",\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+  /* Remove a redundant -mfp64 for -mabi=o64; we want the !mfp64\t\\\n+     multilibs.  There's no need to check whether the architecture\t\\\n+     is 64-bit; cc1 will complain if it isn't.  */\t\t\t\\\n+  \"%{mabi=o64: %<mfp64}\""}, {"sha": "ffd913068770e519dc8fd73a1cc57c7d484a0d1b", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 24, "deletions": 1, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2c14f5d512a5a5e8a658030789dea947c42068e/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2c14f5d512a5a5e8a658030789dea947c42068e/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=e2c14f5d512a5a5e8a658030789dea947c42068e", "patch": "@@ -561,6 +561,29 @@ extern const struct mips_rtx_cost_data *mips_cost;\n #endif\n #endif\n \n+/* A spec condition that matches all non-mips16 -mips arguments.  */\n+\n+#define MIPS_ISA_LEVEL_OPTION_SPEC \\\n+  \"mips1|mips2|mips3|mips4|mips32*|mips64*\"\n+\n+/* A spec condition that matches all non-mips16 architecture arguments.  */\n+\n+#define MIPS_ARCH_OPTION_SPEC \\\n+  MIPS_ISA_LEVEL_OPTION_SPEC \"|march=*\"\n+\n+/* A spec that infers a -mips argument from an -march argument.  */\n+\n+#define MIPS_ISA_LEVEL_SPEC \\\n+  \"%{\" MIPS_ISA_LEVEL_OPTION_SPEC \":;: \\\n+     %{march=mips1|march=r2000|march=r3000|march=r3900:-mips1} \\\n+     %{march=mips2|march=r6000:-mips2} \\\n+     %{march=mips3|march=r4*|march=vr4*|march=orion:-mips3} \\\n+     %{march=mips4|march=r8000|march=vr5*|march=rm7000|march=rm9000:-mips4} \\\n+     %{march=mips32|march=4kc|march=4km|march=4kp:-mips32} \\\n+     %{march=mips32r2|march=m4k|march=4ke*|march=24k* \\\n+       |march=34k*|march=74k*: -mips32r2} \\\n+     %{march=mips64|march=5k*|march=20k*|march=sb1*|march=sr71000: -mips64}}\"\n+\n /* Support for a compile-time default CPU, et cetera.  The rules are:\n    --with-arch is ignored if -march is specified or a -mips is specified\n      (other than -mips16).\n@@ -571,7 +594,7 @@ extern const struct mips_rtx_cost_data *mips_cost;\n    --with-divide is ignored if -mdivide-traps or -mdivide-breaks are\n      specified. */\n #define OPTION_DEFAULT_SPECS \\\n-  {\"arch\", \"%{!march=*:%{mips16:-march=%(VALUE)}%{!mips*:-march=%(VALUE)}}\" }, \\\n+  {\"arch\", \"%{\" MIPS_ARCH_OPTION_SPEC \":;: -march=%(VALUE)}\" }, \\\n   {\"tune\", \"%{!mtune=*:-mtune=%(VALUE)}\" }, \\\n   {\"abi\", \"%{!mabi=*:-mabi=%(VALUE)}\" }, \\\n   {\"float\", \"%{!msoft-float:%{!mhard-float:-m%(VALUE)-float}}\" }, \\"}, {"sha": "fb5a55da8fb92593c3b02f4e7d8e8dc3994b0e0f", "filename": "gcc/config/mips/t-isa3264", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2c14f5d512a5a5e8a658030789dea947c42068e/gcc%2Fconfig%2Fmips%2Ft-isa3264", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2c14f5d512a5a5e8a658030789dea947c42068e/gcc%2Fconfig%2Fmips%2Ft-isa3264", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Ft-isa3264?ref=e2c14f5d512a5a5e8a658030789dea947c42068e", "patch": "@@ -36,8 +36,18 @@ TARGET_LIBGCC2_CFLAGS = -G 0\n \n # Build the libraries for both hard and soft floating point\n \n+ifneq ($(filter MIPS_ABI_DEFAULT=ABI_EABI,$(tm_defines)),)\n MULTILIB_OPTIONS = msoft-float EL/EB mips32/mips32r2/mips64\n MULTILIB_DIRNAMES = soft-float el eb mips32 mips32r2 mips64\n+else\n+MULTILIB_OPTIONS = msoft-float/mfp64 EL/EB mips32/mips32r2/mips64\n+MULTILIB_DIRNAMES = soft-float fp64 el eb mips32 mips32r2 mips64\n+ifneq ($(filter MIPS_ISA_DEFAULT=33,$(tm_defines)),)\n+MULTILIB_EXCLUSIONS = mips32/mfp64 mips64/mfp64\n+else\n+MULTILIB_EXCLUSIONS = !mips32r2/mfp64\n+endif\n+endif\n MULTILIB_MATCHES = EL=mel EB=meb\n EXTRA_MULTILIB_PARTS = crtbegin.o crtend.o crti.o crtn.o\n "}]}