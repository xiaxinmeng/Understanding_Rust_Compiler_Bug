{"sha": "7211a0975c25b21baa8e31ebc2946f4d6d136fed", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzIxMWEwOTc1YzI1YjIxYmFhOGUzMWViYzI5NDZmNGQ2ZDEzNmZlZA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-05-26T19:12:27Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-05-26T19:12:27Z"}, "message": "c-parser.c (c_parser_omp_clause_schedule): Warn if OMP_CLAUSE_SCHEDULE_CHUNK_EXPR is known not to be positive.\n\n\t* c-parser.c (c_parser_omp_clause_schedule): Warn if\n\tOMP_CLAUSE_SCHEDULE_CHUNK_EXPR is known not to be positive.\n\n\t* semantics.c (finish_omp_clauses) <case OMP_CLAUSE_SCHEDULE>: Warn\n\tif OMP_CLAUSE_SCHEDULE_CHUNK_EXPR is known not to be positive.\n\n\t* openmp.c (resolve_omp_clauses): Warn if chunk_size is known not to\n\tbe positive.\n\n\t* c-c++-common/gomp/schedule-1.c: New test.\n\t* gfortran.dg/gomp/schedule-1.f90: New test.\n\n\t* testsuite/libgomp.c/doacross-1.c (main): Use schedule(static)\n\tinstead of invalid schedule(static, 0).\n\t* testsuite/libgomp.c/doacross-2.c (main): Likewise.\n\nFrom-SVN: r236793", "tree": {"sha": "7776f4844e8b9eae6129a9d2d8616ce108d89a5b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7776f4844e8b9eae6129a9d2d8616ce108d89a5b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7211a0975c25b21baa8e31ebc2946f4d6d136fed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7211a0975c25b21baa8e31ebc2946f4d6d136fed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7211a0975c25b21baa8e31ebc2946f4d6d136fed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7211a0975c25b21baa8e31ebc2946f4d6d136fed/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cac177cfad2b48c29870caeb0af51d7cee645fae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cac177cfad2b48c29870caeb0af51d7cee645fae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cac177cfad2b48c29870caeb0af51d7cee645fae"}], "stats": {"total": 88, "additions": 84, "deletions": 4}, "files": [{"sha": "f7d1a6d582ec12cbe9208d9b934e18acd0e1f364", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7211a0975c25b21baa8e31ebc2946f4d6d136fed/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7211a0975c25b21baa8e31ebc2946f4d6d136fed/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=7211a0975c25b21baa8e31ebc2946f4d6d136fed", "patch": "@@ -1,3 +1,8 @@\n+2016-05-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* c-parser.c (c_parser_omp_clause_schedule): Warn if\n+\tOMP_CLAUSE_SCHEDULE_CHUNK_EXPR is known not to be positive.\n+\n 2016-05-25  Marek Polacek  <polacek@redhat.com>\n \n \tPR c/71265"}, {"sha": "fda2df8e44e3950286718209f158911014c151ca", "filename": "gcc/c/c-parser.c", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7211a0975c25b21baa8e31ebc2946f4d6d136fed/gcc%2Fc%2Fc-parser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7211a0975c25b21baa8e31ebc2946f4d6d136fed/gcc%2Fc%2Fc-parser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-parser.c?ref=7211a0975c25b21baa8e31ebc2946f4d6d136fed", "patch": "@@ -12128,7 +12128,20 @@ c_parser_omp_clause_schedule (c_parser *parser, tree list)\n \t\t  \"schedule %<auto%> does not take \"\n \t\t  \"a %<chunk_size%> parameter\");\n       else if (TREE_CODE (TREE_TYPE (t)) == INTEGER_TYPE)\n-\tOMP_CLAUSE_SCHEDULE_CHUNK_EXPR (c) = t;\n+\t{\n+\t  /* Attempt to statically determine when the number isn't\n+\t     positive.  */\n+\t  tree s = fold_build2_loc (loc, LE_EXPR, boolean_type_node, t,\n+\t\t\t\t    build_int_cst (TREE_TYPE (t), 0));\n+\t  protected_set_expr_location (s, loc);\n+\t  if (s == boolean_true_node)\n+\t    {\n+\t      warning_at (loc, 0,\n+\t\t\t  \"chunk size value must be positive\");\n+\t      t = integer_one_node;\n+\t    }\n+\t  OMP_CLAUSE_SCHEDULE_CHUNK_EXPR (c) = t;\n+\t}\n       else\n \tc_parser_error (parser, \"expected integer expression\");\n "}, {"sha": "770f817eecafa50b60db33e7366bfe63bd74be32", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7211a0975c25b21baa8e31ebc2946f4d6d136fed/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7211a0975c25b21baa8e31ebc2946f4d6d136fed/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=7211a0975c25b21baa8e31ebc2946f4d6d136fed", "patch": "@@ -1,3 +1,8 @@\n+2016-05-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* semantics.c (finish_omp_clauses) <case OMP_CLAUSE_SCHEDULE>: Warn\n+\tif OMP_CLAUSE_SCHEDULE_CHUNK_EXPR is known not to be positive.\n+\n 2016-05-26  Patrick Palka  <ppalka@gcc.gnu.org>\n \n \tPR c++/70822"}, {"sha": "253d31a4f4a7251a6b0f705f272fc2c17efa0910", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7211a0975c25b21baa8e31ebc2946f4d6d136fed/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7211a0975c25b21baa8e31ebc2946f4d6d136fed/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=7211a0975c25b21baa8e31ebc2946f4d6d136fed", "patch": "@@ -6319,6 +6319,17 @@ finish_omp_clauses (tree clauses, enum c_omp_region_type ort)\n \t\t\t  break;\n \t\t\t}\n \t\t    }\n+\t\t  else\n+\t\t    {\n+\t\t      t = maybe_constant_value (t);\n+\t\t      if (TREE_CODE (t) == INTEGER_CST\n+\t\t\t  && tree_int_cst_sgn (t) != 1)\n+\t\t\t{\n+\t\t\t  warning_at (OMP_CLAUSE_LOCATION (c), 0,\n+\t\t\t\t      \"chunk size value must be positive\");\n+\t\t\t  t = integer_one_node;\n+\t\t\t}\n+\t\t    }\n \t\t  t = fold_build_cleanup_point_expr (TREE_TYPE (t), t);\n \t\t}\n \t      OMP_CLAUSE_SCHEDULE_CHUNK_EXPR (c) = t;"}, {"sha": "73235c6d31cd80e7a1d0ceaab183d7484df92f15", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7211a0975c25b21baa8e31ebc2946f4d6d136fed/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7211a0975c25b21baa8e31ebc2946f4d6d136fed/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=7211a0975c25b21baa8e31ebc2946f4d6d136fed", "patch": "@@ -1,3 +1,8 @@\n+2016-05-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* openmp.c (resolve_omp_clauses): Warn if chunk_size is known not to\n+\tbe positive.\n+\n 2016-05-23  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR fortran/66461"}, {"sha": "2689d302c77dc75ff6ee29d831c91f831500395b", "filename": "gcc/fortran/openmp.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7211a0975c25b21baa8e31ebc2946f4d6d136fed/gcc%2Ffortran%2Fopenmp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7211a0975c25b21baa8e31ebc2946f4d6d136fed/gcc%2Ffortran%2Fopenmp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fopenmp.c?ref=7211a0975c25b21baa8e31ebc2946f4d6d136fed", "patch": "@@ -3259,6 +3259,11 @@ resolve_omp_clauses (gfc_code *code, gfc_omp_clauses *omp_clauses,\n \t  || expr->ts.type != BT_INTEGER || expr->rank != 0)\n \tgfc_error (\"SCHEDULE clause's chunk_size at %L requires \"\n \t\t   \"a scalar INTEGER expression\", &expr->where);\n+      else if (expr->expr_type == EXPR_CONSTANT\n+\t       && expr->ts.type == BT_INTEGER\n+\t       && mpz_sgn (expr->value.integer) <= 0)\n+\tgfc_warning (0, \"INTEGER expression of SCHEDULE clause's chunk_size \"\n+\t\t     \"at %L must be positive\", &expr->where);\n     }\n \n   /* Check that no symbol appears on multiple clauses, except that"}, {"sha": "f2a7a56bf052b1bbdc1069d734ca3ab9a0e15791", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7211a0975c25b21baa8e31ebc2946f4d6d136fed/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7211a0975c25b21baa8e31ebc2946f4d6d136fed/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7211a0975c25b21baa8e31ebc2946f4d6d136fed", "patch": "@@ -1,3 +1,8 @@\n+2016-05-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* c-c++-common/gomp/schedule-1.c: New test.\n+\t* gfortran.dg/gomp/schedule-1.f90: New test.\n+\n 2016-05-26  Patrick Palka  <ppalka@gcc.gnu.org>\n \n \tPR c++/70822"}, {"sha": "8700ff6772e92cb437872ba58422cef4aab603a6", "filename": "gcc/testsuite/c-c++-common/gomp/schedule-1.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7211a0975c25b21baa8e31ebc2946f4d6d136fed/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fschedule-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7211a0975c25b21baa8e31ebc2946f4d6d136fed/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fschedule-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fschedule-1.c?ref=7211a0975c25b21baa8e31ebc2946f4d6d136fed", "patch": "@@ -0,0 +1,14 @@\n+void\n+foo (void)\n+{\n+  int i;\n+  #pragma omp for schedule(static, 1)\n+  for (i = 0; i < 10; i++)\n+    ;\n+  #pragma omp for schedule(static, 0)\t\t/* { dg-warning \"chunk size value must be positive\" } */\n+  for (i = 0; i < 10; i++)\n+    ;\n+  #pragma omp for schedule(static, -7)\t\t/* { dg-warning \"chunk size value must be positive\" } */\n+  for (i = 0; i < 10; i++)\n+    ;\n+}"}, {"sha": "3d64294282b06f0978a46bc58392d5e6bd873170", "filename": "gcc/testsuite/gfortran.dg/gomp/schedule-1.f90", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7211a0975c25b21baa8e31ebc2946f4d6d136fed/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fschedule-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7211a0975c25b21baa8e31ebc2946f4d6d136fed/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fschedule-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fschedule-1.f90?ref=7211a0975c25b21baa8e31ebc2946f4d6d136fed", "patch": "@@ -0,0 +1,11 @@\n+  integer :: i\n+  !$omp do schedule(static, 1)\n+  do i = 1, 10\n+  end do\n+  !$omp do schedule(static, 0)\t! { dg-warning \"must be positive\" }\n+  do i = 1, 10\n+  end do\n+  !$omp do schedule(static, -7)\t! { dg-warning \"must be positive\" }\n+  do i = 1, 10\n+  end do\n+end"}, {"sha": "9dcdda83b5d6e586c8cf9bc34fbc42d8f0251a8a", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7211a0975c25b21baa8e31ebc2946f4d6d136fed/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7211a0975c25b21baa8e31ebc2946f4d6d136fed/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=7211a0975c25b21baa8e31ebc2946f4d6d136fed", "patch": "@@ -1,3 +1,9 @@\n+2016-05-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* testsuite/libgomp.c/doacross-1.c (main): Use schedule(static)\n+\tinstead of invalid schedule(static, 0).\n+\t* testsuite/libgomp.c/doacross-2.c (main): Likewise.\n+\n 2016-05-26  Chung-Lin Tang  <cltang@codesourcery.com>\n \n \t* oacc-plugin.h (GOMP_PLUGIN_async_unmap_vars): Add int parameter."}, {"sha": "d27fc00b24bedbaf84975b92783e97441b0d58ca", "filename": "libgomp/testsuite/libgomp.c/doacross-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7211a0975c25b21baa8e31ebc2946f4d6d136fed/libgomp%2Ftestsuite%2Flibgomp.c%2Fdoacross-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7211a0975c25b21baa8e31ebc2946f4d6d136fed/libgomp%2Ftestsuite%2Flibgomp.c%2Fdoacross-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c%2Fdoacross-1.c?ref=7211a0975c25b21baa8e31ebc2946f4d6d136fed", "patch": "@@ -36,7 +36,7 @@ main ()\n \t#pragma omp atomic write\n \ta[i] = 3;\n       }\n-    #pragma omp for schedule(static, 0) ordered (3) nowait\n+    #pragma omp for schedule(static) ordered (3) nowait\n     for (i = 2; i < N / 16 - 1; i++)\n       for (j = 0; j < 8; j += 2)\n \tfor (k = 1; k <= 3; k++)"}, {"sha": "e147b741a7c4efb4854c580a7318c2b79ad52d82", "filename": "libgomp/testsuite/libgomp.c/doacross-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7211a0975c25b21baa8e31ebc2946f4d6d136fed/libgomp%2Ftestsuite%2Flibgomp.c%2Fdoacross-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7211a0975c25b21baa8e31ebc2946f4d6d136fed/libgomp%2Ftestsuite%2Flibgomp.c%2Fdoacross-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c%2Fdoacross-2.c?ref=7211a0975c25b21baa8e31ebc2946f4d6d136fed", "patch": "@@ -38,7 +38,7 @@ main ()\n \t#pragma omp atomic write\n \ta[i] = 3;\n       }\n-    #pragma omp for schedule(static, 0) ordered (3) nowait\n+    #pragma omp for schedule(static) ordered (3) nowait\n     for (i = 3; i < N / 16 - 1 + f; i++)\n       for (j = 0; j < 8; j += 2)\n \tfor (k = 1; k <= 3; k++)\n@@ -120,7 +120,7 @@ main ()\n \t      #pragma omp atomic write\n \t      c[i][j][k] = 3;\n \t    }\n-    #pragma omp for schedule(static, 0) ordered (3) nowait\n+    #pragma omp for schedule(static) ordered (3) nowait\n     for (j = 0; j < N / 16 - 1; j++)\n       for (k = 0; k < 8; k += 2)\n \tfor (i = 3; i <= 5 + f; i++)"}]}