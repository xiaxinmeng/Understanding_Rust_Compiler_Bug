{"sha": "3d55c64b495dd49e7b91b451837d93a380764af2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2Q1NWM2NGI0OTVkZDQ5ZTdiOTFiNDUxODM3ZDkzYTM4MDc2NGFmMg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2007-01-24T20:53:08Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2007-01-24T20:53:08Z"}, "message": "re PR middle-end/30421 (incorrect warning when using firstprivate and lastprivate clauses)\n\n\tPR middle-end/30421\n\t* omp-low.c (lower_omp_for_lastprivate): Add dlist argument.\n\tIf lower_lastprivate_clauses emits some statements, append them\n\tto dlist rather than body_p and to body_p append an initializer.\n\t(lower_omp_for): Adjust caller.\n\n\t* gcc.dg/gomp/pr30421.c: New test.\n\nFrom-SVN: r121131", "tree": {"sha": "07cb9a206541bde42c9c6be7832b934cf29ebd3b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/07cb9a206541bde42c9c6be7832b934cf29ebd3b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3d55c64b495dd49e7b91b451837d93a380764af2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d55c64b495dd49e7b91b451837d93a380764af2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d55c64b495dd49e7b91b451837d93a380764af2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d55c64b495dd49e7b91b451837d93a380764af2/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "62df28055046ccd89dfbe6421baf0f5ebe08e7df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62df28055046ccd89dfbe6421baf0f5ebe08e7df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62df28055046ccd89dfbe6421baf0f5ebe08e7df"}], "stats": {"total": 83, "additions": 77, "deletions": 6}, "files": [{"sha": "252b4192e3d70b1134d819aa7d744a508444d1ba", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d55c64b495dd49e7b91b451837d93a380764af2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d55c64b495dd49e7b91b451837d93a380764af2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3d55c64b495dd49e7b91b451837d93a380764af2", "patch": "@@ -1,3 +1,11 @@\n+2007-01-24  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/30421\n+\t* omp-low.c (lower_omp_for_lastprivate): Add dlist argument.\n+\tIf lower_lastprivate_clauses emits some statements, append them\n+\tto dlist rather than body_p and to body_p append an initializer.\n+\t(lower_omp_for): Adjust caller.\n+\n 2007-01-24  Steve Ellcey  <sje@cup.hp.com>\n \n \t* target.h (globalize_decl_name): New."}, {"sha": "e5a320db09d3a8fb6d6168cc9792d36321ed509e", "filename": "gcc/omp-low.c", "status": "modified", "additions": 25, "deletions": 6, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d55c64b495dd49e7b91b451837d93a380764af2/gcc%2Fomp-low.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d55c64b495dd49e7b91b451837d93a380764af2/gcc%2Fomp-low.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-low.c?ref=3d55c64b495dd49e7b91b451837d93a380764af2", "patch": "@@ -1601,7 +1601,7 @@ omp_reduction_init (tree clause, tree type)\n \n static void\n lower_rec_input_clauses (tree clauses, tree *ilist, tree *dlist,\n-\t\t\t  omp_context *ctx)\n+\t\t\t omp_context *ctx)\n {\n   tree_stmt_iterator diter;\n   tree c, dtor, copyin_seq, x, args, ptr;\n@@ -3986,13 +3986,14 @@ lower_omp_critical (tree *stmt_p, omp_context *ctx)\n /* A subroutine of lower_omp_for.  Generate code to emit the predicate\n    for a lastprivate clause.  Given a loop control predicate of (V\n    cond N2), we gate the clause on (!(V cond N2)).  The lowered form\n-   is appended to *BODY_P.  */\n+   is appended to *DLIST, iterator initialization is appended to\n+   *BODY_P.  */\n \n static void\n lower_omp_for_lastprivate (struct omp_for_data *fd, tree *body_p,\n-\t\t\t   struct omp_context *ctx)\n+\t\t\t   tree *dlist, struct omp_context *ctx)\n {\n-  tree clauses, cond;\n+  tree clauses, cond, stmts, vinit, t;\n   enum tree_code cond_code;\n   \n   cond_code = fd->cond_code;\n@@ -4010,7 +4011,24 @@ lower_omp_for_lastprivate (struct omp_for_data *fd, tree *body_p,\n   cond = build2 (cond_code, boolean_type_node, fd->v, fd->n2);\n \n   clauses = OMP_FOR_CLAUSES (fd->for_stmt);\n-  lower_lastprivate_clauses (clauses, cond, body_p, ctx);\n+  stmts = NULL;\n+  lower_lastprivate_clauses (clauses, cond, &stmts, ctx);\n+  if (stmts != NULL)\n+    {\n+      append_to_statement_list (stmts, dlist);\n+\n+      /* Optimize: v = 0; is usually cheaper than v = some_other_constant.  */\n+      vinit = fd->n1;\n+      if (cond_code == EQ_EXPR\n+\t  && host_integerp (fd->n2, 0)\n+\t  && ! integer_zerop (fd->n2))\n+\tvinit = build_int_cst (TREE_TYPE (fd->v), 0);\n+\n+      /* Initialize the iterator variable, so that threads that don't execute\n+\t any iterations don't execute the lastprivate clauses by accident.  */\n+      t = build2 (GIMPLE_MODIFY_STMT, void_type_node, fd->v, vinit);\n+      gimplify_and_add (t, body_p);\n+    }\n }\n \n \n@@ -4066,6 +4084,8 @@ lower_omp_for (tree *stmt_p, omp_context *ctx)\n   /* Once lowered, extract the bounds and clauses.  */\n   extract_omp_for_data (stmt, &fd);\n \n+  lower_omp_for_lastprivate (&fd, body_p, &dlist, ctx);\n+\n   append_to_statement_list (stmt, body_p);\n \n   append_to_statement_list (OMP_FOR_BODY (stmt), body_p);\n@@ -4074,7 +4094,6 @@ lower_omp_for (tree *stmt_p, omp_context *ctx)\n   append_to_statement_list (t, body_p);\n \n   /* After the loop, add exit clauses.  */\n-  lower_omp_for_lastprivate (&fd, &dlist, ctx);\n   lower_reduction_clauses (OMP_FOR_CLAUSES (stmt), body_p, ctx);\n   append_to_statement_list (dlist, body_p);\n "}, {"sha": "2d9fc84346cae633d2de869b5e309a1afca7f9bf", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d55c64b495dd49e7b91b451837d93a380764af2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d55c64b495dd49e7b91b451837d93a380764af2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3d55c64b495dd49e7b91b451837d93a380764af2", "patch": "@@ -1,3 +1,8 @@\n+2007-01-24  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/30421\n+\t* gcc.dg/gomp/pr30421.c: New test.\n+\n 2007-01-24  Steve Ellcey  <sje@cup.hp.com>\n \n \t* gcc.target/ia64/versionid-1.c: New test."}, {"sha": "901ba3c13a36552d20812ea53d37fdca7f5f3036", "filename": "gcc/testsuite/gcc.dg/gomp/pr30421.c", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d55c64b495dd49e7b91b451837d93a380764af2/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fpr30421.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d55c64b495dd49e7b91b451837d93a380764af2/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fpr30421.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fpr30421.c?ref=3d55c64b495dd49e7b91b451837d93a380764af2", "patch": "@@ -0,0 +1,39 @@\n+/* PR middle-end/30421 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fopenmp -Wall\" } */\n+\n+int\n+foo ()\n+{\n+  int a = 0, i;\n+\n+#pragma omp parallel for firstprivate(a) lastprivate(a)\n+  for (i = 0; i < 10; i++)\n+    a += i;\n+\n+  return a;\n+}\n+\n+int\n+bar ()\n+{\n+  int a = 0, i;\n+\n+#pragma omp parallel for firstprivate(a) lastprivate(a) schedule(static, 2)\n+  for (i = 0; i < 10; i++)\n+    a += i;\n+\n+  return a;\n+}\n+\n+int\n+baz ()\n+{\n+  int a = 0, i;\n+\n+#pragma omp parallel for firstprivate(a) lastprivate(a) schedule(dynamic)\n+  for (i = 0; i < 10; i++)\n+    a += i;\n+\n+  return a;\n+}"}]}