{"sha": "7600f0944bacf83072ecd8e275f83e8c06ccf980", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzYwMGYwOTQ0YmFjZjgzMDcyZWNkOGUyNzVmODNlOGMwNmNjZjk4MA==", "commit": {"author": {"name": "Andrew Pinski", "email": "pinskia@physics.uc.edu", "date": "2004-05-07T14:17:33Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2004-05-07T14:17:33Z"}, "message": "loop-doloop.c (doloop_valid_p): Make sure that body gets freed.\n\n2004-05-07  Andrew Pinski  <pinskia@physics.uc.edu>\n\n        * loop-doloop.c (doloop_valid_p): Make sure that body\n        gets freed.\n\nFrom-SVN: r81619", "tree": {"sha": "4cc983a57f864d7e4239d0a5eaa6a59bf033f11a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4cc983a57f864d7e4239d0a5eaa6a59bf033f11a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7600f0944bacf83072ecd8e275f83e8c06ccf980", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7600f0944bacf83072ecd8e275f83e8c06ccf980", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7600f0944bacf83072ecd8e275f83e8c06ccf980", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7600f0944bacf83072ecd8e275f83e8c06ccf980/comments", "author": null, "committer": null, "parents": [{"sha": "bfb23806b83c3bc24f9ed6232974d783c00a2ebd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bfb23806b83c3bc24f9ed6232974d783c00a2ebd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bfb23806b83c3bc24f9ed6232974d783c00a2ebd"}], "stats": {"total": 20, "additions": 16, "deletions": 4}, "files": [{"sha": "a4632360b52c570268f60e2d9489b4aff1f3be9a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7600f0944bacf83072ecd8e275f83e8c06ccf980/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7600f0944bacf83072ecd8e275f83e8c06ccf980/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7600f0944bacf83072ecd8e275f83e8c06ccf980", "patch": "@@ -1,3 +1,8 @@\n+2004-05-07  Andrew Pinski  <pinskia@physics.uc.edu>\n+\n+\t* loop-doloop.c (doloop_valid_p): Make sure that body\n+\tgets freed.\n+\n 2004-05-07  Eric Botcazou  <ebotcazou@act-europe.fr>\n \n \t* config/sparc/sparc-protos.h (sparc_skip_caller_unimp): New"}, {"sha": "d8d3edf500e844c784c89d5940210f5bead14d26", "filename": "gcc/loop-doloop.c", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7600f0944bacf83072ecd8e275f83e8c06ccf980/gcc%2Floop-doloop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7600f0944bacf83072ecd8e275f83e8c06ccf980/gcc%2Floop-doloop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop-doloop.c?ref=7600f0944bacf83072ecd8e275f83e8c06ccf980", "patch": "@@ -144,6 +144,7 @@ doloop_valid_p (struct loop *loop, struct niter_desc *desc)\n   basic_block *body = get_loop_body (loop), bb;\n   rtx insn;\n   unsigned i;\n+  bool result = true;\n \n   /* Check for loops that may not terminate under special conditions.  */\n   if (!desc->simple_p\n@@ -174,7 +175,8 @@ doloop_valid_p (struct loop *loop, struct niter_desc *desc)\n \t enable count-register loops in this case.  */\n       if (dump_file)\n \tfprintf (dump_file, \"Doloop: Possible infinite iteration case.\\n\");\n-      return false;\n+      result = false;\n+      goto cleanup;\n     }\n \n   for (i = 0; i < loop->num_nodes; i++)\n@@ -191,7 +193,8 @@ doloop_valid_p (struct loop *loop, struct niter_desc *desc)\n \t    {\n \t      if (dump_file)\n \t\tfprintf (dump_file, \"Doloop: Function call in loop.\\n\");\n-\t      return false;\n+\t      result = false;\n+\t      goto cleanup;\n \t    }\n \n \t  /* Some targets (eg, PPC) use the count register for branch on table\n@@ -202,13 +205,17 @@ doloop_valid_p (struct loop *loop, struct niter_desc *desc)\n \t    {\n \t      if (dump_file)\n \t\tfprintf (dump_file, \"Doloop: Computed branch in the loop.\\n\");\n-\t      return false;\n+\t      result = false;\n+\t      goto cleanup;\n \t    }\n \t}\n     }\n+  result = true;\n+\n+cleanup:\n   free (body);\n \n-  return true;\n+  return result;\n }\n \n /* Adds test of COND jumping to DEST to the end of BB.  */"}]}