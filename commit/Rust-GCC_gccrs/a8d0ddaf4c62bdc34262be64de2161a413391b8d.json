{"sha": "a8d0ddaf4c62bdc34262be64de2161a413391b8d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YThkMGRkYWY0YzYyYmRjMzQyNjJiZTY0ZGUyMTYxYTQxMzM5MWI4ZA==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2003-02-21T18:06:30Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2003-02-21T18:06:30Z"}, "message": "cpphash.h (struct lexer_state): Add directive_wants_padding.\n\n\t* cpphash.h (struct lexer_state): Add directive_wants_padding.\n\t* cpplib.c (_cpp_handle_directive): Set directive_wants_padding\n\tfor directives of type INCL.\n\t(glue_header_name, parse_include): Use get_token_no_padding.\n\t* cppmacro.c (replace_args): If directive_wants_padding,\n\tprovide padding tokens.\n\n\t* testsuite/gcc.dg/cpp/include3.c: New test.\n\t* testsuite/gcc.dg/cpp/inc/foo.h: New file.\n\nFrom-SVN: r63231", "tree": {"sha": "4fb088465e0f2697e44b72ef804c30281053c4db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4fb088465e0f2697e44b72ef804c30281053c4db"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a8d0ddaf4c62bdc34262be64de2161a413391b8d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8d0ddaf4c62bdc34262be64de2161a413391b8d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a8d0ddaf4c62bdc34262be64de2161a413391b8d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8d0ddaf4c62bdc34262be64de2161a413391b8d/comments", "author": null, "committer": null, "parents": [{"sha": "3a3f137e0de6ea3acab06f1b4b16ada378caec2b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a3f137e0de6ea3acab06f1b4b16ada378caec2b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a3f137e0de6ea3acab06f1b4b16ada378caec2b"}], "stats": {"total": 138, "additions": 83, "deletions": 55}, "files": [{"sha": "602905a9c6d9b0fd9e7803bac3bcad02ee851f56", "filename": "gcc/ChangeLog", "status": "modified", "additions": 38, "deletions": 29, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8d0ddaf4c62bdc34262be64de2161a413391b8d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8d0ddaf4c62bdc34262be64de2161a413391b8d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a8d0ddaf4c62bdc34262be64de2161a413391b8d", "patch": "@@ -1,3 +1,12 @@\n+2003-02-21  Zack Weinberg  <zack@codesourcery.com>\n+\n+\t* cpphash.h (struct lexer_state): Add directive_wants_padding.\n+\t* cpplib.c (_cpp_handle_directive): Set directive_wants_padding\n+\tfor directives of type INCL.\n+\t(glue_header_name, parse_include): Use get_token_no_padding.\n+\t* cppmacro.c (replace_args): If directive_wants_padding,\n+\tprovide padding tokens.\n+\n 2003-02-21  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* config/h8300/h8300.md (a peephole2): New.\n@@ -227,8 +236,8 @@ Thu Feb 20 21:41:19 CET 2003  Jan Hubicka  <jh@suse.cz>\n \n 2003-02-20  David Edelsohn  <edelsohn@gnu.org>\n \n-        * config/rs6000/sysv4.h (ASM_OUTPUT_MAX_SKIP_ALIGN): Define.\n-        * config/rs6000/power4.md (power4-store,power4-vecstore): New\n+\t* config/rs6000/sysv4.h (ASM_OUTPUT_MAX_SKIP_ALIGN): Define.\n+\t* config/rs6000/power4.md (power4-store,power4-vecstore): New\n \tinsn reservations.\n \t(power4-fpstore): Compact.\n \n@@ -309,7 +318,7 @@ Wed Feb 19 19:00:24 CET 2003  Jan Hubicka  <jh@suse.cz>\n \n \t* fixinc/inclhack.def (irix_wcsftime): Use XPG5 variant for C99.\n \t* fixinc/tests/base/internal/wchar_core.h: New file.\n-\t\n+\n \t* fixinc/inclhack.def (irix_socklen_t): Fix broken IRIX 6.5.1[78]\n \tsocklen_t definition.\n \t* fixinc/fixincl.x: Regenerate.\n@@ -366,7 +375,7 @@ Tue Feb 18 23:50:59 CET 2003  Jan Hubicka  <jh@suse.cz>\n 2003-02-18  Matt Austern <austern@apple.com>\n \n \t* toplev.c, langhooks.c, langhooks-def.h: Move\n-\twrite_global_declarations from toplev.c to langhooks.c. \n+\twrite_global_declarations from toplev.c to langhooks.c.\n \n 2003-02-18  Kazu Hirata  <kazu@cs.umass.edu>\n \n@@ -381,34 +390,34 @@ Tue Feb 18 23:50:59 CET 2003  Jan Hubicka  <jh@suse.cz>\n \n 2003-02-18  Kaz Kojima  <kkojima@gcc.gnu.org>\n \n-        * config/sh/sh.c (unspec_caller_rtx_p): New.\n+\t* config/sh/sh.c (unspec_caller_rtx_p): New.\n \t(sh_cannot_copy_insn_p): New.\n-        (TARGET_CANNOT_COPY_INSN_P): New.\n+\t(TARGET_CANNOT_COPY_INSN_P): New.\n \n 2003-02-18  Richard Henderson  <rth@redhat.com>\n \n \t* c-common.c (handle_used_attribute): Accept static data too.\n \n 2003-02-18  Nick Clifton  <nickc@redhat.com>\n-            Aldy Hernandez  <aldyh@redhat.com>\n+\t    Aldy Hernandez  <aldyh@redhat.com>\n \n-        * testsuite/gcc.dg/20030218-1.c: New.\n+\t* testsuite/gcc.dg/20030218-1.c: New.\n \n-        * doc/tm.texi: Document TARGET_VECTOR_TYPES_COMPATIBLE.\n+\t* doc/tm.texi: Document TARGET_VECTOR_TYPES_COMPATIBLE.\n \n-        * target-def.h (TARGET_INITIALIZER): Add\n-        TARGET_VECTOR_TYPES_COMPATIBLE.\n-        (TARGET_VECTOR_TYPES_COMPATIBLE): New macro.\n+\t* target-def.h (TARGET_INITIALIZER): Add\n+\tTARGET_VECTOR_TYPES_COMPATIBLE.\n+\t(TARGET_VECTOR_TYPES_COMPATIBLE): New macro.\n \n-        * target.h (struct gcc_target): Add field vector_types_compatible.\n+\t* target.h (struct gcc_target): Add field vector_types_compatible.\n \n-        * c-typeck.c (comptypes): Take into account\n-        TARGET_VECTOR_TYPES_COMPATIBLE.\n-        (convert_for_assignment): Same.\n+\t* c-typeck.c (comptypes): Take into account\n+\tTARGET_VECTOR_TYPES_COMPATIBLE.\n+\t(convert_for_assignment): Same.\n \n-        * config/rs6000/rs6000.c (is_ev64_opaque_type): New.\n-        (rs6000_spe_vector_types_compatible): New.\n-        (TARGET_VECTOR_TYPES_COMPATIBLE): Define.\n+\t* config/rs6000/rs6000.c (is_ev64_opaque_type): New.\n+\t(rs6000_spe_vector_types_compatible): New.\n+\t(TARGET_VECTOR_TYPES_COMPATIBLE): Define.\n \n 2003-02-19  Andreas Schwab  <schwab@suse.de>\n \n@@ -462,15 +471,15 @@ Tue Feb 18 20:15:54 2003  J\"orn Rennecke <joern.rennecke@superh.com>\n \t(*extendhisi2_h8300): Likewise.\n \n 2003-02-18  Matt Austern <austern@apple.com>\n-\t\n+\n \t* langhooks.h, langhooks-def.h: introduce new langhook,\n \tfinal_write_globals, with write_global_declarations as default.\n \t* toplev.c: Move invocation of wrapup_global_declarations from\n \tcompile_file to new function, write_global_declarations.  Change\n \tcompile_file to use final_write_globals hook.  Change\n \twrapup_global_declarations so writing to DECL_DEFER_OUTPUT is\n-\tconditional. \n-\t\n+\tconditional.\n+\n 2003-02-18  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n \n \t* pa.md: Correct and enhance comment.\n@@ -488,9 +497,9 @@ Tue Feb 18 20:15:54 2003  J\"orn Rennecke <joern.rennecke@superh.com>\n \n 2003-02-17  Aldy Hernandez  <aldyh@redhat.com>\n \n-        * config/rs6000/spe.h (__ev_stdd): Cast 2nd arg.\n-        (__ev_stdw): Same.\n-        (__ev_stdh): Same.\n+\t* config/rs6000/spe.h (__ev_stdd): Cast 2nd arg.\n+\t(__ev_stdw): Same.\n+\t(__ev_stdh): Same.\n \n Mon Feb 17 16:16:54 CET 2003  Jan Hubicka  <jh@suse.cz>\n \n@@ -626,7 +635,7 @@ Sun Feb 16 23:07:52 CET 2003  Jan Hubicka  <jh@suse.cz>\n \t* function.h (struct function): Add computed_goto_common_label,\n \tcomputed_goto_common_reg.\n \t* function.c (free_after_compilation): Zap them.\n-\t* stmt.c (expand_computed_goto): Use them to produce one \n+\t* stmt.c (expand_computed_goto): Use them to produce one\n \tindirect branch per function.\n \n 2003-02-15  Richard Henderson  <rth@redhat.com>\n@@ -640,8 +649,8 @@ Sun Feb 16 23:07:52 CET 2003  Jan Hubicka  <jh@suse.cz>\n \n 2003-02-15  Richard Henderson  <rth@redhat.com>\n \n-        * recog.c (split_all_insns): Include new blocks in life update;\n-        do a global life update.\n+\t* recog.c (split_all_insns): Include new blocks in life update;\n+\tdo a global life update.\n \n 2003-02-15  Danny Smith  <dannysmith@users.sourceforge.net>\n \n@@ -680,7 +689,7 @@ Sun Feb 16 23:07:52 CET 2003  Jan Hubicka  <jh@suse.cz>\n \n 2003-02-13  Adam Nemet  <anemet@lnxw.com>\n \n-\tPR opt/2391 \n+\tPR opt/2391\n \t* combine.c: Fix spelling in comment.\n \t(cached_nonzero_bits): New function.\n \t(cached_num_sign_bit_copies): New function."}, {"sha": "9aff511678c04e85bc58e0adf534411ff4c17fb6", "filename": "gcc/cpphash.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8d0ddaf4c62bdc34262be64de2161a413391b8d/gcc%2Fcpphash.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8d0ddaf4c62bdc34262be64de2161a413391b8d/gcc%2Fcpphash.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpphash.h?ref=a8d0ddaf4c62bdc34262be64de2161a413391b8d", "patch": "@@ -214,6 +214,11 @@ struct lexer_state\n   /* Nonzero if first token on line is CPP_HASH.  */\n   unsigned char in_directive;\n \n+  /* Nonzero if in a directive that will handle padding tokens itself.\n+     #include needs this to avoid problems with computed include and\n+     spacing between tokens.  */\n+  unsigned char directive_wants_padding;\n+\n   /* True if we are skipping a failed conditional group.  */\n   unsigned char skipping;\n "}, {"sha": "ed2bc95875157073df16dc61a68a77dc500aa301", "filename": "gcc/cpplib.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8d0ddaf4c62bdc34262be64de2161a413391b8d/gcc%2Fcpplib.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8d0ddaf4c62bdc34262be64de2161a413391b8d/gcc%2Fcpplib.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpplib.c?ref=a8d0ddaf4c62bdc34262be64de2161a413391b8d", "patch": "@@ -414,6 +414,7 @@ _cpp_handle_directive (pfile, indented)\n \t     skipping or not, we should lex angle-bracketed headers\n \t     correctly, and maybe output some diagnostics.  */\n \t  pfile->state.angled_headers = dir->flags & INCL;\n+\t  pfile->state.directive_wants_padding = dir->flags & INCL;\n \t  if (! CPP_OPTION (pfile, preprocessed))\n \t    directive_diagnostics (pfile, dir, indented);\n \t  if (pfile->state.skipping && !(dir->flags & COND))\n@@ -582,7 +583,7 @@ glue_header_name (pfile)\n   buffer = (unsigned char *) xmalloc (capacity);\n   for (;;)\n     {\n-      token = cpp_get_token (pfile);\n+      token = get_token_no_padding (pfile);\n \n       if (token->type == CPP_GREATER || token->type == CPP_EOF)\n \tbreak;\n@@ -634,7 +635,7 @@ parse_include (pfile)\n     dir = pfile->directive->name;\n \n   /* Allow macro expansion.  */\n-  header = cpp_get_token (pfile);\n+  header = get_token_no_padding (pfile);\n   if (header->type != CPP_STRING && header->type != CPP_HEADER_NAME)\n     {\n       if (header->type != CPP_LESS)"}, {"sha": "99043ff2ef08d86be49c85bae72c149671cef02d", "filename": "gcc/cppmacro.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8d0ddaf4c62bdc34262be64de2161a413391b8d/gcc%2Fcppmacro.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8d0ddaf4c62bdc34262be64de2161a413391b8d/gcc%2Fcppmacro.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppmacro.c?ref=a8d0ddaf4c62bdc34262be64de2161a413391b8d", "patch": "@@ -899,7 +899,7 @@ replace_args (pfile, node, macro, args)\n \tcount = arg->expanded_count, from = arg->expanded;\n \n       /* Padding on the left of an argument (unless RHS of ##).  */\n-      if (!pfile->state.in_directive\n+      if ((!pfile->state.in_directive || pfile->state.directive_wants_padding)\n \t  && src != macro->exp.tokens && !(src[-1].flags & PASTE_LEFT))\n \t*dest++ = padding_token (pfile, src);\n "}, {"sha": "2b3fb96c970e003d2bef576d48ac8a2d327bc470", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 28, "deletions": 23, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8d0ddaf4c62bdc34262be64de2161a413391b8d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8d0ddaf4c62bdc34262be64de2161a413391b8d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a8d0ddaf4c62bdc34262be64de2161a413391b8d", "patch": "@@ -1,3 +1,8 @@\n+2003-02-21  Zack Weinberg  <zack@codesourcery.com>\n+\n+\t* gcc.dg/cpp/include3.c: New test.\n+\t* gcc.dg/cpp/inc/foo.h: New file.\n+\n 2003-02-21  Glen Nakamura  <glen@imodulo.com>\n \n \t* gcc.c-torture/execute/20030221-1.c: New test.\n@@ -25,7 +30,7 @@ Tue Feb 18 23:28:53 CET 2003  Jan Hubicka  <jh@suse.cz>\n \n 2003-02-18  Aldy Hernandez  <aldyh@redhat.com>\n \n-        * gcc.dg/20030218-1.c: New.\n+\t* gcc.dg/20030218-1.c: New.\n \n 2003-02-18  Richard Henderson  <rth@redhat.com>\n \n@@ -36,7 +41,7 @@ Tue Feb 18 23:28:53 CET 2003  Jan Hubicka  <jh@suse.cz>\n \n \tPR c++/9704\n \t* g++.dg/init/copy5.C: New test.\n-\t\n+\n 2003-02-18  Geoffrey Keating  <geoffk@apple.com>\n \n \t* gcc.dg/pch/pch.exp: Delete $bname.h before copying into it.\n@@ -84,18 +89,18 @@ Sun Feb 16 23:08:19 CET 2003  Jan HUbicka  <jh@suse.cz>\n \n 2003-02-12  Aldy Hernandez  <aldyh@redhat.com>\n \n-        * gcc.dg/ppc-spe.c: Fix formatting.\n-        Enable tests that were previously unsupported by gas.\n-        Delete tests for instructions that no longer exist.\n-        Switch arguments on evsubifw builtin.\n+\t* gcc.dg/ppc-spe.c: Fix formatting.\n+\tEnable tests that were previously unsupported by gas.\n+\tDelete tests for instructions that no longer exist.\n+\tSwitch arguments on evsubifw builtin.\n \n 2003-02-12  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* gcc.c-torture/execute/20030209-1.c: Disable the test if\n \tSTACK_SIZE is too small.\n \n 2003-02-10  Eric Botcazou  <ebotcazou@libertysurf.fr>\n-            Christian Ehrhardt  <ehrhardt@mathematik.uni-ulm.de>\n+\t    Christian Ehrhardt  <ehrhardt@mathematik.uni-ulm.de>\n \n \t* gcc.dg/decl-2.c: New test.\n \n@@ -263,8 +268,8 @@ Tue Jan 28 12:19:35 CET 2003  Jan Hubicka  <jh@suse.cz>\n \n 2003-01-28  D.Venkatasubramanian   <dvenkat@noida.hcltech.com>\n \n-        * gcc.c-torture/execute/20010925-1.c: Changed the\n-        memcpy declaration.\n+\t* gcc.c-torture/execute/20010925-1.c: Changed the\n+\tmemcpy declaration.\n \n 2003-01-28  Nathan Sidwell  <nathan@codesourcery.com>\n \n@@ -318,13 +323,13 @@ Sat Jan 25 21:06:49 CET 2003  Jan Hubicka  <jh@suse.cz>\n \tPR c++/9403\n \t* g++.dg/parse/template3.C: New test.\n \t* g++.old-deja/g++.pt/memclass5.C: Add needed template keyword.\n-\t\n+\n \tPR c++/795\n \t* g++.dg/parse/template4.C: New test.\n-\t\n+\n \tPR c++/9415\n \t* g++.dg/template/qual2.C: New test.\n-\t\n+\n \tPR c++/8545\n \t* g++.old-deja/g++.brendan/parse3.C: Remove XFAIL.\n \n@@ -461,7 +466,7 @@ Tue Jan 21 18:01:35 CET 2003  Jan Hubicka  <jh@suse.cz>\n \n \tPR c++/9294:\n \t* g++.dg/parse/qualified1.C: New test.\n-\t\n+\n \t* g++.dg/parse/typename3.C: New test.\n \n 2003-01-16  Richard Henderson  <rth@redhat.com>\n@@ -511,7 +516,7 @@ Tue Jan 21 18:01:35 CET 2003  Jan Hubicka  <jh@suse.cz>\n \t* gcc/testsuite/g++.old-deja/g++.pt/typename19.C: Remove warning.\n \t* gcc/testsuite/g++.old-deja/g++.robertl/eb112.C: Fix typo.\n \t* gcc/testsuite/g++.old-deja/g++.robertl/eb24.C: Use this->.\n-\t\n+\n 2003-01-16  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* g++.dg/parse/ambig2.C: New test.\n@@ -618,7 +623,7 @@ Tue Jan 14 00:45:03 CET 2003  Jan Hubicka  <jh@suse.cz>\n \t* gcc.dg/pch/pch.exp: Compare .s files with/without PCH,\n \trather than trying to build and run a program using PCH.\n \t* gcc.dg/pch: Remove dg-do commands from test files.\n-\t\n+\n \t2002-11-08  Geoffrey Keating  <geoffk@apple.com>\n \n \t* gcc.dg/pch/macro-3.c: New.\n@@ -740,7 +745,7 @@ Tue Jan 14 00:45:03 CET 2003  Jan Hubicka  <jh@suse.cz>\n \t* g++.old-deja/g++.mike/p9706.C: Likewise\n \t* g++.old-deja/g++.mike/p10416.C: Likewise\n \t* g++.old-deja/g++.mike/p11667.C: Likewise\n-\t* g77.f-torture/compile/20010519-1.f: Remove reference to Convex. \n+\t* g77.f-torture/compile/20010519-1.f: Remove reference to Convex.\n \tRemove redundant reference to Iris.\n \t* gcc.dg/20020312-2.c: Remove references to AMD A29K, Clipper, Convex,\n \tElxsi, i860, Pico Java, and WE32K.\n@@ -868,7 +873,7 @@ Wed Jan  8 11:41:47 CET 2003  Jan Hubicka  <jh@suse.cz>\n 2002-12-31  Mark Mitchell  <mark@codesourcery.com>\n \n \t* g++.dg/parse/namespace1.C: New test.\n-\t\n+\n 2003-01-01  Neil Booth  <neil@daikokuya.co.uk>\n \n \t* g++.dg/parse/parse4.C: New test.\n@@ -1142,7 +1147,7 @@ Wed Jan  8 11:41:47 CET 2003  Jan Hubicka  <jh@suse.cz>\n \t* g++.old-deja/g++.pt/memtemp87.C: Add missing access specifier.\n \t* g++.old-deja/g++.pt/overload13.C: Correct error messages.\n \t* g++.old-deja/g++.pt/parms2.C: Add missing typename keyword.\n-\t* g++.old-deja/g++.pt/ptrmem1.C: Remove invalid use of template\t\n+\t* g++.old-deja/g++.pt/ptrmem1.C: Remove invalid use of template\n \tkeyword.\n \t* g++.old-deja/g++.pt/spec10.C: Likewise.\n \t* g++.old-deja/g++.pt/spec28.C: Reorder declarations.\n@@ -1166,7 +1171,7 @@ Wed Jan  8 11:41:47 CET 2003  Jan Hubicka  <jh@suse.cz>\n \t* g++.old-deja/g++.robertl/eb79.C: Correct for new name lookup rules.\n \t* g++.old-deja/g++.robertl/eb82.C: Remove stray semicolons.\n \t* g++.old-deja/g++.robertl/eb86.C: Add missing forward declaration.\n-\t\n+\n 2002-12-26  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* g++.dg/warn/inline1.C: New test.\n@@ -1179,9 +1184,9 @@ Wed Jan  8 11:41:47 CET 2003  Jan Hubicka  <jh@suse.cz>\n \t* g++.dg/template/conv5.C: New test.\n \n 2002-12-24  Nathan Sidwell  <nathan@codesourcery.com>\n-\t\n+\n \t* g++.dg/lookup/scoped3.C: New test.\n-\t\n+\n \t* g++.dg/lookup/decl1.C: New test.\n \t* g++.dg/lookup/decl2.C: New test.\n \n@@ -1200,9 +1205,9 @@ Wed Jan  8 11:41:47 CET 2003  Jan Hubicka  <jh@suse.cz>\n 2002-12-23  Mark Mitchell  <mark@codesourcery.com>\n \n \t* gcc.dg/i386-bitfield3.c: New test.\n-\t\n+\n \t* gcc.dg/i386-bitfield2.c: New test.\n-\t\n+\n 2002-12-22  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* g++.dg/parse/conv_op1.C: New test."}, {"sha": "ec770476c21c46da3439b1c900f032985c21a447", "filename": "gcc/testsuite/gcc.dg/cpp/inc/foo.h", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8d0ddaf4c62bdc34262be64de2161a413391b8d/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Finc%2Ffoo.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8d0ddaf4c62bdc34262be64de2161a413391b8d/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Finc%2Ffoo.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Finc%2Ffoo.h?ref=a8d0ddaf4c62bdc34262be64de2161a413391b8d", "patch": "@@ -0,0 +1 @@\n+extern int a;"}, {"sha": "8bea2b78ee803ec3445534bb0432a6d099a0915b", "filename": "gcc/testsuite/gcc.dg/cpp/include3.c", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8d0ddaf4c62bdc34262be64de2161a413391b8d/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Finclude3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8d0ddaf4c62bdc34262be64de2161a413391b8d/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Finclude3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Finclude3.c?ref=a8d0ddaf4c62bdc34262be64de2161a413391b8d", "patch": "@@ -0,0 +1,7 @@\n+/* Unpatched, this file would include \"inc/ foo.h\" (note the space)  */\n+\n+#define PREINC_XSTR(str)             #str\n+#define PREINC_STR(str)              PREINC_XSTR(str)\n+#define COMP_INC(comp,file)          PREINC_STR(comp/file)\n+\n+#include COMP_INC(inc, foo.h)"}]}