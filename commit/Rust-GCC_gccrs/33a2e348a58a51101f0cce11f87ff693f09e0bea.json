{"sha": "33a2e348a58a51101f0cce11f87ff693f09e0bea", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzNhMmUzNDhhNThhNTExMDFmMGNjZTExZjg3ZmY2OTNmMDllMGJlYQ==", "commit": {"author": {"name": "Wilco Dijkstra", "email": "wdijkstr@arm.com", "date": "2017-11-03T16:29:47Z"}, "committer": {"name": "Wilco Dijkstra", "email": "wilco@gcc.gnu.org", "date": "2017-11-03T16:29:47Z"}, "message": "re PR c++/82768 (ICE in synthesize_implicit_template_parm, at cp/parser.c:39338)\n\nFix PR82768\n\nForcing LR at the bottom of the frame caused a few test failures.\nSince there are some cases that generate worse code, revert this\npart, and the frame tests pass again.\n\n    gcc/\n\tPR target/82786\n\t* config/aarch64/aarch64.c (aarch64_layout_frame):\n\tUndo forcing of LR at bottom of frame.\n\nFrom-SVN: r254384", "tree": {"sha": "0ab3442ba044f43cbb21396bf9974a56f8b278a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0ab3442ba044f43cbb21396bf9974a56f8b278a5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/33a2e348a58a51101f0cce11f87ff693f09e0bea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33a2e348a58a51101f0cce11f87ff693f09e0bea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/33a2e348a58a51101f0cce11f87ff693f09e0bea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33a2e348a58a51101f0cce11f87ff693f09e0bea/comments", "author": null, "committer": null, "parents": [{"sha": "2965f1274ce3c4a4af6f8183e4c20532a6d8d21a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2965f1274ce3c4a4af6f8183e4c20532a6d8d21a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2965f1274ce3c4a4af6f8183e4c20532a6d8d21a"}], "stats": {"total": 16, "additions": 7, "deletions": 9}, "files": [{"sha": "949f3cb5a6f6703477fde00e39dce952495841f2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33a2e348a58a51101f0cce11f87ff693f09e0bea/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33a2e348a58a51101f0cce11f87ff693f09e0bea/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=33a2e348a58a51101f0cce11f87ff693f09e0bea", "patch": "@@ -1,3 +1,9 @@\n+2017-11-03  Wilco Dijkstra  <wdijkstr@arm.com>\n+\n+\tPR target/82786\n+\t* config/aarch64/aarch64.c (aarch64_layout_frame):\n+\tUndo forcing of LR at bottom of frame.\n+\n 2017-11-03  Jeff Law  <law@redhat.com>\n \n \t* cfganal.c (single_pred_edge_ignoring_loop_edges): New function"}, {"sha": "12f247d7c058171b53d4ce350173c5dd272cf29d", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33a2e348a58a51101f0cce11f87ff693f09e0bea/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33a2e348a58a51101f0cce11f87ff693f09e0bea/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=33a2e348a58a51101f0cce11f87ff693f09e0bea", "patch": "@@ -2908,8 +2908,7 @@ aarch64_frame_pointer_required (void)\n \n /* Mark the registers that need to be saved by the callee and calculate\n    the size of the callee-saved registers area and frame record (both FP\n-   and LR may be omitted).  If the function is not a leaf, ensure LR is\n-   saved at the bottom of the callee-save area.  */\n+   and LR may be omitted).  */\n static void\n aarch64_layout_frame (void)\n {\n@@ -2966,13 +2965,6 @@ aarch64_layout_frame (void)\n       cfun->machine->frame.wb_candidate2 = R30_REGNUM;\n       offset = 2 * UNITS_PER_WORD;\n     }\n-  else if (!crtl->is_leaf)\n-    {\n-      /* Ensure LR is saved at the bottom of the callee-saves.  */\n-      cfun->machine->frame.reg_offset[R30_REGNUM] = 0;\n-      cfun->machine->frame.wb_candidate1 = R30_REGNUM;\n-      offset = UNITS_PER_WORD;\n-    }\n \n   /* Now assign stack slots for them.  */\n   for (regno = R0_REGNUM; regno <= R30_REGNUM; regno++)"}]}