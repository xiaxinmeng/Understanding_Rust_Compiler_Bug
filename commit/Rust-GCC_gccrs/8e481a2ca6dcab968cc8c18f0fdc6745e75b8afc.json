{"sha": "8e481a2ca6dcab968cc8c18f0fdc6745e75b8afc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGU0ODFhMmNhNmRjYWI5NjhjYzhjMThmMGZkYzY3NDVlNzViOGFmYw==", "commit": {"author": {"name": "Danny Smith", "email": "dannysmith@users.sourceforge.net", "date": "2009-04-08T08:02:48Z"}, "committer": {"name": "Danny Smith", "email": "dannysmith@gcc.gnu.org", "date": "2009-04-08T08:02:48Z"}, "message": "re PR bootstrap/39660 (Mingw Bootstrap stops with \"..host-mingw32.c:140: error: ISO C90 forbids mixed..\")\n\n\tPR bootstrap/39660\n\t* config/i386/host-mingw32.c (mingw32_gt_pch_use_address): Don't\n\tmix declarations and code.\n\nFrom-SVN: r145711", "tree": {"sha": "2f889b301b803e3f51a017333494a70f0c1c1fc6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2f889b301b803e3f51a017333494a70f0c1c1fc6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8e481a2ca6dcab968cc8c18f0fdc6745e75b8afc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e481a2ca6dcab968cc8c18f0fdc6745e75b8afc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e481a2ca6dcab968cc8c18f0fdc6745e75b8afc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e481a2ca6dcab968cc8c18f0fdc6745e75b8afc/comments", "author": null, "committer": null, "parents": [{"sha": "e04c614e09867345ee8ac03390cc75c5f2f1de1e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e04c614e09867345ee8ac03390cc75c5f2f1de1e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e04c614e09867345ee8ac03390cc75c5f2f1de1e"}], "stats": {"total": 45, "additions": 28, "deletions": 17}, "files": [{"sha": "c2091e5eb3c695a0d244a16186cdce89bee35465", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e481a2ca6dcab968cc8c18f0fdc6745e75b8afc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e481a2ca6dcab968cc8c18f0fdc6745e75b8afc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8e481a2ca6dcab968cc8c18f0fdc6745e75b8afc", "patch": "@@ -1,3 +1,9 @@\n+2009-04-08  Danny Smith  <dannysmith@users.sourceforge.net>\n+\n+\tPR bootstrap/39660\n+\t* config/i386/host-mingw32.c (mingw32_gt_pch_use_address): Don't\n+\tmix declarations and code.\n+\n 2009-04-08  Ben Elliston  <bje@au.ibm.com>\n \n \t* gcc.c: Replace `CC' with `GCC' throughout."}, {"sha": "f91407fda7e8e126e8ff367d875822cfed153050", "filename": "gcc/config/i386/host-mingw32.c", "status": "modified", "additions": 22, "deletions": 17, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e481a2ca6dcab968cc8c18f0fdc6745e75b8afc/gcc%2Fconfig%2Fi386%2Fhost-mingw32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e481a2ca6dcab968cc8c18f0fdc6745e75b8afc/gcc%2Fconfig%2Fi386%2Fhost-mingw32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fhost-mingw32.c?ref=8e481a2ca6dcab968cc8c18f0fdc6745e75b8afc", "patch": "@@ -1,5 +1,5 @@\n /* mingw32 host-specific hook definitions.\n-   Copyright (C) 2004, 2007 Free Software Foundation, Inc.\n+   Copyright (C) 2004, 2007, 2009 Free Software Foundation, Inc.\n \n    This file is part of GCC.\n \n@@ -122,23 +122,19 @@ mingw32_gt_pch_use_address (void *addr, size_t size, int fd,\n      don't get SeCreateGlobalPrivilege. We don't need global\n      memory sharing so explicitly put object into Local namespace.\n \n-     There is also another issue, which appears if multiple concurrent\n-     GCC processes are using PCH functionality. MapViewOfFileEx returns\n-     \"Access Denied\" error. So we need to make the session-wide mapping\n-     name unique. Let's use current process ID for that.  */\n-#define OBJECT_NAME_FMT \"Local\\\\MinGWGCCPCH-\"\n+     If multiple concurrent GCC processes are using PCH functionality,\n+     MapViewOfFileEx returns \"Access Denied\" error.  So we ensure the\n+     session-wide mapping name is unique by appending process ID.  */\n \n-  /* Allocate enough space for name prefix and max possible DWORD\n-    hexadecimal representation.  */\n-  char object_name[sizeof (OBJECT_NAME_FMT) + sizeof (DWORD) * 2];\n-  snprintf (object_name, sizeof (object_name), OBJECT_NAME_FMT \"%lx\",\n-            GetCurrentProcessId());\n+#define OBJECT_NAME_FMT \"Local\\\\MinGWGCCPCH-\"\n \n+  char* object_name = NULL;\n   /* However, the documentation for CreateFileMapping says that on NT4\n      and earlier, backslashes are invalid in object name.  So, we need\n      to check if we are on Windows2000 or higher.  */\n   OSVERSIONINFO version_info;\n-  \n+  version_info.dwOSVersionInfoSize = sizeof (version_info);\n+\n   if (size == 0)\n     return 0; \n \n@@ -147,14 +143,23 @@ mingw32_gt_pch_use_address (void *addr, size_t size, int fd,\n   if ((offset & (va_granularity - 1)) != 0 || size > pch_VA_max_size)\n     return -1;\n \n-  /* Determine the version of Windows we are running on.  */\n-  version_info.dwOSVersionInfoSize = sizeof (version_info);\n-  GetVersionEx (&version_info);\n \n+  /* Determine the version of Windows we are running on and use a\n+     uniquely-named local object if running > 4.  */\n+  GetVersionEx (&version_info);\n+  if (version_info.dwMajorVersion > 4)\n+    {\n+      char local_object_name [sizeof (OBJECT_NAME_FMT)\n+\t\t\t      + sizeof (DWORD) * 2];\n+      snprintf (local_object_name, sizeof (local_object_name),\n+\t\tOBJECT_NAME_FMT \"%lx\", GetCurrentProcessId());\n+      object_name = local_object_name;\n+    }\n+     \n   mmap_handle = CreateFileMappingA ((HANDLE) _get_osfhandle (fd), NULL,\n \t\t\t\t    PAGE_WRITECOPY | SEC_COMMIT, 0, 0,\n-\t\t\t\t    version_info.dwMajorVersion > 4\n-\t\t\t\t    ? object_name : NULL);\n+\t\t\t\t    object_name);\n+\n   if (mmap_handle == NULL)\n     {\n       w32_error (__FUNCTION__,  __FILE__, __LINE__, \"CreateFileMapping\");"}]}