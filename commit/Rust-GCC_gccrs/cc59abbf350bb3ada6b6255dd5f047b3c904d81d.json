{"sha": "cc59abbf350bb3ada6b6255dd5f047b3c904d81d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2M1OWFiYmYzNTBiYjNhZGE2YjYyNTVkZDVmMDQ3YjNjOTA0ZDgxZA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2006-10-30T08:01:28Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2006-10-30T08:01:28Z"}, "message": "re PR tree-optimization/29637 (Endless recursion in make_vector_type)\n\n\tPR tree-optimization/29637\n\t* tree.c (make_vector_type): Don't recurse if TYPE_MAIN_VARIANT\n\tof the innertype is the innertype itself.\n\n\t* gcc.dg/pr29637.c: New test.\n\nFrom-SVN: r118175", "tree": {"sha": "7a07dff5c74eee4bffb4874c3fbefe85e870f507", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7a07dff5c74eee4bffb4874c3fbefe85e870f507"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cc59abbf350bb3ada6b6255dd5f047b3c904d81d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc59abbf350bb3ada6b6255dd5f047b3c904d81d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc59abbf350bb3ada6b6255dd5f047b3c904d81d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc59abbf350bb3ada6b6255dd5f047b3c904d81d/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5fbd2051394849190af02e40fe987839f7ef6eb9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5fbd2051394849190af02e40fe987839f7ef6eb9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5fbd2051394849190af02e40fe987839f7ef6eb9"}], "stats": {"total": 37, "additions": 36, "deletions": 1}, "files": [{"sha": "abcdecefe87922e276843bc4a0efd3c6c91a7660", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc59abbf350bb3ada6b6255dd5f047b3c904d81d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc59abbf350bb3ada6b6255dd5f047b3c904d81d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cc59abbf350bb3ada6b6255dd5f047b3c904d81d", "patch": "@@ -1,3 +1,9 @@\n+2006-10-30  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/29637\n+\t* tree.c (make_vector_type): Don't recurse if TYPE_MAIN_VARIANT\n+\tof the innertype is the innertype itself.\n+\n 2006-10-30  Danny Smith  <dannysmith@users.sourceforge.net>\n \n \t* dwarf2out.c (file_name_acquire): Correct typo."}, {"sha": "3d1049466d6a61985db8d20d9c3696039d633730", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc59abbf350bb3ada6b6255dd5f047b3c904d81d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc59abbf350bb3ada6b6255dd5f047b3c904d81d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cc59abbf350bb3ada6b6255dd5f047b3c904d81d", "patch": "@@ -1,3 +1,8 @@\n+2006-10-30  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/29637\n+\t* gcc.dg/pr29637.c: New test.\n+\n 2006-10-29  Roger Sayle  <roger@eyesopen.com>\n \n \t* gcc.dg/fold-compare-1.c: Update to reflect recent changes in"}, {"sha": "5dfee41b1d5c9e9c2f09389dce8cc74f4e8a92ae", "filename": "gcc/testsuite/gcc.dg/pr29637.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc59abbf350bb3ada6b6255dd5f047b3c904d81d/gcc%2Ftestsuite%2Fgcc.dg%2Fpr29637.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc59abbf350bb3ada6b6255dd5f047b3c904d81d/gcc%2Ftestsuite%2Fgcc.dg%2Fpr29637.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr29637.c?ref=cc59abbf350bb3ada6b6255dd5f047b3c904d81d", "patch": "@@ -0,0 +1,23 @@\n+/* PR tree-optimization/29637 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -ftree-vectorize\" } */\n+\n+typedef struct __attribute__ ((aligned (8)))\n+{\n+    short a, b, c, d;\n+} A;\n+\n+typedef struct\n+{\n+  A a[24];\n+} B;\n+\n+static const A b = { 0, 0, 1, -1 };\n+\n+void\n+foo (B *x)\n+{\n+  int i;\n+  for (i = 0; i <= 20; i += 4)\n+    x->a[i] = b;\n+}"}, {"sha": "d0c56c40dd22a8faf977eb774713855137822aac", "filename": "gcc/tree.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc59abbf350bb3ada6b6255dd5f047b3c904d81d/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc59abbf350bb3ada6b6255dd5f047b3c904d81d/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=cc59abbf350bb3ada6b6255dd5f047b3c904d81d", "patch": "@@ -6400,7 +6400,8 @@ make_vector_type (tree innertype, int nunits, enum machine_mode mode)\n \n   /* Build a main variant, based on the main variant of the inner type, then\n      use it to build the variant we return.  */\n-  if (TYPE_ATTRIBUTES (innertype) || TYPE_QUALS (innertype))\n+  if ((TYPE_ATTRIBUTES (innertype) || TYPE_QUALS (innertype))\n+      && TYPE_MAIN_VARIANT (innertype) != innertype)\n     return build_type_attribute_qual_variant (\n \t    make_vector_type (TYPE_MAIN_VARIANT (innertype), nunits, mode),\n \t    TYPE_ATTRIBUTES (innertype),"}]}