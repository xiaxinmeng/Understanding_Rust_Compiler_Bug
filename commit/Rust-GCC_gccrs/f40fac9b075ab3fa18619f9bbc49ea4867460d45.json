{"sha": "f40fac9b075ab3fa18619f9bbc49ea4867460d45", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjQwZmFjOWIwNzVhYjNmYTE4NjE5ZjliYmM0OWVhNDg2NzQ2MGQ0NQ==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-08-31T21:22:41Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-08-31T21:22:41Z"}, "message": "(push_reload): Abort is secondary_reload wants same\nclass as an input reload.\n\nFrom-SVN: r5236", "tree": {"sha": "d058a04fe74cbb8740cf26ee16ffaf5fd2029686", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d058a04fe74cbb8740cf26ee16ffaf5fd2029686"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f40fac9b075ab3fa18619f9bbc49ea4867460d45", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f40fac9b075ab3fa18619f9bbc49ea4867460d45", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f40fac9b075ab3fa18619f9bbc49ea4867460d45", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f40fac9b075ab3fa18619f9bbc49ea4867460d45/comments", "author": null, "committer": null, "parents": [{"sha": "67d4766b4a562bdf49633d0af7d8659930ce973e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67d4766b4a562bdf49633d0af7d8659930ce973e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67d4766b4a562bdf49633d0af7d8659930ce973e"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "f3e880224bbfa824f13f408876ca1cc6f2c55f56", "filename": "gcc/reload.c", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f40fac9b075ab3fa18619f9bbc49ea4867460d45/gcc%2Freload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f40fac9b075ab3fa18619f9bbc49ea4867460d45/gcc%2Freload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload.c?ref=f40fac9b075ab3fa18619f9bbc49ea4867460d45", "patch": "@@ -1006,6 +1006,21 @@ push_reload (in, out, inloc, outloc, class,\n \t       : type == RELOAD_FOR_OUTPUT ? RELOAD_FOR_OUTPUT_ADDRESS\n \t       : type);\n \n+\t  /* This case isn't valid, so fail.  Reload is allowed to use the\n+\t     same register for RELOAD_FOR_INPUT_ADDRESS and RELOAD_FOR_INPUT\n+\t     reloads, but in the case of a secondary register, we actually\n+\t     need two different registers for correct code.  We fail here\n+\t     to prevent the possibility of silently generating incorrect code\n+\t     later.\n+\n+\t     The convention is that secondary input reloads are valid only if\n+\t     the secondary_class is different from class.  If you have such\n+\t     a case, you can not use secondary reloads, you must work around\n+\t     the problem some other way.  */\n+\n+\t  if (type == RELOAD_FOR_INPUT && secondary_class == class)\n+\t    abort ();\n+\n \t  /* If we need a tertiary reload, see if we have one we can reuse\n \t     or else make one.  */\n "}]}