{"sha": "17c340e049b6cd5e282a020e484b789c678cbd39", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTdjMzQwZTA0OWI2Y2Q1ZTI4MmEwMjBlNDg0Yjc4OWM2NzhjYmQzOQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2008-04-16T15:53:59Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2008-04-16T15:53:59Z"}, "message": "re PR target/35944 (wrong result for MOD with kind=10 for some array argument values)\n\n        PR target/35944\n        * config/i386/i386.md (fmodxf3): Copy operand 1 and operand 2 into\n        temporary registers.  Change operand predicate to general_operand.\n        (remainderxf3): Ditto.\n\nFrom-SVN: r134348", "tree": {"sha": "59ab59af18390a6f41d3c6d19d6f23b996d14964", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/59ab59af18390a6f41d3c6d19d6f23b996d14964"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/17c340e049b6cd5e282a020e484b789c678cbd39", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17c340e049b6cd5e282a020e484b789c678cbd39", "html_url": "https://github.com/Rust-GCC/gccrs/commit/17c340e049b6cd5e282a020e484b789c678cbd39", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17c340e049b6cd5e282a020e484b789c678cbd39/comments", "author": null, "committer": null, "parents": [{"sha": "e544c850ffc63d95d704370f8ce5140b4d9e1c68", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e544c850ffc63d95d704370f8ce5140b4d9e1c68", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e544c850ffc63d95d704370f8ce5140b4d9e1c68"}], "stats": {"total": 53, "additions": 26, "deletions": 27}, "files": [{"sha": "ea8fb4dc67056aa26f3b2ac20d232ffc9ad06d1e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17c340e049b6cd5e282a020e484b789c678cbd39/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17c340e049b6cd5e282a020e484b789c678cbd39/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=17c340e049b6cd5e282a020e484b789c678cbd39", "patch": "@@ -1,3 +1,10 @@\n+2008-04-16  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/35944\n+\t* config/i386/i386.md (fmodxf3): Copy operand 1 and operand 2 into\n+\ttemporary registers.  Change operand predicate to general_operand.\n+\t(remainderxf3): Ditto.\n+\n 2008-04-16  Richard Guenther  <rguenther@suse.de>\n \n \t* Makefile.in (tree-affine.o): Add $(FLAGS_H) dependency.\n@@ -51,9 +58,9 @@\n \tsjlj_build_landing_pads, finish_eh_generation,\n \tremove_exception_handler_label, remove_eh_handler,\n \tmaybe_remove_eh_handler, add_reachable_handler,\n-\treachable_handlers, expand_builtin_eh_return,\n-\texpand_eh_return, add_action_record, collect_one_action_chain,\n-\tadd_call_site, convert_to_eh_region_ranges, sjlj_size_of_call_site_table,\n+\treachable_handlers, expand_builtin_eh_return, expand_eh_return,\n+\tadd_action_record, collect_one_action_chain, add_call_site,\n+\tconvert_to_eh_region_ranges, sjlj_size_of_call_site_table,\n \tsjlj_output_call_site_table, output_function_exception_table,\n \t* except.h (note_current_region_may_contain_throw): Remove\n \t(get_exception_pointer, get_exception_filter): Do not take struct"}, {"sha": "d09eb260f4e9f87cd303bba58583c12ca3de6b88", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 16, "deletions": 24, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17c340e049b6cd5e282a020e484b789c678cbd39/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17c340e049b6cd5e282a020e484b789c678cbd39/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=17c340e049b6cd5e282a020e484b789c678cbd39", "patch": "@@ -16434,28 +16434,24 @@\n \n (define_expand \"fmodxf3\"\n   [(use (match_operand:XF 0 \"register_operand\" \"\"))\n-   (use (match_operand:XF 1 \"register_operand\" \"\"))\n-   (use (match_operand:XF 2 \"register_operand\" \"\"))]\n+   (use (match_operand:XF 1 \"general_operand\" \"\"))\n+   (use (match_operand:XF 2 \"general_operand\" \"\"))]\n   \"TARGET_USE_FANCY_MATH_387\"\n {\n   rtx label = gen_label_rtx ();\n \n-  rtx op2;\n+  rtx op1 = gen_reg_rtx (XFmode);\n+  rtx op2 = gen_reg_rtx (XFmode);\n \n-  if (rtx_equal_p (operands[1], operands[2]))\n-    {\n-      op2 = gen_reg_rtx (XFmode);\n-      emit_move_insn (op2, operands[2]);\n-    }\n-  else\n-    op2 = operands[2];\n+  emit_move_insn (op1, operands[1]);\n+  emit_move_insn (op2, operands[2]);\n \n   emit_label (label);\n-  emit_insn (gen_fpremxf4_i387 (operands[1], op2, operands[1], op2));\n+  emit_insn (gen_fpremxf4_i387 (op1, op2, op1, op2));\n   ix86_emit_fp_unordered_jump (label);\n   LABEL_NUSES (label) = 1;\n \n-  emit_move_insn (operands[0], operands[1]);\n+  emit_move_insn (operands[0], op1);\n   DONE;\n })\n \n@@ -16506,28 +16502,24 @@\n \n (define_expand \"remainderxf3\"\n   [(use (match_operand:XF 0 \"register_operand\" \"\"))\n-   (use (match_operand:XF 1 \"register_operand\" \"\"))\n-   (use (match_operand:XF 2 \"register_operand\" \"\"))]\n+   (use (match_operand:XF 1 \"general_operand\" \"\"))\n+   (use (match_operand:XF 2 \"general_operand\" \"\"))]\n   \"TARGET_USE_FANCY_MATH_387\"\n {\n   rtx label = gen_label_rtx ();\n \n-  rtx op2;\n+  rtx op1 = gen_reg_rtx (XFmode);\n+  rtx op2 = gen_reg_rtx (XFmode);\n \n-  if (rtx_equal_p (operands[1], operands[2]))\n-    {\n-      op2 = gen_reg_rtx (XFmode);\n-      emit_move_insn (op2, operands[2]);\n-    }\n-  else\n-    op2 = operands[2];\n+  emit_move_insn (op1, operands[1]);\n+  emit_move_insn (op2, operands[2]);\n \n   emit_label (label);\n-  emit_insn (gen_fprem1xf4_i387 (operands[1], op2, operands[1], op2));\n+  emit_insn (gen_fprem1xf4_i387 (op1, op2, op1, op2));\n   ix86_emit_fp_unordered_jump (label);\n   LABEL_NUSES (label) = 1;\n \n-  emit_move_insn (operands[0], operands[1]);\n+  emit_move_insn (operands[0], op1);\n   DONE;\n })\n "}]}