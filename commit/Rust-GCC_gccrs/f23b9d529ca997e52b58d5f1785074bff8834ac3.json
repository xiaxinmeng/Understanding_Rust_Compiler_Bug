{"sha": "f23b9d529ca997e52b58d5f1785074bff8834ac3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjIzYjlkNTI5Y2E5OTdlNTJiNThkNWYxNzg1MDc0YmZmODgzNGFjMw==", "commit": {"author": {"name": "David Edelsohn", "email": "edelsohn@gnu.org", "date": "2003-07-02T17:50:37Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2003-07-02T17:50:37Z"}, "message": "dbxout.c (pending_bincls): Guard with DBX_USE_BINCLS.\n\n        * dbxout.c (pending_bincls): Guard with DBX_USE_BINCLS.\n        (emit_bincl_stab): Same.\n        (emit_pending_bincls): Same.\n\nFrom-SVN: r68848", "tree": {"sha": "40ea085640f166fe8ede94a3c1a59a0e8a3c53c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/40ea085640f166fe8ede94a3c1a59a0e8a3c53c0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f23b9d529ca997e52b58d5f1785074bff8834ac3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f23b9d529ca997e52b58d5f1785074bff8834ac3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f23b9d529ca997e52b58d5f1785074bff8834ac3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f23b9d529ca997e52b58d5f1785074bff8834ac3/comments", "author": null, "committer": null, "parents": [{"sha": "5208b50b05316bd5db18166ec7c752b0b1980c0d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5208b50b05316bd5db18166ec7c752b0b1980c0d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5208b50b05316bd5db18166ec7c752b0b1980c0d"}], "stats": {"total": 19, "additions": 16, "deletions": 3}, "files": [{"sha": "435a0c2a4f8f9738a72ecb6e60e6284ec1d296ce", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f23b9d529ca997e52b58d5f1785074bff8834ac3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f23b9d529ca997e52b58d5f1785074bff8834ac3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f23b9d529ca997e52b58d5f1785074bff8834ac3", "patch": "@@ -1,3 +1,9 @@\n+2003-07-02  David Edelsohn  <edelsohn@gnu.org>\n+\n+\t* dbxout.c (pending_bincls): Guard with DBX_USE_BINCLS.\n+\t(emit_bincl_stab): Same.\n+\t(emit_pending_bincls): Same.\n+\n 2003-07-02  Nathan Sidwell  <nathan@codesourcery.com>\n \n \tPR c++/11072"}, {"sha": "b39f627d1cef58b4325f4dd14eb7dba0f9b60e9f", "filename": "gcc/dbxout.c", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f23b9d529ca997e52b58d5f1785074bff8834ac3/gcc%2Fdbxout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f23b9d529ca997e52b58d5f1785074bff8834ac3/gcc%2Fdbxout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdbxout.c?ref=f23b9d529ca997e52b58d5f1785074bff8834ac3", "patch": "@@ -195,7 +195,7 @@ struct dbx_file GTY(())\n   struct dbx_file *prev;              /* Chain to traverse all pending bincls.  */\n };\n \n-#ifdef DBX_DEBUGGING_INFO\n+#ifdef DBX_USE_BINCLS\n /* If zero then there is no pending BINCL.  */\n static int pending_bincls = 0;\n #endif\n@@ -317,8 +317,10 @@ static int current_sym_nchars;\n #define CONTIN do { } while (0)\n #endif\n \n+#ifdef DBX_USE_BINCLS\n static void emit_bincl_stab             (const char *c);\n static void emit_pending_bincls         (void);\n+#endif\n static inline void emit_pending_bincls_if_required (void);\n \n static void dbxout_init (const char *);\n@@ -559,6 +561,7 @@ dbxout_typedefs (tree syms)\n     }\n }\n \n+#ifdef DBX_USE_BINCL\n /* Emit BINCL stab using given name.   */\n static void\n emit_bincl_stab (const char *name)\n@@ -573,10 +576,8 @@ emit_bincl_stab (const char *name)\n static inline void\n emit_pending_bincls_if_required ()\n {\n-#ifdef DBX_USE_BINCL\n   if (pending_bincls)\n     emit_pending_bincls ();\n-#endif\n }\n \n /* Emit all pending bincls.  */\n@@ -612,6 +613,12 @@ emit_pending_bincls ()\n   pending_bincls = 0;\n }\n \n+#else\n+\n+static inline void\n+emit_pending_bincls_if_required () {}\n+#endif\n+\n /* Change to reading from a new source file.  Generate a N_BINCL stab.  */\n \n static void"}]}