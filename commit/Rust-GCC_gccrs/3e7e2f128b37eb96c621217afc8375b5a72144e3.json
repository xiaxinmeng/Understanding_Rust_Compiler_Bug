{"sha": "3e7e2f128b37eb96c621217afc8375b5a72144e3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2U3ZTJmMTI4YjM3ZWI5NmM2MjEyMTdhZmM4Mzc1YjVhNzIxNDRlMw==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2012-08-30T19:24:58Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2012-08-30T19:24:58Z"}, "message": "PR libstdc++/54005 continued\n\n2012-08-30  Benjamin Kosnik  <bkoz@redhat.com>\n\n\tPR libstdc++/54005 continued\n\t* include/std/atomic: Use __atomic_lock_free with\n\t* include/bits/atomic_base.h: Same.\n\nFrom-SVN: r190810", "tree": {"sha": "52fdc256148e50c984339e66d42ce49cd3d7f869", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/52fdc256148e50c984339e66d42ce49cd3d7f869"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3e7e2f128b37eb96c621217afc8375b5a72144e3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e7e2f128b37eb96c621217afc8375b5a72144e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e7e2f128b37eb96c621217afc8375b5a72144e3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e7e2f128b37eb96c621217afc8375b5a72144e3/comments", "author": null, "committer": null, "parents": [{"sha": "25270f5e5aa6f04e9c1b5cbe484d511b227bcfea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25270f5e5aa6f04e9c1b5cbe484d511b227bcfea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/25270f5e5aa6f04e9c1b5cbe484d511b227bcfea"}], "stats": {"total": 19, "additions": 13, "deletions": 6}, "files": [{"sha": "9544c2fb1907d1a63b9f3e5824a9e8944d9a8cfc", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e7e2f128b37eb96c621217afc8375b5a72144e3/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e7e2f128b37eb96c621217afc8375b5a72144e3/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=3e7e2f128b37eb96c621217afc8375b5a72144e3", "patch": "@@ -3,6 +3,12 @@\n \t* include/bits/random.h (random_device) [GLIBCXX_USE_RANDOM_TR1]:\n \tRemove 'return' from constructor.\n \n+2012-08-30  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\tPR libstdc++/54005 continued\n+\t* include/std/atomic: Use __atomic_lock_free with\n+\t* include/bits/atomic_base.h: Same.\n+\n 2012-08-30  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* testsuite/util/testsuite_abi.cc (check_version): Add GLIBCXX_3.4.18."}, {"sha": "de098a3c40b156a02f2a58ba45a4cef813c27bc8", "filename": "libstdc++-v3/include/bits/atomic_base.h", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e7e2f128b37eb96c621217afc8375b5a72144e3/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fatomic_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e7e2f128b37eb96c621217afc8375b5a72144e3/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fatomic_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fatomic_base.h?ref=3e7e2f128b37eb96c621217afc8375b5a72144e3", "patch": "@@ -35,6 +35,7 @@\n #include <bits/c++config.h>\n #include <stdbool.h>\n #include <stdint.h>\n+#include <cstddef>\n #include <bits/atomic_lockfree_defines.h>\n \n namespace std _GLIBCXX_VISIBILITY(default)\n@@ -422,11 +423,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       bool\n       is_lock_free() const noexcept\n-      { return __atomic_always_lock_free(sizeof(_M_i), &_M_i); }\n+      { return __atomic_is_lock_free(sizeof(_M_i), NULL); }\n \n       bool\n       is_lock_free() const volatile noexcept\n-      { return __atomic_always_lock_free(sizeof(_M_i), &_M_i); }\n+      { return __atomic_is_lock_free(sizeof(_M_i), NULL); }\n \n       void\n       store(__int_type __i, memory_order __m = memory_order_seq_cst) noexcept\n@@ -716,11 +717,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       bool\n       is_lock_free() const noexcept\n-      { return __atomic_always_lock_free(_M_type_size(1), &_M_p); }\n+      { return __atomic_is_lock_free(_M_type_size(1), NULL); }\n \n       bool\n       is_lock_free() const volatile noexcept\n-      { return __atomic_always_lock_free(_M_type_size(1), &_M_p); }\n+      { return __atomic_is_lock_free(_M_type_size(1), NULL); }\n \n       void\n       store(__pointer_type __p,"}, {"sha": "535a90f582edb3cdfb7dccaecb6d04802021f953", "filename": "libstdc++-v3/include/std/atomic", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e7e2f128b37eb96c621217afc8375b5a72144e3/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fatomic", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e7e2f128b37eb96c621217afc8375b5a72144e3/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fatomic", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fatomic?ref=3e7e2f128b37eb96c621217afc8375b5a72144e3", "patch": "@@ -184,11 +184,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       bool\n       is_lock_free() const noexcept\n-      { return __atomic_always_lock_free(sizeof(_M_i), &_M_i); }\n+      { return __atomic_is_lock_free(sizeof(_M_i), NULL); }\n \n       bool\n       is_lock_free() const volatile noexcept\n-      { return __atomic_always_lock_free(sizeof(_M_i), &_M_i); }\n+      { return __atomic_is_lock_free(sizeof(_M_i), NULL); }\n \n       void\n       store(_Tp __i, memory_order _m = memory_order_seq_cst) noexcept"}]}