{"sha": "edb890249f17668ad09ad13f14198d4a2b307413", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWRiODkwMjQ5ZjE3NjY4YWQwOWFkMTNmMTQxOThkNGEyYjMwNzQxMw==", "commit": {"author": {"name": "Douglas B Rupp", "email": "rupp@gnat.com", "date": "2009-08-25T23:19:16Z"}, "committer": {"name": "Douglas Rupp", "email": "rupp@gcc.gnu.org", "date": "2009-08-25T23:19:16Z"}, "message": "hwint.h (HOST_LONG_FORMAT): New macro\n\n\n\t* hwint.h (HOST_LONG_FORMAT): New macro\n\t* bitmap.c, c-decl.c, mips-tfile.c, print-rtl.c, print-tree.c:\n\tUse HOST_PTR_PRINTF.\n\t* system.h (HOST_PTR_PRINTF): Resurrect old macro\n\t* doc/hostconfig.texi (HOST_LONG_FORMAT): Document.\n\t(HOST_PTR_PRINTF): Document.\n\nFrom-SVN: r151108", "tree": {"sha": "2e0d6e06ebfd77fe4e8485508cb0f70215fbb4aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2e0d6e06ebfd77fe4e8485508cb0f70215fbb4aa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/edb890249f17668ad09ad13f14198d4a2b307413", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/edb890249f17668ad09ad13f14198d4a2b307413", "html_url": "https://github.com/Rust-GCC/gccrs/commit/edb890249f17668ad09ad13f14198d4a2b307413", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/edb890249f17668ad09ad13f14198d4a2b307413/comments", "author": null, "committer": null, "parents": [{"sha": "ff22013ab297213bbd9a5df1badb767f896a71ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff22013ab297213bbd9a5df1badb767f896a71ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff22013ab297213bbd9a5df1badb767f896a71ec"}], "stats": {"total": 76, "additions": 58, "deletions": 18}, "files": [{"sha": "a4c4c717dc098f154636a003a47f608f6fd48cee", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edb890249f17668ad09ad13f14198d4a2b307413/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edb890249f17668ad09ad13f14198d4a2b307413/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=edb890249f17668ad09ad13f14198d4a2b307413", "patch": "@@ -1,3 +1,12 @@\n+2009-08-25  Douglas B Rupp  <rupp@gnat.com>\n+\n+\t* hwint.h (HOST_LONG_FORMAT): New macro\n+\t* bitmap.c, c-decl.c, mips-tfile.c, print-rtl.c, print-tree.c:\n+\tUse HOST_PTR_PRINTF.\n+\t* system.h (HOST_PTR_PRINTF): Resurrect old macro\n+\t* doc/hostconfig.texi (HOST_LONG_FORMAT): Document.\n+\t(HOST_PTR_PRINTF): Document.\n+\n 2009-08-25 Jan Hubicka  <jh@suse.cz>\n \n \t* config/i386/bmmintrin.h: Replace by #error."}, {"sha": "93c13866b2820335986405e6e2cb1aba9b1a7cd7", "filename": "gcc/bitmap.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edb890249f17668ad09ad13f14198d4a2b307413/gcc%2Fbitmap.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edb890249f17668ad09ad13f14198d4a2b307413/gcc%2Fbitmap.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbitmap.c?ref=edb890249f17668ad09ad13f14198d4a2b307413", "patch": "@@ -2028,14 +2028,16 @@ debug_bitmap_file (FILE *file, const_bitmap head)\n {\n   const bitmap_element *ptr;\n \n-  fprintf (file, \"\\nfirst = %p current = %p indx = %u\\n\",\n+  fprintf (file, \"\\nfirst = \" HOST_PTR_PRINTF\n+\t   \" current = \" HOST_PTR_PRINTF \" indx = %u\\n\",\n \t   (void *) head->first, (void *) head->current, head->indx);\n \n   for (ptr = head->first; ptr; ptr = ptr->next)\n     {\n       unsigned int i, j, col = 26;\n \n-      fprintf (file, \"\\t%p next = %p prev = %p indx = %u\\n\\t\\tbits = {\",\n+      fprintf (file, \"\\t\" HOST_PTR_PRINTF \" next = \" HOST_PTR_PRINTF\n+\t       \" prev = \" HOST_PTR_PRINTF \" indx = %u\\n\\t\\tbits = {\",\n \t       (const void*) ptr, (const void*) ptr->next,\n \t       (const void*) ptr->prev, ptr->indx);\n "}, {"sha": "1bc97914f964ea8fa3de4d8788f5094c19dcbc2a", "filename": "gcc/c-decl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edb890249f17668ad09ad13f14198d4a2b307413/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edb890249f17668ad09ad13f14198d4a2b307413/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=edb890249f17668ad09ad13f14198d4a2b307413", "patch": "@@ -579,7 +579,7 @@ c_print_identifier (FILE *file, tree node, int indent)\n     {\n       tree rid = ridpointers[C_RID_CODE (node)];\n       indent_to (file, indent + 4);\n-      fprintf (file, \"rid %p \\\"%s\\\"\",\n+      fprintf (file, \"rid \" HOST_PTR_PRINTF \" \\\"%s\\\"\",\n \t       (void *) rid, IDENTIFIER_POINTER (rid));\n     }\n }"}, {"sha": "c02f39bf937e4a2a8617bf688651db9e82fe4e9c", "filename": "gcc/doc/hostconfig.texi", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edb890249f17668ad09ad13f14198d4a2b307413/gcc%2Fdoc%2Fhostconfig.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edb890249f17668ad09ad13f14198d4a2b307413/gcc%2Fdoc%2Fhostconfig.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fhostconfig.texi?ref=edb890249f17668ad09ad13f14198d4a2b307413", "patch": "@@ -1,5 +1,6 @@\n @c Copyright (C) 1988, 1989, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999,\n-@c 2000, 2001, 2002, 2003, 2004, 2005, 2008 Free Software Foundation, Inc.\n+@c 2000, 2001, 2002, 2003, 2004, 2005, 2008, 2009\n+@c Free Software Foundation, Inc.\n @c This is part of the GCC manual.\n @c For copying conditions, see the file gccint.texi.\n \n@@ -212,6 +213,14 @@ initialization when a compilation driver is being initialized.\n If defined, the string used to indicate an argument of type @code{long\n long} to functions like @code{printf}.  The default value is\n @code{\"ll\"}. \n+\n+@item HOST_LONG_FORMAT\n+If defined, the string used to indicate an argument of type @code{long}\n+to functions like @code{printf}.  The default value is @code{\"l\"}. \n+\n+@item HOST_PTR_PRINTF\n+If defined, the string used to indicate an argument of type @code{void *}\n+to functions like @code{printf}.  The default value is @code{\"%p\"}. \n @end ftable\n \n In addition, if @command{configure} generates an incorrect definition of"}, {"sha": "32f88062df38dccdcf220d9bcc9b427925be6773", "filename": "gcc/hwint.h", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edb890249f17668ad09ad13f14198d4a2b307413/gcc%2Fhwint.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edb890249f17668ad09ad13f14198d4a2b307413/gcc%2Fhwint.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhwint.h?ref=edb890249f17668ad09ad13f14198d4a2b307413", "patch": "@@ -1,5 +1,5 @@\n /* HOST_WIDE_INT definitions for the GNU compiler.\n-   Copyright (C) 1998, 2002, 2004, 2008 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 2002, 2004, 2008, 2009 Free Software Foundation, Inc.\n \n    This file is part of GCC.\n \n@@ -15,6 +15,12 @@\n #define HOST_BITS_PER_INT   (CHAR_BIT * SIZEOF_INT)\n #define HOST_BITS_PER_LONG  (CHAR_BIT * SIZEOF_LONG)\n \n+/* The string that should be inserted into a printf style format to\n+   indicate a \"long\" operand.  */\n+#ifndef HOST_LONG_FORMAT \n+#define HOST_LONG_FORMAT \"l\"\n+#endif\n+\n /* The string that should be inserted into a printf style format to\n    indicate a \"long long\" operand.  */\n #ifndef HOST_LONG_LONG_FORMAT \n@@ -70,14 +76,16 @@ extern char sizeof_long_long_must_be_8[sizeof(long long) == 8 ? 1 : -1];\n /* Various printf format strings for HOST_WIDE_INT.  */\n \n #if HOST_BITS_PER_WIDE_INT == HOST_BITS_PER_LONG\n-# define HOST_WIDE_INT_PRINT \"l\"\n+# define HOST_WIDE_INT_PRINT HOST_LONG_FORMAT\n # define HOST_WIDE_INT_PRINT_C \"L\"\n   /* 'long' might be 32 or 64 bits, and the number of leading zeroes\n      must be tweaked accordingly.  */\n # if HOST_BITS_PER_WIDE_INT == 64\n-#  define HOST_WIDE_INT_PRINT_DOUBLE_HEX \"0x%lx%016lx\"\n+#  define HOST_WIDE_INT_PRINT_DOUBLE_HEX \\\n+     \"0x%\" HOST_LONG_FORMAT \"x%016\" HOST_LONG_FORMAT \"x\"\n # else\n-#  define HOST_WIDE_INT_PRINT_DOUBLE_HEX \"0x%lx%08lx\"\n+#  define HOST_WIDE_INT_PRINT_DOUBLE_HEX \\\n+     \"0x%\" HOST_LONG_FORMAT \"x%08\" HOST_LONG_FORMAT \"x\"\n # endif\n #else\n # define HOST_WIDE_INT_PRINT HOST_LONG_LONG_FORMAT"}, {"sha": "dfd630867daadff5bf777e7d757298d65e8bcd9e", "filename": "gcc/mips-tfile.c", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edb890249f17668ad09ad13f14198d4a2b307413/gcc%2Fmips-tfile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edb890249f17668ad09ad13f14198d4a2b307413/gcc%2Fmips-tfile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmips-tfile.c?ref=edb890249f17668ad09ad13f14198d4a2b307413", "patch": "@@ -3993,7 +3993,8 @@ write_varray (varray_t *vp,    /* virtual array */\n     return;\n \n   if (debug)\n-    fprintf (stderr, \"\\twarray\\tvp = %p, offset = %7lu, size = %7lu, %s\\n\",\n+    fprintf (stderr, \"\\twarray\\tvp = \" HOST_PTR_PRINTF\n+\t    \", offset = %7lu, size = %7lu, %s\\n\",\n \t     (void *) vp, (unsigned long) offset,\n \t     vp->num_allocated * vp->object_size, str);\n \n@@ -4032,7 +4033,8 @@ write_object (void)\n   off_t offset;\n \n   if (debug)\n-    fprintf (stderr, \"\\n\\twrite\\tvp = %p, offset = %7u, size = %7lu, %s\\n\",\n+    fprintf (stderr, \"\\n\\twrite\\tvp = \" HOST_PTR_PRINTF\n+\t    \", offset = %7u, size = %7lu, %s\\n\",\n \t     (void *) &symbolic_header, 0,\n \t     (unsigned long) sizeof (symbolic_header), \"symbolic header\");\n \n@@ -4062,7 +4064,8 @@ write_object (void)\n \tpfatal_with_name (object_name);\n \n       if (debug)\n-\tfprintf (stderr, \"\\twrite\\tvp = %p, offset = %7lu, size = %7lu, %s\\n\",\n+\tfprintf (stderr, \"\\twrite\\tvp = \" HOST_PTR_PRINTF\n+\t\t\", offset = %7lu, size = %7lu, %s\\n\",\n \t\t (void *) &orig_linenum, (long) symbolic_header.cbLineOffset,\n \t\t (long) symbolic_header.cbLine, \"Line numbers\");\n \n@@ -4093,7 +4096,8 @@ write_object (void)\n \tpfatal_with_name (object_name);\n \n       if (debug)\n-\tfprintf (stderr, \"\\twrite\\tvp = %p, offset = %7lu, size = %7lu, %s\\n\",\n+\tfprintf (stderr, \"\\twrite\\tvp = \" HOST_PTR_PRINTF\n+\t\t\", offset = %7lu, size = %7lu, %s\\n\",\n \t\t (void *) &orig_opt_syms, (long) symbolic_header.cbOptOffset,\n \t\t num_write, \"Optimizer symbols\");\n \n@@ -4181,7 +4185,8 @@ write_object (void)\n \t   file_ptr = file_ptr->next_file)\n \t{\n \t  if (debug)\n-\t    fprintf (stderr, \"\\twrite\\tvp = %p, offset = %7lu, size = %7lu, %s\\n\",\n+\t    fprintf (stderr, \"\\twrite\\tvp = \" HOST_PTR_PRINTF\n+\t\t    \", offset = %7lu, size = %7lu, %s\\n\",\n \t\t     (void *) &file_ptr->fdr, file_offset,\n \t\t     (unsigned long) sizeof (FDR), \"File header\");\n \n@@ -4213,7 +4218,8 @@ write_object (void)\n \tpfatal_with_name (object_name);\n \n       if (debug)\n-\tfprintf (stderr, \"\\twrite\\tvp = %p, offset = %7lu, size = %7lu, %s\\n\",\n+\tfprintf (stderr, \"\\twrite\\tvp = \" HOST_PTR_PRINTF\n+\t\t\", offset = %7lu, size = %7lu, %s\\n\",\n \t\t (void *) &orig_rfds, (long) symbolic_header.cbRfdOffset,\n \t\t num_write, \"Relative file descriptors\");\n \n@@ -5006,7 +5012,7 @@ allocate_cluster (Size_t npages)\n     pfatal_with_name (\"allocate_cluster\");\n \n   if (debug > 3)\n-    fprintf (stderr, \"\\talloc\\tnpages = %lu, value = %p\\n\",\n+    fprintf (stderr, \"\\talloc\\tnpages = %lu, value = \" HOST_PTR_PRINTF \"\\n\",\n \t     (unsigned long) npages, (void *) ptr);\n \n   return ptr;"}, {"sha": "26f467cba8e113e2237b4dad3fb061cb6a95ab36", "filename": "gcc/print-tree.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edb890249f17668ad09ad13f14198d4a2b307413/gcc%2Fprint-tree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edb890249f17668ad09ad13f14198d4a2b307413/gcc%2Fprint-tree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprint-tree.c?ref=edb890249f17668ad09ad13f14198d4a2b307413", "patch": "@@ -1,6 +1,7 @@\n /* Prints out tree in human readable form - GCC\n    Copyright (C) 1990, 1991, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000,\n-   2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008 Free Software Foundation, Inc.\n+   2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009\n+   Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -66,7 +67,7 @@ dump_addr (FILE *file, const char *prefix, const void *addr)\n   if (flag_dump_noaddr || flag_dump_unnumbered)\n     fprintf (file, \"%s#\", prefix);\n   else\n-    fprintf (file, \"%s%p\", prefix, addr);\n+    fprintf (file, \"%s\" HOST_PTR_PRINTF, prefix, addr);\n }\n \n /* Print a node in brief fashion, with just the code, address and name.  */"}, {"sha": "b74e0e5df2f972bbb5f552d2c438ca55d0db296b", "filename": "gcc/system.h", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edb890249f17668ad09ad13f14198d4a2b307413/gcc%2Fsystem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edb890249f17668ad09ad13f14198d4a2b307413/gcc%2Fsystem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsystem.h?ref=edb890249f17668ad09ad13f14198d4a2b307413", "patch": "@@ -518,6 +518,11 @@ extern int vsnprintf(char *, size_t, const char *, va_list);\n # define mkdir(a,b) mkdir(a)\n #endif\n \n+/* Provide a way to print an address via printf.  */\n+#ifndef HOST_PTR_PRINTF\n+#define HOST_PTR_PRINTF \"%p\"\n+#endif /* ! HOST_PTR_PRINTF */\n+\n /* By default, colon separates directories in a path.  */\n #ifndef PATH_SEPARATOR\n #define PATH_SEPARATOR ':'\n@@ -742,7 +747,7 @@ extern void fancy_abort (const char *, int, const char *) ATTRIBUTE_NORETURN;\n         TARGET_ESC TARGET_FF TARGET_NEWLINE TARGET_TAB TARGET_VT\t   \\\n         LINK_LIBGCC_SPECIAL DONT_ACCESS_GBLS_AFTER_EPILOGUE\t\t   \\\n \tTARGET_OPTIONS TARGET_SWITCHES EXTRA_CC_MODES FINALIZE_PIC\t   \\\n-\tPREDICATE_CODES SPECIAL_MODE_PREDICATES HOST_PTR_PRINTF\t\t   \\\n+\tPREDICATE_CODES SPECIAL_MODE_PREDICATES\t\t\t\t   \\\n \tEXTRA_SECTIONS EXTRA_SECTION_FUNCTIONS READONLY_DATA_SECTION\t   \\\n \tTARGET_ASM_EXCEPTION_SECTION TARGET_ASM_EH_FRAME_SECTION\t   \\\n \tSMALL_ARG_MAX ASM_OUTPUT_SHARED_BSS ASM_OUTPUT_SHARED_COMMON\t   \\"}]}