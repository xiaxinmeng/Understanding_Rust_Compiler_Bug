{"sha": "3dafc5c376b39bdf5202807d5f8c209e34faea7a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2RhZmM1YzM3NmIzOWJkZjUyMDI4MDdkNWY4YzIwOWUzNGZhZWE3YQ==", "commit": {"author": {"name": "Richard Earnshaw", "email": "erich@gnu.org", "date": "1996-02-12T16:51:54Z"}, "committer": {"name": "Richard Earnshaw", "email": "erich@gnu.org", "date": "1996-02-12T16:51:54Z"}, "message": "arm.md (all DImode output patterns): Use print code 'Q' to access the least significant word.\n\n\t* arm/arm.md (all DImode output patterns): Use print code\n\t'Q' to access the least significant word.  Make sure the\n\tpatterns are fully aware of the word endianness.\n\nFrom-SVN: r11212", "tree": {"sha": "161afac8552a552880baf1cbbdb7d0c5999ed21d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/161afac8552a552880baf1cbbdb7d0c5999ed21d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3dafc5c376b39bdf5202807d5f8c209e34faea7a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3dafc5c376b39bdf5202807d5f8c209e34faea7a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3dafc5c376b39bdf5202807d5f8c209e34faea7a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3dafc5c376b39bdf5202807d5f8c209e34faea7a/comments", "author": null, "committer": null, "parents": [{"sha": "ddee6abad9055f8747b9d228330e9921d8cdec4b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddee6abad9055f8747b9d228330e9921d8cdec4b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ddee6abad9055f8747b9d228330e9921d8cdec4b"}], "stats": {"total": 82, "additions": 41, "deletions": 41}, "files": [{"sha": "af7a7f627464de518c9d81e6ca6bdfe246a3cae9", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 41, "deletions": 41, "changes": 82, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3dafc5c376b39bdf5202807d5f8c209e34faea7a/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3dafc5c376b39bdf5202807d5f8c209e34faea7a/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=3dafc5c376b39bdf5202807d5f8c209e34faea7a", "patch": "@@ -240,29 +240,29 @@\n \t\t (match_operand:DI 2 \"s_register_operand\" \"r,0\")))\n    (clobber (reg:CC 24))]\n   \"\"\n-  \"adds\\\\t%0, %1, %2\\;adc\\\\t%R0, %R1, %R2\"\n+  \"adds\\\\t%Q0, %Q1, %Q2\\;adc\\\\t%R0, %R1, %R2\"\n [(set_attr \"conds\" \"clob\")\n  (set_attr \"length\" \"8\")])\n \n (define_insn \"*adddi_sesidi_di\"\n   [(set (match_operand:DI 0 \"s_register_operand\" \"=&r,&r\")\n \t(plus:DI (sign_extend:DI\n-\t\t  (match_operand:SI 1 \"s_register_operand\" \"r,r\"))\n-\t\t (match_operand:DI 2 \"s_register_operand\" \"r,0\")))\n+\t\t  (match_operand:SI 2 \"s_register_operand\" \"r,r\"))\n+\t\t (match_operand:DI 1 \"s_register_operand\" \"r,0\")))\n    (clobber (reg:CC 24))]\n   \"\"\n-  \"adds\\\\t%0, %2, %1\\;adc\\\\t%R0, %R2, %1, asr #31\"\n+  \"adds\\\\t%Q0, %Q1, %2\\;adc\\\\t%R0, %R1, %2, asr #31\"\n [(set_attr \"conds\" \"clob\")\n  (set_attr \"length\" \"8\")])\n \n (define_insn \"*adddi_zesidi_di\"\n   [(set (match_operand:DI 0 \"s_register_operand\" \"=&r,&r\")\n \t(plus:DI (zero_extend:DI\n-\t\t  (match_operand:SI 1 \"s_register_operand\" \"r,r\"))\n-\t\t (match_operand:DI 2 \"s_register_operand\" \"r,0\")))\n+\t\t  (match_operand:SI 2 \"s_register_operand\" \"r,r\"))\n+\t\t (match_operand:DI 1 \"s_register_operand\" \"r,0\")))\n    (clobber (reg:CC 24))]\n   \"\"\n-  \"adds\\\\t%0, %2, %1\\;adc\\\\t%R0, %R2, #0\"\n+  \"adds\\\\t%Q0, %Q1, %2\\;adc\\\\t%R0, %R1, #0\"\n [(set_attr \"conds\" \"clob\")\n  (set_attr \"length\" \"8\")])\n \n@@ -466,7 +466,7 @@\n \t\t  (match_operand:DI 2 \"s_register_operand\" \"r,0,0\")))\n    (clobber (reg:CC 24))]\n   \"\"\n-  \"subs\\\\t%0, %1, %2\\;sbc\\\\t%R0, %R1, %R2\"\n+  \"subs\\\\t%Q0, %Q1, %Q2\\;sbc\\\\t%R0, %R1, %R2\"\n [(set_attr \"conds\" \"clob\")\n  (set_attr \"length\" \"8\")])\n \n@@ -477,7 +477,7 @@\n \t\t   (match_operand:SI 2 \"s_register_operand\" \"r,r\"))))\n    (clobber (reg:CC 24))]\n   \"\"\n-  \"subs\\\\t%0, %1, %2\\;sbc\\\\t%R0, %R1, #0\"\n+  \"subs\\\\t%Q0, %Q1, %2\\;sbc\\\\t%R0, %R1, #0\"\n [(set_attr \"conds\" \"clob\")\n  (set_attr \"length\" \"8\")])\n \n@@ -488,7 +488,7 @@\n \t\t   (match_operand:SI 2 \"s_register_operand\" \"r,r\"))))\n    (clobber (reg:CC 24))]\n   \"\"\n-  \"subs\\\\t%0, %1, %2\\;sbc\\\\t%R0, %R1, %2, asr #31\"\n+  \"subs\\\\t%Q0, %Q1, %2\\;sbc\\\\t%R0, %R1, %2, asr #31\"\n [(set_attr \"conds\" \"clob\")\n  (set_attr \"length\" \"8\")])\n \n@@ -499,7 +499,7 @@\n \t\t  (match_operand:DI 1 \"s_register_operand\" \"?r,0\")))\n    (clobber (reg:CC 24))]\n   \"\"\n-  \"rsbs\\\\t%0, %1, %2\\;rsc\\\\t%R0, %R1, #0\"\n+  \"rsbs\\\\t%Q0, %Q1, %2\\;rsc\\\\t%R0, %R1, #0\"\n [(set_attr \"conds\" \"clob\")\n  (set_attr \"length\" \"8\")])\n \n@@ -510,7 +510,7 @@\n \t\t  (match_operand:DI 1 \"s_register_operand\" \"?r,0\")))\n    (clobber (reg:CC 24))]\n   \"\"\n-  \"rsbs\\\\t%0, %1, %2\\;rsc\\\\t%R0, %R1, %2, asr #31\"\n+  \"rsbs\\\\t%Q0, %Q1, %2\\;rsc\\\\t%R0, %R1, %2, asr #31\"\n [(set_attr \"conds\" \"clob\")\n  (set_attr \"length\" \"8\")])\n \n@@ -522,7 +522,7 @@\n \t\t   (match_operand:SI 2 \"s_register_operand\" \"r\"))))\n    (clobber (reg:CC 24))]\n   \"\"\n-  \"subs\\\\t%0, %1, %2\\;rsc\\\\t%R0, %1, %1\"\n+  \"subs\\\\t%Q0, %1, %2\\;rsc\\\\t%R0, %1, %1\"\n [(set_attr \"conds\" \"clob\")\n  (set_attr \"length\" \"8\")])\n \n@@ -734,7 +734,7 @@\n                (sign_extend:DI\n                (match_operand:SI 2 \"s_register_operand\" \"r\"))))]\n   \"arm_fast_multiply\"\n-  \"smull%?\\\\t%0, %R0, %1, %2\"\n+  \"smull%?\\\\t%Q0, %R0, %1, %2\"\n [(set_attr \"type\" \"mult\")])\n \n (define_insn \"umulsidi3\"\n@@ -744,7 +744,7 @@\n                (zero_extend:DI\n                 (match_operand:SI 2 \"s_register_operand\" \"r\"))))]\n   \"arm_fast_multiply\"\n-  \"umull%?\\\\t%0, %R0, %1, %2\"\n+  \"umull%?\\\\t%Q0, %R0, %1, %2\"\n [(set_attr \"type\" \"mult\")])\n \n (define_insn \"mulsf3\"\n@@ -920,7 +920,7 @@\n \t(and:DI (match_operand:DI 1 \"s_register_operand\" \"%0,0\")\n \t\t(match_operand:DI 2 \"s_register_operand\" \"r,0\")))]\n   \"\"\n-  \"and%?\\\\t%0, %1, %2\\;and%?\\\\t%R0, %R1, %R2\"\n+  \"and%?\\\\t%Q0, %Q1, %Q2\\;and%?\\\\t%R0, %R1, %R2\"\n [(set_attr \"length\" \"8\")])\n \n (define_insn \"*anddi_zesidi_di\"\n@@ -929,7 +929,7 @@\n \t\t (match_operand:SI 2 \"s_register_operand\" \"r,r\"))\n \t\t(match_operand:DI 1 \"s_register_operand\" \"?r,0\")))]\n   \"\"\n-  \"and%?\\\\t%0, %1, %2\\;mov%?\\\\t%R0, #0\"\n+  \"and%?\\\\t%Q0, %Q1, %2\\;mov%?\\\\t%R0, #0\"\n [(set_attr \"length\" \"8\")])\n \n (define_insn \"*anddi_sesdi_di\"\n@@ -938,7 +938,7 @@\n \t\t (match_operand:SI 2 \"s_register_operand\" \"r,r\"))\n \t\t(match_operand:DI 1 \"s_register_operand\" \"?r,0\")))]\n   \"\"\n-  \"and%?\\\\t%0, %1, %2\\;and%?\\\\t%R0, %R1, %2, asr #31\"\n+  \"and%?\\\\t%Q0, %Q1, %2\\;and%?\\\\t%R0, %R1, %2, asr #31\"\n [(set_attr \"length\" \"8\")])\n \n (define_expand \"andsi3\"\n@@ -1065,7 +1065,7 @@\n \t(and:DI (not:DI (match_operand:DI 2 \"s_register_operand\" \"r,0\"))\n \t\t(match_operand:DI 1 \"s_register_operand\" \"0,r\")))]\n   \"\"\n-  \"bic%?\\\\t%0, %1, %2\\;bic%?\\\\t%R0, %R1, %R2\"\n+  \"bic%?\\\\t%Q0, %Q1, %Q2\\;bic%?\\\\t%R0, %R1, %R2\"\n [(set_attr \"length\" \"8\")])\n   \n (define_insn \"*anddi_notzesidi_di\"\n@@ -1075,8 +1075,8 @@\n \t\t(match_operand:DI 1 \"s_register_operand\" \"0,?r\")))]\n   \"\"\n   \"@\n-   bic%?\\\\t%0, %1, %2\n-   bic%?\\\\t%0, %1, %2\\;mov%?\\\\t%R0, %R1\"\n+   bic%?\\\\t%Q0, %Q1, %2\n+   bic%?\\\\t%Q0, %Q1, %2\\;mov%?\\\\t%R0, %R1\"\n [(set_attr \"length\" \"4,8\")])\n   \n (define_insn \"*anddi_notsesidi_di\"\n@@ -1085,7 +1085,7 @@\n \t\t\t (match_operand:SI 2 \"s_register_operand\" \"r,r\")))\n \t\t(match_operand:DI 1 \"s_register_operand\" \"?r,0\")))]\n   \"\"\n-  \"bic%?\\\\t%0, %1, %2\\;bic%?\\\\t%R0, %R1, %2, asr #31\"\n+  \"bic%?\\\\t%Q0, %Q1, %2\\;bic%?\\\\t%R0, %R1, %2, asr #31\"\n [(set_attr \"length\" \"8\")])\n   \n (define_insn \"*andsi_notsi_si\"\n@@ -1123,7 +1123,7 @@\n \t(ior:DI (match_operand:DI 1 \"s_register_operand\" \"%0\")\n \t\t(match_operand:DI 2 \"s_register_operand\" \"r\")))]\n   \"\"\n-  \"orr%?\\\\t%0, %1, %2\\;orr%?\\\\t%R0, %R1, %R2\"\n+  \"orr%?\\\\t%Q0, %Q1, %Q2\\;orr%?\\\\t%R0, %R1, %R2\"\n [(set_attr \"length\" \"8\")])\n \n (define_insn \"*iordi_zesidi_di\"\n@@ -1133,8 +1133,8 @@\n \t\t(match_operand:DI 1 \"s_register_operand\" \"0,?r\")))]\n   \"\"\n   \"@\n-   orr%?\\\\t%0, %1, %2\n-   orr%?\\\\t%0, %1, %2\\;mov%?\\\\t%R0, %R1\"\n+   orr%?\\\\t%Q0, %Q1, %2\n+   orr%?\\\\t%Q0, %Q1, %2\\;mov%?\\\\t%R0, %R1\"\n [(set_attr \"length\" \"4,8\")])\n \n (define_insn \"*iordi_sesidi_di\"\n@@ -1143,7 +1143,7 @@\n \t\t (match_operand:SI 2 \"s_register_operand\" \"r,r\"))\n \t\t(match_operand:DI 1 \"s_register_operand\" \"?r,0\")))]\n   \"\"\n-  \"orr%?\\\\t%0, %1, %2\\;orr%?\\\\t%R0, %R1, %2, asr #31\"\n+  \"orr%?\\\\t%Q0, %Q1, %2\\;orr%?\\\\t%R0, %R1, %2, asr #31\"\n [(set_attr \"length\" \"8\")])\n \n (define_expand \"iorsi3\"\n@@ -1210,7 +1210,7 @@\n \t(xor:DI (match_operand:DI 1 \"s_register_operand\" \"%0,0\")\n \t\t(match_operand:DI 2 \"s_register_operand\" \"r,0\")))]\n   \"\"\n-  \"eor%?\\\\t%0, %1, %2\\;eor%?\\\\t%R0, %R1, %R2\"\n+  \"eor%?\\\\t%Q0, %Q1, %Q2\\;eor%?\\\\t%R0, %R1, %R2\"\n [(set_attr \"length\" \"8\")])\n \n (define_insn \"*xordi_zesidi_di\"\n@@ -1220,8 +1220,8 @@\n \t\t(match_operand:DI 1 \"s_register_operand\" \"0,?r\")))]\n   \"\"\n   \"@\n-   eor%?\\\\t%0, %1, %2\n-   eor%?\\\\t%0, %1, %2\\;mov%?\\\\t%R0, %R1\"\n+   eor%?\\\\t%Q0, %Q1, %2\n+   eor%?\\\\t%Q0, %Q1, %2\\;mov%?\\\\t%R0, %R1\"\n [(set_attr \"length\" \"4,8\")])\n \n (define_insn \"*xordi_sesidi_di\"\n@@ -1230,7 +1230,7 @@\n \t\t (match_operand:SI 2 \"s_register_operand\" \"r,r\"))\n \t\t(match_operand:DI 1 \"s_register_operand\" \"?r,0\")))]\n   \"\"\n-  \"eor%?\\\\t%0, %1, %2\\;eor%?\\\\t%R0, %R1, %2, asr #31\"\n+  \"eor%?\\\\t%Q0, %Q1, %2\\;eor%?\\\\t%R0, %R1, %2, asr #31\"\n [(set_attr \"length\" \"8\")])\n \n (define_insn \"xorsi3\"\n@@ -1525,7 +1525,7 @@\n   [(set (match_operand:DI 0 \"s_register_operand\" \"=&r,&r\")\n \t(neg:DI (match_operand:DI 1 \"s_register_operand\" \"?r,0\")))]\n   \"\"\n-  \"rsbs\\\\t%0, %1, #0\\;rsc\\\\t%R0, %R1, #0\"\n+  \"rsbs\\\\t%Q0, %Q1, #0\\;rsc\\\\t%R0, %R1, #0\"\n [(set_attr \"conds\" \"clob\")\n  (set_attr \"length\" \"8\")])\n \n@@ -1711,7 +1711,7 @@\n   [(set (match_operand:DI 0 \"s_register_operand\" \"=&r,&r\")\n \t(not:DI (match_operand:DI 1 \"s_register_operand\" \"?r,0\")))]\n   \"\"\n-  \"mvn%?\\\\t%0, %1\\;mvn%?\\\\t%R0, %R1\"\n+  \"mvn%?\\\\t%Q0, %Q1\\;mvn%?\\\\t%R0, %R1\"\n [(set_attr \"length\" \"8\")])\n \n (define_insn \"one_cmplsi2\"\n@@ -1816,8 +1816,8 @@\n         (zero_extend:DI (match_operand:SI 1 \"s_register_operand\" \"r\")))]\n   \"\"\n   \"*\n-  if (REGNO (operands[1]) != REGNO (operands[0]))\n-    output_asm_insn (\\\"mov%?\\\\t%0, %1\\\", operands);\n+  if (REGNO (operands[1]) != REGNO (operands[0]) + (WORDS_BIG_ENDIAN ? 1 : 0))\n+    output_asm_insn (\\\"mov%?\\\\t%Q0, %1\\\", operands);\n   return \\\"mov%?\\\\t%R0, #0\\\";\n \"\n [(set_attr \"length\" \"8\")])\n@@ -1827,8 +1827,8 @@\n \t(zero_extend:DI (match_operand:QI 1 \"nonimmediate_operand\" \"r,m\")))]\n   \"\"\n   \"@\n-   and%?\\\\t%0, %1, #255\\;mov%?\\\\t%R0, #0\n-   ldr%?b\\\\t%0, %1\\;mov%?\\\\t%R0, #0\"\n+   and%?\\\\t%Q0, %1, #255\\;mov%?\\\\t%R0, #0\n+   ldr%?b\\\\t%Q0, %1\\;mov%?\\\\t%R0, #0\"\n [(set_attr \"length\" \"8\")\n  (set_attr \"type\" \"*,load\")])\n \n@@ -1837,9 +1837,9 @@\n         (sign_extend:DI (match_operand:SI 1 \"s_register_operand\" \"r\")))]\n   \"\"\n   \"*\n-  if (REGNO (operands[1]) != REGNO (operands[0]))\n-    output_asm_insn (\\\"mov%?\\\\t%0, %1\\\", operands);\n-  return \\\"mov%?\\\\t%R0, %0, asr #31\\\";\n+  if (REGNO (operands[1]) != REGNO (operands[0]) + (WORDS_BIG_ENDIAN ? 1 : 0))\n+    output_asm_insn (\\\"mov%?\\\\t%Q0, %1\\\", operands);\n+  return \\\"mov%?\\\\t%R0, %Q0, asr #31\\\";\n \"\n [(set_attr \"length\" \"8\")])\n \n@@ -2647,8 +2647,8 @@\n \n   switch (which_alternative)\n     {\n-    case 0: return \\\"ldm%?ia\\\\t%m1, {%0, %R0}\\\\t%@ double\\\";\n-    case 1: return \\\"stm%?ia\\\\t%m0, {%1, %R1}\\\\t%@ double\\\";\n+    case 0: return \\\"ldm%?ia\\\\t%m1, %M0\\\\t%@ double\\\";\n+    case 1: return \\\"stm%?ia\\\\t%m0, %M1\\\\t%@ double\\\";\n     case 2: case 3: case 4: return output_move_double (operands);\n     case 5: return \\\"mvf%?d\\\\t%0, %1\\\";\n     case 6: return \\\"mnf%?d\\\\t%0, #%N1\\\";"}]}