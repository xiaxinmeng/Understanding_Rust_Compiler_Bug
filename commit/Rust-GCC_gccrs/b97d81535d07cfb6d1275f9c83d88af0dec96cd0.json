{"sha": "b97d81535d07cfb6d1275f9c83d88af0dec96cd0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjk3ZDgxNTM1ZDA3Y2ZiNmQxMjc1ZjljODNkODhhZjBkZWM5NmNkMA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2008-04-15T15:09:42Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2008-04-15T15:09:42Z"}, "message": "re PR c/35751 (ICE with invalid variable after #pragma omp parallel)\n\n\tPR c/35751\n\t* c-decl.c (finish_decl): If extern or static var has variable\n\tsize, set TREE_TYPE (decl) to error_mark_node.\n\n\t* decl.c (layout_var_decl): If extern or static var has variable\n\tsize, set TREE_TYPE (decl) to error_mark_node.\n\n\t* gcc.dg/gomp/pr35751.c: New test.\n\t* g++.dg/gomp/pr35751.C: New test.\n\nFrom-SVN: r134317", "tree": {"sha": "4c40e08625acb5638671b72992b7c2e32dd985b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4c40e08625acb5638671b72992b7c2e32dd985b5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b97d81535d07cfb6d1275f9c83d88af0dec96cd0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b97d81535d07cfb6d1275f9c83d88af0dec96cd0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b97d81535d07cfb6d1275f9c83d88af0dec96cd0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b97d81535d07cfb6d1275f9c83d88af0dec96cd0/comments", "author": null, "committer": null, "parents": [{"sha": "4d6baa57a4398c6cebf196780553cfd9de953e2f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d6baa57a4398c6cebf196780553cfd9de953e2f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d6baa57a4398c6cebf196780553cfd9de953e2f"}], "stats": {"total": 170, "additions": 131, "deletions": 39}, "files": [{"sha": "f2c5442eb7a787edea87bcbc00d25b4de68c9359", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 9, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b97d81535d07cfb6d1275f9c83d88af0dec96cd0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b97d81535d07cfb6d1275f9c83d88af0dec96cd0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b97d81535d07cfb6d1275f9c83d88af0dec96cd0", "patch": "@@ -1,6 +1,12 @@\n+2008-04-15  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c/35751\n+\t* c-decl.c (finish_decl): If extern or static var has variable\n+\tsize, set TREE_TYPE (decl) to error_mark_node.\n+\n 2008-04-15  Rafael Espindola  <espindola@google.com>\n \n-\t* gcc/fold-const.c (tree_call_nonnegative_warnv_p): Remove local\n+\t* fold-const.c (tree_call_nonnegative_warnv_p): Remove local\n \tvariable arg1.\n \n 2008-04-15  Richard Guenther  <rguenther@suse.de>\n@@ -140,7 +146,7 @@\n \n 2008-04-10  Rafael Espindola  <espindola@google.com>\n \n-\t* gcc/tree-vrp.c (extract_range_from_binary_expr): Don't handle\n+\t* tree-vrp.c (extract_range_from_binary_expr): Don't handle\n \tTRUTH_ANDIF_EXPR or TRUTH_ORIF_EXPR.\n \t(extract_range_from_expr): The same.\n \n@@ -1057,9 +1063,9 @@\n 2008-04-02  Kai Tietz  <kai.tietz@onevision.com>\n \n \t* config.gcc: Add for x86_64-*-mingw* the t-crtfm to tbuild.\n-\t* gcc/config/i386/cygming.h (ASM_OUTPUT_DWARF_OFFSET): Add 8 byte\n+\t* config/i386/cygming.h (ASM_OUTPUT_DWARF_OFFSET): Add 8 byte\n \toffsets for 64-bit mingw.\n-\t* gcc/config/i386/i386.c (ix86_pass_by_reference): Correct calling\n+\t* config/i386/i386.c (ix86_pass_by_reference): Correct calling\n \tabi for x86_64-pc-mingw.\n \n 2008-04-02  Richard Guenther  <rguenther@suse.de>\n@@ -2449,7 +2455,7 @@\n 2008-03-15  Bjoern Haase  <bjoern.m.haase@web.de>\n \t    Anatoly Sokolov <aesok@post.ru>\n \n-\t* gcc/gcc/config/avr/avr.c (avr_arch_types): Add avr6 entry.\n+\t* config/avr/avr.c (avr_arch_types): Add avr6 entry.\n \t(avr_arch): Add ARCH_AVR6.\n \t(avr_mcu_types): Add 'atmega2560' and 'atmega2561' entry.\n  \t(initial_elimination_offset): Initialize and use 'avr_pc_size' \n@@ -2458,7 +2464,7 @@\n \t(avr_assemble_integer): (Ditto.).\n \t(avr_output_addr_vec_elt): (Ditto.).\n \t(print_operand): Handle \"!\" code.\n-\t* gcc/gcc/config/avr/avr.h (TARGET_CPU_CPP_BUILTINS): Add \n+\t* config/avr/avr.h (TARGET_CPU_CPP_BUILTINS): Add \n \t__AVR_3_BYTE_PC__, __AVR_2_BYTE_PC__ and __AVR_HAVE_JMP_CALL__.\n \t(AVR_HAVE_EIJMP_EICALL): Define.\n \t(AVR_3_BYTE_PC): Redefine.\n@@ -2467,18 +2473,18 @@\n \t(LINK_SPEC): Add atmega2560 and atmega2561.\n \t(CRT_BINUTILS_SPEC): Add atmega2560 (crtm2560.o) and atmega2561 \n \t(crtm2561.o).\n-\t* gcc/gcc/config/avr/avr.md (call_insn): Use eicall instead of icall \n+\t* config/avr/avr.md (call_insn): Use eicall instead of icall \n \tfor 3 byte PC devices.\n \t(call_value_insn): (Ditto.).\n \t(*tablejump_enh): Use eijmp instead of ijmp for 3 byte PC devices.\n \t(indirect_jump): Use only for for 2 byte PC devices.\n \t(*tablejump): (Ditto.).\n \t(*indirect_jump_avr6): Add insn.\n \t(*tablejump_rjmp): Don't use for 3 byte PC devices.\n-\t* gcc/gcc/config/avr/libgcc.S (__prologue_saves__): Use eijmp \n+\t* config/avr/libgcc.S (__prologue_saves__): Use eijmp \n \tinstead of ijmp for 3 byte PC devices.\n \t(__tablejump2__): (Ditto.).\n-\t* gcc/gcc/config/avr/t-avr (MULITLIB_OPTIONS): Add avr6 architecture.\n+\t* config/avr/t-avr (MULITLIB_OPTIONS): Add avr6 architecture.\n \t(MULITLIB_DIRNAMES): (Ditto.). \n \t(MULTILIB_MATCHES): Add atmega2560 and atmega2561 to list.\n "}, {"sha": "872fb8af30b8c52ced58ed894eb33323364a3daa", "filename": "gcc/c-decl.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b97d81535d07cfb6d1275f9c83d88af0dec96cd0/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b97d81535d07cfb6d1275f9c83d88af0dec96cd0/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=b97d81535d07cfb6d1275f9c83d88af0dec96cd0", "patch": "@@ -3481,7 +3481,10 @@ finish_decl (tree decl, tree init, tree asmspec_tree)\n \t  if (TREE_CODE (DECL_SIZE (decl)) == INTEGER_CST)\n \t    constant_expression_warning (DECL_SIZE (decl));\n \t  else\n-\t    error (\"storage size of %q+D isn%'t constant\", decl);\n+\t    {\n+\t      error (\"storage size of %q+D isn%'t constant\", decl);\n+\t      TREE_TYPE (decl) = error_mark_node;\n+\t    }\n \t}\n \n       if (TREE_USED (type))"}, {"sha": "22a7420523d62bff5c7cc2fc2dc72c1b5fd54ecd", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 15, "deletions": 9, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b97d81535d07cfb6d1275f9c83d88af0dec96cd0/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b97d81535d07cfb6d1275f9c83d88af0dec96cd0/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=b97d81535d07cfb6d1275f9c83d88af0dec96cd0", "patch": "@@ -1,3 +1,9 @@\n+2008-04-15  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c/35751\n+\t* decl.c (layout_var_decl): If extern or static var has variable\n+\tsize, set TREE_TYPE (decl) to error_mark_node.\n+\n 2008-04-16  Danny Smith  <dannysmith@users.sourceforge.net>\n \n        PR target/35921\n@@ -2334,7 +2340,7 @@\n \n 2007-09-05  Jan Hubicka  <jh@suse.cz>\n \n-\t* cp/sematics.c (expand_body): Remove unnecesary import_export_decl\n+\t* sematics.c (expand_body): Remove unnecesary import_export_decl\n \tcall, DECL_EXTERNAL checks and current_function_decl saving.\n \n 2007-09-05  Paolo Carlini  <pcarlini@suse.de>\n@@ -2761,7 +2767,7 @@\n \n \t* cp-objcp-common.c (cxx_get_alias_set): Change return type to\n \talias_set_type.\n-\t* cp/cp-tree.h (cxx_get_alias_set): Update declaration.\n+\t* cp-tree.h (cxx_get_alias_set): Update declaration.\n \n 2007-08-10  Ollie Wild  <aaw@google.com>\n \n@@ -3434,7 +3440,7 @@\n \n 2007-05-11  Silvius Rus  <rus@google.com>\n \n-\t* cp/typeck.c (build_indirect_ref): Add call to\n+\t* typeck.c (build_indirect_ref): Add call to\n \tstrict_aliasing_warning.\n \t(build_reinterpret_cast_1): Condition call to\n \tstrict_aliasing_warning. \n@@ -3524,7 +3530,7 @@\n \n 2007-04-23  Jan Hubicka  <jh@suse.cz>\n \n-\t* cp/decl2.c (finish_objects): Do not call target constructor/destructor\n+\t* decl2.c (finish_objects): Do not call target constructor/destructor\n \tbits dirrectly.\n \n 2007-04-21  Andrew Pinski  <andrew_pinski@playstation.sony.com>\n@@ -3546,7 +3552,7 @@\n 2007-04-16  Seongbae Park <seongbae.park@gmail.com>\n \n \tPR c++/29365\n-\t* cp/decl2.c (constrain_class_visibility):\n+\t* decl2.c (constrain_class_visibility):\n \tDo not warn about the use of anonymous namespace in the main input file.\n \n 2007-04-15  Mark Mitchell  <mark@codesourcery.com>\n@@ -3565,7 +3571,7 @@\n \n 2007-04-11  Jan Hubicka  <jh@suse.cz>\n \n-\t* cp/class.c (convert_to_base_statically): Fold produced tree; verify\n+\t* class.c (convert_to_base_statically): Fold produced tree; verify\n \tthat we are not processing template_decl.\n \n 2007-04-09  Mark Mitchell  <mark@codesourcery.com>\n@@ -3820,7 +3826,7 @@\n \n 2007-03-14  Dirk Mueller  <dmueller@suse.de>\n \n-\t* cp/semantics.c (c_finish_if_stmt): Call empty_if_body_warning.\n+\t* semantics.c (c_finish_if_stmt): Call empty_if_body_warning.\n \t(finish_do_body): Warn about empty body in do/while statement.\n \n 2007-03-14  Manuel Lopez-Ibanez  <manu@gcc.gnu.org>\n@@ -3835,7 +3841,7 @@\n \t\n 2007-03-13  Alexandre Oliva  <aoliva@redhat.com>\n \n-\t* cp/repo.c (init_repo): Initialize random_seed saved options.\n+\t* repo.c (init_repo): Initialize random_seed saved options.\n \t(finish_repo): Adjust.\n \n 2007-03-13  Mark Mitchell  <mark@codesourcery.com>\n@@ -4089,7 +4095,7 @@\n \n 2007-03-09  Dirk Mueller  <dmueller@suse.de>\n \n-\t* cp/call.c (build_new_op): Call warn_logical_operator.\n+\t* call.c (build_new_op): Call warn_logical_operator.\n \n 2007-03-08  Volker Reichelt  <reichelt@netcologne.de>\n "}, {"sha": "66e8f426b63d1a64b35cdac571571272b8c11a40", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b97d81535d07cfb6d1275f9c83d88af0dec96cd0/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b97d81535d07cfb6d1275f9c83d88af0dec96cd0/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=b97d81535d07cfb6d1275f9c83d88af0dec96cd0", "patch": "@@ -4442,7 +4442,10 @@ layout_var_decl (tree decl)\n       if (TREE_CODE (DECL_SIZE (decl)) == INTEGER_CST)\n \tconstant_expression_warning (DECL_SIZE (decl));\n       else\n-\terror (\"storage size of %qD isn't constant\", decl);\n+\t{\n+\t  error (\"storage size of %qD isn't constant\", decl);\n+\t  TREE_TYPE (decl) = error_mark_node;\n+\t}\n     }\n }\n "}, {"sha": "892576ed4b47cca2ecefd5c7b47378b5d86b311e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 25, "deletions": 19, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b97d81535d07cfb6d1275f9c83d88af0dec96cd0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b97d81535d07cfb6d1275f9c83d88af0dec96cd0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b97d81535d07cfb6d1275f9c83d88af0dec96cd0", "patch": "@@ -1,3 +1,9 @@\n+2008-04-15  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c/35751\n+\t* gcc.dg/gomp/pr35751.c: New test.\n+\t* g++.dg/gomp/pr35751.C: New test.\n+\n 2008-04-15  Samuel Tardieu  <sam@rfc1149.net>\n \n \tPR ada/16086\n@@ -1458,7 +1464,7 @@\n \n 2008-02-29  Sebastian Pop  <sebastian.pop@amd.com>\n \n-\t* testsuite/gcc.dg/tree-ssa/ltrans-8.c: Increase the size of strides\n+\t* gcc.dg/tree-ssa/ltrans-8.c: Increase the size of strides\n \tto make the interchange profitable.\n \n 2008-02-28  Daniel Franke  <franke.daniel@gmail.com>\n@@ -1481,20 +1487,20 @@\n \n 2008-02-28  Sebastian Pop  <sebastian.pop@amd.com>\n \n-\t* testsuite/gcc.dg/tree-ssa/ldist-1.c: New.\n-\t* testsuite/gcc.dg/tree-ssa/ldist-1a.c: New.\n-\t* testsuite/gcc.dg/tree-ssa/ldist-2.c: New.\n-\t* testsuite/gcc.dg/tree-ssa/ldist-3.c: New.\n-\t* testsuite/gcc.dg/tree-ssa/ldist-4.c: New.\n-\t* testsuite/gcc.dg/tree-ssa/ldist-5.c: New.\n-\t* testsuite/gcc.dg/tree-ssa/ldist-6.c: New.\n-\t* testsuite/gcc.dg/tree-ssa/ldist-7.c: New.\n-\t* testsuite/gcc.dg/tree-ssa/ldist-8.c: New.\n-\t* testsuite/gcc.dg/tree-ssa/ldist-9.c: New.\n-\t* testsuite/gcc.dg/tree-ssa/ldist-10.c: New.\n-\t* testsuite/gcc.dg/tree-ssa/ldist-11.c: New.\n-\t* testsuite/gcc.dg/tree-ssa/ldist-12.c: New.\n-\t* testsuite/gfortran.dg/ldist-1.f90: New.\n+\t* gcc.dg/tree-ssa/ldist-1.c: New.\n+\t* gcc.dg/tree-ssa/ldist-1a.c: New.\n+\t* gcc.dg/tree-ssa/ldist-2.c: New.\n+\t* gcc.dg/tree-ssa/ldist-3.c: New.\n+\t* gcc.dg/tree-ssa/ldist-4.c: New.\n+\t* gcc.dg/tree-ssa/ldist-5.c: New.\n+\t* gcc.dg/tree-ssa/ldist-6.c: New.\n+\t* gcc.dg/tree-ssa/ldist-7.c: New.\n+\t* gcc.dg/tree-ssa/ldist-8.c: New.\n+\t* gcc.dg/tree-ssa/ldist-9.c: New.\n+\t* gcc.dg/tree-ssa/ldist-10.c: New.\n+\t* gcc.dg/tree-ssa/ldist-11.c: New.\n+\t* gcc.dg/tree-ssa/ldist-12.c: New.\n+\t* gfortran.dg/ldist-1.f90: New.\n \n 2008-02-28  Uros Bizjak  <ubizjak@gmail.com>\n \n@@ -1974,7 +1980,7 @@\n 2008-02-15  Dominique d'Humieres  <dominiq@lps.ens.fr>\n \n \tPR testsuite/35119\n-\t* testsuite/g++.dg/template/spec35.C: Change the regular expressions\n+\t* g++.dg/template/spec35.C: Change the regular expressions\n \tin dg-final to match the assembly code generated by Darwin 9.\n \n 2008-02-15  Uros Bizjak  <ubizjak@gmail.com>\n@@ -2182,7 +2188,7 @@\n \thttp://gcc.gnu.org/ml/gcc-patches/2008-02/msg00110.html\n \n \tPR 33738\n-\t* testsuite/g++.dg/warn/pr33738.C: New.\n+\t* g++.dg/warn/pr33738.C: New.\n \n 2008-02-04  Daniel Franke  <franke.daniel@gmail.com>\n \n@@ -2767,7 +2773,7 @@\n \n 2008-01-18  Jonathan Wakely  <jwakely.gcc@gmail.com>\n \n-\t* gcc/testsuite/g++.dg/lookup/two-stage2.C: fix comment.\n+\t* g++.dg/lookup/two-stage2.C: fix comment.\n \n 2008-01-18  Ian Lance Taylor  <iant@google.com>\n \n@@ -4430,7 +4436,7 @@\n 2007-11-20  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/34154\n-\t* testsuite/gcc.c-torture/execute/pr34154.c: New testcase.\n+\t* gcc.c-torture/execute/pr34154.c: New testcase.\n \n 2007-11-20  Uros Bizjak  <ubizjak@gmail.com>\n "}, {"sha": "0b6cded5929f4b08f880118808f58fd0a35facc3", "filename": "gcc/testsuite/g++.dg/gomp/pr35751.C", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b97d81535d07cfb6d1275f9c83d88af0dec96cd0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr35751.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b97d81535d07cfb6d1275f9c83d88af0dec96cd0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr35751.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr35751.C?ref=b97d81535d07cfb6d1275f9c83d88af0dec96cd0", "patch": "@@ -0,0 +1,34 @@\n+// PR c/35751\n+// { dg-do compile }\n+// { dg-options \"-fopenmp\" }\n+\n+void\n+foo (int i)\n+{\n+  extern int a[i];\t// { dg-error \"storage size of\" }\n+  static int b[i];\t// { dg-error \"storage size of\" }\n+\n+#pragma omp parallel\n+  {\n+    a[0] = 0;\n+    b[0] = 0;\n+  }\n+\n+#pragma omp parallel shared (a, b)\n+  {\n+    a[0] = 0;\n+    b[0] = 0;\n+  }\n+\n+#pragma omp parallel private (a, b)\n+  {\n+    a[0] = 0;\n+    b[0] = 0;\n+  }\n+\n+#pragma omp parallel firstprivate (a, b)\n+  {\n+    a[0] = 0;\n+    b[0] = 0;\n+  }\n+}"}, {"sha": "f7777a5b79a526306bf578bf5401c4208a9de147", "filename": "gcc/testsuite/gcc.dg/gomp/pr35751.c", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b97d81535d07cfb6d1275f9c83d88af0dec96cd0/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fpr35751.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b97d81535d07cfb6d1275f9c83d88af0dec96cd0/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fpr35751.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fpr35751.c?ref=b97d81535d07cfb6d1275f9c83d88af0dec96cd0", "patch": "@@ -0,0 +1,34 @@\n+/* PR c/35751 */\n+/* { dg-do compile } */\n+/* { dg-options \"-fopenmp\" } */\n+\n+void\n+foo (int i)\n+{\n+  extern int a[i];\t/* { dg-error \"must have no linkage|storage size of\" } */\n+  static int b[i];\t/* { dg-error \"storage size of\" } */\n+\n+#pragma omp parallel\n+  {\n+    a[0] = 0;\n+    b[0] = 0;\n+  }\n+\n+#pragma omp parallel shared (a, b)\n+  {\n+    a[0] = 0;\n+    b[0] = 0;\n+  }\n+\n+#pragma omp parallel private (a, b)\n+  {\n+    a[0] = 0;\n+    b[0] = 0;\n+  }\n+\n+#pragma omp parallel firstprivate (a, b)\n+  {\n+    a[0] = 0;\n+    b[0] = 0;\n+  }\n+}"}]}