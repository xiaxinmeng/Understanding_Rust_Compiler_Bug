{"sha": "ffa7068ec56d96bdc1c30ef64b608dbc9cb27570", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmZhNzA2OGVjNTZkOTZiZGMxYzMwZWY2NGI2MDhkYmM5Y2IyNzU3MA==", "commit": {"author": {"name": "James Greenhalgh", "email": "james.greenhalgh@arm.com", "date": "2015-06-16T09:17:52Z"}, "committer": {"name": "James Greenhalgh", "email": "jgreenhalgh@gcc.gnu.org", "date": "2015-06-16T09:17:52Z"}, "message": "[ARM Churn] Rename LOGICAL_OP_NON_SC to LOGICAL_OP_NON_SHORT_CIRCUIT\n\ngcc/ChangeLog:\n\n\t* config/arm/arm-protos.h (struct tune_params): Rename\n\tlog_op_non_sc to log_op_non_short_circuit, and rename enum\n\tvalues to expand SC to SHORT_CIRCUIT.\n\t* config/arm/arm.c (arm_slowmul_tune): Expand LOG_OP_NON_SC\n\tto LOG_OP_NON_SHORT_CIRCUIT.\n\t(arm_fastmul_tune):Likewise\n\t(arm_strongarm_tune): Likewise.\n\t(arm_xscale_tune): Likewise.\n\t(arm_9e_tune): Likewise.\n\t(arm_marvell_pj4_tune): Likewise.\n\t(arm_v6t2_tune): Likewise.\n\t(arm_cortex_tune): Likewise.\n\t(arm_cortex_a8_tune): Likewise.\n\t(arm_cortex_a7_tune): Likewise.\n\t(arm_cortex_a15_tune): Likewise.\n\t(arm_cortex_a53_tune): Likewise.\n\t(arm_cortex_a57_tune): Likewise.\n\t(arm_xgene1_tune): Likewise.\n\t(arm_cortex_a5_tune): Likewise.\n\t(arm_cortex_a9_tune): Likewise.\n\t(arm_cortex_a12_tune): Likewise.\n\t(arm_v7m_tune): Likewise.\n\t(arm_cortex_m7_tune): Likewise.\n\t(arm_v6m_tune): Likewise.\n\t(arm_fa726te_tune): Likewise.\n\nFrom-SVN: r224506", "tree": {"sha": "e749e233bc4a95e0239c8cdbc851f190ef0df7e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e749e233bc4a95e0239c8cdbc851f190ef0df7e3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ffa7068ec56d96bdc1c30ef64b608dbc9cb27570", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffa7068ec56d96bdc1c30ef64b608dbc9cb27570", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ffa7068ec56d96bdc1c30ef64b608dbc9cb27570", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffa7068ec56d96bdc1c30ef64b608dbc9cb27570/comments", "author": {"login": "jgreenhalgh-arm", "id": 6104025, "node_id": "MDQ6VXNlcjYxMDQwMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6104025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jgreenhalgh-arm", "html_url": "https://github.com/jgreenhalgh-arm", "followers_url": "https://api.github.com/users/jgreenhalgh-arm/followers", "following_url": "https://api.github.com/users/jgreenhalgh-arm/following{/other_user}", "gists_url": "https://api.github.com/users/jgreenhalgh-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jgreenhalgh-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jgreenhalgh-arm/subscriptions", "organizations_url": "https://api.github.com/users/jgreenhalgh-arm/orgs", "repos_url": "https://api.github.com/users/jgreenhalgh-arm/repos", "events_url": "https://api.github.com/users/jgreenhalgh-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/jgreenhalgh-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "14c463929149a6fb86fe17ba9e526f32f4ab3e28", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14c463929149a6fb86fe17ba9e526f32f4ab3e28", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14c463929149a6fb86fe17ba9e526f32f4ab3e28"}], "stats": {"total": 119, "additions": 74, "deletions": 45}, "files": [{"sha": "57a41f7def5860a2609a9b0276570c0ba31a44e4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffa7068ec56d96bdc1c30ef64b608dbc9cb27570/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffa7068ec56d96bdc1c30ef64b608dbc9cb27570/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ffa7068ec56d96bdc1c30ef64b608dbc9cb27570", "patch": "@@ -1,3 +1,31 @@\n+2015-06-16  James Greenhalgh  <james.greenhalgh@arm.com>\n+\n+\t* config/arm/arm-protos.h (struct tune_params): Rename\n+\tlog_op_non_sc to log_op_non_short_circuit, and rename enum\n+\tvalues to expand SC to SHORT_CIRCUIT.\n+\t* config/arm/arm.c (arm_slowmul_tune): Expand LOG_OP_NON_SC\n+\tto LOG_OP_NON_SHORT_CIRCUIT.\n+\t(arm_fastmul_tune):Likewise\n+\t(arm_strongarm_tune): Likewise.\n+\t(arm_xscale_tune): Likewise.\n+\t(arm_9e_tune): Likewise.\n+\t(arm_marvell_pj4_tune): Likewise.\n+\t(arm_v6t2_tune): Likewise.\n+\t(arm_cortex_tune): Likewise.\n+\t(arm_cortex_a8_tune): Likewise.\n+\t(arm_cortex_a7_tune): Likewise.\n+\t(arm_cortex_a15_tune): Likewise.\n+\t(arm_cortex_a53_tune): Likewise.\n+\t(arm_cortex_a57_tune): Likewise.\n+\t(arm_xgene1_tune): Likewise.\n+\t(arm_cortex_a5_tune): Likewise.\n+\t(arm_cortex_a9_tune): Likewise.\n+\t(arm_cortex_a12_tune): Likewise.\n+\t(arm_v7m_tune): Likewise.\n+\t(arm_cortex_m7_tune): Likewise.\n+\t(arm_v6m_tune): Likewise.\n+\t(arm_fa726te_tune): Likewise.\n+\n 2015-06-15  David Edelsohn  <dje.gcc@gmail.com>\n \n \t* altivec.md: Delete UNSPEC_VMLADDUHM."}, {"sha": "62f91efc0ad62f1e88d00c6fd3702e2a0fbc470e", "filename": "gcc/config/arm/arm-protos.h", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffa7068ec56d96bdc1c30ef64b608dbc9cb27570/gcc%2Fconfig%2Farm%2Farm-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffa7068ec56d96bdc1c30ef64b608dbc9cb27570/gcc%2Fconfig%2Farm%2Farm-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-protos.h?ref=ffa7068ec56d96bdc1c30ef64b608dbc9cb27570", "patch": "@@ -284,9 +284,10 @@ struct tune_params\n   /* The preference for non short cirtcuit operation when optimizing for\n      performance. The first element covers Thumb state and the second one\n      is for ARM state.  */\n-  enum log_op_non_sc {LOG_OP_NON_SC_FALSE, LOG_OP_NON_SC_TRUE};\n-  log_op_non_sc logical_op_non_short_circuit_thumb: 1;\n-  log_op_non_sc logical_op_non_short_circuit_arm: 1;\n+  enum log_op_non_short_circuit {LOG_OP_NON_SHORT_CIRCUIT_FALSE,\n+\t\t\t\t LOG_OP_NON_SHORT_CIRCUIT_TRUE};\n+  log_op_non_short_circuit logical_op_non_short_circuit_thumb: 1;\n+  log_op_non_short_circuit logical_op_non_short_circuit_arm: 1;\n   /* Prefer 32-bit encoding instead of flag-setting 16-bit encoding.  */\n   enum {DISPARAGE_FLAGS_NEITHER, DISPARAGE_FLAGS_PARTIAL, DISPARAGE_FLAGS_ALL}\n     disparage_flag_setting_t16_encodings: 2;"}, {"sha": "f5050cbf640cdb84d9ed816f98a04495c5cf4e39", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 42, "deletions": 42, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffa7068ec56d96bdc1c30ef64b608dbc9cb27570/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffa7068ec56d96bdc1c30ef64b608dbc9cb27570/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=ffa7068ec56d96bdc1c30ef64b608dbc9cb27570", "patch": "@@ -1703,8 +1703,8 @@ const struct tune_params arm_slowmul_tune =\n   ARM_PREFETCH_NOT_BENEFICIAL,\n   tune_params::PREF_CONST_POOL_TRUE,\n   tune_params::PREF_LDRD_FALSE,\n-  tune_params::LOG_OP_NON_SC_TRUE,\t\t/* Thumb.  */\n-  tune_params::LOG_OP_NON_SC_TRUE,\t\t/* ARM.  */\n+  tune_params::LOG_OP_NON_SHORT_CIRCUIT_TRUE,\t\t/* Thumb.  */\n+  tune_params::LOG_OP_NON_SHORT_CIRCUIT_TRUE,\t\t/* ARM.  */\n   tune_params::DISPARAGE_FLAGS_NEITHER,\n   tune_params::PREF_NEON_64_FALSE,\n   tune_params::PREF_NEON_STRINGOPS_FALSE,\n@@ -1726,8 +1726,8 @@ const struct tune_params arm_fastmul_tune =\n   ARM_PREFETCH_NOT_BENEFICIAL,\n   tune_params::PREF_CONST_POOL_TRUE,\n   tune_params::PREF_LDRD_FALSE,\n-  tune_params::LOG_OP_NON_SC_TRUE,\t\t/* Thumb.  */\n-  tune_params::LOG_OP_NON_SC_TRUE,\t\t/* ARM.  */\n+  tune_params::LOG_OP_NON_SHORT_CIRCUIT_TRUE,\t\t/* Thumb.  */\n+  tune_params::LOG_OP_NON_SHORT_CIRCUIT_TRUE,\t\t/* ARM.  */\n   tune_params::DISPARAGE_FLAGS_NEITHER,\n   tune_params::PREF_NEON_64_FALSE,\n   tune_params::PREF_NEON_STRINGOPS_FALSE,\n@@ -1752,8 +1752,8 @@ const struct tune_params arm_strongarm_tune =\n   ARM_PREFETCH_NOT_BENEFICIAL,\n   tune_params::PREF_CONST_POOL_TRUE,\n   tune_params::PREF_LDRD_FALSE,\n-  tune_params::LOG_OP_NON_SC_TRUE,\t\t/* Thumb.  */\n-  tune_params::LOG_OP_NON_SC_TRUE,\t\t/* ARM.  */\n+  tune_params::LOG_OP_NON_SHORT_CIRCUIT_TRUE,\t\t/* Thumb.  */\n+  tune_params::LOG_OP_NON_SHORT_CIRCUIT_TRUE,\t\t/* ARM.  */\n   tune_params::DISPARAGE_FLAGS_NEITHER,\n   tune_params::PREF_NEON_64_FALSE,\n   tune_params::PREF_NEON_STRINGOPS_FALSE,\n@@ -1775,8 +1775,8 @@ const struct tune_params arm_xscale_tune =\n   ARM_PREFETCH_NOT_BENEFICIAL,\n   tune_params::PREF_CONST_POOL_TRUE,\n   tune_params::PREF_LDRD_FALSE,\n-  tune_params::LOG_OP_NON_SC_TRUE,\t\t/* Thumb.  */\n-  tune_params::LOG_OP_NON_SC_TRUE,\t\t/* ARM.  */\n+  tune_params::LOG_OP_NON_SHORT_CIRCUIT_TRUE,\t\t/* Thumb.  */\n+  tune_params::LOG_OP_NON_SHORT_CIRCUIT_TRUE,\t\t/* ARM.  */\n   tune_params::DISPARAGE_FLAGS_NEITHER,\n   tune_params::PREF_NEON_64_FALSE,\n   tune_params::PREF_NEON_STRINGOPS_FALSE,\n@@ -1798,8 +1798,8 @@ const struct tune_params arm_9e_tune =\n   ARM_PREFETCH_NOT_BENEFICIAL,\n   tune_params::PREF_CONST_POOL_TRUE,\n   tune_params::PREF_LDRD_FALSE,\n-  tune_params::LOG_OP_NON_SC_TRUE,\t\t/* Thumb.  */\n-  tune_params::LOG_OP_NON_SC_TRUE,\t\t/* ARM.  */\n+  tune_params::LOG_OP_NON_SHORT_CIRCUIT_TRUE,\t\t/* Thumb.  */\n+  tune_params::LOG_OP_NON_SHORT_CIRCUIT_TRUE,\t\t/* ARM.  */\n   tune_params::DISPARAGE_FLAGS_NEITHER,\n   tune_params::PREF_NEON_64_FALSE,\n   tune_params::PREF_NEON_STRINGOPS_FALSE,\n@@ -1821,8 +1821,8 @@ const struct tune_params arm_marvell_pj4_tune =\n   ARM_PREFETCH_NOT_BENEFICIAL,\n   tune_params::PREF_CONST_POOL_TRUE,\n   tune_params::PREF_LDRD_FALSE,\n-  tune_params::LOG_OP_NON_SC_TRUE,\t\t/* Thumb.  */\n-  tune_params::LOG_OP_NON_SC_TRUE,\t\t/* ARM.  */\n+  tune_params::LOG_OP_NON_SHORT_CIRCUIT_TRUE,\t\t/* Thumb.  */\n+  tune_params::LOG_OP_NON_SHORT_CIRCUIT_TRUE,\t\t/* ARM.  */\n   tune_params::DISPARAGE_FLAGS_NEITHER,\n   tune_params::PREF_NEON_64_FALSE,\n   tune_params::PREF_NEON_STRINGOPS_FALSE,\n@@ -1844,8 +1844,8 @@ const struct tune_params arm_v6t2_tune =\n   ARM_PREFETCH_NOT_BENEFICIAL,\n   tune_params::PREF_CONST_POOL_FALSE,\n   tune_params::PREF_LDRD_FALSE,\n-  tune_params::LOG_OP_NON_SC_TRUE,\t\t/* Thumb.  */\n-  tune_params::LOG_OP_NON_SC_TRUE,\t\t/* ARM.  */\n+  tune_params::LOG_OP_NON_SHORT_CIRCUIT_TRUE,\t\t/* Thumb.  */\n+  tune_params::LOG_OP_NON_SHORT_CIRCUIT_TRUE,\t\t/* ARM.  */\n   tune_params::DISPARAGE_FLAGS_NEITHER,\n   tune_params::PREF_NEON_64_FALSE,\n   tune_params::PREF_NEON_STRINGOPS_FALSE,\n@@ -1869,8 +1869,8 @@ const struct tune_params arm_cortex_tune =\n   ARM_PREFETCH_NOT_BENEFICIAL,\n   tune_params::PREF_CONST_POOL_FALSE,\n   tune_params::PREF_LDRD_FALSE,\n-  tune_params::LOG_OP_NON_SC_TRUE,\t\t/* Thumb.  */\n-  tune_params::LOG_OP_NON_SC_TRUE,\t\t/* ARM.  */\n+  tune_params::LOG_OP_NON_SHORT_CIRCUIT_TRUE,\t\t/* Thumb.  */\n+  tune_params::LOG_OP_NON_SHORT_CIRCUIT_TRUE,\t\t/* ARM.  */\n   tune_params::DISPARAGE_FLAGS_NEITHER,\n   tune_params::PREF_NEON_64_FALSE,\n   tune_params::PREF_NEON_STRINGOPS_FALSE,\n@@ -1892,8 +1892,8 @@ const struct tune_params arm_cortex_a8_tune =\n   ARM_PREFETCH_NOT_BENEFICIAL,\n   tune_params::PREF_CONST_POOL_FALSE,\n   tune_params::PREF_LDRD_FALSE,\n-  tune_params::LOG_OP_NON_SC_TRUE,\t\t/* Thumb.  */\n-  tune_params::LOG_OP_NON_SC_TRUE,\t\t/* ARM.  */\n+  tune_params::LOG_OP_NON_SHORT_CIRCUIT_TRUE,\t\t/* Thumb.  */\n+  tune_params::LOG_OP_NON_SHORT_CIRCUIT_TRUE,\t\t/* ARM.  */\n   tune_params::DISPARAGE_FLAGS_NEITHER,\n   tune_params::PREF_NEON_64_FALSE,\n   tune_params::PREF_NEON_STRINGOPS_TRUE,\n@@ -1915,8 +1915,8 @@ const struct tune_params arm_cortex_a7_tune =\n   ARM_PREFETCH_NOT_BENEFICIAL,\n   tune_params::PREF_CONST_POOL_FALSE,\n   tune_params::PREF_LDRD_FALSE,\n-  tune_params::LOG_OP_NON_SC_TRUE,\t\t/* Thumb.  */\n-  tune_params::LOG_OP_NON_SC_TRUE,\t\t/* ARM.  */\n+  tune_params::LOG_OP_NON_SHORT_CIRCUIT_TRUE,\t\t/* Thumb.  */\n+  tune_params::LOG_OP_NON_SHORT_CIRCUIT_TRUE,\t\t/* ARM.  */\n   tune_params::DISPARAGE_FLAGS_NEITHER,\n   tune_params::PREF_NEON_64_FALSE,\n   tune_params::PREF_NEON_STRINGOPS_TRUE,\n@@ -1938,8 +1938,8 @@ const struct tune_params arm_cortex_a15_tune =\n   ARM_PREFETCH_NOT_BENEFICIAL,\n   tune_params::PREF_CONST_POOL_FALSE,\n   tune_params::PREF_LDRD_TRUE,\n-  tune_params::LOG_OP_NON_SC_TRUE,\t\t/* Thumb.  */\n-  tune_params::LOG_OP_NON_SC_TRUE,\t\t/* ARM.  */\n+  tune_params::LOG_OP_NON_SHORT_CIRCUIT_TRUE,\t\t/* Thumb.  */\n+  tune_params::LOG_OP_NON_SHORT_CIRCUIT_TRUE,\t\t/* ARM.  */\n   tune_params::DISPARAGE_FLAGS_ALL,\n   tune_params::PREF_NEON_64_FALSE,\n   tune_params::PREF_NEON_STRINGOPS_TRUE,\n@@ -1961,8 +1961,8 @@ const struct tune_params arm_cortex_a53_tune =\n   ARM_PREFETCH_NOT_BENEFICIAL,\n   tune_params::PREF_CONST_POOL_FALSE,\n   tune_params::PREF_LDRD_FALSE,\n-  tune_params::LOG_OP_NON_SC_TRUE,\t\t/* Thumb.  */\n-  tune_params::LOG_OP_NON_SC_TRUE,\t\t/* ARM.  */\n+  tune_params::LOG_OP_NON_SHORT_CIRCUIT_TRUE,\t\t/* Thumb.  */\n+  tune_params::LOG_OP_NON_SHORT_CIRCUIT_TRUE,\t\t/* ARM.  */\n   tune_params::DISPARAGE_FLAGS_NEITHER,\n   tune_params::PREF_NEON_64_FALSE,\n   tune_params::PREF_NEON_STRINGOPS_TRUE,\n@@ -1984,8 +1984,8 @@ const struct tune_params arm_cortex_a57_tune =\n   ARM_PREFETCH_NOT_BENEFICIAL,\n   tune_params::PREF_CONST_POOL_FALSE,\n   tune_params::PREF_LDRD_TRUE,\n-  tune_params::LOG_OP_NON_SC_TRUE,\t\t/* Thumb.  */\n-  tune_params::LOG_OP_NON_SC_TRUE,\t\t/* ARM.  */\n+  tune_params::LOG_OP_NON_SHORT_CIRCUIT_TRUE,\t\t/* Thumb.  */\n+  tune_params::LOG_OP_NON_SHORT_CIRCUIT_TRUE,\t\t/* ARM.  */\n   tune_params::DISPARAGE_FLAGS_ALL,\n   tune_params::PREF_NEON_64_FALSE,\n   tune_params::PREF_NEON_STRINGOPS_TRUE,\n@@ -2007,8 +2007,8 @@ const struct tune_params arm_xgene1_tune =\n   ARM_PREFETCH_NOT_BENEFICIAL,\n   tune_params::PREF_CONST_POOL_FALSE,\n   tune_params::PREF_LDRD_TRUE,\n-  tune_params::LOG_OP_NON_SC_TRUE,\t\t/* Thumb.  */\n-  tune_params::LOG_OP_NON_SC_TRUE,\t\t/* ARM.  */\n+  tune_params::LOG_OP_NON_SHORT_CIRCUIT_TRUE,\t\t/* Thumb.  */\n+  tune_params::LOG_OP_NON_SHORT_CIRCUIT_TRUE,\t\t/* ARM.  */\n   tune_params::DISPARAGE_FLAGS_ALL,\n   tune_params::PREF_NEON_64_FALSE,\n   tune_params::PREF_NEON_STRINGOPS_FALSE,\n@@ -2033,8 +2033,8 @@ const struct tune_params arm_cortex_a5_tune =\n   ARM_PREFETCH_NOT_BENEFICIAL,\n   tune_params::PREF_CONST_POOL_FALSE,\n   tune_params::PREF_LDRD_FALSE,\n-  tune_params::LOG_OP_NON_SC_FALSE,\t\t/* Thumb.  */\n-  tune_params::LOG_OP_NON_SC_FALSE,\t\t/* ARM.  */\n+  tune_params::LOG_OP_NON_SHORT_CIRCUIT_FALSE,\t\t/* Thumb.  */\n+  tune_params::LOG_OP_NON_SHORT_CIRCUIT_FALSE,\t\t/* ARM.  */\n   tune_params::DISPARAGE_FLAGS_NEITHER,\n   tune_params::PREF_NEON_64_FALSE,\n   tune_params::PREF_NEON_STRINGOPS_TRUE,\n@@ -2056,8 +2056,8 @@ const struct tune_params arm_cortex_a9_tune =\n   ARM_PREFETCH_BENEFICIAL(4,32,32),\n   tune_params::PREF_CONST_POOL_FALSE,\n   tune_params::PREF_LDRD_FALSE,\n-  tune_params::LOG_OP_NON_SC_TRUE,\t\t/* Thumb.  */\n-  tune_params::LOG_OP_NON_SC_TRUE,\t\t/* ARM.  */\n+  tune_params::LOG_OP_NON_SHORT_CIRCUIT_TRUE,\t\t/* Thumb.  */\n+  tune_params::LOG_OP_NON_SHORT_CIRCUIT_TRUE,\t\t/* ARM.  */\n   tune_params::DISPARAGE_FLAGS_NEITHER,\n   tune_params::PREF_NEON_64_FALSE,\n   tune_params::PREF_NEON_STRINGOPS_FALSE,\n@@ -2079,8 +2079,8 @@ const struct tune_params arm_cortex_a12_tune =\n   ARM_PREFETCH_NOT_BENEFICIAL,\n   tune_params::PREF_CONST_POOL_FALSE,\n   tune_params::PREF_LDRD_TRUE,\n-  tune_params::LOG_OP_NON_SC_TRUE,\t\t/* Thumb.  */\n-  tune_params::LOG_OP_NON_SC_TRUE,\t\t/* ARM.  */\n+  tune_params::LOG_OP_NON_SHORT_CIRCUIT_TRUE,\t\t/* Thumb.  */\n+  tune_params::LOG_OP_NON_SHORT_CIRCUIT_TRUE,\t\t/* ARM.  */\n   tune_params::DISPARAGE_FLAGS_ALL,\n   tune_params::PREF_NEON_64_FALSE,\n   tune_params::PREF_NEON_STRINGOPS_TRUE,\n@@ -2109,8 +2109,8 @@ const struct tune_params arm_v7m_tune =\n   ARM_PREFETCH_NOT_BENEFICIAL,\n   tune_params::PREF_CONST_POOL_TRUE,\n   tune_params::PREF_LDRD_FALSE,\n-  tune_params::LOG_OP_NON_SC_FALSE,\t\t/* Thumb.  */\n-  tune_params::LOG_OP_NON_SC_FALSE,\t\t/* ARM.  */\n+  tune_params::LOG_OP_NON_SHORT_CIRCUIT_FALSE,\t\t/* Thumb.  */\n+  tune_params::LOG_OP_NON_SHORT_CIRCUIT_FALSE,\t\t/* ARM.  */\n   tune_params::DISPARAGE_FLAGS_NEITHER,\n   tune_params::PREF_NEON_64_FALSE,\n   tune_params::PREF_NEON_STRINGOPS_FALSE,\n@@ -2134,8 +2134,8 @@ const struct tune_params arm_cortex_m7_tune =\n   ARM_PREFETCH_NOT_BENEFICIAL,\n   tune_params::PREF_CONST_POOL_TRUE,\n   tune_params::PREF_LDRD_FALSE,\n-  tune_params::LOG_OP_NON_SC_TRUE,\t\t/* Thumb.  */\n-  tune_params::LOG_OP_NON_SC_TRUE,\t\t/* ARM.  */\n+  tune_params::LOG_OP_NON_SHORT_CIRCUIT_TRUE,\t\t/* Thumb.  */\n+  tune_params::LOG_OP_NON_SHORT_CIRCUIT_TRUE,\t\t/* ARM.  */\n   tune_params::DISPARAGE_FLAGS_NEITHER,\n   tune_params::PREF_NEON_64_FALSE,\n   tune_params::PREF_NEON_STRINGOPS_FALSE,\n@@ -2159,8 +2159,8 @@ const struct tune_params arm_v6m_tune =\n   ARM_PREFETCH_NOT_BENEFICIAL,\n   tune_params::PREF_CONST_POOL_FALSE,\n   tune_params::PREF_LDRD_FALSE,\n-  tune_params::LOG_OP_NON_SC_FALSE,\t\t/* Thumb.  */\n-  tune_params::LOG_OP_NON_SC_FALSE,\t\t/* ARM.  */\n+  tune_params::LOG_OP_NON_SHORT_CIRCUIT_FALSE,\t\t/* Thumb.  */\n+  tune_params::LOG_OP_NON_SHORT_CIRCUIT_FALSE,\t\t/* ARM.  */\n   tune_params::DISPARAGE_FLAGS_NEITHER,\n   tune_params::PREF_NEON_64_FALSE,\n   tune_params::PREF_NEON_STRINGOPS_FALSE,\n@@ -2182,8 +2182,8 @@ const struct tune_params arm_fa726te_tune =\n   ARM_PREFETCH_NOT_BENEFICIAL,\n   tune_params::PREF_CONST_POOL_TRUE,\n   tune_params::PREF_LDRD_FALSE,\n-  tune_params::LOG_OP_NON_SC_TRUE,\t\t/* Thumb.  */\n-  tune_params::LOG_OP_NON_SC_TRUE,\t\t/* ARM.  */\n+  tune_params::LOG_OP_NON_SHORT_CIRCUIT_TRUE,\t\t/* Thumb.  */\n+  tune_params::LOG_OP_NON_SHORT_CIRCUIT_TRUE,\t\t/* ARM.  */\n   tune_params::DISPARAGE_FLAGS_NEITHER,\n   tune_params::PREF_NEON_64_FALSE,\n   tune_params::PREF_NEON_STRINGOPS_FALSE,"}]}