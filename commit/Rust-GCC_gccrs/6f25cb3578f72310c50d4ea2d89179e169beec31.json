{"sha": "6f25cb3578f72310c50d4ea2d89179e169beec31", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmYyNWNiMzU3OGY3MjMxMGM1MGQ0ZWEyZDg5MTc5ZTE2OWJlZWMzMQ==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2005-09-12T22:38:34Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2005-09-12T22:38:34Z"}, "message": "re PR c++/23789 (compilation error when template parameters have certain complexity)\n\n\tPR c++/23789\n\t* cvt.c (perform_qualification_conversions): Don't create\n\tunnecessary NOP_EXPRs.\n\t* pt.c (tsubst_template_arg): Use fold_non_dependent_expr.\n\n\tPR c++/23789\n\t* g++.dg/template/nontype14.C: New test.\n\nFrom-SVN: r104193", "tree": {"sha": "ef9919c9c5b79ac00d1c64401535d51148119164", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ef9919c9c5b79ac00d1c64401535d51148119164"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6f25cb3578f72310c50d4ea2d89179e169beec31", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f25cb3578f72310c50d4ea2d89179e169beec31", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f25cb3578f72310c50d4ea2d89179e169beec31", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f25cb3578f72310c50d4ea2d89179e169beec31/comments", "author": null, "committer": null, "parents": [{"sha": "b35c082263257779ba2c3e2ae8fbeaa19bfdf374", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b35c082263257779ba2c3e2ae8fbeaa19bfdf374", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b35c082263257779ba2c3e2ae8fbeaa19bfdf374"}], "stats": {"total": 58, "additions": 30, "deletions": 28}, "files": [{"sha": "6ce6f5fd1f78704b803530ca26e6f411363fdc84", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f25cb3578f72310c50d4ea2d89179e169beec31/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f25cb3578f72310c50d4ea2d89179e169beec31/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=6f25cb3578f72310c50d4ea2d89179e169beec31", "patch": "@@ -1,3 +1,10 @@\n+2005-09-12  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/23789\n+\t* cvt.c (perform_qualification_conversions): Don't create\n+\tunnecessary NOP_EXPRs.\n+\t* pt.c (tsubst_template_arg): Use fold_non_dependent_expr.\n+\n 2005-09-12  Ian Lance Taylor  <ian@airs.com>\n \n \tPR g++/7874"}, {"sha": "ac24e0a5f34f6d1a40811ca689518cbfffdfbe95", "filename": "gcc/cp/cvt.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f25cb3578f72310c50d4ea2d89179e169beec31/gcc%2Fcp%2Fcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f25cb3578f72310c50d4ea2d89179e169beec31/gcc%2Fcp%2Fcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcvt.c?ref=6f25cb3578f72310c50d4ea2d89179e169beec31", "patch": "@@ -1209,8 +1209,10 @@ perform_qualification_conversions (tree type, tree expr)\n \n   expr_type = TREE_TYPE (expr);\n \n-  if (TYPE_PTR_P (type) && TYPE_PTR_P (expr_type)\n-      && comp_ptr_ttypes (TREE_TYPE (type), TREE_TYPE (expr_type)))\n+  if (same_type_p (type, expr_type))\n+    return expr;\n+  else if (TYPE_PTR_P (type) && TYPE_PTR_P (expr_type)\n+\t   && comp_ptr_ttypes (TREE_TYPE (type), TREE_TYPE (expr_type)))\n     return build_nop (type, expr);\n   else if (TYPE_PTR_TO_MEMBER_P (type)\n \t   && TYPE_PTR_TO_MEMBER_P (expr_type)"}, {"sha": "07054ecf314cbc492ea8b005abf37f43abc8a2ac", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 1, "deletions": 26, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f25cb3578f72310c50d4ea2d89179e169beec31/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f25cb3578f72310c50d4ea2d89179e169beec31/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=6f25cb3578f72310c50d4ea2d89179e169beec31", "patch": "@@ -5919,32 +5919,7 @@ tsubst_template_arg (tree t, tree args, tsubst_flags_t complain, tree in_decl)\n   else\n     {\n       r = tsubst_expr (t, args, complain, in_decl);\n-\n-      if (!uses_template_parms (r))\n-\t{\n-\t  /* Sometimes, one of the args was an expression involving a\n-\t     template constant parameter, like N - 1.  Now that we've\n-\t     tsubst'd, we might have something like 2 - 1.  This will\n-\t     confuse lookup_template_class, so we do constant folding\n-\t     here.  We have to unset processing_template_decl, to fool\n-\t     tsubst_copy_and_build() into building an actual tree.  */\n-\n-\t /* If the TREE_TYPE of ARG is not NULL_TREE, ARG is already\n-\t    as simple as it's going to get, and trying to reprocess\n-\t    the trees will break.  Once tsubst_expr et al DTRT for\n-\t    non-dependent exprs, this code can go away, as the type\n-\t    will always be set.  */\n-\t  if (!TREE_TYPE (r))\n-\t    {\n-\t      int saved_processing_template_decl = processing_template_decl;\n-\t      processing_template_decl = 0;\n-\t      r = tsubst_copy_and_build (r, /*args=*/NULL_TREE,\n-\t\t\t\t\t tf_error, /*in_decl=*/NULL_TREE,\n-\t\t\t\t\t /*function_p=*/false);\n-\t      processing_template_decl = saved_processing_template_decl;\n-\t      r = fold (r);\n-\t    }\n-\t}\n+      r = fold_non_dependent_expr (r);\n     }\n   return r;\n }"}, {"sha": "9678760d8a659c5ff1575eb48f05d345361f157f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f25cb3578f72310c50d4ea2d89179e169beec31/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f25cb3578f72310c50d4ea2d89179e169beec31/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6f25cb3578f72310c50d4ea2d89179e169beec31", "patch": "@@ -1,3 +1,8 @@\n+2005-09-12  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/23789\n+\t* g++.dg/template/nontype14.C: New test.\n+\n 2005-09-12  Ian Lance Taylor  <ian@airs.com>\n \n \tPR g++/7874"}, {"sha": "93338512b3a8572672bd29f27ee0083df3d49523", "filename": "gcc/testsuite/g++.dg/template/nontype14.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f25cb3578f72310c50d4ea2d89179e169beec31/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fnontype14.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f25cb3578f72310c50d4ea2d89179e169beec31/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fnontype14.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fnontype14.C?ref=6f25cb3578f72310c50d4ea2d89179e169beec31", "patch": "@@ -0,0 +1,13 @@\n+// PR c++/23789\n+\n+template <int W> struct X { \n+  template <int W2> \n+  X< (W+(W&&W) > 1 ? W+(W&&W) : 1)+1> \n+  operator + (const X<W2>&) const; \n+}; \n+ \n+template <int dummy> void foo() \n+{ \n+  X<6> A,B; \n+  A + B; \n+}"}]}