{"sha": "e5c0492b7f42ccc093f9f4385bbbc4b39dc5ffcb", "node_id": "C_kwDOANBUbNoAKGU1YzA0OTJiN2Y0MmNjYzA5M2Y5ZjQzODViYmJjNGIzOWRjNWZmY2I", "commit": {"author": {"name": "Michel Morin", "email": "mimomorin@gmail.com", "date": "2021-09-21T23:04:31Z"}, "committer": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2021-09-23T20:25:45Z"}, "message": "c++: adjust the handling of RID_ATTRIBUTE.\n\ngcc/cp/ChangeLog:\n\n\t* parser.c (cp_keyword_starts_decl_specifier_p): Do not\n\thandle RID_ATTRIBUTE.\n\t(cp_parser_constructor_declarator_p): Remove now-redundant\n\tchecks.\n\t(cp_parser_lambda_declarator_opt): Likewise.", "tree": {"sha": "bea8a19259600ace443a764b3db1d0c075efab59", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bea8a19259600ace443a764b3db1d0c075efab59"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e5c0492b7f42ccc093f9f4385bbbc4b39dc5ffcb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5c0492b7f42ccc093f9f4385bbbc4b39dc5ffcb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5c0492b7f42ccc093f9f4385bbbc4b39dc5ffcb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5c0492b7f42ccc093f9f4385bbbc4b39dc5ffcb/comments", "author": {"login": "morinmorin", "id": 2411812, "node_id": "MDQ6VXNlcjI0MTE4MTI=", "avatar_url": "https://avatars.githubusercontent.com/u/2411812?v=4", "gravatar_id": "", "url": "https://api.github.com/users/morinmorin", "html_url": "https://github.com/morinmorin", "followers_url": "https://api.github.com/users/morinmorin/followers", "following_url": "https://api.github.com/users/morinmorin/following{/other_user}", "gists_url": "https://api.github.com/users/morinmorin/gists{/gist_id}", "starred_url": "https://api.github.com/users/morinmorin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/morinmorin/subscriptions", "organizations_url": "https://api.github.com/users/morinmorin/orgs", "repos_url": "https://api.github.com/users/morinmorin/repos", "events_url": "https://api.github.com/users/morinmorin/events{/privacy}", "received_events_url": "https://api.github.com/users/morinmorin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eb9f099c3df2b1b4c5fb0fa25cfdfa3cb5fc817e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb9f099c3df2b1b4c5fb0fa25cfdfa3cb5fc817e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb9f099c3df2b1b4c5fb0fa25cfdfa3cb5fc817e"}], "stats": {"total": 25, "additions": 11, "deletions": 14}, "files": [{"sha": "8430445ef8c189f0ed398db27aa943b579a4a952", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 11, "deletions": 14, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5c0492b7f42ccc093f9f4385bbbc4b39dc5ffcb/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5c0492b7f42ccc093f9f4385bbbc4b39dc5ffcb/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=e5c0492b7f42ccc093f9f4385bbbc4b39dc5ffcb", "patch": "@@ -1062,7 +1062,6 @@ cp_keyword_starts_decl_specifier_p (enum rid keyword)\n     case RID_TYPEDEF:\n     case RID_INLINE:\n       /* GNU extensions.  */\n-    case RID_ATTRIBUTE:\n     case RID_TYPEOF:\n       /* C++11 extensions.  */\n     case RID_DECLTYPE:\n@@ -11466,8 +11465,7 @@ cp_parser_lambda_declarator_opt (cp_parser* parser, tree lambda_expr)\n   /* In the decl-specifier-seq of the lambda-declarator, each\n      decl-specifier shall either be mutable or constexpr.  */\n   int declares_class_or_enum;\n-  if (cp_lexer_next_token_is_decl_specifier_keyword (parser->lexer)\n-      && !cp_next_tokens_can_be_gnu_attribute_p (parser))\n+  if (cp_lexer_next_token_is_decl_specifier_keyword (parser->lexer))\n     cp_parser_decl_specifier_seq (parser,\n \t\t\t\t  CP_PARSER_FLAGS_ONLY_MUTABLE_OR_CONSTEXPR,\n \t\t\t\t  &lambda_specs, &declares_class_or_enum);\n@@ -30844,23 +30842,22 @@ cp_parser_constructor_declarator_p (cp_parser *parser, cp_parser_flags flags,\n \t  /* A parameter declaration begins with a decl-specifier,\n \t     which is either the \"attribute\" keyword, a storage class\n \t     specifier, or (usually) a type-specifier.  */\n-\t  && (!cp_lexer_next_token_is_decl_specifier_keyword (parser->lexer)\n-\t      /* GNU attributes can actually appear both at the start of\n-\t\t a parameter and parenthesized declarator.\n-\t\t S (__attribute__((unused)) int);\n-\t\t is a constructor, but\n-\t\t S (__attribute__((unused)) foo) (int);\n-\t\t is a function declaration.  */\n-\t      || (cp_parser_allow_gnu_extensions_p (parser)\n-\t\t  && cp_next_tokens_can_be_gnu_attribute_p (parser)))\n-\t  /* A parameter declaration can also begin with [[attribute]].  */\n+\t  && !cp_lexer_next_token_is_decl_specifier_keyword (parser->lexer)\n+\t  /* GNU attributes can actually appear both at the start of\n+\t     a parameter and parenthesized declarator.\n+\t     S (__attribute__((unused)) int);\n+\t     is a constructor, but\n+\t     S (__attribute__((unused)) foo) (int);\n+\t     is a function declaration. [[attribute]] can appear in the\n+\t     first form too, but not in the second form.  */\n \t  && !cp_next_tokens_can_be_std_attribute_p (parser))\n \t{\n \t  tree type;\n \t  tree pushed_scope = NULL_TREE;\n \t  unsigned saved_num_template_parameter_lists;\n \n-\t  if (cp_next_tokens_can_be_gnu_attribute_p (parser))\n+\t  if (cp_parser_allow_gnu_extensions_p (parser)\n+\t      && cp_next_tokens_can_be_gnu_attribute_p (parser))\n \t    {\n \t      unsigned int n = cp_parser_skip_gnu_attributes_opt (parser, 1);\n \t      while (--n)"}]}