{"sha": "b60be63da23e0db9435e8620fab9edd531e4ed6b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjYwYmU2M2RhMjNlMGRiOTQzNWU4NjIwZmFiOWVkZDUzMWU0ZWQ2Yg==", "commit": {"author": {"name": "Javier Miranda", "email": "miranda@adacore.com", "date": "2019-12-27T20:01:33Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-06-02T08:58:21Z"}, "message": "[Ada] Compiler crash processing controlled type primitive\n\n2020-06-02  Javier Miranda  <miranda@adacore.com>\n\ngcc/ada/\n\n\t* sem_util.adb (Ensure_Minimum_Decoration): New subprogram that\n\tensures the minimum decoration required by\n\tRequires_Transient_Scope() to provide its functionality when the\n\tentity is not frozen.", "tree": {"sha": "f9dd743444976b95ff49abaca9448772bbdb61cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f9dd743444976b95ff49abaca9448772bbdb61cd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b60be63da23e0db9435e8620fab9edd531e4ed6b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b60be63da23e0db9435e8620fab9edd531e4ed6b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b60be63da23e0db9435e8620fab9edd531e4ed6b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b60be63da23e0db9435e8620fab9edd531e4ed6b/comments", "author": {"login": "miranda-adacore", "id": 54413934, "node_id": "MDQ6VXNlcjU0NDEzOTM0", "avatar_url": "https://avatars.githubusercontent.com/u/54413934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miranda-adacore", "html_url": "https://github.com/miranda-adacore", "followers_url": "https://api.github.com/users/miranda-adacore/followers", "following_url": "https://api.github.com/users/miranda-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/miranda-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/miranda-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miranda-adacore/subscriptions", "organizations_url": "https://api.github.com/users/miranda-adacore/orgs", "repos_url": "https://api.github.com/users/miranda-adacore/repos", "events_url": "https://api.github.com/users/miranda-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/miranda-adacore/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fa54f4da74b48a088fb1cef7b7f593d02319d019", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa54f4da74b48a088fb1cef7b7f593d02319d019", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa54f4da74b48a088fb1cef7b7f593d02319d019"}], "stats": {"total": 53, "additions": 53, "deletions": 0}, "files": [{"sha": "6b54b5e77ec6d83581609481282a3d04f787adb7", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b60be63da23e0db9435e8620fab9edd531e4ed6b/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b60be63da23e0db9435e8620fab9edd531e4ed6b/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=b60be63da23e0db9435e8620fab9edd531e4ed6b", "patch": "@@ -24370,11 +24370,64 @@ package body Sem_Util is\n    function Requires_Transient_Scope (Id : Entity_Id) return Boolean is\n       Old_Result : constant Boolean := Old_Requires_Transient_Scope (Id);\n \n+      procedure Ensure_Minimum_Decoration (Typ : Entity_Id);\n+      --  If Typ is not frozen then add to Typ the minimum decoration required\n+      --  by Requires_Transient_Scope to reliably provide its functionality;\n+      --  otherwise no action is performed.\n+\n+      -------------------------------\n+      -- Ensure_Minimum_Decoration --\n+      -------------------------------\n+\n+      procedure Ensure_Minimum_Decoration (Typ : Entity_Id) is\n+      begin\n+         --  Do not set Has_Controlled_Component on a class-wide equivalent\n+         --  type. See Make_CW_Equivalent_Type.\n+\n+         if Present (Typ)\n+           and then not Is_Frozen (Typ)\n+           and then (Is_Record_Type (Typ)\n+                       or else Is_Concurrent_Type (Typ)\n+                       or else Is_Incomplete_Or_Private_Type (Typ))\n+           and then not Is_Class_Wide_Equivalent_Type (Typ)\n+         then\n+            declare\n+               Comp : Entity_Id;\n+\n+            begin\n+               Comp := First_Component (Typ);\n+               while Present (Comp) loop\n+                  if Has_Controlled_Component (Etype (Comp))\n+                    or else\n+                      (Chars (Comp) /= Name_uParent\n+                         and then Is_Controlled (Etype (Comp)))\n+                    or else\n+                      (Is_Protected_Type (Etype (Comp))\n+                         and then\n+                           Present (Corresponding_Record_Type (Etype (Comp)))\n+                         and then\n+                           Has_Controlled_Component\n+                             (Corresponding_Record_Type (Etype (Comp))))\n+                  then\n+                     Set_Has_Controlled_Component (Typ);\n+                     exit;\n+                  end if;\n+\n+                  Next_Component (Comp);\n+               end loop;\n+            end;\n+         end if;\n+      end Ensure_Minimum_Decoration;\n+\n+   --  Start of processing for Requires_Transient_Scope\n+\n    begin\n       if Debug_Flag_QQ then\n          return Old_Result;\n       end if;\n \n+      Ensure_Minimum_Decoration (Id);\n+\n       declare\n          New_Result : constant Boolean := New_Requires_Transient_Scope (Id);\n "}]}