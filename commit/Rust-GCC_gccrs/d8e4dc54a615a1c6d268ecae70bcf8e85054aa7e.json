{"sha": "d8e4dc54a615a1c6d268ecae70bcf8e85054aa7e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDhlNGRjNTRhNjE1YTFjNmQyNjhlY2FlNzBiY2Y4ZTg1MDU0YWE3ZQ==", "commit": {"author": {"name": "Jozef Lawrynowicz", "email": "jozef.l@mittosystems.com", "date": "2019-10-24T13:34:54Z"}, "committer": {"name": "Jozef Lawrynowicz", "email": "jozefl@gcc.gnu.org", "date": "2019-10-24T13:34:54Z"}, "message": "MSP430: Tweaks to generation of 430X instructions\n\ngcc/ChangeLog:\n\n2019-10-24  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n\n\t* config/msp430/constraints.md: Allow post_inc for \"Ya\" constraint.\n\t* config/msp430/msp430.md (430x_shift_left): Use RLAM when the constant\n\tshift amount is between 1 and 4.\n\t(430x_arithmetic_shift_right): Use RRAM when the constant shift amount\n\tis between 1 and 4.\n\ngcc/testsuite/ChangeLog:\n\n2019-10-24  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n\n\t* gcc.target/msp430/emulate-slli.c: Skip for -mcpu=msp430.\n\tAdd shift by a constant 5 bits.\n\tUpdate scan-assembler directives.\n\t* gcc.target/msp430/emulate-srai.c: Likewise.\n\t* gcc.target/msp430/emulate-srli.c: Skip for -mcpu=msp430.\n\nFrom-SVN: r277394", "tree": {"sha": "fec8c1d2bee587326f0b7a7a35bb9c5849a0469f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fec8c1d2bee587326f0b7a7a35bb9c5849a0469f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d8e4dc54a615a1c6d268ecae70bcf8e85054aa7e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8e4dc54a615a1c6d268ecae70bcf8e85054aa7e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8e4dc54a615a1c6d268ecae70bcf8e85054aa7e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8e4dc54a615a1c6d268ecae70bcf8e85054aa7e/comments", "author": {"login": "jozefl-mitto", "id": 36524004, "node_id": "MDQ6VXNlcjM2NTI0MDA0", "avatar_url": "https://avatars.githubusercontent.com/u/36524004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jozefl-mitto", "html_url": "https://github.com/jozefl-mitto", "followers_url": "https://api.github.com/users/jozefl-mitto/followers", "following_url": "https://api.github.com/users/jozefl-mitto/following{/other_user}", "gists_url": "https://api.github.com/users/jozefl-mitto/gists{/gist_id}", "starred_url": "https://api.github.com/users/jozefl-mitto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jozefl-mitto/subscriptions", "organizations_url": "https://api.github.com/users/jozefl-mitto/orgs", "repos_url": "https://api.github.com/users/jozefl-mitto/repos", "events_url": "https://api.github.com/users/jozefl-mitto/events{/privacy}", "received_events_url": "https://api.github.com/users/jozefl-mitto/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e227594789d909fbad56f6036910938678738f92", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e227594789d909fbad56f6036910938678738f92", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e227594789d909fbad56f6036910938678738f92"}], "stats": {"total": 42, "additions": 36, "deletions": 6}, "files": [{"sha": "eb0a2f9b51089b1b7a5797307739e7e35df31d36", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8e4dc54a615a1c6d268ecae70bcf8e85054aa7e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8e4dc54a615a1c6d268ecae70bcf8e85054aa7e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d8e4dc54a615a1c6d268ecae70bcf8e85054aa7e", "patch": "@@ -1,3 +1,11 @@\n+2019-10-24  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n+\n+\t* config/msp430/constraints.md: Allow post_inc for \"Ya\" constraint.\n+\t* config/msp430/msp430.md (430x_shift_left): Use RLAM when the constant\n+\tshift amount is between 1 and 4.\n+\t(430x_arithmetic_shift_right): Use RRAM when the constant shift amount\n+\tis between 1 and 4.\n+\n 2019-10-24  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/92205"}, {"sha": "49fc769ec74795ac74166bef2e1b9671c52a42dc", "filename": "gcc/config/msp430/constraints.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8e4dc54a615a1c6d268ecae70bcf8e85054aa7e/gcc%2Fconfig%2Fmsp430%2Fconstraints.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8e4dc54a615a1c6d268ecae70bcf8e85054aa7e/gcc%2Fconfig%2Fmsp430%2Fconstraints.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmsp430%2Fconstraints.md?ref=d8e4dc54a615a1c6d268ecae70bcf8e85054aa7e", "patch": "@@ -82,6 +82,7 @@\n \t\t  (match_test (\"CONST_INT_P (XEXP (XEXP (op, 0), 1))\"))\n \t\t  (match_test (\"IN_RANGE (INTVAL (XEXP (XEXP (op, 0), 1)), HOST_WIDE_INT_M1U << 15, (1 << 15)-1)\"))))\n \t(match_code \"reg\" \"0\")\n+\t(match_code \"post_inc\" \"0\")\n \t)))\n \n (define_constraint \"Yc\""}, {"sha": "ed4c370261a82d8374cfa84e42e0e8c5a6d7f7ef", "filename": "gcc/config/msp430/msp430.md", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8e4dc54a615a1c6d268ecae70bcf8e85054aa7e/gcc%2Fconfig%2Fmsp430%2Fmsp430.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8e4dc54a615a1c6d268ecae70bcf8e85054aa7e/gcc%2Fconfig%2Fmsp430%2Fmsp430.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmsp430%2Fmsp430.md?ref=d8e4dc54a615a1c6d268ecae70bcf8e85054aa7e", "patch": "@@ -875,8 +875,10 @@\n \t\t   (match_operand    2 \"immediate_operand\" \"n\")))]\n   \"msp430x\"\n   \"*\n-  if (INTVAL (operands[2]) > 0 && INTVAL (operands[2]) < 16)\n-    return \\\"rpt\\t%2 { rlax.w\\t%0\\\";\n+  if (INTVAL (operands[2]) > 0 && INTVAL (operands[2]) < 5)\n+    return \\\"RLAM.W\\t%2, %0\\\";\n+  else if (INTVAL (operands[2]) >= 5 && INTVAL (operands[2]) < 16)\n+    return \\\"RPT\\t%2 { RLAX.W\\t%0\\\";\n   return \\\"# nop left shift\\\";\n   \"\n )\n@@ -960,8 +962,10 @@\n \t\t     (match_operand    2 \"immediate_operand\" \"n\")))]\n   \"msp430x\"\n   \"*\n-  if (INTVAL (operands[2]) > 0 && INTVAL (operands[2]) < 16)\n-    return \\\"rpt\\t%2 { rrax.w\\t%0\\\";\n+  if (INTVAL (operands[2]) > 0 && INTVAL (operands[2]) < 5)\n+    return \\\"RRAM.W\\t%2, %0\\\";\n+  else if (INTVAL (operands[2]) >= 5 && INTVAL (operands[2]) < 16)\n+    return \\\"RPT\\t%2 { RRAX.W\\t%0\\\";\n   return \\\"# nop arith right shift\\\";\n   \"\n )"}, {"sha": "ee43703ea541232b706fbd40683d547f433712b8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8e4dc54a615a1c6d268ecae70bcf8e85054aa7e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8e4dc54a615a1c6d268ecae70bcf8e85054aa7e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d8e4dc54a615a1c6d268ecae70bcf8e85054aa7e", "patch": "@@ -1,3 +1,11 @@\n+2019-10-24  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n+\n+\t* gcc.target/msp430/emulate-slli.c: Skip for -mcpu=msp430.\n+\tAdd shift by a constant 5 bits.\n+\tUpdate scan-assembler directives.\n+\t* gcc.target/msp430/emulate-srai.c: Likewise.\n+\t* gcc.target/msp430/emulate-srli.c: Skip for -mcpu=msp430.\n+\n 2019-10-24  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/92205"}, {"sha": "1c8459cfec5b29da8dba937058a8658e27e59c02", "filename": "gcc/testsuite/gcc.target/msp430/emulate-slli.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8e4dc54a615a1c6d268ecae70bcf8e85054aa7e/gcc%2Ftestsuite%2Fgcc.target%2Fmsp430%2Femulate-slli.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8e4dc54a615a1c6d268ecae70bcf8e85054aa7e/gcc%2Ftestsuite%2Fgcc.target%2Fmsp430%2Femulate-slli.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmsp430%2Femulate-slli.c?ref=d8e4dc54a615a1c6d268ecae70bcf8e85054aa7e", "patch": "@@ -1,15 +1,19 @@\n /* { dg-do compile } */\n+/* { dg-skip-if \"\" { *-*-* } { \"-mcpu=msp430\" } { \"\" } } */\n /* { dg-options \"-Os\" } */\n /* { dg-final { scan-assembler-not \"mspabi_slli\" } } */\n-/* { dg-final { scan-assembler \"rlax\" } } */\n+/* { dg-final { scan-assembler \"RLAM.W\\t#4\" } } */\n+/* { dg-final { scan-assembler \"RPT\\t#5 \\{ RLAX.W\" } } */\n \n /* Ensure that HImode shifts with source operand in memory are emulated with a\n    rotate instructions.  */\n \n int a;\n+int b;\n \n void\n foo (void)\n {\n   a = a << 4;\n+  b = b << 5;\n }"}, {"sha": "f3f6dae94eaa797cc960691b01b88896ca49398b", "filename": "gcc/testsuite/gcc.target/msp430/emulate-srai.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8e4dc54a615a1c6d268ecae70bcf8e85054aa7e/gcc%2Ftestsuite%2Fgcc.target%2Fmsp430%2Femulate-srai.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8e4dc54a615a1c6d268ecae70bcf8e85054aa7e/gcc%2Ftestsuite%2Fgcc.target%2Fmsp430%2Femulate-srai.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmsp430%2Femulate-srai.c?ref=d8e4dc54a615a1c6d268ecae70bcf8e85054aa7e", "patch": "@@ -1,15 +1,19 @@\n /* { dg-do compile } */\n+/* { dg-skip-if \"\" { *-*-* } { \"-mcpu=msp430\" } { \"\" } } */\n /* { dg-options \"-Os\" } */\n /* { dg-final { scan-assembler-not \"mspabi_srai\" } } */\n-/* { dg-final { scan-assembler \"rrax\" } } */\n+/* { dg-final { scan-assembler \"RRAM.W\\t#4\" } } */\n+/* { dg-final { scan-assembler \"RPT\\t#5 \\{ RRAX.W\" } } */\n \n /* Ensure that HImode shifts with source operand in memory are emulated with a\n    rotate instructions.  */\n \n int a;\n+int b;\n \n void\n foo (void)\n {\n   a = a >> 4;\n+  b = b >> 5;\n }"}, {"sha": "f870d13f86b765b791ab8cd76fb5b23e67d345aa", "filename": "gcc/testsuite/gcc.target/msp430/emulate-srli.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8e4dc54a615a1c6d268ecae70bcf8e85054aa7e/gcc%2Ftestsuite%2Fgcc.target%2Fmsp430%2Femulate-srli.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8e4dc54a615a1c6d268ecae70bcf8e85054aa7e/gcc%2Ftestsuite%2Fgcc.target%2Fmsp430%2Femulate-srli.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmsp430%2Femulate-srli.c?ref=d8e4dc54a615a1c6d268ecae70bcf8e85054aa7e", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do compile } */\n+/* { dg-skip-if \"\" { *-*-* } { \"-mcpu=msp430\" } { \"\" } } */\n /* { dg-options \"-Os\" } */\n /* { dg-final { scan-assembler-not \"mspabi_srli\" } } */\n /* { dg-final { scan-assembler \"rrum\" } } */"}]}