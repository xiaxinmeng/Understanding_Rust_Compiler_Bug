{"sha": "363aab219509999ae48a7c8e5c515e7d82f08474", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzYzYWFiMjE5NTA5OTk5YWU0OGE3YzhlNWM1MTVlN2Q4MmYwODQ3NA==", "commit": {"author": {"name": "Mikael Morin", "email": "mikael@gcc.gnu.org", "date": "2010-10-06T15:48:25Z"}, "committer": {"name": "Mikael Morin", "email": "mikael@gcc.gnu.org", "date": "2010-10-06T15:48:25Z"}, "message": "trans.c (gfc_restore_backend_locus): New function.\n\n2010-10-06  Mikael Morin  <mikael@gcc.gnu.org>\n\n\t* trans.c (gfc_restore_backend_locus): New function.\n\t(gfc_get_backend_locus): Renamed to ...\n\t(gfc_save_backend_locus): ... this.\n\t* trans.h (gfc_restore_backend_locus, gfc_get_backend_locus,\n\tgfc_save_backend_locus): Same.\n\t* trans-array.c (gfc_trans_g77_array, gfc_trans_dummy_array_bias,\n\tgfc_trans_deferred_array): Rename gfc_get_backend_locus to\n\tgfc_save_backend_locus.\n\t(gfc_trans_dummy_array_bias): Call gfc_restore_backend_locus at the\n\tend.\n\t(gfc_trans_g77_array, gfc_trans_deferred_array): Use\n\tgfc_restore_backend_locus instead of gfc_set_backend_locus.\n\t(gfc_trans_deferred_array): Call gfc_restore_backend_locus on early\n\treturn.\n\t* trans-decl.c (gfc_get_extern_function_decl, build_entry_thunks,\n\tgfc_trans_deferred_vars):\n\tRename gfc_get_backend_locus to gfc_save_backend_locus.\n\tUse gfc_restore_backend_locus insted of gfc_set_backend_locus.\n\nFrom-SVN: r165045", "tree": {"sha": "24bd13baa0b098c0036174293c6c3deeab54b3e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/24bd13baa0b098c0036174293c6c3deeab54b3e0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/363aab219509999ae48a7c8e5c515e7d82f08474", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/363aab219509999ae48a7c8e5c515e7d82f08474", "html_url": "https://github.com/Rust-GCC/gccrs/commit/363aab219509999ae48a7c8e5c515e7d82f08474", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/363aab219509999ae48a7c8e5c515e7d82f08474/comments", "author": null, "committer": null, "parents": [{"sha": "1b4544b729d2d4d159df843afa8252af13fb2e55", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b4544b729d2d4d159df843afa8252af13fb2e55", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b4544b729d2d4d159df843afa8252af13fb2e55"}], "stats": {"total": 76, "additions": 56, "deletions": 20}, "files": [{"sha": "384842dc30ade2c78e124142f89296ee58fdc468", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/363aab219509999ae48a7c8e5c515e7d82f08474/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/363aab219509999ae48a7c8e5c515e7d82f08474/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=363aab219509999ae48a7c8e5c515e7d82f08474", "patch": "@@ -1,3 +1,24 @@\n+2010-10-06  Mikael Morin  <mikael@gcc.gnu.org>\n+\n+\t* trans.c (gfc_restore_backend_locus): New function.\n+\t(gfc_get_backend_locus): Renamed to ...\n+\t(gfc_save_backend_locus): ... this.\n+\t* trans.h (gfc_restore_backend_locus, gfc_get_backend_locus,\n+\tgfc_save_backend_locus): Same.\n+\t* trans-array.c (gfc_trans_g77_array, gfc_trans_dummy_array_bias,\n+\tgfc_trans_deferred_array): Rename gfc_get_backend_locus to\n+\tgfc_save_backend_locus.\n+\t(gfc_trans_dummy_array_bias): Call gfc_restore_backend_locus at the\n+\tend.\n+\t(gfc_trans_g77_array, gfc_trans_deferred_array): Use\n+\tgfc_restore_backend_locus instead of gfc_set_backend_locus.\n+\t(gfc_trans_deferred_array): Call gfc_restore_backend_locus on early\n+\treturn.\n+\t* trans-decl.c (gfc_get_extern_function_decl, build_entry_thunks,\n+\tgfc_trans_deferred_vars):\n+\tRename gfc_get_backend_locus to gfc_save_backend_locus.\n+\tUse gfc_restore_backend_locus insted of gfc_set_backend_locus.\n+\n 2010-10-06  Mikael Morin  <mikael@gcc.gnu.org>\n \n \t* trans-array.c (gfc_build_constant_array_constructor): Free array"}, {"sha": "271b37cf80f88d387da03932e65317272ecc9b11", "filename": "gcc/fortran/trans-array.c", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/363aab219509999ae48a7c8e5c515e7d82f08474/gcc%2Ffortran%2Ftrans-array.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/363aab219509999ae48a7c8e5c515e7d82f08474/gcc%2Ffortran%2Ftrans-array.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-array.c?ref=363aab219509999ae48a7c8e5c515e7d82f08474", "patch": "@@ -4536,10 +4536,10 @@ gfc_trans_g77_array (gfc_symbol * sym, gfc_wrapped_block * block)\n   locus loc;\n   tree offset;\n   tree tmp;\n-  tree stmt;  \n+  tree stmt;\n   stmtblock_t init;\n \n-  gfc_get_backend_locus (&loc);\n+  gfc_save_backend_locus (&loc);\n   gfc_set_backend_locus (&sym->declared_at);\n \n   /* Descriptor type.  */\n@@ -4568,7 +4568,7 @@ gfc_trans_g77_array (gfc_symbol * sym, gfc_wrapped_block * block)\n     }\n   stmt = gfc_finish_block (&init);\n \n-  gfc_set_backend_locus (&loc);\n+  gfc_restore_backend_locus (&loc);\n \n   /* Add the initialization code to the start of the function.  */\n \n@@ -4629,7 +4629,7 @@ gfc_trans_dummy_array_bias (gfc_symbol * sym, tree tmpdesc,\n       return;\n     }\n \n-  gfc_get_backend_locus (&loc);\n+  gfc_save_backend_locus (&loc);\n   gfc_set_backend_locus (&sym->declared_at);\n \n   /* Descriptor type.  */\n@@ -4921,6 +4921,8 @@ gfc_trans_dummy_array_bias (gfc_symbol * sym, tree tmpdesc,\n   /* We don't need to free any memory allocated by internal_pack as it will\n      be freed at the end of the function by pop_context.  */\n   gfc_add_init_cleanup (block, stmtInit, stmtCleanup);\n+\n+  gfc_restore_backend_locus (&loc);\n }\n \n \n@@ -6500,7 +6502,7 @@ gfc_trans_deferred_array (gfc_symbol * sym, gfc_wrapped_block * block)\n       return;\n     }\n \n-  gfc_get_backend_locus (&loc);\n+  gfc_save_backend_locus (&loc);\n   gfc_set_backend_locus (&sym->declared_at);\n   descriptor = sym->backend_decl;\n \n@@ -6513,6 +6515,7 @@ gfc_trans_deferred_array (gfc_symbol * sym, gfc_wrapped_block * block)\n       gfc_trans_static_array_pointer (sym);\n \n       gfc_add_init_cleanup (block, gfc_finish_block (&init), NULL_TREE);\n+      gfc_restore_backend_locus (&loc);\n       return;\n     }\n \n@@ -6550,7 +6553,7 @@ gfc_trans_deferred_array (gfc_symbol * sym, gfc_wrapped_block * block)\n     gfc_conv_descriptor_data_set (&init, descriptor, null_pointer_node);\n \n   gfc_init_block (&cleanup);\n-  gfc_set_backend_locus (&loc);\n+  gfc_restore_backend_locus (&loc);\n \n   /* Allocatable arrays need to be freed when they go out of scope.\n      The allocatable components of pointers must not be touched.  */"}, {"sha": "23567924706d250c253b4b4d322e8a4859cc568e", "filename": "gcc/fortran/trans-decl.c", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/363aab219509999ae48a7c8e5c515e7d82f08474/gcc%2Ffortran%2Ftrans-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/363aab219509999ae48a7c8e5c515e7d82f08474/gcc%2Ffortran%2Ftrans-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-decl.c?ref=363aab219509999ae48a7c8e5c515e7d82f08474", "patch": "@@ -1454,13 +1454,13 @@ gfc_get_extern_function_decl (gfc_symbol * sym)\n \t  tree save_fn_decl = current_function_decl;\n \n \t  current_function_decl = NULL_TREE;\n-\t  gfc_get_backend_locus (&old_loc);\n+\t  gfc_save_backend_locus (&old_loc);\n \t  push_cfun (cfun);\n \n \t  gfc_create_function_decl (gsym->ns, true);\n \n \t  pop_cfun ();\n-\t  gfc_set_backend_locus (&old_loc);\n+\t  gfc_restore_backend_locus (&old_loc);\n \t  current_function_decl = save_fn_decl;\n \t}\n \n@@ -2028,7 +2028,7 @@ build_entry_thunks (gfc_namespace * ns, bool global)\n   /* This should always be a toplevel function.  */\n   gcc_assert (current_function_decl == NULL_TREE);\n \n-  gfc_get_backend_locus (&old_loc);\n+  gfc_save_backend_locus (&old_loc);\n   for (el = ns->entries; el; el = el->next)\n     {\n       VEC(tree,gc) *args = NULL;\n@@ -2192,7 +2192,7 @@ build_entry_thunks (gfc_namespace * ns, bool global)\n \t}\n     }\n \n-  gfc_set_backend_locus (&old_loc);\n+  gfc_restore_backend_locus (&old_loc);\n }\n \n \n@@ -3336,11 +3336,11 @@ gfc_trans_deferred_vars (gfc_symbol * proc_sym, gfc_wrapped_block * block)\n \t\t\t\t\t    NULL_TREE);\n \t\t    }\n \n-\t\t  gfc_get_backend_locus (&loc);\n+\t\t  gfc_save_backend_locus (&loc);\n \t\t  gfc_set_backend_locus (&sym->declared_at);\n \t\t  gfc_trans_auto_array_allocation (sym->backend_decl,\n \t\t\t\t\t\t   sym, block);\n-\t\t  gfc_set_backend_locus (&loc);\n+\t\t  gfc_restore_backend_locus (&loc);\n \t\t}\n \t      break;\n \n@@ -3412,20 +3412,20 @@ gfc_trans_deferred_vars (gfc_symbol * proc_sym, gfc_wrapped_block * block)\n \tgfc_trans_deferred_array (sym, block);\n       else if (sym->ts.type == BT_CHARACTER)\n \t{\n-\t  gfc_get_backend_locus (&loc);\n+\t  gfc_save_backend_locus (&loc);\n \t  gfc_set_backend_locus (&sym->declared_at);\n \t  if (sym->attr.dummy || sym->attr.result)\n \t    gfc_trans_dummy_character (sym, sym->ts.u.cl, block);\n \t  else\n \t    gfc_trans_auto_character_variable (sym, block);\n-\t  gfc_set_backend_locus (&loc);\n+\t  gfc_restore_backend_locus (&loc);\n \t}\n       else if (sym->attr.assign)\n \t{\n-\t  gfc_get_backend_locus (&loc);\n+\t  gfc_save_backend_locus (&loc);\n \t  gfc_set_backend_locus (&sym->declared_at);\n \t  gfc_trans_assign_aux_var (sym, block);\n-\t  gfc_set_backend_locus (&loc);\n+\t  gfc_restore_backend_locus (&loc);\n \t}\n       else if (sym->ts.type == BT_DERIVED\n \t\t && sym->value"}, {"sha": "a9513af7d28adc11d1c2f2c6f0d7b7853d6ae02f", "filename": "gcc/fortran/trans.c", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/363aab219509999ae48a7c8e5c515e7d82f08474/gcc%2Ffortran%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/363aab219509999ae48a7c8e5c515e7d82f08474/gcc%2Ffortran%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans.c?ref=363aab219509999ae48a7c8e5c515e7d82f08474", "patch": "@@ -1055,11 +1055,11 @@ gfc_add_block_to_block (stmtblock_t * block, stmtblock_t * append)\n }\n \n \n-/* Get the current locus.  The structure may not be complete, and should\n-   only be used with gfc_set_backend_locus.  */\n+/* Save the current locus.  The structure may not be complete, and should\n+   only be used with gfc_restore_backend_locus.  */\n \n void\n-gfc_get_backend_locus (locus * loc)\n+gfc_save_backend_locus (locus * loc)\n {\n   loc->lb = XCNEW (gfc_linebuf);\n   loc->lb->location = input_location;\n@@ -1077,6 +1077,17 @@ gfc_set_backend_locus (locus * loc)\n }\n \n \n+/* Restore the saved locus. Only used in conjonction with\n+   gfc_save_backend_locus, to free the memory when we are done.  */\n+\n+void\n+gfc_restore_backend_locus (locus * loc)\n+{\n+  gfc_set_backend_locus (loc);\n+  gfc_free (loc->lb);\n+}\n+\n+\n /* Translate an executable statement. The tree cond is used by gfc_trans_do.\n    This static function is wrapped by gfc_trans_code_cond and\n    gfc_trans_code.  */"}, {"sha": "b3c6032d03eeda47222e2967518396d62c12810e", "filename": "gcc/fortran/trans.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/363aab219509999ae48a7c8e5c515e7d82f08474/gcc%2Ffortran%2Ftrans.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/363aab219509999ae48a7c8e5c515e7d82f08474/gcc%2Ffortran%2Ftrans.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans.h?ref=363aab219509999ae48a7c8e5c515e7d82f08474", "patch": "@@ -491,8 +491,9 @@ struct module_htab_entry *gfc_find_module (const char *);\n void gfc_module_add_decl (struct module_htab_entry *, tree);\n \n /* Get and set the current location.  */\n+void gfc_save_backend_locus (locus *);\n void gfc_set_backend_locus (locus *);\n-void gfc_get_backend_locus (locus *);\n+void gfc_restore_backend_locus (locus *);\n \n /* Handle static constructor functions.  */\n extern GTY(()) tree gfc_static_ctors;"}]}