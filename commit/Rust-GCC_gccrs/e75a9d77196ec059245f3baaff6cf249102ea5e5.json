{"sha": "e75a9d77196ec059245f3baaff6cf249102ea5e5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTc1YTlkNzcxOTZlYzA1OTI0NWYzYmFhZmY2Y2YyNDkxMDJlYTVlNQ==", "commit": {"author": {"name": "Warren Levy", "email": "warrenl@cygnus.com", "date": "1999-07-02T04:25:05Z"}, "committer": {"name": "Warren Levy", "email": "warrenl@gcc.gnu.org", "date": "1999-07-02T04:25:05Z"}, "message": "PlainDatagramSocketImpl.java (ttl): Removed.\n\n\t* java/net/PlainDatagramSocketImpl.java (ttl): Removed.\n\t* java/net/natPlainDatagramSocketImpl.cc (setTimeToLive): Implemented.\n\t(getTimeToLive): Implemented.\n\t(setOption): Implemented IP_MULTICAST_IF.\n\nFrom-SVN: r27922", "tree": {"sha": "85fd677e43d4fd8b2d6349ba6f5ba12c33f41770", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/85fd677e43d4fd8b2d6349ba6f5ba12c33f41770"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e75a9d77196ec059245f3baaff6cf249102ea5e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e75a9d77196ec059245f3baaff6cf249102ea5e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e75a9d77196ec059245f3baaff6cf249102ea5e5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e75a9d77196ec059245f3baaff6cf249102ea5e5/comments", "author": null, "committer": null, "parents": [{"sha": "84d594532534434f54c8b2476482316c41abd164", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84d594532534434f54c8b2476482316c41abd164", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84d594532534434f54c8b2476482316c41abd164"}], "stats": {"total": 80, "additions": 68, "deletions": 12}, "files": [{"sha": "b041126c2ffa6e80aedeb9c97130831e3eea3752", "filename": "libjava/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e75a9d77196ec059245f3baaff6cf249102ea5e5/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e75a9d77196ec059245f3baaff6cf249102ea5e5/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=e75a9d77196ec059245f3baaff6cf249102ea5e5", "patch": "@@ -1,3 +1,10 @@\n+1999-07-02  Warren Levy  <warrenl@cygnus.com>\n+\n+\t* java/net/PlainDatagramSocketImpl.java (ttl): Removed.\n+\t* java/net/natPlainDatagramSocketImpl.cc (setTimeToLive): Implemented.\n+\t(getTimeToLive): Implemented.\n+\t(setOption): Implemented IP_MULTICAST_IF.\n+\n 1999-07-01  Bryce McKinlay  <bryce@albatross.co.nz>\n \n \t* java/lang/String.java (toString): Check for this == null and throw"}, {"sha": "c65809129bab1129c8e49752cf470d5ecedcbfcb", "filename": "libjava/java/net/PlainDatagramSocketImpl.java", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e75a9d77196ec059245f3baaff6cf249102ea5e5/libjava%2Fjava%2Fnet%2FPlainDatagramSocketImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e75a9d77196ec059245f3baaff6cf249102ea5e5/libjava%2Fjava%2Fnet%2FPlainDatagramSocketImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FPlainDatagramSocketImpl.java?ref=e75a9d77196ec059245f3baaff6cf249102ea5e5", "patch": "@@ -43,10 +43,8 @@ class PlainDatagramSocketImpl extends DatagramSocketImpl\n   // localAddress cache  \n   InetAddress localAddress;\n \n-  // These values are set/read by setOption/getOption.\n+  // 'timeout' is set/read by setOption/getOption.\n   int timeout = 0;\n-  /* InetAddress iface = null; */\n-  int ttl = -1;\n \n   // FIXME: Probably should have bind (and create?) calls from DatagramSocket\n   // constuctor.  If so, then same change should be made to the corresponding"}, {"sha": "29a236c8fa86c6cf34b0a8053e441f7aed7f9c5c", "filename": "libjava/java/net/natPlainDatagramSocketImpl.cc", "status": "modified", "additions": 60, "deletions": 9, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e75a9d77196ec059245f3baaff6cf249102ea5e5/libjava%2Fjava%2Fnet%2FnatPlainDatagramSocketImpl.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e75a9d77196ec059245f3baaff6cf249102ea5e5/libjava%2Fjava%2Fnet%2FnatPlainDatagramSocketImpl.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FnatPlainDatagramSocketImpl.cc?ref=e75a9d77196ec059245f3baaff6cf249102ea5e5", "patch": "@@ -51,6 +51,14 @@ union McastReq\n #endif\n };\n \n+union InAddr\n+{\n+  struct in_addr addr;\n+#ifdef HAVE_INET6\n+  struct in6_addr addr6;\n+#endif\n+};\n+\n \n // FIXME: routines here and/or in natPlainSocketImpl.cc could throw\n // NoRouteToHostException; also consider UnknownHostException, ConnectException.\n@@ -268,17 +276,31 @@ java::net::PlainDatagramSocketImpl::receive (java::net::DatagramPacket *p)\n void\n java::net::PlainDatagramSocketImpl::setTimeToLive (jint ttl)\n {\n-  this->ttl = ttl;\n-  // throws IOException;\n-  // FIXME: TODO - PlainDatagramSocketImpl::setTimeToLive\n+  // Assumes IPPROTO_IP rather than IPPROTO_IPV6 since socket created is IPv4.\n+  char val = (char) ttl;\n+  socklen_t val_len = sizeof(val);\n+  if (::setsockopt (fnum, IPPROTO_IP, IP_MULTICAST_TTL, &val, val_len) == 0)\n+    return;\n+\n+  char msg[100];\n+  char* strerr = strerror (errno);\n+  sprintf (msg, \"DatagramSocketImpl.setTimeToLime: %.*s\", 80, strerr);\n+  JvThrow (new java::io::IOException (JvNewStringUTF (msg)));\n }\n \n jint\n java::net::PlainDatagramSocketImpl::getTimeToLive ()\n {\n-  // throws IOException;\n-  // FIXME: TODO - PlainDatagramSocketImpl::getTimeToLive\n-  return ttl;\n+  // Assumes IPPROTO_IP rather than IPPROTO_IPV6 since socket created is IPv4.\n+  char val;\n+  socklen_t val_len = sizeof(val);\n+  if (::getsockopt (fnum, IPPROTO_IP, IP_MULTICAST_TTL, &val, &val_len) == 0)\n+    return ((int) val) & 0xFF;\n+\n+  char msg[100];\n+  char* strerr = strerror (errno);\n+  sprintf (msg, \"DatagramSocketImpl.setTimeToLime: %.*s\", 80, strerr);\n+  JvThrow (new java::io::IOException (JvNewStringUTF (msg)));\n }\n \n void\n@@ -385,9 +407,38 @@ java::net::PlainDatagramSocketImpl::setOption (jint optID,\n           JvNewStringUTF (\"SO_BINDADDR: read only option\")));\n         return;\n       case _Jv_IP_MULTICAST_IF_ :\n-\t// FIXME: TODO - Implement IP_MULTICAST_IF.\n-        JvThrow (new java::lang::InternalError (\n-          JvNewStringUTF (\"IP_MULTICAST_IF: option not implemented\")));\n+\tunion InAddr u;\n+        jbyteArray haddress;\n+\tjbyte *bytes;\n+\tint len;\n+\tint level, opname;\n+\tconst char *ptr;\n+\n+\thaddress = ((java::net::InetAddress *) value)->address;\n+\tbytes = elements (haddress);\n+\tlen = haddress->length;\n+\tif (len == 4)\n+\t  {\n+\t    level = IPPROTO_IP;\n+\t    opname = IP_MULTICAST_IF;\n+\t    memcpy (&u.addr, bytes, len);\n+\t    len = sizeof (struct in_addr);\n+\t    ptr = (const char *) &u.addr;\n+\t  }\n+#ifdef HAVE_INET6\n+\telse if (len == 16)\n+\t  {\n+\t    level = IPPROTO_IPV6;\n+\t    opname = IPV6_MULTICAST_IF;\n+\t    memcpy (&u.addr6, bytes, len);\n+\t    len = sizeof (struct in_addr6);\n+\t    ptr = (const char *) &u.addr6;\n+\t  }\n+#endif\n+\telse\n+\t  goto error;\n+\tif (::setsockopt (fnum, level, opname, ptr, len) != 0)\n+\t  goto error;\n         return;\n       case _Jv_SO_TIMEOUT_ :\n \ttimeout = val;"}]}