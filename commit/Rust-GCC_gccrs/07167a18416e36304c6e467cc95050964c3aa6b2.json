{"sha": "07167a18416e36304c6e467cc95050964c3aa6b2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDcxNjdhMTg0MTZlMzYzMDRjNmU0NjdjYzk1MDUwOTY0YzNhYTZiMg==", "commit": {"author": {"name": "Jan van Male", "email": "jan.vanmale@fenk.wau.nl", "date": "2001-07-10T10:40:22Z"}, "committer": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2001-07-10T10:40:22Z"}, "message": "regmove.c (replace_in_call_usage): Fix warnings.\n\n2001-07-10  Jan van Male  <jan.vanmale@fenk.wau.nl>\n\n\t* regmove.c (replace_in_call_usage): Fix warnings.\n\t* sched-deps.c (add_dependence): Fix warnings.\n\t* simplify-rtx.c (simplify_subreg): Likewise.\n\tReturn NULL_RTX instead of NULL.\n\n\t* reg-stack.c (emit_swap_insn): Eliminate warnings.\n\t(subst_asm_stack_regs): Likewise.\n\n\t* combine.c (num_sign_bit_copies): Cast bitwidth to int to avoid\n\twarnings.\n\n\t* dwarf2out.c (output_call_frame_info): Declare i as int.\n\t(build_abbrev_table): Declare n_alloc as int.\n\t(dwarf2out_finish): Initialize die.\n\t* except.c: Declare sjlj_funcdef_number as unsigned.\n\t(connect_post_landing_pads): Declare j as unsigned.\n\t(convert_to_eh_region_ranges): Initialize call_site.\n\t(output_function_exception_table): Initialize tt_format_size.\n\t* expr.c (move_by_pieces_1): Initialize to1.\n\t(store_constructor): Initialize minelt and maxelt.\n\t* flow.c (mark_regs_live_at_end): Declare i as unsigned.\n\t* function.c (instantiate_decls): Avoid signed/unsigned warning.\n\n\t* c-decl.c (combine_parm_decls): Unused, remove.\n\t* c-tree.h: Remove prototype for combine_parm_decls.\n\n\t* reload.c (push_reload): Fix warning.\n\t(regno_clobbered_p): Likewise.\n\t* reload1.c (replace_pseudos_in_call_usage): Likewise.\n\t(reload_combine): Likewise.\n\n\t* bitmap.c: Rename bitmap_zero to bitmap_zero_bits to fix warnings.\n\t* bitmap.h: Rename bitmap_zero to bitmap_zero_bits to fix\n\twarnings.\n\t* bitmap.c (bitmap_operation): Change user.\n\t* bitmap.h (EXECUTE_IF_AND_COMPL_IN_BITMAP): Likewise.\n\nFor cp/:\n2001-07-10  Jan van Male  <jan.vanmale@fenk.wau.nl>\n\n\t* call.c (build_op_delete_call): Initialize fn.\n\t(convert_like_real): Delete conditional.\n\t(joust): Initialize *w and *l.\n\t* class.c: Add prototype for binfo_ctor_vtable.\n\t(get_primary_binfo): Initialize result.\n\t* init.c (build_java_class_ref): Initialize name.\n\n\t* typeck.c (unary_complex_lvalue): Do not duplicate the\n\targument to modify, pre-, or post-increment when used as an\n\tlvalue and when the argument has side-effects.\n\nFor ch/:\n2001-07-10  Jan van Male  <jan.vanmale@fenk.wau.nl>\n\n\t* ch-tree.h: Remove prototype for combine_parm_decls, unused\n\tfunction.\n\nFrom-SVN: r43894", "tree": {"sha": "a0955a8628ccf3a6b482379b7ca3d78b705a6b85", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a0955a8628ccf3a6b482379b7ca3d78b705a6b85"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/07167a18416e36304c6e467cc95050964c3aa6b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07167a18416e36304c6e467cc95050964c3aa6b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/07167a18416e36304c6e467cc95050964c3aa6b2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07167a18416e36304c6e467cc95050964c3aa6b2/comments", "author": null, "committer": null, "parents": [{"sha": "ae0ed63adcac41147fc40bd965fc5029082bd571", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae0ed63adcac41147fc40bd965fc5029082bd571", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae0ed63adcac41147fc40bd965fc5029082bd571"}], "stats": {"total": 140, "additions": 95, "deletions": 45}, "files": [{"sha": "b80bf5a2e0df3ad5e133e3df88d21b9d801bbc35", "filename": "gcc/ChangeLog", "status": "modified", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07167a18416e36304c6e467cc95050964c3aa6b2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07167a18416e36304c6e467cc95050964c3aa6b2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=07167a18416e36304c6e467cc95050964c3aa6b2", "patch": "@@ -1,3 +1,42 @@\n+2001-07-10  Jan van Male  <jan.vanmale@fenk.wau.nl>\n+\n+\t* regmove.c (replace_in_call_usage): Fix warnings.\n+\t* sched-deps.c (add_dependence): Fix warnings.\n+\t* simplify-rtx.c (simplify_subreg): Likewise.\n+\tReturn NULL_RTX instead of NULL.\n+\n+\t* reg-stack.c (emit_swap_insn): Eliminate warnings.\n+\t(subst_asm_stack_regs): Likewise.\n+\n+\t* combine.c (num_sign_bit_copies): Cast bitwidth to int to avoid\n+\twarnings.\n+\n+\t* dwarf2out.c (output_call_frame_info): Declare i as int.\n+\t(build_abbrev_table): Declare n_alloc as int.\n+\t(dwarf2out_finish): Initialize die.\n+\t* except.c: Declare sjlj_funcdef_number as unsigned.\n+\t(connect_post_landing_pads): Declare j as unsigned.\n+\t(convert_to_eh_region_ranges): Initialize call_site.\n+\t(output_function_exception_table): Initialize tt_format_size.\n+\t* expr.c (move_by_pieces_1): Initialize to1.\n+\t(store_constructor): Initialize minelt and maxelt.\n+\t* flow.c (mark_regs_live_at_end): Declare i as unsigned.\n+\t* function.c (instantiate_decls): Avoid signed/unsigned warning.\n+\n+\t* c-decl.c (combine_parm_decls): Unused, remove.\n+\t* c-tree.h: Remove prototype for combine_parm_decls.\n+\n+\t* reload.c (push_reload): Fix warning.\n+\t(regno_clobbered_p): Likewise.\n+\t* reload1.c (replace_pseudos_in_call_usage): Likewise.\n+\t(reload_combine): Likewise.\n+\n+\t* bitmap.c: Rename bitmap_zero to bitmap_zero_bits to fix warnings.\n+\t* bitmap.h: Rename bitmap_zero to bitmap_zero_bits to fix\n+\twarnings.\n+\t* bitmap.c (bitmap_operation): Change user.\n+\t* bitmap.h (EXECUTE_IF_AND_COMPL_IN_BITMAP): Likewise.\n+\n 2001-07-10  Eric Christopher  <echristo@redhat.com>\n \n \t* config/mips/mips.c (override_options): Fix typo."}, {"sha": "694ecf459e01c64c3c4c15ac3578e1d29b0e3fad", "filename": "gcc/ch/ChangeLog", "status": "modified", "additions": 42, "deletions": 38, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07167a18416e36304c6e467cc95050964c3aa6b2/gcc%2Fch%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07167a18416e36304c6e467cc95050964c3aa6b2/gcc%2Fch%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fch%2FChangeLog?ref=07167a18416e36304c6e467cc95050964c3aa6b2", "patch": "@@ -1,3 +1,8 @@\n+2001-07-10  Jan van Male  <jan.vanmale@fenk.wau.nl>\n+\n+\t* ch-tree.h: Remove prototype for combine_parm_decls, unused\n+\tfunction.\n+\n 2001-06-28  Gabriel Dos Reis  <gdr@merlin.codesourcery.com>\n \n \t* lang.c: #include diagnostic.h\n@@ -206,7 +211,7 @@ Sat May 27 11:24:26 2000  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n Wed May 17 17:27:44 2000  Andrew Cagney  <cagney@b1.cygnus.com>\n \n \t* decl.c (c_decode_option): Update -Wall unused flags by\n- \tcalling set_Wunused.\n+\tcalling set_Wunused.\n \t(poplevel): Replace warn_unused with warn_unused_label.\n \n 2000-05-09  Zack Weinberg  <zack@wolery.cumb.org>\n@@ -398,7 +403,7 @@ Fri Sep 24 10:48:10 1999  Bernd Schmidt  <bernds@cygnus.co.uk>\n \n \t* ch-tree.h (builtin_function): Don't declare.\n \t* decl.c (builtin_function): New arg CLASS.  Arg FUNCTION_CODE now of\n- \ttype int.  All callers changed.\n+\ttype int.  All callers changed.\n \tSet the builtin's DECL_BUILT_IN_CLASS.\n \n 1999-09-20  Nick Clifton  <nickc@cygnus.com>\n@@ -851,7 +856,7 @@ Wed Sep 30 19:41:36 1998  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n Wed Sep 30 19:24:41 1998  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* actions.c (id_cmp): Do pointer arithmetic as `long' not `int' to\n- \tensure enough bits for calculation.\n+\tensure enough bits for calculation.\n \n \t* ch-tree.h (check_text_length): Remove unused parameter.\n \n@@ -919,23 +924,23 @@ Sun Sep 20 09:25:13 1998  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \t(grant.o): Depend on system.h, toplev.h and output.h.\n \n \t* actions.c: Include system.h and toplev.h.  Remove redundant\n- \tprototypes.\n+\tprototypes.\n \t(build_cause_exception): Add default case in switch.\n \t(update_else_range_for_range): Add parentheses around && within ||.\n \t(chill_handle_multi_case_label_list): Remove unused variable\n \t`selector_value'.\n \t(print_missing_cases): Reconcile format specifiers vs arguments in\n- \tcalls to sprintf.\n+\tcalls to sprintf.\n \n \t* ch-tree.h: Don't include stdio.h.  Wrap prototypes using FILE*\n- \twith macro BUFSIZ.  Add missing prototypes.\n+\twith macro BUFSIZ.  Add missing prototypes.\n \n \t* convert.c: Include system.h and toplev.h.  Remove redundant\n \tprototypes.\n-  \t(convert): Remove unused variable `errstr'.\n+\t(convert): Remove unused variable `errstr'.\n \n \t* decl.c: Include system.h and toplev.h.  Remove redundant\n- \tprototypes.\n+\tprototypes.\n \t(builtin_scope): Add missing initializers.\n \t(clear_scope): Likewise.\n \t(allocate_lang_decl): Mark parameter `t' with ATTRIBUTE_UNUSED.\n@@ -949,15 +954,15 @@ Sun Sep 20 09:25:13 1998  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \t(finish_decl): Remove unused variable `type'.\n \t(maybe_build_cleanup): Mark parameter `decl' with ATTRIBUTE_UNUSED.\n \t(complete_array_type): Mark parameters `type', `initial_value' and\n- \t`do_default' with ATTRIBUTE_UNUSED.\n+\t`do_default' with ATTRIBUTE_UNUSED.\n \t(start_struct): Mark parameter `name' with ATTRIBUTE_UNUSED.\n \t(start_enum): Likewise.\n \t(shadow_record_fields): Remove unused variables `type' and `parent'.\n \n \t* except.c: Include toplev.h.  Remove redundant prototypes.\n \n \t* expr.c: Include system.h and toplev.h.  Don't define NULL.\n-  \tRemove redundant prototypes.\n+\tRemove redundant prototypes.\n \t(internal_build_compound_expr): Mark parameter `first_p' with\n \tATTRIBUTE_UNUSED.\n \t(build_allocate_getstack): Remove unused variable `init'.\n@@ -971,19 +976,19 @@ Sun Sep 20 09:25:13 1998  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \t(powersetlen): Remove unused variables `domain' and `temp'.\n \n \t* grant.c: Include system.h, toplev.h and output.h.  Don't handle\n- \tstrchr/strrchr.  Remove redundant prototypes.\n-  \t(decode_constant_selective): Remove unused variables `op' and `wrk'.\n+\tstrchr/strrchr.  Remove redundant prototypes.\n+\t(decode_constant_selective): Remove unused variables `op' and `wrk'.\n \t(push_granted): Mark parameters `name' and `decl' with\n- \tATTRIBUTE_UNUSED.\n+\tATTRIBUTE_UNUSED.\n \n \t* inout.c: Include system.h and toplev.h.  Remove redundant\n- \tprototypes.\n+\tprototypes.\n \t(textlocation_mode): Use &&, not &, when comparing two truth\n \tvalues.\n \t(scanformcont): Remove unused label `do_the_action'.\n \n \t* lang.c: Include system.h and toplev.h.  Remove redundant\n- \tprototypes.\n+\tprototypes.\n \t(lookup_interface): Mark parameter `arg' with ATTRIBUTE_UNUSED.\n \t(maybe_objc_comptypes): Likewise for parameters `lhs' and `rhs'.\n \t(lang_print_xnode): Likewise for parameters `file', `node' and\n@@ -993,7 +998,7 @@ Sun Sep 20 09:25:13 1998  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \tATTRIBUTE_UNUSED.\n \n \t* lex.c: Include system.h and toplev.h.  Remove redundant\n- \tprototypes.  Don't handle strchr/strrchr.  Use CAPITALIZED\n+\tprototypes.  Don't handle strchr/strrchr.  Use CAPITALIZED\n \tversions of ctype macros from system.h.  Cast ctype arguments to\n \tunsigned char when necessary.\n \t(last_token, RETURN_TOKEN): Hide definition.\n@@ -1049,7 +1054,7 @@ Sun Sep 20 09:25:13 1998  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \t* typeck.c: Include system.h and toplev.h.  Remove redundant\n \tprototypes.\n \t(extract_constant_from_buffer): Make function static.  Add\n- \texplicit braces to avoid ambiguous `else'.\n+\texplicit braces to avoid ambiguous `else'.\n \t(expand_constant_to_buffer): Likewise.\n \t(build_chill_slice): remove unused variable `is_static'.\n \t(chill_compatible): Add explicit braces to avoid ambiguous `else'.\n@@ -1063,7 +1068,7 @@ Mon Sep 14 16:46:36 1998  Dave Brolley  <brolley@cygnus.com>\n \tdomain type of the array.\n \n \t* expr.c (build_chill_function_call): Remove redundant call to\n- \tchill_convert_to_assignment\n+\tchill_convert_to_assignment\n \n Thu Sep 10 17:52:36 1998  Dave Brolley  <brolley@cygnus.com>\n \n@@ -1129,7 +1134,7 @@ Wed Jun 10 12:08:09 1998  Dave Brolley  <brolley@cygnus.com>\n Wed May 27 10:33:41 1998  Dave Brolley  <brolley@cygnus.com>\n \n \t* actions.c (chill_handle_multi_case_label): Arguments 1 and 2 to\n- \tchill_handle_multi_case_label_range were reversed.\n+\tchill_handle_multi_case_label_range were reversed.\n \n \t* Make-lang.in (chill): Use the correct gcc in the driver script.\n \n@@ -1245,13 +1250,13 @@ Fri Mar 20 16:06:41 1998  Dave Brolley  <brolley@cygnus.com>\n Thu Mar 19 13:42:33 1998  Dave Brolley  <brolley@cygnus.com>\n \n \t* typeck.c (apply_chill_array_layout): Use\n- \tTYPE_PRECISION (chill_integer_type_node) in stead of BITS_PER_WORD for\n+\tTYPE_PRECISION (chill_integer_type_node) in stead of BITS_PER_WORD for\n \tthe word size.\n \n Wed Mar 18 16:25:48 1998  Dave Brolley  <brolley@cygnus.com>\n \n \t* typeck.c (apply_chill_field_layout): Only set DECL_BIT_FIELD for discrete\n- \tfields.\n+\tfields.\n \n \t* parse.c (parse_multi_dimension_case_action): Call emit_line_note at the\n \tproper places.\n@@ -1323,7 +1328,7 @@ Wed Mar  4 16:08:26 1998  Dave Brolley  <brolley@cygnus.com>\n \t(build_simple_array_type): Attach array layout to TYPE_ATTRIBUTES.\n \t(apply_chill_array_layout): New function to implement array layout.\n \t(layout_chill_array_type): Call apply_chill_array_layout and reset\n- \tTYPE_ATTRIBUTES to NULL_TREE.\n+\tTYPE_ATTRIBUTES to NULL_TREE.\n \t(build_chill_array_type): Extend to handle one array layout per index mode.\n \t(smash_dummy_type): Call build_simple_array_type with new argument.\n \n@@ -1396,7 +1401,7 @@ Thu Feb 12 15:44:50 1998  Dave Brolley  <brolley@cygnus.com>\n \t* parse.c (parse_case_action): Implement multi-dimension CASE action.\n \t(parse_multi_dimension_case_action): Added.\n \t(parse_single_dimension_case_action): Added based on code moved from\n- \tparse_case_action.\n+\tparse_case_action.\n \n \t* expr.c (check_case_selector_list): Added.\n \n@@ -1418,7 +1423,7 @@ Fri Feb  6 16:43:41 1998  Dave Brolley  <brolley@cygnus.com>\n Thu Feb  5 14:03:00 1998  Dave Brolley  <brolley@cygnus.com>\n \n \t* decl.c (chill_tree_code_type):  Change this to be an array of char like\n- \tthe tree_code_type in the rest of gcc.\n+\tthe tree_code_type in the rest of gcc.\n \n \t* ch-tree.def (chill_tree_code_type): See decl.c.\n \n@@ -1616,7 +1621,7 @@ Tue Mar  5 22:31:20 1996  Per Bothner  <bothner@kalessin.cygnus.com>\n \n \t* tree.c (build_string_type):  Generalize to also create bitstrings.\n \tReturn error_mark_node if an argument is an ERROR_MARK.\n- \t(build_bitstring_type):  Simplify - just call build_string_type.\n+\t(build_bitstring_type):  Simplify - just call build_string_type.\n \n Tue Mar  5 03:48:32 1996  Wilfried Moser  <moser@blues.cygnus.com>\n \n@@ -1634,7 +1639,7 @@ Thu Feb 29 23:39:54 1996  Per Bothner  <bothner@kalessin.cygnus.com>\n \n \tSimplify NOVELTY representation.\n \t* ch-tree.h (CH_NOVELTY):  Re-implement as plain TYPE_CONTEXT.\n- \t(CH_NOVELTY_FLAG):  Removed.  (Just use CH_NOVELTY.)\n+\t(CH_NOVELTY_FLAG):  Removed.  (Just use CH_NOVELTY.)\n \t* decl.c (push_modedef):  Make copy even for SYNMODE.\n \tbut not for internal typedefs (indicated by make_newmode==-1).\n \t* tasking.c:  Call push_modedef with make_newmode==-1.\n@@ -1723,7 +1728,7 @@ Mon Feb  5 22:17:13 1996  Per Bothner  <bothner@kalessin.cygnus.com>\n \t* tree.c (discrete_count), ch-tree.h:  New function.\n \t* expr.c (build_concate_expr, build_chill_repetition_op,\n \tchill_expand_expr):  Use discrete_count;  make sure arguments\n- \tto size_binop are sizetype.\n+\tto size_binop are sizetype.\n \t(powersetlen):  Trvialize using discrete_count.\n \n \t* inout.c (process_io_list):  Use new assign_temp function.\n@@ -1792,7 +1797,7 @@ Mon Dec 11 17:36:44 1995  Per Bothner  <bothner@kalessin.cygnus.com>\n \n \t* inout.c (build_chill_associate, assoc_call, build_chill_readrecord,\n \tbuild_chill_getassociation, build_chill_getusage,\n- \tbuild_chill_gettextrecord,  build_chill_gettextaccess:  Simplify\n+\tbuild_chill_gettextrecord,  build_chill_gettextaccess:  Simplify\n \t- modify TREE_TYPE of CALL_EXPR, instead of building a CONVERT_EXPR.\n \n \t* parse.c (parse_action):  Minor simplification.\n@@ -3262,7 +3267,7 @@ Wed Nov  2 05:33:03 1994  Wilfried Moser  (moser@rtl.cygnus.com)\n \tbuild_receive_signal_case_label, build_receive_buffer_case_label,\n \tbuild_delay_case_start, build_delay_action, expand_send_buffer):\n \tAdd processing of timesupervision.\n-\t(tasking_init): Change definitions of runtime \tfunctions.\n+\t(tasking_init): Change definitions of runtime\tfunctions.\n \n \t* timing.c (timing_init): New function for initialisation of\n \ttiming related stuff.\n@@ -7023,7 +7028,7 @@ Wed Oct 27 08:25:56 1993  Bill Cox  (bill@rtl.cygnus.com)\n \n Tue Oct 26 00:12:19 1993  Per Bothner  (bothner@kalessin.cygnus.com)\n \n-\t* ch-typeck.c (build_chill_array_ref): \tCheck for and complain\n+\t* ch-typeck.c (build_chill_array_ref):\tCheck for and complain\n \tif there are more index expressions than the array rank.\n \n \t* ch-actions.c (chill_expand_assignment):  Emit appropriate\n@@ -7580,7 +7585,7 @@ Fri Sep 24 15:27:13 1993  Bill Cox  (bill@cygnus.com)\n \t* ch-decl.c (lookup_remembered_names): Removed.  It was being\n \t  misused in ch-lex.l.\n \t* ch-lex.l (name_type_signal): Revert last change.  Basically,\n-  \t  we cannot use the C typedef/variable name trick in CHILL, due\n+\t  we cannot use the C typedef/variable name trick in CHILL, due\n \t  due to the language's 2-pass nature.\n \t* ch-parse.y (arrayindex): Rewrite for correctness, and to avoid\n \t  a seg fault.\n@@ -7955,7 +7960,7 @@ Sun Sep 12 18:06:23 1993  Bill Cox  (bill@rtl.cygnus.com)\n \t* ch-parse.y (rccase_label_flag): Renamed from rccase_ifs.\n \t  All uses renamed also.\n \t  (end_function): Always poplevel, not just in pass 2.\n- \t  (quasi_pdef): Check for end-label matching.\n+\t  (quasi_pdef): Check for end-label matching.\n \t  (quasi_formparlist): Write more clearly.\n \t  (rcaltlist, optelsercvcase, optstartset): Add ignore_actions\n \t  guards.\n@@ -8289,7 +8294,7 @@ Wed Aug 18 17:36:53 1993  Bill Cox  (bill@cygnus.com)\n \t  'with' variables seen (both passes), and always pop that\n \t  number of levels.\n \t  (structured_variable_list): Always chain variables into a list.\n-  \t  (structured_variable): Put pushlevel here (from shadow_record_fields).\n+\t  (structured_variable): Put pushlevel here (from shadow_record_fields).\n \t* ch-tasking.c: Indentation fixes.\n \t* ch-tree.h: Change proto.\n \t* chill.texi: Add Blue Book section numbers to unimplemented\n@@ -8350,7 +8355,7 @@ Mon Aug 16 14:41:29 1993  Per Bothner  (bothner@kalessin.cygnus.com)\n \t* ch-decl.c (temp_pushdecl, struct shadowing):  Removed.\n \t* ch-decl.c (bind_saved_names):  Remove blevel parameter;\n \tuse current_scope global instead.  Do some other cleanups.\n- \t* ch-decl.c (save_expr_under_name):  Create an ALIAS_DECL.\n+\t* ch-decl.c (save_expr_under_name):  Create an ALIAS_DECL.\n \t* ch-decl.c (pushdecllist, save_expr_under_name):  Use proclaim_decl.\n \t* ch-satisfy.c (satisfy, safe_satisfy_decl):  Be more careful\n \tto not do inappropriate things (e.g. type layout) if LOOKUP_ONLY.\n@@ -8361,7 +8366,7 @@ Mon Aug 16 14:41:29 1993  Per Bothner  (bothner@kalessin.cygnus.com)\n Mon Aug 16 11:13:07 1993  Bill Cox  (bill@rtl.cygnus.com)\n \n \t* ch-actions.c (chill_comptypes): Correct handling reference\n- \t  of type 1.\n+\t  of type 1.\n \t  (build_chill_length, build_chill_num,\n \t   build_chill_sizeof): Convert result to CHILL integer.\n \t  (build_chill_function_call): Clean up INOUT and OUT\n@@ -10527,7 +10532,7 @@ Fri Apr  2 21:55:14 1993  Per Bothner  (bothner@rtl.cygnus.com)\n \n \t* ch-lex.l (struct input_state, current_input_state,\n \tpush_input_file, pop_input_file):  New (type, variable,\n-\tfunction*2).  Used to save and \trestore state on an input file.\n+\tfunction*2).  Used to save and\trestore state on an input file.\n \t* ch-lex.l:  Clean up to handle nested input seizefiles\n \t(needed by new grant/seize mechanism.\n \t* ch-lex.l (skip_to_end_of_directive):  New function.\n@@ -10592,7 +10597,7 @@ Fri Apr  2 21:55:14 1993  Per Bothner  (bothner@rtl.cygnus.com)\n \t\"-f[no-]local-loop-counter\".\n \t* toplev.c (lang_options):  Add Chill flags -f[no-]local-loop-counter.\n \n- \t* varasm.c (make_function_rtl):  Due to problems with forward\n+\t* varasm.c (make_function_rtl):  Due to problems with forward\n \treferences, don't rename nested functions in Chill.  (Kudge!)\n \n Sun Mar 28 10:12:45 1993  Ken Raeburn  (raeburn@kr-pc.cygnus.com)\n@@ -12234,4 +12239,3 @@ Tue Nov 10 16:30:55 1992  Per Bothner  (bothner@rtl.cygnus.com)\n \trange_check_disabled into global variable range_checking.\n \t* ch-tree.h:  Better definitions of CH_CLASS_IS_VALUE\n \tCH_CLASS_IS_DERIVED.\n-"}, {"sha": "452ba42d6794d689f0485f8bb0b896e09e3e9b31", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 14, "deletions": 7, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07167a18416e36304c6e467cc95050964c3aa6b2/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07167a18416e36304c6e467cc95050964c3aa6b2/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=07167a18416e36304c6e467cc95050964c3aa6b2", "patch": "@@ -1,4 +1,11 @@\n-2001-07-09  Erik Rozendaal  <dlr@acm.org>\n+2001-07-10  Jan van Male  <jan.vanmale@fenk.wau.nl>\n+\n+\t* call.c (build_op_delete_call): Initialize fn.\n+\t(convert_like_real): Delete conditional.\n+\t(joust): Initialize *w and *l.\n+\t* class.c: Add prototype for binfo_ctor_vtable.\n+\t(get_primary_binfo): Initialize result.\n+\t* init.c (build_java_class_ref): Initialize name.\n \n \t* typeck.c (unary_complex_lvalue): Do not duplicate the\n \targument to modify, pre-, or post-increment when used as an\n@@ -186,14 +193,14 @@\n \t* Make-lang.in (cp/call.o): Depend on diagnostic.h\n \t(cp/typeck.o): Depend on diagnostic.h\n \t(cp/typeck2.o): Depend on diagnostic.h\n-\t(cp/repo.o): Depend on dignostic.h\t\n+\t(cp/repo.o): Depend on dignostic.h\n \t* typeck.c: #include diagnostic.h\n \t(convert_for_initialization): Remove extern declaration for\n \twarningcount and errorcount.\n \n \t* call.c: #include diagnostic.h\n \t(convert_like_real): Remove extern declaration for warnincount and\n-\terrorcount. \n+\terrorcount.\n \n \t* repo.c: #include diagnostic.h\n \t* typeck2.c: #include diagnostic.h\n@@ -244,9 +251,9 @@\n \t* method.c (make_thunk, build_vtable_entry): Adjust.\n \t* class.c (update_vtable_entry_for_fn): Only look as far as the\n \tfirst defining class.\n-\t(build_vtbl_initializer): Put nothing in the slot for a function only \n+\t(build_vtbl_initializer): Put nothing in the slot for a function only\n \tdefined in a lost primary virtual base.\n-\t(add_vcall_offset_vtbl_entries_1): Use the same code for \n+\t(add_vcall_offset_vtbl_entries_1): Use the same code for\n \tthe lost primary case and the normal case.\n \t(dfs_unshared_virtual_bases): Don't lose a non-virtual primary base.\n \t(get_vfield_offset, get_derived_offset): Lose.\n@@ -443,7 +450,7 @@\n 2001-05-17  Mark Mitchell  <mark@codesourcery.com>\n \n \t* except.c (cp_protect_cleanup_actions): New function.\n-\t(init_exception_processing): Don't set protect_cleanup_actions \n+\t(init_exception_processing): Don't set protect_cleanup_actions\n \there.  Do set lang_protect_cleanup_actions.\n \n 2001-05-16  Nathan Sidwell  <nathan@codesourcery.com>\n@@ -509,7 +516,7 @@\n \tpfn_vflag_identifier.\n \t(build_ptrmemfunc_type): When FUNCTION_BOUNDARY < 16, add\n \tan extra field to the type.\n-\t* expr.c (cplus_expand_constant): Pass 'flag' between \n+\t* expr.c (cplus_expand_constant): Pass 'flag' between\n \texpand_ptrmemfunc_cst and build_ptrmemfunc1.\n \t* typeck.c (get_member_function_from_ptrfunc): When\n \tFUNCTION_BOUNDARY < 16, look at additional field to determine"}]}