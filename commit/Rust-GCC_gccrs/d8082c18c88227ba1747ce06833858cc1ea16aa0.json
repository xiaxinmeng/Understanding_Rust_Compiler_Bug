{"sha": "d8082c18c88227ba1747ce06833858cc1ea16aa0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDgwODJjMThjODgyMjdiYTE3NDdjZTA2ODMzODU4Y2MxZWExNmFhMA==", "commit": {"author": {"name": "David Edelsohn", "email": "dje.gcc@gmail.com", "date": "2015-08-14T11:17:29Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2015-08-14T11:17:29Z"}, "message": "inclhack.def (aix_stdio_inline): New fix.\n\n        * inclhack.def (aix_stdio_inline): New fix.\n        (aix_strtof_const): Limit to *-*-aix*.\n        (aix_sysmachine): Same.\n        (aix_syswait_2): Same.\n        (aix_volatile):\tSame.\n        * fixincl.x: Regenerated.\n        * test/base/stdio.h [AIX_STDIO_INLINE]: New test.\n\nFrom-SVN: r226891", "tree": {"sha": "b270294fed651578cb12dca99f956ce2a8e88fce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b270294fed651578cb12dca99f956ce2a8e88fce"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d8082c18c88227ba1747ce06833858cc1ea16aa0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8082c18c88227ba1747ce06833858cc1ea16aa0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8082c18c88227ba1747ce06833858cc1ea16aa0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8082c18c88227ba1747ce06833858cc1ea16aa0/comments", "author": {"login": "edelsohn", "id": 667700, "node_id": "MDQ6VXNlcjY2NzcwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/667700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edelsohn", "html_url": "https://github.com/edelsohn", "followers_url": "https://api.github.com/users/edelsohn/followers", "following_url": "https://api.github.com/users/edelsohn/following{/other_user}", "gists_url": "https://api.github.com/users/edelsohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/edelsohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edelsohn/subscriptions", "organizations_url": "https://api.github.com/users/edelsohn/orgs", "repos_url": "https://api.github.com/users/edelsohn/repos", "events_url": "https://api.github.com/users/edelsohn/events{/privacy}", "received_events_url": "https://api.github.com/users/edelsohn/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c9665100d6ee2421d8dfe4d001d23019bd4e656b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9665100d6ee2421d8dfe4d001d23019bd4e656b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9665100d6ee2421d8dfe4d001d23019bd4e656b"}], "stats": {"total": 131, "additions": 117, "deletions": 14}, "files": [{"sha": "26f697ad1896204cfdf12f6425dcc4be2baf8fac", "filename": "fixincludes/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8082c18c88227ba1747ce06833858cc1ea16aa0/fixincludes%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8082c18c88227ba1747ce06833858cc1ea16aa0/fixincludes%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2FChangeLog?ref=d8082c18c88227ba1747ce06833858cc1ea16aa0", "patch": "@@ -1,3 +1,13 @@\n+2015-08-14  David Edelsohn  <dje.gcc@gmail.com>\n+\n+\t* inclhack.def (aix_stdio_inline): New fix.\n+\t(aix_strtof_const): Limit to *-*-aix*.\n+\t(aix_sysmachine): Same.\n+\t(aix_syswait_2): Same.\n+\t(aix_volatile): Same.\n+\t* fixincl.x: Regenerated.\n+\t* test/base/stdio.h [AIX_STDIO_INLINE]: New test.\n+\n 2015-07-28  Eric Gallager  <egall@gwmail.gwu.edu>\n \n \t* check.tpl: Ignore .DS_Store directories."}, {"sha": "79af6d10f55c88867d73d78e66ae555b511d98b8", "filename": "fixincludes/fixincl.x", "status": "modified", "additions": 72, "deletions": 14, "changes": 86, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8082c18c88227ba1747ce06833858cc1ea16aa0/fixincludes%2Ffixincl.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8082c18c88227ba1747ce06833858cc1ea16aa0/fixincludes%2Ffixincl.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ffixincl.x?ref=d8082c18c88227ba1747ce06833858cc1ea16aa0", "patch": "@@ -1,12 +1,12 @@\n /*  -*- buffer-read-only: t -*- vi: set ro:\n- * \n- * DO NOT EDIT THIS FILE   (fixincl.x)\n- * \n- * It has been AutoGen-ed  May 21, 2015 at 02:48:12 AM by AutoGen 5.18.3\n- * From the definitions    inclhack.def\n- * and the template file   fixincl\n+ *\n+ *DO NOT EDIT THIS FILE   (fixincl.x)\n+ *\n+ *It has been AutoGen-ed  August 13, 2015 at 05:25:50 PM by AutoGen 5.18.3\n+ *From the definitions    inclhack.def\n+ *and the template file   fixincl\n  */\n-/* DO NOT SVN-MERGE THIS FILE, EITHER Thu May 21 02:48:12 UTC 2015\n+/* DO NOT SVN-MERGE THIS FILE, EITHER Thu Aug 13 17:25:50 UTC 2015\n  *\n  * You must regenerate it.  Use the ./genfixes script.\n  *\n@@ -15,7 +15,7 @@\n  * certain ANSI-incompatible system header files which are fixed to work\n  * correctly with ANSI C and placed in a directory that GNU C will search.\n  *\n- * This file contains 229 fixup descriptions.\n+ * This file contains 230 fixup descriptions.\n  *\n  * See README for more information.\n  *\n@@ -1501,6 +1501,50 @@ static const char* apzAix_Stdint_5Patch[] = {\n #define UINT16_C(c)\\tc\",\n     (char*)NULL };\n \n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Aix_Stdio_Inline fix\n+ */\n+tSCC zAix_Stdio_InlineName[] =\n+     \"aix_stdio_inline\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zAix_Stdio_InlineList[] =\n+  \"stdio.h\\0\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+tSCC* apzAix_Stdio_InlineMachs[] = {\n+        \"*-*-aix*\",\n+        (const char*)NULL };\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zAix_Stdio_InlineSelect0[] =\n+       \"#ifdef __cplusplus\\\\\\n\\\n+}\\\\\\n\\\n+\\\\\\n\\\n+#ifdef ferror\\\\\\n\";\n+\n+#define    AIX_STDIO_INLINE_TEST_CT  1\n+static tTestDesc aAix_Stdio_InlineTests[] = {\n+  { TT_EGREP,    zAix_Stdio_InlineSelect0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Aix_Stdio_Inline\n+ */\n+static const char* apzAix_Stdio_InlinePatch[] = {\n+    \"format\",\n+    \"#ifdef __cplusplus\\n\\\n+}\\n\\\n+#endif\\n\\n\\\n+#if (defined(__cplusplus) && defined(__IBMCPP__))\\n\\\n+#ifdef ferror\\n\",\n+    (char*)NULL };\n+\n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of Aix_Strtof_Const fix\n@@ -1516,7 +1560,9 @@ tSCC zAix_Strtof_ConstList[] =\n /*\n  *  Machine/OS name selection pattern\n  */\n-#define apzAix_Strtof_ConstMachs (const char**)NULL\n+tSCC* apzAix_Strtof_ConstMachs[] = {\n+        \"*-*-aix*\",\n+        (const char*)NULL };\n \n /*\n  *  content selection pattern - do fix if pattern found\n@@ -1551,7 +1597,9 @@ tSCC zAix_SysmachineList[] =\n /*\n  *  Machine/OS name selection pattern\n  */\n-#define apzAix_SysmachineMachs (const char**)NULL\n+tSCC* apzAix_SysmachineMachs[] = {\n+        \"*-*-aix*\",\n+        (const char*)NULL };\n \n /*\n  *  content selection pattern - do fix if pattern found\n@@ -1586,7 +1634,9 @@ tSCC zAix_Syswait_2List[] =\n /*\n  *  Machine/OS name selection pattern\n  */\n-#define apzAix_Syswait_2Machs (const char**)NULL\n+tSCC* apzAix_Syswait_2Machs[] = {\n+        \"*-*-aix*\",\n+        (const char*)NULL };\n \n /*\n  *  content selection pattern - do fix if pattern found\n@@ -1621,7 +1671,9 @@ tSCC zAix_VolatileList[] =\n /*\n  *  Machine/OS name selection pattern\n  */\n-#define apzAix_VolatileMachs (const char**)NULL\n+tSCC* apzAix_VolatileMachs[] = {\n+        \"*-*-aix*\",\n+        (const char*)NULL };\n \n /*\n  *  content selection pattern - do fix if pattern found\n@@ -9396,9 +9448,9 @@ static const char* apzX11_SprintfPatch[] = {\n  *\n  *  List of all fixes\n  */\n-#define REGEX_COUNT          266\n+#define REGEX_COUNT          267\n #define MACH_LIST_SIZE_LIMIT 187\n-#define FIX_COUNT            229\n+#define FIX_COUNT            230\n \n /*\n  *  Enumerate the fixes\n@@ -9435,6 +9487,7 @@ typedef enum {\n     AIX_STDINT_3_FIXIDX,\n     AIX_STDINT_4_FIXIDX,\n     AIX_STDINT_5_FIXIDX,\n+    AIX_STDIO_INLINE_FIXIDX,\n     AIX_STRTOF_CONST_FIXIDX,\n     AIX_SYSMACHINE_FIXIDX,\n     AIX_SYSWAIT_2_FIXIDX,\n@@ -9791,6 +9844,11 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      AIX_STDINT_5_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aAix_Stdint_5Tests,   apzAix_Stdint_5Patch, 0 },\n \n+  {  zAix_Stdio_InlineName,    zAix_Stdio_InlineList,\n+     apzAix_Stdio_InlineMachs,\n+     AIX_STDIO_INLINE_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aAix_Stdio_InlineTests,   apzAix_Stdio_InlinePatch, 0 },\n+\n   {  zAix_Strtof_ConstName,    zAix_Strtof_ConstList,\n      apzAix_Strtof_ConstMachs,\n      AIX_STRTOF_CONST_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,"}, {"sha": "fc72add35dc70f9404c8e777f8f430912c14fe9e", "filename": "fixincludes/inclhack.def", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8082c18c88227ba1747ce06833858cc1ea16aa0/fixincludes%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8082c18c88227ba1747ce06833858cc1ea16aa0/fixincludes%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Finclhack.def?ref=d8082c18c88227ba1747ce06833858cc1ea16aa0", "patch": "@@ -891,11 +891,33 @@ fix = {\n \t\t\"#define UINT16_C(c)\t__CONCAT__(c,U)\";\n };\n \n+/*\n+ * stdio.h on AIX defines ferror, clearerr and feof as C++ inline, which\n+   produces wrong code with G++.\n+ */\n+fix = {\n+    hackname  = aix_stdio_inline;\n+    mach      = \"*-*-aix*\";\n+    files     = stdio.h;\n+    select    = \"#ifdef __cplusplus\\\\\\n\"\n+                \"}\\\\\\n\\\\\\n\"\n+                \"#ifdef ferror\\\\\\n\";\n+    c_fix     = format;\n+    c_fix_arg = \"#ifdef __cplusplus\\n\"\n+                \"}\\n\"\n+                \"#endif\\n\\n\"\n+                \"#if (defined(__cplusplus) && defined(__IBMCPP__))\\n\"\n+                \"#ifdef ferror\\n\";\n+    test_text = \"#ifdef __cplusplus\\n}\\n\\n#ifdef ferror\";\n+};\n+\n+\n /*\n  * stdlib.h on AIX 4.3 declares strtof() with a non-const first argument.\n  */\n fix = {\n     hackname  = aix_strtof_const;\n+    mach      = \"*-*-aix*\";\n     files     = stdlib.h;\n     select    = \"((extern[ \\t]+)?float[ \\t]+strtof)\\\\(char \\\\*, char \\\\*\\\\*\\\\);\";\n     c_fix     = format;\n@@ -909,6 +931,7 @@ fix = {\n  */\n fix = {\n     hackname  = aix_sysmachine;\n+    mach      = \"*-*-aix*\";\n     files     = sys/machine.h;\n     select    = \"\\\\\\\\ +\\n\";\n     c_fix     = format;\n@@ -923,6 +946,7 @@ fix = {\n  */\n fix = {\n     hackname  = aix_syswait_2;\n+    mach      = \"*-*-aix*\";\n     files     = sys/wait.h;\n     select    = '\\? (\\(\\(\\(\\(unsigned[^)]*\\)[^)]*\\) >> [^)]*\\) \\& 0xff\\) : -1)';\n     c_fix     = format;\n@@ -939,6 +963,7 @@ fix = {\n  */\n fix = {\n     hackname  = aix_volatile;\n+    mach      = \"*-*-aix*\";\n     files     = sys/signal.h;\n     select    = \"typedef volatile int sig_atomic_t\";\n     c_fix     = format;"}, {"sha": "275931c52ccdf1dafc75f70454f6ed7ac0184ded", "filename": "fixincludes/tests/base/stdio.h", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8082c18c88227ba1747ce06833858cc1ea16aa0/fixincludes%2Ftests%2Fbase%2Fstdio.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8082c18c88227ba1747ce06833858cc1ea16aa0/fixincludes%2Ftests%2Fbase%2Fstdio.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ftests%2Fbase%2Fstdio.h?ref=d8082c18c88227ba1747ce06833858cc1ea16aa0", "patch": "@@ -19,6 +19,16 @@\n #endif  /* AAB_AIX_STDIO_CHECK */\n \n \n+#if defined( AIX_STDIO_INLINE_CHECK )\n+#ifdef __cplusplus\n+}\n+#endif\n+\n+#if (defined(__cplusplus) && defined(__IBMCPP__))\n+#ifdef ferror\n+#endif  /* AIX_STDIO_INLINE_CHECK */\n+\n+\n #if defined( ALPHA_GETOPT_CHECK )\n extern int getopt(int, char *const[], const char *);\n #endif  /* ALPHA_GETOPT_CHECK */"}]}