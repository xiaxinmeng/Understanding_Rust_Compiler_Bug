{"sha": "98035a75ac5fca6590f63d08aa3a4914809a8855", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTgwMzVhNzVhYzVmY2E2NTkwZjYzZDA4YWEzYTQ5MTQ4MDlhODg1NQ==", "commit": {"author": {"name": "Daniel Berlin", "email": "dberlin@dberlin.org", "date": "2006-02-14T14:49:13Z"}, "committer": {"name": "Daniel Berlin", "email": "dberlin@gcc.gnu.org", "date": "2006-02-14T14:49:13Z"}, "message": "re PR tree-optimization/26260 (PTA is slow with large structs (hits clisp))\n\n2006-02-14  Daniel Berlin  <dberlin@dberlin.org>\n\n\tFix PR tree-optimization/26260\n\n\t* doc/invoke.texi (max-fields-for-field-sensitive): Document\n\tparam.\n\t* params.h (MAX_FIELDS_FOR_FIELD_SENSITIVE): New.\n\t* params.def (PARAM_MAX_FIELDS_FOR_FIELD_SENSITIVE): Ditto.\n\t* tree-ssa-structalias.c (create_variable_info_for): Use\n\tMAX_FIELDS_FOR_FIELD_SENSITIVE.\n\nFrom-SVN: r110972", "tree": {"sha": "9329bdf3c2d31755066d0772b7438f632c1ca28f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9329bdf3c2d31755066d0772b7438f632c1ca28f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/98035a75ac5fca6590f63d08aa3a4914809a8855", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98035a75ac5fca6590f63d08aa3a4914809a8855", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98035a75ac5fca6590f63d08aa3a4914809a8855", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98035a75ac5fca6590f63d08aa3a4914809a8855/comments", "author": {"login": "dberlin", "id": 324715, "node_id": "MDQ6VXNlcjMyNDcxNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/324715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dberlin", "html_url": "https://github.com/dberlin", "followers_url": "https://api.github.com/users/dberlin/followers", "following_url": "https://api.github.com/users/dberlin/following{/other_user}", "gists_url": "https://api.github.com/users/dberlin/gists{/gist_id}", "starred_url": "https://api.github.com/users/dberlin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dberlin/subscriptions", "organizations_url": "https://api.github.com/users/dberlin/orgs", "repos_url": "https://api.github.com/users/dberlin/repos", "events_url": "https://api.github.com/users/dberlin/events{/privacy}", "received_events_url": "https://api.github.com/users/dberlin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b076a3fd749f2060d33c477c70e18ed24ce83d96", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b076a3fd749f2060d33c477c70e18ed24ce83d96", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b076a3fd749f2060d33c477c70e18ed24ce83d96"}], "stats": {"total": 32, "additions": 29, "deletions": 3}, "files": [{"sha": "9b2bf0ebf36126e89f930da8b9226fecd9747b5b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98035a75ac5fca6590f63d08aa3a4914809a8855/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98035a75ac5fca6590f63d08aa3a4914809a8855/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=98035a75ac5fca6590f63d08aa3a4914809a8855", "patch": "@@ -1,3 +1,14 @@\n+2006-02-14  Daniel Berlin  <dberlin@dberlin.org>\n+\n+\tFix PR tree-optimization/26260\n+\n+\t* doc/invoke.texi (max-fields-for-field-sensitive): Document\n+\tparam.\n+\t* params.h (MAX_FIELDS_FOR_FIELD_SENSITIVE): New.\n+\t* params.def (PARAM_MAX_FIELDS_FOR_FIELD_SENSITIVE): Ditto.\n+\t* tree-ssa-structalias.c (create_variable_info_for): Use\n+\tMAX_FIELDS_FOR_FIELD_SENSITIVE.\n+\t\n 2006-02-14  Zdenek Dvorak <dvorakz@suse.cz>\n \n \t* doc/invoke.texi (-fprefetch-loop-arrays, -fprefetch-loop-arrays-rtl):"}, {"sha": "c62aa7b4261d8cfcd74719aa872d1ae277d67c6c", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98035a75ac5fca6590f63d08aa3a4914809a8855/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98035a75ac5fca6590f63d08aa3a4914809a8855/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=98035a75ac5fca6590f63d08aa3a4914809a8855", "patch": "@@ -6195,6 +6195,11 @@ protection when @option{-fstack-protection} is used.\n @item max-jump-thread-duplication-stmts\n Maximum number of statements allowed in a block that needs to be\n duplicated when threading jumps.\n+\n+@item max-fields-for-field-sensitive\n+Maximum number of fields in a structure we will treat in\n+a field sensitive manner during pointer analysis.\n+\n @end table\n @end table\n "}, {"sha": "ba139d2948bc8c6bc30b74d546db8160030b5194", "filename": "gcc/params.def", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98035a75ac5fca6590f63d08aa3a4914809a8855/gcc%2Fparams.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98035a75ac5fca6590f63d08aa3a4914809a8855/gcc%2Fparams.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fparams.def?ref=98035a75ac5fca6590f63d08aa3a4914809a8855", "patch": "@@ -558,7 +558,15 @@ DEFPARAM (PARAM_MAX_JUMP_THREAD_DUPLICATION_STMTS,\n \t  \"max-jump-thread-duplication-stmts\",\n           \"Maximum number of statements allowed in a block that needs to be duplicated when threading jumps\",\n \t  15, 0, 0)\n-   \n+\n+/* This is the maximum number of fields a variable may have before the pointer analysis machinery\n+   will stop trying to treat it in a field-sensitive manner.  \n+   There are programs out there with thousands of fields per structure, and handling them\n+   field-sensitively is not worth the cost.  */\n+DEFPARAM (PARAM_MAX_FIELDS_FOR_FIELD_SENSITIVE,\n+          \"max-fields-for-field-sensitive\",\n+\t  \"Maximum number of fields in a structure before pointer analysis treats the structure as a single variable\",\n+\t  100, 0, 0)\n /*\n Local variables:\n mode:c"}, {"sha": "aafafe17ff3dbd8d6bb608152a15034e80294074", "filename": "gcc/params.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98035a75ac5fca6590f63d08aa3a4914809a8855/gcc%2Fparams.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98035a75ac5fca6590f63d08aa3a4914809a8855/gcc%2Fparams.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fparams.h?ref=98035a75ac5fca6590f63d08aa3a4914809a8855", "patch": "@@ -147,4 +147,6 @@ typedef enum compiler_param\n   PARAM_VALUE (PARAM_MIN_VIRTUAL_MAPPINGS)\n #define VIRTUAL_MAPPINGS_TO_SYMS_RATIO \\\n   PARAM_VALUE (PARAM_VIRTUAL_MAPPINGS_TO_SYMS_RATIO)\n+#define MAX_FIELDS_FOR_FIELD_SENSITIVE \\\n+  ((size_t) PARAM_VALUE (PARAM_MAX_FIELDS_FOR_FIELD_SENSITIVE))\n #endif /* ! GCC_PARAMS_H */"}, {"sha": "c7eae967fc712a7945595323f421b46a6e30fa1f", "filename": "gcc/tree-ssa-structalias.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98035a75ac5fca6590f63d08aa3a4914809a8855/gcc%2Ftree-ssa-structalias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98035a75ac5fca6590f63d08aa3a4914809a8855/gcc%2Ftree-ssa-structalias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-structalias.c?ref=98035a75ac5fca6590f63d08aa3a4914809a8855", "patch": "@@ -3881,7 +3881,6 @@ check_for_overlaps (VEC (fieldoff_s,heap) *fieldstack)\n     }\n   return false;\n }\n-\n /* Create a varinfo structure for NAME and DECL, and add it to VARMAP.\n    This will also create any varinfo structures necessary for fields\n    of DECL.  */\n@@ -3945,7 +3944,8 @@ create_variable_info_for (tree decl, const char *name)\n   if (use_field_sensitive \n       && !notokay \n       && !vi->is_unknown_size_var \n-      && var_can_have_subvars (decl))\n+      && var_can_have_subvars (decl)\n+      && VEC_length (fieldoff_s, fieldstack) <= MAX_FIELDS_FOR_FIELD_SENSITIVE)\n     {\n       unsigned int newindex = VEC_length (varinfo_t, varmap);\n       fieldoff_s *fo = NULL;"}]}