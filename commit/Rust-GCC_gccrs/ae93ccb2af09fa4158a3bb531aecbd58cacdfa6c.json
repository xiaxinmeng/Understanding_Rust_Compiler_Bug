{"sha": "ae93ccb2af09fa4158a3bb531aecbd58cacdfa6c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWU5M2NjYjJhZjA5ZmE0MTU4YTNiYjUzMWFlY2JkNThjYWNkZmE2Yw==", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2018-11-14T11:40:14Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-11-14T11:40:14Z"}, "message": "[Ada] Fix parentheses in comments and \"library-level\" punctuation\n\nWhen acting as an adjective, it is \"library-level something\"; when\nacting as a noun, it is \"something at the library level\".\n\n2018-11-14  Piotr Trojanek  <trojanek@adacore.com>\n\ngcc/ada/\n\n\t* exp_dbug.ads, sem_util.ads: Minor fixes in comments.\n\nFrom-SVN: r266109", "tree": {"sha": "7a318413b31b806845d22a1265c3719984fc09c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7a318413b31b806845d22a1265c3719984fc09c9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ae93ccb2af09fa4158a3bb531aecbd58cacdfa6c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae93ccb2af09fa4158a3bb531aecbd58cacdfa6c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae93ccb2af09fa4158a3bb531aecbd58cacdfa6c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae93ccb2af09fa4158a3bb531aecbd58cacdfa6c/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fb620f0e8dfb4edfc153e7ecca7ad30989812da8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb620f0e8dfb4edfc153e7ecca7ad30989812da8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb620f0e8dfb4edfc153e7ecca7ad30989812da8"}], "stats": {"total": 12, "additions": 8, "deletions": 4}, "files": [{"sha": "d760f805f88977d08621ec5e7642c9acff2a3545", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae93ccb2af09fa4158a3bb531aecbd58cacdfa6c/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae93ccb2af09fa4158a3bb531aecbd58cacdfa6c/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ae93ccb2af09fa4158a3bb531aecbd58cacdfa6c", "patch": "@@ -1,3 +1,7 @@\n+2018-11-14  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* exp_dbug.ads, sem_util.ads: Minor fixes in comments.\n+\n 2018-11-14  Arnaud Charlet  <charlet@adacore.com>\n \n \t* adabkend.adb (Scan_Back_End_Switches): Handle -gx switches"}, {"sha": "a4deebe1c46a2f970a5d4a61e5234ddfa0ffa9ce", "filename": "gcc/ada/exp_dbug.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae93ccb2af09fa4158a3bb531aecbd58cacdfa6c/gcc%2Fada%2Fexp_dbug.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae93ccb2af09fa4158a3bb531aecbd58cacdfa6c/gcc%2Fada%2Fexp_dbug.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dbug.ads?ref=ae93ccb2af09fa4158a3bb531aecbd58cacdfa6c", "patch": "@@ -65,7 +65,7 @@ package Exp_Dbug is\n \n    --  For global entities, the encoded name includes all components of the\n    --  fully expanded name (but omitting Standard at the start). For example,\n-   --  if a library level child package P.Q has an embedded package R, and\n+   --  if a library-level child package P.Q has an embedded package R, and\n    --  there is an entity in this embedded package whose name is S, the encoded\n    --  name will include the components p.q.r.s.\n \n@@ -291,7 +291,7 @@ package Exp_Dbug is\n       --    #6.  x__y__m3          (no BNPE's in signt)\n       --    #7.  x__y__j           (no BNPE's in sight)\n       --    #8.  k__z              (no BNPE's, only up to procedure)\n-      --    #9   _ada_x__m3        (library level subprogram)\n+      --    #9   _ada_x__m3        (library-level subprogram)\n \n       --  Note that we have instances here of both kind of potential name\n       --  clashes, and the above examples show how the encodings avoid the\n@@ -479,7 +479,7 @@ package Exp_Dbug is\n    --  the changes till just before gigi is called, we avoid any concerns\n    --  about such effects. Gigi itself does not use the names except for\n    --  output of names for debugging purposes (which is why we are doing\n-   --  the name changes in the first place.\n+   --  the name changes in the first place).\n \n    --  Note: the routines Get_Unqualified_[Decoded]_Name_String in Namet are\n    --  useful to remove qualification from a name qualified by the call to"}, {"sha": "10549bbc9d7e46f3d841d884776a3436519242d5", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae93ccb2af09fa4158a3bb531aecbd58cacdfa6c/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae93ccb2af09fa4158a3bb531aecbd58cacdfa6c/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=ae93ccb2af09fa4158a3bb531aecbd58cacdfa6c", "patch": "@@ -1006,7 +1006,7 @@ package Sem_Util is\n    function Get_Default_External_Name (E : Node_Or_Entity_Id) return Node_Id;\n    --  This is used to construct the string literal node representing a\n    --  default external name, i.e. one that is constructed from the name of an\n-   --  entity, or (in the case of extended DEC import/export pragmas, an\n+   --  entity, or (in the case of extended DEC import/export pragmas) an\n    --  identifier provided as the external name. Letters in the name are\n    --  according to the setting of Opt.External_Name_Default_Casing.\n "}]}