{"sha": "6a333ca04f20c16c42aa15c004a26ebbc9fad02c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmEzMzNjYTA0ZjIwYzE2YzQyYWExNWMwMDRhMjZlYmJjOWZhZDAyYw==", "commit": {"author": {"name": "Joel Sherrill", "email": "joel.sherrill@oarcorp.com", "date": "2008-02-13T19:04:53Z"}, "committer": {"name": "Joel Sherrill", "email": "joel@gcc.gnu.org", "date": "2008-02-13T19:04:53Z"}, "message": "re PR ada/35143 (Serious regression on ACATS results since 4.2.3)\n\n2008-02-11  Joel Sherrill <joel.sherrill@oarcorp.com>\n\n\tPR ada/35143\n\t* env.c: Add __rtems__ to if defined.\n\t* s-osinte-rtems.adb: Add To_Target_Priority.  Fix formatting.\n\t* s-osinte-rtems.ads: Add To_Target_Priority prototype and\n\tPTHREAD_SCOPE_PROCESS/PTHREAD_SCOPE_SYSTEM constants.  Add\n\tpragma Convention as required.\n\t* gsocket.h: Make compile in and out of RTS.\n\t* Makefile.in: Add system-rtems.ads.  Build DEC extensions.\n\tUse g-soccon-rtems.ads.\n\t* g-soccon-rtems.ads, system-rtems.ads: New files.\n\nFrom-SVN: r132294", "tree": {"sha": "14647ee8187ad1d1a148b61d285e6fbfb10bbb54", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/14647ee8187ad1d1a148b61d285e6fbfb10bbb54"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6a333ca04f20c16c42aa15c004a26ebbc9fad02c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a333ca04f20c16c42aa15c004a26ebbc9fad02c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a333ca04f20c16c42aa15c004a26ebbc9fad02c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a333ca04f20c16c42aa15c004a26ebbc9fad02c/comments", "author": {"login": "joelsherrill", "id": 183688, "node_id": "MDQ6VXNlcjE4MzY4OA==", "avatar_url": "https://avatars.githubusercontent.com/u/183688?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joelsherrill", "html_url": "https://github.com/joelsherrill", "followers_url": "https://api.github.com/users/joelsherrill/followers", "following_url": "https://api.github.com/users/joelsherrill/following{/other_user}", "gists_url": "https://api.github.com/users/joelsherrill/gists{/gist_id}", "starred_url": "https://api.github.com/users/joelsherrill/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joelsherrill/subscriptions", "organizations_url": "https://api.github.com/users/joelsherrill/orgs", "repos_url": "https://api.github.com/users/joelsherrill/repos", "events_url": "https://api.github.com/users/joelsherrill/events{/privacy}", "received_events_url": "https://api.github.com/users/joelsherrill/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "29a7754d166900ec2f48fd290a5496e0e75bf9bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29a7754d166900ec2f48fd290a5496e0e75bf9bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29a7754d166900ec2f48fd290a5496e0e75bf9bf"}], "stats": {"total": 435, "additions": 423, "deletions": 12}, "files": [{"sha": "404c262cdbd49fa1257965827eb3f51b437e2699", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a333ca04f20c16c42aa15c004a26ebbc9fad02c/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a333ca04f20c16c42aa15c004a26ebbc9fad02c/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=6a333ca04f20c16c42aa15c004a26ebbc9fad02c", "patch": "@@ -1,3 +1,16 @@\n+2008-02-11  Joel Sherrill <joel.sherrill@oarcorp.com>\n+\n+\tPR ada/35143\n+\t* env.c: Add __rtems__ to if defined.\n+\t* s-osinte-rtems.adb: Add To_Target_Priority.  Fix formatting.\n+\t* s-osinte-rtems.ads: Add To_Target_Priority prototype and\n+\tPTHREAD_SCOPE_PROCESS/PTHREAD_SCOPE_SYSTEM constants.  Add\n+\tpragma Convention as required.\n+\t* gsocket.h: Make compile in and out of RTS.\n+\t* Makefile.in: Add system-rtems.ads.  Build DEC extensions.\n+\tUse g-soccon-rtems.ads.\n+\t* g-soccon-rtems.ads, system-rtems.ads: New files.\n+\n 2008-02-06  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \tPR other/35107"}, {"sha": "28699267690712aa01eb79a4a78426c02a7a97a3", "filename": "gcc/ada/Makefile.in", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a333ca04f20c16c42aa15c004a26ebbc9fad02c/gcc%2Fada%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a333ca04f20c16c42aa15c004a26ebbc9fad02c/gcc%2Fada%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMakefile.in?ref=6a333ca04f20c16c42aa15c004a26ebbc9fad02c", "patch": "@@ -1,5 +1,5 @@\n # Makefile for GNU Ada Compiler (GNAT).\n-#   Copyright (C) 1994-2007 Free Software Foundation, Inc.\n+#   Copyright (C) 1994-2008 Free Software Foundation, Inc.\n \n #This file is part of GCC.\n \n@@ -1136,6 +1136,7 @@ endif\n \n ifeq ($(strip $(filter-out rtems%,$(osys))),)\n   LIBGNAT_TARGET_PAIRS = \\\n+  system.ads<system-rtems.ads \\\n   a-intnam.ads<a-intnam-rtems.ads \\\n   s-inmaop.adb<s-inmaop-posix.adb \\\n   s-intman.adb<s-intman-posix.adb \\\n@@ -1145,9 +1146,9 @@ ifeq ($(strip $(filter-out rtems%,$(osys))),)\n   s-parame.adb<s-parame-rtems.adb \\\n   s-taprop.adb<s-taprop-posix.adb \\\n   s-taspri.ads<s-taspri-posix.ads \\\n-  s-auxdec.ads<s-auxdec-empty.ads \\\n-  s-auxdec.adb<s-auxdec-empty.adb \\\n-  s-tpopsp.adb<s-tpopsp-rtems.adb\n+  s-tpopsp.adb<s-tpopsp-rtems.adb \\\n+  g-soccon.ads<g-soccon-rtems.ads \\\n+  s-stchop.adb<s-stchop-rtems.adb\n endif\n \n ifeq ($(strip $(filter-out alpha% dec osf%,$(targ))),)"}, {"sha": "01c25d6753fe0866992f6a11e8f587b9a10461e0", "filename": "gcc/ada/env.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a333ca04f20c16c42aa15c004a26ebbc9fad02c/gcc%2Fada%2Fenv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a333ca04f20c16c42aa15c004a26ebbc9fad02c/gcc%2Fada%2Fenv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fenv.c?ref=6a333ca04f20c16c42aa15c004a26ebbc9fad02c", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                          C Implementation File                           *\n  *                                                                          *\n- *            Copyright (C) 2005-2007, Free Software Foundation, Inc.       *\n+ *            Copyright (C) 2005-2008, Free Software Foundation, Inc.       *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -290,7 +290,7 @@ void __gnat_clearenv (void) {\n   }\n #elif defined (__MINGW32__) || defined (__FreeBSD__) || defined (__APPLE__) \\\n    || (defined (__vxworks) && defined (__RTP__)) || defined (__CYGWIN__) \\\n-   || defined (__NetBSD__) || defined (__OpenBSD__)\n+   || defined (__NetBSD__) || defined (__OpenBSD__) || defined (__rtems__)\n   /* On Windows, FreeBSD and MacOS there is no function to clean all the\n      environment but there is a \"clean\" way to unset a variable. So go\n      through the environ table and call __gnat_unsetenv on all entries */"}, {"sha": "cc7e56de04cb9e1535badfec48c07bf012b3dfba", "filename": "gcc/ada/g-soccon-rtems.ads", "status": "added", "additions": 195, "deletions": 0, "changes": 195, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a333ca04f20c16c42aa15c004a26ebbc9fad02c/gcc%2Fada%2Fg-soccon-rtems.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a333ca04f20c16c42aa15c004a26ebbc9fad02c/gcc%2Fada%2Fg-soccon-rtems.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon-rtems.ads?ref=6a333ca04f20c16c42aa15c004a26ebbc9fad02c", "patch": "@@ -0,0 +1,195 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT COMPILER COMPONENTS                         --\n+--                                                                          --\n+--               G N A T . S O C K E T S . C O N S T A N T S                --\n+--                                                                          --\n+--                                 S p e c                                  --\n+--                                                                          --\n+--          Copyright (C) 2000-2007, Free Software Foundation, Inc.         --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n+-- to  the  Free Software Foundation,  51  Franklin  Street,  Fifth  Floor, --\n+-- Boston, MA 02110-1301, USA.                                              --\n+--                                                                          --\n+-- As a special exception,  if other files  instantiate  generics from this --\n+-- unit, or you link  this unit with other files  to produce an executable, --\n+-- this  unit  does not  by itself cause  the resulting  executable  to  be --\n+-- covered  by the  GNU  General  Public  License.  This exception does not --\n+-- however invalidate  any other reasons why  the executable file  might be --\n+-- covered by the  GNU Public License.                                      --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+--  This package provides target dependent definitions of constant for use\n+--  by the GNAT.Sockets package (g-socket.ads). This package should not be\n+--  directly with'ed by an applications program.\n+\n+--  This is the version for RTEMS\n+--  This file is generated automatically, do not modify it by hand! Instead,\n+--  make changes to gen-soccon.c and re-run it on each target.\n+\n+package GNAT.Sockets.Constants is\n+\n+   --------------\n+   -- Families --\n+   --------------\n+\n+   AF_INET            : constant :=           2; --  IPv4 address family\n+   AF_INET6           : constant :=          28; --  IPv6 address family\n+\n+   -----------\n+   -- Modes --\n+   -----------\n+\n+   SOCK_STREAM        : constant :=           1; --  Stream socket\n+   SOCK_DGRAM         : constant :=           2; --  Datagram socket\n+\n+   -------------------\n+   -- Socket errors --\n+   -------------------\n+\n+   EACCES             : constant :=          13; --  Permission denied\n+   EADDRINUSE         : constant :=         112; --  Address already in use\n+   EADDRNOTAVAIL      : constant :=         125; --  Cannot assign address\n+   EAFNOSUPPORT       : constant :=         106; --  Addr family not supported\n+   EALREADY           : constant :=         120; --  Operation in progress\n+   EBADF              : constant :=           9; --  Bad file descriptor\n+   ECONNABORTED       : constant :=         113; --  Connection aborted\n+   ECONNREFUSED       : constant :=         111; --  Connection refused\n+   ECONNRESET         : constant :=         104; --  Connection reset by peer\n+   EDESTADDRREQ       : constant :=         121; --  Destination addr required\n+   EFAULT             : constant :=          14; --  Bad address\n+   EHOSTDOWN          : constant :=         117; --  Host is down\n+   EHOSTUNREACH       : constant :=         118; --  No route to host\n+   EINPROGRESS        : constant :=         119; --  Operation now in progress\n+   EINTR              : constant :=           4; --  Interrupted system call\n+   EINVAL             : constant :=          22; --  Invalid argument\n+   EIO                : constant :=           5; --  Input output error\n+   EISCONN            : constant :=         127; --  Socket already connected\n+   ELOOP              : constant :=          92; --  Too many symbolic lynks\n+   EMFILE             : constant :=          24; --  Too many open files\n+   EMSGSIZE           : constant :=         122; --  Message too long\n+   ENAMETOOLONG       : constant :=          91; --  Name too long\n+   ENETDOWN           : constant :=         115; --  Network is down\n+   ENETRESET          : constant :=         126; --  Disconn. on network reset\n+   ENETUNREACH        : constant :=         114; --  Network is unreachable\n+   ENOBUFS            : constant :=         105; --  No buffer space available\n+   ENOPROTOOPT        : constant :=         109; --  Protocol not available\n+   ENOTCONN           : constant :=         128; --  Socket not connected\n+   ENOTSOCK           : constant :=         108; --  Operation on non socket\n+   EOPNOTSUPP         : constant :=          95; --  Operation not supported\n+   EPFNOSUPPORT       : constant :=          96; --  Unknown protocol family\n+   EPROTONOSUPPORT    : constant :=         123; --  Unknown protocol\n+   EPROTOTYPE         : constant :=         107; --  Unknown protocol type\n+   ESHUTDOWN          : constant :=         110; --  Cannot send once shutdown\n+   ESOCKTNOSUPPORT    : constant :=         124; --  Socket type not supported\n+   ETIMEDOUT          : constant :=         116; --  Connection timed out\n+   ETOOMANYREFS       : constant :=         129; --  Too many references\n+   EWOULDBLOCK        : constant :=          11; --  Operation would block\n+\n+   -----------------\n+   -- Host errors --\n+   -----------------\n+\n+   HOST_NOT_FOUND     : constant :=           1; --  Unknown host\n+   TRY_AGAIN          : constant :=           2; --  Host name lookup failure\n+   NO_DATA            : constant :=           4; --  No data record for name\n+   NO_RECOVERY        : constant :=           3; --  Non recoverable errors\n+\n+   -------------------\n+   -- Control flags --\n+   -------------------\n+\n+   FIONBIO            : constant := -2147195266; --  Set/clear non-blocking io\n+   FIONREAD           : constant :=  1074030207; --  How many bytes to read\n+\n+   --------------------\n+   -- Shutdown modes --\n+   --------------------\n+\n+   SHUT_RD            : constant :=           0; --  No more recv\n+   SHUT_WR            : constant :=           1; --  No more send\n+   SHUT_RDWR          : constant :=           2; --  No more recv/send\n+\n+   ---------------------\n+   -- Protocol levels --\n+   ---------------------\n+\n+   SOL_SOCKET         : constant :=       65535; --  Options for socket level\n+   IPPROTO_IP         : constant :=           0; --  Dummy protocol for IP\n+   IPPROTO_UDP        : constant :=          17; --  UDP\n+   IPPROTO_TCP        : constant :=           6; --  TCP\n+\n+   -------------------\n+   -- Request flags --\n+   -------------------\n+\n+   MSG_OOB            : constant :=           1; --  Process out-of-band data\n+   MSG_PEEK           : constant :=           2; --  Peek at incoming data\n+   MSG_EOR            : constant :=           8; --  Send end of record\n+   MSG_WAITALL        : constant :=          64; --  Wait for full reception\n+   MSG_NOSIGNAL       : constant :=          -1; --  No SIGPIPE on send\n+   MSG_Forced_Flags   : constant :=           0;\n+   --  Flags set on all send(2) calls\n+\n+   --------------------\n+   -- Socket options --\n+   --------------------\n+\n+   TCP_NODELAY        : constant :=           1; --  Do not coalesce packets\n+   SO_REUSEADDR       : constant :=           4; --  Bind reuse local address\n+   SO_REUSEPORT       : constant :=          -1; --  Bind reuse port number\n+   SO_KEEPALIVE       : constant :=           8; --  Enable keep-alive msgs\n+   SO_LINGER          : constant :=         128; --  Defer close to flush data\n+   SO_BROADCAST       : constant :=          32; --  Can send broadcast msgs\n+   SO_SNDBUF          : constant :=        4097; --  Set/get send buffer size\n+   SO_RCVBUF          : constant :=        4098; --  Set/get recv buffer size\n+   SO_SNDTIMEO        : constant :=        4101; --  Emission timeout\n+   SO_RCVTIMEO        : constant :=        4102; --  Reception timeout\n+   SO_ERROR           : constant :=        4103; --  Get/clear error status\n+   IP_MULTICAST_IF    : constant :=           9; --  Set/get mcast interface\n+   IP_MULTICAST_TTL   : constant :=          10; --  Set/get multicast TTL\n+   IP_MULTICAST_LOOP  : constant :=          11; --  Set/get mcast loopback\n+   IP_ADD_MEMBERSHIP  : constant :=          12; --  Join a multicast group\n+   IP_DROP_MEMBERSHIP : constant :=          13; --  Leave a multicast group\n+\n+   -------------------\n+   -- System limits --\n+   -------------------\n+\n+   IOV_MAX            : constant :=        1024; --  Maximum writev iovcnt\n+\n+   ----------------------\n+   -- Type definitions --\n+   ----------------------\n+\n+   --  Sizes (in bytes) of the components of struct timeval\n+\n+   SIZEOF_tv_sec      : constant :=           4; --  tv_sec\n+   SIZEOF_tv_usec     : constant :=           4; --  tv_usec\n+\n+   ----------------------------------------\n+   -- Properties of supported interfaces --\n+   ----------------------------------------\n+\n+   Need_Netdb_Buffer  : constant :=           1; --  Need buffer for Netdb ops\n+\n+   ----------------------\n+   -- Additional flags --\n+   ----------------------\n+\n+   Thread_Blocking_IO : constant Boolean := True;\n+   --  Set False for contexts where socket i/o are process blocking\n+\n+end GNAT.Sockets.Constants;"}, {"sha": "bfdf1233cee4b5b13c7278cc055aa105676819f8", "filename": "gcc/ada/gsocket.h", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a333ca04f20c16c42aa15c004a26ebbc9fad02c/gcc%2Fada%2Fgsocket.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a333ca04f20c16c42aa15c004a26ebbc9fad02c/gcc%2Fada%2Fgsocket.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgsocket.h?ref=6a333ca04f20c16c42aa15c004a26ebbc9fad02c", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                              C Header File                               *\n  *                                                                          *\n- *         Copyright (C) 2004-2006, Free Software Foundation, Inc.          *\n+ *         Copyright (C) 2004-2008, Free Software Foundation, Inc.          *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -139,7 +139,15 @@\n #include <sys/time.h>\n #endif\n \n-#if !(defined (VMS) || defined (__MINGW32__) || defined(__rtems__))\n+/*\n+ * RTEMS has these .h files but not until you have built RTEMS.  When\n+ * IN_RTS, you only have the .h files in the newlib C library.\n+ * Because this file is also included from gen-soccon.c which is built\n+ * to run on RTEMS (not IN_RTS), we must distinguish between IN_RTS\n+ * and using this file to compile gen-soccon.\n+ */\n+#if !(defined (VMS) || defined (__MINGW32__) || \\\n+      (defined(__rtems__) && defined(IN_RTS)))\n #include <sys/socket.h>\n #include <netinet/in.h>\n #include <netinet/tcp.h>"}, {"sha": "494947cbd7f25459cc42e5b19cba245aae378e18", "filename": "gcc/ada/s-osinte-rtems.adb", "status": "modified", "additions": 20, "deletions": 3, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a333ca04f20c16c42aa15c004a26ebbc9fad02c/gcc%2Fada%2Fs-osinte-rtems.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a333ca04f20c16c42aa15c004a26ebbc9fad02c/gcc%2Fada%2Fs-osinte-rtems.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-rtems.adb?ref=6a333ca04f20c16c42aa15c004a26ebbc9fad02c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---            Copyright (C) 1991-2002 Florida State University              --\n+--            Copyright (C) 1991-2008 Florida State University              --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -57,6 +57,17 @@ package body System.OS_Interface is\n       return Duration (TS.tv_sec) + Duration (TS.tv_nsec) / 10#1#E9;\n    end To_Duration;\n \n+   ------------------------\n+   -- To_Target_Priority --\n+   ------------------------\n+\n+   function To_Target_Priority\n+     (Prio : System.Any_Priority) return Interfaces.C.int\n+   is\n+   begin\n+      return Interfaces.C.int (Prio);\n+   end To_Target_Priority;\n+\n    -----------------\n    -- To_Timespec --\n    -----------------\n@@ -70,7 +81,10 @@ package body System.OS_Interface is\n \n       --  If F has negative value due to round-up, adjust for positive F value\n \n-      if F < 0.0 then S := S - 1; F := F + 1.0; end if;\n+      if F < 0.0 then\n+         S := S - 1;\n+         F := F + 1.0;\n+      end if;\n       return timespec'(tv_sec => S,\n                        tv_nsec => long (Long_Long_Integer (F * 10#1#E9)));\n    end To_Timespec;\n@@ -89,7 +103,10 @@ package body System.OS_Interface is\n \n       --  If F has negative value due to a round-up, adjust for positive F\n       --  value.\n-      if F < 0.0 then S := S - 1; F := F + 1.0; end if;\n+      if F < 0.0 then\n+         S := S - 1;\n+         F := F + 1.0;\n+      end if;\n       return\n         struct_timeval'\n           (tv_sec  => S,"}, {"sha": "268eb43ac2162de06cab9e245083dbb135029540", "filename": "gcc/ada/s-osinte-rtems.ads", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a333ca04f20c16c42aa15c004a26ebbc9fad02c/gcc%2Fada%2Fs-osinte-rtems.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a333ca04f20c16c42aa15c004a26ebbc9fad02c/gcc%2Fada%2Fs-osinte-rtems.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-rtems.ads?ref=6a333ca04f20c16c42aa15c004a26ebbc9fad02c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                   S p e c                                --\n --                                                                          --\n---          Copyright (C) 1997-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1997-2008 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -194,6 +194,10 @@ package System.OS_Interface is\n    SCHED_RR    : constant := 2;\n    SCHED_OTHER : constant := 0;\n \n+   function To_Target_Priority\n+     (Prio : System.Any_Priority) return Interfaces.C.int;\n+   --  Maps System.Any_Priority to a POSIX priority\n+\n    -------------\n    -- Process --\n    -------------\n@@ -222,6 +226,7 @@ package System.OS_Interface is\n \n    type Thread_Body is access\n      function (arg : System.Address) return System.Address;\n+   pragma Convention (C, Thread_Body);\n \n    type pthread_t           is private;\n    subtype Thread_Id        is pthread_t;\n@@ -237,6 +242,9 @@ package System.OS_Interface is\n \n    PTHREAD_CREATE_DETACHED : constant := 0;\n \n+   PTHREAD_SCOPE_PROCESS : constant := 0;\n+   PTHREAD_SCOPE_SYSTEM  : constant := 1;\n+\n    -----------\n    -- Stack --\n    -----------\n@@ -460,6 +468,7 @@ package System.OS_Interface is\n    pragma Import (C, pthread_getspecific, \"pthread_getspecific\");\n \n    type destructor_pointer is access procedure (arg : System.Address);\n+   pragma Convention (C, destructor_pointer);\n \n    function pthread_key_create\n      (key        : access pthread_key_t;"}, {"sha": "95338f52d12e898a3880ac24f073c3a26313ded7", "filename": "gcc/ada/system-rtems.ads", "status": "added", "additions": 168, "deletions": 0, "changes": 168, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a333ca04f20c16c42aa15c004a26ebbc9fad02c/gcc%2Fada%2Fsystem-rtems.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a333ca04f20c16c42aa15c004a26ebbc9fad02c/gcc%2Fada%2Fsystem-rtems.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-rtems.ads?ref=6a333ca04f20c16c42aa15c004a26ebbc9fad02c", "patch": "@@ -0,0 +1,168 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                        GNAT RUN-TIME COMPONENTS                          --\n+--                                                                          --\n+--                               S Y S T E M                                --\n+--                                                                          --\n+--                                 S p e c                                  --\n+--                            (Compiler Version)                            --\n+--                                                                          --\n+--          Copyright (C) 1992-2008 Free Software Foundation, Inc.          --\n+--                                                                          --\n+-- This specification is derived from the Ada Reference Manual for use with --\n+-- GNAT. The copyright notice above, and the license provisions that follow --\n+-- apply solely to the  contents of the part following the private keyword. --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n+-- to  the  Free Software Foundation,  51  Franklin  Street,  Fifth  Floor, --\n+-- Boston, MA 02110-1301, USA.                                              --\n+--                                                                          --\n+-- As a special exception,  if other files  instantiate  generics from this --\n+-- unit, or you link  this unit with other files  to produce an executable, --\n+-- this  unit  does not  by itself cause  the resulting  executable  to  be --\n+-- covered  by the  GNU  General  Public  License.  This exception does not --\n+-- however invalidate  any other reasons why  the executable file  might be --\n+-- covered by the  GNU Public License.                                      --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+--  This version of System is a RTEMS version that is used in building\n+--  the compiler.  This is based as closely as possible on the generic\n+--  version with the following exceptions:\n+--      + priority definitions\n+\n+package System is\n+   pragma Pure;\n+   --  Note that we take advantage of the implementation permission to make\n+   --  this unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada\n+   --  2005, this is Pure in any case (AI-362).\n+\n+   type Name is (SYSTEM_NAME_GNAT);\n+   System_Name : constant Name := SYSTEM_NAME_GNAT;\n+\n+   --  System-Dependent Named Numbers\n+\n+   Min_Int               : constant := Long_Long_Integer'First;\n+   Max_Int               : constant := Long_Long_Integer'Last;\n+\n+   Max_Binary_Modulus    : constant := 2 ** Long_Long_Integer'Size;\n+   Max_Nonbinary_Modulus : constant := Integer'Last;\n+\n+   Max_Base_Digits       : constant := Long_Long_Float'Digits;\n+   Max_Digits            : constant := Long_Long_Float'Digits;\n+\n+   Max_Mantissa          : constant := 63;\n+   Fine_Delta            : constant := 2.0 ** (-Max_Mantissa);\n+\n+   Tick                  : constant := 0.01;\n+\n+   --  Storage-related Declarations\n+\n+   type Address is private;\n+   Null_Address : constant Address;\n+\n+   Storage_Unit : constant := Standard'Storage_Unit;\n+   Word_Size    : constant := Standard'Word_Size;\n+   Memory_Size  : constant := 2 ** Standard'Address_Size;\n+\n+   --  Address comparison\n+\n+   function \"<\"  (Left, Right : Address) return Boolean;\n+   function \"<=\" (Left, Right : Address) return Boolean;\n+   function \">\"  (Left, Right : Address) return Boolean;\n+   function \">=\" (Left, Right : Address) return Boolean;\n+   function \"=\"  (Left, Right : Address) return Boolean;\n+\n+   pragma Import (Intrinsic, \"<\");\n+   pragma Import (Intrinsic, \"<=\");\n+   pragma Import (Intrinsic, \">\");\n+   pragma Import (Intrinsic, \">=\");\n+   pragma Import (Intrinsic, \"=\");\n+\n+   --  Other System-Dependent Declarations\n+\n+   type Bit_Order is (High_Order_First, Low_Order_First);\n+   Default_Bit_Order : constant Bit_Order :=\n+                         Bit_Order'Val (Standard'Default_Bit_Order);\n+   pragma Warnings (Off, Default_Bit_Order); -- kill constant condition warning\n+\n+   --  Priority-related Declarations (RM D.1)\n+\n+   --  RTEMS POSIX threads support 256 priority levels with 255 being\n+   --  logically the most important. Levels 0 and 255 are reserved.\n+   --\n+   --  255        is reserved for RTEMS system tasks\n+   --  247 - 254  correspond to hardware interrupt levels 0 .. 7\n+   --  246        is a catchall default \"interrupt\" priority for signals,\n+   --             allowing higher priority than normal tasks, but lower than\n+   --             hardware priority levels.  Protected Object ceilings can\n+   --             override these values.\n+   --  245        is used by the Interrupt_Manager task\n+   --  0          is reserved for the RTEMS IDLE task and really should not\n+   --             be accessible from Ada but GNAT initializes\n+   --             Current_Priority to 0 so it must be valid\n+\n+   Max_Priority           : constant Positive := 244;\n+   Max_Interrupt_Priority : constant Positive := 254;\n+\n+   subtype Any_Priority       is Integer      range   0 .. 254;\n+   subtype Priority           is Any_Priority range   0 .. 244;\n+   subtype Interrupt_Priority is Any_Priority range 245 .. 254;\n+\n+   Default_Priority : constant Priority := 122;\n+\n+private\n+\n+   type Address is mod Memory_Size;\n+   Null_Address : constant Address := 0;\n+\n+   --------------------------------------\n+   -- System Implementation Parameters --\n+   --------------------------------------\n+\n+   --  These parameters provide information about the target that is used\n+   --  by the compiler. They are in the private part of System, where they\n+   --  can be accessed using the special circuitry in the Targparm unit\n+   --  whose source should be consulted for more detailed descriptions\n+   --  of the individual switch values.\n+\n+   Backend_Divide_Checks     : constant Boolean := False;\n+   Backend_Overflow_Checks   : constant Boolean := False;\n+   Command_Line_Args         : constant Boolean := True;\n+   Configurable_Run_Time     : constant Boolean := False;\n+   Denorm                    : constant Boolean := True;\n+   Duration_32_Bits          : constant Boolean := False;\n+   Exit_Status_Supported     : constant Boolean := True;\n+   Fractional_Fixed_Ops      : constant Boolean := False;\n+   Frontend_Layout           : constant Boolean := False;\n+   Machine_Overflows         : constant Boolean := False;\n+   Machine_Rounds            : constant Boolean := True;\n+   Preallocated_Stacks       : constant Boolean := False;\n+   Signed_Zeros              : constant Boolean := True;\n+   Stack_Check_Default       : constant Boolean := False;\n+   Stack_Check_Probes        : constant Boolean := False;\n+   Support_64_Bit_Divides    : constant Boolean := True;\n+   Support_Aggregates        : constant Boolean := True;\n+   Support_Composite_Assign  : constant Boolean := True;\n+   Support_Composite_Compare : constant Boolean := True;\n+   Support_Long_Shifts       : constant Boolean := True;\n+   Suppress_Standard_Library : constant Boolean := False;\n+   Use_Ada_Main_Program_Name : constant Boolean := False;\n+   ZCX_By_Default            : constant Boolean := False;\n+   GCC_ZCX_Support           : constant Boolean := True;\n+\n+   --  One would think you did not have to define this but\n+   --  it is used in the run-time.\n+   OpenVMS                   : constant Boolean := False;\n+\n+end System;"}]}