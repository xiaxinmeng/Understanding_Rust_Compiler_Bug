{"sha": "71d61348020eedc3d89e4c877ad714cbb2954792", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzFkNjEzNDgwMjBlZWRjM2Q4OWU0Yzg3N2FkNzE0Y2JiMjk1NDc5Mg==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-10-13T13:03:31Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-10-13T13:03:31Z"}, "message": "re PR tree-optimization/45970 (tree DSE misses many obvious dead stores)\n\n2010-10-13  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/45970\n\t* tree-ssa-alias.h (stmt_kills_ref_p): Declare.\n\t* tree-ssa-alias.c (stmt_kills_ref_p_1): New function.\n\t(stmt_kills_ref_p): Likewise.\n\t* tree-ssa-dse.c (dse_optimize_stmt): Use it.\n\n\t* gcc.dg/tree-ssa/ssa-dse-13.c: New testcase.\n\nFrom-SVN: r165422", "tree": {"sha": "1fbb62b9afc53835c17dfb33351b1fa61122bfce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1fbb62b9afc53835c17dfb33351b1fa61122bfce"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/71d61348020eedc3d89e4c877ad714cbb2954792", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71d61348020eedc3d89e4c877ad714cbb2954792", "html_url": "https://github.com/Rust-GCC/gccrs/commit/71d61348020eedc3d89e4c877ad714cbb2954792", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71d61348020eedc3d89e4c877ad714cbb2954792/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9827eb57a33462935e8d55d7e49f5ab4b16b887c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9827eb57a33462935e8d55d7e49f5ab4b16b887c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9827eb57a33462935e8d55d7e49f5ab4b16b887c"}], "stats": {"total": 79, "additions": 77, "deletions": 2}, "files": [{"sha": "5a705fb68a648ac9db97486ff50210706ab65ea6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71d61348020eedc3d89e4c877ad714cbb2954792/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71d61348020eedc3d89e4c877ad714cbb2954792/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=71d61348020eedc3d89e4c877ad714cbb2954792", "patch": "@@ -1,3 +1,11 @@\n+2010-10-13  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/45970\n+\t* tree-ssa-alias.h (stmt_kills_ref_p): Declare.\n+\t* tree-ssa-alias.c (stmt_kills_ref_p_1): New function.\n+\t(stmt_kills_ref_p): Likewise.\n+\t* tree-ssa-dse.c (dse_optimize_stmt): Use it.\n+\n 2010-10-13  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/45982"}, {"sha": "65ca05c9df64397f7ff45870d9124a193aa1c5ad", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71d61348020eedc3d89e4c877ad714cbb2954792/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71d61348020eedc3d89e4c877ad714cbb2954792/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=71d61348020eedc3d89e4c877ad714cbb2954792", "patch": "@@ -1,3 +1,8 @@\n+2010-10-13  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/45970\n+\t* gcc.dg/tree-ssa/ssa-dse-13.c: New testcase.\n+\n 2010-10-13  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/45982"}, {"sha": "92e0f2b5359917b4a842317d4da2e2b1a7ef0a9e", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-dse-13.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71d61348020eedc3d89e4c877ad714cbb2954792/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dse-13.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71d61348020eedc3d89e4c877ad714cbb2954792/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dse-13.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dse-13.c?ref=71d61348020eedc3d89e4c877ad714cbb2954792", "patch": "@@ -0,0 +1,21 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -fdump-tree-dse1-details\" } */\n+\n+struct A { char c[4]; } a, b;\n+\n+void\n+f1 (void)\n+{\n+  __builtin_memcpy (&a.c[0], \"a\", 1);\n+  a = b;\n+}\n+\n+void\n+f2 (void)\n+{\n+  __builtin_memcpy (&a.c[0], \"a\", 1);\n+  __builtin_memcpy (&a.c[0], \"cdef\", 4);\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"Deleted dead store\" 2 \"dse1\" } } */\n+/* { dg-final { cleanup-tree-dump \"dse1\" } } */"}, {"sha": "afd5e0852cc8f65ed155bd604180f444d795a9ec", "filename": "gcc/tree-ssa-alias.c", "status": "modified", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71d61348020eedc3d89e4c877ad714cbb2954792/gcc%2Ftree-ssa-alias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71d61348020eedc3d89e4c877ad714cbb2954792/gcc%2Ftree-ssa-alias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-alias.c?ref=71d61348020eedc3d89e4c877ad714cbb2954792", "patch": "@@ -1522,6 +1522,45 @@ stmt_may_clobber_ref_p (gimple stmt, tree ref)\n   return stmt_may_clobber_ref_p_1 (stmt, &r);\n }\n \n+/* If STMT kills the memory reference REF return true, otherwise\n+   return false.  */\n+\n+static bool\n+stmt_kills_ref_p_1 (gimple stmt, ao_ref *ref)\n+{\n+  if (gimple_has_lhs (stmt)\n+      && TREE_CODE (gimple_get_lhs (stmt)) != SSA_NAME)\n+    {\n+      tree base, lhs = gimple_get_lhs (stmt);\n+      HOST_WIDE_INT size, offset, max_size;\n+      ao_ref_base (ref);\n+      base = get_ref_base_and_extent (lhs, &offset, &size, &max_size);\n+      /* We can get MEM[symbol: sZ, index: D.8862_1] here,\n+\t so base == ref->base does not always hold.  */\n+      if (base == ref->base)\n+\t{\n+\t  /* For a must-alias check we need to be able to constrain\n+\t     the accesses properly.  */\n+\t  if (size != -1 && size == max_size\n+\t      && ref->max_size != -1)\n+\t    {\n+\t      if (offset <= ref->offset\n+\t\t  && offset + size >= ref->offset + ref->max_size)\n+\t\treturn true;\n+\t    }\n+\t}\n+    }\n+  return false;\n+}\n+\n+bool\n+stmt_kills_ref_p (gimple stmt, tree ref)\n+{\n+  ao_ref r;\n+  ao_ref_init (&r, ref);\n+  return stmt_kills_ref_p_1 (stmt, &r);\n+}\n+\n \n /* Walk the virtual use-def chain of VUSE until hitting the virtual operand\n    TARGET or a statement clobbering the memory reference REF in which"}, {"sha": "1f22076578190569ee55b46906ddf1011f4a3ae0", "filename": "gcc/tree-ssa-alias.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71d61348020eedc3d89e4c877ad714cbb2954792/gcc%2Ftree-ssa-alias.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71d61348020eedc3d89e4c877ad714cbb2954792/gcc%2Ftree-ssa-alias.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-alias.h?ref=71d61348020eedc3d89e4c877ad714cbb2954792", "patch": "@@ -105,6 +105,7 @@ extern bool ref_maybe_used_by_stmt_p (gimple, tree);\n extern bool stmt_may_clobber_ref_p (gimple, tree);\n extern bool stmt_may_clobber_ref_p_1 (gimple, ao_ref *);\n extern bool call_may_clobber_ref_p (gimple, tree);\n+extern bool stmt_kills_ref_p (gimple, tree);\n extern tree get_continuation_for_phi (gimple, ao_ref *, bitmap *);\n extern void *walk_non_aliased_vuses (ao_ref *, tree,\n \t\t\t\t     void *(*)(ao_ref *, tree, void *),"}, {"sha": "80c2622c9dc6209313fab8ae76883c738b5ea11c", "filename": "gcc/tree-ssa-dse.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71d61348020eedc3d89e4c877ad714cbb2954792/gcc%2Ftree-ssa-dse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71d61348020eedc3d89e4c877ad714cbb2954792/gcc%2Ftree-ssa-dse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dse.c?ref=71d61348020eedc3d89e4c877ad714cbb2954792", "patch": "@@ -301,8 +301,9 @@ dse_optimize_stmt (struct dse_global_data *dse_gd,\n \t virtual uses from stmt and the stmt which stores to that same\n \t memory location, then we may have found redundant store.  */\n       if (bitmap_bit_p (dse_gd->stores, get_stmt_uid (use_stmt))\n-\t  && operand_equal_p (gimple_assign_lhs (stmt),\n-\t\t\t      gimple_assign_lhs (use_stmt), 0))\n+\t  && (operand_equal_p (gimple_assign_lhs (stmt),\n+\t\t\t       gimple_assign_lhs (use_stmt), 0)\n+\t      || stmt_kills_ref_p (use_stmt, gimple_assign_lhs (stmt))))\n \t{\n \t  /* If use_stmt is or might be a nop assignment, e.g. for\n \t     struct { ... } S a, b, *p; ..."}]}