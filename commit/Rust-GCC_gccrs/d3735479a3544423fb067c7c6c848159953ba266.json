{"sha": "d3735479a3544423fb067c7c6c848159953ba266", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDM3MzU0NzlhMzU0NDQyM2ZiMDY3YzdjNmM4NDgxNTk5NTNiYTI2Ng==", "commit": {"author": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2010-10-10T21:35:10Z"}, "committer": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2010-10-10T21:35:10Z"}, "message": "re PR fortran/45961 ([OOP] Problem with polymorphic type-bound operators)\n\n2010-10-10  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/45961\n\t* resolve.c (resolve_typebound_function): Bugfix for type-bound\n\toperators.\n\n2010-10-10  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/45961\n\t* gfortran.dg/typebound_operator_6.f03: New.\n\nFrom-SVN: r165263", "tree": {"sha": "9d67983f7531f0beb32aea6ee8612deca1114ace", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9d67983f7531f0beb32aea6ee8612deca1114ace"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d3735479a3544423fb067c7c6c848159953ba266", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3735479a3544423fb067c7c6c848159953ba266", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3735479a3544423fb067c7c6c848159953ba266", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3735479a3544423fb067c7c6c848159953ba266/comments", "author": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6ea7f14af8bb3c974c544c6c905a087452b79470", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ea7f14af8bb3c974c544c6c905a087452b79470", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ea7f14af8bb3c974c544c6c905a087452b79470"}], "stats": {"total": 88, "additions": 86, "deletions": 2}, "files": [{"sha": "f748da633e35d2ecb06310965746556398b009f0", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3735479a3544423fb067c7c6c848159953ba266/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3735479a3544423fb067c7c6c848159953ba266/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=d3735479a3544423fb067c7c6c848159953ba266", "patch": "@@ -1,3 +1,9 @@\n+2010-10-10  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/45961\n+\t* resolve.c (resolve_typebound_function): Bugfix for type-bound\n+\toperators.\n+\n 2010-10-09  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \t* frontend-passes.c:  Include opts.h."}, {"sha": "4280555eae4632c2390fa3b5da6a1303d386ecd0", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3735479a3544423fb067c7c6c848159953ba266/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3735479a3544423fb067c7c6c848159953ba266/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=d3735479a3544423fb067c7c6c848159953ba266", "patch": "@@ -5736,7 +5736,7 @@ resolve_typebound_function (gfc_expr* e)\n       /* Use the generic name if it is there.  */\n       name = name ? name : e->value.function.esym->name;\n       e->symtree = expr->symtree;\n-      expr->symtree->n.sym->ts.u.derived = declared;\n+      e->ref = gfc_copy_ref (expr->ref);\n       gfc_add_component_ref (e, \"$vptr\");\n       gfc_add_component_ref (e, name);\n       e->value.function.esym = NULL;"}, {"sha": "34783f980cacd16faa34136c3d832ec77bb97d6c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3735479a3544423fb067c7c6c848159953ba266/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3735479a3544423fb067c7c6c848159953ba266/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d3735479a3544423fb067c7c6c848159953ba266", "patch": "@@ -1,4 +1,9 @@\n-2010-10.10  Kai Tietz  <kai.tietz@onevision.com>\n+2010-10-10  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/45961\n+\t* gfortran.dg/typebound_operator_6.f03: New.\n+\n+2010-10-10  Kai Tietz  <kai.tietz@onevision.com>\n \n \t* g++.dg/ext/dllexport-MI1.C: Enable for x86_64 mingw\n \tand adjust -export symbol scanning."}, {"sha": "b2c3ee8b441840614720c716252e81d5fb089547", "filename": "gcc/testsuite/gfortran.dg/typebound_operator_6.f03", "status": "added", "additions": 73, "deletions": 0, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3735479a3544423fb067c7c6c848159953ba266/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_operator_6.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3735479a3544423fb067c7c6c848159953ba266/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_operator_6.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_operator_6.f03?ref=d3735479a3544423fb067c7c6c848159953ba266", "patch": "@@ -0,0 +1,73 @@\n+! { dg-do run }\n+!\n+! PR 45961: [4.6 Regression] [OOP] Problem with polymorphic type-bound operators\n+!\n+! Contributed by Mark Rashid <mmrashid@ucdavis.edu>\n+\n+MODULE DAT_MOD\n+\n+  TYPE :: DAT\n+    INTEGER :: NN\n+  CONTAINS\n+    PROCEDURE :: LESS_THAN\n+    GENERIC :: OPERATOR (.LT.) => LESS_THAN\n+  END TYPE DAT\n+\n+CONTAINS\n+\n+  LOGICAL FUNCTION LESS_THAN(A, B)\n+    CLASS (DAT), INTENT (IN) :: A, B\n+    LESS_THAN = (A%NN .LT. B%NN)\n+  END FUNCTION LESS_THAN\n+\n+END MODULE DAT_MOD\n+\n+\n+MODULE NODE_MOD\n+  USE DAT_MOD\n+\n+  TYPE NODE\n+    INTEGER :: KEY\n+    CLASS (DAT), POINTER :: PT\n+  CONTAINS\n+    PROCEDURE :: LST\n+    GENERIC :: OPERATOR (.LT.) => LST\n+  END TYPE NODE\n+\n+CONTAINS\n+\n+  LOGICAL FUNCTION LST(A, B)\n+    CLASS (NODE), INTENT (IN) :: A, B\n+    IF (A%KEY .GT. 0 .AND. B%KEY .GT. 0) THEN\n+      LST = (A%KEY .LT. B%KEY)\n+    ELSE\n+      LST = (A%PT .LT. B%PT)\n+    END IF\n+  END FUNCTION LST\n+\n+END MODULE NODE_MOD\n+\n+\n+PROGRAM TEST\n+  USE NODE_MOD\n+  IMPLICIT NONE\n+\n+  CLASS (DAT), POINTER :: POINTA => NULL(), POINTB => NULL()\n+  CLASS (NODE), POINTER :: NDA => NULL(), NDB => NULL()\n+\n+  ALLOCATE (DAT :: POINTA)\n+  ALLOCATE (DAT :: POINTB)\n+  ALLOCATE (NODE :: NDA)\n+  ALLOCATE (NODE :: NDB)\n+\n+  POINTA%NN = 5\n+  NDA%PT => POINTA\n+  NDA%KEY = 2\n+  POINTB%NN = 10\n+  NDB%PT => POINTB\n+  NDB%KEY = 3\n+\n+  if (.NOT. NDA .LT. NDB) call abort()\n+END\n+\n+! { dg-final { cleanup-modules \"DAT_MOD NODE_MOD\" } }"}]}