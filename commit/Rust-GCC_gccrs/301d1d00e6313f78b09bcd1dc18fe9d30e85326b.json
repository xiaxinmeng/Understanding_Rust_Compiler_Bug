{"sha": "301d1d00e6313f78b09bcd1dc18fe9d30e85326b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzAxZDFkMDBlNjMxM2Y3OGIwOWJjZDFkYzE4ZmU5ZDMwZTg1MzI2Yg==", "commit": {"author": {"name": "Andreas Tobler", "email": "andreast@gcc.gnu.org", "date": "2015-11-14T21:17:24Z"}, "committer": {"name": "Andreas Tobler", "email": "andreast@gcc.gnu.org", "date": "2015-11-14T21:17:24Z"}, "message": "acinclude.m4 (GLIBCXX_ENABLE_CLOCALE): Change locale implementation from darwin to DragonFly.\n\n2015-11-14  Andreas Tobler  <andreast@gcc.gnu.org>\n\n    * acinclude.m4 (GLIBCXX_ENABLE_CLOCALE): Change locale implementation\n    from darwin to DragonFly.\n    * configure: Regenerate.\n    * config/os/bsd/freebsd/ctype_configure_char.cc: Improve locale\n    support, do it the same as DragonFly.\n    * config/os/bsd/freebsd/os_defines.h: Add fine grained C99 defines.\n\nFrom-SVN: r230383", "tree": {"sha": "e6096ad12e7ffc9bada269eff97eb55da98962c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e6096ad12e7ffc9bada269eff97eb55da98962c3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/301d1d00e6313f78b09bcd1dc18fe9d30e85326b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/301d1d00e6313f78b09bcd1dc18fe9d30e85326b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/301d1d00e6313f78b09bcd1dc18fe9d30e85326b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/301d1d00e6313f78b09bcd1dc18fe9d30e85326b/comments", "author": null, "committer": null, "parents": [{"sha": "38e5f0454c22a422f0aa2e5f2ec2962baa6427ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38e5f0454c22a422f0aa2e5f2ec2962baa6427ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/38e5f0454c22a422f0aa2e5f2ec2962baa6427ab"}], "stats": {"total": 101, "additions": 71, "deletions": 30}, "files": [{"sha": "942e418b185f6933b1963069defb594f6713032a", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/301d1d00e6313f78b09bcd1dc18fe9d30e85326b/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/301d1d00e6313f78b09bcd1dc18fe9d30e85326b/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=301d1d00e6313f78b09bcd1dc18fe9d30e85326b", "patch": "@@ -1,3 +1,12 @@\n+2015-11-14  Andreas Tobler  <andreast@gcc.gnu.org>\n+\n+\t* acinclude.m4 (GLIBCXX_ENABLE_CLOCALE): Change locale implementation\n+\tfrom darwin to DragonFly.\n+\t* configure: Regenerate.\n+\t* config/os/bsd/freebsd/ctype_configure_char.cc: Improve locale\n+\tsupport, do it the same as DragonFly.\n+\t* config/os/bsd/freebsd/os_defines.h: Add fine grained C99 defines.\n+\n 2015-11-14  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* testsuite/21_strings/basic_string/capacity/char/18654.cc: Use"}, {"sha": "e6575eae678936cec7ae9fb8162f309037ffb0db", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/301d1d00e6313f78b09bcd1dc18fe9d30e85326b/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/301d1d00e6313f78b09bcd1dc18fe9d30e85326b/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=301d1d00e6313f78b09bcd1dc18fe9d30e85326b", "patch": "@@ -2236,10 +2236,10 @@ AC_DEFUN([GLIBCXX_ENABLE_CLOCALE], [\n       linux* | gnu* | kfreebsd*-gnu | knetbsd*-gnu)\n \tenable_clocale_flag=gnu\n \t;;\n-      darwin* | freebsd*)\n+      darwin*)\n \tenable_clocale_flag=darwin\n \t;;\n-      dragonfly*)\n+      dragonfly* | freebsd*)\n \tenable_clocale_flag=dragonfly\n \t;;\n       openbsd*)\n@@ -2318,7 +2318,7 @@ AC_DEFUN([GLIBCXX_ENABLE_CLOCALE], [\n       CLOCALE_INTERNAL_H=config/locale/generic/c++locale_internal.h\n       ;;\n     darwin)\n-      AC_MSG_RESULT(darwin or freebsd)\n+      AC_MSG_RESULT(darwin)\n \n       CLOCALE_H=config/locale/generic/c_locale.h\n       CLOCALE_CC=config/locale/generic/c_locale.cc\n@@ -2335,7 +2335,7 @@ AC_DEFUN([GLIBCXX_ENABLE_CLOCALE], [\n       ;;\n \n     dragonfly)\n-      AC_MSG_RESULT(dragonfly)\n+      AC_MSG_RESULT(dragonfly or freebsd)\n \n       CLOCALE_H=config/locale/dragonfly/c_locale.h\n       CLOCALE_CC=config/locale/dragonfly/c_locale.cc"}, {"sha": "b1c24a2e1a53bedf44c4912336745790e6838f8d", "filename": "libstdc++-v3/config/os/bsd/freebsd/ctype_configure_char.cc", "status": "modified", "additions": 48, "deletions": 20, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/301d1d00e6313f78b09bcd1dc18fe9d30e85326b/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Ffreebsd%2Fctype_configure_char.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/301d1d00e6313f78b09bcd1dc18fe9d30e85326b/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Ffreebsd%2Fctype_configure_char.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Ffreebsd%2Fctype_configure_char.cc?ref=301d1d00e6313f78b09bcd1dc18fe9d30e85326b", "patch": "@@ -1,6 +1,6 @@\n // Locale support -*- C++ -*-\n \n-// Copyright (C) 2011-2015 Free Software Foundation, Inc.\n+// Copyright (C) 2014-2015 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -37,32 +37,60 @@ namespace std _GLIBCXX_VISIBILITY(default)\n _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n // Information as gleaned from /usr/include/ctype.h\n-  \n+\n   const ctype_base::mask*\n   ctype<char>::classic_table() throw()\n-  { return 0; }\n-\n-  ctype<char>::ctype(__c_locale, const mask* __table, bool __del, \n-\t\t     size_t __refs) \n-  : facet(__refs), _M_del(__table != 0 && __del), \n-  _M_toupper(NULL), _M_tolower(NULL), \n-  _M_table(__table ? __table : classic_table()) \n-  { \n+  { return NULL; }\n+\n+  ctype<char>::ctype(__c_locale, const mask* __table, bool __del,\n+\t\t     size_t __refs)\n+  : facet(__refs), _M_c_locale_ctype(_S_get_c_locale()),\n+  _M_del(__table != 0 && __del), _M_widen_ok(0), _M_narrow_ok(0)\n+  {\n+    char* __old = setlocale(LC_CTYPE, NULL);\n+    char* __sav = NULL;\n+    if (strcmp(__old, \"C\"))\n+      {\n+\tconst size_t __len = strlen(__old) + 1;\n+\t__sav = new char[__len];\n+\tmemcpy(__sav, __old, __len);\n+\tsetlocale(LC_CTYPE, \"C\");\n+      }\n+    _M_toupper = NULL;\n+    _M_tolower = NULL;\n+    _M_table = __table ? __table : classic_table();\n+    if (__sav)\n+      {\n+\tsetlocale(LC_CTYPE, __sav);\n+\tdelete [] __sav;\n+      }\n     memset(_M_widen, 0, sizeof(_M_widen));\n-    _M_widen_ok = 0;\n     memset(_M_narrow, 0, sizeof(_M_narrow));\n-    _M_narrow_ok = 0;\n   }\n \n-  ctype<char>::ctype(const mask* __table, bool __del, size_t __refs) \n-  : facet(__refs), _M_del(__table != 0 && __del), \n-  _M_toupper(NULL), _M_tolower(NULL), \n-  _M_table(__table ? __table : classic_table()) \n-  { \n+  ctype<char>::ctype(const mask* __table, bool __del, size_t __refs)\n+  : facet(__refs), _M_c_locale_ctype(_S_get_c_locale()),\n+  _M_del(__table != 0 && __del), _M_widen_ok(0), _M_narrow_ok(0)\n+  {\n+    char* __old = setlocale(LC_CTYPE, NULL);\n+    char* __sav = NULL;\n+    if (strcmp(__old, \"C\"))\n+      {\n+\tconst size_t __len = strlen(__old) + 1;\n+\t__sav = new char[__len];\n+\tmemcpy(__sav, __old, __len);\n+\tsetlocale(LC_CTYPE, \"C\");\n+      }\n+    _M_toupper = NULL;\n+    _M_tolower = NULL;\n+    _M_table = __table ? __table : classic_table();\n+    if (__sav)\n+      {\n+\tsetlocale(LC_CTYPE, __sav);\n+\tdelete [] __sav;\n+      }\n     memset(_M_widen, 0, sizeof(_M_widen));\n-    _M_widen_ok = 0;\n     memset(_M_narrow, 0, sizeof(_M_narrow));\n-    _M_narrow_ok = 0;\n   }\n \n   char\n@@ -84,7 +112,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   ctype<char>::do_tolower(char __c) const\n   { return ::tolower((int) __c); }\n \n-  const char* \n+  const char*\n   ctype<char>::do_tolower(char* __low, const char* __high) const\n   {\n     while (__low < __high)"}, {"sha": "9422d92cf05bdfb562fac6e350f3f37f81bb21d0", "filename": "libstdc++-v3/config/os/bsd/freebsd/os_defines.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/301d1d00e6313f78b09bcd1dc18fe9d30e85326b/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Ffreebsd%2Fos_defines.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/301d1d00e6313f78b09bcd1dc18fe9d30e85326b/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Ffreebsd%2Fos_defines.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Ffreebsd%2Fos_defines.h?ref=301d1d00e6313f78b09bcd1dc18fe9d30e85326b", "patch": "@@ -29,6 +29,10 @@\n // System-specific #define, typedefs, corrections, etc, go here.  This\n // file will come before all others.\n \n+#define _GLIBCXX_USE_C99_STDIO 1\n+#define _GLIBCXX_USE_C99_STDLIB 1\n+#define _GLIBCXX_USE_C99_WCHAR 1\n+\n #define _GLIBCXX_USE_C99_CHECK 1\n #define _GLIBCXX_USE_C99_DYNAMIC (!(__ISO_C_VISIBLE >= 1999))\n #define _GLIBCXX_USE_C99_LONG_LONG_CHECK 1"}, {"sha": "3e02b9eabcf3cb911e4c84faeb109beacc2a8021", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/301d1d00e6313f78b09bcd1dc18fe9d30e85326b/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/301d1d00e6313f78b09bcd1dc18fe9d30e85326b/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=301d1d00e6313f78b09bcd1dc18fe9d30e85326b", "patch": "@@ -15831,10 +15831,10 @@ fi\n       linux* | gnu* | kfreebsd*-gnu | knetbsd*-gnu)\n \tenable_clocale_flag=gnu\n \t;;\n-      darwin* | freebsd*)\n+      darwin*)\n \tenable_clocale_flag=darwin\n \t;;\n-      dragonfly*)\n+      dragonfly* | freebsd*)\n \tenable_clocale_flag=dragonfly\n \t;;\n       openbsd*)\n@@ -15965,8 +15965,8 @@ $as_echo \"generic\" >&6; }\n       CLOCALE_INTERNAL_H=config/locale/generic/c++locale_internal.h\n       ;;\n     darwin)\n-      { $as_echo \"$as_me:${as_lineno-$LINENO}: result: darwin or freebsd\" >&5\n-$as_echo \"darwin or freebsd\" >&6; }\n+      { $as_echo \"$as_me:${as_lineno-$LINENO}: result: darwin\" >&5\n+$as_echo \"darwin\" >&6; }\n \n       CLOCALE_H=config/locale/generic/c_locale.h\n       CLOCALE_CC=config/locale/generic/c_locale.cc\n@@ -15983,8 +15983,8 @@ $as_echo \"darwin or freebsd\" >&6; }\n       ;;\n \n     dragonfly)\n-      { $as_echo \"$as_me:${as_lineno-$LINENO}: result: dragonfly\" >&5\n-$as_echo \"dragonfly\" >&6; }\n+      { $as_echo \"$as_me:${as_lineno-$LINENO}: result: dragonfly or freebsd\" >&5\n+$as_echo \"dragonfly or freebsd\" >&6; }\n \n       CLOCALE_H=config/locale/dragonfly/c_locale.h\n       CLOCALE_CC=config/locale/dragonfly/c_locale.cc"}]}