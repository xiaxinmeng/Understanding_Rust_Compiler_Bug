{"sha": "1a6872a2eb088bdfe9839f8ece776da8029fe078", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWE2ODcyYTJlYjA4OGJkZmU5ODM5ZjhlY2U3NzZkYTgwMjlmZTA3OA==", "commit": {"author": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2015-07-17T00:05:02Z"}, "committer": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2015-07-17T00:05:02Z"}, "message": "re PR fortran/66724 (ICE on input/output statements with wrong specifier data)\n\n2015-07-16  Steven G. Kargl  <kargl@gcc.gnu.org>\n\n\tPR fortran/66724\n\tPR fortran/66724\n\t* io.c (is_char_type): Call gfc_resolve_expr ().\n\t(match_open_element, match_dt_element, match_inquire_element): Fix\n\tASYNCHRONOUS case.\n\nFrom-SVN: r225913", "tree": {"sha": "7789fcb2480c84980f493babbe9a6967a0c54931", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7789fcb2480c84980f493babbe9a6967a0c54931"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1a6872a2eb088bdfe9839f8ece776da8029fe078", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a6872a2eb088bdfe9839f8ece776da8029fe078", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a6872a2eb088bdfe9839f8ece776da8029fe078", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a6872a2eb088bdfe9839f8ece776da8029fe078/comments", "author": null, "committer": null, "parents": [{"sha": "1470e75f92c375cb27c473fd5f26af4a7b3bf1cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1470e75f92c375cb27c473fd5f26af4a7b3bf1cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1470e75f92c375cb27c473fd5f26af4a7b3bf1cd"}], "stats": {"total": 16, "additions": 16, "deletions": 0}, "files": [{"sha": "a3fd6debb3bf5cb5c7ea5dc41d70833de3b38007", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a6872a2eb088bdfe9839f8ece776da8029fe078/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a6872a2eb088bdfe9839f8ece776da8029fe078/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=1a6872a2eb088bdfe9839f8ece776da8029fe078", "patch": "@@ -1,3 +1,11 @@\n+2015-07-16  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/66724\n+\tPR fortran/66724\n+\t* io.c (is_char_type): Call gfc_resolve_expr ().\n+\t(match_open_element, match_dt_element, match_inquire_element): Fix\n+\tASYNCHRONOUS case.\n+\n 2015-07-15  Andrew MacLeod  <amacleod@redhat.com>\n \n \t* trans-types.c: Remove multiline #include comment."}, {"sha": "436c09a1deeabdf39859393cc81b8d8dc7a099fc", "filename": "gcc/fortran/io.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a6872a2eb088bdfe9839f8ece776da8029fe078/gcc%2Ffortran%2Fio.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a6872a2eb088bdfe9839f8ece776da8029fe078/gcc%2Ffortran%2Fio.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fio.c?ref=1a6872a2eb088bdfe9839f8ece776da8029fe078", "patch": "@@ -1260,6 +1260,8 @@ check_char_variable (gfc_expr *e)\n static bool\n is_char_type (const char *name, gfc_expr *e)\n {\n+  gfc_resolve_expr (e);\n+\n   if (e->ts.type != BT_CHARACTER)\n     {\n       gfc_error (\"%s requires a scalar-default-char-expr at %L\",\n@@ -1580,6 +1582,8 @@ match_open_element (gfc_open *open)\n   match m;\n \n   m = match_etag (&tag_e_async, &open->asynchronous);\n+  if (m == MATCH_YES && !is_char_type (\"ASYNCHRONOUS\", open->asynchronous))\n+    return MATCH_ERROR;\n   if (m != MATCH_NO)\n     return m;\n   m = match_etag (&tag_unit, &open->unit);\n@@ -2752,6 +2756,8 @@ match_dt_element (io_kind k, gfc_dt *dt)\n     }\n \n   m = match_etag (&tag_e_async, &dt->asynchronous);\n+  if (m == MATCH_YES && !is_char_type (\"ASYNCHRONOUS\", dt->asynchronous))\n+    return MATCH_ERROR;\n   if (m != MATCH_NO)\n     return m;\n   m = match_etag (&tag_e_blank, &dt->blank);\n@@ -3986,6 +3992,8 @@ match_inquire_element (gfc_inquire *inquire)\n   RETM m = match_vtag (&tag_write, &inquire->write);\n   RETM m = match_vtag (&tag_readwrite, &inquire->readwrite);\n   RETM m = match_vtag (&tag_s_async, &inquire->asynchronous);\n+  if (m == MATCH_YES && !is_char_type (\"ASYNCHRONOUS\", inquire->asynchronous))\n+    return MATCH_ERROR;\n   RETM m = match_vtag (&tag_s_delim, &inquire->delim);\n   RETM m = match_vtag (&tag_s_decimal, &inquire->decimal);\n   RETM m = match_out_tag (&tag_size, &inquire->size);"}]}