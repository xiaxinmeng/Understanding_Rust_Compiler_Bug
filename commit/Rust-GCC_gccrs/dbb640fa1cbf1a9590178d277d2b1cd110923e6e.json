{"sha": "dbb640fa1cbf1a9590178d277d2b1cd110923e6e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGJiNjQwZmExY2JmMWE5NTkwMTc4ZDI3N2QyYjFjZDExMDkyM2U2ZQ==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2019-11-04T19:52:06Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2019-11-04T19:52:06Z"}, "message": "Implement debugging functions for assert_info's.\n\nFrom-SVN: r277790", "tree": {"sha": "dd2c7943d1e1805effb8a5a7472ae41ed157aaa7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dd2c7943d1e1805effb8a5a7472ae41ed157aaa7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dbb640fa1cbf1a9590178d277d2b1cd110923e6e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbb640fa1cbf1a9590178d277d2b1cd110923e6e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dbb640fa1cbf1a9590178d277d2b1cd110923e6e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbb640fa1cbf1a9590178d277d2b1cd110923e6e/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2bc2379be5c98d34ecbb347b2abf059aa6d94499", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2bc2379be5c98d34ecbb347b2abf059aa6d94499", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2bc2379be5c98d34ecbb347b2abf059aa6d94499"}], "stats": {"total": 44, "additions": 44, "deletions": 0}, "files": [{"sha": "dd1b042a47018a41308900e94e5f46a3cd3c4a9d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbb640fa1cbf1a9590178d277d2b1cd110923e6e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbb640fa1cbf1a9590178d277d2b1cd110923e6e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dbb640fa1cbf1a9590178d277d2b1cd110923e6e", "patch": "@@ -1,3 +1,8 @@\n+2019-11-04  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* tree-vrp.c (dump_assert_info): New.\n+\t(dump_asserts_info): New.\n+\n 2019-11-04  Jan Hubicka  <jh@suse.cz>\n \n \t* ipa-inline-transform.c: Include ipa-utils.h"}, {"sha": "7c35802dacc12713e2d4b35c985d7db302645abe", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbb640fa1cbf1a9590178d277d2b1cd110923e6e/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbb640fa1cbf1a9590178d277d2b1cd110923e6e/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=dbb640fa1cbf1a9590178d277d2b1cd110923e6e", "patch": "@@ -2114,6 +2114,45 @@ debug_all_asserts (void)\n   dump_all_asserts (stderr);\n }\n \n+/* Dump assert_info structure.  */\n+\n+void\n+dump_assert_info (FILE *file, const assert_info &assert)\n+{\n+  fprintf (file, \"Assert for: \");\n+  print_generic_expr (file, assert.name);\n+  fprintf (file, \"\\n\\tPREDICATE: expr=[\");\n+  print_generic_expr (file, assert.expr);\n+  fprintf (file, \"] %s \", get_tree_code_name (assert.comp_code));\n+  fprintf (file, \"val=[\");\n+  print_generic_expr (file, assert.val);\n+  fprintf (file, \"]\\n\\n\");\n+}\n+\n+DEBUG_FUNCTION void\n+debug (const assert_info &assert)\n+{\n+  dump_assert_info (stderr, assert);\n+}\n+\n+/* Dump a vector of assert_info's.  */\n+\n+void\n+dump_asserts_info (FILE *file, const vec<assert_info> &asserts)\n+{\n+  for (unsigned i = 0; i < asserts.length (); ++i)\n+    {\n+      dump_assert_info (file, asserts[i]);\n+      fprintf (file, \"\\n\");\n+    }\n+}\n+\n+DEBUG_FUNCTION void\n+debug (const vec<assert_info> &asserts)\n+{\n+  dump_asserts_info (stderr, asserts);\n+}\n+\n /* Push the assert info for NAME, EXPR, COMP_CODE and VAL to ASSERTS.  */\n \n static void"}]}