{"sha": "1b51df94425a71e9f0ee1d53559e2063a29e85cc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWI1MWRmOTQ0MjVhNzFlOWYwZWUxZDUzNTU5ZTIwNjNhMjllODVjYw==", "commit": {"author": {"name": "Matthew Fortune", "email": "matthew.fortune@imgtec.com", "date": "2017-02-20T12:07:23Z"}, "committer": {"name": "Matthew Fortune", "email": "mpf@gcc.gnu.org", "date": "2017-02-20T12:07:23Z"}, "message": "Ensure the mode used to create split registers is suppported\n\ngcc/\n\tPR target/78012\n\t* lra-constraints.c (split_reg): Check requested split mode\n\tis supported by the register.\n\nFrom-SVN: r245601", "tree": {"sha": "17b1f58c60f934e17310ee46f296ffc97c773b9b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/17b1f58c60f934e17310ee46f296ffc97c773b9b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1b51df94425a71e9f0ee1d53559e2063a29e85cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b51df94425a71e9f0ee1d53559e2063a29e85cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b51df94425a71e9f0ee1d53559e2063a29e85cc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b51df94425a71e9f0ee1d53559e2063a29e85cc/comments", "author": {"login": "mfortune", "id": 10220247, "node_id": "MDQ6VXNlcjEwMjIwMjQ3", "avatar_url": "https://avatars.githubusercontent.com/u/10220247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mfortune", "html_url": "https://github.com/mfortune", "followers_url": "https://api.github.com/users/mfortune/followers", "following_url": "https://api.github.com/users/mfortune/following{/other_user}", "gists_url": "https://api.github.com/users/mfortune/gists{/gist_id}", "starred_url": "https://api.github.com/users/mfortune/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mfortune/subscriptions", "organizations_url": "https://api.github.com/users/mfortune/orgs", "repos_url": "https://api.github.com/users/mfortune/repos", "events_url": "https://api.github.com/users/mfortune/events{/privacy}", "received_events_url": "https://api.github.com/users/mfortune/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "77850e96ddcb1c1c1be784569d9b18e1c3f96186", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77850e96ddcb1c1c1be784569d9b18e1c3f96186", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77850e96ddcb1c1c1be784569d9b18e1c3f96186"}], "stats": {"total": 26, "additions": 26, "deletions": 0}, "files": [{"sha": "57857eeb3576ad78bf81a1d1fa8d25485373ce68", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b51df94425a71e9f0ee1d53559e2063a29e85cc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b51df94425a71e9f0ee1d53559e2063a29e85cc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1b51df94425a71e9f0ee1d53559e2063a29e85cc", "patch": "@@ -1,3 +1,9 @@\n+2017-02-20  Matthew Fortune  <matthew.fortune@imgtec.com>\n+\n+\tPR target/78012\n+\t* lra-constraints.c (split_reg): Check requested split mode\n+\tis supported by the register.\n+\n 2017-02-20  Matthew Fortune  <matthew.fortune@imgtec.com>\n \n \t* lra-constraints.c (simplify_operand_subreg): Remove early"}, {"sha": "bd5fbcd7dea5bc9150652b78c175a397b4065371", "filename": "gcc/lra-constraints.c", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b51df94425a71e9f0ee1d53559e2063a29e85cc/gcc%2Flra-constraints.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b51df94425a71e9f0ee1d53559e2063a29e85cc/gcc%2Flra-constraints.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-constraints.c?ref=1b51df94425a71e9f0ee1d53559e2063a29e85cc", "patch": "@@ -5396,6 +5396,26 @@ split_reg (bool before_p, int original_regno, rtx_insn *insn,\n \t    }\n \t  return false;\n \t}\n+      /* Split_if_necessary can split hard registers used as part of a\n+\t multi-register mode but splits each register individually.  The\n+\t mode used for each independent register may not be supported\n+\t so reject the split.  Splitting the wider mode should theoretically\n+\t be possible but is not implemented.  */\n+      if (! HARD_REGNO_MODE_OK (hard_regno, mode))\n+\t{\n+\t  if (lra_dump_file != NULL)\n+\t    {\n+\t      fprintf (lra_dump_file,\n+\t\t       \"    Rejecting split of %d(%s): unsuitable mode %s\\n\",\n+\t\t       original_regno,\n+\t\t       reg_class_names[lra_get_allocno_class (original_regno)],\n+\t\t       GET_MODE_NAME (mode));\n+\t      fprintf\n+\t\t(lra_dump_file,\n+\t\t \"    ))))))))))))))))))))))))))))))))))))))))))))))))\\n\");\n+\t    }\n+\t  return false;\n+\t}\n       new_reg = lra_create_new_reg (mode, original_reg, rclass, \"split\");\n       reg_renumber[REGNO (new_reg)] = hard_regno;\n     }"}]}