{"sha": "821eaf2a80a5c88a162f440028c6c4574f70585a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODIxZWFmMmE4MGE1Yzg4YTE2MmY0NDAwMjhjNmM0NTc0ZjcwNTg1YQ==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2004-09-27T18:47:29Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2004-09-27T18:47:29Z"}, "message": "re PR c++/17585 (usage of unqualified name of static member from within class not allowed)\n\n\tPR c++/17585\n\t* cp-tree.h (shared_member_p): Declare.\n\t* search.c (shared_member_p): Give it external linkage.\n\t* semantics.c (finish_qualified_id_expr): Use it.\n\t(finish_id_expression): Likewise.\n\nFrom-SVN: r88188", "tree": {"sha": "f168907d6971264e30582da13712e44bb016547b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f168907d6971264e30582da13712e44bb016547b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/821eaf2a80a5c88a162f440028c6c4574f70585a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/821eaf2a80a5c88a162f440028c6c4574f70585a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/821eaf2a80a5c88a162f440028c6c4574f70585a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/821eaf2a80a5c88a162f440028c6c4574f70585a/comments", "author": null, "committer": null, "parents": [{"sha": "7e200b50101b4cb366edaee4c07120ba2aee6d30", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e200b50101b4cb366edaee4c07120ba2aee6d30", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e200b50101b4cb366edaee4c07120ba2aee6d30"}], "stats": {"total": 20, "additions": 12, "deletions": 8}, "files": [{"sha": "028e0e10d1e97e0da9f7e027838275c55f4d14ee", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/821eaf2a80a5c88a162f440028c6c4574f70585a/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/821eaf2a80a5c88a162f440028c6c4574f70585a/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=821eaf2a80a5c88a162f440028c6c4574f70585a", "patch": "@@ -1,5 +1,11 @@\n 2004-09-27  Mark Mitchell  <mark@codesourcery.com>\n \n+\tPR c++/17585\n+\t* cp-tree.h (shared_member_p): Declare.\n+\t* search.c (shared_member_p): Give it external linkage.\n+\t* semantics.c (finish_qualified_id_expr): Use it.\n+\t(finish_id_expression): Likewise.\n+\n \tPR c++/17585\n \t* semantics.c (finish_id_expression): Do not add \"this->\" to\n \tstatic member functions."}, {"sha": "3c9ea57fda9a027dac5b664adc70cbc3f87c81f4", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/821eaf2a80a5c88a162f440028c6c4574f70585a/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/821eaf2a80a5c88a162f440028c6c4574f70585a/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=821eaf2a80a5c88a162f440028c6c4574f70585a", "patch": "@@ -4023,6 +4023,7 @@ extern tree adjust_result_of_qualified_name_lookup\n                                                 (tree, tree, tree);\n extern tree copied_binfo\t\t\t(tree, tree);\n extern tree original_binfo\t\t\t(tree, tree);\n+extern int shared_member_p                      (tree);\n \n /* in semantics.c */\n extern void push_deferring_access_checks\t(deferring_kind);"}, {"sha": "47d08f34c74c9d764145f9b13ee436b243f7f713", "filename": "gcc/cp/search.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/821eaf2a80a5c88a162f440028c6c4574f70585a/gcc%2Fcp%2Fsearch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/821eaf2a80a5c88a162f440028c6c4574f70585a/gcc%2Fcp%2Fsearch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsearch.c?ref=821eaf2a80a5c88a162f440028c6c4574f70585a", "patch": "@@ -56,7 +56,6 @@ static int lookup_conversions_r (tree, int, int,\n \t\t\t\t tree, tree, tree, tree, tree *, tree *);\n static int look_for_overrides_r (tree, tree);\n static tree lookup_field_queue_p (tree, int, void *);\n-static int shared_member_p (tree);\n static tree lookup_field_r (tree, void *);\n static tree dfs_accessible_queue_p (tree, int, void *);\n static tree dfs_accessible_p (tree, void *);\n@@ -1025,7 +1024,7 @@ template_self_reference_p (tree type, tree decl)\n \n    This function checks that T contains no nonstatic members.  */\n \n-static int\n+int\n shared_member_p (tree t)\n {\n   if (TREE_CODE (t) == VAR_DECL || TREE_CODE (t) == TYPE_DECL \\"}, {"sha": "54abf9365281fa28ee0f844cd7e19b129b7231f6", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/821eaf2a80a5c88a162f440028c6c4574f70585a/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/821eaf2a80a5c88a162f440028c6c4574f70585a/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=821eaf2a80a5c88a162f440028c6c4574f70585a", "patch": "@@ -1426,19 +1426,16 @@ finish_qualified_id_expr (tree qualifying_class, tree expr, bool done,\n \t\t\t\t\t  qualifying_class);\n   else if (BASELINK_P (expr) && !processing_template_decl)\n     {\n-      tree fn;\n       tree fns;\n \n       /* See if any of the functions are non-static members.  */\n       fns = BASELINK_FUNCTIONS (expr);\n       if (TREE_CODE (fns) == TEMPLATE_ID_EXPR)\n \tfns = TREE_OPERAND (fns, 0);\n-      for (fn = fns; fn; fn = OVL_NEXT (fn))\n-\tif (DECL_NONSTATIC_MEMBER_FUNCTION_P (fn))\n-\t  break;\n       /* If so, the expression may be relative to the current\n \t class.  */\n-      if (fn && current_class_type \n+      if (!shared_member_p (fns)\n+\t  && current_class_type \n \t  && DERIVED_FROM_P (qualifying_class, current_class_type))\n \texpr = (build_class_member_access_expr \n \t\t(maybe_dummy_object (qualifying_class, NULL),\n@@ -2646,7 +2643,8 @@ finish_id_expression (tree id_expression,\n \t    mark_used (first_fn);\n \n \t  if (TREE_CODE (first_fn) == FUNCTION_DECL\n-\t      && DECL_NONSTATIC_MEMBER_FUNCTION_P (first_fn))\n+\t      && DECL_FUNCTION_MEMBER_P (first_fn)\n+\t      && !shared_member_p (decl))\n \t    {\n \t      /* A set of member functions.  */\n \t      decl = maybe_dummy_object (DECL_CONTEXT (first_fn), 0);"}]}