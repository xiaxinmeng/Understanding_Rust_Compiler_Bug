{"sha": "efec136240f464eaa89d75c3d68f1f51627e931d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWZlYzEzNjI0MGY0NjRlYWE4OWQ3NWMzZDY4ZjFmNTE2MjdlOTMxZA==", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2020-11-16T14:21:20Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-12-14T15:51:49Z"}, "message": "[Ada] Fix analysis of access objects in Depends contracts\n\ngcc/ada/\n\n\t* sem_prag.adb (Find_Role): Constant object of\n\taccess-to-constant and access-to-subprogram types are not\n\twritable.\n\t(Collect_Subprogram_Inputs_Outputs): In-parameters of\n\taccess-to-variable type can act as outputs of the Depends\n\tcontracts.", "tree": {"sha": "b0388a7a801887f73f9430c97a2ea2373d6af38f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b0388a7a801887f73f9430c97a2ea2373d6af38f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/efec136240f464eaa89d75c3d68f1f51627e931d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efec136240f464eaa89d75c3d68f1f51627e931d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/efec136240f464eaa89d75c3d68f1f51627e931d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efec136240f464eaa89d75c3d68f1f51627e931d/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ae8c56262d635eefdb32fc4e1b8d896453348c00", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae8c56262d635eefdb32fc4e1b8d896453348c00", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae8c56262d635eefdb32fc4e1b8d896453348c00"}], "stats": {"total": 20, "additions": 15, "deletions": 5}, "files": [{"sha": "0a8e99bd10da86cdbfc4c07eab7275e0210830a5", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 15, "deletions": 5, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efec136240f464eaa89d75c3d68f1f51627e931d/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efec136240f464eaa89d75c3d68f1f51627e931d/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=efec136240f464eaa89d75c3d68f1f51627e931d", "patch": "@@ -1267,17 +1267,17 @@ package body Sem_Prag is\n            (Item_Is_Input  : out Boolean;\n             Item_Is_Output : out Boolean)\n          is\n-            --  A constant or IN parameter of access type should be handled\n-            --  like a variable, as the underlying memory pointed-to can be\n-            --  modified. Use Adjusted_Kind to do this adjustment.\n+            --  A constant or IN parameter of access-to-variable type should be\n+            --  handled like a variable, as the underlying memory pointed-to\n+            --  can be modified. Use Adjusted_Kind to do this adjustment.\n \n             Adjusted_Kind : Entity_Kind := Ekind (Item_Id);\n \n          begin\n             if Ekind (Item_Id) in E_Constant\n                                 | E_Generic_In_Parameter\n                                 | E_In_Parameter\n-              and then Is_Access_Type (Etype (Item_Id))\n+              and then Is_Access_Variable (Etype (Item_Id))\n             then\n                Adjusted_Kind := E_Variable;\n             end if;\n@@ -30175,13 +30175,23 @@ package body Sem_Prag is\n          Formal := First_Entity (Spec_Id);\n          while Present (Formal) loop\n             if Ekind (Formal) in E_In_Out_Parameter | E_In_Parameter then\n+\n+               --  IN parameters can act as output when the related type is\n+               --  access-to-variable.\n+\n+               if Ekind (Formal) = E_In_Parameter\n+                 and then Is_Access_Variable (Etype (Formal))\n+               then\n+                  Append_New_Elmt (Formal, Subp_Outputs);\n+               end if;\n+\n                Append_New_Elmt (Formal, Subp_Inputs);\n             end if;\n \n             if Ekind (Formal) in E_In_Out_Parameter | E_Out_Parameter then\n                Append_New_Elmt (Formal, Subp_Outputs);\n \n-               --  Out parameters can act as inputs when the related type is\n+               --  OUT parameters can act as inputs when the related type is\n                --  tagged, unconstrained array, unconstrained record, or record\n                --  with unconstrained components.\n "}]}