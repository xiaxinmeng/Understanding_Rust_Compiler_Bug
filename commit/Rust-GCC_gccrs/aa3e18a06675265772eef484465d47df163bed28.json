{"sha": "aa3e18a06675265772eef484465d47df163bed28", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWEzZTE4YTA2Njc1MjY1NzcyZWVmNDg0NDY1ZDQ3ZGYxNjNiZWQyOA==", "commit": {"author": {"name": "David Daney", "email": "ddaney@avtrex.com", "date": "2007-07-11T16:56:54Z"}, "committer": {"name": "David Daney", "email": "daney@gcc.gnu.org", "date": "2007-07-11T16:56:54Z"}, "message": "linux-unwind.h (mips_fallback_frame_state): Rewrite return address calculation.\n\n\t* config/mips/linux-unwind.h (mips_fallback_frame_state): Rewrite\n\treturn address calculation.  Substitute DWARF_ALT_FRAME_RETURN_COLUMN\n\tfor SIGNAL_UNWIND_RETURN_COLUMN.\n\t* config/mips/mips.h (SIGNAL_UNWIND_RETURN_COLUMN): Remove.\n\t(DWARF_FRAME_REGNUM): Rewrite.\n\t(DWARF_ALT_FRAME_RETURN_COLUMN) Define.\n\nFrom-SVN: r126555", "tree": {"sha": "cd8c11d3ca90b2a1dde60cda30555c3a684d36cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cd8c11d3ca90b2a1dde60cda30555c3a684d36cb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aa3e18a06675265772eef484465d47df163bed28", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa3e18a06675265772eef484465d47df163bed28", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa3e18a06675265772eef484465d47df163bed28", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa3e18a06675265772eef484465d47df163bed28/comments", "author": null, "committer": null, "parents": [{"sha": "9251d66467c0b6e62110282450b1d9ef62ecfdb4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9251d66467c0b6e62110282450b1d9ef62ecfdb4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9251d66467c0b6e62110282450b1d9ef62ecfdb4"}], "stats": {"total": 37, "additions": 24, "deletions": 13}, "files": [{"sha": "9b6a348be30a06f9ac705bb78a5b27b491772043", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa3e18a06675265772eef484465d47df163bed28/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa3e18a06675265772eef484465d47df163bed28/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=aa3e18a06675265772eef484465d47df163bed28", "patch": "@@ -1,3 +1,12 @@\n+2007-07-11  David Daney  <ddaney@avtrex.com>\n+\n+\t* config/mips/linux-unwind.h (mips_fallback_frame_state): Rewrite\n+\treturn address calculation.  Substitute DWARF_ALT_FRAME_RETURN_COLUMN\n+\tfor SIGNAL_UNWIND_RETURN_COLUMN.\n+\t* config/mips/mips.h (SIGNAL_UNWIND_RETURN_COLUMN): Remove.\n+\t(DWARF_FRAME_REGNUM): Rewrite.\n+\t(DWARF_ALT_FRAME_RETURN_COLUMN) Define.\n+\n 2007-07-11  Nick Clifton  <nickc@redhat.com>\n \n \t* config/m32r/m32r.h (INITIALIZE_TRAMPOLINE): Revert previous"}, {"sha": "dee77035fec67f8ad352d9c8edd59f45b88ac328", "filename": "gcc/config/mips/linux-unwind.h", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa3e18a06675265772eef484465d47df163bed28/gcc%2Fconfig%2Fmips%2Flinux-unwind.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa3e18a06675265772eef484465d47df163bed28/gcc%2Fconfig%2Fmips%2Flinux-unwind.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Flinux-unwind.h?ref=aa3e18a06675265772eef484465d47df163bed28", "patch": "@@ -1,5 +1,5 @@\n /* DWARF2 EH unwinding support for MIPS Linux.\n-   Copyright (C) 2004, 2005, 2006 Free Software Foundation, Inc.\n+   Copyright (C) 2004, 2005, 2006, 2007 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -51,7 +51,6 @@ mips_fallback_frame_state (struct _Unwind_Context *context,\n \t\t\t   _Unwind_FrameState *fs)\n {\n   u_int32_t *pc = (u_int32_t *) context->ra;\n-  u_int32_t t;\n   struct sigcontext *sc;\n   _Unwind_Ptr new_cfa;\n   int i;\n@@ -106,11 +105,10 @@ mips_fallback_frame_state (struct _Unwind_Context *context,\n   /* The PC points to the faulting instruction, but the unwind tables\n      expect it point to the following instruction.  We compensate by\n      reporting a return address at the next instruction. */\n-  fs->regs.reg[SIGNAL_UNWIND_RETURN_COLUMN].how = REG_SAVED_VAL_OFFSET;\n-  t = (*(u_int32_t *)(void *)&sc->sc_pc) + 4;\n-  fs->regs.reg[SIGNAL_UNWIND_RETURN_COLUMN].loc.offset\n-    = (_Unwind_Ptr)t - new_cfa;\n-  fs->retaddr_column = SIGNAL_UNWIND_RETURN_COLUMN;\n+  fs->regs.reg[DWARF_ALT_FRAME_RETURN_COLUMN].how = REG_SAVED_VAL_OFFSET;\n+  fs->regs.reg[DWARF_ALT_FRAME_RETURN_COLUMN].loc.offset\n+    = (_Unwind_Ptr)(sc->sc_pc) + 4 - new_cfa;\n+  fs->retaddr_column = DWARF_ALT_FRAME_RETURN_COLUMN;\n \n   return _URC_NO_REASON;\n }"}, {"sha": "6ad6cf74be66bc5d82e006d2733daa054df33901", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa3e18a06675265772eef484465d47df163bed28/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa3e18a06675265772eef484465d47df163bed28/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=aa3e18a06675265772eef484465d47df163bed28", "patch": "@@ -1,6 +1,7 @@\n /* Definitions of target machine for GNU compiler.  MIPS version.\n    Copyright (C) 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998\n-   1999, 2000, 2001, 2002, 2003, 2004, 2005 Free Software Foundation, Inc.\n+   1999, 2000, 2001, 2002, 2003, 2004, 2005, 2007\n+   Free Software Foundation, Inc.\n    Contributed by A. Lichnewsky (lich@inria.inria.fr).\n    Changed by Michael Meissner\t(meissner@osf.org).\n    64-bit r4000 support by Ian Lance Taylor (ian@cygnus.com) and\n@@ -1007,15 +1008,12 @@ extern const struct mips_rtx_cost_data *mips_cost;\n #define DBX_REGISTER_NUMBER(REGNO) mips_dbx_regno[ (REGNO) ]\n \n /* The mapping from gcc register number to DWARF 2 CFA column number.  */\n-#define DWARF_FRAME_REGNUM(REG)\t(REG)\n+#define DWARF_FRAME_REGNUM(REG) \\\n+  ((REG) == DWARF_ALT_FRAME_RETURN_COLUMN ? INVALID_REGNUM : (REG))\n \n /* The DWARF 2 CFA column which tracks the return address.  */\n #define DWARF_FRAME_RETURN_COLUMN (GP_REG_FIRST + 31)\n \n-/* The DWARF 2 CFA column which tracks the return address from a\n-   signal handler context.  */\n-#define SIGNAL_UNWIND_RETURN_COLUMN (FP_REG_LAST + 1)\n-\n /* Before the prologue, RA lives in r31.  */\n #define INCOMING_RETURN_ADDR_RTX  gen_rtx_REG (VOIDmode, GP_REG_FIRST + 31)\n \n@@ -1359,6 +1357,12 @@ extern const struct mips_rtx_cost_data *mips_cost;\n #define MD_REG_NUM   (MD_REG_LAST - MD_REG_FIRST + 1)\n #define MD_DBX_FIRST (FP_DBX_FIRST + FP_REG_NUM)\n \n+/* The DWARF 2 CFA column which tracks the return address from a\n+   signal handler context.  This means that to maintain backwards\n+   compatibility, no hard register can be assigned this column if it\n+   would need to be handled by the DWARF unwinder.  */\n+#define DWARF_ALT_FRAME_RETURN_COLUMN 66\n+\n #define ST_REG_FIRST 67\n #define ST_REG_LAST  74\n #define ST_REG_NUM   (ST_REG_LAST - ST_REG_FIRST + 1)"}]}