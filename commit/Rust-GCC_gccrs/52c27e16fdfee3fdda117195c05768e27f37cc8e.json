{"sha": "52c27e16fdfee3fdda117195c05768e27f37cc8e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTJjMjdlMTZmZGZlZTNmZGRhMTE3MTk1YzA1NzY4ZTI3ZjM3Y2M4ZQ==", "commit": {"author": {"name": "Steven Bosscher", "email": "stevenb@suse.de", "date": "2004-07-03T11:56:43Z"}, "committer": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2004-07-03T11:56:43Z"}, "message": "sh.c (sh_use_dfa_interface): Add TARGET_SH1.\n\n\t* config/sh/sh.c (sh_use_dfa_interface): Add TARGET_SH1.\n\t* config/sh/sh.md: Convert the SH1 pipeline description to\n\ta DFA model.\n\nFrom-SVN: r84047", "tree": {"sha": "fbb4eff7958d8c789733263b8206bb42e29358d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fbb4eff7958d8c789733263b8206bb42e29358d7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/52c27e16fdfee3fdda117195c05768e27f37cc8e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52c27e16fdfee3fdda117195c05768e27f37cc8e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/52c27e16fdfee3fdda117195c05768e27f37cc8e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52c27e16fdfee3fdda117195c05768e27f37cc8e/comments", "author": null, "committer": null, "parents": [{"sha": "9aaabf8aa725651f3e77826d86a2fb50a3f2745b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9aaabf8aa725651f3e77826d86a2fb50a3f2745b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9aaabf8aa725651f3e77826d86a2fb50a3f2745b"}], "stats": {"total": 80, "additions": 54, "deletions": 26}, "files": [{"sha": "447484b987991e11b0a00ba22a0d52de39ad40a9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52c27e16fdfee3fdda117195c05768e27f37cc8e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52c27e16fdfee3fdda117195c05768e27f37cc8e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=52c27e16fdfee3fdda117195c05768e27f37cc8e", "patch": "@@ -1,3 +1,9 @@\n+2004-07-03  Steven Bosscher  <stevenb@suse.de>\n+\n+\t* config/sh/sh.c (sh_use_dfa_interface): Add TARGET_SH1.\n+\t* config/sh/sh.md: Convert the SH1 pipeline description to\n+\ta DFA model.\n+\n 2004-07-02  Zack Weinberg  <zack@codesourcery.com>\n \n \t* c-decl.c (struct c_binding): Remove contour field; add"}, {"sha": "d996ec401791d37d3bb7c40a73e2675bd53ca231", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52c27e16fdfee3fdda117195c05768e27f37cc8e/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52c27e16fdfee3fdda117195c05768e27f37cc8e/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=52c27e16fdfee3fdda117195c05768e27f37cc8e", "patch": "@@ -8488,11 +8488,13 @@ sh_pr_n_sets (void)\n }\n \n /* This Function returns nonzero if the DFA based scheduler interface\n-   is to be used.  At present this is supported for the SH4 only.  */\n+   is to be used.  At present this is only supported properly for the SH4.\n+   For the SH1 the current DFA model is just the converted form of the old\n+   pipeline model description.  */\n static int\n sh_use_dfa_interface (void)\n {\n-  if (TARGET_HARD_SH4)\n+  if (TARGET_SH1)\n     return 1;\n   else\n     return 0;"}, {"sha": "ba7d9bdb46fa7bdb7e92c65ecaa576c8358cbf41", "filename": "gcc/config/sh/sh.md", "status": "modified", "additions": 44, "deletions": 24, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52c27e16fdfee3fdda117195c05768e27f37cc8e/gcc%2Fconfig%2Fsh%2Fsh.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52c27e16fdfee3fdda117195c05768e27f37cc8e/gcc%2Fconfig%2Fsh%2Fsh.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.md?ref=52c27e16fdfee3fdda117195c05768e27f37cc8e", "patch": "@@ -422,68 +422,88 @@\n \t\t\t (const_int 4)\n \t\t\t (const_int 2))))\n \n-;; (define_function_unit {name} {num-units} {n-users} {test}\n-;;                       {ready-delay} {issue-delay} [{conflict-list}])\n-\n ;; Load and store instructions save a cycle if they are aligned on a\n ;; four byte boundary.  Using a function unit for stores encourages\n ;; gcc to separate load and store instructions by one instruction,\n ;; which makes it more likely that the linker will be able to word\n ;; align them when relaxing.\n \n+;; SH-1 scheduling\n+\n+(define_automaton \"sh1\")\n+(define_cpu_unit \"sh1memory,sh1int,sh1mpy,sh1fp\" \"sh1\")\n+\n ;; Loads have a latency of two.\n ;; However, call insns can have a delay slot, so that we want one more\n ;; insn to be scheduled between the load of the function address and the call.\n ;; This is equivalent to a latency of three.\n-;; We cannot use a conflict list for this, because we need to distinguish\n-;; between the actual call address and the function arguments.\n ;; ADJUST_COST can only properly handle reductions of the cost, so we\n ;; use a latency of three here.\n ;; We only do this for SImode loads of general registers, to make the work\n ;; for ADJUST_COST easier.\n-(define_function_unit \"memory\" 1 0\n+(define_insn_reservation \"sh1_load_si\" 3\n   (and (eq_attr \"pipe_model\" \"sh1\")\n        (eq_attr \"type\" \"load_si,pcload_si\"))\n-  3 2)\n-(define_function_unit \"memory\" 1 0\n+  \"sh1memory*2\")\n+\n+(define_insn_reservation \"sh1_load_store\" 2\n   (and (eq_attr \"pipe_model\" \"sh1\")\n        (eq_attr \"type\" \"load,pcload,pload,store,pstore\"))\n-  2 2)\n+  \"sh1memory*2\")\n \n-(define_function_unit \"int\"    1 0\n-  (and (eq_attr \"pipe_model\" \"sh1\") (eq_attr \"type\" \"arith3,arith3b\")) 3 3)\n+(define_insn_reservation \"sh1_arith3\" 3\n+  (and (eq_attr \"pipe_model\" \"sh1\")\n+       (eq_attr \"type\" \"arith3,arith3b\"))\n+  \"sh1int*3\")\n \n-(define_function_unit \"int\"    1 0\n-  (and (eq_attr \"pipe_model\" \"sh1\") (eq_attr \"type\" \"dyn_shift\")) 2 2)\n+(define_insn_reservation \"sh1_dyn_shift\" 2\n+  (and (eq_attr \"pipe_model\" \"sh1\")\n+       (eq_attr \"type\" \"dyn_shift\"))\n+  \"sh1int*2\")\n \n-(define_function_unit \"int\"    1 0\n-  (and (eq_attr \"pipe_model\" \"sh1\") (eq_attr \"type\" \"!arith3,arith3b,dyn_shift\")) 1 1)\n+(define_insn_reservation \"sh1_int\" 1\n+  (and (eq_attr \"pipe_model\" \"sh1\")\n+       (eq_attr \"type\" \"!arith3,arith3b,dyn_shift\"))\n+  \"sh1int\")\n \n ;; ??? These are approximations.\n-(define_function_unit \"mpy\"    1 0\n-  (and (eq_attr \"pipe_model\" \"sh1\") (eq_attr \"type\" \"smpy\")) 2 2)\n-(define_function_unit \"mpy\"    1 0\n-  (and (eq_attr \"pipe_model\" \"sh1\") (eq_attr \"type\" \"dmpy\")) 3 3)\n+(define_insn_reservation \"sh1_smpy\" 2\n+  (and (eq_attr \"pipe_model\" \"sh1\")\n+       (eq_attr \"type\" \"smpy\"))\n+  \"sh1mpy*2\")\n \n-(define_function_unit \"fp\"     1 0\n-  (and (eq_attr \"pipe_model\" \"sh1\") (eq_attr \"type\" \"fp,fmove\")) 2 1)\n-(define_function_unit \"fp\"     1 0\n-  (and (eq_attr \"pipe_model\" \"sh1\") (eq_attr \"type\" \"fdiv\")) 13 12)\n+(define_insn_reservation \"sh1_dmpy\" 3\n+  (and (eq_attr \"pipe_model\" \"sh1\")\n+       (eq_attr \"type\" \"dmpy\"))\n+  \"sh1mpy*3\")\n \n+(define_insn_reservation \"sh1_fp\" 2\n+  (and (eq_attr \"pipe_model\" \"sh1\")\n+       (eq_attr \"type\" \"fp,fmove\"))\n+  \"sh1fp\")\n+\n+(define_insn_reservation \"sh1_fdiv\" 13\n+  (and (eq_attr \"pipe_model\" \"sh1\")\n+       (eq_attr \"type\" \"fdiv\"))\n+  \"sh1fp*12\")\n \n ;; SH-5 SHmedia scheduling\n ;; When executing SHmedia code, the SH-5 is a fairly straightforward\n ;; single-issue machine.  It has four pipelines, the branch unit (br),\n ;; the integer and multimedia unit (imu), the load/store unit (lsu), and\n ;; the floating point unit (fpu).\n-;; Here model the instructions with a latency greater than one cycle.\n+;;\n+;; (define_function_unit {name} {num-units} {n-users} {test}\n+;;                       {ready-delay} {issue-delay} [{conflict-list}])\n \n ;; Every instruction on SH-5 occupies the issue resource for at least one\n ;; cycle.\n (define_function_unit \"sh5issue\" 1 0\n   (and (eq_attr \"pipe_model\" \"sh5media\")\n        (eq_attr \"type\" \"!pt_media,ptabs_media,invalidate_line_media,dmpy_media,load_media,fload_media,fcmp_media,fmove_media,fparith_media,dfparith_media,fpconv_media,dfpconv_media,dfmul_media,store_media,fstore_media,mcmp_media,mac_media,d2mpy_media,atrans_media,ustore_media\")) 1 1)\n \n+;; Here model the instructions with a latency greater than one cycle.\n+\n ;; Specify the various types of instruction which have latency > 1\n (define_function_unit \"sh5issue\" 1 0\n   (and (eq_attr \"pipe_model\" \"sh5media\")"}]}