{"sha": "95c9c1c0dcbe4b9bfd9ff8fcdf44d799ffcf6275", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTVjOWMxYzBkY2JlNGI5YmZkOWZmOGZjZGY0NGQ3OTlmZmNmNjI3NQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2020-06-23T15:17:50Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2020-06-23T15:20:27Z"}, "message": "Minor adjustment in assignment case\n\ngcc/ada/ChangeLog:\n\t* gcc-interface/trans.c (gnat_to_gnu) <N_Assignment_Statement>: Do\n\tnot test Is_Bit_Packed_Array in the memset path.", "tree": {"sha": "5561797314d87d38c331274ac6255cc1e0d584e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5561797314d87d38c331274ac6255cc1e0d584e9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/95c9c1c0dcbe4b9bfd9ff8fcdf44d799ffcf6275", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95c9c1c0dcbe4b9bfd9ff8fcdf44d799ffcf6275", "html_url": "https://github.com/Rust-GCC/gccrs/commit/95c9c1c0dcbe4b9bfd9ff8fcdf44d799ffcf6275", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95c9c1c0dcbe4b9bfd9ff8fcdf44d799ffcf6275/comments", "author": null, "committer": null, "parents": [{"sha": "5f426554fd804d65509875d706d8b8bc3a48393b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f426554fd804d65509875d706d8b8bc3a48393b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f426554fd804d65509875d706d8b8bc3a48393b"}], "stats": {"total": 7, "additions": 3, "deletions": 4}, "files": [{"sha": "a64b6d00d00e910bb7ea64eb7c7a14333472db7e", "filename": "gcc/ada/gcc-interface/trans.c", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95c9c1c0dcbe4b9bfd9ff8fcdf44d799ffcf6275/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95c9c1c0dcbe4b9bfd9ff8fcdf44d799ffcf6275/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Ftrans.c?ref=95c9c1c0dcbe4b9bfd9ff8fcdf44d799ffcf6275", "patch": "@@ -7282,10 +7282,8 @@ gnat_to_gnu (Node_Id gnat_node)\n \t      : gnat_expr;\n \t  const Entity_Id gnat_type\n \t    = Underlying_Type (Etype (Name (gnat_node)));\n-\t  const bool regular_array_type_p\n-\t    = Is_Array_Type (gnat_type) && !Is_Bit_Packed_Array (gnat_type);\n \t  const bool use_memset_p\n-\t    = regular_array_type_p\n+\t    = Is_Array_Type (gnat_type)\n \t      && Nkind (gnat_inner) == N_Aggregate\n \t      && Is_Single_Aggregate (gnat_inner);\n \n@@ -7356,7 +7354,8 @@ gnat_to_gnu (Node_Id gnat_node)\n \t     not completely disjoint, play safe and use memmove.  But don't do\n \t     it for a bit-packed array as it might not be byte-aligned.  */\n \t  if (TREE_CODE (gnu_result) == MODIFY_EXPR\n-\t      && regular_array_type_p\n+\t      && Is_Array_Type (gnat_type)\n+\t      && !Is_Bit_Packed_Array (gnat_type)\n \t      && !(Forwards_OK (gnat_node) && Backwards_OK (gnat_node)))\n \t    {\n \t      tree to = TREE_OPERAND (gnu_result, 0);"}]}