{"sha": "c0e18b82d02f04edf9b909a75b93092582480fff", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzBlMThiODJkMDJmMDRlZGY5YjkwOWE3NWI5MzA5MjU4MjQ4MGZmZg==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2009-08-12T09:03:38Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2009-08-12T09:03:38Z"}, "message": "re PR fortran/41034 (Wrongly rejected proc pointer assignment with CDECL (compiler-directive_1.f90))\n\n2009-08-12  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/41034\n        * symbol.c (gfc_copy_attr): Merge bits instead of replace\n        bits in gfc_copy_attr.\n        * gfc_check_pointer_assign (gfc_check_pointer_assign):\n        Initialize ext_attr bits by zero.\n\nFrom-SVN: r150678", "tree": {"sha": "b5306121797a925d9c7fbb3c6d5fe0d288dd6ebc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b5306121797a925d9c7fbb3c6d5fe0d288dd6ebc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c0e18b82d02f04edf9b909a75b93092582480fff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0e18b82d02f04edf9b909a75b93092582480fff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0e18b82d02f04edf9b909a75b93092582480fff", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0e18b82d02f04edf9b909a75b93092582480fff/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "64754ed578905416836c748cf442eb380996d980", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64754ed578905416836c748cf442eb380996d980", "html_url": "https://github.com/Rust-GCC/gccrs/commit/64754ed578905416836c748cf442eb380996d980"}], "stats": {"total": 29, "additions": 19, "deletions": 10}, "files": [{"sha": "33e0c349846a326623853b0146418b31a3ee5446", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0e18b82d02f04edf9b909a75b93092582480fff/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0e18b82d02f04edf9b909a75b93092582480fff/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=c0e18b82d02f04edf9b909a75b93092582480fff", "patch": "@@ -1,3 +1,11 @@\n+2009-08-12  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/41034\n+\t* symbol.c (gfc_copy_attr): Merge bits instead of replace\n+\tbits in gfc_copy_attr.\n+\t* gfc_check_pointer_assign (gfc_check_pointer_assign):\n+\tInitialize ext_attr bits by zero.\n+\n 2009-08-11  Richard Guenther  <rguenther@suse.de>\n \n \t* trans-types.c (gfc_get_derived_type): Do not clear TYPE_CANONICAL."}, {"sha": "b8d54e7dea17c61af80b33d3333d5bc844b31c11", "filename": "gcc/fortran/expr.c", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0e18b82d02f04edf9b909a75b93092582480fff/gcc%2Ffortran%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0e18b82d02f04edf9b909a75b93092582480fff/gcc%2Ffortran%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fexpr.c?ref=c0e18b82d02f04edf9b909a75b93092582480fff", "patch": "@@ -3192,16 +3192,15 @@ gfc_check_pointer_assign (gfc_expr *lvalue, gfc_expr *rvalue)\n \t  && lvalue->symtree->n.sym->attr.ext_attr\n \t       != rvalue->symtree->n.sym->attr.ext_attr)\n \t{\n-\t  symbol_attribute cdecl, stdcall, fastcall;\n-\t  unsigned calls;\n+\t  symbol_attribute calls;\n \n-\t  gfc_add_ext_attribute (&cdecl, EXT_ATTR_CDECL, NULL);\n-\t  gfc_add_ext_attribute (&stdcall, EXT_ATTR_STDCALL, NULL);\n-\t  gfc_add_ext_attribute (&fastcall, EXT_ATTR_FASTCALL, NULL);\n-\t  calls = cdecl.ext_attr | stdcall.ext_attr | fastcall.ext_attr;\n+\t  calls.ext_attr = 0;\n+\t  gfc_add_ext_attribute (&calls, EXT_ATTR_CDECL, NULL);\n+\t  gfc_add_ext_attribute (&calls, EXT_ATTR_STDCALL, NULL);\n+\t  gfc_add_ext_attribute (&calls, EXT_ATTR_FASTCALL, NULL);\n \n-\t  if ((calls & lvalue->symtree->n.sym->attr.ext_attr)\n-\t      != (calls & rvalue->symtree->n.sym->attr.ext_attr))\n+\t  if ((calls.ext_attr & lvalue->symtree->n.sym->attr.ext_attr)\n+\t      != (calls.ext_attr & rvalue->symtree->n.sym->attr.ext_attr))\n \t    {\n \t      gfc_error (\"Mismatch in the procedure pointer assignment \"\n \t\t\t \"at %L: mismatch in the calling convention\","}, {"sha": "27f378c1b18e0bc0141119c0d7d2974d78d15bb7", "filename": "gcc/fortran/symbol.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0e18b82d02f04edf9b909a75b93092582480fff/gcc%2Ffortran%2Fsymbol.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0e18b82d02f04edf9b909a75b93092582480fff/gcc%2Ffortran%2Fsymbol.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fsymbol.c?ref=c0e18b82d02f04edf9b909a75b93092582480fff", "patch": "@@ -1641,7 +1641,9 @@ gfc_copy_attr (symbol_attribute *dest, symbol_attribute *src, locus *where)\n {\n   int is_proc_lang_bind_spec;\n   \n-  dest->ext_attr = src->ext_attr;\n+  /* In line with the other attributes, we only add bits but do not remove\n+     them; cf. also PR 41034.  */\n+  dest->ext_attr |= src->ext_attr;\n \n   if (src->allocatable && gfc_add_allocatable (dest, where) == FAILURE)\n     goto fail;\n@@ -1712,7 +1714,7 @@ gfc_copy_attr (symbol_attribute *dest, symbol_attribute *src, locus *where)\n   if (src->cray_pointer && gfc_add_cray_pointer (dest, where) == FAILURE)\n     goto fail;\n   if (src->cray_pointee && gfc_add_cray_pointee (dest, where) == FAILURE)\n-    goto fail;    \n+    goto fail;\n \n   is_proc_lang_bind_spec = (src->flavor == FL_PROCEDURE ? 1 : 0);\n   if (src->is_bind_c"}]}