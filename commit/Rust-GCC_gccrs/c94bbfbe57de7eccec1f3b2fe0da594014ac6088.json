{"sha": "c94bbfbe57de7eccec1f3b2fe0da594014ac6088", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzk0YmJmYmU1N2RlN2VjY2VjMWYzYjJmZTBkYTU5NDAxNGFjNjA4OA==", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2020-04-16T09:03:49Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-06-18T09:08:22Z"}, "message": "[Ada] Cleanups in code related to static expressions\n\n2020-06-18  Piotr Trojanek  <trojanek@adacore.com>\n\ngcc/ada/\n\n\t* checks.adb, sem_ch3.adb: Minor refactorings.\n\t* sem_eval.adb (Eval_Qualified_Expression): Fix reference to RM\n\trule in comment; only set a local variable Hex in the branch\n\twhere it is used.", "tree": {"sha": "ca2a2df9540496bd9cbfcd7fc09e76964c1bc9d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ca2a2df9540496bd9cbfcd7fc09e76964c1bc9d7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c94bbfbe57de7eccec1f3b2fe0da594014ac6088", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c94bbfbe57de7eccec1f3b2fe0da594014ac6088", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c94bbfbe57de7eccec1f3b2fe0da594014ac6088", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c94bbfbe57de7eccec1f3b2fe0da594014ac6088/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0f7b6a2eb31828b17bba64423249a61266090d5d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f7b6a2eb31828b17bba64423249a61266090d5d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f7b6a2eb31828b17bba64423249a61266090d5d"}], "stats": {"total": 29, "additions": 14, "deletions": 15}, "files": [{"sha": "51b73f992a6d71c11bcfb991095107773cf0c8dd", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c94bbfbe57de7eccec1f3b2fe0da594014ac6088/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c94bbfbe57de7eccec1f3b2fe0da594014ac6088/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=c94bbfbe57de7eccec1f3b2fe0da594014ac6088", "patch": "@@ -6814,9 +6814,9 @@ package body Checks is\n \n       else\n          declare\n-            A_Idx   : Node_Id := Empty;\n+            A_Idx   : Node_Id;\n             A_Range : Node_Id;\n-            Ind     : Nat;\n+            Ind     : Pos;\n             Num     : List_Id;\n             Range_N : Node_Id;\n \n@@ -6839,9 +6839,7 @@ package body Checks is\n                   if Nkind (A_Idx) = N_Range then\n                      A_Range := A_Idx;\n \n-                  elsif Nkind (A_Idx) = N_Identifier\n-                    or else Nkind (A_Idx) = N_Expanded_Name\n-                  then\n+                  elsif Nkind_In (A_Idx, N_Identifier, N_Expanded_Name) then\n                      A_Range := Scalar_Range (Entity (A_Idx));\n \n                   else pragma Assert (Nkind (A_Idx) = N_Subtype_Indication);"}, {"sha": "04060baa11e25128ca7f4651232ac15857711928", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c94bbfbe57de7eccec1f3b2fe0da594014ac6088/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c94bbfbe57de7eccec1f3b2fe0da594014ac6088/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=c94bbfbe57de7eccec1f3b2fe0da594014ac6088", "patch": "@@ -4204,7 +4204,7 @@ package body Sem_Ch3 is\n          Analyze (E);\n \n          --  In case of errors detected in the analysis of the expression,\n-         --  decorate it with the expected type to avoid cascaded errors\n+         --  decorate it with the expected type to avoid cascaded errors.\n \n          if No (Etype (E)) then\n             Set_Etype (E, T);"}, {"sha": "66710a452fa2a28263dd4b78a125e47148f06963", "filename": "gcc/ada/sem_eval.adb", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c94bbfbe57de7eccec1f3b2fe0da594014ac6088/gcc%2Fada%2Fsem_eval.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c94bbfbe57de7eccec1f3b2fe0da594014ac6088/gcc%2Fada%2Fsem_eval.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_eval.adb?ref=c94bbfbe57de7eccec1f3b2fe0da594014ac6088", "patch": "@@ -2704,7 +2704,7 @@ package body Sem_Eval is\n \n       --  Similarly if the indexed component appears as the prefix of an\n       --  attribute we don't want to evaluate it, because at least for\n-      --  some cases of attributes we need the identify (e.g. Access, Size)\n+      --  some cases of attributes we need the identify (e.g. Access, Size).\n \n       elsif Nkind (Parent (N)) = N_Attribute_Reference then\n          return;\n@@ -2868,7 +2868,7 @@ package body Sem_Eval is\n       --  and misleading warnings.\n \n       if (Nkind_In (Par, N_Case_Expression_Alternative, N_If_Expression)\n-           or else Nkind (Parent (N)) not in N_Subexpr)\n+           or else Nkind (Par) not in N_Subexpr)\n         and then (not Nkind_In (Par, N_Case_Expression_Alternative,\n                                      N_If_Expression)\n                    or else Comes_From_Source (N))\n@@ -3205,7 +3205,7 @@ package body Sem_Eval is\n    -------------------------------\n \n    --  A qualified expression is potentially static if its subtype mark denotes\n-   --  a static subtype and its expression is potentially static (RM 4.9 (11)).\n+   --  a static subtype and its expression is potentially static (RM 4.9 (10)).\n \n    procedure Eval_Qualified_Expression (N : Node_Id) is\n       Operand     : constant Node_Id   := Expression (N);\n@@ -3228,7 +3228,7 @@ package body Sem_Eval is\n       then\n          Check_Non_Static_Context (Operand);\n \n-         --  If operand is known to raise constraint_error, set the flag on the\n+         --  If operand is known to raise Constraint_Error, set the flag on the\n          --  expression so it does not get optimized away.\n \n          if Nkind (Operand) = N_Raise_Constraint_Error then\n@@ -3252,14 +3252,15 @@ package body Sem_Eval is\n          return;\n       end if;\n \n-      --  Here we will fold, save Print_In_Hex indication\n-\n-      Hex := Nkind (Operand) = N_Integer_Literal\n-               and then Print_In_Hex (Operand);\n-\n       --  Fold the result of qualification\n \n       if Is_Discrete_Type (Target_Type) then\n+\n+         --  Save Print_In_Hex indication\n+\n+         Hex := Nkind (Operand) = N_Integer_Literal\n+                  and then Print_In_Hex (Operand);\n+\n          Fold_Uint (N, Expr_Value (Operand), Stat);\n \n          --  Preserve Print_In_Hex indication"}]}