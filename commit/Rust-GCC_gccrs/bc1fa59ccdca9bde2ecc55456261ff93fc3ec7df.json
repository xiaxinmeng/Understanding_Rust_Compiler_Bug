{"sha": "bc1fa59ccdca9bde2ecc55456261ff93fc3ec7df", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmMxZmE1OWNjZGNhOWJkZTJlY2M1NTQ1NjI2MWZmOTNmYzNlYzdkZg==", "commit": {"author": {"name": "Ulrich Weigand", "email": "uweigand@de.ibm.com", "date": "2002-01-08T13:11:23Z"}, "committer": {"name": "Ulrich Weigand", "email": "uweigand@gcc.gnu.org", "date": "2002-01-08T13:11:23Z"}, "message": "linux.h (ASM_OUTPUT_LABELREF): Remove.\n\n\t* config/s390/linux.h (ASM_OUTPUT_LABELREF): Remove.\n\t* config/s390/s390.c (s390_emit_epilog): Add REG_FRAME_RELATED_EXPR\n\tto insn adjusting stack/frame pointer.\n\t* config/s390/s390.md (reload_la_64, reload_la_31): Do not\n\taccept operands that cause the insn to be non-splittable.\n\nFrom-SVN: r48643", "tree": {"sha": "6c185c391fc86cc3eb147049489c6c8e688c88bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6c185c391fc86cc3eb147049489c6c8e688c88bb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bc1fa59ccdca9bde2ecc55456261ff93fc3ec7df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc1fa59ccdca9bde2ecc55456261ff93fc3ec7df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc1fa59ccdca9bde2ecc55456261ff93fc3ec7df", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc1fa59ccdca9bde2ecc55456261ff93fc3ec7df/comments", "author": null, "committer": null, "parents": [{"sha": "acd8ea2ae08a0c2fe3a72e647b0d3e80a9681c3f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/acd8ea2ae08a0c2fe3a72e647b0d3e80a9681c3f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/acd8ea2ae08a0c2fe3a72e647b0d3e80a9681c3f"}], "stats": {"total": 30, "additions": 23, "deletions": 7}, "files": [{"sha": "bf21f7b555ee3de2be54a8b3a87e96e54cbf9f72", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc1fa59ccdca9bde2ecc55456261ff93fc3ec7df/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc1fa59ccdca9bde2ecc55456261ff93fc3ec7df/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bc1fa59ccdca9bde2ecc55456261ff93fc3ec7df", "patch": "@@ -1,3 +1,11 @@\n+2002-01-08  Ulrich Weigand  <uweigand@de.ibm.com>\n+\n+\t* config/s390/linux.h (ASM_OUTPUT_LABELREF): Remove.\n+\t* config/s390/s390.c (s390_emit_epilog): Add REG_FRAME_RELATED_EXPR\n+\tto insn adjusting stack/frame pointer.\n+\t* config/s390/s390.md (reload_la_64, reload_la_31): Do not \n+\taccept operands that cause the insn to be non-splittable.\n+\n 2002-01-08  Graham Stott  <grahams@redhat.com>\n \n \t* c-tree.h (C_TYPE_FIELDS_READONLY): Uppercase macro parameter."}, {"sha": "55c602edb24ff608e352b94d895cda34095fe6a2", "filename": "gcc/config/s390/linux.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc1fa59ccdca9bde2ecc55456261ff93fc3ec7df/gcc%2Fconfig%2Fs390%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc1fa59ccdca9bde2ecc55456261ff93fc3ec7df/gcc%2Fconfig%2Fs390%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Flinux.h?ref=bc1fa59ccdca9bde2ecc55456261ff93fc3ec7df", "patch": "@@ -82,9 +82,6 @@ Boston, MA 02111-1307, USA.  */\n /* Prefix for internally generated assembler labels.  */\n #define LPREFIX \".L\"\n \n-#define ASM_OUTPUT_LABELREF(FILE, NAME) \\\n-  fprintf (FILE, \"%s\", NAME);  \n-\n \n /* This is how to output the definition of a user-level label named NAME,\n    such as the label on a static function or variable NAME.  */"}, {"sha": "83de4da2cc1a3eacc50069e1cfae018f7adcfe57", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc1fa59ccdca9bde2ecc55456261ff93fc3ec7df/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc1fa59ccdca9bde2ecc55456261ff93fc3ec7df/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=bc1fa59ccdca9bde2ecc55456261ff93fc3ec7df", "patch": "@@ -3078,6 +3078,12 @@ s390_emit_epilogue ()\n \n       insn = emit_insn (gen_add2_insn (frame_pointer, frame_off));\n       RTX_FRAME_RELATED_P (insn) = 1;\n+      REG_NOTES (insn) = \n+\tgen_rtx_EXPR_LIST (REG_FRAME_RELATED_EXPR,\n+\t\t\t   gen_rtx_SET (VOIDmode, frame_pointer,\n+\t\t\t\t   gen_rtx_PLUS (Pmode, frame_pointer,\n+\t\t\t           GEN_INT (frame.frame_size - offset))),\n+\t\t\t   REG_NOTES (insn));\n     }\n \n   /* Restore call saved fprs.  */"}, {"sha": "31822c9413ca2e6085ec1cb31632fcca130450f2", "filename": "gcc/config/s390/s390.md", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc1fa59ccdca9bde2ecc55456261ff93fc3ec7df/gcc%2Fconfig%2Fs390%2Fs390.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc1fa59ccdca9bde2ecc55456261ff93fc3ec7df/gcc%2Fconfig%2Fs390%2Fs390.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.md?ref=bc1fa59ccdca9bde2ecc55456261ff93fc3ec7df", "patch": "@@ -3153,7 +3153,10 @@\n   [(set (match_operand:DI 0 \"register_operand\" \"=d\")\n         (plus:DI (match_operand:DI 1 \"general_operand\" \"g\")\n                  (match_operand:DI 2 \"general_operand\" \"g\")))]\n-  \"TARGET_64BIT && reload_in_progress\"\n+  \"TARGET_64BIT && reload_in_progress\n+   && !address_operand (gen_rtx_PLUS (DImode, operands[1], operands[2]), QImode)\n+   && !rtx_equal_p (operands[0], operands[1])\n+   && !rtx_equal_p (operands[0], operands[2])\"\n   \"#\")\n \n (define_split\n@@ -3173,7 +3176,6 @@\n     operands[1] = force_const_mem (DImode, operands[1]);\n }\")\n \n-\n (define_split\n   [(set (match_operand:DI 0 \"register_operand\" \"\")\n         (plus:DI (match_operand:DI 1 \"register_operand\" \"\")\n@@ -3297,7 +3299,10 @@\n   [(set (match_operand:SI 0 \"register_operand\" \"=d\")\n         (plus:SI (match_operand:SI 1 \"general_operand\" \"g\")\n                  (match_operand:SI 2 \"general_operand\" \"g\")))]\n-  \"reload_in_progress\"\n+  \"reload_in_progress\n+   && !address_operand (gen_rtx_PLUS (SImode, operands[1], operands[2]), QImode)\n+   && !rtx_equal_p (operands[0], operands[1])\n+   && !rtx_equal_p (operands[0], operands[2])\"\n   \"#\")\n \n (define_split\n@@ -3333,7 +3338,7 @@\n       && !legitimate_reload_constant_p (operands[2]))\n     operands[2] = force_const_mem (SImode, operands[2]);\n }\")\n- \n+\n \n ;\n ; addhi3 instruction pattern(s)."}]}