{"sha": "061bc17d25f9e54b0a8434a07a19e1c3fcf3a77c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDYxYmMxN2QyNWY5ZTU0YjBhODQzNGEwN2ExOWUxYzNmY2YzYTc3Yw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-10-29T10:41:40Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-10-29T10:41:40Z"}, "message": "[multiple changes]\n\n2012-10-29  Vincent Celier  <celier@adacore.com>\n\n\t* projects.texi: Clarify documentation of attribute\n\tIgnore_Source_Sub_Dirs.\n\n2012-10-29  Robert Dewar  <dewar@adacore.com>\n\n\t* g-sechas.adb, g-sechas.ads, exp_ch9.adb, bindgen.adb, exp_dbug.adb,\n\texp_dbug.ads: Minor reformatting.\n\nFrom-SVN: r192922", "tree": {"sha": "bf7a29ce1d1d04c64b0ab6e48d3ae1828af6a531", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bf7a29ce1d1d04c64b0ab6e48d3ae1828af6a531"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/061bc17d25f9e54b0a8434a07a19e1c3fcf3a77c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/061bc17d25f9e54b0a8434a07a19e1c3fcf3a77c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/061bc17d25f9e54b0a8434a07a19e1c3fcf3a77c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/061bc17d25f9e54b0a8434a07a19e1c3fcf3a77c/comments", "author": null, "committer": null, "parents": [{"sha": "59a9c170156ef6279a16711b3f74cc8e3ae42420", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59a9c170156ef6279a16711b3f74cc8e3ae42420", "html_url": "https://github.com/Rust-GCC/gccrs/commit/59a9c170156ef6279a16711b3f74cc8e3ae42420"}], "stats": {"total": 100, "additions": 59, "deletions": 41}, "files": [{"sha": "cf29ed3021a6952680e5a57bc59bb234eb1dae56", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/061bc17d25f9e54b0a8434a07a19e1c3fcf3a77c/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/061bc17d25f9e54b0a8434a07a19e1c3fcf3a77c/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=061bc17d25f9e54b0a8434a07a19e1c3fcf3a77c", "patch": "@@ -1,3 +1,13 @@\n+2012-10-29  Vincent Celier  <celier@adacore.com>\n+\n+\t* projects.texi: Clarify documentation of attribute\n+\tIgnore_Source_Sub_Dirs.\n+\n+2012-10-29  Robert Dewar  <dewar@adacore.com>\n+\n+\t* g-sechas.adb, g-sechas.ads, exp_ch9.adb, bindgen.adb, exp_dbug.adb,\n+\texp_dbug.ads: Minor reformatting.\n+\n 2012-10-29  Pascal Obry  <obry@adacore.com>\n \n \t* g-sechas.adb, g-sechas.ads: (Binary_Message_Digest): New subtype."}, {"sha": "f29e2dad302ef1c68bac2d6abcb85848be557c81", "filename": "gcc/ada/bindgen.adb", "status": "modified", "additions": 17, "deletions": 13, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/061bc17d25f9e54b0a8434a07a19e1c3fcf3a77c/gcc%2Fada%2Fbindgen.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/061bc17d25f9e54b0a8434a07a19e1c3fcf3a77c/gcc%2Fada%2Fbindgen.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindgen.adb?ref=061bc17d25f9e54b0a8434a07a19e1c3fcf3a77c", "patch": "@@ -65,18 +65,18 @@ package body Bindgen is\n \n    System_Restrictions_Used : Boolean := False;\n    --  Flag indicating whether the unit System.Restrictions is in the closure\n-   --  of the partition. This is set by Resolve_Binder_Options, and\n-   --  is used to determine whether or not to initialize the restrictions\n-   --  information in the body of the binder generated file (we do not want\n-   --  to do this unconditionally, since it drags in the System.Restrictions\n-   --  unit unconditionally, which is unpleasand, especially for ZFP etc.)\n+   --  of the partition. This is set by Resolve_Binder_Options, and is used\n+   --  to determine whether or not to initialize the restrictions information\n+   --  in the body of the binder generated file (we do not want to do this\n+   --  unconditionally, since it drags in the System.Restrictions unit\n+   --  unconditionally, which is unpleasand, especially for ZFP etc.)\n \n    Dispatching_Domains_Used : Boolean := False;\n    --  Flag indicating whether multiprocessor dispatching domains are used in\n-   --  the closure of the partition. This is set by Resolve_Binder_Options,\n-   --  and is used to call the routine to disallow the creation of new\n-   --  dispatching domains just before calling the main procedure from the\n-   --  environment task.\n+   --  the closure of the partition. This is set by Resolve_Binder_Options, and\n+   --  is used to call the routine to disallow the creation of new dispatching\n+   --  domains just before calling the main procedure from the environment\n+   --  task.\n \n    System_Tasking_Restricted_Stages_Used : Boolean := False;\n    --  Flag indicating whether the unit System.Tasking.Restricted.Stages is in\n@@ -2814,10 +2814,11 @@ package body Bindgen is\n    ----------------------------\n \n    procedure Resolve_Binder_Options is\n+\n       procedure Check_Package (Var : in out Boolean; Name : String);\n-      --  Set Var to true iff the current identifier in Namet is Name.\n-      --  Do nothing if it doesn't match. This procedure is just an helper\n-      --  to avoid to explicitely deal with length.\n+      --  Set Var to true iff the current identifier in Namet is Name. Do\n+      --  nothing if it doesn't match. This procedure is just an helper to\n+      --  avoid to explicitely deal with length.\n \n       -------------------\n       -- Check_Package --\n@@ -2831,13 +2832,16 @@ package body Bindgen is\n             Var := True;\n          end if;\n       end Check_Package;\n+\n+   --  Start of processing for Check_Package\n+\n    begin\n       for E in Elab_Order.First .. Elab_Order.Last loop\n          Get_Name_String (Units.Table (Elab_Order.Table (E)).Uname);\n \n          --  This is not a perfect approach, but is the current protocol\n          --  between the run-time and the binder to indicate that tasking is\n-         --  used: system.os_interface should always be used by any tasking\n+         --  used: System.OS_Interface should always be used by any tasking\n          --  application.\n \n          Check_Package (With_GNARL, \"system.os_interface%s\");"}, {"sha": "6e370f4d8717d38ccf00ff5ff62e1eed051335f7", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/061bc17d25f9e54b0a8434a07a19e1c3fcf3a77c/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/061bc17d25f9e54b0a8434a07a19e1c3fcf3a77c/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=061bc17d25f9e54b0a8434a07a19e1c3fcf3a77c", "patch": "@@ -13912,11 +13912,10 @@ package body Exp_Ch9 is\n           Prefix => Make_Identifier (Loc, New_External_Name (Tnam, 'E')),\n           Attribute_Name => Name_Unchecked_Access));\n \n-      if not Restricted_Profile then\n-         --  Chain parameter. This is a reference to the _Chain parameter of\n-         --  the initialization procedure. There is no chain in restricted\n-         --  profile.\n+      --  Chain parameter. This is a reference to the Chain parameter of the\n+      --  initialization procedure. There is no chain in restricted profile.\n \n+      if not Restricted_Profile then\n          Append_To (Args, Make_Identifier (Loc, Name_uChain));\n       end if;\n "}, {"sha": "b1db585934683dff446197be80af544d21d28b01", "filename": "gcc/ada/exp_dbug.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/061bc17d25f9e54b0a8434a07a19e1c3fcf3a77c/gcc%2Fada%2Fexp_dbug.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/061bc17d25f9e54b0a8434a07a19e1c3fcf3a77c/gcc%2Fada%2Fexp_dbug.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dbug.adb?ref=061bc17d25f9e54b0a8434a07a19e1c3fcf3a77c", "patch": "@@ -902,9 +902,9 @@ package body Exp_Dbug is\n       end if;\n    end Get_Variant_Encoding;\n \n-   ------------------------------------------\n-   --  Build_Subprogram_Instance_Renamings --\n-   ------------------------------------------\n+   -----------------------------------------\n+   -- Build_Subprogram_Instance_Renamings --\n+   -----------------------------------------\n \n    procedure Build_Subprogram_Instance_Renamings\n      (N       : Node_Id;"}, {"sha": "86099f66f75f9f392dd959822e0623adcbb22aee", "filename": "gcc/ada/exp_dbug.ads", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/061bc17d25f9e54b0a8434a07a19e1c3fcf3a77c/gcc%2Fada%2Fexp_dbug.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/061bc17d25f9e54b0a8434a07a19e1c3fcf3a77c/gcc%2Fada%2Fexp_dbug.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dbug.ads?ref=061bc17d25f9e54b0a8434a07a19e1c3fcf3a77c", "patch": "@@ -1447,15 +1447,14 @@ package Exp_Dbug is\n    -----------------------------------------------\n \n    procedure Build_Subprogram_Instance_Renamings\n-     (N      : Node_Id;\n-     Wrapper : Entity_Id);\n-\n+     (N       : Node_Id;\n+      Wrapper : Entity_Id);\n    --  The debugger has difficulties in recovering the value of actuals of an\n    --  elementary type, from within the body of a subprogram instantiation.\n    --  This is because such actuals generate an object declaration that is\n    --  placed within the wrapper package of the instance, and the entity in\n    --  these declarations is encoded in a complex way that GDB does not handle\n-   --  well.  These new renaming declarations appear within the body of the\n+   --  well. These new renaming declarations appear within the body of the\n    --  subprogram, and are redundant from a visibility point of view, but They\n    --  should have no measurable performance impact, and require no special\n    --  decoding in the debugger."}, {"sha": "4b396f112edd709eb7b30246d3bf75eab2081bd3", "filename": "gcc/ada/g-sechas.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/061bc17d25f9e54b0a8434a07a19e1c3fcf3a77c/gcc%2Fada%2Fg-sechas.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/061bc17d25f9e54b0a8434a07a19e1c3fcf3a77c/gcc%2Fada%2Fg-sechas.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-sechas.adb?ref=061bc17d25f9e54b0a8434a07a19e1c3fcf3a77c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---         Copyright (C) 2009-2012, Free Software Foundation, Inc.          --\n+--          Copyright (C) 2009-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -212,10 +212,10 @@ package body GNAT.Secure_Hashes is\n       -- Final --\n       -----------\n \n-      --  Once a complete message has been processed, it is padded with one\n-      --  1 bit followed by enough 0 bits so that the last block is\n-      --  2 * Word'Size bits short of being completed. The last 2 * Word'Size\n-      --  bits are set to the message size in bits (excluding padding).\n+      --  Once a complete message has been processed, it is padded with one 1\n+      --  bit followed by enough 0 bits so that the last block is 2 * Word'Size\n+      --  bits short of being completed. The last 2 * Word'Size bits are set to\n+      --  the message size in bits (excluding padding).\n \n       procedure Final\n         (C          : Context;"}, {"sha": "f3f71601de5cc85f335f79839a7055752b532078", "filename": "gcc/ada/g-sechas.ads", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/061bc17d25f9e54b0a8434a07a19e1c3fcf3a77c/gcc%2Fada%2Fg-sechas.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/061bc17d25f9e54b0a8434a07a19e1c3fcf3a77c/gcc%2Fada%2Fg-sechas.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-sechas.ads?ref=061bc17d25f9e54b0a8434a07a19e1c3fcf3a77c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---         Copyright (C) 2009-2012, Free Software Foundation, Inc.          --\n+--          Copyright (C) 2009-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -37,7 +37,9 @@\n --  Use GNAT.MD5 and GNAT.SHA* instead.\n \n with Ada.Streams; use Ada.Streams;\n+\n with Interfaces;\n+\n with System;\n \n package GNAT.Secure_Hashes is\n@@ -85,15 +87,14 @@ package GNAT.Secure_Hashes is\n       procedure To_Hash\n         (H      : State;\n          H_Bits : out Stream_Element_Array);\n-      --  Convert H to stream representation with the given bit order.\n-      --  If H_Bits is smaller than the internal hash state, then the state\n+      --  Convert H to stream representation with the given bit order. If\n+      --  H_Bits is smaller than the internal hash state, then the state\n       --  is truncated.\n \n    end Hash_Function_State;\n \n-   --  Generic hashing framework:\n-   --  The user interface for each implemented secure hash function is an\n-   --  instance of this generic package.\n+   --  Generic hashing framework: The user interface for each implemented\n+   --  secure hash function is an instance of this generic package.\n \n    generic\n       Block_Words : Natural;\n@@ -167,7 +168,7 @@ package GNAT.Secure_Hashes is\n       function Digest      (S : String)      return Binary_Message_Digest;\n       function Wide_Digest (W : Wide_String) return Binary_Message_Digest;\n       function Digest\n-        (A : Stream_Element_Array) return Binary_Message_Digest;\n+        (A : Stream_Element_Array)           return Binary_Message_Digest;\n       --  These functions are equivalent to the corresponding Update (or\n       --  Wide_Update) on a default initialized Context, followed by Digest\n       --  on the resulting Context.\n@@ -180,8 +181,8 @@ package GNAT.Secure_Hashes is\n       --  Return hash for the data accumulated with C in hexadecimal\n       --  representation.\n \n-      function Digest      (S : String)      return Message_Digest;\n-      function Wide_Digest (W : Wide_String) return Message_Digest;\n+      function Digest      (S : String)               return Message_Digest;\n+      function Wide_Digest (W : Wide_String)          return Message_Digest;\n       function Digest      (A : Stream_Element_Array) return Message_Digest;\n       --  These functions are equivalent to the corresponding Update (or\n       --  Wide_Update) on a default initialized Context, followed by Digest"}, {"sha": "ed42094df07fdd3846c86cb9a3463bee19cdba53", "filename": "gcc/ada/projects.texi", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/061bc17d25f9e54b0a8434a07a19e1c3fcf3a77c/gcc%2Fada%2Fprojects.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/061bc17d25f9e54b0a8434a07a19e1c3fcf3a77c/gcc%2Fada%2Fprojects.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprojects.texi?ref=061bc17d25f9e54b0a8434a07a19e1c3fcf3a77c", "patch": "@@ -286,9 +286,14 @@ There are several ways of defining source directories:\n   It is often desirable to remove, from the source directories, directory\n   subtrees rooted at some subdirectories. An example is the subdirectories\n   created by a Version Control System such as Subversion that creates directory\n-  subtrees .svn/**. To do that, attribute  @b{Ignore_Source_Sub_Dirs} can be\n-  used. It specifies the list of simple file names for the root of these\n-  undesirable directory subtrees.\n+  subtrees rooted at subdirectories \".svn\". To do that, attribute\n+  @b{Ignore_Source_Sub_Dirs} can be used. It specifies the list of simple\n+  file names for the roots of these undesirable directory subtrees.\n+\n+@smallexample\n+    @b{for} Source_Dirs @b{use} (\"./**\");\n+    @b{for} Ignore_Source_Sub_Dirs @b{use} (\".svn\");\n+@end smallexample\n \n @end itemize\n "}]}