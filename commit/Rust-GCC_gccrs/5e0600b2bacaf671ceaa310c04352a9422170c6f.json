{"sha": "5e0600b2bacaf671ceaa310c04352a9422170c6f", "node_id": "C_kwDOANBUbNoAKDVlMDYwMGIyYmFjYWY2NzFjZWFhMzEwYzA0MzUyYTk0MjIxNzBjNmY", "commit": {"author": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2022-11-14T17:27:29Z"}, "committer": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2022-11-30T20:59:46Z"}, "message": "d: Synchronize gdc documentation with options in d/lang.opt\n\ngcc/d/ChangeLog:\n\n\t* gdc.texi: Update gdc option documentation.\n\t* lang.opt (frevert=intpromote): Correct documentation.", "tree": {"sha": "06417c005cebdbe5d6da52798a4070ffcc5383fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/06417c005cebdbe5d6da52798a4070ffcc5383fc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5e0600b2bacaf671ceaa310c04352a9422170c6f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e0600b2bacaf671ceaa310c04352a9422170c6f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e0600b2bacaf671ceaa310c04352a9422170c6f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e0600b2bacaf671ceaa310c04352a9422170c6f/comments", "author": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "91607eba8fe49c064192122ec60a3e03dd8f2515", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91607eba8fe49c064192122ec60a3e03dd8f2515", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91607eba8fe49c064192122ec60a3e03dd8f2515"}], "stats": {"total": 40, "additions": 18, "deletions": 22}, "files": [{"sha": "6ceb2cc67aa0a1d00837e991c456c83fb1560789", "filename": "gcc/d/gdc.texi", "status": "modified", "additions": 17, "deletions": 21, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e0600b2bacaf671ceaa310c04352a9422170c6f/gcc%2Fd%2Fgdc.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e0600b2bacaf671ceaa310c04352a9422170c6f/gcc%2Fd%2Fgdc.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fgdc.texi?ref=5e0600b2bacaf671ceaa310c04352a9422170c6f", "patch": "@@ -240,9 +240,6 @@ while @option{-fdebug=} enables @code{debug} code that are identified\n by any of the following values:\n \n @table @samp\n-@item level\n-Sets the debug level to @var{level}, any @code{debug} code <= @var{level}\n-is compiled into the program.\n @item ident\n Turns on compilation of any @code{debug} code identified by @var{ident}.\n @end table\n@@ -325,6 +322,8 @@ values are supported:\n @table @samp\n @item all\n Turns on all upcoming D language features.\n+@item bitfields\n+Implements bit-fields in D.\n @item dip1000\n Implements @uref{https://github.com/dlang/DIPs/blob/master/DIPs/other/DIP1000.md}\n (Scoped pointers).\n@@ -353,9 +352,6 @@ rvalues.\n @item inclusiveincontracts\n Implements @code{in} contracts of overridden methods to be a superset of parent\n contract.\n-@item intpromote\n-Implements C-style integral promotion for unary @code{+}, @code{-} and @code{~}\n-expressions.\n @item nosharedaccess\n Turns off and disallows all access to shared memory objects.\n @item rvaluerefparam\n@@ -387,13 +383,17 @@ are supported:\n @table @samp\n @item all\n Turns off all revertable D language features.\n+@item dip1000\n+Reverts @uref{https://github.com/dlang/DIPs/blob/master/DIPs/other/DIP1000.md}\n+(Scoped pointers).\n @item dip25\n Reverts @uref{https://github.com/dlang/DIPs/blob/master/DIPs/archive/DIP25.md}\n (Sealed references).\n @item dtorfields\n Turns off generation for destructing fields of partially constructed objects.\n-@item markdown\n-Turns off Markdown replacements in Ddoc comments.\n+@item intpromote\n+Turns off C-style integral promotion for unary @code{+}, @code{-} and @code{~}\n+expressions.\n @end table\n \n @item -fno-rtti\n@@ -423,9 +423,6 @@ Turns on compilation of conditional @code{version} code into the program\n identified by any of the following values:\n \n @table @samp\n-@item level\n-Sets the version level to @var{level}, any @code{version} code >= @var{level}\n-is compiled into the program.\n @item ident\n Turns on compilation of @code{version} code identified by @var{ident}.\n @end table\n@@ -646,8 +643,10 @@ and provides source for debuggers to show when requested.\n \n @node Warnings\n @section Warnings\n-@cindex options to control warnings\n-@cindex warning messages\n+@cindex options, warnings\n+@cindex options, errors\n+@cindex warnings, suppressing\n+@cindex messages, error\n @cindex messages, warning\n @cindex suppressing warnings\n \n@@ -678,6 +677,11 @@ whose bound can be larger than @var{n} bytes.\n @option{-Walloca-larger-than} warning and is equivalent to\n @option{-Walloca-larger-than=@var{SIZE_MAX}} or larger.\n \n+@item -Wno-builtin-declaration-mismatch\n+@cindex @option{-Wno-builtin-declaration-mismatch}\n+@cindex @option{-Wbuiltin-declaration-mismatch}\n+Warn if a built-in function is declared with an incompatible signature.\n+\n @item -Wcast-result\n @cindex @option{-Wcast-result}\n @cindex @option{-Wno-cast-result}\n@@ -704,12 +708,6 @@ List all error messages from speculative compiles, such as\n messages as warnings, and these messages therefore never become\n errors when the @option{-Werror} option is also used.\n \n-@item -Wtemplates\n-@cindex @option{-Wtemplates}\n-@cindex @option{-Wno-templates}\n-Warn when a template instantiation is encountered.  Some coding\n-rules disallow templates, and this may be used to enforce that rule.\n-\n @item -Wunknown-pragmas\n @cindex @option{-Wunknown-pragmas}\n @cindex @option{-Wno-unknown-pragmas}\n@@ -764,8 +762,6 @@ List all hidden GC allocations.\n List statistics on template instantiations.\n @item tls\n List all variables going into thread local storage.\n-@item vmarkdown\n-List instances of Markdown replacements in Ddoc.\n @end table\n \n @end table"}, {"sha": "b039c766aa920afe9e478b9b2f27c3026c99c4fb", "filename": "gcc/d/lang.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e0600b2bacaf671ceaa310c04352a9422170c6f/gcc%2Fd%2Flang.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e0600b2bacaf671ceaa310c04352a9422170c6f/gcc%2Fd%2Flang.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Flang.opt?ref=5e0600b2bacaf671ceaa310c04352a9422170c6f", "patch": "@@ -422,7 +422,7 @@ Don't destruct fields of partially constructed objects.\n \n frevert=intpromote\n D RejectNegative\n-Use C-style integral promotion for unary '+', '-' and '~'.\n+Don't use C-style integral promotion for unary '+', '-' and '~'.\n \n frtti\n D"}]}