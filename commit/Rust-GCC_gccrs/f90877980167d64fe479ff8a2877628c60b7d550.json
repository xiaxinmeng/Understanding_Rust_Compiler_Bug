{"sha": "f90877980167d64fe479ff8a2877628c60b7d550", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjkwODc3OTgwMTY3ZDY0ZmU0NzlmZjhhMjg3NzYyOGM2MGI3ZDU1MA==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2016-08-30T13:54:48Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2016-08-30T13:54:48Z"}, "message": "rich_location: add convenience overloads for adding fix-it hints\n\nAdding a fix-it hint to a diagnostic usually follows one of these\npatterns:\n(a) an insertion fix-its, with the insertion at the primary caret location\n(b) a removals/replacements, affecting the range of the primary location\n\n(other cases are possible, e.g. multiple fix-its, and affecting other\nlocations, but these are the common ones)\n\nGiven these common cases, this patch adds overloads of the rich_location\nmethods for adding fix-it hints, so that the location information can\nbe omitted if it matches that of the primary location within the\nrich_location.\n\nSimilarly when adding \"remove\" and \"replace\" fix-it hints to a diagnostic,\nit's tedious to have to extract the source_range from a location_t\n(aka source_location).  To make this more convenient, this patch\nadds overload of the rich_location::add_fixit_remove/replace methods,\naccepting a source_location directly.\n\nThe patch updates the various in-tree users of fix-it hints to use\nthe new simpler API where appropriate.  I didn't touch the case where\nthere are multiple fix-its in one rich_location, as it seems better to\nbe more explicit about locations for this case (adding a pair of parens\nin warn_logical_not_parentheses).\n\nThe above makes the gcc_rich_location::add_fixit_misspelled_id overload\ntaking a const char * rather redundant, so I eliminated it.\n\ngcc/c/ChangeLog:\n\t* c-decl.c (implicit_decl_warning): Use add_fixit_replace\n\trather than add_fixit_misspelled_id.\n\t(undeclared_variable): Likewise.\n\t* c-parser.c (c_parser_declaration_or_fndef): Likewise.  Remove\n\tnow-redundant \"here\" params from add_fixit_insert method calls.\n\t(c_parser_parameter_declaration): Likewise.\n\t* c-typeck.c (build_component_ref): Remove now-redundant range\n\tparam from add_fixit_replace method calls.\n\ngcc/cp/ChangeLog:\n\t* name-lookup.c (suggest_alternatives_for): Use add_fixit_replace\n\trather than add_fixit_misspelled_id.\n\t* parser.c (cp_parser_diagnose_invalid_type_name): Likewise.\n\ngcc/ChangeLog:\n\t* diagnostic-show-locus.c (test_one_liner_fixit_insert): Remove\n\tredundant location param.\n\t(test_one_liner_fixit_remove): Likewise.\n\t(test_one_liner_fixit_replace): Likewise.\n\t(test_one_liner_fixit_replace_equal_secondary_range): Likewise.\n\t* gcc-rich-location.c\n\t(gcc_rich_location::add_fixit_misspelled_id): Eliminate call to\n\tget_range_from_loc.  Drop overload taking a const char *.\n\t* gcc-rich-location.h\n\t(gcc_rich_location::add_fixit_misspelled_id): Drop overload taking\n\ta const char *.\n\nlibcpp/ChangeLog:\n\t* include/line-map.h (rich_location::add_fixit_insert): Add\n\tcomments.  Add overload omitting the source_location param.\n\t(rich_location::add_fixit_remove): Add comments.  Add overloads\n\tomitting the range, and accepting a source_location.\n\t(rich_location::add_fixit_replace): Likewise.\n\t* line-map.c (rich_location::add_fixit_insert): Add comments.  Add\n\toverload omitting the source_location param.\n\t(rich_location::add_fixit_remove): Add comments.  Add overloads\n\tomitting the range, and accepting a source_location.\n\t(rich_location::add_fixit_replace): Likewise.\n\nFrom-SVN: r239861", "tree": {"sha": "b3644a6d4633c240f2961d55a0f178b387bbe50d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b3644a6d4633c240f2961d55a0f178b387bbe50d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f90877980167d64fe479ff8a2877628c60b7d550", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f90877980167d64fe479ff8a2877628c60b7d550", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f90877980167d64fe479ff8a2877628c60b7d550", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f90877980167d64fe479ff8a2877628c60b7d550/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "43ed860c2abbccdcc836bf68bd07d97f482924d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43ed860c2abbccdcc836bf68bd07d97f482924d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43ed860c2abbccdcc836bf68bd07d97f482924d1"}], "stats": {"total": 192, "additions": 149, "deletions": 43}, "files": [{"sha": "040c6c37f26d96e74f34002b180f35178f987861", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90877980167d64fe479ff8a2877628c60b7d550/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90877980167d64fe479ff8a2877628c60b7d550/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f90877980167d64fe479ff8a2877628c60b7d550", "patch": "@@ -1,3 +1,17 @@\n+2016-08-30  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* diagnostic-show-locus.c (test_one_liner_fixit_insert): Remove\n+\tredundant location param.\n+\t(test_one_liner_fixit_remove): Likewise.\n+\t(test_one_liner_fixit_replace): Likewise.\n+\t(test_one_liner_fixit_replace_equal_secondary_range): Likewise.\n+\t* gcc-rich-location.c\n+\t(gcc_rich_location::add_fixit_misspelled_id): Eliminate call to\n+\tget_range_from_loc.  Drop overload taking a const char *.\n+\t* gcc-rich-location.h\n+\t(gcc_rich_location::add_fixit_misspelled_id): Drop overload taking\n+\ta const char *.\n+\n 2016-08-30  Szabolcs Nagy  <szabolcs.nagy@arm.com>\n \n \t* config/linux.c (linux_libc_has_function): Return true on musl."}, {"sha": "2d991555f8d7c6904dd1388f50492337b38eed2f", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90877980167d64fe479ff8a2877628c60b7d550/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90877980167d64fe479ff8a2877628c60b7d550/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=f90877980167d64fe479ff8a2877628c60b7d550", "patch": "@@ -1,3 +1,14 @@\n+2016-08-30  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* c-decl.c (implicit_decl_warning): Use add_fixit_replace\n+\trather than add_fixit_misspelled_id.\n+\t(undeclared_variable): Likewise.\n+\t* c-parser.c (c_parser_declaration_or_fndef): Likewise.  Remove\n+\tnow-redundant \"here\" params from add_fixit_insert method calls.\n+\t(c_parser_parameter_declaration): Likewise.\n+\t* c-typeck.c (build_component_ref): Remove now-redundant range\n+\tparam from add_fixit_replace method calls.\n+\n 2016-08-25  Marek Polacek  <polacek@redhat.com>\n \n \t* c-typeck.c (parser_build_binary_op): Pass LHS to"}, {"sha": "8f49c35237df7af672244cfdc5188fdc5bf924bf", "filename": "gcc/c/c-decl.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90877980167d64fe479ff8a2877628c60b7d550/gcc%2Fc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90877980167d64fe479ff8a2877628c60b7d550/gcc%2Fc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-decl.c?ref=f90877980167d64fe479ff8a2877628c60b7d550", "patch": "@@ -3096,7 +3096,7 @@ implicit_decl_warning (location_t loc, tree id, tree olddecl)\n \tif (hint)\n \t  {\n \t    gcc_rich_location richloc (loc);\n-\t    richloc.add_fixit_misspelled_id (loc, hint);\n+\t    richloc.add_fixit_replace (hint);\n \t    warned = pedwarn_at_rich_loc\n \t      (&richloc, OPT_Wimplicit_function_declaration,\n \t       \"implicit declaration of function %qE; did you mean %qs?\",\n@@ -3109,7 +3109,7 @@ implicit_decl_warning (location_t loc, tree id, tree olddecl)\n \tif (hint)\n \t  {\n \t    gcc_rich_location richloc (loc);\n-\t    richloc.add_fixit_misspelled_id (loc, hint);\n+\t    richloc.add_fixit_replace (hint);\n \t    warned = warning_at_rich_loc\n \t      (&richloc, OPT_Wimplicit_function_declaration,\n \t       G_(\"implicit declaration of function %qE;did you mean %qs?\"),\n@@ -3437,7 +3437,7 @@ undeclared_variable (location_t loc, tree id)\n       if (guessed_id)\n \t{\n \t  gcc_rich_location richloc (loc);\n-\t  richloc.add_fixit_misspelled_id (loc, guessed_id);\n+\t  richloc.add_fixit_replace (guessed_id);\n \t  error_at_rich_loc (&richloc,\n \t\t\t     \"%qE undeclared here (not in a function);\"\n \t\t\t     \" did you mean %qs?\",\n@@ -3455,7 +3455,7 @@ undeclared_variable (location_t loc, tree id)\n \t  if (guessed_id)\n \t    {\n \t      gcc_rich_location richloc (loc);\n-\t      richloc.add_fixit_misspelled_id (loc, guessed_id);\n+\t      richloc.add_fixit_replace (guessed_id);\n \t      error_at_rich_loc\n \t\t(&richloc,\n \t\t \"%qE undeclared (first use in this function);\""}, {"sha": "c245e7035aeba94d34cd11ac79d7bc8df61d75b4", "filename": "gcc/c/c-parser.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90877980167d64fe479ff8a2877628c60b7d550/gcc%2Fc%2Fc-parser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90877980167d64fe479ff8a2877628c60b7d550/gcc%2Fc%2Fc-parser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-parser.c?ref=f90877980167d64fe479ff8a2877628c60b7d550", "patch": "@@ -1685,23 +1685,23 @@ c_parser_declaration_or_fndef (c_parser *parser, bool fndef_ok,\n       if (tag_exists_p (RECORD_TYPE, name))\n \t{\n \t  /* This is not C++ with its implicit typedef.  */\n-\t  richloc.add_fixit_insert (here, \"struct\");\n+\t  richloc.add_fixit_insert (\"struct\");\n \t  error_at_rich_loc (&richloc,\n \t\t\t     \"unknown type name %qE;\"\n \t\t\t     \" use %<struct%> keyword to refer to the type\",\n \t\t\t     name);\n \t}\n       else if (tag_exists_p (UNION_TYPE, name))\n \t{\n-\t  richloc.add_fixit_insert (here, \"union\");\n+\t  richloc.add_fixit_insert (\"union\");\n \t  error_at_rich_loc (&richloc,\n \t\t\t     \"unknown type name %qE;\"\n \t\t\t     \" use %<union%> keyword to refer to the type\",\n \t\t\t     name);\n \t}\n       else if (tag_exists_p (ENUMERAL_TYPE, name))\n \t{\n-\t  richloc.add_fixit_insert (here, \"enum\");\n+\t  richloc.add_fixit_insert (\"enum\");\n \t  error_at_rich_loc (&richloc,\n \t\t\t     \"unknown type name %qE;\"\n \t\t\t     \" use %<enum%> keyword to refer to the type\",\n@@ -1712,7 +1712,7 @@ c_parser_declaration_or_fndef (c_parser *parser, bool fndef_ok,\n \t  const char *hint = lookup_name_fuzzy (name, FUZZY_LOOKUP_TYPENAME);\n \t  if (hint)\n \t    {\n-\t      richloc.add_fixit_misspelled_id (here, hint);\n+\t      richloc.add_fixit_replace (hint);\n \t      error_at_rich_loc (&richloc,\n \t\t\t\t \"unknown type name %qE; did you mean %qs?\",\n \t\t\t\t name, hint);\n@@ -3864,7 +3864,7 @@ c_parser_parameter_declaration (c_parser *parser, tree attrs)\n \t  if (hint)\n \t    {\n \t      gcc_rich_location richloc (token->location);\n-\t      richloc.add_fixit_misspelled_id (token->location, hint);\n+\t      richloc.add_fixit_replace (hint);\n \t      error_at_rich_loc (&richloc,\n \t\t\t\t \"unknown type name %qE; did you mean %qs?\",\n \t\t\t\t token->value, hint);"}, {"sha": "51940273d69a239f812bb29fb7b148f0f13afb12", "filename": "gcc/c/c-typeck.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90877980167d64fe479ff8a2877628c60b7d550/gcc%2Fc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90877980167d64fe479ff8a2877628c60b7d550/gcc%2Fc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-typeck.c?ref=f90877980167d64fe479ff8a2877628c60b7d550", "patch": "@@ -2474,7 +2474,7 @@ build_component_ref (location_t loc, tree datum, tree component,\n \t where the user has confused \".\" vs \"->\".  */\n       rich_location richloc (line_table, loc);\n       /* \"loc\" should be the \".\" token.  */\n-      richloc.add_fixit_replace (source_range::from_location (loc), \"->\");\n+      richloc.add_fixit_replace (\"->\");\n       error_at_rich_loc (&richloc,\n \t\t\t \"%qE is a pointer; did you mean to use %<->%>?\",\n \t\t\t datum);"}, {"sha": "7ae6f53f7e48acb8256b66918725bbfbd67d0fd0", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90877980167d64fe479ff8a2877628c60b7d550/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90877980167d64fe479ff8a2877628c60b7d550/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=f90877980167d64fe479ff8a2877628c60b7d550", "patch": "@@ -1,3 +1,9 @@\n+2016-08-30  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* name-lookup.c (suggest_alternatives_for): Use add_fixit_replace\n+\trather than add_fixit_misspelled_id.\n+\t* parser.c (cp_parser_diagnose_invalid_type_name): Likewise.\n+\n 2016-08-29  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/77379"}, {"sha": "022ab6a2c09007e119fb936b3683577216631620", "filename": "gcc/cp/name-lookup.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90877980167d64fe479ff8a2877628c60b7d550/gcc%2Fcp%2Fname-lookup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90877980167d64fe479ff8a2877628c60b7d550/gcc%2Fcp%2Fname-lookup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fname-lookup.c?ref=f90877980167d64fe479ff8a2877628c60b7d550", "patch": "@@ -4446,7 +4446,7 @@ suggest_alternatives_for (location_t location, tree name)\n       if (fuzzy_name)\n \t{\n \t  gcc_rich_location richloc (location);\n-\t  richloc.add_fixit_misspelled_id (location, fuzzy_name);\n+\t  richloc.add_fixit_replace (fuzzy_name);\n \t  inform_at_rich_loc (&richloc, \"suggested alternative: %qs\",\n \t\t\t      fuzzy_name);\n \t}"}, {"sha": "48dbca17bc46de652449181297fbb772d6c8c1f6", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90877980167d64fe479ff8a2877628c60b7d550/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90877980167d64fe479ff8a2877628c60b7d550/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=f90877980167d64fe479ff8a2877628c60b7d550", "patch": "@@ -3171,7 +3171,7 @@ cp_parser_diagnose_invalid_type_name (cp_parser *parser, tree id,\n       if (suggestion)\n \t{\n \t  gcc_rich_location richloc (location);\n-\t  richloc.add_fixit_misspelled_id (location, suggestion);\n+\t  richloc.add_fixit_replace (suggestion);\n \t  error_at_rich_loc (&richloc,\n \t\t\t     \"%qE does not name a type; did you mean %qs?\",\n \t\t\t     id, suggestion);"}, {"sha": "60f68204df8e194ec61c7a6f0314b58df818a2ec", "filename": "gcc/diagnostic-show-locus.c", "status": "modified", "additions": 4, "deletions": 13, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90877980167d64fe479ff8a2877628c60b7d550/gcc%2Fdiagnostic-show-locus.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90877980167d64fe479ff8a2877628c60b7d550/gcc%2Fdiagnostic-show-locus.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdiagnostic-show-locus.c?ref=f90877980167d64fe479ff8a2877628c60b7d550", "patch": "@@ -1487,7 +1487,7 @@ test_one_liner_fixit_insert ()\n   test_diagnostic_context dc;\n   location_t caret = linemap_position_for_column (line_table, 7);\n   rich_location richloc (line_table, caret);\n-  richloc.add_fixit_insert (caret, \"&\");\n+  richloc.add_fixit_insert (\"&\");\n   diagnostic_show_locus (&dc, &richloc, DK_ERROR);\n   ASSERT_STREQ (\"\\n\"\n \t\t\" foo = bar.field;\\n\"\n@@ -1506,10 +1506,7 @@ test_one_liner_fixit_remove ()\n   location_t finish = linemap_position_for_column (line_table, 15);\n   location_t dot = make_location (start, start, finish);\n   rich_location richloc (line_table, dot);\n-  source_range range;\n-  range.m_start = start;\n-  range.m_finish = finish;\n-  richloc.add_fixit_remove (range);\n+  richloc.add_fixit_remove ();\n   diagnostic_show_locus (&dc, &richloc, DK_ERROR);\n   ASSERT_STREQ (\"\\n\"\n \t\t\" foo = bar.field;\\n\"\n@@ -1528,10 +1525,7 @@ test_one_liner_fixit_replace ()\n   location_t finish = linemap_position_for_column (line_table, 15);\n   location_t field = make_location (start, start, finish);\n   rich_location richloc (line_table, field);\n-  source_range range;\n-  range.m_start = start;\n-  range.m_finish = finish;\n-  richloc.add_fixit_replace (range, \"m_field\");\n+  richloc.add_fixit_replace (\"m_field\");\n   diagnostic_show_locus (&dc, &richloc, DK_ERROR);\n   ASSERT_STREQ (\"\\n\"\n \t\t\" foo = bar.field;\\n\"\n@@ -1580,10 +1574,7 @@ test_one_liner_fixit_replace_equal_secondary_range ()\n   rich_location richloc (line_table, equals);\n   location_t field = make_location (start, start, finish);\n   richloc.add_range (field, false);\n-  source_range range;\n-  range.m_start = start;\n-  range.m_finish = finish;\n-  richloc.add_fixit_replace (range, \"m_field\");\n+  richloc.add_fixit_replace (field, \"m_field\");\n   diagnostic_show_locus (&dc, &richloc, DK_ERROR);\n   /* The replacement range is indicated in the annotation line,\n      so it shouldn't be indicated via an additional underline.  */"}, {"sha": "b8787b40fe4bbbbc6e0244b80e787afc4af3045d", "filename": "gcc/gcc-rich-location.c", "status": "modified", "additions": 1, "deletions": 16, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90877980167d64fe479ff8a2877628c60b7d550/gcc%2Fgcc-rich-location.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90877980167d64fe479ff8a2877628c60b7d550/gcc%2Fgcc-rich-location.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc-rich-location.c?ref=f90877980167d64fe479ff8a2877628c60b7d550", "patch": "@@ -70,20 +70,5 @@ gcc_rich_location::add_fixit_misspelled_id (location_t misspelled_token_loc,\n {\n   gcc_assert (TREE_CODE (hint_id) == IDENTIFIER_NODE);\n \n-  source_range misspelled_token_range\n-    = get_range_from_loc (line_table, misspelled_token_loc);\n-  add_fixit_replace (misspelled_token_range, IDENTIFIER_POINTER (hint_id));\n-}\n-\n-/* As above, but with a const char * for the suggested replacement.  */\n-\n-void\n-gcc_rich_location::add_fixit_misspelled_id (location_t misspelled_token_loc,\n-\t\t\t\t\t    const char *hint)\n-{\n-  gcc_assert (hint);\n-\n-  source_range misspelled_token_range\n-    = get_range_from_loc (line_table, misspelled_token_loc);\n-  add_fixit_replace (misspelled_token_range, hint);\n+  add_fixit_replace (misspelled_token_loc, IDENTIFIER_POINTER (hint_id));\n }"}, {"sha": "0599904e39aa849017e21fbac57a93dc54ee2c0b", "filename": "gcc/gcc-rich-location.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90877980167d64fe479ff8a2877628c60b7d550/gcc%2Fgcc-rich-location.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90877980167d64fe479ff8a2877628c60b7d550/gcc%2Fgcc-rich-location.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc-rich-location.h?ref=f90877980167d64fe479ff8a2877628c60b7d550", "patch": "@@ -40,8 +40,6 @@ class gcc_rich_location : public rich_location\n \n   void add_fixit_misspelled_id (location_t misspelled_token_loc,\n \t\t\t\ttree hint_id);\n-  void add_fixit_misspelled_id (location_t misspelled_token_loc,\n-\t\t\t\tconst char *hint);\n };\n \n #endif /* GCC_RICH_LOCATION_H */"}, {"sha": "a753033b826169be5186dc506d847673e64752b0", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90877980167d64fe479ff8a2877628c60b7d550/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90877980167d64fe479ff8a2877628c60b7d550/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=f90877980167d64fe479ff8a2877628c60b7d550", "patch": "@@ -1,3 +1,16 @@\n+2016-08-30  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* include/line-map.h (rich_location::add_fixit_insert): Add\n+\tcomments.  Add overload omitting the source_location param.\n+\t(rich_location::add_fixit_remove): Add comments.  Add overloads\n+\tomitting the range, and accepting a source_location.\n+\t(rich_location::add_fixit_replace): Likewise.\n+\t* line-map.c (rich_location::add_fixit_insert): Add comments.  Add\n+\toverload omitting the source_location param.\n+\t(rich_location::add_fixit_remove): Add comments.  Add overloads\n+\tomitting the range, and accepting a source_location.\n+\t(rich_location::add_fixit_replace): Likewise.\n+\n 2016-08-26  David Malcolm  <dmalcolm@redhat.com>\n \n \t* include/line-map.h (get_pure_location): New decl."}, {"sha": "122e4742ed3dd84bdc73f020edd0dd862aa83ed8", "filename": "libcpp/include/line-map.h", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90877980167d64fe479ff8a2877628c60b7d550/libcpp%2Finclude%2Fline-map.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90877980167d64fe479ff8a2877628c60b7d550/libcpp%2Finclude%2Fline-map.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Finclude%2Fline-map.h?ref=f90877980167d64fe479ff8a2877628c60b7d550", "patch": "@@ -1401,13 +1401,47 @@ class rich_location\n   override_column (int column);\n \n   /* Fix-it hints.  */\n+\n+  /* Methods for adding insertion fix-it hints.  */\n+\n+  /* Suggest inserting NEW_CONTENT at the primary range's caret.  */\n+  void\n+  add_fixit_insert (const char *new_content);\n+\n+  /* Suggest inserting NEW_CONTENT at WHERE.  */\n   void\n   add_fixit_insert (source_location where,\n \t\t    const char *new_content);\n \n+  /* Methods for adding removal fix-it hints.  */\n+\n+  /* Suggest removing the content covered by range 0.  */\n+  void\n+  add_fixit_remove ();\n+\n+  /* Suggest removing the content covered between the start and finish\n+     of WHERE.  */\n+  void\n+  add_fixit_remove (source_location where);\n+\n+  /* Suggest removing the content covered by SRC_RANGE.  */\n   void\n   add_fixit_remove (source_range src_range);\n \n+  /* Methods for adding \"replace\" fix-it hints.  */\n+\n+  /* Suggest replacing the content covered by range 0 with NEW_CONTENT.  */\n+  void\n+  add_fixit_replace (const char *new_content);\n+\n+  /* Suggest replacing the content between the start and finish of\n+     WHERE with NEW_CONTENT.  */\n+  void\n+  add_fixit_replace (source_location where,\n+\t\t     const char *new_content);\n+\n+  /* Suggest replacing the content covered by SRC_RANGE with\n+     NEW_CONTENT.  */\n   void\n   add_fixit_replace (source_range src_range,\n \t\t     const char *new_content);"}, {"sha": "318932646a9b931aaef5763f2f2f3ec575f18c62", "filename": "libcpp/line-map.c", "status": "modified", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90877980167d64fe479ff8a2877628c60b7d550/libcpp%2Fline-map.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90877980167d64fe479ff8a2877628c60b7d550/libcpp%2Fline-map.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fline-map.c?ref=f90877980167d64fe479ff8a2877628c60b7d550", "patch": "@@ -2092,6 +2092,17 @@ rich_location::set_range (line_maps * /*set*/, unsigned int idx,\n     m_have_expanded_location = false;\n }\n \n+/* Methods for adding insertion fix-it hints.  */\n+\n+/* Add a fixit-hint, suggesting insertion of NEW_CONTENT\n+   at the primary range's caret location.  */\n+\n+void\n+rich_location::add_fixit_insert (const char *new_content)\n+{\n+  add_fixit_insert (get_loc (), new_content);\n+}\n+\n /* Add a fixit-hint, suggesting insertion of NEW_CONTENT\n    at WHERE.  */\n \n@@ -2109,6 +2120,27 @@ rich_location::add_fixit_insert (source_location where,\n     = new fixit_insert (where, new_content);\n }\n \n+/* Methods for adding removal fix-it hints.  */\n+\n+/* Add a fixit-hint, suggesting removal of the content covered\n+   by range 0.  */\n+\n+void\n+rich_location::add_fixit_remove ()\n+{\n+  add_fixit_remove (get_loc ());\n+}\n+\n+/* Add a fixit-hint, suggesting removal of the content between\n+   the start and finish of WHERE.  */\n+\n+void\n+rich_location::add_fixit_remove (source_location where)\n+{\n+  source_range range = get_range_from_loc (m_line_table, where);\n+  add_fixit_remove (range);\n+}\n+\n /* Add a fixit-hint, suggesting removal of the content at\n    SRC_RANGE.  */\n \n@@ -2156,6 +2188,28 @@ column_before_p (line_maps *set, source_location a, source_location b)\n   return column_b == column_a + 1;\n }\n \n+/* Add a fixit-hint, suggesting replacement of the content covered\n+   by range 0 with NEW_CONTENT.  */\n+\n+void\n+rich_location::add_fixit_replace (const char *new_content)\n+{\n+  add_fixit_replace (get_loc (), new_content);\n+}\n+\n+/* Methods for adding \"replace\" fix-it hints.  */\n+\n+/* Add a fixit-hint, suggesting replacement of the content between\n+   the start and finish of WHERE with NEW_CONTENT.  */\n+\n+void\n+rich_location::add_fixit_replace (source_location where,\n+\t\t\t\t  const char *new_content)\n+{\n+  source_range range = get_range_from_loc (m_line_table, where);\n+  add_fixit_replace (range, new_content);\n+}\n+\n /* Add a fixit-hint, suggesting replacement of the content at\n    SRC_RANGE with NEW_CONTENT.  */\n "}]}