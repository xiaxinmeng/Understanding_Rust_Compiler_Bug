{"sha": "d6126f8b8250b857f3e0edfd42f3c33d8534b9a4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDYxMjZmOGI4MjUwYjg1N2YzZTBlZGZkNDJmM2MzM2Q4NTM0YjlhNA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2018-02-09T18:19:08Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2018-02-09T18:19:08Z"}, "message": "re PR target/84226 (ICE in simplify_const_unary_operation, at simplify-rtx.c:1974 on ppc64le)\n\n\tPR target/84226\n\t* config/rs6000/vsx.md (p9_xxbrq_v16qi): Change input operand\n\tconstraint from =wa to wa.  Avoid a subreg on the output operand,\n\tinstead use a pseudo and subreg it in a move.\n\t(p9_xxbrd_<mode>): Changed to ...\n\t(p9_xxbrd_v2di): ... this insn, without VSX_D iterator.\n\t(p9_xxbrd_v2df): New expander.\n\t(p9_xxbrw_<mode>): Changed to ...\n\t(p9_xxbrw_v4si): ... this insn, without VSX_W iterator.\n\t(p9_xxbrw_v4sf): New expander.\n\n\t* gcc.target/powerpc/pr84226.c: New test.\n\nFrom-SVN: r257536", "tree": {"sha": "c1adb6691b4e2733b4f5376c51fbcc9191ecf365", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c1adb6691b4e2733b4f5376c51fbcc9191ecf365"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d6126f8b8250b857f3e0edfd42f3c33d8534b9a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6126f8b8250b857f3e0edfd42f3c33d8534b9a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6126f8b8250b857f3e0edfd42f3c33d8534b9a4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6126f8b8250b857f3e0edfd42f3c33d8534b9a4/comments", "author": null, "committer": null, "parents": [{"sha": "e3056dd850922fe1d13d3a69ceb6ea24f1fbac1d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3056dd850922fe1d13d3a69ceb6ea24f1fbac1d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e3056dd850922fe1d13d3a69ceb6ea24f1fbac1d"}], "stats": {"total": 73, "additions": 61, "deletions": 12}, "files": [{"sha": "4ac7fff372a918e646c3df7c63d5d734983c218b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6126f8b8250b857f3e0edfd42f3c33d8534b9a4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6126f8b8250b857f3e0edfd42f3c33d8534b9a4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d6126f8b8250b857f3e0edfd42f3c33d8534b9a4", "patch": "@@ -1,7 +1,20 @@\n+2018-02-09  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/84226\n+\t* config/rs6000/vsx.md (p9_xxbrq_v16qi): Change input operand\n+\tconstraint from =wa to wa.  Avoid a subreg on the output operand,\n+\tinstead use a pseudo and subreg it in a move.\n+\t(p9_xxbrd_<mode>): Changed to ...\n+\t(p9_xxbrd_v2di): ... this insn, without VSX_D iterator.\n+\t(p9_xxbrd_v2df): New expander.\n+\t(p9_xxbrw_<mode>): Changed to ...\n+\t(p9_xxbrw_v4si): ... this insn, without VSX_W iterator.\n+\t(p9_xxbrw_v4sf): New expander.\n+\n 2018-02-09  Sebastian Perta  <sebastian.perta@renesas.com>\n \n-\t*config/rx.md: updated \"movsicc\" expand to be matched by GCC\n-\t*testsuite/gcc.target/rx/movsicc.c: new test case\n+\t* config/rx.md: updated \"movsicc\" expand to be matched by GCC\n+\t* testsuite/gcc.target/rx/movsicc.c: new test case\n \n 2018-02-09  Peter Bergner  <bergner@vnet.ibm.com>\n "}, {"sha": "6f0bd09e9bb257bc70b2209aca385c9640e55286", "filename": "gcc/config/rs6000/vsx.md", "status": "modified", "additions": 35, "deletions": 10, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6126f8b8250b857f3e0edfd42f3c33d8534b9a4/gcc%2Fconfig%2Frs6000%2Fvsx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6126f8b8250b857f3e0edfd42f3c33d8534b9a4/gcc%2Fconfig%2Frs6000%2Fvsx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fvsx.md?ref=d6126f8b8250b857f3e0edfd42f3c33d8534b9a4", "patch": "@@ -5363,35 +5363,60 @@\n \n (define_expand \"p9_xxbrq_v16qi\"\n   [(use (match_operand:V16QI 0 \"vsx_register_operand\" \"=wa\"))\n-   (use (match_operand:V16QI 1 \"vsx_register_operand\" \"=wa\"))]\n+   (use (match_operand:V16QI 1 \"vsx_register_operand\" \"wa\"))]\n   \"TARGET_P9_VECTOR\"\n {\n-  rtx op0 = gen_lowpart (V1TImode, operands[0]);\n+  rtx op0 = gen_reg_rtx (V1TImode);\n   rtx op1 = gen_lowpart (V1TImode, operands[1]);\n   emit_insn (gen_p9_xxbrq_v1ti (op0, op1));\n+  emit_move_insn (operands[0], gen_lowpart (V16QImode, op0));\n   DONE;\n })\n \n ;; Swap all bytes in each 64-bit element\n-(define_insn \"p9_xxbrd_<mode>\"\n-  [(set (match_operand:VSX_D 0 \"vsx_register_operand\" \"=wa\")\n-\t(bswap:VSX_D (match_operand:VSX_D 1 \"vsx_register_operand\" \"wa\")))]\n+(define_insn \"p9_xxbrd_v2di\"\n+  [(set (match_operand:V2DI 0 \"vsx_register_operand\" \"=wa\")\n+\t(bswap:V2DI (match_operand:V2DI 1 \"vsx_register_operand\" \"wa\")))]\n   \"TARGET_P9_VECTOR\"\n   \"xxbrd %x0,%x1\"\n   [(set_attr \"type\" \"vecperm\")])\n \n+(define_expand \"p9_xxbrd_v2df\"\n+  [(use (match_operand:V2DF 0 \"vsx_register_operand\" \"=wa\"))\n+   (use (match_operand:V2DF 1 \"vsx_register_operand\" \"wa\"))]\n+  \"TARGET_P9_VECTOR\"\n+{\n+  rtx op0 = gen_reg_rtx (V2DImode);\n+  rtx op1 = gen_lowpart (V2DImode, operands[1]);\n+  emit_insn (gen_p9_xxbrd_v2di (op0, op1));\n+  emit_move_insn (operands[0], gen_lowpart (V2DFmode, op0));\n+  DONE;\n+})\n+\n ;; Swap all bytes in each 32-bit element\n-(define_insn \"p9_xxbrw_<mode>\"\n-  [(set (match_operand:VSX_W 0 \"vsx_register_operand\" \"=wa\")\n-\t(bswap:VSX_W (match_operand:VSX_W 1 \"vsx_register_operand\" \"wa\")))]\n+(define_insn \"p9_xxbrw_v4si\"\n+  [(set (match_operand:V4SI 0 \"vsx_register_operand\" \"=wa\")\n+\t(bswap:V4SI (match_operand:V4SI 1 \"vsx_register_operand\" \"wa\")))]\n   \"TARGET_P9_VECTOR\"\n   \"xxbrw %x0,%x1\"\n   [(set_attr \"type\" \"vecperm\")])\n \n+(define_expand \"p9_xxbrw_v4sf\"\n+  [(use (match_operand:V4SF 0 \"vsx_register_operand\" \"=wa\"))\n+   (use (match_operand:V4SF 1 \"vsx_register_operand\" \"wa\"))]\n+  \"TARGET_P9_VECTOR\"\n+{\n+  rtx op0 = gen_reg_rtx (V4SImode);\n+  rtx op1 = gen_lowpart (V4SImode, operands[1]);\n+  emit_insn (gen_p9_xxbrw_v4si (op0, op1));\n+  emit_move_insn (operands[0], gen_lowpart (V4SFmode, op0));\n+  DONE;\n+})\n+\n ;; Swap all bytes in each element of vector\n (define_expand \"revb_<mode>\"\n-  [(set (match_operand:VEC_REVB 0 \"vsx_register_operand\")\n-\t(bswap:VEC_REVB (match_operand:VEC_REVB 1 \"vsx_register_operand\")))]\n+  [(use (match_operand:VEC_REVB 0 \"vsx_register_operand\"))\n+   (use (match_operand:VEC_REVB 1 \"vsx_register_operand\"))]\n   \"\"\n {\n   if (TARGET_P9_VECTOR)"}, {"sha": "64018db71656f90d5c7f1c0f9219517b48f4df26", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6126f8b8250b857f3e0edfd42f3c33d8534b9a4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6126f8b8250b857f3e0edfd42f3c33d8534b9a4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d6126f8b8250b857f3e0edfd42f3c33d8534b9a4", "patch": "@@ -1,3 +1,8 @@\n+2018-02-09  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/84226\n+\t* gcc.target/powerpc/pr84226.c: New test.\n+\n 2018-02-09  Peter Bergner  <bergner@vnet.ibm.com>\n \n \t* gcc.target/powerpc/builtins-1-be.c <vclzb>: Rename duplicate test"}, {"sha": "aae922ba905d00e6154e38088175ada05998bfa5", "filename": "gcc/testsuite/gcc.target/powerpc/pr84226.c", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6126f8b8250b857f3e0edfd42f3c33d8534b9a4/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr84226.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6126f8b8250b857f3e0edfd42f3c33d8534b9a4/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr84226.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr84226.c?ref=d6126f8b8250b857f3e0edfd42f3c33d8534b9a4", "patch": "@@ -0,0 +1,6 @@\n+/* PR target/84226 */\n+/* { dg-do compile { target { powerpc*-*-* && lp64 } } } */\n+/* { dg-require-effective-target powerpc_p9vector_ok } */\n+/* { dg-options \"-mpower9-misc -O1\" } */\n+\n+#include \"builtins-revb-runnable.c\""}]}