{"sha": "749af8ee126fea9757ecf38ea85093603114bd50", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzQ5YWY4ZWUxMjZmZWE5NzU3ZWNmMzhlYTg1MDkzNjAzMTE0YmQ1MA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2013-02-01T16:34:15Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2013-02-01T16:34:15Z"}, "message": "ppc64: widening multiply patterns\n\n        * config/rs6000/rs6000.md (smulditi3): New.\n        (umulditi3): New.\n\nFrom-SVN: r195667", "tree": {"sha": "288cb10a8773b1e343bcb5dfbc0b1c0720f7289a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/288cb10a8773b1e343bcb5dfbc0b1c0720f7289a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/749af8ee126fea9757ecf38ea85093603114bd50", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/749af8ee126fea9757ecf38ea85093603114bd50", "html_url": "https://github.com/Rust-GCC/gccrs/commit/749af8ee126fea9757ecf38ea85093603114bd50", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/749af8ee126fea9757ecf38ea85093603114bd50/comments", "author": null, "committer": null, "parents": [{"sha": "c050cbe9b41307e5586e9c28001d5b15c2a16327", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c050cbe9b41307e5586e9c28001d5b15c2a16327", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c050cbe9b41307e5586e9c28001d5b15c2a16327"}], "stats": {"total": 33, "additions": 33, "deletions": 0}, "files": [{"sha": "dd9224dd98668d0e865a44153e02c3f75986ee7a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/749af8ee126fea9757ecf38ea85093603114bd50/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/749af8ee126fea9757ecf38ea85093603114bd50/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=749af8ee126fea9757ecf38ea85093603114bd50", "patch": "@@ -1,3 +1,8 @@\n+2013-02-01  Richard Henderson <rth@redhat.com>\n+\n+\t* config/rs6000/rs6000.md (smulditi3): New.\n+\t(umulditi3): New.\n+\n 2013-02-01  David Edelsohn  <dje.gcc@gmail.com>\n \n \t* config/rs6000/xcoff.h (ASM_OUTPUT_ALIGNED_COMMON): Use floor_log2."}, {"sha": "b3db6817647e08803c87524320975311d7b2ef55", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/749af8ee126fea9757ecf38ea85093603114bd50/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/749af8ee126fea9757ecf38ea85093603114bd50/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=749af8ee126fea9757ecf38ea85093603114bd50", "patch": "@@ -6326,6 +6326,34 @@\n   \"mulhdu %0,%1,%2\"\n   [(set_attr \"type\" \"lmul\")])\n \n+(define_expand \"mulditi3\"\n+  [(set (match_operand:TI 0 \"gpc_reg_operand\")\n+\t(mult:TI (sign_extend:TI (match_operand:DI 1 \"gpc_reg_operand\"))\n+\t\t (sign_extend:TI (match_operand:DI 2 \"gpc_reg_operand\"))))]\n+  \"TARGET_POWERPC64\"\n+{\n+  rtx l = gen_reg_rtx (DImode), h = gen_reg_rtx (DImode);\n+  emit_insn (gen_muldi3 (l, operands[1], operands[2]));\n+  emit_insn (gen_smuldi3_highpart (h, operands[1], operands[2]));\n+  emit_move_insn (gen_lowpart (DImode, operands[0]), l);\n+  emit_move_insn (gen_highpart (DImode, operands[0]), h);\n+  DONE;\n+})\n+\n+(define_expand \"umulditi3\"\n+  [(set (match_operand:TI 0 \"gpc_reg_operand\")\n+\t(mult:TI (zero_extend:TI (match_operand:DI 1 \"gpc_reg_operand\"))\n+\t\t (zero_extend:TI (match_operand:DI 2 \"gpc_reg_operand\"))))]\n+  \"TARGET_POWERPC64\"\n+{\n+  rtx l = gen_reg_rtx (DImode), h = gen_reg_rtx (DImode);\n+  emit_insn (gen_muldi3 (l, operands[1], operands[2]));\n+  emit_insn (gen_umuldi3_highpart (h, operands[1], operands[2]));\n+  emit_move_insn (gen_lowpart (DImode, operands[0]), l);\n+  emit_move_insn (gen_highpart (DImode, operands[0]), h);\n+  DONE;\n+})\n+\n (define_insn \"rotldi3\"\n   [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r,r\")\n \t(rotate:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r,r\")"}]}