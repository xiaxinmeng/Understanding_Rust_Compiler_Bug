{"sha": "ba5e43aaf6bea9d9171b7641556f0421650061ec", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmE1ZTQzYWFmNmJlYTlkOTE3MWI3NjQxNTU2ZjA0MjE2NTAwNjFlYw==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1996-04-26T01:45:04Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1996-04-26T01:45:04Z"}, "message": "Fix error compiling on AIX\n\nFrom-SVN: r11889", "tree": {"sha": "baaceff3bb354faa3494bd3c5125d36e8562c156", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/baaceff3bb354faa3494bd3c5125d36e8562c156"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ba5e43aaf6bea9d9171b7641556f0421650061ec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba5e43aaf6bea9d9171b7641556f0421650061ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba5e43aaf6bea9d9171b7641556f0421650061ec", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba5e43aaf6bea9d9171b7641556f0421650061ec/comments", "author": null, "committer": null, "parents": [{"sha": "a19176508acf829433966a74b6ad49e4fc6f4eb6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a19176508acf829433966a74b6ad49e4fc6f4eb6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a19176508acf829433966a74b6ad49e4fc6f4eb6"}], "stats": {"total": 86, "additions": 78, "deletions": 8}, "files": [{"sha": "0924cf4a1654bb464bcf5e3dfba7536c83e06de0", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 78, "deletions": 8, "changes": 86, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba5e43aaf6bea9d9171b7641556f0421650061ec/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba5e43aaf6bea9d9171b7641556f0421650061ec/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=ba5e43aaf6bea9d9171b7641556f0421650061ec", "patch": "@@ -2080,6 +2080,12 @@ ccr_bit (op, scc_p)\n \f\n /* Print an operand.  Recognize special options, documented below.  */\n \n+#ifdef TARGET_EABI\n+#define SMALL_DATA_RELOC ((TARGET_EABI) ? \"sda21\" : \"sdarel\")\n+#else\n+#define SMALL_DATA_RELOC \"sda21\"\n+#endif\n+\n void\n print_operand (file, x, code)\n     FILE *file;\n@@ -2275,8 +2281,8 @@ print_operand (file, x, code)\n \t    output_address (plus_constant (XEXP (XEXP (x, 0), 0), 4));\n \t  else\n \t    output_address (plus_constant (XEXP (x, 0), 4));\n-\t  if (DEFAULT_ABI == ABI_V4 && small_data_operand (x, GET_MODE (x)))\n-\t    fprintf (file, \"@%s(%s)\", (TARGET_EABI) ? \"sda21\" : \"sdarel\", reg_names[0]);\n+\t  if (small_data_operand (x, GET_MODE (x)))\n+\t    fprintf (file, \"@%s(%s)\", SMALL_DATA_RELOC, reg_names[0]);\n \t}\n       return;\n \t\t\t    \n@@ -2487,8 +2493,8 @@ print_operand (file, x, code)\n \t    output_address (plus_constant (XEXP (XEXP (x, 0), 0), 8));\n \t  else\n \t    output_address (plus_constant (XEXP (x, 0), 8));\n-\t  if (DEFAULT_ABI == ABI_V4 && small_data_operand (x, GET_MODE (x)))\n-\t    fprintf (file, \"@%s(%s)\", (TARGET_EABI) ? \"sda21\" : \"sdarel\", reg_names[0]);\n+\t  if (small_data_operand (x, GET_MODE (x)))\n+\t    fprintf (file, \"@%s(%s)\", SMALL_DATA_RELOC, reg_names[0]);\n \t}\n       return;\n \t\t\t    \n@@ -2536,8 +2542,8 @@ print_operand (file, x, code)\n \t    output_address (plus_constant (XEXP (XEXP (x, 0), 0), 12));\n \t  else\n \t    output_address (plus_constant (XEXP (x, 0), 12));\n-\t  if (DEFAULT_ABI == ABI_V4 && small_data_operand (x, GET_MODE (x)))\n-\t    fprintf (file, \"@%s(%s)\", (TARGET_EABI) ? \"sda21\" : \"sdarel\", reg_names[0]);\n+\t  if (small_data_operand (x, GET_MODE (x)))\n+\t    fprintf (file, \"@%s(%s)\", SMALL_DATA_RELOC, reg_names[0]);\n \t}\n       return;\n \t\t\t    \n@@ -2578,8 +2584,8 @@ print_operand_address (file, x)\n   else if (GET_CODE (x) == SYMBOL_REF || GET_CODE (x) == CONST)\n     {\n       output_addr_const (file, x);\n-      if (DEFAULT_ABI == ABI_V4 && small_data_operand (x, GET_MODE (x)))\n-\tfprintf (file, \"@%s(%s)\", (TARGET_EABI) ? \"sda21\" : \"sdarel\", reg_names[0]);\n+      if (small_data_operand (x, GET_MODE (x)))\n+\tfprintf (file, \"@%s(%s)\", SMALL_DATA_RELOC, reg_names[0]);\n \n #ifdef TARGET_NO_TOC\n       else if (TARGET_NO_TOC)\n@@ -4612,9 +4618,11 @@ rs6000_select_section (decl, reloc)\n \t{\n \t  if (TARGET_SDATA && (size > 0) && (size <= g_switch_value))\n \t    {\n+#ifdef TARGET_EABI\n \t      if (TARGET_EABI)\n \t\tsdata2_section ();\n \t      else\n+#endif\n \t\tsdata_section ();\t/* System V doesn't have .sdata2/.sbss2 */\n \t    }\n \t  else\n@@ -4625,3 +4633,65 @@ rs6000_select_section (decl, reloc)\n     const_section ();\n }\n #endif /* USING_SVR4_H */\n+\n+\f\n+/* CYGNUS LOCAL mac */\n+\n+/* Whether we are using m68k-compatible alignment.  */\n+\n+int mac68k_aligned;\n+\n+/* Most Mac compiler pragmas are unimportant, but we must recognize\n+   the m68k alignment pragma, because that is crucial to transitions\n+   to and from the m68k emulator on PowerMacs.  */\n+\n+int\n+handle_mac_pragma (finput, t)\n+     FILE *finput;\n+     tree t;\n+{\n+  int retval = 0;\n+  register char *pname;\n+  char pbuf[200];\n+  int c, psize;\n+\n+  if (TREE_CODE (t) != IDENTIFIER_NODE)\n+    return 0;\n+\n+  pname = IDENTIFIER_POINTER (t);\n+  if (strcmp (pname, \"segment\") == 0)\n+    {\n+      retval = 1;\n+      /* (should collect pbuf + 8 into a segment name) */\n+    }\n+  else if (strcmp (pname, \"options\") == 0)\n+    {\n+      c = getc (finput);\n+      /* Skip over initial whitespace.  */\n+      while (c == ' ' || c == '\\t')\n+\tc = getc (finput);\n+\n+      /* Return without doing anything if no content.  */\n+      if (c == '\\n' || c == EOF)\n+\treturn 0;\n+\n+      /* Collect the rest of the line.  */\n+      while (psize < sizeof (pbuf) - 1 && c != '\\n')\n+\t{\n+\t  pbuf[psize++] = c;\n+\t  c = getc (finput);\n+\t}\n+\n+      if (strncmp (pbuf, \"align=mac68k\", 12) == 0)\n+\t{\n+\t  mac68k_aligned = retval = 1;\n+\t}\n+      else if (strncmp (pbuf, \"align=reset\", 11) == 0)\n+\t{\n+\t  mac68k_aligned = 0, retval = 1;\n+\t}\n+    }\n+\n+  return c;\n+}\n+/* END CYGNUS LOCAL mac */"}]}