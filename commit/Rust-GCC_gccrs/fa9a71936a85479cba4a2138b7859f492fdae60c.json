{"sha": "fa9a71936a85479cba4a2138b7859f492fdae60c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmE5YTcxOTM2YTg1NDc5Y2JhNGEyMTM4Yjc4NTlmNDkyZmRhZTYwYw==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2010-09-07T21:35:19Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2010-09-07T21:35:19Z"}, "message": "* trans-expr.c (gfc_conv_initializer): Set STATIC flags for initializers.\n\nFrom-SVN: r163973", "tree": {"sha": "1b6ad1710069d8d46df88e8ed3125e1dcd9d971c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1b6ad1710069d8d46df88e8ed3125e1dcd9d971c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fa9a71936a85479cba4a2138b7859f492fdae60c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa9a71936a85479cba4a2138b7859f492fdae60c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa9a71936a85479cba4a2138b7859f492fdae60c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa9a71936a85479cba4a2138b7859f492fdae60c/comments", "author": null, "committer": null, "parents": [{"sha": "f27e50db1ab5c90adf4ce77902a4e5783196d7d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f27e50db1ab5c90adf4ce77902a4e5783196d7d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f27e50db1ab5c90adf4ce77902a4e5783196d7d7"}], "stats": {"total": 24, "additions": 20, "deletions": 4}, "files": [{"sha": "84cf449e03d30c66fb866f8126211b6e4a3bc101", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa9a71936a85479cba4a2138b7859f492fdae60c/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa9a71936a85479cba4a2138b7859f492fdae60c/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=fa9a71936a85479cba4a2138b7859f492fdae60c", "patch": "@@ -1,3 +1,7 @@\n+2010-09-07  Jan Hubicka  <jh@suse.cz>\n+\n+\t* trans-expr.c (gfc_conv_initializer): Set STATIC flags for initializers.\n+\n 2010-09-07  Tobias Burnus <burnus@net-b.de>\n \t\n \tPR fortran/45583"}, {"sha": "433db2571b3089476ee2c53a052aef9b7bd5508e", "filename": "gcc/fortran/trans-expr.c", "status": "modified", "additions": 16, "deletions": 4, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa9a71936a85479cba4a2138b7859f492fdae60c/gcc%2Ffortran%2Ftrans-expr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa9a71936a85479cba4a2138b7859f492fdae60c/gcc%2Ffortran%2Ftrans-expr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-expr.c?ref=fa9a71936a85479cba4a2138b7859f492fdae60c", "patch": "@@ -4000,19 +4000,23 @@ gfc_conv_initializer (gfc_expr * expr, gfc_typespec * ts, tree type,\n \n       gfc_init_se (&se, NULL);\n       gfc_conv_constant (&se, expr);\n+      gcc_assert (TREE_CODE (se.expr) != CONSTRUCTOR);\n       return se.expr;\n     }\n   \n   if (array && !procptr)\n     {\n+      tree ctor;\n       /* Arrays need special handling.  */\n       if (pointer)\n-\treturn gfc_build_null_descriptor (type);\n+\tctor = gfc_build_null_descriptor (type);\n       /* Special case assigning an array to zero.  */\n       else if (is_zero_initializer_p (expr))\n-        return build_constructor (type, NULL);\n+        ctor = build_constructor (type, NULL);\n       else\n-\treturn gfc_conv_array_initializer (type, expr);\n+\tctor = gfc_conv_array_initializer (type, expr);\n+      TREE_STATIC (ctor) = 1;\n+      return ctor;\n     }\n   else if (pointer || procptr)\n     {\n@@ -4023,6 +4027,7 @@ gfc_conv_initializer (gfc_expr * expr, gfc_typespec * ts, tree type,\n \t  gfc_init_se (&se, NULL);\n \t  se.want_pointer = 1;\n \t  gfc_conv_expr (&se, expr);\n+          gcc_assert (TREE_CODE (se.expr) != CONSTRUCTOR);\n \t  return se.expr;\n \t}\n     }\n@@ -4037,14 +4042,21 @@ gfc_conv_initializer (gfc_expr * expr, gfc_typespec * ts, tree type,\n \t    gfc_conv_structure (&se, gfc_class_null_initializer(ts), 1);\n \t  else\n \t    gfc_conv_structure (&se, expr, 1);\n+\t  gcc_assert (TREE_CODE (se.expr) == CONSTRUCTOR);\n+\t  TREE_STATIC (se.expr) = 1;\n \t  return se.expr;\n \n \tcase BT_CHARACTER:\n-\t  return gfc_conv_string_init (ts->u.cl->backend_decl,expr);\n+\t  {\n+\t    tree ctor = gfc_conv_string_init (ts->u.cl->backend_decl,expr);\n+\t    TREE_STATIC (ctor) = 1;\n+\t    return ctor;\n+\t  }\n \n \tdefault:\n \t  gfc_init_se (&se, NULL);\n \t  gfc_conv_constant (&se, expr);\n+\t  gcc_assert (TREE_CODE (se.expr) != CONSTRUCTOR);\n \t  return se.expr;\n \t}\n     }"}]}