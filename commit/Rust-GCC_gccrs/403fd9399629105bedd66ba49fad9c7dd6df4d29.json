{"sha": "403fd9399629105bedd66ba49fad9c7dd6df4d29", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDAzZmQ5Mzk5NjI5MTA1YmVkZDY2YmE0OWZhZDljN2RkNmRmNGQyOQ==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2007-12-03T16:01:57Z"}, "committer": {"name": "Samuel Tardieu", "email": "sam@gcc.gnu.org", "date": "2007-12-03T16:01:57Z"}, "message": "re PR ada/34287 (Simple Ada bug [Barnes' Silly])\n\n2007-12-03  Robert Dewar <dewar@adacore.com>\n            Samuel Tardieu  <sam@rfc1149.net>\n\n        gcc/ada/\n    \tPR ada/34287\n    \t* sem_util.adb (Safe_To_Capture_Value): Do not capture values\n    \tof variables declared in a library-level package.\n    \n        gcc/testsuite/gnat.dg/\n    \tPR ada/34287\n    \t* check_elaboration_code.adb: New test.\n    \n    \t* bug_elaboration_code.ads, bug_elaboration_code.adb: New support\n    \tfiles.\n\nCo-Authored-By: Samuel Tardieu <sam@rfc1149.net>\n\nFrom-SVN: r130582", "tree": {"sha": "e42c486df579d12939520a69045db49086f57887", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e42c486df579d12939520a69045db49086f57887"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/403fd9399629105bedd66ba49fad9c7dd6df4d29", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/403fd9399629105bedd66ba49fad9c7dd6df4d29", "html_url": "https://github.com/Rust-GCC/gccrs/commit/403fd9399629105bedd66ba49fad9c7dd6df4d29", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/403fd9399629105bedd66ba49fad9c7dd6df4d29/comments", "author": null, "committer": null, "parents": [{"sha": "69b3331e2ae2122a638e373bb858c2d9b1b94f3b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69b3331e2ae2122a638e373bb858c2d9b1b94f3b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69b3331e2ae2122a638e373bb858c2d9b1b94f3b"}], "stats": {"total": 51, "additions": 50, "deletions": 1}, "files": [{"sha": "54f3d5c94629d00cfd658254efb9c1486927e98d", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/403fd9399629105bedd66ba49fad9c7dd6df4d29/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/403fd9399629105bedd66ba49fad9c7dd6df4d29/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=403fd9399629105bedd66ba49fad9c7dd6df4d29", "patch": "@@ -1,3 +1,10 @@\n+2007-12-03  Robert Dewar <dewar@adacore.com>\n+            Samuel Tardieu  <sam@rfc1149.net>\n+\n+    \tPR ada/34287\n+    \t* sem_util.adb (Safe_To_Capture_Value): Do not capture values\n+    \tof variables declared in a library-level package.\n+    \n 2007-12-02  Samuel Tardieu  <sam@rfc1149.net>\n \n \t* clean.adb (Clean_Library_Directory): Use Empty_String'Access intead"}, {"sha": "600a7bf88188bb0c4dd7acef9e457e1989ca48be", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/403fd9399629105bedd66ba49fad9c7dd6df4d29/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/403fd9399629105bedd66ba49fad9c7dd6df4d29/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=403fd9399629105bedd66ba49fad9c7dd6df4d29", "patch": "@@ -8583,12 +8583,16 @@ package body Sem_Util is\n \n       --  Skip if volatile or aliased, since funny things might be going on in\n       --  these cases which we cannot necessarily track. Also skip any variable\n-      --  for which an address clause is given, or whose address is taken.\n+      --  for which an address clause is given, or whose address is taken. Also\n+      --  never capture value of library level variables (an attempt to do so\n+      --  can occur in the case of package elaboration code).\n \n       if Treat_As_Volatile (Ent)\n         or else Is_Aliased (Ent)\n         or else Present (Address_Clause (Ent))\n         or else Address_Taken (Ent)\n+        or else (Is_Library_Level_Entity (Ent)\n+                   and then Ekind (Ent) = E_Variable)\n       then\n          return False;\n       end if;"}, {"sha": "2dd999b3ea087758ddc1e378bcdfd51a50a7e62d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/403fd9399629105bedd66ba49fad9c7dd6df4d29/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/403fd9399629105bedd66ba49fad9c7dd6df4d29/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=403fd9399629105bedd66ba49fad9c7dd6df4d29", "patch": "@@ -1,3 +1,12 @@\n+2007-12-03  Robert Dewar <dewar@adacore.com>\n+            Samuel Tardieu  <sam@rfc1149.net>\n+\n+    \tPR ada/34287\n+    \t* check_elaboration_code.adb: New test.\n+    \n+    \t* bug_elaboration_code.ads, bug_elaboration_code.adb: New support\n+    \tfiles.\n+\n 2007-12-02  Paolo Carlini  <pcarlini@suse.de>\n \n         PR c++/34061"}, {"sha": "0aa7abe808a6150122b6990ddc683684f6b3a5d4", "filename": "gcc/testsuite/gnat.dg/bug_elaboration_code.adb", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/403fd9399629105bedd66ba49fad9c7dd6df4d29/gcc%2Ftestsuite%2Fgnat.dg%2Fbug_elaboration_code.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/403fd9399629105bedd66ba49fad9c7dd6df4d29/gcc%2Ftestsuite%2Fgnat.dg%2Fbug_elaboration_code.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fbug_elaboration_code.adb?ref=403fd9399629105bedd66ba49fad9c7dd6df4d29", "patch": "@@ -0,0 +1,12 @@\n+package body Bug_Elaboration_Code is\n+\n+   procedure Increment_I is\n+   begin\n+      I := I + 1;\n+   end Increment_I;\n+\n+begin\n+   I := 5;\n+   Increment_I;\n+   J := I;\n+end Bug_Elaboration_Code;"}, {"sha": "7354dcb249e9b21445299ef04cf717b6ddf4bcae", "filename": "gcc/testsuite/gnat.dg/bug_elaboration_code.ads", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/403fd9399629105bedd66ba49fad9c7dd6df4d29/gcc%2Ftestsuite%2Fgnat.dg%2Fbug_elaboration_code.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/403fd9399629105bedd66ba49fad9c7dd6df4d29/gcc%2Ftestsuite%2Fgnat.dg%2Fbug_elaboration_code.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fbug_elaboration_code.ads?ref=403fd9399629105bedd66ba49fad9c7dd6df4d29", "patch": "@@ -0,0 +1,8 @@\n+package Bug_Elaboration_Code is\n+\n+   pragma Elaborate_Body;\n+\n+   I : Integer;\n+   J : Integer;\n+\n+end Bug_Elaboration_Code;"}, {"sha": "63dde56f23a910577e0eb7104139abc7853667dd", "filename": "gcc/testsuite/gnat.dg/check_elaboration_code.adb", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/403fd9399629105bedd66ba49fad9c7dd6df4d29/gcc%2Ftestsuite%2Fgnat.dg%2Fcheck_elaboration_code.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/403fd9399629105bedd66ba49fad9c7dd6df4d29/gcc%2Ftestsuite%2Fgnat.dg%2Fcheck_elaboration_code.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fcheck_elaboration_code.adb?ref=403fd9399629105bedd66ba49fad9c7dd6df4d29", "patch": "@@ -0,0 +1,9 @@\n+-- { dg-do run }\n+with Bug_Elaboration_Code; use Bug_Elaboration_Code;\n+\n+procedure Check_Elaboration_Code is\n+begin\n+   if I /= J then\n+      raise Program_Error;\n+   end if;\n+end Check_Elaboration_Code;"}]}