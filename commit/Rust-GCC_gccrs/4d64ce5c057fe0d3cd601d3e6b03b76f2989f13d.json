{"sha": "4d64ce5c057fe0d3cd601d3e6b03b76f2989f13d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGQ2NGNlNWMwNTdmZTBkM2NkNjAxZDNlNmIwM2I3NmYyOTg5ZjEzZA==", "commit": {"author": {"name": "Vladimir Makarov", "email": "vmakarov@redhat.com", "date": "2012-10-31T18:41:18Z"}, "committer": {"name": "Vladimir Makarov", "email": "vmakarov@gcc.gnu.org", "date": "2012-10-31T18:41:18Z"}, "message": "re PR middle-end/55150 (Crash in copy_rtx)\n\n2012-10-31  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR middle-end/55150\n\t* lra-constraints.c (lra_constraints): Update debug insn info\n\tafter equivalence change.\n\n2012-10-31  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR middle-end/55150\n\t* gcc.dg/pr55150.c: New test.\n\nFrom-SVN: r193042", "tree": {"sha": "3e02f59377384f980ac643dbcb3e0b7229497f7e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3e02f59377384f980ac643dbcb3e0b7229497f7e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4d64ce5c057fe0d3cd601d3e6b03b76f2989f13d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d64ce5c057fe0d3cd601d3e6b03b76f2989f13d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d64ce5c057fe0d3cd601d3e6b03b76f2989f13d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d64ce5c057fe0d3cd601d3e6b03b76f2989f13d/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2d98d2b4f904f4d9bb70f0619bc1a3d3e1aa9e4e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d98d2b4f904f4d9bb70f0619bc1a3d3e1aa9e4e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d98d2b4f904f4d9bb70f0619bc1a3d3e1aa9e4e"}], "stats": {"total": 88, "additions": 87, "deletions": 1}, "files": [{"sha": "c9348ca184a621864c8784ec253e028f7017b6e5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d64ce5c057fe0d3cd601d3e6b03b76f2989f13d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d64ce5c057fe0d3cd601d3e6b03b76f2989f13d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4d64ce5c057fe0d3cd601d3e6b03b76f2989f13d", "patch": "@@ -1,3 +1,9 @@\n+2012-10-31  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR middle-end/55150\n+\t* lra-constraints.c (lra_constraints): Update debug insn info\n+\tafter equivalence change.\n+\n 2012-10-31  Jan Hubicka  <jh@suse.cz>\n \n \t* ipa-inline.c (ipa_inline): Avoid infinite loop on inlining"}, {"sha": "cd0325b8bf4c98cb08f738073809636b09248b51", "filename": "gcc/lra-constraints.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d64ce5c057fe0d3cd601d3e6b03b76f2989f13d/gcc%2Flra-constraints.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d64ce5c057fe0d3cd601d3e6b03b76f2989f13d/gcc%2Flra-constraints.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-constraints.c?ref=4d64ce5c057fe0d3cd601d3e6b03b76f2989f13d", "patch": "@@ -3343,7 +3343,10 @@ lra_constraints (bool first_p)\n \t     pseudo to the equivalent value if necessary.  */\n \t  curr_id = lra_get_insn_recog_data (curr_insn);\n \t  if (debug_loc_equivalence_change_p (curr_id->operand_loc[0]))\n-\t    changed_p = true;\n+\t    {\n+\t      lra_update_insn_regno_info (curr_insn);\n+\t      changed_p = true;\n+\t    }\n \t}\n       else if (INSN_P (curr_insn))\n \t{"}, {"sha": "9bc92dfaf1e0dbf67a03b646e7cfd4ec7137849a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d64ce5c057fe0d3cd601d3e6b03b76f2989f13d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d64ce5c057fe0d3cd601d3e6b03b76f2989f13d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4d64ce5c057fe0d3cd601d3e6b03b76f2989f13d", "patch": "@@ -1,3 +1,8 @@\n+2012-10-31  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR middle-end/55150\n+\t* gcc.dg/pr55150.c: New test.\n+\n 2012-10-31  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/55134"}, {"sha": "b2bf357fdff5f820ac589ec9b4d9ef4d53eee2d4", "filename": "gcc/testsuite/gcc.dg/pr55150.c", "status": "added", "additions": 72, "deletions": 0, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d64ce5c057fe0d3cd601d3e6b03b76f2989f13d/gcc%2Ftestsuite%2Fgcc.dg%2Fpr55150.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d64ce5c057fe0d3cd601d3e6b03b76f2989f13d/gcc%2Ftestsuite%2Fgcc.dg%2Fpr55150.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr55150.c?ref=4d64ce5c057fe0d3cd601d3e6b03b76f2989f13d", "patch": "@@ -0,0 +1,72 @@\n+/* PR middle-end/55150 */\n+/* { dg-do compile } */\n+/* { dg-options \"-Os -g\" } */\n+\n+typedef unsigned int KEY_TABLE_TYPE[(272 / 4)];\n+  typedef unsigned int u32;\n+  typedef unsigned char u8;\n+  static const u32 Camellia_SBOX[][256] = {\n+  };\n+   static const u32 SIGMA[] = {\n+    0xa09e667f, 0x3bcc908b, 0xb67ae858, 0x4caa73b2, 0xc6ef372f, 0xe94f82be,     0x54ff53a5, 0xf1d36f1c, 0x10e527fa, 0xde682d1d, 0xb05688c2, 0xb3e6c1fd };\n+   int Camellia_Ekeygen (int keyBitLength, const u8 * rawKey, KEY_TABLE_TYPE k) {\n+    register u32 s0, s1, s2, s3;\n+    k[0] = s0 = (    \t {\n+    \t u32 r = *(const u32 *) (rawKey);\n+  r;\n+ }\n+    );\n+    k[2] = s2 = (\t\t{\n+    \t u32 r = *(const u32 *) (rawKey + 8);\n+  r;\n+ }\n+    );\n+    k[3] = s3 = (\t\t{\n+    \t u32 r = *(const u32 *) (rawKey + 12);\n+  r;\n+ }\n+    );\n+    if (keyBitLength != 128)     {\n+        k[8] = s0 = ( \t\t     {\n+  \t         u32 r = *(const u32 *) (rawKey + 16);\n+  r;\n+ }\n+        );\n+        if (keyBitLength == 192)\t{\n+  \t  k[10] = s2 = ~s0;\n+  \t    k[11] = s3 = ~s1;\n+  \t    }\n+      }\n+    s0 ^= k[0], s1 ^= k[1], s2 ^= k[2], s3 ^= k[3];\n+    if (keyBitLength == 128)     {\n+        k[4] = s0, k[5] = s1, k[6] = s2, k[7] = s3;\n+      }\n+    else     {\n+        k[12] = s0, k[13] = s1, k[14] = s2, k[15] = s3;\n+        s0 ^= k[8], s1 ^= k[9], s2 ^= k[10], s3 ^= k[11];\n+        do    {\n+  \t  register u32 _t0, _t1, _t2, _t3;\n+  \t    _t0 = s2 ^ ((SIGMA + 10))[0];\n+  \t      _t3 ^= Camellia_SBOX[3][(_t0 >> 8) & 0xff];\n+  \t        s1 ^= _t3;\n+  \t\t}\n+        while (0);\n+        do    {\n+  \t  u32 _t0 = s0 >> (32 - 30);\n+  \t    s2 = (s2 << 30) | (s3 >> (32 - 30));\n+  \t      s3 = (s3 << 30) | _t0;\n+  \t      }\n+        while (0);\n+        k[40] = s0, k[41] = s1, k[42] = s2, k[43] = s3;\n+        k[64] = s1, k[65] = s2, k[66] = s3, k[67] = s0;\n+        s0 = k[8], s1 = k[9], s2 = k[10], s3 = k[11];\n+        k[36] = s0, k[37] = s1, k[38] = s2, k[39] = s3;\n+        s0 = k[12], s1 = k[13], s2 = k[14], s3 = k[15];\n+        do   {\n+  \t  s1 = (s1 << 15) | (s2 >> (32 - 15));\n+  \t  }\n+        while (0);\n+        k[12] = s0, k[13] = s1, k[14] = s2, k[15] = s3;\n+        k[44] = s1, k[45] = s2, k[46] = s3, k[47] = s0;\n+      }\n+  }"}]}