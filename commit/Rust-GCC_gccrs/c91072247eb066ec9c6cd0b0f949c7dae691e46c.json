{"sha": "c91072247eb066ec9c6cd0b0f949c7dae691e46c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzkxMDcyMjQ3ZWIwNjZlYzljNmNkMGIwZjk0OWM3ZGFlNjkxZTQ2Yw==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2020-01-23T18:28:23Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2020-01-23T18:28:23Z"}, "message": "Fix \"PR c++/92804 ICE trying to use concept as a nested-name-specifier\"\n\nA rather simple ICE where we failed to properly check for concept-ids\nuses in nested-name-specifiers.\n\nTested x86_64-linux.\n\n       /cp\n       PR c++/92804\n       * parser.c (cp_parser_nested_name_specifier_opt): Properly\n       diagnose concept-ids.\n\n       /testsuite\n       PR c++/92804\n       * g++.dg/concepts/pr92804-1.C: New.\n       * g++.dg/concepts/pr92804-2.C: New.", "tree": {"sha": "6d019e1440addfdab8a7e8611a0b287df5576a6f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6d019e1440addfdab8a7e8611a0b287df5576a6f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c91072247eb066ec9c6cd0b0f949c7dae691e46c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c91072247eb066ec9c6cd0b0f949c7dae691e46c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c91072247eb066ec9c6cd0b0f949c7dae691e46c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c91072247eb066ec9c6cd0b0f949c7dae691e46c/comments", "author": null, "committer": null, "parents": [{"sha": "6f346913f2a87e26c6095d9fbf3d20f926c5470a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f346913f2a87e26c6095d9fbf3d20f926c5470a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f346913f2a87e26c6095d9fbf3d20f926c5470a"}], "stats": {"total": 73, "additions": 67, "deletions": 6}, "files": [{"sha": "c01becefe879b1fd208f5534f71b1fa254a6a904", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c91072247eb066ec9c6cd0b0f949c7dae691e46c/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c91072247eb066ec9c6cd0b0f949c7dae691e46c/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=c91072247eb066ec9c6cd0b0f949c7dae691e46c", "patch": "@@ -1,3 +1,9 @@\n+2020-01-23  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/92804\n+\t* parser.c (cp_parser_nested_name_specifier_opt): Properly\n+\tdiagnose concept-ids.\n+\n 2020-01-23  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/93331 - ICE with __builtin_strchr."}, {"sha": "72037ee7b46ab6c31d62d54e3c3f805149acb6cf", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 17, "deletions": 6, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c91072247eb066ec9c6cd0b0f949c7dae691e46c/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c91072247eb066ec9c6cd0b0f949c7dae691e46c/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=c91072247eb066ec9c6cd0b0f949c7dae691e46c", "patch": "@@ -6467,16 +6467,27 @@ cp_parser_nested_name_specifier_opt (cp_parser *parser,\n \t\t      tree fns = get_fns (tid);\n \t\t      if (OVL_SINGLE_P (fns))\n \t\t\ttmpl = OVL_FIRST (fns);\n-\t\t      error_at (token->location, \"function template-id %qD \"\n-\t\t\t\t\"in nested-name-specifier\", tid);\n+\t\t      if (function_concept_p (fns))\n+\t\t\terror_at (token->location, \"concept-id %qD \"\n+\t\t\t\t  \"in nested-name-specifier\", tid);\n+\t\t      else\n+\t\t\terror_at (token->location, \"function template-id \"\n+\t\t\t\t  \"%qD in nested-name-specifier\", tid);\n \t\t    }\n \t\t  else\n \t\t    {\n-\t\t      /* Variable template.  */\n \t\t      tmpl = TREE_OPERAND (tid, 0);\n-\t\t      gcc_assert (variable_template_p (tmpl));\n-\t\t      error_at (token->location, \"variable template-id %qD \"\n-\t\t\t\t\"in nested-name-specifier\", tid);\n+\t\t      if (variable_concept_p (tmpl)\n+\t\t\t  || standard_concept_p (tmpl))\n+\t\t\terror_at (token->location, \"concept-id %qD \"\n+\t\t\t\t  \"in nested-name-specifier\", tid);\n+\t\t      else\n+\t\t\t{\n+\t\t\t  /* Variable template.  */\n+\t\t\t  gcc_assert (variable_template_p (tmpl));\n+\t\t\t  error_at (token->location, \"variable template-id \"\n+\t\t\t\t    \"%qD in nested-name-specifier\", tid);\n+\t\t\t}\n \t\t    }\n \t\t  if (tmpl)\n \t\t    inform (DECL_SOURCE_LOCATION (tmpl),"}, {"sha": "93fb3be2bb012655a3ecabdf2999ad4dd7470987", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c91072247eb066ec9c6cd0b0f949c7dae691e46c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c91072247eb066ec9c6cd0b0f949c7dae691e46c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c91072247eb066ec9c6cd0b0f949c7dae691e46c", "patch": "@@ -1,3 +1,9 @@\n+2020-01-23  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/92804\n+\t* g++.dg/concepts/pr92804-1.C: New.\n+\t* g++.dg/concepts/pr92804-2.C: Likewise.\n+\n 2020-01-23  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR analyzer/93375"}, {"sha": "cc21426bb9e029a79af6e46a7c709ff63a781197", "filename": "gcc/testsuite/g++.dg/concepts/pr92804-1.C", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c91072247eb066ec9c6cd0b0f949c7dae691e46c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr92804-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c91072247eb066ec9c6cd0b0f949c7dae691e46c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr92804-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr92804-1.C?ref=c91072247eb066ec9c6cd0b0f949c7dae691e46c", "patch": "@@ -0,0 +1,19 @@\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n+\n+template<typename T>\n+concept foo = true;  // { dg-message \"declared here\" }\n+\n+template<typename T>\n+void bar(T t)\n+{\n+  if constexpr (foo<T>::value)  // { dg-error \"17:concept-id .foo<T>. in nested-name-specifier\" }\n+  // { dg-error \"expected|value\" \"\" { target c++17 } .-1 }\n+  {\n+  }\n+}\n+\n+int main()\n+{\n+  bar(1);\n+}"}, {"sha": "32a15543310e037ee00b04e6a59c8156eb81b4bd", "filename": "gcc/testsuite/g++.dg/concepts/pr92804-2.C", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c91072247eb066ec9c6cd0b0f949c7dae691e46c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr92804-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c91072247eb066ec9c6cd0b0f949c7dae691e46c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr92804-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr92804-2.C?ref=c91072247eb066ec9c6cd0b0f949c7dae691e46c", "patch": "@@ -0,0 +1,19 @@\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts-ts\" }\n+\n+template<typename T>\n+concept bool foo() { return true; };  // { dg-message \"declared here\" }\n+\n+template<typename T>\n+void bar(T t)\n+{\n+  if constexpr (foo<T>::value)  // { dg-error \"17:concept-id .foo<T>. in nested-name-specifier\" }\n+  // { dg-error \"expected|value\" \"\" { target *-*-* } .-1 }\n+  {\n+  }\n+}\n+\n+int main()\n+{\n+  bar(1);\n+}"}]}