{"sha": "6bf92cb6097c0efb59cab150cf308322256fb28c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmJmOTJjYjYwOTdjMGVmYjU5Y2FiMTUwY2YzMDgzMjIyNTZmYjI4Yw==", "commit": {"author": {"name": "Giovanni Bajo", "email": "giovannibajo@gcc.gnu.org", "date": "2004-02-26T20:46:08Z"}, "committer": {"name": "Giovanni Bajo", "email": "giovannibajo@gcc.gnu.org", "date": "2004-02-26T20:46:08Z"}, "message": "re PR c++/14284 (Failure to select obvious template specialisation)\n\n\tPR c++/14284\n\t* pt.c (dependent_type_p_r): A template template parameter is a\n\tdependent type.\n\n\tPR c++/14284\n\t* g++.dg/template/ttp8.C: New test.\n\nFrom-SVN: r78522", "tree": {"sha": "4387885e1548bea06acff84b1d2f402607a8a27c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4387885e1548bea06acff84b1d2f402607a8a27c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6bf92cb6097c0efb59cab150cf308322256fb28c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6bf92cb6097c0efb59cab150cf308322256fb28c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6bf92cb6097c0efb59cab150cf308322256fb28c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6bf92cb6097c0efb59cab150cf308322256fb28c/comments", "author": {"login": "rasky", "id": 1014109, "node_id": "MDQ6VXNlcjEwMTQxMDk=", "avatar_url": "https://avatars.githubusercontent.com/u/1014109?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rasky", "html_url": "https://github.com/rasky", "followers_url": "https://api.github.com/users/rasky/followers", "following_url": "https://api.github.com/users/rasky/following{/other_user}", "gists_url": "https://api.github.com/users/rasky/gists{/gist_id}", "starred_url": "https://api.github.com/users/rasky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rasky/subscriptions", "organizations_url": "https://api.github.com/users/rasky/orgs", "repos_url": "https://api.github.com/users/rasky/repos", "events_url": "https://api.github.com/users/rasky/events{/privacy}", "received_events_url": "https://api.github.com/users/rasky/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rasky", "id": 1014109, "node_id": "MDQ6VXNlcjEwMTQxMDk=", "avatar_url": "https://avatars.githubusercontent.com/u/1014109?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rasky", "html_url": "https://github.com/rasky", "followers_url": "https://api.github.com/users/rasky/followers", "following_url": "https://api.github.com/users/rasky/following{/other_user}", "gists_url": "https://api.github.com/users/rasky/gists{/gist_id}", "starred_url": "https://api.github.com/users/rasky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rasky/subscriptions", "organizations_url": "https://api.github.com/users/rasky/orgs", "repos_url": "https://api.github.com/users/rasky/repos", "events_url": "https://api.github.com/users/rasky/events{/privacy}", "received_events_url": "https://api.github.com/users/rasky/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "48c0150c2318a3c1b0f00d45017733fa89d7a9d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48c0150c2318a3c1b0f00d45017733fa89d7a9d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/48c0150c2318a3c1b0f00d45017733fa89d7a9d0"}], "stats": {"total": 34, "additions": 32, "deletions": 2}, "files": [{"sha": "affca567d3aa56d9ddef6a48b9871b4713eefe2c", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bf92cb6097c0efb59cab150cf308322256fb28c/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bf92cb6097c0efb59cab150cf308322256fb28c/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=6bf92cb6097c0efb59cab150cf308322256fb28c", "patch": "@@ -1,3 +1,9 @@\n+2004-02-26  Giovanni Bajo  <giovannibajo@gcc.gnu.org>\n+\n+\tPR c++/14284\n+\t* pt.c (dependent_type_p_r): A template template parameter is a\n+\tdependent type.\n+\n 2004-02-26  Giovanni Bajo  <giovannibajo@gcc.gnu.org>\n \n \tPR c++/14246"}, {"sha": "7a08edaf7791f1d5da8625903e327813fa7ae492", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bf92cb6097c0efb59cab150cf308322256fb28c/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bf92cb6097c0efb59cab150cf308322256fb28c/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=6bf92cb6097c0efb59cab150cf308322256fb28c", "patch": "@@ -11544,8 +11544,11 @@ dependent_type_p_r (tree type)\n \n      A type is dependent if it is:\n \n-     -- a template parameter.  */\n-  if (TREE_CODE (type) == TEMPLATE_TYPE_PARM)\n+     -- a template parameter. Template template parameters are\n+\ttypes for us (since TYPE_P holds true for them) so we\n+\thandle them here.  */\n+  if (TREE_CODE (type) == TEMPLATE_TYPE_PARM \n+      || TREE_CODE (type) == TEMPLATE_TEMPLATE_PARM)\n     return true;\n   /* -- a qualified-id with a nested-name-specifier which contains a\n         class-name that names a dependent type or whose unqualified-id"}, {"sha": "f66cd592f96daf0baef47588fc1a006b73b5a889", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bf92cb6097c0efb59cab150cf308322256fb28c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bf92cb6097c0efb59cab150cf308322256fb28c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6bf92cb6097c0efb59cab150cf308322256fb28c", "patch": "@@ -1,3 +1,8 @@\n+2004-02-26  Giovanni Bajo  <giovannibajo@gcc.gnu.org>\n+\n+\tPR c++/14284\n+\t* g++.dg/template/ttp8.C: New test.\n+\n 2004-02-26  Eric Botcazou  <ebotcazou@act-europe.fr>\n \n \t* gcc.dg/fixuns-trunc-1.c: New test."}, {"sha": "99f99b965a1c91467acd0783c411c21169eb5a0f", "filename": "gcc/testsuite/g++.dg/template/ttp8.C", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bf92cb6097c0efb59cab150cf308322256fb28c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fttp8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bf92cb6097c0efb59cab150cf308322256fb28c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fttp8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fttp8.C?ref=6bf92cb6097c0efb59cab150cf308322256fb28c", "patch": "@@ -0,0 +1,16 @@\n+// { dg-do compile }\n+// Contributed by: Niall Douglas <s_gccbugzilla at netprod dot com>\n+// PR c++/14284: Failure to select specialization \n+\n+template<typename> struct S; \n+template<template<class> class> struct I {}; \n+ \n+template<class, int> struct Match; \n+ \n+template<template<class> class C> \n+struct Match<I<C>, 0> {}; \n+ \n+template<template<class> class C, int i> \n+struct Match<I<C>, i>; \n+ \n+Match<I<S>, 0> v; "}]}