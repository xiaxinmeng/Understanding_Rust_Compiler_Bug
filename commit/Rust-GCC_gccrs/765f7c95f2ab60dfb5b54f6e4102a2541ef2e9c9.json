{"sha": "765f7c95f2ab60dfb5b54f6e4102a2541ef2e9c9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzY1ZjdjOTVmMmFiNjBkZmI1YjU0ZjZlNDEwMmEyNTQxZWYyZTljOQ==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2008-05-21T06:31:37Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2008-05-21T06:31:37Z"}, "message": "memops-asm.c: Set inside_main.\n\n\t* gcc.c-torture/execute/builtins/memops-asm.c: Set inside_main.\n\n\t* lib/gcc-dg.exp (cleanup-saved-temps): Add optional list of\n\tsuffixes not to delete.\n\t* gcc.dg/pch/save-temps-1.c: Don't delete \".s\" temp.\n\t* g++.dg/pch/pch.C: Likewise.\n\n\t* g++.old-deja/g++.pt/static11.C: Replace xfail by target requirement.\n\n\t* lib/dg-pch.exp (dg-pch): Don't expect .s files if there are\n\tdg-errors expected.\n\nFrom-SVN: r135708", "tree": {"sha": "68a90f1fb9c6ecce38c9825039ccf7c444e6b4da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/68a90f1fb9c6ecce38c9825039ccf7c444e6b4da"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/765f7c95f2ab60dfb5b54f6e4102a2541ef2e9c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/765f7c95f2ab60dfb5b54f6e4102a2541ef2e9c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/765f7c95f2ab60dfb5b54f6e4102a2541ef2e9c9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/765f7c95f2ab60dfb5b54f6e4102a2541ef2e9c9/comments", "author": null, "committer": null, "parents": [{"sha": "32723ea0f97141dcc859af08906a52c7ddcc7278", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32723ea0f97141dcc859af08906a52c7ddcc7278", "html_url": "https://github.com/Rust-GCC/gccrs/commit/32723ea0f97141dcc859af08906a52c7ddcc7278"}], "stats": {"total": 94, "additions": 66, "deletions": 28}, "files": [{"sha": "0267b43ff9ebf0487c72d559672b06c8e4275fd5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/765f7c95f2ab60dfb5b54f6e4102a2541ef2e9c9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/765f7c95f2ab60dfb5b54f6e4102a2541ef2e9c9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=765f7c95f2ab60dfb5b54f6e4102a2541ef2e9c9", "patch": "@@ -1,3 +1,17 @@\n+2008-05-20  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* gcc.c-torture/execute/builtins/memops-asm.c: Set inside_main.\n+\n+\t* lib/gcc-dg.exp (cleanup-saved-temps): Add optional list of\n+\tsuffixes not to delete.\n+\t* gcc.dg/pch/save-temps-1.c: Don't delete \".s\" temp.\n+\t* g++.dg/pch/pch.C: Likewise.\n+\n+\t* g++.old-deja/g++.pt/static11.C: Replace xfail by target requirement.\n+\n+\t* lib/dg-pch.exp (dg-pch): Don't expect .s files if there are\n+\tdg-errors expected.\n+\n 2008-05-20  Janis Johnson  <janis187@us.ibm.com>\n \n \tPR testsuite/20771"}, {"sha": "9483efad0e246e07eb78ddd5eb0abc61f9e08ed7", "filename": "gcc/testsuite/g++.dg/pch/pch.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/765f7c95f2ab60dfb5b54f6e4102a2541ef2e9c9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpch%2Fpch.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/765f7c95f2ab60dfb5b54f6e4102a2541ef2e9c9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpch%2Fpch.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpch%2Fpch.C?ref=765f7c95f2ab60dfb5b54f6e4102a2541ef2e9c9", "patch": "@@ -6,4 +6,4 @@ int main()\n   return 0;\n }\n \n-// { dg-final { cleanup-saved-temps } }\n+// { dg-final { cleanup-saved-temps \".s\" } }"}, {"sha": "867436a65931ad05cffa5bcf5975608d91400ca8", "filename": "gcc/testsuite/g++.old-deja/g++.pt/static11.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/765f7c95f2ab60dfb5b54f6e4102a2541ef2e9c9/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fstatic11.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/765f7c95f2ab60dfb5b54f6e4102a2541ef2e9c9/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fstatic11.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fstatic11.C?ref=765f7c95f2ab60dfb5b54f6e4102a2541ef2e9c9", "patch": "@@ -2,7 +2,7 @@\n // in their dejagnu baseboard description) require that the status is\n // final when exit is entered (or main returns), and not \"overruled\" by a\n // destructor calling _exit.  It's not really worth it to handle that.\n-// { dg-do run { xfail mmix-knuth-mmixware arm*-*-elf arm*-*-eabi m68k-*-elf } }\n+// { dg-do run { target unwrapped } }\n \n // Bug: g++ was failing to destroy C<int>::a because it was using two\n // different sentry variables for construction and destruction."}, {"sha": "ed2b06cf06f5a2f1c2329bd7566c70c0ccce9d52", "filename": "gcc/testsuite/gcc.c-torture/execute/builtins/memops-asm.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/765f7c95f2ab60dfb5b54f6e4102a2541ef2e9c9/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fmemops-asm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/765f7c95f2ab60dfb5b54f6e4102a2541ef2e9c9/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fmemops-asm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fmemops-asm.c?ref=765f7c95f2ab60dfb5b54f6e4102a2541ef2e9c9", "patch": "@@ -22,12 +22,16 @@ struct A { char c[32]; } a = { \"foobar\" };\n char x[64] = \"foobar\", y[64];\n int i = 39, j = 6, k = 4;\n \n+extern int inside_main;\n+\n void\n main_test (void)\n {\n   struct A b = a;\n   struct A c = { { 'x' } };\n \n+  inside_main = 1;\n+  \n   if (memcmp (b.c, x, 32) || c.c[0] != 'x' || memcmp (c.c + 1, x + 32, 31))\n     abort ();\n   if (__builtin_memcpy (y, x, i) != y || memcmp (x, y, 64))"}, {"sha": "9a5e7223c736cf360e663f8a4c7e6a417875429c", "filename": "gcc/testsuite/gcc.dg/pch/save-temps-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/765f7c95f2ab60dfb5b54f6e4102a2541ef2e9c9/gcc%2Ftestsuite%2Fgcc.dg%2Fpch%2Fsave-temps-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/765f7c95f2ab60dfb5b54f6e4102a2541ef2e9c9/gcc%2Ftestsuite%2Fgcc.dg%2Fpch%2Fsave-temps-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpch%2Fsave-temps-1.c?ref=765f7c95f2ab60dfb5b54f6e4102a2541ef2e9c9", "patch": "@@ -6,4 +6,4 @@\n #include <stddef.h>\n int x;\n \n-/* { dg-final { cleanup-saved-temps } } */\n+/* { dg-final { cleanup-saved-temps \".s\" } } */"}, {"sha": "60ec5046de13f453e85fe7d7f2a60ad4a7b3d1f8", "filename": "gcc/testsuite/lib/dg-pch.exp", "status": "modified", "additions": 29, "deletions": 20, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/765f7c95f2ab60dfb5b54f6e4102a2541ef2e9c9/gcc%2Ftestsuite%2Flib%2Fdg-pch.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/765f7c95f2ab60dfb5b54f6e4102a2541ef2e9c9/gcc%2Ftestsuite%2Flib%2Fdg-pch.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fdg-pch.exp?ref=765f7c95f2ab60dfb5b54f6e4102a2541ef2e9c9", "patch": "@@ -44,36 +44,45 @@ proc dg-pch { subdir test options suffix } {\n \t# For the rest, the default is to compile to .s.\n \tset dg-do-what-default compile\n \n+\tset have_errs [llength [grep $test \"{\\[ \\t\\]\\+dg-error\\[ \\t\\]\\+.*\\[ \\t\\]\\+}\"]]\n+\n \tif { [ file_on_host exists \"$bname$suffix.gch\" ] } {\n \t    # Ensure that the PCH file is used, not the original header.\n \t    file_on_host delete \"$bname$suffix\"\n \n \t    dg-test -keep-output $test \"$flags -I.\" \"\"\n \t    file_on_host delete \"$bname$suffix.gch\"\n-\t    if { [ file_on_host exists \"$bname.s\" ] } {\n-\t\tremote_upload host \"$bname.s\" \"$bname.s-gch\"\n-\t\tremote_download host \"$bname.s-gch\"\n-\t\tgcc_copy_files \"[file rootname $test]${suffix}s\" \"$bname$suffix\"\n-\t\tdg-test -keep-output $test $flags \"-I.\"\n-\t\tremote_upload host \"$bname.s\"\n-\t\tset tmp [ diff \"$bname.s\" \"$bname.s-gch\" ]\n-\t\tif { $tmp == 0 } {\n-\t\t    untested \"$nshort $flags assembly comparison\"\n-\t\t} elseif { $tmp == 1 } {\n-\t\t    pass \"$nshort $flags assembly comparison\"\n+\t    if { !$have_errs } {\n+\t\tif { [ file_on_host exists \"$bname.s\" ] } {\n+\t\t    remote_upload host \"$bname.s\" \"$bname.s-gch\"\n+\t\t    remote_download host \"$bname.s-gch\"\n+\t\t    gcc_copy_files \"[file rootname $test]${suffix}s\" \"$bname$suffix\"\n+\t\t    dg-test -keep-output $test $flags \"-I.\"\n+\t\t    remote_upload host \"$bname.s\"\n+\t\t    set tmp [ diff \"$bname.s\" \"$bname.s-gch\" ]\n+\t\t    if { $tmp == 0 } {\n+\t\t\tverbose -log \"assembly file '$bname.s', '$bname.s-gch' comparison error\"\n+\t\t\tfail \"$nshort $flags assembly comparison\"\n+\t\t    } elseif { $tmp == 1 } {\n+\t\t\tpass \"$nshort $flags assembly comparison\"\n+\t\t    } else {\n+\t\t\tfail \"$nshort $flags assembly comparison\"\n+\t\t    }\n+\t\t    file_on_host delete \"$bname$suffix\"\n+\t\t    file_on_host delete \"$bname.s\"\n+\t\t    file_on_host delete \"$bname.s-gch\"\n \t\t} else {\n-\t\t    fail \"$nshort $flags assembly comparison\"\n+\t\t    verbose -log \"assembly file '$bname.s' missing\"\n+ \t\t    fail \"$nshort $flags assembly comparison\"\n \t\t}\n-\t\tfile_on_host delete \"$bname$suffix\"\n-\t\tfile_on_host delete \"$bname.s\"\n-\t\tfile_on_host delete \"$bname.s-gch\"\n \t    } else {\n-\t\tuntested \"$nshort $flags assembly comparison\"\n+\t\tverbose -log \"assembly file '$bname$suffix.gch' missing\"\n+\t\tfail \"$nshort $flags\"\n+\t\tif { !$have_errs } {\n+\t\t    verbose -log \"assembly file '$bname.s' missing\" 1\n+\t\t    fail \"$nshort $flags assembly comparison\"\n+\t\t}\n \t    }\n-\n-\t} else {\n-\t    untested \"$nshort $flags\"\n-\t    untested \"$nshort $flags assembly comparison\"\n \t}\n     }\n }"}, {"sha": "9a3f12b5131e18b7114d4262edfeba9dc83d0f42", "filename": "gcc/testsuite/lib/gcc-dg.exp", "status": "modified", "additions": 16, "deletions": 5, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/765f7c95f2ab60dfb5b54f6e4102a2541ef2e9c9/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/765f7c95f2ab60dfb5b54f6e4102a2541ef2e9c9/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp?ref=765f7c95f2ab60dfb5b54f6e4102a2541ef2e9c9", "patch": "@@ -441,21 +441,32 @@ proc cleanup-dump { suffix } {\n #\n # Currently this is only .i, .ii and .s files, but more can be added\n # if there are tests generating them.\n-proc cleanup-saved-temps { } {\n+# ARGS is a list of suffixes to NOT delete.\n+proc cleanup-saved-temps { args } {\n     global additional_sources\n+    set suffixes {}\n+\n+    # add the to-be-kept suffixes\n+    foreach suffix {\".ii\" \".i\" \".s\"} {\n+\tif {[lsearch $args $suffix] < 0} {\n+\t    lappend suffixes $suffix\n+\t}\n+    }\n \n     # This assumes that we are two frames down from dg-test or some other proc\n     # that stores the filename of the testcase in a local variable \"name\".\n     # A cleaner solution would require a new DejaGnu release.\n     upvar 2 name testcase\n-    remove-build-file \"[file rootname [file tail $testcase]].ii\"\n-    remove-build-file \"[file rootname [file tail $testcase]].i\"\n+    foreach suffix $suffixes {\n+\tremove-build-file \"[file rootname [file tail $testcase]]$suffix\"\n+    }\n \n     # Clean up saved temp files for additional source files.\n     if [info exists additional_sources] {\n \tforeach srcfile $additional_sources {\n-            remove-build-file \"[file rootname [file tail $srcfile]].ii\"\n-            remove-build-file \"[file rootname [file tail $srcfile]].i\"\n+\t    foreach suffix $suffixes {\n+\t\tremove-build-file \"[file rootname [file tail $srcfile]]$suffix\"\n+\t    }\n \t}\n     }\n }"}]}