{"sha": "0076aa6bda29f13eade22a16783d6192d7a34498", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDA3NmFhNmJkYTI5ZjEzZWFkZTIyYTE2NzgzZDYxOTJkN2EzNDQ5OA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-04-13T12:45:41Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-04-13T12:45:41Z"}, "message": "(WINDOWS_NT): Provide default definition.\n\n(ASM_OUTPUT_INT): Use output_addr_const.\n(ASM_OUTPUT_ADDR_DIFF_ELT): Use .long for NT.\n\nFrom-SVN: r9370", "tree": {"sha": "075860706c1e5785ee714abea35fd148f9abd67c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/075860706c1e5785ee714abea35fd148f9abd67c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0076aa6bda29f13eade22a16783d6192d7a34498", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0076aa6bda29f13eade22a16783d6192d7a34498", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0076aa6bda29f13eade22a16783d6192d7a34498", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0076aa6bda29f13eade22a16783d6192d7a34498/comments", "author": null, "committer": null, "parents": [{"sha": "7daa56f55b690b94cebc80b2ef8a7d486dca2e21", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7daa56f55b690b94cebc80b2ef8a7d486dca2e21", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7daa56f55b690b94cebc80b2ef8a7d486dca2e21"}], "stats": {"total": 20, "additions": 15, "deletions": 5}, "files": [{"sha": "9a73de0bdd808863494678788fc64f12703a55be", "filename": "gcc/config/alpha/alpha.h", "status": "modified", "additions": 15, "deletions": 5, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0076aa6bda29f13eade22a16783d6192d7a34498/gcc%2Fconfig%2Falpha%2Falpha.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0076aa6bda29f13eade22a16783d6192d7a34498/gcc%2Fconfig%2Falpha%2Falpha.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.h?ref=0076aa6bda29f13eade22a16783d6192d7a34498", "patch": "@@ -69,6 +69,11 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n /* Print subsidiary information on the compiler version in use.  */\n #define TARGET_VERSION\n \n+/* Default this to not be compiling for Windows/NT.  */\n+#ifndef WINDOWS_NT\n+#define WINDOWS_NT 0\n+#endif\n+\n /* Define the location for the startup file on OSF/1 for Alpha.  */\n \n #define MD_STARTFILE_PREFIX \"/usr/lib/cmplrs/cc/\"\n@@ -333,7 +338,7 @@ extern int target_flags;\n    $28\t\t\t(likewise)\n    $0\t\t\t(likewise, but return value)\n    $21-$16\t\t(likewise, but input args)\n-   $27\t\t\t(procedure value)\n+   $27\t\t\t(procedure value in OSF, nonsaved in NT)\n    $9-$14\t\t(saved integer registers)\n    $26\t\t\t(return PC)\n    $15\t\t\t(frame pointer)\n@@ -1294,7 +1299,7 @@ extern char *current_function_name;\n    Do not define this if the table should contain absolute addresses.\n    On the Alpha, the table is really GP-relative, not relative to the PC\n    of the table, but we pretend that it is PC-relative; this should be OK,\n-   but we hsould try to find some better way sometime.  */\n+   but we should try to find some better way sometime.  */\n #define CASE_VECTOR_PC_RELATIVE\n \n /* Specify the tree operation to be used to convert reals to integers.  */\n@@ -1652,9 +1657,9 @@ literal_section ()\t\t\t\t\t\t\\\n /* This is how to output an assembler line defining an `int' constant.  */\n \n #define ASM_OUTPUT_INT(FILE,VALUE)  \t\t\\\n-  fprintf (FILE, \"\\t.long %d\\n\",\t\t\\\n-    (GET_CODE (VALUE) == CONST_INT\t\t\\\n-     ? INTVAL (VALUE) & 0xffffffff : (abort (), 0)))\n+( fprintf (FILE, \"\\t.long \"),\t\t\t\\\n+  output_addr_const (FILE, (VALUE)),\t\t\\\n+  fprintf (FILE, \"\\n\"))\n \n /* This is how to output an assembler line defining a `long' constant.  */\n \n@@ -1748,8 +1753,13 @@ literal_section ()\t\t\t\t\t\t\\\n \n /* This is how to output an element of a case-vector that is relative.  */\n \n+#if WINDOWS_NT\n+#define ASM_OUTPUT_ADDR_DIFF_ELT(FILE, VALUE, REL) \\\n+  fprintf (FILE, \"\\t.long $%d\\n\", (VALUE) + 32)\n+#else\n #define ASM_OUTPUT_ADDR_DIFF_ELT(FILE, VALUE, REL) \\\n   fprintf (FILE, \"\\t.gprel32 $%d\\n\", (VALUE) + 32)\n+#endif\n \n /* This is how to output an assembler line\n    that says to advance the location counter"}]}