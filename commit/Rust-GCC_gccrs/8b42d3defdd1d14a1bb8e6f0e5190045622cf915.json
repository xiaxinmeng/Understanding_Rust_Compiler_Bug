{"sha": "8b42d3defdd1d14a1bb8e6f0e5190045622cf915", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGI0MmQzZGVmZGQxZDE0YTFiYjhlNmYwZTUxOTAwNDU2MjJjZjkxNQ==", "commit": {"author": {"name": "Georg-Johann Lay", "email": "avr@gjlay.de", "date": "2011-11-07T18:07:56Z"}, "committer": {"name": "Georg-Johann Lay", "email": "gjl@gcc.gnu.org", "date": "2011-11-07T18:07:56Z"}, "message": "constraints.md (Cm2): New constraint for int -2.\n\n\t* config/avr/constraints.md (Cm2): New constraint for int -2.\n\t* config/avr/avr.md (addqi3): Use it. New alternatives for +/-2.\n\t(*negqihi2): New insn.\n\nFrom-SVN: r181103", "tree": {"sha": "4b1ba7d907dc39e9b8d861d513b4c7fb656834e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4b1ba7d907dc39e9b8d861d513b4c7fb656834e8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8b42d3defdd1d14a1bb8e6f0e5190045622cf915", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b42d3defdd1d14a1bb8e6f0e5190045622cf915", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b42d3defdd1d14a1bb8e6f0e5190045622cf915", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b42d3defdd1d14a1bb8e6f0e5190045622cf915/comments", "author": null, "committer": {"login": "sprintersb", "id": 8905355, "node_id": "MDQ6VXNlcjg5MDUzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8905355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sprintersb", "html_url": "https://github.com/sprintersb", "followers_url": "https://api.github.com/users/sprintersb/followers", "following_url": "https://api.github.com/users/sprintersb/following{/other_user}", "gists_url": "https://api.github.com/users/sprintersb/gists{/gist_id}", "starred_url": "https://api.github.com/users/sprintersb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sprintersb/subscriptions", "organizations_url": "https://api.github.com/users/sprintersb/orgs", "repos_url": "https://api.github.com/users/sprintersb/repos", "events_url": "https://api.github.com/users/sprintersb/events{/privacy}", "received_events_url": "https://api.github.com/users/sprintersb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6d87092d196c96ef596c7877b40409d00af6ee7a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d87092d196c96ef596c7877b40409d00af6ee7a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d87092d196c96ef596c7877b40409d00af6ee7a"}], "stats": {"total": 33, "additions": 27, "deletions": 6}, "files": [{"sha": "cea9a6cb0670fec4f5b84f38957d7e2f7f7970b7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b42d3defdd1d14a1bb8e6f0e5190045622cf915/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b42d3defdd1d14a1bb8e6f0e5190045622cf915/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8b42d3defdd1d14a1bb8e6f0e5190045622cf915", "patch": "@@ -1,3 +1,9 @@\n+2011-11-07  Georg-Johann Lay  <avr@gjlay.de>\n+\n+\t* config/avr/constraints.md (Cm2): New constraint for int -2.\n+\t* config/avr/avr.md (addqi3): Use it. New alternatives for +/-2.\n+\t(*negqihi2): New insn.\n+\n 2011-11-07  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* dwarf2cfi.c (dwarf2out_frame_debug_expr): Check"}, {"sha": "59330104fa00c06683b149ab5cfd81e4bbff2bf7", "filename": "gcc/config/avr/avr.md", "status": "modified", "additions": 16, "deletions": 6, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b42d3defdd1d14a1bb8e6f0e5190045622cf915/gcc%2Fconfig%2Favr%2Favr.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b42d3defdd1d14a1bb8e6f0e5190045622cf915/gcc%2Fconfig%2Favr%2Favr.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.md?ref=8b42d3defdd1d14a1bb8e6f0e5190045622cf915", "patch": "@@ -752,17 +752,19 @@\n ; add bytes\n \n (define_insn \"addqi3\"\n-  [(set (match_operand:QI 0 \"register_operand\" \"=r,d,r,r\")\n-        (plus:QI (match_operand:QI 1 \"register_operand\" \"%0,0,0,0\")\n-                 (match_operand:QI 2 \"nonmemory_operand\" \"r,i,P,N\")))]\n+  [(set (match_operand:QI 0 \"register_operand\"          \"=r,d,r,r,r,r\")\n+        (plus:QI (match_operand:QI 1 \"register_operand\" \"%0,0,0,0,0,0\")\n+                 (match_operand:QI 2 \"nonmemory_operand\" \"r,i,P,N,K,Cm2\")))]\n   \"\"\n   \"@\n \tadd %0,%2\n \tsubi %0,lo8(-(%2))\n \tinc %0\n-\tdec %0\"\n-  [(set_attr \"length\" \"1,1,1,1\")\n-   (set_attr \"cc\" \"set_czn,set_czn,set_zn,set_zn\")])\n+\tdec %0\n+\tinc %0\\;inc %0\n+\tdec %0\\;dec %0\"\n+  [(set_attr \"length\" \"1,1,1,1,2,2\")\n+   (set_attr \"cc\" \"set_czn,set_czn,set_zn,set_zn,set_zn,set_zn\")])\n \n \n (define_expand \"addhi3\"\n@@ -3386,6 +3388,14 @@\n   [(set_attr \"length\" \"1\")\n    (set_attr \"cc\" \"set_zn\")])\n \n+(define_insn \"*negqihi2\"\n+  [(set (match_operand:HI 0 \"register_operand\"                        \"=r\")\n+        (neg:HI (sign_extend:HI (match_operand:QI 1 \"register_operand\" \"0\"))))]\n+  \"\"\n+  \"clr %B0\\;neg %A0\\;brge .+2\\;com %B0\"\n+  [(set_attr \"length\" \"4\")\n+   (set_attr \"cc\" \"set_n\")])\n+\n (define_insn \"neghi2\"\n   [(set (match_operand:HI 0 \"register_operand\"       \"=!d,r,&r\")\n \t(neg:HI (match_operand:HI 1 \"register_operand\" \"0,0,r\")))]"}, {"sha": "50aae32b01a4a0012968e996c4f48270971dddb9", "filename": "gcc/config/avr/constraints.md", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b42d3defdd1d14a1bb8e6f0e5190045622cf915/gcc%2Fconfig%2Favr%2Fconstraints.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b42d3defdd1d14a1bb8e6f0e5190045622cf915/gcc%2Fconfig%2Favr%2Fconstraints.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Fconstraints.md?ref=8b42d3defdd1d14a1bb8e6f0e5190045622cf915", "patch": "@@ -103,6 +103,11 @@\n   (and (match_code \"mem\")\n        (match_test \"extra_constraint_Q (op)\")))\n \n+(define_constraint \"Cm2\"\n+  \"Constant integer @minus{}2.\"\n+  (and (match_code \"const_int\")\n+       (match_test \"ival == -2\")))\n+\n (define_constraint \"C03\"\n   \"Constant integer 3.\"\n   (and (match_code \"const_int\")"}]}