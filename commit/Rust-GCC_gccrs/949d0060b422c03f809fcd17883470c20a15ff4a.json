{"sha": "949d0060b422c03f809fcd17883470c20a15ff4a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTQ5ZDAwNjBiNDIyYzAzZjgwOWZjZDE3ODgzNDcwYzIwYTE1ZmY0YQ==", "commit": {"author": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2018-03-19T07:04:35Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2018-03-19T07:04:35Z"}, "message": "re PR fortran/84931 (Expansion of array constructor with constant implied-do-object goes sideways)\n\n2018-03-19  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/84931\n\t* simplify.c (gfc_convert_constant): Correctly handle iterators\n\tfor type conversion.\n\n2018-03-19  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/84931\n\t* gfortran.dg/array_constructor_52.f90: New test.\n\nFrom-SVN: r258641", "tree": {"sha": "a4debf79b5621aeb0c3992b8a9adc66491b0d25e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a4debf79b5621aeb0c3992b8a9adc66491b0d25e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/949d0060b422c03f809fcd17883470c20a15ff4a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/949d0060b422c03f809fcd17883470c20a15ff4a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/949d0060b422c03f809fcd17883470c20a15ff4a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/949d0060b422c03f809fcd17883470c20a15ff4a/comments", "author": null, "committer": null, "parents": [{"sha": "43bb589d9b79360168c9a4583fb90299a2cf94d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43bb589d9b79360168c9a4583fb90299a2cf94d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43bb589d9b79360168c9a4583fb90299a2cf94d8"}], "stats": {"total": 52, "additions": 40, "deletions": 12}, "files": [{"sha": "8db0754f4af837be598dcc344bc40a9ef38fa6b5", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/949d0060b422c03f809fcd17883470c20a15ff4a/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/949d0060b422c03f809fcd17883470c20a15ff4a/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=949d0060b422c03f809fcd17883470c20a15ff4a", "patch": "@@ -1,3 +1,9 @@\n+2018-03-19  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/84931\n+\t* simplify.c (gfc_convert_constant): Correctly handle iterators\n+\tfor type conversion.\n+\n 2018-03-18  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \tPR fortran/77414"}, {"sha": "44290ac2741c82ad187953075e7b426603c4f28b", "filename": "gcc/fortran/simplify.c", "status": "modified", "additions": 18, "deletions": 12, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/949d0060b422c03f809fcd17883470c20a15ff4a/gcc%2Ffortran%2Fsimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/949d0060b422c03f809fcd17883470c20a15ff4a/gcc%2Ffortran%2Fsimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fsimplify.c?ref=949d0060b422c03f809fcd17883470c20a15ff4a", "patch": "@@ -8016,26 +8016,32 @@ gfc_convert_constant (gfc_expr *e, bt type, int kind)\n \t{\n \t  gfc_expr *tmp;\n \t  if (c->iterator == NULL)\n-\t    tmp = f (c->expr, kind);\n+\t    {\n+\t      tmp = f (c->expr, kind);\n+\t      if (tmp == NULL)\n+\t\t{\n+\t\t  gfc_free_expr (result);\n+\t\t  return NULL;\n+\t\t}\n+\n+\t      gfc_constructor_append_expr (&result->value.constructor,\n+\t\t\t\t\t   tmp, &c->where);\n+\t    }\n \t  else\n \t    {\n+\t      gfc_constructor *n;\n \t      g = gfc_convert_constant (c->expr, type, kind);\n-\t      if (g == &gfc_bad_expr)\n+\t      if (g == NULL || g == &gfc_bad_expr)\n \t        {\n \t\t  gfc_free_expr (result);\n \t\t  return g;\n \t\t}\n-\t      tmp = g;\n-\t    }\n-\n-\t  if (tmp == NULL)\n-\t    {\n-\t      gfc_free_expr (result);\n-\t      return NULL;\n+\t      n = gfc_constructor_get ();\n+\t      n->expr = g;\n+\t      n->iterator = gfc_copy_iterator (c->iterator);\n+\t      n->where = c->where;\n+\t      gfc_constructor_append (&result->value.constructor, n);\n \t    }\n-\n-\t  gfc_constructor_append_expr (&result->value.constructor,\n-\t\t\t\t       tmp, &c->where);\n \t}\n \n       break;"}, {"sha": "cdce63d00634aa5714af21b564fb1584de351a60", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/949d0060b422c03f809fcd17883470c20a15ff4a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/949d0060b422c03f809fcd17883470c20a15ff4a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=949d0060b422c03f809fcd17883470c20a15ff4a", "patch": "@@ -1,3 +1,8 @@\n+2018-03-19  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/84931\n+\t* gfortran.dg/array_constructor_52.f90: New test.\n+\n 2018-03-17  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \tPR fortran/77414"}, {"sha": "63581acf9898deeb55402b73214906fa62c8f306", "filename": "gcc/testsuite/gfortran.dg/array_constructor_52.f90", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/949d0060b422c03f809fcd17883470c20a15ff4a/gcc%2Ftestsuite%2Fgfortran.dg%2Farray_constructor_52.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/949d0060b422c03f809fcd17883470c20a15ff4a/gcc%2Ftestsuite%2Fgfortran.dg%2Farray_constructor_52.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Farray_constructor_52.f90?ref=949d0060b422c03f809fcd17883470c20a15ff4a", "patch": "@@ -0,0 +1,11 @@\n+! { dg-do  run }\n+! PR 84931 - long array constructors with type conversion were not\n+! handled correctly.\n+program test\n+   implicit none\n+   integer, parameter :: n = 2**16\n+   real, dimension(n) :: y\n+   integer :: i\n+   y = (/ (1, i=1, n) /)\n+   if (y(2) /= 1) stop 1\n+end program test"}]}