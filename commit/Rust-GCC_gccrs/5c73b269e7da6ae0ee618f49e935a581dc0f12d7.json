{"sha": "5c73b269e7da6ae0ee618f49e935a581dc0f12d7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWM3M2IyNjllN2RhNmFlMGVlNjE4ZjQ5ZTkzNWE1ODFkYzBmMTJkNw==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-05-27T04:30:54Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-05-27T04:30:54Z"}, "message": "(convert_for_assignment): When allowing mixing of\nsigned and unsigned pointers, compare unsigned types not type sizes.\n\nFrom-SVN: r4580", "tree": {"sha": "d0e643611b79f6c47d82617bce33ba25fe249fe1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d0e643611b79f6c47d82617bce33ba25fe249fe1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5c73b269e7da6ae0ee618f49e935a581dc0f12d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c73b269e7da6ae0ee618f49e935a581dc0f12d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c73b269e7da6ae0ee618f49e935a581dc0f12d7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c73b269e7da6ae0ee618f49e935a581dc0f12d7/comments", "author": null, "committer": null, "parents": [{"sha": "fc1565060a2161c602d6b7bd277765d5fbd022bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc1565060a2161c602d6b7bd277765d5fbd022bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc1565060a2161c602d6b7bd277765d5fbd022bf"}], "stats": {"total": 13, "additions": 6, "deletions": 7}, "files": [{"sha": "77599bab633e00ac6485cd716c68f82e48436b2c", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c73b269e7da6ae0ee618f49e935a581dc0f12d7/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c73b269e7da6ae0ee618f49e935a581dc0f12d7/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=5c73b269e7da6ae0ee618f49e935a581dc0f12d7", "patch": "@@ -4186,11 +4186,7 @@ convert_for_assignment (type, rhs, errtype, fundecl, funname, parmnum)\n \t Meanwhile, the lhs target must have all the qualifiers of the rhs.  */\n       if (TYPE_MAIN_VARIANT (ttl) == void_type_node\n \t  || TYPE_MAIN_VARIANT (ttr) == void_type_node\n-\t  || comp_target_types (type, rhstype)\n-\t  || (!pedantic\t  /* Unless pedantic, mix signed and unsigned.  */\n-\t      && TREE_CODE (ttl) == INTEGER_TYPE\n-\t      && TREE_CODE (ttr) == INTEGER_TYPE\n-\t      && TYPE_PRECISION (ttl) == TYPE_PRECISION (ttr)))\n+\t  || comp_target_types (type, rhstype))\n \t{\n \t  if (pedantic\n \t      && ((TYPE_MAIN_VARIANT (ttl) == void_type_node\n@@ -4229,8 +4225,11 @@ convert_for_assignment (type, rhs, errtype, fundecl, funname, parmnum)\n \t}\n       else if (unsigned_type (TYPE_MAIN_VARIANT (ttl))\n \t       == unsigned_type (TYPE_MAIN_VARIANT (ttr)))\n-\twarn_for_assignment (\"pointer targets in %s differ in signedness\",\n-\t\t\t     get_spelling (errtype), funname, parmnum);\n+\t{\n+\t  if (pedantic)\n+\t    warn_for_assignment (\"pointer targets in %s differ in signedness\",\n+\t\t\t\t get_spelling (errtype), funname, parmnum);\n+\t}\n       else\n \twarn_for_assignment (\"%s from incompatible pointer type\",\n \t\t\t     get_spelling (errtype), funname, parmnum);"}]}