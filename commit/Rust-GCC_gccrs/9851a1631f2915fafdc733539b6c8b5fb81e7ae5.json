{"sha": "9851a1631f2915fafdc733539b6c8b5fb81e7ae5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTg1MWExNjMxZjI5MTVmYWZkYzczMzUzOWI2YzhiNWZiODFlN2FlNQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2021-08-11T13:01:39Z"}, "committer": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2021-08-11T13:01:39Z"}, "message": "Fix min_flags handling in mod-ref\n\ngcc/ChangeLog:\n\n2021-08-11  Jan Hubicka  <hubicka@ucw.cz>\n\t    Alexandre Oliva  <oliva@adacore.com>\n\n\t* ipa-modref.c (modref_lattice::dump): Fix escape_point's min_flags\n\tdumping.\n\t(modref_lattice::merge_deref): Fix handling of indirect scape points.\n\t(update_escape_summary_1): Likewise.\n\t(update_escape_summary): Likewise.\n\t(ipa_merge_modref_summary_after_inlining): Likewise.\n\ngcc/testsuite/ChangeLog:\n\n\t* c-c++-common/modref-dse.c: New test.", "tree": {"sha": "6ec5d79b94267126a39a6ce0c68e22be7c40c170", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6ec5d79b94267126a39a6ce0c68e22be7c40c170"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9851a1631f2915fafdc733539b6c8b5fb81e7ae5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9851a1631f2915fafdc733539b6c8b5fb81e7ae5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9851a1631f2915fafdc733539b6c8b5fb81e7ae5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9851a1631f2915fafdc733539b6c8b5fb81e7ae5/comments", "author": null, "committer": null, "parents": [{"sha": "d7e91f4894f6a1a2daeec5cbe1e912bb896b9f7a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7e91f4894f6a1a2daeec5cbe1e912bb896b9f7a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7e91f4894f6a1a2daeec5cbe1e912bb896b9f7a"}], "stats": {"total": 73, "additions": 62, "deletions": 11}, "files": [{"sha": "c65b2f65372dfb4cb276ec1314d555ef8e7dafd6", "filename": "gcc/ipa-modref.c", "status": "modified", "additions": 24, "deletions": 11, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9851a1631f2915fafdc733539b6c8b5fb81e7ae5/gcc%2Fipa-modref.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9851a1631f2915fafdc733539b6c8b5fb81e7ae5/gcc%2Fipa-modref.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-modref.c?ref=9851a1631f2915fafdc733539b6c8b5fb81e7ae5", "patch": "@@ -1406,7 +1406,7 @@ modref_lattice::dump (FILE *out, int indent) const\n \t  fprintf (out, \"%*s  Arg %i (%s) min flags\", indent, \"\",\n \t\t   escape_points[i].arg,\n \t\t   escape_points[i].direct ? \"direct\" : \"indirect\");\n-\t  dump_eaf_flags (out, flags, false);\n+\t  dump_eaf_flags (out, escape_points[i].min_flags, false);\n \t  fprintf (out, \" in call \");\n \t  print_gimple_stmt (out, escape_points[i].call, 0);\n \t}\n@@ -1503,10 +1503,18 @@ modref_lattice::merge_deref (const modref_lattice &with, bool ignore_stores)\n   if (!flags)\n     return changed;\n   for (unsigned int i = 0; i < with.escape_points.length (); i++)\n-    changed |= add_escape_point (with.escape_points[i].call,\n-\t\t\t\t with.escape_points[i].arg,\n-\t\t\t\t with.escape_points[i].min_flags,\n-\t\t\t\t false);\n+    {\n+      int min_flags = with.escape_points[i].min_flags;\n+\n+      if (with.escape_points[i].direct)\n+\tmin_flags = deref_flags (min_flags, ignore_stores);\n+      else if (ignore_stores)\n+\tmin_flags |= EAF_NOCLOBBER | EAF_NOESCAPE | EAF_NODIRECTESCAPE;\n+      changed |= add_escape_point (with.escape_points[i].call,\n+\t\t\t\t   with.escape_points[i].arg,\n+\t\t\t\t   min_flags,\n+\t\t\t\t   false);\n+    }\n   return changed;\n }\n \n@@ -3019,7 +3027,8 @@ struct escape_map\n \n static void\n update_escape_summary_1 (cgraph_edge *e,\n-\t\t\t vec <vec <escape_map>> &map)\n+\t\t\t vec <vec <escape_map>> &map,\n+\t\t\t bool ignore_stores)\n {\n   escape_summary *sum = escape_summaries->get (e);\n   if (!sum)\n@@ -3037,6 +3046,9 @@ update_escape_summary_1 (cgraph_edge *e,\n \tcontinue;\n       FOR_EACH_VEC_ELT (map[ee->parm_index], j, em)\n \t{\n+\t  int min_flags = ee->min_flags;\n+\t  if (ee->direct && !em->direct)\n+\t    min_flags = deref_flags (min_flags, ignore_stores);\n \t  struct escape_entry entry = {em->parm_index, ee->arg,\n \t    \t\t\t       ee->min_flags,\n \t\t\t\t       ee->direct & em->direct};\n@@ -3051,18 +3063,19 @@ update_escape_summary_1 (cgraph_edge *e,\n \n static void\n update_escape_summary (cgraph_node *node,\n-\t\t       vec <vec <escape_map>> &map)\n+\t\t       vec <vec <escape_map>> &map,\n+\t\t       bool ignore_stores)\n {\n   if (!escape_summaries)\n     return;\n   for (cgraph_edge *e = node->indirect_calls; e; e = e->next_callee)\n-    update_escape_summary_1 (e, map);\n+    update_escape_summary_1 (e, map, ignore_stores);\n   for (cgraph_edge *e = node->callees; e; e = e->next_callee)\n     {\n       if (!e->inline_failed)\n-\tupdate_escape_summary (e->callee, map);\n+\tupdate_escape_summary (e->callee, map, ignore_stores);\n       else\n-\tupdate_escape_summary_1 (e, map);\n+\tupdate_escape_summary_1 (e, map, ignore_stores);\n     }\n }\n \n@@ -3187,7 +3200,7 @@ ipa_merge_modref_summary_after_inlining (cgraph_edge *edge)\n \tif (needed)\n \t  emap[ee->arg].safe_push (entry);\n       }\n-  update_escape_summary (edge->callee, emap);\n+  update_escape_summary (edge->callee, emap, ignore_stores);\n   for (i = 0; (int)i < max_escape + 1; i++)\n     emap[i].release ();\n   if (sum)"}, {"sha": "5f64e8f4b59427369c2c5bc76fbbd22b24228ab7", "filename": "gcc/testsuite/c-c++-common/modref-dse.c", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9851a1631f2915fafdc733539b6c8b5fb81e7ae5/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fmodref-dse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9851a1631f2915fafdc733539b6c8b5fb81e7ae5/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fmodref-dse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fmodref-dse.c?ref=9851a1631f2915fafdc733539b6c8b5fb81e7ae5", "patch": "@@ -0,0 +1,38 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-dse2-details\" } */\n+/* { dg-final { scan-tree-dump-not \"Deleted dead store\" \"dse2\" } } */\n+\n+struct foo { unsigned long bar; };\n+\n+unsigned y;\n+\n+static int __attribute__ ((__noinline__, __noclone__))\n+wrapped (struct foo *p, int i);\n+\n+static int wrapper (struct foo *p);\n+\n+static int __attribute__ ((__noclone__))\n+wrapper (struct foo *p) {\n+  return wrapped (p, 1);\n+}\n+\n+static int __attribute__ ((__noinline__, __noclone__))\n+dind (struct foo **pp);\n+\n+int __attribute__ ((__noclone__, __no_reorder__))\n+xfn () {\n+  struct foo x = { 0xBADC0FFE };\n+  struct foo *p = &x;\n+  return dind (&p);\n+}\n+\n+static int __attribute__ ((__noinline__, __no_reorder__))\n+wrapped (struct foo *p, int i) {\n+  return p->bar + i == y++;\n+}\n+\n+static int __attribute__ ((__noinline__, __noclone__, __no_reorder__))\n+dind (struct foo **pp) {\n+  wrapper (*pp);\n+  return 0;\n+}"}]}