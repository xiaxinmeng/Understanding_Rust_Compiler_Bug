{"sha": "6a20b538f2a02e01b311af1dade9cea6a58d815e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmEyMGI1MzhmMmEwMmUwMWIzMTFhZjFkYWRlOWNlYTZhNThkODE1ZQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-06-28T18:31:42Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-06-28T18:31:42Z"}, "message": "re PR middle-end/71626 (ICE at -O1 and above on x86_64-linux-gnu (in output_constant_pool_2, at varasm.c:3837))\n\n\tPR middle-end/71626\n\t* config/i386/i386.c (ix86_expand_vector_move): For SUBREG of\n\ta constant, force its SUBREG_REG into memory or register instead\n\tof whole op1.\n\n\t* gcc.c-torture/execute/pr71626-1.c: New test.\n\t* gcc.c-torture/execute/pr71626-2.c: New test.\n\nFrom-SVN: r237826", "tree": {"sha": "1be87707017143ec34f68b003b3c04ca10dcc4b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1be87707017143ec34f68b003b3c04ca10dcc4b5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6a20b538f2a02e01b311af1dade9cea6a58d815e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a20b538f2a02e01b311af1dade9cea6a58d815e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a20b538f2a02e01b311af1dade9cea6a58d815e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a20b538f2a02e01b311af1dade9cea6a58d815e/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0f0f4f914dc0c6667b1ee57ca9461fc26ec67bb3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f0f4f914dc0c6667b1ee57ca9461fc26ec67bb3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f0f4f914dc0c6667b1ee57ca9461fc26ec67bb3"}], "stats": {"total": 68, "additions": 58, "deletions": 10}, "files": [{"sha": "eaca2910ee87817dfcd9f0782d9c64e01d51a84b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a20b538f2a02e01b311af1dade9cea6a58d815e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a20b538f2a02e01b311af1dade9cea6a58d815e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6a20b538f2a02e01b311af1dade9cea6a58d815e", "patch": "@@ -1,3 +1,10 @@\n+2016-06-28  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/71626\n+\t* config/i386/i386.c (ix86_expand_vector_move): For SUBREG of\n+\ta constant, force its SUBREG_REG into memory or register instead\n+\tof whole op1.\n+\n 2016-06-28  Pitchumani Sivanupandi  <pitchumani.s@atmel.com>\n \n \tPR target/58655"}, {"sha": "70b13c81bc8713ea51f79b4c510e080482a4c237", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 22, "deletions": 10, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a20b538f2a02e01b311af1dade9cea6a58d815e/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a20b538f2a02e01b311af1dade9cea6a58d815e/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=6a20b538f2a02e01b311af1dade9cea6a58d815e", "patch": "@@ -19610,12 +19610,29 @@ ix86_expand_vector_move (machine_mode mode, rtx operands[])\n      of the register, once we have that information we may be able\n      to handle some of them more efficiently.  */\n   if (can_create_pseudo_p ()\n-      && register_operand (op0, mode)\n       && (CONSTANT_P (op1)\n \t  || (SUBREG_P (op1)\n \t      && CONSTANT_P (SUBREG_REG (op1))))\n-      && !standard_sse_constant_p (op1, mode))\n-    op1 = validize_mem (force_const_mem (mode, op1));\n+      && ((register_operand (op0, mode)\n+\t   && !standard_sse_constant_p (op1, mode))\n+\t  /* ix86_expand_vector_move_misalign() does not like constants.  */\n+\t  || (SSE_REG_MODE_P (mode)\n+\t      && MEM_P (op0)\n+\t      && MEM_ALIGN (op0) < align)))\n+    {\n+      if (SUBREG_P (op1))\n+\t{\n+\t  machine_mode imode = GET_MODE (SUBREG_REG (op1));\n+\t  rtx r = force_const_mem (imode, SUBREG_REG (op1));\n+\t  if (r)\n+\t    r = validize_mem (r);\n+\t  else\n+\t    r = force_reg (imode, SUBREG_REG (op1));\n+\t  op1 = simplify_gen_subreg (mode, r, imode, SUBREG_BYTE (op1));\n+\t}\n+      else\n+\top1 = validize_mem (force_const_mem (mode, op1));\n+    }\n \n   /* We need to check memory alignment for SSE mode since attribute\n      can make operands unaligned.  */\n@@ -19626,13 +19643,8 @@ ix86_expand_vector_move (machine_mode mode, rtx operands[])\n     {\n       rtx tmp[2];\n \n-      /* ix86_expand_vector_move_misalign() does not like constants ... */\n-      if (CONSTANT_P (op1)\n-\t  || (SUBREG_P (op1)\n-\t      && CONSTANT_P (SUBREG_REG (op1))))\n-\top1 = validize_mem (force_const_mem (mode, op1));\n-\n-      /* ... nor both arguments in memory.  */\n+      /* ix86_expand_vector_move_misalign() does not like both\n+\t arguments in memory.  */\n       if (!register_operand (op0, mode)\n \t  && !register_operand (op1, mode))\n \top1 = force_reg (mode, op1);"}, {"sha": "08c3181fd85f4f0bc2ed8fc398c4b7c6b2eeeddd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a20b538f2a02e01b311af1dade9cea6a58d815e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a20b538f2a02e01b311af1dade9cea6a58d815e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6a20b538f2a02e01b311af1dade9cea6a58d815e", "patch": "@@ -1,3 +1,9 @@\n+2016-06-28  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/71626\n+\t* gcc.c-torture/execute/pr71626-1.c: New test.\n+\t* gcc.c-torture/execute/pr71626-2.c: New test.\n+\n 2016-06-28  Peter Bergner  <bergner@vnet.ibm.com>\n \n \tPR target/71656"}, {"sha": "26cfa9650e0829410bfa8c39ae54a1ca66b66953", "filename": "gcc/testsuite/gcc.c-torture/execute/pr71626-1.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a20b538f2a02e01b311af1dade9cea6a58d815e/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr71626-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a20b538f2a02e01b311af1dade9cea6a58d815e/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr71626-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr71626-1.c?ref=6a20b538f2a02e01b311af1dade9cea6a58d815e", "patch": "@@ -0,0 +1,19 @@\n+/* PR middle-end/71626 */\n+\n+typedef __INTPTR_TYPE__ V __attribute__((__vector_size__(sizeof (__INTPTR_TYPE__))));\n+\n+__attribute__((noinline, noclone)) V\n+foo ()\n+{\n+  V v = { (__INTPTR_TYPE__) foo };\n+  return v;\n+}\n+\n+int\n+main ()\n+{\n+  V v = foo ();\n+  if (v[0] != (__INTPTR_TYPE__) foo)\n+    __builtin_abort ();\n+  return 0;\n+}"}, {"sha": "4a27c54fbf3cdf7b21ee63671fc63aff4c45a355", "filename": "gcc/testsuite/gcc.c-torture/execute/pr71626-2.c", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a20b538f2a02e01b311af1dade9cea6a58d815e/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr71626-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a20b538f2a02e01b311af1dade9cea6a58d815e/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr71626-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr71626-2.c?ref=6a20b538f2a02e01b311af1dade9cea6a58d815e", "patch": "@@ -0,0 +1,4 @@\n+/* PR middle-end/71626 */\n+/* { dg-additional-options \"-fpic\" { target fpic } } */\n+\n+#include \"pr71626-1.c\""}]}