{"sha": "12079564033855dd6e2fede836f98bc851b72e08", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTIwNzk1NjQwMzM4NTVkZDZlMmZlZGU4MzZmOThiYzg1MWI3MmUwOA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-12-24T11:35:03Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-12-24T11:35:03Z"}, "message": "(clrstr_optab): New declaration.\n\n(clear_storage): New parm, ALIGN.\n\nFrom-SVN: r10838", "tree": {"sha": "e51720135fdc5767a6d0d4d458c5ce155290a265", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e51720135fdc5767a6d0d4d458c5ce155290a265"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/12079564033855dd6e2fede836f98bc851b72e08", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12079564033855dd6e2fede836f98bc851b72e08", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12079564033855dd6e2fede836f98bc851b72e08", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12079564033855dd6e2fede836f98bc851b72e08/comments", "author": null, "committer": null, "parents": [{"sha": "bad883f8a12c6dd7f2136718f63cd6241bc064bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bad883f8a12c6dd7f2136718f63cd6241bc064bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bad883f8a12c6dd7f2136718f63cd6241bc064bc"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "56034e269051055a8f2a2a6fbb8434f39d3652eb", "filename": "gcc/expr.h", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12079564033855dd6e2fede836f98bc851b72e08/gcc%2Fexpr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12079564033855dd6e2fede836f98bc851b72e08/gcc%2Fexpr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.h?ref=12079564033855dd6e2fede836f98bc851b72e08", "patch": "@@ -471,6 +471,9 @@ extern enum insn_code movcc_gen_code[NUM_MACHINE_MODES];\n /* This array records the insn_code of insns to perform block moves.  */\n extern enum insn_code movstr_optab[NUM_MACHINE_MODES];\n \n+/* This array records the insn_code of insns to perform block clears.  */\n+extern enum insn_code clrstr_optab[NUM_MACHINE_MODES];\n+\n /* Define functions given in optabs.c.  */\n \n /* Expand a binary operation given optab and rtx operands.  */\n@@ -631,8 +634,9 @@ extern void use_reg PROTO((rtx*, rtx));\n extern void use_regs PROTO((rtx*, int, int));\n \n /* Write zeros through the storage of OBJECT.\n-   If OBJECT has BLKmode, SIZE is its length in bytes.  */\n-extern void clear_storage PROTO((rtx, rtx));\n+   If OBJECT has BLKmode, SIZE is its length in bytes and ALIGN is its\n+   alignment.\n+extern void clear_storage PROTO((rtx, rtx, int));\n \n /* Emit insns to set X from Y.  */\n extern rtx emit_move_insn PROTO((rtx, rtx));"}]}