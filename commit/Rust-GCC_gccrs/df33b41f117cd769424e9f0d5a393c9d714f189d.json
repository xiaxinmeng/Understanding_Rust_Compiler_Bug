{"sha": "df33b41f117cd769424e9f0d5a393c9d714f189d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGYzM2I0MWYxMTdjZDc2OTQyNGU5ZjBkNWEzOTNjOWQ3MTRmMTg5ZA==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2011-05-30T08:45:07Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2011-05-30T08:45:07Z"}, "message": "configure.ac (gcc_cv_lto_plugin): Determine lto plugin support from plugin linker.\n\n\t* configure.ac (gcc_cv_lto_plugin): Determine lto plugin support\n\tfrom plugin linker.\n\t* configure: Regenerate.\n\nFrom-SVN: r174426", "tree": {"sha": "47425d4cc0a90c02e0447d3269a2f925ba49c9f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/47425d4cc0a90c02e0447d3269a2f925ba49c9f1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/df33b41f117cd769424e9f0d5a393c9d714f189d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df33b41f117cd769424e9f0d5a393c9d714f189d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df33b41f117cd769424e9f0d5a393c9d714f189d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df33b41f117cd769424e9f0d5a393c9d714f189d/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "69940d4d9e914bfda0650a0771e916754dceb573", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69940d4d9e914bfda0650a0771e916754dceb573", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69940d4d9e914bfda0650a0771e916754dceb573"}], "stats": {"total": 98, "additions": 78, "deletions": 20}, "files": [{"sha": "3f4ec0bd327855933b2eb49edcf7fa671317fd02", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df33b41f117cd769424e9f0d5a393c9d714f189d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df33b41f117cd769424e9f0d5a393c9d714f189d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=df33b41f117cd769424e9f0d5a393c9d714f189d", "patch": "@@ -1,3 +1,9 @@\n+2011-05-30  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* configure.ac (gcc_cv_lto_plugin): Determine lto plugin support\n+\tfrom plugin linker.\n+\t* configure: Regenerate.\n+\n 2011-05-30  Ira Rosen  <ira.rosen@linaro.org>\n \n \tPR tree-optimization/49199"}, {"sha": "a37351882804a794a1615964b4b19e4c255774ab", "filename": "gcc/configure", "status": "modified", "additions": 35, "deletions": 10, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df33b41f117cd769424e9f0d5a393c9d714f189d/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df33b41f117cd769424e9f0d5a393c9d714f189d/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=df33b41f117cd769424e9f0d5a393c9d714f189d", "patch": "@@ -23206,26 +23206,51 @@ fi\n $as_echo_n \"checking linker plugin support... \" >&6; }\n gcc_cv_lto_plugin=0\n if test -f liblto_plugin.la; then\n-  if test $in_tree_ld = yes -a x\"$ORIGINAL_PLUGIN_LD_FOR_TARGET\" = x\"$gcc_cv_ld\"; then\n-    if test \"$gcc_cv_gld_major_version\" -eq 2 -a \"$gcc_cv_gld_minor_version\" -ge 21 -o \"$gcc_cv_gld_major_version\" -gt 2; then\n-      gcc_cv_lto_plugin=2\n-    elif test \"$ld_is_gold\" = yes -a \"$gcc_cv_gld_major_version\" -eq 2 -a \"$gcc_cv_gld_minor_version\" -eq 20; then\n-      gcc_cv_lto_plugin=1\n+  save_ld_ver=\"$ld_ver\"\n+  save_ld_vers_major=\"$ld_vers_major\"\n+  save_ld_vers_minor=\"$ld_vers_minor\"\n+  save_ld_is_gold=\"$ld_is_gold\"\n+\n+  ld_is_gold=no\n \n+  if test $in_tree_ld = yes -a x\"$ORIGINAL_PLUGIN_LD_FOR_TARGET\" = x\"$gcc_cv_ld\"; then\n+    ld_ver=\"GNU ld\"\n+    # FIXME: ld_is_gold?\n+    ld_vers_major=\"$gcc_cv_gld_major_version\"\n+    ld_vers_minor=\"$gcc_cv_gld_minor_version\"\n+  else\n+    # Determine plugin linker version.\n+    # FIXME: Partial duplicate from above, generalize.\n+    ld_ver=`$ORIGINAL_PLUGIN_LD_FOR_TARGET --version 2>/dev/null | sed 1q`\n+    if echo \"$ld_ver\" | grep GNU > /dev/null; then\n+      if echo \"$ld_ver\" | grep \"GNU gold\" > /dev/null; then\n+        ld_is_gold=yes\n+        ld_vers=`echo $ld_ver | sed -n \\\n+    \t    -e 's,^[^)]*[\t ]\\([0-9][0-9]*\\.[0-9][0-9]*[^)]*\\)) .*$,\\1,p'`\n+      else\n+        ld_vers=`echo $ld_ver | sed -n \\\n+    \t    -e 's,^.*[\t ]\\([0-9][0-9]*\\.[0-9][0-9]*.*\\)$,\\1,p'`\n+      fi\n+      ld_vers_major=`expr \"$ld_vers\" : '\\([0-9]*\\)'`\n+      ld_vers_minor=`expr \"$ld_vers\" : '[0-9]*\\.\\([0-9]*\\)'`\n     fi\n-  elif test x\"$ORIGINAL_PLUGIN_LD_FOR_TARGET\" = x\"$gcc_cv_ld\" && echo \"$ld_ver\" | grep GNU > /dev/null; then\n+  fi\n+\n+  # Determine plugin support.\n+  if echo \"$ld_ver\" | grep GNU > /dev/null; then\n     # Require GNU ld or gold 2.21+ for plugin support by default.\n     if test \"$ld_vers_major\" -eq 2 -a \"$ld_vers_minor\" -ge 21; then\n       gcc_cv_lto_plugin=2\n     # Allow -fuse-linker-plugin to enable plugin support in GNU gold 2.20.\n     elif test \"$ld_is_gold\" = yes -a \"$ld_vers_major\" -eq 2 -a \"$ld_vers_minor\" -eq 20; then\n       gcc_cv_lto_plugin=1\n     fi\n-  elif test x\"$ORIGINAL_PLUGIN_LD_FOR_TARGET\" != x\"$gcc_cv_ld\"; then\n-    # Allow -fuse-linker-plugin if plugin linker differs from\n-    # default/specified linker.\n-    gcc_cv_lto_plugin=1\n   fi\n+\n+  ld_ver=\"$save_ld_ver\"\n+  ld_vers_major=\"$save_ld_vers_major\"\n+  ld_vers_minor=\"$save_ld_vers_minor\"\n+  ld_is_gold=\"$save_ld_is_gold\"\n fi\n \n cat >>confdefs.h <<_ACEOF"}, {"sha": "5e414794a08964bed19cddd69f487c76ec11a2a5", "filename": "gcc/configure.ac", "status": "modified", "additions": 37, "deletions": 10, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df33b41f117cd769424e9f0d5a393c9d714f189d/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df33b41f117cd769424e9f0d5a393c9d714f189d/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=df33b41f117cd769424e9f0d5a393c9d714f189d", "patch": "@@ -3249,26 +3249,53 @@ fi\n AC_MSG_CHECKING(linker plugin support)\n gcc_cv_lto_plugin=0\n if test -f liblto_plugin.la; then\n-  if test $in_tree_ld = yes -a x\"$ORIGINAL_PLUGIN_LD_FOR_TARGET\" = x\"$gcc_cv_ld\"; then\n-    if test \"$gcc_cv_gld_major_version\" -eq 2 -a \"$gcc_cv_gld_minor_version\" -ge 21 -o \"$gcc_cv_gld_major_version\" -gt 2; then\n-      gcc_cv_lto_plugin=2\n-    elif test \"$ld_is_gold\" = yes -a \"$gcc_cv_gld_major_version\" -eq 2 -a \"$gcc_cv_gld_minor_version\" -eq 20; then\n-      gcc_cv_lto_plugin=1\n+  save_ld_ver=\"$ld_ver\"\n+  save_ld_vers_major=\"$ld_vers_major\"\n+  save_ld_vers_minor=\"$ld_vers_minor\"\n+  save_ld_is_gold=\"$ld_is_gold\"\n+\n+  ld_is_gold=no\n \n+  if test $in_tree_ld = yes -a x\"$ORIGINAL_PLUGIN_LD_FOR_TARGET\" = x\"$gcc_cv_ld\"; then\n+    ld_ver=\"GNU ld\"\n+    # FIXME: ld_is_gold?\n+    ld_vers_major=\"$gcc_cv_gld_major_version\"\n+    ld_vers_minor=\"$gcc_cv_gld_minor_version\"\n+  else\n+    # Determine plugin linker version.\n+    # FIXME: Partial duplicate from above, generalize.\n+changequote(,)dnl\n+    ld_ver=`$ORIGINAL_PLUGIN_LD_FOR_TARGET --version 2>/dev/null | sed 1q`\n+    if echo \"$ld_ver\" | grep GNU > /dev/null; then\n+      if echo \"$ld_ver\" | grep \"GNU gold\" > /dev/null; then\n+        ld_is_gold=yes\n+        ld_vers=`echo $ld_ver | sed -n \\\n+    \t    -e 's,^[^)]*[\t ]\\([0-9][0-9]*\\.[0-9][0-9]*[^)]*\\)) .*$,\\1,p'`\n+      else\n+        ld_vers=`echo $ld_ver | sed -n \\\n+    \t    -e 's,^.*[\t ]\\([0-9][0-9]*\\.[0-9][0-9]*.*\\)$,\\1,p'`\n+      fi\n+      ld_vers_major=`expr \"$ld_vers\" : '\\([0-9]*\\)'`\n+      ld_vers_minor=`expr \"$ld_vers\" : '[0-9]*\\.\\([0-9]*\\)'`\n     fi\n-  elif test x\"$ORIGINAL_PLUGIN_LD_FOR_TARGET\" = x\"$gcc_cv_ld\" && echo \"$ld_ver\" | grep GNU > /dev/null; then\n+changequote([,])dnl\n+  fi\n+\n+  # Determine plugin support.\n+  if echo \"$ld_ver\" | grep GNU > /dev/null; then\n     # Require GNU ld or gold 2.21+ for plugin support by default.\n     if test \"$ld_vers_major\" -eq 2 -a \"$ld_vers_minor\" -ge 21; then\n       gcc_cv_lto_plugin=2\n     # Allow -fuse-linker-plugin to enable plugin support in GNU gold 2.20.\n     elif test \"$ld_is_gold\" = yes -a \"$ld_vers_major\" -eq 2 -a \"$ld_vers_minor\" -eq 20; then\n       gcc_cv_lto_plugin=1\n     fi\n-  elif test x\"$ORIGINAL_PLUGIN_LD_FOR_TARGET\" != x\"$gcc_cv_ld\"; then\n-    # Allow -fuse-linker-plugin if plugin linker differs from\n-    # default/specified linker.\n-    gcc_cv_lto_plugin=1\n   fi\n+\n+  ld_ver=\"$save_ld_ver\"\n+  ld_vers_major=\"$save_ld_vers_major\"\n+  ld_vers_minor=\"$save_ld_vers_minor\"\n+  ld_is_gold=\"$save_ld_is_gold\"\n fi\n AC_DEFINE_UNQUOTED(HAVE_LTO_PLUGIN, $gcc_cv_lto_plugin,\n   [Define to the level of your linker's plugin support.])"}]}