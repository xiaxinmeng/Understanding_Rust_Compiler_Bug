{"sha": "6bbf1598b61f9d6dd1f42cb59a9cd51780c65999", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmJiZjE1OThiNjFmOWQ2ZGQxZjQyY2I1OWE5Y2Q1MTc4MGM2NTk5OQ==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2000-05-31T16:39:19Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2000-05-31T16:39:19Z"}, "message": "decl.c (build_cp_library_fn): Set DECL_CONTEXT.\n\n\t* decl.c (build_cp_library_fn): Set DECL_CONTEXT.\n\n\t* method.c (mangle_expression): Adjust test for legal expression\n\toperators.\n\n\t* pt.c (instantiate_decl): Save and restore the local\n\tspecializations list.\n\nFrom-SVN: r34302", "tree": {"sha": "ab468350cfdd071d28002d537d6ee3d77b308f12", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ab468350cfdd071d28002d537d6ee3d77b308f12"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6bbf1598b61f9d6dd1f42cb59a9cd51780c65999", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6bbf1598b61f9d6dd1f42cb59a9cd51780c65999", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6bbf1598b61f9d6dd1f42cb59a9cd51780c65999", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6bbf1598b61f9d6dd1f42cb59a9cd51780c65999/comments", "author": null, "committer": null, "parents": [{"sha": "1b813bfea4a344623c32da63f0328c9f69083e31", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b813bfea4a344623c32da63f0328c9f69083e31", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b813bfea4a344623c32da63f0328c9f69083e31"}], "stats": {"total": 46, "additions": 38, "deletions": 8}, "files": [{"sha": "6120852e8597a6e4bb89b8f59dae889835bf8f61", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bbf1598b61f9d6dd1f42cb59a9cd51780c65999/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bbf1598b61f9d6dd1f42cb59a9cd51780c65999/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=6bbf1598b61f9d6dd1f42cb59a9cd51780c65999", "patch": "@@ -1,3 +1,13 @@\n+2000-05-31  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* decl.c (build_cp_library_fn): Set DECL_CONTEXT.\n+\n+\t* method.c (mangle_expression): Adjust test for legal expression\n+\toperators.\n+\n+\t* pt.c (instantiate_decl): Save and restore the local\n+\tspecializations list.\n+\n 2000-05-30  Jason Merrill  <jason@decepticon.cygnus.com>\n \n \t* decl.c (grok_reference_init): Pass LOOKUP_ONLYCONVERTING."}, {"sha": "69f6e74d9f6b031ef0c381d2785ea433a5a8092d", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bbf1598b61f9d6dd1f42cb59a9cd51780c65999/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bbf1598b61f9d6dd1f42cb59a9cd51780c65999/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=6bbf1598b61f9d6dd1f42cb59a9cd51780c65999", "patch": "@@ -6821,6 +6821,7 @@ build_cp_library_fn (name, operator_code, type)\n {\n   tree fn = build_library_fn_1 (name, operator_code, type);\n   TREE_NOTHROW (fn) = TYPE_NOTHROW_P (type);\n+  DECL_CONTEXT (fn) = FROB_CONTEXT (current_namespace);\n   set_mangled_name_for_decl (fn);\n   make_function_rtl (fn);\n   return fn;"}, {"sha": "1981e77f640701ae8406477eb1461ee1254b099b", "filename": "gcc/cp/method.c", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bbf1598b61f9d6dd1f42cb59a9cd51780c65999/gcc%2Fcp%2Fmethod.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bbf1598b61f9d6dd1f42cb59a9cd51780c65999/gcc%2Fcp%2Fmethod.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmethod.c?ref=6bbf1598b61f9d6dd1f42cb59a9cd51780c65999", "patch": "@@ -523,13 +523,11 @@ mangle_expression (value)\n       const char *name;\n \n       name = operator_name_info[TREE_CODE (value)].mangled_name;\n-      my_friendly_assert (name != NULL, 0);\n-      if (name[0] != '_' || name[1] != '_')\n+      if (name == NULL)\n \t/* On some erroneous inputs, we can get here with VALUE a\n-\t   LOOKUP_EXPR.  In that case, the NAME will be the\n-\t   identifier for \"<invalid operator>\".  We must survive\n-\t   this routine in order to issue a sensible error\n-\t   message, so we fall through to the case below.  */\n+\t   LOOKUP_EXPR. We must survive this routine in order to issue\n+\t   a sensible error message, so we fall through to the case\n+\t   below.  */\n \tgoto bad_value;\n \n       for (i = 0; i < operands; ++i)"}, {"sha": "e414d8493743e26b0bc8aec82bf3d663f022983e", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bbf1598b61f9d6dd1f42cb59a9cd51780c65999/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bbf1598b61f9d6dd1f42cb59a9cd51780c65999/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=6bbf1598b61f9d6dd1f42cb59a9cd51780c65999", "patch": "@@ -9614,8 +9614,13 @@ instantiate_decl (d, defer_ok)\n     }\n   else if (TREE_CODE (d) == FUNCTION_DECL)\n     {\n+      htab_t saved_local_specializations;\n+\n+      /* Save away the current list, in case we are instantiating one\n+\t template from within the body of another.  */\n+      saved_local_specializations = local_specializations;\n+\n       /* Set up the list of local specializations.  */\n-      my_friendly_assert (local_specializations == NULL, 20000422);\n       local_specializations = htab_create (37, \n \t\t\t\t\t   htab_hash_pointer,\n \t\t\t\t\t   htab_eq_pointer,\n@@ -9635,7 +9640,7 @@ instantiate_decl (d, defer_ok)\n \n       /* We don't need the local specializations any more.  */\n       htab_delete (local_specializations);\n-      local_specializations = NULL;\n+      local_specializations = saved_local_specializations;\n \n       /* Finish the function.  */\n       expand_body (finish_function (0));"}, {"sha": "fcc1d0009dc78a5742e592cf1a292119759bc7b9", "filename": "gcc/testsuite/g++.old-deja/g++.pt/inline2.C", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bbf1598b61f9d6dd1f42cb59a9cd51780c65999/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Finline2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bbf1598b61f9d6dd1f42cb59a9cd51780c65999/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Finline2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Finline2.C?ref=6bbf1598b61f9d6dd1f42cb59a9cd51780c65999", "patch": "@@ -0,0 +1,16 @@\n+// Build don't link:\n+// Special g++ Options: -O\n+// Origin: Mark Mitchell <mitchell@codesourcery.com>\n+\n+template <class T>\n+struct S {\n+  inline ~S () {}\n+};\n+\n+template <class T>\n+void f ()\n+{\n+  static S<T> s;\n+}\n+\n+template void f<int>();"}]}