{"sha": "0f72dc9e314346054bc995d63dc4cc01e2770fab", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGY3MmRjOWUzMTQzNDYwNTRiYzk5NWQ2M2RjNGNjMDFlMjc3MGZhYg==", "commit": {"author": {"name": "Bryce McKinlay", "email": "bryce@albatross.co.nz", "date": "2000-03-09T04:47:57Z"}, "committer": {"name": "Bryce McKinlay", "email": "bryce@gcc.gnu.org", "date": "2000-03-09T04:47:57Z"}, "message": "re GNATS gcj/168 (Build fails on Alpha)\n\n2000-03-08  Bryce McKinlay  <bryce@albatross.co.nz>\n\n        * config.guess, config.sub: Update from the gcc tree.\n        Fix for PR libgcj/168.\n\nFrom-SVN: r32442", "tree": {"sha": "75ebc1d24ff4f2c3c783c7aeb115da3df1c784db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/75ebc1d24ff4f2c3c783c7aeb115da3df1c784db"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0f72dc9e314346054bc995d63dc4cc01e2770fab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f72dc9e314346054bc995d63dc4cc01e2770fab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f72dc9e314346054bc995d63dc4cc01e2770fab", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f72dc9e314346054bc995d63dc4cc01e2770fab/comments", "author": null, "committer": null, "parents": [{"sha": "d98729aa0e182df4aa93f0ae60bc68a5b2a14596", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d98729aa0e182df4aa93f0ae60bc68a5b2a14596", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d98729aa0e182df4aa93f0ae60bc68a5b2a14596"}], "stats": {"total": 775, "additions": 613, "deletions": 162}, "files": [{"sha": "984d2bec60f7b2e863945d72983a36daf0a3e87f", "filename": "libffi/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f72dc9e314346054bc995d63dc4cc01e2770fab/libffi%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f72dc9e314346054bc995d63dc4cc01e2770fab/libffi%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FChangeLog?ref=0f72dc9e314346054bc995d63dc4cc01e2770fab", "patch": "@@ -1,3 +1,8 @@\n+2000-03-08  Bryce McKinlay  <bryce@albatross.co.nz>\n+\n+\t* config.guess, config.sub: Update from the gcc tree.\n+\tFix for PR libgcj/168.\n+\n 2000-03-03  Tom Tromey  <tromey@cygnus.com>\n \n \t* Makefile.in: Fixed ia64 by hand."}, {"sha": "20c971aae9a1b7f8df88854189999d2a58c32fe9", "filename": "libffi/config.guess", "status": "modified", "additions": 295, "deletions": 120, "changes": 415, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f72dc9e314346054bc995d63dc4cc01e2770fab/libffi%2Fconfig.guess", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f72dc9e314346054bc995d63dc4cc01e2770fab/libffi%2Fconfig.guess", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fconfig.guess?ref=0f72dc9e314346054bc995d63dc4cc01e2770fab", "patch": "@@ -1,6 +1,7 @@\n #! /bin/sh\n # Attempt to guess a canonical system name.\n-#   Copyright (C) 1992, 93, 94, 95, 96, 97, 1998 Free Software Foundation, Inc.\n+#   Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000\n+#   Free Software Foundation, Inc.\n #\n # This file is free software; you can redistribute it and/or modify it\n # under the terms of the GNU General Public License as published by\n@@ -22,8 +23,7 @@\n # the same distribution terms that you use for the rest of that program.\n \n # Written by Per Bothner <bothner@cygnus.com>.\n-# The master version of this file is at the FSF in /home/gd/gnu/lib.\n-# Please send patches to the Autoconf mailing list <autoconf@gnu.org>.\n+# Please send patches to <config-patches@gnu.org>.\n #\n # This script attempts to guess a canonical system name similar to\n # config.sub.  If it succeeds, it prints the system name on stdout, and\n@@ -36,6 +36,20 @@\n # (but try to keep the structure clean).\n #\n \n+# Use $HOST_CC if defined. $CC may point to a cross-compiler\n+if test x\"$CC_FOR_BUILD\" = x; then\n+  if test x\"$HOST_CC\" != x; then\n+    CC_FOR_BUILD=\"$HOST_CC\"\n+  else\n+    if test x\"$CC\" != x; then\n+      CC_FOR_BUILD=\"$CC\"\n+    else\n+      CC_FOR_BUILD=cc\n+    fi\n+  fi\n+fi\n+\n+\n # This is needed to find uname on a Pyramid OSx when run in the BSD universe.\n # (ghazi@noc.rutgers.edu 8/24/94.)\n if (test -f /.attbin/uname) >/dev/null 2>&1 ; then\n@@ -53,6 +67,43 @@ trap 'rm -f $dummy.c $dummy.o $dummy; exit 1' 1 2 15\n # Note: order is significant - the case branches are not exclusive.\n \n case \"${UNAME_MACHINE}:${UNAME_SYSTEM}:${UNAME_RELEASE}:${UNAME_VERSION}\" in\n+    *:NetBSD:*:*)\n+\t# Netbsd (nbsd) targets should (where applicable) match one or\n+\t# more of the tupples: *-*-netbsdelf*, *-*-netbsdaout*,\n+\t# *-*-netbsdecoff* and *-*-netbsd*.  For targets that recently\n+\t# switched to ELF, *-*-netbsd* would select the old\n+\t# object file format.  This provides both forward\n+\t# compatibility and a consistent mechanism for selecting the\n+\t# object file format.\n+\t# Determine the machine/vendor (is the vendor relevant).\n+\tcase \"${UNAME_MACHINE}\" in\n+\t    amiga) machine=m68k-cbm ;;\n+\t    arm32) machine=arm-unknown ;;\n+\t    atari*) machine=m68k-atari ;;\n+\t    sun3*) machine=m68k-sun ;;\n+\t    mac68k) machine=m68k-apple ;;\n+\t    macppc) machine=powerpc-apple ;;\n+\t    hp3[0-9][05]) machine=m68k-hp ;;\n+\t    ibmrt|romp-ibm) machine=romp-ibm ;;\n+\t    *) machine=${UNAME_MACHINE}-unknown ;;\n+\tesac\n+\t# The Operating System including object format.\n+\tif echo __ELF__ | $CC_FOR_BUILD -E - 2>/dev/null \\\n+\t\t| grep __ELF__ >/dev/null\n+\tthen\n+\t    # Once all utilities can be ECOFF (netbsdecoff) or a.out (netbsdaout).\n+\t    # Return netbsd for either.  FIX?\n+\t    os=netbsd\n+\telse\n+\t    os=netbsdelf\n+\tfi\n+\t# The OS release\n+\trelease=`echo ${UNAME_RELEASE}|sed -e 's/[-_].*/\\./'`\n+\t# Since CPU_TYPE-MANUFACTURER-KERNEL-OPERATING_SYSTEM:\n+\t# contains redundant information, the shorter form:\n+\t# CPU_TYPE-MANUFACTURER-OPERATING_SYSTEM is used.\n+\techo \"${machine}-${os}${release}\"\n+\texit 0 ;;\n     alpha:OSF1:*:*)\n \tif test $UNAME_RELEASE = \"V4.0\"; then\n \t\tUNAME_RELEASE=`/usr/sbin/sizer -v | awk '{print $3}'`\n@@ -62,55 +113,68 @@ case \"${UNAME_MACHINE}:${UNAME_SYSTEM}:${UNAME_RELEASE}:${UNAME_VERSION}\" in\n \t# A Xn.n version is an unreleased experimental baselevel.\n \t# 1.2 uses \"1.2\" for uname -r.\n \tcat <<EOF >$dummy.s\n+\t.data\n+\\$Lformat:\n+\t.byte 37,100,45,37,120,10,0\t# \"%d-%x\\n\"\n+\n+\t.text\n \t.globl main\n+\t.align 4\n \t.ent main\n main:\n-\t.frame \\$30,0,\\$26,0\n-\t.prologue 0\n-\t.long 0x47e03d80 # implver $0\n-\tlda \\$2,259\n-\t.long 0x47e20c21 # amask $2,$1\n-\tsrl \\$1,8,\\$2\n-\tsll \\$2,2,\\$2\n-\tsll \\$0,3,\\$0\n-\taddl \\$1,\\$0,\\$0\n-\taddl \\$2,\\$0,\\$0\n-\tret \\$31,(\\$26),1\n+\t.frame \\$30,16,\\$26,0\n+\tldgp \\$29,0(\\$27)\n+\t.prologue 1\n+\t.long 0x47e03d80 # implver \\$0\n+\tlda \\$2,-1\n+\t.long 0x47e20c21 # amask \\$2,\\$1\n+\tlda \\$16,\\$Lformat\n+\tmov \\$0,\\$17\n+\tnot \\$1,\\$18\n+\tjsr \\$26,printf\n+\tldgp \\$29,0(\\$26)\n+\tmov 0,\\$16\n+\tjsr \\$26,exit\n \t.end main\n EOF\n-\t${CC-cc} $dummy.s -o $dummy 2>/dev/null\n+\t$CC_FOR_BUILD $dummy.s -o $dummy 2>/dev/null\n \tif test \"$?\" = 0 ; then\n-\t\t./$dummy\n-\t\tcase \"$?\" in\n-\t\t\t7)\n+\t\tcase `./$dummy` in\n+\t\t\t0-0)\n \t\t\t\tUNAME_MACHINE=\"alpha\"\n \t\t\t\t;;\n-\t\t\t15)\n+\t\t\t1-0)\n \t\t\t\tUNAME_MACHINE=\"alphaev5\"\n \t\t\t\t;;\n-\t\t\t14)\n+\t\t\t1-1)\n \t\t\t\tUNAME_MACHINE=\"alphaev56\"\n \t\t\t\t;;\n-\t\t\t10)\n+\t\t\t1-101)\n \t\t\t\tUNAME_MACHINE=\"alphapca56\"\n \t\t\t\t;;\n-\t\t\t16)\n+\t\t\t2-303)\n \t\t\t\tUNAME_MACHINE=\"alphaev6\"\n \t\t\t\t;;\n+\t\t\t2-307)\n+\t\t\t\tUNAME_MACHINE=\"alphaev67\"\n+\t\t\t\t;;\n \t\tesac\n \tfi\n \trm -f $dummy.s $dummy\n-\techo ${UNAME_MACHINE}-dec-osf`echo ${UNAME_RELEASE} | sed -e 's/^[VTX]//' | tr [[A-Z]] [[a-z]]`\n+\techo ${UNAME_MACHINE}-dec-osf`echo ${UNAME_RELEASE} | sed -e 's/^[VTX]//' | tr 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'`\n+\texit 0 ;;\n+    Alpha\\ *:Windows_NT*:*)\n+\t# How do we know it's Interix rather than the generic POSIX subsystem?\n+\t# Should we change UNAME_MACHINE based on the output of uname instead\n+\t# of the specific Alpha model?\n+\techo alpha-pc-interix\n \texit 0 ;;\n     21064:Windows_NT:50:3)\n \techo alpha-dec-winnt3.5\n \texit 0 ;;\n     Amiga*:UNIX_System_V:4.0:*)\n \techo m68k-cbm-sysv4\n \texit 0;;\n-    amiga:NetBSD:*:*)\n-      echo m68k-cbm-netbsd${UNAME_RELEASE}\n-      exit 0 ;;\n     amiga:OpenBSD:*:*)\n \techo m68k-unknown-openbsd${UNAME_RELEASE}\n \texit 0 ;;\n@@ -135,16 +199,16 @@ EOF\n     wgrisc:OpenBSD:*:*)\n \techo mipsel-unknown-openbsd${UNAME_RELEASE}\n \texit 0 ;;\n+    *:OS/390:*:*)\n+\techo i370-ibm-openedition\n+\texit 0 ;;\n     arm:RISC*:1.[012]*:*|arm:riscix:1.[012]*:*)\n \techo arm-acorn-riscix${UNAME_RELEASE}\n \texit 0;;\n-    arm32:NetBSD:*:*)\n-\techo arm-unknown-netbsd`echo ${UNAME_RELEASE}|sed -e 's/[-_].*/\\./'`\n-\texit 0 ;;\n     SR2?01:HI-UX/MPP:*:*)\n \techo hppa1.1-hitachi-hiuxmpp\n \texit 0;;\n-    Pyramid*:OSx*:*:*|MIS*:OSx*:*:*|MIS*:SMP_DC-OSx*:*:*)\n+    Pyramid*:OSx*:*:* | MIS*:OSx*:*:* | MIS*:SMP_DC-OSx*:*:*)\n \t# akee@wpdis03.wpafb.af.mil (Earle F. Ake) contributed MIS and NILE.\n \tif test \"`(/bin/universe) 2>/dev/null`\" = att ; then\n \t\techo pyramid-pyramid-sysv3\n@@ -197,21 +261,38 @@ EOF\n     aushp:SunOS:*:*)\n \techo sparc-auspex-sunos${UNAME_RELEASE}\n \texit 0 ;;\n-    atari*:NetBSD:*:*)\n-\techo m68k-atari-netbsd${UNAME_RELEASE}\n-\texit 0 ;;\n     atari*:OpenBSD:*:*)\n \techo m68k-unknown-openbsd${UNAME_RELEASE}\n \texit 0 ;;\n-    sun3*:NetBSD:*:*)\n-\techo m68k-sun-netbsd${UNAME_RELEASE}\n+    # The situation for MiNT is a little confusing.  The machine name\n+    # can be virtually everything (everything which is not\n+    # \"atarist\" or \"atariste\" at least should have a processor \n+    # > m68000).  The system name ranges from \"MiNT\" over \"FreeMiNT\"\n+    # to the lowercase version \"mint\" (or \"freemint\").  Finally\n+    # the system name \"TOS\" denotes a system which is actually not\n+    # MiNT.  But MiNT is downward compatible to TOS, so this should\n+    # be no problem.\n+    atarist[e]:*MiNT:*:* | atarist[e]:*mint:*:* | atarist[e]:*TOS:*:*)\n+        echo m68k-atari-mint${UNAME_RELEASE}\n+\texit 0 ;;\n+    atari*:*MiNT:*:* | atari*:*mint:*:* | atarist[e]:*TOS:*:*)\n+\techo m68k-atari-mint${UNAME_RELEASE}\n+        exit 0 ;;\n+    *falcon*:*MiNT:*:* | *falcon*:*mint:*:* | *falcon*:*TOS:*:*)\n+        echo m68k-atari-mint${UNAME_RELEASE}\n \texit 0 ;;\n+    milan*:*MiNT:*:* | milan*:*mint:*:* | *milan*:*TOS:*:*)\n+        echo m68k-milan-mint${UNAME_RELEASE}\n+        exit 0 ;;\n+    hades*:*MiNT:*:* | hades*:*mint:*:* | *hades*:*TOS:*:*)\n+        echo m68k-hades-mint${UNAME_RELEASE}\n+        exit 0 ;;\n+    *:*MiNT:*:* | *:*mint:*:* | *:*TOS:*:*)\n+        echo m68k-unknown-mint${UNAME_RELEASE}\n+        exit 0 ;;\n     sun3*:OpenBSD:*:*)\n \techo m68k-unknown-openbsd${UNAME_RELEASE}\n \texit 0 ;;\n-    mac68k:NetBSD:*:*)\n-\techo m68k-apple-netbsd${UNAME_RELEASE}\n-\texit 0 ;;\n     mac68k:OpenBSD:*:*)\n \techo m68k-unknown-openbsd${UNAME_RELEASE}\n \texit 0 ;;\n@@ -224,9 +305,6 @@ EOF\n     powerpc:machten:*:*)\n \techo powerpc-apple-machten${UNAME_RELEASE}\n \texit 0 ;;\n-    macppc:NetBSD:*:*)\n-        echo powerpc-apple-netbsd${UNAME_RELEASE}\n-        exit 0 ;;\n     RISC*:Mach:*:*)\n \techo mips-dec-mach_bsd4.3\n \texit 0 ;;\n@@ -236,12 +314,13 @@ EOF\n     VAX*:ULTRIX*:*:*)\n \techo vax-dec-ultrix${UNAME_RELEASE}\n \texit 0 ;;\n-    2020:CLIX:*:*)\n+    2020:CLIX:*:* | 2430:CLIX:*:*)\n \techo clipper-intergraph-clix${UNAME_RELEASE}\n \texit 0 ;;\n     mips:*:*:UMIPS | mips:*:*:RISCos)\n \tsed 's/^\t//' << EOF >$dummy.c\n #ifdef __cplusplus\n+#include <stdio.h>  /* for printf() prototype */\n \tint main (int argc, char *argv[]) {\n #else\n \tint main (argc, argv) int argc; char *argv[]; {\n@@ -260,7 +339,7 @@ EOF\n \t  exit (-1);\n \t}\n EOF\n-\t${CC-cc} $dummy.c -o $dummy \\\n+\t$CC_FOR_BUILD $dummy.c -o $dummy \\\n \t  && ./$dummy `echo \"${UNAME_RELEASE}\" | sed -n 's/\\([0-9]*\\).*/\\1/p'` \\\n \t  && rm $dummy.c $dummy && exit 0\n \trm -f $dummy.c $dummy\n@@ -281,15 +360,18 @@ EOF\n     AViiON:dgux:*:*)\n         # DG/UX returns AViiON for all architectures\n         UNAME_PROCESSOR=`/usr/bin/uname -p`\n-        if [ $UNAME_PROCESSOR = mc88100 -o $UNAME_PROCESSOR = mc88110 ] ; then\n-\tif [ ${TARGET_BINARY_INTERFACE}x = m88kdguxelfx \\\n-\t     -o ${TARGET_BINARY_INTERFACE}x = x ] ; then\n+\tif [ $UNAME_PROCESSOR = mc88100 ] || [ $UNAME_PROCESSOR = mc88110]\n+\tthen\n+\t    if [ ${TARGET_BINARY_INTERFACE}x = m88kdguxelfx ] || \\\n+\t       [ ${TARGET_BINARY_INTERFACE}x = x ]\n+\t    then\n \t\techo m88k-dg-dgux${UNAME_RELEASE}\n-\telse\n+\t    else\n \t\techo m88k-dg-dguxbcs${UNAME_RELEASE}\n+\t    fi\n+\telse\n+\t    echo i586-dg-dgux${UNAME_RELEASE}\n \tfi\n-        else echo i586-dg-dgux${UNAME_RELEASE}\n-        fi\n  \texit 0 ;;\n     M88*:DolphinOS:*:*)\t# DolphinOS (SVR3)\n \techo m88k-dolphin-sysv3\n@@ -326,7 +408,7 @@ EOF\n \t\t\texit(0);\n \t\t\t}\n EOF\n-\t\t${CC-cc} $dummy.c -o $dummy && ./$dummy && rm $dummy.c $dummy && exit 0\n+\t\t$CC_FOR_BUILD $dummy.c -o $dummy && ./$dummy && rm $dummy.c $dummy && exit 0\n \t\trm -f $dummy.c $dummy\n \t\techo rs6000-ibm-aix3.2.5\n \telif grep bos324 /usr/include/stdio.h >/dev/null 2>&1; then\n@@ -355,7 +437,7 @@ EOF\n     ibmrt:4.4BSD:*|romp-ibm:BSD:*)\n \techo romp-ibm-bsd4.4\n \texit 0 ;;\n-    ibmrt:*BSD:*|romp-ibm:BSD:*)            # covers RT/PC NetBSD and\n+    ibmrt:*BSD:*|romp-ibm:BSD:*)            # covers RT/PC BSD and\n \techo romp-ibm-bsd${UNAME_RELEASE}   # 4.3 with uname added to\n \texit 0 ;;                           # report: romp-ibm BSD 4.3\n     *:BOSX:*:*)\n@@ -374,7 +456,7 @@ EOF\n \tcase \"${UNAME_MACHINE}\" in\n \t    9000/31? )            HP_ARCH=m68000 ;;\n \t    9000/[34]?? )         HP_ARCH=m68k ;;\n-\t    9000/6?? | 9000/7?? | 9000/80[024] | 9000/8?[136790] | 9000/892 )\n+\t    9000/[678][0-9][0-9])\n               sed 's/^              //' << EOF >$dummy.c\n               #include <stdlib.h>\n               #include <unistd.h>\n@@ -406,7 +488,7 @@ EOF\n                   exit (0);\n               }\n EOF\n-\t(${CC-cc} $dummy.c -o $dummy 2>/dev/null ) && HP_ARCH=`./$dummy`\n+\t(CCOPTS= $CC_FOR_BUILD $dummy.c -o $dummy 2>/dev/null ) && HP_ARCH=`./$dummy`\n \trm -f $dummy.c $dummy\n \tesac\n \tHPUX_REV=`echo ${UNAME_RELEASE}|sed -e 's/[^.]*.[0B]*//'`\n@@ -438,7 +520,7 @@ EOF\n \t  exit (0);\n \t}\n EOF\n-\t${CC-cc} $dummy.c -o $dummy && ./$dummy && rm $dummy.c $dummy && exit 0\n+\t$CC_FOR_BUILD $dummy.c -o $dummy && ./$dummy && rm $dummy.c $dummy && exit 0\n \trm -f $dummy.c $dummy\n \techo unknown-hitachi-hiuxwe2\n \texit 0 ;;\n@@ -448,10 +530,7 @@ EOF\n     9000/8??:4.3bsd:*:*)\n \techo hppa1.0-hp-bsd\n \texit 0 ;;\n-    *9??*:MPE*:*:*)\n-\techo hppa1.0-hp-mpeix\n-\texit 0 ;;\n-    *9??*:MPE*:*:*)\n+    *9??*:MPE/iX:*:*)\n \techo hppa1.0-hp-mpeix\n \texit 0 ;;\n     hp7??:OSF1:*:* | hp8?[79]:OSF1:*:* )\n@@ -470,6 +549,9 @@ EOF\n     parisc*:Lites*:*:*)\n \techo hppa1.1-hp-lites\n \texit 0 ;;\n+    hppa*:OpenBSD:*:*)\n+\techo hppa-unknown-openbsd\n+\texit 0 ;;\n     C1*:ConvexOS:*:* | convex:ConvexOS:C1*:*)\n \techo c1-convex-bsd\n         exit 0 ;;\n@@ -500,34 +582,34 @@ EOF\n \t      -e y/ABCDEFGHIJKLMNOPQRSTUVWXYZ/abcdefghijklmnopqrstuvwxyz/\n \texit 0 ;;\n     CRAY*TS:*:*:*)\n-\techo t90-cray-unicos${UNAME_RELEASE}\n+\techo t90-cray-unicos${UNAME_RELEASE} | sed -e 's/\\.[^.]*$/.X/'\n \texit 0 ;;\n     CRAY*T3E:*:*:*)\n-\techo t3e-cray-unicosmk${UNAME_RELEASE}\n+\techo alpha-cray-unicosmk${UNAME_RELEASE} | sed -e 's/\\.[^.]*$/.X/'\n+\texit 0 ;;\n+    CRAY*SV1:*:*:*)\n+\techo sv1-cray-unicos${UNAME_RELEASE} | sed -e 's/\\.[^.]*$/.X/'    \n \texit 0 ;;\n     CRAY-2:*:*:*)\n \techo cray2-cray-unicos\n         exit 0 ;;\n     F300:UNIX_System_V:*:*)\n-        FUJITSU_SYS=`uname -p | tr [A-Z] [a-z] | sed -e 's/\\///'`\n+        FUJITSU_SYS=`uname -p | tr 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz' | sed -e 's/\\///'`\n         FUJITSU_REL=`echo ${UNAME_RELEASE} | sed -e 's/ /_/'`\n         echo \"f300-fujitsu-${FUJITSU_SYS}${FUJITSU_REL}\"\n         exit 0 ;;\n     F301:UNIX_System_V:*:*)\n        echo f301-fujitsu-uxpv`echo $UNAME_RELEASE | sed 's/ .*//'`\n        exit 0 ;;\n-    hp3[0-9][05]:NetBSD:*:*)\n-\techo m68k-hp-netbsd${UNAME_RELEASE}\n-\texit 0 ;;\n     hp300:OpenBSD:*:*)\n \techo m68k-unknown-openbsd${UNAME_RELEASE}\n \texit 0 ;;\n-    sparc*:BSD/OS:*:*)\n-\techo sparc-unknown-bsdi${UNAME_RELEASE}\n-\texit 0 ;;\n     i?86:BSD/386:*:* | i?86:BSD/OS:*:*)\n \techo ${UNAME_MACHINE}-pc-bsdi${UNAME_RELEASE}\n \texit 0 ;;\n+    sparc*:BSD/OS:*:*)\n+\techo sparc-unknown-bsdi${UNAME_RELEASE}\n+\texit 0 ;;\n     *:BSD/OS:*:*)\n \techo ${UNAME_MACHINE}-unknown-bsdi${UNAME_RELEASE}\n \texit 0 ;;\n@@ -540,9 +622,6 @@ EOF\n \tfi\n \techo ${UNAME_MACHINE}-unknown-freebsd`echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'`\n \texit 0 ;;\n-    *:NetBSD:*:*)\n-\techo ${UNAME_MACHINE}-unknown-netbsd`echo ${UNAME_RELEASE}|sed -e 's/[-_].*/\\./'`\n-\texit 0 ;;\n     *:OpenBSD:*:*)\n \techo ${UNAME_MACHINE}-unknown-openbsd`echo ${UNAME_RELEASE}|sed -e 's/[-_].*/\\./'`\n \texit 0 ;;\n@@ -552,6 +631,15 @@ EOF\n     i*:MINGW*:*)\n \techo ${UNAME_MACHINE}-pc-mingw32\n \texit 0 ;;\n+    i*:Windows_NT*:* | Pentium*:Windows_NT*:*)\n+\t# How do we know it's Interix rather than the generic POSIX subsystem?\n+\t# It also conflicts with pre-2.0 versions of AT&T UWIN. Should we\n+\t# UNAME_MACHINE based on the output of uname instead of i386?\n+\techo i386-pc-interix\n+\texit 0 ;;\n+    i*:UWIN*:*)\n+\techo ${UNAME_MACHINE}-pc-uwin\n+\texit 0 ;;\n     p*:CYGWIN*:*)\n \techo powerpcle-unknown-cygwin\n \texit 0 ;;\n@@ -562,69 +650,132 @@ EOF\n \techo `echo ${UNAME_MACHINE}|sed -e 's,[-/].*$,,'`-unknown-gnu`echo ${UNAME_RELEASE}|sed -e 's,/.*$,,'`\n \texit 0 ;;\n     *:Linux:*:*)\n-\t# uname on the ARM produces all sorts of strangeness, and we need to\n-\t# filter it out.\n-\tcase \"$UNAME_MACHINE\" in\n-\t  armv*)\t\t      UNAME_MACHINE=$UNAME_MACHINE ;;\n-\t  arm* | sa110*)\t      UNAME_MACHINE=\"arm\" ;;\n-\tesac\n \n \t# The BFD linker knows what the default object file format is, so\n-\t# first see if it will tell us.\n-\tld_help_string=`ld --help 2>&1`\n+\t# first see if it will tell us. cd to the root directory to prevent\n+\t# problems with other programs or directories called `ld' in the path.\n+\tld_help_string=`cd /; ld --help 2>&1`\n \tld_supported_emulations=`echo $ld_help_string \\\n \t\t\t | sed -ne '/supported emulations:/!d\n \t\t\t\t    s/[ \t][ \t]*/ /g\n \t\t\t\t    s/.*supported emulations: *//\n \t\t\t\t    s/ .*//\n \t\t\t\t    p'`\n         case \"$ld_supported_emulations\" in\n-\t  i?86linux)  echo \"${UNAME_MACHINE}-pc-linux-gnuaout\"      ; exit 0 ;;\n-\t  i?86coff)   echo \"${UNAME_MACHINE}-pc-linux-gnucoff\"      ; exit 0 ;;\n-\t  sparclinux) echo \"${UNAME_MACHINE}-unknown-linux-gnuaout\" ; exit 0 ;;\n-\t  armlinux)   echo \"${UNAME_MACHINE}-unknown-linux-gnuaout\" ; exit 0 ;;\n-\t  m68klinux)  echo \"${UNAME_MACHINE}-unknown-linux-gnuaout\" ; exit 0 ;;\n-\t  elf32ppc)   echo \"powerpc-unknown-linux-gnu\"              ; exit 0 ;;\n+\t  *ia64)\n+\t\techo \"${UNAME_MACHINE}-unknown-linux\"\n+\t\texit 0\n+\t\t;;\n+\t  i?86linux)\n+\t\techo \"${UNAME_MACHINE}-pc-linux-gnuaout\"\n+\t\texit 0\n+\t\t;;\n+\t  i?86coff)\n+\t\techo \"${UNAME_MACHINE}-pc-linux-gnucoff\"\n+\t\texit 0\n+\t\t;;\n+\t  sparclinux)\n+\t\techo \"${UNAME_MACHINE}-unknown-linux-gnuaout\"\n+\t\texit 0\n+\t\t;;\n+\t  armlinux)\n+\t\techo \"${UNAME_MACHINE}-unknown-linux-gnuaout\"\n+\t\texit 0\n+\t\t;;\n+\t  elf32arm*)\n+\t\techo \"${UNAME_MACHINE}-unknown-linux-gnuoldld\"\n+\t\texit 0\n+\t\t;;\n+\t  armelf_linux*)\n+\t\techo \"${UNAME_MACHINE}-unknown-linux-gnu\"\n+\t\texit 0\n+\t\t;;\n+\t  m68klinux)\n+\t\techo \"${UNAME_MACHINE}-unknown-linux-gnuaout\"\n+\t\texit 0\n+\t\t;;\n+\t  elf32ppc | elf32ppclinux)\n+\t\t# Determine Lib Version\n+\t\tcat >$dummy.c <<EOF\n+#include <features.h>\n+#if defined(__GLIBC__)\n+extern char __libc_version[];\n+extern char __libc_release[];\n+#endif\n+main(argc, argv)\n+     int argc;\n+     char *argv[];\n+{\n+#if defined(__GLIBC__)\n+  printf(\"%s %s\\n\", __libc_version, __libc_release);\n+#else\n+  printf(\"unkown\\n\");\n+#endif\n+  return 0;\n+}\n+EOF\n+\t\tLIBC=\"\"\n+\t\t$CC_FOR_BUILD $dummy.c -o $dummy 2>/dev/null\n+\t\tif test \"$?\" = 0 ; then\n+\t\t\t./$dummy | grep 1\\.99 > /dev/null\n+\t\t\tif test \"$?\" = 0 ; then\n+\t\t\t\tLIBC=\"libc1\"\n+\t\t\tfi\n+\t\tfi\t\n+\t\trm -f $dummy.c $dummy\n+\t\techo powerpc-unknown-linux-gnu${LIBC}\n+\t\texit 0\n+\t\t;;\n \tesac\n \n \tif test \"${UNAME_MACHINE}\" = \"alpha\" ; then\n-\t\tsed 's/^\t//'  <<EOF >$dummy.s\n-\t\t.globl main\n-\t\t.ent main\n-\tmain:\n-\t\t.frame \\$30,0,\\$26,0\n-\t\t.prologue 0\n-\t\t.long 0x47e03d80 # implver $0\n-\t\tlda \\$2,259\n-\t\t.long 0x47e20c21 # amask $2,$1\n-\t\tsrl \\$1,8,\\$2\n-\t\tsll \\$2,2,\\$2\n-\t\tsll \\$0,3,\\$0\n-\t\taddl \\$1,\\$0,\\$0\n-\t\taddl \\$2,\\$0,\\$0\n-\t\tret \\$31,(\\$26),1\n-\t\t.end main\n+\t\tcat <<EOF >$dummy.s\n+\t\t\t.data\n+\t\t\\$Lformat:\n+\t\t\t.byte 37,100,45,37,120,10,0\t# \"%d-%x\\n\"\n+\n+\t\t\t.text\n+\t\t\t.globl main\n+\t\t\t.align 4\n+\t\t\t.ent main\n+\t\tmain:\n+\t\t\t.frame \\$30,16,\\$26,0\n+\t\t\tldgp \\$29,0(\\$27)\n+\t\t\t.prologue 1\n+\t\t\t.long 0x47e03d80 # implver \\$0\n+\t\t\tlda \\$2,-1\n+\t\t\t.long 0x47e20c21 # amask \\$2,\\$1\n+\t\t\tlda \\$16,\\$Lformat\n+\t\t\tmov \\$0,\\$17\n+\t\t\tnot \\$1,\\$18\n+\t\t\tjsr \\$26,printf\n+\t\t\tldgp \\$29,0(\\$26)\n+\t\t\tmov 0,\\$16\n+\t\t\tjsr \\$26,exit\n+\t\t\t.end main\n EOF\n \t\tLIBC=\"\"\n-\t\t${CC-cc} $dummy.s -o $dummy 2>/dev/null\n+\t\t$CC_FOR_BUILD $dummy.s -o $dummy 2>/dev/null\n \t\tif test \"$?\" = 0 ; then\n-\t\t\t./$dummy\n-\t\t\tcase \"$?\" in\n-\t\t\t7)\n+\t\t\tcase `./$dummy` in\n+\t\t\t0-0)\n \t\t\t\tUNAME_MACHINE=\"alpha\"\n \t\t\t\t;;\n-\t\t\t15)\n+\t\t\t1-0)\n \t\t\t\tUNAME_MACHINE=\"alphaev5\"\n \t\t\t\t;;\n-\t\t\t14)\n+\t\t\t1-1)\n \t\t\t\tUNAME_MACHINE=\"alphaev56\"\n \t\t\t\t;;\n-\t\t\t10)\n+\t\t\t1-101)\n \t\t\t\tUNAME_MACHINE=\"alphapca56\"\n \t\t\t\t;;\n-\t\t\t16)\n+\t\t\t2-303)\n \t\t\t\tUNAME_MACHINE=\"alphaev6\"\n \t\t\t\t;;\n+\t\t\t2-307)\n+\t\t\t\tUNAME_MACHINE=\"alphaev67\"\n+\t\t\t\t;;\n \t\t\tesac\n \n \t\t\tobjdump --private-headers $dummy | \\\n@@ -638,6 +789,7 @@ EOF\n \telif test \"${UNAME_MACHINE}\" = \"mips\" ; then\n \t  cat >$dummy.c <<EOF\n #ifdef __cplusplus\n+#include <stdio.h>  /* for printf() prototype */\n \tint main (int argc, char *argv[]) {\n #else\n \tint main (argc, argv) int argc; char *argv[]; {\n@@ -651,8 +803,10 @@ EOF\n   return 0;\n }\n EOF\n-\t  ${CC-cc} $dummy.c -o $dummy 2>/dev/null && ./$dummy \"${UNAME_MACHINE}\" && rm $dummy.c $dummy && exit 0\n+\t  $CC_FOR_BUILD $dummy.c -o $dummy 2>/dev/null && ./$dummy \"${UNAME_MACHINE}\" && rm $dummy.c $dummy && exit 0\n \t  rm -f $dummy.c $dummy\n+\telif test \"${UNAME_MACHINE}\" = \"s390\"; then\n+\t  echo s390-ibm-linux && exit 0\n \telse\n \t  # Either a pre-BFD a.out linker (linux-gnuoldld)\n \t  # or one that does not give us useful --help.\n@@ -674,6 +828,7 @@ EOF\n \t  cat >$dummy.c <<EOF\n #include <features.h>\n #ifdef __cplusplus\n+#include <stdio.h>  /* for printf() prototype */\n \tint main (int argc, char *argv[]) {\n #else\n \tint main (argc, argv) int argc; char *argv[]; {\n@@ -694,7 +849,7 @@ EOF\n   return 0;\n }\n EOF\n-\t  ${CC-cc} $dummy.c -o $dummy 2>/dev/null && ./$dummy \"${UNAME_MACHINE}\" && rm $dummy.c $dummy && exit 0\n+\t  $CC_FOR_BUILD $dummy.c -o $dummy 2>/dev/null && ./$dummy \"${UNAME_MACHINE}\" && rm $dummy.c $dummy && exit 0\n \t  rm -f $dummy.c $dummy\n \tfi ;;\n # ptx 4.0 does uname -s correctly, with DYNIX/ptx in there.  earlier versions\n@@ -711,10 +866,20 @@ EOF\n \techo ${UNAME_MACHINE}-pc-sysv4.2uw${UNAME_VERSION}\n \texit 0 ;;\n     i?86:*:4.*:* | i?86:SYSTEM_V:4.*:*)\n+\tUNAME_REL=`echo ${UNAME_RELEASE} | sed 's/\\/MP$//'`\n \tif grep Novell /usr/include/link.h >/dev/null 2>/dev/null; then\n-\t\techo ${UNAME_MACHINE}-univel-sysv${UNAME_RELEASE}\n+\t\techo ${UNAME_MACHINE}-univel-sysv${UNAME_REL}\n+\telse\n+\t\techo ${UNAME_MACHINE}-pc-sysv${UNAME_REL}\n+\tfi\n+\texit 0 ;;\n+    i?86:*:5:7*)\n+        # Fixed at (any) Pentium or better\n+        UNAME_MACHINE=i586\n+        if [ ${UNAME_SYSTEM} = \"UnixWare\" ] ; then\n+\t    echo ${UNAME_MACHINE}-sco-sysv${UNAME_RELEASE}uw${UNAME_VERSION}\n \telse\n-\t\techo ${UNAME_MACHINE}-pc-sysv${UNAME_RELEASE}\n+\t    echo ${UNAME_MACHINE}-pc-sysv${UNAME_RELEASE}\n \tfi\n \texit 0 ;;\n     i?86:*:3.2:*)\n@@ -726,19 +891,20 @@ EOF\n \t\t(/bin/uname -X|egrep i80486 >/dev/null) && UNAME_MACHINE=i486\n \t\t(/bin/uname -X|egrep '^Machine.*Pentium' >/dev/null) \\\n \t\t\t&& UNAME_MACHINE=i586\n+\t\t(/bin/uname -X|egrep '^Machine.*Pent ?II' >/dev/null) \\\n+\t\t\t&& UNAME_MACHINE=i686\n+\t\t(/bin/uname -X|egrep '^Machine.*Pentium Pro' >/dev/null) \\\n+\t\t\t&& UNAME_MACHINE=i686\n \t\techo ${UNAME_MACHINE}-pc-sco$UNAME_REL\n \telse\n \t\techo ${UNAME_MACHINE}-pc-sysv32\n \tfi\n \texit 0 ;;\n-    i?86:UnixWare:*:*)\n-\tif /bin/uname -X 2>/dev/null >/dev/null ; then\n-\t  (/bin/uname -X|egrep '^Machine.*Pentium' >/dev/null) \\\n-\t    && UNAME_MACHINE=i586\n-\tfi\n-\techo ${UNAME_MACHINE}-unixware-${UNAME_RELEASE}-${UNAME_VERSION}\n+    i?86:*DOS:*:*)\n+\techo ${UNAME_MACHINE}-pc-msdosdjgpp\n \texit 0 ;;\n     pc:*:*:*)\n+\t# Left here for compatibility:\n         # uname -m prints for DJGPP always 'pc', but it prints nothing about\n         # the processor, so we play safe by assuming i386.\n \techo i386-pc-msdosdjgpp\n@@ -824,7 +990,7 @@ EOF\n     news*:NEWS-OS:*:6*)\n \techo mips-sony-newsos6\n \texit 0 ;;\n-    R[34]000:*System_V*:*:* | R4000:UNIX_SYSV:*:* | R4000:UNIX_SV:*:*)\n+    R[34]000:*System_V*:*:* | R4000:UNIX_SYSV:*:* | R*000:UNIX_SV:*:*)\n \tif [ -d /usr/nec ]; then\n \t        echo mips-nec-sysv${UNAME_RELEASE}\n \telse\n@@ -852,6 +1018,15 @@ EOF\n     *:Rhapsody:*:*)\n \techo ${UNAME_MACHINE}-apple-rhapsody${UNAME_RELEASE}\n \texit 0 ;;\n+    Power*:Mac*OS:*:*)\n+\techo powerpc-apple-macos${UNAME_RELEASE}\n+\texit 0 ;;\n+    *:Mac*OS:*:*)\n+\techo ${UNAME_MACHINE}-apple-macos${UNAME_RELEASE}\n+\texit 0 ;;\n+    *:QNX:*:4*)\n+\techo i386-qnx-qnx${UNAME_VERSION}\n+\texit 0 ;;\n esac\n \n #echo '(No uname command or uname output not recognized.)' 1>&2\n@@ -958,7 +1133,7 @@ main ()\n }\n EOF\n \n-${CC-cc} $dummy.c -o $dummy 2>/dev/null && ./$dummy && rm $dummy.c $dummy && exit 0\n+$CC_FOR_BUILD $dummy.c -o $dummy 2>/dev/null && ./$dummy && rm $dummy.c $dummy && exit 0\n rm -f $dummy.c $dummy\n \n # Apollos put the system type in the environment."}, {"sha": "5d7562404528048b46d5795df88133e1934a7e3a", "filename": "libffi/config.sub", "status": "modified", "additions": 313, "deletions": 42, "changes": 355, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f72dc9e314346054bc995d63dc4cc01e2770fab/libffi%2Fconfig.sub", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f72dc9e314346054bc995d63dc4cc01e2770fab/libffi%2Fconfig.sub", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fconfig.sub?ref=0f72dc9e314346054bc995d63dc4cc01e2770fab", "patch": "@@ -1,6 +1,8 @@\n #! /bin/sh\n # Configuration validation subroutine script, version 1.1.\n-#   Copyright (C) 1991, 92-97, 1998 Free Software Foundation, Inc.\n+#   Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000\n+#   Free Software Foundation, Inc.\n+#\n # This file is (in principle) common to ALL GNU software.\n # The presence of a machine in this file suggests that SOME GNU software\n # can handle that machine.  It does not imply ALL GNU software can.\n@@ -25,6 +27,9 @@\n # configuration script generated by Autoconf, you may include it under\n # the same distribution terms that you use for the rest of that program.\n \n+# Written by Per Bothner <bothner@cygnus.com>.\n+# Please send patches to <config-patches@gnu.org>.\n+#\n # Configuration subroutine to validate and canonicalize a configuration type.\n # Supply the specified configuration type as an argument.\n # If it is invalid, we print an error message on stderr and exit with code 1.\n@@ -98,11 +103,21 @@ case $os in\n \t\tos=\n \t\tbasic_machine=$1\n \t\t;;\n+\t-sim | -cisco | -oki | -wec | -winbond)\n+\t\tos=\n+\t\tbasic_machine=$1\n+\t\t;;\n+\t-scout)\n+\t\t;;\n+\t-wrs)\n+\t\tos=-vxworks\n+\t\tbasic_machine=$1\n+\t\t;;\n \t-hiux*)\n \t\tos=-hiuxwe2\n \t\t;;\n \t-sco5)\n-\t\tos=sco3.2v5\n+\t\tos=-sco3.2v5\n \t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`\n \t\t;;\n \t-sco4)\n@@ -121,6 +136,9 @@ case $os in\n \t\tos=-sco3.2v2\n \t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`\n \t\t;;\n+\t-udk*)\n+\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`\n+\t\t;;\n \t-isc)\n \t\tos=-isc2.2\n \t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`\n@@ -143,23 +161,34 @@ case $os in\n \t-psos*)\n \t\tos=-psos\n \t\t;;\n+\t-mint | -mint[0-9]*)\n+\t\tbasic_machine=m68k-atari\n+\t\tos=-mint\n+\t\t;;\n esac\n \n # Decode aliases for certain CPU-COMPANY combinations.\n case $basic_machine in\n \t# Recognize the basic CPU types without company name.\n \t# Some are omitted here because they have special meanings below.\n-\ttahoe | i860 | m32r | m68k | m68000 | m88k | ns32k | arc | arm \\\n+\ttahoe | i860 | ia64 | m32r | m68k | m68000 | m88k | ns32k | arc | arm \\\n \t\t| arme[lb] | pyramid | mn10200 | mn10300 | tron | a29k \\\n-\t\t| 580 | i960 | h8300 | hppa | hppa1.0 | hppa1.1 | hppa2.0 \\\n-\t\t| hppa2.0w \\\n-\t\t| alpha | alphaev5 | alphaev56 | we32k | ns16k | clipper \\\n-\t\t| i370 | sh | powerpc | powerpcle | 1750a | dsp16xx | pdp11 \\\n-\t\t| mips64 | mipsel | mips64el | mips64orion | mips64orionel \\\n-\t\t| mipstx39 | mipstx39el \\\n-\t\t| sparc | sparclet | sparclite | sparc64 | v850)\n+\t\t| 580 | i960 | h8300 \\\n+\t\t| hppa | hppa1.0 | hppa1.1 | hppa2.0 | hppa2.0w | hppa2.0n \\\n+\t\t| alpha | alphaev[4-8] | alphaev56 | alphapca5[67] \\\n+\t\t| alphaev6[78] \\\n+\t\t| we32k | ns16k | clipper | i370 | sh | powerpc | powerpcle \\\n+\t\t| 1750a | dsp16xx | pdp11 | mips16 | mips64 | mipsel | mips64el \\\n+\t\t| mips64orion | mips64orionel | mipstx39 | mipstx39el \\\n+\t\t| mips64vr4300 | mips64vr4300el | mips64vr4100 | mips64vr4100el \\\n+\t\t| mips64vr5000 | miprs64vr5000el | mcore \\\n+\t\t| sparc | sparclet | sparclite | sparc64 | sparcv9 | v850 | c4x \\\n+\t\t| thumb | d10v | fr30 | avr)\n \t\tbasic_machine=$basic_machine-unknown\n \t\t;;\n+\tm88110 | m680[12346]0 | m683?2 | m68360 | m5200 | z8k | v70 | h8500 | w65 | pj | pjl)\n+\t\t;;\n+\n \t# We use `pc' rather than `unknown'\n \t# because (1) that's what they normally are, and\n \t# (2) the word \"unknown\" tends to confuse beginning users.\n@@ -172,28 +201,46 @@ case $basic_machine in\n \t\texit 1\n \t\t;;\n \t# Recognize the basic CPU types with company name.\n-\tvax-* | tahoe-* | i[34567]86-* | i860-* | m32r-* | m68k-* | m68000-* \\\n+\t# FIXME: clean up the formatting here.\n+\tvax-* | tahoe-* | i[34567]86-* | i860-* | ia64-* | m32r-* | m68k-* | m68000-* \\\n \t      | m88k-* | sparc-* | ns32k-* | fx80-* | arc-* | arm-* | c[123]* \\\n \t      | mips-* | pyramid-* | tron-* | a29k-* | romp-* | rs6000-* \\\n-\t      | power-* | none-* | 580-* | cray2-* | h8300-* | i960-* \\\n-\t      | xmp-* | ymp-* | hppa-* | hppa1.0-* | hppa1.1-* | hppa2.0-* \\\n-\t      | hppa2.0w-* \\\n-\t      | alpha-* | alphaev5-* | alphaev56-* | we32k-* | cydra-* \\\n-\t      | ns16k-* | pn-* | np1-* | xps100-* | clipper-* | orion-* \\\n+\t      | power-* | none-* | 580-* | cray2-* | h8300-* | h8500-* | i960-* \\\n+\t      | xmp-* | ymp-* \\\n+\t      | hppa-* | hppa1.0-* | hppa1.1-* | hppa2.0-* | hppa2.0w-* | hppa2.0n-* \\\n+\t      | alpha-* | alphaev[4-8]-* | alphaev56-* | alphapca5[67]-* \\\n+\t      | alphaev6[78]-* \\\n+\t      | we32k-* | cydra-* | ns16k-* | pn-* | np1-* | xps100-* \\\n+\t      | clipper-* | orion-* \\\n \t      | sparclite-* | pdp11-* | sh-* | powerpc-* | powerpcle-* \\\n-\t      | sparc64-* | mips64-* | mipsel-* \\\n-\t      | mips64el-* | mips64orion-* | mips64orionel-*  \\\n-\t      | mipstx39-* | mipstx39el-* \\\n-\t      | f301-* | armv*-*)\n+\t      | sparc64-* | sparcv9-* | sparc86x-* | mips16-* | mips64-* | mipsel-* \\\n+\t      | mips64el-* | mips64orion-* | mips64orionel-* \\\n+\t      | mips64vr4100-* | mips64vr4100el-* | mips64vr4300-* | mips64vr4300el-* \\\n+\t      | mipstx39-* | mipstx39el-* | mcore-* \\\n+\t      | f301-* | armv*-* | s390-* | sv1-* | t3e-* \\\n+\t      | m88110-* | m680[01234]0-* | m683?2-* | m68360-* | z8k-* | d10v-* \\\n+\t      | thumb-* | v850-* | d30v-* | tic30-* | c30-* | fr30-* )\n \t\t;;\n \t# Recognize the various machine names and aliases which stand\n \t# for a CPU type and a company and sometimes even an OS.\n+\t386bsd)\n+\t\tbasic_machine=i386-unknown\n+\t\tos=-bsd\n+\t\t;;\n \t3b1 | 7300 | 7300-att | att-7300 | pc7300 | safari | unixpc)\n \t\tbasic_machine=m68000-att\n \t\t;;\n \t3b*)\n \t\tbasic_machine=we32k-att\n \t\t;;\n+\ta29khif)\n+\t\tbasic_machine=a29k-amd\n+\t\tos=-udi\n+\t\t;;\n+\tadobe68k)\n+\t\tbasic_machine=m68010-adobe\n+\t\tos=-scout\n+\t\t;;\n \talliant | fx80)\n \t\tbasic_machine=fx80-alliant\n \t\t;;\n@@ -223,6 +270,10 @@ case $basic_machine in\n \t\tbasic_machine=m68k-apollo\n \t\tos=-sysv\n \t\t;;\n+\tapollo68bsd)\n+\t\tbasic_machine=m68k-apollo\n+\t\tos=-bsd\n+\t\t;;\n \taux)\n \t\tbasic_machine=m68k-apple\n \t\tos=-aux\n@@ -299,6 +350,10 @@ case $basic_machine in\n \tencore | umax | mmax)\n \t\tbasic_machine=ns32k-encore\n \t\t;;\n+\tes1800 | OSE68k | ose68k | ose | OSE)\n+\t\tbasic_machine=m68k-ericsson\n+\t\tos=-ose\n+\t\t;;\n \tfx2800)\n \t\tbasic_machine=i860-alliant\n \t\t;;\n@@ -317,6 +372,14 @@ case $basic_machine in\n \t\tbasic_machine=h8300-hitachi\n \t\tos=-hms\n \t\t;;\n+\th8300xray)\n+\t\tbasic_machine=h8300-hitachi\n+\t\tos=-xray\n+\t\t;;\n+\th8500hms)\n+\t\tbasic_machine=h8500-hitachi\n+\t\tos=-hms\n+\t\t;;\n \tharris)\n \t\tbasic_machine=m88k-harris\n \t\tos=-sysv3\n@@ -332,13 +395,30 @@ case $basic_machine in\n \t\tbasic_machine=m68k-hp\n \t\tos=-hpux\n \t\t;;\n+\thp3k9[0-9][0-9] | hp9[0-9][0-9])\n+\t\tbasic_machine=hppa1.0-hp\n+\t\t;;\n \thp9k2[0-9][0-9] | hp9k31[0-9])\n \t\tbasic_machine=m68000-hp\n \t\t;;\n \thp9k3[2-9][0-9])\n \t\tbasic_machine=m68k-hp\n \t\t;;\n-\thp9k7[0-9][0-9] | hp7[0-9][0-9] | hp9k8[0-9]7 | hp8[0-9]7)\n+\thp9k6[0-9][0-9] | hp6[0-9][0-9])\n+\t\tbasic_machine=hppa1.0-hp\n+\t\t;;\n+\thp9k7[0-79][0-9] | hp7[0-79][0-9])\n+\t\tbasic_machine=hppa1.1-hp\n+\t\t;;\n+\thp9k78[0-9] | hp78[0-9])\n+\t\t# FIXME: really hppa2.0-hp\n+\t\tbasic_machine=hppa1.1-hp\n+\t\t;;\n+\thp9k8[67]1 | hp8[67]1 | hp9k80[24] | hp80[24] | hp9k8[78]9 | hp8[78]9 | hp9k893 | hp893)\n+\t\t# FIXME: really hppa2.0-hp\n+\t\tbasic_machine=hppa1.1-hp\n+\t\t;;\n+\thp9k8[0-9][13679] | hp8[0-9][13679])\n \t\tbasic_machine=hppa1.1-hp\n \t\t;;\n \thp9k8[0-9][0-9] | hp8[0-9][0-9])\n@@ -347,17 +427,16 @@ case $basic_machine in\n \thppa-next)\n \t\tos=-nextstep3\n \t\t;;\n-\thp3k9[0-9][0-9] | hp9[0-9][0-9])\n-\t\tbasic_machine=hppa1.0-hp\n-\t\tos=-mpeix\n+\thppaosf)\n+\t\tbasic_machine=hppa1.1-hp\n+\t\tos=-osf\n \t\t;;\n-\thp3k9[0-9][0-9] | hp9[0-9][0-9])\n-\t\tbasic_machine=hppa1.0-hp\n-\t\tos=-mpeix\n+\thppro)\n+\t\tbasic_machine=hppa1.1-hp\n+\t\tos=-proelf\n \t\t;;\n \ti370-ibm* | ibm*)\n \t\tbasic_machine=i370-ibm\n-\t\tos=-mvs\n \t\t;;\n # I'm not sure what \"Sysv32\" means.  Should this be sysv3.2?\n \ti[34567]86v32)\n@@ -376,6 +455,25 @@ case $basic_machine in\n \t\tbasic_machine=`echo $1 | sed -e 's/86.*/86-pc/'`\n \t\tos=-solaris2\n \t\t;;\n+\ti386mach)\n+\t\tbasic_machine=i386-mach\n+\t\tos=-mach\n+\t\t;;\n+\ti386-vsta | vsta)\n+\t\tbasic_machine=i386-unknown\n+\t\tos=-vsta\n+\t\t;;\n+\ti386-go32 | go32)\n+\t\tbasic_machine=i386-unknown\n+\t\tos=-go32\n+\t\t;;\n+\ti386-mingw32 | mingw32)\n+\t\tbasic_machine=i386-unknown\n+\t\tos=-mingw32\n+\t\t;;\n+\ti386-qnx | qnx)\n+\t\tbasic_machine=i386-qnx\n+\t\t;;\n \tiris | iris4d)\n \t\tbasic_machine=mips-sgi\n \t\tcase $os in\n@@ -404,6 +502,10 @@ case $basic_machine in\n \tminiframe)\n \t\tbasic_machine=m68000-convergent\n \t\t;;\n+\t*mint | -mint[0-9]* | *MiNT | *MiNT[0-9]*)\n+\t\tbasic_machine=m68k-atari\n+\t\tos=-mint\n+\t\t;;\n \tmipsel*-linux*)\n \t\tbasic_machine=mipsel-unknown\n \t\tos=-linux-gnu\n@@ -418,12 +520,32 @@ case $basic_machine in\n \tmips3*)\n \t\tbasic_machine=`echo $basic_machine | sed -e 's/mips3/mips64/'`-unknown\n \t\t;;\n+\tmmix*)\n+\t\tbasic_machine=mmix-knuth\n+\t\tos=-mmixware\n+\t\t;;\n+\tmonitor)\n+\t\tbasic_machine=m68k-rom68k\n+\t\tos=-coff\n+\t\t;;\n+\tmsdos)\n+\t\tbasic_machine=i386-unknown\n+\t\tos=-msdos\n+\t\t;;\n+\tmvs)\n+\t\tbasic_machine=i370-ibm\n+\t\tos=-mvs\n+\t\t;;\n \tncr3000)\n \t\tbasic_machine=i486-ncr\n \t\tos=-sysv4\n \t\t;;\n+\tnetbsd386)\n+\t\tbasic_machine=i386-unknown\n+\t\tos=-netbsd\n+\t\t;;\n \tnetwinder)\n-\t\tbasic_machine=armv4l-corel\n+\t\tbasic_machine=armv4l-rebel\n \t\tos=-linux\n \t\t;;\n \tnews | news700 | news800 | news900)\n@@ -438,6 +560,10 @@ case $basic_machine in\n \t\tbasic_machine=mips-sony\n \t\tos=-newsos\n \t\t;;\n+\tnecv70)\n+\t\tbasic_machine=v70-nec\n+\t\tos=-sysv\n+\t\t;;\n \tnext | m*-next )\n \t\tbasic_machine=m68k-next\n \t\tcase $os in\n@@ -463,9 +589,25 @@ case $basic_machine in\n \t\tbasic_machine=i960-intel\n \t\tos=-nindy\n \t\t;;\n+\tmon960)\n+\t\tbasic_machine=i960-intel\n+\t\tos=-mon960\n+\t\t;;\n \tnp1)\n \t\tbasic_machine=np1-gould\n \t\t;;\n+\top50n-* | op60c-*)\n+\t\tbasic_machine=hppa1.1-oki\n+\t\tos=-proelf\n+\t\t;;\n+\tOSE68000 | ose68000)\n+\t\tbasic_machine=m68000-ericsson\n+\t\tos=-ose\n+\t\t;;\n+\tos68k)\n+\t\tbasic_machine=m68k-none\n+\t\tos=-os68k\n+\t\t;;\n \tpa-hitachi)\n \t\tbasic_machine=hppa1.1-hitachi\n \t\tos=-hiuxwe2\n@@ -483,19 +625,19 @@ case $basic_machine in\n         pc532 | pc532-*)\n \t\tbasic_machine=ns32k-pc532\n \t\t;;\n-\tpentium | p5 | k5 | nexen)\n+\tpentium | p5 | k5 | k6 | nexen)\n \t\tbasic_machine=i586-pc\n \t\t;;\n-\tpentiumpro | p6 | k6 | 6x86)\n+\tpentiumpro | p6 | 6x86)\n \t\tbasic_machine=i686-pc\n \t\t;;\n \tpentiumii | pentium2)\n \t\tbasic_machine=i786-pc\n \t\t;;\n-\tpentium-* | p5-* | k5-* | nexen-*)\n+\tpentium-* | p5-* | k5-* | k6-* | nexen-*)\n \t\tbasic_machine=i586-`echo $basic_machine | sed 's/^[^-]*-//'`\n \t\t;;\n-\tpentiumpro-* | p6-* | k6-* | 6x86-*)\n+\tpentiumpro-* | p6-* | 6x86-*)\n \t\tbasic_machine=i686-`echo $basic_machine | sed 's/^[^-]*-//'`\n \t\t;;\n \tpentiumii-* | pentium2-*)\n@@ -519,26 +661,45 @@ case $basic_machine in\n \tps2)\n \t\tbasic_machine=i386-ibm\n \t\t;;\n+\trom68k)\n+\t\tbasic_machine=m68k-rom68k\n+\t\tos=-coff\n+\t\t;;\n \trm[46]00)\n \t\tbasic_machine=mips-siemens\n \t\t;;\n \trtpc | rtpc-*)\n \t\tbasic_machine=romp-ibm\n \t\t;;\n+\tsa29200)\n+\t\tbasic_machine=a29k-amd\n+\t\tos=-udi\n+\t\t;;\n \tsequent)\n \t\tbasic_machine=i386-sequent\n \t\t;;\n \tsh)\n \t\tbasic_machine=sh-hitachi\n \t\tos=-hms\n \t\t;;\n+\tsparclite-wrs)\n+\t\tbasic_machine=sparclite-wrs\n+\t\tos=-vxworks\n+\t\t;;\n \tsps7)\n \t\tbasic_machine=m68k-bull\n \t\tos=-sysv2\n \t\t;;\n \tspur)\n \t\tbasic_machine=spur-unknown\n \t\t;;\n+\tst2000)\n+\t\tbasic_machine=m68k-tandem\n+\t\t;;\n+\tstratus)\n+\t\tbasic_machine=i860-stratus\n+\t\tos=-sysv4\n+\t\t;;\n \tsun2)\n \t\tbasic_machine=m68000-sun\n \t\t;;\n@@ -579,10 +740,18 @@ case $basic_machine in\n \tsun386 | sun386i | roadrunner)\n \t\tbasic_machine=i386-sun\n \t\t;;\n+\tsv1)\n+\t\tbasic_machine=sv1-cray\n+\t\tos=-unicos\n+\t\t;;\n \tsymmetry)\n \t\tbasic_machine=i386-sequent\n \t\tos=-dynix\n \t\t;;\n+\tt3e)\n+\t\tbasic_machine=t3e-cray\n+\t\tos=-unicos\n+\t\t;;\n \ttx39)\n \t\tbasic_machine=mipstx39-unknown\n \t\t;;\n@@ -600,6 +769,10 @@ case $basic_machine in\n \t\tbasic_machine=a29k-nyu\n \t\tos=-sym1\n \t\t;;\n+\tv810 | necv810)\n+\t\tbasic_machine=v810-nec\n+\t\tos=-none\n+\t\t;;\n \tvaxv)\n \t\tbasic_machine=vax-dec\n \t\tos=-sysv\n@@ -623,20 +796,41 @@ case $basic_machine in\n \t\tbasic_machine=a29k-wrs\n \t\tos=-vxworks\n \t\t;;\n+\tw65*)\n+\t\tbasic_machine=w65-wdc\n+\t\tos=-none\n+\t\t;;\n+\tw89k-*)\n+\t\tbasic_machine=hppa1.1-winbond\n+\t\tos=-proelf\n+\t\t;;\n \txmp)\n \t\tbasic_machine=xmp-cray\n \t\tos=-unicos\n \t\t;;\n         xps | xps100)\n \t\tbasic_machine=xps100-honeywell\n \t\t;;\n+\tz8k-*-coff)\n+\t\tbasic_machine=z8k-unknown\n+\t\tos=-sim\n+\t\t;;\n \tnone)\n \t\tbasic_machine=none-none\n \t\tos=-none\n \t\t;;\n \n # Here we handle the default manufacturer of certain CPU types.  It is in\n # some cases the only manufacturer, in others, it is the most popular.\n+\tw89k)\n+\t\tbasic_machine=hppa1.1-winbond\n+\t\t;;\n+\top50n)\n+\t\tbasic_machine=hppa1.1-oki\n+\t\t;;\n+\top60c)\n+\t\tbasic_machine=hppa1.1-oki\n+\t\t;;\n \tmips)\n \t\tif [ x$os = x-linux-gnu ]; then\n \t\t\tbasic_machine=mips-unknown\n@@ -659,7 +853,7 @@ case $basic_machine in\n \twe32k)\n \t\tbasic_machine=we32k-att\n \t\t;;\n-\tsparc)\n+\tsparc | sparcv9)\n \t\tbasic_machine=sparc-sun\n \t\t;;\n         cydra)\n@@ -671,6 +865,16 @@ case $basic_machine in\n \torion105)\n \t\tbasic_machine=clipper-highlevel\n \t\t;;\n+\tmac | mpw | mac-mpw)\n+\t\tbasic_machine=m68k-apple\n+\t\t;;\n+\tpmac | pmac-mpw)\n+\t\tbasic_machine=powerpc-apple\n+\t\t;;\n+\tc4x*)\n+\t\tbasic_machine=c4x-none\n+\t\tos=-coff\n+\t\t;;\n \t*)\n \t\techo Invalid configuration \\`$1\\': machine \\`$basic_machine\\' not recognized 1>&2\n \t\texit 1\n@@ -724,14 +928,21 @@ case $os in\n \t      | -nindy* | -vxsim* | -vxworks* | -ebmon* | -hms* | -mvs* \\\n \t      | -clix* | -riscos* | -uniplus* | -iris* | -rtu* | -xenix* \\\n \t      | -hiux* | -386bsd* | -netbsd* | -openbsd* | -freebsd* | -riscix* \\\n-\t      | -lynxos* | -bosx* | -nextstep* | -cxux* | -aout* | -elf* \\\n+\t      | -lynxos* | -bosx* | -nextstep* | -cxux* | -aout* | -elf* | -oabi* \\\n \t      | -ptx* | -coff* | -ecoff* | -winnt* | -domain* | -vsta* \\\n \t      | -udi* | -eabi* | -lites* | -ieee* | -go32* | -aux* \\\n \t      | -cygwin* | -pe* | -psos* | -moss* | -proelf* | -rtems* \\\n-\t      | -mingw32* | -linux-gnu* | -uxpv* | -beos* | -rhapsody* \\\n-\t      | -openstep* | -mpeix* | -oskit*)\n+\t      | -mingw32* | -linux-gnu* | -uxpv* | -beos* | -mpeix* | -udk* \\\n+\t      | -interix* | -uwin* | -rhapsody* | -opened* | -openstep* | -oskit*)\n \t# Remember, each alternative MUST END IN *, to match a version number.\n \t\t;;\n+\t-sim | -es1800* | -hms* | -xray | -os68k* | -none* | -v88r* \\\n+\t      | -windows* | -osx | -abug | -netware* | -os9* | -beos* \\\n+\t      | -macos* | -mpw* | -magic* | -mmixware* | -mon960* | -lnews*)\n+\t\t;;\n+\t-mac*)\n+\t\tos=`echo $os | sed -e 's|mac|macos|'`\n+\t\t;;\n \t-linux*)\n \t\tos=`echo $os | sed -e 's|linux|linux-gnu|'`\n \t\t;;\n@@ -741,6 +952,12 @@ case $os in\n \t-sunos6*)\n \t\tos=`echo $os | sed -e 's|sunos6|solaris3|'`\n \t\t;;\n+\t-opened*)\n+\t\tos=-openedition\n+\t\t;;\n+\t-wince*)\n+\t\tos=-wince\n+\t\t;;\n \t-osfrose*)\n \t\tos=-osfrose\n \t\t;;\n@@ -756,6 +973,9 @@ case $os in\n \t-acis*)\n \t\tos=-aos\n \t\t;;\n+\t-386bsd)\n+\t\tos=-bsd\n+\t\t;;\n \t-ctix* | -uts*)\n \t\tos=-sysv\n \t\t;;\n@@ -775,6 +995,9 @@ case $os in\n \t-oss*)\n \t\tos=-sysv3\n \t\t;;\n+        -qnx)\n+\t\tos=-qnx4\n+\t\t;;\n \t-svr4)\n \t\tos=-sysv4\n \t\t;;\n@@ -787,9 +1010,18 @@ case $os in\n \t# This must come after -sysvr4.\n \t-sysv*)\n \t\t;;\n+\t-ose*)\n+\t\tos=-ose\n+\t\t;;\n+\t-es1800*)\n+\t\tos=-ose\n+\t\t;;\n \t-xenix)\n \t\tos=-xenix\n \t\t;;\n+        -*mint | -*MiNT)\n+\t        os=-mint\n+\t\t;;\n \t-none)\n \t\t;;\n \t*)\n@@ -815,7 +1047,7 @@ case $basic_machine in\n \t*-acorn)\n \t\tos=-riscix1.2\n \t\t;;\n-\tarm*-corel)\n+\tarm*-rebel)\n \t\tos=-linux\n \t\t;;\n \tarm*-semi)\n@@ -839,6 +1071,15 @@ case $basic_machine in\n \t\t# default.\n \t\t# os=-sunos4\n \t\t;;\n+\tm68*-cisco)\n+\t\tos=-aout\n+\t\t;;\n+\tmips*-cisco)\n+\t\tos=-elf\n+\t\t;;\n+\tmips*-*)\n+\t\tos=-elf\n+\t\t;;\n \t*-tti)\t# must be before sparc entry or we get the wrong os.\n \t\tos=-sysv3\n \t\t;;\n@@ -851,6 +1092,15 @@ case $basic_machine in\n \t*-ibm)\n \t\tos=-aix\n \t\t;;\n+\t*-wec)\n+\t\tos=-proelf\n+\t\t;;\n+\t*-winbond)\n+\t\tos=-proelf\n+\t\t;;\n+\t*-oki)\n+\t\tos=-proelf\n+\t\t;;\n \t*-hp)\n \t\tos=-hpux\n \t\t;;\n@@ -914,6 +1164,18 @@ case $basic_machine in\n \tf301-fujitsu)\n \t\tos=-uxpv\n \t\t;;\n+\t*-rom68k)\n+\t\tos=-coff\n+\t\t;;\n+\t*-*bug)\n+\t\tos=-coff\n+\t\t;;\n+\t*-apple)\n+\t\tos=-macos\n+\t\t;;\n+\t*-atari*)\n+\t\tos=-mint\n+\t\t;;\n \t*)\n \t\tos=-none\n \t\t;;\n@@ -935,10 +1197,10 @@ case $basic_machine in\n \t\t\t-aix*)\n \t\t\t\tvendor=ibm\n \t\t\t\t;;\n-\t\t\t-hpux*)\n-\t\t\t\tvendor=hp\n+\t\t\t-beos*)\n+\t\t\t\tvendor=be\n \t\t\t\t;;\n-\t\t\t-mpeix*)\n+\t\t\t-hpux*)\n \t\t\t\tvendor=hp\n \t\t\t\t;;\n \t\t\t-mpeix*)\n@@ -959,7 +1221,7 @@ case $basic_machine in\n \t\t\t-genix*)\n \t\t\t\tvendor=ns\n \t\t\t\t;;\n-\t\t\t-mvs*)\n+\t\t\t-mvs* | -opened*)\n \t\t\t\tvendor=ibm\n \t\t\t\t;;\n \t\t\t-ptx*)\n@@ -971,6 +1233,15 @@ case $basic_machine in\n \t\t\t-aux*)\n \t\t\t\tvendor=apple\n \t\t\t\t;;\n+\t\t\t-hms*)\n+\t\t\t\tvendor=hitachi\n+\t\t\t\t;;\n+\t\t\t-mpw* | -macos*)\n+\t\t\t\tvendor=apple\n+\t\t\t\t;;\n+\t\t\t-*mint | -*MiNT)\n+\t\t\t\tvendor=atari\n+\t\t\t\t;;\n \t\tesac\n \t\tbasic_machine=`echo $basic_machine | sed \"s/unknown/$vendor/\"`\n \t\t;;"}]}