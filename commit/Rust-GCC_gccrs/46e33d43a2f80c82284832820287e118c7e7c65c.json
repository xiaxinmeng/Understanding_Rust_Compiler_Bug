{"sha": "46e33d43a2f80c82284832820287e118c7e7c65c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDZlMzNkNDNhMmY4MGM4MjI4NDgzMjgyMDI4N2UxMThjN2U3YzY1Yw==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2003-04-01T07:35:11Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2003-04-01T07:35:11Z"}, "message": "re PR middle-end/9936 (ICE with local function and variable-length 2d array)\n\n\tPR c/9936\n\t* c-decl.c (grokdeclarator): Clear SAVE_EXPR_CONTEXT for\n\tvariably-sized arrays in parameters.\n\t(set_save_expr_context): New function.\n\t(c_expand_body): Use it, via walk_tree.\n\n\tPR c/9936\n\t* gcc.dg/20030331-2.c: New test.\n\nFrom-SVN: r65128", "tree": {"sha": "20f14569b12a88ace119697818b500699afb7a34", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/20f14569b12a88ace119697818b500699afb7a34"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/46e33d43a2f80c82284832820287e118c7e7c65c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46e33d43a2f80c82284832820287e118c7e7c65c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/46e33d43a2f80c82284832820287e118c7e7c65c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46e33d43a2f80c82284832820287e118c7e7c65c/comments", "author": null, "committer": null, "parents": [{"sha": "6fa91a1d0b0546b6cfeb91dee5d9b53b58cd04b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6fa91a1d0b0546b6cfeb91dee5d9b53b58cd04b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6fa91a1d0b0546b6cfeb91dee5d9b53b58cd04b8"}], "stats": {"total": 66, "additions": 65, "deletions": 1}, "files": [{"sha": "a2ebf09d600c14286e227c802f6bf1b5fbd6ebc5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46e33d43a2f80c82284832820287e118c7e7c65c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46e33d43a2f80c82284832820287e118c7e7c65c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=46e33d43a2f80c82284832820287e118c7e7c65c", "patch": "@@ -1,3 +1,11 @@\n+2003-03-31  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c/9936\n+\t* c-decl.c (grokdeclarator): Clear SAVE_EXPR_CONTEXT for\n+\tvariably-sized arrays in parameters.\n+\t(set_save_expr_context): New function.\n+\t(c_expand_body): Use it, via walk_tree.\n+\n 2003-03-31  Eric Christopher  <echristo@redhat.com>\n \n \t* combine.c (can_combine_p): Allow ZERO_EXTRACT and STRICT_LOW_PART."}, {"sha": "e0354f0f1f6d5da00b3d138cbc73c8d645bd7c98", "filename": "gcc/c-decl.c", "status": "modified", "additions": 42, "deletions": 1, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46e33d43a2f80c82284832820287e118c7e7c65c/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46e33d43a2f80c82284832820287e118c7e7c65c/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=46e33d43a2f80c82284832820287e118c7e7c65c", "patch": "@@ -4103,7 +4103,20 @@ grokdeclarator (declarator, declspecs, decl_context, initialized)\n \t\t    }\n \n \t\t  if (size_varies)\n-\t\t    itype = variable_size (itype);\n+\t\t    {\n+\t\t      /* We must be able to distinguish the\n+\t\t\t SAVE_EXPR_CONTEXT for the variably-sized type\n+\t\t\t so that we can set it correctly in\n+\t\t\t set_save_expr_context.  The convention is\n+\t\t\t that all SAVE_EXPRs that need to be reset\n+\t\t\t have NULL_TREE for their SAVE_EXPR_CONTEXT.  */\n+\t\t      tree cfd = current_function_decl;\n+\t\t      if (decl_context == PARM)\n+\t\t\tcurrent_function_decl = NULL_TREE;\n+\t\t      itype = variable_size (itype);\n+\t\t      if (decl_context == PARM)\n+\t\t\tcurrent_function_decl = cfd;\n+\t\t    }\n \t\t  itype = build_index_type (itype);\n \t\t}\n \t    }\n@@ -6508,6 +6521,25 @@ c_expand_deferred_function (fndecl)\n     }\n }\n \n+/* Called to move the SAVE_EXPRs for parameter declarations in a\n+   nested function into the nested function.  DATA is really the\n+   nested FUNCTION_DECL.  */\n+\n+static tree\n+set_save_expr_context (tree *tp, \n+\t\t       int *walk_subtrees,\n+\t\t       void *data)\n+{\n+  if (TREE_CODE (*tp) == SAVE_EXPR && !SAVE_EXPR_CONTEXT (*tp))\n+    SAVE_EXPR_CONTEXT (*tp) = (tree) data;\n+  /* Do not walk back into the SAVE_EXPR_CONTEXT; that will cause\n+     circularity.  */\n+  else if (DECL_P (*tp))\n+    *walk_subtrees = 0;\n+\n+  return NULL_TREE;\n+}\n+\n /* Generate the RTL for the body of FNDECL.  If NESTED_P is nonzero,\n    then we are already in the process of generating RTL for another\n    function.  If can_defer_p is zero, we won't attempt to defer the\n@@ -6548,6 +6580,15 @@ c_expand_body_1 (fndecl, nested_p)\n   /* Set up parameters and prepare for return, for the function.  */\n   expand_function_start (fndecl, 0);\n \n+  /* If the function has a variably modified type, there may be\n+     SAVE_EXPRs in the parameter types.  Their context must be set to\n+     refer to this function; they cannot be expanded in the containing\n+     function.  */\n+  if (decl_function_context (fndecl)\n+      && variably_modified_type_p (TREE_TYPE (fndecl)))\n+    walk_tree (&TREE_TYPE (fndecl), set_save_expr_context, fndecl,\n+\t       NULL);\n+\t     \n   /* If this function is `main', emit a call to `__main'\n      to run global initializers, etc.  */\n   if (DECL_NAME (fndecl)"}, {"sha": "c6196fb2fef646dc91dcd6a1a2fdddff665a7941", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46e33d43a2f80c82284832820287e118c7e7c65c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46e33d43a2f80c82284832820287e118c7e7c65c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=46e33d43a2f80c82284832820287e118c7e7c65c", "patch": "@@ -1,3 +1,8 @@\n+2003-03-31  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c/9936\n+\t* gcc.dg/20030331-2.c: New test.\n+\n 2003-03-31  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/10278"}, {"sha": "210524da456f67c79c180a8ee6f6bbbc016f4a59", "filename": "gcc/testsuite/gcc.dg/20030331-2.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46e33d43a2f80c82284832820287e118c7e7c65c/gcc%2Ftestsuite%2Fgcc.dg%2F20030331-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46e33d43a2f80c82284832820287e118c7e7c65c/gcc%2Ftestsuite%2Fgcc.dg%2F20030331-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20030331-2.c?ref=46e33d43a2f80c82284832820287e118c7e7c65c", "patch": "@@ -0,0 +1,10 @@\n+// { dg-options \"\" }\n+\n+int foo() {\n+  int yd;\n+  float in[1][yd];\n+ \n+  static void bar() {\n+    printf(\"%p\\n\",in[0]);\n+  }\n+}"}]}