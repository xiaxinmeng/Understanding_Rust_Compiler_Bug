{"sha": "b7d6f12a4f4670c226da1c5dd175622de1d703fe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjdkNmYxMmE0ZjQ2NzBjMjI2ZGExYzVkZDE3NTYyMmRlMWQ3MDNmZQ==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2003-08-20T15:33:28Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2003-08-20T15:33:28Z"}, "message": "gcj.texi (Extensions): Added xref.\n\n\t* gcj.texi (Extensions): Added xref.\n\t(libgcj Runtime Properties): Document\n\tgnu.gcj.runtime.VMClassLoader.library_control.\n\nFrom-SVN: r70601", "tree": {"sha": "ddd327aaa7b330dcc378a917178ea23349cecae2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ddd327aaa7b330dcc378a917178ea23349cecae2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b7d6f12a4f4670c226da1c5dd175622de1d703fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7d6f12a4f4670c226da1c5dd175622de1d703fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b7d6f12a4f4670c226da1c5dd175622de1d703fe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7d6f12a4f4670c226da1c5dd175622de1d703fe/comments", "author": null, "committer": null, "parents": [{"sha": "3f1923dcc183ad589948318c2099b6548fc82e93", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f1923dcc183ad589948318c2099b6548fc82e93", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f1923dcc183ad589948318c2099b6548fc82e93"}], "stats": {"total": 18, "additions": 17, "deletions": 1}, "files": [{"sha": "fa236429c9ea606d048017bb46eb1c19d1eb15aa", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7d6f12a4f4670c226da1c5dd175622de1d703fe/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7d6f12a4f4670c226da1c5dd175622de1d703fe/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=b7d6f12a4f4670c226da1c5dd175622de1d703fe", "patch": "@@ -1,3 +1,9 @@\n+2003-08-20  Tom Tromey  <tromey@redhat.com>\n+\n+\t* gcj.texi (Extensions): Added xref.\n+\t(libgcj Runtime Properties): Document\n+\tgnu.gcj.runtime.VMClassLoader.library_control.\n+\n 2003-08-13  Tom Tromey  <tromey@redhat.com>\n \n \t* gcj.texi (Invoking gij): Document -X and -?."}, {"sha": "fc2232994c19aaab8222a8743fa0fc0a3cd4323d", "filename": "gcc/java/gcj.texi", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7d6f12a4f4670c226da1c5dd175622de1d703fe/gcc%2Fjava%2Fgcj.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7d6f12a4f4670c226da1c5dd175622de1d703fe/gcc%2Fjava%2Fgcj.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fgcj.texi?ref=b7d6f12a4f4670c226da1c5dd175622de1d703fe", "patch": "@@ -543,7 +543,9 @@ all @samp{.}s will be transformed into @samp{-}s and that searching\n for inner classes starts with their outermost outer class.  If the class\n cannot be found this way the system classloader tries to use\n the @code{libgcj} bytecode interpreter to load the class from the standard\n-classpath.\n+classpath.  This process can be controlled to some degree via the\n+@code{gnu.gcj.runtime.VMClassLoader.library_control} property;\n+@xref{libgcj Runtime Properties}.\n @end itemize\n \n @node Invoking gcjh\n@@ -2247,6 +2249,14 @@ Whether an external process (@command{addr2line} or @command{addr2name.awk})\n should be used as fallback to convert the addresses to function names when\n the runtime is unable to do it through @code{dladdr}.\n \n+@item gnu.gcj.runtime.VMClassLoader.library_control\n+This controls how shared libraries are automatically loaded by the\n+built-in class loader.  By default, or if this property is set to\n+@samp{full}, a full search is done for each requested class.  If this\n+property is set to @samp{cache}, then any failed lookups are cached\n+and not tried again.  If this property is set to @samp{never}, then\n+lookups are never done.  For more information, @xref{Extensions}.\n+\n @end table\n \n "}]}