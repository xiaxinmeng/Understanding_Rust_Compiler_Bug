{"sha": "5dee33ac59489c42cd6998f6ef842f9de2e99b64", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWRlZTMzYWM1OTQ4OWM0MmNkNjk5OGY2ZWY4NDJmOWRlMmU5OWI2NA==", "commit": {"author": {"name": "Torbjorn Granlund", "email": "tege@gnu.org", "date": "1995-02-06T02:55:24Z"}, "committer": {"name": "Torbjorn Granlund", "email": "tege@gnu.org", "date": "1995-02-06T02:55:24Z"}, "message": "Use GEN_INT.\n\nFrom-SVN: r8871", "tree": {"sha": "71a4779ed14e37c189ccb09fdebf829fb4bf1916", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/71a4779ed14e37c189ccb09fdebf829fb4bf1916"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5dee33ac59489c42cd6998f6ef842f9de2e99b64", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5dee33ac59489c42cd6998f6ef842f9de2e99b64", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5dee33ac59489c42cd6998f6ef842f9de2e99b64", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5dee33ac59489c42cd6998f6ef842f9de2e99b64/comments", "author": null, "committer": null, "parents": [{"sha": "6500b83fd2d4046a9f989a818aa388eb588db0cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6500b83fd2d4046a9f989a818aa388eb588db0cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6500b83fd2d4046a9f989a818aa388eb588db0cf"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "6c7cccaf7be35ec5639b2a83e56588acb5628b3b", "filename": "gcc/config/pa/pa.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5dee33ac59489c42cd6998f6ef842f9de2e99b64/gcc%2Fconfig%2Fpa%2Fpa.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5dee33ac59489c42cd6998f6ef842f9de2e99b64/gcc%2Fconfig%2Fpa%2Fpa.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.md?ref=5dee33ac59489c42cd6998f6ef842f9de2e99b64", "patch": "@@ -1928,11 +1928,11 @@\n   else if (GET_CODE (op1) == CONST_DOUBLE)\n     {\n       operands[0] = operand_subword (op0, 1, 0, DImode);\n-      operands[1] = gen_rtx (CONST_INT, VOIDmode, CONST_DOUBLE_LOW (op1));\n+      operands[1] = GEN_INT (CONST_DOUBLE_LOW (op1));\n       output_asm_insn (\\\"ldil L'%1,%0\\\", operands);\n \n       operands[0] = operand_subword (op0, 0, 0, DImode);\n-      operands[1] = gen_rtx (CONST_INT, VOIDmode, CONST_DOUBLE_HIGH (op1));\n+      operands[1] = GEN_INT (CONST_DOUBLE_HIGH (op1));\n       output_asm_insn (singlemove_string (operands), operands);\n       return \\\"\\\";\n     }\n@@ -1987,7 +1987,7 @@\n   /* Don't output a 64 bit constant, since we can't trust the assembler to\n      handle it correctly.  */\n   if (GET_CODE (operands[2]) == CONST_DOUBLE)\n-    operands[2] = gen_rtx (CONST_INT, VOIDmode, CONST_DOUBLE_LOW (operands[2]));\n+    operands[2] = GEN_INT (CONST_DOUBLE_LOW (operands[2]));\n   if (which_alternative == 1)\n     output_asm_insn (\\\"copy %1,%0\\\", operands);\n   return \\\"ldo R'%G2(%R1),%R0\\\";"}]}