{"sha": "a8c01a592b48327c4555a1352fef9d79982b983d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YThjMDFhNTkyYjQ4MzI3YzQ1NTVhMTM1MmZlZjlkNzk5ODJiOTgzZA==", "commit": {"author": {"name": "Robert Lipe", "email": "robertlipe@usa.net", "date": "2001-10-08T22:41:55Z"}, "committer": {"name": "Robert Lipe", "email": "robertl@gcc.gnu.org", "date": "2001-10-08T22:41:55Z"}, "message": "varasm.c (struct in_named_entry): Add declared.\n\n\t* varasm.c  (struct in_named_entry): Add declared.\n\t(named_section_first_declaration): New function.\n\t(default_elf_asm_named_section): Use it.\n\t* output.h (named_section_first_declaration): New.\n\nFrom-SVN: r46108", "tree": {"sha": "855a56530e6a6db9b761b28846fc3a61c596e605", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/855a56530e6a6db9b761b28846fc3a61c596e605"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a8c01a592b48327c4555a1352fef9d79982b983d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8c01a592b48327c4555a1352fef9d79982b983d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a8c01a592b48327c4555a1352fef9d79982b983d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8c01a592b48327c4555a1352fef9d79982b983d/comments", "author": null, "committer": null, "parents": [{"sha": "646ded90c6b3d96cd172dcbf18cce70d76d9d172", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/646ded90c6b3d96cd172dcbf18cce70d76d9d172", "html_url": "https://github.com/Rust-GCC/gccrs/commit/646ded90c6b3d96cd172dcbf18cce70d76d9d172"}], "stats": {"total": 40, "additions": 40, "deletions": 0}, "files": [{"sha": "2b657de4ff15f1da895ac2c5042e830e6ef690a9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8c01a592b48327c4555a1352fef9d79982b983d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8c01a592b48327c4555a1352fef9d79982b983d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a8c01a592b48327c4555a1352fef9d79982b983d", "patch": "@@ -1,3 +1,10 @@\n+2001-10-08  Robert Lipe  <robertlipe@usa.net>\n+\n+\t* varasm.c  (struct in_named_entry): Add declared.\n+\t(named_section_first_declaration): New function.\n+\t(default_elf_asm_named_section): Use it.\n+\t* output.h (named_section_first_declaration): New.\n+\n 2001-10-08  Richard Henderson  <rth@redhat.com>\n \n         * i386.md (movsi_xor): Export."}, {"sha": "85485bf52d77d215e9275db795836b1b0edc9196", "filename": "gcc/output.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8c01a592b48327c4555a1352fef9d79982b983d/gcc%2Foutput.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8c01a592b48327c4555a1352fef9d79982b983d/gcc%2Foutput.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foutput.h?ref=a8c01a592b48327c4555a1352fef9d79982b983d", "patch": "@@ -475,6 +475,7 @@ extern void no_asm_to_stream PARAMS ((FILE *));\n extern unsigned int get_named_section_flags PARAMS ((const char *));\n extern bool set_named_section_flags\tPARAMS ((const char *, unsigned int));\n extern void named_section_flags\t\tPARAMS ((const char *, unsigned int));\n+extern bool named_section_first_declaration PARAMS((const char *));\n \n union tree_node;\n extern unsigned int default_section_type_flags PARAMS ((union tree_node *,"}, {"sha": "cc79f2064328e2baf9db2808812067fd00ea4ecc", "filename": "gcc/varasm.c", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8c01a592b48327c4555a1352fef9d79982b983d/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8c01a592b48327c4555a1352fef9d79982b983d/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=a8c01a592b48327c4555a1352fef9d79982b983d", "patch": "@@ -216,6 +216,7 @@ struct in_named_entry\n {\n   const char *name;\n   unsigned int flags;\n+  bool declared;\n };\n \n static htab_t in_named_htab;\n@@ -340,6 +341,31 @@ get_named_section_flags (section)\n   return slot ? (*slot)->flags : 0;\n }\n \n+/* Returns true if the section has been declared before.   Sets internal\n+   flag on this section in in_named_hash so subsequent calls on this \n+   section will return false. */\n+\n+bool\n+named_section_first_declaration (name)\n+     const char *name;\n+{\n+  struct in_named_entry **slot;\n+\n+  slot = (struct in_named_entry**)\n+    htab_find_slot_with_hash (in_named_htab, name, \n+\t\t\t      htab_hash_string (name), NO_INSERT);\n+  if (! (*slot)->declared)\n+    {\n+      (*slot)->declared = true;\n+      return true;\n+    }\n+  else \n+    {\n+      return false;\n+    }\n+}\n+\n+\n /* Record FLAGS for SECTION.  If SECTION was previously recorded with a\n    different set of flags, return false.  */\n \n@@ -5205,6 +5231,12 @@ default_elf_asm_named_section (name, flags)\n   char flagchars[10], *f = flagchars;\n   const char *type;\n \n+  if (! named_section_first_declaration (name))\n+    {\n+      fprintf (asm_out_file, \"\\t.section\\t%s\\n\", name);\n+      return;\n+    }\n+\n   if (!(flags & SECTION_DEBUG))\n     *f++ = 'a';\n   if (flags & SECTION_WRITE)"}]}