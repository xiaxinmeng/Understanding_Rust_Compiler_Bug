{"sha": "bf877a7649b686fd19a4384c137357a0ca697931", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmY4NzdhNzY0OWI2ODZmZDE5YTQzODRjMTM3MzU3YTBjYTY5NzkzMQ==", "commit": {"author": {"name": "J\"orn Rennecke", "email": "joern.rennecke@st.com", "date": "2005-09-05T16:45:20Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2005-09-05T16:45:20Z"}, "message": "rtl.h (gen_frame_mem, [...]): Declare.\n\n\t* rtl.h (gen_frame_mem, gen_tmp_stack_mem): Declare.\n\t* emit-rtl.c (gen_frame_mem, gen_tmp_stack_mem): New functions.\n\t* builtins.c (expand_builtin_return_addr): Use gen_frame_mem.\n\nFrom-SVN: r103917", "tree": {"sha": "159440e0f5720f60d1900ef723f6d1455a729b10", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/159440e0f5720f60d1900ef723f6d1455a729b10"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bf877a7649b686fd19a4384c137357a0ca697931", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf877a7649b686fd19a4384c137357a0ca697931", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf877a7649b686fd19a4384c137357a0ca697931", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf877a7649b686fd19a4384c137357a0ca697931/comments", "author": null, "committer": null, "parents": [{"sha": "8b0a8500fdc6b09d5b3d78d394d4d189571f9cb5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b0a8500fdc6b09d5b3d78d394d4d189571f9cb5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b0a8500fdc6b09d5b3d78d394d4d189571f9cb5"}], "stats": {"total": 45, "additions": 35, "deletions": 10}, "files": [{"sha": "15f810ded00fb80f4e991b128d1fedd250e10f19", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf877a7649b686fd19a4384c137357a0ca697931/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf877a7649b686fd19a4384c137357a0ca697931/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bf877a7649b686fd19a4384c137357a0ca697931", "patch": "@@ -1,3 +1,9 @@\n+2005-09-05  J\"orn Rennecke <joern.rennecke@st.com>\n+\n+\t* rtl.h (gen_frame_mem, gen_tmp_stack_mem): Declare.\n+\t* emit-rtl.c (gen_frame_mem, gen_tmp_stack_mem): New functions.\n+\t* builtins.c (expand_builtin_return_addr): Use gen_frame_mem.\n+\n 2005-09-05  J\"orn Rennecke <joern.rennecke@st.com>\n \n \tPR target/23683\n@@ -39,12 +45,6 @@\n \t* config/arm/arm.c (arm_legitimize_address): Limit the value passed\n \tto bit_count to 32 bits.\n \n-2005-09-02  J\"orn Rennecke <joern.rennecke@st.com>\n-\n-\t* rtl.h (gen_frame_mem, gen_tmp_stack_mem): Declare.\n-\t* emit-rtl.c (gen_frame_mem, gen_tmp_stack_mem): New functions.\n-\t* builtins.c (expand_builtin_return_addr): Use gen_frame_mem.\n-\n 2005-08-31  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/23167"}, {"sha": "246bcaa8d2b4eb99d60c3b1585e75ea5551d8ceb", "filename": "gcc/builtins.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf877a7649b686fd19a4384c137357a0ca697931/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf877a7649b686fd19a4384c137357a0ca697931/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=bf877a7649b686fd19a4384c137357a0ca697931", "patch": "@@ -529,8 +529,7 @@ expand_builtin_return_addr (enum built_in_function fndecl_code, int count)\n       tem = DYNAMIC_CHAIN_ADDRESS (tem);\n #endif\n       tem = memory_address (Pmode, tem);\n-      tem = gen_rtx_MEM (Pmode, tem);\n-      set_mem_alias_set (tem, get_frame_alias_set ());\n+      tem = gen_frame_mem (Pmode, tem);\n       tem = copy_to_reg (tem);\n     }\n \n@@ -545,8 +544,7 @@ expand_builtin_return_addr (enum built_in_function fndecl_code, int count)\n #else\n   tem = memory_address (Pmode,\n \t\t\tplus_constant (tem, GET_MODE_SIZE (Pmode)));\n-  tem = gen_rtx_MEM (Pmode, tem);\n-  set_mem_alias_set (tem, get_frame_alias_set ());\n+  tem = gen_frame_mem (Pmode, tem);\n #endif\n   return tem;\n }"}, {"sha": "53bff455054b580bf34cc5857e105b985ed3e65a", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf877a7649b686fd19a4384c137357a0ca697931/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf877a7649b686fd19a4384c137357a0ca697931/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=bf877a7649b686fd19a4384c137357a0ca697931", "patch": "@@ -607,6 +607,31 @@ gen_const_mem (enum machine_mode mode, rtx addr)\n   return mem;\n }\n \n+/* Generate a MEM referring to fixed portions of the frame, e.g., register\n+   save areas.  */\n+\n+rtx\n+gen_frame_mem (enum machine_mode mode, rtx addr)\n+{\n+  rtx mem = gen_rtx_MEM (mode, addr);\n+  MEM_NOTRAP_P (mem) = 1;\n+  set_mem_alias_set (mem, get_frame_alias_set ());\n+  return mem;\n+}\n+\n+/* Generate a MEM referring to a temporary use of the stack, not part\n+    of the fixed stack frame.  For example, something which is pushed\n+    by a target splitter.  */\n+rtx\n+gen_tmp_stack_mem (enum machine_mode mode, rtx addr)\n+{\n+  rtx mem = gen_rtx_MEM (mode, addr);\n+  MEM_NOTRAP_P (mem) = 1;\n+  if (!current_function_calls_alloca)\n+    set_mem_alias_set (mem, get_frame_alias_set ());\n+  return mem;\n+}\n+\n /* We want to create (subreg:OMODE (obj:IMODE) OFFSET).  Return true if\n    this construct would be valid, and false otherwise.  */\n "}, {"sha": "1692033e491c793b7bb3282e59217b1a185aeb59", "filename": "gcc/rtl.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf877a7649b686fd19a4384c137357a0ca697931/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf877a7649b686fd19a4384c137357a0ca697931/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=bf877a7649b686fd19a4384c137357a0ca697931", "patch": "@@ -1964,6 +1964,8 @@ extern rtx delete_insn_and_edges (rtx);\n extern void delete_insn_chain_and_edges (rtx, rtx);\n extern rtx gen_lowpart_SUBREG (enum machine_mode, rtx);\n extern rtx gen_const_mem (enum machine_mode, rtx);\n+extern rtx gen_frame_mem (enum machine_mode, rtx);\n+extern rtx gen_tmp_stack_mem (enum machine_mode, rtx);\n extern bool validate_subreg (enum machine_mode, enum machine_mode,\n \t\t\t     rtx, unsigned int);\n "}]}