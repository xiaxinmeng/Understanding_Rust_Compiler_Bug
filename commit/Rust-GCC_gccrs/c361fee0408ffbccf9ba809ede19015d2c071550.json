{"sha": "c361fee0408ffbccf9ba809ede19015d2c071550", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzM2MWZlZTA0MDhmZmJjY2Y5YmE4MDllZGUxOTAxNWQyYzA3MTU1MA==", "commit": {"author": {"name": "Phil Edwards", "email": "pme@gcc.gnu.org", "date": "2000-11-22T23:23:53Z"}, "committer": {"name": "Phil Edwards", "email": "pme@gcc.gnu.org", "date": "2000-11-22T23:23:53Z"}, "message": "porting.texi: Minor tweaks to vocabulary.\n\n2000-11-22  Phil Edwards  <pme@sources.redhat.com>\n\n\t* porting.texi:  Minor tweaks to vocabulary.\n\nFrom-SVN: r37675", "tree": {"sha": "84b6d4cb621ed0d8c039a0ee2fe0cbe172948f95", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/84b6d4cb621ed0d8c039a0ee2fe0cbe172948f95"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c361fee0408ffbccf9ba809ede19015d2c071550", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c361fee0408ffbccf9ba809ede19015d2c071550", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c361fee0408ffbccf9ba809ede19015d2c071550", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c361fee0408ffbccf9ba809ede19015d2c071550/comments", "author": null, "committer": null, "parents": [{"sha": "71ca6fe9644beaa868139fffb89b6effdae748d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71ca6fe9644beaa868139fffb89b6effdae748d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/71ca6fe9644beaa868139fffb89b6effdae748d9"}], "stats": {"total": 15, "additions": 11, "deletions": 4}, "files": [{"sha": "b6bc7f8baafff8a9c282513c7639238e57faa4e6", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c361fee0408ffbccf9ba809ede19015d2c071550/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c361fee0408ffbccf9ba809ede19015d2c071550/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=c361fee0408ffbccf9ba809ede19015d2c071550", "patch": "@@ -1,3 +1,7 @@\n+2000-11-22  Phil Edwards  <pme@sources.redhat.com>\n+\n+\t* porting.texi:  Minor tweaks to vocabulary.\n+\n 2000-11-22  Loren J. Rittle  <ljrittle@acm.org>\n \n         * include/backward/strstream.h: Reinstate the `using'"}, {"sha": "d966578b34c8f7566ad2e990f2e709796cf95ea2", "filename": "libstdc++-v3/porting.texi", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c361fee0408ffbccf9ba809ede19015d2c071550/libstdc%2B%2B-v3%2Fporting.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c361fee0408ffbccf9ba809ede19015d2c071550/libstdc%2B%2B-v3%2Fporting.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fporting.texi?ref=c361fee0408ffbccf9ba809ede19015d2c071550", "patch": "@@ -119,7 +119,7 @@ provide these macros.  Note that this file does not have to include a\n header file that defines @code{off_t}, or the other types; you simply\n have to provide the macros.\n \n-In addition, several V3 source files unconditionally define the macro\n+In addition, several libstdc++-v3 source files unconditionally define the macro\n @code{_POSIX_SOURCE}.  On many systems, defining this macro causes large\n portions of the C library header files to be eliminated at preprocessing\n time.  Therefore, you may have to @code{#undef} this macro, or define\n@@ -141,6 +141,9 @@ this:\n #endif\n @end example\n \n+We recommend copying an existing @file{bits/os_defines.h} to use as a\n+starting point.\n+\n @c ---------------------------------------------------------------------\n @c Character types\n @c ---------------------------------------------------------------------\n@@ -155,7 +158,7 @@ character classification, analagous to that provided by the C libraries\n certainly need some modification.\n \n The first file to write is @file{bits/ctype_base.h}.  This file provides\n-some very basic information about character classification.  The V3\n+some very basic information about character classification.  The libstdc++-v3\n library assumes that your C library implements @file{<ctype.h>} by using\n a table (indexed by character code) containing integers, where each of\n these integers is a bit-mask indicating whether the charcter is\n@@ -367,7 +370,7 @@ make a file called @file{bits/atomicity.h}.\n \n If you are using the assembly-language approach, put this code in\n @file{config/cpu/<chip>/bits/atomicity.h}, where chip is the name of\n-your chip.  In that case, edit the switch statement in\n+your processor.  In that case, edit the switch statement in\n @file{configure.target} to set the @code{cpu_include_dir}.  In either\n case, set the switch statement that sets @code{ATOMICITYH} to be the\n directory containing @file{bits/atomicity.h}.\n@@ -425,7 +428,7 @@ loaded.  Often, that requires linking in special object files when the\n C++ library is built as a shared library, or taking other\n system-specific actions.\n \n-The V3 library is linked with the C version of libtool, even though it\n+The libstdc++-v3 library is linked with the C version of libtool, even though it\n is a C++ library.  Therefore, the C version of libtool needs to ensure\n that the run-time library initializers are run.  The usual way to do\n this is to build the library using @code{gcc -shared}."}]}