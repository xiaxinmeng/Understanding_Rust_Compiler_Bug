{"sha": "bc37759a51631f667d1728336c3662751f69b5ba", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmMzNzc1OWE1MTYzMWY2NjdkMTcyODMzNmMzNjYyNzUxZjY5YjViYQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2018-10-23T08:58:39Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2018-10-23T08:58:39Z"}, "message": "re PR tree-optimization/86144 (GCC is not generating vector math calls to svml/acml functions)\n\n2018-10-23  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/86144\n\t* tree-vect-stmts.c (vect_analyze_stmt): Prefer -mveclibabi\n\tover simd attribute.\n\nFrom-SVN: r265414", "tree": {"sha": "e08d310e91bf123debb0d79e3069dbac046b473b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e08d310e91bf123debb0d79e3069dbac046b473b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bc37759a51631f667d1728336c3662751f69b5ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc37759a51631f667d1728336c3662751f69b5ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc37759a51631f667d1728336c3662751f69b5ba", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc37759a51631f667d1728336c3662751f69b5ba/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a26eaf981dd83a9dc3ec7caa8d0350e1c760ee27", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a26eaf981dd83a9dc3ec7caa8d0350e1c760ee27", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a26eaf981dd83a9dc3ec7caa8d0350e1c760ee27"}], "stats": {"total": 20, "additions": 15, "deletions": 5}, "files": [{"sha": "68b1f93daae3a1e926e955c196b12f381155e844", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc37759a51631f667d1728336c3662751f69b5ba/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc37759a51631f667d1728336c3662751f69b5ba/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bc37759a51631f667d1728336c3662751f69b5ba", "patch": "@@ -1,3 +1,9 @@\n+2018-10-23  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/86144\n+\t* tree-vect-stmts.c (vect_analyze_stmt): Prefer -mveclibabi\n+\tover simd attribute.\n+\n 2018-10-23  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/87693"}, {"sha": "7e05cbb790365f088147cfaa1b9a3dd3d75c3170", "filename": "gcc/tree-vect-stmts.c", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc37759a51631f667d1728336c3662751f69b5ba/gcc%2Ftree-vect-stmts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc37759a51631f667d1728336c3662751f69b5ba/gcc%2Ftree-vect-stmts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-stmts.c?ref=bc37759a51631f667d1728336c3662751f69b5ba", "patch": "@@ -9533,14 +9533,18 @@ vect_analyze_stmt (stmt_vec_info stmt_info, bool *need_to_vectorize,\n   if (!bb_vinfo\n       && (STMT_VINFO_RELEVANT_P (stmt_info)\n \t  || STMT_VINFO_DEF_TYPE (stmt_info) == vect_reduction_def))\n-    ok = (vectorizable_simd_clone_call (stmt_info, NULL, NULL, node, cost_vec)\n+    /* Prefer vectorizable_call over vectorizable_simd_clone_call so\n+       -mveclibabi= takes preference over ibrary functions with\n+       the simd attribute.  */\n+    ok = (vectorizable_call (stmt_info, NULL, NULL, node, cost_vec)\n+\t  || vectorizable_simd_clone_call (stmt_info, NULL, NULL, node,\n+\t\t\t\t\t   cost_vec)\n \t  || vectorizable_conversion (stmt_info, NULL, NULL, node, cost_vec)\n \t  || vectorizable_shift (stmt_info, NULL, NULL, node, cost_vec)\n \t  || vectorizable_operation (stmt_info, NULL, NULL, node, cost_vec)\n \t  || vectorizable_assignment (stmt_info, NULL, NULL, node, cost_vec)\n \t  || vectorizable_load (stmt_info, NULL, NULL, node, node_instance,\n \t\t\t\tcost_vec)\n-\t  || vectorizable_call (stmt_info, NULL, NULL, node, cost_vec)\n \t  || vectorizable_store (stmt_info, NULL, NULL, node, cost_vec)\n \t  || vectorizable_reduction (stmt_info, NULL, NULL, node,\n \t\t\t\t     node_instance, cost_vec)\n@@ -9552,8 +9556,9 @@ vect_analyze_stmt (stmt_vec_info stmt_info, bool *need_to_vectorize,\n   else\n     {\n       if (bb_vinfo)\n-\tok = (vectorizable_simd_clone_call (stmt_info, NULL, NULL, node,\n-\t\t\t\t\t    cost_vec)\n+\tok = (vectorizable_call (stmt_info, NULL, NULL, node, cost_vec)\n+\t      || vectorizable_simd_clone_call (stmt_info, NULL, NULL, node,\n+\t\t\t\t\t       cost_vec)\n \t      || vectorizable_conversion (stmt_info, NULL, NULL, node,\n \t\t\t\t\t  cost_vec)\n \t      || vectorizable_shift (stmt_info, NULL, NULL, node, cost_vec)\n@@ -9562,7 +9567,6 @@ vect_analyze_stmt (stmt_vec_info stmt_info, bool *need_to_vectorize,\n \t\t\t\t\t  cost_vec)\n \t      || vectorizable_load (stmt_info, NULL, NULL, node, node_instance,\n \t\t\t\t    cost_vec)\n-\t      || vectorizable_call (stmt_info, NULL, NULL, node, cost_vec)\n \t      || vectorizable_store (stmt_info, NULL, NULL, node, cost_vec)\n \t      || vectorizable_condition (stmt_info, NULL, NULL, NULL, 0, node,\n \t\t\t\t\t cost_vec)"}]}