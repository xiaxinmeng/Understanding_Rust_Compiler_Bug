{"sha": "b65e51a81fd877211cacb75bc07b56dcb45444b4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjY1ZTUxYTgxZmQ4NzcyMTFjYWNiNzViYzA3YjU2ZGNiNDU0NDRiNA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2007-09-01T09:07:17Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2007-09-01T09:07:17Z"}, "message": "tree-ssa-alias.c (create_name_tags): Use TYPE_VOLATILE instead of TREE_THIS_VOLATILE.\n\n2007-09-01  Richard Guenther  <rguenther@suse.de>\n\n\t* tree-ssa-alias.c (create_name_tags): Use TYPE_VOLATILE\n\tinstead of TREE_THIS_VOLATILE.\n\t* tree-ssa-operands.c (add_virtual_operand): Do not set\n\thas_volatile_ops.  Do not check s_ann for NULL.\n\t(get_indirect_ref_operands): Likewise.\n\t(get_expr_operands): Likewise.  For all reference trees\n\tset has_volatile_ops based on TREE_THIS_VOLATILE.  Also\n\tcheck base of reference for TREE_THIS_VOLATILE.\n\nFrom-SVN: r128012", "tree": {"sha": "52ed878bcfb4c2023c1cf9eea40a00902d2eb7b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/52ed878bcfb4c2023c1cf9eea40a00902d2eb7b6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b65e51a81fd877211cacb75bc07b56dcb45444b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b65e51a81fd877211cacb75bc07b56dcb45444b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b65e51a81fd877211cacb75bc07b56dcb45444b4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b65e51a81fd877211cacb75bc07b56dcb45444b4/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9822c455b907da9898eb5ea0a467ffe4421003bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9822c455b907da9898eb5ea0a467ffe4421003bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9822c455b907da9898eb5ea0a467ffe4421003bd"}], "stats": {"total": 39, "additions": 24, "deletions": 15}, "files": [{"sha": "9a267bf64bae1b042616e7f98ff2203b1754b28a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b65e51a81fd877211cacb75bc07b56dcb45444b4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b65e51a81fd877211cacb75bc07b56dcb45444b4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b65e51a81fd877211cacb75bc07b56dcb45444b4", "patch": "@@ -1,3 +1,14 @@\n+2007-09-01  Richard Guenther  <rguenther@suse.de>\n+\n+\t* tree-ssa-alias.c (create_name_tags): Use TYPE_VOLATILE\n+\tinstead of TREE_THIS_VOLATILE.\n+\t* tree-ssa-operands.c (add_virtual_operand): Do not set\n+\thas_volatile_ops.  Do not check s_ann for NULL.\n+\t(get_indirect_ref_operands): Likewise.\n+\t(get_expr_operands): Likewise.  For all reference trees\n+\tset has_volatile_ops based on TREE_THIS_VOLATILE.  Also\n+\tcheck base of reference for TREE_THIS_VOLATILE.\n+\n 2007-09-01  Richard Guenther  <rguenther@suse.de>\n \n \t* tree-cfg.c (verify_gimple_expr): Fix check for conversions"}, {"sha": "52ca86b48df14d67600ab00067ffe05e868848b6", "filename": "gcc/tree-ssa-alias.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b65e51a81fd877211cacb75bc07b56dcb45444b4/gcc%2Ftree-ssa-alias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b65e51a81fd877211cacb75bc07b56dcb45444b4/gcc%2Ftree-ssa-alias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-alias.c?ref=b65e51a81fd877211cacb75bc07b56dcb45444b4", "patch": "@@ -2216,7 +2216,7 @@ create_name_tags (void)\n \n       /* Inherit volatility from the pointed-to type.  */\n       TREE_THIS_VOLATILE (pi->name_mem_tag)\n-\t|= TREE_THIS_VOLATILE (TREE_TYPE (TREE_TYPE (ptr)));\n+\t|= TYPE_VOLATILE (TREE_TYPE (TREE_TYPE (ptr)));\n       \n       /* Mark the new name tag for renaming.  */\n       mark_sym_for_renaming (pi->name_mem_tag);"}, {"sha": "4996e09e8549602921b01a9f375b0b20358638e9", "filename": "gcc/tree-ssa-operands.c", "status": "modified", "additions": 12, "deletions": 14, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b65e51a81fd877211cacb75bc07b56dcb45444b4/gcc%2Ftree-ssa-operands.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b65e51a81fd877211cacb75bc07b56dcb45444b4/gcc%2Ftree-ssa-operands.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-operands.c?ref=b65e51a81fd877211cacb75bc07b56dcb45444b4", "patch": "@@ -1466,11 +1466,6 @@ add_virtual_operand (tree var, stmt_ann_t s_ann, int flags,\n   /* Mark the statement as having memory operands.  */\n   s_ann->references_memory = true;\n \n-  /* Mark statements with volatile operands.  Optimizers should back\n-     off from statements having volatile operands.  */\n-  if (TREE_THIS_VOLATILE (sym) && s_ann)\n-    s_ann->has_volatile_ops = true;\n-\n   /* If the variable cannot be modified and this is a VDEF change\n      it into a VUSE.  This happens when read-only variables are marked\n      call-clobbered and/or aliased to writable variables.  So we only\n@@ -1499,7 +1494,7 @@ add_virtual_operand (tree var, stmt_ann_t s_ann, int flags,\n \n   if (aliases == NULL)\n     {\n-      if (s_ann && !gimple_aliases_computed_p (cfun))\n+      if (!gimple_aliases_computed_p (cfun))\n         s_ann->has_volatile_ops = true;\n \n       /* The variable is not aliased or it is an alias tag.  */\n@@ -1630,7 +1625,7 @@ get_indirect_ref_operands (tree stmt, tree expr, int flags,\n   stmt_ann_t s_ann = stmt_ann (stmt);\n \n   s_ann->references_memory = true;\n-  if (s_ann && TREE_THIS_VOLATILE (expr))\n+  if (TREE_THIS_VOLATILE (expr))\n     s_ann->has_volatile_ops = true; \n \n   if (SSA_VAR_P (ptr))\n@@ -1677,8 +1672,7 @@ get_indirect_ref_operands (tree stmt, tree expr, int flags,\n \n \t  /* Aliasing information is missing; mark statement as\n \t     volatile so we won't optimize it out too actively.  */\n-          else if (s_ann\n-\t           && !gimple_aliases_computed_p (cfun)\n+          else if (!gimple_aliases_computed_p (cfun)\n                    && (flags & opf_def))\n             s_ann->has_volatile_ops = true;\n \t}\n@@ -1688,8 +1682,7 @@ get_indirect_ref_operands (tree stmt, tree expr, int flags,\n       /* If a constant is used as a pointer, we can't generate a real\n \t operand for it but we mark the statement volatile to prevent\n \t optimizations from messing things up.  */\n-      if (s_ann)\n-\ts_ann->has_volatile_ops = true;\n+      s_ann->has_volatile_ops = true;\n       return;\n     }\n   else\n@@ -2121,6 +2114,9 @@ get_expr_operands (tree stmt, tree *expr_p, int flags)\n \tHOST_WIDE_INT offset, size, maxsize;\n \tbool none = true;\n \n+\tif (TREE_THIS_VOLATILE (expr))\n+\t  s_ann->has_volatile_ops = true;\n+\n \t/* This component reference becomes an access to all of the\n \t   subvariables it can touch, if we can determine that, but\n \t   *NOT* the real one.  If we can't determine which fields we\n@@ -2148,8 +2144,10 @@ get_expr_operands (tree stmt, tree *expr_p, int flags)\n \t    if (!none)\n \t      flags |= opf_no_vops;\n \n-\t    if (TREE_THIS_VOLATILE (expr))\n-\t      get_stmt_ann (stmt)->has_volatile_ops = true;\n+\t    if ((DECL_P (ref) && TREE_THIS_VOLATILE (ref))\n+\t\t|| (TREE_CODE (ref) == SSA_NAME\n+\t\t    && TREE_THIS_VOLATILE (SSA_NAME_VAR (ref))))\n+\t      s_ann->has_volatile_ops = true;\n \t  }\n \telse if (TREE_CODE (ref) == INDIRECT_REF)\n \t  {\n@@ -2165,7 +2163,7 @@ get_expr_operands (tree stmt, tree *expr_p, int flags)\n \t\n \tif (code == COMPONENT_REF)\n \t  {\n-\t    if (s_ann && TREE_THIS_VOLATILE (TREE_OPERAND (expr, 1)))\n+\t    if (TREE_THIS_VOLATILE (TREE_OPERAND (expr, 1)))\n \t      s_ann->has_volatile_ops = true; \n \t    get_expr_operands (stmt, &TREE_OPERAND (expr, 2), opf_use);\n \t  }"}]}