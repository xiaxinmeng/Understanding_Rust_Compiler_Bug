{"sha": "0d40cc60e875e070d2b11e368e9d602e02faccfe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGQ0MGNjNjBlODc1ZTA3MGQyYjExZTM2OGU5ZDYwMmUwMmZhY2NmZQ==", "commit": {"author": {"name": "Anatoly Sokolov", "email": "aesok@post.ru", "date": "2008-01-11T20:33:50Z"}, "committer": {"name": "Anatoly Sokolov", "email": "aesok@gcc.gnu.org", "date": "2008-01-11T20:33:50Z"}, "message": "avr.c (expand_prologue, [...]): Don't save/restore frame pointer register and don't use 'call-prologues' ...\n\n\t* config/avr/avr.c (expand_prologue, expand_epilogue): Don't \n\tsave/restore frame pointer register and don't use 'call-prologues' \n\toptimization in function with \"OS_task\" attribute.\n\nFrom-SVN: r131474", "tree": {"sha": "d87bde98fffafce4d1ad5fcb95f51ef300ddf164", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d87bde98fffafce4d1ad5fcb95f51ef300ddf164"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0d40cc60e875e070d2b11e368e9d602e02faccfe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d40cc60e875e070d2b11e368e9d602e02faccfe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d40cc60e875e070d2b11e368e9d602e02faccfe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d40cc60e875e070d2b11e368e9d602e02faccfe/comments", "author": null, "committer": null, "parents": [{"sha": "fd6590f8c8ca86225f6154636029937cd424dbec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd6590f8c8ca86225f6154636029937cd424dbec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd6590f8c8ca86225f6154636029937cd424dbec"}], "stats": {"total": 32, "additions": 24, "deletions": 8}, "files": [{"sha": "92f1cd6f74c4e2619717c55253d6f6d91352cbe7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d40cc60e875e070d2b11e368e9d602e02faccfe/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d40cc60e875e070d2b11e368e9d602e02faccfe/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0d40cc60e875e070d2b11e368e9d602e02faccfe", "patch": "@@ -1,3 +1,9 @@\n+2008-01-11  Anatoly Sokolov <aesok@post.ru>\n+\n+\t* config/avr/avr.c (expand_prologue, expand_epilogue): Don't \n+\tsave/restore frame pointer register and don't use 'call-prologues' \n+\toptimization in function with \"OS_task\" attribute.\n+\n 2008-01-11  Eric Botcazou  <ebotcazou@adacore.com>\n \n \tPR middle-end/31309"}, {"sha": "63d710d4d1adf9f5bf54ebdba0771f719a6b9202", "filename": "gcc/config/avr/avr.c", "status": "modified", "additions": 18, "deletions": 8, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d40cc60e875e070d2b11e368e9d602e02faccfe/gcc%2Fconfig%2Favr%2Favr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d40cc60e875e070d2b11e368e9d602e02faccfe/gcc%2Fconfig%2Favr%2Favr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.c?ref=0d40cc60e875e070d2b11e368e9d602e02faccfe", "patch": "@@ -607,7 +607,9 @@ expand_prologue (void)\n \n   live_seq = sequent_regs_live ();\n   minimize = (TARGET_CALL_PROLOGUES\n-\t      && !(cfun->machine->is_interrupt || cfun->machine->is_signal) \n+\t      && !cfun->machine->is_interrupt\n+\t      && !cfun->machine->is_signal\n+\t      && !cfun->machine->is_OS_task\n \t      && live_seq);\n \n   if (cfun->machine->is_interrupt || cfun->machine->is_signal)\n@@ -668,9 +670,13 @@ expand_prologue (void)\n         }\n       if (frame_pointer_needed)\n         {\n-          /* Push frame pointer.  */\n-\t  insn = emit_move_insn (pushword, frame_pointer_rtx);\n-          RTX_FRAME_RELATED_P (insn) = 1;\n+\t  if(!cfun->machine->is_OS_task)\n+\t    {\n+              /* Push frame pointer.  */\n+\t      insn = emit_move_insn (pushword, frame_pointer_rtx);\n+              RTX_FRAME_RELATED_P (insn) = 1;\n+\t    }\n+\n           if (!size)\n             {\n               insn = emit_move_insn (frame_pointer_rtx, stack_pointer_rtx);\n@@ -813,7 +819,9 @@ expand_epilogue (void)\n \n   live_seq = sequent_regs_live ();\n   minimize = (TARGET_CALL_PROLOGUES\n-\t      && !(cfun->machine->is_interrupt || cfun->machine->is_signal)\n+\t      && !cfun->machine->is_interrupt\n+\t      && !cfun->machine->is_signal\n+\t      && !cfun->machine->is_OS_task\n \t      && live_seq);\n   \n   if (minimize && (frame_pointer_needed || live_seq > 4))\n@@ -876,9 +884,11 @@ expand_epilogue (void)\n                   emit_move_insn (stack_pointer_rtx, frame_pointer_rtx);\n                 }\n             }\n-        \n-          /* Restore previous frame_pointer.  */\n-\t  emit_insn (gen_pophi (frame_pointer_rtx));\n+\t  if(!cfun->machine->is_OS_task)\n+\t    {\n+              /* Restore previous frame_pointer.  */\n+\t      emit_insn (gen_pophi (frame_pointer_rtx));\n+\t    }\n \t}\n       /* Restore used registers.  */\n       HARD_REG_SET set;      "}]}