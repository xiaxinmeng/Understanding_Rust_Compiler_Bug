{"sha": "d819472d13b5cbe78afb3e71566428a9104138d4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDgxOTQ3MmQxM2I1Y2JlNzhhZmIzZTcxNTY2NDI4YTkxMDQxMzhkNA==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2010-01-28T17:58:03Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2010-01-28T17:58:03Z"}, "message": "re PR target/42891 (ice in extract_insn, at recog.c:2097)\n\n\tPR target/42891\n\t* config/i386/i386.c (ix86_expand_int_movcc): Convert tmp to SImode\n\tin the call to gen_x86_movsicc_0_m1.\n\ntestsuite/ChangeLog:\n\n\tPR target/42891\n\t* gcc.target/i386/pr42891.c: New test.\n\nFrom-SVN: r156327", "tree": {"sha": "23095edfa45f8a8d602232ba4faee6e41c04906c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/23095edfa45f8a8d602232ba4faee6e41c04906c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d819472d13b5cbe78afb3e71566428a9104138d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d819472d13b5cbe78afb3e71566428a9104138d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d819472d13b5cbe78afb3e71566428a9104138d4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d819472d13b5cbe78afb3e71566428a9104138d4/comments", "author": null, "committer": null, "parents": [{"sha": "8c0b91b4cee216da9ae8b05624c4e4a3b60debc3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c0b91b4cee216da9ae8b05624c4e4a3b60debc3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c0b91b4cee216da9ae8b05624c4e4a3b60debc3"}], "stats": {"total": 42, "additions": 32, "deletions": 10}, "files": [{"sha": "cae4c13378716b1e709d543346dd3e7b742b672e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d819472d13b5cbe78afb3e71566428a9104138d4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d819472d13b5cbe78afb3e71566428a9104138d4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d819472d13b5cbe78afb3e71566428a9104138d4", "patch": "@@ -1,3 +1,9 @@\n+2010-01-28  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/42891\n+\t* config/i386/i386.c (ix86_expand_int_movcc): Convert tmp to SImode\n+\tin the call to gen_x86_movsicc_0_m1.\n+\n 2010-01-28  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/42871\n@@ -17,7 +23,7 @@\n \n 2010-01-28  Razya Ladelsky  <razya@il.ibm.com>\n \n-\t* tree-parloops.c (transform_to_exit_first_loop): Update the basic \n+\t* tree-parloops.c (transform_to_exit_first_loop): Update the basic\n \tblock list passed to gimple_duplicate_sese_tail.\n \t(parallelize_loops): Avoid parallelization when the function\n \thas_nonlocal_label.\n@@ -91,7 +97,7 @@\n \tPR target/42841\n \t* config/sh/sh.c (find_barrier): Increase length for non delayed\n \tconditional branches.\n-\t\n+\n 2010-01-27  Matthias Klose  <doko@ubuntu.com>\n \n \t* configure.ac (gnu-unique-object): Fix ldd version check.\n@@ -238,8 +244,8 @@\n \n 2010-01-21  Andrew Haley  <aph@redhat.com>\n \n-        * gcc.c (process_command): Move lang_specific_driver before\n-        setting cc_libexec_prefix.\n+\t* gcc.c (process_command): Move lang_specific_driver before\n+\tsetting cc_libexec_prefix.\n \n 2010-01-21  Richard Guenther  <rguenther@suse.de>\n "}, {"sha": "5bc4a64a29d06161bfe1e1b8d77895e71727726d", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d819472d13b5cbe78afb3e71566428a9104138d4/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d819472d13b5cbe78afb3e71566428a9104138d4/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=d819472d13b5cbe78afb3e71566428a9104138d4", "patch": "@@ -15381,7 +15381,7 @@ ix86_expand_int_movcc (rtx operands[])\n   enum rtx_code code = GET_CODE (operands[1]), compare_code;\n   rtx compare_seq, compare_op;\n   enum machine_mode mode = GET_MODE (operands[0]);\n-  bool sign_bit_compare_p = false;;\n+  bool sign_bit_compare_p = false;\n \n   start_sequence ();\n   ix86_compare_op0 = XEXP (operands[1], 0);\n@@ -15422,7 +15422,6 @@ ix86_expand_int_movcc (rtx operands[])\n           if (!sign_bit_compare_p)\n \t    {\n \t      rtx flags;\n-\t      rtx (*insn)(rtx, rtx, rtx);\n \t      bool fpcmp = false;\n \n \t      compare_code = GET_CODE (compare_op);\n@@ -15463,11 +15462,10 @@ ix86_expand_int_movcc (rtx operands[])\n \t\ttmp = gen_reg_rtx (mode);\n \n \t      if (mode == DImode)\n-\t\tinsn = gen_x86_movdicc_0_m1;\n+\t\temit_insn (gen_x86_movdicc_0_m1 (tmp, flags, compare_op));\n \t      else\n-\t\tinsn = gen_x86_movsicc_0_m1;\n-\n-\t      emit_insn (insn (tmp, flags, compare_op));\n+\t\temit_insn (gen_x86_movsicc_0_m1\t(gen_lowpart (SImode, tmp),\n+\t\t\t\t\t\t flags, compare_op));\n \t    }\n \t  else\n \t    {"}, {"sha": "b754ad45bd21a0dde37b9ae32dc8be44a86ec700", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d819472d13b5cbe78afb3e71566428a9104138d4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d819472d13b5cbe78afb3e71566428a9104138d4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d819472d13b5cbe78afb3e71566428a9104138d4", "patch": "@@ -1,3 +1,8 @@\n+2010-01-28  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/42891\n+\t* gcc.target/i386/pr42891.c: New test.\n+\n 2010-01-28  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/42871"}, {"sha": "e3c7b9cf83b26fae5d7f77909b331f8889bd523c", "filename": "gcc/testsuite/gcc.target/i386/pr42891.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d819472d13b5cbe78afb3e71566428a9104138d4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr42891.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d819472d13b5cbe78afb3e71566428a9104138d4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr42891.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr42891.c?ref=d819472d13b5cbe78afb3e71566428a9104138d4", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+union B { int i; float f; };\n+\n+extern void bar (void);\n+\n+void\n+foo (union B x, union B y)\n+{\n+  if (!(y.f > x.i))\n+    bar ();\n+}"}]}