{"sha": "d48be5dfaf50c025bd4bdbaed375f1806d8c3bfb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDQ4YmU1ZGZhZjUwYzAyNWJkNGJkYmFlZDM3NWYxODA2ZDhjM2JmYg==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-12-20T18:14:30Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-12-20T18:14:30Z"}, "message": "libgo: Fix use of -D_GNU_SOURCE and friends when building libgo.\n\nFrom-SVN: r182548", "tree": {"sha": "5dfd4daece115bfcf145e5502f4acae0d8b6e4d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5dfd4daece115bfcf145e5502f4acae0d8b6e4d6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d48be5dfaf50c025bd4bdbaed375f1806d8c3bfb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d48be5dfaf50c025bd4bdbaed375f1806d8c3bfb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d48be5dfaf50c025bd4bdbaed375f1806d8c3bfb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d48be5dfaf50c025bd4bdbaed375f1806d8c3bfb/comments", "author": null, "committer": null, "parents": [{"sha": "4a5e00ca50a3caf1757943aa9df793e4f2865547", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a5e00ca50a3caf1757943aa9df793e4f2865547", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a5e00ca50a3caf1757943aa9df793e4f2865547"}], "stats": {"total": 27, "additions": 11, "deletions": 16}, "files": [{"sha": "f146320b5595cff82dc9554e0d0375825571f712", "filename": "libgo/Makefile.am", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d48be5dfaf50c025bd4bdbaed375f1806d8c3bfb/libgo%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d48be5dfaf50c025bd4bdbaed375f1806d8c3bfb/libgo%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2FMakefile.am?ref=d48be5dfaf50c025bd4bdbaed375f1806d8c3bfb", "patch": "@@ -37,7 +37,7 @@ AM_CPPFLAGS = -I $(srcdir)/runtime $(LIBFFIINCS) $(PTHREAD_CFLAGS)\n ACLOCAL_AMFLAGS = -I ./config -I ../config\n \n AM_CFLAGS = -fexceptions -fplan9-extensions $(SPLIT_STACK) $(WARN_CFLAGS) \\\n-\t$(STRINGOPS_FLAG) \\\n+\t$(STRINGOPS_FLAG) $(OSCFLAGS) \\\n \t-I $(srcdir)/../libgcc -I $(MULTIBUILDTOP)../../gcc/include\n \n if USING_SPLIT_STACK"}, {"sha": "627672eb93d0d763d048d24e3ebb86cac50e185b", "filename": "libgo/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d48be5dfaf50c025bd4bdbaed375f1806d8c3bfb/libgo%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d48be5dfaf50c025bd4bdbaed375f1806d8c3bfb/libgo%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2FMakefile.in?ref=d48be5dfaf50c025bd4bdbaed375f1806d8c3bfb", "patch": "@@ -509,7 +509,7 @@ WARN_CFLAGS = $(WARN_FLAGS) $(WERROR)\n AM_CPPFLAGS = -I $(srcdir)/runtime $(LIBFFIINCS) $(PTHREAD_CFLAGS)\n ACLOCAL_AMFLAGS = -I ./config -I ../config\n AM_CFLAGS = -fexceptions -fplan9-extensions $(SPLIT_STACK) $(WARN_CFLAGS) \\\n-\t$(STRINGOPS_FLAG) \\\n+\t$(STRINGOPS_FLAG) $(OSCFLAGS) \\\n \t-I $(srcdir)/../libgcc -I $(MULTIBUILDTOP)../../gcc/include\n \n @USING_SPLIT_STACK_TRUE@AM_LDFLAGS = -XCClinker $(SPLIT_STACK)"}, {"sha": "d9915f91afcf22ab674e01a0f93785748776723e", "filename": "libgo/configure", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d48be5dfaf50c025bd4bdbaed375f1806d8c3bfb/libgo%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d48be5dfaf50c025bd4bdbaed375f1806d8c3bfb/libgo%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fconfigure?ref=d48be5dfaf50c025bd4bdbaed375f1806d8c3bfb", "patch": "@@ -13804,22 +13804,23 @@ fi\n \n \n \n+OSCFLAGS=\"-D_GNU_SOURCE -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64\"\n case \"$target\" in\n     mips-sgi-irix6.5*)\n \t# IRIX 6 needs _XOPEN_SOURCE=500 for the XPG5 version of struct\n \t# msghdr in <sys/socket.h>.\n-\tOSCFLAGS='-D_XOPEN_SOURCE=500'\n+\tOSCFLAGS=\"$OSCFLAGS -D_XOPEN_SOURCE=500\"\n \t;;\n     *-*-solaris2.[89])\n \t# Solaris 8/9 need this so struct msghdr gets the msg_control\n \t# etc. fields in <sys/socket.h> (_XPG4_2).\n-\tOSCFLAGS='-D_XOPEN_SOURCE=500 -D_XOPEN_SOURCE_EXTENDED -D__EXTENSIONS__'\n+\tOSCFLAGS=\"$OSCFLAGS -D_XOPEN_SOURCE=500 -D_XOPEN_SOURCE_EXTENDED -D__EXTENSIONS__\"\n \t;;\n     *-*-solaris2.1[01])\n \t# Solaris 10+ needs this so struct msghdr gets the msg_control\n \t# etc. fields in <sys/socket.h> (_XPG4_2).  _XOPEN_SOURCE=500 as\n \t# above doesn't work with C99.\n-\tOSCFLAGS='-D_XOPEN_SOURCE=600 -D__EXTENSIONS__'\n+\tOSCFLAGS=\"$OSCFLAGS -D_XOPEN_SOURCE=600 -D__EXTENSIONS__\"\n \t;;\n esac\n "}, {"sha": "a001d50b58a4f7643f94e042e084fb668f2dba84", "filename": "libgo/configure.ac", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d48be5dfaf50c025bd4bdbaed375f1806d8c3bfb/libgo%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d48be5dfaf50c025bd4bdbaed375f1806d8c3bfb/libgo%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fconfigure.ac?ref=d48be5dfaf50c025bd4bdbaed375f1806d8c3bfb", "patch": "@@ -277,23 +277,24 @@ AC_SUBST(GO_LIBCALL_OS_ARCH_FILE)\n AC_SUBST(GO_SYSCALL_OS_FILE)\n AC_SUBST(GO_SYSCALL_OS_ARCH_FILE)\n \n-dnl Some targets need special flags to build sysinfo.go.\n+dnl Special flags used to generate sysinfo.go.\n+OSCFLAGS=\"-D_GNU_SOURCE -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64\"\n case \"$target\" in\n     mips-sgi-irix6.5*)\n \t# IRIX 6 needs _XOPEN_SOURCE=500 for the XPG5 version of struct\n \t# msghdr in <sys/socket.h>.\n-\tOSCFLAGS='-D_XOPEN_SOURCE=500'\n+\tOSCFLAGS=\"$OSCFLAGS -D_XOPEN_SOURCE=500\"\n \t;;\n     *-*-solaris2.[[89]])\n \t# Solaris 8/9 need this so struct msghdr gets the msg_control\n \t# etc. fields in <sys/socket.h> (_XPG4_2).\n-\tOSCFLAGS='-D_XOPEN_SOURCE=500 -D_XOPEN_SOURCE_EXTENDED -D__EXTENSIONS__'\n+\tOSCFLAGS=\"$OSCFLAGS -D_XOPEN_SOURCE=500 -D_XOPEN_SOURCE_EXTENDED -D__EXTENSIONS__\"\n \t;;\n     *-*-solaris2.1[[01]])\n \t# Solaris 10+ needs this so struct msghdr gets the msg_control\n \t# etc. fields in <sys/socket.h> (_XPG4_2).  _XOPEN_SOURCE=500 as\n \t# above doesn't work with C99.\n-\tOSCFLAGS='-D_XOPEN_SOURCE=600 -D__EXTENSIONS__'\n+\tOSCFLAGS=\"$OSCFLAGS -D_XOPEN_SOURCE=600 -D__EXTENSIONS__\"\n \t;;\n esac\n AC_SUBST(OSCFLAGS)"}, {"sha": "fd7b65e2414216c14f497a7f6922279cc6127bd0", "filename": "libgo/go/syscall/wait.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d48be5dfaf50c025bd4bdbaed375f1806d8c3bfb/libgo%2Fgo%2Fsyscall%2Fwait.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d48be5dfaf50c025bd4bdbaed375f1806d8c3bfb/libgo%2Fgo%2Fsyscall%2Fwait.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fsyscall%2Fwait.c?ref=d48be5dfaf50c025bd4bdbaed375f1806d8c3bfb", "patch": "@@ -7,9 +7,6 @@\n    We use C code to extract the wait status so that we can easily be\n    OS-independent.  */\n \n-#define _GNU_SOURCE\n-#define __EXTENSIONS__\n-\n #include <stdint.h>\n #include <sys/wait.h>\n "}, {"sha": "ca9e5f686b1d5ba568a4fdf6670351c544cc5972", "filename": "libgo/mksysinfo.sh", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d48be5dfaf50c025bd4bdbaed375f1806d8c3bfb/libgo%2Fmksysinfo.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d48be5dfaf50c025bd4bdbaed375f1806d8c3bfb/libgo%2Fmksysinfo.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fmksysinfo.sh?ref=d48be5dfaf50c025bd4bdbaed375f1806d8c3bfb", "patch": "@@ -25,10 +25,6 @@ rm -f sysinfo.c\n cat > sysinfo.c <<EOF\n #include \"config.h\"\n \n-#define _GNU_SOURCE\n-#define _LARGEFILE_SOURCE\n-#define _FILE_OFFSET_BITS 64\n-\n #include <sys/types.h>\n #include <dirent.h>\n #include <errno.h>"}]}