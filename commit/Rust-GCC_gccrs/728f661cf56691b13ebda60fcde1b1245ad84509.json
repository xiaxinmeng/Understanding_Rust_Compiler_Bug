{"sha": "728f661cf56691b13ebda60fcde1b1245ad84509", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzI4ZjY2MWNmNTY2OTFiMTNlYmRhNjBmY2RlMWIxMjQ1YWQ4NDUwOQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2014-12-16T07:49:53Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2014-12-16T07:49:53Z"}, "message": "gnu-user.h (TARGET_CAN_SPLIT_STACK): Move from here ...\n\n\t* config/i386/gnu-user.h (TARGET_CAN_SPLIT_STACK): Move from here ...\n\t* config/i386/gnu-user64.h (TARGET_CAN_SPLIT_STACK): ... and here ...\n\t* config/i386/gnu-user-common.h (TARGET_CAN_SPLIT_STACK): ... to here.\n\nFrom-SVN: r218775", "tree": {"sha": "870c69ce3792bf94f418d267bdc578ae438f550a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/870c69ce3792bf94f418d267bdc578ae438f550a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/728f661cf56691b13ebda60fcde1b1245ad84509", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/728f661cf56691b13ebda60fcde1b1245ad84509", "html_url": "https://github.com/Rust-GCC/gccrs/commit/728f661cf56691b13ebda60fcde1b1245ad84509", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/728f661cf56691b13ebda60fcde1b1245ad84509/comments", "author": null, "committer": null, "parents": [{"sha": "24f036fbc511f609a1ac4e987a75600a469ef654", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24f036fbc511f609a1ac4e987a75600a469ef654", "html_url": "https://github.com/Rust-GCC/gccrs/commit/24f036fbc511f609a1ac4e987a75600a469ef654"}], "stats": {"total": 406, "additions": 222, "deletions": 184}, "files": [{"sha": "81cf70bd9def7f07ae793610d7472d016542911e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 216, "deletions": 174, "changes": 390, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/728f661cf56691b13ebda60fcde1b1245ad84509/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/728f661cf56691b13ebda60fcde1b1245ad84509/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=728f661cf56691b13ebda60fcde1b1245ad84509", "patch": "@@ -1,3 +1,9 @@\n+2014-12-16  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/gnu-user.h (TARGET_CAN_SPLIT_STACK): Move from here ...\n+\t* config/i386/gnu-user64.h (TARGET_CAN_SPLIT_STACK): ... and here ...\n+\t* config/i386/gnu-user-common.h (TARGET_CAN_SPLIT_STACK): ... to here.\n+\n 2014-12-16  Chung-Ju Wu  <jasonwucj@gmail.com>\n \n \tPR target/64217\n@@ -126,7 +132,7 @@\n \n \tPR ipa/61558\n \t* symtab.c (symbol_table::insert_to_assembler_name_hash\n-\tsymbol_table::unlink_from_assembler_name_hash): Do not ICE when\t\n+\tsymbol_table::unlink_from_assembler_name_hash): Do not ICE when\n \tDECL_ASSEMBLER_NAME is NULL.\n \n 2014-12-14  Jan Hubicka  <hubicka@ucw.cz>\n@@ -595,9 +601,9 @@\n \n 2014-12-10  Richard Biener  <rguenther@suse.de>\n \n-\t * tree-ssa-loop-im.c\n-\t (move_computations_dom_walker::before_dom_children): Clear\n-\t SSA_NAME_RANGE_INFO on moved stmts.\n+\t* tree-ssa-loop-im.c\n+\t(move_computations_dom_walker::before_dom_children): Clear\n+\tSSA_NAME_RANGE_INFO on moved stmts.\n \n 2014-12-10  Martin Liska  <mliska@suse.cz>\n \n@@ -856,8 +862,8 @@\n \t(cortexa57_tunings): Likewise.\n \t(thunderx_tunings): Likewise.\n \n-2014-12-09  Andrew Pinski  apinski@cavium.com\n-            Kyrylo Tkachov  kyrylo.tkachov@arm.com\n+2014-12-09  Andrew Pinski  <apinski@cavium.com>\n+\t    Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* config/aarch64/aarch64.c (AARCH64_FUSE_CMP_BRANCH): New define.\n \t(thunderx_tunings): Add AARCH64_FUSE_CMP_BRANCH to fuseable_ops.\n@@ -961,7 +967,7 @@\n \n 2014-11-15  David Wohlferd <dw@LimeGreenSocks.com>\n \n-        PR target/61692\n+\tPR target/61692\n \t* cfgexpand.c (expand_asm_operands): Count all inline asm params.\n \n 2014-12-08  David Malcolm  <dmalcolm@redhat.com>\n@@ -1263,7 +1269,8 @@\n 2014-12-05  Ilya Enkovich  <ilya.enkovich@intel.com>\n \n \tPR target/64056\n-\t* doc/sourcebuild.texi: Add mempcpy and stpcpy for Effective-Target Keywords.\n+\t* doc/sourcebuild.texi: Add mempcpy and stpcpy for Effective-Target\n+\tKeywords.\n \n 2014-12-05  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n \n@@ -1675,7 +1682,7 @@\n \t(aarch64_simd_vec_set<mode>,vashr<mode>3, vlshr<mode>3, vec_set<mode>,\n \taarch64_mla<mode>, aarch64_mls<mode>, <su><maxmin><mode>3,\n \taarch64_<sur>h<addsub><mode>): Change VQ_S to VDQ_BHSI.\n-\t\n+\n \t(*aarch64_<su>mlal<mode>, *aarch64_<su>mlsl<mode>,\n \taarch64_<ANY_EXTEND:su><ADDSUB:optab>l<mode>,\n \taarch64_<ANY_EXTEND:su><ADDSUB:optab>w<mode>, aarch64_<sur>shll_n<mode>):\n@@ -3172,9 +3179,9 @@\n \n 2014-11-21  Andrew Bennett  <andrew.bennett@imgtec.com>\n \n-\t* config/mips/mips.c (mips_process_sync_loop): Place a \n+\t* config/mips/mips.c (mips_process_sync_loop): Place a\n \tnop in the delay slot of the branch likely instruction.\n-\t(mips_output_sync_loop): Ensure mips_branch_likely is \n+\t(mips_output_sync_loop): Ensure mips_branch_likely is\n \tset before calling mips_output_sync_loop.\n \t(mips_sync_loop_insns): Likewise.\n \n@@ -3317,7 +3324,7 @@\n \t* config/rs6000/predicates.md: Likewise.\n \t* config/rs6000/rs6000.c (num_insns_constant_wide): Likewise.\n \t(includes_rldic_lshift_p): Likewise.\n-\t(includes_rldicr_lshift_p): Likewise. \n+\t(includes_rldicr_lshift_p): Likewise.\n \t* emit-rtl.c (const_wide_int_htab_hash): Likewise.\n \t* loop-iv.c (determine_max_iter): Likewise.\n \t(iv_number_of_iterations): Likewise.\n@@ -3491,10 +3498,10 @@\n 2014-11-19  Jan Hubicka  <hubicka@ucw.cz>\n \n \tPR bootstrap/63963\n-\t* tree-streamer-out.c (write_ts_function_decl_tree_pointers): Stream out\n-\tDECL_FUNCTION_SPECIFIC_TARGET\n-\t* tree-streamer-in.c (lto_input_ts_function_decl_tree_pointers): Stream in\n-\tDECL_FUNCTION_SPECIFIC_TARGET.\n+\t* tree-streamer-out.c (write_ts_function_decl_tree_pointers): Stream\n+\tout DECL_FUNCTION_SPECIFIC_TARGET\n+\t* tree-streamer-in.c (lto_input_ts_function_decl_tree_pointers): Stream\n+\tin DECL_FUNCTION_SPECIFIC_TARGET.\n \n 2014-11-19  David Malcolm  <dmalcolm@redhat.com>\n \n@@ -4478,8 +4485,9 @@\n \n 2014-11-19  Renlin Li  <renlin.li@arm.com>\n \n-    * config/aarch64/aarch64.h (TARGET_CPU_CPP_BUILTINS): Define __ARM_FP_FAST,\n-\t__ARM_FEATURE_FMA, __ARM_FP, __ARM_FEATURE_NUMERIC_MAXMIN, __ARM_NEON_FP.\n+\t* config/aarch64/aarch64.h (TARGET_CPU_CPP_BUILTINS): Define\n+\t__ARM_FP_FAST, __ARM_FEATURE_FMA, __ARM_FP,\n+\t__ARM_FEATURE_NUMERIC_MAXMIN, __ARM_NEON_FP.\n \n 2014-11-19  Marek Polacek  <polacek@redhat.com>\n \n@@ -6199,8 +6207,8 @@\n \n 2014-11-18  Marat Zakirov  <m.zakirov@samsung.com>\n \n-\t* opts.c (finish_options): Disable aggressive opts for sanitizer.  \n-\t(common_handle_option): Move code to finish_options.  \n+\t* opts.c (finish_options): Disable aggressive opts for sanitizer.\n+\t(common_handle_option): Move code to finish_options.\n \n 2014-11-18  Yury Gribov  <y.gribov@samsung.com>\n \n@@ -6341,8 +6349,8 @@\n \n 2014-11-17  Jan Hubicka  <hubicka@ucw.cz>\n \n-\t* tree.c (free_lang_data_in_decl): Set DECL_FUNCTION_SPECIFIC_OPTIMIZATION\n-\tto optimization_default_node.\n+\t* tree.c (free_lang_data_in_decl): Set\n+\tDECL_FUNCTION_SPECIFIC_OPTIMIZATION to optimization_default_node.\n \n 2014-11-17  Jan Hubicka  <hubicka@ucw.cz>\n \n@@ -6553,15 +6561,15 @@\n \t* ipa-polymorphic-call.c\n \t(ipa_polymorphic_call_context::speculation_consistent_p): Constify.\n \t(ipa_polymorphic_call_context::meet_speculation_with): New function.\n-\t(ipa_polymorphic_call_context::combine_with): Handle types in construction\n-\tbetter.\n+\t(ipa_polymorphic_call_context::combine_with): Handle types in\n+\tconstruction better.\n \t(ipa_polymorphic_call_context::equal_to): Do not bother about useless\n \tspeculation.\n \t(ipa_polymorphic_call_context::meet_with): New function.\n \t* cgraph.h (class ipa_polymorphic_call_context): Add\n \tmeet_width, meet_speculation_with; constify speculation_consistent_p.\n-\t* ipa-cp.c (ipa_context_from_jfunc): Handle speculation; combine with incomming\n-\tcontext.\n+\t* ipa-cp.c (ipa_context_from_jfunc): Handle speculation; combine\n+\twith incomming context.\n \t(propagate_context_accross_jump_function): Likewise; be more cureful.\n \tabout set_contains_variable.\n \t(ipa_get_indirect_edge_target_1): Fix handling of dynamic type changes.\n@@ -6576,7 +6584,8 @@\n \t(expand_thunk): Use get_untransformed_body.\n \t(cgraph_node::expand): Likewise.\n \t* tree-ssa-structalias.c (ipa_pta_execute): Skip inline clones.\n-\t* cgraph.c (release_function_body): Do not push cfun when CFG is not there.\n+\t* cgraph.c (release_function_body): Do not push cfun when CFG\n+\tis not there.\n \t(cgraph_node::get_untransformed_body): Break out from ...\n \t(cgraph_node::get_body): ... here; add code to apply all transforms.\n \t* cgraph.h (cgraph_node): Add get_untransformed_body.\n@@ -6663,8 +6672,10 @@\n 2014-11-15  Jan Hubicka <hubicka@ucw.cz>\n \n \t* lto-streamer-out.c (hash_tree): Use cl_optimization_hash.\n-\t* lto-streamer.h (cl_optimization_stream_out, cl_optimization_stream_in): Declare.\n-\t* optc-save-gen.awk: Generate cl_optimization LTO streaming and hashing routines.\n+\t* lto-streamer.h (cl_optimization_stream_out,\n+\tcl_optimization_stream_in): Declare.\n+\t* optc-save-gen.awk: Generate cl_optimization LTO streaming\n+\tand hashing routines.\n \t* opth-gen.awk: Add prototype of cl_optimization_hash.\n \t* tree-streamer-in.c (unpack_ts_optimization): Remove.\n \t(streamer_unpack_tree_bitfields): Use cl_optimization_stream_in.\n@@ -8537,7 +8548,7 @@\n \t* config/pa/pa.md (trap): New insn.  Add \"trap\" to attribute type.\n \tDon't allow trap insn in in_branch_delay, in_nullified_branch_delay\n \tor in_call_delay.\n-\t\n+\n 2014-11-06  Steve Ellcey  <sellcey@imgtec.com>\n \n \t* config.gcc (mips*-mti-linux*): Remove gnu_ld and gas assignments.\n@@ -9327,7 +9338,7 @@\n \t* sanopt.c: ...here.  New file.\n \n 2014-11-04  Jiong Wang  <jiong.wang@arm.com>\n-2014-11-04  Wilco Dijkstra  <wilco.dijkstra@arm.com>\n+\t    Wilco Dijkstra  <wilco.dijkstra@arm.com>\n \n \tPR target/63293\n \t* config/aarch64/aarch64.c (aarch64_expand_epiloue): Add barriers before\n@@ -9820,8 +9831,9 @@\n 2014-10-31  Max Ostapenko  <m.ostapenko@partner.samsung.com>\n \n \tPR ipa/63696\n-\t* ipa-icf.c (sem_function::~sem_function): Change free to delete to avoid\n-\talloc-dealloc mismatch with new, called in ipa_icf::sem_function::init.\n+\t* ipa-icf.c (sem_function::~sem_function): Change free to delete\n+\tto avoid alloc-dealloc mismatch with new, called in\n+\tipa_icf::sem_function::init.\n \n 2014-10-30  Felix Yang  <felix.yang@huawei.com>\n \n@@ -11937,8 +11949,9 @@\n \t(enum asan_check_flags): Remove ASAN_CHECK_START_INSTRUMENTED and\n \tASAN_CHECK_END_INSTRUMENTED.  Change ASAN_CHECK_LAST.\n \t(asan_expand_check_ifn): Remove start_instrumented and end_instrumented.\n-\t* builtins.c (expand_builtin): Include asan.h.  Don't expand string/memory\n-\tbuiltin functions that have interceptors if ASan is enabled.\n+\t* builtins.c (expand_builtin): Include asan.h.  Don't expand\n+\tstring/memory builtin functions that have interceptors if ASan is\n+\tenabled.\n \n 2014-10-28  Richard Biener  <rguenther@suse.de>\n \n@@ -13588,7 +13601,6 @@\n \t(lds_fpscr, sts_fpscr): New insns.\n \t(toggle_sz, toggle_pr): Use SImode for FPSCR_REG instead of PSImode.\n \n->>>>>>> .r217525\n 2014-10-17  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* ipa-inline-transform.c (master_clone_with_noninline_clones_p): New.\n@@ -13718,8 +13730,8 @@\n 2014-10-17  Tom de Vries  <tom@codesourcery.com>\n \n \tPR rtl-optimization/61605\n-\t* regcprop.c (copyprop_hardreg_forward_1): Add copy_p and noop_p.  Don't\n-\tnotice stores for noops.  Don't regard noops as copies.\n+\t* regcprop.c (copyprop_hardreg_forward_1): Add copy_p and noop_p.\n+\tDon't notice stores for noops.  Don't regard noops as copies.\n \n 2014-10-17  Uros Bizjak  <ubizjak@gmail.com>\n \n@@ -14171,8 +14183,8 @@\n \tPR lto/62026\n \t* cgraphclones.c (duplicate_thunk_for_node): Get body to have args\n \tto duplicate.\n-\t* lto-streamer-out.c (lto_output): Handle correctly thunks that was born\n-\tat WPA time.\n+\t* lto-streamer-out.c (lto_output): Handle correctly thunks that was\n+\tborn at WPA time.\n \n 2014-10-15  Vladimir Makarov  <vmakarov@redhat.com>\n \n@@ -14303,7 +14315,7 @@\n \n 2014-10-14  Jan Hubicka  <hubicka@ucw.cz>\n \n-\t* loop-unroll.c: (decide_unrolling_and_peeling): Rename to\n+\t* loop-unroll.c (decide_unrolling_and_peeling): Rename to\n \t(decide_unrolling): ... this one.\n \t(peel_loops_completely): Remove.\n \t(decide_peel_simple): Remove.\n@@ -14313,21 +14325,21 @@\n \t(peel_loop_completely): Remove.\n \t(unroll_and_peel_loops): Rename to ...\n \t(unroll_loops): ... this one; handle only unrolling.\n-\t* cfgloop.h (lpt_dec): Remove LPT_PEEL_COMPLETELY and\n-\tLPT_PEEL_SIMPLE.\n+\t* cfgloop.h (lpt_dec): Remove LPT_PEEL_COMPLETELY and LPT_PEEL_SIMPLE.\n \t(UAP_PEEL): Remove.\n \t(unroll_and_peel_loops): Remove.\n \t(unroll_loops): New.\n-\t* passes.def: Replace\n-\tpass_rtl_unroll_and_peel_loops by pass_rtl_unroll_loops.\n+\t* passes.def: Replace pass_rtl_unroll_and_peel_loops\n+\tby pass_rtl_unroll_loops.\n \t* loop-init.c (gate_rtl_unroll_and_peel_loops,\n \trtl_unroll_and_peel_loops): Rename to ...\n \t(gate_rtl_unroll_loops, rtl_unroll_loops): ... these; update.\n \t(pass_rtl_unroll_and_peel_loops): Rename to ...\n \t(pass_rtl_unroll_loops): ... this one.\n \t* tree-pass.h (make_pass_rtl_unroll_and_peel_loops): Remove.\n \t(make_pass_rtl_unroll_loops): New.\n-\t* tree-ssa-loop-ivcanon.c: (estimated_peeled_sequence_size, try_peel_loop): New.\n+\t* tree-ssa-loop-ivcanon.c (estimated_peeled_sequence_size,\n+\ttry_peel_loop): New.\n \t(canonicalize_loop_induction_variables): Update.\n \n 2014-10-14  Max Filippov  <jcmvbkbc@gmail.com>\n@@ -14363,7 +14375,8 @@\n \n \t* config/msp430/msp430-modes.def (PSI): Add.\n \n-\t* config/msp430/msp430-protos.h (msp430_hard_regno_nregs_has_padding): New.\n+\t* config/msp430/msp430-protos.h (msp430_hard_regno_nregs_has_padding):\n+\tNew.\n \t(msp430_hard_regno_nregs_with_padding): New.\n \t* config/msp430/msp430.c (msp430_scalar_mode_supported_p): New.\n \t(msp430_hard_regno_nregs_has_padding): New.\n@@ -14402,8 +14415,7 @@\n \t(int_n_data): New.\n \t* tree.c (int_n_enabled_p): New.\n \t(int_n_trees): New.\n-\t(make_or_reuse_type): Check for all __intN types, not just\n-\t__int128.\n+\t(make_or_reuse_type): Check for all __intN types, not just __int128.\n \t(build_common_tree_nodes): Likewise.  Also fill in integer_typs[]\n \tentries.\n \t* tree.h (int128_integer_type_node): Remove.\n@@ -14412,8 +14424,7 @@\n \t(int_n_enabled_p): New.\n \t(int_n_trees): New.\n \t* toplev.c (standard_type_bitsize): New.\n-\t(do_compile): Check which __intN types are enabled for the current\n-\trun.\n+\t(do_compile): Check which __intN types are enabled for the current run.\n \t* builtin-types.def (BT_INT128): Remove.\n \t(BT_UINT128): Remove.\n \t* machmode.def: Add macro to create __int128 for all targets.\n@@ -14424,8 +14435,7 @@\n \t(blank_mode): Likewise.\n \t(INT_N): New.\n \t(make_int_n): New.\n-\t(emit_insn_modes_h): Count __intN entries and define\n-\tNUM_INT_N_ENTS.\n+\t(emit_insn_modes_h): Count __intN entries and define NUM_INT_N_ENTS.\n \t(emit_mode_int_n): New.\n \t(emit_insn_modes_c): Call it.\n \t* gimple.c (gimple_signed_or_unsigned_type): Check for all __intN\n@@ -15871,13 +15881,15 @@\n 2014-09-26  Jan Hubicka  <hubicka@ucw.cz>\n \n \tPR ipa/60665\n-\t* ipa-devirt.c (possible_polymorphic_call_targets): Silence clang warning.\n+\t* ipa-devirt.c (possible_polymorphic_call_targets): Silence\n+\tclang warning.\n \n 2014-09-26  Jan Hubicka  <hubicka@ucw.cz>\n \n \tPR ipa/62121\n-\t* ipa-polymorphic-call.c (ipa_polymorphic_call_context::restrict_to_inner_class):\n-\tfix pasto in checking array size.\n+\t* ipa-polymorphic-call.c\n+\t(ipa_polymorphic_call_context::restrict_to_inner_class): Fix pasto\n+\tin checking array size.\n \n 2014-09-26  Jan Hubicka  <hubicka@ucw.cz>\n \n@@ -15902,9 +15914,12 @@\n \t* cgraph.c (cgraph_node::release_body): New argument keep_arguments\n \tintroduced.\n \t* cgraph.h: Likewise.\n-\t* cgraphunit.c (cgraph_node::create_wrapper): Usage of new argument introduced.\n-\t* ipa-utils.h (polymorphic_type_binfo_p): Safe check for binfos created by Java.\n-\t* tree-ssa-alias.c (ao_ref_base_alias_set): Static function transformed to global.\n+\t* cgraphunit.c (cgraph_node::create_wrapper): Usage of new\n+\targument introduced.\n+\t* ipa-utils.h (polymorphic_type_binfo_p): Safe check for binfos\n+\tcreated by Java.\n+\t* tree-ssa-alias.c (ao_ref_base_alias_set): Static function\n+\ttransformed to global.\n \t* tree-ssa-alias.h: Likewise.\n \n 2014-09-26  Jakub Jelinek  <jakub@redhat.com>\n@@ -15941,9 +15956,9 @@\n \n 2014-09-25  Jan Hubicka  <hubicka@ucw.cz>\n \n-\t* ipa-utils.h (subbinfo_with_vtable_at_offset, type_all_derivations_known_p,\n-\ttype_known_to_have_no_deriavations_p, types_must_be_same_for_odr,\n-\ttypes_odr_comparable): Declare.\n+\t* ipa-utils.h (subbinfo_with_vtable_at_offset,\n+\ttype_all_derivations_known_p, type_known_to_have_no_deriavations_p,\n+\ttypes_must_be_same_for_odr, types_odr_comparable): Declare.\n \t(polymorphic_type_binfo_p): Move here from ipa-devirt.c\n \t* ipa-polymorphic-call.c: New file.\n \t(contains_polymorphic_type_p, possible_placement_new,\n@@ -15992,8 +16007,8 @@\n \tspeculative and non-speculative answers, do just one at a time.\n \tReplace NONSPECULATIVE_TARGETSP parameter with SPECULATIVE flag.\n \t(dump_targets): Break out from ...\n-\t(dump_possible_polymorphic_call_targets): ... here; dump both speculative\n-\tand non-speculative lists.\n+\t(dump_possible_polymorphic_call_targets): ... here; dump both\n+\tspeculative and non-speculative lists.\n \t(ipa_devirt): Update for new possible_polymorphic_call_targets API.\n \t* ipa-utils.h (possible_polymorphic_call_targets): Update.\n \n@@ -16230,8 +16245,9 @@\n \t(ipa_polymorphic_call_context::set_by_decl): Cleanup comment.\n \t(ipa_polymorphic_call_context::set_by_invariant): Simplify.\n \t(ipa_polymorphic_call_context::ipa_polymorphic_call_context): Simplify.\n-\t(possible_polymorphic_call_targets): Trust context.restrict_to_inner_class\n-\tto suceed on all valid cases; remove confused sanity check.\n+\t(possible_polymorphic_call_targets): Trust\n+\tcontext.restrict_to_inner_class to suceed on all valid cases;\n+\tremove confused sanity check.\n \t(dump_possible_polymorphic_call_targets): Simplify.\n \n 2014-09-24  Aldy Hernandez  <aldyh@redhat.com>\n@@ -16471,8 +16487,8 @@\n \n 2014-09-23  Jiong Wang  <jiong.wang@arm.com>\n \n-\t* shrink-wrap.c (try_shrink_wrapping): Check PIC_OFFSET_TABLE_REGNUM not\n-\tbe INVALID_REGNUM.\n+\t* shrink-wrap.c (try_shrink_wrapping): Check PIC_OFFSET_TABLE_REGNUM\n+\tnot be INVALID_REGNUM.\n \n 2014-09-23  Thomas Schwinge  <thomas@codesourcery.com>\n \n@@ -16877,9 +16893,12 @@\n \n 2014-09-19  Jan Hubicka  <hubicka@ucw.cz>\n \n-\t* ipa-utils.h (ipa_polymorphic_call_context): Turn into class; add ctors.\n-\t(possible_polymorphic_call_targets, dump_possible_polymorphic_call_targets,\n-\tpossible_polymorphic_call_target_p, possible_polymorphic_call_target_p): Simplify.\n+\t* ipa-utils.h (ipa_polymorphic_call_context): Turn into class;\n+\tadd ctors.\n+\t(possible_polymorphic_call_targets,\n+\tdump_possible_polymorphic_call_targets,\n+\tpossible_polymorphic_call_target_p,\n+\tpossible_polymorphic_call_target_p): Simplify.\n \t(get_dynamic_type): Remove.\n \t* ipa-devirt.c (ipa_dummy_polymorphic_call_context): Remove.\n \t(clear_speculation): Bring to ipa-deivrt.h\n@@ -16920,8 +16939,7 @@\n \tfield refuse_visibility_changes.\n \t(symtab_node::get_create): New method.\n \t* fold-const.c (tree_single_nonzero_warnv_p): Use get_create.\n-\t* varasm.c (mark_weak): Verify that visibility change is\n-\tpossible.\n+\t* varasm.c (mark_weak): Verify that visibility change is possible.\n \n 2014-09-19  Michael Meissner  <meissner@linux.vnet.ibm.com>\n \n@@ -17366,8 +17384,7 @@\n \tStrengthen param \"insn\" from rtx to rtx_insn *.\n \t* config/nds32/nds32.c (nds32_target_alignment): Likewise for\n \tlocal \"insn\".\n-\t* config/pa/pa-protos.h (pa_insn_refs_are_delayed): Likewise for\n-\tparam.\n+\t* config/pa/pa-protos.h (pa_insn_refs_are_delayed): Likewise for param.\n \t* config/pa/pa.c (pa_output_function_epilogue): Likewise for local\n \t\"insn\".  Use method of rtx_sequence for typesafety.\n \t(branch_to_delay_slot_p): Strengthen param \"insn\" from rtx to\n@@ -17493,8 +17510,7 @@\n \t(loop_align_max_skip): Likewise.\n \t(label_align_max_skip): Likewise.\n \t(jump_align_max_skip): Likewise.\n-\t* targhooks.h (default_label_align_after_barrier_max_skip):\n-\tLikewise.\n+\t* targhooks.h (default_label_align_after_barrier_max_skip): Likewise.\n \t(default_loop_align_max_skip): Likewise.\n \t(default_label_align_max_skip): Likewise.\n \t(default_jump_align_max_skip): Likewise.\n@@ -17651,8 +17667,7 @@\n \t* config/ia64/vms.h (IA64_NO_LIBGCC_XFMODE)\n \t(IA64_NO_LIBGCC_TFMODE): Define.\n \t* config/msp430/msp430.h (LIBGCC2_HAS_DF_MODE): Remove.\n-\t* config/pdp11/pdp11.c (TARGET_SCALAR_MODE_SUPPORTED_P): New\n-\tmacro.\n+\t* config/pdp11/pdp11.c (TARGET_SCALAR_MODE_SUPPORTED_P): New macro.\n \t(pdp11_scalar_mode_supported_p): New function.\n \t* config/rl78/rl78.h (LIBGCC2_HAS_DF_MODE): Remove.\n \t* config/rx/rx.h (LIBGCC2_HAS_DF_MODE): Remove.\n@@ -18779,7 +18794,8 @@\n \t(arm_init_neon_builtins): Support NEON_COPYSIGNF.\n \t(arm_builtin_vectorized_function): Likewise.\n \t* config/arm/arm_neon_builtins.def: New macro for copysignf.\n-\t* config/arm/neon.md (neon_copysignf<mode>): New pattern for vector copysignf.\n+\t* config/arm/neon.md (neon_copysignf<mode>): New pattern for\n+\tvector copysignf.\n \n 2014-09-09  Richard Sandiford  <richard.sandiford@arm.com>\n \n@@ -19816,28 +19832,28 @@\n \t* hash-map.h (hash_map::hash_entry::ggc_mx): Likewise.\n \t(hash_map::hash_entry::pch_nx): Likewise.\n \t(hash_map::hash_entry::pch_nx_helper): Likewise.\n-(hash_map::hash_map): Adjust.\n-(hash_map::create_ggc): New function.\n-(gt_ggc_mx): Likewise.\n-(gt_pch_nx): Likewise.\n+\t(hash_map::hash_map): Adjust.\n+\t(hash_map::create_ggc): New function.\n+\t(gt_ggc_mx): Likewise.\n+\t(gt_pch_nx): Likewise.\n \t* hash-set.h (default_hashset_traits::ggc_mx): Likewise.\n-(default_hashset_traits::pch_nx): Likewise.\n-(hash_set::hash_entry::ggc_mx): Likewise.\n-(hash_set::hash_entry::pch_nx): Likewise.\n-(hash_set::hash_entry::pch_nx_helper): Likewise.\n-(hash_set::hash_set): Adjust.\n-(hash_set::create_ggc): New function.\n-(hash_set::elements): Likewise.\n-(gt_ggc_mx): Likewise.\n-(gt_pch_nx): Likewise.\n+\t(default_hashset_traits::pch_nx): Likewise.\n+\t(hash_set::hash_entry::ggc_mx): Likewise.\n+\t(hash_set::hash_entry::pch_nx): Likewise.\n+\t(hash_set::hash_entry::pch_nx_helper): Likewise.\n+\t(hash_set::hash_set): Adjust.\n+\t(hash_set::create_ggc): New function.\n+\t(hash_set::elements): Likewise.\n+\t(gt_ggc_mx): Likewise.\n+\t(gt_pch_nx): Likewise.\n \t* hash-table.h (hash_table::hash_table): Adjust.\n-(hash_table::m_ggc): New member.\n+\t(hash_table::m_ggc): New member.\n \t(hash_table::~hash_table): Adjust.\n \t(hash_table::expand): Likewise.\n \t(hash_table::empty): Likewise.\n-(gt_ggc_mx): New function.\n+\t(gt_ggc_mx): New function.\n \t(hashtab_entry_note_pointers): Likewise.\n-(gt_pch_nx): Likewise.\n+\t(gt_pch_nx): Likewise.\n \n 2014-09-02  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n \n@@ -21312,7 +21328,8 @@\n \t(define_insn \"vec_interleave_lowv4si<mask_name>\"): Ditto.\n \t(define_insn \"vec_interleave_highv16qi<mask_name>\"): New.\n \t(define_insn \"avx512bw_interleave_highv32hi<mask_name>\"): Ditto.\n-\t(define_insn \"<mask_codefor>avx512bw_interleave_lowv32hi<mask_name>\"): Ditto.\n+\t(define_insn \"<mask_codefor>avx512bw_interleave_lowv32hi<mask_name>\"):\n+\tDitto.\n \n 2014-08-28  Alexander Ivchenko  <alexander.ivchenko@intel.com>\n \t    Maxim Kuznetsov  <maxim.kuznetsov@intel.com>\n@@ -24511,13 +24528,18 @@\n \t* cgraph.h (symtab_node):\n \t(bool needed_p (void)): created from decide_is_symbol_needed\n \t(bool referred_to_p (void)): created from referred_to_p\n-\t(static cgraph_node *get_for_asmname (tree asmname)): created from symtab_node_for_asm\n+\t(static cgraph_node *get_for_asmname (tree asmname)):\n+\tcreated from symtab_node_for_asm\n \t* cgraph.h (cgraph_node):\n-\t(void assemble_thunks_and_aliases (void)): created from assemble_thunks_and_aliases\n+\t(void assemble_thunks_and_aliases (void)):\n+\tcreated from assemble_thunks_and_aliases\n \t(void expand (void)): created from expand_function\n-\t(static void finalize_function (tree, bool)): created from cgraph_finalize_function\n-\t(static cgraph_local_info *local_info (tree decl)): created from cgraph_local_info\n-\t(static cgraph_global_info *global_info (tree)): created from cgraph_global_info\n+\t(static void finalize_function (tree, bool)):\n+\tcreated from cgraph_finalize_function\n+\t(static cgraph_local_info *local_info (tree decl)):\n+\tcreated from cgraph_local_info\n+\t(static cgraph_global_info *global_info (tree)):\n+\tcreated from cgraph_global_info\n \t(static cgraph_rtl_info *rtl_info (tree)): created from cgraph_rtl_info\n \t* cgraph.h (varpool_node):\n \t(static void add (tree decl): created from varpool_add_new_variable\n@@ -24526,21 +24548,30 @@\n \t(void remove_caller (void)): created from cgraph_edge_remove_caller\n \t(void remove_callee (void)): created from cgraph_edge_remove_callee\n \t(void set_call_stmt (gimple new_stmt, bool update_speculative = true)):\n-\t  created from cgraph_set_call_stmt\n-\t(void redirect_callee (cgraph_node *n)): created from cgraph_redirect_edge_callee\n-\t(cgraph_edge *make_direct (cgraph_node *callee)): created from cgraph_make_edge_direct\n+\tcreated from cgraph_set_call_stmt\n+\t(void redirect_callee (cgraph_node *n)): created from\n+\tcgraph_redirect_edge_callee\n+\t(cgraph_edge *make_direct (cgraph_node *callee)): created from\n+\tcgraph_make_edge_direct\n \t(cgraph_edge *make_speculative (cgraph_node *n2, gcov_type direct_count,\n-\t  gimple redirect_call_stmt_to_callee (void)): created from cgraph_turn_edge_to_speculative\n-\t(void speculative_call_info (cgraph_edge *&direct, cgraph_edge *&indirect, ipa_ref *&reference)):\n-\t  created from cgraph_speculative_call_info\n-\t(cgraph_edge * clone (cgraph_node *n, gimple call_stmt, unsigned stmt_uid, gcov_type count_scale,\n-\t  int freq_scale, bool update_original)): created from cgraph_clone_edge\n-\t(cgraph_edge *resolve_speculation (tree callee_decl)): created from cgraph_resolve_speculation\n-\t(bool cannot_lead_to_return_p (void)): created from cannot_lead_to_return_p\n+\tgimple redirect_call_stmt_to_callee (void)): created from\n+\tcgraph_turn_edge_to_speculative\n+\t(void speculative_call_info (cgraph_edge *&direct,\n+\tcgraph_edge *&indirect, ipa_ref *&reference)): created from\n+\tcgraph_speculative_call_info\n+\t(cgraph_edge * clone (cgraph_node *n, gimple call_stmt,\n+\tunsigned stmt_uid, gcov_type count_scale,\n+\tint freq_scale, bool update_original)): created from cgraph_clone_edge\n+\t(cgraph_edge *resolve_speculation (tree callee_decl)):\n+\tcreated from cgraph_resolve_speculation\n+\t(bool cannot_lead_to_return_p (void)): created from\n+\tcannot_lead_to_return_p\n \t(bool recursive_p (void)): created from cgraph_edge_recursive_p\n \t(bool maybe_hot_p (void)): created from cgraph_maybe_hot_edge_p\n-\t(static unsigned int rebuild_edges (void)): created from rebuild_cgraph_edges\n-\t(static void rebuild_references (void)): created from cgraph_rebuild_references\n+\t(static unsigned int rebuild_edges (void)): created from\n+\trebuild_cgraph_edges\n+\t(static void rebuild_references (void)): created from\n+\tcgraph_rebuild_references\n \t* cgraph.h (symbol_table):\n \t(create_reference): renamed from add_reference\n \t(maybe_create_reference): renamed from maybe_add_reference\n@@ -24556,90 +24587,100 @@\n \t(varpool_node *first_variable (void)):new function\n \t(varpool_node *next_variable (varpool_node *node)):new function\n \t(varpool_node *first_static_initializer (void)):new function\n-\t(varpool_node *next_static_initializer (varpool_node *node)):new function\n+\t(varpool_node *next_static_initializer (varpool_node *node)):new\n+\tfunction\n \t(varpool_node *first_defined_variable (void)):new function\n \t(varpool_node *next_defined_variable (varpool_node *node)):new function\n \t(cgraph_node *first_defined_function (void)):new function\n \t(cgraph_node *next_defined_function (cgraph_node *node)):new function\n \t(cgraph_node *first_function (void)):new function\n \t(cgraph_node *next_function (cgraph_node *node)):new function\n \t(cgraph_node *first_function_with_gimple_body (void)):new function\n-\t(asm_node *finalize_toplevel_asm (tree asm_str)): created from add_asm_node\n+\t(asm_node *finalize_toplevel_asm (tree asm_str)): created from\n+\tadd_asm_node\n \t(bool remove_unreachable_nodes (bool before_inlining_p, FILE *file)):\n-\t  created from symtab_remove_unreachable_nodes\n-\t(void remove_unreferenced_decls (void)): created from varpool_remove_unreferenced_decls\n-\t(void process_new_functions (void)): created from cgraph_process_new_functions\n-\t(void process_same_body_aliases (void)): created from cgraph_process_same_body_aliases\n-\t(bool output_variables (void)): created from varpool_node::output_variables\n+\tcreated from symtab_remove_unreachable_nodes\n+\t(void remove_unreferenced_decls (void)): created from\n+\tvarpool_remove_unreferenced_decls\n+\t(void process_new_functions (void)): created from\n+\tcgraph_process_new_functions\n+\t(void process_same_body_aliases (void)): created from\n+\tcgraph_process_same_body_aliases\n+\t(bool output_variables (void)): created from\n+\tvarpool_node::output_variables\n \t(void output_asm_statements (void)): created from output_asm_statements\n-\t(void finalize_compilation_unit (void)): created from finalize_compilation_unit\n+\t(void finalize_compilation_unit (void)): created from\n+\tfinalize_compilation_unit\n \t(void compile (void)): created from compile\n \t(void output_weakrefs (void)): created from output_weakrefs\n-\t(cgraph_node *create_empty (void)): created from cgraph_node::create_empty\n-\t(cgraph_edge *create_edge (cgraph_node *caller, cgraph_node *callee, gimple call_stmt,\n-\t  gcov_type count, int freq, bool indir_unknown_callee)): created from cgraph_node::create_edge\n+\t(cgraph_node *create_empty (void)): created from\n+\tcgraph_node::create_empty\n+\t(cgraph_edge *create_edge (cgraph_node *caller, cgraph_node *callee,\n+\tgimple call_stmt, gcov_type count, int freq,\n+\tbool indir_unknown_callee)): created from cgraph_node::create_edge\n \t(void free_edge (cgraph_edge *e)): created from cgraph_free_edge\n \t(cgraph_node *next_function_with_gimple_body (cgraph_node *node)):\n-\t  created from cgraph_next_function_with_gimple_body\n+\tcreated from cgraph_next_function_with_gimple_body\n \t(void remove_edge_removal_hook (cgraph_edge_hook_list *)):\n-\t  created from cgraph_remove_edge_removal_hook\n-\t(cgraph_node_hook_list *add_cgraph_removal_hook (cgraph_node_hook, void *)):\n-\t  created from cgraph_add_node_removal_hook\n+\tcreated from cgraph_remove_edge_removal_hook\n+\t(cgraph_node_hook_list *add_cgraph_removal_hook (cgraph_node_hook,\n+\tvoid *)): created from cgraph_add_node_removal_hook\n \t(void remove_cgraph_removal_hook (cgraph_node_hook_list *)):\n-\t  created from cgraph_remove_node_removal_hook\n-\t(varpool_node_hook_list *add_varpool_removal_hook (varpool_node_hook, void *)):\n-\t  created from varpool_add_node_removal_hook\n+\tcreated from cgraph_remove_node_removal_hook\n+\t(varpool_node_hook_list *add_varpool_removal_hook (varpool_node_hook,\n+\tvoid *)): created from varpool_add_node_removal_hook\n \t(void remove_varpool_removal_hook (varpool_node_hook_list *)):\n-\t  created from varpool_remove_node_removal_hook\n-\t(cgraph_node_hook_list *add_cgraph_insertion_hook (cgraph_node_hook, void *)):\n-\t  created from cgraph_add_function_insertion_hook\n+\tcreated from varpool_remove_node_removal_hook\n+\t(cgraph_node_hook_list *add_cgraph_insertion_hook (cgraph_node_hook,\n+\tvoid *)): created from cgraph_add_function_insertion_hook\n \t(void remove_cgraph_insertion_hook (cgraph_node_hook_list *)):\n-\t  created from cgraph_remove_function_insertion_hook\n-\t(varpool_node_hook_list *add_varpool_insertion_hook (varpool_node_hook, void *)):\n-\t  created from varpool_add_variable_insertion_hook\n+\tcreated from cgraph_remove_function_insertion_hook\n+\t(varpool_node_hook_list *add_varpool_insertion_hook (varpool_node_hook,\n+\tvoid *)): created from varpool_add_variable_insertion_hook\n \t(void remove_varpool_insertion_hook (varpool_node_hook_list *)):\n \t  created from varpool_remove_variable_insertion_hook\n-\t(cgraph_2edge_hook_list *add_edge_duplication_hook (cgraph_2edge_hook, void *)):\n-\t  created from cgraph_add_edge_duplication_hook\n+\t(cgraph_2edge_hook_list *add_edge_duplication_hook (cgraph_2edge_hook,\n+\tvoid *)): created from cgraph_add_edge_duplication_hook\n \t(void remove_edge_duplication_hook (cgraph_2edge_hook_list *)):\n-\t  created from cgraph_remove_edge_duplication_hook\n-\t(cgraph_2node_hook_list *add_cgraph_duplication_hook (cgraph_2node_hook, void *)):\n-\t  created from cgraph_add_node_duplication_hook\n+\tcreated from cgraph_remove_edge_duplication_hook\n+\t(cgraph_2node_hook_list *add_cgraph_duplication_hook (cgraph_2node_hook,\n+\tvoid *)): created from cgraph_add_node_duplication_hook\n \t(void remove_cgraph_duplication_hook (cgraph_2node_hook_list *)):\n-\t  created from cgraph_remove_node_duplication_hook\n+\tcreated from cgraph_remove_node_duplication_hook\n \t(void call_edge_removal_hooks (cgraph_edge *e)):\n-\t  created from cgraph_call_edge_removal_hooks\n+\tcreated from cgraph_call_edge_removal_hooks\n \t(void call_cgraph_insertion_hooks (cgraph_node *node)):\n-\t  created from call_function_insertion_hooks\n+\tcreated from call_function_insertion_hooks\n \t(void call_cgraph_removal_hooks (cgraph_node *node)):\n-\t  created from cgraph_call_node_removal_hooks\n-\t(void call_cgraph_duplication_hooks (cgraph_node *node, cgraph_node *node2)):\n-\t  created from cgraph_node::call_duplication_hooks\n+\tcreated from cgraph_call_node_removal_hooks\n+\t(void call_cgraph_duplication_hooks (cgraph_node *node,\n+\tcgraph_node *node2)): created from cgraph_node::call_duplication_hooks\n \t(void call_edge_duplication_hooks (cgraph_edge *cs1, cgraph_edge *cs2)):\n-\t  created from cgraph_call_edge_duplication_hooks\n+\tcreated from cgraph_call_edge_duplication_hooks\n \t(void call_varpool_removal_hooks (varpool_node *node)):\n-\t  created from varpool_call_node_removal_hooks\n+\tcreated from varpool_call_node_removal_hooks\n \t(void call_varpool_insertion_hooks (varpool_node *node)):\n-\t  created from varpool_call_variable_insertion_hooks\n-\t(void insert_to_assembler_name_hash (symtab_node *node, bool with_clones)):\n-\t  created from insert_to_assembler_name_hash\n-\t(void unlink_from_assembler_name_hash (symtab_node *node, bool with_clones)):\n-\t  created from unlink_from_assembler_name_hash\n+\tcreated from varpool_call_variable_insertion_hooks\n+\t(void insert_to_assembler_name_hash (symtab_node *node,\n+\tbool with_clones)): created from insert_to_assembler_name_hash\n+\t(void unlink_from_assembler_name_hash (symtab_node *node,\n+\tbool with_clones)): created from unlink_from_assembler_name_hash\n \t(void symtab_prevail_in_asm_name_hash (symtab_node *node)):\n-\t  created from symtab_prevail_in_asm_name_hash\n+\tcreated from symtab_prevail_in_asm_name_hash\n \t(void symtab_initialize_asm_name_hash (void)):\n-\t  created from symtab_initialize_asm_name_hash\n+\tcreated from symtab_initialize_asm_name_hash\n \t(void change_decl_assembler_name (tree decl, tree name)):\n-\t  created from change_decl_assembler_name\n-\t(void materialize_all_clones (void)): created from cgraph_materialize_all_clones\n+\tcreated from change_decl_assembler_name\n+\t(void materialize_all_clones (void)): created from\n+\tcgraph_materialize_all_clones\n \t(static hashval_t decl_assembler_name_hash (const_tree asmname)):\n-\t  created from decl_assembler_name_hash\n+\tcreated from decl_assembler_name_hash\n \t(static bool decl_assembler_name_equal (tree decl, const_tree asmname)):\n-\t  created from decl_assembler_name_equal\n+\tcreated from decl_assembler_name_equal\n \t(static hashval_t hash_node_by_assembler_name (const void *p)):\n-\t  created from hash_node_by_assembler_name\n+\tcreated from hash_node_by_assembler_name\n \t(static int eq_assembler_name (const void *p1, const void *p2)):\n-\t  created from eq_assembler_name\n+\tcreated from eq_assembler_name\n \n 2014-08-25  Marek Polacek  <polacek@redhat.com>\n \n@@ -27724,8 +27765,8 @@\n \n 2014-08-18  Jan Hubicka  <hubicka@ucw.cz>\n \n-\t* ipa-visibility.c (update_visibility_by_resolution_info): Do no turn UNDEF\n-\tcomdats as extern.\n+\t* ipa-visibility.c (update_visibility_by_resolution_info): Do no\n+\tturn UNDEF comdats as extern.\n \n 2014-08-18  Jan Hubicka  <hubicka@ucw.cz>\n \n@@ -27855,15 +27896,16 @@\n \t    Kirill Yukhin  <kirill.yukhin@intel.com>\n \t    Michael Zolotukhin  <michael.v.zolotukhin@intel.com>\n \n-\t* config/i386/i386.c: Rename ufloatv8siv8df_mask to ufloatv8siv8df2_mask.\n+\t* config/i386/i386.c: Rename ufloatv8siv8df_mask to\n+\tufloatv8siv8df2_mask.\n \t* config/i386/i386.md\n \t(define_code_iterator any_float): New.\n \t(define_code_attr floatsuffix): New.\n \t* config/i386/sse.md\n \t(define_mode_iterator VF1_128_256VL): New.\n \t(define_mode_iterator VF2_512_256VL): New.\n-\t(define_insn \"float<si2dfmodelower><mode>2<mask_name>\"): Remove unnecessary\n-\tTARGET check.\n+\t(define_insn \"float<si2dfmodelower><mode>2<mask_name>\"): Remove\n+\tunnecessary TARGET check.\n \t(define_insn \"ufloatv8siv8df<mask_name>\"): Delete.\n \t(define_insn \"<floatsuffix>float<sseintvecmodelower><mode>2<mask_name><round_name>\"):\n \tNew.\n@@ -29417,10 +29459,10 @@\n \t* config/i386/i386.c (ix86_macro_fusion_pair_p): Reject 2nd\n \targuments that are not conditional jumps.\n \n-2014-08-04 Ganesh Gopalasubramanian  <Ganesh.Gopalasubramanian@amd.com>\n+2014-08-04  Ganesh Gopalasubramanian  <Ganesh.Gopalasubramanian@amd.com>\n \n-\t* config/i386/driver-i386.c (host_detect_local_cpu): Handle AMD's extended\n-\tfamily information. Handle BTVER2 cpu with cpuid family value.\n+\t* config/i386/driver-i386.c (host_detect_local_cpu): Handle AMD's\n+\textended family information. Handle BTVER2 cpu with cpuid family value.\n \n 2014-08-04  Tom de Vries  <tom@codesourcery.com>\n \n@@ -29807,8 +29849,8 @@\n \n 2014-07-29  Jan Hubicka  <hubicka@ucw.cz>\n \n-\t* ipa-devirt.c (polymorphic_call_target_d): Rename nonconstruction_targets\n-\tto speculative_targets\n+\t* ipa-devirt.c (polymorphic_call_target_d): Rename\n+\tnonconstruction_targets to speculative_targets\n \t(get_class_context): Fix handling of contextes without outer type;\n \tavoid matching non-polymorphic types in LTO.\n \t(possible_polymorphic_call_targets): Trun nonconstruction_targetsp"}, {"sha": "4629911938ed9969c8da373ba3bcf21930c90fae", "filename": "gcc/config/i386/gnu-user-common.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/728f661cf56691b13ebda60fcde1b1245ad84509/gcc%2Fconfig%2Fi386%2Fgnu-user-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/728f661cf56691b13ebda60fcde1b1245ad84509/gcc%2Fconfig%2Fi386%2Fgnu-user-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fgnu-user-common.h?ref=728f661cf56691b13ebda60fcde1b1245ad84509", "patch": "@@ -64,3 +64,9 @@ along with GCC; see the file COPYING3.  If not see\n \n /* Static stack checking is supported by means of probes.  */\n #define STACK_CHECK_STATIC_BUILTIN 1\n+\n+/* We only build the -fsplit-stack support in libgcc if the\n+   assembler has full support for the CFI directives.  */\n+#if HAVE_GAS_CFI_PERSONALITY_DIRECTIVE\n+#define TARGET_CAN_SPLIT_STACK\n+#endif"}, {"sha": "118aa4945697c24c3c1df9ee5f6d55b1ce69ffdd", "filename": "gcc/config/i386/gnu-user.h", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/728f661cf56691b13ebda60fcde1b1245ad84509/gcc%2Fconfig%2Fi386%2Fgnu-user.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/728f661cf56691b13ebda60fcde1b1245ad84509/gcc%2Fconfig%2Fi386%2Fgnu-user.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fgnu-user.h?ref=728f661cf56691b13ebda60fcde1b1245ad84509", "patch": "@@ -154,11 +154,6 @@ along with GCC; see the file COPYING3.  If not see\n /* i386 glibc provides __stack_chk_guard in %gs:0x14.  */\n #define TARGET_THREAD_SSP_OFFSET\t0x14\n \n-/* We only build the -fsplit-stack support in libgcc if the\n-   assembler has full support for the CFI directives.  */\n-#if HAVE_GAS_CFI_PERSONALITY_DIRECTIVE\n-#define TARGET_CAN_SPLIT_STACK\n-#endif\n /* We steal the last transactional memory word.  */\n #define TARGET_THREAD_SPLIT_STACK_OFFSET 0x30\n #endif"}, {"sha": "75d5552ddffb95d11c6374736d9fa8c440472e8b", "filename": "gcc/config/i386/gnu-user64.h", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/728f661cf56691b13ebda60fcde1b1245ad84509/gcc%2Fconfig%2Fi386%2Fgnu-user64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/728f661cf56691b13ebda60fcde1b1245ad84509/gcc%2Fconfig%2Fi386%2Fgnu-user64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fgnu-user64.h?ref=728f661cf56691b13ebda60fcde1b1245ad84509", "patch": "@@ -85,11 +85,6 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #define TARGET_THREAD_SSP_OFFSET \\\n   (TARGET_64BIT ? (TARGET_X32 ? 0x18 : 0x28) : 0x14)\n \n-/* We only build the -fsplit-stack support in libgcc if the\n-   assembler has full support for the CFI directives.  */\n-#if HAVE_GAS_CFI_PERSONALITY_DIRECTIVE\n-#define TARGET_CAN_SPLIT_STACK\n-#endif\n /* We steal the last transactional memory word.  */\n #define TARGET_THREAD_SPLIT_STACK_OFFSET \\\n   (TARGET_64BIT ? (TARGET_X32 ? 0x40 : 0x70) : 0x30)"}]}