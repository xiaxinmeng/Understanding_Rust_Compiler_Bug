{"sha": "684c69a32b7a1f254d947714b021445d7672f526", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njg0YzY5YTMyYjdhMWYyNTRkOTQ3NzE0YjAyMTQ0NWQ3NjcyZjUyNg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@libertysurf.fr", "date": "2004-02-16T18:06:27Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2004-02-16T18:06:27Z"}, "message": "* gcc.c-torture/execute/20020720-1.x: XFAIL on SPARC with -fPIC.\n\nFrom-SVN: r77908", "tree": {"sha": "241666a09eb3c0877603388fc26131ba5ecd29cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/241666a09eb3c0877603388fc26131ba5ecd29cd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/684c69a32b7a1f254d947714b021445d7672f526", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/684c69a32b7a1f254d947714b021445d7672f526", "html_url": "https://github.com/Rust-GCC/gccrs/commit/684c69a32b7a1f254d947714b021445d7672f526", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/684c69a32b7a1f254d947714b021445d7672f526/comments", "author": {"login": "ebotcazou", "id": 48091907, "node_id": "MDQ6VXNlcjQ4MDkxOTA3", "avatar_url": "https://avatars.githubusercontent.com/u/48091907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebotcazou", "html_url": "https://github.com/ebotcazou", "followers_url": "https://api.github.com/users/ebotcazou/followers", "following_url": "https://api.github.com/users/ebotcazou/following{/other_user}", "gists_url": "https://api.github.com/users/ebotcazou/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebotcazou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebotcazou/subscriptions", "organizations_url": "https://api.github.com/users/ebotcazou/orgs", "repos_url": "https://api.github.com/users/ebotcazou/repos", "events_url": "https://api.github.com/users/ebotcazou/events{/privacy}", "received_events_url": "https://api.github.com/users/ebotcazou/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "835abbf7f0d0c581f6fd017d6bb48ed721a3596f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/835abbf7f0d0c581f6fd017d6bb48ed721a3596f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/835abbf7f0d0c581f6fd017d6bb48ed721a3596f"}], "stats": {"total": 17, "additions": 17, "deletions": 0}, "files": [{"sha": "86a946d20917da80d0bb015cd9fec392514ca7ff", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/684c69a32b7a1f254d947714b021445d7672f526/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/684c69a32b7a1f254d947714b021445d7672f526/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=684c69a32b7a1f254d947714b021445d7672f526", "patch": "@@ -1,3 +1,7 @@\n+2004-02-16  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\t* gcc.c-torture/execute/20020720-1.x: XFAIL on SPARC with -fPIC.\n+\n 2004-02-15  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/13971"}, {"sha": "1f7137b153ac3608ac2e18e8f7ebb6a91b06eda1", "filename": "gcc/testsuite/gcc.c-torture/execute/20020720-1.x", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/684c69a32b7a1f254d947714b021445d7672f526/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20020720-1.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/684c69a32b7a1f254d947714b021445d7672f526/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20020720-1.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20020720-1.x?ref=684c69a32b7a1f254d947714b021445d7672f526", "patch": "@@ -11,6 +11,19 @@\n #     and can make the optimization.\n \n # Don't XFAIL at -O0, that should never fail.\n+if { [istarget \"sparc*-*-*\"] } {\n+    set torture_eval_before_compile {\n+        global compiler_conditional_xfail_data\n+        set compiler_conditional_xfail_data {\n+            \"PR opt/10348\" \\\n+            { \"*-*-*\" } \\\n+            { \"-fpic\" \"-fPIC\" } \\\n+            { \"-O0\" }\n+        }\n+    }\n+    return 0\n+}\n+\n set torture_eval_before_compile {\n     global compiler_conditional_xfail_data\n     set compiler_conditional_xfail_data {"}]}