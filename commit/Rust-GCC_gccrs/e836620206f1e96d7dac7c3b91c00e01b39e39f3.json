{"sha": "e836620206f1e96d7dac7c3b91c00e01b39e39f3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTgzNjYyMDIwNmYxZTk2ZDdkYWM3YzNiOTFjMDBlMDFiMzllMzlmMw==", "commit": {"author": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "2006-05-18T21:27:39Z"}, "committer": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "2006-05-18T21:27:39Z"}, "message": "Whitespace fixups\n\nFrom-SVN: r113892", "tree": {"sha": "87bde11e69c3f935f5a5a4b4caaf51462ee78272", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/87bde11e69c3f935f5a5a4b4caaf51462ee78272"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e836620206f1e96d7dac7c3b91c00e01b39e39f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e836620206f1e96d7dac7c3b91c00e01b39e39f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e836620206f1e96d7dac7c3b91c00e01b39e39f3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e836620206f1e96d7dac7c3b91c00e01b39e39f3/comments", "author": null, "committer": null, "parents": [{"sha": "578fdcb215a61d97c704d4ef266bfc421bbe6f8d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/578fdcb215a61d97c704d4ef266bfc421bbe6f8d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/578fdcb215a61d97c704d4ef266bfc421bbe6f8d"}], "stats": {"total": 1676, "additions": 838, "deletions": 838}, "files": [{"sha": "e805a395fb067dba47b03e2f7dd8d1505ba39da9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 58, "deletions": 58, "changes": 116, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e836620206f1e96d7dac7c3b91c00e01b39e39f3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e836620206f1e96d7dac7c3b91c00e01b39e39f3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e836620206f1e96d7dac7c3b91c00e01b39e39f3", "patch": "@@ -44,7 +44,7 @@\n \tnested functions with force_align_arg_pointer attribute.\n \t* doc/extend.texi (force_align_arg_pointer): Document it.\n \t* doc/invoke.texi (-mstackrealign): Document it.\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n+\n 2006-05-17  Kazu Hirata  <kazu@codesourcery.com>\n \n \tPR rtl-optimization/27477\n@@ -97,7 +97,7 @@\n 2006-05-17  Sebastian Pop  <pop@cri.ensmp.fr>\n \n \tPR middle-end/27332\n-\t* tree-loop-linear.c (try_interchange_loops): Test for \n+\t* tree-loop-linear.c (try_interchange_loops): Test for\n \tno data dependences.\n \n 2006-05-17  Zdenek Dvorak <dvorakz@suse.cz>\n@@ -137,7 +137,7 @@\n \t#ifdef GCC_DRIVER/#endif.\n \n 2006-05-16  Daniel Berlin <dberlin@dberlin.org>\n-\t\n+\n \tFix PR tree-optimization/27373\n \t* tree-ssa-forwprop.c: (forward_propagate_addr_expr_1): Add argument.\n \t (forward_propagate_addr_expr): Update call.\n@@ -445,7 +445,7 @@\n 2006-05-08  Daniel Berlin  <dberlin@dberlin.org>\n \n \tFix PR tree-optimization/27093\n-\t* tree-ssa-alias.c (recalculate_used_alone): Mark variables for \n+\t* tree-ssa-alias.c (recalculate_used_alone): Mark variables for\n \trenaming when they become not-used_alone.\n \n 2006-05-08  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n@@ -518,7 +518,7 @@\n \n 2006-05-07  Mircea Namolaru  <namolaru@il.ibm.com>\n \n-        * opts.c (flag_see): remove its setting at -O3.\n+\t* opts.c (flag_see): remove its setting at -O3.\n \n 2006-05-07  Richard Earnshaw  <rearnsha@arm.com>\n \n@@ -536,7 +536,7 @@\n \n 2006-04-29 Anatoly Sokolov <aesok@post.ru>\n \n-        * config/avr/avr.h (CRT_BINUTILS_SPECS): Fixed crt* file name\n+\t* config/avr/avr.h (CRT_BINUTILS_SPECS): Fixed crt* file name\n \tfor atmeg a645 device.\n \n 2006-05-06   Richard Guenther  <rguenther@suse.de>\n@@ -615,37 +615,37 @@\n \n 2006-05-04  Leehod Baruch  <leehod@il.ibm.com>\n \n-        * see.c: New file.\n-        * Makefile.in (OBJS-common): Add see.o.\n-        (see.o): Add dependencies.\n-        * common.opt (fsee): New flag for the see optimization was added.\n-        * opts.c (flag_see): Initialized.\n-        * passes.c (init_optimization_passes, pass_see): New pass.\n-        * rtl.h (see_main): Declaration as extern.\n-        * timevar.def (TV_SEE): New.\n-        * tree-pass.h (pass_see): Declaration as extern.\n-        * invoke.texi (-fsee): Document.\n-        * recog.c (validate_simplify_insn): New function.\n-        * recog.h (validate_simplify_insn): Declaration as extern.\n-        * df-problems.c (df_chain_dump): Check for NULL.\n+\t* see.c: New file.\n+\t* Makefile.in (OBJS-common): Add see.o.\n+\t(see.o): Add dependencies.\n+\t* common.opt (fsee): New flag for the see optimization was added.\n+\t* opts.c (flag_see): Initialized.\n+\t* passes.c (init_optimization_passes, pass_see): New pass.\n+\t* rtl.h (see_main): Declaration as extern.\n+\t* timevar.def (TV_SEE): New.\n+\t* tree-pass.h (pass_see): Declaration as extern.\n+\t* invoke.texi (-fsee): Document.\n+\t* recog.c (validate_simplify_insn): New function.\n+\t* recog.h (validate_simplify_insn): Declaration as extern.\n+\t* df-problems.c (df_chain_dump): Check for NULL.\n \n 2006-05-04  Kenneth Zadeck <zadeck@naturalbridge.com>\n-            Daniel Berlin  <dberlin@dberlin.org>\n+\t    Daniel Berlin  <dberlin@dberlin.org>\n \n-        * cfgrtl.c (insert_insn_bb_end_new): New function.\n-        * basic-block.h (insert_insn_bb_end_new): Declaration as extern.\n+\t* cfgrtl.c (insert_insn_bb_end_new): New function.\n+\t* basic-block.h (insert_insn_bb_end_new): Declaration as extern.\n \n 2006-05-04  Leehod Baruch  <leehod.baruch@weizmann.ac.il>\n \n-        * df.h (struct web_entry): Moved from web.c.\n-        (union_defs): Declaration as extern.\n-        (unionfind_root): Likewise.\n-        (unionfind_union): Likewise.\n-        * web.c (struct web_entry): Moved to df.h.\n-        (unionfind_root): Remove static declaration.\n-        (unionfind_union): Likewise.\n-        (union_defs): Likewise and generalize to use callback function.\n-        (web_main): Update arguments for union_defs function call.\n+\t* df.h (struct web_entry): Moved from web.c.\n+\t(union_defs): Declaration as extern.\n+\t(unionfind_root): Likewise.\n+\t(unionfind_union): Likewise.\n+\t* web.c (struct web_entry): Moved to df.h.\n+\t(unionfind_root): Remove static declaration.\n+\t(unionfind_union): Likewise.\n+\t(union_defs): Likewise and generalize to use callback function.\n+\t(web_main): Update arguments for union_defs function call.\n \n 2006-05-04  Richard Guenther  <rguenther@suse.de>\n \n@@ -1018,7 +1018,7 @@\n \n 2006-04-26  Aldy Hernandez  <aldyh@redhat.com>\n \n-        * tree-ssa-dse.c (dse_optimize_stmt): Remove unused variable USE.\n+\t* tree-ssa-dse.c (dse_optimize_stmt): Remove unused variable USE.\n \n 2006-04-26  Jakub Jelinek  <jakub@redhat.com>\n \n@@ -1453,7 +1453,7 @@\n \n 2006-04-18  Paolo Bonzini  <bonzini@gnu.org>\n \n-        PR target/27117\n+\tPR target/27117\n \n \tPartial revert of revision 112637\n \t2006-04-03  Paolo Bonzini  <bonzini@gnu.org>\n@@ -1466,9 +1466,9 @@\n \n 2006-04-18  Paolo Bonzini  <bonzini@gnu.org>\n \n-        PR tree-optimization/26821\n-        * tree-ssa-math-opts.c (get_constant_one): New.\n-        (insert_reciprocals): Use it.\n+\tPR tree-optimization/26821\n+\t* tree-ssa-math-opts.c (get_constant_one): New.\n+\t(insert_reciprocals): Use it.\n \n 2006-04-17  Geoffrey Keating  <geoffk@apple.com>\n \n@@ -1613,7 +1613,7 @@\n \treg_equiv_memory_loc_varray.\n \n 2006-04-14  Alexey Starovoytov  <alexey.starovoytov@sun.com>\n-            Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\t    Eric Botcazou  <ebotcazou@libertysurf.fr>\n \n \t* config/sparc/sparc.c (emit_and_preserve): Allocate space for the\n \tregister save area.\n@@ -1763,12 +1763,12 @@\n 2006-04-12  J\"orn Rennecke <joern.rennecke@st.com>\n \n \tPR target/27060\n-        * config/sh/lib1funcs.h: New file, broken out of:\n-        * config/sh/lib1funcs.asm.\n-        * config/sh/lib1funcs.h (DR00, DR01, DR20, DR21, DR40, DR41):\n+\t* config/sh/lib1funcs.h: New file, broken out of:\n+\t* config/sh/lib1funcs.asm.\n+\t* config/sh/lib1funcs.h (DR00, DR01, DR20, DR21, DR40, DR41):\n \tNew macros.\n \t* config/sh/lib1funcs.asm (udivsi3_i4): Use them.\n-        * config/sh/lib1funcs-Os-4-200.asm: New file.\n+\t* config/sh/lib1funcs-Os-4-200.asm: New file.\n \t* config/sh/embed-elf.h (LIBGCC_SPEC): Use -lgcc-Os-4-200.\n \t* config/sh/t-sh (OPT_EXTRA_PARTS): New variable.\n \t(EXTRA_MULTILIB_PARTS): Include it.\n@@ -2078,11 +2078,11 @@\n \n 2006-04-05  Robert Millan  <robertmh@gnu.org>\n \n-\t* config/i386/linux.h:  Add a comment to mark macros that are\n+\t* config/i386/linux.h: Add a comment to mark macros that are\n \tbeing overriden in config/k*bsd-gnu.h.\n-\t* config/kfreebsd-gnu.h:  Redefine GLIBC_DYNAMIC_LINKER instead of\n+\t* config/kfreebsd-gnu.h: Redefine GLIBC_DYNAMIC_LINKER instead of\n \tDYNAMIC_LINKER.\n-\t* config/knetbsd-gnu.h:  Ditto.\n+\t* config/knetbsd-gnu.h: Ditto.\n \n 2006-04-06  Jan Hubicka  <jh@suse.cz>\n \n@@ -2432,7 +2432,7 @@\n 2006-03-30  Roger Sayle  <roger@eyesopen.com>\n \n \tPR target/17959\n-\t* expr.c (emit_group_store):  Optimize group stores into a pseudo\n+\t* expr.c (emit_group_store): Optimize group stores into a pseudo\n \tregister by using a paradoxical subreg to initialize the destination\n \tif the first or last member of the group specifies a \"low part\".\n \n@@ -2621,7 +2621,7 @@\n \t* config/sh/sh.md (udivsi3_i4_int): Clobber MACH_REG and MACL_REG.\n \t(divsi3_i4_int): Likewise.\n \n-2006-03-28  Roger Sayle   <roger@eyesopen.com>\n+2006-03-28  Roger Sayle  <roger@eyesopen.com>\n \n \t* expr.c (emit_group_store): Only create a new pseudo reg if the\n \tquantity it needs to hold isn't already a suitable pseudo.\n@@ -5323,7 +5323,7 @@\n \n 2006-02-26  Roger Sayle  <roger@eyesopen.com>\n \n-\t* fold-const.c (fold_binary) <EQ_EXPR>:  Fold (~X & C) eq/ne 0 as\n+\t* fold-const.c (fold_binary) <EQ_EXPR>: Fold (~X & C) eq/ne 0 as\n \t(X & C) ne/eq 0, where C is a single bit, i.e. a power of two.\n \tFold both \"((X & C) ^ C) eq/ne 0\" and \"((X ^ C) & C) eq/ne 0\"\n \tas (X & C) ne/eq 0.\n@@ -5390,7 +5390,7 @@\n \t    James A. Morrison  <phython@gcc.gnu.org>\n \n \tPR middle-end/21137\n-\t* fold-const.c (fold_binary) <EQ_EXPR>:  Fold ((X>>C1)&C2) eq/ne 0,\n+\t* fold-const.c (fold_binary) <EQ_EXPR>: Fold ((X>>C1)&C2) eq/ne 0,\n \twhen C2 is a power of two, as either (X&(C2<<C1)) eq/ne 0 if the\n \tnew constant C2<<C1, or as (X<0) or (X,false) depending upon the\n \tsignedness of the shift operation.\n@@ -5402,15 +5402,15 @@\n \n 2006-02-25  Roger Sayle  <roger@eyesopen.com>\n \n-\t* simplify-rtx.c (simplify_relational_operation_1):  Simplify\n+\t* simplify-rtx.c (simplify_relational_operation_1): Simplify\n \t(X^Y) == 0 as X == Y and (X^Y) != 0 as X != Y.  Simplify (X^Y) == Y\n \tas X == 0, and some symmetry related transformations.\n \tSimplify (X^C1) == C2 as X == (C1^C2).  Split long comment line.\n \n 2006-02-25  Roger Sayle  <roger@eyesopen.com>\n \n \tPR middle-end/23673\n-\t* fold-const.c (fold_binary) <EQ_EXPR>:  Fold (X^Y) == 0 as X == Y\n+\t* fold-const.c (fold_binary) <EQ_EXPR>: Fold (X^Y) == 0 as X == Y\n \tand (X^Y) != 0 as X != Y.  Fold (X^Y) == Y as X == 0, and some\n \tsymmetry related transformations.  Fold (X^C1) == C2 as\n \tX == (C1^C2).\n@@ -5523,7 +5523,7 @@\n 2006-02-23  Daniel Berlin  <dberlin@dberlin.org>\n \n \tFix PR tree-optimization/26376\n-\t* tree-ssa-structalias.c (find_func_aliases):  Use get_id_for_tree,\n+\t* tree-ssa-structalias.c (find_func_aliases): Use get_id_for_tree,\n \tremove assert.\n \n 2006-02-23  Jakub Jelinek  <jakub@redhat.com>\n@@ -6926,7 +6926,7 @@\n \tsimplify_cond_and_lookup_avail_expr.\n \t* tree-flow.h (potentially_threadable_block): Prototype.\n \t(thread_across_edge): Likewise.\n-\t* Makefile.in (OBJS-common):  Add tree-ssa-threadedge.o\n+\t* Makefile.in (OBJS-common): Add tree-ssa-threadedge.o\n \t(tree-ssa-threadedge.o): Add dependencies.\n \t* tree-ssa-threadedge.c: New file.\n \t* passes.c (init_optimization_passes): Merge PHIs before\n@@ -7926,12 +7926,12 @@\n \t* df-problems.c (df_ru_bb_local_compute_process_def):\n \tAdded code to handle artifical defs in the entry to a function.\n \t(df_ru_bb_local_compute): Ditto.\n-\t(df_rd_bb_local_compute_process_def):  Ditto.\n+\t(df_rd_bb_local_compute_process_def): Ditto.\n \t(df_rd_bb_local_compute): Ditto.\n \t(df_lr_bb_local_compute): Ditto.\n \t(df_ur_bb_local_compute): Ditto.\n-\t(df_urec_bb_local_compute):  Ditto.\n-\t(df_chain_create_bb):  Ditto.\n+\t(df_urec_bb_local_compute): Ditto.\n+\t(df_chain_create_bb): Ditto.\n \t(df_ur_local_finalize):\tRemoved entry.\n \t(df_urec_init): Ditto.\n \t(df_urec_local_finalize): Ditto.\n@@ -8492,7 +8492,7 @@\n \n 2006-01-22  Zack Weinberg  <zackw@panix.com>\n \n-\t* genautomata.c:  Include vec.h, not varray.h.\n+\t* genautomata.c: Include vec.h, not varray.h.\n \tDelete vla_ptr_t, all of the VLA_PTR_ macros, and all of the\n \tVLA_HWINT_ macros.  Change vla_hwint_t to a typedef for\n \tVEC(vect_el_t,heap) *.  Convert all uses of VLA_* macros to\n@@ -9230,7 +9230,7 @@\n \t(get_nmt_for): Ditto.\n \t(create_global_var):\n \t(is_escape_site): Return an escape_type enumeration.\n-\t* tree-flow-inline.h (is_call_clobbered):  Global var does not\n+\t* tree-flow-inline.h (is_call_clobbered): Global var does not\n \timply call clobbered.\n \t(mark_call_clobbered): Take a reason for marking this. Remove\n \tmarking of globalness, and cache invalidation.\n@@ -9294,7 +9294,7 @@\n \n 2006-01-18  Daniel Berlin  <dberlin@dberlin.org>\n \n-\t* ipa-reference.c (check_operand):  Allow FUNCTION_DECL.\n+\t* ipa-reference.c (check_operand): Allow FUNCTION_DECL.\n \t(look_for_address_of): Ditto.\n \t(ipa_init): Walk the function decls.\n \t(static_execute): Don't set readonly on FUNCTION_DECL's."}, {"sha": "80dfce9b44235724834a9937bfd680307bd4bdc7", "filename": "gcc/ChangeLog-2004", "status": "modified", "additions": 489, "deletions": 489, "changes": 978, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e836620206f1e96d7dac7c3b91c00e01b39e39f3/gcc%2FChangeLog-2004", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e836620206f1e96d7dac7c3b91c00e01b39e39f3/gcc%2FChangeLog-2004", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog-2004?ref=e836620206f1e96d7dac7c3b91c00e01b39e39f3", "patch": "@@ -44,7 +44,7 @@\n \n 2004-12-30  Richard Henderson  <rth@redhat.com>\n \n-\t* config/ia64/ia64.c (hfa_element_mode): Return false for \n+\t* config/ia64/ia64.c (hfa_element_mode): Return false for\n \tzero-sized top-level aggregates.\n \n 2004-12-30  Jan Hubicka  <jh@suse.cz>\n@@ -59,7 +59,7 @@\n \n 2004-12-30  Richard Henderson  <rth@redhat.com>\n \n-\t* config/ia64/ia64.c (ia64_function_value): Use PARALLEL for \n+\t* config/ia64/ia64.c (ia64_function_value): Use PARALLEL for\n \taggregates with XF/XCmode.\n \n 2004-12-29  Richard Henderson  <rth@redhat.com>\n@@ -86,7 +86,7 @@\n \n \t* config/arc/arc.h, config/c4x/c4x.h, config/i386/i386.h,\n \tconfig/i860/i860.h, config/m68hc11/m68hc11.h, config/m68k/m68k.h,\n-\tconfig/pdp11/pdp11.h, config/s390/s390.h, config/stormy16/stormy16.h, \n+\tconfig/pdp11/pdp11.h, config/s390/s390.h, config/stormy16/stormy16.h,\n \tconfig/xtensa/xtensa.h (FUNCTION_ARG_PARTIAL_NREGS): Remove.\n \n \t* config/alpha/alpha.c (alpha_arg_partial_bytes): New.\n@@ -109,7 +109,7 @@\n \t* config/fr30/fr30-protos.h: Update.\n \n \t* config/frv/frv.h (FUNCTION_ARG_PARTIAL_NREGS): Remove.\n-\t* config/frv/frv.c (frv_arg_partial_bytes): Rename from \n+\t* config/frv/frv.c (frv_arg_partial_bytes): Rename from\n \tfrv_function_arg_partial_nregs.  Adjust to return bytes.\n \t(TARGET_ARG_PARTIAL_BYTES): New.\n \t* config/frv/frv-protos.h: Update.\n@@ -145,7 +145,7 @@\n \t* config/mips/mips-protos.h: Update.\n \n \t* config/mn10300/mn10300.h (FUNCTION_ARG_PARTIAL_NREGS): Remove.\n-\t* config/mn10300/mn10300.c (mn10300_arg_partial_bytes): Rename from\t\n+\t* config/mn10300/mn10300.c (mn10300_arg_partial_bytes): Rename from\n \tfunction_arg_partial_nregs.  Adjust to return bytes.\n \t(TARGET_ARG_PARTIAL_BYTES): New.\n \t* config/mn10300/mn10300-protos.h: Update.\n@@ -155,13 +155,13 @@\n \t(TARGET_ARG_PARTIAL_BYTES): New.\n \n \t* config/pa/pa.h (FUNCTION_ARG_PARTIAL_NREGS): Remove.\n-\t* config/pa/pa.c (pa_arg_partial_bytes): Rename from \n+\t* config/pa/pa.c (pa_arg_partial_bytes): Rename from\n \tfunction_arg_partial_nregs.  Handle 32-bit.  Adjust to return bytes.\n \t(TARGET_ARG_PARTIAL_BYTES): New.\n \t* config/pa/pa-protos.h: Update.\n \n \t* config/rs6000/rs6000.h (FUNCTION_ARG_PARTIAL_NREGS): Remove.\n-\t* config/rs6000/rs6000.c (rs6000_arg_partial_bytes): Rename from \n+\t* config/rs6000/rs6000.c (rs6000_arg_partial_bytes): Rename from\n \tfunction_arg_partial_nregs.  Adjust to return bytes.\n \t(TARGET_ARG_PARTIAL_BYTES): New.\n \t* config/rs6000/rs6000-protos.h: Update.\n@@ -204,28 +204,28 @@\n \tPR tree-optimization/18179\n \t* tree-vectorizer.c (vect_get_base_and_offset): Call get_inner_reference\n \tand vect_analyze_offset_expr.\n-\t(vect_create_addr_base_for_vector_ref): Build address_base by combining \n+\t(vect_create_addr_base_for_vector_ref): Build address_base by combining\n \tbase and initial_offset fields of vect_stmt_info.\n \t(vect_update_inits_of_dr): Update offset of data-ref instead of its\n \taccess-fn. Remove argument.\n \t(vect_update_inits_of_drs): Call vect_update_inits_of_dr with new\n \targuments.\n-\t(vect_compute_data_ref_alignment): Check misalignment info in \n+\t(vect_compute_data_ref_alignment): Check misalignment info in\n \tvect_stmt_info. Remove argument.\n \t(vect_compute_data_refs_alignment): Call vect_compute_data_ref_alignment\n \twith correct argument.\n \t(vect_analyze_data_ref_access): Check access info in vect_stmt_info.\n \t(vect_analyze_pointer_ref_access): Update step and initial_offset fields\n \tof vect_stmt_info.\n-\t(vect_get_memtag_and_dr): Call vect_get_base_and_offset and set the \n+\t(vect_get_memtag_and_dr): Call vect_get_base_and_offset and set the\n \tfields of stmt_vec_info.\n-\t(vect_analyze_data_refs): Find vectype and pass it to \n+\t(vect_analyze_data_refs): Find vectype and pass it to\n \tvect_get_memtag_and_dr.\n \t(vect_get_first_index): Remove.\n \t(vect_compute_array_base_alignment): Remove.\n \t(vect_compute_array_ref_alignment): Remove\n \t(vect_create_data_ref_ptr): Use TYPE_SIZE_UNIT instead GET_MODE_SIZE.\n-\t(vect_gen_niters_for_prolog_loop): Use TREE_CONSTANT instead \n+\t(vect_gen_niters_for_prolog_loop): Use TREE_CONSTANT instead\n \thost_integerp.\n \t(vectorizable_load): Use size arithmetics.\n \n@@ -250,7 +250,7 @@\n 2004-12-29  Ira Rosen  <irar@il.ibm.com>\n \n \tPR tree-optimization/18179\n-\t* tree-vectorizer.c (vect_get_symbl_and_dr): Reorganize. Add memtag \n+\t* tree-vectorizer.c (vect_get_symbl_and_dr): Reorganize. Add memtag\n \tretrieval.\n \t(vect_analyze_data_refs): Remove memtag retrieval.\n \n@@ -449,7 +449,7 @@\n \n 2004-12-23  Dale Johannesen  <dalej@apple.com>\n \n-\t* tree.c (iterative_hash_expr):  Canonicalize builtins.\n+\t* tree.c (iterative_hash_expr): Canonicalize builtins.\n \n 2004-12-23  Alexandre Oliva  <aoliva@redhat.com>\n \n@@ -722,7 +722,7 @@\n \n 2004-12-21  David O'Brien  <obrien@FreeBSD.org>\n \n-\t* config/freebsd-spec.h:  Use KSE pthread lib for -pthread.\n+\t* config/freebsd-spec.h: Use KSE pthread lib for -pthread.\n \n 2004-12-21  James A. Morrison  <phython@gcc.gnu.org>\n \n@@ -734,7 +734,7 @@\n \n \tPR c/18596\n \t* c-parse.in (initdcl): Don't process a declaration if start_decl fails.\n-\t(notype_initdcl):  Don't process a declaration if start_decl fails.\n+\t(notype_initdcl): Don't process a declaration if start_decl fails.\n \t* c-decl.c (start_decl): Fail if grokdeclarator fails.\n \t(grokdeclarator): Fail if a function definition has an invalid storage\n \tclass.\n@@ -848,7 +848,7 @@\n \n 2004-12-19  Dale Johannesen  <dalej@apple.com>\n \n-\t* tree-ssa-loop-ivopts.c (contains_abnormal_ssa_name_p):  Don't\n+\t* tree-ssa-loop-ivopts.c (contains_abnormal_ssa_name_p): Don't\n \treference operand 1 of ADDR_EXPRs.\n \n 2004-12-19  Mark Mitchell  <mark@codesourcery.com>\n@@ -1071,7 +1071,7 @@\n \n 2004-12-17  Dale Johannesen  <dalej@apple.com>\n \n-\t* c-decl.c (diagnose_mismatched_decls):  Accept mismatched\n+\t* c-decl.c (diagnose_mismatched_decls): Accept mismatched\n \tfunction types: void with previous implicit int.\n \n 2004-12-17  Andreas Krebbel  <krebbel1@de.ibm.com>\n@@ -2132,7 +2132,7 @@\n \tparameter, this function should never be called if its false.\n \t(append_to_statement_list): Only call append_to_statement_list_1\n \tif t is non-NULL tree with side-effects.\n-\t(append_to_statement_list_force):  Likewise, if t is not NULL.\n+\t(append_to_statement_list_force): Likewise, if t is not NULL.\n \n 2004-12-06  J\"orn Rennecke <joern.rennecke@st.com>\n \n@@ -3918,7 +3918,7 @@\n 2004-11-22  Roger Sayle  <roger@eyesopen.com>\n \n \t* config/i386/i386.h (TARGET_USE_FANCY_MATH_387): New macro.\n-\t* config/i386/i386.c (override_options):  Set MASK_NO_FANCY_MATH_387\n+\t* config/i386/i386.c (override_options): Set MASK_NO_FANCY_MATH_387\n \tautomatically for targets without TARGET_80387.\n \t* config/i386/i386.md (sqrtsf2, sqrtsf2_1, sqrtsf2_i387, sqrtdf2,\n \tsqrtdf2_1, sqrtdf2_i387, *sqrtextendsfdf2, sqrtxf2,\n@@ -3943,7 +3943,7 @@\n \n 2004-11-22  Dale Johannesen  <dalej@apple.com>\n \n-\t* config/darwin.h (JUMP_TABLES_IN_TEXT_SECTION):  Conditionalize\n+\t* config/darwin.h (JUMP_TABLES_IN_TEXT_SECTION): Conditionalize\n \tproperly and comment.\n \n 2004-11-22  James A. Morrison  <phython@gcc.gnu.org\n@@ -4322,7 +4322,7 @@\n \n 2004-11-21  Dale Johannesen  <dalej@apple.com>\n \n-\t* config/darwin.h (JUMP_TABLES_IN_TEXT_SECTION):  Define.\n+\t* config/darwin.h (JUMP_TABLES_IN_TEXT_SECTION): Define.\n \n 2004-11-21  Jeff Law  <law@redhat.com>\n \n@@ -4953,11 +4953,11 @@\n \n 2004-11-15  Dale Johannesen  <dalej@apple.com>\n \n-\t* tree-flow.h (add_referenced_temp_var):  Remove name from prototype.\n+\t* tree-flow.h (add_referenced_temp_var): Remove name from prototype.\n \n 2004-11-15  Dale Johannesen  <dalej@apple.com>\n \n-\t* profile.c (compute_branch_probabilities):  Prevent\n+\t* profile.c (compute_branch_probabilities): Prevent\n \tcrash with EH in RTL-based profiling.\n \n 2004-11-16  Kazu Hirata  <kazu@cs.umass.edu>\n@@ -5020,7 +5020,7 @@\n \n 2004-11-15  Steve Ellcey  <sje@cup.hp.com>\n \n-\t* config/ia64/ia64.md (*movtf_internal):  Use destination_operand\n+\t* config/ia64/ia64.md (*movtf_internal): Use destination_operand\n \tinstead of nonimmediate_operand.\n \n 2004-11-15  Mark Mitchell <mark@codesourcery.com>\n@@ -6720,7 +6720,7 @@\n \tfor a basic block.\n \t(perform_edge_inserts): New.  Determine what to do with all stmts that\n \thave been inserted on edges.\n-\t(remove_ssa_form):  Analyze and commit edges from here.\n+\t(remove_ssa_form): Analyze and commit edges from here.\n \n 2004-11-01  Andrew Pinski  <pinskia@physics.uc.edu>\n \n@@ -7803,7 +7803,7 @@\n 2004-10-23  Andrew Pinski  <pinskia@physics.uc.edu>\n \n \tPR middle-end/17967\n-\t* tree-cfg.c (remove_usless_stmts_cond):  Don't Fold statement.\n+\t* tree-cfg.c (remove_usless_stmts_cond): Don't Fold statement.\n \n 2004-10-23  Daniel Berlin  <dberlin@dberlin.org>\n \n@@ -8518,7 +8518,7 @@\n \n 2004-10-16  Dale Johannesen  <dalej@apple.com>\n \n-\t* c-common.c (c_common_get_alias_set):  Use GGC for type_hash_table.\n+\t* c-common.c (c_common_get_alias_set): Use GGC for type_hash_table.\n \n 2004-10-16  Zdenek Dvorak  <dvorakz@suse.cz>\n \n@@ -8607,8 +8607,8 @@\n \t2004-10-14  Andrew Pinski  <pinskia@physics.uc.edu>\n \tPR middle-end/17967\n \tRevert:\n-\t\t* tree-cfg.c (remove_usless_stmts_cond):  Fold statement.\n-\t\t(remove_useless_stmts_1):  Fold trees we know how to fold.\n+\t\t* tree-cfg.c (remove_usless_stmts_cond): Fold statement.\n+\t\t(remove_useless_stmts_1): Fold trees we know how to fold.\n \n 2004-10-14  David Edelsohn  <edelsohn@gnu.org>\n \n@@ -8689,8 +8689,8 @@\n \n \tPR middle-end/17967\n \tRevert:\n-\t\t* tree-cfg.c (remove_usless_stmts_cond):  Fold statement.\n-\t\t(remove_useless_stmts_1):  Fold trees we know how to fold.\n+\t\t* tree-cfg.c (remove_usless_stmts_cond): Fold statement.\n+\t\t(remove_useless_stmts_1): Fold trees we know how to fold.\n \n 2004-10-14  Joseph S. Myers  <joseph@codesourcery.com>\n \n@@ -8881,7 +8881,7 @@\n \n 2004-10-13  Dale Johannesen  <dalej@apple.com>\n \n-\t* doc/extend.texi (Extended Asm):  Rewrite asm volatile description.\n+\t* doc/extend.texi (Extended Asm): Rewrite asm volatile description.\n \n 2004-10-13  Frank Ch. Eigler  <fche@redhat.com>\n \n@@ -9630,7 +9630,7 @@\n \tof the ADDR_EXPR changed, check the field changed.\n \tUse recompute_tree_invarant_for_addr_expr instead of unsetting\n \tTREE_INVARIANT.\n-\t(convert_local_reference):  Set changed to when we\n+\t(convert_local_reference): Set changed to when we\n \tchange a decl to unnested decl.\n \t<case ADDR_EXPR>: Instead of checking if the immediate part\n \tof the ADDR_EXPR changed, check the field changed.\n@@ -10095,7 +10095,7 @@\n \t* c-decl.c (c_expand_body): Update call tree_rest_of_compilation.\n \t* cgraphunit.c (cgraph_build_static_cdtor): Likewise.\n \t* toplev.h (tree_rest_of_compilation): Update prototype.\n-\t* tree-optimize.c (tree_rest_of_compilation):  Kill nested_p argument.\n+\t* tree-optimize.c (tree_rest_of_compilation): Kill nested_p argument.\n \n 2004-10-01  Kazu Hirata  <kazu@cs.umass.edu>\n \n@@ -10257,7 +10257,7 @@\n \tPR debug/13974\n \t* cfgrtl.c (try_redirect_by_replacing_jump,\n \tforce_nonfallthru_and_redirect, commit_one_edge_insertion,\n-\tcfg_layout_merge_blocks):  Do not attach any line number information\n+\tcfg_layout_merge_blocks): Do not attach any line number information\n \tto newly inserted instructions.\n \t* emit-rtl.c (emit_insn*_before, emit_insn*_after): Rename to\n \temit_insn_*_noloc.\n@@ -10487,7 +10487,7 @@\n \n 2004-09-28 Jeff Law  <law@redhat.com>\n \n-\t* tree-ssa-threadupdate.c (create_block_for_threading):  Request\n+\t* tree-ssa-threadupdate.c (create_block_for_threading): Request\n \tthat no outgoing edges be left in the duplicate block.  Do no\n \tupdate information on outgoing edges or PHI nodes in target\n \tblocks here.\n@@ -11239,8 +11239,8 @@\n \n 2004-09-25  Dale Johannesen  <dalej@apple.com>\n \n-\t* tree-gimple.c:  Move GIMPLE definition...\n-\t* doc/tree-ssa.texi:  here.\n+\t* tree-gimple.c: Move GIMPLE definition...\n+\t* doc/tree-ssa.texi: here.\n \n 2004-09-25  Kazu Hirata  <kazu@cs.umass.edu>\n \n@@ -11479,7 +11479,7 @@\n \n \t* tree-ssa-ccp.c (get_default_value): Use SSA_NAME_VALUE rather\n \tthan SSA_NAME_EQUIV and SET_SSA_NAME_EQUIV.\n-\t(substitute_and_fold):  Likewise.\n+\t(substitute_and_fold): Likewise.\n \t* tree-ssa-dom.c (tree_ssa_dominator_optimize): Remove everything\n \texcept invariants from SSA_NAME_VALUE.\n \t(thread_across_edge): Use SSA_NAME_VALUE rather than SSA_NAME_EQUIV\n@@ -11492,7 +11492,7 @@\n \t* tree-ssa-pre.c (fini_pre): Remove everything except invariants\n \tfrom SSA_NAME_VALUE.\n \t* tree.h (SSA_NAME_EQUIV, SET_SSA_NAME_EQUIV): Kill.\n-\t(struct tree_ssa_name):  Kill EQUIV field.  Remove GGC skip\n+\t(struct tree_ssa_name): Kill EQUIV field.  Remove GGC skip\n \tannotation from the VALUE_HANDLE field.\n \n 2004-09-21 Fariborz Jahanian <fjahanian@apple.com>\n@@ -11991,7 +11991,7 @@\n \tnestedness datastructure.\n \t* cse.c (cse_insn): Do not cprop nonlocal LABEL_REFs.\n \t* reload1.c (set_label_offsets): Fix call of set_label_offsets.\n-\t* tree-nested.c (finlize_nesting_tree_1):  Use un-nesting code.\n+\t* tree-nested.c (finlize_nesting_tree_1): Use un-nesting code.\n \n 2004-09-20  Richard Henderson  <rth@redhat.com>\n \n@@ -12009,7 +12009,7 @@\n \t(tree_bb_level_predictions): Likewise.\n \t(tree_estimate_probability): Add noreturn exit edges; call\n \tbb_level_predictions; fix logic of return heuristics.\n-\t(predict_paths_leading_to):  Rescuesce from old CVS version of\n+\t(predict_paths_leading_to): Rescuesce from old CVS version of\n \tprocess_note_prediction function.\n \t* predict.def (PRED_TREE_EARLY_RETURN): New predictor.\n \n@@ -12131,7 +12131,7 @@\n \n 2004-09-18  Jan Hubicka  <jh@suse.cz>\n \n-\t* tree-cfg.c (thread_jumps):  Fix updating of the profile.\n+\t* tree-cfg.c (thread_jumps): Fix updating of the profile.\n \n \t* tree-optimize.c (tree_rest_of_compilation): Kill forgotten\n \tverify_cgraph call.\n@@ -12180,7 +12180,7 @@\n \n 2004-09-18  Jan Hubicka  <jh@suse.cz>\n \n-\t* tree-into-ssa.c (rewrite_ssa_into_ssa):  Expect ssa_name to return\n+\t* tree-into-ssa.c (rewrite_ssa_into_ssa): Expect ssa_name to return\n \tNULL.\n \t* tree-ssa-alias.c (init_alias_info): Likewise.\n \t* tree-ssa.c (verify_flow_sensitive_alias_info): Likewise.\n@@ -12501,7 +12501,7 @@\n \n 2004-09-16  Daniel Berlin  <dberlin@dberlin.org>\n \n-\t* cfgloop.h (duplicate_loop):  Add prototype.\n+\t* cfgloop.h (duplicate_loop): Add prototype.\n \t* cfgloopmanip.c (duplicate_loop): Make non-static.\n \t* lambda-code.c (perfect_nestify): Factor out test whether\n \twe can handle this loop into separate function.\n@@ -12762,7 +12762,7 @@\n 2004-09-15  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>\n \n \tPR tree-optimization/17468\n-\t* tree-ssa.c (verify_use, verify_phi_args, verify_ssa):  Verify that\n+\t* tree-ssa.c (verify_use, verify_phi_args, verify_ssa): Verify that\n \tdefinition inside a block precede uses.\n \t* tree-tailcall.c (adjust_return_value): Emit statements in the\n \tcorrect order.\n@@ -14746,7 +14746,7 @@\n \n 2004-09-07  Jan Hubicka  <jh@suse.cz>\n \n-\t* cse.c (fold_rtx):  Avoid building of\n+\t* cse.c (fold_rtx): Avoid building of\n \t(CONST (MINUS (CONST_INT) (SYMBOL_REF)))\n \n \t* tree-ssa-pre.c (grand_bitmap_obstack): New.\n@@ -14771,7 +14771,7 @@\n \n 2004-09-07  Caroline Tice  <ctice@apple.com>\n \n-\t* cfgrtl.c (rtl_verify_flow_info_1):  Add new edge flag,\n+\t* cfgrtl.c (rtl_verify_flow_info_1): Add new edge flag,\n \tEDGE_CROSSING, to flags test case.\n \n 2004-09-07  Jan Hubicka  <jh@suse.cz>\n@@ -15155,12 +15155,12 @@\n \n 2004-09-04  Jan Hubicka  <jh@suse.cz>\n \n-\t* passes.c (rest_of_clean_state):  Fix merge conflict made during\n+\t* passes.c (rest_of_clean_state): Fix merge conflict made during\n \tcommiting the patch.\n \n 2004-09-04  Jan Hubicka  <jh@suse.cz>\n \n-\t* passes.c (rest_of_clean_state):  Decompose the instruction stream.\n+\t* passes.c (rest_of_clean_state): Decompose the instruction stream.\n \n 2004-09-04  Richard Sandiford  <rsandifo@redhat.com>\n \n@@ -15729,7 +15729,7 @@\n \tpointer to a mult_cost.  Update all cost comparisons to use the\n \tnew mult_cost infrastructure.  For alg_add_factor and\n \talg_sub_factor operations, latency is lower than the rtx_cost.\n-\t(choose_mult_variant):  Update calls to synth_mult.  Perform\n+\t(choose_mult_variant): Update calls to synth_mult.  Perform\n \tcost comparisons using the new mult_cost infrastructure.\n \t(expand_mult_highpart): Use alg.cost.cost instead of alg.cost\n \tto optain the total rtx_cost of a synth_mult \"algorithm\".\n@@ -16168,11 +16168,11 @@\n \t* bb-reorder.c (FREE, find_traces_1_round, copy_bb,\n \tmark_bb_for_unlikely_executed_section,\n \tadd_labels_and_missing_jumps, fix_crossing_conditional_branches,\n-\tfix_crossing_unconditional_branches):  Likewise.\n+\tfix_crossing_unconditional_branches): Likewise.\n \t* bitmap.c (bitmap_first_set_bit, bitmap_last_set_bit,\n-\tbitmap_operation):  Likewise.\n+\tbitmap_operation): Likewise.\n \t* bt-load.c (insn_sets_btr_p, augment_live_range,\n-\tmove_btr_def):  Likewise.\n+\tmove_btr_def): Likewise.\n \t* builtins.c (c_readstr, expand_builtin_longjmp, apply_args_size,\n \tapply_result_size, expand_builtin_apply, expand_builtin_mathfn,\n \texpand_builtin_mathfn_2, expand_builtin_mathfn_3,\n@@ -16820,21 +16820,21 @@\n \n 2004-08-25  Caroline Tice  <ctice@apple.com>\n \n-\t* bb-reorder.c (partition_hot_cold_basic_blocks):  Add more details\n+\t* bb-reorder.c (partition_hot_cold_basic_blocks): Add more details\n \tto comments at start of function.\n-\t* cfgbuild.c (make_edges):  Add more details to hot/cold partitioning\n+\t* cfgbuild.c (make_edges): Add more details to hot/cold partitioning\n \tcomment.\n \t* cfgcleanup.c (try_simplify_condjump, try_forward_edges,\n \tmerge_blocks_move_predecessor_nojumps,\n \tmerge_blocks_move_successor_nojumps, merge_blocks_move,\n \ttry_crossjump_to_edge, try_crossjump_bb): Likewise.\n \t* cfglayout.c (fixup_reorder_chain): Likewise.\n \t* cfgrtl.c (rtl_can_merge_blocks, try_redirect_by_replacing_jump,\n-\tcfg_layout_can_merge_blocks_p):  Likewise.\n+\tcfg_layout_can_merge_blocks_p): Likewise.\n \t* ifcvt.c (find_if_case_1, find_if_case_2): Likewise.\n \t* passes.c (rest_of_compilation): Update comments for calling\n \toptimization that partitions hot/cold basic blocks.\n-\t* doc/invoke.texi:  Update documentation of\n+\t* doc/invoke.texi: Update documentation of\n \tfreorder-blocks-and-partition flag.\n \n 2004-08-25  Richard Sandiford  <rsandifo@redhat.com>\n@@ -17124,7 +17124,7 @@\n \tscev_initialize): Use single_exit information.\n \t* tree-ssa-loop-niter.c (number_of_iterations_cond): Record\n \tmissing assumptions.\n-\t(loop_niter_by_eval):  Return number of iterations as unsigned\n+\t(loop_niter_by_eval): Return number of iterations as unsigned\n \tint.\n \t* tree-ssa-loop.c (tree_ssa_loop_init): Mark single exit loops.\n \t(tree_ssa_loop_ivcanon, gate_tree_ssa_loop_ivcanon, pass_iv_canon,\n@@ -18044,7 +18044,7 @@\n \n 2004-08-19  Caroline Tice  <ctice@apple.com>\n \n-\t* config/i386/cygming.h (switch_to_section):  Fix typo (change\n+\t* config/i386/cygming.h (switch_to_section): Fix typo (change\n \tin_unlikely_text_section to in_unlikely_executed_text).\n \n 2004-08-19  Daniel Berlin  <dberlin@dberlin.org>\n@@ -18183,7 +18183,7 @@\n \n \t* Makefile.in (cfganal.o): Depend on TIMEVAR_H.\n \t* tree-flow.h (compute_dominance_frontiers): Move prototype...\n-\t* basic-block.h:  ...here.\n+\t* basic-block.h: ...here.\n \t* tree-cfg.c (compute_dominance_frontiers_1,\n \tcompute_dominance_frontiers): Move from here...\n \t* cfganal.c: ...to here.  Include timevar.h.\n@@ -18514,13 +18514,13 @@\n \tunlikely_text_section_name if necessary; modify to use\n \tunlikely_text_section_name and unlikely_section_label; also to use\n \tnamed_section properly.\n-\t(in_unlikely_text_section):  Modify to work correctly with\n+\t(in_unlikely_text_section): Modify to work correctly with\n \tnamed_section and to use unlikely_text_section_name.\n-\t(named_section):  Add code to work properly with cold section.\n+\t(named_section): Add code to work properly with cold section.\n \t(function_section): Clean up if-statement.\n \t* config/darwin.c (darwin_asm_named_section): Return to original\n \tcode, removing use of SECTION_FORMAT_STRING.\n-\t* config/arm/pe.h (switch_to_section):  Add case for\n+\t* config/arm/pe.h (switch_to_section): Add case for\n \tin_unlikely_executed_text to switch statement.\n \t* config/i386/cygming.h (switch_to_section): Likewise.\n \t* config/i386/darwin.h (NORMAL_TEXT_SECTION_NAME): Remove.\n@@ -19457,7 +19457,7 @@\n \n 2004-08-12  David Daney  <ddaney@avtrex.com>\n \n-\t* java/gcj.texi:  Add subsection on signal usage.\n+\t* java/gcj.texi: Add subsection on signal usage.\n \n 2004-08-12  David Edelsohn  <edelsohn@gnu.org>\n \n@@ -19891,7 +19891,7 @@\n \n \t* varasm.c (unlikely_section_label): New global variable.\n \t(unlikely_text_section_name): New global variable.\n-\t(text_section):  Remove alignment statement.\n+\t(text_section): Remove alignment statement.\n \t(unlikely_text_section): Remove alignment statement; use\n \tunlikely_section_label rather than hard-coded string.\n \t(assemble_start_function): Initialize unlikely_section_label and\n@@ -20657,7 +20657,7 @@\n \n 2004-08-03  Dale Johannesen  <dalej@apple.com>\n \n-\t* config/rs6000/rs6000.c (machopic_output_stub):  Align Darwin stubs.\n+\t* config/rs6000/rs6000.c (machopic_output_stub): Align Darwin stubs.\n \t* c-common.c: Include opts.h.\n \t(c_common_get_alias_set): Fix check for a single input file.\n \t* toplev.c: Remove current_file_decl.\n@@ -22883,12 +22883,12 @@\n \n \t* loop-init.c (loop_optimizer_init, loop_optimizer_finalize): Do not\n \tdestroy dominance information.\n-\t* passes.c (rest_of_handle_loop2):  Free dominance information.\n+\t* passes.c (rest_of_handle_loop2): Free dominance information.\n \t* tree-cfg.c (cleanup_tree_cfg): Remove unreachable blocks before\n \tjump threading.\n \t(thread_jumps): Update dominance information and remove unreachable\n \tblocks.\n-\t* tree-ssa-phiopt.c (replace_phi_with_stmt):  Update dominance\n+\t* tree-ssa-phiopt.c (replace_phi_with_stmt): Update dominance\n \tinformation and remove the unreachable block.\n \n 2004-07-17  Graham Stott  <graham.stott@btinternet.com>\n@@ -23305,10 +23305,10 @@\n \n 2004-07-14  Per Bothner\t <per@bothner.com>\n \n-\t* input.h:  If USE_MAPPED_LOCATION, define separate expanded_location\n+\t* input.h: If USE_MAPPED_LOCATION, define separate expanded_location\n \tstructure with extra column field.\n-\t* tree.c (expand_location):  Also fill in column field.\n-\t* gengtype-lex.l:  Ignore expanded_location typedef, sinze gengtype\n+\t* tree.c (expand_location): Also fill in column field.\n+\t* gengtype-lex.l: Ignore expanded_location typedef, sinze gengtype\n \tgets confused by the two conditionally-compiled definitions.\n \n 2004-07-14  Eric Christopher  <echristo@redhat.com>\n@@ -23346,10 +23346,10 @@\n \n 2004-07-14  Per Bothner  <per@bothner.com>\n \n-\t* c-typeck.c (emit_side_effect_warnings):  Use EXPR_HAS_LOCATION\n+\t* c-typeck.c (emit_side_effect_warnings): Use EXPR_HAS_LOCATION\n \tinstead of EXPR_LOCUS in a boolean context, which is always true\n \tif --enable-mapped-location.\n-\t* stmt.c (warn_if_unused_value):  Likewise.  Also use EXPR_LOCATION.\n+\t* stmt.c (warn_if_unused_value): Likewise.  Also use EXPR_LOCATION.\n \n 2004-07-14  Richard Henderson  <rth@redhat.com>\n \n@@ -23645,7 +23645,7 @@\n \n 2004-07-13  Per Bothner  <per@bothner.com>\n \n-\t* collect2.c (main):  Handle --no-demangle and --demangle flags.\n+\t* collect2.c (main): Handle --no-demangle and --demangle flags.\n \n 2004-07-13  Sebastian Pop  <pop@cri.ensmp.fr>\n \n@@ -23943,7 +23943,7 @@\n \n \t* fold-const.c (fold) <PLUS_EXPR>: Canonicalize X + -C as X - C for\n \tfloating point additions, to keep real immediate constant positive.\n-\t<MINUS_EXPR>:  For floating point subtractions, only transform X - -C\n+\t<MINUS_EXPR>: For floating point subtractions, only transform X - -C\n \tinto X + C, and leave positive real constants as X - C.\n \n 2004-07-11  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n@@ -23970,7 +23970,7 @@\n \tis ignored.\n \t(fold_convert): Call fold_ignored_result when casting a value\n \tto VOID_TYPE.\n-\t(omit_one_operand):  Call fold_ignored_result on the \"omitted\"\n+\t(omit_one_operand): Call fold_ignored_result on the \"omitted\"\n \toperand when building a COMPOUND_EXPR.\n \t(pedantic_omit_one_operand): Likewise.\n \t* tree.h (fold_ignored_result): Prototype here.\n@@ -24086,13 +24086,13 @@\n \n 2004-07-11  Phil Edwards  <phil@codesourcery.com>\n \n-\t* configure.ac:  Alphabetize --enable-checking list, add\n+\t* configure.ac: Alphabetize --enable-checking list, add\n \tmissing valgrind entry.\n-\t* configure:  Regenerate.\n+\t* configure: Regenerate.\n \n 2004-07-11  Phil Edwards  <phil@codesourcery.com>\n \n-\t* doc/install.texi (Testing):  Fix syntax in \"make check\" example.\n+\t* doc/install.texi (Testing): Fix syntax in \"make check\" example.\n \n 2004-07-10  James E Wilson  <wilson@specifixinc.com>\n \n@@ -24834,7 +24834,7 @@\n \t(simplify_builtin_strcy, simplify_builtin_strncpy): Delete.\n \t(simplify_builtin_fputs): Rename to fold_builtin_fputs.  Change\n \ttypes of \"ignore\" and \"unlocked\" parameters to bool.\n-\t(fold_builtin_1):  Add additional ignore argument.  Call renamed\n+\t(fold_builtin_1): Add additional ignore argument.  Call renamed\n \tfold_builtin_fputs to simplify GCC \"fputs\" and \"fputs_unlocked\"\n \tbuiltins.  Update arguments to fold_builtin_strncpy and\n \tfold_builtin_strcpy.  Add function prototype.\n@@ -24851,7 +24851,7 @@\n \t(fold_builtin): Update function prototype with new \"bool ignore\".\n \n \t* tree-ssa-ccp.c (ccp_fold): Update call to fold_builtin.\n-\t(ccp_fold_builtin):  Update call to fold_builtin.  Call\n+\t(ccp_fold_builtin): Update call to fold_builtin.  Call\n \tfold_builtin_fputs, fold_builtin_strcpy and fold_builtin_strncpy\n \tinstead of simplify_builtin_fputs, simplify_builtin_strcpy and\n \tsimplify_builtin_strncpy respectively.\n@@ -25534,7 +25534,7 @@\n \n 2004-07-07  Per Bothner  <per@bothner.com>\n \n-\t* flow.c (attempt_auto_inc):  Remove now-redundant PUT_CODE.\n+\t* flow.c (attempt_auto_inc): Remove now-redundant PUT_CODE.\n \n 2004-07-07  Mike Stump  <mrs@apple.com>\n \n@@ -26671,7 +26671,7 @@\n \n 2004-07-01  Per Bothner  <per@bothner.com>\n \n-\t* final.c (final):  Fix typo reported by Aaron W. LaFramboise.\n+\t* final.c (final): Fix typo reported by Aaron W. LaFramboise.\n \n 2004-07-01  Jakub Jelinek  <jakub@redhat.com>\n \n@@ -27099,94 +27099,94 @@\n 2004-06-30  Per Bothner  <per@bothner.com>\n \n \tConditionally compile support for --enable-mapped_location.\n-\t* input.h:  #include line-map.h for source_location typedef.\n+\t* input.h: #include line-map.h for source_location typedef.\n \t(BUILTINS_LOCATION, UNKNOWN_LOCATION, expand_location,\n-\tLOCATION_FILE, LOCATION_LINE):  New macros and functions.\n-\t(expanded_location, source_locus):  New typedefs.\n-\t(push_srcloc):  Change parameter list if USE_MAPPED_LOCATION.\n-\t* rtl.def (NOTE, ASM_OPERANDS):  Modify specifcation, if\n+\tLOCATION_FILE, LOCATION_LINE): New macros and functions.\n+\t(expanded_location, source_locus): New typedefs.\n+\t(push_srcloc): Change parameter list if USE_MAPPED_LOCATION.\n+\t* rtl.def (NOTE, ASM_OPERANDS): Modify specifcation, if\n \tUSE_MAPPED_LOCATION.\n-\t* rtl.h (NOTE_DELETED_LABEL_NAME):  New macro.\n+\t* rtl.h (NOTE_DELETED_LABEL_NAME): New macro.\n \t(NOTE_SOURCE_LOCATION, NOTE_EXPNDED_LOCATION, SET_INSN_DELETED):\n \tNew conditional macros.\n-\t(ASM_OPERANDS_SOURCE_FILE, ASM_OPERANDS_SOURCE_LINE):  Replace\n+\t(ASM_OPERANDS_SOURCE_FILE, ASM_OPERANDS_SOURCE_LINE): Replace\n \tby ASM_OPERANDS_SOURCE_LOCATION if USE_MAPPED_LOCATION.\n \t* tree.h (EXPR_LOCATION, SET_EXPR_LOCATION, EXPR_HAS_LOCATION,\n \tEXPR_LOCUS, SET_EXPR_LOCUS, EXPR_FILENAME, EXPR_LINENO,\n-\tDECL_IS_BUILTIN):  New macros, most depending on USE_MAPPED__LOCATION.\n-\t(tree_exp):  Change type of locus to use new source_locus typedef.\n-\t* tree.c (build1_stat):  Use SET_EXPR_LOCATION.\n-\t(annotate_with_locus, annotate_with_file_line):  Conditionalize.\n-\t(expand_location):  New function.\n-\t* toplev.c (unknown_location):  New static, when USE_MAPPED_LOCATION.\n-\t(push_srcloc, pop_loc):  Adjust parameter handling.\n-\t(process_options):  Don't set input_filename by itself.\n-\t(lang_dependent_init):  Save, set input_location to <built-in>.\n-\t(warn_deprecated_use):  Use expand_location.\n-\n-\t* basic-block.h (struct edge_def):  Use new source_locus typedef.\n-\t* c-common.c (fname_decl):  Update save/clear/store of input_location.\n-\t(c_do_switch_warnings):  Update for USE_MAPPED_LOCATION case.\n-\t* c-decl.c:  Likewise.\n-\t* c-dump.c (dump_stmt):  Likewise.\n-\t* c-gimplify.c (c-gimplify.c):  Generalize using SET_EXPR_LOCATION.\n-\t* c-lex.c (cb_line_change):  If USE_MAPPED_LOCATION use token's\tsrc_loc\n+\tDECL_IS_BUILTIN): New macros, most depending on USE_MAPPED__LOCATION.\n+\t(tree_exp): Change type of locus to use new source_locus typedef.\n+\t* tree.c (build1_stat): Use SET_EXPR_LOCATION.\n+\t(annotate_with_locus, annotate_with_file_line): Conditionalize.\n+\t(expand_location): New function.\n+\t* toplev.c (unknown_location): New static, when USE_MAPPED_LOCATION.\n+\t(push_srcloc, pop_loc): Adjust parameter handling.\n+\t(process_options): Don't set input_filename by itself.\n+\t(lang_dependent_init): Save, set input_location to <built-in>.\n+\t(warn_deprecated_use): Use expand_location.\n+\n+\t* basic-block.h (struct edge_def): Use new source_locus typedef.\n+\t* c-common.c (fname_decl): Update save/clear/store of input_location.\n+\t(c_do_switch_warnings): Update for USE_MAPPED_LOCATION case.\n+\t* c-decl.c: Likewise.\n+\t* c-dump.c (dump_stmt): Likewise.\n+\t* c-gimplify.c (c-gimplify.c): Generalize using SET_EXPR_LOCATION.\n+\t* c-lex.c (cb_line_change): If USE_MAPPED_LOCATION use token's\tsrc_loc\n \tto set input_location direction, rather than using linemap_lookup.\n-\t(fe_file_change, cb_def_pragma):  Again use source_location directly.\n-\t* c-opts.c (saved_lineno):  Remove static variable.\n-\t(c_common_post_options, c_common_init):  Don't bothner to save,\n+\t(fe_file_change, cb_def_pragma): Again use source_location directly.\n+\t* c-opts.c (saved_lineno): Remove static variable.\n+\t(c_common_post_options, c_common_init): Don't bothner to save,\n \tclear and restore input_Location - now handled by lang_dependent_init.\n-\t* function.c (init_function_start):  Use new DECL_IS_BUILTIN macro.\n-\t* xcoffout.c (xcoff_assign_fundamental_type_number):  Likewise.\n-\t* tree-mudflap.c (mf_file_function_line_tree):  Take a location_t\n+\t* function.c (init_function_start): Use new DECL_IS_BUILTIN macro.\n+\t* xcoffout.c (xcoff_assign_fundamental_type_number): Likewise.\n+\t* tree-mudflap.c (mf_file_function_line_tree): Take a location_t\n \trather than a pointer to one.  Use expand_location.\n-\t(mf_varname_tree):  Use expand_location.\n-\t* tree-dump.c:  Use expand_location on DECL_SOURCE_LOCATION.\n-\t* coverage.c:  Likewise.\n-\t* print-tree.c:  Likewise.\n-\t* c-aux-info.c (gen_aux_info_record):  Likewise.\n-\t* c-parse.in:  Use SET_EXPR_LOCATION macro.\n-\t* gimple-low.c:  Likewise.\n-\t* tree-mudflap.c:  Likewise.\n-\t* gimplify.c:  Likewise.  Also use EXPR_LOCATION and EXPR_HAS_LOCATION.\n-\t* c-ppoutput.c:  Use new source_location typedef instead of fileline.\n-\t* c-semantics.c:  Use new macros.\n-\t* c-typeck.c:  Likewise.\n-\t* cfgexpand.c:  Handle USE_MAPPED_LOCATION case for function_end_locus.\n-\t* cfglayout.c (insn_locators_initialize):  Const cleanup.  New macros.\n-\t* cfgrtl.c (delete_insn):  Use new NOTE_DELETED_LABEL_NAME macro.\n-\t* print-rtl.c (print_rtx):  Likewise.\n-\t* emit-rtl.c:  Don't clear NOTE_SOURCE_FILE if USE_MAPPED_LOCATION.\n-\t* combine.c:  Use new SET_INSN_DELETED macro.\n-\t* flow.c:  Likewise.\n-\t* haifa-sched.c:  Likewise.\n-\t* ifcvt.c:  Likewise.\n-\t* recog.c:  Likewise.\n-\t* reload1.c:  Likewise.\n-\t* diagnostic.c:  Use expand_location macro.\n-\t* pretty-print.c (pp_base_format_text):  Likewise.\n-\t* profile.c:  Likewise.\n- \t* dwarf2out.c:  Likewise.  Also use expand_location, DECL_IS_BUILTIN.\n- \t* dwarf2out.c (dwarf2out_decl:  Use BUILTINS_LOCATION.\n-\t* emit-rtl.c (emit_line_note):  Simplify if USE_MAPPED_LOCATION.\n-\t(force_next_line_note, insn_emit):  Handle USE_MAPPED_LOCATION case.\n-\t* final.c (final):  Likewise.\n-\t* haifa-sched.c:  Likewise.\n-\t* integrate.c:  Likewise.\n-\t* jump.c:  Likewise.\n-\t* rtl-error.c:  Likewise.\n-\t* stmt.c (check_seenlabel):  Likewise.\n-\t* tree-pretty-print.c:  Likewise.\n-\t* gengtype-lex.l:  Temporary kludge to avoid duplicate typedef.\n-\t* gengtype.c:  Update for now typdefs in input.h.  More kludges.\n-\t* modulo-sched.c (sms_schedule):  Use NOTE_EXPANDED_LOCATION macro.\n-\t* ra-debug.c (ra_print_rtl):  Likewise.\n-\t* sched-rgn.c:  Likewise.\n-\t* sched-vis.c:  Likewise.\n-\t* rtl.h (gen_rtx_ASM_OPERANDS):  Redefine if USE_MAPPED_LOCATION.\n-\t* stmt.c (expand_asm_operands):  Adjust calls to gen_rtx_ASM_OPERANDS.\n-\t* tree-cfg.c:  Use new macros and typedefs.\n-\t* tree-flow-inline.h:  Likewise.\n+\t(mf_varname_tree): Use expand_location.\n+\t* tree-dump.c: Use expand_location on DECL_SOURCE_LOCATION.\n+\t* coverage.c: Likewise.\n+\t* print-tree.c: Likewise.\n+\t* c-aux-info.c (gen_aux_info_record): Likewise.\n+\t* c-parse.in: Use SET_EXPR_LOCATION macro.\n+\t* gimple-low.c: Likewise.\n+\t* tree-mudflap.c: Likewise.\n+\t* gimplify.c: Likewise.  Also use EXPR_LOCATION and EXPR_HAS_LOCATION.\n+\t* c-ppoutput.c: Use new source_location typedef instead of fileline.\n+\t* c-semantics.c: Use new macros.\n+\t* c-typeck.c: Likewise.\n+\t* cfgexpand.c: Handle USE_MAPPED_LOCATION case for function_end_locus.\n+\t* cfglayout.c (insn_locators_initialize): Const cleanup.  New macros.\n+\t* cfgrtl.c (delete_insn): Use new NOTE_DELETED_LABEL_NAME macro.\n+\t* print-rtl.c (print_rtx): Likewise.\n+\t* emit-rtl.c: Don't clear NOTE_SOURCE_FILE if USE_MAPPED_LOCATION.\n+\t* combine.c: Use new SET_INSN_DELETED macro.\n+\t* flow.c: Likewise.\n+\t* haifa-sched.c: Likewise.\n+\t* ifcvt.c: Likewise.\n+\t* recog.c: Likewise.\n+\t* reload1.c: Likewise.\n+\t* diagnostic.c: Use expand_location macro.\n+\t* pretty-print.c (pp_base_format_text): Likewise.\n+\t* profile.c: Likewise.\n+\t* dwarf2out.c: Likewise.  Also use expand_location, DECL_IS_BUILTIN.\n+\t* dwarf2out.c (dwarf2out_decl: Use BUILTINS_LOCATION.\n+\t* emit-rtl.c (emit_line_note): Simplify if USE_MAPPED_LOCATION.\n+\t(force_next_line_note, insn_emit): Handle USE_MAPPED_LOCATION case.\n+\t* final.c (final): Likewise.\n+\t* haifa-sched.c: Likewise.\n+\t* integrate.c: Likewise.\n+\t* jump.c: Likewise.\n+\t* rtl-error.c: Likewise.\n+\t* stmt.c (check_seenlabel): Likewise.\n+\t* tree-pretty-print.c: Likewise.\n+\t* gengtype-lex.l: Temporary kludge to avoid duplicate typedef.\n+\t* gengtype.c: Update for now typdefs in input.h.  More kludges.\n+\t* modulo-sched.c (sms_schedule): Use NOTE_EXPANDED_LOCATION macro.\n+\t* ra-debug.c (ra_print_rtl): Likewise.\n+\t* sched-rgn.c: Likewise.\n+\t* sched-vis.c: Likewise.\n+\t* rtl.h (gen_rtx_ASM_OPERANDS): Redefine if USE_MAPPED_LOCATION.\n+\t* stmt.c (expand_asm_operands): Adjust calls to gen_rtx_ASM_OPERANDS.\n+\t* tree-cfg.c: Use new macros and typedefs.\n+\t* tree-flow-inline.h: Likewise.\n \n 2004-06-30  Richard Sandiford  <rsandifo@redhat.com>\n \t    Eric Christopher  <echristo@redhat.com>\n@@ -27341,7 +27341,7 @@\n \n 2004-06-29  Per Bothner  <per@bothner.com>\n \n-\t* config/i386/winnt.c (i386_pe_encode_section_info):  Smash rtlname's\n+\t* config/i386/winnt.c (i386_pe_encode_section_info): Smash rtlname's\n \tXSTR in place, so we don't lose SYMBOL_REF_DECL info.\n \n 2004-06-29  Zack Weinberg  <zack@codesourcery.com>\n@@ -28588,9 +28588,9 @@\n \tPR target/15551\n \t* config/i386/i386.md: Change UNSPEC_STACK_PROBE to UNSPECV_STACK_PROBE.\n \t(allocate_stack_worker): Make unspec_volatile.\n-\t(allocate_stack_worker_rex64):  Likewise.\n-\t(allocate_stack_worker_postreload):  Likewise.\n-\t(allocate_stack_worker_rex64_postreload):  Likewise.\n+\t(allocate_stack_worker_rex64): Likewise.\n+\t(allocate_stack_worker_postreload): Likewise.\n+\t(allocate_stack_worker_rex64_postreload): Likewise.\n \n 2004-06-21  Daniel Berlin  <dberlin@dberlin.org>\n \n@@ -29217,74 +29217,74 @@\n \n 2004-06-17  Andrew MacLeod  <amacleod@redhat.com>\n \n-\t* tree-cfg.c (tree_make_forwarder_block):  Use SET_PHI_RESULT.\n-\t* tree-flow-inline.h (get_use_op_ptr):  Return a use_operand_p.\n-\t(get_use_from_ptr, get_def_from_ptr):  New.  Return operand pointers.\n-\t(get_def_op_ptr):  Return a def_operand_p instead of a 'tree *'.\n-\t(get_v_may_def_result_ptr):  Return a def_operand_p.\n-\t(get_v_may_def_op_ptr, get_vuse_op_ptr):   Return a use_operand_p.\n-\t(get_v_must_def_op_ptr):  Return a def_operand_p.\n-\t(get_phi_result_ptr):  New.  Return a pointer to the result of a PHI.\n-\t(get_phi_arg_def_ptr):  New.  Return a pointer to an argument of a PHI.\n-\t(phi_element_for_edge):  Remove.\n-\t* tree-flow.h (propagate_value, replace_exp):  Change prototype.\n-\t(propagate_tree_value):  Add new prototype.\n-\t(phi_element_for_edge):  Remove prototype.\n-\t* tree-into-ssa.c (mark_def_sites):  Use new operand types.\n-\t(prepare_operand_for_rename):  Split into two functions.\n-\t(prepare_use_operand_for_rename):  Prepare use operands.\n-\t(prepare_def_operand_for_rename):  Prepare def operands.\n-\t(rewrite_stmt):  Use new operand types.\n-\t(rewrite_operand):  Use new operand types, change parameter type.\n-\t* tree-outof-ssa.c (replace_variable):  Split into two functions.\n-\t(replace_use_variable):  Rewrite uses.\n-\t(replace_def_variable):  Rewrite defs.\n-\t(rewrite_trees, rewrite_vars_out_of_ssa):  Use new operand types.\n-\t* tree-phinodes.c (make_phi_node, resize_phi_node):  Use new types.\n-\t(add_phi_arg, remove_phi_arg_num):  Use new operand types.\n-\t* tree-ssa-ccp.c (substitute_and_fold):  Use new operand types.\n-\t(ccp_fold, replace_uses_in):  Use new operand types.\n-\t* tree-ssa-copy.c (replace_ssa_names):  Rename to replace_ssa_names_ann\n+\t* tree-cfg.c (tree_make_forwarder_block): Use SET_PHI_RESULT.\n+\t* tree-flow-inline.h (get_use_op_ptr): Return a use_operand_p.\n+\t(get_use_from_ptr, get_def_from_ptr): New.  Return operand pointers.\n+\t(get_def_op_ptr): Return a def_operand_p instead of a 'tree *'.\n+\t(get_v_may_def_result_ptr): Return a def_operand_p.\n+\t(get_v_may_def_op_ptr, get_vuse_op_ptr): Return a use_operand_p.\n+\t(get_v_must_def_op_ptr): Return a def_operand_p.\n+\t(get_phi_result_ptr): New.  Return a pointer to the result of a PHI.\n+\t(get_phi_arg_def_ptr): New.  Return a pointer to an argument of a PHI.\n+\t(phi_element_for_edge): Remove.\n+\t* tree-flow.h (propagate_value, replace_exp): Change prototype.\n+\t(propagate_tree_value): Add new prototype.\n+\t(phi_element_for_edge): Remove prototype.\n+\t* tree-into-ssa.c (mark_def_sites): Use new operand types.\n+\t(prepare_operand_for_rename): Split into two functions.\n+\t(prepare_use_operand_for_rename): Prepare use operands.\n+\t(prepare_def_operand_for_rename): Prepare def operands.\n+\t(rewrite_stmt): Use new operand types.\n+\t(rewrite_operand): Use new operand types, change parameter type.\n+\t* tree-outof-ssa.c (replace_variable): Split into two functions.\n+\t(replace_use_variable): Rewrite uses.\n+\t(replace_def_variable): Rewrite defs.\n+\t(rewrite_trees, rewrite_vars_out_of_ssa): Use new operand types.\n+\t* tree-phinodes.c (make_phi_node, resize_phi_node): Use new types.\n+\t(add_phi_arg, remove_phi_arg_num): Use new operand types.\n+\t* tree-ssa-ccp.c (substitute_and_fold): Use new operand types.\n+\t(ccp_fold, replace_uses_in): Use new operand types.\n+\t* tree-ssa-copy.c (replace_ssa_names): Rename to replace_ssa_names_ann\n \tand no longer set the value, change parameter type.\n-\t(replace_exp_1):  Use new operand types.\n-\t(propagate_value):  Change parameter type, use new operand types.\n-\t(propagate_tree_value):  Propagate_value without SSA operands.\n-\t(replace_exp, cprop_operand, cprop_into_stmt):  Use new operand types.\n-\t(cprop_into_successor_phis):  Use new operand types.\n-\t* tree-ssa-dom.c (thread_across_edge):  Use new operand types.\n-\t(eliminate_redundant_computations):  Use new operand types.\n-\t* tree-ssa-dse.c (fix_phi_uses):  Use new operand_types.\n-\t(fix_stmt_v_may_defs):  Use new operand_types.\n-\t* tree-ssa-live.c (create_ssa_var_map):  Use new operand_types.\n-\t(build_tree_conflict_graph):  Use new operand_types.\n-\t* tree-ssa-loop.c (duplicate_blocks):  Use PHI_ARG_DEF_FROM_EDGE.\n-\t* tree-ssa-operands.c (struct freelist_d):  Remove.\n-\t(check_optype_freelist, add_optype_freelist):  Remove.\n+\t(replace_exp_1): Use new operand types.\n+\t(propagate_value): Change parameter type, use new operand types.\n+\t(propagate_tree_value): Propagate_value without SSA operands.\n+\t(replace_exp, cprop_operand, cprop_into_stmt): Use new operand types.\n+\t(cprop_into_successor_phis): Use new operand types.\n+\t* tree-ssa-dom.c (thread_across_edge): Use new operand types.\n+\t(eliminate_redundant_computations): Use new operand types.\n+\t* tree-ssa-dse.c (fix_phi_uses): Use new operand_types.\n+\t(fix_stmt_v_may_defs): Use new operand_types.\n+\t* tree-ssa-live.c (create_ssa_var_map): Use new operand_types.\n+\t(build_tree_conflict_graph): Use new operand_types.\n+\t* tree-ssa-loop.c (duplicate_blocks): Use PHI_ARG_DEF_FROM_EDGE.\n+\t* tree-ssa-operands.c (struct freelist_d): Remove.\n+\t(check_optype_freelist, add_optype_freelist): Remove.\n \t(allocate_def_optype, allocate_use_optype, allocate_v_may_def_optype,\n-\tallocate_vuse_optype, allocate_v_must_def_optype):  Call ggc_alloc.\n+\tallocate_vuse_optype, allocate_v_must_def_optype): Call ggc_alloc.\n \t(free_uses, free_defs, free_vuses, free_v_may_defs, free_v_must_defs):\n \tCall ggc_free instead of add_optype_freelist.\n-\t(init_ssa_operands, fini_ssa_operands):  Remove free list code.\n-\t(finalize_ssa_defs, finalize_ssa_uses):  Set new use/def operands.\n-\t* tree-ssa-operands.h (struct def_optype_d):  Change underlying type.\n-\t(struct use_optype_d):  Change underlying type.\n-\t(def_operand_p, use_operand_p):  New types for pointers to operands.\n+\t(init_ssa_operands, fini_ssa_operands): Remove free list code.\n+\t(finalize_ssa_defs, finalize_ssa_uses): Set new use/def operands.\n+\t* tree-ssa-operands.h (struct def_optype_d): Change underlying type.\n+\t(struct use_optype_d): Change underlying type.\n+\t(def_operand_p, use_operand_p): New types for pointers to operands.\n \t(USE_OP, DEF_OP, V_MAY_DEF_RESULT, V_MAY_DEF_OP, VUSE_OP,\n-\tV_MUST_DEF_OP):  Use new pointer type instead of dereferencing directly.\n-\t(USE_FROM_PTR, DEF_FROM_PTR):  New macros to \"dereference\" operand\n+\tV_MUST_DEF_OP): Use new pointer type instead of dereferencing directly.\n+\t(USE_FROM_PTR, DEF_FROM_PTR): New macros to \"dereference\" operand\n \tpointer types.\n-\t(SET_USE, SET_DEF):  New macros to set operands from their pointer.\n+\t(SET_USE, SET_DEF): New macros to set operands from their pointer.\n \t(SET_USE_OP, SET_DEF_OP, SET_V_MAY_DEF_RESULT, SET_V_MAY_DEF_OP,\n \tSET_VUSE_OP, SET_V_MUST_DEF_OP): New SET routines for operands.\n-\t(PHI_RESULT_PTR, PHI_RESULT, SET_PHI_RESULT):  Macros to manage the\n+\t(PHI_RESULT_PTR, PHI_RESULT, SET_PHI_RESULT): Macros to manage the\n \tPHI result as an operand.\n \t(PHI_ARG_DEF_PTR, PHI_ARG_DEF, SET_PHI_ARG_DEF, PHI_ARG_DEF_FROM_EDGE,\n-\tPHI_ARG_DEF_PTR_FROM_EDGE):  Macros to manage the PHI arguments.\n-\t* tree-ssa-pre.c (eliminate):  Call propagate_tree_value.\n-\t* tree-tailcall.c (independent_of_stmt_p, propagate_through_phis):  Use\n+\tPHI_ARG_DEF_PTR_FROM_EDGE): Macros to manage the PHI arguments.\n+\t* tree-ssa-pre.c (eliminate): Call propagate_tree_value.\n+\t* tree-tailcall.c (independent_of_stmt_p, propagate_through_phis): Use\n \tPHI_ARG_DEF_FROM_EDGE.\n-\t* tree.h (PHI_RESULT):  Renamed to PHI_RESULT_TREE.\n-\t(PHI_ARG_DEF):  Renamed to PHI_ARG_DEF_TREE.\n+\t* tree.h (PHI_RESULT): Renamed to PHI_RESULT_TREE.\n+\t(PHI_ARG_DEF): Renamed to PHI_ARG_DEF_TREE.\n \n 2004-06-17  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>\n \n@@ -29326,7 +29326,7 @@\n \n 2004-06-17  Daniel Berlin  <dberlin@dberlin.org>\n \n-\t* tree-ssa-pre.c:  Update comments.\n+\t* tree-ssa-pre.c: Update comments.\n \t(val_expr_pair_eq): Factor code from here.\n \t(expr_pred_trans_eq): and here.\n \t(expressions_equal_p): To here.\n@@ -29414,7 +29414,7 @@\n \n 2004-06-16  Ulrich Weigand  <uweigand@de.ibm.com>\n \n-\t* config/s390/s390.c (struct machine_function):  New member\n+\t* config/s390/s390.c (struct machine_function): New member\n \tlast_restore_gpr.\n \t(s390_frame_info): Add BASE_USED and RETURN_ADDR_USED parameters.\n \tDo not modify machine->save_return_addr_p or regs_ever_live.\n@@ -29475,7 +29475,7 @@\n \t(udivmodhi4, divmodhi4): Use mvz to zero extend arg for\n \tdivide.\n \t(iorsi3, xorsi3, andsi3): Use bitfield instructions if possible.\n-\t* config/m68k/m68k.c(valid_mov3q_const):  New function.\n+\t* config/m68k/m68k.c(valid_mov3q_const): New function.\n \t(const_method): SWAP is valid for ColdFire.\n \t(MULL_COST, MULW_COST): Fix costs for ColdFire V3/V4.\n \t* config/m68k/m68k-protos.h (valid_mov3q_const): Prototype here.\n@@ -30895,7 +30895,7 @@\n \n 2004-06-08  Per Bothner  <per@bothner.com>\n \n-\t* configure.ac:  New --enable-mapped-location sets USE_MAPPED_LOCATION.\n+\t* configure.ac: New --enable-mapped-location sets USE_MAPPED_LOCATION.\n \n 2004-06-08  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n@@ -31295,7 +31295,7 @@\n \t(resource.o, regrename.o, insn-conditions.o, insn-emit.o,\n \tinsn-recog.o): Replace resource.h with RESOURCE_H.\n \t(ddg.o, modulo-sched.o, haifa-sched.o, sched-deps.o, sched-rgn.o,\n-\tsched-ebb.o, sched-vis.o, out_object_file):  Replace sched-int.h\n+\tsched-ebb.o, sched-vis.o, out_object_file): Replace sched-int.h\n \twith SCHED_INT_H.\n \t(web.o, lcm.o, df.o, ra.o, ra-build.o, ra-colorize.o, ra-debug.o,\n \tra-rewrite.o): Replace df.h with DF_H.\n@@ -31308,11 +31308,11 @@\n \t* ddg.h: Include sbitmap.h, basic-block.h, df.h.\n \t* df.h: Add include guard.  Include bitmap.h, sbitmap.h,\n \tbasic-block.h.\n-\t* genconditions.c:  Remove reload.h.\n+\t* genconditions.c: Remove reload.h.\n \t* ra.h: Add include guard.  Include bitmap.h, sbitmap.h,\n \thard-reg-set.h, insn-modes.h.\n \t* resource.h: Add include guard.  Include hard-reg-set.h.\n-\t* sched-int.h:  Add include guard.  Include insn-attr.h,\n+\t* sched-int.h: Add include guard.  Include insn-attr.h,\n \tbasic-block.h, rtl.h.\n \t* target.h: Add include guard.  Include insn-modes.h.\n \t* tree-ssa-live.h: Include partition.h.\n@@ -31364,7 +31364,7 @@\n \n 2004-06-02  Jan Hubicka  <jh@suse.cz>\n \n-\t* tree-cfg.c (tree_find_edge_insert_loc):  Allow inserting before\n+\t* tree-cfg.c (tree_find_edge_insert_loc): Allow inserting before\n \treturn_stmt.\n \n 2004-06-02  Jason Merrill  <jason@redhat.com>\n@@ -31447,7 +31447,7 @@\n 2004-06-01  Peter Barada  <peter@the-baradas.com>\n \t    Peter Jakubek  <peter@laseranimation.com>\n \n-\t* config/m68k/m68k.c(m68k_output_mi_thunk):  For ColdFire, use %d0 as\n+\t* config/m68k/m68k.c(m68k_output_mi_thunk): For ColdFire, use %d0 as\n \ta scratch to perform an add to memory.\n \n 2004-06-01  Bernardo Innocenti  <bernie@develer.com>\n@@ -31854,7 +31854,7 @@\n \n 2004-05-27  Jan Hubicka  <jh@suse.cz>\n \n-\t* cfgbuild.c (control_flow_insn_p):  Notice noreturn call\n+\t* cfgbuild.c (control_flow_insn_p): Notice noreturn call\n \n 2004-05-27  Paolo Bonzini  <bonzini@gnu.org>\n \n@@ -31921,12 +31921,12 @@\n \n 2004-05-26  Jan Hubicka  <jh@suse.cz>\n \n-\t* cfgcleanup.c (try_forward_edges):  Do not check loop structure when\n+\t* cfgcleanup.c (try_forward_edges): Do not check loop structure when\n \tnot loop optimizing.\n \n 2004-05-26  Jan Hubicka  <jh@suse.cz>\n \n-\t* except.c (can_throw_internal):  Notice RESX instructions.\n+\t* except.c (can_throw_internal): Notice RESX instructions.\n \n 2004-05-26  Eric Botcazou  <ebotcazou@act-europe.fr>\n \n@@ -31976,7 +31976,7 @@\n \n 2004-05-25  Jan Hubicka  <jh@suse.cz>\n \n-\t* builtins.def (__builtin_expect):  Mark the function as const&nothrow.\n+\t* builtins.def (__builtin_expect): Mark the function as const&nothrow.\n \n 2004-05-25  Ayal Zaks  <zaks@il.ibm.com>\n \tMostafa Hagog  <mustafa@il.ibm.com>\n@@ -32453,7 +32453,7 @@\n 2004-05-19  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>\n \n \tPR c++/15463\n-\t* loop-iv.c (iv_number_of_iterations):  Use trunc_int_for_mode on\n+\t* loop-iv.c (iv_number_of_iterations): Use trunc_int_for_mode on\n \tresult of inverse.\n \n \tPR rtl-optimization/15274\n@@ -32697,7 +32697,7 @@\n \n 2004-05-16  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n \n-\t* pa.md:  Fix typo from last change.  Remove DFmode move to and from\n+\t* pa.md: Fix typo from last change.  Remove DFmode move to and from\n \tSAR register.\n \n 2004-05-16  Richard Earnshaw  <rearnsha@arm.com>\n@@ -32902,7 +32902,7 @@\n \t* target-def.h (TARGET_ALIGN_ANON_BITFIELD): Define.\n \t(TARGET_INITIALIZER): Use it.\n \t* target.h (struct gcc_target): Add align_anon_bitfield.\n-\t* config/arm/arm.c (arm_align_anon_bitfield):  New function.\n+\t* config/arm/arm.c (arm_align_anon_bitfield): New function.\n \t(TARGET_ALIGN_ANON_BITFIELD): Define.\n \t* doc/tm.texi: Document TARGET_ALIGN_ANON_BITFIELD.\n \n@@ -33521,7 +33521,7 @@\n \t(emit_move_insn_1): Don't generate inline warnings.\n \t(expand_vars, expand_var): Split from ...\n \t(expand_expr_1): ... here.\n-\t(expand_expr_real, expand_expr_real_1):  Use new macros\n+\t(expand_expr_real, expand_expr_real_1): Use new macros\n \tEXPR_LOCATION and EXPR_HAS_LOCATION.\n \t* expr.h (simplify_builtin_fputs,\n \tsimplify_builtin_strcpy, simplify_builtin_strncpy,\n@@ -33723,7 +33723,7 @@\n \tDo rtl-based profiling only when\n \t!flag_tree_based_profiling.  Register rtl-based profiling\n \thooks.\n-\t* predict.c:  Include tree-flow.h, ggc.h, tree-dump.h\n+\t* predict.c: Include tree-flow.h, ggc.h, tree-dump.h\n \t(predicted_by_p): Rename to ...\n \t(rtl_predicted_by_p): .. this one; make global\n \t(tree_predicted_by_p): New.\n@@ -34652,7 +34652,7 @@\n \n \t* vmsdbgout.c (vms_func_node, vms_func_ref): New.\n \t(func_table): Change type from char ** to vms_func_ref.\n-\t(write_rtnbeg):  Update to reflect func_table change.  Use\n+\t(write_rtnbeg): Update to reflect func_table change.  Use\n \tfde->funcdef_number instead of rtnnum in output.\n \t(write_rtnend, vmxdbgout_begin_function, vmsdbgout_init): Likewise.\n \n@@ -35441,35 +35441,35 @@\n \n 2004-04-22  Per Bothner  <per@bothner.com>\n \n-\t* line-map.h (struct line_maps):  New field highest_line.\n-\t(linemap_position_for_column):  Make non-inline function.\n-\t(LINEMAP_POSITION_FOR_COLUMN):  New macro.\n-\t* line-map.c (linemap_init):  Clear highest_line field.\n-\t(linemap_add):  Set highest_line field.\n-\t(linemap_line_start):  Minor optimization - use highest_line field.\n+\t* line-map.h (struct line_maps): New field highest_line.\n+\t(linemap_position_for_column): Make non-inline function.\n+\t(LINEMAP_POSITION_FOR_COLUMN): New macro.\n+\t* line-map.c (linemap_init): Clear highest_line field.\n+\t(linemap_add): Set highest_line field.\n+\t(linemap_line_start): Minor optimization - use highest_line field.\n \tReduce maximum column hint to 10000.  Update highest_line field.\n-\t(linemap_position_for_column):  Moved from line-map.h.  Optimize a bit.\n-\t* cpphash.h (struct cpp_reader):  Remove line field - instead use\n+\t(linemap_position_for_column): Moved from line-map.h.  Optimize a bit.\n+\t* cpphash.h (struct cpp_reader): Remove line field - instead use\n \tline_table->highest_line.\n-\t(saved_line):  Remove unused field.\n-\t(CPP_INCREMENT_FILE):  Don't do linemap_lookup - just use newest map.\n+\t(saved_line): Remove unused field.\n+\t(CPP_INCREMENT_FILE): Don't do linemap_lookup - just use newest map.\n \tUse  line_table's highest_line field instead of cpp_reader's line.\n-\t* cpplib.c (start_directive):  Likewise use highest_line field.\n-\t(do_line, do_linemarker):  Likewise just use newest map.\n-\t(_cpp_do_file_change):  Don't need to set cpp_reader's line field.\n-\t* cpperror.c (cpp_error):  Likewise use highest_line field.\n-\t* cppfiles.c (open_file_failed:  Likewise.\n-\t(cpp_make_system_header):  Likewise use newest map and highest_line.\n-\t* cppinit.c (cpp_create_reader):  Don't initialize removed field.\n+\t* cpplib.c (start_directive): Likewise use highest_line field.\n+\t(do_line, do_linemarker): Likewise just use newest map.\n+\t(_cpp_do_file_change): Don't need to set cpp_reader's line field.\n+\t* cpperror.c (cpp_error): Likewise use highest_line field.\n+\t* cppfiles.c (open_file_failed: Likewise.\n+\t(cpp_make_system_header): Likewise use newest map and highest_line.\n+\t* cppinit.c (cpp_create_reader): Don't initialize removed field.\n \t* cpplex.c (_cpp_process_line_notes, _cpp_skip_block_comment,\n \tskip_line_comment, skip_whitespace, _cpp_get_fresh_line,\n-\t_cpp_lex_direct):  Likewise use highest_line.\n-\t(_cpp_lex_direct):  Use new LINEMAP_POSITION_FOR_COLUMN macro.\n-\t* cppmacro.c (_cpp_builtin_macro_text):  Likewise use highest_line,\n+\t_cpp_lex_direct): Likewise use highest_line.\n+\t(_cpp_lex_direct): Use new LINEMAP_POSITION_FOR_COLUMN macro.\n+\t* cppmacro.c (_cpp_builtin_macro_text): Likewise use highest_line,\n \tand use newest map.\n-\t* cpppch.c (cpp_read_state):  Don't save+restore cpp_reader's line.\n-\t* cpptrad.c (_cpp_overlay_buffer):  Don't save cpp_reader's line.\n-\t(copy_comment, _cpp_scan_out_logical_line):  Likewise use highest_line.\n+\t* cpppch.c (cpp_read_state): Don't save+restore cpp_reader's line.\n+\t* cpptrad.c (_cpp_overlay_buffer): Don't save cpp_reader's line.\n+\t(copy_comment, _cpp_scan_out_logical_line): Likewise use highest_line.\n \n 2004-04-23  Alan Modra  <amodra@bigpond.net.au>\n \n@@ -35486,7 +35486,7 @@\n \n 2004-04-22  Per Bothner  <per@bothner.com>\n \n-\t* cppinit.c (cpp_read_main_file):  Return NULL rather than false.\n+\t* cppinit.c (cpp_read_main_file): Return NULL rather than false.\n \tFixes PR preprocessor/15067.\n \n 2004-04-23  Andreas Schwab  <schwab@suse.de>\n@@ -36119,7 +36119,7 @@\n \n 2004-04-11  Roger Sayle  <roger@eyesopen.com>\n \n-\t* fold-const.c (fold_binary_op_with_conditional_arg):  Tweak\n+\t* fold-const.c (fold_binary_op_with_conditional_arg): Tweak\n \tcalling convention to allow a NULL_TREE to be returned.  Factor\n \tsanity checks from callers, return NULL_TREE when appropriate.\n \t(fold): Handle COMPOUND_EXPR operands of binary expressions\n@@ -36129,7 +36129,7 @@\n \n 2004-04-11  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n-\t* config/mips/iris5.h (current_section_flags):  Add\n+\t* config/mips/iris5.h (current_section_flags): Add\n \tin_unlikely_executed_text and default case.\n \n 2004-04-11  Andreas Tobler  <a.tobler@schweiz.ch>\n@@ -36195,13 +36195,13 @@\n \n 2004-04-09  Caroline Tice  <ctice@apple.com>\n \n-\t* basic-block.h (struct edge_def):  Add new field, crossing_edge.\n-\t(struct basic_block_def):  Add new field, partition.\n-\t(UNPARTITIONED, HOT_PARTITION, COLD_PARTITION):  New constant macro\n+\t* basic-block.h (struct edge_def): Add new field, crossing_edge.\n+\t(struct basic_block_def): Add new field, partition.\n+\t(UNPARTITIONED, HOT_PARTITION, COLD_PARTITION): New constant macro\n \tdefinitions.\n \t(partition_hot_cold_basic_blocks): Add extern function\n \tdeclaration.\n-\t* bb-reorder.c (function.h, obstack.h, expr.h, regs.h):  Add four new\n+\t* bb-reorder.c (function.h, obstack.h, expr.h, regs.h): Add four new\n \tinclude\tstatements.\n \t(N_ROUNDS): Increase the maximum number of rounds by 1.\n \t(branch_threshold): Add array value for new round.\n@@ -36218,17 +36218,17 @@\n \t(fix_crossing_unconditional_branches): New function.\n \t(fix_edges_for_rarely_executed_code): New function.\n \t(partition_hot_cold_basic_blocks): New function.\n-\t(find_traces):  Add an extra round for partitioning hot/cold\n+\t(find_traces): Add an extra round for partitioning hot/cold\n \tbasic blocks.\n \t(find_traces_1_round): Add a parameter.  Modify to push all cold blocks,\n \tand only cold blocks, into the last (extra) round of collecting traces.\n \t(better_edge_p): Add a parameter.  Modify to favor non-crossing edges\n \tover crossing edges.\n-\t(bb_to_key):  Add code to correctly identify cold blocks when\n+\t(bb_to_key): Add code to correctly identify cold blocks when\n \tdoing partitioning.\n \t(connect_traces): Modify to connect all the non-cold traces first, then\n \tgo back and connect up all the cold traces.\n-\t(reorder_basic_blocks):  Add call to add_unlikely_executed_notes.\n+\t(reorder_basic_blocks): Add call to add_unlikely_executed_notes.\n \t* cfg.c (entry_exit_blocks): Add initialization for partition field in\n \tentry and exit blocks.\n \t* cfgbuild.c (make_edges): Update current_function_has_computed_jump\n@@ -36248,33 +36248,33 @@\n \t* cfghooks.c (tidy_fallthru_edges): Modify to not remove indirect\n \tjumps that cross section boundaries.\n \t* cfglayout.c (flags.h): Add new include statement.\n-\t(update_unlikely_executed_notes):  New function.\n-\t(fixup_reorder_chain):  Add code so when a new jumping basic block is\n+\t(update_unlikely_executed_notes): New function.\n+\t(fixup_reorder_chain): Add code so when a new jumping basic block is\n \tadded, it's UNLIKELY_EXECUTED_CODE and REG_CROSSING_JUMP notes are\n \tupdated appropriately.\n-\t(duplicate_insn_chain):  Add code to duplicate the new NOTE insn\n+\t(duplicate_insn_chain): Add code to duplicate the new NOTE insn\n \tintroduced by this optimization.\n-\t* cfglayout.h (scan_ahead_for_unlikely_executed_note):  Add new\n+\t* cfglayout.h (scan_ahead_for_unlikely_executed_note): Add new\n \textern function declaration.\n-\t* cfgrtl.c (can_delete_note_p):  Add NOTE_INSN_UNLIKELY_EXECUTED_CODE to\n+\t* cfgrtl.c (can_delete_note_p): Add NOTE_INSN_UNLIKELY_EXECUTED_CODE to\n \tlist of notes that can be deleted.\n-\t(create_basic_block_structure):  Add initialization for partition field.\n-\t(rtl_can_merge_blocks):  Modify to test blocks for jumps that cross\n+\t(create_basic_block_structure): Add initialization for partition field.\n+\t(rtl_can_merge_blocks): Modify to test blocks for jumps that cross\n \tsection boundaries.\n-\t(try_redirect_by_replacing_jump):  Modify to not attempt on jumps that\n+\t(try_redirect_by_replacing_jump): Modify to not attempt on jumps that\n \tcross section boundaries.\n \t(commit_one_edge_insertion): Add code so newly created basic block\n \tends up in correct (hot or cold) section.  Modify to disallow\n \tinsertions before NOTE_INSN_UNLIKELY_EXECUTED_CODE notes.\n-\t(rtl_verify_flow_info_1):  Add code to verify that no fall_thru edge\n+\t(rtl_verify_flow_info_1): Add code to verify that no fall_thru edge\n \tcrosses section boundaries.\n \t(cfg_layout_can_merge_blocks_p): Modify to test blocks for jumps that\n \tcross section boundaries.\n \t(force_nonfallthru_and_redirect): Modify to make sure new basic block\n \tends up in correct section, with correct notes attached.\n-\t* common.opt (freorder-blocks-and-partition):  Add new flag for this\n+\t* common.opt (freorder-blocks-and-partition): Add new flag for this\n \toptimization.\n-\t* dbxout.c (dbx_function_end):  Add code to make sure scope labels at\n+\t* dbxout.c (dbx_function_end): Add code to make sure scope labels at\n \tthe end of functions are written into the correct (hot or cold)\n \tsection.\n \t(dbx_source_file): Add code so writing debug file information\n@@ -36287,14 +36287,14 @@\n \tconditional branches can span all of memory.\n \t(HAS_LONG_UNCOND_BRANCH): New constant macro, indicationg whether or not\n \tunconditional branches can span all of memory.\n-\t* final.c (scan_ahead_for_unlikely_executed_note):  New function.\n-\t(final_scan_insn):  Add code to check for NOTE instruction indicating\n+\t* final.c (scan_ahead_for_unlikely_executed_note): New function.\n+\t(final_scan_insn): Add code to check for NOTE instruction indicating\n \twhether basic block belongs in hot or cold section, and to make sure\n \tthe current basic block is being written to the appropriate section.\n \tAlso added code to ensure that jump table basic blocks end up in the\n \tcorrect section.\n-\t* flags.h (flag_reorder_blocks_and_partition):  New flag.\n-\t* ifcvt.c (find_if_case_1):  Modify to not attempt if conversion if\n+\t* flags.h (flag_reorder_blocks_and_partition): New flag.\n+\t* ifcvt.c (find_if_case_1): Modify to not attempt if conversion if\n \tone of the branches has a jump that crosses between sections.\n \t(find_if_case_2): Likewise.\n \t(ifcvt): Modify to not attempt to mark loop exit edges after\n@@ -36306,60 +36306,60 @@\n \tflag_reorder_blocks_and_partition.\n \t* output.h (unlikely_text_section): New extern function declaration.\n \t(in_unlikely_text_section): New extern function declaration.\n-\t* passes.c (rest_of_handle_stack_regs):  Add\n+\t* passes.c (rest_of_handle_stack_regs): Add\n \tflag_reorder_blocks_and_partition as an 'or' condition for calling\n \treorder_basic_blocks.\n-\t(rest_of_handle_reorder_blocks):  Add flag_reorder_blocks_and_partition\n+\t(rest_of_handle_reorder_blocks): Add flag_reorder_blocks_and_partition\n \tas an 'or' condition for calling reorder_basic_blocks.\n-\t(rest_of_compilation):  Add call to partition_hot_cold_basic_blocks.\n+\t(rest_of_compilation): Add call to partition_hot_cold_basic_blocks.\n \t* print-rtl.c (print_rtx): Add code for handling new note,\n \tNOTE_INSN_UNLIKELY_EXECUTED_CODE\n \t* rtl.c  (NOTE_INSN_UNLIKELY_EXECUTED_CODE): New note insn (see below).\n \t(REG_CROSSING_JUMP): New kind of reg_note, to mark jumps that\n \tcross between section boundaries.\n-\t* rtl.h (NOTE_INSN_UNLIKELY_EXECUTED_CODE):  New note instruction,\n+\t* rtl.h (NOTE_INSN_UNLIKELY_EXECUTED_CODE): New note instruction,\n \tindicating the basic block containing it belongs in the cold section.\n \t(REG_CROSSING_JUMP): New type of reg_note, to mark jumps that cross\n \tbetween hot and cold sections.\n-\t* toplev.c (flag_reorder_blocks_and_partition):  Add code to\n+\t* toplev.c (flag_reorder_blocks_and_partition): Add code to\n \tinitialize this flag, and to tie it to the command-line option\n \tfreorder-blocks-and-partition.\n-\t* varasm.c (cfglayout.h):  Add new include statement.\n-\t(unlikely_section_label_printed):  New global variable, used for\n+\t* varasm.c (cfglayout.h): Add new include statement.\n+\t(unlikely_section_label_printed): New global variable, used for\n \tdetermining when to output section name labels for cold sections.\n-\t(in_section):  Add in_unlikely_executed_text to enum data structure.\n-\t(text_section):  Modify code to use SECTION_FORMAT_STRING and\n+\t(in_section): Add in_unlikely_executed_text to enum data structure.\n+\t(text_section): Modify code to use SECTION_FORMAT_STRING and\n \tNORMAL_TEXT_SECTION_NAME macros.\n-\t(unlikely_text_section):  New function.\n-\t(in_unlikely_text_section):  New function.\n-\t(function_section):  Add code to make sure beginning of function is\n+\t(unlikely_text_section): New function.\n+\t(in_unlikely_text_section): New function.\n+\t(function_section): Add code to make sure beginning of function is\n \twritten into correct section (hot or cold).\n-\t(assemble_start_function):  Add code to make sure stuff is written to\n+\t(assemble_start_function): Add code to make sure stuff is written to\n \tthe correct section.\n-\t(assemble_zeros):  Add in_unlikely_text_section as an 'or' condition\n+\t(assemble_zeros): Add in_unlikely_text_section as an 'or' condition\n \tto an if statement that was checking 'in_text_section'.\n-\t(assemble_variable):  Add 'in_unlikely_text_section' as an 'or'\n+\t(assemble_variable): Add 'in_unlikely_text_section' as an 'or'\n \tcondition to an if statement that was checking 'in_text_section'.\n-\t(default_section_type_flags_1):  Add check: if in cold section\n+\t(default_section_type_flags_1): Add check: if in cold section\n \tflags = SECTION_CODE.\n-\t* config/darwin.c (darwin_asm_named_section):  Modify to use\n+\t* config/darwin.c (darwin_asm_named_section): Modify to use\n \tSECTION_FORMAT_STRING if we are partitioning hot/cold blocks.\n \t* config/i386/i386.h (HAS_LONG_COND_BRANCH): Defined this macro\n \tspecifically for the i386.\n-\t(HAS_LONG_UNCOND_BRANCH):  Defined this macro specifically for the i386.\n+\t(HAS_LONG_UNCOND_BRANCH): Defined this macro specifically for the i386.\n \t* config/rs6000/darwin.h (UNLIKELY_EXECUTED_TEXT_SECTION_NAME): Change\n \ttext string to something more informative.\n \t(NORMAL_TEXT_SECTION_NAME): Add new definition.\n-\t(SECTION_FORMAT_STRING):  Add new definition.\n-\t* config/rs6000/rs6000.c (rs6000_assemble_integer):  Add\n+\t(SECTION_FORMAT_STRING): Add new definition.\n+\t* config/rs6000/rs6000.c (rs6000_assemble_integer): Add\n \t'!in_unlikely_text_section' as an 'and' condition to an if statement\n \tthat was already checking '!in_text_section'.\n \t* config/rs6000/sysv4.h (HOT_TEXT_SECTION_NAME,NORMAL_TEXT_SECTION_NAME,\n \tUNLIKELY_EXECUTED_TEXT_SECTION_NAME,SECTION_FORMAT_STRING): Make\n \tsure these are properly defined for linux on ppc.\n \t* doc/invoke.texi  (freorder-blocks-and-partition): Add documentation\n \tfor this new flag.\n-\t* doc/rtl.texi (REG_CROSSING_JUMP):  Add documentation for new\n+\t* doc/rtl.texi (REG_CROSSING_JUMP): Add documentation for new\n \treg_note.\n \t* doc/tm.texi (NORMAL_TEXT_SECTION_NAME, SECTION_FORMAT_STRING,\n \tHAS_LONG_COND_BRANCH, HAS_LONG_UNCOND_BRANCH): Add documentation for\n@@ -36564,18 +36564,18 @@\n \t* gcc.c (combine_flag): New global variable, for new driver option.\n \t(struct compiler): Add two new fields, to be used when\n \tcombining multiple input files in a single pass (IMA).\n-\t(default_compilers):  Add values for the new fields to all\n+\t(default_compilers): Add values for the new fields to all\n \tcompiler entries. Modify the \"@c\" compiler entry for doing IMA\n \tproperly with \"-save-temps\" and the \"combine\" flag.\n-\t(option_map):  Add new driver option, \"--combine\", to tell driver\n+\t(option_map): Add new driver option, \"--combine\", to tell driver\n \tto pass multiple input files to compiler at one time.\n \t(have_o_argbuf_index): New global variable.\n \t(store_arg): Modify to assign value to have_o_argbuf_index.\n-\t(struct infile):  Add three new fields, to help with IMA.\n+\t(struct infile): Add three new fields, to help with IMA.\n \t(display_help): Add help for new \"combine\" option.\n \t(process_command): Remove local variable have_o; add code to check\n \tfor new \"combine\" option; remove assignment to combine_inputs.\n-\t(do_spec_1):  Modify to deal with IMA better.\n+\t(do_spec_1): Modify to deal with IMA better.\n \t(main): Make variable 'lang_n_infiles' local to entire function\n \trather than to a single block.  Use flag combine_flag to\n \tdetermine whether to do IMA or not; Modify loop initializing\n@@ -36793,7 +36793,7 @@\n \t(cgraph_decide_inlining_of_small_functions): ... here; simplify.\n \t(cgraph_decide_inlining, cgraph_decide_inlining_incrementally):\n \tLikewise.\n-\t(cgraph_expand_all_functions):  Remove inline clones from the ordered\n+\t(cgraph_expand_all_functions): Remove inline clones from the ordered\n \tlist.\n \t(cgraph_preserve_function_body_p): New predicate.\n \t(cgraph_optimize): Verify cgraph.\n@@ -38593,7 +38593,7 @@\n \t* config/mips/mips.md: Use move_operand in splitters for 64-bit moves.\n \t(movdi, movsi, movhi, movqi, movsf, movdf): Remove predicates.\n \t(*movdi_32bit_mips16, *movsi_mips16, *movhi_mips16, *movqi_mips16)\n-\t(*movsf_mips16, *movdf_mips16):  Name unnamed patterns.  Use\n+\t(*movsf_mips16, *movdf_mips16): Name unnamed patterns.  Use\n \tmove_operand as source predicate in all cases.\n \t(*movdi_32bit): Renamed from movdi_internal.  Remove 'F' constraint.\n \tTest reg_or_0_operand.  Use move_operand as source predicate.\n@@ -39011,7 +39011,7 @@\n \n 2004-03-07  Jan Hubicka  <jh@suse.cz>\n \n-\t* except.c (emit_to_new_bb_before):  Break fallthru edges.\n+\t* except.c (emit_to_new_bb_before): Break fallthru edges.\n \n 2004-03-07  Stephane Carrez  <stcarrez@nerim.fr>\n \n@@ -39288,7 +39288,7 @@\n \n 2004-03-04  Phil Edwards  <phil@codesourcery.com>\n \n-\t* genmultilib:  Change '=' to '-' when translating option names\n+\t* genmultilib: Change '=' to '-' when translating option names\n \tto directory names.\n \n 2004-03-04  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n@@ -39300,8 +39300,8 @@\n \n \t* reload.c (find_reloads): Reorganize if seqeunce to switch.\n \n-\t* cfgrtl.c (rtl_redirect_edge_and_branch):  Set the source BB as dirty.\n-\t(cfglayout_redirect_edge_and_branch):  Set the source BB as dirty.\n+\t* cfgrtl.c (rtl_redirect_edge_and_branch): Set the source BB as dirty.\n+\t(cfglayout_redirect_edge_and_branch): Set the source BB as dirty.\n \n 2004-03-04  Steve Ellcey  <sje@cup.hp.com>\n \n@@ -39559,7 +39559,7 @@\n \n 2004-03-03  Jan Hubicka  <jh@suse.cz>\n \n-\t* cselib.c (hash_table):  Remove GTY marker.\n+\t* cselib.c (hash_table): Remove GTY marker.\n \t(reg_values): Turn into array.\n \t(used_regs): Likewise.\n \t(n_used_regs): New static variable.\n@@ -39590,15 +39590,15 @@\n \tggc_alloc_cleared_stat, ggc_realloc_stat, ggc_alloc_typed_stat): Rename\n \tfrom ...; accept locations\n \t(ggc_alloc_types, ggc_alloc, ggc_alloc_zone, ggc_alloc_cleared,\n-\tggc_realloc, ggc_alloc_typed):  ... this one.\n+\tggc_realloc, ggc_alloc_typed): ... this one.\n \tfrom ...; accept locations\n \t* ggc-page.c (ggc_alloc_typed_stat, ggc_alloc_zone_stat,\n \tggc_alloc_stat): Rename from ... ; pass locations\n \t* ggc-page.c (ggc_alloc_typed, ggc_alloc_zone, ggc_alloc):\n \t... this one.\n \t(ggc_alloc_stat): Record overehead.\n \t* ggc.h (ggc_alloc_types, ggc_alloc, ggc_alloc_zone, ggc_alloc_cleared,\n-\tggc_realloc, ggc_alloc_typed):  Turn to macros\n+\tggc_realloc, ggc_alloc_typed): Turn to macros\n \t(ggc_alloc_types_stat, ggc_alloc_stat, ggc_alloc_zone_stat,\n \tggc_alloc_cleared_stat, ggc_realloc_stat, ggc_alloc_typed_stat): Declare.\n \t(dump_ggc_loc_satistics, ggc_record_overehead): Declare.\n@@ -40033,8 +40033,8 @@\n \n 2004-03-01  Paolo Bonzini  <bonzini@gnu.org>\n \n-\t* combine.c (try_combine):  Do not refer to is_replaced.\n-\t(gen_lowpart_for_combine):  Perverse subregs now have a\n+\t* combine.c (try_combine): Do not refer to is_replaced.\n+\t(gen_lowpart_for_combine): Perverse subregs now have a\n \tmore politically correct name.\n \t* cse.c (cse_insn): Likewise.\n \t* jump.c: Fix bogus reference to delete_insn.\n@@ -40206,9 +40206,9 @@\n \n 2004-02-27  Dale Johannesen  <dalej@apple.com>\n \n-\t* config/darwin.c (machopic_output_possible_stub_label):  Remove.\n-\tconfig/darwin-protos.h:  Ditto.\n-\tconfig/darwin.h:  Remove call to it.\n+\t* config/darwin.c (machopic_output_possible_stub_label): Remove.\n+\tconfig/darwin-protos.h: Ditto.\n+\tconfig/darwin.h: Remove call to it.\n \t* combine.c (distribute_notes): Do not place a REG_DEAD note\n \twhen value is both set and used.\n \n@@ -40423,7 +40423,7 @@\n 2004-02-25  Jan Hubicka  <jh@suse.cz>\n \n \t* basic-block.h (make_eh_edge, break_superblocks): Declare.\n-\t* cfgbuild.c (make_eh_edge):  Make global.\n+\t* cfgbuild.c (make_eh_edge): Make global.\n \t* cfglayout.c (break_superblocks): Likewise; fix memory leak.\n \t* except.c (build_post_landing_pads, connect_post_landing_pads,\n \tdw2_build_landing_pads, sjlj_emit_function_enter,\n@@ -41032,8 +41032,8 @@\n 2004-02-23  Dale Johannesen  <dalej@apple.com>\n \n \t* config/rs6000.md (movsf_hardfloat): Add POWER form of nop.\n-\t(movdf_hardfloat64):  Ditto.\n-\t(movdf_softfloat64):  Ditto.\n+\t(movdf_hardfloat64): Ditto.\n+\t(movdf_softfloat64): Ditto.\n \n 2004-02-23  Fariborz Jahanian <fjahanian@apple.com>\n \t* config/rs6000/rs6000.c (function_arg): call to\n@@ -41043,7 +41043,7 @@\n 2004-02-23  Dale Johannesen  <dalej@apple.com>\n \n \t* config/rs6000.md (movsf_hardfloat): Accept CTR-to-CTR copy.\n-\t(movdf_hardfloat64):  Ditto.\n+\t(movdf_hardfloat64): Ditto.\n \n 2004-02-23  Kazu Hirata  <kazu@cs.umass.edu>\n \n@@ -41230,11 +41230,11 @@\n \n 2004-02-20  Per Bothner  <per@bothner.com>\n \n-\t* input.h:  Don't #include line-map.h.  It may cause link problems\n+\t* input.h: Don't #include line-map.h.  It may cause link problems\n \twith undefined linemap_line_start when line-map.h is included but\n \tline-map.o is not linked, as currently happens with gengtype on\n \tcompilers that don't support inline.\n-\t* toplev.c:  So we do have to explicitly #include line-map.h here.\n+\t* toplev.c: So we do have to explicitly #include line-map.h here.\n \n 2004-02-20  Richard Henderson  <rth@redhat.com>\n \n@@ -41548,29 +41548,29 @@\n \n 2004-02-18  Per Bothner  <per@bothner.com>\n \n-\t* cpphash.h (struct cpp_buffer):  Restore return_at_eof field.  This\n+\t* cpphash.h (struct cpp_buffer): Restore return_at_eof field.  This\n \tpartly reverts my 2003-10-01 change, because we're back to logically\n \tincluding <command line> inside the main line.\n-\t* cpplex.c (_cpp_get_fresh_line):  Check return_at_eof field.\n-\t* cppmacro.c (cpp_scan_nooutput):  Set return_at_eof of current buffer.\n+\t* cpplex.c (_cpp_get_fresh_line): Check return_at_eof field.\n+\t* cppmacro.c (cpp_scan_nooutput): Set return_at_eof of current buffer.\n \tFixes PR preprocessor/14103.\n \n-\t* cppfiles.c (_cpp_stack_include):  When appropriate decrement\n+\t* cppfiles.c (_cpp_stack_include): When appropriate decrement\n \tline_table's highest_location, fixing LAST_SOURCE_LINE_LOCATION.\n-\t(cpp_push_include):  Don't need to increment pfile's line field.\n-\t* line-map.h (LAST_SOURCE_LINE_LOCATION):  Only decrement by 1.\n+\t(cpp_push_include): Don't need to increment pfile's line field.\n+\t* line-map.h (LAST_SOURCE_LINE_LOCATION): Only decrement by 1.\n \n-\t* c-ppoutput.c (print struct):  New first_time field.\n-\t(init_pp_output):  Set print.first_time.\n-\t(pp_file_change):  Use print.first_time, rather than MAIN_FILE_P,\n+\t* c-ppoutput.c (print struct): New first_time field.\n+\t(init_pp_output): Set print.first_time.\n+\t(pp_file_change): Use print.first_time, rather than MAIN_FILE_P,\n \twhich is set also for (say) <command line>.  Clear print.first_time.\n \n-\t* cppfiles.c (struct _cpp_file):  Comment and type for pch field\n+\t* cppfiles.c (struct _cpp_file): Comment and type for pch field\n \tdoes not match the code, so fix both.\n-\t(should_stack_file):  Inline include_pch_p function.\n-\t(include_pch_p):  Remove pointless function.\n+\t(should_stack_file): Inline include_pch_p function.\n+\t(include_pch_p): Remove pointless function.\n \n-\t* cpphash.h (struct cpp_buffer):  Remove unused search_cached field.\n+\t* cpphash.h (struct cpp_buffer): Remove unused search_cached field.\n \n 2004-02-18  Kazu Hirata  <kazu@cs.umass.edu>\n \n@@ -41955,9 +41955,9 @@\n \n 2004-02-14  Per Bothner  <per@bothner.com>\n \n-\t* fix-header.c (line_table):  Move local variable in main to global.\n-\t* scan.h (line_table):  Use it.\n-\t* scan-decls.c (scan_decls):  Need to call linemap_lookup on token's\n+\t* fix-header.c (line_table): Move local variable in main to global.\n+\t* scan.h (line_table): Use it.\n+\t* scan-decls.c (scan_decls): Need to call linemap_lookup on token's\n \tline (recently renamed to src_loc) before calling recognized_function.\n \n 2004-02-14  Matt Kraai  <kraai@alumni.cmu.edu>\n@@ -42220,77 +42220,77 @@\n \tRepresent column numbers using line-map's source_location.\n \tThe \"next available source_location\" is now managed internally by\n \tline-maps.c rather than by clients.\n-\t* line-map.h (struct line_map):  New field column_bits.\n-\t<from_line>:  Rename field to start_location.\n-\t(struct line_maps):  New fields highest_location and max_column_hint.\n-\t(linemap_check_files_exited):  New declaration.\n-\t(linemap_line_start):  New declaration.\n-\t(linemap_add):  Remove from_line parameter; use highest_location field.\n-\t(SOURCE_LINE, LAST_SOURCE_LINE):  Modify to use column_bits.\n-\t(SOURCE_COLUMN, LAST_SOURCE_LINE_LOCATION):  New macros.\n-\t(CURRENT_LINE_MAP):  Remove macro.\n-\t(linemap_position_for_column):  New inline function.\n-\t* line-map.c (linemap_init):  Clear new fields.\n-\t(linemap_check_files_exited):  New function, extracted from ...\n-\t(linemap_free):  Use linemap_check_files_exited.\n-\t(linemap_add):  Remove from_line parameter.  Various updates.\n-\t(linemap_line_start):  New function.\n-\t(linemap_lookeup):  Update for new field names.\n-\t* cpphash.h (struct cpp_reader) <map>:  Field removed.  Because\n+\t* line-map.h (struct line_map): New field column_bits.\n+\t<from_line>: Rename field to start_location.\n+\t(struct line_maps): New fields highest_location and max_column_hint.\n+\t(linemap_check_files_exited): New declaration.\n+\t(linemap_line_start): New declaration.\n+\t(linemap_add): Remove from_line parameter; use highest_location field.\n+\t(SOURCE_LINE, LAST_SOURCE_LINE): Modify to use column_bits.\n+\t(SOURCE_COLUMN, LAST_SOURCE_LINE_LOCATION): New macros.\n+\t(CURRENT_LINE_MAP): Remove macro.\n+\t(linemap_position_for_column): New inline function.\n+\t* line-map.c (linemap_init): Clear new fields.\n+\t(linemap_check_files_exited): New function, extracted from ...\n+\t(linemap_free): Use linemap_check_files_exited.\n+\t(linemap_add): Remove from_line parameter.  Various updates.\n+\t(linemap_line_start): New function.\n+\t(linemap_lookeup): Update for new field names.\n+\t* cpphash.h (struct cpp_reader) <map>: Field removed.  Because\n \tlinemap_position_for_column may unpredictably change the current map,\n \tit is cleaner and simpler for us to not cache it in cpp_reader.\n-\t(struct cpp_buffer):  New sysp field.\n+\t(struct cpp_buffer): New sysp field.\n \tChanged warned_cplusplus_comments and from_stage3 to bitfields.\n-\t* cppinit.c (cpp_read_min_file):  pfile->map no longer exists.\n-\t* cpplib.c (do_line, do_linemarker, _cpp_do_file_change):  Get\n+\t* cppinit.c (cpp_read_min_file): pfile->map no longer exists.\n+\t* cpplib.c (do_line, do_linemarker, _cpp_do_file_change): Get\n \tcurrent map using linemap_lookup.\n-\t(do_linemarker):  Also set buffer's sysp field.\n-\t(destringize_and_run):  No longer need to decrement current line.\n-\t* cppfiles.c (_cpp_stack_file):  Set sysp from and in buffer.\n-\t(search_path_head, open_file_failed):  Use buffer's sysp.\n-\t(cpp_make_system_header):  Get current map using linemap_lookup.\n+\t(do_linemarker): Also set buffer's sysp field.\n+\t(destringize_and_run): No longer need to decrement current line.\n+\t* cppfiles.c (_cpp_stack_file): Set sysp from and in buffer.\n+\t(search_path_head, open_file_failed): Use buffer's sysp.\n+\t(cpp_make_system_header): Get current map using linemap_lookup.\n \tAlso set buffer's sysp flag.\n-\t* cppmacro.c (_cpp_builtin_macro_text):  Likewise use linemap_lookup.\n-\t* cpphash.h (CPP_INCREMENT_LINE):  New macro.\n-\t(struct cpp_buffer):  Moved fields saved_cur, saved_rlimit to ...\n-\t(struct cpp_reader):  ... and adding saved_line_base field.\n+\t* cppmacro.c (_cpp_builtin_macro_text): Likewise use linemap_lookup.\n+\t* cpphash.h (CPP_INCREMENT_LINE): New macro.\n+\t(struct cpp_buffer): Moved fields saved_cur, saved_rlimit to ...\n+\t(struct cpp_reader): ... and adding saved_line_base field.\n \t* cpptrad.c (_cpp_overlay_buffer, _cpp_remove_overlay):\n \tUpdate accordingly.  Don't adjust line.\n-\t(_cpp_scan_out_logical_line):  Use CPP_INCREMENT_LINE.\n-\t* cpphash.c (CPP_IN_SYSTEM_HEADER):  Replaced macro by ...\n-\t(cpp_in_system_header):  ... new inline function, using buffer's sysp.\n-\t* cpperror.c (_cpp_begin_message):  Update to use cpp_in_system_header.\n-\t* cpplex.c (_cpp_lex_direct):  Likewise.\n-\t* cppmacro.c (_cpp_builtin_macro_text):  Likewise.\n-\t* cppmacro.c (_cpp_create_definition):  Use buffer's sysp field.\n-\t* cpplib.h (struct cpp_token):  Rename line field to src_loc.\n+\t(_cpp_scan_out_logical_line): Use CPP_INCREMENT_LINE.\n+\t* cpphash.c (CPP_IN_SYSTEM_HEADER): Replaced macro by ...\n+\t(cpp_in_system_header): ... new inline function, using buffer's sysp.\n+\t* cpperror.c (_cpp_begin_message): Update to use cpp_in_system_header.\n+\t* cpplex.c (_cpp_lex_direct): Likewise.\n+\t* cppmacro.c (_cpp_builtin_macro_text): Likewise.\n+\t* cppmacro.c (_cpp_create_definition): Use buffer's sysp field.\n+\t* cpplib.h (struct cpp_token): Rename line field to src_loc.\n \tRemove col field as it is now subsumed by src_loc.\n-\t* cpperror.c:  Update various field, parameter, and macro names.\n-\t(print_location):  If col==0, try SOURCE_COLUMN of line.\n-\t(cpp_error):  Use cur_token's src_loc field, rather than line+col.\n-\t* cpplib.c (do_diagnostic):  Token's src_loc fields replaces line+col.\n+\t* cpperror.c: Update various field, parameter, and macro names.\n+\t(print_location): If col==0, try SOURCE_COLUMN of line.\n+\t(cpp_error): Use cur_token's src_loc field, rather than line+col.\n+\t* cpplib.c (do_diagnostic): Token's src_loc fields replaces line+col.\n \t* cpplex.c (_cpp_process_line_notes, _cpp_lex_direct,\n-\t_cpp_skip_block_comment):  Use CPP_INCREMENT_LINE.\n-\t(_cpp_temp_token):  Replace cpp_token's line+col fields by src_loc.\n-\t(_cpp_get_fresh_line):  Don't need to adjust line for missing newline.\n-\t(_cpp_lex_direct):  Use linemap_position_for_column.\n-\t* c-ppoutput.c (maybe_print_line, print_line):  Don't take map\n+\t_cpp_skip_block_comment): Use CPP_INCREMENT_LINE.\n+\t(_cpp_temp_token): Replace cpp_token's line+col fields by src_loc.\n+\t(_cpp_get_fresh_line): Don't need to adjust line for missing newline.\n+\t(_cpp_lex_direct): Use linemap_position_for_column.\n+\t* c-ppoutput.c (maybe_print_line, print_line): Don't take map\n \tparameter.  Instead get it from the line_table global.  Adjust callers.\n-\t(print):  Remove map field.  Replace line field to src_line.\n-\t(init_pp_output, account_for_newlines, maybe_print_line):  Adjust.\n-\t(cb_line_change):  Use SOURCE_COLUMN.  Minor optimizations.\n-\t(pp_file_change):  Use MAIN_FILE_P since we cannot checked print.map.\n+\t(print): Remove map field.  Replace line field to src_line.\n+\t(init_pp_output, account_for_newlines, maybe_print_line): Adjust.\n+\t(cb_line_change): Use SOURCE_COLUMN.  Minor optimizations.\n+\t(pp_file_change): Use MAIN_FILE_P since we cannot checked print.map.\n \tUse LAST_SOURCE_LINE_LOCATION to \"catch up\" after #include.\n-\t* cpptrad.c (copy_comment):  Rename variable.\n-\t* c-lex.c (map):  Remove static variable, for same reason we removed\n+\t* cpptrad.c (copy_comment): Rename variable.\n+\t* c-lex.c (map): Remove static variable, for same reason we removed\n \tcpp_reader's map field.\n-\t(cb_line_change, cb_def_pragma, cb_define, cb_undef):  Hence we need\n+\t(cb_line_change, cb_def_pragma, cb_define, cb_undef): Hence we need\n \tto call linemap_lookup.\n-\t(cb_line_change):  Token's line field replaced by src_loc.\n-\t(fe_file_change):  Use MAINFILE_P and LAST_SOURCE_LINE macros.\n+\t(cb_line_change): Token's line field replaced by src_loc.\n+\t(fe_file_change): Use MAINFILE_P and LAST_SOURCE_LINE macros.\n \tDon't save new_map.\n \n-\t* cpphash.h, cpperror.c, cpplib.h:  Some renames of fileline to\n+\t* cpphash.h, cpperror.c, cpplib.h: Some renames of fileline to\n \tsource_location.\n \n 2004-02-11  Hartmut Penner  <hpenner@de.ibm.com>\n@@ -42383,7 +42383,7 @@\n \n 2004-02-10  Per Bothner  <per@bothner.com>\n \n-\t* c-opts.c (c_common_post_options):   Don't emit working directory\n+\t* c-opts.c (c_common_post_options): Don't emit working directory\n \tin cpp output if -P was specified.\n \n 2004-02-10  Paolo Bonzini  <bonzini@gnu.org>\n@@ -42857,7 +42857,7 @@\n \n \t* flow.c (update_life_info): Allocate reg_deaths when called from\n \tscheudler.\n-\t(attempt_auto_inc):  Update life ranges accordingly.\n+\t(attempt_auto_inc): Update life ranges accordingly.\n \n 2004-02-06  Ulrich Weigand  <uweigand@de.ibm.com>\n \n@@ -43014,7 +43014,7 @@\n \n 2004-02-05  Kelley Cook  <kcook@gcc.gnu.org>\n \n-\t* doc/install.texi:  Update automake and autoconf version\n+\t* doc/install.texi: Update automake and autoconf version\n \trequirements.  Note where to find gcj automake version.\n \n 2004-02-05  Kelley Cook  <kcook@gcc.gnu.org>\n@@ -43027,13 +43027,13 @@\n 2004-02-05  Kelley Cook  <kcook@gcc.gnu.org>\n \n \tPR/13485\n-\tMakefile.in (srcextra):  Add a level of indirection to ...\n+\tMakefile.in (srcextra): Add a level of indirection to ...\n \t(gcc.srcextra): ... here.\n \t(po-generated): Delete.\n \t(po/$(PACKAGE).pot: Use srcextra instead of po-generated.  Depend on\n \toptions.c.\n \t(start.encap): Remove superfluous lang.srcextra dependency.\n-\tobjc/Make-lang.in (po-generated):  Delete.\n+\tobjc/Make-lang.in (po-generated): Delete.\n \n 2004-02-05  Kazu Hirata  <kazu@cs.umass.edu>\n \n@@ -43128,35 +43128,35 @@\n 2004-02-04  Per Bothner  <per@bothner.com>\n \n \tPartially revert/redo 2003-10-01 change; fix -fworking-directory.\n-\t* c-ppoutput.c (pp_dir_change):  New function.\n-\t* c-common.h (pp_dir_change):  New declaration.\n-\t* cpplib.h (struct cpp_options):  Remove working_directory field.\n-\t* cppinit.c (cpp_find_main_file, cpp_push_main_file):  Merge back to\n-\t(cpp_read_main_file):  as before 10-01.  Call _cpp_stack_file.\n+\t* c-ppoutput.c (pp_dir_change): New function.\n+\t* c-common.h (pp_dir_change): New declaration.\n+\t* cpplib.h (struct cpp_options): Remove working_directory field.\n+\t* cppinit.c (cpp_find_main_file, cpp_push_main_file): Merge back to\n+\t(cpp_read_main_file): as before 10-01.  Call _cpp_stack_file.\n \tDon't handle -fworking_directory here, but in c_common_post_options.\n \t(read_original_directory): Don't back up when done.\n \tDon't clear no-longer used working_directory flag.\n-\t* cpplib.h:  Update declarations to match.\n-\t* c-lex.c (cb_dir_change):  Move to c-opts.c.\n-\t(init_c_lex):  Don't set dir_change callback here, since we want\n+\t* cpplib.h: Update declarations to match.\n+\t* c-lex.c (cb_dir_change): Move to c-opts.c.\n+\t(init_c_lex): Don't set dir_change callback here, since we want\n \tto set it even if flag_preprocess_only.\n-\t* c-opts.c (cb_dir_change):  Function moved from c-lex.c.\n-\t(c_common_post_options):  Set dir_change callback.\n+\t* c-opts.c (cb_dir_change): Function moved from c-lex.c.\n+\t(c_common_post_options): Set dir_change callback.\n \tCall pp_dir_change if approporiate.\n-\t(finish_options):  Don't call cpp_find_main_file here.\tHence remove\n+\t(finish_options): Don't call cpp_find_main_file here.\tHence remove\n \tunneeded parameter and result. Do LC_RENAME for <built-in>.\n-\t(c_common_post_options):  Call cpp_read_main_file here instead.\n-\t(c_common_init):  Update accordingly.\n-\t(push_command_line_include):  Don't cpp_push_main_file.\n+\t(c_common_post_options): Call cpp_read_main_file here instead.\n+\t(c_common_init): Update accordingly.\n+\t(push_command_line_include): Don't cpp_push_main_file.\n \tDo LC_RENAME rather than LC_LEASE to get back to main file.\n \tCompared to pre-10-01 version, inline cpp_rename_to_main_file.\n-\t(c_common_parse_file):  Call cpp_read_main_file for subsequent main\n+\t(c_common_parse_file): Call cpp_read_main_file for subsequent main\n \tfiles, but call finish_options for all files.\n-\t* c-opts.c (sanitize_cpp_opts):  Don't set cpp_opts->working_directory.\n-\t* fix-header.c (read_scan_file):  Call cpp_read_main_file instead of\n+\t* c-opts.c (sanitize_cpp_opts): Don't set cpp_opts->working_directory.\n+\t* fix-header.c (read_scan_file): Call cpp_read_main_file instead of\n \tcpp_find_main_file + cpp_push_main_file.\n-\t* c-lex.c (fe_file_change):  Don't set main_input_filename here.\n-\t* opts.c (handle_options):  Only set main_input_filename first time.\n+\t* c-lex.c (fe_file_change): Don't set main_input_filename here.\n+\t* opts.c (handle_options): Only set main_input_filename first time.\n \n 2004-02-05  Ian Lance Taylor  <ian@wasabisystems.com>\n \n@@ -43333,7 +43333,7 @@\n \n 2004-02-04  Jan Hubicka  <jh@suse.cz>\n \n-\t* alias.c (find_base_term, get_addr):  Do not dereference NULL\n+\t* alias.c (find_base_term, get_addr): Do not dereference NULL\n \tpointer when all VALUE's locations has been invalidated.\n \t(rtx_equal_for_memref_p): Simplify checking of VALUEs.\n \n@@ -43358,7 +43358,7 @@\n 2004-02-03  Roger Sayle  <roger@eyesopen.com>\n \n \tPR target/9348\n-\t* expr.c (expand_expr_real) <MULT_EXPR>:  When performing widening\n+\t* expr.c (expand_expr_real) <MULT_EXPR>: When performing widening\n \tmultiplies with a multiplication of the wrong signedness, its the\n \tsignedness of the multiplication that we've performed that needs to\n \tbe passed to expand_mult_highpart_adjust.  Avoid emitting a nop-move\n@@ -43690,10 +43690,10 @@\n \t2003-11-22  Phil Edwards  <phil@codesourcery.com>\n \n \tPR target/12476\n-\t* config/arm/arm.c (arm_output_mi_thunk):  In Thumb mode, use\n+\t* config/arm/arm.c (arm_output_mi_thunk): In Thumb mode, use\n \t'bx' instead of 'b' to avoid branch range restrictions.  Output\n \tthe thunk immediately before the thunked-to function.\n-\t* config/arm/arm.h (ARM_DECLARE_FUNCTION_NAME):  Do not emit\n+\t* config/arm/arm.h (ARM_DECLARE_FUNCTION_NAME): Do not emit\n \t.thumb_func if a thunk is being generated.  Emit .code 16 along\n \twith .thumb_func if a thunk is not being generated.\n \n@@ -43713,12 +43713,12 @@\n \n \t2003-11-05  Phil Edwards  <phil@codesourcery.com>\n \n-\t* config/arm/arm.md (insn):  Add new V6 instruction names.\n-\t(generic_sched):  New attr.\n-\t* config/arm/arm-generic.md:  Use generic_sched here.\n-\t* config/arm/arm1026ejs.md:  Do not model fetch/issue/decode\n+\t* config/arm/arm.md (insn): Add new V6 instruction names.\n+\t(generic_sched): New attr.\n+\t* config/arm/arm-generic.md: Use generic_sched here.\n+\t* config/arm/arm1026ejs.md: Do not model fetch/issue/decode\n \tstages of pipeline.  Adjust latency counts accordingly.\n-\t* config/arm/arm1136jfs.md:  New file.\n+\t* config/arm/arm1136jfs.md: New file.\n \n \t2003-10-28  Mark Mitchell  <mark@codesourcery.com>\n \n@@ -44041,7 +44041,7 @@\n \tdelete_output_reload): Likewise.\n \t* resource.c (update_live_status, mark_referenced_resources,\n \tmark_set_resources, mark_target_live_regs): Likewise.\n-\t* rtlanal.c:  Include regs.h\n+\t* rtlanal.c: Include regs.h\n \t(refers_to_regno_p, reg_overlap_mentioned_p, dead_or_set_p,\n \tdead_or_set_regno_p, find_regno_note, find_reg_fusage,\n \tsubreg_regno_offset, subreg_offset_representable_p,\n@@ -44425,7 +44425,7 @@\n \t(print_statistics, dump_alloc_pool_statistics): New function.\n \t* alloc-pool.h (alloc_pool_def): Turn name to be constant.\n \t(dump_alloc_pool_statistics): Declare.\n-\t* toplev.c (finalize):  Dump statistics.\n+\t* toplev.c (finalize): Dump statistics.\n \n \t* reload.c (secondary_memlocs_elim_used): New static variable.\n \t(get_secondary_mem): Update it.\n@@ -45062,7 +45062,7 @@\n \n 2004-01-26  Jan Hubicka  <jh@suse.cz>\n \n-\t* cselib.c (discard_useless_values):  Clear out value pointer pointing\n+\t* cselib.c (discard_useless_values): Clear out value pointer pointing\n \tto datastructure to be recycled.\n \n 2004-01-25  Jan Hubicka  <jh@suse.cz>\n@@ -45206,7 +45206,7 @@\n \n 2004-01-26  Michael Hayes  <m.hayes@elec.canterbury.ac.nz>\n \n-\t* config/c4x/c4x.c (c4x_legitimate_address_p):  Invalidate direct\n+\t* config/c4x/c4x.c (c4x_legitimate_address_p): Invalidate direct\n \tmemory references if TARGET_EXPOSE_LDP nonzero.\n \n 2004-01-26  Michael Hayes  <m.hayes@elec.canterbury.ac.nz>\n@@ -45256,7 +45256,7 @@\n \n 2004-01-26  Michael Hayes  <m.hayes@elec.canterbury.ac.nz>\n \n-\t* config/c4x/c4x.h (LEGITIMIZE_RELOAD_ADDRESS):  Handle symref.\n+\t* config/c4x/c4x.h (LEGITIMIZE_RELOAD_ADDRESS): Handle symref.\n \n 2004-01-25  Chris Demetriou  <cgd@broadcom.com>\n \n@@ -45478,7 +45478,7 @@\n 2004-01-24  Jan Hubicka  <jh@suse.cz>\n \n \t* emit-rtl.c (change_address, adjust_address_1, offset_address,\n-\twiden_memory_access):  Return early when there is nothing to change.\n+\twiden_memory_access): Return early when there is nothing to change.\n \n 2004-01-24  Jakub Jelinek  <jakub@redhat.com>\n \n@@ -45524,7 +45524,7 @@\n \n 2004-01-24  Jan Hubicka  <jh@suse.cz>\n \n-\t* cselib.c (remove_useless_values):  Do not access discarded values.\n+\t* cselib.c (remove_useless_values): Do not access discarded values.\n \n 2004-01-24  Joseph S. Myers  <jsm@polyomino.org.uk>\n \n@@ -45561,7 +45561,7 @@\n \n 2004-01-23  Jan Hubicka  <jh@suse.cz>\n \n-\t* emit-rtl.c (change_address_1):  Do not re-generate the RTX if nothing\n+\t* emit-rtl.c (change_address_1): Do not re-generate the RTX if nothing\n \tchange.\n \n \t* alloc-pool.c (align_four): Kill.\n@@ -45648,7 +45648,7 @@\n \n 2004-01-23  Jan Hubicka  <jh@suse.cz>\n \n-\t* i386.c (ix86_emit_restore_regs_using_mov):  Deal with large offsets.\n+\t* i386.c (ix86_emit_restore_regs_using_mov): Deal with large offsets.\n \n 2004-01-23  J\"orn Rennecke <joern.rennecke@superh.com>\n \n@@ -45662,7 +45662,7 @@\n \t* basic-block.h (PROP_POSTRELOAD): New macro.\n \t(CLEANUP_LOG_LINKS): New.\n \t* cfgcleanup.c (cleanup_cfg): Only PROP_LOG_LINKS when asked to.\n-\t* toplev.c (rest_of_handle_life):  Preserve LOG_LINKS trought cleanup_cfg.\n+\t* toplev.c (rest_of_handle_life): Preserve LOG_LINKS trought cleanup_cfg.\n \n \t* cselib.c (value_pool): New.\n \t(new_cselib_val): Use pool.\n@@ -45682,7 +45682,7 @@\n 2004-01-22  Paolo Bonzini  <bonzini@gnu.org>\n \n \tPR optimization/13724\n-\t* cse.c (fold_rtx) <SUBREG>:  Fold a SUBREG to zero if it\n+\t* cse.c (fold_rtx) <SUBREG>: Fold a SUBREG to zero if it\n \trepresents the zero bits produced by a ZERO_EXTEND operation.\n \n 2004-01-22  Roger Sayle  <roger@eyesopen.com>\n@@ -45706,9 +45706,9 @@\n 2004-01-22  Jan Hubicka  <jh@suse.cz>\n \n \t* cfgcleanup.c (first_pass): New static variable.\n-\t(try_forward_edges):  Add work limiting check for threading.\n-\t(try_crossjump_bb):  Add work limiting check for crossjumping.\n-\t(try_optimize_cfg):  Maintain first pass variable.\n+\t(try_forward_edges): Add work limiting check for threading.\n+\t(try_crossjump_bb): Add work limiting check for crossjumping.\n+\t(try_optimize_cfg): Maintain first pass variable.\n \n 2004-01-22  Bob Wilson  <bob.wilson@acm.org>\n \n@@ -46005,7 +46005,7 @@\n \n 2004-01-20  Jan Hubicka  <jh@suse.cz>\n \n-\t* varray.c:  Include hashtab.h\n+\t* varray.c: Include hashtab.h\n \t(varray_descriptor): New structure.\n \t(hash_descriptor, eq_descriptor, varray_descriptor,\n \tprint_statistics): New static functions\n@@ -46074,35 +46074,35 @@\n 2004-01-19  Per Bothner  <per@bothner.com>\n \n \tMove cpp_reader's line_maps field to a shared global.\n-\t* cpphash.h (cpp_reader):  Rename line_maps field to line_table\n+\t* cpphash.h (cpp_reader): Rename line_maps field to line_table\n \tand change the type to a pointer rather than a struct.\n-\t* cppinit.c (cpp_push_main_field):  Adjust accordingly.\n+\t* cppinit.c (cpp_push_main_field): Adjust accordingly.\n \t* cpplib.c (do_include_common, _cpp_do_file_change, cpp_get_callbacks):\n \tLikewise.\n-\t* cppfiles.c (validate_pch):  Likewise.\n+\t* cppfiles.c (validate_pch): Likewise.\n \t* cppmacro.c (_cpp_warn_if_unused_macro, _cpp_builtin_macro_text):\n \tLikewise.\n-\t* cpperror.c (print_location):  Likewise.\n-\t* cpplib.h (cpp_create_reader):  New line_maps pointer parameter.\n-\t* cppinit.c (cpp_create_reader):  Handle new parameter.\n-\t(cpp_destroy):  Don't free line_maps - that's no longer our job.\n-\t* input.h (line_table):  New variable.\n-\t* toplev.c (line_table):  Declare variable.\n-\t(general_init):  Initialize line_table.\n-\t* c-opts.c (c_common_init_options):  Pass line_table to\n+\t* cpperror.c (print_location): Likewise.\n+\t* cpplib.h (cpp_create_reader): New line_maps pointer parameter.\n+\t* cppinit.c (cpp_create_reader): Handle new parameter.\n+\t(cpp_destroy): Don't free line_maps - that's no longer our job.\n+\t* input.h (line_table): New variable.\n+\t* toplev.c (line_table): Declare variable.\n+\t(general_init): Initialize line_table.\n+\t* c-opts.c (c_common_init_options): Pass line_table to\n \tcpp_create_reader.\n-\t* fix-header.c (read_scan_file):  New local variable line_table.\n+\t* fix-header.c (read_scan_file): New local variable line_table.\n \tInitialize, and pass it to cpp_create_reader.\n-\t* Makefile.in (LIBS, LIBDEPS):  Add libcpp.a.\n-\t(C_AND_OBJC_OBJS, fix-header):  Remove redundant libcpp.a.\n+\t* Makefile.in (LIBS, LIBDEPS): Add libcpp.a.\n+\t(C_AND_OBJC_OBJS, fix-header): Remove redundant libcpp.a.\n \n 2004-01-19  Per Bothner  <per@bothner.com>\n \n \tImplement a cache for linemap_lookup.\n-\t* line-map.h (struct_line_maps):  Add cache field.\n-\t* line-map.c (linemap_init):  Zero cache field.\n-\t(linemap_add):  Set cache field to offset of newly allocated map.\n-\t(linemap_lookup):  Use and set cache field.\n+\t* line-map.h (struct_line_maps): Add cache field.\n+\t* line-map.c (linemap_init): Zero cache field.\n+\t(linemap_add): Set cache field to offset of newly allocated map.\n+\t(linemap_lookup): Use and set cache field.\n \n 2004-01-20  Kaz Kojima  <kkojima@gcc.gnu.org>\n \n@@ -46868,7 +46868,7 @@\n \n 2004-01-14  Jan Hubicka  <jh@suse.cz>\n \n-\t* alias.c (get_alias_set):  Initialize alias set to 0 when subset is\n+\t* alias.c (get_alias_set): Initialize alias set to 0 when subset is\n \timpossible.\n \n 2004-01-14  Kelley Cook  <kcook@gcc.gnu.org>\n@@ -47026,9 +47026,9 @@\n \n 2004-01-13  Jan Hubicka  <jh@suse.cz>\n \n-\t* c-decl.c (diagnose_mismatched_decls):  Fix warning calls.\n+\t* c-decl.c (diagnose_mismatched_decls): Fix warning calls.\n \n-\t* cgraphunit.c (cgraph_optimize_function):  Always do\n+\t* cgraphunit.c (cgraph_optimize_function): Always do\n \toptimize_inline_calls when there is always_inline callee.\n \t(cgraph_decide_inlining): Fix formating.\n \t* tree-inline.c (inlinable_function_p): Do sorry for alwaysinline\n@@ -47106,7 +47106,7 @@\n \tPR opt/12863\n \t* cfgcleanup.c (label_is_jump_target_p): Move to...\n \t* rtlanal.c (label_is_jump_target_p): ... here.\n-\t* cfgrtl.c (cfg_layout_redirect_edge_and_branch):  Fix redirecting of fallthru\n+\t* cfgrtl.c (cfg_layout_redirect_edge_and_branch): Fix redirecting of fallthru\n \tedges unified with branch edges.\n \n 2004-01-12  Richard Earnshaw  <rearnsha@arm.com>\n@@ -47127,7 +47127,7 @@\n \n 2004-01-12  Jan Hubicka  <jh@suse.cz>\n \n-\t* alias.c:  Invlude varray.h\n+\t* alias.c: Invlude varray.h\n \t(alias_sets): Turn into varray.\n \t(get_alias_set_entry): Use VARRAY; mark inline.\n \t(mems_in_disjoint_alias_sets_p): Mark inline.\n@@ -47140,7 +47140,7 @@\n \n \tPartial fix for PR opt/10776 II\n \t* cselib.c: Include params.h\n-\t(cselib_invalidate_mem):  Limit amount of nonconflicting memory\n+\t(cselib_invalidate_mem): Limit amount of nonconflicting memory\n \tlocations.\n \t* params.def (PARAM_MAX_CSELIB_MEMORY_LOCATIONS): New.\n \t* Makefile.in (cselib.o): Depend on params.h\n@@ -47268,7 +47268,7 @@\n 2004-01-10  Jan Hubicka  <jh@suse.cz>\n \n \tPR opt/11635\n-\t* expr.c (expand_expr_real):  More curefully expand union casts.\n+\t* expr.c (expand_expr_real): More curefully expand union casts.\n \n 2004-01-10  Kazu Hirata  <kazu@cs.umass.edu>\n \n@@ -47434,7 +47434,7 @@\n \n 2004-01-08  Jan Hubicka  <jh@suse.cz>\n \n-\t* cgraphunit.c (cgraph_decide_inlining):  Fix typo.\n+\t* cgraphunit.c (cgraph_decide_inlining): Fix typo.\n \n 2004-01-08  Geoffrey Keating  <geoffk@apple.com>\n \n@@ -47570,7 +47570,7 @@\n \n 2004-01-06  Jan Hubicka  <jh@suse.cz>\n \n-\t* invoke.texi:  Remove typo in last change.\n+\t* invoke.texi: Remove typo in last change.\n \n \tPR target/10301\n \t* config.gcc: Accept opteron and athlon-64 as variants\n@@ -47621,8 +47621,8 @@\n \n 2004-01-06  Jan Hubicka  <jh@suse.cz>\n \n-\t* i386.c (init_cumulative_args):  Add handling of MMX_REGPARM.\n-\t(function_arg_advance):  Do not pass aggregates in SSE; deal handling\n+\t* i386.c (init_cumulative_args): Add handling of MMX_REGPARM.\n+\t(function_arg_advance): Do not pass aggregates in SSE; deal handling\n \tof MMX_REGPARM.\n \t(function_arg): Add new warnings about ABI changes;  fix SSE_REGPARM;\n \tadd MMX_REGPARM.\n@@ -47774,7 +47774,7 @@\n \t(cgraph_decide_inlining_of_small_function, cgraph_decide_inlining): Set\n \treasons.\n \t(cgraph_inline_p): Add new argument reason.\n-\t* tree-inline.c (expand_call_inline):  Update warning.\n+\t* tree-inline.c (expand_call_inline): Update warning.\n \n 2004-01-03  Nathanael Nerode  <neroden@gcc.gnu.org>\n \n@@ -47828,13 +47828,13 @@\n \n 2004-01-02  Jan Hubicka  <jh@suse.cz>\n \n-\t* cgraphunit.c (cgraph_optimize_function):  Call optimize_inline_calls\n+\t* cgraphunit.c (cgraph_optimize_function): Call optimize_inline_calls\n \twhen there is nothing to inline but warnings are requested.\n-\t(cgraph_decide_inlining):  Fix memory leak.\n+\t(cgraph_decide_inlining): Fix memory leak.\n \n 2004-01-02  Jan Hubicka  <jh@suse.cz>\n \n-\t* expr.c (store_constructor):  Fix pasto in previous patch.\n+\t* expr.c (store_constructor): Fix pasto in previous patch.\n \n 2004-01-02  Kazu Hirata  <kazu@cs.umass.edu>\n "}, {"sha": "325812c5207d5a2e4e707230ad3fb12484ac6485", "filename": "gcc/ChangeLog-2005", "status": "modified", "additions": 291, "deletions": 291, "changes": 582, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e836620206f1e96d7dac7c3b91c00e01b39e39f3/gcc%2FChangeLog-2005", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e836620206f1e96d7dac7c3b91c00e01b39e39f3/gcc%2FChangeLog-2005", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog-2005?ref=e836620206f1e96d7dac7c3b91c00e01b39e39f3", "patch": "@@ -93,7 +93,7 @@\n \tCreate modify_expr_node_pool.\n \t(fini_pre): Free modify_expr_node_pool and need_creation array.\n \t(execute_pre): Call insert_fake_stores, compute_rvuse, and\n-\trealify_fake_stores. \n+\trealify_fake_stores.\n \t* tree-flow.h (vn_compute): Fix prototype.\n \t(vn_add): Ditto.\n \t(vn_lookup): Ditto.\n@@ -106,7 +106,7 @@\n 2005-12-30  Gabriel Dos Reis  <gdr@integrable-solutions.net>\n \n \t* c-pretty-print.h (struct c_pretty_print_info): Add new member\n-\t\"constant\". \n+\t\"constant\".\n \t(pp_constant): New macro.\n \t* c-pretty-print.c (pp_c_pretty_printer_init): Set pp->constant.\n \n@@ -118,13 +118,13 @@\n \n 2005-12-29 Kenneth Zadeck <zadeck@naturalbridge.com>\n \n-        * bitmap.c (bitmap_element_free, bitmap_element_link,\n-        bitmap_elt_insert_after, bitmap_and, bitmap_and_compl,\n-        bitmap_and_compl, bitmap_ior, bitmap_ior_into, bitmap_xor,\n-        bitmap_xor_into): Added code to properly maintain the variants\n-        associated with the CURRENT and HEAD fields.\n-        (bitmap_popcount, bitmap_clear_range, bitmap_compl_and_into): New\n-        functions. \n+\t* bitmap.c (bitmap_element_free, bitmap_element_link,\n+\tbitmap_elt_insert_after, bitmap_and, bitmap_and_compl,\n+\tbitmap_and_compl, bitmap_ior, bitmap_ior_into, bitmap_xor,\n+\tbitmap_xor_into): Added code to properly maintain the variants\n+\tassociated with the CURRENT and HEAD fields.\n+\t(bitmap_popcount, bitmap_clear_range, bitmap_compl_and_into): New\n+\tfunctions.\n \t* bitmap.h: Added defs for bitmap_popcount, bitmap_clear_range,\n \tand bitmap_compl_and_into.\n \n@@ -195,7 +195,7 @@\n 2005-12-28  Daniel Berlin  <dberlin@dberlin.org>\n \n \tFix PR tree-optimization/25394\n-\t* fold-const.c (fold_checksum_tree): Guard \n+\t* fold-const.c (fold_checksum_tree): Guard\n \tportions of checksumming with correct structure checks.\n \n 2005-12-27  Kazu Hirata  <kazu@codesourcery.com>\n@@ -209,9 +209,9 @@\n \t* fold-const.c (int_const_binop): Return NULL_TREE when an expression\n \tcan't be evaluated at compile-time (instead of calling abort).\n \tReturn NULL_TREE for division (and modulus) by zero.\n-\t(const_binop):  Return NULL_TREE for floating point operators that\n+\t(const_binop): Return NULL_TREE for floating point operators that\n \taren't handled by real_arithmetic.\n-\t(fold_binary):  Eliminate \"wins\" variable, and \"binary\" label, by\n+\t(fold_binary): Eliminate \"wins\" variable, and \"binary\" label, by\n \tfolding operators with constant operands early.  Assert that\n \toperands are non-NULL.\n \n@@ -228,7 +228,7 @@\n \t* c-common.c (compound_literal_number): New variable.\n \t(set_compound_literal_name): New function.\n \t* c-common.h (set_compound_literal_name): Declare.\n-\t\n+\n 2005-12-26  Kazu Hirata  <kazu@codesourcery.com>\n \n \tPR tree-optimization/25125\n@@ -274,24 +274,24 @@\n \n 2005-12-23  Paolo Bonzini  <bonzini@gnu.org>\n \n-        * combine.c (simplify_shift_const): Fix typo.  Use, whenever\n+\t* combine.c (simplify_shift_const): Fix typo.  Use, whenever\n \tapplicable, simplify_const_binary_operation.\n \n-        (simplify_shift_const): Leave only the fallback\n-        case when no simplification is possible.  Extract to...\n-        (simplify_shift_const_1): ... here.  Always create a new\n-        RTX instead of substituting.  Remove the signed_count variable.\n-        Return NULL_RTX if no substitution is possible.\n+\t(simplify_shift_const): Leave only the fallback\n+\tcase when no simplification is possible.  Extract to...\n+\t(simplify_shift_const_1): ... here.  Always create a new\n+\tRTX instead of substituting.  Remove the signed_count variable.\n+\tReturn NULL_RTX if no substitution is possible.\n \n-        (simplify_and_const_int): Leave only the fallback\n-        case when no simplification is possible.  Extract to...\n-        (simplify_and_const_int_1): ... here.  Always create a new\n-        RTX instead of substituting.  Return NULL_RTX if no substitution\n-        is possible.\n+\t(simplify_and_const_int): Leave only the fallback\n+\tcase when no simplification is possible.  Extract to...\n+\t(simplify_and_const_int_1): ... here.  Always create a new\n+\tRTX instead of substituting.  Return NULL_RTX if no substitution\n+\tis possible.\n \n-        (force_to_mode, simplify_comparison): Don't pass a non-NULL first\n-        parameter to simplify_and_const_int and simplify_shift_const,\n-        unless it is equal to the expected non-simplified result.\n+\t(force_to_mode, simplify_comparison): Don't pass a non-NULL first\n+\tparameter to simplify_and_const_int and simplify_shift_const,\n+\tunless it is equal to the expected non-simplified result.\n \n 2005-12-23  Jakub Jelinek  <jakub@redhat.com>\n \n@@ -383,7 +383,7 @@\n \n 2005-12-22  Dale Johannesen  <dalej@apple.com>\n \n-\t* config/i386/sse.md (sse_movhlps):  Reverse operands for\n+\t* config/i386/sse.md (sse_movhlps): Reverse operands for\n \t2nd and 3rd alternatives.\n \n 2005-12-22  Andrew Pinski <pinskia@physics.uc.edu>\n@@ -567,7 +567,7 @@\n \t* df.c (df_analyze_1, df_analyze_subcfg, iterative_dataflow):\n \tCorrected basic block number calculations for changes in entry and\n \texit numbering.\n-\t\n+\n 2005-12-19  Zdenek Dvorak <dvorakz@suse.cz>\n \n \t* tree-flow.h (struct var_ann_d): Change type of\n@@ -621,7 +621,7 @@\n \t* flow.c (update_life_info, count_or_remove_death_notes): Fixed\n \tlatent bug that could happen if update_life_info was called with a\n \tblocks parameter and the call to cleanup_cfg actually deleted one\n-\tof those blocks. \n+\tof those blocks.\n \n 2005-12-19  Zdenek Dvorak <dvorakz@suse.cz>\n \n@@ -695,7 +695,7 @@\n \tfolding.\n \t* dwarf2out.c (base_type_die): Use DW_ATE_decimal_float to\n \tdescribe decimal floating point types.\n-\t\n+\n 2005-12-18  Ulrich Weigand  <uweigand@de.ibm.com>\n \n \tPR rtl-optimization/21041\n@@ -779,9 +779,9 @@\n \n 2005-12-18  Dorit Nuzman  <dorit@il.ibm.com>\n \n-\tPR tree-optimization/24378\t\n+\tPR tree-optimization/24378\n \t* tree-vect-transform.c (vect_transform_loop): Create single-predecessor\n-\tbasic-block after loop-versioning. \n+\tbasic-block after loop-versioning.\n \n 2005-12-18  Jeff Law  <law@redhat.com>\n \n@@ -800,7 +800,7 @@\n \n \t* config/m68k/m68k.md (m68k_output_function_prologue): Always call\n \tdwarf2out_def_cfa. Only add space for frame pointer to cfa_offset\n-\twhen frame_pointer_needed. \n+\twhen frame_pointer_needed.\n \n 2005-12-17  Gabriel Dos Reis  <gdr@integrable-solutions.net>\n \n@@ -896,7 +896,7 @@\n \t* c-format.c (check_format_info_main): Use GGC_NEW.\n \t(format_type_warning): Use explicit cast when converting from void *.\n \t* c-typeck.c (alloc_tagged_tu_seen_cache): Use XNEW instead of\n-\txmalloc. \n+\txmalloc.\n \t(start_init): Likewise.\n \t* tree-flow-inline.h (first_referenced_var): Use explicit cast\n \twhen converting from void *.\n@@ -1256,7 +1256,7 @@\n \t* unwind-dw2-fde-glibc.c (_Unwind_IteratePhdrCallback): Guard\n \tagainst prev_cache_entry == NULL when moving a cache entry to the\n \thead of the list.\n-\t\n+\n 2005-12-15  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* config/mt/mt.c (mt_override_options): Require lower case\n@@ -1307,7 +1307,7 @@\n \tSecond part of MS1->MT renaming\n \t* config/mt/mt.md (doloop_end): Call mt_add_loop.\n \t(movqi, movhi): Call mt_set_memflags.\n-\t(*movdf_internal): Call mt_split_words. \n+\t(*movdf_internal): Call mt_split_words.\n \t(reload_inqi, reload_outqi, reload_inhi, reload_outhi): Call\n \tmt_set_memflags.\n \t(cmpsi): Store to mt_compare_op[01].\n@@ -1338,7 +1338,7 @@\n \t(mt_cpu): Renamed.\n \t(mt_init_machine_status, mt_override_options, mt_builtin_saveregs,\n \tmt_va_start, mt_compute_frame_size, mt_emit_save_restore,\n-\tmt_emit_save_fp, mt_emit_save_regs, mt_interrupt_function_p, \n+\tmt_emit_save_fp, mt_emit_save_regs, mt_interrupt_function_p,\n \tmt_expand_prologue, mt_epilogue_uses, mt_expand_epilogue,\n \tmt_expand_eh_return, mt_emit_eh_prologue,\n \tmt_handl_interrupt_attribute): Renamed, adjusted.\n@@ -1617,7 +1617,7 @@\n \t* predict.c (tree_predicted_by_p): Likewise for struct edge_prediction.\n \t(tree_predict_edge, combine_predictions_for_bb): Likewise.\n \t(remove_predictions_associated_with_edge): Likewise.\n-\t\n+\n 2005-12-12  Jeff Law  <law@redhat.com>\n \n \t* tree-ssa-dom.c (simplify_rhs_and_lookup_avail_expr): Remove\n@@ -1634,7 +1634,7 @@\n \t* tree-ssa-operands.c (swap_tree_operands): Make external.\n \t(get_expr_operands): Stop auto-canonicalization.\n \t* tree-ssa-reassoc.c: Rewrite.\n-\t(init_optimization_passes): \n+\t(init_optimization_passes):\n \t* tree-flow.h (swap_tree_operands): Prototype.\n \t* Makefile.in (tree-ssa-reassoc.o): Update dependencies.\n \n@@ -1679,20 +1679,20 @@\n \tVARRAY_RTVEC, VARRAY_TREE, VARRAY_BITMAP, VARRAY_REG, VARRAY_BB,\n \tVARRAY_ELT_LIST, VARRAY_EDGE, VARRAY_TREE_PTR): Adjust definition.\n \t(VARRAY_PUSH_CHAR, VARRAY_PUSH_UCHAR, VARRAY_PUSH_SHORT,\n-\tVARRAY_PUSH_USHORT, VARRAY_PUSH_INT, VARRAY_PUSH_UINT, \n-\tVARRAY_PUSH_LONG, VARRAY_PUSH_ULONG, VARRAY_PUSH_WIDE_INT, \n-\tVARRAY_PUSH_UWIDE_INT, VARRAY_PUSH_GENERIC_PTR, \n-\tVARRAY_PUSH_GENERIC_PTR_NOGC, VARRAY_PUSH_CHAR_PTR, \n-\tVARRAY_PUSH_RTX, VARRAY_PUSH_RTVEC, VARRAY_PUSH_TREE, \n-\tVARRAY_PUSH_BITMAP, VARRAY_PUSH_REG, VARRAY_PUSH_BB, \n+\tVARRAY_PUSH_USHORT, VARRAY_PUSH_INT, VARRAY_PUSH_UINT,\n+\tVARRAY_PUSH_LONG, VARRAY_PUSH_ULONG, VARRAY_PUSH_WIDE_INT,\n+\tVARRAY_PUSH_UWIDE_INT, VARRAY_PUSH_GENERIC_PTR,\n+\tVARRAY_PUSH_GENERIC_PTR_NOGC, VARRAY_PUSH_CHAR_PTR,\n+\tVARRAY_PUSH_RTX, VARRAY_PUSH_RTVEC, VARRAY_PUSH_TREE,\n+\tVARRAY_PUSH_BITMAP, VARRAY_PUSH_REG, VARRAY_PUSH_BB,\n \tVARRAY_PUSH_EDGE, VARRAY_PUSH_TREE_PTR): Likewise.\n-\t(VARRAY_TOP_CHAR, VARRAY_TOP_UCHAR, VARRAY_TOP_SHORT, \n-\tVARRAY_TOP_USHORT, VARRAY_TOP_INT, VARRAY_TOP_UINT, \n-\tVARRAY_TOP_LONG, VARRAY_TOP_ULONG, VARRAY_TOP_WIDE_INT, \n-\tVARRAY_TOP_UWIDE_INT, VARRAY_TOP_GENERIC_PTR, \n-\tVARRAY_TOP_GENERIC_PTR_NOGC, VARRAY_TOP_CHAR_PTR, VARRAY_TOP_RTX, \n-\tVARRAY_TOP_RTVEC, VARRAY_TOP_TREE, VARRAY_TOP_BITMAP, \n-\tVARRAY_TOP_REG, VARRAY_TOP_BB, VARRAY_TOP_EDGE, \n+\t(VARRAY_TOP_CHAR, VARRAY_TOP_UCHAR, VARRAY_TOP_SHORT,\n+\tVARRAY_TOP_USHORT, VARRAY_TOP_INT, VARRAY_TOP_UINT,\n+\tVARRAY_TOP_LONG, VARRAY_TOP_ULONG, VARRAY_TOP_WIDE_INT,\n+\tVARRAY_TOP_UWIDE_INT, VARRAY_TOP_GENERIC_PTR,\n+\tVARRAY_TOP_GENERIC_PTR_NOGC, VARRAY_TOP_CHAR_PTR, VARRAY_TOP_RTX,\n+\tVARRAY_TOP_RTVEC, VARRAY_TOP_TREE, VARRAY_TOP_BITMAP,\n+\tVARRAY_TOP_REG, VARRAY_TOP_BB, VARRAY_TOP_EDGE,\n \tVARRAY_TOP_TREE_PTR): Likewise.\n \t* varray.c (varray_grow): Likewise.\n \t(varray_clear): Likewise.\n@@ -1771,7 +1771,7 @@\n \t(anyoffset_tree): Ditto.\n \t(anyoffset_id): Ditto.\n \t(do_deref): Take vector of constraints, no return value.\n-\tUpdate to work on vector.\t\t \n+\tUpdate to work on vector.\n \t(get_constraint_for): Ditto.\n \t(get_constraint_for_component_ref): Ditto.\n \t(do_structure_copy): Ditto.\n@@ -1844,7 +1844,7 @@\n \n \tPR target/25311\n \t* config/s390/s390.c (struct s390_address): New field literal_pool.\n-\t(s390_decompose_address): Compute literal_pool field.  Do not \n+\t(s390_decompose_address): Compute literal_pool field.  Do not\n \tassume register %r13 is always (and solely) used as pool base.\n \t(s390_extra_constraint_str): Use literal_pool field.\n \n@@ -1930,7 +1930,7 @@\n \t(setmem_long): Use shift_count_or_setmem_operand instead of\n \tsetmem_operand.\n \n-2005-12-08  Daniel Jacobowitz  <dan@codesourcery.com>  \n+2005-12-08  Daniel Jacobowitz  <dan@codesourcery.com>\n \t    Andreas Tobler  <a.tobler@schweiz.ch>\n \n \t* Makefile.in (ALL_GTFILES_H): Replace sed statement with more portable\n@@ -1966,13 +1966,13 @@\n \t* config/s390/s390-protos.h (s390_expand_atomic): Declare.\n \t* config/s390/s390.md (\"ATOMIC\"): New code macro.\n \t(\"atomic\"): Corresponding new code attribute.\n-\t(\"sync_lock_test_and_set[hq]i\", \n+\t(\"sync_lock_test_and_set[hq]i\",\n \t\"sync_{new_,old_,}{and,ior,xor,add,sub,nand}[hq]i\"): New pattern.\n \n 2005-12-07  Adrian Straetling  <straetling@de.ibm.com>\n \n-\t* config/s390/s390.c (s390_expand_mask_and_shift, \n-\tstruct alignment_context, init_alignment_context, \n+\t* config/s390/s390.c (s390_expand_mask_and_shift,\n+\tstruct alignment_context, init_alignment_context,\n \ts390_expand_cs_hqi): New.\n \t* config/s390/s390-protos.h (s390_expand_cs_hqi): Declare.\n \t* config/s390/s390.md (\"sync_compare_and_swaphi\",\n@@ -2592,11 +2592,11 @@\n \tis set.\n \n 2005-12-05  Daniel Berlin  <dberlin@dberlin.org>\n-\t\n+\n \t* print-tree.c (print_node): Ditto.\n \t* tree-dfa.c (add_referenced_var): Tag's don't have DECL_INITIAL.\n \t* tree-dump.c (dequeue_and_dump): Check for decl_common structure\n-\tbefore accessing DECL_ARTIFICIAL. \n+\tbefore accessing DECL_ARTIFICIAL.\n \tHandle new tag tree codes.\n \t* tree-flow-inline.h (clear_call_clobbered): Update for tag\n \tchanges.\n@@ -2608,7 +2608,7 @@\n \t* tree-ssa-alias.c (init_alias_info): Update for memory tag changes.\n \t(group_aliases): Ditto.\n \t(setup_pointers_and_addressables): Ditto.\n-\t(is_escape_site): Ditto.\t\t\t\t\t  \n+\t(is_escape_site): Ditto.\n \t(may_alias_p): Ditto.\n \t(create_tag_raw): New function.\n \t(create_memory_tag): Use it.\n@@ -2640,10 +2640,10 @@\n \t(MTAG_GLOBAL): New macro.\n \t(union tree_node): Add memory tag member.\n \t* treestruct.def (TS_MEMORY_TAG): New.\n-\t\n+\n 2005-12-05  Dale Johannesen  <dalej@apple.com>\n \n-\t* config/i386/xmmintrin.h (_MM_TRANSPOSE4_PS):  Fix to match\n+\t* config/i386/xmmintrin.h (_MM_TRANSPOSE4_PS): Fix to match\n \twhat was approved (PR 24323).\n \n 2005-12-05  Gabriel Dos Reis  <gdr@integrable-solutions.net>\n@@ -2671,7 +2671,7 @@\n \n \t* config/darwin.c (machopic_select_section): It's not defined\n \tas weak if it's only marked as weak_import.\n-\t\n+\n \t* config/darwin-protos.h (darwin_cxx_determine_class_data_visibility):\n \tPrototype.\n \n@@ -2942,7 +2942,7 @@\n \n \t* tree-pretty-print.c (op_symbol): Handle LROTATE_EXPR\n \tand RROTATE_EXPR.\n- \n+\n 2005-12-02  Alan Modra  <amodra@bigpond.net.au>\n \n \tPR target/21017\n@@ -3119,7 +3119,7 @@\n 2005-11-30  Dale Johannesen  <dalej@apple.com>\n \t    Andrew Pinski  <pinskia@physics.uc.edu>\n \n-\t* combine.c (find_split_point):  Sign extend bitmask\n+\t* combine.c (find_split_point): Sign extend bitmask\n \twhen changing bitfield assignment to IOR of AND.\n \n 2005-11-30  Nathan Sidwell  <nathan@codesourcery.com>\n@@ -3277,7 +3277,7 @@\n 2005-11-28  Nathan Sidwell  <nathan@codesourcery.com>\n \n \tPR c++/21166\n-\t* c-decl.c (finish_struct):  Only set DECL_PACKED on a field\n+\t* c-decl.c (finish_struct): Only set DECL_PACKED on a field\n \twhen its natural alignment is > BITS_PER_UNIT.\n \t* stor-layout.c (finalize_type_size): Revert my patch of 2005-08-08.\n \t* c-common.c (handle_packed_attribute): Ignore packing on a field\n@@ -4319,9 +4319,9 @@\n \n 2005-11-14  Dale Johannesen  <dalej@apple.com>\n \n-\t* expmed.c (store_bit_field):  Add offset unconditionally for\n+\t* expmed.c (store_bit_field): Add offset unconditionally for\n \tmemory targets.\n-\t(extract_bit_field):  Don't force extzv or extv operand into\n+\t(extract_bit_field): Don't force extzv or extv operand into\n \ta register if field is too big.\n \n 2005-11-14  Daniel Jacobowitz  <dan@codesourcery.com>\n@@ -5756,7 +5756,7 @@\n \t* tree.c (merge_dllimport_decl_attributes): Check DECL_DLLIMPORT_P\n \tinstead of attribute. Check for dllexport override.  Warn if\n \tinconsistent dll linkage. Don't lose old dllimport if decl has\n-\thad address referenced.   Tweak lookup of dllimport atribute.\n+\thad address referenced.  Tweak lookup of dllimport atribute.\n \t(handle_dll_attribute): Check targetm.valid_dllimport_attribute_p\n \tfor target specific rules.  Don't add dllimport attribute if\n \tDECL_DECLARED_INLINE_P.  Set DECL_DLLIMPORT_P when adding\n@@ -6188,7 +6188,7 @@\n \n 2005-10-05  Dale Johannesen  <dalej@apple.com>\n \n-\t* convert.c (convert_to_real):  Don't convert\n+\t* convert.c (convert_to_real): Don't convert\n \t(float)floor(double d) to floorf((float)d).\n \n 2005-10-05  Daniel Jacobowitz  <dan@codesourcery.com>\n@@ -6518,7 +6518,7 @@\n \n \tPR 17886\n \t* expmed.c (expand_shift): Move logic to reverse rotation\n-\tdirection when \trotating by constants ...\n+\tdirection when rotating by constants ...\n \t* optabs.c (expand_binop): ... here.\n \t* config/i386/i386.md (rotrdi3): Handle 32-bit mode.\n \t(ix86_rotrdi3): New pattern.\n@@ -7724,7 +7724,7 @@\n \n 2005-09-01  Craig Rodrigues  <rodrigc@gcc.gnu.org>\n \n-\t* c-decl.c (diagnose_mismatched_decls):  With -Wredundant-decls,\n+\t* c-decl.c (diagnose_mismatched_decls): With -Wredundant-decls,\n \tdo not issue warning for a variable definition following\n \ta declaration.\n \n@@ -7754,11 +7754,11 @@\n \n 2005-09-01  Phil Edwards  <phil@codesourcery.com>\n \n-\t* config.gcc (i*86-wrs-vxworks):  Update.  Split out vxworksae target.\n-\t* config/i386/t-vxworks:  Update multilibs for VxWorks 6 and RTP mode.\n-\t* config/i386/vxworks.h:  Likewise.\n-\t* config/i386/t-vxworksae:  New file, for VxWorks AE.\n-\t* config/i386/vxworksae.h:  Likewise.\n+\t* config.gcc (i*86-wrs-vxworks): Update.  Split out vxworksae target.\n+\t* config/i386/t-vxworks: Update multilibs for VxWorks 6 and RTP mode.\n+\t* config/i386/vxworks.h: Likewise.\n+\t* config/i386/t-vxworksae: New file, for VxWorks AE.\n+\t* config/i386/vxworksae.h: Likewise.\n \n 2005-09-01  Sebastian Pop  <pop@cri.ensmp.fr>\n \n@@ -7870,7 +7870,7 @@\n \n 2005-08-31  Dale Johannesen  <dalej@apple.com>\n \n-\t* loop-iv.c (iv_number_of_iterations):  Fix overflow check for\n+\t* loop-iv.c (iv_number_of_iterations): Fix overflow check for\n \tloops that count down.\n \n 2005-08-31  Richard Henderson  <rth@redhat.com>\n@@ -7966,7 +7966,7 @@\n \n 2005-08-28  Dale Johannesen  <dalej@apple.com>\n \n-\t* config/i386/i386.c (nocona_cost):  Increase MOVE_RATIO.\n+\t* config/i386/i386.c (nocona_cost): Increase MOVE_RATIO.\n \n 2005-08-28  Andrew Pinski  <pinskia@physics.uc.edu>\n \n@@ -8198,27 +8198,27 @@\n \n 2005-08-23  Phil Edwards  <phil@codesourcery.com>\n \n-\t* config.gcc (*-*-vxworks*):  Update tm_file, add extra_options,\n+\t* config.gcc (*-*-vxworks*): Update tm_file, add extra_options,\n \tremove use_collect2.\n-\t(powerpc-wrs-vxworks):  Update, split out *-*-vxworksae target.\n+\t(powerpc-wrs-vxworks): Update, split out *-*-vxworksae target.\n \n-\t* target-def.h (TARGET_HAVE_CTORS_DTORS):  Allow target\n+\t* target-def.h (TARGET_HAVE_CTORS_DTORS): Allow target\n \tconfiguration files to override the default value.\n \n-\t* config/t-vxworks:  Remove INSTALL_ASSERT_H.  Define STMP_FIXPROTO,\n+\t* config/t-vxworks: Remove INSTALL_ASSERT_H.  Define STMP_FIXPROTO,\n \tEXTRA_HEADERS, and EXTRA_MULTILIB_PARTS.\n-\t* config/vx-common.h:  New file, split out from...\n-\t* config/vxworks.h:  here.  Update for VxWorks 6.x and RTP mode.\n-\t* config/vxworksae.h:  New file, for VxWorks AE.\n-\t* config/vxworks.opt:  New file.\n-\t* config/vxlib.c:  Update for VxWorks 6.\n+\t* config/vx-common.h: New file, split out from...\n+\t* config/vxworks.h: here.  Update for VxWorks 6.x and RTP mode.\n+\t* config/vxworksae.h: New file, for VxWorks AE.\n+\t* config/vxworks.opt: New file.\n+\t* config/vxlib.c: Update for VxWorks 6.\n \n-\t* config/rs6000/t-vxworks (MULTILIB_OPTIONS):  New list.  Adjust\n+\t* config/rs6000/t-vxworks (MULTILIB_OPTIONS): New list.  Adjust\n \tother MULTILIB_* variables appropriately.\n-\t(LIB2FUNCS_EXTRA, EXTRA_MULTILIB_PARTS):  Correct from t-ppccomm.\n-\t* config/rs6000/t-vxworksae:  New file, adjust multilibs for AE.\n-\t* config/rs6000/vxworks.h:  Update for VxWorks 6.\n-\t* config/rs6000/vxworksae.h:  New file, mostly placeholder for now.\n+\t(LIB2FUNCS_EXTRA, EXTRA_MULTILIB_PARTS): Correct from t-ppccomm.\n+\t* config/rs6000/t-vxworksae: New file, adjust multilibs for AE.\n+\t* config/rs6000/vxworks.h: Update for VxWorks 6.\n+\t* config/rs6000/vxworksae.h: New file, mostly placeholder for now.\n \n 2005-08-23  Andrew Pinski  <pinskia@physics.uc.edu>\n \n@@ -10346,7 +10346,7 @@\n \n 2005-07-26  Dale Johannesen  <dalej@apple.com>\n \n-\t* postreload-gcse.c (alloc_mem):  Start CUID numbering at 1.\n+\t* postreload-gcse.c (alloc_mem): Start CUID numbering at 1.\n \n 2005-07-26  Mark Mitchell  <mark@codesourcery.com>\n \n@@ -11352,7 +11352,7 @@\n 2005-07-17  Daniel Berlin  <dberlin@dberlin.org>\n \n \tFix PR tree-optimization/22531\n-\t* tree-ssa-pre.c (do_eustores):  Make sure LHS is a decl for the\n+\t* tree-ssa-pre.c (do_eustores): Make sure LHS is a decl for the\n \t moment.\n \n 2005-07-17  Daniel Berlin  <dberlin@dberlin.org>\n@@ -11754,7 +11754,7 @@\n \n 2005-07-12  Dale Johannesen  <dalej@apple.com>\n \n-\t* config/rs6000.c (rs6000_rtx_cost):  Move FLOAT_EXTEND.\n+\t* config/rs6000.c (rs6000_rtx_cost): Move FLOAT_EXTEND.\n \n 2005-07-12  Andrew Pinski  <pinskia@physics.uc.edu>\n \n@@ -11763,17 +11763,17 @@\n \n 2005-07-12  Dale Johannesen  <dalej@apple.com>\n \n-\t* expr.c (compress_float_constant):  Add cost check.\n-\t* config/rs6000.c (rs6000_rtx_cost):  Adjust FLOAT_EXTEND cost.\n+\t* expr.c (compress_float_constant): Add cost check.\n+\t* config/rs6000.c (rs6000_rtx_cost): Adjust FLOAT_EXTEND cost.\n \n 2005-07-12  Dale Johannesen  <dalej@apple.com>\n \n-\t* gcc.target/i386/compress-float-sse.c:  New.\n-\t* gcc.target/i386/compress-float-sse-pic.c:  New.\n-\t* gcc.target/i386/compress-float-387.c:  New.\n-\t* gcc.target/i386/compress-float-387-pic.c:  New.\n-\t* gcc.dg/compress-float-ppc.c:  New.\n-\t* gcc.dg/compress-float-ppc-pic.c:  New.\n+\t* gcc.target/i386/compress-float-sse.c: New.\n+\t* gcc.target/i386/compress-float-sse-pic.c: New.\n+\t* gcc.target/i386/compress-float-387.c: New.\n+\t* gcc.target/i386/compress-float-387-pic.c: New.\n+\t* gcc.dg/compress-float-ppc.c: New.\n+\t* gcc.dg/compress-float-ppc-pic.c: New.\n \n 2005-07-12  Eric Christopher  <echristo@redhat.com>\n \n@@ -12193,7 +12193,7 @@\n \tto check whether we have seen arguments.\n \t* c-objc-common.c (c_tree_printer): Reverse order of tests so that\n \tflag is checked before field (flag is common, field is not).\n-\t* dwarf2out.c (decl_ultimate_origin):  Only DECL's with\n+\t* dwarf2out.c (decl_ultimate_origin): Only DECL's with\n \tTS_DECL_COMMON could have an origin.\n \t(add_location_or_const_value_attribute): Don't check section name\n \ton non-var/function decls.\n@@ -12243,7 +12243,7 @@\n \t(tree_node_structure): Update for new structures.\n \t(make_node_stat): Don't try to set DECL_IN_SYSTEM_HEADER on decls\n \twithout the field.\n-\t(copy_node_stat):  Copy init priority.\n+\t(copy_node_stat): Copy init priority.\n \t(build_decl_stat): Ditto for visibility.\n \t(ts_enum_names): New.\n \t(tree_contains_struct_check_failed): New function.\n@@ -13340,7 +13340,7 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \t(check_all_va_list_escapes): Ditto.\n \t(execute_optimize_stdarg): Ditto.\n \t* tree-tailcall.c (suitable_for_tail_opt_p): Used referenced_var\n-\titerator. \n+\titerator.\n \n 2005-06-30  Andrew Pinski  <pinskia@physics.uc.edu>\n \n@@ -13358,7 +13358,7 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \tprocess_unification_queue, init_topo_info, topo_visit,\n \tinit_scc_info, free_scc_info, perform_var_substitution,\n \tsolve_graph): Use unsigned instead of uint.\n-\t\n+\n 2005-06-30  Jakub Jelinek  <jakub@redhat.com>\n \n \t* function.c (gen_stack_protect_test): Add third argument.\n@@ -13547,9 +13547,9 @@ Older entries for 2005 can be found in ChangeLog-2005.\n 2005-06-29  Caroline Tice  <ctice@apple.com>\n \n \tFix PR 21956\n-\t* varasm.c (assemble_start_function):  Add \"L\" to beginning of\n+\t* varasm.c (assemble_start_function): Add \"L\" to beginning of\n \tlocal labels, so assembler & linker treat them as local.\n-\t\n+\n 2005-06-29  Richard Henderson  <rth@redhat.com>\n \n \t* config/i386/i386.c (ix86_expand_int_vcond): Remove unsignedp\n@@ -13575,7 +13575,7 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \t* config/i386/emmintrin.h: Likewise.\n \t* config/i386/pmmintrin.h: Likewise.\n \t* config/i386/xmmintrin.h: Likewise.\n-\t\t\t\t\t\n+\n 2005-06-29  Steve Ellcey  <sje@cup.hp.com>\n \n \tPR middle-end/21969\n@@ -13591,7 +13591,7 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \tdisplacements for addresses containing frame_pointer_rtx or\n \tvirtual_stack_vars_rtx.\n \t(s390_frame_info): Replaced use of STARTING_FRAME_OFFSET.\n-\t(s390_initial_elimination_offset): New offset when eliminating the \n+\t(s390_initial_elimination_offset): New offset when eliminating the\n \tsoft frame pointer.\n \t* config/s390/s390.h (FRAME_GROWS_DOWNWARD): Defined as 1.\n \t(STARTING_FRAME_OFFSET, STACK_DYNAMIC_OFFSET): Definitions changed.\n@@ -13842,7 +13842,7 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \n 2005-06-28  Andreas Krebbel  <krebbel1@de.ibm.com>\n \n-\t* except.c (current_function_has_exception_handlers): Function \n+\t* except.c (current_function_has_exception_handlers): Function\n \tdescription added and if statements merged.\n \n 2005-06-28  Richard Henderson  <rth@redhat.com>\n@@ -14063,7 +14063,7 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \t(assign_parm_adjust_stack_rtl): Zap stack_parm when stack protect\n \twants to copy the parameter into the stack frame.\n \t(stack_protect_prologue, stack_protect_epilogue): New.\n-\t(expand_function_end): Call stack_protect_epilogue.  Do \n+\t(expand_function_end): Call stack_protect_epilogue.  Do\n \tsjlj_emit_function_exit_after after naked_return_label.\n \t* function.h (struct function): Add stack_protect_guard.\n \t* params.def (PARAM_SSP_BUFFER_SIZE): New.\n@@ -14317,7 +14317,7 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \tCALL_EXPR_HAS_RETURN_SLOT_ADDR based on escape analysis.\n \t* tree-pass.h: Declare pass_return_slot.\n \t* tree-optimize.c (init_tree_optimization_passes): Add it.\n-\t\n+\n 2005-06-23  David Edelsohn  <edelsohn@gnu.org>\n \n \tPR target/21760\n@@ -14328,7 +14328,7 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \tpatterns test PPC405_ERRATUM77.\n \n 2005-06-23  Jan Hubicka  <jh@suse.cz>\n-\t\n+\n \t* tree-inline.c (copy_body_r): Remap labels correctly.\n \n 2005-06-22  Alan Modra  <amodra@bigpond.net.au>\n@@ -14472,7 +14472,7 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \n \t* config/ia64/ia64-modes.def (V4SF): Add.\n \t* config/ia64/ia64.c (ia64_legitimate_constant_p): Handle CONST_VECTOR.\n-\t* config/ia64/ia64.h (CANNOT_CHANGE_MODE_CLASS): Allow vector to \n+\t* config/ia64/ia64.h (CANNOT_CHANGE_MODE_CLASS): Allow vector to\n \tinteger mode changes in fp regs.\n \t* config/ia64/ia64.md (UNSPEC_VECT_EXTR): New.\n \t* config/ia64/vect.md (smaxv2sf3, sminv2sf3): Fix typos in names.\n@@ -14586,7 +14586,7 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \t* tree.def (REDUC_MAX_EXPR, REDUC_MIN_EXPR, REDUC_PLUS_EXPR): New\n \ttree-codes.\n \t* optabs.h (OTI_reduc_smax, OTI_reduc_umax, OTI_reduc_smin,\n-\tOTI_reduc_umin, OTI_reduc_plus): New optabs for reduction. \n+\tOTI_reduc_umin, OTI_reduc_plus): New optabs for reduction.\n \t(reduc_smax_optab, reduc_umax_optab, reduc_smin_optab, reduc_umin_optab,\n \treduc_plus_optab): New optabs for reduction.\n \t* expr.c (expand_expr_real_1): Handle new tree-codes.\n@@ -14595,12 +14595,12 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \tnew tree-codes.\n \t* optabs.c (optab_for_tree_code): Handle new tree-codes.\n \t(init_optabs): Initialize new optabs.\n-\t* genopinit.c (optabs): Define handlers for new optabs. \n+\t* genopinit.c (optabs): Define handlers for new optabs.\n \n \t* tree-vect-analyze.c (vect_analyze_operations): Fail vectorization in\n \tcase of a phi that is marked as relevant. Call vectorizable_reduction.\n \t(vect_mark_relevant): Phis may be marked as relevant.\n-\t(vect_mark_stmts_to_be_vectorized): The use corresponding to the \n+\t(vect_mark_stmts_to_be_vectorized): The use corresponding to the\n \treduction variable in a reduction stmt does not mark its defining phi\n \tas relevant. Update documentation accordingly.\n \t(vect_can_advance_ivs_p): Skip reduction phis.\n@@ -14609,9 +14609,9 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \t(vect_create_destination_var): Update call to vect_get_new_vect_var.\n \tHandle non-vector argument.\n \t(get_initial_def_for_reduction): New function.\n-\t(vect_create_epilog_for_reduction): New function. \n+\t(vect_create_epilog_for_reduction): New function.\n \t(vectorizable_reduction): New function.\n-\t(vect_get_new_vect_var): Handle new vect_var_kind.       \n+\t(vect_get_new_vect_var): Handle new vect_var_kind.\n \t(vectorizable_assignment, vectorizable_operation, vectorizable_store,\n \tvectorizable_condition): Update call to vect_get_new_vect_var.\n \t(vect_transform_stmt): Call vectorizable_reduction.\n@@ -14628,7 +14628,7 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \t* tree-vect-analyze.c (vect_determine_vectorization_factor): Remove\n \tENABLE_CHECKING around gcc_assert.\n \t* tree-vect-transform.c (vect_do_peeling_for_loop_bound,\n-\t(vect_do_peeling_for_alignment, vect_transform_loop, \n+\t(vect_do_peeling_for_alignment, vect_transform_loop,\n \tvect_get_vec_def_for_operand): Likewise.\n \n 2005-06-18  Joseph S. Myers  <joseph@codesourcery.com>\n@@ -14679,7 +14679,7 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \taltivec_vspltisw_v4sf): Use new 5 bit constant operand predicates.\n \t* config/rs6000/rs6000.c (rs6000_expand_unop_builtin): Fix signed\n \t5 bit constant check.\n-\t\n+\n 2005-06-17  Richard Henderson  <rth@redhat.com>\n \n \t* local-alloc.c (update_equiv_regs): Update reg_equiv_init\n@@ -14732,7 +14732,7 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \tfold_complex_mult, fold_complex_div_parts, fold_complex_div): Remove.\n \t(fold_binary): Don't call them.  Don't expand complex comparisons to\n \telementary comparisons.\n-\t* tree-complex.c (init_dont_simulate_again): Enhance search for \n+\t* tree-complex.c (init_dont_simulate_again): Enhance search for\n \tstmts that require decomposition.\n \t(complex_visit_stmt): Handle RETURN_EXPR properly.\n \t(create_components): Handle no referenced variables properly.\n@@ -14907,7 +14907,7 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \n \t* config/mips/mips.c (mips_rtx_cost_data): Add cost for 4kc, 4kp,\n \t24k and 24kx.\n-\t\n+\n 2005-06-15  Richard Sandiford  <richard@codesourcery.com>\n \n \t* doc/invoke.texi (-mips16): Fix typo.\n@@ -14921,12 +14921,12 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \t(*zero_extend<SHORT:mode><GPR:mode>2_mips16e): New pattern for\n \tmatching mips16e zeb/zeh.\n \t(*extend<SHORT:mode><GPR:mode>2_mips16e): New pattern for matching\n-\tmips16e seb/seh. \n+\tmips16e seb/seh.\n \t(*extend<SHORT:mode><GPR:mode>2): Disable this pattern for\n-\tGENERATE_MIPS16E. \n+\tGENERATE_MIPS16E.\n \t* doc/invoke.texi (MIPS Options): Add comment to -mips16\n \tindicating MIPS16e ASE is used if targetting for MIPS32 or MIPS64.\n-\t\n+\n 2005-06-15  Diego Novillo  <dnovillo@redhat.com>\n \n \tPR 22018\n@@ -15170,14 +15170,14 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \n \tFix PR tree-optimization/22005\n \tFix PR tree-optimization/22025\n-\t\n+\n \t* tree-ssa-structalias.c (struct variable_info): Add has_union\n \tmember.\n-\t(create_variable_info_for):  Mark variables containing unions.\n+\t(create_variable_info_for): Mark variables containing unions.\n \tDon't sort the field stack if notokay is true.\n \t(find_what_p_points_to): Convert variables containing unions back\n \tto their SFT's if necessary.\n-\t\n+\n 2005-06-11  Daniel Berlin  <dberlin@dberlin.org>\n \n \t* lambda-code.c (replace_uses_equiv_to_x_with_y): Verify the step\n@@ -15197,7 +15197,7 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \n \t* lambda-code.c (replace_uses_equiv_to_x_with_y): Check step\n \tand access function against chrec_dont_know.\n-\t  \n+\n 2005-06-10  Daniel Berlin  <dberlin@dberlin.org>\n \n \t* lambda-code.c (replace_uses_of_x_with_y): Renamed and rewritten\n@@ -15206,7 +15206,7 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \t(can_put_in_inner_loop): Ditto.\n \t(can_convert_to_perfect_nest): Ditto.\n \t(perfect_nestify): Create iv with right type.\n-\tRewrite statements in correct order.\t\n+\tRewrite statements in correct order.\n \n 2005-06-10  Keith Besaw  <kbesaw@us.ibm.com>\n \n@@ -15221,7 +15221,7 @@ Older entries for 2005 can be found in ChangeLog-2005.\n 2005-06-10  Dorit Nuzman  <dorit@il.ibm.com>\n \n \t* tree-vect-analyze.c (vect_analyze_data_ref_dependence): DRs whose\n-\tdependence-distance modulo VF is 0 are recorded in the \n+\tdependence-distance modulo VF is 0 are recorded in the\n \tSAME_ALIGN_REFs VEC in each DR.\n \t(vect_enhance_data_refs_alignment): Avoid 80 column overflow. The\n \talignment information of DRs that are in the SAME_ALIGN_REFs VEC of the\n@@ -15247,9 +15247,9 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \n 2005-06-09  Dale Johannesen  <dalej@apple.com>\n \n-\t* config/i386/i386.c (optimization_options):  Make -fno-math-errno\n+\t* config/i386/i386.c (optimization_options): Make -fno-math-errno\n \tthe default on Darwin.\n-\t* config/rs6000/rs6000.c (optimization_options):  Ditto.\n+\t* config/rs6000/rs6000.c (optimization_options): Ditto.\n \t* doc/invoke.texi (-fno-math-errno): Document.\n \n 2005-06-09  Dale Johannesen  <dalej@apple.com>\n@@ -15346,7 +15346,7 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \t\"invalid_within_doloop\".  Change return type to \"const char *\".\n \tUpdate Comment.\n \t* targhooks.h (default_insn_valid_within_doloop): Rename into\n-\t\"default_invalid_within_doloop\". \n+\t\"default_invalid_within_doloop\".\n \t* targhooks.c (default_insn_valid_within_doloop): Likewise.\n \tUpdate Comment.\n \t* target-def.h (TARGET_INSN_VALID_WITHIN_DOLOOP): Rename target hook\n@@ -15389,9 +15389,9 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \t* tree-complex.c (complex_lattice_t): New.\n \t(complex_lattice_values, complex_variable_components): New.\n \t(some_nonzerop, find_lattice_value, is_complex_reg,\n-\tinit_parameter_lattice_values, init_dont_simulate_again, \n+\tinit_parameter_lattice_values, init_dont_simulate_again,\n \tcomplex_visit_stmt, complex_visit_phi, create_components,\n-\tupdate_complex_components, update_parameter_components, \n+\tupdate_complex_components, update_parameter_components,\n \tupdate_phi_components, update_all_vops, expand_complex_move): New.\n \t(extract_component): Handle INDIRECT_REF, COMPONENT_REF, ARRAY_REF,\n \tSSA_NAME.\n@@ -15414,11 +15414,11 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \n 2005-06-08  Dale Johannesen  <dalej@apple.com>\n \n-\t* config/darwin.c (darwin_binds_local_p):  New.\n-\t* config/darwin-protos.h (darwin_binds_local_p):  Declare it.\n-\t* config/i386/i386.c (TARGET_BINDS_LOCAL_P):  Use it for TARGET_MACHO.\n-\t* config/rs6000/rs6000.c (rs6000_binds_local_p):  Remove.\n-\t(TARGET_BINDS_LOCAL_P):  Change it to darwin_binds_local_p.\n+\t* config/darwin.c (darwin_binds_local_p): New.\n+\t* config/darwin-protos.h (darwin_binds_local_p): Declare it.\n+\t* config/i386/i386.c (TARGET_BINDS_LOCAL_P): Use it for TARGET_MACHO.\n+\t* config/rs6000/rs6000.c (rs6000_binds_local_p): Remove.\n+\t(TARGET_BINDS_LOCAL_P): Change it to darwin_binds_local_p.\n \n 2005-06-08  Aldy Hernandez  <aldyh@redhat.com>\n \n@@ -15493,7 +15493,7 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \tFrom Jie Zhang  <jie.zhang@analog.com>\n \t* config/bfin/bfin.h (ASM_OUTPUT_ALIGN): Gas now emulates the\n \tbehavior of the native assembler in VDSP. So change accordingly.\n-\t\n+\n 2005-06-08  Sebastian Pop  <pop@cri.ensmp.fr>\n \n \t* tree-data-ref.c (compute_estimated_nb_iterations,\n@@ -15569,7 +15569,7 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \n 2005-06-07  Dale Johannesen  <dalej@apple.com>\n \n-\t* config/i386/i386.md (movqi_1):  Fix case where source\n+\t* config/i386/i386.md (movqi_1): Fix case where source\n \tis memory and destination EDI.\n \n 2005-06-08  Kazu Hirata  <kazu@codesourcery.com>\n@@ -15626,7 +15626,7 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \t(frndintxf2_floor, *fist<mode>2_floor_1): Change constants in call to\n \tassign_386_stack_local to SLOT_CW_STORED and SLOT_CW_FLOOR.\n \tUse new ix86_optimize_mode_switching[] array.\n-\t(frndintxf2_ceil, *fist<mode>2_ceil_1):  Change constants in call to\n+\t(frndintxf2_ceil, *fist<mode>2_ceil_1): Change constants in call to\n \tassign_386_stack_local to SLOT_CW_STORED and SLOT_CW_CEIL.\n \tUse new ix86_optimize_mode_switching[] array.\n \t(frndintxf2_trunc): Change constants in call to\n@@ -15645,7 +15645,7 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \n 2005-06-07  Dale Johannesen  <dalej@apple.com>\n \n-\t* tree-nested.c (finalize_nesting_tree_1):  Disable\n+\t* tree-nested.c (finalize_nesting_tree_1): Disable\n \twarn_padded around layout_type call.\n \n 2005-06-08  Zdenek Dvorak  <dvorakz@suse.cz>\n@@ -15684,7 +15684,7 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \t(evolution_function_is_invariant_rec_p,\n \tevolution_function_is_invariant_p): New.\n \t(chrec_convert): Use an extra parameter AT_STMT for refining the\n-\tinformation that is passed down to convert_step.  Integrate the \n+\tinformation that is passed down to convert_step.  Integrate the\n \tcode that was in count_ev_in_wider_type.\n \t* tree-chrec.h (count_ev_in_wider_type): Removed.\n \t(chrec_convert): Modify its declaration.\n@@ -15700,19 +15700,19 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \tanalyze_scalar_evolution_1): Initialize AT_STMT with the current\n \tanalyzed statement.\n \t(instantiate_parameters_1): Don't know yet how to initialize AT_STMT.\n-\t* tree-ssa-loop-ivopts.c (idx_find_step): Update the use of \n+\t* tree-ssa-loop-ivopts.c (idx_find_step): Update the use of\n \tcan_count_iv_in_wider_type to use convert_step.\n-\t* tree-ssa-loop-niter.c (can_count_iv_in_wider_type_bound): Move \n+\t* tree-ssa-loop-niter.c (can_count_iv_in_wider_type_bound): Move\n \tcode that is independent of the loop over the known iteration\n \tbounds to convert_step_widening, the rest is moved to\n \tproved_non_wrapping_p.\n \t(scev_probably_wraps_p): New.\n \t(can_count_iv_in_wider_type): Renamed convert_step.\n \t* tree-vrp.c (adjust_range_with_scev): Take an extra AT_STMT parameter.\n \tUse scev_probably_wraps_p for computing init_is_max.\n-\t(vrp_visit_assignment): Pass the current analyzed statement to \n+\t(vrp_visit_assignment): Pass the current analyzed statement to\n \tadjust_range_with_scev.\n-\t(execute_vrp): Call estimate_numbers_of_iterations for refining the \n+\t(execute_vrp): Call estimate_numbers_of_iterations for refining the\n \tinformation provided by scev analyzer.\n \n 2005-06-07  Eric Christopher  <echristo@redhat.com>\n@@ -15761,7 +15761,7 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \t(struct affine_tree_combination): Moved from tree-ssa-loop-ivopts.c.\n \t(create_mem_ref, addr_for_mem_ref, get_address_description,\n \tmaybe_fold_tmr, multiplier_allowed_in_address_p,\n-\tmultiply_by_cost):  Declare.\n+\tmultiply_by_cost): Declare.\n \t* tree-mudflap.c (mf_xform_derefs_1): Handle TARGET_MEM_REFs.\n \t* tree-pretty-print.c (dump_generic_node): Ditto.\n \t* tree-ssa-loop-im.c (for_each_index): Ditto.\n@@ -15850,12 +15850,12 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \t* c-lex.c (lex_string): Use XOBFINISH.\n \t* collect2.c (extract_string, dump_file): Likewise.\n \t* dbxout.c (dbxout_finish_complex_stabs): Likewise.\n-\t* gcc.c (init_spec, build_search_list, convert_filename, \n+\t* gcc.c (init_spec, build_search_list, convert_filename,\n \tset_collect_gcc_options, do_spec_2, do_spec_1, main): Likewise.\n \t* genpreds.c (write_predicate_subfunction): Likewise.\n \t* genflags.c (main): Likewise.\n-\t* read-rtl.c (mode_attr_index, apply_macro_to_string, \n-\tjoin_c_conditions, read_quoted_string, read_braced_string, \n+\t* read-rtl.c (mode_attr_index, apply_macro_to_string,\n+\tjoin_c_conditions, read_quoted_string, read_braced_string,\n \tread_rtx_1): Likewise.\n \t* stringpool.c (ggc_alloc_string): Likewise.\n \t* tlink.c (obstack_fgets, recompile_files): Likewise.\n@@ -16072,18 +16072,18 @@ Older entries for 2005 can be found in ChangeLog-2005.\n 2005-06-04  Dale Johannesen  <dalej@apple.com>\n \n \t* config/rs6000/rs6000.c (no_global_regs_above): New.\n-\t(rs6000_emit_prologue):  Use it; cosmetic formatting fixes.\n-\t(rs6000_emit_epilogue):  Use it; cosmetic formatting fixes.\n+\t(rs6000_emit_prologue): Use it; cosmetic formatting fixes.\n+\t(rs6000_emit_epilogue): Use it; cosmetic formatting fixes.\n \t(rs6000_conditional_register_usage): Don't put Darwin PIC\n \tregister in global_regs.\n-\t(rs6000_stack_info):  Don't set lr_save_p just because Darwin \n+\t(rs6000_stack_info): Don't set lr_save_p just because Darwin\n \tPIC reg used.\n-\t(rs6000_emit_prologue):  Save LR in R0 around Darwin PIC setup,\n+\t(rs6000_emit_prologue): Save LR in R0 around Darwin PIC setup,\n \tif not done by lr_save_p.\n-\t* config/rs6000/rs6000.md (insnv1_internal1):  Back out 05-18 patch.\n+\t* config/rs6000/rs6000.md (insnv1_internal1): Back out 05-18 patch.\n \tUse rotate instead of ashift.\n-\t(call_indirect_nonlocal_sysv):  Prefer CTR to LR.\n-\t(call_value_indirect_nonlocal_sysv):  Ditto.\n+\t(call_indirect_nonlocal_sysv): Prefer CTR to LR.\n+\t(call_value_indirect_nonlocal_sysv): Ditto.\n \n 2005-06-04  Jan Hubicka  <jh@suse.cz>\n \n@@ -16102,7 +16102,7 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \n \t* cfgexpand.c (expand_one_var): Use DECL_HAS_VALUE_EXPR_P.\n \t* dwarf2out.c (loc_descriptor_from_tree_1): Ditto.\n-\t* expr.c (expand_var): Ditto.\t\n+\t* expr.c (expand_var): Ditto.\n \t* function.c (gimplify_parameters): Use SET_DECL_VALUE_EXPR too.\n \t* gimplify.c (gimplify_decl_expr): Ditto.\n \t(gimplify_expr): Ditto.\n@@ -16158,7 +16158,7 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \timplicit == 1.\n \n 2005-06-03  Sebastian Pop  <pop@cri.ensmp.fr>\n-\t\n+\n \t* tree-data-ref.c (compute_self_dependence): New function.\n \t(compute_all_dependences): Use it.\n \n@@ -16179,7 +16179,7 @@ Older entries for 2005 can be found in ChangeLog-2005.\n 2005-06-03  Gabriel Dos Reis  <gdr@integrable-solutions.net>\n \n \t* configure.ac: Check declaration for asprintf, needed by\n-\tlibiberty.h. \n+\tlibiberty.h.\n \t* configure: Regenerate.\n \t* config.in: Likewise.\n \n@@ -16243,10 +16243,10 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \t* tree-complex.c (build_replicated_const, vector_inner_type,\n \tvector_last_type, vector_last_nunits, build_word_mode_vector_type,\n \telem_op_func, tree_vec_extract, do_unop, do_binop, do_plus_minus,\n-\tdo_negate, expand_vector_piecewise, expand_vector_parallel, \n-\texpand_vector_addition, expand_vector_operation, \n-\ttype_for_widest_vector_mode, expand_vector_operations_1, \n-\tgate_expand_vector_operations, expand_vector_operations, \n+\tdo_negate, expand_vector_piecewise, expand_vector_parallel,\n+\texpand_vector_addition, expand_vector_operation,\n+\ttype_for_widest_vector_mode, expand_vector_operations_1,\n+\tgate_expand_vector_operations, expand_vector_operations,\n \tpass_lower_vector_ssa): Move to tree-vect-generic.c.\n \t(tree_lower_complex): Rename from tree_lower_operations.\n \t(pass_lower_complex): Rename from pass_pre_expand.\n@@ -16257,7 +16257,7 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \n 2005-06-02  Richard Henderson  <rth@redhat.com>\n \n-\t* modulo-sched.c (doloop_register_get): Protect against \n+\t* modulo-sched.c (doloop_register_get): Protect against\n \tdoloop_end not defined.\n \n 2005-06-02  Kazu Hirata  <kazu@codesourcery.com>\n@@ -16407,7 +16407,7 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \t* tree-vectorizer.c (slpeel_update_phis_for_duplicate_loop): Use the\n \tphi_result when current_def is not available.\n \t(slpeel_update_phi_nodes_for_guard1): Don't fail if current_def is not\n-\tavailable.\t\n+\tavailable.\n \n 2005-06-02  David Edelsohn  <edelsohn@gnu.org>\n \n@@ -16481,7 +16481,7 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \t* tree-ssa-propagate.h (enum value_range_type): Move from\n \ttree-flow.h.\n \t(struct value_range_d): Likewise.\n-\tAdd field 'equiv'. \n+\tAdd field 'equiv'.\n \t(value_range_t): Rename from value_range.\n \t* tree-vrp.c (found_in_subgraph): Rename from found.\n \t(get_opposite_operand): Remove.\n@@ -16541,7 +16541,7 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \tCall find_assert_locations and process_assert_insertions.\n \t(remove_range_assertions): Add more documentation.\n \t(vrp_initialize): Change return type to void.\n-\tDo not try to guess if running VRP is worth it.  \n+\tDo not try to guess if running VRP is worth it.\n \t(compare_name_with_value): New.\n \t(compare_names): New.\n \t(vrp_evaluate_conditional): Add argument 'use_equiv_p'.  If\n@@ -16577,7 +16577,7 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \n 2005-06-01  Ramana Radhakrishnan  <ramana@codito.com>\n \n-\t* doc/rtl.texi: Remove references to NOTE_INSN_SETJMP. \n+\t* doc/rtl.texi: Remove references to NOTE_INSN_SETJMP.\n \tAdd documentation for REG_SETJMP\n \n 2005-06-01  Richard Guenther  <rguenth@gcc.gnu.org>\n@@ -16734,14 +16734,14 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \n 2005-06-01 Mostafa Hagog <mustafa@il.ibm.com>\n \n-\t* gcse.c (compute_transp, load_killed_in_block): Use \n+\t* gcse.c (compute_transp, load_killed_in_block): Use\n \tMEM_READONLY_P.\n \n 2005-06-01  David.Billinghurst  <David.Billinghurst@riotinto.com>\n \n \tPR target/21854\n \t* config/mips/mips-protos.h: Declare mips_use_ins_ext_p\n-\t\n+\n 2005-05-31  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* errors.h (warning, error, fatal, internal_error): Add printf\n@@ -16764,12 +16764,12 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \ttree-ssa-uncprop.c, tree-ssa.c, tree-vect-analyze.c,\n \ttree-vect-transform.c, tree-vectorizer.c, vec.c: Don't include\n \terrors.h and include toplev.h if necessary.\n-\t\n+\n \t* rtl.c, varray.c: If we're compiling as a GENERATOR_FILE, include\n \terrors.h otherwise include toplev.h.\n-\t\n+\n \t* Makefile.in: Update dependencies.\n-\t\n+\n 2005-06-01  Danny Smith  <dannysmith@users.sourceforge.net>\n \n \t* config/i386/cygming.h (NO_PROFILE_COUNTERS): Define.\n@@ -16802,7 +16802,7 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \t(dump_tree_statistics): Dump debug_expr hashtable stats.\n \t* tree.h (DECL_DEBUG_EXPR): Change\n \t(SET_DECL_DEBUG_EXPR): Add.\n-\t\n+\n 2005-06-01  Alan Modra  <amodra@bigpond.net.au>\n \n \t* configure.ac: Add --enable-secureplt.\n@@ -16996,7 +16996,7 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \tthe destination.  This routine is now only called when this is safe.\n \t(better_edge): New function split out from convert_regs_1 to\n \tdetermine which of two edges is better to propagate across.\n-\t(convert_regs_1):  We need only search for a best edge if the\n+\t(convert_regs_1): We need only search for a best edge if the\n \tstack layout hasn't been defined yet.  Use better_edge to help\n \tfind beste.  No longer traverse unnecessary edges.\n \n@@ -17111,7 +17111,7 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \n 2005-05-28  Jan Hubicka  <jh@suse.cz>\n \n-\t* except.c (can_throw_internal_1, can_throw_external_1): Add \n+\t* except.c (can_throw_internal_1, can_throw_external_1): Add\n \t\"is_resx\" argument.\n \t(can_throw_external, can_throw_internal): Bring into sync wrt\n \tdealing resx.\n@@ -17259,7 +17259,7 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \n \t* darwin.h (ASM_OUTPUT_LABELREF): Handle quoted non-lazy pointers\n \tfor Objective-C++.\n-\t\n+\n 2005-05-26  Richard Guenther  <rguenth@gcc.gnu.org>\n \n \t* tree-ssa-forwprop.c (forward_propagate_addr_expr):\n@@ -17346,7 +17346,7 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \twith \"var_type\".\n \t* opts.c (handle_option, option_enabled): Update after above name\n \tchange.  Cast flag_var before using it.  Handle CLVC_STRING.\n-\t\n+\n \t* config/alpha/alpha.h (alpha_tls_size): Delete.\n \t* config/alpha/alpha.c (alpha_tls_size, alpha_cpu_string)\n \t(alpha_tune_string, alpha_tp_string, alpha_fprm_string)\n@@ -17484,7 +17484,7 @@ Older entries for 2005 can be found in ChangeLog-2005.\n 2005-05-25  Daniel Berlin  <dberlin@dberlin.org>\n \n \tFix PR tree-optimization/21705\n-\t\n+\n \t* tree-ssa-pre.c (in_fre): New static variable.\n \t(create_value_expr_from): Recursively value number reference ops\n \tin argument lists.\n@@ -17523,7 +17523,7 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \n 2005-05-25  Adrian Straetling  <straetling@de.ibm.com>\n \n-\t* loop-doloop.c: Include \"target.h\". \n+\t* loop-doloop.c: Include \"target.h\".\n \t  (doloop_valid_p): Move tests to function in targhooks.c.\n \t* target.h (struct gcc_target): New target hook\n \t  \"insn_valid_within_doloop\".\n@@ -17557,10 +17557,10 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \t(tle_symbolic_operand): Likewise.\n \n 2005-05-24  DJ Delorie  <dj@redhat.com>\n-\t\n+\n \t* common.opt (-Wattributes): New.  Default true.\n \t* doc/invoke.texi (-Wno-attributes): Document.\n-\t\n+\n \t* attribs.c (decl_attributes): Move warning control from if() to\n \twarning(OPT_*).\n \t* c-common.c (handle_packed_attribute): Likewise.\n@@ -17664,7 +17664,7 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \t* configure.ac: Don't use gcc_AC_C_LONG_LONG.  Check for\n \texistence of long long and __int64 before determining their size.\n \t* aclocal.m4: Delete gcc_AC_C_LONG_LONG.\n-\t* configure, config.h.in:  Regenerate.\n+\t* configure, config.h.in: Regenerate.\n \n 2005-05-24  Kelley Cook  <kcook@gcc.gnu.org>\n \n@@ -17730,13 +17730,13 @@ Older entries for 2005 can be found in ChangeLog-2005.\n 2005-05-24  Nick Clifton  <nickc@redhat.com>\n \n \t* config/rs6000/rs6000-c.c (rs6000_cpu_cpp_builtins): Define\n-\t__NO_FPRS__ when 'f' class registers will not be available. \n+\t__NO_FPRS__ when 'f' class registers will not be available.\n \n 2005-05-24  Kazuhiro Inaoka <inaoka.kazuhiro@renesas.com>\n \n-\t* config/m32r/m32r.c (m32r_expand_block_move):  Return 0 if\n+\t* config/m32r/m32r.c (m32r_expand_block_move): Return 0 if\n \tnothing was done.\n-\t* config/m32r/m32r.md (movmemsi):  If m32r_expand_block_move did\n+\t* config/m32r/m32r.md (movmemsi): If m32r_expand_block_move did\n \tnothing then FAIL.\n \t* config/m32r/m32r/m32r-protos.h  (m32r_expand_block_move): Update\n \tprototype.\n@@ -17856,7 +17856,7 @@ Older entries for 2005 can be found in ChangeLog-2005.\n 2005-05-19  Richard Henderson  <rth@redhat.com>\n \n \tPR target/21390\n-\t* config/alpha/alpha.c (alpha_emit_conditional_branch): Move \n+\t* config/alpha/alpha.c (alpha_emit_conditional_branch): Move\n \tTFmode code swapping ...\n \t(alpha_emit_xfloating_compare): ... here.\n \t(alpha_emit_setcc): Update to match.\n@@ -17919,7 +17919,7 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \n \t* config/rs6000/rs6000.md (insvsi_internal1): Subtract shift from\n \tthe mask end.\n-\t\n+\n 2005-05-18  Richard Henderson  <rth@redhat.com>\n \n \t* tree-ssa-forwprop.c (cfg_changed): New.\n@@ -17969,7 +17969,7 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \t* rs6000/predicates.md (fix_trunc_dest_operand): New.\n \t* rs6000/rs6000.md (fix_truncdfsi2): Use fix_trunc_dest_operand.\n \tCheck that a memory operand is valid before trying to use it.\n-\t\n+\n \t* tree-cfg.c (pass_remove_useless): This pass works on trees.\n \n 2005-05-18  Richard Guenther  <rguenth@gcc.gnu.org>\n@@ -18066,7 +18066,7 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \t* cfgrtl.c (purge_dead_edges): Don't remove fake edges.\n \n 2005-05-18  Daniel Berlin  <dberlin@dberlin.org>\n-\t\n+\n \tFix PR tree-optimization/21407\n \n \t* tree-ssa-operands.c (note_addressable): Change\n@@ -18142,7 +18142,7 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \t(fobjc-sjlj-exceptions): Likewise.\n \t* config/rs6000/darwin.h (OFFS_MSGSEND_FAST): Add.\n \t(OFFS_ASSIGNIVAR_FAST): Add.\n-\t\n+\n 2005-05-17  Eric Botcazou  <ebotcazou@libertysurf.fr>\n \n \t* config/sparc/sparc.md (movhi): Do not test constness\n@@ -18304,7 +18304,7 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \tappropriate.\n \t* unwind-dw2-fde.c (__deregister_frame_info_bases,\n \tbase_from_object, fde_split, end_fde_sort): Likewise.\n-\t* unwind-dw2.c (_Unwind_GetGR, _Unwind_SetGR, execute_stack_op, \n+\t* unwind-dw2.c (_Unwind_GetGR, _Unwind_SetGR, execute_stack_op,\n \texecute_cfa_program, _Unwind_SetSpColumn, uw_update_context_1,\n \tuw_init_context_1): Likewise.\n \t* unwind.inc (_Unwind_RaiseException_Phase2, _Unwind_Resume,\n@@ -18517,7 +18517,7 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \t    Steven Bosscher <stevenb@suse.de>\n \n \tPR tree-opt/21399\n-\t* tree-eh.c (maybe_clean_or_replace_eh_stmt): Rename from \n+\t* tree-eh.c (maybe_clean_or_replace_eh_stmt): Rename from\n \tmaybe_clean_eh_stmt; take old stmt parameter.  Update EH\n \tregion data structure to match replacement.\n \t* tree-flow.h: Update to match.\n@@ -18528,19 +18528,19 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \n 2005-05-16  Caroline Tice  <ctice@apple.com>\n \n-\t* bb-reorder.c (verify_hot_cold_block_grouping):  Replace\n+\t* bb-reorder.c (verify_hot_cold_block_grouping): Replace\n \tinternal_error with gcc_assert.\n-\t* dwarf2out.c (dwarf2out_switch_text_section):  Likewise.\n+\t* dwarf2out.c (dwarf2out_switch_text_section): Likewise.\n \t* function.h (struct function): Remove space between \"*\" and\n \tstruct field names.\n-\t* varasm.c (initialize_cold_section_name):   Add gcc_assert;\n+\t* varasm.c (initialize_cold_section_name):  Add gcc_assert;\n \tmodify to use alloca.\n \t(unlikely_text_section): Add check for flag_function_sections.\n-\t(assemble_start_function):  Move call to resolve_section, so it\n+\t(assemble_start_function): Move call to resolve_section, so it\n \tcomes before first call to unlikely_text_section.\n-\t(assemble_end_function):  Add test and call to function_section\n+\t(assemble_end_function): Add test and call to function_section\n \tif appropriate.\n-\t\n+\n 2005-05-16  Roger Sayle  <roger@eyesopen.com>\n \n \t* c-common.c (c_common_truthvalue_conversion): Use fold_build2\n@@ -18571,11 +18571,11 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \n 2005-05-16  Fariborz Jahanian <fjahanian@apple.com>\n \n-\t* config/rs6000/altivec.md (altivec_vmrghb, altivec_vmrghh, \n+\t* config/rs6000/altivec.md (altivec_vmrghb, altivec_vmrghh,\n \taltivec_vmrghw, altivec_vmrglb, altivec_vmrglh, altivec_vmrglw):\n \tNew values for vec_select definitions and bitmask for element\n \tselection.\n-\t \n+\n 2005-05-16  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* dwarf2out.c (used_rtx_varray): Rename to used_rtx_array.\n@@ -18616,9 +18616,9 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \t* config/ia64/ia64.c (ia64_expand_move): Don't add addend twice.\n \n 2005-05-15  Daniel Berlin  <dberlin@dberlin.org>\n-\t    \n+\n \tFix PR tree-optimization/21576\n-\t\n+\n \t* tree-ssa-pre.c (expression_node_pool): New pool.\n \t(comparison_node_pool): Ditto.\n \t(list_node_pool): Ditto.\n@@ -19113,21 +19113,21 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \tfor a 3 operand mul and its bypasses.\n \t* config/mips/3000.md (r3k_imul): Add imul3 to reservations.\n \t* config/mips/4000.md (r4k_imul): Likewise.\n-\t* config/mips/4100.md (r4100_imul_si, r4100_imul_di):  Likewise.\n+\t* config/mips/4100.md (r4100_imul_si, r4100_imul_di): Likewise.\n \t* config/mips/4130.md (vr4130_class, vr4130_mulsi)\n \t(vr4130_muldi): Likewise.\n \t* config/mips/4300.md (r4300_imul_si, r4300_imul_di): Likewise.\n \t* config/mips/4600.md (r4600_imul, r4650_imul): Likewise.\n \t* config/mips/5000.md (r5k_imul_si, r5k_imul_di): Likewise.\n \t* config/mips/5400.md (ir_vr54_imul_si, ir_vr54_imul_di)\n \t(ir_vr54_imadd_si): Likewise.\n-\t* config/mips/5500.md (ir_vr55_imul_si, ir_vr55_imul_di):  Likewise.\n+\t* config/mips/5500.md (ir_vr55_imul_si, ir_vr55_imul_di): Likewise.\n \t* config/mips/7000.md (rm7_impy_si_mult, rm7_impy_si_mul)\n \t(rm7_impy_di): Likewise.\n-\t* config/mips/9000.md (rm9k_mulsi, rm9k_muldi):  Likewise.\n+\t* config/mips/9000.md (rm9k_mulsi, rm9k_muldi): Likewise.\n \t* config/mips/generic.md (generic_imul): Likewise.\n \t* config/mips/sb1.md (ir_sb1_mulsi, ir_sb1_muldi): Likewise.\n-\t* config/mips/sr71k.md (ir_sr70_imul_si, ir_sr70_imul_di):  Likewise.\n+\t* config/mips/sr71k.md (ir_sr70_imul_si, ir_sr70_imul_di): Likewise.\n \n 2005-05-11  J\"orn Rennecke <joern.rennecke@st.com>\n \n@@ -19465,7 +19465,7 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \t* c-tree.h (parser_build_unary_op): New prototype.\n \t* c-typeck.c (parser_build_unary_op): New function to construct\n \ta unary operation in the C parser.\n-\t* c-parser.c (c_parser_unary_expression):  Use the new function\n+\t* c-parser.c (c_parser_unary_expression): Use the new function\n \tparser_build_unary_op when appropriate.\n \n 2005-05-09  Mark Mitchell  <mark@codesourcery.com>\n@@ -20845,7 +20845,7 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \tZERO_SSA_OPERANDS.\n \t* tree-ssa-sink.c (is_hidden_global_store): Use ZERO_SSA_OPERANDS.\n \t(statement_sink_location): Use generic interface.\n-\t* tree-ssa.c (verify_ssa):  Use %p in fprintf.  Use generic interface.\n+\t* tree-ssa.c (verify_ssa): Use %p in fprintf.  Use generic interface.\n \t(delete_tree_ssa): Don't call release_defs.  Call release_ssa_name and\n \treset the immediate use link nodes.\n \t(stmt_references_memory_p): Use ZERO_SSA_OPERANDS.\n@@ -21506,12 +21506,12 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \t(cold_section_end_label): Remove.\n \t(unlikely_section_label): Remove.\n \t(unlikely_text_section_name): Remove.\n-\t* passes.c (rest_of_handle_final):  Remove extra blank line.\n+\t* passes.c (rest_of_handle_final): Remove extra blank line.\n \t* varasm.c (unlikely_section_label): Remove.\n \t(hot_section_label): Remove.\n \t(hot_section_end_label): Remove.\n \t(cold_section_end_label): Remove.\n-\t(unlikely_text_section_name):  Remove.\n+\t(unlikely_text_section_name): Remove.\n \t(initialize_cold_section_name): Modify to call\n \ttargetm.strip_name_encoding; to store cold section name in current\n \tfunction struct, if it exists; and to only use the decl_section_name\n@@ -21522,7 +21522,7 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \t(in_unlikely_text_section): Likewise.\n \t(named_section): Modify to get/put cold section name in current function\n \tstruct, if there is one.\n-\t(function_section):  Change 'bool unlikely' to 'int reloc'; check\n+\t(function_section): Change 'bool unlikely' to 'int reloc'; check\n \ttargetm.have_named_sections before calling named_section.\n \t(current_function_section): Likewise.\n \t(assemble_start_function): Modify to get/put unlikely_text_section_name\n@@ -21532,7 +21532,7 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \ttest partitioning flag before writing out hot section label.\n \t(assemble_end_function): Test partitioning flag before writing out\n \thot/cold section labels.\n-\t(default_section_type_flags_1):  Get cold text section name from\n+\t(default_section_type_flags_1): Get cold text section name from\n \tfunction struct if there is one; Set flags correctly for\n \tcold text section if there is not a current function struct.\n \n@@ -22014,7 +22014,7 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \n 2005-04-24  Per Bothner  <per@bothner.com>\n \n-\t* c-opts.c (finish_options):  Make the line-number of the <built-in>\n+\t* c-opts.c (finish_options): Make the line-number of the <built-in>\n \tlocation 0, as assumed elsewhere, rather than 1.\n \n 2005-04-24  Kazu Hirata  <kazu@cs.umass.edu>\n@@ -22945,7 +22945,7 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \t(struct macro_def): New.\n \t(struct macro): Add multiple argument values.\n \t(macro_expans_end): New.\n-\t(push_macro_expansion):  Chain on new macro. Process multiple\n+\t(push_macro_expansion): Chain on new macro. Process multiple\n \targs, create follow on expansion. Return follow on argument.\n \t(macro_input): Deal with multiple arguments.\n \n@@ -23328,7 +23328,7 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \n 2005-04-19  James A. Morrison  <phython@gcc.gnu.org>\n \n-\t* fold-const (fold_binary):  Fold ~X ^ ~ Y to X ^ Y.\n+\t* fold-const (fold_binary): Fold ~X ^ ~ Y to X ^ Y.\n \n 2005-04-20  Michael Pogue  <michael.pogue@sun.com>\n \t    Joseph S. Myers  <joseph@codesourcery.com>\n@@ -23399,7 +23399,7 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \n 2005-04-18  Christopher Jaillet <christophe.jaillet@wanadoo.fr>\n \n-\t* config/rs6000/rs6000.c (machopic_output_stub):  Increase\n+\t* config/rs6000/rs6000.c (machopic_output_stub): Increase\n \talloca argument to be big enough.\n \n 2005-04-18  Alexandre Oliva  <aoliva@redhat.com>\n@@ -23934,13 +23934,13 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \n 2005-04-13  Dale Johannesen  <dalej@apple.com>\n \n-\t* objc/Make-lang.in (objc-lang.o):  Depend on tree-gimple.h.\n-\t(objc-act.o):  Ditto.\n-\t* objc/objc-act.c (objc_gimplify_expr):  New.\n-\t(objc_get_callee_fndecl):  New.\n-\t* objc/objc-act.h:  Include tree-gimple.h.  Declare new functions.\n-\t* objc/objc-lang.c (LANG_HOOKS_GIMPLIFY_EXPR):  Define.\n-\t(LANG_HOOKS_GET_CALLEE_FNDECL):  Define.\n+\t* objc/Make-lang.in (objc-lang.o): Depend on tree-gimple.h.\n+\t(objc-act.o): Ditto.\n+\t* objc/objc-act.c (objc_gimplify_expr): New.\n+\t(objc_get_callee_fndecl): New.\n+\t* objc/objc-act.h: Include tree-gimple.h.  Declare new functions.\n+\t* objc/objc-lang.c (LANG_HOOKS_GIMPLIFY_EXPR): Define.\n+\t(LANG_HOOKS_GET_CALLEE_FNDECL): Define.\n \n 2005-04-13  Devang Patel  <dpatel@apple.com>\n \n@@ -24185,16 +24185,16 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \t(insert_section_boundary_note): Revert my patch from April 9.\n \t* dbxout.c (dbxout_function_end): Revert my patch from April 9.\n \t* dwarf2out.c (COLD_TEXT_SECTION_LABEL): Revert my patch from April 9.\n-\t(COLD_END_LABEL):  Revert my patch from April 9.\n-\t(cold_text_section_label):  Revert my patch from April 9.\n+\t(COLD_END_LABEL): Revert my patch from April 9.\n+\t(cold_text_section_label): Revert my patch from April 9.\n \t(cold_end_label): Revert my patch from April 9.\n \t(dwarf2out_switch_text_section): Revert my patch from April 9.\n \t(output_aranges): Revert my patch from April 9.\n-\t(output_ranges):  Revert my patch from April 9.\n+\t(output_ranges): Revert my patch from April 9.\n \t(output_line_info): Revert my patch from April 9.\n-\t(add_location_or_const_value_attribute):  Revert my patch from April 9.\n+\t(add_location_or_const_value_attribute): Revert my patch from April 9.\n \t(dwarf2out_var_location): Revert my patch from April 9.\n-\t(dwarf2out_init):  Revert my patch from April 9.\n+\t(dwarf2out_init): Revert my patch from April 9.\n \t(dwarf2out_finish): Revert my patch from April 9.\n \t* function.h (struct function): Revert my patch from April 9.\n \t* opts.c (decode_options): Revert my patch from April 9.\n@@ -24607,13 +24607,13 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \t(cold_section_end_label): Remove.\n \t(unlikely_section_label): Remove.\n \t(unlikely_text_section_name): Remove.\n-\t* passes.c (rest_of_handle_final):  Remove code that frees\n+\t* passes.c (rest_of_handle_final): Remove code that frees\n \tunlikely_text_section_name.\n \t* varasm.c (unlikely_section_label): Remove.\n \t(hot_section_label): Remove.\n \t(hot_section_end_label): Remove.\n \t(cold_section_end_label): Remove.\n-\t(unlikely_text_section_name):  Remove.\n+\t(unlikely_text_section_name): Remove.\n \t(initialize_cold_section_name): Modify to call\n \ttargetm.strip_name_encoding; to store cold section name in current\n \tfunction struct, if it exists; and to only use the decl_section_name\n@@ -24624,7 +24624,7 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \t(in_unlikely_text_section): Likewise.\n \t(named_section): Modify to get/put cold section name in current function\n \tstruct, if there is one.\n-\t(function_section):  Change 'bool unlikely' to 'int reloc'; check\n+\t(function_section): Change 'bool unlikely' to 'int reloc'; check\n \ttargetm.have_named_sections before calling named_section.\n \t(current_function_section): Likewise.\n \t(assemble_start_function): Modify to get/put unlikely_text_section_name\n@@ -24634,7 +24634,7 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \ttest partitioning flag before writing out hot section label.\n \t(assemble_end_function): Test partitioning flag before writing out\n \thot/cold section labels.\n-\t(default_section_type_flags_1):  Modify to use array instead of\n+\t(default_section_type_flags_1): Modify to use array instead of\n \t char* for unlikely_text_section_name; set flags correctly for\n \t cold text section if there is not a current function decl.\n \n@@ -25540,7 +25540,7 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \tcompute_immediate_uses.\n \t* tree-optimize.c (execute_todo): Call verify_ssa whenever the\n \tssa_property is available.\n-\t(execute_one_pass):  Change parameters passed to execute_todo.\n+\t(execute_one_pass): Change parameters passed to execute_todo.\n \t* tree-outof-ssa.c (rewrite_trees): Don't call modify_stmt.\n \t(remove_ssa_form): Call fini_ssa_operands.\n \t(insert_backedge_copies): Delete call to modify_stmt.\n@@ -25659,10 +25659,10 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \n 2005-04-05  Dale Johannesen  <dalej@apple.com>\n \n-\t* doc/invoke.texi (Optimization Options):  Remove\n+\t* doc/invoke.texi (Optimization Options): Remove\n \tduplicate -fcse-follow-jumps.  Add -fweb.\n-\t(-ftree-lim):  Fix spelling (-ftree-loop-im, invariants).\n-\t(-fivcanon):  Fix spelling (-ftree-loop-ivcanon).\n+\t(-ftree-lim): Fix spelling (-ftree-loop-im, invariants).\n+\t(-fivcanon): Fix spelling (-ftree-loop-ivcanon).\n \n 2005-04-05  Per Bothner  <per@bothner.com>\n \n@@ -25833,7 +25833,7 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \n 2005-04-04  Dale Johannesen  <dalej@apple.com>\n \n-\t* ChangeLog:  remove reference to ChangeLog.12.\n+\t* ChangeLog: remove reference to ChangeLog.12.\n \n 2005-04-05  Hans-Peter Nilsson  <hp@axis.com>\n \n@@ -26620,15 +26620,15 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \tprofiledbootstrap flags.\n \t* bb-reorder.c (errors.h): Add new include.\n \t(struct bbro_basic_block_data_def): Add new field, in_trace.\n-\t(add_unlikely_executed_notes):  Remove function.\n+\t(add_unlikely_executed_notes): Remove function.\n \t(mark_bb_for_unlikely_executed_section): Remove function.\n \t(insert_section_boundary_note): New function.\n \t(verify_hot_cold_block_grouping): New function.\n \t(push_to_next_round_p): Remove variables and tests that push all\n \tcold blocks to last round.\n \t(find_traces): Remove code that added extra round of trace finding\n \twhen doing partitioning.\n-\t(find_traces_1_round) :  Remove variable last_round;  add code to\n+\t(find_traces_1_round) : Remove variable last_round;  add code to\n \tupdate new struct field, in_trace; correct trace_length where it was\n \tincorrect before (after call to copy_bb); change code that pushed all\n \tcold blocks to last round. Instead verify that all blocks going into\n@@ -26638,19 +26638,19 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \tall the traces for blocks in the partition that the first block in\n \tthe function belongs to; the second pass connnects all the traces\n \tcontaining blocks that belong in the other partition.\n-\t(find_rarely_executed_basic_blocks_and_crossing_edges):  Remove\n+\t(find_rarely_executed_basic_blocks_and_crossing_edges): Remove\n \tcode that automatically put the first block in a function into the\n \thot partition if the function had any hot blocks.\n \t(fix_crossing_unconditional_branches): Check number of succ edges\n \tbefore attempting to get one.\n-\t(fix_edges_for_rarely_executed_code):  Update comment describing\n+\t(fix_edges_for_rarely_executed_code): Update comment describing\n \tfunction.\n-\t(reorder_basic_blocks):  Add code to initialize new field (in_trace);\n+\t(reorder_basic_blocks): Add code to initialize new field (in_trace);\n \tremove call to add_unlikely_executed_notes; add call to\n \tverify_hot_cold_block_grouping.\n \t(duplicate_computed_gotos): Don't change computed goto if it's a\n \tcrossing edge.\n-\t(partition_hot_cold_basic_blocks):  Update function comment.\n+\t(partition_hot_cold_basic_blocks): Update function comment.\n \t* cfgcleanup.c (try_simplify_condjump): Remove redundacy from\n \tcondition.\n \t(try_forward_edges): Likewise.\n@@ -26661,7 +26661,7 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \t* cfglayout.c (update_unlikely_executed_notes): Remove function.\n \t(fixup_reorder_chain): Remove code for adding UNLIKELY_EXECUTED_CODE\n \tnotes to cold bb's; remove call to update_unlikely_executed_notes.\n-\t(duplicate_insn_chain):  change NOTE_INSN_UNLIKELY_EXECUTED_CODE to\n+\t(duplicate_insn_chain): change NOTE_INSN_UNLIKELY_EXECUTED_CODE to\n \tNOTE_INSN_SWITCH_TEXT_SECTIONS.\n \t* cfglayout.h (scan_ahead_for_unlikely_executed_note): Remove\n \tfunction declaration.\n@@ -26682,13 +26682,13 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \thot and cold sections.\n \t* debug.c (struct do_nothing_debug_hooks): Add do_nothing function\n \tfor new debug_hooks funciton, switch_text_section..\n-\t* debug.h (struct gcc_debug_hooks):  Add new function to debug_hooks,\n+\t* debug.h (struct gcc_debug_hooks): Add new function to debug_hooks,\n \tswitch_text_section.\n-\t* dwarf2out.c (struct dw_fde_struct):  Add five new fields:\n+\t* dwarf2out.c (struct dw_fde_struct): Add five new fields:\n \tdw_fde_hot_section_label, dw_fde_hot_section_end_label,\n \tdw_fde_unlikely_section_label, dw_fde_unlikely_section_end_label and\n \tdw_fde_switched_sections.\n-\t(output_call_frame_info):  Add test to see if function switches text\n+\t(output_call_frame_info): Add test to see if function switches text\n \tsections in the middle; if so, use appropriate extra hot and cold\n \tsection labels to compute size deltas for the hot and cold sections.\n \t(dwarf2out_begin_prologue): Add code to initialize new fields in\n@@ -26716,7 +26716,7 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \tfunction_section into call to current_function_section.\n \t* final.c (profile_function): Likewise.\n \t(scan_ahead_for_unlikely_executed_note): Remove function.\n-\t(final_scan_insn):  Remove calls to\n+\t(final_scan_insn): Remove calls to\n \tscan_ahead_for_unlikely_executed_note, and related code for switching\n \tto cold section, except for the single time\n \tNOTE_INSN_SWITCH_TEXT_SECTIONS may be encountered;  add calls to\n@@ -26774,13 +26774,13 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \tprint hot and cold section labels at the start of the function;\n \tset first_function_block_is_cold, if appropriate; initialize l\n \tast_text_section; add call to insert_section_boundary_note.\n-\t(assemble_end_function):  Add code to write out hot and cold section\n+\t(assemble_end_function): Add code to write out hot and cold section\n \tend labels.\n \t*vmsdbgout.c (vmsdbg_debug_hooks): Add do_nothing for new function,\n \tswitch_text_section.\n \t* config/darwin.c (machopic_select_section): Replace incorrect\n \tfunction in base_funs; update reloc for cold sections if necessary.\n-\t* config/darwin.h (SECTION_FUNCTION):  Add code to update\n+\t* config/darwin.h (SECTION_FUNCTION): Add code to update\n \tlast_text_section if appropriate.\n \t(text_unlikely_section): Remove.\n \t* config/sparc/sparc.c (sparc_output_deferred_case_vectors): Likewise.\n@@ -26822,8 +26822,8 @@ Older entries for 2005 can be found in ChangeLog-2005.\n 2005-03-30  Stuart Hastings  <stuart@apple.com>\n \t    Dale Johannesen  <dalej@apple.com>\n \n-\t* Makefile.in (print-tree.o):  Depend on tree-iterator.h.\n-\t* print-tree.c (print_node):  Add case STATEMENT_LIST.\n+\t* Makefile.in (print-tree.o): Depend on tree-iterator.h.\n+\t* print-tree.c (print_node): Add case STATEMENT_LIST.\n \n 2005-03-31  Alan Modra  <amodra@bigpond.net.au>\n \n@@ -26929,7 +26929,7 @@ Older entries for 2005 can be found in ChangeLog-2005.\n 2005-03-30  Dale Johannesen  <dalej@apple.com>\n \n \tPR middle-end/19225\n-\t* calls.c (expand_call):  Flush pending deferrals before\n+\t* calls.c (expand_call): Flush pending deferrals before\n \tthrowing call.\n \n 2005-03-30  Joseph S. Myers  <joseph@codesourcery.com>\n@@ -26950,7 +26950,7 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \t(c_start_case): Initialize it.\n \t(do_case): Check it.\n \t(c_finish_case): Verify !blocked_stmt_expr.\n-\t(c_begin_stmt_expr):  Push context on label_context_stack.\n+\t(c_begin_stmt_expr): Push context on label_context_stack.\n \tIncrement blocked_stmt_expr.  Mark labels jumped to from outside\n \tas undefinable.\n \t(c_finish_stmt_expr): December blocked_stmt_expr.  Mark labels\n@@ -27269,7 +27269,7 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \t(tree_mod_pow2_value_transform): New.\n \t(tree_mod_subtract_transform): New.\n \t(tree_find_values_to_profile): Implement.\n-\t* profile.c (instrument_values):  Free histograms.\n+\t* profile.c (instrument_values): Free histograms.\n \t(compute_value_histograms): Adjust. Implement tree version.\n \n 2005-03-29  Uros Bizjak  <uros@kss-loka.si>\n@@ -28457,7 +28457,7 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \n 2005-03-16 Dale Johannesen  <dalej@apple.com>\n \n-\t* rtlanal.c (find_first_parameter_load):  Rewrite to\n+\t* rtlanal.c (find_first_parameter_load): Rewrite to\n \treturn actual first param load or the call if none,\n \tinstead of first in block, when not all loads exist.\n \n@@ -30101,7 +30101,7 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \t(redirect_edges): Clear EDGE_ABNORMAL.  If edges were threaded\n \tthen record that fact for the callers of redirct_edges.\n \t(thread_block): If BB has incoming backedges, then call\n-\tprune_undesirable_thraed_requests.    Note when we are\n+\tprune_undesirable_thraed_requests.  Note when we are\n \tgoing to have to rediscover loop information.  Return a\n \tboolean indicating if any jumps were threaded.\n \t(thread_through_all_blocks): Bubble up boolean indicating\n@@ -30548,19 +30548,19 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \tRewrite of 64-bit Darwin structure-by-value pass/return.\n \t* config/rs6000/rs6000.h (CUMULATIVE_ARGS): New fields\n \tintoffset, use_stack, named.\n-\t* config/rs6000/rs6000.c (rs6000_darwin64_function_arg):  Remove.\n-\t(rs6000_darwin64_record_arg_advance_flush):  New.\n+\t* config/rs6000/rs6000.c (rs6000_darwin64_function_arg): Remove.\n+\t(rs6000_darwin64_record_arg_advance_flush): New.\n \t(rs6000_darwin64_record_arg_advance_recurse): New.\n-\t(rs6000_darwin64_record_arg_flush):  New.\n-\t(rs6000_darwin64_record_arg_recurse):  New.\n-\t(rs6000_darwin64_record_arg):  New.\n-\t(rs6000_return_in_memory):  Remove AGGREGATE_TYPE_P check.\n-\t(function_arg_boundary):  Handle 128-bit aligned structs.\n-\t(function_arg_advance):  Rewrite darwin64 struct handling.\n-\t(function_arg):  Call rs6000_darwin64_record_arg.\n-\t(function_arg_partial_nregs):  Handle darwin64 structs.\n-\t(rs6000_darwin64_function_value):  Remove.\n-\t(rs6000_function_value):  Call rs6000_darwin64_record_arg.\n+\t(rs6000_darwin64_record_arg_flush): New.\n+\t(rs6000_darwin64_record_arg_recurse): New.\n+\t(rs6000_darwin64_record_arg): New.\n+\t(rs6000_return_in_memory): Remove AGGREGATE_TYPE_P check.\n+\t(function_arg_boundary): Handle 128-bit aligned structs.\n+\t(function_arg_advance): Rewrite darwin64 struct handling.\n+\t(function_arg): Call rs6000_darwin64_record_arg.\n+\t(function_arg_partial_nregs): Handle darwin64 structs.\n+\t(rs6000_darwin64_function_value): Remove.\n+\t(rs6000_function_value): Call rs6000_darwin64_record_arg.\n \n 2005-02-28  Roger Sayle  <roger@eyesopen.com>\n \n@@ -32004,7 +32004,7 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \n 2005-02-11  Dale Johannesen  <dalej@apple.com>\n \n-\t* cselib.c (cselib_process_insn):  Clear out regs where\n+\t* cselib.c (cselib_process_insn): Clear out regs where\n \tHARD_REGNO_CALL_PART_CLOBBERED is true at a call.\n \t* reload.c (find_equiv_reg): Ditto.\n \n@@ -32173,7 +32173,7 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \t* tree.h (fold_strip_sign_ops): Prototype here.\n \t* builtins.c (fold_builtin_copysign): Take an additional FNDECL\n \targument.  Use fold_strip_sign_ops to simplify the first argument.\n-\t(fold_builtin_pow):  Use fold_strip_sign_ops to simplify the\n+\t(fold_builtin_pow): Use fold_strip_sign_ops to simplify the\n \tfirst argument when the second argument is an even integer\n \tconstant, but only with -funsafe_math_optimizations.\n \t(fold_builtin_1): Update call to fold_builtin_copysign.\n@@ -32870,7 +32870,7 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \n \t* tree-into-ssa.c (mark_def_sites_global_data): Make KILLS\n \tbitmap a sparse bitmap instead of a simple bitmap.\n-\t(mark_def_sites_initialize_block):  Corresponding changes.\n+\t(mark_def_sites_initialize_block): Corresponding changes.\n \t(ssa_mark_def_sites_initialize_block): Likewise.\n \t(ssa_mark_phi_uses): Likewise.\n \t(mark_def_site, ssa_mark_def_sites): Likewise.\n@@ -32954,8 +32954,8 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \n 2005-01-31  Dale Johannesen  <dalej@apple.com>\n \n-\t* config/rs6000/darwin.md (movsf_low_di):  Make work.\n-\t(movdf_low_di):  Make work.\n+\t* config/rs6000/darwin.md (movsf_low_di): Make work.\n+\t(movdf_low_di): Make work.\n \n 2005-01-31  Dale Johannesen  <dalej@apple.com>\n \n@@ -33014,7 +33014,7 @@ Older entries for 2005 can be found in ChangeLog-2005.\n 2005-01-31  Danny Smith  <dannysmith@users.sourceforge.net>\n \n \tPR target/19704\n-\t* config/i386/i386.c (ix86_function_ok_for_sibcall):  Also check\n+\t* config/i386/i386.c (ix86_function_ok_for_sibcall): Also check\n \tthat dllimport'd functions do not use all call-clobbered registers\n \tto pass parameters.\n \n@@ -33934,7 +33934,7 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \t* real.c (real_arithmetic): Change return type from void to bool\n \tto return an indication that the result may be inexact.\n \t* real.h (real_arithmeric): Update prototype.\n-\t* fold-const.c (const_binop):  Don't constant fold floating\n+\t* fold-const.c (const_binop): Don't constant fold floating\n \tpoint expressions when the user specifies -frounding-math and\n \tthe result may depend upon the run-time rounding mode.\n \t(fold_convert_const_real_from_real): Clean-up.\n@@ -34563,7 +34563,7 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \n \t* config.gcc (*-*-openbsd*): Set HAS_LIBC_R for OpenBSD <= 3.2.\n \t(i[34567]86-*-openbsd*): Switch to ELF for OpenBSD >= 3.4.\n-\t* config/openbsd.h:  Fix C++ includes for native configurations.\n+\t* config/openbsd.h: Fix C++ includes for native configurations.\n \tAdd proper OS_CPP_BUILTINS.  Fix libspec for recent OpenBSD.\n \tAdd trampoline support.\n \t* config/i386/openbsdelf.h: New.\n@@ -34725,7 +34725,7 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \n 2005-01-13  David O'Brien  <obrien@FreeBSD.org>\n \n-\t* config/freebsd-spec.h:  Make KSE pthread lib logic the default.\n+\t* config/freebsd-spec.h: Make KSE pthread lib logic the default.\n \n 2005-01-13  Richard Henderson  <rth@redhat.com>\n \n@@ -35074,7 +35074,7 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \n \t* config/i386/i386.c (ix86_function_value): Use type_natural_mode.\n \t(ix86_return_in_memory): Likewise.\n-\t(function_arg_advance):  Likewise.  Mirror structure in function_arg\n+\t(function_arg_advance): Likewise.  Mirror structure in function_arg\n \tfor choosing register to advance.\n \n 2005-01-10  Kazu Hirata  <kazu@cs.umass.edu>"}]}