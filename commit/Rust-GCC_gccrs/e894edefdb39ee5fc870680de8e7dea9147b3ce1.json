{"sha": "e894edefdb39ee5fc870680de8e7dea9147b3ce1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTg5NGVkZWZkYjM5ZWU1ZmM4NzA2ODBkZThlN2RlYTkxNDdiM2NlMQ==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2007-01-30T18:04:59Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2007-01-30T18:04:59Z"}, "message": "re PR libstdc++/30571 (Use of C++0x keywords in libstdc++-v3 headers)\n\n2007-01-30  Benjamin Kosnik  <bkoz@redhat.com>\n\n\tPR libstdc++/30571\n\t* include/ext/pb_ds/detail/type_utils.hpp: Use C++0x\n\tstatic_assert if available, if not, centralize PB_DS_STATIC_ASSERT\n\tdefinition here.\n\t* include/ext/pb_ds/detail/resize_policy/\n\tcc_hash_max_collision_check_resize_trigger_imp.hpp: Remove\n\tPB_DS_STATIC_ASSERT definition.\n\t* include/ext/pb_ds/detail/resize_policy/\n\thash_load_check_resize_trigger_imp.hpp: Same.\n\t* include/ext/pb_ds/detail/resize_policy/\n\thash_standard_resize_policy_imp.hpp: Same.\n\t* include/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp: Same.\n\t* include/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp: Same.\n\t* include/ext/pb_ds/detail/pat_trie_/internal_node.hpp: Same.\n\t* include/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp: Same.\n\t* include/ext/pb_ds/detail/ov_tree_map_/node_iterators.hpp: Same.\n\t* include/ext/pb_ds/trie_policy.hpp: Same.\n\t* testsuite/util/performance/assoc/timing/\n\ttree_order_statistics_test.hpp: Same.\n\t* testsuite/ext/pb_ds/example/hash_resize_neg.cc: Adjust line numbers.\n\t* testsuite/17_intro/headers_c++_c++0x_compat.cc: New.\n\t\n\t* include/precompiled/extc++.h: Update to current list of ext files.\n\nFrom-SVN: r121349", "tree": {"sha": "cfc9798e2f338434399fa6528ad3e91c9a4aa3a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cfc9798e2f338434399fa6528ad3e91c9a4aa3a1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e894edefdb39ee5fc870680de8e7dea9147b3ce1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e894edefdb39ee5fc870680de8e7dea9147b3ce1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e894edefdb39ee5fc870680de8e7dea9147b3ce1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e894edefdb39ee5fc870680de8e7dea9147b3ce1/comments", "author": null, "committer": null, "parents": [{"sha": "884d2e6b2826a08b3b547d2d8fadebfe5a157c4f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/884d2e6b2826a08b3b547d2d8fadebfe5a157c4f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/884d2e6b2826a08b3b547d2d8fadebfe5a157c4f"}], "stats": {"total": 274, "additions": 207, "deletions": 67}, "files": [{"sha": "2b6b12000e380f8d62df4372e5dd48c8d9cf32cd", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e894edefdb39ee5fc870680de8e7dea9147b3ce1/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e894edefdb39ee5fc870680de8e7dea9147b3ce1/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=e894edefdb39ee5fc870680de8e7dea9147b3ce1", "patch": "@@ -1,3 +1,29 @@\n+2007-01-30  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\tPR libstdc++/30571\n+\t* include/ext/pb_ds/detail/type_utils.hpp: Use C++0x\n+\tstatic_assert if available, if not, centralize PB_DS_STATIC_ASSERT\n+\tdefinition here.\n+\t* include/ext/pb_ds/detail/resize_policy/\n+\tcc_hash_max_collision_check_resize_trigger_imp.hpp: Remove\n+\tPB_DS_STATIC_ASSERT definition.\n+\t* include/ext/pb_ds/detail/resize_policy/\n+\thash_load_check_resize_trigger_imp.hpp: Same.\n+\t* include/ext/pb_ds/detail/resize_policy/\n+\thash_standard_resize_policy_imp.hpp: Same.\n+\t* include/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp: Same.\n+\t* include/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp: Same.\n+\t* include/ext/pb_ds/detail/pat_trie_/internal_node.hpp: Same.\n+\t* include/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp: Same.\n+\t* include/ext/pb_ds/detail/ov_tree_map_/node_iterators.hpp: Same.\n+\t* include/ext/pb_ds/trie_policy.hpp: Same.\n+\t* testsuite/util/performance/assoc/timing/\n+\ttree_order_statistics_test.hpp: Same.\n+\t* testsuite/ext/pb_ds/example/hash_resize_neg.cc: Adjust line numbers.\n+\t* testsuite/17_intro/headers_c++_c++0x_compat.cc: New.\n+\t\n+\t* include/precompiled/extc++.h: Update to current list of ext files.\n+\n 2007-01-29  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/bits/stl_uninitialized.h (uninitialized_copy(const char*,"}, {"sha": "67c35a63b699035ab0d3d9155f8c1b67fa241e94", "filename": "libstdc++-v3/include/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e894edefdb39ee5fc870680de8e7dea9147b3ce1/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fcc_hash_table_map_%2Fcc_ht_map_.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e894edefdb39ee5fc870680de8e7dea9147b3ce1/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fcc_hash_table_map_%2Fcc_ht_map_.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fcc_hash_table_map_%2Fcc_ht_map_.hpp?ref=e894edefdb39ee5fc870680de8e7dea9147b3ce1", "patch": "@@ -1,6 +1,6 @@\n // -*- C++ -*-\n \n-// Copyright (C) 2005, 2006 Free Software Foundation, Inc.\n+// Copyright (C) 2005, 2006, 2007 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the terms\n@@ -106,10 +106,6 @@ namespace pb_ds\n #define PB_DS_V2S(X) Mapped_Data()\n #endif \n \n-#define PB_DS_STATIC_ASSERT(UNIQUE, E) \\\n-    typedef static_assert_dumclass<sizeof(static_assert<(bool)(E)>)> \\\n-    UNIQUE##static_assert_type\n-\n     // <011i$i0|\\|-<|-|4i|\\|i|\\|g |-|4$|-| 74813.\n     template<typename Key,\n \t     typename Mapped,\n@@ -640,7 +636,6 @@ namespace pb_ds\n #undef PB_DS_CLASS_NAME\n #undef PB_DS_V2F\n #undef PB_DS_V2S\n-#undef PB_DS_STATIC_ASSERT\n \n   } // namespace detail\n } // namespace pb_ds"}, {"sha": "24a9f1bf3ba2260b2e4b9f118068b3244ca71535", "filename": "libstdc++-v3/include/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e894edefdb39ee5fc870680de8e7dea9147b3ce1/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fgp_hash_table_map_%2Fgp_ht_map_.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e894edefdb39ee5fc870680de8e7dea9147b3ce1/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fgp_hash_table_map_%2Fgp_ht_map_.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fgp_hash_table_map_%2Fgp_ht_map_.hpp?ref=e894edefdb39ee5fc870680de8e7dea9147b3ce1", "patch": "@@ -1,6 +1,6 @@\n // -*- C++ -*-\n \n-// Copyright (C) 2005, 2006 Free Software Foundation, Inc.\n+// Copyright (C) 2005, 2006, 2007 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the terms\n@@ -103,10 +103,6 @@ namespace pb_ds\n #define PB_DS_V2S(X) Mapped()\n #endif \n \n-#define PB_DS_STATIC_ASSERT(UNIQUE, E) \\\n-    typedef static_assert_dumclass<sizeof(static_assert<(bool)(E)>)> \\\n-    UNIQUE##static_assert_type\n-\n     template<typename Key,\n \t     typename Mapped,\n \t     typename Hash_Fn,\n@@ -681,7 +677,6 @@ namespace pb_ds\n #undef PB_DS_CLASS_NAME\n #undef PB_DS_V2F\n #undef PB_DS_V2S\n-#undef PB_DS_STATIC_ASSERT\n \n   } // namespace detail\n } // namespace pb_ds"}, {"sha": "c63f6b0d910fa65cb6d5e060891e59aaefa0a1fa", "filename": "libstdc++-v3/include/ext/pb_ds/detail/ov_tree_map_/node_iterators.hpp", "status": "modified", "additions": 4, "deletions": 9, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e894edefdb39ee5fc870680de8e7dea9147b3ce1/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fov_tree_map_%2Fnode_iterators.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e894edefdb39ee5fc870680de8e7dea9147b3ce1/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fov_tree_map_%2Fnode_iterators.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fov_tree_map_%2Fnode_iterators.hpp?ref=e894edefdb39ee5fc870680de8e7dea9147b3ce1", "patch": "@@ -1,6 +1,6 @@\n // -*- C++ -*-\n \n-// Copyright (C) 2005, 2006 Free Software Foundation, Inc.\n+// Copyright (C) 2005, 2006, 2007 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the terms\n@@ -55,12 +55,8 @@ namespace pb_ds\n {\n   namespace detail\n   {\n-#define PB_DS_STATIC_ASSERT(UNIQUE, E)\t\t\t\t\t\\\n-    typedef\t\t\t\t\t\t\t\t\\\n-    static_assert_dumclass<sizeof(static_assert<(bool)(E)>)> \\\n-    UNIQUE##static_assert_type\n \n-#define PB_DS_OV_TREE_CONST_NODE_ITERATOR_C_DEC\t\t\t\\\n+#define PB_DS_OV_TREE_CONST_NODE_ITERATOR_C_DEC\t\\\n     ov_tree_node_const_it_<Value_Type, Metadata_Type, Allocator>\n \n     // Const node reference.\n@@ -205,7 +201,7 @@ namespace pb_ds\n       const_metadata_pointer m_p_metadata;\n     };\n \n-#define PB_DS_OV_TREE_NODE_ITERATOR_C_DEC\t\t\t\\\n+#define PB_DS_OV_TREE_NODE_ITERATOR_C_DEC \\\n     ov_tree_node_it_<Value_Type, Metadata_Type, Allocator>\n \n     // Node reference.\n@@ -251,7 +247,7 @@ namespace pb_ds\n \n     public:\n       inline\n-      ov_tree_node_it_(const_pointer p_nd = NULL,  const_pointer p_begin_nd = NULL,  const_pointer p_end_nd = NULL,  const_metadata_pointer p_metadata = NULL) : base_type(                p_nd,  p_begin_nd,  p_end_nd,  p_metadata)\n+      ov_tree_node_it_(const_pointer p_nd = NULL,  const_pointer p_begin_nd = NULL,  const_pointer p_end_nd = NULL,  const_metadata_pointer p_metadata = NULL) : base_type(p_nd,  p_begin_nd,  p_end_nd,  p_metadata)\n       { }\n \n       // Access.\n@@ -295,7 +291,6 @@ namespace pb_ds\n \n #undef PB_DS_OV_TREE_NODE_ITERATOR_C_DEC\n #undef PB_DS_OV_TREE_CONST_NODE_ITERATOR_C_DEC\n-#undef PB_DS_STATIC_ASSERT\n \n } // namespace detail\n } // namespace pb_ds"}, {"sha": "902c9b7ca5372e65b12bda73eb265362243bed38", "filename": "libstdc++-v3/include/ext/pb_ds/detail/pat_trie_/internal_node.hpp", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e894edefdb39ee5fc870680de8e7dea9147b3ce1/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fpat_trie_%2Finternal_node.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e894edefdb39ee5fc870680de8e7dea9147b3ce1/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fpat_trie_%2Finternal_node.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fpat_trie_%2Finternal_node.hpp?ref=e894edefdb39ee5fc870680de8e7dea9147b3ce1", "patch": "@@ -1,6 +1,6 @@\n // -*- C++ -*-\n \n-// Copyright (C) 2005, 2006 Free Software Foundation, Inc.\n+// Copyright (C) 2005, 2006, 2007 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the terms\n@@ -66,9 +66,6 @@ namespace pb_ds\n #define PB_DS_LEAF_C_DEC \\\n     pat_trie_leaf<Type_Traits, E_Access_Traits, Metadata, Allocator>\n \n-#define PB_DS_STATIC_ASSERT(UNIQUE, E) \\\n-    typedef static_assert_dumclass<sizeof(static_assert<(bool)(E)>)> UNIQUE##static_assert_type\n-\n     template<typename Type_Traits,\n \t     typename E_Access_Traits,\n \t     typename Metadata,\n@@ -601,7 +598,6 @@ namespace pb_ds\n #undef PB_DS_CLASS_C_DEC\n #undef PB_DS_BASE_C_DEC\n #undef PB_DS_LEAF_C_DEC\n-#undef PB_DS_STATIC_ASSERT\n \n   } // namespace detail\n } // namespace pb_ds"}, {"sha": "18c1a79414e0ea4c9d8eff9c4a51a816b0352110", "filename": "libstdc++-v3/include/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e894edefdb39ee5fc870680de8e7dea9147b3ce1/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fpat_trie_%2Fpat_trie_.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e894edefdb39ee5fc870680de8e7dea9147b3ce1/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fpat_trie_%2Fpat_trie_.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fpat_trie_%2Fpat_trie_.hpp?ref=e894edefdb39ee5fc870680de8e7dea9147b3ce1", "patch": "@@ -1,6 +1,6 @@\n // -*- C++ -*-\n \n-// Copyright (C) 2005, 2006 Free Software Foundation, Inc.\n+// Copyright (C) 2005, 2006, 2007 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the terms\n@@ -111,10 +111,6 @@ namespace pb_ds\n #define PB_DS_EP2VP(X)& ((X)->m_value.first)\n #endif \n \n-#define PB_DS_STATIC_ASSERT(UNIQUE, E)\t\\\n-    typedef static_assert_dumclass<sizeof(static_assert<(bool)(E)>)> \\\n-    UNIQUE##static_assert_type\n-\n     /**\n      * class description = PATRICIA trie implementation.\">\n      **/\n@@ -520,7 +516,6 @@ namespace pb_ds\n #undef PB_DS_V2F\n #undef PB_DS_EP2VP\n #undef PB_DS_V2S\n-#undef PB_DS_STATIC_ASSERT\n \n   } // namespace detail\n } // namespace pb_ds"}, {"sha": "3ade0c7e16cbdce76fefd3b91a0a1a00ce172d57", "filename": "libstdc++-v3/include/ext/pb_ds/detail/resize_policy/cc_hash_max_collision_check_resize_trigger_imp.hpp", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e894edefdb39ee5fc870680de8e7dea9147b3ce1/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fresize_policy%2Fcc_hash_max_collision_check_resize_trigger_imp.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e894edefdb39ee5fc870680de8e7dea9147b3ce1/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fresize_policy%2Fcc_hash_max_collision_check_resize_trigger_imp.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fresize_policy%2Fcc_hash_max_collision_check_resize_trigger_imp.hpp?ref=e894edefdb39ee5fc870680de8e7dea9147b3ce1", "patch": "@@ -1,6 +1,6 @@\n // -*- C++ -*-\n \n-// Copyright (C) 2005, 2006 Free Software Foundation, Inc.\n+// Copyright (C) 2005, 2006, 2007 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the terms\n@@ -44,9 +44,6 @@\n  * Contains a resize trigger implementation.\n  */\n \n-#define PB_DS_STATIC_ASSERT(UNIQUE, E) \\\n-  typedef detail::static_assert_dumclass<sizeof(detail::static_assert<(bool)(E)>)> UNIQUE##static_assert_type\n-\n PB_DS_CLASS_T_DEC\n PB_DS_CLASS_C_DEC::\n cc_hash_max_collision_check_resize_trigger(float load) :\n@@ -218,4 +215,3 @@ set_load(float load)\n   calc_resize_needed();\n }\n \n-#undef PB_DS_STATIC_ASSERT"}, {"sha": "1bae0192577e097e227e9812f5836c5adb9140fc", "filename": "libstdc++-v3/include/ext/pb_ds/detail/resize_policy/hash_load_check_resize_trigger_imp.hpp", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e894edefdb39ee5fc870680de8e7dea9147b3ce1/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fresize_policy%2Fhash_load_check_resize_trigger_imp.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e894edefdb39ee5fc870680de8e7dea9147b3ce1/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fresize_policy%2Fhash_load_check_resize_trigger_imp.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fresize_policy%2Fhash_load_check_resize_trigger_imp.hpp?ref=e894edefdb39ee5fc870680de8e7dea9147b3ce1", "patch": "@@ -1,6 +1,6 @@\n // -*- C++ -*-\n \n-// Copyright (C) 2005, 2006 Free Software Foundation, Inc.\n+// Copyright (C) 2005, 2006, 2007 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the terms\n@@ -44,9 +44,6 @@\n  * Contains a resize trigger implementation.\n  */\n \n-#define PB_DS_STATIC_ASSERT(UNIQUE, E)  \\\n-  typedef detail::static_assert_dumclass<sizeof(detail::static_assert<bool(E)>)> UNIQUE##static_assert_type\n-\n PB_DS_CLASS_T_DEC\n PB_DS_CLASS_C_DEC::\n hash_load_check_resize_trigger(float load_min, float load_max) \n@@ -296,5 +293,3 @@ assert_valid() const\n }\n #endif \n \n-#undef PB_DS_STATIC_ASSERT\n-"}, {"sha": "a37ccc0be9ed67d5a0fe4edafcc7bf4332a69ae9", "filename": "libstdc++-v3/include/ext/pb_ds/detail/resize_policy/hash_standard_resize_policy_imp.hpp", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e894edefdb39ee5fc870680de8e7dea9147b3ce1/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fresize_policy%2Fhash_standard_resize_policy_imp.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e894edefdb39ee5fc870680de8e7dea9147b3ce1/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fresize_policy%2Fhash_standard_resize_policy_imp.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fresize_policy%2Fhash_standard_resize_policy_imp.hpp?ref=e894edefdb39ee5fc870680de8e7dea9147b3ce1", "patch": "@@ -1,6 +1,6 @@\n // -*- C++ -*-\n \n-// Copyright (C) 2005, 2006 Free Software Foundation, Inc.\n+// Copyright (C) 2005, 2006, 2007 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the terms\n@@ -44,9 +44,6 @@\n  * Contains a resize policy implementation.\n  */\n \n-#define PB_DS_STATIC_ASSERT(UNIQUE, E) \\\n-  typedef detail::static_assert_dumclass<sizeof(detail::static_assert<(bool)(E)>)> UNIQUE##static_assert_type\n-\n PB_DS_CLASS_T_DEC\n PB_DS_CLASS_C_DEC::\n hash_standard_resize_policy() \n@@ -256,5 +253,3 @@ PB_DS_CLASS_C_DEC::\n get_size_policy() const\n { return *this; }\n \n-#undef PB_DS_STATIC_ASSERT\n-"}, {"sha": "7a7e425a0ecc0308b5432297d4dde1c78177d353", "filename": "libstdc++-v3/include/ext/pb_ds/detail/type_utils.hpp", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e894edefdb39ee5fc870680de8e7dea9147b3ce1/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Ftype_utils.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e894edefdb39ee5fc870680de8e7dea9147b3ce1/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Ftype_utils.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Ftype_utils.hpp?ref=e894edefdb39ee5fc870680de8e7dea9147b3ce1", "patch": "@@ -1,6 +1,6 @@\n // -*- C++ -*-\n \n-// Copyright (C) 2005, 2006 Free Software Foundation, Inc.\n+// Copyright (C) 2005, 2006, 2007 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the terms\n@@ -136,23 +136,31 @@ namespace pb_ds\n \t};\n     };\n \n-\n+    // Use C++0x's static_assert if possible.\n+#ifdef __GXX_EXPERIMENTAL_CXX0X__\n+#define PB_DS_STATIC_ASSERT(UNIQUE, E)  static_assert(E, #UNIQUE)\n+#else\n     template<bool>\n-    struct static_assert;\n+    struct __static_assert;\n \n     template<>\n-    struct static_assert<true>\n+    struct __static_assert<true>\n     { };\n \n     template<int>\n-    struct static_assert_dumclass\n+    struct __static_assert_dumclass\n     {\n       enum\n \t{\n \t  v = 1\n \t};\n     };\n \n+#define PB_DS_STATIC_ASSERT(UNIQUE, E)  \\\n+    typedef pb_ds::detail::__static_assert_dumclass<sizeof(pb_ds::detail::__static_assert<bool(E)>)> UNIQUE##__static_assert_type\n+\n+#endif\n+\n     template<typename Type>\n     struct type_to_type\n     {"}, {"sha": "ee496a11b0bf7725315628f0a8cdf7a47fa48cef", "filename": "libstdc++-v3/include/ext/pb_ds/trie_policy.hpp", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e894edefdb39ee5fc870680de8e7dea9147b3ce1/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Ftrie_policy.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e894edefdb39ee5fc870680de8e7dea9147b3ce1/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Ftrie_policy.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Ftrie_policy.hpp?ref=e894edefdb39ee5fc870680de8e7dea9147b3ce1", "patch": "@@ -1,6 +1,6 @@\n // -*- C++ -*-\n \n-// Copyright (C) 2005, 2006 Free Software Foundation, Inc.\n+// Copyright (C) 2005, 2006, 2007 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the terms\n@@ -61,9 +61,6 @@ namespace pb_ds\n   struct null_trie_node_update\n   { };\n \n-#define PB_DS_STATIC_ASSERT(UNIQUE, E)\t\t\t\t\t\\\n-  typedef detail::static_assert_dumclass<sizeof(detail::static_assert<bool(E)>)> UNIQUE##_static_assert_type\n-\n #define PB_DS_CLASS_T_DEC\t\t\t\t\t\t\\\n   template<typename String, typename String::value_type Min_E_Val, typename String::value_type Max_E_Val, bool Reverse, typename Allocator>\n \n@@ -358,7 +355,6 @@ namespace pb_ds\n #undef PB_DS_CLASS_T_DEC\n #undef PB_DS_CLASS_C_DEC\n #undef PB_DS_BASE_C_DEC\n-#undef PB_DS_STATIC_ASSERT\n \n } // namespace pb_ds\n "}, {"sha": "f3cd66236bab5ed4b415f955ee32b377adabb509", "filename": "libstdc++-v3/include/precompiled/extc++.h", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e894edefdb39ee5fc870680de8e7dea9147b3ce1/libstdc%2B%2B-v3%2Finclude%2Fprecompiled%2Fextc%2B%2B.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e894edefdb39ee5fc870680de8e7dea9147b3ce1/libstdc%2B%2B-v3%2Finclude%2Fprecompiled%2Fextc%2B%2B.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fprecompiled%2Fextc%2B%2B.h?ref=e894edefdb39ee5fc870680de8e7dea9147b3ce1", "patch": "@@ -1,6 +1,6 @@\n // C++ includes used for precompiling extensions -*- C++ -*-\n \n-// Copyright (C) 2006 Free Software Foundation, Inc.\n+// Copyright (C) 2006, 2007 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -35,9 +35,12 @@\n \n #include <ext/algorithm>\n #include <ext/array_allocator.h>\n+#include <ext/atomicity.h>\n #include <ext/bitmap_allocator.h>\n #include <ext/codecvt_specializations.h>\n+#include <ext/concurrence.h>\n #include <ext/debug_allocator.h>\n+#include <ext/enc_filebuf.h>\n #include <ext/functional>\n #include <ext/hash_map>\n #include <ext/hash_set>\n@@ -54,7 +57,9 @@\n #include <ext/slist>\n #include <ext/stdio_filebuf.h>\n #include <ext/stdio_sync_filebuf.h>\n+#include <ext/throw_allocator.h>\n #include <ext/typelist.h>\n+#include <ext/type_traits.h>\n #include <ext/vstring.h>\n #include <ext/pb_ds/assoc_container.hpp>\n #include <ext/pb_ds/priority_queue.hpp>"}, {"sha": "1052cd7cf26e43971193fb82b680a79a4a335c3e", "filename": "libstdc++-v3/testsuite/17_intro/headers_c++_c++0x_compat.cc", "status": "added", "additions": 146, "deletions": 0, "changes": 146, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e894edefdb39ee5fc870680de8e7dea9147b3ce1/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders_c%2B%2B_c%2B%2B0x_compat.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e894edefdb39ee5fc870680de8e7dea9147b3ce1/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders_c%2B%2B_c%2B%2B0x_compat.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders_c%2B%2B_c%2B%2B0x_compat.cc?ref=e894edefdb39ee5fc870680de8e7dea9147b3ce1", "patch": "@@ -0,0 +1,146 @@\n+// { dg-do compile }\n+// { dg-options \"-Wc++0x-compat -Werror\" }\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+// Make sure all the includes can be compiled with -Wc++0x-compat\n+// libstdc++/30571\n+\n+// C\n+#include <cassert>\n+#include <cctype>\n+#include <cerrno>\n+#include <cfloat>\n+#include <ciso646>\n+#include <climits>\n+#include <clocale>\n+#include <cmath>\n+#include <csetjmp>\n+#include <csignal>\n+#include <cstdarg>\n+#include <cstddef>\n+#include <cstdio>\n+#include <cstdlib>\n+#include <cstring>\n+#include <ctime>\n+\n+// C++\n+#include <algorithm>\n+#include <bitset>\n+#include <complex>\n+#include <deque>\n+#include <exception>\n+#include <fstream>\n+#include <functional>\n+#include <iomanip>\n+#include <ios>\n+#include <iosfwd>\n+#include <iostream>\n+#include <istream>\n+#include <iterator>\n+#include <limits>\n+#include <list>\n+#include <locale>\n+#include <map>\n+#include <memory>\n+#include <new>\n+#include <numeric>\n+#include <ostream>\n+#include <queue>\n+#include <set>\n+#include <sstream>\n+#include <stack>\n+#include <stdexcept>\n+#include <streambuf>\n+#include <string>\n+#include <typeinfo>\n+#include <utility>\n+#include <valarray>\n+#include <vector>\n+\n+// TR1\n+#include <tr1/array>\n+#include <tr1/cctype>\n+#include <tr1/cfenv>\n+#include <tr1/cfloat>\n+#include <tr1/cinttypes>\n+#include <tr1/climits>\n+#include <tr1/cmath>\n+#include <tr1/complex>\n+#include <tr1/cstdarg>\n+#include <tr1/cstdbool>\n+#include <tr1/cstdint>\n+#include <tr1/cstdio>\n+#include <tr1/cstdlib>\n+#include <tr1/ctgmath>\n+#include <tr1/ctime>\n+#include <tr1/cwchar>\n+#include <tr1/cwctype>\n+#include <tr1/functional>\n+#include <tr1/random>\n+#include <tr1/tuple>\n+#include <tr1/unordered_map>\n+#include <tr1/unordered_set>\n+#include <tr1/utility>\n+\n+// Extensions\n+#include <ext/algorithm>\n+#include <ext/array_allocator.h>\n+#include <ext/atomicity.h>\n+#include <ext/bitmap_allocator.h>\n+#include <ext/codecvt_specializations.h>\n+#include <ext/concurrence.h>\n+#include <ext/debug_allocator.h>\n+#include <ext/enc_filebuf.h>\n+#include <ext/functional>\n+#include <ext/hash_map>\n+#include <ext/hash_set>\n+#include <ext/iterator>\n+#include <ext/malloc_allocator.h>\n+#include <ext/memory>\n+#include <ext/mt_allocator.h>\n+#include <ext/new_allocator.h>\n+#include <ext/numeric>\n+#include <ext/pod_char_traits.h>\n+#include <ext/pool_allocator.h>\n+#include <ext/rb_tree>\n+#include <ext/rope>\n+#include <ext/slist>\n+#include <ext/stdio_filebuf.h>\n+#include <ext/stdio_sync_filebuf.h>\n+#include <ext/throw_allocator.h>\n+#include <ext/typelist.h>\n+#include <ext/type_traits.h>\n+#include <ext/vstring.h>\n+#include <ext/pb_ds/assoc_container.hpp>\n+#include <ext/pb_ds/priority_queue.hpp>\n+#include <ext/pb_ds/exception.hpp>\n+#include <ext/pb_ds/hash_policy.hpp>\n+#include <ext/pb_ds/list_update_policy.hpp>\n+#include <ext/pb_ds/tree_policy.hpp>\n+#include <ext/pb_ds/trie_policy.hpp>"}, {"sha": "f120ae69b5f709aeadd2ee387ba775c97471dbcb", "filename": "libstdc++-v3/testsuite/ext/pb_ds/example/hash_resize_neg.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e894edefdb39ee5fc870680de8e7dea9147b3ce1/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Fhash_resize_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e894edefdb39ee5fc870680de8e7dea9147b3ce1/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Fhash_resize_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Fhash_resize_neg.cc?ref=e894edefdb39ee5fc870680de8e7dea9147b3ce1", "patch": "@@ -1,7 +1,7 @@\n // { dg-do compile }\n // -*- C++ -*-\n \n-// Copyright (C) 2005, 2006 Free Software Foundation, Inc.\n+// Copyright (C) 2005, 2006, 2007 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the terms\n@@ -70,5 +70,5 @@ int main()\n   h.resize(20); // { dg-error \"instantiated from\" }\n }\n \n-// { dg-error \"invalid\" \"\" { target *-*-* } 196 } \n+// { dg-error \"invalid\" \"\" { target *-*-* } 193 } \n // { dg-excess-errors \"member function\" } "}, {"sha": "b1e88f719e0b0c3269c99914aedd1a749416857c", "filename": "libstdc++-v3/testsuite/util/performance/assoc/timing/tree_order_statistics_test.hpp", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e894edefdb39ee5fc870680de8e7dea9147b3ce1/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fperformance%2Fassoc%2Ftiming%2Ftree_order_statistics_test.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e894edefdb39ee5fc870680de8e7dea9147b3ce1/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fperformance%2Fassoc%2Ftiming%2Ftree_order_statistics_test.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fperformance%2Fassoc%2Ftiming%2Ftree_order_statistics_test.hpp?ref=e894edefdb39ee5fc870680de8e7dea9147b3ce1", "patch": "@@ -1,6 +1,6 @@\n // -*- C++ -*-\n \n-// Copyright (C) 2005, 2006 Free Software Foundation, Inc.\n+// Copyright (C) 2005, 2006, 2007 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the terms\n@@ -50,6 +50,7 @@\n #include <performance/time/timing_test_base.hpp>\n #include <performance/io/xml_formatter.hpp>\n #include <common_type/assoc/string_form.hpp>\n+#include <ext/pb_ds/detail/type_utils.hpp>\n #include <iterator>\n \n namespace pb_ds\n@@ -58,10 +59,6 @@ namespace pb_ds\n   {\n     namespace detail\n     {\n-#define PB_DS_STATIC_ASSERT(UNIQUE, E) \\\n-      typedef \\\n-      pb_ds::detail::static_assert_dumclass<sizeof(pb_ds::detail::static_assert<(bool)(E)>)> UNIQUE##static_assert_type\n-\n       template<typename Cntnr, bool Native>\n       class order_statistics_functor\n       {"}]}