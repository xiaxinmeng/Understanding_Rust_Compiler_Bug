{"sha": "a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTE5MDZlOGJiZmE0MjZlZDFhZGZlNzUxNjA4YmM3NGYxZDRkMmFiNw==", "commit": {"author": {"name": "Matthias Klose", "email": "doko@gcc.gnu.org", "date": "2012-12-19T17:03:15Z"}, "committer": {"name": "Matthias Klose", "email": "doko@gcc.gnu.org", "date": "2012-12-19T17:03:15Z"}, "message": "Import GNU Classpath (20121202).\n\n2012-12-19  Matthias Klose  <doko@ubuntu.com>\n\n        Import GNU Classpath (20121202).\n\n        * Regenerate class and header files.\n        * Regenerate auto* files.\n        * sources.am, gcj/javaprims.h: Regenerate.\n        * gnu/java/nio/FileLockImpl.java (close): New override.\n\nFrom-SVN: r194618", "tree": {"sha": "9b478aacc6b13f1beadacec2ade096dcb732af53", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9b478aacc6b13f1beadacec2ade096dcb732af53"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/comments", "author": null, "committer": null, "parents": [{"sha": "baeb2e16475b278e83fe73751d4f0f572805b16e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/baeb2e16475b278e83fe73751d4f0f572805b16e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/baeb2e16475b278e83fe73751d4f0f572805b16e"}], "stats": {"total": 8193, "additions": 5246, "deletions": 2947}, "files": [{"sha": "ff22755dbe1a574c4511127ee6e6fdb1c083541e", "filename": "libjava/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -1,3 +1,12 @@\n+2012-12-19  Matthias Klose  <doko@ubuntu.com>\n+\n+        Import GNU Classpath (20121202).\n+\n+\t* Regenerate class and header files.\n+\t* Regenerate auto* files.\n+\t* sources.am, gcj/javaprims.h: Regenerate.\n+\t* gnu/java/nio/FileLockImpl.java (close): New override.\n+\n 2012-12-12  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* Makefile.am (lib_gnu_awt_xlib_la_CPPFLAGS): Use"}, {"sha": "37d11a3c942aeb20581011f13d15441bedb1eb9e", "filename": "libjava/classpath/ChangeLog", "status": "modified", "additions": 967, "deletions": 7, "changes": 974, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2FChangeLog?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -4,21 +4,981 @@\n \t* tools/gnu/classpath/tools/javah/Main.java (parseClasses): Don't\n \tscan inner classes if our item is a file.\n \n-2012-09-14  David Edelsohn  <dje.gcc@gmail.com>\n+2012-11-02  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n \n-\t* configure: Regenerated.\n+\tPR classpath/55182\n+\t* configure.ac:\n+\tLower required version to support autoconf\n+\ton RHEL6.  Make disabling Werror the default.\n+\tIf a Qt4-specific moc is detected, use it\n+\trather than the default.\n+\t* doc/Makefile.am:\n+\tGenerate texi2dvi output in the build directory\n+\tand explicitly specify POSIX locale to work around\n+\tDebian bug 586134.\n+\t(clean-local): Remove output from texi2dvi.\n+\n+2012-10-30  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n+\n+\tPR classpath/55140\n+\t* NEWS: List fix.\n+\t* java/lang/String.java:\n+\t(codePointBefore(int)): Fix index check to match spec.\n+\n+2012-10-16  Ivan Maidanski  <ivmai@mail.ru>\n+\n+\t* java/util/Collections.java:\n+\t(emptySet()): Don't create new instance, instead using\n+\tthe corresponding immutable container instance.  Remove FIXME\n+\tand suppress resulting unchecked warning.\n+\t(EmptySet.iterator()): Suppress warning due to cast\n+\tfor immutable container instance.\n+\t(EmptySet.equals(Object)): Add type parameters.\n+\t(emptyList()): Don't create new instance, instead using\n+\tthe corresponding immutable container instance.  Remove FIXME\n+\tand suppress resulting unchecked warning.\n+\t(EmptyList.equals(Object)): Add type parameters.\n+\t(emptyMap()): Don't create new instance, instead using\n+\tthe corresponding immutable container instance.  Remove FIXME\n+\tand suppress resulting unchecked warning.\n+\t(EmptyMap.entrySet()): Cast to parameterised type and\n+\tsuppress warning.\n+\t(EmptyMap.equals(Object)): Add type parameters.\n+\t(EmptyMap.keySet()): Cast to parameterised type and\n+\tsuppress warning.\n+\t(EmptyMap.values()): Likewise.\n+\t(SingletonList.subList(int, int)): Use emptyList() instead of\n+\tEMPTY_LIST to eliminate unchecked warning.\n+\t(SynchronizedCollection.toArray(T[])): Rename T type to E to\n+\tsuppress compiler warning about type hiding.\n+\n+2012-10-26  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n+\n+\tPR classpath/41689\n+\t* javax/security/sasl/Sasl.java:\n+\t(CREDENTIALS): Add missing field.\n+\t* NEWS: Updated.\n+\n+2012-10-26  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n+\n+\t* NEWS: Updated with latest bug fixes.\n+\t* THANKYOU: Add bug authors.\n+\n+2010-05-20  Paul Viney  <paul@diasoft.nl>\n+\n+\tPR classpath/44208\n+\t* java/io/ObjectInputStream.java,\n+\t(parseContent(byte,boolean)): Ensure a handle\n+\tfor the enum is registered before one for its\n+\tString constant.\n+\n+2009-12-30  Paul Fernhout  <pdfernhout@kurtz-fernhout.com>\n+\n+\tPR classpath/42551\n+\t* javax/sound/midi/MetaMessage.java:\n+\t(setMessage(int,byte[],int)): Don't overwrite\n+\tlength variable when computing the length representation.\n+\n+2012-10-17  Jeremy Singer  <Jeremy.Singer@glasgow.ac.uk>\n+\n+\tPR classpath/54960\n+\t* gnu/xml/transform/SAXSerializer.java:\n+\t(getValue(String)): Avoid NullPointerException.\n+\n+2012-10-26  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n+\n+\t* native/jni/midi-dssi/gnu_javax_sound_midi_dssi_DSSISynthesizer.c:\n+\t(Java_gnu_javax_sound_midi_dssi_DSSISynthesizer_open_1(JNIEnv*,\n+\tjclass, jlong)): Use jack_client_open instead of\n+\tdeprecated jack_client_new.\n+\n+2012-10-15  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n+\n+\t* configure.ac: Set to 0.99.1pre, as\n+\t0.99.1 will now be next release.\n+\t* NEWS: Updated with last bug fix\n+\tand 0.99.1\n+\n+2012-10-15  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n+\n+\tPR classpath/54931\n+\t* m4/acinclude.m4:\n+\t(CLASSPATH_WITH_GJDOC): Allow GJDoc versions\n+\tincluded with GNU Classpath to be used to\n+\tbuild (0.98 on).\n+\n+2012-03-15  Pekka Enberg  <penberg@kernel.org>\n+\n+\t* java/util/Formatter.java:\n+\t(icharacterFormat(Object,int,int,int,char):\n+\tFix NullPointerException for null characters.\n+\t(basicIntegralConversion(Object, int, int, int, int, char):\n+\tFix NullPointerException for null integers.\n+\t(format(Locale, String, Object...)):\n+\tFix NullPointerException for null object.\n+\n+2012-03-15  Pekka Enberg  <penberg@kernel.org>\n+\n+\t* java/lang/String.java:\n+\t(codePointAt(int))): Fix exception type.\n+\t(codePointBefore(int)): Fix exception type.\n+\n+2011-07-20  Ivan Maidanski  <ivmai@mail.ru>\n+\n+\t* native/jni/java-util/java_util_VMTimeZone.c:\n+\tInclude jcl.h file.\n+\t(Java_java_util_VMTimeZone_getSystemTimeZoneId(JNIEnv*,jclass)):\n+\tThrow OutOfMemoryException in case of malloc() failure.\n+\n+2012-06-10  Ivan Maidanski  <ivmai@mail.ru>\n+\n+\t* compat/.gitignore,\n+\t* compat/java.net/.gitignore,\n+\t* doc/.gitignore,\n+\t* doc/api/.gitignore,\n+\t* doc/www.gnu.org/.gitignore,\n+\t* doc/www.gnu.org/announce/.gitignore,\n+\t* doc/www.gnu.org/cp-tools/.gitignore,\n+\t* doc/www.gnu.org/docs/.gitignore,\n+\t* doc/www.gnu.org/downloads/.gitignore,\n+\t* doc/www.gnu.org/events/.gitignore,\n+\t* doc/www.gnu.org/faq/.gitignore,\n+\t* examples/.gitignore,\n+\t* external/.gitignore,\n+\t* external/jsr166/.gitignore,\n+\t* external/relaxngDatatype/.gitignore,\n+\t* external/sax/.gitignore,\n+\t* external/w3c_dom/.gitignore,\n+\t* gnu/classpath/.gitignore,\n+\t* gnu/java/locale/.gitignore,\n+\t* gnu/java/security/.gitignore,\n+\t* gnu/test/.gitignore,\n+\t* include/.gitignore,\n+\t* java/util/.gitignore,\n+\t* lib/.gitignore,\n+\t* native/.gitignore,\n+\t* native/fdlibm/.gitignore,\n+\t* native/jawt/.gitignore,\n+\t* native/jni/.gitignore,\n+\t* native/jni/classpath/.gitignore,\n+\t* native/jni/gconf-peer/.gitignore,\n+\t* native/jni/gstreamer-peer/.gitignore,\n+\t* native/jni/gtk-peer/.gitignore,\n+\t* native/jni/java-io/.gitignore,\n+\t* native/jni/java-lang/.gitignore,\n+\t* native/jni/java-math/.gitignore,\n+\t* native/jni/java-net/.gitignore,\n+\t* native/jni/java-nio/.gitignore,\n+\t* native/jni/java-util/.gitignore,\n+\t* native/jni/midi-alsa/.gitignore,\n+\t* native/jni/midi-dssi/.gitignore,\n+\t* native/jni/native-lib/.gitignore,\n+\t* native/jni/qt-peer/.gitignore,\n+\t* native/jni/xmlj/.gitignore,\n+\t* native/plugin/.gitignore,\n+\t* native/testsuite/.gitignore,\n+\t* native/vmi/.gitignore,\n+\t* resource/.gitignore,\n+\t* resource/META-INF/services/.gitignore,\n+\t* scripts/.gitignore,\n+\t* test/.gitignore,\n+\t* test/gnu.java.lang.reflect/.gitignore,\n+\t* test/java.io/.gitignore,\n+\t* test/java.lang.reflect/.gitignore,\n+\t* test/java.net/.gitignore,\n+\t* test/java.util/.gitignore,\n+\t* tools/.gitignore,\n+\t* tools/gnu/classpath/tools/doclets/.gitignore,\n+\t* tools/gnu/classpath/tools/doclets/debugdoclet/.gitignore,\n+\t* tools/gnu/classpath/tools/doclets/htmldoclet/.gitignore,\n+\t* tools/gnu/classpath/tools/doclets/xmldoclet/.gitignore,\n+\t* tools/gnu/classpath/tools/doclets/xmldoclet/doctranslet/.gitignore,\n+\t* tools/gnu/classpath/tools/gjdoc/.gitignore,\n+\t* tools/gnu/classpath/tools/gjdoc/expr/.gitignore,\n+\t* tools/gnu/classpath/tools/java2xhtml/.gitignore,\n+\t* tools/gnu/classpath/tools/taglets/.gitignore,\n+\t* vm/.gitignore,\n+\t* vm/reference/.gitignore: Renamed from .cvsignore.\n+\n+2012-10-10  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n+\n+\t* java/awt/geom/Area.java:\n+\t(solids): Add type parameter.\n+\t(holes): Likewise.\n+\t(ccIntersections): Likewise and rename to meet\n+\tstandards.\n+\t(Area()): Add type parameters.\n+\t(Area(Shape)): Likewise and remove redundant casts.\n+\t(add(Area)): Likewise and remove unused nNodes variable.\n+\t(subtract(Area)): Likewise.\n+\t(intersect(Area)): Likewise.\n+\t(exclusiveOr(Area)): Likewise.\n+\t(reset()): Add type parameters.\n+\t(isEmpty()): Remove redundant casts.\n+\t(isPolygonal()): Likewise.\n+\t(isRectangular()): Likewise.\n+\t(getBounds2D()): Likewise.\n+\t(clone()): Likewise.\n+\t(equals(Area)): Add type parameters.\n+\t(transform(AffineTransform)): Remove redundant casts.\n+\t(contains(double,double)): Likewise.\n+\t(contains(double,double,double,double)): Likewise.\n+\t(intersects(double,double,double,double)): Likewise.\n+\t(AreaIterator.segments): Add type parameter.\n+\t(AreaIterator(AffineTransform)): Add type parameters.\n+\tRemove redundant casts.\n+\t(currentSegment(double[])): Remove redundant casts.\n+\t(currentSegment(float[])): Likewise.\n+\t(weilerAtherton(Vector)): Add type parameters and remove\n+\tredundant casts.\n+\t(recursiveSubdivide(CubicCurve2D,CubicCurve2D,int,int,double,\n+\tdouble,double,double)): Fix use of cc_intersections/ccIntersections.\n+\t(cubicCubicIntersect(CubicSegment,CubicSegment)): Likewise.\n+\t(lineQuadIntersect(LineSegment,QuadSegment)): Fix Javadoc typo.\n+\t(makeSegment(Shape)): Add type parameters.\n+\t(createNodes(Segment,Segment)): Remove redundant bracketing.\n+\t(deleteRedundantPaths(Vector)): Likewise.  Remove redundant\n+\tcasts.  Add type parameters.\n+\t(setDirection(Vector,boolean)): Add type parameters and remove\n+\tredundant casts.\n+\t(cloneSegmentList()): Add type parameter.  Remove redundant\n+\tcast.\n+\t(createNodes(Segment,Intersection[])): Add type parameter.\n+\tRemove redundant cast.\n+\n+2012-10-09  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n+\n+\t* gnu/javax/sound/midi/dssi/DSSIMidiDeviceProvider.java:\n+\t(DSSIInfo.copyright): Added field.\n+\t(DSSIInfo(String,String,String,String,String,String,long)):\n+\tExtended constructor to store copyright.\n+\t(examineLibrary(String)): Add type parameter.\n+\tFix call to new DSSIInfo constructor.\n+\t(static): Add type parameters.\n+\t* gnu/javax/sound/midi/dssi/DSSISynthesizer.java:\n+\t(instruments): Add type parameter.\n+\t(resources): Likewise.\n+\t(getResources()): Remove redundant cast.\n+\t(getInstruments()): Likewise.\n+\t(getInstrument(Patch)): Add type parameter and remove\n+\tredundant cast.\n+\t(soundbanks): Add type parameter.\n+\t(getAvailableInstruments()): Add type parameters and\n+\tremove redundant casts.\n+\t* gnu/javax/sound/midi/file/MidiFileReader.java:\n+\t(getSequence(InputStream)): Don't store length as not used.\n+\t* gnu/javax/sound/midi/file/MidiFileWriter.java:\n+\t(computeTrackLength(Track,MidiDataOutputStream)): Drop unused\n+\tcount variable.\n+\t* gnu/javax/sound/sampled/WAV/WAVReader.java:\n+\t(getAudioFileFormat(InputStream)): Drop unused blockAlign variable.\n+\t* gnu/javax/sound/sampled/gstreamer/GStreamerMixer.java:\n+\t(getLine(Line.Info)): Add type parameter to Class.\n+\t* javax/sound/midi/MidiSystem.java:\n+\t(getMidiDeviceInfo()): Add type parameters.  Remove unnecessary cast.\n+\t(getMidiDevice(MidiDevice.Info)): Add type parameter.\n+\t(getSoundbank(InputStream)): Add type parameters and remove\n+\tunnecessary casts.\n+\t(getSoundbank(URL)): Likewise.\n+\t(getSoundbank(File)): Likewise.\n+\t(getMidiFileFormat(InputStream)): Likewise.\n+\t(getMidiFileFormat(URL)): Likewise.\n+\t(getMidiFileFormat(File)): Likewise.\n+\t(getSequence(InputStream)): Likewise.\n+\t(getSequence(URL)): Likewise.\n+\t(getSequence(File)): Likewise.\n+\t(getMidiFileTypes()): Likewise.\n+\t(isFileTypeSupported(int)): Likewise.\n+\t(getMidiFileTypes(Sequence)): Likewise.\n+\t(isFileTypeSupported(int,Sequence)): Likewise.\n+\t(write(Sequence,int,OutputStream)): Likewise.\n+\t(write(Sequence,int,File)): Likewise.\n+\t* javax/sound/midi/SoundbankResource.java:\n+\t(dataClass): Add type parameter.\n+\t* javax/sound/midi/Track.java:\n+\t(events): Add type parameter.\n+\t(eventSet): Likewise.\n+\t(add(MidiEvent)): Remove redundant cast.\n+\t(get(int)): Likewise.\n+\t(ticks()): Likewise.\n+\t* javax/sound/sampled/AudioSystem.java:\n+\t(getAudioFileFormat(File)): Add type parameters and\n+\tremove unnecessary casts.\n+\t(getAudioFileFormat(InputStream)): Likewise.\n+\t(getAudioFileFormat(URL)): Likewise.\n+\t(getAudioFileTypes()): Likewise.\n+\t(getAudioFileTypes(AudioInputStream)): Likewise.\n+\t(getAudioInputStream(AudioFormat.Encoding,AudioInputStream)):\n+\tLikewise.\n+\t(getAudioInputStream(AudioFormat,AudioInputStream)): Likewise.\n+\t(getAudioInputStream(File)): Likewise.\n+\t(getAudioInputStream(InputStream)): Likewise.\n+\t(getAudioInputStream(URL)): Likewise.\n+\t(getMixer(Mixer.Info)): Likewise.\n+\t(getMixerInfo()): Likewise.\n+\t(getTargetEncodings(AudioFormat.Encoding)): Likewise.\n+\t(getTargetEncodings(AudioFormat)): Likewise.\n+\t(getTargetFormats(AudioFormat.Encoding,AudioFormat)): Likewise.\n+\t(isConversionSupported(AudioFormat.Encoding,AudioFormat)): Likewise.\n+\t(isConversionSupported(AudioFormat,AudioFormat)): Likewise.\n+\t(write(AudioInputStream,AudioFileFormat.Type,File)): Likewise.\n+\t(write(AudioInputStream,AudioFileFormat.Type,OutputStream)): Likewise.\n+\t* javax/sound/sampled/Line.java:\n+\t(klass): Add type parameter.\n+\t* m4/ac_prog_javac.m4:\n+\t(ECJ_OPTS): Turn of unused private field warnings for now,\n+\tas some may be used from native code.\n+\n+2012-09-26  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n+\n+\tPR classpath/42134\n+\t* java/text/Bidi.java:\n+\t(Bidi(AttributedCharacterIterator)): Remove shadow\n+\tvariable text which hides the instance variable\n+\tof the same name.  Remove unnecessary use of this.\n+\t* NEWS: Updated.\n+\n+2012-09-24  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n+\n+\t* tools/com/sun/javadoc/Doc.java:\n+\tAdd type parameter to Comparable.\n+\t* tools/gnu/classpath/tools/doclets/AbstractDoclet.java:\n+\t(tagletMap): Use type parameters.\n+\t(packageGroups): Likewise.\n+\t(tagletPath): Removed, unused.\n+\t(mentionedTags): Use type parameters.\n+\t(optionNoEmailWarn): Removed, unused.\n+\t(optionTagletPath): Likewise.\n+\t(DocletOptionTaglet): Likewise.\n+\t(DocletOptionGroup.set(String[])): Add type aprameters to\n+\tgroupPackages.\n+\t(DocletOptionTagletPath): Removed, unused.\n+\t(commonOptions): Remove optionTagletPath.\n+\t(nameToOptionMap): Add type parameters.\n+\t(getOptionLength(String)): Remove unnecessary cast.\n+\t(getKnownDirectSubclasses(ClassDoc)): Add type parameters.\n+\t(IndexKey): Add type parameter to Comparable.\n+\t(IndexKey.compareTo(IndexKey)): Update to use specific type.\n+\t(categorizedIndex): Use type parameters.\n+\t(getCategorizedIndex()): Likewise.\n+\t(indexByName): Likewise.\n+\t(getIndexByName()): Likewise.\n+\t(printTaglets(Tag[],TagletContext,TagletPrinter,boolean)): Likewise.\n+\t(addUsedBy(Map,ClassDoc,UsageType,Doc,PackageDoc)): Likewise.\n+\t(collectUsage()): Likewise.\n+\t(usedClassToPackagesMap): Likewise.\n+\t(getUsageOfClass(ClassDoc)): Likewise.\n+\t(UsageType): Add type parameter to Comparable.\n+\t(UsageType.compareTo(UsageType)): Update to use specific type.\n+\t(getPackageGroups()): Use type parameters.\n+\t* tools/gnu/classpath/tools/doclets/PackageMatcher.java:\n+\t(patterns): Use type parameters.\n+\t(filter(Packagedoc[])): Likewise.\n+\t(match(PackageDoc)): Likewise.\n+\t* tools/gnu/classpath/tools/doclets/htmldoclet/HtmlDoclet.java:\n+\t(externalDocSets): Use type parameters.\n+\t(packageNameToDocSet)): Likewise.\n+\t(printPackagePage(File,String,PackageDoc,PackageDoc,PackageDoc)): Likewise.\n+\t(TreeNode): Add type parameter to Comparable.\n+\t(TreeNode.children): Use type parameters.\n+\t(TreeNode.compareTo(TreeNode)): Update to use specific type.\n+\t(addClassTreeNode(Map,ClassDoc)): Use type parameters.\n+\t(addInterfacetreeNode(Map,ClassDoc)): Likewise.\n+\t(printClassTree(HtmlPage,ClassDoc[])): Likewise.\n+\t(printInterfaceTree(HtmlPage,ClassDoc[])): Likewise.\n+\t(printFullTreePage()): Likewise.\n+\t(printIndexEntry(HtmlPage,Doc)): Likewise.\n+\t(printPackagesMenuPage()): Likewise.\n+\t(printClassMenuSection(HtmlPage,Collection,String)): Likewise.\n+\t(printClassMenuList(HtmlPage,ClassDoc[],boolean)): Likewise.\n+\t(printSplitIndex()): Likewise.\n+\t(printIndexPage(int,int,Character,List)): Likewise.\n+\t(printSerializationPage()): Likewise.\n+\t(printDeprecationPage()): Likewise.\n+\t(getMemberDocURL(HtmlPage,ProgramElementDoc)): Likewise.\n+\t(createTypeHref(HtmlPage,Type,boolean)): Likewise.\n+\t(getPackageURL(PackageDoc)): Remove redundant cast.\n+\t(getClassURL(ClassDoc)): Likewise.\n+\t* tools/gnu/classpath/tools/gjdoc/ClassDocImpl.java:\n+\t(primitiveNames): Add type parameters.\n+\t(findClassCache): Likewise.\n+\t(findClass(String,String): Likewise.\n+\t(createInstance(ClassDoc,PackageDoc,ClassDoc[],PackageDoc[],\n+\tchar[],int,int,List)): Likewise.\n+\t(resolve()): Likewise.\n+\t(typeMap): Likewise.\n+\t(typeForString(String)): Likewise..\n+\t(equals(Object)): Likewise.\n+\t(maybeSerMethodList): Likewise.\n+\t(setMaybeSerMethodList(List)): Likewise.\n+\t(findFieldValue(String,ClassDoc,String,Set)): Likewise.\n+\t(getValue(String,Set)): Likewise.\n+\t(compareTo(Doc)): Use specific type.\n+\t(importStatementList): Use type parameters.\n+\t(setImportStatementList(List)): Likewise.\n+\t* tools/gnu/classpath/tools/gjdoc/ClassDocProxy.java:\n+\t(compareTo(Doc)): Use specific type.\n+\t* tools/gnu/classpath/tools/gjdoc/ClassDocReflectedImpl.java:\n+\tExpand imports.\n+\t(findClass(String)): Don't use full class name for String.\n+\t(compareTo(Doc)): Use specific type.\n+\t* tools/gnu/classpath/tools/gjdoc/DocImpl.java:\n+\t(compareTo(Doc)): Use specific type.\n+\t* tools/gnu/classpath/tools/gjdoc/ExecutableMemberDocImpl.java:\n+\t(compareTo(Doc)): Use specific type.\n+\t* tools/gnu/classpath/tools/gjdoc/FieldDocImpl.java:\n+\t(createFromSource(ClassDoc,PackageDoc,char[],int,int)):\n+\tUse type parameters.  Remove unused lastFieldDefStart\n+\tvariable.\n+\t(constantValue(Set)): Use type parameters.\n+\t* tools/gnu/classpath/tools/gjdoc/Main.java:\n+\t(option_overview): Removed unused field.\n+\t(option_classpath): Likewise.\n+\t(option_sourcepath): Add type parameters.\n+\t(option_extdirs): Removed unused field.\n+\t(option_verbose): Likewise.\n+\t(option_java_flags): Likewise.\n+\t(option_subpackages): Add type parameters.\n+\t(option_exclude): Likewise.\n+\t(startDoclet(List)): Likewise.\n+\t(addFoundPackages(String,Set)): Likewise.\n+\t(findPackages(String,File,Set)): Likewise.\n+\t(start(String[])): Likewise.\n+\t(addJavaLangClasses()): Commented out, apparently unused.\n+\t(options): Add type parameters.\n+\t(initOptions()): Likewise.  Remove redundant variable\n+\tsetting.\n+\t* tools/gnu/classpath/tools/gjdoc/MemberDocImpl.java:\n+\t(compareTo(Doc)): Use specific type.\n+\t* tools/gnu/classpath/tools/gjdoc/PackageDocImpl.java:\n+\t(allClassesSet): Use type parameters.\n+\t(ordinaryClassesList): Likewise.\n+\t(exceptionsList): Likewise.\n+\t(interfacesList): Likewise.\n+\t(errorsList): Likewise.\n+\t(resolve()): Likewise.\n+\t(toClassDocArray(Collection)): Likewise.\n+\t(compareTo(Doc)): Use specific type.\n+\t* tools/gnu/classpath/tools/gjdoc/Parser.java:\n+\tExpand import statements.\n+\t(process(Parser,char[],int,int)): Add type parameters.\n+\t(processedFiles): Add type parameters.\n+\t(processSourceFile(File,boolean,String,String)): Add type\n+\tparameters.\n+\t(classOpened(char[],int,int)): Likewise.\n+\t(toArray(List,T[])): Likewise.\n+\t(classClosed()): Likewise.\n+\t(Context.fieldList): Likewise.\n+\t(Context.filteredFieldList): Likewise.\n+\t(Context.sfieldList): Likewise.\n+\t(Context.methodList): Likewise.\n+\t(Context.filteredMethodList): Likewise.\n+\t(Context.maybeSerMethodList): Likewise.\n+\t(Context.constructorList): Likewise.\n+\t(Context.filteredConstructorList): Likewise.\n+\t(Context.innerClassesList): Likewise.\n+\t(Context.filteredInnerClassesList): Likewise.\n+\t* tools/gnu/classpath/tools/gjdoc/RootDocImpl.java:\n+\t(findSourceFiles(String)): Add type parameters.\n+\t* tools/gnu/classpath/tools/gjdoc/expr/Evaluator.java:\n+\t(evaluate(String,Set,EvaluatorEnvironment)): Add type parameters.\n+\t* tools/gnu/classpath/tools/gjdoc/expr/EvaluatorEnvironment.java:\n+\t(getValue(String,Set)): Add type parameters.\n+\t* tools/gnu/classpath/tools/gjdoc/expr/Type.java:\n+\t(clazz): Add type parameters.\n+\t(Type(Class)): Likewise.\n+\t* tools/gnu/classpath/tools/rmic/ClassRmicCompiler.java:\n+\t(keep): Remove unused field.\n+\t(errors): Add type parameter.\n+\t(compile): Remove unused field.\n+\t(classpath): Likewise.\n+\t(clazz): Add type parameter.\n+\t(mRemoteInterfaces): Likewise.\n+\t(run(String[])): Add type parameters.\n+\t(processClass(String)): Likewise.\n+\t(getException()): Remove unnecessary cast.\n+\t(typeArray(Class[])): Add type parameter.\n+\t(param(Method,int)): Add type parameter.  Use Integer.valueOf.\n+\t(generateClassConstant(MethodVisitor,Class)): Add type parameters.\n+\t(generateClassArray(MethodVisitor,Class)): Likewise.\n+\t(generateStub()): Remove unused variables stubclassname, size\n+\t& endReturnTryCatch.  Remove unnecessary casts and add type\n+\tparameters.\n+\t(generateSkel()): Remove unused variable skelclassname.\n+\tUse Long.valueOf.\n+\t(generateMethodSkel(MethodVisitor,Method,Variables)):\n+\tAdd type parameters.\n+\t(typeArg(Class)): Add type parameter.\n+\t(readMethod(Class)): Likewise.\n+\t(writeMethod(Class)): Likewise.\n+\t(returnOpcode(Class)): Likewise.\n+\t(loadOpcode(Class)): Likewise.\n+\t(storeOpcode(Class)): Likewise.\n+\t(unboxMethod(Class)): Likewise.\n+\t(box(Class)): Likewise.\n+\t(size(Class)): Likewise.\n+\t(sortExceptions(Class[])): Add type parameters.\n+\t(setup(boolean,boolean,boolean,boolean,boolean,boolean,\n+\tboolean,boolean,boolean,boolean,String,String,String,String)):\n+\tRemove unused variables keep & classpath.\n+\t(findRemoteMethods()): Add type parameters.\n+\t(MethodRef.exceptions): Add type parameter.\n+\t(MethodRef.removeSubclasses(Class[])): Add type parameters.\n+\t(MethodRef.intersectExceptions(Method)): Likewise.\n+\t* tools/gnu/classpath/tools/rmic/Main.java:\n+\t(backends): Add type parameter.\n+\t(run(String[])): Remove redundant cast.\n+\t* tools/gnu/classpath/tools/rmic/RmiMethodGenerator.java:\n+\t(getArgumentList()): Add type parameters.\n+\t(getArgumentNames()): Likewise.\n+\t(getThrows()): Likewise.\n+\t(getStaticMethodDeclarations()): Likewise.\n+\t* tools/gnu/classpath/tools/rmic/SourceGiopRmicCompiler.java:\n+\tAdd type parameter to Comparable.\n+\t(implementedRemotes): Add type parameter.\n+\t(extraImports): Likewise.\n+\t(methods): Likewise.\n+\t(interfaces): Likewise.\n+\t(compile(Class)): Add type parameters.\n+\t(getId(Class)): Add type parameter.\n+\t(getIdList(Collection)): Add type parameters.\n+\t(generateStub()): Add type parameters.\n+\t(generateTie()): Likewise.\n+\t(compare(AbstractMethodGenerator,AbstractMethodGenerator)): Use\n+\tmore specific types.\n+\t(getImportStatements()): Add type parameters.\n+\t* tools/gnu/classpath/tools/rmic/Variables.java:\n+\t(free): Add type parameter.\n+\t(names): Add type parameters.\n+\t(wides): Add type parameter.\n+\t(declared): Likewise.\n+\t(allocateNow(Object,int)): Use Integer.valueOf.\n+\t(allocate(Object,int)): Add type parameters.\n+\t(deallocate(Object)): Remove redundant cast.\n+\tUse Integer.valueOf.\n+\t(get(Object)): Remove redundant cast.\n \n 2012-08-09  Dodji Seketeli  <dodji@redhat.com>\n \n \tUse accessor functions to manipulate xmlOutputBuffer\n \t* native/jni/xmlj/xmlj_io.c (GET_XML_OUTPUT_BUFFER_CONTENT)\n-    \t(GET_XML_OUTPUT_BUFFER_SIZE): New macros.\n-    \t(xmljOutputWriteCallback): Use them.\n+\t(GET_XML_OUTPUT_BUFFER_SIZE): New macros.\n+\t(xmljOutputWriteCallback): Use them.\n+\n+2012-08-09  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n+\n+\t* java/util/TimeZone.java:\n+\t(defaultZone()): Use parameterized PrivilegedAction.\n+\t(aliases0): Add type parameters.\n+\t(timezones0); Likewise.\n+\t(timezones()): Likewise.\n+\t(getDateParams(String)): Fix indenting.\n+\t(getTimeZoneInternal(String)): Remove redundant casts.\n+\t(getAvailableIDs(int)): Add type parameters.\n+\t(getAvailableIDs(File,String,ArrayList)): Likewise.\n+\t(getAvailableIDs()): Likewise.\n+\n+2012-07-03  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n+\n+\tUpdate copyright headers throughout.\n+\t* gnu/java/text/AttributedFormatBuffer.java:\n+\t(ranges): Add generic type information.\n+\t(attributes): Likewise.\n+\t(aRanges): Rename from a_ranges.\n+\t(aAttributes): Add generic type information and\n+\trename from a_attributes.  Convert to a list of\n+\tmaps rather than an array for type safety.\n+\t(defaultAttr): Replace prefix with static import.\n+\t(AttributedFormatBuffer(CPStringBuilder): Add generic\n+\ttyping.\n+\t(addAttribute(int,Attribute)): Drop prefix, rename\n+\tnew_range to newRange.  Add generic types.\n+\tUse Integer.valueOf in place of new Integer.\n+\t(append(String,Attribute)): Drop prefix.\n+\t(append(String,int[],List)): Replace array with list.\n+\tUse Integer.valueOf instead of new Integer.\n+\t(append(char,Attribute)): Drop prefix.\n+\t(setDefaultAttribute(Attribute)): Likewise.\n+\t(getDefaultAttribute()): Likewise.\n+\t(sync()): Rename a_ranges to aRanges.  Drop unneeded casts.\n+\tReplace array with list.\n+\t(getRanges()): Rename a_ranges to aRanges.\n+\t(getAttributes()): Replace map with list.  Rename a_attributes\n+\tto aAttributes.\n+\t* gnu/java/text/FormatBuffer.java:\n+\tAdd static import for Attribute.\n+\t* gnu/java/text/FormatCharacterIterator.java:\n+\t(attributes): Replace array with list.\n+\t(FormatCharacterIterator()): Likewise.\n+\t(FormatCharacterIterator(String,int,List)): Switch from\n+\tarray to list.  Update documentation.\n+\t(getAllAttributeKeys()): Add generic type.  Switch\n+\tfrom array to list.\n+\t(getAttributes()): Likewise.\n+\t(getAttribute(Attribute)): Likewise.\n+\t(getRunLimit(Set)): Likewise.\n+\t(getRunLimit(Attribute)): Likewise.\n+\t(getRunStart(Set)): Likewise.\n+\t(getRunStart(Attribute)): Likewise.\n+\t(mergeAttributes(List,int[])): Likewise.  Use List\n+\tin preference to Vector.  Use newRanges & newAttributes\n+\trather than new_ranges and new_attributes.\n+\t(append(AttributedCharacterIterator)): Likewise.\n+\t(append(String,HashMap)): Likewise.\n+\t(addAttributes(Map,int,int)): Likewise.\n+\t(dumpTable()): Use startRange instead of start_range.\n+\tAdd generic types.\n+\t* gnu/java/text/StringFormatBuffer.java,\n+\tAdd static import for Attribute.\n+\t* java/text/AttributedString.java:\n+\tAdd static import for Attribute.\n+\t(attribs): Add generic type.\n+\t(AttributeRange(Map,int,int)): Likewise.\n+\t(AttributedString(String,Map)): Likewise.\n+\t(AttributedString(AttributedCharacterIterator, int, int,\n+\tAttribute)): Drop prefix, add generic types.\n+\t(addAttribute(Attribute,Object)): Drop prefix.\n+\t(addAttribute(Attribute,Object,int,int)): Likewise\n+\tand add generic types.\n+\t(addAttributes(Map,int,int)): Add generic types.\n+\t(getIterator(Attribute)): Drop prefix.\n+\t(getIterator(Attribute[])): Likewise.\n+\t* java/text/AttributedStringIterator.java:\n+\tAdd static import for Attribute.\n+\t(getAllAttributeKeys()): Add generic type.\n+\t(getRunLimit(Attribute)): Add generic type, drop\n+\tprefix.\n+\t(getRunLimit(Set)): Add generic types.\n+\t(getRunStart(Attribute)): Add generic type, drop\n+\tprefix.\n+\t(getRunStart(Set)): Add generic types.\n+\t(getAttributes()): Likewise.\n+\t* java/text/Bidi.java:\n+\t(formatterIndices): Add generic type.\n+\t(reinsertFormattingCodes()): Drop redundant cast.\n+\t* java/text/BreakIterator.java:\n+\t(getInstance(String,Locale)): Add generic type to Class.\n+\t* java/text/ChoiceFormat.java:\n+\t(stringVec): Add generic type.\n+\t(limitVec): Likewise.\n+\t(applyPattern(String)): Remove redundant cast.\n+\t* java/text/CollationElementIterator.java:\n+\t(textDecomposition): Renamed from text_decomposition.\n+\t(textIndexes): Renamed from text_indexes.\n+\t(setText(String)): Add generic types.  Rename a_element\n+\tto aElement.  Rename a_idx to aIdx.  Rename key_old to\n+\tkeyOld.  Use Integer.valueOf rather than new Integer.\n+\t* java/text/DecimalFormat.java:\n+\t(attributes): Add generic type.\n+\t(formatToCharacterIterator(Object)): Remove redundant cast.\n+\t* java/text/MessageFormat.java:\n+\t(Field()): Remove unneeded warning suppression.\n+\t* java/text/NumberFormat.java:\n+\t(Field()): Likewise.\n+\n+2012-07-01  Andrew John Hughes  <ahughes@redhat.com>\n+\n+\tPR classpath/44052\n+\t* java/text/DateFormatSymbols.java:\n+\t(DFSData): Inner immutable class for storing parsed\n+\tlocale data.\n+\t(DFSData.DFSData(String[],String[],String,String[],\n+\tString[],String[],String[],String[],String[],\n+\tString[][])): Constructor to initialise a new instance\n+\twith property data.\n+\t(DFSData.getAMPMs()): Return a clone of the ampms array.\n+\t(DFSData.getEras()): Likewise for eras.\n+\t(DFSData.getLocalPatternChars()): Return the local pattern\n+\tcharacters.\n+\t(DFSData.getMonths()): Return a clone of the (long) months\n+\tarray.\n+\t(DFSData.getShortMonths()): Likewise for the short months array.\n+\t(DFSData.getWeekdays()): Likewise for (long) weekdays.\n+\t(DFSData.getShortWeekdays()): Likewise for short weekdays.\n+\t(DFSData.getDateFormats()): Likewise for date formats.\n+\t(DFSData.getTimeFormats()): Likewise for time formats.\n+\t(DFSData.getZoneStrings()): Likewise for zone strings.\n+\t(dataCache): Cache of parsed locale data.\n+\t(getZoneStrings(List<ResourceBundle>,Locale)):\n+\tMake static so it can be called by retrieveData.\n+\t(formatsForKey(List<ResourceBundle>,String)):\n+\tLikewise.\n+\t(getString(List<ResourceBundle>, String)): Likewise.\n+\t(retrieveData(Locale)): Separate out retrieval of\n+\tlocale data from constructor and store it in the cache.\n+\t(DateFormatSymbols(Locale)): Modify to call retrieveData\n+\tand set fields from the returned DFSData instance.\n+\n+2012-05-30  Andrew John Hughes  <ahughes@redhat.com>\n \n-2012-03-08  Andrew John Hughes  <ahughes@redhat.com>\n+\t* java/text/DateFormatSymbols.java:\n+\t(getZoneStrings(List<ResourceBundle>, Locale)):\n+\tRefactor to use existing list of resource bundles.\n+\t(formatsForKey(List<ResourceBundle>, String)):\n+\tLikewise and use new local getString method.\n+\t(getString(List<ResourceBundle>, String)):\n+\tUse first available String from most-specific locale\n+\trather than the least-specific.\n+\t(DateFormatSymbols(Locale)): Use bundles for resolving\n+\tlocalPatternChars, dateFormats, timeFormats and runtimeZoneStrings\n+\tas well.\n+\n+2012-05-04  Andrew John Hughes  <ahughes@redhat.com>\n+\n+\t* native/jni/gtk-peer/gnu_java_awt_peer_gtk_GdkFontPeer.c,\n+\t(font_map): Renamed from ft2_map.\n+\t(Java_gnu_java_awt_peer_gtk_GdkFontPeer_initStaticState(JNIEnv,\n+\tjclass)): Remove cast to pango_ft2_font_map_new.\n+\t(Java_gnu_java_awt_peer_gtk_GdKFontPeer_setFont(JNIEnv,\n+\tjobject,jstring,jint,jint)): Call pango_font_map_create_context\n+\trather than deprecated pango_ft2_font_map_create_context.\n+\n+2012-05-01  Andrew John Hughes  <ahughes@redhat.com>\n+\n+\t* java/text/DateFormatSymbols.java:\n+\tRename U00AE and U000A9 as the more memorable\n+\tFIELD_SPLIT and ZONE_SPLIT respectively.\n+\t* THANKYOU: Add Andreas Sewe.\n \n-\t* NEWS: Set correct release date.\n-\t* configure.ac: Bump to 0.99 proper.\n+2012-04-30  Andreas Sewe  <sewe@st.informatik.tu-darmstadt.de>\n+\n+\tPR classpath/53171\n+\t* java/text/DateFormatSymbols.java:\n+\t(U00A9): Pre-compile pattern for zone separation.\n+\t(U00AE): Likewise for fields.\n+\t(getStringArray(List,String,int,String)): Use U00AE.split\n+\tin place of String.split.\n+\t(getZoneStrings(ResourceBundle,Locale)): Use U00AE.split\n+\tand U00A9.split in place of String.split.\n+\n+2012-04-25  Andrew John Hughes  <ahughes@redhat.com>\n+\n+\tUpdate warning suppression so it still works\n+\twith newer compilers.\n+\t* javax/activation/ActivationDataFlavor.java:\n+\t(ActivationDataFlavor(Class,String,String)): Suppress\n+\trawtypes not unchecked.\n+\t(ActivationDataFlavor(Class,String)): Likewise.\n+\t(getRepresentationClass()): Likewise.\n+\t* javax/activation/MimeTypeParameterList.java:\n+\t(getNames()): Likewise.\n+\t* javax/management/DefaultLoaderRepository.java:\n+\t(loadClass(String)): Likewise.\n+\t(loadClassWithout(ClassLoader,String)): Likewise.\n+\t* javax/management/MBeanConstructorInfo.java:\n+\t(MBeanConstructorInof(String,Constructor)): Likewise.\n+\t* javax/management/remote/rmi/RMIConnection.java:\n+\t(addNotificationListener(ObjectName,ObjectName,MarshelledObject,\n+\tMarshelledObject,Subject)): Likewise.\n+\t(addNotificationListeners(ObjectName[],MarshelledObject[], Subject[])):\n+\tLikewise.\n+\t(createMBean(String,ObjectName,MarshalledObject,String,Subject)): Likewise.\n+\t(createMBean(String,ObjectName,ObjectName,MarshalledObject,String[],Subject)):\n+\tLikewise.\n+\t(invoke(ObjectName,String,MarshalledObject,String[],Subject)): Likewise.\n+\t(queryMBeans(ObjectName,MarshalledObject,Subject)): Likewise.\n+\t(queryNames(ObjectName,MarshalledObject,Subject)): Likewise.\n+\t(removeNotificationListener(ObjectName,ObjectName,MarshalledObject,\n+\tMarshalledObject,Subject)): Likewise.\n+\t(setAttribute(ObjectName,MarshalledObject,Subject)): Likewise.\n+\t(setAttributes(ObjectName,MarshalledObject,Subject)): Likewise.\n+\t* javax/swing/tree/DefaultMutableTreeNode.java:\n+\t(children()): Likewise.\n+\t(preorderEnumeration()): Likewise.\n+\t(postorderEnumeration()): Likewise.\n+\t(breadthFirstEnumeration()): Likewise.\n+\t(depthFirstEnumeration()): Likewise.\n+\t(pathFromAncestorEnumeration(TreeNode)): Likewise.\n+\t(BreadthFirstEnumeration.nextElement()): Move annotation down to assignment level.\n+\t(PreorderEnumeration.PreorderEnumeration(TreeNode)): Likewise.\n+\t(PreorderEnumeration.traverse(Enumeration)): Likewise.\n+\t(PostorderEnumeration.PostorderEnumeration(TreeNode)): Likewise.\n+\t(PostorderEnumeration.traverse(Enumeration()): Likewise.\n+\t* javax/swing/tree/TreeNode.java:\n+\t(children()): Suppress rawtypes not unchecked.\n+\t* javax/xml/namespace/NamespaceContext.java:\n+\t(getPrefixes(String)): Likewise.\n+\t* javax/xml/stream/XMLEventFactory.java:\n+\t(createStartElement(QName,Iterator,Iterator)): Likewise.\n+\t(createStartElement(String,String,String,Iterator,Iterator)): Likewise.\n+\t(createStartElement(String,String,String,Iterator,Iterator,NamespaceContext)):\n+\tLikewise.\n+\t(createEndElement(QName,Iterator)): Likewise.\n+\t(createEndElement(String,String,String,Iterator)): Likewise.\n+\t* javax/xml/stream/XMLEventReader.java: Likewise (at class level\n+\tdue to inheritance).\n+\t* javax/xml/stream/events/DTD.java:\n+\t(getNotations()): Likewise.\n+\t(getEntities()): Likewise.\n+\t* javax/xml/stream/events/EndElement.java:\n+\t(getNamespaces()): Likewise.\n+\t* javax/xml/stream/events/StartElement.java:\n+\t(getAttributes()): Likewise.\n+\t(getNamespaces()): Likewise.\n+\t* javax/xml/xpath/XPathFunction.java:\n+\t(evaluate(List)): Likewise.\n+\t* org/omg/CORBA/LocalObject.java:\n+\t(_servant_preinvoke(String,Class)): Likewise.\n+\t* org/omg/CORBA/portable/Delegate.java:\n+\t(servant_preinvoke(org.omg.CORBA.Object,String,Class)): Likewise.\n+\t* org/omg/CORBA/portable/InputStream.java:\n+\t(read_Object(Class)): Likewise.\n+\t* org/omg/CORBA/portable/ObjectImpl.java:\n+\t(_servant_preinvoke(String,Class)): Likewise.\n+\t* org/omg/CORBA_2_3/portable/InputStream.java:\n+\t(read_abstract_interface(Class)): Likewise.\n+\t(read_value(Class)): Likewise.\n+\t* org/omg/CORBA_2_3/portable/OutputStream.java:\n+\t(write_value(Serializable,Class)): Likewise.\n+\t* org/omg/DynamicAny/_DynAnyFactoryStub.java:\n+\t(_opsClass): Likewise.\n+\t* org/omg/DynamicAny/_DynAnyStub.java:\n+\t(_opsClass): Likewise.\n+\t* org/omg/DynamicAny/_DynArrayStub.java,\n+\t(_opsClass): Likewise.\n+\t* org/omg/DynamicAny/_DynEnumStub.java,\n+\t(_opsClass): Likewise.\n+\t* org/omg/DynamicAny/_DynFixedStub.java,\n+\t(_opsClass): Likewise.\n+\t* org/omg/DynamicAny/_DynSequenceStub.java,\n+\t(_opsClass): Likewise.\n+\t* org/omg/DynamicAny/_DynStructStub.java,\n+\t(_opsClass): Likewise.\n+\t* org/omg/DynamicAny/_DynUnionStub.java,\n+\t(_opsClass): Likewise.\n+\t* org/omg/DynamicAny/_DynValueStub.java,\n+\t(_opsClass): Likewise.\n+\t* org/omg/PortableServer/_ServantActivatorStub.java,\n+\t(_opsClass): Likewise.\n+\t* org/omg/PortableServer/_ServantLocatorStub.java,\n+\t(_opsClass): Likewise.\n+\n+2012-04-24  Andrew John Hughes  <ahughes@redhat.com>\n+\n+\t* native/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkImage.c:\n+\t(Java_gnu_java_awt_peer_gtk_GtkImage_freePixbuf):\n+\tUse g_object_unref rather than deprecated gdk_pixbuf_unref\n+\tto avoid warning.\n+\n+2012-04-03  Andrew John Hughes  <ahughes@redhat.com>\n+\n+\t* .gitignore: Renamed from .cvsignore.\n+\n+2012-01-01  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gnu/java/rmi/registry/RegistryImpl.java (version): Update\n+\tcopyright notice dates.\n+\t* tools/gnu/classpath/tools/orbd/Main.java (run): Likewise.\n+\n+2007-02-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* java/util/TimeZone.java (getDefaultDisplayName): Don't\n+\tcheck if TimeZone is instanceof SimpleTimeZone.\n+\n+2006-09-13  Andrew Haley  <aph@redhat.com>\n+\n+\t* java/util/PriorityQueue.java: Throw IllegalArgumentException for\n+\tcapacity < 1.\n+\t(Iterator.remove()): Decrement index after removing element.\n+\n+2007-02-14  Jakub Jelinek  <jakub@redhat.com>\n+\tAndrew Haley  <aph@redhat.com>\n+\n+\t* java/util/TimeZone.java (getDateParams): Negate dayOfWeek.\n+\n+2012-03-22  Andrew John Hughes  <ahughes@redhat.com>\n+\n+\t* java/util/regex/Matcher.java:\n+\t(usePattern(Pattern)): Implemented.\n+\n+2012-03-25  Gerald Pfeifer  <gerald@pfeifer.com>\n+\n+        PR libgcj/52694\n+\t* native/jni/java-io/java_io_VMConsole.c (IUCLC): Define, if\n+\tundefined.\n+\n+2012-03-16  Andrew John Hughes  <ahughes@redhat.com>\n+\n+\t* NEWS: Add key along the same lines\n+\tas IcedTea.\n+\n+2012-03-12  Pekka Enberg  <penberg@kernel.org>\n+\n+\t* gnu/java/nio/FileLockImpl.java,\n+\t* java/beans/XMLDecoder.java,\n+\t* java/beans/XMLEncoder.java,\n+\t* java/io/Closeable.java,\n+\t* java/io/ObjectInput.java,\n+\t* java/io/ObjectOutput.java,\n+\t* java/lang/AutoCloseable.java,\n+\t* java/nio/channels/FileLock.java,\n+\t* java/sql/Connection.java,\n+\t* java/sql/ResultSet.java,\n+\t* java/sql/Statement.java,\n+\t* javax/sound/midi/MidiDevice.java,\n+\t* javax/sound/midi/Receiver.java,\n+\t* javax/sound/midi/Transmitter.java,\n+\t* javax/sound/sampled/Line.java:\n+\tAdd missing interface.\n+\n+2012-03-12  Pekka Enberg  <penberg@kernel.org>\n+\n+\t* java/lang/reflect/Modifier.java:\n+\t(classModifiers): Add missing method.\n+\t(interfaceModifiers): Add missing method.\n+\t(constructorModifiers): Add missing method.\n+\t(methodModifiers): Add missing method.\n+\t(fieldModifiers): Add missing method.\n+\n+2012-03-12  Pekka Enberg  <penberg@kernel.org>\n+\n+\t* java/lang/ClassNotFoundException,\n+\t* java/lang/IllegalAccessException.java,\n+\t* java/lang/InstantiationException.java,\n+\t* java/lang/NoSuchFieldException.java,\n+\t* java/lang/NoSuchMethodException.java,\n+\t* java/lang/ReflectiveOperationException.java,\n+\t* java/lang/reflect/InvocationTargetException.java:\n+\tAdd ReflectiveOperationException class.\n+\n+2012-03-12  Pekka Enberg  <penberg@kernel.org>\n+\n+\t* java/lang/AssertionError.java:\n+\t(AssertionError): Add missing constructor.\n+\t* java/lang/LinkageError.java:\n+\t(LinkageError): Add missing constructor.\n+\n+2012-03-12  Pekka Enberg  <penberg@kernel.org>\n+\n+\t* java/lang/Boolean.java:\n+\t(compare): Add missing method.\n+\t* java/lang/Byte.java:\n+\t(compare): Add missing method.\n+\t* java/lang/Character.java:\n+\t(compare): Add missing method.\n+\t* java/lang/Integer.java:\n+\t(compare): Add missing method.\n+\t* java/lang/Long.java:\n+\t(compare): Add missing method.\n+\t* java/lang/Short.java:\n+\t(compare): Add missing method.\n+\n+2012-03-12  Pekka Enberg  <penberg@kernel.org>\n+\n+\t* java/lang/System.java:\n+\t(lineSeparator): Add missing method.\n+\n+2012-03-12  Pekka Enberg  <penberg@kernel.org>\n+\n+\t* java/lang/reflect/Member.java:\n+\t(getDeclaringClass): Fix return type.\n+\n+2012-03-07  Andrew John Hughes  <ahughes@redhat.com>\n+\n+\t* NEWS:\n+\tAdd section for 1.0 release.\n+\t* configure.ac:\n+\tBump to 1.0pre.\n \n 2012-03-07  Andrew John Hughes  <ahughes@redhat.com>\n "}, {"sha": "45da96b0792bca3451fd0ce69dba36dbe94b0ead", "filename": "libjava/classpath/ChangeLog.gcj", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2FChangeLog.gcj", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2FChangeLog.gcj", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2FChangeLog.gcj?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -1,3 +1,8 @@\n+2012-12-03  Matthias Klose  <doko@ubuntu.com>\n+\n+\t* configure.ac (AM_INIT_AUTOMAKE): Call with no-dist.\n+\t* m4/lib-ld.m4, m4/lib-link.m4,m4/lib-prefix.m4: New.\n+\n 2012-05-16  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* configure: Regenerated."}, {"sha": "7d1c323beae76333f523f6df31c47a87f5597edb", "filename": "libjava/classpath/INSTALL", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2FINSTALL", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2FINSTALL", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2FINSTALL?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -1,8 +1,8 @@\n Installation Instructions\n *************************\n \n-Copyright (C) 1994-1996, 1999-2002, 2004-2011 Free Software Foundation,\n-Inc.\n+Copyright (C) 1994, 1995, 1996, 1999, 2000, 2001, 2002, 2004, 2005,\n+2006, 2007, 2008, 2009 Free Software Foundation, Inc.\n \n    Copying and distribution of this file, with or without modification,\n are permitted in any medium without royalty provided the copyright\n@@ -226,11 +226,6 @@ order to use an ANSI C compiler:\n \n and if that doesn't work, install pre-built binaries of GCC for HP-UX.\n \n-   HP-UX `make' updates targets which have the same time stamps as\n-their prerequisites, which makes it generally unusable when shipped\n-generated files such as `configure' are involved.  Use GNU `make'\n-instead.\n-\n    On OSF/1 a.k.a. Tru64, some versions of the default C compiler cannot\n parse its `<wchar.h>' header file.  The option `-nodtk' can be used as\n a workaround.  If GNU CC is not installed, it is therefore recommended"}, {"sha": "eda3433a3212ba94e9b3b2edda40da06b7585729", "filename": "libjava/classpath/Makefile.in", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2FMakefile.in?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -36,11 +36,11 @@ host_triplet = @host@\n target_triplet = @target@\n subdir = .\n DIST_COMMON = README $(am__configure_deps) $(srcdir)/../../compile \\\n-\t$(srcdir)/../../config.guess $(srcdir)/../../config.sub \\\n-\t$(srcdir)/../../install-sh $(srcdir)/../../ltmain.sh \\\n-\t$(srcdir)/../../missing $(srcdir)/../../mkinstalldirs \\\n-\t$(srcdir)/Makefile.am $(srcdir)/Makefile.in \\\n-\t$(top_srcdir)/configure \\\n+\t$(srcdir)/../../config.guess $(srcdir)/../../config.rpath \\\n+\t$(srcdir)/../../config.sub $(srcdir)/../../install-sh \\\n+\t$(srcdir)/../../ltmain.sh $(srcdir)/../../missing \\\n+\t$(srcdir)/../../mkinstalldirs $(srcdir)/Makefile.am \\\n+\t$(srcdir)/Makefile.in $(top_srcdir)/configure \\\n \t$(top_srcdir)/gnu/classpath/Configuration.java.in \\\n \t$(top_srcdir)/gnu/java/security/Configuration.java.in \\\n \t$(top_srcdir)/resource/META-INF/services/java.util.prefs.PreferencesFactory.in \\\n@@ -57,9 +57,6 @@ DIST_COMMON = README $(am__configure_deps) $(srcdir)/../../compile \\\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n am__aclocal_m4_deps = $(top_srcdir)/../../config/depstand.m4 \\\n \t$(top_srcdir)/../../config/lead-dot.m4 \\\n-\t$(top_srcdir)/../../config/lib-ld.m4 \\\n-\t$(top_srcdir)/../../config/lib-link.m4 \\\n-\t$(top_srcdir)/../../config/lib-prefix.m4 \\\n \t$(top_srcdir)/../../config/multi.m4 \\\n \t$(top_srcdir)/../../config/no-executables.m4 \\\n \t$(top_srcdir)/../../config/override.m4 \\\n@@ -78,7 +75,9 @@ am__aclocal_m4_deps = $(top_srcdir)/../../config/depstand.m4 \\\n \t$(top_srcdir)/m4/ax_create_stdint_h.m4 \\\n \t$(top_srcdir)/m4/ax_func_which_gethostbyname_r.m4 \\\n \t$(top_srcdir)/m4/gcc_attribute.m4 $(top_srcdir)/m4/iconv.m4 \\\n-\t$(top_srcdir)/m4/pkg.m4 $(top_srcdir)/configure.ac\n+\t$(top_srcdir)/m4/lib-ld.m4 $(top_srcdir)/m4/lib-link.m4 \\\n+\t$(top_srcdir)/m4/lib-prefix.m4 $(top_srcdir)/m4/pkg.m4 \\\n+\t$(top_srcdir)/configure.ac\n am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n \t$(ACLOCAL_M4)\n am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \\\n@@ -247,6 +246,7 @@ MAKEINFO = @MAKEINFO@\n MKDIR = @MKDIR@\n MKDIR_P = @MKDIR_P@\n MOC = @MOC@\n+MOC4 = @MOC4@\n MOZILLA_CFLAGS = @MOZILLA_CFLAGS@\n MOZILLA_LIBS = @MOZILLA_LIBS@\n NM = @NM@"}, {"sha": "0a7884a6fabb9a220d8e5da8dcc74b925fc8d03a", "filename": "libjava/classpath/NEWS", "status": "modified", "additions": 24, "deletions": 1, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2FNEWS", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2FNEWS", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2FNEWS?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -1,4 +1,27 @@\n-New in release 0.99 (Mar 08, 2012)\n+Key:\n+\n+SX  - http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=X\n+RHX - https://bugzilla.redhat.com/show_bug.cgi?id=X\n+DX  - http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=X\n+GX  - http://bugs.gentoo.org/show_bug.cgi?id=X\n+CAX - http://server.complang.tuwien.ac.at/cgi-bin/bugzilla/show_bug.cgi?id=X\n+LPX - https://bugs.launchpad.net/bugs/X \n+PRX - http://gcc.gnu.org/bugzilla/show_bug.cgi?id=X\n+\n+CVE-XXXX-YYYY: http://www.cve.mitre.org/cgi-bin/cvename.cgi?name=XXXX-YYYY\n+\n+New in release 0.99.1 (XXX XX, 2012)\n+\n+* Bug fixes:\n+  - PR42134: NPE in java.text.Bidi\n+  - PR54931: Classpath will not build docs with version of GJDoc included with itself\n+  - PR54960: Avoid NullPointerException in SAXSerializer.\n+  - PR42551: Avoid overwriting length of message when computing length representation.\n+  - PR44208: Ensure a handle for the enum is registered before its constant.\n+  - PR41689: javax.security.sasl.CREDIENTIALS field is missing\n+  - PR55140: Addition of exception to codePointBefore breaks OpenJDK GenerateBreakIteratorData tool\n+\n+New in release 0.99 (Feb 15, 2012)\n \n * Addition of java.util.regex.Pattern.quote.\n * Addition of java.io.IOError."}, {"sha": "22314d1e74309778ef9bf8658909148ff41671d4", "filename": "libjava/classpath/THANKYOU", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2FTHANKYOU", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2FTHANKYOU", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2FTHANKYOU?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -15,6 +15,7 @@ Moses DeJong (dejong@cs.umn.edu)\n Patrick Doyle (doylep@eecg.toronto.edu)\n Julian Dolby (dolby@us.ibm.com)\n Raimar Falke (hawk@hawk.shef.ac.uk)\n+Paul Fernhout (pdfernhout@kurtz-fernhout.com)\n Philip Fong (pwlfong@users.sourceforge.net)\n Jeroen Frijters (jeroen@sumatra.nl)\n Etienne M. Gagnon (etienne.gagnon@uqam.ca)\n@@ -43,13 +44,16 @@ Petter Reinholdtsen (pere@hungry.com)\n Julian Scheid (julian.scheid@sektor37.de)\n Martin Schr\ufffdder (ms@artcom-gmbh.de)\n Robert Schuster (robertschuster@fsfe.org)\n+Andreas Sewe (sewe@st.informatik.tu-darmstadt.de)\n+Jeremy Singer (Jeremy.Singer@glasgow.ac.uk)\n Gaute Smaaland (gs@sevenmountains.no)\n Michael Smith (msmith@spinnakernet.com)\n J. Russell Smyth (drfish@uswest.net)\n Ian D. Stewart (idstewart@softhome.net)\n Jeff Sturm (jsturm@one-point.com)\n Sreenivas Subramoney (sreenivas.subramoney@intel.com)\n Chris Toshok (toshok@hungry.com)\n+Paul Viney (paul@diasoft.nl)\n Weldon Washburn (weldon.washburn@intel.com)\n Adam Welc (welc@cs.purdue.edu)\n Gansha Wu (gansha.wu@intel.com)"}, {"sha": "c6fce4da260fd44067decca670865d58c10439b9", "filename": "libjava/classpath/aclocal.m4", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Faclocal.m4?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -1062,9 +1062,6 @@ AC_SUBST([am__untar])\n \n m4_include([../../config/depstand.m4])\n m4_include([../../config/lead-dot.m4])\n-m4_include([../../config/lib-ld.m4])\n-m4_include([../../config/lib-link.m4])\n-m4_include([../../config/lib-prefix.m4])\n m4_include([../../config/multi.m4])\n m4_include([../../config/no-executables.m4])\n m4_include([../../config/override.m4])\n@@ -1085,4 +1082,7 @@ m4_include([m4/ax_create_stdint_h.m4])\n m4_include([m4/ax_func_which_gethostbyname_r.m4])\n m4_include([m4/gcc_attribute.m4])\n m4_include([m4/iconv.m4])\n+m4_include([m4/lib-ld.m4])\n+m4_include([m4/lib-link.m4])\n+m4_include([m4/lib-prefix.m4])\n m4_include([m4/pkg.m4])"}, {"sha": "59bb593f109c8d795df4cbb96b015222eed91c07", "filename": "libjava/classpath/config.sub", "status": "modified", "additions": 27, "deletions": 15, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fconfig.sub", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fconfig.sub", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fconfig.sub?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -2,9 +2,9 @@\n # Configuration validation subroutine script.\n #   Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999,\n #   2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010,\n-#   2011 Free Software Foundation, Inc.\n+#   2011, 2012 Free Software Foundation, Inc.\n \n-timestamp='2011-10-29'\n+timestamp='2012-04-18'\n \n # This file is (in principle) common to ALL GNU software.\n # The presence of a machine in this file suggests that SOME GNU software\n@@ -21,9 +21,7 @@ timestamp='2011-10-29'\n # GNU General Public License for more details.\n #\n # You should have received a copy of the GNU General Public License\n-# along with this program; if not, write to the Free Software\n-# Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston, MA\n-# 02110-1301, USA.\n+# along with this program; if not, see <http://www.gnu.org/licenses/>.\n #\n # As a special exception to the GNU General Public License, if you\n # distribute this file as part of a program that contains a\n@@ -76,8 +74,8 @@ version=\"\\\n GNU config.sub ($timestamp)\n \n Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000,\n-2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free\n-Software Foundation, Inc.\n+2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012\n+Free Software Foundation, Inc.\n \n This is free software; see the source for copying conditions.  There is NO\n warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\"\n@@ -132,6 +130,10 @@ case $maybe_os in\n     os=-$maybe_os\n     basic_machine=`echo $1 | sed 's/^\\(.*\\)-\\([^-]*-[^-]*\\)$/\\1/'`\n     ;;\n+  android-linux)\n+    os=-linux-android\n+    basic_machine=`echo $1 | sed 's/^\\(.*\\)-\\([^-]*-[^-]*\\)$/\\1/'`-unknown\n+    ;;\n   *)\n     basic_machine=`echo $1 | sed 's/-[^-]*$//'`\n     if [ $basic_machine != $1 ]\n@@ -223,6 +225,12 @@ case $os in\n \t-isc*)\n \t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`\n \t\t;;\n+\t-lynx*178)\n+\t\tos=-lynxos178\n+\t\t;;\n+\t-lynx*5)\n+\t\tos=-lynxos5\n+\t\t;;\n \t-lynx*)\n \t\tos=-lynxos\n \t\t;;\n@@ -247,6 +255,7 @@ case $basic_machine in\n \t# Some are omitted here because they have special meanings below.\n \t1750a | 580 \\\n \t| a29k \\\n+\t| aarch64 | aarch64_be \\\n \t| alpha | alphaev[4-8] | alphaev56 | alphaev6[78] | alphapca5[67] \\\n \t| alpha64 | alpha64ev[4-8] | alpha64ev56 | alpha64ev6[78] | alpha64pca5[67] \\\n \t| am33_2.0 \\\n@@ -319,8 +328,7 @@ case $basic_machine in\n \tc6x)\n \t\tbasic_machine=tic6x-unknown\n \t\t;;\n-\tm6811 | m68hc11 | m6812 | m68hc12 | picochip)\n-\t\t# Motorola 68HC11/12.\n+\tm6811 | m68hc11 | m6812 | m68hc12 | m68hcs12x | picochip)\n \t\tbasic_machine=$basic_machine-unknown\n \t\tos=-none\n \t\t;;\n@@ -333,7 +341,10 @@ case $basic_machine in\n \tstrongarm | thumb | xscale)\n \t\tbasic_machine=arm-unknown\n \t\t;;\n-\n+\txgate)\n+\t\tbasic_machine=$basic_machine-unknown\n+\t\tos=-none\n+\t\t;;\n \txscaleeb)\n \t\tbasic_machine=armeb-unknown\n \t\t;;\n@@ -356,6 +367,7 @@ case $basic_machine in\n \t# Recognize the basic CPU types with company name.\n \t580-* \\\n \t| a29k-* \\\n+\t| aarch64-* | aarch64_be-* \\\n \t| alpha-* | alphaev[4-8]-* | alphaev56-* | alphaev6[78]-* \\\n \t| alpha64-* | alpha64ev[4-8]-* | alpha64ev56-* | alpha64ev6[78]-* \\\n \t| alphapca5[67]-* | alpha64pca5[67]-* | arc-* \\\n@@ -719,7 +731,6 @@ case $basic_machine in\n \ti370-ibm* | ibm*)\n \t\tbasic_machine=i370-ibm\n \t\t;;\n-# I'm not sure what \"Sysv32\" means.  Should this be sysv3.2?\n \ti*86v32)\n \t\tbasic_machine=`echo $1 | sed -e 's/86.*/86-pc/'`\n \t\tos=-sysv32\n@@ -816,6 +827,10 @@ case $basic_machine in\n \tms1-*)\n \t\tbasic_machine=`echo $basic_machine | sed -e 's/ms1-/mt-/'`\n \t\t;;\n+\tmsys)\n+\t\tbasic_machine=i386-pc\n+\t\tos=-msys\n+\t\t;;\n \tmvs)\n \t\tbasic_machine=i370-ibm\n \t\tos=-mvs\n@@ -1343,7 +1358,7 @@ case $os in\n \t      | -ptx* | -coff* | -ecoff* | -winnt* | -domain* | -vsta* \\\n \t      | -udi* | -eabi* | -lites* | -ieee* | -go32* | -aux* \\\n \t      | -chorusos* | -chorusrdb* | -cegcc* \\\n-\t      | -cygwin* | -pe* | -psos* | -moss* | -proelf* | -rtems* \\\n+\t      | -cygwin* | -msys* | -pe* | -psos* | -moss* | -proelf* | -rtems* \\\n \t      | -mingw32* | -linux-gnu* | -linux-android* \\\n \t      | -linux-newlib* | -linux-uclibc* \\\n \t      | -uxpv* | -beos* | -mpeix* | -udk* \\\n@@ -1555,9 +1570,6 @@ case $basic_machine in\n \t\t;;\n \tm68000-sun)\n \t\tos=-sunos3\n-\t\t# This also exists in the configure program, but was not the\n-\t\t# default.\n-\t\t# os=-sunos4\n \t\t;;\n \tm68*-cisco)\n \t\tos=-aout"}, {"sha": "e42cde6410298d4f62ce879f392af3130fd7bbb0", "filename": "libjava/classpath/configure", "status": "modified", "additions": 241, "deletions": 82, "changes": 323, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fconfigure?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -1,6 +1,6 @@\n #! /bin/sh\n # Guess values for system-dependent variables and create Makefiles.\n-# Generated by GNU Autoconf 2.64 for GNU Classpath 0.99.\n+# Generated by GNU Autoconf 2.64 for GNU Classpath 0.99.1-pre.\n #\n # Report bugs to <classpath@gnu.org>.\n #\n@@ -559,8 +559,8 @@ MAKEFLAGS=\n # Identity of this package.\n PACKAGE_NAME='GNU Classpath'\n PACKAGE_TARNAME='classpath'\n-PACKAGE_VERSION='0.99'\n-PACKAGE_STRING='GNU Classpath 0.99'\n+PACKAGE_VERSION='0.99.1-pre'\n+PACKAGE_STRING='GNU Classpath 0.99.1-pre'\n PACKAGE_BUGREPORT='classpath@gnu.org'\n PACKAGE_URL='http://www.gnu.org/software/classpath/'\n \n@@ -669,6 +669,7 @@ GLIB_LIBS\n GLIB_CFLAGS\n MOZILLA_LIBS\n MOZILLA_CFLAGS\n+MOC4\n MOC\n QT_LIBS\n QT_CFLAGS\n@@ -1490,7 +1491,7 @@ if test \"$ac_init_help\" = \"long\"; then\n   # Omit some internal or obsolete options to make the list less imposing.\n   # This message is too long to be a string in the A/UX 3.1 sh.\n   cat <<_ACEOF\n-\\`configure' configures GNU Classpath 0.99 to adapt to many kinds of systems.\n+\\`configure' configures GNU Classpath 0.99.1-pre to adapt to many kinds of systems.\n \n Usage: $0 [OPTION]... [VAR=VALUE]...\n \n@@ -1565,7 +1566,7 @@ fi\n \n if test -n \"$ac_init_help\"; then\n   case $ac_init_help in\n-     short | recursive ) echo \"Configuration of GNU Classpath 0.99:\";;\n+     short | recursive ) echo \"Configuration of GNU Classpath 0.99.1-pre:\";;\n    esac\n   cat <<\\_ACEOF\n \n@@ -1757,7 +1758,7 @@ fi\n test -n \"$ac_init_help\" && exit $ac_status\n if $ac_init_version; then\n   cat <<\\_ACEOF\n-GNU Classpath configure 0.99\n+GNU Classpath configure 0.99.1-pre\n generated by GNU Autoconf 2.64\n \n Copyright (C) 2009 Free Software Foundation, Inc.\n@@ -2586,7 +2587,7 @@ cat >config.log <<_ACEOF\n This file contains any messages produced by compilers while\n running configure, to aid debugging if configure makes a mistake.\n \n-It was created by GNU Classpath $as_me 0.99, which was\n+It was created by GNU Classpath $as_me 0.99.1-pre, which was\n generated by GNU Autoconf 2.64.  Invocation command line was\n \n   $ $0 $@\n@@ -3621,7 +3622,7 @@ fi\n \n # Define the identity of the package.\n  PACKAGE='classpath'\n- VERSION='0.99'\n+ VERSION='0.99.1-pre'\n \n \n cat >>confdefs.h <<_ACEOF\n@@ -3880,10 +3881,10 @@ if test \"${enable_Werror+set}\" = set; then :\n   enableval=$enable_Werror; case \"${enableval}\" in\n                 yes) ENABLE_WERROR=yes ;;\n                 no) ENABLE_WERROR=no ;;\n-                *) ENABLE_WERROR=default ;;\n+                *) ENABLE_WERROR=no ;;\n               esac\n else\n-  ENABLE_WERROR=default\n+  ENABLE_WERROR=no\n fi\n \n \n@@ -11819,7 +11820,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11822 \"configure\"\n+#line 11823 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11925,7 +11926,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11928 \"configure\"\n+#line 11929 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -17957,7 +17958,7 @@ $as_echo_n \"checking for ld used by GCC... \" >&6; }\n       # Canonicalize the path of ld\n       ac_prog=`echo $ac_prog| sed 's%\\\\\\\\%/%g'`\n       while echo $ac_prog | grep \"$re_direlt\" > /dev/null 2>&1; do\n-\tac_prog=`echo $ac_prog| sed \"s%$re_direlt%/%\"`\n+        ac_prog=`echo $ac_prog| sed \"s%$re_direlt%/%\"`\n       done\n       test -z \"$LD\" && LD=\"$ac_prog\"\n       ;;\n@@ -17989,11 +17990,12 @@ else\n       # Check to see if the program is GNU ld.  I'd rather use --version,\n       # but apparently some GNU ld's only accept -v.\n       # Break only if it was the GNU/non-GNU ld that we prefer.\n-      if \"$acl_cv_path_LD\" -v 2>&1 < /dev/null | egrep '(GNU|with BFD)' > /dev/null; then\n-\ttest \"$with_gnu_ld\" != no && break\n-      else\n-\ttest \"$with_gnu_ld\" != yes && break\n-      fi\n+      case `\"$acl_cv_path_LD\" -v 2>&1 < /dev/null` in\n+      *GNU* | *'with BFD'*)\n+        test \"$with_gnu_ld\" != no && break ;;\n+      *)\n+        test \"$with_gnu_ld\" != yes && break ;;\n+      esac\n     fi\n   done\n   IFS=\"$ac_save_ifs\"\n@@ -18017,18 +18019,20 @@ if test \"${acl_cv_prog_gnu_ld+set}\" = set; then :\n   $as_echo_n \"(cached) \" >&6\n else\n   # I'd rather use --version here, but apparently some GNU ld's only accept -v.\n-if $LD -v 2>&1 </dev/null | egrep '(GNU|with BFD)' 1>&5; then\n-  acl_cv_prog_gnu_ld=yes\n-else\n-  acl_cv_prog_gnu_ld=no\n-fi\n+case `$LD -v 2>&1 </dev/null` in\n+*GNU* | *'with BFD'*)\n+  acl_cv_prog_gnu_ld=yes ;;\n+*)\n+  acl_cv_prog_gnu_ld=no ;;\n+esac\n fi\n { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $acl_cv_prog_gnu_ld\" >&5\n $as_echo \"$acl_cv_prog_gnu_ld\" >&6; }\n with_gnu_ld=$acl_cv_prog_gnu_ld\n \n \n \n+\n                                                 { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for shared library run path origin\" >&5\n $as_echo_n \"checking for shared library run path origin... \" >&6; }\n if test \"${acl_cv_rpath+set}\" = set; then :\n@@ -18045,12 +18049,14 @@ fi\n { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $acl_cv_rpath\" >&5\n $as_echo \"$acl_cv_rpath\" >&6; }\n   wl=\"$acl_cv_wl\"\n-  libext=\"$acl_cv_libext\"\n-  shlibext=\"$acl_cv_shlibext\"\n-  hardcode_libdir_flag_spec=\"$acl_cv_hardcode_libdir_flag_spec\"\n-  hardcode_libdir_separator=\"$acl_cv_hardcode_libdir_separator\"\n-  hardcode_direct=\"$acl_cv_hardcode_direct\"\n-  hardcode_minus_L=\"$acl_cv_hardcode_minus_L\"\n+  acl_libext=\"$acl_cv_libext\"\n+  acl_shlibext=\"$acl_cv_shlibext\"\n+  acl_libname_spec=\"$acl_cv_libname_spec\"\n+  acl_library_names_spec=\"$acl_cv_library_names_spec\"\n+  acl_hardcode_libdir_flag_spec=\"$acl_cv_hardcode_libdir_flag_spec\"\n+  acl_hardcode_libdir_separator=\"$acl_cv_hardcode_libdir_separator\"\n+  acl_hardcode_direct=\"$acl_cv_hardcode_direct\"\n+  acl_hardcode_minus_L=\"$acl_cv_hardcode_minus_L\"\n     # Check whether --enable-rpath was given.\n if test \"${enable_rpath+set}\" = set; then :\n   enableval=$enable_rpath; :\n@@ -18061,6 +18067,74 @@ fi\n \n \n \n+  acl_libdirstem=lib\n+  acl_libdirstem2=\n+  case \"$host_os\" in\n+    solaris*)\n+                                    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for 64-bit host\" >&5\n+$as_echo_n \"checking for 64-bit host... \" >&6; }\n+if test \"${gl_cv_solaris_64bit+set}\" = set; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#ifdef _LP64\n+sixtyfour bits\n+#endif\n+\n+_ACEOF\n+if (eval \"$ac_cpp conftest.$ac_ext\") 2>&5 |\n+  $EGREP \"sixtyfour bits\" >/dev/null 2>&1; then :\n+  gl_cv_solaris_64bit=yes\n+else\n+  gl_cv_solaris_64bit=no\n+fi\n+rm -f conftest*\n+\n+\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $gl_cv_solaris_64bit\" >&5\n+$as_echo \"$gl_cv_solaris_64bit\" >&6; }\n+      if test $gl_cv_solaris_64bit = yes; then\n+        acl_libdirstem=lib/64\n+        case \"$host_cpu\" in\n+          sparc*)        acl_libdirstem2=lib/sparcv9 ;;\n+          i*86 | x86_64) acl_libdirstem2=lib/amd64 ;;\n+        esac\n+      fi\n+      ;;\n+    *)\n+      searchpath=`(LC_ALL=C $CC -print-search-dirs) 2>/dev/null | sed -n -e 's,^libraries: ,,p' | sed -e 's,^=,,'`\n+      if test -n \"$searchpath\"; then\n+        acl_save_IFS=\"${IFS= \t}\"; IFS=\":\"\n+        for searchdir in $searchpath; do\n+          if test -d \"$searchdir\"; then\n+            case \"$searchdir\" in\n+              */lib64/ | */lib64 ) acl_libdirstem=lib64 ;;\n+              */../ | */.. )\n+                # Better ignore directories of this form. They are misleading.\n+                ;;\n+              *) searchdir=`cd \"$searchdir\" && pwd`\n+                 case \"$searchdir\" in\n+                   */lib64 ) acl_libdirstem=lib64 ;;\n+                 esac ;;\n+            esac\n+          fi\n+        done\n+        IFS=\"$acl_save_IFS\"\n+      fi\n+      ;;\n+  esac\n+  test -n \"$acl_libdirstem2\" || acl_libdirstem2=\"$acl_libdirstem\"\n+\n+\n+\n+\n+\n+\n+\n+\n \n \n \n@@ -18100,7 +18174,11 @@ if test \"${with_libiconv_prefix+set}\" = set; then :\n \n       else\n         additional_includedir=\"$withval/include\"\n-        additional_libdir=\"$withval/lib\"\n+        additional_libdir=\"$withval/$acl_libdirstem\"\n+        if test \"$acl_libdirstem2\" != \"$acl_libdirstem\" \\\n+           && ! test -d \"$withval/$acl_libdirstem\"; then\n+          additional_libdir=\"$withval/$acl_libdirstem2\"\n+        fi\n       fi\n     fi\n \n@@ -18109,6 +18187,8 @@ fi\n       LIBICONV=\n   LTLIBICONV=\n   INCICONV=\n+  LIBICONV_PREFIX=\n+      HAVE_LIBICONV=\n   rpathdirs=\n   ltrpathdirs=\n   names_already_handled=\n@@ -18142,21 +18222,51 @@ fi\n           found_la=\n           found_so=\n           found_a=\n+          eval libname=\\\"$acl_libname_spec\\\"    # typically: libname=lib$name\n+          if test -n \"$acl_shlibext\"; then\n+            shrext=\".$acl_shlibext\"             # typically: shrext=.so\n+          else\n+            shrext=\n+          fi\n           if test $use_additional = yes; then\n-            if test -n \"$shlibext\" && test -f \"$additional_libdir/lib$name.$shlibext\"; then\n-              found_dir=\"$additional_libdir\"\n-              found_so=\"$additional_libdir/lib$name.$shlibext\"\n-              if test -f \"$additional_libdir/lib$name.la\"; then\n-                found_la=\"$additional_libdir/lib$name.la\"\n-              fi\n-            else\n-              if test -f \"$additional_libdir/lib$name.$libext\"; then\n-                found_dir=\"$additional_libdir\"\n-                found_a=\"$additional_libdir/lib$name.$libext\"\n-                if test -f \"$additional_libdir/lib$name.la\"; then\n-                  found_la=\"$additional_libdir/lib$name.la\"\n+            dir=\"$additional_libdir\"\n+                                    if test -n \"$acl_shlibext\"; then\n+              if test -f \"$dir/$libname$shrext\"; then\n+                found_dir=\"$dir\"\n+                found_so=\"$dir/$libname$shrext\"\n+              else\n+                if test \"$acl_library_names_spec\" = '$libname$shrext$versuffix'; then\n+                  ver=`(cd \"$dir\" && \\\n+                        for f in \"$libname$shrext\".*; do echo \"$f\"; done \\\n+                        | sed -e \"s,^$libname$shrext\\\\\\\\.,,\" \\\n+                        | sort -t '.' -n -r -k1,1 -k2,2 -k3,3 -k4,4 -k5,5 \\\n+                        | sed 1q ) 2>/dev/null`\n+                  if test -n \"$ver\" && test -f \"$dir/$libname$shrext.$ver\"; then\n+                    found_dir=\"$dir\"\n+                    found_so=\"$dir/$libname$shrext.$ver\"\n+                  fi\n+                else\n+                  eval library_names=\\\"$acl_library_names_spec\\\"\n+                  for f in $library_names; do\n+                    if test -f \"$dir/$f\"; then\n+                      found_dir=\"$dir\"\n+                      found_so=\"$dir/$f\"\n+                      break\n+                    fi\n+                  done\n                 fi\n               fi\n+            fi\n+                        if test \"X$found_dir\" = \"X\"; then\n+              if test -f \"$dir/$libname.$acl_libext\"; then\n+                found_dir=\"$dir\"\n+                found_a=\"$dir/$libname.$acl_libext\"\n+              fi\n+            fi\n+            if test \"X$found_dir\" != \"X\"; then\n+              if test -f \"$dir/$libname.la\"; then\n+                found_la=\"$dir/$libname.la\"\n+              fi\n             fi\n           fi\n           if test \"X$found_dir\" = \"X\"; then\n@@ -18173,20 +18283,43 @@ fi\n               case \"$x\" in\n                 -L*)\n                   dir=`echo \"X$x\" | sed -e 's/^X-L//'`\n-                  if test -n \"$shlibext\" && test -f \"$dir/lib$name.$shlibext\"; then\n-                    found_dir=\"$dir\"\n-                    found_so=\"$dir/lib$name.$shlibext\"\n-                    if test -f \"$dir/lib$name.la\"; then\n-                      found_la=\"$dir/lib$name.la\"\n-                    fi\n-                  else\n-                    if test -f \"$dir/lib$name.$libext\"; then\n+                                    if test -n \"$acl_shlibext\"; then\n+                    if test -f \"$dir/$libname$shrext\"; then\n                       found_dir=\"$dir\"\n-                      found_a=\"$dir/lib$name.$libext\"\n-                      if test -f \"$dir/lib$name.la\"; then\n-                        found_la=\"$dir/lib$name.la\"\n+                      found_so=\"$dir/$libname$shrext\"\n+                    else\n+                      if test \"$acl_library_names_spec\" = '$libname$shrext$versuffix'; then\n+                        ver=`(cd \"$dir\" && \\\n+                              for f in \"$libname$shrext\".*; do echo \"$f\"; done \\\n+                              | sed -e \"s,^$libname$shrext\\\\\\\\.,,\" \\\n+                              | sort -t '.' -n -r -k1,1 -k2,2 -k3,3 -k4,4 -k5,5 \\\n+                              | sed 1q ) 2>/dev/null`\n+                        if test -n \"$ver\" && test -f \"$dir/$libname$shrext.$ver\"; then\n+                          found_dir=\"$dir\"\n+                          found_so=\"$dir/$libname$shrext.$ver\"\n+                        fi\n+                      else\n+                        eval library_names=\\\"$acl_library_names_spec\\\"\n+                        for f in $library_names; do\n+                          if test -f \"$dir/$f\"; then\n+                            found_dir=\"$dir\"\n+                            found_so=\"$dir/$f\"\n+                            break\n+                          fi\n+                        done\n                       fi\n                     fi\n+                  fi\n+                                    if test \"X$found_dir\" = \"X\"; then\n+                    if test -f \"$dir/$libname.$acl_libext\"; then\n+                      found_dir=\"$dir\"\n+                      found_a=\"$dir/$libname.$acl_libext\"\n+                    fi\n+                  fi\n+                  if test \"X$found_dir\" != \"X\"; then\n+                    if test -f \"$dir/$libname.la\"; then\n+                      found_la=\"$dir/$libname.la\"\n+                    fi\n                   fi\n                   ;;\n               esac\n@@ -18198,7 +18331,9 @@ fi\n           if test \"X$found_dir\" != \"X\"; then\n                         LTLIBICONV=\"${LTLIBICONV}${LTLIBICONV:+ }-L$found_dir -l$name\"\n             if test \"X$found_so\" != \"X\"; then\n-                                                        if test \"$enable_rpath\" = no || test \"X$found_dir\" = \"X/usr/lib\"; then\n+                                                        if test \"$enable_rpath\" = no \\\n+                 || test \"X$found_dir\" = \"X/usr/$acl_libdirstem\" \\\n+                 || test \"X$found_dir\" = \"X/usr/$acl_libdirstem2\"; then\n                                 LIBICONV=\"${LIBICONV}${LIBICONV:+ }$found_so\"\n               else\n                                                                                 haveit=\n@@ -18211,10 +18346,10 @@ fi\n                 if test -z \"$haveit\"; then\n                   ltrpathdirs=\"$ltrpathdirs $found_dir\"\n                 fi\n-                                if test \"$hardcode_direct\" = yes; then\n+                                if test \"$acl_hardcode_direct\" = yes; then\n                                                       LIBICONV=\"${LIBICONV}${LIBICONV:+ }$found_so\"\n                 else\n-                  if test -n \"$hardcode_libdir_flag_spec\" && test \"$hardcode_minus_L\" = no; then\n+                  if test -n \"$acl_hardcode_libdir_flag_spec\" && test \"$acl_hardcode_minus_L\" = no; then\n                                                             LIBICONV=\"${LIBICONV}${LIBICONV:+ }$found_so\"\n                                                             haveit=\n                     for x in $rpathdirs; do\n@@ -18246,7 +18381,7 @@ fi\n                     if test -z \"$haveit\"; then\n                       LIBICONV=\"${LIBICONV}${LIBICONV:+ }-L$found_dir\"\n                     fi\n-                    if test \"$hardcode_minus_L\" != no; then\n+                    if test \"$acl_hardcode_minus_L\" != no; then\n                                                                                         LIBICONV=\"${LIBICONV}${LIBICONV:+ }$found_so\"\n                     else\n                                                                                                                                                                                 LIBICONV=\"${LIBICONV}${LIBICONV:+ }-l$name\"\n@@ -18263,8 +18398,18 @@ fi\n             fi\n                         additional_includedir=\n             case \"$found_dir\" in\n-              */lib | */lib/)\n-                basedir=`echo \"X$found_dir\" | sed -e 's,^X,,' -e 's,/lib/*$,,'`\n+              */$acl_libdirstem | */$acl_libdirstem/)\n+                basedir=`echo \"X$found_dir\" | sed -e 's,^X,,' -e \"s,/$acl_libdirstem/\"'*$,,'`\n+                if test \"$name\" = 'iconv'; then\n+                  LIBICONV_PREFIX=\"$basedir\"\n+                fi\n+                additional_includedir=\"$basedir/include\"\n+                ;;\n+              */$acl_libdirstem2 | */$acl_libdirstem2/)\n+                basedir=`echo \"X$found_dir\" | sed -e 's,^X,,' -e \"s,/$acl_libdirstem2/\"'*$,,'`\n+                if test \"$name\" = 'iconv'; then\n+                  LIBICONV_PREFIX=\"$basedir\"\n+                fi\n                 additional_includedir=\"$basedir/include\"\n                 ;;\n             esac\n@@ -18274,7 +18419,7 @@ fi\n                 if test \"X$additional_includedir\" = \"X/usr/local/include\"; then\n                   if test -n \"$GCC\"; then\n                     case $host_os in\n-                      linux*) haveit=yes;;\n+                      linux* | gnu* | k*bsd*-gnu) haveit=yes;;\n                     esac\n                   fi\n                 fi\n@@ -18313,12 +18458,14 @@ fi\n                 case \"$dep\" in\n                   -L*)\n                     additional_libdir=`echo \"X$dep\" | sed -e 's/^X-L//'`\n-                                                                                                                                                                if test \"X$additional_libdir\" != \"X/usr/lib\"; then\n+                                                                                                                                                                if test \"X$additional_libdir\" != \"X/usr/$acl_libdirstem\" \\\n+                       && test \"X$additional_libdir\" != \"X/usr/$acl_libdirstem2\"; then\n                       haveit=\n-                      if test \"X$additional_libdir\" = \"X/usr/local/lib\"; then\n+                      if test \"X$additional_libdir\" = \"X/usr/local/$acl_libdirstem\" \\\n+                         || test \"X$additional_libdir\" = \"X/usr/local/$acl_libdirstem2\"; then\n                         if test -n \"$GCC\"; then\n                           case $host_os in\n-                            linux*) haveit=yes;;\n+                            linux* | gnu* | k*bsd*-gnu) haveit=yes;;\n                           esac\n                         fi\n                       fi\n@@ -18415,21 +18562,21 @@ fi\n     done\n   done\n   if test \"X$rpathdirs\" != \"X\"; then\n-    if test -n \"$hardcode_libdir_separator\"; then\n+    if test -n \"$acl_hardcode_libdir_separator\"; then\n                         alldirs=\n       for found_dir in $rpathdirs; do\n-        alldirs=\"${alldirs}${alldirs:+$hardcode_libdir_separator}$found_dir\"\n+        alldirs=\"${alldirs}${alldirs:+$acl_hardcode_libdir_separator}$found_dir\"\n       done\n             acl_save_libdir=\"$libdir\"\n       libdir=\"$alldirs\"\n-      eval flag=\\\"$hardcode_libdir_flag_spec\\\"\n+      eval flag=\\\"$acl_hardcode_libdir_flag_spec\\\"\n       libdir=\"$acl_save_libdir\"\n       LIBICONV=\"${LIBICONV}${LIBICONV:+ }$flag\"\n     else\n             for found_dir in $rpathdirs; do\n         acl_save_libdir=\"$libdir\"\n         libdir=\"$found_dir\"\n-        eval flag=\\\"$hardcode_libdir_flag_spec\\\"\n+        eval flag=\\\"$acl_hardcode_libdir_flag_spec\\\"\n         libdir=\"$acl_save_libdir\"\n         LIBICONV=\"${LIBICONV}${LIBICONV:+ }$flag\"\n       done\n@@ -18447,6 +18594,11 @@ fi\n \n \n \n+\n+\n+\n+\n+\n           am_save_CPPFLAGS=\"$CPPFLAGS\"\n \n   for element in $INCICONV; do\n@@ -20897,11 +21049,11 @@ fi\n set dummy moc-qt4; ac_word=$2\n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n $as_echo_n \"checking for $ac_word... \" >&6; }\n-if test \"${ac_cv_prog_MOC+set}\" = set; then :\n+if test \"${ac_cv_prog_MOC4+set}\" = set; then :\n   $as_echo_n \"(cached) \" >&6\n else\n-  if test -n \"$MOC\"; then\n-  ac_cv_prog_MOC=\"$MOC\" # Let the user override the test.\n+  if test -n \"$MOC4\"; then\n+  ac_cv_prog_MOC4=\"$MOC4\" # Let the user override the test.\n else\n as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n for as_dir in $PATH\n@@ -20910,7 +21062,7 @@ do\n   test -z \"$as_dir\" && as_dir=.\n     for ac_exec_ext in '' $ac_executable_extensions; do\n   if { test -f \"$as_dir/$ac_word$ac_exec_ext\" && $as_test_x \"$as_dir/$ac_word$ac_exec_ext\"; }; then\n-    ac_cv_prog_MOC=\"moc-qt4\"\n+    ac_cv_prog_MOC4=\"moc-qt4\"\n     $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n     break 2\n   fi\n@@ -20920,16 +21072,21 @@ IFS=$as_save_IFS\n \n fi\n fi\n-MOC=$ac_cv_prog_MOC\n-if test -n \"$MOC\"; then\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $MOC\" >&5\n-$as_echo \"$MOC\" >&6; }\n+MOC4=$ac_cv_prog_MOC4\n+if test -n \"$MOC4\"; then\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $MOC4\" >&5\n+$as_echo \"$MOC4\" >&6; }\n else\n   { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n $as_echo \"no\" >&6; }\n fi\n \n \n+\tif test x\"$MOC4\" != x ; then\n+\t  { $as_echo \"$as_me:${as_lineno-$LINENO}: Using $MOC4 as moc\" >&5\n+$as_echo \"$as_me: Using $MOC4 as moc\" >&6;}\n+\t  MOC=$MOC4;\n+\tfi\n     fi\n     if test \"x$HAVE_QT4\" = \"xno\"; then\n       { $as_echo \"$as_me:${as_lineno-$LINENO}: Looking for QT_CFLAGS and QT_LIBS without pkg-config\" >&5\n@@ -23038,6 +23195,8 @@ $as_echo \"${gjdoc_version}\" >&6; }\n     case ${gjdoc_version} in\n       0.7.9) ;;\n       0.8*) ;;\n+      0.9*) ;;\n+      1*) ;;\n       *) as_fn_error \"Building documentation requires GJDoc >= 0.7.9, ${gjdoc_version} found.\" \"$LINENO\" 5 ;;\n     esac\n   fi\n@@ -23757,7 +23916,7 @@ fi\n test \"x$JAVA\" = x && as_fn_error \"no acceptable Java virtual machine found in \\$PATH\" \"$LINENO\" 5\n \n \n-ECJ_OPTS=\"-warn:-deprecation,serial,unusedImport\"\n+ECJ_OPTS=\"-warn:-deprecation,serial,unusedImport,unusedPrivate,resource\"\n JAVAC_OPTS=\"-Xlint:unchecked,cast,divzero,empty,finally,overrides\"\n GCJ_OPTS=\"-g\"\n if test \"x$JAVAPREFIX\" = x; then\n@@ -23887,7 +24046,7 @@ else\n JAVA_TEST=Object.java\n CLASS_TEST=Object.class\n cat << \\EOF > $JAVA_TEST\n-/* #line 23890 \"configure\" */\n+/* #line 24049 \"configure\" */\n package java.lang;\n \n public class Object\n@@ -23980,7 +24139,7 @@ EOF\n if uudecode$EXEEXT Test.uue; then\n         ac_cv_prog_uudecode_base64=yes\n else\n-        echo \"configure: 23983: uudecode had trouble decoding base 64 file 'Test.uue'\" >&5\n+        echo \"configure: 24142: uudecode had trouble decoding base 64 file 'Test.uue'\" >&5\n         echo \"configure: failed file was:\" >&5\n         cat Test.uue >&5\n         ac_cv_prog_uudecode_base64=no\n@@ -24008,7 +24167,7 @@ JAVA_TEST=Test.java\n CLASS_TEST=Test.class\n TEST=Test\n cat << \\EOF > $JAVA_TEST\n-/* [#]line 24011 \"configure\" */\n+/* [#]line 24170 \"configure\" */\n public class Test {\n public static void main (String args[]) {\n         System.exit (0);\n@@ -24216,7 +24375,7 @@ if test \"x${use_glibj_zip}\" = xfalse || \\\n   JAVA_TEST=Test.java\n   CLASS_TEST=Test.class\n   cat << \\EOF > $JAVA_TEST\n-  /* #line 24219 \"configure\" */\n+  /* #line 24378 \"configure\" */\n   public class Test\n   {\n     public static void main(String args)\n@@ -25061,7 +25220,7 @@ cat >>$CONFIG_STATUS <<\\_ACEOF || ac_write_fail=1\n # report actual input values of CONFIG_FILES etc. instead of their\n # values after options handling.\n ac_log=\"\n-This file was extended by GNU Classpath $as_me 0.99, which was\n+This file was extended by GNU Classpath $as_me 0.99.1-pre, which was\n generated by GNU Autoconf 2.64.  Invocation command line was\n \n   CONFIG_FILES    = $CONFIG_FILES\n@@ -25131,7 +25290,7 @@ General help using GNU software: <http://www.gnu.org/gethelp/>.\"\n _ACEOF\n cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1\n ac_cs_version=\"\\\\\n-GNU Classpath config.status 0.99\n+GNU Classpath config.status 0.99.1-pre\n configured by $0, generated by GNU Autoconf 2.64,\n   with options \\\\\"`$as_echo \"$ac_configure_args\" | sed 's/^ //; s/[\\\\\"\"\\`\\$]/\\\\\\\\&/g'`\\\\\"\n "}, {"sha": "910c8f02e9a41ce1c1a6a9832d26f24ab4eb086b", "filename": "libjava/classpath/configure.ac", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fconfigure.ac?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -6,7 +6,7 @@ dnl -----------------------------------------------------------\n dnl define([AC_CACHE_LOAD], )dnl\n dnl define([AC_CACHE_SAVE], )dnl\n \n-AC_INIT([GNU Classpath],[0.99],[classpath@gnu.org],[classpath])\n+AC_INIT([GNU Classpath],[0.99.1-pre],[classpath@gnu.org],[classpath])\n AC_CONFIG_SRCDIR(java/lang/System.java)\n AC_CONFIG_MACRO_DIR([m4])\n \n@@ -75,7 +75,7 @@ CLASSPATH_CONVENIENCE=\"-no-undefined\"\n AC_SUBST(CLASSPATH_CONVENIENCE)\n \n AC_PREREQ(2.64)\n-AM_INIT_AUTOMAKE([1.9.0 gnu std-options tar-ustar -Wno-portability])\n+AM_INIT_AUTOMAKE([1.9.0 no-dist gnu std-options tar-ustar -Wno-portability])\n AC_CONFIG_HEADERS([include/config.h])\n AC_PREFIX_DEFAULT(/usr/local/classpath)\n \n@@ -183,9 +183,9 @@ AC_ARG_ENABLE([Werror],\n               [case \"${enableval}\" in\n                 yes) ENABLE_WERROR=yes ;;\n                 no) ENABLE_WERROR=no ;;\n-                *) ENABLE_WERROR=default ;;\n+                *) ENABLE_WERROR=no ;;\n               esac],\n-              [ENABLE_WERROR=default])\n+              [ENABLE_WERROR=no])\n \n dnl -----------------------------------------------------------\n dnl Default AWT toolkit\n@@ -703,7 +703,11 @@ if test \"x${COMPILE_JNI}\" = xyes; then\n \tQT_CFLAGS=\"$QT_CFLAGS -I$EXTRA_QT_INCLUDE_DIR\",\n \tAC_MSG_WARN([QWidget not found])))\n \tAC_CHECK_PROG(MOC, [moc], [moc])\n-\tAC_CHECK_PROG(MOC, [moc-qt4], [moc-qt4])\n+\tAC_CHECK_PROG(MOC4, [moc-qt4], [moc-qt4])\n+\tif test x\"$MOC4\" != x ; then\n+\t  AC_MSG_NOTICE([Using $MOC4 as moc])\n+\t  MOC=$MOC4;\n+\tfi\n     fi\n     if test \"x$HAVE_QT4\" = \"xno\"; then\n       AC_MSG_NOTICE([Looking for QT_CFLAGS and QT_LIBS without pkg-config])"}, {"sha": "df8eea7e4ce8862105fcd7929b20bdb45488048b", "filename": "libjava/classpath/depcomp", "status": "modified", "additions": 8, "deletions": 66, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fdepcomp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fdepcomp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fdepcomp?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -1,10 +1,10 @@\n #! /bin/sh\n # depcomp - compile a program generating dependencies as side-effects\n \n-scriptversion=2011-12-04.11; # UTC\n+scriptversion=2009-04-28.21; # UTC\n \n-# Copyright (C) 1999, 2000, 2003, 2004, 2005, 2006, 2007, 2009, 2010,\n-# 2011 Free Software Foundation, Inc.\n+# Copyright (C) 1999, 2000, 2003, 2004, 2005, 2006, 2007, 2009 Free\n+# Software Foundation, Inc.\n \n # This program is free software; you can redistribute it and/or modify\n # it under the terms of the GNU General Public License as published by\n@@ -44,7 +44,7 @@ Environment variables:\n   object      Object file output by `PROGRAMS ARGS'.\n   DEPDIR      directory where to store dependencies.\n   depfile     Dependency file to output.\n-  tmpdepfile  Temporary file to use when outputting dependencies.\n+  tmpdepfile  Temporary file to use when outputing dependencies.\n   libtool     Whether libtool is used (yes/no).\n \n Report bugs to <bug-automake@gnu.org>.\n@@ -90,18 +90,10 @@ if test \"$depmode\" = msvcmsys; then\n    # This is just like msvisualcpp but w/o cygpath translation.\n    # Just convert the backslash-escaped backslashes to single forward\n    # slashes to satisfy depend.m4\n-   cygpath_u='sed s,\\\\\\\\,/,g'\n+   cygpath_u=\"sed s,\\\\\\\\\\\\\\\\,/,g\"\n    depmode=msvisualcpp\n fi\n \n-if test \"$depmode\" = msvc7msys; then\n-   # This is just like msvc7 but w/o cygpath translation.\n-   # Just convert the backslash-escaped backslashes to single forward\n-   # slashes to satisfy depend.m4\n-   cygpath_u='sed s,\\\\\\\\,/,g'\n-   depmode=msvc7\n-fi\n-\n case \"$depmode\" in\n gcc3)\n ## gcc 3 implements dependency tracking that does exactly what\n@@ -166,12 +158,10 @@ gcc)\n ' < \"$tmpdepfile\" |\n ## Some versions of gcc put a space before the `:'.  On the theory\n ## that the space means something, we add a space to the output as\n-## well.  hp depmode also adds that space, but also prefixes the VPATH\n-## to the object.  Take care to not repeat it in the output.\n+## well.\n ## Some versions of the HPUX 10.20 sed can't process this invocation\n ## correctly.  Breaking it into two sed invocations is a workaround.\n-    sed -e 's/^\\\\$//' -e '/^$/d' -e \"s|.*$object$||\" -e '/:$/d' \\\n-      | sed -e 's/$/ :/' >> \"$depfile\"\n+    sed -e 's/^\\\\$//' -e '/^$/d' -e '/:$/d' | sed -e 's/$/ :/' >> \"$depfile\"\n   rm -f \"$tmpdepfile\"\n   ;;\n \n@@ -415,52 +405,6 @@ tru64)\n    rm -f \"$tmpdepfile\"\n    ;;\n \n-msvc7)\n-  if test \"$libtool\" = yes; then\n-    showIncludes=-Wc,-showIncludes\n-  else\n-    showIncludes=-showIncludes\n-  fi\n-  \"$@\" $showIncludes > \"$tmpdepfile\"\n-  stat=$?\n-  grep -v '^Note: including file: ' \"$tmpdepfile\"\n-  if test \"$stat\" = 0; then :\n-  else\n-    rm -f \"$tmpdepfile\"\n-    exit $stat\n-  fi\n-  rm -f \"$depfile\"\n-  echo \"$object : \\\\\" > \"$depfile\"\n-  # The first sed program below extracts the file names and escapes\n-  # backslashes for cygpath.  The second sed program outputs the file\n-  # name when reading, but also accumulates all include files in the\n-  # hold buffer in order to output them again at the end.  This only\n-  # works with sed implementations that can handle large buffers.\n-  sed < \"$tmpdepfile\" -n '\n-/^Note: including file:  *\\(.*\\)/ {\n-  s//\\1/\n-  s/\\\\/\\\\\\\\/g\n-  p\n-}' | $cygpath_u | sort -u | sed -n '\n-s/ /\\\\ /g\n-s/\\(.*\\)/\t\\1 \\\\/p\n-s/.\\(.*\\) \\\\/\\1:/\n-H\n-$ {\n-  s/.*/\t/\n-  G\n-  p\n-}' >> \"$depfile\"\n-  rm -f \"$tmpdepfile\"\n-  ;;\n-\n-msvc7msys)\n-  # This case exists only to let depend.m4 do its work.  It works by\n-  # looking at the text of this script.  This case will never be run,\n-  # since it is checked for above.\n-  exit 1\n-  ;;\n-\n #nosideeffect)\n   # This comment above is used by automake to tell side-effect\n   # dependency tracking mechanisms from slower ones.\n@@ -559,9 +503,7 @@ makedepend)\n   touch \"$tmpdepfile\"\n   ${MAKEDEPEND-makedepend} -o\"$obj_suffix\" -f\"$tmpdepfile\" \"$@\"\n   rm -f \"$depfile\"\n-  # makedepend may prepend the VPATH from the source file name to the object.\n-  # No need to regex-escape $object, excess matching of '.' is harmless.\n-  sed \"s|^.*\\($object *:\\)|\\1|\" \"$tmpdepfile\" > \"$depfile\"\n+  cat < \"$tmpdepfile\" > \"$depfile\"\n   sed '1,2d' \"$tmpdepfile\" | tr ' ' '\n ' | \\\n ## Some versions of the HPUX 10.20 sed can't process this invocation"}, {"sha": "27a378d07be82293e4c855dfaa27cb0a25e57de8", "filename": "libjava/classpath/doc/Makefile.am", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fdoc%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fdoc%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fdoc%2FMakefile.am?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -7,8 +7,9 @@ EXTRA_DIST = README.jaxp texi2pod.pl $(man_MANS)\n TEXINFO_TEX = ../../gcc/doc/include/texinfo.tex\n info_TEXINFOS = cp-tools.texinfo\n \n+# POSIX locale necessary to make grep work; see http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=586134\n .texinfo.dvi:\n-\ttexi2dvi $<\n+\tLC_ALL=POSIX texi2dvi --build-dir=$(builddir) -o $@ $<\n \n .dvi.ps:\n \tdvips -o $@ $<\n@@ -135,3 +136,6 @@ MAINTAINERCLEANFILES = \\\n \t\t$(srcdir)/gserialver.1 \\\n \t\t$(srcdir)/gtnameserv.1 \\\n \t\t$(srcdir)/cp-tools.info\n+\n+clean-local:\n+\t-rm -rf *.t2d"}, {"sha": "060ddea533bf57a2e21aef2f187cf54ecc83333a", "filename": "libjava/classpath/doc/Makefile.in", "status": "modified", "additions": 15, "deletions": 10, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fdoc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fdoc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fdoc%2FMakefile.in?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -39,9 +39,6 @@ DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in texinfo.tex\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n am__aclocal_m4_deps = $(top_srcdir)/../../config/depstand.m4 \\\n \t$(top_srcdir)/../../config/lead-dot.m4 \\\n-\t$(top_srcdir)/../../config/lib-ld.m4 \\\n-\t$(top_srcdir)/../../config/lib-link.m4 \\\n-\t$(top_srcdir)/../../config/lib-prefix.m4 \\\n \t$(top_srcdir)/../../config/multi.m4 \\\n \t$(top_srcdir)/../../config/no-executables.m4 \\\n \t$(top_srcdir)/../../config/override.m4 \\\n@@ -60,7 +57,9 @@ am__aclocal_m4_deps = $(top_srcdir)/../../config/depstand.m4 \\\n \t$(top_srcdir)/m4/ax_create_stdint_h.m4 \\\n \t$(top_srcdir)/m4/ax_func_which_gethostbyname_r.m4 \\\n \t$(top_srcdir)/m4/gcc_attribute.m4 $(top_srcdir)/m4/iconv.m4 \\\n-\t$(top_srcdir)/m4/pkg.m4 $(top_srcdir)/configure.ac\n+\t$(top_srcdir)/m4/lib-ld.m4 $(top_srcdir)/m4/lib-link.m4 \\\n+\t$(top_srcdir)/m4/lib-prefix.m4 $(top_srcdir)/m4/pkg.m4 \\\n+\t$(top_srcdir)/configure.ac\n am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n \t$(ACLOCAL_M4)\n mkinstalldirs = $(SHELL) $(top_srcdir)/../../mkinstalldirs\n@@ -245,6 +244,7 @@ MAKEINFO = @MAKEINFO@\n MKDIR = @MKDIR@\n MKDIR_P = @MKDIR_P@\n MOC = @MOC@\n+MOC4 = @MOC4@\n MOZILLA_CFLAGS = @MOZILLA_CFLAGS@\n MOZILLA_LIBS = @MOZILLA_LIBS@\n NM = @NM@\n@@ -868,7 +868,8 @@ maintainer-clean-generic:\n \t-test -z \"$(MAINTAINERCLEANFILES)\" || rm -f $(MAINTAINERCLEANFILES)\n clean: clean-recursive\n \n-clean-am: clean-aminfo clean-generic clean-libtool mostlyclean-am\n+clean-am: clean-aminfo clean-generic clean-libtool clean-local \\\n+\tmostlyclean-am\n \n distclean: distclean-recursive\n \t-rm -f Makefile\n@@ -1018,10 +1019,10 @@ uninstall-man: uninstall-man1\n \n .PHONY: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) CTAGS GTAGS \\\n \tall all-am all-local check check-am clean clean-aminfo \\\n-\tclean-generic clean-libtool ctags ctags-recursive dist-info \\\n-\tdistclean distclean-generic distclean-libtool distclean-tags \\\n-\tdistdir dvi dvi-am html html-am info info-am install \\\n-\tinstall-am install-data install-data-am install-dvi \\\n+\tclean-generic clean-libtool clean-local ctags ctags-recursive \\\n+\tdist-info distclean distclean-generic distclean-libtool \\\n+\tdistclean-tags distdir dvi dvi-am html html-am info info-am \\\n+\tinstall install-am install-data install-data-am install-dvi \\\n \tinstall-dvi-am install-exec install-exec-am install-html \\\n \tinstall-html-am install-info install-info-am install-man \\\n \tinstall-man1 install-pdf install-pdf-am install-ps \\\n@@ -1034,8 +1035,9 @@ uninstall-man: uninstall-man1\n \tuninstall-man uninstall-man1 uninstall-pdf-am uninstall-ps-am\n \n \n+# POSIX locale necessary to make grep work; see http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=586134\n .texinfo.dvi:\n-\ttexi2dvi $<\n+\tLC_ALL=POSIX texi2dvi --build-dir=$(builddir) -o $@ $<\n \n .dvi.ps:\n \tdvips -o $@ $<\n@@ -1113,6 +1115,9 @@ stamp-geninsrc: $(TOOLS_MANFILES) cp-tools.info\n \t-cp -p cp-tools.info $(srcdir)/cp-tools.info\n \ttouch $@\n \n+clean-local:\n+\t-rm -rf *.t2d\n+\n # Tell versions [3.59,3.63) of GNU make to not export all variables.\n # Otherwise a system limit (for SysV at least) may be exceeded.\n .NOEXPORT:"}, {"sha": "88bd46b1c878cdd17f3fd7eff99cddf2a8e153b0", "filename": "libjava/classpath/doc/api/Makefile.in", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fdoc%2Fapi%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fdoc%2Fapi%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fdoc%2Fapi%2FMakefile.in?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -40,9 +40,6 @@ DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n am__aclocal_m4_deps = $(top_srcdir)/../../config/depstand.m4 \\\n \t$(top_srcdir)/../../config/lead-dot.m4 \\\n-\t$(top_srcdir)/../../config/lib-ld.m4 \\\n-\t$(top_srcdir)/../../config/lib-link.m4 \\\n-\t$(top_srcdir)/../../config/lib-prefix.m4 \\\n \t$(top_srcdir)/../../config/multi.m4 \\\n \t$(top_srcdir)/../../config/no-executables.m4 \\\n \t$(top_srcdir)/../../config/override.m4 \\\n@@ -61,7 +58,9 @@ am__aclocal_m4_deps = $(top_srcdir)/../../config/depstand.m4 \\\n \t$(top_srcdir)/m4/ax_create_stdint_h.m4 \\\n \t$(top_srcdir)/m4/ax_func_which_gethostbyname_r.m4 \\\n \t$(top_srcdir)/m4/gcc_attribute.m4 $(top_srcdir)/m4/iconv.m4 \\\n-\t$(top_srcdir)/m4/pkg.m4 $(top_srcdir)/configure.ac\n+\t$(top_srcdir)/m4/lib-ld.m4 $(top_srcdir)/m4/lib-link.m4 \\\n+\t$(top_srcdir)/m4/lib-prefix.m4 $(top_srcdir)/m4/pkg.m4 \\\n+\t$(top_srcdir)/configure.ac\n am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n \t$(ACLOCAL_M4)\n mkinstalldirs = $(SHELL) $(top_srcdir)/../../mkinstalldirs\n@@ -170,6 +169,7 @@ MAKEINFO = @MAKEINFO@\n MKDIR = @MKDIR@\n MKDIR_P = @MKDIR_P@\n MOC = @MOC@\n+MOC4 = @MOC4@\n MOZILLA_CFLAGS = @MOZILLA_CFLAGS@\n MOZILLA_LIBS = @MOZILLA_LIBS@\n NM = @NM@"}, {"sha": "ec186dee77859212119356e9c3a78541c7cd36a0", "filename": "libjava/classpath/doc/cp-tools.texinfo", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fdoc%2Fcp-tools.texinfo", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fdoc%2Fcp-tools.texinfo", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fdoc%2Fcp-tools.texinfo?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -2438,14 +2438,14 @@ with the header @samp{CVS ID}, you would specify:\n Let's say that a class javadoc comment contains\n \n @smallexample\n-@@cvsid $Id: cp-tools.texinfo,v 1.9 2012/03/07 15:27:27 gnu_andrew Exp $\n+@@cvsid $Id: cp-tools.texinfo,v 1.9 2012-03-07 15:27:27 gnu_andrew Exp $\n @end smallexample\n \n Then the HTML output will contain something like\n \n @smallexample\n CVS ID:\n-  $Id: cp-tools.texinfo,v 1.9 2012/03/07 15:27:27 gnu_andrew Exp $\n+  $Id: cp-tools.texinfo,v 1.9 2012-03-07 15:27:27 gnu_andrew Exp $\n @end smallexample\n @end table\n "}, {"sha": "91408263bc9c8ab0ad735c0974872d2f1cf58dc0", "filename": "libjava/classpath/doc/texinfo.tex", "status": "modified", "additions": 647, "deletions": 1269, "changes": 1916, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fdoc%2Ftexinfo.tex", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fdoc%2Ftexinfo.tex", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fdoc%2Ftexinfo.tex?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "d77821861168d27a8c4db03dbc666ca2bab43e0d", "filename": "libjava/classpath/examples/Makefile.in", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fexamples%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fexamples%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2FMakefile.in?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -41,9 +41,6 @@ DIST_COMMON = README $(srcdir)/Makefile.am $(srcdir)/Makefile.in \\\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n am__aclocal_m4_deps = $(top_srcdir)/../../config/depstand.m4 \\\n \t$(top_srcdir)/../../config/lead-dot.m4 \\\n-\t$(top_srcdir)/../../config/lib-ld.m4 \\\n-\t$(top_srcdir)/../../config/lib-link.m4 \\\n-\t$(top_srcdir)/../../config/lib-prefix.m4 \\\n \t$(top_srcdir)/../../config/multi.m4 \\\n \t$(top_srcdir)/../../config/no-executables.m4 \\\n \t$(top_srcdir)/../../config/override.m4 \\\n@@ -62,7 +59,9 @@ am__aclocal_m4_deps = $(top_srcdir)/../../config/depstand.m4 \\\n \t$(top_srcdir)/m4/ax_create_stdint_h.m4 \\\n \t$(top_srcdir)/m4/ax_func_which_gethostbyname_r.m4 \\\n \t$(top_srcdir)/m4/gcc_attribute.m4 $(top_srcdir)/m4/iconv.m4 \\\n-\t$(top_srcdir)/m4/pkg.m4 $(top_srcdir)/configure.ac\n+\t$(top_srcdir)/m4/lib-ld.m4 $(top_srcdir)/m4/lib-link.m4 \\\n+\t$(top_srcdir)/m4/lib-prefix.m4 $(top_srcdir)/m4/pkg.m4 \\\n+\t$(top_srcdir)/configure.ac\n am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n \t$(ACLOCAL_M4)\n mkinstalldirs = $(SHELL) $(top_srcdir)/../../mkinstalldirs\n@@ -193,6 +192,7 @@ MAKEINFO = @MAKEINFO@\n MKDIR = @MKDIR@\n MKDIR_P = @MKDIR_P@\n MOC = @MOC@\n+MOC4 = @MOC4@\n MOZILLA_CFLAGS = @MOZILLA_CFLAGS@\n MOZILLA_LIBS = @MOZILLA_LIBS@\n NM = @NM@"}, {"sha": "3de327506deddeb93f67faa46a49ea85d119a3e4", "filename": "libjava/classpath/external/Makefile.in", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fexternal%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fexternal%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2FMakefile.in?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -39,9 +39,6 @@ DIST_COMMON = README $(srcdir)/Makefile.am $(srcdir)/Makefile.in\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n am__aclocal_m4_deps = $(top_srcdir)/../../config/depstand.m4 \\\n \t$(top_srcdir)/../../config/lead-dot.m4 \\\n-\t$(top_srcdir)/../../config/lib-ld.m4 \\\n-\t$(top_srcdir)/../../config/lib-link.m4 \\\n-\t$(top_srcdir)/../../config/lib-prefix.m4 \\\n \t$(top_srcdir)/../../config/multi.m4 \\\n \t$(top_srcdir)/../../config/no-executables.m4 \\\n \t$(top_srcdir)/../../config/override.m4 \\\n@@ -60,7 +57,9 @@ am__aclocal_m4_deps = $(top_srcdir)/../../config/depstand.m4 \\\n \t$(top_srcdir)/m4/ax_create_stdint_h.m4 \\\n \t$(top_srcdir)/m4/ax_func_which_gethostbyname_r.m4 \\\n \t$(top_srcdir)/m4/gcc_attribute.m4 $(top_srcdir)/m4/iconv.m4 \\\n-\t$(top_srcdir)/m4/pkg.m4 $(top_srcdir)/configure.ac\n+\t$(top_srcdir)/m4/lib-ld.m4 $(top_srcdir)/m4/lib-link.m4 \\\n+\t$(top_srcdir)/m4/lib-prefix.m4 $(top_srcdir)/m4/pkg.m4 \\\n+\t$(top_srcdir)/configure.ac\n am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n \t$(ACLOCAL_M4)\n mkinstalldirs = $(SHELL) $(top_srcdir)/../../mkinstalldirs\n@@ -208,6 +207,7 @@ MAKEINFO = @MAKEINFO@\n MKDIR = @MKDIR@\n MKDIR_P = @MKDIR_P@\n MOC = @MOC@\n+MOC4 = @MOC4@\n MOZILLA_CFLAGS = @MOZILLA_CFLAGS@\n MOZILLA_LIBS = @MOZILLA_LIBS@\n NM = @NM@"}, {"sha": "2b48838b79fa64b6048eb6a9c70e41e2eb6ec2d5", "filename": "libjava/classpath/external/jsr166/Makefile.in", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fexternal%2Fjsr166%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fexternal%2Fjsr166%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fjsr166%2FMakefile.in?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -39,9 +39,6 @@ DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n am__aclocal_m4_deps = $(top_srcdir)/../../config/depstand.m4 \\\n \t$(top_srcdir)/../../config/lead-dot.m4 \\\n-\t$(top_srcdir)/../../config/lib-ld.m4 \\\n-\t$(top_srcdir)/../../config/lib-link.m4 \\\n-\t$(top_srcdir)/../../config/lib-prefix.m4 \\\n \t$(top_srcdir)/../../config/multi.m4 \\\n \t$(top_srcdir)/../../config/no-executables.m4 \\\n \t$(top_srcdir)/../../config/override.m4 \\\n@@ -60,7 +57,9 @@ am__aclocal_m4_deps = $(top_srcdir)/../../config/depstand.m4 \\\n \t$(top_srcdir)/m4/ax_create_stdint_h.m4 \\\n \t$(top_srcdir)/m4/ax_func_which_gethostbyname_r.m4 \\\n \t$(top_srcdir)/m4/gcc_attribute.m4 $(top_srcdir)/m4/iconv.m4 \\\n-\t$(top_srcdir)/m4/pkg.m4 $(top_srcdir)/configure.ac\n+\t$(top_srcdir)/m4/lib-ld.m4 $(top_srcdir)/m4/lib-link.m4 \\\n+\t$(top_srcdir)/m4/lib-prefix.m4 $(top_srcdir)/m4/pkg.m4 \\\n+\t$(top_srcdir)/configure.ac\n am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n \t$(ACLOCAL_M4)\n mkinstalldirs = $(SHELL) $(top_srcdir)/../../mkinstalldirs\n@@ -168,6 +167,7 @@ MAKEINFO = @MAKEINFO@\n MKDIR = @MKDIR@\n MKDIR_P = @MKDIR_P@\n MOC = @MOC@\n+MOC4 = @MOC4@\n MOZILLA_CFLAGS = @MOZILLA_CFLAGS@\n MOZILLA_LIBS = @MOZILLA_LIBS@\n NM = @NM@"}, {"sha": "a18308d2d748d046d5abd700ea02fa45443fe635", "filename": "libjava/classpath/external/relaxngDatatype/Makefile.in", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fexternal%2FrelaxngDatatype%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fexternal%2FrelaxngDatatype%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2FrelaxngDatatype%2FMakefile.in?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -39,9 +39,6 @@ DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n am__aclocal_m4_deps = $(top_srcdir)/../../config/depstand.m4 \\\n \t$(top_srcdir)/../../config/lead-dot.m4 \\\n-\t$(top_srcdir)/../../config/lib-ld.m4 \\\n-\t$(top_srcdir)/../../config/lib-link.m4 \\\n-\t$(top_srcdir)/../../config/lib-prefix.m4 \\\n \t$(top_srcdir)/../../config/multi.m4 \\\n \t$(top_srcdir)/../../config/no-executables.m4 \\\n \t$(top_srcdir)/../../config/override.m4 \\\n@@ -60,7 +57,9 @@ am__aclocal_m4_deps = $(top_srcdir)/../../config/depstand.m4 \\\n \t$(top_srcdir)/m4/ax_create_stdint_h.m4 \\\n \t$(top_srcdir)/m4/ax_func_which_gethostbyname_r.m4 \\\n \t$(top_srcdir)/m4/gcc_attribute.m4 $(top_srcdir)/m4/iconv.m4 \\\n-\t$(top_srcdir)/m4/pkg.m4 $(top_srcdir)/configure.ac\n+\t$(top_srcdir)/m4/lib-ld.m4 $(top_srcdir)/m4/lib-link.m4 \\\n+\t$(top_srcdir)/m4/lib-prefix.m4 $(top_srcdir)/m4/pkg.m4 \\\n+\t$(top_srcdir)/configure.ac\n am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n \t$(ACLOCAL_M4)\n mkinstalldirs = $(SHELL) $(top_srcdir)/../../mkinstalldirs\n@@ -168,6 +167,7 @@ MAKEINFO = @MAKEINFO@\n MKDIR = @MKDIR@\n MKDIR_P = @MKDIR_P@\n MOC = @MOC@\n+MOC4 = @MOC4@\n MOZILLA_CFLAGS = @MOZILLA_CFLAGS@\n MOZILLA_LIBS = @MOZILLA_LIBS@\n NM = @NM@"}, {"sha": "5a2a9123ccc8cbcb7302b7148b3159f4043db335", "filename": "libjava/classpath/external/sax/Makefile.in", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fexternal%2Fsax%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fexternal%2Fsax%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fsax%2FMakefile.in?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -39,9 +39,6 @@ DIST_COMMON = README $(srcdir)/Makefile.am $(srcdir)/Makefile.in\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n am__aclocal_m4_deps = $(top_srcdir)/../../config/depstand.m4 \\\n \t$(top_srcdir)/../../config/lead-dot.m4 \\\n-\t$(top_srcdir)/../../config/lib-ld.m4 \\\n-\t$(top_srcdir)/../../config/lib-link.m4 \\\n-\t$(top_srcdir)/../../config/lib-prefix.m4 \\\n \t$(top_srcdir)/../../config/multi.m4 \\\n \t$(top_srcdir)/../../config/no-executables.m4 \\\n \t$(top_srcdir)/../../config/override.m4 \\\n@@ -60,7 +57,9 @@ am__aclocal_m4_deps = $(top_srcdir)/../../config/depstand.m4 \\\n \t$(top_srcdir)/m4/ax_create_stdint_h.m4 \\\n \t$(top_srcdir)/m4/ax_func_which_gethostbyname_r.m4 \\\n \t$(top_srcdir)/m4/gcc_attribute.m4 $(top_srcdir)/m4/iconv.m4 \\\n-\t$(top_srcdir)/m4/pkg.m4 $(top_srcdir)/configure.ac\n+\t$(top_srcdir)/m4/lib-ld.m4 $(top_srcdir)/m4/lib-link.m4 \\\n+\t$(top_srcdir)/m4/lib-prefix.m4 $(top_srcdir)/m4/pkg.m4 \\\n+\t$(top_srcdir)/configure.ac\n am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n \t$(ACLOCAL_M4)\n mkinstalldirs = $(SHELL) $(top_srcdir)/../../mkinstalldirs\n@@ -168,6 +167,7 @@ MAKEINFO = @MAKEINFO@\n MKDIR = @MKDIR@\n MKDIR_P = @MKDIR_P@\n MOC = @MOC@\n+MOC4 = @MOC4@\n MOZILLA_CFLAGS = @MOZILLA_CFLAGS@\n MOZILLA_LIBS = @MOZILLA_LIBS@\n NM = @NM@"}, {"sha": "42dfe01dc2bd3addfd2ab32e2ccc66857e3439d3", "filename": "libjava/classpath/external/sax/org/xml/sax/ext/EntityResolver2.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2Fext%2FEntityResolver2.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2Fext%2FEntityResolver2.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2Fext%2FEntityResolver2.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -1,7 +1,7 @@\n // EntityResolver2.java - Extended SAX entity resolver.\n // http://www.saxproject.org\n // No warranty; no copyright -- use this as you will.\n-// $Id: EntityResolver2.java,v 1.2 2006/12/10 20:25:41 gnu_andrew Exp $\n+// $Id: EntityResolver2.java,v 1.2 2006-12-10 20:25:41 gnu_andrew Exp $\n \n package org.xml.sax.ext;\n "}, {"sha": "a73e8a4ee94fa019eceba1764898fd5d654e222b", "filename": "libjava/classpath/external/sax/org/xml/sax/ext/Locator2Impl.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2Fext%2FLocator2Impl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2Fext%2FLocator2Impl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2Fext%2FLocator2Impl.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -1,7 +1,7 @@\n // Locator2Impl.java - extended LocatorImpl\n // http://www.saxproject.org\n // Public Domain: no warranty.\n-// $Id: Locator2Impl.java,v 1.2 2006/12/10 20:25:41 gnu_andrew Exp $\n+// $Id: Locator2Impl.java,v 1.2 2006-12-10 20:25:41 gnu_andrew Exp $\n \n package org.xml.sax.ext;\n "}, {"sha": "24238e2f3b50947e863f5b1aeb59c121fbe666ad", "filename": "libjava/classpath/external/sax/org/xml/sax/helpers/XMLReaderAdapter.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2Fhelpers%2FXMLReaderAdapter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2Fhelpers%2FXMLReaderAdapter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2Fhelpers%2FXMLReaderAdapter.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -2,7 +2,7 @@\n // http://www.saxproject.org\n // Written by David Megginson\n // NO WARRANTY!  This class is in the public domain.\n-// $Id: XMLReaderAdapter.java,v 1.2 2006/12/10 20:25:41 gnu_andrew Exp $\n+// $Id: XMLReaderAdapter.java,v 1.2 2006-12-10 20:25:41 gnu_andrew Exp $\n \n package org.xml.sax.helpers;\n "}, {"sha": "4c65e720306d36a55b6784ea7c805321a1c156e1", "filename": "libjava/classpath/external/w3c_dom/Makefile.in", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fexternal%2Fw3c_dom%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fexternal%2Fw3c_dom%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fw3c_dom%2FMakefile.in?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -39,9 +39,6 @@ DIST_COMMON = README $(srcdir)/Makefile.am $(srcdir)/Makefile.in\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n am__aclocal_m4_deps = $(top_srcdir)/../../config/depstand.m4 \\\n \t$(top_srcdir)/../../config/lead-dot.m4 \\\n-\t$(top_srcdir)/../../config/lib-ld.m4 \\\n-\t$(top_srcdir)/../../config/lib-link.m4 \\\n-\t$(top_srcdir)/../../config/lib-prefix.m4 \\\n \t$(top_srcdir)/../../config/multi.m4 \\\n \t$(top_srcdir)/../../config/no-executables.m4 \\\n \t$(top_srcdir)/../../config/override.m4 \\\n@@ -60,7 +57,9 @@ am__aclocal_m4_deps = $(top_srcdir)/../../config/depstand.m4 \\\n \t$(top_srcdir)/m4/ax_create_stdint_h.m4 \\\n \t$(top_srcdir)/m4/ax_func_which_gethostbyname_r.m4 \\\n \t$(top_srcdir)/m4/gcc_attribute.m4 $(top_srcdir)/m4/iconv.m4 \\\n-\t$(top_srcdir)/m4/pkg.m4 $(top_srcdir)/configure.ac\n+\t$(top_srcdir)/m4/lib-ld.m4 $(top_srcdir)/m4/lib-link.m4 \\\n+\t$(top_srcdir)/m4/lib-prefix.m4 $(top_srcdir)/m4/pkg.m4 \\\n+\t$(top_srcdir)/configure.ac\n am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n \t$(ACLOCAL_M4)\n mkinstalldirs = $(SHELL) $(top_srcdir)/../../mkinstalldirs\n@@ -168,6 +167,7 @@ MAKEINFO = @MAKEINFO@\n MKDIR = @MKDIR@\n MKDIR_P = @MKDIR_P@\n MOC = @MOC@\n+MOC4 = @MOC4@\n MOZILLA_CFLAGS = @MOZILLA_CFLAGS@\n MOZILLA_LIBS = @MOZILLA_LIBS@\n NM = @NM@"}, {"sha": "0c6e4685cc33157a634714de856017a5c841762d", "filename": "libjava/classpath/gnu/java/nio/FileLockImpl.java", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2FFileLockImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2FFileLockImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2FFileLockImpl.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -88,6 +88,11 @@ public boolean isValid()\n     return valid;\n   }\n \n+  public void close() throws Exception\n+  {\n+    release();\n+  }\n+\n   /**\n    * Releases the lock if it is still valid. Marks this lock as invalid.\n    */"}, {"sha": "3633be9201793e240499bc0ffe4191178a362df8", "filename": "libjava/classpath/gnu/java/text/AttributedFormatBuffer.java", "status": "modified", "additions": 32, "deletions": 29, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fgnu%2Fjava%2Ftext%2FAttributedFormatBuffer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fgnu%2Fjava%2Ftext%2FAttributedFormatBuffer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Ftext%2FAttributedFormatBuffer.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -1,5 +1,5 @@\n /* AttributedFormatBuffer.java -- Implements an attributed FormatBuffer.\n-   Copyright (C) 2004 Free Software Foundation, Inc.\n+   Copyright (C) 2004, 2012 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -41,6 +41,10 @@\n import java.text.AttributedCharacterIterator;\n import java.util.ArrayList;\n import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+import static java.text.AttributedCharacterIterator.Attribute;\n \n /**\n  * This class is an implementation of a FormatBuffer with attributes.\n@@ -53,12 +57,12 @@\n public class AttributedFormatBuffer implements FormatBuffer\n {\n   private final CPStringBuilder buffer;\n-  private final ArrayList ranges;\n-  private final ArrayList attributes;\n-  private int[] a_ranges;\n-  private HashMap[] a_attributes;\n+  private final ArrayList<Integer> ranges;\n+  private final ArrayList<Map<Attribute,Object>> attributes;\n+  private int[] aRanges;\n+  private List<Map<Attribute,Object>> aAttributes;\n   private int startingRange;\n-  AttributedCharacterIterator.Attribute defaultAttr;\n+  Attribute defaultAttr;\n \n   /**\n    * This constructor accepts a StringBuffer. If the buffer contains\n@@ -67,8 +71,8 @@ public class AttributedFormatBuffer implements FormatBuffer\n   public AttributedFormatBuffer(CPStringBuilder buffer)\n   {\n     this.buffer = new CPStringBuilder(buffer);\n-    this.ranges = new ArrayList();\n-    this.attributes = new ArrayList();\n+    this.ranges = new ArrayList<Integer>();\n+    this.attributes = new ArrayList<Map<Attribute,Object>>();\n     this.defaultAttr = null;\n     if (buffer.length() != 0)\n       {\n@@ -94,23 +98,23 @@ public AttributedFormatBuffer()\n    * and attributes it adds exactly one attribute for the range of characters\n    * comprised between the last entry in 'ranges' and the specified new range.\n    *\n-   * @param new_range A new range to insert in the list.\n+   * @param newRange A new range to insert in the list.\n    * @param attr A new attribute to insert in the list.\n    */\n-  private final void addAttribute(int new_range, AttributedCharacterIterator.Attribute attr)\n+  private final void addAttribute(int newRange, Attribute attr)\n   {\n-    HashMap map;\n+    Map<Attribute,Object> map;\n \n     if (attr != null)\n       {\n-        map = new HashMap();\n+        map = new HashMap<Attribute,Object>();\n         map.put(attr, attr);\n         attributes.add(map);\n       }\n     else\n       attributes.add(null);\n \n-    ranges.add(new Integer(new_range));\n+    ranges.add(Integer.valueOf(newRange));\n   }\n \n   public void append(String s)\n@@ -120,15 +124,15 @@ public void append(String s)\n     buffer.append(s);\n   }\n \n-  public void append(String s, AttributedCharacterIterator.Attribute attr)\n+  public void append(String s, Attribute attr)\n   {\n     setDefaultAttribute(attr);\n     startingRange = buffer.length();\n     append(s);\n     setDefaultAttribute(null);\n   }\n \n-  public void append(String s, int[] ranges, HashMap[] attrs)\n+  public void append(String s, int[] ranges, List<Map<Attribute,Object>> attrs)\n   {\n     int curPos = buffer.length();\n \n@@ -137,8 +141,8 @@ public void append(String s, int[] ranges, HashMap[] attrs)\n       {\n         for (int i = 0; i < ranges.length; i++)\n           {\n-            this.ranges.add(new Integer(ranges[i] + curPos));\n-            this.attributes.add(attrs[i]);\n+            this.ranges.add(Integer.valueOf(ranges[i] + curPos));\n+            this.attributes.add(attrs.get(i));\n           }\n       }\n     startingRange = buffer.length();\n@@ -152,14 +156,14 @@ public void append(char c)\n     buffer.append(c);\n   }\n \n-  public void append(char c, AttributedCharacterIterator.Attribute attr)\n+  public void append(char c, Attribute attr)\n   {\n     setDefaultAttribute(attr);\n     buffer.append(c);\n     setDefaultAttribute(null);\n   }\n \n-  public void setDefaultAttribute(AttributedCharacterIterator.Attribute attr)\n+  public void setDefaultAttribute(Attribute attr)\n   {\n     if (attr == defaultAttr)\n       return;\n@@ -174,7 +178,7 @@ public void setDefaultAttribute(AttributedCharacterIterator.Attribute attr)\n     startingRange = currentPos;\n   }\n \n-  public AttributedCharacterIterator.Attribute getDefaultAttribute()\n+  public Attribute getDefaultAttribute()\n   {\n     return defaultAttr;\n   }\n@@ -209,12 +213,11 @@ public void sync()\n \n     addAttribute(buffer.length(), defaultAttr);\n \n-    a_ranges = new int[ranges.size()];\n-    for (int i = 0; i < a_ranges.length; i++)\n-      a_ranges[i] = ((Integer)(ranges.get (i))).intValue();\n+    aRanges = new int[ranges.size()];\n+    for (int i = 0; i < aRanges.length; i++)\n+      aRanges[i] = ranges.get (i).intValue();\n \n-    a_attributes = new HashMap[attributes.size()];\n-    System.arraycopy(attributes.toArray(), 0, a_attributes, 0, a_attributes.length);\n+    aAttributes = new ArrayList<Map<Attribute,Object>>(attributes);\n   }\n \n   /**\n@@ -235,17 +238,17 @@ public CPStringBuilder getBuffer()\n    */\n   public int[] getRanges()\n   {\n-    return a_ranges;\n+    return aRanges;\n   }\n \n   /**\n    * This method returns the array containing the map on the\n    * attributes.\n    *\n-   * @return An array of {@link java.util.Map} containing the attributes.\n+   * @return A {@link java.util.List} of {@link java.util.Map}s containing the attributes.\n    */\n-  public HashMap[] getAttributes()\n+  public List<Map<Attribute,Object>> getAttributes()\n   {\n-    return a_attributes;\n+    return aAttributes;\n   }\n }"}, {"sha": "2922897ee1f262394faa503b84361847e8ed8e71", "filename": "libjava/classpath/gnu/java/text/FormatBuffer.java", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fgnu%2Fjava%2Ftext%2FFormatBuffer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fgnu%2Fjava%2Ftext%2FFormatBuffer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Ftext%2FFormatBuffer.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -1,5 +1,5 @@\n /* FormatBuffer.java -- General interface to build attributed strings.\n-   Copyright (C) 2004 Free Software Foundation, Inc.\n+   Copyright (C) 2004, 2012 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -37,7 +37,10 @@\n package gnu.java.text;\n \n import java.text.AttributedCharacterIterator;\n-import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+import static java.text.AttributedCharacterIterator.Attribute;\n \n /**\n  * This interface describes a modifiable buffer which contains attributed\n@@ -67,7 +70,7 @@\n    * @param s The string to append to the buffer.\n    * @param attr Attribute to use for the string in the buffer.\n    */\n-  public void append(String s, AttributedCharacterIterator.Attribute attr);\n+  public void append(String s, Attribute attr);\n \n   /**\n    * This method appends a simple string to the buffer. This part of\n@@ -79,7 +82,7 @@\n    * to the string.\n    * @param attrs The attributes of the string in the buffer.\n    */\n-  public void append(String s, int[] ranges, HashMap[] attrs);\n+  public void append(String s, int[] ranges, List<Map<Attribute,Object>> attrs);\n \n   /**\n    * This method appends a simple char to the buffer. This part of\n@@ -97,22 +100,22 @@\n    * @param c The character to append to the buffer.\n    * @param attr Attribute to use for the character in the buffer.\n    */\n-  public void append(char c, AttributedCharacterIterator.Attribute attr);\n+  public void append(char c, Attribute attr);\n \n   /**\n    * This method changes the current default attribute for the next string\n    * or character which will be appended to the buffer.\n    *\n    * @param attr The attribute which will be used by default.\n    */\n-  public void setDefaultAttribute(AttributedCharacterIterator.Attribute attr);\n+  public void setDefaultAttribute(Attribute attr);\n \n   /**\n    * This method returns the current default attribute for the buffer.\n    *\n    * @return The default attribute for the buffer.\n    */\n-  public AttributedCharacterIterator.Attribute getDefaultAttribute();\n+  public Attribute getDefaultAttribute();\n \n   /**\n    * This method cuts the last characters of the buffer. The number of"}, {"sha": "677d4d3b91a6839d0798b2f4ccd60a45f92eea3f", "filename": "libjava/classpath/gnu/java/text/FormatCharacterIterator.java", "status": "modified", "additions": 121, "deletions": 102, "changes": 223, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fgnu%2Fjava%2Ftext%2FFormatCharacterIterator.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fgnu%2Fjava%2Ftext%2FFormatCharacterIterator.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Ftext%2FFormatCharacterIterator.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -1,6 +1,6 @@\n /* FormatCharacter.java -- Implementation of AttributedCharacterIterator for\n    formatters.\n-   Copyright (C) 1998, 1999, 2000, 2001, 2003, 2004, 2005 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2000, 2001, 2003, 2004, 2005, 2012 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -38,12 +38,15 @@\n package gnu.java.text;\n \n import java.text.AttributedCharacterIterator;\n+import java.util.ArrayList;\n import java.util.HashMap;\n import java.util.HashSet;\n import java.util.Iterator;\n+import java.util.List;\n import java.util.Map;\n import java.util.Set;\n-import java.util.Vector;\n+\n+import static java.text.AttributedCharacterIterator.Attribute;\n \n /**\n  * This class should not be put public and it is only intended to the\n@@ -62,7 +65,7 @@ public class FormatCharacterIterator implements AttributedCharacterIterator\n   private int charIndex;\n   private int attributeIndex;\n   private int[] ranges;\n-  private HashMap[] attributes;\n+  private List<Map<Attribute,Object>> attributes;\n   private static final boolean DEBUG = false;\n \n   /**\n@@ -74,7 +77,7 @@ public FormatCharacterIterator()\n   {\n     formattedString = \"\";\n     ranges = new int[0];\n-    attributes = new HashMap[0];\n+    attributes = new ArrayList<Map<Attribute,Object>>(0);\n   }\n \n   /**\n@@ -87,12 +90,13 @@ public FormatCharacterIterator()\n    * <pre>\n    *   s = \"hello\";\n    *   ranges = new int[] { 2, 6 };\n-   *   attributes = new HashMap[2];\n+   *   attributes = new ArrayList<Map<Attribute,Object>>(2);\n    * </pre>\n-   * <code>\"he\"</code> will have the attributes <code>attributes[0]</code>,\n-   * <code>\"llo\"</code> the <code>attributes[1]</code>.\n+   * <code>\"he\"</code> will have the attributes <code>attributes.get(0)</code>,\n+   * <code>\"llo\"</code> the <code>attributes.get(1)</code>.\n    */\n-  public FormatCharacterIterator (String s, int[] ranges, HashMap[] attributes)\n+  public FormatCharacterIterator (String s, int[] ranges,\n+                                  List<Map<Attribute,Object>> attributes)\n   {\n     formattedString = s;\n     this.ranges = ranges;\n@@ -104,55 +108,57 @@ public FormatCharacterIterator (String s, int[] ranges, HashMap[] attributes)\n    * and thus are already documented.\n    */\n \n-  public Set getAllAttributeKeys()\n+  public Set<Attribute> getAllAttributeKeys()\n   {\n-    if (attributes != null && attributes[attributeIndex] != null)\n-      return attributes[attributeIndex].keySet();\n+    if (attributes != null && attributes.get(attributeIndex) != null)\n+      return attributes.get(attributeIndex).keySet();\n     else\n-      return new HashSet();\n+      return new HashSet<Attribute>();\n   }\n \n-  public Map getAttributes()\n+  public Map<Attribute,Object> getAttributes()\n   {\n-    if (attributes != null && attributes[attributeIndex] != null)\n-      return attributes[attributeIndex];\n+    if (attributes != null && attributes.get(attributeIndex) != null)\n+      return attributes.get(attributeIndex);\n     else\n-      return new HashMap();\n+      return new HashMap<Attribute,Object>();\n   }\n \n-  public Object getAttribute (AttributedCharacterIterator.Attribute attrib)\n+  public Object getAttribute (Attribute attrib)\n   {\n-    if (attributes != null && attributes[attributeIndex] != null)\n-      return attributes[attributeIndex].get (attrib);\n+    if (attributes != null && attributes.get(attributeIndex) != null)\n+      return attributes.get(attributeIndex).get (attrib);\n     else\n       return null;\n   }\n \n-  public int getRunLimit(Set reqAttrs)\n+  public int getRunLimit(Set<? extends Attribute> reqAttrs)\n   {\n     if (attributes == null)\n       return formattedString.length();\n \n     int currentAttrIndex = attributeIndex;\n-    Set newKeys;\n+    Set<Attribute> newKeys;\n \n     do\n       {\n         currentAttrIndex++;\n-        if (currentAttrIndex == attributes.length)\n+        if (currentAttrIndex == attributes.size())\n           return formattedString.length();\n-        if (attributes[currentAttrIndex] == null)\n+        Map<Attribute,Object> currentAttr =\n+          attributes.get(currentAttrIndex);\n+        if (currentAttr == null)\n           break;\n-        newKeys = attributes[currentAttrIndex].keySet();\n+        newKeys = currentAttr.keySet();\n       }\n     while (newKeys.containsAll (reqAttrs));\n \n     return ranges[currentAttrIndex-1];\n   }\n \n-  public int getRunLimit (AttributedCharacterIterator.Attribute attribute)\n+  public int getRunLimit (Attribute attribute)\n   {\n-    Set s = new HashSet();\n+    Set<Attribute> s = new HashSet<Attribute>();\n \n     s.add (attribute);\n     return getRunLimit (s);\n@@ -162,34 +168,36 @@ public int getRunLimit()\n   {\n     if (attributes == null)\n       return formattedString.length();\n-    if (attributes[attributeIndex] == null)\n+    if (attributes.get(attributeIndex) == null)\n       {\n-        for (int i=attributeIndex+1;i<attributes.length;i++)\n-          if (attributes[i] != null)\n+        for (int i=attributeIndex+1;i<attributes.size();i++)\n+          if (attributes.get(i) != null)\n             return ranges[i-1];\n         return formattedString.length();\n       }\n \n-    return getRunLimit (attributes[attributeIndex].keySet());\n+    return getRunLimit (attributes.get(attributeIndex).keySet());\n   }\n \n-  public int getRunStart (Set reqAttrs)\n+  public int getRunStart (Set<? extends Attribute> reqAttrs)\n   {\n     if (attributes == null)\n       return formattedString.length();\n \n     int currentAttrIndex = attributeIndex;\n-    Set newKeys = null;\n+    Set<Attribute> newKeys = null;\n \n     do\n       {\n         if (currentAttrIndex == 0)\n           return 0;\n \n         currentAttrIndex--;\n-        if (attributes[currentAttrIndex] == null)\n+        Map<Attribute,Object> currentAttr =\n+          attributes.get(currentAttrIndex);\n+        if (currentAttr == null)\n           break;\n-        newKeys = attributes[currentAttrIndex].keySet();\n+        newKeys = currentAttr.keySet();\n       }\n     while (newKeys.containsAll (reqAttrs));\n \n@@ -201,20 +209,21 @@ public int getRunStart()\n     if (attributes == null)\n       return 0;\n \n-    if (attributes[attributeIndex] == null)\n+    Map<Attribute,Object> attrib = attributes.get(attributeIndex);\n+    if (attrib == null)\n       {\n         for (int i=attributeIndex;i>0;i--)\n-          if (attributes[i] != null)\n+          if (attributes.get(i) != null)\n             return ranges[attributeIndex-1];\n         return 0;\n       }\n \n-    return getRunStart (attributes[attributeIndex].keySet());\n+    return getRunStart (attrib.keySet());\n   }\n \n-  public int getRunStart (AttributedCharacterIterator.Attribute attribute)\n+  public int getRunStart (Attribute attribute)\n   {\n-    Set s = new HashSet();\n+    Set<Attribute> s = new HashSet<Attribute>();\n \n     s.add (attribute);\n     return getRunStart (s);\n@@ -261,7 +270,7 @@ public char last()\n   {\n     charIndex = formattedString.length()-1;\n     if (attributes != null)\n-      attributeIndex = attributes.length-1;\n+      attributeIndex = attributes.size()-1;\n     return formattedString.charAt (charIndex);\n   }\n \n@@ -306,7 +315,7 @@ public char setIndex (int position)\n     charIndex = position;\n     if (attributes != null)\n       {\n-        for (attributeIndex=0;attributeIndex<attributes.length;\n+        for (attributeIndex=0;attributeIndex<attributes.size();\n              attributeIndex++)\n           if (ranges[attributeIndex] > charIndex)\n             break;\n@@ -327,40 +336,42 @@ public char setIndex (int position)\n    *\n    * @param attributes the new array attributes to apply to the string.\n    */\n-  public void mergeAttributes (HashMap[] attributes, int[] ranges)\n+  public void mergeAttributes (List<Map<Attribute,Object>> attributes,\n+                               int[] ranges)\n   {\n-    Vector new_ranges = new Vector();\n-    Vector new_attributes = new Vector();\n+    List<Integer> newRanges = new ArrayList<Integer>();\n+    List<Map<Attribute,Object>> newAttributes =\n+      new ArrayList<Map<Attribute,Object>>();\n     int i = 0, j = 0;\n \n-    debug(\"merging \" + attributes.length + \" attrs\");\n+    debug(\"merging \" + attributes.size() + \" attrs\");\n \n     while (i < this.ranges.length && j < ranges.length)\n       {\n-        if (this.attributes[i] != null)\n+        if (this.attributes.get(i) != null)\n           {\n-            new_attributes.add (this.attributes[i]);\n-            if (attributes[j] != null)\n-              this.attributes[i].putAll (attributes[j]);\n+            newAttributes.add (this.attributes.get(i));\n+            if (attributes.get(j) != null)\n+              this.attributes.get(i).putAll (attributes.get(j));\n           }\n         else\n           {\n-            new_attributes.add (attributes[j]);\n+            newAttributes.add (attributes.get(j));\n           }\n         if (this.ranges[i] == ranges[j])\n           {\n-            new_ranges.add (new Integer (ranges[j]));\n+            newRanges.add (Integer.valueOf (ranges[j]));\n             i++;\n             j++;\n           }\n         else if (this.ranges[i] < ranges[j])\n           {\n-            new_ranges.add (new Integer (this.ranges[i]));\n+            newRanges.add (Integer.valueOf (this.ranges[i]));\n             i++;\n           }\n         else\n           {\n-            new_ranges.add (new Integer (ranges[j]));\n+            newRanges.add (Integer.valueOf (ranges[j]));\n             j++;\n           }\n      }\n@@ -369,27 +380,25 @@ else if (this.ranges[i] < ranges[j])\n       {\n         for (;i<this.ranges.length;i++)\n           {\n-            new_attributes.add (this.attributes[i]);\n-            new_ranges.add (new Integer (this.ranges[i]));\n+            newAttributes.add (this.attributes.get(i));\n+            newRanges.add (Integer.valueOf (this.ranges[i]));\n           }\n       }\n     if (j != ranges.length)\n       {\n         for (;j<ranges.length;j++)\n           {\n-            new_attributes.add (attributes[j]);\n-            new_ranges.add (new Integer (ranges[j]));\n+            newAttributes.add (attributes.get(j));\n+            newRanges.add (Integer.valueOf (ranges[j]));\n           }\n       }\n \n-    this.attributes = new HashMap[new_attributes.size()];\n-    this.ranges = new int[new_ranges.size()];\n-    System.arraycopy (new_attributes.toArray(), 0, this.attributes,\n-                      0, this.attributes.length);\n+    this.attributes = newAttributes;\n+    this.ranges = new int[newRanges.size()];\n \n-    for (i=0;i<new_ranges.size();i++)\n+    for (i=0;i<newRanges.size();i++)\n       {\n-        this.ranges[i] = ((Integer)new_ranges.elementAt (i)).intValue();\n+        this.ranges[i] = newRanges.get (i).intValue();\n       }\n \n     dumpTable();\n@@ -405,64 +414,65 @@ else if (this.ranges[i] < ranges[j])\n   public void append (AttributedCharacterIterator iterator)\n   {\n     char c = iterator.first();\n-    Vector more_ranges = new Vector();\n-    Vector more_attributes = new Vector();\n+    List<Integer> moreRanges = new ArrayList<Integer>();\n+    List<Map<Attribute,Object>> moreAttributes =\n+      new ArrayList<Map<Attribute,Object>>();\n \n     do\n       {\n         formattedString = formattedString + String.valueOf (c);\n         // TODO: Reduce the size of the output array.\n-        more_attributes.add (iterator.getAttributes());\n-        more_ranges.add (new Integer (formattedString.length()));\n+        moreAttributes.add (iterator.getAttributes());\n+        moreRanges.add (Integer.valueOf (formattedString.length()));\n         // END TOOD\n         c = iterator.next();\n       }\n     while (c != DONE);\n \n-    HashMap[] new_attributes = new HashMap[attributes.length\n-                                           + more_attributes.size()];\n-    int[] new_ranges = new int[ranges.length + more_ranges.size()];\n+    List<Map<Attribute,Object>> newAttributes =\n+      new ArrayList<Map<Attribute,Object>>(attributes.size() + moreAttributes.size());\n+    int[] newRanges = new int[ranges.length + moreRanges.size()];\n \n-    System.arraycopy (attributes, 0, new_attributes, 0, attributes.length);\n-    System.arraycopy (more_attributes.toArray(), 0, new_attributes,\n-                      attributes.length, more_attributes.size());\n+    newAttributes.addAll(attributes);\n+    newAttributes.addAll(moreAttributes);\n \n-    System.arraycopy (ranges, 0, new_ranges, 0, ranges.length);\n-    Object[] new_ranges_array = more_ranges.toArray();\n-    for (int i = 0; i < more_ranges.size();i++)\n-      new_ranges[i+ranges.length] = ((Integer) new_ranges_array[i]).intValue();\n+    System.arraycopy (ranges, 0, newRanges, 0, ranges.length);\n+    Integer[] newRangesArray = moreRanges.toArray(new Integer[moreRanges.size()]);\n+    for (int i = 0; i < moreRanges.size();i++)\n+      newRanges[i+ranges.length] = newRangesArray[i].intValue();\n \n-    attributes = new_attributes;\n-    ranges = new_ranges;\n+    attributes = newAttributes;\n+    ranges = newRanges;\n   }\n \n   /**\n    * This method appends an attributed string which attributes are specified\n    * directly in the calling parameters.\n    *\n    * @param text The string to append.\n-   * @param local_attributes The attributes to put on this string in the\n+   * @param localAttributes The attributes to put on this string in the\n    * iterator. If it is <code>null</code> the string will simply have no\n    * attributes.\n    */\n-  public void append (String text, HashMap local_attributes)\n+  public void append (String text, HashMap<? extends Attribute,? extends Object> localAttributes)\n   {\n-    int[] new_ranges = new int[ranges.length+1];\n-    HashMap[] new_attributes = new HashMap[attributes.length+1];\n+    int[] newRanges = new int[ranges.length+1];\n+    List<Map<Attribute,Object>> newAttributes =\n+      new ArrayList<Map<Attribute,Object>>(attributes.size()+1);\n \n     formattedString += text;\n-    System.arraycopy (attributes, 0, new_attributes, 0, attributes.length);\n-    System.arraycopy (ranges, 0, new_ranges, 0, ranges.length);\n-    new_ranges[ranges.length] = formattedString.length();\n-    new_attributes[attributes.length] = local_attributes;\n+    newAttributes.addAll(attributes);\n+    System.arraycopy (ranges, 0, newRanges, 0, ranges.length);\n+    newRanges[ranges.length] = formattedString.length();\n+    newAttributes.add(new HashMap<Attribute,Object>(localAttributes));\n \n-    ranges = new_ranges;\n-    attributes = new_attributes;\n+    ranges = newRanges;\n+    attributes = newAttributes;\n   }\n \n   /**\n    * This method appends a string without attributes. It is completely\n-   * equivalent to call {@link #append(String,HashMap)} with local_attributes\n+   * equivalent to call {@link #append(String,HashMap)} with localAttributes\n    * equal to <code>null</code>.\n    *\n    * @param text The string to append to the iterator.\n@@ -475,22 +485,31 @@ public void append (String text)\n   /**\n    * This method adds a set of attributes to a range of character. The\n    * bounds are always inclusive. In the case many attributes have to\n-   * be added it is advised to directly use {@link #mergeAttributes([Ljava.util.HashMap;[I}\n+   * be added it is advised to directly use {@link #mergeAttributes(java.util.List;[I}\n    *\n    * @param attributes Attributes to merge into the iterator.\n-   * @param range_start Lower bound of the range of characters which will receive the\n+   * @param rangeStart Lower bound of the range of characters which will receive the\n    * attribute.\n-   * @param range_end Upper bound of the range of characters which will receive the\n+   * @param rangeEnd Upper bound of the range of characters which will receive the\n    * attribute.\n    *\n    * @throws IllegalArgumentException if ranges are out of bounds.\n    */\n-  public void addAttributes(HashMap attributes, int range_start, int range_end)\n+  public void addAttributes(Map<? extends Attribute,? extends Object> attributes,\n+                            int rangeStart, int rangeEnd)\n   {\n-    if (range_start == 0)\n-      mergeAttributes(new HashMap[] { attributes }, new int[] { range_end });\n+    List<Map<Attribute,Object>> mergeAttribs = new ArrayList<Map<Attribute,Object>>();\n+    int[] mergeRanges;\n+\n+    if (rangeStart == 0)\n+        mergeRanges = new int[] { rangeEnd };\n     else\n-      mergeAttributes(new HashMap[] { null, attributes }, new int[] { range_start, range_end });\n+      {\n+        mergeRanges = new int[] { rangeStart, rangeEnd };\n+        mergeAttribs.add(null);\n+      }\n+    mergeAttribs.add(new HashMap<Attribute,Object>(attributes));\n+    mergeAttributes(mergeAttribs, mergeRanges);\n   }\n \n   private void debug(String s)\n@@ -501,23 +520,23 @@ private void debug(String s)\n \n   private void dumpTable()\n   {\n-    int start_range = 0;\n+    int startRange = 0;\n \n     if (!DEBUG)\n       return;\n \n     System.out.println(\"Dumping internal table:\");\n     for (int i = 0; i < ranges.length; i++)\n       {\n-        System.out.print(\"\\t\" + start_range + \" => \" + ranges[i] + \":\");\n-        if (attributes[i] == null)\n+        System.out.print(\"\\t\" + startRange + \" => \" + ranges[i] + \":\");\n+        if (attributes.get(i) == null)\n           System.out.println(\"null\");\n         else\n           {\n-            Set keyset = attributes[i].keySet();\n+            Set<Attribute> keyset = attributes.get(i).keySet();\n             if (keyset != null)\n               {\n-                Iterator keys = keyset.iterator();\n+                Iterator<Attribute> keys = keyset.iterator();\n \n                 while (keys.hasNext())\n                   System.out.print(\" \" + keys.next());"}, {"sha": "8374500ea25be6bf8f9ab1558d35bf9a0b0b5e2b", "filename": "libjava/classpath/gnu/java/text/StringFormatBuffer.java", "status": "modified", "additions": 11, "deletions": 8, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fgnu%2Fjava%2Ftext%2FStringFormatBuffer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fgnu%2Fjava%2Ftext%2FStringFormatBuffer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Ftext%2FStringFormatBuffer.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -1,5 +1,5 @@\n /* StringFormatBuffer.java -- Implements FormatBuffer using StringBuffer.\n-   Copyright (C) 2004 Free Software Foundation, Inc.\n+   Copyright (C) 2004, 2012 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -37,7 +37,10 @@\n package gnu.java.text;\n \n import java.text.AttributedCharacterIterator;\n-import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+import static java.text.AttributedCharacterIterator.Attribute;\n \n /**\n  * This class is an implementation of a FormatBuffer without attributes.\n@@ -48,7 +51,7 @@\n public class StringFormatBuffer implements FormatBuffer\n {\n   private final StringBuffer buffer;\n-  private AttributedCharacterIterator.Attribute defaultAttr;\n+  private Attribute defaultAttr;\n \n   public StringFormatBuffer(int prebuffer)\n   {\n@@ -65,12 +68,12 @@ public void append(String s)\n     buffer.append(s);\n   }\n \n-  public void append(String s, AttributedCharacterIterator.Attribute attr)\n+  public void append(String s, Attribute attr)\n   {\n     buffer.append(s);\n   }\n \n-  public void append(String s, int[] ranges, HashMap[] attrs)\n+  public void append(String s, int[] ranges, List<Map<Attribute,Object>> attrs)\n   {\n     buffer.append(s);\n   }\n@@ -80,17 +83,17 @@ public void append(char c)\n     buffer.append(c);\n   }\n \n-  public void append(char c, AttributedCharacterIterator.Attribute attr)\n+  public void append(char c, Attribute attr)\n   {\n     buffer.append(c);\n   }\n \n-  public void setDefaultAttribute(AttributedCharacterIterator.Attribute attr)\n+  public void setDefaultAttribute(Attribute attr)\n   {\n     defaultAttr = attr;\n   }\n \n-  public AttributedCharacterIterator.Attribute getDefaultAttribute()\n+  public Attribute getDefaultAttribute()\n   {\n     return defaultAttr;\n   }"}, {"sha": "ca7b046f25af0e26366be98e26ab9a3641a065ff", "filename": "libjava/classpath/gnu/javax/sound/midi/dssi/DSSIMidiDeviceProvider.java", "status": "modified", "additions": 12, "deletions": 9, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fsound%2Fmidi%2Fdssi%2FDSSIMidiDeviceProvider.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fsound%2Fmidi%2Fdssi%2FDSSIMidiDeviceProvider.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fsound%2Fmidi%2Fdssi%2FDSSIMidiDeviceProvider.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -1,5 +1,5 @@\n /* DSSIMidiDeviceProvider.java -- DSSI Device Provider\n-   Copyright (C) 2005 Free Software Foundation, Inc.\n+   Copyright (C) 2005, 2012 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -69,13 +69,16 @@ public class DSSIMidiDeviceProvider extends MidiDeviceProvider\n    */\n   private static class DSSIInfo extends Info\n   {\n+    String copyright;\n     String soname;\n     long index;\n \n-    public DSSIInfo(String name, String vendor, String description,\n-                    String version, String soname, long index)\n+    public DSSIInfo(String name, String vendor, String label,\n+                    String copyright, String version,\n+                    String soname, long index)\n     {\n-      super(name, vendor, description, version);\n+      super(name, vendor, label, version);\n+      this.copyright = copyright;\n       this.soname = soname;\n       this.index = index;\n     }\n@@ -89,9 +92,9 @@ public DSSIInfo(String name, String vendor, String description,\n   static native String getDSSIVendor_(long handle);\n   static native String getDSSILabel_(long handle);\n \n-  private static List examineLibrary(String soname)\n+  private static List<DSSIInfo> examineLibrary(String soname)\n   {\n-     List list = new ArrayList();\n+     List<DSSIInfo> list = new ArrayList<DSSIInfo>();\n      long index = 0;\n      long handle;\n \n@@ -107,7 +110,7 @@ private static List examineLibrary(String soname)\n        String copyright = getDSSICopyright_(handle);\n        String label = getDSSIName_(handle);\n        String vendor = getDSSIVendor_(handle);\n-       list.add(new DSSIInfo(name, vendor, label,\n+       list.add(new DSSIInfo(name, vendor, label, copyright,\n                              \"DSSI-1\", soname, index));\n        index++;\n      } while (true);\n@@ -133,10 +136,10 @@ public boolean accept(File dir, String n)\n                                         return n.endsWith(\".so\");\n                                       }\n                                     });\n-    List ilist = new ArrayList();\n+    List<DSSIInfo> ilist = new ArrayList<DSSIInfo>();\n     for (int i = 0; i < sofiles.length; i++)\n       ilist.addAll(examineLibrary(new File(dssidir, sofiles[i]).getAbsolutePath()));\n-    infos = (DSSIInfo[]) ilist.toArray(new DSSIInfo[ilist.size()]);\n+    infos = ilist.toArray(new DSSIInfo[ilist.size()]);\n   }\n \n   public DSSIMidiDeviceProvider()"}, {"sha": "1ae1fe87a58b611d0b08da47088847e49e3e06b3", "filename": "libjava/classpath/gnu/javax/sound/midi/dssi/DSSISynthesizer.java", "status": "modified", "additions": 12, "deletions": 15, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fsound%2Fmidi%2Fdssi%2FDSSISynthesizer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fsound%2Fmidi%2Fdssi%2FDSSISynthesizer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fsound%2Fmidi%2Fdssi%2FDSSISynthesizer.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -1,5 +1,5 @@\n /* DSSISynthesizer.java -- DSSI Synthesizer Provider\n-   Copyright (C) 2005, 2006 Free Software Foundation, Inc.\n+   Copyright (C) 2005, 2006, 2012 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -97,8 +97,8 @@ class DSSISoundbank implements Soundbank\n   {\n     private String name;\n     private String description;\n-    private List instruments = new ArrayList();\n-    private List resources = new ArrayList();\n+    private List<Instrument> instruments = new ArrayList<Instrument>();\n+    private List<SoundbankResource> resources = new ArrayList<SoundbankResource>();\n     private String vendor;\n     private String version;\n \n@@ -147,27 +147,25 @@ public String getDescription()\n      */\n     public SoundbankResource[] getResources()\n     {\n-      return (SoundbankResource[])\n-        resources.toArray(new SoundbankResource[resources.size()]);\n+      return resources.toArray(new SoundbankResource[resources.size()]);\n     }\n \n     /* @see javax.sound.midi.Soundbank#getInstruments()\n      */\n     public Instrument[] getInstruments()\n     {\n-      return (Instrument[])\n-        instruments.toArray(new Instrument[instruments.size()]);\n+      return instruments.toArray(new Instrument[instruments.size()]);\n     }\n \n     /* @see javax.sound.midi.Soundbank#getInstrument(javax.sound.midi.Patch)\n      */\n     public Instrument getInstrument(Patch patch)\n     {\n-      Iterator itr = instruments.iterator();\n+      Iterator<Instrument> itr = instruments.iterator();\n \n       while (itr.hasNext())\n       {\n-        Instrument i = (Instrument) itr.next();\n+        Instrument i = itr.next();\n         if (i.getPatch().equals(patch))\n           return i;\n       }\n@@ -490,7 +488,7 @@ public boolean getSolo()\n   MidiChannel channels[] = new MidiChannel[16];\n \n   // The list of known soundbanks, and the default one.\n-  List soundbanks = new ArrayList();\n+  List<Soundbank> soundbanks = new ArrayList<Soundbank>();\n   DSSISoundbank defaultSoundbank;\n \n   /**\n@@ -616,17 +614,16 @@ public Soundbank getDefaultSoundbank()\n    */\n   public Instrument[] getAvailableInstruments()\n   {\n-    List instruments = new ArrayList();\n-    Iterator itr = soundbanks.iterator();\n+    List<Instrument> instruments = new ArrayList<Instrument>();\n+    Iterator<Soundbank> itr = soundbanks.iterator();\n     while (itr.hasNext())\n     {\n-      Soundbank sb = (Soundbank) itr.next();\n+      Soundbank sb = itr.next();\n       Instrument ins[] = sb.getInstruments();\n       for (int i = 0; i < ins.length; i++)\n         instruments.add(ins[i]);\n     }\n-    return (Instrument[])\n-      instruments.toArray(new Instrument[instruments.size()]);\n+    return instruments.toArray(new Instrument[instruments.size()]);\n   }\n \n   /* (non-Javadoc)"}, {"sha": "06f29af0f55317b17427f82584a2c35021bf8b34", "filename": "libjava/classpath/gnu/javax/sound/midi/file/MidiFileReader.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fsound%2Fmidi%2Ffile%2FMidiFileReader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fsound%2Fmidi%2Ffile%2FMidiFileReader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fsound%2Fmidi%2Ffile%2FMidiFileReader.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -1,5 +1,5 @@\n /* MidiFileReader.java -- Read MIDI files.\n-   Copyright (C) 2006 Free Software Foundation, Inc.\n+   Copyright (C) 2006, 2012 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -198,7 +198,7 @@ public Sequence getSequence(InputStream is) throws InvalidMidiDataException,\n         int Mtrk = din.readInt();\n         if (Mtrk != 0x4d54726b)\n           throw new InvalidMidiDataException(\"Invalid MIDI track header.\");\n-        int length = din.readInt();\n+        din.readInt(); // length\n \n         int runningStatus = -1;\n         int click = 0;"}, {"sha": "f3194cb1ed45c98f689ff7c4903251db00e309dc", "filename": "libjava/classpath/gnu/javax/sound/midi/file/MidiFileWriter.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fsound%2Fmidi%2Ffile%2FMidiFileWriter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fsound%2Fmidi%2Ffile%2FMidiFileWriter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fsound%2Fmidi%2Ffile%2FMidiFileWriter.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -1,5 +1,5 @@\n /* MidiFileWriter.java -- Write MIDI files.\n-   Copyright (C) 2006 Free Software Foundation, Inc.\n+   Copyright (C) 2006, 2012 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -118,7 +118,7 @@ public int write(Sequence in, int fileType, OutputStream out)\n    */\n   private int computeTrackLength(Track track, MidiDataOutputStream dos)\n   {\n-    int count = 0, length = 0, i = 0, eventCount = track.size();\n+    int length = 0, i = 0, eventCount = track.size();\n     long ptick = 0;\n     while (i < eventCount)\n       {"}, {"sha": "f03bc4790adcaae9b897a077e8900a8c332aaf5d", "filename": "libjava/classpath/gnu/javax/sound/sampled/WAV/WAVReader.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fsound%2Fsampled%2FWAV%2FWAVReader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fsound%2Fsampled%2FWAV%2FWAVReader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fsound%2Fsampled%2FWAV%2FWAVReader.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -1,5 +1,5 @@\n /* WAVReader.java -- Read WAV files.\n-   Copyright (C) 2006 Free Software Foundation, Inc.\n+   Copyright (C) 2006, 2012 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -128,7 +128,7 @@ public AudioFileFormat getAudioFileFormat(InputStream in)\n     boolean foundFmt = false;\n     boolean foundData = false;\n \n-    short compressionCode = 0, numberChannels = 0, blockAlign = 0, bitsPerSample = 0;\n+    short compressionCode = 0, numberChannels = 0, bitsPerSample = 0;\n     long sampleRate = 0, bytesPerSecond = 0;\n     long chunkLength = 0;\n \n@@ -144,7 +144,7 @@ public AudioFileFormat getAudioFileFormat(InputStream in)\n             numberChannels = readUnsignedShortLE(din);\n             sampleRate = readUnsignedIntLE(din);\n             bytesPerSecond = readUnsignedIntLE(din);\n-            blockAlign = readUnsignedShortLE(din);\n+            readUnsignedShortLE(din); // blockAlign\n             bitsPerSample = readUnsignedShortLE(din);\n             din.skip(chunkLength - 16);\n             break;"}, {"sha": "b2ca7cd4b4c553072d570ae6616e5e4d5a8acaa9", "filename": "libjava/classpath/gnu/javax/sound/sampled/gstreamer/GStreamerMixer.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fsound%2Fsampled%2Fgstreamer%2FGStreamerMixer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fsound%2Fsampled%2Fgstreamer%2FGStreamerMixer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fsound%2Fsampled%2Fgstreamer%2FGStreamerMixer.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -1,5 +1,5 @@\n /* GStreamerMixer.java -- Mixer implementation.\n- Copyright (C) 2007 Free Software Foundation, Inc.\n+ Copyright (C) 2007, 2012 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -92,7 +92,7 @@ public Line getLine(Line.Info info)\n     // and see if there is one matching the given line\n     // if the format comes from the gstreamer backend\n     // gstreamer will be able to deal with it\n-    Class clazz = info.getLineClass();\n+    Class<?> clazz = info.getLineClass();\n     DataLine.Info _info = (DataLine.Info) info;\n \n     if (clazz == SourceDataLine.class)"}, {"sha": "3ea423410a5c702d7e6d287c43484ca1c40cb350", "filename": "libjava/classpath/gnu/xml/transform/SAXSerializer.java", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FSAXSerializer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FSAXSerializer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FSAXSerializer.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -200,7 +200,8 @@ public String getValue(String uri, String localName)\n \n   public String getValue(String qName)\n   {\n-    return attrs.getNamedItem(qName).getNodeValue();\n+    Attr attr = (Attr) attrs.getNamedItem(qName);\n+    return (attr == null) ? null :  attr.getNodeValue();\n   }\n \n   void serialize(Node node, ContentHandler ch, LexicalHandler lh)"}, {"sha": "138e477b450d3dd2c4dd0a32afe6f2b215494469", "filename": "libjava/classpath/include/Makefile.in", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Finclude%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Finclude%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Finclude%2FMakefile.in?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -40,9 +40,6 @@ DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \\\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n am__aclocal_m4_deps = $(top_srcdir)/../../config/depstand.m4 \\\n \t$(top_srcdir)/../../config/lead-dot.m4 \\\n-\t$(top_srcdir)/../../config/lib-ld.m4 \\\n-\t$(top_srcdir)/../../config/lib-link.m4 \\\n-\t$(top_srcdir)/../../config/lib-prefix.m4 \\\n \t$(top_srcdir)/../../config/multi.m4 \\\n \t$(top_srcdir)/../../config/no-executables.m4 \\\n \t$(top_srcdir)/../../config/override.m4 \\\n@@ -61,7 +58,9 @@ am__aclocal_m4_deps = $(top_srcdir)/../../config/depstand.m4 \\\n \t$(top_srcdir)/m4/ax_create_stdint_h.m4 \\\n \t$(top_srcdir)/m4/ax_func_which_gethostbyname_r.m4 \\\n \t$(top_srcdir)/m4/gcc_attribute.m4 $(top_srcdir)/m4/iconv.m4 \\\n-\t$(top_srcdir)/m4/pkg.m4 $(top_srcdir)/configure.ac\n+\t$(top_srcdir)/m4/lib-ld.m4 $(top_srcdir)/m4/lib-link.m4 \\\n+\t$(top_srcdir)/m4/lib-prefix.m4 $(top_srcdir)/m4/pkg.m4 \\\n+\t$(top_srcdir)/configure.ac\n am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n \t$(ACLOCAL_M4)\n mkinstalldirs = $(SHELL) $(top_srcdir)/../../mkinstalldirs\n@@ -169,6 +168,7 @@ MAKEINFO = @MAKEINFO@\n MKDIR = @MKDIR@\n MKDIR_P = @MKDIR_P@\n MOC = @MOC@\n+MOC4 = @MOC4@\n MOZILLA_CFLAGS = @MOZILLA_CFLAGS@\n MOZILLA_LIBS = @MOZILLA_LIBS@\n NM = @NM@"}, {"sha": "6781b987bdbcbc23efe6bbe1654a1e3637b9af07", "filename": "libjava/classpath/install-sh", "status": "modified", "additions": 11, "deletions": 18, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Finstall-sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Finstall-sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Finstall-sh?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -1,7 +1,7 @@\n #!/bin/sh\n # install - install a program, script, or datafile\n \n-scriptversion=2011-01-19.21; # UTC\n+scriptversion=2009-04-28.21; # UTC\n \n # This originates from X11R5 (mit/util/scripts/install.sh), which was\n # later released in X11R6 (xc/config/util/install.sh) with the\n@@ -156,10 +156,6 @@ while test $# -ne 0; do\n     -s) stripcmd=$stripprog;;\n \n     -t) dst_arg=$2\n-\t# Protect names problematic for `test' and other utilities.\n-\tcase $dst_arg in\n-\t  -* | [=\\(\\)!]) dst_arg=./$dst_arg;;\n-\tesac\n \tshift;;\n \n     -T) no_target_directory=true;;\n@@ -190,10 +186,6 @@ if test $# -ne 0 && test -z \"$dir_arg$dst_arg\"; then\n     fi\n     shift # arg\n     dst_arg=$arg\n-    # Protect names problematic for `test' and other utilities.\n-    case $dst_arg in\n-      -* | [=\\(\\)!]) dst_arg=./$dst_arg;;\n-    esac\n   done\n fi\n \n@@ -208,11 +200,7 @@ if test $# -eq 0; then\n fi\n \n if test -z \"$dir_arg\"; then\n-  do_exit='(exit $ret); exit $ret'\n-  trap \"ret=129; $do_exit\" 1\n-  trap \"ret=130; $do_exit\" 2\n-  trap \"ret=141; $do_exit\" 13\n-  trap \"ret=143; $do_exit\" 15\n+  trap '(exit $?); exit' 1 2 13 15\n \n   # Set umask so as not to create temps with too-generous modes.\n   # However, 'strip' requires both read and write access to temps.\n@@ -240,9 +228,9 @@ fi\n \n for src\n do\n-  # Protect names problematic for `test' and other utilities.\n+  # Protect names starting with `-'.\n   case $src in\n-    -* | [=\\(\\)!]) src=./$src;;\n+    -*) src=./$src;;\n   esac\n \n   if test -n \"$dir_arg\"; then\n@@ -264,7 +252,12 @@ do\n       echo \"$0: no destination specified.\" >&2\n       exit 1\n     fi\n+\n     dst=$dst_arg\n+    # Protect names starting with `-'.\n+    case $dst in\n+      -*) dst=./$dst;;\n+    esac\n \n     # If destination is a directory, append the input filename; won't work\n     # if double slashes aren't ignored.\n@@ -392,7 +385,7 @@ do\n \n       case $dstdir in\n \t/*) prefix='/';;\n-\t[-=\\(\\)!]*) prefix='./';;\n+\t-*) prefix='./';;\n \t*)  prefix='';;\n       esac\n \n@@ -410,7 +403,7 @@ do\n \n       for d\n       do\n-\ttest X\"$d\" = X && continue\n+\ttest -z \"$d\" && continue\n \n \tprefix=$prefix$d\n \tif test -d \"$prefix\"; then"}, {"sha": "51f914f288f8e2d6575f995c9fd153a5204930d7", "filename": "libjava/classpath/java/awt/geom/Area.java", "status": "modified", "additions": 106, "deletions": 120, "changes": 226, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjava%2Fawt%2Fgeom%2FArea.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjava%2Fawt%2Fgeom%2FArea.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Fawt%2Fgeom%2FArea.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -91,18 +91,18 @@ public class Area implements Shape, Cloneable\n    * Segment vectors containing solid areas and holes\n    * This is package-private to avoid an accessor method.\n    */\n-  Vector solids;\n+  Vector<Segment> solids;\n \n   /**\n    * Segment vectors containing solid areas and holes\n    * This is package-private to avoid an accessor method.\n    */\n-  Vector holes;\n+  Vector<Segment> holes;\n \n   /**\n    * Vector (temporary) storing curve-curve intersections\n    */\n-  private Vector cc_intersections;\n+  private Vector<double[]> ccIntersections;\n \n   /**\n    * Winding rule WIND_NON_ZERO used, after construction,\n@@ -115,8 +115,8 @@ public class Area implements Shape, Cloneable\n    */\n   public Area()\n   {\n-    solids = new Vector();\n-    holes = new Vector();\n+    solids = new Vector<Segment>();\n+    holes = new Vector<Segment>();\n   }\n \n   /**\n@@ -135,15 +135,15 @@ public Area(Shape s)\n   {\n     this();\n \n-    Vector p = makeSegment(s);\n+    Vector<Segment> p = makeSegment(s);\n \n     // empty path\n     if (p == null)\n       return;\n \n     // delete empty paths\n     for (int i = 0; i < p.size(); i++)\n-      if (((Segment) p.elementAt(i)).getSignedArea() == 0.0)\n+      if (p.elementAt(i).getSignedArea() == 0.0)\n         p.remove(i--);\n \n     /*\n@@ -157,12 +157,11 @@ public Area(Shape s)\n      * 4: Repeat (3) until no segments remain in the list\n      * 5: Remove redundant paths and sort into solids and holes\n      */\n-    Vector paths = new Vector();\n     Segment v;\n \n     for (int i = 0; i < p.size(); i++)\n       {\n-        Segment path = (Segment) p.elementAt(i);\n+        Segment path = p.elementAt(i);\n         createNodesSelf(path);\n       }\n \n@@ -171,18 +170,18 @@ public Area(Shape s)\n         for (int i = 0; i < p.size() - 1; i++)\n           for (int j = i + 1; j < p.size(); j++)\n             {\n-              Segment path1 = (Segment) p.elementAt(i);\n-              Segment path2 = (Segment) p.elementAt(j);\n+              Segment path1 = p.elementAt(i);\n+              Segment path2 = p.elementAt(j);\n               createNodes(path1, path2);\n             }\n       }\n \n     // we have intersecting points.\n-    Vector segments = new Vector();\n+    Vector<Segment> segments = new Vector<Segment>();\n \n     for (int i = 0; i < p.size(); i++)\n       {\n-        Segment path = v = (Segment) p.elementAt(i);\n+        Segment path = v = p.elementAt(i);\n         do\n           {\n             segments.add(v);\n@@ -191,7 +190,7 @@ public Area(Shape s)\n         while (v != path);\n       }\n \n-    paths = weilerAtherton(segments);\n+    Vector<Segment> paths = weilerAtherton(segments);\n     deleteRedundantPaths(paths);\n   }\n \n@@ -208,36 +207,34 @@ public void add(Area area)\n \n     Area B = (Area) area.clone();\n \n-    Vector pathA = new Vector();\n-    Vector pathB = new Vector();\n+    Vector<Segment> pathA = new Vector<Segment>();\n+    Vector<Segment> pathB = new Vector<Segment>();\n     pathA.addAll(solids);\n     pathA.addAll(holes);\n     pathB.addAll(B.solids);\n     pathB.addAll(B.holes);\n \n-    int nNodes = 0;\n-\n     for (int i = 0; i < pathA.size(); i++)\n       {\n-        Segment a = (Segment) pathA.elementAt(i);\n+        Segment a = pathA.elementAt(i);\n         for (int j = 0; j < pathB.size(); j++)\n           {\n-            Segment b = (Segment) pathB.elementAt(j);\n-            nNodes += createNodes(a, b);\n+            Segment b = pathB.elementAt(j);\n+            createNodes(a, b);\n           }\n       }\n \n-    Vector paths = new Vector();\n+    Vector<Segment> paths = new Vector<Segment>();\n     Segment v;\n \n     // we have intersecting points.\n-    Vector segments = new Vector();\n+    Vector<Segment> segments = new Vector<Segment>();\n \n     // In a union operation, we keep all\n     // segments of A oustide B and all B outside A\n     for (int i = 0; i < pathA.size(); i++)\n       {\n-        v = (Segment) pathA.elementAt(i);\n+        v = pathA.elementAt(i);\n         Segment path = v;\n         do\n           {\n@@ -250,7 +247,7 @@ public void add(Area area)\n \n     for (int i = 0; i < pathB.size(); i++)\n       {\n-        v = (Segment) pathB.elementAt(i);\n+        v = pathB.elementAt(i);\n         Segment path = v;\n         do\n           {\n@@ -281,7 +278,7 @@ public void subtract(Area area)\n         return;\n       }\n \n-    Vector pathA = new Vector();\n+    Vector<Segment> pathA = new Vector<Segment>();\n     Area B = (Area) area.clone();\n     pathA.addAll(solids);\n     pathA.addAll(holes);\n@@ -290,35 +287,31 @@ public void subtract(Area area)\n     setDirection(B.holes, true);\n     setDirection(B.solids, false);\n \n-    Vector pathB = new Vector();\n+    Vector<Segment> pathB = new Vector<Segment>();\n     pathB.addAll(B.solids);\n     pathB.addAll(B.holes);\n \n-    int nNodes = 0;\n-\n     // create nodes\n     for (int i = 0; i < pathA.size(); i++)\n       {\n-        Segment a = (Segment) pathA.elementAt(i);\n+        Segment a = pathA.elementAt(i);\n         for (int j = 0; j < pathB.size(); j++)\n           {\n-            Segment b = (Segment) pathB.elementAt(j);\n-            nNodes += createNodes(a, b);\n+            Segment b = pathB.elementAt(j);\n+            createNodes(a, b);\n           }\n       }\n \n-    Vector paths = new Vector();\n-\n     // we have intersecting points.\n-    Vector segments = new Vector();\n+    Vector<Segment> segments = new Vector<Segment>();\n \n     // In a subtraction operation, we keep all\n     // segments of A oustide B and all B within A\n     // We outsideness-test only one segment in each path\n     // and the segments before and after any node\n     for (int i = 0; i < pathA.size(); i++)\n       {\n-        Segment v = (Segment) pathA.elementAt(i);\n+        Segment v = pathA.elementAt(i);\n         Segment path = v;\n         if (v.isSegmentOutside(area) && v.node == null)\n           segments.add(v);\n@@ -357,7 +350,7 @@ public void subtract(Area area)\n         while (v != path);\n       }\n \n-    paths = weilerAtherton(segments);\n+    Vector<Segment> paths = weilerAtherton(segments);\n     deleteRedundantPaths(paths);\n   }\n \n@@ -376,32 +369,28 @@ public void intersect(Area area)\n     if (equals(area))\n       return;\n \n-    Vector pathA = new Vector();\n+    Vector<Segment> pathA = new Vector<Segment>();\n     Area B = (Area) area.clone();\n     pathA.addAll(solids);\n     pathA.addAll(holes);\n \n-    Vector pathB = new Vector();\n+    Vector<Segment> pathB = new Vector<Segment>();\n     pathB.addAll(B.solids);\n     pathB.addAll(B.holes);\n \n-    int nNodes = 0;\n-\n     // create nodes\n     for (int i = 0; i < pathA.size(); i++)\n       {\n-        Segment a = (Segment) pathA.elementAt(i);\n+        Segment a = pathA.elementAt(i);\n         for (int j = 0; j < pathB.size(); j++)\n           {\n-            Segment b = (Segment) pathB.elementAt(j);\n-            nNodes += createNodes(a, b);\n+            Segment b = pathB.elementAt(j);\n+            createNodes(a, b);\n           }\n       }\n \n-    Vector paths = new Vector();\n-\n     // we have intersecting points.\n-    Vector segments = new Vector();\n+    Vector<Segment> segments = new Vector<Segment>();\n \n     // In an intersection operation, we keep all\n     // segments of A within B and all B within A\n@@ -410,7 +399,7 @@ public void intersect(Area area)\n     // and the segments before and after any node\n     for (int i = 0; i < pathA.size(); i++)\n       {\n-        Segment v = (Segment) pathA.elementAt(i);\n+        Segment v = pathA.elementAt(i);\n         Segment path = v;\n         if (! v.isSegmentOutside(area) && v.node == null)\n           segments.add(v);\n@@ -430,7 +419,7 @@ public void intersect(Area area)\n \n     for (int i = 0; i < pathB.size(); i++)\n       {\n-        Segment v = (Segment) pathB.elementAt(i);\n+        Segment v = pathB.elementAt(i);\n         Segment path = v;\n         if (! v.isSegmentOutside(this) && v.node == null)\n           segments.add(v);\n@@ -449,7 +438,7 @@ public void intersect(Area area)\n         while (v != path);\n       }\n \n-    paths = weilerAtherton(segments);\n+    Vector<Segment> paths = weilerAtherton(segments);\n     deleteRedundantPaths(paths);\n   }\n \n@@ -476,10 +465,10 @@ public void exclusiveOr(Area area)\n         return;\n       }\n \n-    Vector pathA = new Vector();\n+    Vector<Segment> pathA = new Vector<Segment>();\n \n     Area B = (Area) area.clone();\n-    Vector pathB = new Vector();\n+    Vector<Segment> pathB = new Vector<Segment>();\n     pathA.addAll(solids);\n     pathA.addAll(holes);\n \n@@ -489,28 +478,25 @@ public void exclusiveOr(Area area)\n     pathB.addAll(B.solids);\n     pathB.addAll(B.holes);\n \n-    int nNodes = 0;\n-\n     for (int i = 0; i < pathA.size(); i++)\n       {\n-        Segment a = (Segment) pathA.elementAt(i);\n+        Segment a = pathA.elementAt(i);\n         for (int j = 0; j < pathB.size(); j++)\n           {\n-            Segment b = (Segment) pathB.elementAt(j);\n-            nNodes += createNodes(a, b);\n+            Segment b = pathB.elementAt(j);\n+            createNodes(a, b);\n           }\n       }\n \n-    Vector paths = new Vector();\n     Segment v;\n \n     // we have intersecting points.\n-    Vector segments = new Vector();\n+    Vector<Segment> segments = new Vector<Segment>();\n \n     // In an XOR operation, we operate on all segments\n     for (int i = 0; i < pathA.size(); i++)\n       {\n-        v = (Segment) pathA.elementAt(i);\n+        v = pathA.elementAt(i);\n         Segment path = v;\n         do\n           {\n@@ -522,7 +508,7 @@ public void exclusiveOr(Area area)\n \n     for (int i = 0; i < pathB.size(); i++)\n       {\n-        v = (Segment) pathB.elementAt(i);\n+        v = pathB.elementAt(i);\n         Segment path = v;\n         do\n           {\n@@ -532,7 +518,7 @@ public void exclusiveOr(Area area)\n         while (v != path);\n       }\n \n-    paths = weilerAtherton(segments);\n+    Vector<Segment> paths = weilerAtherton(segments);\n     deleteRedundantPaths(paths);\n   }\n \n@@ -541,8 +527,8 @@ public void exclusiveOr(Area area)\n    */\n   public void reset()\n   {\n-    solids = new Vector();\n-    holes = new Vector();\n+    solids = new Vector<Segment>();\n+    holes = new Vector<Segment>();\n   }\n \n   /**\n@@ -556,9 +542,9 @@ public boolean isEmpty()\n \n     double totalArea = 0;\n     for (int i = 0; i < solids.size(); i++)\n-      totalArea += Math.abs(((Segment) solids.elementAt(i)).getSignedArea());\n+      totalArea += Math.abs(solids.elementAt(i).getSignedArea());\n     for (int i = 0; i < holes.size(); i++)\n-      totalArea -= Math.abs(((Segment) holes.elementAt(i)).getSignedArea());\n+      totalArea -= Math.abs(holes.elementAt(i).getSignedArea());\n     if (totalArea <= EPSILON)\n       return true;\n \n@@ -572,10 +558,10 @@ public boolean isEmpty()\n   public boolean isPolygonal()\n   {\n     for (int i = 0; i < holes.size(); i++)\n-      if (! ((Segment) holes.elementAt(i)).isPolygonal())\n+      if (!holes.elementAt(i).isPolygonal())\n         return false;\n     for (int i = 0; i < solids.size(); i++)\n-      if (! ((Segment) solids.elementAt(i)).isPolygonal())\n+      if (!solids.elementAt(i).isPolygonal())\n         return false;\n     return true;\n   }\n@@ -599,7 +585,7 @@ public boolean isRectangular()\n     if (holes.size() != 0 || solids.size() != 1)\n       return false;\n \n-    Segment path = (Segment) solids.elementAt(0);\n+    Segment path = solids.elementAt(0);\n     if (! path.isPolygonal())\n       return false;\n \n@@ -657,12 +643,12 @@ public Rectangle2D getBounds2D()\n     double xmax;\n     double ymin;\n     double ymax;\n-    xmin = xmax = ((Segment) solids.elementAt(0)).P1.getX();\n-    ymin = ymax = ((Segment) solids.elementAt(0)).P1.getY();\n+    xmin = xmax = solids.elementAt(0).P1.getX();\n+    ymin = ymax = solids.elementAt(0).P1.getY();\n \n     for (int path = 0; path < solids.size(); path++)\n       {\n-        Rectangle2D r = ((Segment) solids.elementAt(path)).getPathBounds();\n+        Rectangle2D r = solids.elementAt(path).getPathBounds();\n         xmin = Math.min(r.getMinX(), xmin);\n         ymin = Math.min(r.getMinY(), ymin);\n         xmax = Math.max(r.getMaxX(), xmax);\n@@ -696,9 +682,9 @@ public Object clone()\n       {\n         Area clone = new Area();\n         for (int i = 0; i < solids.size(); i++)\n-          clone.solids.add(((Segment) solids.elementAt(i)).cloneSegmentList());\n+          clone.solids.add(solids.elementAt(i).cloneSegmentList());\n         for (int i = 0; i < holes.size(); i++)\n-          clone.holes.add(((Segment) holes.elementAt(i)).cloneSegmentList());\n+          clone.holes.add(holes.elementAt(i).cloneSegmentList());\n         return clone;\n       }\n     catch (CloneNotSupportedException e)\n@@ -727,10 +713,10 @@ public boolean equals(Area area)\n         || holes.size() != area.holes.size())\n       return false;\n \n-    Vector pathA = new Vector();\n+    Vector<Segment> pathA = new Vector<Segment>();\n     pathA.addAll(solids);\n     pathA.addAll(holes);\n-    Vector pathB = new Vector();\n+    Vector<Segment> pathB = new Vector<Segment>();\n     pathB.addAll(area.solids);\n     pathB.addAll(area.holes);\n \n@@ -741,8 +727,8 @@ public boolean equals(Area area)\n       {\n         for (int j = 0; j < nPaths; j++)\n           {\n-            Segment p1 = (Segment) pathA.elementAt(i);\n-            Segment p2 = (Segment) pathB.elementAt(j);\n+            Segment p1 = pathA.elementAt(i);\n+            Segment p2 = pathB.elementAt(j);\n             if (! match[0][i] && ! match[1][j])\n               if (p1.pathEquals(p2))\n                 match[0][i] = match[1][j] = true;\n@@ -763,9 +749,9 @@ public boolean equals(Area area)\n   public void transform(AffineTransform at)\n   {\n     for (int i = 0; i < solids.size(); i++)\n-      ((Segment) solids.elementAt(i)).transformSegmentList(at);\n+      solids.elementAt(i).transformSegmentList(at);\n     for (int i = 0; i < holes.size(); i++)\n-      ((Segment) holes.elementAt(i)).transformSegmentList(at);\n+      holes.elementAt(i).transformSegmentList(at);\n \n     // Note that the orientation is not invariant under inversion\n     if ((at.getType() & AffineTransform.TYPE_FLIP) != 0)\n@@ -800,11 +786,11 @@ public boolean contains(double x, double y)\n   {\n     int n = 0;\n     for (int i = 0; i < solids.size(); i++)\n-      if (((Segment) solids.elementAt(i)).contains(x, y))\n+      if (solids.elementAt(i).contains(x, y))\n         n++;\n \n     for (int i = 0; i < holes.size(); i++)\n-      if (((Segment) holes.elementAt(i)).contains(x, y))\n+      if (holes.elementAt(i).contains(x, y))\n         n--;\n \n     return (n != 0);\n@@ -854,7 +840,7 @@ public boolean contains(double x, double y, double w, double h)\n           {\n             Segment v;\n             Segment start;\n-            start = v = (Segment) solids.elementAt(path);\n+            start = v = solids.elementAt(path);\n             do\n               {\n                 if (l[i].hasIntersections(v))\n@@ -867,7 +853,7 @@ public boolean contains(double x, double y, double w, double h)\n           {\n             Segment v;\n             Segment start;\n-            start = v = (Segment) holes.elementAt(path);\n+            start = v = holes.elementAt(path);\n             do\n               {\n                 if (l[i].hasIntersections(v))\n@@ -886,7 +872,7 @@ public boolean contains(double x, double y, double w, double h)\n     // but encloses a hole?\n     Rectangle2D r = new Rectangle2D.Double(x, y, w, h);\n     for (int path = 0; path < holes.size(); path++)\n-      if (! ((Segment) holes.elementAt(path)).isSegmentOutside(r))\n+      if (! holes.elementAt(path).isSegmentOutside(r))\n         return false;\n \n     return true;\n@@ -938,7 +924,7 @@ public boolean intersects(double x, double y, double w, double h)\n           {\n             Segment v;\n             Segment start;\n-            start = v = (Segment) solids.elementAt(path);\n+            start = v = solids.elementAt(path);\n             do\n               {\n                 if (l[i].hasIntersections(v))\n@@ -951,7 +937,7 @@ public boolean intersects(double x, double y, double w, double h)\n           {\n             Segment v;\n             Segment start;\n-            start = v = (Segment) holes.elementAt(path);\n+            start = v = holes.elementAt(path);\n             do\n               {\n                 if (l[i].hasIntersections(v))\n@@ -967,7 +953,7 @@ public boolean intersects(double x, double y, double w, double h)\n       return true;\n \n     // What if the rectangle encloses the whole shape?\n-    Point2D p = ((Segment) solids.elementAt(0)).getMidPoint();\n+    Point2D p = solids.elementAt(0).getMidPoint();\n     if ((new Rectangle2D.Double(x, y, w, h)).contains(p))\n       return true;\n     return false;\n@@ -1020,7 +1006,7 @@ public PathIterator getPathIterator(AffineTransform at, double flatness)\n    */\n   private class AreaIterator implements PathIterator\n   {\n-    private Vector segments;\n+    private Vector<IteratorSegment> segments;\n     private int index;\n     private AffineTransform at;\n \n@@ -1045,14 +1031,14 @@ public AreaIterator(AffineTransform at)\n     {\n       this.at = at;\n       index = 0;\n-      segments = new Vector();\n-      Vector allpaths = new Vector();\n+      segments = new Vector<IteratorSegment>();\n+      Vector<Segment> allpaths = new Vector<Segment>();\n       allpaths.addAll(solids);\n       allpaths.addAll(holes);\n \n       for (int i = 0; i < allpaths.size(); i++)\n         {\n-          Segment v = (Segment) allpaths.elementAt(i);\n+          Segment v = allpaths.elementAt(i);\n           Segment start = v;\n \n           IteratorSegment is = new IteratorSegment();\n@@ -1078,7 +1064,7 @@ public AreaIterator(AffineTransform at)\n \n     public int currentSegment(double[] coords)\n     {\n-      IteratorSegment s = (IteratorSegment) segments.elementAt(index);\n+      IteratorSegment s = segments.elementAt(index);\n       if (at != null)\n         at.transform(s.coords, 0, coords, 0, 3);\n       else\n@@ -1089,7 +1075,7 @@ public int currentSegment(double[] coords)\n \n     public int currentSegment(float[] coords)\n     {\n-      IteratorSegment s = (IteratorSegment) segments.elementAt(index);\n+      IteratorSegment s = segments.elementAt(index);\n       double[] d = new double[6];\n       if (at != null)\n         {\n@@ -1129,13 +1115,13 @@ public void next()\n    *\n    * Returns a Vector of the resulting paths.\n    */\n-  private Vector weilerAtherton(Vector segments)\n+  private Vector<Segment> weilerAtherton(Vector<Segment> segments)\n   {\n-    Vector paths = new Vector();\n+    Vector<Segment> paths = new Vector<Segment>();\n     while (segments.size() > 0)\n       {\n         // Iterate over the path\n-        Segment start = (Segment) segments.elementAt(0);\n+        Segment start = segments.elementAt(0);\n         Segment s = start;\n         do\n           {\n@@ -1252,7 +1238,7 @@ private void recursiveSubdivide(CubicCurve2D c1, CubicCurve2D c2,\n         double[] temp = new double[2];\n         temp[0] = t1 + s * w1;\n         temp[1] = t2 + t * w1;\n-        cc_intersections.add(temp);\n+        ccIntersections.add(temp);\n         return;\n       }\n \n@@ -1328,28 +1314,28 @@ Intersection[] cubicCubicIntersect(CubicSegment curve1, CubicSegment curve2)\n     if (! r1.intersects(r2))\n       return null;\n \n-    cc_intersections = new Vector();\n+    ccIntersections = new Vector<double[]>();\n     recursiveSubdivide(curve1.getCubicCurve2D(), curve2.getCubicCurve2D(),\n                        getRecursionDepth(curve1), getRecursionDepth(curve2),\n                        0.0, 0.0, 1.0, 1.0);\n \n-    if (cc_intersections.size() == 0)\n+    if (ccIntersections.size() == 0)\n       return null;\n \n-    Intersection[] results = new Intersection[cc_intersections.size()];\n-    for (int i = 0; i < cc_intersections.size(); i++)\n+    Intersection[] results = new Intersection[ccIntersections.size()];\n+    for (int i = 0; i < ccIntersections.size(); i++)\n       {\n-        double[] temp = (double[]) cc_intersections.elementAt(i);\n+        double[] temp = ccIntersections.elementAt(i);\n         results[i] = new Intersection(curve1.evaluatePoint(temp[0]), temp[0],\n                                       temp[1]);\n       }\n-    cc_intersections = null;\n+    ccIntersections = null;\n     return (results);\n   }\n \n   /**\n    * Returns the intersections between a line and a quadratic bezier\n-   * Or null if no intersections are found1\n+   * Or null if no intersections are found.\n    * This is done through combining the line's equation with the\n    * parametric form of the Bezier and solving the resulting quadratic.\n    * This is package-private to avoid an accessor method.\n@@ -1622,9 +1608,9 @@ boolean pointEquals(Point2D a, Point2D b)\n    * Helper method\n    * Turns a shape into a Vector of Segments\n    */\n-  private Vector makeSegment(Shape s)\n+  private Vector<Segment> makeSegment(Shape s)\n   {\n-    Vector paths = new Vector();\n+    Vector<Segment> paths = new Vector<Segment>();\n     PathIterator pi = s.getPathIterator(null);\n     double[] coords = new double[6];\n     Segment subpath = null;\n@@ -1786,7 +1772,7 @@ private int createNodes(Segment A, Segment B)\n       }\n     while (a != A); // until one wrap.\n \n-    return (nNodes);\n+    return nNodes;\n   }\n \n   /**\n@@ -1824,7 +1810,7 @@ private int createNodesSelf(Segment A)\n    * solid areas) Clears any nodes. Sorts the remaining paths into solids\n    * and holes, sets their orientation and sets the solids and holes lists.\n    */\n-  private void deleteRedundantPaths(Vector paths)\n+  private void deleteRedundantPaths(Vector<Segment> paths)\n   {\n     int npaths = paths.size();\n \n@@ -1836,19 +1822,19 @@ private void deleteRedundantPaths(Vector paths)\n     neg = ((windingRule == PathIterator.WIND_NON_ZERO) ? -1 : 1);\n \n     for (int i = 0; i < npaths; i++)\n-      bb[i] = ((Segment) paths.elementAt(i)).getPathBounds();\n+      bb[i] = paths.elementAt(i).getPathBounds();\n \n     // Find which path contains which, assign winding numbers\n     for (int i = 0; i < npaths; i++)\n       {\n-        Segment pathA = (Segment) paths.elementAt(i);\n+        Segment pathA = paths.elementAt(i);\n         pathA.nullNodes(); // remove any now-redundant nodes, in case.\n         int windingA = pathA.hasClockwiseOrientation() ? 1 : neg;\n \n         for (int j = 0; j < npaths; j++)\n           if (i != j)\n             {\n-              Segment pathB = (Segment) paths.elementAt(j);\n+              Segment pathB = paths.elementAt(j);\n \n               // A contains B\n               if (bb[i].intersects(bb[j]))\n@@ -1876,8 +1862,8 @@ private void deleteRedundantPaths(Vector paths)\n         windingNumbers[i][1] = contains[i][i];\n       }\n \n-    Vector solids = new Vector();\n-    Vector holes = new Vector();\n+    Vector<Segment> solids = new Vector<Segment>();\n+    Vector<Segment> holes = new Vector<Segment>();\n \n     if (windingRule == PathIterator.WIND_NON_ZERO)\n       {\n@@ -1913,12 +1899,12 @@ else if ((windingNumbers[i][0] & 1) == 1)\n    * @param clockwise gives the direction,\n    * true = clockwise, false = counter-clockwise\n    */\n-  private void setDirection(Vector paths, boolean clockwise)\n+  private void setDirection(Vector<Segment> paths, boolean clockwise)\n   {\n     Segment v;\n     for (int i = 0; i < paths.size(); i++)\n       {\n-        v = (Segment) paths.elementAt(i);\n+        v = paths.elementAt(i);\n         if (clockwise != v.hasClockwiseOrientation())\n           v.reverseAll();\n       }\n@@ -2157,7 +2143,7 @@ boolean isPolygonal()\n      */\n     Segment cloneSegmentList() throws CloneNotSupportedException\n     {\n-      Vector list = new Vector();\n+      Vector<Segment> list = new Vector<Segment>();\n       Segment v = next;\n \n       while (v != this)\n@@ -2170,7 +2156,7 @@ Segment cloneSegmentList() throws CloneNotSupportedException\n       v = clone;\n       for (int i = 0; i < list.size(); i++)\n         {\n-          clone.next = (Segment) ((Segment) list.elementAt(i)).clone();\n+          clone.next = (Segment) list.elementAt(i).clone();\n           clone = clone.next;\n         }\n       clone.next = v;\n@@ -2209,7 +2195,7 @@ int createNode(Segment b, Intersection i)\n      */\n     protected int createNodes(Segment b, Intersection[] x)\n     {\n-      Vector v = new Vector();\n+      Vector<Intersection> v = new Vector<Intersection>();\n       for (int i = 0; i < x.length; i++)\n         {\n           Point2D p = x[i].p;\n@@ -2222,7 +2208,7 @@ protected int createNodes(Segment b, Intersection[] x)\n       Intersection[] A = new Intersection[nNodes];\n       Intersection[] B = new Intersection[nNodes];\n       for (int i = 0; i < nNodes; i++)\n-        A[i] = B[i] = (Intersection) v.elementAt(i);\n+        A[i] = B[i] = v.elementAt(i);\n \n       // Create two lists sorted by the parameter\n       // Bubble sort, OK I suppose, since the number of intersections"}, {"sha": "bafafe400a90778fa351715309932ef9cf07b8b4", "filename": "libjava/classpath/java/beans/XMLDecoder.java", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjava%2Fbeans%2FXMLDecoder.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjava%2Fbeans%2FXMLDecoder.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Fbeans%2FXMLDecoder.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -104,6 +104,7 @@\n  * @status updated to 1.5\n  */\n public class XMLDecoder\n+  implements AutoCloseable\n {\n         private Object owner;\n "}, {"sha": "894e4b873c4e019c64d1f373e8b3810c20836f7d", "filename": "libjava/classpath/java/beans/XMLEncoder.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjava%2Fbeans%2FXMLEncoder.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjava%2Fbeans%2FXMLEncoder.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Fbeans%2FXMLEncoder.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -50,7 +50,9 @@\n  * @author Robert Schuster (robertschuster@fsfe.org)\n  * @since 1.4\n  */\n-public class XMLEncoder extends Encoder\n+public class XMLEncoder\n+  extends Encoder\n+  implements AutoCloseable\n {\n   Object owner;\n "}, {"sha": "f5f808381aa964ea422cbd1fa86bbfa57d6a53ba", "filename": "libjava/classpath/java/io/Closeable.java", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjava%2Fio%2FCloseable.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjava%2Fio%2FCloseable.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Fio%2FCloseable.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -48,6 +48,7 @@\n  * @since 1.5\n  */\n public interface Closeable\n+  extends AutoCloseable\n {\n \n   /**"}, {"sha": "071f67d90314ffd0d7b01c86a647eee622ba8e8a", "filename": "libjava/classpath/java/io/ObjectInput.java", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjava%2Fio%2FObjectInput.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjava%2Fio%2FObjectInput.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Fio%2FObjectInput.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -48,7 +48,8 @@\n   *\n   * @see DataInput\n   */\n-public interface ObjectInput extends DataInput\n+public interface ObjectInput\n+  extends DataInput, AutoCloseable\n {\n   /**\n     * This method returns the number of bytes that can be read without"}, {"sha": "657072d5a307733cb125c81fa74054df67d3c01d", "filename": "libjava/classpath/java/io/ObjectInputStream.java", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjava%2Fio%2FObjectInputStream.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjava%2Fio%2FObjectInputStream.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Fio%2FObjectInputStream.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -529,12 +529,13 @@ private Object parseContent(byte marker, boolean shared)\n            if (dump)\n              dumpElementln(\"ENUM=\");\n            ObjectStreamClass osc = (ObjectStreamClass) readObject();\n+\t   int enumHandle = assignNewHandle(null, shared);\n            String constantName = (String) readObject();\n            if (dump)\n              dumpElementln(\"CONSTANT NAME = \" + constantName);\n            Class clazz = osc.forClass();\n            Enum instance = Enum.valueOf(clazz, constantName);\n-           assignNewHandle(instance,shared);\n+\t   rememberHandle(instance, shared, enumHandle);\n            ret_val = instance;\n            break;\n          }"}, {"sha": "4ec6c6f076820cbdeb94d0024438a77c41742860", "filename": "libjava/classpath/java/io/ObjectOutput.java", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjava%2Fio%2FObjectOutput.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjava%2Fio%2FObjectOutput.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Fio%2FObjectOutput.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -48,7 +48,8 @@\n   *\n   * @see DataOutput\n   */\n-public interface ObjectOutput extends DataOutput\n+public interface ObjectOutput\n+  extends DataOutput, AutoCloseable\n {\n   /**\n     * This method writes the specified byte to the output stream."}, {"sha": "cf953f4498bf862183c28690d001b63d8f0fe80e", "filename": "libjava/classpath/java/lang/AssertionError.java", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjava%2Flang%2FAssertionError.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjava%2Flang%2FAssertionError.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Flang%2FAssertionError.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -1,5 +1,5 @@\n /* AssertionError.java -- indication of a failed assertion\n-   Copyright (C) 2002, 2005  Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2005, 2012  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -145,4 +145,16 @@ public AssertionError(double msg)\n   {\n     super(Double.toString(msg));\n   }\n+\n+  /**\n+   * Construct an AssertionError with detail message and cause.\n+   *\n+   * @param msg Detail message.\n+   * @param cause The cause of this exception, may be null\n+   * @since 1.7\n+   */\n+  public AssertionError(String msg, Throwable cause)\n+  {\n+    super(msg, cause);\n+  }\n }"}, {"sha": "4c1ddaa320464da8247fcc95c1d21211f1c60867", "filename": "libjava/classpath/java/lang/AutoCloseable.java", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjava%2Flang%2FAutoCloseable.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjava%2Flang%2FAutoCloseable.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Flang%2FAutoCloseable.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -0,0 +1,50 @@\n+/* AutoCloseable.java -- Resource that must be closed after it is no longer\n+   used.\n+   Copyright (C) 2012  Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package java.lang;\n+\n+/**\n+ * Resource that must be closed after it is no longer used.\n+ *\n+ * @since 1.7\n+ */\n+public interface AutoCloseable\n+{\n+  void close() throws Exception;\n+}"}, {"sha": "0e4afa813bf110d6c27612416e4937f26e2be200", "filename": "libjava/classpath/java/lang/Boolean.java", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjava%2Flang%2FBoolean.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjava%2Flang%2FBoolean.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Flang%2FBoolean.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -236,6 +236,21 @@ public int compareTo(Boolean other)\n     return value == other.value ? 0 : (value ? 1 : -1);\n   }\n \n+  /**\n+   * Compares two unboxed boolean values.\n+   *\n+   * @param x First value to compare.\n+   * @param y Second value to compare.\n+   * @return 0 if both Booleans represent the same value, a positive number\n+   * if this Boolean represents true and the other false, and a negative\n+   * number otherwise.\n+   * @since 1.7\n+   */\n+  public static int compare(boolean x, boolean y)\n+  {\n+    return Boolean.valueOf(x).compareTo(Boolean.valueOf(y));\n+  }\n+\n   /**\n    * If the String argument is \"true\", ignoring case, return true.\n    * Otherwise, return false."}, {"sha": "01e0e03d2f6d33935afa21eebc6c7872d355ef4f", "filename": "libjava/classpath/java/lang/Byte.java", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjava%2Flang%2FByte.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjava%2Flang%2FByte.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Flang%2FByte.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -370,4 +370,21 @@ public int compareTo(Byte b)\n     return value - b.value;\n   }\n \n+  /**\n+   * Compares two unboxed byte values.\n+   * The result is positive if the first is greater, negative if the second\n+   * is greater, and 0 if the two are equal.\n+   *\n+   * @param x First value to compare.\n+   * @param y Second value to compare.\n+   *\n+   * @return positive int if the first value is greater, negative if the second\n+   * is greater, and 0 if the two are equal.\n+   * @since 1.7\n+   */\n+  public static int compare(byte x, byte y)\n+  {\n+    return Byte.valueOf(x).compareTo(Byte.valueOf(y));\n+  }\n+\n }"}, {"sha": "f87cde62c1eae0d53c2f31277ea53ea6083b1254", "filename": "libjava/classpath/java/lang/Character.java", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjava%2Flang%2FCharacter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjava%2Flang%2FCharacter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Flang%2FCharacter.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -4199,6 +4199,23 @@ public int compareTo(Character anotherCharacter)\n     return value - anotherCharacter.value;\n   }\n \n+  /**\n+   * Compares two unboxed char values.\n+   * The result is positive if the first is greater, negative if the second\n+   * is greater, and 0 if the two are equal.\n+   *\n+   * @param x First value to compare.\n+   * @param y Second value to compare.\n+   *\n+   * @return positive int if the first value is greater, negative if the second\n+   * is greater, and 0 if the two are equal.\n+   * @since 1.7\n+   */\n+  public static int compare(char x, char y)\n+  {\n+    return Character.valueOf(x).compareTo(Character.valueOf(y));\n+  }\n+\n   /**\n    * Returns an <code>Character</code> object wrapping the value.\n    * In contrast to the <code>Character</code> constructor, this method"}, {"sha": "fe1424dc2b105b65d0da8dcf05d4345b0a5c9299", "filename": "libjava/classpath/java/lang/ClassNotFoundException.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjava%2Flang%2FClassNotFoundException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjava%2Flang%2FClassNotFoundException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Flang%2FClassNotFoundException.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -1,5 +1,5 @@\n /* ClassNotFoundException.java -- thrown when class definition cannot be found\n-   Copyright (C) 1998, 2002, 2005  Free Software Foundation, Inc.\n+   Copyright (C) 1998, 2002, 2005, 2012  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -47,9 +47,9 @@\n  * @see Class#forName(String)\n  * @see ClassLoader#findSystemClass(String)\n  * @see ClassLoader#loadClass(String, boolean)\n- * @status updated to 1.4\n+ * @status updated to 1.7\n  */\n-public class ClassNotFoundException extends Exception\n+public class ClassNotFoundException extends ReflectiveOperationException\n {\n   /**\n    * Compatible with JDK 1.0+."}, {"sha": "2574f66047c9300994a2ca067a8f1b5650cf5748", "filename": "libjava/classpath/java/lang/IllegalAccessException.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjava%2Flang%2FIllegalAccessException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjava%2Flang%2FIllegalAccessException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Flang%2FIllegalAccessException.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -1,6 +1,6 @@\n /* IllegalAccessException.java -- thrown on attempt to reflect on\n    inaccessible data\n-   Copyright (C) 1998, 1999, 2001, 2002, 2005  Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2001, 2002, 2005, 2012  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -71,9 +71,9 @@\n  * @see Field#getDouble(Object)\n  * @see Method#invoke(Object, Object[])\n  * @see Constructor#newInstance(Object[])\n- * @status updated to 1.4\n+ * @status updated to 1.7\n  */\n-public class IllegalAccessException extends Exception\n+public class IllegalAccessException extends ReflectiveOperationException\n {\n   /**\n    * Compatible with JDK 1.0+."}, {"sha": "cb2cad1543245c7c2d739a59c3e6a3affff3aeca", "filename": "libjava/classpath/java/lang/InstantiationException.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjava%2Flang%2FInstantiationException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjava%2Flang%2FInstantiationException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Flang%2FInstantiationException.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -1,6 +1,6 @@\n /* InstantiationException.java -- thrown when reflection cannot create an\n    instance\n-   Copyright (C) 1998, 1999, 2001, 2002, 2005  Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2001, 2002, 2005, 2012  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -46,9 +46,9 @@\n  * @author Brian Jones\n  * @author Warren Levy (warrenl@cygnus.com)\n  * @see Class#newInstance()\n- * @status updated to 1.4\n+ * @status updated to 1.7\n  */\n-public class InstantiationException extends Exception\n+public class InstantiationException extends ReflectiveOperationException\n {\n   /**\n    * Compatible with JDK 1.0+."}, {"sha": "25eb5d5265dde424f29ab6fe9e8194e00a7116dc", "filename": "libjava/classpath/java/lang/Integer.java", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjava%2Flang%2FInteger.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjava%2Flang%2FInteger.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Flang%2FInteger.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -585,6 +585,23 @@ public int compareTo(Integer i)\n     return value > i.value ? 1 : -1;\n   }\n \n+  /**\n+   * Compares two unboxed int values.\n+   * The result is positive if the first is greater, negative if the second\n+   * is greater, and 0 if the two are equal.\n+   *\n+   * @param x First value to compare.\n+   * @param y Second value to compare.\n+   *\n+   * @return positive int if the first value is greater, negative if the second\n+   * is greater, and 0 if the two are equal.\n+   * @since 1.7\n+   */\n+  public static int compare(int x, int y)\n+  {\n+    return Integer.valueOf(x).compareTo(Integer.valueOf(y));\n+  }\n+\n   /**\n    * Return the number of bits set in x.\n    * @param x value to examine"}, {"sha": "34b072572cfc3afaa836b16c4b72ba07aeb08c04", "filename": "libjava/classpath/java/lang/LinkageError.java", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjava%2Flang%2FLinkageError.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjava%2Flang%2FLinkageError.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Flang%2FLinkageError.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -1,6 +1,6 @@\n /* LinkageError.java -- thrown when classes valid at separate compile times\n    cannot be linked to each other\n-   Copyright (C) 1998, 1999, 2001, 2002, 2005  Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2001, 2002, 2005, 2012  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -46,7 +46,7 @@\n  *\n  * @author Brian Jones\n  * @author Tom Tromey (tromey@cygnus.com)\n- * @status updated to 1.4\n+ * @status updated to 1.7\n  */\n public class LinkageError extends Error\n {\n@@ -71,4 +71,17 @@ public LinkageError(String s)\n   {\n     super(s);\n   }\n+\n+  /**\n+   * Construct an LinkageError with detail message and cause.\n+   *\n+   * @param msg Detail message.\n+   * @param cause The cause of this exception, may be null\n+   * @since 1.7\n+   */\n+  public LinkageError(String msg, Throwable cause)\n+  {\n+    super(msg, cause);\n+  }\n+\n }"}, {"sha": "6f31dfa9953008eaa945daae05e7ffd324463d9e", "filename": "libjava/classpath/java/lang/Long.java", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjava%2Flang%2FLong.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjava%2Flang%2FLong.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Flang%2FLong.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -584,6 +584,23 @@ public int compareTo(Long l)\n     return value > l.value ? 1 : -1;\n   }\n \n+  /**\n+   * Compares two unboxed long values.\n+   * The result is positive if the first is greater, negative if the second\n+   * is greater, and 0 if the two are equal.\n+   *\n+   * @param x First value to compare.\n+   * @param y Second value to compare.\n+   *\n+   * @return positive int if the first value is greater, negative if the second\n+   * is greater, and 0 if the two are equal.\n+   * @since 1.7\n+   */\n+  public static int compare(long x, long y)\n+  {\n+    return Long.valueOf(x).compareTo(Long.valueOf(y));\n+  }\n+\n   /**\n    * Return the number of bits set in x.\n    * @param x value to examine"}, {"sha": "b43b53206addd3bb71bc69f367b796c96657d312", "filename": "libjava/classpath/java/lang/NoSuchFieldException.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjava%2Flang%2FNoSuchFieldException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjava%2Flang%2FNoSuchFieldException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Flang%2FNoSuchFieldException.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -1,5 +1,5 @@\n /* NoSuchFieldException.java -- thrown when reflecting a non-existant field\n-   Copyright (C) 1998, 1999, 2001, 2002, 2005  Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2001, 2002, 2005, 2012  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -45,9 +45,9 @@\n  * @author Brian Jones\n  * @author Warren Levy (warrenl@cygnus.com)\n  * @since 1.1\n- * @status updated to 1.4\n+ * @status updated to 1.7\n  */\n-public class NoSuchFieldException extends Exception\n+public class NoSuchFieldException extends ReflectiveOperationException\n {\n   /**\n    * Compatible with JDK 1.1+."}, {"sha": "116238220be6c010ae5fc99bfc45cb961c4dd616", "filename": "libjava/classpath/java/lang/NoSuchMethodException.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjava%2Flang%2FNoSuchMethodException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjava%2Flang%2FNoSuchMethodException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Flang%2FNoSuchMethodException.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -1,5 +1,5 @@\n /* NoSuchMethodException.java -- thrown when reflecting a non-existant method\n-   Copyright (C) 1998, 1999, 2001, 2002, 2005  Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2001, 2002, 2005, 2012  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -44,9 +44,9 @@\n  *\n  * @author Brian Jones\n  * @author Warren Levy (warrenl@cygnus.com)\n- * @status updated to 1.4\n+ * @status updated to 1.7\n  */\n-public class NoSuchMethodException extends Exception\n+public class NoSuchMethodException extends ReflectiveOperationException\n {\n   /**\n    * Compatible with JDK 1.0+."}, {"sha": "8b84c0e290f9a307a95d8bf000c0bfa066231694", "filename": "libjava/classpath/java/lang/ReflectiveOperationException.java", "status": "added", "additions": 88, "deletions": 0, "changes": 88, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjava%2Flang%2FReflectiveOperationException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjava%2Flang%2FReflectiveOperationException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Flang%2FReflectiveOperationException.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -0,0 +1,88 @@\n+/* ReflectiveOperationException.java -- thrown when reflective operation fails\n+   Copyright (C) 2012  Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package java.lang;\n+\n+/**\n+ * This exception is thrown when reflective operations fail.\n+ *\n+ * @since 1.7\n+ */\n+public class ReflectiveOperationException extends Exception\n+{\n+  private static final long serialVersionUID = 123456789L;\n+\n+  /**\n+   * Create an exception without a message.\n+   */\n+  public ReflectiveOperationException()\n+  {\n+  }\n+\n+  /**\n+   * Create an exception with a message.\n+   *\n+   * @param s the message\n+   */\n+  public ReflectiveOperationException(String s)\n+  {\n+    super(s);\n+  }\n+\n+  /**\n+   * Create an exception with a message and a cause.\n+   *\n+   * @param s the message\n+   * @param cause the cause, may be null\n+   */\n+  public ReflectiveOperationException(String message, Throwable cause)\n+  {\n+    super(message, cause);\n+  }\n+\n+  /**\n+   * Create an exception with a cause.\n+   *\n+   * @param cause the cause, may be null\n+   */\n+  public ReflectiveOperationException(Throwable cause)\n+  {\n+    super(cause);\n+  }\n+\n+}"}, {"sha": "fae9fe7635bf9ab42f7accaf60d3e665992a58fa", "filename": "libjava/classpath/java/lang/Short.java", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjava%2Flang%2FShort.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjava%2Flang%2FShort.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Flang%2FShort.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -372,6 +372,23 @@ public int compareTo(Short s)\n     return value - s.value;\n   }\n \n+  /**\n+   * Compares two unboxed short values.\n+   * The result is positive if the first is greater, negative if the second\n+   * is greater, and 0 if the two are equal.\n+   *\n+   * @param x First value to compare.\n+   * @param y Second value to compare.\n+   *\n+   * @return positive int if the first value is greater, negative if the second\n+   * is greater, and 0 if the two are equal.\n+   * @since 1.7\n+   */\n+  public static int compare(short x, short y)\n+  {\n+    return Short.valueOf(x).compareTo(Short.valueOf(y));\n+  }\n+\n   /**\n    * Reverse the bytes in val.\n    * @since 1.5"}, {"sha": "27294cdd4ebc5ff9f8e3f5d3cbff9e2845d30850", "filename": "libjava/classpath/java/lang/String.java", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjava%2Flang%2FString.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjava%2Flang%2FString.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Flang%2FString.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -705,6 +705,8 @@ public char charAt(int index)\n    */\n   public synchronized int codePointAt(int index)\n   {\n+    if (index < 0 || index >= count)\n+      throw new StringIndexOutOfBoundsException(index);\n     // Use the CharSequence overload as we get better range checking\n     // this way.\n     return Character.codePointAt(this, index);\n@@ -716,12 +718,14 @@ public synchronized int codePointAt(int index)\n    * <code>index-2</code> to see if they form a supplementary code point.\n    * @param index the index just past the codepoint to get, starting at 0\n    * @return the codepoint at the specified index\n-   * @throws IndexOutOfBoundsException if index is negative or &gt;= length()\n+   * @throws IndexOutOfBoundsException if index is less than 1 or &gt; length()\n    *         (while unspecified, this is a StringIndexOutOfBoundsException)\n    * @since 1.5\n    */\n   public synchronized int codePointBefore(int index)\n   {\n+    if (index < 1 || index > count)\n+      throw new StringIndexOutOfBoundsException(index);\n     // Use the CharSequence overload as we get better range checking\n     // this way.\n     return Character.codePointBefore(this, index);"}, {"sha": "9d869918300602afbed7294524449c5d5ff94d30", "filename": "libjava/classpath/java/lang/System.java", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjava%2Flang%2FSystem.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjava%2Flang%2FSystem.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Flang%2FSystem.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -97,6 +97,8 @@\n    */\n   public static final PrintStream out = VMSystem.makeStandardOutputStream();\n \n+  private static final String LINE_SEPARATOR = SystemProperties.getProperty(\"line.separator\");\n+\n   /**\n    * The standard output PrintStream.  This is assigned at startup and\n    * starts its life perfectly valid. Although it is marked final, you can\n@@ -712,6 +714,16 @@ public static Console console()\n     return Console.console();\n   }\n \n+  /**\n+   * Returns the system-dependent line separator.\n+   *\n+   * @return the system-dependent line separator.\n+   */\n+  public static String lineSeparator()\n+  {\n+    return LINE_SEPARATOR;\n+  }\n+\n   /**\n    * This is a specialised <code>Collection</code>, providing\n    * the necessary provisions for the collections used by the"}, {"sha": "4480fc6d00674e634bbc46d5e8ded99a7785fb6b", "filename": "libjava/classpath/java/lang/reflect/InvocationTargetException.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjava%2Flang%2Freflect%2FInvocationTargetException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjava%2Flang%2Freflect%2FInvocationTargetException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Flang%2Freflect%2FInvocationTargetException.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -1,5 +1,5 @@\n /* InvocationTargetException.java -- Wrapper exception for reflection\n-   Copyright (C) 1998, 1999, 2000, 2001, 2002, 2005  Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2000, 2001, 2002, 2005, 2012  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -50,9 +50,9 @@\n  * @see Method#invoke(Object,Object[])\n  * @see Constructor#newInstance(Object[])\n  * @since 1.1\n- * @status updated to 1.4\n+ * @status updated to 1.7\n  */\n-public class InvocationTargetException extends Exception\n+public class InvocationTargetException extends ReflectiveOperationException\n {\n   /**\n    * Compatible with JDK 1.1+."}, {"sha": "945fbf696639679eaefc24aa355b25d21fd2f0a6", "filename": "libjava/classpath/java/lang/reflect/Member.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjava%2Flang%2Freflect%2FMember.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjava%2Flang%2Freflect%2FMember.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Flang%2Freflect%2FMember.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -79,7 +79,7 @@\n    *\n    * @return the class that declared this member\n    */\n-  Class getDeclaringClass();\n+  Class<?> getDeclaringClass();\n \n   /**\n    * Gets the simple name of this member. This will be a valid Java"}, {"sha": "c75f7b8182362614ad295f25af4774f70ec70755", "filename": "libjava/classpath/java/lang/reflect/Modifier.java", "status": "modified", "additions": 41, "deletions": 1, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjava%2Flang%2Freflect%2FModifier.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjava%2Flang%2Freflect%2FModifier.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Flang%2Freflect%2FModifier.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -1,5 +1,5 @@\n /* java.lang.reflect.Modifier\n-   Copyright (C) 1998, 1999, 2001, 2002, 2005, 2008  Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2001, 2002, 2005, 2008, 2012  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -299,6 +299,46 @@ public static boolean isVolatile(int mod)\n     return (mod & VOLATILE) != 0;\n   }\n \n+  /**\n+   * @since 1.7\n+   */\n+  public static int classModifiers()\n+  {\n+    return PUBLIC | PROTECTED | PRIVATE | STATIC | ABSTRACT | FINAL | STRICT;\n+  }\n+\n+  /**\n+   * @since 1.7\n+   */\n+  public static int interfaceModifiers()\n+  {\n+    return PUBLIC | PROTECTED | PRIVATE | STATIC | ABSTRACT | STRICT;\n+  }\n+\n+  /**\n+   * @since 1.7\n+   */\n+  public static int constructorModifiers()\n+  {\n+    return PUBLIC | PROTECTED | PRIVATE;\n+  }\n+\n+  /**\n+   * @since 1.7\n+   */\n+  public static int methodModifiers()\n+  {\n+    return PUBLIC | PROTECTED | PRIVATE | STATIC | ABSTRACT | FINAL | STRICT | SYNCHRONIZED | NATIVE;\n+  }\n+\n+  /**\n+   * @since 1.7\n+   */\n+  public static int fieldModifiers()\n+  {\n+    return PUBLIC | PROTECTED | PRIVATE | STATIC | FINAL | TRANSIENT | VOLATILE;\n+  }\n+\n   /**\n    * Get a string representation of all the modifiers represented by the\n    * given int. The keywords are printed in this order:"}, {"sha": "02b561a5690e7be55f2769da8d0d477203dbdcb3", "filename": "libjava/classpath/java/nio/channels/FileLock.java", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjava%2Fnio%2Fchannels%2FFileLock.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjava%2Fnio%2Fchannels%2FFileLock.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Fnio%2Fchannels%2FFileLock.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -45,6 +45,7 @@\n  * @since 1.4\n  */\n public abstract class FileLock\n+  implements AutoCloseable\n {\n   private final FileChannel channel;\n   private final long position;"}, {"sha": "b1e7034b5a316709842a3a0f6841df70f8d99927", "filename": "libjava/classpath/java/sql/Connection.java", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjava%2Fsql%2FConnection.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjava%2Fsql%2FConnection.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Fsql%2FConnection.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -46,6 +46,7 @@\n  * @author Aaron M. Renn (arenn@urbanophile.com)\n  */\n public interface Connection\n+  extends AutoCloseable\n {\n   /**\n    * This transaction isolation level indicates that transactions are not"}, {"sha": "c487bed6b944420234fc626d2e4e5b1dab11d875", "filename": "libjava/classpath/java/sql/ResultSet.java", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjava%2Fsql%2FResultSet.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjava%2Fsql%2FResultSet.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Fsql%2FResultSet.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -60,6 +60,7 @@\n  * @author Aaron M. Renn (arenn@urbanophile.com)\n  */\n public interface ResultSet\n+  extends AutoCloseable\n {\n   /**\n    * The rows will be processed in order from first to last."}, {"sha": "5f35e7b187d0e0a4a939132cadbf592689a047d7", "filename": "libjava/classpath/java/sql/Statement.java", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjava%2Fsql%2FStatement.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjava%2Fsql%2FStatement.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Fsql%2FStatement.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -44,6 +44,7 @@\n  * @author Aaron M. Renn (arenn@urbanophile.com)\n  */\n public interface Statement\n+  extends AutoCloseable\n {\n   int CLOSE_CURRENT_RESULT = 1;\n   int KEEP_CURRENT_RESULT = 2;"}, {"sha": "4293d7dd2537d33c2b957053f0375395a4af8010", "filename": "libjava/classpath/java/text/AttributedString.java", "status": "modified", "additions": 21, "deletions": 23, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjava%2Ftext%2FAttributedString.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjava%2Ftext%2FAttributedString.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Ftext%2FAttributedString.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -1,5 +1,5 @@\n /* AttributedString.java -- Models text with attributes\n-   Copyright (C) 1998, 1999, 2004, 2005, 2006, Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2004, 2005, 2006, 2012 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -48,6 +48,8 @@\n import java.util.Map;\n import java.util.Set;\n \n+import static java.text.AttributedCharacterIterator.Attribute;\n+\n /**\n  * This class models a <code>String</code> with attributes over various\n  * subranges of the string.  It allows applications to access this\n@@ -68,7 +70,7 @@\n   {\n \n     /** A Map of the attributes */\n-    Map attribs;\n+    Map<? extends Attribute, ?> attribs;\n \n     /** The beginning index of the attributes */\n     int beginIndex;\n@@ -83,7 +85,8 @@\n      * @param beginIndex  the start index.\n      * @param endIndex  the end index.\n      */\n-    AttributeRange(Map attribs, int beginIndex, int endIndex)\n+    AttributeRange(Map<? extends Attribute, ?> attribs,\n+                   int beginIndex, int endIndex)\n     {\n       this.attribs = attribs;\n       this.beginIndex = beginIndex;\n@@ -122,7 +125,7 @@ public AttributedString(String str)\n    * @param attributes The attribute list.\n    */\n   public AttributedString(String str,\n-                          Map<? extends AttributedCharacterIterator.Attribute, ?> attributes)\n+                          Map<? extends Attribute, ?> attributes)\n   {\n     this(str);\n \n@@ -178,7 +181,7 @@ public AttributedString(AttributedCharacterIterator aci, int beginIndex,\n    *                   <code>null</code> to include all attributes.\n    */\n   public AttributedString(AttributedCharacterIterator aci, int begin, int end,\n-                          AttributedCharacterIterator.Attribute[] attributes)\n+                          Attribute[] attributes)\n   {\n     // Validate some arguments\n     if ((begin < 0) || (end < begin) || end > aci.getEndIndex())\n@@ -187,29 +190,28 @@ public AttributedString(AttributedCharacterIterator aci, int begin, int end,\n     CPStringBuilder sb = new CPStringBuilder(\"\");\n \n     // Get the valid attribute list\n-    Set allAttribs = aci.getAllAttributeKeys();\n+    Set<Attribute> allAttribs = aci.getAllAttributeKeys();\n     if (attributes != null)\n       allAttribs.retainAll(Arrays.asList(attributes));\n \n     // Loop through and extract the attributes\n     char c = aci.setIndex(begin);\n \n-    ArrayList accum = new ArrayList();\n+    ArrayList<AttributeRange> accum = new ArrayList<AttributeRange>();\n     do\n       {\n         sb.append(c);\n \n-        Iterator iter = allAttribs.iterator();\n+        Iterator<Attribute> iter = allAttribs.iterator();\n         while(iter.hasNext())\n           {\n             Object obj = iter.next();\n \n             // What should we do if this is not true?\n-            if (!(obj instanceof AttributedCharacterIterator.Attribute))\n+            if (!(obj instanceof Attribute))\n               continue;\n \n-            AttributedCharacterIterator.Attribute attrib =\n-              (AttributedCharacterIterator.Attribute)obj;\n+            Attribute attrib = (Attribute)obj;\n \n             // Make sure the attribute is defined.\n             Object attribObj = aci.getAttribute(attrib);\n@@ -237,7 +239,7 @@ public AttributedString(AttributedCharacterIterator aci, int begin, int end,\n               }\n \n             // Create a map object.  Yes this will only contain one attribute\n-            Map newMap = new Hashtable();\n+            Map<Attribute,Object> newMap = new Hashtable<Attribute,Object>();\n             newMap.put(attrib, attribObj);\n \n             // Add it to the attribute list.\n@@ -249,7 +251,7 @@ public AttributedString(AttributedCharacterIterator aci, int begin, int end,\n     while( aci.getIndex() < end );\n \n     attribs = new AttributeRange[accum.size()];\n-    attribs = (AttributeRange[]) accum.toArray(attribs);\n+    attribs = accum.toArray(attribs);\n \n     sci = new StringCharacterIterator(sb.toString());\n   }\n@@ -260,8 +262,7 @@ public AttributedString(AttributedCharacterIterator aci, int begin, int end,\n    * @param attrib The attribute to add.\n    * @param value The value of the attribute.\n    */\n-  public void addAttribute(AttributedCharacterIterator.Attribute attrib,\n-          Object value)\n+  public void addAttribute(Attribute attrib, Object value)\n   {\n     addAttribute(attrib, value, 0, sci.getEndIndex());\n   }\n@@ -278,14 +279,13 @@ public void addAttribute(AttributedCharacterIterator.Attribute attrib,\n    * @exception IllegalArgumentException If attribute is <code>null</code> or\n    *            the subrange is not valid.\n    */\n-  public void addAttribute(AttributedCharacterIterator.Attribute attrib,\n-          Object value, int begin, int end)\n+  public void addAttribute(Attribute attrib, Object value, int begin, int end)\n   {\n     if (attrib == null)\n       throw new IllegalArgumentException(\"null attribute\");\n     if (end <= begin)\n       throw new IllegalArgumentException(\"Requires end > begin\");\n-    HashMap hm = new HashMap();\n+    HashMap<Attribute,Object> hm = new HashMap<Attribute,Object>();\n     hm.put(attrib, value);\n \n     addAttributes(hm, begin, end);\n@@ -303,7 +303,7 @@ public void addAttribute(AttributedCharacterIterator.Attribute attrib,\n    *         <code>null</code>.\n    * @throws IllegalArgumentException if the subrange is not valid.\n    */\n-  public void addAttributes(Map<? extends AttributedCharacterIterator.Attribute, ?> attributes,\n+  public void addAttributes(Map<? extends Attribute, ?> attributes,\n                             int beginIndex, int endIndex)\n   {\n     if (attributes == null)\n@@ -343,8 +343,7 @@ public AttributedCharacterIterator getIterator()\n    *\n    * @return An <code>AttributedCharacterIterator</code> for this string.\n    */\n-  public AttributedCharacterIterator getIterator(\n-          AttributedCharacterIterator.Attribute[] attributes)\n+  public AttributedCharacterIterator getIterator(Attribute[] attributes)\n   {\n     return(getIterator(attributes, 0, sci.getEndIndex()));\n   }\n@@ -363,8 +362,7 @@ public AttributedCharacterIterator getIterator(\n    *\n    * @return An <code>AttributedCharacterIterator</code> for this string.\n    */\n-  public AttributedCharacterIterator getIterator(\n-          AttributedCharacterIterator.Attribute[] attributes,\n+  public AttributedCharacterIterator getIterator(Attribute[] attributes,\n           int beginIndex, int endIndex)\n   {\n     if ((beginIndex < 0) || (endIndex > sci.getEndIndex()) ||"}, {"sha": "6d402cbca5d1437356c004362d486e0601089610", "filename": "libjava/classpath/java/text/AttributedStringIterator.java", "status": "modified", "additions": 22, "deletions": 21, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjava%2Ftext%2FAttributedStringIterator.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjava%2Ftext%2FAttributedStringIterator.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Ftext%2FAttributedStringIterator.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -1,5 +1,5 @@\n /* AttributedStringIterator.java -- Class to iterate over AttributedString\n-   Copyright (C) 1998, 1999, 2004, 2005, 2006, Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2004, 2005, 2006, 2012 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -44,6 +44,8 @@\n import java.util.Map;\n import java.util.Set;\n \n+import static java.text.AttributedCharacterIterator.Attribute;\n+\n /**\n   * This class implements the AttributedCharacterIterator interface.  It\n   * is used by AttributedString.getIterator().\n@@ -67,7 +69,7 @@ class AttributedStringIterator implements AttributedCharacterIterator\n    * The list of attributes that the user is interested in.  We may,\n    * at our option, not return any other attributes.\n    */\n-  private AttributedCharacterIterator.Attribute[] restricts;\n+  private Attribute[] restricts;\n \n   /*************************************************************************/\n \n@@ -155,9 +157,9 @@ public int getEndIndex()\n    * Returns a list of all the attribute keys that are defined anywhere\n    * on this string.\n    */\n-  public Set getAllAttributeKeys()\n+  public Set<Attribute> getAllAttributeKeys()\n   {\n-    HashSet s = new HashSet();\n+    HashSet<Attribute> s = new HashSet<Attribute>();\n     if (attribs == null)\n       return(s);\n \n@@ -167,8 +169,7 @@ public Set getAllAttributeKeys()\n           || attribs[i].endIndex <= getBeginIndex())\n         continue;\n \n-      Set key_set = attribs[i].attribs.keySet();\n-      Iterator iter = key_set.iterator();\n+      Iterator<? extends Attribute> iter = attribs[i].attribs.keySet().iterator();\n       while (iter.hasNext())\n         {\n           s.add(iter.next());\n@@ -190,14 +191,14 @@ public int getRunLimit()\n     return getRunLimit(getAllAttributeKeys());\n   }\n \n-  public int getRunLimit(AttributedCharacterIterator.Attribute attrib)\n+  public int getRunLimit(Attribute attrib)\n   {\n-    HashSet s = new HashSet();\n+    HashSet<Attribute> s = new HashSet<Attribute>();\n     s.add(attrib);\n     return(getRunLimit(s));\n   }\n \n-  public synchronized int getRunLimit(Set attributeSet)\n+  public synchronized int getRunLimit(Set<? extends Attribute> attributeSet)\n   {\n     if (attributeSet == null)\n       return ci.getEndIndex();\n@@ -207,13 +208,13 @@ public synchronized int getRunLimit(Set attributeSet)\n     int limit = current;\n     if (current == end)\n       return end;\n-    Map runValues = getAttributes();\n+    Map<Attribute,Object> runValues = getAttributes();\n     while (limit < end)\n     {\n-      Iterator iterator = attributeSet.iterator();\n+      Iterator<? extends Attribute> iterator = attributeSet.iterator();\n       while (iterator.hasNext())\n       {\n-        Attribute attributeKey = (Attribute) iterator.next();\n+        Attribute attributeKey = iterator.next();\n         Object v1 = runValues.get(attributeKey);\n         Object v2 = getAttribute(attributeKey, limit + 1);\n         boolean changed = false;\n@@ -262,11 +263,11 @@ public int getRunStart()\n    *\n    * return The index of the first character in the run.\n    */\n-  public int getRunStart(AttributedCharacterIterator.Attribute attrib)\n+  public int getRunStart(Attribute attrib)\n   {\n     if (attrib == null)\n       return ci.getBeginIndex();\n-    HashSet s = new HashSet();\n+    HashSet<Attribute> s = new HashSet<Attribute>();\n     s.add(attrib);\n     return(getRunStart(s));\n   }\n@@ -279,7 +280,7 @@ public int getRunStart(AttributedCharacterIterator.Attribute attrib)\n    *\n    * return The index of the first character in the run.\n    */\n-  public int getRunStart(Set attributeSet)\n+  public int getRunStart(Set<? extends Attribute> attributeSet)\n   {\n     if (attributeSet == null)\n       return ci.getBeginIndex();\n@@ -289,14 +290,14 @@ public int getRunStart(Set attributeSet)\n     int start = current;\n     if (start == begin)\n       return begin;\n-    Map runValues = getAttributes();\n+    Map<Attribute, Object> runValues = getAttributes();\n     int prev = start - 1;\n     while (start > begin)\n     {\n-      Iterator iterator = attributeSet.iterator();\n+      Iterator<? extends Attribute> iterator = attributeSet.iterator();\n       while (iterator.hasNext())\n       {\n-        Attribute attributeKey = (Attribute) iterator.next();\n+        Attribute attributeKey = iterator.next();\n         Object v1 = runValues.get(attributeKey);\n         Object v2 = getAttribute(attributeKey, prev);\n         boolean changed = false;\n@@ -340,7 +341,7 @@ private Object getAttribute(AttributedCharacterIterator.Attribute key,\n       {\n         if (pos >= attribs[i].beginIndex && pos < attribs[i].endIndex)\n           {\n-            Set keys = attribs[i].attribs.keySet();\n+            Set<? extends Attribute> keys = attribs[i].attribs.keySet();\n             if (keys.contains(key))\n               {\n                 return attribs[i].attribs.get(key);\n@@ -370,9 +371,9 @@ public Object getAttribute(AttributedCharacterIterator.Attribute key)\n    * Return a list of all the attributes and values defined for this\n    * character\n    */\n-  public Map getAttributes()\n+  public Map<Attribute,Object> getAttributes()\n   {\n-    HashMap m = new HashMap();\n+    HashMap<Attribute,Object> m = new HashMap<Attribute,Object>();\n     if (attribs == null)\n       return(m);\n "}, {"sha": "236247d5ea0773dcd0413bb41bbcd5d2aeac7f47", "filename": "libjava/classpath/java/text/Bidi.java", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjava%2Ftext%2FBidi.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjava%2Ftext%2FBidi.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Ftext%2FBidi.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -1,5 +1,5 @@\n /* Bidi.java -- Bidirectional Algorithm implementation\n-   Copyright (C) 2005, 2006  Free Software Foundation, Inc.\n+   Copyright (C) 2005, 2006, 2012  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -109,7 +109,7 @@\n   // A list of indices where a formatting code was found.  These\n   // are indicies into the original text -- not into the text after\n   // the codes have been removed.\n-  private ArrayList formatterIndices;\n+  private ArrayList<Integer> formatterIndices;\n \n   // Indices of the starts of runs in the text.\n   private int[] runs;\n@@ -161,13 +161,13 @@ else if (val == TextAttribute.RUN_DIRECTION_RTL)\n     if (val instanceof NumericShaper)\n       shaper = (NumericShaper) val;\n \n-    char[] text = new char[iter.getEndIndex() - iter.getBeginIndex()];\n-    this.embeddings = new byte[this.text.length];\n-    this.embeddingOffset = 0;\n-    this.length = text.length;\n-    for (int i = 0; i < this.text.length; ++i)\n+    text = new char[iter.getEndIndex() - iter.getBeginIndex()];\n+    embeddings = new byte[text.length];\n+    embeddingOffset = 0;\n+    length = text.length;\n+    for (int i = 0; i < text.length; ++i)\n       {\n-        this.text[i] = iter.current();\n+        text[i] = iter.current();\n \n         val = iter.getAttribute(TextAttribute.BIDI_EMBEDDING);\n         if (val instanceof Integer)\n@@ -178,13 +178,13 @@ else if (val == TextAttribute.RUN_DIRECTION_RTL)\n               bval = 0;\n             else\n               bval = (byte) ival;\n-            this.embeddings[i] = bval;\n+            embeddings[i] = bval;\n           }\n       }\n \n     // Invoke the numeric shaper, if specified.\n     if (shaper != null)\n-      shaper.shape(this.text, 0, this.length);\n+      shaper.shape(text, 0, length);\n \n     runBidi();\n   }\n@@ -404,7 +404,7 @@ else if (types[i] == Character.DIRECTIONALITY_RIGHT_TO_LEFT_OVERRIDE)\n           {\n             // Mark this character for removal.\n             if (formatterIndices == null)\n-              formatterIndices = new ArrayList();\n+              formatterIndices = new ArrayList<Integer>();\n             formatterIndices.add(Integer.valueOf(i));\n           }\n         else if (directionalOverride != -1)\n@@ -427,7 +427,7 @@ else if (directionalOverride != -1)\n         if (i == size)\n           nextFmt = length;\n         else\n-          nextFmt = ((Integer) formatterIndices.get(i)).intValue();\n+          nextFmt = formatterIndices.get(i).intValue();\n         // Non-formatter codes are from 'input' to 'nextFmt'.\n         int len = nextFmt - input;\n         System.arraycopy(levels, input, levels, output, len);\n@@ -716,7 +716,7 @@ private void reinsertFormattingCodes()\n     // Process from the end as we are copying the array over itself here.\n     for (int index = formatterIndices.size() - 1; index >= 0; --index)\n       {\n-        int nextFmt = ((Integer) formatterIndices.get(index)).intValue();\n+        int nextFmt = formatterIndices.get(index).intValue();\n \n         // nextFmt points to a location in the original array.  So,\n         // nextFmt+1 is the target of our copying.  output is the location"}, {"sha": "6fed88f82d9a1ad78b239a9f32e10a48a15875ea", "filename": "libjava/classpath/java/text/BreakIterator.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjava%2Ftext%2FBreakIterator.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjava%2Ftext%2FBreakIterator.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Ftext%2FBreakIterator.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -1,5 +1,5 @@\n /* BreakIterator.java -- Breaks text into elements\n-   Copyright (C) 1998, 1999, 2001, 2004, 2005, 2007\n+   Copyright (C) 1998, 1999, 2001, 2004, 2005, 2007, 2012\n    Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n@@ -160,7 +160,7 @@ private static BreakIterator getInstance (String type, Locale loc)\n       }\n     try\n       {\n-        Class k = Class.forName(className);\n+        Class<?> k = Class.forName(className);\n         return (BreakIterator) k.newInstance();\n       }\n     catch (ClassNotFoundException x1)"}, {"sha": "c6a508cb89a7383a7243aa4dd4eb586db3ffd0ae", "filename": "libjava/classpath/java/text/ChoiceFormat.java", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjava%2Ftext%2FChoiceFormat.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjava%2Ftext%2FChoiceFormat.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Ftext%2FChoiceFormat.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -1,5 +1,5 @@\n /* ChoiceFormat.java -- Format over a range of numbers\n-   Copyright (C) 1998, 1999, 2000, 2001, 2002, 2004, 2005\n+   Copyright (C) 1998, 1999, 2000, 2001, 2002, 2004, 2005, 2012\n    Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n@@ -98,8 +98,8 @@ public void applyPattern (String newPattern)\n     // This isn't explicitly documented.  But for instance we accept\n     // '#' as a literal hash in a format string.\n     int index = 0, max = newPattern.length();\n-    Vector stringVec = new Vector ();\n-    Vector limitVec = new Vector ();\n+    Vector<String> stringVec = new Vector<String> ();\n+    Vector<Double> limitVec = new Vector<Double> ();\n     final CPStringBuilder buf = new CPStringBuilder ();\n \n     while (true)\n@@ -159,7 +159,7 @@ else if (c == '|')\n     choiceLimits = new double[limitVec.size()];\n     for (int i = 0; i < choiceLimits.length; ++i)\n       {\n-        Double d = (Double) limitVec.elementAt(i);\n+        Double d = limitVec.elementAt(i);\n         choiceLimits[i] = d.doubleValue();\n       }\n   }"}, {"sha": "42452e9dcdbfde16c13948daa09c764ef36654e9", "filename": "libjava/classpath/java/text/CollationElementIterator.java", "status": "modified", "additions": 36, "deletions": 37, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjava%2Ftext%2FCollationElementIterator.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjava%2Ftext%2FCollationElementIterator.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Ftext%2FCollationElementIterator.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -1,5 +1,5 @@\n /* CollationElementIterator.java -- Walks through collation elements\n-   Copyright (C) 1998, 1999, 2001, 2002, 2003, 2004  Free Software Foundation\n+   Copyright (C) 1998, 1999, 2001, 2002, 2003, 2004, 2012  Free Software Foundation\n \n This file is part of GNU Classpath.\n \n@@ -91,12 +91,12 @@\n    * Array containing the collation decomposition of the\n    * text given to the constructor.\n    */\n-  private RuleBasedCollator.CollationElement[] text_decomposition;\n+  private RuleBasedCollator.CollationElement[] textDecomposition;\n \n   /**\n    * Array containing the index of the specified block.\n    */\n-  private int[] text_indexes;\n+  private int[] textIndexes;\n \n   /**\n    * This method initializes a new instance of <code>CollationElementIterator</code>\n@@ -130,12 +130,12 @@\n \n   RuleBasedCollator.CollationElement nextBlock()\n   {\n-    if (index >= text_decomposition.length)\n+    if (index >= textDecomposition.length)\n       return null;\n \n-    RuleBasedCollator.CollationElement e = text_decomposition[index];\n+    RuleBasedCollator.CollationElement e = textDecomposition[index];\n \n-    textIndex = text_indexes[index+1];\n+    textIndex = textIndexes[index+1];\n \n     index++;\n \n@@ -148,9 +148,9 @@ RuleBasedCollator.CollationElement previousBlock()\n       return null;\n \n     index--;\n-    RuleBasedCollator.CollationElement e = text_decomposition[index];\n+    RuleBasedCollator.CollationElement e = textDecomposition[index];\n \n-    textIndex = text_indexes[index+1];\n+    textIndex = textIndexes[index+1];\n \n     return e;\n   }\n@@ -268,23 +268,23 @@ public void setText(String text)\n \n     String work_text = text.intern();\n \n-    ArrayList a_element = new ArrayList();\n-    ArrayList a_idx = new ArrayList();\n+    ArrayList<RuleBasedCollator.CollationElement> aElement = new ArrayList<RuleBasedCollator.CollationElement>();\n+    ArrayList<Integer> aIdx = new ArrayList<Integer>();\n \n     // Build element collection ordered as they come in \"text\".\n     while (idx < work_text.length())\n       {\n-        String key, key_old;\n+        String key, keyOld;\n \n         Object object = null;\n         int p = 1;\n \n         // IMPROVE: use a TreeMap with a prefix-ordering rule.\n-        key_old = key = null;\n+        keyOld = key = null;\n         do\n           {\n             if (object != null)\n-              key_old = key;\n+              keyOld = key;\n             key = work_text.substring (idx, idx+p);\n             object = collator.prefix_tree.get (key);\n             if (object != null && idx < alreadyExpanded)\n@@ -294,15 +294,15 @@ public void setText(String text)\n                     prefix.expansion.startsWith(work_text.substring(0, idx)))\n                 {\n                   object = null;\n-                  key = key_old;\n+                  key = keyOld;\n                 }\n               }\n             p++;\n           }\n         while (idx+p <= work_text.length());\n \n         if (object == null)\n-          key = key_old;\n+          key = keyOld;\n \n         RuleBasedCollator.CollationElement prefix =\n           (RuleBasedCollator.CollationElement) collator.prefix_tree.get (key);\n@@ -322,8 +322,8 @@ public void setText(String text)\n                 RuleBasedCollator.CollationElement e =\n                   collator.getDefaultAccentedElement (work_text.charAt (idx));\n \n-                a_element.add (e);\n-                a_idx.add (new Integer(idx_idx));\n+                aElement.add (e);\n+                aIdx.add (Integer.valueOf(idx_idx));\n                 idx++;\n                 alreadyExpanded--;\n                 if (alreadyExpanded == 0)\n@@ -342,15 +342,15 @@ public void setText(String text)\n                 /* This is a normal character. */\n                 RuleBasedCollator.CollationElement e =\n                   collator.getDefaultElement (work_text.charAt (idx));\n-                Integer i_ref = new Integer(idx_idx);\n+                Integer iRef = Integer.valueOf(idx_idx);\n \n                 /* Don't forget to mark it as a special sequence so the\n                  * string can be ordered.\n                  */\n-                a_element.add (RuleBasedCollator.SPECIAL_UNKNOWN_SEQ);\n-                a_idx.add (i_ref);\n-                a_element.add (e);\n-                a_idx.add (i_ref);\n+                aElement.add (RuleBasedCollator.SPECIAL_UNKNOWN_SEQ);\n+                aIdx.add (iRef);\n+                aElement.add (e);\n+                aIdx.add (iRef);\n                 idx_idx++;\n                 idx++;\n               }\n@@ -367,8 +367,8 @@ public void setText(String text)\n             work_text = prefix.expansion\n               + work_text.substring (idx+prefix.key.length());\n             idx = 0;\n-            a_element.add (prefix);\n-            a_idx.add (new Integer(idx_idx));\n+            aElement.add (prefix);\n+            aIdx.add (Integer.valueOf(idx_idx));\n             if (alreadyExpanded == 0)\n               idxToMove = prefix.key.length();\n             alreadyExpanded += prefix.expansion.length()-prefix.key.length();\n@@ -378,8 +378,8 @@ public void setText(String text)\n             /* Third case: the simplest. We have got the prefix and it\n              * has not to be expanded.\n              */\n-            a_element.add (prefix);\n-            a_idx.add (new Integer(idx_idx));\n+            aElement.add (prefix);\n+            aIdx.add (Integer.valueOf(idx_idx));\n             idx += prefix.key.length();\n             /* If the sequence is in an expansion, we must decrease the\n              * counter.\n@@ -398,14 +398,13 @@ public void setText(String text)\n           }\n       }\n \n-    text_decomposition = (RuleBasedCollator.CollationElement[])\n-           a_element.toArray(new RuleBasedCollator.CollationElement[a_element.size()]);\n-    text_indexes = new int[a_idx.size()+1];\n-    for (int i = 0; i < a_idx.size(); i++)\n+    textDecomposition = aElement.toArray(new RuleBasedCollator.CollationElement[aElement.size()]);\n+    textIndexes = new int[aIdx.size()+1];\n+    for (int i = 0; i < aIdx.size(); i++)\n       {\n-        text_indexes[i] = ((Integer)a_idx.get(i)).intValue();\n+        textIndexes[i] = aIdx.get(i).intValue();\n       }\n-    text_indexes[a_idx.size()] = text.length();\n+    textIndexes[aIdx.size()] = text.length();\n   }\n \n   /**\n@@ -460,19 +459,19 @@ public void setOffset(int offset)\n     if (offset > (text.getEndIndex() - 1))\n       throw new IllegalArgumentException(\"Offset too large: \" + offset);\n \n-    for (index = 0; index < text_decomposition.length; index++)\n+    for (index = 0; index < textDecomposition.length; index++)\n       {\n-        if (offset <= text_indexes[index])\n+        if (offset <= textIndexes[index])\n           break;\n       }\n     /*\n-     * As text_indexes[0] == 0, we should not have to take care whether index is\n+     * As textIndexes[0] == 0, we should not have to take care whether index is\n      * greater than 0. It is always.\n      */\n-    if (text_indexes[index] == offset)\n+    if (textIndexes[index] == offset)\n       textIndex = offset;\n     else\n-      textIndex = text_indexes[index-1];\n+      textIndex = textIndexes[index-1];\n   }\n \n   /**"}, {"sha": "9d0ace65a3ec95faaa8529698489765f7c6796f1", "filename": "libjava/classpath/java/text/DateFormatSymbols.java", "status": "modified", "additions": 269, "deletions": 46, "changes": 315, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjava%2Ftext%2FDateFormatSymbols.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjava%2Ftext%2FDateFormatSymbols.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Ftext%2FDateFormatSymbols.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -56,6 +56,11 @@\n import java.util.ServiceLoader;\n import java.util.TimeZone;\n \n+import java.util.concurrent.ConcurrentMap;\n+import java.util.concurrent.ConcurrentHashMap;\n+\n+import java.util.regex.Pattern;\n+\n import java.util.spi.TimeZoneNameProvider;\n \n /**\n@@ -71,14 +76,6 @@\n  */\n public class DateFormatSymbols implements java.io.Serializable, Cloneable\n {\n-  String[] ampms;\n-  String[] eras;\n-  private String localPatternChars;\n-  String[] months;\n-  String[] shortMonths;\n-  String[] shortWeekdays;\n-  String[] weekdays;\n-\n   /**\n    * The set of properties for obtaining the metazone data.\n    */\n@@ -100,6 +97,173 @@ public class DateFormatSymbols implements java.io.Serializable, Cloneable\n       }\n   }\n \n+  private static final Pattern ZONE_SEP = Pattern.compile(\"\\u00a9\");\n+\n+  private static final Pattern FIELD_SEP = Pattern.compile(\"\\u00ae\");\n+\n+  /**\n+   * Class for storing DateFormatSymbols data parsed from the property files.\n+   */\n+  private static class DFSData\n+  {\n+    private String[] ampms;\n+    private String[] eras;\n+    private String localPatternChars;\n+    private String[] months;\n+    private String[] shortMonths;\n+    private String[] weekdays;\n+    private String[] shortWeekdays;\n+    private String[] dateFormats;\n+    private String[] timeFormats;\n+    private String[][] runtimeZoneStrings;\n+\n+    /**\n+     * Construct a new instance with the parsed data.\n+     *\n+     * @param ampms strings for \"am\" and \"pm\".\n+     * @param eras strings for calendar eras.\n+     * @param localPatternChars localised pattern characters.\n+     * @param months strings for the months of the year.\n+     * @param shortMonths short strings for the months of the year.\n+     * @param weekdays strings for the days of the week.\n+     * @param shortWeekdays short strings for the days of the week.\n+     * @param dateFormats localised date formats.\n+     * @param timeFormats localised time formats.\n+     * @param runtimeZoneStrings localised time zone names.\n+     */\n+    public DFSData(String[] ampms, String[] eras, String localPatternChars,\n+                   String[] months, String[] shortMonths, String[] weekdays,\n+                   String[] shortWeekdays, String[] dateFormats,\n+                   String[] timeFormats, String[][] runtimeZoneStrings)\n+    {\n+      this.ampms = ampms;\n+      this.eras = eras;\n+      this.localPatternChars = localPatternChars;\n+      this.months = months;\n+      this.shortMonths = shortMonths;\n+      this.weekdays = weekdays;\n+      this.shortWeekdays = shortWeekdays;\n+      this.dateFormats = dateFormats;\n+      this.timeFormats = timeFormats;\n+      this.runtimeZoneStrings = runtimeZoneStrings;\n+    }\n+\n+    /**\n+     * Accessor for the AM/PM data.\n+     *\n+     * @return the AM/PM strings.\n+     */\n+    public String[] getAMPMs()\n+    {\n+      return ampms.clone();\n+    }\n+\n+    /**\n+     * Accessor for the era data.\n+     *\n+     * @return the era strings.\n+     */\n+    public String[] getEras()\n+    {\n+      return eras.clone();\n+    }\n+\n+    /**\n+     * Accessor for the local pattern characters.\n+     *\n+     * @return the local pattern characters.\n+     */\n+    public String getLocalPatternChars()\n+    {\n+      return localPatternChars;\n+    }\n+\n+    /**\n+     * Accessor for the months of the year (long form).\n+     *\n+     * @return the months of the year (long form).\n+     */\n+    public String[] getMonths()\n+    {\n+      return months.clone();\n+    }\n+\n+    /**\n+     * Accessor for the months of the year (short form).\n+     *\n+     * @return the months of the year (short form).\n+     */\n+    public String[] getShortMonths()\n+    {\n+      return shortMonths.clone();\n+    }\n+\n+    /**\n+     * Accessor for the days of the week (long form).\n+     *\n+     * @return the days of the week (long form).\n+     */\n+    public String[] getWeekdays()\n+    {\n+      return weekdays.clone();\n+    }\n+\n+    /**\n+     * Accessor for the days of the week (short form).\n+     *\n+     * @return the days of the week (short form).\n+     */\n+    public String[] getShortWeekdays()\n+    {\n+      return shortWeekdays.clone();\n+    }\n+\n+    /**\n+     * Accessor for the date formats.\n+     *\n+     * @return the date formats.\n+     */\n+    public String[] getDateFormats()\n+    {\n+      return dateFormats.clone();\n+    }\n+\n+    /**\n+     * Accessor for the time formats.\n+     *\n+     * @return the time formats.\n+     */\n+    public String[] getTimeFormats()\n+    {\n+      return timeFormats.clone();\n+    }\n+\n+    /**\n+     * Accessor for the zone strings.\n+     *\n+     * @return the zone strings.\n+     */\n+    public String[][] getZoneStrings()\n+    {\n+      // Perform a deep clone so subarrays aren't modifiable\n+      String[][] clone = runtimeZoneStrings.clone();\n+      for (int a = 0; a < clone.length; ++a)\n+        clone[a] = runtimeZoneStrings[a].clone();\n+      return clone;\n+    }\n+\n+  }\n+\n+  private static final ConcurrentMap<Locale, DFSData> dataCache = new ConcurrentHashMap<Locale, DFSData>();\n+\n+  String[] ampms;\n+  String[] eras;\n+  private String localPatternChars;\n+  String[] months;\n+  String[] shortMonths;\n+  String[] shortWeekdays;\n+  String[] weekdays;\n+\n   /**\n    * The timezone strings supplied by the runtime.\n    */\n@@ -161,7 +325,7 @@ private static String[] getStringArray(List<ResourceBundle> bundles, String name\n     for (int a = 0; a < bundles.size(); ++a)\n       {\n         String localeData = bundles.get(a).getString(name);\n-        String[] array = localeData.split(\"\\u00ae\", size);\n+        String[] array = FIELD_SEP.split(localeData, size);\n         for (int b = 0; b < data.length; ++b)\n           {\n             if (array.length > b && array[b] != null && data[b].isEmpty() && !array[b].isEmpty())\n@@ -180,21 +344,20 @@ private static String[] getStringArray(List<ResourceBundle> bundles, String name\n     return data;\n   }\n \n-  private String[][] getZoneStrings(ResourceBundle res, Locale locale)\n+  private static String[][] getZoneStrings(List<ResourceBundle> bundles, Locale locale)\n   {\n     List<String[]> allZones = new ArrayList<String[]>();\n     try\n       {\n         Map<String,String[]> systemZones = new HashMap<String,String[]>();\n-        while (true)\n+        for (ResourceBundle bundle : bundles)\n           {\n-            int index = 0;\n             String country = locale.getCountry();\n-            String data = res.getString(\"zoneStrings\");\n-            String[] zones = data.split(\"\\u00a9\");\n+            String data = bundle.getString(\"zoneStrings\");\n+            String[] zones = ZONE_SEP.split(data);\n             for (int a = 0; a < zones.length; ++a)\n               {\n-                String[] strings = zones[a].split(\"\\u00ae\");\n+                String[] strings = FIELD_SEP.split(zones[a]);\n                 String type = properties.getProperty(strings[0] + \".\" + country);\n                 if (type == null)\n                   type = properties.getProperty(strings[0] + \".DEFAULT\");\n@@ -217,12 +380,6 @@ private String[][] getZoneStrings(ResourceBundle res, Locale locale)\n                   }\n                 systemZones.put(strings[0], strings);\n               }\n-            if (res.getLocale() == Locale.ROOT)\n-              break;\n-            else\n-              res = ResourceBundle.getBundle(\"gnu.java.locale.LocaleInformation\",\n-                                             LocaleHelper.getFallbackLocale(res.getLocale()),\n-                                             ClassLoader.getSystemClassLoader());\n           }\n         /* Final sanity check for missing values */\n         for (String[] zstrings : systemZones.values())\n@@ -288,16 +445,94 @@ private String[][] getZoneStrings(ResourceBundle res, Locale locale)\n     return allZones.toArray(new String[allZones.size()][]);\n   }\n \n-  private String[] formatsForKey(ResourceBundle res, String key)\n+  /**\n+   * Retrieve the date or time formats for a specific key e.g.\n+   * asking for \"DateFormat\" will return an array containing the\n+   * full, long, medium and short date formats localised for\n+   * the locales in the specified bundle.\n+   *\n+   * @param bundles the stack of bundles to check, most-specific first.\n+   * @param key the type of format to retrieve.\n+   * @param an array of localised strings for each format prefix.\n+   */\n+  private static String[] formatsForKey(List<ResourceBundle> bundles, String key)\n   {\n     String[] values = new String[formatPrefixes.length];\n \n     for (int i = 0; i < formatPrefixes.length; i++)\n-      values[i] = res.getString(formatPrefixes[i] + key);\n+      values[i] = getString(bundles, formatPrefixes[i] + key);\n \n     return values;\n   }\n \n+  /**\n+   * Simple wrapper around extracting a {@code String} from a\n+   * {@code ResourceBundle}.  Keep searching less-specific locales\n+   * until a non-null non-empty value is found.\n+   *\n+   * @param bundles the stack of bundles to check, most-specific first.\n+   * @param key the key of the value to retrieve.\n+   * @return the first non-null non-empty String found or the last\n+   *         retrieved if one isn't found.\n+   */\n+  private static String getString(List<ResourceBundle> bundles, String key)\n+  {\n+    String val = null;\n+    for (ResourceBundle bundle : bundles)\n+      {\n+        val = bundle.getString(key);\n+        if (val != null && !val.isEmpty())\n+          return val;\n+      }\n+    return val;\n+  }\n+\n+  /**\n+   * Retrieves the locale data from the property files and constructs a\n+   * {@code DFSData} instance for it.\n+   *\n+   * @param the locale for which data should be retrieved.\n+   * @return the parsed data.\n+   * @throws MissingResourceException if the resources for the specified\n+   *                                  locale could not be found or loaded.\n+   */\n+  private static DFSData retrieveData(Locale locale)\n+    throws MissingResourceException\n+  {\n+    DFSData data = dataCache.get(locale);\n+    if (data == null)\n+      {\n+        ClassLoader ldr = ClassLoader.getSystemClassLoader();\n+        List<ResourceBundle> bundles = new ArrayList<ResourceBundle>();\n+        ResourceBundle res\n+          = ResourceBundle.getBundle(\"gnu.java.locale.LocaleInformation\", locale, ldr);\n+        bundles.add(res);\n+        Locale resLocale = res.getLocale();\n+        while (resLocale != Locale.ROOT)\n+          {\n+            res = ResourceBundle.getBundle(\"gnu.java.locale.LocaleInformation\",\n+                                           LocaleHelper.getFallbackLocale(resLocale), ldr);\n+            bundles.add(res);\n+            resLocale = res.getLocale();\n+          }\n+        String[] lMonths = getStringArray(bundles, \"months\", 13);\n+        String[] lWeekdays = getStringArray(bundles, \"weekdays\", 8);\n+        data = new DFSData(getStringArray(bundles, \"ampms\", 2),\n+                           getStringArray(bundles, \"eras\", 2),\n+                           getString(bundles, \"localPatternChars\"),\n+                           lMonths, getStringArray(bundles, \"shortMonths\", 13, lMonths),\n+                           lWeekdays, getStringArray(bundles, \"shortWeekdays\", 8, lWeekdays),\n+                           formatsForKey(bundles, \"DateFormat\"),\n+                           formatsForKey(bundles, \"TimeFormat\"),\n+                           getZoneStrings(bundles, locale));\n+        DFSData cachedData = dataCache.putIfAbsent(locale, data);\n+        // Use the earlier version if another thread beat us to it.\n+        if (cachedData != null)\n+          data = cachedData;\n+      }\n+    return data;\n+  }\n+\n   /**\n    * This method initializes a new instance of <code>DateFormatSymbols</code>\n    * by loading the date format information for the specified locale.\n@@ -314,29 +549,17 @@ private String[] formatsForKey(ResourceBundle res, String key)\n   public DateFormatSymbols (Locale locale)\n     throws MissingResourceException\n   {\n-    ClassLoader ldr = ClassLoader.getSystemClassLoader();\n-    List<ResourceBundle> bundles = new ArrayList<ResourceBundle>();\n-    ResourceBundle res\n-      = ResourceBundle.getBundle(\"gnu.java.locale.LocaleInformation\", locale, ldr);\n-    bundles.add(res);\n-    Locale resLocale = res.getLocale();\n-    while (resLocale != Locale.ROOT)\n-      {\n-        res = ResourceBundle.getBundle(\"gnu.java.locale.LocaleInformation\",\n-                                       LocaleHelper.getFallbackLocale(resLocale), ldr);\n-        bundles.add(res);\n-        resLocale = res.getLocale();\n-      }\n-    ampms = getStringArray(bundles, \"ampms\", 2);\n-    eras = getStringArray(bundles, \"eras\", 2);\n-    localPatternChars = res.getString(\"localPatternChars\");\n-    months = getStringArray(bundles, \"months\", 13);\n-    shortMonths = getStringArray(bundles, \"shortMonths\", 13, months);\n-    weekdays = getStringArray(bundles, \"weekdays\", 8);\n-    shortWeekdays = getStringArray(bundles, \"shortWeekdays\", 8, weekdays);\n-    dateFormats = formatsForKey(res, \"DateFormat\");\n-    timeFormats = formatsForKey(res, \"TimeFormat\");\n-    runtimeZoneStrings = getZoneStrings(res, locale);\n+    DFSData data = retrieveData(locale);\n+    ampms = data.getAMPMs();\n+    eras = data.getEras();\n+    localPatternChars = data.getLocalPatternChars();\n+    months = data.getMonths();\n+    shortMonths = data.getShortMonths();\n+    weekdays = data.getWeekdays();\n+    shortWeekdays = data.getShortWeekdays();\n+    dateFormats = data.getDateFormats();\n+    timeFormats = data.getTimeFormats();\n+    runtimeZoneStrings = data.getZoneStrings();\n   }\n \n   /**"}, {"sha": "77af0d396c4c995486281d19ce321403894de3ae", "filename": "libjava/classpath/java/text/DecimalFormat.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjava%2Ftext%2FDecimalFormat.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjava%2Ftext%2FDecimalFormat.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Ftext%2FDecimalFormat.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -1,5 +1,5 @@\n /* DecimalFormat.java -- Formats and parses numbers\n-   Copyright (C) 1999, 2000, 2001, 2003, 2004, 2005  Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2000, 2001, 2003, 2004, 2005, 2012  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -177,7 +177,7 @@ public class DecimalFormat extends NumberFormat\n   private boolean hasFractionalPattern;\n \n   /** Stores a list of attributes for use by formatToCharacterIterator. */\n-  private ArrayList attributes = new ArrayList();\n+  private ArrayList<FieldPosition> attributes = new ArrayList<FieldPosition>();\n \n   /**\n    * Constructs a <code>DecimalFormat</code> which uses the default\n@@ -438,7 +438,7 @@ public AttributedCharacterIterator formatToCharacterIterator(Object value)\n     // add NumberFormat field attributes to the AttributedString\n     for (int i = 0; i < attributes.size(); i++)\n       {\n-        FieldPosition pos = (FieldPosition) attributes.get(i);\n+        FieldPosition pos = attributes.get(i);\n         Format.Field attribute = pos.getFieldAttribute();\n \n         as.addAttribute(attribute, attribute, pos.getBeginIndex(),"}, {"sha": "0e04b2b447a02c4330cd929600f8a166a11833c0", "filename": "libjava/classpath/java/text/MessageFormat.java", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjava%2Ftext%2FMessageFormat.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjava%2Ftext%2FMessageFormat.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Ftext%2FMessageFormat.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -1,5 +1,5 @@\n /* MessageFormat.java - Localized message formatting.\n-   Copyright (C) 1999, 2001, 2002, 2004, 2005 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2001, 2002, 2004, 2005, 2012 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -164,7 +164,6 @@ public static class Field extends Format.Field\n     public static final MessageFormat.Field ARGUMENT = new MessageFormat.Field(\"argument\");\n \n     // For deserialization\n-    @SuppressWarnings(\"unused\")\n     private Field()\n     {\n       super(\"\");"}, {"sha": "555ee373957bd88d5cdf841e1ccf20c5cd4d17ac", "filename": "libjava/classpath/java/text/NumberFormat.java", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjava%2Ftext%2FNumberFormat.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjava%2Ftext%2FNumberFormat.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Ftext%2FNumberFormat.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -1,5 +1,5 @@\n /* NumberFormat.java -- Formats and parses numbers\n-   Copyright (C) 1998, 1999, 2000, 2001, 2003, 2004, 2007\n+   Copyright (C) 1998, 1999, 2000, 2001, 2003, 2004, 2007, 2012\n    Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n@@ -177,7 +177,6 @@ public static class Field extends Format.Field\n      * This constructor is only used by the deserializer. Without it,\n      * it would fail to construct a valid object.\n      */\n-    @SuppressWarnings(\"unused\")\n     private Field()\n     {\n       super(\"\");"}, {"sha": "b970dd8f60a4ba92d909abf27c9a780eb1f30785", "filename": "libjava/classpath/java/util/Collections.java", "status": "modified", "additions": 18, "deletions": 14, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjava%2Futil%2FCollections.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjava%2Futil%2FCollections.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Futil%2FCollections.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -120,10 +120,10 @@ private Collections()\n    * @return an empty parameterized set.\n    * @since 1.5\n    */\n+  @SuppressWarnings(\"unchecked\")\n   public static final <T> Set<T> emptySet()\n   {\n-    /* FIXME: Could this be optimized? */\n-    return new EmptySet<T>();\n+    return (Set<T>) EMPTY_SET;\n   }\n \n   /**\n@@ -161,6 +161,7 @@ public int size()\n      * @return A non-iterating iterator.\n      */\n     // This is really cheating! I think it's perfectly valid, though.\n+    @SuppressWarnings(\"unchecked\")\n     public Iterator<T> iterator()\n     {\n       return (Iterator<T>) EMPTY_LIST.iterator();\n@@ -196,7 +197,7 @@ public boolean containsAll(Collection<?> c)\n      */\n     public boolean equals(Object o)\n     {\n-      return o instanceof Set && ((Set) o).isEmpty();\n+      return o instanceof Set<?> && ((Set<?>) o).isEmpty();\n     }\n \n     /**\n@@ -288,10 +289,10 @@ public String toString()\n    * @return an empty parameterized list.\n    * @since 1.5\n    */\n+  @SuppressWarnings(\"unchecked\")\n   public static final <T> List<T> emptyList()\n   {\n-    /* FIXME: Could this be optimized? */\n-    return new EmptyList<T>();\n+    return (List<T>) EMPTY_LIST;\n   }\n \n   /**\n@@ -369,7 +370,7 @@ public boolean containsAll(Collection<?> c)\n      */\n     public boolean equals(Object o)\n     {\n-      return o instanceof List && ((List) o).isEmpty();\n+      return o instanceof List<?> && ((List<?>) o).isEmpty();\n     }\n \n     /**\n@@ -480,10 +481,10 @@ public String toString()\n    * @return an empty parameterized map.\n    * @since 1.5\n    */\n+  @SuppressWarnings(\"unchecked\")\n   public static final <K,V> Map<K,V> emptyMap()\n   {\n-    /* FIXME: Could this be optimized? */\n-    return new EmptyMap<K,V>();\n+    return (Map<K,V>) EMPTY_MAP;\n   }\n \n   /**\n@@ -511,9 +512,10 @@ public static final <K,V> Map<K,V> emptyMap()\n      * There are no entries.\n      * @return The empty set.\n      */\n+    @SuppressWarnings(\"unchecked\")\n     public Set<Map.Entry<K, V>> entrySet()\n     {\n-      return EMPTY_SET;\n+      return (Set<Map.Entry<K, V>>) EMPTY_SET;\n     }\n \n     // The remaining methods are optional, but provide a performance\n@@ -546,7 +548,7 @@ public boolean containsValue(Object value)\n      */\n     public boolean equals(Object o)\n     {\n-      return o instanceof Map && ((Map) o).isEmpty();\n+      return o instanceof Map<?,?> && ((Map<?,?>) o).isEmpty();\n     }\n \n     /**\n@@ -572,9 +574,10 @@ public int hashCode()\n      * No entries.\n      * @return The empty set.\n      */\n+    @SuppressWarnings(\"unchecked\")\n     public Set<K> keySet()\n     {\n-      return EMPTY_SET;\n+      return (Set<K>) EMPTY_SET;\n     }\n \n     /**\n@@ -601,9 +604,10 @@ public int size()\n      * Collection, will work. Besides, that's what the JDK uses!\n      * @return The empty set.\n      */\n+    @SuppressWarnings(\"unchecked\")\n     public Collection<V> values()\n     {\n-      return EMPTY_SET;\n+      return (Collection<V>) EMPTY_SET;\n     }\n \n     /**\n@@ -1854,7 +1858,7 @@ public int lastIndexOf(Object o)\n     public List<T> subList(int from, int to)\n     {\n       if (from == to && (to == 0 || to == 1))\n-        return EMPTY_LIST;\n+        return emptyList();\n       if (from == 0 && to == 1)\n         return this;\n       if (from > to)\n@@ -2480,7 +2484,7 @@ public Object[] toArray()\n      * @throws ArrayStoreException if the type of any element of the\n      *         collection is not a subtype of the element type of a.\n      */\n-    public <T> T[] toArray(T[] a)\n+    public <E> E[] toArray(E[] a)\n     {\n       synchronized (mutex)\n         {"}, {"sha": "466fab535ae98cbf25e1387962230bc3d9e87512", "filename": "libjava/classpath/java/util/Formatter.java", "status": "modified", "additions": 18, "deletions": 3, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjava%2Futil%2FFormatter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjava%2Futil%2FFormatter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Futil%2FFormatter.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -678,6 +678,12 @@ private void characterFormat(Object arg, int flags, int width, int precision,\n                conversion);\n     noPrecision(precision);\n \n+    if (arg == null)\n+      {\n+        genericFormat(\"null\", flags, width, precision);\n+        return;\n+      }\n+\n     int theChar;\n     if (arg instanceof Character)\n       theChar = ((Character) arg).charValue();\n@@ -748,6 +754,12 @@ private CPStringBuilder basicIntegralConversion(Object arg, int flags,\n                                                   int radix, char conversion)\n   {\n     assert radix == 8 || radix == 10 || radix == 16;\n+\n+    if (arg == null)\n+      {\n+        return new CPStringBuilder(\"null\");\n+      }\n+\n     noPrecision(precision);\n \n     // Some error checking.\n@@ -1353,9 +1365,12 @@ else if (argumentIndex == 0)\n                   argumentIndex = previousArgumentIndex;\n                 // Argument indices start at 1 but array indices at 0.\n                 --argumentIndex;\n-                if (argumentIndex < 0 || argumentIndex >= args.length)\n-                  throw new MissingFormatArgumentException(format.substring(start, index));\n-                argument = args[argumentIndex];\n+                if (args != null)\n+                  {\n+                    if (argumentIndex < 0 || argumentIndex >= args.length)\n+                      throw new MissingFormatArgumentException(format.substring(start, index));\n+                    argument = args[argumentIndex];\n+                  }\n               }\n \n             switch (conversion)"}, {"sha": "a8b2b51cf8c2a1c98590f79834339dba6e0b3d79", "filename": "libjava/classpath/java/util/TimeZone.java", "status": "modified", "additions": 26, "deletions": 26, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjava%2Futil%2FTimeZone.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjava%2Futil%2FTimeZone.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Futil%2FTimeZone.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -1,5 +1,5 @@\n /* java.util.TimeZone\n-   Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2007\n+   Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2007, 2012\n    Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n@@ -102,10 +102,10 @@ private static synchronized TimeZone defaultZone()\n     /* Look up default timezone */\n     if (defaultZone0 == null)\n       {\n-        defaultZone0 = (TimeZone) AccessController.doPrivileged\n-          (new PrivilegedAction()\n+        defaultZone0 = AccessController.doPrivileged\n+          (new PrivilegedAction<TimeZone>()\n             {\n-              public Object run()\n+              public TimeZone run()\n               {\n                 TimeZone zone = null;\n \n@@ -146,21 +146,21 @@ public Object run()\n   /**\n    * JDK 1.1.x compatibility aliases.\n    */\n-  private static HashMap aliases0;\n+  private static HashMap<String,String> aliases0;\n \n   /**\n    * HashMap for timezones by ID.\n    */\n-  private static HashMap timezones0;\n+  private static HashMap<String,TimeZone> timezones0;\n   /* initialize this static field lazily to overhead if\n    * it is not needed:\n    */\n   // Package-private to avoid a trampoline.\n-  static HashMap timezones()\n+  static HashMap<String,TimeZone> timezones()\n   {\n     if (timezones0 == null)\n       {\n-        HashMap timezones = new HashMap();\n+        HashMap<String,TimeZone> timezones = new HashMap<String,TimeZone>();\n         timezones0 = timezones;\n \n         zoneinfo_dir = SystemProperties.getProperty(\"gnu.java.util.zoneinfo.dir\");\n@@ -169,7 +169,7 @@ static HashMap timezones()\n \n         if (zoneinfo_dir != null)\n           {\n-            aliases0 = new HashMap();\n+            aliases0 = new HashMap<String,String>();\n \n             // These deprecated aliases for JDK 1.1.x compatibility\n             // should take precedence over data files read from\n@@ -1469,7 +1469,7 @@ private static TimeZone getTimeZoneInternal(String ID)\n       {\n         synchronized (TimeZone.class)\n           {\n-            tz = (TimeZone) timezones().get(ID);\n+            tz = timezones().get(ID);\n             if (tz != null)\n               {\n                 if (!tz.getID().equals(ID))\n@@ -1497,7 +1497,7 @@ else if (tznew != null)\n \n         // aliases0 is never changing after first timezones(), so should\n         // be safe without synchronization.\n-        String zonename = (String) aliases0.get(ID);\n+        String zonename = aliases0.get(ID);\n         if (zonename == null)\n           zonename = ID;\n \n@@ -1605,17 +1605,17 @@ public static String[] getAvailableIDs(int rawOffset)\n   {\n     synchronized (TimeZone.class)\n       {\n-        HashMap h = timezones();\n+        HashMap<String,TimeZone> h = timezones();\n         int count = 0;\n         if (zoneinfo_dir == null)\n           {\n-            Iterator iter = h.entrySet().iterator();\n+            Iterator<Map.Entry<String,TimeZone>> iter = h.entrySet().iterator();\n             while (iter.hasNext())\n               {\n                 // Don't iterate the values, since we want to count\n                 // doubled values (aliases)\n-                Map.Entry entry = (Map.Entry) iter.next();\n-                if (((TimeZone) entry.getValue()).getRawOffset() == rawOffset)\n+                Map.Entry<String,TimeZone> entry = iter.next();\n+                if (entry.getValue().getRawOffset() == rawOffset)\n                   count++;\n               }\n \n@@ -1624,8 +1624,8 @@ public static String[] getAvailableIDs(int rawOffset)\n             iter = h.entrySet().iterator();\n             while (iter.hasNext())\n               {\n-                Map.Entry entry = (Map.Entry) iter.next();\n-                if (((TimeZone) entry.getValue()).getRawOffset() == rawOffset)\n+                Map.Entry<String,TimeZone> entry = iter.next();\n+                if (entry.getValue().getRawOffset() == rawOffset)\n                   ids[count++] = (String) entry.getKey();\n               }\n             return ids;\n@@ -1651,7 +1651,7 @@ public static String[] getAvailableIDs(int rawOffset)\n     return ids;\n   }\n \n-  private static int getAvailableIDs(File d, String prefix, ArrayList list)\n+  private static int getAvailableIDs(File d, String prefix, ArrayList<String[]> list)\n     {\n       String[] files = d.list();\n       int count = files.length;\n@@ -1691,9 +1691,9 @@ public static String[] getAvailableIDs()\n   {\n     synchronized (TimeZone.class)\n       {\n-        HashMap h = timezones();\n+        HashMap<String,TimeZone> h = timezones();\n         if (zoneinfo_dir == null)\n-          return (String[]) h.keySet().toArray(new String[h.size()]);\n+          return h.keySet().toArray(new String[h.size()]);\n \n         if (availableIDs != null)\n           {\n@@ -1704,15 +1704,15 @@ public static String[] getAvailableIDs()\n           }\n \n         File d = new File(zoneinfo_dir);\n-        ArrayList list = new ArrayList(30);\n+        ArrayList<String[]> list = new ArrayList<String[]>(30);\n         int count = getAvailableIDs(d, \"\", list) + aliases0.size();\n         availableIDs = new String[count];\n         String[] ids = new String[count];\n \n         count = 0;\n         for (int i = 0; i < list.size(); i++)\n           {\n-            String[] s = (String[]) list.get(i);\n+            String[] s = list.get(i);\n             for (int j = 0; j < s.length; j++)\n               if (s[j] != null)\n                 {\n@@ -1721,12 +1721,12 @@ public static String[] getAvailableIDs()\n                 }\n           }\n \n-        Iterator iter = aliases0.entrySet().iterator();\n+        Iterator<Map.Entry<String,String>> iter = aliases0.entrySet().iterator();\n         while (iter.hasNext())\n           {\n-            Map.Entry entry = (Map.Entry) iter.next();\n-            availableIDs[count] = (String) entry.getKey();\n-            ids[count++] = (String) entry.getKey();\n+            Map.Entry<String,String> entry = iter.next();\n+            availableIDs[count] = entry.getKey();\n+            ids[count++] = entry.getKey();\n           }\n \n         return ids;"}, {"sha": "95a35535935ca1161c99095b13c7f59069cb7674", "filename": "libjava/classpath/java/util/regex/Matcher.java", "status": "modified", "additions": 23, "deletions": 1, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjava%2Futil%2Fregex%2FMatcher.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjava%2Futil%2Fregex%2FMatcher.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Futil%2Fregex%2FMatcher.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -102,6 +102,28 @@ public final class Matcher implements MatchResult\n     anchoringBounds = 0;\n   }\n \n+  /**\n+   * Changes the pattern used by the {@link Matcher} to\n+   * the one specified.  Existing match information is lost,\n+   * but the input and the matcher's position within it is\n+   * retained.\n+   *\n+   * @param newPattern the new pattern to use.\n+   * @return this matcher.\n+   * @throws IllegalArgumentException if {@code newPattern} is\n+   *                                  {@code null}.\n+   * @since 1.5\n+   */\n+  public Matcher usePattern(Pattern newPattern)\n+  {\n+    if (newPattern == null)\n+      throw new IllegalArgumentException(\"The new pattern was null.\");\n+    pattern = newPattern;\n+    match = null;\n+\n+    return this;\n+  }\n+\n   /**\n    * @param sb The target string buffer\n    * @param replacement The replacement string\n@@ -620,7 +642,7 @@ public MatchResult toMatchResult()\n    *\n    * @param s the string to literalize.\n    * @return the literalized string.\n-   *\u00a0@since 1.5\n+   * @since 1.5\n    */\n   public static String quoteReplacement(String s)\n   {"}, {"sha": "0ab5a8097b8a744a66a2aa7183c47d0f91e08d87", "filename": "libjava/classpath/javax/activation/ActivationDataFlavor.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjavax%2Factivation%2FActivationDataFlavor.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjavax%2Factivation%2FActivationDataFlavor.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjavax%2Factivation%2FActivationDataFlavor.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -63,7 +63,7 @@ public class ActivationDataFlavor extends DataFlavor\n      * flavor\n      */\n   // Raw types enforced as part of spec.\n-  @SuppressWarnings(\"unchecked\")\n+  @SuppressWarnings(\"rawtypes\")\n     public ActivationDataFlavor(Class representationClass, String mimeType,\n             String humanPresentableName)\n     {\n@@ -80,7 +80,7 @@ public ActivationDataFlavor(Class representationClass, String mimeType,\n      * flavor\n      */\n   // Raw types enforced as part of spec.\n-  @SuppressWarnings(\"unchecked\")\n+  @SuppressWarnings(\"rawtypes\")\n     public ActivationDataFlavor(Class representationClass,\n             String humanPresentableName)\n     {\n@@ -110,7 +110,7 @@ public String getMimeType()\n     }\n \n   // Raw types enforced as part of spec.\n-  @SuppressWarnings(\"unchecked\")\n+  @SuppressWarnings(\"rawtypes\")\n     public Class getRepresentationClass()\n     {\n         return representationClass;"}, {"sha": "24c9486f1fe29cc0740ed8dd475e268162d9acc6", "filename": "libjava/classpath/javax/activation/MimeTypeParameterList.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjavax%2Factivation%2FMimeTypeParameterList.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjavax%2Factivation%2FMimeTypeParameterList.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjavax%2Factivation%2FMimeTypeParameterList.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -224,7 +224,7 @@ public synchronized void remove(String name)\n    * Returns an enumeration of all the parameter names.\n    */\n   // Raw type is forced by public spec.\n-  @SuppressWarnings(\"unchecked\")\n+  @SuppressWarnings(\"rawtypes\")\n   public synchronized Enumeration getNames()\n   {\n     return new IteratorEnumeration(parameterNames.iterator());"}, {"sha": "d70bf7efec589cfe61d38c22a00f5dc0e88b40af", "filename": "libjava/classpath/javax/management/DefaultLoaderRepository.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjavax%2Fmanagement%2FDefaultLoaderRepository.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjavax%2Fmanagement%2FDefaultLoaderRepository.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjavax%2Fmanagement%2FDefaultLoaderRepository.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -78,7 +78,7 @@\n    *                                to load the class.\n    */\n   // API issue with lack of <?> on Class\n-  @SuppressWarnings(\"unchecked\")\n+  @SuppressWarnings(\"rawtypes\")\n   public static Class loadClass(String name)\n     throws ClassNotFoundException\n   {\n@@ -127,7 +127,7 @@ public static Class loadClass(String name)\n    *                                to load the class.\n    */\n   // API issue with lack of <?> on Class\n-  @SuppressWarnings(\"unchecked\")\n+  @SuppressWarnings(\"rawtypes\")\n   public static Class loadClassWithout(ClassLoader exclude, String name)\n     throws ClassNotFoundException\n   {"}, {"sha": "3d5ebdab0ce8c7f6bb89d685df8245cf910366b0", "filename": "libjava/classpath/javax/management/MBeanConstructorInfo.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjavax%2Fmanagement%2FMBeanConstructorInfo.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjavax%2Fmanagement%2FMBeanConstructorInfo.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjavax%2Fmanagement%2FMBeanConstructorInfo.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -76,7 +76,7 @@\n    * @param cons the constructor.\n    */\n   // API issue with lack of <?> on Constructor\n-  @SuppressWarnings(\"unchecked\")\n+  @SuppressWarnings(\"rawtypes\")\n   public MBeanConstructorInfo(String desc, Constructor cons)\n   {\n     super(cons.getName(), desc);"}, {"sha": "edf8c895c8682070ae9dc087188c39cb6108d5df", "filename": "libjava/classpath/javax/management/remote/rmi/RMIConnection.java", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjavax%2Fmanagement%2Fremote%2Frmi%2FRMIConnection.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjavax%2Fmanagement%2Fremote%2Frmi%2FRMIConnection.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjavax%2Fmanagement%2Fremote%2Frmi%2FRMIConnection.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -152,7 +152,7 @@\n    *                                                      NotificationFilter,\n    *                                                      Object)\n    */\n-  @SuppressWarnings(\"unchecked\")\n+  @SuppressWarnings(\"rawtypes\")\n   void addNotificationListener(ObjectName name, ObjectName listener,\n                                MarshalledObject filter, MarshalledObject passback,\n                                Subject delegationSubject)\n@@ -224,7 +224,7 @@ void addNotificationListener(ObjectName name, ObjectName listener,\n    *                                                      NotificationFilter,\n    *                                                      Object)\n    */\n-  @SuppressWarnings(\"unchecked\")\n+  @SuppressWarnings(\"rawtypes\")\n   Integer[] addNotificationListeners(ObjectName[] names, MarshalledObject[] filters,\n                                      Subject[] delegationSubjects)\n     throws InstanceNotFoundException, IOException;\n@@ -298,7 +298,7 @@ void close()\n    * @throws IOException if an I/O error occurred in communicating with\n    *                     the bean server.\n    */\n-  @SuppressWarnings(\"unchecked\")\n+  @SuppressWarnings(\"rawtypes\")\n   ObjectInstance createMBean(String className, ObjectName name,\n                              MarshalledObject params, String[] sig,\n                              Subject delegationSubject)\n@@ -367,7 +367,7 @@ ObjectInstance createMBean(String className, ObjectName name,\n    * @throws IOException if an I/O error occurred in communicating with\n    *                     the bean server.\n    */\n-  @SuppressWarnings(\"unchecked\")\n+  @SuppressWarnings(\"rawtypes\")\n   ObjectInstance createMBean(String className, ObjectName name,\n                              ObjectName loaderName, MarshalledObject params,\n                              String[] sig, Subject delegationSubject)\n@@ -767,7 +767,7 @@ ObjectInstance getObjectInstance(ObjectName name, Subject delegationSubject)\n    *                     the bean server.\n    * @see DynamicMBean#invoke(String, Object[], String[])\n    */\n-  @SuppressWarnings(\"unchecked\")\n+  @SuppressWarnings(\"rawtypes\")\n   Object invoke(ObjectName bean, String name, MarshalledObject params,\n                 String[] sig, Subject delegationSubject)\n     throws InstanceNotFoundException, MBeanException,\n@@ -871,7 +871,7 @@ boolean isRegistered(ObjectName name, Subject delegationSubject)\n    * @throws SecurityException if the client or delegated subject (if any) does\n    *                           not have permission to invoke this operation.\n    */\n-  @SuppressWarnings(\"unchecked\")\n+  @SuppressWarnings(\"rawtypes\")\n   Set<ObjectInstance> queryMBeans(ObjectName name, MarshalledObject query,\n                                   Subject delegationSubject)\n     throws IOException;\n@@ -914,7 +914,7 @@ Set<ObjectInstance> queryMBeans(ObjectName name, MarshalledObject query,\n    * @throws IOException if an I/O error occurred in communicating with\n    *                     the bean server.\n    */\n-  @SuppressWarnings(\"unchecked\")\n+  @SuppressWarnings(\"rawtypes\")\n   Set<ObjectName> queryNames(ObjectName name, MarshalledObject query,\n                              Subject delegationSubject)\n     throws IOException;\n@@ -960,7 +960,7 @@ Set<ObjectName> queryNames(ObjectName name, MarshalledObject query,\n    *                                                     NotificationFilter,\n    *                                                     Object)\n    */\n-  @SuppressWarnings(\"unchecked\")\n+  @SuppressWarnings(\"rawtypes\")\n   void removeNotificationListener(ObjectName name,\n                                   ObjectName listener,\n                                   MarshalledObject filter,\n@@ -1080,7 +1080,7 @@ void removeNotificationListeners(ObjectName name, Integer[] listenerIds,\n    * @see #getAttribute(ObjectName, String, Subject)\n    * @see javax.management.DynamicMBean#setAttribute(Attribute)\n    */\n-  @SuppressWarnings(\"unchecked\")\n+  @SuppressWarnings(\"rawtypes\")\n   void setAttribute(ObjectName name, MarshalledObject attribute,\n                     Subject delegationSubject)\n     throws InstanceNotFoundException, AttributeNotFoundException,\n@@ -1121,7 +1121,7 @@ void setAttribute(ObjectName name, MarshalledObject attribute,\n    * @see #getAttributes(ObjectName, String[])\n    * @see DynamicMBean#setAttributes(AttributeList)\n    */\n-  @SuppressWarnings(\"unchecked\")\n+  @SuppressWarnings(\"rawtypes\")\n   AttributeList setAttributes(ObjectName name, MarshalledObject attributes,\n                               Subject delegationSubject)\n     throws InstanceNotFoundException, ReflectionException,"}, {"sha": "475be09e01e27f1e470a604e3695142033d561b8", "filename": "libjava/classpath/javax/security/sasl/Sasl.java", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjavax%2Fsecurity%2Fsasl%2FSasl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjavax%2Fsecurity%2Fsasl%2FSasl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjavax%2Fsecurity%2Fsasl%2FSasl.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -265,6 +265,16 @@\n    */\n   public static final String REUSE = \"javax.security.sasl.reuse\";\n \n+  /**\n+   * <p>The name of a property which specifies the credentials to use.\n+   * The value of the property is a mechanism-specific object which can\n+   * be used to supply credentials to a mechanism which provides delegated\n+   * authentication.</p>\n+   *\n+   * <p>The value of this constant is <code>\"javax.security.sasl.credentials\"</code>.</p>\n+   */\n+  public static final String CREDENTIALS = \"javax.security.sasl.credentials\";\n+\n   private static final String CLIENT_FACTORY_SVC = \"SaslClientFactory.\";\n   private static final String SERVER_FACTORY_SVC = \"SaslServerFactory.\";\n   private static final String ALIAS = \"Alg.Alias.\";"}, {"sha": "0aab153cbfa36d09a25612d085efb2dcf63f2b05", "filename": "libjava/classpath/javax/sound/midi/MetaMessage.java", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjavax%2Fsound%2Fmidi%2FMetaMessage.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjavax%2Fsound%2Fmidi%2FMetaMessage.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjavax%2Fsound%2Fmidi%2FMetaMessage.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -120,10 +120,12 @@ public void setMessage(int type, byte[] data, int length)\n \n     // Now compute the length representation\n     long buffer = length & 0x7F;\n-    while ((length >>= 7) > 0)\n+    // Avoid altering length variable; PR42551\n+    lengthValue = length;\n+    while ((lengthValue >>= 7) > 0)\n     {\n       buffer <<= 8;\n-      buffer |= ((length & 0x7F) | 0x80);\n+      buffer |= ((lengthValue & 0x7F) | 0x80);\n     }\n \n     // Now store the variable length length value"}, {"sha": "7ce22caedfc2751f52aaf867c7fc023f654adffe", "filename": "libjava/classpath/javax/sound/midi/MidiDevice.java", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjavax%2Fsound%2Fmidi%2FMidiDevice.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjavax%2Fsound%2Fmidi%2FMidiDevice.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjavax%2Fsound%2Fmidi%2FMidiDevice.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -46,6 +46,7 @@\n  *\n  */\n public interface MidiDevice\n+  extends AutoCloseable\n {\n   /**\n    * Get the Info object describing this device."}, {"sha": "0e3680563fbd2f0c8dc65419a6f5392054187a10", "filename": "libjava/classpath/javax/sound/midi/MidiSystem.java", "status": "modified", "additions": 40, "deletions": 31, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjavax%2Fsound%2Fmidi%2FMidiSystem.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjavax%2Fsound%2Fmidi%2FMidiSystem.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjavax%2Fsound%2Fmidi%2FMidiSystem.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -1,5 +1,5 @@\n /* MidiSystem.java -- Access system MIDI resources\n-   Copyright (C) 2005 Free Software Foundation, Inc.\n+   Copyright (C) 2005, 2012 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -76,9 +76,9 @@ private MidiSystem()\n    */\n   public static MidiDevice.Info[] getMidiDeviceInfo()\n   {\n-    Iterator deviceProviders =\n+    Iterator<MidiDeviceProvider> deviceProviders =\n         ServiceFactory.lookupProviders(MidiDeviceProvider.class);\n-    List infoList = new ArrayList();\n+    List<MidiDevice.Info> infoList = new ArrayList<MidiDevice.Info>();\n \n     while (deviceProviders.hasNext())\n     {\n@@ -88,8 +88,7 @@ public static MidiDevice.Info[] getMidiDeviceInfo()\n         infoList.add(infos[--i]);\n     }\n \n-    return (MidiDevice.Info[])\n-        infoList.toArray(new MidiDevice.Info[infoList.size()]);\n+    return infoList.toArray(new MidiDevice.Info[infoList.size()]);\n   }\n \n   /**\n@@ -103,7 +102,7 @@ public static MidiDevice.Info[] getMidiDeviceInfo()\n   public static MidiDevice getMidiDevice(MidiDevice.Info info)\n     throws MidiUnavailableException\n   {\n-    Iterator deviceProviders =\n+    Iterator<MidiDeviceProvider> deviceProviders =\n         ServiceFactory.lookupProviders(MidiDeviceProvider.class);\n \n     if (! deviceProviders.hasNext())\n@@ -216,10 +215,11 @@ public static Sequencer getSequencer() throws MidiUnavailableException\n   public static Soundbank getSoundbank(InputStream stream)\n     throws InvalidMidiDataException, IOException\n   {\n-    Iterator readers = ServiceFactory.lookupProviders(SoundbankReader.class);\n+    Iterator<SoundbankReader> readers =\n+      ServiceFactory.lookupProviders(SoundbankReader.class);\n     while (readers.hasNext())\n     {\n-      SoundbankReader sr = (SoundbankReader) readers.next();\n+      SoundbankReader sr = readers.next();\n       Soundbank sb = sr.getSoundbank(stream);\n       if (sb != null)\n         return sb;\n@@ -238,10 +238,11 @@ public static Soundbank getSoundbank(InputStream stream)\n   public static Soundbank getSoundbank(URL url)\n     throws InvalidMidiDataException, IOException\n   {\n-    Iterator readers = ServiceFactory.lookupProviders(SoundbankReader.class);\n+    Iterator<SoundbankReader> readers =\n+      ServiceFactory.lookupProviders(SoundbankReader.class);\n     while (readers.hasNext())\n     {\n-      SoundbankReader sr = (SoundbankReader) readers.next();\n+      SoundbankReader sr = readers.next();\n       Soundbank sb = sr.getSoundbank(url);\n       if (sb != null)\n         return sb;\n@@ -260,7 +261,8 @@ public static Soundbank getSoundbank(URL url)\n   public static Soundbank getSoundbank(File file)\n     throws InvalidMidiDataException, IOException\n   {\n-    Iterator readers = ServiceFactory.lookupProviders(SoundbankReader.class);\n+    Iterator<SoundbankReader> readers =\n+      ServiceFactory.lookupProviders(SoundbankReader.class);\n     while (readers.hasNext())\n     {\n       SoundbankReader sr = (SoundbankReader) readers.next();\n@@ -283,10 +285,11 @@ public static Soundbank getSoundbank(File file)\n   public static MidiFileFormat getMidiFileFormat(InputStream stream)\n     throws InvalidMidiDataException, IOException\n   {\n-    Iterator readers = ServiceFactory.lookupProviders(MidiFileReader.class);\n+    Iterator<MidiFileReader> readers =\n+      ServiceFactory.lookupProviders(MidiFileReader.class);\n     while (readers.hasNext())\n     {\n-      MidiFileReader sr = (MidiFileReader) readers.next();\n+      MidiFileReader sr = readers.next();\n       MidiFileFormat sb = sr.getMidiFileFormat(stream);\n       if (sb != null)\n         return sb;\n@@ -305,10 +308,11 @@ public static MidiFileFormat getMidiFileFormat(InputStream stream)\n   public static MidiFileFormat getMidiFileFormat(URL url)\n     throws InvalidMidiDataException, IOException\n   {\n-    Iterator readers = ServiceFactory.lookupProviders(MidiFileReader.class);\n+    Iterator<MidiFileReader> readers =\n+      ServiceFactory.lookupProviders(MidiFileReader.class);\n     while (readers.hasNext())\n     {\n-      MidiFileReader sr = (MidiFileReader) readers.next();\n+      MidiFileReader sr = readers.next();\n       MidiFileFormat sb = sr.getMidiFileFormat(url);\n       if (sb != null)\n         return sb;\n@@ -327,10 +331,11 @@ public static MidiFileFormat getMidiFileFormat(URL url)\n   public static MidiFileFormat getMidiFileFormat(File file)\n     throws InvalidMidiDataException, IOException\n   {\n-    Iterator readers = ServiceFactory.lookupProviders(MidiFileReader.class);\n+    Iterator<MidiFileReader> readers =\n+      ServiceFactory.lookupProviders(MidiFileReader.class);\n     while (readers.hasNext())\n     {\n-      MidiFileReader sr = (MidiFileReader) readers.next();\n+      MidiFileReader sr = readers.next();\n       MidiFileFormat sb = sr.getMidiFileFormat(file);\n       if (sb != null)\n         return sb;\n@@ -350,10 +355,11 @@ public static MidiFileFormat getMidiFileFormat(File file)\n   public static Sequence getSequence(InputStream stream)\n     throws InvalidMidiDataException, IOException\n   {\n-    Iterator readers = ServiceFactory.lookupProviders(MidiFileReader.class);\n+    Iterator<MidiFileReader> readers =\n+      ServiceFactory.lookupProviders(MidiFileReader.class);\n     while (readers.hasNext())\n     {\n-      MidiFileReader sr = (MidiFileReader) readers.next();\n+      MidiFileReader sr = readers.next();\n       Sequence sq = sr.getSequence(stream);\n       if (sq != null)\n         return sq;\n@@ -372,10 +378,11 @@ public static Sequence getSequence(InputStream stream)\n   public static Sequence getSequence(URL url)\n     throws InvalidMidiDataException, IOException\n   {\n-    Iterator readers = ServiceFactory.lookupProviders(MidiFileReader.class);\n+    Iterator<MidiFileReader> readers =\n+      ServiceFactory.lookupProviders(MidiFileReader.class);\n     while (readers.hasNext())\n     {\n-      MidiFileReader sr = (MidiFileReader) readers.next();\n+      MidiFileReader sr = readers.next();\n       Sequence sq = sr.getSequence(url);\n       if (sq != null)\n         return sq;\n@@ -394,10 +401,11 @@ public static Sequence getSequence(URL url)\n   public static Sequence getSequence(File file)\n     throws InvalidMidiDataException, IOException\n   {\n-    Iterator readers = ServiceFactory.lookupProviders(MidiFileReader.class);\n+    Iterator<MidiFileReader> readers =\n+      ServiceFactory.lookupProviders(MidiFileReader.class);\n     while (readers.hasNext())\n     {\n-      MidiFileReader sr = (MidiFileReader) readers.next();\n+      MidiFileReader sr = readers.next();\n       Sequence sq = sr.getSequence(file);\n       if (sq != null)\n         return sq;\n@@ -417,10 +425,11 @@ public static int[] getMidiFileTypes()\n     boolean supported[] = new boolean[3];\n     // The number of supported formats.\n     int count = 0;\n-    Iterator writers = ServiceFactory.lookupProviders(MidiFileWriter.class);\n+    Iterator<MidiFileWriter> writers =\n+      ServiceFactory.lookupProviders(MidiFileWriter.class);\n     while (writers.hasNext())\n     {\n-      MidiFileWriter fw = (MidiFileWriter) writers.next();\n+      MidiFileWriter fw = writers.next();\n       int types[] = fw.getMidiFileTypes();\n       for (int i = types.length; i > 0;)\n       {\n@@ -449,10 +458,10 @@ public static int[] getMidiFileTypes()\n    */\n   public static boolean isFileTypeSupported(int fileType)\n   {\n-    Iterator writers = ServiceFactory.lookupProviders(MidiFileWriter.class);\n+    Iterator<MidiFileWriter> writers = ServiceFactory.lookupProviders(MidiFileWriter.class);\n     while (writers.hasNext())\n     {\n-      MidiFileWriter fw = (MidiFileWriter) writers.next();\n+      MidiFileWriter fw = writers.next();\n \n       if (fw.isFileTypeSupported(fileType))\n         return true;\n@@ -473,7 +482,7 @@ public static int[] getMidiFileTypes(Sequence sequence)\n     boolean supported[] = new boolean[3];\n     // The number of supported formats.\n     int count = 0;\n-    Iterator writers = ServiceFactory.lookupProviders(MidiFileWriter.class);\n+    Iterator<MidiFileWriter> writers = ServiceFactory.lookupProviders(MidiFileWriter.class);\n     while (writers.hasNext())\n     {\n       MidiFileWriter fw = (MidiFileWriter) writers.next();\n@@ -507,7 +516,7 @@ public static int[] getMidiFileTypes(Sequence sequence)\n    */\n   public static boolean isFileTypeSupported(int fileType, Sequence sequence)\n   {\n-    Iterator writers = ServiceFactory.lookupProviders(MidiFileWriter.class);\n+    Iterator<MidiFileWriter> writers = ServiceFactory.lookupProviders(MidiFileWriter.class);\n     while (writers.hasNext())\n     {\n       MidiFileWriter fw = (MidiFileWriter) writers.next();\n@@ -531,7 +540,7 @@ public static boolean isFileTypeSupported(int fileType, Sequence sequence)\n   public static int write(Sequence in, int fileType, OutputStream out)\n     throws IOException\n   {\n-    Iterator writers = ServiceFactory.lookupProviders(MidiFileWriter.class);\n+    Iterator<MidiFileWriter> writers = ServiceFactory.lookupProviders(MidiFileWriter.class);\n     while (writers.hasNext())\n     {\n       MidiFileWriter fw = (MidiFileWriter) writers.next();\n@@ -556,7 +565,7 @@ public static int write(Sequence in, int fileType, OutputStream out)\n   public static int write(Sequence in, int fileType, File out)\n     throws IOException\n   {\n-    Iterator writers = ServiceFactory.lookupProviders(MidiFileWriter.class);\n+    Iterator<MidiFileWriter> writers = ServiceFactory.lookupProviders(MidiFileWriter.class);\n     while (writers.hasNext())\n     {\n       MidiFileWriter fw = (MidiFileWriter) writers.next();"}, {"sha": "535c9df65cdc3d9a8c4b7631fd98fd67b5fa4ec8", "filename": "libjava/classpath/javax/sound/midi/Receiver.java", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjavax%2Fsound%2Fmidi%2FReceiver.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjavax%2Fsound%2Fmidi%2FReceiver.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjavax%2Fsound%2Fmidi%2FReceiver.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -47,6 +47,7 @@\n  *\n  */\n public interface Receiver\n+  extends AutoCloseable\n {\n   /**\n    * Send a MIDI message and timestamp.  Some receivers don't support"}, {"sha": "6c3a4f28bf23dfe952f8e2dc6a1c04b2d5da796c", "filename": "libjava/classpath/javax/sound/midi/SoundbankResource.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjavax%2Fsound%2Fmidi%2FSoundbankResource.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjavax%2Fsound%2Fmidi%2FSoundbankResource.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjavax%2Fsound%2Fmidi%2FSoundbankResource.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -1,5 +1,5 @@\n /* SoundbankResource.java -- An audio resource from a sound bank\n-   Copyright (C) 2005 Free Software Foundation, Inc.\n+   Copyright (C) 2005, 2012 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -49,7 +49,7 @@\n {\n   private final Soundbank soundbank;\n   private final String name;\n-  private final Class dataClass;\n+  private final Class<?> dataClass;\n \n   /**\n    * Create a SoundbankResource object."}, {"sha": "9c392577f2cb9cbe1bbb5e81ecdbfdb9ef8700ec", "filename": "libjava/classpath/javax/sound/midi/Track.java", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjavax%2Fsound%2Fmidi%2FTrack.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjavax%2Fsound%2Fmidi%2FTrack.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjavax%2Fsound%2Fmidi%2FTrack.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -1,5 +1,5 @@\n /* Track.java -- A track of MIDI events\n-   Copyright (C) 2005 Free Software Foundation, Inc.\n+   Copyright (C) 2005, 2012 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -54,10 +54,10 @@\n   /**\n    * The list of MidiEvents for this track.\n    */\n-  Vector events = new Vector();\n+  Vector<MidiEvent> events = new Vector<MidiEvent>();\n \n   // A HashSet to speed processing\n-  private HashSet eventSet = new HashSet();\n+  private HashSet<MidiEvent> eventSet = new HashSet<MidiEvent>();\n \n   // This is only instantiable within this package.\n   Track()\n@@ -83,7 +83,7 @@ public boolean add(MidiEvent event)\n \n       long targetTick = event.getTick();\n       int i = events.size() - 1;\n-      while (i >= 0 && (((MidiEvent)events.get(i)).getTick() > targetTick))\n+      while (i >= 0 && (events.get(i).getTick() > targetTick))\n         i--;\n       events.add(i+1, event);\n       return true;\n@@ -127,7 +127,7 @@ public MidiEvent get(int index) throws ArrayIndexOutOfBoundsException\n     {\n       try\n       {\n-        return (MidiEvent) events.get(index);\n+        return events.get(index);\n       }\n       catch (IndexOutOfBoundsException e)\n       {\n@@ -158,7 +158,7 @@ public long ticks()\n     synchronized (events)\n     {\n       int size = events.size();\n-      return ((MidiEvent) events.get(size - 1)).getTick();\n+      return events.get(size - 1).getTick();\n     }\n   }\n  }"}, {"sha": "2c62795a338d48ca80cf3d7774a272a867aca228", "filename": "libjava/classpath/javax/sound/midi/Transmitter.java", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjavax%2Fsound%2Fmidi%2FTransmitter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjavax%2Fsound%2Fmidi%2FTransmitter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjavax%2Fsound%2Fmidi%2FTransmitter.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -47,6 +47,7 @@\n  *\n  */\n public interface Transmitter\n+  extends AutoCloseable\n {\n   /**\n    * Set the Receiver to which MIDI events will be sent."}, {"sha": "599952154fd2df4a6d774739dbee9a4dd87240c6", "filename": "libjava/classpath/javax/sound/sampled/AudioSystem.java", "status": "modified", "additions": 44, "deletions": 39, "changes": 83, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjavax%2Fsound%2Fsampled%2FAudioSystem.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjavax%2Fsound%2Fsampled%2FAudioSystem.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjavax%2Fsound%2Fsampled%2FAudioSystem.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -1,5 +1,5 @@\n /* Main interface to audio system\n-   Copyright (C) 2005 Free Software Foundation, Inc.\n+   Copyright (C) 2005, 2012 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -84,10 +84,10 @@ private AudioSystem()\n   public static AudioFileFormat getAudioFileFormat(File f)\n     throws UnsupportedAudioFileException, IOException\n   {\n-    Iterator i = ServiceFactory.lookupProviders(AudioFileReader.class);\n+    Iterator<AudioFileReader> i = ServiceFactory.lookupProviders(AudioFileReader.class);\n     while (i.hasNext())\n       {\n-        AudioFileReader reader = (AudioFileReader) i.next();\n+        AudioFileReader reader = i.next();\n         try\n           {\n             return reader.getAudioFileFormat(f);\n@@ -111,10 +111,10 @@ public static AudioFileFormat getAudioFileFormat(File f)\n   public static AudioFileFormat getAudioFileFormat(InputStream is)\n     throws UnsupportedAudioFileException, IOException\n   {\n-    Iterator i = ServiceFactory.lookupProviders(AudioFileReader.class);\n+    Iterator<AudioFileReader> i = ServiceFactory.lookupProviders(AudioFileReader.class);\n     while (i.hasNext())\n       {\n-        AudioFileReader reader = (AudioFileReader) i.next();\n+        AudioFileReader reader = i.next();\n         try\n           {\n             return reader.getAudioFileFormat(is);\n@@ -138,10 +138,10 @@ public static AudioFileFormat getAudioFileFormat(InputStream is)\n   public static AudioFileFormat getAudioFileFormat(URL url)\n     throws UnsupportedAudioFileException, IOException\n   {\n-    Iterator i = ServiceFactory.lookupProviders(AudioFileReader.class);\n+    Iterator<AudioFileReader> i = ServiceFactory.lookupProviders(AudioFileReader.class);\n     while (i.hasNext())\n       {\n-        AudioFileReader reader = (AudioFileReader) i.next();\n+        AudioFileReader reader = i.next();\n         try\n           {\n             return reader.getAudioFileFormat(url);\n@@ -162,10 +162,10 @@ public static AudioFileFormat.Type[] getAudioFileTypes()\n   {\n     HashSet<AudioFileFormat.Type> result\n       = new HashSet<AudioFileFormat.Type>();\n-    Iterator i = ServiceFactory.lookupProviders(AudioFileWriter.class);\n+    Iterator<AudioFileWriter> i = ServiceFactory.lookupProviders(AudioFileWriter.class);\n     while (i.hasNext())\n       {\n-        AudioFileWriter writer = (AudioFileWriter) i.next();\n+        AudioFileWriter writer = i.next();\n         AudioFileFormat.Type[] types = writer.getAudioFileTypes();\n         for (int j = 0; j < types.length; ++j)\n           result.add(types[j]);\n@@ -183,10 +183,10 @@ public static AudioFileFormat.Type[] getAudioFileTypes(AudioInputStream ais)\n   {\n     HashSet<AudioFileFormat.Type> result\n       = new HashSet<AudioFileFormat.Type>();\n-    Iterator i = ServiceFactory.lookupProviders(AudioFileWriter.class);\n+    Iterator<AudioFileWriter> i = ServiceFactory.lookupProviders(AudioFileWriter.class);\n     while (i.hasNext())\n       {\n-        AudioFileWriter writer = (AudioFileWriter) i.next();\n+        AudioFileWriter writer = i.next();\n         AudioFileFormat.Type[] types = writer.getAudioFileTypes(ais);\n         for (int j = 0; j < types.length; ++j)\n           result.add(types[j]);\n@@ -206,10 +206,11 @@ public static AudioFileFormat.Type[] getAudioFileTypes(AudioInputStream ais)\n   public static AudioInputStream getAudioInputStream(AudioFormat.Encoding targ,\n                                                      AudioInputStream ais)\n   {\n-    Iterator i = ServiceFactory.lookupProviders(FormatConversionProvider.class);\n+    Iterator<FormatConversionProvider> i =\n+      ServiceFactory.lookupProviders(FormatConversionProvider.class);\n     while (i.hasNext())\n       {\n-        FormatConversionProvider prov = (FormatConversionProvider) i.next();\n+        FormatConversionProvider prov = i.next();\n         if (! prov.isConversionSupported(targ, ais.getFormat()))\n           continue;\n         return prov.getAudioInputStream(targ, ais);\n@@ -229,10 +230,11 @@ public static AudioInputStream getAudioInputStream(AudioFormat.Encoding targ,\n   public static AudioInputStream getAudioInputStream(AudioFormat targ,\n                                                      AudioInputStream ais)\n   {\n-    Iterator i = ServiceFactory.lookupProviders(FormatConversionProvider.class);\n+    Iterator<FormatConversionProvider> i =\n+      ServiceFactory.lookupProviders(FormatConversionProvider.class);\n     while (i.hasNext())\n       {\n-        FormatConversionProvider prov = (FormatConversionProvider) i.next();\n+        FormatConversionProvider prov = i.next();\n         if (! prov.isConversionSupported(targ, ais.getFormat()))\n           continue;\n         return prov.getAudioInputStream(targ, ais);\n@@ -251,10 +253,10 @@ public static AudioInputStream getAudioInputStream(AudioFormat targ,\n   public static AudioInputStream getAudioInputStream(File f)\n     throws UnsupportedAudioFileException, IOException\n   {\n-    Iterator i = ServiceFactory.lookupProviders(AudioFileReader.class);\n+    Iterator<AudioFileReader> i = ServiceFactory.lookupProviders(AudioFileReader.class);\n     while (i.hasNext())\n       {\n-        AudioFileReader reader = (AudioFileReader) i.next();\n+        AudioFileReader reader = i.next();\n         try\n           {\n             return reader.getAudioInputStream(f);\n@@ -278,10 +280,10 @@ public static AudioInputStream getAudioInputStream(File f)\n   public static AudioInputStream getAudioInputStream(InputStream is)\n     throws UnsupportedAudioFileException, IOException\n   {\n-    Iterator i = ServiceFactory.lookupProviders(AudioFileReader.class);\n+    Iterator<AudioFileReader> i = ServiceFactory.lookupProviders(AudioFileReader.class);\n     while (i.hasNext())\n       {\n-        AudioFileReader reader = (AudioFileReader) i.next();\n+        AudioFileReader reader = i.next();\n         try\n           {\n             return reader.getAudioInputStream(is);\n@@ -305,10 +307,10 @@ public static AudioInputStream getAudioInputStream(InputStream is)\n   public static AudioInputStream getAudioInputStream(URL url)\n     throws UnsupportedAudioFileException, IOException\n   {\n-    Iterator i = ServiceFactory.lookupProviders(AudioFileReader.class);\n+    Iterator<AudioFileReader> i = ServiceFactory.lookupProviders(AudioFileReader.class);\n     while (i.hasNext())\n       {\n-        AudioFileReader reader = (AudioFileReader) i.next();\n+        AudioFileReader reader = i.next();\n         try\n           {\n             return reader.getAudioInputStream(url);\n@@ -401,10 +403,10 @@ public static Line getLine(Line.Info info) throws LineUnavailableException\n    */\n   public static Mixer getMixer(Mixer.Info info)\n   {\n-    Iterator i = ServiceFactory.lookupProviders(MixerProvider.class);\n+    Iterator<MixerProvider> i = ServiceFactory.lookupProviders(MixerProvider.class);\n     while (i.hasNext())\n       {\n-        MixerProvider prov = (MixerProvider) i.next();\n+        MixerProvider prov = i.next();\n         if (prov.isMixerSupported(info))\n           return prov.getMixer(info);\n       }\n@@ -417,10 +419,10 @@ public static Mixer getMixer(Mixer.Info info)\n   public static Mixer.Info[] getMixerInfo()\n   {\n     HashSet<Mixer.Info> result = new HashSet<Mixer.Info>();\n-    Iterator i = ServiceFactory.lookupProviders(MixerProvider.class);\n+    Iterator<MixerProvider> i = ServiceFactory.lookupProviders(MixerProvider.class);\n     while (i.hasNext())\n       {\n-        MixerProvider prov = (MixerProvider) i.next();\n+        MixerProvider prov = i.next();\n         Mixer.Info[] is = prov.getMixerInfo();\n         for (int j = 0; j < is.length; ++j)\n           result.add(is[j]);\n@@ -536,10 +538,11 @@ public static AudioFormat.Encoding[] getTargetEncodings(AudioFormat.Encoding sou\n   {\n     HashSet<AudioFormat.Encoding> result\n       = new HashSet<AudioFormat.Encoding>();\n-    Iterator i = ServiceFactory.lookupProviders(FormatConversionProvider.class);\n+    Iterator<FormatConversionProvider> i =\n+      ServiceFactory.lookupProviders(FormatConversionProvider.class);\n     while (i.hasNext())\n       {\n-        FormatConversionProvider prov = (FormatConversionProvider) i.next();\n+        FormatConversionProvider prov = i.next();\n         if (! prov.isSourceEncodingSupported(source))\n           continue;\n         AudioFormat.Encoding[] es = prov.getTargetEncodings();\n@@ -558,10 +561,11 @@ public static AudioFormat.Encoding[] getTargetEncodings(AudioFormat source)\n   {\n     HashSet<AudioFormat.Encoding> result\n       = new HashSet<AudioFormat.Encoding>();\n-    Iterator i = ServiceFactory.lookupProviders(FormatConversionProvider.class);\n+    Iterator<FormatConversionProvider> i =\n+      ServiceFactory.lookupProviders(FormatConversionProvider.class);\n     while (i.hasNext())\n       {\n-        FormatConversionProvider prov = (FormatConversionProvider) i.next();\n+        FormatConversionProvider prov = i.next();\n         AudioFormat.Encoding[] es = prov.getTargetEncodings(source);\n         for (int j = 0; j < es.length; ++j)\n           result.add(es[j]);\n@@ -579,10 +583,11 @@ public static AudioFormat[] getTargetFormats(AudioFormat.Encoding encoding,\n                                                AudioFormat sourceFmt)\n   {\n     HashSet<AudioFormat> result = new HashSet<AudioFormat>();\n-    Iterator i = ServiceFactory.lookupProviders(FormatConversionProvider.class);\n+    Iterator<FormatConversionProvider> i =\n+      ServiceFactory.lookupProviders(FormatConversionProvider.class);\n     while (i.hasNext())\n       {\n-        FormatConversionProvider prov = (FormatConversionProvider) i.next();\n+        FormatConversionProvider prov = i.next();\n         AudioFormat[] es = prov.getTargetFormats(encoding, sourceFmt);\n         for (int j = 0; j < es.length; ++j)\n           result.add(es[j]);\n@@ -618,11 +623,11 @@ public static Line.Info[] getTargetLineInfo(Line.Info info)\n   public static boolean isConversionSupported(AudioFormat.Encoding targ,\n                                               AudioFormat source)\n   {\n-    Iterator i\n+    Iterator<FormatConversionProvider> i\n       = ServiceFactory.lookupProviders(FormatConversionProvider.class);\n     while (i.hasNext())\n       {\n-        FormatConversionProvider prov = (FormatConversionProvider) i.next();\n+        FormatConversionProvider prov = i.next();\n         if (prov.isConversionSupported(targ, source))\n           return true;\n       }\n@@ -638,11 +643,11 @@ public static boolean isConversionSupported(AudioFormat.Encoding targ,\n   public static boolean isConversionSupported(AudioFormat targ,\n                                               AudioFormat source)\n   {\n-    Iterator i\n+    Iterator<FormatConversionProvider> i\n       = ServiceFactory.lookupProviders(FormatConversionProvider.class);\n     while (i.hasNext())\n       {\n-        FormatConversionProvider prov = (FormatConversionProvider) i.next();\n+        FormatConversionProvider prov = i.next();\n         if (prov.isConversionSupported(targ, source))\n           return true;\n       }\n@@ -714,10 +719,10 @@ public static int write(AudioInputStream ais, AudioFileFormat.Type type,\n                           File out)\n     throws IOException\n   {\n-    Iterator i = ServiceFactory.lookupProviders(AudioFileWriter.class);\n+    Iterator<AudioFileWriter> i = ServiceFactory.lookupProviders(AudioFileWriter.class);\n     while (i.hasNext())\n       {\n-        AudioFileWriter w = (AudioFileWriter) i.next();\n+        AudioFileWriter w = i.next();\n         if (w.isFileTypeSupported(type, ais))\n           return w.write(ais, type, out);\n       }\n@@ -739,10 +744,10 @@ public static int write(AudioInputStream ais, AudioFileFormat.Type type,\n                           OutputStream os)\n     throws IOException\n   {\n-    Iterator i = ServiceFactory.lookupProviders(AudioFileWriter.class);\n+    Iterator<AudioFileWriter> i = ServiceFactory.lookupProviders(AudioFileWriter.class);\n     while (i.hasNext())\n       {\n-        AudioFileWriter w = (AudioFileWriter) i.next();\n+        AudioFileWriter w = i.next();\n         if (w.isFileTypeSupported(type, ais))\n           return w.write(ais, type, os);\n       }"}, {"sha": "1e08f1a8b49112e58c5054ca4400357ade88c492", "filename": "libjava/classpath/javax/sound/sampled/Line.java", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjavax%2Fsound%2Fsampled%2FLine.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjavax%2Fsound%2Fsampled%2FLine.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjavax%2Fsound%2Fsampled%2FLine.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -1,5 +1,5 @@\n /* An input or output line\n-   Copyright (C) 2005 Free Software Foundation, Inc.\n+   Copyright (C) 2005, 2012 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -43,14 +43,15 @@\n  * @since 1.3\n  */\n public interface Line\n+  extends AutoCloseable\n {\n   /**\n    * An object of this type holds information about a Line.\n    * @since 1.3\n    */\n   class Info\n   {\n-    private Class klass;\n+    private Class<?> klass;\n \n     /**\n      * Create a new Info object.  The argument is the class of the line,"}, {"sha": "1e53961964e18c3bd10b23036574020762fafae8", "filename": "libjava/classpath/javax/swing/tree/DefaultMutableTreeNode.java", "status": "modified", "additions": 22, "deletions": 16, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjavax%2Fswing%2Ftree%2FDefaultMutableTreeNode.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjavax%2Fswing%2Ftree%2FDefaultMutableTreeNode.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjavax%2Fswing%2Ftree%2FDefaultMutableTreeNode.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -293,7 +293,7 @@ public TreeNode[] getPath()\n    *\n    * @return an enumeration of tree nodes\n    */\n-  @SuppressWarnings(\"unchecked\") // Required for API compatibility\n+  @SuppressWarnings(\"rawtypes\") // Required for API compatibility\n   public Enumeration children()\n   {\n     if (children.size() == 0)\n@@ -718,7 +718,7 @@ public DefaultMutableTreeNode getPreviousNode()\n    *\n    * @return Enumeration\n    */\n-  @SuppressWarnings(\"unchecked\") // Required for API compatibility\n+  @SuppressWarnings(\"rawtypes\") // Required for API compatibility\n   public Enumeration preorderEnumeration()\n   {\n     return new PreorderEnumeration(this);\n@@ -729,7 +729,7 @@ public Enumeration preorderEnumeration()\n    *\n    * @return Enumeration\n    */\n-  @SuppressWarnings(\"unchecked\") // Required for API compatibility\n+  @SuppressWarnings(\"rawtypes\") // Required for API compatibility\n   public Enumeration postorderEnumeration()\n   {\n     return new PostorderEnumeration(this);\n@@ -740,7 +740,7 @@ public Enumeration postorderEnumeration()\n    *\n    * @return Enumeration\n    */\n-  @SuppressWarnings(\"unchecked\") // Required for API compatibility\n+  @SuppressWarnings(\"rawtypes\") // Required for API compatibility\n   public Enumeration breadthFirstEnumeration()\n   {\n     return new BreadthFirstEnumeration(this);\n@@ -751,7 +751,7 @@ public Enumeration breadthFirstEnumeration()\n    *\n    * @return Enumeration\n    */\n-  @SuppressWarnings(\"unchecked\") // Required for API compatibility\n+  @SuppressWarnings(\"rawtypes\") // Required for API compatibility\n   public Enumeration depthFirstEnumeration()\n   {\n     return postorderEnumeration();\n@@ -764,7 +764,7 @@ public Enumeration depthFirstEnumeration()\n    *\n    * @return Enumeration\n    */\n-  @SuppressWarnings(\"unchecked\") // Required for API compatibility\n+  @SuppressWarnings(\"rawtypes\") // Required for API compatibility\n   public Enumeration pathFromAncestorEnumeration(TreeNode node)\n   {\n     if (node == null)\n@@ -1073,14 +1073,14 @@ public boolean hasMoreElements()\n           return !queue.isEmpty();\n       }\n \n-      @SuppressWarnings(\"unchecked\")\n       public TreeNode nextElement()\n       {\n           if (queue.isEmpty())\n               throw new NoSuchElementException(\"No more elements left.\");\n \n           TreeNode node = queue.removeFirst();\n \n+\t  @SuppressWarnings(\"unchecked\")\n           Enumeration<TreeNode> children =\n             (Enumeration<TreeNode>) node.children();\n           while (children.hasMoreElements())\n@@ -1100,11 +1100,13 @@ static class PreorderEnumeration implements Enumeration<TreeNode>\n       Stack<Enumeration<TreeNode>> childrenEnums =\n         new Stack<Enumeration<TreeNode>>();\n \n-      @SuppressWarnings(\"unchecked\")\n       PreorderEnumeration(TreeNode node)\n       {\n           next = node;\n-          childrenEnums.push((Enumeration<TreeNode>) node.children());\n+\t  @SuppressWarnings(\"unchecked\")\n+\t      Enumeration<TreeNode> children =\n+\t      (Enumeration<TreeNode>) node.children();\n+          childrenEnums.push(children);\n       }\n \n       public boolean hasMoreElements()\n@@ -1127,14 +1129,16 @@ public TreeNode nextElement()\n           return current;\n       }\n \n-      @SuppressWarnings(\"unchecked\")\n       private TreeNode traverse(Enumeration<TreeNode> children)\n       {\n           // If more children are available step down.\n           if (children.hasMoreElements())\n           {\n               TreeNode child = children.nextElement();\n-              childrenEnums.push((Enumeration<TreeNode>) child.children());\n+\t      @SuppressWarnings(\"unchecked\")\n+\t\t  Enumeration<TreeNode> grandchildren =\n+\t\t  (Enumeration<TreeNode>) child.children();\n+              childrenEnums.push(grandchildren);\n \n               return child;\n           }\n@@ -1163,11 +1167,13 @@ static class PostorderEnumeration implements Enumeration<TreeNode>\n        Stack<Enumeration<TreeNode>> childrenEnums =\n          new Stack<Enumeration<TreeNode>>();\n \n-       @SuppressWarnings(\"unchecked\")\n        PostorderEnumeration(TreeNode node)\n        {\n            nodes.push(node);\n-           childrenEnums.push((Enumeration<TreeNode>) node.children());\n+\t   @SuppressWarnings(\"unchecked\")\n+\t       Enumeration<TreeNode> children =\n+\t       (Enumeration<TreeNode>) node.children();\n+           childrenEnums.push(children);\n        }\n \n        public boolean hasMoreElements()\n@@ -1185,16 +1191,16 @@ public TreeNode nextElement()\n            return traverse(children);\n        }\n \n-       @SuppressWarnings(\"unchecked\")\n        private TreeNode traverse(Enumeration<TreeNode> children)\n        {\n            if (children.hasMoreElements())\n            {\n                TreeNode node = children.nextElement();\n                nodes.push(node);\n \n-               Enumeration<TreeNode> newChildren =\n-                 (Enumeration<TreeNode>) node.children();\n+\t       @SuppressWarnings(\"unchecked\")\n+\t\t   Enumeration<TreeNode> newChildren =\n+\t\t   (Enumeration<TreeNode>) node.children();\n                childrenEnums.push(newChildren);\n \n                return traverse(newChildren);"}, {"sha": "f146741f49e7f106d4fe7e857181caf1e31a296c", "filename": "libjava/classpath/javax/swing/tree/TreeNode.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjavax%2Fswing%2Ftree%2FTreeNode.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjavax%2Fswing%2Ftree%2FTreeNode.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjavax%2Fswing%2Ftree%2FTreeNode.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -107,7 +107,7 @@\n    *\n    * @return An enumeration of the children of this node.\n    */\n-  @SuppressWarnings(\"unchecked\") // Required for API compatibility\n+  @SuppressWarnings(\"rawtypes\") // Required for API compatibility\n   Enumeration children();\n \n }"}, {"sha": "9816480c394fdf084d32ff9967d1bacf0641b013", "filename": "libjava/classpath/javax/xml/namespace/NamespaceContext.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjavax%2Fxml%2Fnamespace%2FNamespaceContext.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjavax%2Fxml%2Fnamespace%2FNamespaceContext.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjavax%2Fxml%2Fnamespace%2FNamespaceContext.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -61,7 +61,7 @@\n   /**\n    * Returns all the prefixes currently bound to the given namespace URI.\n    */\n-  @SuppressWarnings(\"unchecked\")\n+  @SuppressWarnings(\"rawtypes\")\n   public Iterator getPrefixes(String namespaceURI);\n \n }"}, {"sha": "750b62e2cd6d65d0bdea52abeecab8dc2460804d", "filename": "libjava/classpath/javax/xml/stream/XMLEventFactory.java", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjavax%2Fxml%2Fstream%2FXMLEventFactory.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjavax%2Fxml%2Fstream%2FXMLEventFactory.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjavax%2Fxml%2Fstream%2FXMLEventFactory.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -223,7 +223,7 @@ public abstract Attribute createAttribute(String prefix, String namespaceURI,\n   /**\n    * Create a start-element event.\n    */\n-  @SuppressWarnings(\"unchecked\")\n+  @SuppressWarnings(\"rawtypes\")\n   public abstract StartElement createStartElement(QName name,\n                                                   Iterator attributes,\n                                                   Iterator namespaces);\n@@ -238,7 +238,7 @@ public abstract StartElement createStartElement(String prefix,\n   /**\n    * Create a start-element event.\n    */\n-  @SuppressWarnings(\"unchecked\")\n+  @SuppressWarnings(\"rawtypes\")\n   public abstract StartElement createStartElement(String prefix,\n                                                   String namespaceUri,\n                                                   String localName,\n@@ -248,7 +248,7 @@ public abstract StartElement createStartElement(String prefix,\n   /**\n    * Create a start-element event.\n    */\n-  @SuppressWarnings(\"unchecked\")\n+  @SuppressWarnings(\"rawtypes\")\n   public abstract StartElement createStartElement(String prefix,\n                                                   String namespaceUri,\n                                                   String localName,\n@@ -259,7 +259,7 @@ public abstract StartElement createStartElement(String prefix,\n   /**\n    * Create an end-element event.\n    */\n-  @SuppressWarnings(\"unchecked\")\n+  @SuppressWarnings(\"rawtypes\")\n   public abstract EndElement createEndElement(QName name,\n                                               Iterator namespaces);\n \n@@ -273,7 +273,7 @@ public abstract EndElement createEndElement(String prefix,\n   /**\n    * Create an end-element event.\n    */\n-  @SuppressWarnings(\"unchecked\")\n+  @SuppressWarnings(\"rawtypes\")\n   public abstract EndElement createEndElement(String prefix,\n                                               String namespaceUri,\n                                               String localName,"}, {"sha": "10373ee0edb0a852b62c5f65e00d5eed920f5862", "filename": "libjava/classpath/javax/xml/stream/XMLEventReader.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjavax%2Fxml%2Fstream%2FXMLEventReader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjavax%2Fxml%2Fstream%2FXMLEventReader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjavax%2Fxml%2Fstream%2FXMLEventReader.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -43,7 +43,7 @@\n /**\n  * An XML parser.\n  */\n-@SuppressWarnings(\"unchecked\")\n+@SuppressWarnings(\"rawtypes\")\n public interface XMLEventReader\n   extends Iterator\n {"}, {"sha": "f7c07957950d9e4f88bb2c138c75a865de555b28", "filename": "libjava/classpath/javax/xml/stream/events/DTD.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjavax%2Fxml%2Fstream%2Fevents%2FDTD.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjavax%2Fxml%2Fstream%2Fevents%2FDTD.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjavax%2Fxml%2Fstream%2Fevents%2FDTD.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -60,13 +60,13 @@\n   /**\n    * Returns the notations declared in the DTD.\n    */\n-  @SuppressWarnings(\"unchecked\")\n+  @SuppressWarnings(\"rawtypes\")\n   List getNotations();\n \n   /**\n    * Returns the entities declared in the DTD.\n    */\n-  @SuppressWarnings(\"unchecked\")\n+  @SuppressWarnings(\"rawtypes\")\n   List getEntities();\n \n }"}, {"sha": "cd7c2d3865ff406cf8f3de5bb2f6cf1e1db5c84e", "filename": "libjava/classpath/javax/xml/stream/events/EndElement.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjavax%2Fxml%2Fstream%2Fevents%2FEndElement.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjavax%2Fxml%2Fstream%2Fevents%2FEndElement.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjavax%2Fxml%2Fstream%2Fevents%2FEndElement.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -55,7 +55,7 @@\n   /**\n    * Returns the namespaces that have gone out of scope.\n    */\n-  @SuppressWarnings(\"unchecked\")\n+  @SuppressWarnings(\"rawtypes\")\n   Iterator getNamespaces();\n \n }"}, {"sha": "9d18972994055fb0b7cc392ecf78185c1d3c702c", "filename": "libjava/classpath/javax/xml/stream/events/StartElement.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjavax%2Fxml%2Fstream%2Fevents%2FStartElement.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjavax%2Fxml%2Fstream%2Fevents%2FStartElement.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjavax%2Fxml%2Fstream%2Fevents%2FStartElement.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -56,13 +56,13 @@\n   /**\n    * Returns the attributes declared on this element.\n    */\n-  @SuppressWarnings(\"unchecked\")\n+  @SuppressWarnings(\"rawtypes\")\n   Iterator getAttributes();\n \n   /**\n    * Returns the namespaces declared on this element.\n    */\n-  @SuppressWarnings(\"unchecked\")\n+  @SuppressWarnings(\"rawtypes\")\n   Iterator getNamespaces();\n \n   /**"}, {"sha": "b7be0902d88f828026d9b1d1e6a6165d89f3b972", "filename": "libjava/classpath/javax/xml/xpath/XPathFunction.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjavax%2Fxml%2Fxpath%2FXPathFunction.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fjavax%2Fxml%2Fxpath%2FXPathFunction.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjavax%2Fxml%2Fxpath%2FXPathFunction.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -52,7 +52,7 @@\n    * Evaluate the function with the specified arguments.\n    * @param args the list of arguments\n    */\n-  @SuppressWarnings(\"unchecked\")\n+  @SuppressWarnings(\"rawtypes\")\n   Object evaluate(List args)\n     throws XPathFunctionException;\n "}, {"sha": "c4174e2bf77862d9f66121cd643ed3f4351fa26f", "filename": "libjava/classpath/lib/Makefile.in", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2FMakefile.in?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -42,9 +42,6 @@ DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \\\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n am__aclocal_m4_deps = $(top_srcdir)/../../config/depstand.m4 \\\n \t$(top_srcdir)/../../config/lead-dot.m4 \\\n-\t$(top_srcdir)/../../config/lib-ld.m4 \\\n-\t$(top_srcdir)/../../config/lib-link.m4 \\\n-\t$(top_srcdir)/../../config/lib-prefix.m4 \\\n \t$(top_srcdir)/../../config/multi.m4 \\\n \t$(top_srcdir)/../../config/no-executables.m4 \\\n \t$(top_srcdir)/../../config/override.m4 \\\n@@ -63,7 +60,9 @@ am__aclocal_m4_deps = $(top_srcdir)/../../config/depstand.m4 \\\n \t$(top_srcdir)/m4/ax_create_stdint_h.m4 \\\n \t$(top_srcdir)/m4/ax_func_which_gethostbyname_r.m4 \\\n \t$(top_srcdir)/m4/gcc_attribute.m4 $(top_srcdir)/m4/iconv.m4 \\\n-\t$(top_srcdir)/m4/pkg.m4 $(top_srcdir)/configure.ac\n+\t$(top_srcdir)/m4/lib-ld.m4 $(top_srcdir)/m4/lib-link.m4 \\\n+\t$(top_srcdir)/m4/lib-prefix.m4 $(top_srcdir)/m4/pkg.m4 \\\n+\t$(top_srcdir)/configure.ac\n am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n \t$(ACLOCAL_M4)\n mkinstalldirs = $(SHELL) $(top_srcdir)/../../mkinstalldirs\n@@ -173,6 +172,7 @@ MAKEINFO = @MAKEINFO@\n MKDIR = @MKDIR@\n MKDIR_P = @MKDIR_P@\n MOC = @MOC@\n+MOC4 = @MOC4@\n MOZILLA_CFLAGS = @MOZILLA_CFLAGS@\n MOZILLA_LIBS = @MOZILLA_LIBS@\n NM = @NM@"}, {"sha": "5d010e752bb8a8c828d25d26cfaa32f85580ef62", "filename": "libjava/classpath/lib/gnu/java/beans/editors/ColorEditor.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fgnu%2Fjava%2Fbeans%2Feditors%2FColorEditor.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fgnu%2Fjava%2Fbeans%2Feditors%2FColorEditor.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fgnu%2Fjava%2Fbeans%2Feditors%2FColorEditor.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "64d83fd1a9dc4994b50fadd68669120352d0a0f7", "filename": "libjava/classpath/lib/gnu/java/locale/LocaleData.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fgnu%2Fjava%2Flocale%2FLocaleData.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fgnu%2Fjava%2Flocale%2FLocaleData.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fgnu%2Fjava%2Flocale%2FLocaleData.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "db38ad46e7503f8a2b2ade79a950c8bce1ef183b", "filename": "libjava/classpath/lib/gnu/java/nio/FileLockImpl.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fgnu%2Fjava%2Fnio%2FFileLockImpl.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fgnu%2Fjava%2Fnio%2FFileLockImpl.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fgnu%2Fjava%2Fnio%2FFileLockImpl.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "dd989b6d98048a6b5862290f37786ea5fdf9af2b", "filename": "libjava/classpath/lib/gnu/java/text/AttributedFormatBuffer.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fgnu%2Fjava%2Ftext%2FAttributedFormatBuffer.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fgnu%2Fjava%2Ftext%2FAttributedFormatBuffer.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fgnu%2Fjava%2Ftext%2FAttributedFormatBuffer.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "2d363eb7ce61e30b376c2a91cea4f8b4b25aa7de", "filename": "libjava/classpath/lib/gnu/java/text/FormatBuffer.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fgnu%2Fjava%2Ftext%2FFormatBuffer.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fgnu%2Fjava%2Ftext%2FFormatBuffer.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fgnu%2Fjava%2Ftext%2FFormatBuffer.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "064e10a57b6b0c7f11f95841e3753c4328d49360", "filename": "libjava/classpath/lib/gnu/java/text/FormatCharacterIterator.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fgnu%2Fjava%2Ftext%2FFormatCharacterIterator.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fgnu%2Fjava%2Ftext%2FFormatCharacterIterator.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fgnu%2Fjava%2Ftext%2FFormatCharacterIterator.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "9810143f1356f91a37dbed658925efbc90fae4c8", "filename": "libjava/classpath/lib/gnu/java/text/StringFormatBuffer.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fgnu%2Fjava%2Ftext%2FStringFormatBuffer.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fgnu%2Fjava%2Ftext%2FStringFormatBuffer.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fgnu%2Fjava%2Ftext%2FStringFormatBuffer.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "e5a1d9bb3756fe16e675a99767e22153cf669571", "filename": "libjava/classpath/lib/gnu/javax/sound/midi/dssi/DSSIMidiDeviceProvider$1.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fgnu%2Fjavax%2Fsound%2Fmidi%2Fdssi%2FDSSIMidiDeviceProvider%241.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fgnu%2Fjavax%2Fsound%2Fmidi%2Fdssi%2FDSSIMidiDeviceProvider%241.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fgnu%2Fjavax%2Fsound%2Fmidi%2Fdssi%2FDSSIMidiDeviceProvider%241.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "9b42393aec15a4357ce73f893b7e5a817873e393", "filename": "libjava/classpath/lib/gnu/javax/sound/midi/dssi/DSSIMidiDeviceProvider$DSSIInfo.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fgnu%2Fjavax%2Fsound%2Fmidi%2Fdssi%2FDSSIMidiDeviceProvider%24DSSIInfo.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fgnu%2Fjavax%2Fsound%2Fmidi%2Fdssi%2FDSSIMidiDeviceProvider%24DSSIInfo.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fgnu%2Fjavax%2Fsound%2Fmidi%2Fdssi%2FDSSIMidiDeviceProvider%24DSSIInfo.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "3d8fe9a8414f0bffb9a1a1eda366615b3aa948c9", "filename": "libjava/classpath/lib/gnu/javax/sound/midi/dssi/DSSIMidiDeviceProvider.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fgnu%2Fjavax%2Fsound%2Fmidi%2Fdssi%2FDSSIMidiDeviceProvider.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fgnu%2Fjavax%2Fsound%2Fmidi%2Fdssi%2FDSSIMidiDeviceProvider.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fgnu%2Fjavax%2Fsound%2Fmidi%2Fdssi%2FDSSIMidiDeviceProvider.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "194122d1d564d7f49debaeff5cf6a51048ef0587", "filename": "libjava/classpath/lib/gnu/javax/sound/midi/dssi/DSSISynthesizer$DSSIMidiChannel.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fgnu%2Fjavax%2Fsound%2Fmidi%2Fdssi%2FDSSISynthesizer%24DSSIMidiChannel.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fgnu%2Fjavax%2Fsound%2Fmidi%2Fdssi%2FDSSISynthesizer%24DSSIMidiChannel.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fgnu%2Fjavax%2Fsound%2Fmidi%2Fdssi%2FDSSISynthesizer%24DSSIMidiChannel.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "c710c51639ec8ff9a4866d8472920abc13cb5533", "filename": "libjava/classpath/lib/gnu/javax/sound/midi/dssi/DSSISynthesizer$DSSIReceiver.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fgnu%2Fjavax%2Fsound%2Fmidi%2Fdssi%2FDSSISynthesizer%24DSSIReceiver.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fgnu%2Fjavax%2Fsound%2Fmidi%2Fdssi%2FDSSISynthesizer%24DSSIReceiver.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fgnu%2Fjavax%2Fsound%2Fmidi%2Fdssi%2FDSSISynthesizer%24DSSIReceiver.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "691d70495bbaa20be811fcbca386ad0f181c747f", "filename": "libjava/classpath/lib/gnu/javax/sound/midi/dssi/DSSISynthesizer$DSSISoundbank.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fgnu%2Fjavax%2Fsound%2Fmidi%2Fdssi%2FDSSISynthesizer%24DSSISoundbank.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fgnu%2Fjavax%2Fsound%2Fmidi%2Fdssi%2FDSSISynthesizer%24DSSISoundbank.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fgnu%2Fjavax%2Fsound%2Fmidi%2Fdssi%2FDSSISynthesizer%24DSSISoundbank.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "4ad4e0b239e1c9f6d5cf899b98a3c1871e89208b", "filename": "libjava/classpath/lib/gnu/javax/sound/midi/dssi/DSSISynthesizer.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fgnu%2Fjavax%2Fsound%2Fmidi%2Fdssi%2FDSSISynthesizer.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fgnu%2Fjavax%2Fsound%2Fmidi%2Fdssi%2FDSSISynthesizer.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fgnu%2Fjavax%2Fsound%2Fmidi%2Fdssi%2FDSSISynthesizer.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "0efa6acd13ed9e40f5cb2c7f47294f7594bedde5", "filename": "libjava/classpath/lib/gnu/javax/sound/sampled/gstreamer/GStreamerMixer.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fgnu%2Fjavax%2Fsound%2Fsampled%2Fgstreamer%2FGStreamerMixer.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fgnu%2Fjavax%2Fsound%2Fsampled%2Fgstreamer%2FGStreamerMixer.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fgnu%2Fjavax%2Fsound%2Fsampled%2Fgstreamer%2FGStreamerMixer.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "5852448de9d7c77f7458baa5cf197a343fe3637f", "filename": "libjava/classpath/lib/gnu/xml/transform/SAXSerializer.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fgnu%2Fxml%2Ftransform%2FSAXSerializer.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fgnu%2Fxml%2Ftransform%2FSAXSerializer.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fgnu%2Fxml%2Ftransform%2FSAXSerializer.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "e92c06a6b0a2c99760df028f7ae6a9d88d91f035", "filename": "libjava/classpath/lib/java/awt/geom/Area$AreaIterator$IteratorSegment.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Fawt%2Fgeom%2FArea%24AreaIterator%24IteratorSegment.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Fawt%2Fgeom%2FArea%24AreaIterator%24IteratorSegment.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Fawt%2Fgeom%2FArea%24AreaIterator%24IteratorSegment.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "6c69f0463ff80c3bead9f672d0e4ba8571d58fac", "filename": "libjava/classpath/lib/java/awt/geom/Area$AreaIterator.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Fawt%2Fgeom%2FArea%24AreaIterator.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Fawt%2Fgeom%2FArea%24AreaIterator.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Fawt%2Fgeom%2FArea%24AreaIterator.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "1a0d3781499479e157c09706ed58bb2acb912c7b", "filename": "libjava/classpath/lib/java/awt/geom/Area$CubicSegment.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Fawt%2Fgeom%2FArea%24CubicSegment.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Fawt%2Fgeom%2FArea%24CubicSegment.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Fawt%2Fgeom%2FArea%24CubicSegment.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "323d25d3172559b1dfca8601c60cfc5368aca3c4", "filename": "libjava/classpath/lib/java/awt/geom/Area$Intersection.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Fawt%2Fgeom%2FArea%24Intersection.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Fawt%2Fgeom%2FArea%24Intersection.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Fawt%2Fgeom%2FArea%24Intersection.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "d63c6519ef789c09bb2d9aad97eeebccaa08d20d", "filename": "libjava/classpath/lib/java/awt/geom/Area$LineSegment.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Fawt%2Fgeom%2FArea%24LineSegment.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Fawt%2Fgeom%2FArea%24LineSegment.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Fawt%2Fgeom%2FArea%24LineSegment.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "80f2414fe7f75211c5ed2fd7c9e570151ca8de2a", "filename": "libjava/classpath/lib/java/awt/geom/Area$QuadSegment.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Fawt%2Fgeom%2FArea%24QuadSegment.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Fawt%2Fgeom%2FArea%24QuadSegment.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Fawt%2Fgeom%2FArea%24QuadSegment.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "b9d4cf283f0300f45a30ce7fb6afc6c96c756287", "filename": "libjava/classpath/lib/java/awt/geom/Area$Segment.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Fawt%2Fgeom%2FArea%24Segment.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Fawt%2Fgeom%2FArea%24Segment.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Fawt%2Fgeom%2FArea%24Segment.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "e6f9f59432d187842a8b8bf8e04a348bd5381e29", "filename": "libjava/classpath/lib/java/awt/geom/Area.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Fawt%2Fgeom%2FArea.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Fawt%2Fgeom%2FArea.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Fawt%2Fgeom%2FArea.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "83afdd9ea7f6ca83e996c749cb445cf872ae4022", "filename": "libjava/classpath/lib/java/beans/XMLDecoder.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Fbeans%2FXMLDecoder.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Fbeans%2FXMLDecoder.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Fbeans%2FXMLDecoder.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "7a42958082a86aeccaaac5f23121b1fc4517606a", "filename": "libjava/classpath/lib/java/beans/XMLEncoder.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Fbeans%2FXMLEncoder.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Fbeans%2FXMLEncoder.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Fbeans%2FXMLEncoder.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "68ec82094ecebda2f8cc580073db4b6868f09591", "filename": "libjava/classpath/lib/java/io/Closeable.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Fio%2FCloseable.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Fio%2FCloseable.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Fio%2FCloseable.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "d6d71abd5581d438b1280fda2f843d2dd1e519c9", "filename": "libjava/classpath/lib/java/io/ObjectInput.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Fio%2FObjectInput.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Fio%2FObjectInput.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Fio%2FObjectInput.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "cd95577b555fbadfab4e255cdaf60613435c5d5d", "filename": "libjava/classpath/lib/java/io/ObjectInputStream$1.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Fio%2FObjectInputStream%241.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Fio%2FObjectInputStream%241.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Fio%2FObjectInputStream%241.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "3eab2f2363e4e854e15d3813eb2dc775f6140f76", "filename": "libjava/classpath/lib/java/io/ObjectInputStream$2.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Fio%2FObjectInputStream%242.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Fio%2FObjectInputStream%242.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Fio%2FObjectInputStream%242.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "eb606bd3a98ead1a890b9bada9d9407b1fdb8f3e", "filename": "libjava/classpath/lib/java/io/ObjectInputStream$GetField.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Fio%2FObjectInputStream%24GetField.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Fio%2FObjectInputStream%24GetField.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Fio%2FObjectInputStream%24GetField.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "05d09e224a53185f13b64d8eac44386464b12a51", "filename": "libjava/classpath/lib/java/io/ObjectInputStream$ValidatorAndPriority.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Fio%2FObjectInputStream%24ValidatorAndPriority.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Fio%2FObjectInputStream%24ValidatorAndPriority.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Fio%2FObjectInputStream%24ValidatorAndPriority.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "911a87fefc217fcaf6089c2427b6fe8ae97f6635", "filename": "libjava/classpath/lib/java/io/ObjectInputStream.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Fio%2FObjectInputStream.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Fio%2FObjectInputStream.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Fio%2FObjectInputStream.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "6a1172773913df05a986b151eecd6e76cdcb80d3", "filename": "libjava/classpath/lib/java/io/ObjectOutput.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Fio%2FObjectOutput.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Fio%2FObjectOutput.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Fio%2FObjectOutput.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "c8e7090d43528ae51717a503bb31f779b0a9ebc5", "filename": "libjava/classpath/lib/java/lang/AssertionError.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Flang%2FAssertionError.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Flang%2FAssertionError.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Flang%2FAssertionError.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "a25ccd62254d254cef54572e31fd8b3c13153549", "filename": "libjava/classpath/lib/java/lang/AutoCloseable.class", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Flang%2FAutoCloseable.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Flang%2FAutoCloseable.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Flang%2FAutoCloseable.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "ebef14d7b4b9660728f511e302e79ecc56864eff", "filename": "libjava/classpath/lib/java/lang/Boolean.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Flang%2FBoolean.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Flang%2FBoolean.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Flang%2FBoolean.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "906aec7d7ccd79d9fca4bf00fba3c9b9d98a3dae", "filename": "libjava/classpath/lib/java/lang/Byte.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Flang%2FByte.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Flang%2FByte.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Flang%2FByte.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "fd984dc9b55b53483336d4c3627c3e09a3f35ac8", "filename": "libjava/classpath/lib/java/lang/ClassNotFoundException.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Flang%2FClassNotFoundException.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Flang%2FClassNotFoundException.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Flang%2FClassNotFoundException.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "2091af3e8956ebaae29c25c9a9a66293aa19332d", "filename": "libjava/classpath/lib/java/lang/IllegalAccessException.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Flang%2FIllegalAccessException.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Flang%2FIllegalAccessException.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Flang%2FIllegalAccessException.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "f6a6dbff687161ef0f721cb8e250008ef0a1e5bc", "filename": "libjava/classpath/lib/java/lang/InstantiationException.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Flang%2FInstantiationException.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Flang%2FInstantiationException.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Flang%2FInstantiationException.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "867af0a3d70e801840c33b663a0220b3e72f9942", "filename": "libjava/classpath/lib/java/lang/Integer.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Flang%2FInteger.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Flang%2FInteger.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Flang%2FInteger.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "f23cc2d3767e88d7a698e919367bbe7cc6927dbc", "filename": "libjava/classpath/lib/java/lang/LinkageError.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Flang%2FLinkageError.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Flang%2FLinkageError.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Flang%2FLinkageError.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "69096d990217b89c85c265f477ae069cc0ad1860", "filename": "libjava/classpath/lib/java/lang/Long.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Flang%2FLong.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Flang%2FLong.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Flang%2FLong.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "6dbff7efc378b2905aab82d83b162746e07b70aa", "filename": "libjava/classpath/lib/java/lang/NoSuchFieldException.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Flang%2FNoSuchFieldException.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Flang%2FNoSuchFieldException.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Flang%2FNoSuchFieldException.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "b81172dd5a4569aea429d5ab188b0005531c73b5", "filename": "libjava/classpath/lib/java/lang/NoSuchMethodException.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Flang%2FNoSuchMethodException.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Flang%2FNoSuchMethodException.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Flang%2FNoSuchMethodException.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "2e4832d15c87be35793ef221a5b16edbf63e3a7f", "filename": "libjava/classpath/lib/java/lang/ReflectiveOperationException.class", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Flang%2FReflectiveOperationException.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Flang%2FReflectiveOperationException.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Flang%2FReflectiveOperationException.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "0043f318e021baffcacb61190a346730969a6726", "filename": "libjava/classpath/lib/java/lang/Short.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Flang%2FShort.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Flang%2FShort.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Flang%2FShort.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "350304589b745bb7884e1bbe02001a4ef1f3292d", "filename": "libjava/classpath/lib/java/lang/reflect/InvocationTargetException.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Flang%2Freflect%2FInvocationTargetException.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Flang%2Freflect%2FInvocationTargetException.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Flang%2Freflect%2FInvocationTargetException.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "083005b1008f2f4c2a1102140f840fdd74fceb96", "filename": "libjava/classpath/lib/java/lang/reflect/Member.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Flang%2Freflect%2FMember.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Flang%2Freflect%2FMember.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Flang%2Freflect%2FMember.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "528bcf6a6e59b59d0217f9f4634f93cb48d864b7", "filename": "libjava/classpath/lib/java/nio/channels/FileLock.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Fnio%2Fchannels%2FFileLock.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Fnio%2Fchannels%2FFileLock.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Fnio%2Fchannels%2FFileLock.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "7e5234e330b2c629bf27176331188de3876bfdb3", "filename": "libjava/classpath/lib/java/sql/Connection.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Fsql%2FConnection.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Fsql%2FConnection.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Fsql%2FConnection.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "98e2557efd7429d20f47b2fbe8d87c2f85820f79", "filename": "libjava/classpath/lib/java/sql/ResultSet.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Fsql%2FResultSet.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Fsql%2FResultSet.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Fsql%2FResultSet.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "fede03928f4d95c1a28721edbb7a3d99b679625a", "filename": "libjava/classpath/lib/java/sql/Statement.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Fsql%2FStatement.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Fsql%2FStatement.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Fsql%2FStatement.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "f38e62e285749cf22c0af897e52dc9aa49a6009c", "filename": "libjava/classpath/lib/java/text/AttributedString$AttributeRange.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Ftext%2FAttributedString%24AttributeRange.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Ftext%2FAttributedString%24AttributeRange.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Ftext%2FAttributedString%24AttributeRange.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "a6e41999fa1da786258647235dafb6908e8aec95", "filename": "libjava/classpath/lib/java/text/AttributedString.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Ftext%2FAttributedString.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Ftext%2FAttributedString.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Ftext%2FAttributedString.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "6607eb6ddec7aa27a13c167e74f6bb833a2db659", "filename": "libjava/classpath/lib/java/text/AttributedStringIterator.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Ftext%2FAttributedStringIterator.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Ftext%2FAttributedStringIterator.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Ftext%2FAttributedStringIterator.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "47d3bd703fbdadf75b1521f0edf722b8091cc8c2", "filename": "libjava/classpath/lib/java/text/Bidi.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Ftext%2FBidi.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Ftext%2FBidi.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Ftext%2FBidi.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "8e9fd0f785d79a0821608b5c76b97bdae64fd756", "filename": "libjava/classpath/lib/java/text/BreakIterator.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Ftext%2FBreakIterator.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Ftext%2FBreakIterator.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Ftext%2FBreakIterator.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "a7d8afe1008bbb8b29a57ca1b2b7c0fe94a0f1e3", "filename": "libjava/classpath/lib/java/text/ChoiceFormat.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Ftext%2FChoiceFormat.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Ftext%2FChoiceFormat.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Ftext%2FChoiceFormat.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "b98f01988f53e1c7ad917c2e1be08518bff0ae06", "filename": "libjava/classpath/lib/java/text/CollationElementIterator.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Ftext%2FCollationElementIterator.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Ftext%2FCollationElementIterator.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Ftext%2FCollationElementIterator.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "22ecff9b82c7d120989498b92915d4786c0672c5", "filename": "libjava/classpath/lib/java/text/DateFormatSymbols$DFSData.class", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Ftext%2FDateFormatSymbols%24DFSData.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Ftext%2FDateFormatSymbols%24DFSData.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Ftext%2FDateFormatSymbols%24DFSData.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "6c4ac6eaea4e9e2e2ce46f794901b1e8d1d57c8e", "filename": "libjava/classpath/lib/java/text/DateFormatSymbols.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Ftext%2FDateFormatSymbols.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Ftext%2FDateFormatSymbols.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Ftext%2FDateFormatSymbols.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "30d1a9b5bcfb6403be9c2746d547a1e06556da2d", "filename": "libjava/classpath/lib/java/text/DecimalFormat.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Ftext%2FDecimalFormat.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Ftext%2FDecimalFormat.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Ftext%2FDecimalFormat.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "f028f402d80c30409498223196227f454b549932", "filename": "libjava/classpath/lib/java/text/Format.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Ftext%2FFormat.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Ftext%2FFormat.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Ftext%2FFormat.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "c8eb504ef8794aeae356c6cc08a7c558615a73d9", "filename": "libjava/classpath/lib/java/text/MessageFormat$Field.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Ftext%2FMessageFormat%24Field.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Ftext%2FMessageFormat%24Field.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Ftext%2FMessageFormat%24Field.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "b077c51624c72bb6b826836165a2ed60d2f72dbf", "filename": "libjava/classpath/lib/java/text/MessageFormat.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Ftext%2FMessageFormat.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Ftext%2FMessageFormat.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Ftext%2FMessageFormat.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "3f43075427f32fbeb72d93155256cce4f4f3e4d0", "filename": "libjava/classpath/lib/java/text/NumberFormat$Field.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Ftext%2FNumberFormat%24Field.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Ftext%2FNumberFormat%24Field.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Ftext%2FNumberFormat%24Field.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "0a1939e8829cdea64dbc684ebff4183a23d4fedd", "filename": "libjava/classpath/lib/java/text/NumberFormat.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Ftext%2FNumberFormat.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Ftext%2FNumberFormat.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Ftext%2FNumberFormat.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "a6de266da51a25457865b0c82015d2ff32132950", "filename": "libjava/classpath/lib/java/text/SimpleDateFormat.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Ftext%2FSimpleDateFormat.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Ftext%2FSimpleDateFormat.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Ftext%2FSimpleDateFormat.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "efe63ea919a6d9299da1ec60eabf08d542cdf4b7", "filename": "libjava/classpath/lib/java/util/Collections$1$SynchronizedMapEntry.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%241%24SynchronizedMapEntry.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%241%24SynchronizedMapEntry.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%241%24SynchronizedMapEntry.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "ce90ce96f670672eff7f632c62b201719daf25ba", "filename": "libjava/classpath/lib/java/util/Collections$1.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%241.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%241.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%241.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "2ed6a1167dbc6d111f5ab05f0844bc57d40820f9", "filename": "libjava/classpath/lib/java/util/Collections$2.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%242.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%242.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%242.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "575702bfeefc763fb8fae7d6cbe9c92d9d407778", "filename": "libjava/classpath/lib/java/util/Collections$3.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%243.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%243.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%243.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "8bcf8e2bf3d5041b41cbf0b564c4379d77dac8e8", "filename": "libjava/classpath/lib/java/util/Collections$4.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%244.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%244.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%244.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "18e449828ef4b490e09e8787485f586b343d2733", "filename": "libjava/classpath/lib/java/util/Collections$5.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%245.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%245.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%245.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "70025e358502a56208c526c385eb88f2dc5ad23e", "filename": "libjava/classpath/lib/java/util/Collections$6.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%246.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%246.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%246.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "4a0a105d70469f27919f8ebea58d72d005b09647", "filename": "libjava/classpath/lib/java/util/Collections$7.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%247.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%247.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%247.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "d5c1b9f2da2c28b70436c71df43f98d25d280afc", "filename": "libjava/classpath/lib/java/util/Collections$8.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%248.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%248.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%248.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "9bfb7953aaaf2dafe8e76727713cebf30d887645", "filename": "libjava/classpath/lib/java/util/Collections$9.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%249.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%249.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%249.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "b2112a8d286fe3b83e1fadb02b314b7818284634", "filename": "libjava/classpath/lib/java/util/Collections$CheckedCollection.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24CheckedCollection.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24CheckedCollection.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24CheckedCollection.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "9d24eba7fe71af10e8113558db29137c713b7b3a", "filename": "libjava/classpath/lib/java/util/Collections$CheckedIterator.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24CheckedIterator.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24CheckedIterator.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24CheckedIterator.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "153d80288d5d6d7336bf331c751219bc215ea561", "filename": "libjava/classpath/lib/java/util/Collections$CheckedList.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24CheckedList.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24CheckedList.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24CheckedList.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "0af97b9765b629d271b17637cf9f17a13043087f", "filename": "libjava/classpath/lib/java/util/Collections$CheckedListIterator.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24CheckedListIterator.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24CheckedListIterator.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24CheckedListIterator.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "1e0de3b641099d7172116783c374993c6ed819c9", "filename": "libjava/classpath/lib/java/util/Collections$CheckedMap$CheckedEntrySet.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24CheckedMap%24CheckedEntrySet.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24CheckedMap%24CheckedEntrySet.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24CheckedMap%24CheckedEntrySet.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "92527ed7abc4f91308473a9a24734232d4c669c3", "filename": "libjava/classpath/lib/java/util/Collections$CheckedMap.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24CheckedMap.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24CheckedMap.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24CheckedMap.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "9ae361edfa615caf22110128bb60a44eed421a09", "filename": "libjava/classpath/lib/java/util/Collections$CheckedRandomAccessList.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24CheckedRandomAccessList.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24CheckedRandomAccessList.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24CheckedRandomAccessList.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "b8694fc42ad4ad530419fd9e7c084ca8575d6d4a", "filename": "libjava/classpath/lib/java/util/Collections$CheckedSet.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24CheckedSet.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24CheckedSet.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24CheckedSet.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "0af46c40e84528d149586c2fe778b4a2792a0fb0", "filename": "libjava/classpath/lib/java/util/Collections$CheckedSortedMap.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24CheckedSortedMap.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24CheckedSortedMap.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24CheckedSortedMap.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "76b1860527cf2e5570921fd07b4cb9730b1a3cda", "filename": "libjava/classpath/lib/java/util/Collections$CheckedSortedSet.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24CheckedSortedSet.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24CheckedSortedSet.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24CheckedSortedSet.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "6b1784522055b105d1277464b1cb14955472622e", "filename": "libjava/classpath/lib/java/util/Collections$CopiesList.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24CopiesList.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24CopiesList.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24CopiesList.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "11fee9ad7dc14e0523ce9344620eedb171083db6", "filename": "libjava/classpath/lib/java/util/Collections$EmptyList.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24EmptyList.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24EmptyList.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24EmptyList.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "960b9fbfc40ca748913f5e7760ab7fd64017da5e", "filename": "libjava/classpath/lib/java/util/Collections$EmptyMap.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24EmptyMap.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24EmptyMap.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24EmptyMap.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "d099ca2f11114467213fd4a94525ffa020001b7b", "filename": "libjava/classpath/lib/java/util/Collections$EmptySet.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24EmptySet.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24EmptySet.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24EmptySet.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "25475af47b364742dda638386540997fbf1de4df", "filename": "libjava/classpath/lib/java/util/Collections$LIFOQueue.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24LIFOQueue.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24LIFOQueue.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24LIFOQueue.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "e89a8a5701ee31ae38c2936f1afe193cf3321169", "filename": "libjava/classpath/lib/java/util/Collections$MapSet.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24MapSet.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24MapSet.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24MapSet.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "5dae886b7eb5e8b511c3a4ed8d6ecb09c407f6af", "filename": "libjava/classpath/lib/java/util/Collections$ReverseComparator.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24ReverseComparator.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24ReverseComparator.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24ReverseComparator.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "386f9e2186001b2c56f41f194a402c9cd275faa5", "filename": "libjava/classpath/lib/java/util/Collections$SingletonList.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24SingletonList.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24SingletonList.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24SingletonList.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "e5f2dec278551f3d9776ff1315bb89f022fd06a3", "filename": "libjava/classpath/lib/java/util/Collections$SingletonMap.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24SingletonMap.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24SingletonMap.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24SingletonMap.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "74259753f38d288969f27794443ccb8a9e3196e7", "filename": "libjava/classpath/lib/java/util/Collections$SingletonSet.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24SingletonSet.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24SingletonSet.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24SingletonSet.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "0137ad0e5009aa9c400d65797392ad0fa108a3b5", "filename": "libjava/classpath/lib/java/util/Collections$SynchronizedCollection.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24SynchronizedCollection.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24SynchronizedCollection.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24SynchronizedCollection.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "0326c55b3438bd6b3b02f22aa23284b1a4d319ea", "filename": "libjava/classpath/lib/java/util/Collections$SynchronizedIterator.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24SynchronizedIterator.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24SynchronizedIterator.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24SynchronizedIterator.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "24776e1b480b50c4dc7a563d08a8090f8a7573b5", "filename": "libjava/classpath/lib/java/util/Collections$SynchronizedList.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24SynchronizedList.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24SynchronizedList.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24SynchronizedList.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "b3939e6e574ce15906d632fee738914fe7259e69", "filename": "libjava/classpath/lib/java/util/Collections$SynchronizedListIterator.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24SynchronizedListIterator.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24SynchronizedListIterator.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24SynchronizedListIterator.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "c4b9b58a77644ed70fe454edd14002f5c3c4f04a", "filename": "libjava/classpath/lib/java/util/Collections$SynchronizedMap.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24SynchronizedMap.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24SynchronizedMap.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24SynchronizedMap.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "9efce59f14369259b4a1225d05ae4a30cacbd5ba", "filename": "libjava/classpath/lib/java/util/Collections$SynchronizedRandomAccessList.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24SynchronizedRandomAccessList.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24SynchronizedRandomAccessList.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24SynchronizedRandomAccessList.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "f19098e5c0e7777a060e84bcbf3baaf56c417f43", "filename": "libjava/classpath/lib/java/util/Collections$SynchronizedSet.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24SynchronizedSet.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24SynchronizedSet.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24SynchronizedSet.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "5d7cbf97da39537d01e736bc15f73581d7fdff2b", "filename": "libjava/classpath/lib/java/util/Collections$SynchronizedSortedMap.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24SynchronizedSortedMap.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24SynchronizedSortedMap.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24SynchronizedSortedMap.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "d985d01975f9cc67da6f7c17426e53794f2a8984", "filename": "libjava/classpath/lib/java/util/Collections$SynchronizedSortedSet.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24SynchronizedSortedSet.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24SynchronizedSortedSet.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24SynchronizedSortedSet.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "f7ccb5a784468e6e5a45797606fb7ba02ef7f5df", "filename": "libjava/classpath/lib/java/util/Collections$UnmodifiableCollection.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24UnmodifiableCollection.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24UnmodifiableCollection.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24UnmodifiableCollection.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "b82ef1134b1113468438241be8694902807a61cd", "filename": "libjava/classpath/lib/java/util/Collections$UnmodifiableIterator.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24UnmodifiableIterator.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24UnmodifiableIterator.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24UnmodifiableIterator.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "98c66ce661a987f436e1150bcf710c5c8d6880c5", "filename": "libjava/classpath/lib/java/util/Collections$UnmodifiableList.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24UnmodifiableList.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24UnmodifiableList.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24UnmodifiableList.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "73150c8fe14b34c20e88825f63c4531d0e37b418", "filename": "libjava/classpath/lib/java/util/Collections$UnmodifiableListIterator.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24UnmodifiableListIterator.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24UnmodifiableListIterator.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24UnmodifiableListIterator.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "0d4581ef81a376fc1ebd4fab7b820a9a32ea85b3", "filename": "libjava/classpath/lib/java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableMapEntry.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24UnmodifiableMap%24UnmodifiableEntrySet%24UnmodifiableMapEntry.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24UnmodifiableMap%24UnmodifiableEntrySet%24UnmodifiableMapEntry.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24UnmodifiableMap%24UnmodifiableEntrySet%24UnmodifiableMapEntry.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "664edb1c76ad6792e5afcc2cbe69bf5ab55a8399", "filename": "libjava/classpath/lib/java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24UnmodifiableMap%24UnmodifiableEntrySet.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24UnmodifiableMap%24UnmodifiableEntrySet.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24UnmodifiableMap%24UnmodifiableEntrySet.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "7a9ea6e229ee947f0d96c56a954c37dbef6f683e", "filename": "libjava/classpath/lib/java/util/Collections$UnmodifiableMap.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24UnmodifiableMap.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24UnmodifiableMap.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24UnmodifiableMap.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "589ee32e42d0f8891b0db52348f701d9d1573573", "filename": "libjava/classpath/lib/java/util/Collections$UnmodifiableRandomAccessList.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24UnmodifiableRandomAccessList.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24UnmodifiableRandomAccessList.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24UnmodifiableRandomAccessList.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "77c4642f8294e63c3d2b06fa66252e3d1057928f", "filename": "libjava/classpath/lib/java/util/Collections$UnmodifiableSet.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24UnmodifiableSet.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24UnmodifiableSet.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24UnmodifiableSet.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "0a3361563748c3dff24d0a53252043368bff911e", "filename": "libjava/classpath/lib/java/util/Collections$UnmodifiableSortedMap.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24UnmodifiableSortedMap.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24UnmodifiableSortedMap.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24UnmodifiableSortedMap.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "83ff190d122a92c44fbc1e5f4805ae7c7756bffb", "filename": "libjava/classpath/lib/java/util/Collections$UnmodifiableSortedSet.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24UnmodifiableSortedSet.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24UnmodifiableSortedSet.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections%24UnmodifiableSortedSet.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "e2f120771415e215c067bee6ed3598597c5155a5", "filename": "libjava/classpath/lib/java/util/Collections.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FCollections.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "54020a65f4ca57d008a2f221ddd46ebfc4647b8e", "filename": "libjava/classpath/lib/java/util/Formatter.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FFormatter.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FFormatter.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FFormatter.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "b97d9ca01d69c5b4ddb81d95ab386a2c3db06c48", "filename": "libjava/classpath/lib/java/util/TimeZone$1.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FTimeZone%241.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FTimeZone%241.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FTimeZone%241.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "b971d38889b687944286d373ff5755d6464a777a", "filename": "libjava/classpath/lib/java/util/TimeZone.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FTimeZone.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FTimeZone.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2FTimeZone.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "c1632e9490af6d38b5b09e76f3113b35153550a7", "filename": "libjava/classpath/lib/java/util/regex/Matcher.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2Fregex%2FMatcher.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2Fregex%2FMatcher.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2Fregex%2FMatcher.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "2208e38b9127445c20f1cdcd79898970eb33cdae", "filename": "libjava/classpath/lib/javax/security/sasl/Sasl.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjavax%2Fsecurity%2Fsasl%2FSasl.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjavax%2Fsecurity%2Fsasl%2FSasl.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjavax%2Fsecurity%2Fsasl%2FSasl.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "42e8118f914beaa017f94bc96e9b68ecc2845aef", "filename": "libjava/classpath/lib/javax/sound/midi/MetaMessage.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjavax%2Fsound%2Fmidi%2FMetaMessage.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjavax%2Fsound%2Fmidi%2FMetaMessage.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjavax%2Fsound%2Fmidi%2FMetaMessage.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "08ec6aa66c1d7efaf56d57b805c1c3df3a05fe14", "filename": "libjava/classpath/lib/javax/sound/midi/MidiDevice$Info.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjavax%2Fsound%2Fmidi%2FMidiDevice%24Info.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjavax%2Fsound%2Fmidi%2FMidiDevice%24Info.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjavax%2Fsound%2Fmidi%2FMidiDevice%24Info.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "4c0727f53385813f453fddcb2591993dbd49f3a6", "filename": "libjava/classpath/lib/javax/sound/midi/MidiDevice.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjavax%2Fsound%2Fmidi%2FMidiDevice.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjavax%2Fsound%2Fmidi%2FMidiDevice.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjavax%2Fsound%2Fmidi%2FMidiDevice.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "1e7b3c9cad8f9dc760e7f2deb1849631c8c201e9", "filename": "libjava/classpath/lib/javax/sound/midi/MidiSystem.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjavax%2Fsound%2Fmidi%2FMidiSystem.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjavax%2Fsound%2Fmidi%2FMidiSystem.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjavax%2Fsound%2Fmidi%2FMidiSystem.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "01b552499f25712e243bb3c93550b352057ccc48", "filename": "libjava/classpath/lib/javax/sound/midi/Receiver.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjavax%2Fsound%2Fmidi%2FReceiver.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjavax%2Fsound%2Fmidi%2FReceiver.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjavax%2Fsound%2Fmidi%2FReceiver.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "6ff8e6175a8c282a8c5390cb5d0d38b221adb9d0", "filename": "libjava/classpath/lib/javax/sound/midi/SoundbankResource.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjavax%2Fsound%2Fmidi%2FSoundbankResource.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjavax%2Fsound%2Fmidi%2FSoundbankResource.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjavax%2Fsound%2Fmidi%2FSoundbankResource.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "bdbc3a80b6442ec30cdb3e6d263f7eae02ea28f2", "filename": "libjava/classpath/lib/javax/sound/midi/Track.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjavax%2Fsound%2Fmidi%2FTrack.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjavax%2Fsound%2Fmidi%2FTrack.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjavax%2Fsound%2Fmidi%2FTrack.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "b68647baefba22127fb1e62f129ca7dcbc91ee3a", "filename": "libjava/classpath/lib/javax/sound/midi/Transmitter.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjavax%2Fsound%2Fmidi%2FTransmitter.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjavax%2Fsound%2Fmidi%2FTransmitter.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjavax%2Fsound%2Fmidi%2FTransmitter.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "4c0d466d5836ec775a9c188d84537a38a1b597dc", "filename": "libjava/classpath/lib/javax/sound/sampled/AudioSystem.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjavax%2Fsound%2Fsampled%2FAudioSystem.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjavax%2Fsound%2Fsampled%2FAudioSystem.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjavax%2Fsound%2Fsampled%2FAudioSystem.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "b12d731a3779392abfe40bd5d0d0bbc7fb8f19e1", "filename": "libjava/classpath/lib/javax/sound/sampled/Line$Info.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjavax%2Fsound%2Fsampled%2FLine%24Info.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjavax%2Fsound%2Fsampled%2FLine%24Info.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjavax%2Fsound%2Fsampled%2FLine%24Info.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "56aec6b25e996bf54eead13d166b88db35e78e43", "filename": "libjava/classpath/lib/javax/sound/sampled/Line.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjavax%2Fsound%2Fsampled%2FLine.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjavax%2Fsound%2Fsampled%2FLine.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjavax%2Fsound%2Fsampled%2FLine.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "b79d528ca3d86b9775d5b337785ca56c58da75ce", "filename": "libjava/classpath/lib/javax/swing/tree/DefaultMutableTreeNode$BreadthFirstEnumeration.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjavax%2Fswing%2Ftree%2FDefaultMutableTreeNode%24BreadthFirstEnumeration.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjavax%2Fswing%2Ftree%2FDefaultMutableTreeNode%24BreadthFirstEnumeration.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjavax%2Fswing%2Ftree%2FDefaultMutableTreeNode%24BreadthFirstEnumeration.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "8e60a6bf8c3b70e56f83087511e080a7d4ee4fca", "filename": "libjava/classpath/lib/javax/swing/tree/DefaultMutableTreeNode$PostorderEnumeration.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjavax%2Fswing%2Ftree%2FDefaultMutableTreeNode%24PostorderEnumeration.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjavax%2Fswing%2Ftree%2FDefaultMutableTreeNode%24PostorderEnumeration.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjavax%2Fswing%2Ftree%2FDefaultMutableTreeNode%24PostorderEnumeration.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "132bbb773f50b8742ce987aa044db1f2a15ec669", "filename": "libjava/classpath/lib/javax/swing/tree/DefaultMutableTreeNode$PreorderEnumeration.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjavax%2Fswing%2Ftree%2FDefaultMutableTreeNode%24PreorderEnumeration.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Flib%2Fjavax%2Fswing%2Ftree%2FDefaultMutableTreeNode%24PreorderEnumeration.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjavax%2Fswing%2Ftree%2FDefaultMutableTreeNode%24PreorderEnumeration.class?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7"}, {"sha": "0f8f226efbd751ff67eafe1ff214161c6e550b71", "filename": "libjava/classpath/m4/ac_prog_javac.m4", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fm4%2Fac_prog_javac.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fm4%2Fac_prog_javac.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fm4%2Fac_prog_javac.m4?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -36,7 +36,7 @@ dnl Modified to remove jikes by Andrew John Hughes on 2008-02-11\n \n AC_DEFUN_ONCE([AC_PROG_JAVAC],[\n AC_REQUIRE([AC_EXEEXT])dnl\n-ECJ_OPTS=\"-warn:-deprecation,serial,unusedImport\"\n+ECJ_OPTS=\"-warn:-deprecation,serial,unusedImport,unusedPrivate,resource\"\n JAVAC_OPTS=\"-Xlint:unchecked,cast,divzero,empty,finally,overrides\"\n GCJ_OPTS=\"-g\"\n if test \"x$JAVAPREFIX\" = x; then"}, {"sha": "b5fa999bb5e7d826934927f7ea1e6ab12155e529", "filename": "libjava/classpath/m4/acinclude.m4", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fm4%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fm4%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fm4%2Facinclude.m4?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -190,6 +190,8 @@ AC_DEFUN([CLASSPATH_WITH_GJDOC],\n     case ${gjdoc_version} in\n       0.7.9) ;;\n       0.8*) ;;\n+      0.9*) ;;\n+      1*) ;;\n       *) AC_MSG_ERROR([Building documentation requires GJDoc >= 0.7.9, ${gjdoc_version} found.]) ;;\n     esac\n   fi"}, {"sha": "ebb30528bd5abfdfcc2126175cbe1de99d902457", "filename": "libjava/classpath/m4/lib-ld.m4", "status": "added", "additions": 110, "deletions": 0, "changes": 110, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fm4%2Flib-ld.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fm4%2Flib-ld.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fm4%2Flib-ld.m4?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -0,0 +1,110 @@\n+# lib-ld.m4 serial 4 (gettext-0.18)\n+dnl Copyright (C) 1996-2003, 2009-2010 Free Software Foundation, Inc.\n+dnl This file is free software; the Free Software Foundation\n+dnl gives unlimited permission to copy and/or distribute it,\n+dnl with or without modifications, as long as this notice is preserved.\n+\n+dnl Subroutines of libtool.m4,\n+dnl with replacements s/AC_/AC_LIB/ and s/lt_cv/acl_cv/ to avoid collision\n+dnl with libtool.m4.\n+\n+dnl From libtool-1.4. Sets the variable with_gnu_ld to yes or no.\n+AC_DEFUN([AC_LIB_PROG_LD_GNU],\n+[AC_CACHE_CHECK([if the linker ($LD) is GNU ld], [acl_cv_prog_gnu_ld],\n+[# I'd rather use --version here, but apparently some GNU ld's only accept -v.\n+case `$LD -v 2>&1 </dev/null` in\n+*GNU* | *'with BFD'*)\n+  acl_cv_prog_gnu_ld=yes ;;\n+*)\n+  acl_cv_prog_gnu_ld=no ;;\n+esac])\n+with_gnu_ld=$acl_cv_prog_gnu_ld\n+])\n+\n+dnl From libtool-1.4. Sets the variable LD.\n+AC_DEFUN([AC_LIB_PROG_LD],\n+[AC_ARG_WITH([gnu-ld],\n+[  --with-gnu-ld           assume the C compiler uses GNU ld [default=no]],\n+test \"$withval\" = no || with_gnu_ld=yes, with_gnu_ld=no)\n+AC_REQUIRE([AC_PROG_CC])dnl\n+AC_REQUIRE([AC_CANONICAL_HOST])dnl\n+# Prepare PATH_SEPARATOR.\n+# The user is always right.\n+if test \"${PATH_SEPARATOR+set}\" != set; then\n+  echo \"#! /bin/sh\" >conf$$.sh\n+  echo  \"exit 0\"   >>conf$$.sh\n+  chmod +x conf$$.sh\n+  if (PATH=\"/nonexistent;.\"; conf$$.sh) >/dev/null 2>&1; then\n+    PATH_SEPARATOR=';'\n+  else\n+    PATH_SEPARATOR=:\n+  fi\n+  rm -f conf$$.sh\n+fi\n+ac_prog=ld\n+if test \"$GCC\" = yes; then\n+  # Check if gcc -print-prog-name=ld gives a path.\n+  AC_MSG_CHECKING([for ld used by GCC])\n+  case $host in\n+  *-*-mingw*)\n+    # gcc leaves a trailing carriage return which upsets mingw\n+    ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\\015'` ;;\n+  *)\n+    ac_prog=`($CC -print-prog-name=ld) 2>&5` ;;\n+  esac\n+  case $ac_prog in\n+    # Accept absolute paths.\n+    [[\\\\/]* | [A-Za-z]:[\\\\/]*)]\n+      [re_direlt='/[^/][^/]*/\\.\\./']\n+      # Canonicalize the path of ld\n+      ac_prog=`echo $ac_prog| sed 's%\\\\\\\\%/%g'`\n+      while echo $ac_prog | grep \"$re_direlt\" > /dev/null 2>&1; do\n+        ac_prog=`echo $ac_prog| sed \"s%$re_direlt%/%\"`\n+      done\n+      test -z \"$LD\" && LD=\"$ac_prog\"\n+      ;;\n+  \"\")\n+    # If it fails, then pretend we aren't using GCC.\n+    ac_prog=ld\n+    ;;\n+  *)\n+    # If it is relative, then search for the first ld in PATH.\n+    with_gnu_ld=unknown\n+    ;;\n+  esac\n+elif test \"$with_gnu_ld\" = yes; then\n+  AC_MSG_CHECKING([for GNU ld])\n+else\n+  AC_MSG_CHECKING([for non-GNU ld])\n+fi\n+AC_CACHE_VAL([acl_cv_path_LD],\n+[if test -z \"$LD\"; then\n+  IFS=\"${IFS= \t}\"; ac_save_ifs=\"$IFS\"; IFS=\"${IFS}${PATH_SEPARATOR-:}\"\n+  for ac_dir in $PATH; do\n+    test -z \"$ac_dir\" && ac_dir=.\n+    if test -f \"$ac_dir/$ac_prog\" || test -f \"$ac_dir/$ac_prog$ac_exeext\"; then\n+      acl_cv_path_LD=\"$ac_dir/$ac_prog\"\n+      # Check to see if the program is GNU ld.  I'd rather use --version,\n+      # but apparently some GNU ld's only accept -v.\n+      # Break only if it was the GNU/non-GNU ld that we prefer.\n+      case `\"$acl_cv_path_LD\" -v 2>&1 < /dev/null` in\n+      *GNU* | *'with BFD'*)\n+        test \"$with_gnu_ld\" != no && break ;;\n+      *)\n+        test \"$with_gnu_ld\" != yes && break ;;\n+      esac\n+    fi\n+  done\n+  IFS=\"$ac_save_ifs\"\n+else\n+  acl_cv_path_LD=\"$LD\" # Let the user override the test with a path.\n+fi])\n+LD=\"$acl_cv_path_LD\"\n+if test -n \"$LD\"; then\n+  AC_MSG_RESULT([$LD])\n+else\n+  AC_MSG_RESULT([no])\n+fi\n+test -z \"$LD\" && AC_MSG_ERROR([no acceptable ld found in \\$PATH])\n+AC_LIB_PROG_LD_GNU\n+])"}, {"sha": "c73bd8e3a478ce61292aaa298d42aad15c9d348a", "filename": "libjava/classpath/m4/lib-link.m4", "status": "added", "additions": 774, "deletions": 0, "changes": 774, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fm4%2Flib-link.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fm4%2Flib-link.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fm4%2Flib-link.m4?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -0,0 +1,774 @@\n+# lib-link.m4 serial 21 (gettext-0.18)\n+dnl Copyright (C) 2001-2010 Free Software Foundation, Inc.\n+dnl This file is free software; the Free Software Foundation\n+dnl gives unlimited permission to copy and/or distribute it,\n+dnl with or without modifications, as long as this notice is preserved.\n+\n+dnl From Bruno Haible.\n+\n+AC_PREREQ([2.54])\n+\n+dnl AC_LIB_LINKFLAGS(name [, dependencies]) searches for libname and\n+dnl the libraries corresponding to explicit and implicit dependencies.\n+dnl Sets and AC_SUBSTs the LIB${NAME} and LTLIB${NAME} variables and\n+dnl augments the CPPFLAGS variable.\n+dnl Sets and AC_SUBSTs the LIB${NAME}_PREFIX variable to nonempty if libname\n+dnl was found in ${LIB${NAME}_PREFIX}/$acl_libdirstem.\n+AC_DEFUN([AC_LIB_LINKFLAGS],\n+[\n+  AC_REQUIRE([AC_LIB_PREPARE_PREFIX])\n+  AC_REQUIRE([AC_LIB_RPATH])\n+  pushdef([Name],[translit([$1],[./-], [___])])\n+  pushdef([NAME],[translit([$1],[abcdefghijklmnopqrstuvwxyz./-],\n+                                [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])])\n+  AC_CACHE_CHECK([how to link with lib[]$1], [ac_cv_lib[]Name[]_libs], [\n+    AC_LIB_LINKFLAGS_BODY([$1], [$2])\n+    ac_cv_lib[]Name[]_libs=\"$LIB[]NAME\"\n+    ac_cv_lib[]Name[]_ltlibs=\"$LTLIB[]NAME\"\n+    ac_cv_lib[]Name[]_cppflags=\"$INC[]NAME\"\n+    ac_cv_lib[]Name[]_prefix=\"$LIB[]NAME[]_PREFIX\"\n+  ])\n+  LIB[]NAME=\"$ac_cv_lib[]Name[]_libs\"\n+  LTLIB[]NAME=\"$ac_cv_lib[]Name[]_ltlibs\"\n+  INC[]NAME=\"$ac_cv_lib[]Name[]_cppflags\"\n+  LIB[]NAME[]_PREFIX=\"$ac_cv_lib[]Name[]_prefix\"\n+  AC_LIB_APPENDTOVAR([CPPFLAGS], [$INC]NAME)\n+  AC_SUBST([LIB]NAME)\n+  AC_SUBST([LTLIB]NAME)\n+  AC_SUBST([LIB]NAME[_PREFIX])\n+  dnl Also set HAVE_LIB[]NAME so that AC_LIB_HAVE_LINKFLAGS can reuse the\n+  dnl results of this search when this library appears as a dependency.\n+  HAVE_LIB[]NAME=yes\n+  popdef([NAME])\n+  popdef([Name])\n+])\n+\n+dnl AC_LIB_HAVE_LINKFLAGS(name, dependencies, includes, testcode, [missing-message])\n+dnl searches for libname and the libraries corresponding to explicit and\n+dnl implicit dependencies, together with the specified include files and\n+dnl the ability to compile and link the specified testcode. The missing-message\n+dnl defaults to 'no' and may contain additional hints for the user.\n+dnl If found, it sets and AC_SUBSTs HAVE_LIB${NAME}=yes and the LIB${NAME}\n+dnl and LTLIB${NAME} variables and augments the CPPFLAGS variable, and\n+dnl #defines HAVE_LIB${NAME} to 1. Otherwise, it sets and AC_SUBSTs\n+dnl HAVE_LIB${NAME}=no and LIB${NAME} and LTLIB${NAME} to empty.\n+dnl Sets and AC_SUBSTs the LIB${NAME}_PREFIX variable to nonempty if libname\n+dnl was found in ${LIB${NAME}_PREFIX}/$acl_libdirstem.\n+AC_DEFUN([AC_LIB_HAVE_LINKFLAGS],\n+[\n+  AC_REQUIRE([AC_LIB_PREPARE_PREFIX])\n+  AC_REQUIRE([AC_LIB_RPATH])\n+  pushdef([Name],[translit([$1],[./-], [___])])\n+  pushdef([NAME],[translit([$1],[abcdefghijklmnopqrstuvwxyz./-],\n+                                [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])])\n+\n+  dnl Search for lib[]Name and define LIB[]NAME, LTLIB[]NAME and INC[]NAME\n+  dnl accordingly.\n+  AC_LIB_LINKFLAGS_BODY([$1], [$2])\n+\n+  dnl Add $INC[]NAME to CPPFLAGS before performing the following checks,\n+  dnl because if the user has installed lib[]Name and not disabled its use\n+  dnl via --without-lib[]Name-prefix, he wants to use it.\n+  ac_save_CPPFLAGS=\"$CPPFLAGS\"\n+  AC_LIB_APPENDTOVAR([CPPFLAGS], [$INC]NAME)\n+\n+  AC_CACHE_CHECK([for lib[]$1], [ac_cv_lib[]Name], [\n+    ac_save_LIBS=\"$LIBS\"\n+    dnl If $LIB[]NAME contains some -l options, add it to the end of LIBS,\n+    dnl because these -l options might require -L options that are present in\n+    dnl LIBS. -l options benefit only from the -L options listed before it.\n+    dnl Otherwise, add it to the front of LIBS, because it may be a static\n+    dnl library that depends on another static library that is present in LIBS.\n+    dnl Static libraries benefit only from the static libraries listed after\n+    dnl it.\n+    case \" $LIB[]NAME\" in\n+      *\" -l\"*) LIBS=\"$LIBS $LIB[]NAME\" ;;\n+      *)       LIBS=\"$LIB[]NAME $LIBS\" ;;\n+    esac\n+    AC_TRY_LINK([$3], [$4],\n+      [ac_cv_lib[]Name=yes],\n+      [ac_cv_lib[]Name='m4_if([$5], [], [no], [[$5]])'])\n+    LIBS=\"$ac_save_LIBS\"\n+  ])\n+  if test \"$ac_cv_lib[]Name\" = yes; then\n+    HAVE_LIB[]NAME=yes\n+    AC_DEFINE([HAVE_LIB]NAME, 1, [Define if you have the lib][$1 library.])\n+    AC_MSG_CHECKING([how to link with lib[]$1])\n+    AC_MSG_RESULT([$LIB[]NAME])\n+  else\n+    HAVE_LIB[]NAME=no\n+    dnl If $LIB[]NAME didn't lead to a usable library, we don't need\n+    dnl $INC[]NAME either.\n+    CPPFLAGS=\"$ac_save_CPPFLAGS\"\n+    LIB[]NAME=\n+    LTLIB[]NAME=\n+    LIB[]NAME[]_PREFIX=\n+  fi\n+  AC_SUBST([HAVE_LIB]NAME)\n+  AC_SUBST([LIB]NAME)\n+  AC_SUBST([LTLIB]NAME)\n+  AC_SUBST([LIB]NAME[_PREFIX])\n+  popdef([NAME])\n+  popdef([Name])\n+])\n+\n+dnl Determine the platform dependent parameters needed to use rpath:\n+dnl   acl_libext,\n+dnl   acl_shlibext,\n+dnl   acl_hardcode_libdir_flag_spec,\n+dnl   acl_hardcode_libdir_separator,\n+dnl   acl_hardcode_direct,\n+dnl   acl_hardcode_minus_L.\n+AC_DEFUN([AC_LIB_RPATH],\n+[\n+  dnl Tell automake >= 1.10 to complain if config.rpath is missing.\n+  m4_ifdef([AC_REQUIRE_AUX_FILE], [AC_REQUIRE_AUX_FILE([config.rpath])])\n+  AC_REQUIRE([AC_PROG_CC])                dnl we use $CC, $GCC, $LDFLAGS\n+  AC_REQUIRE([AC_LIB_PROG_LD])            dnl we use $LD, $with_gnu_ld\n+  AC_REQUIRE([AC_CANONICAL_HOST])         dnl we use $host\n+  AC_REQUIRE([AC_CONFIG_AUX_DIR_DEFAULT]) dnl we use $ac_aux_dir\n+  AC_CACHE_CHECK([for shared library run path origin], [acl_cv_rpath], [\n+    CC=\"$CC\" GCC=\"$GCC\" LDFLAGS=\"$LDFLAGS\" LD=\"$LD\" with_gnu_ld=\"$with_gnu_ld\" \\\n+    ${CONFIG_SHELL-/bin/sh} \"$ac_aux_dir/config.rpath\" \"$host\" > conftest.sh\n+    . ./conftest.sh\n+    rm -f ./conftest.sh\n+    acl_cv_rpath=done\n+  ])\n+  wl=\"$acl_cv_wl\"\n+  acl_libext=\"$acl_cv_libext\"\n+  acl_shlibext=\"$acl_cv_shlibext\"\n+  acl_libname_spec=\"$acl_cv_libname_spec\"\n+  acl_library_names_spec=\"$acl_cv_library_names_spec\"\n+  acl_hardcode_libdir_flag_spec=\"$acl_cv_hardcode_libdir_flag_spec\"\n+  acl_hardcode_libdir_separator=\"$acl_cv_hardcode_libdir_separator\"\n+  acl_hardcode_direct=\"$acl_cv_hardcode_direct\"\n+  acl_hardcode_minus_L=\"$acl_cv_hardcode_minus_L\"\n+  dnl Determine whether the user wants rpath handling at all.\n+  AC_ARG_ENABLE([rpath],\n+    [  --disable-rpath         do not hardcode runtime library paths],\n+    :, enable_rpath=yes)\n+])\n+\n+dnl AC_LIB_FROMPACKAGE(name, package)\n+dnl declares that libname comes from the given package. The configure file\n+dnl will then not have a --with-libname-prefix option but a\n+dnl --with-package-prefix option. Several libraries can come from the same\n+dnl package. This declaration must occur before an AC_LIB_LINKFLAGS or similar\n+dnl macro call that searches for libname.\n+AC_DEFUN([AC_LIB_FROMPACKAGE],\n+[\n+  pushdef([NAME],[translit([$1],[abcdefghijklmnopqrstuvwxyz./-],\n+                                [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])])\n+  define([acl_frompackage_]NAME, [$2])\n+  popdef([NAME])\n+  pushdef([PACK],[$2])\n+  pushdef([PACKUP],[translit(PACK,[abcdefghijklmnopqrstuvwxyz./-],\n+                                  [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])])\n+  define([acl_libsinpackage_]PACKUP,\n+    m4_ifdef([acl_libsinpackage_]PACKUP, [acl_libsinpackage_]PACKUP[[, ]],)[lib$1])\n+  popdef([PACKUP])\n+  popdef([PACK])\n+])\n+\n+dnl AC_LIB_LINKFLAGS_BODY(name [, dependencies]) searches for libname and\n+dnl the libraries corresponding to explicit and implicit dependencies.\n+dnl Sets the LIB${NAME}, LTLIB${NAME} and INC${NAME} variables.\n+dnl Also, sets the LIB${NAME}_PREFIX variable to nonempty if libname was found\n+dnl in ${LIB${NAME}_PREFIX}/$acl_libdirstem.\n+AC_DEFUN([AC_LIB_LINKFLAGS_BODY],\n+[\n+  AC_REQUIRE([AC_LIB_PREPARE_MULTILIB])\n+  pushdef([NAME],[translit([$1],[abcdefghijklmnopqrstuvwxyz./-],\n+                                [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])])\n+  pushdef([PACK],[m4_ifdef([acl_frompackage_]NAME, [acl_frompackage_]NAME, lib[$1])])\n+  pushdef([PACKUP],[translit(PACK,[abcdefghijklmnopqrstuvwxyz./-],\n+                                  [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])])\n+  pushdef([PACKLIBS],[m4_ifdef([acl_frompackage_]NAME, [acl_libsinpackage_]PACKUP, lib[$1])])\n+  dnl Autoconf >= 2.61 supports dots in --with options.\n+  pushdef([P_A_C_K],[m4_if(m4_version_compare(m4_defn([m4_PACKAGE_VERSION]),[2.61]),[-1],[translit(PACK,[.],[_])],PACK)])\n+  dnl By default, look in $includedir and $libdir.\n+  use_additional=yes\n+  AC_LIB_WITH_FINAL_PREFIX([\n+    eval additional_includedir=\\\"$includedir\\\"\n+    eval additional_libdir=\\\"$libdir\\\"\n+  ])\n+  AC_ARG_WITH(P_A_C_K[-prefix],\n+[[  --with-]]P_A_C_K[[-prefix[=DIR]  search for ]PACKLIBS[ in DIR/include and DIR/lib\n+  --without-]]P_A_C_K[[-prefix     don't search for ]PACKLIBS[ in includedir and libdir]],\n+[\n+    if test \"X$withval\" = \"Xno\"; then\n+      use_additional=no\n+    else\n+      if test \"X$withval\" = \"X\"; then\n+        AC_LIB_WITH_FINAL_PREFIX([\n+          eval additional_includedir=\\\"$includedir\\\"\n+          eval additional_libdir=\\\"$libdir\\\"\n+        ])\n+      else\n+        additional_includedir=\"$withval/include\"\n+        additional_libdir=\"$withval/$acl_libdirstem\"\n+        if test \"$acl_libdirstem2\" != \"$acl_libdirstem\" \\\n+           && ! test -d \"$withval/$acl_libdirstem\"; then\n+          additional_libdir=\"$withval/$acl_libdirstem2\"\n+        fi\n+      fi\n+    fi\n+])\n+  dnl Search the library and its dependencies in $additional_libdir and\n+  dnl $LDFLAGS. Using breadth-first-seach.\n+  LIB[]NAME=\n+  LTLIB[]NAME=\n+  INC[]NAME=\n+  LIB[]NAME[]_PREFIX=\n+  dnl HAVE_LIB${NAME} is an indicator that LIB${NAME}, LTLIB${NAME} have been\n+  dnl computed. So it has to be reset here.\n+  HAVE_LIB[]NAME=\n+  rpathdirs=\n+  ltrpathdirs=\n+  names_already_handled=\n+  names_next_round='$1 $2'\n+  while test -n \"$names_next_round\"; do\n+    names_this_round=\"$names_next_round\"\n+    names_next_round=\n+    for name in $names_this_round; do\n+      already_handled=\n+      for n in $names_already_handled; do\n+        if test \"$n\" = \"$name\"; then\n+          already_handled=yes\n+          break\n+        fi\n+      done\n+      if test -z \"$already_handled\"; then\n+        names_already_handled=\"$names_already_handled $name\"\n+        dnl See if it was already located by an earlier AC_LIB_LINKFLAGS\n+        dnl or AC_LIB_HAVE_LINKFLAGS call.\n+        uppername=`echo \"$name\" | sed -e 'y|abcdefghijklmnopqrstuvwxyz./-|ABCDEFGHIJKLMNOPQRSTUVWXYZ___|'`\n+        eval value=\\\"\\$HAVE_LIB$uppername\\\"\n+        if test -n \"$value\"; then\n+          if test \"$value\" = yes; then\n+            eval value=\\\"\\$LIB$uppername\\\"\n+            test -z \"$value\" || LIB[]NAME=\"${LIB[]NAME}${LIB[]NAME:+ }$value\"\n+            eval value=\\\"\\$LTLIB$uppername\\\"\n+            test -z \"$value\" || LTLIB[]NAME=\"${LTLIB[]NAME}${LTLIB[]NAME:+ }$value\"\n+          else\n+            dnl An earlier call to AC_LIB_HAVE_LINKFLAGS has determined\n+            dnl that this library doesn't exist. So just drop it.\n+            :\n+          fi\n+        else\n+          dnl Search the library lib$name in $additional_libdir and $LDFLAGS\n+          dnl and the already constructed $LIBNAME/$LTLIBNAME.\n+          found_dir=\n+          found_la=\n+          found_so=\n+          found_a=\n+          eval libname=\\\"$acl_libname_spec\\\"    # typically: libname=lib$name\n+          if test -n \"$acl_shlibext\"; then\n+            shrext=\".$acl_shlibext\"             # typically: shrext=.so\n+          else\n+            shrext=\n+          fi\n+          if test $use_additional = yes; then\n+            dir=\"$additional_libdir\"\n+            dnl The same code as in the loop below:\n+            dnl First look for a shared library.\n+            if test -n \"$acl_shlibext\"; then\n+              if test -f \"$dir/$libname$shrext\"; then\n+                found_dir=\"$dir\"\n+                found_so=\"$dir/$libname$shrext\"\n+              else\n+                if test \"$acl_library_names_spec\" = '$libname$shrext$versuffix'; then\n+                  ver=`(cd \"$dir\" && \\\n+                        for f in \"$libname$shrext\".*; do echo \"$f\"; done \\\n+                        | sed -e \"s,^$libname$shrext\\\\\\\\.,,\" \\\n+                        | sort -t '.' -n -r -k1,1 -k2,2 -k3,3 -k4,4 -k5,5 \\\n+                        | sed 1q ) 2>/dev/null`\n+                  if test -n \"$ver\" && test -f \"$dir/$libname$shrext.$ver\"; then\n+                    found_dir=\"$dir\"\n+                    found_so=\"$dir/$libname$shrext.$ver\"\n+                  fi\n+                else\n+                  eval library_names=\\\"$acl_library_names_spec\\\"\n+                  for f in $library_names; do\n+                    if test -f \"$dir/$f\"; then\n+                      found_dir=\"$dir\"\n+                      found_so=\"$dir/$f\"\n+                      break\n+                    fi\n+                  done\n+                fi\n+              fi\n+            fi\n+            dnl Then look for a static library.\n+            if test \"X$found_dir\" = \"X\"; then\n+              if test -f \"$dir/$libname.$acl_libext\"; then\n+                found_dir=\"$dir\"\n+                found_a=\"$dir/$libname.$acl_libext\"\n+              fi\n+            fi\n+            if test \"X$found_dir\" != \"X\"; then\n+              if test -f \"$dir/$libname.la\"; then\n+                found_la=\"$dir/$libname.la\"\n+              fi\n+            fi\n+          fi\n+          if test \"X$found_dir\" = \"X\"; then\n+            for x in $LDFLAGS $LTLIB[]NAME; do\n+              AC_LIB_WITH_FINAL_PREFIX([eval x=\\\"$x\\\"])\n+              case \"$x\" in\n+                -L*)\n+                  dir=`echo \"X$x\" | sed -e 's/^X-L//'`\n+                  dnl First look for a shared library.\n+                  if test -n \"$acl_shlibext\"; then\n+                    if test -f \"$dir/$libname$shrext\"; then\n+                      found_dir=\"$dir\"\n+                      found_so=\"$dir/$libname$shrext\"\n+                    else\n+                      if test \"$acl_library_names_spec\" = '$libname$shrext$versuffix'; then\n+                        ver=`(cd \"$dir\" && \\\n+                              for f in \"$libname$shrext\".*; do echo \"$f\"; done \\\n+                              | sed -e \"s,^$libname$shrext\\\\\\\\.,,\" \\\n+                              | sort -t '.' -n -r -k1,1 -k2,2 -k3,3 -k4,4 -k5,5 \\\n+                              | sed 1q ) 2>/dev/null`\n+                        if test -n \"$ver\" && test -f \"$dir/$libname$shrext.$ver\"; then\n+                          found_dir=\"$dir\"\n+                          found_so=\"$dir/$libname$shrext.$ver\"\n+                        fi\n+                      else\n+                        eval library_names=\\\"$acl_library_names_spec\\\"\n+                        for f in $library_names; do\n+                          if test -f \"$dir/$f\"; then\n+                            found_dir=\"$dir\"\n+                            found_so=\"$dir/$f\"\n+                            break\n+                          fi\n+                        done\n+                      fi\n+                    fi\n+                  fi\n+                  dnl Then look for a static library.\n+                  if test \"X$found_dir\" = \"X\"; then\n+                    if test -f \"$dir/$libname.$acl_libext\"; then\n+                      found_dir=\"$dir\"\n+                      found_a=\"$dir/$libname.$acl_libext\"\n+                    fi\n+                  fi\n+                  if test \"X$found_dir\" != \"X\"; then\n+                    if test -f \"$dir/$libname.la\"; then\n+                      found_la=\"$dir/$libname.la\"\n+                    fi\n+                  fi\n+                  ;;\n+              esac\n+              if test \"X$found_dir\" != \"X\"; then\n+                break\n+              fi\n+            done\n+          fi\n+          if test \"X$found_dir\" != \"X\"; then\n+            dnl Found the library.\n+            LTLIB[]NAME=\"${LTLIB[]NAME}${LTLIB[]NAME:+ }-L$found_dir -l$name\"\n+            if test \"X$found_so\" != \"X\"; then\n+              dnl Linking with a shared library. We attempt to hardcode its\n+              dnl directory into the executable's runpath, unless it's the\n+              dnl standard /usr/lib.\n+              if test \"$enable_rpath\" = no \\\n+                 || test \"X$found_dir\" = \"X/usr/$acl_libdirstem\" \\\n+                 || test \"X$found_dir\" = \"X/usr/$acl_libdirstem2\"; then\n+                dnl No hardcoding is needed.\n+                LIB[]NAME=\"${LIB[]NAME}${LIB[]NAME:+ }$found_so\"\n+              else\n+                dnl Use an explicit option to hardcode DIR into the resulting\n+                dnl binary.\n+                dnl Potentially add DIR to ltrpathdirs.\n+                dnl The ltrpathdirs will be appended to $LTLIBNAME at the end.\n+                haveit=\n+                for x in $ltrpathdirs; do\n+                  if test \"X$x\" = \"X$found_dir\"; then\n+                    haveit=yes\n+                    break\n+                  fi\n+                done\n+                if test -z \"$haveit\"; then\n+                  ltrpathdirs=\"$ltrpathdirs $found_dir\"\n+                fi\n+                dnl The hardcoding into $LIBNAME is system dependent.\n+                if test \"$acl_hardcode_direct\" = yes; then\n+                  dnl Using DIR/libNAME.so during linking hardcodes DIR into the\n+                  dnl resulting binary.\n+                  LIB[]NAME=\"${LIB[]NAME}${LIB[]NAME:+ }$found_so\"\n+                else\n+                  if test -n \"$acl_hardcode_libdir_flag_spec\" && test \"$acl_hardcode_minus_L\" = no; then\n+                    dnl Use an explicit option to hardcode DIR into the resulting\n+                    dnl binary.\n+                    LIB[]NAME=\"${LIB[]NAME}${LIB[]NAME:+ }$found_so\"\n+                    dnl Potentially add DIR to rpathdirs.\n+                    dnl The rpathdirs will be appended to $LIBNAME at the end.\n+                    haveit=\n+                    for x in $rpathdirs; do\n+                      if test \"X$x\" = \"X$found_dir\"; then\n+                        haveit=yes\n+                        break\n+                      fi\n+                    done\n+                    if test -z \"$haveit\"; then\n+                      rpathdirs=\"$rpathdirs $found_dir\"\n+                    fi\n+                  else\n+                    dnl Rely on \"-L$found_dir\".\n+                    dnl But don't add it if it's already contained in the LDFLAGS\n+                    dnl or the already constructed $LIBNAME\n+                    haveit=\n+                    for x in $LDFLAGS $LIB[]NAME; do\n+                      AC_LIB_WITH_FINAL_PREFIX([eval x=\\\"$x\\\"])\n+                      if test \"X$x\" = \"X-L$found_dir\"; then\n+                        haveit=yes\n+                        break\n+                      fi\n+                    done\n+                    if test -z \"$haveit\"; then\n+                      LIB[]NAME=\"${LIB[]NAME}${LIB[]NAME:+ }-L$found_dir\"\n+                    fi\n+                    if test \"$acl_hardcode_minus_L\" != no; then\n+                      dnl FIXME: Not sure whether we should use\n+                      dnl \"-L$found_dir -l$name\" or \"-L$found_dir $found_so\"\n+                      dnl here.\n+                      LIB[]NAME=\"${LIB[]NAME}${LIB[]NAME:+ }$found_so\"\n+                    else\n+                      dnl We cannot use $acl_hardcode_runpath_var and LD_RUN_PATH\n+                      dnl here, because this doesn't fit in flags passed to the\n+                      dnl compiler. So give up. No hardcoding. This affects only\n+                      dnl very old systems.\n+                      dnl FIXME: Not sure whether we should use\n+                      dnl \"-L$found_dir -l$name\" or \"-L$found_dir $found_so\"\n+                      dnl here.\n+                      LIB[]NAME=\"${LIB[]NAME}${LIB[]NAME:+ }-l$name\"\n+                    fi\n+                  fi\n+                fi\n+              fi\n+            else\n+              if test \"X$found_a\" != \"X\"; then\n+                dnl Linking with a static library.\n+                LIB[]NAME=\"${LIB[]NAME}${LIB[]NAME:+ }$found_a\"\n+              else\n+                dnl We shouldn't come here, but anyway it's good to have a\n+                dnl fallback.\n+                LIB[]NAME=\"${LIB[]NAME}${LIB[]NAME:+ }-L$found_dir -l$name\"\n+              fi\n+            fi\n+            dnl Assume the include files are nearby.\n+            additional_includedir=\n+            case \"$found_dir\" in\n+              */$acl_libdirstem | */$acl_libdirstem/)\n+                basedir=`echo \"X$found_dir\" | sed -e 's,^X,,' -e \"s,/$acl_libdirstem/\"'*$,,'`\n+                if test \"$name\" = '$1'; then\n+                  LIB[]NAME[]_PREFIX=\"$basedir\"\n+                fi\n+                additional_includedir=\"$basedir/include\"\n+                ;;\n+              */$acl_libdirstem2 | */$acl_libdirstem2/)\n+                basedir=`echo \"X$found_dir\" | sed -e 's,^X,,' -e \"s,/$acl_libdirstem2/\"'*$,,'`\n+                if test \"$name\" = '$1'; then\n+                  LIB[]NAME[]_PREFIX=\"$basedir\"\n+                fi\n+                additional_includedir=\"$basedir/include\"\n+                ;;\n+            esac\n+            if test \"X$additional_includedir\" != \"X\"; then\n+              dnl Potentially add $additional_includedir to $INCNAME.\n+              dnl But don't add it\n+              dnl   1. if it's the standard /usr/include,\n+              dnl   2. if it's /usr/local/include and we are using GCC on Linux,\n+              dnl   3. if it's already present in $CPPFLAGS or the already\n+              dnl      constructed $INCNAME,\n+              dnl   4. if it doesn't exist as a directory.\n+              if test \"X$additional_includedir\" != \"X/usr/include\"; then\n+                haveit=\n+                if test \"X$additional_includedir\" = \"X/usr/local/include\"; then\n+                  if test -n \"$GCC\"; then\n+                    case $host_os in\n+                      linux* | gnu* | k*bsd*-gnu) haveit=yes;;\n+                    esac\n+                  fi\n+                fi\n+                if test -z \"$haveit\"; then\n+                  for x in $CPPFLAGS $INC[]NAME; do\n+                    AC_LIB_WITH_FINAL_PREFIX([eval x=\\\"$x\\\"])\n+                    if test \"X$x\" = \"X-I$additional_includedir\"; then\n+                      haveit=yes\n+                      break\n+                    fi\n+                  done\n+                  if test -z \"$haveit\"; then\n+                    if test -d \"$additional_includedir\"; then\n+                      dnl Really add $additional_includedir to $INCNAME.\n+                      INC[]NAME=\"${INC[]NAME}${INC[]NAME:+ }-I$additional_includedir\"\n+                    fi\n+                  fi\n+                fi\n+              fi\n+            fi\n+            dnl Look for dependencies.\n+            if test -n \"$found_la\"; then\n+              dnl Read the .la file. It defines the variables\n+              dnl dlname, library_names, old_library, dependency_libs, current,\n+              dnl age, revision, installed, dlopen, dlpreopen, libdir.\n+              save_libdir=\"$libdir\"\n+              case \"$found_la\" in\n+                */* | *\\\\*) . \"$found_la\" ;;\n+                *) . \"./$found_la\" ;;\n+              esac\n+              libdir=\"$save_libdir\"\n+              dnl We use only dependency_libs.\n+              for dep in $dependency_libs; do\n+                case \"$dep\" in\n+                  -L*)\n+                    additional_libdir=`echo \"X$dep\" | sed -e 's/^X-L//'`\n+                    dnl Potentially add $additional_libdir to $LIBNAME and $LTLIBNAME.\n+                    dnl But don't add it\n+                    dnl   1. if it's the standard /usr/lib,\n+                    dnl   2. if it's /usr/local/lib and we are using GCC on Linux,\n+                    dnl   3. if it's already present in $LDFLAGS or the already\n+                    dnl      constructed $LIBNAME,\n+                    dnl   4. if it doesn't exist as a directory.\n+                    if test \"X$additional_libdir\" != \"X/usr/$acl_libdirstem\" \\\n+                       && test \"X$additional_libdir\" != \"X/usr/$acl_libdirstem2\"; then\n+                      haveit=\n+                      if test \"X$additional_libdir\" = \"X/usr/local/$acl_libdirstem\" \\\n+                         || test \"X$additional_libdir\" = \"X/usr/local/$acl_libdirstem2\"; then\n+                        if test -n \"$GCC\"; then\n+                          case $host_os in\n+                            linux* | gnu* | k*bsd*-gnu) haveit=yes;;\n+                          esac\n+                        fi\n+                      fi\n+                      if test -z \"$haveit\"; then\n+                        haveit=\n+                        for x in $LDFLAGS $LIB[]NAME; do\n+                          AC_LIB_WITH_FINAL_PREFIX([eval x=\\\"$x\\\"])\n+                          if test \"X$x\" = \"X-L$additional_libdir\"; then\n+                            haveit=yes\n+                            break\n+                          fi\n+                        done\n+                        if test -z \"$haveit\"; then\n+                          if test -d \"$additional_libdir\"; then\n+                            dnl Really add $additional_libdir to $LIBNAME.\n+                            LIB[]NAME=\"${LIB[]NAME}${LIB[]NAME:+ }-L$additional_libdir\"\n+                          fi\n+                        fi\n+                        haveit=\n+                        for x in $LDFLAGS $LTLIB[]NAME; do\n+                          AC_LIB_WITH_FINAL_PREFIX([eval x=\\\"$x\\\"])\n+                          if test \"X$x\" = \"X-L$additional_libdir\"; then\n+                            haveit=yes\n+                            break\n+                          fi\n+                        done\n+                        if test -z \"$haveit\"; then\n+                          if test -d \"$additional_libdir\"; then\n+                            dnl Really add $additional_libdir to $LTLIBNAME.\n+                            LTLIB[]NAME=\"${LTLIB[]NAME}${LTLIB[]NAME:+ }-L$additional_libdir\"\n+                          fi\n+                        fi\n+                      fi\n+                    fi\n+                    ;;\n+                  -R*)\n+                    dir=`echo \"X$dep\" | sed -e 's/^X-R//'`\n+                    if test \"$enable_rpath\" != no; then\n+                      dnl Potentially add DIR to rpathdirs.\n+                      dnl The rpathdirs will be appended to $LIBNAME at the end.\n+                      haveit=\n+                      for x in $rpathdirs; do\n+                        if test \"X$x\" = \"X$dir\"; then\n+                          haveit=yes\n+                          break\n+                        fi\n+                      done\n+                      if test -z \"$haveit\"; then\n+                        rpathdirs=\"$rpathdirs $dir\"\n+                      fi\n+                      dnl Potentially add DIR to ltrpathdirs.\n+                      dnl The ltrpathdirs will be appended to $LTLIBNAME at the end.\n+                      haveit=\n+                      for x in $ltrpathdirs; do\n+                        if test \"X$x\" = \"X$dir\"; then\n+                          haveit=yes\n+                          break\n+                        fi\n+                      done\n+                      if test -z \"$haveit\"; then\n+                        ltrpathdirs=\"$ltrpathdirs $dir\"\n+                      fi\n+                    fi\n+                    ;;\n+                  -l*)\n+                    dnl Handle this in the next round.\n+                    names_next_round=\"$names_next_round \"`echo \"X$dep\" | sed -e 's/^X-l//'`\n+                    ;;\n+                  *.la)\n+                    dnl Handle this in the next round. Throw away the .la's\n+                    dnl directory; it is already contained in a preceding -L\n+                    dnl option.\n+                    names_next_round=\"$names_next_round \"`echo \"X$dep\" | sed -e 's,^X.*/,,' -e 's,^lib,,' -e 's,\\.la$,,'`\n+                    ;;\n+                  *)\n+                    dnl Most likely an immediate library name.\n+                    LIB[]NAME=\"${LIB[]NAME}${LIB[]NAME:+ }$dep\"\n+                    LTLIB[]NAME=\"${LTLIB[]NAME}${LTLIB[]NAME:+ }$dep\"\n+                    ;;\n+                esac\n+              done\n+            fi\n+          else\n+            dnl Didn't find the library; assume it is in the system directories\n+            dnl known to the linker and runtime loader. (All the system\n+            dnl directories known to the linker should also be known to the\n+            dnl runtime loader, otherwise the system is severely misconfigured.)\n+            LIB[]NAME=\"${LIB[]NAME}${LIB[]NAME:+ }-l$name\"\n+            LTLIB[]NAME=\"${LTLIB[]NAME}${LTLIB[]NAME:+ }-l$name\"\n+          fi\n+        fi\n+      fi\n+    done\n+  done\n+  if test \"X$rpathdirs\" != \"X\"; then\n+    if test -n \"$acl_hardcode_libdir_separator\"; then\n+      dnl Weird platform: only the last -rpath option counts, the user must\n+      dnl pass all path elements in one option. We can arrange that for a\n+      dnl single library, but not when more than one $LIBNAMEs are used.\n+      alldirs=\n+      for found_dir in $rpathdirs; do\n+        alldirs=\"${alldirs}${alldirs:+$acl_hardcode_libdir_separator}$found_dir\"\n+      done\n+      dnl Note: acl_hardcode_libdir_flag_spec uses $libdir and $wl.\n+      acl_save_libdir=\"$libdir\"\n+      libdir=\"$alldirs\"\n+      eval flag=\\\"$acl_hardcode_libdir_flag_spec\\\"\n+      libdir=\"$acl_save_libdir\"\n+      LIB[]NAME=\"${LIB[]NAME}${LIB[]NAME:+ }$flag\"\n+    else\n+      dnl The -rpath options are cumulative.\n+      for found_dir in $rpathdirs; do\n+        acl_save_libdir=\"$libdir\"\n+        libdir=\"$found_dir\"\n+        eval flag=\\\"$acl_hardcode_libdir_flag_spec\\\"\n+        libdir=\"$acl_save_libdir\"\n+        LIB[]NAME=\"${LIB[]NAME}${LIB[]NAME:+ }$flag\"\n+      done\n+    fi\n+  fi\n+  if test \"X$ltrpathdirs\" != \"X\"; then\n+    dnl When using libtool, the option that works for both libraries and\n+    dnl executables is -R. The -R options are cumulative.\n+    for found_dir in $ltrpathdirs; do\n+      LTLIB[]NAME=\"${LTLIB[]NAME}${LTLIB[]NAME:+ }-R$found_dir\"\n+    done\n+  fi\n+  popdef([P_A_C_K])\n+  popdef([PACKLIBS])\n+  popdef([PACKUP])\n+  popdef([PACK])\n+  popdef([NAME])\n+])\n+\n+dnl AC_LIB_APPENDTOVAR(VAR, CONTENTS) appends the elements of CONTENTS to VAR,\n+dnl unless already present in VAR.\n+dnl Works only for CPPFLAGS, not for LIB* variables because that sometimes\n+dnl contains two or three consecutive elements that belong together.\n+AC_DEFUN([AC_LIB_APPENDTOVAR],\n+[\n+  for element in [$2]; do\n+    haveit=\n+    for x in $[$1]; do\n+      AC_LIB_WITH_FINAL_PREFIX([eval x=\\\"$x\\\"])\n+      if test \"X$x\" = \"X$element\"; then\n+        haveit=yes\n+        break\n+      fi\n+    done\n+    if test -z \"$haveit\"; then\n+      [$1]=\"${[$1]}${[$1]:+ }$element\"\n+    fi\n+  done\n+])\n+\n+dnl For those cases where a variable contains several -L and -l options\n+dnl referring to unknown libraries and directories, this macro determines the\n+dnl necessary additional linker options for the runtime path.\n+dnl AC_LIB_LINKFLAGS_FROM_LIBS([LDADDVAR], [LIBSVALUE], [USE-LIBTOOL])\n+dnl sets LDADDVAR to linker options needed together with LIBSVALUE.\n+dnl If USE-LIBTOOL evaluates to non-empty, linking with libtool is assumed,\n+dnl otherwise linking without libtool is assumed.\n+AC_DEFUN([AC_LIB_LINKFLAGS_FROM_LIBS],\n+[\n+  AC_REQUIRE([AC_LIB_RPATH])\n+  AC_REQUIRE([AC_LIB_PREPARE_MULTILIB])\n+  $1=\n+  if test \"$enable_rpath\" != no; then\n+    if test -n \"$acl_hardcode_libdir_flag_spec\" && test \"$acl_hardcode_minus_L\" = no; then\n+      dnl Use an explicit option to hardcode directories into the resulting\n+      dnl binary.\n+      rpathdirs=\n+      next=\n+      for opt in $2; do\n+        if test -n \"$next\"; then\n+          dir=\"$next\"\n+          dnl No need to hardcode the standard /usr/lib.\n+          if test \"X$dir\" != \"X/usr/$acl_libdirstem\" \\\n+             && test \"X$dir\" != \"X/usr/$acl_libdirstem2\"; then\n+            rpathdirs=\"$rpathdirs $dir\"\n+          fi\n+          next=\n+        else\n+          case $opt in\n+            -L) next=yes ;;\n+            -L*) dir=`echo \"X$opt\" | sed -e 's,^X-L,,'`\n+                 dnl No need to hardcode the standard /usr/lib.\n+                 if test \"X$dir\" != \"X/usr/$acl_libdirstem\" \\\n+                    && test \"X$dir\" != \"X/usr/$acl_libdirstem2\"; then\n+                   rpathdirs=\"$rpathdirs $dir\"\n+                 fi\n+                 next= ;;\n+            *) next= ;;\n+          esac\n+        fi\n+      done\n+      if test \"X$rpathdirs\" != \"X\"; then\n+        if test -n \"\"$3\"\"; then\n+          dnl libtool is used for linking. Use -R options.\n+          for dir in $rpathdirs; do\n+            $1=\"${$1}${$1:+ }-R$dir\"\n+          done\n+        else\n+          dnl The linker is used for linking directly.\n+          if test -n \"$acl_hardcode_libdir_separator\"; then\n+            dnl Weird platform: only the last -rpath option counts, the user\n+            dnl must pass all path elements in one option.\n+            alldirs=\n+            for dir in $rpathdirs; do\n+              alldirs=\"${alldirs}${alldirs:+$acl_hardcode_libdir_separator}$dir\"\n+            done\n+            acl_save_libdir=\"$libdir\"\n+            libdir=\"$alldirs\"\n+            eval flag=\\\"$acl_hardcode_libdir_flag_spec\\\"\n+            libdir=\"$acl_save_libdir\"\n+            $1=\"$flag\"\n+          else\n+            dnl The -rpath options are cumulative.\n+            for dir in $rpathdirs; do\n+              acl_save_libdir=\"$libdir\"\n+              libdir=\"$dir\"\n+              eval flag=\\\"$acl_hardcode_libdir_flag_spec\\\"\n+              libdir=\"$acl_save_libdir\"\n+              $1=\"${$1}${$1:+ }$flag\"\n+            done\n+          fi\n+        fi\n+      fi\n+    fi\n+  fi\n+  AC_SUBST([$1])\n+])"}, {"sha": "1601ceaefd3c2b447b569f991813be12b0e06e2d", "filename": "libjava/classpath/m4/lib-prefix.m4", "status": "added", "additions": 224, "deletions": 0, "changes": 224, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fm4%2Flib-prefix.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fm4%2Flib-prefix.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fm4%2Flib-prefix.m4?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -0,0 +1,224 @@\n+# lib-prefix.m4 serial 7 (gettext-0.18)\n+dnl Copyright (C) 2001-2005, 2008-2010 Free Software Foundation, Inc.\n+dnl This file is free software; the Free Software Foundation\n+dnl gives unlimited permission to copy and/or distribute it,\n+dnl with or without modifications, as long as this notice is preserved.\n+\n+dnl From Bruno Haible.\n+\n+dnl AC_LIB_ARG_WITH is synonymous to AC_ARG_WITH in autoconf-2.13, and\n+dnl similar to AC_ARG_WITH in autoconf 2.52...2.57 except that is doesn't\n+dnl require excessive bracketing.\n+ifdef([AC_HELP_STRING],\n+[AC_DEFUN([AC_LIB_ARG_WITH], [AC_ARG_WITH([$1],[[$2]],[$3],[$4])])],\n+[AC_DEFUN([AC_][LIB_ARG_WITH], [AC_ARG_WITH([$1],[$2],[$3],[$4])])])\n+\n+dnl AC_LIB_PREFIX adds to the CPPFLAGS and LDFLAGS the flags that are needed\n+dnl to access previously installed libraries. The basic assumption is that\n+dnl a user will want packages to use other packages he previously installed\n+dnl with the same --prefix option.\n+dnl This macro is not needed if only AC_LIB_LINKFLAGS is used to locate\n+dnl libraries, but is otherwise very convenient.\n+AC_DEFUN([AC_LIB_PREFIX],\n+[\n+  AC_BEFORE([$0], [AC_LIB_LINKFLAGS])\n+  AC_REQUIRE([AC_PROG_CC])\n+  AC_REQUIRE([AC_CANONICAL_HOST])\n+  AC_REQUIRE([AC_LIB_PREPARE_MULTILIB])\n+  AC_REQUIRE([AC_LIB_PREPARE_PREFIX])\n+  dnl By default, look in $includedir and $libdir.\n+  use_additional=yes\n+  AC_LIB_WITH_FINAL_PREFIX([\n+    eval additional_includedir=\\\"$includedir\\\"\n+    eval additional_libdir=\\\"$libdir\\\"\n+  ])\n+  AC_LIB_ARG_WITH([lib-prefix],\n+[  --with-lib-prefix[=DIR] search for libraries in DIR/include and DIR/lib\n+  --without-lib-prefix    don't search for libraries in includedir and libdir],\n+[\n+    if test \"X$withval\" = \"Xno\"; then\n+      use_additional=no\n+    else\n+      if test \"X$withval\" = \"X\"; then\n+        AC_LIB_WITH_FINAL_PREFIX([\n+          eval additional_includedir=\\\"$includedir\\\"\n+          eval additional_libdir=\\\"$libdir\\\"\n+        ])\n+      else\n+        additional_includedir=\"$withval/include\"\n+        additional_libdir=\"$withval/$acl_libdirstem\"\n+      fi\n+    fi\n+])\n+  if test $use_additional = yes; then\n+    dnl Potentially add $additional_includedir to $CPPFLAGS.\n+    dnl But don't add it\n+    dnl   1. if it's the standard /usr/include,\n+    dnl   2. if it's already present in $CPPFLAGS,\n+    dnl   3. if it's /usr/local/include and we are using GCC on Linux,\n+    dnl   4. if it doesn't exist as a directory.\n+    if test \"X$additional_includedir\" != \"X/usr/include\"; then\n+      haveit=\n+      for x in $CPPFLAGS; do\n+        AC_LIB_WITH_FINAL_PREFIX([eval x=\\\"$x\\\"])\n+        if test \"X$x\" = \"X-I$additional_includedir\"; then\n+          haveit=yes\n+          break\n+        fi\n+      done\n+      if test -z \"$haveit\"; then\n+        if test \"X$additional_includedir\" = \"X/usr/local/include\"; then\n+          if test -n \"$GCC\"; then\n+            case $host_os in\n+              linux* | gnu* | k*bsd*-gnu) haveit=yes;;\n+            esac\n+          fi\n+        fi\n+        if test -z \"$haveit\"; then\n+          if test -d \"$additional_includedir\"; then\n+            dnl Really add $additional_includedir to $CPPFLAGS.\n+            CPPFLAGS=\"${CPPFLAGS}${CPPFLAGS:+ }-I$additional_includedir\"\n+          fi\n+        fi\n+      fi\n+    fi\n+    dnl Potentially add $additional_libdir to $LDFLAGS.\n+    dnl But don't add it\n+    dnl   1. if it's the standard /usr/lib,\n+    dnl   2. if it's already present in $LDFLAGS,\n+    dnl   3. if it's /usr/local/lib and we are using GCC on Linux,\n+    dnl   4. if it doesn't exist as a directory.\n+    if test \"X$additional_libdir\" != \"X/usr/$acl_libdirstem\"; then\n+      haveit=\n+      for x in $LDFLAGS; do\n+        AC_LIB_WITH_FINAL_PREFIX([eval x=\\\"$x\\\"])\n+        if test \"X$x\" = \"X-L$additional_libdir\"; then\n+          haveit=yes\n+          break\n+        fi\n+      done\n+      if test -z \"$haveit\"; then\n+        if test \"X$additional_libdir\" = \"X/usr/local/$acl_libdirstem\"; then\n+          if test -n \"$GCC\"; then\n+            case $host_os in\n+              linux*) haveit=yes;;\n+            esac\n+          fi\n+        fi\n+        if test -z \"$haveit\"; then\n+          if test -d \"$additional_libdir\"; then\n+            dnl Really add $additional_libdir to $LDFLAGS.\n+            LDFLAGS=\"${LDFLAGS}${LDFLAGS:+ }-L$additional_libdir\"\n+          fi\n+        fi\n+      fi\n+    fi\n+  fi\n+])\n+\n+dnl AC_LIB_PREPARE_PREFIX creates variables acl_final_prefix,\n+dnl acl_final_exec_prefix, containing the values to which $prefix and\n+dnl $exec_prefix will expand at the end of the configure script.\n+AC_DEFUN([AC_LIB_PREPARE_PREFIX],\n+[\n+  dnl Unfortunately, prefix and exec_prefix get only finally determined\n+  dnl at the end of configure.\n+  if test \"X$prefix\" = \"XNONE\"; then\n+    acl_final_prefix=\"$ac_default_prefix\"\n+  else\n+    acl_final_prefix=\"$prefix\"\n+  fi\n+  if test \"X$exec_prefix\" = \"XNONE\"; then\n+    acl_final_exec_prefix='${prefix}'\n+  else\n+    acl_final_exec_prefix=\"$exec_prefix\"\n+  fi\n+  acl_save_prefix=\"$prefix\"\n+  prefix=\"$acl_final_prefix\"\n+  eval acl_final_exec_prefix=\\\"$acl_final_exec_prefix\\\"\n+  prefix=\"$acl_save_prefix\"\n+])\n+\n+dnl AC_LIB_WITH_FINAL_PREFIX([statement]) evaluates statement, with the\n+dnl variables prefix and exec_prefix bound to the values they will have\n+dnl at the end of the configure script.\n+AC_DEFUN([AC_LIB_WITH_FINAL_PREFIX],\n+[\n+  acl_save_prefix=\"$prefix\"\n+  prefix=\"$acl_final_prefix\"\n+  acl_save_exec_prefix=\"$exec_prefix\"\n+  exec_prefix=\"$acl_final_exec_prefix\"\n+  $1\n+  exec_prefix=\"$acl_save_exec_prefix\"\n+  prefix=\"$acl_save_prefix\"\n+])\n+\n+dnl AC_LIB_PREPARE_MULTILIB creates\n+dnl - a variable acl_libdirstem, containing the basename of the libdir, either\n+dnl   \"lib\" or \"lib64\" or \"lib/64\",\n+dnl - a variable acl_libdirstem2, as a secondary possible value for\n+dnl   acl_libdirstem, either the same as acl_libdirstem or \"lib/sparcv9\" or\n+dnl   \"lib/amd64\".\n+AC_DEFUN([AC_LIB_PREPARE_MULTILIB],\n+[\n+  dnl There is no formal standard regarding lib and lib64.\n+  dnl On glibc systems, the current practice is that on a system supporting\n+  dnl 32-bit and 64-bit instruction sets or ABIs, 64-bit libraries go under\n+  dnl $prefix/lib64 and 32-bit libraries go under $prefix/lib. We determine\n+  dnl the compiler's default mode by looking at the compiler's library search\n+  dnl path. If at least one of its elements ends in /lib64 or points to a\n+  dnl directory whose absolute pathname ends in /lib64, we assume a 64-bit ABI.\n+  dnl Otherwise we use the default, namely \"lib\".\n+  dnl On Solaris systems, the current practice is that on a system supporting\n+  dnl 32-bit and 64-bit instruction sets or ABIs, 64-bit libraries go under\n+  dnl $prefix/lib/64 (which is a symlink to either $prefix/lib/sparcv9 or\n+  dnl $prefix/lib/amd64) and 32-bit libraries go under $prefix/lib.\n+  AC_REQUIRE([AC_CANONICAL_HOST])\n+  acl_libdirstem=lib\n+  acl_libdirstem2=\n+  case \"$host_os\" in\n+    solaris*)\n+      dnl See Solaris 10 Software Developer Collection > Solaris 64-bit Developer's Guide > The Development Environment\n+      dnl <http://docs.sun.com/app/docs/doc/816-5138/dev-env?l=en&a=view>.\n+      dnl \"Portable Makefiles should refer to any library directories using the 64 symbolic link.\"\n+      dnl But we want to recognize the sparcv9 or amd64 subdirectory also if the\n+      dnl symlink is missing, so we set acl_libdirstem2 too.\n+      AC_CACHE_CHECK([for 64-bit host], [gl_cv_solaris_64bit],\n+        [AC_EGREP_CPP([sixtyfour bits], [\n+#ifdef _LP64\n+sixtyfour bits\n+#endif\n+           ], [gl_cv_solaris_64bit=yes], [gl_cv_solaris_64bit=no])\n+        ])\n+      if test $gl_cv_solaris_64bit = yes; then\n+        acl_libdirstem=lib/64\n+        case \"$host_cpu\" in\n+          sparc*)        acl_libdirstem2=lib/sparcv9 ;;\n+          i*86 | x86_64) acl_libdirstem2=lib/amd64 ;;\n+        esac\n+      fi\n+      ;;\n+    *)\n+      searchpath=`(LC_ALL=C $CC -print-search-dirs) 2>/dev/null | sed -n -e 's,^libraries: ,,p' | sed -e 's,^=,,'`\n+      if test -n \"$searchpath\"; then\n+        acl_save_IFS=\"${IFS= \t}\"; IFS=\":\"\n+        for searchdir in $searchpath; do\n+          if test -d \"$searchdir\"; then\n+            case \"$searchdir\" in\n+              */lib64/ | */lib64 ) acl_libdirstem=lib64 ;;\n+              */../ | */.. )\n+                # Better ignore directories of this form. They are misleading.\n+                ;;\n+              *) searchdir=`cd \"$searchdir\" && pwd`\n+                 case \"$searchdir\" in\n+                   */lib64 ) acl_libdirstem=lib64 ;;\n+                 esac ;;\n+            esac\n+          fi\n+        done\n+        IFS=\"$acl_save_IFS\"\n+      fi\n+      ;;\n+  esac\n+  test -n \"$acl_libdirstem2\" || acl_libdirstem2=\"$acl_libdirstem\"\n+])"}, {"sha": "28055d2ae6f2a2c584afcd769d7881e11f62ecd9", "filename": "libjava/classpath/missing", "status": "modified", "additions": 49, "deletions": 4, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fmissing", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fmissing", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fmissing?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -1,10 +1,10 @@\n #! /bin/sh\n # Common stub for a few missing GNU programs while installing.\n \n-scriptversion=2012-01-06.13; # UTC\n+scriptversion=2009-04-28.21; # UTC\n \n # Copyright (C) 1996, 1997, 1999, 2000, 2002, 2003, 2004, 2005, 2006,\n-# 2008, 2009, 2010, 2011, 2012 Free Software Foundation, Inc.\n+# 2008, 2009 Free Software Foundation, Inc.\n # Originally by Fran,cois Pinard <pinard@iro.umontreal.ca>, 1996.\n \n # This program is free software; you can redistribute it and/or modify\n@@ -84,6 +84,7 @@ Supported PROGRAM values:\n   help2man     touch the output file\n   lex          create \\`lex.yy.c', if possible, from existing .c\n   makeinfo     touch the output file\n+  tar          try tar, gnutar, gtar, then tar without non-portable flags\n   yacc         create \\`y.tab.[ch]', if possible, from existing .[ch]\n \n Version suffixes to PROGRAM as well as the prefixes \\`gnu-', \\`gnu', and\n@@ -121,6 +122,15 @@ case $1 in\n     # Not GNU programs, they don't have --version.\n     ;;\n \n+  tar*)\n+    if test -n \"$run\"; then\n+       echo 1>&2 \"ERROR: \\`tar' requires --run\"\n+       exit 1\n+    elif test \"x$2\" = \"x--version\" || test \"x$2\" = \"x--help\"; then\n+       exit 1\n+    fi\n+    ;;\n+\n   *)\n     if test -z \"$run\" && ($1 --version) > /dev/null 2>&1; then\n        # We have it, but it failed.\n@@ -216,7 +226,7 @@ WARNING: \\`$1' $msg.  You should only need it if\n          \\`Bison' from any GNU archive site.\"\n     rm -f y.tab.c y.tab.h\n     if test $# -ne 1; then\n-        eval LASTARG=\\${$#}\n+        eval LASTARG=\"\\${$#}\"\n \tcase $LASTARG in\n \t*.y)\n \t    SRCFILE=`echo \"$LASTARG\" | sed 's/y$/c/'`\n@@ -246,7 +256,7 @@ WARNING: \\`$1' is $msg.  You should only need it if\n          \\`Flex' from any GNU archive site.\"\n     rm -f lex.yy.c\n     if test $# -ne 1; then\n-        eval LASTARG=\\${$#}\n+        eval LASTARG=\"\\${$#}\"\n \tcase $LASTARG in\n \t*.l)\n \t    SRCFILE=`echo \"$LASTARG\" | sed 's/l$/c/'`\n@@ -308,6 +318,41 @@ WARNING: \\`$1' is $msg.  You should only need it if\n     touch $file\n     ;;\n \n+  tar*)\n+    shift\n+\n+    # We have already tried tar in the generic part.\n+    # Look for gnutar/gtar before invocation to avoid ugly error\n+    # messages.\n+    if (gnutar --version > /dev/null 2>&1); then\n+       gnutar \"$@\" && exit 0\n+    fi\n+    if (gtar --version > /dev/null 2>&1); then\n+       gtar \"$@\" && exit 0\n+    fi\n+    firstarg=\"$1\"\n+    if shift; then\n+\tcase $firstarg in\n+\t*o*)\n+\t    firstarg=`echo \"$firstarg\" | sed s/o//`\n+\t    tar \"$firstarg\" \"$@\" && exit 0\n+\t    ;;\n+\tesac\n+\tcase $firstarg in\n+\t*h*)\n+\t    firstarg=`echo \"$firstarg\" | sed s/h//`\n+\t    tar \"$firstarg\" \"$@\" && exit 0\n+\t    ;;\n+\tesac\n+    fi\n+\n+    echo 1>&2 \"\\\n+WARNING: I can't seem to be able to run \\`tar' with the given arguments.\n+         You may want to install GNU tar or Free paxutils, or check the\n+         command line arguments.\"\n+    exit 1\n+    ;;\n+\n   *)\n     echo 1>&2 \"\\\n WARNING: \\`$1' is needed, and is $msg."}, {"sha": "360fb52c7a5dada07a61b96f31bb9bc9743b9516", "filename": "libjava/classpath/native/Makefile.in", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fnative%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fnative%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fnative%2FMakefile.in?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -39,9 +39,6 @@ DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n am__aclocal_m4_deps = $(top_srcdir)/../../config/depstand.m4 \\\n \t$(top_srcdir)/../../config/lead-dot.m4 \\\n-\t$(top_srcdir)/../../config/lib-ld.m4 \\\n-\t$(top_srcdir)/../../config/lib-link.m4 \\\n-\t$(top_srcdir)/../../config/lib-prefix.m4 \\\n \t$(top_srcdir)/../../config/multi.m4 \\\n \t$(top_srcdir)/../../config/no-executables.m4 \\\n \t$(top_srcdir)/../../config/override.m4 \\\n@@ -60,7 +57,9 @@ am__aclocal_m4_deps = $(top_srcdir)/../../config/depstand.m4 \\\n \t$(top_srcdir)/m4/ax_create_stdint_h.m4 \\\n \t$(top_srcdir)/m4/ax_func_which_gethostbyname_r.m4 \\\n \t$(top_srcdir)/m4/gcc_attribute.m4 $(top_srcdir)/m4/iconv.m4 \\\n-\t$(top_srcdir)/m4/pkg.m4 $(top_srcdir)/configure.ac\n+\t$(top_srcdir)/m4/lib-ld.m4 $(top_srcdir)/m4/lib-link.m4 \\\n+\t$(top_srcdir)/m4/lib-prefix.m4 $(top_srcdir)/m4/pkg.m4 \\\n+\t$(top_srcdir)/configure.ac\n am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n \t$(ACLOCAL_M4)\n mkinstalldirs = $(SHELL) $(top_srcdir)/../../mkinstalldirs\n@@ -207,6 +206,7 @@ MAKEINFO = @MAKEINFO@\n MKDIR = @MKDIR@\n MKDIR_P = @MKDIR_P@\n MOC = @MOC@\n+MOC4 = @MOC4@\n MOZILLA_CFLAGS = @MOZILLA_CFLAGS@\n MOZILLA_LIBS = @MOZILLA_LIBS@\n NM = @NM@"}, {"sha": "bd15ce000e1594158421dd6b9498424345976d37", "filename": "libjava/classpath/native/fdlibm/Makefile.in", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fnative%2Ffdlibm%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fnative%2Ffdlibm%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fnative%2Ffdlibm%2FMakefile.in?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -40,9 +40,6 @@ DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n am__aclocal_m4_deps = $(top_srcdir)/../../config/depstand.m4 \\\n \t$(top_srcdir)/../../config/lead-dot.m4 \\\n-\t$(top_srcdir)/../../config/lib-ld.m4 \\\n-\t$(top_srcdir)/../../config/lib-link.m4 \\\n-\t$(top_srcdir)/../../config/lib-prefix.m4 \\\n \t$(top_srcdir)/../../config/multi.m4 \\\n \t$(top_srcdir)/../../config/no-executables.m4 \\\n \t$(top_srcdir)/../../config/override.m4 \\\n@@ -61,7 +58,9 @@ am__aclocal_m4_deps = $(top_srcdir)/../../config/depstand.m4 \\\n \t$(top_srcdir)/m4/ax_create_stdint_h.m4 \\\n \t$(top_srcdir)/m4/ax_func_which_gethostbyname_r.m4 \\\n \t$(top_srcdir)/m4/gcc_attribute.m4 $(top_srcdir)/m4/iconv.m4 \\\n-\t$(top_srcdir)/m4/pkg.m4 $(top_srcdir)/configure.ac\n+\t$(top_srcdir)/m4/lib-ld.m4 $(top_srcdir)/m4/lib-link.m4 \\\n+\t$(top_srcdir)/m4/lib-prefix.m4 $(top_srcdir)/m4/pkg.m4 \\\n+\t$(top_srcdir)/configure.ac\n am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n \t$(ACLOCAL_M4)\n mkinstalldirs = $(SHELL) $(top_srcdir)/../../mkinstalldirs\n@@ -197,6 +196,7 @@ MAKEINFO = @MAKEINFO@\n MKDIR = @MKDIR@\n MKDIR_P = @MKDIR_P@\n MOC = @MOC@\n+MOC4 = @MOC4@\n MOZILLA_CFLAGS = @MOZILLA_CFLAGS@\n MOZILLA_LIBS = @MOZILLA_LIBS@\n NM = @NM@"}, {"sha": "8131810182af300e9d70fbcfa9db5089422d9b50", "filename": "libjava/classpath/native/jawt/Makefile.in", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fnative%2Fjawt%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fnative%2Fjawt%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fnative%2Fjawt%2FMakefile.in?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -40,9 +40,6 @@ DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n am__aclocal_m4_deps = $(top_srcdir)/../../config/depstand.m4 \\\n \t$(top_srcdir)/../../config/lead-dot.m4 \\\n-\t$(top_srcdir)/../../config/lib-ld.m4 \\\n-\t$(top_srcdir)/../../config/lib-link.m4 \\\n-\t$(top_srcdir)/../../config/lib-prefix.m4 \\\n \t$(top_srcdir)/../../config/multi.m4 \\\n \t$(top_srcdir)/../../config/no-executables.m4 \\\n \t$(top_srcdir)/../../config/override.m4 \\\n@@ -61,7 +58,9 @@ am__aclocal_m4_deps = $(top_srcdir)/../../config/depstand.m4 \\\n \t$(top_srcdir)/m4/ax_create_stdint_h.m4 \\\n \t$(top_srcdir)/m4/ax_func_which_gethostbyname_r.m4 \\\n \t$(top_srcdir)/m4/gcc_attribute.m4 $(top_srcdir)/m4/iconv.m4 \\\n-\t$(top_srcdir)/m4/pkg.m4 $(top_srcdir)/configure.ac\n+\t$(top_srcdir)/m4/lib-ld.m4 $(top_srcdir)/m4/lib-link.m4 \\\n+\t$(top_srcdir)/m4/lib-prefix.m4 $(top_srcdir)/m4/pkg.m4 \\\n+\t$(top_srcdir)/configure.ac\n am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n \t$(ACLOCAL_M4)\n mkinstalldirs = $(SHELL) $(top_srcdir)/../../mkinstalldirs\n@@ -214,6 +213,7 @@ MAKEINFO = @MAKEINFO@\n MKDIR = @MKDIR@\n MKDIR_P = @MKDIR_P@\n MOC = @MOC@\n+MOC4 = @MOC4@\n MOZILLA_CFLAGS = @MOZILLA_CFLAGS@\n MOZILLA_LIBS = @MOZILLA_LIBS@\n NM = @NM@"}, {"sha": "6971c2b9aa79de453d39d7f7e7b315ce63c24783", "filename": "libjava/classpath/native/jni/Makefile.in", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fnative%2Fjni%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fnative%2Fjni%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fnative%2Fjni%2FMakefile.in?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -39,9 +39,6 @@ DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n am__aclocal_m4_deps = $(top_srcdir)/../../config/depstand.m4 \\\n \t$(top_srcdir)/../../config/lead-dot.m4 \\\n-\t$(top_srcdir)/../../config/lib-ld.m4 \\\n-\t$(top_srcdir)/../../config/lib-link.m4 \\\n-\t$(top_srcdir)/../../config/lib-prefix.m4 \\\n \t$(top_srcdir)/../../config/multi.m4 \\\n \t$(top_srcdir)/../../config/no-executables.m4 \\\n \t$(top_srcdir)/../../config/override.m4 \\\n@@ -60,7 +57,9 @@ am__aclocal_m4_deps = $(top_srcdir)/../../config/depstand.m4 \\\n \t$(top_srcdir)/m4/ax_create_stdint_h.m4 \\\n \t$(top_srcdir)/m4/ax_func_which_gethostbyname_r.m4 \\\n \t$(top_srcdir)/m4/gcc_attribute.m4 $(top_srcdir)/m4/iconv.m4 \\\n-\t$(top_srcdir)/m4/pkg.m4 $(top_srcdir)/configure.ac\n+\t$(top_srcdir)/m4/lib-ld.m4 $(top_srcdir)/m4/lib-link.m4 \\\n+\t$(top_srcdir)/m4/lib-prefix.m4 $(top_srcdir)/m4/pkg.m4 \\\n+\t$(top_srcdir)/configure.ac\n am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n \t$(ACLOCAL_M4)\n mkinstalldirs = $(SHELL) $(top_srcdir)/../../mkinstalldirs\n@@ -207,6 +206,7 @@ MAKEINFO = @MAKEINFO@\n MKDIR = @MKDIR@\n MKDIR_P = @MKDIR_P@\n MOC = @MOC@\n+MOC4 = @MOC4@\n MOZILLA_CFLAGS = @MOZILLA_CFLAGS@\n MOZILLA_LIBS = @MOZILLA_LIBS@\n NM = @NM@"}, {"sha": "13522d56d115e17617c93b5bb1a0cb241f5ece3c", "filename": "libjava/classpath/native/jni/classpath/Makefile.in", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fnative%2Fjni%2Fclasspath%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fnative%2Fjni%2Fclasspath%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fnative%2Fjni%2Fclasspath%2FMakefile.in?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -40,9 +40,6 @@ DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n am__aclocal_m4_deps = $(top_srcdir)/../../config/depstand.m4 \\\n \t$(top_srcdir)/../../config/lead-dot.m4 \\\n-\t$(top_srcdir)/../../config/lib-ld.m4 \\\n-\t$(top_srcdir)/../../config/lib-link.m4 \\\n-\t$(top_srcdir)/../../config/lib-prefix.m4 \\\n \t$(top_srcdir)/../../config/multi.m4 \\\n \t$(top_srcdir)/../../config/no-executables.m4 \\\n \t$(top_srcdir)/../../config/override.m4 \\\n@@ -61,7 +58,9 @@ am__aclocal_m4_deps = $(top_srcdir)/../../config/depstand.m4 \\\n \t$(top_srcdir)/m4/ax_create_stdint_h.m4 \\\n \t$(top_srcdir)/m4/ax_func_which_gethostbyname_r.m4 \\\n \t$(top_srcdir)/m4/gcc_attribute.m4 $(top_srcdir)/m4/iconv.m4 \\\n-\t$(top_srcdir)/m4/pkg.m4 $(top_srcdir)/configure.ac\n+\t$(top_srcdir)/m4/lib-ld.m4 $(top_srcdir)/m4/lib-link.m4 \\\n+\t$(top_srcdir)/m4/lib-prefix.m4 $(top_srcdir)/m4/pkg.m4 \\\n+\t$(top_srcdir)/configure.ac\n am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n \t$(ACLOCAL_M4)\n mkinstalldirs = $(SHELL) $(top_srcdir)/../../mkinstalldirs\n@@ -188,6 +187,7 @@ MAKEINFO = @MAKEINFO@\n MKDIR = @MKDIR@\n MKDIR_P = @MKDIR_P@\n MOC = @MOC@\n+MOC4 = @MOC4@\n MOZILLA_CFLAGS = @MOZILLA_CFLAGS@\n MOZILLA_LIBS = @MOZILLA_LIBS@\n NM = @NM@"}, {"sha": "df8aa6f14f16151a736d8a1a31549a6aa52d00fc", "filename": "libjava/classpath/native/jni/gconf-peer/Makefile.in", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fnative%2Fjni%2Fgconf-peer%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fnative%2Fjni%2Fgconf-peer%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fnative%2Fjni%2Fgconf-peer%2FMakefile.in?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -40,9 +40,6 @@ DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n am__aclocal_m4_deps = $(top_srcdir)/../../config/depstand.m4 \\\n \t$(top_srcdir)/../../config/lead-dot.m4 \\\n-\t$(top_srcdir)/../../config/lib-ld.m4 \\\n-\t$(top_srcdir)/../../config/lib-link.m4 \\\n-\t$(top_srcdir)/../../config/lib-prefix.m4 \\\n \t$(top_srcdir)/../../config/multi.m4 \\\n \t$(top_srcdir)/../../config/no-executables.m4 \\\n \t$(top_srcdir)/../../config/override.m4 \\\n@@ -61,7 +58,9 @@ am__aclocal_m4_deps = $(top_srcdir)/../../config/depstand.m4 \\\n \t$(top_srcdir)/m4/ax_create_stdint_h.m4 \\\n \t$(top_srcdir)/m4/ax_func_which_gethostbyname_r.m4 \\\n \t$(top_srcdir)/m4/gcc_attribute.m4 $(top_srcdir)/m4/iconv.m4 \\\n-\t$(top_srcdir)/m4/pkg.m4 $(top_srcdir)/configure.ac\n+\t$(top_srcdir)/m4/lib-ld.m4 $(top_srcdir)/m4/lib-link.m4 \\\n+\t$(top_srcdir)/m4/lib-prefix.m4 $(top_srcdir)/m4/pkg.m4 \\\n+\t$(top_srcdir)/configure.ac\n am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n \t$(ACLOCAL_M4)\n mkinstalldirs = $(SHELL) $(top_srcdir)/../../mkinstalldirs\n@@ -214,6 +213,7 @@ MAKEINFO = @MAKEINFO@\n MKDIR = @MKDIR@\n MKDIR_P = @MKDIR_P@\n MOC = @MOC@\n+MOC4 = @MOC4@\n MOZILLA_CFLAGS = @MOZILLA_CFLAGS@\n MOZILLA_LIBS = @MOZILLA_LIBS@\n NM = @NM@"}, {"sha": "5160d3ffe53e6d9109ebeef57f5a28d2ad369f58", "filename": "libjava/classpath/native/jni/gstreamer-peer/Makefile.in", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fnative%2Fjni%2Fgstreamer-peer%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fnative%2Fjni%2Fgstreamer-peer%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fnative%2Fjni%2Fgstreamer-peer%2FMakefile.in?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -40,9 +40,6 @@ DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n am__aclocal_m4_deps = $(top_srcdir)/../../config/depstand.m4 \\\n \t$(top_srcdir)/../../config/lead-dot.m4 \\\n-\t$(top_srcdir)/../../config/lib-ld.m4 \\\n-\t$(top_srcdir)/../../config/lib-link.m4 \\\n-\t$(top_srcdir)/../../config/lib-prefix.m4 \\\n \t$(top_srcdir)/../../config/multi.m4 \\\n \t$(top_srcdir)/../../config/no-executables.m4 \\\n \t$(top_srcdir)/../../config/override.m4 \\\n@@ -61,7 +58,9 @@ am__aclocal_m4_deps = $(top_srcdir)/../../config/depstand.m4 \\\n \t$(top_srcdir)/m4/ax_create_stdint_h.m4 \\\n \t$(top_srcdir)/m4/ax_func_which_gethostbyname_r.m4 \\\n \t$(top_srcdir)/m4/gcc_attribute.m4 $(top_srcdir)/m4/iconv.m4 \\\n-\t$(top_srcdir)/m4/pkg.m4 $(top_srcdir)/configure.ac\n+\t$(top_srcdir)/m4/lib-ld.m4 $(top_srcdir)/m4/lib-link.m4 \\\n+\t$(top_srcdir)/m4/lib-prefix.m4 $(top_srcdir)/m4/pkg.m4 \\\n+\t$(top_srcdir)/configure.ac\n am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n \t$(ACLOCAL_M4)\n mkinstalldirs = $(SHELL) $(top_srcdir)/../../mkinstalldirs\n@@ -216,6 +215,7 @@ MAKEINFO = @MAKEINFO@\n MKDIR = @MKDIR@\n MKDIR_P = @MKDIR_P@\n MOC = @MOC@\n+MOC4 = @MOC4@\n MOZILLA_CFLAGS = @MOZILLA_CFLAGS@\n MOZILLA_LIBS = @MOZILLA_LIBS@\n NM = @NM@"}, {"sha": "ee92424bf44473280875609853f0ab8a1f80f669", "filename": "libjava/classpath/native/jni/gtk-peer/Makefile.in", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fnative%2Fjni%2Fgtk-peer%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fnative%2Fjni%2Fgtk-peer%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fnative%2Fjni%2Fgtk-peer%2FMakefile.in?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -40,9 +40,6 @@ DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n am__aclocal_m4_deps = $(top_srcdir)/../../config/depstand.m4 \\\n \t$(top_srcdir)/../../config/lead-dot.m4 \\\n-\t$(top_srcdir)/../../config/lib-ld.m4 \\\n-\t$(top_srcdir)/../../config/lib-link.m4 \\\n-\t$(top_srcdir)/../../config/lib-prefix.m4 \\\n \t$(top_srcdir)/../../config/multi.m4 \\\n \t$(top_srcdir)/../../config/no-executables.m4 \\\n \t$(top_srcdir)/../../config/override.m4 \\\n@@ -61,7 +58,9 @@ am__aclocal_m4_deps = $(top_srcdir)/../../config/depstand.m4 \\\n \t$(top_srcdir)/m4/ax_create_stdint_h.m4 \\\n \t$(top_srcdir)/m4/ax_func_which_gethostbyname_r.m4 \\\n \t$(top_srcdir)/m4/gcc_attribute.m4 $(top_srcdir)/m4/iconv.m4 \\\n-\t$(top_srcdir)/m4/pkg.m4 $(top_srcdir)/configure.ac\n+\t$(top_srcdir)/m4/lib-ld.m4 $(top_srcdir)/m4/lib-link.m4 \\\n+\t$(top_srcdir)/m4/lib-prefix.m4 $(top_srcdir)/m4/pkg.m4 \\\n+\t$(top_srcdir)/configure.ac\n am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n \t$(ACLOCAL_M4)\n mkinstalldirs = $(SHELL) $(top_srcdir)/../../mkinstalldirs\n@@ -252,6 +251,7 @@ MAKEINFO = @MAKEINFO@\n MKDIR = @MKDIR@\n MKDIR_P = @MKDIR_P@\n MOC = @MOC@\n+MOC4 = @MOC4@\n MOZILLA_CFLAGS = @MOZILLA_CFLAGS@\n MOZILLA_LIBS = @MOZILLA_LIBS@\n NM = @NM@"}, {"sha": "771b23e3738aa1d745d2ad3bafbab722963ee5f1", "filename": "libjava/classpath/native/jni/gtk-peer/gnu_java_awt_peer_gtk_GdkFontPeer.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fnative%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GdkFontPeer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fnative%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GdkFontPeer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fnative%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GdkFontPeer.c?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -59,14 +59,14 @@ enum java_awt_font_baseline {\n   java_awt_font_HANGING_BASELINE = 2\n };\n \n-static PangoFT2FontMap *ft2_map = NULL;\n+static PangoFontMap *font_map = NULL;\n \n JNIEXPORT void JNICALL\n Java_gnu_java_awt_peer_gtk_GdkFontPeer_initStaticState \n   (JNIEnv *env, jclass clazz __attribute__((unused)))\n {\n   gtkpeer_init_font_IDs(env);\n-  ft2_map = PANGO_FT2_FONT_MAP(pango_ft2_font_map_new());\n+  font_map = pango_ft2_font_map_new();\n }\n \n JNIEXPORT void JNICALL\n@@ -287,7 +287,7 @@ Java_gnu_java_awt_peer_gtk_GdkFontPeer_setFont\n   pango_font_description_set_size (pfont->desc, size * PANGO_SCALE);\n   \n   /* Create new context */\n-  pfont->ctx = pango_ft2_font_map_create_context (ft2_map);\n+  pfont->ctx = pango_font_map_create_context (font_map);\n   g_assert (pfont->ctx != NULL);\n   \n   pango_context_set_font_description (pfont->ctx, pfont->desc);"}, {"sha": "0b0dbec4bdbea2859a027132d5c60ac724d101dd", "filename": "libjava/classpath/native/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkImage.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fnative%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkImage.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fnative%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkImage.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fnative%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkImage.c?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -313,7 +313,7 @@ Java_gnu_java_awt_peer_gtk_GtkImage_initFromBuffer(JNIEnv *env, jobject obj,\n JNIEXPORT void JNICALL\n Java_gnu_java_awt_peer_gtk_GtkImage_freePixbuf(JNIEnv *env, jobject obj)\n {\n-  gdk_pixbuf_unref (cp_gtk_image_get_pixbuf (env, obj));\n+  g_object_unref (cp_gtk_image_get_pixbuf (env, obj));\n }\n \n /**"}, {"sha": "3b3cfecca3e79cda8da023731a946d6dd390e8c5", "filename": "libjava/classpath/native/jni/java-io/Makefile.in", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fnative%2Fjni%2Fjava-io%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fnative%2Fjni%2Fjava-io%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fnative%2Fjni%2Fjava-io%2FMakefile.in?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -40,9 +40,6 @@ DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n am__aclocal_m4_deps = $(top_srcdir)/../../config/depstand.m4 \\\n \t$(top_srcdir)/../../config/lead-dot.m4 \\\n-\t$(top_srcdir)/../../config/lib-ld.m4 \\\n-\t$(top_srcdir)/../../config/lib-link.m4 \\\n-\t$(top_srcdir)/../../config/lib-prefix.m4 \\\n \t$(top_srcdir)/../../config/multi.m4 \\\n \t$(top_srcdir)/../../config/no-executables.m4 \\\n \t$(top_srcdir)/../../config/override.m4 \\\n@@ -61,7 +58,9 @@ am__aclocal_m4_deps = $(top_srcdir)/../../config/depstand.m4 \\\n \t$(top_srcdir)/m4/ax_create_stdint_h.m4 \\\n \t$(top_srcdir)/m4/ax_func_which_gethostbyname_r.m4 \\\n \t$(top_srcdir)/m4/gcc_attribute.m4 $(top_srcdir)/m4/iconv.m4 \\\n-\t$(top_srcdir)/m4/pkg.m4 $(top_srcdir)/configure.ac\n+\t$(top_srcdir)/m4/lib-ld.m4 $(top_srcdir)/m4/lib-link.m4 \\\n+\t$(top_srcdir)/m4/lib-prefix.m4 $(top_srcdir)/m4/pkg.m4 \\\n+\t$(top_srcdir)/configure.ac\n am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n \t$(ACLOCAL_M4)\n mkinstalldirs = $(SHELL) $(top_srcdir)/../../mkinstalldirs\n@@ -213,6 +212,7 @@ MAKEINFO = @MAKEINFO@\n MKDIR = @MKDIR@\n MKDIR_P = @MKDIR_P@\n MOC = @MOC@\n+MOC4 = @MOC4@\n MOZILLA_CFLAGS = @MOZILLA_CFLAGS@\n MOZILLA_LIBS = @MOZILLA_LIBS@\n NM = @NM@"}, {"sha": "3ce0a489da32ae22a7990284a4d3bb25365dbb81", "filename": "libjava/classpath/native/jni/java-io/java_io_VMConsole.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fnative%2Fjni%2Fjava-io%2Fjava_io_VMConsole.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fnative%2Fjni%2Fjava-io%2Fjava_io_VMConsole.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fnative%2Fjni%2Fjava-io%2Fjava_io_VMConsole.c?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -47,6 +47,10 @@ exception statement from your version. */\n \n /*************************************************************************/\n \n+#ifndef IUCLC\n+#define IUCLC 0\n+#endif\n+\n #define TERMIOS_ECHO_IFLAGS (IUCLC|IXON|IXOFF|IXANY)\n #define TERMIOS_ECHO_LFLAGS (ECHO|ECHOE|ECHOK|ECHONL|TOSTOP)\n "}, {"sha": "ef5ec214e964a2974f7a0a5f24a0d8d9c0436401", "filename": "libjava/classpath/native/jni/java-lang/Makefile.in", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fnative%2Fjni%2Fjava-lang%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fnative%2Fjni%2Fjava-lang%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fnative%2Fjni%2Fjava-lang%2FMakefile.in?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -40,9 +40,6 @@ DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n am__aclocal_m4_deps = $(top_srcdir)/../../config/depstand.m4 \\\n \t$(top_srcdir)/../../config/lead-dot.m4 \\\n-\t$(top_srcdir)/../../config/lib-ld.m4 \\\n-\t$(top_srcdir)/../../config/lib-link.m4 \\\n-\t$(top_srcdir)/../../config/lib-prefix.m4 \\\n \t$(top_srcdir)/../../config/multi.m4 \\\n \t$(top_srcdir)/../../config/no-executables.m4 \\\n \t$(top_srcdir)/../../config/override.m4 \\\n@@ -61,7 +58,9 @@ am__aclocal_m4_deps = $(top_srcdir)/../../config/depstand.m4 \\\n \t$(top_srcdir)/m4/ax_create_stdint_h.m4 \\\n \t$(top_srcdir)/m4/ax_func_which_gethostbyname_r.m4 \\\n \t$(top_srcdir)/m4/gcc_attribute.m4 $(top_srcdir)/m4/iconv.m4 \\\n-\t$(top_srcdir)/m4/pkg.m4 $(top_srcdir)/configure.ac\n+\t$(top_srcdir)/m4/lib-ld.m4 $(top_srcdir)/m4/lib-link.m4 \\\n+\t$(top_srcdir)/m4/lib-prefix.m4 $(top_srcdir)/m4/pkg.m4 \\\n+\t$(top_srcdir)/configure.ac\n am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n \t$(ACLOCAL_M4)\n mkinstalldirs = $(SHELL) $(top_srcdir)/../../mkinstalldirs\n@@ -227,6 +226,7 @@ MAKEINFO = @MAKEINFO@\n MKDIR = @MKDIR@\n MKDIR_P = @MKDIR_P@\n MOC = @MOC@\n+MOC4 = @MOC4@\n MOZILLA_CFLAGS = @MOZILLA_CFLAGS@\n MOZILLA_LIBS = @MOZILLA_LIBS@\n NM = @NM@"}, {"sha": "f5c3838e5173a9b20d8f7aec7d8451f35b7f3b4a", "filename": "libjava/classpath/native/jni/java-math/Makefile.in", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fnative%2Fjni%2Fjava-math%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fnative%2Fjni%2Fjava-math%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fnative%2Fjni%2Fjava-math%2FMakefile.in?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -40,9 +40,6 @@ DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n am__aclocal_m4_deps = $(top_srcdir)/../../config/depstand.m4 \\\n \t$(top_srcdir)/../../config/lead-dot.m4 \\\n-\t$(top_srcdir)/../../config/lib-ld.m4 \\\n-\t$(top_srcdir)/../../config/lib-link.m4 \\\n-\t$(top_srcdir)/../../config/lib-prefix.m4 \\\n \t$(top_srcdir)/../../config/multi.m4 \\\n \t$(top_srcdir)/../../config/no-executables.m4 \\\n \t$(top_srcdir)/../../config/override.m4 \\\n@@ -61,7 +58,9 @@ am__aclocal_m4_deps = $(top_srcdir)/../../config/depstand.m4 \\\n \t$(top_srcdir)/m4/ax_create_stdint_h.m4 \\\n \t$(top_srcdir)/m4/ax_func_which_gethostbyname_r.m4 \\\n \t$(top_srcdir)/m4/gcc_attribute.m4 $(top_srcdir)/m4/iconv.m4 \\\n-\t$(top_srcdir)/m4/pkg.m4 $(top_srcdir)/configure.ac\n+\t$(top_srcdir)/m4/lib-ld.m4 $(top_srcdir)/m4/lib-link.m4 \\\n+\t$(top_srcdir)/m4/lib-prefix.m4 $(top_srcdir)/m4/pkg.m4 \\\n+\t$(top_srcdir)/configure.ac\n am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n \t$(ACLOCAL_M4)\n mkinstalldirs = $(SHELL) $(top_srcdir)/../../mkinstalldirs\n@@ -214,6 +213,7 @@ MAKEINFO = @MAKEINFO@\n MKDIR = @MKDIR@\n MKDIR_P = @MKDIR_P@\n MOC = @MOC@\n+MOC4 = @MOC4@\n MOZILLA_CFLAGS = @MOZILLA_CFLAGS@\n MOZILLA_LIBS = @MOZILLA_LIBS@\n NM = @NM@"}, {"sha": "64d4025d3fab96c32ffc580afaddcab8d561044e", "filename": "libjava/classpath/native/jni/java-net/Makefile.in", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fnative%2Fjni%2Fjava-net%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fnative%2Fjni%2Fjava-net%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fnative%2Fjni%2Fjava-net%2FMakefile.in?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -40,9 +40,6 @@ DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n am__aclocal_m4_deps = $(top_srcdir)/../../config/depstand.m4 \\\n \t$(top_srcdir)/../../config/lead-dot.m4 \\\n-\t$(top_srcdir)/../../config/lib-ld.m4 \\\n-\t$(top_srcdir)/../../config/lib-link.m4 \\\n-\t$(top_srcdir)/../../config/lib-prefix.m4 \\\n \t$(top_srcdir)/../../config/multi.m4 \\\n \t$(top_srcdir)/../../config/no-executables.m4 \\\n \t$(top_srcdir)/../../config/override.m4 \\\n@@ -61,7 +58,9 @@ am__aclocal_m4_deps = $(top_srcdir)/../../config/depstand.m4 \\\n \t$(top_srcdir)/m4/ax_create_stdint_h.m4 \\\n \t$(top_srcdir)/m4/ax_func_which_gethostbyname_r.m4 \\\n \t$(top_srcdir)/m4/gcc_attribute.m4 $(top_srcdir)/m4/iconv.m4 \\\n-\t$(top_srcdir)/m4/pkg.m4 $(top_srcdir)/configure.ac\n+\t$(top_srcdir)/m4/lib-ld.m4 $(top_srcdir)/m4/lib-link.m4 \\\n+\t$(top_srcdir)/m4/lib-prefix.m4 $(top_srcdir)/m4/pkg.m4 \\\n+\t$(top_srcdir)/configure.ac\n am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n \t$(ACLOCAL_M4)\n mkinstalldirs = $(SHELL) $(top_srcdir)/../../mkinstalldirs\n@@ -223,6 +222,7 @@ MAKEINFO = @MAKEINFO@\n MKDIR = @MKDIR@\n MKDIR_P = @MKDIR_P@\n MOC = @MOC@\n+MOC4 = @MOC4@\n MOZILLA_CFLAGS = @MOZILLA_CFLAGS@\n MOZILLA_LIBS = @MOZILLA_LIBS@\n NM = @NM@"}, {"sha": "1576cc47b0330fd854a49fd46d153e57f00b0cd8", "filename": "libjava/classpath/native/jni/java-nio/Makefile.in", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fnative%2Fjni%2Fjava-nio%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fnative%2Fjni%2Fjava-nio%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fnative%2Fjni%2Fjava-nio%2FMakefile.in?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -40,9 +40,6 @@ DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n am__aclocal_m4_deps = $(top_srcdir)/../../config/depstand.m4 \\\n \t$(top_srcdir)/../../config/lead-dot.m4 \\\n-\t$(top_srcdir)/../../config/lib-ld.m4 \\\n-\t$(top_srcdir)/../../config/lib-link.m4 \\\n-\t$(top_srcdir)/../../config/lib-prefix.m4 \\\n \t$(top_srcdir)/../../config/multi.m4 \\\n \t$(top_srcdir)/../../config/no-executables.m4 \\\n \t$(top_srcdir)/../../config/override.m4 \\\n@@ -61,7 +58,9 @@ am__aclocal_m4_deps = $(top_srcdir)/../../config/depstand.m4 \\\n \t$(top_srcdir)/m4/ax_create_stdint_h.m4 \\\n \t$(top_srcdir)/m4/ax_func_which_gethostbyname_r.m4 \\\n \t$(top_srcdir)/m4/gcc_attribute.m4 $(top_srcdir)/m4/iconv.m4 \\\n-\t$(top_srcdir)/m4/pkg.m4 $(top_srcdir)/configure.ac\n+\t$(top_srcdir)/m4/lib-ld.m4 $(top_srcdir)/m4/lib-link.m4 \\\n+\t$(top_srcdir)/m4/lib-prefix.m4 $(top_srcdir)/m4/pkg.m4 \\\n+\t$(top_srcdir)/configure.ac\n am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n \t$(ACLOCAL_M4)\n mkinstalldirs = $(SHELL) $(top_srcdir)/../../mkinstalldirs\n@@ -221,6 +220,7 @@ MAKEINFO = @MAKEINFO@\n MKDIR = @MKDIR@\n MKDIR_P = @MKDIR_P@\n MOC = @MOC@\n+MOC4 = @MOC4@\n MOZILLA_CFLAGS = @MOZILLA_CFLAGS@\n MOZILLA_LIBS = @MOZILLA_LIBS@\n NM = @NM@"}, {"sha": "a612fd129edecc0aa3f1101659ecf8e1ce44f26f", "filename": "libjava/classpath/native/jni/java-util/Makefile.in", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fnative%2Fjni%2Fjava-util%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fnative%2Fjni%2Fjava-util%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fnative%2Fjni%2Fjava-util%2FMakefile.in?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -40,9 +40,6 @@ DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n am__aclocal_m4_deps = $(top_srcdir)/../../config/depstand.m4 \\\n \t$(top_srcdir)/../../config/lead-dot.m4 \\\n-\t$(top_srcdir)/../../config/lib-ld.m4 \\\n-\t$(top_srcdir)/../../config/lib-link.m4 \\\n-\t$(top_srcdir)/../../config/lib-prefix.m4 \\\n \t$(top_srcdir)/../../config/multi.m4 \\\n \t$(top_srcdir)/../../config/no-executables.m4 \\\n \t$(top_srcdir)/../../config/override.m4 \\\n@@ -61,7 +58,9 @@ am__aclocal_m4_deps = $(top_srcdir)/../../config/depstand.m4 \\\n \t$(top_srcdir)/m4/ax_create_stdint_h.m4 \\\n \t$(top_srcdir)/m4/ax_func_which_gethostbyname_r.m4 \\\n \t$(top_srcdir)/m4/gcc_attribute.m4 $(top_srcdir)/m4/iconv.m4 \\\n-\t$(top_srcdir)/m4/pkg.m4 $(top_srcdir)/configure.ac\n+\t$(top_srcdir)/m4/lib-ld.m4 $(top_srcdir)/m4/lib-link.m4 \\\n+\t$(top_srcdir)/m4/lib-prefix.m4 $(top_srcdir)/m4/pkg.m4 \\\n+\t$(top_srcdir)/configure.ac\n am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n \t$(ACLOCAL_M4)\n mkinstalldirs = $(SHELL) $(top_srcdir)/../../mkinstalldirs\n@@ -210,6 +209,7 @@ MAKEINFO = @MAKEINFO@\n MKDIR = @MKDIR@\n MKDIR_P = @MKDIR_P@\n MOC = @MOC@\n+MOC4 = @MOC4@\n MOZILLA_CFLAGS = @MOZILLA_CFLAGS@\n MOZILLA_LIBS = @MOZILLA_LIBS@\n NM = @NM@"}, {"sha": "0830cbe8cb06e9a7e83df4dfccda927fe3a2684f", "filename": "libjava/classpath/native/jni/java-util/java_util_VMTimeZone.c", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fnative%2Fjni%2Fjava-util%2Fjava_util_VMTimeZone.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fnative%2Fjni%2Fjava-util%2Fjava_util_VMTimeZone.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fnative%2Fjni%2Fjava-util%2Fjava_util_VMTimeZone.c?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -53,6 +53,7 @@ exception statement from your version. */\n #include <stdlib.h>\n \n #include <jni.h>\n+#include <jcl.h>\n \n #include \"java_util_VMTimeZone.h\"\n \n@@ -169,7 +170,13 @@ Java_java_util_VMTimeZone_getSystemTimeZoneId (JNIEnv * env,\n   tz1_len = strlen (tz1);\n   tz2_len = strlen (tz2);\n   tzoff_len = jint_to_charbuf (tzoff + 11, tzoffset);\n-  tzid = (char *) malloc (tz1_len + tz2_len + tzoff_len + 1);\t/* FIXME alloc */\n+  tzid = (char *) malloc (tz1_len + tz2_len + tzoff_len + 1);\n+  if (tzid == NULL) {\n+    JCL_ThrowException (env, \"java/lang/OutOfMemoryError\",\n+                        \"malloc() failed\");\n+    return 0;\n+  }\n+\n   memcpy (tzid, tz1, tz1_len);\n   memcpy (tzid + tz1_len, tzoff + 11 - tzoff_len, tzoff_len);\n   memcpy (tzid + tz1_len + tzoff_len, tz2, tz2_len);"}, {"sha": "ac3db83f581cb84dc7e073bd89e074b442be8646", "filename": "libjava/classpath/native/jni/midi-alsa/Makefile.in", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fnative%2Fjni%2Fmidi-alsa%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fnative%2Fjni%2Fmidi-alsa%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fnative%2Fjni%2Fmidi-alsa%2FMakefile.in?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -40,9 +40,6 @@ DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n am__aclocal_m4_deps = $(top_srcdir)/../../config/depstand.m4 \\\n \t$(top_srcdir)/../../config/lead-dot.m4 \\\n-\t$(top_srcdir)/../../config/lib-ld.m4 \\\n-\t$(top_srcdir)/../../config/lib-link.m4 \\\n-\t$(top_srcdir)/../../config/lib-prefix.m4 \\\n \t$(top_srcdir)/../../config/multi.m4 \\\n \t$(top_srcdir)/../../config/no-executables.m4 \\\n \t$(top_srcdir)/../../config/override.m4 \\\n@@ -61,7 +58,9 @@ am__aclocal_m4_deps = $(top_srcdir)/../../config/depstand.m4 \\\n \t$(top_srcdir)/m4/ax_create_stdint_h.m4 \\\n \t$(top_srcdir)/m4/ax_func_which_gethostbyname_r.m4 \\\n \t$(top_srcdir)/m4/gcc_attribute.m4 $(top_srcdir)/m4/iconv.m4 \\\n-\t$(top_srcdir)/m4/pkg.m4 $(top_srcdir)/configure.ac\n+\t$(top_srcdir)/m4/lib-ld.m4 $(top_srcdir)/m4/lib-link.m4 \\\n+\t$(top_srcdir)/m4/lib-prefix.m4 $(top_srcdir)/m4/pkg.m4 \\\n+\t$(top_srcdir)/configure.ac\n am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n \t$(ACLOCAL_M4)\n mkinstalldirs = $(SHELL) $(top_srcdir)/../../mkinstalldirs\n@@ -216,6 +215,7 @@ MAKEINFO = @MAKEINFO@\n MKDIR = @MKDIR@\n MKDIR_P = @MKDIR_P@\n MOC = @MOC@\n+MOC4 = @MOC4@\n MOZILLA_CFLAGS = @MOZILLA_CFLAGS@\n MOZILLA_LIBS = @MOZILLA_LIBS@\n NM = @NM@"}, {"sha": "b1dd722d26a51667ca4e5709ba3e0f2698ff2946", "filename": "libjava/classpath/native/jni/midi-dssi/Makefile.in", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fnative%2Fjni%2Fmidi-dssi%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fnative%2Fjni%2Fmidi-dssi%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fnative%2Fjni%2Fmidi-dssi%2FMakefile.in?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -40,9 +40,6 @@ DIST_COMMON = README $(srcdir)/Makefile.am $(srcdir)/Makefile.in\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n am__aclocal_m4_deps = $(top_srcdir)/../../config/depstand.m4 \\\n \t$(top_srcdir)/../../config/lead-dot.m4 \\\n-\t$(top_srcdir)/../../config/lib-ld.m4 \\\n-\t$(top_srcdir)/../../config/lib-link.m4 \\\n-\t$(top_srcdir)/../../config/lib-prefix.m4 \\\n \t$(top_srcdir)/../../config/multi.m4 \\\n \t$(top_srcdir)/../../config/no-executables.m4 \\\n \t$(top_srcdir)/../../config/override.m4 \\\n@@ -61,7 +58,9 @@ am__aclocal_m4_deps = $(top_srcdir)/../../config/depstand.m4 \\\n \t$(top_srcdir)/m4/ax_create_stdint_h.m4 \\\n \t$(top_srcdir)/m4/ax_func_which_gethostbyname_r.m4 \\\n \t$(top_srcdir)/m4/gcc_attribute.m4 $(top_srcdir)/m4/iconv.m4 \\\n-\t$(top_srcdir)/m4/pkg.m4 $(top_srcdir)/configure.ac\n+\t$(top_srcdir)/m4/lib-ld.m4 $(top_srcdir)/m4/lib-link.m4 \\\n+\t$(top_srcdir)/m4/lib-prefix.m4 $(top_srcdir)/m4/pkg.m4 \\\n+\t$(top_srcdir)/configure.ac\n am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n \t$(ACLOCAL_M4)\n mkinstalldirs = $(SHELL) $(top_srcdir)/../../mkinstalldirs\n@@ -216,6 +215,7 @@ MAKEINFO = @MAKEINFO@\n MKDIR = @MKDIR@\n MKDIR_P = @MKDIR_P@\n MOC = @MOC@\n+MOC4 = @MOC4@\n MOZILLA_CFLAGS = @MOZILLA_CFLAGS@\n MOZILLA_LIBS = @MOZILLA_LIBS@\n NM = @NM@"}, {"sha": "55881bef88433943f7ca76444f65cb37d28f429f", "filename": "libjava/classpath/native/jni/midi-dssi/gnu_javax_sound_midi_dssi_DSSISynthesizer.c", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fnative%2Fjni%2Fmidi-dssi%2Fgnu_javax_sound_midi_dssi_DSSISynthesizer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fnative%2Fjni%2Fmidi-dssi%2Fgnu_javax_sound_midi_dssi_DSSISynthesizer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fnative%2Fjni%2Fmidi-dssi%2Fgnu_javax_sound_midi_dssi_DSSISynthesizer.c?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -283,15 +283,20 @@ JNIEXPORT void JNICALL\n Java_gnu_javax_sound_midi_dssi_DSSISynthesizer_open_1 \n   (JNIEnv *env, jclass clazz __attribute__((unused)), jlong handle)\n {\n-  unsigned int port_count, j, cindex;\n+  unsigned int port_count, j, cindex, ret;\n   const char **ports;\n   int controller = 0;\n   dssi_data *data = (dssi_data *) (long) handle;\n-  if ((data->jack_client = jack_client_new (data->desc->LADSPA_Plugin->Label)) == 0)\n+  jack_status_t status;\n+  char buffer[31];\n+\n+  if ((data->jack_client = jack_client_open (data->desc->LADSPA_Plugin->Label,\n+\t\t\t\t\t     JackUseExactName, &status)) == 0)\n     {\n-      /*\tJCL_ThrowException (env, \"javax/sound/midi/MidiUnavailableException\",   */\n-      JCL_ThrowException (env, \"java/io/IOException\", \n-\t\t\t  \"can't create jack client\");\n+      ret = snprintf(buffer, 31, \"can't create jack client: %4d\", status);\n+      assert (ret == 30);\n+      JCL_ThrowException (env, \"javax/sound/midi/MidiUnavailableException\",\n+\t\t\t  buffer);\n       return;\n     } \n "}, {"sha": "82d60cdac5f9d8543bfa970e20a8e6365db55d84", "filename": "libjava/classpath/native/jni/native-lib/Makefile.in", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fnative%2Fjni%2Fnative-lib%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fnative%2Fjni%2Fnative-lib%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fnative%2Fjni%2Fnative-lib%2FMakefile.in?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -40,9 +40,6 @@ DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n am__aclocal_m4_deps = $(top_srcdir)/../../config/depstand.m4 \\\n \t$(top_srcdir)/../../config/lead-dot.m4 \\\n-\t$(top_srcdir)/../../config/lib-ld.m4 \\\n-\t$(top_srcdir)/../../config/lib-link.m4 \\\n-\t$(top_srcdir)/../../config/lib-prefix.m4 \\\n \t$(top_srcdir)/../../config/multi.m4 \\\n \t$(top_srcdir)/../../config/no-executables.m4 \\\n \t$(top_srcdir)/../../config/override.m4 \\\n@@ -61,7 +58,9 @@ am__aclocal_m4_deps = $(top_srcdir)/../../config/depstand.m4 \\\n \t$(top_srcdir)/m4/ax_create_stdint_h.m4 \\\n \t$(top_srcdir)/m4/ax_func_which_gethostbyname_r.m4 \\\n \t$(top_srcdir)/m4/gcc_attribute.m4 $(top_srcdir)/m4/iconv.m4 \\\n-\t$(top_srcdir)/m4/pkg.m4 $(top_srcdir)/configure.ac\n+\t$(top_srcdir)/m4/lib-ld.m4 $(top_srcdir)/m4/lib-link.m4 \\\n+\t$(top_srcdir)/m4/lib-prefix.m4 $(top_srcdir)/m4/pkg.m4 \\\n+\t$(top_srcdir)/configure.ac\n am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n \t$(ACLOCAL_M4)\n mkinstalldirs = $(SHELL) $(top_srcdir)/../../mkinstalldirs\n@@ -188,6 +187,7 @@ MAKEINFO = @MAKEINFO@\n MKDIR = @MKDIR@\n MKDIR_P = @MKDIR_P@\n MOC = @MOC@\n+MOC4 = @MOC4@\n MOZILLA_CFLAGS = @MOZILLA_CFLAGS@\n MOZILLA_LIBS = @MOZILLA_LIBS@\n NM = @NM@"}, {"sha": "5fef00d2104cf8daea8df8f42e68a628d9736a82", "filename": "libjava/classpath/native/jni/qt-peer/Makefile.in", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fnative%2Fjni%2Fqt-peer%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fnative%2Fjni%2Fqt-peer%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fnative%2Fjni%2Fqt-peer%2FMakefile.in?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -43,9 +43,6 @@ DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n am__aclocal_m4_deps = $(top_srcdir)/../../config/depstand.m4 \\\n \t$(top_srcdir)/../../config/lead-dot.m4 \\\n-\t$(top_srcdir)/../../config/lib-ld.m4 \\\n-\t$(top_srcdir)/../../config/lib-link.m4 \\\n-\t$(top_srcdir)/../../config/lib-prefix.m4 \\\n \t$(top_srcdir)/../../config/multi.m4 \\\n \t$(top_srcdir)/../../config/no-executables.m4 \\\n \t$(top_srcdir)/../../config/override.m4 \\\n@@ -64,7 +61,9 @@ am__aclocal_m4_deps = $(top_srcdir)/../../config/depstand.m4 \\\n \t$(top_srcdir)/m4/ax_create_stdint_h.m4 \\\n \t$(top_srcdir)/m4/ax_func_which_gethostbyname_r.m4 \\\n \t$(top_srcdir)/m4/gcc_attribute.m4 $(top_srcdir)/m4/iconv.m4 \\\n-\t$(top_srcdir)/m4/pkg.m4 $(top_srcdir)/configure.ac\n+\t$(top_srcdir)/m4/lib-ld.m4 $(top_srcdir)/m4/lib-link.m4 \\\n+\t$(top_srcdir)/m4/lib-prefix.m4 $(top_srcdir)/m4/pkg.m4 \\\n+\t$(top_srcdir)/configure.ac\n am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n \t$(ACLOCAL_M4)\n mkinstalldirs = $(SHELL) $(top_srcdir)/../../mkinstalldirs\n@@ -218,6 +217,7 @@ MAKEINFO = @MAKEINFO@\n MKDIR = @MKDIR@\n MKDIR_P = @MKDIR_P@\n MOC = @MOC@\n+MOC4 = @MOC4@\n MOZILLA_CFLAGS = @MOZILLA_CFLAGS@\n MOZILLA_LIBS = @MOZILLA_LIBS@\n NM = @NM@"}, {"sha": "257d03eb2bb943cb9f1661ded63a92ea40294c9c", "filename": "libjava/classpath/native/jni/xmlj/Makefile.in", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fnative%2Fjni%2Fxmlj%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fnative%2Fjni%2Fxmlj%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fnative%2Fjni%2Fxmlj%2FMakefile.in?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -40,9 +40,6 @@ DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n am__aclocal_m4_deps = $(top_srcdir)/../../config/depstand.m4 \\\n \t$(top_srcdir)/../../config/lead-dot.m4 \\\n-\t$(top_srcdir)/../../config/lib-ld.m4 \\\n-\t$(top_srcdir)/../../config/lib-link.m4 \\\n-\t$(top_srcdir)/../../config/lib-prefix.m4 \\\n \t$(top_srcdir)/../../config/multi.m4 \\\n \t$(top_srcdir)/../../config/no-executables.m4 \\\n \t$(top_srcdir)/../../config/override.m4 \\\n@@ -61,7 +58,9 @@ am__aclocal_m4_deps = $(top_srcdir)/../../config/depstand.m4 \\\n \t$(top_srcdir)/m4/ax_create_stdint_h.m4 \\\n \t$(top_srcdir)/m4/ax_func_which_gethostbyname_r.m4 \\\n \t$(top_srcdir)/m4/gcc_attribute.m4 $(top_srcdir)/m4/iconv.m4 \\\n-\t$(top_srcdir)/m4/pkg.m4 $(top_srcdir)/configure.ac\n+\t$(top_srcdir)/m4/lib-ld.m4 $(top_srcdir)/m4/lib-link.m4 \\\n+\t$(top_srcdir)/m4/lib-prefix.m4 $(top_srcdir)/m4/pkg.m4 \\\n+\t$(top_srcdir)/configure.ac\n am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n \t$(ACLOCAL_M4)\n mkinstalldirs = $(SHELL) $(top_srcdir)/../../mkinstalldirs\n@@ -212,6 +211,7 @@ MAKEINFO = @MAKEINFO@\n MKDIR = @MKDIR@\n MKDIR_P = @MKDIR_P@\n MOC = @MOC@\n+MOC4 = @MOC4@\n MOZILLA_CFLAGS = @MOZILLA_CFLAGS@\n MOZILLA_LIBS = @MOZILLA_LIBS@\n NM = @NM@"}, {"sha": "c673768574c1ac42c3c53ec3e3e3ed296d0bf280", "filename": "libjava/classpath/native/plugin/Makefile.in", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fnative%2Fplugin%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fnative%2Fplugin%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fnative%2Fplugin%2FMakefile.in?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -40,9 +40,6 @@ DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n am__aclocal_m4_deps = $(top_srcdir)/../../config/depstand.m4 \\\n \t$(top_srcdir)/../../config/lead-dot.m4 \\\n-\t$(top_srcdir)/../../config/lib-ld.m4 \\\n-\t$(top_srcdir)/../../config/lib-link.m4 \\\n-\t$(top_srcdir)/../../config/lib-prefix.m4 \\\n \t$(top_srcdir)/../../config/multi.m4 \\\n \t$(top_srcdir)/../../config/no-executables.m4 \\\n \t$(top_srcdir)/../../config/override.m4 \\\n@@ -61,7 +58,9 @@ am__aclocal_m4_deps = $(top_srcdir)/../../config/depstand.m4 \\\n \t$(top_srcdir)/m4/ax_create_stdint_h.m4 \\\n \t$(top_srcdir)/m4/ax_func_which_gethostbyname_r.m4 \\\n \t$(top_srcdir)/m4/gcc_attribute.m4 $(top_srcdir)/m4/iconv.m4 \\\n-\t$(top_srcdir)/m4/pkg.m4 $(top_srcdir)/configure.ac\n+\t$(top_srcdir)/m4/lib-ld.m4 $(top_srcdir)/m4/lib-link.m4 \\\n+\t$(top_srcdir)/m4/lib-prefix.m4 $(top_srcdir)/m4/pkg.m4 \\\n+\t$(top_srcdir)/configure.ac\n am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n \t$(ACLOCAL_M4)\n mkinstalldirs = $(SHELL) $(top_srcdir)/../../mkinstalldirs\n@@ -214,6 +213,7 @@ MAKEINFO = @MAKEINFO@\n MKDIR = @MKDIR@\n MKDIR_P = @MKDIR_P@\n MOC = @MOC@\n+MOC4 = @MOC4@\n MOZILLA_CFLAGS = @MOZILLA_CFLAGS@\n MOZILLA_LIBS = @MOZILLA_LIBS@\n NM = @NM@"}, {"sha": "cb0a7e3dbe91148ec30130d456a4f201f102953a", "filename": "libjava/classpath/org/omg/CORBA/LocalObject.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Forg%2Fomg%2FCORBA%2FLocalObject.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Forg%2Fomg%2FCORBA%2FLocalObject.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Forg%2Fomg%2FCORBA%2FLocalObject.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -267,7 +267,7 @@ public org.omg.CORBA.Object _set_policy_override(Policy[] policies,\n    *\n    * @throws NO_IMPLEMENT always. If used, the method must be overridden.\n    */\n-  @SuppressWarnings(\"unchecked\") // Needed for API compatibility\n+  @SuppressWarnings(\"rawtypes\") // Needed for API compatibility\n   public ServantObject _servant_preinvoke(String operation, Class expectedType)\n   {\n     throw new NO_IMPLEMENT(INAPPROPRIATE);"}, {"sha": "798a1c5e8fee3b1a99a01351a18ef9d3f7b0d9f8", "filename": "libjava/classpath/org/omg/CORBA/portable/Delegate.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Forg%2Fomg%2FCORBA%2Fportable%2FDelegate.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Forg%2Fomg%2FCORBA%2Fportable%2FDelegate.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Forg%2Fomg%2FCORBA%2Fportable%2FDelegate.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -376,7 +376,7 @@ public void servant_postinvoke(org.omg.CORBA.Object self,\n    * @return the servant or null if the servant is not an expected type\n    * of the method is not supported, for example, due security reasons.\n    */\n-  @SuppressWarnings(\"unchecked\") // Needed for API compatibility\n+  @SuppressWarnings(\"rawtypes\") // Needed for API compatibility\n   public ServantObject servant_preinvoke(org.omg.CORBA.Object self,\n                                          String operation, Class expectedType\n                                         )"}, {"sha": "4ac63b66dcd23ae8b35d3b50019ee05293ea09be", "filename": "libjava/classpath/org/omg/CORBA/portable/InputStream.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Forg%2Fomg%2FCORBA%2Fportable%2FInputStream.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Forg%2Fomg%2FCORBA%2Fportable%2FInputStream.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Forg%2Fomg%2FCORBA%2Fportable%2FInputStream.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -237,7 +237,7 @@ public abstract void read_boolean_array(boolean[] value, int offset,\n    * @param klass a CORBA class\n    * @throws NO_IMPLEMENT, always.\n    */\n-  @SuppressWarnings(\"unchecked\") // Needed for API compatibility\n+  @SuppressWarnings(\"rawtypes\") // Needed for API compatibility\n   public Object read_Object(Class klass)\n   {\n     throw new NO_IMPLEMENT();"}, {"sha": "5b7919fd0a838d6967f6303021bedfc45d9acba7", "filename": "libjava/classpath/org/omg/CORBA/portable/ObjectImpl.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Forg%2Fomg%2FCORBA%2Fportable%2FObjectImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Forg%2Fomg%2FCORBA%2Fportable%2FObjectImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Forg%2Fomg%2FCORBA%2Fportable%2FObjectImpl.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -341,7 +341,7 @@ public void _servant_postinvoke(ServantObject servant)\n    * @return the servant or null if the servant is not an expected type\n    * of the method is not supported, for example, due security reasons.\n    */\n-  @SuppressWarnings(\"unchecked\") // Needed for API compatibility\n+  @SuppressWarnings(\"rawtypes\") // Needed for API compatibility\n   public ServantObject _servant_preinvoke(String method, Class expected_type)\n   {\n     return delegate.servant_preinvoke(this, method, expected_type);"}, {"sha": "33ad522db98a223533e7495601443f0b0d7cb60c", "filename": "libjava/classpath/org/omg/CORBA_2_3/portable/InputStream.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Forg%2Fomg%2FCORBA_2_3%2Fportable%2FInputStream.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Forg%2Fomg%2FCORBA_2_3%2Fportable%2FInputStream.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Forg%2Fomg%2FCORBA_2_3%2Fportable%2FInputStream.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -99,7 +99,7 @@ public Object read_abstract_interface()\n    *\n    * @return an abstract interface, unmarshaled from the stream\n    */\n-  @SuppressWarnings(\"unchecked\") // Needed for API compatibility\n+  @SuppressWarnings(\"rawtypes\") // Needed for API compatibility\n   public Object read_abstract_interface(Class clz)\n   {\n     boolean isValue = read_boolean();\n@@ -148,7 +148,7 @@ public Serializable read_value()\n    *\n    * @return an value type structure, unmarshaled from the stream\n    */\n-  @SuppressWarnings(\"unchecked\") // Needed for API compatibility\n+  @SuppressWarnings(\"rawtypes\") // Needed for API compatibility\n   public Serializable read_value(Class clz)\n   {\n     return Vio.read(this, clz);"}, {"sha": "4273bfc905726d16b0e5ae7fd93f24e6c413c48e", "filename": "libjava/classpath/org/omg/CORBA_2_3/portable/OutputStream.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Forg%2Fomg%2FCORBA_2_3%2Fportable%2FOutputStream.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Forg%2Fomg%2FCORBA_2_3%2Fportable%2FOutputStream.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Forg%2Fomg%2FCORBA_2_3%2Fportable%2FOutputStream.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -136,7 +136,7 @@ public void write_value(Serializable value, BoxedValueHelper helper)\n    *\n    * @param value a value type object to write.\n    */\n-  @SuppressWarnings(\"unchecked\") // Needed for API compatibility\n+  @SuppressWarnings(\"rawtypes\") // Needed for API compatibility\n   public void write_value(Serializable value, Class clz)\n   {\n     Vio.write(this, value, clz);"}, {"sha": "c0939937fd6aada446026fb2f14277cdbae9797e", "filename": "libjava/classpath/org/omg/DynamicAny/_DynAnyFactoryStub.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Forg%2Fomg%2FDynamicAny%2F_DynAnyFactoryStub.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Forg%2Fomg%2FDynamicAny%2F_DynAnyFactoryStub.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Forg%2Fomg%2FDynamicAny%2F_DynAnyFactoryStub.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -68,7 +68,7 @@\n   /**\n    * The purpose and value of this field are not documented.\n    */\n-  @SuppressWarnings(\"unchecked\") // Needed for API compatibility\n+  @SuppressWarnings(\"rawtypes\") // Needed for API compatibility\n   public static final Class _opsClass = DynAnyFactoryOperations.class;\n \n   /**"}, {"sha": "a2adec9ed721189fdaf853938e93c06ac7489ca6", "filename": "libjava/classpath/org/omg/DynamicAny/_DynAnyStub.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Forg%2Fomg%2FDynamicAny%2F_DynAnyStub.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Forg%2Fomg%2FDynamicAny%2F_DynAnyStub.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Forg%2Fomg%2FDynamicAny%2F_DynAnyStub.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -66,7 +66,7 @@\n   /**\n    * The purpose and value of this field are not documented.\n    */\n-  @SuppressWarnings(\"unchecked\") // Needed for API compatibility\n+  @SuppressWarnings(\"rawtypes\") // Needed for API compatibility\n   public static final Class _opsClass = DynAnyOperations.class;\n \n   /**"}, {"sha": "719cf87ae353701a34ad95dfdba218ca39e4c365", "filename": "libjava/classpath/org/omg/DynamicAny/_DynArrayStub.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Forg%2Fomg%2FDynamicAny%2F_DynArrayStub.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Forg%2Fomg%2FDynamicAny%2F_DynArrayStub.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Forg%2Fomg%2FDynamicAny%2F_DynArrayStub.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -66,7 +66,7 @@\n   /**\n    * The purpose and value of this field are not documented.\n    */\n-  @SuppressWarnings(\"unchecked\") // Needed for API compatibility\n+  @SuppressWarnings(\"rawtypes\") // Needed for API compatibility\n   public static final Class _opsClass = DynArrayOperations.class;\n \n   /**"}, {"sha": "07b2b7c5dbf0f9b2d548887ded45dcb106e6a21f", "filename": "libjava/classpath/org/omg/DynamicAny/_DynEnumStub.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Forg%2Fomg%2FDynamicAny%2F_DynEnumStub.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Forg%2Fomg%2FDynamicAny%2F_DynEnumStub.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Forg%2Fomg%2FDynamicAny%2F_DynEnumStub.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -66,7 +66,7 @@\n   /**\n    * The purpose and value of this field are not documented.\n    */\n-  @SuppressWarnings(\"unchecked\") // Needed for API compatibility\n+  @SuppressWarnings(\"rawtypes\") // Needed for API compatibility\n   public static final Class _opsClass = DynEnumOperations.class;\n \n   /**"}, {"sha": "51eadf004d043fa66c4fb41b57c9ddc072ece8b3", "filename": "libjava/classpath/org/omg/DynamicAny/_DynFixedStub.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Forg%2Fomg%2FDynamicAny%2F_DynFixedStub.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Forg%2Fomg%2FDynamicAny%2F_DynFixedStub.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Forg%2Fomg%2FDynamicAny%2F_DynFixedStub.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -66,7 +66,7 @@\n   /**\n    * The purpose and value of this field are not documented.\n    */\n-  @SuppressWarnings(\"unchecked\") // Needed for API compatibility\n+  @SuppressWarnings(\"rawtypes\") // Needed for API compatibility\n   public static final Class _opsClass = DynFixedOperations.class;\n \n   /**"}, {"sha": "6de97b2fc45713e6858511a6b31de2d29c79da45", "filename": "libjava/classpath/org/omg/DynamicAny/_DynSequenceStub.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Forg%2Fomg%2FDynamicAny%2F_DynSequenceStub.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Forg%2Fomg%2FDynamicAny%2F_DynSequenceStub.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Forg%2Fomg%2FDynamicAny%2F_DynSequenceStub.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -67,7 +67,7 @@\n   /**\n    * The purpose and value of this field are not documented.\n    */\n-  @SuppressWarnings(\"unchecked\") // Needed for API compatibility\n+  @SuppressWarnings(\"rawtypes\") // Needed for API compatibility\n   public static final Class _opsClass = DynSequenceOperations.class;\n \n   /**"}, {"sha": "f2ca27f0a80c8ffe66e928b7f7d1612705886ec1", "filename": "libjava/classpath/org/omg/DynamicAny/_DynStructStub.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Forg%2Fomg%2FDynamicAny%2F_DynStructStub.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Forg%2Fomg%2FDynamicAny%2F_DynStructStub.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Forg%2Fomg%2FDynamicAny%2F_DynStructStub.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -68,7 +68,7 @@\n   /**\n    * The purpose and value of this field are not documented.\n    */\n-  @SuppressWarnings(\"unchecked\") // Needed for API compatibility\n+  @SuppressWarnings(\"rawtypes\") // Needed for API compatibility\n   public static final Class _opsClass = DynStructOperations.class;\n \n   /**"}, {"sha": "de351d8d4a9fcb1f78b52c1b60ae175620d8e5af", "filename": "libjava/classpath/org/omg/DynamicAny/_DynUnionStub.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Forg%2Fomg%2FDynamicAny%2F_DynUnionStub.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Forg%2Fomg%2FDynamicAny%2F_DynUnionStub.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Forg%2Fomg%2FDynamicAny%2F_DynUnionStub.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -68,7 +68,7 @@\n   /**\n    * The purpose and value of this field are not documented.\n    */\n-  @SuppressWarnings(\"unchecked\") // Needed for API compatibility\n+  @SuppressWarnings(\"rawtypes\") // Needed for API compatibility\n   public static final Class _opsClass = DynUnionOperations.class;\n \n   /**"}, {"sha": "199b7eba832c1ed575e12520e12e29a4182263fa", "filename": "libjava/classpath/org/omg/DynamicAny/_DynValueStub.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Forg%2Fomg%2FDynamicAny%2F_DynValueStub.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Forg%2Fomg%2FDynamicAny%2F_DynValueStub.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Forg%2Fomg%2FDynamicAny%2F_DynValueStub.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -68,7 +68,7 @@\n   /**\n    * The purpose and value of this field are not documented.\n    */\n-  @SuppressWarnings(\"unchecked\") // Needed for API compatibility\n+  @SuppressWarnings(\"rawtypes\") // Needed for API compatibility\n   public static final Class _opsClass = DynValueOperations.class;\n \n   /**"}, {"sha": "811d7430ecda30633c376c5e417bdaf2a0b65ca5", "filename": "libjava/classpath/org/omg/PortableServer/_ServantActivatorStub.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Forg%2Fomg%2FPortableServer%2F_ServantActivatorStub.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Forg%2Fomg%2FPortableServer%2F_ServantActivatorStub.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Forg%2Fomg%2FPortableServer%2F_ServantActivatorStub.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -70,7 +70,7 @@\n    * This the purpose of this field is undocumented up till 1.5 java API\n    * inclusive.\n    */\n-  @SuppressWarnings(\"unchecked\") // Needed for API compatibility\n+  @SuppressWarnings(\"rawtypes\") // Needed for API compatibility\n   public static final Class _opsClass = ServantActivatorOperations.class;\n \n   /**"}, {"sha": "f63340f9822305cb3d762d7a4c4867bfa2b5a6d6", "filename": "libjava/classpath/org/omg/PortableServer/_ServantLocatorStub.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Forg%2Fomg%2FPortableServer%2F_ServantLocatorStub.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Forg%2Fomg%2FPortableServer%2F_ServantLocatorStub.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Forg%2Fomg%2FPortableServer%2F_ServantLocatorStub.java?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -71,7 +71,7 @@\n    * This the purpose of this field is undocumented up till 1.5 java API\n    * inclusive.\n    */\n-  @SuppressWarnings(\"unchecked\") // Needed for API compatibility\n+  @SuppressWarnings(\"rawtypes\") // Needed for API compatibility\n   public static final Class _opsClass = ServantLocatorOperations.class;\n \n   /**"}, {"sha": "6c136eecb1f5caf161d1e59d884ef8ef552beb71", "filename": "libjava/classpath/resource/Makefile.in", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fresource%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fresource%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fresource%2FMakefile.in?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -40,9 +40,6 @@ DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n am__aclocal_m4_deps = $(top_srcdir)/../../config/depstand.m4 \\\n \t$(top_srcdir)/../../config/lead-dot.m4 \\\n-\t$(top_srcdir)/../../config/lib-ld.m4 \\\n-\t$(top_srcdir)/../../config/lib-link.m4 \\\n-\t$(top_srcdir)/../../config/lib-prefix.m4 \\\n \t$(top_srcdir)/../../config/multi.m4 \\\n \t$(top_srcdir)/../../config/no-executables.m4 \\\n \t$(top_srcdir)/../../config/override.m4 \\\n@@ -61,7 +58,9 @@ am__aclocal_m4_deps = $(top_srcdir)/../../config/depstand.m4 \\\n \t$(top_srcdir)/m4/ax_create_stdint_h.m4 \\\n \t$(top_srcdir)/m4/ax_func_which_gethostbyname_r.m4 \\\n \t$(top_srcdir)/m4/gcc_attribute.m4 $(top_srcdir)/m4/iconv.m4 \\\n-\t$(top_srcdir)/m4/pkg.m4 $(top_srcdir)/configure.ac\n+\t$(top_srcdir)/m4/lib-ld.m4 $(top_srcdir)/m4/lib-link.m4 \\\n+\t$(top_srcdir)/m4/lib-prefix.m4 $(top_srcdir)/m4/pkg.m4 \\\n+\t$(top_srcdir)/configure.ac\n am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n \t$(ACLOCAL_M4)\n mkinstalldirs = $(SHELL) $(top_srcdir)/../../mkinstalldirs\n@@ -192,6 +191,7 @@ MAKEINFO = @MAKEINFO@\n MKDIR = @MKDIR@\n MKDIR_P = @MKDIR_P@\n MOC = @MOC@\n+MOC4 = @MOC4@\n MOZILLA_CFLAGS = @MOZILLA_CFLAGS@\n MOZILLA_LIBS = @MOZILLA_LIBS@\n NM = @NM@"}, {"sha": "d6d27bdcb0876dcbc461a99845a125460fc87240", "filename": "libjava/classpath/resource/gnu/java/util/regex/MessagesBundle_it.properties", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fresource%2Fgnu%2Fjava%2Futil%2Fregex%2FMessagesBundle_it.properties", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7/libjava%2Fclasspath%2Fresource%2Fgnu%2Fjava%2Futil%2Fregex%2FMessagesBundle_it.properties", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fresource%2Fgnu%2Fjava%2Futil%2Fregex%2FMessagesBundle_it.properties?ref=a1906e8bbfa426ed1adfe751608bc74f1d4d2ab7", "patch": "@@ -1,5 +1,5 @@\n # Localized error messages for gnu.regexp, in Italian.\n-# $Id: MessagesBundle_it.properties,v 1.2 2006/12/10 20:25:50 gnu_andrew Exp $\n+# $Id: MessagesBundle_it.properties,v 1.2 2006-12-10 20:25:50 gnu_andrew Exp $\n # Messaggi italiani per gnu.regexp.\n #\n # Attenzione: Questa traduzione fu scritto da un italo-americano."}]}