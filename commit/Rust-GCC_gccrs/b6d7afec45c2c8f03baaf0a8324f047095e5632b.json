{"sha": "b6d7afec45c2c8f03baaf0a8324f047095e5632b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjZkN2FmZWM0NWMyYzhmMDNiYWFmMGE4MzI0ZjA0NzA5NWU1NjMyYg==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2001-04-07T20:44:56Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2001-04-07T20:44:56Z"}, "message": "config.gcc: Set default for xmake_file at top, not bottom.\n\n\t* config.gcc: Set default for xmake_file at top, not bottom.\n\tChange places that set xmake_file to \"none\" to set to the\n\tempty string instead, or remove them entirely if there is no\n\tdefault xmake_file for this cpu_type.  Remove references to\n\tdeleted files.\n\n\t* config/x-lynx, config/convex/x-convex, config/elxsi/x-elxsi,\n\tconfig/i386/x-isc, config/i386/x-isc3, config/i386/x-ncr3000,\n\tconfig/i386/x-next, config/i386/x-sco, config/i386/x-sysv3,\n\tconfig/i386/x-vsta, config/i860/x-sysv4, config/m68k/x-amix,\n\tconfig/m68k/x-apollo68, config/m68k/x-ccur, config/m68k/x-crds,\n\tconfig/m68k/x-hp2bsd, config/m68k/x-mot3300, config/m68k/x-mot3300-gas,\n\tconfig/m68k/x-tower, config/m88k/x-sysv4, config/mips/x-dec-osf1,\n\tconfig/mips/x-sni-svr4, config/mips/x-ultrix, config/romp/x-mach,\n\tconfig/romp/x-romp, config/rs6000/x-beos, config/rs6000/x-lynx,\n\tconfig/rs6000/x-mach, config/rs6000/x-sysv4, config/sparc/x-sysv4:\n\tDelete.\n\n\t* config/a29k/x-unix, config/i386/x-aix, config/i386/x-osf1elf,\n\tconfig/i386/x-osfrose, config/m68k/x-dpx2, config/mips/x-iris3,\n\tconfig/mips/x-mips, config/mips/x-osfrose, config/mips/x-sony,\n\tconfig/mips/x-sysv, config/rs6000/x-aix31:\n\tJust set CLIB to -lld or -lmld, as appropriate.\n\n\t* config/arm/x-riscix, config/i370/x-oe, config/i386/x-dgux,\n\tconfig/i386/x-sco4, config/i386/x-sco5, config/m68k/x-hp320,\n\tconfig/m68k/x-hp320g, config/m68k/x-next, config/m88k/x-dgux,\n\tconfig/mips/x-iris, config/pa/x-pa:\n\tJust set (some of) FIXPROTO_DEFINES, STMP_FIXPROTO,\n\tOTHER_FIXINCLUDES_DIRS.\n\n\t* config/i386/x-djgpp: Don't set LN or LN_S.\n\t* config/m88k/x-dolph: Don't define __m88k__.\n\t* config/m88k/x-tekXD88: Don't set AR_FLAGS.\n\t* config/pa/x-pa-mpeix: Just set up quadlib.asm.\n\t* config/i860/fx2800.h: No need to #undef SVR4.\n\n\t38 x-host fragments remain, 2 x-cpu.\n\nFrom-SVN: r41181", "tree": {"sha": "d07895cdaa421435ffa8950936036c9ded5ca17f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d07895cdaa421435ffa8950936036c9ded5ca17f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b6d7afec45c2c8f03baaf0a8324f047095e5632b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6d7afec45c2c8f03baaf0a8324f047095e5632b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6d7afec45c2c8f03baaf0a8324f047095e5632b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6d7afec45c2c8f03baaf0a8324f047095e5632b/comments", "author": null, "committer": null, "parents": [{"sha": "693c4145079227d051e2e588926a3016edc08643", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/693c4145079227d051e2e588926a3016edc08643", "html_url": "https://github.com/Rust-GCC/gccrs/commit/693c4145079227d051e2e588926a3016edc08643"}], "stats": {"total": 660, "additions": 62, "deletions": 598}, "files": [{"sha": "83fcca16de14343b2a7e04f15fddaa92aff691da", "filename": "gcc/ChangeLog", "status": "modified", "additions": 47, "deletions": 6, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6d7afec45c2c8f03baaf0a8324f047095e5632b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6d7afec45c2c8f03baaf0a8324f047095e5632b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b6d7afec45c2c8f03baaf0a8324f047095e5632b", "patch": "@@ -1,3 +1,44 @@\n+2001-04-07  Zack Weinberg  <zackw@stanford.edu>\n+\n+\t* config.gcc: Set default for xmake_file at top, not bottom.\n+\tChange places that set xmake_file to \"none\" to set to the\n+\tempty string instead, or remove them entirely if there is no\n+\tdefault xmake_file for this cpu_type.  Remove references to\n+\tdeleted files.\n+\n+\t* config/x-lynx, config/convex/x-convex, config/elxsi/x-elxsi,\n+\tconfig/i386/x-isc, config/i386/x-isc3, config/i386/x-ncr3000,\n+\tconfig/i386/x-next, config/i386/x-sco, config/i386/x-sysv3,\n+\tconfig/i386/x-vsta, config/i860/x-sysv4, config/m68k/x-amix,\n+\tconfig/m68k/x-apollo68, config/m68k/x-ccur, config/m68k/x-crds,\n+\tconfig/m68k/x-hp2bsd, config/m68k/x-mot3300, config/m68k/x-mot3300-gas,\n+\tconfig/m68k/x-tower, config/m88k/x-sysv4, config/mips/x-dec-osf1,\n+\tconfig/mips/x-sni-svr4, config/mips/x-ultrix, config/romp/x-mach,\n+\tconfig/romp/x-romp, config/rs6000/x-beos, config/rs6000/x-lynx,\n+\tconfig/rs6000/x-mach, config/rs6000/x-sysv4, config/sparc/x-sysv4:\n+\tDelete.\n+\n+\t* config/a29k/x-unix, config/i386/x-aix, config/i386/x-osf1elf,\n+\tconfig/i386/x-osfrose, config/m68k/x-dpx2, config/mips/x-iris3,\n+\tconfig/mips/x-mips, config/mips/x-osfrose, config/mips/x-sony,\n+\tconfig/mips/x-sysv, config/rs6000/x-aix31:\n+\tJust set CLIB to -lld or -lmld, as appropriate.\n+\n+\t* config/arm/x-riscix, config/i370/x-oe, config/i386/x-dgux,\n+\tconfig/i386/x-sco4, config/i386/x-sco5, config/m68k/x-hp320,\n+\tconfig/m68k/x-hp320g, config/m68k/x-next, config/m88k/x-dgux,\n+\tconfig/mips/x-iris, config/pa/x-pa:\n+\tJust set (some of) FIXPROTO_DEFINES, STMP_FIXPROTO,\n+\tOTHER_FIXINCLUDES_DIRS.\n+\n+\t* config/i386/x-djgpp: Don't set LN or LN_S.\n+\t* config/m88k/x-dolph: Don't define __m88k__.\n+\t* config/m88k/x-tekXD88: Don't set AR_FLAGS.\n+\t* config/pa/x-pa-mpeix: Just set up quadlib.asm.\n+\t* config/i860/fx2800.h: No need to #undef SVR4.\n+\n+\t38 x-host fragments remain, 2 x-cpu.\n+\n 2001-04-07  Herman A.J. ten Brugge <Haj.Ten.Brugge@net.HCC.nl>\n \n \t* c4x.h (HARD_REGNO_NREGS): HCmode mode uses 2 regs not 4.\n@@ -11,16 +52,16 @@\n \t* configure.in: Add check for lstat.\n \t* configure, config.in: Regenerate.\n \t* cppinit.c (append_include_chain): Make empty path \".\".\n-        * cpplib.c (do_line): Don't simplify #line paths.\n-        * cppfiles.c (remove_component_p): New function.\n+\t* cpplib.c (do_line): Don't simplify #line paths.\n+\t* cppfiles.c (remove_component_p): New function.\n \t(find_or_create_entry): Acknowledge stat () errors during\n \tpath simplification.\n \t(handle_missing_header): Don't simplify paths.\n-        (_cpp_simplify_pathname): Don't simplify VMS paths.  Return\n-        the empty path untouched.  Don't leave a trailing '/'.\n+\t(_cpp_simplify_pathname): Don't simplify VMS paths.  Return\n+\tthe empty path untouched.  Don't leave a trailing '/'.\n \n 2001-04-06  Benjamin Kosnik  <bkoz@redhat.com>\n-\t\n+\n \t* cppdefault.c (GPLUSPLUS_BACKWARD_INCLUDE_DIR): Add.\n \t* Makefile.in (-DGPLUSPLUS_BACKWARD_INCLUDE_DIR): Add.\n \n@@ -86,7 +127,7 @@ Thu Apr  5 18:25:56 CEST 2001  Jan Hubicka  <jh@suse.cz>\n \n Thu Apr  5 13:44:17 2001  J\"orn Rennecke <amylaar@redhat.com>\n \n-        * i386.md (*andsi_1+3): If used after reload, make sure the operand\n+\t* i386.md (*andsi_1+3): If used after reload, make sure the operand\n \tsatisfies ANY_QI_REG_P.\n \n 2001-04-05  Bernd Schmidt  <bernds@redhat.com>"}, {"sha": "6fb9e99a528ae0db173ba2df36746a824ad374b6", "filename": "gcc/config.gcc", "status": "modified", "additions": 8, "deletions": 55, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6d7afec45c2c8f03baaf0a8324f047095e5632b/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6d7afec45c2c8f03baaf0a8324f047095e5632b/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=b6d7afec45c2c8f03baaf0a8324f047095e5632b", "patch": "@@ -243,9 +243,13 @@ sparc*-*-*)\n esac\n \n tm_file=${cpu_type}/${cpu_type}.h\n-if test -f ${srcdir}/config/${cpu_type}/${cpu_type}-protos.h;\n+if test -f ${srcdir}/config/${cpu_type}/${cpu_type}-protos.h\n then\n-\ttm_p_file=${cpu_type}/${cpu_type}-protos.h;\n+\ttm_p_file=${cpu_type}/${cpu_type}-protos.h\n+fi\n+if test -f ${srcdir}/config/${cpu_type}/x-${cpu_type}\n+then\n+\txmake_file=${cpu_type}/x-${cpu_type}\n fi\n # On a.out targets, we need to use collect2.\n case $machine in\n@@ -289,7 +293,7 @@ case $machine in\n \ttmake_file=\"t-libc-ok t-openbsd\"\n \txm_defines=POSIX\n \t# don't depend on processor x-fragments as well\n-\txmake_file=none\n+\txmake_file=\n \tif test x$enable_threads = xyes; then\n \t\tthread_file='posix'\n \t\ttmake_file=\"${tmake_file} t-openbsd-thread\"\n@@ -373,15 +377,13 @@ alpha*-*-linux*ecoff*)\n \ttarget_cpu_default=\"MASK_GAS\"\n \ttmake_file=\"alpha/t-alpha alpha/t-ieee\"\n \tgas=no\n-\txmake_file=none\n \tgas=yes gnu_ld=yes\n \t;;\n alpha*-*-linux*libc1*)\n \ttm_file=\"${tm_file} alpha/elf.h alpha/linux.h alpha/linux-elf.h\"\n \ttarget_cpu_default=\"MASK_GAS\"\n \ttmake_file=\"t-linux t-linux-gnulibc1 alpha/t-alpha alpha/t-crtbe alpha/t-ieee\"\n \textra_parts=\"crtbegin.o crtend.o crtbeginS.o crtendS.o\"\n-\txmake_file=none\n \tgas=yes gnu_ld=yes\n \tif test x$enable_threads = xyes; then\n \t\tthread_file='posix'\n@@ -392,7 +394,6 @@ alpha*-*-linux*)\n \ttarget_cpu_default=\"MASK_GAS\"\n \ttmake_file=\"t-linux alpha/t-crtbe alpha/t-alpha alpha/t-ieee\"\n \textra_parts=\"crtbegin.o crtend.o crtbeginS.o crtendS.o\"\n-\txmake_file=none\n \tgas=yes gnu_ld=yes\n \tif test x$enable_threads = xyes; then\n \t\tthread_file='posix'\n@@ -404,7 +405,6 @@ alpha*-*-freebsd*)\n \ttarget_cpu_default=\"MASK_GAS\"\n \ttmake_file=\"t-freebsd alpha/t-crtbe alpha/t-alpha alpha/t-ieee\"\n \textra_parts=\"crtbegin.o crtend.o crtbeginS.o crtendS.o\"\n-\txmake_file=none\n \tgas=yes gnu_ld=yes\n \tstabs=yes\n \tcase x${enable_threads} in\n@@ -420,7 +420,6 @@ alpha*-*-netbsd*)\n \ttarget_cpu_default=\"MASK_GAS\"\n \ttmake_file=\"alpha/t-crtbe alpha/t-alpha alpha/t-ieee\"\n \textra_parts=\"crtbegin.o crtend.o crtbeginS.o crtendS.o\"\n-\txmake_file=none\n \tgas=yes gnu_ld=yes\n \t;;\n \n@@ -646,7 +645,7 @@ hppa*-*-linux*)\n \ttm_file=\"${tm_file} pa/elf.h linux.h pa/pa-linux.h\"\n \ttmake_file=\"t-linux pa/t-linux\"\n \textra_parts=\"crtbegin.o crtend.o\"\n-\txmake_file=none\n+\txmake_file=\n \tgas=yes gnu_ld=yes\n \tif test x$enable_threads = xyes; then\n \t\tthread_file='posix'\n@@ -973,7 +972,6 @@ i[34567]86-ibm-aix*)\t\t# IBM PS/2 running AIX\n \t;;\n i[34567]86-ncr-sysv4*)\t\t# NCR 3000 - ix86 running system V.4\n \txm_defines=\"USG POSIX SMALL_ARG_MAX\"\n-\txmake_file=i386/x-ncr3000\n \tif test x$stabs = xyes -a x$gas = xyes\n \tthen\n \t\ttm_file=i386/sysv4gdb.h\n@@ -986,7 +984,6 @@ i[34567]86-ncr-sysv4*)\t\t# NCR 3000 - ix86 running system V.4\n i[34567]86-next-*)\n \ttm_file=i386/next.h\n \ttmake_file=i386/t-next\n-\txmake_file=i386/x-next\n \textra_objs=nextstep.o\n \textra_parts=\"crtbegin.o crtend.o\"\n \tif test x$enable_threads = xyes; then\n@@ -1008,15 +1005,13 @@ i[34567]86-sequent-bsd*) \t\t# 80386 from Sequent\n \t;;\n i[34567]86-sequent-ptx1*)\n \txm_defines=USG\n-\txmake_file=i386/x-sysv3\n \ttm_file=i386/seq-sysv3.h\n \ttmake_file=i386/t-crtstuff\n \textra_parts=\"crtbegin.o crtend.o\"\n \tinstall_headers_dir=install-headers-cpio\n \t;;\n i[34567]86-sequent-ptx2* | i[34567]86-sequent-sysv3*)\n \txm_defines=USG\n-\txmake_file=i386/x-sysv3\n \ttm_file=i386/seq2-sysv3.h\n \ttmake_file=i386/t-crtstuff\n \textra_parts=\"crtbegin.o crtend.o\"\n@@ -1098,14 +1093,6 @@ i[34567]86-*-coff*)\n \t;;\n i[34567]86-*-isc*)\t\t# 80386 running ISC system\n \txm_defines=USG\n-\tcase $machine in\n-\t  i[34567]86-*-isc[34]*)\n-\t    xmake_file=i386/x-isc3\n-\t    ;;\n-\t  *)\n-\t    xmake_file=i386/x-isc\n-\t    ;;\n-\tesac\n         if test x$gas = xyes -a x$stabs = xyes\n \tthen\n \t\ttm_file=i386/iscdbx.h\n@@ -1195,7 +1182,6 @@ i[34567]86-*-lynxos*)\n \t\ttm_file=i386/lynx-ng.h\n \tfi\n \ttmake_file=i386/t-i386bare\n-\txmake_file=x-lynx\n \t;;\n i[34567]86-*-mach*)\n \ttm_file=i386/mach.h\n@@ -1276,7 +1262,6 @@ i[34567]86-*-sco3.2v4*) \t# 80386 running SCO 3.2v4 system\n \t# truncate_target=yes\n \t;;\n i[34567]86-*-sco*)\t \t# 80386 running SCO system\n-\txmake_file=i386/x-sco\n \tinstall_headers_dir=install-headers-cpio\n         if test x$stabs = xyes\n \tthen\n@@ -1364,7 +1349,6 @@ i[34567]86-*-osf1*)\t\t# Intel 80386's running OSF/1 1.3+\n \t;;\n i[34567]86-*-sysv*)\t\t# Intel 80386's running system V\n \txm_defines=USG\n-\txmake_file=i386/x-sysv3\n \tif test x$gas = xyes\n \tthen\n \t\tif test x$stabs = xyes\n@@ -1388,7 +1372,6 @@ i386-*-vsta)\t\t\t# Intel 80386's running VSTa kernel\n \txm_file=i386/xm-vsta.h\n \ttm_file=i386/vsta.h\n \ttmake_file=i386/t-vsta\n-\txmake_file=i386/x-vsta\n \t;;\n i[34567]86-*-win32)\n \txm_defines=POSIX\n@@ -1497,7 +1480,6 @@ i860-*-sysv3*)\n i860-*-sysv4*)\n \ttm_file=\"${tm_file} svr4.h i860/sysv4.h\"\n \txm_defines=USG\n-\txmake_file=i860/x-sysv4\n \ttmake_file=t-svr4\n \textra_parts=\"crtbegin.o crtend.o\"\n \t;;\n@@ -1605,7 +1587,6 @@ m68000-convergent-sysv*)\n \t;;\n m68000-hp-bsd*)\t\t\t# HP 9000/200 running BSD\n \ttm_file=m68k/hp2bsd.h\n-\txmake_file=m68k/x-hp2bsd\n \tuse_collect2=yes\n \textra_headers=math-68881.h\n \t;;\n@@ -1668,7 +1649,6 @@ m68k-apple-aux*)\t\t# Apple Macintosh running A/UX\n \t;;\n m68k-apollo-*)\n \ttm_file=m68k/apollo68.h\n-\txmake_file=m68k/x-apollo68\n \tuse_collect2=yes\n \textra_headers=math-68881.h\n \tfloat_format=m68k\n@@ -1714,7 +1694,6 @@ m68k-motorola-sysv*)\n \txm_defines=USG\n \tif test x$gas = xyes\n \tthen\n-\t\txmake_file=m68k/x-mot3300-gas\n \t\tif test x$gnu_ld = xyes\n \t\tthen\n \t\t\ttmake_file=m68k/t-mot3300-gald\n@@ -1723,7 +1702,6 @@ m68k-motorola-sysv*)\n \t\t\tuse_collect2=yes\n \t\tfi\n \telse\n-\t\txmake_file=m68k/x-mot3300\n \t\tif test x$gnu_ld = xyes\n \t\tthen\n \t\t\ttmake_file=m68k/t-mot3300-gld\n@@ -1740,7 +1718,6 @@ m68k-motorola-sysv*)\n m68k-ncr-sysv*)\t\t\t# NCR Tower 32 SVR3\n \ttm_file=m68k/tower-as.h\n \txm_defines=USG\n-\txmake_file=m68k/x-tower\n \textra_parts=\"crtbegin.o crtend.o\"\n \textra_headers=math-68881.h\n \t;;\n@@ -1757,23 +1734,20 @@ m68k-tti-*)\n \t;;\n m68k-crds-unos*)\n \txm_defines=\"USG unos\"\n-\txmake_file=m68k/x-crds\n \ttm_file=m68k/crds.h\n \tuse_collect2=yes\n \textra_headers=math-68881.h\n \t;;\n m68k-cbm-sysv4*)\t\t# Commodore variant of V.4.\n \ttm_file=m68k/amix.h\n \txm_defines=USG\n-\txmake_file=m68k/x-amix\n \ttmake_file=t-svr4\n \textra_parts=\"crtbegin.o crtend.o\"\n \textra_headers=math-68881.h\n \tfloat_format=m68k\n \t;;\n m68k-ccur-rtu)\n \ttm_file=m68k/ccur-GAS.h\n-\txmake_file=m68k/x-ccur\n \textra_headers=math-68881.h\n \tuse_collect2=yes\n \tfloat_format=m68k\n@@ -1934,7 +1908,6 @@ m68k-*-lynxos*)\n \telse\n \t\ttm_file=m68k/lynx-ng.h\n \tfi\n-\txmake_file=x-lynx\n \ttmake_file=m68k/t-lynx\n \textra_headers=math-68881.h\n \tfloat_format=m68k\n@@ -2097,7 +2070,6 @@ m88k-*-sysv4*)\n \txm_defines=USG\n \ttm_file=m88k/sysv4.h\n \textra_parts=\"crtbegin.o crtend.o\"\n-\txmake_file=m88k/x-sysv4\n \ttmake_file=m88k/t-sysv4\n \t;;\n mcore-*-elf)\n@@ -2155,7 +2127,6 @@ mips-sni-sysv4)\n \t\ttm_file=mips/sni-svr4.h\n \tfi\n \txm_defines=USG\n-        xmake_file=mips/x-sni-svr4\n         tmake_file=mips/t-mips-gas\n         if test x$gnu_ld != xyes\n         then\n@@ -2256,7 +2227,6 @@ mips-dec-osf*)\t\t\t# Decstation running OSF/1 as shipped by DIGITAL\n \tif test x$stabs = xyes; then\n \t\ttm_file=\"${tm_file} dbx.h\"\n \tfi\n-\txmake_file=mips/x-dec-osf1\n \tif test x$gas = xyes\n \tthen\n \t\ttmake_file=mips/t-mips-gas\n@@ -2370,7 +2340,6 @@ mips-*-ultrix* | mips-dec-mach3)\t# Decstation.\n \tif test x$stabs = xyes; then\n \t\ttm_file=\"${tm_file} dbx.h\"\n \tfi\n-\txmake_file=mips/x-ultrix\n \tif test x$gas = xyes\n \tthen\n \t\ttmake_file=mips/t-mips-gas\n@@ -2662,7 +2631,6 @@ romp-*-aos*)\n \tuse_collect2=yes\n \t;;\n romp-*-mach*)\n-\txmake_file=romp/x-mach\n \tuse_collect2=yes\n \t;;\n romp-*-openbsd*)\n@@ -2677,7 +2645,6 @@ powerpc-*-beos*)\n \txm_defines=USG\n \txm_file=rs6000/xm-beos.h\n \ttmake_file=rs6000/t-beos\n-\txmake_file=rs6000/x-beos\n \t;;\n powerpc-*-darwin*)\n \txm_file=rs6000/xm-darwin.h\n@@ -2688,7 +2655,6 @@ powerpc-*-sysv*)\n \txm_defines=\"USG POSIX\"\n \textra_headers=ppc-asm.h\n \ttmake_file=\"rs6000/t-ppcos rs6000/t-ppccomm\"\n-\txmake_file=rs6000/x-sysv4\n \t;;\n powerpc-*-chorusos*)\n \txm_defines=USG\n@@ -2776,7 +2742,6 @@ powerpcle-*-sysv*)\n \ttm_file=\"${tm_file} svr4.h rs6000/sysv4.h rs6000/sysv4le.h\"\n \txm_defines=\"USG POSIX\"\n \ttmake_file=\"rs6000/t-ppcos rs6000/t-ppccomm\"\n-\txmake_file=rs6000/x-sysv4\n \textra_headers=ppc-asm.h\n \t;;\n powerpcle-*-elf*)\n@@ -2801,7 +2766,6 @@ powerpcle-*-solaris2*)\n \ttm_file=\"${tm_file} svr4.h rs6000/sysv4.h rs6000/sysv4le.h rs6000/sol2.h\"\n \txm_defines=\"USG POSIX\"\n \ttmake_file=\"rs6000/t-ppcos rs6000/t-ppccomm\"\n-\txmake_file=rs6000/x-sysv4\n \textra_headers=ppc-asm.h\n \t;;\n rs6000-ibm-aix3.[01]*)\n@@ -2859,13 +2823,11 @@ rs6000-bull-bosx)\n rs6000-*-mach*)\n \ttm_file=rs6000/mach.h\n \txm_defines=USG\n-\txmake_file=rs6000/x-mach\n \tuse_collect2=yes\n \t;;\n rs6000-*-lynxos*)\n \ttm_file=rs6000/lynx.h\n \ttmake_file=rs6000/t-rs6000\n-\txmake_file=rs6000/x-lynx\n \tuse_collect2=yes\n \t;;\n sh-*-elf*)\n@@ -2983,7 +2945,6 @@ sparc-*-lynxos*)\n \t\ttm_file=sparc/lynx-ng.h\n \tfi\n \ttmake_file=sparc/t-sunos41\n-\txmake_file=x-lynx\n \t;;\n sparc-*-rtemsaout*)\n \ttmake_file=\"sparc/t-sparcbare t-rtems\"\n@@ -3016,7 +2977,6 @@ sparcv9-*-solaris2*)\n \telse\n \t\ttmake_file=\"$tmake_file sparc/t-slibgcc-sld\"\n \tfi\n-\txmake_file=sparc/x-sysv4\n \textra_parts=\"crt1.o crti.o crtn.o gcrt1.o crtbegin.o crtend.o\"\n \tfloat_format=none\n \tif test x${enable_threads} = x ; then\n@@ -3042,7 +3002,6 @@ sparc-hal-solaris2*)\n \telse\n \t\ttmake_file=\"$tmake_file sparc/t-slibgcc-sld\"\n \tfi\n-        xmake_file=sparc/x-sysv4\n         extra_parts=\"crt1.o crti.o crtn.o gmon.o crtbegin.o crtend.o\"\n         case $machine in\n         *-*-solaris2.[0-4])\n@@ -3068,7 +3027,6 @@ sparc-*-solaris2*)\n \telse\n \t\ttmake_file=\"$tmake_file sparc/t-slibgcc-sld\"\n \tfi\n-\txmake_file=sparc/x-sysv4\n \textra_parts=\"crt1.o crti.o crtn.o gcrt1.o gmon.o crtbegin.o crtend.o\"\n # At the moment, 32-to-64 cross compilation doesn't work.\n #\tcase $machine in\n@@ -3126,14 +3084,12 @@ sparc-*-sysv4*)\n \ttm_file=sparc/sysv4.h\n \txm_defines=\"USG POSIX\"\n \ttmake_file=t-svr4\n-\txmake_file=sparc/x-sysv4\n \textra_parts=\"crtbegin.o crtend.o\"\n \t;;\n sparc-*-vxsim*)\n \txm_defines=\"USG POSIX\"\n \ttm_file=sparc/vxsim.h\n \ttmake_file=sparc/t-vxsparc\n-\txmake_file=sparc/x-sysv4\n \t;;\n sparclet-*-aout*)\n \ttm_file=\"sparc/splet.h libgloss.h\"\n@@ -3478,9 +3434,6 @@ else\n \t\tthen host_xm_file=$xm_file\n \t\tfi\n \t\thost_xm_defines=$xm_defines\n-\t\tif test x\"$xmake_file\" = x\n-\t\tthen xmake_file=$cpu_type/x-$cpu_type\n-\t\tfi\n \t\thost_xmake_file=\"$xmake_file\"\n \t\thost_truncate_target=$truncate_target\n \t\thost_extra_gcc_objs=$extra_gcc_objs"}, {"sha": "f671a0028f725ff84e32d9b67383d2898657d83d", "filename": "gcc/config/a29k/x-unix", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6d7afec45c2c8f03baaf0a8324f047095e5632b/gcc%2Fconfig%2Fa29k%2Fx-unix", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6d7afec45c2c8f03baaf0a8324f047095e5632b/gcc%2Fconfig%2Fa29k%2Fx-unix", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fa29k%2Fx-unix?ref=b6d7afec45c2c8f03baaf0a8324f047095e5632b", "patch": "@@ -1,2 +1,2 @@\n-# Needed for missing functions in Sym1.\n-CLIB=-liberty -lld\n+# Needed for collect2?\n+CLIB=-lld"}, {"sha": "7f0b16eb1688b9ac42991054effef9d82153c861", "filename": "gcc/config/arm/x-riscix", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6d7afec45c2c8f03baaf0a8324f047095e5632b/gcc%2Fconfig%2Farm%2Fx-riscix", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6d7afec45c2c8f03baaf0a8324f047095e5632b/gcc%2Fconfig%2Farm%2Fx-riscix", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fx-riscix?ref=b6d7afec45c2c8f03baaf0a8324f047095e5632b", "patch": "@@ -1,8 +1 @@\n-# Define new names for the getopt library, so that we don't have to statically\n-# link [un]protoize.  We have dirent.h not sys/dir.h, so define POSIX.\n-X_CFLAGS= -DPOSIX -Dopterr=gcc_opterr -Doptind=gcc_optind \\\n-\t -Dgetopt=gcc_getopt -Doptarg=gcc_optarg\n-# Compile in BSD mode.\n-OLDCC=/usr/ucb/cc\n-CC=$(OLDCC)\n FIXPROTO_DEFINES= -D_POSIX_SOURCE -D_XOPEN_C -D_BSD_C -D_XOPEN_SOURCE"}, {"sha": "8029ac5b91f48402155fce7ec6039db37fd15052", "filename": "gcc/config/convex/x-convex", "status": "removed", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/693c4145079227d051e2e588926a3016edc08643/gcc%2Fconfig%2Fconvex%2Fx-convex", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/693c4145079227d051e2e588926a3016edc08643/gcc%2Fconfig%2Fconvex%2Fx-convex", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fconvex%2Fx-convex?ref=693c4145079227d051e2e588926a3016edc08643", "patch": "@@ -1,5 +0,0 @@\n-# ld can make exe's c2-only if this lib is searched even though not loaded\n-CCLIBFLAGS = -tm c1\n-\n-# Use -pcc to avoid surprises.\n-CC = cc -pcc"}, {"sha": "30a458d87b4667b5ab8ad3301ecbc2fe5ade56a9", "filename": "gcc/config/elxsi/x-elxsi", "status": "removed", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/693c4145079227d051e2e588926a3016edc08643/gcc%2Fconfig%2Felxsi%2Fx-elxsi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/693c4145079227d051e2e588926a3016edc08643/gcc%2Fconfig%2Felxsi%2Fx-elxsi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Felxsi%2Fx-elxsi?ref=693c4145079227d051e2e588926a3016edc08643", "patch": "@@ -1,9 +0,0 @@\n-# Our make needs a little help...\n-MAKE=make\n-\n-# We don't support -g yet, so don't try and use it.\n-CFLAGS =\n-LIBGCC2_CFLAGS = -O2 $(GCC_CFLAGS)\n-\n-# Hide xmalloc so that it does not conflict with the one in libc.a, Ick!\n-X_CFLAGS = -Dxmalloc=my_xmalloc"}, {"sha": "8007ba8987ada871c659860f3b2322c4cfdb23ae", "filename": "gcc/config/i370/x-oe", "status": "modified", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6d7afec45c2c8f03baaf0a8324f047095e5632b/gcc%2Fconfig%2Fi370%2Fx-oe", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6d7afec45c2c8f03baaf0a8324f047095e5632b/gcc%2Fconfig%2Fi370%2Fx-oe", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi370%2Fx-oe?ref=b6d7afec45c2c8f03baaf0a8324f047095e5632b", "patch": "@@ -3,22 +3,4 @@\n #\n \n # Don't bother fixing up header files, they're wierd\n-\n STMP_FIXPROTO =\n-\n-# Set up to make using c89\n-\n-X_CFLAGS=-D_ALL_SOURCE\n-CC=c89\n-\n-# Explicitly use libiberty\n-\n-CLIB=-liberty\n-LDFLAGS=-L../libiberty\n-\n-# TAR Options\n-# Please note that OpenEdition confuses tar and pax, and \n-# thus uses the non-standard options 'xpf'\n-\n-TAROUTOPTS=xpf\n-"}, {"sha": "7d730837ab2940993b13266ea172daaf40d159ce", "filename": "gcc/config/i386/x-aix", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6d7afec45c2c8f03baaf0a8324f047095e5632b/gcc%2Fconfig%2Fi386%2Fx-aix", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6d7afec45c2c8f03baaf0a8324f047095e5632b/gcc%2Fconfig%2Fi386%2Fx-aix", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fx-aix?ref=b6d7afec45c2c8f03baaf0a8324f047095e5632b", "patch": "@@ -1,9 +1 @@\n-# If you are running out of memory while compiling gcc, with the standard\n-# /bin/cc uncomment MALLOCLIB line. That version of malloc is slower but\n-# has less overhead than the one in libc.\n-#MALLOCLIB = -lmalloc\n-\n-# Uncomment out the next line if you want to link with the shareable libc_s.\n-#CLIB_S = -lc_s\n-\n-CLIB = -lld $(MALLOCLIB) $(CLIB_S)\n+CLIB = -lld"}, {"sha": "5d07910d4352c6b8d6026308249152d22bc23d37", "filename": "gcc/config/i386/x-dgux", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6d7afec45c2c8f03baaf0a8324f047095e5632b/gcc%2Fconfig%2Fi386%2Fx-dgux", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6d7afec45c2c8f03baaf0a8324f047095e5632b/gcc%2Fconfig%2Fi386%2Fx-dgux", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fx-dgux?ref=b6d7afec45c2c8f03baaf0a8324f047095e5632b", "patch": "@@ -1,11 +1 @@\n-#\n-# host is ix86 running dgux\n-#\n-CC = /bin/gcc\n-X_CFLAGS = -O -mstandard -mlegend\n-BOOT_CFLAGS = -O2 -g -mstandard -mlegend $(CFLAGS)\n-CLIB = -lw32\n-RANLIB = true\n-USER_H = $(EXTRA_HEADERS) $(LANG_EXTRA_HEADERS)\n STMP_FIXPROTO = \n-"}, {"sha": "94af7c48f7e7944bc4672897adbf2f2ac79d367c", "filename": "gcc/config/i386/x-djgpp", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6d7afec45c2c8f03baaf0a8324f047095e5632b/gcc%2Fconfig%2Fi386%2Fx-djgpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6d7afec45c2c8f03baaf0a8324f047095e5632b/gcc%2Fconfig%2Fi386%2Fx-djgpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fx-djgpp?ref=b6d7afec45c2c8f03baaf0a8324f047095e5632b", "patch": "@@ -1,7 +1,2 @@\n # Location of DJGPP's header directory.\n SYSTEM_HEADER_DIR=$(DJDIR)/include\n-\n-# on DJGPP the 'ln -s' does not work correctly\n-LN = cp -p\n-LN_S = cp -p\n-"}, {"sha": "ea65ec888a323e43e62ad14b46668db4095d0653", "filename": "gcc/config/i386/x-isc", "status": "removed", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/693c4145079227d051e2e588926a3016edc08643/gcc%2Fconfig%2Fi386%2Fx-isc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/693c4145079227d051e2e588926a3016edc08643/gcc%2Fconfig%2Fi386%2Fx-isc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fx-isc?ref=693c4145079227d051e2e588926a3016edc08643", "patch": "@@ -1,3 +0,0 @@\n-CLIB = -lPW -lcposix\n-X_CFLAGS = -D_POSIX_SOURCE\n-ENQUIRE_LDFLAGS = -posix $(LDFLAGS)"}, {"sha": "527cca8132b6b5f3eb4bf6baa70d26fb733068e2", "filename": "gcc/config/i386/x-isc3", "status": "removed", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/693c4145079227d051e2e588926a3016edc08643/gcc%2Fconfig%2Fi386%2Fx-isc3", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/693c4145079227d051e2e588926a3016edc08643/gcc%2Fconfig%2Fi386%2Fx-isc3", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fx-isc3?ref=693c4145079227d051e2e588926a3016edc08643", "patch": "@@ -1,4 +0,0 @@\n-CLIB = -lPW\n-# One person said it needs -DPOSIX_JC, but daa@CERF.NET says no.\n-X_CFLAGS = -D_SYSV3 -Xp\n-ENQUIRE_LDFLAGS = $(LDFLAGS)"}, {"sha": "a18786ab36f97bbc8db7f131c3f7d511fd8614f8", "filename": "gcc/config/i386/x-ncr3000", "status": "removed", "additions": 0, "deletions": 27, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/693c4145079227d051e2e588926a3016edc08643/gcc%2Fconfig%2Fi386%2Fx-ncr3000", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/693c4145079227d051e2e588926a3016edc08643/gcc%2Fconfig%2Fi386%2Fx-ncr3000", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fx-ncr3000?ref=693c4145079227d051e2e588926a3016edc08643", "patch": "@@ -1,27 +0,0 @@\n-# Makefile additions for the NCR3000 as host system.\n-\n-# Using -O with the AT&T compiler fails, with a message about a missing\n-# /usr/ccs/lib/optim pass.  So override the default in Makefile.in\n-\n-CCLIBFLAGS=\n-\n-## Supposedly not needed now that xm-sysv4.h includes alloc.h for Metaware.\n-### NCR3000 ships with a MetaWare compiler installed as CC, which chokes and\n-### dies all over the place on GCC source.  However, the AT&T compiler,\n-### crusty as it is, can be used to bootstrap GCC.  It can be found in\n-### /usr/ccs/ATT/cc.  It is also used to compile the things that should\n-### not be compiled with GCC.\n-##\n-##CC = /usr/ccs/ATT/cc\n-##OLDCC = /usr/ccs/ATT/cc\n-\n-# The rest is just x-i386v4.\n-\n-# We used to build all stages *without* shared libraries because that may make\n-# debugging the compiler easier (until there is a GDB which supports\n-# both Dwarf *and* svr4 shared libraries).\n-\n-# But james@bigtex.cactus.org says that redefining GCC_CFLAGS causes trouble,\n-# and that it is easy enough to debug using shared libraries.\n-# CCLIBFLAGS=-Bstatic -dn -g\n-# GCC_CFLAGS=-static -g -O2 -B./"}, {"sha": "a16b918e2d37f76317980de38d12112bd1b5165a", "filename": "gcc/config/i386/x-next", "status": "removed", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/693c4145079227d051e2e588926a3016edc08643/gcc%2Fconfig%2Fi386%2Fx-next", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/693c4145079227d051e2e588926a3016edc08643/gcc%2Fconfig%2Fi386%2Fx-next", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fx-next?ref=693c4145079227d051e2e588926a3016edc08643", "patch": "@@ -1,3 +0,0 @@\n-# Make assignments for compiling on NeXT with their compiler version.\n-CC=cc -traditional-cpp\n-OLDCC=cc -traditional-cpp"}, {"sha": "f9ee98c801b71e6e7597a4cd09ee7a6b19cf4538", "filename": "gcc/config/i386/x-osf1elf", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6d7afec45c2c8f03baaf0a8324f047095e5632b/gcc%2Fconfig%2Fi386%2Fx-osf1elf", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6d7afec45c2c8f03baaf0a8324f047095e5632b/gcc%2Fconfig%2Fi386%2Fx-osf1elf", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fx-osf1elf?ref=b6d7afec45c2c8f03baaf0a8324f047095e5632b", "patch": "@@ -1,8 +1 @@\n-# Defaults for OSF/1 1.3+\n-CC\t\t= $(OLDCC)\n CLIB\t\t= -lld\n-INSTALL\t\t= installbsd -c\n-OLDCC\t\t= /usr/ccs/gcc/gcc\n-X_CFLAGS\t= -static\n-\n-# FIXPROTO_DEFINES = -D_XOPEN_SOURCE"}, {"sha": "f9ee98c801b71e6e7597a4cd09ee7a6b19cf4538", "filename": "gcc/config/i386/x-osfrose", "status": "modified", "additions": 0, "deletions": 26, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6d7afec45c2c8f03baaf0a8324f047095e5632b/gcc%2Fconfig%2Fi386%2Fx-osfrose", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6d7afec45c2c8f03baaf0a8324f047095e5632b/gcc%2Fconfig%2Fi386%2Fx-osfrose", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fx-osfrose?ref=b6d7afec45c2c8f03baaf0a8324f047095e5632b", "patch": "@@ -1,27 +1 @@\n-# Define CC and OLDCC as the same, so that the tests:\n-#\tif [ x\"$(OLDCC)\" = x\"$(CC)\" ] ...\n-#\n-# will succeed (if OLDCC != CC, it is assumed that GCC is\n-# being used in secondary stage builds).\n-\n-BUILD\t\t=\n-CC\t\t= $(OLDCC)\n CLIB\t\t= -lld\n-X_CFLAGS\t= $(DEB_OPT) $(MSTATS) $(X_DEFINES)\n-X_CFLAGS_NODEBUG = $(NO_DEBUG) $(MSTATS) $(OPT) $(PROFILE) $(X_DEFINES) $(XCFLAGS)\n-XCFLAGS\t\t= $(SHLIB)\n-CPP_ABORT\t= # -Dabort=fancy_abort\n-CPPFLAGS\t= $(CPP_ABORT) $(SYSTEM_INCLUDES)\n-DEB_OPT\t\t= $(OPT) $(DEBUG) $(PROFILE)\n-DEBUG\t\t= \n-DEBUG_COLLECT\t= # -DDEBUG\n-CCLIBFLAGS\t= -O -DNO_HALF_PIC\n-GCC_CFLAGS\t= $(INTERNAL_CFLAGS) $(X_CFLAGS) $(T_CFLAGS) $(CFLAGS) -B./ -DPOSIX -DNO_HALF_PIC\n-LDFLAGS\t\t=\n-MSTATS\t\t= # -mstats\n-OLDCC\t\t= /usr/ccs/gcc/gcc\n-OPT\t\t= -O\n-PROFILE\t\t=\n-SHLIB\t\t= -pic-none\n-SYSTEM_INCLUDES\t= # -I${BUILD}/usr/include\n-X_DEFINES\t= -Dvfork=fork"}, {"sha": "f7f14e9f7c09bfad215ff9a7e5a57325b1676255", "filename": "gcc/config/i386/x-sco", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/693c4145079227d051e2e588926a3016edc08643/gcc%2Fconfig%2Fi386%2Fx-sco", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/693c4145079227d051e2e588926a3016edc08643/gcc%2Fconfig%2Fi386%2Fx-sco", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fx-sco?ref=693c4145079227d051e2e588926a3016edc08643", "patch": "@@ -1,7 +0,0 @@\n-RANLIB = :\n-RANLIB_TEST = false\n-CC = rcc $(RCCFLAGS)\n-OLDCC = rcc $(RCCFLAGS)\n-RCCFLAGS = -Dunix -Di386 -DM_UNIX -DM_I386 -DNULL=0\n-CCLIBFLAGS =\n-CLIB = -lmalloc -lPW"}, {"sha": "ce50fe976df4d1d6b09d21c4fcea3860466d4f05", "filename": "gcc/config/i386/x-sco4", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6d7afec45c2c8f03baaf0a8324f047095e5632b/gcc%2Fconfig%2Fi386%2Fx-sco4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6d7afec45c2c8f03baaf0a8324f047095e5632b/gcc%2Fconfig%2Fi386%2Fx-sco4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fx-sco4?ref=b6d7afec45c2c8f03baaf0a8324f047095e5632b", "patch": "@@ -1,10 +1,2 @@\n-RANLIB = :\n-RANLIB_TEST = false\n-CC = rcc $(RCCFLAGS)\n-OLDCC = rcc $(RCCFLAGS)\n-RCCFLAGS = -Dunix -Di386 -DM_UNIX -DM_I386 -DNULL=0\n-CCLIBFLAGS =\n-CLIB = -lmalloc -lPW\n-\n # See all the declarations.\n FIXPROTO_DEFINES = -D_XOPEN_SOURCE"}, {"sha": "bc3d98b51218a7da95feed02d16a84cd5ca81b13", "filename": "gcc/config/i386/x-sco5", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6d7afec45c2c8f03baaf0a8324f047095e5632b/gcc%2Fconfig%2Fi386%2Fx-sco5", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6d7afec45c2c8f03baaf0a8324f047095e5632b/gcc%2Fconfig%2Fi386%2Fx-sco5", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fx-sco5?ref=b6d7afec45c2c8f03baaf0a8324f047095e5632b", "patch": "@@ -1,8 +1,2 @@\n-RANLIB = :\n-RANLIB_TEST = false\n-CC = cc\n-OLDCC = cc\n-CCLIBFLAGS =\n-\n # See all the declarations.\n FIXPROTO_DEFINES = -D_XOPEN_SOURCE -D_POSIX_C_SOURCE=2"}, {"sha": "a1391df851c98f9188313443644de2384b868317", "filename": "gcc/config/i386/x-sysv3", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/693c4145079227d051e2e588926a3016edc08643/gcc%2Fconfig%2Fi386%2Fx-sysv3", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/693c4145079227d051e2e588926a3016edc08643/gcc%2Fconfig%2Fi386%2Fx-sysv3", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fx-sysv3?ref=693c4145079227d051e2e588926a3016edc08643", "patch": "@@ -1 +0,0 @@\n-CLIB=-lPW"}, {"sha": "e2279a4b59a7a864fd0d5b28b85aca949f2cc59e", "filename": "gcc/config/i386/x-vsta", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/693c4145079227d051e2e588926a3016edc08643/gcc%2Fconfig%2Fi386%2Fx-vsta", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/693c4145079227d051e2e588926a3016edc08643/gcc%2Fconfig%2Fi386%2Fx-vsta", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fx-vsta?ref=693c4145079227d051e2e588926a3016edc08643", "patch": "@@ -1 +0,0 @@\n-CLIB=-lm"}, {"sha": "cb11204c2755b0f90f278ace03bd5797a529f272", "filename": "gcc/config/i860/fx2800.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6d7afec45c2c8f03baaf0a8324f047095e5632b/gcc%2Fconfig%2Fi860%2Ffx2800.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6d7afec45c2c8f03baaf0a8324f047095e5632b/gcc%2Fconfig%2Fi860%2Ffx2800.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi860%2Ffx2800.h?ref=b6d7afec45c2c8f03baaf0a8324f047095e5632b", "patch": "@@ -289,8 +289,6 @@ Boston, MA 02111-1307, USA.  */\n \n /* Overrides for svr4.h begin here */\n \n-#undef SVR4\n-\n #undef SWITCH_TAKES_ARG\n #undef WORD_SWITCH_TAKES_ARG\n "}, {"sha": "37b79ddaa26f7fb3ea75a13272a0d833348b84a6", "filename": "gcc/config/i860/x-sysv4", "status": "removed", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/693c4145079227d051e2e588926a3016edc08643/gcc%2Fconfig%2Fi860%2Fx-sysv4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/693c4145079227d051e2e588926a3016edc08643/gcc%2Fconfig%2Fi860%2Fx-sysv4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi860%2Fx-sysv4?ref=693c4145079227d051e2e588926a3016edc08643", "patch": "@@ -1,11 +0,0 @@\n-# We build all stages *without* shared libraries because that may make\n-# debugging the compiler easier (until there is a GDB which supports\n-# both Dwarf *and* svr4 shared libraries).\n-\n-# Note that the native C compiler for the svr4 reference port on the\n-# i860 recognizes a special -gg option.  Using that option causes *full*\n-# Dwarf debugging information to be generated, whereas using only -g\n-# causes only limited Dwarf debugging information to be generated.\n-# (This is an undocumented feature of the native svr4 C compiler.)\n-\n-CCLIBFLAGS=-Bstatic -dn -gg"}, {"sha": "6ec4f638889603963de2dd475b19d011df0bb5aa", "filename": "gcc/config/m68k/x-amix", "status": "removed", "additions": 0, "deletions": 27, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/693c4145079227d051e2e588926a3016edc08643/gcc%2Fconfig%2Fm68k%2Fx-amix", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/693c4145079227d051e2e588926a3016edc08643/gcc%2Fconfig%2Fm68k%2Fx-amix", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fx-amix?ref=693c4145079227d051e2e588926a3016edc08643", "patch": "@@ -1,27 +0,0 @@\n-# Makefile configuration for Commodore Amiga running SVR4.\n-# (configure amiga-amix)\n-\n-# The Amiga ships with gcc installed, so use it as the default CC.\n-\n-CC = /usr/public/bin/gcc\n-\n-# The AT&T compiler is still available in /usr/ccs/bin/cc and should\n-# be used to compile the things that should not be compiled with gcc.\n-\n-OLDCC = /usr/ccs/bin/cc\n-\n-# Link the executables with -ansi to get ANSI floating point ranges.\n-# Otherwise the values returned on overflow or underflow will be wrong.\n-# NOTE: some early releases of Amiga Unix contained a bug in ptod.o\n-# that prevents the correct values being returned from strtod/atof, even\n-# when linked with -ansi.  Sometimes -static will fix this since at least\n-# one version had a fixed copy in the static libc.a.\n-\n-LDFLAGS = -ansi\n-\n-# The manual pages go in /usr/man/1l (section 1, local) without any filename\n-# extension.  The man command will automatically create the /usr/catman/1l\n-# entry.\n-\n-mandir = /usr/man/1l\n-manext ="}, {"sha": "b1bfa252c990155df8930e56378153a8277239d0", "filename": "gcc/config/m68k/x-apollo68", "status": "removed", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/693c4145079227d051e2e588926a3016edc08643/gcc%2Fconfig%2Fm68k%2Fx-apollo68", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/693c4145079227d051e2e588926a3016edc08643/gcc%2Fconfig%2Fm68k%2Fx-apollo68", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fx-apollo68?ref=693c4145079227d051e2e588926a3016edc08643", "patch": "@@ -1,12 +0,0 @@\n-# x-apollo68 -- 680x0 based Apollos as host system\n-\n-# vasta@apollo.com says this is how to compile on an Apollo (SR10.x).\n-# Use a Berkeley environment.\n-CC=cc -g -A nansi -A cpu,3000 -A runtype,bsd4.3 -A systype,any\n-OLDCC=cc -g -A nansi -A cpu,3000 -A runtype,bsd4.3 -A systype,any\n-\n-# This used to redefine CFLAGS and LIBGCC2_CFLAGS to eliminate the unsupported\n-# -g flag from both macros.  This gives an undebuggable stage1 compiler which\n-# is bad, and it also does the wrong thing if we are cross compiling to a\n-# target which does support debugging.  There is currently no way to avoid\n-# the -g option that doesn't break something else."}, {"sha": "3b0cad54b1d5d1b59b00dbd2adb45f351221d548", "filename": "gcc/config/m68k/x-ccur", "status": "removed", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/693c4145079227d051e2e588926a3016edc08643/gcc%2Fconfig%2Fm68k%2Fx-ccur", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/693c4145079227d051e2e588926a3016edc08643/gcc%2Fconfig%2Fm68k%2Fx-ccur", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fx-ccur?ref=693c4145079227d051e2e588926a3016edc08643", "patch": "@@ -1,3 +0,0 @@\n-# Specify the jobs library when building in the ATT universe. \n-CLIB = -ljobs\n-X_CFLAGS = -O0 -Dregister="}, {"sha": "a6f57c2880da9eee56e1b02a8c6e45dd0616b8b5", "filename": "gcc/config/m68k/x-crds", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/693c4145079227d051e2e588926a3016edc08643/gcc%2Fconfig%2Fm68k%2Fx-crds", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/693c4145079227d051e2e588926a3016edc08643/gcc%2Fconfig%2Fm68k%2Fx-crds", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fx-crds?ref=693c4145079227d051e2e588926a3016edc08643", "patch": "@@ -1 +0,0 @@\n-CC = cc -Wx,-X23"}, {"sha": "ec45bd8765353edf60661755844496a7846356eb", "filename": "gcc/config/m68k/x-dpx2", "status": "modified", "additions": 1, "deletions": 11, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6d7afec45c2c8f03baaf0a8324f047095e5632b/gcc%2Fconfig%2Fm68k%2Fx-dpx2", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6d7afec45c2c8f03baaf0a8324f047095e5632b/gcc%2Fconfig%2Fm68k%2Fx-dpx2", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fx-dpx2?ref=b6d7afec45c2c8f03baaf0a8324f047095e5632b", "patch": "@@ -1,11 +1 @@\n-# be sure not to confuse ./as with /bin/as\n-AS=`if [ x$(OLDCC) = x$(CC) ] ; then echo /bin/as; else echo $(GAS); fi`\n-GAS = gas\n-#\n-# as of gcc-2.2.1 gcc -g produces too many .stabd's for /bin/ld\n-# to link cc1plus, so use -g with /bin/cc, but -O with gcc\n-CFLAGS=`if [ x$(OLDCC) = x$(CC) ] ; then echo -g; else echo -O; fi`\n-#\n-CLIB=-lmalloc -lld -lm\n-# tell CC whether we are a 200 or 300\n-X_CFLAGS=-D_POSIX_SOURCE -D_XOPEN_SOURCE -D_BULL_SOURCE -D__DPX2__ `if [ -d /makesys/kernel/cf/ncl_mr ]; then echo -Dncl_mr=1; else echo -Dncl_el; fi`\n+CLIB=-lld"}, {"sha": "7dd651c96b69a754a6dd972b1eaa709058d6af94", "filename": "gcc/config/m68k/x-hp2bsd", "status": "removed", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/693c4145079227d051e2e588926a3016edc08643/gcc%2Fconfig%2Fm68k%2Fx-hp2bsd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/693c4145079227d051e2e588926a3016edc08643/gcc%2Fconfig%2Fm68k%2Fx-hp2bsd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fx-hp2bsd?ref=693c4145079227d051e2e588926a3016edc08643", "patch": "@@ -1,4 +0,0 @@\n-# Make assignments for compilation for hp200 running 4.3bsd\n-CC=gcc\n-OLDCC=oldcc\n-# You must have a previous version of gcc for bootstrapping"}, {"sha": "d3bbb66f229b56b2d763e27e8afd8e1986625160", "filename": "gcc/config/m68k/x-hp320", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6d7afec45c2c8f03baaf0a8324f047095e5632b/gcc%2Fconfig%2Fm68k%2Fx-hp320", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6d7afec45c2c8f03baaf0a8324f047095e5632b/gcc%2Fconfig%2Fm68k%2Fx-hp320", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fx-hp320?ref=b6d7afec45c2c8f03baaf0a8324f047095e5632b", "patch": "@@ -1,12 +1,2 @@\n-# Make assignments for compilation on HPUX with their C compiler.\n-CC=cc -Wc,-Nw2000 -Wc,-Ns2000 -Wc,-Ne700 -Wc,-Np300\n-OLDCC=cc -Wc,-Nw2000 -Wc,-Ns2000 -Wc,-Ne700 -Wc,-Np300\n-\n-# For CCLIBFLAGS you might want to specify the switch that\n-# forces only 68000 instructions to be used.\n-\n-# Version 5 of HPUX had a compiler bug that made it crash with -g.\n-# You must set CFLAGS to empty on version 5.\n-\n # So putenv and other functions get seen by fixproto.\n FIXPROTO_DEFINES = -D_HPUX_SOURCE"}, {"sha": "d3bbb66f229b56b2d763e27e8afd8e1986625160", "filename": "gcc/config/m68k/x-hp320g", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6d7afec45c2c8f03baaf0a8324f047095e5632b/gcc%2Fconfig%2Fm68k%2Fx-hp320g", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6d7afec45c2c8f03baaf0a8324f047095e5632b/gcc%2Fconfig%2Fm68k%2Fx-hp320g", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fx-hp320g?ref=b6d7afec45c2c8f03baaf0a8324f047095e5632b", "patch": "@@ -1,14 +1,2 @@\n-# Make assignments for compilation on HPUX with their C compiler.\n-CC=cc -Wc,-Nw2000 -Wc,-Ns2000 -Wc,-Ne700 -Wc,-Np300\n-OLDCC=cc -Wc,-Nw2000 -Wc,-Ns2000 -Wc,-Ne700 -Wc,-Np300\n-\n-# For CCLIBFLAGS you might want to specify the switch that\n-# forces only 68000 instructions to be used.\n-\n-X_CFLAGS= -I../hp-include\n-\n-# Version 5 of HPUX had a compiler bug that made it crash with -g.\n-# You must set CFLAGS to empty on version 5.\n-\n # So putenv and other functions get seen by fixproto.\n FIXPROTO_DEFINES = -D_HPUX_SOURCE"}, {"sha": "d13818f96b0a861099508082f8df8a943ddcf4d3", "filename": "gcc/config/m68k/x-mot3300", "status": "removed", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/693c4145079227d051e2e588926a3016edc08643/gcc%2Fconfig%2Fm68k%2Fx-mot3300", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/693c4145079227d051e2e588926a3016edc08643/gcc%2Fconfig%2Fm68k%2Fx-mot3300", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fx-mot3300?ref=693c4145079227d051e2e588926a3016edc08643", "patch": "@@ -1,15 +0,0 @@\n-# This disables the long/short jump optimization.\n-# I use sysV68 R3V7.1 RM04 (phdm@info.ucl.ac.be)\n-# Since ss-950318, with jump optimization enabled, \"as\" issues a warning\n-# when assembling combine.s :\n-#   aline nnnnn : Warning: Table overflow: some optimizations lost (SDIs)\n-# but later \"/bin/ld\" complains with\n-#   ld: relocation entry found for non-relocatable symbol in combine.o\n-# and the produced \"cc1\" fails with SIGSEGV\n-# and \"/usr/local/bin/ld\" merely fails with\n-#   collect2: ld terminated with signal 11, core dumped\n-# Another possible fix would be to split combine.c.\n-# Since ss-961013, the same happens for expr.c compiled by gcc, but not by cc;\n-# and for cp/decl.c; aren't those files too big ?\n-# With egcs-1.1.2, this also happens for f/expr.o and f/stb.o\n-XCFLAGS=`case $@ in combine.o|expr.o|decl.o|stb.o|cse.o) echo -Wa,-j;;esac`"}, {"sha": "90852be5e44b14783185ad13e623a20e8562e280", "filename": "gcc/config/m68k/x-mot3300-gas", "status": "removed", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/693c4145079227d051e2e588926a3016edc08643/gcc%2Fconfig%2Fm68k%2Fx-mot3300-gas", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/693c4145079227d051e2e588926a3016edc08643/gcc%2Fconfig%2Fm68k%2Fx-mot3300-gas", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fx-mot3300-gas?ref=693c4145079227d051e2e588926a3016edc08643", "patch": "@@ -1,10 +0,0 @@\n-# This disables the long/short jump optimization.\n-# I use sysV68 R3V7.1 RM04 (phdm@info.ucl.ac.be)\n-# Since ss-950318, with jump optimization enabled, \"as\" issues a warning\n-# when assembling combine.s :\n-#   aline nnnnn : Warning: Table overflow: some optimizations lost (SDIs)\n-# but later \"ld\" complains with\n-#   ld: relocation entry found for non-relocatable symbol in combine.o\n-# and the produced \"cc1\" fails with SIGSEGV\n-# Another possible fix would be to split combine.c.\n-XCFLAGS=`if [ x$@ = xcombine.o -a \"${CC}\" = \"${OLDCC}\" ]; then echo -Wa,-j; fi`"}, {"sha": "7055d74af62e491344cc05e0080209c12914def5", "filename": "gcc/config/m68k/x-next", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6d7afec45c2c8f03baaf0a8324f047095e5632b/gcc%2Fconfig%2Fm68k%2Fx-next", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6d7afec45c2c8f03baaf0a8324f047095e5632b/gcc%2Fconfig%2Fm68k%2Fx-next", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fx-next?ref=b6d7afec45c2c8f03baaf0a8324f047095e5632b", "patch": "@@ -1,7 +1,3 @@\n-# Make assignments for compiling on NeXT with their compiler version.\n-CC=cc -traditional-cpp\n-OLDCC=CC -traditional-cpp\n-\n # Specify other dirs of system header files to be fixed.\n OTHER_FIXINCLUDES_DIRS= /LocalDeveloper/Headers\n "}, {"sha": "995e72b9badb6fe50fbc2a523b53e878da2da743", "filename": "gcc/config/m68k/x-tower", "status": "removed", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/693c4145079227d051e2e588926a3016edc08643/gcc%2Fconfig%2Fm68k%2Fx-tower", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/693c4145079227d051e2e588926a3016edc08643/gcc%2Fconfig%2Fm68k%2Fx-tower", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fx-tower?ref=693c4145079227d051e2e588926a3016edc08643", "patch": "@@ -1,9 +0,0 @@\n-# On the NCR Tower 32 running SVR3, says ra@intsys.no :\n-# Do *not* enable optimization in CFLAGS when using the native cc, because:\n-# a) The optimizer seems to loop when invoked with -O2.\n-# b) The -O1 level does stack/frame pointer optimizations that make the\n-#    assembler alloca in libPW.a fail, and the C alloca eats *lots* of memory.\n-# c) gcc will eventually be recompiled with itself, so all this doesn't matter.\n-X_CFLAGS = -O0\n-CCLIBFLAGS = -O2\n-CLIB = -lmalloc -lPW"}, {"sha": "5d07910d4352c6b8d6026308249152d22bc23d37", "filename": "gcc/config/m88k/x-dgux", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6d7afec45c2c8f03baaf0a8324f047095e5632b/gcc%2Fconfig%2Fm88k%2Fx-dgux", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6d7afec45c2c8f03baaf0a8324f047095e5632b/gcc%2Fconfig%2Fm88k%2Fx-dgux", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm88k%2Fx-dgux?ref=b6d7afec45c2c8f03baaf0a8324f047095e5632b", "patch": "@@ -1,6 +1 @@\n-CC = gcc\n-BISONFLAGS = -l\n-USER_H =  $(EXTRA_HEADERS) $(LANG_EXTRA_HEADERS)\n-\n STMP_FIXPROTO = \n-X_CFLAGS = -O -mstandard -mlegend"}, {"sha": "9788d971a4680ed2da10058dc1d5efec707f435b", "filename": "gcc/config/m88k/x-dolph", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6d7afec45c2c8f03baaf0a8324f047095e5632b/gcc%2Fconfig%2Fm88k%2Fx-dolph", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6d7afec45c2c8f03baaf0a8324f047095e5632b/gcc%2Fconfig%2Fm88k%2Fx-dolph", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm88k%2Fx-dolph?ref=b6d7afec45c2c8f03baaf0a8324f047095e5632b", "patch": "@@ -5,9 +5,3 @@ EXTRA_PARTS=crtbegin.o crtend.o gcc.ld\n \n gcc.ld: $(srcdir)/config/m88k/dolphin.ld\n \trm -f gcc.ld; cp $(srcdir)/config/m88k/dolphin.ld gcc.ld\n-\n-# Under DolphinOS 3.8.alfa, /bin/cc defines __GNUC__, but not __m88k__, \n-# causing gdstarg.h to fail. Defining __m88k__ does probably not hurt on\n-# DolphinOS 3.6.\n-\n-X_CFLAGS =-D__m88k__"}, {"sha": "e2b79d0e633639b922e827569ada4914aa6ea455", "filename": "gcc/config/m88k/x-sysv4", "status": "removed", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/693c4145079227d051e2e588926a3016edc08643/gcc%2Fconfig%2Fm88k%2Fx-sysv4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/693c4145079227d051e2e588926a3016edc08643/gcc%2Fconfig%2Fm88k%2Fx-sysv4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm88k%2Fx-sysv4?ref=693c4145079227d051e2e588926a3016edc08643", "patch": "@@ -1,6 +0,0 @@\n-# Problems in early version of the assembler have been fixed (-DNO_BUGS).\n-# There are peculiar problems with the include files that require __STDC__\n-# to be defined as 0.  This results in sigset_t being defined which otherwise\n-# results in a problem when <wait.h> includes <siginfo.h>.\n-\n-X_CFLAGS = -DNO_BUGS -D__STDC__=0"}, {"sha": "8e262eafe1cde1f61af83a3fee5227cae779ae7e", "filename": "gcc/config/m88k/x-tekXD88", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6d7afec45c2c8f03baaf0a8324f047095e5632b/gcc%2Fconfig%2Fm88k%2Fx-tekXD88", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6d7afec45c2c8f03baaf0a8324f047095e5632b/gcc%2Fconfig%2Fm88k%2Fx-tekXD88", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm88k%2Fx-tekXD88?ref=b6d7afec45c2c8f03baaf0a8324f047095e5632b", "patch": "@@ -3,7 +3,3 @@ EXTRA_PARTS=crtbegin.o crtend.o gcc.ld\n \n gcc.ld: $(srcdir)/config/m88k/tekXD88.ld\n \trm -f gcc.ld; cp $(srcdir)/config/m88k/tekXD88.ld ./gcc.ld\n-\n-# rc is cleaner, but the ar program sometimes crashes.\n-# This is a workaround.\n-AR_FLAGS=qc"}, {"sha": "6e46f0eafd504592f7055524879c645f0f5c5b14", "filename": "gcc/config/mips/x-dec-osf1", "status": "removed", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/693c4145079227d051e2e588926a3016edc08643/gcc%2Fconfig%2Fmips%2Fx-dec-osf1", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/693c4145079227d051e2e588926a3016edc08643/gcc%2Fconfig%2Fmips%2Fx-dec-osf1", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fx-dec-osf1?ref=693c4145079227d051e2e588926a3016edc08643", "patch": "@@ -1,17 +0,0 @@\n-# Define CC and OLDCC as the same, so that the tests:\n-#\tif [ x\"$(OLDCC)\" = x\"$(CC)\" ] ...\n-#\n-# will succeed (if OLDCC != CC, it is assumed that GCC is\n-# being used in secondary stage builds).  We need to pass\n-# the -Wf,-XNg1500 option so the compiler can compile the\n-# G++ file cp-parse.c.  Otherwise it complains about\n-# too many case statements.  -Olimit is so the user\n-# can use -O2.  Down with fixed size tables!\n-\n-CC\t\t= $(OLDCC)\n-OPT\t\t= -O1\n-OLDCC\t\t= cc -Wf,-XNg1500 -Olimit 3000 $(OPT)\n-\n-# The bison output files are machine-indep,\n-# so different flags for a particular machine are not useful.\n-#BISONFLAGS\t= -l"}, {"sha": "fbe8afc00520985b3cec1952a0ac4b3370a04f81", "filename": "gcc/config/mips/x-iris", "status": "modified", "additions": 1, "deletions": 23, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6d7afec45c2c8f03baaf0a8324f047095e5632b/gcc%2Fconfig%2Fmips%2Fx-iris", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6d7afec45c2c8f03baaf0a8324f047095e5632b/gcc%2Fconfig%2Fmips%2Fx-iris", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fx-iris?ref=b6d7afec45c2c8f03baaf0a8324f047095e5632b", "patch": "@@ -1,27 +1,5 @@\n-# Define CC and OLDCC as the same, so that the tests:\n-#\tif [ x\"$(OLDCC)\" = x\"$(CC)\" ] ...\n-#\n-# will succeed (if OLDCC != CC, it is assumed that GCC is\n-# being used in secondary stage builds).  We need to pass\n-# the -Wf,-XNg1500 option so the compiler can compile the\n-# G++ file cp-parse.c.  Otherwise it complains about\n-# too many case statements.  -Olimit is so the user\n-# can use -O2.  Down with fixed size tables!\n-# The -cckr is to turn off strict ANSI checking.\n-\n-# These definitions are commented out because they cause trouble with\n-# autoconf.  It is believed that they aren't needed anymore.\n-#CC\t\t= $(OLDCC)\n-#OPT\t\t= -O1\n-#OLDCC\t\t= cc -Wf,-XNh2000,-XNg1500 -Olimit 3000 -cckr $(OPT)\n-\n-# The bison output files are machine-indep,\n-# so different flags for a particular machine are not useful.\n-#BISONFLAGS\t= -l\n-\n # -lmld is so we can link collect2 running native.\n-# -lmalloc is supposed to be faster than the normal malloc\n-CLIB\t\t= -lmld -lmalloc\n+CLIB\t\t= -lmld\n \n # Find all of the declarations from the header files\n FIXPROTO_DEFINES= -D__EXTENSIONS__ -D_SGI_SOURCE -D_LANGUAGE_C_PLUS_PLUS"}, {"sha": "63e57771a0bce012ad493558c61c9bb6796873a2", "filename": "gcc/config/mips/x-iris3", "status": "modified", "additions": 1, "deletions": 25, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6d7afec45c2c8f03baaf0a8324f047095e5632b/gcc%2Fconfig%2Fmips%2Fx-iris3", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6d7afec45c2c8f03baaf0a8324f047095e5632b/gcc%2Fconfig%2Fmips%2Fx-iris3", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fx-iris3?ref=b6d7afec45c2c8f03baaf0a8324f047095e5632b", "patch": "@@ -1,27 +1,3 @@\n-# Define CC and OLDCC as the same, so that the tests:\n-#\tif [ x\"$(OLDCC)\" = x\"$(CC)\" ] ...\n-#\n-# will succeed (if OLDCC != CC, it is assumed that GCC is\n-# being used in secondary stage builds).  We need to pass\n-# the -Wf,-XNg1500 option so the compiler can compile the\n-# G++ file cp-parse.c.  Otherwise it complains about\n-# too many case statements.  -Olimit is so the user\n-# can use -O2.  Down with fixed size tables!\n-\n-# In at least one version of Irix, v3.3.2, the compiler does not accept\n-# the -cckr option, so, lets try without it for all versions of Irix 3.x.\n-# The -cckr is to turn off strict ANSI checking.\n-\n-# These definitions are commented out because they cause trouble with\n-# autoconf.  It is believed that they aren't needed anymore.\n-#CC\t\t= $(OLDCC)\n-#OPT\t\t= -O1\n-#OLDCC\t\t= cc -Wf,-XNh2000,-XNg1500 -Olimit 3000 $(OPT)\n-\n-# The bison output files are machine-indep,\n-# so different flags for a particular machine are not useful.\n-#BISONFLAGS\t= -l\n-\n # -lmld is so we can link collect2 running native.\n # -lmalloc is supposed to be faster than the normal malloc\n-CLIB\t\t= -lmld -lmalloc\n+CLIB\t\t= -lmld"}, {"sha": "7f0ec53494e80d8b860cfdb1b4f930cfbd947e4f", "filename": "gcc/config/mips/x-mips", "status": "modified", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6d7afec45c2c8f03baaf0a8324f047095e5632b/gcc%2Fconfig%2Fmips%2Fx-mips", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6d7afec45c2c8f03baaf0a8324f047095e5632b/gcc%2Fconfig%2Fmips%2Fx-mips", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fx-mips?ref=b6d7afec45c2c8f03baaf0a8324f047095e5632b", "patch": "@@ -1,20 +1,2 @@\n-# Define CC and OLDCC as the same, so that the tests:\n-#\tif [ x\"$(OLDCC)\" = x\"$(CC)\" ] ...\n-#\n-# will succeed (if OLDCC != CC, it is assumed that GCC is\n-# being used in secondary stage builds).  We need to pass\n-# the -Wf,-XNg1500 option so the compiler can compile the\n-# G++ file cp-parse.c.  Otherwise it complains about\n-# too many case statements.  The -Olimit is so the user\n-# can use -O2.  Down with fixed size tables!\n-\n-CC\t\t= $(OLDCC)\n-OPT\t\t= -O1\n-OLDCC\t\t= cc -Wf,-XNg1500,-XNh2000 -Olimit 3000 $(OPT)\n-\n-# The bison output files are machine-indep,\n-# so different flags for a particular machine are not useful.\n-#BISONFLAGS\t= -l\n-\n # This is so we can link collect2 running native.\n CLIB\t\t= -lmld"}, {"sha": "f9ee98c801b71e6e7597a4cd09ee7a6b19cf4538", "filename": "gcc/config/mips/x-osfrose", "status": "modified", "additions": 0, "deletions": 31, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6d7afec45c2c8f03baaf0a8324f047095e5632b/gcc%2Fconfig%2Fmips%2Fx-osfrose", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6d7afec45c2c8f03baaf0a8324f047095e5632b/gcc%2Fconfig%2Fmips%2Fx-osfrose", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fx-osfrose?ref=b6d7afec45c2c8f03baaf0a8324f047095e5632b", "patch": "@@ -1,32 +1 @@\n-# Define CC and OLDCC as the same, so that the tests:\n-#\tif [ x\"$(OLDCC)\" = x\"$(CC)\" ] ...\n-#\n-# will succeed (if OLDCC != CC, it is assumed that GCC is\n-# being used in secondary stage builds).\n-\n-BUILD\t\t=\n-CC\t\t= $(OLDCC)\n CLIB\t\t= -lld\n-X_CFLAGS\t= $(DEB_OPT) $(MSTATS) $(SHLIB) $(X_DEFINES)\n-X_CFLAGS_NODEBUG = $(NO_DEBUG) $(MSTATS) $(OPT) $(PROFILE) $(SHLIB) $(X_DEFINES) $(XCFLAGS)\n-CCLIBFLAGS\t= -O -pic-extern\n-CPP_ABORT\t= # -Dabort=fancy_abort\n-CPPFLAGS\t= $(CPP_ABORT) $(SYSTEM_INCLUDES)\n-DEB_OPT\t\t= $(OPT) $(DEBUG) $(PROFILE)\n-DEBUG\t\t= \n-DEBUG_COLLECT\t= # -DDEBUG\n-CCLIBFLAGS\t= -O -DNO_HALF_PIC\n-GCC_CFLAGS\t= $(INTERNAL_CFLAGS) $(X_CFLAGS) $(T_CFLAGS) $(CFLAGS) -B./ -DPOSIX -DNO_HALF_PIC\n-LIBGCC2_CFLAGS\t= -O2 $(GCC_CFLAGS) -g1 -pic-extern\n-LDFLAGS\t\t=\n-MSTATS\t\t= # -mstats\n-OLDCC\t\t= /usr/ccs/gcc/gcc\n-OPT\t\t= -O2\n-PROFILE\t\t=\n-SHLIB\t\t= -pic-none\n-SYSTEM_INCLUDES\t= # -I${BUILD}/usr/include\n-X_DEFINES\t= -Dvfork=fork\n-\n-libdir\t\t= /usr/ccs\n-mandir\t\t= /usr/ccs/gcc/$(target)/$(version)\n-bindir\t\t= /usr/ccs/gcc/$(target)/$(version)"}, {"sha": "e7fe4ee43b739a8e423e34684f44f39b016766d3", "filename": "gcc/config/mips/x-sni-svr4", "status": "removed", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/693c4145079227d051e2e588926a3016edc08643/gcc%2Fconfig%2Fmips%2Fx-sni-svr4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/693c4145079227d051e2e588926a3016edc08643/gcc%2Fconfig%2Fmips%2Fx-sni-svr4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fx-sni-svr4?ref=693c4145079227d051e2e588926a3016edc08643", "patch": "@@ -1,11 +0,0 @@\n-# Define CC and OLDCC as the same, so that the tests:\n-#\tif [ x\"$(OLDCC)\" = x\"$(CC)\" ] ...\n-#\n-# will succeed (if OLDCC != CC, it is assumed that GCC is\n-# being used in secondary stage builds).\n-# -Olimit is so the user can use -O2.  Down with fixed\n-# size tables!\n-\n-CC\t\t= $(OLDCC)\n-OPT\t\t=\n-OLDCC\t\t= cc -Olimit 3000 $(OPT)"}, {"sha": "7f0ec53494e80d8b860cfdb1b4f930cfbd947e4f", "filename": "gcc/config/mips/x-sony", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6d7afec45c2c8f03baaf0a8324f047095e5632b/gcc%2Fconfig%2Fmips%2Fx-sony", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6d7afec45c2c8f03baaf0a8324f047095e5632b/gcc%2Fconfig%2Fmips%2Fx-sony", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fx-sony?ref=b6d7afec45c2c8f03baaf0a8324f047095e5632b", "patch": "@@ -1,18 +1,2 @@\n-# Make internal tables bigger.\n-OLDCC=cc -Wf,-XNg1500,-XNh2000 -Olimit 3000 $(OPT)\n-\n-# Define CC and OLDCC as the same, so that the tests:\n-#\tif [ x\"$(OLDCC)\" = x\"$(CC)\" ] ...\n-#\n-# will succeed (if OLDCC != CC, it is assumed that GCC is\n-# being used in secondary stage builds).  We need to pass\n-# the -Wf,-XNg1500 option so the compiler can compile the\n-# G++ file cp-parse.c.  Otherwise it complains about\n-# too many case statements.  The -Olimit is so the user\n-# can use -O2.  Down with fixed size tables!\n-\n-CC\t\t= $(OLDCC)\n-OPT\t\t= -O1\n-\n # This is so we can link collect2 running native.\n CLIB\t\t= -lmld"}, {"sha": "9b2e2346fe92a51e50fabea757f90fab6856935f", "filename": "gcc/config/mips/x-sysv", "status": "modified", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6d7afec45c2c8f03baaf0a8324f047095e5632b/gcc%2Fconfig%2Fmips%2Fx-sysv", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6d7afec45c2c8f03baaf0a8324f047095e5632b/gcc%2Fconfig%2Fmips%2Fx-sysv", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fx-sysv?ref=b6d7afec45c2c8f03baaf0a8324f047095e5632b", "patch": "@@ -1,21 +1,3 @@\n-# Define CC and OLDCC as the same, so that the tests:\n-#\tif [ x\"$(OLDCC)\" = x\"$(CC)\" ] ...\n-#\n-# will succeed (if OLDCC != CC, it is assumed that GCC is\n-# being used in secondary stage builds).  We need to pass\n-# the -Wf,-XNg1500 option so the compiler can compile the\n-# G++ file cp-parse.c.  Otherwise it complains about\n-# too many case statements.  -Olimit is so the user\n-# can use -O2.  Down with fixed size tables!\n-\n-CC\t\t= $(OLDCC)\n-OPT\t\t= -O1\n-OLDCC\t\t= cc -Wf,-XNg1500,-XNh2000 -Olimit 3000 $(OPT)\n-\n-# The bison output files are machine-indep,\n-# so different flags for a particular machine are not useful.\n-#BISONFLAGS\t= -l\n-\n # This enables collect2 to link.\n # Some systems use version 2.11 of the compilers.  Some use version 3.11.\n CLIB= -L/usr/lib/cmplrs/cc2.11 -L/usr/lib/cmplrs/cc3.11 -lmld"}, {"sha": "6e46f0eafd504592f7055524879c645f0f5c5b14", "filename": "gcc/config/mips/x-ultrix", "status": "removed", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/693c4145079227d051e2e588926a3016edc08643/gcc%2Fconfig%2Fmips%2Fx-ultrix", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/693c4145079227d051e2e588926a3016edc08643/gcc%2Fconfig%2Fmips%2Fx-ultrix", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fx-ultrix?ref=693c4145079227d051e2e588926a3016edc08643", "patch": "@@ -1,17 +0,0 @@\n-# Define CC and OLDCC as the same, so that the tests:\n-#\tif [ x\"$(OLDCC)\" = x\"$(CC)\" ] ...\n-#\n-# will succeed (if OLDCC != CC, it is assumed that GCC is\n-# being used in secondary stage builds).  We need to pass\n-# the -Wf,-XNg1500 option so the compiler can compile the\n-# G++ file cp-parse.c.  Otherwise it complains about\n-# too many case statements.  -Olimit is so the user\n-# can use -O2.  Down with fixed size tables!\n-\n-CC\t\t= $(OLDCC)\n-OPT\t\t= -O1\n-OLDCC\t\t= cc -Wf,-XNg1500 -Olimit 3000 $(OPT)\n-\n-# The bison output files are machine-indep,\n-# so different flags for a particular machine are not useful.\n-#BISONFLAGS\t= -l"}, {"sha": "ac0236043ffaa5bbbb17075eb47cecd44d4196e6", "filename": "gcc/config/pa/x-pa", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6d7afec45c2c8f03baaf0a8324f047095e5632b/gcc%2Fconfig%2Fpa%2Fx-pa", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6d7afec45c2c8f03baaf0a8324f047095e5632b/gcc%2Fconfig%2Fpa%2Fx-pa", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fx-pa?ref=b6d7afec45c2c8f03baaf0a8324f047095e5632b", "patch": "@@ -1,3 +1,2 @@\n # BSD on the PA already has ANSI include files which are c++ compatible.\n-USER_H = $(EXTRA_HEADERS) $(LANG_EXTRA_HEADERS)\n STMP_FIXPROTO="}, {"sha": "f3903e6b81fe873cdab10b0a6772bca55f31c991", "filename": "gcc/config/pa/x-pa-mpeix", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6d7afec45c2c8f03baaf0a8324f047095e5632b/gcc%2Fconfig%2Fpa%2Fx-pa-mpeix", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6d7afec45c2c8f03baaf0a8324f047095e5632b/gcc%2Fconfig%2Fpa%2Fx-pa-mpeix", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fx-pa-mpeix?ref=b6d7afec45c2c8f03baaf0a8324f047095e5632b", "patch": "@@ -1,10 +1,3 @@\n-X_CFLAGS=-I/usr/contrib/include -DSYSV -D_POSIX_SOURCE -D_SOCKET_SOURCE -D_MPEIX_SOURCE -DPOSIX -D_MPEXL_SOURCE\n-CC=gcc\n-AR=/bin/ar\n-OLDAR_FLAGS=rc\n-OLDAR=/bin/ar\n-OLDCC=c89\n-TARGET_LIBGCC2_CFLAGS=\n LIB2FUNCS_EXTRA= quadlib.asm\n \n quadlib.asm: $(srcdir)/config/pa/quadlib.asm"}, {"sha": "a181e1bbbce8be8c56adc0ee10d418c705f50085", "filename": "gcc/config/romp/x-mach", "status": "removed", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/693c4145079227d051e2e588926a3016edc08643/gcc%2Fconfig%2Fromp%2Fx-mach", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/693c4145079227d051e2e588926a3016edc08643/gcc%2Fconfig%2Fromp%2Fx-mach", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fromp%2Fx-mach?ref=693c4145079227d051e2e588926a3016edc08643", "patch": "@@ -1,5 +0,0 @@\n-# Ensure that CPATH is used and suppress lots of warnings.\n-CC=hc2 -Hcpp -w\n-\n-# The default `make' on the RT doesn't define MAKE, so do it here.\n-MAKE=make"}, {"sha": "82f9e6439424ee32551d8bf28b37ff83fcd70924", "filename": "gcc/config/romp/x-romp", "status": "removed", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/693c4145079227d051e2e588926a3016edc08643/gcc%2Fconfig%2Fromp%2Fx-romp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/693c4145079227d051e2e588926a3016edc08643/gcc%2Fconfig%2Fromp%2Fx-romp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fromp%2Fx-romp?ref=693c4145079227d051e2e588926a3016edc08643", "patch": "@@ -1,11 +0,0 @@\n-# obstack.h assumes that if __STDC__ is defined an ANSI C preprocessor is\n-# being used.  -Hnocpp makes hc use its builtin preprocessor instead of\n-# /lib/cpp.  gcc doesn't use <sys/ioctl.h>, so it doesn't matter whether\n-# fixincludes has been run.\n-#\n-# hc's warnings do nothing but obscure the output, hence the -w.\n-# \n-CC=hc -Hnocpp -w -U__STDC__\n-\n-# The default `make' on the RT doesn't define MAKE, so do it here.\n-MAKE=make"}, {"sha": "de19792916ec1ebe2ce4fcd7b1fbc720a39a5422", "filename": "gcc/config/rs6000/x-aix31", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6d7afec45c2c8f03baaf0a8324f047095e5632b/gcc%2Fconfig%2Frs6000%2Fx-aix31", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6d7afec45c2c8f03baaf0a8324f047095e5632b/gcc%2Fconfig%2Frs6000%2Fx-aix31", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fx-aix31?ref=b6d7afec45c2c8f03baaf0a8324f047095e5632b", "patch": "@@ -1,5 +1,4 @@\n-# For some reason, we need -lm for cc1.\n # We need -lld for collect2 (actually this only matters\n # for a native compiler, but this is as good a place as any\n # to define the symbol).\n-CLIB=-lm -lld\n+CLIB= -lld"}, {"sha": "16fc937e3e81771aee832a24d051675f186f2812", "filename": "gcc/config/rs6000/x-beos", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/693c4145079227d051e2e588926a3016edc08643/gcc%2Fconfig%2Frs6000%2Fx-beos", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/693c4145079227d051e2e588926a3016edc08643/gcc%2Fconfig%2Frs6000%2Fx-beos", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fx-beos?ref=693c4145079227d051e2e588926a3016edc08643", "patch": "@@ -1,2 +0,0 @@\n-# configuration for BeOS\n-INSTALL=install -c"}, {"sha": "341e9085ef5d2ee3e78a453ee38a008912969a1f", "filename": "gcc/config/rs6000/x-lynx", "status": "removed", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/693c4145079227d051e2e588926a3016edc08643/gcc%2Fconfig%2Frs6000%2Fx-lynx", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/693c4145079227d051e2e588926a3016edc08643/gcc%2Fconfig%2Frs6000%2Fx-lynx", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fx-lynx?ref=693c4145079227d051e2e588926a3016edc08643", "patch": "@@ -1,11 +0,0 @@\n-# /bin/cc is hopelessly broken, so we must use /bin/gcc instead.\n-CC\t= $(OLDCC)\n-OLDCC\t= /bin/gcc\n-\n-# /bin/sh is too buggy, so use /bin/bash instead.\n-SHELL = /bin/bash\n-\n-# configuration for IBM rs6000 running lynx\n-\n-# For some reason, we need -lm for cc1.\n-CLIB=-lm"}, {"sha": "dcff838bfa045b1a025bd741be3ddda9974aa88d", "filename": "gcc/config/rs6000/x-mach", "status": "removed", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/693c4145079227d051e2e588926a3016edc08643/gcc%2Fconfig%2Frs6000%2Fx-mach", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/693c4145079227d051e2e588926a3016edc08643/gcc%2Fconfig%2Frs6000%2Fx-mach", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fx-mach?ref=693c4145079227d051e2e588926a3016edc08643", "patch": "@@ -1,4 +0,0 @@\n-# configuration for IBM rs6000 running MACH\n-\n-# For some reason, we need -lm for cc1.\n-CLIB=-lm"}, {"sha": "71eaec6509619216c5f7a7da388179fa9fb08032", "filename": "gcc/config/rs6000/x-sysv4", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/693c4145079227d051e2e588926a3016edc08643/gcc%2Fconfig%2Frs6000%2Fx-sysv4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/693c4145079227d051e2e588926a3016edc08643/gcc%2Fconfig%2Frs6000%2Fx-sysv4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fx-sysv4?ref=693c4145079227d051e2e588926a3016edc08643", "patch": "@@ -1 +0,0 @@\n-X_CFLAGS=-DSVR4"}, {"sha": "71eaec6509619216c5f7a7da388179fa9fb08032", "filename": "gcc/config/sparc/x-sysv4", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/693c4145079227d051e2e588926a3016edc08643/gcc%2Fconfig%2Fsparc%2Fx-sysv4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/693c4145079227d051e2e588926a3016edc08643/gcc%2Fconfig%2Fsparc%2Fx-sysv4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fx-sysv4?ref=693c4145079227d051e2e588926a3016edc08643", "patch": "@@ -1 +0,0 @@\n-X_CFLAGS=-DSVR4"}, {"sha": "0be03e453e12833fda091fe9b76f62cba3819d9d", "filename": "gcc/config/x-lynx", "status": "removed", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/693c4145079227d051e2e588926a3016edc08643/gcc%2Fconfig%2Fx-lynx", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/693c4145079227d051e2e588926a3016edc08643/gcc%2Fconfig%2Fx-lynx", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fx-lynx?ref=693c4145079227d051e2e588926a3016edc08643", "patch": "@@ -1,6 +0,0 @@\n-# /bin/cc is hopelessly broken, so we must use /bin/gcc instead.\n-CC\t= $(OLDCC)\n-OLDCC\t= /bin/gcc\n-\n-# /bin/sh is too buggy, so use /bin/bash instead.\n-SHELL = /bin/bash"}]}