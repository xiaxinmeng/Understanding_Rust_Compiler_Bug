{"sha": "3cb1da52cb6eef3eeec78ef672799b972d9db48a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2NiMWRhNTJjYjZlZWYzZWVlYzc4ZWY2NzI3OTliOTcyZDlkYjQ4YQ==", "commit": {"author": {"name": "Nathan Froyd", "email": "froydnj@codesourcery.com", "date": "2010-10-08T13:18:51Z"}, "committer": {"name": "Nathan Froyd", "email": "froydnj@gcc.gnu.org", "date": "2010-10-08T13:18:51Z"}, "message": "s390-protos.h (s390_function_arg_advance): Delete.\n\n\t* config/s390/s390-protos.h (s390_function_arg_advance): Delete.\n\t(s390_function_arg): Delete.\n\t* config/s390/s390.h (FUNCTION_ARG, FUNCTION_ARG_ADVANCE): Delete.\n\t* config/s390/s390.c (s390_function_arg_float): Take a const_tree.\n\t(s390_function_arg_integer): Likewise.\n\t(s390_function_arg_advance): Make static.  Take a const_tree and\n\ta bool.\n\t(s390_function_arg): Likewise.\n\t(TARGET_FUNCTION_ARG, TARGET_FUNCTION_ARG_ADVANCE): Define.\n\nFrom-SVN: r165180", "tree": {"sha": "48669180287880708a4290bc1f2fd657d235391b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/48669180287880708a4290bc1f2fd657d235391b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3cb1da52cb6eef3eeec78ef672799b972d9db48a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3cb1da52cb6eef3eeec78ef672799b972d9db48a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3cb1da52cb6eef3eeec78ef672799b972d9db48a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3cb1da52cb6eef3eeec78ef672799b972d9db48a/comments", "author": null, "committer": null, "parents": [{"sha": "925ed112f030f308f2c9fa4f1c8b8a5e18a41049", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/925ed112f030f308f2c9fa4f1c8b8a5e18a41049", "html_url": "https://github.com/Rust-GCC/gccrs/commit/925ed112f030f308f2c9fa4f1c8b8a5e18a41049"}], "stats": {"total": 39, "additions": 23, "deletions": 16}, "files": [{"sha": "be1527835207311a1648aaeaa9b6c1583376cbdd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cb1da52cb6eef3eeec78ef672799b972d9db48a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cb1da52cb6eef3eeec78ef672799b972d9db48a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3cb1da52cb6eef3eeec78ef672799b972d9db48a", "patch": "@@ -1,3 +1,15 @@\n+2010-10-08  Nathan Froyd  <froydnj@codesourcery.com>\n+\n+\t* config/s390/s390-protos.h (s390_function_arg_advance): Delete.\n+\t(s390_function_arg): Delete.\n+\t* config/s390/s390.h (FUNCTION_ARG, FUNCTION_ARG_ADVANCE): Delete.\n+\t* config/s390/s390.c (s390_function_arg_float): Take a const_tree.\n+\t(s390_function_arg_integer): Likewise.\n+\t(s390_function_arg_advance): Make static.  Take a const_tree and\n+\ta bool.\n+\t(s390_function_arg): Likewise.\n+\t(TARGET_FUNCTION_ARG, TARGET_FUNCTION_ARG_ADVANCE): Define.\n+\n 2010-10-08  Nathan Froyd  <froydnj@codesourcery.com>\n \n \t* config/spu/spu-protos.h (spu_function_arg): Delete."}, {"sha": "ec26c4d66dea5f0781e4117bbe04678d459df3f8", "filename": "gcc/config/s390/s390-protos.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cb1da52cb6eef3eeec78ef672799b972d9db48a/gcc%2Fconfig%2Fs390%2Fs390-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cb1da52cb6eef3eeec78ef672799b972d9db48a/gcc%2Fconfig%2Fs390%2Fs390-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390-protos.h?ref=3cb1da52cb6eef3eeec78ef672799b972d9db48a", "patch": "@@ -116,10 +116,7 @@ extern int s390_compare_and_branch_condition_mask (rtx);\n #endif /* RTX_CODE */\n \n #ifdef TREE_CODE\n-extern void s390_function_arg_advance (CUMULATIVE_ARGS *, enum machine_mode,\n-\t\t\t\t       tree, int);\n #ifdef RTX_CODE\n-extern rtx s390_function_arg (CUMULATIVE_ARGS *, enum machine_mode, tree, int);\n extern rtx s390_function_value (const_tree, const_tree, enum machine_mode);\n #endif /* RTX_CODE */\n #endif /* TREE_CODE */"}, {"sha": "e2d3851426a3435cdf02b7c0bd60089440c63477", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cb1da52cb6eef3eeec78ef672799b972d9db48a/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cb1da52cb6eef3eeec78ef672799b972d9db48a/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=3cb1da52cb6eef3eeec78ef672799b972d9db48a", "patch": "@@ -8340,7 +8340,7 @@ s390_function_arg_size (enum machine_mode mode, const_tree type)\n    is to be passed in a floating-point register, if available.  */\n \n static bool\n-s390_function_arg_float (enum machine_mode mode, tree type)\n+s390_function_arg_float (enum machine_mode mode, const_tree type)\n {\n   int size = s390_function_arg_size (mode, type);\n   if (size > 8)\n@@ -8385,7 +8385,7 @@ s390_function_arg_float (enum machine_mode mode, tree type)\n    registers, if available.  */\n \n static bool\n-s390_function_arg_integer (enum machine_mode mode, tree type)\n+s390_function_arg_integer (enum machine_mode mode, const_tree type)\n {\n   int size = s390_function_arg_size (mode, type);\n   if (size > 8)\n@@ -8447,9 +8447,9 @@ s390_pass_by_reference (CUMULATIVE_ARGS *ca ATTRIBUTE_UNUSED,\n    argument is a named argument (as opposed to an unnamed argument\n    matching an ellipsis).  */\n \n-void\n+static void\n s390_function_arg_advance (CUMULATIVE_ARGS *cum, enum machine_mode mode,\n-\t\t\t   tree type, int named ATTRIBUTE_UNUSED)\n+\t\t\t   const_tree type, bool named ATTRIBUTE_UNUSED)\n {\n   if (s390_function_arg_float (mode, type))\n     {\n@@ -8483,9 +8483,9 @@ s390_function_arg_advance (CUMULATIVE_ARGS *cum, enum machine_mode mode,\n    to pass floating point arguments.  All remaining arguments\n    are pushed to the stack.  */\n \n-rtx\n-s390_function_arg (CUMULATIVE_ARGS *cum, enum machine_mode mode, tree type,\n-\t\t   int named ATTRIBUTE_UNUSED)\n+static rtx\n+s390_function_arg (CUMULATIVE_ARGS *cum, enum machine_mode mode,\n+\t\t   const_tree type, bool named ATTRIBUTE_UNUSED)\n {\n   if (s390_function_arg_float (mode, type))\n     {\n@@ -10568,6 +10568,10 @@ s390_loop_unroll_adjust (unsigned nunroll, struct loop *loop)\n \n #undef TARGET_FUNCTION_OK_FOR_SIBCALL\n #define TARGET_FUNCTION_OK_FOR_SIBCALL s390_function_ok_for_sibcall\n+#undef TARGET_FUNCTION_ARG\n+#define TARGET_FUNCTION_ARG s390_function_arg\n+#undef TARGET_FUNCTION_ARG_ADVANCE\n+#define TARGET_FUNCTION_ARG_ADVANCE s390_function_arg_advance\n \n #undef TARGET_FIXED_CONDITION_CODE_REGS\n #define TARGET_FIXED_CONDITION_CODE_REGS s390_fixed_condition_code_regs"}, {"sha": "2b18111299689fe4b13687c4239884099801f563", "filename": "gcc/config/s390/s390.h", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cb1da52cb6eef3eeec78ef672799b972d9db48a/gcc%2Fconfig%2Fs390%2Fs390.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cb1da52cb6eef3eeec78ef672799b972d9db48a/gcc%2Fconfig%2Fs390%2Fs390.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.h?ref=3cb1da52cb6eef3eeec78ef672799b972d9db48a", "patch": "@@ -691,12 +691,6 @@ CUMULATIVE_ARGS;\n #define INIT_CUMULATIVE_ARGS(CUM, FNTYPE, LIBNAME, NN, N_NAMED_ARGS) \\\n   ((CUM).gprs=0, (CUM).fprs=0)\n \n-#define FUNCTION_ARG_ADVANCE(CUM, MODE, TYPE, NAMED)                    \\\n-  s390_function_arg_advance (&CUM, MODE, TYPE, NAMED)\n-\n-#define FUNCTION_ARG(CUM, MODE, TYPE, NAMED)   \\\n-  s390_function_arg (&CUM, MODE, TYPE, NAMED)\n-\n /* Arguments can be placed in general registers 2 to 6, or in floating\n    point registers 0 and 2 for 31 bit and fprs 0, 2, 4 and 6 for 64\n    bit.  */"}]}