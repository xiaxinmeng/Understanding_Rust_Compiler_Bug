{"sha": "b4ec1d31a5d605c8bea45ca919d3a60dfdac771f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjRlYzFkMzFhNWQ2MDVjOGJlYTQ1Y2E5MTlkM2E2MGRmZGFjNzcxZg==", "commit": {"author": {"name": "Bin Cheng", "email": "bin.cheng@arm.com", "date": "2017-10-11T13:04:05Z"}, "committer": {"name": "Bin Cheng", "email": "amker@gcc.gnu.org", "date": "2017-10-11T13:04:05Z"}, "message": "re PR tree-optimization/82472 (ICE in generate_code_for_partition, at tree-loop-distribution.c:1145)\n\n\tPR tree-optimization/82472\n\t* tree-loop-distribution.c (sort_partitions_by_post_order): Refine\n\tcomment.\n\t(break_alias_scc_partitions): Update postorder number.\n\n\tgcc/testsuite\n\t* gcc.dg/tree-ssa/pr82472.c: New test.\n\nFrom-SVN: r253641", "tree": {"sha": "215a0f5f821b87eac0949692a888c06e737e2b04", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/215a0f5f821b87eac0949692a888c06e737e2b04"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b4ec1d31a5d605c8bea45ca919d3a60dfdac771f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4ec1d31a5d605c8bea45ca919d3a60dfdac771f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4ec1d31a5d605c8bea45ca919d3a60dfdac771f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4ec1d31a5d605c8bea45ca919d3a60dfdac771f/comments", "author": null, "committer": null, "parents": [{"sha": "3a266bcd811d8fdf3e9ad9134c40324aafa1bac9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a266bcd811d8fdf3e9ad9134c40324aafa1bac9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a266bcd811d8fdf3e9ad9134c40324aafa1bac9"}], "stats": {"total": 61, "additions": 53, "deletions": 8}, "files": [{"sha": "0028fc9a38af23c69cc84ef211de315c03d17c81", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4ec1d31a5d605c8bea45ca919d3a60dfdac771f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4ec1d31a5d605c8bea45ca919d3a60dfdac771f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b4ec1d31a5d605c8bea45ca919d3a60dfdac771f", "patch": "@@ -1,3 +1,10 @@\n+2017-10-11  Bin Cheng  <bin.cheng@arm.com>\n+\n+\tPR tree-optimization/82472\n+\t* tree-loop-distribution.c (sort_partitions_by_post_order): Refine\n+\tcomment.\n+\t(break_alias_scc_partitions): Update postorder number.\n+\n 2017-10-11  Martin Liska  <mliska@suse.cz>\n \n \tPR sanitizer/82490"}, {"sha": "23fccba5a677604848f48e973c0725d01c8c1739", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4ec1d31a5d605c8bea45ca919d3a60dfdac771f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4ec1d31a5d605c8bea45ca919d3a60dfdac771f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b4ec1d31a5d605c8bea45ca919d3a60dfdac771f", "patch": "@@ -1,3 +1,8 @@\n+2017-10-11  Bin Cheng  <bin.cheng@arm.com>\n+\n+\tPR tree-optimization/82472\n+\t* gcc.dg/tree-ssa/pr82472.c: New test.\n+\n 2017-10-11  Martin Liska  <mliska@suse.cz>\n \n \tPR sanitizer/82490"}, {"sha": "445c95fbc47b9ba60f87e7d3e0fc40baf51d6d64", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr82472.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4ec1d31a5d605c8bea45ca919d3a60dfdac771f/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr82472.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4ec1d31a5d605c8bea45ca919d3a60dfdac771f/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr82472.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr82472.c?ref=b4ec1d31a5d605c8bea45ca919d3a60dfdac771f", "patch": "@@ -0,0 +1,24 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -ftree-loop-distribution\" } */\n+\n+long int xj;\n+\n+int\n+cx (long int *ox, short int mk, char tf)\n+{\n+  int si, f9;\n+  char *p4 = &tf;\n+  short int *rm = (tf != 0) ? (short int *)&f9 : &mk;\n+\n+  for (f9 = 0; f9 < 2; ++f9)\n+    {\n+      *rm = 0;\n+      *p4 = *ox;\n+      si = mk;\n+      xj = 0;\n+      while (p4 < (char *)rm)\n+        ++p4;\n+    }\n+\n+  return si;\n+}"}, {"sha": "98ad50e5e7ad4c510f1a197c0085732277b17867", "filename": "gcc/tree-loop-distribution.c", "status": "modified", "additions": 17, "deletions": 8, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4ec1d31a5d605c8bea45ca919d3a60dfdac771f/gcc%2Ftree-loop-distribution.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4ec1d31a5d605c8bea45ca919d3a60dfdac771f/gcc%2Ftree-loop-distribution.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-loop-distribution.c?ref=b4ec1d31a5d605c8bea45ca919d3a60dfdac771f", "patch": "@@ -1943,7 +1943,8 @@ build_partition_graph (struct graph *rdg,\n   return pg;\n }\n \n-/* Sort partitions in PG by post order and store them in PARTITIONS.  */\n+/* Sort partitions in PG in descending post order and store them in\n+   PARTITIONS.  */\n \n static void\n sort_partitions_by_post_order (struct graph *pg,\n@@ -1952,7 +1953,7 @@ sort_partitions_by_post_order (struct graph *pg,\n   int i;\n   struct pg_vdata *data;\n \n-  /* Now order the remaining nodes in postorder.  */\n+  /* Now order the remaining nodes in descending postorder.  */\n   qsort (pg->vertices, pg->n_vertices, sizeof (vertex), pgcmp);\n   partitions->truncate (0);\n   for (i = 0; i < pg->n_vertices; ++i)\n@@ -2048,7 +2049,7 @@ break_alias_scc_partitions (struct graph *rdg,\n \t\t\t    vec<struct partition *> *partitions,\n \t\t\t    vec<ddr_p> *alias_ddrs)\n {\n-  int i, j, num_sccs, num_sccs_no_alias;\n+  int i, j, k, num_sccs, num_sccs_no_alias;\n   /* Build partition dependence graph.  */\n   graph *pg = build_partition_graph (rdg, partitions, false);\n \n@@ -2121,18 +2122,26 @@ break_alias_scc_partitions (struct graph *rdg,\n \t  for (j = 0; partitions->iterate (j, &first); ++j)\n \t    if (cbdata.vertices_component[j] == i)\n \t      break;\n-\t  for (++j; partitions->iterate (j, &partition); ++j)\n+\t  for (k = j + 1; partitions->iterate (k, &partition); ++k)\n \t    {\n \t      struct pg_vdata *data;\n \n-\t      if (cbdata.vertices_component[j] != i)\n+\t      if (cbdata.vertices_component[k] != i)\n \t\tcontinue;\n \n+\t      /* Update postorder number so that merged reduction partition is\n+\t\t sorted after other partitions.  */\n+\t      if (!partition_reduction_p (first)\n+\t\t  && partition_reduction_p (partition))\n+\t\t{\n+\t\t  gcc_assert (pg->vertices[k].post < pg->vertices[j].post);\n+\t\t  pg->vertices[j].post = pg->vertices[k].post;\n+\t\t}\n \t      partition_merge_into (NULL, first, partition, FUSE_SAME_SCC);\n-\t      (*partitions)[j] = NULL;\n+\t      (*partitions)[k] = NULL;\n \t      partition_free (partition);\n-\t      data = (struct pg_vdata *)pg->vertices[j].data;\n-\t      gcc_assert (data->id == j);\n+\t      data = (struct pg_vdata *)pg->vertices[k].data;\n+\t      gcc_assert (data->id == k);\n \t      data->partition = NULL;\n \t    }\n \t}"}]}