{"sha": "c857f5ed55dd4f8f02892da3c79a595b39e376e5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzg1N2Y1ZWQ1NWRkNGY4ZjAyODkyZGEzYzc5YTU5NWIzOWUzNzZlNQ==", "commit": {"author": {"name": "Thomas Quinot", "email": "quinot@adacore.com", "date": "2005-03-29T16:15:11Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2005-03-29T16:15:11Z"}, "message": "exp_dist.adb (Add_RAST_Features, [...]): Set the From_Any...\n\n2005-03-29  Thomas Quinot  <quinot@adacore.com>\n\n\t* exp_dist.adb (Add_RAST_Features, PolyORB version): Set the From_Any,\n\tTo_Any and TypeCode TSSs on RAS types directly using Set_TSS, instead\n\tof using Set_Renaming_TSS. This ensures that the TSS bodies are not\n\tanalyzed if expansion is disabled (which could otherwise cause spurious\n\terror messages if expansion has been disabled due to previous\n\t(unrelated) errors).\n\n\t* sem_prag.adb (Analyze_Pragma, case Asynchronous): If RAS expansion\n\tis disabled, the entity denoted by the argument is the access type\n\titself, not an underlying record type, so there is no need to go back\n\tto the Corresponding_Remote_Type.\n\nFrom-SVN: r97171", "tree": {"sha": "7013380c9973522d585bba691157d9afdd9e7a7b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7013380c9973522d585bba691157d9afdd9e7a7b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c857f5ed55dd4f8f02892da3c79a595b39e376e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c857f5ed55dd4f8f02892da3c79a595b39e376e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c857f5ed55dd4f8f02892da3c79a595b39e376e5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c857f5ed55dd4f8f02892da3c79a595b39e376e5/comments", "author": null, "committer": null, "parents": [{"sha": "57848bf789f92b5787fef0249c8d7254b02e5825", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57848bf789f92b5787fef0249c8d7254b02e5825", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57848bf789f92b5787fef0249c8d7254b02e5825"}], "stats": {"total": 183, "additions": 55, "deletions": 128}, "files": [{"sha": "60fdf4f09fd0db2b71cd68b40e588236997ddc4a", "filename": "gcc/ada/exp_dist.adb", "status": "modified", "additions": 39, "deletions": 120, "changes": 159, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c857f5ed55dd4f8f02892da3c79a595b39e376e5/gcc%2Fada%2Fexp_dist.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c857f5ed55dd4f8f02892da3c79a595b39e376e5/gcc%2Fada%2Fexp_dist.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dist.adb?ref=c857f5ed55dd4f8f02892da3c79a595b39e376e5", "patch": "@@ -434,11 +434,8 @@ package body Exp_Dist is\n \n    procedure Specific_Add_RAST_Features\n      (Vis_Decl : Node_Id;\n-      RAS_Type : Entity_Id;\n-      Decls    : List_Id);\n-   --  Add declaration for TSSs for a given RAS type. The declarations are\n-   --  added just after the declaration of the RAS type itself, while the\n-   --  bodies are inserted at the end of Decls. PCS-specific ancillary\n+      RAS_Type : Entity_Id);\n+   --  Add declaration for TSSs for a given RAS type. PCS-specific ancillary\n    --  subprogram for Add_RAST_Features.\n \n    --  An RPC_Target record is used during construction of calling stubs\n@@ -576,8 +573,7 @@ package body Exp_Dist is\n \n       procedure Add_RAST_Features\n         (Vis_Decl : Node_Id;\n-         RAS_Type : Entity_Id;\n-         Decls    : List_Id);\n+         RAS_Type : Entity_Id);\n \n       procedure Build_General_Calling_Stubs\n         (Decls                     : List_Id;\n@@ -652,8 +648,7 @@ package body Exp_Dist is\n \n       procedure Add_RAST_Features\n         (Vis_Decl : Node_Id;\n-         RAS_Type : Entity_Id;\n-         Decls    : List_Id);\n+         RAS_Type : Entity_Id);\n \n       procedure Build_General_Calling_Stubs\n         (Decls                     : List_Id;\n@@ -1711,20 +1706,10 @@ package body Exp_Dist is\n    procedure Add_RAST_Features (Vis_Decl : Node_Id) is\n       RAS_Type : constant Entity_Id :=\n                    Equivalent_Type (Defining_Identifier (Vis_Decl));\n-\n-      Spec  : constant Node_Id :=\n-                Specification (Unit (Enclosing_Lib_Unit_Node (Vis_Decl)));\n-      Decls : List_Id := Private_Declarations (Spec);\n-\n    begin\n       pragma Assert (No (TSS (RAS_Type, TSS_RAS_Access)));\n-\n-      if No (Decls) then\n-         Decls := Visible_Declarations (Spec);\n-      end if;\n-\n       Add_RAS_Dereference_TSS (Vis_Decl);\n-      Specific_Add_RAST_Features (Vis_Decl, RAS_Type, Decls);\n+      Specific_Add_RAST_Features (Vis_Decl, RAS_Type);\n    end Add_RAST_Features;\n \n    -------------------\n@@ -3266,11 +3251,10 @@ package body Exp_Dist is\n \n       procedure Add_RAST_Features\n         (Vis_Decl : Node_Id;\n-         RAS_Type : Entity_Id;\n-         Decls    : List_Id)\n+         RAS_Type : Entity_Id)\n       is\n          pragma Warnings (Off);\n-         pragma Unreferenced (RAS_Type, Decls);\n+         pragma Unreferenced (RAS_Type);\n          pragma Warnings (On);\n       begin\n          Add_RAS_Access_TSS (Vis_Decl);\n@@ -5094,19 +5078,13 @@ package body Exp_Dist is\n          Declarations    : List_Id);\n       --  Add the TypeCode TSS for this RACW type\n \n-      procedure Add_RAS_From_Any\n-        (RAS_Type     : Entity_Id;\n-         Declarations : List_Id);\n+      procedure Add_RAS_From_Any (RAS_Type : Entity_Id);\n       --  Add the From_Any TSS for this RAS type\n \n-      procedure Add_RAS_To_Any\n-        (RAS_Type     : Entity_Id;\n-         Declarations : List_Id);\n+      procedure Add_RAS_To_Any   (RAS_Type : Entity_Id);\n       --  Add the To_Any TSS for this RAS type\n \n-      procedure Add_RAS_TypeCode\n-        (RAS_Type     : Entity_Id;\n-         Declarations : List_Id);\n+      procedure Add_RAS_TypeCode (RAS_Type : Entity_Id);\n       --  Add the TypeCode TSS for this RAS type\n \n       procedure Add_RAS_Access_TSS (N : Node_Id);\n@@ -5940,18 +5918,17 @@ package body Exp_Dist is\n \n       procedure Add_RAST_Features\n         (Vis_Decl : Node_Id;\n-         RAS_Type : Entity_Id;\n-         Decls    : List_Id)\n+         RAS_Type : Entity_Id)\n       is\n       begin\n          Add_RAS_Access_TSS (Vis_Decl);\n \n-         Add_RAS_From_Any (RAS_Type, Decls);\n-         Add_RAS_TypeCode (RAS_Type, Decls);\n+         Add_RAS_From_Any (RAS_Type);\n+         Add_RAS_TypeCode (RAS_Type);\n \n          --  To_Any uses TypeCode, and therefore needs to be generated last\n \n-         Add_RAS_To_Any (RAS_Type, Decls);\n+         Add_RAS_To_Any   (RAS_Type);\n       end Add_RAST_Features;\n \n       ------------------------\n@@ -6289,18 +6266,13 @@ package body Exp_Dist is\n       -- Add_RAS_From_Any --\n       ----------------------\n \n-      procedure Add_RAS_From_Any\n-        (RAS_Type     : Entity_Id;\n-         Declarations : List_Id)\n-      is\n+      procedure Add_RAS_From_Any (RAS_Type : Entity_Id) is\n          Loc : constant Source_Ptr := Sloc (RAS_Type);\n \n-         Fnam : constant Entity_Id :=\n-                  Make_Defining_Identifier (Loc, New_Internal_Name ('F'));\n+         Fnam : constant Entity_Id := Make_Defining_Identifier (Loc,\n+                  Make_TSS_Name (RAS_Type, TSS_From_Any));\n \n          Func_Spec : Node_Id;\n-         Func_Decl : Node_Id;\n-         Func_Body : Node_Id;\n \n          Statements : List_Id;\n \n@@ -6334,45 +6306,30 @@ package body Exp_Dist is\n                    New_Occurrence_Of (RTE (RE_Any), Loc))),\n              Subtype_Mark => New_Occurrence_Of (RAS_Type, Loc));\n \n-         --  NOTE: The usage occurrences of RACW_Parameter must\n-         --  refer to the entity in the declaration spec, not those\n-         --  of the body spec.\n-\n-         Func_Decl := Make_Subprogram_Declaration (Loc, Func_Spec);\n-\n-         Func_Body :=\n+         Discard_Node (\n            Make_Subprogram_Body (Loc,\n-             Specification              =>\n-               Copy_Specification (Loc, Func_Spec),\n+             Specification              => Func_Spec,\n              Declarations               => No_List,\n              Handled_Statement_Sequence =>\n                Make_Handled_Sequence_Of_Statements (Loc,\n-                 Statements => Statements));\n-\n-         Insert_After (Declaration_Node (RAS_Type), Func_Decl);\n-         Append_To (Declarations, Func_Body);\n-\n-         Set_Renaming_TSS (RAS_Type, Fnam, TSS_From_Any);\n+                 Statements => Statements)));\n+         Set_TSS (RAS_Type, Fnam);\n       end Add_RAS_From_Any;\n \n       --------------------\n       -- Add_RAS_To_Any --\n       --------------------\n \n-      procedure Add_RAS_To_Any\n-        (RAS_Type     : Entity_Id;\n-         Declarations : List_Id)\n-      is\n+      procedure Add_RAS_To_Any (RAS_Type : Entity_Id) is\n          Loc : constant Source_Ptr := Sloc (RAS_Type);\n \n-         Fnam : Entity_Id;\n+         Fnam : constant Entity_Id := Make_Defining_Identifier (Loc,\n+                  Make_TSS_Name (RAS_Type, TSS_To_Any));\n \n-         Decls : List_Id;\n+         Decls      : List_Id;\n          Statements : List_Id;\n \n          Func_Spec : Node_Id;\n-         Func_Decl : Node_Id;\n-         Func_Body : Node_Id;\n \n          Any            : constant Entity_Id :=\n                             Make_Defining_Identifier (Loc,\n@@ -6411,9 +6368,6 @@ package body Exp_Dist is\n              Expression =>\n                New_Occurrence_Of (Any, Loc)));\n \n-         Fnam := Make_Defining_Identifier (\n-           Loc, New_Internal_Name ('T'));\n-\n          Func_Spec :=\n            Make_Function_Specification (Loc,\n              Defining_Unit_Name =>\n@@ -6426,42 +6380,27 @@ package body Exp_Dist is\n                    New_Occurrence_Of (RAS_Type, Loc))),\n              Subtype_Mark => New_Occurrence_Of (RTE (RE_Any), Loc));\n \n-         --  NOTE: The usage occurrences of RAS_Parameter must\n-         --  refer to the entity in the declaration spec, not in\n-         --  the body spec.\n-\n-         Func_Decl := Make_Subprogram_Declaration (Loc, Func_Spec);\n-\n-         Func_Body :=\n+         Discard_Node (\n            Make_Subprogram_Body (Loc,\n-             Specification              =>\n-               Copy_Specification (Loc, Func_Spec),\n+             Specification              => Func_Spec,\n              Declarations               => Decls,\n              Handled_Statement_Sequence =>\n                Make_Handled_Sequence_Of_Statements (Loc,\n-                 Statements => Statements));\n-\n-         Insert_After (Declaration_Node (RAS_Type), Func_Decl);\n-         Append_To (Declarations, Func_Body);\n-\n-         Set_Renaming_TSS (RAS_Type, Fnam, TSS_To_Any);\n+                 Statements => Statements)));\n+         Set_TSS (RAS_Type, Fnam);\n       end Add_RAS_To_Any;\n \n       ----------------------\n       -- Add_RAS_TypeCode --\n       ----------------------\n \n-      procedure Add_RAS_TypeCode\n-        (RAS_Type     : Entity_Id;\n-         Declarations : List_Id)\n-      is\n+      procedure Add_RAS_TypeCode (RAS_Type : Entity_Id) is\n          Loc : constant Source_Ptr := Sloc (RAS_Type);\n \n-         Fnam : Entity_Id;\n+         Fnam : constant Entity_Id := Make_Defining_Identifier (Loc,\n+                  Make_TSS_Name (RAS_Type, TSS_TypeCode));\n \n          Func_Spec : Node_Id;\n-         Func_Decl : Node_Id;\n-         Func_Body : Node_Id;\n \n          Decls : constant List_Id := New_List;\n          Name_String, Repo_Id_String : String_Id;\n@@ -6470,11 +6409,6 @@ package body Exp_Dist is\n                            Make_Defining_Identifier (Loc, Name_R);\n \n       begin\n-\n-         Fnam :=\n-           Make_Defining_Identifier (Loc,\n-             Chars => New_Internal_Name ('T'));\n-\n          --  The spec for this subprogram has a dummy 'access RAS'\n          --  argument, which serves only for overloading purposes.\n \n@@ -6491,19 +6425,12 @@ package body Exp_Dist is\n                      Subtype_Mark => New_Occurrence_Of (RAS_Type, Loc)))),\n              Subtype_Mark => New_Occurrence_Of (RTE (RE_TypeCode), Loc));\n \n-         --  NOTE: The usage occurrences of RAS_Parameter must\n-         --  refer to the entity in the declaration spec, not those\n-         --  of the body spec.\n-\n-         Func_Decl := Make_Subprogram_Declaration (Loc, Func_Spec);\n-\n          PolyORB_Support.Helpers.Build_Name_And_Repository_Id\n            (RAS_Type, Name_Str => Name_String, Repo_Id_Str => Repo_Id_String);\n \n-         Func_Body :=\n+         Discard_Node (\n            Make_Subprogram_Body (Loc,\n-             Specification              =>\n-               Copy_Specification (Loc, Func_Spec),\n+             Specification              => Func_Spec,\n              Declarations               => Decls,\n              Handled_Statement_Sequence =>\n                Make_Handled_Sequence_Of_Statements (Loc,\n@@ -6528,12 +6455,8 @@ package body Exp_Dist is\n                                      RTE (RE_TA_String), Loc),\n                                    Parameter_Associations => New_List (\n                                      Make_String_Literal (Loc,\n-                                       Repo_Id_String)))))))))));\n-\n-         Insert_After (Declaration_Node (RAS_Type), Func_Decl);\n-         Append_To (Declarations, Func_Body);\n-\n-         Set_Renaming_TSS (RAS_Type, Fnam, TSS_TypeCode);\n+                                       Repo_Id_String))))))))))));\n+         Set_TSS (RAS_Type, Fnam);\n       end Add_RAS_TypeCode;\n \n       -----------------------------------------\n@@ -10783,17 +10706,13 @@ package body Exp_Dist is\n \n    procedure Specific_Add_RAST_Features\n      (Vis_Decl : Node_Id;\n-      RAS_Type : Entity_Id;\n-      Decls    : List_Id)\n-   is\n+      RAS_Type : Entity_Id) is\n    begin\n       case Get_PCS_Name is\n          when Name_PolyORB_DSA =>\n-            PolyORB_Support.Add_RAST_Features (\n-              Vis_Decl, RAS_Type, Decls);\n+            PolyORB_Support.Add_RAST_Features (Vis_Decl, RAS_Type);\n          when others =>\n-            GARLIC_Support.Add_RAST_Features (\n-              Vis_Decl, RAS_Type, Decls);\n+            GARLIC_Support.Add_RAST_Features (Vis_Decl, RAS_Type);\n       end case;\n    end Specific_Add_RAST_Features;\n "}, {"sha": "a65c9ca70022ad1f5cff16671b741de6447dfda8", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 16, "deletions": 8, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c857f5ed55dd4f8f02892da3c79a595b39e376e5/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c857f5ed55dd4f8f02892da3c79a595b39e376e5/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=c857f5ed55dd4f8f02892da3c79a595b39e376e5", "patch": "@@ -55,6 +55,7 @@ with Sem_Ch3;  use Sem_Ch3;\n with Sem_Ch8;  use Sem_Ch8;\n with Sem_Ch13; use Sem_Ch13;\n with Sem_Disp; use Sem_Disp;\n+with Sem_Dist; use Sem_Dist;\n with Sem_Elim; use Sem_Elim;\n with Sem_Eval; use Sem_Eval;\n with Sem_Intr; use Sem_Intr;\n@@ -4605,13 +4606,20 @@ package body Sem_Prag is\n                Error_Pragma_Arg\n                  (\"pragma% cannot be applied to function\", Arg1);\n \n-            elsif Ekind (Nm) = E_Record_Type\n-              and then Present (Corresponding_Remote_Type (Nm))\n-            then\n-               --  A record type that is the Equivalent_Type for\n-               --  a remote access-to-subprogram type.\n+            elsif Is_Remote_Access_To_Subprogram_Type (Nm) then\n+\n+               if Is_Record_Type (Nm) then\n+                  --  A record type that is the Equivalent_Type for\n+                  --  a remote access-to-subprogram type.\n+\n+                  N := Declaration_Node (Corresponding_Remote_Type (Nm));\n \n-               N := Declaration_Node (Corresponding_Remote_Type (Nm));\n+               else\n+                  --  A non-expanded RAS type (case where distribution is\n+                  --  not enabled).\n+\n+                  N := Declaration_Node (Nm);\n+               end if;\n \n                if Nkind (N) = N_Full_Type_Declaration\n                  and then Nkind (Type_Definition (N)) =\n@@ -4622,9 +4630,9 @@ package body Sem_Prag is\n \n                   if Is_Asynchronous (Nm)\n                     and then Expander_Active\n+                    and then Get_PCS_Name /= Name_No_DSA\n                   then\n-                     RACW_Type_Is_Asynchronous (\n-                       Underlying_RACW_Type (Nm));\n+                     RACW_Type_Is_Asynchronous (Underlying_RACW_Type (Nm));\n                   end if;\n \n                else"}]}