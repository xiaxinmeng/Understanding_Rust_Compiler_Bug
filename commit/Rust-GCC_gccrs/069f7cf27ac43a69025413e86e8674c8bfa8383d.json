{"sha": "069f7cf27ac43a69025413e86e8674c8bfa8383d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDY5ZjdjZjI3YWM0M2E2OTAyNTQxM2U4NmU4Njc0YzhiZmE4MzgzZA==", "commit": {"author": {"name": "Mike Stump", "email": "mrs@wrs.com", "date": "1998-12-07T15:02:16Z"}, "committer": {"name": "Dave Brolley", "email": "brolley@gcc.gnu.org", "date": "1998-12-07T15:02:16Z"}, "message": "lex.c (check_newline): Add support for \\ as `natural' characters in file names in #line to be...\n\nMon Dec  7 17:56:06 1998  Mike Stump  <mrs@wrs.com>\n\t* lex.c (check_newline): Add support for \\ as `natural'\n\tcharacters in file names in #line to be consistent with #include\n\thandling.  We support escape prcessing in the # 1 \"...\" version of\n\tthe command.\n\nFrom-SVN: r24157", "tree": {"sha": "ee7188be5e313f899bb4e88ed3ae2d728900b185", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ee7188be5e313f899bb4e88ed3ae2d728900b185"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/069f7cf27ac43a69025413e86e8674c8bfa8383d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/069f7cf27ac43a69025413e86e8674c8bfa8383d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/069f7cf27ac43a69025413e86e8674c8bfa8383d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/069f7cf27ac43a69025413e86e8674c8bfa8383d/comments", "author": null, "committer": null, "parents": [{"sha": "c25d8793cce98e6abaaf9c44be1526aaabd54e43", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c25d8793cce98e6abaaf9c44be1526aaabd54e43", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c25d8793cce98e6abaaf9c44be1526aaabd54e43"}], "stats": {"total": 24, "additions": 21, "deletions": 3}, "files": [{"sha": "eff8c9626ecbf6dbe1e655b57cf30bba9766b6af", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/069f7cf27ac43a69025413e86e8674c8bfa8383d/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/069f7cf27ac43a69025413e86e8674c8bfa8383d/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=069f7cf27ac43a69025413e86e8674c8bfa8383d", "patch": "@@ -1,3 +1,10 @@\n+Mon Dec  7 17:56:06 1998  Mike Stump  <mrs@wrs.com>\n+\n+\t* lex.c (check_newline): Add support for \\ as `natural'\n+\tcharacters in file names in #line to be consistent with #include\n+\thandling.  We support escape prcessing in the # 1 \"...\" version of\n+\tthe command.  See also support in cp/lex.c.\n+\t\n 1998-12-07  Zack Weinberg  <zack@rabi.phys.columbia.edu>\n \n \t* cp/decl2.c: s/data/opts/ when initializing cpp_reader "}, {"sha": "48085bdaf3ac9ee1ee0f114ed9e1662e189120af", "filename": "gcc/cp/lex.c", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/069f7cf27ac43a69025413e86e8674c8bfa8383d/gcc%2Fcp%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/069f7cf27ac43a69025413e86e8674c8bfa8383d/gcc%2Fcp%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Flex.c?ref=069f7cf27ac43a69025413e86e8674c8bfa8383d", "patch": "@@ -2266,6 +2266,7 @@ check_newline ()\n {\n   register int c;\n   register int token;\n+  int saw_line = 0;\n \n   /* Read first nonwhite char on the line.  Do this before incrementing the\n      line number, in case we're at the end of saved text.  */\n@@ -2374,7 +2375,10 @@ check_newline ()\n \t      && getch () == 'n'\n \t      && getch () == 'e'\n \t      && ((c = getch ()) == ' ' || c == '\\t'))\n-\t    goto linenum;\n+\t    {\n+\t      saw_line = 1;\n+\t      goto linenum;\n+\t    }\n \t}\n       else if (c == 'i')\n \t{\n@@ -2471,9 +2475,16 @@ check_newline ()\n \n       /* More follows: it must be a string constant (filename).  */\n \n-      /* Read the string constant, but don't treat \\ as special.  */\n-      ignore_escape_flag = 1;\n+      if (saw_line)\n+\t{\n+\t  /* Don't treat \\ as special if we are processing #line 1 \"...\".\n+\t     If you want it to be treated specially, use # 1 \"...\".  */\n+\t  ignore_escape_flag = 1;\n+\t}\n+\n+      /* Read the string constant.  */\n       token = real_yylex ();\n+\n       ignore_escape_flag = 0;\n \n       if (token != STRING || TREE_CODE (yylval.ttype) != STRING_CST)"}]}