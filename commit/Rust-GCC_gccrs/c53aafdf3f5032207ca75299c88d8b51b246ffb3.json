{"sha": "c53aafdf3f5032207ca75299c88d8b51b246ffb3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzUzYWFmZGYzZjUwMzIyMDdjYTc1Mjk5Yzg4ZDhiNTFiMjQ2ZmZiMw==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "iant@google.com", "date": "2011-05-20T16:21:48Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-05-20T16:21:48Z"}, "message": "godump.c (go_output_typedef): Put enum constants in the macro hash table to avoid duplicate Go const definitions.\n\n\t* godump.c (go_output_typedef): Put enum constants in the macro\n\thash table to avoid duplicate Go const definitions.\n\nFrom-SVN: r173962", "tree": {"sha": "477d7dfdf8acac2f1c76b47ecb9d8ee700e5e095", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/477d7dfdf8acac2f1c76b47ecb9d8ee700e5e095"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c53aafdf3f5032207ca75299c88d8b51b246ffb3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c53aafdf3f5032207ca75299c88d8b51b246ffb3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c53aafdf3f5032207ca75299c88d8b51b246ffb3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c53aafdf3f5032207ca75299c88d8b51b246ffb3/comments", "author": null, "committer": null, "parents": [{"sha": "2691e6d7331f85344153a387be33b055c269fbca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2691e6d7331f85344153a387be33b055c269fbca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2691e6d7331f85344153a387be33b055c269fbca"}], "stats": {"total": 26, "additions": 23, "deletions": 3}, "files": [{"sha": "ea38f8edbc5fed7eb34937520664d85aebee2319", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c53aafdf3f5032207ca75299c88d8b51b246ffb3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c53aafdf3f5032207ca75299c88d8b51b246ffb3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c53aafdf3f5032207ca75299c88d8b51b246ffb3", "patch": "@@ -1,3 +1,8 @@\n+2011-05-20  Ian Lance Taylor  <iant@google.com>\n+\n+\t* godump.c (go_output_typedef): Put enum constants in the macro\n+\thash table to avoid duplicate Go const definitions.\n+\n 2011-05-20  Joseph Myers  <joseph@codesourcery.com>\n \n \t* Makefile.in (LIBDEPS): Add libcommon.a."}, {"sha": "4f83777bc9da9b3668550999f031cb728c915067", "filename": "gcc/godump.c", "status": "modified", "additions": 18, "deletions": 3, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c53aafdf3f5032207ca75299c88d8b51b246ffb3/gcc%2Fgodump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c53aafdf3f5032207ca75299c88d8b51b246ffb3/gcc%2Fgodump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgodump.c?ref=c53aafdf3f5032207ca75299c88d8b51b246ffb3", "patch": "@@ -844,9 +844,24 @@ go_output_typedef (struct godump_container *container, tree decl)\n       for (element = TYPE_VALUES (TREE_TYPE (decl));\n \t   element != NULL_TREE;\n \t   element = TREE_CHAIN (element))\n-\tfprintf (go_dump_file, \"const _%s = \" HOST_WIDE_INT_PRINT_DEC \"\\n\",\n-\t\t IDENTIFIER_POINTER (TREE_PURPOSE (element)),\n-\t\t tree_low_cst (TREE_VALUE (element), 0));\n+\t{\n+\t  const char *name;\n+\t  void **slot;\n+\n+\t  name = IDENTIFIER_POINTER (TREE_PURPOSE (element));\n+\n+\t  /* Sometimes a name will be defined as both an enum constant\n+\t     and a macro.  Avoid duplicate definition errors by\n+\t     treating enum constants as macros.  */\n+\t  slot = htab_find_slot (macro_hash, name, INSERT);\n+\t  if (*slot == NULL)\n+\t    {\n+\t      *slot = CONST_CAST (char *, name);\n+\t      fprintf (go_dump_file,\n+\t\t       \"const _%s = \" HOST_WIDE_INT_PRINT_DEC \"\\n\",\n+\t\t       name, tree_low_cst (TREE_VALUE (element), 0));\n+\t    }\n+\t}\n       pointer_set_insert (container->decls_seen, TREE_TYPE (decl));\n       if (TYPE_CANONICAL (TREE_TYPE (decl)) != NULL_TREE)\n \tpointer_set_insert (container->decls_seen,"}]}