{"sha": "85129ff10afef6c9686dd566b7e728bef7a2fdc3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODUxMjlmZjEwYWZlZjZjOTY4NmRkNTY2YjdlNzI4YmVmN2EyZmRjMw==", "commit": {"author": {"name": "Alexandre Oliva", "email": "oliva@adacore.com", "date": "2019-12-25T06:43:22Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2019-12-25T06:43:22Z"}, "message": "Define HAVE_ for math long double functions declared in vxworks headers\n\nWhen cross-building for vxworks, test for declarations of long double\nfunctions in math.h.  We don't normally test for these functions when\ncross compiling, because link tests don't work, or ever really, but\nnot defining them as available causes replacements to be defined in\nways that may cause duplicate definition linker errors if the units\ndefining both the replacement and the actual implementation are\nbrought in because of other symbols.\n\n\nfor libstdc++-v3/ChangeLog\n\n\t* crossconfig.m4 (GLIBCXX_CROSSCONFIG) [*-vxworks*]: Define\n\tlong double functions as available if declared by math.h.\n\t(GLIBCXX_CHECK_MATH_DECL, GLIBCXX_CHECK_MATH_DECLS): New.\n\t* configure: Rebuild.\n\nFrom-SVN: r279731", "tree": {"sha": "90effc097af1fd17ab3279ddfb6fe905de1f17cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/90effc097af1fd17ab3279ddfb6fe905de1f17cb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/85129ff10afef6c9686dd566b7e728bef7a2fdc3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85129ff10afef6c9686dd566b7e728bef7a2fdc3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85129ff10afef6c9686dd566b7e728bef7a2fdc3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85129ff10afef6c9686dd566b7e728bef7a2fdc3/comments", "author": null, "committer": null, "parents": [{"sha": "de0db05147815dc323c98ec9cd8b9c9ed58e2813", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de0db05147815dc323c98ec9cd8b9c9ed58e2813", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de0db05147815dc323c98ec9cd8b9c9ed58e2813"}], "stats": {"total": 1173, "additions": 1173, "deletions": 0}, "files": [{"sha": "947bfd2d92131313877abb7a93c0a4059d8b362a", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85129ff10afef6c9686dd566b7e728bef7a2fdc3/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85129ff10afef6c9686dd566b7e728bef7a2fdc3/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=85129ff10afef6c9686dd566b7e728bef7a2fdc3", "patch": "@@ -1,3 +1,10 @@\n+2019-12-25  Alexandre Oliva <oliva@adacore.com>\n+\n+\t* crossconfig.m4 (GLIBCXX_CROSSCONFIG) [*-vxworks*]: Define\n+\tlong double functions as available if declared by math.h.\n+\t(GLIBCXX_CHECK_MATH_DECL, GLIBCXX_CHECK_MATH_DECLS): New.\n+\t* configure: Rebuild.\n+\n 2019-12-20  Jonathan Wakely  <jwakely@redhat.com>\n \n \tPR libstdc++/92927"}, {"sha": "d96bd1457ec9006b0f3648c7acf76b8c2cf8c71a", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 1104, "deletions": 0, "changes": 1104, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85129ff10afef6c9686dd566b7e728bef7a2fdc3/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85129ff10afef6c9686dd566b7e728bef7a2fdc3/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=85129ff10afef6c9686dd566b7e728bef7a2fdc3", "patch": "@@ -72927,6 +72927,1110 @@ done\n \n     $as_echo \"#define HAVE_TANHF 1\" >>confdefs.h\n \n+\n+\n+\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for acosl declaration\" >&5\n+$as_echo_n \"checking for acosl declaration... \" >&6; }\n+if ${glibcxx_cv_func_acosl_use+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+\n+\n+      ac_ext=c\n+ac_cpp='$CPP $CPPFLAGS'\n+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_c_compiler_gnu\n+\n+      cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#include <math.h>\n+#ifdef HAVE_IEEEFP_H\n+# include <ieeefp.h>\n+#endif\n+\n+int\n+main ()\n+{\n+\n+  void (*f)(void) = (void (*)(void))acosl;\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  glibcxx_cv_func_acosl_use=yes\n+\n+else\n+  glibcxx_cv_func_acosl_use=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $glibcxx_cv_func_acosl_use\" >&5\n+$as_echo \"$glibcxx_cv_func_acosl_use\" >&6; }\n+  if test \"x$glibcxx_cv_func_acosl_use\" = xyes; then\n+    cat >>confdefs.h <<_ACEOF\n+#define HAVE_ACOSL 1\n+_ACEOF\n+\n+  fi\n+\n+\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for asinl declaration\" >&5\n+$as_echo_n \"checking for asinl declaration... \" >&6; }\n+if ${glibcxx_cv_func_asinl_use+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+\n+\n+      ac_ext=c\n+ac_cpp='$CPP $CPPFLAGS'\n+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_c_compiler_gnu\n+\n+      cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#include <math.h>\n+#ifdef HAVE_IEEEFP_H\n+# include <ieeefp.h>\n+#endif\n+\n+int\n+main ()\n+{\n+\n+  void (*f)(void) = (void (*)(void))asinl;\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  glibcxx_cv_func_asinl_use=yes\n+\n+else\n+  glibcxx_cv_func_asinl_use=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $glibcxx_cv_func_asinl_use\" >&5\n+$as_echo \"$glibcxx_cv_func_asinl_use\" >&6; }\n+  if test \"x$glibcxx_cv_func_asinl_use\" = xyes; then\n+    cat >>confdefs.h <<_ACEOF\n+#define HAVE_ASINL 1\n+_ACEOF\n+\n+  fi\n+\n+\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for atan2l declaration\" >&5\n+$as_echo_n \"checking for atan2l declaration... \" >&6; }\n+if ${glibcxx_cv_func_atan2l_use+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+\n+\n+      ac_ext=c\n+ac_cpp='$CPP $CPPFLAGS'\n+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_c_compiler_gnu\n+\n+      cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#include <math.h>\n+#ifdef HAVE_IEEEFP_H\n+# include <ieeefp.h>\n+#endif\n+\n+int\n+main ()\n+{\n+\n+  void (*f)(void) = (void (*)(void))atan2l;\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  glibcxx_cv_func_atan2l_use=yes\n+\n+else\n+  glibcxx_cv_func_atan2l_use=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $glibcxx_cv_func_atan2l_use\" >&5\n+$as_echo \"$glibcxx_cv_func_atan2l_use\" >&6; }\n+  if test \"x$glibcxx_cv_func_atan2l_use\" = xyes; then\n+    cat >>confdefs.h <<_ACEOF\n+#define HAVE_ATAN2L 1\n+_ACEOF\n+\n+  fi\n+\n+\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for atanl declaration\" >&5\n+$as_echo_n \"checking for atanl declaration... \" >&6; }\n+if ${glibcxx_cv_func_atanl_use+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+\n+\n+      ac_ext=c\n+ac_cpp='$CPP $CPPFLAGS'\n+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_c_compiler_gnu\n+\n+      cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#include <math.h>\n+#ifdef HAVE_IEEEFP_H\n+# include <ieeefp.h>\n+#endif\n+\n+int\n+main ()\n+{\n+\n+  void (*f)(void) = (void (*)(void))atanl;\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  glibcxx_cv_func_atanl_use=yes\n+\n+else\n+  glibcxx_cv_func_atanl_use=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $glibcxx_cv_func_atanl_use\" >&5\n+$as_echo \"$glibcxx_cv_func_atanl_use\" >&6; }\n+  if test \"x$glibcxx_cv_func_atanl_use\" = xyes; then\n+    cat >>confdefs.h <<_ACEOF\n+#define HAVE_ATANL 1\n+_ACEOF\n+\n+  fi\n+\n+\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for ceill declaration\" >&5\n+$as_echo_n \"checking for ceill declaration... \" >&6; }\n+if ${glibcxx_cv_func_ceill_use+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+\n+\n+      ac_ext=c\n+ac_cpp='$CPP $CPPFLAGS'\n+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_c_compiler_gnu\n+\n+      cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#include <math.h>\n+#ifdef HAVE_IEEEFP_H\n+# include <ieeefp.h>\n+#endif\n+\n+int\n+main ()\n+{\n+\n+  void (*f)(void) = (void (*)(void))ceill;\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  glibcxx_cv_func_ceill_use=yes\n+\n+else\n+  glibcxx_cv_func_ceill_use=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $glibcxx_cv_func_ceill_use\" >&5\n+$as_echo \"$glibcxx_cv_func_ceill_use\" >&6; }\n+  if test \"x$glibcxx_cv_func_ceill_use\" = xyes; then\n+    cat >>confdefs.h <<_ACEOF\n+#define HAVE_CEILL 1\n+_ACEOF\n+\n+  fi\n+\n+\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for cosl declaration\" >&5\n+$as_echo_n \"checking for cosl declaration... \" >&6; }\n+if ${glibcxx_cv_func_cosl_use+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+\n+\n+      ac_ext=c\n+ac_cpp='$CPP $CPPFLAGS'\n+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_c_compiler_gnu\n+\n+      cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#include <math.h>\n+#ifdef HAVE_IEEEFP_H\n+# include <ieeefp.h>\n+#endif\n+\n+int\n+main ()\n+{\n+\n+  void (*f)(void) = (void (*)(void))cosl;\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  glibcxx_cv_func_cosl_use=yes\n+\n+else\n+  glibcxx_cv_func_cosl_use=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $glibcxx_cv_func_cosl_use\" >&5\n+$as_echo \"$glibcxx_cv_func_cosl_use\" >&6; }\n+  if test \"x$glibcxx_cv_func_cosl_use\" = xyes; then\n+    cat >>confdefs.h <<_ACEOF\n+#define HAVE_COSL 1\n+_ACEOF\n+\n+  fi\n+\n+\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for coshl declaration\" >&5\n+$as_echo_n \"checking for coshl declaration... \" >&6; }\n+if ${glibcxx_cv_func_coshl_use+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+\n+\n+      ac_ext=c\n+ac_cpp='$CPP $CPPFLAGS'\n+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_c_compiler_gnu\n+\n+      cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#include <math.h>\n+#ifdef HAVE_IEEEFP_H\n+# include <ieeefp.h>\n+#endif\n+\n+int\n+main ()\n+{\n+\n+  void (*f)(void) = (void (*)(void))coshl;\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  glibcxx_cv_func_coshl_use=yes\n+\n+else\n+  glibcxx_cv_func_coshl_use=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $glibcxx_cv_func_coshl_use\" >&5\n+$as_echo \"$glibcxx_cv_func_coshl_use\" >&6; }\n+  if test \"x$glibcxx_cv_func_coshl_use\" = xyes; then\n+    cat >>confdefs.h <<_ACEOF\n+#define HAVE_COSHL 1\n+_ACEOF\n+\n+  fi\n+\n+\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for expl declaration\" >&5\n+$as_echo_n \"checking for expl declaration... \" >&6; }\n+if ${glibcxx_cv_func_expl_use+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+\n+\n+      ac_ext=c\n+ac_cpp='$CPP $CPPFLAGS'\n+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_c_compiler_gnu\n+\n+      cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#include <math.h>\n+#ifdef HAVE_IEEEFP_H\n+# include <ieeefp.h>\n+#endif\n+\n+int\n+main ()\n+{\n+\n+  void (*f)(void) = (void (*)(void))expl;\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  glibcxx_cv_func_expl_use=yes\n+\n+else\n+  glibcxx_cv_func_expl_use=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $glibcxx_cv_func_expl_use\" >&5\n+$as_echo \"$glibcxx_cv_func_expl_use\" >&6; }\n+  if test \"x$glibcxx_cv_func_expl_use\" = xyes; then\n+    cat >>confdefs.h <<_ACEOF\n+#define HAVE_EXPL 1\n+_ACEOF\n+\n+  fi\n+\n+\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for fabsl declaration\" >&5\n+$as_echo_n \"checking for fabsl declaration... \" >&6; }\n+if ${glibcxx_cv_func_fabsl_use+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+\n+\n+      ac_ext=c\n+ac_cpp='$CPP $CPPFLAGS'\n+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_c_compiler_gnu\n+\n+      cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#include <math.h>\n+#ifdef HAVE_IEEEFP_H\n+# include <ieeefp.h>\n+#endif\n+\n+int\n+main ()\n+{\n+\n+  void (*f)(void) = (void (*)(void))fabsl;\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  glibcxx_cv_func_fabsl_use=yes\n+\n+else\n+  glibcxx_cv_func_fabsl_use=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $glibcxx_cv_func_fabsl_use\" >&5\n+$as_echo \"$glibcxx_cv_func_fabsl_use\" >&6; }\n+  if test \"x$glibcxx_cv_func_fabsl_use\" = xyes; then\n+    cat >>confdefs.h <<_ACEOF\n+#define HAVE_FABSL 1\n+_ACEOF\n+\n+  fi\n+\n+\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for floorl declaration\" >&5\n+$as_echo_n \"checking for floorl declaration... \" >&6; }\n+if ${glibcxx_cv_func_floorl_use+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+\n+\n+      ac_ext=c\n+ac_cpp='$CPP $CPPFLAGS'\n+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_c_compiler_gnu\n+\n+      cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#include <math.h>\n+#ifdef HAVE_IEEEFP_H\n+# include <ieeefp.h>\n+#endif\n+\n+int\n+main ()\n+{\n+\n+  void (*f)(void) = (void (*)(void))floorl;\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  glibcxx_cv_func_floorl_use=yes\n+\n+else\n+  glibcxx_cv_func_floorl_use=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $glibcxx_cv_func_floorl_use\" >&5\n+$as_echo \"$glibcxx_cv_func_floorl_use\" >&6; }\n+  if test \"x$glibcxx_cv_func_floorl_use\" = xyes; then\n+    cat >>confdefs.h <<_ACEOF\n+#define HAVE_FLOORL 1\n+_ACEOF\n+\n+  fi\n+\n+\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for fmodl declaration\" >&5\n+$as_echo_n \"checking for fmodl declaration... \" >&6; }\n+if ${glibcxx_cv_func_fmodl_use+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+\n+\n+      ac_ext=c\n+ac_cpp='$CPP $CPPFLAGS'\n+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_c_compiler_gnu\n+\n+      cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#include <math.h>\n+#ifdef HAVE_IEEEFP_H\n+# include <ieeefp.h>\n+#endif\n+\n+int\n+main ()\n+{\n+\n+  void (*f)(void) = (void (*)(void))fmodl;\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  glibcxx_cv_func_fmodl_use=yes\n+\n+else\n+  glibcxx_cv_func_fmodl_use=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $glibcxx_cv_func_fmodl_use\" >&5\n+$as_echo \"$glibcxx_cv_func_fmodl_use\" >&6; }\n+  if test \"x$glibcxx_cv_func_fmodl_use\" = xyes; then\n+    cat >>confdefs.h <<_ACEOF\n+#define HAVE_FMODL 1\n+_ACEOF\n+\n+  fi\n+\n+\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for frexpl declaration\" >&5\n+$as_echo_n \"checking for frexpl declaration... \" >&6; }\n+if ${glibcxx_cv_func_frexpl_use+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+\n+\n+      ac_ext=c\n+ac_cpp='$CPP $CPPFLAGS'\n+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_c_compiler_gnu\n+\n+      cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#include <math.h>\n+#ifdef HAVE_IEEEFP_H\n+# include <ieeefp.h>\n+#endif\n+\n+int\n+main ()\n+{\n+\n+  void (*f)(void) = (void (*)(void))frexpl;\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  glibcxx_cv_func_frexpl_use=yes\n+\n+else\n+  glibcxx_cv_func_frexpl_use=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $glibcxx_cv_func_frexpl_use\" >&5\n+$as_echo \"$glibcxx_cv_func_frexpl_use\" >&6; }\n+  if test \"x$glibcxx_cv_func_frexpl_use\" = xyes; then\n+    cat >>confdefs.h <<_ACEOF\n+#define HAVE_FREXPL 1\n+_ACEOF\n+\n+  fi\n+\n+\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for ldexpl declaration\" >&5\n+$as_echo_n \"checking for ldexpl declaration... \" >&6; }\n+if ${glibcxx_cv_func_ldexpl_use+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+\n+\n+      ac_ext=c\n+ac_cpp='$CPP $CPPFLAGS'\n+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_c_compiler_gnu\n+\n+      cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#include <math.h>\n+#ifdef HAVE_IEEEFP_H\n+# include <ieeefp.h>\n+#endif\n+\n+int\n+main ()\n+{\n+\n+  void (*f)(void) = (void (*)(void))ldexpl;\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  glibcxx_cv_func_ldexpl_use=yes\n+\n+else\n+  glibcxx_cv_func_ldexpl_use=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $glibcxx_cv_func_ldexpl_use\" >&5\n+$as_echo \"$glibcxx_cv_func_ldexpl_use\" >&6; }\n+  if test \"x$glibcxx_cv_func_ldexpl_use\" = xyes; then\n+    cat >>confdefs.h <<_ACEOF\n+#define HAVE_LDEXPL 1\n+_ACEOF\n+\n+  fi\n+\n+\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for log10l declaration\" >&5\n+$as_echo_n \"checking for log10l declaration... \" >&6; }\n+if ${glibcxx_cv_func_log10l_use+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+\n+\n+      ac_ext=c\n+ac_cpp='$CPP $CPPFLAGS'\n+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_c_compiler_gnu\n+\n+      cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#include <math.h>\n+#ifdef HAVE_IEEEFP_H\n+# include <ieeefp.h>\n+#endif\n+\n+int\n+main ()\n+{\n+\n+  void (*f)(void) = (void (*)(void))log10l;\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  glibcxx_cv_func_log10l_use=yes\n+\n+else\n+  glibcxx_cv_func_log10l_use=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $glibcxx_cv_func_log10l_use\" >&5\n+$as_echo \"$glibcxx_cv_func_log10l_use\" >&6; }\n+  if test \"x$glibcxx_cv_func_log10l_use\" = xyes; then\n+    cat >>confdefs.h <<_ACEOF\n+#define HAVE_LOG10L 1\n+_ACEOF\n+\n+  fi\n+\n+\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for logl declaration\" >&5\n+$as_echo_n \"checking for logl declaration... \" >&6; }\n+if ${glibcxx_cv_func_logl_use+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+\n+\n+      ac_ext=c\n+ac_cpp='$CPP $CPPFLAGS'\n+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_c_compiler_gnu\n+\n+      cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#include <math.h>\n+#ifdef HAVE_IEEEFP_H\n+# include <ieeefp.h>\n+#endif\n+\n+int\n+main ()\n+{\n+\n+  void (*f)(void) = (void (*)(void))logl;\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  glibcxx_cv_func_logl_use=yes\n+\n+else\n+  glibcxx_cv_func_logl_use=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $glibcxx_cv_func_logl_use\" >&5\n+$as_echo \"$glibcxx_cv_func_logl_use\" >&6; }\n+  if test \"x$glibcxx_cv_func_logl_use\" = xyes; then\n+    cat >>confdefs.h <<_ACEOF\n+#define HAVE_LOGL 1\n+_ACEOF\n+\n+  fi\n+\n+\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for modfl declaration\" >&5\n+$as_echo_n \"checking for modfl declaration... \" >&6; }\n+if ${glibcxx_cv_func_modfl_use+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+\n+\n+      ac_ext=c\n+ac_cpp='$CPP $CPPFLAGS'\n+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_c_compiler_gnu\n+\n+      cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#include <math.h>\n+#ifdef HAVE_IEEEFP_H\n+# include <ieeefp.h>\n+#endif\n+\n+int\n+main ()\n+{\n+\n+  void (*f)(void) = (void (*)(void))modfl;\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  glibcxx_cv_func_modfl_use=yes\n+\n+else\n+  glibcxx_cv_func_modfl_use=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $glibcxx_cv_func_modfl_use\" >&5\n+$as_echo \"$glibcxx_cv_func_modfl_use\" >&6; }\n+  if test \"x$glibcxx_cv_func_modfl_use\" = xyes; then\n+    cat >>confdefs.h <<_ACEOF\n+#define HAVE_MODFL 1\n+_ACEOF\n+\n+  fi\n+\n+\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for powl declaration\" >&5\n+$as_echo_n \"checking for powl declaration... \" >&6; }\n+if ${glibcxx_cv_func_powl_use+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+\n+\n+      ac_ext=c\n+ac_cpp='$CPP $CPPFLAGS'\n+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_c_compiler_gnu\n+\n+      cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#include <math.h>\n+#ifdef HAVE_IEEEFP_H\n+# include <ieeefp.h>\n+#endif\n+\n+int\n+main ()\n+{\n+\n+  void (*f)(void) = (void (*)(void))powl;\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  glibcxx_cv_func_powl_use=yes\n+\n+else\n+  glibcxx_cv_func_powl_use=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $glibcxx_cv_func_powl_use\" >&5\n+$as_echo \"$glibcxx_cv_func_powl_use\" >&6; }\n+  if test \"x$glibcxx_cv_func_powl_use\" = xyes; then\n+    cat >>confdefs.h <<_ACEOF\n+#define HAVE_POWL 1\n+_ACEOF\n+\n+  fi\n+\n+\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for sinl declaration\" >&5\n+$as_echo_n \"checking for sinl declaration... \" >&6; }\n+if ${glibcxx_cv_func_sinl_use+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+\n+\n+      ac_ext=c\n+ac_cpp='$CPP $CPPFLAGS'\n+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_c_compiler_gnu\n+\n+      cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#include <math.h>\n+#ifdef HAVE_IEEEFP_H\n+# include <ieeefp.h>\n+#endif\n+\n+int\n+main ()\n+{\n+\n+  void (*f)(void) = (void (*)(void))sinl;\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  glibcxx_cv_func_sinl_use=yes\n+\n+else\n+  glibcxx_cv_func_sinl_use=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $glibcxx_cv_func_sinl_use\" >&5\n+$as_echo \"$glibcxx_cv_func_sinl_use\" >&6; }\n+  if test \"x$glibcxx_cv_func_sinl_use\" = xyes; then\n+    cat >>confdefs.h <<_ACEOF\n+#define HAVE_SINL 1\n+_ACEOF\n+\n+  fi\n+\n+\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for sinhl declaration\" >&5\n+$as_echo_n \"checking for sinhl declaration... \" >&6; }\n+if ${glibcxx_cv_func_sinhl_use+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+\n+\n+      ac_ext=c\n+ac_cpp='$CPP $CPPFLAGS'\n+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_c_compiler_gnu\n+\n+      cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#include <math.h>\n+#ifdef HAVE_IEEEFP_H\n+# include <ieeefp.h>\n+#endif\n+\n+int\n+main ()\n+{\n+\n+  void (*f)(void) = (void (*)(void))sinhl;\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  glibcxx_cv_func_sinhl_use=yes\n+\n+else\n+  glibcxx_cv_func_sinhl_use=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $glibcxx_cv_func_sinhl_use\" >&5\n+$as_echo \"$glibcxx_cv_func_sinhl_use\" >&6; }\n+  if test \"x$glibcxx_cv_func_sinhl_use\" = xyes; then\n+    cat >>confdefs.h <<_ACEOF\n+#define HAVE_SINHL 1\n+_ACEOF\n+\n+  fi\n+\n+\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for sqrtl declaration\" >&5\n+$as_echo_n \"checking for sqrtl declaration... \" >&6; }\n+if ${glibcxx_cv_func_sqrtl_use+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+\n+\n+      ac_ext=c\n+ac_cpp='$CPP $CPPFLAGS'\n+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_c_compiler_gnu\n+\n+      cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#include <math.h>\n+#ifdef HAVE_IEEEFP_H\n+# include <ieeefp.h>\n+#endif\n+\n+int\n+main ()\n+{\n+\n+  void (*f)(void) = (void (*)(void))sqrtl;\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  glibcxx_cv_func_sqrtl_use=yes\n+\n+else\n+  glibcxx_cv_func_sqrtl_use=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $glibcxx_cv_func_sqrtl_use\" >&5\n+$as_echo \"$glibcxx_cv_func_sqrtl_use\" >&6; }\n+  if test \"x$glibcxx_cv_func_sqrtl_use\" = xyes; then\n+    cat >>confdefs.h <<_ACEOF\n+#define HAVE_SQRTL 1\n+_ACEOF\n+\n+  fi\n+\n+\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for tanl declaration\" >&5\n+$as_echo_n \"checking for tanl declaration... \" >&6; }\n+if ${glibcxx_cv_func_tanl_use+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+\n+\n+      ac_ext=c\n+ac_cpp='$CPP $CPPFLAGS'\n+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_c_compiler_gnu\n+\n+      cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#include <math.h>\n+#ifdef HAVE_IEEEFP_H\n+# include <ieeefp.h>\n+#endif\n+\n+int\n+main ()\n+{\n+\n+  void (*f)(void) = (void (*)(void))tanl;\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  glibcxx_cv_func_tanl_use=yes\n+\n+else\n+  glibcxx_cv_func_tanl_use=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $glibcxx_cv_func_tanl_use\" >&5\n+$as_echo \"$glibcxx_cv_func_tanl_use\" >&6; }\n+  if test \"x$glibcxx_cv_func_tanl_use\" = xyes; then\n+    cat >>confdefs.h <<_ACEOF\n+#define HAVE_TANL 1\n+_ACEOF\n+\n+  fi\n+\n+\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for tanhl declaration\" >&5\n+$as_echo_n \"checking for tanhl declaration... \" >&6; }\n+if ${glibcxx_cv_func_tanhl_use+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+\n+\n+      ac_ext=c\n+ac_cpp='$CPP $CPPFLAGS'\n+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_c_compiler_gnu\n+\n+      cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#include <math.h>\n+#ifdef HAVE_IEEEFP_H\n+# include <ieeefp.h>\n+#endif\n+\n+int\n+main ()\n+{\n+\n+  void (*f)(void) = (void (*)(void))tanhl;\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  glibcxx_cv_func_tanhl_use=yes\n+\n+else\n+  glibcxx_cv_func_tanhl_use=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $glibcxx_cv_func_tanhl_use\" >&5\n+$as_echo \"$glibcxx_cv_func_tanhl_use\" >&6; }\n+  if test \"x$glibcxx_cv_func_tanhl_use\" = xyes; then\n+    cat >>confdefs.h <<_ACEOF\n+#define HAVE_TANHL 1\n+_ACEOF\n+\n+  fi\n+\n+\n+\n     ;;\n   *)\n     as_fn_error $? \"No support for this host/target combination.\" \"$LINENO\" 5"}, {"sha": "2a0cb0475e50922dd306a6561505fc98b167046b", "filename": "libstdc++-v3/crossconfig.m4", "status": "modified", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85129ff10afef6c9686dd566b7e728bef7a2fdc3/libstdc%2B%2B-v3%2Fcrossconfig.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85129ff10afef6c9686dd566b7e728bef7a2fdc3/libstdc%2B%2B-v3%2Fcrossconfig.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fcrossconfig.m4?ref=85129ff10afef6c9686dd566b7e728bef7a2fdc3", "patch": "@@ -291,9 +291,71 @@ case \"${host}\" in\n     AC_DEFINE(HAVE_SQRTF)\n     AC_DEFINE(HAVE_TANF)\n     AC_DEFINE(HAVE_TANHF)\n+\n+dnl # Different versions and execution modes implement different\n+dnl # subsets of these functions.  Instead of hard-coding, test for C\n+dnl # declarations in headers.  The C primitives could be defined as\n+dnl # macros, in which case the tests might fail, and we might have to\n+dnl # switch to more elaborate tests.\n+    GLIBCXX_CHECK_MATH_DECLS([\n+      acosl asinl atan2l atanl ceill cosl coshl expl fabsl floorl fmodl\n+      frexpl ldexpl log10l logl modfl powl sinl sinhl sqrtl tanl tanhl])\n+dnl # sincosl is the only one missing here, compared with the *l\n+dnl # functions in the list guarded by\n+dnl # long_double_math_on_this_cpu in configure.ac, right after\n+dnl # the expansion of the present macro.\n     ;;\n   *)\n     AC_MSG_ERROR([No support for this host/target combination.])\n    ;;\n esac\n ])\n+\n+\n+dnl\n+dnl Check to see if the (math function) argument passed is\n+dnl declared when using the c compiler\n+dnl\n+dnl Define HAVE_CARGF etc if \"cargf\" is declared\n+dnl\n+dnl argument 1 is name of function to check\n+dnl\n+dnl ASSUMES argument is a math function\n+dnl\n+dnl GLIBCXX_CHECK_MATH_DECL\n+AC_DEFUN([GLIBCXX_CHECK_MATH_DECL], [\n+  AC_CACHE_CHECK([for $1 declaration],\n+    [glibcxx_cv_func_$1_use], [\n+      AC_LANG_SAVE\n+      AC_LANG_C\n+      AC_TRY_COMPILE([\n+#include <math.h>\n+#ifdef HAVE_IEEEFP_H\n+# include <ieeefp.h>\n+#endif\n+], [\n+  void (*f)(void) = (void (*)(void))$1;\n+], [glibcxx_cv_func_$1_use=yes\n+], [glibcxx_cv_func_$1_use=no])])\n+  if test \"x$glibcxx_cv_func_$1_use\" = xyes; then\n+    AC_DEFINE_UNQUOTED(AS_TR_CPP([HAVE_$1]))\n+  fi\n+])\n+\n+dnl\n+dnl Check to see whether multiple math functions are\n+dnl declared when using the c compiler\n+dnl\n+dnl Define HAVE_CARGF HAVE_POWL etc if \"cargf\" and \"powl\"\n+dnl are declared\n+dnl\n+dnl argument 1 is a word list naming function to check\n+dnl\n+dnl ASSUMES arguments are math functions\n+dnl\n+dnl GLIBCXX_CHECK_MATH_DECLS\n+AC_DEFUN([GLIBCXX_CHECK_MATH_DECLS], [\n+  m4_foreach_w([glibcxx_func], [$1], [\n+    GLIBCXX_CHECK_MATH_DECL(glibcxx_func)\n+  ])\n+])"}]}