{"sha": "0fc920c8d5c613361270c60ecd4841e3af7f6a62", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGZjOTIwYzhkNWM2MTMzNjEyNzBjNjBlY2Q0ODQxZTNhZjdmNmE2Mg==", "commit": {"author": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2004-04-20T13:43:35Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2004-04-20T13:43:35Z"}, "message": "[multiple changes]\n\n2004-04-20  Jeroen Frijters  <jeroen@frijters.net>\n\n\t* java/io/FileDescriptor.java: (FileDescriptor) Added public\n\tconstructor. (valid) Added null check.\n\n2004-04-20  Guilhem Lavaux <guilhem@kaffe.org>\n\n        Reported by Nektarios Papadopoulos <npapadop@inaccessnetworks.com>\n\t* java/io/FileOutputStream.java\n\t(FileOutputStream) Reorganized constructors. Constructors now\n\tcheck whether the given path is directory.\n\nFrom-SVN: r80901", "tree": {"sha": "7e4bc2de07ebff904c9e32b5f47d40e91f0a6395", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7e4bc2de07ebff904c9e32b5f47d40e91f0a6395"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0fc920c8d5c613361270c60ecd4841e3af7f6a62", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fc920c8d5c613361270c60ecd4841e3af7f6a62", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0fc920c8d5c613361270c60ecd4841e3af7f6a62", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fc920c8d5c613361270c60ecd4841e3af7f6a62/comments", "author": null, "committer": null, "parents": [{"sha": "f6d49f66ec0e0a59285d304720cc3bfa18f28141", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6d49f66ec0e0a59285d304720cc3bfa18f28141", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6d49f66ec0e0a59285d304720cc3bfa18f28141"}], "stats": {"total": 44, "additions": 34, "deletions": 10}, "files": [{"sha": "84a66b1392ca1f76da747d7c1d0d863b411ecd1f", "filename": "libjava/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fc920c8d5c613361270c60ecd4841e3af7f6a62/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fc920c8d5c613361270c60ecd4841e3af7f6a62/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=0fc920c8d5c613361270c60ecd4841e3af7f6a62", "patch": "@@ -1,3 +1,15 @@\n+2004-04-20  Jeroen Frijters  <jeroen@frijters.net>\n+\n+\t* java/io/FileDescriptor.java: (FileDescriptor) Added public\n+\tconstructor. (valid) Added null check.\n+\n+2004-04-20  Guilhem Lavaux <guilhem@kaffe.org>\n+\n+        Reported by Nektarios Papadopoulos <npapadop@inaccessnetworks.com>\n+\t* java/io/FileOutputStream.java\n+\t(FileOutputStream) Reorganized constructors. Constructors now\n+\tcheck whether the given path is directory.\n+\n 2004-04-20  Michael Koch  <konqueror@gmx.de>\n \n \t* java/net/Authenticator.java,"}, {"sha": "35a478509fc1efbee7af562d7293bbd444ee1d5a", "filename": "libjava/java/io/FileDescriptor.java", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fc920c8d5c613361270c60ecd4841e3af7f6a62/libjava%2Fjava%2Fio%2FFileDescriptor.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fc920c8d5c613361270c60ecd4841e3af7f6a62/libjava%2Fjava%2Fio%2FFileDescriptor.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FFileDescriptor.java?ref=0fc920c8d5c613361270c60ecd4841e3af7f6a62", "patch": "@@ -83,6 +83,14 @@\n   /**\n    * This method is used to initialize an invalid FileDescriptor object.\n    */\n+  public FileDescriptor()\n+  {\n+    channel = null;\n+  }\n+\n+  /**\n+   * This method is used to initialize a FileDescriptor object.\n+   */\n   FileDescriptor(ByteChannel channel)\n   {\n     this.channel = channel;\n@@ -125,6 +133,6 @@ public void sync () throws SyncFailedException\n    */\n   public boolean valid ()\n   {\n-    return channel.isOpen();\n+    return channel != null && channel.isOpen();\n   }\n }"}, {"sha": "8942871e43aa6c7833dfcad9ff98e4b51a44c236", "filename": "libjava/java/io/FileOutputStream.java", "status": "modified", "additions": 13, "deletions": 9, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fc920c8d5c613361270c60ecd4841e3af7f6a62/libjava%2Fjava%2Fio%2FFileOutputStream.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fc920c8d5c613361270c60ecd4841e3af7f6a62/libjava%2Fjava%2Fio%2FFileOutputStream.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FFileOutputStream.java?ref=0fc920c8d5c613361270c60ecd4841e3af7f6a62", "patch": "@@ -81,13 +81,7 @@ public class FileOutputStream extends OutputStream\n   public FileOutputStream (String path, boolean append)\n     throws SecurityException, FileNotFoundException\n   {\n-    SecurityManager s = System.getSecurityManager();\n-    if (s != null)\n-      s.checkWrite(path);\n-    ch = new FileChannelImpl (path, (append\n-\t\t\t\t     ? FileChannelImpl.WRITE\n-\t\t\t\t     | FileChannelImpl.APPEND\n-\t\t\t\t     : FileChannelImpl.WRITE));\n+    this (new File(path), append);\n   }\n \n   /**\n@@ -130,7 +124,7 @@ public FileOutputStream (String path)\n   public FileOutputStream (File file)\n     throws SecurityException, FileNotFoundException\n   {\n-    this (file.getPath(), false);\n+    this (file, false);\n   }\n \n   /**\n@@ -156,7 +150,17 @@ public FileOutputStream (File file)\n   public FileOutputStream (File file, boolean append)\n     throws FileNotFoundException\n   {\n-    this (file.getPath(), append);\n+    SecurityManager s = System.getSecurityManager();\n+    if (s != null)\n+      s.checkWrite(file.getPath());\n+\n+    if (file.isDirectory())\n+      throw new FileNotFoundException(file.getPath() + \" is a directory\");\n+\n+   ch = new FileChannelImpl (file.getPath(), (append\n+\t\t\t\t     ? FileChannelImpl.WRITE\n+\t\t\t\t     | FileChannelImpl.APPEND\n+\t\t\t\t     : FileChannelImpl.WRITE));\n   }\n \n   /**"}]}