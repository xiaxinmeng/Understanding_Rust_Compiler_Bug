{"sha": "c62c54419cf1bcdebbe2313b509e1892b85832d0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzYyYzU0NDE5Y2YxYmNkZWJiZTIzMTNiNTA5ZTE4OTJiODU4MzJkMA==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@gmail.com", "date": "2011-11-04T21:05:46Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2011-11-04T21:05:46Z"}, "message": "reload1.c (gen_reload): Don't use REGNO on SUBREGs.\n\n\t* reload1.c (gen_reload): Don't use REGNO on SUBREGs.\n\t* print-rtl.c (print_rtx): Don't segfault on negative regno.\n\nFrom-SVN: r180983", "tree": {"sha": "53b6e7dea7473fd468fa2d51f8e7aa9570360c7b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/53b6e7dea7473fd468fa2d51f8e7aa9570360c7b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c62c54419cf1bcdebbe2313b509e1892b85832d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c62c54419cf1bcdebbe2313b509e1892b85832d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c62c54419cf1bcdebbe2313b509e1892b85832d0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c62c54419cf1bcdebbe2313b509e1892b85832d0/comments", "author": {"login": "amodra", "id": 6006325, "node_id": "MDQ6VXNlcjYwMDYzMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amodra", "html_url": "https://github.com/amodra", "followers_url": "https://api.github.com/users/amodra/followers", "following_url": "https://api.github.com/users/amodra/following{/other_user}", "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}", "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amodra/subscriptions", "organizations_url": "https://api.github.com/users/amodra/orgs", "repos_url": "https://api.github.com/users/amodra/repos", "events_url": "https://api.github.com/users/amodra/events{/privacy}", "received_events_url": "https://api.github.com/users/amodra/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7a83e5bc5546183af6934f623a568b11cca63f78", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a83e5bc5546183af6934f623a568b11cca63f78", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a83e5bc5546183af6934f623a568b11cca63f78"}], "stats": {"total": 16, "additions": 10, "deletions": 6}, "files": [{"sha": "2b9e5b35d18ea39d2d867c145d16fd9413a700b3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c62c54419cf1bcdebbe2313b509e1892b85832d0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c62c54419cf1bcdebbe2313b509e1892b85832d0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c62c54419cf1bcdebbe2313b509e1892b85832d0", "patch": "@@ -1,3 +1,8 @@\n+2011-11-05  Alan Modra  <amodra@gmail.com>\n+\n+\t* reload1.c (gen_reload): Don't use REGNO on SUBREGs.\n+\t* print-rtl.c (print_rtx): Don't segfault on negative regno.\n+\n 2011-11-03  David S. Miller  <davem@davemloft.net>\n \n \tPR target/49965"}, {"sha": "edeeefa6071c6f9ecd61c1c87deb40e37353120a", "filename": "gcc/print-rtl.c", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c62c54419cf1bcdebbe2313b509e1892b85832d0/gcc%2Fprint-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c62c54419cf1bcdebbe2313b509e1892b85832d0/gcc%2Fprint-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprint-rtl.c?ref=c62c54419cf1bcdebbe2313b509e1892b85832d0", "patch": "@@ -466,11 +466,10 @@ print_rtx (const_rtx in_rtx)\n \t    const char *name;\n \n #ifndef GENERATOR_FILE\n-\t    if (REG_P (in_rtx) && value < FIRST_PSEUDO_REGISTER)\n-\t      fprintf (outfile, \" %d %s\", REGNO (in_rtx),\n-\t\t       reg_names[REGNO (in_rtx)]);\n+\t    if (REG_P (in_rtx) && (unsigned) value < FIRST_PSEUDO_REGISTER)\n+\t      fprintf (outfile, \" %d %s\", value, reg_names[value]);\n \t    else if (REG_P (in_rtx)\n-\t\t     && value <= LAST_VIRTUAL_REGISTER)\n+\t\t     && (unsigned) value <= LAST_VIRTUAL_REGISTER)\n \t      {\n \t\tif (value == VIRTUAL_INCOMING_ARGS_REGNUM)\n \t\t  fprintf (outfile, \" %d virtual-incoming-args\", value);"}, {"sha": "c9fb57baa4cc99924fc350fa4f236bcf2f4cd577", "filename": "gcc/reload1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c62c54419cf1bcdebbe2313b509e1892b85832d0/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c62c54419cf1bcdebbe2313b509e1892b85832d0/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=c62c54419cf1bcdebbe2313b509e1892b85832d0", "patch": "@@ -8601,10 +8601,10 @@ gen_reload (rtx out, rtx in, int opnum, enum reload_type type)\n       rtx loc = get_secondary_mem (in, GET_MODE (out), opnum, type);\n \n       if (GET_MODE (loc) != GET_MODE (out))\n-\tout = gen_rtx_REG (GET_MODE (loc), REGNO (out));\n+\tout = gen_rtx_REG (GET_MODE (loc), reg_or_subregno (out));\n \n       if (GET_MODE (loc) != GET_MODE (in))\n-\tin = gen_rtx_REG (GET_MODE (loc), REGNO (in));\n+\tin = gen_rtx_REG (GET_MODE (loc), reg_or_subregno (in));\n \n       gen_reload (loc, in, opnum, type);\n       gen_reload (out, loc, opnum, type);"}]}