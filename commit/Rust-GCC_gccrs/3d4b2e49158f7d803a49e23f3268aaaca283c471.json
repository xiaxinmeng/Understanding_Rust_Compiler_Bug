{"sha": "3d4b2e49158f7d803a49e23f3268aaaca283c471", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2Q0YjJlNDkxNThmN2Q4MDNhNDllMjNmMzI2OGFhYWNhMjgzYzQ3MQ==", "commit": {"author": {"name": "Mark Wielaard", "email": "mark@klomp.org", "date": "2017-11-23T16:56:05Z"}, "committer": {"name": "Mark Wielaard", "email": "mark@gcc.gnu.org", "date": "2017-11-23T16:56:05Z"}, "message": "Fix .debug_rnglists generation with -gdwarf-5 -gsplit-dwarf.\n\nEarly debug broke generation of .debug_rnglists when using both -gdwarf5\nand -gsplit-dwarf. It introduces a generation for init_sections_and_labels,\nbut doesn't account for the generation of up to 4 unique ranges labels,\ntwo created in init_sections_and_labels and two in output_rnglists.\nFix this by passing generation to output_rnglists and creating 4 unique\nlabels per generation.\n\nWithout this fix using -gdwarf-5 -gsplit-dwarf could result in:\n  Error: symbol `.Ldebug_ranges2' is already defined\n\ngcc/ChangeLog:\n\n       * dwarf2out.c (init_sections_and_labels): Use generation to create\n       unique ranges_section_label and ranges_base_label. Return generation.\n       (output_rnglists): Add generation argument. Use generation to create\n       unique ranges labels.\n       (dwarf2out_finish): Get generation from init_sections_and_labels\n       and pass generation to output_rnglists.\n\nFrom-SVN: r255107", "tree": {"sha": "20b0036bfb2a306e60a4b61ef1fb2ab48adec8fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/20b0036bfb2a306e60a4b61ef1fb2ab48adec8fd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3d4b2e49158f7d803a49e23f3268aaaca283c471", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d4b2e49158f7d803a49e23f3268aaaca283c471", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d4b2e49158f7d803a49e23f3268aaaca283c471", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d4b2e49158f7d803a49e23f3268aaaca283c471/comments", "author": null, "committer": null, "parents": [{"sha": "ac9effeda3bb29c0adcd8834b45b6e5613413049", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac9effeda3bb29c0adcd8834b45b6e5613413049", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac9effeda3bb29c0adcd8834b45b6e5613413049"}], "stats": {"total": 36, "additions": 27, "deletions": 9}, "files": [{"sha": "7986f134a618af6d832332d020ef488d9b5c0330", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d4b2e49158f7d803a49e23f3268aaaca283c471/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d4b2e49158f7d803a49e23f3268aaaca283c471/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3d4b2e49158f7d803a49e23f3268aaaca283c471", "patch": "@@ -1,3 +1,12 @@\n+2017-11-23  Mark Wielaard  <mark@klomp.org>\n+\n+\t* dwarf2out.c (init_sections_and_labels): Use generation to create\n+\tunique ranges_section_label and ranges_base_label. Return generation.\n+\t(output_rnglists): Add generation argument. Use generation to create\n+\tunique ranges labels.\n+\t(dwarf2out_finish): Get generation from init_sections_and_labels\n+\tand pass generation to output_rnglists.\n+\n 2017-11-23  Mike Stump  <mikestump@comcast.net>\n             Eric Botcazou  <ebotcazou@adacore.com>\n "}, {"sha": "ae3d962526c24f3ebe2170970de5844875865292", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 18, "deletions": 9, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d4b2e49158f7d803a49e23f3268aaaca283c471/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d4b2e49158f7d803a49e23f3268aaaca283c471/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=3d4b2e49158f7d803a49e23f3268aaaca283c471", "patch": "@@ -11182,7 +11182,7 @@ index_rnglists (void)\n /* Emit .debug_rnglists section.  */\n \n static void\n-output_rnglists (void)\n+output_rnglists (unsigned generation)\n {\n   unsigned i;\n   dw_ranges *r;\n@@ -11192,8 +11192,12 @@ output_rnglists (void)\n \n   switch_to_section (debug_ranges_section);\n   ASM_OUTPUT_LABEL (asm_out_file, ranges_section_label);\n-  ASM_GENERATE_INTERNAL_LABEL (l1, DEBUG_RANGES_SECTION_LABEL, 2);\n-  ASM_GENERATE_INTERNAL_LABEL (l2, DEBUG_RANGES_SECTION_LABEL, 3);\n+  /* There are up to 4 unique ranges labels per generation.\n+     See also init_sections_and_labels.  */\n+  ASM_GENERATE_INTERNAL_LABEL (l1, DEBUG_RANGES_SECTION_LABEL,\n+\t\t\t       2 + generation * 4);\n+  ASM_GENERATE_INTERNAL_LABEL (l2, DEBUG_RANGES_SECTION_LABEL,\n+\t\t\t       3 + generation * 4);\n   if (DWARF_INITIAL_LENGTH_SIZE - DWARF_OFFSET_SIZE == 4)\n     dw2_asm_output_data (4, 0xffffffff,\n \t\t\t \"Initial length escape value indicating \"\n@@ -27261,9 +27265,10 @@ output_macinfo (const char *debug_line_label, bool early_lto_debug)\n }\n \n /* Initialize the various sections and labels for dwarf output and prefix\n-   them with PREFIX if non-NULL.  */\n+   them with PREFIX if non-NULL.  Returns the generation (zero based\n+   number of times function was called).  */\n \n-static void\n+static unsigned\n init_sections_and_labels (bool early_lto_debug)\n {\n   /* As we may get called multiple times have a generation count for\n@@ -27442,11 +27447,14 @@ init_sections_and_labels (bool early_lto_debug)\n   info_section_emitted = false;\n   ASM_GENERATE_INTERNAL_LABEL (debug_line_section_label,\n \t\t\t       DEBUG_LINE_SECTION_LABEL, generation);\n+  /* There are up to 4 unique ranges labels per generation.\n+     See also output_rnglists.  */\n   ASM_GENERATE_INTERNAL_LABEL (ranges_section_label,\n-\t\t\t       DEBUG_RANGES_SECTION_LABEL, generation);\n+\t\t\t       DEBUG_RANGES_SECTION_LABEL, generation * 4);\n   if (dwarf_version >= 5 && dwarf_split_debug_info)\n     ASM_GENERATE_INTERNAL_LABEL (ranges_base_label,\n-\t\t\t\t DEBUG_RANGES_SECTION_LABEL, 2 + generation);\n+\t\t\t\t DEBUG_RANGES_SECTION_LABEL,\n+\t\t\t\t 1 + generation * 4);\n   ASM_GENERATE_INTERNAL_LABEL (debug_addr_section_label,\n \t\t\t       DEBUG_ADDR_SECTION_LABEL, generation);\n   ASM_GENERATE_INTERNAL_LABEL (macinfo_section_label,\n@@ -27457,6 +27465,7 @@ init_sections_and_labels (bool early_lto_debug)\n \t\t\t       generation);\n \n   ++generation;\n+  return generation - 1;\n }\n \n /* Set up for Dwarf output at the start of compilation.  */\n@@ -29890,7 +29899,7 @@ dwarf2out_finish (const char *)\n   move_marked_base_types ();\n \n   /* Initialize sections and labels used for actual assembler output.  */\n-  init_sections_and_labels (false);\n+  unsigned generation = init_sections_and_labels (false);\n \n   /* Traverse the DIE's and add sibling attributes to those DIE's that\n      have children.  */\n@@ -30179,7 +30188,7 @@ dwarf2out_finish (const char *)\n   if (!vec_safe_is_empty (ranges_table))\n     {\n       if (dwarf_version >= 5)\n-\toutput_rnglists ();\n+\toutput_rnglists (generation);\n       else\n \toutput_ranges ();\n     }"}]}