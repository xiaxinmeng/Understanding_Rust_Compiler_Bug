{"sha": "bd881d83c11fa1d8779e076708ef72be6fc2dbe7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmQ4ODFkODNjMTFmYTFkODc3OWUwNzY3MDhlZjcyYmU2ZmMyZGJlNw==", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2021-04-06T11:11:09Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-06-29T14:23:48Z"}, "message": "[Ada] Fix style in Get_Fullest_View\n\ngcc/ada/\n\n\t* sem_util.ads (Get_Fullest_View): Refill comment; remove extra\n\textra after period.\n\t* sem_util.adb (Get_Fullest_View): Fix style.", "tree": {"sha": "d1ae451c94ec9629a7bc16da5f333be6efb13a3a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d1ae451c94ec9629a7bc16da5f333be6efb13a3a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bd881d83c11fa1d8779e076708ef72be6fc2dbe7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd881d83c11fa1d8779e076708ef72be6fc2dbe7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd881d83c11fa1d8779e076708ef72be6fc2dbe7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd881d83c11fa1d8779e076708ef72be6fc2dbe7/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "afea7b3dc2c85604167debac55cc736689b994ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afea7b3dc2c85604167debac55cc736689b994ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/afea7b3dc2c85604167debac55cc736689b994ad"}], "stats": {"total": 18, "additions": 11, "deletions": 7}, "files": [{"sha": "0d5095263141d201125063da6189b08eef76d6f1", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd881d83c11fa1d8779e076708ef72be6fc2dbe7/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd881d83c11fa1d8779e076708ef72be6fc2dbe7/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=bd881d83c11fa1d8779e076708ef72be6fc2dbe7", "patch": "@@ -10772,22 +10772,26 @@ package body Sem_Util is\n          when E_Class_Wide_Type =>\n             return Get_Fullest_View (Root_Type (E), Include_PAT);\n \n-         when  E_Class_Wide_Subtype =>\n+         when E_Class_Wide_Subtype =>\n             if Present (Equivalent_Type (E)) then\n                return Get_Fullest_View (Equivalent_Type (E), Include_PAT);\n             elsif Present (Cloned_Subtype (E)) then\n                return Get_Fullest_View (Cloned_Subtype (E), Include_PAT);\n             end if;\n \n-         when E_Protected_Type | E_Protected_Subtype\n-            | E_Task_Type |  E_Task_Subtype =>\n+         when E_Protected_Subtype\n+            | E_Protected_Type\n+            | E_Task_Subtype\n+            | E_Task_Type\n+         =>\n             if Present (Corresponding_Record_Type (E)) then\n                return Get_Fullest_View (Corresponding_Record_Type (E),\n                                         Include_PAT);\n             end if;\n \n          when E_Access_Protected_Subprogram_Type\n-            | E_Anonymous_Access_Protected_Subprogram_Type =>\n+            | E_Anonymous_Access_Protected_Subprogram_Type\n+         =>\n             if Present (Equivalent_Type (E)) then\n                return Get_Fullest_View (Equivalent_Type (E), Include_PAT);\n             end if;"}, {"sha": "10375ff9563f7b95eb660f536750ec0e6cbf7e2b", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd881d83c11fa1d8779e076708ef72be6fc2dbe7/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd881d83c11fa1d8779e076708ef72be6fc2dbe7/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=bd881d83c11fa1d8779e076708ef72be6fc2dbe7", "patch": "@@ -1328,9 +1328,9 @@ package Sem_Util is\n \n    function Get_Fullest_View\n      (E : Entity_Id; Include_PAT : Boolean := True) return Entity_Id;\n-   --  Get the fullest possible view of E, looking through private,\n-   --  limited, packed array and other implementation types.  If Include_PAT\n-   --  is False, don't look inside packed array types.\n+   --  Get the fullest possible view of E, looking through private, limited,\n+   --  packed array and other implementation types. If Include_PAT is False,\n+   --  don't look inside packed array types.\n \n    function Has_Access_Values (T : Entity_Id) return Boolean;\n    --  Returns true if the underlying type of T is an access type, or has a"}]}