{"sha": "1bbee75bcc0d3948fb1e55da6a3547cddeb000a0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWJiZWU3NWJjYzBkMzk0OGZiMWU1NWRhNmEzNTQ3Y2RkZWIwMDBhMA==", "commit": {"author": {"name": "Bryce McKinlay", "email": "bryce@albatross.co.nz", "date": "2000-07-05T01:13:03Z"}, "committer": {"name": "Bryce McKinlay", "email": "bryce@gcc.gnu.org", "date": "2000-07-05T01:13:03Z"}, "message": "gjavah.c (HANDLE_METHOD): Call print_method_info with a NULL stream argument on the first pass for CNI as...\n\n        * gjavah.c (HANDLE_METHOD): Call print_method_info with a NULL\n\tstream argument on the first pass for CNI as well as JNI.\n        (print_method_info): Set up method name on the first pass only.\n\nFrom-SVN: r34869", "tree": {"sha": "bf10374ec70a8e768334fa209b3f36b58a2f7e16", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bf10374ec70a8e768334fa209b3f36b58a2f7e16"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1bbee75bcc0d3948fb1e55da6a3547cddeb000a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1bbee75bcc0d3948fb1e55da6a3547cddeb000a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1bbee75bcc0d3948fb1e55da6a3547cddeb000a0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1bbee75bcc0d3948fb1e55da6a3547cddeb000a0/comments", "author": null, "committer": null, "parents": [{"sha": "043afb2a089d22e59dd0a6e9d4bb2ca3aa342432", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/043afb2a089d22e59dd0a6e9d4bb2ca3aa342432", "html_url": "https://github.com/Rust-GCC/gccrs/commit/043afb2a089d22e59dd0a6e9d4bb2ca3aa342432"}], "stats": {"total": 30, "additions": 20, "deletions": 10}, "files": [{"sha": "e7e2e0bf3772ffa9b923d8ce6e22f03012648422", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bbee75bcc0d3948fb1e55da6a3547cddeb000a0/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bbee75bcc0d3948fb1e55da6a3547cddeb000a0/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=1bbee75bcc0d3948fb1e55da6a3547cddeb000a0", "patch": "@@ -1,3 +1,9 @@\n+2000-07-02  Bryce McKinlay  <bryce@albatross.co.nz>\n+\n+        * gjavah.c (HANDLE_METHOD): Call print_method_info with a NULL stream\n+        argument on the first pass for CNI as well as JNI.\n+        (print_method_info): Set up method name on the first pass only.\n+\t\n 2000-06-29  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n \t* jcf-write.c (push_long_const): Appropriately cast short negative"}, {"sha": "b8a37f72b2665ba82280c5b0034281b21e981982", "filename": "gcc/java/gjavah.c", "status": "modified", "additions": 14, "deletions": 10, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bbee75bcc0d3948fb1e55da6a3547cddeb000a0/gcc%2Fjava%2Fgjavah.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bbee75bcc0d3948fb1e55da6a3547cddeb000a0/gcc%2Fjava%2Fgjavah.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fgjavah.c?ref=1bbee75bcc0d3948fb1e55da6a3547cddeb000a0", "patch": "@@ -189,9 +189,12 @@ static int method_printed = 0;\n       if (out)\t\t\t\t\t\t\t\t      \\\n         print_method_info (out, jcf, NAME, SIGNATURE, ACCESS_FLAGS);\t      \\\n     }\t\t\t\t\t\t\t\t\t      \\\n-  else if (flag_jni)\t\t\t\t\t\t\t      \\\n-    print_method_info (NULL, jcf, NAME, SIGNATURE, ACCESS_FLAGS);\t      \\\n-  else if (! stubs) add_class_decl (out, jcf, SIGNATURE);\n+  else                                                                       \\\n+    {                                                                        \\\n+      print_method_info (NULL, jcf, NAME, SIGNATURE, ACCESS_FLAGS);          \\\n+      if (! stubs && ! flag_jni)                                             \\\n+       add_class_decl (out, jcf, SIGNATURE);                                 \\\n+    }\n \n #define HANDLE_CODE_ATTRIBUTE(MAX_STACK, MAX_LOCALS, CODE_LENGTH) \\\n   if (out && method_declared) decompile_method (out, jcf, CODE_LENGTH);\n@@ -665,6 +668,7 @@ DEFUN(print_field_info, (stream, jcf, name_index, sig_index, flags),\n     free (override);\n }\n \n+\n static void\n DEFUN(print_method_info, (stream, jcf, name_index, sig_index, flags),\n       FILE *stream AND JCF* jcf\n@@ -700,7 +704,10 @@ DEFUN(print_method_info, (stream, jcf, name_index, sig_index, flags),\n       else\n \treturn;\n     }\n-  else\n+\n+  /* During the first method pass, build a list of method names. This will\n+  be used to determine if field names conflict with method names. */\n+  if (! stream)\n     {\n       struct method_name *nn;\n \n@@ -714,14 +721,11 @@ DEFUN(print_method_info, (stream, jcf, name_index, sig_index, flags),\n       memcpy (nn->signature, JPOOL_UTF_DATA (jcf, sig_index),\n \t      nn->sig_length);\n       method_name_list = nn;\n+      \n+      /* The rest of this function doesn't matter. */\n+      return;\n     }\n \n-  /* If we're not printing, then the rest of this function doesn't\n-     matter.  This happens during the first method pass in JNI mode.\n-     Eww.  */\n-  if (! stream)\n-    return;\n-\n   /* We don't worry about overrides in JNI mode.  */\n   if (! flag_jni)\n     {"}]}