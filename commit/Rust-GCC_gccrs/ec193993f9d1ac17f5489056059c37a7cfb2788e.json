{"sha": "ec193993f9d1ac17f5489056059c37a7cfb2788e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWMxOTM5OTNmOWQxYWMxN2Y1NDg5MDU2MDU5YzM3YTdjZmIyNzg4ZQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-05-14T17:14:17Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-05-14T17:14:17Z"}, "message": "(default_conversion): Don't replace iterator with its initial value.\n\nFrom-SVN: r4452", "tree": {"sha": "26c3e7255f6a8b5f5feef04241109198e34f158a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/26c3e7255f6a8b5f5feef04241109198e34f158a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ec193993f9d1ac17f5489056059c37a7cfb2788e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec193993f9d1ac17f5489056059c37a7cfb2788e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec193993f9d1ac17f5489056059c37a7cfb2788e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec193993f9d1ac17f5489056059c37a7cfb2788e/comments", "author": null, "committer": null, "parents": [{"sha": "00c5c72e465d92e69f2fd99ba3eda58ac3dc9715", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00c5c72e465d92e69f2fd99ba3eda58ac3dc9715", "html_url": "https://github.com/Rust-GCC/gccrs/commit/00c5c72e465d92e69f2fd99ba3eda58ac3dc9715"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "0989b6906016b0957126a62a76e64131163d23d2", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec193993f9d1ac17f5489056059c37a7cfb2788e/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec193993f9d1ac17f5489056059c37a7cfb2788e/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=ec193993f9d1ac17f5489056059c37a7cfb2788e", "patch": "@@ -920,6 +920,8 @@ default_conversion (exp)\n   else if (optimize\n \t   && TREE_CODE (exp) == VAR_DECL\n \t   && TREE_READONLY (exp)\n+\t   /* But not for iterators!  */\n+\t   && !ITERATOR_P (exp)\n \t   && DECL_MODE (exp) != BLKmode)\n     {\n       exp = decl_constant_value (exp);"}]}