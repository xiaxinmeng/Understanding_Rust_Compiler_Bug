{"sha": "de0f55dbb314264d7858a9d98c805285c62f5b6b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGUwZjU1ZGJiMzE0MjY0ZDc4NThhOWQ5OGM4MDUyODVjNjJmNWI2Yg==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2019-09-09T20:08:32Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2019-09-09T20:08:32Z"}, "message": "libgo: only build x/sys/cpu/cpu_gccgo.c on x86 systems\n    \n    The C file has a build tag, but the procedure we use for building C\n    files ignores build tags.\n    \n    This should fix the libgo build on non-x86 systems.\n    \n    Reviewed-on: https://go-review.googlesource.com/c/gofrontend/+/194378\n\nFrom-SVN: r275544", "tree": {"sha": "56fa5bee83ed5ce35c8fe111a578bc0fc69c9714", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/56fa5bee83ed5ce35c8fe111a578bc0fc69c9714"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/de0f55dbb314264d7858a9d98c805285c62f5b6b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de0f55dbb314264d7858a9d98c805285c62f5b6b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de0f55dbb314264d7858a9d98c805285c62f5b6b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de0f55dbb314264d7858a9d98c805285c62f5b6b/comments", "author": null, "committer": null, "parents": [{"sha": "b3baefb205e22aef208192aaf02f7ab0fad7c025", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3baefb205e22aef208192aaf02f7ab0fad7c025", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b3baefb205e22aef208192aaf02f7ab0fad7c025"}], "stats": {"total": 54, "additions": 40, "deletions": 14}, "files": [{"sha": "c75e959ba1987e540b71072583fb974384f72a1c", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de0f55dbb314264d7858a9d98c805285c62f5b6b/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de0f55dbb314264d7858a9d98c805285c62f5b6b/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=de0f55dbb314264d7858a9d98c805285c62f5b6b", "patch": "@@ -1,4 +1,4 @@\n-17bef47f464983fd8513f88f3f159d28e2423e79\n+03fa49394bb4b37453795bef3119e5b40c929aee\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "5f7d0580e314dd431382f4938d69a92c8acd2713", "filename": "libgo/Makefile.am", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de0f55dbb314264d7858a9d98c805285c62f5b6b/libgo%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de0f55dbb314264d7858a9d98c805285c62f5b6b/libgo%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2FMakefile.am?ref=de0f55dbb314264d7858a9d98c805285c62f5b6b", "patch": "@@ -683,6 +683,12 @@ else\n syscall_lib_clone_lo =\n endif\n \n+if LIBGO_IS_X86\n+golangorg_x_sys_cpu_gccgo_lo = golang.org/x/sys/cpu_gccgo.lo\n+else\n+golangorg_x_sys_cpu_gccgo_lo =\n+endif\n+\n PACKAGES = $(shell cat $(srcdir)/libgo-packages.txt)\n \n libgo_go_objs = \\\n@@ -700,7 +706,7 @@ libgo_go_objs = \\\n \truntime/internal/atomic_c.lo \\\n \tsync/atomic_c.lo \\\n \tinternal/cpu/cpu_gccgo.lo \\\n-\tgolang.org/x/sys/cpu_gccgo.lo\n+\t$(golangorg_x_sys_cpu_gccgo_lo)\n \n libgo_ldflags = \\\n \t-version-info $(libtool_VERSION) $(PTHREAD_CFLAGS) $(AM_LDFLAGS)"}, {"sha": "69a8f7a052dcee706a3d1752ed6724aa2b0c0939", "filename": "libgo/Makefile.in", "status": "modified", "additions": 13, "deletions": 10, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de0f55dbb314264d7858a9d98c805285c62f5b6b/libgo%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de0f55dbb314264d7858a9d98c805285c62f5b6b/libgo%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2FMakefile.in?ref=de0f55dbb314264d7858a9d98c805285c62f5b6b", "patch": "@@ -215,19 +215,20 @@ am_libgotool_a_OBJECTS =\n libgotool_a_OBJECTS = $(am_libgotool_a_OBJECTS)\n LTLIBRARIES = $(toolexeclib_LTLIBRARIES)\n @LIBGO_IS_LINUX_TRUE@am__DEPENDENCIES_1 = syscall/clone_linux.lo\n-am__DEPENDENCIES_2 = $(addsuffix .lo,$(PACKAGES)) \\\n+@LIBGO_IS_X86_TRUE@am__DEPENDENCIES_2 = golang.org/x/sys/cpu_gccgo.lo\n+am__DEPENDENCIES_3 = $(addsuffix .lo,$(PACKAGES)) \\\n \tinternal/bytealg/bytealg.lo reflect/makefunc_ffi_c.lo \\\n \t$(am__DEPENDENCIES_1) syscall/errno.lo syscall/signame.lo \\\n \tsyscall/wait.lo $(golangorg_x_net_lif_lo) \\\n \t$(golangorg_x_net_route_lo) log/syslog/syslog_c.lo \\\n \truntime/internal/atomic_c.lo sync/atomic_c.lo \\\n-\tinternal/cpu/cpu_gccgo.lo golang.org/x/sys/cpu_gccgo.lo\n-am__DEPENDENCIES_3 =\n-am__DEPENDENCIES_4 = $(am__DEPENDENCIES_2) \\\n-\t../libbacktrace/libbacktrace.la $(am__DEPENDENCIES_3) \\\n-\t$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_3) \\\n-\t$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_3)\n-libgo_llgo_la_DEPENDENCIES = $(am__DEPENDENCIES_4)\n+\tinternal/cpu/cpu_gccgo.lo $(am__DEPENDENCIES_2)\n+am__DEPENDENCIES_4 =\n+am__DEPENDENCIES_5 = $(am__DEPENDENCIES_3) \\\n+\t../libbacktrace/libbacktrace.la $(am__DEPENDENCIES_4) \\\n+\t$(am__DEPENDENCIES_4) $(am__DEPENDENCIES_4) \\\n+\t$(am__DEPENDENCIES_4) $(am__DEPENDENCIES_4)\n+libgo_llgo_la_DEPENDENCIES = $(am__DEPENDENCIES_5)\n @LIBGO_IS_RTEMS_TRUE@am__objects_1 =  \\\n @LIBGO_IS_RTEMS_TRUE@\truntime/rtems-task-variable-add.lo\n am__objects_2 = runtime/aeshash.lo runtime/go-assert.lo \\\n@@ -254,7 +255,7 @@ libgo_llgo_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\\n \t$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \\\n \t$(libgo_llgo_la_LDFLAGS) $(LDFLAGS) -o $@\n @GOC_IS_LLGO_TRUE@am_libgo_llgo_la_rpath = -rpath $(toolexeclibdir)\n-libgo_la_DEPENDENCIES = $(am__DEPENDENCIES_4)\n+libgo_la_DEPENDENCIES = $(am__DEPENDENCIES_5)\n am_libgo_la_OBJECTS = $(am__objects_2)\n libgo_la_OBJECTS = $(am_libgo_la_OBJECTS)\n libgo_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\\n@@ -906,6 +907,8 @@ SYSINFO_FLAGS = \\\n \n @LIBGO_IS_LINUX_FALSE@syscall_lib_clone_lo = \n @LIBGO_IS_LINUX_TRUE@syscall_lib_clone_lo = syscall/clone_linux.lo\n+@LIBGO_IS_X86_FALSE@golangorg_x_sys_cpu_gccgo_lo = \n+@LIBGO_IS_X86_TRUE@golangorg_x_sys_cpu_gccgo_lo = golang.org/x/sys/cpu_gccgo.lo\n PACKAGES = $(shell cat $(srcdir)/libgo-packages.txt)\n libgo_go_objs = \\\n \t$(addsuffix .lo,$(PACKAGES)) \\\n@@ -922,7 +925,7 @@ libgo_go_objs = \\\n \truntime/internal/atomic_c.lo \\\n \tsync/atomic_c.lo \\\n \tinternal/cpu/cpu_gccgo.lo \\\n-\tgolang.org/x/sys/cpu_gccgo.lo\n+\t$(golangorg_x_sys_cpu_gccgo_lo)\n \n libgo_ldflags = \\\n \t-version-info $(libtool_VERSION) $(PTHREAD_CFLAGS) $(AM_LDFLAGS)"}, {"sha": "09c89dfe070e704fcc54d9be9779376f0e5618f0", "filename": "libgo/configure", "status": "modified", "additions": 17, "deletions": 2, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de0f55dbb314264d7858a9d98c805285c62f5b6b/libgo%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de0f55dbb314264d7858a9d98c805285c62f5b6b/libgo%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fconfigure?ref=de0f55dbb314264d7858a9d98c805285c62f5b6b", "patch": "@@ -662,6 +662,8 @@ GO_SYSCALL_OS_FILE\n GO_LIBCALL_OS_ARCH_FILE\n GO_LIBCALL_OS_FILE\n FUNCTION_DESCRIPTORS\n+LIBGO_IS_X86_FALSE\n+LIBGO_IS_X86_TRUE\n ALLGOARCHFAMILY\n ALLGOARCH\n GOARCH\n@@ -11484,7 +11486,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11487 \"configure\"\n+#line 11489 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11590,7 +11592,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11593 \"configure\"\n+#line 11595 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -14229,6 +14231,15 @@ esac\n \n \n \n+ if test \"$GOARCH\" = \"386\" -o \"$GOARCH\" = \"amd64\" -o \"$GOARCH\" = \"amd64p32\"; then\n+  LIBGO_IS_X86_TRUE=\n+  LIBGO_IS_X86_FALSE='#'\n+else\n+  LIBGO_IS_X86_TRUE='#'\n+  LIBGO_IS_X86_FALSE=\n+fi\n+\n+\n FUNCTION_DESCRIPTORS=false\n case ${host} in\n   rs6000*-*-* | powerpc*-*-*)\n@@ -16038,6 +16049,10 @@ if test -z \"${LIBGO_IS_BSD_TRUE}\" && test -z \"${LIBGO_IS_BSD_FALSE}\"; then\n   as_fn_error $? \"conditional \\\"LIBGO_IS_BSD\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n fi\n+if test -z \"${LIBGO_IS_X86_TRUE}\" && test -z \"${LIBGO_IS_X86_FALSE}\"; then\n+  as_fn_error $? \"conditional \\\"LIBGO_IS_X86\\\" was never defined.\n+Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n+fi\n if test -z \"${USING_SPLIT_STACK_TRUE}\" && test -z \"${USING_SPLIT_STACK_FALSE}\"; then\n   as_fn_error $? \"conditional \\\"USING_SPLIT_STACK\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5"}, {"sha": "de364afd0fe37311955b4e33210e82e2f0e417b4", "filename": "libgo/configure.ac", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de0f55dbb314264d7858a9d98c805285c62f5b6b/libgo%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de0f55dbb314264d7858a9d98c805285c62f5b6b/libgo%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fconfigure.ac?ref=de0f55dbb314264d7858a9d98c805285c62f5b6b", "patch": "@@ -354,6 +354,8 @@ AC_SUBST(GOARCH)\n AC_SUBST(ALLGOARCH)\n AC_SUBST(ALLGOARCHFAMILY)\n \n+AM_CONDITIONAL(LIBGO_IS_X86, test \"$GOARCH\" = \"386\" -o \"$GOARCH\" = \"amd64\" -o \"$GOARCH\" = \"amd64p32\")\n+\n FUNCTION_DESCRIPTORS=false\n case ${host} in\n   rs6000*-*-* | powerpc*-*-*)"}]}