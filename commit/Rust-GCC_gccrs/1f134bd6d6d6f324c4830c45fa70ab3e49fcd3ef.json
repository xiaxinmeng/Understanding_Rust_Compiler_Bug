{"sha": "1f134bd6d6d6f324c4830c45fa70ab3e49fcd3ef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWYxMzRiZDZkNmQ2ZjMyNGM0ODMwYzQ1ZmE3MGFiM2U0OWZjZDNlZg==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2011-06-24T15:26:33Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2011-06-24T15:26:33Z"}, "message": "Properly handle pointer addition/subtraction in num_sign_bit_copies1.\n\nFrom-SVN: r175383", "tree": {"sha": "85efd3579c1dba862f15e1dcaa9dcc37c41aa6a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/85efd3579c1dba862f15e1dcaa9dcc37c41aa6a0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1f134bd6d6d6f324c4830c45fa70ab3e49fcd3ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f134bd6d6d6f324c4830c45fa70ab3e49fcd3ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f134bd6d6d6f324c4830c45fa70ab3e49fcd3ef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f134bd6d6d6f324c4830c45fa70ab3e49fcd3ef/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "89f920259c9298b5d5d64b5ec57a3fb8f9046605", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89f920259c9298b5d5d64b5ec57a3fb8f9046605", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89f920259c9298b5d5d64b5ec57a3fb8f9046605"}], "stats": {"total": 18, "additions": 2, "deletions": 16}, "files": [{"sha": "f0c2f000eba619e95b55c93d2a2da78a8e222f34", "filename": "gcc/ChangeLog", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f134bd6d6d6f324c4830c45fa70ab3e49fcd3ef/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f134bd6d6d6f324c4830c45fa70ab3e49fcd3ef/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1f134bd6d6d6f324c4830c45fa70ab3e49fcd3ef", "patch": "@@ -2,7 +2,8 @@\n \n \tPR rtl-optimization/49504\n \t* rtlanal.c (nonzero_bits1): Properly handle addition or\n-\tsubtraction a pointer in Pmode if pointers extend unsigned.\n+\tsubtraction of a pointer in Pmode if pointers extend unsigned.\n+\t(num_sign_bit_copies1): Likewise.\n \n 2011-06-24  Martin Jambor  <mjambor@suse.cz>\n "}, {"sha": "0be6504a9432b0cccf7e1faf3f6ec3d6a84647aa", "filename": "gcc/rtlanal.c", "status": "modified", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f134bd6d6d6f324c4830c45fa70ab3e49fcd3ef/gcc%2Frtlanal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f134bd6d6d6f324c4830c45fa70ab3e49fcd3ef/gcc%2Frtlanal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtlanal.c?ref=1f134bd6d6d6f324c4830c45fa70ab3e49fcd3ef", "patch": "@@ -4605,21 +4605,6 @@ num_sign_bit_copies1 (const_rtx x, enum machine_mode mode, const_rtx known_x,\n \t\t\t\t\t known_x, known_mode, known_ret);\n       result = MAX (1, MIN (num0, num1) - 1);\n \n-#ifdef POINTERS_EXTEND_UNSIGNED\n-      /* If pointers extend signed and this is an addition or subtraction\n-\t to a pointer in Pmode, all the bits above ptr_mode are known to be\n-\t sign bit copies.  */\n-      /* As we do not know which address space the pointer is refering to,\n-\t we can do this only if the target does not support different pointer\n-\t or address modes depending on the address space.  */\n-      if (target_default_pointer_address_modes_p ()\n-\t  && ! POINTERS_EXTEND_UNSIGNED && GET_MODE (x) == Pmode\n-\t  && (code == PLUS || code == MINUS)\n-\t  && REG_P (XEXP (x, 0)) && REG_POINTER (XEXP (x, 0)))\n-\tresult = MAX ((int) (GET_MODE_BITSIZE (Pmode)\n-\t\t\t     - GET_MODE_BITSIZE (ptr_mode) + 1),\n-\t\t      result);\n-#endif\n       return result;\n \n     case MULT:"}]}