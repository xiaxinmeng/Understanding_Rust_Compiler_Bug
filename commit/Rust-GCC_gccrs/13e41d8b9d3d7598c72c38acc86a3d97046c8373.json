{"sha": "13e41d8b9d3d7598c72c38acc86a3d97046c8373", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTNlNDFkOGI5ZDNkNzU5OGM3MmMzOGFjYzg2YTNkOTcwNDZjODM3Mw==", "commit": {"author": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2020-04-08T07:39:43Z"}, "committer": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2020-04-08T07:39:43Z"}, "message": "[C/C++, OpenACC] Reject vars of different scope in acc declare (PR94120)\n\n\tgcc/c/\n\tPR middle-end/94120\n\t* c-decl.c (c_check_in_current_scope): New function.\n\t* c-tree.h (c_check_in_current_scope): Declare it.\n\t* c-parser.c (c_parser_oacc_declare): Add check that variables\n\tare declared in the same scope as the directive. Fix handling\n\tof namespace vars.\n\n\tgcc/cp/\n\tPR middle-end/94120\n\t* paser.c (cp_parser_oacc_declare): Add check that variables\n\tare declared in the same scope as the directive.\n\n\tgcc/testsuite/\n\tPR middle-end/94120\n\t* c-c++-common/goacc/declare-pr94120.c: New.\n\t* g++.dg/declare-pr94120.C: New.\n\n\tlibgomp/testsuite/\n\tPR middle-end/94120\n\t* libgomp.oacc-c++/declare-pr94120.C: New.", "tree": {"sha": "90000a02958e8b0e36e120c7afcc9b6e839b4c04", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/90000a02958e8b0e36e120c7afcc9b6e839b4c04"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/13e41d8b9d3d7598c72c38acc86a3d97046c8373", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13e41d8b9d3d7598c72c38acc86a3d97046c8373", "html_url": "https://github.com/Rust-GCC/gccrs/commit/13e41d8b9d3d7598c72c38acc86a3d97046c8373", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13e41d8b9d3d7598c72c38acc86a3d97046c8373/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "38c3017f257484a6739e2fba821d95794f7f175c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38c3017f257484a6739e2fba821d95794f7f175c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/38c3017f257484a6739e2fba821d95794f7f175c"}], "stats": {"total": 177, "additions": 174, "deletions": 3}, "files": [{"sha": "482a01b307a0ea94d378bd38b8ab141b85afc252", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13e41d8b9d3d7598c72c38acc86a3d97046c8373/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13e41d8b9d3d7598c72c38acc86a3d97046c8373/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=13e41d8b9d3d7598c72c38acc86a3d97046c8373", "patch": "@@ -1,3 +1,12 @@\n+2020-04-08  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR middle-end/94120\n+\t* c-decl.c (c_check_in_current_scope): New function.\n+\t* c-tree.h (c_check_in_current_scope): Declare it.\n+\t* c-parser.c (c_parser_oacc_declare): Add check that variables\n+\tare declared in the same scope as the directive. Fix handling\n+\tof namespace vars.\n+\n 2020-04-07  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/94512"}, {"sha": "0b7f4376dd350faac04a209e742ef755a37094c7", "filename": "gcc/c/c-decl.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13e41d8b9d3d7598c72c38acc86a3d97046c8373/gcc%2Fc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13e41d8b9d3d7598c72c38acc86a3d97046c8373/gcc%2Fc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-decl.c?ref=13e41d8b9d3d7598c72c38acc86a3d97046c8373", "patch": "@@ -12041,4 +12041,12 @@ c_check_omp_declare_reduction_r (tree *tp, int *, void *data)\n   return NULL_TREE;\n }\n \n+\n+bool\n+c_check_in_current_scope (tree decl)\n+{\n+  struct c_binding *b = I_SYMBOL_BINDING (DECL_NAME (decl));\n+  return b != NULL && B_IN_CURRENT_SCOPE (b);\n+}\n+\n #include \"gt-c-c-decl.h\""}, {"sha": "d1c954cd02a4efcbb9afd7034750ddb62aaf740f", "filename": "gcc/c/c-parser.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13e41d8b9d3d7598c72c38acc86a3d97046c8373/gcc%2Fc%2Fc-parser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13e41d8b9d3d7598c72c38acc86a3d97046c8373/gcc%2Fc%2Fc-parser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-parser.c?ref=13e41d8b9d3d7598c72c38acc86a3d97046c8373", "patch": "@@ -16580,6 +16580,15 @@ c_parser_oacc_declare (c_parser *parser)\n \t  break;\n \t}\n \n+      if (!c_check_in_current_scope (decl))\n+\t{\n+\t  error_at (loc,\n+\t\t    \"%qD must be a variable declared in the same scope as \"\n+\t\t    \"%<#pragma acc declare%>\", decl);\n+\t  error = true;\n+\t  continue;\n+\t}\n+\n       if (lookup_attribute (\"omp declare target\", DECL_ATTRIBUTES (decl))\n \t  || lookup_attribute (\"omp declare target link\",\n \t\t\t       DECL_ATTRIBUTES (decl)))"}, {"sha": "94668866fa215cc4483a4cac17d82277827fbba6", "filename": "gcc/c/c-tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13e41d8b9d3d7598c72c38acc86a3d97046c8373/gcc%2Fc%2Fc-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13e41d8b9d3d7598c72c38acc86a3d97046c8373/gcc%2Fc%2Fc-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-tree.h?ref=13e41d8b9d3d7598c72c38acc86a3d97046c8373", "patch": "@@ -793,6 +793,7 @@ extern tree c_omp_reduction_id (enum tree_code, tree);\n extern tree c_omp_reduction_decl (tree);\n extern tree c_omp_reduction_lookup (tree, tree);\n extern tree c_check_omp_declare_reduction_r (tree *, int *, void *);\n+extern bool c_check_in_current_scope (tree);\n extern void c_pushtag (location_t, tree, tree);\n extern void c_bind (location_t, tree, bool);\n extern bool tag_exists_p (enum tree_code, tree);"}, {"sha": "561eb4e76f40e48be5da4ae69f729866dc0c3438", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13e41d8b9d3d7598c72c38acc86a3d97046c8373/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13e41d8b9d3d7598c72c38acc86a3d97046c8373/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=13e41d8b9d3d7598c72c38acc86a3d97046c8373", "patch": "@@ -1,3 +1,9 @@\n+2020-04-08  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR middle-end/94120\n+\t* paser.c (cp_parser_oacc_declare): Add check that variables\n+\tare declared in the same scope as the directive.\n+\n 2020-04-07  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/94480"}, {"sha": "fec5203830ae01867305f3eb5f3fb322cbd29bab", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 19, "deletions": 2, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13e41d8b9d3d7598c72c38acc86a3d97046c8373/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13e41d8b9d3d7598c72c38acc86a3d97046c8373/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=13e41d8b9d3d7598c72c38acc86a3d97046c8373", "patch": "@@ -40906,6 +40906,7 @@ cp_parser_oacc_declare (cp_parser *parser, cp_token *pragma_tok)\n {\n   tree clauses, stmt;\n   bool error = false;\n+  bool found_in_scope = global_bindings_p ();\n \n   clauses = cp_parser_oacc_all_clauses (parser, OACC_DECLARE_CLAUSE_MASK,\n \t\t\t\t\t\"#pragma acc declare\", pragma_tok, true);\n@@ -40978,6 +40979,22 @@ cp_parser_oacc_declare (cp_parser *parser, cp_token *pragma_tok)\n \t  break;\n \t}\n \n+      if (!found_in_scope)\n+\tfor (tree d = current_binding_level->names; d; d = TREE_CHAIN (d))\n+\t  if (d == decl)\n+\t    {\n+\t      found_in_scope = true;\n+\t      break;\n+\t    }\n+      if (!found_in_scope)\n+\t{\n+\t  error_at (loc,\n+\t\t    \"%qD must be a variable declared in the same scope as \"\n+\t\t    \"%<#pragma acc declare%>\", decl);\n+\t  error = true;\n+\t  continue;\n+\t}\n+\n       if (lookup_attribute (\"omp declare target\", DECL_ATTRIBUTES (decl))\n \t  || lookup_attribute (\"omp declare target link\",\n \t\t\t       DECL_ATTRIBUTES (decl)))\n@@ -40999,7 +41016,7 @@ cp_parser_oacc_declare (cp_parser *parser, cp_token *pragma_tok)\n \n \t  DECL_ATTRIBUTES (decl)\n \t    = tree_cons (id, NULL_TREE, DECL_ATTRIBUTES (decl));\n-\t  if (global_bindings_p ())\n+\t  if (current_binding_level->kind == sk_namespace)\n \t    {\n \t      symtab_node *node = symtab_node::get (decl);\n \t      if (node != NULL)\n@@ -41016,7 +41033,7 @@ cp_parser_oacc_declare (cp_parser *parser, cp_token *pragma_tok)\n \t}\n     }\n \n-  if (error || global_bindings_p ())\n+  if (error || current_binding_level->kind == sk_namespace)\n     return NULL_TREE;\n \n   stmt = make_node (OACC_DECLARE);"}, {"sha": "ba635fd3ea2a33ae1560ef5589aee2463e14c21e", "filename": "gcc/omp-grid.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13e41d8b9d3d7598c72c38acc86a3d97046c8373/gcc%2Fomp-grid.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13e41d8b9d3d7598c72c38acc86a3d97046c8373/gcc%2Fomp-grid.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-grid.c?ref=13e41d8b9d3d7598c72c38acc86a3d97046c8373", "patch": "@@ -1065,7 +1065,7 @@ grid_eliminate_combined_simd_part (gomp_for *parloop)\n   while (*pc)\n     {\n       tree c = *pc;\n-      switch (TREE_CODE (c))\n+      switch (OMP_CLAUSE_CODE (c))\n \t{\n \tcase OMP_CLAUSE_LINEAR:\n \t  {"}, {"sha": "e4e6ecf67860f1003ada9e969e72390620660677", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13e41d8b9d3d7598c72c38acc86a3d97046c8373/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13e41d8b9d3d7598c72c38acc86a3d97046c8373/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=13e41d8b9d3d7598c72c38acc86a3d97046c8373", "patch": "@@ -1,3 +1,9 @@\n+2020-04-08  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR middle-end/94120\n+\t* c-c++-common/goacc/declare-pr94120.c: New.\n+\t* g++.dg/declare-pr94120.C: New.\n+\n 2020-04-07  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR rtl-optimization/94291"}, {"sha": "21b2cc14fc79c62811f137acc6d3ce2565b78ccb", "filename": "gcc/testsuite/c-c++-common/goacc/declare-pr94120.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13e41d8b9d3d7598c72c38acc86a3d97046c8373/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fdeclare-pr94120.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13e41d8b9d3d7598c72c38acc86a3d97046c8373/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fdeclare-pr94120.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fdeclare-pr94120.c?ref=13e41d8b9d3d7598c72c38acc86a3d97046c8373", "patch": "@@ -0,0 +1,23 @@\n+/* { dg-do compile }  */\n+\n+/* PR middle-end/94120  */\n+\n+void foo()\n+{\n+  int foo;\n+  {\n+    #pragma acc declare copy(foo)  /* { dg-error \"'foo' must be a variable declared in the same scope as '#pragma acc declare'\" }  */\n+  }\n+}\n+\n+void\n+f_data (void)\n+{\n+  int B[10];\n+#pragma acc data\n+  {\n+# pragma acc declare copy(B)  /* { dg-error \"'B' must be a variable declared in the same scope as '#pragma acc declare'\" }  */\n+    for (int i = 0; i < 10; i++)\n+      B[i] = -i;\n+  }\n+}"}, {"sha": "8515c4ff875b49b6c77a2bf9814930ae50966430", "filename": "gcc/testsuite/g++.dg/declare-pr94120.C", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13e41d8b9d3d7598c72c38acc86a3d97046c8373/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdeclare-pr94120.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13e41d8b9d3d7598c72c38acc86a3d97046c8373/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdeclare-pr94120.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdeclare-pr94120.C?ref=13e41d8b9d3d7598c72c38acc86a3d97046c8373", "patch": "@@ -0,0 +1,30 @@\n+/* { dg-do compile }  */\n+\n+/* PR middle-end/94120  */\n+\n+int b[8];\n+#pragma acc declare create (b)\n+ \n+namespace my {\n+ int d[8] = { 1, 2, 3, 4, 5, 6, 7, 8 };\n+ #pragma acc declare copyin (d)\n+};\n+\n+namespace outer {\n+  namespace inner {\n+    int e[8] = { 1, 2, 3, 4, 5, 6, 7, 8 };\n+    #pragma acc declare copyin (e)\n+  };\n+};\n+\n+int f[8] = { 1, 2, 3, 4, 5, 6, 7, 8 };\n+namespace my {\n+ #pragma acc declare copyin (f)\n+};\n+\n+namespace outer {\n+  int g[8] = { 1, 2, 3, 4, 5, 6, 7, 8 };\n+  namespace inner {\n+    #pragma acc declare copyin (g)\n+  };\n+};"}, {"sha": "0e4958f0c6747bd65cd7f5a34fd346738d9deca6", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13e41d8b9d3d7598c72c38acc86a3d97046c8373/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13e41d8b9d3d7598c72c38acc86a3d97046c8373/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=13e41d8b9d3d7598c72c38acc86a3d97046c8373", "patch": "@@ -1,3 +1,8 @@\n+2020-04-08  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR middle-end/94120\n+\t* libgomp.oacc-c++/declare-pr94120.C: New.\n+\n 2020-04-06  Maciej W. Rozycki  <macro@wdc.com>\n \n \t* configure.ac: Add testsuite/libgomp-site-extra.exp to output"}, {"sha": "1e1254187ead5264e58e26badc122739afc1c973", "filename": "libgomp/testsuite/libgomp.oacc-c++/declare-pr94120.C", "status": "added", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13e41d8b9d3d7598c72c38acc86a3d97046c8373/libgomp%2Ftestsuite%2Flibgomp.oacc-c%2B%2B%2Fdeclare-pr94120.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13e41d8b9d3d7598c72c38acc86a3d97046c8373/libgomp%2Ftestsuite%2Flibgomp.oacc-c%2B%2B%2Fdeclare-pr94120.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c%2B%2B%2Fdeclare-pr94120.C?ref=13e41d8b9d3d7598c72c38acc86a3d97046c8373", "patch": "@@ -0,0 +1,57 @@\n+#include <openacc.h>\n+#include <stdlib.h>\n+\n+#define N 8\n+\n+namespace one {\n+  int A[N] = { 1, 2, 3, 4, 5, 6, 7, 8 };\n+  #pragma acc declare copyin (A)\n+};\n+\n+namespace outer {\n+  namespace inner {\n+    int B[N];\n+    #pragma acc declare create (B)\n+  };\n+};\n+\n+static void\n+f (void)\n+{\n+  int i;\n+  int C[N];\n+  #pragma acc declare copyout (C)\n+\n+  if (!acc_is_present (&one::A, sizeof (one::A)))\n+    abort ();\n+\n+  if (!acc_is_present (&outer::inner::B, sizeof (outer::inner::B)))\n+    abort ();\n+\n+#pragma acc parallel\n+  for (i = 0; i < N; i++)\n+    {\n+      outer::inner::B[i] = one::A[i];\n+      C[i] = outer::inner::B[i];\n+    }\n+\n+  for (i = 0; i < N; i++)\n+    {\n+      if (C[i] != i + 1)\n+\tabort ();\n+    }\n+\n+#pragma acc parallel\n+  for (i = 0; i < N; i++)\n+    if (outer::inner::B[i] != i + 1)\n+      abort ();\n+}\n+\n+\n+int\n+main (int argc, char **argv)\n+{\n+  f ();\n+\n+  return 0;\n+}"}]}