{"sha": "5f643b6f49f66ff4d6f18ff374d0418a5f36c3d0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWY2NDNiNmY0OWY2NmZmNGQ2ZjE4ZmYzNzRkMDQxOGE1ZjM2YzNkMA==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2017-09-28T18:14:27Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2017-09-28T18:14:27Z"}, "message": "i386.c (ix86_print_operand_address_as): Do not check index when encoding %esp as %rsp to avoid 0x67 prefix.\n\n\t* config/i386/i386.c (ix86_print_operand_address_as): Do not check\n\tindex when encoding %esp as %rsp to avoid 0x67 prefix.\n\nFrom-SVN: r253260", "tree": {"sha": "78b10c27aaaf84de3497ac9ed25d3c1cff250be0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/78b10c27aaaf84de3497ac9ed25d3c1cff250be0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5f643b6f49f66ff4d6f18ff374d0418a5f36c3d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f643b6f49f66ff4d6f18ff374d0418a5f36c3d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f643b6f49f66ff4d6f18ff374d0418a5f36c3d0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f643b6f49f66ff4d6f18ff374d0418a5f36c3d0/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "10e93cf5978ab63059438b2ea7e68d94e043db96", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10e93cf5978ab63059438b2ea7e68d94e043db96", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10e93cf5978ab63059438b2ea7e68d94e043db96"}], "stats": {"total": 14, "additions": 9, "deletions": 5}, "files": [{"sha": "2802cdf75114a587a380e21b3bc394ee83b27a39", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f643b6f49f66ff4d6f18ff374d0418a5f36c3d0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f643b6f49f66ff4d6f18ff374d0418a5f36c3d0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5f643b6f49f66ff4d6f18ff374d0418a5f36c3d0", "patch": "@@ -1,3 +1,8 @@\n+2017-09-28  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.c (ix86_print_operand_address_as): Do not check\n+\tindex when encoding %esp as %rsp to avoid 0x67 prefix.\n+\n 2017-09-28  Sergey Shalnov  <Sergey.Shalnov@intel.com>\n \n \t* config/i386/i386.md (*movsf_internal, *movdf_internal):"}, {"sha": "e282546c70875c204bc5457ecc01ccffb68c8d2e", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f643b6f49f66ff4d6f18ff374d0418a5f36c3d0/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f643b6f49f66ff4d6f18ff374d0418a5f36c3d0/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=5f643b6f49f66ff4d6f18ff374d0418a5f36c3d0", "patch": "@@ -19953,12 +19953,11 @@ ix86_print_operand_address_as (FILE *file, rtx addr,\n \t  code = 'k';\n \t}\n \n-      /* Since the upper 32 bits of RSP are always zero for x32, we can\n-\t encode %esp as %rsp to avoid 0x67 prefix if there is no index or\n-\t base register.  */\n+      /* Since the upper 32 bits of RSP are always zero for x32,\n+\t we can encode %esp as %rsp to avoid 0x67 prefix if\n+\t there is no index register.  */\n       if (TARGET_X32 && Pmode == SImode\n-\t  && ((!index && base && REG_P (base) && REGNO (base) == SP_REG)\n-\t      || (!base && index && REGNO (index) == SP_REG)))\n+\t  && !index && base && REG_P (base) && REGNO (base) == SP_REG)\n \tcode = 'q';\n \n       if (ASSEMBLER_DIALECT == ASM_ATT)"}]}