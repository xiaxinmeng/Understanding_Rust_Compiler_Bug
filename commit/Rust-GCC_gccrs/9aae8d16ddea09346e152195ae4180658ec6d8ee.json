{"sha": "9aae8d16ddea09346e152195ae4180658ec6d8ee", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWFhZThkMTZkZGVhMDkzNDZlMTUyMTk1YWU0MTgwNjU4ZWM2ZDhlZQ==", "commit": {"author": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2010-04-30T11:58:49Z"}, "committer": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2010-04-30T11:58:49Z"}, "message": "toplev.c: Include varray.h for statistics dumping.\n\ngcc/ChangeLog:\n\t* toplev.c: Include varray.h for statistics dumping.\n\t* tree.h: Do not declare varray_head_tag.\n\t* tree-into-ssa.c, tree-ssa-uninit.c, tree-phinodes.c, omega.c,\n\tregs.h, lto-cgraph.c, tree-ssa-loop-ivopts.c, tree-nomudflap.c,\n\tc-objc-common.c, lto-streamer-out.c, tree-ssa-propagate.c,\n\tgimple-low.c, c-semantics.c, dwarf2out.c, lto-streamer-in.c,\n\tlto-section-in.c, alias.c, tree-if-conv.c, gimplify.c, ggc-zone.c,\n\ttree-ssa.c, tree-ssa-loop-prefetch.c, integrate.h, c-gimplify.c,\n\tc-common.c, c-common.h, reg-stack.c, basic-block.h,\n\ttree-ssa-structalias.c, lto-section-out.c, tree-ssanames.c: Do not\n\tinclude varray.h.\n\t* Makefile.in: Update for abovementioned changes.\n\nobjc/ChangeLog:\n\t* objc-act.c: Do not include varray.h.\n\nobjcp/ChangeLog:\n\t* objcp-decl.c: Do not include varray.h.\n\ncp/ChangeLog:\n\t* optimize.c, parser.c,mangle.c, cp-tree.h: DO not include varray.h.\n\t* Make-lang.in: Don't include varray.h dependency in CXX_TREE_H.\n\nFrom-SVN: r158933", "tree": {"sha": "567489b03e9e1b0d8ede2a930db813582b8e9263", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/567489b03e9e1b0d8ede2a930db813582b8e9263"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9aae8d16ddea09346e152195ae4180658ec6d8ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9aae8d16ddea09346e152195ae4180658ec6d8ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9aae8d16ddea09346e152195ae4180658ec6d8ee", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9aae8d16ddea09346e152195ae4180658ec6d8ee/comments", "author": null, "committer": null, "parents": [{"sha": "a07ecd2bc479d4fbace69c7e56536eef29e43f41", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a07ecd2bc479d4fbace69c7e56536eef29e43f41", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a07ecd2bc479d4fbace69c7e56536eef29e43f41"}], "stats": {"total": 125, "additions": 57, "deletions": 68}, "files": [{"sha": "4d295e31d2cad32dea24c2bebfc1dab83fc23ba8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aae8d16ddea09346e152195ae4180658ec6d8ee/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aae8d16ddea09346e152195ae4180658ec6d8ee/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9aae8d16ddea09346e152195ae4180658ec6d8ee", "patch": "@@ -1,3 +1,18 @@\n+2010-04-30  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* toplev.c: Include varray.h for statistics dumping.\n+\t* tree.h: Do not declare varray_head_tag.\n+\t* tree-into-ssa.c, tree-ssa-uninit.c, tree-phinodes.c, omega.c,\n+\tregs.h, lto-cgraph.c, tree-ssa-loop-ivopts.c, tree-nomudflap.c,\n+\tc-objc-common.c, lto-streamer-out.c, tree-ssa-propagate.c,\n+\tgimple-low.c, c-semantics.c, dwarf2out.c, lto-streamer-in.c,\n+\tlto-section-in.c, alias.c, tree-if-conv.c, gimplify.c, ggc-zone.c,\n+\ttree-ssa.c, tree-ssa-loop-prefetch.c, integrate.h, c-gimplify.c,\n+\tc-common.c, c-common.h, reg-stack.c, basic-block.h,\n+\ttree-ssa-structalias.c, lto-section-out.c, tree-ssanames.c: Do not\n+\tinclude varray.h.\n+\t* Makefile.in: Update for abovementioned changes.\n+\n 2010-04-30  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR debug/43942"}, {"sha": "2ff69ad80a04f3f36d5c9da578d4e1409f2955b9", "filename": "gcc/Makefile.in", "status": "modified", "additions": 27, "deletions": 27, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aae8d16ddea09346e152195ae4180658ec6d8ee/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aae8d16ddea09346e152195ae4180658ec6d8ee/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=9aae8d16ddea09346e152195ae4180658ec6d8ee", "patch": "@@ -898,7 +898,7 @@ SCHED_INT_H = sched-int.h $(INSN_ATTR_H) $(BASIC_BLOCK_H) $(RTL_H) $(DF_H) vecpr\n SEL_SCHED_IR_H = sel-sched-ir.h $(INSN_ATTR_H) $(BASIC_BLOCK_H) $(RTL_H) \\\n \t$(GGC_H) $(BITMAP_H) vecprim.h $(SCHED_INT_H) $(CFGLOOP_H)\n SEL_SCHED_DUMP_H = sel-sched-dump.h $(SEL_SCHED_IR_H)\n-INTEGRATE_H = integrate.h $(VARRAY_H)\n+INTEGRATE_H = integrate.h\n CFGLAYOUT_H = cfglayout.h $(BASIC_BLOCK_H)\n CFGLOOP_H = cfgloop.h $(BASIC_BLOCK_H) $(RTL_H) vecprim.h double-int.h\n IPA_UTILS_H = ipa-utils.h $(TREE_H) $(CGRAPH_H)\n@@ -1995,7 +1995,7 @@ c-ppoutput.o : c-ppoutput.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n     $(C_COMMON_H) $(TREE_H) $(CPPLIB_H) $(CPP_INTERNAL_H) $(C_PRAGMA_H)\n c-objc-common.o : c-objc-common.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n     $(TM_H) $(TREE_H) $(C_TREE_H) $(RTL_H) insn-config.h $(INTEGRATE_H) \\\n-    $(FUNCTION_H) $(FLAGS_H) $(TOPLEV_H) $(TREE_INLINE_H) $(DIAGNOSTIC_H) $(VARRAY_H) \\\n+    $(FUNCTION_H) $(FLAGS_H) $(TOPLEV_H) $(TREE_INLINE_H) $(DIAGNOSTIC_H) \\\n     langhooks.h $(GGC_H) $(TARGET_H) $(C_PRETTY_PRINT_H) c-objc-common.h \\\n     tree-mudflap.h intl.h\n c-aux-info.o : c-aux-info.c  $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n@@ -2047,7 +2047,7 @@ lto-wrapper.o: lto-wrapper.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) intl.h\n c-common.o : c-common.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n \t$(OBSTACK_H) $(C_COMMON_H) $(FLAGS_H) $(TOPLEV_H) output.h $(C_PRAGMA_H) \\\n \t$(GGC_H) $(EXPR_H) $(TM_P_H) builtin-types.def builtin-attrs.def \\\n-\t$(DIAGNOSTIC_H) gt-c-common.h langhooks.h $(VARRAY_H) $(RTL_H) \\\n+\t$(DIAGNOSTIC_H) gt-c-common.h langhooks.h $(RTL_H) \\\n \t$(TARGET_H) $(C_TREE_H) tree-iterator.h langhooks.h tree-mudflap.h \\\n \tintl.h opts.h $(REAL_H) $(CPPLIB_H) $(TREE_INLINE_H) $(HASHTAB_H) \\\n \t$(BUILTINS_DEF) $(CGRAPH_H) $(BASIC_BLOCK_H) $(TARGET_DEF_H) \\\n@@ -2061,7 +2061,7 @@ c-opts.o : c-opts.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H)\t\t\\\n         $(TREE_H) $(C_PRAGMA_H) $(FLAGS_H) $(TOPLEV_H) langhooks.h\t\t\\\n         $(TREE_INLINE_H) $(DIAGNOSTIC_H) intl.h debug.h $(C_COMMON_H)\t\\\n         opts.h options.h $(MKDEPS_H) incpath.h cppdefault.h $(TARGET_H) \\\n-\t$(TM_P_H) $(VARRAY_H) $(C_TREE_H)\n+\t$(TM_P_H) $(C_TREE_H)\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) \\\n \t\t$< $(OUTPUT_OPTION) @TARGET_SYSTEM_ROOT_DEFINE@\n \n@@ -2086,7 +2086,7 @@ c-semantics.o : c-semantics.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n \t$(TREE_H) $(FLAGS_H) $(TOPLEV_H) output.h $(RTL_H) $(GGC_H) \\\n \t$(PREDICT_H) $(TREE_INLINE_H) $(C_COMMON_H) $(EXCEPT_H) $(FUNCTION_H) \\\n \tlanghooks.h $(SPLAY_TREE_H) $(TIMEVAR_H) $(GIMPLE_H) \\\n-\t$(VARRAY_H) tree-iterator.h\n+\ttree-iterator.h\n \n c-dump.o : c-dump.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n \t$(C_TREE_H) $(TREE_DUMP_H)\n@@ -2196,7 +2196,7 @@ ggc-page.o: ggc-page.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(TR\n \n ggc-zone.o: ggc-zone.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n \t$(TREE_H) $(FLAGS_H) $(TOPLEV_H) $(GGC_H) $(TIMEVAR_H) $(TM_P_H) \\\n-\t$(PARAMS_H) $(BITMAP_H) $(VARRAY_H) $(PLUGIN_H)\n+\t$(PARAMS_H) $(BITMAP_H) $(PLUGIN_H)\n \n ggc-none.o: ggc-none.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(GGC_H) \\\n \t$(BCONFIG_H)\n@@ -2223,27 +2223,27 @@ lto-compress.o: lto-compress.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n \n lto-cgraph.o: lto-cgraph.c $(CONFIG_H) $(SYSTEM_H) coretypes.h   \\\n    $(TM_H) $(TOPLEV_H) $(EXPR_H) $(FLAGS_H) $(PARAMS_H) input.h \\\n-   $(VARRAY_H) $(HASHTAB_H) langhooks.h $(BASIC_BLOCK_H) \\\n+   $(HASHTAB_H) langhooks.h $(BASIC_BLOCK_H) \\\n    $(TREE_FLOW_H) $(CGRAPH_H) $(FUNCTION_H) $(GGC_H) $(DIAGNOSTIC_H) \\\n    except.h $(TIMEVAR_H) output.h pointer-set.h $(LTO_STREAMER_H) $(GCOV_IO_H)\n lto-streamer-in.o: lto-streamer-in.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-   $(TM_H) $(TOPLEV_H) $(EXPR_H) $(FLAGS_H) $(PARAMS_H) input.h $(VARRAY_H) \\\n+   $(TM_H) $(TOPLEV_H) $(EXPR_H) $(FLAGS_H) $(PARAMS_H) input.h \\\n    $(HASHTAB_H) $(BASIC_BLOCK_H) $(TREE_FLOW_H) $(TREE_PASS_H) $(CGRAPH_H) \\\n    $(FUNCTION_H) $(GGC_H) $(DIAGNOSTIC_H) libfuncs.h $(EXCEPT_H) debug.h \\\n    $(TIMEVAR_H) output.h $(IPA_UTILS_H) $(LTO_STREAMER_H)\n lto-streamer-out.o : lto-streamer-out.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TM_H) $(TOPLEV_H) $(TREE_H) $(EXPR_H) $(FLAGS_H) $(PARAMS_H) input.h \\\n-   $(VARRAY_H) $(HASHTAB_H) $(BASIC_BLOCK_H) tree-iterator.h \\\n+   $(HASHTAB_H) $(BASIC_BLOCK_H) tree-iterator.h \\\n    $(TREE_FLOW_H) $(TREE_PASS_H) $(CGRAPH_H) $(FUNCTION_H) $(GGC_H) \\\n    $(DIAGNOSTIC_H) except.h $(LTO_STREAMER_H) errors.h\n lto-section-in.o: lto-section-in.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   $(TOPLEV_H) $(EXPR_H) $(FLAGS_H) $(PARAMS_H) input.h $(VARRAY_H) \\\n+   $(TOPLEV_H) $(EXPR_H) $(FLAGS_H) $(PARAMS_H) input.h \\\n    $(HASHTAB_H) $(BASIC_BLOCK_H) $(TREE_FLOW_H) $(CGRAPH_H) $(FUNCTION_H) \\\n    $(GGC_H) $(DIAGNOSTIC_H) except.h $(TIMEVAR_H) output.h \\\n    $(LTO_STREAMER_H) lto-compress.h\n lto-section-out.o : lto-section-out.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TM_H) $(TOPLEV_H) $(TREE_H) $(EXPR_H) $(PARAMS_H) input.h \\\n-   $(VARRAY_H) $(HASHTAB_H) $(BASIC_BLOCK_H) $(TREE_FLOW_H) $(TREE_PASS_H) \\\n+   $(HASHTAB_H) $(BASIC_BLOCK_H) $(TREE_FLOW_H) $(TREE_PASS_H) \\\n    $(CGRAPH_H) $(FUNCTION_H) $(GGC_H) except.h pointer-set.h \\\n    $(BITMAP_H) langhooks.h $(LTO_STREAMER_H) lto-compress.h\n lto-symtab.o: lto-symtab.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n@@ -2294,19 +2294,19 @@ tree-ssa-uninit.o : tree-ssa-uninit.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(TOPLEV_H) $(FUNCTION_H) $(TIMEVAR_H) $(TM_H) coretypes.h \\\n    $(TREE_DUMP_H) langhooks.h tree-pass.h $(BASIC_BLOCK_H) $(BITMAP_H) \\\n    $(FLAGS_H) $(GGC_H) hard-reg-set.h $(HASHTAB_H) pointer-set.h \\\n-   $(GIMPLE_H) $(TREE_INLINE_H) $(VARRAY_H)\n+   $(GIMPLE_H) $(TREE_INLINE_H)\n tree-ssa.o : tree-ssa.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(RTL_H) $(TREE_H) $(TM_P_H) $(EXPR_H) output.h $(DIAGNOSTIC_H) \\\n    $(TOPLEV_H) $(FUNCTION_H) $(TIMEVAR_H) $(TM_H) coretypes.h \\\n    $(TREE_DUMP_H) langhooks.h $(TREE_PASS_H) $(BASIC_BLOCK_H) $(BITMAP_H) \\\n    $(FLAGS_H) $(GGC_H) hard-reg-set.h $(HASHTAB_H) pointer-set.h \\\n-   $(GIMPLE_H) $(TREE_INLINE_H) $(VARRAY_H) $(TARGET_H)\n+   $(GIMPLE_H) $(TREE_INLINE_H) $(TARGET_H)\n tree-into-ssa.o : tree-into-ssa.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(RTL_H) $(TREE_H) $(TM_P_H) $(EXPR_H) output.h $(DIAGNOSTIC_H) \\\n    $(FUNCTION_H) $(TIMEVAR_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n    langhooks.h domwalk.h $(TREE_PASS_H) $(GGC_H) $(PARAMS_H) $(BASIC_BLOCK_H) \\\n    $(BITMAP_H) $(CFGLOOP_H) $(FLAGS_H) hard-reg-set.h $(HASHTAB_H) \\\n-   $(GIMPLE_H) $(TREE_INLINE_H) $(VARRAY_H) vecprim.h\n+   $(GIMPLE_H) $(TREE_INLINE_H) vecprim.h\n tree-ssa-ter.o : tree-ssa-ter.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(TREE_H) $(DIAGNOSTIC_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n    $(TREE_SSA_LIVE_H) $(BITMAP_H) $(FLAGS_H)\n@@ -2350,7 +2350,7 @@ tree-ssa-propagate.o : tree-ssa-propagate.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(DIAGNOSTIC_H) $(FUNCTION_H) $(TIMEVAR_H) $(TM_H) coretypes.h \\\n    $(TREE_DUMP_H) $(BASIC_BLOCK_H) $(TREE_PASS_H) langhooks.h \\\n    tree-ssa-propagate.h vec.h value-prof.h gt-tree-ssa-propagate.h $(FLAGS_H) \\\n-   $(VARRAY_H) $(GIMPLE_H)\n+   $(GIMPLE_H)\n tree-ssa-dom.o : tree-ssa-dom.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(RTL_H) $(TREE_H) $(TM_P_H) $(EXPR_H) $(GGC_H) output.h $(DIAGNOSTIC_H) \\\n    $(FUNCTION_H) $(TIMEVAR_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n@@ -2372,9 +2372,9 @@ tree-ssa-threadupdate.o : tree-ssa-threadupdate.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(DIAGNOSTIC_H) $(FUNCTION_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n    $(BASIC_BLOCK_H) $(FLAGS_H) $(TREE_PASS_H) $(CFGLOOP_H)\n tree-ssanames.o : tree-ssanames.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-   $(TM_H) $(TREE_H) $(VARRAY_H) $(GGC_H) $(TREE_FLOW_H) $(TREE_PASS_H)\n+   $(TM_H) $(TREE_H) $(GGC_H) $(TREE_FLOW_H) $(TREE_PASS_H)\n tree-phinodes.o : tree-phinodes.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-   $(TM_H) $(TREE_H) $(VARRAY_H) $(GGC_H) $(BASIC_BLOCK_H) $(TREE_FLOW_H) \\\n+   $(TM_H) $(TREE_H) $(GGC_H) $(BASIC_BLOCK_H) $(TREE_FLOW_H) \\\n    gt-tree-phinodes.h $(RTL_H) $(TOPLEV_H)  $(GIMPLE_H)\n domwalk.o : domwalk.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(BASIC_BLOCK_H) domwalk.h $(GGC_H)\n@@ -2430,7 +2430,7 @@ tree-nested.o: tree-nested.c $(CONFIG_H) $(SYSTEM_H) $(TM_H) $(TREE_H) \\\n tree-if-conv.o: tree-if-conv.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(TREE_H) $(FLAGS_H) $(TIMEVAR_H) $(BASIC_BLOCK_H) $(TREE_FLOW_H) \\\n    $(CFGLOOP_H) $(RTL_H) $(TREE_DATA_REF_H) $(TREE_PASS_H) $(DIAGNOSTIC_H) \\\n-   $(TARGET_H) $(TREE_DUMP_H) $(VARRAY_H)\n+   $(TARGET_H) $(TREE_DUMP_H)\n tree-iterator.o : tree-iterator.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) \\\n    coretypes.h $(GGC_H) tree-iterator.h $(GIMPLE_H) gt-tree-iterator.h\n tree-dfa.o : tree-dfa.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n@@ -2491,7 +2491,7 @@ tree-ssa-loop-ivopts.o : tree-ssa-loop-ivopts.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    output.h $(DIAGNOSTIC_H) $(TIMEVAR_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n    $(TREE_PASS_H) $(GGC_H) $(RECOG_H) insn-config.h $(HASHTAB_H) $(SCEV_H) \\\n    $(CFGLOOP_H) $(PARAMS_H) langhooks.h $(BASIC_BLOCK_H) hard-reg-set.h \\\n-   $(VARRAY_H) tree-affine.h pointer-set.h $(TARGET_H)\n+   tree-affine.h pointer-set.h $(TARGET_H)\n tree-affine.o : tree-affine.c tree-affine.h $(CONFIG_H) pointer-set.h \\\n    $(SYSTEM_H) $(RTL_H) $(TREE_H) $(TM_P_H) hard-reg-set.h $(GIMPLE_H) \\\n    output.h $(DIAGNOSTIC_H) $(TM_H) coretypes.h $(TREE_DUMP_H) $(FLAGS_H)\n@@ -2529,12 +2529,12 @@ tree-optimize.o : tree-optimize.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(TREE_PASS_H) $(CFGLOOP_H) $(EXCEPT_H)\n \n c-gimplify.o : c-gimplify.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) \\\n-   $(C_TREE_H) $(C_COMMON_H) $(DIAGNOSTIC_H) $(GIMPLE_H) $(VARRAY_H) \\\n+   $(C_TREE_H) $(C_COMMON_H) $(DIAGNOSTIC_H) $(GIMPLE_H) \\\n    $(FLAGS_H) langhooks.h $(TOPLEV_H) $(RTL_H) $(TREE_FLOW_H) $(LANGHOOKS_DEF_H) \\\n    $(TM_H) coretypes.h $(C_PRETTY_PRINT_H) $(CGRAPH_H) $(BASIC_BLOCK_H) \\\n    hard-reg-set.h $(TREE_DUMP_H) $(TREE_INLINE_H)\n gimplify.o : gimplify.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(GIMPLE_H) \\\n-   $(DIAGNOSTIC_H) $(GIMPLE_H) $(TREE_INLINE_H) $(VARRAY_H) langhooks.h \\\n+   $(DIAGNOSTIC_H) $(GIMPLE_H) $(TREE_INLINE_H) langhooks.h \\\n    $(LANGHOOKS_DEF_H) $(TREE_FLOW_H) $(CGRAPH_H) $(TIMEVAR_H) $(TM_H) \\\n    coretypes.h $(EXCEPT_H) $(FLAGS_H) $(RTL_H) $(FUNCTION_H) $(EXPR_H) output.h \\\n    $(GGC_H) gt-gimplify.h $(HASHTAB_H) $(TARGET_H) $(TOPLEV_H) $(OPTABS_H) \\\n@@ -2547,7 +2547,7 @@ gimple-fold.o : gimple-fold.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(TREE_DUMP_H) $(BASIC_BLOCK_H) $(TREE_PASS_H) langhooks.h \\\n    tree-ssa-propagate.h value-prof.h $(FLAGS_H) $(TARGET_H)\n gimple-low.o : gimple-low.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) \\\n-   $(DIAGNOSTIC_H) $(GIMPLE_H) $(TREE_INLINE_H) $(VARRAY_H) langhooks.h \\\n+   $(DIAGNOSTIC_H) $(GIMPLE_H) $(TREE_INLINE_H) langhooks.h \\\n    $(LANGHOOKS_DEF_H) $(TREE_FLOW_H) $(TIMEVAR_H) $(TM_H) coretypes.h \\\n    $(EXCEPT_H) $(FLAGS_H) $(RTL_H) $(FUNCTION_H) $(EXPR_H) $(TREE_PASS_H) \\\n    $(HASHTAB_H) $(TOPLEV_H) tree-iterator.h\n@@ -2693,7 +2693,7 @@ tree-mudflap.o : $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(TREE_INLINE_H) \\\n    $(RTL_H) $(TM_P_H) $(TREE_FLOW_H) $(TOPLEV_H) $(GIMPLE_H) tree-iterator.h\n tree-nomudflap.o : $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(TREE_INLINE_H) \\\n    $(C_TREE_H) $(C_COMMON_H) $(GIMPLE_H) $(DIAGNOSTIC_H) $(HASHTAB_H) \\\n-   output.h $(VARRAY_H) langhooks.h tree-mudflap.h $(TM_H) coretypes.h \\\n+   output.h langhooks.h tree-mudflap.h $(TM_H) coretypes.h \\\n    $(GGC_H) gt-tree-mudflap.h $(TREE_PASS_H) $(TOPLEV_H)\n tree-pretty-print.o : tree-pretty-print.c $(CONFIG_H) $(SYSTEM_H) \\\n    $(TREE_H) $(DIAGNOSTIC_H) $(REAL_H) $(HASHTAB_H) $(TREE_FLOW_H) \\\n@@ -2736,7 +2736,7 @@ toplev.o : toplev.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n    langhooks.h insn-flags.h $(CFGLAYOUT_H) $(CFGLOOP_H) hosthooks.h \\\n    $(CGRAPH_H) $(COVERAGE_H) alloc-pool.h $(GGC_H) $(INTEGRATE_H) \\\n    opts.h params.def tree-mudflap.h $(REAL_H) $(TREE_PASS_H) $(GIMPLE_H) \\\n-   tree-ssa-alias.h $(PLUGIN_H)\n+   tree-ssa-alias.h $(PLUGIN_H) $(VARRAY_H)\n \t$(COMPILER) $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) \\\n \t  -DTARGET_NAME=\\\"$(target_noncanonical)\\\" \\\n \t  -c $(srcdir)/toplev.c $(OUTPUT_OPTION)\n@@ -2846,7 +2846,7 @@ dwarf2out.o : dwarf2out.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    output.h $(DIAGNOSTIC_H) $(REAL_H) hard-reg-set.h $(REGS_H) $(EXPR_H) \\\n    libfuncs.h $(TOPLEV_H) dwarf2out.h reload.h $(GGC_H) $(EXCEPT_H) dwarf2asm.h \\\n    $(TM_P_H) langhooks.h $(HASHTAB_H) gt-dwarf2out.h $(TARGET_H) $(CGRAPH_H) \\\n-   $(MD5_H) $(INPUT_H) $(FUNCTION_H) $(VARRAY_H) $(GIMPLE_H) $(TREE_PASS_H)\n+   $(MD5_H) $(INPUT_H) $(FUNCTION_H) $(GIMPLE_H) $(TREE_PASS_H)\n dwarf2asm.o : dwarf2asm.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(FLAGS_H) $(RTL_H) $(TREE_H) output.h dwarf2asm.h $(TM_P_H) $(GGC_H) \\\n    gt-dwarf2asm.h $(DWARF2_H) $(SPLAY_TREE_H) $(TARGET_H)\n@@ -3189,7 +3189,7 @@ alias.o : alias.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(FLAGS_H) hard-reg-set.h $(BASIC_BLOCK_H) $(REGS_H) $(TOPLEV_H) output.h \\\n    $(ALIAS_H) $(EMIT_RTL_H) $(GGC_H) $(FUNCTION_H) cselib.h $(TREE_H) $(TM_P_H) \\\n    langhooks.h $(TARGET_H) gt-alias.h $(TIMEVAR_H) $(CGRAPH_H) \\\n-   $(SPLAY_TREE_H) $(VARRAY_H) $(IPA_TYPE_ESCAPE_H) $(DF_H) $(TREE_PASS_H) \\\n+   $(SPLAY_TREE_H) $(IPA_TYPE_ESCAPE_H) $(DF_H) $(TREE_PASS_H) \\\n    tree-ssa-alias.h pointer-set.h $(TREE_FLOW_H)\n stack-ptr-mod.o : stack-ptr-mod.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TM_H) $(TREE_H) $(RTL_H) $(REGS_H) $(EXPR_H) $(TREE_PASS_H) \\\n@@ -3297,7 +3297,7 @@ recog.o : recog.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n reg-stack.o : reg-stack.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(RTL_H) $(TREE_H) $(RECOG_H) $(REGS_H) hard-reg-set.h $(FLAGS_H) \\\n    insn-config.h $(TOPLEV_H) reload.h $(FUNCTION_H) $(TM_P_H) $(GGC_H) \\\n-   $(BASIC_BLOCK_H) $(CFGLAYOUT_H) output.h $(VARRAY_H) $(TIMEVAR_H) \\\n+   $(BASIC_BLOCK_H) $(CFGLAYOUT_H) output.h $(TIMEVAR_H) \\\n    $(TREE_PASS_H) $(TARGET_H) vecprim.h $(DF_H)\n sreal.o: sreal.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) sreal.h\n predict.o: predict.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\"}, {"sha": "baf0a62971e539c09e17c5998778d81fa8cc694b", "filename": "gcc/alias.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aae8d16ddea09346e152195ae4180658ec6d8ee/gcc%2Falias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aae8d16ddea09346e152195ae4180658ec6d8ee/gcc%2Falias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Falias.c?ref=9aae8d16ddea09346e152195ae4180658ec6d8ee", "patch": "@@ -42,7 +42,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"timevar.h\"\n #include \"target.h\"\n #include \"cgraph.h\"\n-#include \"varray.h\"\n #include \"tree-pass.h\"\n #include \"ipa-type-escape.h\"\n #include \"df.h\""}, {"sha": "4bd33bde0c72b5de86e69c04992ad8740aa06363", "filename": "gcc/basic-block.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aae8d16ddea09346e152195ae4180658ec6d8ee/gcc%2Fbasic-block.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aae8d16ddea09346e152195ae4180658ec6d8ee/gcc%2Fbasic-block.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbasic-block.h?ref=9aae8d16ddea09346e152195ae4180658ec6d8ee", "patch": "@@ -23,7 +23,6 @@ along with GCC; see the file COPYING3.  If not see\n \n #include \"bitmap.h\"\n #include \"sbitmap.h\"\n-#include \"varray.h\"\n #include \"partition.h\"\n #include \"hard-reg-set.h\"\n #include \"predict.h\""}, {"sha": "17183448d4000a30989fb5f8f55e86b6de38d5e6", "filename": "gcc/c-common.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aae8d16ddea09346e152195ae4180658ec6d8ee/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aae8d16ddea09346e152195ae4180658ec6d8ee/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=9aae8d16ddea09346e152195ae4180658ec6d8ee", "patch": "@@ -30,7 +30,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"c-pragma.h\"\n #include \"rtl.h\"\n #include \"ggc.h\"\n-#include \"varray.h\"\n #include \"expr.h\"\n #include \"c-common.h\"\n #include \"tm_p.h\""}, {"sha": "e79a3929087bc497033dff4216e5cd83f684685a", "filename": "gcc/c-common.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aae8d16ddea09346e152195ae4180658ec6d8ee/gcc%2Fc-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aae8d16ddea09346e152195ae4180658ec6d8ee/gcc%2Fc-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.h?ref=9aae8d16ddea09346e152195ae4180658ec6d8ee", "patch": "@@ -850,7 +850,6 @@ extern tree c_alignof_expr (location_t, tree);\n    NOP_EXPR is used as a special case (see truthvalue_conversion).  */\n extern void binary_op_error (location_t, enum tree_code, tree, tree);\n extern tree fix_string_type (tree);\n-struct varray_head_tag;\n extern void constant_expression_warning (tree);\n extern void constant_expression_error (tree);\n extern bool strict_aliasing_warning (tree, tree, tree);"}, {"sha": "5ee9634d5073fff996e7f3f033d1cc6c56ce9853", "filename": "gcc/c-gimplify.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aae8d16ddea09346e152195ae4180658ec6d8ee/gcc%2Fc-gimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aae8d16ddea09346e152195ae4180658ec6d8ee/gcc%2Fc-gimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-gimplify.c?ref=9aae8d16ddea09346e152195ae4180658ec6d8ee", "patch": "@@ -29,7 +29,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n-#include \"varray.h\"\n #include \"c-tree.h\"\n #include \"c-common.h\"\n #include \"gimple.h\""}, {"sha": "f3cc9375420e560eca13458adf34cb1e95586af6", "filename": "gcc/c-objc-common.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aae8d16ddea09346e152195ae4180658ec6d8ee/gcc%2Fc-objc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aae8d16ddea09346e152195ae4180658ec6d8ee/gcc%2Fc-objc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-objc-common.c?ref=9aae8d16ddea09346e152195ae4180658ec6d8ee", "patch": "@@ -34,7 +34,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"toplev.h\"\n #include \"diagnostic.h\"\n #include \"tree-inline.h\"\n-#include \"varray.h\"\n #include \"ggc.h\"\n #include \"langhooks.h\"\n #include \"tree-mudflap.h\""}, {"sha": "5111f819c72dc13a67da9c18f33658e06dbe915a", "filename": "gcc/c-semantics.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aae8d16ddea09346e152195ae4180658ec6d8ee/gcc%2Fc-semantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aae8d16ddea09346e152195ae4180658ec6d8ee/gcc%2Fc-semantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-semantics.c?ref=9aae8d16ddea09346e152195ae4180658ec6d8ee", "patch": "@@ -26,7 +26,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"function.h\"\n #include \"splay-tree.h\"\n-#include \"varray.h\"\n #include \"c-common.h\"\n #include \"except.h\"\n /* In order for the format checking to accept the C frontend"}, {"sha": "fe51bf78431232515984cb78a33cfcde80537bab", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aae8d16ddea09346e152195ae4180658ec6d8ee/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aae8d16ddea09346e152195ae4180658ec6d8ee/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=9aae8d16ddea09346e152195ae4180658ec6d8ee", "patch": "@@ -1,3 +1,8 @@\n+2010-04-30  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* optimize.c, parser.c,mangle.c, cp-tree.h: DO not include varray.h.\n+\t* Make-lang.in: Don't include varray.h dependency in CXX_TREE_H.\n+\n 2010-04-30  Shujing Zhao  <pearly.zhao@oracle.com>\n \n \tPR c++/43779"}, {"sha": "d9ef1cd4dbff79170097cb6188d953ee7e7b83cf", "filename": "gcc/cp/Make-lang.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aae8d16ddea09346e152195ae4180658ec6d8ee/gcc%2Fcp%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aae8d16ddea09346e152195ae4180658ec6d8ee/gcc%2Fcp%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FMake-lang.in?ref=9aae8d16ddea09346e152195ae4180658ec6d8ee", "patch": "@@ -241,7 +241,7 @@ c++.stagefeedback: stagefeedback-start\n #\f\n # .o: .h dependencies.\n CXX_TREE_H = $(TREE_H) cp/name-lookup.h cp/cp-tree.h $(C_COMMON_H) \\\n-\t$(FUNCTION_H) $(VARRAY_H) \\\n+\t$(FUNCTION_H) \\\n \t$(SYSTEM_H) coretypes.h $(CONFIG_H) $(TARGET_H) $(GGC_H) \\\n \t$(srcdir)/../include/hashtab.h $(srcdir)/../include/splay-tree.h\n "}, {"sha": "055df4748fa4cb65011a67dfafec1ecd075b609e", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aae8d16ddea09346e152195ae4180658ec6d8ee/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aae8d16ddea09346e152195ae4180658ec6d8ee/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=9aae8d16ddea09346e152195ae4180658ec6d8ee", "patch": "@@ -28,7 +28,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"hashtab.h\"\n #include \"splay-tree.h\"\n #include \"vec.h\"\n-#include \"varray.h\"\n #include \"c-common.h\"\n #include \"name-lookup.h\"\n "}, {"sha": "187a6563d20ca7c3685962a380a142e8395882b0", "filename": "gcc/cp/mangle.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aae8d16ddea09346e152195ae4180658ec6d8ee/gcc%2Fcp%2Fmangle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aae8d16ddea09346e152195ae4180658ec6d8ee/gcc%2Fcp%2Fmangle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmangle.c?ref=9aae8d16ddea09346e152195ae4180658ec6d8ee", "patch": "@@ -55,7 +55,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"real.h\"\n #include \"obstack.h\"\n #include \"toplev.h\"\n-#include \"varray.h\"\n #include \"flags.h\"\n #include \"target.h\"\n #include \"cgraph.h\""}, {"sha": "bad63f55ca86bd45c8f7e58b33284af74e41bc8b", "filename": "gcc/cp/optimize.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aae8d16ddea09346e152195ae4180658ec6d8ee/gcc%2Fcp%2Foptimize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aae8d16ddea09346e152195ae4180658ec6d8ee/gcc%2Fcp%2Foptimize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Foptimize.c?ref=9aae8d16ddea09346e152195ae4180658ec6d8ee", "patch": "@@ -30,7 +30,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"input.h\"\n #include \"integrate.h\"\n #include \"toplev.h\"\n-#include \"varray.h\"\n #include \"params.h\"\n #include \"hashtab.h\"\n #include \"target.h\""}, {"sha": "c3e27e52b6b18449d15123e16934dae871ce58d8", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aae8d16ddea09346e152195ae4180658ec6d8ee/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aae8d16ddea09346e152195ae4180658ec6d8ee/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=9aae8d16ddea09346e152195ae4180658ec6d8ee", "patch": "@@ -24,7 +24,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"dyn-string.h\"\n-#include \"varray.h\"\n #include \"cpplib.h\"\n #include \"tree.h\"\n #include \"cp-tree.h\""}, {"sha": "ac0258c98d39a8e5a36246de85fd36e44295d938", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aae8d16ddea09346e152195ae4180658ec6d8ee/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aae8d16ddea09346e152195ae4180658ec6d8ee/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=9aae8d16ddea09346e152195ae4180658ec6d8ee", "patch": "@@ -79,7 +79,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"dwarf2out.h\"\n #include \"dwarf2asm.h\"\n #include \"toplev.h\"\n-#include \"varray.h\"\n #include \"ggc.h\"\n #include \"md5.h\"\n #include \"tm_p.h\""}, {"sha": "bc775b19f0cf8c90dc0d2377a8ce50dac2d03d77", "filename": "gcc/ggc-zone.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aae8d16ddea09346e152195ae4180658ec6d8ee/gcc%2Fggc-zone.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aae8d16ddea09346e152195ae4180658ec6d8ee/gcc%2Fggc-zone.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fggc-zone.c?ref=9aae8d16ddea09346e152195ae4180658ec6d8ee", "patch": "@@ -30,7 +30,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"rtl.h\"\n #include \"tm_p.h\"\n #include \"toplev.h\"\n-#include \"varray.h\"\n #include \"flags.h\"\n #include \"ggc.h\"\n #include \"timevar.h\""}, {"sha": "ae5a9fdfcf5f213dd8c6b44446a61686e05dbf4b", "filename": "gcc/gimple-low.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aae8d16ddea09346e152195ae4180658ec6d8ee/gcc%2Fgimple-low.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aae8d16ddea09346e152195ae4180658ec6d8ee/gcc%2Fgimple-low.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-low.c?ref=9aae8d16ddea09346e152195ae4180658ec6d8ee", "patch": "@@ -25,7 +25,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"tree.h\"\n #include \"rtl.h\"\n-#include \"varray.h\"\n #include \"gimple.h\"\n #include \"tree-iterator.h\"\n #include \"tree-inline.h\""}, {"sha": "b46072506eeaff39bb8dd6384af1c3f9b1ca59f9", "filename": "gcc/gimplify.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aae8d16ddea09346e152195ae4180658ec6d8ee/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aae8d16ddea09346e152195ae4180658ec6d8ee/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=9aae8d16ddea09346e152195ae4180658ec6d8ee", "patch": "@@ -27,7 +27,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"tree.h\"\n #include \"rtl.h\"\n-#include \"varray.h\"\n #include \"gimple.h\"\n #include \"tree-iterator.h\"\n #include \"tree-inline.h\""}, {"sha": "7c562f9daef2d7bf3a0cf9b3d73081547d80f08a", "filename": "gcc/integrate.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aae8d16ddea09346e152195ae4180658ec6d8ee/gcc%2Fintegrate.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aae8d16ddea09346e152195ae4180658ec6d8ee/gcc%2Fintegrate.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fintegrate.h?ref=9aae8d16ddea09346e152195ae4180658ec6d8ee", "patch": "@@ -18,8 +18,6 @@ You should have received a copy of the GNU General Public License\n along with GCC; see the file COPYING3.  If not see\n <http://www.gnu.org/licenses/>.  */\n \n-#include \"varray.h\"\n-\n extern rtx get_hard_reg_initial_val (enum machine_mode, unsigned int);\n extern rtx has_hard_reg_initial_val (enum machine_mode, unsigned int);\n /* If a pseudo represents an initial hard reg (or expression), return"}, {"sha": "338250aeb0dfcb59f8c703a661241d42a43d5802", "filename": "gcc/lto-cgraph.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aae8d16ddea09346e152195ae4180658ec6d8ee/gcc%2Flto-cgraph.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aae8d16ddea09346e152195ae4180658ec6d8ee/gcc%2Flto-cgraph.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-cgraph.c?ref=9aae8d16ddea09346e152195ae4180658ec6d8ee", "patch": "@@ -30,7 +30,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"flags.h\"\n #include \"params.h\"\n #include \"input.h\"\n-#include \"varray.h\"\n #include \"hashtab.h\"\n #include \"langhooks.h\"\n #include \"basic-block.h\""}, {"sha": "8c2df96598a3efeaf7098890a99cbad54cfcf69d", "filename": "gcc/lto-section-in.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aae8d16ddea09346e152195ae4180658ec6d8ee/gcc%2Flto-section-in.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aae8d16ddea09346e152195ae4180658ec6d8ee/gcc%2Flto-section-in.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-section-in.c?ref=9aae8d16ddea09346e152195ae4180658ec6d8ee", "patch": "@@ -29,7 +29,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"flags.h\"\n #include \"params.h\"\n #include \"input.h\"\n-#include \"varray.h\"\n #include \"hashtab.h\"\n #include \"basic-block.h\"\n #include \"tree-flow.h\""}, {"sha": "09ecc07d8dc9a505c666137e21318e291155a328", "filename": "gcc/lto-section-out.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aae8d16ddea09346e152195ae4180658ec6d8ee/gcc%2Flto-section-out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aae8d16ddea09346e152195ae4180658ec6d8ee/gcc%2Flto-section-out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-section-out.c?ref=9aae8d16ddea09346e152195ae4180658ec6d8ee", "patch": "@@ -28,7 +28,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"expr.h\"\n #include \"params.h\"\n #include \"input.h\"\n-#include \"varray.h\"\n #include \"hashtab.h\"\n #include \"basic-block.h\"\n #include \"tree-flow.h\""}, {"sha": "3c31b04f8c386a8a980cd1234dd821e813684583", "filename": "gcc/lto-streamer-in.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aae8d16ddea09346e152195ae4180658ec6d8ee/gcc%2Flto-streamer-in.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aae8d16ddea09346e152195ae4180658ec6d8ee/gcc%2Flto-streamer-in.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer-in.c?ref=9aae8d16ddea09346e152195ae4180658ec6d8ee", "patch": "@@ -30,7 +30,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"flags.h\"\n #include \"params.h\"\n #include \"input.h\"\n-#include \"varray.h\"\n #include \"hashtab.h\"\n #include \"basic-block.h\"\n #include \"tree-flow.h\""}, {"sha": "77d98aac49e7c891a5e56d4af566dc848c824953", "filename": "gcc/lto-streamer-out.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aae8d16ddea09346e152195ae4180658ec6d8ee/gcc%2Flto-streamer-out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aae8d16ddea09346e152195ae4180658ec6d8ee/gcc%2Flto-streamer-out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer-out.c?ref=9aae8d16ddea09346e152195ae4180658ec6d8ee", "patch": "@@ -30,7 +30,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"flags.h\"\n #include \"params.h\"\n #include \"input.h\"\n-#include \"varray.h\"\n #include \"hashtab.h\"\n #include \"basic-block.h\"\n #include \"tree-flow.h\""}, {"sha": "d734681ad2f1e8a05288af2418813ec11f27bc9f", "filename": "gcc/objc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aae8d16ddea09346e152195ae4180658ec6d8ee/gcc%2Fobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aae8d16ddea09346e152195ae4180658ec6d8ee/gcc%2Fobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FChangeLog?ref=9aae8d16ddea09346e152195ae4180658ec6d8ee", "patch": "@@ -1,3 +1,7 @@\n+2010-04-30  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* objc-act.c: Do not include varray.h.\n+\n 2010-04-07  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c/18624"}, {"sha": "b802ecd4915f4825b12d25dc4d836bbd995a67f3", "filename": "gcc/objc/objc-act.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aae8d16ddea09346e152195ae4180658ec6d8ee/gcc%2Fobjc%2Fobjc-act.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aae8d16ddea09346e152195ae4180658ec6d8ee/gcc%2Fobjc%2Fobjc-act.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.c?ref=9aae8d16ddea09346e152195ae4180658ec6d8ee", "patch": "@@ -67,7 +67,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"output.h\"\n #include \"toplev.h\"\n #include \"ggc.h\"\n-#include \"varray.h\"\n #include \"debug.h\"\n #include \"target.h\"\n #include \"diagnostic.h\""}, {"sha": "3d1b8b3206a86689fa80d5f8091570adec996b5c", "filename": "gcc/objcp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aae8d16ddea09346e152195ae4180658ec6d8ee/gcc%2Fobjcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aae8d16ddea09346e152195ae4180658ec6d8ee/gcc%2Fobjcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjcp%2FChangeLog?ref=9aae8d16ddea09346e152195ae4180658ec6d8ee", "patch": "@@ -1,3 +1,7 @@\n+2010-04-30  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* objcp-decl.c: Do not include varray.h.\n+\n 2009-09-22  Richard Guenther  <rguenther@suse.de>\n \n \tPR objc++/41430"}, {"sha": "c8e34d425ba0f4397c3c6b96054d595d42ae982c", "filename": "gcc/objcp/objcp-decl.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aae8d16ddea09346e152195ae4180658ec6d8ee/gcc%2Fobjcp%2Fobjcp-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aae8d16ddea09346e152195ae4180658ec6d8ee/gcc%2Fobjcp%2Fobjcp-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjcp%2Fobjcp-decl.c?ref=9aae8d16ddea09346e152195ae4180658ec6d8ee", "patch": "@@ -36,7 +36,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"cpplib.h\"\n #include \"debug.h\"\n #include \"target.h\"\n-#include \"varray.h\"\n \n #include \"objc-act.h\"\n #include \"objcp-decl.h\""}, {"sha": "35b20431346b3b133d7ac68964daa9438982c915", "filename": "gcc/omega.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aae8d16ddea09346e152195ae4180658ec6d8ee/gcc%2Fomega.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aae8d16ddea09346e152195ae4180658ec6d8ee/gcc%2Fomega.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomega.c?ref=9aae8d16ddea09346e152195ae4180658ec6d8ee", "patch": "@@ -38,7 +38,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"ggc.h\"\n #include \"tree.h\"\n #include \"diagnostic.h\"\n-#include \"varray.h\"\n #include \"tree-pass.h\"\n #include \"omega.h\"\n "}, {"sha": "b59bcffd49be2e9632815a444e7f6b354c6fca1f", "filename": "gcc/reg-stack.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aae8d16ddea09346e152195ae4180658ec6d8ee/gcc%2Freg-stack.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aae8d16ddea09346e152195ae4180658ec6d8ee/gcc%2Freg-stack.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freg-stack.c?ref=9aae8d16ddea09346e152195ae4180658ec6d8ee", "patch": "@@ -168,7 +168,6 @@\n #include \"output.h\"\n #include \"basic-block.h\"\n #include \"cfglayout.h\"\n-#include \"varray.h\"\n #include \"reload.h\"\n #include \"ggc.h\"\n #include \"timevar.h\""}, {"sha": "63235504e9c21c33a085b4e6bcc951359e976d6e", "filename": "gcc/regs.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aae8d16ddea09346e152195ae4180658ec6d8ee/gcc%2Fregs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aae8d16ddea09346e152195ae4180658ec6d8ee/gcc%2Fregs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregs.h?ref=9aae8d16ddea09346e152195ae4180658ec6d8ee", "patch": "@@ -22,7 +22,6 @@ along with GCC; see the file COPYING3.  If not see\n #ifndef GCC_REGS_H\n #define GCC_REGS_H\n \n-#include \"varray.h\"\n #include \"obstack.h\"\n #include \"hard-reg-set.h\"\n #include \"basic-block.h\""}, {"sha": "50b79a72f2ba3f048773f26ef363eaba0ee3b237", "filename": "gcc/toplev.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aae8d16ddea09346e152195ae4180658ec6d8ee/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aae8d16ddea09346e152195ae4180658ec6d8ee/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=9aae8d16ddea09346e152195ae4180658ec6d8ee", "patch": "@@ -86,6 +86,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"gimple.h\"\n #include \"tree-ssa-alias.h\"\n #include \"plugin.h\"\n+#include \"varray.h\"\n \n #if defined (DWARF2_UNWIND_INFO) || defined (DWARF2_DEBUGGING_INFO)\n #include \"dwarf2out.h\""}, {"sha": "fbdaa0df36cd0cce9cdbcfae6f029f71fa818811", "filename": "gcc/tree-if-conv.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aae8d16ddea09346e152195ae4180658ec6d8ee/gcc%2Ftree-if-conv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aae8d16ddea09346e152195ae4180658ec6d8ee/gcc%2Ftree-if-conv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-if-conv.c?ref=9aae8d16ddea09346e152195ae4180658ec6d8ee", "patch": "@@ -88,7 +88,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"flags.h\"\n #include \"timevar.h\"\n-#include \"varray.h\"\n #include \"rtl.h\"\n #include \"basic-block.h\"\n #include \"diagnostic.h\""}, {"sha": "839dc3c21fc8cb7e6a422f6de26d9d208fd092d1", "filename": "gcc/tree-into-ssa.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aae8d16ddea09346e152195ae4180658ec6d8ee/gcc%2Ftree-into-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aae8d16ddea09346e152195ae4180658ec6d8ee/gcc%2Ftree-into-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-into-ssa.c?ref=9aae8d16ddea09346e152195ae4180658ec6d8ee", "patch": "@@ -38,7 +38,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-flow.h\"\n #include \"gimple.h\"\n #include \"tree-inline.h\"\n-#include \"varray.h\"\n #include \"timevar.h\"\n #include \"hashtab.h\"\n #include \"tree-dump.h\""}, {"sha": "c035f76b5635358185ae28723a50ef5f7bed2657", "filename": "gcc/tree-nomudflap.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aae8d16ddea09346e152195ae4180658ec6d8ee/gcc%2Ftree-nomudflap.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aae8d16ddea09346e152195ae4180658ec6d8ee/gcc%2Ftree-nomudflap.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-nomudflap.c?ref=9aae8d16ddea09346e152195ae4180658ec6d8ee", "patch": "@@ -30,7 +30,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"diagnostic.h\"\n #include \"hashtab.h\"\n #include \"output.h\"\n-#include \"varray.h\"\n #include \"langhooks.h\"\n #include \"tree-mudflap.h\"\n #include \"tree-pass.h\""}, {"sha": "d9b82e344c71999b6599f7f60ed9bba8322d254a", "filename": "gcc/tree-phinodes.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aae8d16ddea09346e152195ae4180658ec6d8ee/gcc%2Ftree-phinodes.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aae8d16ddea09346e152195ae4180658ec6d8ee/gcc%2Ftree-phinodes.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-phinodes.c?ref=9aae8d16ddea09346e152195ae4180658ec6d8ee", "patch": "@@ -23,7 +23,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"tree.h\"\n #include \"rtl.h\"\n-#include \"varray.h\"\n #include \"ggc.h\"\n #include \"basic-block.h\"\n #include \"tree-flow.h\""}, {"sha": "a1fdfa46254c0806da7eb505271c22064341bd9c", "filename": "gcc/tree-ssa-loop-ivopts.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aae8d16ddea09346e152195ae4180658ec6d8ee/gcc%2Ftree-ssa-loop-ivopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aae8d16ddea09346e152195ae4180658ec6d8ee/gcc%2Ftree-ssa-loop-ivopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-ivopts.c?ref=9aae8d16ddea09346e152195ae4180658ec6d8ee", "patch": "@@ -77,7 +77,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-dump.h\"\n #include \"timevar.h\"\n #include \"cfgloop.h\"\n-#include \"varray.h\"\n #include \"expr.h\"\n #include \"tree-pass.h\"\n #include \"ggc.h\""}, {"sha": "3377eeb1dbb1ced88a7ee9636707f37a63d0269c", "filename": "gcc/tree-ssa-loop-prefetch.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aae8d16ddea09346e152195ae4180658ec6d8ee/gcc%2Ftree-ssa-loop-prefetch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aae8d16ddea09346e152195ae4180658ec6d8ee/gcc%2Ftree-ssa-loop-prefetch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-prefetch.c?ref=9aae8d16ddea09346e152195ae4180658ec6d8ee", "patch": "@@ -32,7 +32,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-dump.h\"\n #include \"timevar.h\"\n #include \"cfgloop.h\"\n-#include \"varray.h\"\n #include \"expr.h\"\n #include \"tree-pass.h\"\n #include \"ggc.h\""}, {"sha": "7c8ec4527b9887a551b7ee63044b1af71545920e", "filename": "gcc/tree-ssa-propagate.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aae8d16ddea09346e152195ae4180658ec6d8ee/gcc%2Ftree-ssa-propagate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aae8d16ddea09346e152195ae4180658ec6d8ee/gcc%2Ftree-ssa-propagate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-propagate.c?ref=9aae8d16ddea09346e152195ae4180658ec6d8ee", "patch": "@@ -38,7 +38,6 @@\n #include \"tree-pass.h\"\n #include \"tree-ssa-propagate.h\"\n #include \"langhooks.h\"\n-#include \"varray.h\"\n #include \"vec.h\"\n #include \"value-prof.h\"\n #include \"gimple.h\""}, {"sha": "88fa3729fee8400938445573078f09523bc405e1", "filename": "gcc/tree-ssa-structalias.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aae8d16ddea09346e152195ae4180658ec6d8ee/gcc%2Ftree-ssa-structalias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aae8d16ddea09346e152195ae4180658ec6d8ee/gcc%2Ftree-ssa-structalias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-structalias.c?ref=9aae8d16ddea09346e152195ae4180658ec6d8ee", "patch": "@@ -35,7 +35,6 @@\n #include \"tree.h\"\n #include \"tree-flow.h\"\n #include \"tree-inline.h\"\n-#include \"varray.h\"\n #include \"diagnostic.h\"\n #include \"toplev.h\"\n #include \"gimple.h\""}, {"sha": "114a9d89a7b6454a94bd4bb165cc4a9a6e17a9b8", "filename": "gcc/tree-ssa-uninit.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aae8d16ddea09346e152195ae4180658ec6d8ee/gcc%2Ftree-ssa-uninit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aae8d16ddea09346e152195ae4180658ec6d8ee/gcc%2Ftree-ssa-uninit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-uninit.c?ref=9aae8d16ddea09346e152195ae4180658ec6d8ee", "patch": "@@ -40,7 +40,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-flow.h\"\n #include \"gimple.h\"\n #include \"tree-inline.h\"\n-#include \"varray.h\"\n #include \"timevar.h\"\n #include \"hashtab.h\"\n #include \"tree-dump.h\""}, {"sha": "f51e35d2bf70c4e73d2575fbc07d2e474d6d9047", "filename": "gcc/tree-ssa.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aae8d16ddea09346e152195ae4180658ec6d8ee/gcc%2Ftree-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aae8d16ddea09346e152195ae4180658ec6d8ee/gcc%2Ftree-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa.c?ref=9aae8d16ddea09346e152195ae4180658ec6d8ee", "patch": "@@ -40,7 +40,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-flow.h\"\n #include \"gimple.h\"\n #include \"tree-inline.h\"\n-#include \"varray.h\"\n #include \"timevar.h\"\n #include \"hashtab.h\"\n #include \"tree-dump.h\""}, {"sha": "763fe2bd22870439f8247722b59fc57e16b2b4e9", "filename": "gcc/tree-ssanames.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aae8d16ddea09346e152195ae4180658ec6d8ee/gcc%2Ftree-ssanames.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aae8d16ddea09346e152195ae4180658ec6d8ee/gcc%2Ftree-ssanames.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssanames.c?ref=9aae8d16ddea09346e152195ae4180658ec6d8ee", "patch": "@@ -23,7 +23,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n-#include \"varray.h\"\n #include \"ggc.h\"\n #include \"tree-flow.h\"\n #include \"tree-pass.h\""}, {"sha": "0cfdcad224ba6b8b714a0aa6f49c5ce334aaffac", "filename": "gcc/tree.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aae8d16ddea09346e152195ae4180658ec6d8ee/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aae8d16ddea09346e152195ae4180658ec6d8ee/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=9aae8d16ddea09346e152195ae4180658ec6d8ee", "patch": "@@ -1974,8 +1974,6 @@ struct GTY(()) tree_omp_clause {\n };\n \f\n \n-struct varray_head_tag;\n-\n /* In a BLOCK node.  */\n #define BLOCK_VARS(NODE) (BLOCK_CHECK (NODE)->block.vars)\n #define BLOCK_NONLOCALIZED_VARS(NODE) \\"}]}