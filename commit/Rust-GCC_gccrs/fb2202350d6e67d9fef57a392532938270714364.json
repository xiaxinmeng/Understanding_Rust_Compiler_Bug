{"sha": "fb2202350d6e67d9fef57a392532938270714364", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmIyMjAyMzUwZDZlNjdkOWZlZjU3YTM5MjUzMjkzODI3MDcxNDM2NA==", "commit": {"author": {"name": "Francois-Xavier Coudert", "email": "coudert@clipper.ens.fr", "date": "2008-02-23T18:42:04Z"}, "committer": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2008-02-23T18:42:04Z"}, "message": "re PR target/25477 (builtin functions should use $LDBL128 suffix on darwin when appropriate)\n\n\tPR target/25477\n\n\t* config/darwin-protos.h: Add darwin_patch_builtins prototype.\n\t* config/darwin-ppc-ldouble-patch.def: New file.\n\t* config/rs6000/darwin.h (SUBTARGET_INIT_BUILTINS): New macro.\n\t* config/rs6000/rs6000.c (rs6000_init_builtins): Call\n\tSUBTARGET_INIT_BUILTINS if defined.\n\t* config/darwin.c (darwin_patch_builtin,\n\tdarwin_patch_builtins): New functions.\n\n\t* trans-expr.c (gfc_conv_power_op): Use BUILT_IN_CPOW{F,,L}.\n\t* f95-lang.c (gfc_init_builtin_functions): Define BUILT_IN_CPOW{F,,L}.\n\t* trans.h (gfor_fndecl_math_cpow, gfor_fndecl_math_cpowf,\n\tgfor_fndecl_math_cpowl10, gfor_fndecl_math_cpowl16): Remove.\n\t* trans-decl.c: Likewise.\n\n\t* gfortran.dg/large_real_kind_2.F90: Split testing of ERF and\n\tERFC into gfortran.dg/large_real_kind_3.F90.\n\t* gfortran.dg/large_real_kind_3.F90: New test.\n\nFrom-SVN: r132576", "tree": {"sha": "cd6f69f8cb255a89ac25d6d47a969d01dbc4675e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cd6f69f8cb255a89ac25d6d47a969d01dbc4675e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fb2202350d6e67d9fef57a392532938270714364", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb2202350d6e67d9fef57a392532938270714364", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb2202350d6e67d9fef57a392532938270714364", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb2202350d6e67d9fef57a392532938270714364/comments", "author": null, "committer": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f79db4f66eba251456c2a9c2fc9d0daef1af9e90", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f79db4f66eba251456c2a9c2fc9d0daef1af9e90", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f79db4f66eba251456c2a9c2fc9d0daef1af9e90"}], "stats": {"total": 248, "additions": 210, "deletions": 38}, "files": [{"sha": "e4af96d6371acb18138727a05bf0878068179fd8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb2202350d6e67d9fef57a392532938270714364/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb2202350d6e67d9fef57a392532938270714364/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fb2202350d6e67d9fef57a392532938270714364", "patch": "@@ -1,3 +1,14 @@\n+2008-02-23  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n+\n+\tPR target/25477\n+\t* config/darwin-protos.h: Add darwin_patch_builtins prototype.\n+\t* config/darwin-ppc-ldouble-patch.def: New file.\n+\t* config/rs6000/darwin.h (SUBTARGET_INIT_BUILTINS): New macro.\n+\t* config/rs6000/rs6000.c (rs6000_init_builtins): Call\n+\tSUBTARGET_INIT_BUILTINS if defined.\n+\t* config/darwin.c (darwin_patch_builtin,\n+\tdarwin_patch_builtins): New functions.\n+\n 2008-02-23  Andrew Pinski  <andrew_pinski@playstation.sony.com>\n \n \tPR rtl-opt/33512"}, {"sha": "0d09221e6a393f7ade888fce7e5f1afdd9b1be5f", "filename": "gcc/config/darwin-ppc-ldouble-patch.def", "status": "added", "additions": 95, "deletions": 0, "changes": 95, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb2202350d6e67d9fef57a392532938270714364/gcc%2Fconfig%2Fdarwin-ppc-ldouble-patch.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb2202350d6e67d9fef57a392532938270714364/gcc%2Fconfig%2Fdarwin-ppc-ldouble-patch.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin-ppc-ldouble-patch.def?ref=fb2202350d6e67d9fef57a392532938270714364", "patch": "@@ -0,0 +1,95 @@\n+PATCH_BUILTIN (BUILT_IN_ACOSHL)\n+PATCH_BUILTIN (BUILT_IN_ACOSL)\n+PATCH_BUILTIN (BUILT_IN_ASINHL)\n+PATCH_BUILTIN (BUILT_IN_ASINL)\n+PATCH_BUILTIN (BUILT_IN_ATAN2L)\n+PATCH_BUILTIN (BUILT_IN_ATANHL)\n+PATCH_BUILTIN (BUILT_IN_ATANL)\n+PATCH_BUILTIN (BUILT_IN_CABSL)\n+PATCH_BUILTIN (BUILT_IN_CACOSHL)\n+PATCH_BUILTIN (BUILT_IN_CACOSL)\n+PATCH_BUILTIN (BUILT_IN_CARGL)\n+PATCH_BUILTIN (BUILT_IN_CASINHL)\n+PATCH_BUILTIN (BUILT_IN_CASINL)\n+PATCH_BUILTIN (BUILT_IN_CATANHL)\n+PATCH_BUILTIN (BUILT_IN_CATANL)\n+PATCH_BUILTIN (BUILT_IN_CBRTL)\n+PATCH_BUILTIN (BUILT_IN_CCOSHL)\n+PATCH_BUILTIN (BUILT_IN_CCOSL)\n+PATCH_BUILTIN (BUILT_IN_CEILL)\n+PATCH_BUILTIN (BUILT_IN_CEXPL)\n+PATCH_BUILTIN (BUILT_IN_CIMAGL)\n+PATCH_BUILTIN (BUILT_IN_CLOGL)\n+PATCH_BUILTIN (BUILT_IN_CONJL)\n+PATCH_BUILTIN (BUILT_IN_COPYSIGNL)\n+PATCH_BUILTIN (BUILT_IN_COSHL)\n+PATCH_BUILTIN (BUILT_IN_COSL)\n+PATCH_BUILTIN (BUILT_IN_CPOWL)\n+PATCH_BUILTIN (BUILT_IN_CPROJL)\n+PATCH_BUILTIN (BUILT_IN_CREALL)\n+PATCH_BUILTIN (BUILT_IN_CSINHL)\n+PATCH_BUILTIN (BUILT_IN_CSINL)\n+PATCH_BUILTIN (BUILT_IN_CSQRTL)\n+PATCH_BUILTIN (BUILT_IN_CTANHL)\n+PATCH_BUILTIN (BUILT_IN_CTANL)\n+PATCH_BUILTIN (BUILT_IN_ERFCL)\n+PATCH_BUILTIN (BUILT_IN_ERFL)\n+PATCH_BUILTIN (BUILT_IN_EXP2L)\n+PATCH_BUILTIN (BUILT_IN_EXPL)\n+PATCH_BUILTIN (BUILT_IN_EXPM1L)\n+PATCH_BUILTIN (BUILT_IN_FABSL)\n+PATCH_BUILTIN (BUILT_IN_FDIML)\n+PATCH_BUILTIN (BUILT_IN_FLOORL)\n+PATCH_BUILTIN (BUILT_IN_FMAL)\n+PATCH_BUILTIN (BUILT_IN_FMAXL)\n+PATCH_BUILTIN (BUILT_IN_FMINL)\n+PATCH_BUILTIN (BUILT_IN_FMODL)\n+PATCH_BUILTIN (BUILT_IN_FREXPL)\n+PATCH_BUILTIN (BUILT_IN_HYPOTL)\n+PATCH_BUILTIN (BUILT_IN_ILOGBL)\n+PATCH_BUILTIN (BUILT_IN_LDEXPL)\n+PATCH_BUILTIN (BUILT_IN_LGAMMAL)\n+PATCH_BUILTIN (BUILT_IN_LLRINTL)\n+PATCH_BUILTIN (BUILT_IN_LLROUNDL)\n+PATCH_BUILTIN (BUILT_IN_LOG10L)\n+PATCH_BUILTIN (BUILT_IN_LOG1PL)\n+PATCH_BUILTIN (BUILT_IN_LOG2L)\n+PATCH_BUILTIN (BUILT_IN_LOGBL)\n+PATCH_BUILTIN (BUILT_IN_LOGL)\n+PATCH_BUILTIN (BUILT_IN_LRINTL)\n+PATCH_BUILTIN (BUILT_IN_LROUNDL)\n+PATCH_BUILTIN (BUILT_IN_MODFL)\n+PATCH_BUILTIN (BUILT_IN_NEARBYINTL)\n+PATCH_BUILTIN (BUILT_IN_NEXTAFTERL)\n+PATCH_BUILTIN (BUILT_IN_NEXTTOWARD)\n+PATCH_BUILTIN (BUILT_IN_NEXTTOWARDF)\n+PATCH_BUILTIN (BUILT_IN_NEXTTOWARDL)\n+PATCH_BUILTIN (BUILT_IN_POWL)\n+PATCH_BUILTIN (BUILT_IN_REMAINDERL)\n+PATCH_BUILTIN (BUILT_IN_REMQUOL)\n+PATCH_BUILTIN (BUILT_IN_RINTL)\n+PATCH_BUILTIN (BUILT_IN_ROUNDL)\n+PATCH_BUILTIN (BUILT_IN_SCALBLNL)\n+PATCH_BUILTIN (BUILT_IN_SCALBNL)\n+PATCH_BUILTIN (BUILT_IN_SINHL)\n+PATCH_BUILTIN (BUILT_IN_SINL)\n+PATCH_BUILTIN (BUILT_IN_SQRTL)\n+PATCH_BUILTIN (BUILT_IN_TANHL)\n+PATCH_BUILTIN (BUILT_IN_TANL)\n+PATCH_BUILTIN (BUILT_IN_TGAMMAL)\n+PATCH_BUILTIN (BUILT_IN_TRUNCL)\n+PATCH_BUILTIN_NO64 (BUILT_IN_VFPRINTF)\n+PATCH_BUILTIN_NO64 (BUILT_IN_VFSCANF)\n+PATCH_BUILTIN_NO64 (BUILT_IN_VPRINTF)\n+PATCH_BUILTIN_NO64 (BUILT_IN_VSCANF)\n+PATCH_BUILTIN_NO64 (BUILT_IN_VSNPRINTF)\n+PATCH_BUILTIN_NO64 (BUILT_IN_VSPRINTF)\n+PATCH_BUILTIN_NO64 (BUILT_IN_VSSCANF)\n+\n+PATCH_BUILTIN_VARIADIC (BUILT_IN_FPRINTF)\n+PATCH_BUILTIN_VARIADIC (BUILT_IN_FSCANF)\n+PATCH_BUILTIN_VARIADIC (BUILT_IN_PRINTF)\n+PATCH_BUILTIN_VARIADIC (BUILT_IN_SCANF)\n+PATCH_BUILTIN_VARIADIC (BUILT_IN_SNPRINTF)\n+PATCH_BUILTIN_VARIADIC (BUILT_IN_SPRINTF)\n+PATCH_BUILTIN_VARIADIC (BUILT_IN_SSCANF)"}, {"sha": "c894bf051047ff57bf29b30fae20c4ceff3196fb", "filename": "gcc/config/darwin-protos.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb2202350d6e67d9fef57a392532938270714364/gcc%2Fconfig%2Fdarwin-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb2202350d6e67d9fef57a392532938270714364/gcc%2Fconfig%2Fdarwin-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin-protos.h?ref=fb2202350d6e67d9fef57a392532938270714364", "patch": "@@ -89,3 +89,4 @@ extern void darwin_cpp_builtins (struct cpp_reader *);\n extern void darwin_asm_output_anchor (rtx symbol);\n extern bool darwin_kextabi_p (void);\n extern void darwin_override_options (void);\n+extern void darwin_patch_builtins (void);"}, {"sha": "13aa021f4c676fca487d447737fc21380a9d1a3e", "filename": "gcc/config/darwin.c", "status": "modified", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb2202350d6e67d9fef57a392532938270714364/gcc%2Fconfig%2Fdarwin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb2202350d6e67d9fef57a392532938270714364/gcc%2Fconfig%2Fdarwin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin.c?ref=fb2202350d6e67d9fef57a392532938270714364", "patch": "@@ -1735,4 +1735,52 @@ darwin_override_options (void)\n     flag_var_tracking_uninit = 1;\n }\n \n+/* Add $LDBL128 suffix to long double builtins.  */\n+\n+static void\n+darwin_patch_builtin (int fncode)\n+{\n+  tree fn = built_in_decls[fncode];\n+  tree sym;\n+  char *newname;\n+\n+  if (!fn)\n+    return;\n+\n+  sym = DECL_ASSEMBLER_NAME (fn);\n+  newname = alloca (IDENTIFIER_LENGTH (sym) + 10);\n+  strcpy (newname, \"_\");\n+  strcat (newname, IDENTIFIER_POINTER (sym));\n+  strcat (newname, \"$LDBL128\");\n+  set_user_assembler_name (fn, newname);\n+  /*sym = get_identifier (newname);\n+  SET_DECL_ASSEMBLER_NAME (fn, sym);*/\n+\n+  fn = implicit_built_in_decls[fncode];\n+  if (fn)\n+    set_user_assembler_name (fn, newname);\n+    /*SET_DECL_ASSEMBLER_NAME (fn, sym);*/\n+}\n+\n+void\n+darwin_patch_builtins (void)\n+{\n+  if (LONG_DOUBLE_TYPE_SIZE != 128)\n+    return;\n+\n+#define PATCH_BUILTIN(fncode) darwin_patch_builtin (fncode);\n+#define PATCH_BUILTIN_NO64(fncode) \\\n+  if (!TARGET_64BIT) \\\n+    darwin_patch_builtin (fncode);\n+#define PATCH_BUILTIN_VARIADIC(fncode) \\\n+  if (!TARGET_64BIT \\\n+      && (strverscmp (darwin_macosx_version_min, \"10.3.9\") >= 0)) \\\n+    darwin_patch_builtin (fncode);\n+#include \"darwin-ppc-ldouble-patch.def\"\n+#undef PATCH_BUILTIN\n+#undef PATCH_BUILTIN_NO64\n+#undef PATCH_BUILTIN_VARIADIC\n+}\n+\n+\n #include \"gt-darwin.h\""}, {"sha": "f6c9ee3c2e252aaac03d971d6294523024f1e923", "filename": "gcc/config/rs6000/darwin.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb2202350d6e67d9fef57a392532938270714364/gcc%2Fconfig%2Frs6000%2Fdarwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb2202350d6e67d9fef57a392532938270714364/gcc%2Fconfig%2Frs6000%2Fdarwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fdarwin.h?ref=fb2202350d6e67d9fef57a392532938270714364", "patch": "@@ -432,3 +432,6 @@\n /* When generating kernel code or kexts, we don't use Altivec by\n    default, as kernel code doesn't save/restore those registers.  */\n #define OS_MISSING_ALTIVEC (flag_mkernel || flag_apple_kext)\n+\n+/* Darwin has to rename some of the long double builtins.  */\n+#define SUBTARGET_INIT_BUILTINS darwin_patch_builtins ()"}, {"sha": "00a7bc590636c9f769a3f329e007cfee3d46c373", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb2202350d6e67d9fef57a392532938270714364/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb2202350d6e67d9fef57a392532938270714364/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=fb2202350d6e67d9fef57a392532938270714364", "patch": "@@ -9187,6 +9187,10 @@ rs6000_init_builtins (void)\n   if (built_in_decls [BUILT_IN_CLOG])\n     set_user_assembler_name (built_in_decls [BUILT_IN_CLOG], \"__clog\");\n #endif\n+\n+#ifdef SUBTARGET_INIT_BUILTINS\n+  SUBTARGET_INIT_BUILTINS;\n+#endif\n }\n \n /* Search through a set of builtins and enable the mask bits."}, {"sha": "89766c62d914c7e7a3d60df126ed5293852ce962", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb2202350d6e67d9fef57a392532938270714364/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb2202350d6e67d9fef57a392532938270714364/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=fb2202350d6e67d9fef57a392532938270714364", "patch": "@@ -1,3 +1,12 @@\n+2008-02-23  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n+\n+\tPR target/25477\n+\t* trans-expr.c (gfc_conv_power_op): Use BUILT_IN_CPOW{F,,L}.\n+\t* f95-lang.c (gfc_init_builtin_functions): Define BUILT_IN_CPOW{F,,L}.\n+\t* trans.h (gfor_fndecl_math_cpow, gfor_fndecl_math_cpowf,\n+\tgfor_fndecl_math_cpowl10, gfor_fndecl_math_cpowl16): Remove.\n+\t* trans-decl.c: Likewise.\n+\n 2008-02-20  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR fortran/34907"}, {"sha": "3056fdb5b5f25bc2abf53931b310f8e1d73619cd", "filename": "gcc/fortran/f95-lang.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb2202350d6e67d9fef57a392532938270714364/gcc%2Ffortran%2Ff95-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb2202350d6e67d9fef57a392532938270714364/gcc%2Ffortran%2Ff95-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ff95-lang.c?ref=fb2202350d6e67d9fef57a392532938270714364", "patch": "@@ -942,6 +942,12 @@ gfc_init_builtin_functions (void)\n \t\t      BUILT_IN_POW, \"pow\", true);\n   gfc_define_builtin (\"__builtin_powf\", mfunc_float[1], \n \t\t      BUILT_IN_POWF, \"powf\", true);\n+  gfc_define_builtin (\"__builtin_cpowl\", mfunc_clongdouble[1], \n+\t\t      BUILT_IN_CPOWL, \"cpowl\", true);\n+  gfc_define_builtin (\"__builtin_cpow\", mfunc_cdouble[1], \n+\t\t      BUILT_IN_CPOW, \"cpow\", true);\n+  gfc_define_builtin (\"__builtin_cpowf\", mfunc_cfloat[1], \n+\t\t      BUILT_IN_CPOWF, \"cpowf\", true);\n   gfc_define_builtin (\"__builtin_powil\", mfunc_longdouble[2], \n \t\t      BUILT_IN_POWIL, \"powil\", true);\n   gfc_define_builtin (\"__builtin_powi\", mfunc_double[2], "}, {"sha": "8ca4d430e9870b102b98c872002cc6f1da253ecf", "filename": "gcc/fortran/trans-decl.c", "status": "modified", "additions": 0, "deletions": 27, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb2202350d6e67d9fef57a392532938270714364/gcc%2Ffortran%2Ftrans-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb2202350d6e67d9fef57a392532938270714364/gcc%2Ffortran%2Ftrans-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-decl.c?ref=fb2202350d6e67d9fef57a392532938270714364", "patch": "@@ -99,10 +99,6 @@ tree gfor_fndecl_associated;\n    trans-intrinsic.c.  */\n \n gfc_powdecl_list gfor_fndecl_math_powi[4][3];\n-tree gfor_fndecl_math_cpowf;\n-tree gfor_fndecl_math_cpow;\n-tree gfor_fndecl_math_cpowl10;\n-tree gfor_fndecl_math_cpowl16;\n tree gfor_fndecl_math_ishftc4;\n tree gfor_fndecl_math_ishftc8;\n tree gfor_fndecl_math_ishftc16;\n@@ -2024,10 +2020,6 @@ gfc_build_intrinsic_function_decls (void)\n   tree gfc_real8_type_node = gfc_get_real_type (8);\n   tree gfc_real10_type_node = gfc_get_real_type (10);\n   tree gfc_real16_type_node = gfc_get_real_type (16);\n-  tree gfc_complex4_type_node = gfc_get_complex_type (4);\n-  tree gfc_complex8_type_node = gfc_get_complex_type (8);\n-  tree gfc_complex10_type_node = gfc_get_complex_type (10);\n-  tree gfc_complex16_type_node = gfc_get_complex_type (16);\n \n   /* String functions.  */\n   gfor_fndecl_compare_string =\n@@ -2195,25 +2187,6 @@ gfc_build_intrinsic_function_decls (void)\n #undef NRKINDS\n   }\n \n-  gfor_fndecl_math_cpowf =\n-    gfc_build_library_function_decl (get_identifier (\"cpowf\"),\n-\t\t\t\t     gfc_complex4_type_node,\n-\t\t\t\t     1, gfc_complex4_type_node);\n-  gfor_fndecl_math_cpow =\n-    gfc_build_library_function_decl (get_identifier (\"cpow\"),\n-\t\t\t\t     gfc_complex8_type_node,\n-\t\t\t\t     1, gfc_complex8_type_node);\n-  if (gfc_complex10_type_node)\n-    gfor_fndecl_math_cpowl10 =\n-      gfc_build_library_function_decl (get_identifier (\"cpowl\"),\n-\t\t\t\t       gfc_complex10_type_node, 1,\n-\t\t\t\t       gfc_complex10_type_node);\n-  if (gfc_complex16_type_node)\n-    gfor_fndecl_math_cpowl16 =\n-      gfc_build_library_function_decl (get_identifier (\"cpowl\"),\n-\t\t\t\t       gfc_complex16_type_node, 1,\n-\t\t\t\t       gfc_complex16_type_node);\n-\n   gfor_fndecl_math_ishftc4 =\n     gfc_build_library_function_decl (get_identifier (PREFIX(\"ishftc4\")),\n \t\t\t\t     gfc_int4_type_node,"}, {"sha": "37fc7282f1a429b347838e63e44d516aab0fe0f7", "filename": "gcc/fortran/trans-expr.c", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb2202350d6e67d9fef57a392532938270714364/gcc%2Ffortran%2Ftrans-expr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb2202350d6e67d9fef57a392532938270714364/gcc%2Ffortran%2Ftrans-expr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-expr.c?ref=fb2202350d6e67d9fef57a392532938270714364", "patch": "@@ -935,16 +935,14 @@ gfc_conv_power_op (gfc_se * se, gfc_expr * expr)\n       switch (kind)\n \t{\n \tcase 4:\n-\t  fndecl = gfor_fndecl_math_cpowf;\n+\t  fndecl = built_in_decls[BUILT_IN_CPOWF];\n \t  break;\n \tcase 8:\n-\t  fndecl = gfor_fndecl_math_cpow;\n+\t  fndecl = built_in_decls[BUILT_IN_CPOW];\n \t  break;\n \tcase 10:\n-\t  fndecl = gfor_fndecl_math_cpowl10;\n-\t  break;\n \tcase 16:\n-\t  fndecl = gfor_fndecl_math_cpowl16;\n+\t  fndecl = built_in_decls[BUILT_IN_CPOWL];\n \t  break;\n \tdefault:\n \t  gcc_unreachable ();"}, {"sha": "72476888e6b67599e48a1a00daf7b001409d0228", "filename": "gcc/fortran/trans.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb2202350d6e67d9fef57a392532938270714364/gcc%2Ffortran%2Ftrans.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb2202350d6e67d9fef57a392532938270714364/gcc%2Ffortran%2Ftrans.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans.h?ref=fb2202350d6e67d9fef57a392532938270714364", "patch": "@@ -526,10 +526,6 @@ typedef struct gfc_powdecl_list GTY(())\n gfc_powdecl_list;\n \n extern GTY(()) gfc_powdecl_list gfor_fndecl_math_powi[4][3];\n-extern GTY(()) tree gfor_fndecl_math_cpowf;\n-extern GTY(()) tree gfor_fndecl_math_cpow;\n-extern GTY(()) tree gfor_fndecl_math_cpowl10;\n-extern GTY(()) tree gfor_fndecl_math_cpowl16;\n extern GTY(()) tree gfor_fndecl_math_ishftc4;\n extern GTY(()) tree gfor_fndecl_math_ishftc8;\n extern GTY(()) tree gfor_fndecl_math_ishftc16;"}, {"sha": "345387349842893f2a42600ee0ec2660f9d42424", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb2202350d6e67d9fef57a392532938270714364/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb2202350d6e67d9fef57a392532938270714364/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fb2202350d6e67d9fef57a392532938270714364", "patch": "@@ -1,3 +1,9 @@\n+2008-02-23  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n+\n+\t* gfortran.dg/large_real_kind_2.F90: Split testing of ERF and\n+\tERFC into gfortran.dg/large_real_kind_3.F90.\n+\t* gfortran.dg/large_real_kind_3.F90: New test.\n+\n 2008-02-23  Andrew Pinski  <andrew_pinski@playstation.sony.com>\n \n \tPR rtl-opt/33512"}, {"sha": "2e3891b2ffd16fa9c84ce2837f2a7f0233fe7bc8", "filename": "gcc/testsuite/gfortran.dg/large_real_kind_2.F90", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb2202350d6e67d9fef57a392532938270714364/gcc%2Ftestsuite%2Fgfortran.dg%2Flarge_real_kind_2.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb2202350d6e67d9fef57a392532938270714364/gcc%2Ftestsuite%2Fgfortran.dg%2Flarge_real_kind_2.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Flarge_real_kind_2.F90?ref=fb2202350d6e67d9fef57a392532938270714364", "patch": "@@ -43,8 +43,6 @@\n  TEST_FUNCTION(log,0.00178914)\n  TEST_FUNCTION(log10,123789.123)\n  TEST_FUNCTION(sqrt,789.1356)\n- TEST_FUNCTION(erf,1.45123231)\n- TEST_FUNCTION(erfc,-0.123789)\n \n  CTEST_FUNCTION(cos,(17.456,-1.123))\n  CTEST_FUNCTION(sin,(17.456,-7.6))"}, {"sha": "0660b497a69528de1f8d526bdebdcbf0717b0ce0", "filename": "gcc/testsuite/gfortran.dg/large_real_kind_3.F90", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb2202350d6e67d9fef57a392532938270714364/gcc%2Ftestsuite%2Fgfortran.dg%2Flarge_real_kind_3.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb2202350d6e67d9fef57a392532938270714364/gcc%2Ftestsuite%2Fgfortran.dg%2Flarge_real_kind_3.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Flarge_real_kind_3.F90?ref=fb2202350d6e67d9fef57a392532938270714364", "patch": "@@ -0,0 +1,24 @@\n+! { dg-do run }\n+! { dg-require-effective-target fortran_large_real }\n+! { dg-xfail-if \"\" { \"*-*-freebsd*\" } { \"*\" }  { \"\" } }\n+\n+! Testing erf and erfc library calls on large real kinds (larger than kind=8)\n+  implicit none\n+\n+  integer,parameter :: k = selected_real_kind (precision (0.0_8) + 1)\n+  real(8),parameter :: eps = 1e-8\n+\n+  real(kind=k) :: x\n+  real(8) :: y\n+\n+#define TEST_FUNCTION(func,val) \\\n+ x = val ;\\\n+ y = x ;\\\n+ x = func (x) ;\\\n+ y = func (y) ;\\\n+ if (abs((y - x) / y) > eps) call abort\n+  \n+ TEST_FUNCTION(erf,1.45123231)\n+ TEST_FUNCTION(erfc,-0.123789)\n+ \n+end"}]}