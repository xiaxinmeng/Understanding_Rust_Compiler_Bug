{"sha": "706b0f603fdb637e1a88e9bbeda1645caa1089c5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzA2YjBmNjAzZmRiNjM3ZTFhODhlOWJiZWRhMTY0NWNhYTEwODljNQ==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@wolery.cumb.org", "date": "2000-02-05T04:56:11Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2000-02-05T04:56:11Z"}, "message": "recog.h: Remove NO_MD_PROTOTYPES ifdefs.\n\n \t* recog.h: Remove NO_MD_PROTOTYPES ifdefs.\n \t* genflags.c: Use the max_operand_1 logic from genemit.c to\n \tcalculate how many arguments gen_insn prototypes have.  Remove\n \tNO_MD_PROTOTYPES ifdefs from the generated file.\n \t* genoutput.c: Don't define NO_MD_PROTOTYPES in the generated\n \tfile.  Cast gen_insn initializers to insn_gen_fn.\n \t* config/alpha/vms.h: Don't define NO_MD_PROTOTYPES.\n \t* gcc.texi: Remove documentation of NO_MD_PROTOTYPES.\n\nFrom-SVN: r31801", "tree": {"sha": "b63a94b017b8ea34130c545a603c44169fe90865", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b63a94b017b8ea34130c545a603c44169fe90865"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/706b0f603fdb637e1a88e9bbeda1645caa1089c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/706b0f603fdb637e1a88e9bbeda1645caa1089c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/706b0f603fdb637e1a88e9bbeda1645caa1089c5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/706b0f603fdb637e1a88e9bbeda1645caa1089c5/comments", "author": null, "committer": null, "parents": [{"sha": "c05d48e668eada22675b4fda6efc00431e570e5b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c05d48e668eada22675b4fda6efc00431e570e5b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c05d48e668eada22675b4fda6efc00431e570e5b"}], "stats": {"total": 121, "additions": 61, "deletions": 60}, "files": [{"sha": "e74ee16fbd72533fc9897b39b78f3aff339ef2e4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/706b0f603fdb637e1a88e9bbeda1645caa1089c5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/706b0f603fdb637e1a88e9bbeda1645caa1089c5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=706b0f603fdb637e1a88e9bbeda1645caa1089c5", "patch": "@@ -1,3 +1,14 @@\n+2000-02-04  Zack Weinberg  <zack@wolery.cumb.org>\n+\n+ \t* recog.h: Remove NO_MD_PROTOTYPES ifdefs.\n+ \t* genflags.c: Use the max_operand_1 logic from genemit.c to\n+ \tcalculate how many arguments gen_insn prototypes have.  Remove\n+ \tNO_MD_PROTOTYPES ifdefs from the generated file.\n+ \t* genoutput.c: Don't define NO_MD_PROTOTYPES in the generated\n+ \tfile.  Cast gen_insn initializers to insn_gen_fn.\n+ \t* config/alpha/vms.h: Don't define NO_MD_PROTOTYPES.\n+ \t* gcc.texi: Remove documentation of NO_MD_PROTOTYPES.\n+\n 2000-02-04  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* fixinc/Makefile.in (HDR): Add machname.h."}, {"sha": "b40a3914e264fee6b6f06634d49997f9db37f09c", "filename": "gcc/config/alpha/vms.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/706b0f603fdb637e1a88e9bbeda1645caa1089c5/gcc%2Fconfig%2Falpha%2Fvms.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/706b0f603fdb637e1a88e9bbeda1645caa1089c5/gcc%2Fconfig%2Falpha%2Fvms.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Fvms.h?ref=706b0f603fdb637e1a88e9bbeda1645caa1089c5", "patch": "@@ -366,7 +366,6 @@ do {\t\t\t\t\t\t\t\t\t\\\n   fprintf ((FILE), \",%u,%u\\n\", (SIZE), (ALIGN) / BITS_PER_UNIT);\t\\\n } while (0)\n \n-#define NO_MD_PROTOTYPES\n \f\n /* Output assembler code for a block containing the constant parts\n    of a trampoline, leaving space for the variable parts."}, {"sha": "5e29909b75d256d15abec48f4ff68cecfe3fe24b", "filename": "gcc/gcc.texi", "status": "modified", "additions": 6, "deletions": 16, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/706b0f603fdb637e1a88e9bbeda1645caa1089c5/gcc%2Fgcc.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/706b0f603fdb637e1a88e9bbeda1645caa1089c5/gcc%2Fgcc.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.texi?ref=706b0f603fdb637e1a88e9bbeda1645caa1089c5", "patch": "@@ -3782,24 +3782,14 @@ GCC.  If @samp{USE_PROTOTYPES} is not defined, it will be\n determined automatically whether your compiler supports\n prototypes by checking if @samp{__STDC__} is defined.\n \n-@findex NO_MD_PROTOTYPES\n-@item NO_MD_PROTOTYPES\n-Define this if you wish suppression of prototypes generated from\n-the machine description file, but to use other prototypes within\n-GCC.  If @samp{USE_PROTOTYPES} is defined to be 0, or the\n-host compiler does not support prototypes, this macro has no\n-effect.\n-\n @findex MD_CALL_PROTOTYPES\n @item MD_CALL_PROTOTYPES\n-Define this if you wish to generate prototypes for the\n-@code{gen_call} or @code{gen_call_value} functions generated from\n-the machine description file.  If @samp{USE_PROTOTYPES} is\n-defined to be 0, or the host compiler does not support\n-prototypes, or @samp{NO_MD_PROTOTYPES} is defined, this macro has\n-no effect.  As soon as all of the machine descriptions are\n-modified to have the appropriate number of arguments, this macro\n-will be removed.\n+Define this if you wish to generate prototypes for the @code{gen_call}\n+or @code{gen_call_value} functions generated from the machine\n+description file.  If @samp{USE_PROTOTYPES} is defined to be 0, or the\n+host compiler does not support prototypes, this macro has no effect.  As\n+soon as all of the machine descriptions are modified to have the\n+appropriate number of arguments, this macro will be removed.\n \n @findex PATH_SEPARATOR\n @item PATH_SEPARATOR"}, {"sha": "4c376604b889f829671f6b1e2c697794cac52452", "filename": "gcc/genflags.c", "status": "modified", "additions": 43, "deletions": 37, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/706b0f603fdb637e1a88e9bbeda1645caa1089c5/gcc%2Fgenflags.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/706b0f603fdb637e1a88e9bbeda1645caa1089c5/gcc%2Fgenflags.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenflags.c?ref=706b0f603fdb637e1a88e9bbeda1645caa1089c5", "patch": "@@ -39,48 +39,63 @@ static struct obstack call_obstack, normal_obstack;\n /* Max size of names encountered.  */\n static int max_id_len;\n \n-static int num_operands PARAMS ((rtx));\n-static void gen_proto PARAMS ((rtx));\n-static void gen_nonproto PARAMS ((rtx));\n-static void gen_insn PARAMS ((rtx));\n+/* Max operand encountered in a scan over some insn.  */\n+static int max_opno;\n \n+static void max_operand_1\tPARAMS ((rtx));\n+static int num_operands\t\tPARAMS ((rtx));\n+static void gen_proto\t\tPARAMS ((rtx));\n+static void gen_nonproto\tPARAMS ((rtx));\n+static void gen_insn\t\tPARAMS ((rtx));\n \n /* Count the number of match_operand's found.  */\n \n-static int\n-num_operands (x)\n+static void\n+max_operand_1 (x)\n      rtx x;\n {\n-  int count = 0;\n-  int i, j;\n-  enum rtx_code code = GET_CODE (x);\n-  const char *format_ptr = GET_RTX_FORMAT (code);\n+  register RTX_CODE code;\n+  register int i;\n+  register int len;\n+  register const char *fmt;\n \n-  if (code == MATCH_OPERAND)\n-    return 1;\n+  if (x == 0)\n+    return;\n \n-  if (code == MATCH_OPERATOR || code == MATCH_PARALLEL)\n-    count++;\n+  code = GET_CODE (x);\n \n-  for (i = 0; i < GET_RTX_LENGTH (code); i++)\n+  if (code == MATCH_OPERAND || code == MATCH_OPERATOR\n+      || code == MATCH_PARALLEL)\n+    max_opno = MAX (max_opno, XINT (x, 0));\n+\n+  fmt = GET_RTX_FORMAT (code);\n+  len = GET_RTX_LENGTH (code);\n+  for (i = 0; i < len; i++)\n     {\n-      switch (*format_ptr++)\n+      if (fmt[i] == 'e' || fmt[i] == 'u')\n+\tmax_operand_1 (XEXP (x, i));\n+      else if (fmt[i] == 'E')\n \t{\n-\tcase 'u':\n-\tcase 'e':\n-\t  count += num_operands (XEXP (x, i));\n-\t  break;\n-\n-\tcase 'E':\n-\t  if (XVEC (x, i) != NULL)\n-\t    for (j = 0; j < XVECLEN (x, i); j++)\n-\t      count += num_operands (XVECEXP (x, i, j));\n-\n-\t  break;\n+\t  int j;\n+\t  for (j = 0; j < XVECLEN (x, i); j++)\n+\t    max_operand_1 (XVECEXP (x, i, j));\n \t}\n     }\n+}\n \n-  return count;\n+static int\n+num_operands (insn)\n+     rtx insn;\n+{\n+  register int len = XVECLEN (insn, 1);\n+  register int i;\n+\n+  max_opno = -1;\n+\n+  for (i = 0; i < len; i++)\n+    max_operand_1 (XVECEXP (insn, 1, i));\n+\n+  return max_opno + 1;\n }\n \n /* Print out prototype information for a function.  */\n@@ -251,7 +266,6 @@ from the machine description file `md'.  */\\n\\n\");\n   obstack_grow (&normal_obstack, &dummy, sizeof (rtx));\n   normal_insns = (rtx *) obstack_finish (&normal_obstack);\n \n-  printf (\"\\n#ifndef NO_MD_PROTOTYPES\\n\");\n   for (insn_ptr = normal_insns; *insn_ptr; insn_ptr++)\n     gen_proto (*insn_ptr);\n \n@@ -264,14 +278,6 @@ from the machine description file `md'.  */\\n\\n\");\n     gen_nonproto (*insn_ptr);\n \n   printf (\"#endif /* !MD_CALL_PROTOTYPES */\\n\");\n-  printf (\"\\n#else  /* NO_MD_PROTOTYPES */\\n\");\n-  for (insn_ptr = normal_insns; *insn_ptr; insn_ptr++)\n-    gen_nonproto (*insn_ptr);\n-\n-  for (insn_ptr = call_insns; *insn_ptr; insn_ptr++)\n-    gen_nonproto (*insn_ptr);\n-\n-  printf (\"#endif  /* NO_MD_PROTOTYPES */\\n\");\n \n   fflush (stdout);\n   return (ferror (stdout) != 0 ? FATAL_EXIT_CODE : SUCCESS_EXIT_CODE);"}, {"sha": "ecac9c96fa05abd0893099222c965814303c9da5", "filename": "gcc/genoutput.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/706b0f603fdb637e1a88e9bbeda1645caa1089c5/gcc%2Fgenoutput.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/706b0f603fdb637e1a88e9bbeda1645caa1089c5/gcc%2Fgenoutput.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenoutput.c?ref=706b0f603fdb637e1a88e9bbeda1645caa1089c5", "patch": "@@ -221,7 +221,6 @@ output_prologue ()\n   printf (\"/* Generated automatically by the program `genoutput'\\n\\\n from the machine description file `md'.  */\\n\\n\");\n \n-  printf (\"#define NO_MD_PROTOTYPES\\n\");\n   printf (\"#include \\\"config.h\\\"\\n\");\n   printf (\"#include \\\"system.h\\\"\\n\");\n   printf (\"#include \\\"flags.h\\\"\\n\");\n@@ -369,7 +368,7 @@ output_insn_data ()\n \t}\n \n       if (d->name && d->name[0] != '*')\n-\tprintf (\"    gen_%s,\\n\", d->name);\n+\tprintf (\"    (insn_gen_fn) gen_%s,\\n\", d->name);\n       else\n \tprintf (\"    0,\\n\");\n "}, {"sha": "d9ca87a6311d92b4da4a9484538c45ceb97bb551", "filename": "gcc/recog.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/706b0f603fdb637e1a88e9bbeda1645caa1089c5/gcc%2Frecog.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/706b0f603fdb637e1a88e9bbeda1645caa1089c5/gcc%2Frecog.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frecog.h?ref=706b0f603fdb637e1a88e9bbeda1645caa1089c5", "patch": "@@ -190,11 +190,7 @@ extern struct operand_alternative recog_op_alt[MAX_RECOG_OPERANDS][MAX_RECOG_ALT\n \n typedef int (*insn_operand_predicate_fn) PARAMS ((rtx, enum machine_mode));\n typedef const char * (*insn_output_fn) PARAMS ((rtx *, rtx));\n-#ifndef NO_MD_PROTOTYPES\n typedef rtx (*insn_gen_fn) PARAMS ((rtx, ...));\n-#else\n-typedef rtx (*insn_gen_fn) ();\n-#endif\n \n struct insn_operand_data\n {"}]}