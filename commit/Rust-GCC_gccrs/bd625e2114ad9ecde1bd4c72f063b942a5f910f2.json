{"sha": "bd625e2114ad9ecde1bd4c72f063b942a5f910f2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmQ2MjVlMjExNGFkOWVjZGUxYmQ0YzcyZjA2M2I5NDJhNWY5MTBmMg==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1996-06-06T23:40:38Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1996-06-06T23:40:38Z"}, "message": "(FUNCTION_ARG): General PARALLEL instead of EXPR_LIST.\n\nFrom-SVN: r12197", "tree": {"sha": "f5d60b9b546f00089d208b5ad06bfa02bc94d4e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f5d60b9b546f00089d208b5ad06bfa02bc94d4e0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bd625e2114ad9ecde1bd4c72f063b942a5f910f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd625e2114ad9ecde1bd4c72f063b942a5f910f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd625e2114ad9ecde1bd4c72f063b942a5f910f2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd625e2114ad9ecde1bd4c72f063b942a5f910f2/comments", "author": null, "committer": null, "parents": [{"sha": "bd16a708b9e21300511c7187a81fc5c8fb949d7c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd16a708b9e21300511c7187a81fc5c8fb949d7c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd16a708b9e21300511c7187a81fc5c8fb949d7c"}], "stats": {"total": 29, "additions": 18, "deletions": 11}, "files": [{"sha": "8179c6b2ce2ed1af75f48433f376bed59be7e8fe", "filename": "gcc/config/pa/pa.h", "status": "modified", "additions": 18, "deletions": 11, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd625e2114ad9ecde1bd4c72f063b942a5f910f2/gcc%2Fconfig%2Fpa%2Fpa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd625e2114ad9ecde1bd4c72f063b942a5f910f2/gcc%2Fconfig%2Fpa%2Fpa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.h?ref=bd625e2114ad9ecde1bd4c72f063b942a5f910f2", "patch": "@@ -887,7 +887,7 @@ struct hppa_args {int words, nargs_prototype, indirect; };\n \n \n /* Similar, but when scanning the definition of a procedure.  We always\n-   set NARGS_PROTOTYPE large so we never return an EXPR_LIST.  */\n+   set NARGS_PROTOTYPE large so we never return a PARALLEL.  */\n \n #define INIT_CUMULATIVE_INCOMING_ARGS(CUM,FNTYPE,IGNORE) \\\n   (CUM).words = 0,\t\t\t\t\\\n@@ -984,16 +984,23 @@ struct hppa_args {int words, nargs_prototype, indirect; };\n \t\t\t\t\t\t\t      (TYPE))))))\\\n    /* We are calling a non-prototyped function with floating point\t\\\n       arguments using the portable conventions.  */\t\t\t\\\n-   : gen_rtx (EXPR_LIST, VOIDmode,\t\t\t\t\t\\\n-\t      gen_rtx (REG, (MODE),\t\t\t\t\t\\\n-\t\t       (FUNCTION_ARG_SIZE ((MODE), (TYPE)) > 1\t\t\\\n-\t\t\t? ((CUM).words ? 38 : 34)\t\t\t\\\n-\t\t\t: (32 + 2 * (CUM).words))),\t\t\t\\\n-\t      gen_rtx (REG, (MODE),\t\t\t\t\t\\\n-\t\t       (FUNCTION_ARG_SIZE ((MODE), (TYPE)) > 1\t\t\\\n-\t\t\t? ((CUM).words ? 23 : 25)\t\t\t\\\n-\t\t\t: (27 - (CUM).words - FUNCTION_ARG_SIZE ((MODE),\\\n-\t\t\t\t\t\t\t\t (TYPE)))))) \\\n+   : gen_rtx (PARALLEL, (MODE),\t\t\t\t\t\t\\\n+\t      gen_rtvec\t\t\t\t\t\t\t\\\n+\t      (2,\t\t\t\t\t\t\t\\\n+\t       gen_rtx (EXPR_LIST, VOIDmode,\t\t\t\t\\\n+\t\t\tgen_rtx (REG, (MODE),\t\t\t\t\\\n+\t\t\t\t (FUNCTION_ARG_SIZE ((MODE), (TYPE)) > 1 \\\n+\t\t\t\t  ? ((CUM).words ? 38 : 34)\t\t\\\n+\t\t\t\t  : (32 + 2 * (CUM).words))),\t\t\\\n+\t\t\tconst0_rtx),\t\t\t\t\t\\\n+\t       gen_rtx (EXPR_LIST, VOIDmode,\t\t\t\t\\\n+\t\t\tgen_rtx (REG, (MODE),\t\t\t\t\\\n+\t\t\t\t (FUNCTION_ARG_SIZE ((MODE), (TYPE)) > 1 \\\n+\t\t\t\t  ? ((CUM).words ? 23 : 25)\t\t\\\n+\t\t\t\t  : (27 - (CUM).words -\t\t\t\\\n+\t\t\t\t     FUNCTION_ARG_SIZE ((MODE),\t\t\\\n+\t\t\t\t\t\t\t(TYPE))))),\t\\\n+\t\t\tconst0_rtx)))\t\t\t\t\t\\\n   /* Pass this parameter in the stack.  */\t\t\t\t\\\n   : 0)\n "}]}