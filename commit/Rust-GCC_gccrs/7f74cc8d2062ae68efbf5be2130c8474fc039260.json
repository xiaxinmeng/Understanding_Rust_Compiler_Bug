{"sha": "7f74cc8d2062ae68efbf5be2130c8474fc039260", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2Y3NGNjOGQyMDYyYWU2OGVmYmY1YmUyMTMwYzg0NzRmYzAzOTI2MA==", "commit": {"author": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "1996-10-28T14:06:28Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "1996-10-28T14:06:28Z"}, "message": "(movsf_ieq, movsf_ie): Merged the former into the latter.\n\nChanged matching define_split appropriately.\n(movsf): Changed appropriately.\n(reload_insf) Define.\n\nFrom-SVN: r13046", "tree": {"sha": "f9a9c13061a0ae7e574f18c9f611a5d3a48f3afe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f9a9c13061a0ae7e574f18c9f611a5d3a48f3afe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7f74cc8d2062ae68efbf5be2130c8474fc039260", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f74cc8d2062ae68efbf5be2130c8474fc039260", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f74cc8d2062ae68efbf5be2130c8474fc039260", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f74cc8d2062ae68efbf5be2130c8474fc039260/comments", "author": null, "committer": null, "parents": [{"sha": "b2fba9b7336d6be87bdc6796cb892c36cdc85930", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2fba9b7336d6be87bdc6796cb892c36cdc85930", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b2fba9b7336d6be87bdc6796cb892c36cdc85930"}], "stats": {"total": 42, "additions": 20, "deletions": 22}, "files": [{"sha": "1a225439c669d165b909f747323abe614c192336", "filename": "gcc/config/sh/sh.md", "status": "modified", "additions": 20, "deletions": 22, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f74cc8d2062ae68efbf5be2130c8474fc039260/gcc%2Fconfig%2Fsh%2Fsh.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f74cc8d2062ae68efbf5be2130c8474fc039260/gcc%2Fconfig%2Fsh%2Fsh.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.md?ref=7f74cc8d2062ae68efbf5be2130c8474fc039260", "patch": "@@ -1788,8 +1788,12 @@\n   [(set_attr \"type\" \"move,move,pcload,load,store,move,move\")])\n \n (define_insn \"movsf_ie\"\n-  [(set (match_operand:SF 0 \"general_movdst_operand\" \"=f,r,f,f,f,m,r,r,m,!r,!f\")\n-\t(match_operand:SF 1 \"general_movsrc_operand\"  \"f,r,G,H,m,f,FQ,m,r,f,r\"))]\n+  [(set (match_operand:SF 0 \"general_movdst_operand\"\n+\t \"=f,r,f,f,?f,f,m,r,r,m,!??r,!??f\")\n+\t(match_operand:SF 1 \"general_movsrc_operand\"\n+\t  \"f,r,G,H,FQ,m,f,FQ,m,r,f,r\"))\n+   (clobber (match_scratch:SI 2 \"=X,X,X,X,&z,X,X,X,X,X,X,X\"))]\n+\n   \"TARGET_SH3E\n    && (arith_reg_operand (operands[0], SFmode)\n        || arith_reg_operand (operands[1], SFmode))\"\n@@ -1798,32 +1802,24 @@\n \tmov\t%1,%0\n \tfldi0\t%0\n \tfldi1\t%0\n+\t#\n \tfmov.s\t%1,%0\n \tfmov.s\t%1,%0\n \tmov.l\t%1,%0\n \tmov.l\t%1,%0\n \tmov.l\t%1,%0\n \tflds\t%1,fpul\\;sts\tfpul,%0\n \tlds\t%1,fpul\\;fsts\tfpul,%0\"\n-  [(set_attr \"type\" \"move,move,fp,fp,load,store,pcload,load,store,move,fp\")\n-   (set_attr \"length\" \"*,*,*,*,*,*,*,*,*,4,4\")])\n-\n-(define_insn \"movsf_ieq\"\n-  [(set (match_operand:SF 0 \"general_movdst_operand\" \"=f\")\n-\t(match_operand:SF 1 \"general_movsrc_operand\"  \"FQ\"))\n-   (clobber (reg:SI 0))]\n-  \"TARGET_SH3E\n-   && (arith_reg_operand (operands[0], SFmode)\n-       || arith_reg_operand (operands[1], SFmode))\"\n-  \"#\"\n-  [(set_attr \"type\" \"pcload\") (set_attr \"length\" \"4\")])\n+  [(set_attr \"type\" \"move,move,fp,fp,pcload,load,store,pcload,load,store,move,fp\")\n+   (set_attr \"length\" \"*,*,*,*,4,*,*,*,*,*,4,4\")])\n \n (define_split\n   [(set (match_operand:SF 0 \"general_movdst_operand\" \"\")\n \t(match_operand:SF 1 \"general_movsrc_operand\"  \"\"))\n    (clobber (reg:SI 0))]\n   \"GET_CODE (operands[0]) == REG && REGNO (operands[0]) < FIRST_PSEUDO_REGISTER\"\n-  [(set (match_dup 0) (match_dup 1))]\n+  [(parallel [(set (match_dup 0) (match_dup 1))\n+\t      (clobber (scratch:SI))])]\n   \"\n {\n   if (REGNO (operands[0]) >= FIRST_FP_REG && REGNO (operands[0]) <= LAST_FP_REG)\n@@ -1841,17 +1837,19 @@\n {\n   if (prepare_move_operands (operands, SFmode))\n     DONE;\n-  if (TARGET_SH3E && GET_CODE (operands[1]) == CONST_DOUBLE\n-      && ! fp_zero_operand (operands[1]) && ! fp_one_operand (operands[1])\n-      && GET_CODE (operands[0]) == REG\n-      && (REGNO (operands[0]) >= FIRST_PSEUDO_REGISTER\n-\t  || (REGNO (operands[0]) >= FIRST_FP_REG\n-\t      && REGNO (operands[0]) <= LAST_FP_REG)))\n+  if (TARGET_SH3E)\n     {\n-      emit_insn (gen_movsf_ieq (operands[0], operands[1]));\n+      emit_insn (gen_movsf_ie (operands[0], operands[1]));\n       DONE;\n     }\n }\")\n+\n+(define_expand \"reload_insf\"\n+  [(parallel [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n+\t\t   (match_operand:SF 1 \"immediate_operand\" \"FQ\"))\n+\t      (clobber (match_operand:SI 2 \"register_operand\" \"=&z\"))])]\n+  \"\"\n+  \"\")\n \f\n ;; ------------------------------------------------------------------------\n ;; Define the real conditional branch instructions."}]}