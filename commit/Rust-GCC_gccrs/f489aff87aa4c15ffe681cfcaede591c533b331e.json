{"sha": "f489aff87aa4c15ffe681cfcaede591c533b331e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjQ4OWFmZjg3YWE0YzE1ZmZlNjgxY2ZjYWVkZTU5MWM1MzNiMzMxZQ==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@bigpond.net.au", "date": "2005-09-12T03:51:13Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2005-09-12T03:51:13Z"}, "message": "rs6000.c (get_next_active_insn): Rewrite using CALL_P...\n\n\t* config/rs6000/rs6000.c (get_next_active_insn): Rewrite using\n\tCALL_P, JUMP_P and NONJUMP_INSN_P, so that barriers and labels\n\tare omitted.  Exclude stack_tie insn too.\n\nFrom-SVN: r104159", "tree": {"sha": "b7f7281e821f49bc4045a940b9bcef4bd44dc7b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b7f7281e821f49bc4045a940b9bcef4bd44dc7b7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f489aff87aa4c15ffe681cfcaede591c533b331e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f489aff87aa4c15ffe681cfcaede591c533b331e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f489aff87aa4c15ffe681cfcaede591c533b331e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f489aff87aa4c15ffe681cfcaede591c533b331e/comments", "author": null, "committer": null, "parents": [{"sha": "e7126cc571415e12a0ac855fb48c5d720b5e86e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7126cc571415e12a0ac855fb48c5d720b5e86e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7126cc571415e12a0ac855fb48c5d720b5e86e3"}], "stats": {"total": 38, "additions": 22, "deletions": 16}, "files": [{"sha": "41d85c2edd3e3eb768898772523afc7ae9cd3682", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f489aff87aa4c15ffe681cfcaede591c533b331e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f489aff87aa4c15ffe681cfcaede591c533b331e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f489aff87aa4c15ffe681cfcaede591c533b331e", "patch": "@@ -1,3 +1,9 @@\n+2005-09-12  Alan Modra  <amodra@bigpond.net.au>\n+\n+\t* config/rs6000/rs6000.c (get_next_active_insn): Rewrite using\n+\tCALL_P, JUMP_P and NONJUMP_INSN_P, so that barriers and labels\n+\tare omitted.  Exclude stack_tie insn too.\n+\n 2005-09-11  David Edelsohn  <edelsohn@gnu.org>\n \n \tPR rtl-optimization/23098"}, {"sha": "d1be9b26fccd21fa2e978ebb187d8a66d5010742", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f489aff87aa4c15ffe681cfcaede591c533b331e/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f489aff87aa4c15ffe681cfcaede591c533b331e/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=f489aff87aa4c15ffe681cfcaede591c533b331e", "patch": "@@ -16632,26 +16632,26 @@ rs6000_is_costly_dependence (rtx insn, rtx next, rtx link, int cost,\n static rtx\n get_next_active_insn (rtx insn, rtx tail)\n {\n-  rtx next_insn;\n-\n-  if (!insn || insn == tail)\n+  if (insn == NULL_RTX || insn == tail)\n     return NULL_RTX;\n \n-  next_insn = NEXT_INSN (insn);\n-\n-  while (next_insn\n-  \t && next_insn != tail\n-\t && (GET_CODE (next_insn) == NOTE\n-\t     || GET_CODE (PATTERN (next_insn)) == USE\n-\t     || GET_CODE (PATTERN (next_insn)) == CLOBBER))\n+  while (1)\n     {\n-      next_insn = NEXT_INSN (next_insn);\n-    }\n-\n-  if (!next_insn || next_insn == tail)\n-    return NULL_RTX;\n+      insn = NEXT_INSN (insn);\n+      if (insn == NULL_RTX || insn == tail)\n+\treturn NULL_RTX;\n \n-  return next_insn;\n+      if (CALL_P (insn)\n+\t  || JUMP_P (insn)\n+\t  || (NONJUMP_INSN_P (insn)\n+\t      && GET_CODE (PATTERN (insn)) != USE\n+\t      && GET_CODE (PATTERN (insn)) != CLOBBER\n+\t      && !(GET_CODE (PATTERN (insn)) == SET\n+\t\t   && GET_CODE (XEXP (PATTERN (insn), 1)) == UNSPEC\n+\t\t   && XINT (XEXP (PATTERN (insn), 1), 1) == UNSPEC_TIE)))\n+\tbreak;\n+    }\n+  return insn;\n }\n \n /* Return whether the presence of INSN causes a dispatch group termination"}]}