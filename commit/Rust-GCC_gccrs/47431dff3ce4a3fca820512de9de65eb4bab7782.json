{"sha": "47431dff3ce4a3fca820512de9de65eb4bab7782", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDc0MzFkZmYzY2U0YTNmY2E4MjA1MTJkZTlkZTY1ZWI0YmFiNzc4Mg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-12-24T22:41:43Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-12-24T22:41:43Z"}, "message": "(end_final): Extended header increased to 11 words.\n\n(profile_after_prologue): FUNCTION_BLOCK_PROFILER uses count_basic_blocks\ninstead profile_label_no.\n\nFrom-SVN: r10849", "tree": {"sha": "5f31f972abb2093a3189bb5491b3c4c673397478", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5f31f972abb2093a3189bb5491b3c4c673397478"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/47431dff3ce4a3fca820512de9de65eb4bab7782", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47431dff3ce4a3fca820512de9de65eb4bab7782", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47431dff3ce4a3fca820512de9de65eb4bab7782", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47431dff3ce4a3fca820512de9de65eb4bab7782/comments", "author": null, "committer": null, "parents": [{"sha": "ec6c615d6445624fb01aa9345acf7353a51587f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec6c615d6445624fb01aa9345acf7353a51587f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec6c615d6445624fb01aa9345acf7353a51587f3"}], "stats": {"total": 14, "additions": 9, "deletions": 5}, "files": [{"sha": "6fa3e7efb2a060188255d96696003d690ff3c8a6", "filename": "gcc/final.c", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47431dff3ce4a3fca820512de9de65eb4bab7782/gcc%2Ffinal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47431dff3ce4a3fca820512de9de65eb4bab7782/gcc%2Ffinal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffinal.c?ref=47431dff3ce4a3fca820512de9de65eb4bab7782", "patch": "@@ -324,8 +324,8 @@ end_final (filename)\n \n       data_section ();\n \n-      /* Output the main header, of 10 words:\n-\t 0:  1 if this file's initialized, else 0.\n+      /* Output the main header, of 11 words:\n+\t 0:  1 if this file is initialized, else 0.\n \t 1:  address of file name (LPBX1).\n \t 2:  address of table of counts (LPBX2).\n \t 3:  number of counts in the table.\n@@ -337,7 +337,8 @@ end_final (filename)\n \t 6:  Number of bytes in this header.\n \t 7:  address of table of function names (LPBX4).\n \t 8:  address of table of line numbers (LPBX5) or 0.\n-\t 9:  address of table of file names (LPBX6) or 0.  */\n+\t 9:  address of table of file names (LPBX6) or 0.\n+\t10:  space reserved for basic block profiling. */\n \n       ASM_OUTPUT_ALIGN (asm_out_file, align);\n \n@@ -364,7 +365,7 @@ end_final (filename)\n       assemble_integer (gen_rtx (SYMBOL_REF, Pmode, name), UNITS_PER_WORD, 1);\n \n       /* byte count for extended structure.  */\n-      assemble_integer (GEN_INT (10 * UNITS_PER_WORD), UNITS_PER_WORD, 1);\n+      assemble_integer (GEN_INT (11 * UNITS_PER_WORD), UNITS_PER_WORD, 1);\n \n       /* address of function name table */\n       ASM_GENERATE_INTERNAL_LABEL (name, \"LPBX\", 4);\n@@ -384,6 +385,9 @@ end_final (filename)\n \t  assemble_integer (const0_rtx, UNITS_PER_WORD, 1);\n \t}\n \n+      /* space for extension ptr (link field) */\n+      assemble_integer (const0_rtx, UNITS_PER_WORD, 1);\n+\n       /* Output the file name changing the suffix to .d for Sun tcov\n \t compatibility.  */\n       ASM_OUTPUT_INTERNAL_LABEL (asm_out_file, \"LPBX\", 1);\n@@ -957,7 +961,7 @@ profile_after_prologue (file)\n #ifdef FUNCTION_BLOCK_PROFILER\n   if (profile_block_flag)\n     {\n-      FUNCTION_BLOCK_PROFILER (file, profile_label_no);\n+      FUNCTION_BLOCK_PROFILER (file, count_basic_blocks);\n     }\n #endif /* FUNCTION_BLOCK_PROFILER */\n "}]}