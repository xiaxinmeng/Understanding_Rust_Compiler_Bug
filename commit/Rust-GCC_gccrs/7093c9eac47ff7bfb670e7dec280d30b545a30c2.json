{"sha": "7093c9eac47ff7bfb670e7dec280d30b545a30c2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzA5M2M5ZWFjNDdmZjdiZmI2NzBlN2RlYzI4MGQzMGI1NDVhMzBjMg==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2001-02-13T23:12:49Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2001-02-13T23:12:49Z"}, "message": "i386.md (movsfcc_1): Support integer cmove instruction.\n\n\t* i386.md (movsfcc_1): Support integer cmove instruction.\n\t(movdfcc_1): Likewise; new splitter.\n\nFrom-SVN: r39648", "tree": {"sha": "e1d76b7306cf448b4f26a4ef2fb87bd30b203816", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e1d76b7306cf448b4f26a4ef2fb87bd30b203816"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7093c9eac47ff7bfb670e7dec280d30b545a30c2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7093c9eac47ff7bfb670e7dec280d30b545a30c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7093c9eac47ff7bfb670e7dec280d30b545a30c2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7093c9eac47ff7bfb670e7dec280d30b545a30c2/comments", "author": null, "committer": null, "parents": [{"sha": "0644b6286145246ccc7fd04b5ef724113d7edd5b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0644b6286145246ccc7fd04b5ef724113d7edd5b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0644b6286145246ccc7fd04b5ef724113d7edd5b"}], "stats": {"total": 56, "additions": 43, "deletions": 13}, "files": [{"sha": "1068c7598aea45a3a4efd92c479f49eaf683f3c7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7093c9eac47ff7bfb670e7dec280d30b545a30c2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7093c9eac47ff7bfb670e7dec280d30b545a30c2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7093c9eac47ff7bfb670e7dec280d30b545a30c2", "patch": "@@ -1,3 +1,8 @@\n+Wed Feb 14 00:11:20 CET 2001  Jan Hubicka  <jh@suse.cz>\n+\n+\t* i386.md (movsfcc_1): Support integer cmove instruction.\n+\t(movdfcc_1): Likewise; new splitter.\n+\n Tue Feb 13 23:19:27 CET 2001  Jan Hubicka  <jh@suse.cz>\n \n \t* i386.c (output_fp_compare): Support SSE."}, {"sha": "8ebed23d6a3972fe3e95c34712b21e739ab67309", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 38, "deletions": 13, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7093c9eac47ff7bfb670e7dec280d30b545a30c2/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7093c9eac47ff7bfb670e7dec280d30b545a30c2/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=7093c9eac47ff7bfb670e7dec280d30b545a30c2", "patch": "@@ -12000,17 +12000,20 @@\n   \"if (! ix86_expand_fp_movcc (operands)) FAIL; DONE;\")\n \n (define_insn \"*movsfcc_1\"\n-  [(set (match_operand:SF 0 \"register_operand\" \"=f,f\")\n+  [(set (match_operand:SF 0 \"register_operand\" \"=f,f,r,r\")\n \t(if_then_else:SF (match_operator 1 \"fcmov_comparison_operator\" \n \t\t\t\t[(reg 17) (const_int 0)])\n-\t\t      (match_operand:SF 2 \"register_operand\" \"f,0\")\n-\t\t      (match_operand:SF 3 \"register_operand\" \"0,f\")))]\n-  \"TARGET_CMOVE\"\n+\t\t      (match_operand:SF 2 \"nonimmediate_operand\" \"f,0,rm,0\")\n+\t\t      (match_operand:SF 3 \"nonimmediate_operand\" \"0,f,0,rm\")))]\n+  \"TARGET_CMOVE\n+   && (GET_CODE (operands[2]) != MEM || GET_CODE (operands[3]) != MEM)\"\n   \"@\n    fcmov%F1\\\\t{%2, %0|%0, %2}\n-   fcmov%f1\\\\t{%3, %0|%0, %3}\"\n-  [(set_attr \"type\" \"fcmov\")\n-   (set_attr \"mode\" \"SF\")])\n+   fcmov%f1\\\\t{%3, %0|%0, %3}\n+   cmov%C1\\\\t{%2, %0|%0, %2}\n+   cmov%c1\\\\t{%3, %0|%0, %3}\"\n+  [(set_attr \"type\" \"fcmov,fcmov,icmov,icmov\")\n+   (set_attr \"mode\" \"SF,SF,SI,SI\")])\n \n (define_expand \"movdfcc\"\n   [(set (match_operand:DF 0 \"register_operand\" \"\")\n@@ -12021,18 +12024,40 @@\n   \"if (! ix86_expand_fp_movcc (operands)) FAIL; DONE;\")\n \n (define_insn \"*movdfcc_1\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=f,f\")\n+  [(set (match_operand:DF 0 \"register_operand\" \"=f,f,&r,&r\")\n \t(if_then_else:DF (match_operator 1 \"fcmov_comparison_operator\" \n \t\t\t\t[(reg 17) (const_int 0)])\n-\t\t      (match_operand:DF 2 \"register_operand\" \"f,0\")\n-\t\t      (match_operand:DF 3 \"register_operand\" \"0,f\")))]\n-  \"TARGET_CMOVE\"\n+\t\t      (match_operand:DF 2 \"nonimmediate_operand\" \"f,0,rm,0\")\n+\t\t      (match_operand:DF 3 \"nonimmediate_operand\" \"0,f,0,rm\")))]\n+  \"TARGET_CMOVE\n+   && (GET_CODE (operands[2]) != MEM || GET_CODE (operands[3]) != MEM)\"\n   \"@\n    fcmov%F1\\\\t{%2, %0|%0, %2}\n-   fcmov%f1\\\\t{%3, %0|%0, %3}\"\n-  [(set_attr \"type\" \"fcmov\")\n+   fcmov%f1\\\\t{%3, %0|%0, %3}\n+   #\n+   #\"\n+  [(set_attr \"type\" \"fcmov,fcmov,multi,multi\")\n    (set_attr \"mode\" \"DF\")])\n \n+(define_split\n+  [(set (match_operand:DF 0 \"register_operand\" \"\")\n+\t(if_then_else:DF (match_operator 1 \"fcmov_comparison_operator\" \n+\t\t\t\t[(match_operand 4 \"\" \"\") (const_int 0)])\n+\t\t      (match_operand:DF 2 \"nonimmediate_operand\" \"\")\n+\t\t      (match_operand:DF 3 \"nonimmediate_operand\" \"\")))]\n+  \"!ANY_FP_REG_P (operands[0]) && reload_completed\"\n+  [(set (match_dup 2)\n+\t(if_then_else:SI (match_op_dup 1 [(match_dup 4) (const_int 0)])\n+\t\t      (match_dup 5)\n+\t\t      (match_dup 7)))\n+   (set (match_dup 3)\n+\t(if_then_else:SI (match_op_dup 1 [(match_dup 4) (const_int 0)])\n+\t\t      (match_dup 6)\n+\t\t      (match_dup 8)))]\n+  \"split_di (operands+2, 1, operands+5, operands+6);\n+   split_di (operands+3, 1, operands+7, operands+8);\n+   split_di (operands, 1, operands+2, operands+3);\")\n+\n (define_expand \"movxfcc\"\n   [(set (match_operand:XF 0 \"register_operand\" \"\")\n \t(if_then_else:XF (match_operand 1 \"comparison_operator\" \"\")"}]}