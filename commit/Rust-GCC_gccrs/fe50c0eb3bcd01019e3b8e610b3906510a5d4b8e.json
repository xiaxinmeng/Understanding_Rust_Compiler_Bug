{"sha": "fe50c0eb3bcd01019e3b8e610b3906510a5d4b8e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmU1MGMwZWIzYmNkMDEwMTllM2I4ZTYxMGIzOTA2NTEwYTVkNGI4ZQ==", "commit": {"author": {"name": "Gerald Pfeifer", "email": "gerald@gcc.gnu.org", "date": "1999-10-14T16:41:27Z"}, "committer": {"name": "Gerald Pfeifer", "email": "gerald@gcc.gnu.org", "date": "1999-10-14T16:41:27Z"}, "message": "invoke.texi: Label -Wbad-function-cast...\n\n\t* invoke.texi: Label -Wbad-function-cast, -Wmissing-prototypes,\n\t-Wnested-externs, -Wstrict-prototypes, and -Wtraditional as C only\n\toptions. Also add a new item \"C-only Warning Options\" to the\n\toption summary.\n\nFrom-SVN: r29980", "tree": {"sha": "67ad6affb2059920a9c09b0b49fb443ed5abeee9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/67ad6affb2059920a9c09b0b49fb443ed5abeee9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fe50c0eb3bcd01019e3b8e610b3906510a5d4b8e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe50c0eb3bcd01019e3b8e610b3906510a5d4b8e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe50c0eb3bcd01019e3b8e610b3906510a5d4b8e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe50c0eb3bcd01019e3b8e610b3906510a5d4b8e/comments", "author": null, "committer": null, "parents": [{"sha": "a4ebb0e69f59c5405c6b30b66b33d2df3505385b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4ebb0e69f59c5405c6b30b66b33d2df3505385b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a4ebb0e69f59c5405c6b30b66b33d2df3505385b"}], "stats": {"total": 33, "additions": 24, "deletions": 9}, "files": [{"sha": "6179ff0f006ffccfb385546086c43f4430e67757", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe50c0eb3bcd01019e3b8e610b3906510a5d4b8e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe50c0eb3bcd01019e3b8e610b3906510a5d4b8e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fe50c0eb3bcd01019e3b8e610b3906510a5d4b8e", "patch": "@@ -1,8 +1,16 @@\n+Wed Oct 13 00:09:18 1999  Gerald Pfeifer  <pfeifer@dbai.tuwien.ac.at>\n+\n+\t* invoke.texi: Label -Wbad-function-cast, -Wmissing-prototypes,\n+ \t-Wnested-externs, -Wstrict-prototypes, and -Wtraditional as C only\n+\toptions. Also add a new item \"C-only Warning Options\" to the\n+\toption summary.\n+\n 1999-10-14  Gavin Romig-Koch  <gavin@cygnus.com>\n \n \t* libgcc2.c (__do_global_dtors): Protect __deregister_frame_info\n \tfrom multiple calls.\n \n+>>>>>>> 1.4674\n Thu Oct 14 04:54:54 1999  Richard Henderson  <rth@cygnus.com>\n \n \t* i386.md (call value patterns): Move to the end of the file.\n@@ -259,6 +267,7 @@ Wed Oct 13 10:07:54 1999  Richard Henderson  <rth@cygnus.com>\n \t(struct rtvec_def): Likewise.\n \t* tree.h (struct tree_common): Likewise.\n \n+>>>>>>> 1.4673\n Wed Oct 13 01:44:29 1999  Carol LePage  <carolo@hal.com>\n \n         * configure.in (sparc-hal-solaris2*): Fix xm_file, xm_defines,\n@@ -305,6 +314,7 @@ Tue Oct 12 07:38:41 1999  Bruce Korb  <autogen@linuxbox.com>\n \t* fixincl/fixlib.h: protect against doubly defining t_bool\n \t* fixincl/server.h: protect against doubly defining t_bool\n \n+>>>>>>> 1.4648\n Mon Oct 11 20:18:41 1999  Jim Wilson  <wilson@cygnus.com>\n \n \t* genoutput.c: Include toplev.h."}, {"sha": "126c7b8689496c833109b167d94953a23ff6d24e", "filename": "gcc/invoke.texi", "status": "modified", "additions": 14, "deletions": 9, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe50c0eb3bcd01019e3b8e610b3906510a5d4b8e/gcc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe50c0eb3bcd01019e3b8e610b3906510a5d4b8e/gcc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finvoke.texi?ref=fe50c0eb3bcd01019e3b8e610b3906510a5d4b8e", "patch": "@@ -120,22 +120,27 @@ in the following sections.\n @xref{Warning Options,,Options to Request or Suppress Warnings}.\n @smallexample\n -fsyntax-only  -pedantic  -pedantic-errors\n--w  -W  -Wall  -Waggregate-return  -Wbad-function-cast\n+-w  -W  -Wall  -Waggregate-return \n -Wcast-align  -Wcast-qual  -Wchar-subscripts  -Wcomment\n -Wconversion  -Werror  -Wformat\n -Wid-clash-@var{len}  -Wimplicit -Wimplicit-int \n -Wimplicit-function-declaration  -Wimport\n -Werror-implicit-function-declaration  -Wfloat-equal -Winline\n -Wlarger-than-@var{len}  -Wlong-long\n -Wmain  -Wmissing-declarations  -Wmissing-noreturn\n--Wmissing-prototypes  -Wmultichar  -Wnested-externs  -Wno-import  \n+-Wmultichar  -Wno-import  \n -Wparentheses -Wpointer-arith  -Wredundant-decls\n--Wreturn-type -Wshadow  -Wsign-compare  -Wstrict-prototypes  \n--Wswitch  -Wtraditional  \n+-Wreturn-type -Wshadow  -Wsign-compare -Wswitch\n -Wtrigraphs -Wundef  -Wuninitialized  -Wunknown-pragmas -Wunreachable-code \n -Wunused  -Wwrite-strings\n @end smallexample\n \n+@item C-only Warning Options\n+@smallexample\n+-Wbad-function-cast -Wmissing-prototypes -Wnested-externs\n+-Wstrict-prototypes -Wtraditional\n+@end smallexample\n+\n @item Debugging Options\n @xref{Debugging Options,,Options for Debugging Your Program or GCC}.\n @smallexample\n@@ -1647,7 +1652,7 @@ struct s x = @{ 3, 4 @};\n @item -Wfloat-equal\n Warn if floating point values are used in equality comparisons.\n \n-@item -Wtraditional\n+@item -Wtraditional (C only)\n Warn about certain constructs that behave differently in traditional and\n ANSI C.\n \n@@ -1689,7 +1694,7 @@ of @code{void}.  GNU C assigns these types a size of 1, for\n convenience in calculations with @code{void *} pointers and pointers\n to functions.\n \n-@item -Wbad-function-cast\n+@item -Wbad-function-cast (C only)\n Warn whenever a function call is cast to a non-matching type.\n For example, warn if @code{int malloc()} is cast to @code{anything *}.\n \n@@ -1739,13 +1744,13 @@ Warn if any functions that return structures or unions are defined or\n called.  (In languages where you can return an array, this also elicits\n a warning.)\n \n-@item -Wstrict-prototypes\n+@item -Wstrict-prototypes (C only)\n Warn if a function is declared or defined without specifying the\n argument types.  (An old-style function definition is permitted without\n a warning if preceded by a declaration which specifies the argument\n types.)\n \n-@item -Wmissing-prototypes\n+@item -Wmissing-prototypes (C only)\n Warn if a global function is defined without a previous prototype\n declaration.  This warning is issued even if the definition itself\n provides a prototype.  The aim is to detect global functions that fail\n@@ -1768,7 +1773,7 @@ bugs could be introduced.\n Warn if anything is declared more than once in the same scope, even in\n cases where multiple declaration is valid and changes nothing.\n \n-@item -Wnested-externs\n+@item -Wnested-externs (C only)\n Warn if an @code{extern} declaration is encountered within a function.\n \n @item -Wunreachable-code"}]}