{"sha": "da8006f341fc2a30d32fe7a1d9d540617ff5f8b6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGE4MDA2ZjM0MWZjMmEzMGQzMmZlN2ExZDlkNTQwNjE3ZmY1ZjhiNg==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2015-12-10T15:45:49Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2015-12-10T15:45:49Z"}, "message": "re PR c++/68348 (ICE: segfault in cxx_eval_constant_expression at cp/constexpr.c:3172)\n\n\tPR c++/68348\n\t* g++.dg/cpp0x/pr68348.C: New test.\n\nFrom-SVN: r231524", "tree": {"sha": "fe4e6523dc83274815cfd04d12a0fb48da13b01d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fe4e6523dc83274815cfd04d12a0fb48da13b01d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/da8006f341fc2a30d32fe7a1d9d540617ff5f8b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da8006f341fc2a30d32fe7a1d9d540617ff5f8b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da8006f341fc2a30d32fe7a1d9d540617ff5f8b6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da8006f341fc2a30d32fe7a1d9d540617ff5f8b6/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f680334141b73d2ceb1baf38a56dcca5985a960a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f680334141b73d2ceb1baf38a56dcca5985a960a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f680334141b73d2ceb1baf38a56dcca5985a960a"}], "stats": {"total": 23, "additions": 23, "deletions": 0}, "files": [{"sha": "ce44fa30a9f31bcdef031bc01ac93fbc850c04e4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da8006f341fc2a30d32fe7a1d9d540617ff5f8b6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da8006f341fc2a30d32fe7a1d9d540617ff5f8b6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=da8006f341fc2a30d32fe7a1d9d540617ff5f8b6", "patch": "@@ -1,3 +1,8 @@\n+2015-12-10  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/68348\n+\t* g++.dg/cpp0x/pr68348.C: New test.\n+\n 2015-12-10  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/specs/elab4.ads: New test."}, {"sha": "9033bba23a2d8a6926581aa431eeefacbb2eb551", "filename": "gcc/testsuite/g++.dg/cpp0x/pr68348.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da8006f341fc2a30d32fe7a1d9d540617ff5f8b6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr68348.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da8006f341fc2a30d32fe7a1d9d540617ff5f8b6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr68348.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr68348.C?ref=da8006f341fc2a30d32fe7a1d9d540617ff5f8b6", "patch": "@@ -0,0 +1,18 @@\n+// PR c++/68348\n+// { dg-do compile { target c++11 } }\n+\n+struct C {\n+  constexpr C() : w(), x(), y() {}\n+  constexpr double fn() const noexcept;\n+  double w;\n+  double x;\n+  double y;\n+};\n+\n+constexpr double C::fn() const noexcept { return w; }\n+C foo()\n+{\n+  C c;\n+  c.fn ();\n+  return c;\n+}"}]}