{"sha": "9b3cd1755be55fbed5f86fd55bb1a6c3279f1fc4", "node_id": "C_kwDOANBUbNoAKDliM2NkMTc1NWJlNTVmYmVkNWY4NmZkNTViYjFhNmMzMjc5ZjFmYzQ", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-08-26T12:25:51Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-08-29T07:59:31Z"}, "message": "Refactor init_use_preds and find_control_equiv_block\n\nThe following inlines find_control_equiv_block and is_loop_exit\ninto init_use_preds and refactors that for better readability and\nsimilarity with the post-dominator walk in compute_control_dep_chain.\n\n\t* gimple-predicate-analysis.cc (is_loop_exit,\n\tfind_control_equiv_block): Inline into single caller ...\n\t(uninit_analysis::init_use_preds): ... here and refactor.", "tree": {"sha": "d65ee52593ddbd598d236c2865f8f02c00732628", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d65ee52593ddbd598d236c2865f8f02c00732628"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9b3cd1755be55fbed5f86fd55bb1a6c3279f1fc4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b3cd1755be55fbed5f86fd55bb1a6c3279f1fc4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b3cd1755be55fbed5f86fd55bb1a6c3279f1fc4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b3cd1755be55fbed5f86fd55bb1a6c3279f1fc4/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3358c24a32129f6dafa9f7af2dfeab3bca9d68c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3358c24a32129f6dafa9f7af2dfeab3bca9d68c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3358c24a32129f6dafa9f7af2dfeab3bca9d68c4"}], "stats": {"total": 55, "additions": 16, "deletions": 39}, "files": [{"sha": "e388bb3768566bf3778fdc891b2c2c6ee4d46721", "filename": "gcc/gimple-predicate-analysis.cc", "status": "modified", "additions": 16, "deletions": 39, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b3cd1755be55fbed5f86fd55bb1a6c3279f1fc4/gcc%2Fgimple-predicate-analysis.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b3cd1755be55fbed5f86fd55bb1a6c3279f1fc4/gcc%2Fgimple-predicate-analysis.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-predicate-analysis.cc?ref=9b3cd1755be55fbed5f86fd55bb1a6c3279f1fc4", "patch": "@@ -59,33 +59,6 @@\n    for the case corresponding to an edge.  */\n #define MAX_SWITCH_CASES 40\n \n-/* Return true if, when BB1 is postdominating BB2, BB1 is a loop exit.  */\n-\n-static bool\n-is_loop_exit (basic_block bb2, basic_block bb1)\n-{\n-  return single_pred_p (bb1) && !single_succ_p (bb2);\n-}\n-\n-/* Find BB's closest postdominator that is its control equivalent (i.e.,\n-   that's controlled by the same predicate).  */\n-\n-static inline basic_block\n-find_control_equiv_block (basic_block bb)\n-{\n-  basic_block pdom = get_immediate_dominator (CDI_POST_DOMINATORS, bb);\n-\n-  /* Skip the postdominating bb that is also a loop exit.  */\n-  if (is_loop_exit (bb, pdom))\n-    return NULL;\n-\n-  /* If the postdominator is dominated by BB, return it.  */\n-  if (dominated_by_p (CDI_DOMINATORS, pdom, bb))\n-    return pdom;\n-\n-  return NULL;\n-}\n-\n /* Return true if X1 is the negation of X2.  */\n \n static inline bool\n@@ -1991,25 +1964,29 @@ bool\n uninit_analysis::init_use_preds (predicate &use_preds, basic_block def_bb,\n \t\t\t\t basic_block use_bb)\n {\n-  gcc_assert (use_preds.is_empty ());\n+  gcc_assert (use_preds.is_empty ()\n+\t      && dominated_by_p (CDI_DOMINATORS, use_bb, def_bb));\n \n   /* Set CD_ROOT to the basic block closest to USE_BB that is the control\n      equivalent of (is guarded by the same predicate as) DEF_BB that also\n-     dominates USE_BB.  */\n+     dominates USE_BB.  This mimics the inner loop in\n+     compute_control_dep_chain.  */\n   basic_block cd_root = def_bb;\n-  while (dominated_by_p (CDI_DOMINATORS, use_bb, cd_root))\n+  do\n     {\n-      /* Find CD_ROOT's closest postdominator that's its control\n-\t equivalent.  */\n-      if (basic_block bb = find_control_equiv_block (cd_root))\n-\tif (dominated_by_p (CDI_DOMINATORS, use_bb, bb))\n-\t  {\n-\t    cd_root = bb;\n-\t    continue;\n-\t  }\n+      basic_block pdom = get_immediate_dominator (CDI_POST_DOMINATORS, cd_root);\n \n-      break;\n+      /* Stop at a loop exit which is also postdominating cd_root.  */\n+      if (single_pred_p (pdom) && !single_succ_p (cd_root))\n+\tbreak;\n+\n+      if (!dominated_by_p (CDI_DOMINATORS, pdom, cd_root)\n+\t  || !dominated_by_p (CDI_DOMINATORS, use_bb, pdom))\n+\tbreak;\n+\n+      cd_root = pdom;\n     }\n+  while (1);\n \n   /* Set DEP_CHAINS to the set of edges between CD_ROOT and USE_BB.\n      Each DEP_CHAINS element is a series of edges whose conditions"}]}