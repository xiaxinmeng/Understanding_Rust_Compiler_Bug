{"sha": "5eec0563bbf419e126406df1fcc48ffd11d34279", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWVlYzA1NjNiYmY0MTllMTI2NDA2ZGYxZmNjNDhmZmQxMWQzNDI3OQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@casey.cygnus.com", "date": "2000-04-13T08:26:36Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2000-04-13T08:26:36Z"}, "message": "cpplex.c (_cpp_lex_token): Handle digraphs.\n\n        * cpplex.c (_cpp_lex_token): Handle digraphs.  Don't null-terminate\n        the token except for numbers and identifiers.\n\nFrom-SVN: r33136", "tree": {"sha": "eaa3c6a6cc8753840e76c6036aded52ec06feb86", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eaa3c6a6cc8753840e76c6036aded52ec06feb86"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5eec0563bbf419e126406df1fcc48ffd11d34279", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5eec0563bbf419e126406df1fcc48ffd11d34279", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5eec0563bbf419e126406df1fcc48ffd11d34279", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5eec0563bbf419e126406df1fcc48ffd11d34279/comments", "author": null, "committer": null, "parents": [{"sha": "d28ff99006bc7c3435ef7ca0ef57ef2ba9893e06", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d28ff99006bc7c3435ef7ca0ef57ef2ba9893e06", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d28ff99006bc7c3435ef7ca0ef57ef2ba9893e06"}], "stats": {"total": 105, "additions": 76, "deletions": 29}, "files": [{"sha": "87c05226729b12d5f6caf30d51a27cb3e0205cbc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eec0563bbf419e126406df1fcc48ffd11d34279/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eec0563bbf419e126406df1fcc48ffd11d34279/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5eec0563bbf419e126406df1fcc48ffd11d34279", "patch": "@@ -1,3 +1,8 @@\n+2000-04-13  Jason Merrill  <jason@casey.cygnus.com>\n+\n+\t* cpplex.c (_cpp_lex_token): Handle digraphs.  Don't null-terminate\n+\tthe token except for numbers and identifiers.\n+\n Thu Apr 13 00:09:16 EDT 2000  John Wehle  (john@feith.com)\n \n \t* i386.c (ix86_expand_binary_operator,"}, {"sha": "ccf1302c309fe5c1f19a86550c3f13f180c0026e", "filename": "gcc/cpplex.c", "status": "modified", "additions": 71, "deletions": 29, "changes": 100, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eec0563bbf419e126406df1fcc48ffd11d34279/gcc%2Fcpplex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eec0563bbf419e126406df1fcc48ffd11d34279/gcc%2Fcpplex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpplex.c?ref=5eec0563bbf419e126406df1fcc48ffd11d34279", "patch": "@@ -703,7 +703,7 @@ enum cpp_ttype\n _cpp_lex_token (pfile)\n      cpp_reader *pfile;\n {\n-  register int c, c2, c3;\n+  register int c, c2;\n   enum cpp_ttype token;\n \n  get_next:\n@@ -744,29 +744,43 @@ _cpp_lex_token (pfile)\n \t}\n \n     case '#':\n+      CPP_PUTC (pfile, c);\n+\n+    hash:\n       if (pfile->parsing_if_directive)\n \t{\n \t  if (_cpp_parse_assertion (pfile))\n \t    return CPP_ASSERTION;\n-\t  goto randomchar;\n+\t  return CPP_OTHER;\n \t}\n \n       if (pfile->parsing_define_directive && ! CPP_TRADITIONAL (pfile))\n \t{\n-\t  CPP_RESERVE (pfile, 3);\n-\t  CPP_PUTC_Q (pfile, '#');\n-\t  CPP_NUL_TERMINATE_Q (pfile);\n-\t  if (PEEKC () != '#')\n+\t  c2 = PEEKC ();\n+\t  if (c2 == '#')\n+\t    {\n+\t      FORWARD (1);\n+\t      CPP_PUTC (pfile, c2);\n+\t    }\n+\t  else if (c2 == '%' && PEEKN (1) == ':')\n+\t    {\n+\t      /* Digraph: \"%:\" == \"#\".  */\n+\t      FORWARD (1);\n+\t      CPP_RESERVE (pfile, 2);\n+\t      CPP_PUTC_Q (pfile, c2);\n+\t      CPP_PUTC_Q (pfile, GETC ());\n+\t    }\n+\t  else\n \t    return CPP_STRINGIZE;\n-\t      \n-\t  FORWARD (1);\n-\t  CPP_PUTC_Q (pfile, '#');\n-\t  CPP_NUL_TERMINATE_Q (pfile);\n+\n \t  return CPP_TOKPASTE;\n \t}\n \n       if (!pfile->only_seen_white)\n-\tgoto randomchar;\n+\treturn CPP_OTHER;\n+\n+      /* Remove the \"#\" or \"%:\" from the token buffer.  */\n+      CPP_ADJUST_WRITTEN (pfile, (c == '#' ? -1 : -2));\n       return CPP_DIRECTIVE;\n \n     case '\\\"':\n@@ -780,7 +794,10 @@ _cpp_lex_token (pfile)\n       goto letter;\n \n     case ':':\n-      if (CPP_OPTION (pfile, cplusplus) && PEEKC () == ':')\n+      c2 = PEEKC ();\n+      /* Digraph: \":>\" == \"]\".  */\n+      if (c2 == '>'\n+\t  || (c2 == ':' && CPP_OPTION (pfile, cplusplus)))\n \tgoto op2;\n       goto randomchar;\n \n@@ -792,9 +809,29 @@ _cpp_lex_token (pfile)\n \tgoto op2;\n       goto randomchar;\n \n+    case '%':\n+      /* Digraphs: \"%:\" == \"#\", \"%>\" == \"}\".  */\n+      c2 = PEEKC ();\n+      if (c2 == ':')\n+\t{\n+\t  FORWARD (1);\n+\t  CPP_RESERVE (pfile, 2);\n+\t  CPP_PUTC_Q (pfile, c);\n+\t  CPP_PUTC_Q (pfile, c2);\n+\t  goto hash;\n+\t}\n+      else if (c2 == '>')\n+\t{\n+\t  FORWARD (1);\n+\t  CPP_RESERVE (pfile, 2);\n+\t  CPP_PUTC_Q (pfile, c);\n+\t  CPP_PUTC_Q (pfile, c2);\n+\t  return CPP_RBRACE;\n+\t}\n+      /* else fall through */\n+\n     case '*':\n     case '!':\n-    case '%':\n     case '=':\n     case '^':\n       if (PEEKC () == '=')\n@@ -822,7 +859,6 @@ _cpp_lex_token (pfile)\n \t      CPP_PUTC_Q (pfile, c);\n \t      CPP_PUTC_Q (pfile, GETC ());\n \t      CPP_PUTC_Q (pfile, GETC ());\n-\t      CPP_NUL_TERMINATE_Q (pfile);\n \t      return token;\n \t    }\n \t  goto op2;\n@@ -865,6 +901,18 @@ _cpp_lex_token (pfile)\n \t    }\n \t  return CPP_STRING;\n \t}\n+      /* Digraphs: \"<%\" == \"{\", \"<:\" == \"[\".  */\n+      c2 = PEEKC ();\n+      if (c2 == '%')\n+\t{\n+\t  FORWARD (1);\n+\t  CPP_RESERVE (pfile, 2);\n+\t  CPP_PUTC_Q (pfile, c);\n+\t  CPP_PUTC_Q (pfile, c2);\n+\t  return CPP_LBRACE;\n+\t}\n+      else if (c2 == ':')\n+\tgoto op2;\n       /* else fall through */\n     case '>':\n       c2 = PEEKC ();\n@@ -874,21 +922,18 @@ _cpp_lex_token (pfile)\n       if (c2 != c && (!CPP_OPTION (pfile, cplusplus) || c2 != '?'))\n \tgoto randomchar;\n       FORWARD(1);\n-      CPP_RESERVE (pfile, 4);\n-      CPP_PUTC (pfile, c);\n-      CPP_PUTC (pfile, c2);\n-      c3 = PEEKC ();\n-      if (c3 == '=')\n+      CPP_RESERVE (pfile, 3);\n+      CPP_PUTC_Q (pfile, c);\n+      CPP_PUTC_Q (pfile, c2);\n+      if (PEEKC () == '=')\n \tCPP_PUTC_Q (pfile, GETC ());\n-      CPP_NUL_TERMINATE_Q (pfile);\n       return CPP_OTHER;\n \n     case '.':\n       c2 = PEEKC ();\n-      if (ISDIGIT(c2))\n+      if (ISDIGIT (c2))\n \t{\n-\t  CPP_RESERVE(pfile, 2);\n-\t  CPP_PUTC_Q (pfile, '.');\n+\t  CPP_PUTC (pfile, c);\n \t  c = GETC ();\n \t  goto number;\n \t}\n@@ -899,23 +944,20 @@ _cpp_lex_token (pfile)\n \n       if (c2 == '.' && PEEKN(1) == '.')\n \t{\n-\t  CPP_RESERVE(pfile, 4);\n+\t  CPP_RESERVE (pfile, 3);\n \t  CPP_PUTC_Q (pfile, '.');\n \t  CPP_PUTC_Q (pfile, '.');\n \t  CPP_PUTC_Q (pfile, '.');\n \t  FORWARD (2);\n-\t  CPP_NUL_TERMINATE_Q (pfile);\n \t  return CPP_3DOTS;\n \t}\n       goto randomchar;\n \n     op2:\n-      token = CPP_OTHER;\n-      CPP_RESERVE(pfile, 3);\n+      CPP_RESERVE (pfile, 2);\n       CPP_PUTC_Q (pfile, c);\n       CPP_PUTC_Q (pfile, GETC ());\n-      CPP_NUL_TERMINATE_Q (pfile);\n-      return token;\n+      return CPP_OTHER;\n \n     case 'L':\n       c2 = PEEKC ();"}]}