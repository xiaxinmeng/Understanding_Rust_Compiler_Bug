{"sha": "b4ca2d2c08cde1619a2394a02773712ded61dbce", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjRjYTJkMmMwOGNkZTE2MTlhMjM5NGEwMjc3MzcxMmRlZDYxZGJjZQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-10-22T10:09:51Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-10-22T10:09:51Z"}, "message": "[multiple changes]\n\n2010-10-22  Robert Dewar  <dewar@adacore.com>\n\n\t* sprint.adb: Minor reformatting.\n\n2010-10-22  Robert Dewar  <dewar@adacore.com>\n\n\t* exp_ch3.adb (Expand_N_Object_Declaration): Do required predicate\n\tchecks.\n\t* sem_ch3.adb (Complete_Private_Subtype): Propagate predicates to full\n\tview.\n\t* sem_ch6.adb (Invariants_Or_Predicates_Present): New name for\n\tInvariants_Present.\n\t(Process_PPCs): Handle predicates generating post conditions\n\t* sem_util.adb (Is_Partially_Initialized_Type): Add\n\tInclude_Null parameter.\n\t* sem_util.ads (Is_Partially_Initialized_Type): Add\n\tInclude_Null parameter.\n\n2010-10-22  Sergey Rybin  <rybin@adacore.com>\n\n\t* gnat_ugn.texi (gnatelim): Add description for '--ignore' option\n\n2010-10-22  Thomas Quinot  <quinot@adacore.com>\n\n\t* sem_prag.adb (Check_First_Subtype): Specialize error messages for\n\tcase where argument is not a type.\n\nFrom-SVN: r165815", "tree": {"sha": "45498be02d1ed85f737aeb6644317efb5e0b4ca1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/45498be02d1ed85f737aeb6644317efb5e0b4ca1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b4ca2d2c08cde1619a2394a02773712ded61dbce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4ca2d2c08cde1619a2394a02773712ded61dbce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4ca2d2c08cde1619a2394a02773712ded61dbce", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4ca2d2c08cde1619a2394a02773712ded61dbce/comments", "author": null, "committer": null, "parents": [{"sha": "00c7151cdf1d73504a4154bf3e630008dd1bc7d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00c7151cdf1d73504a4154bf3e630008dd1bc7d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/00c7151cdf1d73504a4154bf3e630008dd1bc7d3"}], "stats": {"total": 173, "additions": 135, "deletions": 38}, "files": [{"sha": "a726dd95b61fd8da0cb2cb6d376aa8e7879c8f42", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4ca2d2c08cde1619a2394a02773712ded61dbce/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4ca2d2c08cde1619a2394a02773712ded61dbce/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=b4ca2d2c08cde1619a2394a02773712ded61dbce", "patch": "@@ -1,3 +1,30 @@\n+2010-10-22  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sprint.adb: Minor reformatting.\n+\n+2010-10-22  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_ch3.adb (Expand_N_Object_Declaration): Do required predicate\n+\tchecks.\n+\t* sem_ch3.adb (Complete_Private_Subtype): Propagate predicates to full\n+\tview.\n+\t* sem_ch6.adb (Invariants_Or_Predicates_Present): New name for\n+\tInvariants_Present.\n+\t(Process_PPCs): Handle predicates generating post conditions\n+\t* sem_util.adb (Is_Partially_Initialized_Type): Add\n+\tInclude_Null parameter.\n+\t* sem_util.ads (Is_Partially_Initialized_Type): Add\n+\tInclude_Null parameter.\n+\n+2010-10-22  Sergey Rybin  <rybin@adacore.com>\n+\n+\t* gnat_ugn.texi (gnatelim): Add description for '--ignore' option\n+\n+2010-10-22  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* sem_prag.adb (Check_First_Subtype): Specialize error messages for\n+\tcase where argument is not a type.\n+\n 2010-10-22  Robert Dewar  <dewar@adacore.com>\n \n \t* exp_ch5.adb, par-ch4.adb, par-ch5.adb, sem_ch5.adb, sinfo.ads: Minor"}, {"sha": "b7d4c3b0036be5704fe9a8f768081eb9207d4c18", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4ca2d2c08cde1619a2394a02773712ded61dbce/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4ca2d2c08cde1619a2394a02773712ded61dbce/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=b4ca2d2c08cde1619a2394a02773712ded61dbce", "patch": "@@ -4508,6 +4508,24 @@ package body Exp_Ch3 is\n          return;\n       end if;\n \n+      --  Deal with predicate check before we start to do major rewriting.\n+      --  it is OK to initialize and then check the initialized value, since\n+      --  the object goes out of scope if we get a predicate failure.\n+\n+      --  We need a predicate check if the type has predicates, and if either\n+      --  there is an initializing expression, or for default initialization\n+      --  when we have at least one case of an explicit default initial value.\n+\n+      if Present (Predicate_Function (Typ))\n+        and then\n+          (Present (Expr)\n+            or else\n+              Is_Partially_Initialized_Type (Typ, Include_Null => False))\n+      then\n+         Insert_After (N,\n+           Make_Predicate_Check (Typ, New_Occurrence_Of (Def_Id, Loc)));\n+      end if;\n+\n       --  Force construction of dispatch tables of library level tagged types\n \n       if Tagged_Type_Expansion"}, {"sha": "85459e4b408d728c90f8e21dd4ac0b2e1d0afbec", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4ca2d2c08cde1619a2394a02773712ded61dbce/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4ca2d2c08cde1619a2394a02773712ded61dbce/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=b4ca2d2c08cde1619a2394a02773712ded61dbce", "patch": "@@ -10911,6 +10911,11 @@ Duplicate all the output sent to @file{stderr} into a specified log file.\n @item ^--no-elim-dispatch^/NO_DISPATCH^\n Do not generate pragmas for dispatching operations.\n \n+@item ^--ignore^/IGNORE^=@var{filename}\n+@cindex @option{^--ignore^/IGNORE^} (@command{gnatelim})\n+Do not generate pragmas for subprograms declared in the sources\n+listed in a specified file\n+\n @cindex @option{^-o^/OUTPUT^} (@command{gnatelim})\n @item ^-o^/OUTPUT^=@var{report_file}\n Put @command{gnatelim} output into a specified file. If this file already exists,"}, {"sha": "dfbd7880e2e356fd812d9e8b0689d5cbd3026822", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4ca2d2c08cde1619a2394a02773712ded61dbce/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4ca2d2c08cde1619a2394a02773712ded61dbce/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=b4ca2d2c08cde1619a2394a02773712ded61dbce", "patch": "@@ -9913,6 +9913,13 @@ package body Sem_Ch3 is\n               Corresponding_Record_Type (Full_Base));\n          end if;\n       end if;\n+\n+      --  Copy rep item chain, and also setting of Has_Predicates from\n+      --  private subtype to full subtype, since we will need these on the\n+      --  full subtype to create the predicate function.\n+\n+      Set_First_Rep_Item (Full, First_Rep_Item (Priv));\n+      Set_Has_Predicates (Full, Has_Predicates (Priv));\n    end Complete_Private_Subtype;\n \n    ----------------------------"}, {"sha": "98cb23793d57d99ad874a0ddcde711db788fa613", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 39, "deletions": 21, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4ca2d2c08cde1619a2394a02773712ded61dbce/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4ca2d2c08cde1619a2394a02773712ded61dbce/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=b4ca2d2c08cde1619a2394a02773712ded61dbce", "patch": "@@ -207,8 +207,8 @@ package body Sem_Ch6 is\n    --  conditions for the body and assembling and inserting the _postconditions\n    --  procedure. N is the node for the subprogram body and Body_Id/Spec_Id are\n    --  the entities for the body and separate spec (if there is no separate\n-   --  spec, Spec_Id is Empty). Note that invariants also provide a source\n-   --  of postconditions, which are also handled in this procedure.\n+   --  spec, Spec_Id is Empty). Note that invariants and predicates may also\n+   --  provide postconditions, and are also handled in this procedure.\n \n    procedure Set_Formal_Validity (Formal_Id : Entity_Id);\n    --  Formal_Id is an formal parameter entity. This procedure deals with\n@@ -8681,9 +8681,10 @@ package body Sem_Ch6 is\n       --  references to parameters of the inherited subprogram to point to the\n       --  corresponding parameters of the current subprogram.\n \n-      function Invariants_Present return Boolean;\n-      --  Determines if any invariants are present for any OUT or IN OUT\n-      --  parameters of the subprogram, or (for a function) for the return.\n+      function Invariants_Or_Predicates_Present return Boolean;\n+      --  Determines if any invariants or predicates are present for any OUT\n+      --  or IN OUT parameters of the subprogram, or (for a function) if the\n+      --  return value has an invariant.\n \n       --------------\n       -- Grab_PPC --\n@@ -8782,12 +8783,12 @@ package body Sem_Ch6 is\n          return CP;\n       end Grab_PPC;\n \n-      ------------------------\n-      -- Invariants_Present --\n-      ------------------------\n+      --------------------------------------\n+      -- Invariants_Or_Predicates_Present --\n+      --------------------------------------\n \n-      function Invariants_Present return Boolean is\n-         Formal     : Entity_Id;\n+      function Invariants_Or_Predicates_Present return Boolean is\n+         Formal : Entity_Id;\n \n       begin\n          --  Check function return result\n@@ -8803,7 +8804,9 @@ package body Sem_Ch6 is\n          Formal := First_Formal (Designator);\n          while Present (Formal) loop\n             if Ekind (Formal) /= E_In_Parameter\n-              and then Has_Invariants (Etype (Formal))\n+              and then\n+                (Has_Invariants (Etype (Formal))\n+                  or else Present (Predicate_Function (Etype (Formal))))\n             then\n                return True;\n             end if;\n@@ -8812,7 +8815,7 @@ package body Sem_Ch6 is\n          end loop;\n \n          return False;\n-      end Invariants_Present;\n+      end Invariants_Or_Predicates_Present;\n \n    --  Start of processing for Process_PPCs\n \n@@ -9084,7 +9087,7 @@ package body Sem_Ch6 is\n       --  If we had any postconditions and expansion is enabled, or if the\n       --  procedure has invariants, then build the _Postconditions procedure.\n \n-      if (Present (Plist) or else Invariants_Present)\n+      if (Present (Plist) or else Invariants_Or_Predicates_Present)\n         and then Expander_Active\n       then\n          if No (Plist) then\n@@ -9127,21 +9130,33 @@ package body Sem_Ch6 is\n             Parms := No_List;\n          end if;\n \n-         --  Add invariant calls for parameters. Note that this is done for\n-         --  functions as well, since in Ada 2012 they can have IN OUT args.\n+         --  Add invariant calls and predicate calls for parameters. Note that\n+         --  this is done for functions as well, since in Ada 2012 they can\n+         --  have IN OUT args.\n \n          declare\n             Formal : Entity_Id;\n+            Ftype  : Entity_Id;\n \n          begin\n             Formal := First_Formal (Designator);\n             while Present (Formal) loop\n-               if Ekind (Formal) /= E_In_Parameter\n-                 and then Has_Invariants (Etype (Formal))\n-                 and then Present (Invariant_Procedure (Etype (Formal)))\n-               then\n-                  Append_To (Plist,\n-                    Make_Invariant_Call (New_Occurrence_Of (Formal, Loc)));\n+               if Ekind (Formal) /= E_In_Parameter then\n+                  Ftype := Etype (Formal);\n+\n+                  if Has_Invariants (Ftype)\n+                    and then Present (Invariant_Procedure (Ftype))\n+                  then\n+                     Append_To (Plist,\n+                       Make_Invariant_Call\n+                         (New_Occurrence_Of (Formal, Loc)));\n+                  end if;\n+\n+                  if Present (Predicate_Function (Ftype)) then\n+                     Append_To (Plist,\n+                       Make_Predicate_Check\n+                         (Ftype, New_Occurrence_Of (Formal, Loc)));\n+                  end if;\n                end if;\n \n                Next_Formal (Formal);\n@@ -9365,6 +9380,7 @@ package body Sem_Ch6 is\n          if Ekind (Scope (Formal_Id)) = E_Function\n            or else Ekind (Scope (Formal_Id)) = E_Generic_Function\n          then\n+            --  [IN] OUT parameters allowed for functions in Ada 2012\n \n             if Ada_Version >= Ada_2012 then\n                if In_Present (Spec) then\n@@ -9373,6 +9389,8 @@ package body Sem_Ch6 is\n                   Set_Ekind (Formal_Id, E_Out_Parameter);\n                end if;\n \n+            --  But not in earlier versions of Ada\n+\n             else\n                Error_Msg_N (\"functions can only have IN parameters\", Spec);\n                Set_Ekind (Formal_Id, E_In_Parameter);"}, {"sha": "6bd33a9599d57774ba10ef953e3e941f439b7cad", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 19, "deletions": 11, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4ca2d2c08cde1619a2394a02773712ded61dbce/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4ca2d2c08cde1619a2394a02773712ded61dbce/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=b4ca2d2c08cde1619a2394a02773712ded61dbce", "patch": "@@ -410,8 +410,8 @@ package body Sem_Prag is\n       --  case, and if found, issues an appropriate error message.\n \n       procedure Check_First_Subtype (Arg : Node_Id);\n-      --  Checks that Arg, whose expression is an entity name referencing a\n-      --  subtype, does not reference a type that is not a first subtype.\n+      --  Checks that Arg, whose expression is an entity name, references a\n+      --  first subtype.\n \n       procedure Check_In_Main_Program;\n       --  Common checks for pragmas that appear within a main program\n@@ -976,8 +976,7 @@ package body Sem_Prag is\n          Check_Arg_Is_Identifier (Argx);\n \n          if not Is_Locking_Policy_Name (Chars (Argx)) then\n-            Error_Pragma_Arg\n-              (\"& is not a valid locking policy name\", Argx);\n+            Error_Pragma_Arg (\"& is not a valid locking policy name\", Argx);\n          end if;\n       end Check_Arg_Is_Locking_Policy;\n \n@@ -1032,7 +1031,6 @@ package body Sem_Prag is\n             Error_Pragma_Arg (\"invalid argument for pragma%\", Argx);\n          end if;\n       end Check_Arg_Is_One_Of;\n-\n       ---------------------------------\n       -- Check_Arg_Is_Queuing_Policy --\n       ---------------------------------\n@@ -1044,8 +1042,7 @@ package body Sem_Prag is\n          Check_Arg_Is_Identifier (Argx);\n \n          if not Is_Queuing_Policy_Name (Chars (Argx)) then\n-            Error_Pragma_Arg\n-              (\"& is not a valid queuing policy name\", Argx);\n+            Error_Pragma_Arg (\"& is not a valid queuing policy name\", Argx);\n          end if;\n       end Check_Arg_Is_Queuing_Policy;\n \n@@ -1210,9 +1207,7 @@ package body Sem_Prag is\n             S : Entity_Id := Id;\n \n          begin\n-            while Present (S)\n-              and then S /= Standard_Standard\n-            loop\n+            while Present (S) and then S /= Standard_Standard loop\n                if Ekind (S) = E_Generic_Package\n                  and then In_Package_Body (S)\n                then\n@@ -1342,10 +1337,22 @@ package body Sem_Prag is\n \n       procedure Check_First_Subtype (Arg : Node_Id) is\n          Argx : constant Node_Id := Get_Pragma_Arg (Arg);\n+         Ent  : constant Entity_Id := Entity (Argx);\n       begin\n-         if not Is_First_Subtype (Entity (Argx)) then\n+         if Is_First_Subtype (Ent) then\n+            null;\n+\n+         elsif Is_Type (Ent) then\n             Error_Pragma_Arg\n               (\"pragma% cannot apply to subtype\", Argx);\n+\n+         elsif Is_Object (Ent) then\n+            Error_Pragma_Arg\n+              (\"pragma% cannot apply to object, requires a type\", Argx);\n+\n+         else\n+            Error_Pragma_Arg\n+              (\"pragma% cannot apply to&, requires a type\", Argx);\n          end if;\n       end Check_First_Subtype;\n \n@@ -2188,6 +2195,7 @@ package body Sem_Prag is\n \n             if Error_Msg_Name_1 = Name_Precondition then\n                Error_Msg_Name_1 := Name_Pre;\n+\n             elsif Error_Msg_Name_1 = Name_Postcondition then\n                Error_Msg_Name_1 := Name_Post;\n             end if;"}, {"sha": "fb259067cbe2fdc2e7f55e05dcc765dbbfea5007", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4ca2d2c08cde1619a2394a02773712ded61dbce/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4ca2d2c08cde1619a2394a02773712ded61dbce/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=b4ca2d2c08cde1619a2394a02773712ded61dbce", "patch": "@@ -6776,19 +6776,24 @@ package body Sem_Util is\n    -- Is_Partially_Initialized_Type --\n    -----------------------------------\n \n-   function Is_Partially_Initialized_Type (Typ : Entity_Id) return Boolean is\n+   function Is_Partially_Initialized_Type\n+     (Typ          : Entity_Id;\n+      Include_Null : Boolean := True) return Boolean\n+   is\n    begin\n       if Is_Scalar_Type (Typ) then\n          return False;\n \n       elsif Is_Access_Type (Typ) then\n-         return True;\n+         return Include_Null;\n \n       elsif Is_Array_Type (Typ) then\n \n          --  If component type is partially initialized, so is array type\n \n-         if Is_Partially_Initialized_Type (Component_Type (Typ)) then\n+         if Is_Partially_Initialized_Type\n+              (Component_Type (Typ), Include_Null)\n+         then\n             return True;\n \n          --  Otherwise we are only partially initialized if we are fully\n@@ -6841,7 +6846,9 @@ package body Sem_Util is\n                      --  If a component is of a type which is itself partially\n                      --  initialized, then the enclosing record type is also.\n \n-                     elsif Is_Partially_Initialized_Type (Etype (Ent)) then\n+                     elsif Is_Partially_Initialized_Type\n+                             (Etype (Ent), Include_Null)\n+                     then\n                         return True;\n                      end if;\n                   end if;\n@@ -6880,7 +6887,7 @@ package body Sem_Util is\n             if No (U) then\n                return True;\n             else\n-               return Is_Partially_Initialized_Type (U);\n+               return Is_Partially_Initialized_Type (U, Include_Null);\n             end if;\n          end;\n "}, {"sha": "975d724f732199cb8fdf7d93b391f3f1aad2053a", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4ca2d2c08cde1619a2394a02773712ded61dbce/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4ca2d2c08cde1619a2394a02773712ded61dbce/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=b4ca2d2c08cde1619a2394a02773712ded61dbce", "patch": "@@ -760,12 +760,18 @@ package Sem_Util is\n    --  the Is_Variable sense) with a non-tagged type target are considered view\n    --  conversions and hence variables.\n \n-   function Is_Partially_Initialized_Type (Typ : Entity_Id) return Boolean;\n+   function Is_Partially_Initialized_Type\n+     (Typ          : Entity_Id;\n+      Include_Null : Boolean := True) return Boolean;\n    --  Typ is a type entity. This function returns true if this type is partly\n    --  initialized, meaning that an object of the type is at least partly\n    --  initialized (in particular in the record case, that at least one\n    --  component has an initialization expression). Note that initialization\n    --  resulting from the use of pragma Normalized_Scalars does not count.\n+   --  Include_Null controls the handling of access types, and components of\n+   --  access types not explicitly initialized. If set to True, the default,\n+   --  default initialization of access types counts as making the type be\n+   --  partially initialized. If False, this does not count.\n \n    function Is_Potentially_Persistent_Type (T : Entity_Id) return Boolean;\n    --  Determines if type T is a potentially persistent type. A potentially"}, {"sha": "e984b5bc85d7d9738ea7723b1b9bcf3298bc098b", "filename": "gcc/ada/sprint.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4ca2d2c08cde1619a2394a02773712ded61dbce/gcc%2Fada%2Fsprint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4ca2d2c08cde1619a2394a02773712ded61dbce/gcc%2Fada%2Fsprint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsprint.adb?ref=b4ca2d2c08cde1619a2394a02773712ded61dbce", "patch": "@@ -1995,6 +1995,7 @@ package body Sprint is\n                Sprint_Node (Condition (Node));\n             else\n                Write_Str_With_Col_Check_Sloc (\"for \");\n+\n                if Present (Iterator_Specification (Node)) then\n                   Sprint_Node (Iterator_Specification (Node));\n                else"}]}