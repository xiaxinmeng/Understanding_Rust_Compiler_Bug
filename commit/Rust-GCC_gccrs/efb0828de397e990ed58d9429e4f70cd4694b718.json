{"sha": "efb0828de397e990ed58d9429e4f70cd4694b718", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWZiMDgyOGRlMzk3ZTk5MGVkNThkOTQyOWU0ZjcwY2Q0Njk0YjcxOA==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2006-02-05T19:53:00Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2006-02-05T19:53:00Z"}, "message": "re PR fortran/26041 ([4.1]: FORTRAN compiler won't compile the valid code)\n\n2006-02-05  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR fortran/26041\n\tPR fortran/26064\n\t* resolve.c (resolve_types): New function.\n\t(resolve_codes): Likewise.\n\t(gfc_resolve): Use them.\n\nFrom-SVN: r110619", "tree": {"sha": "554cf2d83f328d7dcf4ddb3ce763ba1ff8b8f42c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/554cf2d83f328d7dcf4ddb3ce763ba1ff8b8f42c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/efb0828de397e990ed58d9429e4f70cd4694b718", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efb0828de397e990ed58d9429e4f70cd4694b718", "html_url": "https://github.com/Rust-GCC/gccrs/commit/efb0828de397e990ed58d9429e4f70cd4694b718", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efb0828de397e990ed58d9429e4f70cd4694b718/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c235e3884fbbf1a657fb2b2bfe1defa0b9fd8dd9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c235e3884fbbf1a657fb2b2bfe1defa0b9fd8dd9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c235e3884fbbf1a657fb2b2bfe1defa0b9fd8dd9"}], "stats": {"total": 64, "additions": 51, "deletions": 13}, "files": [{"sha": "0bdbefdb6e2068f33e9d4d14040d9e83571a523f", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efb0828de397e990ed58d9429e4f70cd4694b718/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efb0828de397e990ed58d9429e4f70cd4694b718/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=efb0828de397e990ed58d9429e4f70cd4694b718", "patch": "@@ -1,3 +1,11 @@\n+2006-02-05  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR fortran/26041\n+\tPR fortran/26064\n+\t* resolve.c (resolve_types): New function.\n+\t(resolve_codes): Likewise.\n+\t(gfc_resolve): Use them.\n+\n 2006-02-05  Roger Sayle  <roger@eyesopen.com>\n \n \t* trans-stmt.c (gfc_evaluate_where_mask): Use LOGICAL*1 for WHERE"}, {"sha": "2a964f74bb2a3346a184a552041ff80a138e05cf", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 43, "deletions": 13, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efb0828de397e990ed58d9429e4f70cd4694b718/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efb0828de397e990ed58d9429e4f70cd4694b718/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=efb0828de397e990ed58d9429e4f70cd4694b718", "patch": "@@ -5793,21 +5793,20 @@ resolve_fntype (gfc_namespace * ns)\n }\n \n \n-/* This function is called after a complete program unit has been compiled.\n-   Its purpose is to examine all of the expressions associated with a program\n-   unit, assign types to all intermediate expressions, make sure that all\n-   assignments are to compatible types and figure out which names refer to\n-   which functions or subroutines.  */\n+/* Examine all of the expressions associated with a program unit,\n+   assign types to all intermediate expressions, make sure that all\n+   assignments are to compatible types and figure out which names\n+   refer to which functions or subroutines.  It doesn't check code\n+   block, which is handled by resolve_code.  */\n \n-void\n-gfc_resolve (gfc_namespace * ns)\n+static void\n+resolve_types (gfc_namespace * ns)\n {\n-  gfc_namespace *old_ns, *n;\n+  gfc_namespace *n;\n   gfc_charlen *cl;\n   gfc_data *d;\n   gfc_equiv *eq;\n \n-  old_ns = gfc_current_ns;\n   gfc_current_ns = ns;\n \n   resolve_entries (ns);\n@@ -5825,7 +5824,7 @@ gfc_resolve (gfc_namespace * ns)\n \t\t   \"also be PURE\", n->proc_name->name,\n \t\t   &n->proc_name->declared_at);\n \n-      gfc_resolve (n);\n+      resolve_types (n);\n     }\n \n   forall_flag = 0;\n@@ -5849,12 +5848,43 @@ gfc_resolve (gfc_namespace * ns)\n   for (eq = ns->equiv; eq; eq = eq->next)\n     resolve_equivalence (eq);\n \n-  cs_base = NULL;\n-  resolve_code (ns->code, ns);\n-\n   /* Warn about unused labels.  */\n   if (gfc_option.warn_unused_labels)\n     warn_unused_label (ns->st_labels);\n+}\n+\n+\n+/* Call resolve_code recursively.  */\n+\n+static void\n+resolve_codes (gfc_namespace * ns)\n+{\n+  gfc_namespace *n;\n+\n+  for (n = ns->contained; n; n = n->sibling)\n+    resolve_codes (n);\n+\n+  gfc_current_ns = ns;\n+  cs_base = NULL;\n+  resolve_code (ns->code, ns);\n+}\n+\n+\n+/* This function is called after a complete program unit has been compiled.\n+   Its purpose is to examine all of the expressions associated with a program\n+   unit, assign types to all intermediate expressions, make sure that all\n+   assignments are to compatible types and figure out which names refer to\n+   which functions or subroutines.  */\n+\n+void\n+gfc_resolve (gfc_namespace * ns)\n+{\n+  gfc_namespace *old_ns;\n+\n+  old_ns = gfc_current_ns;\n+\n+  resolve_types (ns);\n+  resolve_codes (ns);\n \n   gfc_current_ns = old_ns;\n }"}]}