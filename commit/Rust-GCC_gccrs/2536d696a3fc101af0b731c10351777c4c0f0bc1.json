{"sha": "2536d696a3fc101af0b731c10351777c4c0f0bc1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjUzNmQ2OTZhM2ZjMTAxYWYwYjczMWMxMDM1MTc3N2M0YzBmMGJjMQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2019-02-08T08:18:09Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2019-02-08T08:18:09Z"}, "message": "re PR tree-optimization/89223 (internal compiler error: in int_cst_value, at tree.c:11226)\n\n2019-02-08  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/89223\n\t* tree-data-ref.c (initialize_matrix_A): Fail if constant\n\tdoesn't fit in HWI.\n\t(analyze_subscript_affine_affine): Handle failure from\n\tinitialize_matrix_A.\n\n\t* gcc.dg/torture/pr89223.c: New testcase.\n\nFrom-SVN: r268666", "tree": {"sha": "bf1e19ccee00b2f9da1866a9d6b05ee9a70b6bb2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bf1e19ccee00b2f9da1866a9d6b05ee9a70b6bb2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2536d696a3fc101af0b731c10351777c4c0f0bc1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2536d696a3fc101af0b731c10351777c4c0f0bc1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2536d696a3fc101af0b731c10351777c4c0f0bc1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2536d696a3fc101af0b731c10351777c4c0f0bc1/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1c93f6ce599f93f9845d0490010bca29848c21de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c93f6ce599f93f9845d0490010bca29848c21de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c93f6ce599f93f9845d0490010bca29848c21de"}], "stats": {"total": 44, "additions": 40, "deletions": 4}, "files": [{"sha": "4e78ab6500215c76a828e3fd94443d090a264303", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2536d696a3fc101af0b731c10351777c4c0f0bc1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2536d696a3fc101af0b731c10351777c4c0f0bc1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2536d696a3fc101af0b731c10351777c4c0f0bc1", "patch": "@@ -1,3 +1,11 @@\n+2019-02-08  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/89223\n+\t* tree-data-ref.c (initialize_matrix_A): Fail if constant\n+\tdoesn't fit in HWI.\n+\t(analyze_subscript_affine_affine): Handle failure from\n+\tinitialize_matrix_A.\n+\n 2019-02-08  Jakub Jelinek  <jakub@redhat.com>\n \n \t* cfganal.c (pre_and_rev_post_order_compute_fn): Use fn instead of"}, {"sha": "9f4296b043857ca48254130a2a71c0e67222158a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2536d696a3fc101af0b731c10351777c4c0f0bc1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2536d696a3fc101af0b731c10351777c4c0f0bc1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2536d696a3fc101af0b731c10351777c4c0f0bc1", "patch": "@@ -1,3 +1,8 @@\n+2019-02-08  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/89223\n+\t* gcc.dg/torture/pr89223.c: New testcase.\n+\n 2019-02-07  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR tree-optimization/86637"}, {"sha": "1e828118ecb07341d0ace684c0aa858d580e378a", "filename": "gcc/testsuite/gcc.dg/torture/pr89223.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2536d696a3fc101af0b731c10351777c4c0f0bc1/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr89223.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2536d696a3fc101af0b731c10351777c4c0f0bc1/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr89223.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr89223.c?ref=2536d696a3fc101af0b731c10351777c4c0f0bc1", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile { target int128 } } */\n+\n+int a[5];\n+unsigned __int128 b;\n+void c()\n+{\n+  b = 4;\n+  for (;; b--)\n+    a[b] = ({ a[b + b]; });\n+}"}, {"sha": "e536b463e9643f927af785662dff7a5e2886e78d", "filename": "gcc/tree-data-ref.c", "status": "modified", "additions": 17, "deletions": 4, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2536d696a3fc101af0b731c10351777c4c0f0bc1/gcc%2Ftree-data-ref.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2536d696a3fc101af0b731c10351777c4c0f0bc1/gcc%2Ftree-data-ref.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-data-ref.c?ref=2536d696a3fc101af0b731c10351777c4c0f0bc1", "patch": "@@ -3191,6 +3191,8 @@ initialize_matrix_A (lambda_matrix A, tree chrec, unsigned index, int mult)\n   switch (TREE_CODE (chrec))\n     {\n     case POLYNOMIAL_CHREC:\n+      if (!cst_and_fits_in_hwi (CHREC_RIGHT (chrec)))\n+\treturn chrec_dont_know;\n       A[index][0] = mult * int_cst_value (CHREC_RIGHT (chrec));\n       return initialize_matrix_A (A, CHREC_LEFT (chrec), index + 1, mult);\n \n@@ -3574,7 +3576,7 @@ analyze_subscript_affine_affine (tree chrec_a,\n \t\t\t\t tree *last_conflicts)\n {\n   unsigned nb_vars_a, nb_vars_b, dim;\n-  HOST_WIDE_INT init_a, init_b, gamma, gcd_alpha_beta;\n+  HOST_WIDE_INT gamma, gcd_alpha_beta;\n   lambda_matrix A, U, S;\n   struct obstack scratch_obstack;\n \n@@ -3611,9 +3613,20 @@ analyze_subscript_affine_affine (tree chrec_a,\n   A = lambda_matrix_new (dim, 1, &scratch_obstack);\n   S = lambda_matrix_new (dim, 1, &scratch_obstack);\n \n-  init_a = int_cst_value (initialize_matrix_A (A, chrec_a, 0, 1));\n-  init_b = int_cst_value (initialize_matrix_A (A, chrec_b, nb_vars_a, -1));\n-  gamma = init_b - init_a;\n+  tree init_a = initialize_matrix_A (A, chrec_a, 0, 1);\n+  tree init_b = initialize_matrix_A (A, chrec_b, nb_vars_a, -1);\n+  if (init_a == chrec_dont_know\n+      || init_b == chrec_dont_know)\n+    {\n+      if (dump_file && (dump_flags & TDF_DETAILS))\n+\tfprintf (dump_file, \"affine-affine test failed: \"\n+\t\t \"representation issue.\\n\");\n+      *overlaps_a = conflict_fn_not_known ();\n+      *overlaps_b = conflict_fn_not_known ();\n+      *last_conflicts = chrec_dont_know;\n+      goto end_analyze_subs_aa;\n+    }\n+  gamma = int_cst_value (init_b) - int_cst_value (init_a);\n \n   /* Don't do all the hard work of solving the Diophantine equation\n      when we already know the solution: for example,"}]}