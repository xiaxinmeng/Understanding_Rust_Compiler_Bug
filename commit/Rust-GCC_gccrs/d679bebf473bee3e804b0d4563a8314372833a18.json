{"sha": "d679bebf473bee3e804b0d4563a8314372833a18", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDY3OWJlYmY0NzNiZWUzZTgwNGIwZDQ1NjNhODMxNDM3MjgzM2ExOA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-07-11T00:09:09Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-07-11T00:09:09Z"}, "message": "(expand_block_move): Remove #if 0 conditionals against using larger\nblock moves.\n\nFrom-SVN: r10117", "tree": {"sha": "7c35a1141761377a2c6b6e181e33959a18766a7d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7c35a1141761377a2c6b6e181e33959a18766a7d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d679bebf473bee3e804b0d4563a8314372833a18", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d679bebf473bee3e804b0d4563a8314372833a18", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d679bebf473bee3e804b0d4563a8314372833a18", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d679bebf473bee3e804b0d4563a8314372833a18/comments", "author": null, "committer": null, "parents": [{"sha": "e442bf1fd66e9164e6ff54def82e70d14dc50bb3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e442bf1fd66e9164e6ff54def82e70d14dc50bb3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e442bf1fd66e9164e6ff54def82e70d14dc50bb3"}], "stats": {"total": 9, "additions": 3, "deletions": 6}, "files": [{"sha": "47a005b54cdb096c662cfd75a4c13b1ac0a44a42", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d679bebf473bee3e804b0d4563a8314372833a18/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d679bebf473bee3e804b0d4563a8314372833a18/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=d679bebf473bee3e804b0d4563a8314372833a18", "patch": "@@ -195,7 +195,8 @@ rs6000_override_options ()\n /* Create a CONST_DOUBLE like immed_double_const, except reverse the\n    two parts of the constant if the target is little endian.  */\n \n-struct rtx_def *rs6000_immed_double_const (i0, i1, mode)\n+struct rtx_def *\n+rs6000_immed_double_const (i0, i1, mode)\n      HOST_WIDE_INT i0, i1;\n      enum machine_mode mode;\n {\n@@ -683,8 +684,6 @@ expand_block_move (operands)\n     {\n       for ( ; bytes > 0; bytes -= move_bytes)\n \t{\n-#if 0\n-\t  /* XXX Don't move so many bytes right now, it causes the compiler to not bootstrap */\n \t  if (bytes > 24\t\t/* move up to 32 bytes at a time */\n \t      && !fixed_regs[5]\n \t      && !fixed_regs[6]\n@@ -727,9 +726,7 @@ expand_block_move (operands)\n \t\t\t\t\t    GEN_INT (move_bytes),\n \t\t\t\t\t    align_rtx));\n \t    }\n-\t  else\n-#endif\n-\t    if (bytes > 4 && !TARGET_64BIT)\n+\t  else if (bytes > 4 && !TARGET_64BIT)\n \t    {\t\t\t/* move up to 8 bytes at a time */\n \t      move_bytes = (bytes > 8) ? 8 : bytes;\n \t      emit_insn (gen_movstrsi_2reg (dest_reg,"}]}