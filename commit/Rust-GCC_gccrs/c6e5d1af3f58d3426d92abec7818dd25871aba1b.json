{"sha": "c6e5d1af3f58d3426d92abec7818dd25871aba1b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzZlNWQxYWYzZjU4ZDM0MjZkOTJhYmVjNzgxOGRkMjU4NzFhYmExYg==", "commit": {"author": {"name": "Andrew Haley", "email": "aph@redhat.com", "date": "2005-07-28T15:00:53Z"}, "committer": {"name": "Andrew Haley", "email": "aph@gcc.gnu.org", "date": "2005-07-28T15:00:53Z"}, "message": "expr.c (expand_load_internal): Convert to destination type.\n\n2005-07-15  Andrew Haley  <aph@redhat.com>\n\n        * expr.c (expand_load_internal): Convert to destination type.\n\nFrom-SVN: r102485", "tree": {"sha": "fc6869a69efca7c578b11f3952502d84a771535a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fc6869a69efca7c578b11f3952502d84a771535a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c6e5d1af3f58d3426d92abec7818dd25871aba1b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6e5d1af3f58d3426d92abec7818dd25871aba1b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c6e5d1af3f58d3426d92abec7818dd25871aba1b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6e5d1af3f58d3426d92abec7818dd25871aba1b/comments", "author": {"login": "theRealAph", "id": 254637, "node_id": "MDQ6VXNlcjI1NDYzNw==", "avatar_url": "https://avatars.githubusercontent.com/u/254637?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theRealAph", "html_url": "https://github.com/theRealAph", "followers_url": "https://api.github.com/users/theRealAph/followers", "following_url": "https://api.github.com/users/theRealAph/following{/other_user}", "gists_url": "https://api.github.com/users/theRealAph/gists{/gist_id}", "starred_url": "https://api.github.com/users/theRealAph/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theRealAph/subscriptions", "organizations_url": "https://api.github.com/users/theRealAph/orgs", "repos_url": "https://api.github.com/users/theRealAph/repos", "events_url": "https://api.github.com/users/theRealAph/events{/privacy}", "received_events_url": "https://api.github.com/users/theRealAph/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9603f2d849b267a4414546c8732f9d023f3849ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9603f2d849b267a4414546c8732f9d023f3849ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9603f2d849b267a4414546c8732f9d023f3849ee"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "e9a07d9ed555fde4776cac6555bb9cce3f2b5562", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6e5d1af3f58d3426d92abec7818dd25871aba1b/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6e5d1af3f58d3426d92abec7818dd25871aba1b/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=c6e5d1af3f58d3426d92abec7818dd25871aba1b", "patch": "@@ -1,3 +1,7 @@\n+2005-07-15  Andrew Haley  <aph@redhat.com>\n+\n+\t* expr.c (expand_load_internal): Convert to destination type.\n+\n 2005-07-22  Manfred Hollstein  <mh@suse.com>\n \n \t* verify-impl.c (check_class_constant): Fix uninitialised warnings."}, {"sha": "5c5a56ca9c4caf6e47a51fd959fabefd223c35a7", "filename": "gcc/java/expr.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6e5d1af3f58d3426d92abec7818dd25871aba1b/gcc%2Fjava%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6e5d1af3f58d3426d92abec7818dd25871aba1b/gcc%2Fjava%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fexpr.c?ref=c6e5d1af3f58d3426d92abec7818dd25871aba1b", "patch": "@@ -1321,7 +1321,7 @@ expand_load_internal (int index, tree type, int pc)\n      value into it.  Then we push this new local on the stack.\n      Hopefully this all gets optimized out.  */\n   copy = build_decl (VAR_DECL, NULL_TREE, type);\n-  if (INTEGRAL_TYPE_P (type)\n+  if (INTEGRAL_TYPE_P (type) || POINTER_TYPE_P (type)\n       && TREE_TYPE (copy) != TREE_TYPE (var))\n     var = convert (type, var);\n   java_add_local_var (copy);"}]}