{"sha": "05b12036e2747d540392008c6b177a6414e2e29d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDViMTIwMzZlMjc0N2Q1NDAzOTIwMDhjNmIxNzdhNjQxNGUyZTI5ZA==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2011-03-22T22:50:03Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2011-03-22T22:50:03Z"}, "message": "score.c (score_handle_option): Don't assert that global structures are in use.\n\n\t* config/score/score.c (score_handle_option): Don't assert that\n\tglobal structures are in use.  Access target_flags via opts\n\tpointer.  Use value of -march= option to determine target_flags\n\tsettings.\n\t* config/score/score.opt (march=): Use Enum.\n\t(score_arch): New Enum and EnumValue entries.\n\nFrom-SVN: r171329", "tree": {"sha": "cd13e4afdcb28911eeb8c2e4fb51fe7a0e92297b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cd13e4afdcb28911eeb8c2e4fb51fe7a0e92297b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/05b12036e2747d540392008c6b177a6414e2e29d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05b12036e2747d540392008c6b177a6414e2e29d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/05b12036e2747d540392008c6b177a6414e2e29d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05b12036e2747d540392008c6b177a6414e2e29d/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dd51e35ac7251a9cac90c686790906945ce327d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd51e35ac7251a9cac90c686790906945ce327d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd51e35ac7251a9cac90c686790906945ce327d0"}], "stats": {"total": 52, "additions": 29, "deletions": 23}, "files": [{"sha": "9e28d5d0af2420965c537db7ee9f5ee287100e0f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05b12036e2747d540392008c6b177a6414e2e29d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05b12036e2747d540392008c6b177a6414e2e29d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=05b12036e2747d540392008c6b177a6414e2e29d", "patch": "@@ -1,3 +1,12 @@\n+2011-03-22  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* config/score/score.c (score_handle_option): Don't assert that\n+\tglobal structures are in use.  Access target_flags via opts\n+\tpointer.  Use value of -march= option to determine target_flags\n+\tsettings.\n+\t* config/score/score.opt (march=): Use Enum.\n+\t(score_arch): New Enum and EnumValue entries.\n+\n 2011-03-22  Joseph Myers  <joseph@codesourcery.com>\n \n \t* config/mep/mep.c (option_mtiny_specified): Remove."}, {"sha": "1c745f061937a96ff5d429c8ca8dc79f900e68ee", "filename": "gcc/config/score/score.c", "status": "modified", "additions": 8, "deletions": 21, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05b12036e2747d540392008c6b177a6414e2e29d/gcc%2Fconfig%2Fscore%2Fscore.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05b12036e2747d540392008c6b177a6414e2e29d/gcc%2Fconfig%2Fscore%2Fscore.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fscore%2Fscore.c?ref=05b12036e2747d540392008c6b177a6414e2e29d", "patch": "@@ -283,38 +283,25 @@ score_asm_file_end (void)\n \n /* Implement TARGET_HANDLE_OPTION.  */\n static bool\n-score_handle_option (struct gcc_options *opts, struct gcc_options *opts_set,\n+score_handle_option (struct gcc_options *opts,\n+\t\t     struct gcc_options *opts_set ATTRIBUTE_UNUSED,\n \t\t     const struct cl_decoded_option *decoded,\n \t\t     location_t loc ATTRIBUTE_UNUSED)\n {\n   size_t code = decoded->opt_index;\n-  const char *arg = decoded->arg;\n-\n-  gcc_assert (opts == &global_options);\n-  gcc_assert (opts_set == &global_options_set);\n+  int value = decoded->value;\n \n   switch (code)\n     {\n     case OPT_mscore7d:\n-      target_flags &= ~(MASK_ALL_CPU_BITS);\n-      target_flags |= MASK_SCORE7 | MASK_SCORE7D;\n+      opts->x_target_flags &= ~(MASK_ALL_CPU_BITS);\n+      opts->x_target_flags |= MASK_SCORE7 | MASK_SCORE7D;\n       return true;\n \n     case OPT_march_:\n-      if (strcmp (arg, \"score7\") == 0)\n-        {\n-          target_flags &= ~(MASK_ALL_CPU_BITS);\n-          target_flags |= MASK_SCORE7;\n-          return true;\n-        }\n-      else if (strcmp (arg, \"score7d\") == 0)\n-        {\n-          target_flags &= ~(MASK_ALL_CPU_BITS);\n-          target_flags |= MASK_SCORE7 | MASK_SCORE7D;\n-          return true;\n-        }\n-      else\n-        return false;\n+      opts->x_target_flags &= ~(MASK_ALL_CPU_BITS);\n+      opts->x_target_flags |= value;\n+      return true;\n \n     default:\n       return true;"}, {"sha": "292607c294a36194ba2badaa7f97d8870ec95a2f", "filename": "gcc/config/score/score.opt", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05b12036e2747d540392008c6b177a6414e2e29d/gcc%2Fconfig%2Fscore%2Fscore.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05b12036e2747d540392008c6b177a6414e2e29d/gcc%2Fconfig%2Fscore%2Fscore.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fscore%2Fscore.opt?ref=05b12036e2747d540392008c6b177a6414e2e29d", "patch": "@@ -1,6 +1,6 @@\n ; Options for the Sunnorth port of the compiler.\n \n-; Copyright (C) 2005, 2007, 2010 Free Software Foundation, Inc.\n+; Copyright (C) 2005, 2007, 2010, 2011 Free Software Foundation, Inc.\n ;\n ; This file is part of GCC.\n ;\n@@ -43,5 +43,15 @@ Target RejectNegative Report Mask(SCORE7D)\n Support SCORE 7D ISA\n \n march=\n-Target RejectNegative Joined\n+Target RejectNegative Joined Enum(score_arch)\n Specify the name of the target architecture\n+\n+Enum\n+Name(score_arch) Type(int)\n+Known SCORE architectures (for use with the -march= option):\n+\n+EnumValue\n+Enum(score_arch) String(score7) Value(MASK_SCORE7)\n+\n+EnumValue\n+Enum(score_arch) String(score7d) Value(MASK_SCORE7 | MASK_SCORE7D)"}]}