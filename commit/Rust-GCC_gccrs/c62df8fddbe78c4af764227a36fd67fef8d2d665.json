{"sha": "c62df8fddbe78c4af764227a36fd67fef8d2d665", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzYyZGY4ZmRkYmU3OGM0YWY3NjQyMjdhMzZmZDY3ZmVmOGQyZDY2NQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2007-12-11T19:08:26Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2007-12-11T19:08:26Z"}, "message": "stl_bvector.h (vector<bool>::reserve): Move out of line...\n\n2007-12-11  Paolo Carlini  <pcarlini@suse.de>\n\n\t* include/bits/stl_bvector.h (vector<bool>::reserve): Move out of\n\tline...\n\t* include/bits/vector.tcc: ... here.\n\nFrom-SVN: r130777", "tree": {"sha": "1212618bd275c50c8dd692b834da060b630a3375", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1212618bd275c50c8dd692b834da060b630a3375"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c62df8fddbe78c4af764227a36fd67fef8d2d665", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c62df8fddbe78c4af764227a36fd67fef8d2d665", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c62df8fddbe78c4af764227a36fd67fef8d2d665", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c62df8fddbe78c4af764227a36fd67fef8d2d665/comments", "author": null, "committer": null, "parents": [{"sha": "fcd5a1131ae62f73a9887deb6a8b8d3cbb76b6c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fcd5a1131ae62f73a9887deb6a8b8d3cbb76b6c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fcd5a1131ae62f73a9887deb6a8b8d3cbb76b6c9"}], "stats": {"total": 41, "additions": 26, "deletions": 15}, "files": [{"sha": "a318ac84282a65e2bb42e490f3c3b77dc308551a", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c62df8fddbe78c4af764227a36fd67fef8d2d665/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c62df8fddbe78c4af764227a36fd67fef8d2d665/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=c62df8fddbe78c4af764227a36fd67fef8d2d665", "patch": "@@ -1,3 +1,9 @@\n+2007-12-11  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* include/bits/stl_bvector.h (vector<bool>::reserve): Move out of\n+\tline...\n+\t* include/bits/vector.tcc: ... here.\n+\n 2007-12-10  Jonathan Wakely  <jwakely.gcc@gmail.com>\n \n \t* docs/html/21_strings/howto.html: Add links to referenced articles."}, {"sha": "045f20378a6df51df70705e25f6692cb54bc55b5", "filename": "libstdc++-v3/include/bits/stl_bvector.h", "status": "modified", "additions": 1, "deletions": 15, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c62df8fddbe78c4af764227a36fd67fef8d2d665/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_bvector.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c62df8fddbe78c4af764227a36fd67fef8d2d665/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_bvector.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_bvector.h?ref=c62df8fddbe78c4af764227a36fd67fef8d2d665", "patch": "@@ -690,21 +690,7 @@ template<typename _Alloc>\n     { _M_range_check(__n); return (*this)[__n]; }\n \n     void\n-    reserve(size_type __n)\n-    {\n-      if (__n > this->max_size())\n-\t__throw_length_error(__N(\"vector::reserve\"));\n-      if (this->capacity() < __n)\n-\t{\n-\t  _Bit_type* __q = this->_M_allocate(__n);\n-\t  this->_M_impl._M_finish = _M_copy_aligned(begin(), end(),\n-\t\t\t\t\t\t    iterator(__q, 0));\n-\t  this->_M_deallocate();\n-\t  this->_M_impl._M_start = iterator(__q, 0);\n-\t  this->_M_impl._M_end_of_storage = (__q + (__n + int(_S_word_bit) - 1)\n-\t\t\t\t\t     / int(_S_word_bit));\n-\t}\n-    }\n+    reserve(size_type __n);\n \n     reference\n     front()"}, {"sha": "030cb3aabccedd99e3db5a1a7e1ca09568469134", "filename": "libstdc++-v3/include/bits/vector.tcc", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c62df8fddbe78c4af764227a36fd67fef8d2d665/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fvector.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c62df8fddbe78c4af764227a36fd67fef8d2d665/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fvector.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fvector.tcc?ref=c62df8fddbe78c4af764227a36fd67fef8d2d665", "patch": "@@ -534,6 +534,25 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n \n   // vector<bool>\n \n+  template<typename _Alloc>\n+    void\n+    vector<bool, _Alloc>::\n+    reserve(size_type __n)\n+    {\n+      if (__n > this->max_size())\n+\t__throw_length_error(__N(\"vector::reserve\"));\n+      if (this->capacity() < __n)\n+\t{\n+\t  _Bit_type* __q = this->_M_allocate(__n);\n+\t  this->_M_impl._M_finish = _M_copy_aligned(begin(), end(),\n+\t\t\t\t\t\t    iterator(__q, 0));\n+\t  this->_M_deallocate();\n+\t  this->_M_impl._M_start = iterator(__q, 0);\n+\t  this->_M_impl._M_end_of_storage = (__q + (__n + int(_S_word_bit) - 1)\n+\t\t\t\t\t     / int(_S_word_bit));\n+\t}\n+    }\n+\n   template<typename _Alloc>\n     void\n     vector<bool, _Alloc>::"}]}