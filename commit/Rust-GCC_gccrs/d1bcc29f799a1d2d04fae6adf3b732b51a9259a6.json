{"sha": "d1bcc29f799a1d2d04fae6adf3b732b51a9259a6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDFiY2MyOWY3OTlhMWQyZDA0ZmFlNmFkZjNiNzMyYjUxYTkyNTlhNg==", "commit": {"author": {"name": "Andrew Pinski", "email": "apinski@cavium.com", "date": "2014-10-21T18:30:35Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2014-10-21T18:30:35Z"}, "message": "invoke.texi (AARCH64/mtune): Document thunderx as an available option also.\n\n2014-10-21  Andrew Pinski  <apinski@cavium.com>\n\n\t* doc/invoke.texi (AARCH64/mtune): Document thunderx as an\n\tavailable option also.\n\t* config/aarch64/aarch64-cost-tables.h: New file.\n\t* config/aarch64/aarch64-cores.def (thunderx): New core.\n\t* config/aarch64/aarch64-tune.md: Regenerate.\n\t* config/aarch64/aarch64.c: Include aarch64-cost-tables.h instead\n\tof config/arm/aarch-cost-tables.h.\n\t(thunderx_regmove_cost): New variable.\n\t(thunderx_tunings): New variable.\n\nFrom-SVN: r216524", "tree": {"sha": "d21f70f233ace3b30f0f7130533fa9f15172624b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d21f70f233ace3b30f0f7130533fa9f15172624b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d1bcc29f799a1d2d04fae6adf3b732b51a9259a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1bcc29f799a1d2d04fae6adf3b732b51a9259a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1bcc29f799a1d2d04fae6adf3b732b51a9259a6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1bcc29f799a1d2d04fae6adf3b732b51a9259a6/comments", "author": {"login": "apinski-cavium", "id": 6335315, "node_id": "MDQ6VXNlcjYzMzUzMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/6335315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apinski-cavium", "html_url": "https://github.com/apinski-cavium", "followers_url": "https://api.github.com/users/apinski-cavium/followers", "following_url": "https://api.github.com/users/apinski-cavium/following{/other_user}", "gists_url": "https://api.github.com/users/apinski-cavium/gists{/gist_id}", "starred_url": "https://api.github.com/users/apinski-cavium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apinski-cavium/subscriptions", "organizations_url": "https://api.github.com/users/apinski-cavium/orgs", "repos_url": "https://api.github.com/users/apinski-cavium/repos", "events_url": "https://api.github.com/users/apinski-cavium/events{/privacy}", "received_events_url": "https://api.github.com/users/apinski-cavium/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "be3c16c474629e69c6c4cd6465ffa4b572cc6460", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be3c16c474629e69c6c4cd6465ffa4b572cc6460", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be3c16c474629e69c6c4cd6465ffa4b572cc6460"}], "stats": {"total": 168, "additions": 165, "deletions": 3}, "files": [{"sha": "4e9f64d694a14590041d71a8933d76358043832a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1bcc29f799a1d2d04fae6adf3b732b51a9259a6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1bcc29f799a1d2d04fae6adf3b732b51a9259a6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d1bcc29f799a1d2d04fae6adf3b732b51a9259a6", "patch": "@@ -1,3 +1,15 @@\n+2014-10-21  Andrew Pinski  <apinski@cavium.com>\n+\n+\t* doc/invoke.texi (AARCH64/mtune): Document thunderx as an\n+\tavailable option also.\n+\t* config/aarch64/aarch64-cost-tables.h: New file.\n+\t* config/aarch64/aarch64-cores.def (thunderx): New core.\n+\t* config/aarch64/aarch64-tune.md: Regenerate.\n+\t* config/aarch64/aarch64.c: Include aarch64-cost-tables.h instead\n+\tof config/arm/aarch-cost-tables.h.\n+\t(thunderx_regmove_cost): New variable.\n+\t(thunderx_tunings): New variable.\n+\n 2014-10-21  Dehao Chen  <dehao@google.com>\n \n \t* auto-profile.c: New file."}, {"sha": "b3318c3532b43aa80e9a60a6753758004361d952", "filename": "gcc/config/aarch64/aarch64-cores.def", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1bcc29f799a1d2d04fae6adf3b732b51a9259a6/gcc%2Fconfig%2Faarch64%2Faarch64-cores.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1bcc29f799a1d2d04fae6adf3b732b51a9259a6/gcc%2Fconfig%2Faarch64%2Faarch64-cores.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-cores.def?ref=d1bcc29f799a1d2d04fae6adf3b732b51a9259a6", "patch": "@@ -36,6 +36,7 @@\n \n AARCH64_CORE(\"cortex-a53\",  cortexa53, cortexa53, 8,  AARCH64_FL_FPSIMD | AARCH64_FL_CRC | AARCH64_FL_CRYPTO, cortexa53)\n AARCH64_CORE(\"cortex-a57\",  cortexa15, cortexa15, 8,  AARCH64_FL_FPSIMD | AARCH64_FL_CRC | AARCH64_FL_CRYPTO, cortexa57)\n+AARCH64_CORE(\"thunderx\",    thunderx,  cortexa53, 8,  AARCH64_FL_FPSIMD | AARCH64_FL_CRC | AARCH64_FL_CRYPTO, thunderx)\n \n /* V8 big.LITTLE implementations.  */\n "}, {"sha": "5764245b3cfa24dba13f24b2b53823ea08fc252c", "filename": "gcc/config/aarch64/aarch64-cost-tables.h", "status": "added", "additions": 131, "deletions": 0, "changes": 131, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1bcc29f799a1d2d04fae6adf3b732b51a9259a6/gcc%2Fconfig%2Faarch64%2Faarch64-cost-tables.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1bcc29f799a1d2d04fae6adf3b732b51a9259a6/gcc%2Fconfig%2Faarch64%2Faarch64-cost-tables.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-cost-tables.h?ref=d1bcc29f799a1d2d04fae6adf3b732b51a9259a6", "patch": "@@ -0,0 +1,131 @@\n+/* RTX cost tables for AArch64.\n+\n+   Copyright (C) 2014 Free Software Foundation, Inc.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with GCC; see the file COPYING3.  If not see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+#ifndef GCC_AARCH64_COST_TABLES_H\n+#define GCC_AARCH64_COST_TABLES_H\n+\n+#include \"config/arm/aarch-cost-tables.h\"\n+\n+/* ThunderX does not have implement AArch32.  */\n+const struct cpu_cost_table thunderx_extra_costs =\n+{\n+  /* ALU */\n+  {\n+    0,\t\t\t/* Arith.  */\n+    0,\t\t\t/* Logical.  */\n+    0,\t\t\t/* Shift.  */\n+    0,\t\t\t/* Shift_reg.  */\n+    COSTS_N_INSNS (1),\t/* Arith_shift.  */\n+    COSTS_N_INSNS (1),\t/* Arith_shift_reg.  */\n+    COSTS_N_INSNS (1),\t/* UNUSED: Log_shift.  */\n+    COSTS_N_INSNS (1),\t/* UNUSED: Log_shift_reg.  */\n+    0,\t\t\t/* Extend.  */\n+    COSTS_N_INSNS (1),\t/* Extend_arith.  */\n+    0,\t\t\t/* Bfi.  */\n+    0,\t\t\t/* Bfx.  */\n+    COSTS_N_INSNS (5),\t/* Clz.  */\n+    0,\t\t\t/* rev.  */\n+    0,\t\t\t/* UNUSED: non_exec.  */\n+    false\t\t/* UNUSED: non_exec_costs_exec.  */\n+  },\n+  {\n+    /* MULT SImode */\n+    {\n+      COSTS_N_INSNS (3),\t/* Simple.  */\n+      0,\t\t\t/* Flag_setting.  */\n+      0,\t\t\t/* Extend.  */\n+      0,\t\t\t/* Add.  */\n+      COSTS_N_INSNS (1),\t/* Extend_add.  */\n+      COSTS_N_INSNS (21)\t/* Idiv.  */\n+    },\n+    /* MULT DImode */\n+    {\n+      COSTS_N_INSNS (3),\t/* Simple.  */\n+      0,\t\t\t/* Flag_setting.  */\n+      0,\t\t\t/* Extend.  */\n+      0,\t\t\t/* Add.  */\n+      COSTS_N_INSNS (1),\t/* Extend_add.  */\n+      COSTS_N_INSNS (37)\t/* Idiv.  */\n+    },\n+  },\n+  /* LD/ST */\n+  {\n+    COSTS_N_INSNS (2),\t/* Load.  */\n+    COSTS_N_INSNS (2),\t/* Load_sign_extend.  */\n+    COSTS_N_INSNS (2),\t/* Ldrd.  */\n+    0,\t\t\t/* N/A: Ldm_1st.  */\n+    0,\t\t\t/* N/A: Ldm_regs_per_insn_1st.  */\n+    0,\t\t\t/* N/A: Ldm_regs_per_insn_subsequent.  */\n+    COSTS_N_INSNS (3),\t/* Loadf.  */\n+    COSTS_N_INSNS (3),\t/* Loadd.  */\n+    0,  \t\t/* N/A: Load_unaligned.  */\n+    0,\t\t\t/* Store.  */\n+    0,\t\t\t/* Strd.  */\n+    0,\t\t\t/* N/A: Stm_1st.  */\n+    0,\t\t\t/* N/A: Stm_regs_per_insn_1st.  */\n+    0,\t\t\t/* N/A: Stm_regs_per_insn_subsequent.  */\n+    0,\t\t\t/* Storef.  */\n+    0,\t\t\t/* Stored.  */\n+    COSTS_N_INSNS (1)  /* Store_unaligned.  */\n+  },\n+  {\n+    /* FP SFmode */\n+    {\n+      COSTS_N_INSNS (11),\t/* Div.  */\n+      COSTS_N_INSNS (5),\t/* Mult.  */\n+      COSTS_N_INSNS (5),\t/* Mult_addsub.  */\n+      COSTS_N_INSNS (5),\t/* Fma.  */\n+      COSTS_N_INSNS (3),\t/* Addsub.  */\n+      0,\t\t\t/* Fpconst.  */\n+      COSTS_N_INSNS (1),\t/* Neg.  */\n+      0,\t\t\t/* Compare.  */\n+      COSTS_N_INSNS (5),\t/* Widen.  */\n+      COSTS_N_INSNS (5),\t/* Narrow.  */\n+      COSTS_N_INSNS (5),\t/* Toint.  */\n+      COSTS_N_INSNS (5),\t/* Fromint.  */\n+      COSTS_N_INSNS (1)\t\t/* Roundint.  */\n+    },\n+    /* FP DFmode */\n+    {\n+      COSTS_N_INSNS (21),\t/* Div.  */\n+      COSTS_N_INSNS (5),\t/* Mult.  */\n+      COSTS_N_INSNS (5),\t/* Mult_addsub.  */\n+      COSTS_N_INSNS (5),\t/* Fma.  */\n+      COSTS_N_INSNS (3),\t/* Addsub.  */\n+      0,\t\t\t/* Fpconst.  */\n+      COSTS_N_INSNS (1),\t/* Neg.  */\n+      0,\t\t\t/* Compare.  */\n+      COSTS_N_INSNS (5),\t/* Widen.  */\n+      COSTS_N_INSNS (5),\t/* Narrow.  */\n+      COSTS_N_INSNS (5),\t/* Toint.  */\n+      COSTS_N_INSNS (5),\t/* Fromint.  */\n+      COSTS_N_INSNS (1)\t\t/* Roundint.  */\n+    }\n+  },\n+  /* Vector */\n+  {\n+    COSTS_N_INSNS (1)\t/* Alu.  */\n+  }\n+};\n+\n+\n+\n+#endif\n+"}, {"sha": "c717ea848bcd4a4d9bce8b338b3643438ec7474e", "filename": "gcc/config/aarch64/aarch64-tune.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1bcc29f799a1d2d04fae6adf3b732b51a9259a6/gcc%2Fconfig%2Faarch64%2Faarch64-tune.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1bcc29f799a1d2d04fae6adf3b732b51a9259a6/gcc%2Fconfig%2Faarch64%2Faarch64-tune.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-tune.md?ref=d1bcc29f799a1d2d04fae6adf3b732b51a9259a6", "patch": "@@ -1,5 +1,5 @@\n ;; -*- buffer-read-only: t -*-\n ;; Generated automatically by gentune.sh from aarch64-cores.def\n (define_attr \"tune\"\n-\t\"cortexa53,cortexa15,cortexa57cortexa53\"\n+\t\"cortexa53,cortexa15,thunderx,cortexa57cortexa53\"\n \t(const (symbol_ref \"((enum attr_tune) aarch64_tune)\")))"}, {"sha": "b94f45086010470bd6830a41b3ca6b9129fc67f7", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1bcc29f799a1d2d04fae6adf3b732b51a9259a6/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1bcc29f799a1d2d04fae6adf3b732b51a9259a6/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=d1bcc29f799a1d2d04fae6adf3b732b51a9259a6", "patch": "@@ -65,7 +65,7 @@\n #include \"dwarf2.h\"\n #include \"cfgloop.h\"\n #include \"tree-vectorizer.h\"\n-#include \"config/arm/aarch-cost-tables.h\"\n+#include \"aarch64-cost-tables.h\"\n #include \"dumpfile.h\"\n #include \"builtins.h\"\n \n@@ -242,6 +242,14 @@ static const struct cpu_regmove_cost cortexa53_regmove_cost =\n   NAMED_PARAM (FP2FP, 2)\n };\n \n+static const struct cpu_regmove_cost thunderx_regmove_cost =\n+{\n+  NAMED_PARAM (GP2GP, 2),\n+  NAMED_PARAM (GP2FP, 2),\n+  NAMED_PARAM (FP2GP, 6),\n+  NAMED_PARAM (FP2FP, 4)\n+};\n+\n /* Generic costs for vector insn classes.  */\n #if HAVE_DESIGNATED_INITIALIZERS && GCC_VERSION >= 2007\n __extension__\n@@ -315,6 +323,16 @@ static const struct tune_params cortexa57_tunings =\n   NAMED_PARAM (issue_rate, 3)\n };\n \n+static const struct tune_params thunderx_tunings =\n+{\n+  &thunderx_extra_costs,\n+  &generic_addrcost_table,\n+  &thunderx_regmove_cost,\n+  &generic_vector_cost,\n+  NAMED_PARAM (memmov_cost, 6),\n+  NAMED_PARAM (issue_rate, 2)\n+};\n+\n /* A processor implementing AArch64.  */\n struct processor\n {"}, {"sha": "644169e7b9a1dc55219df0f9e24da083a0d1017a", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1bcc29f799a1d2d04fae6adf3b732b51a9259a6/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1bcc29f799a1d2d04fae6adf3b732b51a9259a6/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=d1bcc29f799a1d2d04fae6adf3b732b51a9259a6", "patch": "@@ -11852,7 +11852,7 @@ architecture.\n @opindex mtune\n Specify the name of the target processor for which GCC should tune the\n performance of the code.  Permissible values for this option are:\n-@samp{generic}, @samp{cortex-a53}, @samp{cortex-a57}.\n+@samp{generic}, @samp{cortex-a53}, @samp{cortex-a57}, @samp{thunderx}.\n \n Additionally, this option can specify that GCC should tune the performance\n of the code for a big.LITTLE system.  The only permissible value is"}]}