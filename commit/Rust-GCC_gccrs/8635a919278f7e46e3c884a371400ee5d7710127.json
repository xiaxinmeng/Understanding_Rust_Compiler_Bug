{"sha": "8635a919278f7e46e3c884a371400ee5d7710127", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODYzNWE5MTkyNzhmN2U0NmUzYzg4NGEzNzE0MDBlZTVkNzcxMDEyNw==", "commit": {"author": {"name": "Geoffrey Keating", "email": "geoffk@apple.com", "date": "2005-04-23T04:27:48Z"}, "committer": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "2005-04-23T04:27:48Z"}, "message": "rs6000.md (sync_add<mode>_internal, [...]): Use \"bne- $-xxx\" rather than local labels.\n\n\t* config/rs6000/rs6000.md (sync_add<mode>_internal,\n\tsync_addshort_internal, sync_sub<mode>_internal, sync_andsi_internal,\n\tsync_anddi_internal, sync_boolsi_internal, sync_booldi_internal,\n\tsync_boolc<mode>_internal, sync_boolc<mode>_internal2,\n\tsync_boolcc<mode>_internal, sync_lock_test_and_set<mode>): Use\n\t\"bne- $-xxx\" rather than local labels.\n\t(sync_lock_release<mode>): Add second operand.\n\t(lwsync): Use .long rather than a more meaningful opcode.\n\t* doc/md.texi (Standard Names): Add description of second\n\tparameter to sync_lock_test_and_set.\n\nFrom-SVN: r98602", "tree": {"sha": "d01e5d4df6b655bc4ea4438deeafeb53f028ba50", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d01e5d4df6b655bc4ea4438deeafeb53f028ba50"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8635a919278f7e46e3c884a371400ee5d7710127", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8635a919278f7e46e3c884a371400ee5d7710127", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8635a919278f7e46e3c884a371400ee5d7710127", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8635a919278f7e46e3c884a371400ee5d7710127/comments", "author": {"login": "geoffk01", "id": 31905243, "node_id": "MDQ6VXNlcjMxOTA1MjQz", "avatar_url": "https://avatars.githubusercontent.com/u/31905243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geoffk01", "html_url": "https://github.com/geoffk01", "followers_url": "https://api.github.com/users/geoffk01/followers", "following_url": "https://api.github.com/users/geoffk01/following{/other_user}", "gists_url": "https://api.github.com/users/geoffk01/gists{/gist_id}", "starred_url": "https://api.github.com/users/geoffk01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geoffk01/subscriptions", "organizations_url": "https://api.github.com/users/geoffk01/orgs", "repos_url": "https://api.github.com/users/geoffk01/repos", "events_url": "https://api.github.com/users/geoffk01/events{/privacy}", "received_events_url": "https://api.github.com/users/geoffk01/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a3b609dfb90569cc4c7dc0003ef6e32fc03e3d2d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3b609dfb90569cc4c7dc0003ef6e32fc03e3d2d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a3b609dfb90569cc4c7dc0003ef6e32fc03e3d2d"}], "stats": {"total": 78, "additions": 49, "deletions": 29}, "files": [{"sha": "37f9d497f72552dba164f00a6c0eb5c1e85bfeb0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8635a919278f7e46e3c884a371400ee5d7710127/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8635a919278f7e46e3c884a371400ee5d7710127/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8635a919278f7e46e3c884a371400ee5d7710127", "patch": "@@ -1,3 +1,16 @@\n+2005-04-22  Geoffrey Keating  <geoffk@apple.com>\n+\n+\t* config/rs6000/rs6000.md (sync_add<mode>_internal,\n+\tsync_addshort_internal, sync_sub<mode>_internal, sync_andsi_internal,\n+\tsync_anddi_internal, sync_boolsi_internal, sync_booldi_internal,\n+\tsync_boolc<mode>_internal, sync_boolc<mode>_internal2,\n+\tsync_boolcc<mode>_internal, sync_lock_test_and_set<mode>): Use\n+\t\"bne- $-xxx\" rather than local labels.\n+\t(sync_lock_release<mode>): Add second operand.\n+\t(lwsync): Use .long rather than a more meaningful opcode.\n+\t* doc/md.texi (Standard Names): Add description of second\n+\tparameter to sync_lock_test_and_set.\n+\n 2005-04-23  Kazu Hirata  <kazu@cs.umass.edu>\n \n \tPR tree-optimization/21088"}, {"sha": "3c3e4c7745c3f386b7d4c1649bb9c3aa03305eb8", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 29, "deletions": 27, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8635a919278f7e46e3c884a371400ee5d7710127/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8635a919278f7e46e3c884a371400ee5d7710127/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=8635a919278f7e46e3c884a371400ee5d7710127", "patch": "@@ -14776,7 +14776,7 @@\n \t(unspec:BLK [(mem:BLK (match_scratch 6 \"X\"))] UNSPEC_SYNC))\n    (clobber (match_scratch:CC 4 \"=&x\"))]\n   \"TARGET_POWERPC\"\n-  \"sync\\n0:\\t<larx> %0,%y1\\n\\t<cmp>%I2 %0,%2\\n\\tbne- 1f\\n\\t<stcx> %3,%y1\\n\\tbne- 0b\\n\\t1:\\tisync\"\n+  \"sync\\n\\t<larx> %0,%y1\\n\\t<cmp>%I2 %0,%2\\n\\tbne- $+12\\n\\t<stcx> %3,%y1\\n\\tbne- $-16\\n\\tisync\"\n   [(set_attr \"length\" \"28\")])\n \n (define_expand \"sync_add<mode>\"\n@@ -15012,8 +15012,8 @@\n    (clobber (match_scratch:CC 4 \"=&x,&x\"))]\n   \"TARGET_POWERPC\"\n   \"@\n-   0:\\t<larx> %3,%y0\\n\\tadd%I1 %2,%3,%1\\n\\t<stcx> %2,%y0\\n\\tbne- 0b\n-   0:\\t<larx> %3,%y0\\n\\taddis %2,%3,%v1\\n\\t<stcx> %2,%y0\\n\\tbne- 0b\"\n+   <larx> %3,%y0\\n\\tadd%I1 %2,%3,%1\\n\\t<stcx> %2,%y0\\n\\tbne- $-12\n+   <larx> %3,%y0\\n\\taddis %2,%3,%v1\\n\\t<stcx> %2,%y0\\n\\tbne- $-12\"\n   [(set_attr \"length\" \"16,16\")])\n \n (define_insn \"*sync_addshort_internal\"\n@@ -15031,7 +15031,7 @@\n    (clobber (match_scratch:CC 5 \"=&x\"))\n    (clobber (match_scratch:SI 6 \"=&r\"))]\n   \"TARGET_POWERPC\"\n-  \"0:\\tlwarx %3,%y0\\n\\tadd%I1 %2,%3,%1\\n\\tandc %6,%3,%4\\n\\tand %2,%2,%4\\n\\tor %2,%2,%6\\n\\tstwcx. %2,%y0\\n\\tbne- 0b\"\n+  \"lwarx %3,%y0\\n\\tadd%I1 %2,%3,%1\\n\\tandc %6,%3,%4\\n\\tand %2,%2,%4\\n\\tor %2,%2,%6\\n\\tstwcx. %2,%y0\\n\\tbne- $-24\"\n   [(set_attr \"length\" \"28\")])\n \n (define_insn \"*sync_sub<mode>_internal\"\n@@ -15044,7 +15044,7 @@\n \t\t   UNSPEC_SYNC_OP))\n    (clobber (match_scratch:CC 4 \"=&x\"))]\n   \"TARGET_POWERPC\"\n-  \"0:\\t<larx> %3,%y0\\n\\tsubf %2,%1,%3\\n\\t<stcx> %2,%y0\\n\\tbne- 0b\"\n+  \"<larx> %3,%y0\\n\\tsubf %2,%1,%3\\n\\t<stcx> %2,%y0\\n\\tbne- $-12\"\n   [(set_attr \"length\" \"16\")])\n \n (define_insn \"*sync_andsi_internal\"\n@@ -15058,10 +15058,10 @@\n    (clobber (match_scratch:CC 4 \"=&x,&x,&x,&x\"))]\n   \"TARGET_POWERPC\"\n   \"@\n-   0:\\tlwarx %3,%y0\\n\\tand %2,%3,%1\\n\\tstwcx. %2,%y0\\n\\tbne- 0b\n-   0:\\tlwarx %3,%y0\\n\\trlwinm %2,%3,0,%m1,%M1\\n\\tstwcx. %2,%y0\\n\\tbne- 0b\n-   0:\\tlwarx %3,%y0\\n\\tandi. %2,%3,%b1\\n\\tstwcx. %2,%y0\\n\\tbne- 0b\n-   0:\\tlwarx %3,%y0\\n\\tandis. %2,%3,%u1\\n\\tstwcx. %2,%y0\\n\\tbne- 0b\"\n+   lwarx %3,%y0\\n\\tand %2,%3,%1\\n\\tstwcx. %2,%y0\\n\\tbne- $-12\n+   lwarx %3,%y0\\n\\trlwinm %2,%3,0,%m1,%M1\\n\\tstwcx. %2,%y0\\n\\tbne- $-12\n+   lwarx %3,%y0\\n\\tandi. %2,%3,%b1\\n\\tstwcx. %2,%y0\\n\\tbne- $-12\n+   lwarx %3,%y0\\n\\tandis. %2,%3,%u1\\n\\tstwcx. %2,%y0\\n\\tbne- $-12\"\n   [(set_attr \"length\" \"16,16,16,16\")])\n \n (define_insn \"*sync_anddi_internal\"\n@@ -15075,11 +15075,11 @@\n    (clobber (match_scratch:CC 4 \"=&x,&x,&x,&x,&x\"))]\n   \"TARGET_POWERPC64\"\n   \"@\n-   0:\\tldarx %3,%y0\\n\\tand %2,%3,%1\\n\\tstdcx. %2,%y0\\n\\tbne- 0b\n-   0:\\tldarx %3,%y0\\n\\trldic%B1 %2,%3,0,%S1\\n\\tstdcx. %2,%y0\\n\\tbne- 0b\n-   0:\\tldarx %3,%y0\\n\\trlwinm %2,%3,0,%m1,%M1\\n\\tstdcx. %2,%y0\\n\\tbne- 0b\n-   0:\\tldarx %3,%y0\\n\\tandi. %2,%3,%b1\\n\\tstdcx. %2,%y0\\n\\tbne- 0b\n-   0:\\tldarx %3,%y0\\n\\tandis. %2,%3,%b1\\n\\tstdcx. %2,%y0\\n\\tbne- 0b\"\n+   ldarx %3,%y0\\n\\tand %2,%3,%1\\n\\tstdcx. %2,%y0\\n\\tbne- $-12\n+   ldarx %3,%y0\\n\\trldic%B1 %2,%3,0,%S1\\n\\tstdcx. %2,%y0\\n\\tbne- $-12\n+   ldarx %3,%y0\\n\\trlwinm %2,%3,0,%m1,%M1\\n\\tstdcx. %2,%y0\\n\\tbne- $-12\n+   ldarx %3,%y0\\n\\tandi. %2,%3,%b1\\n\\tstdcx. %2,%y0\\n\\tbne- $-12\n+   ldarx %3,%y0\\n\\tandis. %2,%3,%b1\\n\\tstdcx. %2,%y0\\n\\tbne- $-12\"\n   [(set_attr \"length\" \"16,16,16,16,16\")])\n \n (define_insn \"*sync_boolsi_internal\"\n@@ -15092,9 +15092,9 @@\n    (clobber (match_scratch:CC 5 \"=&x,&x,&x\"))]\n   \"TARGET_POWERPC\"\n   \"@\n-   0:\\tlwarx %3,%y0\\n\\t%q4 %2,%3,%1\\n\\tstwcx. %2,%y0\\n\\tbne- 0b\n-   0:\\tlwarx %3,%y0\\n\\t%q4i %2,%3,%b1\\n\\tstwcx. %2,%y0\\n\\tbne- 0b\n-   0:\\tlwarx %3,%y0\\n\\t%q4is %2,%3,%u1\\n\\tstwcx. %2,%y0\\n\\tbne- 0b\"\n+   lwarx %3,%y0\\n\\t%q4 %2,%3,%1\\n\\tstwcx. %2,%y0\\n\\tbne- $-12\n+   lwarx %3,%y0\\n\\t%q4i %2,%3,%b1\\n\\tstwcx. %2,%y0\\n\\tbne- $-12\n+   lwarx %3,%y0\\n\\t%q4is %2,%3,%u1\\n\\tstwcx. %2,%y0\\n\\tbne- $-12\"\n   [(set_attr \"length\" \"16,16,16\")])\n \n (define_insn \"*sync_booldi_internal\"\n@@ -15107,9 +15107,9 @@\n    (clobber (match_scratch:CC 5 \"=&x,&x,&x\"))]\n   \"TARGET_POWERPC64\"\n   \"@\n-   0:\\tldarx %3,%y0\\n\\t%q4 %2,%3,%1\\n\\tstdcx. %2,%y0\\n\\tbne- 0b\n-   0:\\tldarx %3,%y0\\n\\t%q4i %2,%3,%b1\\n\\tstdcx. %2,%y0\\n\\tbne- 0b\n-   0:\\tldarx %3,%y0\\n\\t%q4is %2,%3,%u1\\n\\tstdcx. %2,%y0\\n\\tbne- 0b\"\n+   ldarx %3,%y0\\n\\t%q4 %2,%3,%1\\n\\tstdcx. %2,%y0\\n\\tbne- $-12\n+   ldarx %3,%y0\\n\\t%q4i %2,%3,%b1\\n\\tstdcx. %2,%y0\\n\\tbne- $-12\n+   ldarx %3,%y0\\n\\t%q4is %2,%3,%u1\\n\\tstdcx. %2,%y0\\n\\tbne- $-12\"\n   [(set_attr \"length\" \"16,16,16\")])\n \n (define_insn \"*sync_boolc<mode>_internal\"\n@@ -15121,7 +15121,7 @@\n    (set (match_dup 0) (unspec:GPR [(match_dup 4)] UNSPEC_SYNC_OP))\n    (clobber (match_scratch:CC 5 \"=&x\"))]\n   \"TARGET_POWERPC\"\n-  \"0:\\t<larx> %3,%y0\\n\\t%q4 %2,%1,%3\\n\\t<stcx> %2,%y0\\n\\tbne- 0b\"\n+  \"<larx> %3,%y0\\n\\t%q4 %2,%1,%3\\n\\t<stcx> %2,%y0\\n\\tbne- $-12\"\n   [(set_attr \"length\" \"16\")])\n \n (define_insn \"*sync_boolc<mode>_internal2\"\n@@ -15133,7 +15133,7 @@\n    (set (match_dup 0) (unspec:GPR [(match_dup 4)] UNSPEC_SYNC_OP))\n    (clobber (match_scratch:CC 5 \"=&x\"))]\n   \"TARGET_POWERPC\"\n-  \"0:\\t<larx> %3,%y0\\n\\t%q4 %2,%3,%1\\n\\t<stcx> %2,%y0\\n\\tbne- 0b\"\n+  \"<larx> %3,%y0\\n\\t%q4 %2,%3,%1\\n\\t<stcx> %2,%y0\\n\\tbne- $-12\"\n   [(set_attr \"length\" \"16\")])\n \n (define_insn \"*sync_boolcc<mode>_internal\"\n@@ -15145,7 +15145,7 @@\n    (set (match_dup 0) (unspec:GPR [(match_dup 4)] UNSPEC_SYNC_OP))\n    (clobber (match_scratch:CC 5 \"=&x\"))]\n   \"TARGET_POWERPC\"\n-  \"0:\\t<larx> %3,%y0\\n\\t%q4 %2,%1,%3\\n\\t<stcx> %2,%y0\\n\\tbne- 0b\"\n+  \"<larx> %3,%y0\\n\\t%q4 %2,%1,%3\\n\\t<stcx> %2,%y0\\n\\tbne- $-12\"\n   [(set_attr \"length\" \"16\")])\n \n (define_insn \"isync\"\n@@ -15163,24 +15163,26 @@\n    (set (mem:BLK (match_scratch 4 \"X\"))\n         (unspec:BLK [(mem:BLK (match_scratch 5 \"X\"))] UNSPEC_ISYNC))]\n   \"TARGET_POWERPC\"\n-  \"0:\\t<larx> %0,%y1\\n\\t<stcx> %2,%y1\\n\\tbne- 0b\\n\\tisync\"\n+  \"<larx> %0,%y1\\n\\t<stcx> %2,%y1\\n\\tbne- $-8\\n\\tisync\"\n   [(set_attr \"length\" \"16\")])\n \n (define_expand \"sync_lock_release<mode>\"\n-  [(use (match_operand:INT 0 \"memory_operand\"))]\n+  [(set (match_operand:INT 0 \"memory_operand\")\n+\t(match_operand:INT 1 \"any_operand\"))]\n   \"\"\n   \"\n {\n   emit_insn (gen_lwsync ());\n-  emit_move_insn (operands[0], CONST0_RTX (<MODE>mode));\n+  emit_move_insn (operands[0], operands[1]);\n   DONE;\n }\")\n \n+; Some AIX assemblers don't accept lwsync, so we use a .long.\n (define_insn \"lwsync\"\n   [(set (mem:BLK (match_scratch 0 \"X\"))\n         (unspec:BLK [(mem:BLK (match_scratch 1 \"X\"))] UNSPEC_LWSYNC))]\n   \"\"\n-  \"lwsync\")\n+  \".long 0x7c2004ac\")\n \n \f\n "}, {"sha": "61b8856f71d1ad1ac96d6a1f6cfaa7f366d77f53", "filename": "gcc/doc/md.texi", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8635a919278f7e46e3c884a371400ee5d7710127/gcc%2Fdoc%2Fmd.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8635a919278f7e46e3c884a371400ee5d7710127/gcc%2Fdoc%2Fmd.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fmd.texi?ref=8635a919278f7e46e3c884a371400ee5d7710127", "patch": "@@ -4069,14 +4069,19 @@ a compare-and-swap operation, if defined.\n \n This pattern, if defined, releases a lock set by\n @code{sync_lock_test_and_set@var{mode}}.  Operand 0 is the memory\n-that contains the lock.\n+that contains the lock; operand 1 is the value to store in the lock.\n+\n+If the target doesn't implement full semantics for\n+@code{sync_lock_test_and_set@var{mode}}, any value operand which is not\n+the constant 0 should be rejected with @code{FAIL}, and the true contents\n+of the memory operand are implementation defined.\n \n This pattern must issue any memory barrier instructions such that the\n pattern as a whole acts as a release barrier, that is the lock is\n released only after all previous memory operations have completed.\n \n If this pattern is not defined, then a @code{memory_barrier} pattern\n-will be emitted, followed by a store of zero to the memory operand.\n+will be emitted, followed by a store of the value to the memory operand.\n \n @end table\n "}]}