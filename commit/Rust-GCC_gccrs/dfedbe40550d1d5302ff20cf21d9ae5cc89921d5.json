{"sha": "dfedbe40550d1d5302ff20cf21d9ae5cc89921d5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGZlZGJlNDA1NTBkMWQ1MzAyZmYyMGNmMjFkOWFlNWNjODk5MjFkNQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2011-06-29T14:29:22Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2011-06-29T14:29:22Z"}, "message": "invoke.texi: Document -scev dump modifier.\n\n2011-06-29  Richard Guenther  <rguenther@suse.de>\n\n\t* doc/invoke.texi: Document -scev dump modifier.\n\t* tree-pass.h (TDF_SCEV): New dump flag.\n\t* tree-dump.c (dump_option_value_in): Add scev.\n\t* tree-chrec.c: Replace all TDF_DETAILS checks with TDF_SCEV.\n\t* tree-scalar-evolution.c: Likewise.\n\n\t* gcc.dg/tree-ssa/loop-17.c: Adjust.\n\nFrom-SVN: r175642", "tree": {"sha": "dcf2f7c1678db2625d303229c9cda5d24e7206b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dcf2f7c1678db2625d303229c9cda5d24e7206b1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dfedbe40550d1d5302ff20cf21d9ae5cc89921d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dfedbe40550d1d5302ff20cf21d9ae5cc89921d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dfedbe40550d1d5302ff20cf21d9ae5cc89921d5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dfedbe40550d1d5302ff20cf21d9ae5cc89921d5/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3a86cfeb42e2a6bbbe6ecdbddacbf182a7db899a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a86cfeb42e2a6bbbe6ecdbddacbf182a7db899a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a86cfeb42e2a6bbbe6ecdbddacbf182a7db899a"}], "stats": {"total": 58, "additions": 37, "deletions": 21}, "files": [{"sha": "0a639958269396961211e7a5998524e4060d445b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfedbe40550d1d5302ff20cf21d9ae5cc89921d5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfedbe40550d1d5302ff20cf21d9ae5cc89921d5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dfedbe40550d1d5302ff20cf21d9ae5cc89921d5", "patch": "@@ -1,3 +1,11 @@\n+2011-06-29  Richard Guenther  <rguenther@suse.de>\n+\n+\t* doc/invoke.texi: Document -scev dump modifier.\n+\t* tree-pass.h (TDF_SCEV): New dump flag.\n+\t* tree-dump.c (dump_option_value_in): Add scev.\n+\t* tree-chrec.c: Replace all TDF_DETAILS checks with TDF_SCEV.\n+\t* tree-scalar-evolution.c: Likewise.\n+\n 2011-06-29  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* config/arm/unwind-arm.c (enum __cxa_type_match_result): New."}, {"sha": "1fc40389f0a16abf1319220cf2cf283b87bca04c", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfedbe40550d1d5302ff20cf21d9ae5cc89921d5/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfedbe40550d1d5302ff20cf21d9ae5cc89921d5/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=dfedbe40550d1d5302ff20cf21d9ae5cc89921d5", "patch": "@@ -5559,6 +5559,8 @@ Enable showing the unique ID (@code{DECL_UID}) for each variable.\n Enable showing the tree dump for each statement.\n @item eh\n Enable showing the EH region number holding each statement.\n+@item scev\n+Enable showing scalar evolution analysis details.\n @item all\n Turn on all options, except @option{raw}, @option{slim}, @option{verbose}\n and @option{lineno}."}, {"sha": "6fefc38798864832a14fe53530743e073fdae858", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfedbe40550d1d5302ff20cf21d9ae5cc89921d5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfedbe40550d1d5302ff20cf21d9ae5cc89921d5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=dfedbe40550d1d5302ff20cf21d9ae5cc89921d5", "patch": "@@ -1,3 +1,7 @@\n+2011-06-29  Richard Guenther  <rguenther@suse.de>\n+\n+\t* gcc.dg/tree-ssa/loop-17.c: Adjust.\n+\n 2011-06-29  Jason Merrill  <jason@redhat.com>\n \n \t* g++.dg/cpp0x/initlist-value2.C: New."}, {"sha": "0e856d8d54f4aeef8bc6287b0262cea480957f0f", "filename": "gcc/testsuite/gcc.dg/tree-ssa/loop-17.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfedbe40550d1d5302ff20cf21d9ae5cc89921d5/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-17.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfedbe40550d1d5302ff20cf21d9ae5cc89921d5/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-17.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-17.c?ref=dfedbe40550d1d5302ff20cf21d9ae5cc89921d5", "patch": "@@ -15,5 +15,5 @@ int foo (int *p)\n   return i;\n }\n \n-/* { dg-final { scan-tree-dump \"set_nb_iterations_in_loop = 1\" \"sccp\" } } */\n+/* { dg-final { scan-tree-dump \"# of iterations 1, bounded by 1\" \"sccp\" } } */\n /* { dg-final { cleanup-tree-dump \"sccp\" } } */"}, {"sha": "f9bebee7fe6dc55f9a6b0f7c7fdd20bd111ebb0f", "filename": "gcc/tree-chrec.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfedbe40550d1d5302ff20cf21d9ae5cc89921d5/gcc%2Ftree-chrec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfedbe40550d1d5302ff20cf21d9ae5cc89921d5/gcc%2Ftree-chrec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-chrec.c?ref=dfedbe40550d1d5302ff20cf21d9ae5cc89921d5", "patch": "@@ -587,7 +587,7 @@ chrec_apply (unsigned var,\n       || chrec_contains_symbols_defined_in_loop (chrec, var))\n     return chrec_dont_know;\n \n-  if (dump_file && (dump_flags & TDF_DETAILS))\n+  if (dump_file && (dump_flags & TDF_SCEV))\n     fprintf (dump_file, \"(chrec_apply \\n\");\n \n   if (TREE_CODE (x) == INTEGER_CST && SCALAR_FLOAT_TYPE_P (type))\n@@ -628,7 +628,7 @@ chrec_apply (unsigned var,\n       break;\n     }\n \n-  if (dump_file && (dump_flags & TDF_DETAILS))\n+  if (dump_file && (dump_flags & TDF_SCEV))\n     {\n       fprintf (dump_file, \"  (varying_loop = %d\\n\", var);\n       fprintf (dump_file, \")\\n  (chrec = \");"}, {"sha": "3e89cdf11f363397e61e7457bd69d9b027723836", "filename": "gcc/tree-dump.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfedbe40550d1d5302ff20cf21d9ae5cc89921d5/gcc%2Ftree-dump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfedbe40550d1d5302ff20cf21d9ae5cc89921d5/gcc%2Ftree-dump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-dump.c?ref=dfedbe40550d1d5302ff20cf21d9ae5cc89921d5", "patch": "@@ -823,9 +823,10 @@ static const struct dump_option_value_info dump_options[] =\n   {\"alias\", TDF_ALIAS},\n   {\"nouid\", TDF_NOUID},\n   {\"enumerate_locals\", TDF_ENUMERATE_LOCALS},\n+  {\"scev\", TDF_SCEV},\n   {\"all\", ~(TDF_RAW | TDF_SLIM | TDF_LINENO | TDF_TREE | TDF_RTL | TDF_IPA\n \t    | TDF_STMTADDR | TDF_GRAPH | TDF_DIAGNOSTIC | TDF_VERBOSE\n-\t    | TDF_RHS_ONLY | TDF_NOUID | TDF_ENUMERATE_LOCALS)},\n+\t    | TDF_RHS_ONLY | TDF_NOUID | TDF_ENUMERATE_LOCALS | TDF_SCEV)},\n   {NULL, 0}\n };\n "}, {"sha": "2d277edb12b4c0228756df4ef27592ca6d3843ae", "filename": "gcc/tree-pass.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfedbe40550d1d5302ff20cf21d9ae5cc89921d5/gcc%2Ftree-pass.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfedbe40550d1d5302ff20cf21d9ae5cc89921d5/gcc%2Ftree-pass.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-pass.h?ref=dfedbe40550d1d5302ff20cf21d9ae5cc89921d5", "patch": "@@ -83,6 +83,7 @@ enum tree_dump_index\n #define TDF_ALIAS\t(1 << 21)\t/* display alias information  */\n #define TDF_ENUMERATE_LOCALS (1 << 22)\t/* Enumerate locals by uid.  */\n #define TDF_CSELIB\t(1 << 23)\t/* Dump cselib details.  */\n+#define TDF_SCEV\t(1 << 24)\t/* Dump SCEV details.  */\n \n \n /* In tree-dump.c */"}, {"sha": "bfa8c93ae3846efbe43fc502134bd08023781708", "filename": "gcc/tree-scalar-evolution.c", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfedbe40550d1d5302ff20cf21d9ae5cc89921d5/gcc%2Ftree-scalar-evolution.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfedbe40550d1d5302ff20cf21d9ae5cc89921d5/gcc%2Ftree-scalar-evolution.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-scalar-evolution.c?ref=dfedbe40550d1d5302ff20cf21d9ae5cc89921d5", "patch": "@@ -572,7 +572,7 @@ set_scalar_evolution (basic_block instantiated_below, tree scalar, tree chrec)\n \n   if (dump_file)\n     {\n-      if (dump_flags & TDF_DETAILS)\n+      if (dump_flags & TDF_SCEV)\n \t{\n \t  fprintf (dump_file, \"(set_scalar_evolution \\n\");\n \t  fprintf (dump_file, \"  instantiated_below = %d \\n\",\n@@ -600,7 +600,7 @@ get_scalar_evolution (basic_block instantiated_below, tree scalar)\n \n   if (dump_file)\n     {\n-      if (dump_flags & TDF_DETAILS)\n+      if (dump_flags & TDF_SCEV)\n \t{\n \t  fprintf (dump_file, \"(get_scalar_evolution \\n\");\n \t  fprintf (dump_file, \"  (scalar = \");\n@@ -628,7 +628,7 @@ get_scalar_evolution (basic_block instantiated_below, tree scalar)\n       break;\n     }\n \n-  if (dump_file && (dump_flags & TDF_DETAILS))\n+  if (dump_file && (dump_flags & TDF_SCEV))\n     {\n       fprintf (dump_file, \"  (scalar_evolution = \");\n       print_generic_expr (dump_file, res, 0);\n@@ -861,7 +861,7 @@ add_to_evolution (unsigned loop_nb, tree chrec_before, enum tree_code code,\n     /* This should not happen.  */\n     return chrec_dont_know;\n \n-  if (dump_file && (dump_flags & TDF_DETAILS))\n+  if (dump_file && (dump_flags & TDF_SCEV))\n     {\n       fprintf (dump_file, \"(add_to_evolution \\n\");\n       fprintf (dump_file, \"  (loop_nb = %d)\\n\", loop_nb);\n@@ -879,7 +879,7 @@ add_to_evolution (unsigned loop_nb, tree chrec_before, enum tree_code code,\n \n   res = add_to_evolution_1 (loop_nb, chrec_before, to_add, at_stmt);\n \n-  if (dump_file && (dump_flags & TDF_DETAILS))\n+  if (dump_file && (dump_flags & TDF_SCEV))\n     {\n       fprintf (dump_file, \"  (res = \");\n       print_generic_expr (dump_file, res, 0);\n@@ -905,7 +905,7 @@ get_loop_exit_condition (const struct loop *loop)\n   gimple res = NULL;\n   edge exit_edge = single_exit (loop);\n \n-  if (dump_file && (dump_flags & TDF_DETAILS))\n+  if (dump_file && (dump_flags & TDF_SCEV))\n     fprintf (dump_file, \"(get_loop_exit_condition \\n  \");\n \n   if (exit_edge)\n@@ -917,7 +917,7 @@ get_loop_exit_condition (const struct loop *loop)\n \tres = stmt;\n     }\n \n-  if (dump_file && (dump_flags & TDF_DETAILS))\n+  if (dump_file && (dump_flags & TDF_SCEV))\n     {\n       print_gimple_stmt (dump_file, res, 0, 0);\n       fprintf (dump_file, \")\\n\");\n@@ -1461,7 +1461,7 @@ analyze_evolution_in_loop (gimple loop_phi_node,\n   struct loop *loop = loop_containing_stmt (loop_phi_node);\n   basic_block bb;\n \n-  if (dump_file && (dump_flags & TDF_DETAILS))\n+  if (dump_file && (dump_flags & TDF_SCEV))\n     {\n       fprintf (dump_file, \"(analyze_evolution_in_loop \\n\");\n       fprintf (dump_file, \"  (loop_phi_node = \");\n@@ -1517,7 +1517,7 @@ analyze_evolution_in_loop (gimple loop_phi_node,\n       evolution_function = chrec_merge (evolution_function, ev_fn);\n     }\n \n-  if (dump_file && (dump_flags & TDF_DETAILS))\n+  if (dump_file && (dump_flags & TDF_SCEV))\n     {\n       fprintf (dump_file, \"  (evolution_function = \");\n       print_generic_expr (dump_file, evolution_function, 0);\n@@ -1541,7 +1541,7 @@ analyze_initial_condition (gimple loop_phi_node)\n   tree init_cond = chrec_not_analyzed_yet;\n   struct loop *loop = loop_containing_stmt (loop_phi_node);\n \n-  if (dump_file && (dump_flags & TDF_DETAILS))\n+  if (dump_file && (dump_flags & TDF_SCEV))\n     {\n       fprintf (dump_file, \"(analyze_initial_condition \\n\");\n       fprintf (dump_file, \"  (loop_phi_node = \\n\");\n@@ -1593,7 +1593,7 @@ analyze_initial_condition (gimple loop_phi_node)\n \tinit_cond = res;\n     }\n \n-  if (dump_file && (dump_flags & TDF_DETAILS))\n+  if (dump_file && (dump_flags & TDF_SCEV))\n     {\n       fprintf (dump_file, \"  (init_cond = \");\n       print_generic_expr (dump_file, init_cond, 0);\n@@ -1942,7 +1942,7 @@ analyze_scalar_evolution (struct loop *loop, tree var)\n {\n   tree res;\n \n-  if (dump_file && (dump_flags & TDF_DETAILS))\n+  if (dump_file && (dump_flags & TDF_SCEV))\n     {\n       fprintf (dump_file, \"(analyze_scalar_evolution \\n\");\n       fprintf (dump_file, \"  (loop_nb = %d)\\n\", loop->num);\n@@ -1954,7 +1954,7 @@ analyze_scalar_evolution (struct loop *loop, tree var)\n   res = get_scalar_evolution (block_before_loop (loop), var);\n   res = analyze_scalar_evolution_1 (loop, var, res);\n \n-  if (dump_file && (dump_flags & TDF_DETAILS))\n+  if (dump_file && (dump_flags & TDF_SCEV))\n     fprintf (dump_file, \")\\n\");\n \n   return res;\n@@ -2700,7 +2700,7 @@ instantiate_scev (basic_block instantiate_below, struct loop *evolution_loop,\n   tree res;\n   htab_t cache = htab_create (10, hash_scev_info, eq_scev_info, del_scev_info);\n \n-  if (dump_file && (dump_flags & TDF_DETAILS))\n+  if (dump_file && (dump_flags & TDF_SCEV))\n     {\n       fprintf (dump_file, \"(instantiate_scev \\n\");\n       fprintf (dump_file, \"  (instantiate_below = %d)\\n\", instantiate_below->index);\n@@ -2713,7 +2713,7 @@ instantiate_scev (basic_block instantiate_below, struct loop *evolution_loop,\n   res = instantiate_scev_r (instantiate_below, evolution_loop, chrec, false,\n \t\t\t    cache, 0);\n \n-  if (dump_file && (dump_flags & TDF_DETAILS))\n+  if (dump_file && (dump_flags & TDF_SCEV))\n     {\n       fprintf (dump_file, \"  (res = \");\n       print_generic_expr (dump_file, res, 0);\n@@ -2779,7 +2779,7 @@ number_of_latch_executions (struct loop *loop)\n \n   may_be_zero = NULL_TREE;\n \n-  if (dump_file && (dump_flags & TDF_DETAILS))\n+  if (dump_file && (dump_flags & TDF_SCEV))\n     fprintf (dump_file, \"(number_of_iterations_in_loop = \\n\");\n \n   res = chrec_dont_know;\n@@ -2804,7 +2804,7 @@ number_of_latch_executions (struct loop *loop)\n   else\n     res = chrec_dont_know;\n \n-  if (dump_file && (dump_flags & TDF_DETAILS))\n+  if (dump_file && (dump_flags & TDF_SCEV))\n     {\n       fprintf (dump_file, \"  (set_nb_iterations_in_loop = \");\n       print_generic_expr (dump_file, res, 0);"}]}