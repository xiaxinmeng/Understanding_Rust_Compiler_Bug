{"sha": "0e4bf6e7fc4219dbd05703db7759ac4c318978ad", "node_id": "C_kwDOANBUbNoAKDBlNGJmNmU3ZmM0MjE5ZGJkMDU3MDNkYjc3NTlhYzRjMzE4OTc4YWQ", "commit": {"author": {"name": "Owen Avery", "email": "powerboat9.gamer@gmail.com", "date": "2023-02-02T16:38:44Z"}, "committer": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2023-04-06T08:47:19Z"}, "message": "gccrs: Optimize HIR::ReferencePattern\n\ngcc/rust/ChangeLog:\n\n\t* hir/tree/rust-hir-pattern.h\n\t(class ReferencePattern): Remove has_two_amps field.\n\t* hir/tree/rust-hir-full-test.cc\n\t(ReferencePattern::as_string): Remove usage of ReferencePattern::has_two_amps.\n\nSigned-off-by: Owen Avery <powerboat9.gamer@gmail.com>", "tree": {"sha": "8f00715370d22352a0dfa4a75adb7f5dc4e26e0e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8f00715370d22352a0dfa4a75adb7f5dc4e26e0e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0e4bf6e7fc4219dbd05703db7759ac4c318978ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e4bf6e7fc4219dbd05703db7759ac4c318978ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e4bf6e7fc4219dbd05703db7759ac4c318978ad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e4bf6e7fc4219dbd05703db7759ac4c318978ad/comments", "author": {"login": "powerboat9", "id": 7397652, "node_id": "MDQ6VXNlcjczOTc2NTI=", "avatar_url": "https://avatars.githubusercontent.com/u/7397652?v=4", "gravatar_id": "", "url": "https://api.github.com/users/powerboat9", "html_url": "https://github.com/powerboat9", "followers_url": "https://api.github.com/users/powerboat9/followers", "following_url": "https://api.github.com/users/powerboat9/following{/other_user}", "gists_url": "https://api.github.com/users/powerboat9/gists{/gist_id}", "starred_url": "https://api.github.com/users/powerboat9/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/powerboat9/subscriptions", "organizations_url": "https://api.github.com/users/powerboat9/orgs", "repos_url": "https://api.github.com/users/powerboat9/repos", "events_url": "https://api.github.com/users/powerboat9/events{/privacy}", "received_events_url": "https://api.github.com/users/powerboat9/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "95efd84db13b9ac2b27654e86d1cacefe0637415", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95efd84db13b9ac2b27654e86d1cacefe0637415", "html_url": "https://github.com/Rust-GCC/gccrs/commit/95efd84db13b9ac2b27654e86d1cacefe0637415"}], "stats": {"total": 18, "additions": 5, "deletions": 13}, "files": [{"sha": "0ddb8418e950df657bacfc3e30ba57b9b8614c4d", "filename": "gcc/rust/hir/tree/rust-hir-full-test.cc", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e4bf6e7fc4219dbd05703db7759ac4c318978ad/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-full-test.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e4bf6e7fc4219dbd05703db7759ac4c318978ad/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-full-test.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-full-test.cc?ref=0e4bf6e7fc4219dbd05703db7759ac4c318978ad", "patch": "@@ -2583,11 +2583,6 @@ ReferencePattern::as_string () const\n {\n   std::string str (\"&\");\n \n-  if (has_two_amps)\n-    {\n-      str += \"&\";\n-    }\n-\n   if (is_mut ())\n     {\n       str += \"mut \";"}, {"sha": "83b041d2770280a5402d845d5a9fa49d2297d417", "filename": "gcc/rust/hir/tree/rust-hir-pattern.h", "status": "modified", "additions": 5, "deletions": 8, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e4bf6e7fc4219dbd05703db7759ac4c318978ad/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-pattern.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e4bf6e7fc4219dbd05703db7759ac4c318978ad/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-pattern.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-pattern.h?ref=0e4bf6e7fc4219dbd05703db7759ac4c318978ad", "patch": "@@ -424,7 +424,6 @@ class RangePattern : public Pattern\n // HIR node for pattern based on dereferencing the pointers given\n class ReferencePattern : public Pattern\n {\n-  bool has_two_amps;\n   Mutability mut;\n   std::unique_ptr<Pattern> pattern;\n   Location locus;\n@@ -435,24 +434,22 @@ class ReferencePattern : public Pattern\n \n   ReferencePattern (Analysis::NodeMapping mappings,\n \t\t    std::unique_ptr<Pattern> pattern, Mutability reference_mut,\n-\t\t    bool ref_has_two_amps, Location locus)\n-    : has_two_amps (ref_has_two_amps), mut (reference_mut),\n-      pattern (std::move (pattern)), locus (locus), mappings (mappings)\n+\t\t    Location locus)\n+    : mut (reference_mut), pattern (std::move (pattern)), locus (locus),\n+      mappings (mappings)\n   {}\n \n   // Copy constructor requires clone\n   ReferencePattern (ReferencePattern const &other)\n-    : has_two_amps (other.has_two_amps), mut (other.mut),\n-      pattern (other.pattern->clone_pattern ()), locus (other.locus),\n-      mappings (other.mappings)\n+    : mut (other.mut), pattern (other.pattern->clone_pattern ()),\n+      locus (other.locus), mappings (other.mappings)\n   {}\n \n   // Overload assignment operator to clone\n   ReferencePattern &operator= (ReferencePattern const &other)\n   {\n     pattern = other.pattern->clone_pattern ();\n     mut = other.mut;\n-    has_two_amps = other.has_two_amps;\n     locus = other.locus;\n     mappings = other.mappings;\n "}]}