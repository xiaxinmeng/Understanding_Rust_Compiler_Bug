{"sha": "37f808c4a683a7431b7aa6d49f4c2e385cc0d707", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzdmODA4YzRhNjgzYTc0MzFiN2FhNmQ0OWY0YzJlMzg1Y2MwZDcwNw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2019-05-03T07:07:28Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2019-05-03T07:07:28Z"}, "message": "re PR c++/89698 (Run-time error due to optimization of field access after cast at -Os/-O2 and higher)\n\n2019-05-03  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/89698\n\t* gimple-fold.c (canonicalize_constructor_val): Early out\n\tfor constants, handle unfolded INTEGER_CSTs as they appear in\n\tC++ virtual table ctors.\n\n\t* g++.dg/tree-ssa/pr89698.C: New testcase.\n\nFrom-SVN: r270833", "tree": {"sha": "17b318f02a0ab1defcde8d90f4cc17251ff68994", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/17b318f02a0ab1defcde8d90f4cc17251ff68994"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/37f808c4a683a7431b7aa6d49f4c2e385cc0d707", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37f808c4a683a7431b7aa6d49f4c2e385cc0d707", "html_url": "https://github.com/Rust-GCC/gccrs/commit/37f808c4a683a7431b7aa6d49f4c2e385cc0d707", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37f808c4a683a7431b7aa6d49f4c2e385cc0d707/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c0f9d1fd7e54434e4f06b20b9a61a9d35c578223", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0f9d1fd7e54434e4f06b20b9a61a9d35c578223", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0f9d1fd7e54434e4f06b20b9a61a9d35c578223"}], "stats": {"total": 55, "additions": 53, "deletions": 2}, "files": [{"sha": "5973192491a6fbfd03f18a73d987504172546127", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37f808c4a683a7431b7aa6d49f4c2e385cc0d707/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37f808c4a683a7431b7aa6d49f4c2e385cc0d707/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=37f808c4a683a7431b7aa6d49f4c2e385cc0d707", "patch": "@@ -1,3 +1,10 @@\n+2019-05-03  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/89698\n+\t* gimple-fold.c (canonicalize_constructor_val): Early out\n+\tfor constants, handle unfolded INTEGER_CSTs as they appear in\n+\tC++ virtual table ctors.\n+\n 2019-05-03  Richard Biener  <rguenther@suse.de>\n \n \t* passes.c (execute_function_todo): Remove dead code."}, {"sha": "1b10bae55caa35b44ffe83ca40d67ca64063ace6", "filename": "gcc/gimple-fold.c", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37f808c4a683a7431b7aa6d49f4c2e385cc0d707/gcc%2Fgimple-fold.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37f808c4a683a7431b7aa6d49f4c2e385cc0d707/gcc%2Fgimple-fold.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-fold.c?ref=37f808c4a683a7431b7aa6d49f4c2e385cc0d707", "patch": "@@ -207,6 +207,9 @@ create_tmp_reg_or_ssa_name (tree type, gimple *stmt)\n tree\n canonicalize_constructor_val (tree cval, tree from_decl)\n {\n+  if (CONSTANT_CLASS_P (cval))\n+    return cval;\n+\n   tree orig_cval = cval;\n   STRIP_NOPS (cval);\n   if (TREE_CODE (cval) == POINTER_PLUS_EXPR\n@@ -257,8 +260,15 @@ canonicalize_constructor_val (tree cval, tree from_decl)\n \tcval = fold_convert (TREE_TYPE (orig_cval), cval);\n       return cval;\n     }\n-  if (TREE_OVERFLOW_P (cval))\n-    return drop_tree_overflow (cval);\n+  /* In CONSTRUCTORs we may see unfolded constants like (int (*) ()) 0.  */\n+  if (TREE_CODE (cval) == INTEGER_CST)\n+    {\n+      if (TREE_OVERFLOW_P (cval))\n+\tcval = drop_tree_overflow (cval);\n+      if (!useless_type_conversion_p (TREE_TYPE (orig_cval), TREE_TYPE (cval)))\n+\tcval = fold_convert (TREE_TYPE (orig_cval), cval);\n+      return cval;\n+    }\n   return orig_cval;\n }\n "}, {"sha": "660110d04934c2765e52b2f69d0eabfb96df26f5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37f808c4a683a7431b7aa6d49f4c2e385cc0d707/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37f808c4a683a7431b7aa6d49f4c2e385cc0d707/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=37f808c4a683a7431b7aa6d49f4c2e385cc0d707", "patch": "@@ -1,3 +1,8 @@\n+2019-05-03  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/89698\n+\t* g++.dg/tree-ssa/pr89698.C: New testcase.\n+\n 2019-05-02  Iain Sandoe  <iain@sandoe.co.uk>\n \n \t* g++.dg/ext/instantiate2.C: Remove special-casing for Darwin."}, {"sha": "9d3b408afbdd3aba6479aaf1cad158f93ddfe9fb", "filename": "gcc/testsuite/g++.dg/tree-ssa/pr89698.C", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37f808c4a683a7431b7aa6d49f4c2e385cc0d707/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr89698.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37f808c4a683a7431b7aa6d49f4c2e385cc0d707/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr89698.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr89698.C?ref=37f808c4a683a7431b7aa6d49f4c2e385cc0d707", "patch": "@@ -0,0 +1,29 @@\n+// { dg-do compile }\n+// { dg-options \"-O -fdump-tree-fre1\" }\n+\n+class A {\n+    virtual void f(){};\n+public:\n+    int x;\n+    A(int in): x(in) {};\n+};\n+\n+class B: public A {\n+public:\n+    int y;\n+    B(int in):A(in-1), y(in) {};\n+};\n+\n+void bar(void *);\n+void test()\n+{\n+  B b(2);\n+  A* bp = &b;\n+  void* vp = dynamic_cast<void*>(bp);\n+  bar (vp);\n+}\n+\n+// We should be able to constant fold from the virtual table\n+// the offset added to bp for the dynamic cast and forward\n+// &b to the argument of bar\n+// { dg-final { scan-tree-dump \"bar \\\\\\(&b\" \"fre1\" } }"}]}