{"sha": "1e021dc33a06b5127db26a347547b97e623a0e19", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWUwMjFkYzMzYTA2YjUxMjdkYjI2YTM0NzU0N2I5N2U2MjNhMGUxOQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-06-02T11:01:31Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-06-02T11:01:31Z"}, "message": "sse.md (*vec_concatv2si_sse4_1): Add avx512dq v=Yv,rm alternative.\n\n\t* config/i386/sse.md (*vec_concatv2si_sse4_1): Add avx512dq v=Yv,rm\n\talternative.  Change x=x,x alternative to v=Yv,Yv and x=rm,C\n\talternative to v=rm,C.\n\n\t* gcc.target/i386/avx512dq-concatv2si-1.c: New test.\n\t* gcc.target/i386/avx512vl-concatv2si-1.c: New test.\n\nFrom-SVN: r237030", "tree": {"sha": "51fdb256330a3a2964800dc5dc5c40720d17a6b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/51fdb256330a3a2964800dc5dc5c40720d17a6b2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1e021dc33a06b5127db26a347547b97e623a0e19", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e021dc33a06b5127db26a347547b97e623a0e19", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e021dc33a06b5127db26a347547b97e623a0e19", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e021dc33a06b5127db26a347547b97e623a0e19/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b93b1475cdfb3ea6723fd1314c0d7e4482bcb3b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b93b1475cdfb3ea6723fd1314c0d7e4482bcb3b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b93b1475cdfb3ea6723fd1314c0d7e4482bcb3b6"}], "stats": {"total": 116, "additions": 105, "deletions": 11}, "files": [{"sha": "bff651298429babd426973d7d34c917d58c41f87", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e021dc33a06b5127db26a347547b97e623a0e19/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e021dc33a06b5127db26a347547b97e623a0e19/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1e021dc33a06b5127db26a347547b97e623a0e19", "patch": "@@ -1,5 +1,9 @@\n 2016-06-02  Jakub Jelinek  <jakub@redhat.com>\n \n+\t* config/i386/sse.md (*vec_concatv2si_sse4_1): Add avx512dq v=Yv,rm\n+\talternative.  Change x=x,x alternative to v=Yv,Yv and x=rm,C\n+\talternative to v=rm,C.\n+\n \t* config/i386/sse.md (*vec_concatv2di): Add x86_avx512dq v=Yv,rm\n \talternative.  Change x=xm,C alternative to v=vm,C, x=x,x alternative\n \tto v=Yv,Yv and x=x,m to v=v,m.  Use maybe_evex prefix attribute"}, {"sha": "2a11887adb019297bfb04e773b1fdaf4b5b849e9", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 12, "deletions": 11, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e021dc33a06b5127db26a347547b97e623a0e19/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e021dc33a06b5127db26a347547b97e623a0e19/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=1e021dc33a06b5127db26a347547b97e623a0e19", "patch": "@@ -13488,43 +13488,44 @@\n \n (define_insn \"*vec_concatv2si_sse4_1\"\n   [(set (match_operand:V2SI 0 \"register_operand\"\n-\t  \"=Yr,*x,x, Yr,*x,x, x, *y,*y\")\n+\t  \"=Yr,*x, x, v,Yr,*x, v, v, *y,*y\")\n \t(vec_concat:V2SI\n \t  (match_operand:SI 1 \"nonimmediate_operand\"\n-\t  \"  0, 0,x,  0,0, x,rm,  0,rm\")\n+\t  \"  0, 0, x,Yv, 0, 0,Yv,rm,  0,rm\")\n \t  (match_operand:SI 2 \"vector_move_operand\"\n-\t  \" rm,rm,rm,Yr,*x,x, C,*ym, C\")))]\n+\t  \" rm,rm,rm,rm,Yr,*x,Yv, C,*ym, C\")))]\n   \"TARGET_SSE4_1 && !(MEM_P (operands[1]) && MEM_P (operands[2]))\"\n   \"@\n    pinsrd\\t{$1, %2, %0|%0, %2, 1}\n    pinsrd\\t{$1, %2, %0|%0, %2, 1}\n    vpinsrd\\t{$1, %2, %1, %0|%0, %1, %2, 1}\n+   vpinsrd\\t{$1, %2, %1, %0|%0, %1, %2, 1}\n    punpckldq\\t{%2, %0|%0, %2}\n    punpckldq\\t{%2, %0|%0, %2}\n    vpunpckldq\\t{%2, %1, %0|%0, %1, %2}\n    %vmovd\\t{%1, %0|%0, %1}\n    punpckldq\\t{%2, %0|%0, %2}\n    movd\\t{%1, %0|%0, %1}\"\n-  [(set_attr \"isa\" \"noavx,noavx,avx,noavx,noavx,avx,*,*,*\")\n+  [(set_attr \"isa\" \"noavx,noavx,avx,avx512dq,noavx,noavx,avx,*,*,*\")\n    (set (attr \"type\")\n-     (cond [(eq_attr \"alternative\" \"6\")\n+     (cond [(eq_attr \"alternative\" \"7\")\n \t      (const_string \"ssemov\")\n-\t    (eq_attr \"alternative\" \"7\")\n-\t      (const_string \"mmxcvt\")\n \t    (eq_attr \"alternative\" \"8\")\n+\t      (const_string \"mmxcvt\")\n+\t    (eq_attr \"alternative\" \"9\")\n \t      (const_string \"mmxmov\")\n \t   ]\n \t   (const_string \"sselog\")))\n    (set (attr \"prefix_extra\")\n-     (if_then_else (eq_attr \"alternative\" \"0,1,2\")\n+     (if_then_else (eq_attr \"alternative\" \"0,1,2,3\")\n \t\t   (const_string \"1\")\n \t\t   (const_string \"*\")))\n    (set (attr \"length_immediate\")\n-     (if_then_else (eq_attr \"alternative\" \"0,1,2\")\n+     (if_then_else (eq_attr \"alternative\" \"0,1,2,3\")\n \t\t   (const_string \"1\")\n \t\t   (const_string \"*\")))\n-   (set_attr \"prefix\" \"orig,orig,vex,orig,orig,vex,maybe_vex,orig,orig\")\n-   (set_attr \"mode\" \"TI,TI,TI,TI,TI,TI,TI,DI,DI\")])\n+   (set_attr \"prefix\" \"orig,orig,vex,evex,orig,orig,maybe_evex,maybe_vex,orig,orig\")\n+   (set_attr \"mode\" \"TI,TI,TI,TI,TI,TI,TI,TI,DI,DI\")])\n \n ;; ??? In theory we can match memory for the MMX alternative, but allowing\n ;; nonimmediate_operand for operand 2 and *not* allowing memory for the SSE"}, {"sha": "3d279fdbf036a17946d96effe3fffa270e2c1408", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e021dc33a06b5127db26a347547b97e623a0e19/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e021dc33a06b5127db26a347547b97e623a0e19/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1e021dc33a06b5127db26a347547b97e623a0e19", "patch": "@@ -1,5 +1,8 @@\n 2016-06-02  Jakub Jelinek  <jakub@redhat.com>\n \n+\t* gcc.target/i386/avx512dq-concatv2si-1.c: New test.\n+\t* gcc.target/i386/avx512vl-concatv2si-1.c: New test.\n+\n \t* gcc.target/i386/avx512dq-concatv2di-1.c: New test.\n \t* gcc.target/i386/avx512vl-concatv2di-1.c: New test.\n \t* gcc.target/i386/sse2-init-v2di-2.c: Adjust expected vec_concatv2di"}, {"sha": "bb5e42f90ab2b706087d3832e4e37ca43cf41feb", "filename": "gcc/testsuite/gcc.target/i386/avx512dq-concatv2si-1.c", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e021dc33a06b5127db26a347547b97e623a0e19/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512dq-concatv2si-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e021dc33a06b5127db26a347547b97e623a0e19/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512dq-concatv2si-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512dq-concatv2si-1.c?ref=1e021dc33a06b5127db26a347547b97e623a0e19", "patch": "@@ -0,0 +1,43 @@\n+/* { dg-do compile { target { ! ia32 } } } */\n+/* { dg-options \"-O2 -mavx512vl -mavx512dq -masm=att\" } */\n+\n+typedef int V __attribute__((vector_size (8)));\n+\n+void\n+f1 (int x, int y)\n+{\n+  register int a __asm (\"xmm16\");\n+  register int b __asm (\"xmm17\");\n+  register V c __asm (\"xmm3\");\n+  a = x;\n+  b = y;\n+  asm volatile (\"\" : \"+v\" (a), \"+v\" (b));\n+  c = (V) { a, b };\n+  asm volatile (\"\" : \"+v\" (c));\n+}\n+\n+/* { dg-final { scan-assembler \"vpunpckldq\\[^\\n\\r]*%xmm17\\[^\\n\\r]*%xmm16\\[^\\n\\r]*%xmm3\" } } */\n+\n+void\n+f2 (int x, int y)\n+{\n+  register int a __asm (\"xmm16\");\n+  register V c __asm (\"xmm3\");\n+  a = x;\n+  asm volatile (\"\" : \"+v\" (a));\n+  c = (V) { a, y };\n+  asm volatile (\"\" : \"+v\" (c));\n+}\n+\n+void\n+f3 (int x, int *y)\n+{\n+  register int a __asm (\"xmm16\");\n+  register V c __asm (\"xmm3\");\n+  a = x;\n+  asm volatile (\"\" : \"+v\" (a));\n+  c = (V) { a, *y };\n+  asm volatile (\"\" : \"+v\" (c));\n+}\n+\n+/* { dg-final { scan-assembler-times \"vpinsrd\\[^\\n\\r]*\\\\\\$1\\[^\\n\\r]*%xmm16\\[^\\n\\r]*%xmm3\" 2 } } */"}, {"sha": "6ac293d74d3b4b3f3a3d9b7d2b26aa69ea0e26ee", "filename": "gcc/testsuite/gcc.target/i386/avx512vl-concatv2si-1.c", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e021dc33a06b5127db26a347547b97e623a0e19/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-concatv2si-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e021dc33a06b5127db26a347547b97e623a0e19/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-concatv2si-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-concatv2si-1.c?ref=1e021dc33a06b5127db26a347547b97e623a0e19", "patch": "@@ -0,0 +1,43 @@\n+/* { dg-do compile { target { ! ia32 } } } */\n+/* { dg-options \"-O2 -mavx512vl -mno-avx512dq -masm=att\" } */\n+\n+typedef int V __attribute__((vector_size (8)));\n+\n+void\n+f1 (int x, int y)\n+{\n+  register int a __asm (\"xmm16\");\n+  register int b __asm (\"xmm17\");\n+  register V c __asm (\"xmm3\");\n+  a = x;\n+  b = y;\n+  asm volatile (\"\" : \"+v\" (a), \"+v\" (b));\n+  c = (V) { a, b };\n+  asm volatile (\"\" : \"+v\" (c));\n+}\n+\n+/* { dg-final { scan-assembler \"vpunpckldq\\[^\\n\\r]*%xmm17\\[^\\n\\r]*%xmm16\\[^\\n\\r]*%xmm3\" } } */\n+\n+void\n+f2 (int x, int y)\n+{\n+  register int a __asm (\"xmm16\");\n+  register V c __asm (\"xmm3\");\n+  a = x;\n+  asm volatile (\"\" : \"+v\" (a));\n+  c = (V) { a, y };\n+  asm volatile (\"\" : \"+v\" (c));\n+}\n+\n+void\n+f3 (int x, int *y)\n+{\n+  register int a __asm (\"xmm16\");\n+  register V c __asm (\"xmm3\");\n+  a = x;\n+  asm volatile (\"\" : \"+v\" (a));\n+  c = (V) { a, *y };\n+  asm volatile (\"\" : \"+v\" (c));\n+}\n+\n+/* { dg-final { scan-assembler-not \"vpinsrd\\[^\\n\\r]*\\\\\\$1\\[^\\n\\r]*%xmm16\\[^\\n\\r]*%xmm3\" } } */"}]}