{"sha": "1379ce8fafed69709dc33fb6dadf26711bdca913", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTM3OWNlOGZhZmVkNjk3MDlkYzMzZmI2ZGFkZjI2NzExYmRjYTkxMw==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2015-02-17T20:58:43Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2015-02-17T20:58:43Z"}, "message": "ipa-visibility.c (function_and_variable_visibility): Only check locality if node is not already local.\n\n\t* ipa-visibility.c (function_and_variable_visibility): Only\n\tcheck locality if node is not already local.\n\t* ipa-inline.c (want_inline_function_to_all_callers_p): Use\n\tcall_for_symbol_and_aliases instead of\n\tcall_for_symbol_thunks_and_aliases.\n\t(ipa_inline): Likewise.\n\t* cgraph.c (cgraph_node::call_for_symbol_thunks_and_aliases):\n\tfirst walk aliases.\n\t* ipa.c (symbol_table::remove_unreachable_nodes): Use\n\tcall_for_symbol_and_aliases.\n\t* ipa-profile.c (ipa_propagate_frequency_data): Add function_symbol.\n\t(ipa_propagate_frequency_1): Use it; use opt_for_fn\n\t(ipa_propagate_frequency): Update.\n\t(ipa_profile): Add opt_for_fn guards.\n\nFrom-SVN: r220771", "tree": {"sha": "41b38cdc46774f415c0893e2e93077b85689fe92", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/41b38cdc46774f415c0893e2e93077b85689fe92"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1379ce8fafed69709dc33fb6dadf26711bdca913", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1379ce8fafed69709dc33fb6dadf26711bdca913", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1379ce8fafed69709dc33fb6dadf26711bdca913", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1379ce8fafed69709dc33fb6dadf26711bdca913/comments", "author": null, "committer": null, "parents": [{"sha": "a2818955d7a57e099a02eb7291cfc13bf35c4fa9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2818955d7a57e099a02eb7291cfc13bf35c4fa9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2818955d7a57e099a02eb7291cfc13bf35c4fa9"}], "stats": {"total": 20, "additions": 19, "deletions": 1}, "files": [{"sha": "9c0672b7471b60f4d3baa3f4480fec1ae470a87a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1379ce8fafed69709dc33fb6dadf26711bdca913/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1379ce8fafed69709dc33fb6dadf26711bdca913/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1379ce8fafed69709dc33fb6dadf26711bdca913", "patch": "@@ -1,3 +1,20 @@\n+2015-02-17  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* ipa-visibility.c (function_and_variable_visibility): Only\n+\tcheck locality if node is not already local.\n+\t* ipa-inline.c (want_inline_function_to_all_callers_p): Use\n+\tcall_for_symbol_and_aliases instead of\n+\tcall_for_symbol_thunks_and_aliases.\n+\t(ipa_inline): Likewise.\n+\t* cgraph.c (cgraph_node::call_for_symbol_thunks_and_aliases):\n+\tfirst walk aliases.\n+\t* ipa.c (symbol_table::remove_unreachable_nodes): Use\n+\tcall_for_symbol_and_aliases.\n+\t* ipa-profile.c (ipa_propagate_frequency_data): Add function_symbol.\n+\t(ipa_propagate_frequency_1): Use it; use opt_for_fn\n+\t(ipa_propagate_frequency): Update.\n+\t(ipa_profile): Add opt_for_fn guards.\n+\n 2015-02-17  Thomas Schwinge  <thomas@codesourcery.com>\n \n \t* config/nvptx/mkoffload.c (parse_file): Fix logic error in"}, {"sha": "9247e2976e72f59639efb33634aa0d6c94fe52fe", "filename": "gcc/ipa-visibility.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1379ce8fafed69709dc33fb6dadf26711bdca913/gcc%2Fipa-visibility.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1379ce8fafed69709dc33fb6dadf26711bdca913/gcc%2Fipa-visibility.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-visibility.c?ref=1379ce8fafed69709dc33fb6dadf26711bdca913", "patch": "@@ -595,7 +595,8 @@ function_and_variable_visibility (bool whole_program)\n     }\n   FOR_EACH_DEFINED_FUNCTION (node)\n     {\n-      node->local.local |= node->local_p ();\n+      if (!node->local.local)\n+        node->local.local |= node->local_p ();\n \n       /* If we know that function can not be overwritten by a different semantics\n \t and moreover its section can not be discarded, replace all direct calls"}]}