{"sha": "ac200799acb5cd2fb9e1758f6bf5fff1978daaeb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWMyMDA3OTlhY2I1Y2QyZmI5ZTE3NThmNmJmNWZmZjE5NzhkYWFlYg==", "commit": {"author": {"name": "Hafiz Abid Qadeer", "email": "abidh@codesourcery.com", "date": "2021-04-08T16:31:30Z"}, "committer": {"name": "Hafiz Abid Qadeer", "email": "abidh@codesourcery.com", "date": "2021-04-11T13:44:22Z"}, "message": "[OpenACC] Fix an ICE where a loop with GT condition is collapsed.\n\nWe have seen an ICE both on trunk and devel/omp/gcc-10 branches which can\nbe reprodued with this simple testcase.  It occurs if an OpenACC loop has\na collapse clause and any of the loop being collapsed uses GT or GE\ncondition.  This issue is specific to OpenACC.\n\nint main (void)\n{\n  int ix, iy;\n  int dim_x = 16, dim_y = 16;\n  {\n       for (iy = dim_y - 1; iy > 0; --iy)\n       for (ix = dim_x - 1; ix > 0; --ix)\n        ;\n  }\n}\n\nThe problem is caused by a failing assertion in expand_oacc_collapse_init.\nIt checks that cond_code for fd->loop should be same as cond_code for all\nthe loops that are being collapsed.  As the cond_code for fd->loop is\nLT_EXPR with collapse clause (set at the end of omp_extract_for_data),\nthis assertion forces that all the loop in collapse clause should use\n< operator.\n\nThere does not seem to be anything in the code which demands this\ncondition as loop with > condition works ok otherwise.  I digged old\nmailing list a bit but could not find any discussion on this change.\nLooking at the code, expand_oacc_for checks that fd->loop->cond_code is\neither LT_EXPR or GT_EXPR.  I guess the original intention was to have\nsimilar checks on the loop which are being collapsed. But the way check\nwas written does not acheive that.\n\nI have fixed it by modifying the check in the assertion to be same as\ncheck on fd->loop->cond_code.\n\nI tested goacc and libgomp (with nvptx offloading) and did not see any\nregression.  I have added new tests to check collapse with GT/GE condition.\n\n\tPR middle-end/98088\n\tgcc/\n\t* omp-expand.c (expand_oacc_collapse_init): Update condition in\n\ta gcc_assert.\n\n\tgcc/testsuite/\n\t* c-c++-common/goacc/collapse-2.c: New.\n\n\tlibgomp/\n\t* testsuite/libgomp.oacc-c-c++-common/collapse-2.c: Add check\n\tfor loop with GT/GE condition.\n\t* testsuite/libgomp.oacc-c-c++-common/collapse-3.c: Likewise.", "tree": {"sha": "960956aed6d5a0a036df588e1a75f0cf0f1277b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/960956aed6d5a0a036df588e1a75f0cf0f1277b0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ac200799acb5cd2fb9e1758f6bf5fff1978daaeb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac200799acb5cd2fb9e1758f6bf5fff1978daaeb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac200799acb5cd2fb9e1758f6bf5fff1978daaeb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac200799acb5cd2fb9e1758f6bf5fff1978daaeb/comments", "author": {"login": "abidh", "id": 4067533, "node_id": "MDQ6VXNlcjQwNjc1MzM=", "avatar_url": "https://avatars.githubusercontent.com/u/4067533?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abidh", "html_url": "https://github.com/abidh", "followers_url": "https://api.github.com/users/abidh/followers", "following_url": "https://api.github.com/users/abidh/following{/other_user}", "gists_url": "https://api.github.com/users/abidh/gists{/gist_id}", "starred_url": "https://api.github.com/users/abidh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abidh/subscriptions", "organizations_url": "https://api.github.com/users/abidh/orgs", "repos_url": "https://api.github.com/users/abidh/repos", "events_url": "https://api.github.com/users/abidh/events{/privacy}", "received_events_url": "https://api.github.com/users/abidh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "abidh", "id": 4067533, "node_id": "MDQ6VXNlcjQwNjc1MzM=", "avatar_url": "https://avatars.githubusercontent.com/u/4067533?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abidh", "html_url": "https://github.com/abidh", "followers_url": "https://api.github.com/users/abidh/followers", "following_url": "https://api.github.com/users/abidh/following{/other_user}", "gists_url": "https://api.github.com/users/abidh/gists{/gist_id}", "starred_url": "https://api.github.com/users/abidh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abidh/subscriptions", "organizations_url": "https://api.github.com/users/abidh/orgs", "repos_url": "https://api.github.com/users/abidh/repos", "events_url": "https://api.github.com/users/abidh/events{/privacy}", "received_events_url": "https://api.github.com/users/abidh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cdb23bba5c48ede5a6163900f8bf423746b70bee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cdb23bba5c48ede5a6163900f8bf423746b70bee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cdb23bba5c48ede5a6163900f8bf423746b70bee"}], "stats": {"total": 90, "additions": 85, "deletions": 5}, "files": [{"sha": "dc797f95154f8d8d752733d68c84f258f157ab81", "filename": "gcc/omp-expand.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac200799acb5cd2fb9e1758f6bf5fff1978daaeb/gcc%2Fomp-expand.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac200799acb5cd2fb9e1758f6bf5fff1978daaeb/gcc%2Fomp-expand.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-expand.c?ref=ac200799acb5cd2fb9e1758f6bf5fff1978daaeb", "patch": "@@ -1541,7 +1541,7 @@ expand_oacc_collapse_init (const struct omp_for_data *fd,\n       tree iter_type = TREE_TYPE (loop->v);\n       tree plus_type = iter_type;\n \n-      gcc_assert (loop->cond_code == fd->loop.cond_code);\n+      gcc_assert (loop->cond_code == LT_EXPR || loop->cond_code == GT_EXPR);\n \n       if (POINTER_TYPE_P (iter_type))\n \tplus_type = sizetype;"}, {"sha": "e46028cd5c496524f8d7e9645bfe8cec2ae73d7c", "filename": "gcc/testsuite/c-c++-common/goacc/collapse-2.c", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac200799acb5cd2fb9e1758f6bf5fff1978daaeb/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fcollapse-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac200799acb5cd2fb9e1758f6bf5fff1978daaeb/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fcollapse-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fcollapse-2.c?ref=ac200799acb5cd2fb9e1758f6bf5fff1978daaeb", "patch": "@@ -0,0 +1,56 @@\n+/* Test for ICE as reported in PR98088.  */\n+\n+int i, j;\n+\n+void\n+f1 (void)\n+{\n+  #pragma acc parallel\n+  #pragma acc loop collapse (2)\n+  for (i = 5; i > 5; i--)\n+\tfor (j = 5; j > 0; j--)\n+\t  ;\n+}\n+\n+void\n+f2 (void)\n+{\n+  #pragma acc parallel\n+  #pragma acc loop collapse (2)\n+  for (i = 0; i < 5; i++)\n+\tfor (j = 5; j > 0; j--)\n+\t  ;\n+}\n+\n+void\n+f3 (void)\n+{\n+  #pragma acc parallel\n+  #pragma acc loop collapse (2)\n+  for (i = 5; i >= 0; i--)\n+\tfor (j = 5; j >= 0; j--)\n+\t  ;\n+}\n+\n+void f4 ()\n+{\n+  #pragma acc parallel loop tile(2, 3)\n+  for (int i = 0; i > 8; i++)\n+    for (int j = 0; j > 8; j++);\n+}\n+\n+void f5 ()\n+{\n+  #pragma acc parallel loop tile(2, 3)\n+  for (int i = 0; i > 8; i++)\n+    for (long j = 0; j > 8; j++);\n+}\n+\n+void\n+f6 (int a[32][32])\n+{\n+  #pragma acc parallel loop collapse(2)\n+  for (int i = 16; i > 8; i--)\n+    for (int j = 16; j > 8; j--)\n+      a[i][j] = i + j;\n+}"}, {"sha": "7a8cfd2f3d442b20f1449e9a4c6cad856ebd4bca", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/collapse-2.c", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac200799acb5cd2fb9e1758f6bf5fff1978daaeb/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fcollapse-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac200799acb5cd2fb9e1758f6bf5fff1978daaeb/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fcollapse-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fcollapse-2.c?ref=ac200799acb5cd2fb9e1758f6bf5fff1978daaeb", "patch": "@@ -5,7 +5,7 @@\n int\n main (void)\n {\n-  int i, j, k, l = 0, f = 0, x = 0;\n+  int i, j, k, l = 0, f = 0, x = 0, l2 = 0;\n   int m1 = 4, m2 = -5, m3 = 17;\n \n #pragma acc parallel\n@@ -20,6 +20,19 @@ main (void)\n \t    }\n \t}\n \n+  /*  Test loop with > condition.  */\n+#pragma acc parallel\n+  #pragma acc loop seq collapse(3) reduction(+:l2)\n+    for (i = -2; i < m1; i++)\n+      for (j = -3; j > (m2 - 1); j--)\n+\t{\n+\t  for (k = 13; k < m3; k++)\n+\t    {\n+\t      if ((i + 2) * 12 + (j + 5) * 4 + (k - 13) !=  9 + f++)\n+\t\tl2++;\n+\t    }\n+\t}\n+\n     for (i = -2; i < m1; i++)\n       for (j = m2; j < -2; j++)\n \t{\n@@ -30,7 +43,7 @@ main (void)\n \t    }\n \t}\n \n-  if (l != x)\n+  if (l != x || l2 != x)\n     abort ();\n \n   return 0;"}, {"sha": "50f538d0a327db3d2c436bcf2864629e0145e5c6", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/collapse-3.c", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac200799acb5cd2fb9e1758f6bf5fff1978daaeb/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fcollapse-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac200799acb5cd2fb9e1758f6bf5fff1978daaeb/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fcollapse-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fcollapse-3.c?ref=ac200799acb5cd2fb9e1758f6bf5fff1978daaeb", "patch": "@@ -7,7 +7,7 @@\n int\n main (void)\n {\n-  int i2, l = 0, r = 0;\n+  int i2, l = 0, r = 0, l2 = 0;\n   int a[3][3][3];\n \n   memset (a, '\\0', sizeof (a));\n@@ -27,13 +27,24 @@ main (void)\n \t\tl += 1;\n     }\n \n+  /*  Test loop with >= condition.  */\n+#pragma acc parallel\n+    {\n+      #pragma acc loop collapse(2) reduction(|:l2)\n+\tfor (i2 = 0; i2 < 2; i2++)\n+\t  for (int j = 1; j >= 0; j--)\n+\t    for (int k = 0; k < 2; k++)\n+\t      if (a[i2][j][k] != i2 + j * 4 + k * 16)\n+\t\tl2 += 1;\n+    }\n+\n     for (i2 = 0; i2 < 2; i2++)\n       for (int j = 0; j < 2; j++)\n \tfor (int k = 0; k < 2; k++)\n \t  if (a[i2][j][k] != i2 + j * 4 + k * 16)\n \t    r += 1;\n \n-  if (l != r)\n+  if (l != r || l2 != r)\n     abort ();\n   return 0;\n }"}]}