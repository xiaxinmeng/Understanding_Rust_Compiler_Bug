{"sha": "cf157324f383a7bfb6504e8ec20d8d0a569ac43b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2YxNTczMjRmMzgzYTdiZmI2NTA0ZThlYzIwZDhkMGE1NjlhYzQzYg==", "commit": {"author": {"name": "Olivier Hainque", "email": "hainque@adacore.com", "date": "2009-07-27T17:40:57Z"}, "committer": {"name": "Douglas Rupp", "email": "rupp@gcc.gnu.org", "date": "2009-07-27T17:40:57Z"}, "message": "convert.c (convert_to_pointer): Don't assume the target pointer type is POINTER_SIZE long.\n\n\n\t* convert.c (convert_to_pointer): Don't assume the target\n\tpointer type is POINTER_SIZE long. Fetch its precision instead.\n\n\nCo-Authored-By: Douglas B Rupp <rupp@gnat.com>\n\nFrom-SVN: r150133", "tree": {"sha": "81c4ef5de4cb28ea7e21c57ebc69d82ebbf4a588", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/81c4ef5de4cb28ea7e21c57ebc69d82ebbf4a588"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cf157324f383a7bfb6504e8ec20d8d0a569ac43b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf157324f383a7bfb6504e8ec20d8d0a569ac43b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf157324f383a7bfb6504e8ec20d8d0a569ac43b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf157324f383a7bfb6504e8ec20d8d0a569ac43b/comments", "author": {"login": "hainque", "id": 18735142, "node_id": "MDQ6VXNlcjE4NzM1MTQy", "avatar_url": "https://avatars.githubusercontent.com/u/18735142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hainque", "html_url": "https://github.com/hainque", "followers_url": "https://api.github.com/users/hainque/followers", "following_url": "https://api.github.com/users/hainque/following{/other_user}", "gists_url": "https://api.github.com/users/hainque/gists{/gist_id}", "starred_url": "https://api.github.com/users/hainque/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hainque/subscriptions", "organizations_url": "https://api.github.com/users/hainque/orgs", "repos_url": "https://api.github.com/users/hainque/repos", "events_url": "https://api.github.com/users/hainque/events{/privacy}", "received_events_url": "https://api.github.com/users/hainque/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d4d798a3717d7ba938eab6d98b87b07242a6dc13", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4d798a3717d7ba938eab6d98b87b07242a6dc13", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4d798a3717d7ba938eab6d98b87b07242a6dc13"}], "stats": {"total": 25, "additions": 20, "deletions": 5}, "files": [{"sha": "f3f0cdba44b64151a0b72fa7afd26bf9a5ac0cf4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf157324f383a7bfb6504e8ec20d8d0a569ac43b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf157324f383a7bfb6504e8ec20d8d0a569ac43b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cf157324f383a7bfb6504e8ec20d8d0a569ac43b", "patch": "@@ -1,3 +1,9 @@\n+2009-07-27  Olivier Hainque  <hainque@adacore.com>\n+            Douglas B Rupp  <rupp@gnat.com>\n+\n+\t* convert.c (convert_to_pointer): Don't assume the target\n+\tpointer type is POINTER_SIZE long. Fetch its precision instead.\n+\n 2009-07-27  Douglas B Rupp  <rupp@gnat.com>\n \n \t* system.h (fopen): Undefine if macro."}, {"sha": "f7ddfc956fc0517031b4f9872a680348aa6b96b2", "filename": "gcc/convert.c", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf157324f383a7bfb6504e8ec20d8d0a569ac43b/gcc%2Fconvert.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf157324f383a7bfb6504e8ec20d8d0a569ac43b/gcc%2Fconvert.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconvert.c?ref=cf157324f383a7bfb6504e8ec20d8d0a569ac43b", "patch": "@@ -59,12 +59,21 @@ convert_to_pointer (tree type, tree expr)\n     case INTEGER_TYPE:\n     case ENUMERAL_TYPE:\n     case BOOLEAN_TYPE:\n-      if (TYPE_PRECISION (TREE_TYPE (expr)) != POINTER_SIZE)\n-\texpr = fold_build1_loc (loc, NOP_EXPR,\n-                            lang_hooks.types.type_for_size (POINTER_SIZE, 0),\n-\t\t\t    expr);\n-      return fold_build1_loc (loc, CONVERT_EXPR, type, expr);\n+      {\n+\t/* If the input precision differs from the target pointer type\n+\t   precision, first convert the input expression to an integer type of\n+\t   the target precision.  Some targets, e.g. VMS, need several pointer\n+\t   sizes to coexist so the latter isn't necessarily POINTER_SIZE.  */\n+\tunsigned int pprec = TYPE_PRECISION (type);\n+\tunsigned int eprec = TYPE_PRECISION (TREE_TYPE (expr));\n+\n+ \tif (eprec != pprec)\n+\t  expr = fold_build1_loc (loc, NOP_EXPR,\n+\t\t\t      lang_hooks.types.type_for_size (pprec, 0),\n+\t\t\t      expr);\n+      }\n \n+      return fold_build1_loc (loc, CONVERT_EXPR, type, expr);\n \n     default:\n       error (\"cannot convert to a pointer type\");"}]}