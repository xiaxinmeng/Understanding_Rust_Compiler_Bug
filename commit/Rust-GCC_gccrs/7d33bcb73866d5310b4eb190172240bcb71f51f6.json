{"sha": "7d33bcb73866d5310b4eb190172240bcb71f51f6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2QzM2JjYjczODY2ZDUzMTBiNGViMTkwMTcyMjQwYmNiNzFmNTFmNg==", "commit": {"author": {"name": "Torvald Riegel", "email": "triegel@redhat.com", "date": "2012-02-14T13:13:56Z"}, "committer": {"name": "Torvald Riegel", "email": "torvald@gcc.gnu.org", "date": "2012-02-14T13:13:56Z"}, "message": "libitm: Add xcalloc.\n\n\tlibitm/\n\t* util.cc (GTM::xcalloc): New.\n\t* common.h (GTM::xcalloc): Declare.\n\nFrom-SVN: r184210", "tree": {"sha": "3f757ed98c58cd9c6de39c80072caa8625239a50", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3f757ed98c58cd9c6de39c80072caa8625239a50"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7d33bcb73866d5310b4eb190172240bcb71f51f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d33bcb73866d5310b4eb190172240bcb71f51f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d33bcb73866d5310b4eb190172240bcb71f51f6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d33bcb73866d5310b4eb190172240bcb71f51f6/comments", "author": {"login": "triegelrh", "id": 62400967, "node_id": "MDQ6VXNlcjYyNDAwOTY3", "avatar_url": "https://avatars.githubusercontent.com/u/62400967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/triegelrh", "html_url": "https://github.com/triegelrh", "followers_url": "https://api.github.com/users/triegelrh/followers", "following_url": "https://api.github.com/users/triegelrh/following{/other_user}", "gists_url": "https://api.github.com/users/triegelrh/gists{/gist_id}", "starred_url": "https://api.github.com/users/triegelrh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/triegelrh/subscriptions", "organizations_url": "https://api.github.com/users/triegelrh/orgs", "repos_url": "https://api.github.com/users/triegelrh/repos", "events_url": "https://api.github.com/users/triegelrh/events{/privacy}", "received_events_url": "https://api.github.com/users/triegelrh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "dd552284fd817c9d946598a7b647f9e67753bed6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd552284fd817c9d946598a7b647f9e67753bed6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd552284fd817c9d946598a7b647f9e67753bed6"}], "stats": {"total": 19, "additions": 19, "deletions": 0}, "files": [{"sha": "130c9efbd8500c12ed3c22767a401f3446310c3f", "filename": "libitm/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d33bcb73866d5310b4eb190172240bcb71f51f6/libitm%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d33bcb73866d5310b4eb190172240bcb71f51f6/libitm%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2FChangeLog?ref=7d33bcb73866d5310b4eb190172240bcb71f51f6", "patch": "@@ -1,3 +1,8 @@\n+2012-02-14  Torvald Riegel  <triegel@redhat.com>\n+\n+\t* util.cc (GTM::xcalloc): New.\n+\t* common.h (GTM::xcalloc): Declare.\n+\n 2012-02-14  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* config/sparc/target.h (cpu_relax): Read from CC register."}, {"sha": "b1ef2d4e63ad83c4d874fe764ad12d8bc0c951aa", "filename": "libitm/common.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d33bcb73866d5310b4eb190172240bcb71f51f6/libitm%2Fcommon.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d33bcb73866d5310b4eb190172240bcb71f51f6/libitm%2Fcommon.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2Fcommon.h?ref=7d33bcb73866d5310b4eb190172240bcb71f51f6", "patch": "@@ -54,6 +54,8 @@ namespace GTM HIDDEN {\n // cache lines that are not shared with any object used by another thread.\n extern void * xmalloc (size_t s, bool separate_cl = false)\n   __attribute__((malloc, nothrow));\n+extern void * xcalloc (size_t s, bool separate_cl = false)\n+  __attribute__((malloc, nothrow));\n extern void * xrealloc (void *p, size_t s, bool separate_cl = false)\n   __attribute__((malloc, nothrow));\n "}, {"sha": "48a1bf88d7cb1e52976f7d63e1f43cd1617fae4a", "filename": "libitm/util.cc", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d33bcb73866d5310b4eb190172240bcb71f51f6/libitm%2Futil.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d33bcb73866d5310b4eb190172240bcb71f51f6/libitm%2Futil.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2Futil.cc?ref=7d33bcb73866d5310b4eb190172240bcb71f51f6", "patch": "@@ -70,6 +70,18 @@ xmalloc (size_t size, bool separate_cl)\n   return r;\n }\n \n+void *\n+xcalloc (size_t size, bool separate_cl)\n+{\n+  // TODO Use posix_memalign if separate_cl is true, or some other allocation\n+  // method that will avoid sharing cache lines with data used by other\n+  // threads.\n+  void *r = calloc (1, size);\n+  if (r == 0)\n+    GTM_fatal (\"Out of memory allocating %lu bytes\", (unsigned long) size);\n+  return r;\n+}\n+\n void *\n xrealloc (void *old, size_t size, bool separate_cl)\n {"}]}