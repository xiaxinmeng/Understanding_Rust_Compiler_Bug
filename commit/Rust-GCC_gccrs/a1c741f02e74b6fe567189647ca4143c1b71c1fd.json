{"sha": "a1c741f02e74b6fe567189647ca4143c1b71c1fd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTFjNzQxZjAyZTc0YjZmZTU2NzE4OTY0N2NhNDE0M2MxYjcxYzFmZA==", "commit": {"author": {"name": "Richard Sandiford", "email": "rdsandiford@googlemail.com", "date": "2012-08-26T19:22:59Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2012-08-26T19:22:59Z"}, "message": "mips.c (mips_has_long_branch_p): New function, split out from...\n\ngcc/\n\t* config/mips/mips.c (mips_has_long_branch_p): New function,\n\tsplit out from...\n\t(mips_expand_ghost_gp_insns): ...here.  Look inside sequences.\n\nFrom-SVN: r190701", "tree": {"sha": "3e192eff81491cb1ef390f372dc6c250e4e3ca1a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3e192eff81491cb1ef390f372dc6c250e4e3ca1a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a1c741f02e74b6fe567189647ca4143c1b71c1fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1c741f02e74b6fe567189647ca4143c1b71c1fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1c741f02e74b6fe567189647ca4143c1b71c1fd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1c741f02e74b6fe567189647ca4143c1b71c1fd/comments", "author": {"login": "rsandifo", "id": 4235983, "node_id": "MDQ6VXNlcjQyMzU5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4235983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo", "html_url": "https://github.com/rsandifo", "followers_url": "https://api.github.com/users/rsandifo/followers", "following_url": "https://api.github.com/users/rsandifo/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo/orgs", "repos_url": "https://api.github.com/users/rsandifo/repos", "events_url": "https://api.github.com/users/rsandifo/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "62332eba32708fbe911dcea662b17410bab8faa5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62332eba32708fbe911dcea662b17410bab8faa5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62332eba32708fbe911dcea662b17410bab8faa5"}], "stats": {"total": 52, "additions": 35, "deletions": 17}, "files": [{"sha": "f462c9b3f4eb146eca73e9b774fa67fd7eac413b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1c741f02e74b6fe567189647ca4143c1b71c1fd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1c741f02e74b6fe567189647ca4143c1b71c1fd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a1c741f02e74b6fe567189647ca4143c1b71c1fd", "patch": "@@ -1,3 +1,9 @@\n+2012-08-26  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\t* config/mips/mips.c (mips_has_long_branch_p): New function,\n+\tsplit out from...\n+\t(mips_expand_ghost_gp_insns): ...here.  Look inside sequences.\n+\n 2012-08-26  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* config/mips/mips.c (r10k_safe_mem_expr_p): Use get_inner_reference."}, {"sha": "0763f228c421e5a14f8eeaff31d8b1ef73b244ef", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 29, "deletions": 17, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1c741f02e74b6fe567189647ca4143c1b71c1fd/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1c741f02e74b6fe567189647ca4143c1b71c1fd/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=a1c741f02e74b6fe567189647ca4143c1b71c1fd", "patch": "@@ -15478,23 +15478,15 @@ mips_reorg_process_insns (void)\n   htab_delete (htab);\n }\n \n-/* If we are using a GOT, but have not decided to use a global pointer yet,\n-   see whether we need one to implement long branches.  Convert the ghost\n-   global-pointer instructions into real ones if so.  */\n+/* Return true if the function has a long branch instruction.  */\n \n static bool\n-mips_expand_ghost_gp_insns (void)\n+mips_has_long_branch_p (void)\n {\n-  rtx insn;\n+  rtx insn, subinsn;\n   int normal_length;\n \n-  /* Quick exit if we already know that we will or won't need a\n-     global pointer.  */\n-  if (!TARGET_USE_GOT\n-      || cfun->machine->global_pointer == INVALID_REGNUM\n-      || mips_must_initialize_gp_p ())\n-    return false;\n-\n+  /* We need up-to-date instruction lengths.  */\n   shorten_branches (get_insns ());\n \n   /* Look for a branch that is longer than normal.  The normal length for\n@@ -15503,12 +15495,32 @@ mips_expand_ghost_gp_insns (void)\n      but they have no delay slot.  */\n   normal_length = (TARGET_MIPS16 ? 4 : 8);\n   for (insn = get_insns (); insn; insn = NEXT_INSN (insn))\n-    if (JUMP_P (insn)\n-\t&& USEFUL_INSN_P (insn)\n-\t&& get_attr_length (insn) > normal_length)\n-      break;\n+    FOR_EACH_SUBINSN (subinsn, insn)\n+      if (JUMP_P (subinsn)\n+\t  && USEFUL_INSN_P (subinsn)\n+\t  && get_attr_length (subinsn) > normal_length\n+\t  && (any_condjump_p (subinsn) || any_uncondjump_p (subinsn)))\n+\treturn true;\n+\n+  return false;\n+}\n+\n+/* If we are using a GOT, but have not decided to use a global pointer yet,\n+   see whether we need one to implement long branches.  Convert the ghost\n+   global-pointer instructions into real ones if so.  */\n+\n+static bool\n+mips_expand_ghost_gp_insns (void)\n+{\n+  /* Quick exit if we already know that we will or won't need a\n+     global pointer.  */\n+  if (!TARGET_USE_GOT\n+      || cfun->machine->global_pointer == INVALID_REGNUM\n+      || mips_must_initialize_gp_p ())\n+    return false;\n \n-  if (insn == NULL_RTX)\n+  /* Run a full check for long branches.  */\n+  if (!mips_has_long_branch_p ())\n     return false;\n \n   /* We've now established that we need $gp.  */"}]}