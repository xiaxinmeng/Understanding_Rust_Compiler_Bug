{"sha": "432ba90f48ef33fc168b2b92f3f5e5593dce9ef6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDMyYmE5MGY0OGVmMzNmYzE2OGIyYjkyZjNmNWU1NTkzZGNlOWVmNg==", "commit": {"author": {"name": "Bryce McKinlay", "email": "bryce@albatross.co.nz", "date": "2000-02-16T05:13:46Z"}, "committer": {"name": "Bryce McKinlay", "email": "bryce@gcc.gnu.org", "date": "2000-02-16T05:13:46Z"}, "message": "InterfaceDispatch.java: New file.\n\n2000-02-16  Bryce McKinlay  <bryce@albatross.co.nz>\n\n        * libjava.lang/InterfaceDispatch.java: New file.\n        * libjava.lang/InterfaceDispatch.out: New file.\n\nFrom-SVN: r32001", "tree": {"sha": "bc6e7f4702ca30260a3a7569fa516ea4a83aa00e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bc6e7f4702ca30260a3a7569fa516ea4a83aa00e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/432ba90f48ef33fc168b2b92f3f5e5593dce9ef6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/432ba90f48ef33fc168b2b92f3f5e5593dce9ef6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/432ba90f48ef33fc168b2b92f3f5e5593dce9ef6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/432ba90f48ef33fc168b2b92f3f5e5593dce9ef6/comments", "author": null, "committer": null, "parents": [{"sha": "c284306145faf3fe9ed5d7baea237fb0bb50973e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c284306145faf3fe9ed5d7baea237fb0bb50973e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c284306145faf3fe9ed5d7baea237fb0bb50973e"}], "stats": {"total": 435, "additions": 435, "deletions": 0}, "files": [{"sha": "4d8e534ac14c16c3eadc3ca11cc4f4cd41c9befd", "filename": "libjava/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/432ba90f48ef33fc168b2b92f3f5e5593dce9ef6/libjava%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/432ba90f48ef33fc168b2b92f3f5e5593dce9ef6/libjava%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2FChangeLog?ref=432ba90f48ef33fc168b2b92f3f5e5593dce9ef6", "patch": "@@ -1,3 +1,8 @@\n+2000-02-16  Bryce McKinlay  <bryce@albatross.co.nz>\n+\n+\t* libjava.lang/InterfaceDispatch.java: New file.\n+\t* libjava.lang/InterfaceDispatch.out: New file.\n+\n 2000-02-15  Tom Tromey  <tromey@cygnus.com>\n \n \t* libjava.jni/virtual.java: New file."}, {"sha": "17f5c46946fe032c34432c6fd9485c5ad1eef957", "filename": "libjava/testsuite/libjava.lang/InterfaceDispatch.java", "status": "added", "additions": 403, "deletions": 0, "changes": 403, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/432ba90f48ef33fc168b2b92f3f5e5593dce9ef6/libjava%2Ftestsuite%2Flibjava.lang%2FInterfaceDispatch.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/432ba90f48ef33fc168b2b92f3f5e5593dce9ef6/libjava%2Ftestsuite%2Flibjava.lang%2FInterfaceDispatch.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.lang%2FInterfaceDispatch.java?ref=432ba90f48ef33fc168b2b92f3f5e5593dce9ef6", "patch": "@@ -0,0 +1,403 @@\n+/* Test interface dispatch, type checking (instanceof), and casting. */\n+\n+interface IA\n+{\n+  String a();\n+}\n+\n+interface IB extends IA\n+{\n+  String b();\n+}\n+\n+interface IC extends IB\n+{\n+  void c();\n+  int d();\n+  IB e(int i);\n+}\n+\n+interface ID\n+{\n+  String z();\n+  String a();  \n+}\n+\n+class CA\n+{\n+  String a()\n+  {\n+    return \"CA a()\";\n+  }\n+}\n+\n+class CB implements IB\n+{\n+  public String a()\n+  {\n+    return \"CB a()\";\n+  }\n+  \n+  public String b()\n+  {\n+    return \"CB b()\";  \n+  }\n+}\n+\n+class CC extends CB\n+{\n+  public int d()\n+  {\n+    return 99;\n+  }\n+}\n+\n+class CD extends CC implements IC\n+{\n+  public String a()\n+  {\n+    return \"CD a()\";\n+  }\n+  \n+  public void c()\n+  {\n+    System.out.println(\"CD c()\");\n+  }\n+  \n+  public int d()\n+  {\n+    return 6;\n+  }\n+  \n+  public IB e(int i)\n+  {\n+    if (i == 1)\n+      return new CB();\n+    else\n+      return new CD();\n+  }\n+}\n+\n+class CE extends CB implements IB, ID\n+{\n+  public String a()\n+  {\n+    return (\"CE a()\");\n+  }\n+  \n+  public String b()\n+  {\n+    return (\"CE b()\");\n+  }\n+    \n+  public String z()\n+  {\n+    return(\"CE z()\");  \n+  }\n+}\n+\n+\n+public class InterfaceDispatch\n+{\n+  public static void main(String args[])\n+  {\n+    new InterfaceDispatch();\n+  }\n+  \n+  public InterfaceDispatch()\n+  {\n+    /* _Jv_InstanceOf */\n+    \n+    /* Object instanceof CLASS */\n+    Object obj = new CA();\n+    \n+    if (obj instanceof CA)\n+      {\n+        System.out.println (\"ok 1\");\n+      }\n+    else\n+      {\n+        System.out.println (\"FAIL 1\");\n+      }\n+\n+    obj = new CD();\n+    \n+    if (!(obj instanceof CA))\n+      {\n+        System.out.println (\"ok 2a\");\n+      }\n+    else\n+      {\n+        System.out.println (\"FAIL 2a\");\n+      }\n+\n+    if (obj instanceof CB)\n+      {\n+        System.out.println (\"ok 2b\");\n+      }\n+    else\n+      {\n+        System.out.println (\"FAIL 2b\");\n+      }\n+\n+    \n+    /* Object instanceof INTERFACE */\n+    obj = new CB();\n+    \n+    if (!(obj instanceof IC))\n+      {\n+        System.out.println(\"ok 3\");\n+      }\n+    else\n+      {\n+        System.out.println (\"FAIL 3\");\n+      }\n+    \n+    if (obj instanceof IB)\n+      {\n+        System.out.println(\"ok 4\");\n+      }\n+    else\n+      {\n+        System.out.println (\"FAIL 4\");\n+      }\n+    \n+    /* InterfaceRef instanceof INTERFACE */\n+    \n+    IA ia = new CB();\n+    \n+    if (ia instanceof IB)\n+      {\n+        System.out.println(\"ok 5\");\n+      }\n+    else\n+      {\n+        System.out.println (\"FAIL 5\");\n+      }\n+    \n+    \n+    if (!(ia instanceof IC))\n+      {\n+        System.out.println(\"ok 6\");\n+      }\n+    else\n+      {\n+        System.out.println (\"FAIL 6\");\n+      }\n+      \n+    /* InterfaceRef instanceof CLASS */\n+    \n+    if (ia instanceof CB)\n+      {\n+        System.out.println(\"ok 7\");\n+      }\n+    else\n+      {\n+        System.out.println (\"FAIL 7\");\n+      }\n+      \n+    \n+    if (!(ia instanceof CD))\n+      {\n+        System.out.println(\"ok 8\");\n+      }\n+    else\n+      {\n+        System.out.println (\"FAIL 8\");\n+      }    \n+    \n+    \n+    /* _Jv_CheckCast */\n+    Object obj_ca = new CA();\n+    Object obj_cc = new CC();    \n+    \n+    IA ia2;\n+    \n+    try\n+      {\n+        ia2 = (IA) obj_cc;\n+        System.out.println(\"ok 9\");\n+      }\n+    catch (ClassCastException x)\n+      {\n+        System.out.println(\"FAIL 9\");\n+      }\n+    \n+    CD cd;\n+    \n+    try\n+      {\n+        cd = (CD) obj_ca;\n+        System.out.println(\"FAIL 10\");\n+      }\n+    catch (ClassCastException x)\n+      {\n+        System.out.println(\"ok 10\");\n+      }\n+    \n+    IA ia3;\n+    \n+    try\n+      {\n+        ia3 = (IB) obj_ca;\n+        System.out.println(\"FAIL 11\");\n+      }\n+    catch (ClassCastException x)\n+      {\n+        System.out.println(\"ok 11\");\n+      }\n+      \n+    /* _Jv_LookupInterfaceMethod */\n+    Object obj_cb = new CB();\n+    \n+    IB ib = (IB) obj_cb;\n+    ib.b();\n+    if (ib.a().equalsIgnoreCase(\"CB a()\"))\n+      System.out.println(\"ok 12\");\n+    else\n+      System.out.println(\"FAIL 12\");\n+      \n+    IC ic = new CD();\n+    if (ic.a().equalsIgnoreCase(\"CD a()\"))\n+      System.out.println(\"ok 13\");\n+    else\n+      System.out.println(\"FAIL 13\");\n+          \n+    if (ic.d() == 6)\n+      System.out.println(\"ok 14\");\n+    else\n+      System.out.println(\"FAIL 14\");\n+      \n+    Object ce = new CE();\n+    \n+    ib = (IB) ce;\n+    ID id = (ID) ce;\n+    \n+    if (ib.b().equals(\"CE b()\") && id.a().equals(\"CE a()\"))\n+      System.out.println(\"ok 15\");\n+    else\n+      System.out.println(\"FAIL 15\");\n+    \n+    String t = ((ID)ce).z();\n+    \n+    if (t.equalsIgnoreCase(\"CE z()\"))\n+      System.out.println(\"ok 16\");\n+    else\n+      System.out.println(\"FAIL 16\");\n+      \n+    /* Array types */\n+    \n+    Object[] obj_a = new CC[10];\n+    try\n+      {\n+        CB[] ca_a = (CB[]) obj_a;\n+        System.out.println(\"ok 17\");\n+      }\n+    catch (ClassCastException x)\n+      {\n+        System.out.println(\"FAIL 17\");\n+      }\n+    \n+    if (obj_a instanceof IB[])\n+      {\n+        System.out.println(\"ok 18\");      \n+      }\n+    else\n+      {\n+        System.out.println(\"FAIL 18\");      \n+      }\n+    \n+    IB[] ib_a = new CD[5];\n+    try \n+      {\n+        CD[] cd_a = (CD[]) ib_a;\n+        System.out.println(\"ok 19\");\n+      }\n+    catch (ClassCastException x)\n+      {\n+        System.out.println(\"FAIL 19\");\n+      }\n+      \n+    CA[] ca_a;\n+\n+    try \n+      {\n+        ca_a = (CA[]) ib_a;\n+        System.out.println(\"FAIL 20\");\n+      }\n+    catch (ClassCastException x)\n+      {\n+        System.out.println(\"ok 20\");\n+      }\n+\n+    \n+    /* Primitive types */\n+    \n+    short[] short_a = new short[100];\n+    \n+    try\n+      {\n+        obj = short_a;\n+        System.out.println(\"ok 21\");\n+      }\n+    catch (ClassCastException x)\n+      {\n+        System.out.println(\"FAIL 21\");      \n+      }\n+\n+    try\n+      {\n+        short[] short_b = (short[]) obj;\n+        System.out.println(\"ok 22\");\n+      }\n+    catch (ClassCastException x)\n+      {\n+        System.out.println(\"FAIL 22\");      \n+      }\n+\n+    int[] short_b;\n+\n+    try\n+      {\n+        short_b = (int[]) obj;\n+        System.out.println(\"FAIL 23\");\n+      }\n+    catch (ClassCastException x)\n+      {\n+        System.out.println(\"ok 23\");      \n+      }\n+\n+    Object obj1 = new int[25];\n+    \n+    if (obj1 instanceof short[])\n+      {\n+        System.out.println(\"FAIL 24\");      \n+      }\n+    else\n+      {\n+        System.out.println(\"ok 24\");\n+      }\n+    \n+    if (obj1 instanceof int[])\n+      {\n+        System.out.println(\"ok 25\");\n+      }\n+    else\n+      {\n+        System.out.println(\"FAIL 25\");\n+      }\n+      \n+    /* null assignment */\n+    \n+    CA obj_ca2 = null;\n+    \n+    if (obj_ca2 instanceof CA)\n+      {\n+        System.out.println(\"FAIL 26\");        \n+      }\n+    else\n+      {\n+        System.out.println(\"ok 26\");\n+      }\n+  }  \n+}"}, {"sha": "1582e3afa04e900118e07575eab969e45fdb29f8", "filename": "libjava/testsuite/libjava.lang/InterfaceDispatch.out", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/432ba90f48ef33fc168b2b92f3f5e5593dce9ef6/libjava%2Ftestsuite%2Flibjava.lang%2FInterfaceDispatch.out", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/432ba90f48ef33fc168b2b92f3f5e5593dce9ef6/libjava%2Ftestsuite%2Flibjava.lang%2FInterfaceDispatch.out", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.lang%2FInterfaceDispatch.out?ref=432ba90f48ef33fc168b2b92f3f5e5593dce9ef6", "patch": "@@ -0,0 +1,27 @@\n+ok 1\n+ok 2a\n+ok 2b\n+ok 3\n+ok 4\n+ok 5\n+ok 6\n+ok 7\n+ok 8\n+ok 9\n+ok 10\n+ok 11\n+ok 12\n+ok 13\n+ok 14\n+ok 15\n+ok 16\n+ok 17\n+ok 18\n+ok 19\n+ok 20\n+ok 21\n+ok 22\n+ok 23\n+ok 24\n+ok 25\n+ok 26"}]}