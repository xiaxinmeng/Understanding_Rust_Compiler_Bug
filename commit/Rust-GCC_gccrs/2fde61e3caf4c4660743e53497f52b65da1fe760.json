{"sha": "2fde61e3caf4c4660743e53497f52b65da1fe760", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmZkZTYxZTNjYWY0YzQ2NjA3NDNlNTM0OTdmNTJiNjVkYTFmZTc2MA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2015-07-23T07:29:53Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2015-07-23T07:29:53Z"}, "message": "re PR middle-end/66916 (FAIL: gcc.target/arm/pr43920-2.c object-size text <= 54)\n\n2015-07-23  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/66916\n\t* match.pd: Guard widen and sign-change comparison simplification\n\twith single_use.\n\nFrom-SVN: r226089", "tree": {"sha": "d788fc2511ee2c1b72d161e3e0df58b8c32787a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d788fc2511ee2c1b72d161e3e0df58b8c32787a7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2fde61e3caf4c4660743e53497f52b65da1fe760", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fde61e3caf4c4660743e53497f52b65da1fe760", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2fde61e3caf4c4660743e53497f52b65da1fe760", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fde61e3caf4c4660743e53497f52b65da1fe760/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "28537a45de776c6d4eb4a21447374e27acc4573d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28537a45de776c6d4eb4a21447374e27acc4573d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/28537a45de776c6d4eb4a21447374e27acc4573d"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "51649b63c2b7326b9d3d2bb8160202993267ca6a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fde61e3caf4c4660743e53497f52b65da1fe760/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fde61e3caf4c4660743e53497f52b65da1fe760/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2fde61e3caf4c4660743e53497f52b65da1fe760", "patch": "@@ -1,3 +1,9 @@\n+2015-07-23  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/66916\n+\t* match.pd: Guard widen and sign-change comparison simplification\n+\twith single_use.\n+\n 2015-07-23  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/66945"}, {"sha": "9cf02783c46c273e434c3252a659b59e300974f5", "filename": "gcc/match.pd", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fde61e3caf4c4660743e53497f52b65da1fe760/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fde61e3caf4c4660743e53497f52b65da1fe760/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=2fde61e3caf4c4660743e53497f52b65da1fe760", "patch": "@@ -1679,7 +1679,8 @@ along with GCC; see the file COPYING3.  If not see\n \t  type on targets that require function pointer canonicalization.  */\n        && !(targetm.have_canonicalize_funcptr_for_compare ()\n \t    && TREE_CODE (TREE_TYPE (@00)) == POINTER_TYPE\n-\t    && TREE_CODE (TREE_TYPE (TREE_TYPE (@00))) == FUNCTION_TYPE))\n+\t    && TREE_CODE (TREE_TYPE (TREE_TYPE (@00))) == FUNCTION_TYPE)\n+       && single_use (@0))\n    (if (TYPE_PRECISION (TREE_TYPE (@00)) == TYPE_PRECISION (TREE_TYPE (@0))\n \t&& (TREE_CODE (@10) == INTEGER_CST\n \t    || (@1 != @10 && types_match (TREE_TYPE (@10), TREE_TYPE (@00))))"}]}