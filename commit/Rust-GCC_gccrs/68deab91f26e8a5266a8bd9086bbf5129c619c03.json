{"sha": "68deab91f26e8a5266a8bd9086bbf5129c619c03", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjhkZWFiOTFmMjZlOGE1MjY2YThiZDkwODZiYmY1MTI5YzYxOWMwMw==", "commit": {"author": {"name": "Kriang Lerdsuwanakij", "email": "lerdsuwa@users.sourceforge.net", "date": "2003-12-29T11:00:36Z"}, "committer": {"name": "Kriang Lerdsuwanakij", "email": "lerdsuwa@gcc.gnu.org", "date": "2003-12-29T11:00:36Z"}, "message": "re PR c++/13289 (ICE in regenerate_decl_from_template on recursive template)\n\n\tPR c++/13289\n\t* semantics.c (finish_id_expression): Only check if the type of\n\ta template argument is integral or enumeration when it is not\n\tdependent.\n\n\t* g++.dg/parse/nontype1.C: New test.\n\nFrom-SVN: r75200", "tree": {"sha": "cb8949882a5240d28c6cf2f770ade30360c02fd5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cb8949882a5240d28c6cf2f770ade30360c02fd5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/68deab91f26e8a5266a8bd9086bbf5129c619c03", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68deab91f26e8a5266a8bd9086bbf5129c619c03", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68deab91f26e8a5266a8bd9086bbf5129c619c03", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68deab91f26e8a5266a8bd9086bbf5129c619c03/comments", "author": null, "committer": null, "parents": [{"sha": "2f9afd51aab933f9a70393023a98282698485209", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f9afd51aab933f9a70393023a98282698485209", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f9afd51aab933f9a70393023a98282698485209"}], "stats": {"total": 22, "additions": 22, "deletions": 0}, "files": [{"sha": "72c0f5f9bc2d4edc856ab9e5a0c39d278ff3e554", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68deab91f26e8a5266a8bd9086bbf5129c619c03/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68deab91f26e8a5266a8bd9086bbf5129c619c03/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=68deab91f26e8a5266a8bd9086bbf5129c619c03", "patch": "@@ -1,3 +1,10 @@\n+2003-12-29  Kriang Lerdsuwanakij  <lerdsuwa@users.sourceforge.net>\n+\n+\tPR c++/13289\n+\t* semantics.c (finish_id_expression): Only check if the type of\n+\ta template argument is integral or enumeration when it is not\n+\tdependent.\n+\n 2003-12-29  Kriang Lerdsuwanakij  <lerdsuwa@users.sourceforge.net>\n \n \tPR c++/12403"}, {"sha": "4cf0261aff29f1a44e9521e864e9323886279d97", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68deab91f26e8a5266a8bd9086bbf5129c619c03/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68deab91f26e8a5266a8bd9086bbf5129c619c03/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=68deab91f26e8a5266a8bd9086bbf5129c619c03", "patch": "@@ -2400,6 +2400,7 @@ finish_id_expression (tree id_expression,\n       if (TREE_CODE (decl) == TEMPLATE_PARM_INDEX)\n \tdecl = TEMPLATE_PARM_DECL (decl);\n       if (integral_constant_expression_p \n+\t  && !dependent_type_p (TREE_TYPE (decl))\n \t  && !INTEGRAL_OR_ENUMERATION_TYPE_P (TREE_TYPE (decl))) \n \t{\n \t  if (!allow_non_integral_constant_expression_p)"}, {"sha": "2cccfddf358291955fd4bc604bea62d52166eec6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68deab91f26e8a5266a8bd9086bbf5129c619c03/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68deab91f26e8a5266a8bd9086bbf5129c619c03/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=68deab91f26e8a5266a8bd9086bbf5129c619c03", "patch": "@@ -1,3 +1,8 @@\n+2003-12-29  Kriang Lerdsuwanakij  <lerdsuwa@users.sourceforge.net>\n+\n+\tPR c++/13289\n+\t* g++.dg/parse/nontype1.C: New test.\n+\n 2003-12-29  Kriang Lerdsuwanakij  <lerdsuwa@users.sourceforge.net>\n \n \tPR c++/12403"}, {"sha": "e721700af50c2a86e70dd26d30f0a2d84bf6c2cb", "filename": "gcc/testsuite/g++.dg/parse/nontype1.C", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68deab91f26e8a5266a8bd9086bbf5129c619c03/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fnontype1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68deab91f26e8a5266a8bd9086bbf5129c619c03/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fnontype1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fnontype1.C?ref=68deab91f26e8a5266a8bd9086bbf5129c619c03", "patch": "@@ -0,0 +1,9 @@\n+// Copyright (C) 2003 Free Software Foundation\n+// Contributed by Kriang Lerdsuwanakij <lerdsuwa@users.sourceforge.net>\n+// { dg-do compile }\n+\n+// PR c++/13289: Incorrectly reject non-type template argument that has\n+// dependent type\n+\n+template <class T, T t> class C {};\n+template <class T, T t> class D { C<T, t-1> c; };"}]}