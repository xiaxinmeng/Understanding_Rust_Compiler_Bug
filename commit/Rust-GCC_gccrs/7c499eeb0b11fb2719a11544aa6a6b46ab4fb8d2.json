{"sha": "7c499eeb0b11fb2719a11544aa6a6b46ab4fb8d2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2M0OTllZWIwYjExZmIyNzE5YTExNTQ0YWE2YTZiNDZhYjRmYjhkMg==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2006-05-27T12:05:58Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2006-05-27T12:05:58Z"}, "message": "configure.host: If the CPU provides atomic builtins select generic/atomic_builtins/atomicity.h.\n\n2006-05-27  Paolo Carlini  <pcarlini@suse.de>\n\n\t* configure.host: If the CPU provides atomic builtins select\n\tgeneric/atomic_builtins/atomicity.h.\n\t* config/cpu/generic/atomic_builtins/atomicity.h: Add.\n\t* config/cpu/powerpc/atomicity.h: Remove.\n\t* config/cpu/ia64/atomicity.h: Likewise.\n\t* config/cpu/alpha/atomicity.h: Likewise.\n\t* config/cpu/s390/atomicity.h: Likewise.\n\nFrom-SVN: r114155", "tree": {"sha": "62c10ed4b9052df35132d183557756c7df600dbe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/62c10ed4b9052df35132d183557756c7df600dbe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7c499eeb0b11fb2719a11544aa6a6b46ab4fb8d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c499eeb0b11fb2719a11544aa6a6b46ab4fb8d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c499eeb0b11fb2719a11544aa6a6b46ab4fb8d2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c499eeb0b11fb2719a11544aa6a6b46ab4fb8d2/comments", "author": null, "committer": null, "parents": [{"sha": "7936f3e337aca78ec76497c598b4ecef7bb2123e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7936f3e337aca78ec76497c598b4ecef7bb2123e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7936f3e337aca78ec76497c598b4ecef7bb2123e"}], "stats": {"total": 168, "additions": 25, "deletions": 143}, "files": [{"sha": "aea6f284c28d5660a44097c4d533ed62043ed0c1", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c499eeb0b11fb2719a11544aa6a6b46ab4fb8d2/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c499eeb0b11fb2719a11544aa6a6b46ab4fb8d2/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=7c499eeb0b11fb2719a11544aa6a6b46ab4fb8d2", "patch": "@@ -1,3 +1,13 @@\n+2006-05-27  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* configure.host: If the CPU provides atomic builtins select\n+\tgeneric/atomic_builtins/atomicity.h.\n+\t* config/cpu/generic/atomic_builtins/atomicity.h: Add.\n+\t* config/cpu/powerpc/atomicity.h: Remove.\n+\t* config/cpu/ia64/atomicity.h: Likewise.\n+\t* config/cpu/alpha/atomicity.h: Likewise.\n+\t* config/cpu/s390/atomicity.h: Likewise.\n+\n 2006-05-26  Carlos O'Donell  <carlos@codesourcery.com>\n \n \t* Makefile.am: Add install-html target. Add install-html to .PHONY"}, {"sha": "d288483621af9727a3d187e1eb0a6def873c2e1f", "filename": "libstdc++-v3/config/cpu/alpha/atomicity.h", "status": "removed", "additions": 0, "deletions": 46, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7936f3e337aca78ec76497c598b4ecef7bb2123e/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Falpha%2Fatomicity.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7936f3e337aca78ec76497c598b4ecef7bb2123e/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Falpha%2Fatomicity.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Falpha%2Fatomicity.h?ref=7936f3e337aca78ec76497c598b4ecef7bb2123e", "patch": "@@ -1,46 +0,0 @@\n-// Low-level functions for atomic operations: Alpha version  -*- C++ -*-\n-\n-// Copyright (C) 1999, 2000, 2001, 2003, 2004, 2005\n-// Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-#include <bits/atomicity.h>\n-\n-_GLIBCXX_BEGIN_NAMESPACE(__gnu_cxx)\n-\n-  _Atomic_word\n-  __attribute__ ((__unused__))\n-  __exchange_and_add(volatile _Atomic_word* __mem, int __val)\n-  { return __sync_fetch_and_add(__mem, __val); }\n-\n-  void\n-  __attribute__ ((__unused__))\n-  __atomic_add(volatile _Atomic_word* __mem, int __val)\n-  { __sync_fetch_and_add(__mem, __val); }\n-\n-_GLIBCXX_END_NAMESPACE\n-"}, {"sha": "c6cf812c8f8c31a226e8d57456c9bf3c82b37845", "filename": "libstdc++-v3/config/cpu/generic/atomic_builtins/atomicity.h", "status": "renamed", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c499eeb0b11fb2719a11544aa6a6b46ab4fb8d2/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fgeneric%2Fatomic_builtins%2Fatomicity.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c499eeb0b11fb2719a11544aa6a6b46ab4fb8d2/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fgeneric%2Fatomic_builtins%2Fatomicity.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fgeneric%2Fatomic_builtins%2Fatomicity.h?ref=7c499eeb0b11fb2719a11544aa6a6b46ab4fb8d2", "patch": "@@ -1,7 +1,7 @@\n-// Low-level functions for atomic operations: IA64 version  -*- C++ -*-\n+// Low-level functions for atomic operations: version for CPUs providing\n+// atomic builtins -*- C++ -*-\n \n-// Copyright (C) 2000, 2001, 2003, 2004, 2005\n-// Free Software Foundation, Inc.\n+// Copyright (C) 2006 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the", "previous_filename": "libstdc++-v3/config/cpu/ia64/atomicity.h"}, {"sha": "dbd859208a36c575cd92efcc0754e7cee66e942a", "filename": "libstdc++-v3/config/cpu/powerpc/atomicity.h", "status": "removed", "additions": 0, "deletions": 45, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7936f3e337aca78ec76497c598b4ecef7bb2123e/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fpowerpc%2Fatomicity.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7936f3e337aca78ec76497c598b4ecef7bb2123e/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fpowerpc%2Fatomicity.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fpowerpc%2Fatomicity.h?ref=7936f3e337aca78ec76497c598b4ecef7bb2123e", "patch": "@@ -1,45 +0,0 @@\n-// Low-level functions for atomic operations: PowerPC version  -*- C++ -*-\n-\n-// Copyright (C) 1999, 2000, 2001, 2003, 2004, 2005\n-// Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-#include <bits/atomicity.h>\n-\n-_GLIBCXX_BEGIN_NAMESPACE(__gnu_cxx)\n-\n-  _Atomic_word\n-  __attribute__ ((__unused__))\n-  __exchange_and_add(volatile _Atomic_word* __mem, int __val)\n-  { return __sync_fetch_and_add(__mem, __val); }\n-  \n-  void\n-  __attribute__ ((__unused__))\n-  __atomic_add(volatile _Atomic_word* __mem, int __val)\n-  { __sync_fetch_and_add(__mem, __val); }\n-\n-_GLIBCXX_END_NAMESPACE"}, {"sha": "631795eb23af7ba55f71d1118f7a14c6d597bb68", "filename": "libstdc++-v3/config/cpu/s390/atomicity.h", "status": "removed", "additions": 0, "deletions": 44, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7936f3e337aca78ec76497c598b4ecef7bb2123e/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fs390%2Fatomicity.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7936f3e337aca78ec76497c598b4ecef7bb2123e/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fs390%2Fatomicity.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fs390%2Fatomicity.h?ref=7936f3e337aca78ec76497c598b4ecef7bb2123e", "patch": "@@ -1,44 +0,0 @@\n-// Low-level functions for atomic operations: S/390 version  -*- C++ -*-\n-\n-// Copyright (C) 2001, 2003, 2004, 2005 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-#include <bits/atomicity.h>\n-\n-_GLIBCXX_BEGIN_NAMESPACE(__gnu_cxx)\n-\n-  _Atomic_word \n-  __attribute__ ((__unused__))\n-  __exchange_and_add(volatile _Atomic_word* __mem, int __val)\n-  { return __sync_fetch_and_add(__mem, __val); }\n-  \n-  void\n-  __attribute__ ((__unused__))\n-  __atomic_add(volatile _Atomic_word* __mem, int __val)\n-  { __sync_fetch_and_add(__mem, __val); }\n-\n-_GLIBCXX_END_NAMESPACE"}, {"sha": "9dd98372c7ff0cd8d7ac5d8f7077929839d0984b", "filename": "libstdc++-v3/configure.host", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c499eeb0b11fb2719a11544aa6a6b46ab4fb8d2/libstdc%2B%2B-v3%2Fconfigure.host", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c499eeb0b11fb2719a11544aa6a6b46ab4fb8d2/libstdc%2B%2B-v3%2Fconfigure.host", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure.host?ref=7c499eeb0b11fb2719a11544aa6a6b46ab4fb8d2", "patch": "@@ -142,11 +142,18 @@ cpu_include_dir=cpu/${try_cpu}\n abi_baseline_pair=${try_cpu}-${host_os}\n unset try_cpu\n \n-if test -f ${glibcxx_srcdir}/config/${cpu_include_dir}/atomicity.h ; then\n-  atomicity_dir=$cpu_include_dir\n-else\n-  atomicity_dir=\"cpu/generic\"\n-fi\n+case \"${host_cpu}\" in\n+  alpha* | ia64 | powerpc* | rs6000 | s390*)\n+    atomicity_dir=\"cpu/generic/atomic_builtins\"\n+    ;;\n+  *)\n+    if test -f ${glibcxx_srcdir}/config/${cpu_include_dir}/atomicity.h ; then\n+      atomicity_dir=$cpu_include_dir\n+    else\n+      atomicity_dir=\"cpu/generic\"\n+    fi\n+    ;;\n+esac\n \n if test -f ${glibcxx_srcdir}/config/${cpu_include_dir}/cxxabi_tweaks.h ; then\n   abi_tweaks_dir=$cpu_include_dir"}]}