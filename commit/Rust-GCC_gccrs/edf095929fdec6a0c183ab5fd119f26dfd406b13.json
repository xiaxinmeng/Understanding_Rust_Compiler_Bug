{"sha": "edf095929fdec6a0c183ab5fd119f26dfd406b13", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWRmMDk1OTI5ZmRlYzZhMGMxODNhYjVmZDExOWYyNmRmZDQwNmIxMw==", "commit": {"author": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2019-08-21T07:53:25Z"}, "committer": {"name": "Iain Buclaw", "email": "ibuclaw@gcc.gnu.org", "date": "2019-08-21T07:53:25Z"}, "message": "d: Fix ICE: Segmentation fault in build_function_type at gcc/tree.c:8539\n\ngcc/d/ChangeLog:\n\n\tPR d/90446\n\t* d-lang.cc (d_type_for_mode): Check for all internal __intN types.\n\t(d_type_for_size): Likewise.\n\nFrom-SVN: r274767", "tree": {"sha": "e3615caa158373330d19c3628c3ea9267cd540aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e3615caa158373330d19c3628c3ea9267cd540aa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/edf095929fdec6a0c183ab5fd119f26dfd406b13", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/edf095929fdec6a0c183ab5fd119f26dfd406b13", "html_url": "https://github.com/Rust-GCC/gccrs/commit/edf095929fdec6a0c183ab5fd119f26dfd406b13", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/edf095929fdec6a0c183ab5fd119f26dfd406b13/comments", "author": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7610ae806e4f611379766c1dca98e360b206665c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7610ae806e4f611379766c1dca98e360b206665c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7610ae806e4f611379766c1dca98e360b206665c"}], "stats": {"total": 28, "additions": 28, "deletions": 0}, "files": [{"sha": "41ea48e8b158121a8565fcff05ebf662cee86fbc", "filename": "gcc/d/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edf095929fdec6a0c183ab5fd119f26dfd406b13/gcc%2Fd%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edf095929fdec6a0c183ab5fd119f26dfd406b13/gcc%2Fd%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2FChangeLog?ref=edf095929fdec6a0c183ab5fd119f26dfd406b13", "patch": "@@ -1,3 +1,9 @@\n+2019-08-20  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\tPR d/90446\n+\t* d-lang.cc (d_type_for_mode): Check for all internal __intN types.\n+\t(d_type_for_size): Likewise.\n+\n 2019-08-20  Iain Buclaw  <ibuclaw@gdcproject.org>\n \n \tPR d/90445"}, {"sha": "db0db0e71dc75aa728438ff81754e950898244ec", "filename": "gcc/d/d-lang.cc", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edf095929fdec6a0c183ab5fd119f26dfd406b13/gcc%2Fd%2Fd-lang.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edf095929fdec6a0c183ab5fd119f26dfd406b13/gcc%2Fd%2Fd-lang.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fd-lang.cc?ref=edf095929fdec6a0c183ab5fd119f26dfd406b13", "patch": "@@ -1360,6 +1360,17 @@ d_type_for_mode (machine_mode mode, int unsignedp)\n   if (mode == TYPE_MODE (build_pointer_type (d_int_type)))\n     return build_pointer_type (d_int_type);\n \n+  for (int i = 0; i < NUM_INT_N_ENTS; i ++)\n+    {\n+      if (int_n_enabled_p[i] && mode == int_n_data[i].m)\n+\t{\n+\t  if (unsignedp)\n+\t    return int_n_trees[i].unsigned_type;\n+\t  else\n+\t    return int_n_trees[i].signed_type;\n+\t}\n+    }\n+\n   if (COMPLEX_MODE_P (mode))\n     {\n       machine_mode inner_mode;\n@@ -1408,6 +1419,17 @@ d_type_for_size (unsigned bits, int unsignedp)\n   if (bits <= TYPE_PRECISION (d_cent_type))\n     return unsignedp ? d_ucent_type : d_cent_type;\n \n+  for (int i = 0; i < NUM_INT_N_ENTS; i ++)\n+    {\n+      if (int_n_enabled_p[i] && bits == int_n_data[i].bitsize)\n+\t{\n+\t  if (unsignedp)\n+\t    return int_n_trees[i].unsigned_type;\n+\t  else\n+\t    return int_n_trees[i].signed_type;\n+\t}\n+    }\n+\n   return 0;\n }\n "}]}