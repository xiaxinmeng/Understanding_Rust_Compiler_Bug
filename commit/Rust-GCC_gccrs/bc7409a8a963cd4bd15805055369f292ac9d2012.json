{"sha": "bc7409a8a963cd4bd15805055369f292ac9d2012", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmM3NDA5YThhOTYzY2Q0YmQxNTgwNTA1NTM2OWYyOTJhYzlkMjAxMg==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2011-04-18T03:48:25Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2011-04-18T03:48:25Z"}, "message": "re PR libfortran/48602 (Invalid F conversion of G descriptor for values close to powers of 10)\n\n2011-04-17  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n\n\tPR libgfortran/48602\n\t* io/write_float.def (output_float_FMT_G): Use current rounding mode\n\tto set the rounding parameters. (output_float): Skip rounding\n\tif value is zero.\n\nFrom-SVN: r172634", "tree": {"sha": "349c765bf3bbfebaf502c1de1a22e495410412fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/349c765bf3bbfebaf502c1de1a22e495410412fd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bc7409a8a963cd4bd15805055369f292ac9d2012", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc7409a8a963cd4bd15805055369f292ac9d2012", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc7409a8a963cd4bd15805055369f292ac9d2012", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc7409a8a963cd4bd15805055369f292ac9d2012/comments", "author": null, "committer": null, "parents": [{"sha": "4ddd8a74ba5c23b5dd69d7b501a1d8c4ad053b4b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ddd8a74ba5c23b5dd69d7b501a1d8c4ad053b4b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ddd8a74ba5c23b5dd69d7b501a1d8c4ad053b4b"}], "stats": {"total": 36, "additions": 31, "deletions": 5}, "files": [{"sha": "f4b19f8b8638453c5191018a9ce145f390e5bfc5", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc7409a8a963cd4bd15805055369f292ac9d2012/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc7409a8a963cd4bd15805055369f292ac9d2012/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=bc7409a8a963cd4bd15805055369f292ac9d2012", "patch": "@@ -1,3 +1,10 @@\n+2011-04-17  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libgfortran/48602\n+\t* io/write_float.def (output_float_FMT_G): Use current rounding mode\n+\tto set the rounding parameters. (output_float): Skip rounding\n+\tif value is zero.\n+\t\n 2011-04-16  Janne Blomqvist  <jb@gcc.gnu.org>\n \n \t* intrinsics/date_and_time.c (date_and_time): Remove sprintf CPP"}, {"sha": "9e90d8094502a7f3460ff196348b9626a06c4b98", "filename": "libgfortran/io/write_float.def", "status": "modified", "additions": 24, "deletions": 5, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc7409a8a963cd4bd15805055369f292ac9d2012/libgfortran%2Fio%2Fwrite_float.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc7409a8a963cd4bd15805055369f292ac9d2012/libgfortran%2Fio%2Fwrite_float.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fwrite_float.def?ref=bc7409a8a963cd4bd15805055369f292ac9d2012", "patch": "@@ -221,6 +221,8 @@ output_float (st_parameter_dt *dtp, const fnode *f, char *buffer, size_t size,\n       internal_error (&dtp->common, \"Unexpected format token\");\n     }\n \n+  if (zero_flag)\n+    goto skip;\n   /* Round the value.  The value being rounded is an unsigned magnitude.\n      The ROUND_COMPATIBLE is rounding away from zero when there is a tie.  */\n   switch (dtp->u.p.current_unit->round_status)\n@@ -802,7 +804,8 @@ CALCULATE_EXP(16)\n    m >= 10**d-0.5                              Ew.d[Ee]\n \n    notes: for Gw.d ,  n' ' means 4 blanks\n-          for Gw.dEe, n' ' means e+2 blanks  */\n+\t  for Gw.dEe, n' ' means e+2 blanks\n+\t  for rounding modes adjustment, r, See Fortran F2008 10.7.5.2.2  */\n \n #define OUTPUT_FLOAT_FMT_G(x) \\\n static void \\\n@@ -814,7 +817,7 @@ output_float_FMT_G_ ## x (st_parameter_dt *dtp, const fnode *f, \\\n   int d = f->u.real.d;\\\n   int w = f->u.real.w;\\\n   fnode *newf;\\\n-  GFC_REAL_ ## x rexp_d;\\\n+  GFC_REAL_ ## x rexp_d, r = 0.5;\\\n   int low, high, mid;\\\n   int ubound, lbound;\\\n   char *p, pad = ' ';\\\n@@ -823,10 +826,26 @@ output_float_FMT_G_ ## x (st_parameter_dt *dtp, const fnode *f, \\\n \\\n   save_scale_factor = dtp->u.p.scale_factor;\\\n   newf = (fnode *) get_mem (sizeof (fnode));\\\n+\\\n+  switch (dtp->u.p.current_unit->round_status)\\\n+    {\\\n+      case ROUND_ZERO:\\\n+\tr = sign_bit ? 0.0 : 1.0;\\\n+\tbreak;\\\n+      case ROUND_UP:\\\n+\tr = 1.0;\\\n+\tbreak;\\\n+      case ROUND_DOWN:\\\n+\tr = 0.0;\\\n+\tbreak;\\\n+      default:\\\n+\tbreak;\\\n+    }\\\n \\\n   rexp_d = calculate_exp_ ## x (-d);\\\n-  if ((m > 0.0 && m < 0.1 - 0.05 * rexp_d) || (rexp_d * (m + 0.5) >= 1.0) ||\\\n-      ((m == 0.0) && !(compile_options.allow_std & GFC_STD_F2003)))\\\n+  if ((m > 0.0 && ((m < 0.1 - 0.1 * r * rexp_d) || (rexp_d * (m + r) >= 1.0)))\\\n+      || ((m == 0.0) && !(compile_options.allow_std\\\n+\t\t\t  & (GFC_STD_F2003 | GFC_STD_F2008))))\\\n     { \\\n       newf->format = FMT_E;\\\n       newf->u.real.w = w;\\\n@@ -847,7 +866,7 @@ output_float_FMT_G_ ## x (st_parameter_dt *dtp, const fnode *f, \\\n       GFC_REAL_ ## x temp;\\\n       mid = (low + high) / 2;\\\n \\\n-      temp = (calculate_exp_ ## x (mid - 1) * (1 - 0.5 * rexp_d));\\\n+      temp = (calculate_exp_ ## x (mid - 1) * (1 - r * rexp_d));\\\n \\\n       if (m < temp)\\\n         { \\"}]}