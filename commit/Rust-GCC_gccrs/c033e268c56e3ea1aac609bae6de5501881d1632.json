{"sha": "c033e268c56e3ea1aac609bae6de5501881d1632", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzAzM2UyNjhjNTZlM2VhMWFhYzYwOWJhZTZkZTU1MDE4ODFkMTYzMg==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2001-04-12T05:25:55Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2001-04-12T05:25:55Z"}, "message": "recog.c (general_operand, [...]): Require CONST_INTs to be sign-extended values for their modes.\n\n* recog.c (general_operand, immediate_operand,\nnonmemory_operand): Require CONST_INTs to be sign-extended\nvalues for their modes.\n\nFrom-SVN: r41286", "tree": {"sha": "109638b26bba38caeb1b23b0c8ca91771240a1a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/109638b26bba38caeb1b23b0c8ca91771240a1a5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c033e268c56e3ea1aac609bae6de5501881d1632", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c033e268c56e3ea1aac609bae6de5501881d1632", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c033e268c56e3ea1aac609bae6de5501881d1632", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c033e268c56e3ea1aac609bae6de5501881d1632/comments", "author": null, "committer": null, "parents": [{"sha": "691073076ba2bdceb294db095293a0453489ab0f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/691073076ba2bdceb294db095293a0453489ab0f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/691073076ba2bdceb294db095293a0453489ab0f"}], "stats": {"total": 18, "additions": 18, "deletions": 0}, "files": [{"sha": "20cf366553d255b9a8f01a64d8d7d78a84a128ce", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c033e268c56e3ea1aac609bae6de5501881d1632/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c033e268c56e3ea1aac609bae6de5501881d1632/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c033e268c56e3ea1aac609bae6de5501881d1632", "patch": "@@ -1,3 +1,9 @@\n+2001-04-12  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\t* recog.c (general_operand, immediate_operand,\n+\tnonmemory_operand): Require CONST_INTs to be sign-extended\n+\tvalues for their modes.\n+\n 2001-04-12  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* expmed.c (store_bit_field): Truncate CONST_INTs."}, {"sha": "1c9fdf90e6e467f407eaf266e396c87a6c6dcdcd", "filename": "gcc/recog.c", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c033e268c56e3ea1aac609bae6de5501881d1632/gcc%2Frecog.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c033e268c56e3ea1aac609bae6de5501881d1632/gcc%2Frecog.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frecog.c?ref=c033e268c56e3ea1aac609bae6de5501881d1632", "patch": "@@ -1114,6 +1114,10 @@ general_operand (op, mode)\n       && GET_MODE_CLASS (mode) != MODE_PARTIAL_INT)\n     return 0;\n \n+  if (GET_CODE (op) == CONST_INT\n+      && trunc_int_for_mode (INTVAL (op), mode) != INTVAL (op))\n+    return 0;\n+\n   if (CONSTANT_P (op))\n     return ((GET_MODE (op) == VOIDmode || GET_MODE (op) == mode\n \t     || mode == VOIDmode)\n@@ -1290,6 +1294,10 @@ immediate_operand (op, mode)\n       && GET_MODE_CLASS (mode) != MODE_PARTIAL_INT)\n     return 0;\n \n+  if (GET_CODE (op) == CONST_INT\n+      && trunc_int_for_mode (INTVAL (op), mode) != INTVAL (op))\n+    return 0;\n+\n   /* Accept CONSTANT_P_RTX, since it will be gone by CSE1 and\n      result in 0/1.  It seems a safe assumption that this is\n      in range for everyone.  */\n@@ -1361,6 +1369,10 @@ nonmemory_operand (op, mode)\n \t  && GET_MODE_CLASS (mode) != MODE_PARTIAL_INT)\n \treturn 0;\n \n+      if (GET_CODE (op) == CONST_INT\n+\t  && trunc_int_for_mode (INTVAL (op), mode) != INTVAL (op))\n+\treturn 0;\n+\n       return ((GET_MODE (op) == VOIDmode || GET_MODE (op) == mode\n \t      || mode == VOIDmode)\n #ifdef LEGITIMATE_PIC_OPERAND_P"}]}