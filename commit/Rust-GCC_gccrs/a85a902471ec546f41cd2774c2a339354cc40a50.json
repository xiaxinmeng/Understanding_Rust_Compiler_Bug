{"sha": "a85a902471ec546f41cd2774c2a339354cc40a50", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTg1YTkwMjQ3MWVjNTQ2ZjQxY2QyNzc0YzJhMzM5MzU0Y2M0MGE1MA==", "commit": {"author": {"name": "Ulrich Weigand", "email": "uweigand@de.ibm.com", "date": "2004-11-03T17:56:48Z"}, "committer": {"name": "Ulrich Weigand", "email": "uweigand@gcc.gnu.org", "date": "2004-11-03T17:56:48Z"}, "message": "tree-ssa-loop-ivopts.c (get_address_cost): Offset zero does not cause extra costs.\n\n\t* tree-ssa-loop-ivopts.c (get_address_cost): Offset zero does not\n\tcause extra costs.  Generate canonical RTL.\n\nFrom-SVN: r90030", "tree": {"sha": "0ab1ae9c37b6843d8a8ae3785f234a14c9dcbe20", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0ab1ae9c37b6843d8a8ae3785f234a14c9dcbe20"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a85a902471ec546f41cd2774c2a339354cc40a50", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a85a902471ec546f41cd2774c2a339354cc40a50", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a85a902471ec546f41cd2774c2a339354cc40a50", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a85a902471ec546f41cd2774c2a339354cc40a50/comments", "author": null, "committer": null, "parents": [{"sha": "c4bda9f0cf757474d9970e3e9174a76eb31b0444", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4bda9f0cf757474d9970e3e9174a76eb31b0444", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4bda9f0cf757474d9970e3e9174a76eb31b0444"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "accb1339d92bd1219b4bb154652d6bda75374417", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a85a902471ec546f41cd2774c2a339354cc40a50/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a85a902471ec546f41cd2774c2a339354cc40a50/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a85a902471ec546f41cd2774c2a339354cc40a50", "patch": "@@ -1,3 +1,8 @@\n+2004-11-03  Ulrich Weigand  <uweigand@de.ibm.com>\n+\n+\t* tree-ssa-loop-ivopts.c (get_address_cost): Offset zero does not\n+\tcause extra costs.  Generate canonical RTL.\n+\n 2004-11-02  Daniel Berlin  <dberlin@dberlin.org>\n \n \t* lambda-code.c (lambda_compute_auxillary_space): Update comments."}, {"sha": "f457f7adf27dc8daee28ca97501741eb5cc8901c", "filename": "gcc/tree-ssa-loop-ivopts.c", "status": "modified", "additions": 5, "deletions": 10, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a85a902471ec546f41cd2774c2a339354cc40a50/gcc%2Ftree-ssa-loop-ivopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a85a902471ec546f41cd2774c2a339354cc40a50/gcc%2Ftree-ssa-loop-ivopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-ivopts.c?ref=a85a902471ec546f41cd2774c2a339354cc40a50", "patch": "@@ -2485,7 +2485,8 @@ get_address_cost (bool symbol_present, bool var_present,\n   s_offset = offset;\n \n   cost = 0;\n-  offset_p = (min_offset <= s_offset && s_offset <= max_offset);\n+  offset_p = (s_offset != 0\n+\t      && min_offset <= s_offset && s_offset <= max_offset);\n   ratio_p = (ratio != 1\n \t     && -MAX_RATIO <= ratio && ratio <= MAX_RATIO\n \t     && TEST_BIT (valid_mult, ratio + MAX_RATIO));\n@@ -2509,6 +2510,9 @@ get_address_cost (bool symbol_present, bool var_present,\n       if (ratio_p)\n \taddr = gen_rtx_fmt_ee (MULT, Pmode, addr, GEN_INT (rat));\n \n+      if (var_present)\n+\taddr = gen_rtx_fmt_ee (PLUS, Pmode, reg1, addr);\n+\n       if (symbol_present)\n \t{\n \t  base = gen_rtx_SYMBOL_REF (Pmode, ggc_strdup (\"\"));\n@@ -2517,15 +2521,6 @@ get_address_cost (bool symbol_present, bool var_present,\n \t\t\t\t  gen_rtx_fmt_ee (PLUS, Pmode,\n \t\t\t\t\t\t  base,\n \t\t\t\t\t\t  GEN_INT (off)));\n-\t  if (var_present)\n-\t    base = gen_rtx_fmt_ee (PLUS, Pmode, reg1, base);\n-\t}\n-\n-      else if (var_present)\n-\t{\n-\t  base = reg1;\n-\t  if (offset_p)\n-\t    base = gen_rtx_fmt_ee (PLUS, Pmode, base, GEN_INT (off));\n \t}\n       else if (offset_p)\n \tbase = GEN_INT (off);"}]}