{"sha": "7440af146e17a8ba291f11da9a94c1da28380f00", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzQ0MGFmMTQ2ZTE3YThiYTI5MWYxMWRhOWE5NGMxZGEyODM4MGYwMA==", "commit": {"author": {"name": "David S. Miller", "email": "davem@redhat.com", "date": "2002-05-10T20:13:02Z"}, "committer": {"name": "David S. Miller", "email": "davem@gcc.gnu.org", "date": "2002-05-10T20:13:02Z"}, "message": "rtl.h (INSN_ANNULLED_BRANCH_P): Accept INSN too, update comment.\n\n2002-05-10  David S. Miller  <davem@redhat.com>\n\n\t* rtl.h (INSN_ANNULLED_BRANCH_P): Accept INSN too, update comment.\n\t(struct rtx_def): Update unchanging flag comment.\n\t* doc/rtl.texi (INSN_ANNULLED_BRANCH_P): Update description.\n\t* reorg.c (delete_from_delay_list): INSN_ANNULLED_BRANCH_P needs\n\tto be handled to INSN too.\n\t(dbr_schedule): Likewise.\n\t* resource.c (next_insn_no_annul): Likewise.\n\nFrom-SVN: r53370", "tree": {"sha": "c9357a1185ad9ae5063e1437cad0b8c9c0177ffc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c9357a1185ad9ae5063e1437cad0b8c9c0177ffc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7440af146e17a8ba291f11da9a94c1da28380f00", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7440af146e17a8ba291f11da9a94c1da28380f00", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7440af146e17a8ba291f11da9a94c1da28380f00", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7440af146e17a8ba291f11da9a94c1da28380f00/comments", "author": null, "committer": null, "parents": [{"sha": "6c45cb0da4af9804a455bc701cbe7a87eec98990", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c45cb0da4af9804a455bc701cbe7a87eec98990", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c45cb0da4af9804a455bc701cbe7a87eec98990"}], "stats": {"total": 34, "additions": 24, "deletions": 10}, "files": [{"sha": "a4ef701ba34c11599c7239cdb80f72862ea2451f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7440af146e17a8ba291f11da9a94c1da28380f00/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7440af146e17a8ba291f11da9a94c1da28380f00/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7440af146e17a8ba291f11da9a94c1da28380f00", "patch": "@@ -1,5 +1,13 @@\n 2002-05-10  David S. Miller  <davem@redhat.com>\n \n+\t* rtl.h (INSN_ANNULLED_BRANCH_P): Accept INSN too, update comment.\n+\t(struct rtx_def): Update unchanging flag comment.\n+\t* doc/rtl.texi (INSN_ANNULLED_BRANCH_P): Update description.\n+\t* reorg.c (delete_from_delay_list): INSN_ANNULLED_BRANCH_P needs\n+\tto be handled to INSN too.\n+\t(dbr_schedule): Likewise.\n+\t* resource.c (next_insn_no_annul): Likewise.\n+\n \t* cse.c (rtx_cost): Remove multiplication by power of 2 special\n \tcasing.\n "}, {"sha": "bf90a7b5a134dcae3ed9c3bf4de3408dcd737655", "filename": "gcc/doc/rtl.texi", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7440af146e17a8ba291f11da9a94c1da28380f00/gcc%2Fdoc%2Frtl.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7440af146e17a8ba291f11da9a94c1da28380f00/gcc%2Fdoc%2Frtl.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Frtl.texi?ref=7440af146e17a8ba291f11da9a94c1da28380f00", "patch": "@@ -397,11 +397,13 @@ Stored in the @code{unchanging} field and printed as @samp{/u}.\n @findex INSN_ANNULLED_BRANCH_P\n @cindex @code{jump_insn} and @samp{/u}\n @cindex @code{call_insn} and @samp{/u}\n-@cindex @code{unchanging}, in @code{jump_insn} and @code{call_insn}\n+@cindex @code{insn} and @samp{/u}\n+@cindex @code{unchanging}, in @code{jump_insn}, @code{call_insn} and @code{insn}\n @item INSN_ANNULLED_BRANCH_P (@var{x})\n-In a @code{jump_insn} or @code{call_insn} indicates that the branch is\n-an annulling one.  See the discussion under @code{sequence} below.\n-Stored in the @code{unchanging} field and printed as @samp{/u}.\n+In a @code{jump_insn}, @code{call_insn}, or @code{insn} indicates\n+that the branch is an annulling one.  See the discussion under\n+@code{sequence} below. Stored in the @code{unchanging} field and\n+printed as @samp{/u}.\n \n @findex INSN_DEAD_CODE_P\n @cindex @code{insn} and @samp{/s}"}, {"sha": "34165ab4e727b17fc5a415fd2c65fdb184bced44", "filename": "gcc/reorg.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7440af146e17a8ba291f11da9a94c1da28380f00/gcc%2Freorg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7440af146e17a8ba291f11da9a94c1da28380f00/gcc%2Freorg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freorg.c?ref=7440af146e17a8ba291f11da9a94c1da28380f00", "patch": "@@ -618,7 +618,8 @@ delete_from_delay_slot (insn)\n   if (delay_list)\n     trial = emit_delay_sequence (trial, delay_list, XVECLEN (seq, 0) - 2);\n   else if (GET_CODE (trial) == JUMP_INSN\n-\t   || GET_CODE (trial) == CALL_INSN)\n+\t   || GET_CODE (trial) == CALL_INSN\n+\t   || GET_CODE (trial) == INSN)\n     INSN_ANNULLED_BRANCH_P (trial) = 0;\n \n   INSN_FROM_TARGET_P (insn) = 0;\n@@ -3630,7 +3631,8 @@ dbr_schedule (first, file)\n       rtx target;\n \n       if (GET_CODE (insn) == JUMP_INSN\n-\t  || GET_CODE (insn) == CALL_INSN)\n+\t  || GET_CODE (insn) == CALL_INSN\n+\t  || GET_CODE (insn) == INSN)\n \tINSN_ANNULLED_BRANCH_P (insn) = 0;\n       INSN_FROM_TARGET_P (insn) = 0;\n "}, {"sha": "6c20517a5f09ad10733f4d01c36d63e1a1c731e0", "filename": "gcc/resource.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7440af146e17a8ba291f11da9a94c1da28380f00/gcc%2Fresource.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7440af146e17a8ba291f11da9a94c1da28380f00/gcc%2Fresource.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fresource.c?ref=7440af146e17a8ba291f11da9a94c1da28380f00", "patch": "@@ -175,7 +175,9 @@ next_insn_no_annul (insn)\n     {\n       /* If INSN is an annulled branch, skip any insns from the target\n \t of the branch.  */\n-      if (GET_CODE (insn) == JUMP_INSN\n+      if ((GET_CODE (insn) == JUMP_INSN\n+\t   || GET_CODE (insn) == CALL_INSN\n+\t   || GET_CODE (insn) == INSN)\n \t  && INSN_ANNULLED_BRANCH_P (insn)\n \t  && NEXT_INSN (PREV_INSN (insn)) != insn)\n \t{"}, {"sha": "c164f743763db5a719ca84db93635382589b7cfb", "filename": "gcc/rtl.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7440af146e17a8ba291f11da9a94c1da28380f00/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7440af146e17a8ba291f11da9a94c1da28380f00/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=7440af146e17a8ba291f11da9a94c1da28380f00", "patch": "@@ -140,7 +140,7 @@ struct rtx_def\n      1 in a SYMBOL_REF if it addresses something in the per-function\n      constants pool.\n      1 in a CALL_INSN, NOTE, or EXPR_LIST for a const or pure call.\n-     1 in a JUMP_INSN or CALL_INSN of an annulling branch.  */\n+     1 in a JUMP_INSN, CALL_INSN, or INSN of an annulling branch.  */\n   unsigned int unchanging : 1;\n   /* 1 in a MEM or ASM_OPERANDS expression if the memory reference is volatile.\n      1 in an INSN, CALL_INSN, JUMP_INSN, CODE_LABEL, BARRIER, or NOTE\n@@ -537,9 +537,9 @@ do {\t\t\t\t\\\n #define SIBLING_CALL_P(RTX)\t\t\t\t\t\t\\\n   (RTL_FLAG_CHECK1(\"SIBLING_CALL_P\", (RTX), CALL_INSN)->jump)\n \n-/* 1 if RTX is an insn that is an annulling branch.  */\n+/* 1 if RTX is a jump_insn, call_insn, or insn that is an annulling branch.  */\n #define INSN_ANNULLED_BRANCH_P(RTX)\t\t\t\t\t\\\n-  (RTL_FLAG_CHECK2(\"INSN_ANNULLED_BRANCH_P\", (RTX), JUMP_INSN, CALL_INSN)->unchanging)\n+  (RTL_FLAG_CHECK3(\"INSN_ANNULLED_BRANCH_P\", (RTX), JUMP_INSN, CALL_INSN, INSN)->unchanging)\n \n /* 1 if RTX is an insn that is dead code.  Valid only for dead-code\n    elimination phase.  */"}]}