{"sha": "4c8e94abdccacc49ab9a087e34cd89cee8bc2f7e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGM4ZTk0YWJkY2NhY2M0OWFiOWEwODdlMzRjZDg5Y2VlOGJjMmY3ZQ==", "commit": {"author": {"name": "Gary Dismukes", "email": "dismukes@adacore.com", "date": "2007-08-16T12:17:54Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-08-16T12:17:54Z"}, "message": "cstand.adb (Create_Standard): Create an entity for a zero-sized type associated with...\n\n2007-08-16  Gary Dismukes  <dismukes@adacore.com>\n\n\t* cstand.adb (Create_Standard): Create an entity for a zero-sized type\n\tassociated with Standard_Debug_Renaming_Type, to be used as the type of\n\tthe special variables whose names provide debugger encodings for\n\trenaming declarations.\n\n\t* einfo.ads, einfo.adb (Debug_Renaming_Link): Change to return Node25.\n\t(Set_Debug_Renaming_Link): Change to set Node25.\n\t(Write_Field13_Name): Remove case for E_Enumeration_Literal.\n\t(Write_Field25_Name): Add case for E_Variable to output\n\t\"Debug_Renaming_Link\".\n\t(Write_Field23_Name): Correct the output string for \"Limited_View\".\n\n\t* exp_dbug.adb: Add with and use of Tbuild.\n\t(Debug_Renaming_Declaration): Replace creation of an enumeration type\n\tand literal with creation of a variable of type\n\tStandard_Debug_Renaming_Type whose name encodes both the renamed object\n\tand the entity of the renaming declaration.\n\t(Qualify_Entity_Name): Add the delayed qualification of the entity name\n\tpart of the name of a variable that has a Debug_Renaming_Link.\n\n\t* stand.ads (Standard_Debug_Renaming_Type): New Entity_Id denoting a\n\tspecial type to be associated with variables that provide debugger\n\tencodings for renaming declarations.\n\nFrom-SVN: r127537", "tree": {"sha": "120fbb0d2064596801428c20635d14e66ba38429", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/120fbb0d2064596801428c20635d14e66ba38429"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4c8e94abdccacc49ab9a087e34cd89cee8bc2f7e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c8e94abdccacc49ab9a087e34cd89cee8bc2f7e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c8e94abdccacc49ab9a087e34cd89cee8bc2f7e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c8e94abdccacc49ab9a087e34cd89cee8bc2f7e/comments", "author": {"login": "dismukes", "id": 50880541, "node_id": "MDQ6VXNlcjUwODgwNTQx", "avatar_url": "https://avatars.githubusercontent.com/u/50880541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dismukes", "html_url": "https://github.com/dismukes", "followers_url": "https://api.github.com/users/dismukes/followers", "following_url": "https://api.github.com/users/dismukes/following{/other_user}", "gists_url": "https://api.github.com/users/dismukes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dismukes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dismukes/subscriptions", "organizations_url": "https://api.github.com/users/dismukes/orgs", "repos_url": "https://api.github.com/users/dismukes/repos", "events_url": "https://api.github.com/users/dismukes/events{/privacy}", "received_events_url": "https://api.github.com/users/dismukes/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c07fdd94f46a274c04563cf69c62e87d1727936d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c07fdd94f46a274c04563cf69c62e87d1727936d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c07fdd94f46a274c04563cf69c62e87d1727936d"}], "stats": {"total": 205, "additions": 140, "deletions": 65}, "files": [{"sha": "770ce599a38c85b963e7f7de58295d267a51c44f", "filename": "gcc/ada/cstand.adb", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c8e94abdccacc49ab9a087e34cd89cee8bc2f7e/gcc%2Fada%2Fcstand.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c8e94abdccacc49ab9a087e34cd89cee8bc2f7e/gcc%2Fada%2Fcstand.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcstand.adb?ref=4c8e94abdccacc49ab9a087e34cd89cee8bc2f7e", "patch": "@@ -927,6 +927,28 @@ package body CStand is\n       Set_Directly_Designated_Type (Standard_A_Char, Standard_Character);\n       Make_Name     (Standard_A_Char, \"access_character\");\n \n+      --  Standard_Debug_Renaming_Type is used for the special objects created\n+      --  to encode the names occurring in renaming declarations for use by the\n+      --  debugger (see exp_dbug.adb). The type is a zero-sized subtype of\n+      --  Standard.Integer.\n+\n+      Standard_Debug_Renaming_Type := New_Standard_Entity;\n+\n+      Set_Ekind (Standard_Debug_Renaming_Type, E_Signed_Integer_Subtype);\n+      Set_Scope (Standard_Debug_Renaming_Type, Standard_Standard);\n+      Set_Etype (Standard_Debug_Renaming_Type, Base_Type (Standard_Integer));\n+      Init_Esize         (Standard_Debug_Renaming_Type, 0);\n+      Init_RM_Size       (Standard_Debug_Renaming_Type, 0);\n+      Set_Size_Known_At_Compile_Time (Standard_Debug_Renaming_Type);\n+      Set_Integer_Bounds (Standard_Debug_Renaming_Type,\n+        Typ => Base_Type (Standard_Debug_Renaming_Type),\n+        Lb  => Uint_1,\n+        Hb  => Uint_0);\n+      Set_Is_Constrained (Standard_Debug_Renaming_Type);\n+      Set_Has_Size_Clause (Standard_Debug_Renaming_Type);\n+\n+      Make_Name      (Standard_Debug_Renaming_Type, \"_renaming_type\");\n+\n       --  Note on type names. The type names for the following special types\n       --  are constructed so that they will look reasonable should they ever\n       --  appear in error messages etc, although in practice the use of the"}, {"sha": "cbfb4a66674ec3934b2bab2d01cf433eb1c2cbfe", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c8e94abdccacc49ab9a087e34cd89cee8bc2f7e/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c8e94abdccacc49ab9a087e34cd89cee8bc2f7e/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=4c8e94abdccacc49ab9a087e34cd89cee8bc2f7e", "patch": "@@ -106,7 +106,6 @@ package body Einfo is\n \n    --    Corresponding_Equality          Node13\n    --    Component_Clause                Node13\n-   --    Debug_Renaming_Link             Node13\n    --    Elaboration_Entity              Node13\n    --    Extra_Accessibility             Node13\n    --    RM_Size                         Uint13\n@@ -214,6 +213,7 @@ package body Einfo is\n    --    Abstract_Interface_Alias        Node25\n    --    Abstract_Interfaces             Elist25\n    --    Current_Use_Clause              Node25\n+   --    Debug_Renaming_Link             Node25\n    --    DT_Offset_To_Top_Func           Node25\n    --    Task_Body_Procedure             Node25\n \n@@ -741,7 +741,7 @@ package body Einfo is\n \n    function Debug_Renaming_Link (Id : E) return E is\n    begin\n-      return Node13 (Id);\n+      return Node25 (Id);\n    end Debug_Renaming_Link;\n \n    function Default_Expr_Function (Id : E) return E is\n@@ -2997,7 +2997,7 @@ package body Einfo is\n \n    procedure Set_Debug_Renaming_Link (Id : E; V : E) is\n    begin\n-      Set_Node13 (Id, V);\n+      Set_Node25 (Id, V);\n    end Set_Debug_Renaming_Link;\n \n    procedure Set_Default_Expr_Function (Id : E; V : E) is\n@@ -7604,9 +7604,6 @@ package body Einfo is\n               E_Discriminant                               =>\n             Write_Str (\"Component_Clause\");\n \n-         when E_Enumeration_Literal                        =>\n-            Write_Str (\"Debug_Renaming_Link\");\n-\n          when E_Function                                   =>\n             if not Comes_From_Source (Id)\n                  and then\n@@ -8149,7 +8146,7 @@ package body Einfo is\n             if Is_Generic_Instance (Id) then\n                Write_Str (\"Generic_Renamings\");\n             else\n-               Write_Str (\"Limited Views\");\n+               Write_Str (\"Limited_View\");\n             end if;\n \n          --  What about Privals_Chain for protected operations ???\n@@ -8198,6 +8195,9 @@ package body Einfo is\n          when Task_Kind                                    =>\n             Write_Str (\"Task_Body_Procedure\");\n \n+         when E_Variable                                   =>\n+            Write_Str (\"Debug_Renaming_Link\");\n+\n          when others                                       =>\n             Write_Str (\"Field25??\");\n       end case;"}, {"sha": "bee3d2bd3d64715841afa8d66a8fb849dac628ea", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c8e94abdccacc49ab9a087e34cd89cee8bc2f7e/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c8e94abdccacc49ab9a087e34cd89cee8bc2f7e/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=4c8e94abdccacc49ab9a087e34cd89cee8bc2f7e", "patch": "@@ -665,8 +665,8 @@ package Einfo is\n --       determining if Needs_Debug_Info should be set. The back end should\n --       always test Needs_Debug_Info, it should never test Debug_Info_Off.\n \n---    Debug_Renaming_Link (Node13)\n---       Used to link the enumeration literal of a debug renaming declaration\n+--    Debug_Renaming_Link (Node25)\n+--       Used to link the variable associated with a debug renaming declaration\n --       to the renamed entity. See Exp_Dbug.Debug_Renaming_Declaration for\n --       details of the use of this field.\n \n@@ -4717,7 +4717,6 @@ package Einfo is\n    --  E_Enumeration_Literal\n    --    Enumeration_Pos                     (Uint11)\n    --    Enumeration_Rep                     (Uint12)\n-   --    Debug_Renaming_Link                 (Node13)\n    --    Alias                               (Node18)\n    --    Enumeration_Rep_Expr                (Node22)\n    --    Next_Literal                        (synth)\n@@ -5250,6 +5249,7 @@ package Einfo is\n    --    Interface_Name                      (Node21)\n    --    Shared_Var_Assign_Proc              (Node22)\n    --    Extra_Constrained                   (Node23)\n+   --    Debug_Renaming_Link                 (Node25)\n    --    Has_Alignment_Clause                (Flag46)\n    --    Has_Atomic_Components               (Flag86)\n    --    Has_Biased_Representation           (Flag139)"}, {"sha": "76ae0cafbeb200c249ef636610d22f9cba361b43", "filename": "gcc/ada/exp_dbug.adb", "status": "modified", "additions": 103, "deletions": 54, "changes": 157, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c8e94abdccacc49ab9a087e34cd89cee8bc2f7e/gcc%2Fada%2Fexp_dbug.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c8e94abdccacc49ab9a087e34cd89cee8bc2f7e/gcc%2Fada%2Fexp_dbug.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dbug.adb?ref=4c8e94abdccacc49ab9a087e34cd89cee8bc2f7e", "patch": "@@ -38,6 +38,7 @@ with Sinfo;    use Sinfo;\n with Stand;    use Stand;\n with Stringt;  use Stringt;\n with Table;\n+with Tbuild;   use Tbuild;\n with Urealp;   use Urealp;\n \n package body Exp_Dbug is\n@@ -295,12 +296,10 @@ package body Exp_Dbug is\n       Loc : constant Source_Ptr := Sloc (N);\n       Ent : constant Node_Id    := Defining_Entity (N);\n       Nam : constant Node_Id    := Name (N);\n-      Rnm : Name_Id;\n       Ren : Node_Id;\n-      Lit : Entity_Id;\n       Typ : Entity_Id;\n+      Obj : Entity_Id;\n       Res : Node_Id;\n-      Def : Entity_Id;\n \n       function Output_Subscript (N : Node_Id; S : String) return Boolean;\n       --  Outputs a single subscript value as ?nnn (subscript is compile time\n@@ -342,36 +341,6 @@ package body Exp_Dbug is\n          return Empty;\n       end if;\n \n-      --  Prepare entity name for type declaration\n-\n-      Get_Name_String (Chars (Ent));\n-\n-      case Nkind (N) is\n-         when N_Object_Renaming_Declaration =>\n-            Add_Str_To_Name_Buffer (\"___XR\");\n-\n-         when N_Exception_Renaming_Declaration =>\n-            Add_Str_To_Name_Buffer (\"___XRE\");\n-\n-         when N_Package_Renaming_Declaration =>\n-            Add_Str_To_Name_Buffer (\"___XRP\");\n-\n-            --  If it is a child unit create a fully qualified name, to\n-            --  disambiguate multiple child units with the same name and\n-            --  different parents.\n-\n-            if Is_Child_Unit (Ent) then\n-               Prepend_String_To_Buffer (\"__\");\n-               Prepend_String_To_Buffer\n-                 (Get_Name_String (Chars (Scope (Ent))));\n-            end if;\n-\n-         when others =>\n-            return Empty;\n-      end case;\n-\n-      Rnm := Name_Find;\n-\n       --  Get renamed entity and compute suffix\n \n       Name_Len := 0;\n@@ -443,33 +412,61 @@ package body Exp_Dbug is\n \n       Prepend_String_To_Buffer (\"___XE\");\n \n-      --  For now, the literal name contains only the suffix. The Entity_Id\n-      --  value for the name is used to create a link from this literal name\n-      --  to the renamed entity using the Debug_Renaming_Link field. Then the\n+      --  Include the designation of the form of renaming\n+\n+      case Nkind (N) is\n+         when N_Object_Renaming_Declaration =>\n+            Prepend_String_To_Buffer (\"___XR\");\n+\n+         when N_Exception_Renaming_Declaration =>\n+            Prepend_String_To_Buffer (\"___XRE\");\n+\n+         when N_Package_Renaming_Declaration =>\n+            Prepend_String_To_Buffer (\"___XRP\");\n+\n+         when others =>\n+            return Empty;\n+      end case;\n+\n+      --  Add the name of the renaming entity to the front\n+\n+      Prepend_String_To_Buffer (Get_Name_String (Chars (Ent)));\n+\n+      --  If it is a child unit create a fully qualified name, to disambiguate\n+      --  multiple child units with the same name and different parents.\n+\n+      if Nkind (N) = N_Package_Renaming_Declaration\n+        and then Is_Child_Unit (Ent)\n+      then\n+         Prepend_String_To_Buffer (\"__\");\n+         Prepend_String_To_Buffer\n+           (Get_Name_String (Chars (Scope (Ent))));\n+      end if;\n+\n+      --  Create the special object whose name is the debug encoding for the\n+      --  renaming declaration.\n+\n+      --  For now, the object name contains the suffix encoding for the renamed\n+      --  object, but not the name of the leading entity. The object is linked\n+      --  the renamed entity using the Debug_Renaming_Link field. Then the\n       --  Qualify_Entity_Name procedure uses this link to create the proper\n       --  fully qualified name.\n \n       --  The reason we do things this way is that we really need to copy the\n       --  qualification of the renamed entity, and it is really much easier to\n       --  do this after the renamed entity has itself been fully qualified.\n \n-      Lit := Make_Defining_Identifier (Loc, Chars => Name_Enter);\n-      Set_Debug_Renaming_Link (Lit, Entity (Ren));\n-\n-      --  Return the appropriate enumeration type\n-\n-      Def := Make_Defining_Identifier (Loc, Chars => Rnm);\n+      Obj := Make_Defining_Identifier (Loc, Chars => Name_Enter);\n       Res :=\n-        Make_Full_Type_Declaration (Loc,\n-          Defining_Identifier => Def,\n-          Type_Definition =>\n-            Make_Enumeration_Type_Definition (Loc,\n-              Literals => New_List (Lit)));\n+        Make_Object_Declaration (Loc,\n+          Defining_Identifier => Obj,\n+          Object_Definition   => New_Reference_To\n+                                   (Standard_Debug_Renaming_Type, Loc));\n+\n+      Set_Debug_Renaming_Link (Obj, Entity (Ren));\n \n-      Set_Needs_Debug_Info (Def);\n-      Set_Needs_Debug_Info (Lit);\n+      Set_Needs_Debug_Info (Obj);\n \n-      Set_Discard_Names (Defining_Identifier (Res));\n       return Res;\n \n    --  If we get an exception, just figure it is a case that we cannot\n@@ -1251,17 +1248,69 @@ package body Exp_Dbug is\n       if Has_Qualified_Name (Ent) then\n          return;\n \n-      --  Here is where we create the proper link for renaming\n+      --  If the entity is a variable encoding the debug name for an object\n+      --  renaming, then the qualified name of the entity associated with the\n+      --  renamed object can now be incorporated in the debug name.\n \n-      elsif Ekind (Ent) = E_Enumeration_Literal\n+      elsif Ekind (Ent) = E_Variable\n         and then Present (Debug_Renaming_Link (Ent))\n       then\n          Name_Len := 0;\n          Qualify_Entity_Name (Debug_Renaming_Link (Ent));\n          Get_Name_String (Chars (Ent));\n-         Prepend_String_To_Buffer\n-           (Get_Name_String (Chars (Debug_Renaming_Link (Ent))));\n+\n+         --  Retrieve the now-qualified name of the renamed entity and insert\n+         --  it in the middle of the name, just preceding the suffix encoding\n+         --  describing the renamed object.\n+\n+         declare\n+            Renamed_Id : constant String :=\n+                           Get_Name_String (Chars (Debug_Renaming_Link (Ent)));\n+            Insert_Len : constant Integer := Renamed_Id'Length + 1;\n+            Index      : Natural := Name_Len - 3;\n+\n+         begin\n+            --  Loop backwards through the name to find the start of the \"___\"\n+            --  sequence associated with the suffix.\n+\n+            while Index >= Name_Buffer'First\n+              and then (Name_Buffer (Index + 1) /= '_'\n+                         or else Name_Buffer (Index + 2) /= '_'\n+                         or else Name_Buffer (Index + 3) /= '_')\n+            loop\n+               Index := Index - 1;\n+            end loop;\n+\n+            pragma Assert (Name_Buffer (Index + 1 .. Index + 3) = \"___\");\n+\n+            --  Insert an underscore separator and the entity name just in\n+            --  front of the suffix.\n+\n+            Name_Buffer (Index + 1 + Insert_Len .. Name_Len + Insert_Len) :=\n+              Name_Buffer (Index + 1 .. Name_Len);\n+            Name_Buffer (Index + 1) := '_';\n+            Name_Buffer (Index + 2 .. Index + Insert_Len) := Renamed_Id;\n+            Name_Len := Name_Len + Insert_Len;\n+         end;\n+\n+         --  Reset the name of the variable to the new name that includes the\n+         --  name of the renamed entity.\n+\n          Set_Chars (Ent, Name_Enter);\n+\n+         --  If the entity needs qualification by its scope then develop it\n+         --  here, add the variable's name, and again reset the entity name.\n+\n+         if Qualify_Needed (Scope (Ent)) then\n+            Name_Len := 0;\n+            Set_Entity_Name (Scope (Ent));\n+            Add_Str_To_Name_Buffer (\"__\");\n+\n+            Get_Name_String_And_Append (Chars (Ent));\n+\n+            Set_Chars (Ent, Name_Enter);\n+         end if;\n+\n          Set_Has_Qualified_Name (Ent);\n          return;\n "}, {"sha": "1b18bafc23be435d0b1b55a8b24a314d9c1fe8da", "filename": "gcc/ada/stand.ads", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c8e94abdccacc49ab9a087e34cd89cee8bc2f7e/gcc%2Fada%2Fstand.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c8e94abdccacc49ab9a087e34cd89cee8bc2f7e/gcc%2Fada%2Fstand.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fstand.ads?ref=4c8e94abdccacc49ab9a087e34cd89cee8bc2f7e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -345,6 +345,10 @@ package Stand is\n    --  Access to character, used as a component of the exception type to\n    --  denote a thin pointer component.\n \n+   Standard_Debug_Renaming_Type : Entity_Id;\n+   --  A null record type with zero size, used as the type of variables used\n+   --  to provide the debugger with name encodings for renaming declarations.\n+\n    --  The entities labeled Any_xxx are used in situations where the full\n    --  characteristics of an entity are not yet known, e.g. Any_Character\n    --  is used to label a character literal before resolution is complete."}]}