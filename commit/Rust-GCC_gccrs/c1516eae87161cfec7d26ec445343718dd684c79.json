{"sha": "c1516eae87161cfec7d26ec445343718dd684c79", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzE1MTZlYWU4NzE2MWNmZWM3ZDI2ZWM0NDUzNDM3MThkZDY4NGM3OQ==", "commit": {"author": {"name": "Andreas Tobler", "email": "a.tobler@schweiz.ch", "date": "2003-07-30T04:04:24Z"}, "committer": {"name": "Andreas Tobler", "email": "andreast@gcc.gnu.org", "date": "2003-07-30T04:04:24Z"}, "message": "re PR libffi/11410 (ffitest failures on Solaris 8/SPARC)\n\n2003-07-28  Andreas Tobler  <a.tobler@schweiz.ch>\n\n        * src/sparc/ffi.c: Handle all floating point registers.\n        * src/sparc/v9.S: Likewise. Fixes second part of PR target/11410.\n\nFrom-SVN: r69951", "tree": {"sha": "e4b4a0692e568e3648eb67e52b88ff65e3d26f34", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e4b4a0692e568e3648eb67e52b88ff65e3d26f34"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c1516eae87161cfec7d26ec445343718dd684c79", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1516eae87161cfec7d26ec445343718dd684c79", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1516eae87161cfec7d26ec445343718dd684c79", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1516eae87161cfec7d26ec445343718dd684c79/comments", "author": null, "committer": null, "parents": [{"sha": "e55e4f6805a765ec906c47e46f71e39bfb193462", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e55e4f6805a765ec906c47e46f71e39bfb193462", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e55e4f6805a765ec906c47e46f71e39bfb193462"}], "stats": {"total": 49, "additions": 32, "deletions": 17}, "files": [{"sha": "7e96f277c7207319540ce1ed61a983096e2f652b", "filename": "libffi/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1516eae87161cfec7d26ec445343718dd684c79/libffi%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1516eae87161cfec7d26ec445343718dd684c79/libffi%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FChangeLog?ref=c1516eae87161cfec7d26ec445343718dd684c79", "patch": "@@ -1,3 +1,8 @@\n+2003-07-28  Andreas Tobler  <a.tobler@schweiz.ch>\n+\n+\t* src/sparc/ffi.c: Handle all floating point registers.\n+\t* src/sparc/v9.S: Likewise. Fixes second part of PR target/11410.\n+\n 2003-07-11  Gerald Pfeifer  <pfeifer@dbai.tuwien.ac.at>\n \n \t* README: Note that libffi is not part of GCC.  Update the project"}, {"sha": "3c71771f74543806c7772c113368e36d6ed6a0a8", "filename": "libffi/src/sparc/ffi.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1516eae87161cfec7d26ec445343718dd684c79/libffi%2Fsrc%2Fsparc%2Fffi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1516eae87161cfec7d26ec445343718dd684c79/libffi%2Fsrc%2Fsparc%2Fffi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fsparc%2Fffi.c?ref=c1516eae87161cfec7d26ec445343718dd684c79", "patch": "@@ -494,7 +494,7 @@ ffi_closure_sparc_inner(ffi_closure *closure,\n       argn += ALIGN(arg_types[i]->size, SIZEOF_ARG) / SIZEOF_ARG;\n \n #ifdef SPARC64\n-      if (i < 6 && (arg_types[i]->type == FFI_TYPE_FLOAT\n+      if (i < 16 && (arg_types[i]->type == FFI_TYPE_FLOAT\n \t\t || arg_types[i]->type == FFI_TYPE_DOUBLE\n #if FFI_TYPE_LONGDOUBLE != FFI_TYPE_DOUBLE\n \t\t || arg_types[i]->type == FFI_TYPE_LONGDOUBLE"}, {"sha": "20ce0f4b57fd2ac3f8c910ae3e4b7b9ff2ec09b9", "filename": "libffi/src/sparc/v9.S", "status": "modified", "additions": 26, "deletions": 16, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1516eae87161cfec7d26ec445343718dd684c79/libffi%2Fsrc%2Fsparc%2Fv9.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1516eae87161cfec7d26ec445343718dd684c79/libffi%2Fsrc%2Fsparc%2Fv9.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fsparc%2Fv9.S?ref=c1516eae87161cfec7d26ec445343718dd684c79", "patch": "@@ -126,9 +126,9 @@ dostruct:\n \t.size\tffi_call_V9,.ffi_call_V9_end-ffi_call_V9\n \n \n-#define\tSTACKFRAME\t 240\t/* 16*8 register window +\n+#define\tSTACKFRAME\t 320\t/* 16*8 register window +\n \t\t\t\t   6*8 args backing store +\n-\t\t\t\t   8*8 locals */\n+\t\t\t\t   18*8 locals */\n #define\tFP\t\t%fp+STACK_BIAS\n \n /* ffi_closure_v9(...)\n@@ -153,53 +153,63 @@ ffi_closure_v9:\n \tstx\t%i5, [FP+128+40]\n \n \t! Store possible floating point argument registers too.\n-\tstd\t%f0, [FP-48]\n-\tstd\t%f2, [FP-40]\n-\tstd\t%f4, [FP-32]\n-\tstd\t%f6, [FP-24]\n-\tstd\t%f8, [FP-16]\n-\tstd\t%f10, [FP-8]\n+\tstd\t%f0,  [FP-128]\n+\tstd\t%f2,  [FP-120]\n+\tstd\t%f4,  [FP-112]\n+\tstd\t%f6,  [FP-104]\n+\tstd\t%f8,  [FP-96]\n+\tstd\t%f10, [FP-88]\n+\tstd     %f12, [FP-80]\n+\tstd     %f14, [FP-72]\n+\tstd     %f16, [FP-64]\n+\tstd     %f18, [FP-56]\n+\tstd     %f20, [FP-48]\n+\tstd     %f22, [FP-40]\n+\tstd     %f24, [FP-32]\n+\tstd     %f26, [FP-24]\n+\tstd     %f28, [FP-16]\n+\tstd     %f30, [FP-8]\n \n \t! Call ffi_closure_sparc_inner to do the bulk of the work.\n \tmov\t%g1, %o0\n-\tadd\t%fp, STACK_BIAS-64, %o1\n+\tadd\t%fp, STACK_BIAS-144, %o1\n \tadd\t%fp, STACK_BIAS+128, %o2\n \tcall\tffi_closure_sparc_inner\n-\t add\t%fp, STACK_BIAS-48, %o3\n+\tadd\t%fp, STACK_BIAS-128, %o3\n \n \t! Load up the return value in the proper type.\n \tcmp\t%o0, FFI_TYPE_VOID\n \tbe,pn\t%icc, done1\n \n \tcmp\t%o0, FFI_TYPE_FLOAT\n \tbe,a,pn\t%icc, done1\n-\t ld\t[FP-64], %f0\n+\t ld\t[FP-144], %f0\n \n \tcmp\t%o0, FFI_TYPE_DOUBLE\n \tbe,a,pn\t%icc, done1\n-\t ldd\t[FP-64], %f0\n+\t ldd\t[FP-144], %f0\n \n \tcmp\t%o0, FFI_TYPE_LONGDOUBLE\n \tbe,a,pn\t%icc, longdouble1\n-\t ldd\t[FP-64], %f0\n+\t ldd\t[FP-144], %f0\n \n \tcmp\t%o0, FFI_TYPE_STRUCT\n \tbe,pn\t%icc, struct1\n \n \t! FFI_TYPE_UINT64 | FFI_TYPE_SINT64 | FFI_TYPE_POINTER\n-\tldx\t[FP-64], %i0\n+\tldx\t[FP-144], %i0\n \n done1:\n \tret\n \t restore\n \n struct1:\n-\tldx [FP-56], %i2\n+\tldx\t[FP-136], %i2\n \tret\n \t restore\n \n longdouble1:\n-\tldd\t[FP-56], %f2\n+\tldd\t[FP-136], %f2\n \tret\n \t restore\n .LLFE2:"}]}