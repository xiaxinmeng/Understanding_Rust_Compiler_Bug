{"sha": "5a64837c6b14f97b066772abc1463aa8f2c962d5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWE2NDgzN2M2YjE0Zjk3YjA2Njc3MmFiYzE0NjNhYThmMmM5NjJkNQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2009-07-13T10:30:44Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-07-13T10:30:44Z"}, "message": "gnat1drv.adb (Adjust_Global_Switches): No longer set Back_Annotate_Rep_Info in inspector mode.\n\n2009-07-13  Arnaud Charlet  <charlet@adacore.com>\n\n\t* gnat1drv.adb (Adjust_Global_Switches): No longer set\n\tBack_Annotate_Rep_Info in inspector mode.\n\t(Gnat1Drv): Need to call the back-end in inspector mode to generate SCIL\n\n\t* opt.ads: Update comment.\n\nFrom-SVN: r149567", "tree": {"sha": "22f9762a04bebb76f538a22e2eb84f2de6885654", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/22f9762a04bebb76f538a22e2eb84f2de6885654"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5a64837c6b14f97b066772abc1463aa8f2c962d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a64837c6b14f97b066772abc1463aa8f2c962d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a64837c6b14f97b066772abc1463aa8f2c962d5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a64837c6b14f97b066772abc1463aa8f2c962d5/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2c011ce1cd6eedc5d707c5f963b8f7d0b160db5b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c011ce1cd6eedc5d707c5f963b8f7d0b160db5b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c011ce1cd6eedc5d707c5f963b8f7d0b160db5b"}], "stats": {"total": 31, "additions": 20, "deletions": 11}, "files": [{"sha": "8d276e8ef148cca0ac19a7586799c5f37cb9b920", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a64837c6b14f97b066772abc1463aa8f2c962d5/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a64837c6b14f97b066772abc1463aa8f2c962d5/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=5a64837c6b14f97b066772abc1463aa8f2c962d5", "patch": "@@ -1,3 +1,11 @@\n+2009-07-13  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* gnat1drv.adb (Adjust_Global_Switches): No longer set\n+\tBack_Annotate_Rep_Info in inspector mode.\n+\t(Gnat1Drv): Need to call the back-end in inspector mode to generate SCIL\n+\n+\t* opt.ads: Update comment.\n+\n 2009-07-13  Robert Dewar  <dewar@adacore.com>\n \n \t* lib.adb, prj-nmsc.adb, prj-proc.adb, prj-proc.ads, prj.adb,"}, {"sha": "f737e96a9b1c04777b7bf6d6f124283b6934b61c", "filename": "gcc/ada/gnat1drv.adb", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a64837c6b14f97b066772abc1463aa8f2c962d5/gcc%2Fada%2Fgnat1drv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a64837c6b14f97b066772abc1463aa8f2c962d5/gcc%2Fada%2Fgnat1drv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat1drv.adb?ref=5a64837c6b14f97b066772abc1463aa8f2c962d5", "patch": "@@ -117,22 +117,23 @@ procedure Gnat1drv is\n          --  Turn off inlining in ASIS mode, since ASIS cannot handle the extra\n          --  information in the trees caused by inlining being active.\n \n-         --  More specifically, the tree seems to malformed from the ASIS point\n-         --  of view if -gnatc and -gnatn appear together ???\n+         --  More specifically, the tree seems to be malformed from the ASIS\n+         --  point of view if -gnatc and -gnatn appear together???\n \n          Inline_Active := False;\n \n-         --  Turn off inspector mode in ASIS mode. For reasons that need\n-         --  clearer documentation, Inspector cannot function in this mode ???\n+         --  Turn off Inspector mode in ASIS mode, since Inspector requires\n+         --  front-end expansion.\n \n          Inspector_Mode := False;\n       end if;\n \n-      --  Inspeector mode requires back-end rep info and also needs to disable\n-      --  front-end inlining (but -gnatn does not need to be disabled).\n+      --  Inspector mode needs to disable front-end inlining since the\n+      --  generated trees (in particular order and consistency between specs\n+      --  compiled as part of a main unit or as part of a with-clause) are\n+      --  causing troubles.\n \n       if Inspector_Mode then\n-         Back_Annotate_Rep_Info := True;\n          Front_End_Inlining := False;\n       end if;\n \n@@ -751,7 +752,7 @@ begin\n       --  a VM, since representations are largely symbolic there.\n \n       if Back_End_Mode = Declarations_Only\n-        and then (not Back_Annotate_Rep_Info\n+        and then (not (Back_Annotate_Rep_Info or else Inspector_Mode)\n                    or else Main_Kind = N_Subunit\n                    or else Targparm.Frontend_Layout_On_Target\n                    or else Targparm.VM_Target /= No_VM)"}, {"sha": "1da5f80deba3beaf172dc60a2d20c78688ec97a6", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a64837c6b14f97b066772abc1463aa8f2c962d5/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a64837c6b14f97b066772abc1463aa8f2c962d5/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=5a64837c6b14f97b066772abc1463aa8f2c962d5", "patch": "@@ -639,8 +639,8 @@ package Opt is\n \n    Inspector_Mode : Boolean renames Debug.Debug_Flag_Dot_II;\n    --  GNAT\n-   --  True if compiling in inspector mode (-gnatd.I switch).\n-   --  Enable inspector mode, in particular SCIL generation.\n+   --  Set True to activate Inspector mode (-gnatd.I switch). In particular\n+   --  this enables SCIL generation.\n    --  When VM_Target /= None, the compiler will also attempt to\n    --  generate code even in case of unsupported construct instead of\n    --  displaying an error.\n@@ -651,7 +651,7 @@ package Opt is\n \n    Follow_Links_For_Files : Boolean := False;\n    --  PROJECT MANAGER\n-   --  Set to True (-eL) to process the project files in trusted mode\n+   --  Set to True (-eL) to process the project files in trusted mode.\n    --  If Follow_Links is False, it is assumed that the project doesn't contain\n    --  any file duplicated through symbolic links (although the latter are\n    --  still valid if they point to a file which is outside of the project),"}]}