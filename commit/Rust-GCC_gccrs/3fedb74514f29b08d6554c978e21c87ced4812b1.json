{"sha": "3fedb74514f29b08d6554c978e21c87ced4812b1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2ZlZGI3NDUxNGYyOWIwOGQ2NTU0Yzk3OGUyMWM4N2NlZDQ4MTJiMQ==", "commit": {"author": {"name": "Nathanael Nerode", "email": "neroden@gcc.gnu.org", "date": "2002-12-28T00:59:52Z"}, "committer": {"name": "Nathanael Nerode", "email": "neroden@gcc.gnu.org", "date": "2002-12-28T00:59:52Z"}, "message": "configure: Fix stupid bug where RANLIB was mistakenly included.\n\n\t* configure: Fix stupid bug where RANLIB was mistakenly included.\n\n\t* configure.in: Rename (buildargs, hostargs, targargs) to\n\t(build_configargs, host_configargs, target_configargs).\n\n\t* configure.in: Move logic out of sed statement.\n\nFrom-SVN: r60551", "tree": {"sha": "136eb9c313170dab5959e1ebaffd024c5d6de260", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/136eb9c313170dab5959e1ebaffd024c5d6de260"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3fedb74514f29b08d6554c978e21c87ced4812b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3fedb74514f29b08d6554c978e21c87ced4812b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3fedb74514f29b08d6554c978e21c87ced4812b1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3fedb74514f29b08d6554c978e21c87ced4812b1/comments", "author": null, "committer": null, "parents": [{"sha": "57f40826617909a9c233628f90c5e1387b6f847f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57f40826617909a9c233628f90c5e1387b6f847f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57f40826617909a9c233628f90c5e1387b6f847f"}], "stats": {"total": 53, "additions": 34, "deletions": 19}, "files": [{"sha": "6c7b9c460ff038e496e4b7b599601db1242ac406", "filename": "ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fedb74514f29b08d6554c978e21c87ced4812b1/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fedb74514f29b08d6554c978e21c87ced4812b1/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=3fedb74514f29b08d6554c978e21c87ced4812b1", "patch": "@@ -1,5 +1,12 @@\n 2002-12-27  Nathanael Nerode  <neroden@gcc.gnu.org>\n \n+\t* configure: Fix stupid bug where RANLIB was mistakenly included.\n+\n+\t* configure.in: Rename (buildargs, hostargs, targargs) to \n+\t(build_configargs, host_configargs, target_configargs).\n+\n+\t* configure.in: Move logic out of sed statement.\n+\n \t* configure: Remove unneeded 'export's.  Make CC_FOR_TARGET, \n \tCXX_FOR_TARGET, GCJ_FOR_TARGET substituted in configure.in only.\n "}, {"sha": "fda28cbdda59628f4d796137517da1a915fec7c2", "filename": "configure", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fedb74514f29b08d6554c978e21c87ced4812b1/configure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fedb74514f29b08d6554c978e21c87ced4812b1/configure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure?ref=3fedb74514f29b08d6554c978e21c87ced4812b1", "patch": "@@ -87,7 +87,7 @@ srctrigger=\n target_alias=NOTARGET\n target_makefile_frag=\n undefs=NOUNDEFS\n-version=\"$Revision: 1.51 $\"\n+version=\"$Revision: 1.52 $\"\n x11=default\n bindir='${exec_prefix}/bin'\n sbindir='${exec_prefix}/sbin'\n@@ -872,7 +872,7 @@ done\n tools=\"AR AR_FOR_TARGET AS AS_FOR_TARGET BISON CC_FOR_BUILD\"\n tools=\"${tools} DLLTOOL DLLTOOL_FOR_TARGET GCC_FOR_TARGET BUILD_PREFIX\"\n tools=\"${tools} BUILD_PREFIX_1 LD LD_FOR_TARGET LEX MAKEINFO NM\"\n-tools=\"${tools} NM_FOR_TARGET RANLIB RANLIB_FOR_TARGET\"\n+tools=\"${tools} NM_FOR_TARGET RANLIB_FOR_TARGET\"\n tools=\"${tools} WINDRES WINDRES_FOR_TARGET YACC\"\n tools=\"${tools} OBJCOPY OBJDUMP\"\n if [ \"${build}\" != \"${host}\" ]; then"}, {"sha": "b25080ea60f6dcde628f5b3edd69f0b23113adf1", "filename": "configure.in", "status": "modified", "additions": 25, "deletions": 17, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fedb74514f29b08d6554c978e21c87ced4812b1/configure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fedb74514f29b08d6554c978e21c87ced4812b1/configure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure.in?ref=3fedb74514f29b08d6554c978e21c87ced4812b1", "patch": "@@ -1497,7 +1497,7 @@ baseargs=`echo \"${arguments}\" | \\\n # For the build-side libraries, we just need to pretend we're native,\n # and not use the same cache file.  Multilibs are neither needed nor\n # desired.\n-buildargs=\"--cache-file=../config.cache --build=${build_alias} --host=${build_alias} ${baseargs}\"\n+build_configargs=\"--cache-file=../config.cache --build=${build_alias} --host=${build_alias} ${baseargs}\"\n \n # For host modules, accept cache file option, or specification as blank.\n case \"${cache_file}\" in\n@@ -1509,32 +1509,32 @@ case \"${cache_file}\" in\n   cache_file_option=\"--cache-file=../${cache_file}\" ;;\n esac\n \n-hostargs=\"${cache_file_option} ${buildopt} --host=${host_alias} --target=${target_alias} ${extra_host_args} ${baseargs}\"\n+host_configargs=\"${cache_file_option} ${buildopt} --host=${host_alias} --target=${target_alias} ${extra_host_args} ${baseargs}\"\n \n-targargs=${baseargs}\n+target_configargs=${baseargs}\n \n # Passing a --with-cross-host argument lets the target libraries know\n # whether they are being built with a cross-compiler or being built\n # native.  However, it would be better to use other mechanisms to make the\n # sorts of decisions they want to make on this basis.  Please consider\n # this option to be deprecated.  FIXME.\n if test x${is_cross_compiler} = xyes ; then\n-  targargs=\"--with-cross-host=${host_alias} ${targargs}\"\n+  target_configargs=\"--with-cross-host=${host_alias} ${target_configargs}\"\n fi\n \n # Default to --enable-multilib.\n if test x${enable_multilib} = x ; then\n-  targargs=\"--enable-multilib ${targargs}\"\n+  target_configargs=\"--enable-multilib ${target_configargs}\"\n fi\n \n # Pass --with-newlib if appropriate.  Note that target_configdirs has\n # changed from the earlier setting of with_newlib.\n if test x${with_newlib} != xno && echo \" ${target_configdirs} \" | grep \" newlib \" > /dev/null 2>&1 && test -d ${srcdir}/newlib ; then\n-  targargs=\"--with-newlib ${targargs}\"\n+  target_configargs=\"--with-newlib ${target_configargs}\"\n fi\n \n # Pass the appropriate --host, --build, and --cache-file arguments.\n-targargs=\"--cache-file=../config.cache --host=${target_alias} --build=${build_alias} ${targargs}\"\n+target_configargs=\"--cache-file=../config.cache --host=${target_alias} --build=${build_alias} ${target_configargs}\"\n \n # provide a proper gxx_include_dir.\n # Note, if you change the default, make sure to fix both here and in\n@@ -1568,7 +1568,7 @@ fi\n FLAGS_FOR_TARGET=\n case \" $target_configdirs \" in\n  *\" newlib \"*)\n-  case \" $targargs \" in\n+  case \" $target_configargs \" in\n   *\" --with-newlib \"*)\n    case \"$target\" in\n    *-cygwin*)\n@@ -1703,6 +1703,14 @@ qRAW_CXX_FOR_TARGET=`echo \"$RAW_CXX_FOR_TARGET\" | sed 's,[&%],\\\\\\&,g'`\n qqCXX_FOR_TARGET=`echo \"$qCXX_FOR_TARGET\" | sed -e 's,[$][$],$$$$,g'`\n qqRAW_CXX_FOR_TARGET=`echo \"$qRAW_CXX_FOR_TARGET\" | sed -e 's,[$][$],$$$$,g'`\n \n+# Wrap CC_FOR_TARGET and friends, for certain types of builds.\n+CC_FOR_TARGET=\"\\$(STAGE_CC_WRAPPER) ${CC_FOR_TARGET}\"\n+GCJ_FOR_TARGET=\"\\$(STAGE_CC_WRAPPER) ${GCJ_FOR_TARGET}\"\n+CXX_FOR_TARGET=\"\\$(STAGE_CC_WRAPPER) ${qCXX_FOR_TARGET}\"\n+RAW_CXX_FOR_TARGET=\"\\$(STAGE_CC_WRAPPER) ${qRAW_CXX_FOR_TARGET}\"\n+CXX_FOR_TARGET_FOR_RECURSIVE_MAKE=\"\\$(STAGE_CC_WRAPPER) ${qqCXX_FOR_TARGET}\"\n+RAW_CXX_FOR_TARGET_FOR_RECURSIVE_MAKE=\"\\$(STAGE_CC_WRAPPER) ${qqRAW_CXX_FOR_TARGET}\"\n+\n sedtemp=sed.$$\n cat >$sedtemp <<EOF\n s%@GDB_TK@%${GDB_TK}%\n@@ -1718,20 +1726,20 @@ s%@all_target_modules@%${all_target_modules}%\n s%@check_target_modules@%${check_target_modules}%\n s%@install_target_modules@%${install_target_modules}%\n s:@target_configdirs@:${target_configdirs}:\n-s%@target_configargs@%${targargs}%\n+s%@target_configargs@%${target_configargs}%\n s%@FLAGS_FOR_TARGET@%${FLAGS_FOR_TARGET}%\n-s%@CC_FOR_TARGET@%\\$(STAGE_CC_WRAPPER) ${CC_FOR_TARGET}%\n-s%@GCJ_FOR_TARGET@%\\$(STAGE_CC_WRAPPER) ${GCJ_FOR_TARGET}%\n-s%@CXX_FOR_TARGET@%\\$(STAGE_CC_WRAPPER) ${qCXX_FOR_TARGET}%\n-s%@RAW_CXX_FOR_TARGET@%\\$(STAGE_CC_WRAPPER) ${qRAW_CXX_FOR_TARGET}%\n-s%@CXX_FOR_TARGET_FOR_RECURSIVE_MAKE@%\\$(STAGE_CC_WRAPPER) ${qqCXX_FOR_TARGET}%\n-s%@RAW_CXX_FOR_TARGET_FOR_RECURSIVE_MAKE@%\\$(STAGE_CC_WRAPPER) ${qqRAW_CXX_FOR_TARGET}%\n+s%@CC_FOR_TARGET@%${CC_FOR_TARGET}%\n+s%@GCJ_FOR_TARGET@%${GCJ_FOR_TARGET}%\n+s%@CXX_FOR_TARGET@%${CXX_FOR_TARGET}%\n+s%@RAW_CXX_FOR_TARGET@%${RAW_CXX_FOR_TARGET}%\n+s%@CXX_FOR_TARGET_FOR_RECURSIVE_MAKE@%${CXX_FOR_TARGET_FOR_RECURSIVE_MAKE}%\n+s%@RAW_CXX_FOR_TARGET_FOR_RECURSIVE_MAKE@%${RAW_CXX_FOR_TARGET_FOR_RECURSIVE_MAKE}%\n s%@target_subdir@%${target_subdir}%\n s%@build_subdir@%${build_subdir}%\n-s%@build_configargs@%${buildargs}%\n+s%@build_configargs@%${build_configargs}%\n s%@gxx_include_dir@%${gxx_include_dir}%\n s%@libstdcxx_incdir@%${libstdcxx_incdir}%\n-s%@host_configargs@%${hostargs}%\n+s%@host_configargs@%${host_configargs}%\n EOF\n sed -f $sedtemp Makefile > Makefile.tem\n rm -f Makefile $sedtemp"}]}