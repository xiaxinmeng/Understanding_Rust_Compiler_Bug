{"sha": "5f0043518ad447a8bdbe734d82c39f8663c93b0d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWYwMDQzNTE4YWQ0NDdhOGJkYmU3MzRkODJjMzlmODY2M2M5M2IwZA==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2002-05-15T23:45:52Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2002-05-15T23:45:52Z"}, "message": "rs6000.md (\"altivec_mtvscr\"): Set VSCR register.\n\n2002-05-15  Aldy Hernandez  <aldyh@redhat.com>\n\n        * config/rs6000/rs6000.md (\"altivec_mtvscr\"): Set VSCR register.\n        (\"altivec_mfvscr\"): Read from VSCR.\n\n        Add vscr sets for the following insns: altivec_vctuxs,\n        altivec_vaddubs, altivec_vaddsbs, altivec_vadduhs,\n        altivec_vaddshs, altivec_vadduws, altivec_vaddsws, altivec_vctsxs,\n        altivec_vmhaddshs, altivec_vmhraddshs, altivec_vmsumuhs,\n        altivec_vmsumshs, altivec_vpkuhss, altivec_vpkshss,\n        altivec_vpkuwss, altivec_vpkswss, altivec_vpkuhus,\n        altivec_vpkshus, altivec_vpkuwus, altivec_vpkswus,\n        altivec_vsububs, altivec_vsubsbs, altivec_vsubuhs,\n        altivec_vsubshs, altivec_vsubuws, altivec_vsubsws,\n        altivec_vsum4ubs, altivec_vsum4sbs, altivec_vsum4shs,\n        altivec_vsum2sws, altivec_vsumsws.\n\n        * config/rs6000/rs6000.h: Add VSCR fixed register.\n        (CALL_REALLY_USED_REGISTERS): Add vscr.\n        (CALL_USED_REGISTERS): Same.\n        (FIXED_REGISTERS): Same.\n        (REG_ALLOC_ORDER): Same.\n        (reg_class): Add VSCR_REGS.\n        (REG_CLASS_NAMES): Same.\n        (REG_CLASS_CONTENTS): Same.\n        (VSCR_REGNO): New.\n        (REGISTER_NAMES): Add vscr.\n        (DEBUG_REGISTER_NAMES): Same.\n        (ADDITIONAL_REGISTER_NAMES): Same.\n        (FIRST_PSEUDO_REGISTER): Increment.\n        (CONDITIONAL_REGISTER_USAGE): Set VSCR as a global register.\n\nFrom-SVN: r53495", "tree": {"sha": "6ccb9e99162bbd58b55c4fcb8fc24c152bcc6a49", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6ccb9e99162bbd58b55c4fcb8fc24c152bcc6a49"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5f0043518ad447a8bdbe734d82c39f8663c93b0d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f0043518ad447a8bdbe734d82c39f8663c93b0d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f0043518ad447a8bdbe734d82c39f8663c93b0d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f0043518ad447a8bdbe734d82c39f8663c93b0d/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6c784d99594fe02b1653f6a12790e31c2ffba3e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c784d99594fe02b1653f6a12790e31c2ffba3e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c784d99594fe02b1653f6a12790e31c2ffba3e3"}], "stats": {"total": 155, "additions": 114, "deletions": 41}, "files": [{"sha": "0d3f409e33d9362634723f1d2b582bbc5ad77057", "filename": "gcc/ChangeLog", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f0043518ad447a8bdbe734d82c39f8663c93b0d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f0043518ad447a8bdbe734d82c39f8663c93b0d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5f0043518ad447a8bdbe734d82c39f8663c93b0d", "patch": "@@ -1,3 +1,35 @@\n+2002-05-15  Aldy Hernandez  <aldyh@redhat.com>\n+\n+        * config/rs6000/rs6000.md (\"altivec_mtvscr\"): Set VSCR register.\n+        (\"altivec_mfvscr\"): Read from VSCR.\n+\n+        Add vscr sets for the following insns: altivec_vctuxs,\n+        altivec_vaddubs, altivec_vaddsbs, altivec_vadduhs,\n+        altivec_vaddshs, altivec_vadduws, altivec_vaddsws, altivec_vctsxs,\n+        altivec_vmhaddshs, altivec_vmhraddshs, altivec_vmsumuhs,\n+        altivec_vmsumshs, altivec_vpkuhss, altivec_vpkshss,\n+        altivec_vpkuwss, altivec_vpkswss, altivec_vpkuhus,\n+        altivec_vpkshus, altivec_vpkuwus, altivec_vpkswus,\n+        altivec_vsububs, altivec_vsubsbs, altivec_vsubuhs,\n+        altivec_vsubshs, altivec_vsubuws, altivec_vsubsws,\n+        altivec_vsum4ubs, altivec_vsum4sbs, altivec_vsum4shs,\n+        altivec_vsum2sws, altivec_vsumsws.\n+\n+        * config/rs6000/rs6000.h: Add VSCR fixed register.\n+        (CALL_REALLY_USED_REGISTERS): Add vscr.\n+        (CALL_USED_REGISTERS): Same.\n+        (FIXED_REGISTERS): Same.\n+        (REG_ALLOC_ORDER): Same.\n+        (reg_class): Add VSCR_REGS.\n+        (REG_CLASS_NAMES): Same.\n+        (REG_CLASS_CONTENTS): Same.\n+        (VSCR_REGNO): New.\n+        (REGISTER_NAMES): Add vscr.\n+        (DEBUG_REGISTER_NAMES): Same.\n+        (ADDITIONAL_REGISTER_NAMES): Same.\n+        (FIRST_PSEUDO_REGISTER): Increment.\n+        (CONDITIONAL_REGISTER_USAGE): Set VSCR as a global register.\n+\n 2002-05-15  Jakub Jelinek  <jakub@redhat.com>\n \n \t* fold-const.c (fold): Fix a typo."}, {"sha": "fa47a97cd03f64fbf80e665f8f2099b085d44f38", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 16, "deletions": 8, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f0043518ad447a8bdbe734d82c39f8663c93b0d/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f0043518ad447a8bdbe734d82c39f8663c93b0d/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=5f0043518ad447a8bdbe734d82c39f8663c93b0d", "patch": "@@ -683,7 +683,7 @@ extern int rs6000_default_long_calls;\n    a register, in order to work around problems in allocating stack storage\n    in inline functions.  */\n \n-#define FIRST_PSEUDO_REGISTER 110\n+#define FIRST_PSEUDO_REGISTER 111\n \n /* This must be included for pre gcc 3.0 glibc compatibility.  */\n #define PRE_GCC3_DWARF_FRAME_REGISTERS 77\n@@ -707,7 +707,7 @@ extern int rs6000_default_long_calls;\n    /* AltiVec registers.  */\t\t\t   \\\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-   1\t\t\t\t\t\t   \\\n+   1, 1\t\t\t\t\t\t   \\\n }\n \n /* 1 for registers not available across function calls.\n@@ -726,7 +726,7 @@ extern int rs6000_default_long_calls;\n    /* AltiVec registers.  */\t\t\t   \\\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-   1\t\t\t\t\t\t   \\\n+   1, 1\t\t\t\t\t\t   \\\n }\n \n /* Like `CALL_USED_REGISTERS' except this macro doesn't require that\n@@ -744,7 +744,7 @@ extern int rs6000_default_long_calls;\n    /* AltiVec registers.  */\t\t\t   \\\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-   0\t\t\t\t\t\t   \\\n+   0, 0\t\t\t\t\t\t   \\\n }\n \n #define MQ_REGNO     64\n@@ -759,6 +759,7 @@ extern int rs6000_default_long_calls;\n #define LAST_ALTIVEC_REGNO\t108\n #define TOTAL_ALTIVEC_REGS\t(LAST_ALTIVEC_REGNO - FIRST_ALTIVEC_REGNO + 1)\n #define VRSAVE_REGNO\t\t109\n+#define VSCR_REGNO\t\t110\n \n /* List the order in which to allocate registers.  Each register must be\n    listed once, even those in FIXED_REGISTERS.\n@@ -781,7 +782,7 @@ extern int rs6000_default_long_calls;\n \tmq\t\t(not saved; best to use it if we can)\n \tctr\t\t(not saved; when we have the choice ctr is better)\n \tlr\t\t(saved)\n-        cr5, r1, r2, ap, xer, vrsave (fixed)\n+        cr5, r1, r2, ap, xer, vrsave, vscr (fixed)\n \n \tAltiVec registers:\n \tv0 - v1         (not saved or used for anything)\n@@ -812,7 +813,7 @@ extern int rs6000_default_long_calls;\n    79,\t\t\t\t\t\t\t\\\n    96, 95, 94, 93, 92, 91,\t\t\t\t\\\n    108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98,\t\\\n-   97, 109\t\t\t\t\t\t\\\n+   97, 109, 110\t\t\t\t\t\t\\\n }\n \n /* True if register is floating-point.  */\n@@ -967,6 +968,8 @@ extern int rs6000_default_long_calls;\n       = fixed_regs[RS6000_PIC_OFFSET_TABLE_REGNUM]\t\t\t\\\n       = call_used_regs[RS6000_PIC_OFFSET_TABLE_REGNUM]\t\t\t\\\n       = call_really_used_regs[RS6000_PIC_OFFSET_TABLE_REGNUM] = 1;\t\\\n+  if (TARGET_ALTIVEC)                                                   \\\n+    global_regs[VSCR_REGNO] = 1;                                        \\\n   if (! TARGET_ALTIVEC)\t\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\t\\\n       for (i = FIRST_ALTIVEC_REGNO; i <= LAST_ALTIVEC_REGNO; ++i)\t\\\n@@ -1051,6 +1054,7 @@ enum reg_class\n   FLOAT_REGS,\n   ALTIVEC_REGS,\n   VRSAVE_REGS,\n+  VSCR_REGS,\n   NON_SPECIAL_REGS,\n   MQ_REGS,\n   LINK_REGS,\n@@ -1078,6 +1082,7 @@ enum reg_class\n   \"FLOAT_REGS\",\t\t\t\t\t\t\t\t\\\n   \"ALTIVEC_REGS\",\t\t\t\t\t\t\t\\\n   \"VRSAVE_REGS\",\t\t\t\t\t\t\t\\\n+  \"VSCR_REGS\",\t\t\t\t\t\t\t\t\\\n   \"NON_SPECIAL_REGS\",\t\t\t\t\t\t\t\\\n   \"MQ_REGS\",\t\t\t\t\t\t\t\t\\\n   \"LINK_REGS\",\t\t\t\t\t\t\t\t\\\n@@ -1104,6 +1109,7 @@ enum reg_class\n   { 0x00000000, 0xffffffff, 0x00000000, 0x00000000 }, /* FLOAT_REGS */       \\\n   { 0x00000000, 0x00000000, 0xffffe000, 0x00001fff }, /* ALTIVEC_REGS */     \\\n   { 0x00000000, 0x00000000, 0x00000000, 0x00002000 }, /* VRSAVE_REGS */\t     \\\n+  { 0x00000000, 0x00000000, 0x00000000, 0x00004000 }, /* VSCR_REGS */\t     \\\n   { 0xffffffff, 0xffffffff, 0x00000008, 0x00000000 }, /* NON_SPECIAL_REGS */ \\\n   { 0x00000000, 0x00000000, 0x00000001, 0x00000000 }, /* MQ_REGS */\t     \\\n   { 0x00000000, 0x00000000, 0x00000002, 0x00000000 }, /* LINK_REGS */\t     \\\n@@ -1136,6 +1142,7 @@ enum reg_class\n   : (REGNO) == ARG_POINTER_REGNUM ? BASE_REGS\t\\\n   : (REGNO) == XER_REGNO ? XER_REGS\t\t\\\n   : (REGNO) == VRSAVE_REGNO ? VRSAVE_REGS\t\\\n+  : (REGNO) == VSCR_REGNO ? VRSAVE_REGS\t\\\n   : NO_REGS)\n \n /* The class value for index registers, and the one for base regs.  */\n@@ -2626,6 +2633,7 @@ extern char rs6000_reg_names[][8];\t/* register names (0 vs. %r0).  */\n   &rs6000_reg_names[107][0],\t/* v30  */\t\t\t\t\\\n   &rs6000_reg_names[108][0],\t/* v31  */\t\t\t\t\\\n   &rs6000_reg_names[109][0],\t/* vrsave  */\t\t\t\t\\\n+  &rs6000_reg_names[110][0],\t/* vscr  */\t\t\t\t\\\n }\n \n /* print-rtl can't handle the above REGISTER_NAMES, so define the\n@@ -2649,7 +2657,7 @@ extern char rs6000_reg_names[][8];\t/* register names (0 vs. %r0).  */\n      \"v8\",  \"v9\", \"v10\", \"v11\", \"v12\", \"v13\", \"v14\", \"v15\",             \\\n     \"v16\", \"v17\", \"v18\", \"v19\", \"v20\", \"v21\", \"v22\", \"v23\",             \\\n     \"v24\", \"v25\", \"v26\", \"v27\", \"v28\", \"v29\", \"v30\", \"v31\",             \\\n-    \"vrsave\"\t\t\t\t\t\t\t\t\\\n+    \"vrsave\", \"vscr\"\t\t\t\t\t\t\t\\\n }\n \n /* Table of additional register names to use in user input.  */\n@@ -2679,7 +2687,7 @@ extern char rs6000_reg_names[][8];\t/* register names (0 vs. %r0).  */\n   {\"v20\",  97}, {\"v21\",  98}, {\"v22\",  99}, {\"v23\",  100},\t\\\n   {\"v24\",  101},{\"v25\",  102},{\"v26\",  103},{\"v27\",  104},      \\\n   {\"v28\",  105},{\"v29\",  106},{\"v30\",  107},{\"v31\",  108},      \\\n-  {\"vrsave\", 109},\t\t\t\t\t\t\\\n+  {\"vrsave\", 109}, {\"vscr\", 110},\t\t\t\t\\\n   /* no additional names for: mq, lr, ctr, ap */\t\t\\\n   {\"cr0\",  68}, {\"cr1\",  69}, {\"cr2\",  70}, {\"cr3\",  71},\t\\\n   {\"cr4\",  72}, {\"cr5\",  73}, {\"cr6\",  74}, {\"cr7\",  75},\t\\"}, {"sha": "793d21fafc28971f52dcde0454674a87ef0d9672", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 66, "deletions": 33, "changes": 99, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f0043518ad447a8bdbe734d82c39f8663c93b0d/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f0043518ad447a8bdbe734d82c39f8663c93b0d/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=5f0043518ad447a8bdbe734d82c39f8663c93b0d", "patch": "@@ -14166,47 +14166,53 @@\n (define_insn \"altivec_vaddubs\"\n   [(set (match_operand:V16QI 0 \"register_operand\" \"=v\")\n         (unspec:V16QI [(match_operand:V16QI 1 \"register_operand\" \"v\")\n-                       (match_operand:V16QI 2 \"register_operand\" \"v\")] 36))]\n+                       (match_operand:V16QI 2 \"register_operand\" \"v\")] 36))\n+   (set (reg:SI 110) (unspec:SI [(const_int 0)] 213))]\n   \"TARGET_ALTIVEC\"\n   \"vaddubs %0,%1,%2\"\n   [(set_attr \"type\" \"vecsimple\")])\n \n (define_insn \"altivec_vaddsbs\"\n   [(set (match_operand:V16QI 0 \"register_operand\" \"=v\")\n         (unspec:V16QI [(match_operand:V16QI 1 \"register_operand\" \"v\")\n-                       (match_operand:V16QI 2 \"register_operand\" \"v\")] 37))]\n+                       (match_operand:V16QI 2 \"register_operand\" \"v\")] 37))\n+   (set (reg:SI 110) (unspec:SI [(const_int 0)] 213))]\n   \"TARGET_ALTIVEC\"\n   \"vaddsbs %0,%1,%2\"\n   [(set_attr \"type\" \"vecsimple\")])\n \n (define_insn \"altivec_vadduhs\"\n   [(set (match_operand:V8HI 0 \"register_operand\" \"=v\")\n         (unspec:V8HI [(match_operand:V8HI 1 \"register_operand\" \"v\")\n-                      (match_operand:V8HI 2 \"register_operand\" \"v\")] 38))]\n+                      (match_operand:V8HI 2 \"register_operand\" \"v\")] 38))\n+   (set (reg:SI 110) (unspec:SI [(const_int 0)] 213))]\n   \"TARGET_ALTIVEC\"\n   \"vadduhs %0,%1,%2\"\n   [(set_attr \"type\" \"vecsimple\")])\n \n (define_insn \"altivec_vaddshs\"\n   [(set (match_operand:V8HI 0 \"register_operand\" \"=v\")\n         (unspec:V8HI [(match_operand:V8HI 1 \"register_operand\" \"v\")\n-                      (match_operand:V8HI 2 \"register_operand\" \"v\")] 39))]\n+                      (match_operand:V8HI 2 \"register_operand\" \"v\")] 39))\n+   (set (reg:SI 110) (unspec:SI [(const_int 0)] 213))]\n   \"TARGET_ALTIVEC\"\n   \"vaddshs %0,%1,%2\"\n   [(set_attr \"type\" \"vecsimple\")])\n \n (define_insn \"altivec_vadduws\"\n   [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n         (unspec:V4SI [(match_operand:V4SI 1 \"register_operand\" \"v\")\n-                      (match_operand:V4SI 2 \"register_operand\" \"v\")] 40))]\n+                      (match_operand:V4SI 2 \"register_operand\" \"v\")] 40))\n+   (set (reg:SI 110) (unspec:SI [(const_int 0)] 213))]\n   \"TARGET_ALTIVEC\"\n   \"vadduws %0,%1,%2\"\n   [(set_attr \"type\" \"vecsimple\")])\n \n (define_insn \"altivec_vaddsws\"\n   [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n         (unspec:V4SI [(match_operand:V4SI 1 \"register_operand\" \"v\")\n-                      (match_operand:V4SI 2 \"register_operand\" \"v\")] 41))]\n+                      (match_operand:V4SI 2 \"register_operand\" \"v\")] 41))\n+   (set (reg:SI 110) (unspec:SI [(const_int 0)] 213))]\n   \"TARGET_ALTIVEC\"\n   \"vaddsws %0,%1,%2\"\n   [(set_attr \"type\" \"vecsimple\")])\n@@ -14453,7 +14459,8 @@\n   [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n         (unspec:V4SI [(match_operand:V8HI 1 \"register_operand\" \"v\")\n \t\t      (match_operand:V8HI 2 \"register_operand\" \"v\")\n-                      (match_operand:V4SI 3 \"register_operand\" \"v\")] 69))]\n+                      (match_operand:V4SI 3 \"register_operand\" \"v\")] 69))\n+   (set (reg:SI 110) (unspec:SI [(const_int 0)] 213))]\n   \"TARGET_ALTIVEC\"\n   \"vmsumuhs %0, %1, %2, %3\"\n   [(set_attr \"type\" \"veccomplex\")])\n@@ -14462,7 +14469,8 @@\n   [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n         (unspec:V4SI [(match_operand:V8HI 1 \"register_operand\" \"v\")\n \t\t      (match_operand:V8HI 2 \"register_operand\" \"v\")\n-                      (match_operand:V4SI 3 \"register_operand\" \"v\")] 70))]\n+                      (match_operand:V4SI 3 \"register_operand\" \"v\")] 70))\n+   (set (reg:SI 110) (unspec:SI [(const_int 0)] 213))]\n   \"TARGET_ALTIVEC\"\n   \"vmsumshs %0, %1, %2, %3\"\n   [(set_attr \"type\" \"veccomplex\")])\n@@ -14527,15 +14535,17 @@\n   [(set (match_operand:V8HI 0 \"register_operand\" \"=v\")\n         (unspec:V8HI [(match_operand:V8HI 1 \"register_operand\" \"v\")\n \t\t      (match_operand:V8HI 2 \"register_operand\" \"v\")\n-                      (match_operand:V8HI 3 \"register_operand\" \"v\")] 71))]\n+                      (match_operand:V8HI 3 \"register_operand\" \"v\")] 71))\n+   (set (reg:SI 110) (unspec:SI [(const_int 0)] 213))]\n   \"TARGET_ALTIVEC\"\n   \"vmhaddshs %0, %1, %2, %3\"\n   [(set_attr \"type\" \"veccomplex\")])\n (define_insn \"altivec_vmhraddshs\"\n   [(set (match_operand:V8HI 0 \"register_operand\" \"=v\")\n         (unspec:V8HI [(match_operand:V8HI 1 \"register_operand\" \"v\")\n \t\t      (match_operand:V8HI 2 \"register_operand\" \"v\")\n-                      (match_operand:V8HI 3 \"register_operand\" \"v\")] 72))]\n+                      (match_operand:V8HI 3 \"register_operand\" \"v\")] 72))\n+   (set (reg:SI 110) (unspec:SI [(const_int 0)] 213))]\n   \"TARGET_ALTIVEC\"\n   \"vmhraddshs %0, %1, %2, %3\"\n   [(set_attr \"type\" \"veccomplex\")])\n@@ -14822,63 +14832,71 @@\n (define_insn \"altivec_vpkuhss\"\n   [(set (match_operand:V16QI 0 \"register_operand\" \"=v\")\n         (unspec:V16QI [(match_operand:V8HI 1 \"register_operand\" \"v\")\n-                       (match_operand:V8HI 2 \"register_operand\" \"v\")] 96))]\n+                       (match_operand:V8HI 2 \"register_operand\" \"v\")] 96))\n+   (set (reg:SI 110) (unspec:SI [(const_int 0)] 213))]\n   \"TARGET_ALTIVEC\"\n   \"vpkuhss %0,%1,%2\"\n   [(set_attr \"type\" \"vecperm\")])\n \n (define_insn \"altivec_vpkshss\"\n   [(set (match_operand:V16QI 0 \"register_operand\" \"=v\")\n         (unspec:V16QI [(match_operand:V8HI 1 \"register_operand\" \"v\")\n-                       (match_operand:V8HI 2 \"register_operand\" \"v\")] 97))]\n+                       (match_operand:V8HI 2 \"register_operand\" \"v\")] 97))\n+   (set (reg:SI 110) (unspec:SI [(const_int 0)] 213))]\n   \"TARGET_ALTIVEC\"\n   \"vpkshss %0,%1,%2\"\n   [(set_attr \"type\" \"vecperm\")])\n \n (define_insn \"altivec_vpkuwss\"\n   [(set (match_operand:V8HI 0 \"register_operand\" \"=v\")\n         (unspec:V8HI [(match_operand:V4SI 1 \"register_operand\" \"v\")\n-                      (match_operand:V4SI 2 \"register_operand\" \"v\")] 98))]\n+                      (match_operand:V4SI 2 \"register_operand\" \"v\")] 98))\n+   (set (reg:SI 110) (unspec:SI [(const_int 0)] 213))]\n   \"TARGET_ALTIVEC\"\n   \"vpkuwss %0,%1,%2\"\n   [(set_attr \"type\" \"vecperm\")])\n \n (define_insn \"altivec_vpkswss\"\n   [(set (match_operand:V8HI 0 \"register_operand\" \"=v\")\n         (unspec:V8HI [(match_operand:V4SI 1 \"register_operand\" \"v\")\n-                      (match_operand:V4SI 2 \"register_operand\" \"v\")] 99))]\n+                      (match_operand:V4SI 2 \"register_operand\" \"v\")] 99))\n+   (set (reg:SI 110) (unspec:SI [(const_int 0)] 213))]\n   \"TARGET_ALTIVEC\"\n   \"vpkswss %0,%1,%2\"\n   [(set_attr \"type\" \"vecperm\")])\n \n (define_insn \"altivec_vpkuhus\"\n   [(set (match_operand:V16QI 0 \"register_operand\" \"=v\")\n         (unspec:V16QI [(match_operand:V8HI 1 \"register_operand\" \"v\")\n-                       (match_operand:V8HI 2 \"register_operand\" \"v\")] 100))]\n+                       (match_operand:V8HI 2 \"register_operand\" \"v\")] 100))\n+   (set (reg:SI 110) (unspec:SI [(const_int 0)] 213))]\n   \"TARGET_ALTIVEC\"\n   \"vpkuhus %0,%1,%2\"\n   [(set_attr \"type\" \"vecperm\")])\n \n (define_insn \"altivec_vpkshus\"\n   [(set (match_operand:V16QI 0 \"register_operand\" \"=v\")\n         (unspec:V16QI [(match_operand:V8HI 1 \"register_operand\" \"v\")\n-                       (match_operand:V8HI 2 \"register_operand\" \"v\")] 101))]\n+                       (match_operand:V8HI 2 \"register_operand\" \"v\")] 101))\n+   (set (reg:SI 110) (unspec:SI [(const_int 0)] 213))]\n   \"TARGET_ALTIVEC\"\n   \"vpkshus %0,%1,%2\"\n   [(set_attr \"type\" \"vecperm\")])\n \n (define_insn \"altivec_vpkuwus\"\n   [(set (match_operand:V8HI 0 \"register_operand\" \"=v\")\n         (unspec:V8HI [(match_operand:V4SI 1 \"register_operand\" \"v\")\n-                      (match_operand:V4SI 2 \"register_operand\" \"v\")] 102))]\n+                      (match_operand:V4SI 2 \"register_operand\" \"v\")] 102))\n+   (set (reg:SI 110) (unspec:SI [(const_int 0)] 213))]\n   \"TARGET_ALTIVEC\"\n   \"vpkuwus %0,%1,%2\"\n   [(set_attr \"type\" \"vecperm\")])\n \n (define_insn \"altivec_vpkswus\"\n   [(set (match_operand:V8HI 0 \"register_operand\" \"=v\")\n         (unspec:V8HI [(match_operand:V4SI 1 \"register_operand\" \"v\")\n-                      (match_operand:V4SI 2 \"register_operand\" \"v\")] 103))]\n+                      (match_operand:V4SI 2 \"register_operand\" \"v\")] 103))\n+   (set (reg:SI 110) (unspec:SI [(const_int 0)] 213))]\n   \"TARGET_ALTIVEC\"\n   \"vpkswus %0,%1,%2\"\n   [(set_attr \"type\" \"vecperm\")])\n@@ -15054,87 +15072,98 @@\n (define_insn \"altivec_vsububs\"\n   [(set (match_operand:V16QI 0 \"register_operand\" \"=v\")\n         (unspec:V16QI [(match_operand:V16QI 1 \"register_operand\" \"v\")\n-                       (match_operand:V16QI 2 \"register_operand\" \"v\")] 125))]\n+                       (match_operand:V16QI 2 \"register_operand\" \"v\")] 125))\n+   (set (reg:SI 110) (unspec:SI [(const_int 0)] 213))]\n   \"TARGET_ALTIVEC\"\n   \"vsububs %0,%1,%2\"\n   [(set_attr \"type\" \"vecsimple\")])\n \n (define_insn \"altivec_vsubsbs\"\n   [(set (match_operand:V16QI 0 \"register_operand\" \"=v\")\n         (unspec:V16QI [(match_operand:V16QI 1 \"register_operand\" \"v\")\n-                       (match_operand:V16QI 2 \"register_operand\" \"v\")] 126))]\n+                       (match_operand:V16QI 2 \"register_operand\" \"v\")] 126))\n+   (set (reg:SI 110) (unspec:SI [(const_int 0)] 213))]\n   \"TARGET_ALTIVEC\"\n   \"vsubsbs %0,%1,%2\"\n   [(set_attr \"type\" \"vecsimple\")])\n \n (define_insn \"altivec_vsubuhs\"\n   [(set (match_operand:V8HI 0 \"register_operand\" \"=v\")\n         (unspec:V8HI [(match_operand:V8HI 1 \"register_operand\" \"v\")\n-                      (match_operand:V8HI 2 \"register_operand\" \"v\")] 127))]\n+                      (match_operand:V8HI 2 \"register_operand\" \"v\")] 127))\n+   (set (reg:SI 110) (unspec:SI [(const_int 0)] 213))]\n   \"TARGET_ALTIVEC\"\n   \"vsubuhs %0,%1,%2\"\n   [(set_attr \"type\" \"vecsimple\")])\n \n (define_insn \"altivec_vsubshs\"\n   [(set (match_operand:V8HI 0 \"register_operand\" \"=v\")\n         (unspec:V8HI [(match_operand:V8HI 1 \"register_operand\" \"v\")\n-                      (match_operand:V8HI 2 \"register_operand\" \"v\")] 128))]\n+                      (match_operand:V8HI 2 \"register_operand\" \"v\")] 128))\n+   (set (reg:SI 110) (unspec:SI [(const_int 0)] 213))]\n   \"TARGET_ALTIVEC\"\n   \"vsubshs %0,%1,%2\"\n   [(set_attr \"type\" \"vecsimple\")])\n \n (define_insn \"altivec_vsubuws\"\n   [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n         (unspec:V4SI [(match_operand:V4SI 1 \"register_operand\" \"v\")\n-                      (match_operand:V4SI 2 \"register_operand\" \"v\")] 129))]\n+                      (match_operand:V4SI 2 \"register_operand\" \"v\")] 129))\n+   (set (reg:SI 110) (unspec:SI [(const_int 0)] 213))]\n   \"TARGET_ALTIVEC\"\n   \"vsubuws %0,%1,%2\"\n   [(set_attr \"type\" \"vecsimple\")])\n \n (define_insn \"altivec_vsubsws\"\n   [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n         (unspec:V4SI [(match_operand:V4SI 1 \"register_operand\" \"v\")\n-                      (match_operand:V4SI 2 \"register_operand\" \"v\")] 130))]\n+                      (match_operand:V4SI 2 \"register_operand\" \"v\")] 130))\n+   (set (reg:SI 110) (unspec:SI [(const_int 0)] 213))]\n   \"TARGET_ALTIVEC\"\n   \"vsubsws %0,%1,%2\"\n   [(set_attr \"type\" \"vecsimple\")])\n \n (define_insn \"altivec_vsum4ubs\"\n   [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n         (unspec:V4SI [(match_operand:V16QI 1 \"register_operand\" \"v\")\n-                      (match_operand:V4SI 2 \"register_operand\" \"v\")] 131))]\n+                      (match_operand:V4SI 2 \"register_operand\" \"v\")] 131))\n+   (set (reg:SI 110) (unspec:SI [(const_int 0)] 213))]\n   \"TARGET_ALTIVEC\"\n   \"vsum4ubs %0,%1,%2\"\n   [(set_attr \"type\" \"veccomplex\")])\n \n (define_insn \"altivec_vsum4sbs\"\n   [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n         (unspec:V4SI [(match_operand:V16QI 1 \"register_operand\" \"v\")\n-                      (match_operand:V4SI 2 \"register_operand\" \"v\")] 132))]\n+                      (match_operand:V4SI 2 \"register_operand\" \"v\")] 132))\n+   (set (reg:SI 110) (unspec:SI [(const_int 0)] 213))]\n   \"TARGET_ALTIVEC\"\n   \"vsum4sbs %0,%1,%2\"\n   [(set_attr \"type\" \"veccomplex\")])\n \n (define_insn \"altivec_vsum4shs\"\n   [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n         (unspec:V4SI [(match_operand:V8HI 1 \"register_operand\" \"v\")\n-                      (match_operand:V4SI 2 \"register_operand\" \"v\")] 133))]\n+                      (match_operand:V4SI 2 \"register_operand\" \"v\")] 133))\n+   (set (reg:SI 110) (unspec:SI [(const_int 0)] 213))]\n   \"TARGET_ALTIVEC\"\n   \"vsum4shs %0,%1,%2\"\n   [(set_attr \"type\" \"veccomplex\")])\n \n (define_insn \"altivec_vsum2sws\"\n   [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n         (unspec:V4SI [(match_operand:V4SI 1 \"register_operand\" \"v\")\n-                      (match_operand:V4SI 2 \"register_operand\" \"v\")] 134))]\n+                      (match_operand:V4SI 2 \"register_operand\" \"v\")] 134))\n+   (set (reg:SI 110) (unspec:SI [(const_int 0)] 213))]\n   \"TARGET_ALTIVEC\"\n   \"vsum2sws %0,%1,%2\"\n   [(set_attr \"type\" \"veccomplex\")])\n \n (define_insn \"altivec_vsumsws\"\n   [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n         (unspec:V4SI [(match_operand:V4SI 1 \"register_operand\" \"v\")\n-                      (match_operand:V4SI 2 \"register_operand\" \"v\")] 135))]\n+                      (match_operand:V4SI 2 \"register_operand\" \"v\")] 135))\n+   (set (reg:SI 110) (unspec:SI [(const_int 0)] 213))]\n   \"TARGET_ALTIVEC\"\n   \"vsumsws %0,%1,%2\"\n   [(set_attr \"type\" \"veccomplex\")])\n@@ -15283,15 +15312,17 @@\n (define_insn \"altivec_vctuxs\"\n   [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n         (unspec:V4SI [(match_operand:V4SF 1 \"register_operand\" \"v\")\n-                      (match_operand:QI 2 \"immediate_operand\" \"i\")] 153))]\n+                      (match_operand:QI 2 \"immediate_operand\" \"i\")] 153))\n+   (set (reg:SI 110) (unspec:SI [(const_int 0)] 213))]\n   \"TARGET_ALTIVEC\"\n   \"vctuxs %0, %1, %2\"\n   [(set_attr \"type\" \"vecfloat\")])\n \n (define_insn \"altivec_vctsxs\"\n   [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n         (unspec:V4SI [(match_operand:V4SF 1 \"register_operand\" \"v\")\n-                      (match_operand:QI 2 \"immediate_operand\" \"i\")] 154))]\n+                      (match_operand:QI 2 \"immediate_operand\" \"i\")] 154))\n+   (set (reg:SI 110) (unspec:SI [(const_int 0)] 213))]\n   \"TARGET_ALTIVEC\"\n   \"vctsxs %0, %1, %2\"\n   [(set_attr \"type\" \"vecfloat\")])\n@@ -15514,14 +15545,16 @@\n [(set_attr \"type\" \"veccmp\")])\n \n (define_insn \"altivec_mtvscr\"\n-  [(unspec_volatile [(match_operand:V4SI 0 \"register_operand\" \"v\")] 186)]\n+  [(set (reg:SI 110)\n+\t(unspec_volatile:SI\n+\t [(match_operand:V4SI 0 \"register_operand\" \"v\")] 186))]\n   \"TARGET_ALTIVEC\"\n   \"mtvscr %0\"\n   [(set_attr \"type\" \"vecsimple\")])\n \n (define_insn \"altivec_mfvscr\"\n   [(set (match_operand:V8HI 0 \"register_operand\" \"=v\")\n-\t(unspec_volatile:V8HI [(const_int 0)] 187))]\n+\t(unspec_volatile:V8HI [(reg:SI 110)] 187))]\n   \"TARGET_ALTIVEC\"\n   \"mfvscr %0\"\n   [(set_attr \"type\" \"vecsimple\")])"}]}