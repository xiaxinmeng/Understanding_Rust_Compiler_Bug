{"sha": "d99111fd8e12deffdd9a965ce17e8a760d531ec3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDk5MTExZmQ4ZTEyZGVmZmRkOWE5NjVjZTE3ZThhNzYwZDUzMWVjMw==", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2021-03-11T16:01:22Z"}, "committer": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2021-03-25T12:00:11Z"}, "message": "Avoid OpenMP/nvptx execution-time hangs for simple nested OpenMP 'target'/'parallel'/'task' constructs [PR99555]\n\n... awaiting proper resolution, of course.\n\n\tlibgomp/\n\tPR target/99555\n\t* testsuite/lib/on_device_arch.c: New file.\n\t* testsuite/libgomp.c/pr99555-1.c: Likewise.\n\t* testsuite/libgomp.c-c++-common/task-detach-6.c: Until resolved,\n\tskip for nvptx offloading, with error status.\n\t* testsuite/libgomp.fortran/task-detach-6.f90: Likewise.", "tree": {"sha": "d544e82c1f83c36d92bfe647da2d81a86a21608d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d544e82c1f83c36d92bfe647da2d81a86a21608d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d99111fd8e12deffdd9a965ce17e8a760d531ec3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d99111fd8e12deffdd9a965ce17e8a760d531ec3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d99111fd8e12deffdd9a965ce17e8a760d531ec3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d99111fd8e12deffdd9a965ce17e8a760d531ec3/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8bafce1be11a301c2421483736c634b8bf330e69", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8bafce1be11a301c2421483736c634b8bf330e69", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8bafce1be11a301c2421483736c634b8bf330e69"}], "stats": {"total": 69, "additions": 69, "deletions": 0}, "files": [{"sha": "1c0753c318149cbd0384e2ec35a11321b2f29c8f", "filename": "libgomp/testsuite/lib/on_device_arch.c", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d99111fd8e12deffdd9a965ce17e8a760d531ec3/libgomp%2Ftestsuite%2Flib%2Fon_device_arch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d99111fd8e12deffdd9a965ce17e8a760d531ec3/libgomp%2Ftestsuite%2Flib%2Fon_device_arch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flib%2Fon_device_arch.c?ref=d99111fd8e12deffdd9a965ce17e8a760d531ec3", "patch": "@@ -0,0 +1,30 @@\n+#include <gomp-constants.h>\n+\n+/* static */ int\n+device_arch_nvptx (void)\n+{\n+  return GOMP_DEVICE_NVIDIA_PTX;\n+}\n+\n+#pragma omp declare variant (device_arch_nvptx) match(construct={target},device={arch(nvptx)})\n+/* static */ int\n+device_arch (void)\n+{\n+  return GOMP_DEVICE_DEFAULT;\n+}\n+\n+static int\n+on_device_arch (int d)\n+{\n+  int d_cur;\n+  #pragma omp target map(from:d_cur)\n+  d_cur = device_arch ();\n+\n+  return d_cur == d;\n+}\n+\n+int\n+on_device_arch_nvptx ()\n+{\n+  return on_device_arch (GOMP_DEVICE_NVIDIA_PTX);\n+}"}, {"sha": "4a3e4a2a3d2862a53d7ca6e56ac5cdcfc0cef64e", "filename": "libgomp/testsuite/libgomp.c-c++-common/task-detach-6.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d99111fd8e12deffdd9a965ce17e8a760d531ec3/libgomp%2Ftestsuite%2Flibgomp.c-c%2B%2B-common%2Ftask-detach-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d99111fd8e12deffdd9a965ce17e8a760d531ec3/libgomp%2Ftestsuite%2Flibgomp.c-c%2B%2B-common%2Ftask-detach-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c-c%2B%2B-common%2Ftask-detach-6.c?ref=d99111fd8e12deffdd9a965ce17e8a760d531ec3", "patch": "@@ -1,5 +1,8 @@\n /* { dg-do run } */\n \n+/* { dg-additional-sources \"../lib/on_device_arch.c\" } */\n+extern int on_device_arch_nvptx ();\n+\n #include <omp.h>\n #include <assert.h>\n \n@@ -9,6 +12,10 @@\n \n int main (void)\n {\n+  //TODO See '../libgomp.c/pr99555-1.c'.\n+  if (on_device_arch_nvptx ())\n+    __builtin_abort (); //TODO Until resolved, skip, with error status.\n+\n   int x = 0, y = 0, z = 0;\n   int thread_count;\n   omp_event_handle_t detach_event1, detach_event2;"}, {"sha": "9ba330959d802114a0827fe6c21fc59baa3fb353", "filename": "libgomp/testsuite/libgomp.c/pr99555-1.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d99111fd8e12deffdd9a965ce17e8a760d531ec3/libgomp%2Ftestsuite%2Flibgomp.c%2Fpr99555-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d99111fd8e12deffdd9a965ce17e8a760d531ec3/libgomp%2Ftestsuite%2Flibgomp.c%2Fpr99555-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c%2Fpr99555-1.c?ref=d99111fd8e12deffdd9a965ce17e8a760d531ec3", "patch": "@@ -0,0 +1,19 @@\n+// PR99555 \"[OpenMP/nvptx] Execution-time hang for simple nested OpenMP 'target'/'parallel'/'task' constructs\"\n+\n+// { dg-additional-options \"-O0\" }\n+\n+// { dg-additional-sources \"../lib/on_device_arch.c\" }\n+extern int on_device_arch_nvptx ();\n+\n+int main (void)\n+{\n+  if (on_device_arch_nvptx ())\n+    __builtin_abort (); //TODO Until resolved, skip, with error status.\n+\n+#pragma omp target\n+#pragma omp parallel // num_threads(1)\n+#pragma omp task\n+  ;\n+\n+  return 0;\n+}"}, {"sha": "eda20e73bb84f88441499a7626a57314c9c13686", "filename": "libgomp/testsuite/libgomp.fortran/task-detach-6.f90", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d99111fd8e12deffdd9a965ce17e8a760d531ec3/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftask-detach-6.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d99111fd8e12deffdd9a965ce17e8a760d531ec3/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftask-detach-6.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftask-detach-6.f90?ref=d99111fd8e12deffdd9a965ce17e8a760d531ec3", "patch": "@@ -1,5 +1,8 @@\n ! { dg-do run }\n \n+! { dg-additional-sources ../lib/on_device_arch.c }\n+  ! { dg-prune-output \"command-line option '-fintrinsic-modules-path=.*' is valid for Fortran but not for C\" }\n+\n ! Test tasks with detach clause on an offload device.  Each device\n ! thread spawns off a chain of tasks, that can then be executed by\n ! any available thread.\n@@ -11,6 +14,16 @@ program task_detach_6\n   integer :: x = 0, y = 0, z = 0\n   integer :: thread_count\n \n+  interface\n+    integer function on_device_arch_nvptx() bind(C)\n+    end function on_device_arch_nvptx\n+  end interface\n+\n+  !TODO See '../libgomp.c/pr99555-1.c'.\n+  if (on_device_arch_nvptx () /= 0) then\n+     error stop !TODO Until resolved, skip, with error status.\n+  end if\n+\n   !$omp target map (tofrom: x, y, z) map (from: thread_count)\n     !$omp parallel private (detach_event1, detach_event2)\n       !$omp single"}]}