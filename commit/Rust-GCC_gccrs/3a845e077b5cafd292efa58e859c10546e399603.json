{"sha": "3a845e077b5cafd292efa58e859c10546e399603", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2E4NDVlMDc3YjVjYWZkMjkyZWZhNThlODU5YzEwNTQ2ZTM5OTYwMw==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2014-02-19T10:42:16Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-02-19T10:42:16Z"}, "message": "exp_ch4.adb (Expand_N_Expression_With_Actions): Make sure declarations get properly inserted in Modify_Tree_For_C mode.\n\n2014-02-19  Robert Dewar  <dewar@adacore.com>\n\n\t* exp_ch4.adb (Expand_N_Expression_With_Actions): Make sure\n\tdeclarations get properly inserted in Modify_Tree_For_C mode.\n\t* sinfo.ads: Minor comment addition.\n\nFrom-SVN: r207883", "tree": {"sha": "a6b4caf26c785d13a10d0102a637af0cb1dbbc34", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a6b4caf26c785d13a10d0102a637af0cb1dbbc34"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3a845e077b5cafd292efa58e859c10546e399603", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a845e077b5cafd292efa58e859c10546e399603", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a845e077b5cafd292efa58e859c10546e399603", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a845e077b5cafd292efa58e859c10546e399603/comments", "author": null, "committer": null, "parents": [{"sha": "82d4f39092f2326e7097edff2ddbfb3a4516c86e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82d4f39092f2326e7097edff2ddbfb3a4516c86e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82d4f39092f2326e7097edff2ddbfb3a4516c86e"}], "stats": {"total": 42, "additions": 41, "deletions": 1}, "files": [{"sha": "1892dbf10f65f9a6442f52f84391180f23d0d003", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a845e077b5cafd292efa58e859c10546e399603/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a845e077b5cafd292efa58e859c10546e399603/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=3a845e077b5cafd292efa58e859c10546e399603", "patch": "@@ -1,3 +1,9 @@\n+2014-02-19  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_ch4.adb (Expand_N_Expression_With_Actions): Make sure\n+\tdeclarations get properly inserted in Modify_Tree_For_C mode.\n+\t* sinfo.ads: Minor comment addition.\n+\n 2014-02-19  Robert Dewar  <dewar@adacore.com>\n \n \t* par-ch9.adb, exp_ch5.adb, sem_ch5.adb, exp_attr.adb, sem_util.adb,"}, {"sha": "b9ff98c88862f82b2f90df4163e90ff7427e9ee3", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 31, "deletions": 1, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a845e077b5cafd292efa58e859c10546e399603/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a845e077b5cafd292efa58e859c10546e399603/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=3a845e077b5cafd292efa58e859c10546e399603", "patch": "@@ -5067,12 +5067,42 @@ package body Exp_Ch4 is\n    --------------------------------------\n \n    procedure Expand_N_Expression_With_Actions (N : Node_Id) is\n+      procedure Insert_Declaration (Decl : Node_Id);\n+      --  This is like Insert_Action, but inserts outside the expression in\n+      --  which N appears. This is needed, because otherwise we can end up\n+      --  inserting a declaration in the actions of a short circuit, and that\n+      --  will not do, because that's likely where we (the expression with\n+      --  actions) node came from the first place. We are only inserting a\n+      --  declaration with no side effects, so it is harmless (and needed)\n+      --  to insert at a higher point in the tree.\n+\n       function Process_Action (Act : Node_Id) return Traverse_Result;\n       --  Inspect and process a single action of an expression_with_actions for\n       --  transient controlled objects. If such objects are found, the routine\n       --  generates code to clean them up when the context of the expression is\n       --  evaluated or elaborated.\n \n+      ------------------------\n+      -- Insert_Declaration --\n+      ------------------------\n+\n+      procedure Insert_Declaration (Decl : Node_Id) is\n+         P : Node_Id;\n+\n+      begin\n+         --  Climb out of the current expression\n+\n+         P := Decl;\n+         loop\n+            exit when Nkind (Parent (P)) not in N_Subexpr;\n+            P := Parent (P);\n+         end loop;\n+\n+         --  Now do the insertion\n+\n+         Insert_Action (P, Decl);\n+      end Insert_Declaration;\n+\n       --------------------\n       -- Process_Action --\n       --------------------\n@@ -5135,7 +5165,7 @@ package body Exp_Ch4 is\n                Exp := Expression (Act);\n                Set_Constant_Present (Act, False);\n                Set_Expression (Act, Empty);\n-               Insert_Action (N, Relocate_Node (Act));\n+               Insert_Declaration (Relocate_Node (Act));\n \n                Loc := Sloc (Act);\n "}, {"sha": "ee3596545d72967ba9934c49397dc57c6a7fe592", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a845e077b5cafd292efa58e859c10546e399603/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a845e077b5cafd292efa58e859c10546e399603/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=3a845e077b5cafd292efa58e859c10546e399603", "patch": "@@ -2925,6 +2925,10 @@ package Sinfo is\n       --  Discrete_Subtype_Definitions (List2)\n       --  Component_Definition (Node4)\n \n+      --  Note: although the language allows the full syntax for discrete\n+      --  subtype definitions (i.e. a discrete subtype indication or a range),\n+      --  in the generated tree, we always rewrite these as N_Range nodes.\n+\n       --------------------------------------\n       -- 3.6  Discrete Subtype Definition --\n       --------------------------------------"}]}