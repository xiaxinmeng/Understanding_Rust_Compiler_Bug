{"sha": "63e5e3e0dbb7207e95c0437499b980a304665589", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjNlNWUzZTBkYmI3MjA3ZTk1YzA0Mzc0OTliOTgwYTMwNDY2NTU4OQ==", "commit": {"author": {"name": "Anthony Green", "email": "green@gcc.gnu.org", "date": "1999-08-08T13:27:18Z"}, "committer": {"name": "Anthony Green", "email": "green@gcc.gnu.org", "date": "1999-08-08T13:27:18Z"}, "message": "Initial revision\n\nFrom-SVN: r28593", "tree": {"sha": "7687d170c71097dc434304205f4ea24833298d64", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7687d170c71097dc434304205f4ea24833298d64"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/63e5e3e0dbb7207e95c0437499b980a304665589", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63e5e3e0dbb7207e95c0437499b980a304665589", "html_url": "https://github.com/Rust-GCC/gccrs/commit/63e5e3e0dbb7207e95c0437499b980a304665589", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63e5e3e0dbb7207e95c0437499b980a304665589/comments", "author": null, "committer": null, "parents": [{"sha": "108c535a0c8a62b1edcbe4187365bf82e18d23ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/108c535a0c8a62b1edcbe4187365bf82e18d23ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/108c535a0c8a62b1edcbe4187365bf82e18d23ad"}], "stats": {"total": 20134, "additions": 20134, "deletions": 0}, "files": [{"sha": "68a3f05411d59455aebe1a23ee7b34c9a20a54fb", "filename": "libffi/ChangeLog", "status": "added", "additions": 76, "deletions": 0, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63e5e3e0dbb7207e95c0437499b980a304665589/libffi%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63e5e3e0dbb7207e95c0437499b980a304665589/libffi%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FChangeLog?ref=63e5e3e0dbb7207e95c0437499b980a304665589", "patch": "@@ -0,0 +1,76 @@\n+1999-08-09  Anthony Green  <green@cygnus.com>\n+\n+\t* include/ffi.h.in: Try to work around messy header problem\n+\twith PACKAGE and VERSION.\n+\n+\t* configure: Rebuilt.\n+\t* configure.in: Change version to 2.00-beta.\n+\n+        * fficonfig.h.in: Rebuilt.\n+\t* acconfig.h (FFI_NO_STRUCTS, FFI_NO_RAW_API): Define.\n+\n+\t* src/x86/ffi.c (ffi_raw_call): Rename.\n+\n+1999-08-02  Kresten Krab Thorup  <krab@dominiq.is.s.u-tokyo.ac.jp>\n+\n+\t* src/x86/ffi.c (ffi_closure_SYSV): New function.\n+\t(ffi_prep_incoming_args_SYSV): Ditto.\n+\t(ffi_prep_closure): Ditto.\n+\t(ffi_closure_raw_SYSV): Ditto.\n+\t(ffi_prep_raw_closure): More ditto.\n+\t(ffi_call_raw): Final ditto.\n+\n+\t* include/ffi.h.in: Add definitions for closure and raw API.\n+\n+\t* src/x86/ffi.c (ffi_prep_cif_machdep): Added case for\n+\tFFI_TYPE_UINT64.  \n+\n+\t* Makefile.am (libffi_la_common_SOURCES): Added raw_api.c\n+\n+\t* src/raw_api.c: New file.\n+\n+\t* include/ffi.h.in (ffi_raw): New type.\n+\t(UINT_ARG, SINT_ARG): New defines.\n+\t(ffi_closure, ffi_raw_closure): New types.\n+\t(ffi_prep_closure, ffi_prep_raw_closure): New declarations.\n+\t\n+\t* configure.in: Add check for endianness and sizeof void*.\n+\n+\t* src/x86/sysv.S (ffi_call_SYSV): Call fixup routine via argument,\n+\tinstead of directly.\n+\n+\t* configure: Rebuilt.\n+\n+Thu Jul  8 14:28:42 1999  Anthony Green  <green@cygnus.com>\n+\n+\t* configure.in: Add x86 and powerpc BeOS configurations.\n+\tFrom Makoto Kato <m_kato@ga2.so-net.ne.jp>.\n+\n+1999-05-09  Anthony Green  <green@cygnus.com>\n+\n+\t* configure.in: Add warning about this being beta code.\n+\tRemove src/Makefile.am from the picture.\n+\t* configure: Rebuilt.\n+\n+\t* Makefile.am: Move logic from src/Makefile.am.  Add changes\n+\tto support libffi as a target library.\n+\t* Makefile.in: Rebuilt.\n+\n+\t* aclocal.m4, config.guess, config.sub, ltconfig, ltmain.sh:\n+\tUpgraded to new autoconf, automake, libtool.\n+\n+\t* README: Tweaks.\n+\n+\t* LICENSE: Update copyright date.\n+\n+\t* src/Makefile.am, src/Makefile.in: Removed.\n+\n+1998-11-29  Anthony Green  <green@cygnus.com>\n+\n+\t* include/ChangeLog: Removed.\n+\t* src/ChangeLog: Removed.\n+\t* src/mips/ChangeLog: Removed.\n+\t* src/sparc/ChangeLog: Remboved.\n+\t* src/x86/ChangeLog: Removed.\n+\n+\t* ChangeLog.v1: Created."}, {"sha": "369820cbdb02a22c2e29e202f44c51623932afb4", "filename": "libffi/ChangeLog.v1", "status": "added", "additions": 764, "deletions": 0, "changes": 764, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63e5e3e0dbb7207e95c0437499b980a304665589/libffi%2FChangeLog.v1", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63e5e3e0dbb7207e95c0437499b980a304665589/libffi%2FChangeLog.v1", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FChangeLog.v1?ref=63e5e3e0dbb7207e95c0437499b980a304665589", "patch": "@@ -0,0 +1,764 @@\n+The libffi version 1 ChangeLog archive.\n+\n+Version 1 of libffi had per-directory ChangeLogs.  Current and future\n+versions have a single ChangeLog file in the root directory.  The\n+version 1 ChangeLogs have all been concatonated into this file for\n+future reference only.\n+\n+--- libffi ----------------------------------------------------------------\n+\n+Mon Oct  5 02:17:50 1998  Anthony Green  <green@cygnus.com>\n+\n+\t* configure.in: Boosted rev.\n+\t* configure, Makefile.in, aclocal.m4: Rebuilt.\n+\t* README: Boosted rev and updated release notes.\n+\n+Mon Oct  5 01:03:03 1998  Anthony Green  <green@cygnus.com>\n+\n+\t* configure.in: Boosted rev.\n+\t* configure, Makefile.in, aclocal.m4: Rebuilt.\n+\t* README: Boosted rev and updated release notes.\n+\n+1998-07-25  Andreas Schwab  <schwab@issan.informatik.uni-dortmund.de>\n+\n+\t* m68k/ffi.c (ffi_prep_cif_machdep): Use bitmask for cif->flags.\n+\tCorrectly handle small structures.\n+\t(ffi_prep_args): Also handle small structures.\n+\t(ffi_call): Pass size of return type to ffi_call_SYSV.\n+\t* m68k/sysv.S: Adjust for above changes.  Correctly align small\n+\tstructures in the return value.\n+\n+\t* types.c (uint64, sint64) [M68K]: Change alignment to 4.\n+\n+Fri Apr 17 17:26:58 1998  Anthony Green  <green@hoser.cygnus.com>\n+\n+\t* configure.in: Boosted rev.\n+\t* configure,Makefile.in,aclocal.m4: Rebuilt.\n+\t* README: Boosted rev and added release notes.\n+\n+Sun Feb 22 00:50:41 1998  Geoff Keating  <geoffk@ozemail.com.au>\n+\n+\t* configure.in: Add PowerPC config bits.\n+\n+1998-02-14  Andreas Schwab  <schwab@issan.informatik.uni-dortmund.de>\n+\n+\t* configure.in: Add m68k config bits.  Change AC_CANONICAL_SYSTEM\n+\tto AC_CANONICAL_HOST, this is not a compiler.  Use $host instead\n+\tof $target.  Remove AC_CHECK_SIZEOF(char), we already know the\n+\tresult.  Fix argument of AC_ARG_ENABLE.\n+\t* configure, fficonfig.h.in: Rebuilt.\n+\n+Tue Feb 10 20:53:40 1998  Richard Henderson  <rth@cygnus.com>\n+\n+\t* configure.in: Add Alpha config bits.\n+\n+Tue May 13 13:39:20 1997  Anthony Green  <green@hoser.cygnus.com>\n+\n+\t* README: Updated dates and reworded Irix comments.\n+\n+\t* configure.in: Removed AC_PROG_RANLIB.\n+\n+\t* Makefile.in, aclocal.m4, config.guess, config.sub, configure,\n+\tltmain.sh, */Makefile.in: libtoolized again and\trebuilt with \n+\tautomake and autoconf.\n+\t\n+Sat May 10 18:44:50 1997  Tom Tromey  <tromey@cygnus.com>\n+\n+\t* configure, aclocal.m4: Rebuilt.\n+\t* configure.in: Don't compute EXTRADIST; now handled in\n+\tsrc/Makefile.in.  Removed macros implied by AM_INIT_AUTOMAKE.\n+\tDon't run AM_MAINTAINER_MODE.\n+\n+Thu May  8 14:34:05 1997  Anthony Green  <green@hoser.cygnus.com>\n+\n+\t* missing, ltmain.sh, ltconfig.sh: Created. These are new files\n+\trequired by automake and libtool.\n+\n+\t* README: Boosted rev to 1.14. Added notes.\n+\n+\t* acconfig.h: Moved PACKAGE and VERSION for new automake.\n+\t\n+\t* configure.in: Changes for libtool.\n+\t\n+\t* Makefile.am (check): make test now make check. Uses libtool now.\n+\n+\t* Makefile.in, configure.in, aclocal.h, fficonfig.h.in: Rebuilt.\n+\n+Thu May  1 16:27:07 1997  Anthony Green  <green@hoser.cygnus.com>\n+\n+\t* missing: Added file required by new automake.\n+\n+Tue Nov 26 14:10:42 1996  Anthony Green  <green@csk3.cygnus.com>\n+\n+\t* acconfig.h: Added USING_PURIFY flag. This is defined when\n+\t--enable-purify-safety was used at configure time.\n+\n+\t* configure.in (allsources): Added --enable-purify-safety switch.\n+\t(VERSION): Boosted rev to 1.13.\n+\t* configure: Rebuilt.\n+\n+Fri Nov 22 06:46:12 1996  Anthony Green  <green@rtl.cygnus.com>\n+\n+\t* configure.in (VERSION): Boosted rev to 1.12.\n+\tRemoved special CFLAGS hack for gcc.\n+\t* configure: Rebuilt.\n+\n+\t* README: Boosted rev to 1.12. Added notes.\n+\n+\t* Many files: Cygnus Support changed to Cygnus Solutions.\n+\n+Wed Oct 30 11:15:25 1996  Anthony Green  <green@rtl.cygnus.com>\n+\n+\t* configure.in (VERSION): Boosted rev to 1.11.\n+\t* configure: Rebuilt.\n+\n+\t* README: Boosted rev to 1.11. Added notes about GNU make.\n+\n+Tue Oct 29 12:25:12 1996  Anthony Green  <green@rtl.cygnus.com>\n+\n+\t* configure.in: Fixed -Wall trick.\n+\t(VERSION): Boosted rev.\n+\t* configure: Rebuilt\n+\n+\t* acconfig.h: Needed for --enable-debug configure switch.\n+\n+\t* README: Boosted rev to 1.09. Added more notes on building\n+\tlibffi, and LCLint.\n+\n+\t* configure.in: Added --enable-debug switch. Boosted rev to\n+\t1.09.\n+\t* configure: Rebuilt\n+\n+Tue Oct 15 13:11:28 1996  Anthony Green  <green@hoser.cygnus.com>\n+\n+\t* configure.in (VERSION): Boosted rev to 1.08\n+\t* configure: Rebuilt.\n+\n+\t* README: Added n32 bug fix notes.\n+\n+\t* Makefile.am: Added \"make lint\" production. \n+\t* Makefile.in: Rebuilt.\n+\n+Mon Oct 14 10:54:46 1996  Anthony Green  <green@rtl.cygnus.com>\n+\n+\t* README: Added web page reference.\n+\n+\t* configure.in, README: Boosted rev to 1.05\n+\t* configure: Rebuilt.\n+\n+\t* README: Fixed n32 sample code.\n+\n+Fri Oct 11 17:09:28 1996  Anthony Green  <green@rtl.cygnus.com>\n+\n+\t* README: Added sparc notes.\n+\n+\t* configure.in, README: Boosted rev to 1.04.\n+\t* configure: Rebuilt.\n+\n+Thu Oct 10 10:31:03 1996  Anthony Green  <green@rtl.cygnus.com>\n+\n+\t* configure.in, README: Boosted rev to 1.03.\n+\t* configure: Rebuilt.\n+\n+\t* README: Added struct notes. \n+\n+\t* Makefile.am (EXTRA_DIST): Added LICENSE to distribution.\n+\t* Makefile.in: Rebuilt.\n+\n+\t* README: Removed Linux section. No special notes now\n+\tbecause aggregates arg/return types work.\n+\n+Wed Oct  9 16:16:42 1996  Anthony Green  <green@rtl.cygnus.com>\n+\n+\t* README, configure.in (VERSION): Boosted rev to 1.02\n+\t* configure: Rebuilt.\n+\n+Tue Oct  8 11:56:33 1996  Anthony Green  <green@rtl.cygnus.com>\n+\n+\t* README (NOTE): Added n32 notes.\n+\n+\t* Makefile.am: Added test production.\n+\t* Makefile: Rebuilt\n+\n+\t* README: spell checked!\n+\n+\t* configure.in (VERSION): Boosted rev to 1.01\n+\t* configure: Rebuilt.\n+\n+Mon Oct  7 15:50:22 1996  Anthony Green  <green@rtl.cygnus.com>\n+\n+\t* configure.in: Added nasty bit to support SGI tools.\n+\t* configure: Rebuilt.\n+\t\n+\t* README: Added SGI notes. Added note about automake bug.\n+\n+Mon Oct  7 11:00:28 1996  Anthony Green  <green@hoser.cygnus.com>\n+\n+\t* README: Rewrote intro, and fixed examples.\n+\n+Fri Oct  4 10:19:55 1996  Anthony Green  <green@hoser.cygnus.com>\n+\n+\t* configure.in: -D$TARGET is no longer used as a compiler switch.\n+\tIt is now inserted into ffi.h at configure time.\n+\t* configure: Rebuilt.\n+\n+\t* FFI_ABI and FFI_STATUS are now ffi_abi and ffi_status.\n+\n+Thu Oct  3 13:47:34 1996  Anthony Green  <green@hoser.cygnus.com>\n+\n+\t* README, LICENSE: Created. Wrote some docs.\n+\n+\t* configure.in: Don't barf on i586-unknown-linuxaout.\n+\tAdded EXTRADIST code for \"make dist\".\n+\t* configure: Rebuilt.\n+\n+\t* */Makefile.in: Rebuilt with patched automake. \n+\n+Tue Oct  1 17:12:25 1996  Anthony Green  <green@rtl.cygnus.com>\n+\n+\t* Makefile.am, aclocal.m4, config.guess, config.sub,\n+\tconfigure.in, fficonfig.h.in, install-sh, mkinstalldirs, \n+\tstamp-h.in: Created\n+\t* Makefile.in, configure: Generated\n+\n+--- libffi/include --------------------------------------------------------\n+\n+Tue Feb 24 13:09:36 1998  Anthony Green  <green@gerbil.cygnus.com>\n+\n+\t* ffi_mips.h: Updated FFI_TYPE_STRUCT_* values based on\n+\tffi.h.in changes.  This is a work-around for SGI's \"simple\"\n+\tassembler.\n+\n+Sun Feb 22 00:51:55 1998  Geoff Keating  <geoffk@ozemail.com.au>\n+\n+\t* ffi.h.in: PowerPC support.\n+\n+1998-02-14  Andreas Schwab  <schwab@issan.informatik.uni-dortmund.de>\n+\n+\t* ffi.h.in: Add m68k support.\n+\t(FFI_TYPE_LONGDOUBLE): Make it a separate value.\n+\n+Tue Feb 10 20:55:16 1998  Richard Henderson  <rth@cygnus.com>\n+\n+\t* ffi.h.in (SIZEOF_ARG): Use a pointer type by default.\n+\n+\t* ffi.h.in: Alpha support.\n+\n+Fri Nov 22 06:48:45 1996  Anthony Green  <green@rtl.cygnus.com>\n+\n+\t* ffi.h.in, ffi_common.h: Cygnus Support -> Cygnus Solutions.\n+\n+Wed Nov 20 22:31:01 1996  Anthony Green  <green@hoser.cygnus.com>\n+\n+\t* ffi.h.in: Added ffi_type_void definition.\n+\n+Tue Oct 29 12:22:40 1996  Anthony Green  <green@rtl.cygnus.com>\n+\n+\t* Makefile.am (hack_DATA): Always install ffi_mips.h.\n+\n+\t* ffi.h.in: Removed FFI_DEBUG. It's now in the correct\n+\tplace (acconfig.h).\n+\tAdded #include <stddef.h> for size_t definition.\n+\n+Tue Oct 15 17:23:35 1996  Anthony Green  <green@hoser.cygnus.com>\n+\n+\t* ffi.h.in, ffi_common.h, ffi_mips.h: More clean up.\n+\tCommented out #define of FFI_DEBUG.\n+\n+Tue Oct 15 13:01:06 1996  Anthony Green  <green@rtl.cygnus.com>\n+\n+\t* ffi_common.h: Added bool definition.\n+\n+\t* ffi.h.in, ffi_common.h: Clean up based on LCLint output.\n+\tAdded funny /*@...@*/ comments to annotate source.\n+\n+Mon Oct 14 12:29:23 1996  Anthony Green  <green@rtl.cygnus.com>\n+\n+\t* ffi.h.in: Interface changes based on feedback from Jim\n+\tBlandy.\n+\n+Fri Oct 11 16:49:35 1996  Anthony Green  <green@rtl.cygnus.com>\n+\n+\t* ffi.h.in: Small change for sparc support.\n+\n+Thu Oct 10 14:53:37 1996  Anthony Green  <green@rtl.cygnus.com>\n+\n+\t* ffi_mips.h: Added FFI_TYPE_STRUCT_* definitions for \n+\tspecial structure return types.\n+\n+Wed Oct  9 13:55:57 1996  Anthony Green  <green@rtl.cygnus.com>\n+\n+\t* ffi.h.in: Added SIZEOF_ARG definition for X86\n+\n+Tue Oct  8 11:40:36 1996  Anthony Green  <green@rtl.cygnus.com>\n+\n+\t* ffi.h.in (FFI_FN): Added macro for eliminating compiler warnings.\n+\tUse it to case your function pointers to the proper type.\n+\n+\t* ffi_mips.h (SIZEOF_ARG): Added magic to fix type promotion bug.\n+\n+\t* Makefile.am (EXTRA_DIST): Added ffi_mips.h to EXTRA_DIST.\n+\t* Makefile: Rebuilt.\n+\n+\t* ffi_mips.h: Created. Moved all common mips definitions here.\n+\n+Mon Oct  7 10:58:12 1996  Anthony Green  <green@hoser.cygnus.com>\n+\n+\t* ffi.h.in: The SGI assember is very picky about parens. Redefined\n+ \tsome macros to avoid problems.\n+\n+\t* ffi.h.in: Added FFI_DEFAULT_ABI definitions. Also added\n+\texterns for pointer, and 64bit integral ffi_types.\n+\n+Fri Oct  4 09:51:37 1996  Anthony Green  <green@hoser.cygnus.com>\n+\n+\t* ffi.h.in: Added FFI_ABI member to ffi_cif and changed\n+\tfunction prototypes accordingly.\n+\tAdded #define @TARGET@. Now programs including ffi.h don't \n+\thave to specify this themselves.\n+\n+Thu Oct  3 15:36:44 1996  Anthony Green  <green@hoser.cygnus.com>\n+\n+\t* ffi.h.in: Changed ffi_prep_cif's values from void* to void**\n+\n+\t* Makefile.am (EXTRA_DIST): Added EXTRA_DIST for \"make dist\"\n+\tto work.\n+\t* Makefile.in: Regenerated.\n+\n+Wed Oct  2 10:16:59 1996  Anthony Green  <green@hoser.cygnus.com>\n+\n+\t* Makefile.am: Created\n+\t* Makefile.in: Generated\n+\n+\t* ffi_common.h: Added rcsid comment\n+\n+Tue Oct  1 17:13:51 1996  Anthony Green  <green@rtl.cygnus.com>\n+\n+\t* ffi.h.in, ffi_common.h: Created\n+\n+--- libffi/src ------------------------------------------------------------\n+\n+Mon Oct  5 02:17:50 1998  Anthony Green  <green@cygnus.com>\n+\n+\t* arm/ffi.c, arm/sysv.S: Created.\n+\n+\t* Makefile.am: Added arm files.\n+\t* Makefile.in: Rebuilt.\n+\n+Mon Oct  5 01:41:38 1998  Anthony Green  <green@rtl.cygnus.com>\n+\n+\t* Makefile.am (libffi_la_LDFLAGS): Incremented revision.\n+\n+Sun Oct  4 16:27:17 1998  Anthony Green  <green@cygnus.com>\n+\n+\t* alpha/osf.S (ffi_call_osf): Patch for DU assembler.\n+\n+\t* ffitest.c (main): long long and long double return values work\n+\tfor x86.\n+\n+Fri Apr 17 11:50:58 1998  Anthony Green  <green@hoser.cygnus.com>\n+\n+\t* Makefile.in: Rebuilt.\n+\n+\t* ffitest.c (main): Floating point tests not executed for systems\n+ \twith broken lond double (SunOS 4 w/ GCC).\n+\n+\t* types.c: Fixed x86 alignment info for long long types.\n+\n+Thu Apr 16 07:15:28 1998  Anthony Green  <green@ada.cygnus.com>\n+\n+\t* ffitest.c: Added more notes about GCC bugs under Irix 6.\n+\n+Wed Apr 15 08:42:22 1998  Anthony Green  <green@hoser.cygnus.com>\n+\n+\t* ffitest.c (struct5): New test function.\n+\t(main): New test with struct5.\n+\n+Thu Mar  5 10:48:11 1998  Anthony Green  <green@tootie.to.cygnus.com>\n+\n+\t* prep_cif.c (initialize_aggregate): Fix assertion for\n+\tnested structures.\n+\n+Tue Feb 24 16:33:41 1998  Anthony Green  <green@hoser.cygnus.com>\n+\n+\t* prep_cif.c (ffi_prep_cif): Added long double support for sparc.\n+\n+Sun Feb 22 00:52:18 1998  Geoff Keating  <geoffk@ozemail.com.au>\n+\n+\t* powerpc/asm.h: New file.\n+\t* powerpc/ffi.c: New file.\n+\t* powerpc/sysv.S: New file.\n+\t* Makefile.am: PowerPC port.\n+\t* ffitest.c (main): Allow all tests to run even in presence of gcc\n+ \tbug on PowerPC.\n+\n+1998-02-17  Anthony Green  <green@hoser.cygnus.com>\n+\n+\t* mips/ffi.c: Fixed comment typo.\n+\n+\t* x86/ffi.c (ffi_prep_cif_machdep), x86/sysv.S (retfloat): \n+\tFixed x86 long double return handling.\n+\n+\t* types.c: Fixed x86 long double alignment info.\n+\n+1998-02-14  Andreas Schwab  <schwab@issan.informatik.uni-dortmund.de>\n+\n+\t* types.c: Add m68k support.\n+\n+\t* ffitest.c (floating): Add long double parameter.\n+\t(return_ll, ldblit): New functions to test long long and long\n+\tdouble return value.\n+\t(main): Fix type error in assignment of ts[1-4]_type.elements.\n+\tAdd tests for long long and long double arguments and return\n+\tvalues.\n+\n+\t* prep_cif.c (ffi_prep_cif) [M68K]: Don't allocate argument for\n+\tstruct value pointer.\n+\n+\t* m68k/ffi.c, m68k/sysv.S: New files.\n+\t* Makefile.am: Add bits for m68k port.  Add kludge to work around\n+\tautomake deficiency.\n+\t(test): Don't require \".\" in $PATH.\n+\t* Makefile.in: Rebuilt.\n+\n+Wed Feb 11 07:36:50 1998  Anthony Green  <green@hoser.cygnus.com>\n+\n+\t* Makefile.in: Rebuilt.\n+\n+Tue Feb 10 20:56:00 1998  Richard Henderson  <rth@cygnus.com>\n+\n+\t* alpha/ffi.c, alpha/osf.S: New files.\n+\t* Makefile.am: Alpha port.\n+\n+Tue Nov 18 14:12:07 1997  Anthony Green  <green@hoser.cygnus.com>\n+\n+\t* mips/ffi.c (ffi_prep_cif_machdep): Initialize rstruct_flag\n+\tfor n32.\n+\n+Tue Jun  3 17:18:20 1997  Anthony Green  <green@hoser.cygnus.com>\n+\n+\t* ffitest.c (main): Added hack to get structure tests working\n+\tcorrectly.\n+\n+Sat May 10 19:06:42 1997  Tom Tromey  <tromey@cygnus.com>\n+\n+\t* Makefile.in: Rebuilt.\n+\t* Makefile.am (EXTRA_DIST): Explicitly list all distributable\n+\tfiles in subdirs.\n+\t(VERSION, CC): Removed.\n+\n+Thu May  8 17:19:01 1997  Anthony Green  <green@hoser.cygnus.com>\n+\n+\t* Makefile.am: Many changes for new automake and libtool.\n+\t* Makefile.in: Rebuilt.\n+\n+Fri Nov 22 06:57:56 1996  Anthony Green  <green@rtl.cygnus.com>\n+\n+\t* ffitest.c (main): Fixed test case for non mips machines.\n+\n+Wed Nov 20 22:31:59 1996  Anthony Green  <green@hoser.cygnus.com>\n+\n+\t* types.c: Added ffi_type_void declaration.\n+\n+Tue Oct 29 13:07:19 1996  Anthony Green  <green@rtl.cygnus.com>\n+\n+\t* ffitest.c (main): Fixed character constants.\n+\t(main): Emit warning for structure test 3 failure on Sun.\n+\n+\t* Makefile.am (VPATH): Fixed VPATH def'n so automake won't\n+\tstrip it out. \n+\tMoved distdir hack from libffi to automake. \n+\t(ffitest): Added missing -c for $(COMPILE) (change in automake).\n+\t* Makefile.in: Rebuilt.\n+\t\n+Tue Oct 15 13:08:20 1996  Anthony Green  <green@hoser.cygnus.com>\n+\n+\t* Makefile.am: Added \"make lint\" production. \n+\t* Makefile.in: Rebuilt.\n+\n+\t* prep_cif.c (STACK_ARG_SIZE): Improved STACK_ARG_SIZE macro.\n+  \tClean up based on LCLint output. Added funny /*@...@*/ comments to\n+ \tannotate source.\n+\n+\t* ffitest.c, debug.c: Cleaned up code.\n+\n+Mon Oct 14 12:26:56 1996  Anthony Green  <green@rtl.cygnus.com>\n+\n+\t* ffitest.c: Changes based on interface changes.\n+\n+\t* prep_cif.c (ffi_prep_cif): Cleaned up interface based on\n+\tfeedback from Jim Blandy.\n+\n+Fri Oct 11 15:53:18 1996  Anthony Green  <green@rtl.cygnus.com>\n+\n+\t* ffitest.c: Reordered tests while porting to sparc.\n+\tMade changes to handle lame structure passing for sparc.\n+\tRemoved calls to fflush().\n+\n+\t* prep_cif.c (ffi_prep_cif): Added special case for sparc\n+\taggregate type arguments.\n+\n+Thu Oct 10 09:56:51 1996  Anthony Green  <green@rtl.cygnus.com>\n+\n+\t* ffitest.c (main): Added structure passing/returning tests.\n+\n+\t* prep_cif.c (ffi_prep_cif): Perform proper initialization\n+\tof structure return types if needed.\n+\t(initialize_aggregate): Bug fix\n+\n+Wed Oct  9 16:04:20 1996  Anthony Green  <green@rtl.cygnus.com>\n+\n+\t* types.c: Added special definitions for x86 (double doesn't\n+\tneed double word alignment).\n+\n+\t* ffitest.c: Added many tests\n+\n+Tue Oct  8 09:19:22 1996  Anthony Green  <green@rtl.cygnus.com>\n+\n+\t* prep_cif.c (ffi_prep_cif): Fixed assertion.\n+\n+\t* debug.c (ffi_assert): Must return a non void now.\n+\n+\t* Makefile.am: Added test production.\n+\t* Makefile: Rebuilt.\n+\n+\t* ffitest.c (main): Created. \n+\n+\t* types.c: Created. Stripped common code out of */ffi.c.\n+\n+\t* prep_cif.c: Added missing stdlib.h include.\n+\n+\t* debug.c (ffi_type_test): Used \"a\" to eliminate compiler\n+\twarnings in non-debug builds. Included ffi_common.h.\n+\n+Mon Oct  7 15:36:42 1996  Anthony Green  <green@rtl.cygnus.com>\n+\n+\t* Makefile.am: Added a rule for .s -> .o\n+\tThis is required by the SGI compiler.\n+\t* Makefile: Rebuilt.\n+\n+Fri Oct  4 09:51:08 1996  Anthony Green  <green@hoser.cygnus.com>\n+\n+\t* prep_cif.c (initialize_aggregate): Moved abi specification\n+\tto ffi_prep_cif().\n+\n+Thu Oct  3 15:37:37 1996  Anthony Green  <green@hoser.cygnus.com>\n+\n+\t* prep_cif.c (ffi_prep_cif): Changed values from void* to void**.\n+\t(initialize_aggregate): Fixed aggregate type initialization.\n+\n+\t* Makefile.am (EXTRA_DIST): Added support code for \"make dist\".\n+\t* Makefile.in: Regenerated.\n+\n+Wed Oct  2 11:41:57 1996  Anthony Green  <green@hoser.cygnus.com>\n+\n+\t* debug.c, prep_cif: Created.\n+\n+\t* Makefile.am: Added debug.o and prep_cif.o to OBJ.\n+\t* Makefile.in: Regenerated.\n+\n+\t* Makefile.am (INCLUDES): Added missing -I../include\n+\t* Makefile.in: Regenerated.\n+\n+Tue Oct  1 17:11:51 1996  Anthony Green  <green@rtl.cygnus.com>\n+\n+\t* error.c, Makefile.am: Created.\n+\t* Makefile.in: Generated.\n+\n+--- libffi/src/x86 --------------------------------------------------------\n+\n+Sun Oct  4 16:27:17 1998  Anthony Green  <green@cygnus.com>\n+\n+\t* sysv.S (retlongdouble): Fixed long long return value support.\n+\t* ffi.c (ffi_prep_cif_machdep): Ditto.\n+\n+Wed May 13 04:30:33 1998  Anthony Green  <green@raft.ppp.tsoft.net>\n+\n+\t* ffi.c (ffi_prep_cif_machdep): Fixed long double return value\n+\tsupport.\n+\n+Wed Apr 15 08:43:20 1998  Anthony Green  <green@hoser.cygnus.com>\n+\n+\t* ffi.c (ffi_prep_args): small struct support was missing.\n+\n+Thu May  8 16:53:58 1997  Anthony Green  <green@hoser.cygnus.com>\n+\n+\t* objects.mak: Removed.\n+\n+Mon Dec  2 15:12:58 1996  Tom Tromey  <tromey@cygnus.com>\n+\n+\t* sysv.S: Use .balign, for a.out Linux boxes.\n+\n+Tue Oct 15 13:06:50 1996  Anthony Green  <green@hoser.cygnus.com>\n+\n+\t* ffi.c: Clean up based on LCLint output.\n+\tAdded funny /*@...@*/ comments to annotate source.\n+\n+Fri Oct 11 16:43:38 1996  Anthony Green  <green@rtl.cygnus.com>\n+\n+\t* ffi.c (ffi_call): Added assertion for bad ABIs.\n+\n+Wed Oct  9 13:57:27 1996  Anthony Green  <green@rtl.cygnus.com>\n+\n+\t* sysv.S (retdouble): Fixed double return problems.\n+\n+\t* ffi.c\t(ffi_call): Corrected fn arg definition.\n+\t(ffi_prep_cif_machdep): Fixed double return problems\n+\n+Tue Oct  8 12:12:49 1996  Anthony Green  <green@rtl.cygnus.com>\n+\n+\t* ffi.c: Moved ffi_type definitions to types.c.\n+\t(ffi_prep_args): Fixed type promotion bug.\n+\n+Mon Oct  7 15:53:06 1996  Anthony Green  <green@rtl.cygnus.com>\n+\n+\t* ffi.c (FFI_*_TYPEDEF): Removed redundant ';'\n+\n+Fri Oct  4 09:54:53 1996  Anthony Green  <green@hoser.cygnus.com>\n+\n+\t* ffi.c (ffi_call): Removed FFI_ABI arg, and swapped\n+\tremaining args.\n+\n+Wed Oct  2 10:07:05 1996  Anthony Green  <green@hoser.cygnus.com>\n+\n+\t* ffi.c, sysv.S, objects.mak: Created.\n+\t(ffi_prep_cif): cif->rvalue no longer initialized to NULL.\n+\t(ffi_prep_cif_machdep): Moved machine independent cif processing\n+\tto src/prep_cif.c. Introduced ffi_prep_cif_machdep().\n+\n+--- libffi/src/mips -------------------------------------------------------\n+\n+Tue Feb 17 17:18:07 1998  Anthony Green  <green@hoser.cygnus.com>\n+\n+\t* o32.S: Fixed typo in comment.\n+\n+\t* ffi.c (ffi_prep_cif_machdep): Fixed argument processing.\n+\n+Thu May  8 16:53:58 1997  Anthony Green  <green@hoser.cygnus.com>\n+\n+\t* o32.s, n32.s: Wrappers for SGI tool support.\n+\n+\t* objects.mak: Removed.\n+\n+Tue Oct 29 14:37:45 1996  Anthony Green  <green@rtl.cygnus.com>\n+\n+\t* ffi.c (ffi_prep_args): Changed int z to size_t z.\n+\n+Tue Oct 15 13:17:25 1996  Anthony Green  <green@hoser.cygnus.com>\n+\n+\t* n32.S: Fixed bad stack munging. \n+\n+\t* ffi.c: Moved prototypes for ffi_call_?32() to here from\n+\tffi_mips.h because extended_cif is not defined in ffi_mips.h.\n+\n+Mon Oct 14 12:42:02 1996  Anthony Green  <green@rtl.cygnus.com>\n+\n+\t* ffi.c: Interface changes based on feedback from Jim Blandy.\n+\n+Thu Oct 10 11:22:16 1996  Anthony Green  <green@rtl.cygnus.com>\n+\n+\t* n32.S, ffi.c: Lots of changes to support passing and \n+\treturning structures with the n32 calling convention.\n+\n+\t* n32.S: Fixed fn pointer bug.\n+\n+\t* ffi.c (ffi_prep_cif_machdep): Fix for o32 structure\n+\treturn values.\n+\t(ffi_prep_args): Fixed n32 structure passing when structures\n+\tpartially fit in registers.\n+\n+Wed Oct  9 13:49:25 1996  Anthony Green  <green@rtl.cygnus.com>\n+\n+\t* objects.mak: Added n32.o.\n+\n+\t* n32.S: Created.\n+\n+\t* ffi.c (ffi_prep_args): Added magic to support proper\n+\tn32 processing.\n+\n+Tue Oct  8 10:37:35 1996  Anthony Green  <green@rtl.cygnus.com>\n+\n+\t* ffi.c: Moved ffi_type definitions to types.c.\n+\t(ffi_prep_args): Fixed type promotion bug.\n+\n+\t* o32.S: This code is only built for o32 compiles.\n+\tA lot of the #define cruft has moved to ffi_mips.h.\n+\n+\t* ffi.c (ffi_prep_cif_machdep): Fixed arg flags. Second arg\n+\tis only processed if the first is either a float or double.\n+\n+Mon Oct  7 15:33:59 1996  Anthony Green  <green@rtl.cygnus.com>\n+\n+\t* o32.S: Modified to compile under each of o32, n32 and n64.\n+\n+\t* ffi.c (FFI_*_TYPEDEF): Removed redundant ';'\n+\n+Fri Oct  4 09:53:25 1996  Anthony Green  <green@hoser.cygnus.com>\n+\n+\t* ffi.c (ffi_call): Removed FFI_ABI arg, and swapped\n+\tremaining args.\n+\n+Wed Oct  2 17:41:22 1996  Anthony Green  <green@rtl.cygnus.com>\n+\n+\t* o32.S: Removed crufty definitions.\n+\n+Wed Oct  2 12:53:42 1996  Anthony Green  <green@hoser.cygnus.com>\n+\n+\t* ffi.c (ffi_prep_cif): cif->rvalue no longer initialized to NULL.\n+\t(ffi_prep_cif_machdep): Moved all machine independent cif processing\n+\tto src/prep_cif.c. Introduced ffi_prep_cif_machdep. Return types\n+\tof FFI_TYPE_STRUCT are no different than FFI_TYPE_INT.\n+\n+Tue Oct  1 17:11:02 1996  Anthony Green  <green@rtl.cygnus.com>\n+\n+\t* ffi.c, o32.S, object.mak: Created\n+\t\n+--- libffi/src/sparc ------------------------------------------------------\n+\n+Tue Feb 24 16:33:18 1998  Anthony Green  <green@hoser.cygnus.com>\n+\n+\t* ffi.c (ffi_prep_args): Added long double support.\n+\n+Thu May  8 16:53:58 1997  Anthony Green  <green@hoser.cygnus.com>\n+\n+\t* objects.mak: Removed.\n+\n+Thu May  1 16:07:56 1997  Anthony Green  <green@hoser.cygnus.com>\n+\n+\t* v8.S: Fixed minor portability problem reported by \n+\tRuss McManus <mcmanr@eq.gs.com>.\n+\n+Tue Nov 26 14:12:43 1996  Anthony Green  <green@csk3.cygnus.com>\n+\n+\t* v8.S: Used STACKFRAME define elsewhere. \n+\n+\t* ffi.c (ffi_prep_args): Zero out space when USING_PURIFY\n+\tis set.\n+\t(ffi_prep_cif_machdep): Allocate the correct stack frame \n+\tspace for functions with < 6 args.\n+\n+Tue Oct 29 15:08:55 1996  Anthony Green  <green@rtl.cygnus.com>\n+\n+\t* ffi.c (ffi_prep_args): int z is now size_t z.\n+\n+Mon Oct 14 13:31:24 1996  Anthony Green  <green@rtl.cygnus.com>\n+\n+\t* v8.S (ffi_call_V8): Gordon rewrites this again. It looks\n+\tgreat now.\n+\n+\t* ffi.c (ffi_call): The comment about hijacked registers\n+\tis no longer valid after gordoni hacked v8.S.\n+\n+        * v8.S (ffi_call_V8): Rewrote with gordoni. Much simpler.\n+\t\n+\t* v8.S, ffi.c: ffi_call() had changed to accept more than\n+\ttwo args, so v8.S had to change (because it hijacks incoming\n+\targ registers).\n+\n+\t* ffi.c: Interface changes based on feedback from Jim Blandy.\n+\n+Thu Oct 10 17:48:16 1996  Anthony Green  <green@rtl.cygnus.com>\n+\n+\t* ffi.c, v8.S, objects.mak: Created.\n+\t\n+"}, {"sha": "f8f54a04faf3f2363c1b5e87066e1832092b23e8", "filename": "libffi/LICENSE", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63e5e3e0dbb7207e95c0437499b980a304665589/libffi%2FLICENSE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63e5e3e0dbb7207e95c0437499b980a304665589/libffi%2FLICENSE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FLICENSE?ref=63e5e3e0dbb7207e95c0437499b980a304665589", "patch": "@@ -0,0 +1,20 @@\n+libffi - Copyright (c) 1996-1999  Cygnus Solutions\n+\n+Permission is hereby granted, free of charge, to any person obtaining\n+a copy of this software and associated documentation files (the\n+``Software''), to deal in the Software without restriction, including\n+without limitation the rights to use, copy, modify, merge, publish,\n+distribute, sublicense, and/or sell copies of the Software, and to\n+permit persons to whom the Software is furnished to do so, subject to\n+the following conditions:\n+\n+The above copyright notice and this permission notice shall be included\n+in all copies or substantial portions of the Software.\n+\n+THE SOFTWARE IS PROVIDED ``AS IS'', WITHOUT WARRANTY OF ANY KIND, EXPRESS\n+OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n+MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n+IN NO EVENT SHALL CYGNUS SOLUTIONS BE LIABLE FOR ANY CLAIM, DAMAGES OR\n+OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\n+ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n+OTHER DEALINGS IN THE SOFTWARE."}, {"sha": "99c8f2fc3d715cbe747a789b95ee66ec688d84fe", "filename": "libffi/Makefile.am", "status": "added", "additions": 75, "deletions": 0, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63e5e3e0dbb7207e95c0437499b980a304665589/libffi%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63e5e3e0dbb7207e95c0437499b980a304665589/libffi%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FMakefile.am?ref=63e5e3e0dbb7207e95c0437499b980a304665589", "patch": "@@ -0,0 +1,75 @@\n+## Process this with automake to create Makefile.in\n+\n+AUTOMAKE_OPTIONS = cygnus\n+\n+EXTRA_DIST = LICENSE ChangeLog.v1 src/mips/ffi.c src/mips/n32.S \\\n+\t\tsrc/mips/n32.s src/mips/o32.S src/mips/o32.s \\\n+\t\tsrc/sparc/ffi.c src/sparc/v8.S \\\n+\t\tsrc/x86/ffi.c src/x86/sysv.S \\\n+\t\tsrc/alpha/ffi.c src/alpha/osf.S \\\n+\t\tsrc/m68k/ffi.c src/m68k/sysv.S \\\n+\t\tsrc/powerpc/ffi.c src/powerpc/sysv.S src/powerpc/asm.h \\\n+\t\tsrc/arm/ffi.c src/arm/sysv.S\n+\n+VPATH = @srcdir@:@srcdir@/src:@srcdir@/src/@TARGETDIR@\n+\n+# Multilib support variables.\n+MULTISRCTOP =\n+MULTIBUILDTOP =\n+MULTIDIRS =\n+MULTISUBDIR =\n+MULTIDO = true\n+MULTICLEAN = true\n+\n+toolexecdir = $(exec_prefix)/$(target_alias)\n+toolexeclibdir = $(toolexecdir)/lib$(MULTISUBDIR)\n+\n+## We don't use `libz.la' because we don't want to conflict with a\n+## system library of that name.\n+toolexeclib_LTLIBRARIES = libffi.la\n+\n+noinst_PROGRAMS = ffitest\n+\n+ffitest_SOURCES = src/ffitest.c\n+ffitest_LDADD = libffi.la\n+\n+TARGET_SRC_MIPS_GCC = src/mips/ffi.c src/mips/o32.S src/mips/n32.S\n+TARGET_SRC_MIPS_SGI = src/mips/ffi.c src/mips/o32.s src/mips/n32.s\n+TARGET_SRC_X86 = src/x86/ffi.c src/x86/sysv.S\n+TARGET_SRC_SPARC = src/sparc/ffi.c src/sparc/v8.S\n+TARGET_SRC_ALPHA = src/alpha/ffi.c src/alpha/osf.S\n+TARGET_SRC_M68K = src/m68k/ffi.c src/m68k/sysv.S\n+TARGET_SRC_POWERPC = src/powerpc/ffi.c src/powerpc/sysv.S\n+TARGET_SRC_ARM =  src/arm/sysv.S src/arm/ffi.c\n+\n+##libffi_la_SOURCES = src/debug.c src/prep_cif.c src/types.c $(TARGET_SRC_@TARGET@)\n+## Work around automake deficiency\n+libffi_la_common_SOURCES = src/debug.c src/prep_cif.c src/types.c src/raw_api.c \n+if MIPS_GCC\n+libffi_la_SOURCES = $(libffi_la_common_SOURCES) $(TARGET_SRC_MIPS_GCC)\n+endif\n+if MIPS_SGI\n+libffi_la_SOURCES = $(libffi_la_common_SOURCES) $(TARGET_SRC_MIPS_SGI)\n+endif\n+if X86\n+libffi_la_SOURCES = $(libffi_la_common_SOURCES) $(TARGET_SRC_X86)\n+endif\n+if SPARC\n+libffi_la_SOURCES = $(libffi_la_common_SOURCES) $(TARGET_SRC_SPARC)\n+endif\n+if ALPHA\n+libffi_la_SOURCES = $(libffi_la_common_SOURCES) $(TARGET_SRC_ALPHA)\n+endif\n+if M68K\n+libffi_la_SOURCES = $(libffi_la_common_SOURCES) $(TARGET_SRC_M68K)\n+endif\n+if POWERPC\n+libffi_la_SOURCES = $(libffi_la_common_SOURCES) $(TARGET_SRC_POWERPC)\n+endif\n+if ARM\n+libffi_la_SOURCES = $(libffi_la_common_SOURCES) $(TARGET_SRC_ARM)\n+endif\n+\n+libffi_la_LDFLAGS = -release $(VERSION) \n+\n+INCLUDES = -I$(top_srcdir)/include -Iinclude"}, {"sha": "256824be7091a60149c193feed7fabd8a26bca1a", "filename": "libffi/Makefile.in", "status": "added", "additions": 500, "deletions": 0, "changes": 500, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63e5e3e0dbb7207e95c0437499b980a304665589/libffi%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63e5e3e0dbb7207e95c0437499b980a304665589/libffi%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FMakefile.in?ref=63e5e3e0dbb7207e95c0437499b980a304665589", "patch": "@@ -0,0 +1,500 @@\n+# Makefile.in generated automatically by automake 1.4a from Makefile.am\n+\n+# Copyright (C) 1994, 1995-8, 1999 Free Software Foundation, Inc.\n+# This Makefile.in is free software; the Free Software Foundation\n+# gives unlimited permission to copy and/or distribute it,\n+# with or without modifications, as long as this notice is preserved.\n+\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY, to the extent permitted by law; without\n+# even the implied warranty of MERCHANTABILITY or FITNESS FOR A\n+# PARTICULAR PURPOSE.\n+\n+SHELL = @SHELL@\n+\n+srcdir = @srcdir@\n+top_srcdir = @top_srcdir@\n+prefix = @prefix@\n+exec_prefix = @exec_prefix@\n+\n+bindir = @bindir@\n+sbindir = @sbindir@\n+libexecdir = @libexecdir@\n+datadir = @datadir@\n+sysconfdir = @sysconfdir@\n+sharedstatedir = @sharedstatedir@\n+localstatedir = @localstatedir@\n+libdir = @libdir@\n+infodir = @infodir@\n+mandir = @mandir@\n+includedir = @includedir@\n+oldincludedir = /usr/include\n+\n+DESTDIR =\n+\n+pkgdatadir = $(datadir)/@PACKAGE@\n+pkglibdir = $(libdir)/@PACKAGE@\n+pkgincludedir = $(includedir)/@PACKAGE@\n+\n+top_builddir = .\n+\n+ACLOCAL = @ACLOCAL@\n+AUTOCONF = @AUTOCONF@\n+AUTOMAKE = @AUTOMAKE@\n+AUTOHEADER = @AUTOHEADER@\n+\n+INSTALL = @INSTALL@\n+INSTALL_PROGRAM = @INSTALL_PROGRAM@\n+INSTALL_DATA = @INSTALL_DATA@\n+INSTALL_SCRIPT = @INSTALL_SCRIPT@\n+INSTALL_STRIP_FLAG =\n+transform = @program_transform_name@\n+\n+NORMAL_INSTALL = :\n+PRE_INSTALL = :\n+POST_INSTALL = :\n+NORMAL_UNINSTALL = :\n+PRE_UNINSTALL = :\n+POST_UNINSTALL = :\n+host_alias = @host_alias@\n+host_triplet = @host@\n+AMTAR = @AMTAR@\n+AMTARFLAGS = @AMTARFLAGS@\n+AS = @AS@\n+CC = @CC@\n+DLLTOOL = @DLLTOOL@\n+EXEEXT = @EXEEXT@\n+LD = @LD@\n+LIBTOOL = @LIBTOOL@\n+LN_S = @LN_S@\n+MAINT = @MAINT@\n+MAKEINFO = @MAKEINFO@\n+NM = @NM@\n+PACKAGE = @PACKAGE@\n+RANLIB = @RANLIB@\n+SHELL = @SHELL@\n+TARGET = @TARGET@\n+TARGETDIR = @TARGETDIR@\n+USE_SYMBOL_UNDERSCORE = @USE_SYMBOL_UNDERSCORE@\n+VERSION = @VERSION@\n+\n+\n+AUTOMAKE_OPTIONS = cygnus\n+\n+EXTRA_DIST = LICENSE ChangeLog.v1 src/mips/ffi.c src/mips/n32.S \\\n+\t\tsrc/mips/n32.s src/mips/o32.S src/mips/o32.s \\\n+\t\tsrc/sparc/ffi.c src/sparc/v8.S \\\n+\t\tsrc/x86/ffi.c src/x86/sysv.S \\\n+\t\tsrc/alpha/ffi.c src/alpha/osf.S \\\n+\t\tsrc/m68k/ffi.c src/m68k/sysv.S \\\n+\t\tsrc/powerpc/ffi.c src/powerpc/sysv.S src/powerpc/asm.h \\\n+\t\tsrc/arm/ffi.c src/arm/sysv.S\n+\n+\n+VPATH = @srcdir@:@srcdir@/src:@srcdir@/src/@TARGETDIR@\n+\n+# Multilib support variables.\n+MULTISRCTOP = \n+MULTIBUILDTOP = \n+MULTIDIRS = \n+MULTISUBDIR = \n+MULTIDO = true\n+MULTICLEAN = true\n+\n+toolexecdir = $(exec_prefix)/$(target_alias)\n+toolexeclibdir = $(toolexecdir)/lib$(MULTISUBDIR)\n+\n+toolexeclib_LTLIBRARIES = libffi.la\n+\n+noinst_PROGRAMS = ffitest\n+\n+ffitest_SOURCES = src/ffitest.c\n+ffitest_LDADD = libffi.la\n+\n+TARGET_SRC_MIPS_GCC = src/mips/ffi.c src/mips/o32.S src/mips/n32.S\n+TARGET_SRC_MIPS_SGI = src/mips/ffi.c src/mips/o32.s src/mips/n32.s\n+TARGET_SRC_X86 = src/x86/ffi.c src/x86/sysv.S\n+TARGET_SRC_SPARC = src/sparc/ffi.c src/sparc/v8.S\n+TARGET_SRC_ALPHA = src/alpha/ffi.c src/alpha/osf.S\n+TARGET_SRC_M68K = src/m68k/ffi.c src/m68k/sysv.S\n+TARGET_SRC_POWERPC = src/powerpc/ffi.c src/powerpc/sysv.S\n+TARGET_SRC_ARM = src/arm/sysv.S src/arm/ffi.c\n+\n+libffi_la_common_SOURCES = src/debug.c src/prep_cif.c src/types.c src/raw_api.c \n+@MIPS_GCC_TRUE@libffi_la_SOURCES = @MIPS_GCC_TRUE@$(libffi_la_common_SOURCES) $(TARGET_SRC_MIPS_GCC)\n+@MIPS_SGI_TRUE@libffi_la_SOURCES = @MIPS_SGI_TRUE@$(libffi_la_common_SOURCES) $(TARGET_SRC_MIPS_SGI)\n+@X86_TRUE@libffi_la_SOURCES = @X86_TRUE@$(libffi_la_common_SOURCES) $(TARGET_SRC_X86)\n+@SPARC_TRUE@libffi_la_SOURCES = @SPARC_TRUE@$(libffi_la_common_SOURCES) $(TARGET_SRC_SPARC)\n+@ALPHA_TRUE@libffi_la_SOURCES = @ALPHA_TRUE@$(libffi_la_common_SOURCES) $(TARGET_SRC_ALPHA)\n+@M68K_TRUE@libffi_la_SOURCES = @M68K_TRUE@$(libffi_la_common_SOURCES) $(TARGET_SRC_M68K)\n+@POWERPC_TRUE@libffi_la_SOURCES = @POWERPC_TRUE@$(libffi_la_common_SOURCES) $(TARGET_SRC_POWERPC)\n+@ARM_TRUE@libffi_la_SOURCES = @ARM_TRUE@$(libffi_la_common_SOURCES) $(TARGET_SRC_ARM)\n+\n+libffi_la_LDFLAGS = -release $(VERSION) \n+\n+INCLUDES = -I$(top_srcdir)/include -Iinclude\n+subdir = .\n+ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n+mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs\n+CONFIG_HEADER = fficonfig.h\n+CONFIG_CLEAN_FILES = \n+LTLIBRARIES =  $(toolexeclib_LTLIBRARIES)\n+\n+\n+DEFS = @DEFS@ -I. -I$(srcdir) -I.\n+CPPFLAGS = @CPPFLAGS@\n+LDFLAGS = @LDFLAGS@\n+LIBS = @LIBS@\n+libffi_la_LIBADD = \n+@ALPHA_TRUE@am_libffi_la_OBJECTS =  debug.lo prep_cif.lo types.lo \\\n+@ALPHA_TRUE@raw_api.lo ffi.lo osf.lo\n+@ARM_TRUE@am_libffi_la_OBJECTS =  debug.lo prep_cif.lo types.lo \\\n+@ARM_TRUE@raw_api.lo sysv.lo ffi.lo\n+@M68K_TRUE@am_libffi_la_OBJECTS =  debug.lo prep_cif.lo types.lo \\\n+@M68K_TRUE@raw_api.lo ffi.lo sysv.lo\n+@MIPS_GCC_TRUE@am_libffi_la_OBJECTS =  debug.lo prep_cif.lo types.lo \\\n+@MIPS_GCC_TRUE@raw_api.lo ffi.lo o32.lo n32.lo\n+@MIPS_SGI_TRUE@am_libffi_la_OBJECTS =  debug.lo prep_cif.lo types.lo \\\n+@MIPS_SGI_TRUE@raw_api.lo ffi.lo o32.lo n32.lo\n+@POWERPC_TRUE@am_libffi_la_OBJECTS =  debug.lo prep_cif.lo types.lo \\\n+@POWERPC_TRUE@raw_api.lo ffi.lo sysv.lo\n+@SPARC_TRUE@am_libffi_la_OBJECTS =  debug.lo prep_cif.lo types.lo \\\n+@SPARC_TRUE@raw_api.lo ffi.lo v8.lo\n+@X86_TRUE@am_libffi_la_OBJECTS =  debug.lo prep_cif.lo types.lo \\\n+@X86_TRUE@raw_api.lo ffi.lo sysv.lo\n+libffi_la_OBJECTS =  $(am_libffi_la_OBJECTS)\n+noinst_PROGRAMS =  ffitest$(EXEEXT)\n+PROGRAMS =  $(noinst_PROGRAMS)\n+\n+am_ffitest_OBJECTS =  ffitest.o\n+ffitest_OBJECTS =  $(am_ffitest_OBJECTS)\n+ffitest_DEPENDENCIES =  libffi.la\n+ffitest_LDFLAGS = \n+COMPILE = $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)\n+LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)\n+CFLAGS = @CFLAGS@\n+CCLD = $(CC)\n+LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\n+DIST_SOURCES =  $(libffi_la_SOURCES) $(ffitest_SOURCES)\n+DIST_COMMON =  README ./stamp-h.in ChangeLog Makefile.am Makefile.in \\\n+acconfig.h aclocal.m4 config.guess config.sub configure configure.in \\\n+fficonfig.h.in install-sh ltconfig ltmain.sh missing mkinstalldirs\n+\n+\n+DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)\n+\n+GZIP_ENV = --best\n+SOURCES = $(libffi_la_SOURCES) $(ffitest_SOURCES)\n+OBJECTS = $(am_libffi_la_OBJECTS) $(am_ffitest_OBJECTS)\n+\n+all: all-redirect\n+.SUFFIXES:\n+.SUFFIXES: .S .c .lo .o .s\n+$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ Makefile.am $(top_srcdir)/configure.in $(ACLOCAL_M4) \n+\tcd $(top_srcdir) && $(AUTOMAKE) --cygnus Makefile\n+\n+Makefile: $(srcdir)/Makefile.in  $(top_builddir)/config.status\n+\tcd $(top_builddir) \\\n+\t  && CONFIG_FILES=$@ CONFIG_HEADERS= $(SHELL) ./config.status\n+\n+$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ configure.in \n+\tcd $(srcdir) && $(ACLOCAL)\n+\n+config.status: $(srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)\n+\t$(SHELL) ./config.status --recheck\n+$(srcdir)/configure: @MAINTAINER_MODE_TRUE@$(srcdir)/configure.in $(ACLOCAL_M4) $(CONFIGURE_DEPENDENCIES)\n+\tcd $(srcdir) && $(AUTOCONF)\n+\n+fficonfig.h: stamp-h\n+\t@if test ! -f $@; then \\\n+\t\trm -f stamp-h; \\\n+\t\t$(MAKE) stamp-h; \\\n+\telse :; fi\n+stamp-h: $(srcdir)/fficonfig.h.in $(top_builddir)/config.status\n+\t@rm -f stamp-h stamp-hT\n+\t@echo timestamp > stamp-hT 2> /dev/null\n+\tcd $(top_builddir) \\\n+\t  && CONFIG_FILES= CONFIG_HEADERS=fficonfig.h \\\n+\t     $(SHELL) ./config.status\n+\t@mv stamp-hT stamp-h\n+$(srcdir)/fficonfig.h.in: @MAINTAINER_MODE_TRUE@$(srcdir)/./stamp-h.in\n+\t@if test ! -f $@; then \\\n+\t\trm -f $(srcdir)/./stamp-h.in; \\\n+\t\t$(MAKE) $(srcdir)/./stamp-h.in; \\\n+\telse :; fi\n+$(srcdir)/./stamp-h.in: $(top_srcdir)/configure.in $(ACLOCAL_M4) acconfig.h\n+\t@rm -f $(srcdir)/./stamp-h.in $(srcdir)/./stamp-h.inT\n+\t@echo timestamp > $(srcdir)/./stamp-h.inT 2> /dev/null\n+\tcd $(top_srcdir) && $(AUTOHEADER)\n+\t@mv $(srcdir)/./stamp-h.inT $(srcdir)/./stamp-h.in\n+\n+mostlyclean-hdr:\n+\n+clean-hdr:\n+\n+distclean-hdr:\n+\t-rm -f fficonfig.h\n+\n+maintainer-clean-hdr:\n+\n+mostlyclean-toolexeclibLTLIBRARIES:\n+\n+clean-toolexeclibLTLIBRARIES:\n+\t-test -z \"$(toolexeclib_LTLIBRARIES)\" || rm -f $(toolexeclib_LTLIBRARIES)\n+\n+distclean-toolexeclibLTLIBRARIES:\n+\n+maintainer-clean-toolexeclibLTLIBRARIES:\n+\n+install-toolexeclibLTLIBRARIES: $(toolexeclib_LTLIBRARIES)\n+\t@$(NORMAL_INSTALL)\n+\t$(mkinstalldirs) $(DESTDIR)$(toolexeclibdir)\n+\t@list='$(toolexeclib_LTLIBRARIES)'; for p in $$list; do \\\n+\t  if test -f $$p; then \\\n+\t    echo \"$(LIBTOOL)  --mode=install $(INSTALL) $$p $(DESTDIR)$(toolexeclibdir)/$$p\"; \\\n+\t    $(LIBTOOL)  --mode=install $(INSTALL) $$p $(DESTDIR)$(toolexeclibdir)/$$p; \\\n+\t  else :; fi; \\\n+\tdone\n+\n+uninstall-toolexeclibLTLIBRARIES:\n+\t@$(NORMAL_UNINSTALL)\n+\t@list='$(toolexeclib_LTLIBRARIES)'; for p in $$list; do \\\n+\t  echo \" $(LIBTOOL)  --mode=uninstall rm -f $(DESTDIR)$(toolexeclibdir)/$$p\"; \\\n+\t  $(LIBTOOL)  --mode=uninstall rm -f $(DESTDIR)$(toolexeclibdir)/$$p; \\\n+\tdone\n+\n+mostlyclean-compile:\n+\t-rm -f *.o core *.core\n+\n+clean-compile:\n+\n+distclean-compile:\n+\t-rm -f *.tab.c\n+\n+maintainer-clean-compile:\n+\n+mostlyclean-libtool:\n+\t-rm -f *.lo\n+\n+clean-libtool:\n+\t-rm -rf .libs _libs\n+\n+distclean-libtool:\n+\n+maintainer-clean-libtool:\n+debug.lo: src/debug.c\n+prep_cif.lo: src/prep_cif.c\n+types.lo: src/types.c\n+raw_api.lo: src/raw_api.c\n+ffi.lo: src/alpha/ffi.c\n+osf.lo: src/alpha/osf.S\n+sysv.lo: src/arm/sysv.S\n+o32.lo: src/mips/o32.S\n+n32.lo: src/mips/n32.S\n+v8.lo: src/sparc/v8.S\n+\n+libffi.la: $(libffi_la_OBJECTS) $(libffi_la_DEPENDENCIES)\n+\t$(LINK) -rpath $(toolexeclibdir) $(libffi_la_LDFLAGS) $(libffi_la_OBJECTS) $(libffi_la_LIBADD) $(LIBS)\n+\n+mostlyclean-noinstPROGRAMS:\n+\n+clean-noinstPROGRAMS:\n+\t-test -z \"$(noinst_PROGRAMS)\" || rm -f $(noinst_PROGRAMS)\n+\n+distclean-noinstPROGRAMS:\n+\n+maintainer-clean-noinstPROGRAMS:\n+ffitest.o: src/ffitest.c\n+\n+ffitest$(EXEEXT): $(ffitest_OBJECTS) $(ffitest_DEPENDENCIES)\n+\t@rm -f ffitest$(EXEEXT)\n+\t$(LINK) $(ffitest_LDFLAGS) $(ffitest_OBJECTS) $(ffitest_LDADD) $(LIBS)\n+.S.o:\n+\t$(COMPILE) -c $<\n+.S.lo:\n+\t$(LTCOMPILE) -c -o $@ $<\n+.c.o:\n+\t$(COMPILE) -c $<\n+.c.lo:\n+\t$(LTCOMPILE) -c -o $@ $<\n+.s.o:\n+\t$(COMPILE) -c $<\n+.s.lo:\n+\t$(LTCOMPILE) -c -o $@ $<\n+\n+tags: TAGS\n+\n+ID: $(HEADERS) $(SOURCES) $(LISP)\n+\tlist='$(SOURCES) $(HEADERS)'; \\\n+\tunique=`for i in $$list; do echo $$i; done | \\\n+\t  awk '    { files[$$0] = 1; } \\\n+\t       END { for (i in files) print i; }'`; \\\n+\there=`pwd` && cd $(srcdir) \\\n+\t  && mkid -f$$here/ID $$unique $(LISP)\n+\n+TAGS:  $(HEADERS) $(SOURCES) fficonfig.h.in $(TAGS_DEPENDENCIES) $(LISP)\n+\ttags=; \\\n+\there=`pwd`; \\\n+\tlist='$(SOURCES) $(HEADERS)'; \\\n+\tunique=`for i in $$list; do echo $$i; done | \\\n+\t  awk '    { files[$$0] = 1; } \\\n+\t       END { for (i in files) print i; }'`; \\\n+\ttest -z \"$(ETAGS_ARGS)fficonfig.h.in$$unique$(LISP)$$tags\" \\\n+\t  || (cd $(srcdir) && etags $(ETAGS_ARGS) $$tags fficonfig.h.in $$unique $(LISP) -o $$here/TAGS)\n+\n+mostlyclean-tags:\n+\n+clean-tags:\n+\n+distclean-tags:\n+\t-rm -f TAGS ID\n+\n+maintainer-clean-tags:\n+\n+distdir = $(PACKAGE)-$(VERSION)\n+top_distdir = $(distdir)\n+\n+# This target untars the dist file and tries a VPATH configuration.  Then\n+# it guarantees that the distribution is self-contained by making another\n+# tarfile.\n+distcheck: dist\n+\t-rm -rf $(distdir)\n+\tGZIP=$(GZIP_ENV) gunzip -c $(distdir).tar.gz | $(AMTAR) xf -\n+\tmkdir $(distdir)/=build\n+\tmkdir $(distdir)/=inst\n+\tdc_install_base=`cd $(distdir)/=inst && pwd`; \\\n+\tcd $(distdir)/=build \\\n+\t  && ../configure --srcdir=.. --prefix=$$dc_install_base \\\n+\t  && $(MAKE) $(AM_MAKEFLAGS) \\\n+\t  && $(MAKE) $(AM_MAKEFLAGS) dvi \\\n+\t  && $(MAKE) $(AM_MAKEFLAGS) check \\\n+\t  && $(MAKE) $(AM_MAKEFLAGS) install \\\n+\t  && $(MAKE) $(AM_MAKEFLAGS) installcheck \\\n+\t  && $(MAKE) $(AM_MAKEFLAGS) dist\n+\t-rm -rf $(distdir)\n+\t@banner=\"$(distdir).tar.gz is ready for distribution\"; \\\n+\tdashes=`echo \"$$banner\" | sed s/./=/g`; \\\n+\techo \"$$dashes\"; \\\n+\techo \"$$banner\"; \\\n+\techo \"$$dashes\"\n+dist: distdir\n+\t-chmod -R a+r $(distdir)\n+\t$(AMTAR) ch$(AMTARFLAGS)f - $(distdir) | GZIP=$(GZIP_ENV) gzip -c > $(distdir).tar.gz\n+\t-rm -rf $(distdir)\n+dist-all: distdir\n+\t-chmod -R a+r $(distdir)\n+\t$(AMTAR) ch$(AMTARFLAGS)f - $(distdir) | GZIP=$(GZIP_ENV) gzip -c > $(distdir).tar.gz\n+\t-rm -rf $(distdir)\n+distdir: $(DISTFILES)\n+\t-rm -rf $(distdir)\n+\tmkdir $(distdir)\n+\t-chmod 777 $(distdir)\n+\t$(mkinstalldirs) $(distdir)/src/alpha $(distdir)/src/arm \\\n+\t   $(distdir)/src/m68k $(distdir)/src/mips \\\n+\t   $(distdir)/src/powerpc $(distdir)/src/sparc \\\n+\t   $(distdir)/src/x86\n+\t@for file in $(DISTFILES); do \\\n+\t  if test -f $$file; then d=.; else d=$(srcdir); fi; \\\n+\t  if test -d $$d/$$file; then \\\n+\t    cp -pr $$d/$$file $(distdir)/$$file; \\\n+\t  else \\\n+\t    test -f $(distdir)/$$file \\\n+\t    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \\\n+\t    || cp -p $$d/$$file $(distdir)/$$file || :; \\\n+\t  fi; \\\n+\tdone\n+info-am:\n+info: info-am\n+dvi-am:\n+dvi: dvi-am\n+check-am:\n+check: check-am\n+installcheck-am:\n+installcheck: installcheck-am\n+install-info-am: \n+install-info: install-info-am\n+all-recursive-am: fficonfig.h\n+\t$(MAKE) $(AM_MAKEFLAGS) all-recursive\n+\n+install-exec-am: install-toolexeclibLTLIBRARIES\n+install-exec: install-exec-am\n+\n+install-data-am:\n+install-data: install-data-am\n+\n+install-am: all-am\n+\t@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am\n+install: install-am\n+uninstall-am: uninstall-toolexeclibLTLIBRARIES\n+uninstall: uninstall-am\n+all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) fficonfig.h\n+all-redirect: all-am\n+install-strip:\n+\t$(MAKE) $(AM_MAKEFLAGS) INSTALL_STRIP_FLAG=-s install\n+installdirs:\n+\t$(mkinstalldirs)  $(DESTDIR)$(toolexeclibdir)\n+\n+\n+mostlyclean-generic:\n+\n+clean-generic:\n+\n+distclean-generic:\n+\t-rm -f Makefile $(CONFIG_CLEAN_FILES)\n+\t-rm -f config.cache config.log stamp-h stamp-h[0-9]*\n+\n+maintainer-clean-generic:\n+mostlyclean-am:  mostlyclean-hdr mostlyclean-toolexeclibLTLIBRARIES \\\n+\t\tmostlyclean-compile mostlyclean-libtool \\\n+\t\tmostlyclean-noinstPROGRAMS mostlyclean-tags \\\n+\t\tmostlyclean-generic\n+\n+mostlyclean: mostlyclean-am\n+\n+clean-am:  clean-hdr clean-toolexeclibLTLIBRARIES clean-compile \\\n+\t\tclean-libtool clean-noinstPROGRAMS clean-tags \\\n+\t\tclean-generic mostlyclean-am\n+\n+clean: clean-am\n+\n+distclean-am:  distclean-hdr distclean-toolexeclibLTLIBRARIES \\\n+\t\tdistclean-compile distclean-libtool \\\n+\t\tdistclean-noinstPROGRAMS distclean-tags \\\n+\t\tdistclean-generic clean-am\n+\t-rm -f libtool\n+\n+distclean: distclean-am\n+\t-rm -f config.status\n+\n+maintainer-clean-am:  maintainer-clean-hdr \\\n+\t\tmaintainer-clean-toolexeclibLTLIBRARIES \\\n+\t\tmaintainer-clean-compile maintainer-clean-libtool \\\n+\t\tmaintainer-clean-noinstPROGRAMS maintainer-clean-tags \\\n+\t\tmaintainer-clean-generic distclean-am\n+\t@echo \"This command is intended for maintainers to use;\"\n+\t@echo \"it deletes files that may require special tools to rebuild.\"\n+\n+maintainer-clean: maintainer-clean-am\n+\t-rm -f config.status\n+\n+.PHONY: mostlyclean-hdr distclean-hdr clean-hdr maintainer-clean-hdr \\\n+mostlyclean-toolexeclibLTLIBRARIES distclean-toolexeclibLTLIBRARIES \\\n+clean-toolexeclibLTLIBRARIES maintainer-clean-toolexeclibLTLIBRARIES \\\n+uninstall-toolexeclibLTLIBRARIES install-toolexeclibLTLIBRARIES \\\n+mostlyclean-compile distclean-compile clean-compile \\\n+maintainer-clean-compile mostlyclean-libtool distclean-libtool \\\n+clean-libtool maintainer-clean-libtool mostlyclean-noinstPROGRAMS \\\n+distclean-noinstPROGRAMS clean-noinstPROGRAMS \\\n+maintainer-clean-noinstPROGRAMS tags mostlyclean-tags distclean-tags \\\n+clean-tags maintainer-clean-tags distdir info-am info dvi-am dvi check \\\n+check-am installcheck-am installcheck install-info-am install-info \\\n+all-recursive-am install-exec-am install-exec install-data-am \\\n+install-data install-am install uninstall-am uninstall all-redirect \\\n+all-am all install-strip installdirs mostlyclean-generic \\\n+distclean-generic clean-generic maintainer-clean-generic clean \\\n+mostlyclean distclean maintainer-clean\n+\n+\n+# Tell versions [3.59,3.63) of GNU make to not export all variables.\n+# Otherwise a system limit (for SysV at least) may be exceeded.\n+.NOEXPORT:"}, {"sha": "902e644cd245dd968c95b0feb1da9be711664cc7", "filename": "libffi/README", "status": "added", "additions": 505, "deletions": 0, "changes": 505, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63e5e3e0dbb7207e95c0437499b980a304665589/libffi%2FREADME", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63e5e3e0dbb7207e95c0437499b980a304665589/libffi%2FREADME", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FREADME?ref=63e5e3e0dbb7207e95c0437499b980a304665589", "patch": "@@ -0,0 +1,505 @@\n+README for libffi-2.00\n+\n+libffi-2.00 has not been released yet! This is a development snapshot!\n+\n+libffi-1.20 was released on [SOME FUTURE DAY]. Check the libffi web\n+page for updates: <URL:http://sourceware.cygnus.com/libffi/>.\n+\n+\n+What is libffi?\n+===============\n+\n+Compilers for high level languages generate code that follow certain\n+conventions. These conventions are necessary, in part, for separate\n+compilation to work. One such convention is the \"calling\n+convention\". The \"calling convention\" is essentially a set of\n+assumptions made by the compiler about where function arguments will\n+be found on entry to a function. A \"calling convention\" also specifies\n+where the return value for a function is found.\n+\n+Some programs may not know at the time of compilation what arguments\n+are to be passed to a function. For instance, an interpreter may be\n+told at run-time about the number and types of arguments used to call\n+a given function. Libffi can be used in such programs to provide a\n+bridge from the interpreter program to compiled code.\n+\n+The libffi library provides a portable, high level programming\n+interface to various calling conventions. This allows a programmer to\n+call any function specified by a call interface description at run\n+time.  \n+\n+Ffi stands for Foreign Function Interface. A foreign function\n+interface is the popular name for the interface that allows code\n+written in one language to call code written in another language. The\n+libffi library really only provides the lowest, machine dependent\n+layer of a fully featured foreign function interface. A layer must\n+exist above libffi that handles type conversions for values passed\n+between the two languages.\n+\n+\n+Supported Platforms and Prerequisites\n+=====================================\n+\n+Libffi has been ported to:\n+\n+\tSunOS 4.1.3 & Solaris 2.x (Sparc v8)\n+\n+\tIrix 5.3 & 6.2 (System V/o32 & n32)\n+\n+\tIntel x86 - Linux (System V ABI)\n+\n+\tAlpha - Linux and OSF/1\n+\n+\tm68k - Linux (System V ABI)\n+\n+\tPowerPC - Linux (System V ABI)\n+\n+\tARM - Linux (System V ABI)\n+\n+Libffi has been tested with the egcs 1.0.2 gcc compiler. Chances are\n+that other versions will work.  Libffi has also been built and tested\n+with the SGI compiler tools.\n+\n+On PowerPC, the tests failed (see the note below).\n+\n+You must use GNU make to build libffi. SGI's make will not work.\n+Sun's probably won't either.\n+\t\n+If you port libffi to another platform, please let me know! I assume\n+that some will be easy (x86 NetBSD), and others will be more difficult\n+(HP, AIX).\n+\n+\n+Installing libffi\n+=================\n+\n+[Note: before actually performing any of these installation steps,\n+ you may wish to read the \"Platform Specific Notes\" below.]\n+\n+First you must configure the distribution for your particular\n+system. Go to the directory you wish to build libffi in and run the\n+\"configure\" program found in the root directory of the libffi source\n+distribution.\n+\n+You may want to tell configure where to install the libffi library and\n+header files. To do that, use the --prefix configure switch.  Libffi\n+will install under /usr/local by default. \n+\n+If you want to enable extra run-time debugging checks use the the\n+--enable-debug configure switch. This is useful when your program dies\n+mysteriously while using libffi. \n+\n+Another useful configure switch is --enable-purify-safety. Using this\n+will add some extra code which will suppress certain warnings when you\n+are using Purify with libffi. Only use this switch when using \n+Purify, as it will slow down the library.\n+\n+Configure has many other options. Use \"configure --help\" to see them all.\n+\n+Once configure has finished, type \"make\". Note that you must be using\n+GNU make. SGI's make will not work.  Sun's probably won't either.\n+You can ftp GNU make from prep.ai.mit.edu:/pub/gnu.\n+\n+To ensure that libffi is working as advertised, type \"make test\".\n+\n+To install the library and header files, type \"make install\".\n+\n+\n+Using libffi\n+============\n+\n+\tThe Basics\n+\t----------\n+\n+Libffi assumes that you have a pointer to the function you wish to\n+call and that you know the number and types of arguments to pass it,\n+as well as the return type of the function.\n+\n+The first thing you must do is create an ffi_cif object that matches\n+the signature of the function you wish to call. The cif in ffi_cif\n+stands for Call InterFace. To prepare a call interface object, use the\n+following function:\n+\n+ffi_status ffi_prep_cif(ffi_cif *cif, ffi_abi abi,\n+\t\t\tunsigned int nargs, \n+\t\t\tffi_type *rtype, ffi_type **atypes);\n+\n+\tCIF is a pointer to the call interface object you wish\n+\t\tto initialize.\n+\n+\tABI is an enum that specifies the calling convention \n+\t\tto use for the call. FFI_DEFAULT_ABI defaults\n+\t\tto the system's native calling convention. Other\n+\t\tABI's may be used with care. They are system\n+\t\tspecific.\n+\n+\tNARGS is the number of arguments this function accepts.\t\n+\t\tlibffi does not yet support vararg functions.\n+\n+\tRTYPE is a pointer to an ffi_type structure that represents\n+\t\tthe return type of the function. Ffi_type objects\n+\t\tdescribe the types of values. libffi provides\n+\t\tffi_type objects for many of the native C types:\n+\t\tsigned int, unsigned int, signed char, unsigned char,\n+\t\tetc. There is also a pointer ffi_type object and\n+\t\ta void ffi_type. Use &ffi_type_void for functions that \n+\t\tdon't return values.\n+\n+\tATYPES is a vector of ffi_type pointers. ARGS must be NARGS long.\n+\t\tIf NARGS is 0, this is ignored.\n+\n+\n+ffi_prep_cif will return a status code that you are responsible \n+for checking. It will be one of the following:\n+\n+\tFFI_OK - All is good.\n+\n+\tFFI_BAD_TYPEDEF - One of the ffi_type objects that ffi_prep_cif\n+\t\tcame across is bad.\n+\n+\n+Before making the call, the VALUES vector should be initialized \n+with pointers to the appropriate argument values.\n+\n+To call the the function using the initialized ffi_cif, use the\n+ffi_call function:\n+\n+void ffi_call(ffi_cif *cif, void *fn, void *rvalue, void **avalues);\n+\n+\tCIF is a pointer to the ffi_cif initialized specifically\n+\t\tfor this function.\n+\n+\tFN is a pointer to the function you want to call.\n+\n+\tRVALUE is a pointer to a chunk of memory that is to hold the\n+\t\tresult of the function call. Currently, it must be\n+\t\tat least one word in size (except for the n32 version\n+\t\tunder Irix 6.x, which must be a pointer to an 8 byte \n+\t\taligned value (a long long). It must also be at least \n+\t\tword aligned (depending on the return type, and the\n+\t\tsystem's alignment requirements). If RTYPE is \n+\t\t&ffi_type_void, this is ignored. If RVALUE is NULL, \n+\t\tthe return value is discarded.\n+\n+\tAVALUES is a vector of void* that point to the memory locations\n+\t\tholding the argument values for a call.\n+\t\tIf NARGS is 0, this is ignored.\n+\n+\n+If you are expecting a return value from FN it will have been stored\n+at RVALUE.\n+\n+\n+\n+\tAn Example\n+\t----------\n+\n+Here is a trivial example that calls puts() a few times.\n+\n+    #include <stdio.h>\n+    #include <ffi.h>\n+    \n+    int main()\n+    {\n+      ffi_cif cif;\n+      ffi_type *args[1];\n+      void *values[1];\n+      char *s;\n+      int rc;\n+      \n+      /* Initialize the argument info vectors */    \n+      args[0] = &ffi_type_uint;\n+      values[0] = &s;\n+      \n+      /* Initialize the cif */\n+      if (ffi_prep_cif(&cif, FFI_DEFAULT_ABI, 1, \n+    \t\t       &ffi_type_uint, args) == FFI_OK)\n+        {\n+          s = \"Hello World!\";\n+          ffi_call(&cif, puts, &rc, values);\n+          /* rc now holds the result of the call to puts */\n+          \n+          /* values holds a pointer to the function's arg, so to \n+\t     call puts() again all we need to do is change the \n+             value of s */\n+          s = \"This is cool!\";\n+          ffi_call(&cif, puts, &rc, values);\n+        }\n+      \n+      return 0;\n+    }\n+\n+\n+\n+\tAggregate Types\n+\t---------------\n+\n+Although libffi has no special support for unions or bit-fields, it is\n+perfectly happy passing structures back and forth. You must first\n+describe the structure to libffi by creating a new ffi_type object\n+for it. Here is the definition of ffi_type:\n+\n+    typedef struct _ffi_type\n+    {\n+      unsigned size;\n+      short alignment;\n+      short type;\n+      struct _ffi_type **elements;\n+    } ffi_type;\n+    \n+All structures must have type set to FFI_TYPE_STRUCT.  You may set\n+size and alignment to 0. These will be calculated and reset to the\n+appropriate values by ffi_prep_cif().\n+\n+elements is a NULL terminated array of pointers to ffi_type objects\n+that describe the type of the structure elements. These may, in turn,\n+be structure elements.\n+\n+The following example initializes a ffi_type object representing the\n+tm struct from Linux's time.h:\n+\n+\t\t\t\t    struct tm {\n+\t\t\t\t\tint tm_sec;\n+\t\t\t\t\tint tm_min;\n+\t\t\t\t\tint tm_hour;\n+\t\t\t\t\tint tm_mday;\n+\t\t\t\t\tint tm_mon;\n+\t\t\t\t\tint tm_year;\n+\t\t\t\t\tint tm_wday;\n+\t\t\t\t\tint tm_yday;\n+\t\t\t\t\tint tm_isdst;\n+\t\t\t\t\t/* Those are for future use. */\n+\t\t\t\t\tlong int __tm_gmtoff__;\n+\t\t\t\t\t__const char *__tm_zone__;\n+\t\t\t\t    };\n+\n+    {\n+      ffi_type tm_type;\n+      ffi_type *tm_type_elements[12];\n+      int i;\n+\n+      tm_type.size = tm_type.alignment = 0;\n+      tm_type.elements = &tm_type_elements;\n+    \n+      for (i = 0; i < 9; i++)\n+          tm_type_elements[i] = &ffi_type_sint;\n+\n+      tm_type_elements[9] = &ffi_type_slong;\n+      tm_type_elements[10] = &ffi_type_pointer;\n+      tm_type_elements[11] = NULL;\n+\n+      /* tm_type can now be used to represent tm argument types and\n+\t return types for ffi_prep_cif() */\n+    }\n+\n+\n+\n+Platform Specific Notes\n+=======================\n+\n+\tIntel x86\n+\t---------\n+\n+There are no known problems with the x86 port.\n+\n+\tSun Sparc - SunOS 4.1.3 & Solaris 2.x\n+\t-------------------------------------\n+\n+There's a bug in the structure passing code for sparc processors.\n+Struct arguments that are passed in value actually end up being passed\n+by reference. This will be fixed Real Soon Now.\n+\n+\"long long\" values are not supported yet.\n+\n+You must use GNU Make to build libffi on Sun platforms.\n+\n+\tMIPS - Irix 5.3 & 6.x\n+\t---------------------\n+\n+Irix 6.2 and better supports three different calling conventions: o32,\n+n32 and n64. Currently, libffi only supports both o32 and n32 under\n+Irix 6.x, but only o32 under Irix 5.3. Libffi will automatically be\n+configured for whichever calling convention it was built for.\n+\n+By default, the configure script will try to build libffi with the GNU\n+development tools. To build libffi with the SGI development tools, set\n+the environment variable CC to either \"cc -32\" or \"cc -n32\" before\n+running configure under Irix 6.x (depending on whether you want an o32\n+or n32 library), or just \"cc\" for Irix 5.3.\n+\n+With the n32 calling convention, when returning structures smaller\n+than 16 bytes, be sure to provide an RVALUE that is 8 byte aligned.\n+Here's one way of forcing this:\n+\n+\tdouble struct_storage[2];\n+\tmy_small_struct *s = (my_small_struct *) struct_storage;  \n+\t/* Use s for RVALUE */\n+\n+If you don't do this you are liable to get spurious bus errors. \n+\n+\"long long\" values are not supported yet.\n+\n+You must use GNU Make to build libffi on SGI platforms.\n+\n+\tARM - System V ABI\n+\t------------------\n+\n+The ARM port was performed on a NetWinder running ARM Linux ELF\n+(2.0.31) and gcc 2.8.1.  config.sub still does not recognize the\n+machine name sa110-unknown-linux-gnu (currently returned by\n+NetWinder).  In the mean time the package can be configured by running\n+'configure arm-linux'.\n+\n+\n+\n+\tPowerPC System V ABI\n+\t--------------------\n+\n+There are two `System V ABI's which libffi implements for PowerPC.\n+They differ only in how small structures are returned from functions.\n+\n+In the FFI_SYSV version, structures that are 8 bytes or smaller are\n+returned in registers.  This is what GCC does when it is configured\n+for solaris, and is what the System V ABI I have (dated September\n+1995) says.\n+\n+In the FFI_GCC_SYSV version, all structures are returned the same way:\n+by passing a pointer as the first argument to the function.  This is\n+what GCC does when it is configured for linux or a generic sysv\n+target.\n+\n+EGCS 1.0.1 (and probably other versions of EGCS/GCC) also has a\n+inconsistency with the SysV ABI: When a procedure is called with many\n+floating-point arguments, some of them get put on the stack.  They are\n+all supposed to be stored in double-precision format, even if they are\n+only single-precision, but EGCS stores single-precision arguments as\n+single-precision anyway.  This causes one test to fail (the `many\n+arguments' test).\n+\n+\n+What's With The Crazy Comments?\n+===============================\n+\n+You might notice a number of cryptic comments in the code, delimited\n+by /*@ and @*/. These are annotations read by the program LCLint, a\n+tool for statically checking C programs. You can read all about it at\n+<http://larch-www.lcs.mit.edu:8001/larch/lclint/index.html>.\n+\n+\n+History\n+=======\n+\n+1.20 Oct-5-98\n+\tRaffaele Sena produces ARM port.\n+\n+1.19 Oct-5-98\n+\tFixed x86 long double and long long return support.\n+\tm68k bug fixes from Andreas Schwab.\n+\tPatch for DU assembler compatibility for the Alpha from Richard\n+\tHenderson.\n+\n+1.18 Apr-17-98\n+\tBug fixes and MIPS configuration changes.\n+\n+1.17 Feb-24-98\n+\tBug fixes and m68k port from Andreas Schwab. PowerPC port from\n+\tGeoffrey Keating. Various bug x86, Sparc and MIPS bug fixes.\n+\n+1.16 Feb-11-98\n+\tRichard Henderson produces Alpha port.\n+\n+1.15 Dec-4-97\n+\tFixed an n32 ABI bug. New libtool, auto* support.\n+\n+1.14 May-13-97\n+\tlibtool is now used to generate shared and static libraries.\n+\tFixed a minor portability problem reported by Russ McManus\n+\t<mcmanr@eq.gs.com>.\n+\n+1.13 Dec-2-96\n+\tAdded --enable-purify-safety to keep Purify from complaining\n+\tabout certain low level code.\n+\tSparc fix for calling functions with < 6 args.\n+\tLinux x86 a.out fix.\n+\n+1.12 Nov-22-96\n+\tAdded missing ffi_type_void, needed for supporting void return \n+\ttypes. Fixed test case for non MIPS machines. Cygnus Support \n+\tis now Cygnus Solutions. \n+\n+1.11 Oct-30-96\n+\tAdded notes about GNU make.\n+\n+1.10 Oct-29-96\n+\tAdded configuration fix for non GNU compilers.\n+\n+1.09 Oct-29-96\n+\tAdded --enable-debug configure switch. Clean-ups based on LCLint \n+\tfeedback. ffi_mips.h is always installed. Many configuration \n+\tfixes. Fixed ffitest.c for sparc builds.\n+\n+1.08 Oct-15-96\n+\tFixed n32 problem. Many clean-ups.\n+\n+1.07 Oct-14-96\n+\tGordon Irlam rewrites v8.S again. Bug fixes.\n+\n+1.06 Oct-14-96\n+\tGordon Irlam improved the sparc port. \n+\n+1.05 Oct-14-96\n+\tInterface changes based on feedback.\n+\n+1.04 Oct-11-96\n+\tSparc port complete (modulo struct passing bug).\n+\n+1.03 Oct-10-96\n+\tPassing struct args, and returning struct values works for\n+\tall architectures/calling conventions. Expanded tests.\n+\n+1.02 Oct-9-96\n+\tAdded SGI n32 support. Fixed bugs in both o32 and Linux support.\n+\tAdded \"make test\".\n+\n+1.01 Oct-8-96\n+\tFixed float passing bug in mips version. Restructured some\n+\tof the code. Builds cleanly with SGI tools.\n+\n+1.00 Oct-7-96\n+\tFirst release. No public announcement.\n+\n+\n+Authors & Credits\n+=================\n+\n+libffi was written by Anthony Green <green@cygnus.com>.\n+\n+Portions of libffi were derived from Gianni Mariani's free gencall\n+library for Silicon Graphics machines.\n+\n+The closure mechanism was designed and implemented by Kresten Krab\n+Thorup.\n+\n+The Sparc port was derived from code contributed by the fine folks at\n+Visible Decisions Inc <http://www.vdi.com>. Further enhancements were\n+made by Gordon Irlam at Cygnus Solutions <http://www.cygnus.com>.\n+\n+The Alpha port was written by Richard Henderson at Cygnus Solutions.\n+\n+Andreas Schwab ported libffi to m68k Linux and provided a number of\n+bug fixes.\n+\n+Geoffrey Keating ported libffi to the PowerPC.\n+\n+Raffaele Sena ported libffi to the ARM.\n+\n+Jesper Skov and Andrew Haley both did more than their fair share of\n+stepping through the code and tracking down bugs.\n+\n+Thanks also to Tom Tromey for bug fixes and configuration help.\n+\n+Thanks to Jim Blandy, who provided some useful feedback on the libffi\n+interface.\n+\n+If you have a problem, or have found a bug, please send a note to\n+green@cygnus.com."}, {"sha": "b317b5e9adaf9b846c57083c19889726982d161f", "filename": "libffi/acconfig.h", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63e5e3e0dbb7207e95c0437499b980a304665589/libffi%2Facconfig.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63e5e3e0dbb7207e95c0437499b980a304665589/libffi%2Facconfig.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Facconfig.h?ref=63e5e3e0dbb7207e95c0437499b980a304665589", "patch": "@@ -0,0 +1,18 @@\n+/* Define this if you want extra debugging */\n+#undef FFI_DEBUG\n+\n+/* Define this if you are using Purify and want to suppress \n+   spurious messages. */\n+#undef USING_PURIFY\n+\n+/* Define this is you do not want support for aggregate types.  */\n+#undef FFI_NO_STRUCTS\n+\n+/* Define this is you do not want support for the raw API.  */\n+#undef FFI_NO_RAW_API\n+\n+/* This is the package name */\n+#undef PACKAGE\n+\n+/* This is the package version */\n+#undef VERSION"}, {"sha": "eb0d09d7811e3c8d8872ff9a1cbf8d6d452fc340", "filename": "libffi/aclocal.m4", "status": "added", "additions": 779, "deletions": 0, "changes": 779, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63e5e3e0dbb7207e95c0437499b980a304665589/libffi%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63e5e3e0dbb7207e95c0437499b980a304665589/libffi%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Faclocal.m4?ref=63e5e3e0dbb7207e95c0437499b980a304665589", "patch": "@@ -0,0 +1,779 @@\n+dnl aclocal.m4 generated automatically by aclocal 1.4a\n+\n+dnl Copyright (C) 1994, 1995-8, 1999 Free Software Foundation, Inc.\n+dnl This file is free software; the Free Software Foundation\n+dnl gives unlimited permission to copy and/or distribute it,\n+dnl with or without modifications, as long as this notice is preserved.\n+\n+dnl This program is distributed in the hope that it will be useful,\n+dnl but WITHOUT ANY WARRANTY, to the extent permitted by law; without\n+dnl even the implied warranty of MERCHANTABILITY or FITNESS FOR A\n+dnl PARTICULAR PURPOSE.\n+\n+# Like AC_CONFIG_HEADER, but automatically create stamp file.\n+\n+AC_DEFUN(AM_CONFIG_HEADER,\n+[AC_PREREQ([2.12])\n+AC_CONFIG_HEADER([$1])\n+dnl When config.status generates a header, we must update the stamp-h file.\n+dnl This file resides in the same directory as the config header\n+dnl that is generated.  We must strip everything past the first \":\",\n+dnl and everything past the last \"/\".\n+AC_OUTPUT_COMMANDS(changequote(<<,>>)dnl\n+ifelse(patsubst(<<$1>>, <<[^ ]>>, <<>>), <<>>,\n+<<test -z \"<<$>>CONFIG_HEADERS\" || echo timestamp > patsubst(<<$1>>, <<^\\([^:]*/\\)?.*>>, <<\\1>>)stamp-h<<>>dnl>>,\n+<<am_indx=1\n+for am_file in <<$1>>; do\n+  case \" <<$>>CONFIG_HEADERS \" in\n+  *\" <<$>>am_file \"*<<)>>\n+    echo timestamp > `echo <<$>>am_file | sed -e 's%:.*%%' -e 's%[^/]*$%%'`stamp-h$am_indx\n+    ;;\n+  esac\n+  am_indx=`expr \"<<$>>am_indx\" + 1`\n+done<<>>dnl>>)\n+changequote([,]))])\n+\n+# Do all the work for Automake.  This macro actually does too much --\n+# some checks are only needed if your package does certain things.\n+# But this isn't really a big deal.\n+\n+# serial 1\n+\n+dnl Usage:\n+dnl AM_INIT_AUTOMAKE(package,version, [no-define])\n+\n+AC_DEFUN(AM_INIT_AUTOMAKE,\n+[AC_REQUIRE([AC_PROG_INSTALL])\n+dnl We require 2.13 because we rely on SHELL being computed by configure.\n+AC_PREREQ([2.13])\n+PACKAGE=[$1]\n+AC_SUBST(PACKAGE)\n+VERSION=[$2]\n+AC_SUBST(VERSION)\n+dnl test to see if srcdir already configured\n+if test \"`cd $srcdir && pwd`\" != \"`pwd`\" && test -f $srcdir/config.status; then\n+  AC_MSG_ERROR([source directory already configured; run \"make distclean\" there first])\n+fi\n+ifelse([$3],,\n+AC_DEFINE_UNQUOTED(PACKAGE, \"$PACKAGE\", [Name of package])\n+AC_DEFINE_UNQUOTED(VERSION, \"$VERSION\", [Version number of package]))\n+AC_REQUIRE([AM_SANITY_CHECK])\n+AC_REQUIRE([AC_ARG_PROGRAM])\n+dnl FIXME This is truly gross.\n+missing_dir=`cd $ac_aux_dir && pwd`\n+AM_MISSING_PROG(ACLOCAL, aclocal, $missing_dir)\n+AM_MISSING_PROG(AUTOCONF, autoconf, $missing_dir)\n+AM_MISSING_PROG(AUTOMAKE, automake, $missing_dir)\n+AM_MISSING_PROG(AUTOHEADER, autoheader, $missing_dir)\n+AM_MISSING_PROG(MAKEINFO, makeinfo, $missing_dir)\n+dnl We check for tar when the user configures the end package.\n+dnl This is sad, since we only need this for \"dist\".  However,\n+dnl there's no other good way to do it.  We prefer GNU tar if\n+dnl we can find it.  If we can't find a tar, it doesn't really matter.\n+AC_CHECK_PROGS(AMTAR, gnutar gtar tar)\n+AMTARFLAGS=\n+if test -n \"$AMTAR\"; then\n+  if $SHELL -c \"$AMTAR --version\" > /dev/null 2>&1; then\n+    dnl We have GNU tar.\n+    AMTARFLAGS=o\n+  fi\n+fi\n+AC_SUBST(AMTARFLAGS)\n+AC_REQUIRE([AC_PROG_MAKE_SET])])\n+\n+#\n+# Check to make sure that the build environment is sane.\n+#\n+\n+AC_DEFUN(AM_SANITY_CHECK,\n+[AC_MSG_CHECKING([whether build environment is sane])\n+# Just in case\n+sleep 1\n+echo timestamp > conftestfile\n+# Do `set' in a subshell so we don't clobber the current shell's\n+# arguments.  Must try -L first in case configure is actually a\n+# symlink; some systems play weird games with the mod time of symlinks\n+# (eg FreeBSD returns the mod time of the symlink's containing\n+# directory).\n+if (\n+   set X `ls -Lt $srcdir/configure conftestfile 2> /dev/null`\n+   if test \"[$]*\" = \"X\"; then\n+      # -L didn't work.\n+      set X `ls -t $srcdir/configure conftestfile`\n+   fi\n+   if test \"[$]*\" != \"X $srcdir/configure conftestfile\" \\\n+      && test \"[$]*\" != \"X conftestfile $srcdir/configure\"; then\n+\n+      # If neither matched, then we have a broken ls.  This can happen\n+      # if, for instance, CONFIG_SHELL is bash and it inherits a\n+      # broken ls alias from the environment.  This has actually\n+      # happened.  Such a system could not be considered \"sane\".\n+      AC_MSG_ERROR([ls -t appears to fail.  Make sure there is not a broken\n+alias in your environment])\n+   fi\n+\n+   test \"[$]2\" = conftestfile\n+   )\n+then\n+   # Ok.\n+   :\n+else\n+   AC_MSG_ERROR([newly created file is older than distributed files!\n+Check your system clock])\n+fi\n+rm -f conftest*\n+AC_MSG_RESULT(yes)])\n+\n+dnl AM_MISSING_PROG(NAME, PROGRAM, DIRECTORY)\n+dnl The program must properly implement --version.\n+AC_DEFUN(AM_MISSING_PROG,\n+[AC_MSG_CHECKING(for working $2)\n+# Run test in a subshell; some versions of sh will print an error if\n+# an executable is not found, even if stderr is redirected.\n+# Redirect stdin to placate older versions of autoconf.  Sigh.\n+if ($2 --version) < /dev/null > /dev/null 2>&1; then\n+   $1=$2\n+   AC_MSG_RESULT(found)\n+else\n+   $1=\"$3/missing $2\"\n+   AC_MSG_RESULT(missing)\n+fi\n+AC_SUBST($1)])\n+\n+# Add --enable-maintainer-mode option to configure.\n+# From Jim Meyering\n+\n+# serial 1\n+\n+AC_DEFUN(AM_MAINTAINER_MODE,\n+[AC_MSG_CHECKING([whether to enable maintainer-specific portions of Makefiles])\n+  dnl maintainer-mode is disabled by default\n+  AC_ARG_ENABLE(maintainer-mode,\n+[  --enable-maintainer-mode enable make rules and dependencies not useful\n+                          (and sometimes confusing) to the casual installer],\n+      USE_MAINTAINER_MODE=$enableval,\n+      USE_MAINTAINER_MODE=no)\n+  AC_MSG_RESULT($USE_MAINTAINER_MODE)\n+  AM_CONDITIONAL(MAINTAINER_MODE, test $USE_MAINTAINER_MODE = yes)\n+  MAINT=$MAINTAINER_MODE_TRUE\n+  AC_SUBST(MAINT)dnl\n+]\n+)\n+\n+# Define a conditional.\n+\n+AC_DEFUN(AM_CONDITIONAL,\n+[AC_SUBST($1_TRUE)\n+AC_SUBST($1_FALSE)\n+if $2; then\n+  $1_TRUE=\n+  $1_FALSE='#'\n+else\n+  $1_TRUE='#'\n+  $1_FALSE=\n+fi])\n+\n+\n+# serial 35 AC_PROG_LIBTOOL\n+AC_DEFUN(AC_PROG_LIBTOOL,\n+[AC_REQUIRE([AC_LIBTOOL_SETUP])dnl\n+\n+# Save cache, so that ltconfig can load it\n+AC_CACHE_SAVE\n+\n+# Actually configure libtool.  ac_aux_dir is where install-sh is found.\n+CC=\"$CC\" CFLAGS=\"$CFLAGS\" CPPFLAGS=\"$CPPFLAGS\" \\\n+LD=\"$LD\" NM=\"$NM\" RANLIB=\"$RANLIB\" LN_S=\"$LN_S\" \\\n+DLLTOOL=\"$DLLTOOL\" AS=\"$AS\" \\\n+${CONFIG_SHELL-/bin/sh} $ac_aux_dir/ltconfig --no-reexec \\\n+$libtool_flags --no-verify $ac_aux_dir/ltmain.sh $host \\\n+|| AC_MSG_ERROR([libtool configure failed])\n+\n+# Reload cache, that may have been modified by ltconfig\n+AC_CACHE_LOAD\n+\n+# This can be used to rebuild libtool when needed\n+LIBTOOL_DEPS=\"$ac_aux_dir/ltconfig $ac_aux_dir/ltmain.sh\"\n+\n+# Always use our own libtool.\n+LIBTOOL='$(SHELL) $(top_builddir)/libtool'\n+AC_SUBST(LIBTOOL)dnl\n+\n+# Redirect the config.log output again, so that the ltconfig log is not\n+# clobbered by the next message.\n+exec 5>>./config.log\n+])\n+\n+AC_DEFUN(AC_LIBTOOL_SETUP,\n+[AC_PREREQ(2.13)dnl\n+AC_REQUIRE([AC_ENABLE_SHARED])dnl\n+AC_REQUIRE([AC_ENABLE_STATIC])dnl\n+AC_REQUIRE([AC_ENABLE_FAST_INSTALL])dnl\n+AC_REQUIRE([AC_CANONICAL_HOST])dnl\n+AC_REQUIRE([AC_CANONICAL_BUILD])dnl\n+AC_REQUIRE([AC_PROG_RANLIB])dnl\n+AC_REQUIRE([AC_PROG_CC])dnl\n+AC_REQUIRE([AC_PROG_LD])dnl\n+AC_REQUIRE([AC_PROG_NM])dnl\n+AC_REQUIRE([AC_SYS_NM_PARSE])dnl\n+AC_REQUIRE([AC_SYS_SYMBOL_UNDERSCORE])dnl\n+AC_REQUIRE([AC_PROG_LN_S])dnl\n+dnl\n+\n+# Check for any special flags to pass to ltconfig.\n+libtool_flags=\"--cache-file=$cache_file\"\n+test \"$enable_shared\" = no && libtool_flags=\"$libtool_flags --disable-shared\"\n+test \"$enable_static\" = no && libtool_flags=\"$libtool_flags --disable-static\"\n+test \"$enable_fast_install\" = no && libtool_flags=\"$libtool_flags --disable-fast-install\"\n+test \"$lt_dlopen\" = yes && libtool_flags=\"$libtool_flags --enable-dlopen\"\n+test \"$silent\" = yes && libtool_flags=\"$libtool_flags --silent\"\n+test \"$ac_cv_prog_gcc\" = yes && libtool_flags=\"$libtool_flags --with-gcc\"\n+test \"$ac_cv_prog_gnu_ld\" = yes && libtool_flags=\"$libtool_flags --with-gnu-ld\"\n+\n+# Some flags need to be propagated to the compiler or linker for good\n+# libtool support.\n+case \"$host\" in\n+*-*-irix6*)\n+  # Find out which ABI we are using.\n+  echo '[#]line __oline__ \"configure\"' > conftest.$ac_ext\n+  if AC_TRY_EVAL(ac_compile); then\n+    case \"`/usr/bin/file conftest.o`\" in\n+    *32-bit*)\n+      LD=\"${LD-ld} -32\"\n+      ;;\n+    *N32*)\n+      LD=\"${LD-ld} -n32\"\n+      ;;\n+    *64-bit*)\n+      LD=\"${LD-ld} -64\"\n+      ;;\n+    esac\n+  fi\n+  rm -rf conftest*\n+  ;;\n+\n+*-*-sco3.2v5*)\n+  # On SCO OpenServer 5, we need -belf to get full-featured binaries.\n+  SAVE_CFLAGS=\"$CFLAGS\"\n+  CFLAGS=\"$CFLAGS -belf\"\n+  AC_CACHE_CHECK([whether the C compiler needs -belf], lt_cv_cc_needs_belf,\n+    [AC_TRY_LINK([],[],[lt_cv_cc_needs_belf=yes],[lt_cv_cc_needs_belf=no])])\n+  if test x\"$lt_cv_cc_needs_belf\" != x\"yes\"; then\n+    # this is probably gcc 2.8.0, egcs 1.0 or newer; no need for -belf\n+    CFLAGS=\"$SAVE_CFLAGS\"\n+  fi\n+  ;;\n+\n+*-*-cygwin*)\n+  AC_SYS_LIBTOOL_CYGWIN\n+  ;;\n+\n+esac\n+\n+# enable the --disable-libtool-lock switch\n+\n+AC_ARG_ENABLE(libtool-lock,\n+[  --disable-libtool-lock  force libtool not to do file locking],\n+need_locks=$enableval,\n+need_locks=yes)\n+\n+if test x\"$need_locks\" = xno; then\n+  libtool_flags=\"$libtool_flags --disable-lock\"\n+fi\n+])\n+\n+# AC_LIBTOOL_DLOPEN - check for dlopen support\n+AC_DEFUN(AC_LIBTOOL_DLOPEN, [lt_dlopen=yes])\n+\n+# AC_ENABLE_SHARED - implement the --enable-shared flag\n+# Usage: AC_ENABLE_SHARED[(DEFAULT)]\n+#   Where DEFAULT is either `yes' or `no'.  If omitted, it defaults to\n+#   `yes'.\n+AC_DEFUN(AC_ENABLE_SHARED,\n+[define([AC_ENABLE_SHARED_DEFAULT], ifelse($1, no, no, yes))dnl\n+AC_ARG_ENABLE(shared,\n+changequote(<<, >>)dnl\n+<<  --enable-shared[=PKGS]  build shared libraries [default=>>AC_ENABLE_SHARED_DEFAULT],\n+changequote([, ])dnl\n+[p=${PACKAGE-default}\n+case \"$enableval\" in\n+yes) enable_shared=yes ;;\n+no) enable_shared=no ;;\n+*)\n+  enable_shared=no\n+  # Look at the argument we got.  We use all the common list separators.\n+  IFS=\"${IFS= \t}\"; ac_save_ifs=\"$IFS\"; IFS=\"${IFS}:,\"\n+  for pkg in $enableval; do\n+    if test \"X$pkg\" = \"X$p\"; then\n+      enable_shared=yes\n+    fi\n+  done\n+  IFS=\"$ac_save_ifs\"\n+  ;;\n+esac],\n+enable_shared=AC_ENABLE_SHARED_DEFAULT)dnl\n+])\n+\n+# AC_DISABLE_SHARED - set the default shared flag to --disable-shared\n+AC_DEFUN(AC_DISABLE_SHARED,\n+[AC_ENABLE_SHARED(no)])\n+\n+# AC_ENABLE_STATIC - implement the --enable-static flag\n+# Usage: AC_ENABLE_STATIC[(DEFAULT)]\n+#   Where DEFAULT is either `yes' or `no'.  If omitted, it defaults to\n+#   `yes'.\n+AC_DEFUN(AC_ENABLE_STATIC,\n+[define([AC_ENABLE_STATIC_DEFAULT], ifelse($1, no, no, yes))dnl\n+AC_ARG_ENABLE(static,\n+changequote(<<, >>)dnl\n+<<  --enable-static[=PKGS]  build static libraries [default=>>AC_ENABLE_STATIC_DEFAULT],\n+changequote([, ])dnl\n+[p=${PACKAGE-default}\n+case \"$enableval\" in\n+yes) enable_static=yes ;;\n+no) enable_static=no ;;\n+*)\n+  enable_static=no\n+  # Look at the argument we got.  We use all the common list separators.\n+  IFS=\"${IFS= \t}\"; ac_save_ifs=\"$IFS\"; IFS=\"${IFS}:,\"\n+  for pkg in $enableval; do\n+    if test \"X$pkg\" = \"X$p\"; then\n+      enable_static=yes\n+    fi\n+  done\n+  IFS=\"$ac_save_ifs\"\n+  ;;\n+esac],\n+enable_static=AC_ENABLE_STATIC_DEFAULT)dnl\n+])\n+\n+# AC_DISABLE_STATIC - set the default static flag to --disable-static\n+AC_DEFUN(AC_DISABLE_STATIC,\n+[AC_ENABLE_STATIC(no)])\n+\n+\n+# AC_ENABLE_FAST_INSTALL - implement the --enable-fast-install flag\n+# Usage: AC_ENABLE_FAST_INSTALL[(DEFAULT)]\n+#   Where DEFAULT is either `yes' or `no'.  If omitted, it defaults to\n+#   `yes'.\n+AC_DEFUN(AC_ENABLE_FAST_INSTALL,\n+[define([AC_ENABLE_FAST_INSTALL_DEFAULT], ifelse($1, no, no, yes))dnl\n+AC_ARG_ENABLE(fast-install,\n+changequote(<<, >>)dnl\n+<<  --enable-fast-install[=PKGS]  optimize for fast installation [default=>>AC_ENABLE_FAST_INSTALL_DEFAULT],\n+changequote([, ])dnl\n+[p=${PACKAGE-default}\n+case \"$enableval\" in\n+yes) enable_fast_install=yes ;;\n+no) enable_fast_install=no ;;\n+*)\n+  enable_fast_install=no\n+  # Look at the argument we got.  We use all the common list separators.\n+  IFS=\"${IFS= \t}\"; ac_save_ifs=\"$IFS\"; IFS=\"${IFS}:,\"\n+  for pkg in $enableval; do\n+    if test \"X$pkg\" = \"X$p\"; then\n+      enable_fast_install=yes\n+    fi\n+  done\n+  IFS=\"$ac_save_ifs\"\n+  ;;\n+esac],\n+enable_fast_install=AC_ENABLE_FAST_INSTALL_DEFAULT)dnl\n+])\n+\n+# AC_ENABLE_FAST_INSTALL - set the default to --disable-fast-install\n+AC_DEFUN(AC_DISABLE_FAST_INSTALL,\n+[AC_ENABLE_FAST_INSTALL(no)])\n+\n+\n+# AC_PROG_LD - find the path to the GNU or non-GNU linker\n+AC_DEFUN(AC_PROG_LD,\n+[AC_ARG_WITH(gnu-ld,\n+[  --with-gnu-ld           assume the C compiler uses GNU ld [default=no]],\n+test \"$withval\" = no || with_gnu_ld=yes, with_gnu_ld=no)\n+AC_REQUIRE([AC_PROG_CC])dnl\n+AC_REQUIRE([AC_CANONICAL_HOST])dnl\n+AC_REQUIRE([AC_CANONICAL_BUILD])dnl\n+ac_prog=ld\n+if test \"$ac_cv_prog_gcc\" = yes; then\n+  # Check if gcc -print-prog-name=ld gives a path.\n+  AC_MSG_CHECKING([for ld used by GCC])\n+  ac_prog=`($CC -print-prog-name=ld) 2>&5`\n+  case \"$ac_prog\" in\n+    # Accept absolute paths.\n+changequote(,)dnl\n+    /* | [A-Za-z]:[\\\\/]*)\n+      re_direlt='/[^/][^/]*/\\.\\./'\n+changequote([,])dnl\n+      # Canonicalize the path of ld\n+      ac_prog=`echo $ac_prog| sed 's%\\\\\\\\%/%g'`\n+      while echo $ac_prog | grep \"$re_direlt\" > /dev/null 2>&1; do\n+\tac_prog=`echo $ac_prog| sed \"s%$re_direlt%/%\"`\n+      done\n+      test -z \"$LD\" && LD=\"$ac_prog\"\n+      ;;\n+  \"\")\n+    # If it fails, then pretend we aren't using GCC.\n+    ac_prog=ld\n+    ;;\n+  *)\n+    # If it is relative, then search for the first ld in PATH.\n+    with_gnu_ld=unknown\n+    ;;\n+  esac\n+elif test \"$with_gnu_ld\" = yes; then\n+  AC_MSG_CHECKING([for GNU ld])\n+else\n+  AC_MSG_CHECKING([for non-GNU ld])\n+fi\n+AC_CACHE_VAL(ac_cv_path_LD,\n+[if test -z \"$LD\"; then\n+  IFS=\"${IFS= \t}\"; ac_save_ifs=\"$IFS\"; IFS=\"${IFS}:\"\n+  for ac_dir in $PATH; do\n+    test -z \"$ac_dir\" && ac_dir=.\n+    if test -f \"$ac_dir/$ac_prog\"; then\n+      ac_cv_path_LD=\"$ac_dir/$ac_prog\"\n+      # Check to see if the program is GNU ld.  I'd rather use --version,\n+      # but apparently some GNU ld's only accept -v.\n+      # Break only if it was the GNU/non-GNU ld that we prefer.\n+      if \"$ac_cv_path_LD\" -v 2>&1 < /dev/null | egrep '(GNU|with BFD)' > /dev/null; then\n+\ttest \"$with_gnu_ld\" != no && break\n+      else\n+\ttest \"$with_gnu_ld\" != yes && break\n+      fi\n+    fi\n+  done\n+  IFS=\"$ac_save_ifs\"\n+else\n+  ac_cv_path_LD=\"$LD\" # Let the user override the test with a path.\n+fi])\n+LD=\"$ac_cv_path_LD\"\n+if test -n \"$LD\"; then\n+  AC_MSG_RESULT($LD)\n+else\n+  AC_MSG_RESULT(no)\n+fi\n+test -z \"$LD\" && AC_MSG_ERROR([no acceptable ld found in \\$PATH])\n+AC_SUBST(LD)\n+AC_PROG_LD_GNU\n+])\n+\n+AC_DEFUN(AC_PROG_LD_GNU,\n+[AC_CACHE_CHECK([if the linker ($LD) is GNU ld], ac_cv_prog_gnu_ld,\n+[# I'd rather use --version here, but apparently some GNU ld's only accept -v.\n+if $LD -v 2>&1 </dev/null | egrep '(GNU|with BFD)' 1>&5; then\n+  ac_cv_prog_gnu_ld=yes\n+else\n+  ac_cv_prog_gnu_ld=no\n+fi])\n+])\n+\n+# AC_PROG_NM - find the path to a BSD-compatible name lister\n+AC_DEFUN(AC_PROG_NM,\n+[AC_MSG_CHECKING([for BSD-compatible nm])\n+AC_CACHE_VAL(ac_cv_path_NM,\n+[if test -n \"$NM\"; then\n+  # Let the user override the test.\n+  ac_cv_path_NM=\"$NM\"\n+else\n+  IFS=\"${IFS= \t}\"; ac_save_ifs=\"$IFS\"; IFS=\"${IFS}:\"\n+  for ac_dir in $PATH /usr/ccs/bin /usr/ucb /bin; do\n+    test -z \"$ac_dir\" && ac_dir=.\n+    if test -f $ac_dir/nm; then\n+      # Check to see if the nm accepts a BSD-compat flag.\n+      # Adding the `sed 1q' prevents false positives on HP-UX, which says:\n+      #   nm: unknown option \"B\" ignored\n+      if ($ac_dir/nm -B /dev/null 2>&1 | sed '1q'; exit 0) | egrep /dev/null >/dev/null; then\n+\tac_cv_path_NM=\"$ac_dir/nm -B\"\n+\tbreak\n+      elif ($ac_dir/nm -p /dev/null 2>&1 | sed '1q'; exit 0) | egrep /dev/null >/dev/null; then\n+\tac_cv_path_NM=\"$ac_dir/nm -p\"\n+\tbreak\n+      else\n+\tac_cv_path_NM=${ac_cv_path_NM=\"$ac_dir/nm\"} # keep the first match, but\n+\tcontinue # so that we can try to find one that supports BSD flags\n+      fi\n+    fi\n+  done\n+  IFS=\"$ac_save_ifs\"\n+  test -z \"$ac_cv_path_NM\" && ac_cv_path_NM=nm\n+fi])\n+NM=\"$ac_cv_path_NM\"\n+AC_MSG_RESULT([$NM])\n+AC_SUBST(NM)\n+])\n+\n+# AC_SYS_NM_PARSE - Check for command to grab the raw symbol name followed\n+# by C symbol name from nm.\n+AC_DEFUN(AC_SYS_NM_PARSE,\n+[AC_REQUIRE([AC_CANONICAL_HOST])dnl\n+AC_REQUIRE([AC_PROG_NM])dnl\n+# Check for command to grab the raw symbol name followed by C symbol from nm.\n+AC_MSG_CHECKING([command to parse $NM output])\n+AC_CACHE_VAL(ac_cv_sys_global_symbol_pipe,\n+[# These are sane defaults that work on at least a few old systems.\n+# {They come from Ultrix.  What could be older than Ultrix?!! ;)}\n+\n+changequote(,)dnl\n+# Character class describing NM global symbol codes.\n+ac_symcode='[BCDEGRST]'\n+\n+# Regexp to match symbols that can be accessed directly from C.\n+ac_sympat='\\([_A-Za-z][_A-Za-z0-9]*\\)'\n+\n+# Transform the above into a raw symbol and a C symbol.\n+ac_symxfrm='\\1 \\2\\3 \\3'\n+\n+# Transform an extracted symbol line into a proper C declaration\n+ac_global_symbol_to_cdecl=\"sed -n -e 's/^. .* \\(.*\\)$/extern char \\1;/p'\"\n+\n+# Define system-specific variables.\n+case \"$host_os\" in\n+aix*)\n+  ac_symcode='[BCDT]'\n+  ;;\n+cygwin* | mingw*)\n+  ac_symcode='[ABCDGISTW]'\n+  ;;\n+hpux*)\n+  ac_global_symbol_to_cdecl=\"sed -n -e 's/^T .* \\(.*\\)$/extern char \\1();/p' -e 's/^. .* \\(.*\\)$/extern char \\1;/p'\"\n+  ;;\n+irix*)\n+  ac_symcode='[BCDEGRST]'\n+  ;;\n+solaris*)\n+  ac_symcode='[BDT]'\n+  ;;\n+esac\n+\n+# If we're using GNU nm, then use its standard symbol codes.\n+if $NM -V 2>&1 | egrep '(GNU|with BFD)' > /dev/null; then\n+  ac_symcode='[ABCDGISTW]'\n+fi\n+changequote([,])dnl\n+\n+# Try without a prefix undercore, then with it.\n+for ac_symprfx in \"\" \"_\"; do\n+\n+  ac_cv_sys_global_symbol_pipe=\"sed -n -e 's/^.*[ \t]\\($ac_symcode\\)[ \t][ \t]*\\($ac_symprfx\\)$ac_sympat$/$ac_symxfrm/p'\"\n+\n+  # Check to see that the pipe works correctly.\n+  ac_pipe_works=no\n+  rm -f conftest.$ac_ext\n+  cat > conftest.$ac_ext <<EOF\n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+char nm_test_var;\n+void nm_test_func(){}\n+#ifdef __cplusplus\n+}\n+#endif\n+int main(){nm_test_var='a';nm_test_func;return 0;}\n+EOF\n+\n+  if AC_TRY_EVAL(ac_compile); then\n+    # Now try to grab the symbols.\n+    ac_nlist=conftest.nm\n+  \n+    if AC_TRY_EVAL(NM conftest.$ac_objext \\| $ac_cv_sys_global_symbol_pipe \\> $ac_nlist) && test -s \"$ac_nlist\"; then\n+\n+      # Try sorting and uniquifying the output.\n+      if sort \"$ac_nlist\" | uniq > \"$ac_nlist\"T; then\n+\tmv -f \"$ac_nlist\"T \"$ac_nlist\"\n+      else\n+\trm -f \"$ac_nlist\"T\n+      fi\n+\n+      # Make sure that we snagged all the symbols we need.\n+      if egrep ' nm_test_var$' \"$ac_nlist\" >/dev/null; then\n+\tif egrep ' nm_test_func$' \"$ac_nlist\" >/dev/null; then\n+\t  cat <<EOF > conftest.c\n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n+EOF\n+\t  # Now generate the symbol file.\n+\t  eval \"$ac_global_symbol_to_cdecl\"' < \"$ac_nlist\" >> conftest.c'\n+\n+\t  cat <<EOF >> conftest.c\n+#if defined (__STDC__) && __STDC__\n+# define lt_ptr_t void *\n+#else\n+# define lt_ptr_t char *\n+# define const\n+#endif\n+\n+/* The mapping between symbol names and symbols. */\n+const struct {\n+  const char *name;\n+  lt_ptr_t address;\n+}\n+changequote(,)dnl\n+lt_preloaded_symbols[] =\n+changequote([,])dnl\n+{\n+EOF\n+\tsed 's/^. \\(.*\\) \\(.*\\)$/  {\"\\2\", (lt_ptr_t) \\&\\2},/' < \"$ac_nlist\" >> conftest.c\n+\tcat <<\\EOF >> conftest.c\n+  {0, (lt_ptr_t) 0}\n+};\n+\n+#ifdef __cplusplus\n+}\n+#endif\n+EOF\n+\t  # Now try linking the two files.\n+\t  mv conftest.$ac_objext conftestm.$ac_objext\n+\t  ac_save_LIBS=\"$LIBS\"\n+\t  ac_save_CFLAGS=\"$CFLAGS\"\n+\t  LIBS=\"conftestm.$ac_objext\"\n+\t  CFLAGS=\"$CFLAGS$no_builtin_flag\"\n+\t  if AC_TRY_EVAL(ac_link) && test -s conftest; then\n+\t    ac_pipe_works=yes\n+\t  else\n+\t    echo \"configure: failed program was:\" >&AC_FD_CC\n+\t    cat conftest.c >&AC_FD_CC\n+\t  fi\n+\t  LIBS=\"$ac_save_LIBS\"\n+\t  CFLAGS=\"$ac_save_CFLAGS\"\n+\telse\n+\t  echo \"cannot find nm_test_func in $ac_nlist\" >&AC_FD_CC\n+\tfi\n+      else\n+\techo \"cannot find nm_test_var in $ac_nlist\" >&AC_FD_CC\n+      fi\n+    else\n+      echo \"cannot run $ac_cv_sys_global_symbol_pipe\" >&AC_FD_CC\n+    fi\n+  else\n+    echo \"$progname: failed program was:\" >&AC_FD_CC\n+    cat conftest.c >&AC_FD_CC\n+  fi\n+  rm -rf conftest*\n+\n+  # Do not use the global_symbol_pipe unless it works.\n+  if test \"$ac_pipe_works\" = yes; then\n+    if test x\"$ac_symprfx\" = x\"_\"; then\n+      ac_cv_sys_symbol_underscore=yes\n+    else\n+      ac_cv_sys_symbol_underscore=no\n+    fi\n+    break\n+  else\n+    ac_cv_sys_global_symbol_pipe=\n+  fi\n+done\n+])\n+\n+ac_result=yes\n+if test -z \"$ac_cv_sys_global_symbol_pipe\"; then\n+   ac_result=no\n+fi\n+AC_MSG_RESULT($ac_result)\n+])\n+\n+# AC_SYS_LIBTOOL_CYGWIN - find tools needed on cygwin\n+AC_DEFUN(AC_SYS_LIBTOOL_CYGWIN,\n+[AC_CHECK_TOOL(DLLTOOL, dlltool, false)\n+AC_CHECK_TOOL(AS, as, false)\n+])\n+\n+# AC_SYS_SYMBOL_UNDERSCORE - does the compiler prefix global symbols\n+#                            with an underscore?\n+AC_DEFUN(AC_SYS_SYMBOL_UNDERSCORE,\n+[AC_REQUIRE([AC_PROG_NM])dnl\n+AC_REQUIRE([AC_SYS_NM_PARSE])dnl\n+AC_MSG_CHECKING([for _ prefix in compiled symbols])\n+AC_CACHE_VAL(ac_cv_sys_symbol_underscore,\n+[ac_cv_sys_symbol_underscore=no\n+cat > conftest.$ac_ext <<EOF\n+void nm_test_func(){}\n+int main(){nm_test_func;return 0;}\n+EOF\n+if AC_TRY_EVAL(ac_compile); then\n+  # Now try to grab the symbols.\n+  ac_nlist=conftest.nm\n+  if AC_TRY_EVAL(NM conftest.$ac_objext \\| $ac_cv_sys_global_symbol_pipe \\> $ac_nlist) && test -s \"$ac_nlist\"; then\n+    # See whether the symbols have a leading underscore.\n+    if egrep '^. _nm_test_func' \"$ac_nlist\" >/dev/null; then\n+      ac_cv_sys_symbol_underscore=yes\n+    else\n+      if egrep '^. nm_test_func ' \"$ac_nlist\" >/dev/null; then\n+\t:\n+      else\n+\techo \"configure: cannot find nm_test_func in $ac_nlist\" >&AC_FD_CC\n+      fi\n+    fi\n+  else\n+    echo \"configure: cannot run $ac_cv_sys_global_symbol_pipe\" >&AC_FD_CC\n+  fi\n+else\n+  echo \"configure: failed program was:\" >&AC_FD_CC\n+  cat conftest.c >&AC_FD_CC\n+fi\n+rm -rf conftest*\n+])\n+AC_MSG_RESULT($ac_cv_sys_symbol_underscore)\n+USE_SYMBOL_UNDERSCORE=${ac_cv_sys_symbol_underscore=no}\n+AC_SUBST(USE_SYMBOL_UNDERSCORE)dnl\n+])\n+\n+# AC_CHECK_LIBM - check for math library\n+AC_DEFUN(AC_CHECK_LIBM, [\n+AC_CHECK_LIB(mw, _mwvalidcheckl)\n+AC_CHECK_LIB(m, cos)\n+])\n+\n+# AC_LIBLTDL_CONVENIENCE[(dir)] - sets LIBLTDL to the link flags for\n+# the libltdl convenience library, adds --enable-ltdl-convenience to\n+# the configure arguments.  Note that LIBLTDL is not AC_SUBSTed, nor\n+# is AC_CONFIG_SUBDIRS called.  If DIR is not provided, it is assumed\n+# to be `${top_builddir}/libltdl'.  Make sure you start DIR with\n+# '${top_builddir}/' (note the single quotes!) if your package is not\n+# flat, and, if you're not using automake, define top_builddir as\n+# appropriate in the Makefiles.\n+AC_DEFUN(AC_LIBLTDL_CONVENIENCE, [\n+  case \"$enable_ltdl_convenience\" in\n+  no) AC_MSG_ERROR([this package needs a convenience libltdl]) ;;\n+  \"\") enable_ltdl_convenience=yes\n+      ac_configure_args=\"$ac_configure_args --enable-ltdl-convenience\" ;;\n+  esac\n+  LIBLTDL=ifelse($#,1,$1,['${top_builddir}/libltdl'])/libltdlc.la\n+])\n+\n+# AC_LIBLTDL_INSTALLABLE[(dir)] - sets LIBLTDL to the link flags for\n+# the libltdl installable library, and adds --enable-ltdl-install to\n+# the configure arguments.  Note that LIBLTDL is not AC_SUBSTed, nor\n+# is AC_CONFIG_SUBDIRS called.  If DIR is not provided, it is assumed\n+# to be `${top_builddir}/libltdl'.  Make sure you start DIR with\n+# '${top_builddir}/' (note the single quotes!) if your package is not\n+# flat, and, if you're not using automake, define top_builddir as\n+# appropriate in the Makefiles.\n+# In the future, this macro may have to be called after AC_PROG_LIBTOOL.\n+AC_DEFUN(AC_LIBLTDL_INSTALLABLE, [\n+  AC_CHECK_LIB(ltdl, main, LIBLTDL=\"-lltdl\", [\n+    case \"$enable_ltdl_install\" in\n+    no) AC_MSG_WARN([libltdl not installed, but installation disabled]) ;;\n+    \"\") enable_ltdl_install=yes\n+        ac_configure_args=\"$ac_configure_args --enable-ltdl-install\" ;;\n+    esac\n+  ])\n+  if test x\"$enable_ltdl_install\" != x\"no\"; then\n+    LIBLTDL=ifelse($#,1,$1,['${top_builddir}/libltdl'])/libltdl.la\n+  fi\n+])\n+\n+dnl old names\n+AC_DEFUN(AM_PROG_LIBTOOL, [indir([AC_PROG_LIBTOOL])])dnl\n+AC_DEFUN(AM_ENABLE_SHARED, [indir([AC_ENABLE_SHARED], $@)])dnl\n+AC_DEFUN(AM_ENABLE_STATIC, [indir([AC_ENABLE_STATIC], $@)])dnl\n+AC_DEFUN(AM_DISABLE_SHARED, [indir([AC_DISABLE_SHARED], $@)])dnl\n+AC_DEFUN(AM_DISABLE_STATIC, [indir([AC_DISABLE_STATIC], $@)])dnl\n+AC_DEFUN(AM_PROG_LD, [indir([AC_PROG_LD])])dnl\n+AC_DEFUN(AM_PROG_NM, [indir([AC_PROG_NM])])dnl\n+AC_DEFUN(AM_SYS_NM_PARSE, [indir([AC_SYS_NM_PARSE])])dnl\n+AC_DEFUN(AM_SYS_SYMBOL_UNDERSCORE, [indir([AC_SYS_SYMBOL_UNDERSCORE])])dnl\n+AC_DEFUN(AM_SYS_LIBTOOL_CYGWIN, [indir([AC_SYS_LIBTOOL_CYGWIN])])dnl\n+"}, {"sha": "972224042754aee5f075c43d1b7575bc47b11ec6", "filename": "libffi/config.guess", "status": "added", "additions": 996, "deletions": 0, "changes": 996, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63e5e3e0dbb7207e95c0437499b980a304665589/libffi%2Fconfig.guess", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63e5e3e0dbb7207e95c0437499b980a304665589/libffi%2Fconfig.guess", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fconfig.guess?ref=63e5e3e0dbb7207e95c0437499b980a304665589", "patch": "@@ -0,0 +1,996 @@\n+#! /bin/sh\n+# Attempt to guess a canonical system name.\n+#   Copyright (C) 1992, 93, 94, 95, 96, 97, 1998 Free Software Foundation, Inc.\n+#\n+# This file is free software; you can redistribute it and/or modify it\n+# under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 2 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful, but\n+# WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+# General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program; if not, write to the Free Software\n+# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n+#\n+# As a special exception to the GNU General Public License, if you\n+# distribute this file as part of a program that contains a\n+# configuration script generated by Autoconf, you may include it under\n+# the same distribution terms that you use for the rest of that program.\n+\n+# Written by Per Bothner <bothner@cygnus.com>.\n+# The master version of this file is at the FSF in /home/gd/gnu/lib.\n+# Please send patches to the Autoconf mailing list <autoconf@gnu.org>.\n+#\n+# This script attempts to guess a canonical system name similar to\n+# config.sub.  If it succeeds, it prints the system name on stdout, and\n+# exits with 0.  Otherwise, it exits with 1.\n+#\n+# The plan is that this can be called by configure scripts if you\n+# don't specify an explicit system type (host/target name).\n+#\n+# Only a few systems have been added to this list; please add others\n+# (but try to keep the structure clean).\n+#\n+\n+# This is needed to find uname on a Pyramid OSx when run in the BSD universe.\n+# (ghazi@noc.rutgers.edu 8/24/94.)\n+if (test -f /.attbin/uname) >/dev/null 2>&1 ; then\n+\tPATH=$PATH:/.attbin ; export PATH\n+fi\n+\n+UNAME_MACHINE=`(uname -m) 2>/dev/null` || UNAME_MACHINE=unknown\n+UNAME_RELEASE=`(uname -r) 2>/dev/null` || UNAME_RELEASE=unknown\n+UNAME_SYSTEM=`(uname -s) 2>/dev/null` || UNAME_SYSTEM=unknown\n+UNAME_VERSION=`(uname -v) 2>/dev/null` || UNAME_VERSION=unknown\n+\n+dummy=dummy-$$\n+trap 'rm -f $dummy.c $dummy.o $dummy; exit 1' 1 2 15\n+\n+# Note: order is significant - the case branches are not exclusive.\n+\n+case \"${UNAME_MACHINE}:${UNAME_SYSTEM}:${UNAME_RELEASE}:${UNAME_VERSION}\" in\n+    alpha:OSF1:*:*)\n+\tif test $UNAME_RELEASE = \"V4.0\"; then\n+\t\tUNAME_RELEASE=`/usr/sbin/sizer -v | awk '{print $3}'`\n+\tfi\n+\t# A Vn.n version is a released version.\n+\t# A Tn.n version is a released field test version.\n+\t# A Xn.n version is an unreleased experimental baselevel.\n+\t# 1.2 uses \"1.2\" for uname -r.\n+\tcat <<EOF >$dummy.s\n+\t.globl main\n+\t.ent main\n+main:\n+\t.frame \\$30,0,\\$26,0\n+\t.prologue 0\n+\t.long 0x47e03d80 # implver $0\n+\tlda \\$2,259\n+\t.long 0x47e20c21 # amask $2,$1\n+\tsrl \\$1,8,\\$2\n+\tsll \\$2,2,\\$2\n+\tsll \\$0,3,\\$0\n+\taddl \\$1,\\$0,\\$0\n+\taddl \\$2,\\$0,\\$0\n+\tret \\$31,(\\$26),1\n+\t.end main\n+EOF\n+\t${CC-cc} $dummy.s -o $dummy 2>/dev/null\n+\tif test \"$?\" = 0 ; then\n+\t\t./$dummy\n+\t\tcase \"$?\" in\n+\t\t\t7)\n+\t\t\t\tUNAME_MACHINE=\"alpha\"\n+\t\t\t\t;;\n+\t\t\t15)\n+\t\t\t\tUNAME_MACHINE=\"alphaev5\"\n+\t\t\t\t;;\n+\t\t\t14)\n+\t\t\t\tUNAME_MACHINE=\"alphaev56\"\n+\t\t\t\t;;\n+\t\t\t10)\n+\t\t\t\tUNAME_MACHINE=\"alphapca56\"\n+\t\t\t\t;;\n+\t\t\t16)\n+\t\t\t\tUNAME_MACHINE=\"alphaev6\"\n+\t\t\t\t;;\n+\t\tesac\n+\tfi\n+\trm -f $dummy.s $dummy\n+\techo ${UNAME_MACHINE}-dec-osf`echo ${UNAME_RELEASE} | sed -e 's/^[VTX]//' | tr [[A-Z]] [[a-z]]`\n+\texit 0 ;;\n+    21064:Windows_NT:50:3)\n+\techo alpha-dec-winnt3.5\n+\texit 0 ;;\n+    Amiga*:UNIX_System_V:4.0:*)\n+\techo m68k-cbm-sysv4\n+\texit 0;;\n+    amiga:NetBSD:*:*)\n+      echo m68k-cbm-netbsd${UNAME_RELEASE}\n+      exit 0 ;;\n+    amiga:OpenBSD:*:*)\n+\techo m68k-unknown-openbsd${UNAME_RELEASE}\n+\texit 0 ;;\n+    *:[Aa]miga[Oo][Ss]:*:*)\n+\techo ${UNAME_MACHINE}-unknown-amigaos\n+\texit 0 ;;\n+    arc64:OpenBSD:*:*)\n+\techo mips64el-unknown-openbsd${UNAME_RELEASE}\n+\texit 0 ;;\n+    arc:OpenBSD:*:*)\n+\techo mipsel-unknown-openbsd${UNAME_RELEASE}\n+\texit 0 ;;\n+    hkmips:OpenBSD:*:*)\n+\techo mips-unknown-openbsd${UNAME_RELEASE}\n+\texit 0 ;;\n+    pmax:OpenBSD:*:*)\n+\techo mipsel-unknown-openbsd${UNAME_RELEASE}\n+\texit 0 ;;\n+    sgi:OpenBSD:*:*)\n+\techo mips-unknown-openbsd${UNAME_RELEASE}\n+\texit 0 ;;\n+    wgrisc:OpenBSD:*:*)\n+\techo mipsel-unknown-openbsd${UNAME_RELEASE}\n+\texit 0 ;;\n+    arm:RISC*:1.[012]*:*|arm:riscix:1.[012]*:*)\n+\techo arm-acorn-riscix${UNAME_RELEASE}\n+\texit 0;;\n+    arm32:NetBSD:*:*)\n+\techo arm-unknown-netbsd`echo ${UNAME_RELEASE}|sed -e 's/[-_].*/\\./'`\n+\texit 0 ;;\n+    SR2?01:HI-UX/MPP:*:*)\n+\techo hppa1.1-hitachi-hiuxmpp\n+\texit 0;;\n+    Pyramid*:OSx*:*:*|MIS*:OSx*:*:*|MIS*:SMP_DC-OSx*:*:*)\n+\t# akee@wpdis03.wpafb.af.mil (Earle F. Ake) contributed MIS and NILE.\n+\tif test \"`(/bin/universe) 2>/dev/null`\" = att ; then\n+\t\techo pyramid-pyramid-sysv3\n+\telse\n+\t\techo pyramid-pyramid-bsd\n+\tfi\n+\texit 0 ;;\n+    NILE*:*:*:dcosx)\n+\techo pyramid-pyramid-svr4\n+\texit 0 ;;\n+    sun4H:SunOS:5.*:*)\n+\techo sparc-hal-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`\n+\texit 0 ;;\n+    sun4*:SunOS:5.*:* | tadpole*:SunOS:5.*:*)\n+\techo sparc-sun-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`\n+\texit 0 ;;\n+    i86pc:SunOS:5.*:*)\n+\techo i386-pc-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`\n+\texit 0 ;;\n+    sun4*:SunOS:6*:*)\n+\t# According to config.sub, this is the proper way to canonicalize\n+\t# SunOS6.  Hard to guess exactly what SunOS6 will be like, but\n+\t# it's likely to be more like Solaris than SunOS4.\n+\techo sparc-sun-solaris3`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`\n+\texit 0 ;;\n+    sun4*:SunOS:*:*)\n+\tcase \"`/usr/bin/arch -k`\" in\n+\t    Series*|S4*)\n+\t\tUNAME_RELEASE=`uname -v`\n+\t\t;;\n+\tesac\n+\t# Japanese Language versions have a version number like `4.1.3-JL'.\n+\techo sparc-sun-sunos`echo ${UNAME_RELEASE}|sed -e 's/-/_/'`\n+\texit 0 ;;\n+    sun3*:SunOS:*:*)\n+\techo m68k-sun-sunos${UNAME_RELEASE}\n+\texit 0 ;;\n+    sun*:*:4.2BSD:*)\n+\tUNAME_RELEASE=`(head -1 /etc/motd | awk '{print substr($5,1,3)}') 2>/dev/null`\n+\ttest \"x${UNAME_RELEASE}\" = \"x\" && UNAME_RELEASE=3\n+\tcase \"`/bin/arch`\" in\n+\t    sun3)\n+\t\techo m68k-sun-sunos${UNAME_RELEASE}\n+\t\t;;\n+\t    sun4)\n+\t\techo sparc-sun-sunos${UNAME_RELEASE}\n+\t\t;;\n+\tesac\n+\texit 0 ;;\n+    aushp:SunOS:*:*)\n+\techo sparc-auspex-sunos${UNAME_RELEASE}\n+\texit 0 ;;\n+    atari*:NetBSD:*:*)\n+\techo m68k-atari-netbsd${UNAME_RELEASE}\n+\texit 0 ;;\n+    atari*:OpenBSD:*:*)\n+\techo m68k-unknown-openbsd${UNAME_RELEASE}\n+\texit 0 ;;\n+    sun3*:NetBSD:*:*)\n+\techo m68k-sun-netbsd${UNAME_RELEASE}\n+\texit 0 ;;\n+    sun3*:OpenBSD:*:*)\n+\techo m68k-unknown-openbsd${UNAME_RELEASE}\n+\texit 0 ;;\n+    mac68k:NetBSD:*:*)\n+\techo m68k-apple-netbsd${UNAME_RELEASE}\n+\texit 0 ;;\n+    mac68k:OpenBSD:*:*)\n+\techo m68k-unknown-openbsd${UNAME_RELEASE}\n+\texit 0 ;;\n+    mvme68k:OpenBSD:*:*)\n+\techo m68k-unknown-openbsd${UNAME_RELEASE}\n+\texit 0 ;;\n+    mvme88k:OpenBSD:*:*)\n+\techo m88k-unknown-openbsd${UNAME_RELEASE}\n+\texit 0 ;;\n+    powerpc:machten:*:*)\n+\techo powerpc-apple-machten${UNAME_RELEASE}\n+\texit 0 ;;\n+    macppc:NetBSD:*:*)\n+        echo powerpc-apple-netbsd${UNAME_RELEASE}\n+        exit 0 ;;\n+    RISC*:Mach:*:*)\n+\techo mips-dec-mach_bsd4.3\n+\texit 0 ;;\n+    RISC*:ULTRIX:*:*)\n+\techo mips-dec-ultrix${UNAME_RELEASE}\n+\texit 0 ;;\n+    VAX*:ULTRIX*:*:*)\n+\techo vax-dec-ultrix${UNAME_RELEASE}\n+\texit 0 ;;\n+    2020:CLIX:*:*)\n+\techo clipper-intergraph-clix${UNAME_RELEASE}\n+\texit 0 ;;\n+    mips:*:*:UMIPS | mips:*:*:RISCos)\n+\tsed 's/^\t//' << EOF >$dummy.c\n+#ifdef __cplusplus\n+\tint main (int argc, char *argv[]) {\n+#else\n+\tint main (argc, argv) int argc; char *argv[]; {\n+#endif\n+\t#if defined (host_mips) && defined (MIPSEB)\n+\t#if defined (SYSTYPE_SYSV)\n+\t  printf (\"mips-mips-riscos%ssysv\\n\", argv[1]); exit (0);\n+\t#endif\n+\t#if defined (SYSTYPE_SVR4)\n+\t  printf (\"mips-mips-riscos%ssvr4\\n\", argv[1]); exit (0);\n+\t#endif\n+\t#if defined (SYSTYPE_BSD43) || defined(SYSTYPE_BSD)\n+\t  printf (\"mips-mips-riscos%sbsd\\n\", argv[1]); exit (0);\n+\t#endif\n+\t#endif\n+\t  exit (-1);\n+\t}\n+EOF\n+\t${CC-cc} $dummy.c -o $dummy \\\n+\t  && ./$dummy `echo \"${UNAME_RELEASE}\" | sed -n 's/\\([0-9]*\\).*/\\1/p'` \\\n+\t  && rm $dummy.c $dummy && exit 0\n+\trm -f $dummy.c $dummy\n+\techo mips-mips-riscos${UNAME_RELEASE}\n+\texit 0 ;;\n+    Night_Hawk:Power_UNIX:*:*)\n+\techo powerpc-harris-powerunix\n+\texit 0 ;;\n+    m88k:CX/UX:7*:*)\n+\techo m88k-harris-cxux7\n+\texit 0 ;;\n+    m88k:*:4*:R4*)\n+\techo m88k-motorola-sysv4\n+\texit 0 ;;\n+    m88k:*:3*:R3*)\n+\techo m88k-motorola-sysv3\n+\texit 0 ;;\n+    AViiON:dgux:*:*)\n+        # DG/UX returns AViiON for all architectures\n+        UNAME_PROCESSOR=`/usr/bin/uname -p`\n+        if [ $UNAME_PROCESSOR = mc88100 -o $UNAME_PROCESSOR = mc88110 ] ; then\n+\tif [ ${TARGET_BINARY_INTERFACE}x = m88kdguxelfx \\\n+\t     -o ${TARGET_BINARY_INTERFACE}x = x ] ; then\n+\t\techo m88k-dg-dgux${UNAME_RELEASE}\n+\telse\n+\t\techo m88k-dg-dguxbcs${UNAME_RELEASE}\n+\tfi\n+        else echo i586-dg-dgux${UNAME_RELEASE}\n+        fi\n+ \texit 0 ;;\n+    M88*:DolphinOS:*:*)\t# DolphinOS (SVR3)\n+\techo m88k-dolphin-sysv3\n+\texit 0 ;;\n+    M88*:*:R3*:*)\n+\t# Delta 88k system running SVR3\n+\techo m88k-motorola-sysv3\n+\texit 0 ;;\n+    XD88*:*:*:*) # Tektronix XD88 system running UTekV (SVR3)\n+\techo m88k-tektronix-sysv3\n+\texit 0 ;;\n+    Tek43[0-9][0-9]:UTek:*:*) # Tektronix 4300 system running UTek (BSD)\n+\techo m68k-tektronix-bsd\n+\texit 0 ;;\n+    *:IRIX*:*:*)\n+\techo mips-sgi-irix`echo ${UNAME_RELEASE}|sed -e 's/-/_/g'`\n+\texit 0 ;;\n+    ????????:AIX?:[12].1:2)   # AIX 2.2.1 or AIX 2.1.1 is RT/PC AIX.\n+\techo romp-ibm-aix      # uname -m gives an 8 hex-code CPU id\n+\texit 0 ;;              # Note that: echo \"'`uname -s`'\" gives 'AIX '\n+    i?86:AIX:*:*)\n+\techo i386-ibm-aix\n+\texit 0 ;;\n+    *:AIX:2:3)\n+\tif grep bos325 /usr/include/stdio.h >/dev/null 2>&1; then\n+\t\tsed 's/^\t\t//' << EOF >$dummy.c\n+\t\t#include <sys/systemcfg.h>\n+\n+\t\tmain()\n+\t\t\t{\n+\t\t\tif (!__power_pc())\n+\t\t\t\texit(1);\n+\t\t\tputs(\"powerpc-ibm-aix3.2.5\");\n+\t\t\texit(0);\n+\t\t\t}\n+EOF\n+\t\t${CC-cc} $dummy.c -o $dummy && ./$dummy && rm $dummy.c $dummy && exit 0\n+\t\trm -f $dummy.c $dummy\n+\t\techo rs6000-ibm-aix3.2.5\n+\telif grep bos324 /usr/include/stdio.h >/dev/null 2>&1; then\n+\t\techo rs6000-ibm-aix3.2.4\n+\telse\n+\t\techo rs6000-ibm-aix3.2\n+\tfi\n+\texit 0 ;;\n+    *:AIX:*:4)\n+\tIBM_CPU_ID=`/usr/sbin/lsdev -C -c processor -S available | head -1 | awk '{ print $1 }'`\n+\tif /usr/sbin/lsattr -EHl ${IBM_CPU_ID} | grep POWER >/dev/null 2>&1; then\n+\t\tIBM_ARCH=rs6000\n+\telse\n+\t\tIBM_ARCH=powerpc\n+\tfi\n+\tif [ -x /usr/bin/oslevel ] ; then\n+\t\tIBM_REV=`/usr/bin/oslevel`\n+\telse\n+\t\tIBM_REV=4.${UNAME_RELEASE}\n+\tfi\n+\techo ${IBM_ARCH}-ibm-aix${IBM_REV}\n+\texit 0 ;;\n+    *:AIX:*:*)\n+\techo rs6000-ibm-aix\n+\texit 0 ;;\n+    ibmrt:4.4BSD:*|romp-ibm:BSD:*)\n+\techo romp-ibm-bsd4.4\n+\texit 0 ;;\n+    ibmrt:*BSD:*|romp-ibm:BSD:*)            # covers RT/PC NetBSD and\n+\techo romp-ibm-bsd${UNAME_RELEASE}   # 4.3 with uname added to\n+\texit 0 ;;                           # report: romp-ibm BSD 4.3\n+    *:BOSX:*:*)\n+\techo rs6000-bull-bosx\n+\texit 0 ;;\n+    DPX/2?00:B.O.S.:*:*)\n+\techo m68k-bull-sysv3\n+\texit 0 ;;\n+    9000/[34]??:4.3bsd:1.*:*)\n+\techo m68k-hp-bsd\n+\texit 0 ;;\n+    hp300:4.4BSD:*:* | 9000/[34]??:4.3bsd:2.*:*)\n+\techo m68k-hp-bsd4.4\n+\texit 0 ;;\n+    9000/[34678]??:HP-UX:*:*)\n+\tcase \"${UNAME_MACHINE}\" in\n+\t    9000/31? )            HP_ARCH=m68000 ;;\n+\t    9000/[34]?? )         HP_ARCH=m68k ;;\n+\t    9000/6?? | 9000/7?? | 9000/80[024] | 9000/8?[136790] | 9000/892 )\n+              sed 's/^              //' << EOF >$dummy.c\n+              #include <stdlib.h>\n+              #include <unistd.h>\n+\n+              int main ()\n+              {\n+              #if defined(_SC_KERNEL_BITS)\n+                  long bits = sysconf(_SC_KERNEL_BITS);\n+              #endif\n+                  long cpu  = sysconf (_SC_CPU_VERSION);\n+\n+                  switch (cpu)\n+              \t{\n+              \tcase CPU_PA_RISC1_0: puts (\"hppa1.0\"); break;\n+              \tcase CPU_PA_RISC1_1: puts (\"hppa1.1\"); break;\n+              \tcase CPU_PA_RISC2_0:\n+              #if defined(_SC_KERNEL_BITS)\n+              \t    switch (bits)\n+              \t\t{\n+              \t\tcase 64: puts (\"hppa2.0w\"); break;\n+              \t\tcase 32: puts (\"hppa2.0n\"); break;\n+              \t\tdefault: puts (\"hppa2.0\"); break;\n+              \t\t} break;\n+              #else  /* !defined(_SC_KERNEL_BITS) */\n+              \t    puts (\"hppa2.0\"); break;\n+              #endif\n+              \tdefault: puts (\"hppa1.0\"); break;\n+              \t}\n+                  exit (0);\n+              }\n+EOF\n+\t(${CC-cc} $dummy.c -o $dummy 2>/dev/null ) && HP_ARCH=`./$dummy`\n+\trm -f $dummy.c $dummy\n+\tesac\n+\tHPUX_REV=`echo ${UNAME_RELEASE}|sed -e 's/[^.]*.[0B]*//'`\n+\techo ${HP_ARCH}-hp-hpux${HPUX_REV}\n+\texit 0 ;;\n+    3050*:HI-UX:*:*)\n+\tsed 's/^\t//' << EOF >$dummy.c\n+\t#include <unistd.h>\n+\tint\n+\tmain ()\n+\t{\n+\t  long cpu = sysconf (_SC_CPU_VERSION);\n+\t  /* The order matters, because CPU_IS_HP_MC68K erroneously returns\n+\t     true for CPU_PA_RISC1_0.  CPU_IS_PA_RISC returns correct\n+\t     results, however.  */\n+\t  if (CPU_IS_PA_RISC (cpu))\n+\t    {\n+\t      switch (cpu)\n+\t\t{\n+\t\t  case CPU_PA_RISC1_0: puts (\"hppa1.0-hitachi-hiuxwe2\"); break;\n+\t\t  case CPU_PA_RISC1_1: puts (\"hppa1.1-hitachi-hiuxwe2\"); break;\n+\t\t  case CPU_PA_RISC2_0: puts (\"hppa2.0-hitachi-hiuxwe2\"); break;\n+\t\t  default: puts (\"hppa-hitachi-hiuxwe2\"); break;\n+\t\t}\n+\t    }\n+\t  else if (CPU_IS_HP_MC68K (cpu))\n+\t    puts (\"m68k-hitachi-hiuxwe2\");\n+\t  else puts (\"unknown-hitachi-hiuxwe2\");\n+\t  exit (0);\n+\t}\n+EOF\n+\t${CC-cc} $dummy.c -o $dummy && ./$dummy && rm $dummy.c $dummy && exit 0\n+\trm -f $dummy.c $dummy\n+\techo unknown-hitachi-hiuxwe2\n+\texit 0 ;;\n+    9000/7??:4.3bsd:*:* | 9000/8?[79]:4.3bsd:*:* )\n+\techo hppa1.1-hp-bsd\n+\texit 0 ;;\n+    9000/8??:4.3bsd:*:*)\n+\techo hppa1.0-hp-bsd\n+\texit 0 ;;\n+    *9??*:MPE*:*:*)\n+\techo hppa1.0-hp-mpeix\n+\texit 0 ;;\n+    *9??*:MPE*:*:*)\n+\techo hppa1.0-hp-mpeix\n+\texit 0 ;;\n+    hp7??:OSF1:*:* | hp8?[79]:OSF1:*:* )\n+\techo hppa1.1-hp-osf\n+\texit 0 ;;\n+    hp8??:OSF1:*:*)\n+\techo hppa1.0-hp-osf\n+\texit 0 ;;\n+    i?86:OSF1:*:*)\n+\tif [ -x /usr/sbin/sysversion ] ; then\n+\t    echo ${UNAME_MACHINE}-unknown-osf1mk\n+\telse\n+\t    echo ${UNAME_MACHINE}-unknown-osf1\n+\tfi\n+\texit 0 ;;\n+    parisc*:Lites*:*:*)\n+\techo hppa1.1-hp-lites\n+\texit 0 ;;\n+    C1*:ConvexOS:*:* | convex:ConvexOS:C1*:*)\n+\techo c1-convex-bsd\n+        exit 0 ;;\n+    C2*:ConvexOS:*:* | convex:ConvexOS:C2*:*)\n+\tif getsysinfo -f scalar_acc\n+\tthen echo c32-convex-bsd\n+\telse echo c2-convex-bsd\n+\tfi\n+        exit 0 ;;\n+    C34*:ConvexOS:*:* | convex:ConvexOS:C34*:*)\n+\techo c34-convex-bsd\n+        exit 0 ;;\n+    C38*:ConvexOS:*:* | convex:ConvexOS:C38*:*)\n+\techo c38-convex-bsd\n+        exit 0 ;;\n+    C4*:ConvexOS:*:* | convex:ConvexOS:C4*:*)\n+\techo c4-convex-bsd\n+        exit 0 ;;\n+    CRAY*X-MP:*:*:*)\n+\techo xmp-cray-unicos\n+        exit 0 ;;\n+    CRAY*Y-MP:*:*:*)\n+\techo ymp-cray-unicos${UNAME_RELEASE}\n+\texit 0 ;;\n+    CRAY*[A-Z]90:*:*:*)\n+\techo ${UNAME_MACHINE}-cray-unicos${UNAME_RELEASE} \\\n+\t| sed -e 's/CRAY.*\\([A-Z]90\\)/\\1/' \\\n+\t      -e y/ABCDEFGHIJKLMNOPQRSTUVWXYZ/abcdefghijklmnopqrstuvwxyz/\n+\texit 0 ;;\n+    CRAY*TS:*:*:*)\n+\techo t90-cray-unicos${UNAME_RELEASE}\n+\texit 0 ;;\n+    CRAY*T3E:*:*:*)\n+\techo t3e-cray-unicosmk${UNAME_RELEASE}\n+\texit 0 ;;\n+    CRAY-2:*:*:*)\n+\techo cray2-cray-unicos\n+        exit 0 ;;\n+    F300:UNIX_System_V:*:*)\n+        FUJITSU_SYS=`uname -p | tr [A-Z] [a-z] | sed -e 's/\\///'`\n+        FUJITSU_REL=`echo ${UNAME_RELEASE} | sed -e 's/ /_/'`\n+        echo \"f300-fujitsu-${FUJITSU_SYS}${FUJITSU_REL}\"\n+        exit 0 ;;\n+    F301:UNIX_System_V:*:*)\n+       echo f301-fujitsu-uxpv`echo $UNAME_RELEASE | sed 's/ .*//'`\n+       exit 0 ;;\n+    hp3[0-9][05]:NetBSD:*:*)\n+\techo m68k-hp-netbsd${UNAME_RELEASE}\n+\texit 0 ;;\n+    hp300:OpenBSD:*:*)\n+\techo m68k-unknown-openbsd${UNAME_RELEASE}\n+\texit 0 ;;\n+    sparc*:BSD/OS:*:*)\n+\techo sparc-unknown-bsdi${UNAME_RELEASE}\n+\texit 0 ;;\n+    i?86:BSD/386:*:* | i?86:BSD/OS:*:*)\n+\techo ${UNAME_MACHINE}-pc-bsdi${UNAME_RELEASE}\n+\texit 0 ;;\n+    *:BSD/OS:*:*)\n+\techo ${UNAME_MACHINE}-unknown-bsdi${UNAME_RELEASE}\n+\texit 0 ;;\n+    *:FreeBSD:*:*)\n+\tif test -x /usr/bin/objformat; then\n+\t    if test \"elf\" = \"`/usr/bin/objformat`\"; then\n+\t\techo ${UNAME_MACHINE}-unknown-freebsdelf`echo ${UNAME_RELEASE}|sed -e 's/[-_].*//'`\n+\t\texit 0\n+\t    fi\n+\tfi\n+\techo ${UNAME_MACHINE}-unknown-freebsd`echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'`\n+\texit 0 ;;\n+    *:NetBSD:*:*)\n+\techo ${UNAME_MACHINE}-unknown-netbsd`echo ${UNAME_RELEASE}|sed -e 's/[-_].*/\\./'`\n+\texit 0 ;;\n+    *:OpenBSD:*:*)\n+\techo ${UNAME_MACHINE}-unknown-openbsd`echo ${UNAME_RELEASE}|sed -e 's/[-_].*/\\./'`\n+\texit 0 ;;\n+    i*:CYGWIN*:*)\n+\techo ${UNAME_MACHINE}-pc-cygwin\n+\texit 0 ;;\n+    i*:MINGW*:*)\n+\techo ${UNAME_MACHINE}-pc-mingw32\n+\texit 0 ;;\n+    p*:CYGWIN*:*)\n+\techo powerpcle-unknown-cygwin\n+\texit 0 ;;\n+    prep*:SunOS:5.*:*)\n+\techo powerpcle-unknown-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`\n+\texit 0 ;;\n+    *:GNU:*:*)\n+\techo `echo ${UNAME_MACHINE}|sed -e 's,[-/].*$,,'`-unknown-gnu`echo ${UNAME_RELEASE}|sed -e 's,/.*$,,'`\n+\texit 0 ;;\n+    *:Linux:*:*)\n+\t# uname on the ARM produces all sorts of strangeness, and we need to\n+\t# filter it out.\n+\tcase \"$UNAME_MACHINE\" in\n+\t  armv*)\t\t      UNAME_MACHINE=$UNAME_MACHINE ;;\n+\t  arm* | sa110*)\t      UNAME_MACHINE=\"arm\" ;;\n+\tesac\n+\n+\t# The BFD linker knows what the default object file format is, so\n+\t# first see if it will tell us.\n+\tld_help_string=`ld --help 2>&1`\n+\tld_supported_emulations=`echo $ld_help_string \\\n+\t\t\t | sed -ne '/supported emulations:/!d\n+\t\t\t\t    s/[ \t][ \t]*/ /g\n+\t\t\t\t    s/.*supported emulations: *//\n+\t\t\t\t    s/ .*//\n+\t\t\t\t    p'`\n+        case \"$ld_supported_emulations\" in\n+\t  i?86linux)  echo \"${UNAME_MACHINE}-pc-linux-gnuaout\"      ; exit 0 ;;\n+\t  i?86coff)   echo \"${UNAME_MACHINE}-pc-linux-gnucoff\"      ; exit 0 ;;\n+\t  sparclinux) echo \"${UNAME_MACHINE}-unknown-linux-gnuaout\" ; exit 0 ;;\n+\t  armlinux)   echo \"${UNAME_MACHINE}-unknown-linux-gnuaout\" ; exit 0 ;;\n+\t  m68klinux)  echo \"${UNAME_MACHINE}-unknown-linux-gnuaout\" ; exit 0 ;;\n+\t  elf32ppc)   echo \"powerpc-unknown-linux-gnu\"              ; exit 0 ;;\n+\tesac\n+\n+\tif test \"${UNAME_MACHINE}\" = \"alpha\" ; then\n+\t\tsed 's/^\t//'  <<EOF >$dummy.s\n+\t\t.globl main\n+\t\t.ent main\n+\tmain:\n+\t\t.frame \\$30,0,\\$26,0\n+\t\t.prologue 0\n+\t\t.long 0x47e03d80 # implver $0\n+\t\tlda \\$2,259\n+\t\t.long 0x47e20c21 # amask $2,$1\n+\t\tsrl \\$1,8,\\$2\n+\t\tsll \\$2,2,\\$2\n+\t\tsll \\$0,3,\\$0\n+\t\taddl \\$1,\\$0,\\$0\n+\t\taddl \\$2,\\$0,\\$0\n+\t\tret \\$31,(\\$26),1\n+\t\t.end main\n+EOF\n+\t\tLIBC=\"\"\n+\t\t${CC-cc} $dummy.s -o $dummy 2>/dev/null\n+\t\tif test \"$?\" = 0 ; then\n+\t\t\t./$dummy\n+\t\t\tcase \"$?\" in\n+\t\t\t7)\n+\t\t\t\tUNAME_MACHINE=\"alpha\"\n+\t\t\t\t;;\n+\t\t\t15)\n+\t\t\t\tUNAME_MACHINE=\"alphaev5\"\n+\t\t\t\t;;\n+\t\t\t14)\n+\t\t\t\tUNAME_MACHINE=\"alphaev56\"\n+\t\t\t\t;;\n+\t\t\t10)\n+\t\t\t\tUNAME_MACHINE=\"alphapca56\"\n+\t\t\t\t;;\n+\t\t\t16)\n+\t\t\t\tUNAME_MACHINE=\"alphaev6\"\n+\t\t\t\t;;\n+\t\t\tesac\n+\n+\t\t\tobjdump --private-headers $dummy | \\\n+\t\t\t  grep ld.so.1 > /dev/null\n+\t\t\tif test \"$?\" = 0 ; then\n+\t\t\t\tLIBC=\"libc1\"\n+\t\t\tfi\n+\t\tfi\n+\t\trm -f $dummy.s $dummy\n+\t\techo ${UNAME_MACHINE}-unknown-linux-gnu${LIBC} ; exit 0\n+\telif test \"${UNAME_MACHINE}\" = \"mips\" ; then\n+\t  cat >$dummy.c <<EOF\n+#ifdef __cplusplus\n+\tint main (int argc, char *argv[]) {\n+#else\n+\tint main (argc, argv) int argc; char *argv[]; {\n+#endif\n+#ifdef __MIPSEB__\n+  printf (\"%s-unknown-linux-gnu\\n\", argv[1]);\n+#endif\n+#ifdef __MIPSEL__\n+  printf (\"%sel-unknown-linux-gnu\\n\", argv[1]);\n+#endif\n+  return 0;\n+}\n+EOF\n+\t  ${CC-cc} $dummy.c -o $dummy 2>/dev/null && ./$dummy \"${UNAME_MACHINE}\" && rm $dummy.c $dummy && exit 0\n+\t  rm -f $dummy.c $dummy\n+\telse\n+\t  # Either a pre-BFD a.out linker (linux-gnuoldld)\n+\t  # or one that does not give us useful --help.\n+\t  # GCC wants to distinguish between linux-gnuoldld and linux-gnuaout.\n+\t  # If ld does not provide *any* \"supported emulations:\"\n+\t  # that means it is gnuoldld.\n+\t  echo \"$ld_help_string\" | grep >/dev/null 2>&1 \"supported emulations:\"\n+\t  test $? != 0 && echo \"${UNAME_MACHINE}-pc-linux-gnuoldld\" && exit 0\n+\n+\t  case \"${UNAME_MACHINE}\" in\n+\t  i?86)\n+\t    VENDOR=pc;\n+\t    ;;\n+\t  *)\n+\t    VENDOR=unknown;\n+\t    ;;\n+\t  esac\n+\t  # Determine whether the default compiler is a.out or elf\n+\t  cat >$dummy.c <<EOF\n+#include <features.h>\n+#ifdef __cplusplus\n+\tint main (int argc, char *argv[]) {\n+#else\n+\tint main (argc, argv) int argc; char *argv[]; {\n+#endif\n+#ifdef __ELF__\n+# ifdef __GLIBC__\n+#  if __GLIBC__ >= 2\n+    printf (\"%s-${VENDOR}-linux-gnu\\n\", argv[1]);\n+#  else\n+    printf (\"%s-${VENDOR}-linux-gnulibc1\\n\", argv[1]);\n+#  endif\n+# else\n+   printf (\"%s-${VENDOR}-linux-gnulibc1\\n\", argv[1]);\n+# endif\n+#else\n+  printf (\"%s-${VENDOR}-linux-gnuaout\\n\", argv[1]);\n+#endif\n+  return 0;\n+}\n+EOF\n+\t  ${CC-cc} $dummy.c -o $dummy 2>/dev/null && ./$dummy \"${UNAME_MACHINE}\" && rm $dummy.c $dummy && exit 0\n+\t  rm -f $dummy.c $dummy\n+\tfi ;;\n+# ptx 4.0 does uname -s correctly, with DYNIX/ptx in there.  earlier versions\n+# are messed up and put the nodename in both sysname and nodename.\n+    i?86:DYNIX/ptx:4*:*)\n+\techo i386-sequent-sysv4\n+\texit 0 ;;\n+    i?86:UNIX_SV:4.2MP:2.*)\n+        # Unixware is an offshoot of SVR4, but it has its own version\n+        # number series starting with 2...\n+        # I am not positive that other SVR4 systems won't match this,\n+\t# I just have to hope.  -- rms.\n+        # Use sysv4.2uw... so that sysv4* matches it.\n+\techo ${UNAME_MACHINE}-pc-sysv4.2uw${UNAME_VERSION}\n+\texit 0 ;;\n+    i?86:*:4.*:* | i?86:SYSTEM_V:4.*:*)\n+\tif grep Novell /usr/include/link.h >/dev/null 2>/dev/null; then\n+\t\techo ${UNAME_MACHINE}-univel-sysv${UNAME_RELEASE}\n+\telse\n+\t\techo ${UNAME_MACHINE}-pc-sysv${UNAME_RELEASE}\n+\tfi\n+\texit 0 ;;\n+    i?86:*:3.2:*)\n+\tif test -f /usr/options/cb.name; then\n+\t\tUNAME_REL=`sed -n 's/.*Version //p' </usr/options/cb.name`\n+\t\techo ${UNAME_MACHINE}-pc-isc$UNAME_REL\n+\telif /bin/uname -X 2>/dev/null >/dev/null ; then\n+\t\tUNAME_REL=`(/bin/uname -X|egrep Release|sed -e 's/.*= //')`\n+\t\t(/bin/uname -X|egrep i80486 >/dev/null) && UNAME_MACHINE=i486\n+\t\t(/bin/uname -X|egrep '^Machine.*Pentium' >/dev/null) \\\n+\t\t\t&& UNAME_MACHINE=i586\n+\t\techo ${UNAME_MACHINE}-pc-sco$UNAME_REL\n+\telse\n+\t\techo ${UNAME_MACHINE}-pc-sysv32\n+\tfi\n+\texit 0 ;;\n+    i?86:UnixWare:*:*)\n+\tif /bin/uname -X 2>/dev/null >/dev/null ; then\n+\t  (/bin/uname -X|egrep '^Machine.*Pentium' >/dev/null) \\\n+\t    && UNAME_MACHINE=i586\n+\tfi\n+\techo ${UNAME_MACHINE}-unixware-${UNAME_RELEASE}-${UNAME_VERSION}\n+\texit 0 ;;\n+    pc:*:*:*)\n+        # uname -m prints for DJGPP always 'pc', but it prints nothing about\n+        # the processor, so we play safe by assuming i386.\n+\techo i386-pc-msdosdjgpp\n+        exit 0 ;;\n+    Intel:Mach:3*:*)\n+\techo i386-pc-mach3\n+\texit 0 ;;\n+    paragon:*:*:*)\n+\techo i860-intel-osf1\n+\texit 0 ;;\n+    i860:*:4.*:*) # i860-SVR4\n+\tif grep Stardent /usr/include/sys/uadmin.h >/dev/null 2>&1 ; then\n+\t  echo i860-stardent-sysv${UNAME_RELEASE} # Stardent Vistra i860-SVR4\n+\telse # Add other i860-SVR4 vendors below as they are discovered.\n+\t  echo i860-unknown-sysv${UNAME_RELEASE}  # Unknown i860-SVR4\n+\tfi\n+\texit 0 ;;\n+    mini*:CTIX:SYS*5:*)\n+\t# \"miniframe\"\n+\techo m68010-convergent-sysv\n+\texit 0 ;;\n+    M68*:*:R3V[567]*:*)\n+\ttest -r /sysV68 && echo 'm68k-motorola-sysv' && exit 0 ;;\n+    3[34]??:*:4.0:3.0 | 3[34]??,*:*:4.0:3.0 | 4850:*:4.0:3.0)\n+\tOS_REL=''\n+\ttest -r /etc/.relid \\\n+\t&& OS_REL=.`sed -n 's/[^ ]* [^ ]* \\([0-9][0-9]\\).*/\\1/p' < /etc/.relid`\n+\t/bin/uname -p 2>/dev/null | grep 86 >/dev/null \\\n+\t  && echo i486-ncr-sysv4.3${OS_REL} && exit 0\n+\t/bin/uname -p 2>/dev/null | /bin/grep entium >/dev/null \\\n+\t  && echo i586-ncr-sysv4.3${OS_REL} && exit 0 ;;\n+    3[34]??:*:4.0:* | 3[34]??,*:*:4.0:*)\n+        /bin/uname -p 2>/dev/null | grep 86 >/dev/null \\\n+          && echo i486-ncr-sysv4 && exit 0 ;;\n+    m68*:LynxOS:2.*:*)\n+\techo m68k-unknown-lynxos${UNAME_RELEASE}\n+\texit 0 ;;\n+    mc68030:UNIX_System_V:4.*:*)\n+\techo m68k-atari-sysv4\n+\texit 0 ;;\n+    i?86:LynxOS:2.*:* | i?86:LynxOS:3.[01]*:*)\n+\techo i386-unknown-lynxos${UNAME_RELEASE}\n+\texit 0 ;;\n+    TSUNAMI:LynxOS:2.*:*)\n+\techo sparc-unknown-lynxos${UNAME_RELEASE}\n+\texit 0 ;;\n+    rs6000:LynxOS:2.*:* | PowerPC:LynxOS:2.*:*)\n+\techo rs6000-unknown-lynxos${UNAME_RELEASE}\n+\texit 0 ;;\n+    SM[BE]S:UNIX_SV:*:*)\n+\techo mips-dde-sysv${UNAME_RELEASE}\n+\texit 0 ;;\n+    RM*:ReliantUNIX-*:*:*)\n+\techo mips-sni-sysv4\n+\texit 0 ;;\n+    RM*:SINIX-*:*:*)\n+\techo mips-sni-sysv4\n+\texit 0 ;;\n+    *:SINIX-*:*:*)\n+\tif uname -p 2>/dev/null >/dev/null ; then\n+\t\tUNAME_MACHINE=`(uname -p) 2>/dev/null`\n+\t\techo ${UNAME_MACHINE}-sni-sysv4\n+\telse\n+\t\techo ns32k-sni-sysv\n+\tfi\n+\texit 0 ;;\n+    PENTIUM:CPunix:4.0*:*) # Unisys `ClearPath HMP IX 4000' SVR4/MP effort\n+                           # says <Richard.M.Bartel@ccMail.Census.GOV>\n+        echo i586-unisys-sysv4\n+        exit 0 ;;\n+    *:UNIX_System_V:4*:FTX*)\n+\t# From Gerald Hewes <hewes@openmarket.com>.\n+\t# How about differentiating between stratus architectures? -djm\n+\techo hppa1.1-stratus-sysv4\n+\texit 0 ;;\n+    *:*:*:FTX*)\n+\t# From seanf@swdc.stratus.com.\n+\techo i860-stratus-sysv4\n+\texit 0 ;;\n+    mc68*:A/UX:*:*)\n+\techo m68k-apple-aux${UNAME_RELEASE}\n+\texit 0 ;;\n+    news*:NEWS-OS:*:6*)\n+\techo mips-sony-newsos6\n+\texit 0 ;;\n+    R[34]000:*System_V*:*:* | R4000:UNIX_SYSV:*:* | R4000:UNIX_SV:*:*)\n+\tif [ -d /usr/nec ]; then\n+\t        echo mips-nec-sysv${UNAME_RELEASE}\n+\telse\n+\t        echo mips-unknown-sysv${UNAME_RELEASE}\n+\tfi\n+        exit 0 ;;\n+    BeBox:BeOS:*:*)\t# BeOS running on hardware made by Be, PPC only.\n+\techo powerpc-be-beos\n+\texit 0 ;;\n+    BeMac:BeOS:*:*)\t# BeOS running on Mac or Mac clone, PPC only.\n+\techo powerpc-apple-beos\n+\texit 0 ;;\n+    BePC:BeOS:*:*)\t# BeOS running on Intel PC compatible.\n+\techo i586-pc-beos\n+\texit 0 ;;\n+    SX-4:SUPER-UX:*:*)\n+\techo sx4-nec-superux${UNAME_RELEASE}\n+\texit 0 ;;\n+    SX-5:SUPER-UX:*:*)\n+\techo sx5-nec-superux${UNAME_RELEASE}\n+\texit 0 ;;\n+    Power*:Rhapsody:*:*)\n+\techo powerpc-apple-rhapsody${UNAME_RELEASE}\n+\texit 0 ;;\n+    *:Rhapsody:*:*)\n+\techo ${UNAME_MACHINE}-apple-rhapsody${UNAME_RELEASE}\n+\texit 0 ;;\n+esac\n+\n+#echo '(No uname command or uname output not recognized.)' 1>&2\n+#echo \"${UNAME_MACHINE}:${UNAME_SYSTEM}:${UNAME_RELEASE}:${UNAME_VERSION}\" 1>&2\n+\n+cat >$dummy.c <<EOF\n+#ifdef _SEQUENT_\n+# include <sys/types.h>\n+# include <sys/utsname.h>\n+#endif\n+main ()\n+{\n+#if defined (sony)\n+#if defined (MIPSEB)\n+  /* BFD wants \"bsd\" instead of \"newsos\".  Perhaps BFD should be changed,\n+     I don't know....  */\n+  printf (\"mips-sony-bsd\\n\"); exit (0);\n+#else\n+#include <sys/param.h>\n+  printf (\"m68k-sony-newsos%s\\n\",\n+#ifdef NEWSOS4\n+          \"4\"\n+#else\n+\t  \"\"\n+#endif\n+         ); exit (0);\n+#endif\n+#endif\n+\n+#if defined (__arm) && defined (__acorn) && defined (__unix)\n+  printf (\"arm-acorn-riscix\"); exit (0);\n+#endif\n+\n+#if defined (hp300) && !defined (hpux)\n+  printf (\"m68k-hp-bsd\\n\"); exit (0);\n+#endif\n+\n+#if defined (NeXT)\n+#if !defined (__ARCHITECTURE__)\n+#define __ARCHITECTURE__ \"m68k\"\n+#endif\n+  int version;\n+  version=`(hostinfo | sed -n 's/.*NeXT Mach \\([0-9]*\\).*/\\1/p') 2>/dev/null`;\n+  if (version < 4)\n+    printf (\"%s-next-nextstep%d\\n\", __ARCHITECTURE__, version);\n+  else\n+    printf (\"%s-next-openstep%d\\n\", __ARCHITECTURE__, version);\n+  exit (0);\n+#endif\n+\n+#if defined (MULTIMAX) || defined (n16)\n+#if defined (UMAXV)\n+  printf (\"ns32k-encore-sysv\\n\"); exit (0);\n+#else\n+#if defined (CMU)\n+  printf (\"ns32k-encore-mach\\n\"); exit (0);\n+#else\n+  printf (\"ns32k-encore-bsd\\n\"); exit (0);\n+#endif\n+#endif\n+#endif\n+\n+#if defined (__386BSD__)\n+  printf (\"i386-pc-bsd\\n\"); exit (0);\n+#endif\n+\n+#if defined (sequent)\n+#if defined (i386)\n+  printf (\"i386-sequent-dynix\\n\"); exit (0);\n+#endif\n+#if defined (ns32000)\n+  printf (\"ns32k-sequent-dynix\\n\"); exit (0);\n+#endif\n+#endif\n+\n+#if defined (_SEQUENT_)\n+    struct utsname un;\n+\n+    uname(&un);\n+\n+    if (strncmp(un.version, \"V2\", 2) == 0) {\n+\tprintf (\"i386-sequent-ptx2\\n\"); exit (0);\n+    }\n+    if (strncmp(un.version, \"V1\", 2) == 0) { /* XXX is V1 correct? */\n+\tprintf (\"i386-sequent-ptx1\\n\"); exit (0);\n+    }\n+    printf (\"i386-sequent-ptx\\n\"); exit (0);\n+\n+#endif\n+\n+#if defined (vax)\n+#if !defined (ultrix)\n+  printf (\"vax-dec-bsd\\n\"); exit (0);\n+#else\n+  printf (\"vax-dec-ultrix\\n\"); exit (0);\n+#endif\n+#endif\n+\n+#if defined (alliant) && defined (i860)\n+  printf (\"i860-alliant-bsd\\n\"); exit (0);\n+#endif\n+\n+  exit (1);\n+}\n+EOF\n+\n+${CC-cc} $dummy.c -o $dummy 2>/dev/null && ./$dummy && rm $dummy.c $dummy && exit 0\n+rm -f $dummy.c $dummy\n+\n+# Apollos put the system type in the environment.\n+\n+test -d /usr/apollo && { echo ${ISP}-apollo-${SYSTYPE}; exit 0; }\n+\n+# Convex versions that predate uname can use getsysinfo(1)\n+\n+if [ -x /usr/convex/getsysinfo ]\n+then\n+    case `getsysinfo -f cpu_type` in\n+    c1*)\n+\techo c1-convex-bsd\n+\texit 0 ;;\n+    c2*)\n+\tif getsysinfo -f scalar_acc\n+\tthen echo c32-convex-bsd\n+\telse echo c2-convex-bsd\n+\tfi\n+\texit 0 ;;\n+    c34*)\n+\techo c34-convex-bsd\n+\texit 0 ;;\n+    c38*)\n+\techo c38-convex-bsd\n+\texit 0 ;;\n+    c4*)\n+\techo c4-convex-bsd\n+\texit 0 ;;\n+    esac\n+fi\n+\n+#echo '(Unable to guess system type)' 1>&2\n+\n+exit 1"}, {"sha": "78d36b15a20fe68288741c3f3e44e272a1e59f9a", "filename": "libffi/config.sub", "status": "added", "additions": 979, "deletions": 0, "changes": 979, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63e5e3e0dbb7207e95c0437499b980a304665589/libffi%2Fconfig.sub", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63e5e3e0dbb7207e95c0437499b980a304665589/libffi%2Fconfig.sub", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fconfig.sub?ref=63e5e3e0dbb7207e95c0437499b980a304665589", "patch": "@@ -0,0 +1,979 @@\n+#! /bin/sh\n+# Configuration validation subroutine script, version 1.1.\n+#   Copyright (C) 1991, 92-97, 1998 Free Software Foundation, Inc.\n+# This file is (in principle) common to ALL GNU software.\n+# The presence of a machine in this file suggests that SOME GNU software\n+# can handle that machine.  It does not imply ALL GNU software can.\n+#\n+# This file is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 2 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program; if not, write to the Free Software\n+# Foundation, Inc., 59 Temple Place - Suite 330,\n+# Boston, MA 02111-1307, USA.\n+\n+# As a special exception to the GNU General Public License, if you\n+# distribute this file as part of a program that contains a\n+# configuration script generated by Autoconf, you may include it under\n+# the same distribution terms that you use for the rest of that program.\n+\n+# Configuration subroutine to validate and canonicalize a configuration type.\n+# Supply the specified configuration type as an argument.\n+# If it is invalid, we print an error message on stderr and exit with code 1.\n+# Otherwise, we print the canonical config type on stdout and succeed.\n+\n+# This file is supposed to be the same for all GNU packages\n+# and recognize all the CPU types, system types and aliases\n+# that are meaningful with *any* GNU software.\n+# Each package is responsible for reporting which valid configurations\n+# it does not support.  The user should be able to distinguish\n+# a failure to support a valid configuration from a meaningless\n+# configuration.\n+\n+# The goal of this file is to map all the various variations of a given\n+# machine specification into a single specification in the form:\n+#\tCPU_TYPE-MANUFACTURER-OPERATING_SYSTEM\n+# or in some cases, the newer four-part form:\n+#\tCPU_TYPE-MANUFACTURER-KERNEL-OPERATING_SYSTEM\n+# It is wrong to echo any other type of specification.\n+\n+if [ x$1 = x ]\n+then\n+\techo Configuration name missing. 1>&2\n+\techo \"Usage: $0 CPU-MFR-OPSYS\" 1>&2\n+\techo \"or     $0 ALIAS\" 1>&2\n+\techo where ALIAS is a recognized configuration type. 1>&2\n+\texit 1\n+fi\n+\n+# First pass through any local machine types.\n+case $1 in\n+\t*local*)\n+\t\techo $1\n+\t\texit 0\n+\t\t;;\n+\t*)\n+\t;;\n+esac\n+\n+# Separate what the user gave into CPU-COMPANY and OS or KERNEL-OS (if any).\n+# Here we must recognize all the valid KERNEL-OS combinations.\n+maybe_os=`echo $1 | sed 's/^\\(.*\\)-\\([^-]*-[^-]*\\)$/\\2/'`\n+case $maybe_os in\n+  linux-gnu*)\n+    os=-$maybe_os\n+    basic_machine=`echo $1 | sed 's/^\\(.*\\)-\\([^-]*-[^-]*\\)$/\\1/'`\n+    ;;\n+  *)\n+    basic_machine=`echo $1 | sed 's/-[^-]*$//'`\n+    if [ $basic_machine != $1 ]\n+    then os=`echo $1 | sed 's/.*-/-/'`\n+    else os=; fi\n+    ;;\n+esac\n+\n+### Let's recognize common machines as not being operating systems so\n+### that things like config.sub decstation-3100 work.  We also\n+### recognize some manufacturers as not being operating systems, so we\n+### can provide default operating systems below.\n+case $os in\n+\t-sun*os*)\n+\t\t# Prevent following clause from handling this invalid input.\n+\t\t;;\n+\t-dec* | -mips* | -sequent* | -encore* | -pc532* | -sgi* | -sony* | \\\n+\t-att* | -7300* | -3300* | -delta* | -motorola* | -sun[234]* | \\\n+\t-unicom* | -ibm* | -next | -hp | -isi* | -apollo | -altos* | \\\n+\t-convergent* | -ncr* | -news | -32* | -3600* | -3100* | -hitachi* |\\\n+\t-c[123]* | -convex* | -sun | -crds | -omron* | -dg | -ultra | -tti* | \\\n+\t-harris | -dolphin | -highlevel | -gould | -cbm | -ns | -masscomp | \\\n+\t-apple)\n+\t\tos=\n+\t\tbasic_machine=$1\n+\t\t;;\n+\t-hiux*)\n+\t\tos=-hiuxwe2\n+\t\t;;\n+\t-sco5)\n+\t\tos=sco3.2v5\n+\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`\n+\t\t;;\n+\t-sco4)\n+\t\tos=-sco3.2v4\n+\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`\n+\t\t;;\n+\t-sco3.2.[4-9]*)\n+\t\tos=`echo $os | sed -e 's/sco3.2./sco3.2v/'`\n+\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`\n+\t\t;;\n+\t-sco3.2v[4-9]*)\n+\t\t# Don't forget version if it is 3.2v4 or newer.\n+\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`\n+\t\t;;\n+\t-sco*)\n+\t\tos=-sco3.2v2\n+\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`\n+\t\t;;\n+\t-isc)\n+\t\tos=-isc2.2\n+\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`\n+\t\t;;\n+\t-clix*)\n+\t\tbasic_machine=clipper-intergraph\n+\t\t;;\n+\t-isc*)\n+\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`\n+\t\t;;\n+\t-lynx*)\n+\t\tos=-lynxos\n+\t\t;;\n+\t-ptx*)\n+\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-sequent/'`\n+\t\t;;\n+\t-windowsnt*)\n+\t\tos=`echo $os | sed -e 's/windowsnt/winnt/'`\n+\t\t;;\n+\t-psos*)\n+\t\tos=-psos\n+\t\t;;\n+esac\n+\n+# Decode aliases for certain CPU-COMPANY combinations.\n+case $basic_machine in\n+\t# Recognize the basic CPU types without company name.\n+\t# Some are omitted here because they have special meanings below.\n+\ttahoe | i860 | m32r | m68k | m68000 | m88k | ns32k | arc | arm \\\n+\t\t| arme[lb] | pyramid | mn10200 | mn10300 | tron | a29k \\\n+\t\t| 580 | i960 | h8300 | hppa | hppa1.0 | hppa1.1 | hppa2.0 \\\n+\t\t| hppa2.0w \\\n+\t\t| alpha | alphaev5 | alphaev56 | we32k | ns16k | clipper \\\n+\t\t| i370 | sh | powerpc | powerpcle | 1750a | dsp16xx | pdp11 \\\n+\t\t| mips64 | mipsel | mips64el | mips64orion | mips64orionel \\\n+\t\t| mipstx39 | mipstx39el \\\n+\t\t| sparc | sparclet | sparclite | sparc64 | v850)\n+\t\tbasic_machine=$basic_machine-unknown\n+\t\t;;\n+\t# We use `pc' rather than `unknown'\n+\t# because (1) that's what they normally are, and\n+\t# (2) the word \"unknown\" tends to confuse beginning users.\n+\ti[34567]86)\n+\t  basic_machine=$basic_machine-pc\n+\t  ;;\n+\t# Object if more than one company name word.\n+\t*-*-*)\n+\t\techo Invalid configuration \\`$1\\': machine \\`$basic_machine\\' not recognized 1>&2\n+\t\texit 1\n+\t\t;;\n+\t# Recognize the basic CPU types with company name.\n+\tvax-* | tahoe-* | i[34567]86-* | i860-* | m32r-* | m68k-* | m68000-* \\\n+\t      | m88k-* | sparc-* | ns32k-* | fx80-* | arc-* | arm-* | c[123]* \\\n+\t      | mips-* | pyramid-* | tron-* | a29k-* | romp-* | rs6000-* \\\n+\t      | power-* | none-* | 580-* | cray2-* | h8300-* | i960-* \\\n+\t      | xmp-* | ymp-* | hppa-* | hppa1.0-* | hppa1.1-* | hppa2.0-* \\\n+\t      | hppa2.0w-* \\\n+\t      | alpha-* | alphaev5-* | alphaev56-* | we32k-* | cydra-* \\\n+\t      | ns16k-* | pn-* | np1-* | xps100-* | clipper-* | orion-* \\\n+\t      | sparclite-* | pdp11-* | sh-* | powerpc-* | powerpcle-* \\\n+\t      | sparc64-* | mips64-* | mipsel-* \\\n+\t      | mips64el-* | mips64orion-* | mips64orionel-*  \\\n+\t      | mipstx39-* | mipstx39el-* \\\n+\t      | f301-* | armv*-*)\n+\t\t;;\n+\t# Recognize the various machine names and aliases which stand\n+\t# for a CPU type and a company and sometimes even an OS.\n+\t3b1 | 7300 | 7300-att | att-7300 | pc7300 | safari | unixpc)\n+\t\tbasic_machine=m68000-att\n+\t\t;;\n+\t3b*)\n+\t\tbasic_machine=we32k-att\n+\t\t;;\n+\talliant | fx80)\n+\t\tbasic_machine=fx80-alliant\n+\t\t;;\n+\taltos | altos3068)\n+\t\tbasic_machine=m68k-altos\n+\t\t;;\n+\tam29k)\n+\t\tbasic_machine=a29k-none\n+\t\tos=-bsd\n+\t\t;;\n+\tamdahl)\n+\t\tbasic_machine=580-amdahl\n+\t\tos=-sysv\n+\t\t;;\n+\tamiga | amiga-*)\n+\t\tbasic_machine=m68k-cbm\n+\t\t;;\n+\tamigaos | amigados)\n+\t\tbasic_machine=m68k-cbm\n+\t\tos=-amigaos\n+\t\t;;\n+\tamigaunix | amix)\n+\t\tbasic_machine=m68k-cbm\n+\t\tos=-sysv4\n+\t\t;;\n+\tapollo68)\n+\t\tbasic_machine=m68k-apollo\n+\t\tos=-sysv\n+\t\t;;\n+\taux)\n+\t\tbasic_machine=m68k-apple\n+\t\tos=-aux\n+\t\t;;\n+\tbalance)\n+\t\tbasic_machine=ns32k-sequent\n+\t\tos=-dynix\n+\t\t;;\n+\tconvex-c1)\n+\t\tbasic_machine=c1-convex\n+\t\tos=-bsd\n+\t\t;;\n+\tconvex-c2)\n+\t\tbasic_machine=c2-convex\n+\t\tos=-bsd\n+\t\t;;\n+\tconvex-c32)\n+\t\tbasic_machine=c32-convex\n+\t\tos=-bsd\n+\t\t;;\n+\tconvex-c34)\n+\t\tbasic_machine=c34-convex\n+\t\tos=-bsd\n+\t\t;;\n+\tconvex-c38)\n+\t\tbasic_machine=c38-convex\n+\t\tos=-bsd\n+\t\t;;\n+\tcray | ymp)\n+\t\tbasic_machine=ymp-cray\n+\t\tos=-unicos\n+\t\t;;\n+\tcray2)\n+\t\tbasic_machine=cray2-cray\n+\t\tos=-unicos\n+\t\t;;\n+\t[ctj]90-cray)\n+\t\tbasic_machine=c90-cray\n+\t\tos=-unicos\n+\t\t;;\n+\tcrds | unos)\n+\t\tbasic_machine=m68k-crds\n+\t\t;;\n+\tda30 | da30-*)\n+\t\tbasic_machine=m68k-da30\n+\t\t;;\n+\tdecstation | decstation-3100 | pmax | pmax-* | pmin | dec3100 | decstatn)\n+\t\tbasic_machine=mips-dec\n+\t\t;;\n+\tdelta | 3300 | motorola-3300 | motorola-delta \\\n+\t      | 3300-motorola | delta-motorola)\n+\t\tbasic_machine=m68k-motorola\n+\t\t;;\n+\tdelta88)\n+\t\tbasic_machine=m88k-motorola\n+\t\tos=-sysv3\n+\t\t;;\n+\tdpx20 | dpx20-*)\n+\t\tbasic_machine=rs6000-bull\n+\t\tos=-bosx\n+\t\t;;\n+\tdpx2* | dpx2*-bull)\n+\t\tbasic_machine=m68k-bull\n+\t\tos=-sysv3\n+\t\t;;\n+\tebmon29k)\n+\t\tbasic_machine=a29k-amd\n+\t\tos=-ebmon\n+\t\t;;\n+\telxsi)\n+\t\tbasic_machine=elxsi-elxsi\n+\t\tos=-bsd\n+\t\t;;\n+\tencore | umax | mmax)\n+\t\tbasic_machine=ns32k-encore\n+\t\t;;\n+\tfx2800)\n+\t\tbasic_machine=i860-alliant\n+\t\t;;\n+\tgenix)\n+\t\tbasic_machine=ns32k-ns\n+\t\t;;\n+\tgmicro)\n+\t\tbasic_machine=tron-gmicro\n+\t\tos=-sysv\n+\t\t;;\n+\th3050r* | hiux*)\n+\t\tbasic_machine=hppa1.1-hitachi\n+\t\tos=-hiuxwe2\n+\t\t;;\n+\th8300hms)\n+\t\tbasic_machine=h8300-hitachi\n+\t\tos=-hms\n+\t\t;;\n+\tharris)\n+\t\tbasic_machine=m88k-harris\n+\t\tos=-sysv3\n+\t\t;;\n+\thp300-*)\n+\t\tbasic_machine=m68k-hp\n+\t\t;;\n+\thp300bsd)\n+\t\tbasic_machine=m68k-hp\n+\t\tos=-bsd\n+\t\t;;\n+\thp300hpux)\n+\t\tbasic_machine=m68k-hp\n+\t\tos=-hpux\n+\t\t;;\n+\thp9k2[0-9][0-9] | hp9k31[0-9])\n+\t\tbasic_machine=m68000-hp\n+\t\t;;\n+\thp9k3[2-9][0-9])\n+\t\tbasic_machine=m68k-hp\n+\t\t;;\n+\thp9k7[0-9][0-9] | hp7[0-9][0-9] | hp9k8[0-9]7 | hp8[0-9]7)\n+\t\tbasic_machine=hppa1.1-hp\n+\t\t;;\n+\thp9k8[0-9][0-9] | hp8[0-9][0-9])\n+\t\tbasic_machine=hppa1.0-hp\n+\t\t;;\n+\thppa-next)\n+\t\tos=-nextstep3\n+\t\t;;\n+\thp3k9[0-9][0-9] | hp9[0-9][0-9])\n+\t\tbasic_machine=hppa1.0-hp\n+\t\tos=-mpeix\n+\t\t;;\n+\thp3k9[0-9][0-9] | hp9[0-9][0-9])\n+\t\tbasic_machine=hppa1.0-hp\n+\t\tos=-mpeix\n+\t\t;;\n+\ti370-ibm* | ibm*)\n+\t\tbasic_machine=i370-ibm\n+\t\tos=-mvs\n+\t\t;;\n+# I'm not sure what \"Sysv32\" means.  Should this be sysv3.2?\n+\ti[34567]86v32)\n+\t\tbasic_machine=`echo $1 | sed -e 's/86.*/86-pc/'`\n+\t\tos=-sysv32\n+\t\t;;\n+\ti[34567]86v4*)\n+\t\tbasic_machine=`echo $1 | sed -e 's/86.*/86-pc/'`\n+\t\tos=-sysv4\n+\t\t;;\n+\ti[34567]86v)\n+\t\tbasic_machine=`echo $1 | sed -e 's/86.*/86-pc/'`\n+\t\tos=-sysv\n+\t\t;;\n+\ti[34567]86sol2)\n+\t\tbasic_machine=`echo $1 | sed -e 's/86.*/86-pc/'`\n+\t\tos=-solaris2\n+\t\t;;\n+\tiris | iris4d)\n+\t\tbasic_machine=mips-sgi\n+\t\tcase $os in\n+\t\t    -irix*)\n+\t\t\t;;\n+\t\t    *)\n+\t\t\tos=-irix4\n+\t\t\t;;\n+\t\tesac\n+\t\t;;\n+\tisi68 | isi)\n+\t\tbasic_machine=m68k-isi\n+\t\tos=-sysv\n+\t\t;;\n+\tm88k-omron*)\n+\t\tbasic_machine=m88k-omron\n+\t\t;;\n+\tmagnum | m3230)\n+\t\tbasic_machine=mips-mips\n+\t\tos=-sysv\n+\t\t;;\n+\tmerlin)\n+\t\tbasic_machine=ns32k-utek\n+\t\tos=-sysv\n+\t\t;;\n+\tminiframe)\n+\t\tbasic_machine=m68000-convergent\n+\t\t;;\n+\tmipsel*-linux*)\n+\t\tbasic_machine=mipsel-unknown\n+\t\tos=-linux-gnu\n+\t\t;;\n+\tmips*-linux*)\n+\t\tbasic_machine=mips-unknown\n+\t\tos=-linux-gnu\n+\t\t;;\n+\tmips3*-*)\n+\t\tbasic_machine=`echo $basic_machine | sed -e 's/mips3/mips64/'`\n+\t\t;;\n+\tmips3*)\n+\t\tbasic_machine=`echo $basic_machine | sed -e 's/mips3/mips64/'`-unknown\n+\t\t;;\n+\tncr3000)\n+\t\tbasic_machine=i486-ncr\n+\t\tos=-sysv4\n+\t\t;;\n+\tnetwinder)\n+\t\tbasic_machine=armv4l-corel\n+\t\tos=-linux\n+\t\t;;\n+\tnews | news700 | news800 | news900)\n+\t\tbasic_machine=m68k-sony\n+\t\tos=-newsos\n+\t\t;;\n+\tnews1000)\n+\t\tbasic_machine=m68030-sony\n+\t\tos=-newsos\n+\t\t;;\n+\tnews-3600 | risc-news)\n+\t\tbasic_machine=mips-sony\n+\t\tos=-newsos\n+\t\t;;\n+\tnext | m*-next )\n+\t\tbasic_machine=m68k-next\n+\t\tcase $os in\n+\t\t    -nextstep* )\n+\t\t\t;;\n+\t\t    -ns2*)\n+\t\t      os=-nextstep2\n+\t\t\t;;\n+\t\t    *)\n+\t\t      os=-nextstep3\n+\t\t\t;;\n+\t\tesac\n+\t\t;;\n+\tnh3000)\n+\t\tbasic_machine=m68k-harris\n+\t\tos=-cxux\n+\t\t;;\n+\tnh[45]000)\n+\t\tbasic_machine=m88k-harris\n+\t\tos=-cxux\n+\t\t;;\n+\tnindy960)\n+\t\tbasic_machine=i960-intel\n+\t\tos=-nindy\n+\t\t;;\n+\tnp1)\n+\t\tbasic_machine=np1-gould\n+\t\t;;\n+\tpa-hitachi)\n+\t\tbasic_machine=hppa1.1-hitachi\n+\t\tos=-hiuxwe2\n+\t\t;;\n+\tparagon)\n+\t\tbasic_machine=i860-intel\n+\t\tos=-osf\n+\t\t;;\n+\tpbd)\n+\t\tbasic_machine=sparc-tti\n+\t\t;;\n+\tpbb)\n+\t\tbasic_machine=m68k-tti\n+\t\t;;\n+        pc532 | pc532-*)\n+\t\tbasic_machine=ns32k-pc532\n+\t\t;;\n+\tpentium | p5 | k5 | nexen)\n+\t\tbasic_machine=i586-pc\n+\t\t;;\n+\tpentiumpro | p6 | k6 | 6x86)\n+\t\tbasic_machine=i686-pc\n+\t\t;;\n+\tpentiumii | pentium2)\n+\t\tbasic_machine=i786-pc\n+\t\t;;\n+\tpentium-* | p5-* | k5-* | nexen-*)\n+\t\tbasic_machine=i586-`echo $basic_machine | sed 's/^[^-]*-//'`\n+\t\t;;\n+\tpentiumpro-* | p6-* | k6-* | 6x86-*)\n+\t\tbasic_machine=i686-`echo $basic_machine | sed 's/^[^-]*-//'`\n+\t\t;;\n+\tpentiumii-* | pentium2-*)\n+\t\tbasic_machine=i786-`echo $basic_machine | sed 's/^[^-]*-//'`\n+\t\t;;\n+\tpn)\n+\t\tbasic_machine=pn-gould\n+\t\t;;\n+\tpower)\tbasic_machine=rs6000-ibm\n+\t\t;;\n+\tppc)\tbasic_machine=powerpc-unknown\n+\t        ;;\n+\tppc-*)\tbasic_machine=powerpc-`echo $basic_machine | sed 's/^[^-]*-//'`\n+\t\t;;\n+\tppcle | powerpclittle | ppc-le | powerpc-little)\n+\t\tbasic_machine=powerpcle-unknown\n+\t        ;;\n+\tppcle-* | powerpclittle-*)\n+\t\tbasic_machine=powerpcle-`echo $basic_machine | sed 's/^[^-]*-//'`\n+\t\t;;\n+\tps2)\n+\t\tbasic_machine=i386-ibm\n+\t\t;;\n+\trm[46]00)\n+\t\tbasic_machine=mips-siemens\n+\t\t;;\n+\trtpc | rtpc-*)\n+\t\tbasic_machine=romp-ibm\n+\t\t;;\n+\tsequent)\n+\t\tbasic_machine=i386-sequent\n+\t\t;;\n+\tsh)\n+\t\tbasic_machine=sh-hitachi\n+\t\tos=-hms\n+\t\t;;\n+\tsps7)\n+\t\tbasic_machine=m68k-bull\n+\t\tos=-sysv2\n+\t\t;;\n+\tspur)\n+\t\tbasic_machine=spur-unknown\n+\t\t;;\n+\tsun2)\n+\t\tbasic_machine=m68000-sun\n+\t\t;;\n+\tsun2os3)\n+\t\tbasic_machine=m68000-sun\n+\t\tos=-sunos3\n+\t\t;;\n+\tsun2os4)\n+\t\tbasic_machine=m68000-sun\n+\t\tos=-sunos4\n+\t\t;;\n+\tsun3os3)\n+\t\tbasic_machine=m68k-sun\n+\t\tos=-sunos3\n+\t\t;;\n+\tsun3os4)\n+\t\tbasic_machine=m68k-sun\n+\t\tos=-sunos4\n+\t\t;;\n+\tsun4os3)\n+\t\tbasic_machine=sparc-sun\n+\t\tos=-sunos3\n+\t\t;;\n+\tsun4os4)\n+\t\tbasic_machine=sparc-sun\n+\t\tos=-sunos4\n+\t\t;;\n+\tsun4sol2)\n+\t\tbasic_machine=sparc-sun\n+\t\tos=-solaris2\n+\t\t;;\n+\tsun3 | sun3-*)\n+\t\tbasic_machine=m68k-sun\n+\t\t;;\n+\tsun4)\n+\t\tbasic_machine=sparc-sun\n+\t\t;;\n+\tsun386 | sun386i | roadrunner)\n+\t\tbasic_machine=i386-sun\n+\t\t;;\n+\tsymmetry)\n+\t\tbasic_machine=i386-sequent\n+\t\tos=-dynix\n+\t\t;;\n+\ttx39)\n+\t\tbasic_machine=mipstx39-unknown\n+\t\t;;\n+\ttx39el)\n+\t\tbasic_machine=mipstx39el-unknown\n+\t\t;;\n+\ttower | tower-32)\n+\t\tbasic_machine=m68k-ncr\n+\t\t;;\n+\tudi29k)\n+\t\tbasic_machine=a29k-amd\n+\t\tos=-udi\n+\t\t;;\n+\tultra3)\n+\t\tbasic_machine=a29k-nyu\n+\t\tos=-sym1\n+\t\t;;\n+\tvaxv)\n+\t\tbasic_machine=vax-dec\n+\t\tos=-sysv\n+\t\t;;\n+\tvms)\n+\t\tbasic_machine=vax-dec\n+\t\tos=-vms\n+\t\t;;\n+\tvpp*|vx|vx-*)\n+               basic_machine=f301-fujitsu\n+               ;;\n+\tvxworks960)\n+\t\tbasic_machine=i960-wrs\n+\t\tos=-vxworks\n+\t\t;;\n+\tvxworks68)\n+\t\tbasic_machine=m68k-wrs\n+\t\tos=-vxworks\n+\t\t;;\n+\tvxworks29k)\n+\t\tbasic_machine=a29k-wrs\n+\t\tos=-vxworks\n+\t\t;;\n+\txmp)\n+\t\tbasic_machine=xmp-cray\n+\t\tos=-unicos\n+\t\t;;\n+        xps | xps100)\n+\t\tbasic_machine=xps100-honeywell\n+\t\t;;\n+\tnone)\n+\t\tbasic_machine=none-none\n+\t\tos=-none\n+\t\t;;\n+\n+# Here we handle the default manufacturer of certain CPU types.  It is in\n+# some cases the only manufacturer, in others, it is the most popular.\n+\tmips)\n+\t\tif [ x$os = x-linux-gnu ]; then\n+\t\t\tbasic_machine=mips-unknown\n+\t\telse\n+\t\t\tbasic_machine=mips-mips\n+\t\tfi\n+\t\t;;\n+\tromp)\n+\t\tbasic_machine=romp-ibm\n+\t\t;;\n+\trs6000)\n+\t\tbasic_machine=rs6000-ibm\n+\t\t;;\n+\tvax)\n+\t\tbasic_machine=vax-dec\n+\t\t;;\n+\tpdp11)\n+\t\tbasic_machine=pdp11-dec\n+\t\t;;\n+\twe32k)\n+\t\tbasic_machine=we32k-att\n+\t\t;;\n+\tsparc)\n+\t\tbasic_machine=sparc-sun\n+\t\t;;\n+        cydra)\n+\t\tbasic_machine=cydra-cydrome\n+\t\t;;\n+\torion)\n+\t\tbasic_machine=orion-highlevel\n+\t\t;;\n+\torion105)\n+\t\tbasic_machine=clipper-highlevel\n+\t\t;;\n+\t*)\n+\t\techo Invalid configuration \\`$1\\': machine \\`$basic_machine\\' not recognized 1>&2\n+\t\texit 1\n+\t\t;;\n+esac\n+\n+# Here we canonicalize certain aliases for manufacturers.\n+case $basic_machine in\n+\t*-digital*)\n+\t\tbasic_machine=`echo $basic_machine | sed 's/digital.*/dec/'`\n+\t\t;;\n+\t*-commodore*)\n+\t\tbasic_machine=`echo $basic_machine | sed 's/commodore.*/cbm/'`\n+\t\t;;\n+\t*)\n+\t\t;;\n+esac\n+\n+# Decode manufacturer-specific aliases for certain operating systems.\n+\n+if [ x\"$os\" != x\"\" ]\n+then\n+case $os in\n+        # First match some system type aliases\n+        # that might get confused with valid system types.\n+\t# -solaris* is a basic system type, with this one exception.\n+\t-solaris1 | -solaris1.*)\n+\t\tos=`echo $os | sed -e 's|solaris1|sunos4|'`\n+\t\t;;\n+\t-solaris)\n+\t\tos=-solaris2\n+\t\t;;\n+\t-svr4*)\n+\t\tos=-sysv4\n+\t\t;;\n+\t-unixware*)\n+\t\tos=-sysv4.2uw\n+\t\t;;\n+\t-gnu/linux*)\n+\t\tos=`echo $os | sed -e 's|gnu/linux|linux-gnu|'`\n+\t\t;;\n+\t# First accept the basic system types.\n+\t# The portable systems comes first.\n+\t# Each alternative MUST END IN A *, to match a version number.\n+\t# -sysv* is not here because it comes later, after sysvr4.\n+\t-gnu* | -bsd* | -mach* | -minix* | -genix* | -ultrix* | -irix* \\\n+\t      | -*vms* | -sco* | -esix* | -isc* | -aix* | -sunos | -sunos[34]*\\\n+\t      | -hpux* | -unos* | -osf* | -luna* | -dgux* | -solaris* | -sym* \\\n+\t      | -amigaos* | -amigados* | -msdos* | -newsos* | -unicos* | -aof* \\\n+\t      | -aos* \\\n+\t      | -nindy* | -vxsim* | -vxworks* | -ebmon* | -hms* | -mvs* \\\n+\t      | -clix* | -riscos* | -uniplus* | -iris* | -rtu* | -xenix* \\\n+\t      | -hiux* | -386bsd* | -netbsd* | -openbsd* | -freebsd* | -riscix* \\\n+\t      | -lynxos* | -bosx* | -nextstep* | -cxux* | -aout* | -elf* \\\n+\t      | -ptx* | -coff* | -ecoff* | -winnt* | -domain* | -vsta* \\\n+\t      | -udi* | -eabi* | -lites* | -ieee* | -go32* | -aux* \\\n+\t      | -cygwin* | -pe* | -psos* | -moss* | -proelf* | -rtems* \\\n+\t      | -mingw32* | -linux-gnu* | -uxpv* | -beos* | -rhapsody* \\\n+\t      | -openstep* | -mpeix* | -oskit*)\n+\t# Remember, each alternative MUST END IN *, to match a version number.\n+\t\t;;\n+\t-linux*)\n+\t\tos=`echo $os | sed -e 's|linux|linux-gnu|'`\n+\t\t;;\n+\t-sunos5*)\n+\t\tos=`echo $os | sed -e 's|sunos5|solaris2|'`\n+\t\t;;\n+\t-sunos6*)\n+\t\tos=`echo $os | sed -e 's|sunos6|solaris3|'`\n+\t\t;;\n+\t-osfrose*)\n+\t\tos=-osfrose\n+\t\t;;\n+\t-osf*)\n+\t\tos=-osf\n+\t\t;;\n+\t-utek*)\n+\t\tos=-bsd\n+\t\t;;\n+\t-dynix*)\n+\t\tos=-bsd\n+\t\t;;\n+\t-acis*)\n+\t\tos=-aos\n+\t\t;;\n+\t-ctix* | -uts*)\n+\t\tos=-sysv\n+\t\t;;\n+\t-ns2 )\n+\t        os=-nextstep2\n+\t\t;;\n+\t# Preserve the version number of sinix5.\n+\t-sinix5.*)\n+\t\tos=`echo $os | sed -e 's|sinix|sysv|'`\n+\t\t;;\n+\t-sinix*)\n+\t\tos=-sysv4\n+\t\t;;\n+\t-triton*)\n+\t\tos=-sysv3\n+\t\t;;\n+\t-oss*)\n+\t\tos=-sysv3\n+\t\t;;\n+\t-svr4)\n+\t\tos=-sysv4\n+\t\t;;\n+\t-svr3)\n+\t\tos=-sysv3\n+\t\t;;\n+\t-sysvr4)\n+\t\tos=-sysv4\n+\t\t;;\n+\t# This must come after -sysvr4.\n+\t-sysv*)\n+\t\t;;\n+\t-xenix)\n+\t\tos=-xenix\n+\t\t;;\n+\t-none)\n+\t\t;;\n+\t*)\n+\t\t# Get rid of the `-' at the beginning of $os.\n+\t\tos=`echo $os | sed 's/[^-]*-//'`\n+\t\techo Invalid configuration \\`$1\\': system \\`$os\\' not recognized 1>&2\n+\t\texit 1\n+\t\t;;\n+esac\n+else\n+\n+# Here we handle the default operating systems that come with various machines.\n+# The value should be what the vendor currently ships out the door with their\n+# machine or put another way, the most popular os provided with the machine.\n+\n+# Note that if you're going to try to match \"-MANUFACTURER\" here (say,\n+# \"-sun\"), then you have to tell the case statement up towards the top\n+# that MANUFACTURER isn't an operating system.  Otherwise, code above\n+# will signal an error saying that MANUFACTURER isn't an operating\n+# system, and we'll never get to this point.\n+\n+case $basic_machine in\n+\t*-acorn)\n+\t\tos=-riscix1.2\n+\t\t;;\n+\tarm*-corel)\n+\t\tos=-linux\n+\t\t;;\n+\tarm*-semi)\n+\t\tos=-aout\n+\t\t;;\n+        pdp11-*)\n+\t\tos=-none\n+\t\t;;\n+\t*-dec | vax-*)\n+\t\tos=-ultrix4.2\n+\t\t;;\n+\tm68*-apollo)\n+\t\tos=-domain\n+\t\t;;\n+\ti386-sun)\n+\t\tos=-sunos4.0.2\n+\t\t;;\n+\tm68000-sun)\n+\t\tos=-sunos3\n+\t\t# This also exists in the configure program, but was not the\n+\t\t# default.\n+\t\t# os=-sunos4\n+\t\t;;\n+\t*-tti)\t# must be before sparc entry or we get the wrong os.\n+\t\tos=-sysv3\n+\t\t;;\n+\tsparc-* | *-sun)\n+\t\tos=-sunos4.1.1\n+\t\t;;\n+\t*-be)\n+\t\tos=-beos\n+\t\t;;\n+\t*-ibm)\n+\t\tos=-aix\n+\t\t;;\n+\t*-hp)\n+\t\tos=-hpux\n+\t\t;;\n+\t*-hitachi)\n+\t\tos=-hiux\n+\t\t;;\n+\ti860-* | *-att | *-ncr | *-altos | *-motorola | *-convergent)\n+\t\tos=-sysv\n+\t\t;;\n+\t*-cbm)\n+\t\tos=-amigaos\n+\t\t;;\n+\t*-dg)\n+\t\tos=-dgux\n+\t\t;;\n+\t*-dolphin)\n+\t\tos=-sysv3\n+\t\t;;\n+\tm68k-ccur)\n+\t\tos=-rtu\n+\t\t;;\n+\tm88k-omron*)\n+\t\tos=-luna\n+\t\t;;\n+\t*-next )\n+\t\tos=-nextstep\n+\t\t;;\n+\t*-sequent)\n+\t\tos=-ptx\n+\t\t;;\n+\t*-crds)\n+\t\tos=-unos\n+\t\t;;\n+\t*-ns)\n+\t\tos=-genix\n+\t\t;;\n+\ti370-*)\n+\t\tos=-mvs\n+\t\t;;\n+\t*-next)\n+\t\tos=-nextstep3\n+\t\t;;\n+        *-gould)\n+\t\tos=-sysv\n+\t\t;;\n+        *-highlevel)\n+\t\tos=-bsd\n+\t\t;;\n+\t*-encore)\n+\t\tos=-bsd\n+\t\t;;\n+        *-sgi)\n+\t\tos=-irix\n+\t\t;;\n+        *-siemens)\n+\t\tos=-sysv4\n+\t\t;;\n+\t*-masscomp)\n+\t\tos=-rtu\n+\t\t;;\n+\tf301-fujitsu)\n+\t\tos=-uxpv\n+\t\t;;\n+\t*)\n+\t\tos=-none\n+\t\t;;\n+esac\n+fi\n+\n+# Here we handle the case where we know the os, and the CPU type, but not the\n+# manufacturer.  We pick the logical manufacturer.\n+vendor=unknown\n+case $basic_machine in\n+\t*-unknown)\n+\t\tcase $os in\n+\t\t\t-riscix*)\n+\t\t\t\tvendor=acorn\n+\t\t\t\t;;\n+\t\t\t-sunos*)\n+\t\t\t\tvendor=sun\n+\t\t\t\t;;\n+\t\t\t-aix*)\n+\t\t\t\tvendor=ibm\n+\t\t\t\t;;\n+\t\t\t-hpux*)\n+\t\t\t\tvendor=hp\n+\t\t\t\t;;\n+\t\t\t-mpeix*)\n+\t\t\t\tvendor=hp\n+\t\t\t\t;;\n+\t\t\t-mpeix*)\n+\t\t\t\tvendor=hp\n+\t\t\t\t;;\n+\t\t\t-hiux*)\n+\t\t\t\tvendor=hitachi\n+\t\t\t\t;;\n+\t\t\t-unos*)\n+\t\t\t\tvendor=crds\n+\t\t\t\t;;\n+\t\t\t-dgux*)\n+\t\t\t\tvendor=dg\n+\t\t\t\t;;\n+\t\t\t-luna*)\n+\t\t\t\tvendor=omron\n+\t\t\t\t;;\n+\t\t\t-genix*)\n+\t\t\t\tvendor=ns\n+\t\t\t\t;;\n+\t\t\t-mvs*)\n+\t\t\t\tvendor=ibm\n+\t\t\t\t;;\n+\t\t\t-ptx*)\n+\t\t\t\tvendor=sequent\n+\t\t\t\t;;\n+\t\t\t-vxsim* | -vxworks*)\n+\t\t\t\tvendor=wrs\n+\t\t\t\t;;\n+\t\t\t-aux*)\n+\t\t\t\tvendor=apple\n+\t\t\t\t;;\n+\t\tesac\n+\t\tbasic_machine=`echo $basic_machine | sed \"s/unknown/$vendor/\"`\n+\t\t;;\n+esac\n+\n+echo $basic_machine$os"}, {"sha": "df63c6993c7f55127da029950fec4468912dc9a8", "filename": "libffi/configure", "status": "added", "additions": 3498, "deletions": 0, "changes": 3498, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63e5e3e0dbb7207e95c0437499b980a304665589/libffi%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63e5e3e0dbb7207e95c0437499b980a304665589/libffi%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fconfigure?ref=63e5e3e0dbb7207e95c0437499b980a304665589"}, {"sha": "e9ec62972ef7f13728541b587faf72e08e619bef", "filename": "libffi/configure.in", "status": "added", "additions": 88, "deletions": 0, "changes": 88, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63e5e3e0dbb7207e95c0437499b980a304665589/libffi%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63e5e3e0dbb7207e95c0437499b980a304665589/libffi%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fconfigure.in?ref=63e5e3e0dbb7207e95c0437499b980a304665589", "patch": "@@ -0,0 +1,88 @@\n+dnl Process this with autoconf to create configure\n+AC_INIT(fficonfig.h.in)\n+AM_CONFIG_HEADER(fficonfig.h)\n+\n+AC_MSG_WARN(***********************************************************)\n+AC_MSG_WARN(***********************************************************)\n+AC_MSG_WARN(This is beta code.  If you're looking for a stable release)\n+AC_MSG_WARN(then use the most recent one - libffi-1.20.)\n+AC_MSG_WARN(***********************************************************)\n+AC_MSG_WARN(***********************************************************)\n+\n+AC_CANONICAL_HOST\n+\n+AM_INIT_AUTOMAKE(libffi,2.00-beta)\n+\n+AC_EXEEXT\n+AM_MAINTAINER_MODE\n+\n+AC_PROG_CC\n+AC_PROG_LIBTOOL\n+\n+TARGETDIR=\"unknown\"\n+case \"$host\" in\n+mips-sgi-irix5.* | mips-sgi-irix6.*) TARGET=MIPS; TARGETDIR=mips;;\n+i*86-pc-linux*) TARGET=X86; TARGETDIR=x86;;\n+i*86-*-beos*) TARGET=X86; TARGETDIR=x86;;\n+sparc-sun-4*) TARGET=SPARC; TARGETDIR=sparc;;\n+sparc-sun-*) TARGET=SPARC; TARGETDIR=sparc;;\n+alpha*-*-linux* | alpha*-*-osf*) TARGET=ALPHA; TARGETDIR=alpha;;\n+m68k-*-linux*) TARGET=M68K; TARGETDIR=m68k;;\n+powerpc-*-linux* | powerpc-*-sysv*) TARGET=POWERPC; TARGETDIR=powerpc;;\n+powerpc-*-beos*) TARGET=POWERPC; TARGETDIR=powerpc;;\n+arm-*-linux-*) TARGET=ARM; TARGETDIR=arm;;\n+esac\n+\n+if test $TARGETDIR = unknown; then\n+  AC_ERROR(\"libffi has not been ported to $host.\")\n+fi\n+\n+AM_CONDITIONAL(MIPS_GCC, test ${TARGET}${ac_cv_prog_gcc} = MIPSyes)\n+AM_CONDITIONAL(MIPS_SGI, test ${TARGET}${ac_cv_prog_gcc} = MIPSno)\n+AM_CONDITIONAL(SPARC, test x$TARGET = xSPARC)\n+AM_CONDITIONAL(X86, test x$TARGET = xX86)\n+AM_CONDITIONAL(ALPHA, test x$TARGET = xALPHA)\n+AM_CONDITIONAL(M68K, test x$TARGET = xM68K)\n+AM_CONDITIONAL(POWERPC, test x$TARGET = xPOWERPC)\n+AM_CONDITIONAL(ARM, test x$TARGET = xARM)\n+\n+AC_HEADER_STDC\n+AC_CHECK_FUNCS(memcpy)\n+AC_FUNC_ALLOCA\n+\n+dnl AC_CHECK_SIZEOF(char)\n+AC_CHECK_SIZEOF(short)\n+AC_CHECK_SIZEOF(int)\n+AC_CHECK_SIZEOF(long)\n+AC_CHECK_SIZEOF(long long)\n+AC_CHECK_SIZEOF(float)\n+AC_CHECK_SIZEOF(double)\n+AC_CHECK_SIZEOF(long double)\n+\n+AC_CHECK_SIZEOF(void *)\n+AC_C_BIGENDIAN\n+\n+AC_SUBST(TARGET)\n+AC_SUBST(TARGETDIR)\n+\n+AC_SUBST(SHELL)\n+\n+AC_ARG_ENABLE(debug,[  --enable-debug          Debugging mode], AC_DEFINE(FFI_DEBUG))\n+\n+AC_ARG_ENABLE(debug,[  --disable-structs       Omit code for struct support], AC_DEFINE(FFI_NO_STRUCTS))\n+\n+AC_ARG_ENABLE(debug,[  --disable-raw-api       Make the raw api unavailable], AC_DEFINE(FFI_NO_RAW_API))\n+\n+AC_ARG_ENABLE(purify-safety,\n+[  --enable-purify-safety  Purify-safe mode], AC_DEFINE(USING_PURIFY))\n+\n+AC_OUTPUT(include/Makefile include/ffi.h Makefile,, \n+test ! -d include && mkdir include\n+test ! -f include/fficonfig.h && cp fficonfig.h include/fficonfig.h\n+if cmp -s fficonfig.h include/fficonfig.h 2>/dev/null; then \n+\techo fficonfig.h unchanged\n+else\n+\techo Moving fficonfig.h to include/fficonfig.h\n+\tcp fficonfig.h include/fficonfig.h\n+fi\n+)"}, {"sha": "b9fe2248e11a78e0feada1dd7e47ecb6f24301bd", "filename": "libffi/fficonfig.h.in", "status": "added", "additions": 77, "deletions": 0, "changes": 77, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63e5e3e0dbb7207e95c0437499b980a304665589/libffi%2Ffficonfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63e5e3e0dbb7207e95c0437499b980a304665589/libffi%2Ffficonfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ffficonfig.h.in?ref=63e5e3e0dbb7207e95c0437499b980a304665589", "patch": "@@ -0,0 +1,77 @@\n+/* fficonfig.h.in.  Generated automatically from configure.in by autoheader.  */\n+\n+/* Define if using alloca.c.  */\n+#undef C_ALLOCA\n+\n+/* Define to one of _getb67, GETB67, getb67 for Cray-2 and Cray-YMP systems.\n+   This function is required for alloca.c support on those systems.  */\n+#undef CRAY_STACKSEG_END\n+\n+/* Define if you have alloca, as a function or macro.  */\n+#undef HAVE_ALLOCA\n+\n+/* Define if you have <alloca.h> and it should be used (not on Ultrix).  */\n+#undef HAVE_ALLOCA_H\n+\n+/* If using the C implementation of alloca, define if you know the\n+   direction of stack growth for your system; otherwise it will be\n+   automatically deduced at run-time.\n+ STACK_DIRECTION > 0 => grows toward higher addresses\n+ STACK_DIRECTION < 0 => grows toward lower addresses\n+ STACK_DIRECTION = 0 => direction of growth unknown\n+ */\n+#undef STACK_DIRECTION\n+\n+/* Define if you have the ANSI C header files.  */\n+#undef STDC_HEADERS\n+\n+/* Define if your processor stores words with the most significant\n+   byte first (like Motorola and SPARC, unlike Intel and VAX).  */\n+#undef WORDS_BIGENDIAN\n+\n+/* Define this if you want extra debugging */\n+#undef FFI_DEBUG\n+\n+/* Define this if you are using Purify and want to suppress \n+   spurious messages. */\n+#undef USING_PURIFY\n+\n+/* Define this is you do not want support for aggregate types.  */\n+#undef FFI_NO_STRUCTS\n+\n+/* Define this is you do not want support for the raw API.  */\n+#undef FFI_NO_RAW_API\n+\n+/* The number of bytes in a double.  */\n+#undef SIZEOF_DOUBLE\n+\n+/* The number of bytes in a float.  */\n+#undef SIZEOF_FLOAT\n+\n+/* The number of bytes in a int.  */\n+#undef SIZEOF_INT\n+\n+/* The number of bytes in a long.  */\n+#undef SIZEOF_LONG\n+\n+/* The number of bytes in a long double.  */\n+#undef SIZEOF_LONG_DOUBLE\n+\n+/* The number of bytes in a long long.  */\n+#undef SIZEOF_LONG_LONG\n+\n+/* The number of bytes in a short.  */\n+#undef SIZEOF_SHORT\n+\n+/* The number of bytes in a void *.  */\n+#undef SIZEOF_VOID_P\n+\n+/* Define if you have the memcpy function.  */\n+#undef HAVE_MEMCPY\n+\n+/* Name of package */\n+#undef PACKAGE\n+\n+/* Version number of package */\n+#undef VERSION\n+"}, {"sha": "70d2704cec1d0c5dbec58ed8b583c668cd90f256", "filename": "libffi/install-sh", "status": "added", "additions": 246, "deletions": 0, "changes": 246, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63e5e3e0dbb7207e95c0437499b980a304665589/libffi%2Finstall-sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63e5e3e0dbb7207e95c0437499b980a304665589/libffi%2Finstall-sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Finstall-sh?ref=63e5e3e0dbb7207e95c0437499b980a304665589", "patch": "@@ -0,0 +1,246 @@\n+#!/bin/sh\n+#\n+# install - install a program, script, or datafile\n+# This comes from X11R5 (mit/util/scripts/install.sh).\n+#\n+# Copyright 1991 by the Massachusetts Institute of Technology\n+#\n+# Permission to use, copy, modify, distribute, and sell this software and its\n+# documentation for any purpose is hereby granted without fee, provided that\n+# the above copyright notice appear in all copies and that both that\n+# copyright notice and this permission notice appear in supporting\n+# documentation, and that the name of M.I.T. not be used in advertising or\n+# publicity pertaining to distribution of the software without specific,\n+# written prior permission.  M.I.T. makes no representations about the\n+# suitability of this software for any purpose.  It is provided \"as is\"\n+# without express or implied warranty.\n+#\n+# This script is compatible with the BSD install script, but was written\n+# from scratch.\n+#\n+\n+\n+# set DOITPROG to echo to test this script\n+\n+# Don't use :- since 4.3BSD and earlier shells don't like it.\n+doit=\"${DOITPROG-}\"\n+\n+\n+# put in absolute paths if you don't have them in your path; or use env. vars.\n+\n+mvprog=\"${MVPROG-mv}\"\n+cpprog=\"${CPPROG-cp}\"\n+chmodprog=\"${CHMODPROG-chmod}\"\n+chownprog=\"${CHOWNPROG-chown}\"\n+chgrpprog=\"${CHGRPPROG-chgrp}\"\n+stripprog=\"${STRIPPROG-strip}\"\n+rmprog=\"${RMPROG-rm}\"\n+mkdirprog=\"${MKDIRPROG-mkdir}\"\n+\n+transformbasename=\"\"\n+transform_arg=\"\"\n+instcmd=\"$mvprog\"\n+chmodcmd=\"$chmodprog 0755\"\n+chowncmd=\"\"\n+chgrpcmd=\"\"\n+stripcmd=\"\"\n+rmcmd=\"$rmprog -f\"\n+mvcmd=\"$mvprog\"\n+src=\"\"\n+dst=\"\"\n+dir_arg=\"\"\n+\n+while [ x\"$1\" != x ]; do\n+    case $1 in\n+\t-c) instcmd=\"$cpprog\"\n+\t    shift\n+\t    continue;;\n+\n+\t-d) dir_arg=true\n+\t    shift\n+\t    continue;;\n+\n+\t-m) chmodcmd=\"$chmodprog $2\"\n+\t    shift\n+\t    shift\n+\t    continue;;\n+\n+\t-o) chowncmd=\"$chownprog $2\"\n+\t    shift\n+\t    shift\n+\t    continue;;\n+\n+\t-g) chgrpcmd=\"$chgrpprog $2\"\n+\t    shift\n+\t    shift\n+\t    continue;;\n+\n+\t-s) stripcmd=\"$stripprog\"\n+\t    shift\n+\t    continue;;\n+\n+\t-t=*) transformarg=`echo $1 | sed 's/-t=//'`\n+\t    shift\n+\t    continue;;\n+\n+\t-b=*) transformbasename=`echo $1 | sed 's/-b=//'`\n+\t    shift\n+\t    continue;;\n+\n+\t*)  if [ x\"$src\" = x ]\n+\t    then\n+\t\tsrc=$1\n+\t    else\n+\t\t# this colon is to work around a 386BSD /bin/sh bug\n+\t\t:\n+\t\tdst=$1\n+\t    fi\n+\t    shift\n+\t    continue;;\n+    esac\n+done\n+\n+if [ x\"$src\" = x ]\n+then\n+\techo \"install:\tno input file specified\"\n+\texit 1\n+else\n+\ttrue\n+fi\n+\n+if [ x\"$dir_arg\" != x ]; then\n+\tdst=$src\n+\tsrc=\"\"\n+\t\n+\tif [ -d $dst ]; then\n+\t\tinstcmd=:\n+\telse\n+\t\tinstcmd=mkdir\n+\tfi\n+else\n+\n+# Waiting for this to be detected by the \"$instcmd $src $dsttmp\" command\n+# might cause directories to be created, which would be especially bad \n+# if $src (and thus $dsttmp) contains '*'.\n+\n+\tif [ -f $src -o -d $src ]\n+\tthen\n+\t\ttrue\n+\telse\n+\t\techo \"install:  $src does not exist\"\n+\t\texit 1\n+\tfi\n+\t\n+\tif [ x\"$dst\" = x ]\n+\tthen\n+\t\techo \"install:\tno destination specified\"\n+\t\texit 1\n+\telse\n+\t\ttrue\n+\tfi\n+\n+# If destination is a directory, append the input filename; if your system\n+# does not like double slashes in filenames, you may need to add some logic\n+\n+\tif [ -d $dst ]\n+\tthen\n+\t\tdst=\"$dst\"/`basename $src`\n+\telse\n+\t\ttrue\n+\tfi\n+fi\n+\n+## this sed command emulates the dirname command\n+dstdir=`echo $dst | sed -e 's,[^/]*$,,;s,/$,,;s,^$,.,'`\n+\n+# Make sure that the destination directory exists.\n+#  this part is taken from Noah Friedman's mkinstalldirs script\n+\n+# Skip lots of stat calls in the usual case.\n+if [ ! -d \"$dstdir\" ]; then\n+defaultIFS='\t\n+'\n+IFS=\"${IFS-${defaultIFS}}\"\n+\n+oIFS=\"${IFS}\"\n+# Some sh's can't handle IFS=/ for some reason.\n+IFS='%'\n+set - `echo ${dstdir} | sed -e 's@/@%@g' -e 's@^%@/@'`\n+IFS=\"${oIFS}\"\n+\n+pathcomp=''\n+\n+while [ $# -ne 0 ] ; do\n+\tpathcomp=\"${pathcomp}${1}\"\n+\tshift\n+\n+\tif [ ! -d \"${pathcomp}\" ] ;\n+        then\n+\t\t$mkdirprog \"${pathcomp}\"\n+\telse\n+\t\ttrue\n+\tfi\n+\n+\tpathcomp=\"${pathcomp}/\"\n+done\n+fi\n+\n+if [ x\"$dir_arg\" != x ]\n+then\n+\t$doit $instcmd $dst &&\n+\n+\tif [ x\"$chowncmd\" != x ]; then $doit $chowncmd $dst; else true ; fi &&\n+\tif [ x\"$chgrpcmd\" != x ]; then $doit $chgrpcmd $dst; else true ; fi &&\n+\tif [ x\"$stripcmd\" != x ]; then $doit $stripcmd $dst; else true ; fi &&\n+\tif [ x\"$chmodcmd\" != x ]; then $doit $chmodcmd $dst; else true ; fi\n+else\n+\n+# If we're going to rename the final executable, determine the name now.\n+\n+\tif [ x\"$transformarg\" = x ] \n+\tthen\n+\t\tdstfile=`basename $dst`\n+\telse\n+\t\tdstfile=`basename $dst $transformbasename | \n+\t\t\tsed $transformarg`$transformbasename\n+\tfi\n+\n+# don't allow the sed command to completely eliminate the filename\n+\n+\tif [ x\"$dstfile\" = x ] \n+\tthen\n+\t\tdstfile=`basename $dst`\n+\telse\n+\t\ttrue\n+\tfi\n+\n+# Make a temp file name in the proper directory.\n+\n+\tdsttmp=$dstdir/#inst.$$#\n+\n+# Move or copy the file name to the temp name\n+\n+\t$doit $instcmd $src $dsttmp &&\n+\n+\ttrap \"rm -f ${dsttmp}\" 0 &&\n+\n+# and set any options; do chmod last to preserve setuid bits\n+\n+# If any of these fail, we abort the whole thing.  If we want to\n+# ignore errors from any of these, just make sure not to ignore\n+# errors from the above \"$doit $instcmd $src $dsttmp\" command.\n+\n+\tif [ x\"$chowncmd\" != x ]; then $doit $chowncmd $dsttmp; else true;fi &&\n+\tif [ x\"$chgrpcmd\" != x ]; then $doit $chgrpcmd $dsttmp; else true;fi &&\n+\tif [ x\"$stripcmd\" != x ]; then $doit $stripcmd $dsttmp; else true;fi &&\n+\tif [ x\"$chmodcmd\" != x ]; then $doit $chmodcmd $dsttmp; else true;fi &&\n+\n+# Now rename the file to the real destination.\n+\n+\t$doit $rmcmd -f $dstdir/$dstfile &&\n+\t$doit $mvcmd $dsttmp $dstdir/$dstfile \n+\n+fi &&\n+\n+\n+exit 0"}, {"sha": "ab304fd3b731521a2bc5144cc7b00d74b2423153", "filename": "libffi/ltconfig", "status": "added", "additions": 2822, "deletions": 0, "changes": 2822, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63e5e3e0dbb7207e95c0437499b980a304665589/libffi%2Fltconfig", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63e5e3e0dbb7207e95c0437499b980a304665589/libffi%2Fltconfig", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fltconfig?ref=63e5e3e0dbb7207e95c0437499b980a304665589", "patch": "@@ -0,0 +1,2822 @@\n+#! /bin/sh\n+\n+# ltconfig - Create a system-specific libtool.\n+# Copyright (C) 1996-1999 Free Software Foundation, Inc.\n+# Gordon Matzigkeit <gord@gnu.ai.mit.edu>, 1996\n+#\n+# This file is free software; you can redistribute it and/or modify it\n+# under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 2 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful, but\n+# WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+# General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program; if not, write to the Free Software\n+# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n+#\n+# As a special exception to the GNU General Public License, if you\n+# distribute this file as part of a program that contains a\n+# configuration script generated by Autoconf, you may include it under\n+# the same distribution terms that you use for the rest of that program.\n+\n+# A lot of this script is taken from autoconf-2.10.\n+\n+# Check that we are running under the correct shell.\n+SHELL=${CONFIG_SHELL-/bin/sh}\n+echo=echo\n+if test \"X$1\" = X--no-reexec; then\n+  # Discard the --no-reexec flag, and continue.\n+  shift\n+elif test \"X$1\" = X--fallback-echo; then\n+  # used as fallback echo\n+  shift\n+  cat <<EOF\n+$*\n+EOF\n+  exit 0\n+elif test \"X`($echo '\\t') 2>/dev/null`\" = 'X\\t'; then\n+  # Yippee, $echo works!\n+  :\n+else\n+  # Restart under the correct shell.\n+  exec \"$SHELL\" \"$0\" --no-reexec ${1+\"$@\"}\n+fi\n+\n+# Find the correct PATH separator.  Usually this is `:', but\n+# DJGPP uses `;' like DOS.\n+if test \"X${PATH_SEPARATOR+set}\" != \"Xset\"; then\n+  UNAME=${UNAME-`uname 2>/dev/null`}\n+  case X$UNAME in\n+    *-DOS) PATH_SEPARATOR=';' ;;\n+    *)     PATH_SEPARATOR=':' ;;\n+  esac\n+fi\n+\n+# The HP-UX ksh and POSIX shell print the target directory to stdout\n+# if CDPATH is set.\n+if test \"${CDPATH+set}\" = set; then CDPATH=; export CDPATH; fi\n+\n+if test \"X${echo_test_string+set}\" != \"Xset\"; then\n+  # find a string as large as possible, as long as the shell can cope with it\n+  for cmd in 'sed 50q \"$0\"' 'sed 20q \"$0\"' 'sed 10q \"$0\"' 'sed 2q \"$0\"' 'echo test'; do\n+    # expected sizes: less than 2Kb, 1Kb, 512 bytes, 16 bytes, ...\n+    if (echo_test_string=\"`eval $cmd`\") 2>/dev/null &&\n+       echo_test_string=\"`eval $cmd`\" &&\n+       (test \"X$echo_test_string\" = \"X$echo_test_string\") 2>/dev/null; then\n+      break\n+    fi\n+  done\n+fi\n+\n+if test \"X`($echo '\\t') 2>/dev/null`\" != 'X\\t' ||\n+   test \"X`($echo \"$echo_test_string\") 2>/dev/null`\" != X\"$echo_test_string\"; then\n+  # The Solaris, AIX, and Digital Unix default echo programs unquote\n+  # backslashes.  This makes it impossible to quote backslashes using\n+  #   echo \"$something\" | sed 's/\\\\/\\\\\\\\/g'\n+  #\n+  # So, first we look for a working echo in the user's PATH.\n+\n+  IFS=\"${IFS= \t}\"; save_ifs=\"$IFS\"; IFS=\"${IFS}${PATH_SEPARATOR}\"\n+  for dir in $PATH /usr/ucb; do\n+    if test -f $dir/echo &&\n+       test \"X`($dir/echo '\\t') 2>/dev/null`\" = 'X\\t' &&\n+       test \"X`($dir/echo \"$echo_test_string\") 2>/dev/null`\" = X\"$echo_test_string\"; then\n+      echo=\"$dir/echo\"\n+      break\n+    fi\n+  done\n+  IFS=\"$save_ifs\"\n+\n+  if test \"X$echo\" = Xecho; then\n+    # We didn't find a better echo, so look for alternatives.\n+    if test \"X`(print -r '\\t') 2>/dev/null`\" = 'X\\t' &&\n+       test \"X`(print -r \"$echo_test_string\") 2>/dev/null`\" = X\"$echo_test_string\"; then\n+      # This shell has a builtin print -r that does the trick.\n+      echo='print -r'\n+    elif test -f /bin/ksh && test \"X$CONFIG_SHELL\" != X/bin/ksh; then\n+      # If we have ksh, try running ltconfig again with it.\n+      ORIGINAL_CONFIG_SHELL=\"${CONFIG_SHELL-/bin/sh}\"\n+      export ORIGINAL_CONFIG_SHELL\n+      CONFIG_SHELL=/bin/ksh\n+      export CONFIG_SHELL\n+      exec \"$CONFIG_SHELL\" \"$0\" --no-reexec ${1+\"$@\"}\n+    else\n+      # Try using printf.\n+      echo='printf \"%s\\n\"'\n+      if test \"X`($echo '\\t') 2>/dev/null`\" = 'X\\t' &&\n+\t test \"X`($echo \"$echo_test_string\") 2>/dev/null`\" = X\"$echo_test_string\"; then\n+\t# Cool, printf works\n+\t:\n+      elif test \"X`(\"$ORIGINAL_CONFIG_SHELL\" \"$0\" --fallback-echo '\\t') 2>/dev/null`\" = 'X\\t' &&\n+\t   test \"X`(\"$ORIGINAL_CONFIG_SHELL\" \"$0\" --fallback-echo \"$echo_test_string\") 2>/dev/null`\" = X\"$echo_test_string\"; then\n+\tCONFIG_SHELL=\"$ORIGINAL_CONFIG_SHELL\"\n+\texport CONFIG_SHELL\n+\tSHELL=\"$CONFIG_SHELL\"\n+\texport SHELL\n+\techo=\"$CONFIG_SHELL $0 --fallback-echo\"\n+      elif test \"X`(\"$CONFIG_SHELL\" \"$0\" --fallback-echo '\\t') 2>/dev/null`\" = 'X\\t' &&\n+\t   test \"X`(\"$CONFIG_SHELL\" \"$0\" --fallback-echo \"$echo_test_string\") 2>/dev/null`\" = X\"$echo_test_string\"; then\n+\techo=\"$CONFIG_SHELL $0 --fallback-echo\"\n+      else\n+\t# maybe with a smaller string...\n+\tprev=:\n+\n+\tfor cmd in 'echo test' 'sed 2q \"$0\"' 'sed 10q \"$0\"' 'sed 20q \"$0\"' 'sed 50q \"$0\"'; do\n+\t  if (test \"X$echo_test_string\" = \"X`eval $cmd`\") 2>/dev/null; then\n+\t    break\n+\t  fi\n+\t  prev=\"$cmd\"\n+\tdone\n+\n+\tif test \"$prev\" != 'sed 50q \"$0\"'; then\n+\t  echo_test_string=`eval $prev`\n+\t  export echo_test_string\n+\t  exec \"${ORIGINAL_CONFIG_SHELL}\" \"$0\" ${1+\"$@\"}\n+\telse\n+\t  # Oops.  We lost completely, so just stick with echo.\n+\t  echo=echo\n+\tfi\n+      fi\n+    fi\n+  fi\n+fi\n+\n+# Sed substitution that helps us do robust quoting.  It backslashifies\n+# metacharacters that are still active within double-quoted strings.\n+Xsed='sed -e s/^X//'\n+sed_quote_subst='s/\\([\\\\\"\\\\`$\\\\\\\\]\\)/\\\\\\1/g'\n+\n+# Same as above, but do not quote variable references.\n+double_quote_subst='s/\\([\\\\\"\\\\`\\\\\\\\]\\)/\\\\\\1/g'\n+\n+# Sed substitution to delay expansion of an escaped shell variable in a\n+# double_quote_subst'ed string.\n+delay_variable_subst='s/\\\\\\\\\\\\\\\\\\\\\\$/\\\\\\\\\\\\$/g'\n+\n+# The name of this program.\n+progname=`$echo \"X$0\" | $Xsed -e 's%^.*/%%'`\n+\n+# Constants:\n+PROGRAM=ltconfig\n+PACKAGE=libtool\n+VERSION=1.2f\n+TIMESTAMP=\" (1.385 1999/03/15 17:24:54)\"\n+ac_compile='${CC-cc} -c $CFLAGS $CPPFLAGS conftest.c 1>&5'\n+ac_link='${CC-cc} -o conftest $CFLAGS $CPPFLAGS $LDFLAGS conftest.c $LIBS 1>&5'\n+rm=\"rm -f\"\n+\n+help=\"Try \\`$progname --help' for more information.\"\n+\n+# Global variables:\n+default_ofile=libtool\n+can_build_shared=yes\n+enable_shared=yes\n+# All known linkers require a `.a' archive for static linking.\n+enable_static=yes\n+enable_fast_install=yes\n+enable_dlopen=unknown\n+ltmain=\n+silent=\n+srcdir=\n+ac_config_guess=\n+ac_config_sub=\n+host=\n+nonopt=\n+ofile=\"$default_ofile\"\n+verify_host=yes\n+with_gcc=no\n+with_gnu_ld=no\n+need_locks=yes\n+ac_ext=c\n+objext=o\n+libext=a\n+cache_file=\n+\n+old_AR=\"$AR\"\n+old_CC=\"$CC\"\n+old_CFLAGS=\"$CFLAGS\"\n+old_CPPFLAGS=\"$CPPFLAGS\"\n+old_LD=\"$LD\"\n+old_LN_S=\"$LN_S\"\n+old_NM=\"$NM\"\n+old_RANLIB=\"$RANLIB\"\n+old_DLLTOOL=\"$DLLTOOL\"\n+old_AS=\"$AS\"\n+\n+# Parse the command line options.\n+args=\n+prev=\n+for option\n+do\n+  case \"$option\" in\n+  -*=*) optarg=`echo \"$option\" | sed 's/[-_a-zA-Z0-9]*=//'` ;;\n+  *) optarg= ;;\n+  esac\n+\n+  # If the previous option needs an argument, assign it.\n+  if test -n \"$prev\"; then\n+    eval \"$prev=\\$option\"\n+    prev=\n+    continue\n+  fi\n+\n+  case \"$option\" in\n+  --help) cat <<EOM\n+Usage: $progname [OPTION]... [HOST [LTMAIN]]\n+\n+Generate a system-specific libtool script.\n+\n+    --debug                enable verbose shell tracing\n+    --disable-shared       do not build shared libraries\n+    --disable-static       do not build static libraries\n+    --disable-fast-install do not optimize for fast installation\n+    --enable-dlopen        enable dlopen support\n+    --enable-dlopen-self   enable support for dlopening programs\n+    --help                 display this help and exit\n+    --no-verify            do not verify that HOST is a valid host type\n+-o, --output=FILE          specify the output file [default=$default_ofile]\n+    --quiet                same as \\`--silent'\n+    --silent               do not print informational messages\n+    --srcdir=DIR           find \\`config.guess' in DIR\n+    --version              output version information and exit\n+    --with-gcc             assume that the GNU C compiler will be used\n+    --with-gnu-ld          assume that the C compiler uses the GNU linker\n+    --disable-lock         disable file locking\n+    --cache-file=FILE      configure cache file\n+\n+LTMAIN is the \\`ltmain.sh' shell script fragment or \\`ltmain.c' program\n+that provides basic libtool functionality.\n+\n+HOST is the canonical host system name [default=guessed].\n+EOM\n+  exit 0\n+  ;;\n+\n+  --debug)\n+    echo \"$progname: enabling shell trace mode\"\n+    set -x\n+    ;;\n+\n+  --disable-shared) enable_shared=no ;;\n+\n+  --disable-static) enable_static=no ;;\n+\n+  --disable-fast-install) enable_fast_install=no ;;\n+\n+  --enable-dlopen) enable_dlopen=yes ;;\n+\n+  --quiet | --silent) silent=yes ;;\n+\n+  --srcdir) prev=srcdir ;;\n+  --srcdir=*) srcdir=\"$optarg\" ;;\n+\n+  --no-verify) verify_host=no ;;\n+\n+  --output | -o) prev=ofile ;;\n+  --output=*) ofile=\"$optarg\" ;;\n+\n+  --version) echo \"$PROGRAM (GNU $PACKAGE) $VERSION$TIMESTAMP\"; exit 0 ;;\n+\n+  --with-gcc) with_gcc=yes ;;\n+  --with-gnu-ld) with_gnu_ld=yes ;;\n+\n+  --disable-lock) need_locks=no ;;\n+\n+  --cache-file=*) cache_file=\"$optarg\" ;;\n+\n+  -*)\n+    echo \"$progname: unrecognized option \\`$option'\" 1>&2\n+    echo \"$help\" 1>&2\n+    exit 1\n+    ;;\n+\n+  *)\n+    if test -z \"$ltmain\"; then\n+      ltmain=\"$option\"\n+    elif test -z \"$host\"; then\n+# This generates an unnecessary warning for sparc-sun-solaris4.1.3_U1\n+#      if test -n \"`echo $option| sed 's/[-a-z0-9.]//g'`\"; then\n+#        echo \"$progname: warning \\`$option' is not a valid host type\" 1>&2\n+#      fi\n+      host=\"$option\"\n+    else\n+      echo \"$progname: too many arguments\" 1>&2\n+      echo \"$help\" 1>&2\n+      exit 1\n+    fi ;;\n+  esac\n+done\n+\n+if test -z \"$ltmain\"; then\n+  echo \"$progname: you must specify a LTMAIN file\" 1>&2\n+  echo \"$help\" 1>&2\n+  exit 1\n+fi\n+\n+if test ! -f \"$ltmain\"; then\n+  echo \"$progname: \\`$ltmain' does not exist\" 1>&2\n+  echo \"$help\" 1>&2\n+  exit 1\n+fi\n+\n+# Quote any args containing shell metacharacters.\n+ltconfig_args=\n+for arg\n+do\n+  case \"$arg\" in\n+  *\" \"*|*\"\t\"*|*[\\[\\]\\~\\#\\$\\^\\&\\*\\(\\)\\{\\}\\\\\\|\\;\\<\\>\\?]*)\n+  ltconfig_args=\"$ltconfig_args '$arg'\" ;;\n+  *) ltconfig_args=\"$ltconfig_args $arg\" ;;\n+  esac\n+done\n+\n+# A relevant subset of AC_INIT.\n+\n+# File descriptor usage:\n+# 0 standard input\n+# 1 file creation\n+# 2 errors and warnings\n+# 3 some systems may open it to /dev/tty\n+# 4 used on the Kubota Titan\n+# 5 compiler messages saved in config.log\n+# 6 checking for... messages and results\n+if test \"$silent\" = yes; then\n+  exec 6>/dev/null\n+else\n+  exec 6>&1\n+fi\n+exec 5>>./config.log\n+\n+# NLS nuisances.\n+# Only set LANG and LC_ALL to C if already set.\n+# These must not be set unconditionally because not all systems understand\n+# e.g. LANG=C (notably SCO).\n+if test \"${LC_ALL+set}\" = set; then LC_ALL=C; export LC_ALL; fi\n+if test \"${LANG+set}\"   = set; then LANG=C;   export LANG;   fi\n+\n+if test -n \"$cache_file\" && test -r \"$cache_file\"; then\n+  echo \"loading cache $cache_file within ltconfig\"\n+  . $cache_file\n+fi\n+\n+if (echo \"testing\\c\"; echo 1,2,3) | grep c >/dev/null; then\n+  # Stardent Vistra SVR4 grep lacks -e, says ghazi@caip.rutgers.edu.\n+  if (echo -n testing; echo 1,2,3) | sed s/-n/xn/ | grep xn >/dev/null; then\n+    ac_n= ac_c='\n+' ac_t='\t'\n+  else\n+    ac_n=-n ac_c= ac_t=\n+  fi\n+else\n+  ac_n= ac_c='\\c' ac_t=\n+fi\n+\n+if test -z \"$srcdir\"; then\n+  # Assume the source directory is the same one as the path to LTMAIN.\n+  srcdir=`$echo \"X$ltmain\" | $Xsed -e 's%/[^/]*$%%'`\n+  test \"$srcdir\" = \"$ltmain\" && srcdir=.\n+fi\n+\n+trap \"$rm conftest*; exit 1\" 1 2 15\n+if test \"$verify_host\" = yes; then\n+  # Check for config.guess and config.sub.\n+  ac_aux_dir=\n+  for ac_dir in $srcdir $srcdir/.. $srcdir/../..; do\n+    if test -f $ac_dir/config.guess; then\n+      ac_aux_dir=$ac_dir\n+      break\n+    fi\n+  done\n+  if test -z \"$ac_aux_dir\"; then\n+    echo \"$progname: cannot find config.guess in $srcdir $srcdir/.. $srcdir/../..\" 1>&2\n+    echo \"$help\" 1>&2\n+    exit 1\n+  fi\n+  ac_config_guess=$ac_aux_dir/config.guess\n+  ac_config_sub=$ac_aux_dir/config.sub\n+\n+  # Make sure we can run config.sub.\n+  if $SHELL $ac_config_sub sun4 >/dev/null 2>&1; then :\n+  else\n+    echo \"$progname: cannot run $ac_config_sub\" 1>&2\n+    echo \"$help\" 1>&2\n+    exit 1\n+  fi\n+\n+  echo $ac_n \"checking host system type\"\"... $ac_c\" 1>&6\n+\n+  host_alias=$host\n+  case \"$host_alias\" in\n+  \"\")\n+    if host_alias=`$SHELL $ac_config_guess`; then :\n+    else\n+      echo \"$progname: cannot guess host type; you must specify one\" 1>&2\n+      echo \"$help\" 1>&2\n+      exit 1\n+    fi ;;\n+  esac\n+  host=`$SHELL $ac_config_sub $host_alias`\n+  echo \"$ac_t$host\" 1>&6\n+\n+  # Make sure the host verified.\n+  test -z \"$host\" && exit 1\n+\n+elif test -z \"$host\"; then\n+  echo \"$progname: you must specify a host type if you use \\`--no-verify'\" 1>&2\n+  echo \"$help\" 1>&2\n+  exit 1\n+else\n+  host_alias=$host\n+fi\n+\n+# Transform linux* to *-*-linux-gnu*, to support old configure scripts.\n+case \"$host_os\" in\n+linux-gnu*) ;;\n+linux*) host=`echo $host | sed 's/^\\(.*-.*-linux\\)\\(.*\\)$/\\1-gnu\\2/'`\n+esac\n+\n+host_cpu=`echo $host | sed 's/^\\([^-]*\\)-\\([^-]*\\)-\\(.*\\)$/\\1/'`\n+host_vendor=`echo $host | sed 's/^\\([^-]*\\)-\\([^-]*\\)-\\(.*\\)$/\\2/'`\n+host_os=`echo $host | sed 's/^\\([^-]*\\)-\\([^-]*\\)-\\(.*\\)$/\\3/'`\n+\n+case \"$host_os\" in\n+aix3*)\n+  # AIX sometimes has problems with the GCC collect2 program.  For some\n+  # reason, if we set the COLLECT_NAMES environment variable, the problems\n+  # vanish in a puff of smoke.\n+  if test \"${COLLECT_NAMES+set}\" != set; then\n+    COLLECT_NAMES=\n+    export COLLECT_NAMES\n+  fi\n+  ;;\n+esac\n+\n+# Determine commands to create old-style static archives.\n+old_archive_cmds='$AR cru $oldlib$oldobjs'\n+old_postinstall_cmds='chmod 644 $oldlib'\n+old_postuninstall_cmds=\n+\n+# Set a sane default for `AR'.\n+test -z \"$AR\" && AR=ar\n+\n+# If RANLIB is not set, then run the test.\n+if test \"${RANLIB+set}\" != \"set\"; then\n+  result=no\n+\n+  echo $ac_n \"checking for ranlib... $ac_c\" 1>&6\n+  IFS=\"${IFS= \t}\"; save_ifs=\"$IFS\"; IFS=\"${IFS}${PATH_SEPARATOR}\"\n+  for dir in $PATH; do\n+    test -z \"$dir\" && dir=.\n+    if test -f $dir/ranlib; then\n+      RANLIB=\"ranlib\"\n+      result=\"ranlib\"\n+      break\n+    fi\n+  done\n+  IFS=\"$save_ifs\"\n+\n+  echo \"$ac_t$result\" 1>&6\n+fi\n+\n+if test -n \"$RANLIB\"; then\n+  old_archive_cmds=\"$old_archive_cmds~\\$RANLIB \\$oldlib\"\n+  old_postinstall_cmds=\"\\$RANLIB \\$oldlib~$old_postinstall_cmds\"\n+fi\n+\n+# Set sane defaults for `DLLTOOL' and `AS', used on cygwin.\n+test -z \"$DLLTOOL\" && DLLTOOL=dlltool\n+test -z \"$AS\" && AS=as\n+\n+# Check to see if we are using GCC.\n+if test \"$with_gcc\" != yes || test -z \"$CC\"; then\n+  # If CC is not set, then try to find GCC or a usable CC.\n+  if test -z \"$CC\"; then\n+    echo $ac_n \"checking for gcc... $ac_c\" 1>&6\n+    IFS=\"${IFS= \t}\"; save_ifs=\"$IFS\"; IFS=\"${IFS}${PATH_SEPARATOR}\"\n+    for dir in $PATH; do\n+      IFS=\"$save_ifs\"\n+      test -z \"$dir\" && dir=.\n+      if test -f $dir/gcc; then\n+\tCC=\"gcc\"\n+\tbreak\n+      fi\n+    done\n+    IFS=\"$save_ifs\"\n+\n+    if test -n \"$CC\"; then\n+      echo \"$ac_t$CC\" 1>&6\n+    else\n+      echo \"$ac_t\"no 1>&6\n+    fi\n+  fi\n+\n+  # Not \"gcc\", so try \"cc\", rejecting \"/usr/ucb/cc\".\n+  if test -z \"$CC\"; then\n+    echo $ac_n \"checking for cc... $ac_c\" 1>&6\n+    IFS=\"${IFS= \t}\"; save_ifs=\"$IFS\"; IFS=\"${IFS}${PATH_SEPARATOR}\"\n+    cc_rejected=no\n+    for dir in $PATH; do\n+      test -z \"$dir\" && dir=.\n+      if test -f $dir/cc; then\n+\tif test \"$dir/cc\" = \"/usr/ucb/cc\"; then\n+\t  cc_rejected=yes\n+\t  continue\n+\tfi\n+\tCC=\"cc\"\n+\tbreak\n+      fi\n+    done\n+    IFS=\"$save_ifs\"\n+    if test $cc_rejected = yes; then\n+      # We found a bogon in the path, so make sure we never use it.\n+      set dummy $CC\n+      shift\n+      if test $# -gt 0; then\n+\t# We chose a different compiler from the bogus one.\n+\t# However, it has the same name, so the bogon will be chosen\n+\t# first if we set CC to just the name; use the full file name.\n+\tshift\n+\tset dummy \"$dir/cc\" \"$@\"\n+\tshift\n+\tCC=\"$@\"\n+      fi\n+    fi\n+\n+    if test -n \"$CC\"; then\n+      echo \"$ac_t$CC\" 1>&6\n+    else\n+      echo \"$ac_t\"no 1>&6\n+    fi\n+\n+    if test -z \"$CC\"; then\n+      echo \"$progname: error: no acceptable cc found in \\$PATH\" 1>&2\n+      exit 1\n+    fi\n+  fi\n+\n+  # Now see if the compiler is really GCC.\n+  with_gcc=no\n+  echo $ac_n \"checking whether we are using GNU C... $ac_c\" 1>&6\n+  echo \"$progname:564: checking whether we are using GNU C\" >&5\n+\n+  $rm conftest.c\n+  cat > conftest.c <<EOF\n+#ifdef __GNUC__\n+  yes;\n+#endif\n+EOF\n+  if { ac_try='${CC-cc} -E conftest.c'; { (eval echo $progname:572: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }; } | egrep yes >/dev/null 2>&1; then\n+    with_gcc=yes\n+  fi\n+  $rm conftest.c\n+  echo \"$ac_t$with_gcc\" 1>&6\n+fi\n+\n+# Allow CC to be a program name with arguments.\n+set dummy $CC\n+compiler=\"$2\"\n+\n+echo $ac_n \"checking for object suffix... $ac_c\" 1>&6\n+$rm conftest*\n+echo 'int i = 1;' > conftest.c\n+echo \"$progname:586: checking for object suffix\" >& 5\n+if { (eval echo $progname:587: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>conftest.err; }; then\n+  # Append any warnings to the config.log.\n+  cat conftest.err 1>&5\n+\n+  for ac_file in conftest.*; do\n+    case $ac_file in\n+    *.c) ;;\n+    *) objext=`echo $ac_file | sed -e s/conftest.//` ;;\n+    esac\n+  done\n+else\n+  cat conftest.err 1>&5\n+  echo \"$progname: failed program was:\" >&5\n+  cat conftest.c >&5\n+fi\n+$rm conftest*\n+echo \"$ac_t$objext\" 1>&6\n+\n+echo $ac_n \"checking for $compiler option to produce PIC... $ac_c\" 1>&6\n+pic_flag=\n+special_shlib_compile_flags=\n+wl=\n+link_static_flag=\n+no_builtin_flag=\n+\n+if test \"$with_gcc\" = yes; then\n+  wl='-Wl,'\n+  link_static_flag='-static'\n+\n+  case \"$host_os\" in\n+  beos* | irix5* | irix6* | osf3* | osf4*)\n+    # PIC is the default for these OSes.\n+    ;;\n+  aix*)\n+    # Below there is a dirty hack to force normal static linking with -ldl\n+    # The problem is because libdl dynamically linked with both libc and\n+    # libC (AIX C++ library), which obviously doesn't included in libraries\n+    # list by gcc. This cause undefined symbols with -static flags.\n+    # This hack allows C programs to be linked with \"-static -ldl\", but\n+    # we not sure about C++ programs.\n+    link_static_flag=\"$link_static_flag ${wl}-lC\"\n+    ;;\n+  cygwin* | mingw* | os2*)\n+    # We can build DLLs from non-PIC.\n+    ;;\n+  amigaos*)\n+    # FIXME: we need at least 68020 code to build shared libraries, but\n+    # adding the `-m68020' flag to GCC prevents building anything better,\n+    # like `-m68040'.\n+    pic_flag='-m68020 -resident32 -malways-restore-a4'\n+    ;;\n+  *)\n+    pic_flag='-fPIC'\n+    ;;\n+  esac\n+else\n+  # PORTME Check for PIC flags for the system compiler.\n+  case \"$host_os\" in\n+  aix3* | aix4*)\n+    # All AIX code is PIC.\n+    link_static_flag='-bnso -bI:/lib/syscalls.exp'\n+    ;;\n+\n+  hpux9* | hpux10* | hpux11*)\n+    # Is there a better link_static_flag that works with the bundled CC?\n+    wl='-Wl,'\n+    link_static_flag=\"${wl}-a ${wl}archive\"\n+    pic_flag='+Z'\n+    ;;\n+\n+  irix5* | irix6*)\n+    wl='-Wl,'\n+    link_static_flag='-non_shared'\n+    # PIC (with -KPIC) is the default.\n+    ;;\n+\n+  cygwin* | mingw* | os2*)\n+    # We can build DLLs from non-PIC.\n+    ;;\n+\n+  osf3* | osf4*)\n+    # All OSF/1 code is PIC.\n+    wl='-Wl,'\n+    link_static_flag='-non_shared'\n+    ;;\n+\n+  sco3.2v5*)\n+    pic_flag='-Kpic'\n+    link_static_flag='-dn'\n+    special_shlib_compile_flags='-belf'\n+    ;;\n+\n+  solaris*)\n+    pic_flag='-KPIC'\n+    link_static_flag='-Bstatic'\n+    wl='-Wl,'\n+    ;;\n+\n+  sunos4*)\n+    pic_flag='-PIC'\n+    link_static_flag='-Bstatic'\n+    wl='-Qoption ld '\n+    ;;\n+\n+  sysv4.2uw2* | sysv4.3* | sysv5*)\n+    pic_flag='-KPIC'\n+    link_static_flag='-Bstatic'\n+    wl='-Wl,'\n+    ;;\n+\n+  uts4*)\n+    pic_flag='-pic'\n+    link_static_flag='-Bstatic'\n+    ;;\n+\n+  *)\n+    can_build_shared=no\n+    ;;\n+  esac\n+fi\n+\n+if test -n \"$pic_flag\"; then\n+  echo \"$ac_t$pic_flag\" 1>&6\n+\n+  # Check to make sure the pic_flag actually works.\n+  echo $ac_n \"checking if $compiler PIC flag $pic_flag works... $ac_c\" 1>&6\n+  $rm conftest*\n+  echo \"int some_variable = 0;\" > conftest.c\n+  save_CFLAGS=\"$CFLAGS\"\n+  CFLAGS=\"$CFLAGS $pic_flag -DPIC\"\n+  echo \"$progname:717: checking if $compiler PIC flag $pic_flag works\" >&5\n+  if { (eval echo $progname:718: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>conftest.err; } && test -s conftest.$objext; then\n+    # Append any warnings to the config.log.\n+    cat conftest.err 1>&5\n+    \n+    case \"$host_os\" in\n+    hpux9* | hpux10* | hpux11*)\n+      # On HP-UX, both CC and GCC only warn that PIC is supported... then they\n+      # create non-PIC objects.  So, if there were any warnings, we assume that\n+      # PIC is not supported.\n+      if test -s conftest.err; then\n+\techo \"$ac_t\"no 1>&6\n+\tcan_build_shared=no\n+\tpic_flag=\n+      else\n+\techo \"$ac_t\"yes 1>&6\n+\tpic_flag=\" $pic_flag\"\n+      fi\n+      ;;\n+    *)\n+      echo \"$ac_t\"yes 1>&6\n+      pic_flag=\" $pic_flag\"\n+      ;;\n+    esac\n+  else\n+    # Append any errors to the config.log.\n+    cat conftest.err 1>&5\n+    can_build_shared=no\n+    pic_flag=\n+    echo \"$ac_t\"no 1>&6\n+  fi\n+  CFLAGS=\"$save_CFLAGS\"\n+  $rm conftest*\n+else\n+  echo \"$ac_t\"none 1>&6\n+fi\n+\n+# Check to see if options -o and -c are simultaneously supported by compiler\n+echo $ac_n \"checking if $compiler supports -c -o file.o... $ac_c\" 1>&6\n+$rm conftest*\n+echo \"int some_variable = 0;\" > conftest.c\n+save_CFLAGS=\"$CFLAGS\"\n+CFLAGS=\"$CFLAGS -c -o conftest2.o\"\n+echo \"$progname:760: checking if $compiler supports -c -o file.o\" >&5\n+if { (eval echo $progname:761: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>conftest.err; } && test -s conftest2.o; then\n+\n+  # The compiler can only warn and ignore the option if not recognized\n+  # So say no if there are warnings\n+    if test -s conftest.err; then\n+      echo \"$ac_t\"no 1>&6\n+      compiler_c_o=no\n+    else\n+      echo \"$ac_t\"yes 1>&6\n+      compiler_c_o=yes\n+    fi\n+else\n+  # Append any errors to the config.log.\n+  cat conftest.err 1>&5\n+  compiler_c_o=no\n+  echo \"$ac_t\"no 1>&6\n+fi\n+CFLAGS=\"$save_CFLAGS\"\n+$rm conftest*\n+\n+if test x\"$compiler_c_o\" = x\"yes\"; then\n+  # Check to see if we can write to a .lo\n+  echo $ac_n \"checking if $compiler supports -c -o file.lo... $ac_c\" 1>&6\n+  $rm conftest*\n+  echo \"int some_variable = 0;\" > conftest.c\n+  save_CFLAGS=\"$CFLAGS\"\n+  CFLAGS=\"$CFLAGS -c -o conftest.lo\"\n+  echo \"$progname:788: checking if $compiler supports -c -o file.lo\" >&5\n+if { (eval echo $progname:789: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>conftest.err; } && test -s conftest.lo; then\n+\n+    # The compiler can only warn and ignore the option if not recognized\n+    # So say no if there are warnings\n+      if test -s conftest.err; then\n+\techo \"$ac_t\"no 1>&6\n+\tcompiler_o_lo=no\n+      else\n+\techo \"$ac_t\"yes 1>&6\n+\tcompiler_o_lo=yes\n+      fi\n+  else\n+    # Append any errors to the config.log.\n+    cat conftest.err 1>&5\n+    compiler_o_lo=no\n+    echo \"$ac_t\"no 1>&6\n+  fi\n+  CFLAGS=\"$save_CFLAGS\"\n+  $rm conftest*\n+else\n+  compiler_o_lo=no\n+fi\n+\n+# Check to see if we can do hard links to lock some files if needed\n+hard_links=\"nottested\"\n+if test \"$compiler_c_o\" = no && test \"$need_locks\" != no; then\n+  # do not overwrite the value of need_locks provided by the user\n+  echo $ac_n \"checking if we can lock with hard links... $ac_c\" 1>&6\n+  hard_links=yes\n+  $rm conftest*\n+  ln conftest.a conftest.b 2>/dev/null && hard_links=no\n+  touch conftest.a\n+  ln conftest.a conftest.b 2>&5 || hard_links=no\n+  ln conftest.a conftest.b 2>/dev/null && hard_links=no\n+  echo \"$ac_t$hard_links\" 1>&6\n+  $rm conftest*\n+  if test \"$hard_links\" = no; then\n+    echo \"*** WARNING: \\`$CC' does not support \\`-c -o', so \\`make -j' may be unsafe\" >&2\n+    need_locks=warn\n+  fi\n+else\n+  need_locks=no\n+fi\n+\n+if test \"$with_gcc\" = yes; then\n+  # Check to see if options -fno-rtti -fno-exceptions are supported by compiler\n+  echo $ac_n \"checking if $compiler supports -fno-rtti -fno-exceptions ... $ac_c\" 1>&6\n+  $rm conftest*\n+  echo \"int some_variable = 0;\" > conftest.c\n+  save_CFLAGS=\"$CFLAGS\"\n+  CFLAGS=\"$CFLAGS -fno-rtti -fno-exceptions -c conftest.c\"\n+  echo \"$progname:840: checking if $compiler supports -fno-rtti -fno-exceptions\" >&5\n+  if { (eval echo $progname:841: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>conftest.err; } && test -s conftest.o; then\n+\n+    # The compiler can only warn and ignore the option if not recognized\n+    # So say no if there are warnings\n+      if test -s conftest.err; then\n+\techo \"$ac_t\"no 1>&6\n+\tcompiler_rtti_exceptions=no\n+      else\n+\techo \"$ac_t\"yes 1>&6\n+\tcompiler_rtti_exceptions=yes\n+      fi\n+  else\n+    # Append any errors to the config.log.\n+    cat conftest.err 1>&5\n+    compiler_rtti_exceptions=no\n+    echo \"$ac_t\"no 1>&6\n+  fi\n+  CFLAGS=\"$save_CFLAGS\"\n+  $rm conftest*\n+\n+  if test \"$compiler_rtti_exceptions\" = \"yes\"; then\n+    no_builtin_flag=' -fno-builtin -fno-rtti -fno-exceptions'\n+  else\n+    no_builtin_flag=' -fno-builtin'\n+  fi\n+  \n+fi\n+\n+# Check for any special shared library compilation flags.\n+if test -n \"$special_shlib_compile_flags\"; then\n+  echo \"$progname: warning: \\`$CC' requires \\`$special_shlib_compile_flags' to build shared libraries\" 1>&2\n+  if echo \"$old_CC $old_CFLAGS \" | egrep -e \"[ \t]$special_shlib_compile_flags[ \t]\" >/dev/null; then :\n+  else\n+    echo \"$progname: add \\`$special_shlib_compile_flags' to the CC or CFLAGS env variable and reconfigure\" 1>&2\n+    can_build_shared=no\n+  fi\n+fi\n+\n+echo $ac_n \"checking if $compiler static flag $link_static_flag works... $ac_c\" 1>&6\n+$rm conftest*\n+echo 'main(){return(0);}' > conftest.c\n+save_LDFLAGS=\"$LDFLAGS\"\n+LDFLAGS=\"$LDFLAGS $link_static_flag\"\n+echo \"$progname:884: checking if $compiler static flag $link_static_flag works\" >&5\n+if { (eval echo $progname:885: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest; then\n+  echo \"$ac_t$link_static_flag\" 1>&6\n+else\n+  echo \"$ac_t\"none 1>&6\n+  link_static_flag=\n+fi\n+LDFLAGS=\"$save_LDFLAGS\"\n+$rm conftest*\n+\n+if test -z \"$LN_S\"; then\n+  # Check to see if we can use ln -s, or we need hard links.\n+  echo $ac_n \"checking whether ln -s works... $ac_c\" 1>&6\n+  $rm conftestdata\n+  if ln -s X conftestdata 2>/dev/null; then\n+    $rm conftestdata\n+    LN_S=\"ln -s\"\n+  else\n+    LN_S=ln\n+  fi\n+  if test \"$LN_S\" = \"ln -s\"; then\n+    echo \"$ac_t\"yes 1>&6\n+  else\n+    echo \"$ac_t\"no 1>&6\n+  fi\n+fi\n+\n+# Make sure LD is an absolute path.\n+if test -z \"$LD\"; then\n+  ac_prog=ld\n+  if test \"$with_gcc\" = yes; then\n+    # Check if gcc -print-prog-name=ld gives a path.\n+    echo $ac_n \"checking for ld used by GCC... $ac_c\" 1>&6\n+    echo \"$progname:917: checking for ld used by GCC\" >&5\n+    ac_prog=`($CC -print-prog-name=ld) 2>&5`\n+    case \"$ac_prog\" in\n+    # Accept absolute paths.\n+    /* | [A-Za-z]:[\\\\/]*)\n+      re_direlt='/[^/][^/]*/\\.\\./'\n+      # Canonicalize the path of ld\n+      ac_prog=`echo $ac_prog| sed 's%\\\\\\\\%/%g'`\n+      while echo $ac_prog | grep \"$re_direlt\" > /dev/null 2>&1; do\n+\tac_prog=`echo $ac_prog| sed \"s%$re_direlt%/%\"`\n+      done\n+      test -z \"$LD\" && LD=\"$ac_prog\"\n+      ;;\n+    \"\")\n+      # If it fails, then pretend we are not using GCC.\n+      ac_prog=ld\n+      ;;\n+    *)\n+      # If it is relative, then search for the first ld in PATH.\n+      with_gnu_ld=unknown\n+      ;;\n+    esac\n+  elif test \"$with_gnu_ld\" = yes; then\n+    echo $ac_n \"checking for GNU ld... $ac_c\" 1>&6\n+    echo \"$progname:941: checking for GNU ld\" >&5\n+  else\n+    echo $ac_n \"checking for non-GNU ld\"\"... $ac_c\" 1>&6\n+    echo \"$progname:944: checking for non-GNU ld\" >&5\n+  fi\n+\n+  if test -z \"$LD\"; then\n+    IFS=\"${IFS= \t}\"; ac_save_ifs=\"$IFS\"; IFS=\"${IFS}${PATH_SEPARATOR}\"\n+    for ac_dir in $PATH; do\n+      test -z \"$ac_dir\" && ac_dir=.\n+      if test -f \"$ac_dir/$ac_prog\"; then\n+\tLD=\"$ac_dir/$ac_prog\"\n+\t# Check to see if the program is GNU ld.  I'd rather use --version,\n+\t# but apparently some GNU ld's only accept -v.\n+\t# Break only if it was the GNU/non-GNU ld that we prefer.\n+\tif \"$LD\" -v 2>&1 < /dev/null | egrep '(GNU|with BFD)' > /dev/null; then\n+\t  test \"$with_gnu_ld\" != no && break\n+\telse\n+\t  test \"$with_gnu_ld\" != yes && break\n+\tfi\n+      fi\n+    done\n+    IFS=\"$ac_save_ifs\"\n+  fi\n+\n+  if test -n \"$LD\"; then\n+    echo \"$ac_t$LD\" 1>&6\n+  else\n+    echo \"$ac_t\"no 1>&6\n+  fi\n+\n+  if test -z \"$LD\"; then\n+    echo \"$progname: error: no acceptable ld found in \\$PATH\" 1>&2\n+    exit 1\n+  fi\n+fi\n+\n+# Check to see if it really is or is not GNU ld.\n+echo $ac_n \"checking if the linker ($LD) is GNU ld... $ac_c\" 1>&6\n+# I'd rather use --version here, but apparently some GNU ld's only accept -v.\n+if $LD -v 2>&1 </dev/null | egrep '(GNU|with BFD)' 1>&5; then\n+  with_gnu_ld=yes\n+else\n+  with_gnu_ld=no\n+fi\n+echo \"$ac_t$with_gnu_ld\" 1>&6\n+\n+# See if the linker supports building shared libraries.\n+echo $ac_n \"checking whether the linker ($LD) supports shared libraries... $ac_c\" 1>&6\n+\n+allow_undefined_flag=\n+no_undefined_flag=\n+need_lib_prefix=unknown\n+need_version=unknown\n+# when you set need_version to no, make sure it does not cause -set_version\n+# flags to be left without arguments\n+archive_cmds=\n+archive_expsym_cmds=\n+old_archive_from_new_cmds=\n+export_dynamic_flag_spec=\n+whole_archive_flag_spec=\n+thread_safe_flag_spec=\n+hardcode_libdir_flag_spec=\n+hardcode_libdir_separator=\n+hardcode_direct=no\n+hardcode_minus_L=no\n+hardcode_shlibpath_var=unsupported\n+runpath_var=\n+always_export_symbols=no\n+export_symbols_cmds='$NM $libobjs | $global_symbol_pipe | sed '\\''s/.* //'\\'' | sort | uniq > $export_symbols'\n+# include_expsyms should be a list of space-separated symbols to be *always*\n+# included in the symbol list\n+include_expsyms=\n+# exclude_expsyms can be an egrep regular expression of symbols to exclude\n+# it will be wrapped by ` (' and `)$', so one must not match beginning or\n+# end of line.  Example: `a|bc|.*d.*' will exclude the symbols `a' and `bc',\n+# as well as any symbol that contains `d'.\n+exclude_expsyms=\n+\n+case \"$host_os\" in\n+cygwin* | mingw*)\n+  # FIXME: the MSVC++ port hasn't been tested in a loooong time\n+  # When not using gcc, we currently assume that we are using\n+  # Microsoft Visual C++.\n+  if test \"$with_gcc\" != yes; then\n+    with_gnu_ld=no\n+  fi\n+  ;;\n+\n+freebsd2* | sunos4*)\n+  exclude_expsyms=\"_GLOBAL_OFFSET_TABLE_\"\n+  ;;\n+\n+esac\n+\n+ld_shlibs=yes\n+if test \"$with_gnu_ld\" = yes; then\n+  # If archive_cmds runs LD, not CC, wlarc should be empty\n+  wlarc='${wl}'\n+\n+  # See if GNU ld supports shared libraries.\n+  case \"$host_os\" in\n+  aix3* | aix4*)\n+    # On AIX, the GNU linker is very broken\n+    ld_shlibs=no\n+    cat <<EOF 1>&2\n+\n+*** Warning: the GNU linker, at least up to release 2.9.1, is reported\n+*** to be unable to reliably create shared libraries on AIX.\n+*** Therefore, libtool is disabling shared libraries support.  If you\n+*** really care for shared libraries, you may want to modify your PATH\n+*** so that a non-GNU linker is found, and then restart.\n+\n+EOF\n+    ;;\n+\n+  amigaos*)\n+    archive_cmds='$rm $objdir/a2ixlibrary.data~$echo \"#define NAME $libname\" > $objdir/a2ixlibrary.data~$echo \"#define LIBRARY_ID 1\" >> $objdir/a2ixlibrary.data~$echo \"#define VERSION $major\" >> $objdir/a2ixlibrary.data~$echo \"#define REVISION $revision\" >> $objdir/a2ixlibrary.data~$AR cru $lib $libobjs~$RANLIB $lib~(cd $objdir && a2ixlibrary -32)'\n+    hardcode_libdir_flag_spec='-L$libdir'\n+    hardcode_minus_L=yes\n+    ;;\n+\n+  sunos4*)\n+    archive_cmds='$LD -assert pure-text -Bstatic -o $lib $libobjs $deplibs $linkopts'\n+    wlarc=\n+    hardcode_direct=yes\n+    hardcode_minus_L=yes\n+    hardcode_shlibpath_var=no\n+    ;;\n+\n+  beos*)\n+    if $LD --help 2>&1 | egrep ': supported targets:.* elf' > /dev/null; then\n+      archive_cmds='$CC -nostart $libobjs $deplibs $linkopts ${wl}-soname $wl$soname -o $lib'\n+    else\n+      ld_shlibs=no\n+    fi\n+    ;;\n+\n+  cygwin* | mingw*)\n+    # hardcode_libdir_flag_spec is actually meaningless, as there is\n+    # no search path for DLLs.\n+    hardcode_libdir_flag_spec='-L$libdir'\n+    allow_undefined_flag=unsupported\n+    always_export_symbols=yes\n+\n+    # Extract the symbol export list from an `--export-all' def file,\n+    # then regenerate the def file from the symbol export list, so that\n+    # the compiled dll only exports the symbol export list.\n+    export_symbols_cmds='rm -f $objdir/$soname-ltdll.c~\n+      sed -e \"/^# \\/\\* ltdll.c starts here \\*\\//,/^# \\/\\* ltdll.c ends here \\*\\// { s/^# //; p; }\" -e d < $0 > $objdir/$soname-ltdll.c~\n+      (cd $objdir && $CC -c $soname-ltdll.c)~\n+      $DLLTOOL --export-all --exclude-symbols DllMain@12,_cygwin_dll_entry@12,_cygwin_noncygwin_dll_entry@12 --output-def $objdir/$soname-def  $objdir/$soname-ltdll.$objext $libobjs~\n+      sed -e \"1,/EXPORTS/d\" -e \"s/ @ [0-9]* ; *//\" < $objdir/$soname-def > $export_symbols'\n+\n+    archive_expsym_cmds='echo EXPORTS > $objdir/$soname-def~\n+      _lt_hint=1;\n+      for symbol in `cat $export_symbols`; do\n+        echo \"\t\\$symbol @ \\$_lt_hint ; \" >> $objdir/$soname-def;\n+\t_lt_hint=`expr 1 + \\$_lt_hint`;\n+      done~\n+      $CC -Wl,--base-file,$objdir/$soname-base -Wl,--dll -nostartfiles -Wl,-e,__cygwin_dll_entry@12 -o $lib $objdir/$soname-ltdll.$objext $libobjs $deplibs $linkopts~\n+      $DLLTOOL --as=$AS --dllname $soname --exclude-symbols DllMain@12,_cygwin_dll_entry@12,_cygwin_noncygwin_dll_entry@12 --def $objdir/$soname-def --base-file $objdir/$soname-base --output-exp $objdir/$soname-exp~\n+      $CC -Wl,--base-file,$objdir/$soname-base $objdir/$soname-exp -Wl,--dll -nostartfiles -Wl,-e,__cygwin_dll_entry@12 -o $lib $objdir/$soname-ltdll.$objext $libobjs $deplibs $linkopts~\n+      $DLLTOOL --as=$AS --dllname $soname --exclude-symbols DllMain@12,_cygwin_dll_entry@12,_cygwin_noncygwin_dll_entry@12 --def $objdir/$soname-def --base-file $objdir/$soname-base --output-exp $objdir/$soname-exp~\n+      $CC $objdir/$soname-exp -Wl,--dll -nostartfiles -Wl,-e,__cygwin_dll_entry@12 -o $lib $objdir/$soname-ltdll.$objext $libobjs $deplibs $linkopts'\n+\n+      old_archive_from_new_cmds='$DLLTOOL --as=$AS --dllname $soname --def $objdir/$soname-def --output-lib $objdir/$libname.a'\n+    ;;\n+\n+  *)\n+    if $LD --help 2>&1 | egrep ': supported targets:.* elf' > /dev/null; then\n+      archive_cmds='$CC -shared $libobjs $deplibs $linkopts ${wl}-soname $wl$soname -o $lib'\n+      archive_expsym_cmds='$CC -shared $libobjs $deplibs $linkopts ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'\n+    else\n+      ld_shlibs=no\n+    fi\n+    ;;\n+  esac\n+\n+  if test \"$ld_shlibs\" = yes; then\n+    runpath_var=LD_RUN_PATH\n+    hardcode_libdir_flag_spec='${wl}--rpath ${wl}$libdir'\n+    export_dynamic_flag_spec='${wl}--export-dynamic'\n+    whole_archive_flag_spec=\"$wlarc\"'--whole-archive$convenience '\"$wlarc\"'--no-whole-archive'\n+  fi\n+else\n+  # PORTME fill in a description of your system's linker (not GNU ld)\n+  case \"$host_os\" in\n+  aix3*)\n+    allow_undefined_flag=unsupported\n+    always_export_symbols=yes\n+    archive_expsym_cmds='$LD -o $objdir/$soname $libobjs $deplibs $linkopts -bE:$export_symbols -T512 -H512 -bM:SRE~$AR cru $lib $objdir/$soname'\n+    # Note: this linker hardcodes the directories in LIBPATH if there\n+    # are no directories specified by -L.\n+    hardcode_minus_L=yes\n+    if test \"$with_gcc\" = yes && test -z \"$link_static_flag\"; then\n+      # Neither direct hardcoding nor static linking is supported with a\n+      # broken collect2.\n+      hardcode_direct=unsupported\n+    fi\n+    ;;\n+\n+  aix4*)\n+    allow_undefined_flag=\n+    if test \"$with_gcc\" = yes; then\n+      if strings `${CC} -print-prog-name=collect2` | \\\n+\t grep resolve_lib_name >/dev/null\n+      then\n+\t# We have reworked collect2\n+\thardcode_direct=yes\n+      else\n+\t# We have old collect2\n+\thardcode_direct=unsupported\n+      fi\n+      archive_cmds='$CC -shared ${wl}-bnoentry -o $objdir/$soname $libobjs $deplibs $linkopts'\n+    else\n+      always_export_symbols=yes\n+      archive_expsym_cmds='$CC -o $objdir/$soname $libobjs $deplibs $linkopts ${wl}-bE:$export_symbols ${wl}-bM:SRE ${wl}-bnoentry'\n+      hardcode_direct=yes\n+    fi\n+    hardcode_minus_L=yes\n+    # Though LIBPATH variable hardcodes shlibpath into executable,\n+    # it doesn't affect searching for -l* libraries; this confuses\n+    # tests in mdemo.\n+    hardcode_shlibpath_var=unsupported\n+    hardcode_libdir_flag_spec='-L$libdir'\n+   ;;\n+\n+  amigaos*)\n+    archive_cmds='$rm $objdir/a2ixlibrary.data~$echo \"#define NAME $libname\" > $objdir/a2ixlibrary.data~$echo \"#define LIBRARY_ID 1\" >> $objdir/a2ixlibrary.data~$echo \"#define VERSION $major\" >> $objdir/a2ixlibrary.data~$echo \"#define REVISION $revision\" >> $objdir/a2ixlibrary.data~$AR cru $lib $libobjs~$RANLIB $lib~(cd $objdir && a2ixlibrary -32)'\n+    hardcode_libdir_flag_spec='-L$libdir'\n+    hardcode_minus_L=yes\n+    ;;\n+\n+  cygwin* | mingw*)\n+    # When not using gcc, we currently assume that we are using\n+    # Microsoft Visual C++.\n+    # hardcode_libdir_flag_spec is actually meaningless, as there is\n+    # no search path for DLLs.\n+    hardcode_libdir_flag_spec=' '\n+    allow_undefined_flag=unsupported\n+    # Tell ltmain to make .lib files, not .a files.\n+    libext=lib\n+    # FIXME: Setting linknames here is a bad hack.\n+    archive_cmds='$CC -o $lib $libobjs $linkopts `echo \"$deplibs\" | sed -e '\\''s/ -lc$//'\\''` -link -dll~linknames='\n+    # The linker will automatically build a .lib file if we build a DLL.\n+    old_archive_from_new_cmds='true'\n+    # FIXME: Should let the user specify the lib program.\n+    old_archive_cmds='lib /OUT:$oldlib$oldobjs'\n+    fix_srcfile_path='`cygpath -w $srcfile`'\n+    ;;\n+\n+  freebsd1*)\n+    ld_shlibs=no\n+    can_build_shared=no\n+    ;;\n+\n+  # FreeBSD 2.2.[012] allows us to include c++rt0.o to get C++ constructor\n+  # support.  Future versions do this automatically, but an explicit c++rt0.o\n+  # does not break anything, and helps significantly (at the cost of a little\n+  # extra space).\n+  freebsd2.2*)\n+    archive_cmds='$LD -Bshareable -o $lib $libobjs $deplibs $linkopts /usr/lib/c++rt0.o'\n+    hardcode_libdir_flag_spec='-R$libdir'\n+    hardcode_direct=yes\n+    hardcode_minus_L=no # verified on 2.2.6\n+    hardcode_shlibpath_var=no\n+    ;;\n+\n+  # Unfortunately, older versions of FreeBSD 2 do not have this feature.\n+  freebsd2*)\n+    archive_cmds='$LD -Bshareable -o $lib $libobjs $deplibs $linkopts'\n+    hardcode_direct=yes\n+    hardcode_minus_L=yes\n+    hardcode_shlibpath_var=no\n+    ;;\n+\n+  # FreeBSD 3 and greater uses gcc -shared to do shared libraries.\n+  freebsd*)\n+    archive_cmds='$CC -shared -o $lib $libobjs $deplibs $linkopts'\n+    hardcode_libdir_flag_spec='-R$libdir'\n+    hardcode_direct=yes\n+    hardcode_minus_L=no\n+    hardcode_shlibpath_var=no\n+    ;;\n+\n+  hpux9*)\n+    archive_cmds='$rm $objdir/$soname~$LD -b +s +b $install_libdir -o $objdir/$soname $libobjs $deplibs $linkopts~test $objdir/$soname = $lib || mv $objdir/$soname $lib'\n+    hardcode_libdir_flag_spec='${wl}+b ${wl}$libdir'\n+    hardcode_direct=yes\n+    hardcode_minus_L=yes\n+    export_dynamic_flag_spec='${wl}-E'\n+    ;;\n+\n+  hpux10* | hpux11*)\n+    archive_cmds='$LD -b +h $soname +s +b $install_libdir -o $lib $libobjs $deplibs $linkopts'\n+    hardcode_libdir_flag_spec='${wl}+b ${wl}$libdir'\n+    hardcode_direct=yes\n+    hardcode_minus_L=yes\n+    export_dynamic_flag_spec='${wl}-E'\n+    ;;\n+\n+  irix5* | irix6*)\n+    if test \"$with_gcc\" = yes; then\n+      archive_cmds='$CC -shared $libobjs $deplibs $linkopts ${wl}-soname ${wl}$soname `test -n \"$verstring\" && echo ${wl}-set_version ${wl}$verstring` -o $lib'\n+    else\n+      archive_cmds='$LD -shared $libobjs $deplibs $linkopts -soname $soname `test -n \"$verstring\" && echo -set_version $verstring` -o $lib'\n+    fi\n+    hardcode_libdir_flag_spec='${wl}-rpath ${wl}$libdir'\n+    hardcode_libdir_separator=:\n+    ;;\n+\n+  netbsd*)\n+    if echo __ELF__ | $CC -E - | grep __ELF__ >/dev/null; then\n+      archive_cmds='$LD -Bshareable -o $lib $libobjs $deplibs $linkopts'  # a.out\n+    else\n+      archive_cmds='$LD -shared -o $lib $libobjs $deplibs $linkopts'      # ELF\n+    fi\n+    hardcode_libdir_flag_spec='${wl}-R$libdir'\n+    hardcode_direct=yes\n+    hardcode_shlibpath_var=no\n+    ;;\n+\n+  openbsd*)\n+    archive_cmds='$LD -Bshareable -o $lib $libobjs $deplibs $linkopts'\n+    hardcode_libdir_flag_spec='-R$libdir'\n+    hardcode_direct=yes\n+    hardcode_shlibpath_var=no\n+    ;;\n+\n+  os2*)\n+    hardcode_libdir_flag_spec='-L$libdir'\n+    hardcode_minus_L=yes\n+    allow_undefined_flag=unsupported\n+    archive_cmds='$echo \"LIBRARY $libname INITINSTANCE\" > $objdir/$libname.def~$echo \"DESCRIPTION \\\"$libname\\\"\" >> $objdir/$libname.def~$echo DATA >> $objdir/$libname.def~$echo \" SINGLE NONSHARED\" >> $objdir/$libname.def~$echo EXPORTS >> $objdir/$libname.def~emxexp $libobjs >> $objdir/$libname.def~$CC -Zdll -Zcrtdll -o $lib $libobjs $deplibs $linkopts $objdir/$libname.def'\n+    old_archive_from_new_cmds='emximp -o $objdir/$libname.a $objdir/$libname.def'\n+    ;;\n+\n+  osf3* | osf4*)\n+    if test \"$with_gcc\" = yes; then\n+      allow_undefined_flag=' ${wl}-expect_unresolved ${wl}\\*'\n+      archive_cmds='$CC -shared${allow_undefined_flag} $libobjs $deplibs $linkopts ${wl}-soname ${wl}$soname `test -n \"$verstring\" && echo ${wl}-set_version ${wl}$verstring` -o $lib'\n+    else\n+      allow_undefined_flag=' -expect_unresolved \\*'\n+      archive_cmds='$LD -shared${allow_undefined_flag} $libobjs $deplibs $linkopts -soname $soname `test -n \"$verstring\" && echo -set_version $verstring` -o $lib'\n+    fi\n+    hardcode_libdir_flag_spec='${wl}-rpath ${wl}$libdir'\n+    hardcode_libdir_separator=:\n+    ;;\n+\n+  sco3.2v5*)\n+    archive_cmds='$LD -G -o $lib $libobjs $deplibs $linkopts'\n+    hardcode_direct=yes\n+    ;;\n+\n+  solaris*)\n+    no_undefined_flag=' -z text'\n+    # $CC -shared without GNU ld will not create a library from C++\n+    # object files and a static libstdc++, better avoid it by now\n+    archive_cmds='$LD -G${allow_undefined_flag} -h $soname -o $lib $libobjs $deplibs $linkopts'\n+    archive_expsym_cmds='$echo \"{ global:\" > $lib.exp~cat $export_symbols | sed -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~$echo \"local: *; };\" >> $lib.exp~\n+\t\t$LD -G${allow_undefined_flag} -M $lib.exp -h $soname -o $lib $libobjs $deplibs $linkopts~$rm $lib.exp'\n+    hardcode_libdir_flag_spec='-R$libdir'\n+    hardcode_shlibpath_var=no\n+    ;;\n+\n+  sunos4*)\n+    # Why do we need -Bstatic?  To avoid inter-library dependencies, maybe...\n+    if test \"$with_gcc\" = yes; then\n+      # Use -fPIC here because libgcc is multilibbed\n+      archive_cmds='$CC -shared ${wl}-Bstatic -fPIC -o $lib $libobjs $deplibs $linkopts'\n+    else\n+      archive_cmds='$LD -assert pure-text -Bstatic -o $lib $libobjs $deplibs $linkopts'\n+    fi\n+    hardcode_libdir_flag_spec='-L$libdir'\n+    hardcode_direct=yes\n+    hardcode_minus_L=yes\n+    hardcode_shlibpath_var=no\n+    ;;\n+\n+  sysv4.3*)\n+    archive_cmds='$LD -G -h $soname -o $lib $libobjs $deplibs $linkopts'\n+    hardcode_direct=no\n+    hardcode_minus_L=no\n+    hardcode_shlibpath_var=no\n+    export_dynamic_flag_spec='-Bexport'\n+    ;;\n+\n+  uts4*)\n+    archive_cmds='$LD -G -h $soname -o $lib $libobjs $deplibs $linkopts'\n+    hardcode_libdir_flag_spec='-L$libdir'\n+    hardcode_direct=no\n+    hardcode_minus_L=no\n+    hardcode_shlibpath_var=no\n+    ;;\n+\n+  dgux*)\n+    archive_cmds='$LD -G -h $soname -o $lib $libobjs $deplibs $linkopts'\n+    hardcode_libdir_flag_spec='-L$libdir'\n+    hardcode_direct=no\n+    hardcode_minus_L=no\n+    hardcode_shlibpath_var=no\n+    ;;\n+\n+  *)\n+    ld_shlibs=no\n+    can_build_shared=no\n+    ;;\n+  esac\n+fi\n+echo \"$ac_t$ld_shlibs\" 1>&6\n+\n+if test -z \"$NM\"; then\n+  echo $ac_n \"checking for BSD-compatible nm... $ac_c\" 1>&6\n+  case \"$NM\" in\n+  /* | [A-Za-z]:[/\\\\]*) ;; # Let the user override the test with a path.\n+  *)\n+    IFS=\"${IFS= \t}\"; ac_save_ifs=\"$IFS\"; IFS=\"${IFS}${PATH_SEPARATOR}\"\n+    for ac_dir in $PATH /usr/ucb /usr/ccs/bin /bin; do\n+      test -z \"$ac_dir\" && ac_dir=.\n+      if test -f $ac_dir/nm; then\n+\t# Check to see if the nm accepts a BSD-compat flag.\n+\t# Adding the `sed 1q' prevents false positives on HP-UX, which says:\n+\t#   nm: unknown option \"B\" ignored\n+\tif ($ac_dir/nm -B /dev/null 2>&1 | sed '1q'; exit 0) | egrep /dev/null >/dev/null; then\n+\t  NM=\"$ac_dir/nm -B\"\n+\t  break\n+\telif ($ac_dir/nm -p /dev/null 2>&1 | sed '1q'; exit 0) | egrep /dev/null >/dev/null; then\n+\t  NM=\"$ac_dir/nm -p\"\n+\t  break\n+\telse\n+\t  NM=${NM=\"$ac_dir/nm\"} # keep the first match, but\n+\t  continue # so that we can try to find one that supports BSD flags\n+\tfi\n+      fi\n+    done\n+    IFS=\"$ac_save_ifs\"\n+    test -z \"$NM\" && NM=nm\n+    ;;\n+  esac\n+  echo \"$ac_t$NM\" 1>&6\n+fi\n+\n+# Check for command to grab the raw symbol name followed by C symbol from nm.\n+echo $ac_n \"checking command to parse $NM output... $ac_c\" 1>&6\n+\n+# These are sane defaults that work on at least a few old systems.\n+# [They come from Ultrix.  What could be older than Ultrix?!! ;)]\n+\n+# Character class describing NM global symbol codes.\n+symcode='[BCDEGRST]'\n+\n+# Regexp to match symbols that can be accessed directly from C.\n+sympat='\\([_A-Za-z][_A-Za-z0-9]*\\)'\n+\n+# Transform the above into a raw symbol and a C symbol.\n+symxfrm='\\1 \\2\\3 \\3'\n+\n+# Transform an extracted symbol line into a proper C declaration\n+global_symbol_to_cdecl=\"sed -n -e 's/^. .* \\(.*\\)$/extern char \\1;/p'\"\n+\n+# Define system-specific variables.\n+case \"$host_os\" in\n+aix*)\n+  symcode='[BCDT]'\n+  ;;\n+cygwin* | mingw*)\n+  symcode='[ABCDGISTW]'\n+  ;;\n+hpux*) # Its linker distinguishes data from code symbols\n+  global_symbol_to_cdecl=\"sed -n -e 's/^T .* \\(.*\\)$/extern char \\1();/p' -e 's/^. .* \\(.*\\)$/extern char \\1;/p'\"\n+  ;;\n+irix*)\n+  symcode='[BCDEGRST]'\n+  ;;\n+solaris*)\n+  symcode='[BDT]'\n+  ;;\n+esac\n+\n+# If we're using GNU nm, then use its standard symbol codes.\n+if $NM -V 2>&1 | egrep '(GNU|with BFD)' > /dev/null; then\n+  symcode='[ABCDGISTW]'\n+fi\n+\n+# Try without a prefix undercore, then with it.\n+for ac_symprfx in \"\" \"_\"; do\n+\n+  # Write the raw and C identifiers.\n+  global_symbol_pipe=\"sed -n -e 's/^.*[ \t]\\($symcode\\)[ \t][ \t]*\\($ac_symprfx\\)$sympat$/$symxfrm/p'\"\n+\n+  # Check to see that the pipe works correctly.\n+  pipe_works=no\n+  $rm conftest*\n+  cat > conftest.c <<EOF\n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+char nm_test_var;\n+void nm_test_func(){}\n+#ifdef __cplusplus\n+}\n+#endif\n+main(){nm_test_var='a';nm_test_func();return(0);}\n+EOF\n+\n+  echo \"$progname:1447: checking if global_symbol_pipe works\" >&5\n+  if { (eval echo $progname:1448: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; } && test -s conftest.$objext; then\n+    # Now try to grab the symbols.\n+    nlist=conftest.nm\n+    if { echo \"$progname:1451: eval \\\"$NM conftest.$objext | $global_symbol_pipe > $nlist\\\"\" >&5; eval \"$NM conftest.$objext | $global_symbol_pipe > $nlist 2>&5\"; } && test -s \"$nlist\"; then\n+\n+      # Try sorting and uniquifying the output.\n+      if sort \"$nlist\" | uniq > \"$nlist\"T; then\n+\tmv -f \"$nlist\"T \"$nlist\"\n+      else\n+\trm -f \"$nlist\"T\n+      fi\n+\n+      # Make sure that we snagged all the symbols we need.\n+      if egrep ' nm_test_var$' \"$nlist\" >/dev/null; then\n+\tif egrep ' nm_test_func$' \"$nlist\" >/dev/null; then\n+\t  cat <<EOF > conftest.c\n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n+EOF\n+\t  # Now generate the symbol file.\n+\t  eval \"$global_symbol_to_cdecl\"' < \"$nlist\" >> conftest.c'\n+\n+\t  cat <<EOF >> conftest.c\n+#if defined (__STDC__) && __STDC__\n+# define lt_ptr_t void *\n+#else\n+# define lt_ptr_t char *\n+# define const\n+#endif\n+\n+/* The mapping between symbol names and symbols. */\n+const struct {\n+  const char *name;\n+  lt_ptr_t address;\n+}\n+lt_preloaded_symbols[] =\n+{\n+EOF\n+\t  sed 's/^. \\(.*\\) \\(.*\\)$/  {\"\\2\", (lt_ptr_t) \\&\\2},/' < \"$nlist\" >> conftest.c\n+\t  cat <<\\EOF >> conftest.c\n+  {0, (lt_ptr_t) 0}\n+};\n+\n+#ifdef __cplusplus\n+}\n+#endif\n+EOF\n+\t  # Now try linking the two files.\n+\t  mv conftest.$objext conftestm.$objext\n+\t  save_LIBS=\"$LIBS\"\n+\t  save_CFLAGS=\"$CFLAGS\"\n+\t  LIBS=\"conftestm.$objext\"\n+\t  CFLAGS=\"$CFLAGS$no_builtin_flag\"\n+\t  if { (eval echo $progname:1503: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest; then\n+\t    pipe_works=yes\n+\t  else\n+\t    echo \"$progname: failed program was:\" >&5\n+\t    cat conftest.c >&5\n+\t  fi\n+\t  LIBS=\"$save_LIBS\"\n+\telse\n+\t  echo \"cannot find nm_test_func in $nlist\" >&5\n+\tfi\n+      else\n+\techo \"cannot find nm_test_var in $nlist\" >&5\n+      fi\n+    else\n+      echo \"cannot run $global_symbol_pipe\" >&5\n+    fi\n+  else\n+    echo \"$progname: failed program was:\" >&5\n+    cat conftest.c >&5\n+  fi\n+  $rm conftest*\n+\n+  # Do not use the global_symbol_pipe unless it works.\n+  if test \"$pipe_works\" = yes; then\n+    break\n+  else\n+    global_symbol_pipe=\n+  fi\n+done\n+echo \"$ac_t$pipe_works\" 1>&6\n+\n+if test -z \"$global_symbol_pipe\"; then\n+  global_symbol_to_cdecl=\n+fi\n+\n+# Check hardcoding attributes.\n+echo $ac_n \"checking how to hardcode library paths into programs... $ac_c\" 1>&6\n+hardcode_action=\n+if test -n \"$hardcode_libdir_flag_spec\" || \\\n+   test -n \"$runpath_var\"; then\n+\n+  # We can hardcode non-existant directories.\n+  if test \"$hardcode_direct\" != no && \\\n+     test \"$hardcode_minus_L\" != no && \\\n+     test \"$hardcode_shlibpath_var\" != no; then\n+\n+    # Linking always hardcodes the temporary library directory.\n+    hardcode_action=relink\n+  else\n+    # We can link without hardcoding, and we can hardcode nonexisting dirs.\n+    hardcode_action=immediate\n+  fi\n+else\n+  # We cannot hardcode anything, or else we can only hardcode existing\n+  # directories.\n+  hardcode_action=unsupported\n+fi\n+echo \"$ac_t$hardcode_action\" 1>&6\n+\n+\n+reload_flag=\n+reload_cmds='$LD$reload_flag -o $output$reload_objs'\n+echo $ac_n \"checking for $LD option to reload object files... $ac_c\" 1>&6\n+# PORTME Some linkers may need a different reload flag.\n+reload_flag='-r'\n+echo \"$ac_t$reload_flag\" 1>&6\n+test -n \"$reload_flag\" && reload_flag=\" $reload_flag\"\n+\n+# PORTME Fill in your ld.so characteristics\n+library_names_spec=\n+libname_spec='lib$name'\n+soname_spec=\n+postinstall_cmds=\n+postuninstall_cmds=\n+finish_cmds=\n+finish_eval=\n+shlibpath_var=\n+shlibpath_overrides_runpath=unknown\n+version_type=none\n+dynamic_linker=\"$host_os ld.so\"\n+sys_lib_dlsearch_path_spec=\"/lib /usr/lib\"\n+sys_lib_search_path_spec=\"/lib /usr/lib /usr/local/lib\"\n+file_magic_cmd=\n+file_magic_test_file=\n+deplibs_check_method='unknown'\n+# Need to set the preceding variable on all platforms that support\n+# interlibrary dependencies.\n+# 'none' -- dependencies not supported.\n+# `unknown' -- same as none, but documents that we really don't know.\n+# 'pass_all' -- all dependencies passed with no checks.\n+# 'test_compile' -- check by making test program.\n+# 'file_magic [regex]' -- check by looking for files in library path\n+# which responds to the $file_magic_cmd with a given egrep regex.\n+# If you have `file' or equivalent on your system and you're not sure\n+# whether `pass_all' will *always* work, you probably want this one.\n+echo $ac_n \"checking dynamic linker characteristics... $ac_c\" 1>&6\n+case \"$host_os\" in\n+aix3*)\n+  version_type=linux\n+  library_names_spec='${libname}${release}.so$versuffix $libname.a'\n+  shlibpath_var=LIBPATH\n+\n+  # AIX has no versioning support, so we append a major version to the name.\n+  soname_spec='${libname}${release}.so$major'\n+  ;;\n+\n+aix4*)\n+  version_type=linux\n+  # AIX has no versioning support, so currently we can not hardcode correct\n+  # soname into executable. Probably we can add versioning support to\n+  # collect2, so additional links can be useful in future.\n+  # We preserve .a as extension for shared libraries though AIX4.2\n+  # and later linker supports .so\n+  library_names_spec='${libname}${release}.so$versuffix ${libname}${release}.so$major $libname.a'\n+  shlibpath_var=LIBPATH\n+  deplibs_check_method=pass_all\n+  ;;\n+\n+amigaos*)\n+  library_names_spec='$libname.ixlibrary $libname.a'\n+  # Create ${libname}_ixlibrary.a entries in /sys/libs.\n+  finish_eval='for lib in `ls $libdir/*.ixlibrary 2>/dev/null`; do libname=`$echo \"X$lib\" | $Xsed -e '\\''s%^.*/\\([^/]*\\)\\.ixlibrary$%\\1%'\\''`; test $rm /sys/libs/${libname}_ixlibrary.a; $show \"(cd /sys/libs && $LN_S $lib ${libname}_ixlibrary.a)\"; (cd /sys/libs && $LN_S $lib ${libname}_ixlibrary.a) || exit 1; done'\n+  ;;\n+\n+beos*)\n+  library_names_spec='${libname}.so'\n+  dynamic_linker=\"$host_os ld.so\"\n+  shlibpath_var=LIBRARY_PATH\n+  ;;\n+\n+bsdi4*)\n+  version_type=linux\n+  library_names_spec='${libname}.so$major ${libname}.so'\n+  soname_spec='${libname}.so'\n+  finish_cmds='PATH=\"$PATH:/sbin\" ldconfig $libdir'\n+  shlibpath_var=LD_LIBRARY_PATH\n+  deplibs_check_method='file_magic ELF 32-bit LSB shared object'\n+  file_magic_cmd=/usr/bin/file\n+  file_magic_test_file=/shlib/libc.so\n+  sys_lib_search_path_spec=\"/shlib /usr/lib /usr/X11/lib /usr/contrib/lib /lib /usr/local/lib\"\n+  sys_lib_dlsearch_path_spec=\"/shlib /usr/lib /usr/local/lib\"\n+  # the default ld.so.conf also contains /usr/contrib/lib and\n+  # /usr/X11R6/lib (/usr/X11 is a link to /usr/X11R6), but let us allow\n+  # libtool to hard-code these into programs\n+  ;;\n+\n+cygwin* | mingw*)\n+  version_type=windows\n+  if test \"$with_gcc\" = yes; then\n+    library_names_spec='${libname}`echo ${release} | sed -e 's/[.]/-/g'`${versuffix}.dll $libname.a'\n+  else\n+    library_names_spec='${libname}`echo ${release} | sed -e 's/[.]/-/g'`${versuffix}.dll $libname.lib'\n+  fi\n+  dynamic_linker='Win32 ld.exe'\n+  deplibs_check_method='file_magic file format pei*-i386.*architecture: i386'\n+  file_magic_cmd='objdump -f'\n+  need_lib_prefix=no\n+  # FIXME: first we should search . and the directory the executable is in\n+  shlibpath_var=PATH\n+  ;;\n+\n+freebsd1*)\n+  dynamic_linker=no\n+  ;;\n+  \n+freebsd*)\n+  objformat=`test -x /usr/bin/objformat && /usr/bin/objformat || echo aout`\n+  version_type=freebsd-$objformat\n+  case \"$version_type\" in\n+    freebsd-elf*)\n+      deplibs_check_method='file_magic ELF [0-9][0-9]*-bit [LM]SB shared object'\n+      file_magic_cmd=/usr/bin/file\n+      file_magic_test_file=`echo /usr/lib/libc.so*`\n+      library_names_spec='${libname}${release}.so$versuffix ${libname}${release}.so $libname.so'\n+      need_version=no\n+      need_lib_prefix=no\n+      ;;\n+    freebsd-*)\n+      deplibs_check_method=unknown\n+      library_names_spec='${libname}${release}.so$versuffix $libname.so$versuffix'\n+      need_version=yes\n+      ;;\n+  esac\n+  finish_cmds='PATH=\"$PATH:/sbin\" OBJFORMAT=\"'\"$objformat\"'\" ldconfig -m $libdir'\n+  shlibpath_var=LD_LIBRARY_PATH\n+  ;;\n+\n+gnu*)\n+  version_type=linux\n+  library_names_spec='${libname}${release}.so$versuffix ${libname}.so'\n+  shlibpath_var=LD_LIBRARY_PATH\n+  ;;\n+\n+hpux9* | hpux10* | hpux11*)\n+  # Give a soname corresponding to the major version so that dld.sl refuses to\n+  # link against other versions.\n+  dynamic_linker=\"$host_os dld.sl\"\n+  version_type=sunos\n+  need_lib_prefix=no\n+  need_version=no\n+  shlibpath_var=SHLIB_PATH\n+  library_names_spec='${libname}${release}.sl$versuffix ${libname}${release}.sl$major $libname.sl'\n+  soname_spec='${libname}${release}.sl$major'\n+  # HP-UX runs *really* slowly unless shared libraries are mode 555.\n+  postinstall_cmds='chmod 555 $lib'\n+  ;;\n+\n+irix5*)\n+  version_type=irix\n+  soname_spec='${libname}${release}.so'\n+  library_names_spec='${libname}${release}.so$versuffix ${libname}${release}.so $libname.so'\n+  shlibpath_var=LD_LIBRARY_PATH\n+  deplibs_check_method=\"file_magic ELF 32-bit MSB dynamic lib MIPS - version 1\" # or should it be pass_all?\n+  file_magic_cmd=/usr/bin/file\n+  file_magic_test_file=`echo /lib/libc.so*`\n+  shlibpath_overrides_runpath=no\n+  ;;\n+\n+irix6*)\n+  version_type=irix\n+  need_lib_prefix=no\n+  need_version=no\n+  soname_spec='${libname}${release}.so'\n+  library_names_spec='${libname}${release}.so$versuffix ${libname}${release}.so $libname.so'\n+  case \"$LD\" in # libtool.m4 will add one of these switches to LD\n+  *-32|*\"-32 \") libsuff= shlibsuff= libmagic=32-bit;;\n+  *-n32|*\"-n32 \") libsuff=32 shlibsuff=N32 libmagic=N32;;\n+  *-64|*\"-64 \") libsuff=64 shlibsuff=64 libmagic=64-bit;;\n+  *) libsuff= shlibsuff= libmagic=never-match;;\n+  esac\n+  shlibpath_var=LD_LIBRARY${shlibsuff}_PATH\n+  shlibpath_overrides_runpath=no\n+  # even though /usr/local/lib is always searched, the man-page says\n+  # shared libraries should not be installed there if they use an ABI\n+  # different from -32, so we'd better not search for shared libraries\n+  # there either\n+  sys_lib_search_path_spec=\"/lib${libsuff} /usr/lib${libsuff} /usr/local/lib${libsuff}\"\n+  sys_lib_dlsearch_path_spec=\"/lib${libsuff} /usr/lib${libsuff} /usr/local/lib${libsuff}\"\n+  deplibs_check_method=\"file_magic ELF ${libmagic} MSB mips-[1234] dynamic lib MIPS - version 1\" # or should it be pass_all?\n+  file_magic_cmd=/usr/bin/file\n+  file_magic_test_file=`echo /lib${libsuff}/libc.so*`\n+  ;;\n+\n+# No shared lib support for Linux oldld, aout, or coff.\n+linux-gnuoldld* | linux-gnuaout* | linux-gnucoff*)\n+  dynamic_linker=no\n+  ;;\n+\n+# This must be Linux ELF.\n+linux-gnu*)\n+  version_type=linux\n+  need_lib_prefix=no\n+  need_version=no\n+  library_names_spec='${libname}${release}.so$versuffix ${libname}${release}.so$major $libname.so'\n+  soname_spec='${libname}${release}.so$major'\n+  finish_cmds='PATH=\"$PATH:/sbin\" ldconfig -n $libdir'\n+  shlibpath_var=LD_LIBRARY_PATH\n+  shlibpath_overrides_runpath=no\n+  deplibs_check_method='file_magic ELF [0-9][0-9]*-bit [LM]SB (shared object|dynamic lib )'\n+  file_magic_cmd=/usr/bin/file\n+  file_magic_test_file=`echo /lib/libc.so* /lib/libc-*.so`\n+\n+  if test -f /lib/ld.so.1; then\n+    dynamic_linker='GNU ld.so'\n+  else\n+    # Only the GNU ld.so supports shared libraries on MkLinux.\n+    case \"$host_cpu\" in\n+    powerpc*) dynamic_linker=no ;;\n+    *) dynamic_linker='Linux ld.so' ;;\n+    esac\n+  fi\n+  ;;\n+\n+netbsd*)\n+  version_type=sunos\n+  if echo __ELF__ | $CC -E - | grep __ELF__ >/dev/null; then\n+    library_names_spec='${libname}${release}.so$versuffix ${libname}.so$versuffix'\n+    finish_cmds='PATH=\"$PATH:/sbin\" ldconfig -m $libdir'\n+    dynamic_linker='NetBSD (a.out) ld.so'\n+  else\n+    library_names_spec='${libname}${release}.so$versuffix ${libname}${release}.so$major ${libname}${release}.so ${libname}.so'\n+    soname_spec='${libname}${release}.so$major'\n+    dynamic_linker='NetBSD ld.elf_so'\n+  fi\n+  shlibpath_var=LD_LIBRARY_PATH\n+  ;;\n+\n+openbsd*)\n+  version_type=sunos\n+  if test \"$with_gnu_ld\" = yes; then\n+    need_lib_prefix=no\n+    need_version=no\n+  fi\n+  library_names_spec='${libname}${release}.so$versuffix ${libname}.so$versuffix'\n+  finish_cmds='PATH=\"\\$PATH:/sbin\" ldconfig -m $libdir'\n+  shlibpath_var=LD_LIBRARY_PATH\n+  ;;\n+\n+os2*)\n+  libname_spec='$name'\n+  need_lib_prefix=no\n+  library_names_spec='$libname.dll $libname.a'\n+  dynamic_linker='OS/2 ld.exe'\n+  shlibpath_var=LIBPATH\n+  ;;\n+\n+osf3* | osf4*)\n+  version_type=osf\n+  soname_spec='${libname}${release}.so'\n+  library_names_spec='${libname}${release}.so$versuffix ${libname}${release}.so $libname.so'\n+  shlibpath_var=LD_LIBRARY_PATH\n+  # deplibs_check_method='pass_all'\n+  # Although pass_all appears to work, it copies symbols from static libraries\n+  # into shared ones and exports them.  So, when a program is linked with two\n+  # or more libraries that have got copies of the same symbols, link fails\n+  # This was only tested on osf4:\n+  deplibs_check_method='file_magic COFF format alpha shared library'\n+  file_magic_cmd=/usr/bin/file\n+  file_magic_test_file=/shlib/libc.so\n+  sys_lib_search_path_spec=\"/usr/shlib /usr/ccs/lib /usr/lib/cmplrs/cc /usr/lib /usr/local/lib /var/shlib\"\n+  sys_lib_dlsearch_path_spec=\"$sys_lib_search_path_spec\"\n+  ;;\n+\n+sco3.2v5*)\n+  version_type=osf\n+  soname_spec='${libname}${release}.so$major'\n+  library_names_spec='${libname}${release}.so$versuffix ${libname}${release}.so$major $libname.so'\n+  shlibpath_var=LD_LIBRARY_PATH\n+  ;;\n+\n+solaris*)\n+  version_type=linux\n+  need_lib_prefix=no\n+  need_version=no\n+  library_names_spec='${libname}${release}.so$versuffix ${libname}${release}.so$major $libname.so'\n+  soname_spec='${libname}${release}.so$major'\n+  shlibpath_var=LD_LIBRARY_PATH\n+  shlibpath_overrides_runpath=yes\n+  # ldd complains unless libraries are executable\n+  postinstall_cmds='chmod +x $lib'\n+  deplibs_check_method=\"file_magic ELF [0-9][0-9]-bit [LM]SB dynamic lib\"\n+  file_magic_cmd=/usr/bin/file\n+  file_magic_test_file=/lib/libc.so\n+  ;;\n+\n+sunos4*)\n+  version_type=sunos\n+  library_names_spec='${libname}${release}.so$versuffix ${libname}.so$versuffix'\n+  finish_cmds='PATH=\"\\$PATH:/usr/etc\" ldconfig $libdir'\n+  shlibpath_var=LD_LIBRARY_PATH\n+  shlibpath_overrides_runpath=yes\n+  if test \"$with_gnu_ld\" = yes; then\n+    need_lib_prefix=no\n+  fi\n+  need_version=yes\n+  ;;\n+\n+sysv4.2uw2* | sysv4.3* | sysv5*)\n+  version_type=linux\n+  library_names_spec='${libname}${release}.so$versuffix ${libname}${release}.so$major $libname.so'\n+  soname_spec='${libname}${release}.so$major'\n+  shlibpath_var=LD_LIBRARY_PATH\n+  case \"$host_vendor\" in\n+    ncr)\n+      deplibs_check_method='pass_all'\n+      ;;\n+  esac\n+  ;;\n+\n+uts4*)\n+  version_type=linux\n+  library_names_spec='${libname}${release}.so$versuffix ${libname}${release}.so$major $libname.so'\n+  soname_spec='${libname}${release}.so$major'\n+  shlibpath_var=LD_LIBRARY_PATH\n+  ;;\n+\n+dgux*)\n+  version_type=linux\n+  need_lib_prefix=no\n+  need_version=no\n+  library_names_spec='${libname}${release}.so$versuffix ${libname}${release}.so$major $libname.so'\n+  soname_spec='${libname}${release}.so$major'\n+  shlibpath_var=LD_LIBRARY_PATH\n+  ;;\n+\n+*)\n+  dynamic_linker=no\n+  ;;\n+esac\n+echo \"$ac_t$dynamic_linker\" 1>&6\n+test \"$dynamic_linker\" = no && can_build_shared=no\n+\n+# Report the final consequences.\n+echo \"checking if libtool supports shared libraries... $can_build_shared\" 1>&6\n+\n+if test -n \"$file_magic_test_file\" && test -n \"$file_magic_cmd\"; then\n+  case \"$deplibs_check_method\" in\n+  \"file_magic \"*)\n+    file_magic_regex=\"`expr \\\"$deplibs_check_method\\\" : \\\"file_magic \\(.*\\)\\\"`\"\n+    if eval $file_magic_cmd \\$file_magic_test_file 2> /dev/null |\n+       egrep \"$file_magic_regex\" > /dev/null; then\n+      :\n+    else\n+      cat <<EOF 1>&2\n+\n+*** Warning: the command libtool uses to detect shared libraries,\n+*** $file_magic_cmd, produces output that libtool cannot recognize.\n+*** The result is that libtool may fail to recognize shared libraries\n+*** as such.  This will affect the creation of libtool libraries that\n+*** depend on shared libraries, but programs linked with such libtool\n+*** libraries will work regardless of this problem.  Nevertheless, you\n+*** may want to report the problem to your system manager and/or to\n+*** bug-libtool@gnu.org\n+\n+EOF\n+    fi ;;\n+  esac\n+fi\n+\n+echo $ac_n \"checking whether to build shared libraries... $ac_c\" 1>&6\n+test \"$can_build_shared\" = \"no\" && enable_shared=no\n+\n+# On AIX, shared libraries and static libraries use the same namespace, and\n+# are all built from PIC.\n+case \"$host_os\" in\n+aix3*)\n+  test \"$enable_shared\" = yes && enable_static=no\n+  if test -n \"$RANLIB\"; then\n+    archive_cmds=\"$archive_cmds~\\$RANLIB \\$lib\"\n+    postinstall_cmds='$RANLIB $lib'\n+  fi\n+  ;;\n+\n+aix4*)\n+  test \"$enable_shared\" = yes && enable_static=no\n+  ;;\n+esac\n+\n+echo \"$ac_t$enable_shared\" 1>&6\n+\n+# Make sure either enable_shared or enable_static is yes.\n+test \"$enable_shared\" = yes || enable_static=yes\n+\n+echo \"checking whether to build static libraries... $enable_static\" 1>&6\n+\n+if test \"$hardcode_action\" = relink; then\n+  # Fast installation is not supported\n+  enable_fast_install=no\n+elif test \"$shlibpath_overrides_runpath\" = yes ||\n+     test \"$enable_shared\" = no; then\n+  # Fast installation is not necessary\n+  enable_fast_install=needless\n+fi\n+\n+echo $ac_n \"checking for objdir... $ac_c\" 1>&6\n+rm -f .libs 2>/dev/null\n+mkdir .libs 2>/dev/null\n+if test -d .libs; then\n+  objdir=.libs\n+else\n+  # MS-DOS does not allow filenames that begin with a dot.\n+  objdir=_libs\n+fi\n+rmdir .libs 2>/dev/null\n+echo \"$ac_t$objdir\" 1>&6\n+\n+if test \"x$enable_dlopen\" != xyes; then\n+  enable_dlopen=unknown\n+  enable_dlopen_self=unknown\n+  enable_dlopen_self_static=unknown\n+else\n+if eval \"test \\\"`echo '$''{'lt_cv_dlopen'+set}'`\\\" != set\"; then\n+  lt_cv_dlopen=no lt_cv_dlopen_libs=\n+echo $ac_n \"checking for dlopen\"\"... $ac_c\" 1>&6\n+echo \"$progname:1977: checking for dlopen\" >&5\n+if eval \"test \\\"`echo '$''{'ac_cv_func_dlopen'+set}'`\\\" = set\"; then\n+  echo $ac_n \"(cached) $ac_c\" 1>&6\n+else\n+  cat > conftest.$ac_ext <<EOF\n+#line 1982 \"ltconfig\"\n+/* System header to define __stub macros and hopefully few prototypes,\n+    which can conflict with char dlopen(); below.  */\n+#include <assert.h>\n+/* Override any gcc2 internal prototype to avoid an error.  */\n+/* We use char because int might match the return type of a gcc2\n+    builtin and then its argument prototype would still apply.  */\n+char dlopen();\n+\n+int main() {\n+\n+/* The GNU C library defines this for functions which it implements\n+    to always fail with ENOSYS.  Some functions are actually named\n+    something starting with __ and the normal name is an alias.  */\n+#if defined (__stub_dlopen) || defined (__stub___dlopen)\n+choke me\n+#else\n+dlopen();\n+#endif\n+\n+; return 0; }\n+EOF\n+if { (eval echo $progname:2004: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+  rm -rf conftest*\n+  eval \"ac_cv_func_dlopen=yes\"\n+else\n+  echo \"$progname: failed program was:\" >&5\n+  cat conftest.$ac_ext >&5\n+  rm -rf conftest*\n+  eval \"ac_cv_func_dlopen=no\"\n+fi\n+rm -f conftest*\n+fi\n+\n+if eval \"test \\\"`echo '$ac_cv_func_'dlopen`\\\" = yes\"; then\n+  echo \"$ac_t\"\"yes\" 1>&6\n+  lt_cv_dlopen=\"dlopen\"\n+else\n+  echo \"$ac_t\"\"no\" 1>&6\n+echo $ac_n \"checking for dlopen in -ldl\"\"... $ac_c\" 1>&6\n+echo \"$progname:2022: checking for dlopen in -ldl\" >&5\n+ac_lib_var=`echo dl'_'dlopen | sed 'y%./+-%__p_%'`\n+if eval \"test \\\"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\\\" = set\"; then\n+  echo $ac_n \"(cached) $ac_c\" 1>&6\n+else\n+  ac_save_LIBS=\"$LIBS\"\n+LIBS=\"-ldl  $LIBS\"\n+cat > conftest.$ac_ext <<EOF\n+#line 2030 \"ltconfig\"\n+/* Override any gcc2 internal prototype to avoid an error.  */\n+/* We use char because int might match the return type of a gcc2\n+    builtin and then its argument prototype would still apply.  */\n+char dlopen();\n+\n+int main() {\n+dlopen()\n+; return 0; }\n+EOF\n+if { (eval echo $progname:2040: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+  rm -rf conftest*\n+  eval \"ac_cv_lib_$ac_lib_var=yes\"\n+else\n+  echo \"$progname: failed program was:\" >&5\n+  cat conftest.$ac_ext >&5\n+  rm -rf conftest*\n+  eval \"ac_cv_lib_$ac_lib_var=no\"\n+fi\n+rm -f conftest*\n+LIBS=\"$ac_save_LIBS\"\n+\n+fi\n+if eval \"test \\\"`echo '$ac_cv_lib_'$ac_lib_var`\\\" = yes\"; then\n+  echo \"$ac_t\"\"yes\" 1>&6\n+  lt_cv_dlopen=\"dlopen\" lt_cv_dlopen_libs=\"-ldl\"\n+else\n+  echo \"$ac_t\"\"no\" 1>&6\n+echo $ac_n \"checking for dld_link in -ldld\"\"... $ac_c\" 1>&6\n+echo \"$progname:2059: checking for dld_link in -ldld\" >&5\n+ac_lib_var=`echo dld'_'dld_link | sed 'y%./+-%__p_%'`\n+if eval \"test \\\"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\\\" = set\"; then\n+  echo $ac_n \"(cached) $ac_c\" 1>&6\n+else\n+  ac_save_LIBS=\"$LIBS\"\n+LIBS=\"-ldld  $LIBS\"\n+cat > conftest.$ac_ext <<EOF\n+#line 2067 \"ltconfig\"\n+/* Override any gcc2 internal prototype to avoid an error.  */\n+/* We use char because int might match the return type of a gcc2\n+    builtin and then its argument prototype would still apply.  */\n+char dld_link();\n+\n+int main() {\n+dld_link()\n+; return 0; }\n+EOF\n+if { (eval echo $progname:2077: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+  rm -rf conftest*\n+  eval \"ac_cv_lib_$ac_lib_var=yes\"\n+else\n+  echo \"$progname: failed program was:\" >&5\n+  cat conftest.$ac_ext >&5\n+  rm -rf conftest*\n+  eval \"ac_cv_lib_$ac_lib_var=no\"\n+fi\n+rm -f conftest*\n+LIBS=\"$ac_save_LIBS\"\n+\n+fi\n+if eval \"test \\\"`echo '$ac_cv_lib_'$ac_lib_var`\\\" = yes\"; then\n+  echo \"$ac_t\"\"yes\" 1>&6\n+  lt_cv_dlopen=\"dld_link\" lt_cv_dlopen_libs=\"-ldld\"\n+else\n+  echo \"$ac_t\"\"no\" 1>&6\n+echo $ac_n \"checking for shl_load\"\"... $ac_c\" 1>&6\n+echo \"$progname:2096: checking for shl_load\" >&5\n+if eval \"test \\\"`echo '$''{'ac_cv_func_shl_load'+set}'`\\\" = set\"; then\n+  echo $ac_n \"(cached) $ac_c\" 1>&6\n+else\n+  cat > conftest.$ac_ext <<EOF\n+#line 2101 \"ltconfig\"\n+/* System header to define __stub macros and hopefully few prototypes,\n+    which can conflict with char shl_load(); below.  */\n+#include <assert.h>\n+/* Override any gcc2 internal prototype to avoid an error.  */\n+/* We use char because int might match the return type of a gcc2\n+    builtin and then its argument prototype would still apply.  */\n+char shl_load();\n+\n+int main() {\n+\n+/* The GNU C library defines this for functions which it implements\n+    to always fail with ENOSYS.  Some functions are actually named\n+    something starting with __ and the normal name is an alias.  */\n+#if defined (__stub_shl_load) || defined (__stub___shl_load)\n+choke me\n+#else\n+shl_load();\n+#endif\n+\n+; return 0; }\n+EOF\n+if { (eval echo $progname:2123: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+  rm -rf conftest*\n+  eval \"ac_cv_func_shl_load=yes\"\n+else\n+  echo \"$progname: failed program was:\" >&5\n+  cat conftest.$ac_ext >&5\n+  rm -rf conftest*\n+  eval \"ac_cv_func_shl_load=no\"\n+fi\n+rm -f conftest*\n+fi\n+\n+if eval \"test \\\"`echo '$ac_cv_func_'shl_load`\\\" = yes\"; then\n+  echo \"$ac_t\"\"yes\" 1>&6\n+  lt_cv_dlopen=\"shl_load\"\n+else\n+  echo \"$ac_t\"\"no\" 1>&6\n+echo $ac_n \"checking for LoadLibrary\"\"... $ac_c\" 1>&6\n+echo \"$progname:2141: checking for LoadLibrary\" >&5\n+if eval \"test \\\"`echo '$''{'ac_cv_func_LoadLibrary'+set}'`\\\" = set\"; then\n+  echo $ac_n \"(cached) $ac_c\" 1>&6\n+else\n+  cat > conftest.$ac_ext <<EOF\n+#line 2146 \"ltconfig\"\n+/* System header to define __stub macros and hopefully few prototypes,\n+    which can conflict with char LoadLibrary(); below.  */\n+#include <assert.h>\n+/* Override any gcc2 internal prototype to avoid an error.  */\n+/* We use char because int might match the return type of a gcc2\n+    builtin and then its argument prototype would still apply.  */\n+char LoadLibrary();\n+\n+int main() {\n+\n+/* The GNU C library defines this for functions which it implements\n+    to always fail with ENOSYS.  Some functions are actually named\n+    something starting with __ and the normal name is an alias.  */\n+#if defined (__stub_LoadLibrary) || defined (__stub___LoadLibrary)\n+choke me\n+#else\n+LoadLibrary();\n+#endif\n+\n+; return 0; }\n+EOF\n+if { (eval echo $progname:2168: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+  rm -rf conftest*\n+  eval \"ac_cv_func_LoadLibrary=yes\"\n+else\n+  echo \"$progname: failed program was:\" >&5\n+  cat conftest.$ac_ext >&5\n+  rm -rf conftest*\n+  eval \"ac_cv_func_LoadLibrary=no\"\n+fi\n+rm -f conftest*\n+fi\n+\n+if eval \"test \\\"`echo '$ac_cv_func_'LoadLibrary`\\\" = yes\"; then\n+  echo \"$ac_t\"\"yes\" 1>&6\n+  lt_cv_dlopen=\"LoadLibrary\"\n+else\n+  echo \"$ac_t\"\"no\" 1>&6\n+fi\n+\n+      \n+fi\n+\n+    \n+fi\n+\n+  \n+fi\n+\n+\n+fi\n+\n+fi\n+\n+  if test \"x$lt_cv_dlopen\" != xno; then\n+    enable_dlopen=yes\n+  fi\n+\n+  case \"$lt_cv_dlopen\" in\n+  dlopen)\n+for ac_hdr in dlfcn.h; do\n+ac_safe=`echo \"$ac_hdr\" | sed 'y%./+-%__p_%'`\n+echo $ac_n \"checking for $ac_hdr\"\"... $ac_c\" 1>&6\n+echo \"$progname:2210: checking for $ac_hdr\" >&5\n+if eval \"test \\\"`echo '$''{'ac_cv_header_$ac_safe'+set}'`\\\" = set\"; then\n+  echo $ac_n \"(cached) $ac_c\" 1>&6\n+else\n+  cat > conftest.$ac_ext <<EOF\n+#line 2215 \"ltconfig\"\n+#include <$ac_hdr>\n+int fnord = 0;\n+EOF\n+ac_try=\"$ac_compile conftest.$ac_ext >/dev/null 2>conftest.out\"\n+{ (eval echo $progname:2220: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+ac_err=`grep -v '^ *+' conftest.out | grep -v \"^conftest.${ac_ext}\\$\"`\n+if test -z \"$ac_err\"; then\n+  rm -rf conftest*\n+  eval \"ac_cv_header_$ac_safe=yes\"\n+else\n+  echo \"$ac_err\" >&5\n+  echo \"$progname: failed program was:\" >&5\n+  cat conftest.$ac_ext >&5\n+  rm -rf conftest*\n+  eval \"ac_cv_header_$ac_safe=no\"\n+fi\n+rm -f conftest*\n+fi\n+if eval \"test \\\"`echo '$ac_cv_header_'$ac_safe`\\\" = yes\"; then\n+  echo \"$ac_t\"\"yes\" 1>&6\n+else\n+  echo \"$ac_t\"\"no\" 1>&6\n+fi\n+done\n+\n+    if test \"x$ac_cv_header_dlfcn_h\" = xyes; then\n+      CPPFLAGS=\"$CPPFLAGS -DHAVE_DLFCN_H\"\n+    fi\n+    eval LDFLAGS=\\\"\\$LDFLAGS $export_dynamic_flag_spec\\\"\n+    LIBS=\"$lt_cv_dlopen_libs $LIBS\"\n+\n+  echo $ac_n \"checking whether a program can dlopen itself\"\"... $ac_c\" 1>&6\n+echo \"$progname:2248: checking whether a program can dlopen itself\" >&5\n+if test \"${lt_cv_dlopen_self+set}\" = set; then\n+  echo $ac_n \"(cached) $ac_c\" 1>&6\n+else\n+  if test \"$cross_compiling\" = yes; then\n+    lt_cv_dlopen_self=cross\n+  else\n+    cat > conftest.c <<EOF\n+#line 2256 \"ltconfig\"\n+\n+#if HAVE_DLFCN_H\n+#include <dlfcn.h>\n+#endif\n+\n+#include <stdio.h>\n+\n+#ifdef RTLD_GLOBAL\n+# define LTDL_GLOBAL\tRTLD_GLOBAL\n+#else\n+# ifdef DL_GLOBAL\n+#  define LTDL_GLOBAL\tDL_GLOBAL\n+# else\n+#  define LTDL_GLOBAL\t0\n+# endif\n+#endif\n+\n+/* We may have to define LTDL_LAZY_OR_NOW in the command line if we\n+   find out it does not work in some platform. */\n+#ifndef LTDL_LAZY_OR_NOW\n+# ifdef RTLD_LAZY\n+#  define LTDL_LAZY_OR_NOW\tRTLD_LAZY\n+# else\n+#  ifdef DL_LAZY\n+#   define LTDL_LAZY_OR_NOW\tDL_LAZY\n+#  else\n+#   ifdef RTLD_NOW\n+#    define LTDL_LAZY_OR_NOW\tRTLD_NOW\n+#   else\n+#    ifdef DL_NOW\n+#     define LTDL_LAZY_OR_NOW\tDL_NOW\n+#    else\n+#     define LTDL_LAZY_OR_NOW\t0\n+#    endif\n+#   endif\n+#  endif\n+# endif\n+#endif\n+\n+fnord() { int i=42;}\n+main() { void *self, *ptr1, *ptr2; self=dlopen(0,LTDL_GLOBAL|LTDL_LAZY_OR_NOW);\n+    if(self) { ptr1=dlsym(self,\"fnord\"); ptr2=dlsym(self,\"_fnord\");\n+\t       if(ptr1 || ptr2) exit(0); } exit(1); } \n+\n+EOF\n+if { (eval echo $progname:2302: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest && (./conftest; exit) 2>/dev/null\n+then\n+  lt_cv_dlopen_self=yes\n+else\n+  echo \"$progname: failed program was:\" >&5\n+  cat conftest.$ac_ext >&5\n+  rm -fr conftest*\n+  lt_cv_dlopen_self=no\n+fi\n+rm -fr conftest*\n+fi\n+\n+fi\n+\n+echo \"$ac_t\"\"$lt_cv_dlopen_self\" 1>&6\n+\n+  if test \"$lt_cv_dlopen_self\" = yes; then\n+    LDFLAGS=\"$LDFLAGS $link_static_flag\"\n+  echo $ac_n \"checking whether a statically linked program can dlopen itself\"\"... $ac_c\" 1>&6\n+echo \"$progname:2321: checking whether a statically linked program can dlopen itself\" >&5\n+if test \"${lt_cv_dlopen_self_static+set}\" = set; then\n+  echo $ac_n \"(cached) $ac_c\" 1>&6\n+else\n+  if test \"$cross_compiling\" = yes; then\n+    lt_cv_dlopen_self_static=cross\n+  else\n+    cat > conftest.c <<EOF\n+#line 2329 \"ltconfig\"\n+\n+#if HAVE_DLFCN_H\n+#include <dlfcn.h>\n+#endif\n+\n+#include <stdio.h>\n+\n+#ifdef RTLD_GLOBAL\n+# define LTDL_GLOBAL\tRTLD_GLOBAL\n+#else\n+# ifdef DL_GLOBAL\n+#  define LTDL_GLOBAL\tDL_GLOBAL\n+# else\n+#  define LTDL_GLOBAL\t0\n+# endif\n+#endif\n+\n+/* We may have to define LTDL_LAZY_OR_NOW in the command line if we\n+   find out it does not work in some platform. */\n+#ifndef LTDL_LAZY_OR_NOW\n+# ifdef RTLD_LAZY\n+#  define LTDL_LAZY_OR_NOW\tRTLD_LAZY\n+# else\n+#  ifdef DL_LAZY\n+#   define LTDL_LAZY_OR_NOW\tDL_LAZY\n+#  else\n+#   ifdef RTLD_NOW\n+#    define LTDL_LAZY_OR_NOW\tRTLD_NOW\n+#   else\n+#    ifdef DL_NOW\n+#     define LTDL_LAZY_OR_NOW\tDL_NOW\n+#    else\n+#     define LTDL_LAZY_OR_NOW\t0\n+#    endif\n+#   endif\n+#  endif\n+# endif\n+#endif\n+\n+fnord() { int i=42;}\n+main() { void *self, *ptr1, *ptr2; self=dlopen(0,LTDL_GLOBAL|LTDL_LAZY_OR_NOW);\n+    if(self) { ptr1=dlsym(self,\"fnord\"); ptr2=dlsym(self,\"_fnord\");\n+    if(ptr1 || ptr2) exit(0); } exit(1); } \n+\n+EOF\n+if { (eval echo $progname:2375: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest && (./conftest; exit) 2>/dev/null\n+then\n+  lt_cv_dlopen_self_static=yes\n+else\n+  echo \"$progname: failed program was:\" >&5\n+  cat conftest.$ac_ext >&5\n+  rm -fr conftest*\n+  lt_cv_dlopen_self_static=no\n+fi\n+rm -fr conftest*\n+fi\n+\n+fi\n+\n+echo \"$ac_t\"\"$lt_cv_dlopen_self_static\" 1>&6\n+fi\n+    ;;\n+  esac\n+\n+  case \"$lt_cv_dlopen_self\" in\n+  yes|no) enable_dlopen_self=$lt_cv_dlopen_self ;;\n+  *) enable_dlopen_self=unknown ;;\n+  esac\n+\n+  case \"$lt_cv_dlopen_self_static\" in\n+  yes|no) enable_dlopen_self_static=$lt_cv_dlopen_self_static ;;\n+  *) enable_dlopen_self_static=unknown ;;\n+  esac\n+fi\n+\n+# Copy echo and quote the copy, instead of the original, because it is\n+# used later.\n+ltecho=\"$echo\"\n+if test \"X$ltecho\" = \"X$CONFIG_SHELL $0 --fallback-echo\"; then\n+   ltecho=\"$CONFIG_SHELL \\$0 --fallback-echo\"\n+fi\n+LTSHELL=\"$SHELL\"\n+\n+LTCONFIG_VERSION=\"$VERSION\"\n+\n+# Only quote variables if we're using ltmain.sh.\n+case \"$ltmain\" in\n+*.sh)\n+  # Now quote all the things that may contain metacharacters.\n+  for var in ltecho old_CC old_CFLAGS old_CPPFLAGS old_LD old_NM old_RANLIB \\\n+    old_LN_S old_DLLTOOL old_AS AR CC LD LN_S NM LTSHELL LTCONFIG_VERSION \\\n+    reload_flag reload_cmds wl \\\n+    pic_flag link_static_flag no_builtin_flag export_dynamic_flag_spec \\\n+    thread_safe_flag_spec whole_archive_flag_spec libname_spec \\\n+    library_names_spec soname_spec \\\n+    RANLIB old_archive_cmds old_archive_from_new_cmds old_postinstall_cmds \\\n+    old_postuninstall_cmds archive_cmds archive_expsym_cmds postinstall_cmds postuninstall_cmds \\\n+    file_magic_cmd export_symbols_cmds deplibs_check_method allow_undefined_flag no_undefined_flag \\\n+    finish_cmds finish_eval global_symbol_pipe global_symbol_to_cdecl \\\n+    hardcode_libdir_flag_spec hardcode_libdir_separator  \\\n+    sys_lib_search_path_spec sys_lib_dlsearch_path_spec \\\n+    compiler_c_o compiler_o_lo need_locks exclude_expsyms include_expsyms; do\n+\n+    case \"$var\" in\n+    reload_cmds | old_archive_cmds | old_archive_from_new_cmds | \\\n+    old_postinstall_cmds | old_postuninstall_cmds | \\\n+    export_symbols_cmds | archive_cmds | archive_expsym_cmds | \\\n+    postinstall_cmds | postuninstall_cmds | \\\n+    finish_cmds | sys_lib_search_path_spec | sys_lib_dlsearch_path_spec)\n+      # Double-quote double-evaled strings.\n+      eval \"$var=\\\\\\\"\\`\\$echo \\\"X\\$$var\\\" | \\$Xsed -e \\\"\\$double_quote_subst\\\" -e \\\"\\$sed_quote_subst\\\" -e \\\"\\$delay_variable_subst\\\"\\`\\\\\\\"\"\n+      ;;\n+    *)\n+      eval \"$var=\\\\\\\"\\`\\$echo \\\"X\\$$var\\\" | \\$Xsed -e \\\"\\$sed_quote_subst\\\"\\`\\\\\\\"\"\n+      ;;\n+    esac\n+  done\n+\n+  case \"$ltecho\" in\n+  *'\\$0 --fallback-echo\"')\n+    ltecho=`$echo \"X$ltecho\" | $Xsed -e 's/\\\\\\\\\\\\\\$0 --fallback-echo\"$/$0 --fallback-echo\"/'`\n+    ;;\n+  esac\n+\n+  trap \"$rm \\\"$ofile\\\"; exit 1\" 1 2 15\n+  echo \"creating $ofile\"\n+  $rm \"$ofile\"\n+  cat <<EOF > \"$ofile\"\n+#! $SHELL\n+\n+# `$echo \"$ofile\" | sed 's%^.*/%%'` - Provide generalized library-building support services.\n+# Generated automatically by $PROGRAM (GNU $PACKAGE $VERSION$TIMESTAMP)\n+# NOTE: Changes made to this file will be lost: look at ltconfig or ltmain.sh.\n+#\n+# Copyright (C) 1996-1999 Free Software Foundation, Inc.\n+# Gordon Matzigkeit <gord@gnu.ai.mit.edu>, 1996\n+#\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 2 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful, but\n+# WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+# General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program; if not, write to the Free Software\n+# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n+#\n+# As a special exception to the GNU General Public License, if you\n+# distribute this file as part of a program that contains a\n+# configuration script generated by Autoconf, you may include it under\n+# the same distribution terms that you use for the rest of that program.\n+\n+# Sed that helps us avoid accidentally triggering echo(1) options like -n.\n+Xsed=\"sed -e s/^X//\"\n+\n+# The HP-UX ksh and POSIX shell print the target directory to stdout\n+# if CDPATH is set.\n+if test \"\\${CDPATH+set}\" = set; then CDPATH=; export CDPATH; fi\n+\n+### BEGIN LIBTOOL CONFIG\n+EOF\n+  cfgfile=\"$ofile\"\n+  ;;\n+\n+*)\n+  # Double-quote the variables that need it (for aesthetics).\n+  for var in old_CC old_CFLAGS old_CPPFLAGS old_LD old_NM old_RANLIB \\\n+    old_LN_S old_DLLTOOL old_AS; do\n+    eval \"$var=\\\\\\\"\\$var\\\\\\\"\"\n+  done\n+\n+  # Just create a config file.\n+  cfgfile=\"$ofile.cfg\"\n+  trap \"$rm \\\"$cfgfile\\\"; exit 1\" 1 2 15\n+  echo \"creating $cfgfile\"\n+  $rm \"$cfgfile\"\n+  cat <<EOF > \"$cfgfile\"\n+# `$echo \"$cfgfile\" | sed 's%^.*/%%'` - Libtool configuration file.\n+# Generated automatically by $PROGRAM (GNU $PACKAGE $VERSION$TIMESTAMP)\n+EOF\n+  ;;\n+esac\n+\n+cat <<EOF >> \"$cfgfile\"\n+# Libtool was configured as follows, on host `(hostname || uname -n) 2>/dev/null | sed 1q`:\n+#\n+# CC=$old_CC CFLAGS=$old_CFLAGS CPPFLAGS=$old_CPPFLAGS \\\\\n+# LD=$old_LD NM=$old_NM RANLIB=$old_RANLIB LN_S=$old_LN_S \\\\\n+# DLLTOOL=\"$old_DLLTOOL\" AS=\"$old_AS\" \\\\\n+#   $0$ltconfig_args\n+#\n+# Compiler and other test output produced by $progname, useful for\n+# debugging $progname, is in ./config.log if it exists.\n+\n+# The version of $progname that generated this script.\n+LTCONFIG_VERSION=$LTCONFIG_VERSION\n+\n+# Shell to use when invoking shell scripts.\n+SHELL=$LTSHELL\n+\n+# Whether or not to build shared libraries.\n+build_libtool_libs=$enable_shared\n+\n+# Whether or not to build static libraries.\n+build_old_libs=$enable_static\n+\n+# Whether or not to optimize for fast installation.\n+fast_install=$enable_fast_install\n+\n+# The host system.\n+host_alias=$host_alias\n+host=$host\n+\n+# An echo program that does not interpret backslashes.\n+echo=$ltecho\n+\n+# The archiver.\n+AR=$AR\n+\n+# The default C compiler.\n+CC=$CC\n+\n+# The linker used to build libraries.\n+LD=$LD\n+\n+# Whether we need hard or soft links.\n+LN_S=$LN_S\n+\n+# A BSD-compatible nm program.\n+NM=$NM\n+\n+# Used on cygwin: DLL creation program.\n+DLLTOOL=\"$DLLTOOL\"\n+\n+# Used on cygwin: assembler.\n+AS=\"$AS\"\n+\n+# The name of the directory that contains temporary libtool files.\n+objdir=$objdir\n+\n+# How to create reloadable object files.\n+reload_flag=$reload_flag\n+reload_cmds=$reload_cmds\n+\n+# How to pass a linker flag through the compiler.\n+wl=$wl\n+\n+# Object file suffix (normally \"o\").\n+objext=\"$objext\"\n+\n+# Old archive suffix (normally \"a\").\n+libext=\"$libext\"\n+\n+# Additional compiler flags for building library objects.\n+pic_flag=$pic_flag\n+\n+# Does compiler simultaneously support -c and -o options\n+compiler_c_o=$compiler_c_o\n+\n+# Can we write directly to a .lo ?\n+compiler_o_lo=$compiler_o_lo\n+\n+# Must we lock files when doing compilation ?\n+need_locks=$need_locks\n+\n+# Do we need the lib prefix for modules?\n+need_lib_prefix=$need_lib_prefix\n+\n+# Do we need a version for libraries?\n+need_version=$need_version\n+\n+# Whether dlopen is supported.\n+dlopen=$enable_dlopen\n+\n+# Whether dlopen of programs is supported.\n+dlopen_self=$enable_dlopen_self\n+\n+# Whether dlopen of statically linked programs is supported.\n+dlopen_self_static=$enable_dlopen_self_static\n+\n+# Compiler flag to prevent dynamic linking.\n+link_static_flag=$link_static_flag\n+\n+# Compiler flag to turn off builtin functions.\n+no_builtin_flag=$no_builtin_flag\n+\n+# Compiler flag to allow reflexive dlopens.\n+export_dynamic_flag_spec=$export_dynamic_flag_spec\n+\n+# Compiler flag to generate shared objects directly from archives.\n+whole_archive_flag_spec=$whole_archive_flag_spec\n+\n+# Compiler flag to generate thread-safe objects.\n+thread_safe_flag_spec=$thread_safe_flag_spec\n+\n+# Library versioning type.\n+version_type=$version_type\n+\n+# Format of library name prefix.\n+libname_spec=$libname_spec\n+\n+# List of archive names.  First name is the real one, the rest are links.\n+# The last name is the one that the linker finds with -lNAME.\n+library_names_spec=$library_names_spec\n+\n+# The coded name of the library, if different from the real name.\n+soname_spec=$soname_spec\n+\n+# Commands used to build and install an old-style archive.\n+RANLIB=$RANLIB\n+old_archive_cmds=$old_archive_cmds\n+old_postinstall_cmds=$old_postinstall_cmds\n+old_postuninstall_cmds=$old_postuninstall_cmds\n+\n+# Create an old-style archive from a shared archive.\n+old_archive_from_new_cmds=$old_archive_from_new_cmds\n+\n+# Commands used to build and install a shared archive.\n+archive_cmds=$archive_cmds\n+archive_expsym_cmds=$archive_expsym_cmds\n+postinstall_cmds=$postinstall_cmds\n+postuninstall_cmds=$postuninstall_cmds\n+\n+# Method to check whether dependent libraries are shared objects.\n+deplibs_check_method=$deplibs_check_method\n+\n+# Command to use when deplibs_check_method == file_magic\n+file_magic_cmd=$file_magic_cmd\n+\n+# Flag that allows shared libraries with undefined symbols to be built.\n+allow_undefined_flag=$allow_undefined_flag\n+\n+# Flag that forces no undefined symbols.\n+no_undefined_flag=$no_undefined_flag\n+\n+# Commands used to finish a libtool library installation in a directory.\n+finish_cmds=$finish_cmds\n+\n+# Same as above, but a single script fragment to be evaled but not shown.\n+finish_eval=$finish_eval\n+\n+# Take the output of nm and produce a listing of raw symbols and C names.\n+global_symbol_pipe=$global_symbol_pipe\n+\n+# Transform the output of nm in a proper C declaration\n+global_symbol_to_cdecl=$global_symbol_to_cdecl\n+\n+# This is the shared library runtime path variable.\n+runpath_var=$runpath_var\n+\n+# This is the shared library path variable.\n+shlibpath_var=$shlibpath_var\n+\n+# Is shlibpath searched before the hard-coded library search path?\n+shlibpath_overrides_runpath=$shlibpath_overrides_runpath\n+\n+# How to hardcode a shared library path into an executable.\n+hardcode_action=$hardcode_action\n+\n+# Flag to hardcode \\$libdir into a binary during linking.\n+# This must work even if \\$libdir does not exist.\n+hardcode_libdir_flag_spec=$hardcode_libdir_flag_spec\n+\n+# Whether we need a single -rpath flag with a separated argument.\n+hardcode_libdir_separator=$hardcode_libdir_separator\n+\n+# Set to yes if using DIR/libNAME.so during linking hardcodes DIR into the\n+# resulting binary.\n+hardcode_direct=$hardcode_direct\n+\n+# Set to yes if using the -LDIR flag during linking hardcodes DIR into the\n+# resulting binary.\n+hardcode_minus_L=$hardcode_minus_L\n+\n+# Set to yes if using SHLIBPATH_VAR=DIR during linking hardcodes DIR into\n+# the resulting binary.\n+hardcode_shlibpath_var=$hardcode_shlibpath_var\n+\n+# Compile-time system search path for libraries\n+sys_lib_search_path_spec=$sys_lib_search_path_spec\n+\n+# Run-time system search path for libraries\n+sys_lib_dlsearch_path_spec=$sys_lib_dlsearch_path_spec\n+\n+# Fix the shell variable \\$srcfile for the compiler.\n+fix_srcfile_path=\"$fix_srcfile_path\"\n+\n+# Set to yes if exported symbols are required\n+always_export_symbols=$always_export_symbols\n+\n+# The command to extract exported symbols\n+export_symbols_cmds=$export_symbols_cmds\n+\n+# Symbols that should not be listed in the preloaded symbols\n+exclude_expsyms=$exclude_expsyms\n+\n+# Symbols that must always be exported\n+include_expsyms=$include_expsyms\n+\n+EOF\n+\n+case \"$ltmain\" in\n+*.sh)\n+  echo '### END LIBTOOL CONFIG' >> \"$ofile\"\n+  echo >> \"$ofile\"\n+  case \"$host_os\" in\n+  aix3*)\n+    cat <<\\EOF >> \"$ofile\"\n+\n+# AIX sometimes has problems with the GCC collect2 program.  For some\n+# reason, if we set the COLLECT_NAMES environment variable, the problems\n+# vanish in a puff of smoke.\n+if test \"${COLLECT_NAMES+set}\" != set; then\n+  COLLECT_NAMES=\n+  export COLLECT_NAMES\n+fi\n+EOF\n+    ;;\n+  esac\n+\n+  # Append the ltmain.sh script.\n+  cat \"$ltmain\" >> \"$ofile\" || (rm -f \"$ofile\"; exit 1)\n+\n+  chmod +x \"$ofile\"\n+  ;;\n+\n+*)\n+  # Compile the libtool program.\n+  echo \"FIXME: would compile $ltmain\"\n+  ;;\n+esac\n+\n+test -n \"$cache_file\" || exit 0\n+\n+# AC_CACHE_SAVE\n+trap '' 1 2 15\n+cat > confcache <<\\EOF\n+# This file is a shell script that caches the results of configure\n+# tests run on this system so they can be shared between configure\n+# scripts and configure runs.  It is not useful on other systems.\n+# If it contains results you don't want to keep, you may remove or edit it.\n+#\n+# By default, configure uses ./config.cache as the cache file,\n+# creating it if it does not exist already.  You can give configure\n+# the --cache-file=FILE option to use a different cache file; that is\n+# what configure does when it calls configure scripts in\n+# subdirectories, so they share the cache.\n+# Giving --cache-file=/dev/null disables caching, for debugging configure.\n+# config.status only pays attention to the cache file if you give it the\n+# --recheck option to rerun configure.\n+#\n+EOF\n+# The following way of writing the cache mishandles newlines in values,\n+# but we know of no workaround that is simple, portable, and efficient.\n+# So, don't put newlines in cache variables' values.\n+# Ultrix sh set writes to stderr and can't be redirected directly,\n+# and sets the high bit in the cache file unless we assign to the vars.\n+(set) 2>&1 |\n+  case `(ac_space=' '; set | grep ac_space) 2>&1` in\n+  *ac_space=\\ *)\n+    # `set' does not quote correctly, so add quotes (double-quote substitution\n+    # turns \\\\\\\\ into \\\\, and sed turns \\\\ into \\).\n+    sed -n \\\n+      -e \"s/'/'\\\\\\\\''/g\" \\\n+      -e \"s/^\\\\([a-zA-Z0-9_]*_cv_[a-zA-Z0-9_]*\\\\)=\\\\(.*\\\\)/\\\\1=\\${\\\\1='\\\\2'}/p\"\n+    ;;\n+  *)\n+    # `set' quotes correctly as required by POSIX, so do not add quotes.\n+    sed -n -e 's/^\\([a-zA-Z0-9_]*_cv_[a-zA-Z0-9_]*\\)=\\(.*\\)/\\1=${\\1=\\2}/p'\n+    ;;\n+  esac >> confcache\n+if cmp -s $cache_file confcache; then\n+  :\n+else\n+  if test -w $cache_file; then\n+    echo \"updating cache $cache_file\"\n+    cat confcache > $cache_file\n+  else\n+    echo \"not updating unwritable cache $cache_file\"\n+  fi\n+fi\n+rm -f confcache\n+\n+exit 0\n+\n+# Local Variables:\n+# mode:shell-script\n+# sh-indentation:2\n+# End:"}, {"sha": "878787a3c1ef47556d2f60501ad992dfa8e3b3d9", "filename": "libffi/ltmain.sh", "status": "added", "additions": 3782, "deletions": 0, "changes": 3782, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63e5e3e0dbb7207e95c0437499b980a304665589/libffi%2Fltmain.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63e5e3e0dbb7207e95c0437499b980a304665589/libffi%2Fltmain.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fltmain.sh?ref=63e5e3e0dbb7207e95c0437499b980a304665589"}, {"sha": "dc01d27d3a6b9c557f87128562ead1e7ce48c019", "filename": "libffi/missing", "status": "added", "additions": 134, "deletions": 0, "changes": 134, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63e5e3e0dbb7207e95c0437499b980a304665589/libffi%2Fmissing", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63e5e3e0dbb7207e95c0437499b980a304665589/libffi%2Fmissing", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fmissing?ref=63e5e3e0dbb7207e95c0437499b980a304665589", "patch": "@@ -0,0 +1,134 @@\n+#! /bin/sh\n+# Common stub for a few missing GNU programs while installing.\n+# Copyright (C) 1996, 1997 Free Software Foundation, Inc.\n+# Franc,ois Pinard <pinard@iro.umontreal.ca>, 1996.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 2, or (at your option)\n+# any later version.\n+\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+\n+# You should have received a copy of the GNU General Public License\n+# along with this program; if not, write to the Free Software\n+# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA\n+# 02111-1307, USA.\n+\n+if test $# -eq 0; then\n+  echo 1>&2 \"Try \\`$0 --help' for more information\"\n+  exit 1\n+fi\n+\n+case \"$1\" in\n+\n+  -h|--h|--he|--hel|--help)\n+    echo \"\\\n+$0 [OPTION]... PROGRAM [ARGUMENT]...\n+\n+Handle \\`PROGRAM [ARGUMENT]...' for when PROGRAM is missing, or return an\n+error status if there is no known handling for PROGRAM.\n+\n+Options:\n+  -h, --help      display this help and exit\n+  -v, --version   output version information and exit\n+\n+Supported PROGRAM values:\n+  aclocal      touch file \\`aclocal.m4'\n+  autoconf     touch file \\`configure'\n+  autoheader   touch file \\`config.h.in'\n+  automake     touch all \\`Makefile.in' files\n+  bison        touch file \\`y.tab.c'\n+  makeinfo     touch the output file\n+  yacc         touch file \\`y.tab.c'\"\n+    ;;\n+\n+  -v|--v|--ve|--ver|--vers|--versi|--versio|--version)\n+    echo \"missing - GNU libit 0.0\"\n+    ;;\n+\n+  -*)\n+    echo 1>&2 \"$0: Unknown \\`$1' option\"\n+    echo 1>&2 \"Try \\`$0 --help' for more information\"\n+    exit 1\n+    ;;\n+\n+  aclocal)\n+    echo 1>&2 \"\\\n+WARNING: \\`$1' is missing on your system.  It should be needed only if\n+         you modified \\`acinclude.m4' or \\`configure.in'.  You might want\n+         to install the \\`Automake' and \\`Perl' packages.  Grab them from\n+         any GNU archive site.\"\n+    touch aclocal.m4\n+    ;;\n+\n+  autoconf)\n+    echo 1>&2 \"\\\n+WARNING: \\`$1' is missing on your system.  It should be needed only if\n+         you modified \\`configure.in'.  You might want to install the\n+         \\`Autoconf' and \\`GNU m4' packages.  Grab them from any GNU\n+         archive site.\"\n+    touch configure\n+    ;;\n+\n+  autoheader)\n+    echo 1>&2 \"\\\n+WARNING: \\`$1' is missing on your system.  It should be needed only if\n+         you modified \\`acconfig.h' or \\`configure.in'.  You might want\n+         to install the \\`Autoconf' and \\`GNU m4' packages.  Grab them\n+         from any GNU archive site.\"\n+    touch config.h.in\n+    ;;\n+\n+  automake)\n+    echo 1>&2 \"\\\n+WARNING: \\`$1' is missing on your system.  It should be needed only if\n+         you modified \\`Makefile.am', \\`acinclude.m4' or \\`configure.in'.\n+         You might want to install the \\`Automake' and \\`Perl' packages.\n+         Grab them from any GNU archive site.\"\n+    find . -type f -name Makefile.am -print \\\n+      | sed 's/^\\(.*\\).am$/touch \\1.in/' \\\n+      | sh\n+    ;;\n+\n+  bison|yacc)\n+    echo 1>&2 \"\\\n+WARNING: \\`$1' is missing on your system.  You should only need it if\n+\tyou modified a \\`.y' file.  You may need the \\`Bison' package\n+\tin order for those modifications to take effect.  You can get\n+\t\\`Bison' from any GNU archive site.\"\n+    touch y.tab.c\n+    ;;\n+\n+  makeinfo)\n+    echo 1>&2 \"\\\n+WARNING: \\`$1' is missing on your system.  It should be needed only if\n+         you modified a \\`.texi' or \\`.texinfo' file, or any other file\n+         indirectly affecting the aspect of the manual.  The spurious\n+         call might also be the consequence of using a buggy \\`make' (AIX,\n+         DU, IRIX).  You might want to install the \\`Texinfo' package or\n+         the \\`GNU make' package.  Grab either from any GNU archive site.\"\n+    file=`echo \"$*\" | sed -n 's/.*-o \\([^ ]*\\).*/\\1/p'`\n+    if test -z \"$file\"; then\n+      file=`echo \"$*\" | sed 's/.* \\([^ ]*\\) *$/\\1/'`\n+      file=`sed -n '/^@setfilename/ { s/.* \\([^ ]*\\) *$/\\1/; p; q; }' $file`\n+    fi\n+    touch $file\n+    ;;\n+\n+  *)\n+    echo 1>&2 \"\\\n+WARNING: \\`$1' is needed, and you do not seem to have it handy on your\n+         system.  You might have modified some files without having the\n+         proper tools for further handling them.  Check the \\`README' file,\n+         it often tells you about the needed prerequirements for installing\n+         this package.  You may also peek at any GNU archive site, in case\n+         some other package would contain this missing \\`$1' program.\"\n+    exit 1\n+    ;;\n+esac\n+\n+exit 0"}, {"sha": "cd1fe0a7947c8ef25c705fb074e19baf1e4558f6", "filename": "libffi/mkinstalldirs", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63e5e3e0dbb7207e95c0437499b980a304665589/libffi%2Fmkinstalldirs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63e5e3e0dbb7207e95c0437499b980a304665589/libffi%2Fmkinstalldirs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fmkinstalldirs?ref=63e5e3e0dbb7207e95c0437499b980a304665589", "patch": "@@ -0,0 +1,32 @@\n+#! /bin/sh\n+# mkinstalldirs --- make directory hierarchy\n+# Author: Noah Friedman <friedman@prep.ai.mit.edu>\n+# Created: 1993-05-16\n+# Public domain\n+\n+errstatus=0\n+\n+for file\n+do\n+   set fnord `echo \":$file\" | sed -ne 's/^:\\//#/;s/^://;s/\\// /g;s/^#/\\//;p'`\n+   shift\n+\n+   pathcomp=\n+   for d in ${1+\"$@\"} ; do\n+     pathcomp=\"$pathcomp$d\"\n+     case \"$pathcomp\" in\n+       -* ) pathcomp=./$pathcomp ;;\n+     esac\n+\n+     if test ! -d \"$pathcomp\"; then\n+        echo \"mkdir $pathcomp\" 1>&2\n+        mkdir \"$pathcomp\" || errstatus=$?\n+     fi\n+\n+     pathcomp=\"$pathcomp/\"\n+   done\n+done\n+\n+exit $errstatus\n+\n+# mkinstalldirs ends here"}, {"sha": "e3d807ab196ba2472d6e5db80a1aa739fc35bcf0", "filename": "libffi/src/alpha/ffi.c", "status": "added", "additions": 199, "deletions": 0, "changes": 199, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63e5e3e0dbb7207e95c0437499b980a304665589/libffi%2Fsrc%2Falpha%2Fffi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63e5e3e0dbb7207e95c0437499b980a304665589/libffi%2Fsrc%2Falpha%2Fffi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Falpha%2Fffi.c?ref=63e5e3e0dbb7207e95c0437499b980a304665589", "patch": "@@ -0,0 +1,199 @@\n+/* -----------------------------------------------------------------------\n+   ffi.c - Copyright (c) 1998 Cygnus Solutions\n+   \n+   Alpha Foreign Function Interface \n+\n+   $Id: ffi.c,v 1.1.1.1 1998/11/29 16:48:16 green Exp $\n+\n+   Permission is hereby granted, free of charge, to any person obtaining\n+   a copy of this software and associated documentation files (the\n+   ``Software''), to deal in the Software without restriction, including\n+   without limitation the rights to use, copy, modify, merge, publish,\n+   distribute, sublicense, and/or sell copies of the Software, and to\n+   permit persons to whom the Software is furnished to do so, subject to\n+   the following conditions:\n+\n+   The above copyright notice and this permission notice shall be included\n+   in all copies or substantial portions of the Software.\n+\n+   THE SOFTWARE IS PROVIDED ``AS IS'', WITHOUT WARRANTY OF ANY KIND, EXPRESS\n+   OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n+   MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n+   IN NO EVENT SHALL CYGNUS SOLUTIONS BE LIABLE FOR ANY CLAIM, DAMAGES OR\n+   OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\n+   ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n+   OTHER DEALINGS IN THE SOFTWARE.\n+   ----------------------------------------------------------------------- */\n+\n+#include <ffi.h>\n+#include <ffi_common.h>\n+\n+#include <stdlib.h>\n+\n+/* ffi_prep_args is called by the assembly routine once stack space\n+   has been allocated for the function's arguments */\n+\n+static void\n+ffi_prep_args(char *stack, extended_cif *ecif, int bytes, int flags)\n+{\n+  register long i, avn;\n+  register void **p_argv;\n+  register char *argp;\n+  register ffi_type **p_arg;\n+\n+  /* To streamline things in the assembly code, we always allocate 12\n+     words for loading up the int and fp argument registers.  The layout\n+     is as when processing varargs: the 6 fp args, the 6 int args, then\n+     the incoming stack.  ARGP points to the first int slot.  */\n+  argp = stack + 6 * SIZEOF_ARG;\n+  memset (stack, 0, 12 * SIZEOF_ARG);\n+\n+  if ( ecif->cif->rtype->type == FFI_TYPE_STRUCT )\n+    {\n+      *(void **) argp = ecif->rvalue;\n+      argp += sizeof(void *);\n+    }\n+\n+  i = 0;\n+  avn = ecif->cif->nargs;\n+  p_arg = ecif->cif->arg_types;\n+  p_argv = ecif->avalue;\n+  while (i < avn)\n+    {\n+      size_t z = ALIGN((*p_arg)->size, SIZEOF_ARG);\n+\n+      switch ((*p_arg)->type)\n+\t{\n+\tcase FFI_TYPE_SINT8:\n+\t  *(SINT64 *) argp = *(SINT8 *)(* p_argv);\n+\t  break;\n+\t\t  \n+\tcase FFI_TYPE_UINT8:\n+\t  *(UINT64 *) argp = *(UINT8 *)(* p_argv);\n+\t  break;\n+\t\t  \n+\tcase FFI_TYPE_SINT16:\n+\t  *(SINT64 *) argp = *(SINT16 *)(* p_argv);\n+\t  break;\n+\t\t  \n+\tcase FFI_TYPE_UINT16:\n+\t  *(UINT64 *) argp = *(UINT16 *)(* p_argv);\n+\t  break;\n+\t\t  \n+\tcase FFI_TYPE_SINT32:\n+\t  *(SINT64 *) argp = *(SINT32 *)(* p_argv);\n+\t  break;\n+\t\t  \n+\tcase FFI_TYPE_UINT32:\n+\t  *(UINT64 *) argp = *(UINT32 *)(* p_argv);\n+\t  break;\n+\n+\tcase FFI_TYPE_SINT64:\n+\tcase FFI_TYPE_UINT64:\n+\tcase FFI_TYPE_POINTER:\n+\t  *(UINT64 *) argp = *(UINT64 *)(* p_argv);\n+\t  break;\n+\n+\tcase FFI_TYPE_FLOAT:\n+\t  if (argp - stack < 12 * SIZEOF_ARG)\n+\t    {\n+\t      /* Note the conversion -- all the fp regs are loaded as\n+\t\t doubles.  The in-register format is the same.  */\n+\t      *(double *) (argp - 6 * SIZEOF_ARG) = *(float *)(* p_argv);\n+\t    }\n+\t  else\n+\t    *(float *) argp = *(float *)(* p_argv);\n+\t  break;\n+\n+\tcase FFI_TYPE_DOUBLE:\n+\t  if (argp - stack < 12 * SIZEOF_ARG)\n+\t    *(double *) (argp - 6 * SIZEOF_ARG) = *(double *)(* p_argv);\n+\t  else\n+\t    *(double *) argp = *(double *)(* p_argv);\n+\t  break;\n+\n+\tcase FFI_TYPE_STRUCT:\n+\t  memcpy(argp, *p_argv, (*p_arg)->size);\n+\t  break;\n+\n+\tdefault:\n+\t  FFI_ASSERT(0);\n+\t}\n+\n+      argp += z;\n+      i++, p_arg++, p_argv++;\n+    }\n+}\n+\n+/* Perform machine dependent cif processing */\n+ffi_status\n+ffi_prep_cif_machdep(ffi_cif *cif)\n+{\n+  /* Adjust cif->bytes. to include 12 words for the temporary register\n+     argument loading area.  This will be removed before the call.  */\n+\n+  cif->bytes += 6*SIZEOF_ARG;\n+  if (cif->bytes < 12*SIZEOF_ARG)\n+    cif->bytes = 12*SIZEOF_ARG;\n+\n+  /* The stack must be double word aligned, so round bytes up\n+     appropriately. */\n+\n+  cif->bytes = ALIGN(cif->bytes, 2*sizeof(void*));\n+\n+  /* Set the return type flag */\n+  switch (cif->rtype->type)\n+    {\n+    case FFI_TYPE_VOID:\n+    case FFI_TYPE_STRUCT:\n+      cif->flags = cif->rtype->type;\n+      break;\n+\n+    case FFI_TYPE_FLOAT:\n+      cif->flags = FFI_TYPE_FLOAT;\n+      break;\n+\n+    case FFI_TYPE_DOUBLE:\n+      cif->flags = FFI_TYPE_DOUBLE;\n+      break;\n+\n+    default:\n+      cif->flags = FFI_TYPE_INT;\n+      break;\n+    }\n+  \n+  return FFI_OK;\n+}\n+\n+extern int ffi_call_osf(void (*)(char *, extended_cif *, int, int), \n+\t\t\textended_cif *, unsigned, \n+\t\t\tunsigned, unsigned *, void (*)());\n+\n+void\n+ffi_call(ffi_cif *cif, void (*fn)(), void *rvalue, void **avalue)\n+{\n+  extended_cif ecif;\n+\n+  ecif.cif = cif;\n+  ecif.avalue = avalue;\n+  \n+  /* If the return value is a struct and we don't have a return\n+     value address then we need to make one.  */\n+  \n+  if (rvalue == NULL && cif->rtype->type == FFI_TYPE_STRUCT)\n+    ecif.rvalue = alloca(cif->rtype->size);\n+  else\n+    ecif.rvalue = rvalue;\n+    \n+  switch (cif->abi) \n+    {\n+    case FFI_OSF:\n+      ffi_call_osf(ffi_prep_args, &ecif, cif->bytes, \n+\t\t   cif->flags, rvalue, fn);\n+      break;\n+\n+    default:\n+      FFI_ASSERT(0);\n+      break;\n+    }\n+}"}, {"sha": "2078683cfb3bc8ce335d48d19e1d0e1efbee27ad", "filename": "libffi/src/alpha/osf.S", "status": "added", "additions": 118, "deletions": 0, "changes": 118, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63e5e3e0dbb7207e95c0437499b980a304665589/libffi%2Fsrc%2Falpha%2Fosf.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63e5e3e0dbb7207e95c0437499b980a304665589/libffi%2Fsrc%2Falpha%2Fosf.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Falpha%2Fosf.S?ref=63e5e3e0dbb7207e95c0437499b980a304665589", "patch": "@@ -0,0 +1,118 @@\n+/* -----------------------------------------------------------------------\n+   osf.S - Copyright (c) 1998 Cygnus Solutions\n+   \n+   Alpha/OSF Foreign Function Interface \n+\n+   $Id: osf.S,v 1.1.1.1 1998/11/29 16:48:16 green Exp $\n+\n+   Permission is hereby granted, free of charge, to any person obtaining\n+   a copy of this software and associated documentation files (the\n+   ``Software''), to deal in the Software without restriction, including\n+   without limitation the rights to use, copy, modify, merge, publish,\n+   distribute, sublicense, and/or sell copies of the Software, and to\n+   permit persons to whom the Software is furnished to do so, subject to\n+   the following conditions:\n+\n+   The above copyright notice and this permission notice shall be included\n+   in all copies or substantial portions of the Software.\n+\n+   THE SOFTWARE IS PROVIDED ``AS IS'', WITHOUT WARRANTY OF ANY KIND, EXPRESS\n+   OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n+   MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n+   IN NO EVENT SHALL CYGNUS SOLUTIONS BE LIABLE FOR ANY CLAIM, DAMAGES OR\n+   OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\n+   ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n+   OTHER DEALINGS IN THE SOFTWARE.\n+   ----------------------------------------------------------------------- */\n+\n+#define LIBFFI_ASM\t\n+#include <ffi.h>\n+\n+#define callback $16\n+#define ecifp\t $17\n+#define bytes\t $18\n+#define flags\t $19\n+#define raddr    $20\n+#define fn       $21\n+\n+#define flags_ofs\t16\n+#define raddr_ofs\t24\n+#define fn_ofs\t\t32\n+\n+#define SIZEOF_FRAME\t(6*8)\n+\n+\t.text\n+\t.align\t4\n+\t.globl\tffi_call_osf\n+\t.ent\tffi_call_osf\n+\t\n+ffi_call_osf:\n+\tlda\t$30, -SIZEOF_FRAME($30)\n+\tstq\t$26, 0($30)\n+\tstq\t$15, 8($30)\n+\tstq\tflags, flags_ofs($30)\n+\tstq\traddr, raddr_ofs($30)\n+\tstq\tfn, fn_ofs($30)\n+\tmov\t$30, $15\n+\t.frame\t$15, SIZEOF_FRAME, $26, 0\n+        .mask   0x4008000, -SIZEOF_FRAME\n+\t.prologue 0\n+\n+\tmov\tcallback, $27\t\t# mov callback into place\n+\tsubq\t$30, bytes, $30\t\t# allocate stack space\n+\t\n+\t# Call ffi_prep_args; ecif, bytes and flags are already in place.\n+\tmov\t$30, $16\t\t# push stack arg\n+\tjsr\t$26, ($27), 0\n+\n+\t# Load up all of the (potential) argument registers.\n+\tldt\t$f16, 0($30)\n+\tldt\t$f17, 8($30)\n+\tldt\t$f18, 16($30)\n+\tldt\t$f19, 24($30)\n+\tldt\t$f20, 32($30)\n+\tldt\t$f21, 40($30)\n+\tldq\t$16, 48($30)\n+\tldq\t$17, 56($30)\n+\tldq\t$18, 64($30)\n+\tldq\t$19, 72($30)\n+\tldq\t$20, 80($30)\n+\tldq\t$21, 88($30)\n+\n+\t# Get rid of the arg reg temp space and call the function.\n+\tldq\t$27, fn_ofs($15)\n+\tlda\t$30, 12*8($30)\n+\tjsr\t$26, ($27), 0\n+\n+\t# If the return value pointer is NULL, assume no return value.\n+\tldq\traddr, raddr_ofs($15)\n+\tbeq\traddr, $noretval\n+\n+\tldq\tflags, flags_ofs($15)\n+\tcmpeq\tflags, FFI_TYPE_INT, $1\n+\tbne\t$1, $retint\n+\tcmpeq\tflags, FFI_TYPE_FLOAT, $2\n+\tbne\t$2, $retfloat\n+\tcmpeq\tflags, FFI_TYPE_DOUBLE, $3\n+\tbne\t$3, $retdouble\n+\tbr\t$retstruct\n+\t\n+\t.align 3\n+$retint:\n+\tstq\t$0, 0(raddr)\n+\tbr\t$noretval\n+$retfloat:\n+\tsts\t$f0, 0(raddr)\n+\tbr\t$noretval\n+$retdouble:\n+\tstt\t$f0, 0(raddr)\n+\n+$retstruct:\n+$noretval:\n+\tmov\t$15, $30\n+\tldq\t$26, 0($15)\n+\tldq\t$15, 8($15)\n+\tlda\t$30, SIZEOF_FRAME($30)\n+\tret\n+\n+\t.end\tffi_call_osf"}, {"sha": "5933c6bf9ff86eed0ee8e670a59b4d6e74921426", "filename": "libffi/src/arm/ffi.c", "status": "added", "additions": 185, "deletions": 0, "changes": 185, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63e5e3e0dbb7207e95c0437499b980a304665589/libffi%2Fsrc%2Farm%2Fffi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63e5e3e0dbb7207e95c0437499b980a304665589/libffi%2Fsrc%2Farm%2Fffi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Farm%2Fffi.c?ref=63e5e3e0dbb7207e95c0437499b980a304665589", "patch": "@@ -0,0 +1,185 @@\n+/* -----------------------------------------------------------------------\n+   ffi.c - Copyright (c) 1998  Cygnus Solutions\n+   \n+   ARM Foreign Function Interface \n+\n+   $Id: ffi.c,v 1.1.1.1 1998/11/29 16:48:16 green Exp $\n+\n+   Permission is hereby granted, free of charge, to any person obtaining\n+   a copy of this software and associated documentation files (the\n+   ``Software''), to deal in the Software without restriction, including\n+   without limitation the rights to use, copy, modify, merge, publish,\n+   distribute, sublicense, and/or sell copies of the Software, and to\n+   permit persons to whom the Software is furnished to do so, subject to\n+   the following conditions:\n+\n+   The above copyright notice and this permission notice shall be included\n+   in all copies or substantial portions of the Software.\n+\n+   THE SOFTWARE IS PROVIDED ``AS IS'', WITHOUT WARRANTY OF ANY KIND, EXPRESS\n+   OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n+   MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n+   IN NO EVENT SHALL CYGNUS SOLUTIONS BE LIABLE FOR ANY CLAIM, DAMAGES OR\n+   OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\n+   ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n+   OTHER DEALINGS IN THE SOFTWARE.\n+   ----------------------------------------------------------------------- */\n+\n+#include <ffi.h>\n+#include <ffi_common.h>\n+\n+#include <stdlib.h>\n+\n+/* ffi_prep_args is called by the assembly routine once stack space\n+   has been allocated for the function's arguments */\n+\n+/*@-exportheader@*/\n+void ffi_prep_args(char *stack, extended_cif *ecif)\n+/*@=exportheader@*/\n+{\n+  register unsigned int i;\n+  register int tmp;\n+  register unsigned int avn;\n+  register void **p_argv;\n+  register char *argp;\n+  register ffi_type **p_arg;\n+\n+  tmp = 0;\n+  argp = stack;\n+\n+  if ( ecif->cif->rtype->type == FFI_TYPE_STRUCT ) {\n+    *(void **) argp = ecif->rvalue;\n+    argp += 4;\n+  }\n+\n+  avn = ecif->cif->nargs;\n+  p_argv = ecif->avalue;\n+\n+  for (i = ecif->cif->nargs, p_arg = ecif->cif->arg_types;\n+       (i != 0) && (avn != 0);\n+       i--, p_arg++)\n+    {\n+      size_t z;\n+\n+      /* Align if necessary */\n+      if (((*p_arg)->alignment - 1) & (unsigned) argp) {\n+\targp = (char *) ALIGN(argp, (*p_arg)->alignment);\n+      }\n+\n+      if (avn != 0) \n+\t{\n+\t  avn--;\n+\t  z = (*p_arg)->size;\n+\t  if (z < sizeof(int))\n+\t    {\n+\t      z = sizeof(int);\n+\t      switch ((*p_arg)->type)\n+\t\t{\n+\t\tcase FFI_TYPE_SINT8:\n+\t\t  *(signed int *) argp = (signed int)*(SINT8 *)(* p_argv);\n+\t\t  break;\n+\t\t  \n+\t\tcase FFI_TYPE_UINT8:\n+\t\t  *(unsigned int *) argp = (unsigned int)*(UINT8 *)(* p_argv);\n+\t\t  break;\n+\t\t  \n+\t\tcase FFI_TYPE_SINT16:\n+\t\t  *(signed int *) argp = (signed int)*(SINT16 *)(* p_argv);\n+\t\t  break;\n+\t\t  \n+\t\tcase FFI_TYPE_UINT16:\n+\t\t  *(unsigned int *) argp = (unsigned int)*(UINT16 *)(* p_argv);\n+\t\t  break;\n+\t\t  \n+\t\tcase FFI_TYPE_STRUCT:\n+\t\t  *(unsigned int *) argp = (unsigned int)*(UINT32 *)(* p_argv);\n+\t\t  break;\n+\n+\t\tdefault:\n+\t\t  FFI_ASSERT(0);\n+\t\t}\n+\t    }\n+\t  else if (z == sizeof(int))\n+\t    {\n+\t      *(unsigned int *) argp = (unsigned int)*(UINT32 *)(* p_argv);\n+\t    }\n+\t  else\n+\t    {\n+\t      memcpy(argp, *p_argv, z);\n+\t    }\n+\t  p_argv++;\n+\t  argp += z;\n+\t}\n+    }\n+  \n+  return;\n+}\n+\n+/* Perform machine dependent cif processing */\n+ffi_status ffi_prep_cif_machdep(ffi_cif *cif)\n+{\n+  /* Set the return type flag */\n+  switch (cif->rtype->type)\n+    {\n+    case FFI_TYPE_VOID:\n+    case FFI_TYPE_STRUCT:\n+    case FFI_TYPE_FLOAT:\n+    case FFI_TYPE_DOUBLE:\n+      cif->flags = (unsigned) cif->rtype->type;\n+      break;\n+\n+    default:\n+      cif->flags = FFI_TYPE_INT;\n+      break;\n+    }\n+\n+  return FFI_OK;\n+}\n+\n+/*@-declundef@*/\n+/*@-exportheader@*/\n+extern void ffi_call_SYSV(void (*)(char *, extended_cif *), \n+\t\t\t  /*@out@*/ extended_cif *, \n+\t\t\t  unsigned, unsigned, \n+\t\t\t  /*@out@*/ unsigned *, \n+\t\t\t  void (*fn)());\n+/*@=declundef@*/\n+/*@=exportheader@*/\n+\n+void ffi_call(/*@dependent@*/ ffi_cif *cif, \n+\t      void (*fn)(), \n+\t      /*@out@*/ void *rvalue, \n+\t      /*@dependent@*/ void **avalue)\n+{\n+  extended_cif ecif;\n+\n+  ecif.cif = cif;\n+  ecif.avalue = avalue;\n+  \n+  /* If the return value is a struct and we don't have a return\t*/\n+  /* value address then we need to make one\t\t        */\n+\n+  if ((rvalue == NULL) && \n+      (cif->rtype->type == FFI_TYPE_STRUCT))\n+    {\n+      /*@-sysunrecog@*/\n+      ecif.rvalue = alloca(cif->rtype->size);\n+      /*@=sysunrecog@*/\n+    }\n+  else\n+    ecif.rvalue = rvalue;\n+    \n+  \n+  switch (cif->abi) \n+    {\n+    case FFI_SYSV:\n+      /*@-usedef@*/\n+      ffi_call_SYSV(ffi_prep_args, &ecif, cif->bytes, \n+\t\t    cif->flags, ecif.rvalue, fn);\n+      /*@=usedef@*/\n+      break;\n+    default:\n+      FFI_ASSERT(0);\n+      break;\n+    }\n+}"}, {"sha": "14230c4b25fe65970f2b9f84a064a19172200c63", "filename": "libffi/src/arm/sysv.S", "status": "added", "additions": 119, "deletions": 0, "changes": 119, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63e5e3e0dbb7207e95c0437499b980a304665589/libffi%2Fsrc%2Farm%2Fsysv.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63e5e3e0dbb7207e95c0437499b980a304665589/libffi%2Fsrc%2Farm%2Fsysv.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Farm%2Fsysv.S?ref=63e5e3e0dbb7207e95c0437499b980a304665589", "patch": "@@ -0,0 +1,119 @@\n+/* -----------------------------------------------------------------------\n+   sysv.S - Copyright (c) 1998 Cygnus Solutions\n+   \n+   ARM Foreign Function Interface \n+\n+   $Id: sysv.S,v 1.1.1.1 1998/11/29 16:48:16 green Exp $\n+\n+   Permission is hereby granted, free of charge, to any person obtaining\n+   a copy of this software and associated documentation files (the\n+   ``Software''), to deal in the Software without restriction, including\n+   without limitation the rights to use, copy, modify, merge, publish,\n+   distribute, sublicense, and/or sell copies of the Software, and to\n+   permit persons to whom the Software is furnished to do so, subject to\n+   the following conditions:\n+\n+   The above copyright notice and this permission notice shall be included\n+   in all copies or substantial portions of the Software.\n+\n+   THE SOFTWARE IS PROVIDED ``AS IS'', WITHOUT WARRANTY OF ANY KIND, EXPRESS\n+   OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n+   MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n+   IN NO EVENT SHALL CYGNUS SOLUTIONS BE LIABLE FOR ANY CLAIM, DAMAGES OR\n+   OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\n+   ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n+   OTHER DEALINGS IN THE SOFTWARE.\n+   ----------------------------------------------------------------------- */\n+\n+#define LIBFFI_ASM\t\n+#include <ffi.h>\n+#ifdef HAVE_MACHINE_ASM_H\n+#include <machine/asm.h>\n+#else\n+/* XXX these lose for some platforms, I'm sure. */\n+#define CNAME(x) x\n+#define ENTRY(x) .globl CNAME(x); .type CNAME(x),%function; CNAME(x):\n+#endif\n+\t\n+.text\n+\n+\t# a1:   ffi_prep_args\n+\t# a2:   &ecif\n+\t# a3:   cif->bytes\n+\t# a4:   fig->flags\n+\t# sp+0: ecif.rvalue\n+\t# sp+4: fn\n+\n+\t# This assumes we are using gas.\n+ENTRY(ffi_call_SYSV)\n+\t# Save registers\n+        stmfd sp!, {a1-a4, fp, lr}\n+\tmov   fp, sp\n+\n+\t# Make room for all of the new args.\n+\tsub   sp, fp, a3\n+\n+\t# Place all of the ffi_prep_args in position\n+\tmov   ip, a1\n+\tmov   a1, sp\n+\t#     a2 already set\n+\n+\t# And call\n+\tmov   lr, pc\n+\tmov   pc, ip\n+\n+\t# move first 4 parameters in registers\n+\tldr   a1, [sp, #0]\n+\tldr   a2, [sp, #4]\n+\tldr   a3, [sp, #8]\n+        ldr   a4, [sp, #12]\n+\n+\t# and adjust stack\n+\tldr   ip, [fp, #8]\n+        cmp   ip, #16\n+\tmovge ip, #16\n+        add   sp, sp, ip\n+\n+\t# call function\n+\tmov   lr, pc\n+\tldr   pc, [fp, #28]\n+\n+\t# Remove the space we pushed for the args\n+\tmov   sp, fp\n+\n+\t# Load a3 with the pointer to storage for the return value\n+\tldr   a3, [sp, #24]\n+\n+\t# Load a4 with the return type code \n+\tldr   a4, [sp, #12]\n+\n+\t# If the return value pointer is NULL, assume no return value.\n+\tcmp   a3, #0\n+\tbeq   epilogue\n+\n+# return INT\n+\tcmp   a4, #FFI_TYPE_INT\n+\tstreq a1, [a3]\n+\tbeq   epilogue\n+\n+# return FLOAT\n+\tcmp   a4, #FFI_TYPE_FLOAT\n+        bne   retdouble\n+\tstfs  f0, [a3]\n+\tb     epilogue\n+\n+# return DOUBLE or LONGDOUBLE\n+retdouble:\n+\tcmp   a4, #FFI_TYPE_DOUBLE\n+\tbne   epilogue\n+\n+\tstfs  f0, [a3, #0]\n+\tstfs  f1, [a3, #4]\n+\tb     epilogue\n+\n+epilogue:\n+        ldmfd sp!, {a1-a4, fp, pc}\n+\n+.ffi_call_SYSV_end:\n+        .size    CNAME(ffi_call_SYSV),.ffi_call_SYSV_end-CNAME(ffi_call_SYSV)\n+"}, {"sha": "bf9252021311233899dc1ef021763340d761c683", "filename": "libffi/src/debug.c", "status": "added", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63e5e3e0dbb7207e95c0437499b980a304665589/libffi%2Fsrc%2Fdebug.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63e5e3e0dbb7207e95c0437499b980a304665589/libffi%2Fsrc%2Fdebug.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fdebug.c?ref=63e5e3e0dbb7207e95c0437499b980a304665589", "patch": "@@ -0,0 +1,67 @@\n+/* -----------------------------------------------------------------------\n+   debug.c - Copyright (c) 1996 Cygnus Solutions\n+\n+   $Id: debug.c,v 1.1.1.1 1998/11/29 16:48:16 green Exp $\n+\n+   Permission is hereby granted, free of charge, to any person obtaining\n+   a copy of this software and associated documentation files (the\n+   ``Software''), to deal in the Software without restriction, including\n+   without limitation the rights to use, copy, modify, merge, publish,\n+   distribute, sublicense, and/or sell copies of the Software, and to\n+   permit persons to whom the Software is furnished to do so, subject to\n+   the following conditions:\n+\n+   The above copyright notice and this permission notice shall be included\n+   in all copies or substantial portions of the Software.\n+\n+   THE SOFTWARE IS PROVIDED ``AS IS'', WITHOUT WARRANTY OF ANY KIND, EXPRESS\n+   OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n+   MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n+   IN NO EVENT SHALL CYGNUS SOLUTIONS BE LIABLE FOR ANY CLAIM, DAMAGES OR\n+   OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\n+   ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n+   OTHER DEALINGS IN THE SOFTWARE.\n+   ----------------------------------------------------------------------- */\n+\n+#include <ffi.h>\n+#include <ffi_common.h>\n+#include <stdlib.h>\n+#include <stdio.h>\n+\n+/* General debugging routines */\n+\n+void ffi_stop_here(void)\n+{\n+  /* This function is only useful for debugging purposes.\n+     Place a breakpoint on ffi_stop_here to be notified of \n+     significant events. */\n+}\n+\n+/* This function should only be called via the FFI_ASSERT() macro */\n+\n+int ffi_assert(char *file, int line)\n+{\n+  fprintf(stderr, \"ASSERTION FAILURE: %s line %d\\n\", file, line);\n+  ffi_stop_here();\n+  abort();\n+\n+  /* This has to return something for the compiler not to complain */\n+  /*@notreached@*/\n+  return 0;\n+}\n+\n+/* Perform a sanity check on an ffi_type structure */\n+\n+bool ffi_type_test(ffi_type *a)\n+{\n+  /*@-usedef@*/\n+  FFI_ASSERT(a->type <= FFI_TYPE_LAST);\n+  FFI_ASSERT(a->type > FFI_TYPE_VOID ? a->size > 0 : 1);\n+  FFI_ASSERT(a->type > FFI_TYPE_VOID ? a->alignment > 0 : 1);\n+  FFI_ASSERT(a->type == FFI_TYPE_STRUCT ? a->elements != NULL : 1);\n+  /*@=usedef@*/\n+\n+  /* This is a silly thing to return, but it keeps the compiler from\n+     issuing warnings about \"a\" not being used in non-debug builds. */\n+  return (a != NULL);\n+}"}, {"sha": "17d5d392c0b9c990366169216aa078ff8e1aeddb", "filename": "libffi/src/ffitest.c", "status": "added", "additions": 701, "deletions": 0, "changes": 701, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63e5e3e0dbb7207e95c0437499b980a304665589/libffi%2Fsrc%2Fffitest.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63e5e3e0dbb7207e95c0437499b980a304665589/libffi%2Fsrc%2Fffitest.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fffitest.c?ref=63e5e3e0dbb7207e95c0437499b980a304665589", "patch": "@@ -0,0 +1,701 @@\n+/* -----------------------------------------------------------------------\n+   ffitest.c - Copyright (c) 1996, 1997, 1998  Cygnus Solutions\n+\n+   $Id: ffitest.c,v 1.1.1.1 1998/11/29 16:48:16 green Exp $\n+\n+   Permission is hereby granted, free of charge, to any person obtaining\n+   a copy of this software and associated documentation files (the\n+   ``Software''), to deal in the Software without restriction, including\n+   without limitation the rights to use, copy, modify, merge, publish,\n+   distribute, sublicense, and/or sell copies of the Software, and to\n+   permit persons to whom the Software is furnished to do so, subject to\n+   the following conditions:\n+\n+   The above copyright notice and this permission notice shall be included\n+   in all copies or substantial portions of the Software.\n+\n+   THE SOFTWARE IS PROVIDED ``AS IS'', WITHOUT WARRANTY OF ANY KIND, EXPRESS\n+   OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n+   MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n+   IN NO EVENT SHALL CYGNUS SOLUTIONS BE LIABLE FOR ANY CLAIM, DAMAGES OR\n+   OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\n+   ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n+   OTHER DEALINGS IN THE SOFTWARE.\n+   ----------------------------------------------------------------------- */\n+\n+#include <ffi.h>\n+#include <stdio.h>\n+#include <stdlib.h>\n+#include <string.h>\n+#include <float.h>\n+\n+/* This is lame. Long double support is barely there under SunOS 4.x  */\n+#if defined(SPARC) && (SIZEOF_LONG_DOUBLE != 16)\n+#define BROKEN_LONG_DOUBLE\n+#endif\n+\n+#define CHECK(x) !(x) ? fail(__FILE__, __LINE__) : 0 \n+\n+static int fail(char *file, int line)\n+{\n+  fprintf(stderr, \"Test failure: %s line %d\\n\", file, line);\n+  exit(EXIT_FAILURE);\n+  /*@notreached@*/\n+  return 0;\n+}\n+\n+#define MAX_ARGS 256\n+\n+static size_t my_strlen(char *s)\n+{\n+  return (strlen(s));\n+}\n+\n+static int promotion(signed char sc, signed short ss, \n+\t\t     unsigned char uc, unsigned short us)\n+{\n+  int r = (int) sc + (int) ss + (int) uc + (int) us;\n+\n+  return r;\n+}\n+\n+static signed char return_sc(signed char sc)\n+{\n+  return sc;\n+}\n+\n+static unsigned char return_uc(unsigned char uc)\n+{\n+  return uc;\n+}\n+\n+static long long return_ll(long long ll)\n+{\n+  return ll;\n+}\n+\n+static int floating(int a, float b, double c, long double d, int e)\n+{\n+  int i;\n+\n+#if 0\n+  /* This is ifdef'd out for now. long double support under SunOS/gcc\n+     is pretty much non-existent.  You'll get the odd bus error in library\n+     routines like printf().  */\n+  printf(\"%d %f %f %Lf %d\\n\", a, (double)b, c, d, e);\n+#endif\n+\n+  i = (int) ((float)a/b + ((float)c/(float)d));\n+\n+  return i;\n+}\n+\n+static float many(float f1,\n+\t\t  float f2,\n+\t\t  float f3,\n+\t\t  float f4,\n+\t\t  float f5,\n+\t\t  float f6,\n+\t\t  float f7,\n+\t\t  float f8,\n+\t\t  float f9,\n+\t\t  float f10,\n+\t\t  float f11,\n+\t\t  float f12,\n+\t\t  float f13)\n+{\n+#if 0\n+  printf(\"%f %f %f %f %f %f %f %f %f %f %f %f %f\\n\",\n+\t (double) f1, (double) f2, (double) f3, (double) f4, (double) f5, \n+\t (double) f6, (double) f7, (double) f8, (double) f9, (double) f10,\n+\t (double) f11, (double) f12, (double) f13);\n+#endif\n+\n+  return ((f1/f2+f3/f4+f5/f6+f7/f8+f9/f10+f11/f12) * f13);\n+}\n+\n+static double dblit(float f)\n+{\n+  return f/3.0;\n+}\n+\n+static long double ldblit(float f)\n+{\n+  return (long double) (((long double) f)/ (long double) 3.0);\n+}\n+\n+typedef struct\n+{\n+  unsigned char uc;\n+  double d;\n+  unsigned int ui;\n+} test_structure_1;\n+\n+typedef struct\n+{\n+  double d1;\n+  double d2;\n+} test_structure_2;\n+\n+typedef struct\n+{\n+  int si;\n+} test_structure_3;\n+\n+typedef struct\n+{\n+  unsigned ui1;\n+  unsigned ui2;\n+  unsigned ui3;\n+} test_structure_4;\n+\n+typedef struct\n+{\n+  char c1;\n+  char c2;\n+} test_structure_5;\n+\n+static test_structure_1 struct1(test_structure_1 ts)\n+{\n+  /*@-type@*/\n+  ts.uc++;\n+  /*@=type@*/\n+  ts.d--;\n+  ts.ui++;\n+\n+  return ts;\n+}\n+\n+static test_structure_2 struct2(test_structure_2 ts)\n+{\n+  ts.d1--;\n+  ts.d2--;\n+\n+  return ts;\n+}\n+\n+static test_structure_3 struct3(test_structure_3 ts)\n+{\n+  ts.si = -(ts.si*2);\n+\n+  return ts;\n+}\n+\n+static test_structure_4 struct4(test_structure_4 ts)\n+{\n+  ts.ui3 = ts.ui1 * ts.ui2 * ts.ui3;\n+\n+  return ts;\n+}\n+\n+static test_structure_5 struct5(test_structure_5 ts1, test_structure_5 ts2)\n+{\n+  ts1.c1 += ts2.c1;\n+  ts1.c2 -= ts2.c2;\n+\n+  return ts1;\n+}\n+\n+int main(/*@unused@*/ int argc, /*@unused@*/ char *argv[])\n+{\n+  ffi_cif cif;\n+  ffi_type *args[MAX_ARGS];\n+  void *values[MAX_ARGS];\n+  char *s;\n+  signed char sc;\n+  unsigned char uc;\n+  signed short ss;\n+  unsigned short us;\n+  unsigned long ul;\n+  long long ll;\n+  float f;\n+  double d;\n+  long double ld;\n+  signed int si1;\n+  signed int si2;\n+\n+#if defined(ALPHA) || (defined(MIPS) && (_MIPS_SIM == _ABIN32))\n+  long long rint;\n+#else\n+  int rint;\n+#endif\n+  long long rlonglong;\n+\n+  ffi_type ts1_type;\n+  ffi_type ts2_type;\n+  ffi_type ts3_type;\n+  ffi_type ts4_type;  \n+  ffi_type ts5_type;\n+  ffi_type *ts1_type_elements[4];\n+  ffi_type *ts2_type_elements[3];\n+  ffi_type *ts3_type_elements[2];\n+  ffi_type *ts4_type_elements[4];\n+  ffi_type *ts5_type_elements[3];\n+\n+  ts1_type.size = 0;\n+  ts1_type.alignment = 0;\n+  ts1_type.type = FFI_TYPE_STRUCT;\n+\n+  ts2_type.size = 0;\n+  ts2_type.alignment = 0;\n+  ts2_type.type = FFI_TYPE_STRUCT;\n+\n+  ts3_type.size = 0;\n+  ts3_type.alignment = 0;\n+  ts3_type.type = FFI_TYPE_STRUCT;\n+\n+  ts4_type.size = 0;\n+  ts4_type.alignment = 0;\n+  ts4_type.type = FFI_TYPE_STRUCT;\n+\n+  ts5_type.size = 0;\n+  ts5_type.alignment = 0;\n+  ts5_type.type = FFI_TYPE_STRUCT;\n+\n+  /*@-immediatetrans@*/\n+  ts1_type.elements = ts1_type_elements;\n+  ts2_type.elements = ts2_type_elements;\n+  ts3_type.elements = ts3_type_elements;\n+  ts4_type.elements = ts4_type_elements;\n+  ts5_type.elements = ts5_type_elements;\n+  /*@=immediatetrans@*/\n+  \n+  ts1_type_elements[0] = &ffi_type_uchar;\n+  ts1_type_elements[1] = &ffi_type_double;\n+  ts1_type_elements[2] = &ffi_type_uint;\n+  ts1_type_elements[3] = NULL;\n+  \n+  ts2_type_elements[0] = &ffi_type_double;\n+  ts2_type_elements[1] = &ffi_type_double;\n+  ts2_type_elements[2] = NULL;\n+\n+  ts3_type_elements[0] = &ffi_type_sint;\n+  ts3_type_elements[1] = NULL;\n+\n+  ts4_type_elements[0] = &ffi_type_uint;\n+  ts4_type_elements[1] = &ffi_type_uint;\n+  ts4_type_elements[2] = &ffi_type_uint;\n+  ts4_type_elements[3] = NULL;\n+\n+  ts5_type_elements[0] = &ffi_type_schar;\n+  ts5_type_elements[1] = &ffi_type_schar;\n+  ts5_type_elements[2] = NULL;\n+\n+  ul = 0;\n+\n+  /* return value tests */\n+  {\n+#if defined(MIPS) || defined(SPARC) /* || defined(ARM) */\n+    puts (\"long long tests not run. This is a known bug on this architecture.\");\n+#else\n+    args[0] = &ffi_type_sint64;\n+    values[0] = &ll;\n+    \n+    /* Initialize the cif */\n+    CHECK(ffi_prep_cif(&cif, FFI_DEFAULT_ABI, 1, \n+\t\t       &ffi_type_sint64, args) == FFI_OK);\n+\n+    for (ll = 0LL; ll < 100LL; ll++)\n+      {\n+\tul++;\n+\tffi_call(&cif, FFI_FN(return_ll), &rlonglong, values);\n+\tCHECK(rlonglong == ll);\n+      }\n+\n+    for (ll = 55555555555000LL; ll < 55555555555100LL; ll++)\n+      {\n+\tul++;\n+\tffi_call(&cif, FFI_FN(return_ll), &rlonglong, values);\n+\tCHECK(rlonglong == ll);\n+      }\n+#endif\n+\n+    args[0] = &ffi_type_schar;\n+    values[0] = &sc;\n+    \n+    /* Initialize the cif */\n+    CHECK(ffi_prep_cif(&cif, FFI_DEFAULT_ABI, 1, \n+\t\t       &ffi_type_schar, args) == FFI_OK);\n+\n+    for (sc = (signed char) -127; \n+\t sc < (signed char) 127; /*@-type@*/ sc++ /*@=type@*/)\n+      {\n+\tul++;\n+\tffi_call(&cif, FFI_FN(return_sc), &rint, values);\n+\tCHECK(rint == (int) sc);\n+      }\n+\n+    args[0] = &ffi_type_uchar;\n+    values[0] = &uc;\n+    \n+    /* Initialize the cif */\n+    CHECK(ffi_prep_cif(&cif, FFI_DEFAULT_ABI, 1, \n+\t\t       &ffi_type_uchar, args) == FFI_OK);\n+\n+    for (uc = (unsigned char) '\\x00'; \n+\t uc < (unsigned char) '\\xff'; /*@-type@*/ uc++ /*@=type@*/)\n+      {\n+\tul++;\n+\tffi_call(&cif, FFI_FN(return_uc), &rint, values);\n+\tCHECK(rint == (signed int) uc);\n+      }\n+\n+    printf(\"%lu return value tests run\\n\", ul);\n+  }\n+\n+#ifdef BROKEN_LONG_DOUBLE\n+  printf (\"This architecture has broken `long double' support. No floating point\\ntests have been run.\\n\");\n+#else\n+  /* float arg tests */\n+  {\n+    args[0] = &ffi_type_float;\n+    values[0] = &f;\n+\n+    /* Initialize the cif */\n+    CHECK(ffi_prep_cif(&cif, FFI_DEFAULT_ABI, 1, \n+\t\t       &ffi_type_longdouble, args) == FFI_OK);\n+\n+    f = 3.14159;\n+\n+#if 0\n+  /* This is ifdef'd out for now. long double support under SunOS/gcc\n+     is pretty much non-existent.  You'll get the odd bus error in library\n+     routines like printf().  */\n+    printf (\"%Lf\\n\", ldblit(f));\n+#endif\n+    ld = 666;\n+    ffi_call(&cif, FFI_FN(ldblit), &ld, values);\n+\n+#if 0\n+  /* This is ifdef'd out for now. long double support under SunOS/gcc\n+     is pretty much non-existent.  You'll get the odd bus error in library\n+     routines like printf().  */\n+    printf (\"%Lf, %Lf, %Lf, %Lf\\n\", ld, ldblit(f), ld - ldblit(f), LDBL_EPSILON);\n+#endif\n+\n+    /* These are not always the same!! Check for a reasonable delta */\n+    /*@-realcompare@*/\n+    if (ld - ldblit(f) < LDBL_EPSILON)\n+    /*@=realcompare@*/\n+\tputs(\"long double return value tests ok!\");\n+    else\n+        CHECK(0);\n+  }\n+\n+  /* float arg tests */\n+  {\n+    args[0] = &ffi_type_sint;\n+    values[0] = &si1;\n+    args[1] = &ffi_type_float;\n+    values[1] = &f;\n+    args[2] = &ffi_type_double;\n+    values[2] = &d;\n+    args[3] = &ffi_type_longdouble;\n+    values[3] = &ld;\n+    args[4] = &ffi_type_sint;\n+    values[4] = &si2;\n+    \n+    /* Initialize the cif */\n+    CHECK(ffi_prep_cif(&cif, FFI_DEFAULT_ABI, 5,\n+\t\t       &ffi_type_sint, args) == FFI_OK);\n+\n+    si1 = 6;\n+    f = 3.14159;\n+    d = (double)1.0/(double)3.0;\n+    ld = 2.71828182846L;\n+    si2 = 10;\n+\n+    floating (si1, f, d, ld, si2);\n+\n+    ffi_call(&cif, FFI_FN(floating), &rint, values);\n+\n+    printf (\"%d vs %d\\n\", rint, floating (si1, f, d, ld, si2));\n+\n+    CHECK(rint == floating(si1, f, d, ld, si2));\n+\n+    printf(\"float arg tests ok!\\n\");\n+  }\n+#endif\n+\n+  /* strlen tests */\n+  {\n+    args[0] = &ffi_type_pointer;\n+    values[0] = (void*) &s;\n+    \n+    /* Initialize the cif */\n+    CHECK(ffi_prep_cif(&cif, FFI_DEFAULT_ABI, 1, \n+\t\t       &ffi_type_sint, args) == FFI_OK);\n+\n+    s = \"a\";\n+    ffi_call(&cif, FFI_FN(my_strlen), &rint, values);\n+    CHECK(rint == 1);\n+\n+    s = \"1234567\";\n+    ffi_call(&cif, FFI_FN(my_strlen), &rint, values);\n+    CHECK(rint == 7);\n+\n+    s = \"1234567890123456789012345\";\n+    ffi_call(&cif, FFI_FN(my_strlen), &rint, values);\n+    CHECK(rint == 25);\n+\n+    printf(\"strlen tests passed\\n\");\n+  }\n+\n+  /* float arg tests */\n+  {\n+    args[0] = &ffi_type_float;\n+    values[0] = &f;\n+    \n+    /* Initialize the cif */\n+    CHECK(ffi_prep_cif(&cif, FFI_DEFAULT_ABI, 1, \n+\t\t       &ffi_type_double, args) == FFI_OK);\n+\n+    f = 3.14159;\n+\n+    ffi_call(&cif, FFI_FN(dblit), &d, values);\n+\n+    /* These are not always the same!! Check for a reasonable delta */\n+    /*@-realcompare@*/\n+    CHECK(d - dblit(f) < DBL_EPSILON);\n+    /*@=realcompare@*/\n+\n+    printf(\"double return value tests ok!\\n\");\n+  }\n+\n+  /* many arg tests */\n+  {\n+    float ff;\n+    float fa[13];\n+    \n+    for (ul = 0; ul < 13; ul++)\n+      {\n+\targs[ul] = &ffi_type_float;\n+\tvalues[ul] = &fa[ul];\n+\tfa[ul] = (float) ul;\n+      }\n+\n+    /* Initialize the cif */\n+    CHECK(ffi_prep_cif(&cif, FFI_DEFAULT_ABI, 13, \n+\t\t       &ffi_type_float, args) == FFI_OK);\n+\n+    /*@-usedef@*/\n+    ff =  many(fa[0], fa[1],\n+\t       fa[2], fa[3],\n+\t       fa[4], fa[5],\n+\t       fa[6], fa[7],\n+\t       fa[8], fa[9],\n+\t       fa[10],fa[11],fa[12]);\n+    /*@=usedef@*/\n+\n+    ffi_call(&cif, FFI_FN(many), &f, values);\n+\n+    /*@-realcompare@*/\n+    if (f - ff < FLT_EPSILON)\n+    /*@=realcompare@*/\n+\tprintf(\"many arg tests ok!\\n\");\n+    else\n+#ifdef POWERPC\n+\tprintf(\"many arg tests failed!  This is a gcc bug.\\n\");\n+#else\n+        CHECK(0);\n+#endif\n+  }\n+\n+  /* promotion tests */\n+  {\n+    args[0] = &ffi_type_schar;\n+    args[1] = &ffi_type_sshort;\n+    args[2] = &ffi_type_uchar;\n+    args[3] = &ffi_type_ushort;\n+    values[0] = &sc;\n+    values[1] = &ss;\n+    values[2] = &uc;\n+    values[3] = &us;\n+    \n+    /* Initialize the cif */\n+    CHECK(ffi_prep_cif(&cif, FFI_DEFAULT_ABI, 4, \n+\t\t       &ffi_type_sint, args) == FFI_OK);\n+\n+    us = 0;\n+    ul = 0;\n+\n+    for (sc = (signed char) -127; \n+\t sc <= (signed char) 120; /*@-type@*/ sc += 1 /*@=type@*/)\n+      for (ss = -30000; ss <= 30000; ss += 10000)\n+\tfor (uc = (unsigned char) 0; \n+\t     uc <= (unsigned char) 200; /*@-type@*/ uc += 20 /*@=type@*/)\n+\t  for (us = 0; us <= 60000; us += 10000)\n+\t    {\n+\t      ul++;\n+\t      ffi_call(&cif, FFI_FN(promotion), &rint, values);\n+\t      CHECK(rint == (int) sc + (int) ss + (int) uc + (int) us);\n+\t    }\n+    printf(\"%lu promotion tests run\\n\", ul);\n+  }\n+\n+  /* struct tests */\n+  {\n+    test_structure_1 ts1_arg;\n+    /* This is a hack to get a properly aligned result buffer */\n+    test_structure_1 *ts1_result = \n+      (test_structure_1 *) malloc (sizeof(test_structure_1));\n+\n+    args[0] = &ts1_type;\n+    values[0] = &ts1_arg;\n+    \n+    /* Initialize the cif */\n+    CHECK(ffi_prep_cif(&cif, FFI_DEFAULT_ABI, 1, \n+\t\t       &ts1_type, args) == FFI_OK);\n+\n+    ts1_arg.uc = '\\x01';\n+    ts1_arg.d = 3.14159;\n+    ts1_arg.ui = 555;\n+\n+    ffi_call(&cif, FFI_FN(struct1), ts1_result, values);\n+\n+    CHECK(ts1_result->ui == 556);\n+    CHECK(ts1_result->d == 3.14159 - 1);\n+\n+    puts (\"structure test 1 ok!\\n\");\n+\n+    free (ts1_result);\n+  }\n+\n+  /* struct tests */\n+  {\n+    test_structure_2 ts2_arg;\n+\n+    /* This is a hack to get a properly aligned result buffer */\n+    test_structure_2 *ts2_result = \n+      (test_structure_2 *) malloc (sizeof(test_structure_2));\n+\n+    args[0] = &ts2_type;\n+    values[0] = &ts2_arg;\n+    \n+    /* Initialize the cif */\n+    CHECK(ffi_prep_cif(&cif, FFI_DEFAULT_ABI, 1, \n+\t\t       &ts2_type, args) == FFI_OK);\n+\n+    ts2_arg.d1 = 5.55;\n+    ts2_arg.d2 = 6.66;\n+\n+    printf (\"%g\\n\", ts2_result->d1);\n+    printf (\"%g\\n\", ts2_result->d2);\n+\n+    ffi_call(&cif, FFI_FN(struct2), ts2_result, values);\n+\n+    printf (\"%g\\n\", ts2_result->d1);\n+    printf (\"%g\\n\", ts2_result->d2);\n+    \n+    CHECK(ts2_result->d1 == 5.55 - 1);\n+    CHECK(ts2_result->d2 == 6.66 - 1);\n+\n+    printf(\"structure test 2 ok!\\n\");\n+\n+    free (ts2_result);\n+  }\n+\n+  /* struct tests */\n+  {\n+    int compare_value;\n+    test_structure_3 ts3_arg;\n+    test_structure_3 *ts3_result = \n+      (test_structure_3 *) malloc (sizeof(test_structure_3));\n+\n+    args[0] = &ts3_type;\n+    values[0] = &ts3_arg;\n+    \n+    /* Initialize the cif */\n+    CHECK(ffi_prep_cif(&cif, FFI_DEFAULT_ABI, 1, \n+\t\t       &ts3_type, args) == FFI_OK);\n+\n+    ts3_arg.si = -123;\n+    compare_value = ts3_arg.si;\n+\n+    ffi_call(&cif, FFI_FN(struct3), ts3_result, values);\n+\n+    printf (\"%d %d\\n\", ts3_result->si, -(compare_value*2));\n+\n+    if (ts3_result->si == -(ts3_arg.si*2))\n+\tputs (\"structure test 3 ok!\");\n+    else\n+      {\n+\tputs (\"Structure test 3 found structure passing bug.\");\n+\tputs (\"  Current versions of GCC are not 100% compliant with the\");\n+\tputs (\"  n32 ABI.  There is a known problem related to passing\");\n+\tputs (\"  small structures.  Send a bug report to the gcc maintainers.\");\n+      }\n+\n+    free (ts3_result);\n+  }\n+\n+  /* struct tests */\n+  {\n+    test_structure_4 ts4_arg;\n+\n+    /* This is a hack to get a properly aligned result buffer */\n+    test_structure_4 *ts4_result = \n+      (test_structure_4 *) malloc (sizeof(test_structure_4));\n+\n+    args[0] = &ts4_type;\n+    values[0] = &ts4_arg;\n+    \n+    /* Initialize the cif */\n+    CHECK(ffi_prep_cif(&cif, FFI_DEFAULT_ABI, 1, \n+\t\t       &ts4_type, args) == FFI_OK);\n+\n+    ts4_arg.ui1 = 2;\n+    ts4_arg.ui2 = 3;\n+    ts4_arg.ui3 = 4;\n+\n+    ffi_call (&cif, FFI_FN(struct4), ts4_result, values);\n+    \n+    if (ts4_result->ui3 == 2U * 3U * 4U)\n+      puts (\"structure test 4 ok!\");\n+    else\n+      puts (\"Structure test 4 found GCC's structure passing bug.\");\n+\n+    free (ts4_result);\n+  }\n+\n+  /* struct tests */\n+  {\n+    test_structure_5 ts5_arg1, ts5_arg2;\n+\n+    /* This is a hack to get a properly aligned result buffer */\n+    test_structure_5 *ts5_result = \n+      (test_structure_5 *) malloc (sizeof(test_structure_5));\n+\n+    args[0] = &ts5_type;\n+    args[1] = &ts5_type;\n+    values[0] = &ts5_arg1;\n+    values[1] = &ts5_arg2;\n+    \n+    /* Initialize the cif */\n+    CHECK(ffi_prep_cif(&cif, FFI_DEFAULT_ABI, 2, \n+\t\t       &ts5_type, args) == FFI_OK);\n+\n+    ts5_arg1.c1 = 2;\n+    ts5_arg1.c2 = 6;\n+    ts5_arg2.c1 = 5;\n+    ts5_arg2.c2 = 3;\n+\n+    ffi_call (&cif, FFI_FN(struct5), ts5_result, values);\n+    \n+    if (ts5_result->c1 == 7 \n+\t&& ts5_result->c2 == 3)\n+      puts (\"structure test 5 ok!\");\n+    else\n+      puts (\"Structure test 5 found GCC's structure passing bug.\");\n+\n+    free (ts5_result);\n+  }\n+\n+  /* If we arrived here, all is good */\n+  (void) puts(\"\\nLooks good. No surprises.\\n\");\n+\n+  /*@-compdestroy@*/\n+\n+  return 0;\n+}\n+"}, {"sha": "c5d950786f788056ea2fd4c062d74cd36076aa86", "filename": "libffi/src/m68k/ffi.c", "status": "added", "additions": 184, "deletions": 0, "changes": 184, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63e5e3e0dbb7207e95c0437499b980a304665589/libffi%2Fsrc%2Fm68k%2Fffi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63e5e3e0dbb7207e95c0437499b980a304665589/libffi%2Fsrc%2Fm68k%2Fffi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fm68k%2Fffi.c?ref=63e5e3e0dbb7207e95c0437499b980a304665589", "patch": "@@ -0,0 +1,184 @@\n+/* -----------------------------------------------------------------------\n+   ffi.c\n+   \n+   m68k Foreign Function Interface \n+   ----------------------------------------------------------------------- */\n+\n+#include <ffi.h>\n+#include <ffi_common.h>\n+\n+#include <stdlib.h>\n+\n+/* ffi_prep_args is called by the assembly routine once stack space has\n+   been allocated for the function's arguments.  */\n+\n+static void *\n+ffi_prep_args (void *stack, extended_cif *ecif)\n+{\n+  unsigned int i;\n+  int tmp;\n+  unsigned int avn;\n+  void **p_argv;\n+  char *argp;\n+  ffi_type **p_arg;\n+  void *struct_value_ptr;\n+\n+  tmp = 0;\n+  argp = stack;\n+\n+  if (ecif->cif->rtype->type == FFI_TYPE_STRUCT\n+      && ecif->cif->rtype->size > 8)\n+    struct_value_ptr = ecif->rvalue;\n+  else\n+    struct_value_ptr = NULL;\n+\n+  avn = ecif->cif->nargs;\n+  p_argv = ecif->avalue;\n+\n+  for (i = ecif->cif->nargs, p_arg = ecif->cif->arg_types;\n+       i != 0 && avn != 0;\n+       i--, p_arg++)\n+    {\n+      size_t z;\n+\n+      /* Align if necessary.  */\n+      if (((*p_arg)->alignment - 1) & (unsigned) argp)\n+\targp = (char *) ALIGN (argp, (*p_arg)->alignment);\n+\n+      if (avn != 0) \n+\t{\n+\t  avn--;\n+\t  z = (*p_arg)->size;\n+\t  if (z < sizeof (int))\n+\t    {\n+\t      switch ((*p_arg)->type)\n+\t\t{\n+\t\tcase FFI_TYPE_SINT8:\n+\t\t  *(signed int *) argp = (signed int) *(SINT8 *) *p_argv;\n+\t\t  break;\n+\n+\t\tcase FFI_TYPE_UINT8:\n+\t\t  *(unsigned int *) argp = (unsigned int) *(UINT8 *) *p_argv;\n+\t\t  break;\n+\n+\t\tcase FFI_TYPE_SINT16:\n+\t\t  *(signed int *) argp = (signed int) *(SINT16 *) *p_argv;\n+\t\t  break;\n+\n+\t\tcase FFI_TYPE_UINT16:\n+\t\t  *(unsigned int *) argp = (unsigned int) *(UINT16 *) *p_argv;\n+\t\t  break;\n+\n+\t\tcase FFI_TYPE_STRUCT:\n+\t\t  memcpy (argp + sizeof (int) - z, *p_argv, z);\n+\t\t  break;\n+\n+\t\tdefault:\n+\t\t  FFI_ASSERT (0);\n+\t\t}\n+\t      z = sizeof (int);\n+\t    }\n+\t  else\n+\t    memcpy (argp, *p_argv, z);\n+\t  p_argv++;\n+\t  argp += z;\n+\t}\n+    }\n+\n+  return struct_value_ptr;\n+}\n+\n+#define CIF_FLAGS_INT\t\t1\n+#define CIF_FLAGS_DINT\t\t2\n+#define CIF_FLAGS_FLOAT\t\t4\n+#define CIF_FLAGS_DOUBLE\t8\n+#define CIF_FLAGS_LDOUBLE\t16\n+#define CIF_FLAGS_POINTER\t32\n+#define CIF_FLAGS_STRUCT\t64\n+\n+/* Perform machine dependent cif processing */\n+ffi_status\n+ffi_prep_cif_machdep (ffi_cif *cif)\n+{\n+  /* Set the return type flag */\n+  switch (cif->rtype->type)\n+    {\n+    case FFI_TYPE_VOID:\n+      cif->flags = 0;\n+      break;\n+\n+    case FFI_TYPE_STRUCT:\n+      if (cif->rtype->size > 4 && cif->rtype->size <= 8)\n+\tcif->flags = CIF_FLAGS_DINT;\n+      else if (cif->rtype->size <= 4)\n+\tcif->flags = CIF_FLAGS_STRUCT;\n+      else\n+\tcif->flags = 0;\n+      break;\n+\n+    case FFI_TYPE_FLOAT:\n+      cif->flags = CIF_FLAGS_FLOAT;\n+      break;\n+\n+    case FFI_TYPE_DOUBLE:\n+      cif->flags = CIF_FLAGS_DOUBLE;\n+      break;\n+\n+    case FFI_TYPE_LONGDOUBLE:\n+      cif->flags = CIF_FLAGS_LDOUBLE;\n+      break;\n+\n+    case FFI_TYPE_POINTER:\n+      cif->flags = CIF_FLAGS_POINTER;\n+      break;\n+\n+    case FFI_TYPE_SINT64:\n+    case FFI_TYPE_UINT64:\n+      cif->flags = CIF_FLAGS_DINT;\n+      break;\n+\n+    default:\n+      cif->flags = CIF_FLAGS_INT;\n+      break;\n+    }\n+\n+  return FFI_OK;\n+}\n+\n+extern void ffi_call_SYSV (void *(*) (void *, extended_cif *), \n+\t\t\t   extended_cif *, \n+\t\t\t   unsigned, unsigned, unsigned,\n+\t\t\t   void *, void (*fn) ());\n+\n+void\n+ffi_call (ffi_cif *cif, void (*fn) (), void *rvalue, void **avalue)\n+{\n+  extended_cif ecif;\n+\n+  ecif.cif = cif;\n+  ecif.avalue = avalue;\n+  \n+  /* If the return value is a struct and we don't have a return value\n+     address then we need to make one.  */\n+\n+  if (rvalue == NULL\n+      && cif->rtype->type == FFI_TYPE_STRUCT\n+      && cif->rtype->size > 8)\n+    ecif.rvalue = alloca (cif->rtype->size);\n+  else\n+    ecif.rvalue = rvalue;\n+    \n+  \n+  switch (cif->abi) \n+    {\n+    case FFI_SYSV:\n+      ffi_call_SYSV (ffi_prep_args, &ecif, cif->bytes, \n+\t\t     cif->flags, cif->rtype->size * 8,\n+\t\t     ecif.rvalue, fn);\n+      break;\n+\n+    default:\n+      FFI_ASSERT (0);\n+      break;\n+    }\n+}"}, {"sha": "a925d99e3ce8d9fa679e83556f0ac43fa77759f2", "filename": "libffi/src/m68k/sysv.S", "status": "added", "additions": 96, "deletions": 0, "changes": 96, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63e5e3e0dbb7207e95c0437499b980a304665589/libffi%2Fsrc%2Fm68k%2Fsysv.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63e5e3e0dbb7207e95c0437499b980a304665589/libffi%2Fsrc%2Fm68k%2Fsysv.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fm68k%2Fsysv.S?ref=63e5e3e0dbb7207e95c0437499b980a304665589", "patch": "@@ -0,0 +1,96 @@\n+/* -----------------------------------------------------------------------\n+   sysv.S\n+   \n+   m68k Foreign Function Interface \n+   ----------------------------------------------------------------------- */\n+\n+#define LIBFFI_ASM\t\n+#include <ffi.h>\n+\n+\t.text\n+\n+\t.globl\tffi_call_SYSV\n+\t.type\tffi_call_SYSV,@function\n+\n+ffi_call_SYSV:\n+\tlink\t%fp,#0\n+\tmove.l\t%d2,-(%sp)\n+\n+\t| Make room for all of the new args.\n+\tsub.l\t16(%fp),%sp\n+\n+\t| Call ffi_prep_args\n+\tmove.l\t12(%fp),-(%sp)\n+\tpea\t4(%sp)\n+\tmove.l\t8(%fp),%a0\n+\tjsr\t(%a0)\n+\taddq.l\t#8,%sp\t\n+\n+\t| Pass pointer to struct value, if any\n+\tmove.l\t%a0,%a1\n+\n+\t| Call the function\n+\tmove.l\t32(%fp),%a0\n+\tjsr\t(%a0)\n+\n+\t| Remove the space we pushed for the args\n+\tadd.l\t16(%fp),%sp\n+\n+\t| Load the pointer to storage for the return value\n+\tmove.l\t28(%fp),%a1\n+\n+\t| Load the return type code \n+\tmove.l\t20(%fp),%d2\n+\n+\t| If the return value pointer is NULL, assume no return value.\n+\ttst.l\t%a1\n+\tjbeq\tnoretval\n+\n+\tbtst\t#0,%d2\n+\tjbeq\tretlongint\n+\tmove.l\t%d0,(%a1)\n+\tjbra\tepilogue\n+\n+retlongint:\n+\tbtst\t#1,%d2\n+\tjbeq\tretfloat\n+\tmove.l\t%d0,(%a1)\n+\tmove.l\t%d1,4(%a1)\n+\tjbra\tepilogue\n+\n+retfloat:\n+\tbtst\t#2,%d2\n+\tjbeq\tretdouble\n+\tfmove.s\t%fp0,(%a1)\n+\tjbra\tepilogue\n+\n+retdouble:\n+\tbtst\t#3,%d2\n+\tjbeq\tretlongdouble\n+\tfmove.d\t%fp0,(%a1)\n+\tjbra\tepilogue\n+\n+retlongdouble:\n+\tbtst\t#4,%d2\n+\tjbeq\tretpointer\n+\tfmove.x\t%fp0,(%a1)\n+\tjbra\tepilogue\n+\n+retpointer:\n+\tbtst\t#5,%d2\n+\tjbeq\tretstruct\n+\tmove.l\t%a0,(%a1)\n+\tjbra\tepilogue\n+\n+retstruct:\n+\tbtst\t#6,%d2\n+\tjbeq\tnoretval\n+\tmove.l\t24(%fp),%d2\n+\tbfins\t%d0,(%a1){#0,%d2}\n+\n+noretval:\n+epilogue:\n+\tmove.l\t(%sp)+,%d2\n+\tunlk\t%a6\n+\trts\n+\t.size\tffi_call_SYSV,.-ffi_call_SYSV"}, {"sha": "f3a37bc44f2b714b31609cfa1b4755cfb939a0d1", "filename": "libffi/src/mips/ffi.c", "status": "added", "additions": 471, "deletions": 0, "changes": 471, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63e5e3e0dbb7207e95c0437499b980a304665589/libffi%2Fsrc%2Fmips%2Fffi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63e5e3e0dbb7207e95c0437499b980a304665589/libffi%2Fsrc%2Fmips%2Fffi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fmips%2Fffi.c?ref=63e5e3e0dbb7207e95c0437499b980a304665589", "patch": "@@ -0,0 +1,471 @@\n+/* -----------------------------------------------------------------------\n+   ffi.c - Copyright (c) 1996 Cygnus Solutions\n+   \n+   MIPS Foreign Function Interface \n+\n+   $Id: ffi.c,v 1.1.1.1 1998/11/29 16:48:16 green Exp $\n+\n+   Permission is hereby granted, free of charge, to any person obtaining\n+   a copy of this software and associated documentation files (the\n+   ``Software''), to deal in the Software without restriction, including\n+   without limitation the rights to use, copy, modify, merge, publish,\n+   distribute, sublicense, and/or sell copies of the Software, and to\n+   permit persons to whom the Software is furnished to do so, subject to\n+   the following conditions:\n+\n+   The above copyright notice and this permission notice shall be included\n+   in all copies or substantial portions of the Software.\n+\n+   THE SOFTWARE IS PROVIDED ``AS IS'', WITHOUT WARRANTY OF ANY KIND, EXPRESS\n+   OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n+   MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n+   IN NO EVENT SHALL CYGNUS SOLUTIONS BE LIABLE FOR ANY CLAIM, DAMAGES OR\n+   OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\n+   ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n+   OTHER DEALINGS IN THE SOFTWARE.\n+   ----------------------------------------------------------------------- */\n+\n+#include <ffi.h>\n+#include <ffi_common.h>\n+\n+#include <stdlib.h>\n+\n+#if _MIPS_SIM == _MIPS_SIM_NABI32\n+#define FIX_ARGP \\\n+FFI_ASSERT(argp <= &stack[bytes]); \\\n+if (argp == &stack[bytes]) \\\n+{ \\\n+  argp = stack; \\\n+  ffi_stop_here(); \\\n+}\n+#else\n+#define FIX_ARGP \n+#endif\n+\n+\n+/* ffi_prep_args is called by the assembly routine once stack space\n+   has been allocated for the function's arguments */\n+\n+static void ffi_prep_args(char *stack, \n+\t\t\t  extended_cif *ecif,\n+\t\t\t  int bytes,\n+\t\t\t  int flags)\n+{\n+  register int i;\n+  register int avn;\n+  register void **p_argv;\n+  register char *argp;\n+  register ffi_type **p_arg;\n+\n+#if _MIPS_SIM == _MIPS_SIM_NABI32\n+  /* If more than 8 double words are used, the remainder go\n+     on the stack. We reorder stuff on the stack here to \n+     support this easily. */\n+  if (bytes > 8 * SIZEOF_ARG)\n+    argp = &stack[bytes - (8 * SIZEOF_ARG)];\n+  else\n+    argp = stack;\n+#else\n+  argp = stack;\n+#endif\n+\n+  memset(stack, 0, bytes);\n+\n+#if _MIPS_SIM == _MIPS_SIM_NABI32\n+  if ( ecif->cif->rstruct_flag != 0 )\n+#else\n+  if ( ecif->cif->rtype->type == FFI_TYPE_STRUCT )\n+#endif  \n+    {\n+      *(SLOT_TYPE_UNSIGNED *) argp = (SLOT_TYPE_UNSIGNED) ecif->rvalue;\n+      argp += sizeof(SLOT_TYPE_UNSIGNED);\n+      FIX_ARGP;\n+    }\n+\n+  avn = ecif->cif->nargs;\n+  p_argv = ecif->avalue;\n+\n+  for (i = ecif->cif->nargs, p_arg = ecif->cif->arg_types;\n+       i && avn;\n+       i--, p_arg++)\n+    {\n+      size_t z;\n+\n+      /* Align if necessary */\n+      if (((*p_arg)->alignment - 1) & (unsigned) argp) {\n+\targp = (char *) ALIGN(argp, (*p_arg)->alignment);\n+\tFIX_ARGP;\n+      }\n+\n+#if _MIPS_SIM == _MIPS_SIM_ABI32\n+#define OFFSET 0\n+#else\n+#define OFFSET sizeof(int)\n+#endif      \n+\n+      if (avn) \n+\t{\n+\t  avn--;\n+\t  z = (*p_arg)->size;\n+\t  if (z < sizeof(SLOT_TYPE_UNSIGNED))\n+\t    {\n+\t      z = sizeof(SLOT_TYPE_UNSIGNED);\n+\n+\t      switch ((*p_arg)->type)\n+\t\t{\n+\t\tcase FFI_TYPE_SINT8:\n+\t\t  *(SINT32 *) &argp[OFFSET] = (SINT32)*(SINT8 *)(* p_argv);\n+\t\t  break;\n+\t\t  \n+\t\tcase FFI_TYPE_UINT8:\n+\t\t  *(UINT32 *) &argp[OFFSET] = (UINT32)*(UINT8 *)(* p_argv);\n+\t\t  break;\n+\t\t  \n+\t\tcase FFI_TYPE_SINT16:\n+\t\t  *(SINT32 *) &argp[OFFSET] = (SINT32)*(SINT16 *)(* p_argv);\n+\t\t  break;\n+\t\t  \n+\t\tcase FFI_TYPE_UINT16:\n+\t\t  *(UINT32 *) &argp[OFFSET] = (UINT32)*(UINT16 *)(* p_argv);\n+\t\t  break;\n+\t\t  \n+\t\tcase FFI_TYPE_SINT32:\n+\t\t  *(SINT32 *) &argp[OFFSET] = (SINT32)*(SINT32 *)(* p_argv);\n+\t\t  break;\n+\t\t  \n+\t\tcase FFI_TYPE_UINT32:\n+\t\tcase FFI_TYPE_POINTER:\n+\t\t  *(UINT32 *) &argp[OFFSET] = (UINT32)*(UINT32 *)(* p_argv);\n+\t\t  break;\n+\n+\t\t  /* This can only happen with 64bit slots */\n+\t\tcase FFI_TYPE_FLOAT:\n+\t\t  *(float *) argp = *(float *)(* p_argv);\n+\t\t  break;\n+\n+\t\t  /* Handle small structures */\n+\t\tcase FFI_TYPE_STRUCT:\n+\t\t  memcpy(argp, *p_argv, (*p_arg)->size);\n+\t\t  break;\n+\n+\t\tdefault:\n+\t\t  FFI_ASSERT(0);\n+\t\t}\n+\t    }\n+\t  else\n+\t    {\n+#if _MIPS_SIM == _MIPS_SIM_ABI32\t      \n+\t      memcpy(argp, *p_argv, z);\n+#else\n+\t      {\n+\t\tunsigned end = (unsigned) argp+z;\n+\t\tunsigned cap = (unsigned) stack+bytes;\n+\n+\t\t/* Check if the data will fit within the register\n+\t\t   space. Handle it if it doesn't. */\n+\n+\t\tif (end <= cap)\n+\t\t  memcpy(argp, *p_argv, z);\n+\t\telse\n+\t\t  {\n+\t\t    unsigned portion = end - cap;\n+\n+\t\t    memcpy(argp, *p_argv, portion);\n+\t\t    argp = stack;\n+\t\t    memcpy(argp, \n+\t\t\t   (void*)((unsigned)(*p_argv)+portion), z - portion);\n+\t\t  }\n+\t      }\n+#endif\n+\t    }\n+\t  p_argv++;\n+\t  argp += z;\n+\t  FIX_ARGP;\n+\t}\n+    }\n+  \n+  return;\n+}\n+\n+#if _MIPS_SIM == _MIPS_SIM_NABI32\n+\n+/* The n32 spec says that if \"a chunk consists solely of a double \n+   float field (but not a double, which is part of a union), it\n+   is passed in a floating point register. Any other chunk is\n+   passed in an integer register\". This code traverses structure\n+   definitions and generates the appropriate flags. */\n+\n+unsigned calc_n32_struct_flags(ffi_type *arg, unsigned *shift)\n+{\n+  unsigned flags = 0;\n+  unsigned index = 0;\n+\n+  ffi_type *e;\n+\n+  while (e = arg->elements[index])\n+    {\n+      if (e->type == FFI_TYPE_DOUBLE)\n+\t{\n+\t  flags += (FFI_TYPE_DOUBLE << *shift);\n+\t  *shift += FFI_FLAG_BITS;\n+\t}\n+      else if (e->type == FFI_TYPE_STRUCT)\n+\t  flags += calc_n32_struct_flags(e, shift);\n+      else\n+\t*shift += FFI_FLAG_BITS;\n+\n+      index++;\n+    }\n+\n+  return flags;\n+}\n+\n+unsigned calc_n32_return_struct_flags(ffi_type *arg)\n+{\n+  unsigned flags = 0;\n+  unsigned index = 0;\n+  unsigned small = FFI_TYPE_SMALLSTRUCT;\n+  ffi_type *e;\n+\n+  /* Returning structures under n32 is a tricky thing.\n+     A struct with only one or two floating point fields \n+     is returned in $f0 (and $f2 if necessary). Any other\n+     struct results at most 128 bits are returned in $2\n+     (the first 64 bits) and $3 (remainder, if necessary).\n+     Larger structs are handled normally. */\n+  \n+  if (arg->size > 16)\n+    return 0;\n+\n+  if (arg->size > 8)\n+    small = FFI_TYPE_SMALLSTRUCT2;\n+\n+  e = arg->elements[0];\n+  if (e->type == FFI_TYPE_DOUBLE)\n+    flags = FFI_TYPE_DOUBLE << FFI_FLAG_BITS;\n+  else if (e->type == FFI_TYPE_FLOAT)\n+    flags = FFI_TYPE_FLOAT << FFI_FLAG_BITS;\n+\n+  if (flags && (e = arg->elements[1]))\n+    {\n+      if (e->type == FFI_TYPE_DOUBLE)\n+\tflags += FFI_TYPE_DOUBLE;\n+      else if (e->type == FFI_TYPE_FLOAT)\n+\tflags += FFI_TYPE_FLOAT;\n+      else \n+\treturn small;\n+\n+      if (flags && (arg->elements[2]))\n+\t{\n+\t  /* There are three arguments and the first two are \n+\t     floats! This must be passed the old way. */\n+\t  return small;\n+\t}\n+    }\n+  else\n+    if (!flags)\n+      return small;\n+\n+  return flags;\n+}\n+\n+#endif\n+\n+/* Perform machine dependent cif processing */\n+ffi_status ffi_prep_cif_machdep(ffi_cif *cif)\n+{\n+  cif->flags = 0;\n+\n+#if _MIPS_SIM == _MIPS_SIM_ABI32\n+  /* Set the flags necessary for O32 processing */\n+\n+  if (cif->rtype->type != FFI_TYPE_STRUCT)\n+    {\n+      if (cif->nargs > 0)\n+\t{\n+\t  switch ((cif->arg_types)[0]->type)\n+\t    {\n+\t    case FFI_TYPE_FLOAT:\n+\t    case FFI_TYPE_DOUBLE:\n+\t      cif->flags += (cif->arg_types)[0]->type;\n+\t      break;\n+\t      \n+\t    default:\n+\t      break;\n+\t    }\n+\n+\t  if (cif->nargs > 1)\n+\t    {\n+\t      /* Only handle the second argument if the first\n+\t\t is a float or double. */\n+\t      if (cif->flags)\n+\t\t{\n+\t\t  switch ((cif->arg_types)[1]->type)\n+\t\t    {\n+\t\t    case FFI_TYPE_FLOAT:\n+\t\t    case FFI_TYPE_DOUBLE:\n+\t\t      cif->flags += (cif->arg_types)[1]->type << FFI_FLAG_BITS;\n+\t\t      break;\n+\t\t      \n+\t\t    default:\n+\t\t      break;\n+\t\t    }\n+\t\t}\n+\t    }\n+\t}\n+    }\n+      \n+  /* Set the return type flag */\n+  switch (cif->rtype->type)\n+    {\n+    case FFI_TYPE_VOID:\n+    case FFI_TYPE_STRUCT:\n+    case FFI_TYPE_FLOAT:\n+    case FFI_TYPE_DOUBLE:\n+      cif->flags += cif->rtype->type << (FFI_FLAG_BITS * 2);\n+      break;\n+      \n+    default:\n+      cif->flags += FFI_TYPE_INT << (FFI_FLAG_BITS * 2);\n+      break;\n+    }\n+#endif\n+\n+#if _MIPS_SIM == _MIPS_SIM_NABI32\n+  /* Set the flags necessary for N32 processing */\n+  {\n+    unsigned shift = 0;\n+    unsigned count = (cif->nargs < 8) ? cif->nargs : 8;\n+    unsigned index = 0;\n+\n+    unsigned struct_flags = 0;\n+\n+    if (cif->rtype->type == FFI_TYPE_STRUCT)\n+      {\n+\tstruct_flags = calc_n32_return_struct_flags(cif->rtype);\n+\n+\tif (struct_flags == 0)\n+\t  {\n+\t    /* This means that the structure is being passed as\n+\t       a hidden argument */\n+\n+\t    shift = FFI_FLAG_BITS;\n+\t    count = (cif->nargs < 7) ? cif->nargs : 7;\n+\n+\t    cif->rstruct_flag = !0;\n+\t  }\n+\telse\n+\t    cif->rstruct_flag = 0;\n+      }\n+    else\n+      cif->rstruct_flag = 0;\n+\n+    while (count-- > 0)\n+      {\n+\tswitch ((cif->arg_types)[index]->type)\n+\t  {\n+\t  case FFI_TYPE_FLOAT:\n+\t  case FFI_TYPE_DOUBLE:\n+\t    cif->flags += ((cif->arg_types)[index]->type << shift);\n+\t    shift += FFI_FLAG_BITS;\n+\t    break;\n+\n+\t  case FFI_TYPE_STRUCT:\n+\t    cif->flags += calc_n32_struct_flags((cif->arg_types)[index],\n+\t\t\t\t\t\t&shift);\n+\t    break;\n+\n+\t  default:\n+\t    shift += FFI_FLAG_BITS;\n+\t  }\n+\n+\tindex++;\n+      }\n+\n+  /* Set the return type flag */\n+    switch (cif->rtype->type)\n+      {\n+      case FFI_TYPE_STRUCT:\n+\t{\n+\t  if (struct_flags == 0)\n+\t    {\n+\t      /* The structure is returned through a hidden\n+\t\t first argument. Do nothing, 'cause FFI_TYPE_VOID \n+\t\t is 0 */\n+\t    }\n+\t  else\n+\t    {\n+\t      /* The structure is returned via some tricky\n+\t\t mechanism */\n+\t      cif->flags += FFI_TYPE_STRUCT << (FFI_FLAG_BITS * 8);\n+\t      cif->flags += struct_flags << (4 + (FFI_FLAG_BITS * 8));\n+\t    }\n+\t  break;\n+\t}\n+      \n+      case FFI_TYPE_VOID:\n+\t/* Do nothing, 'cause FFI_TYPE_VOID is 0 */\n+\tbreak;\n+\t\n+      case FFI_TYPE_FLOAT:\n+      case FFI_TYPE_DOUBLE:\n+\tcif->flags += cif->rtype->type << (FFI_FLAG_BITS * 8);\n+\tbreak;\n+\t\n+      default:\n+\tcif->flags += FFI_TYPE_INT << (FFI_FLAG_BITS * 8);\n+\tbreak;\n+      }\n+  }\n+#endif\n+  \n+  return FFI_OK;\n+}\n+\n+/* Low level routine for calling O32 functions */\n+extern int ffi_call_O32(void (*)(char *, extended_cif *, int, int), \n+\t\t\textended_cif *, unsigned, \n+\t\t\tunsigned, unsigned *, void (*)());\n+\n+/* Low level routine for calling N32 functions */\n+extern int ffi_call_N32(void (*)(char *, extended_cif *, int, int), \n+\t\t\textended_cif *, unsigned, \n+\t\t\tunsigned, unsigned *, void (*)());\n+\n+void ffi_call(ffi_cif *cif, void (*fn)(), void *rvalue, void **avalue)\n+{\n+  extended_cif ecif;\n+\n+  ecif.cif = cif;\n+  ecif.avalue = avalue;\n+  \n+  /* If the return value is a struct and we don't have a return\t*/\n+  /* value address then we need to make one\t\t        */\n+  \n+  if ((rvalue == NULL) && \n+      (cif->rtype->type == FFI_TYPE_STRUCT))\n+    ecif.rvalue = alloca(cif->rtype->size);\n+  else\n+    ecif.rvalue = rvalue;\n+    \n+  switch (cif->abi) \n+    {\n+#if _MIPS_SIM == _MIPS_SIM_ABI32\n+    case FFI_O32:\n+      ffi_call_O32(ffi_prep_args, &ecif, cif->bytes, \n+\t\t   cif->flags, ecif.rvalue, fn);\n+      break;\n+#endif\n+\n+#if _MIPS_SIM == _MIPS_SIM_NABI32\n+    case FFI_N32:\n+      ffi_call_N32(ffi_prep_args, &ecif, cif->bytes, \n+\t\t   cif->flags, ecif.rvalue, fn);\n+      break;\n+#endif\n+\n+    default:\n+      FFI_ASSERT(0);\n+      break;\n+    }\n+}"}, {"sha": "799bc7cc87257f14c258a904c915f93b2ffe78ff", "filename": "libffi/src/mips/n32.S", "status": "added", "additions": 320, "deletions": 0, "changes": 320, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63e5e3e0dbb7207e95c0437499b980a304665589/libffi%2Fsrc%2Fmips%2Fn32.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63e5e3e0dbb7207e95c0437499b980a304665589/libffi%2Fsrc%2Fmips%2Fn32.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fmips%2Fn32.S?ref=63e5e3e0dbb7207e95c0437499b980a304665589", "patch": "@@ -0,0 +1,320 @@\n+/* -----------------------------------------------------------------------\n+   n32.S - Copyright (c) 1996, 1998  Cygnus Solutions\n+   \n+   MIPS Foreign Function Interface \n+\n+   $Id: n32.S,v 1.1.1.1 1998/11/29 16:48:16 green Exp $\n+\n+   Permission is hereby granted, free of charge, to any person obtaining\n+   a copy of this software and associated documentation files (the\n+   ``Software''), to deal in the Software without restriction, including\n+   without limitation the rights to use, copy, modify, merge, publish,\n+   distribute, sublicense, and/or sell copies of the Software, and to\n+   permit persons to whom the Software is furnished to do so, subject to\n+   the following conditions:\n+\n+   The above copyright notice and this permission notice shall be included\n+   in all copies or substantial portions of the Software.\n+\n+   THE SOFTWARE IS PROVIDED ``AS IS'', WITHOUT WARRANTY OF ANY KIND, EXPRESS\n+   OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n+   MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n+   IN NO EVENT SHALL CYGNUS SOLUTIONS BE LIABLE FOR ANY CLAIM, DAMAGES OR\n+   OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\n+   ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n+   OTHER DEALINGS IN THE SOFTWARE.\n+   ----------------------------------------------------------------------- */\n+\n+#define LIBFFI_ASM\t\n+#include <ffi.h>\n+\n+/* Only build this code if we are compiling for n32 */\t\n+\n+#if defined(FFI_MIPS_N32)\n+\n+#define callback a0\n+#define bytes\t a2\n+#define flags\t a3\n+#define raddr    a4\n+#define fn       a5\n+\n+#define SIZEOF_FRAME\t( 8 * SIZEOF_ARG )\n+\n+\t.text\n+\t.align\t2\n+\t.globl\tffi_call_N32\n+\t.ent\tffi_call_N32\n+ffi_call_N32:\t\n+\n+\t# Prologue\n+\tSUBU\t$sp, SIZEOF_FRAME\t\t\t# Frame size\n+\tREG_S\t$fp, SIZEOF_FRAME - 2*SIZEOF_ARG($sp)\t# Save frame pointer\n+\tREG_S\tra, SIZEOF_FRAME - 1*SIZEOF_ARG($sp)\t# Save return address\n+\tmove\t$fp, $sp\n+\n+\tmove\tt9, callback\t# callback function pointer\n+\tREG_S\tbytes, 2*SIZEOF_ARG($fp) # bytes\n+\tREG_S\tflags, 3*SIZEOF_ARG($fp) # flags\n+\tREG_S\traddr, 4*SIZEOF_ARG($fp) # raddr\n+\tREG_S\tfn,    5*SIZEOF_ARG($fp) # fn\n+\n+\t# Allocate at least 4 words in the argstack\n+\tmove\tv0, bytes\n+\tbge\tbytes, 4 * SIZEOF_ARG, bigger\t\n+\tLI\tv0, 4 * SIZEOF_ARG\n+\tb\tsixteen\n+\n+\tbigger:\t\n+\tADDU\tt4, v0, 2 * SIZEOF_ARG -1\t# make sure it is aligned \n+\tand\tv0, t4, -2 * SIZEOF_ARG\t\t# to a proper boundry.\n+\n+sixteen:\n+\tSUBU\t$sp, $sp, v0\t# move the stack pointer to reflect the\n+\t\t\t\t# arg space\n+\n+\tADDU\ta0, $sp, 0      # 4 * SIZEOF_ARG\n+\tADDU\ta3, $fp, 3 * SIZEOF_ARG\n+\n+\t# Call ffi_prep_args\n+\tjal\tt9\n+\t\n+\t#\tADDU\t$sp, $sp, 4 * SIZEOF_ARG\t# adjust $sp to new args\n+\n+\t# Copy the stack pointer to t9\n+\tmove\tt9, $sp\n+\t\n+\t# Fix the stack if there are more than 8 64bit slots worth\n+\t# of arguments.\n+\n+\t# Load the number of bytes\n+\tREG_L\tt6, 2*SIZEOF_ARG($fp)\n+\n+\t# Is it bigger than 8 * SIZEOF_ARG?\n+\tdadd\tt7, $0, 8 * SIZEOF_ARG\n+\tdsub\tt8, t6, t7\n+\tbltz\tt8, loadregs\n+\n+\tadd\tt9, t9, t8\n+\t\n+loadregs:\t\n+\n+\tREG_L\tt4, 3*SIZEOF_ARG($fp)  # load the flags word\n+\tadd\tt6, t4, 0\t\t\t      # and copy it into t6\n+\n+\tand\tt4, ((1<<FFI_FLAG_BITS)-1)\n+\tbnez\tt4, arg1_floatp\n+\tREG_L\ta0, 0*SIZEOF_ARG(t9)\n+\tb\targ1_next\n+arg1_floatp:\t\n+\tbne\tt4, FFI_TYPE_FLOAT, arg1_doublep\n+\tl.s\t$f12, 0*SIZEOF_ARG(t9)\n+\tb\targ1_next\n+arg1_doublep:\t\n+\tl.d\t$f12, 0*SIZEOF_ARG(t9)\n+arg1_next:\t\n+\t\n+\tadd\tt4, t6, 0\n+\tSRL\tt4, 1*FFI_FLAG_BITS\n+\tand\tt4, ((1<<FFI_FLAG_BITS)-1)\n+\tbnez\tt4, arg2_floatp\n+\tREG_L\ta1, 1*SIZEOF_ARG(t9)\n+\tb\targ2_next\n+arg2_floatp:\n+\tbne\tt4, FFI_TYPE_FLOAT, arg2_doublep\n+\tl.s\t$f13, 1*SIZEOF_ARG(t9)\t\n+\tb\targ2_next\n+arg2_doublep:\t\n+\tl.d\t$f13, 1*SIZEOF_ARG(t9)\t\n+arg2_next:\t\n+\t\n+\tadd\tt4, t6, 0\n+\tSRL\tt4, 2*FFI_FLAG_BITS\n+\tand\tt4, ((1<<FFI_FLAG_BITS)-1)\n+\tbnez\tt4, arg3_floatp\n+\tREG_L\ta2, 2*SIZEOF_ARG(t9)\n+\tb\targ3_next\n+arg3_floatp:\n+\tbne\tt4, FFI_TYPE_FLOAT, arg3_doublep\n+\tl.s\t$f14, 2*SIZEOF_ARG(t9)\t\n+\tb\targ3_next\n+arg3_doublep:\t\n+\tl.d\t$f14, 2*SIZEOF_ARG(t9)\t\n+arg3_next:\t\n+\t\n+\tadd\tt4, t6, 0\n+\tSRL\tt4, 3*FFI_FLAG_BITS\n+\tand\tt4, ((1<<FFI_FLAG_BITS)-1)\n+\tbnez\tt4, arg4_floatp\n+\tREG_L\ta3, 3*SIZEOF_ARG(t9)\n+\tb\targ4_next\n+arg4_floatp:\n+\tbne\tt4, FFI_TYPE_FLOAT, arg4_doublep\n+\tl.s\t$f15, 3*SIZEOF_ARG(t9)\t\n+\tb\targ4_next\n+arg4_doublep:\t\n+\tl.d\t$f15, 3*SIZEOF_ARG(t9)\t\n+arg4_next:\t\n+\t\n+\tadd\tt4, t6, 0\n+\tSRL\tt4, 4*FFI_FLAG_BITS\n+\tand\tt4, ((1<<FFI_FLAG_BITS)-1)\n+\tbnez\tt4, arg5_floatp\n+\tREG_L\ta4, 4*SIZEOF_ARG(t9)\n+\tb\targ5_next\n+arg5_floatp:\n+\tbne\tt4, FFI_TYPE_FLOAT, arg5_doublep\n+\tl.s\t$f16, 4*SIZEOF_ARG(t9)\t\n+\tb\targ5_next\n+arg5_doublep:\t\n+\tl.d\t$f16, 4*SIZEOF_ARG(t9)\t\n+arg5_next:\t\n+\t\n+\tadd\tt4, t6, 0\n+\tSRL\tt4, 5*FFI_FLAG_BITS\n+\tand\tt4, ((1<<FFI_FLAG_BITS)-1)\n+\tbnez\tt4, arg6_floatp\n+\tREG_L\ta5, 5*SIZEOF_ARG(t9)\n+\tb\targ6_next\n+arg6_floatp:\n+\tbne\tt4, FFI_TYPE_FLOAT, arg6_doublep\n+\tl.s\t$f17, 5*SIZEOF_ARG(t9)\t\n+\tb\targ6_next\n+arg6_doublep:\t\n+\tl.d\t$f17, 5*SIZEOF_ARG(t9)\t\n+arg6_next:\t\n+\t\n+\tadd\tt4, t6, 0\n+\tSRL\tt4, 6*FFI_FLAG_BITS\n+\tand\tt4, ((1<<FFI_FLAG_BITS)-1)\n+\tbnez\tt4, arg7_floatp\n+\tREG_L\ta6, 6*SIZEOF_ARG(t9)\n+\tb\targ7_next\n+arg7_floatp:\n+\tbne\tt4, FFI_TYPE_FLOAT, arg7_doublep\n+\tl.s\t$f18, 6*SIZEOF_ARG(t9)\t\n+\tb\targ7_next\n+arg7_doublep:\t\n+\tl.d\t$f18, 6*SIZEOF_ARG(t9)\t\n+arg7_next:\t\n+\t\n+\tadd\tt4, t6, 0\n+\tSRL\tt4, 7*FFI_FLAG_BITS\n+\tand\tt4, ((1<<FFI_FLAG_BITS)-1)\n+\tbnez\tt4, arg8_floatp\n+\tREG_L\ta7, 7*SIZEOF_ARG(t9)\n+\tb\targ8_next\n+arg8_floatp:\n+\tbne\tt4, FFI_TYPE_FLOAT, arg8_doublep\n+ \tl.s\t$f19, 7*SIZEOF_ARG(t9)\t\n+\tb\targ8_next\n+arg8_doublep:\t\n+ \tl.d\t$f19, 7*SIZEOF_ARG(t9)\t\n+arg8_next:\t\n+\n+callit:\t\t\n+\t# Load the function pointer\n+\tREG_L\tt9, 5*SIZEOF_ARG($fp)\n+\n+\t# If the return value pointer is NULL, assume no return value.\n+\tREG_L\tt5, 4*SIZEOF_ARG($fp)\n+\tbeqz\tt5, noretval\n+\n+\t# Shift the return type flag over\n+\tSRL\tt6, 8*FFI_FLAG_BITS\n+\t\n+\tbne     t6, FFI_TYPE_INT, retfloat\n+\tjal\tt9\n+\tREG_L\tt4, 4*SIZEOF_ARG($fp)\n+\tREG_S\tv0, 0(t4)\n+\tb\tepilogue\n+\n+retfloat:\n+\tbne     t6, FFI_TYPE_FLOAT, retdouble\n+\tjal\tt9\n+\tREG_L\tt4, 4*SIZEOF_ARG($fp)\n+\ts.s\t$f0, 0(t4)\n+\tb\tepilogue\n+\n+retdouble:\t\n+\tbne\tt6, FFI_TYPE_DOUBLE, retstruct_d\n+\tjal\tt9\n+\tREG_L\tt4, 4*SIZEOF_ARG($fp)\n+\ts.d\t$f0, 0(t4)\n+\tb\tepilogue\n+\n+retstruct_d:\t\n+\tbne\tt6, FFI_TYPE_STRUCT_D, retstruct_f\n+\tjal\tt9\n+\tREG_L\tt4, 4*SIZEOF_ARG($fp)\n+\ts.d\t$f0, 0(t4)\n+\tb\tepilogue\n+\t\n+retstruct_f:\t\n+\tbne\tt6, FFI_TYPE_STRUCT_F, retstruct_d_d\n+\tjal\tt9\n+\tREG_L\tt4, 4*SIZEOF_ARG($fp)\n+\ts.s\t$f0, 0(t4)\n+\tb\tepilogue\n+\t\n+retstruct_d_d:\t\n+\tbne\tt6, FFI_TYPE_STRUCT_DD, retstruct_f_f\n+\tjal\tt9\n+\tREG_L\tt4, 4*SIZEOF_ARG($fp)\n+\ts.d\t$f0, 0(t4)\n+\ts.d\t$f2, 8(t4)\n+\tb\tepilogue\n+\t\n+retstruct_f_f:\t\n+\tbne\tt6, FFI_TYPE_STRUCT_FF, retstruct_d_f\n+\tjal\tt9\n+\tREG_L\tt4, 4*SIZEOF_ARG($fp)\n+\ts.s\t$f0, 0(t4)\n+\ts.s\t$f2, 4(t4)\n+\tb\tepilogue\n+\t\n+retstruct_d_f:\t\n+\tbne\tt6, FFI_TYPE_STRUCT_DF, retstruct_f_d\n+\tjal\tt9\n+\tREG_L\tt4, 4*SIZEOF_ARG($fp)\n+\ts.d\t$f0, 0(t4)\n+\ts.s\t$f2, 8(t4)\n+\tb\tepilogue\n+\t\n+retstruct_f_d:\t\n+\tbne\tt6, FFI_TYPE_STRUCT_FD, retstruct_small\n+\tjal\tt9\n+\tREG_L\tt4, 4*SIZEOF_ARG($fp)\n+\ts.s\t$f0, 0(t4)\n+\ts.d\t$f2, 8(t4)\n+\tb\tepilogue\n+\t\n+retstruct_small:\t\n+\tbne\tt6, FFI_TYPE_STRUCT_SMALL, retstruct_small2\n+\tjal\tt9\n+\tREG_L\tt4, 4*SIZEOF_ARG($fp)\n+\tREG_S\tv0, 0(t4)\n+\tb\tepilogue\n+\t\n+retstruct_small2:\t\n+\tbne\tt6, FFI_TYPE_STRUCT_SMALL2, retstruct\n+\tjal\tt9\n+\tREG_L\tt4, 4*SIZEOF_ARG($fp)\n+\tREG_S\tv0, 0(t4)\n+\tREG_S\tv1, 8(t4)\n+\tb\tepilogue\n+\t\n+retstruct:\t\n+noretval:\t\n+\tjal\tt9\n+\t\n+\t# Epilogue\n+epilogue:\t\n+\tmove\t$sp, $fp\t\n+\tREG_L\t$fp, SIZEOF_FRAME - 2*SIZEOF_ARG($sp) # Restore frame pointer\n+\tREG_L\tra, SIZEOF_FRAME - 1*SIZEOF_ARG($sp)  # Restore return address\n+\tADDU\t$sp, SIZEOF_FRAME\t\t      # Fix stack pointer\n+\tj\tra\n+\n+\t.end\tffi_call_N32\n+\t\n+#endif"}, {"sha": "007f0a825b05f657bcaa6fc501bcc661284bc4cb", "filename": "libffi/src/mips/n32.s", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63e5e3e0dbb7207e95c0437499b980a304665589/libffi%2Fsrc%2Fmips%2Fn32.s", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63e5e3e0dbb7207e95c0437499b980a304665589/libffi%2Fsrc%2Fmips%2Fn32.s", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fmips%2Fn32.s?ref=63e5e3e0dbb7207e95c0437499b980a304665589", "patch": "@@ -0,0 +1,14 @@\n+#include \"n32.S\"\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+ \n+"}, {"sha": "771e8b044517aceea99eb67a27b51d8120d0bd72", "filename": "libffi/src/mips/o32.S", "status": "added", "additions": 173, "deletions": 0, "changes": 173, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63e5e3e0dbb7207e95c0437499b980a304665589/libffi%2Fsrc%2Fmips%2Fo32.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63e5e3e0dbb7207e95c0437499b980a304665589/libffi%2Fsrc%2Fmips%2Fo32.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fmips%2Fo32.S?ref=63e5e3e0dbb7207e95c0437499b980a304665589", "patch": "@@ -0,0 +1,173 @@\n+/* -----------------------------------------------------------------------\n+   o32.S - Copyright (c) 1996, 1998  Cygnus Solutions\n+   \n+   MIPS Foreign Function Interface \n+\n+   $Id: o32.S,v 1.1.1.1 1998/11/29 16:48:16 green Exp $\n+\n+   Permission is hereby granted, free of charge, to any person obtaining\n+   a copy of this software and associated documentation files (the\n+   ``Software''), to deal in the Software without restriction, including\n+   without limitation the rights to use, copy, modify, merge, publish,\n+   distribute, sublicense, and/or sell copies of the Software, and to\n+   permit persons to whom the Software is furnished to do so, subject to\n+   the following conditions:\n+\n+   The above copyright notice and this permission notice shall be included\n+   in all copies or substantial portions of the Software.\n+\n+   THE SOFTWARE IS PROVIDED ``AS IS'', WITHOUT WARRANTY OF ANY KIND, EXPRESS\n+   OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n+   MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n+   IN NO EVENT SHALL CYGNUS SOLUTIONS BE LIABLE FOR ANY CLAIM, DAMAGES OR\n+   OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\n+   ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n+   OTHER DEALINGS IN THE SOFTWARE.\n+   ----------------------------------------------------------------------- */\n+\n+#define LIBFFI_ASM\t\n+#include <ffi.h>\n+\n+/* Only build this code if we are compiling for o32 */\t\n+\n+#if defined(FFI_MIPS_O32)\n+\t\n+#define callback a0\n+#define bytes\t a2\n+#define flags\t a3\n+\t\t\n+#define SIZEOF_FRAME\t( 4 * SIZEOF_ARG + 2 * SIZEOF_ARG )\n+\n+\t.text\n+\t.align\t2\n+\t.globl\tffi_call_O32\n+\t.ent\tffi_call_O32\n+ffi_call_O32:\t\n+\n+\t# Prologue\n+\tSUBU\t$sp, SIZEOF_FRAME\t\t\t# Frame size\n+\tREG_S\t$fp, SIZEOF_FRAME - 2*SIZEOF_ARG($sp)\t# Save frame pointer\n+\tREG_S\tra, SIZEOF_FRAME - 1*SIZEOF_ARG($sp)\t# Save return address\n+\tmove\t$fp, $sp\n+\n+\tmove\tt9, callback\t# callback function pointer\n+\tREG_S\tflags, SIZEOF_FRAME + 3*SIZEOF_ARG($fp) # flags\n+\n+\t# Allocate at least 4 words in the argstack\n+\tmove\tv0, bytes\n+\tbge\tbytes, 4 * SIZEOF_ARG, bigger\t\n+\tLI\tv0, 4 * SIZEOF_ARG\n+\tb\tsixteen\n+\n+bigger:\t\n+\tADDU\tt0, v0, 2 * SIZEOF_ARG -1\t# make sure it is aligned \n+\tand\tv0, t0, -2 * SIZEOF_ARG\t\t# to an 8 byte boundry\n+\n+sixteen:\n+\tSUBU\t$sp, $sp, v0\t# move the stack pointer to reflect the\n+\t\t\t\t# arg space\n+\n+\tADDU\ta0, $sp, 4 * SIZEOF_ARG\n+\tADDU\ta3, $fp, SIZEOF_FRAME + 3*SIZEOF_ARG\n+\n+\tjal\tt9\n+\t\n+\tREG_L\tt0, SIZEOF_FRAME + 3*SIZEOF_ARG($fp)  # load the flags word\n+\tadd\tt2, t0, 0\t\t\t   # and copy it into t2\n+\n+\tand     t0, ((1<<4)-1)          # mask out the return type\n+\tSRL\tt2, 4\t\t\t# shift our arg info\n+\t\t\n+\tADDU\t$sp, $sp, 4 * SIZEOF_ARG\t# adjust $sp to new args\n+\n+\tbnez\tt0, pass_d\t\t\t# make it quick for int\n+\tREG_L\ta0, 0*SIZEOF_ARG($sp)\t\t# just go ahead and load the\n+\tREG_L\ta1, 1*SIZEOF_ARG($sp)\t\t# four regs.\n+\tREG_L\ta2, 2*SIZEOF_ARG($sp)\n+\tREG_L\ta3, 3*SIZEOF_ARG($sp)\n+\tb\tcall_it\n+\n+pass_d:\n+\tbne\tt0, FFI_ARGS_D, pass_f\n+\tl.d\t$f12, 0*SIZEOF_ARG($sp)\t# load $fp regs from args\n+\tREG_L\ta2,   2*SIZEOF_ARG($sp)\t# passing a double\n+\tREG_L\ta3,   3*SIZEOF_ARG($sp)\n+\tb\tcall_it\n+\n+pass_f:\t\n+\tbne\tt0, FFI_ARGS_F, pass_d_d\n+\tl.s\t$f12, 0*SIZEOF_ARG($sp)\t# load $fp regs from args\n+\tREG_L\ta1,   1*SIZEOF_ARG($sp)\t# passing a float\n+\tREG_L\ta2,   2*SIZEOF_ARG($sp)\n+\tREG_L\ta3,   3*SIZEOF_ARG($sp)\n+\tb\tcall_it\t\t\n+\n+pass_d_d:\t\t\n+\tbne\tt0, FFI_ARGS_DD, pass_f_f\n+\tl.d\t$f12, 0*SIZEOF_ARG($sp)\t# load $fp regs from args\n+\tl.d\t$f14, 2*SIZEOF_ARG($sp)\t# passing two doubles\n+\tb\tcall_it\n+\n+pass_f_f:\t\n+\tbne\tt0, FFI_ARGS_FF, pass_d_f\n+\tl.s\t$f12, 0*SIZEOF_ARG($sp)\t# load $fp regs from args\n+\tl.s\t$f14, 1*SIZEOF_ARG($sp)\t# passing two floats\n+\tREG_L\ta2,   2*SIZEOF_ARG($sp)\n+\tREG_L\ta3,   3*SIZEOF_ARG($sp)\n+\tb\tcall_it\n+\n+pass_d_f:\t\t\n+\tbne\tt0, FFI_ARGS_DF, pass_f_d\n+\tl.d\t$f12, 0*SIZEOF_ARG($sp)\t# load $fp regs from args\n+\tl.s\t$f14, 2*SIZEOF_ARG($sp)\t# passing double and float\n+\tREG_L\ta3,   3*SIZEOF_ARG($sp)\n+\tb\tcall_it\n+\n+pass_f_d:\t\t\n+ # assume that the only other combination must be float then double\n+ #\tbne\tt0, FFI_ARGS_F_D, call_it\n+\tl.s\t$f12, 0*SIZEOF_ARG($sp)\t# load $fp regs from args\n+\tl.d\t$f14, 2*SIZEOF_ARG($sp)\t# passing double and float\n+\n+call_it:\t\n+\t# Load the function pointer\n+\tREG_L\tt9, SIZEOF_FRAME + 5*SIZEOF_ARG($fp)\n+\n+\t# If the return value pointer is NULL, assume no return value.\n+\tREG_L\tt1, SIZEOF_FRAME + 4*SIZEOF_ARG($fp)\n+\tbeqz\tt1, noretval\n+\n+\tbne     t2, FFI_TYPE_INT, retfloat\n+\tjal\tt9\n+\tREG_L\tt0, SIZEOF_FRAME + 4*SIZEOF_ARG($fp)\n+\tREG_S\tv0, 0(t0)\n+\tb\tepilogue\n+\n+retfloat:\n+\tbne     t2, FFI_TYPE_FLOAT, retdouble\n+\tjal\tt9\n+\tREG_L\tt0, SIZEOF_FRAME + 4*SIZEOF_ARG($fp)\n+\ts.s\t$f0, 0(t0)\n+\tb\tepilogue\n+\n+retdouble:\t\n+\tbne\tt2, FFI_TYPE_DOUBLE, noretval\n+\tjal\tt9\n+\tREG_L\tt0, SIZEOF_FRAME + 4*SIZEOF_ARG($fp)\n+\ts.d\t$f0, 0(t0)\n+\tb\tepilogue\n+\t\n+noretval:\t\n+\tjal\tt9\n+\t\n+\t# Epilogue\n+epilogue:\t\n+\tmove\t$sp, $fp\t\n+\tREG_L\t$fp, SIZEOF_FRAME - 2*SIZEOF_ARG($sp) # Restore frame pointer\n+\tREG_L\tra, SIZEOF_FRAME - 1*SIZEOF_ARG($sp)  # Restore return address\n+\tADDU\t$sp, SIZEOF_FRAME\t\t      # Fix stack pointer\n+\tj\tra\n+\n+\t.end\tffi_call_O32\n+\t\n+#endif"}, {"sha": "ff505a1ede15e225906869ce4bd7114f7bb907d4", "filename": "libffi/src/mips/o32.s", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63e5e3e0dbb7207e95c0437499b980a304665589/libffi%2Fsrc%2Fmips%2Fo32.s", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63e5e3e0dbb7207e95c0437499b980a304665589/libffi%2Fsrc%2Fmips%2Fo32.s", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fmips%2Fo32.s?ref=63e5e3e0dbb7207e95c0437499b980a304665589", "patch": "@@ -0,0 +1,2 @@\n+#include \"o32.S\"\n+"}, {"sha": "2ccdc020f58ad0816d927d7cadb561399ba14487", "filename": "libffi/src/powerpc/asm.h", "status": "added", "additions": 128, "deletions": 0, "changes": 128, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63e5e3e0dbb7207e95c0437499b980a304665589/libffi%2Fsrc%2Fpowerpc%2Fasm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63e5e3e0dbb7207e95c0437499b980a304665589/libffi%2Fsrc%2Fpowerpc%2Fasm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fpowerpc%2Fasm.h?ref=63e5e3e0dbb7207e95c0437499b980a304665589", "patch": "@@ -0,0 +1,128 @@\n+/* -----------------------------------------------------------------------\n+   asm.h - Copyright (c) 1998 Geoffrey Keating\n+   \n+   PowerPC Assembly glue.\n+\n+   $Id: asm.h,v 1.1.1.1 1998/11/29 16:48:16 green Exp $\n+\n+   Permission is hereby granted, free of charge, to any person obtaining\n+   a copy of this software and associated documentation files (the\n+   ``Software''), to deal in the Software without restriction, including\n+   without limitation the rights to use, copy, modify, merge, publish,\n+   distribute, sublicense, and/or sell copies of the Software, and to\n+   permit persons to whom the Software is furnished to do so, subject to\n+   the following conditions:\n+\n+   The above copyright notice and this permission notice shall be included\n+   in all copies or substantial portions of the Software.\n+\n+   THE SOFTWARE IS PROVIDED ``AS IS'', WITHOUT WARRANTY OF ANY KIND, EXPRESS\n+   OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n+   MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n+   IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY CLAIM, DAMAGES OR\n+   OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\n+   ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n+   OTHER DEALINGS IN THE SOFTWARE.\n+   ----------------------------------------------------------------------- */\n+\n+#define ASM_GLOBAL_DIRECTIVE .globl\n+\n+\n+#define C_SYMBOL_NAME(name) name\n+/* Macro for a label.  */\n+#ifdef\t__STDC__\n+#define C_LABEL(name)\t\tname##:\n+#else\n+#define C_LABEL(name)\t\tname/**/:\n+#endif\n+\n+/* This seems to always be the case on PPC.  */\n+#define ALIGNARG(log2) log2\n+/* For ELF we need the `.type' directive to make shared libs work right.  */\n+#define ASM_TYPE_DIRECTIVE(name,typearg) .type name,typearg;\n+#define ASM_SIZE_DIRECTIVE(name) .size name,.-name\n+\n+/* If compiled for profiling, call `_mcount' at the start of each function.  */\n+#ifdef\tPROF\n+/* The mcount code relies on a the return address being on the stack\n+   to locate our caller and so it can restore it; so store one just\n+   for its benefit.  */\n+#ifdef PIC\n+#define CALL_MCOUNT\t\t\t\t\t\t\t      \\\n+  .pushsection;\t\t\t\t\t\t\t\t      \\\n+  .section \".data\";    \t\t\t\t\t\t\t      \\\n+  .align ALIGNARG(2);\t\t\t\t\t\t\t      \\\n+0:.long 0;\t\t\t\t\t\t\t\t      \\\n+  .previous;\t\t\t\t\t\t\t\t      \\\n+  mflr  %r0;\t\t\t\t\t\t\t\t      \\\n+  stw   %r0,4(%r1);\t       \t\t\t\t\t\t      \\\n+  bl    _GLOBAL_OFFSET_TABLE_@local-4;\t\t\t\t\t      \\\n+  mflr  %r11;\t\t\t\t\t\t\t\t      \\\n+  lwz   %r0,0b@got(%r11);\t\t\t\t\t\t      \\\n+  bl    JUMPTARGET(_mcount);\n+#else  /* PIC */\n+#define CALL_MCOUNT\t\t\t\t\t\t\t      \\\n+  .section \".data\";\t\t\t\t\t\t\t      \\\n+  .align ALIGNARG(2);\t\t\t\t\t\t\t      \\\n+0:.long 0;\t\t\t\t\t\t\t\t      \\\n+  .previous;\t\t\t\t\t\t\t\t      \\\n+  mflr  %r0;\t\t\t\t\t\t\t\t      \\\n+  lis   %r11,0b@ha;\t\t       \t\t\t\t\t      \\\n+  stw   %r0,4(%r1);\t       \t\t\t\t\t\t      \\\n+  addi  %r0,%r11,0b@l;\t\t\t\t\t\t\t      \\\n+  bl    JUMPTARGET(_mcount);\n+#endif /* PIC */\n+#else  /* PROF */\n+#define CALL_MCOUNT\t\t/* Do nothing.  */\n+#endif /* PROF */\n+\n+#define\tENTRY(name)\t\t\t\t\t\t\t      \\\n+  ASM_GLOBAL_DIRECTIVE C_SYMBOL_NAME(name);\t\t\t\t      \\\n+  ASM_TYPE_DIRECTIVE (C_SYMBOL_NAME(name),@function)\t\t\t      \\\n+  .align ALIGNARG(2);\t\t\t\t\t\t\t      \\\n+  C_LABEL(name)\t\t\t\t\t\t\t\t      \\\n+  CALL_MCOUNT\n+\n+#define EALIGN_W_0  /* No words to insert.  */\n+#define EALIGN_W_1  nop\n+#define EALIGN_W_2  nop;nop\n+#define EALIGN_W_3  nop;nop;nop\n+#define EALIGN_W_4  EALIGN_W_3;nop\n+#define EALIGN_W_5  EALIGN_W_4;nop\n+#define EALIGN_W_6  EALIGN_W_5;nop\n+#define EALIGN_W_7  EALIGN_W_6;nop\n+\n+/* EALIGN is like ENTRY, but does alignment to 'words'*4 bytes\n+   past a 2^align boundary.  */\n+#ifdef PROF\n+#define EALIGN(name, alignt, words)\t\t\t\t\t      \\\n+  ASM_GLOBAL_DIRECTIVE C_SYMBOL_NAME(name);\t\t\t\t      \\\n+  ASM_TYPE_DIRECTIVE (C_SYMBOL_NAME(name),@function)\t\t\t      \\\n+  .align ALIGNARG(2);\t\t\t\t\t\t\t      \\\n+  C_LABEL(name)\t\t\t\t\t\t\t\t      \\\n+  CALL_MCOUNT\t\t\t\t\t\t\t\t      \\\n+  b 0f;\t\t\t\t\t\t\t\t\t      \\\n+  .align ALIGNARG(alignt);\t\t\t\t\t\t      \\\n+  EALIGN_W_##words;\t\t\t\t\t\t\t      \\\n+  0:\n+#else /* PROF */\n+#define EALIGN(name, alignt, words)\t\t\t\t\t      \\\n+  ASM_GLOBAL_DIRECTIVE C_SYMBOL_NAME(name);\t\t\t\t      \\\n+  ASM_TYPE_DIRECTIVE (C_SYMBOL_NAME(name),@function)\t\t\t      \\\n+  .align ALIGNARG(alignt);\t\t\t\t\t\t      \\\n+  EALIGN_W_##words;\t\t\t\t\t\t\t      \\\n+  C_LABEL(name)\n+#endif\n+\n+#define END(name)\t\t\t\t\t\t\t      \\\n+  ASM_SIZE_DIRECTIVE(name)\n+\n+#ifdef PIC\n+#define JUMPTARGET(name) name##@plt\n+#else\n+#define JUMPTARGET(name) name\n+#endif\n+\n+/* Local labels stripped out by the linker.  */\n+#define L(x) .L##x\n+"}, {"sha": "6d12d653baa4e05cab730ff240f05e821519f6f8", "filename": "libffi/src/powerpc/ffi.c", "status": "added", "additions": 423, "deletions": 0, "changes": 423, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63e5e3e0dbb7207e95c0437499b980a304665589/libffi%2Fsrc%2Fpowerpc%2Fffi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63e5e3e0dbb7207e95c0437499b980a304665589/libffi%2Fsrc%2Fpowerpc%2Fffi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fpowerpc%2Fffi.c?ref=63e5e3e0dbb7207e95c0437499b980a304665589", "patch": "@@ -0,0 +1,423 @@\n+/* -----------------------------------------------------------------------\n+   ffi.c - Copyright (c) 1998 Geoffrey Keating\n+   \n+   PowerPC Foreign Function Interface \n+\n+   $Id: ffi.c,v 1.1.1.1 1998/11/29 16:48:16 green Exp $\n+\n+   Permission is hereby granted, free of charge, to any person obtaining\n+   a copy of this software and associated documentation files (the\n+   ``Software''), to deal in the Software without restriction, including\n+   without limitation the rights to use, copy, modify, merge, publish,\n+   distribute, sublicense, and/or sell copies of the Software, and to\n+   permit persons to whom the Software is furnished to do so, subject to\n+   the following conditions:\n+\n+   The above copyright notice and this permission notice shall be included\n+   in all copies or substantial portions of the Software.\n+\n+   THE SOFTWARE IS PROVIDED ``AS IS'', WITHOUT WARRANTY OF ANY KIND, EXPRESS\n+   OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n+   MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n+   IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY CLAIM, DAMAGES OR\n+   OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\n+   ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n+   OTHER DEALINGS IN THE SOFTWARE.\n+   ----------------------------------------------------------------------- */\n+\n+#include <ffi.h>\n+#include <ffi_common.h>\n+\n+#include <stdlib.h>\n+\n+enum {\n+  /* The assembly depends on these exact flags.  */\n+  FLAG_RETURNS_NOTHING  = 1 << (31-30), /* These go in cr7 */\n+  FLAG_RETURNS_FP       = 1 << (31-29),\n+  FLAG_RETURNS_64BITS   = 1 << (31-28),\n+\n+  FLAG_ARG_NEEDS_COPY   = 1 << (31- 7),\n+  FLAG_FP_ARGUMENTS     = 1 << (31- 6), /* cr1.eq; specified by ABI */\n+  FLAG_4_GPR_ARGUMENTS  = 1 << (31- 5),\n+  FLAG_RETVAL_REFERENCE = 1 << (31- 4)\n+};\n+\n+/* About the SYSV ABI.  */\n+enum {\n+  NUM_GPR_ARG_REGISTERS = 8,\n+  NUM_FPR_ARG_REGISTERS = 8\n+};\n+enum { ASM_NEEDS_REGISTERS = 4 };\n+\n+/* ffi_prep_args is called by the assembly routine once stack space\n+   has been allocated for the function's arguments.\n+\n+   The stack layout we want looks like this:\n+\n+   |   Return address from ffi_call_SYSV 4bytes\t|\thigher addresses\n+   |--------------------------------------------|\n+   |   Previous backchain pointer\t4\t| \tstack pointer here\n+   |--------------------------------------------|<+ <<<\ton entry to\n+   |   Saved r28-r31\t\t\t4*4\t| |\tffi_call_SYSV\n+   |--------------------------------------------| |\n+   |   GPR registers r3-r10\t\t8*4\t| |\tffi_call_SYSV\n+   |--------------------------------------------| |\n+   |   FPR registers f1-f8 (optional)\t8*8\t| |\n+   |--------------------------------------------| |\tstack\t|\n+   |   Space for copied structures\t\t| |\tgrows\t|\n+   |--------------------------------------------| |\tdown    V\n+   |   Parameters that didn't fit in registers  | |\n+   |--------------------------------------------| |\tlower addresses\n+   |   Space for callee's LR\t\t4\t| |\n+   |--------------------------------------------| |\tstack pointer here\n+   |   Current backchain pointer\t4\t|-/\tduring\n+   |--------------------------------------------|   <<<\tffi_call_SYSV\n+\n+   */\n+\n+/*@-exportheader@*/\n+void ffi_prep_args(extended_cif *ecif, unsigned *const stack)\n+/*@=exportheader@*/\n+{\n+  const unsigned bytes = ecif->cif->bytes;\n+  const unsigned flags = ecif->cif->flags;\n+  \n+  /* 'stacktop' points at the previous backchain pointer.  */\n+  unsigned *const stacktop = stack + (ecif->cif->bytes / sizeof(unsigned));\n+\n+  /* 'gpr_base' points at the space for gpr3, and grows upwards as\n+     we use GPR registers.  */\n+  unsigned *gpr_base = stacktop - ASM_NEEDS_REGISTERS - NUM_GPR_ARG_REGISTERS;\n+  int intarg_count = 0;\n+\n+  /* 'fpr_base' points at the space for fpr1, and grows upwards as\n+     we use FPR registers.  */\n+  double *fpr_base = (double *)gpr_base - NUM_FPR_ARG_REGISTERS;\n+  int fparg_count = 0;\n+\n+  /* 'copy_space' grows down as we put structures in it.  It should\n+     stay 16-byte aligned.  */\n+  char *copy_space = ((flags & FLAG_FP_ARGUMENTS)\n+\t\t      ? (char *)fpr_base\n+\t\t      : (char *)gpr_base);\n+\n+  /* 'next_arg' grows up as we put parameters in it.  */\n+  unsigned *next_arg = stack + 2;\n+\n+  int i;\n+  ffi_type **ptr;\n+  double double_tmp;\n+  void **p_argv;\n+  size_t struct_copy_size;\n+  unsigned gprvalue;\n+\n+  /* Check that everything starts aligned properly.  */\n+  FFI_ASSERT(((unsigned)(char *)stack & 0xF) == 0);\n+  FFI_ASSERT(((unsigned)(char *)copy_space & 0xF) == 0);\n+  FFI_ASSERT(((unsigned)(char *)stacktop & 0xF) == 0);\n+  FFI_ASSERT((bytes & 0xF) == 0);\n+  FFI_ASSERT(copy_space >= (char *)next_arg);\n+\n+  /* Deal with return values that are actually pass-by-reference.  */\n+  if (flags & FLAG_RETVAL_REFERENCE)\n+  {\n+    *gpr_base++ = (unsigned)(char *)ecif->rvalue;\n+    intarg_count++;\n+  }\n+\n+  /* Now for the arguments.  */\n+  p_argv = ecif->avalue;\n+  for (ptr = ecif->cif->arg_types, i = ecif->cif->nargs;\n+       i > 0;\n+       i--, ptr++, p_argv++)\n+    {\n+      switch ((*ptr)->type)\n+\t{\n+\tcase FFI_TYPE_FLOAT:\n+\tcase FFI_TYPE_DOUBLE:\n+\t  if ((*ptr)->type == FFI_TYPE_FLOAT)\n+\t    double_tmp = *(float *)*p_argv;\n+\t  else\n+\t    double_tmp = *(double *)*p_argv;\n+\n+\t  if (fparg_count >= NUM_FPR_ARG_REGISTERS)\n+\t    {\n+\t      if (intarg_count%2 != 0)\n+\t\t{\n+\t\t  intarg_count++;\n+\t\t  next_arg++;\n+\t\t}\n+\t      *(double *)next_arg = double_tmp;\n+\t      next_arg += 2;\n+\t    }\n+\t  else\n+\t    *fpr_base++ = double_tmp;\n+\t  fparg_count++;\n+\t  FFI_ASSERT(flags & FLAG_FP_ARGUMENTS);\n+\t  break;\n+\n+\tcase FFI_TYPE_UINT64:\n+\tcase FFI_TYPE_SINT64:\n+\t  if (intarg_count == NUM_GPR_ARG_REGISTERS-1)\n+\t    intarg_count++;\n+\t  if (intarg_count >= NUM_GPR_ARG_REGISTERS)\n+\t    {\n+\t      if (intarg_count%2 != 0)\n+\t\t{\n+\t\t  intarg_count++;\n+\t\t  next_arg++;\n+\t\t}\n+\t      *(long long *)next_arg = *(long long *)*p_argv;\n+\t      next_arg += 2;\n+\t    }\n+\t  else\n+\t    {\n+\t      *(long long *)gpr_base = *(long long *)*p_argv;\n+\t      gpr_base += 2;\n+\t    }\n+\t  intarg_count += 2;\n+\t  break;\n+\n+\tcase FFI_TYPE_STRUCT:\n+#if FFI_TYPE_LONGDOUBLE != FFI_TYPE_DOUBLE\n+\tcase FFI_TYPE_LONGDOUBLE:\n+#endif\n+\t  struct_copy_size = ((*ptr)->size + 15) & ~0xF;\n+\t  copy_space -= struct_copy_size;\n+\t  memcpy(copy_space, (char *)*p_argv, (*ptr)->size);\n+\t  \n+\t  gprvalue = (unsigned)copy_space;\n+\n+\t  FFI_ASSERT(copy_space > (char *)next_arg);\n+\t  FFI_ASSERT(flags & FLAG_ARG_NEEDS_COPY);\n+\t  goto putgpr;\n+\n+\tcase FFI_TYPE_UINT8:\n+\t  gprvalue = *(unsigned char *)*p_argv;\n+\t  goto putgpr;\n+\tcase FFI_TYPE_SINT8:\n+\t  gprvalue = *(signed char *)*p_argv;\n+\t  goto putgpr;\n+\tcase FFI_TYPE_UINT16:\n+\t  gprvalue = *(unsigned short *)*p_argv;\n+\t  goto putgpr;\n+\tcase FFI_TYPE_SINT16:\n+\t  gprvalue = *(signed short *)*p_argv;\n+\t  goto putgpr;\n+\n+\tcase FFI_TYPE_INT:\n+\tcase FFI_TYPE_UINT32:\n+\tcase FFI_TYPE_SINT32:\n+\tcase FFI_TYPE_POINTER:\n+\t  gprvalue = *(unsigned *)*p_argv;\n+\tputgpr:\n+\t  if (intarg_count >= NUM_GPR_ARG_REGISTERS)\n+\t    *next_arg++ = gprvalue;\n+\t  else\n+\t    *gpr_base++ = gprvalue;\n+\t  intarg_count++;\n+\t  break;\n+\t}\n+    }\n+\n+  /* Check that we didn't overrun the stack...  */\n+  FFI_ASSERT(copy_space >= (char *)next_arg);\n+  FFI_ASSERT(gpr_base <= stacktop - ASM_NEEDS_REGISTERS);\n+  FFI_ASSERT((unsigned *)fpr_base\n+\t     <= stacktop - ASM_NEEDS_REGISTERS - NUM_GPR_ARG_REGISTERS);\n+  FFI_ASSERT(flags & FLAG_4_GPR_ARGUMENTS || intarg_count <= 4);\n+}\n+\n+/* Perform machine dependent cif processing */\n+ffi_status ffi_prep_cif_machdep(ffi_cif *cif)\n+{\n+  /* All this is for the SYSV ABI.  */\n+  int i;\n+  ffi_type **ptr;\n+  unsigned bytes;\n+  int fparg_count = 0, intarg_count = 0;\n+  unsigned flags = 0;\n+  unsigned struct_copy_size = 0;\n+  \n+  /* All the machine-independent calculation of cif->bytes will be wrong.\n+     Redo the calculation for SYSV.  */\n+\n+  /* Space for the frame pointer, callee's LR, and the asm's temp regs.  */\n+  bytes = (2 + ASM_NEEDS_REGISTERS) * sizeof(int);\n+\n+  /* Space for the GPR registers.  */\n+  bytes += NUM_GPR_ARG_REGISTERS * sizeof(int);\n+\n+  /* Return value handling.  The rules are as follows:\n+     - 32-bit (or less) integer values are returned in gpr3;\n+     - Structures of size <= 4 bytes also returned in gpr3;\n+     - 64-bit integer values and structures between 5 and 8 bytes are returned\n+       in gpr3 and gpr4;\n+     - Single/double FP values are returned in fpr1;\n+     - Larger structures and long double (if not equivalent to double) values\n+       are allocated space and a pointer is passed as the first argument.  */\n+  switch (cif->rtype->type)\n+    {\n+    case FFI_TYPE_DOUBLE:\n+      flags |= FLAG_RETURNS_64BITS;\n+      /* Fall through.  */\n+    case FFI_TYPE_FLOAT:\n+      flags |= FLAG_RETURNS_FP;\n+      break;\n+\n+    case FFI_TYPE_UINT64:\n+    case FFI_TYPE_SINT64:\n+      flags |= FLAG_RETURNS_64BITS;\n+      break;\n+\n+    case FFI_TYPE_STRUCT:\n+      if (cif->abi != FFI_GCC_SYSV)\n+\tif (cif->rtype->size <= 4)\n+\t  break;\n+\telse if (cif->rtype->size <= 8)\n+\t  {\n+\t    flags |= FLAG_RETURNS_64BITS;\n+\t    break;\n+\t  }\n+      /* else fall through.  */\n+#if FFI_TYPE_LONGDOUBLE != FFI_TYPE_DOUBLE\n+    case FFI_TYPE_LONGDOUBLE:\n+#endif\n+      intarg_count++;\n+      flags |= FLAG_RETVAL_REFERENCE;\n+      /* Fall through.  */\n+    case FFI_TYPE_VOID:\n+      flags |= FLAG_RETURNS_NOTHING;\n+      break;\n+\n+    default:\n+      /* Returns 32-bit integer, or similar.  Nothing to do here.  */\n+      break;\n+    }\n+\n+  /* The first NUM_GPR_ARG_REGISTERS words of integer arguments, and the\n+     first NUM_FPR_ARG_REGISTERS fp arguments, go in registers; the rest\n+     goes on the stack.  Structures and long doubles (if not equivalent\n+     to double) are passed as a pointer to a copy of the structure.\n+     Stuff on the stack needs to keep proper alignment.  */\n+  for (ptr = cif->arg_types, i = cif->nargs; i > 0; i--, ptr++)\n+    {\n+      switch ((*ptr)->type)\n+\t{\n+\tcase FFI_TYPE_FLOAT:\n+\tcase FFI_TYPE_DOUBLE:\n+\t  fparg_count++;\n+\t  /* If this FP arg is going on the stack, it must be\n+\t     8-byte-aligned.  */\n+\t  if (fparg_count > NUM_FPR_ARG_REGISTERS\n+\t      && intarg_count%2 != 0)\n+\t    intarg_count++;\n+\t  break;\n+\n+\tcase FFI_TYPE_UINT64:\n+\tcase FFI_TYPE_SINT64:\n+\t  /* 'long long' arguments are passed as two words, but\n+\t     either both words must fit in registers or both go\n+\t     on the stack.  If they go on the stack, they must\n+\t     be 8-byte-aligned.  */\n+\t  if (intarg_count == NUM_GPR_ARG_REGISTERS-1\n+\t      || intarg_count >= NUM_GPR_ARG_REGISTERS && intarg_count%2 != 0)\n+\t    intarg_count++;\n+\t  intarg_count += 2;\n+\t  break;\n+\n+\tcase FFI_TYPE_STRUCT:\n+#if FFI_TYPE_LONGDOUBLE != FFI_TYPE_DOUBLE\n+\tcase FFI_TYPE_LONGDOUBLE:\n+#endif\n+\t  /* We must allocate space for a copy of these to enforce\n+\t     pass-by-value.  Pad the space up to a multiple of 16\n+\t     bytes (the maximum alignment required for anything under\n+\t     the SYSV ABI).  */\n+\t  struct_copy_size += ((*ptr)->size + 15) & ~0xF;\n+\t  /* Fall through (allocate space for the pointer).  */\n+\n+\tdefault:\n+\t  /* Everything else is passed as a 4-byte word in a GPR, either\n+\t     the object itself or a pointer to it.  */\n+\t  intarg_count++;\n+\t  break;\n+\t}\n+    }\n+\n+  if (fparg_count != 0)\n+    flags |= FLAG_FP_ARGUMENTS;\n+  if (intarg_count > 4)\n+    flags |= FLAG_4_GPR_ARGUMENTS;\n+  if (struct_copy_size != 0)\n+    flags |= FLAG_ARG_NEEDS_COPY;\n+  \n+  /* Space for the FPR registers, if needed.  */\n+  if (fparg_count != 0)\n+    bytes += NUM_FPR_ARG_REGISTERS * sizeof(double);\n+\n+  /* Stack space.  */\n+  if (intarg_count > NUM_GPR_ARG_REGISTERS)\n+    bytes += (intarg_count - NUM_GPR_ARG_REGISTERS) * sizeof(int);\n+  if (fparg_count > NUM_FPR_ARG_REGISTERS)\n+    bytes += (fparg_count - NUM_FPR_ARG_REGISTERS) * sizeof(double);\n+\n+  /* The stack space allocated needs to be a multiple of 16 bytes.  */\n+  bytes = (bytes + 15) & ~0xF;\n+\n+  /* Add in the space for the copied structures.  */\n+  bytes += struct_copy_size;\n+\n+  cif->flags = flags;\n+  cif->bytes = bytes;\n+\n+  return FFI_OK;\n+}\n+\n+/*@-declundef@*/\n+/*@-exportheader@*/\n+extern void ffi_call_SYSV(/*@out@*/ extended_cif *, \n+\t\t\t  unsigned, unsigned, \n+\t\t\t  /*@out@*/ unsigned *, \n+\t\t\t  void (*fn)());\n+/*@=declundef@*/\n+/*@=exportheader@*/\n+\n+void ffi_call(/*@dependent@*/ ffi_cif *cif, \n+\t      void (*fn)(), \n+\t      /*@out@*/ void *rvalue, \n+\t      /*@dependent@*/ void **avalue)\n+{\n+  extended_cif ecif;\n+\n+  ecif.cif = cif;\n+  ecif.avalue = avalue;\n+  \n+  /* If the return value is a struct and we don't have a return\t*/\n+  /* value address then we need to make one\t\t        */\n+\n+  if ((rvalue == NULL) && \n+      (cif->rtype->type == FFI_TYPE_STRUCT))\n+    {\n+      /*@-sysunrecog@*/\n+      ecif.rvalue = alloca(cif->rtype->size);\n+      /*@=sysunrecog@*/\n+    }\n+  else\n+    ecif.rvalue = rvalue;\n+    \n+  \n+  switch (cif->abi) \n+    {\n+    case FFI_SYSV:\n+    case FFI_GCC_SYSV:\n+      /*@-usedef@*/\n+      ffi_call_SYSV(&ecif, -cif->bytes, \n+\t\t    cif->flags, ecif.rvalue, fn);\n+      /*@=usedef@*/\n+      break;\n+    default:\n+      FFI_ASSERT(0);\n+      break;\n+    }\n+}"}, {"sha": "88b037844f3e3d0aadec512b42054526c6f3e4b1", "filename": "libffi/src/powerpc/sysv.S", "status": "added", "additions": 119, "deletions": 0, "changes": 119, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63e5e3e0dbb7207e95c0437499b980a304665589/libffi%2Fsrc%2Fpowerpc%2Fsysv.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63e5e3e0dbb7207e95c0437499b980a304665589/libffi%2Fsrc%2Fpowerpc%2Fsysv.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fpowerpc%2Fsysv.S?ref=63e5e3e0dbb7207e95c0437499b980a304665589", "patch": "@@ -0,0 +1,119 @@\n+/* -----------------------------------------------------------------------\n+   sysv.h - Copyright (c) 1998 Geoffrey Keating\n+   \n+   PowerPC Assembly glue.\n+\n+   $Id: sysv.S,v 1.1.1.1 1998/11/29 16:48:16 green Exp $\n+\n+   Permission is hereby granted, free of charge, to any person obtaining\n+   a copy of this software and associated documentation files (the\n+   ``Software''), to deal in the Software without restriction, including\n+   without limitation the rights to use, copy, modify, merge, publish,\n+   distribute, sublicense, and/or sell copies of the Software, and to\n+   permit persons to whom the Software is furnished to do so, subject to\n+   the following conditions:\n+\n+   The above copyright notice and this permission notice shall be included\n+   in all copies or substantial portions of the Software.\n+\n+   THE SOFTWARE IS PROVIDED ``AS IS'', WITHOUT WARRANTY OF ANY KIND, EXPRESS\n+   OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n+   MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n+   IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY CLAIM, DAMAGES OR\n+   OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\n+   ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n+   OTHER DEALINGS IN THE SOFTWARE.\n+   ----------------------------------------------------------------------- */\n+\n+#define LIBFFI_ASM\t\n+#include <ffi.h>\n+#include <powerpc/asm.h>\n+\n+\t.globl ffi_prep_args\n+ENTRY(ffi_call_SYSV)\n+\t/* Save the old stack pointer as AP.  */\n+\tmr\t%r8,%r1\n+\n+\t/* Allocate the stack space we need.  */\n+\tstwux\t%r1,%r1,%r4\n+\t/* Save registers we use.  */\n+\tmflr\t%r9\n+\tstw\t%r28,-16(%r8)\n+\tstw\t%r29,-12(%r8)\n+\tstw\t%r30, -8(%r8)\n+\tstw\t%r31, -4(%r8)\n+\tstw\t%r9,   4(%r8)\n+\n+\t/* Save arguments over call...  */\n+\tmr\t%r31,%r5\t/* flags, */\n+\tmr\t%r30,%r6\t/* rvalue, */\n+\tmr\t%r29,%r7\t/* function address, */\n+\tmr\t%r28,%r8\t/* our AP. */\n+\n+\t/* Call ffi_prep_args.  */\n+\tmr\t%r4,%r1\n+\tbl\tJUMPTARGET(ffi_prep_args)\n+\n+\t/* Now do the call.  */\n+\t/* Set up cr1 with bits 4-7 of the flags.  */\n+\tmtcrf\t0x40,%r31\n+\t/* Get the address to call into CTR.  */\n+\tmtctr\t%r29\n+\t/* Load all those argument registers.  */\n+\tlwz\t%r3,-16-(8*4)(%r28)\n+\tlwz\t%r4,-16-(7*4)(%r28)\n+\tlwz\t%r5,-16-(6*4)(%r28)\n+\tlwz\t%r6,-16-(5*4)(%r28)\n+\tbf-\t5,1f\n+\tnop\n+\tlwz\t%r7,-16-(4*4)(%r28)\n+\tlwz\t%r8,-16-(3*4)(%r28)\n+\tlwz\t%r9,-16-(2*4)(%r28)\n+\tlwz\t%r10,-16-(1*4)(%r28)\n+\tnop\n+1:\n+\n+\t/* Load all the FP registers.  */\n+\tbf-\t6,2f\n+\tlfd\t%f1,-16-(8*4)-(8*8)(%r28)\n+\tlfd\t%f2,-16-(8*4)-(7*8)(%r28)\n+\tlfd\t%f3,-16-(8*4)-(6*8)(%r28)\n+\tlfd\t%f4,-16-(8*4)-(5*8)(%r28)\n+\tnop\n+\tlfd\t%f5,-16-(8*4)-(4*8)(%r28)\n+\tlfd\t%f6,-16-(8*4)-(3*8)(%r28)\n+\tlfd\t%f7,-16-(8*4)-(2*8)(%r28)\n+\tlfd\t%f8,-16-(8*4)-(1*8)(%r28)\n+2:\n+\n+\t/* Make the call.  */\n+\tbctrl\n+\n+\t/* Now, deal with the return value.  */\n+\tmtcrf\t0x01,%r31\n+\tbt-\t30,L(done_return_value)\n+\tbt-\t29,L(fp_return_value)\n+\tstw\t%r3,0(%r30)\n+\tbf+\t28,L(done_return_value)\n+\tstw\t%r4,4(%r30)\n+\t/* Fall through...  */\n+\n+L(done_return_value):\n+\t/* Restore the registers we used and return.  */\n+\tlwz\t%r9,   4(%r28)\n+\tlwz\t%r31, -4(%r28)\n+\tmtlr\t%r9\n+\tlwz\t%r30, -8(%r28)\n+\tlwz\t%r29,-12(%r28)\n+\tlwz\t%r28,-16(%r28)\n+\tlwz\t%r1,0(%r1)\n+\tblr\n+\n+L(fp_return_value):\n+\tbf\t28,L(float_return_value)\n+\tstfd\t%f1,0(%r30)\n+\tb\tL(done_return_value)\n+L(float_return_value):\n+\tstfs\t%f1,0(%r30)\n+\tb\tL(done_return_value)\n+END(ffi_call_SYSV)"}, {"sha": "4c731b9945553a1f748ced5929b76e0a537823d0", "filename": "libffi/src/prep_cif.c", "status": "added", "additions": 143, "deletions": 0, "changes": 143, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63e5e3e0dbb7207e95c0437499b980a304665589/libffi%2Fsrc%2Fprep_cif.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63e5e3e0dbb7207e95c0437499b980a304665589/libffi%2Fsrc%2Fprep_cif.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fprep_cif.c?ref=63e5e3e0dbb7207e95c0437499b980a304665589", "patch": "@@ -0,0 +1,143 @@\n+/* -----------------------------------------------------------------------\n+   prep_cif.c - Copyright (c) 1996, 1998  Cygnus Solutions\n+\n+   $Id: prep_cif.c,v 1.1.1.1 1998/11/29 16:48:16 green Exp $\n+\n+   Permission is hereby granted, free of charge, to any person obtaining\n+   a copy of this software and associated documentation files (the\n+   ``Software''), to deal in the Software without restriction, including\n+   without limitation the rights to use, copy, modify, merge, publish,\n+   distribute, sublicense, and/or sell copies of the Software, and to\n+   permit persons to whom the Software is furnished to do so, subject to\n+   the following conditions:\n+\n+   The above copyright notice and this permission notice shall be included\n+   in all copies or substantial portions of the Software.\n+\n+   THE SOFTWARE IS PROVIDED ``AS IS'', WITHOUT WARRANTY OF ANY KIND, EXPRESS\n+   OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n+   MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n+   IN NO EVENT SHALL CYGNUS SOLUTIONS BE LIABLE FOR ANY CLAIM, DAMAGES OR\n+   OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\n+   ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n+   OTHER DEALINGS IN THE SOFTWARE.\n+   ----------------------------------------------------------------------- */\n+\n+#include <ffi.h>\n+#include <ffi_common.h>\n+#include <stdlib.h>\n+\n+\n+/* Round up to SIZEOF_ARG. */\n+\n+#define STACK_ARG_SIZE(x) ALIGN(x, SIZEOF_ARG)\n+\n+/* Perform machine independent initialization of aggregate type\n+   specifications. */\n+\n+static ffi_status initialize_aggregate(/*@out@*/ ffi_type *arg)\n+{\n+  ffi_type **ptr; \n+\n+  FFI_ASSERT(arg != NULL);\n+\n+  /*@-usedef@*/\n+\n+  FFI_ASSERT(arg->elements != NULL);\n+  FFI_ASSERT(arg->size == 0);\n+  FFI_ASSERT(arg->alignment == 0);\n+\n+  ptr = &(arg->elements[0]);\n+\n+  while ((*ptr) != NULL)\n+    {\n+      if (((*ptr)->size == 0) && (initialize_aggregate((*ptr)) != FFI_OK))\n+\treturn FFI_BAD_TYPEDEF;\n+      \n+      /* Perform a sanity check on the argument type */\n+      FFI_ASSERT(ffi_type_test((*ptr)));\n+\n+      arg->size = ALIGN(arg->size, (*ptr)->alignment);\n+      arg->size += (*ptr)->size;\n+\n+      arg->alignment = (arg->alignment > (*ptr)->alignment) ? \n+\targ->alignment : (*ptr)->alignment;\n+\n+      ptr++;\n+    }\n+\n+  if (arg->size == 0)\n+    return FFI_BAD_TYPEDEF;\n+  else\n+    return FFI_OK;\n+\n+  /*@=usedef@*/\n+}\n+\n+/* Perform machine independent ffi_cif preparation, then call\n+   machine dependent routine. */\n+\n+ffi_status ffi_prep_cif(/*@out@*/ /*@partial@*/ ffi_cif *cif, \n+\t\t\tffi_abi abi, unsigned int nargs, \n+\t\t\t/*@dependent@*/ /*@out@*/ /*@partial@*/ ffi_type *rtype, \n+\t\t\t/*@dependent@*/ ffi_type **atypes)\n+{\n+  unsigned bytes = 0;\n+  unsigned int i;\n+  ffi_type **ptr;\n+\n+  FFI_ASSERT(cif != NULL);\n+  FFI_ASSERT((abi > FFI_FIRST_ABI) && (abi < FFI_LAST_ABI));\n+\n+  cif->abi = abi;\n+  cif->arg_types = atypes;\n+  cif->nargs = nargs;\n+  cif->rtype = rtype;\n+\n+  cif->flags = 0;\n+\n+  /* Initialize the return type if necessary */\n+  /*@-usedef@*/\n+  if ((cif->rtype->size == 0) && (initialize_aggregate(cif->rtype) != FFI_OK))\n+    return FFI_BAD_TYPEDEF;\n+  /*@=usedef@*/\n+\n+  /* Perform a sanity check on the return type */\n+  FFI_ASSERT(ffi_type_test(cif->rtype));\n+\n+#ifndef M68K\n+  /* Make space for the return structure pointer */\n+  if (cif->rtype->type == FFI_TYPE_STRUCT)\n+    bytes = STACK_ARG_SIZE(sizeof(void*));\n+#endif\n+\n+  for (ptr = cif->arg_types, i = cif->nargs; i > 0; i--, ptr++)\n+    {\n+      /* Perform a sanity check on the argument type */\n+      FFI_ASSERT(ffi_type_test(*ptr));\n+\n+      /* Initialize any uninitialized aggregate type definitions */\n+      if (((*ptr)->size == 0) && (initialize_aggregate((*ptr)) != FFI_OK))\n+\treturn FFI_BAD_TYPEDEF;\n+\n+#ifdef SPARC\n+      if ((*ptr)->type == FFI_TYPE_STRUCT\n+\t  || (*ptr)->type == FFI_TYPE_LONGDOUBLE)\n+\tbytes += sizeof(void*);\n+      else\n+#endif\n+\t{\n+\t  /* Add any padding if necessary */\n+\t  if (((*ptr)->alignment - 1) & bytes)\n+\t    bytes = ALIGN(bytes, (*ptr)->alignment);\n+\t  \n+\t  bytes += STACK_ARG_SIZE((*ptr)->size);\n+\t}\n+    }\n+\n+  cif->bytes = bytes;\n+\n+  /* Perform machine dependent cif processing */\n+  return ffi_prep_cif_machdep(cif);\n+}\n+"}, {"sha": "55bf9ec443753ae9fccfe6c13160c78f9100458f", "filename": "libffi/src/raw_api.c", "status": "added", "additions": 242, "deletions": 0, "changes": 242, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63e5e3e0dbb7207e95c0437499b980a304665589/libffi%2Fsrc%2Fraw_api.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63e5e3e0dbb7207e95c0437499b980a304665589/libffi%2Fsrc%2Fraw_api.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fraw_api.c?ref=63e5e3e0dbb7207e95c0437499b980a304665589", "patch": "@@ -0,0 +1,242 @@\n+/* -----------------------------------------------------------------------\n+   raw_api.c - Copyright (c) 1999  Cygnus Solutions\n+\n+   Author: Kresten Krab Thorup <krab@gnu.org>\n+\n+   $Id $\n+\n+   Permission is hereby granted, free of charge, to any person obtaining\n+   a copy of this software and associated documentation files (the\n+   ``Software''), to deal in the Software without restriction, including\n+   without limitation the rights to use, copy, modify, merge, publish,\n+   distribute, sublicense, and/or sell copies of the Software, and to\n+   permit persons to whom the Software is furnished to do so, subject to\n+   the following conditions:\n+\n+   The above copyright notice and this permission notice shall be included\n+   in all copies or substantial portions of the Software.\n+\n+   THE SOFTWARE IS PROVIDED ``AS IS'', WITHOUT WARRANTY OF ANY KIND, EXPRESS\n+   OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n+   MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n+   IN NO EVENT SHALL CYGNUS SOLUTIONS BE LIABLE FOR ANY CLAIM, DAMAGES OR\n+   OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\n+   ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n+   OTHER DEALINGS IN THE SOFTWARE.\n+   ----------------------------------------------------------------------- */\n+\n+/* This file defines generic functions for use with the raw api. */\n+\n+#include <ffi.h>\n+#include <ffi_common.h>\n+\n+#if !FFI_NO_RAW_API\n+\n+size_t\n+ffi_raw_size (ffi_cif *cif)\n+{\n+  size_t result = 0;\n+  int i;\n+\n+  ffi_type **at = cif->arg_types;\n+\n+  for (i = cif->nargs-1; i >= 0; i--, at++)\n+    {\n+#if !FFI_NO_STRUCTS\n+      if ((*at)->type == FFI_TYPE_STRUCT)\n+\tresult += ALIGN (sizeof (void*), SIZEOF_ARG);\n+      else\n+#endif\n+\tresult += ALIGN ((*at)->size, SIZEOF_ARG);\n+    }\n+\n+  return result;\n+}\n+\n+\n+void\n+ffi_raw_to_ptrarray (ffi_cif *cif, ffi_raw *raw, void **args)\n+{\n+  unsigned i;\n+  ffi_type **tp = cif->arg_types;\n+\n+#if WORDS_BIGENDIAN\n+\n+  for (i = 0; i < cif->nargs; i++, tp++, args++)\n+    {\t  \n+      switch ((*tp)->type)\n+\t{\n+\tcase FFI_TYPE_UINT8:\n+\tcase FFI_TYPE_SINT8:\n+\t  *args = (void*) ((char*)(raw++) + SIZEOF_ARG - 1);\n+\t  break;\n+\t  \n+\tcase FFI_TYPE_UINT16:\n+\tcase FFI_TYPE_SINT16:\n+\t  *args = (void*) ((char*)(raw++) + SIZEOF_ARG - 2);\n+\t  break;\n+\n+#if SIZEOF_ARG >= 4\t  \n+\tcase FFI_TYPE_UINT32:\n+\tcase FFI_TYPE_SINT32:\n+\t  *args = (void*) ((char*)(raw++) + SIZEOF_ARG - 4);\n+\t  break;\n+#endif\n+\t\n+#if !FFI_NO_STRUCTS  \n+\tcase FFI_TYPE_STRUCT:\n+\t  *args = (raw++)->ptr;\n+\t  break;\n+#endif\n+\n+\tcase FFI_TYPE_POINTER:\n+\t  *args = (void*) &(raw++)->ptr;\n+\t  break;\n+\t  \n+\tdefault:\n+\t  *args = raw;\n+\t  raw += ALIGN ((*tp)->size, SIZEOF_ARG) / SIZEOF_ARG;\n+\t}\n+    }\n+\n+#else /* WORDS_BIGENDIAN */\n+\n+#if !PDP\n+\n+  /* then assume little endian */\n+  for (i = 0; i < cif->nargs; i++, tp++, args++)\n+    {\t  \n+#if !FFI_NO_STRUCTS\n+      if ((*tp)->type == FFI_TYPE_STRUCT)\n+\t{\n+\t  *args = (raw++)->ptr;\n+\t}\n+      else\n+#endif\n+\t{\n+\t  *args = (void*) raw;\n+\t  raw += ALIGN ((*tp)->size, sizeof (void*)) / sizeof (void*);\n+\t}\n+    }\n+\n+#else\n+#error \"pdp endian not supported\"\n+#endif /* ! PDP */\n+\n+#endif /* WORDS_BIGENDIAN */\n+}\n+\n+void\n+ffi_ptrarray_to_raw (ffi_cif *cif, void **args, ffi_raw *raw)\n+{\n+  unsigned i;\n+  ffi_type **tp = cif->arg_types;\n+\n+  for (i = 0; i < cif->nargs; i++, tp++, args++)\n+    {\t  \n+      switch ((*tp)->type)\n+\t{\n+\tcase FFI_TYPE_UINT8:\n+\t  (raw++)->uint = *(UINT8*) (*args);\n+\t  break;\n+\n+\tcase FFI_TYPE_SINT8:\n+\t  (raw++)->sint = *(SINT8*) (*args);\n+\t  break;\n+\n+\tcase FFI_TYPE_UINT16:\n+\t  (raw++)->uint = *(UINT16*) (*args);\n+\t  break;\n+\n+\tcase FFI_TYPE_SINT16:\n+\t  (raw++)->sint = *(SINT16*) (*args);\n+\t  break;\n+\n+#if SIZEOF_ARG >= 4\n+\tcase FFI_TYPE_UINT32:\n+\t  (raw++)->uint = *(UINT32*) (*args);\n+\t  break;\n+\n+\tcase FFI_TYPE_SINT32:\n+\t  (raw++)->sint = *(SINT32*) (*args);\n+\t  break;\n+#endif\n+\n+#if !FFI_NO_STRUCTS\n+\tcase FFI_TYPE_STRUCT:\n+\t  (raw++)->ptr = *args;\n+\t  break;\n+#endif\n+\n+\tcase FFI_TYPE_POINTER:\n+\t  (raw++)->ptr = **(void***) args;\n+\t  break;\n+\n+\tdefault:\n+\t  memcpy ((void*) raw->data, (void*)*args, (*tp)->size);\n+\t  raw += ALIGN ((*tp)->size, SIZEOF_ARG) / SIZEOF_ARG;\n+\t}\n+    }\n+}\n+\n+#if !FFI_NATIVE_RAW_API\n+\n+\n+/* This is a generic definition of ffi_raw_call, to be used if the\n+ * native system does not provide a machine-specific implementation.\n+ * Having this, allows code to be written for the raw API, without\n+ * the need for system-specific code to handle input in that format;\n+ * these following couple of functions will handle the translation forth\n+ * and back automatically. */\n+\n+void ffi_raw_call (/*@dependent@*/ ffi_cif *cif, \n+\t\t   void (*fn)(), \n+\t\t   /*@out@*/ void *rvalue, \n+\t\t   /*@dependent@*/ ffi_raw *raw)\n+{\n+  void **avalue = (void**) alloca (cif->nargs * sizeof (void*));\n+  ffi_raw_to_ptrarray (cif, raw, avalue);\n+  ffi_call (cif, fn, rvalue, avalue);\n+}\n+\n+#if FFI_CLOSURES\t\t/* base system provides closures */\n+\n+static void \n+ffi_translate_args (ffi_cif *cif, void *ravlue,\n+\t\t    void **avalue, void *user_data)\n+{\n+  ffi_raw *raw = (ffi_raw*)alloca (ffi_raw_size (cif));\n+  ffi_ptrarray_to_raw (cif, avalue, raw);\n+\n+  ffi_raw_closure *cl = (ffi_raw_closure*)user_data;\n+  (*cl->fun) (cif, rvalue, raw, cl->user_data);\n+}\n+\n+/* Again, here is the generic version of ffi_prep_raw_closure, which\n+ * will install an intermediate \"hub\" for translation of arguments from\n+ * the pointer-array format, to the raw format */\n+\n+ffi_status\n+ffi_prep_raw_closure (ffi_raw_closure* cl,\n+\t\t      ffi_cif *cif,\n+\t\t      void (*fun)(ffi_cif*,void*,ffi_raw*,void*),\n+\t\t      void *user_data)\n+{\n+  ffi_status status;\n+\n+  status = ffi_prep_closure ((ffi_closure*) cl, \n+\t\t\t     cif,\n+\t\t\t     &ffi_closure_translate,\n+\t\t\t     (void*)cl);\n+  if (status == FFI_OK)\n+    {\n+      cl->fun       = fun;\n+      cl->user_data = user_data;\n+    }\n+\n+  return status;\n+}\n+\n+#endif /* FFI_CLOSURES */\n+#endif /* !FFI_NATIVE_RAW_API */\n+#endif /* !FFI_NO_RAW_API */"}, {"sha": "8ca6710c94a44b3e956153ca23c92b8ba2cd15c1", "filename": "libffi/src/sparc/ffi.c", "status": "added", "additions": 216, "deletions": 0, "changes": 216, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63e5e3e0dbb7207e95c0437499b980a304665589/libffi%2Fsrc%2Fsparc%2Fffi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63e5e3e0dbb7207e95c0437499b980a304665589/libffi%2Fsrc%2Fsparc%2Fffi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fsparc%2Fffi.c?ref=63e5e3e0dbb7207e95c0437499b980a304665589", "patch": "@@ -0,0 +1,216 @@\n+/* -----------------------------------------------------------------------\n+   ffi.c - Copyright (c) 1996 Cygnus Solutions\n+   \n+   Sparc Foreign Function Interface \n+\n+   $Id: ffi.c,v 1.1.1.1 1998/11/29 16:48:16 green Exp $\n+\n+   Permission is hereby granted, free of charge, to any person obtaining\n+   a copy of this software and associated documentation files (the\n+   ``Software''), to deal in the Software without restriction, including\n+   without limitation the rights to use, copy, modify, merge, publish,\n+   distribute, sublicense, and/or sell copies of the Software, and to\n+   permit persons to whom the Software is furnished to do so, subject to\n+   the following conditions:\n+\n+   The above copyright notice and this permission notice shall be included\n+   in all copies or substantial portions of the Software.\n+\n+   THE SOFTWARE IS PROVIDED ``AS IS'', WITHOUT WARRANTY OF ANY KIND, EXPRESS\n+   OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n+   MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n+   IN NO EVENT SHALL CYGNUS SOLUTIONS BE LIABLE FOR ANY CLAIM, DAMAGES OR\n+   OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\n+   ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n+   OTHER DEALINGS IN THE SOFTWARE.\n+   ----------------------------------------------------------------------- */\n+\n+#include <ffi.h>\n+#include <ffi_common.h>\n+\n+#include <stdlib.h>\n+\n+/* ffi_prep_args is called by the assembly routine once stack space\n+   has been allocated for the function's arguments */\n+\n+void ffi_prep_args(char *stack, extended_cif *ecif)\n+{\n+  int i;\n+  int tmp;\n+  int avn;\n+  void **p_argv;\n+  char *argp;\n+  ffi_type **p_arg;\n+\n+  tmp = 0;\n+\n+  /* Skip 16 words for the window save area */\n+  argp = stack + 16*sizeof(void*);\n+\n+  /* This should only really be done when we are returning a structure,\n+     however, it's faster just to do it all the time...\n+\n+  if ( ecif->cif->rtype->type == FFI_TYPE_STRUCT ) */\n+  *(void **) argp = ecif->rvalue;\n+\n+  /* And 1 word for the  structure return value. */\n+  argp += sizeof(void*);\n+\n+#ifdef USING_PURIFY\n+  /* Purify will probably complain in our assembly routine, unless we\n+     zero out this memory. */\n+\n+  ((int*)argp)[0] = 0;\n+  ((int*)argp)[1] = 0;\n+  ((int*)argp)[2] = 0;\n+  ((int*)argp)[3] = 0;\n+  ((int*)argp)[4] = 0;\n+  ((int*)argp)[5] = 0;\n+#endif\n+\n+  avn = ecif->cif->nargs;\n+  p_argv = ecif->avalue;\n+\n+  for (i = ecif->cif->nargs, p_arg = ecif->cif->arg_types;\n+       i && avn;\n+       i--, p_arg++)\n+    {\n+      size_t z;\n+\n+      if (avn) \n+\t{\n+\t  avn--;\n+\t  if ((*p_arg)->type == FFI_TYPE_STRUCT\n+\t      || (*p_arg)->type == FFI_TYPE_LONGDOUBLE)\n+\t    {\n+\t      *(unsigned int *) argp = (unsigned int)(* p_argv);\n+\t      z = sizeof(void*);\n+\t    }\n+\t  else\n+\t    {\n+\t      z = (*p_arg)->size;\n+\t      if (z < sizeof(int))\n+\t\t{\n+\t\t  z = sizeof(int);\n+\t\t  switch ((*p_arg)->type)\n+\t\t    {\n+\t\t    case FFI_TYPE_SINT8:\n+\t\t      *(signed int *) argp = *(SINT8 *)(* p_argv);\n+\t\t      break;\n+\t\t      \n+\t\t    case FFI_TYPE_UINT8:\n+\t\t      *(unsigned int *) argp = *(UINT8 *)(* p_argv);\n+\t\t      break;\n+\t\t      \n+\t\t    case FFI_TYPE_SINT16:\n+\t\t      *(signed int *) argp = *(SINT16 *)(* p_argv);\n+\t\t      break;\n+\t\t      \n+\t\t    case FFI_TYPE_UINT16:\n+\t\t      *(unsigned int *) argp = *(UINT16 *)(* p_argv);\n+\t\t      break;\n+\t\t      \n+\t\t    case FFI_TYPE_SINT32:\n+\t\t      *(signed int *) argp = *(SINT32 *)(* p_argv);\n+\t\t      break;\n+\t\t      \n+\t\t    case FFI_TYPE_UINT32:\n+\t\t      *(unsigned int *) argp = *(UINT32 *)(* p_argv);\n+\t\t      break;\n+\t\t      \n+\t\t    default:\n+\t\t      FFI_ASSERT(0);\n+\t\t    }\n+\t\t}\n+\t      else\n+\t\t{\n+\t\t  memcpy(argp, *p_argv, z);\n+\t\t}\n+\t    }\n+\t  p_argv++;\n+\t  argp += z;\n+\t}\n+    }\n+  \n+  return;\n+}\n+\n+/* Perform machine dependent cif processing */\n+ffi_status ffi_prep_cif_machdep(ffi_cif *cif)\n+{\n+  /* If we are returning a struct, this will already have been added.\n+     Otherwise we need to add it because it's always got to be there! */\n+\n+  if (cif->rtype->type != FFI_TYPE_STRUCT)\n+    cif->bytes += sizeof(void*);\n+\n+  /* sparc call frames require that space is allocated for 6 args,\n+     even if they aren't used. Make that space if necessary. */\n+  \n+  if (cif->bytes < 4*6+4)\n+    cif->bytes = 4*6+4;\n+\n+  /* Adjust cif->bytes. to include 16 words for the window save area,\n+     and maybe the struct/union return pointer area, */\n+\n+  cif->bytes += 64;\n+\n+  /* The stack must be double word aligned, so round bytes up\n+     appropriately. */\n+\n+  cif->bytes = ALIGN(cif->bytes, 2*sizeof(void*));\n+\n+  /* Set the return type flag */\n+  switch (cif->rtype->type)\n+    {\n+    case FFI_TYPE_VOID:\n+    case FFI_TYPE_STRUCT:\n+      cif->flags = cif->rtype->type;\n+      break;\n+\n+    case FFI_TYPE_FLOAT:\n+      cif->flags = FFI_TYPE_FLOAT;\n+      break;\n+\n+    case FFI_TYPE_DOUBLE:\n+      cif->flags = FFI_TYPE_DOUBLE;\n+      break;\n+\n+    default:\n+      cif->flags = FFI_TYPE_INT;\n+      break;\n+    }\n+\n+  return FFI_OK;\n+}\n+\n+extern int ffi_call_V8(void *, extended_cif *, unsigned, \n+\t\t       unsigned, unsigned *, void (*fn)());\n+\n+void ffi_call(ffi_cif *cif, void (*fn)(), void *rvalue, void **avalue)\n+{\n+  extended_cif ecif;\n+\n+  ecif.cif = cif;\n+  ecif.avalue = avalue;\n+  \n+  /* If the return value is a struct and we don't have a return\t*/\n+  /* value address then we need to make one\t\t        */\n+  \n+  if ((rvalue == NULL) && \n+      (cif->rtype->type == FFI_TYPE_STRUCT))\n+    ecif.rvalue = alloca(cif->rtype->size);\n+  else\n+    ecif.rvalue = rvalue;\n+    \n+  switch (cif->abi) \n+    {\n+    case FFI_V8:\n+      ffi_call_V8(ffi_prep_args, &ecif, cif->bytes, \n+\t\t  cif->flags, rvalue, fn);\n+      break;\n+    default:\n+      FFI_ASSERT(0);\n+      break;\n+    }\n+}"}, {"sha": "da0dbe694b4cab8bb8d37bff732940742979b651", "filename": "libffi/src/sparc/v8.S", "status": "added", "additions": 85, "deletions": 0, "changes": 85, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63e5e3e0dbb7207e95c0437499b980a304665589/libffi%2Fsrc%2Fsparc%2Fv8.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63e5e3e0dbb7207e95c0437499b980a304665589/libffi%2Fsrc%2Fsparc%2Fv8.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fsparc%2Fv8.S?ref=63e5e3e0dbb7207e95c0437499b980a304665589", "patch": "@@ -0,0 +1,85 @@\n+/* -----------------------------------------------------------------------\n+   v8.S - Copyright (c) 1996, 1997 Cygnus Solutions\n+   \n+   Sparc Foreign Function Interface \n+\n+   $Id: v8.S,v 1.1.1.1 1998/11/29 16:48:16 green Exp $\n+\n+   Permission is hereby granted, free of charge, to any person obtaining\n+   a copy of this software and associated documentation files (the\n+   ``Software''), to deal in the Software without restriction, including\n+   without limitation the rights to use, copy, modify, merge, publish,\n+   distribute, sublicense, and/or sell copies of the Software, and to\n+   permit persons to whom the Software is furnished to do so, subject to\n+   the following conditions:\n+\n+   The above copyright notice and this permission notice shall be included\n+   in all copies or substantial portions of the Software.\n+\n+   THE SOFTWARE IS PROVIDED ``AS IS'', WITHOUT WARRANTY OF ANY KIND, EXPRESS\n+   OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n+   MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n+   IN NO EVENT SHALL CYGNUS SOLUTIONS BE LIABLE FOR ANY CLAIM, DAMAGES OR\n+   OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\n+   ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n+   OTHER DEALINGS IN THE SOFTWARE.\n+   ----------------------------------------------------------------------- */\n+\n+#define LIBFFI_ASM\t\n+#include <ffi.h>\n+\n+#define STACKFRAME 96\t\t/* Minimum stack framesize for SPARC */\n+#define ARGS (64+4)\t\t/* Offset of register area in frame */\n+\n+.text\n+        .align 8\n+.globl ffi_call_V8\n+.globl _ffi_call_V8\n+\n+ffi_call_V8:\n+_ffi_call_V8:\n+\tsave\t%sp, -STACKFRAME, %sp\n+\t\n+\tsub\t%sp, %i2, %sp\t! alloca() space in stack for frame to set up\n+\tadd\t%sp, STACKFRAME, %l0\t! %l0 has start of \n+\t\t\t\t\t! frame to set up\n+\n+\tmov\t%l0, %o0\t! call routine to set up frame\n+\tcall\t%i0\n+\tmov\t%i1, %o1\t! (delay)\n+\n+\tld\t[%l0+ARGS], %o0\t! call foreign function\n+\tld\t[%l0+ARGS+4], %o1\n+\tld\t[%l0+ARGS+8], %o2\n+\tld\t[%l0+ARGS+12], %o3\n+\tld\t[%l0+ARGS+16], %o4\n+\tld\t[%l0+ARGS+20], %o5\n+\tcall\t%i5\n+\tmov\t%l0, %sp\t! (delay) switch to frame\n+\n+\t! If the return value pointer is NULL, assume no return value.\n+\ttst\t%i4\n+\tbz\tdone\n+\tnop\n+\n+\tcmp\t%i3, FFI_TYPE_INT\n+\tbe,a\tdone\n+\tst\t%o0, [%i4]\t! (delay)\n+\n+\tcmp\t%i3, FFI_TYPE_FLOAT\n+\tbe,a\tdone\n+\tst\t%f0, [%i4+0]\t! (delay)\n+\n+\tcmp\t%i3, FFI_TYPE_DOUBLE\n+\tbne\tdone\n+\tnop\n+\tst\t%f0, [%i4+0]\n+\tst\t%f1, [%i4+4]\n+\t\n+done:\n+\tret\n+\trestore\n+\n+.ffi_call_V8_end:\n+        .size    ffi_call_V8,.ffi_call_V8_end-ffi_call_V8\n+"}, {"sha": "abf276d5cdde95ece65a3c3ab52acae59fccca2f", "filename": "libffi/src/types.c", "status": "added", "additions": 98, "deletions": 0, "changes": 98, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63e5e3e0dbb7207e95c0437499b980a304665589/libffi%2Fsrc%2Ftypes.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63e5e3e0dbb7207e95c0437499b980a304665589/libffi%2Fsrc%2Ftypes.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Ftypes.c?ref=63e5e3e0dbb7207e95c0437499b980a304665589", "patch": "@@ -0,0 +1,98 @@\n+/* -----------------------------------------------------------------------\n+   types.c - Copyright (c) 1996, 1998  Cygnus Solutions\n+   \n+   Predefined ffi_types needed by libffi.\n+\n+   $Id: types.c,v 1.1.1.1 1998/11/29 16:48:16 green Exp $\n+\n+   Permission is hereby granted, free of charge, to any person obtaining\n+   a copy of this software and associated documentation files (the\n+   ``Software''), to deal in the Software without restriction, including\n+   without limitation the rights to use, copy, modify, merge, publish,\n+   distribute, sublicense, and/or sell copies of the Software, and to\n+   permit persons to whom the Software is furnished to do so, subject to\n+   the following conditions:\n+\n+   The above copyright notice and this permission notice shall be included\n+   in all copies or substantial portions of the Software.\n+\n+   THE SOFTWARE IS PROVIDED ``AS IS'', WITHOUT WARRANTY OF ANY KIND, EXPRESS\n+   OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n+   MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n+   IN NO EVENT SHALL CYGNUS SOLUTIONS BE LIABLE FOR ANY CLAIM, DAMAGES OR\n+   OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\n+   ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n+   OTHER DEALINGS IN THE SOFTWARE.\n+   ----------------------------------------------------------------------- */\n+\n+#include <ffi.h>\n+#include <ffi_common.h>\n+\n+/* Type definitions */\n+\n+#define FFI_INTEGRAL_TYPEDEF(n, s, a, t) ffi_type ffi_type_##n = { s, a, t, NULL }\n+#define FFI_AGGREGATE_TYPEDEF(n, e) ffi_type ffi_type_##n = { 0, 0, FFI_TYPE_STRUCT, e }\n+\n+/* Size and alignment are fake here. They must not be 0. */\n+FFI_INTEGRAL_TYPEDEF(void, 1, 1, FFI_TYPE_VOID);\n+\n+FFI_INTEGRAL_TYPEDEF(uint8, 1, 1, FFI_TYPE_UINT8);\n+FFI_INTEGRAL_TYPEDEF(sint8, 1, 1, FFI_TYPE_SINT8);\n+FFI_INTEGRAL_TYPEDEF(uint16, 2, 2, FFI_TYPE_UINT16);\n+FFI_INTEGRAL_TYPEDEF(sint16, 2, 2, FFI_TYPE_SINT16);\n+FFI_INTEGRAL_TYPEDEF(uint32, 4, 4, FFI_TYPE_UINT32);\n+FFI_INTEGRAL_TYPEDEF(sint32, 4, 4, FFI_TYPE_SINT32);\n+FFI_INTEGRAL_TYPEDEF(pointer, 4, 4, FFI_TYPE_POINTER);\n+FFI_INTEGRAL_TYPEDEF(float, 4, 4, FFI_TYPE_FLOAT);\n+\n+\n+#ifdef X86\n+\n+FFI_INTEGRAL_TYPEDEF(uint64, 8, 4, FFI_TYPE_UINT64);\n+FFI_INTEGRAL_TYPEDEF(sint64, 8, 4, FFI_TYPE_SINT64);\n+\n+#elif defined ARM\n+\n+FFI_INTEGRAL_TYPEDEF(uint64, 8, 4, FFI_TYPE_UINT64);\n+FFI_INTEGRAL_TYPEDEF(sint64, 8, 4, FFI_TYPE_SINT64);\n+\n+#elif defined M68K\n+\n+FFI_INTEGRAL_TYPEDEF(uint64, 8, 4, FFI_TYPE_UINT64);\n+FFI_INTEGRAL_TYPEDEF(sint64, 8, 4, FFI_TYPE_SINT64);\n+\n+#else\n+\n+FFI_INTEGRAL_TYPEDEF(uint64, 8, 8, FFI_TYPE_UINT64);\n+FFI_INTEGRAL_TYPEDEF(sint64, 8, 8, FFI_TYPE_SINT64);\n+\n+#endif\n+\n+\n+#ifdef X86\n+\n+FFI_INTEGRAL_TYPEDEF(double, 8, 4, FFI_TYPE_DOUBLE);\n+FFI_INTEGRAL_TYPEDEF(longdouble, 12, 4, FFI_TYPE_LONGDOUBLE);\n+\n+#elif defined ARM\n+\n+FFI_INTEGRAL_TYPEDEF(double, 8, 4, FFI_TYPE_DOUBLE);\n+FFI_INTEGRAL_TYPEDEF(longdouble, 8, 4, FFI_TYPE_LONGDOUBLE);\n+\n+#elif defined M68K\n+\n+FFI_INTEGRAL_TYPEDEF(double, 8, 4, FFI_TYPE_DOUBLE);\n+FFI_INTEGRAL_TYPEDEF(longdouble, 12, 4, FFI_TYPE_LONGDOUBLE);\n+\n+#elif defined SPARC\n+\n+FFI_INTEGRAL_TYPEDEF(double, 8, 8, FFI_TYPE_DOUBLE);\n+FFI_INTEGRAL_TYPEDEF(longdouble, 16, 8, FFI_TYPE_LONGDOUBLE);\n+\n+#else\n+\n+FFI_INTEGRAL_TYPEDEF(double, 8, 8, FFI_TYPE_DOUBLE);\n+FFI_INTEGRAL_TYPEDEF(longdouble, 8, 8, FFI_TYPE_LONGDOUBLE);\n+\n+#endif\n+"}, {"sha": "1e58e031e635ed8a6fe614b004fe688ac24fb8c8", "filename": "libffi/src/x86/ffi.c", "status": "added", "additions": 510, "deletions": 0, "changes": 510, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63e5e3e0dbb7207e95c0437499b980a304665589/libffi%2Fsrc%2Fx86%2Fffi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63e5e3e0dbb7207e95c0437499b980a304665589/libffi%2Fsrc%2Fx86%2Fffi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fx86%2Fffi.c?ref=63e5e3e0dbb7207e95c0437499b980a304665589", "patch": "@@ -0,0 +1,510 @@\n+/* -----------------------------------------------------------------------\n+   ffi.c - Copyright (c) 1996, 1998, 1999  Cygnus Solutions\n+   \n+   x86 Foreign Function Interface \n+\n+   $Id: ffi.c,v 1.3 1999/08/08 13:05:12 green Exp $\n+\n+   Permission is hereby granted, free of charge, to any person obtaining\n+   a copy of this software and associated documentation files (the\n+   ``Software''), to deal in the Software without restriction, including\n+   without limitation the rights to use, copy, modify, merge, publish,\n+   distribute, sublicense, and/or sell copies of the Software, and to\n+   permit persons to whom the Software is furnished to do so, subject to\n+   the following conditions:\n+\n+   The above copyright notice and this permission notice shall be included\n+   in all copies or substantial portions of the Software.\n+\n+   THE SOFTWARE IS PROVIDED ``AS IS'', WITHOUT WARRANTY OF ANY KIND, EXPRESS\n+   OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n+   MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n+   IN NO EVENT SHALL CYGNUS SOLUTIONS BE LIABLE FOR ANY CLAIM, DAMAGES OR\n+   OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\n+   ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n+   OTHER DEALINGS IN THE SOFTWARE.\n+   ----------------------------------------------------------------------- */\n+\n+#include <ffi.h>\n+#include <ffi_common.h>\n+\n+#include <stdlib.h>\n+\n+/* ffi_prep_args is called by the assembly routine once stack space\n+   has been allocated for the function's arguments */\n+\n+/*@-exportheader@*/\n+void ffi_prep_args(char *stack, extended_cif *ecif)\n+/*@=exportheader@*/\n+{\n+  register unsigned int i;\n+  register int tmp;\n+  register unsigned int avn;\n+  register void **p_argv;\n+  register char *argp;\n+  register ffi_type **p_arg;\n+\n+  tmp = 0;\n+  argp = stack;\n+\n+  if ( ecif->cif->rtype->type == FFI_TYPE_STRUCT ) {\n+    *(void **) argp = ecif->rvalue;\n+    argp += 4;\n+  }\n+\n+  avn = ecif->cif->nargs;\n+  p_argv = ecif->avalue;\n+\n+  for (i = ecif->cif->nargs, p_arg = ecif->cif->arg_types;\n+       (i != 0) && (avn != 0);\n+       i--, p_arg++)\n+    {\n+      size_t z;\n+\n+      /* Align if necessary */\n+      if (((*p_arg)->alignment - 1) & (unsigned) argp) {\n+\targp = (char *) ALIGN(argp, (*p_arg)->alignment);\n+      }\n+\n+      if (avn != 0) \n+\t{\n+\t  avn--;\n+\t  z = (*p_arg)->size;\n+\t  if (z < sizeof(int))\n+\t    {\n+\t      z = sizeof(int);\n+\t      switch ((*p_arg)->type)\n+\t\t{\n+\t\tcase FFI_TYPE_SINT8:\n+\t\t  *(signed int *) argp = (signed int)*(SINT8 *)(* p_argv);\n+\t\t  break;\n+\t\t  \n+\t\tcase FFI_TYPE_UINT8:\n+\t\t  *(unsigned int *) argp = (unsigned int)*(UINT8 *)(* p_argv);\n+\t\t  break;\n+\t\t  \n+\t\tcase FFI_TYPE_SINT16:\n+\t\t  *(signed int *) argp = (signed int)*(SINT16 *)(* p_argv);\n+\t\t  break;\n+\t\t  \n+\t\tcase FFI_TYPE_UINT16:\n+\t\t  *(unsigned int *) argp = (unsigned int)*(UINT16 *)(* p_argv);\n+\t\t  break;\n+\t\t  \n+\t\tcase FFI_TYPE_SINT32:\n+\t\t  *(signed int *) argp = (signed int)*(SINT32 *)(* p_argv);\n+\t\t  break;\n+\t\t  \n+\t\tcase FFI_TYPE_UINT32:\n+\t\t  *(unsigned int *) argp = (unsigned int)*(UINT32 *)(* p_argv);\n+\t\t  break;\n+\n+\t\tcase FFI_TYPE_STRUCT:\n+\t\t  *(unsigned int *) argp = (unsigned int)*(UINT32 *)(* p_argv);\n+\t\t  break;\n+\n+\t\tdefault:\n+\t\t  FFI_ASSERT(0);\n+\t\t}\n+\t    }\n+\t  else\n+\t    {\n+\t      memcpy(argp, *p_argv, z);\n+\t    }\n+\t  p_argv++;\n+\t  argp += z;\n+\t}\n+    }\n+  \n+  return;\n+}\n+\n+/* Perform machine dependent cif processing */\n+ffi_status ffi_prep_cif_machdep(ffi_cif *cif)\n+{\n+  /* Set the return type flag */\n+  switch (cif->rtype->type)\n+    {\n+    case FFI_TYPE_VOID:\n+    case FFI_TYPE_STRUCT:\n+    case FFI_TYPE_SINT64:\n+    case FFI_TYPE_FLOAT:\n+    case FFI_TYPE_DOUBLE:\n+    case FFI_TYPE_LONGDOUBLE:\n+      cif->flags = (unsigned) cif->rtype->type;\n+      break;\n+\n+    case FFI_TYPE_UINT64:\n+      cif->flags = FFI_TYPE_SINT64;\n+      break;\n+\n+    default:\n+      cif->flags = FFI_TYPE_INT;\n+      break;\n+    }\n+\n+  return FFI_OK;\n+}\n+\n+/*@-declundef@*/\n+/*@-exportheader@*/\n+extern void ffi_call_SYSV(void (*)(char *, extended_cif *), \n+\t\t\t  /*@out@*/ extended_cif *, \n+\t\t\t  unsigned, unsigned, \n+\t\t\t  /*@out@*/ unsigned *, \n+\t\t\t  void (*fn)());\n+/*@=declundef@*/\n+/*@=exportheader@*/\n+\n+void ffi_call(/*@dependent@*/ ffi_cif *cif, \n+\t      void (*fn)(), \n+\t      /*@out@*/ void *rvalue, \n+\t      /*@dependent@*/ void **avalue)\n+{\n+  extended_cif ecif;\n+\n+  ecif.cif = cif;\n+  ecif.avalue = avalue;\n+  \n+  /* If the return value is a struct and we don't have a return\t*/\n+  /* value address then we need to make one\t\t        */\n+\n+  if ((rvalue == NULL) && \n+      (cif->rtype->type == FFI_TYPE_STRUCT))\n+    {\n+      /*@-sysunrecog@*/\n+      ecif.rvalue = alloca(cif->rtype->size);\n+      /*@=sysunrecog@*/\n+    }\n+  else\n+    ecif.rvalue = rvalue;\n+    \n+  \n+  switch (cif->abi) \n+    {\n+    case FFI_SYSV:\n+      /*@-usedef@*/\n+      ffi_call_SYSV(ffi_prep_args, &ecif, cif->bytes, \n+\t\t    cif->flags, ecif.rvalue, fn);\n+      /*@=usedef@*/\n+      break;\n+    default:\n+      FFI_ASSERT(0);\n+      break;\n+    }\n+}\n+\n+\n+/** private members **/\n+\n+static void ffi_prep_incoming_args_SYSV (char *stack, void **ret,\n+\t\t\t\t\t void** args, ffi_cif* cif);\n+static void ffi_closure_SYSV ();\n+static void ffi_closure_raw_SYSV ();\n+\n+/* This function is jumped to by the trampoline, on entry, %ecx (a\n+ * caller-save register) holds the address of the closure.  \n+ * Clearly, this requires __GNUC__, so perhaps we should translate this\n+ * into an assembly file if this is to be distributed with ffi.\n+ */\n+\n+static void\n+ffi_closure_SYSV ()\n+{\n+  // this is our return value storage\n+  long double    res;\n+\n+  // our various things...\n+  void          *args;\n+  ffi_cif       *cif;\n+  void         **arg_area;\n+  ffi_closure   *closure;\n+  unsigned short rtype;\n+  void          *resp = (void*)&res;\n+\n+  /* grab the trampoline context pointer */\n+  asm (\"movl %%ecx,%0\" : \"=r\" (closure));\n+  \n+  cif         = closure->cif;\n+  arg_area    = (void**) alloca (cif->nargs * sizeof (void*));  \n+  asm (\"leal 8(%%ebp),%0\" : \"=q\" (args));  \n+\n+  /* this call will initialize ARG_AREA, such that each\n+   * element in that array points to the corresponding \n+   * value on the stack; and if the function returns\n+   * a structure, it will re-set RESP to point to the\n+   * structure return address.  */\n+\n+  ffi_prep_incoming_args_SYSV(args, (void**)&resp, arg_area, cif);\n+  \n+  (closure->fun) (cif, resp, arg_area, closure->user_data);\n+\n+  rtype = cif->flags;\n+\n+  /* now, do a generic return based on the value of rtype */\n+  if (rtype == FFI_TYPE_INT)\n+    {\n+      asm (\"movl (%0),%%eax\" : : \"r\" (resp) : \"eax\");\n+    }\n+  else if (rtype == FFI_TYPE_FLOAT)\n+    {\n+      asm (\"flds (%0)\" : : \"r\" (resp) : \"st\" );\n+    }\n+  else if (rtype == FFI_TYPE_DOUBLE)\n+    {\n+      asm (\"fldl (%0)\" : : \"r\" (resp) : \"st\", \"st(1)\" );\n+    }\n+  else if (rtype == FFI_TYPE_LONGDOUBLE)\n+    {\n+      asm (\"fldt (%0)\" : : \"r\" (resp) : \"st\", \"st(1)\" );\n+    }\n+  else if (rtype == FFI_TYPE_SINT64)\n+    {\n+      asm (\"movl 0(%0),%%eax;\"\n+\t   \"movl 4(%0),%%edx\" \n+\t   : : \"r\"(resp)\n+\t   : \"eax\", \"edx\");\n+    }\n+}\n+\n+/*@-exportheader@*/\n+static void \n+ffi_prep_incoming_args_SYSV(char *stack, void **rvalue,\n+\t\t\t    void **avalue, ffi_cif *cif)\n+/*@=exportheader@*/\n+{\n+  register unsigned int i;\n+  register int tmp;\n+  register unsigned int avn;\n+  register void **p_argv;\n+  register char *argp;\n+  register ffi_type **p_arg;\n+\n+  tmp = 0;\n+  argp = stack;\n+\n+  if ( cif->rtype->type == FFI_TYPE_STRUCT ) {\n+    *rvalue = *(void **) argp;\n+    argp += 4;\n+  }\n+\n+  avn = cif->nargs;\n+  p_argv = avalue;\n+\n+  for (i = cif->nargs, p_arg = cif->arg_types;\n+       (i != 0) && (avn != 0);\n+       i--, p_arg++)\n+    {\n+      size_t z;\n+\n+      /* Align if necessary */\n+      if (((*p_arg)->alignment - 1) & (unsigned) argp) {\n+\targp = (char *) ALIGN(argp, (*p_arg)->alignment);\n+      }\n+\n+      if (avn != 0) \n+\t{\n+\t  avn--;\n+\t  z = (*p_arg)->size;\n+\n+\t  /* because we're little endian, this is \n+\t     what it turns into.   */\n+\n+\t  *p_argv = (void*) argp;\n+\n+\t  p_argv++;\n+\t  argp += z;\n+\t}\n+    }\n+  \n+  return;\n+}\n+\n+/* How to make a trampoline.  Derived from gcc/config/i386/i386.c. */\n+\n+#define FFI_INIT_TRAMPOLINE(TRAMP,FUN,CTX) \\\n+({ unsigned char *__tramp = (unsigned char*)(TRAMP); \\\n+   unsigned int  __fun = (unsigned int)(FUN); \\\n+   unsigned int  __ctx = (unsigned int)(CTX); \\\n+   unsigned int  __dis = __fun - ((unsigned int) __tramp + 10); \\\n+   *(unsigned char*) &__tramp[0] = 0xb9; \\\n+   *(unsigned int*)  &__tramp[1] = __ctx; \\\n+   *(unsigned char*) &__tramp[5] = 0xe9; \\\n+   *(unsigned int*)  &__tramp[6] = __dis; \\\n+ })\n+\n+\n+/* the cif must already be prep'ed */\n+\n+ffi_status\n+ffi_prep_closure (ffi_closure* closure,\n+\t\t  ffi_cif* cif,\n+\t\t  void (*fun)(ffi_cif*,void*,void**,void*),\n+\t\t  void *user_data)\n+{\n+  FFI_ASSERT (cif->abi == FFI_SYSV);\n+\n+  FFI_INIT_TRAMPOLINE (&closure->tramp[0], \\\n+\t\t       &ffi_closure_SYSV,  \\\n+\t\t       (void*)closure);\n+    \n+  closure->cif  = cif;\n+  closure->user_data = user_data;\n+  closure->fun  = fun;\n+\n+  return FFI_OK;\n+}\n+\n+/* ------- Native raw API support -------------------------------- */\n+\n+#if !FFI_NO_RAW_API\n+\n+static void\n+ffi_closure_raw_SYSV ()\n+{\n+  // this is our return value storage\n+  long double    res;\n+\n+  // our various things...\n+  void            *args;\n+  ffi_raw         *raw_args;\n+  ffi_cif         *cif;\n+  ffi_raw_closure *closure;\n+  unsigned short   rtype;\n+  void            *resp = (void*)&res;\n+\n+  /* grab the trampoline context pointer */\n+  asm (\"movl %%ecx,%0\" : \"=r\" (closure));\n+\n+  /* take the argument pointer */\n+  asm (\"leal 8(%%ebp),%0\" : \"=q\" (args));  \n+\n+  /* get the cif */\n+  cif = closure->cif;\n+\n+  /* the SYSV/X86 abi matches the RAW API exactly, well.. almost */\n+  raw_args = (ffi_raw*) args;\n+\n+  (closure->fun) (cif, resp, raw_args, closure->user_data);\n+\n+  rtype = cif->flags;\n+\n+  /* now, do a generic return based on the value of rtype */\n+  if (rtype == FFI_TYPE_INT)\n+    {\n+      asm (\"movl (%0),%%eax\" : : \"r\" (resp) : \"eax\");\n+    }\n+  else if (rtype == FFI_TYPE_FLOAT)\n+    {\n+      asm (\"flds (%0)\" : : \"r\" (resp) : \"st\" );\n+    }\n+  else if (rtype == FFI_TYPE_DOUBLE)\n+    {\n+      asm (\"fldl (%0)\" : : \"r\" (resp) : \"st\", \"st(1)\" );\n+    }\n+  else if (rtype == FFI_TYPE_LONGDOUBLE)\n+    {\n+      asm (\"fldt (%0)\" : : \"r\" (resp) : \"st\", \"st(1)\" );\n+    }\n+  else if (rtype == FFI_TYPE_SINT64)\n+    {\n+      asm (\"movl 0(%0),%%eax; movl 4(%0),%%edx\" \n+\t   : : \"r\"(resp)\n+\t   : \"eax\", \"edx\");\n+    }\n+}\n+\n+ \n+\n+\n+ffi_status\n+ffi_prep_raw_closure (ffi_raw_closure* closure,\n+\t\t      ffi_cif* cif,\n+\t\t      void (*fun)(ffi_cif*,void*,ffi_raw*,void*),\n+\t\t      void *user_data)\n+{\n+  int i;\n+\n+  FFI_ASSERT (cif->abi == FFI_SYSV);\n+\n+  // we currently don't support certain kinds of arguments for raw\n+  // closures.  This should be implemented by a seperate assembly language\n+  // routine, since it would require argument processing, something we\n+  // don't do now for performance.\n+\n+  for (i = cif->nargs-1; i >= 0; i--)\n+    {\n+      FFI_ASSERT (cif->arg_types[i]->type != FFI_TYPE_STRUCT);\n+      FFI_ASSERT (cif->arg_types[i]->type != FFI_TYPE_LONGDOUBLE);\n+    }\n+  \n+\n+  FFI_INIT_TRAMPOLINE (&closure->tramp[0], &ffi_closure_raw_SYSV,\n+\t\t       (void*)closure);\n+    \n+  closure->cif  = cif;\n+  closure->user_data = user_data;\n+  closure->fun  = fun;\n+\n+  return FFI_OK;\n+}\n+\n+static void \n+ffi_prep_args_raw(char *stack, extended_cif *ecif)\n+{\n+  memcpy (stack, ecif->avalue, ecif->cif->bytes);\n+}\n+\n+/* we borrow this routine from libffi (it must be changed, though, to\n+ * actually call the function passed in the first argument.  as of\n+ * libffi-1.20, this is not the case.)\n+ */\n+\n+extern void \n+ffi_call_SYSV(void (*)(char *, extended_cif *), \n+\t      /*@out@*/ extended_cif *, \n+\t      unsigned, unsigned, \n+\t      /*@out@*/ unsigned *, \n+\t      void (*fn)());\n+\n+void\n+ffi_raw_call(/*@dependent@*/ ffi_cif *cif, \n+\t     void (*fn)(), \n+\t     /*@out@*/ void *rvalue, \n+\t     /*@dependent@*/ ffi_raw *fake_avalue)\n+{\n+  extended_cif ecif;\n+  void **avalue = (void **)fake_avalue;\n+\n+  ecif.cif = cif;\n+  ecif.avalue = avalue;\n+  \n+  /* If the return value is a struct and we don't have a return\t*/\n+  /* value address then we need to make one\t\t        */\n+\n+  if ((rvalue == NULL) && \n+      (cif->rtype->type == FFI_TYPE_STRUCT))\n+    {\n+      /*@-sysunrecog@*/\n+      ecif.rvalue = alloca(cif->rtype->size);\n+      /*@=sysunrecog@*/\n+    }\n+  else\n+    ecif.rvalue = rvalue;\n+    \n+  \n+  switch (cif->abi) \n+    {\n+    case FFI_SYSV:\n+      /*@-usedef@*/\n+      ffi_call_SYSV(ffi_prep_args_raw, &ecif, cif->bytes, \n+\t\t    cif->flags, ecif.rvalue, fn);\n+      /*@=usedef@*/\n+      break;\n+    default:\n+      FFI_ASSERT(0);\n+      break;\n+    }\n+}\n+\n+#endif"}, {"sha": "41ac46015efa17e1a63b9146c4e1c47333f314ed", "filename": "libffi/src/x86/sysv.S", "status": "added", "additions": 129, "deletions": 0, "changes": 129, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63e5e3e0dbb7207e95c0437499b980a304665589/libffi%2Fsrc%2Fx86%2Fsysv.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63e5e3e0dbb7207e95c0437499b980a304665589/libffi%2Fsrc%2Fx86%2Fsysv.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fx86%2Fsysv.S?ref=63e5e3e0dbb7207e95c0437499b980a304665589", "patch": "@@ -0,0 +1,129 @@\n+/* -----------------------------------------------------------------------\n+   sysv.S - Copyright (c) 1996, 1998  Cygnus Solutions\n+   \n+   X86 Foreign Function Interface \n+\n+   $Id: sysv.S,v 1.2 1999/08/04 18:00:05 green Exp $\n+\n+   Permission is hereby granted, free of charge, to any person obtaining\n+   a copy of this software and associated documentation files (the\n+   ``Software''), to deal in the Software without restriction, including\n+   without limitation the rights to use, copy, modify, merge, publish,\n+   distribute, sublicense, and/or sell copies of the Software, and to\n+   permit persons to whom the Software is furnished to do so, subject to\n+   the following conditions:\n+\n+   The above copyright notice and this permission notice shall be included\n+   in all copies or substantial portions of the Software.\n+\n+   THE SOFTWARE IS PROVIDED ``AS IS'', WITHOUT WARRANTY OF ANY KIND, EXPRESS\n+   OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n+   MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n+   IN NO EVENT SHALL CYGNUS SOLUTIONS BE LIABLE FOR ANY CLAIM, DAMAGES OR\n+   OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\n+   ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n+   OTHER DEALINGS IN THE SOFTWARE.\n+   ----------------------------------------------------------------------- */\n+\n+#define LIBFFI_ASM\t\n+#include <ffi.h>\n+\n+.text\n+\n+.globl ffi_prep_args\n+\n+\t# This assumes we are using gas.\n+        .balign 16\n+.globl ffi_call_SYSV\n+        .type    ffi_call_SYSV,@function\n+\n+ffi_call_SYSV:\n+        pushl %ebp\n+        movl  %esp,%ebp\n+\n+\t# Make room for all of the new args.\n+\tmovl  16(%ebp),%ecx\n+\tsubl  %ecx,%esp\n+\n+\tmovl  %esp,%eax\n+\n+\t# Place all of the ffi_prep_args in position\n+\tpushl 12(%ebp)\n+\tpushl %eax\n+\tcall  *8(%ebp)\n+\n+\t# Return stack to previous state and call the function\n+\taddl  $8,%esp\t\n+\n+\tcall  *28(%ebp)\n+\n+\t# Remove the space we pushed for the args\n+\tmovl  16(%ebp),%ecx\n+\taddl  %ecx,%esp\n+\n+\t# Load %ecx with the return type code \n+\tmovl  20(%ebp),%ecx\t\n+\n+\t# If the return value pointer is NULL, assume no return value.\n+\tcmpl  $0,24(%ebp)\n+\tjne   retint\n+\n+\t# Even if there is no space for the return value, we are \n+\t# obliged to handle floating-point values.\n+\tcmpl  $FFI_TYPE_FLOAT,%ecx\n+\tjne   noretval\n+\tfstp  %st(0)\n+\n+        jmp   epilogue\n+\n+retint:\n+\tcmpl  $FFI_TYPE_INT,%ecx\n+\tjne   retfloat\n+\t# Load %ecx with the pointer to storage for the return value\n+\tmovl  24(%ebp),%ecx\t\n+\tmovl  %eax,0(%ecx)\n+\tjmp   epilogue\n+\n+retfloat:\n+\tcmpl  $FFI_TYPE_FLOAT,%ecx\n+\tjne   retdouble\n+\t# Load %ecx with the pointer to storage for the return value\n+\tmovl  24(%ebp),%ecx\t\n+\tfstps (%ecx)\n+\tjmp   epilogue\n+\n+retdouble:\n+\tcmpl  $FFI_TYPE_DOUBLE,%ecx\n+\tjne   retlongdouble\n+\t# Load %ecx with the pointer to storage for the return value\n+\tmovl  24(%ebp),%ecx\t\n+\tfstpl (%ecx)\n+\tjmp   epilogue\n+\n+retlongdouble:\n+\tcmpl  $FFI_TYPE_LONGDOUBLE,%ecx\n+\tjne   retint64\n+\t# Load %ecx with the pointer to storage for the return value\n+\tmovl  24(%ebp),%ecx\t\n+\tfstpt (%ecx)\n+\tjmp   epilogue\n+\t\n+retint64:\t\n+\tcmpl  $FFI_TYPE_SINT64,%ecx\n+        jne   retstruct\n+\t# Load %ecx with the pointer to storage for the return value\n+\tmovl  24(%ebp),%ecx\t\n+\tmovl  %eax,0(%ecx)\n+\tmovl  %edx,4(%ecx)\n+\t\n+retstruct:\n+\t# Nothing to do!\n+\n+noretval:\n+epilogue:\n+        movl %ebp,%esp\n+        popl %ebp\n+        ret\n+.ffi_call_SYSV_end:\n+        .size    ffi_call_SYSV,.ffi_call_SYSV_end-ffi_call_SYSV\n+"}, {"sha": "9788f70238c91894045d22366fa941580826c3c1", "filename": "libffi/stamp-h.in", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63e5e3e0dbb7207e95c0437499b980a304665589/libffi%2Fstamp-h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63e5e3e0dbb7207e95c0437499b980a304665589/libffi%2Fstamp-h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fstamp-h.in?ref=63e5e3e0dbb7207e95c0437499b980a304665589", "patch": "@@ -0,0 +1 @@\n+timestamp"}]}