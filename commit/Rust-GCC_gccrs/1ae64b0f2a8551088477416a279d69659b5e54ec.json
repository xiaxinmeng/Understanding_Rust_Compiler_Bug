{"sha": "1ae64b0f2a8551088477416a279d69659b5e54ec", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWFlNjRiMGYyYTg1NTEwODg0Nzc0MTZhMjc5ZDY5NjU5YjVlNTRlYw==", "commit": {"author": {"name": "Vladimir Makarov", "email": "vmakarov@redhat.com", "date": "2008-09-22T21:28:48Z"}, "committer": {"name": "Vladimir Makarov", "email": "vmakarov@gcc.gnu.org", "date": "2008-09-22T21:28:48Z"}, "message": "ira-color.c (start_allocno_priorities): Rename to setup_allocno_priorities.\n\n2008-09-22  Vladimir Makarov  <vmakarov@redhat.com>\n\n\t* ira-color.c (start_allocno_priorities): Rename to\n\tsetup_allocno_priorities.  Use costs and\n\tALLOCNO_EXCESS_PRESSURE_POINTS_NUM instead of frequencies and\n\trange lengths.  Get rid off doubles.\n\t(ira_fast_allocations): Call start_allocno_priorities.\n\nFrom-SVN: r140565", "tree": {"sha": "29e20d8a816d7c75fd0a06163024f3b782f8734a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/29e20d8a816d7c75fd0a06163024f3b782f8734a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1ae64b0f2a8551088477416a279d69659b5e54ec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ae64b0f2a8551088477416a279d69659b5e54ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ae64b0f2a8551088477416a279d69659b5e54ec", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ae64b0f2a8551088477416a279d69659b5e54ec/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a56feea879eaf4a300a536cec8025f0266aa3dae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a56feea879eaf4a300a536cec8025f0266aa3dae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a56feea879eaf4a300a536cec8025f0266aa3dae"}], "stats": {"total": 80, "additions": 44, "deletions": 36}, "files": [{"sha": "cae9404596edbabbbc4d03117b4175bbb9ac5539", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ae64b0f2a8551088477416a279d69659b5e54ec/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ae64b0f2a8551088477416a279d69659b5e54ec/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1ae64b0f2a8551088477416a279d69659b5e54ec", "patch": "@@ -1,3 +1,11 @@\n+2008-09-22  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\t* ira-color.c (start_allocno_priorities): Rename to\n+\tsetup_allocno_priorities.  Use costs and\n+\tALLOCNO_EXCESS_PRESSURE_POINTS_NUM instead of frequencies and\n+\trange lengths.  Get rid off doubles.\n+\t(ira_fast_allocations): Call start_allocno_priorities.\n+\t\n 2008-09-22  David Daney  <ddaney@avtrex.com>\n \n \tPR target/37593"}, {"sha": "24b6432dba7f4e937efea195569e95ddd0d78d14", "filename": "gcc/ira-color.c", "status": "modified", "additions": 36, "deletions": 36, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ae64b0f2a8551088477416a279d69659b5e54ec/gcc%2Fira-color.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ae64b0f2a8551088477416a279d69659b5e54ec/gcc%2Fira-color.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira-color.c?ref=1ae64b0f2a8551088477416a279d69659b5e54ec", "patch": "@@ -2042,30 +2042,41 @@ update_curr_costs (ira_allocno_t a)\n /* Map: allocno number -> allocno priority.  */\n static int *allocno_priorities;\n \n-/* Allocate array ALLOCNO_PRIORITIES and set up priorities for N allocnos in\n-   array CONSIDERATION_ALLOCNOS.  */\n+/* Set up priorities for N allocnos in array\n+   CONSIDERATION_ALLOCNOS.  */\n static void\n-start_allocno_priorities (ira_allocno_t *consideration_allocnos, int n)\n+setup_allocno_priorities (ira_allocno_t *consideration_allocnos, int n)\n {\n-  int i, length;\n+  int i, length, nrefs, priority, max_priority, mult;\n   ira_allocno_t a;\n-  allocno_live_range_t r;\n \n+  max_priority = 0;\n   for (i = 0; i < n; i++)\n     {\n       a = consideration_allocnos[i];\n-      for (length = 0, r = ALLOCNO_LIVE_RANGES (a); r != NULL; r = r->next)\n-\tlength += r->finish - r->start + 1;\n-      if (length == 0)\n-\t{\n-\t  allocno_priorities[ALLOCNO_NUM (a)] = 0;\n-\t  continue;\n-\t}\n-      ira_assert (length > 0 && ALLOCNO_NREFS (a) >= 0);\n+      nrefs = ALLOCNO_NREFS (a);\n+      ira_assert (nrefs >= 0);\n+      mult = floor_log2 (ALLOCNO_NREFS (a)) + 1;\n+      ira_assert (mult >= 0);\n       allocno_priorities[ALLOCNO_NUM (a)]\n-\t= (((double) (floor_log2 (ALLOCNO_NREFS (a)) * ALLOCNO_FREQ (a))\n-\t    / length)\n-\t   * (10000 / REG_FREQ_MAX) * PSEUDO_REGNO_SIZE (ALLOCNO_REGNO (a)));\n+\t= priority\n+\t= (mult\n+\t   * (ALLOCNO_MEMORY_COST (a) - ALLOCNO_COVER_CLASS_COST (a))\n+\t   * ira_reg_class_nregs[ALLOCNO_COVER_CLASS (a)][ALLOCNO_MODE (a)]);\n+      if (priority < 0)\n+\tpriority = -priority;\n+      if (max_priority < priority)\n+\tmax_priority = priority;\n+    }\n+  mult = max_priority == 0 ? 1 : INT_MAX / max_priority;\n+  for (i = 0; i < n; i++)\n+    {\n+      a = consideration_allocnos[i];\n+      length = ALLOCNO_EXCESS_PRESSURE_POINTS_NUM (a);\n+      if (length <= 0)\n+\tlength = 1;\n+      allocno_priorities[ALLOCNO_NUM (a)]\n+\t= allocno_priorities[ALLOCNO_NUM (a)] * mult / length;\n     }\n }\n \n@@ -2137,7 +2148,7 @@ ira_reassign_conflict_allocnos (int start_regno)\n   ira_free_bitmap (allocnos_to_color);\n   if (allocnos_to_color_num > 1)\n     {\n-      start_allocno_priorities (sorted_allocnos, allocnos_to_color_num);\n+      setup_allocno_priorities (sorted_allocnos, allocnos_to_color_num);\n       qsort (sorted_allocnos, allocnos_to_color_num, sizeof (ira_allocno_t),\n \t     allocno_priority_compare_func);\n     }\n@@ -2672,7 +2683,7 @@ ira_reassign_pseudos (int *spilled_pseudo_regs, int num,\n     }\n   if (n != 0)\n     {\n-      start_allocno_priorities (sorted_allocnos, n);\n+      setup_allocno_priorities (sorted_allocnos, n);\n       qsort (sorted_allocnos, n, sizeof (ira_allocno_t),\n \t     allocno_priority_compare_func);\n       for (i = 0; i < n; i++)\n@@ -3001,7 +3012,7 @@ ira_color (void)\n void\n ira_fast_allocation (void)\n {\n-  int i, j, k, l, num, class_size, hard_regno;\n+  int i, j, k, num, class_size, hard_regno;\n #ifdef STACK_REGS\n   bool no_stack_reg_p;\n #endif\n@@ -3012,28 +3023,17 @@ ira_fast_allocation (void)\n   allocno_live_range_t r;\n   HARD_REG_SET conflict_hard_regs, *used_hard_regs;\n \n-  allocno_priorities = (int *) ira_allocate (sizeof (int) * ira_allocnos_num);\n-  FOR_EACH_ALLOCNO (a, ai)\n-    {\n-      l = ALLOCNO_EXCESS_PRESSURE_POINTS_NUM (a);\n-      if (l <= 0)\n-\tl = 1;\n-      allocno_priorities[ALLOCNO_NUM (a)]\n-\t= (((double) (floor_log2 (ALLOCNO_NREFS (a))\n-\t\t      * (ALLOCNO_MEMORY_COST (a)\n-\t\t\t - ALLOCNO_COVER_CLASS_COST (a))) / l)\n-\t   * (10000 / REG_FREQ_MAX)\n-\t   * ira_reg_class_nregs[ALLOCNO_COVER_CLASS (a)][ALLOCNO_MODE (a)]);\n-    }\n-  used_hard_regs = (HARD_REG_SET *) ira_allocate (sizeof (HARD_REG_SET)\n-\t\t\t\t\t\t  * ira_max_point);\n-  for (i = 0; i < ira_max_point; i++)\n-    CLEAR_HARD_REG_SET (used_hard_regs[i]);\n   sorted_allocnos = (ira_allocno_t *) ira_allocate (sizeof (ira_allocno_t)\n \t\t\t\t\t\t    * ira_allocnos_num);\n   num = 0;\n   FOR_EACH_ALLOCNO (a, ai)\n     sorted_allocnos[num++] = a;\n+  allocno_priorities = (int *) ira_allocate (sizeof (int) * ira_allocnos_num);\n+  setup_allocno_priorities (sorted_allocnos, num);\n+  used_hard_regs = (HARD_REG_SET *) ira_allocate (sizeof (HARD_REG_SET)\n+\t\t\t\t\t\t  * ira_max_point);\n+  for (i = 0; i < ira_max_point; i++)\n+    CLEAR_HARD_REG_SET (used_hard_regs[i]);\n   qsort (sorted_allocnos, ira_allocnos_num, sizeof (ira_allocno_t), \n \t allocno_priority_compare_func);\n   for (i = 0; i < num; i++)"}]}