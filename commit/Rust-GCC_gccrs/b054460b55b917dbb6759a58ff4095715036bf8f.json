{"sha": "b054460b55b917dbb6759a58ff4095715036bf8f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjA1NDQ2MGI1NWI5MTdkYmI2NzU5YTU4ZmY0MDk1NzE1MDM2YmY4Zg==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@hxi.com", "date": "2000-10-18T04:32:48Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2000-10-18T04:32:48Z"}, "message": "h8300.md: Remove an unnecessary sign_extend expander that is used when not optimizing.\n\n2000-10-18  Kazu Hirata  <kazu@hxi.com>\n\n\t* config/h8300/h8300.md: Remove an unnecessary sign_extend\n\texpander that is used when not optimizing.  Output a tab after\n\teach assembly insns.\n\nFrom-SVN: r36925", "tree": {"sha": "841eb6ec8faf0329c6e7e5d4d66f1c324b5f3585", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/841eb6ec8faf0329c6e7e5d4d66f1c324b5f3585"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b054460b55b917dbb6759a58ff4095715036bf8f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b054460b55b917dbb6759a58ff4095715036bf8f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b054460b55b917dbb6759a58ff4095715036bf8f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b054460b55b917dbb6759a58ff4095715036bf8f/comments", "author": null, "committer": null, "parents": [{"sha": "15edc0cb96924c94cda82a9cfa425f92a7a5ed5e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15edc0cb96924c94cda82a9cfa425f92a7a5ed5e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15edc0cb96924c94cda82a9cfa425f92a7a5ed5e"}], "stats": {"total": 34, "additions": 11, "deletions": 23}, "files": [{"sha": "8d4b50b36167d26bfe88a066892a98b52c975ed5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b054460b55b917dbb6759a58ff4095715036bf8f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b054460b55b917dbb6759a58ff4095715036bf8f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b054460b55b917dbb6759a58ff4095715036bf8f", "patch": "@@ -1,3 +1,9 @@\n+2000-10-18  Kazu Hirata  <kazu@hxi.com>\n+\n+\t* config/h8300/h8300.md: Remove an unnecessary sign_extend\n+\texpander that is used when not optimizing.  Output a tab after\n+\teach assembly insns.\n+\n 2000-10-17  Joern Rennecke <amylaar@redhat.co.uk>\n \n \t* reload1.c (move2add_note_store): Check for simple"}, {"sha": "661f5a8aaa5d5f31eaf21a7175c1e02cf67e690e", "filename": "gcc/config/h8300/h8300.md", "status": "modified", "additions": 5, "deletions": 23, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b054460b55b917dbb6759a58ff4095715036bf8f/gcc%2Fconfig%2Fh8300%2Fh8300.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b054460b55b917dbb6759a58ff4095715036bf8f/gcc%2Fconfig%2Fh8300%2Fh8300.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.md?ref=b054460b55b917dbb6759a58ff4095715036bf8f", "patch": "@@ -623,7 +623,7 @@\n    subs\t%G2,%A0\n    add.b\t%s2,%s0\\;addx\t%t2,%t0\n    add.w\t%T2,%T0\n-   mov.w        %T1,%T0\\;add.w  %T2,%T0\"\n+   mov.w\t%T1,%T0\\;add.w\t%T2,%T0\"\n   [(set_attr \"length\" \"2,2,4,2,6\")\n    (set_attr \"cc\" \"none_0hit,none_0hit,clobber,set_zn,set_zn\")])\n \n@@ -980,7 +980,7 @@\n       return \\\"\\\";\n     }\n   if (TARGET_H8300H || TARGET_H8300S)\n-    return \\\"and.w %T2,%T0\\\";\n+    return \\\"and.w\t%T2,%T0\\\";\n   return \\\"and\t%s2,%s0\\;and\t%t2,%t0;\\\";\n }\"\n   [(set_attr \"length\" \"4\")\n@@ -1625,8 +1625,8 @@\n \t(zero_extend:SI (match_operand:QI 1 \"general_operand_src\" \"0,g>\")))]\n   \"TARGET_H8300\"\n   \"@\n-  mov.b\t#0,%x0\\;sub.w %e0,%e0\n-  mov.b\t%R1,%w0\\;mov.b\t#0,%x0\\;sub.w %e0,%e0\"\n+  mov.b\t#0,%x0\\;sub.w\t%e0,%e0\n+  mov.b\t%R1,%w0\\;mov.b\t#0,%x0\\;sub.w\t%e0,%e0\"\n   [(set_attr \"length\" \"4,6\")\n    (set_attr \"cc\" \"clobber,clobber\")])\n \n@@ -1688,32 +1688,14 @@\n   \"TARGET_H8300\"\n   \"@\n   bld\t#7,%w0\\;subx\t%x0,%x0\\;subx\t%y0,%y0\\;subx\t%z0,%z0\n-  mov.b %R1,%w0\\;bld\t#7,%w0\\;subx\t%x0,%x0\\;subx\t%y0,%y0\\;subx\t%z0,%z0\"\n+  mov.b\t%R1,%w0\\;bld\t#7,%w0\\;subx\t%x0,%x0\\;subx\t%y0,%y0\\;subx\t%z0,%z0\"\n   [(set_attr \"length\" \"8,10\")\n    (set_attr \"cc\" \"clobber,clobber\")])\n \n (define_expand \"extendhisi2\"\n   [(set (match_operand:SI 0 \"register_operand\" \"\")\n \t(sign_extend:SI (match_operand:HI 1 \"register_operand\" \"\")))]\n   \"\"\n-  \"\n-{\n-  if (TARGET_H8300\n-      && GET_CODE (operands[1]) != CONST_INT\n-      && !optimize)\n-    {\n-      emit_insn (gen_extendhisi2_h8300 (operands[0], operands[1]));\n-      DONE;\n-    }\n-}\")\n-\n-;; This is used when not optimizing.  It avoids severe code explosion\n-;; due to poor register allocation.\n-(define_expand \"extendhisi2_h8300\"\n-  [(set (reg:HI 1) (match_operand:HI 1 \"general_operand\" \"\"))\n-   (set (reg:SI 0) (sign_extend:SI (reg:HI 1)))\n-   (set (match_operand:SI 0 \"general_operand\" \"\") (reg:SI 0))]\n-  \"TARGET_H8300\"\n   \"\")\n \n (define_insn \"\""}]}