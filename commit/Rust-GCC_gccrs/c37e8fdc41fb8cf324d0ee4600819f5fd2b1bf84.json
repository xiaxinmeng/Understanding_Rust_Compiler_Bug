{"sha": "c37e8fdc41fb8cf324d0ee4600819f5fd2b1bf84", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzM3ZThmZGM0MWZiOGNmMzI0ZDBlZTQ2MDA4MTlmNWZkMmIxYmY4NA==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-03-08T12:01:37Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-04-21T11:37:02Z"}, "message": "Remove DEF_ENUM from stringop.def.\n\ngcc/ChangeLog:\n\n\t* config/i386/i386-options.c (DEF_ENUM): Remove it.\n\t* config/i386/i386-opts.h (DEF_ENUM): Likewise.\n\t* config/i386/stringop.def (DEF_ENUM): Likewise.", "tree": {"sha": "504ab24bdb6d437e4e820566c8b8d19dfa186b75", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/504ab24bdb6d437e4e820566c8b8d19dfa186b75"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c37e8fdc41fb8cf324d0ee4600819f5fd2b1bf84", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c37e8fdc41fb8cf324d0ee4600819f5fd2b1bf84", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c37e8fdc41fb8cf324d0ee4600819f5fd2b1bf84", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c37e8fdc41fb8cf324d0ee4600819f5fd2b1bf84/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d2218b045e0ef52df33230e137f80722c2a82a8a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2218b045e0ef52df33230e137f80722c2a82a8a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2218b045e0ef52df33230e137f80722c2a82a8a"}], "stats": {"total": 15, "additions": 0, "deletions": 15}, "files": [{"sha": "154234a6a44b4b045b9bd05e82e0bd114e76c325", "filename": "gcc/config/i386/i386-options.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c37e8fdc41fb8cf324d0ee4600819f5fd2b1bf84/gcc%2Fconfig%2Fi386%2Fi386-options.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c37e8fdc41fb8cf324d0ee4600819f5fd2b1bf84/gcc%2Fconfig%2Fi386%2Fi386-options.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-options.c?ref=c37e8fdc41fb8cf324d0ee4600819f5fd2b1bf84", "patch": "@@ -1455,10 +1455,8 @@ ix86_valid_target_attribute_p (tree fndecl,\n }\n \n const char *stringop_alg_names[] = {\n-#define DEF_ENUM\n #define DEF_ALG(alg, name) #name,\n #include \"stringop.def\"\n-#undef DEF_ENUM\n #undef DEF_ALG\n };\n "}, {"sha": "04e4ad608fb1bb99c76099adb35c731e8b5d8024", "filename": "gcc/config/i386/i386-opts.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c37e8fdc41fb8cf324d0ee4600819f5fd2b1bf84/gcc%2Fconfig%2Fi386%2Fi386-opts.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c37e8fdc41fb8cf324d0ee4600819f5fd2b1bf84/gcc%2Fconfig%2Fi386%2Fi386-opts.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-opts.h?ref=c37e8fdc41fb8cf324d0ee4600819f5fd2b1bf84", "patch": "@@ -28,16 +28,12 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n /* Algorithm to expand string function with.  */\n enum stringop_alg\n {\n-#undef DEF_ENUM\n-#define DEF_ENUM\n-\n #undef DEF_ALG\n #define DEF_ALG(alg, name) alg, \n \n #include \"stringop.def\"\n last_alg\n \n-#undef DEF_ENUM\n #undef DEF_ALG\n };\n "}, {"sha": "cd34b7e6b7dde40c3674856ab45ee49169043b5a", "filename": "gcc/config/i386/stringop.def", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c37e8fdc41fb8cf324d0ee4600819f5fd2b1bf84/gcc%2Fconfig%2Fi386%2Fstringop.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c37e8fdc41fb8cf324d0ee4600819f5fd2b1bf84/gcc%2Fconfig%2Fi386%2Fstringop.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fstringop.def?ref=c37e8fdc41fb8cf324d0ee4600819f5fd2b1bf84", "patch": "@@ -17,21 +17,12 @@ You should have received a copy of the GNU General Public License\n along with GCC; see the files COPYING3.  If not,\n see <http://www.gnu.org/licenses/>.  */\n \n-DEF_ENUM\n DEF_ALG (no_stringop, no_stringop)\n-DEF_ENUM\n DEF_ALG (libcall, libcall)\n-DEF_ENUM\n DEF_ALG (rep_prefix_1_byte, rep_byte)\n-DEF_ENUM\n DEF_ALG (rep_prefix_4_byte, rep_4byte)\n-DEF_ENUM\n DEF_ALG (rep_prefix_8_byte, rep_8byte)\n-DEF_ENUM\n DEF_ALG (loop_1_byte, byte_loop)\n-DEF_ENUM\n DEF_ALG (loop, loop)\n-DEF_ENUM\n DEF_ALG (unrolled_loop, unrolled_loop)\n-DEF_ENUM\n DEF_ALG (vector_loop, vector_loop)"}]}