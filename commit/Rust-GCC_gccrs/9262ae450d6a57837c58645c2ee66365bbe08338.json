{"sha": "9262ae450d6a57837c58645c2ee66365bbe08338", "node_id": "C_kwDOANBUbNoAKDkyNjJhZTQ1MGQ2YTU3ODM3YzU4NjQ1YzJlZTY2MzY1YmJlMDgzMzg", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2021-10-21T15:57:55Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2021-10-21T15:59:04Z"}, "message": "Fix again PR middle-end/102764\n\ngcc/\n\tPR middle-end/102764\n\t* cfgexpand.c (expand_gimple_basic_block): Robustify latest change.", "tree": {"sha": "d63d6196234c88e777b0681bbc275da22a4e7209", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d63d6196234c88e777b0681bbc275da22a4e7209"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9262ae450d6a57837c58645c2ee66365bbe08338", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9262ae450d6a57837c58645c2ee66365bbe08338", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9262ae450d6a57837c58645c2ee66365bbe08338", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9262ae450d6a57837c58645c2ee66365bbe08338/comments", "author": null, "committer": null, "parents": [{"sha": "48154969d4b2e530af68ae9cd4277facf9d3f1a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48154969d4b2e530af68ae9cd4277facf9d3f1a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/48154969d4b2e530af68ae9cd4277facf9d3f1a2"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "01d0cdc548aabf04ea108e855489ea1241f8953e", "filename": "gcc/cfgexpand.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9262ae450d6a57837c58645c2ee66365bbe08338/gcc%2Fcfgexpand.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9262ae450d6a57837c58645c2ee66365bbe08338/gcc%2Fcfgexpand.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgexpand.c?ref=9262ae450d6a57837c58645c2ee66365bbe08338", "patch": "@@ -5756,6 +5756,7 @@ expand_gimple_basic_block (basic_block bb, bool disable_tail_calls)\n   rtx_insn *last;\n   edge e;\n   edge_iterator ei;\n+  bool nondebug_stmt_seen = false;\n \n   if (dump_file)\n     fprintf (dump_file, \"\\n;; Generating RTL for gimple basic block %d\\n\",\n@@ -5836,6 +5837,8 @@ expand_gimple_basic_block (basic_block bb, bool disable_tail_calls)\n       basic_block new_bb;\n \n       stmt = gsi_stmt (gsi);\n+      if (!is_gimple_debug (stmt))\n+\tnondebug_stmt_seen = true;\n \n       /* If this statement is a non-debug one, and we generate debug\n \t insns, then this one might be the last real use of a TERed\n@@ -6090,7 +6093,7 @@ expand_gimple_basic_block (basic_block bb, bool disable_tail_calls)\n   /* Expand implicit goto and convert goto_locus.  */\n   FOR_EACH_EDGE (e, ei, bb->succs)\n     {\n-      if (e->goto_locus != UNKNOWN_LOCATION || !stmt || is_gimple_debug (stmt))\n+      if (e->goto_locus != UNKNOWN_LOCATION || !nondebug_stmt_seen)\n \tset_curr_insn_location (e->goto_locus);\n       if ((e->flags & EDGE_FALLTHRU) && e->dest != bb->next_bb)\n \t{"}]}