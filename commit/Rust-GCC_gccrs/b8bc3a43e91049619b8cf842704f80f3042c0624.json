{"sha": "b8bc3a43e91049619b8cf842704f80f3042c0624", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjhiYzNhNDNlOTEwNDk2MTliOGNmODQyNzA0ZjgwZjMwNDJjMDYyNA==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2011-06-09T16:22:47Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2011-06-09T16:22:47Z"}, "message": "i386.md (*movdi_internal_rex64): Merge alternatives 6 and 8.\n\n\t* config/i386/i386.md (*movdi_internal_rex64): Merge\n\talternatives 6 and 8.\n\nFrom-SVN: r174850", "tree": {"sha": "331bb9b60e164531549cb4888dc8c3e9e8c6c3bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/331bb9b60e164531549cb4888dc8c3e9e8c6c3bd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b8bc3a43e91049619b8cf842704f80f3042c0624", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8bc3a43e91049619b8cf842704f80f3042c0624", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8bc3a43e91049619b8cf842704f80f3042c0624", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8bc3a43e91049619b8cf842704f80f3042c0624/comments", "author": null, "committer": null, "parents": [{"sha": "4745da6ed70907824215abbe37286f55985f5a53", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4745da6ed70907824215abbe37286f55985f5a53", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4745da6ed70907824215abbe37286f55985f5a53"}], "stats": {"total": 81, "additions": 38, "deletions": 43}, "files": [{"sha": "76053c9eed7b76693e1ee52f82f58b3013a206bd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 25, "deletions": 30, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8bc3a43e91049619b8cf842704f80f3042c0624/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8bc3a43e91049619b8cf842704f80f3042c0624/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b8bc3a43e91049619b8cf842704f80f3042c0624", "patch": "@@ -1,3 +1,8 @@\n+2011-06-09  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.md (*movdi_internal_rex64): Merge\n+\talternatives 6 and 8.\n+\n 2011-06-09  David Li  <davidxl@google.com>\n \n \t* cgraphunit.c (cgraph_finalize_compilation_unit): Pass dump.\n@@ -22,7 +27,6 @@\n \t(convert_to_eh_region_ranges): Ditto.\n \t* cprop.c (one_cprop_pass): Ditto.\n \n-\n 2011-06-09  Bernd Schmidt  <bernds@codesourcery.com>\n \n \tPR target/48673\n@@ -86,8 +90,7 @@\n \t(TARGET_STACK_PROTECT_FAIL): Likewise.\n \t(rs6000_stack_protect_fail): Mark unused.\n \t* dwarf2asm.c (dw2_output_indirect_constant_1): Mark decl hidden if\n-\tUSE_LINKONCE_INDIRECT.\n-\tDon't emit .hidden expicitly.\n+\tUSE_LINKONCE_INDIRECT.  Don't emit .hidden expicitly.\n \n 2011-06-08  Andi Kleen  <ak@linux.intel.com>\n \n@@ -102,9 +105,8 @@\n 2011-06-08  Andi Kleen  <ak@linux.intel.com>\n \n \t* reginfo.c (global_regs_decl): Add.\n-\t(globalize_reg): Add decl parameter. Compute location.\n-\tPass location to warnings and add inform. Store decl\n-\tin global_regs_decl.\n+\t(globalize_reg): Add decl parameter. Compute location.  Pass location\n+\tto warnings and add inform. Store decl in global_regs_decl.\n \t* rtl.h (globalize_reg): Update prototype.\n \t* varasm.c (make_decl_rtl): Pass decl to globalize_reg().\n \n@@ -121,8 +123,7 @@\n \n 2011-06-09  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n-\t* doc/objc.texi (Traditional GNU Objective-C runtime API):\n-\tUpdated.\n+\t* doc/objc.texi (Traditional GNU Objective-C runtime API): Updated.\n \n 2011-06-08  Alexandre Oliva  <aoliva@redhat.com>\n \n@@ -231,8 +232,7 @@\n 2011-06-07  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR gcov-profile/49299\n-\t* value-prof.c (gimple_ic): Don't assume icall has\n-\ta fallthru edge.\n+\t* value-prof.c (gimple_ic): Don't assume icall has a fallthru edge.\n \n 2011-06-07  Ira Rosen  <ira.rosen@linaro.org>\n \n@@ -271,9 +271,8 @@\n \tPR c++/49264\n \t* gimple-fold.c (fold_stmt_1): Don't try to fold *& on the lhs\n \tif stmt folded into nothing.\n-\t* tree-inline.c (fold_marked_statements): If a builtin at the\n-\tend of a bb folded into nothing, just update cgraph edges\n-\tand move to next bb.\n+\t* tree-inline.c (fold_marked_statements): If a builtin at the end of\n+\ta bb folded into nothing, just update cgraph edges and move to next bb.\n \t* cgraph.c (cgraph_update_edges_for_call_stmt_node): Allow new_stmt\n \tto be NULL.  Don't compute count and frequency if new_call is NULL.\n \n@@ -297,17 +296,13 @@\n \tMove initialization code to lto/lto.c.\n \t* lto-streamer-out.c (pack_value_fields): Call\n \tstreamer_hooks.pack_value_fields if set.\n-\t(lto_output_tree_ref): For tree nodes that are not\n-\tnormally indexable, call streamer_hooks.indexable_with_decls_p\n-\tbefore giving up.\n+\t(lto_output_tree_ref): For tree nodes that are not normally indexable,\n+\tcall streamer_hooks.indexable_with_decls_p before giving up.\n \t(lto_output_ts_decl_common_tree_pointers): Move handling\n-\tfor FUNCTION_DECL and TRANSLATION_UNIT_DECL to\n-\tlto_streamer_write_tree.\n-\t(lto_output_tree_header): Call streamer_hooks.is_streamable\n-\tinstead of lto_is_streamable.\n-\tCall lto_streamer_hooks.output_tree_header if set.\n-\t(lto_write_tree): Call lto_streamer_hooks.write_tree if\n-\tset.\n+\tfor FUNCTION_DECL and TRANSLATION_UNIT_DECL to lto_streamer_write_tree.\n+\t(lto_output_tree_header): Call streamer_hooks.is_streamable instead of\n+\tlto_is_streamable.  Call lto_streamer_hooks.output_tree_header if set.\n+\t(lto_write_tree): Call lto_streamer_hooks.write_tree if set.\n \t(lto_streamer_write_tree): New.\n \t(lto_output): Call lto_streamer_init directly.\n \t(lto_writer_init): Remove.\n@@ -347,7 +342,7 @@\n \t(expand_builtin_pow): Remove.\n \t(expand_builtin_powi): Eliminate handling of constant exponent.\n \t(expand_builtin): Use expand_builtin_mathfn_2 for BUILT_IN_POW.\n-\t\n+\n 2011-06-06  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* cprop.c (local_cprop_pass): Don't set changed for debug insns.\n@@ -401,10 +396,9 @@\n 2011-06-06  Hans-Peter Nilsson  <hp@bitrange.com>\n \n \tPR target/49285\n-\t* config/mmix/mmix.md (\"truncdfsf2\", \"extendsfdf2\"): Correct\n-\tpredicate to nonimmediate_operand from memory_operand for the\n-\toperand that is to be forced to memory by the expander.  Lose\n-\tthe constraints.\n+\t* config/mmix/mmix.md (\"truncdfsf2\", \"extendsfdf2\"): Correct predicate\n+\tto nonimmediate_operand from memory_operand for the operand that is to\n+\tbe forced to memory by the expander.  Lose the constraints.\n \n 2011-06-05  Eric Botcazou  <ebotcazou@adacore.com>\n \n@@ -432,7 +426,8 @@\n 2011-06-04  Jan Hubicka  <jh@suse.cz>\n \n \tPR lto/48954\n-\t* lto-cgraph.c (output_node_opt_summary): Handle NULL skip args bitmaps.\n+\t* lto-cgraph.c (output_node_opt_summary): Handle NULL skip args\n+\tbitmaps.\n \n 2011-06-04  Jonathan Wakely  <jwakely.gcc@gmail.com>\n \n@@ -12007,7 +12002,7 @@\n \t(avr_function_value): Make static. Rename 'func' argument to\n \t'fn_decl_or_type', forward it to avr_libcall_value. Call\n \tavr_ret_register function instead of RET_REGISTER macro.\n- \t(TARGET_LIBCALL_VALUE, TARGET_FUNCTION_VALUE_REGNO_P): Define.\n+\t(TARGET_LIBCALL_VALUE, TARGET_FUNCTION_VALUE_REGNO_P): Define.\n \n 2011-03-18  Jason Merrill  <jason@redhat.com>\n "}, {"sha": "b01435ce2c3dbec8733cfe29a9a23942cd8be407", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8bc3a43e91049619b8cf842704f80f3042c0624/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8bc3a43e91049619b8cf842704f80f3042c0624/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=b8bc3a43e91049619b8cf842704f80f3042c0624", "patch": "@@ -1975,9 +1975,9 @@\n \n (define_insn \"*movdi_internal_rex64\"\n   [(set (match_operand:DI 0 \"nonimmediate_operand\"\n-\t  \"=r,r  ,r,m ,!m,*y,*y,?r ,m ,?*Ym,?*y,*x,*x,?r ,m,?*Yi,*x,?*x,?*Ym\")\n+\t  \"=r,r  ,r,m ,!m,*y,m*y,?*y,?r ,?*Ym,*x,m ,*x,*x,?r ,?*Yi,?*x,?*Ym\")\n \t(match_operand:DI 1 \"general_operand\"\n-\t  \"Z ,rem,i,re,n ,C ,*y,*Ym,*y,r   ,m  ,C ,*x,*Yi,*x,r  ,m ,*Ym,*x\"))]\n+\t  \"Z ,rem,i,re,n ,C ,*y ,m  ,*Ym,r   ,C ,*x,*x,m ,*Yi,r   ,*Ym,*x\"))]\n   \"TARGET_64BIT && !(MEM_P (operands[0]) && MEM_P (operands[1]))\"\n {\n   switch (get_attr_type (insn))\n@@ -2027,18 +2027,18 @@\n     }\n }\n   [(set (attr \"type\")\n-     (cond [(eq_attr \"alternative\" \"5\")\n+     (cond [(eq_attr \"alternative\" \"4\")\n+\t      (const_string \"multi\")\n+\t    (eq_attr \"alternative\" \"5\")\n \t      (const_string \"mmx\")\n-\t    (eq_attr \"alternative\" \"6,7,8,9,10\")\n+\t    (eq_attr \"alternative\" \"6,7,8,9\")\n \t      (const_string \"mmxmov\")\n-\t    (eq_attr \"alternative\" \"11\")\n+\t    (eq_attr \"alternative\" \"10\")\n \t      (const_string \"sselog1\")\n-\t    (eq_attr \"alternative\" \"12,13,14,15,16\")\n+\t    (eq_attr \"alternative\" \"11,12,13,14,15\")\n \t      (const_string \"ssemov\")\n-\t    (eq_attr \"alternative\" \"17,18\")\n+\t    (eq_attr \"alternative\" \"16,17\")\n \t      (const_string \"ssecvt\")\n-\t    (eq_attr \"alternative\" \"4\")\n-\t      (const_string \"multi\")\n  \t    (match_operand:DI 1 \"pic_32bit_operand\" \"\")\n \t      (const_string \"lea\")\n \t   ]\n@@ -2054,18 +2054,18 @@\n \t (const_string \"8\")\n \t (const_string \"*\")))\n    (set (attr \"prefix_rex\")\n-     (if_then_else (eq_attr \"alternative\" \"7,9\")\n+     (if_then_else (eq_attr \"alternative\" \"8,9\")\n        (const_string \"1\")\n        (const_string \"*\")))\n    (set (attr \"prefix_data16\")\n-     (if_then_else (eq_attr \"alternative\" \"15\")\n+     (if_then_else (eq_attr \"alternative\" \"11\")\n        (const_string \"1\")\n        (const_string \"*\")))\n    (set (attr \"prefix\")\n-     (if_then_else (eq_attr \"alternative\" \"11,12,13,14,15,16\")\n+     (if_then_else (eq_attr \"alternative\" \"10,11,12,13,14,15\")\n        (const_string \"maybe_vex\")\n        (const_string \"orig\")))\n-   (set_attr \"mode\" \"SI,DI,DI,DI,SI,DI,DI,DI,DI,DI,DI,TI,TI,DI,DI,DI,DI,DI,DI\")])\n+   (set_attr \"mode\" \"SI,DI,DI,DI,SI,DI,DI,DI,DI,DI,TI,DI,TI,DI,DI,DI,DI,DI\")])\n \n ;; Convert impossible stores of immediate to existing instructions.\n ;; First try to get scratch register and go through it.  In case this"}]}