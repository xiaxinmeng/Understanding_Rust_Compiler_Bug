{"sha": "a7155c2e0b061212722faf5744cb3781e9a18aa3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTcxNTVjMmUwYjA2MTIxMjcyMmZhZjU3NDRjYjM3ODFlOWExOGFhMw==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2019-05-30T09:06:48Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2019-05-30T09:06:48Z"}, "message": "Generalize getconf _NPROCESSORS_ONLN\n\n\tlibgomp:\n\t* configure.ac: Call AX_COUNT_CPUS.\n\tSubstitute CPU_COUNT.\n\t* testsuite/Makefile.am (check-am): Use CPU_COUNT as processor\n\tcount fallback.\n\t* aclocal.m4: Regenerate.\n\t* configure: Regenerate.\n\t* Makefile.in, testsuite/Makefile.in: Regenerate.\n\n\tconfig:\n\t* ax_count_cpus.m4: New file.\n\nFrom-SVN: r271769", "tree": {"sha": "85909d95bf4225e5242b1334f4f28f777989c56f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/85909d95bf4225e5242b1334f4f28f777989c56f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a7155c2e0b061212722faf5744cb3781e9a18aa3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7155c2e0b061212722faf5744cb3781e9a18aa3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7155c2e0b061212722faf5744cb3781e9a18aa3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7155c2e0b061212722faf5744cb3781e9a18aa3/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b8148c42da02357784830917421d6091fbe69a83", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8148c42da02357784830917421d6091fbe69a83", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8148c42da02357784830917421d6091fbe69a83"}], "stats": {"total": 239, "additions": 229, "deletions": 10}, "files": [{"sha": "c323fc48d4ee50d125e3265ca6fc1c7c55f3f93e", "filename": "config/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7155c2e0b061212722faf5744cb3781e9a18aa3/config%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7155c2e0b061212722faf5744cb3781e9a18aa3/config%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2FChangeLog?ref=a7155c2e0b061212722faf5744cb3781e9a18aa3", "patch": "@@ -1,3 +1,7 @@\n+2019-05-30  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* ax_count_cpus.m4: New file.\n+\n 2019-05-02  Richard Biener  <rguenther@suse.de>\n \n \tPR bootstrap/85574"}, {"sha": "5db89255343783e2a8a09841df3440d9cc67836e", "filename": "config/ax_count_cpus.m4", "status": "added", "additions": 101, "deletions": 0, "changes": 101, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7155c2e0b061212722faf5744cb3781e9a18aa3/config%2Fax_count_cpus.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7155c2e0b061212722faf5744cb3781e9a18aa3/config%2Fax_count_cpus.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Fax_count_cpus.m4?ref=a7155c2e0b061212722faf5744cb3781e9a18aa3", "patch": "@@ -0,0 +1,101 @@\n+# ===========================================================================\n+#      https://www.gnu.org/software/autoconf-archive/ax_count_cpus.html\n+# ===========================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_COUNT_CPUS([ACTION-IF-DETECTED],[ACTION-IF-NOT-DETECTED])\n+#\n+# DESCRIPTION\n+#\n+#   Attempt to count the number of logical processor cores (including\n+#   virtual and HT cores) currently available to use on the machine and\n+#   place detected value in CPU_COUNT variable.\n+#\n+#   On successful detection, ACTION-IF-DETECTED is executed if present. If\n+#   the detection fails, then ACTION-IF-NOT-DETECTED is triggered. The\n+#   default ACTION-IF-NOT-DETECTED is to set CPU_COUNT to 1.\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2014,2016 Karlson2k (Evgeny Grin) <k2k@narod.ru>\n+#   Copyright (c) 2012 Brian Aker <brian@tangent.org>\n+#   Copyright (c) 2008 Michael Paul Bailey <jinxidoru@byu.net>\n+#   Copyright (c) 2008 Christophe Tournayre <turn3r@users.sourceforge.net>\n+#\n+#   Copying and distribution of this file, with or without modification, are\n+#   permitted in any medium without royalty provided the copyright notice\n+#   and this notice are preserved. This file is offered as-is, without any\n+#   warranty.\n+\n+#serial 22\n+\n+  AC_DEFUN([AX_COUNT_CPUS],[dnl\n+      AC_REQUIRE([AC_CANONICAL_HOST])dnl\n+      AC_REQUIRE([AC_PROG_EGREP])dnl\n+      AC_MSG_CHECKING([the number of available CPUs])\n+      CPU_COUNT=\"0\"\n+\n+      # Try generic methods\n+\n+      # 'getconf' is POSIX utility, but '_NPROCESSORS_ONLN' and\n+      # 'NPROCESSORS_ONLN' are platform-specific\n+      command -v getconf >/dev/null 2>&1 && \\\n+        CPU_COUNT=`getconf _NPROCESSORS_ONLN 2>/dev/null || getconf NPROCESSORS_ONLN 2>/dev/null` || CPU_COUNT=\"0\"\n+      AS_IF([[test \"$CPU_COUNT\" -gt \"0\" 2>/dev/null || ! command -v nproc >/dev/null 2>&1]],[[: # empty]],[dnl\n+        # 'nproc' is part of GNU Coreutils and is widely available\n+        CPU_COUNT=`OMP_NUM_THREADS='' nproc 2>/dev/null` || CPU_COUNT=`nproc 2>/dev/null` || CPU_COUNT=\"0\"\n+      ])dnl\n+\n+      AS_IF([[test \"$CPU_COUNT\" -gt \"0\" 2>/dev/null]],[[: # empty]],[dnl\n+        # Try platform-specific preferred methods\n+        AS_CASE([[$host_os]],dnl\n+          [[*linux*]],[[CPU_COUNT=`lscpu -p 2>/dev/null | $EGREP -e '^@<:@0-9@:>@+,' -c` || CPU_COUNT=\"0\"]],dnl\n+          [[*darwin*]],[[CPU_COUNT=`sysctl -n hw.logicalcpu 2>/dev/null` || CPU_COUNT=\"0\"]],dnl\n+          [[freebsd*]],[[command -v sysctl >/dev/null 2>&1 && CPU_COUNT=`sysctl -n kern.smp.cpus 2>/dev/null` || CPU_COUNT=\"0\"]],dnl\n+          [[netbsd*]], [[command -v sysctl >/dev/null 2>&1 && CPU_COUNT=`sysctl -n hw.ncpuonline 2>/dev/null` || CPU_COUNT=\"0\"]],dnl\n+          [[solaris*]],[[command -v psrinfo >/dev/null 2>&1 && CPU_COUNT=`psrinfo 2>/dev/null | $EGREP -e '^@<:@0-9@:>@.*on-line' -c 2>/dev/null` || CPU_COUNT=\"0\"]],dnl\n+          [[mingw*]],[[CPU_COUNT=`ls -qpU1 /proc/registry/HKEY_LOCAL_MACHINE/HARDWARE/DESCRIPTION/System/CentralProcessor/ 2>/dev/null | $EGREP -e '^@<:@0-9@:>@+/' -c` || CPU_COUNT=\"0\"]],dnl\n+          [[msys*]],[[CPU_COUNT=`ls -qpU1 /proc/registry/HKEY_LOCAL_MACHINE/HARDWARE/DESCRIPTION/System/CentralProcessor/ 2>/dev/null | $EGREP -e '^@<:@0-9@:>@+/' -c` || CPU_COUNT=\"0\"]],dnl\n+          [[cygwin*]],[[CPU_COUNT=`ls -qpU1 /proc/registry/HKEY_LOCAL_MACHINE/HARDWARE/DESCRIPTION/System/CentralProcessor/ 2>/dev/null | $EGREP -e '^@<:@0-9@:>@+/' -c` || CPU_COUNT=\"0\"]]dnl\n+        )dnl\n+      ])dnl\n+\n+      AS_IF([[test \"$CPU_COUNT\" -gt \"0\" 2>/dev/null || ! command -v sysctl >/dev/null 2>&1]],[[: # empty]],[dnl\n+        # Try less preferred generic method\n+        # 'hw.ncpu' exist on many platforms, but not on GNU/Linux\n+        CPU_COUNT=`sysctl -n hw.ncpu 2>/dev/null` || CPU_COUNT=\"0\"\n+      ])dnl\n+\n+      AS_IF([[test \"$CPU_COUNT\" -gt \"0\" 2>/dev/null]],[[: # empty]],[dnl\n+      # Try platform-specific fallback methods\n+      # They can be less accurate and slower then preferred methods\n+        AS_CASE([[$host_os]],dnl\n+          [[*linux*]],[[CPU_COUNT=`$EGREP -e '^processor' -c /proc/cpuinfo 2>/dev/null` || CPU_COUNT=\"0\"]],dnl\n+          [[*darwin*]],[[CPU_COUNT=`system_profiler SPHardwareDataType 2>/dev/null | $EGREP -i -e 'number of cores:'|cut -d : -f 2 -s|tr -d ' '` || CPU_COUNT=\"0\"]],dnl\n+          [[freebsd*]],[[CPU_COUNT=`dmesg 2>/dev/null| $EGREP -e '^cpu@<:@0-9@:>@+: '|sort -u|$EGREP -e '^' -c` || CPU_COUNT=\"0\"]],dnl\n+          [[netbsd*]], [[CPU_COUNT=`command -v cpuctl >/dev/null 2>&1 && cpuctl list 2>/dev/null| $EGREP -e '^@<:@0-9@:>@+ .* online ' -c` || \\\n+                           CPU_COUNT=`dmesg 2>/dev/null| $EGREP -e '^cpu@<:@0-9@:>@+ at'|sort -u|$EGREP -e '^' -c` || CPU_COUNT=\"0\"]],dnl\n+          [[solaris*]],[[command -v kstat >/dev/null 2>&1 && CPU_COUNT=`kstat -m cpu_info -s state -p 2>/dev/null | $EGREP -c -e 'on-line'` || \\\n+                           CPU_COUNT=`kstat -m cpu_info 2>/dev/null | $EGREP -c -e 'module: cpu_info'` || CPU_COUNT=\"0\"]],dnl\n+          [[mingw*]],[AS_IF([[CPU_COUNT=`reg query 'HKLM\\\\Hardware\\\\Description\\\\System\\\\CentralProcessor' 2>/dev/null | $EGREP -e '\\\\\\\\@<:@0-9@:>@+$' -c`]],dnl\n+                        [[: # empty]],[[test \"$NUMBER_OF_PROCESSORS\" -gt \"0\" 2>/dev/null && CPU_COUNT=\"$NUMBER_OF_PROCESSORS\"]])],dnl\n+          [[msys*]],[[test \"$NUMBER_OF_PROCESSORS\" -gt \"0\" 2>/dev/null && CPU_COUNT=\"$NUMBER_OF_PROCESSORS\"]],dnl\n+          [[cygwin*]],[[test \"$NUMBER_OF_PROCESSORS\" -gt \"0\" 2>/dev/null && CPU_COUNT=\"$NUMBER_OF_PROCESSORS\"]]dnl\n+        )dnl\n+      ])dnl\n+\n+      AS_IF([[test \"x$CPU_COUNT\" != \"x0\" && test \"$CPU_COUNT\" -gt 0 2>/dev/null]],[dnl\n+          AC_MSG_RESULT([[$CPU_COUNT]])\n+          m4_ifvaln([$1],[$1],)dnl\n+        ],[dnl\n+          m4_ifval([$2],[dnl\n+            AS_UNSET([[CPU_COUNT]])\n+            AC_MSG_RESULT([[unable to detect]])\n+            $2\n+          ], [dnl\n+            CPU_COUNT=\"1\"\n+            AC_MSG_RESULT([[unable to detect (assuming 1)]])\n+          ])dnl\n+        ])dnl\n+      ])dnl"}, {"sha": "2e1a00ef3b13a8e4c7384fee3a8c87c94ed2d636", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7155c2e0b061212722faf5744cb3781e9a18aa3/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7155c2e0b061212722faf5744cb3781e9a18aa3/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=a7155c2e0b061212722faf5744cb3781e9a18aa3", "patch": "@@ -1,3 +1,13 @@\n+2019-05-30  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* configure.ac: Call AX_COUNT_CPUS.\n+\tSubstitute CPU_COUNT.\n+\t* testsuite/Makefile.am (check-am): Use CPU_COUNT as processor\n+\tcount fallback.\n+\t* aclocal.m4: Regenerate.\n+\t* configure: Regenerate.\n+\t* Makefile.in, testsuite/Makefile.in: Regenerate.\n+\n 2019-05-29  Jakub Jelinek  <jakub@redhat.com>\n \n \t* testsuite/libgomp.c-c++-common/lastprivate_conditional_4.c: Rename"}, {"sha": "5abf7d434387e20c7fcf524432a05e4420ce1ce8", "filename": "libgomp/Makefile.in", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7155c2e0b061212722faf5744cb3781e9a18aa3/libgomp%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7155c2e0b061212722faf5744cb3781e9a18aa3/libgomp%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FMakefile.in?ref=a7155c2e0b061212722faf5744cb3781e9a18aa3", "patch": "@@ -16,7 +16,7 @@\n \n # Plugins for offload execution, Makefile.am fragment.\n #\n-# Copyright (C) 2014-2018 Free Software Foundation, Inc.\n+# Copyright (C) 2014-2019 Free Software Foundation, Inc.\n #\n # Contributed by Mentor Embedded.\n #\n@@ -124,6 +124,7 @@ target_triplet = @target@\n subdir = .\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n+\t$(top_srcdir)/../config/ax_count_cpus.m4 \\\n \t$(top_srcdir)/../config/depstand.m4 \\\n \t$(top_srcdir)/../config/enable.m4 \\\n \t$(top_srcdir)/../config/futex.m4 \\\n@@ -365,6 +366,7 @@ CCDEPMODE = @CCDEPMODE@\n CFLAGS = @CFLAGS@\n CPP = @CPP@\n CPPFLAGS = @CPPFLAGS@\n+CPU_COUNT = @CPU_COUNT@\n CUDA_DRIVER_INCLUDE = @CUDA_DRIVER_INCLUDE@\n CUDA_DRIVER_LIB = @CUDA_DRIVER_LIB@\n CYGPATH_W = @CYGPATH_W@"}, {"sha": "9d3a4ececcce239899cc8f673010aa67d1338253", "filename": "libgomp/aclocal.m4", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7155c2e0b061212722faf5744cb3781e9a18aa3/libgomp%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7155c2e0b061212722faf5744cb3781e9a18aa3/libgomp%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Faclocal.m4?ref=a7155c2e0b061212722faf5744cb3781e9a18aa3", "patch": "@@ -1168,6 +1168,7 @@ AC_SUBST([am__untar])\n ]) # _AM_PROG_TAR\n \n m4_include([../config/acx.m4])\n+m4_include([../config/ax_count_cpus.m4])\n m4_include([../config/depstand.m4])\n m4_include([../config/enable.m4])\n m4_include([../config/futex.m4])"}, {"sha": "fd7394b5ddad4f063b09abe7cb19896fade4798a", "filename": "libgomp/configure", "status": "modified", "additions": 100, "deletions": 5, "changes": 105, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7155c2e0b061212722faf5744cb3781e9a18aa3/libgomp%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7155c2e0b061212722faf5744cb3781e9a18aa3/libgomp%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fconfigure?ref=a7155c2e0b061212722faf5744cb3781e9a18aa3", "patch": "@@ -653,6 +653,7 @@ link_gomp\n XLDFLAGS\n XCFLAGS\n config_path\n+CPU_COUNT\n LIBGOMP_BUILD_VERSIONED_SHLIB_SUN_FALSE\n LIBGOMP_BUILD_VERSIONED_SHLIB_SUN_TRUE\n LIBGOMP_BUILD_VERSIONED_SHLIB_GNU_FALSE\n@@ -11393,7 +11394,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11396 \"configure\"\n+#line 11397 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11499,7 +11500,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11502 \"configure\"\n+#line 11503 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -15376,7 +15377,7 @@ fi\n \n # Plugins for offload execution, configure.ac fragment.  -*- mode: autoconf -*-\n #\n-# Copyright (C) 2014-2018 Free Software Foundation, Inc.\n+# Copyright (C) 2014-2019 Free Software Foundation, Inc.\n #\n # Contributed by Mentor Embedded.\n #\n@@ -15824,8 +15825,7 @@ for ac_func in aligned_alloc posix_memalign memalign _aligned_malloc\n do :\n   as_ac_var=`$as_echo \"ac_cv_func_$ac_func\" | $as_tr_sh`\n ac_fn_c_check_func \"$LINENO\" \"$ac_func\" \"$as_ac_var\"\n-eval as_val=\\$$as_ac_var\n-   if test \"x$as_val\" = x\"\"yes; then :\n+if eval test \\\"x\\$\"$as_ac_var\"\\\" = x\"yes\"; then :\n   cat >>confdefs.h <<_ACEOF\n #define `$as_echo \"HAVE_$ac_func\" | $as_tr_cpp` 1\n _ACEOF\n@@ -16905,6 +16905,101 @@ $as_echo \"#define LIBGOMP_GNU_SYMBOL_VERSIONING 1\" >>confdefs.h\n \n fi\n \n+# Determine cpu count to limit testsuite parallelism.\n+                  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking the number of available CPUs\" >&5\n+$as_echo_n \"checking the number of available CPUs... \" >&6; }\n+      CPU_COUNT=\"0\"\n+\n+      # Try generic methods\n+\n+      # 'getconf' is POSIX utility, but '_NPROCESSORS_ONLN' and\n+      # 'NPROCESSORS_ONLN' are platform-specific\n+      command -v getconf >/dev/null 2>&1 && \\\n+        CPU_COUNT=`getconf _NPROCESSORS_ONLN 2>/dev/null || getconf NPROCESSORS_ONLN 2>/dev/null` || CPU_COUNT=\"0\"\n+      if test \"$CPU_COUNT\" -gt \"0\" 2>/dev/null || ! command -v nproc >/dev/null 2>&1; then :\n+  : # empty\n+else\n+          # 'nproc' is part of GNU Coreutils and is widely available\n+        CPU_COUNT=`OMP_NUM_THREADS='' nproc 2>/dev/null` || CPU_COUNT=`nproc 2>/dev/null` || CPU_COUNT=\"0\"\n+\n+fi\n+      if test \"$CPU_COUNT\" -gt \"0\" 2>/dev/null; then :\n+  : # empty\n+else\n+          # Try platform-specific preferred methods\n+        case $host_os in #(\n+            *linux*) :\n+    CPU_COUNT=`lscpu -p 2>/dev/null | $EGREP -e '^[0-9]+,' -c` || CPU_COUNT=\"0\" ;; #(\n+            *darwin*) :\n+    CPU_COUNT=`sysctl -n hw.logicalcpu 2>/dev/null` || CPU_COUNT=\"0\" ;; #(\n+            freebsd*) :\n+    command -v sysctl >/dev/null 2>&1 && CPU_COUNT=`sysctl -n kern.smp.cpus 2>/dev/null` || CPU_COUNT=\"0\" ;; #(\n+            netbsd*) :\n+    command -v sysctl >/dev/null 2>&1 && CPU_COUNT=`sysctl -n hw.ncpuonline 2>/dev/null` || CPU_COUNT=\"0\" ;; #(\n+            solaris*) :\n+    command -v psrinfo >/dev/null 2>&1 && CPU_COUNT=`psrinfo 2>/dev/null | $EGREP -e '^[0-9].*on-line' -c 2>/dev/null` || CPU_COUNT=\"0\" ;; #(\n+            mingw*) :\n+    CPU_COUNT=`ls -qpU1 /proc/registry/HKEY_LOCAL_MACHINE/HARDWARE/DESCRIPTION/System/CentralProcessor/ 2>/dev/null | $EGREP -e '^[0-9]+/' -c` || CPU_COUNT=\"0\" ;; #(\n+            msys*) :\n+    CPU_COUNT=`ls -qpU1 /proc/registry/HKEY_LOCAL_MACHINE/HARDWARE/DESCRIPTION/System/CentralProcessor/ 2>/dev/null | $EGREP -e '^[0-9]+/' -c` || CPU_COUNT=\"0\" ;; #(\n+            cygwin*) :\n+    CPU_COUNT=`ls -qpU1 /proc/registry/HKEY_LOCAL_MACHINE/HARDWARE/DESCRIPTION/System/CentralProcessor/ 2>/dev/null | $EGREP -e '^[0-9]+/' -c` || CPU_COUNT=\"0\"         ;; #(\n+  *) :\n+     ;;\n+esac\n+fi\n+      if test \"$CPU_COUNT\" -gt \"0\" 2>/dev/null || ! command -v sysctl >/dev/null 2>&1; then :\n+  : # empty\n+else\n+          # Try less preferred generic method\n+        # 'hw.ncpu' exist on many platforms, but not on GNU/Linux\n+        CPU_COUNT=`sysctl -n hw.ncpu 2>/dev/null` || CPU_COUNT=\"0\"\n+\n+fi\n+      if test \"$CPU_COUNT\" -gt \"0\" 2>/dev/null; then :\n+  : # empty\n+else\n+        # Try platform-specific fallback methods\n+      # They can be less accurate and slower then preferred methods\n+        case $host_os in #(\n+            *linux*) :\n+    CPU_COUNT=`$EGREP -e '^processor' -c /proc/cpuinfo 2>/dev/null` || CPU_COUNT=\"0\" ;; #(\n+            *darwin*) :\n+    CPU_COUNT=`system_profiler SPHardwareDataType 2>/dev/null | $EGREP -i -e 'number of cores:'|cut -d : -f 2 -s|tr -d ' '` || CPU_COUNT=\"0\" ;; #(\n+            freebsd*) :\n+    CPU_COUNT=`dmesg 2>/dev/null| $EGREP -e '^cpu[0-9]+: '|sort -u|$EGREP -e '^' -c` || CPU_COUNT=\"0\" ;; #(\n+            netbsd*) :\n+    CPU_COUNT=`command -v cpuctl >/dev/null 2>&1 && cpuctl list 2>/dev/null| $EGREP -e '^[0-9]+ .* online ' -c` || \\\n+                           CPU_COUNT=`dmesg 2>/dev/null| $EGREP -e '^cpu[0-9]+ at'|sort -u|$EGREP -e '^' -c` || CPU_COUNT=\"0\" ;; #(\n+            solaris*) :\n+    command -v kstat >/dev/null 2>&1 && CPU_COUNT=`kstat -m cpu_info -s state -p 2>/dev/null | $EGREP -c -e 'on-line'` || \\\n+                           CPU_COUNT=`kstat -m cpu_info 2>/dev/null | $EGREP -c -e 'module: cpu_info'` || CPU_COUNT=\"0\" ;; #(\n+            mingw*) :\n+    if CPU_COUNT=`reg query 'HKLM\\\\Hardware\\\\Description\\\\System\\\\CentralProcessor' 2>/dev/null | $EGREP -e '\\\\\\\\[0-9]+$' -c`; then :\n+                          : # empty\n+else\n+  test \"$NUMBER_OF_PROCESSORS\" -gt \"0\" 2>/dev/null && CPU_COUNT=\"$NUMBER_OF_PROCESSORS\"\n+fi ;; #(\n+            msys*) :\n+    test \"$NUMBER_OF_PROCESSORS\" -gt \"0\" 2>/dev/null && CPU_COUNT=\"$NUMBER_OF_PROCESSORS\" ;; #(\n+            cygwin*) :\n+    test \"$NUMBER_OF_PROCESSORS\" -gt \"0\" 2>/dev/null && CPU_COUNT=\"$NUMBER_OF_PROCESSORS\"         ;; #(\n+  *) :\n+     ;;\n+esac\n+fi\n+      if test \"x$CPU_COUNT\" != \"x0\" && test \"$CPU_COUNT\" -gt 0 2>/dev/null; then :\n+            { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $CPU_COUNT\" >&5\n+$as_echo \"$CPU_COUNT\" >&6; }\n+\n+else\n+                        CPU_COUNT=\"1\"\n+            { $as_echo \"$as_me:${as_lineno-$LINENO}: result: unable to detect (assuming 1)\" >&5\n+$as_echo \"unable to detect (assuming 1)\" >&6; }\n+\n+fi\n+\n+\n # Get target configury.\n . ${srcdir}/configure.tgt\n CFLAGS=\"$save_CFLAGS $XCFLAGS\""}, {"sha": "707d5cd9ce662b938f14eb29c69daad317f92e50", "filename": "libgomp/configure.ac", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7155c2e0b061212722faf5744cb3781e9a18aa3/libgomp%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7155c2e0b061212722faf5744cb3781e9a18aa3/libgomp%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fconfigure.ac?ref=a7155c2e0b061212722faf5744cb3781e9a18aa3", "patch": "@@ -318,6 +318,10 @@ if test $enable_symvers = gnu; then\n \t    [Define to 1 if GNU symbol versioning is used for libgomp.])\n fi\n \n+# Determine cpu count to limit testsuite parallelism.\n+AX_COUNT_CPUS\n+AC_SUBST(CPU_COUNT)\n+\n # Get target configury.\n . ${srcdir}/configure.tgt\n CFLAGS=\"$save_CFLAGS $XCFLAGS\""}, {"sha": "62b1855695cd576a4711fbd036ee546f6bdd23b6", "filename": "libgomp/testsuite/Makefile.am", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7155c2e0b061212722faf5744cb3781e9a18aa3/libgomp%2Ftestsuite%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7155c2e0b061212722faf5744cb3781e9a18aa3/libgomp%2Ftestsuite%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2FMakefile.am?ref=a7155c2e0b061212722faf5744cb3781e9a18aa3", "patch": "@@ -69,11 +69,11 @@ distclean-DEJAGNU:\n distclean-am: distclean-DEJAGNU\n check-am:\n \t@if test -n \"$(filter -j%, $(MFLAGS))\"; then \\\n-\t  num_cpus=1; \\\n+\t  num_cpus=@CPU_COUNT@; \\\n \t  if type -p getconf 2>/dev/null >/dev/null; then \\\n \t    num_cpus=`getconf _NPROCESSORS_ONLN 2>/dev/null`; \\\n \t    case \"$$num_cpus\" in \\\n-\t      '' | 0* | *[!0-9]*) num_cpus=1;; \\\n+\t      '' | 0* | *[!0-9]*) num_cpus=@CPU_COUNT@;; \\\n \t    esac; \\\n \t  fi; \\\n \t  if test $$num_cpus -gt 8 && test -z \"$$OMP_NUM_THREADS\"; then \\"}, {"sha": "0161041f5c9ec7a4057de861c0c3c9ee45bccee3", "filename": "libgomp/testsuite/Makefile.in", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7155c2e0b061212722faf5744cb3781e9a18aa3/libgomp%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7155c2e0b061212722faf5744cb3781e9a18aa3/libgomp%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2FMakefile.in?ref=a7155c2e0b061212722faf5744cb3781e9a18aa3", "patch": "@@ -91,6 +91,7 @@ target_triplet = @target@\n subdir = testsuite\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n+\t$(top_srcdir)/../config/ax_count_cpus.m4 \\\n \t$(top_srcdir)/../config/depstand.m4 \\\n \t$(top_srcdir)/../config/enable.m4 \\\n \t$(top_srcdir)/../config/futex.m4 \\\n@@ -143,6 +144,7 @@ CCDEPMODE = @CCDEPMODE@\n CFLAGS = @CFLAGS@\n CPP = @CPP@\n CPPFLAGS = @CPPFLAGS@\n+CPU_COUNT = @CPU_COUNT@\n CUDA_DRIVER_INCLUDE = @CUDA_DRIVER_INCLUDE@\n CUDA_DRIVER_LIB = @CUDA_DRIVER_LIB@\n CYGPATH_W = @CYGPATH_W@\n@@ -521,11 +523,11 @@ distclean-DEJAGNU:\n distclean-am: distclean-DEJAGNU\n check-am:\n \t@if test -n \"$(filter -j%, $(MFLAGS))\"; then \\\n-\t  num_cpus=1; \\\n+\t  num_cpus=@CPU_COUNT@; \\\n \t  if type -p getconf 2>/dev/null >/dev/null; then \\\n \t    num_cpus=`getconf _NPROCESSORS_ONLN 2>/dev/null`; \\\n \t    case \"$$num_cpus\" in \\\n-\t      '' | 0* | *[!0-9]*) num_cpus=1;; \\\n+\t      '' | 0* | *[!0-9]*) num_cpus=@CPU_COUNT@;; \\\n \t    esac; \\\n \t  fi; \\\n \t  if test $$num_cpus -gt 8 && test -z \"$$OMP_NUM_THREADS\"; then \\"}]}