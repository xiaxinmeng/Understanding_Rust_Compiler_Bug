{"sha": "39dbcfc364af287d099c87949a1d07697577eb83", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzlkYmNmYzM2NGFmMjg3ZDA5OWM4Nzk0OWExZDA3Njk3NTc3ZWI4Mw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2009-09-22T12:52:20Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2009-09-22T12:52:20Z"}, "message": "reload1.c (reload): Call wrap_constant when substituting reg for equiv inside of DEBUG_INSNs.\n\n\t* reload1.c (reload): Call wrap_constant when substituting\n\treg for equiv inside of DEBUG_INSNs.\n\n\t* gcc.dg/20090922-1.c: New test.\n\nFrom-SVN: r151976", "tree": {"sha": "a5ea20fe7bb7ed819b028ee36a078d161bd352b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a5ea20fe7bb7ed819b028ee36a078d161bd352b6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/39dbcfc364af287d099c87949a1d07697577eb83", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39dbcfc364af287d099c87949a1d07697577eb83", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39dbcfc364af287d099c87949a1d07697577eb83", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39dbcfc364af287d099c87949a1d07697577eb83/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "db1cf15c83f6992f6c72a8aea1c8e74397260847", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db1cf15c83f6992f6c72a8aea1c8e74397260847", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db1cf15c83f6992f6c72a8aea1c8e74397260847"}], "stats": {"total": 75, "additions": 75, "deletions": 0}, "files": [{"sha": "eb4e37ad56ca69067588b0be80cb96fad04665aa", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dbcfc364af287d099c87949a1d07697577eb83/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dbcfc364af287d099c87949a1d07697577eb83/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=39dbcfc364af287d099c87949a1d07697577eb83", "patch": "@@ -1,3 +1,8 @@\n+2009-09-22  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* reload1.c (reload): Call wrap_constant when substituting\n+\treg for equiv inside of DEBUG_INSNs.\n+\n 2009-09-22  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/41428"}, {"sha": "fae95d6014422c7b4efcd2fb226ee57e8e330ab4", "filename": "gcc/reload1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dbcfc364af287d099c87949a1d07697577eb83/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dbcfc364af287d099c87949a1d07697577eb83/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=39dbcfc364af287d099c87949a1d07697577eb83", "patch": "@@ -1273,6 +1273,7 @@ reload (rtx first, int global)\n \t\t\t\t\t\tSUBREG_BYTE (x));\n \t\t  else\n \t\t    gcc_unreachable ();\n+\t\t  *loc = wrap_constant (GET_MODE (x), *loc);\n \t\t}\n \t}\n     }"}, {"sha": "eb4005af69401740f32b2aaa21df92eba227b9f8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dbcfc364af287d099c87949a1d07697577eb83/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dbcfc364af287d099c87949a1d07697577eb83/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=39dbcfc364af287d099c87949a1d07697577eb83", "patch": "@@ -1,3 +1,7 @@\n+2009-09-22  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gcc.dg/20090922-1.c: New test.\n+\n 2009-09-22  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/41428"}, {"sha": "62045cbbd58652799db62cdfdb8ce87195887c9c", "filename": "gcc/testsuite/gcc.dg/20090922-1.c", "status": "added", "additions": 65, "deletions": 0, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dbcfc364af287d099c87949a1d07697577eb83/gcc%2Ftestsuite%2Fgcc.dg%2F20090922-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dbcfc364af287d099c87949a1d07697577eb83/gcc%2Ftestsuite%2Fgcc.dg%2F20090922-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20090922-1.c?ref=39dbcfc364af287d099c87949a1d07697577eb83", "patch": "@@ -0,0 +1,65 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -g -funroll-loops -std=gnu99\" } */\n+\n+struct S\n+{\n+  unsigned long s1;\n+  int **s2;\n+};\n+struct T\n+{\n+  unsigned long t1, t2;\n+};\n+struct U\n+{\n+  int u1, u2;\n+  unsigned long u3;\n+};\n+struct V\n+{\n+  int v1, v3;\n+  struct T *v2;\n+  struct U *v4;\n+};\n+struct W\n+{\n+  int w1;\n+  struct V **w2;\n+};\n+struct S *foo1 (void);\n+int *foo2 (void);\n+\n+void\n+test (struct W *w)\n+{\n+  for (int i = 0; i < w->w1; i++)\n+    {\n+      struct V *v = w->w2[i];\n+      struct S *t = foo1 ();\n+      if (!t)\n+\tfor (int j; j < v->v1;)\n+\t  {\n+\t    struct T *q = &v->v2[j];\n+\t    t += (q->t2 - q->t1) * 45000L;\n+\t  }\n+      for (; v->v3;)\n+\t{\n+\t  struct U *v4 = (struct U *) &v->v4;\n+\t  if (v4->u1 && v4->u2 >= 0 && v4->u2)\n+\t    {\n+\t      int *s = foo2 ();\n+\t      if (!s)\n+\t\tfor (int k = 0; k <= v4->u2; k++)\n+\t\t  {\n+\t\t    struct T *q = &v->v2[k];\n+\t\t    if (k == v4->u2)\n+\t\t      v4->u3 += (q->t1) * 1000000;\n+\t\t  }\n+\t      t->s2[t->s1] = s;\n+\t    }\n+\t}\n+      int *s = foo2 ();\n+      if (!t)\n+\tt->s2[t->s1] = s;\n+    }\n+}"}]}