{"sha": "08d4cc3365fe71486d9305604ed8590a248afd26", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDhkNGNjMzM2NWZlNzE0ODZkOTMwNTYwNGVkODU5MGEyNDhhZmQyNg==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2009-11-13T19:10:45Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2009-11-13T19:10:45Z"}, "message": "function.c (stack_protect_prologue): Don't bypass expand_expr for stack_protect_guard and guard_decl.\n\n        * function.c (stack_protect_prologue): Don't bypass expand_expr\n        for stack_protect_guard and guard_decl.\n        (stack_protect_epilogue): Likewise.\n\nFrom-SVN: r154168", "tree": {"sha": "dea1dfdd654d5ec22ecbf475e45ae99f46afbd7c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dea1dfdd654d5ec22ecbf475e45ae99f46afbd7c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/08d4cc3365fe71486d9305604ed8590a248afd26", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08d4cc3365fe71486d9305604ed8590a248afd26", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08d4cc3365fe71486d9305604ed8590a248afd26", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08d4cc3365fe71486d9305604ed8590a248afd26/comments", "author": null, "committer": null, "parents": [{"sha": "589520b621afc3583a6bea2aeadae3825c82211e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/589520b621afc3583a6bea2aeadae3825c82211e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/589520b621afc3583a6bea2aeadae3825c82211e"}], "stats": {"total": 22, "additions": 10, "deletions": 12}, "files": [{"sha": "22640faf9a249687c51e713e2d524c8636ce60e5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08d4cc3365fe71486d9305604ed8590a248afd26/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08d4cc3365fe71486d9305604ed8590a248afd26/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=08d4cc3365fe71486d9305604ed8590a248afd26", "patch": "@@ -1,3 +1,9 @@\n+2009-11-13  Richard Henderson  <rth@redhat.com>\n+\n+\t* function.c (stack_protect_prologue): Don't bypass expand_expr\n+\tfor stack_protect_guard and guard_decl.\n+\t(stack_protect_epilogue): Likewise.\n+\n 2009-11-13  Jan Hubicka  <jh@suse.cz>\n \n \t* ipa.c (function_and_variable_visibility): Clear COMDAT on functions"}, {"sha": "60c199f4298d0f010bc1d26e51fc8211e2c7b0c6", "filename": "gcc/function.c", "status": "modified", "additions": 4, "deletions": 12, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08d4cc3365fe71486d9305604ed8590a248afd26/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08d4cc3365fe71486d9305604ed8590a248afd26/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=08d4cc3365fe71486d9305604ed8590a248afd26", "patch": "@@ -4269,12 +4269,8 @@ stack_protect_prologue (void)\n   tree guard_decl = targetm.stack_protect_guard ();\n   rtx x, y;\n \n-  /* Avoid expand_expr here, because we don't want guard_decl pulled\n-     into registers unless absolutely necessary.  And we know that\n-     crtl->stack_protect_guard is a local stack slot, so this skips\n-     all the fluff.  */\n-  x = validize_mem (DECL_RTL (crtl->stack_protect_guard));\n-  y = validize_mem (DECL_RTL (guard_decl));\n+  x = expand_normal (crtl->stack_protect_guard);\n+  y = expand_normal (guard_decl);\n \n   /* Allow the target to copy from Y to X without leaking Y into a\n      register.  */\n@@ -4307,12 +4303,8 @@ stack_protect_epilogue (void)\n   rtx label = gen_label_rtx ();\n   rtx x, y, tmp;\n \n-  /* Avoid expand_expr here, because we don't want guard_decl pulled\n-     into registers unless absolutely necessary.  And we know that\n-     crtl->stack_protect_guard is a local stack slot, so this skips\n-     all the fluff.  */\n-  x = validize_mem (DECL_RTL (crtl->stack_protect_guard));\n-  y = validize_mem (DECL_RTL (guard_decl));\n+  x = expand_normal (crtl->stack_protect_guard);\n+  y = expand_normal (guard_decl);\n \n   /* Allow the target to compare Y with X without leaking either into\n      a register.  */"}]}