{"sha": "36f04556d6bf6b8c272065bab473e354e8540ca9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzZmMDQ1NTZkNmJmNmI4YzI3MjA2NWJhYjQ3M2UzNTRlODU0MGNhOQ==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2003-06-09T12:57:15Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2003-06-09T12:57:15Z"}, "message": "tree-inline.c (expand_call_inline): DECL_SOURCE_LINE_FIRST is removed.\n\n\t* tree-inline.c (expand_call_inline): DECL_SOURCE_LINE_FIRST is\n\tremoved.\n\t* java/java-tree.h (DECL_FUNCTION_LAST_LINE): New.\n\t(struct lang_decl_func): Add last_line field.\n\t* java/parse.h (DECL_SOURCE_LINE_MERGE, DECL_SOURCE_LINE_FIRST,\n\tDECL_SOURCE_LINE_LAST): Remove.\n\t* java/parse.y (missing_return_error,\n\tfinish_method_declaration, lookup_cl, start_artificial_method_body,\n\tsource_end_java_method, start_complete_expand_method): Adjust.\n\nFrom-SVN: r67661", "tree": {"sha": "2c36f0d548c266e7b466be2d29acaab8cb00f8e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2c36f0d548c266e7b466be2d29acaab8cb00f8e1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/36f04556d6bf6b8c272065bab473e354e8540ca9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36f04556d6bf6b8c272065bab473e354e8540ca9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/36f04556d6bf6b8c272065bab473e354e8540ca9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36f04556d6bf6b8c272065bab473e354e8540ca9/comments", "author": null, "committer": null, "parents": [{"sha": "86143cb4c392278ae78e47eb4fe884ba82364d6f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86143cb4c392278ae78e47eb4fe884ba82364d6f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86143cb4c392278ae78e47eb4fe884ba82364d6f"}], "stats": {"total": 46, "additions": 25, "deletions": 21}, "files": [{"sha": "f07c4d531dac4c3f119f44dc853630e314114799", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36f04556d6bf6b8c272065bab473e354e8540ca9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36f04556d6bf6b8c272065bab473e354e8540ca9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=36f04556d6bf6b8c272065bab473e354e8540ca9", "patch": "@@ -1,3 +1,8 @@\n+2003-06-09  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* tree-inline.c (expand_call_inline): DECL_SOURCE_LINE_FIRST is\n+\tremoved.\n+\n 2003-06-09  J\"orn Rennecke <joern.rennecke@superh.com>\n \n \t* sh.c (gen_block_redirect): Use locators."}, {"sha": "9d2a4484a593764b6de4b31212a702b174f6dc7d", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36f04556d6bf6b8c272065bab473e354e8540ca9/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36f04556d6bf6b8c272065bab473e354e8540ca9/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=36f04556d6bf6b8c272065bab473e354e8540ca9", "patch": "@@ -1,3 +1,13 @@\n+2003-06-09  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* java-tree.h (DECL_FUNCTION_LAST_LINE): New.\n+\t(struct lang_decl_func): Add last_line field.\n+\t* parse.h (DECL_SOURCE_LINE_MERGE, DECL_SOURCE_LINE_FIRST,\n+\tDECL_SOURCE_LINE_LAST): Remove.\n+\t* parse.y (missing_return_error, finish_method_declaration,\n+\tlookup_cl, start_artificial_method_body, source_end_java_method,\n+\tstart_complete_expand_method): Adjust.\n+\n 2003-06-08  Tom Tromey  <tromey@redhat.com>\n \n \t* jvspec.c (jvgenmain_spec): Added `*' after fassume-compiled and"}, {"sha": "341928d9509883e1f0c770411d66461bb0279b7c", "filename": "gcc/java/java-tree.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36f04556d6bf6b8c272065bab473e354e8540ca9/gcc%2Fjava%2Fjava-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36f04556d6bf6b8c272065bab473e354e8540ca9/gcc%2Fjava%2Fjava-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjava-tree.h?ref=36f04556d6bf6b8c272065bab473e354e8540ca9", "patch": "@@ -773,6 +773,8 @@ union lang_tree_node\n /* Number of local variable slots needed for the arguments of this function. */\n #define DECL_ARG_SLOT_COUNT(DECL) \\\n   (DECL_LANG_SPECIFIC(DECL)->u.f.arg_slot_count)\n+/* Line number of end of function. */\n+#define DECL_FUNCTION_LAST_LINE(DECL) (DECL_LANG_SPECIFIC(DECL)->u.f.last_line)\n /* Information on declaration location */\n #define DECL_FUNCTION_WFL(DECL)  (DECL_LANG_SPECIFIC(DECL)->u.f.wfl)\n /* List of checked thrown exceptions, as specified with the `throws'\n@@ -974,6 +976,7 @@ struct lang_decl_func GTY(())\n   int max_locals;\n   int max_stack;\n   int arg_slot_count;\n+  int last_line; \t\t/* End line number for a function decl */\n   tree wfl;\t\t\t/* Information on the original location */\n   tree throws_list;\t\t/* Exception specified by `throws' */\n   tree function_decl_body;\t/* Hold all function's statements */"}, {"sha": "df1fa562844fe9b24ef485f949899a8f25472a67", "filename": "gcc/java/parse.h", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36f04556d6bf6b8c272065bab473e354e8540ca9/gcc%2Fjava%2Fparse.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36f04556d6bf6b8c272065bab473e354e8540ca9/gcc%2Fjava%2Fparse.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.h?ref=36f04556d6bf6b8c272065bab473e354e8540ca9", "patch": "@@ -610,14 +610,6 @@ typedef struct jdeplist_s jdeplist;\n #define GET_CURRENT_BLOCK(F) ((F) ? DECL_FUNCTION_BODY ((F)) :\t\\\n \t\t\t     current_static_block)\n \n-/* Merge an other line to the source line number of a decl. Used to\n-   remember function's end. */\n-#define DECL_SOURCE_LINE_MERGE(DECL,NO) DECL_SOURCE_LINE(DECL) |= (NO << 16)\n-\n-/* Retrieve those two info separately. */\n-#define DECL_SOURCE_LINE_FIRST(DECL)    (DECL_SOURCE_LINE(DECL) & 0x0000ffff)\n-#define DECL_SOURCE_LINE_LAST(DECL)     (DECL_SOURCE_LINE(DECL) >> 16)\n-\n /* Retrieve line/column from a WFL. */\n #define EXPR_WFL_GET_LINECOL(V,LINE,COL)\t\\\n   {\t\t\t\t\t\t\\"}, {"sha": "854fd5f07bfe8f9720ae7585704196eaff564a23", "filename": "gcc/java/parse.y", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36f04556d6bf6b8c272065bab473e354e8540ca9/gcc%2Fjava%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36f04556d6bf6b8c272065bab473e354e8540ca9/gcc%2Fjava%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.y?ref=36f04556d6bf6b8c272065bab473e354e8540ca9", "patch": "@@ -3139,7 +3139,7 @@ find_expr_with_wfl (tree node)\n static void\n missing_return_error (tree method)\n {\n-  EXPR_WFL_SET_LINECOL (wfl_operator, DECL_SOURCE_LINE_LAST (method), -2);\n+  EXPR_WFL_SET_LINECOL (wfl_operator, DECL_FUNCTION_LAST_LINE (method), -2);\n   parse_error_context (wfl_operator, \"Missing return statement\");\n }\n \n@@ -4758,7 +4758,7 @@ finish_method_declaration (tree method_body)\n   /* Merge last line of the function with first line, directly in the\n      function decl. It will be used to emit correct debug info. */\n   if (!flag_emit_xref)\n-    DECL_SOURCE_LINE_MERGE (current_function_decl, ctxp->last_ccb_indent1);\n+    DECL_FUNCTION_LAST_LINE (current_function_decl) = ctxp->last_ccb_indent1;\n \n   /* Since function's argument's list are shared, reset the\n      ARG_FINAL_P parameter that might have been set on some of this\n@@ -6604,7 +6604,7 @@ lookup_cl (tree decl)\n     }\n \n   EXPR_WFL_FILENAME_NODE (cl_v) = get_identifier (DECL_SOURCE_FILE (decl));\n-  EXPR_WFL_SET_LINECOL (cl_v, DECL_SOURCE_LINE_FIRST (decl), -1);\n+  EXPR_WFL_SET_LINECOL (cl_v, DECL_SOURCE_LINE (decl), -1);\n \n   line = java_get_line_col (EXPR_WFL_FILENAME (cl_v),\n \t\t\t    EXPR_WFL_LINENO (cl_v), EXPR_WFL_COLNO (cl_v));\n@@ -7313,7 +7313,7 @@ static void\n start_artificial_method_body (tree mdecl)\n {\n   DECL_SOURCE_LINE (mdecl) = 1;\n-  DECL_SOURCE_LINE_MERGE (mdecl, 1);\n+  DECL_FUNCTION_LAST_LINE (mdecl) = 1;\n   source_start_java_method (mdecl);\n   enter_block ();\n }\n@@ -7385,11 +7385,9 @@ source_end_java_method (void)\n   /* Generate rtl for function exit.  */\n   if (! flag_emit_class_files && ! flag_emit_xref)\n     {\n-      input_line = DECL_SOURCE_LINE_LAST (fndecl);\n+      input_line = DECL_FUNCTION_LAST_LINE (fndecl);\n       expand_function_end (input_filename, input_line, 0);\n \n-      DECL_SOURCE_LINE (fndecl) = DECL_SOURCE_LINE_FIRST (fndecl);\n-\n       /* Run the optimizers and output assembler code for this function. */\n       rest_of_compilation (fndecl);\n     }\n@@ -7894,7 +7892,7 @@ start_complete_expand_method (tree mdecl)\n       TREE_CHAIN (tem) = next;\n     }\n   pushdecl_force_head (DECL_ARGUMENTS (mdecl));\n-  input_line = DECL_SOURCE_LINE_FIRST (mdecl);\n+  input_line = DECL_SOURCE_LINE (mdecl);\n   build_result_decl (mdecl);\n }\n "}, {"sha": "a0fbe8ee635dd8572811e030b89e97996a34dbe6", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36f04556d6bf6b8c272065bab473e354e8540ca9/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36f04556d6bf6b8c272065bab473e354e8540ca9/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=36f04556d6bf6b8c272065bab473e354e8540ca9", "patch": "@@ -1420,13 +1420,9 @@ expand_call_inline (tp, walk_subtrees, data)\n      pointing to the right place.  */\n #ifndef INLINER_FOR_JAVA\n   chain = TREE_CHAIN (*tp);\n+#endif /* INLINER_FOR_JAVA */\n   *tp = build_expr_wfl (expr, DECL_SOURCE_FILE (fn), DECL_SOURCE_LINE (fn),\n \t\t\t/*col=*/0);\n-#else /* INLINER_FOR_JAVA */\n-  *tp = build_expr_wfl (expr, DECL_SOURCE_FILE (fn),\n-\t\t\tDECL_SOURCE_LINE_FIRST(fn),\n-\t\t\t/*col=*/0);\n-#endif /* INLINER_FOR_JAVA */\n   EXPR_WFL_EMIT_LINE_NOTE (*tp) = 1;\n #ifndef INLINER_FOR_JAVA\n   TREE_CHAIN (*tp) = chain;"}]}