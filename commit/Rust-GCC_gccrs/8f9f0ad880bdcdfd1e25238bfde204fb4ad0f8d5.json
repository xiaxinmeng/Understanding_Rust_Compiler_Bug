{"sha": "8f9f0ad880bdcdfd1e25238bfde204fb4ad0f8d5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGY5ZjBhZDg4MGJkY2RmZDFlMjUyMzhiZmRlMjA0ZmI0YWQwZjhkNQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-02-25T06:23:00Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-02-25T06:23:00Z"}, "message": "constant1.C: Specify C++98 mode.\n\n\t* g++.dg/parse/constant1.C: Specify C++98 mode.\n\t* g++.dg/parse/constant5.C: Likewise.\n\t* g++.dg/parse/error2.C: Likewise.\n\t* g++.dg/parse/semicolon3.C: Likewise.\n\t* g++.dg/template/crash14.C: Likewise.\n\t* g++.dg/template/local4.C: Likewise.\n\t* g++.dg/template/nontype3.C: Likewise.\n\t* g++.dg/parse/crash31.C: Adjust expected errors.\n\t* g++.dg/template/function1.C: Likewise.\n\t* g++.dg/template/ref3.C: Likewise.\n\t* g++.dg/template/static9.C: Likewise.\n\t* g++.old-deja/g++.pt/crash41.C: Instantiate template.\n\nFrom-SVN: r170489", "tree": {"sha": "a4c7430e1bf8cdc289b64c9e50d6babfeab1f522", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a4c7430e1bf8cdc289b64c9e50d6babfeab1f522"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8f9f0ad880bdcdfd1e25238bfde204fb4ad0f8d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f9f0ad880bdcdfd1e25238bfde204fb4ad0f8d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f9f0ad880bdcdfd1e25238bfde204fb4ad0f8d5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f9f0ad880bdcdfd1e25238bfde204fb4ad0f8d5/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4be5e5b12d501cb3aae673e673c30363b32480df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4be5e5b12d501cb3aae673e673c30363b32480df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4be5e5b12d501cb3aae673e673c30363b32480df"}], "stats": {"total": 44, "additions": 34, "deletions": 10}, "files": [{"sha": "3d3d81275eb5de38a628480ea569855148ac30e9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f9f0ad880bdcdfd1e25238bfde204fb4ad0f8d5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f9f0ad880bdcdfd1e25238bfde204fb4ad0f8d5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8f9f0ad880bdcdfd1e25238bfde204fb4ad0f8d5", "patch": "@@ -1,5 +1,18 @@\n 2011-02-24  Jason Merrill  <jason@redhat.com>\n \n+\t* g++.dg/parse/constant1.C: Specify C++98 mode.\n+\t* g++.dg/parse/constant5.C: Likewise.\n+\t* g++.dg/parse/error2.C: Likewise.\n+\t* g++.dg/parse/semicolon3.C: Likewise.\n+\t* g++.dg/template/crash14.C: Likewise.\n+\t* g++.dg/template/local4.C: Likewise.\n+\t* g++.dg/template/nontype3.C: Likewise.\n+\t* g++.dg/parse/crash31.C: Adjust expected errors.\n+\t* g++.dg/template/function1.C: Likewise.\n+\t* g++.dg/template/ref3.C: Likewise.\n+\t* g++.dg/template/static9.C: Likewise.\n+\t* g++.old-deja/g++.pt/crash41.C: Instantiate template.\n+\n \t* g++.dg/cpp0x/constexpr-array-tparm.C: New.\n \t* g++.dg/cpp0x/regress/parse-ambig5.C: Copy from parse/ambig5.C.\n \t* g++.dg/cpp0x/regress/debug-debug7.C: Copy from debug/debug7.C."}, {"sha": "c8a948a576005c9366e883ac50bf99dcd1c2c0aa", "filename": "gcc/testsuite/g++.dg/parse/constant1.C", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f9f0ad880bdcdfd1e25238bfde204fb4ad0f8d5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fconstant1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f9f0ad880bdcdfd1e25238bfde204fb4ad0f8d5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fconstant1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fconstant1.C?ref=8f9f0ad880bdcdfd1e25238bfde204fb4ad0f8d5", "patch": "@@ -1,3 +1,5 @@\n+// { dg-options -std=c++98 }\n+\n void f () {\n   switch (0) {\n   case (3, 0): // { dg-error \"\" }"}, {"sha": "f868108a644ad9868a68b72096600f864f7610ac", "filename": "gcc/testsuite/g++.dg/parse/constant5.C", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f9f0ad880bdcdfd1e25238bfde204fb4ad0f8d5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fconstant5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f9f0ad880bdcdfd1e25238bfde204fb4ad0f8d5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fconstant5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fconstant5.C?ref=8f9f0ad880bdcdfd1e25238bfde204fb4ad0f8d5", "patch": "@@ -1,3 +1,5 @@\n+// { dg-options \"-std=c++98 -pedantic-errors\" }\n+\n enum E { \n   a = 24.2, // { dg-error \"constant\" }\n   b = (int)3.7, "}, {"sha": "b0a7e1877ce21b3842d57bff515ef47dc0e1429d", "filename": "gcc/testsuite/g++.dg/parse/crash31.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f9f0ad880bdcdfd1e25238bfde204fb4ad0f8d5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash31.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f9f0ad880bdcdfd1e25238bfde204fb4ad0f8d5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash31.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash31.C?ref=8f9f0ad880bdcdfd1e25238bfde204fb4ad0f8d5", "patch": "@@ -3,7 +3,7 @@ struct A // { dg-error \"forward declaration\" }\n   A : A; // { dg-error \"expected|incomplete\" }\n   A : B; // { dg-error \"not declared|incomplete\" }\n   A : A(); // { dg-error \"undefined type|incomplete\" }\n-  A : B(); // { dg-error \"function call|incomplete\" }\n+  A : B(); // { dg-error \"function call|incomplete|not declared\" }\n   A : A[]; // { dg-error \"expected|array reference|incomplete\" }\n   A : B[]; // { dg-error \"not declared|expected|array reference|incomplete\" }\n };"}, {"sha": "7b08df4546685f9ea4335a6ca5b7956ab79d9304", "filename": "gcc/testsuite/g++.dg/parse/error2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f9f0ad880bdcdfd1e25238bfde204fb4ad0f8d5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f9f0ad880bdcdfd1e25238bfde204fb4ad0f8d5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror2.C?ref=8f9f0ad880bdcdfd1e25238bfde204fb4ad0f8d5", "patch": "@@ -1,5 +1,5 @@\n // { dg-do compile }\n-// { dg-options \"-fshow-column\" }\n+// { dg-options \"-fshow-column -std=c++98\" }\n // Properly print CALL_EXPRs while dumping expressions\n \n double g;"}, {"sha": "8a2b1ac46301f6a0ee7f18cfff3b391f0f58db5d", "filename": "gcc/testsuite/g++.dg/parse/semicolon3.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f9f0ad880bdcdfd1e25238bfde204fb4ad0f8d5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fsemicolon3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f9f0ad880bdcdfd1e25238bfde204fb4ad0f8d5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fsemicolon3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fsemicolon3.C?ref=8f9f0ad880bdcdfd1e25238bfde204fb4ad0f8d5", "patch": "@@ -1,5 +1,6 @@\n // PR c++/45331\n // { dg-do compile }\n+// { dg-options -std=c++98 }\n \n struct OK1\n {"}, {"sha": "cf6fffa1a6bdd65e111bc855f23a05573c71c136", "filename": "gcc/testsuite/g++.dg/template/crash14.C", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f9f0ad880bdcdfd1e25238bfde204fb4ad0f8d5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash14.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f9f0ad880bdcdfd1e25238bfde204fb4ad0f8d5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash14.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash14.C?ref=8f9f0ad880bdcdfd1e25238bfde204fb4ad0f8d5", "patch": "@@ -1,3 +1,5 @@\n+// { dg-options -std=c++98 }\n+\n template <int T> class foo { public: foo() { } class Z { };};\n template <int I[2]> void dep7(foo<I[0]> *) { } // { dg-error \"\" }\n "}, {"sha": "8a112c1459f81f33132f80771fd02780e01cdf54", "filename": "gcc/testsuite/g++.dg/template/function1.C", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f9f0ad880bdcdfd1e25238bfde204fb4ad0f8d5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ffunction1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f9f0ad880bdcdfd1e25238bfde204fb4ad0f8d5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ffunction1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ffunction1.C?ref=8f9f0ad880bdcdfd1e25238bfde204fb4ad0f8d5", "patch": "@@ -3,25 +3,25 @@\n \n template<const char *, int> struct A {};\n const char func[] = \"abc\";\n-template<int N> struct A<func, N> {};\t// { dg-error \"cannot appear|is invalid|not a valid\" }\n+template<int N> struct A<func, N> {};\t// { dg-error \"cannot appear|is invalid|not a valid|not declared constexpr\" }\n \n char a1[1];\n A<a1, 0> a;\n \n template<const char *, int> struct B {};\n-template<int N> struct B<__FUNCTION__, N> {};\t// { dg-error \"cannot appear|is invalid|is not a valid\" }\n+template<int N> struct B<__FUNCTION__, N> {};\t// { dg-error \"cannot appear|is invalid|is not a valid|not declared constexpr\" }\n \n char b1[1];\n B<b1, 0> b;\n \n template<const char *, int> struct C {};\n-template<int N> struct C<__PRETTY_FUNCTION__, N> {};\t// { dg-error \"cannot appear|is invalid|is not a valid\" }\n+template<int N> struct C<__PRETTY_FUNCTION__, N> {};\t// { dg-error \"cannot appear|is invalid|is not a valid|not declared constexpr\" }\n \n char c1[1];\n C<c1, 0> c;\n \n template<const char *, int> struct D {};\n-template<int N> struct D<__func__, N> {};\t// { dg-error \"cannot appear|is invalid|is not a valid|function scope\" }\n+template<int N> struct D<__func__, N> {};\t// { dg-error \"cannot appear|is invalid|is not a valid|function scope|not declared constexpr\" }\n \n char d1[1];\n D<d1, 0> d;"}, {"sha": "9a03c9a7b98e09cae2dbd258bc4995fbcedfb88d", "filename": "gcc/testsuite/g++.dg/template/local4.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f9f0ad880bdcdfd1e25238bfde204fb4ad0f8d5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Flocal4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f9f0ad880bdcdfd1e25238bfde204fb4ad0f8d5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Flocal4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Flocal4.C?ref=8f9f0ad880bdcdfd1e25238bfde204fb4ad0f8d5", "patch": "@@ -1,9 +1,10 @@\n // PR c++/17413\n+// { dg-options -std=c++98 }\n \n template <typename T> void foo() {} // { dg-message \"note\" }\n \n int main () {\n   struct S {};\n   foo<S> (); // { dg-error \"match\" } \n-  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 7 }\n+  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 8 }\n }"}, {"sha": "d0c6b72a1d33bfdea4db06f95ef56ad683197e26", "filename": "gcc/testsuite/g++.dg/template/nontype3.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f9f0ad880bdcdfd1e25238bfde204fb4ad0f8d5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fnontype3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f9f0ad880bdcdfd1e25238bfde204fb4ad0f8d5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fnontype3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fnontype3.C?ref=8f9f0ad880bdcdfd1e25238bfde204fb4ad0f8d5", "patch": "@@ -1,4 +1,5 @@\n // { dg-do compile }\n+// { dg-options -std=c++98 }\n // Origin: <drow at gcc dot gnu dot org>,\n //         <giovannibajo at gcc dot gnu dot org>\n // c++/13243: Template parameters of non integral or enumeration type can't be"}, {"sha": "976c093a15b7244540da35cf6847b2a716525cca", "filename": "gcc/testsuite/g++.dg/template/ref3.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f9f0ad880bdcdfd1e25238bfde204fb4ad0f8d5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fref3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f9f0ad880bdcdfd1e25238bfde204fb4ad0f8d5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fref3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fref3.C?ref=8f9f0ad880bdcdfd1e25238bfde204fb4ad0f8d5", "patch": "@@ -4,8 +4,8 @@ template<const int&> struct A {};\n \n template<typename T> struct B\n {\n-  A<(T)0> b; // { dg-error \"constant\" }\n-  A<T(0)> a; // { dg-error \"constant\" }\n+  A<(T)0> b; // { dg-error \"constant|not a valid\" }\n+  A<T(0)> a; // { dg-error \"constant|not a valid\" }\n };\n \n B<const int&> b;"}, {"sha": "8845647601b4b972f3d1824b9f1eab9de5c970b6", "filename": "gcc/testsuite/g++.dg/template/static9.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f9f0ad880bdcdfd1e25238bfde204fb4ad0f8d5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fstatic9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f9f0ad880bdcdfd1e25238bfde204fb4ad0f8d5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fstatic9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fstatic9.C?ref=8f9f0ad880bdcdfd1e25238bfde204fb4ad0f8d5", "patch": "@@ -3,7 +3,7 @@\n template<typename T> struct A\n {\n   static const T i = 0; // { dg-error \"declared void\" \"void\" }\n-\t\t\t// { dg-error \"invalid\" \"invalid\" { target *-*-* } 5 }\n+\t\t\t// { dg-error \"invalid|non-literal\" \"invalid\" { target *-*-* } 5 }\n };\n \n A<void> a; // { dg-message \"instantiated\" }"}, {"sha": "452ba91dc84b4fa1061d831be99414dd20b66f15", "filename": "gcc/testsuite/g++.old-deja/g++.pt/crash41.C", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f9f0ad880bdcdfd1e25238bfde204fb4ad0f8d5/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash41.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f9f0ad880bdcdfd1e25238bfde204fb4ad0f8d5/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash41.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash41.C?ref=8f9f0ad880bdcdfd1e25238bfde204fb4ad0f8d5", "patch": "@@ -9,3 +9,5 @@ template <class T>\n void f(S2 s2) {\n   S1<s2.i> s1; // { dg-error \"\" }\n }\n+\n+template void f<int>(S2);"}]}