{"sha": "216bb6e1f75e2b77aed197ce0eddbe72d574047b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjE2YmI2ZTFmNzVlMmI3N2FlZDE5N2NlMGVkZGJlNzJkNTc0MDQ3Yg==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2004-01-05T21:07:22Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2004-01-05T21:07:22Z"}, "message": "re PR c++/12132 (spurious \"int ._0\" (or \"int $_0) in error message)\n\n\tPR c++/12132\n\t* parser.c (cp_parser_explicit_instantiation): Improve error\n\trecovery.\n\t(cp_parser_require): Improve indication of the error location.\n\n\tPR c++/12132\n\t* g++.dg/template/error11.C: New test.\n\nFrom-SVN: r75441", "tree": {"sha": "b2c741d738320475c0e92b46ed15d3ad788e0d05", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b2c741d738320475c0e92b46ed15d3ad788e0d05"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/216bb6e1f75e2b77aed197ce0eddbe72d574047b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/216bb6e1f75e2b77aed197ce0eddbe72d574047b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/216bb6e1f75e2b77aed197ce0eddbe72d574047b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/216bb6e1f75e2b77aed197ce0eddbe72d574047b/comments", "author": null, "committer": null, "parents": [{"sha": "8808159929f6f9b9a28975f8bddb400dcc83e6d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8808159929f6f9b9a28975f8bddb400dcc83e6d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8808159929f6f9b9a28975f8bddb400dcc83e6d2"}], "stats": {"total": 41, "additions": 33, "deletions": 8}, "files": [{"sha": "3a6a6ae44b58f5cc7afb04fac1e71ee7e5e94e3e", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/216bb6e1f75e2b77aed197ce0eddbe72d574047b/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/216bb6e1f75e2b77aed197ce0eddbe72d574047b/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=216bb6e1f75e2b77aed197ce0eddbe72d574047b", "patch": "@@ -1,5 +1,10 @@\n 2004-01-05  Mark Mitchell  <mark@codesourcery.com>\n \n+\tPR c++/12132\n+\t* parser.c (cp_parser_explicit_instantiation): Improve error\n+\trecovery.\n+\t(cp_parser_require): Improve indication of the error location.\n+\n \tPR c++/13451\n \t* parser.c (cp_parser_class_head): Reorder logic to check for\n \tinvalid qualification."}, {"sha": "560ad486d1aa8a437c68fc50d6339e1974f1c219", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 21, "deletions": 8, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/216bb6e1f75e2b77aed197ce0eddbe72d574047b/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/216bb6e1f75e2b77aed197ce0eddbe72d574047b/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=216bb6e1f75e2b77aed197ce0eddbe72d574047b", "patch": "@@ -8392,13 +8392,22 @@ cp_parser_explicit_instantiation (cp_parser* parser)\n \t\t\t\t/*parenthesized_p=*/NULL);\n       cp_parser_check_for_definition_in_return_type (declarator, \n \t\t\t\t\t\t     declares_class_or_enum);\n-      decl = grokdeclarator (declarator, decl_specifiers, \n-\t\t\t     NORMAL, 0, NULL);\n-      /* Turn access control back on for names used during\n-\t template instantiation.  */\n-      pop_deferring_access_checks ();\n-      /* Do the explicit instantiation.  */\n-      do_decl_instantiation (decl, extension_specifier);\n+      if (declarator != error_mark_node)\n+\t{\n+\t  decl = grokdeclarator (declarator, decl_specifiers, \n+\t\t\t\t NORMAL, 0, NULL);\n+\t  /* Turn access control back on for names used during\n+\t     template instantiation.  */\n+\t  pop_deferring_access_checks ();\n+\t  /* Do the explicit instantiation.  */\n+\t  do_decl_instantiation (decl, extension_specifier);\n+\t}\n+      else\n+\t{\n+\t  pop_deferring_access_checks ();\n+\t  /* Skip the body of the explicit instantiation.  */\n+\t  cp_parser_skip_to_end_of_statement (parser);\n+\t}\n     }\n   /* We're done with the instantiation.  */\n   end_explicit_instantiation ();\n@@ -14630,7 +14639,11 @@ cp_parser_require (cp_parser* parser,\n     {\n       /* Output the MESSAGE -- unless we're parsing tentatively.  */\n       if (!cp_parser_simulate_error (parser))\n-\terror (\"expected %s\", token_desc);\n+\t{\n+\t  char *message = concat (\"expected \", token_desc, NULL);\n+\t  cp_parser_error (parser, message);\n+\t  free (message);\n+\t}\n       return NULL;\n     }\n }"}, {"sha": "dc661cf8062ca1356b19d26b560160715a246601", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/216bb6e1f75e2b77aed197ce0eddbe72d574047b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/216bb6e1f75e2b77aed197ce0eddbe72d574047b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=216bb6e1f75e2b77aed197ce0eddbe72d574047b", "patch": "@@ -1,5 +1,8 @@\n 2004-01-05  Mark Mitchell  <mark@codesourcery.com>\n \n+\tPR c++/12132\n+\t* g++.dg/template/error11.C: New test.\n+\n \tPR c++/13451\n \t* g++.dg/template/class2.C: New test.\n "}, {"sha": "3a469fd1a8ca68f065f66dc81b7ef892dbdf981d", "filename": "gcc/testsuite/g++.dg/template/error11.C", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/216bb6e1f75e2b77aed197ce0eddbe72d574047b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ferror11.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/216bb6e1f75e2b77aed197ce0eddbe72d574047b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ferror11.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ferror11.C?ref=216bb6e1f75e2b77aed197ce0eddbe72d574047b", "patch": "@@ -0,0 +1,4 @@\n+// PR c++/12132\n+\n+inline template <int> void foo () {} // { dg-error \"<\" }\n+void abort (); // { dg-error \";\" }"}]}