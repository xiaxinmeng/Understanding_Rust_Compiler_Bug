{"sha": "1b7a0148f070deb07455f06a15ff13834c92f17b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWI3YTAxNDhmMDcwZGViMDc0NTVmMDZhMTVmZjEzODM0YzkyZjE3Yg==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2011-06-03T17:36:21Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2011-06-03T17:36:21Z"}, "message": "gcc:\n\n\t* config/i386/crtfastmath.c [!__x86_64__ && __sun__ && __svr4__]\n\t(sigill_hdlr): Correct insn, insn size.\n\t(set_fast_math) [!__x86_64__ && __sun__ && __svr4__]: Use movaps.\n\n\tgcc/testsuite:\n\t* lib/target-supports.exp (check_sse_os_support_available): Use\n\tmovaps.\n\n\tlibgfortran.\n\t* config/fpu-387.h [__sun__ && __svr4__] (sigill_hdlr): Correct\n\tinsn, insn size.\n\t(has_sse) [!__x86_64__ && __sun__ && __svr4__]: Use movaps.\n\nCo-Authored-By: Rainer Orth <ro@CeBiTec.Uni-Bielefeld.DE>\n\nFrom-SVN: r174609", "tree": {"sha": "03fddddad6b605215bb09601e9cb08a3577d7380", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/03fddddad6b605215bb09601e9cb08a3577d7380"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1b7a0148f070deb07455f06a15ff13834c92f17b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b7a0148f070deb07455f06a15ff13834c92f17b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b7a0148f070deb07455f06a15ff13834c92f17b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b7a0148f070deb07455f06a15ff13834c92f17b/comments", "author": null, "committer": null, "parents": [{"sha": "737346fa2420aaa838ad95995d9007f1599ff18b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/737346fa2420aaa838ad95995d9007f1599ff18b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/737346fa2420aaa838ad95995d9007f1599ff18b"}], "stats": {"total": 38, "additions": 29, "deletions": 9}, "files": [{"sha": "9feb8fdb87b076c0b1ae772ebcfe9838788e063d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b7a0148f070deb07455f06a15ff13834c92f17b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b7a0148f070deb07455f06a15ff13834c92f17b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1b7a0148f070deb07455f06a15ff13834c92f17b", "patch": "@@ -1,3 +1,10 @@\n+2011-06-03  Richard Henderson  <rth@redhat.com>\n+\t    Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* config/i386/crtfastmath.c [!__x86_64__ && __sun__ && __svr4__]\n+\t(sigill_hdlr): Correct insn, insn size.\n+\t(set_fast_math) [!__x86_64__ && __sun__ && __svr4__]: Use movaps.\n+\n 2011-06-03  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* config.gcc (mips-sgi-irix6.5*): Set tmake_file to mips/t-irix6"}, {"sha": "7abe500e98194d4da37880ee6f973485d805def7", "filename": "gcc/config/i386/crtfastmath.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b7a0148f070deb07455f06a15ff13834c92f17b/gcc%2Fconfig%2Fi386%2Fcrtfastmath.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b7a0148f070deb07455f06a15ff13834c92f17b/gcc%2Fconfig%2Fi386%2Fcrtfastmath.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fcrtfastmath.c?ref=1b7a0148f070deb07455f06a15ff13834c92f17b", "patch": "@@ -30,7 +30,7 @@\n #include \"cpuid.h\"\n #endif\n \n-#if !defined __x86_64 && defined __sun__ && defined __svr4__\n+#if !defined __x86_64__ && defined __sun__ && defined __svr4__\n #include <signal.h>\n #include <ucontext.h>\n \n@@ -43,9 +43,9 @@ sigill_hdlr (int sig __attribute((unused)),\n {\n   sigill_caught = 1;\n   /* Set PC to the instruction after the faulting one to skip over it,\n-     otherwise we enter an infinite loop.  4 is the size of the stmxcsr\n+     otherwise we enter an infinite loop.  3 is the size of the movaps\n      instruction.  */\n-  ucp->uc_mcontext.gregs[EIP] += 4;\n+  ucp->uc_mcontext.gregs[EIP] += 3;\n   setcontext (ucp);\n }\n #endif\n@@ -83,7 +83,7 @@ set_fast_math (void)\n \n       /* We need a single SSE instruction here so the handler can safely skip\n \t over it.  */\n-      __asm__ volatile (\"movss %xmm2,%xmm1\");\n+      __asm__ volatile (\"movaps %xmm0,%xmm0\");\n \n       sigaction (SIGILL, &oact, NULL);\n "}, {"sha": "4eeb347aca7097192d90dcd01525f2b29c3f610a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b7a0148f070deb07455f06a15ff13834c92f17b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b7a0148f070deb07455f06a15ff13834c92f17b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1b7a0148f070deb07455f06a15ff13834c92f17b", "patch": "@@ -1,3 +1,9 @@\n+2011-06-03  Richard Henderson  <rth@redhat.com>\n+\t    Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* lib/target-supports.exp (check_sse_os_support_available): Use\n+\tmovaps.\n+\n 2011-06-03  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n \t* objc.dg/headers.m: Do not include objc-list.h."}, {"sha": "37dd6b8dcebceb203cf57c4d3313b521c680715b", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b7a0148f070deb07455f06a15ff13834c92f17b/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b7a0148f070deb07455f06a15ff13834c92f17b/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=1b7a0148f070deb07455f06a15ff13834c92f17b", "patch": "@@ -1059,7 +1059,7 @@ proc check_sse_os_support_available { } {\n \t    check_runtime_nocache sse_os_support_available {\n \t\tint main ()\n \t\t{\n-\t\t    __asm__ volatile (\"movss %xmm2,%xmm1\");\n+\t\t    __asm__ volatile (\"movaps %xmm0,%xmm0\");\n \t\t    return 0;\n \t\t}\n \t    } \"-msse\""}, {"sha": "5a22cd32bc7037e9a11ee46e13be5fade0ad6028", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b7a0148f070deb07455f06a15ff13834c92f17b/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b7a0148f070deb07455f06a15ff13834c92f17b/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=1b7a0148f070deb07455f06a15ff13834c92f17b", "patch": "@@ -1,3 +1,10 @@\n+2011-06-03  Richard Henderson  <rth@redhat.com>\n+\t    Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* config/fpu-387.h [__sun__ && __svr4__] (sigill_hdlr): Correct\n+\tinsn, insn size.\n+\t(has_sse) [!__x86_64__ && __sun__ && __svr4__]: Use movaps.\n+\n 2011-05-29  Janne Blomqvist  <jb@gcc.gnu.org>\n \n         PR libfortran/48931"}, {"sha": "8bf55b28a618ad51c28493302e07691cc582b95e", "filename": "libgfortran/config/fpu-387.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b7a0148f070deb07455f06a15ff13834c92f17b/libgfortran%2Fconfig%2Ffpu-387.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b7a0148f070deb07455f06a15ff13834c92f17b/libgfortran%2Fconfig%2Ffpu-387.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfig%2Ffpu-387.h?ref=1b7a0148f070deb07455f06a15ff13834c92f17b", "patch": "@@ -1,5 +1,5 @@\n /* FPU-related code for x86 and x86_64 processors.\n-   Copyright 2005, 2007, 2009, 2010 Free Software Foundation, Inc.\n+   Copyright 2005, 2007, 2009, 2010, 2011 Free Software Foundation, Inc.\n    Contributed by Francois-Xavier Coudert <coudert@clipper.ens.fr>\n \n This file is part of the GNU Fortran 95 runtime library (libgfortran).\n@@ -40,9 +40,9 @@ sigill_hdlr (int sig __attribute((unused)),\n {\n   sigill_caught = 1;\n   /* Set PC to the instruction after the faulting one to skip over it,\n-     otherwise we enter an infinite loop.  4 is the size of the stmxcsr\n+     otherwise we enter an infinite loop.  3 is the size of the movaps\n      instruction.  */\n-  ucp->uc_mcontext.gregs[EIP] += 4;\n+  ucp->uc_mcontext.gregs[EIP] += 3;\n   setcontext (ucp);\n }\n #endif\n@@ -73,7 +73,7 @@ has_sse (void)\n \n       /* We need a single SSE instruction here so the handler can safely skip\n \t over it.  */\n-      __asm__ volatile (\"movss %xmm2,%xmm1\");\n+      __asm__ volatile (\"movaps %xmm0,%xmm0\");\n \n       sigaction (SIGILL, &oact, NULL);\n "}]}