{"sha": "f31870c1b09afaccfaff82feec2c9f447e8c2b68", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjMxODcwYzFiMDlhZmFjY2ZhZmY4MmZlZWMyYzlmNDQ3ZThjMmI2OA==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-07-28T17:15:25Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-07-28T17:15:25Z"}, "message": "(assign_parms): Pass extra argument SIZE to move_block_from_reg calls.\n\n(assign_parms): Pass extra argument SIZE to\nmove_block_from_reg calls.\n(locate_and_pad_parm): For !ARGS_GROW_DOWNWARD case, move downward\npadding pad_below call after round_up call.\n\nFrom-SVN: r5016", "tree": {"sha": "f1618f0c0cdb8d19f98fe8be4856c49a0c1c82d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f1618f0c0cdb8d19f98fe8be4856c49a0c1c82d7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f31870c1b09afaccfaff82feec2c9f447e8c2b68", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f31870c1b09afaccfaff82feec2c9f447e8c2b68", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f31870c1b09afaccfaff82feec2c9f447e8c2b68", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f31870c1b09afaccfaff82feec2c9f447e8c2b68/comments", "author": null, "committer": null, "parents": [{"sha": "067a2933eac23ff6f6ffbca8334d5fb49f322d2a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/067a2933eac23ff6f6ffbca8334d5fb49f322d2a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/067a2933eac23ff6f6ffbca8334d5fb49f322d2a"}], "stats": {"total": 12, "additions": 8, "deletions": 4}, "files": [{"sha": "93fce64c464fef1a591d8b87cab3c3597897b074", "filename": "gcc/function.c", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f31870c1b09afaccfaff82feec2c9f447e8c2b68/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f31870c1b09afaccfaff82feec2c9f447e8c2b68/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=f31870c1b09afaccfaff82feec2c9f447e8c2b68", "patch": "@@ -3012,7 +3012,8 @@ assign_parms (fndecl, second_time)\n \n \t      if (! second_time)\n \t\tmove_block_from_reg (REGNO (entry_parm),\n-\t\t\t\t     validize_mem (stack_parm), nregs);\n+\t\t\t\t     validize_mem (stack_parm), nregs,\n+\t\t\t\t     int_size_in_bytes (TREE_TYPE (parm)));\n \t      entry_parm = stack_parm;\n \t    }\n \t}\n@@ -3148,7 +3149,8 @@ assign_parms (fndecl, second_time)\n \n \t      move_block_from_reg (REGNO (entry_parm),\n \t\t\t\t   validize_mem (stack_parm),\n-\t\t\t\t   size_stored / UNITS_PER_WORD);\n+\t\t\t\t   size_stored / UNITS_PER_WORD,\n+\t\t\t\t   int_size_in_bytes (TREE_TYPE (parm)));\n \t    }\n \t  DECL_RTL (parm) = stack_parm;\n \t}\n@@ -3601,8 +3603,6 @@ locate_and_pad_parm (passed_mode, type, in_regs, fndecl,\n #else /* !ARGS_GROW_DOWNWARD */\n   pad_to_arg_alignment (initial_offset_ptr, boundary);\n   *offset_ptr = *initial_offset_ptr;\n-  if (where_pad == downward)\n-    pad_below (offset_ptr, passed_mode, sizetree);\n \n #ifdef PUSH_ROUNDING\n   if (passed_mode != BLKmode)\n@@ -3614,6 +3614,10 @@ locate_and_pad_parm (passed_mode, type, in_regs, fndecl,\n \t  || ((TREE_INT_CST_LOW (sizetree) * BITS_PER_UNIT) % PARM_BOUNDARY)))\n     sizetree = round_up (sizetree, PARM_BOUNDARY / BITS_PER_UNIT);\n \n+  /* This must be done after rounding sizetree, so that it will subtract\n+     the same value that we explicitly add below.  */\n+  if (where_pad == downward)\n+    pad_below (offset_ptr, passed_mode, sizetree);\n   ADD_PARM_SIZE (*arg_size_ptr, sizetree);\n #endif /* ARGS_GROW_DOWNWARD */\n }"}]}