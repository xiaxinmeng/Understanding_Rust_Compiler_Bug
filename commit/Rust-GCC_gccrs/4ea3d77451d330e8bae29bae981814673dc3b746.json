{"sha": "4ea3d77451d330e8bae29bae981814673dc3b746", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGVhM2Q3NzQ1MWQzMzBlOGJhZTI5YmFlOTgxODE0NjczZGMzYjc0Ng==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2013-06-28T09:28:40Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2013-06-28T09:28:40Z"}, "message": "re PR middle-end/36041 (Speed up builtin_popcountll)\n\n\tPR middle-end/36041\n\t* libgcc2.c (POPCOUNTCST2, POPCOUNTCST4, POPCOUNTCST8, POPCOUNTCST):\n\tDefine.\n\t(__popcountSI2): For __SIZEOF_INT__ > 2 targets use arithmetics\n\tinstead of table lookups.\n\t(__popcountDI2): Likewise.\n\nFrom-SVN: r200506", "tree": {"sha": "6bb2542aeca126f3ed7209d470724896cf4de0ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6bb2542aeca126f3ed7209d470724896cf4de0ba"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4ea3d77451d330e8bae29bae981814673dc3b746", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ea3d77451d330e8bae29bae981814673dc3b746", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ea3d77451d330e8bae29bae981814673dc3b746", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ea3d77451d330e8bae29bae981814673dc3b746/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ebf8f0eaebb0ede888d8d86719d7cbd82a5f6270", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ebf8f0eaebb0ede888d8d86719d7cbd82a5f6270", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ebf8f0eaebb0ede888d8d86719d7cbd82a5f6270"}], "stats": {"total": 50, "additions": 50, "deletions": 0}, "files": [{"sha": "f2bc54ce0a2b2c0f6ebec23958893bdddad0b800", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ea3d77451d330e8bae29bae981814673dc3b746/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ea3d77451d330e8bae29bae981814673dc3b746/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=4ea3d77451d330e8bae29bae981814673dc3b746", "patch": "@@ -1,3 +1,12 @@\n+2013-06-28  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/36041\n+\t* libgcc2.c (POPCOUNTCST2, POPCOUNTCST4, POPCOUNTCST8, POPCOUNTCST):\n+\tDefine.\n+\t(__popcountSI2): For __SIZEOF_INT__ > 2 targets use arithmetics\n+\tinstead of table lookups.\n+\t(__popcountDI2): Likewise.\n+\n 2013-06-25  Chung-Ju Wu  <jasonwucj@gmail.com>\n \n \t* Makefile.in (clean, distclean): Remove auto-target.h and stamp-h"}, {"sha": "a47d8af9f86800d57487fde9b1be4d74d586f85d", "filename": "libgcc/libgcc2.c", "status": "modified", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ea3d77451d330e8bae29bae981814673dc3b746/libgcc%2Flibgcc2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ea3d77451d330e8bae29bae981814673dc3b746/libgcc%2Flibgcc2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Flibgcc2.c?ref=4ea3d77451d330e8bae29bae981814673dc3b746", "patch": "@@ -819,17 +819,42 @@ const UQItype __popcount_tab[256] =\n };\n #endif\n \f\n+#if defined(L_popcountsi2) || defined(L_popcountdi2)\n+#define POPCOUNTCST2(x) (((UWtype) x << BITS_PER_UNIT) | x)\n+#define POPCOUNTCST4(x) (((UWtype) x << (2 * BITS_PER_UNIT)) | x)\n+#define POPCOUNTCST8(x) (((UWtype) x << (4 * BITS_PER_UNIT)) | x)\n+#if W_TYPE_SIZE == BITS_PER_UNIT\n+#define POPCOUNTCST(x) x\n+#elif W_TYPE_SIZE == 2 * BITS_PER_UNIT\n+#define POPCOUNTCST(x) POPCOUNTCST2 (x)\n+#elif W_TYPE_SIZE == 4 * BITS_PER_UNIT\n+#define POPCOUNTCST(x) POPCOUNTCST4 (POPCOUNTCST2 (x))\n+#elif W_TYPE_SIZE == 8 * BITS_PER_UNIT\n+#define POPCOUNTCST(x) POPCOUNTCST8 (POPCOUNTCST4 (POPCOUNTCST2 (x)))\n+#endif\n+#endif\n+\f\n #ifdef L_popcountsi2\n #undef int\n int\n __popcountSI2 (UWtype x)\n {\n+  /* Force table lookup on targets like AVR and RL78 which only\n+     pretend they have LIBGCC2_UNITS_PER_WORD 4, but actually\n+     have 1, and other small word targets.  */\n+#if __SIZEOF_INT__ > 2 && defined (POPCOUNTCST) && BITS_PER_UNIT == 8\n+  x = x - ((x >> 1) & POPCOUNTCST (0x55));\n+  x = (x & POPCOUNTCST (0x33)) + ((x >> 2) & POPCOUNTCST (0x33));\n+  x = (x + (x >> 4)) & POPCOUNTCST (0x0F);\n+  return (x * POPCOUNTCST (0x01)) >> (W_TYPE_SIZE - BITS_PER_UNIT);\n+#else\n   int i, ret = 0;\n \n   for (i = 0; i < W_TYPE_SIZE; i += 8)\n     ret += __popcount_tab[(x >> i) & 0xff];\n \n   return ret;\n+#endif\n }\n #endif\n \f\n@@ -838,12 +863,28 @@ __popcountSI2 (UWtype x)\n int\n __popcountDI2 (UDWtype x)\n {\n+  /* Force table lookup on targets like AVR and RL78 which only\n+     pretend they have LIBGCC2_UNITS_PER_WORD 4, but actually\n+     have 1, and other small word targets.  */\n+#if __SIZEOF_INT__ > 2 && defined (POPCOUNTCST) && BITS_PER_UNIT == 8\n+  const DWunion uu = {.ll = x};\n+  UWtype x1 = uu.s.low, x2 = uu.s.high;\n+  x1 = x1 - ((x1 >> 1) & POPCOUNTCST (0x55));\n+  x2 = x2 - ((x2 >> 1) & POPCOUNTCST (0x55));\n+  x1 = (x1 & POPCOUNTCST (0x33)) + ((x1 >> 2) & POPCOUNTCST (0x33));\n+  x2 = (x2 & POPCOUNTCST (0x33)) + ((x2 >> 2) & POPCOUNTCST (0x33));\n+  x1 = (x1 + (x1 >> 4)) & POPCOUNTCST (0x0F);\n+  x2 = (x2 + (x2 >> 4)) & POPCOUNTCST (0x0F);\n+  x1 += x2;\n+  return (x1 * POPCOUNTCST (0x01)) >> (W_TYPE_SIZE - BITS_PER_UNIT);\n+#else\n   int i, ret = 0;\n \n   for (i = 0; i < 2*W_TYPE_SIZE; i += 8)\n     ret += __popcount_tab[(x >> i) & 0xff];\n \n   return ret;\n+#endif\n }\n #endif\n \f"}]}