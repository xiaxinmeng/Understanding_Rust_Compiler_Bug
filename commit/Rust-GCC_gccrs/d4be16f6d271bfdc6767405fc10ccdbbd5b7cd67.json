{"sha": "d4be16f6d271bfdc6767405fc10ccdbbd5b7cd67", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDRiZTE2ZjZkMjcxYmZkYzY3Njc0MDVmYzEwY2NkYmJkNWI3Y2Q2Nw==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2011-08-02T00:31:07Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2011-08-02T00:31:07Z"}, "message": "Replace long with long long on __lzcnt64.\n\n2011-08-01  H.J. Lu  <hongjiu.lu@intel.com>\n\n\t* config/i386/lzcntintrin.h (__lzcnt64): Replace long with\n\tlong long.\n\nFrom-SVN: r177081", "tree": {"sha": "007c4865867126e83d68479e9ee7ad703016f0f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/007c4865867126e83d68479e9ee7ad703016f0f1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d4be16f6d271bfdc6767405fc10ccdbbd5b7cd67", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4be16f6d271bfdc6767405fc10ccdbbd5b7cd67", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4be16f6d271bfdc6767405fc10ccdbbd5b7cd67", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4be16f6d271bfdc6767405fc10ccdbbd5b7cd67/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "88b4b6834fe64955838a150a6dd39d7bc080a3b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88b4b6834fe64955838a150a6dd39d7bc080a3b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88b4b6834fe64955838a150a6dd39d7bc080a3b1"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "25ad12dc14d1751544b8fe710d62df08c5d75ad4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4be16f6d271bfdc6767405fc10ccdbbd5b7cd67/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4be16f6d271bfdc6767405fc10ccdbbd5b7cd67/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d4be16f6d271bfdc6767405fc10ccdbbd5b7cd67", "patch": "@@ -1,3 +1,8 @@\n+2011-08-01  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* config/i386/lzcntintrin.h (__lzcnt64): Replace long with\n+\tlong long.\n+\n 2011-08-01  Sebastian Pop  <sebastian.pop@amd.com>\n \t    Joseph Myers  <joseph@codesourcery.com>\n "}, {"sha": "8df01d28ea3fed3dd3f7f340cad5413aa1705baa", "filename": "gcc/config/i386/lzcntintrin.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4be16f6d271bfdc6767405fc10ccdbbd5b7cd67/gcc%2Fconfig%2Fi386%2Flzcntintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4be16f6d271bfdc6767405fc10ccdbbd5b7cd67/gcc%2Fconfig%2Fi386%2Flzcntintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Flzcntintrin.h?ref=d4be16f6d271bfdc6767405fc10ccdbbd5b7cd67", "patch": "@@ -45,10 +45,10 @@ __lzcnt32 (unsigned int __X)\n }\n \n #ifdef __x86_64__\n-extern __inline unsigned long __attribute__((__gnu_inline__, __always_inline__, __artificial__))\n-__lzcnt64 (unsigned long __X)\n+extern __inline unsigned long long __attribute__((__gnu_inline__, __always_inline__, __artificial__))\n+__lzcnt64 (unsigned long long __X)\n {\n-  return __builtin_clzl (__X);\n+  return __builtin_clzll (__X);\n }\n #endif\n "}]}