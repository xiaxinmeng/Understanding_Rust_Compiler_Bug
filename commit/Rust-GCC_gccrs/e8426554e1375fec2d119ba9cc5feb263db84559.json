{"sha": "e8426554e1375fec2d119ba9cc5feb263db84559", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTg0MjY1NTRlMTM3NWZlYzJkMTE5YmE5Y2M1ZmViMjYzZGI4NDU1OQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-08-09T11:12:08Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-08-11T14:24:08Z"}, "message": "Adjust volatile handling of the operand scanner\n\nThe GIMPLE SSA operand scanner handles COMPONENT_REFs that are\nnot marked TREE_THIS_VOLATILE but have a TREE_THIS_VOLATILE\nFIELD_DECL as volatile.  That's inconsistent in how TREE_THIS_VOLATILE\ntesting on GENERIC refs works which requires operand zero of\ncomponent references to mirror TREE_THIS_VOLATILE to the ref\nso that testing TREE_THIS_VOLATILE on the outermost reference\nis enough to determine the volatileness.\n\nThe following patch thus removes FIELD_DECL scanning from\nthe GIMPLE SSA operand scanner, possibly leaving fewer stmts\nmarked as gimple_has_volatile_ops.\n\nIt shows we miss at least one case in the fortran frontend, though\nthere's a suspicious amount of COMPONENT_REF creation compared\nto little setting of TREE_THIS_VOLATILE.  This fixes the FAIL\nof gfortran.dg/volatile11.f90 that would otherwise occur.\n\nVisually inspecting fortran/ reveals a bunch of likely to fix\ncases but I don't know the constraints of 'volatile' uses in\nthe fortran language to assess whether some of these are not\nnecessary.\n\n2021-08-09  Richard Biener  <rguenther@suse.de>\n\ngcc/\n\t* tree-ssa-operands.c (operands_scanner::get_expr_operands):\n\tDo not look at COMPONENT_REF FIELD_DECLs TREE_THIS_VOLATILE\n\tto determine has_volatile_ops.\n\ngcc/fortran/\n\t* trans-common.c (create_common): Set TREE_THIS_VOLATILE on the\n\tCOMPONENT_REF if the field is volatile.", "tree": {"sha": "9ff9e1b439f38fbb24e1a3d687143f183bdbc8e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9ff9e1b439f38fbb24e1a3d687143f183bdbc8e6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e8426554e1375fec2d119ba9cc5feb263db84559", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8426554e1375fec2d119ba9cc5feb263db84559", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e8426554e1375fec2d119ba9cc5feb263db84559", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8426554e1375fec2d119ba9cc5feb263db84559/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cecdff844ac3a4a1790794ce4aa17d7fa50ee3eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cecdff844ac3a4a1790794ce4aa17d7fa50ee3eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cecdff844ac3a4a1790794ce4aa17d7fa50ee3eb"}], "stats": {"total": 16, "additions": 6, "deletions": 10}, "files": [{"sha": "7bcf18dc4752a917cbfea04da1f3579c2f37d0d3", "filename": "gcc/fortran/trans-common.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8426554e1375fec2d119ba9cc5feb263db84559/gcc%2Ffortran%2Ftrans-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8426554e1375fec2d119ba9cc5feb263db84559/gcc%2Ffortran%2Ftrans-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-common.c?ref=e8426554e1375fec2d119ba9cc5feb263db84559", "patch": "@@ -759,10 +759,11 @@ create_common (gfc_common_head *com, segment_info *head, bool saw_equiv)\n       else\n \tgfc_add_decl_to_function (var_decl);\n \n-      SET_DECL_VALUE_EXPR (var_decl,\n-\t\t\t   fold_build3_loc (input_location, COMPONENT_REF,\n-\t\t\t\t\t    TREE_TYPE (s->field),\n-\t\t\t\t\t    decl, s->field, NULL_TREE));\n+      tree comp = build3_loc (input_location, COMPONENT_REF,\n+\t\t\t      TREE_TYPE (s->field), decl, s->field, NULL_TREE);\n+      if (TREE_THIS_VOLATILE (s->field))\n+\tTREE_THIS_VOLATILE (comp) = 1;\n+      SET_DECL_VALUE_EXPR (var_decl, comp);\n       DECL_HAS_VALUE_EXPR_P (var_decl) = 1;\n       GFC_DECL_COMMON_OR_EQUIV (var_decl) = 1;\n "}, {"sha": "ebf7eea3b048c9134f079f3a2809dc2309251c07", "filename": "gcc/tree-ssa-operands.c", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8426554e1375fec2d119ba9cc5feb263db84559/gcc%2Ftree-ssa-operands.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8426554e1375fec2d119ba9cc5feb263db84559/gcc%2Ftree-ssa-operands.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-operands.c?ref=e8426554e1375fec2d119ba9cc5feb263db84559", "patch": "@@ -834,12 +834,7 @@ operands_scanner::get_expr_operands (tree *expr_p, int flags)\n \tget_expr_operands (&TREE_OPERAND (expr, 0), flags);\n \n \tif (code == COMPONENT_REF)\n-\t  {\n-\t    if (!(flags & opf_no_vops)\n-\t\t&& TREE_THIS_VOLATILE (TREE_OPERAND (expr, 1)))\n-\t      gimple_set_has_volatile_ops (stmt, true);\n-\t    get_expr_operands (&TREE_OPERAND (expr, 2), uflags);\n-\t  }\n+\t  get_expr_operands (&TREE_OPERAND (expr, 2), uflags);\n \telse if (code == ARRAY_REF || code == ARRAY_RANGE_REF)\n \t  {\n \t    get_expr_operands (&TREE_OPERAND (expr, 1), uflags);"}]}