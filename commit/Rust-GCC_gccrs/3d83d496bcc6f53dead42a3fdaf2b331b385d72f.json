{"sha": "3d83d496bcc6f53dead42a3fdaf2b331b385d72f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2Q4M2Q0OTZiY2M2ZjUzZGVhZDQyYTNmZGFmMmIzMzFiMzg1ZDcyZg==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1992-08-21T05:52:28Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1992-08-21T05:52:28Z"}, "message": "pa.c (output_mul_insn): Delete nop after branch in template...\n\n\t* pa.c (output_mul_insn): Delete nop after branch in template,\n\tconditionally emit a nop if the delay slot was not filled. (via %#)\n\n\t* pa.c (output_function_prologue): Handle profiling in a function\n\twithout a frame pointer.\n\nFrom-SVN: r1919", "tree": {"sha": "a64c87b653001b2c4bea5e351dfbf3a515711329", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a64c87b653001b2c4bea5e351dfbf3a515711329"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3d83d496bcc6f53dead42a3fdaf2b331b385d72f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d83d496bcc6f53dead42a3fdaf2b331b385d72f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d83d496bcc6f53dead42a3fdaf2b331b385d72f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d83d496bcc6f53dead42a3fdaf2b331b385d72f/comments", "author": null, "committer": null, "parents": [{"sha": "5c09c899b9825b42c092f041bf648d1a59f4793b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c09c899b9825b42c092f041bf648d1a59f4793b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c09c899b9825b42c092f041bf648d1a59f4793b"}], "stats": {"total": 29, "additions": 21, "deletions": 8}, "files": [{"sha": "1e5a98e01e48d66311552e01ccf3410ff07144c5", "filename": "gcc/config/pa/pa.c", "status": "modified", "additions": 21, "deletions": 8, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d83d496bcc6f53dead42a3fdaf2b331b385d72f/gcc%2Fconfig%2Fpa%2Fpa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d83d496bcc6f53dead42a3fdaf2b331b385d72f/gcc%2Fconfig%2Fpa%2Fpa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.c?ref=3d83d496bcc6f53dead42a3fdaf2b331b385d72f", "patch": "@@ -1507,22 +1507,35 @@ output_function_prologue (file, size, leaf_function)\n \t      ? (VAL_14_BITS_P (actual_fsize) ? 12 : 20)\n \t      : (VAL_14_BITS_P (actual_fsize) ? 4 : 8)));\n       int i, arg_offset;\n+      int basereg, offsetadj;\n \n-      for (i = 26, arg_offset = -36; i >= 23; i--, arg_offset -= 4)\n+      /* When the function has a frame pointer, use that as the base \n+\t register for saving/restoring registers.  Else use the stack\n+\t pointer.  Adjust the offset according to the frame size if this\n+\t function does not have a frame pointer.  */\n+\n+      basereg = frame_pointer_needed ? FRAME_POINTER_REGNUM\n+\t\t\t\t     : STACK_POINTER_REGNUM;\n+      offsetadj = frame_pointer_needed ? 0 : actual_fsize;\n+\n+      for (i = 26, arg_offset = -36 - offsetadj; i >= 23; i--, arg_offset -= 4)\n \tif (regs_ever_live[i])\n \t  {\n-\t    print_stw (file, i, arg_offset, 4);\n-\t    pc_offset += 4;\n+\t    print_stw (file, i, arg_offset, basereg);\n+\t    /* It is possible for the arg_offset not to fit in 14 bits \n+               when profiling a function without a frame pointer.  Deal\n+\t       with such cases.  */\n+\t    pc_offset += VAL_14_BITS_P (arg_offset) ? 4 : 8;\n \t  }\n       fprintf (file,\n \t       \"\\tcopy %%r2,%%r26\\n\\taddil L'LP$%04d-$global$,%%r27\\n\\\n \\tldo R'LP$%04d-$global$(%%r1),%%r24\\n\\tbl _mcount,%%r2\\n\\\n \\tldo %d(%%r2),%%r25\\n\",\n \t       hp_profile_labelno, hp_profile_labelno, -pc_offset - 12 - 8);\n-      for (i = 26, arg_offset = -36; i >= 23; i--, arg_offset -= 4)\n+      for (i = 26, arg_offset = -36 - offsetadj; i >= 23; i--, arg_offset -= 4)\n \tif (regs_ever_live[i])\n-\t  print_ldw (file, i, arg_offset, 4);\n-      print_ldw (file, 2, -20, 4);\n+\t  print_ldw (file, i, arg_offset, basereg);\n+      print_ldw (file, 2, -20 - offsetadj, basereg);\n     }\n \n   /* Normal register save. */\n@@ -2122,12 +2135,12 @@ output_mul_insn (unsignedp)\n   if (unsignedp)\n     {\n       import_milli (mulU);\n-      return \"bl $$mulU,31\\n\\tnop\";\n+      return \"bl $$mulU,31%#\";\n     }\n   else\n     {\n       import_milli (mulI);\n-      return \"bl $$mulI,31\\n\\tnop\";\n+      return \"bl $$mulI,31%#\";\n     }\n }\n "}]}