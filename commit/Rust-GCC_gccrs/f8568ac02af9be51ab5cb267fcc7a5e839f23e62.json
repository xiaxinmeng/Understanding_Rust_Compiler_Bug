{"sha": "f8568ac02af9be51ab5cb267fcc7a5e839f23e62", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjg1NjhhYzAyYWY5YmU1MWFiNWNiMjY3ZmNjN2E1ZTgzOWYyM2U2Mg==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2007-09-10T09:10:00Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2007-09-10T09:10:00Z"}, "message": "re PR target/33369 (suffix or operands invalid for `pslld')\n\n\tPR target/33369\n\t* gcc/config/i386/sse.md (ashr<mode>3): Change op2 mode to SImode.\n\tUse 'N' operand constraint for op2.\n\t(lshr<mode>3): Ditto.\n\t(ashl<mode>3): Ditto.\n\t(vec_shl_<mode>): Use const_0_to_255_mul_8_operand predicate for op2.\n\t(vec_shr_<mode>): Use const_0_to_255_mul_8_operand predicate for op2.\n\n\t* gcc/config/i386/i386.c (ix86_expand_builtin) [IX86_BUILTIN_PSLL?128,\n\tIX86_BUILTIN_PSRA*?128, IX86_BUILTIN_PSRL?128]: Convert op1 to SImode.\n\ntestsuite/ChangeLog:\n\t\n\tPR target/33369\n\t* gcc.dg/vect/pr33369.c: New test.\n\nFrom-SVN: r128328", "tree": {"sha": "f3ec85518b147a9837dfc690b96b6df65b69d2d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f3ec85518b147a9837dfc690b96b6df65b69d2d6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f8568ac02af9be51ab5cb267fcc7a5e839f23e62", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8568ac02af9be51ab5cb267fcc7a5e839f23e62", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8568ac02af9be51ab5cb267fcc7a5e839f23e62", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8568ac02af9be51ab5cb267fcc7a5e839f23e62/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c03550f61c494dd20c46578aa4bc9a525323782c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c03550f61c494dd20c46578aa4bc9a525323782c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c03550f61c494dd20c46578aa4bc9a525323782c"}], "stats": {"total": 61, "additions": 48, "deletions": 13}, "files": [{"sha": "e6868fe2d9f0a27b5a71a63e0ba06500776a834a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8568ac02af9be51ab5cb267fcc7a5e839f23e62/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8568ac02af9be51ab5cb267fcc7a5e839f23e62/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f8568ac02af9be51ab5cb267fcc7a5e839f23e62", "patch": "@@ -1,3 +1,16 @@\n+2007-09-10  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/33369\n+\t* gcc/config/i386/sse.md (ashr<mode>3): Change op2 mode to SImode.\n+\tUse 'N' operand constraint for op2.\n+\t(lshr<mode>3): Ditto.\n+\t(ashl<mode>3): Ditto.\n+\t(vec_shl_<mode>): Use const_0_to_255_mul_8_operand predicate for op2.\n+\t(vec_shr_<mode>): Use const_0_to_255_mul_8_operand predicate for op2.\n+\n+\t* gcc/config/i386/i386.c (ix86_expand_builtin) [IX86_BUILTIN_PSLL?128,\n+\tIX86_BUILTIN_PSRA*?128, IX86_BUILTIN_PSRL?128]: Convert op1 to SImode.\n+\n 2007-09-10  Andreas Krebbel  <krebbel1@de.ibm.com>\n \n \t* config/s390/s390.md (\"fixuns_trunc<BFP:mode><GPR:mode>2\"):"}, {"sha": "b1dda95adc7bd1206e1267b16005912aa3b3781b", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8568ac02af9be51ab5cb267fcc7a5e839f23e62/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8568ac02af9be51ab5cb267fcc7a5e839f23e62/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=f8568ac02af9be51ab5cb267fcc7a5e839f23e62", "patch": "@@ -19476,8 +19476,8 @@ ix86_expand_builtin (tree exp, rtx target, rtx subtarget ATTRIBUTE_UNUSED,\n       if (! (*insn_data[icode].operand[1].predicate) (op0, mode1))\n \top0 = copy_to_reg (op0);\n \n-      op1 = simplify_gen_subreg (TImode, op1, GET_MODE (op1), 0);\n-      if (! (*insn_data[icode].operand[2].predicate) (op1, TImode))\n+      op1 = simplify_gen_subreg (SImode, op1, GET_MODE (op1), 0);\n+      if (! (*insn_data[icode].operand[2].predicate) (op1, SImode))\n \top1 = copy_to_reg (op1);\n \n       target = gen_reg_rtx (tmode);"}, {"sha": "5b50274fcb8dfcbf35abf91a2e018c45f8a5e98a", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8568ac02af9be51ab5cb267fcc7a5e839f23e62/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8568ac02af9be51ab5cb267fcc7a5e839f23e62/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=f8568ac02af9be51ab5cb267fcc7a5e839f23e62", "patch": "@@ -4983,8 +4983,8 @@\n   \"TARGET_SSE2 && TARGET_SSE_MATH\n    && (!TARGET_USE_VECTOR_CONVERTS || optimize_size)\"\n   \"@\n-   cvtsi2sd\\t{%1, %0|%0, %1} \n-   cvtsi2sd\\t{%1, %0|%0, %1} \n+   cvtsi2sd\\t{%1, %0|%0, %1}\n+   cvtsi2sd\\t{%1, %0|%0, %1}\n    cvtdq2pd\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"sseicvt\")\n    (set_attr \"mode\" \"DF,DF,V2DF\")"}, {"sha": "65207a403d033a426b93fbcf42a59d25fcaa095d", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 5, "deletions": 9, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8568ac02af9be51ab5cb267fcc7a5e839f23e62/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8568ac02af9be51ab5cb267fcc7a5e839f23e62/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=f8568ac02af9be51ab5cb267fcc7a5e839f23e62", "patch": "@@ -3416,7 +3416,7 @@\n   [(set (match_operand:SSEMODE24 0 \"register_operand\" \"=x\")\n \t(ashiftrt:SSEMODE24\n \t  (match_operand:SSEMODE24 1 \"register_operand\" \"0\")\n-\t  (match_operand:TI 2 \"nonmemory_operand\" \"xn\")))]\n+\t  (match_operand:SI 2 \"nonmemory_operand\" \"xN\")))]\n   \"TARGET_SSE2\"\n   \"psra<ssevecsize>\\t{%2, %0|%0, %2}\"\n   [(set_attr \"type\" \"sseishft\")\n@@ -3427,7 +3427,7 @@\n   [(set (match_operand:SSEMODE248 0 \"register_operand\" \"=x\")\n \t(lshiftrt:SSEMODE248\n \t  (match_operand:SSEMODE248 1 \"register_operand\" \"0\")\n-\t  (match_operand:TI 2 \"nonmemory_operand\" \"xn\")))]\n+\t  (match_operand:SI 2 \"nonmemory_operand\" \"xN\")))]\n   \"TARGET_SSE2\"\n   \"psrl<ssevecsize>\\t{%2, %0|%0, %2}\"\n   [(set_attr \"type\" \"sseishft\")\n@@ -3438,7 +3438,7 @@\n   [(set (match_operand:SSEMODE248 0 \"register_operand\" \"=x\")\n \t(ashift:SSEMODE248\n \t  (match_operand:SSEMODE248 1 \"register_operand\" \"0\")\n-\t  (match_operand:TI 2 \"nonmemory_operand\" \"xn\")))]\n+\t  (match_operand:SI 2 \"nonmemory_operand\" \"xN\")))]\n   \"TARGET_SSE2\"\n   \"psll<ssevecsize>\\t{%2, %0|%0, %2}\"\n   [(set_attr \"type\" \"sseishft\")\n@@ -3448,23 +3448,19 @@\n (define_expand \"vec_shl_<mode>\"\n   [(set (match_operand:SSEMODEI 0 \"register_operand\" \"\")\n         (ashift:TI (match_operand:SSEMODEI 1 \"register_operand\" \"\")\n-\t\t   (match_operand:SI 2 \"general_operand\" \"\")))]\n+\t\t   (match_operand:SI 2 \"const_0_to_255_mul_8_operand\" \"\")))]\n   \"TARGET_SSE2\"\n {\n-  if (!const_0_to_255_mul_8_operand (operands[2], SImode))\n-    FAIL;\n   operands[0] = gen_lowpart (TImode, operands[0]);\n   operands[1] = gen_lowpart (TImode, operands[1]);\n })\n \n (define_expand \"vec_shr_<mode>\"\n   [(set (match_operand:SSEMODEI 0 \"register_operand\" \"\")\n         (lshiftrt:TI (match_operand:SSEMODEI 1 \"register_operand\" \"\")\n-\t\t     (match_operand:SI 2 \"general_operand\" \"\")))]\n+\t\t     (match_operand:SI 2 \"const_0_to_255_mul_8_operand\" \"\")))]\n   \"TARGET_SSE2\"\n {\n-  if (!const_0_to_255_mul_8_operand (operands[2], SImode))\n-    FAIL;\n   operands[0] = gen_lowpart (TImode, operands[0]);\n   operands[1] = gen_lowpart (TImode, operands[1]);\n })"}, {"sha": "95280504f2325f9082c84c6736dacf27aa79d1a1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8568ac02af9be51ab5cb267fcc7a5e839f23e62/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8568ac02af9be51ab5cb267fcc7a5e839f23e62/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f8568ac02af9be51ab5cb267fcc7a5e839f23e62", "patch": "@@ -1,3 +1,8 @@\n+2007-09-10  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/33369\n+\t* gcc.dg/vect/pr33369.c: New test.\n+\n 2007-09-10  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/33370"}, {"sha": "9979cbd01f78c99e184dd5d63f7f574111be5866", "filename": "gcc/testsuite/gcc.dg/vect/pr33369.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8568ac02af9be51ab5cb267fcc7a5e839f23e62/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr33369.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8568ac02af9be51ab5cb267fcc7a5e839f23e62/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr33369.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr33369.c?ref=f8568ac02af9be51ab5cb267fcc7a5e839f23e62", "patch": "@@ -0,0 +1,21 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target vect_shift } */\n+\n+typedef struct tagPOINT\n+{\n+  int x;\n+  int y;\n+} POINT;\n+\n+void\n+f (POINT * ptBuf)\n+{\n+  int i;\n+  for (i = 0; i < 4; i++)\n+    {\n+      ptBuf[i].x = ((ptBuf[i].x) << 4);\n+      ptBuf[i].y = ((ptBuf[i].y) << 4);\n+    }\n+}\n+\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}]}