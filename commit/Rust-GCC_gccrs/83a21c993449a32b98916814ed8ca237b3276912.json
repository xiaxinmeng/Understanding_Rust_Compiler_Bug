{"sha": "83a21c993449a32b98916814ed8ca237b3276912", "node_id": "C_kwDOANBUbNoAKDgzYTIxYzk5MzQ0OWEzMmI5ODkxNjgxNGVkOGNhMjM3YjMyNzY5MTI", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2022-03-28T19:32:30Z"}, "committer": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2022-03-28T19:36:13Z"}, "message": "c++: Fix __has_trivial_* docs [PR59426]\n\nThese have been misdocumented since C++98 POD was split into C++11 trivial\nand standard-layout in r149721.\n\n\tPR c++/59426\n\ngcc/ChangeLog:\n\n\t* doc/extend.texi: Refer to __is_trivial instead of __is_pod.", "tree": {"sha": "0f46742f927632626847e05d4d53c564c62ef3f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0f46742f927632626847e05d4d53c564c62ef3f3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/83a21c993449a32b98916814ed8ca237b3276912", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83a21c993449a32b98916814ed8ca237b3276912", "html_url": "https://github.com/Rust-GCC/gccrs/commit/83a21c993449a32b98916814ed8ca237b3276912", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83a21c993449a32b98916814ed8ca237b3276912/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f8093854c78f820a4f0202fd4db7bba0ee0573c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8093854c78f820a4f0202fd4db7bba0ee0573c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8093854c78f820a4f0202fd4db7bba0ee0573c8"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "8381eb620ea80de38883c0f38bfde147f15ec93c", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83a21c993449a32b98916814ed8ca237b3276912/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83a21c993449a32b98916814ed8ca237b3276912/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=83a21c993449a32b98916814ed8ca237b3276912", "patch": "@@ -25144,31 +25144,31 @@ Requires: @code{type} shall be a complete type, (possibly cv-qualified)\n \n @item __has_trivial_assign (type)\n If @code{type} is @code{const}- qualified or is a reference type then\n-the trait is @code{false}.  Otherwise if @code{__is_pod (type)} is\n+the trait is @code{false}.  Otherwise if @code{__is_trivial (type)} is\n @code{true} then the trait is @code{true}, else if @code{type} is\n a cv-qualified class or union type with a trivial copy assignment\n ([class.copy]) then the trait is @code{true}, else it is @code{false}.\n Requires: @code{type} shall be a complete type, (possibly cv-qualified)\n @code{void}, or an array of unknown bound.\n \n @item __has_trivial_copy (type)\n-If @code{__is_pod (type)} is @code{true} or @code{type} is a reference\n+If @code{__is_trivial (type)} is @code{true} or @code{type} is a reference\n type then the trait is @code{true}, else if @code{type} is a cv class\n or union type with a trivial copy constructor ([class.copy]) then the trait\n is @code{true}, else it is @code{false}.  Requires: @code{type} shall be\n a complete type, (possibly cv-qualified) @code{void}, or an array of unknown\n bound.\n \n @item __has_trivial_constructor (type)\n-If @code{__is_pod (type)} is @code{true} then the trait is @code{true},\n+If @code{__is_trivial (type)} is @code{true} then the trait is @code{true},\n else if @code{type} is a cv-qualified class or union type (or array thereof)\n with a trivial default constructor ([class.ctor]) then the trait is @code{true},\n else it is @code{false}.\n Requires: @code{type} shall be a complete type, (possibly cv-qualified)\n @code{void}, or an array of unknown bound.\n \n @item __has_trivial_destructor (type)\n-If @code{__is_pod (type)} is @code{true} or @code{type} is a reference type\n+If @code{__is_trivial (type)} is @code{true} or @code{type} is a reference type\n then the trait is @code{true}, else if @code{type} is a cv class or union\n type (or array thereof) with a trivial destructor ([class.dtor]) then\n the trait is @code{true}, else it is @code{false}."}]}