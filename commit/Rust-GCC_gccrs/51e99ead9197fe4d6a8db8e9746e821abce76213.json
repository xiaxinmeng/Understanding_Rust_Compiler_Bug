{"sha": "51e99ead9197fe4d6a8db8e9746e821abce76213", "node_id": "C_kwDOANBUbNoAKDUxZTk5ZWFkOTE5N2ZlNGQ2YThkYjhlOTc0NmU4MjFhYmNlNzYyMTM", "commit": {"author": {"name": "Ghjuvan Lacambre", "email": "lacambre@adacore.com", "date": "2021-10-27T11:26:38Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-11-09T09:44:49Z"}, "message": "[Ada] Accessibility fix\n\ngcc/ada/\n\n\t* sem_util.adb (Accessibility_Level): Use init_proc_level_formal\n\tinstead of computing a new accessibility level from Scope_Depth\n\t(E).", "tree": {"sha": "7b4c40670bd02557d5342fa6dfb502033e16756d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7b4c40670bd02557d5342fa6dfb502033e16756d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/51e99ead9197fe4d6a8db8e9746e821abce76213", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51e99ead9197fe4d6a8db8e9746e821abce76213", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51e99ead9197fe4d6a8db8e9746e821abce76213", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51e99ead9197fe4d6a8db8e9746e821abce76213/comments", "author": {"login": "glacambre", "id": 11534587, "node_id": "MDQ6VXNlcjExNTM0NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/11534587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/glacambre", "html_url": "https://github.com/glacambre", "followers_url": "https://api.github.com/users/glacambre/followers", "following_url": "https://api.github.com/users/glacambre/following{/other_user}", "gists_url": "https://api.github.com/users/glacambre/gists{/gist_id}", "starred_url": "https://api.github.com/users/glacambre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/glacambre/subscriptions", "organizations_url": "https://api.github.com/users/glacambre/orgs", "repos_url": "https://api.github.com/users/glacambre/repos", "events_url": "https://api.github.com/users/glacambre/events{/privacy}", "received_events_url": "https://api.github.com/users/glacambre/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cbe421bd45d1994524b7312ab521dcc8b51cbfc6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cbe421bd45d1994524b7312ab521dcc8b51cbfc6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cbe421bd45d1994524b7312ab521dcc8b51cbfc6"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "c8362f57b177dcca578a58026988cbb916f1db41", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51e99ead9197fe4d6a8db8e9746e821abce76213/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51e99ead9197fe4d6a8db8e9746e821abce76213/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=51e99ead9197fe4d6a8db8e9746e821abce76213", "patch": "@@ -744,6 +744,13 @@ package body Sem_Util is\n             then\n                return Accessibility_Level (Related_Expression (E));\n \n+            elsif Level = Dynamic_Level\n+               and then Ekind (E) in E_In_Parameter | E_In_Out_Parameter\n+               and then Present (Init_Proc_Level_Formal (Scope (E)))\n+            then\n+               return New_Occurrence_Of\n+                        (Init_Proc_Level_Formal (Scope (E)), Loc);\n+\n             --  Normal object - get the level of the enclosing scope\n \n             else"}]}