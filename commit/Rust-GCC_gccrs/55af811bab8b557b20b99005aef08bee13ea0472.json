{"sha": "55af811bab8b557b20b99005aef08bee13ea0472", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTVhZjgxMWJhYjhiNTU3YjIwYjk5MDA1YWVmMDhiZWUxM2VhMDQ3Mg==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2014-03-24T10:20:15Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2014-03-24T10:20:15Z"}, "message": "div-by-zero-4.c: Don't include limits.h.\n\n\t* c-c++-common/ubsan/div-by-zero-4.c: Don't include limits.h.  Define\n\tINT_MIN.\n\t* c-c++-common/ubsan/overflow-1.c: Check for unwanted output.\n\t* c-c++-common/ubsan/overflow-add-1.c: Likewise.\n\t* c-c++-common/ubsan/overflow-mul-1.c: Likewise.\n\t* c-c++-common/ubsan/overflow-mul-3.c: Likewise.\n\t* c-c++-common/ubsan/overflow-negate-2.c: Likewise.\n\t* c-c++-common/ubsan/overflow-sub-1.c: Likewise.\n\t* c-c++-common/ubsan/pr59503.c: Likewise.\n\t* c-c++-common/ubsan/pr60613-1.c: Likewise.\n\t* c-c++-common/ubsan/save-expr-1.c: Likewise.\n\t* c-c++-common/ubsan/shift-3.c: Likewise.\n\t* c-c++-common/ubsan/shift-6.c: Likewise.\n\t* c-c++-common/ubsan/undefined-1.c: Likewise.\n\t* c-c++-common/ubsan/vla-2.c: Likewise.\n\t* c-c++-common/ubsan/vla-3.c: Likewise.\n\t* c-c++-common/ubsan/vla-4.c: Likewise.\n\t* g++.dg/ubsan/cxx11-shift-1.C: Likewise.\n\t* g++.dg/ubsan/return-2.C: Likewise.\n\nFrom-SVN: r208787", "tree": {"sha": "e1b6a86d66fabf507ebe8ffb497c032d1cb32522", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e1b6a86d66fabf507ebe8ffb497c032d1cb32522"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/55af811bab8b557b20b99005aef08bee13ea0472", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55af811bab8b557b20b99005aef08bee13ea0472", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55af811bab8b557b20b99005aef08bee13ea0472", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55af811bab8b557b20b99005aef08bee13ea0472/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "15e3d4f172a3bfeda92ed255d682ba3d9f83099a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15e3d4f172a3bfeda92ed255d682ba3d9f83099a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15e3d4f172a3bfeda92ed255d682ba3d9f83099a"}], "stats": {"total": 158, "additions": 156, "deletions": 2}, "files": [{"sha": "0d3500a4ccf45f5388017d1a46085fc945474ab3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55af811bab8b557b20b99005aef08bee13ea0472/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55af811bab8b557b20b99005aef08bee13ea0472/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=55af811bab8b557b20b99005aef08bee13ea0472", "patch": "@@ -1,3 +1,25 @@\n+2014-03-24  Marek Polacek  <polacek@redhat.com>\n+\n+\t* c-c++-common/ubsan/div-by-zero-4.c: Don't include limits.h.  Define\n+\tINT_MIN.\n+\t* c-c++-common/ubsan/overflow-1.c: Check for unwanted output.\n+\t* c-c++-common/ubsan/overflow-add-1.c: Likewise.\n+\t* c-c++-common/ubsan/overflow-mul-1.c: Likewise.\n+\t* c-c++-common/ubsan/overflow-mul-3.c: Likewise.\n+\t* c-c++-common/ubsan/overflow-negate-2.c: Likewise.\n+\t* c-c++-common/ubsan/overflow-sub-1.c: Likewise.\n+\t* c-c++-common/ubsan/pr59503.c: Likewise.\n+\t* c-c++-common/ubsan/pr60613-1.c: Likewise.\n+\t* c-c++-common/ubsan/save-expr-1.c: Likewise.\n+\t* c-c++-common/ubsan/shift-3.c: Likewise.\n+\t* c-c++-common/ubsan/shift-6.c: Likewise.\n+\t* c-c++-common/ubsan/undefined-1.c: Likewise.\n+\t* c-c++-common/ubsan/vla-2.c: Likewise.\n+\t* c-c++-common/ubsan/vla-3.c: Likewise.\n+\t* c-c++-common/ubsan/vla-4.c: Likewise.\n+\t* g++.dg/ubsan/cxx11-shift-1.C: Likewise.\n+\t* g++.dg/ubsan/return-2.C: Likewise.\n+\n 2014-03-23  John David Anglin  <danglin@gcc.gnu.org>\n \n \t* gcc.dg/tree-prof/pr59003.c: Add -fno-common to dg-options on"}, {"sha": "02162e139e30518d71bcd9b282eca3afdeab2733", "filename": "gcc/testsuite/c-c++-common/ubsan/div-by-zero-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55af811bab8b557b20b99005aef08bee13ea0472/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fdiv-by-zero-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55af811bab8b557b20b99005aef08bee13ea0472/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fdiv-by-zero-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fdiv-by-zero-4.c?ref=55af811bab8b557b20b99005aef08bee13ea0472", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do run } */\n /* { dg-options \"-fsanitize=integer-divide-by-zero -Wno-overflow\" } */\n \n-#include <limits.h>\n+#define INT_MIN (-__INT_MAX__ - 1)\n \n int\n main (void)"}, {"sha": "68199551b497cda8dac476a44b1d13aa9a357e4f", "filename": "gcc/testsuite/c-c++-common/ubsan/overflow-1.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55af811bab8b557b20b99005aef08bee13ea0472/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Foverflow-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55af811bab8b557b20b99005aef08bee13ea0472/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Foverflow-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Foverflow-1.c?ref=55af811bab8b557b20b99005aef08bee13ea0472", "patch": "@@ -1,6 +1,8 @@\n /* { dg-do run } */\n /* { dg-options \"-fsanitize=signed-integer-overflow\" } */\n \n+#include <stdio.h>\n+\n #ifndef ASM1\n # define ASM1(a) /* Nothing */\n #endif\n@@ -51,6 +53,8 @@\n int\n main (void)\n {\n+  fputs (\"UBSAN TEST START\\n\", stderr);\n+\n   CHECK (FN1 (char, char, +), 23);\n   CHECK (FN1 (char, char, -), 5);\n   CHECK (FN1 (char, char, *), 126);\n@@ -258,5 +262,8 @@ main (void)\n   CHECK (FN5 (long long int), -77);\n   CHECK (FN5 (unsigned long long int), -77);\n \n+  fputs (\"UBSAN TEST END\\n\", stderr);\n   return 0;\n }\n+\n+/* { dg-output \"UBSAN TEST START(\\n|\\r\\n|\\r)UBSAN TEST END\" } */"}, {"sha": "fd6c6d325e8137e09bceb289c3151acc84fbfeab", "filename": "gcc/testsuite/c-c++-common/ubsan/overflow-add-1.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55af811bab8b557b20b99005aef08bee13ea0472/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Foverflow-add-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55af811bab8b557b20b99005aef08bee13ea0472/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Foverflow-add-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Foverflow-add-1.c?ref=55af811bab8b557b20b99005aef08bee13ea0472", "patch": "@@ -1,6 +1,8 @@\n /* { dg-do run } */\n /* { dg-options \"-fsanitize=signed-integer-overflow -Wno-unused-variable\" } */\n \n+#include <stdio.h>\n+\n #define SCHAR_MAX __SCHAR_MAX__\n #define SHRT_MAX __SHRT_MAX__\n #define INT_MAX __INT_MAX__\n@@ -16,6 +18,8 @@ check (int i, int j)\n int\n main (void)\n {\n+  fputs (\"UBSAN TEST START\\n\", stderr);\n+\n #if __INT_MAX__ == 2147483647\n   /* Here, nothing should fail.  */\n   volatile int j = INT_MAX;\n@@ -56,5 +60,8 @@ main (void)\n   check (d, -32768);\n #endif\n \n+  fputs (\"UBSAN TEST END\\n\", stderr);\n   return 0;\n }\n+\n+/* { dg-output \"UBSAN TEST START(\\n|\\r\\n|\\r)UBSAN TEST END\" } */"}, {"sha": "afb1a25967634e0cdd9cdde338e1a0fdeb8752bd", "filename": "gcc/testsuite/c-c++-common/ubsan/overflow-mul-1.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55af811bab8b557b20b99005aef08bee13ea0472/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Foverflow-mul-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55af811bab8b557b20b99005aef08bee13ea0472/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Foverflow-mul-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Foverflow-mul-1.c?ref=55af811bab8b557b20b99005aef08bee13ea0472", "patch": "@@ -1,6 +1,8 @@\n /* { dg-do run } */\n /* { dg-options \"-fsanitize=signed-integer-overflow -Wno-unused-variable\" } */\n \n+#include <stdio.h>\n+\n #define SCHAR_MAX __SCHAR_MAX__\n #define SHRT_MAX __SHRT_MAX__\n #define INT_MAX __INT_MAX__\n@@ -16,6 +18,8 @@ check (int i, int j)\n int\n main (void)\n {\n+  fputs (\"UBSAN TEST START\\n\", stderr);\n+\n   /* Test integer promotion.  */\n #if __SCHAR_MAX__ == 127\n   volatile signed char a = -2;\n@@ -42,5 +46,8 @@ main (void)\n   check (o, INT_MIN);\n #endif\n \n+  fputs (\"UBSAN TEST END\\n\", stderr);\n   return 0;\n }\n+\n+/* { dg-output \"UBSAN TEST START(\\n|\\r\\n|\\r)UBSAN TEST END\" } */"}, {"sha": "037609be0ac10764edc033fe7056e466e001238b", "filename": "gcc/testsuite/c-c++-common/ubsan/overflow-mul-3.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55af811bab8b557b20b99005aef08bee13ea0472/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Foverflow-mul-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55af811bab8b557b20b99005aef08bee13ea0472/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Foverflow-mul-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Foverflow-mul-3.c?ref=55af811bab8b557b20b99005aef08bee13ea0472", "patch": "@@ -1,6 +1,8 @@\n /* { dg-do run } */\n /* { dg-options \"-fsanitize=signed-integer-overflow\" } */\n \n+#include <stdio.h>\n+\n __attribute__((noinline, noclone)) long long\n mul (long long x, long long y)\n {\n@@ -29,10 +31,16 @@ long long tab[] = {\n int\n main ()\n {\n+  fputs (\"UBSAN TEST START\\n\", stderr);\n+\n   unsigned int i;\n   for (i = 0; i < sizeof (tab) / sizeof (long long); i += 3)\n     if (mul (tab[i], tab[i + 1]) != tab[i + 2]\n         || mul (tab[i + 1], tab[i]) != tab[i + 2])\n       __builtin_abort ();\n+\n+  fputs (\"UBSAN TEST END\\n\", stderr);\n   return 0;\n }\n+\n+/* { dg-output \"UBSAN TEST START(\\n|\\r\\n|\\r)UBSAN TEST END\" } */"}, {"sha": "6a4f288bbe0c509d109a10b5a776a36881bc1bc5", "filename": "gcc/testsuite/c-c++-common/ubsan/overflow-negate-2.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55af811bab8b557b20b99005aef08bee13ea0472/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Foverflow-negate-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55af811bab8b557b20b99005aef08bee13ea0472/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Foverflow-negate-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Foverflow-negate-2.c?ref=55af811bab8b557b20b99005aef08bee13ea0472", "patch": "@@ -1,6 +1,8 @@\n /* { dg-do run } */\n /* { dg-options \"-fsanitize=signed-integer-overflow -Wno-unused-variable\" } */\n \n+#include <stdio.h>\n+\n #define SCHAR_MIN (-__SCHAR_MAX__ - 1)\n #define SHRT_MIN (-__SHRT_MAX__ - 1)\n #define INT_MIN (-__INT_MAX__ - 1)\n@@ -12,6 +14,8 @@\n int\n main (void)\n {\n+  fputs (\"UBSAN TEST START\\n\", stderr);\n+\n   volatile signed char c = -SCHAR_MIN;\n   CHECK (c, -128);\n \n@@ -34,5 +38,8 @@ main (void)\n   lli = -(unsigned long long) lli;\n   CHECK (lli, -0x8000000000000000L);\n \n+  fputs (\"UBSAN TEST END\\n\", stderr);\n   return 0;\n }\n+\n+/* { dg-output \"UBSAN TEST START(\\n|\\r\\n|\\r)UBSAN TEST END\" } */"}, {"sha": "15f04455e6eda8caa71d72064f5413b808622809", "filename": "gcc/testsuite/c-c++-common/ubsan/overflow-sub-1.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55af811bab8b557b20b99005aef08bee13ea0472/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Foverflow-sub-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55af811bab8b557b20b99005aef08bee13ea0472/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Foverflow-sub-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Foverflow-sub-1.c?ref=55af811bab8b557b20b99005aef08bee13ea0472", "patch": "@@ -1,6 +1,8 @@\n /* { dg-do run } */\n /* { dg-options \"-fsanitize=signed-integer-overflow -Wno-unused-variable\" } */\n \n+#include <stdio.h>\n+\n #define SCHAR_MAX __SCHAR_MAX__\n #define SCHAR_MIN (-__SCHAR_MAX__ - 1)\n #define SHRT_MAX __SHRT_MAX__\n@@ -18,6 +20,8 @@ check (int i, int j)\n int\n main (void)\n {\n+  fputs (\"UBSAN TEST START\\n\", stderr);\n+\n #if __INT_MAX__ == 2147483647\n   /* Here, nothing should fail.  */\n   volatile int i = -1;\n@@ -58,5 +62,8 @@ main (void)\n   check (d, 32767);\n #endif\n \n+  fputs (\"UBSAN TEST END\\n\", stderr);\n   return 0;\n }\n+\n+/* { dg-output \"UBSAN TEST START(\\n|\\r\\n|\\r)UBSAN TEST END\" } */"}, {"sha": "1637f01b5a1fa6f500a6efbcd0838cc8fe25f4bd", "filename": "gcc/testsuite/c-c++-common/ubsan/pr59503.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55af811bab8b557b20b99005aef08bee13ea0472/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fpr59503.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55af811bab8b557b20b99005aef08bee13ea0472/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fpr59503.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fpr59503.c?ref=55af811bab8b557b20b99005aef08bee13ea0472", "patch": "@@ -1,13 +1,21 @@\n /* { dg-do run } */\n /* { dg-options \"-fsanitize=signed-integer-overflow\" } */\n \n+#include <stdio.h>\n+\n int\n main (void)\n {\n+  fputs (\"UBSAN TEST START\\n\", stderr);\n+\n   long long int a = 14;\n   long int b = 9;\n   asm volatile (\"\" : \"+r\" (a), \"+r\" (b));\n   if ((a - b) != 5)\n     __builtin_abort ();\n+\n+  fputs (\"UBSAN TEST END\\n\", stderr);\n   return 0;\n }\n+\n+/* { dg-output \"UBSAN TEST START(\\n|\\r\\n|\\r)UBSAN TEST END\" } */"}, {"sha": "6794532a486881e00b4f1d879a2b3828e1017c62", "filename": "gcc/testsuite/c-c++-common/ubsan/pr60613-1.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55af811bab8b557b20b99005aef08bee13ea0472/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fpr60613-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55af811bab8b557b20b99005aef08bee13ea0472/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fpr60613-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fpr60613-1.c?ref=55af811bab8b557b20b99005aef08bee13ea0472", "patch": "@@ -2,6 +2,8 @@\n /* { dg-do run } */\n /* { dg-options \"-fsanitize=undefined\" } */\n \n+#include <stdio.h>\n+\n long long y;\n \n __attribute__((noinline, noclone)) long long\n@@ -24,10 +26,16 @@ bar (long long x)\n int\n main ()\n {\n+  fputs (\"UBSAN TEST START\\n\", stderr);\n+\n   y = 1;\n   if (foo (8 - 2040) != 8 - 1)\n     __builtin_abort ();\n   if (bar (1) != 8 - 1)\n     __builtin_abort ();\n+\n+  fputs (\"UBSAN TEST END\\n\", stderr);\n   return 0;\n }\n+\n+/* { dg-output \"UBSAN TEST START(\\n|\\r\\n|\\r)UBSAN TEST END\" } */"}, {"sha": "19b1eb08bd662c01fc0cc61c5f615c9befd160d6", "filename": "gcc/testsuite/c-c++-common/ubsan/save-expr-1.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55af811bab8b557b20b99005aef08bee13ea0472/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fsave-expr-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55af811bab8b557b20b99005aef08bee13ea0472/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fsave-expr-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fsave-expr-1.c?ref=55af811bab8b557b20b99005aef08bee13ea0472", "patch": "@@ -1,11 +1,19 @@\n /* { dg-do compile } */\n /* { dg-options \"-fsanitize=shift -Wall -Werror -O\" } */\n \n+#include <stdio.h>\n+\n static int x;\n int\n main (void)\n {\n+  fputs (\"UBSAN TEST START\\n\", stderr);\n+\n   int o = 1;\n   int y = x << o;\n+\n+  fputs (\"UBSAN TEST END\\n\", stderr);\n   return y;\n }\n+\n+/* { dg-output \"UBSAN TEST START(\\n|\\r\\n|\\r)UBSAN TEST END\" } */"}, {"sha": "65ee5d8821e06adeded76a99492040c712d21fe1", "filename": "gcc/testsuite/c-c++-common/ubsan/shift-3.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55af811bab8b557b20b99005aef08bee13ea0472/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fshift-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55af811bab8b557b20b99005aef08bee13ea0472/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fshift-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fshift-3.c?ref=55af811bab8b557b20b99005aef08bee13ea0472", "patch": "@@ -1,11 +1,19 @@\n /* { dg-do run } */\n /* { dg-options \"-fsanitize=shift -w\" } */\n \n+#include <stdio.h>\n+\n int\n main (void)\n {\n+  fputs (\"UBSAN TEST START\\n\", stderr);\n+\n   unsigned int a = 1;\n   a <<= 31;\n   a <<= 1;\n+\n+  fputs (\"UBSAN TEST END\\n\", stderr);\n   return 0;\n }\n+\n+/* { dg-output \"UBSAN TEST START(\\n|\\r\\n|\\r)UBSAN TEST END\" } */"}, {"sha": "d88a42910a6046916bb792e683e81b425a414598", "filename": "gcc/testsuite/c-c++-common/ubsan/shift-6.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55af811bab8b557b20b99005aef08bee13ea0472/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fshift-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55af811bab8b557b20b99005aef08bee13ea0472/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fshift-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fshift-6.c?ref=55af811bab8b557b20b99005aef08bee13ea0472", "patch": "@@ -2,10 +2,14 @@\n /* { dg-do run { target int32plus } } */\n /* { dg-options \"-fsanitize=shift -w\" } */\n \n+#include <stdio.h>\n+\n int x = 7;\n int\n main (void)\n {\n+  fputs (\"UBSAN TEST START\\n\", stderr);\n+\n   /* All of the following should pass.  */\n   int A[128 >> 5] = {};\n   int B[128 << 5] = {};\n@@ -26,5 +30,9 @@ main (void)\n     case 128 >> (4 + 1):\n       return 1;\n     }\n+\n+  fputs (\"UBSAN TEST END\\n\", stderr);\n   return 0;\n }\n+\n+/* { dg-output \"UBSAN TEST START(\\n|\\r\\n|\\r)UBSAN TEST END\" } */"}, {"sha": "d1b9ce78771f5fdf68aa46edf1c7290169739466", "filename": "gcc/testsuite/c-c++-common/ubsan/undefined-1.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55af811bab8b557b20b99005aef08bee13ea0472/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fundefined-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55af811bab8b557b20b99005aef08bee13ea0472/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fundefined-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fundefined-1.c?ref=55af811bab8b557b20b99005aef08bee13ea0472", "patch": "@@ -1,6 +1,8 @@\n /* { dg-do run } */\n /* { dg-options \"-fsanitize=undefined\" } */\n \n+#include <stdio.h>\n+\n int\n foo (int x, int y)\n {\n@@ -19,7 +21,13 @@ bar (int x, int y)\n int\n main (void)\n {\n+  fputs (\"UBSAN TEST START\\n\", stderr);\n+\n   foo (3, 2);\n   bar (12, 42);\n+\n+  fputs (\"UBSAN TEST END\\n\", stderr);\n   return 0;\n }\n+\n+/* { dg-output \"UBSAN TEST START(\\n|\\r\\n|\\r)UBSAN TEST END\" } */"}, {"sha": "a11e4e7227ff2b3b4e2a28136a0cf5cecb01b80e", "filename": "gcc/testsuite/c-c++-common/ubsan/vla-2.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55af811bab8b557b20b99005aef08bee13ea0472/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fvla-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55af811bab8b557b20b99005aef08bee13ea0472/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fvla-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fvla-2.c?ref=55af811bab8b557b20b99005aef08bee13ea0472", "patch": "@@ -1,15 +1,22 @@\n /* { dg-do run } */\n /* { dg-options \"-fsanitize=vla-bound -Wall -Wno-unused-variable\" } */\n \n+#include <stdio.h>\n+\n int\n main (void)\n {\n+  fputs (\"UBSAN TEST START\\n\", stderr);\n+\n   const int t = 0;\n   struct s {\n     int x;\n     /* Don't instrument this one.  */\n     int g[t];\n   };\n \n+  fputs (\"UBSAN TEST END\\n\", stderr);\n   return 0;\n }\n+\n+/* { dg-output \"UBSAN TEST START(\\n|\\r\\n|\\r)UBSAN TEST END\" } */"}, {"sha": "7772857fdea95165485c0474480484fd24d5faf9", "filename": "gcc/testsuite/c-c++-common/ubsan/vla-3.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55af811bab8b557b20b99005aef08bee13ea0472/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fvla-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55af811bab8b557b20b99005aef08bee13ea0472/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fvla-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fvla-3.c?ref=55af811bab8b557b20b99005aef08bee13ea0472", "patch": "@@ -1,6 +1,8 @@\n /* { dg-do run } */\n /* { dg-options \"-fsanitize=vla-bound\" } */\n \n+#include <stdio.h>\n+\n /* Don't instrument the arrays here.  */\n int\n foo (int n, int a[])\n@@ -11,6 +13,13 @@ foo (int n, int a[])\n int\n main (void)\n {\n+  fputs (\"UBSAN TEST START\\n\", stderr);\n+\n   int a[6] = { };\n-  return foo (3, a);\n+  int ret = foo (3, a);\n+\n+  fputs (\"UBSAN TEST END\\n\", stderr);\n+  return ret;\n }\n+\n+/* { dg-output \"UBSAN TEST START(\\n|\\r\\n|\\r)UBSAN TEST END\" } */"}, {"sha": "8a7bbac9a7166213cb3f0cb146beba1bb1b93146", "filename": "gcc/testsuite/c-c++-common/ubsan/vla-4.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55af811bab8b557b20b99005aef08bee13ea0472/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fvla-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55af811bab8b557b20b99005aef08bee13ea0472/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fvla-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fvla-4.c?ref=55af811bab8b557b20b99005aef08bee13ea0472", "patch": "@@ -1,13 +1,21 @@\n /* { dg-do run } */\n /* { dg-options \"-fsanitize=vla-bound\" } */\n \n+#include <stdio.h>\n+\n int\n main (void)\n {\n+  fputs (\"UBSAN TEST START\\n\", stderr);\n+\n   int x = 1;\n   /* Check that the size of an array is evaluated only once.  */\n   int a[++x];\n   if (x != 2)\n     __builtin_abort ();\n+\n+  fputs (\"UBSAN TEST END\\n\", stderr);\n   return 0;\n }\n+\n+/* { dg-output \"UBSAN TEST START(\\n|\\r\\n|\\r)UBSAN TEST END\" } */"}, {"sha": "f2b2cbd1c2fb8925c611ae2a5421d6d299493f2a", "filename": "gcc/testsuite/g++.dg/ubsan/cxx11-shift-1.C", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55af811bab8b557b20b99005aef08bee13ea0472/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fubsan%2Fcxx11-shift-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55af811bab8b557b20b99005aef08bee13ea0472/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fubsan%2Fcxx11-shift-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fubsan%2Fcxx11-shift-1.C?ref=55af811bab8b557b20b99005aef08bee13ea0472", "patch": "@@ -1,9 +1,18 @@\n /* { dg-do run { target c++11 } } */\n /* { dg-options \"-fsanitize=shift -w\" } */\n \n+#include <stdio.h>\n+\n int\n main (void)\n {\n+  fputs (\"UBSAN TEST START\\n\", stderr);\n+\n   int a = 1;\n   a <<= 31;\n+\n+  fputs (\"UBSAN TEST END\\n\", stderr);\n+  return 0;\n }\n+\n+/* { dg-output \"UBSAN TEST START(\\n|\\r\\n|\\r)UBSAN TEST END\" } */"}, {"sha": "546f1781057955e71ac7b4273325f3ddc4e3b0ce", "filename": "gcc/testsuite/g++.dg/ubsan/return-2.C", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55af811bab8b557b20b99005aef08bee13ea0472/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fubsan%2Freturn-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55af811bab8b557b20b99005aef08bee13ea0472/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fubsan%2Freturn-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fubsan%2Freturn-2.C?ref=55af811bab8b557b20b99005aef08bee13ea0472", "patch": "@@ -1,6 +1,8 @@\n // { dg-do run }\n // { dg-options \"-fsanitize=return\" }\n \n+#include <stdio.h>\n+\n struct S { S (); ~S (); };\n \n S::S () {}\n@@ -20,6 +22,12 @@ foo (int x)\n int\n main ()\n {\n+  fputs (\"UBSAN TEST START\\n\", stderr);\n+\n   foo (1);\n   foo (14);\n+\n+  fputs (\"UBSAN TEST END\\n\", stderr);\n }\n+\n+/* { dg-output \"UBSAN TEST START(\\n|\\r\\n|\\r)UBSAN TEST END\" } */"}]}