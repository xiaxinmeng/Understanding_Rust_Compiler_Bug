{"sha": "7610abd8cbb3c9f75a88b90196e9bb207aff09db", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzYxMGFiZDhjYmIzYzlmNzVhODhiOTAxOTZlOWJiMjA3YWZmMDlkYg==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2009-10-14T01:14:53Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2009-10-14T01:14:53Z"}, "message": "builtins.c (fold_builtin_1): Support complex \"arc\" functions.\n\n\t* builtins.c (fold_builtin_1): Support complex \"arc\" functions.\n\t* real.h (HAVE_mpc_arc): Define.\n\ntestsuite:\n\t* gcc.dg/torture/builtin-math-6.c: Test complex \"arc\" functions.\n\t* lib/target-supports.exp (check_effective_target_mpc_arc): New.\n\nFrom-SVN: r152746", "tree": {"sha": "ef482df1dbca9c07d51e39903d45c94ad89f9fc5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ef482df1dbca9c07d51e39903d45c94ad89f9fc5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7610abd8cbb3c9f75a88b90196e9bb207aff09db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7610abd8cbb3c9f75a88b90196e9bb207aff09db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7610abd8cbb3c9f75a88b90196e9bb207aff09db", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7610abd8cbb3c9f75a88b90196e9bb207aff09db/comments", "author": null, "committer": null, "parents": [{"sha": "1cc245760cde1a2488b2e4e4d892cdeeb07a4d7f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1cc245760cde1a2488b2e4e4d892cdeeb07a4d7f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1cc245760cde1a2488b2e4e4d892cdeeb07a4d7f"}], "stats": {"total": 125, "additions": 119, "deletions": 6}, "files": [{"sha": "6b45ac0c83798d619903e16325c0b919c33234c9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7610abd8cbb3c9f75a88b90196e9bb207aff09db/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7610abd8cbb3c9f75a88b90196e9bb207aff09db/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7610abd8cbb3c9f75a88b90196e9bb207aff09db", "patch": "@@ -1,3 +1,8 @@\n+2009-10-13  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* builtins.c (fold_builtin_1): Support complex \"arc\" functions.\n+\t* real.h (HAVE_mpc_arc): Define.\n+\n 2009-10-14  Kaz Kojima  <kkojima@gcc.gnu.org>\n \n \t* config/sh/sh.c (TARGET_BUILTIN_DECL): Define."}, {"sha": "d991408fa2850e916fc85f0a82785dd65aa705ce", "filename": "gcc/builtins.c", "status": "modified", "additions": 39, "deletions": 1, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7610abd8cbb3c9f75a88b90196e9bb207aff09db/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7610abd8cbb3c9f75a88b90196e9bb207aff09db/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=7610abd8cbb3c9f75a88b90196e9bb207aff09db", "patch": "@@ -10063,7 +10063,45 @@ fold_builtin_1 (location_t loc, tree fndecl, tree arg0, bool ignore)\n \t  && TREE_CODE (TREE_TYPE (TREE_TYPE (arg0))) == REAL_TYPE) \n \treturn do_mpc_arg1 (arg0, type, mpc_sqrt);\n     break;\n-#endif\n+    \n+#ifdef HAVE_mpc_arc\n+    CASE_FLT_FN (BUILT_IN_CASIN):\n+      if (validate_arg (arg0, COMPLEX_TYPE)\n+\t  && TREE_CODE (TREE_TYPE (TREE_TYPE (arg0))) == REAL_TYPE) \n+\treturn do_mpc_arg1 (arg0, type, mpc_asin);\n+    break;\n+    \n+    CASE_FLT_FN (BUILT_IN_CACOS):\n+      if (validate_arg (arg0, COMPLEX_TYPE)\n+\t  && TREE_CODE (TREE_TYPE (TREE_TYPE (arg0))) == REAL_TYPE) \n+\treturn do_mpc_arg1 (arg0, type, mpc_acos);\n+    break;\n+    \n+    CASE_FLT_FN (BUILT_IN_CATAN):\n+      if (validate_arg (arg0, COMPLEX_TYPE)\n+\t  && TREE_CODE (TREE_TYPE (TREE_TYPE (arg0))) == REAL_TYPE) \n+\treturn do_mpc_arg1 (arg0, type, mpc_atan);\n+    break;\n+    \n+    CASE_FLT_FN (BUILT_IN_CASINH):\n+      if (validate_arg (arg0, COMPLEX_TYPE)\n+\t  && TREE_CODE (TREE_TYPE (TREE_TYPE (arg0))) == REAL_TYPE) \n+\treturn do_mpc_arg1 (arg0, type, mpc_asinh);\n+    break;\n+    \n+    CASE_FLT_FN (BUILT_IN_CACOSH):\n+      if (validate_arg (arg0, COMPLEX_TYPE)\n+\t  && TREE_CODE (TREE_TYPE (TREE_TYPE (arg0))) == REAL_TYPE) \n+\treturn do_mpc_arg1 (arg0, type, mpc_acosh);\n+    break;\n+    \n+    CASE_FLT_FN (BUILT_IN_CATANH):\n+      if (validate_arg (arg0, COMPLEX_TYPE)\n+\t  && TREE_CODE (TREE_TYPE (TREE_TYPE (arg0))) == REAL_TYPE) \n+\treturn do_mpc_arg1 (arg0, type, mpc_atanh);\n+    break;\n+#endif /* HAVE_mpc_arc */\n+#endif /* HAVE_mpc */\n     \n     CASE_FLT_FN (BUILT_IN_CABS):\n       return fold_builtin_cabs (loc, arg0, type, fndecl);"}, {"sha": "e1fd3b07f60138c85fcd715d5f04cae6b1f99517", "filename": "gcc/real.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7610abd8cbb3c9f75a88b90196e9bb207aff09db/gcc%2Freal.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7610abd8cbb3c9f75a88b90196e9bb207aff09db/gcc%2Freal.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freal.h?ref=7610abd8cbb3c9f75a88b90196e9bb207aff09db", "patch": "@@ -32,6 +32,9 @@ extern tree do_mpc_arg2 (tree, tree, tree, int, int (*)(mpc_ptr, mpc_srcptr, mpc\n # if MPC_VERSION >= MPC_VERSION_NUM(0,6,1)\n #  define HAVE_mpc_pow\n # endif\n+# if MPC_VERSION >= MPC_VERSION_NUM(0,7,1)\n+#  define HAVE_mpc_arc\n+# endif\n #endif\n #endif\n #include \"machmode.h\""}, {"sha": "2144290194d14ce51539c300d8f6f85ee037db8f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7610abd8cbb3c9f75a88b90196e9bb207aff09db/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7610abd8cbb3c9f75a88b90196e9bb207aff09db/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7610abd8cbb3c9f75a88b90196e9bb207aff09db", "patch": "@@ -1,3 +1,8 @@\n+2009-10-13  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* gcc.dg/torture/builtin-math-6.c: Test complex \"arc\" functions.\n+\t* lib/target-supports.exp (check_effective_target_mpc_arc): New.\n+\n 2009-10-14  Hans-Peter Nilsson  <hp@axis.com>\n \n \tPR target/38948"}, {"sha": "097a8c25d37d64e9c7604235740bdf3ef5dee0b8", "filename": "gcc/testsuite/gcc.dg/torture/builtin-math-6.c", "status": "modified", "additions": 44, "deletions": 5, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7610abd8cbb3c9f75a88b90196e9bb207aff09db/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fbuiltin-math-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7610abd8cbb3c9f75a88b90196e9bb207aff09db/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fbuiltin-math-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fbuiltin-math-6.c?ref=7610abd8cbb3c9f75a88b90196e9bb207aff09db", "patch": "@@ -6,7 +6,7 @@\n    Origin: Kaveh R. Ghazi,  January 28, 2009.  */\n \n /* { dg-do link } */\n-/* { dg-require-effective-target mpc_pow } */\n+/* { dg-require-effective-target mpc_arc } */\n \n /* All references to link_error should go away at compile-time.  The\n    first number is the line number and the second is the value number\n@@ -180,9 +180,48 @@ extern void link_error(int, int);\n \n int main (void)\n {\n+  TESTIT_COMPLEX (1, cacos, 1, CONJ(0));\n+  TESTIT_COMPLEX_R (1, cacos, -1, CONJ(3.141593F));\n+  TESTIT_COMPLEX (1, cacos, CONJ(1), 0);\n+  TESTIT_COMPLEX_R (1, cacos, CONJ(-1), 3.141593F);\n+  TESTIT_COMPLEX_R_ALLNEG (cacos, 3.45678F + 2.34567FI,\n+\t\t\t   0.60971F - 2.11780FI, 2.531875F - 2.117800FI,\n+\t\t\t   0.60971F + 2.11780FI, 2.531875F + 2.117800FI);\n+\n+  TESTIT_COMPLEX_ALLNEG (casin, 0,\n+\t\t\t 0, -CONJ(0), CONJ(0), CONJ(-0.F));\n+  TESTIT_COMPLEX_R_ALLNEG (casin, 3.45678F + 2.34567FI,\n+\t\t\t   0.96107F + 2.11780FI, -0.96107F + 2.11780FI,\n+\t\t\t   0.96107F - 2.11780FI, -0.96107F - 2.11780FI);\n+\n+  TESTIT_COMPLEX_ALLNEG (catan, 0,\n+\t\t\t 0, -CONJ(0), CONJ(0), CONJ(-0.F));\n+  TESTIT_COMPLEX_R_ALLNEG (catan, 3.45678F + 2.34567FI,\n+\t\t\t   1.37188F + 0.12997FI, -1.37188F + 0.12997FI,\n+\t\t\t   1.37188F - 0.12997FI, -1.37188F - 0.12997FI);\n+\n+  TESTIT_COMPLEX (1, cacosh, 1, 0);\n+  TESTIT_COMPLEX_R (1, cacosh, -1, 3.141593FI);\n+  TESTIT_COMPLEX (1, cacosh, CONJ(1), CONJ(0));\n+  TESTIT_COMPLEX_R (1, cacosh, CONJ(-1), CONJ(3.141593FI));\n+  TESTIT_COMPLEX_R_ALLNEG (cacosh, 3.45678F + 2.34567FI,\n+\t\t\t   2.11780F + 0.60971FI, 2.11780F + 2.531875FI,\n+\t\t\t   2.11780F - 0.60971FI, 2.11780F - 2.531875FI);\n+\n+  TESTIT_COMPLEX_ALLNEG (casinh, 0,\n+\t\t\t 0, -CONJ(0), CONJ(0), CONJ(-0.F));\n+  TESTIT_COMPLEX_R_ALLNEG (casinh, 3.45678F + 2.34567FI,\n+\t\t\t   2.12836F + 0.58310FI, -2.12836F + 0.58310FI,\n+\t\t\t   2.12836F - 0.58310FI, -2.12836F - 0.58310FI);\n+\n+  TESTIT_COMPLEX_ALLNEG (catanh, 0,\n+\t\t\t 0, -CONJ(0), CONJ(0), CONJ(-0.F));\n+  TESTIT_COMPLEX_R_ALLNEG (catanh, 3.45678F + 2.34567FI,\n+\t\t\t   0.19693F + 1.43190FI, -0.19693F + 1.43190FI,\n+\t\t\t   0.19693F - 1.43190FI, -0.19693F - 1.43190FI);\n+\n   TESTIT_COMPLEX_ALLNEG (csin, 0,\n-\t\t\t 0, -0.F,\n-\t\t\t CONJ(0), CONJ(-0.F));\n+\t\t\t 0, -0.F, CONJ(0), CONJ(-0.F));\n   TESTIT_COMPLEX_R_ALLNEG (csin, 3.45678F + 2.34567FI,\n \t\t\t   -1.633059F - 4.917448FI, 1.633059F - 4.917448FI,\n \t\t\t   -1.633059F + 4.917448FI, 1.633059F + 4.917448FI);\n@@ -219,8 +258,8 @@ int main (void)\n \n   TESTIT_COMPLEX (1, clog, 1, 0);\n   TESTIT_COMPLEX_R (1, clog, -1, 3.141593FI);\n-  TESTIT_COMPLEX (1, clog, CONJ(1), CONJ(0)); /* Fails with mpc-0.6.  */\n-  TESTIT_COMPLEX_R (1, clog, CONJ(-1), CONJ(3.141593FI)); /* Fails with mpc-0.6.  */\n+  TESTIT_COMPLEX (1, clog, CONJ(1), CONJ(0));\n+  TESTIT_COMPLEX_R (1, clog, CONJ(-1), CONJ(3.141593FI));\n   TESTIT_COMPLEX_R_ALLNEG (clog, 3.45678F + 2.34567FI,\n \t\t\t   1.429713F + 0.596199FI, 1.429713F + 2.545394FI,\n \t\t\t   1.429713F - 0.596199FI, 1.429713F - 2.545394FI);"}, {"sha": "c287cec85bbd9bf9285edd66ac16ee4a9a5a1ddf", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7610abd8cbb3c9f75a88b90196e9bb207aff09db/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7610abd8cbb3c9f75a88b90196e9bb207aff09db/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=7610abd8cbb3c9f75a88b90196e9bb207aff09db", "patch": "@@ -3127,6 +3127,29 @@ proc check_effective_target_mpc_pow { } {\n     }]\n }\n \n+# Return 1 if the MPC library with \"arc\" functions is integrated with GCC, 0 otherwise.\n+\n+proc check_effective_target_mpc_arc { } {\n+    return [check_no_compiler_messages mpc_arc executable {\n+\textern void link_error(void);\n+\tint main ()\n+\t{\n+\t  if (__builtin_cacos(1) != 0)\n+\t    link_error();\n+\t  if (__builtin_casin(0) != 0)\n+\t    link_error();\n+\t  if (__builtin_catan(0) != 0)\n+\t    link_error();\n+\t  if (__builtin_cacosh(1) != 0)\n+\t    link_error();\n+\t  if (__builtin_casinh(0) != 0)\n+\t    link_error();\n+\t  if (__builtin_catanh(0) != 0)\n+\t    link_error();\n+\t}\n+    }]\n+}\n+\n # Return 1 if the language for the compiler under test is C.\n \n proc check_effective_target_c { } {"}]}