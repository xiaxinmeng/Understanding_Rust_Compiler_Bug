{"sha": "9f31cf0d425578d08ae8d08f40b70953c62ea622", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWYzMWNmMGQ0MjU1NzhkMDhhZThkMDhmNDBiNzA5NTNjNjJlYTYyMg==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1997-08-12T04:12:04Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1997-08-12T04:12:04Z"}, "message": "Remove gratuitous changes from the alias analysis patches.\n\nFrom-SVN: r14771", "tree": {"sha": "2187f074c64346e719d6b0f59764c2432235a429", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2187f074c64346e719d6b0f59764c2432235a429"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9f31cf0d425578d08ae8d08f40b70953c62ea622", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f31cf0d425578d08ae8d08f40b70953c62ea622", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f31cf0d425578d08ae8d08f40b70953c62ea622", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f31cf0d425578d08ae8d08f40b70953c62ea622/comments", "author": null, "committer": null, "parents": [{"sha": "8c660648cab7bed53c82b8283dcf170db7e97983", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c660648cab7bed53c82b8283dcf170db7e97983", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c660648cab7bed53c82b8283dcf170db7e97983"}], "stats": {"total": 13, "additions": 5, "deletions": 8}, "files": [{"sha": "ae777dcb94540cdda2f1a2ce7c63aa03b3b9e9b5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f31cf0d425578d08ae8d08f40b70953c62ea622/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f31cf0d425578d08ae8d08f40b70953c62ea622/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9f31cf0d425578d08ae8d08f40b70953c62ea622", "patch": "@@ -94,10 +94,7 @@ Mon Aug 11 10:04:49 1997  Jeffrey A Law  (law@cygnus.com)\n \t(alias.o): Add dependencies.\n \t* alias.c: New file.\n \t* sched.c: Remove alias analysis code.  It lives in alias.c now.\n-\t(reg_last_uses_size): Declare.\n \t(sched_analyze_2): Add new arguments to true_dependence.\n-\t(sched_analyze_insn): Use reg_last_uses_size instead of max_reg.\n-\t(schedule_block): Initialize reg_last_uses_size.\n \t(schedule_insns): Always call init_alias_analysis.\n \t* calls.c (expand_call): Note calls to malloc, calloc, and realloc;\n \tmark return value from such functions as a pointer and keep track of"}, {"sha": "87f7293240706820445dd16e16d87f0590784424", "filename": "gcc/sched.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f31cf0d425578d08ae8d08f40b70953c62ea622/gcc%2Fsched.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f31cf0d425578d08ae8d08f40b70953c62ea622/gcc%2Fsched.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsched.c?ref=9f31cf0d425578d08ae8d08f40b70953c62ea622", "patch": "@@ -146,7 +146,6 @@ static int *sched_reg_live_length;\n    such insn.  Needed for new registers which may be introduced\n    by splitting insns.  */\n static rtx *reg_last_uses;\n-static int reg_last_uses_size;\n static rtx *reg_last_sets;\n static regset reg_pending_sets;\n static int reg_pending_sets_all;\n@@ -1486,7 +1485,7 @@ sched_analyze_insn (x, insn, loop_notes)\n {\n   register RTX_CODE code = GET_CODE (x);\n   rtx link;\n-  int maxreg = reg_last_uses_size;\n+  int maxreg = max_reg_num ();\n   int i;\n \n   if (code == SET || code == CLOBBER)\n@@ -1523,7 +1522,7 @@ sched_analyze_insn (x, insn, loop_notes)\n \n   if (loop_notes)\n     {\n-      int max_reg = reg_last_uses_size;\n+      int max_reg = max_reg_num ();\n       rtx link;\n \n       for (i = 0; i < max_reg; i++)\n@@ -1661,7 +1660,8 @@ sched_analyze (head, tail)\n \t  if (NEXT_INSN (insn) && GET_CODE (NEXT_INSN (insn)) == NOTE\n \t      && NOTE_LINE_NUMBER (NEXT_INSN (insn)) == NOTE_INSN_SETJMP)\n \t    {\n-\t      for (i = 0; i < reg_last_uses_size; i++)\n+\t      int max_reg = max_reg_num ();\n+\t      for (i = 0; i < max_reg; i++)\n \t\t{\n \t\t  for (u = reg_last_uses[i]; u; u = XEXP (u, 1))\n \t\t    add_dependence (insn, XEXP (u, 0), REG_DEP_ANTI);\n@@ -2636,7 +2636,7 @@ schedule_block (b, file)\n     fprintf (file, \";;\\t -- basic block number %d from %d to %d --\\n\",\n \t     b, INSN_UID (basic_block_head[b]), INSN_UID (basic_block_end[b]));\n \n-  reg_last_uses_size = i = max_reg_num ();\n+  i = max_reg_num ();\n   reg_last_uses = (rtx *) alloca (i * sizeof (rtx));\n   bzero ((char *) reg_last_uses, i * sizeof (rtx));\n   reg_last_sets = (rtx *) alloca (i * sizeof (rtx));"}]}