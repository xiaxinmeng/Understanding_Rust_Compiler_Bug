{"sha": "cca444fb00473658e18f52209dc64709af2005b2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2NhNDQ0ZmIwMDQ3MzY1OGUxOGY1MjIwOWRjNjQ3MDlhZjIwMDViMg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2015-07-27T16:57:21Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2015-07-27T16:57:21Z"}, "message": "constexpr.c (cxx_eval_call_expression): Don't add this call to the hash table if !depth_ok.\n\n\t* constexpr.c (cxx_eval_call_expression): Don't add this call to\n\tthe hash table if !depth_ok.\n\nFrom-SVN: r226256", "tree": {"sha": "16e6fbeed82adced3c4b22002b99ac3805443142", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/16e6fbeed82adced3c4b22002b99ac3805443142"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cca444fb00473658e18f52209dc64709af2005b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cca444fb00473658e18f52209dc64709af2005b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cca444fb00473658e18f52209dc64709af2005b2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cca444fb00473658e18f52209dc64709af2005b2/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ad497dbb3e52e21c2d5bfcc691a6b26ffba7ccc9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad497dbb3e52e21c2d5bfcc691a6b26ffba7ccc9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad497dbb3e52e21c2d5bfcc691a6b26ffba7ccc9"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "78a6af2e0dc011ff6ad50bd3ac54fccd4fa1e2a0", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cca444fb00473658e18f52209dc64709af2005b2/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cca444fb00473658e18f52209dc64709af2005b2/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=cca444fb00473658e18f52209dc64709af2005b2", "patch": "@@ -1,3 +1,8 @@\n+2015-07-27  Jason Merrill  <jason@redhat.com>\n+\n+\t* constexpr.c (cxx_eval_call_expression): Don't add this call to\n+\tthe hash table if !depth_ok.\n+\n 2015-07-27  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/66555"}, {"sha": "2799cb7532857ded9ab245d021cd1a7776e670e7", "filename": "gcc/cp/constexpr.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cca444fb00473658e18f52209dc64709af2005b2/gcc%2Fcp%2Fconstexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cca444fb00473658e18f52209dc64709af2005b2/gcc%2Fcp%2Fconstexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fconstexpr.c?ref=cca444fb00473658e18f52209dc64709af2005b2", "patch": "@@ -1289,7 +1289,7 @@ cxx_eval_call_expression (const constexpr_ctx *ctx, tree t,\n   tree result = NULL_TREE;\n \n   constexpr_call *entry = NULL;\n-  if (!non_constant_args)\n+  if (depth_ok && !non_constant_args)\n     {\n       new_call.hash = iterative_hash_template_arg\n \t(new_call.bindings, constexpr_fundef_hasher::hash (new_call.fundef));"}]}