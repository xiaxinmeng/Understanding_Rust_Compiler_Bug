{"sha": "a0f37b26c5b459cc601ad226a6e4a13b45f5e454", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTBmMzdiMjZjNWI0NTljYzYwMWFkMjI2YTZlNGExM2I0NWY1ZTQ1NA==", "commit": {"author": {"name": "Andreas Schwab", "email": "schwab@suse.de", "date": "2014-06-18T10:37:14Z"}, "committer": {"name": "Andreas Schwab", "email": "schwab@gcc.gnu.org", "date": "2014-06-18T10:37:14Z"}, "message": "Use strict_low_part for loading a constant only if it is cheaper\n\n\tPR rtl-optimization/54555\n\t* postreload.c (move2add_use_add2_insn): Substitute\n\tSTRICT_LOW_PART only if it is cheaper.\n\ntestsuite/:\n\tPR rtl-optimization/54555\n\t* gcc.target/m68k/pr54555.c: New test.\n\nFrom-SVN: r211777", "tree": {"sha": "7d9cbd498f3d157c295b5573cf648b71a8134c51", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7d9cbd498f3d157c295b5573cf648b71a8134c51"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a0f37b26c5b459cc601ad226a6e4a13b45f5e454", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0f37b26c5b459cc601ad226a6e4a13b45f5e454", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0f37b26c5b459cc601ad226a6e4a13b45f5e454", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0f37b26c5b459cc601ad226a6e4a13b45f5e454/comments", "author": {"login": "andreas-schwab", "id": 2175493, "node_id": "MDQ6VXNlcjIxNzU0OTM=", "avatar_url": "https://avatars.githubusercontent.com/u/2175493?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andreas-schwab", "html_url": "https://github.com/andreas-schwab", "followers_url": "https://api.github.com/users/andreas-schwab/followers", "following_url": "https://api.github.com/users/andreas-schwab/following{/other_user}", "gists_url": "https://api.github.com/users/andreas-schwab/gists{/gist_id}", "starred_url": "https://api.github.com/users/andreas-schwab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andreas-schwab/subscriptions", "organizations_url": "https://api.github.com/users/andreas-schwab/orgs", "repos_url": "https://api.github.com/users/andreas-schwab/repos", "events_url": "https://api.github.com/users/andreas-schwab/events{/privacy}", "received_events_url": "https://api.github.com/users/andreas-schwab/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9fdb837f67dfa03da55cc5a9e51fa492c2a72f3b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9fdb837f67dfa03da55cc5a9e51fa492c2a72f3b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9fdb837f67dfa03da55cc5a9e51fa492c2a72f3b"}], "stats": {"total": 36, "additions": 32, "deletions": 4}, "files": [{"sha": "562aeaecf4f9eb1d1cb2913ca89883cf9f818e02", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0f37b26c5b459cc601ad226a6e4a13b45f5e454/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0f37b26c5b459cc601ad226a6e4a13b45f5e454/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a0f37b26c5b459cc601ad226a6e4a13b45f5e454", "patch": "@@ -1,3 +1,9 @@\n+2014-06-18  Andreas Schwab  <schwab@suse.de>\n+\n+\tPR rtl-optimization/54555\n+\t* postreload.c (move2add_use_add2_insn): Substitute\n+\tSTRICT_LOW_PART only if it is cheaper.\n+\n 2014-06-18  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/i386.md (*sibcall_memory): Rename from *sibcall_intern."}, {"sha": "89f0c8460e2c20bc79f0795a64d242d9c76293f1", "filename": "gcc/postreload.c", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0f37b26c5b459cc601ad226a6e4a13b45f5e454/gcc%2Fpostreload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0f37b26c5b459cc601ad226a6e4a13b45f5e454/gcc%2Fpostreload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpostreload.c?ref=a0f37b26c5b459cc601ad226a6e4a13b45f5e454", "patch": "@@ -1805,10 +1805,14 @@ move2add_use_add2_insn (rtx reg, rtx sym, rtx off, rtx insn)\n \t\t\t\t   gen_rtx_STRICT_LOW_PART (VOIDmode,\n \t\t\t\t\t\t\t    narrow_reg),\n \t\t\t\t   narrow_src);\n-\t\t  changed = validate_change (insn, &PATTERN (insn),\n-\t\t\t\t\t     new_set, 0);\n-\t\t  if (changed)\n-\t\t    break;\n+\t\t  get_full_set_rtx_cost (new_set, &newcst);\n+\t\t  if (costs_lt_p (&newcst, &oldcst, speed))\n+\t\t    {\n+\t\t      changed = validate_change (insn, &PATTERN (insn),\n+\t\t\t\t\t\t new_set, 0);\n+\t\t      if (changed)\n+\t\t\tbreak;\n+\t\t    }\n \t\t}\n \t    }\n \t}"}, {"sha": "3be9d2e6860c86fe3e8a506135537fc30f284429", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0f37b26c5b459cc601ad226a6e4a13b45f5e454/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0f37b26c5b459cc601ad226a6e4a13b45f5e454/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a0f37b26c5b459cc601ad226a6e4a13b45f5e454", "patch": "@@ -1,3 +1,8 @@\n+2014-06-18  Andreas Schwab  <schwab@suse.de>\n+\n+\tPR rtl-optimization/54555\n+\t* gcc.target/m68k/pr54555.c: New test.\n+\n 2014-06-18  Olivier Hainque  <hainque@adacore.com>\n \n \t* gnat.dg/blocklocs.adb: New test."}, {"sha": "4be704b8f77c4fa97d84eb2d7fb156ece439f322", "filename": "gcc/testsuite/gcc.target/m68k/pr54555.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0f37b26c5b459cc601ad226a6e4a13b45f5e454/gcc%2Ftestsuite%2Fgcc.target%2Fm68k%2Fpr54555.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0f37b26c5b459cc601ad226a6e4a13b45f5e454/gcc%2Ftestsuite%2Fgcc.target%2Fm68k%2Fpr54555.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fm68k%2Fpr54555.c?ref=a0f37b26c5b459cc601ad226a6e4a13b45f5e454", "patch": "@@ -0,0 +1,13 @@\n+/* PR rtl-optimization/54555\n+   Test that postreload does not shorten the load of small constants to\n+   use move.b instead of moveq.  */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-final { scan-assembler-not \"move\\\\.?b\" } } */\n+\n+void foo (void);\n+void bar (int a)\n+{\n+  if (a == 16 || a == 23) foo ();\n+  if (a == -110 || a == -128) foo ();\n+}"}]}