{"sha": "e9ea2688271bd0b4319bdfb1fc852169ab3cf076", "node_id": "C_kwDOANBUbNoAKGU5ZWEyNjg4MjcxYmQwYjQzMTliZGZiMWZjODUyMTY5YWIzY2YwNzY", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-09-05T12:21:01Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-09-05T13:15:03Z"}, "message": "Unify MAX_POSTDOM_CHECK and --param uninit-control-dep-attempts\n\nThe following unifies both limits, in particular the MAX_POSTDOM_CHECK\ntends to be too low and is not user-controllable.\n\n\t* gimple-predicate-analysis.cc (MAX_POSTDOM_CHECK): Remove.\n\t(compute_control_dep_chain): Move uninit-control-dep-attempts\n\tchecking where it also counts the post-dominator check\n\tinvocations.", "tree": {"sha": "6854e38bfeb8aaa734d3d1891e231e8022d73a18", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6854e38bfeb8aaa734d3d1891e231e8022d73a18"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e9ea2688271bd0b4319bdfb1fc852169ab3cf076", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9ea2688271bd0b4319bdfb1fc852169ab3cf076", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9ea2688271bd0b4319bdfb1fc852169ab3cf076", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9ea2688271bd0b4319bdfb1fc852169ab3cf076/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5642197cc239942718c95d1f117bc6977cdeec3d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5642197cc239942718c95d1f117bc6977cdeec3d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5642197cc239942718c95d1f117bc6977cdeec3d"}], "stats": {"total": 29, "additions": 12, "deletions": 17}, "files": [{"sha": "6684aa6c179e683cad0796195a6f4de2cb724a40", "filename": "gcc/gimple-predicate-analysis.cc", "status": "modified", "additions": 12, "deletions": 17, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9ea2688271bd0b4319bdfb1fc852169ab3cf076/gcc%2Fgimple-predicate-analysis.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9ea2688271bd0b4319bdfb1fc852169ab3cf076/gcc%2Fgimple-predicate-analysis.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-predicate-analysis.cc?ref=e9ea2688271bd0b4319bdfb1fc852169ab3cf076", "patch": "@@ -52,10 +52,6 @@\n #define MAX_NUM_CHAINS 8\n #define MAX_CHAIN_LEN 5\n \n-/* When enumerating paths between two blocks this limits the number of\n-   post-dominator skips between two edges possibly defining a predicate.  */\n-#define MAX_POSTDOM_CHECK 8\n-\n /* The limit for the number of switch cases when we do the linear search\n    for the case corresponding to an edge.  */\n #define MAX_SWITCH_CASES 40\n@@ -1010,15 +1006,6 @@ compute_control_dep_chain (basic_block dom_bb, const_basic_block dep_bb,\n   if (single_succ_p (dom_bb))\n     return false;\n \n-  if (*num_calls > (unsigned)param_uninit_control_dep_attempts)\n-    {\n-      if (dump_file)\n-\tfprintf (dump_file, \"param_uninit_control_dep_attempts exceeded: %u\\n\",\n-\t\t *num_calls);\n-      return false;\n-    }\n-  ++*num_calls;\n-\n   /* FIXME: Use a set instead.  */\n   unsigned cur_chain_len = cur_cd_chain.length ();\n   if (cur_chain_len > MAX_CHAIN_LEN)\n@@ -1048,7 +1035,6 @@ compute_control_dep_chain (basic_block dom_bb, const_basic_block dep_bb,\n   edge_iterator ei;\n   FOR_EACH_EDGE (e, ei, dom_bb->succs)\n     {\n-      int post_dom_check = 0;\n       if (e->flags & (EDGE_FAKE | EDGE_ABNORMAL | EDGE_DFS_BACK))\n \tcontinue;\n \n@@ -1088,6 +1074,17 @@ compute_control_dep_chain (basic_block dom_bb, const_basic_block dep_bb,\n \t  if (in_region != 0 && !(cd_bb->flags & in_region))\n \t    break;\n \n+\t  /* Count the number of steps we perform to limit compile-time.\n+\t     This should cover both recursion and the post-dominator walk.  */\n+\t  if (*num_calls > (unsigned)param_uninit_control_dep_attempts)\n+\t    {\n+\t      if (dump_file)\n+\t\tfprintf (dump_file, \"param_uninit_control_dep_attempts \"\n+\t\t\t \"exceeded: %u\\n\", *num_calls);\n+\t      return false;\n+\t    }\n+\t  ++*num_calls;\n+\n \t  /* Check if DEP_BB is indirectly control-dependent on DOM_BB.  */\n \t  if (!single_succ_p (cd_bb)\n \t      && compute_control_dep_chain (cd_bb, dep_bb, cd_chains,\n@@ -1105,9 +1102,7 @@ compute_control_dep_chain (basic_block dom_bb, const_basic_block dep_bb,\n \t      && single_succ_edge (cd_bb)->flags & EDGE_DFS_BACK)\n \t    break;\n \t  cd_bb = get_immediate_dominator (CDI_POST_DOMINATORS, cd_bb);\n-\t  post_dom_check++;\n-\t  if (cd_bb == EXIT_BLOCK_PTR_FOR_FN (cfun)\n-\t      || post_dom_check > MAX_POSTDOM_CHECK)\n+\t  if (cd_bb == EXIT_BLOCK_PTR_FOR_FN (cfun))\n \t    break;\n \t}\n       cur_cd_chain.pop ();"}]}