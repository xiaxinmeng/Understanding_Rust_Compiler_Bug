{"sha": "c8d3491299d4680847c2899a8ef1a34ad880cdb0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzhkMzQ5MTI5OWQ0NjgwODQ3YzI4OTlhOGVmMWEzNGFkODgwY2RiMA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2019-09-03T11:24:18Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2019-09-03T11:24:18Z"}, "message": "tree-ssa-sccvn.h (vn_nary_op_lookup): Remove.\n\n2019-09-03  Richard Biener  <rguenther@suse.de>\n\n\t* tree-ssa-sccvn.h (vn_nary_op_lookup): Remove.\n\t(vn_nary_op_insert): Likewise.\n\t* tree-ssa-sccvn.c (init_vn_nary_op_from_op): Remove.\n\t(vn_nary_op_lookup): Likewise.\n\t(vn_nary_op_insert): Likewise.\n\nFrom-SVN: r275338", "tree": {"sha": "e6607cf90870891972ee6475ac6234950aa6321a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e6607cf90870891972ee6475ac6234950aa6321a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c8d3491299d4680847c2899a8ef1a34ad880cdb0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8d3491299d4680847c2899a8ef1a34ad880cdb0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8d3491299d4680847c2899a8ef1a34ad880cdb0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8d3491299d4680847c2899a8ef1a34ad880cdb0/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "70b766b25a484e847ad15a51a83e2f018a7b0171", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70b766b25a484e847ad15a51a83e2f018a7b0171", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70b766b25a484e847ad15a51a83e2f018a7b0171"}], "stats": {"total": 55, "additions": 8, "deletions": 47}, "files": [{"sha": "cf628e13600e8db728f453fb1c22849a782df5c8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8d3491299d4680847c2899a8ef1a34ad880cdb0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8d3491299d4680847c2899a8ef1a34ad880cdb0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c8d3491299d4680847c2899a8ef1a34ad880cdb0", "patch": "@@ -1,3 +1,11 @@\n+2019-09-03  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-ssa-sccvn.h (vn_nary_op_lookup): Remove.\n+\t(vn_nary_op_insert): Likewise.\n+\t* tree-ssa-sccvn.c (init_vn_nary_op_from_op): Remove.\n+\t(vn_nary_op_lookup): Likewise.\n+\t(vn_nary_op_insert): Likewise.\n+\n 2019-09-03  Ilya Leoshkevich  <iii@linux.ibm.com>\n \n \t* config/s390/s390.c (s390_canonicalize_comparison): Use XEXP"}, {"sha": "f5d75bdfc99f59fff45cce082f3d93561ab72cc6", "filename": "gcc/tree-ssa-sccvn.c", "status": "modified", "additions": 0, "deletions": 45, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8d3491299d4680847c2899a8ef1a34ad880cdb0/gcc%2Ftree-ssa-sccvn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8d3491299d4680847c2899a8ef1a34ad880cdb0/gcc%2Ftree-ssa-sccvn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sccvn.c?ref=c8d3491299d4680847c2899a8ef1a34ad880cdb0", "patch": "@@ -3325,20 +3325,6 @@ init_vn_nary_op_from_pieces (vn_nary_op_t vno, unsigned int length,\n   memcpy (&vno->op[0], ops, sizeof (tree) * length);\n }\n \n-/* Initialize VNO from OP.  */\n-\n-static void\n-init_vn_nary_op_from_op (vn_nary_op_t vno, tree op)\n-{\n-  unsigned i;\n-\n-  vno->opcode = TREE_CODE (op);\n-  vno->length = TREE_CODE_LENGTH (TREE_CODE (op));\n-  vno->type = TREE_TYPE (op);\n-  for (i = 0; i < vno->length; ++i)\n-    vno->op[i] = TREE_OPERAND (op, i);\n-}\n-\n /* Return the number of operands for a vn_nary ops structure from STMT.  */\n \n static unsigned int\n@@ -3440,22 +3426,6 @@ vn_nary_op_lookup_pieces (unsigned int length, enum tree_code code,\n   return vn_nary_op_lookup_1 (vno1, vnresult);\n }\n \n-/* Lookup OP in the current hash table, and return the resulting value\n-   number if it exists in the hash table.  Return NULL_TREE if it does\n-   not exist in the hash table or if the result field of the operation\n-   is NULL. VNRESULT will contain the vn_nary_op_t from the hashtable\n-   if it exists.  */\n-\n-tree\n-vn_nary_op_lookup (tree op, vn_nary_op_t *vnresult)\n-{\n-  vn_nary_op_t vno1\n-    = XALLOCAVAR (struct vn_nary_op_s,\n-\t\t  sizeof_vn_nary_op (TREE_CODE_LENGTH (TREE_CODE (op))));\n-  init_vn_nary_op_from_op (vno1, op);\n-  return vn_nary_op_lookup_1 (vno1, vnresult);\n-}\n-\n /* Lookup the rhs of STMT in the current hash table, and return the resulting\n    value number if it exists in the hash table.  Return NULL_TREE if\n    it does not exist in the hash table.  VNRESULT will contain the\n@@ -3708,21 +3678,6 @@ vn_nary_op_get_predicated_value (vn_nary_op_t vno, basic_block bb)\n   return NULL_TREE;\n }\n \n-/* Insert OP into the current hash table with a value number of\n-   RESULT.  Return the vn_nary_op_t structure we created and put in\n-   the hashtable.  */\n-\n-vn_nary_op_t\n-vn_nary_op_insert (tree op, tree result)\n-{\n-  unsigned length = TREE_CODE_LENGTH (TREE_CODE (op));\n-  vn_nary_op_t vno1;\n-\n-  vno1 = alloc_vn_nary_op (length, result, VN_INFO (result)->value_id);\n-  init_vn_nary_op_from_op (vno1, op);\n-  return vn_nary_op_insert_into (vno1, valid_info->nary, true);\n-}\n-\n /* Insert the rhs of STMT into the current hash table with a value number of\n    RESULT.  */\n "}, {"sha": "77b668a48d0460aa0b1b14da273dda74fc4a647c", "filename": "gcc/tree-ssa-sccvn.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8d3491299d4680847c2899a8ef1a34ad880cdb0/gcc%2Ftree-ssa-sccvn.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8d3491299d4680847c2899a8ef1a34ad880cdb0/gcc%2Ftree-ssa-sccvn.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sccvn.h?ref=c8d3491299d4680847c2899a8ef1a34ad880cdb0", "patch": "@@ -244,11 +244,9 @@ bool has_VN_INFO (tree);\n extern vn_ssa_aux_t VN_INFO (tree);\n tree vn_get_expr_for (tree);\n void scc_vn_restore_ssa_info (void);\n-tree vn_nary_op_lookup (tree, vn_nary_op_t *);\n tree vn_nary_op_lookup_stmt (gimple *, vn_nary_op_t *);\n tree vn_nary_op_lookup_pieces (unsigned int, enum tree_code,\n \t\t\t       tree, tree *, vn_nary_op_t *);\n-vn_nary_op_t vn_nary_op_insert (tree, tree);\n vn_nary_op_t vn_nary_op_insert_pieces (unsigned int, enum tree_code,\n \t\t\t\t       tree, tree *, tree, unsigned int);\n bool ao_ref_init_from_vn_reference (ao_ref *, alias_set_type, tree,"}]}