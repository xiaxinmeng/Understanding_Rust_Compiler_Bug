{"sha": "1ba7b41497efa87150d2325d74d130c4104593ea", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWJhN2I0MTQ5N2VmYTg3MTUwZDIzMjVkNzRkMTMwYzQxMDQ1OTNlYQ==", "commit": {"author": {"name": "Neil Booth", "email": "neil@daikokuya.demon.co.uk", "date": "2002-06-04T18:07:44Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2002-06-04T18:07:44Z"}, "message": "beos-elf.h, [...] (CPP_SPEC): Remove cpp_cpu.\n\nconfig/i386:\n\t* beos-elf.h, cygwin.h, djgpp.h, gas.h, gnu.h, i386-interix.h,\n\ti386-interix3.h, i386elf.h, linux-aout.h, linux.h, linux64.h,\n\tmingw32.h, netbsd-elf.h, netbsd.h, netbsd64.h, rtemself.h,\n\tsco5.h, sol2.h, sysv3.h, sysv4.h, sysv5.h, uwin.h, vxi386.h,\n\twin32.h\t(CPP_SPEC): Remove cpp_cpu.\n\t* i386.h (TARGET_CPU_CPP_BUILTINS): Use.\n\t(CPP_CPU_DEFAULT_SPEC, CPP_CPU_SPEC): Die!\n\nFrom-SVN: r54254", "tree": {"sha": "4bbe5cc7d9a3bd1f717f6a16a3618dfe2989370e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4bbe5cc7d9a3bd1f717f6a16a3618dfe2989370e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1ba7b41497efa87150d2325d74d130c4104593ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ba7b41497efa87150d2325d74d130c4104593ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ba7b41497efa87150d2325d74d130c4104593ea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ba7b41497efa87150d2325d74d130c4104593ea/comments", "author": null, "committer": null, "parents": [{"sha": "135ca7b24732216981be78bfc028482601279753", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/135ca7b24732216981be78bfc028482601279753", "html_url": "https://github.com/Rust-GCC/gccrs/commit/135ca7b24732216981be78bfc028482601279753"}], "stats": {"total": 283, "additions": 148, "deletions": 135}, "files": [{"sha": "637eecf4fdcf98694ead6e3e25d49a1384f5410f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ba7b41497efa87150d2325d74d130c4104593ea/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ba7b41497efa87150d2325d74d130c4104593ea/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1ba7b41497efa87150d2325d74d130c4104593ea", "patch": "@@ -1,3 +1,14 @@\n+2002-06-04  Neil Booth  <neil@daikokuya.demon.co.uk>\n+\n+config/i386:\n+\t* beos-elf.h, cygwin.h, djgpp.h, gas.h, gnu.h, i386-interix.h,\n+\ti386-interix3.h, i386elf.h, linux-aout.h, linux.h, linux64.h,\n+\tmingw32.h, netbsd-elf.h, netbsd.h, netbsd64.h, rtemself.h,\n+\tsco5.h, sol2.h, sysv3.h, sysv4.h, sysv5.h, uwin.h, vxi386.h,\n+\twin32.h\t(CPP_SPEC): Remove cpp_cpu.\n+\t* i386.h (TARGET_CPU_CPP_BUILTINS): Use.\n+\t(CPP_CPU_DEFAULT_SPEC, CPP_CPU_SPEC): Die!\n+\n 2002-06-04  Janis Johnson  <janis187@us.ibm.com>\n \n \t* config/ia64/ia64.c (gen_thread_pointer): Fix variable name."}, {"sha": "e7613b86af15720f5716b2470d369f1d5c674f05", "filename": "gcc/config/i386/beos-elf.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ba7b41497efa87150d2325d74d130c4104593ea/gcc%2Fconfig%2Fi386%2Fbeos-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ba7b41497efa87150d2325d74d130c4104593ea/gcc%2Fconfig%2Fi386%2Fbeos-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fbeos-elf.h?ref=1ba7b41497efa87150d2325d74d130c4104593ea", "patch": "@@ -76,7 +76,7 @@ Boston, MA 02111-1307, USA.  */\n -Asystem=beos\"\n \n #undef CPP_SPEC\n-#define CPP_SPEC \"%(cpp_cpu) %{!no-fPIC:%{!no-fpic:-D__PIC__ -D__pic__}}\"\n+#define CPP_SPEC \"%{!no-fPIC:%{!no-fpic:-D__PIC__ -D__pic__}}\"\n \n /* BeOS uses lots of multichars, so don't warn about them unless the\n    user explicitly asks for the warnings with -Wmultichar.  Note that"}, {"sha": "15a5cdbb925c7ee33f8a3140bb45713260b3baf1", "filename": "gcc/config/i386/cygwin.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ba7b41497efa87150d2325d74d130c4104593ea/gcc%2Fconfig%2Fi386%2Fcygwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ba7b41497efa87150d2325d74d130c4104593ea/gcc%2Fconfig%2Fi386%2Fcygwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fcygwin.h?ref=1ba7b41497efa87150d2325d74d130c4104593ea", "patch": "@@ -96,7 +96,7 @@ Boston, MA 02111-1307, USA.  */\n    existing args.  */\n \n #undef CPP_SPEC\n-#define CPP_SPEC \"%(cpp_cpu) %{posix:-D_POSIX_SOURCE} \\\n+#define CPP_SPEC \"%{posix:-D_POSIX_SOURCE} \\\n   -D__stdcall=__attribute__((__stdcall__)) \\\n   -D__cdecl=__attribute__((__cdecl__)) \\\n   %{!ansi:-D_stdcall=__attribute__((__stdcall__)) \\"}, {"sha": "15c1531a9c82ecc2a5302c41ff2a4db0bcc09019", "filename": "gcc/config/i386/djgpp.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ba7b41497efa87150d2325d74d130c4104593ea/gcc%2Fconfig%2Fi386%2Fdjgpp.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ba7b41497efa87150d2325d74d130c4104593ea/gcc%2Fconfig%2Fi386%2Fdjgpp.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fdjgpp.h?ref=1ba7b41497efa87150d2325d74d130c4104593ea", "patch": "@@ -87,7 +87,7 @@ Boston, MA 02111-1307, USA.  */\n \n /* Include <sys/version.h> so __DJGPP__ and __DJGPP_MINOR__ are defined.  */\n #undef CPP_SPEC\n-#define CPP_SPEC \"-remap %(cpp_cpu) %{posix:-D_POSIX_SOURCE} \\\n+#define CPP_SPEC \"-remap %{posix:-D_POSIX_SOURCE} \\\n   %{!ansi:%{!std=c*:%{!std=i*:-DMSDOS}}} %{!ansi:%{!std=c*:%{!std=i*:-DGO32}}} \\\n   -imacros %s../include/sys/version.h\"\n "}, {"sha": "c627775a8606867dc64fb5221b6148b357c4c95a", "filename": "gcc/config/i386/gas.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ba7b41497efa87150d2325d74d130c4104593ea/gcc%2Fconfig%2Fi386%2Fgas.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ba7b41497efa87150d2325d74d130c4104593ea/gcc%2Fconfig%2Fi386%2Fgas.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fgas.h?ref=1ba7b41497efa87150d2325d74d130c4104593ea", "patch": "@@ -48,7 +48,7 @@ Boston, MA 02111-1307, USA.  */\n /* Specify predefined symbols in preprocessor.  */\n \n #define CPP_PREDEFINES \"-Dunix\"\n-#define CPP_SPEC \"%(cpp_cpu) %{posix:-D_POSIX_SOURCE}\"\n+#define CPP_SPEC \"%{posix:-D_POSIX_SOURCE}\"\n \n /* Allow #sccs in preprocessor.  */\n "}, {"sha": "50e019560384bba17eb7060fb515e2f87d974ed3", "filename": "gcc/config/i386/gnu.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ba7b41497efa87150d2325d74d130c4104593ea/gcc%2Fconfig%2Fi386%2Fgnu.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ba7b41497efa87150d2325d74d130c4104593ea/gcc%2Fconfig%2Fi386%2Fgnu.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fgnu.h?ref=1ba7b41497efa87150d2325d74d130c4104593ea", "patch": "@@ -8,7 +8,7 @@\n   -Dunix -Asystem=unix -Asystem=posix -D__gnu_hurd__ -D__GNU__ -Asystem=gnu\"\n \n #undef CPP_SPEC\n-#define CPP_SPEC \"%(cpp_cpu) \\\n+#define CPP_SPEC \"\\\n   %{fPIC:-D__PIC__ -D__pic__} %{fpic:-D__PIC__ -D__pic__} \\\n   %{posix:-D_POSIX_SOURCE} %{bsd:-D_BSD_SOURCE}\"\n "}, {"sha": "101f812c3621c7f207b3d30679de0c5aa4ebc675", "filename": "gcc/config/i386/i386-interix.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ba7b41497efa87150d2325d74d130c4104593ea/gcc%2Fconfig%2Fi386%2Fi386-interix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ba7b41497efa87150d2325d74d130c4104593ea/gcc%2Fconfig%2Fi386%2Fi386-interix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-interix.h?ref=1ba7b41497efa87150d2325d74d130c4104593ea", "patch": "@@ -66,7 +66,6 @@ Boston, MA 02111-1307, USA.  */\n #undef CPP_SPEC\n /* Write out the correct language type definition for the header files.  \n    Unless we have assembler language, write out the symbols for C.\n-   cpp_cpu is an Intel specific variant. See i386.h\n    mieee is an Alpha specific variant.  Cross polination a bad idea.\n    */\n #define CPP_SPEC \"\\\n@@ -77,7 +76,6 @@ Boston, MA 02111-1307, USA.  */\n %{.C:\t-D__LANGUAGE_C_PLUS_PLUS__ -D__LANGUAGE_C_PLUS_PLUS -D__cplusplus} \\\n %{.m:\t-D__LANGUAGE_OBJECTIVE_C__ -D__LANGUAGE_OBJECTIVE_C} \\\n -remap \\\n-%(cpp_cpu) \\\n %{posix:-D_POSIX_SOURCE} \\\n -isystem %$INTERIX_ROOT/usr/include\"\n "}, {"sha": "38c6c55290f6628dddbe233f143e5172d559efe1", "filename": "gcc/config/i386/i386-interix3.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ba7b41497efa87150d2325d74d130c4104593ea/gcc%2Fconfig%2Fi386%2Fi386-interix3.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ba7b41497efa87150d2325d74d130c4104593ea/gcc%2Fconfig%2Fi386%2Fi386-interix3.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-interix3.h?ref=1ba7b41497efa87150d2325d74d130c4104593ea", "patch": "@@ -27,6 +27,5 @@ Boston, MA 02111-1307, USA.  */\n %{.cxx:\t-D__LANGUAGE_C_PLUS_PLUS__ -D__LANGUAGE_C_PLUS_PLUS -D__cplusplus} \\\n %{.C:\t-D__LANGUAGE_C_PLUS_PLUS__ -D__LANGUAGE_C_PLUS_PLUS -D__cplusplus} \\\n %{.m:\t-D__LANGUAGE_OBJECTIVE_C__ -D__LANGUAGE_OBJECTIVE_C} \\\n-%(cpp_cpu) \\\n %{posix:-D_POSIX_SOURCE}\"\n "}, {"sha": "0064adf13c6fafd6b43479dde20b12879f0a167f", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 115, "deletions": 109, "changes": 224, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ba7b41497efa87150d2325d74d130c4104593ea/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ba7b41497efa87150d2325d74d130c4104593ea/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=1ba7b41497efa87150d2325d74d130c4104593ea", "patch": "@@ -474,23 +474,121 @@ extern int x86_prefetch_sse;\n #endif\n \f\n /* Target CPU builtins.  */\n-#define TARGET_CPU_CPP_BUILTINS()\t\t\t\\\n-  do\t\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\\\n-      if (TARGET_64BIT)\t\t\t\t\t\\\n-\t{\t\t\t\t\t\t\\\n-\t  builtin_assert (\"cpu=x86_64\");\t\t\\\n-\t  builtin_assert (\"machine=x86_64\");\t\t\\\n-\t  builtin_define (\"__x86_64\");\t\t\t\\\n-\t  builtin_define (\"__x86_64__\");\t\t\\\n-\t}\t\t\t\t\t\t\\\n-      else\t\t\t\t\t\t\\\n-\t{\t\t\t\t\t\t\\\n-\t  builtin_assert (\"cpu=i386\");\t\t\t\\\n-\t  builtin_assert (\"machine=i386\");\t\t\\\n-\t  builtin_define_std (\"i386\");\t\t\t\\\n-\t}\t\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\\\n+#define TARGET_CPU_CPP_BUILTINS()\t\t\t\t\\\n+  do\t\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\\\n+      size_t arch_len = strlen (ix86_arch_string);\t\t\\\n+      size_t cpu_len = strlen (ix86_cpu_string);\t\t\\\n+      int last_arch_char = ix86_arch_string[arch_len - 1];\t\\\n+      int last_cpu_char = ix86_cpu_string[cpu_len - 1];\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+      if (TARGET_64BIT)\t\t\t\t\t\t\\\n+\t{\t\t\t\t\t\t\t\\\n+\t  builtin_assert (\"cpu=x86_64\");\t\t\t\\\n+\t  builtin_assert (\"machine=x86_64\");\t\t\t\\\n+\t  builtin_define (\"__x86_64\");\t\t\t\t\\\n+\t  builtin_define (\"__x86_64__\");\t\t\t\\\n+\t}\t\t\t\t\t\t\t\\\n+      else\t\t\t\t\t\t\t\\\n+\t{\t\t\t\t\t\t\t\\\n+\t  builtin_assert (\"cpu=i386\");\t\t\t\t\\\n+\t  builtin_assert (\"machine=i386\");\t\t\t\\\n+\t  builtin_define_std (\"i386\");\t\t\t\t\\\n+\t}\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+      /* Built-ins based on -mcpu= (or -march= if no\t\t\\\n+\t CPU given).  */\t\t\t\t\t\\\n+      if (TARGET_386)\t\t\t\t\t\t\\\n+\tbuiltin_define (\"__tune_i386__\");\t\t\t\\\n+      else if (TARGET_486)\t\t\t\t\t\\\n+\tbuiltin_define (\"__tune_i486__\");\t\t\t\\\n+      else if (TARGET_PENTIUM)\t\t\t\t\t\\\n+\t{\t\t\t\t\t\t\t\\\n+\t  builtin_define (\"__tune_i586__\");\t\t\t\\\n+\t  builtin_define (\"__tune_pentium__\");\t\t\t\\\n+\t  if (last_cpu_char == 'x')\t\t\t\t\\\n+\t    builtin_define (\"__tune_pentium_mmx__\");\t\t\\\n+\t}\t\t\t\t\t\t\t\\\n+      else if (TARGET_PENTIUMPRO)\t\t\t\t\\\n+\t{\t\t\t\t\t\t\t\\\n+\t  builtin_define (\"__tune_i686__\");\t\t\t\\\n+\t  builtin_define (\"__tune_pentiumpro__\");\t\t\\\n+\t}\t\t\t\t\t\t\t\\\n+      else if (TARGET_K6)\t\t\t\t\t\\\n+\t{\t\t\t\t\t\t\t\\\n+\t  builtin_define (\"__tune_k6__\");\t\t\t\\\n+\t  if (last_cpu_char == '2')\t\t\t\t\\\n+\t    builtin_define (\"__tune_k6_2__\");\t\t\t\\\n+\t  else if (last_cpu_char == '3')\t\t\t\\\n+\t    builtin_define (\"__tune_k6_3__\");\t\t\t\\\n+\t}\t\t\t\t\t\t\t\\\n+      else if (TARGET_ATHLON)\t\t\t\t\t\\\n+\t{\t\t\t\t\t\t\t\\\n+\t  builtin_define (\"__tune_athlon__\");\t\t\t\\\n+\t  /* Only plain \"athlon\" lacks SSE.  */\t\t\t\\\n+\t  if (last_cpu_char != 'n')\t\t\t\t\\\n+\t    builtin_define (\"__tune_athlon_sse__\");\t\t\\\n+\t}\t\t\t\t\t\t\t\\\n+      else if (TARGET_PENTIUM4)\t\t\t\t\t\\\n+\tbuiltin_define (\"__tune_pentium4__\");\t\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+      if (TARGET_MMX)\t\t\t\t\t\t\\\n+\tbuiltin_define (\"__MMX__\");\t\t\t\t\\\n+      if (TARGET_3DNOW)\t\t\t\t\t\t\\\n+\tbuiltin_define (\"__3dNOW__\");\t\t\t\t\\\n+      if (TARGET_3DNOW_A)\t\t\t\t\t\\\n+\tbuiltin_define (\"__3dNOW_A__\");\t\t\t\t\\\n+      if (TARGET_SSE)\t\t\t\t\t\t\\\n+\tbuiltin_define (\"__SSE__\");\t\t\t\t\\\n+      if (TARGET_SSE2)\t\t\t\t\t\t\\\n+\tbuiltin_define (\"__SSE2__\");\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+      /* Built-ins based on -march=.  */\t\t\t\\\n+      if (ix86_arch == PROCESSOR_I486)\t\t\t\t\\\n+\t{\t\t\t\t\t\t\t\\\n+\t  builtin_define (\"__i486\");\t\t\t\t\\\n+\t  builtin_define (\"__i486__\");\t\t\t\t\\\n+\t}\t\t\t\t\t\t\t\\\n+      else if (ix86_arch == PROCESSOR_PENTIUM)\t\t\t\\\n+\t{\t\t\t\t\t\t\t\\\n+\t  builtin_define (\"__i586\");\t\t\t\t\\\n+\t  builtin_define (\"__i586__\");\t\t\t\t\\\n+\t  builtin_define (\"__pentium\");\t\t\t\t\\\n+\t  builtin_define (\"__pentium__\");\t\t\t\\\n+\t  if (last_arch_char == 'x')\t\t\t\t\\\n+\t    builtin_define (\"__pentium_mmx__\");\t\t\t\\\n+\t}\t\t\t\t\t\t\t\\\n+      else if (ix86_arch == PROCESSOR_PENTIUMPRO)\t\t\\\n+\t{\t\t\t\t\t\t\t\\\n+\t  builtin_define (\"__i686\");\t\t\t\t\\\n+\t  builtin_define (\"__i686__\");\t\t\t\t\\\n+\t  builtin_define (\"__pentiumpro\");\t\t\t\\\n+\t  builtin_define (\"__pentiumpro__\");\t\t\t\\\n+\t}\t\t\t\t\t\t\t\\\n+      else if (ix86_arch == PROCESSOR_K6)\t\t\t\\\n+\t{\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+\t  builtin_define (\"__k6\");\t\t\t\t\\\n+\t  builtin_define (\"__k6__\");\t\t\t\t\\\n+\t  if (last_arch_char == '2')\t\t\t\t\\\n+\t    builtin_define (\"__k6_2__\");\t\t\t\\\n+\t  else if (last_arch_char == '3')\t\t\t\\\n+\t    builtin_define (\"__k6_3__\");\t\t\t\\\n+\t}\t\t\t\t\t\t\t\\\n+      else if (ix86_arch == PROCESSOR_ATHLON)\t\t\t\\\n+\t{\t\t\t\t\t\t\t\\\n+\t  builtin_define (\"__athlon\");\t\t\t\t\\\n+\t  builtin_define (\"__athlon__\");\t\t\t\\\n+\t  /* Only plain \"athlon\" lacks SSE.  */\t\t\t\\\n+\t  if (last_arch_char != 'n')\t\t\t\t\\\n+\t    builtin_define (\"__athlon_sse__\");\t\t\t\\\n+\t}\t\t\t\t\t\t\t\\\n+      else if (ix86_arch == PROCESSOR_PENTIUM4)\t\t\t\\\n+\t{\t\t\t\t\t\t\t\\\n+\t  builtin_define (\"__pentium4\");\t\t\t\\\n+\t  builtin_define (\"__pentium4__\");\t\t\t\\\n+\t}\t\t\t\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\\\n   while (0)\n \n #define TARGET_CPU_DEFAULT_i386 0\n@@ -511,96 +609,6 @@ extern int x86_prefetch_sse;\n \t\t\t\t  \"pentiumpro\", \"pentium2\", \"pentium3\", \\\n \t\t\t\t  \"pentium4\", \"k6\", \"k6-2\", \"k6-3\",\\\n \t\t\t\t  \"athlon\", \"athlon-4\"}\n-#ifndef CPP_CPU_DEFAULT_SPEC\n-#if TARGET_CPU_DEFAULT == TARGET_CPU_DEFAULT_i486\n-#define CPP_CPU_DEFAULT_SPEC \"-D__tune_i486__\"\n-#endif\n-#if TARGET_CPU_DEFAULT == TARGET_CPU_DEFAULT_pentium\n-#define CPP_CPU_DEFAULT_SPEC \"-D__tune_i586__ -D__tune_pentium__\"\n-#endif\n-#if TARGET_CPU_DEFAULT == TARGET_CPU_DEFAULT_pentium_mmx\n-#define CPP_CPU_DEFAULT_SPEC \"-D__tune_i586__ -D__tune_pentium__ -D__tune_pentium_mmx__\"\n-#endif\n-#if TARGET_CPU_DEFAULT == TARGET_CPU_DEFAULT_pentiumpro\n-#define CPP_CPU_DEFAULT_SPEC \"-D__tune_i686__ -D__tune_pentiumpro__\"\n-#endif\n-#if TARGET_CPU_DEFAULT == TARGET_CPU_DEFAULT_pentium2\n-#define CPP_CPU_DEFAULT_SPEC \"-D__tune_i686__ -D__tune_pentiumpro__\\\n--D__tune_pentium2__\"\n-#endif\n-#if TARGET_CPU_DEFAULT == TARGET_CPU_DEFAULT_pentium3\n-#define CPP_CPU_DEFAULT_SPEC \"-D__tune_i686__ -D__tune_pentiumpro__\\\n--D__tune_pentium2__ -D__tune_pentium3__\"\n-#endif\n-#if TARGET_CPU_DEFAULT == TARGET_CPU_DEFAULT_pentium4\n-#define CPP_CPU_DEFAULT_SPEC \"-D__tune_pentium4__\"\n-#endif\n-#if TARGET_CPU_DEFAULT == TARGET_CPU_DEFAULT_k6\n-#define CPP_CPU_DEFAULT_SPEC \"-D__tune_k6__\"\n-#endif\n-#if TARGET_CPU_DEFAULT == TARGET_CPU_DEFAULT_k6_2\n-#define CPP_CPU_DEFAULT_SPEC \"-D__tune_k6__ -D__tune_k6_2__\"\n-#endif\n-#if TARGET_CPU_DEFAULT == TARGET_CPU_DEFAULT_k6_3\n-#define CPP_CPU_DEFAULT_SPEC \"-D__tune_k6__ -D__tune_k6_3__\"\n-#endif\n-#if TARGET_CPU_DEFAULT == TARGET_CPU_DEFAULT_athlon\n-#define CPP_CPU_DEFAULT_SPEC \"-D__tune_athlon__\"\n-#endif\n-#if TARGET_CPU_DEFAULT == TARGET_CPU_DEFAULT_athlon_sse\n-#define CPP_CPU_DEFAULT_SPEC \"-D__tune_athlon__ -D__tune_athlon_sse__\"\n-#endif\n-#ifndef CPP_CPU_DEFAULT_SPEC\n-#define CPP_CPU_DEFAULT_SPEC \"-D__tune_i386__\"\n-#endif\n-#endif /* CPP_CPU_DEFAULT_SPEC */\n-\n-#define CPP_CPU_SPEC \"\\\n-%{march=i386:%{!mcpu*:-D__tune_i386__ }}\\\n-%{march=i486:-D__i486 -D__i486__ %{!mcpu*:-D__tune_i486__ }}\\\n-%{march=pentium|march=i586:-D__i586 -D__i586__ -D__pentium -D__pentium__ \\\n-  %{!mcpu*:-D__tune_i586__ -D__tune_pentium__ }}\\\n-%{march=pentium-mmx:-D__i586 -D__i586__ -D__pentium -D__pentium__ \\\n-  -D__pentium__mmx__ \\\n-  %{!mcpu*:-D__tune_i586__ -D__tune_pentium__ -D__tune_pentium_mmx__}}\\\n-%{march=pentiumpro|march=i686:-D__i686 -D__i686__ \\\n-  -D__pentiumpro -D__pentiumpro__ \\\n-  %{!mcpu*:-D__tune_i686__ -D__tune_pentiumpro__ }}\\\n-%{march=k6:-D__k6 -D__k6__ %{!mcpu*:-D__tune_k6__ }}\\\n-%{march=k6-2:-D__k6 -D__k6__ -D__k6_2__ \\\n-  %{!mcpu*:-D__tune_k6__ -D__tune_k6_2__ }}\\\n-%{march=k6-3:-D__k6 -D__k6__ -D__k6_3__ \\\n-  %{!mcpu*:-D__tune_k6__ -D__tune_k6_3__ }}\\\n-%{march=athlon|march=athlon-tbird:-D__athlon -D__athlon__ \\\n-  %{!mcpu*:-D__tune_athlon__ }}\\\n-%{march=athlon-4|march=athlon-xp|march=athlon-mp:-D__athlon -D__athlon__ \\\n-  -D__athlon_sse__ \\\n-  %{!mcpu*:-D__tune_athlon__ -D__tune_athlon_sse__ }}\\\n-%{march=pentium4:-D__pentium4 -D__pentium4__ %{!mcpu*:-D__tune_pentium4__ }}\\\n-%{m386|mcpu=i386:-D__tune_i386__ }\\\n-%{m486|mcpu=i486:-D__tune_i486__ }\\\n-%{mpentium|mcpu=pentium|mcpu=i586|mcpu=pentium-mmx:-D__tune_i586__ -D__tune_pentium__ }\\\n-%{mpentiumpro|mcpu=pentiumpro|mcpu=i686|cpu=pentium2|cpu=pentium3:-D__tune_i686__ \\\n--D__tune_pentiumpro__ }\\\n-%{mcpu=k6|mcpu=k6-2|mcpu=k6-3:-D__tune_k6__ }\\\n-%{mcpu=athlon|mcpu=athlon-tbird|mcpu=athlon-4|mcpu=athlon-xp|mcpu=athlon-mp:\\\n--D__tune_athlon__ }\\\n-%{mcpu=athlon-4|mcpu=athlon-xp|mcpu=athlon-mp:\\\n--D__tune_athlon_sse__ }\\\n-%{mcpu=pentium4:-D__tune_pentium4__ }\\\n-%{march=athlon-tbird|march=athlon-xp|march=athlon-mp|march=pentium3|march=pentium4:\\\n--D__SSE__ }\\\n-%{march=pentium-mmx|march=k6|march=k6-2|march=k6-3\\\n-|march=athlon|march=athlon-tbird|march=athlon-4|march=athlon-xp\\\n-|march=athlon-mp|march=pentium2|march=pentium3|march=pentium4: -D__MMX__ }\\\n-%{march=k6-2|march=k6-3\\\n-|march=athlon|march=athlon-tbird|march=athlon-4|march=athlon-xp\\\n-|march=athlon-mp: -D__3dNOW__ }\\\n-%{march=athlon|march=athlon-tbird|march=athlon-4|march=athlon-xp\\\n-|march=athlon-mp: -D__3dNOW_A__ }\\\n-%{msse2: -D__SSE2__ }\\\n-%{march=pentium4: -D__SSE2__ }\\\n-%{!march*:%{!mcpu*:%{!m386:%{!m486:%{!mpentium*:%(cpp_cpu_default)}}}}}\"\n \n #ifndef CC1_SPEC\n #define CC1_SPEC \"%(cc1_cpu) \"\n@@ -621,8 +629,6 @@ extern int x86_prefetch_sse;\n #endif\n \n #define EXTRA_SPECS\t\t\t\t\t\t\t\\\n-  { \"cpp_cpu_default\",\tCPP_CPU_DEFAULT_SPEC },\t\t\t\t\\\n-  { \"cpp_cpu\",\tCPP_CPU_SPEC },\t\t\t\t\t\t\\\n   { \"cc1_cpu\",  CC1_CPU_SPEC },\t\t\t\t\t\t\\\n   SUBTARGET_EXTRA_SPECS\n \f"}, {"sha": "46f207850ecd34db0ca41916233463dc29e92188", "filename": "gcc/config/i386/i386elf.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ba7b41497efa87150d2325d74d130c4104593ea/gcc%2Fconfig%2Fi386%2Fi386elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ba7b41497efa87150d2325d74d130c4104593ea/gcc%2Fconfig%2Fi386%2Fi386elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386elf.h?ref=1ba7b41497efa87150d2325d74d130c4104593ea", "patch": "@@ -45,7 +45,7 @@ Boston, MA 02111-1307, USA.  */\n #define CPP_PREDEFINES \"\"\n \n #undef CPP_SPEC\n-#define CPP_SPEC \"%(cpp_cpu)\"\n+#define CPP_SPEC \"\"\n \n #define ENDFILE_SPEC \"crtend.o%s\"\n "}, {"sha": "51203cda3e5c1742e77d1f744576a9406e0daf23", "filename": "gcc/config/i386/linux-aout.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ba7b41497efa87150d2325d74d130c4104593ea/gcc%2Fconfig%2Fi386%2Flinux-aout.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ba7b41497efa87150d2325d74d130c4104593ea/gcc%2Fconfig%2Fi386%2Flinux-aout.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Flinux-aout.h?ref=1ba7b41497efa87150d2325d74d130c4104593ea", "patch": "@@ -29,7 +29,7 @@ Boston, MA 02111-1307, USA.  */\n #define CPP_PREDEFINES \"-Dunix -D__gnu_linux__ -Dlinux -Asystem=posix\"\n \n #undef CPP_SPEC\n-#define CPP_SPEC \"%(cpp_cpu) %{fPIC:-D__PIC__ -D__pic__} %{fpic:-D__PIC__ -D__pic__} %{posix:-D_POSIX_SOURCE}\"\n+#define CPP_SPEC \"%{fPIC:-D__PIC__ -D__pic__} %{fpic:-D__PIC__ -D__pic__} %{posix:-D_POSIX_SOURCE}\"\n \n #undef SIZE_TYPE\n #define SIZE_TYPE \"unsigned int\""}, {"sha": "232a9eec5e4a57e93f240c6223225c8e0896991d", "filename": "gcc/config/i386/linux.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ba7b41497efa87150d2325d74d130c4104593ea/gcc%2Fconfig%2Fi386%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ba7b41497efa87150d2325d74d130c4104593ea/gcc%2Fconfig%2Fi386%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Flinux.h?ref=1ba7b41497efa87150d2325d74d130c4104593ea", "patch": "@@ -85,9 +85,9 @@ Boston, MA 02111-1307, USA.  */\n \n #undef CPP_SPEC\n #ifdef USE_GNULIBC_1\n-#define CPP_SPEC \"%(cpp_cpu) %{fPIC:-D__PIC__ -D__pic__} %{fpic:-D__PIC__ -D__pic__} %{posix:-D_POSIX_SOURCE}\"\n+#define CPP_SPEC \"%{fPIC:-D__PIC__ -D__pic__} %{fpic:-D__PIC__ -D__pic__} %{posix:-D_POSIX_SOURCE}\"\n #else\n-#define CPP_SPEC \"%(cpp_cpu) %{fPIC:-D__PIC__ -D__pic__} %{fpic:-D__PIC__ -D__pic__} %{posix:-D_POSIX_SOURCE} %{pthread:-D_REENTRANT}\"\n+#define CPP_SPEC \"%{fPIC:-D__PIC__ -D__pic__} %{fpic:-D__PIC__ -D__pic__} %{posix:-D_POSIX_SOURCE} %{pthread:-D_REENTRANT}\"\n #endif\n \n #undef CC1_SPEC"}, {"sha": "52730856e71e07fe1f3c79b99fe49507e8f0e143", "filename": "gcc/config/i386/linux64.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ba7b41497efa87150d2325d74d130c4104593ea/gcc%2Fconfig%2Fi386%2Flinux64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ba7b41497efa87150d2325d74d130c4104593ea/gcc%2Fconfig%2Fi386%2Flinux64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Flinux64.h?ref=1ba7b41497efa87150d2325d74d130c4104593ea", "patch": "@@ -27,7 +27,7 @@ Boston, MA 02111-1307, USA.  */\n #define CPP_PREDEFINES \"-D__ELF__ -Dunix -D__gnu_linux__ -Dlinux -Asystem(posix)\"\n \n #undef CPP_SPEC\n-#define CPP_SPEC \"%(cpp_cpu) %{fPIC:-D__PIC__ -D__pic__} %{fpic:-D__PIC__ -D__pic__} %{posix:-D_POSIX_SOURCE} %{pthread:-D_REENTRANT} %{!m32:-D__LONG_MAX__=9223372036854775807L}\"\n+#define CPP_SPEC \"%{fPIC:-D__PIC__ -D__pic__} %{fpic:-D__PIC__ -D__pic__} %{posix:-D_POSIX_SOURCE} %{pthread:-D_REENTRANT} %{!m32:-D__LONG_MAX__=9223372036854775807L}\"\n \n /* Provide a LINK_SPEC.  Here we provide support for the special GCC\n    options -static and -shared, which allow us to link things in one"}, {"sha": "c5b8701f89842f0e239f81cd3df38355da2098cc", "filename": "gcc/config/i386/mingw32.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ba7b41497efa87150d2325d74d130c4104593ea/gcc%2Fconfig%2Fi386%2Fmingw32.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ba7b41497efa87150d2325d74d130c4104593ea/gcc%2Fconfig%2Fi386%2Fmingw32.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fmingw32.h?ref=1ba7b41497efa87150d2325d74d130c4104593ea", "patch": "@@ -48,7 +48,7 @@ Boston, MA 02111-1307, USA.  */\n \n #undef CPP_SPEC\n #define CPP_SPEC \\\n-  \"%(cpp_cpu) %{posix:-D_POSIX_SOURCE} %{mthreads:-D_MT} \\\n+  \"%{posix:-D_POSIX_SOURCE} %{mthreads:-D_MT} \\\n   -D__stdcall=__attribute__((__stdcall__)) \\\n   -D__cdecl=__attribute__((__cdecl__)) \\\n   %{!ansi:-D_stdcall=__attribute__((__stdcall__)) \\"}, {"sha": "3a2ab8bcd2d02bc06846307f94691c7500e4c947", "filename": "gcc/config/i386/netbsd-elf.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ba7b41497efa87150d2325d74d130c4104593ea/gcc%2Fconfig%2Fi386%2Fnetbsd-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ba7b41497efa87150d2325d74d130c4104593ea/gcc%2Fconfig%2Fi386%2Fnetbsd-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fnetbsd-elf.h?ref=1ba7b41497efa87150d2325d74d130c4104593ea", "patch": "@@ -52,7 +52,7 @@ Boston, MA 02111-1307, USA.  */\n /* Provide a CPP_SPEC appropriate for NetBSD.  */\n \n #undef CPP_SPEC\n-#define CPP_SPEC \"%(cpp_cpu) %(netbsd_cpp_spec)\"\n+#define CPP_SPEC \"%(netbsd_cpp_spec)\"\n \n \n /* Make gcc agree with <machine/ansi.h> */"}, {"sha": "332e70f1f42b400b4921da94e6c827a0b0f309d0", "filename": "gcc/config/i386/netbsd.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ba7b41497efa87150d2325d74d130c4104593ea/gcc%2Fconfig%2Fi386%2Fnetbsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ba7b41497efa87150d2325d74d130c4104593ea/gcc%2Fconfig%2Fi386%2Fnetbsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fnetbsd.h?ref=1ba7b41497efa87150d2325d74d130c4104593ea", "patch": "@@ -17,7 +17,7 @@\n   { \"netbsd_cpp_spec\", NETBSD_CPP_SPEC },\n \n #undef CPP_SPEC\n-#define CPP_SPEC \"%(cpp_cpu) %(netbsd_cpp_spec)\"\n+#define CPP_SPEC \"%(netbsd_cpp_spec)\"\n \n \f\n #undef SIZE_TYPE"}, {"sha": "bd0c607f83d14c3eab50508a8ac8b4631da26cb9", "filename": "gcc/config/i386/netbsd64.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ba7b41497efa87150d2325d74d130c4104593ea/gcc%2Fconfig%2Fi386%2Fnetbsd64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ba7b41497efa87150d2325d74d130c4104593ea/gcc%2Fconfig%2Fi386%2Fnetbsd64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fnetbsd64.h?ref=1ba7b41497efa87150d2325d74d130c4104593ea", "patch": "@@ -56,7 +56,7 @@ Boston, MA 02111-1307, USA.  */\n /* Provide a CPP_SPEC appropriate for NetBSD.  */\n \n #undef CPP_SPEC\n-#define CPP_SPEC \"%(cpp_cpu) %(netbsd_cpp_spec)\"\n+#define CPP_SPEC \"%(netbsd_cpp_spec)\"\n \n \n /* Output assembler code to FILE to call the profiler.  */"}, {"sha": "db95d36db8516ecbf6e0db94cc640c8003209157", "filename": "gcc/config/i386/rtemself.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ba7b41497efa87150d2325d74d130c4104593ea/gcc%2Fconfig%2Fi386%2Frtemself.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ba7b41497efa87150d2325d74d130c4104593ea/gcc%2Fconfig%2Fi386%2Frtemself.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Frtemself.h?ref=1ba7b41497efa87150d2325d74d130c4104593ea", "patch": "@@ -28,4 +28,4 @@ Boston, MA 02111-1307, USA.  */\n     -D__ELF__ -D__i386__ -D__USE_INIT_FINI__\"\n \n #undef CPP_SPEC\n-#define CPP_SPEC \"%(cpp_cpu) %{msoft-float:-D_SOFT_FLOAT}\"\n+#define CPP_SPEC \"%{msoft-float:-D_SOFT_FLOAT}\""}, {"sha": "818cba84f93ac4df4a00b3c4393633cf8b0eea1c", "filename": "gcc/config/i386/sco5.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ba7b41497efa87150d2325d74d130c4104593ea/gcc%2Fconfig%2Fi386%2Fsco5.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ba7b41497efa87150d2325d74d130c4104593ea/gcc%2Fconfig%2Fi386%2Fsco5.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsco5.h?ref=1ba7b41497efa87150d2325d74d130c4104593ea", "patch": "@@ -641,7 +641,7 @@ init_section ()\t\t\t\t\t\t\t\t\\\n /* You are in a maze of GCC specs ... all alike */\n \n #undef CPP_SPEC\n-#define CPP_SPEC \"%(cpp_cpu) \\\n+#define CPP_SPEC \"\\\n   %{fpic:%{mcoff:%e-fpic is not valid with -mcoff}} \\\n   %{fPIC:%{mcoff:%e-fPIC is not valid with -mcoff}} \\\n   -D__i386 -D__unix -D_SCO_DS=1 -D_M_I386 -D_M_XENIX -D_M_UNIX \\"}, {"sha": "d860f11de480b60afe66ec73789e2d0c89eaa2cd", "filename": "gcc/config/i386/sol2.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ba7b41497efa87150d2325d74d130c4104593ea/gcc%2Fconfig%2Fi386%2Fsol2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ba7b41497efa87150d2325d74d130c4104593ea/gcc%2Fconfig%2Fi386%2Fsol2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsol2.h?ref=1ba7b41497efa87150d2325d74d130c4104593ea", "patch": "@@ -85,7 +85,6 @@ Boston, MA 02111-1307, USA.  */\n #undef CPP_SPEC\n #define CPP_SPEC \\\n   \"%{.S:-P} \\\n-   %(cpp_cpu) \\\n    %{pthreads:-D_REENTRANT -D_PTHREADS} \\\n    %{!pthreads:%{threads:-D_REENTRANT -D_SOLARIS_THREADS}} \\\n    %{compat-bsd:-iwithprefixbefore ucbinclude -I/usr/ucbinclude}\""}, {"sha": "07dadb818ed25c1f676d13bd24d785f783a7c8db", "filename": "gcc/config/i386/sysv3.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ba7b41497efa87150d2325d74d130c4104593ea/gcc%2Fconfig%2Fi386%2Fsysv3.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ba7b41497efa87150d2325d74d130c4104593ea/gcc%2Fconfig%2Fi386%2Fsysv3.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsysv3.h?ref=1ba7b41497efa87150d2325d74d130c4104593ea", "patch": "@@ -34,7 +34,7 @@ Boston, MA 02111-1307, USA.  */\n \n #define CPP_PREDEFINES \"-Dunix -Asystem=svr3\"\n \n-#define CPP_SPEC \"%(cpp_cpu) %{posix:-D_POSIX_SOURCE}\"\n+#define CPP_SPEC \"%{posix:-D_POSIX_SOURCE}\"\n \n /* Writing `int' for a bitfield forces int alignment for the structure.  */\n "}, {"sha": "f877877cf23a01cb4fe274bf4037721c41d13e33", "filename": "gcc/config/i386/sysv4.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ba7b41497efa87150d2325d74d130c4104593ea/gcc%2Fconfig%2Fi386%2Fsysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ba7b41497efa87150d2325d74d130c4104593ea/gcc%2Fconfig%2Fi386%2Fsysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsysv4.h?ref=1ba7b41497efa87150d2325d74d130c4104593ea", "patch": "@@ -142,4 +142,4 @@ Boston, MA 02111-1307, USA.  */\n #endif\n \n #undef CPP_SPEC\n-#define CPP_SPEC \"%(cpp_cpu)\"\n+#define CPP_SPEC \"\""}, {"sha": "9b759f407be771ef7fbd2f171dd8e2095abf04d5", "filename": "gcc/config/i386/sysv5.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ba7b41497efa87150d2325d74d130c4104593ea/gcc%2Fconfig%2Fi386%2Fsysv5.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ba7b41497efa87150d2325d74d130c4104593ea/gcc%2Fconfig%2Fi386%2Fsysv5.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsysv5.h?ref=1ba7b41497efa87150d2325d74d130c4104593ea", "patch": "@@ -31,4 +31,4 @@ Boston, MA 02111-1307, USA.  */\n \t%{!shared:%{!symbolic:-lc -lcrt}}\"\n \n #undef CPP_SPEC\n-#define CPP_SPEC \"%(cpp_cpu) %{pthread:-D_REENTRANT} %{pthreadT:-D_REENTRANT}\"\n+#define CPP_SPEC \"%{pthread:-D_REENTRANT} %{pthreadT:-D_REENTRANT}\""}, {"sha": "b5865ac97871e0d9532fa6c1390146ba9f7086bd", "filename": "gcc/config/i386/uwin.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ba7b41497efa87150d2325d74d130c4104593ea/gcc%2Fconfig%2Fi386%2Fuwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ba7b41497efa87150d2325d74d130c4104593ea/gcc%2Fconfig%2Fi386%2Fuwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fuwin.h?ref=1ba7b41497efa87150d2325d74d130c4104593ea", "patch": "@@ -42,7 +42,7 @@ Boston, MA 02111-1307, USA.  */\n   -Asystem=winnt\"\n \n #undef CPP_SPEC\n-#define CPP_SPEC \"-remap %(cpp_cpu) %{posix:-D_POSIX_SOURCE} \\\n+#define CPP_SPEC \"-remap %{posix:-D_POSIX_SOURCE} \\\n   -include /usr/include/astwin32.h \\\n   -idirafter /usr/gnu/include/mingw32\"\n "}, {"sha": "dafe46a198fbaccc7c0c4b6ddfdf4de8ac9b21be", "filename": "gcc/config/i386/vxi386.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ba7b41497efa87150d2325d74d130c4104593ea/gcc%2Fconfig%2Fi386%2Fvxi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ba7b41497efa87150d2325d74d130c4104593ea/gcc%2Fconfig%2Fi386%2Fvxi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fvxi386.h?ref=1ba7b41497efa87150d2325d74d130c4104593ea", "patch": "@@ -36,7 +36,7 @@ Boston, MA 02111-1307, USA.  */\n  %{mcpu=pentium:-DCPU=PENTIUM -DCPU_VARIANT=PENTIUM %(cpp_586)} \\\n  %{mpentiumpro:-DCPU=PENTIUM -DCPU_VARIANT=PENTIUMPRO %(cpp_686)} \\\n  %{mcpu=pentiumpro:-DCPU=PENTIUM -DCPU_VARIANT=PENTIUMPRO %(cpp_686)} \\\n- %{!mcpu*:%{!m486:%{!mpentium*:-DCPU=I80386 %(cpp_cpu_default)}}}}\"\n+ %{!mcpu*:%{!m486:%{!mpentium*:-DCPU=I80386}}}}\"\n \n #define HANDLE_SYSV_PRAGMA\n "}, {"sha": "c03030b6d48ff0f3ec4d37339d11c4132ca16a77", "filename": "gcc/config/i386/win32.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ba7b41497efa87150d2325d74d130c4104593ea/gcc%2Fconfig%2Fi386%2Fwin32.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ba7b41497efa87150d2325d74d130c4104593ea/gcc%2Fconfig%2Fi386%2Fwin32.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fwin32.h?ref=1ba7b41497efa87150d2325d74d130c4104593ea", "patch": "@@ -74,7 +74,7 @@ Boston, MA 02111-1307, USA.  */\n                         %{mcygwin:crt0%O%s} %{pg:gcrt0%O%s}}\"\n \n #undef CPP_SPEC\n-#define CPP_SPEC \"%(cpp_cpu) %{posix:-D_POSIX_SOURCE} \\\n+#define CPP_SPEC \"%{posix:-D_POSIX_SOURCE} \\\n   %{!mcygwin:-iwithprefixbefore include/mingw32 -D__MINGW32__}    \\\n   %{mcygwin:-D__CYGWIN32__ -D__CYGWIN__}\"\n "}]}