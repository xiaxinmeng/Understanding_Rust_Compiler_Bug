{"sha": "b776bdca9322977cbb8aced2fe24ecd317a6f16b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjc3NmJkY2E5MzIyOTc3Y2JiOGFjZWQyZmUyNGVjZDMxN2E2ZjE2Yg==", "commit": {"author": {"name": "Stefan Schulze Frielinghaus", "email": "stefansf@linux.ibm.com", "date": "2020-04-26T07:42:29Z"}, "committer": {"name": "Stefan Schulze Frielinghaus", "email": "stefansf@linux.ibm.com", "date": "2020-05-05T15:33:54Z"}, "message": "c-attribs.c: Fix warning about use of uninitialized variable nunits\n\nIn function handle_vector_size_attribute local variable nunits is\nsupposed to be initialized by function type_valid_for_vector_size.\nHowever, in case ARGS is null the function may return with a non-null\nvalue and leave nunits uninitialized.  This results in warning/error:\n\ngcc/poly-int.h: In function 'tree_node* handle_vector_size_attribute(tree_node**, tree, tree, int, bool*)':\ngcc/poly-int.h:330:3: error: 'nunits' may be used uninitialized in this function [-Werror=maybe-uninitialized]\n  330 |   ((void) (&(RES).coeffs[0] == (C *) 0), \\\n      |   ^\ngcc/c-family/c-attribs.c:3695:26: note: 'nunits' was declared here\n 3695 |   unsigned HOST_WIDE_INT nunits;\n      |\n\nAdded attribute nonnull for argument args in order to silence warning\nand added an assert statement in order to check the invariant candidate.\n\ngcc/c-family/ChangeLog:\n\n2020-05-05  Stefan Schulze Frielinghaus  <stefansf@linux.ibm.com>\n\n\t* c-attribs.c (handle_vector_size_attribute): Add attribute\n\tnonnull for argument args in order to silence warning of\n\tuninitialized variable usage.  Since this is local to the\n\tcompilation unit and thus cannot be checked at call sides by the\n\tcompiler, added an assert statement in order to verify this.", "tree": {"sha": "0ca1fc14a18702374de4aeb9f6fb4cf4a890afbe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0ca1fc14a18702374de4aeb9f6fb4cf4a890afbe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b776bdca9322977cbb8aced2fe24ecd317a6f16b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b776bdca9322977cbb8aced2fe24ecd317a6f16b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b776bdca9322977cbb8aced2fe24ecd317a6f16b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b776bdca9322977cbb8aced2fe24ecd317a6f16b/comments", "author": {"login": "stefan-sf-ibm", "id": 73470131, "node_id": "MDQ6VXNlcjczNDcwMTMx", "avatar_url": "https://avatars.githubusercontent.com/u/73470131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stefan-sf-ibm", "html_url": "https://github.com/stefan-sf-ibm", "followers_url": "https://api.github.com/users/stefan-sf-ibm/followers", "following_url": "https://api.github.com/users/stefan-sf-ibm/following{/other_user}", "gists_url": "https://api.github.com/users/stefan-sf-ibm/gists{/gist_id}", "starred_url": "https://api.github.com/users/stefan-sf-ibm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stefan-sf-ibm/subscriptions", "organizations_url": "https://api.github.com/users/stefan-sf-ibm/orgs", "repos_url": "https://api.github.com/users/stefan-sf-ibm/repos", "events_url": "https://api.github.com/users/stefan-sf-ibm/events{/privacy}", "received_events_url": "https://api.github.com/users/stefan-sf-ibm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "stefan-sf-ibm", "id": 73470131, "node_id": "MDQ6VXNlcjczNDcwMTMx", "avatar_url": "https://avatars.githubusercontent.com/u/73470131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stefan-sf-ibm", "html_url": "https://github.com/stefan-sf-ibm", "followers_url": "https://api.github.com/users/stefan-sf-ibm/followers", "following_url": "https://api.github.com/users/stefan-sf-ibm/following{/other_user}", "gists_url": "https://api.github.com/users/stefan-sf-ibm/gists{/gist_id}", "starred_url": "https://api.github.com/users/stefan-sf-ibm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stefan-sf-ibm/subscriptions", "organizations_url": "https://api.github.com/users/stefan-sf-ibm/orgs", "repos_url": "https://api.github.com/users/stefan-sf-ibm/repos", "events_url": "https://api.github.com/users/stefan-sf-ibm/events{/privacy}", "received_events_url": "https://api.github.com/users/stefan-sf-ibm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "733195e367d84914cf9a35c5c78901c973f4159a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/733195e367d84914cf9a35c5c78901c973f4159a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/733195e367d84914cf9a35c5c78901c973f4159a"}], "stats": {"total": 12, "additions": 11, "deletions": 1}, "files": [{"sha": "fe6cfe721165f563686cb3b245b8667ae9a368c6", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b776bdca9322977cbb8aced2fe24ecd317a6f16b/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b776bdca9322977cbb8aced2fe24ecd317a6f16b/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=b776bdca9322977cbb8aced2fe24ecd317a6f16b", "patch": "@@ -1,3 +1,11 @@\n+2020-05-05  Stefan Schulze Frielinghaus  <stefansf@linux.ibm.com>\n+\n+\t* c-attribs.c (handle_vector_size_attribute): Add attribute\n+\tnonnull for argument args in order to silence warning of\n+\tuninitialized variable usage.  Since this is local to the\n+\tcompilation unit and thus cannot be checked at call sides by the\n+\tcompiler, added an assert statement in order to verify this.\n+\n 2020-05-01  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR target/93492"}, {"sha": "7a6fb9af6dae5c9be97007b07bc2ad55773a09eb", "filename": "gcc/c-family/c-attribs.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b776bdca9322977cbb8aced2fe24ecd317a6f16b/gcc%2Fc-family%2Fc-attribs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b776bdca9322977cbb8aced2fe24ecd317a6f16b/gcc%2Fc-family%2Fc-attribs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-attribs.c?ref=b776bdca9322977cbb8aced2fe24ecd317a6f16b", "patch": "@@ -117,7 +117,7 @@ static tree handle_tm_attribute (tree *, tree, tree, int, bool *);\n static tree handle_tm_wrap_attribute (tree *, tree, tree, int, bool *);\n static tree handle_novops_attribute (tree *, tree, tree, int, bool *);\n static tree handle_vector_size_attribute (tree *, tree, tree, int,\n-\t\t\t\t\t  bool *);\n+\t\t\t\t\t  bool *) ATTRIBUTE_NONNULL(3);\n static tree handle_nonnull_attribute (tree *, tree, tree, int, bool *);\n static tree handle_nonstring_attribute (tree *, tree, tree, int, bool *);\n static tree handle_nothrow_attribute (tree *, tree, tree, int, bool *);\n@@ -3697,6 +3697,8 @@ handle_vector_size_attribute (tree *node, tree name, tree args,\n   if (!type)\n     return NULL_TREE;\n \n+  gcc_checking_assert (args != NULL);\n+\n   tree new_type = build_vector_type (type, nunits);\n \n   /* Build back pointers if needed.  */"}]}