{"sha": "8fbe3bb2efdc6803b1509acd7224259cef455e52", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGZiZTNiYjJlZmRjNjgwM2IxNTA5YWNkNzIyNDI1OWNlZjQ1NWU1Mg==", "commit": {"author": {"name": "David Edelsohn", "email": "edelsohn@gnu.org", "date": "2006-02-07T18:36:23Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2006-02-07T18:36:23Z"}, "message": "invoke.texi (xl-compat): Document conversion and support routine names.\n\n\t* doc/invoke.texi (xl-compat): Document conversion and support\n\troutine names.\n\nFrom-SVN: r110706", "tree": {"sha": "72aa019abc73ade5fd3b5471b8007310ec10bd09", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/72aa019abc73ade5fd3b5471b8007310ec10bd09"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8fbe3bb2efdc6803b1509acd7224259cef455e52", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8fbe3bb2efdc6803b1509acd7224259cef455e52", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8fbe3bb2efdc6803b1509acd7224259cef455e52", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8fbe3bb2efdc6803b1509acd7224259cef455e52/comments", "author": null, "committer": null, "parents": [{"sha": "2090d6a0a845c58a3c5ed6c4260db5c178ec5511", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2090d6a0a845c58a3c5ed6c4260db5c178ec5511", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2090d6a0a845c58a3c5ed6c4260db5c178ec5511"}], "stats": {"total": 21, "additions": 14, "deletions": 7}, "files": [{"sha": "850235e58c916cd034e9d24860c8a8f6c1987164", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fbe3bb2efdc6803b1509acd7224259cef455e52/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fbe3bb2efdc6803b1509acd7224259cef455e52/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8fbe3bb2efdc6803b1509acd7224259cef455e52", "patch": "@@ -1,3 +1,8 @@\n+2006-02-07  David Edelsohn  <edelsohn@gnu.org>\n+\n+\t* doc/invoke.texi (xl-compat): Document conversion and support\n+\troutine names.\n+\n 2006-02-07  Jeff Law  <law@redhat.com>\n \n \t* tree-vrp.c (find_conditional_asserts): Update comments."}, {"sha": "f9b65f8fd25a94da31868a864f7828d74301cda9", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fbe3bb2efdc6803b1509acd7224259cef455e52/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fbe3bb2efdc6803b1509acd7224259cef455e52/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=8fbe3bb2efdc6803b1509acd7224259cef455e52", "patch": "@@ -11247,20 +11247,22 @@ implies @option{-mno-powerpc64}.  GCC defaults to @option{-maix32}.\n @itemx -mno-xl-compat\n @opindex mxl-compat\n @opindex mno-xl-compat\n-Produce code that conforms more closely to IBM XLC semantics when using\n-AIX-compatible ABI.  Pass floating-point arguments to prototyped\n-functions beyond the register save area (RSA) on the stack in addition\n-to argument FPRs.  Do not assume that most significant double in 128\n-bit long double value is properly rounded when comparing values.\n+Produce code that conforms more closely to IBM XL compiler semantics\n+when using AIX-compatible ABI.  Pass floating-point arguments to\n+prototyped functions beyond the register save area (RSA) on the stack\n+in addition to argument FPRs.  Do not assume that most significant\n+double in 128-bit long double value is properly rounded when comparing\n+values and converting to double.  Use XL symbol names for long double\n+support routines.\n \n The AIX calling convention was extended but not initially documented to\n handle an obscure K&R C case of calling a function that takes the\n-address of its arguments with fewer arguments than declared.  AIX XL\n+address of its arguments with fewer arguments than declared.  IBM XL\n compilers access floating point arguments which do not fit in the\n RSA from the stack when a subroutine is compiled without\n optimization.  Because always storing floating-point arguments on the\n stack is inefficient and rarely needed, this option is not enabled by\n-default and only is necessary when calling subroutines compiled by AIX\n+default and only is necessary when calling subroutines compiled by IBM\n XL compilers without optimization.\n \n @item -mpe"}]}