{"sha": "e9cfc9b5f4d7eca860c207ee89ad7ca0b24e481e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTljZmM5YjVmNGQ3ZWNhODYwYzIwN2VlODlhZDdjYTBiMjRlNDgxZQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2009-10-02T20:30:59Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2009-10-02T20:30:59Z"}, "message": "decl.c (gnat_to_gnu_entity): Generate an XVZ variable alongside the XVS type if the size is not constant.\n\n\t* gcc-interface/decl.c (gnat_to_gnu_entity) <E_Record_Subtype>:\n\tGenerate an XVZ variable alongside the XVS type if the size is\n\tnot constant.\n\t(maybe_pad_type): Minor tweak.\n\nFrom-SVN: r152420", "tree": {"sha": "49360cadfb9b84cb9d259b83cac115f61b911bee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/49360cadfb9b84cb9d259b83cac115f61b911bee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e9cfc9b5f4d7eca860c207ee89ad7ca0b24e481e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9cfc9b5f4d7eca860c207ee89ad7ca0b24e481e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9cfc9b5f4d7eca860c207ee89ad7ca0b24e481e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9cfc9b5f4d7eca860c207ee89ad7ca0b24e481e/comments", "author": null, "committer": null, "parents": [{"sha": "ad4677300609cb5013481c5d0902da1ffda1ccc6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad4677300609cb5013481c5d0902da1ffda1ccc6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad4677300609cb5013481c5d0902da1ffda1ccc6"}], "stats": {"total": 23, "additions": 19, "deletions": 4}, "files": [{"sha": "6520a7f46810757660db1d429ad69e6ddcdc7807", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9cfc9b5f4d7eca860c207ee89ad7ca0b24e481e/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9cfc9b5f4d7eca860c207ee89ad7ca0b24e481e/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=e9cfc9b5f4d7eca860c207ee89ad7ca0b24e481e", "patch": "@@ -1,3 +1,10 @@\n+2009-10-02  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/decl.c (gnat_to_gnu_entity) <E_Record_Subtype>:\n+\tGenerate an XVZ variable alongside the XVS type if the size is\n+\tnot constant.\n+\t(maybe_pad_type): Minor tweak.\n+\n 2009-10-02  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/decl.c (check_ok_for_atomic): Do nothing if the type"}, {"sha": "f2f0f159abd29b182838a865ddafdd130585a7e5", "filename": "gcc/ada/gcc-interface/decl.c", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9cfc9b5f4d7eca860c207ee89ad7ca0b24e481e/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9cfc9b5f4d7eca860c207ee89ad7ca0b24e481e/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fdecl.c?ref=e9cfc9b5f4d7eca860c207ee89ad7ca0b24e481e", "patch": "@@ -3212,13 +3212,14 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, int definition)\n \t      /* Fill in locations of fields.  */\n \t      annotate_rep (gnat_entity, gnu_type);\n \n-\t      /* We've built a new type, make an XVS type to show what this\n-\t\t is a subtype of.  Some debuggers require the XVS type to be\n-\t\t output first, so do it in that order.  */\n+\t      /* If debugging information is being written for the type, write\n+\t\t a record that shows what we are a subtype of and also make a\n+\t\t variable that indicates our size, if still variable.  */\n \t      if (debug_info_p)\n \t\t{\n \t\t  tree gnu_subtype_marker = make_node (RECORD_TYPE);\n \t\t  tree gnu_unpad_base_name = TYPE_NAME (gnu_unpad_base_type);\n+\t\t  tree gnu_size_unit = TYPE_SIZE_UNIT (gnu_type);\n \n \t\t  if (TREE_CODE (gnu_unpad_base_name) == TYPE_DECL)\n \t\t    gnu_unpad_base_name = DECL_NAME (gnu_unpad_base_name);\n@@ -3236,6 +3237,13 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, int definition)\n \n \t\t  add_parallel_type (TYPE_STUB_DECL (gnu_type),\n \t\t\t\t     gnu_subtype_marker);\n+\n+\t\t  if (definition\n+\t\t      && TREE_CODE (gnu_size_unit) != INTEGER_CST\n+\t\t      && !CONTAINS_PLACEHOLDER_P (gnu_size_unit))\n+\t\t    create_var_decl (create_concat_name (gnat_entity, \"XVZ\"),\n+\t\t\t\t     NULL_TREE, sizetype, gnu_size_unit, false,\n+\t\t\t\t     false, false, false, NULL, gnat_entity);\n \t\t}\n \n \t      /* Now we can finalize it.  */\n@@ -6201,7 +6209,7 @@ maybe_pad_type (tree type, tree size, unsigned int align,\n \n       add_parallel_type (TYPE_STUB_DECL (record), marker);\n \n-      if (size && TREE_CODE (size) != INTEGER_CST && definition)\n+      if (definition && size && TREE_CODE (size) != INTEGER_CST)\n \tcreate_var_decl (concat_name (name, \"XVZ\"), NULL_TREE, sizetype,\n \t\t\t TYPE_SIZE_UNIT (record), false, false, false,\n \t\t\t false, NULL, gnat_entity);"}]}