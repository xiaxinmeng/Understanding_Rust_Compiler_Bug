{"sha": "d269f788e8e54567a223e49af95b266601285ba9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDI2OWY3ODhlOGU1NDU2N2EyMjNlNDlhZjk1YjI2NjYwMTI4NWJhOQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2011-11-04T17:51:20Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2011-11-04T17:51:20Z"}, "message": "typeck.c (build_indirect_ref): Use ATTRIBUTE_UNUSED.\n\n2011-11-04  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* typeck.c (build_indirect_ref): Use ATTRIBUTE_UNUSED.\n\t* mangle.c (write_unnamed_type_name): Likewise.\n\nFrom-SVN: r180970", "tree": {"sha": "46c8c95b89a198bf23e0215ef4482224c301293d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/46c8c95b89a198bf23e0215ef4482224c301293d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d269f788e8e54567a223e49af95b266601285ba9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d269f788e8e54567a223e49af95b266601285ba9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d269f788e8e54567a223e49af95b266601285ba9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d269f788e8e54567a223e49af95b266601285ba9/comments", "author": null, "committer": null, "parents": [{"sha": "669cc68c376f9caa8ed5ab7f62bc757fa8d096cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/669cc68c376f9caa8ed5ab7f62bc757fa8d096cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/669cc68c376f9caa8ed5ab7f62bc757fa8d096cb"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "2a1db7abdc2d459b6103089a1c9403ac56ea78a8", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d269f788e8e54567a223e49af95b266601285ba9/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d269f788e8e54567a223e49af95b266601285ba9/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=d269f788e8e54567a223e49af95b266601285ba9", "patch": "@@ -1,4 +1,9 @@\n-2011-10-09  Magnus Fromreide  <magfr@lysator.liu.se>\n+2011-11-04  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* typeck.c (build_indirect_ref): Use ATTRIBUTE_UNUSED.\n+\t* mangle.c (write_unnamed_type_name): Likewise.\n+\n+2011-11-04  Magnus Fromreide  <magfr@lysator.liu.se>\n \n         * parser.c (cp_parser_enumerator_list): Do not warn about\n         trailing commas in C++0x mode."}, {"sha": "548998a086f988af0834806deb9413153a66ef37", "filename": "gcc/cp/mangle.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d269f788e8e54567a223e49af95b266601285ba9/gcc%2Fcp%2Fmangle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d269f788e8e54567a223e49af95b266601285ba9/gcc%2Fcp%2Fmangle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmangle.c?ref=d269f788e8e54567a223e49af95b266601285ba9", "patch": "@@ -1339,7 +1339,7 @@ nested_anon_class_index (tree type)\n /* <unnamed-type-name> ::= Ut [ <nonnegative number> ] _ */\n \n static void\n-write_unnamed_type_name (const tree type __attribute__ ((__unused__)))\n+write_unnamed_type_name (const tree type ATTRIBUTE_UNUSED)\n {\n   int discriminator;\n   MANGLE_TRACE_TREE (\"unnamed-type-name\", type);"}, {"sha": "f4e45b4f034ceb18a46a83c82c47ecea6a3a249c", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d269f788e8e54567a223e49af95b266601285ba9/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d269f788e8e54567a223e49af95b266601285ba9/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=d269f788e8e54567a223e49af95b266601285ba9", "patch": "@@ -2726,7 +2726,7 @@ build_x_indirect_ref (tree expr, ref_operator errorstring,\n \n /* Helper function called from c-common.  */\n tree\n-build_indirect_ref (location_t loc __attribute__ ((__unused__)),\n+build_indirect_ref (location_t loc ATTRIBUTE_UNUSED,\n \t\t    tree ptr, ref_operator errorstring)\n {\n   return cp_build_indirect_ref (ptr, errorstring, tf_warning_or_error);"}]}