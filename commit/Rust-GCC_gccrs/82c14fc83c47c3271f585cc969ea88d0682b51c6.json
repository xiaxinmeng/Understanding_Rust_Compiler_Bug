{"sha": "82c14fc83c47c3271f585cc969ea88d0682b51c6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODJjMTRmYzgzYzQ3YzMyNzFmNTg1Y2M5NjllYTg4ZDA2ODJiNTFjNg==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-09-30T22:42:04Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-09-30T22:42:04Z"}, "message": "entered into RCS\n\nFrom-SVN: r2288", "tree": {"sha": "0360654a559957e89c1b329e8b2090956e01e888", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0360654a559957e89c1b329e8b2090956e01e888"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/82c14fc83c47c3271f585cc969ea88d0682b51c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82c14fc83c47c3271f585cc969ea88d0682b51c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82c14fc83c47c3271f585cc969ea88d0682b51c6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82c14fc83c47c3271f585cc969ea88d0682b51c6/comments", "author": null, "committer": null, "parents": [{"sha": "b0375d839d178e3c350e85c4f39ca305de1b7dec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0375d839d178e3c350e85c4f39ca305de1b7dec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b0375d839d178e3c350e85c4f39ca305de1b7dec"}], "stats": {"total": 55, "additions": 55, "deletions": 0}, "files": [{"sha": "899a73926853ce47a8e6631fa8b33dfa6317eb5f", "filename": "gcc/config/m68k/dpx2.ifile", "status": "added", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c14fc83c47c3271f585cc969ea88d0682b51c6/gcc%2Fconfig%2Fm68k%2Fdpx2.ifile", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c14fc83c47c3271f585cc969ea88d0682b51c6/gcc%2Fconfig%2Fm68k%2Fdpx2.ifile", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fdpx2.ifile?ref=82c14fc83c47c3271f585cc969ea88d0682b51c6", "patch": "@@ -0,0 +1,55 @@\n+/*\n+ *      dpx2.ifile - for collectless G++ on Bull DPX/2\n+ *\t\n+ *      Peter Schauer <Peter.Schauer@regent.e-technik.tu-muenchen.dbp.de>\n+ *\n+ *      Install this file as $prefix/gcc-lib/dpx2/VERSION/gcc.ifile\n+ *\tand comment out the lines refering to COLLECT at the top\n+ *      of Makefile before building GCC.\n+ *\t\n+ *      This file has been tested with gcc-2.2.2 on a DPX/2 340\n+ *      running BOS 2.00.45, if it doesn't work for you, stick\n+ *      with collect.\n+ *\t--sjg\n+ */\n+/*\n+ *\tIfile to link with memory configured at 0.\n+ *\tBLOCK to an offset that leaves room for many headers ( the value\n+ *\there allows for a file header, an outheader, and up to 11 section \n+ *\theaders on most systems.\n+ *\tBIND to an address that excludes page 0 from being mapped. The value\n+ *\tused for BLOCK should be or'd into this value. Here I'm setting BLOCK\n+ *\tto 0x200 and BIND to ( 0x100000 | value_used_for(BLOCK) )\n+ *\tIf you are using shared libraries, watch that you don't overlap the\n+ *\taddress ranges assigned for shared libs.\n+ *\n+ *\tGROUP BIND to a location in the next segment.  Here, the only value\n+ *\tthat you should change (I think) is that within NEXT, which I've set\n+ *\tto my hardware segment size. You can always use a larger size, but not\n+ *\ta smaller one.\n+ */\n+SECTIONS\n+{\n+\t.text BIND(0x100200) BLOCK (0x200) :\n+\t{\n+\t\t /* plenty of room for headers */\n+\t\t*(.init)\n+\t\t*(.text)\n+\t\t_vfork = _fork; /* I got tired of editing peoples sloppy code */\n+\t\t*(.fini)\n+\t}\n+\tGROUP BIND( NEXT(0x100000) + (ADDR(.text) + (SIZEOF(.text)) % 0x1000)):\n+\t{\n+\t\t\t.data : {\n+\t\t\t\t___CTOR_LIST__ = . ; \n+\t\t\t\t. += 4 ;\t/* leading NULL */\n+\t\t\t\t*(.ctor) \n+\t\t\t\t. += 4 ;\t/* trailing NULL */\n+\t\t\t\t___DTOR_LIST__ = . ;\n+\t\t\t\t. += 4 ;\t/* leading NULL */\n+\t\t\t\t*(.dtor) \n+\t\t\t\t. += 4 ; \t/* trailing NULL */\n+\t\t\t }\n+\t\t\t.bss : { }\n+\t}\n+}"}]}