{"sha": "c3d80041a3c3f1caa403cc6d9000b2ed10f7dedf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzNkODAwNDFhM2MzZjFjYWE0MDNjYzZkOTAwMGIyZWQxMGY3ZGVkZg==", "commit": {"author": {"name": "Ovidiu Predescu", "email": "ovidiu@gcc.gnu.org", "date": "2000-08-10T07:10:23Z"}, "committer": {"name": "Ovidiu Predescu", "email": "ovidiu@gcc.gnu.org", "date": "2000-08-10T07:10:23Z"}, "message": "Check for the <sched.h> header file.\n\nFrom-SVN: r35598", "tree": {"sha": "090ab686c16e6b190020ae82a87d8e7dda2723ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/090ab686c16e6b190020ae82a87d8e7dda2723ab"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c3d80041a3c3f1caa403cc6d9000b2ed10f7dedf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3d80041a3c3f1caa403cc6d9000b2ed10f7dedf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3d80041a3c3f1caa403cc6d9000b2ed10f7dedf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3d80041a3c3f1caa403cc6d9000b2ed10f7dedf/comments", "author": null, "committer": null, "parents": [{"sha": "3ef5f28679a387f258e39aea208040a08e5036fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ef5f28679a387f258e39aea208040a08e5036fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ef5f28679a387f258e39aea208040a08e5036fc"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "05d495dc71f83016ab553495df5435867abb2312", "filename": "gcc/configure", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3d80041a3c3f1caa403cc6d9000b2ed10f7dedf/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3d80041a3c3f1caa403cc6d9000b2ed10f7dedf/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=c3d80041a3c3f1caa403cc6d9000b2ed10f7dedf", "patch": "@@ -1484,7 +1484,7 @@ for ac_kw in inline __inline__ __inline; do\n #include \"confdefs.h\"\n \n int main() {\n-} int $ac_kw foo() {\n+} $ac_kw foo() {\n ; return 0; }\n EOF\n if { (eval echo configure:1491: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n@@ -1514,7 +1514,7 @@ esac\n \n \n # Find some useful tools\n-for ac_prog in mawk gawk nawk awk\n+for ac_prog in gawk mawk nawk awk\n do\n # Extract the first word of \"$ac_prog\", so it can be a program name with args.\n set dummy $ac_prog; ac_word=$2\n@@ -2147,7 +2147,7 @@ fi\n for ac_hdr in limits.h stddef.h string.h strings.h stdlib.h time.h \\\n \t\t fcntl.h unistd.h stab.h sys/file.h sys/time.h \\\n \t\t sys/resource.h sys/param.h sys/times.h sys/stat.h \\\n-\t\t direct.h malloc.h\n+\t\t direct.h malloc.h sched.h\n do\n ac_safe=`echo \"$ac_hdr\" | sed 'y%./+-%__p_%'`\n echo $ac_n \"checking for $ac_hdr\"\"... $ac_c\" 1>&6\n@@ -7157,7 +7157,7 @@ else\n int main() {\n \n /* Ultrix mips cc rejects this.  */\n-typedef int charset[2]; const charset x = {0,0};\n+typedef int charset[2]; const charset x;\n /* SunOS 4.1.1 cc rejects this.  */\n char const *const *ccp;\n char **p;\n@@ -7298,7 +7298,7 @@ else\n #include \"confdefs.h\"\n #include <alloca.h>\n int main() {\n-void *p = alloca(2 * sizeof(int));\n+char *p = alloca(2 * sizeof(int));\n ; return 0; }\n EOF\n if { (eval echo configure:7305: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then"}, {"sha": "2962e6431198f9a5f2491997ba97ad0a11590df9", "filename": "gcc/configure.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3d80041a3c3f1caa403cc6d9000b2ed10f7dedf/gcc%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3d80041a3c3f1caa403cc6d9000b2ed10f7dedf/gcc%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.in?ref=c3d80041a3c3f1caa403cc6d9000b2ed10f7dedf", "patch": "@@ -401,7 +401,7 @@ AC_HEADER_SYS_WAIT\n AC_CHECK_HEADERS(limits.h stddef.h string.h strings.h stdlib.h time.h \\\n \t\t fcntl.h unistd.h stab.h sys/file.h sys/time.h \\\n \t\t sys/resource.h sys/param.h sys/times.h sys/stat.h \\\n-\t\t direct.h malloc.h)\n+\t\t direct.h malloc.h sched.h)\n \n # Check for thread headers.\n AC_CHECK_HEADER(thread.h, [have_thread_h=yes], [have_thread_h=])"}]}