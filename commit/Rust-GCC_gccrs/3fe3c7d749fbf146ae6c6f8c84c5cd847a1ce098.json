{"sha": "3fe3c7d749fbf146ae6c6f8c84c5cd847a1ce098", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2ZlM2M3ZDc0OWZiZjE0NmFlNmM2ZjhjODRjNWNkODQ3YTFjZTA5OA==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "iant@golang.org", "date": "2018-01-25T02:24:45Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2018-01-25T02:24:45Z"}, "message": "re PR other/68239 (libbacktrace allocation is sometimes very slow)\n\n\tPR other/68239\n\t* mmap.c (backtrace_free_locked): Don't put more than 16 entries\n\ton the free list.\n\nFrom-SVN: r257039", "tree": {"sha": "b6c670fd5e3baa2ea92271a39300c2b0a26f7074", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b6c670fd5e3baa2ea92271a39300c2b0a26f7074"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3fe3c7d749fbf146ae6c6f8c84c5cd847a1ce098", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3fe3c7d749fbf146ae6c6f8c84c5cd847a1ce098", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3fe3c7d749fbf146ae6c6f8c84c5cd847a1ce098", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3fe3c7d749fbf146ae6c6f8c84c5cd847a1ce098/comments", "author": {"login": "ianlancetaylor", "id": 3194333, "node_id": "MDQ6VXNlcjMxOTQzMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/3194333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianlancetaylor", "html_url": "https://github.com/ianlancetaylor", "followers_url": "https://api.github.com/users/ianlancetaylor/followers", "following_url": "https://api.github.com/users/ianlancetaylor/following{/other_user}", "gists_url": "https://api.github.com/users/ianlancetaylor/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianlancetaylor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianlancetaylor/subscriptions", "organizations_url": "https://api.github.com/users/ianlancetaylor/orgs", "repos_url": "https://api.github.com/users/ianlancetaylor/repos", "events_url": "https://api.github.com/users/ianlancetaylor/events{/privacy}", "received_events_url": "https://api.github.com/users/ianlancetaylor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "533277ba752b9f89c3938571b21a1e70f050e94d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/533277ba752b9f89c3938571b21a1e70f050e94d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/533277ba752b9f89c3938571b21a1e70f050e94d"}], "stats": {"total": 30, "additions": 29, "deletions": 1}, "files": [{"sha": "2d89ea1dd6c772a0e537f8a9d274c5b96625e070", "filename": "libbacktrace/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fe3c7d749fbf146ae6c6f8c84c5cd847a1ce098/libbacktrace%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fe3c7d749fbf146ae6c6f8c84c5cd847a1ce098/libbacktrace%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2FChangeLog?ref=3fe3c7d749fbf146ae6c6f8c84c5cd847a1ce098", "patch": "@@ -1,3 +1,9 @@\n+2018-01-24  Ian Lance Taylor  <iant@golang.org>\n+\n+\tPR other/68239\n+\t* mmap.c (backtrace_free_locked): Don't put more than 16 entries\n+\ton the free list.\n+\n 2018-01-19  Tony Reix  <tony.reix@atos.net>\n \n \t* xcoff.c (xcoff_incl_compare): New function."}, {"sha": "32fcba6239927f19ed36f0f2a4fec63a92457e77", "filename": "libbacktrace/mmap.c", "status": "modified", "additions": 23, "deletions": 1, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fe3c7d749fbf146ae6c6f8c84c5cd847a1ce098/libbacktrace%2Fmmap.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fe3c7d749fbf146ae6c6f8c84c5cd847a1ce098/libbacktrace%2Fmmap.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2Fmmap.c?ref=3fe3c7d749fbf146ae6c6f8c84c5cd847a1ce098", "patch": "@@ -69,11 +69,33 @@ struct backtrace_freelist_struct\n static void\n backtrace_free_locked (struct backtrace_state *state, void *addr, size_t size)\n {\n-  /* Just leak small blocks.  We don't have to be perfect.  */\n+  /* Just leak small blocks.  We don't have to be perfect.  Don't put\n+     more than 16 entries on the free list, to avoid wasting time\n+     searching when allocating a block.  If we have more than 16\n+     entries, leak the smallest entry.  */\n+\n   if (size >= sizeof (struct backtrace_freelist_struct))\n     {\n+      size_t c;\n+      struct backtrace_freelist_struct **ppsmall;\n+      struct backtrace_freelist_struct **pp;\n       struct backtrace_freelist_struct *p;\n \n+      c = 0;\n+      ppsmall = NULL;\n+      for (pp = &state->freelist; *pp != NULL; pp = &(*pp)->next)\n+\t{\n+\t  if (ppsmall == NULL || (*pp)->size < (*ppsmall)->size)\n+\t    ppsmall = pp;\n+\t  ++c;\n+\t}\n+      if (c >= 16)\n+\t{\n+\t  if (size <= (*ppsmall)->size)\n+\t    return;\n+\t  *ppsmall = (*ppsmall)->next;\n+\t}\n+\n       p = (struct backtrace_freelist_struct *) addr;\n       p->next = state->freelist;\n       p->size = size;"}]}