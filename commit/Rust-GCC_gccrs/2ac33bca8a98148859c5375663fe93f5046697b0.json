{"sha": "2ac33bca8a98148859c5375663fe93f5046697b0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmFjMzNiY2E4YTk4MTQ4ODU5YzUzNzU2NjNmZTkzZjUwNDY2OTdiMA==", "commit": {"author": {"name": "Cesar Philippidis", "email": "cesar@codesourcery.com", "date": "2015-10-30T22:16:52Z"}, "committer": {"name": "Cesar Philippidis", "email": "cesar@gcc.gnu.org", "date": "2015-10-30T22:16:52Z"}, "message": "gfortran.h (gfc_omp_namespace): Add locus where member.\n\n\tgcc/fortran/\n\t* gfortran.h (gfc_omp_namespace): Add locus where member.\n\t* openmp.c (gfc_match_omp_variable_list): Set where for each list\n\titem found.\n\t(resolve_omp_clauses): Remove where argument and use the where\n\tgfc_omp_namespace member when reporting errors.\n\t(resolve_omp_do):  Update call to resolve_omp_clauses.\n\t(resolve_oacc_loop): Likewise.\n\t(gfc_resolve_oacc_directive): Likewise.\n\t(gfc_resolve_omp_directive): Likewise.\n\t(gfc_resolve_omp_declare_simd): Likewise.\n\n\tgcc/testsuite/\n\t* gfortran.dg/gomp/intentin1.f90: Adjust copyprivate warning.\n\nFrom-SVN: r229609", "tree": {"sha": "1d368a526c50f0c5afdede93a03f934951145411", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1d368a526c50f0c5afdede93a03f934951145411"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2ac33bca8a98148859c5375663fe93f5046697b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ac33bca8a98148859c5375663fe93f5046697b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ac33bca8a98148859c5375663fe93f5046697b0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ac33bca8a98148859c5375663fe93f5046697b0/comments", "author": {"login": "cesarjp", "id": 4576177, "node_id": "MDQ6VXNlcjQ1NzYxNzc=", "avatar_url": "https://avatars.githubusercontent.com/u/4576177?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cesarjp", "html_url": "https://github.com/cesarjp", "followers_url": "https://api.github.com/users/cesarjp/followers", "following_url": "https://api.github.com/users/cesarjp/following{/other_user}", "gists_url": "https://api.github.com/users/cesarjp/gists{/gist_id}", "starred_url": "https://api.github.com/users/cesarjp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cesarjp/subscriptions", "organizations_url": "https://api.github.com/users/cesarjp/orgs", "repos_url": "https://api.github.com/users/cesarjp/repos", "events_url": "https://api.github.com/users/cesarjp/events{/privacy}", "received_events_url": "https://api.github.com/users/cesarjp/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2631d4eb87db704196d57f53729e596a645e9b6d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2631d4eb87db704196d57f53729e596a645e9b6d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2631d4eb87db704196d57f53729e596a645e9b6d"}], "stats": {"total": 135, "additions": 77, "deletions": 58}, "files": [{"sha": "8b180ab98d861c66b8897db947d6494c8041a45d", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ac33bca8a98148859c5375663fe93f5046697b0/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ac33bca8a98148859c5375663fe93f5046697b0/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=2ac33bca8a98148859c5375663fe93f5046697b0", "patch": "@@ -1,3 +1,16 @@\n+2015-10-30  Cesar Philippidis  <cesar@codesourcery.com>\n+\n+\t* gfortran.h (gfc_omp_namespace): Add locus where member.\n+\t* openmp.c (gfc_match_omp_variable_list): Set where for each list\n+\titem found.\n+\t(resolve_omp_clauses): Remove where argument and use the where\n+\tgfc_omp_namespace member when reporting errors.\n+\t(resolve_omp_do):  Update call to resolve_omp_clauses.\n+\t(resolve_oacc_loop): Likewise.\n+\t(gfc_resolve_oacc_directive): Likewise.\n+\t(gfc_resolve_omp_directive): Likewise.\n+\t(gfc_resolve_omp_declare_simd): Likewise.\n+\n 2015-10-15  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \tPR fortran/51993"}, {"sha": "13e730f41b7fd241170d441d013de3f2cd682d76", "filename": "gcc/fortran/gfortran.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ac33bca8a98148859c5375663fe93f5046697b0/gcc%2Ffortran%2Fgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ac33bca8a98148859c5375663fe93f5046697b0/gcc%2Ffortran%2Fgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.h?ref=2ac33bca8a98148859c5375663fe93f5046697b0", "patch": "@@ -1123,6 +1123,7 @@ typedef struct gfc_omp_namelist\n     } u;\n   struct gfc_omp_namelist_udr *udr;\n   struct gfc_omp_namelist *next;\n+  locus where;\n }\n gfc_omp_namelist;\n "}, {"sha": "3fd19b82fa14604e779e07c37274d357b7f8993c", "filename": "gcc/fortran/openmp.c", "status": "modified", "additions": 57, "deletions": 56, "changes": 113, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ac33bca8a98148859c5375663fe93f5046697b0/gcc%2Ffortran%2Fopenmp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ac33bca8a98148859c5375663fe93f5046697b0/gcc%2Ffortran%2Fopenmp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fopenmp.c?ref=2ac33bca8a98148859c5375663fe93f5046697b0", "patch": "@@ -244,6 +244,7 @@ gfc_match_omp_variable_list (const char *str, gfc_omp_namelist **list,\n \t    }\n \t  tail->sym = sym;\n \t  tail->expr = expr;\n+\t  tail->where = cur_loc;\n \t  goto next_item;\n \tcase MATCH_NO:\n \t  break;\n@@ -278,6 +279,7 @@ gfc_match_omp_variable_list (const char *str, gfc_omp_namelist **list,\n \t      tail = tail->next;\n \t    }\n \t  tail->sym = sym;\n+\t  tail->where = cur_loc;\n \t}\n \n     next_item:\n@@ -2860,9 +2862,8 @@ oacc_compatible_clauses (gfc_omp_clauses *clauses, int list,\n /* OpenMP directive resolving routines.  */\n \n static void\n-resolve_omp_clauses (gfc_code *code, locus *where,\n-\t\t     gfc_omp_clauses *omp_clauses, gfc_namespace *ns,\n-\t\t     bool openacc = false)\n+resolve_omp_clauses (gfc_code *code, gfc_omp_clauses *omp_clauses,\n+\t\t     gfc_namespace *ns, bool openacc = false)\n {\n   gfc_omp_namelist *n;\n   gfc_expr_list *el;\n@@ -2921,7 +2922,7 @@ resolve_omp_clauses (gfc_code *code, locus *where,\n \t  {\n \t    if (!code && (!n->sym->attr.dummy || n->sym->ns != ns))\n \t      gfc_error (\"Variable %qs is not a dummy argument at %L\",\n-\t\t\t n->sym->name, where);\n+\t\t\t n->sym->name, n->where);\n \t    continue;\n \t  }\n \tif (n->sym->attr.flavor == FL_PROCEDURE\n@@ -2953,7 +2954,7 @@ resolve_omp_clauses (gfc_code *code, locus *where,\n \t      }\n \t  }\n \tgfc_error (\"Object %qs is not a variable at %L\", n->sym->name,\n-\t\t   where);\n+\t\t   &n->where);\n       }\n \n   for (list = 0; list < OMP_LIST_NUM; list++)\n@@ -2969,7 +2970,7 @@ resolve_omp_clauses (gfc_code *code, locus *where,\n \t  if (n->sym->mark && !oacc_compatible_clauses (omp_clauses, list,\n \t\t\t\t\t\t\tn->sym, openacc))\n \t    gfc_error (\"Symbol %qs present on multiple clauses at %L\",\n-\t\t       n->sym->name, where);\n+\t\t       n->sym->name, &n->where);\n \t  else\n \t    n->sym->mark = 1;\n \t}\n@@ -2980,15 +2981,15 @@ resolve_omp_clauses (gfc_code *code, locus *where,\n       if (n->sym->mark)\n \t{\n \t  gfc_error (\"Symbol %qs present on multiple clauses at %L\",\n-\t\t     n->sym->name, where);\n+\t\t     n->sym->name, &n->where);\n \t  n->sym->mark = 0;\n \t}\n \n   for (n = omp_clauses->lists[OMP_LIST_FIRSTPRIVATE]; n; n = n->next)\n     {\n       if (n->sym->mark)\n \tgfc_error (\"Symbol %qs present on multiple clauses at %L\",\n-\t\t   n->sym->name, where);\n+\t\t   n->sym->name, &n->where);\n       else\n \tn->sym->mark = 1;\n     }\n@@ -2999,7 +3000,7 @@ resolve_omp_clauses (gfc_code *code, locus *where,\n     {\n       if (n->sym->mark)\n \tgfc_error (\"Symbol %qs present on multiple clauses at %L\",\n-\t\t   n->sym->name, where);\n+\t\t   n->sym->name, &n->where);\n       else\n \tn->sym->mark = 1;\n     }\n@@ -3011,7 +3012,7 @@ resolve_omp_clauses (gfc_code *code, locus *where,\n     {\n       if (n->sym->mark)\n \tgfc_error (\"Symbol %qs present on multiple clauses at %L\",\n-\t\t   n->sym->name, where);\n+\t\t   n->sym->name, &n->where);\n       else\n \tn->sym->mark = 1;\n     }\n@@ -3025,7 +3026,7 @@ resolve_omp_clauses (gfc_code *code, locus *where,\n     {\n       if (n->expr == NULL && n->sym->mark)\n \tgfc_error (\"Symbol %qs present on both FROM and TO clauses at %L\",\n-\t\t   n->sym->name, where);\n+\t\t   n->sym->name, &n->where);\n       else\n \tn->sym->mark = 1;\n     }\n@@ -3047,32 +3048,32 @@ resolve_omp_clauses (gfc_code *code, locus *where,\n \t      {\n \t\tif (!n->sym->attr.threadprivate)\n \t\t  gfc_error (\"Non-THREADPRIVATE object %qs in COPYIN clause\"\n-\t\t\t     \" at %L\", n->sym->name, where);\n+\t\t\t     \" at %L\", n->sym->name, &n->where);\n \t      }\n \t    break;\n \t  case OMP_LIST_COPYPRIVATE:\n \t    for (; n != NULL; n = n->next)\n \t      {\n \t\tif (n->sym->as && n->sym->as->type == AS_ASSUMED_SIZE)\n \t\t  gfc_error (\"Assumed size array %qs in COPYPRIVATE clause \"\n-\t\t\t     \"at %L\", n->sym->name, where);\n+\t\t\t     \"at %L\", n->sym->name, &n->where);\n \t\tif (n->sym->attr.pointer && n->sym->attr.intent == INTENT_IN)\n \t\t  gfc_error (\"INTENT(IN) POINTER %qs in COPYPRIVATE clause \"\n-\t\t\t     \"at %L\", n->sym->name, where);\n+\t\t\t     \"at %L\", n->sym->name, &n->where);\n \t      }\n \t    break;\n \t  case OMP_LIST_SHARED:\n \t    for (; n != NULL; n = n->next)\n \t      {\n \t\tif (n->sym->attr.threadprivate)\n \t\t  gfc_error (\"THREADPRIVATE object %qs in SHARED clause at \"\n-\t\t\t     \"%L\", n->sym->name, where);\n+\t\t\t     \"%L\", n->sym->name, &n->where);\n \t\tif (n->sym->attr.cray_pointee)\n \t\t  gfc_error (\"Cray pointee %qs in SHARED clause at %L\",\n-\t\t\t    n->sym->name, where);\n+\t\t\t    n->sym->name, &n->where);\n \t\tif (n->sym->attr.associate_var)\n \t\t  gfc_error (\"ASSOCIATE name %qs in SHARED clause at %L\",\n-\t\t\t     n->sym->name, where);\n+\t\t\t     n->sym->name, &n->where);\n \t      }\n \t    break;\n \t  case OMP_LIST_ALIGNED:\n@@ -3088,7 +3089,7 @@ resolve_omp_clauses (gfc_code *code, locus *where,\n \t\t\t    != ISOCBINDING_PTR)))\n \t\t  gfc_error (\"%qs in ALIGNED clause must be POINTER, \"\n \t\t\t     \"ALLOCATABLE, Cray pointer or C_PTR at %L\",\n-\t\t\t     n->sym->name, where);\n+\t\t\t     n->sym->name, &n->where);\n \t\telse if (n->expr)\n \t\t  {\n \t\t    gfc_expr *expr = n->expr;\n@@ -3100,7 +3101,7 @@ resolve_omp_clauses (gfc_code *code, locus *where,\n \t\t\t|| alignment <= 0)\n \t\t      gfc_error (\"%qs in ALIGNED clause at %L requires a scalar \"\n \t\t\t\t \"positive constant integer alignment \"\n-\t\t\t\t \"expression\", n->sym->name, where);\n+\t\t\t\t \"expression\", n->sym->name, &n->where);\n \t\t  }\n \t      }\n \t    break;\n@@ -3119,10 +3120,11 @@ resolve_omp_clauses (gfc_code *code, locus *where,\n \t\t\t|| n->expr->ref->next\n \t\t\t|| n->expr->ref->type != REF_ARRAY)\n \t\t      gfc_error (\"%qs in %s clause at %L is not a proper \"\n-\t\t\t\t \"array section\", n->sym->name, name, where);\n+\t\t\t\t \"array section\", n->sym->name, name,\n+\t\t\t\t &n->where);\n \t\t    else if (n->expr->ref->u.ar.codimen)\n \t\t      gfc_error (\"Coarrays not supported in %s clause at %L\",\n-\t\t\t\t name, where);\n+\t\t\t\t name, &n->where);\n \t\t    else\n \t\t      {\n \t\t\tint i;\n@@ -3132,15 +3134,15 @@ resolve_omp_clauses (gfc_code *code, locus *where,\n \t\t\t    {\n \t\t\t      gfc_error (\"Stride should not be specified for \"\n \t\t\t\t\t \"array section in %s clause at %L\",\n-\t\t\t\t\t name, where);\n+\t\t\t\t\t name, &n->where);\n \t\t\t      break;\n \t\t\t    }\n \t\t\t  else if (ar->dimen_type[i] != DIMEN_ELEMENT\n \t\t\t\t   && ar->dimen_type[i] != DIMEN_RANGE)\n \t\t\t    {\n \t\t\t      gfc_error (\"%qs in %s clause at %L is not a \"\n \t\t\t\t\t \"proper array section\",\n-\t\t\t\t\t n->sym->name, name, where);\n+\t\t\t\t\t n->sym->name, name, &n->where);\n \t\t\t      break;\n \t\t\t    }\n \t\t\t  else if (list == OMP_LIST_DEPEND\n@@ -3153,7 +3155,7 @@ resolve_omp_clauses (gfc_code *code, locus *where,\n \t\t\t    {\n \t\t\t      gfc_error (\"%qs in DEPEND clause at %L is a \"\n \t\t\t\t\t \"zero size array section\",\n-\t\t\t\t\t n->sym->name, where);\n+\t\t\t\t\t n->sym->name, &n->where);\n \t\t\t      break;\n \t\t\t    }\n \t\t      }\n@@ -3162,9 +3164,9 @@ resolve_omp_clauses (gfc_code *code, locus *where,\n \t\t  {\n \t\t    if (list == OMP_LIST_MAP\n \t\t\t&& n->u.map_op == OMP_MAP_FORCE_DEVICEPTR)\n-\t\t      resolve_oacc_deviceptr_clause (n->sym, *where, name);\n+\t\t      resolve_oacc_deviceptr_clause (n->sym, n->where, name);\n \t\t    else\n-\t\t      resolve_oacc_data_clauses (n->sym, *where, name);\n+\t\t      resolve_oacc_data_clauses (n->sym, n->where, name);\n \t\t  }\n \t      }\n \n@@ -3174,10 +3176,10 @@ resolve_omp_clauses (gfc_code *code, locus *where,\n \t\t  n->sym->attr.referenced = 1;\n \t\t  if (n->sym->attr.threadprivate)\n \t\t    gfc_error (\"THREADPRIVATE object %qs in %s clause at %L\",\n-\t\t\t       n->sym->name, name, where);\n+\t\t\t       n->sym->name, name, &n->where);\n \t\t  if (n->sym->attr.cray_pointee)\n \t\t    gfc_error (\"Cray pointee %qs in %s clause at %L\",\n-\t\t\t       n->sym->name, name, where);\n+\t\t\t       n->sym->name, name, &n->where);\n \t\t}\n \t    break;\n \t  default:\n@@ -3186,35 +3188,35 @@ resolve_omp_clauses (gfc_code *code, locus *where,\n \t\tbool bad = false;\n \t\tif (n->sym->attr.threadprivate)\n \t\t  gfc_error (\"THREADPRIVATE object %qs in %s clause at %L\",\n-\t\t\t     n->sym->name, name, where);\n+\t\t\t     n->sym->name, name, &n->where);\n \t\tif (n->sym->attr.cray_pointee)\n \t\t  gfc_error (\"Cray pointee %qs in %s clause at %L\",\n-\t\t\t    n->sym->name, name, where);\n+\t\t\t    n->sym->name, name, &n->where);\n \t\tif (n->sym->attr.associate_var)\n \t\t  gfc_error (\"ASSOCIATE name %qs in %s clause at %L\",\n-\t\t\t     n->sym->name, name, where);\n+\t\t\t     n->sym->name, name, &n->where);\n \t\tif (list != OMP_LIST_PRIVATE)\n \t\t  {\n \t\t    if (n->sym->attr.proc_pointer && list == OMP_LIST_REDUCTION)\n \t\t      gfc_error (\"Procedure pointer %qs in %s clause at %L\",\n-\t\t\t\t n->sym->name, name, where);\n+\t\t\t\t n->sym->name, name, &n->where);\n \t\t    if (n->sym->attr.pointer && list == OMP_LIST_REDUCTION)\n \t\t      gfc_error (\"POINTER object %qs in %s clause at %L\",\n-\t\t\t\t n->sym->name, name, where);\n+\t\t\t\t n->sym->name, name, &n->where);\n \t\t    if (n->sym->attr.cray_pointer && list == OMP_LIST_REDUCTION)\n \t\t      gfc_error (\"Cray pointer %qs in %s clause at %L\",\n-\t\t\t\t n->sym->name, name, where);\n+\t\t\t\t n->sym->name, name, &n->where);\n \t\t  }\n \t\tif (code\n \t\t    && (oacc_is_loop (code) || code->op == EXEC_OACC_PARALLEL))\n-\t\t  check_array_not_assumed (n->sym, *where, name);\n+\t\t  check_array_not_assumed (n->sym, n->where, name);\n \t\telse if (n->sym->as && n->sym->as->type == AS_ASSUMED_SIZE)\n \t\t  gfc_error (\"Assumed size array %qs in %s clause at %L\",\n-\t\t\t     n->sym->name, name, where);\n+\t\t\t     n->sym->name, name, &n->where);\n \t\tif (n->sym->attr.in_namelist && list != OMP_LIST_REDUCTION)\n \t\t  gfc_error (\"Variable %qs in %s clause is used in \"\n \t\t\t     \"NAMELIST statement at %L\",\n-\t\t\t     n->sym->name, name, where);\n+\t\t\t     n->sym->name, name, &n->where);\n \t\tif (n->sym->attr.pointer && n->sym->attr.intent == INTENT_IN)\n \t\t  switch (list)\n \t\t    {\n@@ -3223,7 +3225,7 @@ resolve_omp_clauses (gfc_code *code, locus *where,\n \t\t    case OMP_LIST_LINEAR:\n \t\t    /* case OMP_LIST_REDUCTION: */\n \t\t      gfc_error (\"INTENT(IN) POINTER %qs in %s clause at %L\",\n-\t\t\t\t n->sym->name, name, where);\n+\t\t\t\t n->sym->name, name, &n->where);\n \t\t      break;\n \t\t    default:\n \t\t      break;\n@@ -3317,7 +3319,7 @@ resolve_omp_clauses (gfc_code *code, locus *where,\n \t\t\t\t}\n \t\t\t    gfc_error (\"!$OMP DECLARE REDUCTION %s not found \"\n \t\t\t\t       \"for type %s at %L\", udr_name,\n-\t\t\t\t       gfc_typename (&n->sym->ts), where);\n+\t\t\t\t       gfc_typename (&n->sym->ts), &n->where);\n \t\t\t  }\n \t\t\telse\n \t\t\t  {\n@@ -3339,10 +3341,10 @@ resolve_omp_clauses (gfc_code *code, locus *where,\n \t\t  case OMP_LIST_LINEAR:\n \t\t    if (n->sym->ts.type != BT_INTEGER)\n \t\t      gfc_error (\"LINEAR variable %qs must be INTEGER \"\n-\t\t\t\t \"at %L\", n->sym->name, where);\n+\t\t\t\t \"at %L\", n->sym->name, &n->where);\n \t\t    else if (!code && !n->sym->attr.value)\n \t\t      gfc_error (\"LINEAR dummy argument %qs must have VALUE \"\n-\t\t\t\t \"attribute at %L\", n->sym->name, where);\n+\t\t\t\t \"attribute at %L\", n->sym->name, &n->where);\n \t\t    else if (n->expr)\n \t\t      {\n \t\t\tgfc_expr *expr = n->expr;\n@@ -3351,11 +3353,11 @@ resolve_omp_clauses (gfc_code *code, locus *where,\n \t\t\t    || expr->rank != 0)\n \t\t\t  gfc_error (\"%qs in LINEAR clause at %L requires \"\n \t\t\t\t     \"a scalar integer linear-step expression\",\n-\t\t\t\t     n->sym->name, where);\n+\t\t\t\t     n->sym->name, &n->where);\n \t\t\telse if (!code && expr->expr_type != EXPR_CONSTANT)\n \t\t\t  gfc_error (\"%qs in LINEAR clause at %L requires \"\n \t\t\t\t     \"a constant integer linear-step expression\",\n-\t\t\t\t     n->sym->name, where);\n+\t\t\t\t     n->sym->name, &n->where);\n \t\t      }\n \t\t    break;\n \t\t  /* Workaround for PR middle-end/26316, nothing really needs\n@@ -3368,22 +3370,22 @@ resolve_omp_clauses (gfc_code *code, locus *where,\n \t\t\t  || (n->sym->ts.type == BT_CLASS && CLASS_DATA (n->sym)\n \t\t\t      && CLASS_DATA (n->sym)->attr.allocatable))\n \t\t\tgfc_error (\"ALLOCATABLE object %qs in %s clause at %L\",\n-\t\t\t\t   n->sym->name, name, where);\n+\t\t\t\t   n->sym->name, name, &n->where);\n \t\t      if (n->sym->attr.pointer\n \t\t\t  || (n->sym->ts.type == BT_CLASS && CLASS_DATA (n->sym)\n \t\t\t      && CLASS_DATA (n->sym)->attr.class_pointer))\n \t\t\tgfc_error (\"POINTER object %qs in %s clause at %L\",\n-\t\t\t\t   n->sym->name, name, where);\n+\t\t\t\t   n->sym->name, name, &n->where);\n \t\t      if (n->sym->attr.cray_pointer)\n \t\t\tgfc_error (\"Cray pointer object %qs in %s clause at %L\",\n-\t\t\t\t   n->sym->name, name, where);\n+\t\t\t\t   n->sym->name, name, &n->where);\n \t\t      if (n->sym->attr.cray_pointee)\n \t\t\tgfc_error (\"Cray pointee object %qs in %s clause at %L\",\n-\t\t\t\t   n->sym->name, name, where);\n+\t\t\t\t   n->sym->name, name, &n->where);\n \t\t      /* FALLTHRU */\n \t\t  case OMP_LIST_DEVICE_RESIDENT:\n-\t\t    check_symbol_not_pointer (n->sym, *where, name);\n-\t\t    check_array_not_assumed (n->sym, *where, name);\n+\t\t    check_symbol_not_pointer (n->sym, n->where, name);\n+\t\t    check_array_not_assumed (n->sym, n->where, name);\n \t\t    break;\n \t\t  default:\n \t\t    break;\n@@ -4149,7 +4151,7 @@ resolve_omp_do (gfc_code *code)\n     }\n \n   if (code->ext.omp_clauses)\n-    resolve_omp_clauses (code, &code->loc, code->ext.omp_clauses, NULL);\n+    resolve_omp_clauses (code, code->ext.omp_clauses, NULL);\n \n   do_code = code->block->next;\n   collapse = code->ext.omp_clauses->collapse;\n@@ -4587,7 +4589,7 @@ resolve_oacc_loop (gfc_code *code)\n   int collapse;\n \n   if (code->ext.omp_clauses)\n-    resolve_omp_clauses (code, &code->loc, code->ext.omp_clauses, NULL, true);\n+    resolve_omp_clauses (code, code->ext.omp_clauses, NULL, true);\n \n   do_code = code->block->next;\n   collapse = code->ext.omp_clauses->collapse;\n@@ -4652,8 +4654,7 @@ gfc_resolve_oacc_directive (gfc_code *code, gfc_namespace *ns ATTRIBUTE_UNUSED)\n     case EXEC_OACC_EXIT_DATA:\n     case EXEC_OACC_WAIT:\n     case EXEC_OACC_CACHE:\n-      resolve_omp_clauses (code, &code->loc, code->ext.omp_clauses, NULL,\n-\t\t\t   true);\n+      resolve_omp_clauses (code, code->ext.omp_clauses, NULL, true);\n       break;\n     case EXEC_OACC_PARALLEL_LOOP:\n     case EXEC_OACC_KERNELS_LOOP:\n@@ -4711,11 +4712,11 @@ gfc_resolve_omp_directive (gfc_code *code, gfc_namespace *ns ATTRIBUTE_UNUSED)\n     case EXEC_OMP_TEAMS:\n     case EXEC_OMP_WORKSHARE:\n       if (code->ext.omp_clauses)\n-\tresolve_omp_clauses (code, &code->loc, code->ext.omp_clauses, NULL);\n+\tresolve_omp_clauses (code, code->ext.omp_clauses, NULL);\n       break;\n     case EXEC_OMP_TARGET_UPDATE:\n       if (code->ext.omp_clauses)\n-\tresolve_omp_clauses (code, &code->loc, code->ext.omp_clauses, NULL);\n+\tresolve_omp_clauses (code, code->ext.omp_clauses, NULL);\n       if (code->ext.omp_clauses == NULL\n \t  || (code->ext.omp_clauses->lists[OMP_LIST_TO] == NULL\n \t      && code->ext.omp_clauses->lists[OMP_LIST_FROM] == NULL))\n@@ -4743,7 +4744,7 @@ gfc_resolve_omp_declare_simd (gfc_namespace *ns)\n \tgfc_error (\"!$OMP DECLARE SIMD should refer to containing procedure \"\n \t\t   \"%qs at %L\", ns->proc_name->name, &ods->where);\n       if (ods->clauses)\n-\tresolve_omp_clauses (NULL, &ods->where, ods->clauses, ns);\n+\tresolve_omp_clauses (NULL, ods->clauses, ns);\n     }\n }\n "}, {"sha": "2ec795cda2aa9811602832e1a70b767e9d735382", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ac33bca8a98148859c5375663fe93f5046697b0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ac33bca8a98148859c5375663fe93f5046697b0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2ac33bca8a98148859c5375663fe93f5046697b0", "patch": "@@ -1,3 +1,7 @@\n+2015-10-30  Cesar Philippidis  <cesar@codesourcery.com>\n+\n+\t* gfortran.dg/gomp/intentin1.f90: Adjust copyprivate warning.\n+\n 2015-10-30  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \tPR fortran/46588"}, {"sha": "8bd53aaf5622f63e5c27804df88360320aede0d5", "filename": "gcc/testsuite/gfortran.dg/gomp/intentin1.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ac33bca8a98148859c5375663fe93f5046697b0/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fintentin1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ac33bca8a98148859c5375663fe93f5046697b0/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fintentin1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fintentin1.f90?ref=2ac33bca8a98148859c5375663fe93f5046697b0", "patch": "@@ -11,6 +11,6 @@ subroutine foo (x)\n !$omp simd linear (x)\t\t\t! { dg-error \"INTENT.IN. POINTER\" }\n   do i = 1, 10\n   end do\n-!$omp single\t\t\t\t! { dg-error \"INTENT.IN. POINTER\" }\n-!$omp end single copyprivate (x)\n+!$omp single\n+!$omp end single copyprivate (x)        ! { dg-error \"INTENT.IN. POINTER\" }\n end"}]}