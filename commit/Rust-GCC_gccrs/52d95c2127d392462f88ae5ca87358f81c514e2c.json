{"sha": "52d95c2127d392462f88ae5ca87358f81c514e2c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTJkOTVjMjEyN2QzOTI0NjJmODhhZTVjYTg3MzU4ZjgxYzUxNGUyYw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2013-02-15T17:19:45Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2013-02-15T17:19:45Z"}, "message": "re PR c++/56343 ([C++11] Destructor defaulted on first declaration has wrong implicit exception specification)\n\n\tPR c++/56343\n\t* class.c (check_bases_and_members): Deduce noexcept after\n\tchecking bases.\n\nFrom-SVN: r196082", "tree": {"sha": "e92070b77cd26fb76a9520fcedb563c2ed8fedc3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e92070b77cd26fb76a9520fcedb563c2ed8fedc3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/52d95c2127d392462f88ae5ca87358f81c514e2c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52d95c2127d392462f88ae5ca87358f81c514e2c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/52d95c2127d392462f88ae5ca87358f81c514e2c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52d95c2127d392462f88ae5ca87358f81c514e2c/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "30fa2a51fabf5147e339ed2f93ab446a99e3b2b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30fa2a51fabf5147e339ed2f93ab446a99e3b2b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/30fa2a51fabf5147e339ed2f93ab446a99e3b2b9"}], "stats": {"total": 27, "additions": 23, "deletions": 4}, "files": [{"sha": "2dab0290213033ac4f91bd9896fd5dda7433c93f", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52d95c2127d392462f88ae5ca87358f81c514e2c/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52d95c2127d392462f88ae5ca87358f81c514e2c/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=52d95c2127d392462f88ae5ca87358f81c514e2c", "patch": "@@ -1,5 +1,9 @@\n 2013-02-15  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/56343\n+\t* class.c (check_bases_and_members): Deduce noexcept after\n+\tchecking bases.\n+\n \tPR c++/52026\n \t* semantics.c (finish_id_expression): In a template, return\n \tthe identifier for a constant variable."}, {"sha": "eaa109acce374f49b101ee397af63dfbc56610cc", "filename": "gcc/cp/class.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52d95c2127d392462f88ae5ca87358f81c514e2c/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52d95c2127d392462f88ae5ca87358f81c514e2c/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=52d95c2127d392462f88ae5ca87358f81c514e2c", "patch": "@@ -5245,14 +5245,15 @@ check_bases_and_members (tree t)\n   cant_have_const_ctor = 0;\n   no_const_asn_ref = 0;\n \n-  /* Deduce noexcept on destructors.  */\n-  if (cxx_dialect >= cxx0x)\n-    deduce_noexcept_on_destructors (t);\n-\n   /* Check all the base-classes.  */\n   check_bases (t, &cant_have_const_ctor,\n \t       &no_const_asn_ref);\n \n+  /* Deduce noexcept on destructors.  This needs to happen after we've set\n+     triviality flags appropriately for our bases.  */\n+  if (cxx_dialect >= cxx0x)\n+    deduce_noexcept_on_destructors (t);\n+\n   /* Check all the method declarations.  */\n   check_methods (t);\n "}, {"sha": "4272012d5d53213c3e477c6e536f7c86a811c4a3", "filename": "gcc/testsuite/g++.dg/cpp0x/defaulted41.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52d95c2127d392462f88ae5ca87358f81c514e2c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdefaulted41.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52d95c2127d392462f88ae5ca87358f81c514e2c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdefaulted41.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdefaulted41.C?ref=52d95c2127d392462f88ae5ca87358f81c514e2c", "patch": "@@ -0,0 +1,14 @@\n+// PR c++/56343\n+// { dg-do compile { target c++11 } }\n+\n+class B\n+{\n+public:\n+  virtual ~B() noexcept(false) { }\n+};\n+\n+class D : public B\n+{\n+public:\n+  virtual ~D() = default;\n+};"}]}