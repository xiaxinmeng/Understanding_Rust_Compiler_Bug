{"sha": "b6a6823ed0b970d0ea76e72a1fb7e219365433e4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjZhNjgyM2VkMGI5NzBkMGVhNzZlNzJhMWZiN2UyMTkzNjU0MzNlNA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2000-02-28T14:46:46Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2000-02-28T14:46:46Z"}, "message": "regen\n\nFrom-SVN: r32236", "tree": {"sha": "fe10203d311671fb8bb08173d6376e51ba583bf2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fe10203d311671fb8bb08173d6376e51ba583bf2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b6a6823ed0b970d0ea76e72a1fb7e219365433e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6a6823ed0b970d0ea76e72a1fb7e219365433e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6a6823ed0b970d0ea76e72a1fb7e219365433e4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6a6823ed0b970d0ea76e72a1fb7e219365433e4/comments", "author": null, "committer": null, "parents": [{"sha": "b0e3a658532609fa9641f8efcee7f950f532d68c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0e3a658532609fa9641f8efcee7f950f532d68c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b0e3a658532609fa9641f8efcee7f950f532d68c"}], "stats": {"total": 3670, "additions": 1869, "deletions": 1801}, "files": [{"sha": "49e8004766199225539e3fa1db74cdb0e20543c4", "filename": "gcc/c-parse.c", "status": "modified", "additions": 378, "deletions": 378, "changes": 756, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6a6823ed0b970d0ea76e72a1fb7e219365433e4/gcc%2Fc-parse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6a6823ed0b970d0ea76e72a1fb7e219365433e4/gcc%2Fc-parse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-parse.c?ref=b6a6823ed0b970d0ea76e72a1fb7e219365433e4", "patch": "@@ -66,7 +66,7 @@\n #define\tALIAS\t316\n #define\tOBJC_STRING\t317\n \n-#line 33 \"c-parse.y\"\n+#line 34 \"c-parse.y\"\n \n #include \"config.h\"\n #include \"system.h\"\n@@ -95,10 +95,10 @@ const char * const language_string = \"GNU C\";\n /* Cause the `yydebug' variable to be defined.  */\n #define YYDEBUG 1\n \n-#line 64 \"c-parse.y\"\n+#line 65 \"c-parse.y\"\n typedef union {long itype; tree ttype; enum tree_code code;\n \tchar *filename; int lineno; int ends_in_label; } YYSTYPE;\n-#line 184 \"c-parse.y\"\n+#line 185 \"c-parse.y\"\n \n /* Number of statements (loosely speaking) and compound statements \n    seen so far.  */\n@@ -380,47 +380,47 @@ static const short yyrhs[] = {    -1,\n \n #if YYDEBUG != 0\n static const short yyrline[] = { 0,\n-   234,   239,   253,   255,   255,   256,   258,   260,   261,   269,\n-   273,   283,   287,   291,   293,   295,   296,   297,   302,   309,\n-   311,   315,   319,   325,   327,   331,   335,   341,   343,   347,\n-   353,   355,   358,   360,   362,   364,   366,   368,   370,   374,\n-   378,   381,   384,   387,   391,   393,   396,   399,   403,   431,\n-   437,   440,   443,   446,   448,   450,   454,   458,   462,   464,\n-   467,   471,   498,   500,   502,   504,   506,   508,   510,   512,\n-   514,   516,   518,   520,   522,   524,   528,   530,   534,   536,\n-   539,   543,   545,   552,   555,   563,   574,   673,   674,   676,\n-   682,   684,   707,   716,   718,   720,   724,   730,   732,   737,\n-   739,   747,   749,   750,   760,   765,   767,   768,   769,   776,\n-   781,   785,   788,   796,   801,   803,   804,   805,   812,   822,\n-   826,   831,   835,   839,   843,   845,   847,   856,   859,   863,\n-   865,   867,   872,   876,   879,   883,   886,   888,   900,   903,\n-   905,   907,   911,   915,   917,   920,   933,   936,   940,   942,\n-   950,   951,   952,   956,   958,   964,   965,   966,   969,   971,\n-   974,   976,   979,   982,   988,   995,   997,  1004,  1011,  1014,\n-  1021,  1024,  1028,  1031,  1035,  1040,  1043,  1047,  1050,  1052,\n-  1054,  1056,  1063,  1065,  1066,  1067,  1072,  1074,  1076,  1078,\n-  1083,  1087,  1090,  1092,  1097,  1099,  1100,  1103,  1103,  1106,\n-  1109,  1111,  1113,  1116,  1118,  1121,  1127,  1129,  1133,  1147,\n-  1155,  1159,  1173,  1181,  1188,  1190,  1195,  1198,  1203,  1205,\n-  1207,  1214,  1216,  1224,  1230,  1235,  1237,  1239,  1246,  1248,\n-  1254,  1260,  1262,  1264,  1269,  1271,  1278,  1280,  1283,  1286,\n-  1290,  1293,  1297,  1300,  1304,  1309,  1311,  1315,  1317,  1319,\n-  1321,  1325,  1327,  1329,  1332,  1334,  1337,  1341,  1343,  1346,\n-  1348,  1353,  1356,  1361,  1363,  1365,  1379,  1385,  1398,  1403,\n-  1408,  1410,  1415,  1417,  1421,  1425,  1429,  1439,  1441,  1446,\n-  1451,  1454,  1458,  1461,  1465,  1468,  1471,  1474,  1478,  1481,\n-  1485,  1489,  1491,  1493,  1495,  1497,  1499,  1501,  1503,  1507,\n-  1515,  1523,  1525,  1527,  1531,  1533,  1536,  1539,  1549,  1551,\n-  1556,  1558,  1561,  1575,  1578,  1581,  1583,  1585,  1589,  1593,\n-  1599,  1617,  1622,  1627,  1630,  1644,  1653,  1657,  1661,  1665,\n-  1671,  1675,  1680,  1683,  1688,  1691,  1692,  1708,  1713,  1716,\n-  1728,  1730,  1740,  1750,  1751,  1758,  1760,  1772,  1776,  1790,\n-  1796,  1802,  1803,  1808,  1813,  1817,  1821,  1832,  1839,  1846,\n-  1853,  1864,  1870,  1873,  1878,  1901,  1931,  1962,  1993,  2008,\n-  2022,  2026,  2030,  2033,  2038,  2040,  2043,  2045,  2049,  2054,\n-  2057,  2063,  2068,  2073,  2075,  2084,  2085,  2091,  2093,  2103,\n-  2105,  2109,  2112,  2118,  2127,  2135,  2143,  2152,  2165,  2170,\n-  2175,  2177,  2186,  2189,  2194,  2197,  2201\n+   235,   240,   254,   256,   256,   257,   259,   261,   262,   270,\n+   274,   284,   288,   292,   294,   296,   297,   298,   303,   310,\n+   312,   316,   320,   326,   328,   332,   336,   342,   344,   348,\n+   354,   356,   359,   361,   363,   365,   367,   369,   371,   375,\n+   379,   382,   385,   388,   392,   394,   397,   400,   404,   432,\n+   438,   441,   444,   447,   449,   451,   455,   459,   463,   465,\n+   468,   472,   499,   501,   503,   505,   507,   509,   511,   513,\n+   515,   517,   519,   521,   523,   525,   529,   531,   535,   537,\n+   540,   544,   546,   553,   556,   564,   575,   674,   675,   677,\n+   683,   685,   708,   717,   719,   721,   725,   731,   733,   738,\n+   740,   748,   750,   751,   761,   766,   768,   769,   770,   777,\n+   782,   786,   789,   797,   802,   804,   805,   806,   813,   823,\n+   827,   832,   836,   840,   844,   846,   848,   857,   860,   864,\n+   866,   868,   873,   877,   880,   884,   887,   889,   901,   904,\n+   906,   908,   912,   916,   918,   921,   934,   937,   941,   943,\n+   951,   952,   953,   957,   959,   965,   966,   967,   970,   972,\n+   975,   977,   980,   983,   989,   996,   998,  1005,  1012,  1015,\n+  1022,  1025,  1029,  1032,  1036,  1041,  1044,  1048,  1051,  1053,\n+  1055,  1057,  1064,  1066,  1067,  1068,  1073,  1075,  1077,  1079,\n+  1084,  1088,  1091,  1093,  1098,  1100,  1101,  1104,  1104,  1107,\n+  1110,  1112,  1114,  1117,  1119,  1122,  1128,  1130,  1134,  1148,\n+  1156,  1160,  1174,  1182,  1189,  1191,  1196,  1199,  1204,  1206,\n+  1208,  1215,  1217,  1225,  1231,  1236,  1238,  1240,  1247,  1249,\n+  1255,  1261,  1263,  1265,  1270,  1272,  1279,  1281,  1284,  1287,\n+  1291,  1294,  1298,  1301,  1305,  1310,  1312,  1316,  1318,  1320,\n+  1322,  1326,  1328,  1330,  1333,  1335,  1338,  1342,  1344,  1347,\n+  1349,  1354,  1357,  1362,  1364,  1366,  1380,  1386,  1399,  1404,\n+  1409,  1411,  1416,  1418,  1422,  1426,  1430,  1440,  1442,  1447,\n+  1452,  1455,  1459,  1462,  1466,  1469,  1472,  1475,  1479,  1482,\n+  1486,  1490,  1492,  1494,  1496,  1498,  1500,  1502,  1504,  1508,\n+  1516,  1524,  1526,  1528,  1532,  1534,  1537,  1540,  1550,  1552,\n+  1557,  1559,  1562,  1576,  1579,  1582,  1584,  1586,  1590,  1594,\n+  1600,  1618,  1623,  1628,  1631,  1645,  1654,  1658,  1662,  1666,\n+  1672,  1676,  1681,  1684,  1689,  1692,  1693,  1709,  1714,  1717,\n+  1729,  1731,  1741,  1751,  1752,  1759,  1761,  1773,  1777,  1791,\n+  1797,  1803,  1804,  1809,  1814,  1818,  1822,  1833,  1840,  1847,\n+  1854,  1865,  1871,  1874,  1879,  1902,  1932,  1963,  1994,  2009,\n+  2023,  2027,  2031,  2034,  2039,  2041,  2044,  2046,  2050,  2055,\n+  2058,  2064,  2069,  2074,  2076,  2085,  2086,  2092,  2094,  2104,\n+  2106,  2110,  2113,  2119,  2128,  2136,  2144,  2153,  2166,  2171,\n+  2176,  2178,  2187,  2190,  2195,  2198,  2202\n };\n #endif\n \n@@ -1265,7 +1265,7 @@ static const short yycheck[] = {    38,\n     51,    52,    53,    54\n };\n /* -*-C-*-  Note some compilers choke on comments on `#line' lines.  */\n-#line 3 \"/usr/share/misc/bison.simple\"\n+#line 3 \"/usr/lib/bison.simple\"\n /* This file comes from bison-1.28.  */\n \n /* Skeleton output parser for bison,\n@@ -1479,7 +1479,7 @@ __yy_memcpy (char *to, char *from, unsigned int count)\n #endif\n #endif\n \f\n-#line 217 \"/usr/share/misc/bison.simple\"\n+#line 217 \"/usr/lib/bison.simple\"\n \n /* The user can define YYPARSE_PARAM as the name of an argument to be passed\n    into yyparse.  The argument should have type void *.\n@@ -1808,14 +1808,14 @@ yyparse(YYPARSE_PARAM_ARG)\n   switch (yyn) {\n \n case 1:\n-#line 235 \"c-parse.y\"\n+#line 236 \"c-parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids an empty source file\");\n \t\t  finish_file ();\n \t\t;\n     break;}\n case 2:\n-#line 240 \"c-parse.y\"\n+#line 241 \"c-parse.y\"\n {\n \t\t  /* In case there were missing closebraces,\n \t\t     get us back to the global binding level.  */\n@@ -1825,15 +1825,15 @@ case 2:\n \t\t;\n     break;}\n case 3:\n-#line 254 \"c-parse.y\"\n+#line 255 \"c-parse.y\"\n {yyval.ttype = NULL_TREE; ;\n     break;}\n case 5:\n-#line 255 \"c-parse.y\"\n+#line 256 \"c-parse.y\"\n {yyval.ttype = NULL_TREE; ;\n     break;}\n case 9:\n-#line 262 \"c-parse.y\"\n+#line 263 \"c-parse.y\"\n { STRIP_NOPS (yyvsp[-2].ttype);\n \t\t  if ((TREE_CODE (yyvsp[-2].ttype) == ADDR_EXPR\n \t\t       && TREE_CODE (TREE_OPERAND (yyvsp[-2].ttype, 0)) == STRING_CST)\n@@ -1843,11 +1843,11 @@ case 9:\n \t\t    error (\"argument of `asm' is not a constant string\"); ;\n     break;}\n case 10:\n-#line 270 \"c-parse.y\"\n+#line 271 \"c-parse.y\"\n { RESTORE_WARN_FLAGS (yyvsp[-1].ttype); ;\n     break;}\n case 11:\n-#line 275 \"c-parse.y\"\n+#line 276 \"c-parse.y\"\n { if (pedantic)\n \t\t    error (\"ANSI C forbids data definition with no type or storage class\");\n \t\t  else if (!flag_traditional)\n@@ -1858,162 +1858,162 @@ case 11:\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack); ;\n     break;}\n case 12:\n-#line 284 \"c-parse.y\"\n+#line 285 \"c-parse.y\"\n { current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack); ;\n     break;}\n case 13:\n-#line 288 \"c-parse.y\"\n+#line 289 \"c-parse.y\"\n { current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack); ;\n     break;}\n case 14:\n-#line 292 \"c-parse.y\"\n+#line 293 \"c-parse.y\"\n { pedwarn (\"empty declaration\"); ;\n     break;}\n case 15:\n-#line 294 \"c-parse.y\"\n+#line 295 \"c-parse.y\"\n { shadow_tag (yyvsp[-1].ttype); ;\n     break;}\n case 18:\n-#line 298 \"c-parse.y\"\n+#line 299 \"c-parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C does not allow extra `;' outside of a function\"); ;\n     break;}\n case 19:\n-#line 304 \"c-parse.y\"\n+#line 305 \"c-parse.y\"\n { if (! start_function (current_declspecs, yyvsp[0].ttype,\n \t\t\t\t\tprefix_attributes, NULL_TREE))\n \t\t    YYERROR1;\n \t\t  reinit_parse_for_function (); ;\n     break;}\n case 20:\n-#line 309 \"c-parse.y\"\n+#line 310 \"c-parse.y\"\n { store_parm_decls (); ;\n     break;}\n case 21:\n-#line 311 \"c-parse.y\"\n+#line 312 \"c-parse.y\"\n { finish_function (0); \n \t\t  current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack); ;\n     break;}\n case 22:\n-#line 316 \"c-parse.y\"\n+#line 317 \"c-parse.y\"\n { current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack); ;\n     break;}\n case 23:\n-#line 320 \"c-parse.y\"\n+#line 321 \"c-parse.y\"\n { if (! start_function (current_declspecs, yyvsp[0].ttype,\n \t\t\t\t\tprefix_attributes, NULL_TREE))\n \t\t    YYERROR1;\n \t\t  reinit_parse_for_function (); ;\n     break;}\n case 24:\n-#line 325 \"c-parse.y\"\n+#line 326 \"c-parse.y\"\n { store_parm_decls (); ;\n     break;}\n case 25:\n-#line 327 \"c-parse.y\"\n+#line 328 \"c-parse.y\"\n { finish_function (0); \n \t\t  current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack); ;\n     break;}\n case 26:\n-#line 332 \"c-parse.y\"\n+#line 333 \"c-parse.y\"\n { current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack); ;\n     break;}\n case 27:\n-#line 336 \"c-parse.y\"\n+#line 337 \"c-parse.y\"\n { if (! start_function (NULL_TREE, yyvsp[0].ttype,\n \t\t\t\t\tprefix_attributes, NULL_TREE))\n \t\t    YYERROR1;\n \t\t  reinit_parse_for_function (); ;\n     break;}\n case 28:\n-#line 341 \"c-parse.y\"\n+#line 342 \"c-parse.y\"\n { store_parm_decls (); ;\n     break;}\n case 29:\n-#line 343 \"c-parse.y\"\n+#line 344 \"c-parse.y\"\n { finish_function (0); \n \t\t  current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack); ;\n     break;}\n case 30:\n-#line 348 \"c-parse.y\"\n+#line 349 \"c-parse.y\"\n { current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack); ;\n     break;}\n case 33:\n-#line 359 \"c-parse.y\"\n+#line 360 \"c-parse.y\"\n { yyval.code = ADDR_EXPR; ;\n     break;}\n case 34:\n-#line 361 \"c-parse.y\"\n+#line 362 \"c-parse.y\"\n { yyval.code = NEGATE_EXPR; ;\n     break;}\n case 35:\n-#line 363 \"c-parse.y\"\n+#line 364 \"c-parse.y\"\n { yyval.code = CONVERT_EXPR; ;\n     break;}\n case 36:\n-#line 365 \"c-parse.y\"\n+#line 366 \"c-parse.y\"\n { yyval.code = PREINCREMENT_EXPR; ;\n     break;}\n case 37:\n-#line 367 \"c-parse.y\"\n+#line 368 \"c-parse.y\"\n { yyval.code = PREDECREMENT_EXPR; ;\n     break;}\n case 38:\n-#line 369 \"c-parse.y\"\n+#line 370 \"c-parse.y\"\n { yyval.code = BIT_NOT_EXPR; ;\n     break;}\n case 39:\n-#line 371 \"c-parse.y\"\n+#line 372 \"c-parse.y\"\n { yyval.code = TRUTH_NOT_EXPR; ;\n     break;}\n case 40:\n-#line 375 \"c-parse.y\"\n+#line 376 \"c-parse.y\"\n { yyval.ttype = build_compound_expr (yyvsp[0].ttype); ;\n     break;}\n case 41:\n-#line 380 \"c-parse.y\"\n+#line 381 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 43:\n-#line 386 \"c-parse.y\"\n+#line 387 \"c-parse.y\"\n { yyval.ttype = build_tree_list (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 44:\n-#line 388 \"c-parse.y\"\n+#line 389 \"c-parse.y\"\n { chainon (yyvsp[-2].ttype, build_tree_list (NULL_TREE, yyvsp[0].ttype)); ;\n     break;}\n case 46:\n-#line 394 \"c-parse.y\"\n+#line 395 \"c-parse.y\"\n { yyval.ttype = build_indirect_ref (yyvsp[0].ttype, \"unary *\"); ;\n     break;}\n case 47:\n-#line 397 \"c-parse.y\"\n+#line 398 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype;\n \t\t  RESTORE_WARN_FLAGS (yyvsp[-1].ttype); ;\n     break;}\n case 48:\n-#line 400 \"c-parse.y\"\n+#line 401 \"c-parse.y\"\n { yyval.ttype = build_unary_op (yyvsp[-1].code, yyvsp[0].ttype, 0);\n \t\t  overflow_warning (yyval.ttype); ;\n     break;}\n case 49:\n-#line 404 \"c-parse.y\"\n+#line 405 \"c-parse.y\"\n { tree label = lookup_label (yyvsp[0].ttype);\n \t\t  if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids `&&'\");\n@@ -2028,61 +2028,61 @@ case 49:\n \t\t;\n     break;}\n case 50:\n-#line 432 \"c-parse.y\"\n+#line 433 \"c-parse.y\"\n { skip_evaluation--;\n \t\t  if (TREE_CODE (yyvsp[0].ttype) == COMPONENT_REF\n \t\t      && DECL_C_BIT_FIELD (TREE_OPERAND (yyvsp[0].ttype, 1)))\n \t\t    error (\"`sizeof' applied to a bit-field\");\n \t\t  yyval.ttype = c_sizeof (TREE_TYPE (yyvsp[0].ttype)); ;\n     break;}\n case 51:\n-#line 438 \"c-parse.y\"\n+#line 439 \"c-parse.y\"\n { skip_evaluation--;\n \t\t  yyval.ttype = c_sizeof (groktypename (yyvsp[-1].ttype)); ;\n     break;}\n case 52:\n-#line 441 \"c-parse.y\"\n+#line 442 \"c-parse.y\"\n { skip_evaluation--;\n \t\t  yyval.ttype = c_alignof_expr (yyvsp[0].ttype); ;\n     break;}\n case 53:\n-#line 444 \"c-parse.y\"\n+#line 445 \"c-parse.y\"\n { skip_evaluation--;\n \t\t  yyval.ttype = c_alignof (groktypename (yyvsp[-1].ttype)); ;\n     break;}\n case 54:\n-#line 447 \"c-parse.y\"\n+#line 448 \"c-parse.y\"\n { yyval.ttype = build_unary_op (REALPART_EXPR, yyvsp[0].ttype, 0); ;\n     break;}\n case 55:\n-#line 449 \"c-parse.y\"\n+#line 450 \"c-parse.y\"\n { yyval.ttype = build_unary_op (IMAGPART_EXPR, yyvsp[0].ttype, 0); ;\n     break;}\n case 56:\n-#line 451 \"c-parse.y\"\n+#line 452 \"c-parse.y\"\n { yyval.ttype = build_va_arg (yyvsp[-3].ttype, groktypename (yyvsp[-1].ttype)); ;\n     break;}\n case 57:\n-#line 455 \"c-parse.y\"\n+#line 456 \"c-parse.y\"\n { skip_evaluation++; ;\n     break;}\n case 58:\n-#line 459 \"c-parse.y\"\n+#line 460 \"c-parse.y\"\n { skip_evaluation++; ;\n     break;}\n case 60:\n-#line 465 \"c-parse.y\"\n+#line 466 \"c-parse.y\"\n { tree type = groktypename (yyvsp[-2].ttype);\n \t\t  yyval.ttype = build_c_cast (type, yyvsp[0].ttype); ;\n     break;}\n case 61:\n-#line 468 \"c-parse.y\"\n+#line 469 \"c-parse.y\"\n { start_init (NULL_TREE, NULL, 0);\n \t\t  yyvsp[-2].ttype = groktypename (yyvsp[-2].ttype);\n \t\t  really_start_incremental_init (yyvsp[-2].ttype); ;\n     break;}\n case 62:\n-#line 472 \"c-parse.y\"\n+#line 473 \"c-parse.y\"\n { const char *name;\n \t\t  tree result = pop_init_level (0);\n \t\t  tree type = yyvsp[-5].ttype;\n@@ -2109,90 +2109,90 @@ case 62:\n \t\t;\n     break;}\n case 64:\n-#line 501 \"c-parse.y\"\n+#line 502 \"c-parse.y\"\n { yyval.ttype = parser_build_binary_op (yyvsp[-1].code, yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 65:\n-#line 503 \"c-parse.y\"\n+#line 504 \"c-parse.y\"\n { yyval.ttype = parser_build_binary_op (yyvsp[-1].code, yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 66:\n-#line 505 \"c-parse.y\"\n+#line 506 \"c-parse.y\"\n { yyval.ttype = parser_build_binary_op (yyvsp[-1].code, yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 67:\n-#line 507 \"c-parse.y\"\n+#line 508 \"c-parse.y\"\n { yyval.ttype = parser_build_binary_op (yyvsp[-1].code, yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 68:\n-#line 509 \"c-parse.y\"\n+#line 510 \"c-parse.y\"\n { yyval.ttype = parser_build_binary_op (yyvsp[-1].code, yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 69:\n-#line 511 \"c-parse.y\"\n+#line 512 \"c-parse.y\"\n { yyval.ttype = parser_build_binary_op (yyvsp[-1].code, yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 70:\n-#line 513 \"c-parse.y\"\n+#line 514 \"c-parse.y\"\n { yyval.ttype = parser_build_binary_op (yyvsp[-1].code, yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 71:\n-#line 515 \"c-parse.y\"\n+#line 516 \"c-parse.y\"\n { yyval.ttype = parser_build_binary_op (yyvsp[-1].code, yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 72:\n-#line 517 \"c-parse.y\"\n+#line 518 \"c-parse.y\"\n { yyval.ttype = parser_build_binary_op (yyvsp[-1].code, yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 73:\n-#line 519 \"c-parse.y\"\n+#line 520 \"c-parse.y\"\n { yyval.ttype = parser_build_binary_op (yyvsp[-1].code, yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 74:\n-#line 521 \"c-parse.y\"\n+#line 522 \"c-parse.y\"\n { yyval.ttype = parser_build_binary_op (yyvsp[-1].code, yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 75:\n-#line 523 \"c-parse.y\"\n+#line 524 \"c-parse.y\"\n { yyval.ttype = parser_build_binary_op (yyvsp[-1].code, yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 76:\n-#line 525 \"c-parse.y\"\n+#line 526 \"c-parse.y\"\n { yyvsp[-1].ttype = truthvalue_conversion (default_conversion (yyvsp[-1].ttype));\n \t\t  skip_evaluation += yyvsp[-1].ttype == boolean_false_node; ;\n     break;}\n case 77:\n-#line 528 \"c-parse.y\"\n+#line 529 \"c-parse.y\"\n { skip_evaluation -= yyvsp[-3].ttype == boolean_false_node;\n \t\t  yyval.ttype = parser_build_binary_op (TRUTH_ANDIF_EXPR, yyvsp[-3].ttype, yyvsp[0].ttype); ;\n     break;}\n case 78:\n-#line 531 \"c-parse.y\"\n+#line 532 \"c-parse.y\"\n { yyvsp[-1].ttype = truthvalue_conversion (default_conversion (yyvsp[-1].ttype));\n \t\t  skip_evaluation += yyvsp[-1].ttype == boolean_true_node; ;\n     break;}\n case 79:\n-#line 534 \"c-parse.y\"\n+#line 535 \"c-parse.y\"\n { skip_evaluation -= yyvsp[-3].ttype == boolean_true_node;\n \t\t  yyval.ttype = parser_build_binary_op (TRUTH_ORIF_EXPR, yyvsp[-3].ttype, yyvsp[0].ttype); ;\n     break;}\n case 80:\n-#line 537 \"c-parse.y\"\n+#line 538 \"c-parse.y\"\n { yyvsp[-1].ttype = truthvalue_conversion (default_conversion (yyvsp[-1].ttype));\n \t\t  skip_evaluation += yyvsp[-1].ttype == boolean_false_node; ;\n     break;}\n case 81:\n-#line 540 \"c-parse.y\"\n+#line 541 \"c-parse.y\"\n { skip_evaluation += ((yyvsp[-4].ttype == boolean_true_node)\n \t\t\t\t      - (yyvsp[-4].ttype == boolean_false_node)); ;\n     break;}\n case 82:\n-#line 543 \"c-parse.y\"\n+#line 544 \"c-parse.y\"\n { skip_evaluation -= yyvsp[-6].ttype == boolean_true_node;\n \t\t  yyval.ttype = build_conditional_expr (yyvsp[-6].ttype, yyvsp[-3].ttype, yyvsp[0].ttype); ;\n     break;}\n case 83:\n-#line 546 \"c-parse.y\"\n+#line 547 \"c-parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids omitting the middle term of a ?: expression\");\n \t\t  /* Make sure first operand is calculated only once.  */\n@@ -2201,12 +2201,12 @@ case 83:\n \t\t  skip_evaluation += yyvsp[-1].ttype == boolean_true_node; ;\n     break;}\n case 84:\n-#line 553 \"c-parse.y\"\n+#line 554 \"c-parse.y\"\n { skip_evaluation -= yyvsp[-4].ttype == boolean_true_node;\n \t\t  yyval.ttype = build_conditional_expr (yyvsp[-4].ttype, yyvsp[-3].ttype, yyvsp[0].ttype); ;\n     break;}\n case 85:\n-#line 556 \"c-parse.y\"\n+#line 557 \"c-parse.y\"\n { char class;\n \t\t  yyval.ttype = build_modify_expr (yyvsp[-2].ttype, NOP_EXPR, yyvsp[0].ttype);\n \t\t  class = TREE_CODE_CLASS (TREE_CODE (yyval.ttype));\n@@ -2216,7 +2216,7 @@ case 85:\n \t\t;\n     break;}\n case 86:\n-#line 564 \"c-parse.y\"\n+#line 565 \"c-parse.y\"\n { char class;\n \t\t  yyval.ttype = build_modify_expr (yyvsp[-2].ttype, yyvsp[-1].code, yyvsp[0].ttype);\n \t\t  /* This inhibits warnings in truthvalue_conversion.  */\n@@ -2227,7 +2227,7 @@ case 86:\n \t\t;\n     break;}\n case 87:\n-#line 576 \"c-parse.y\"\n+#line 577 \"c-parse.y\"\n {\n \t\t  yyval.ttype = lastiddecl;\n \t\t  if (!yyval.ttype || yyval.ttype == error_mark_node)\n@@ -2327,23 +2327,23 @@ case 87:\n \t\t;\n     break;}\n case 89:\n-#line 675 \"c-parse.y\"\n+#line 676 \"c-parse.y\"\n { yyval.ttype = combine_strings (yyvsp[0].ttype); ;\n     break;}\n case 90:\n-#line 677 \"c-parse.y\"\n+#line 678 \"c-parse.y\"\n { char class = TREE_CODE_CLASS (TREE_CODE (yyvsp[-1].ttype));\n \t\t  if (class == 'e' || class == '1'\n \t\t      || class == '2' || class == '<')\n \t\t    C_SET_EXP_ORIGINAL_CODE (yyvsp[-1].ttype, ERROR_MARK);\n \t\t  yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 91:\n-#line 683 \"c-parse.y\"\n+#line 684 \"c-parse.y\"\n { yyval.ttype = error_mark_node; ;\n     break;}\n case 92:\n-#line 685 \"c-parse.y\"\n+#line 686 \"c-parse.y\"\n { tree rtl_exp;\n \t\t  if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids braced-groups within expressions\");\n@@ -2368,7 +2368,7 @@ case 92:\n \t\t;\n     break;}\n case 93:\n-#line 708 \"c-parse.y\"\n+#line 709 \"c-parse.y\"\n {\n \t\t  /* Make sure we call expand_end_stmt_expr.  Otherwise\n \t\t     we are likely to lose sequences and crash later.  */\n@@ -2379,79 +2379,79 @@ case 93:\n \t\t;\n     break;}\n case 94:\n-#line 717 \"c-parse.y\"\n+#line 718 \"c-parse.y\"\n { yyval.ttype = build_function_call (yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 95:\n-#line 719 \"c-parse.y\"\n+#line 720 \"c-parse.y\"\n { yyval.ttype = build_array_ref (yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 96:\n-#line 721 \"c-parse.y\"\n+#line 722 \"c-parse.y\"\n {\n \t\t    yyval.ttype = build_component_ref (yyvsp[-2].ttype, yyvsp[0].ttype);\n \t\t;\n     break;}\n case 97:\n-#line 725 \"c-parse.y\"\n+#line 726 \"c-parse.y\"\n {\n                   tree expr = build_indirect_ref (yyvsp[-2].ttype, \"->\");\n \n                     yyval.ttype = build_component_ref (expr, yyvsp[0].ttype);\n \t\t;\n     break;}\n case 98:\n-#line 731 \"c-parse.y\"\n+#line 732 \"c-parse.y\"\n { yyval.ttype = build_unary_op (POSTINCREMENT_EXPR, yyvsp[-1].ttype, 0); ;\n     break;}\n case 99:\n-#line 733 \"c-parse.y\"\n+#line 734 \"c-parse.y\"\n { yyval.ttype = build_unary_op (POSTDECREMENT_EXPR, yyvsp[-1].ttype, 0); ;\n     break;}\n case 101:\n-#line 740 \"c-parse.y\"\n+#line 741 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t  if (warn_traditional && !in_system_header)\n \t\t    warning (\"Use of ANSI string concatenation\");\n \t\t;\n     break;}\n case 104:\n-#line 752 \"c-parse.y\"\n+#line 753 \"c-parse.y\"\n { c_mark_varargs ();\n \t\t  if (pedantic)\n \t\t    pedwarn (\"ANSI C does not permit use of `varargs.h'\"); ;\n     break;}\n case 105:\n-#line 762 \"c-parse.y\"\n+#line 763 \"c-parse.y\"\n { ;\n     break;}\n case 110:\n-#line 778 \"c-parse.y\"\n+#line 779 \"c-parse.y\"\n { current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack); ;\n     break;}\n case 111:\n-#line 782 \"c-parse.y\"\n+#line 783 \"c-parse.y\"\n { current_declspecs = TREE_VALUE (declspec_stack);\t\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack); ;\n     break;}\n case 112:\n-#line 786 \"c-parse.y\"\n+#line 787 \"c-parse.y\"\n { shadow_tag_warned (yyvsp[-1].ttype, 1);\n \t\t  pedwarn (\"empty declaration\"); ;\n     break;}\n case 113:\n-#line 789 \"c-parse.y\"\n+#line 790 \"c-parse.y\"\n { pedwarn (\"empty declaration\"); ;\n     break;}\n case 114:\n-#line 798 \"c-parse.y\"\n+#line 799 \"c-parse.y\"\n { ;\n     break;}\n case 119:\n-#line 813 \"c-parse.y\"\n+#line 814 \"c-parse.y\"\n { pending_xref_error ();\n \t\t  declspec_stack = tree_cons (prefix_attributes,\n \t\t\t\t\t      current_declspecs,\n@@ -2460,304 +2460,304 @@ case 119:\n \t\t\t\t     &current_declspecs, &prefix_attributes); ;\n     break;}\n case 120:\n-#line 823 \"c-parse.y\"\n+#line 824 \"c-parse.y\"\n { prefix_attributes = chainon (prefix_attributes, yyvsp[0].ttype); ;\n     break;}\n case 121:\n-#line 828 \"c-parse.y\"\n+#line 829 \"c-parse.y\"\n { current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack); ;\n     break;}\n case 122:\n-#line 832 \"c-parse.y\"\n+#line 833 \"c-parse.y\"\n { current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack); ;\n     break;}\n case 123:\n-#line 836 \"c-parse.y\"\n+#line 837 \"c-parse.y\"\n { current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack); ;\n     break;}\n case 124:\n-#line 840 \"c-parse.y\"\n+#line 841 \"c-parse.y\"\n { current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack); ;\n     break;}\n case 125:\n-#line 844 \"c-parse.y\"\n+#line 845 \"c-parse.y\"\n { shadow_tag (yyvsp[-1].ttype); ;\n     break;}\n case 126:\n-#line 846 \"c-parse.y\"\n+#line 847 \"c-parse.y\"\n { pedwarn (\"empty declaration\"); ;\n     break;}\n case 127:\n-#line 848 \"c-parse.y\"\n+#line 849 \"c-parse.y\"\n { RESTORE_WARN_FLAGS (yyvsp[-1].ttype); ;\n     break;}\n case 128:\n-#line 858 \"c-parse.y\"\n+#line 859 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 129:\n-#line 860 \"c-parse.y\"\n+#line 861 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[0].ttype, tree_cons (NULL_TREE, yyvsp[-1].ttype, yyvsp[-2].ttype)); ;\n     break;}\n case 130:\n-#line 864 \"c-parse.y\"\n+#line 865 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 131:\n-#line 866 \"c-parse.y\"\n+#line 867 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 132:\n-#line 868 \"c-parse.y\"\n+#line 869 \"c-parse.y\"\n { if (extra_warnings)\n \t\t    warning (\"`%s' is not at beginning of declaration\",\n \t\t\t     IDENTIFIER_POINTER (yyvsp[0].ttype));\n \t\t  yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 133:\n-#line 873 \"c-parse.y\"\n+#line 874 \"c-parse.y\"\n { yyval.ttype = tree_cons (yyvsp[0].ttype, NULL_TREE, yyvsp[-1].ttype); ;\n     break;}\n case 134:\n-#line 878 \"c-parse.y\"\n+#line 879 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 135:\n-#line 880 \"c-parse.y\"\n+#line 881 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[0].ttype, tree_cons (NULL_TREE, yyvsp[-1].ttype, yyvsp[-2].ttype)); ;\n     break;}\n case 136:\n-#line 885 \"c-parse.y\"\n+#line 886 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 137:\n-#line 887 \"c-parse.y\"\n+#line 888 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 138:\n-#line 889 \"c-parse.y\"\n+#line 890 \"c-parse.y\"\n { if (extra_warnings)\n \t\t    warning (\"`%s' is not at beginning of declaration\",\n \t\t\t     IDENTIFIER_POINTER (yyvsp[0].ttype));\n \t\t  yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 139:\n-#line 902 \"c-parse.y\"\n+#line 903 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 140:\n-#line 904 \"c-parse.y\"\n+#line 905 \"c-parse.y\"\n { yyval.ttype = tree_cons (yyvsp[0].ttype, NULL_TREE, NULL_TREE); ;\n     break;}\n case 141:\n-#line 906 \"c-parse.y\"\n+#line 907 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 142:\n-#line 908 \"c-parse.y\"\n+#line 909 \"c-parse.y\"\n { yyval.ttype = tree_cons (yyvsp[0].ttype, NULL_TREE, yyvsp[-1].ttype); ;\n     break;}\n case 143:\n-#line 913 \"c-parse.y\"\n+#line 914 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, NULL_TREE);\n \t\t  TREE_STATIC (yyval.ttype) = 1; ;\n     break;}\n case 144:\n-#line 916 \"c-parse.y\"\n+#line 917 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 145:\n-#line 918 \"c-parse.y\"\n+#line 919 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ttype);\n \t\t  TREE_STATIC (yyval.ttype) = 1; ;\n     break;}\n case 146:\n-#line 921 \"c-parse.y\"\n+#line 922 \"c-parse.y\"\n { if (extra_warnings && TREE_STATIC (yyvsp[-1].ttype))\n \t\t    warning (\"`%s' is not at beginning of declaration\",\n \t\t\t     IDENTIFIER_POINTER (yyvsp[0].ttype));\n \t\t  yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ttype);\n \t\t  TREE_STATIC (yyval.ttype) = TREE_STATIC (yyvsp[-1].ttype); ;\n     break;}\n case 147:\n-#line 935 \"c-parse.y\"\n+#line 936 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 148:\n-#line 937 \"c-parse.y\"\n+#line 938 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[0].ttype, tree_cons (NULL_TREE, yyvsp[-1].ttype, yyvsp[-2].ttype)); ;\n     break;}\n case 149:\n-#line 941 \"c-parse.y\"\n+#line 942 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 150:\n-#line 943 \"c-parse.y\"\n+#line 944 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 153:\n-#line 953 \"c-parse.y\"\n+#line 954 \"c-parse.y\"\n { /* For a typedef name, record the meaning, not the name.\n \t\t     In case of `foo foo, bar;'.  */\n \t\t  yyval.ttype = lookup_name (yyvsp[0].ttype); ;\n     break;}\n case 154:\n-#line 957 \"c-parse.y\"\n+#line 958 \"c-parse.y\"\n { yyval.ttype = TREE_TYPE (yyvsp[-1].ttype); ;\n     break;}\n case 155:\n-#line 959 \"c-parse.y\"\n+#line 960 \"c-parse.y\"\n { yyval.ttype = groktypename (yyvsp[-1].ttype); ;\n     break;}\n case 163:\n-#line 981 \"c-parse.y\"\n+#line 982 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 164:\n-#line 983 \"c-parse.y\"\n+#line 984 \"c-parse.y\"\n { if (TREE_CHAIN (yyvsp[-1].ttype)) yyvsp[-1].ttype = combine_strings (yyvsp[-1].ttype);\n \t\t  yyval.ttype = yyvsp[-1].ttype;\n \t\t;\n     break;}\n case 165:\n-#line 990 \"c-parse.y\"\n+#line 991 \"c-parse.y\"\n { yyval.ttype = start_decl (yyvsp[-3].ttype, current_declspecs, 1,\n \t\t\t\t\t  yyvsp[-1].ttype, prefix_attributes);\n \t\t  start_init (yyval.ttype, yyvsp[-2].ttype, global_bindings_p ()); ;\n     break;}\n case 166:\n-#line 995 \"c-parse.y\"\n+#line 996 \"c-parse.y\"\n { finish_init ();\n \t\t  finish_decl (yyvsp[-1].ttype, yyvsp[0].ttype, yyvsp[-4].ttype); ;\n     break;}\n case 167:\n-#line 998 \"c-parse.y\"\n+#line 999 \"c-parse.y\"\n { tree d = start_decl (yyvsp[-2].ttype, current_declspecs, 0,\n \t\t\t\t       yyvsp[0].ttype, prefix_attributes);\n \t\t  finish_decl (d, NULL_TREE, yyvsp[-1].ttype); \n                 ;\n     break;}\n case 168:\n-#line 1006 \"c-parse.y\"\n+#line 1007 \"c-parse.y\"\n { yyval.ttype = start_decl (yyvsp[-3].ttype, current_declspecs, 1,\n \t\t\t\t\t  yyvsp[-1].ttype, prefix_attributes);\n \t\t  start_init (yyval.ttype, yyvsp[-2].ttype, global_bindings_p ()); ;\n     break;}\n case 169:\n-#line 1011 \"c-parse.y\"\n+#line 1012 \"c-parse.y\"\n { finish_init ();\n \t\t  decl_attributes (yyvsp[-1].ttype, yyvsp[-3].ttype, prefix_attributes);\n \t\t  finish_decl (yyvsp[-1].ttype, yyvsp[0].ttype, yyvsp[-4].ttype); ;\n     break;}\n case 170:\n-#line 1015 \"c-parse.y\"\n+#line 1016 \"c-parse.y\"\n { tree d = start_decl (yyvsp[-2].ttype, current_declspecs, 0,\n \t\t\t\t       yyvsp[0].ttype, prefix_attributes);\n \t\t  finish_decl (d, NULL_TREE, yyvsp[-1].ttype); ;\n     break;}\n case 171:\n-#line 1023 \"c-parse.y\"\n+#line 1024 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 172:\n-#line 1025 \"c-parse.y\"\n+#line 1026 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 173:\n-#line 1030 \"c-parse.y\"\n+#line 1031 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 174:\n-#line 1032 \"c-parse.y\"\n+#line 1033 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 175:\n-#line 1037 \"c-parse.y\"\n+#line 1038 \"c-parse.y\"\n { yyval.ttype = yyvsp[-2].ttype; ;\n     break;}\n case 176:\n-#line 1042 \"c-parse.y\"\n+#line 1043 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 177:\n-#line 1044 \"c-parse.y\"\n+#line 1045 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 178:\n-#line 1049 \"c-parse.y\"\n+#line 1050 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 179:\n-#line 1051 \"c-parse.y\"\n+#line 1052 \"c-parse.y\"\n { yyval.ttype = build_tree_list (yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 180:\n-#line 1053 \"c-parse.y\"\n+#line 1054 \"c-parse.y\"\n { yyval.ttype = build_tree_list (yyvsp[-3].ttype, build_tree_list (NULL_TREE, yyvsp[-1].ttype)); ;\n     break;}\n case 181:\n-#line 1055 \"c-parse.y\"\n+#line 1056 \"c-parse.y\"\n { yyval.ttype = build_tree_list (yyvsp[-5].ttype, tree_cons (NULL_TREE, yyvsp[-3].ttype, yyvsp[-1].ttype)); ;\n     break;}\n case 182:\n-#line 1057 \"c-parse.y\"\n+#line 1058 \"c-parse.y\"\n { yyval.ttype = build_tree_list (yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 188:\n-#line 1075 \"c-parse.y\"\n+#line 1076 \"c-parse.y\"\n { really_start_incremental_init (NULL_TREE); ;\n     break;}\n case 189:\n-#line 1077 \"c-parse.y\"\n+#line 1078 \"c-parse.y\"\n { yyval.ttype = pop_init_level (0); ;\n     break;}\n case 190:\n-#line 1079 \"c-parse.y\"\n+#line 1080 \"c-parse.y\"\n { yyval.ttype = error_mark_node; ;\n     break;}\n case 191:\n-#line 1085 \"c-parse.y\"\n+#line 1086 \"c-parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids empty initializer braces\"); ;\n     break;}\n case 197:\n-#line 1101 \"c-parse.y\"\n+#line 1102 \"c-parse.y\"\n { set_init_label (yyvsp[-1].ttype); ;\n     break;}\n case 200:\n-#line 1108 \"c-parse.y\"\n+#line 1109 \"c-parse.y\"\n { push_init_level (0); ;\n     break;}\n case 201:\n-#line 1110 \"c-parse.y\"\n+#line 1111 \"c-parse.y\"\n { process_init_element (pop_init_level (0)); ;\n     break;}\n case 202:\n-#line 1112 \"c-parse.y\"\n+#line 1113 \"c-parse.y\"\n { process_init_element (yyvsp[0].ttype); ;\n     break;}\n case 206:\n-#line 1123 \"c-parse.y\"\n+#line 1124 \"c-parse.y\"\n { set_init_label (yyvsp[0].ttype); ;\n     break;}\n case 207:\n-#line 1128 \"c-parse.y\"\n+#line 1129 \"c-parse.y\"\n { set_init_index (yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 208:\n-#line 1130 \"c-parse.y\"\n+#line 1131 \"c-parse.y\"\n { set_init_index (yyvsp[-1].ttype, NULL_TREE); ;\n     break;}\n case 209:\n-#line 1135 \"c-parse.y\"\n+#line 1136 \"c-parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids nested functions\");\n \n@@ -2771,16 +2771,16 @@ case 209:\n \t\t  reinit_parse_for_function (); ;\n     break;}\n case 210:\n-#line 1147 \"c-parse.y\"\n+#line 1148 \"c-parse.y\"\n { store_parm_decls (); ;\n     break;}\n case 211:\n-#line 1155 \"c-parse.y\"\n+#line 1156 \"c-parse.y\"\n { finish_function (1);\n \t\t  pop_function_context (); ;\n     break;}\n case 212:\n-#line 1161 \"c-parse.y\"\n+#line 1162 \"c-parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids nested functions\");\n \n@@ -2794,216 +2794,216 @@ case 212:\n \t\t  reinit_parse_for_function (); ;\n     break;}\n case 213:\n-#line 1173 \"c-parse.y\"\n+#line 1174 \"c-parse.y\"\n { store_parm_decls (); ;\n     break;}\n case 214:\n-#line 1181 \"c-parse.y\"\n+#line 1182 \"c-parse.y\"\n { finish_function (1);\n \t\t  pop_function_context (); ;\n     break;}\n case 217:\n-#line 1197 \"c-parse.y\"\n+#line 1198 \"c-parse.y\"\n { yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 218:\n-#line 1199 \"c-parse.y\"\n+#line 1200 \"c-parse.y\"\n { yyval.ttype = build_nt (CALL_EXPR, yyvsp[-2].ttype, yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 219:\n-#line 1204 \"c-parse.y\"\n+#line 1205 \"c-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 220:\n-#line 1206 \"c-parse.y\"\n+#line 1207 \"c-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-2].ttype, NULL_TREE); ;\n     break;}\n case 221:\n-#line 1208 \"c-parse.y\"\n+#line 1209 \"c-parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 222:\n-#line 1215 \"c-parse.y\"\n+#line 1216 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 224:\n-#line 1226 \"c-parse.y\"\n+#line 1227 \"c-parse.y\"\n { yyval.ttype = build_nt (CALL_EXPR, yyvsp[-2].ttype, yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 225:\n-#line 1231 \"c-parse.y\"\n+#line 1232 \"c-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-3].ttype, NULL_TREE);\n \t\t  if (! flag_isoc99)\n \t\t    error (\"`[*]' in parameter declaration only allowed in ISO C 99\");\n \t\t;\n     break;}\n case 226:\n-#line 1236 \"c-parse.y\"\n+#line 1237 \"c-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 227:\n-#line 1238 \"c-parse.y\"\n+#line 1239 \"c-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-2].ttype, NULL_TREE); ;\n     break;}\n case 228:\n-#line 1240 \"c-parse.y\"\n+#line 1241 \"c-parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 229:\n-#line 1247 \"c-parse.y\"\n+#line 1248 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 231:\n-#line 1256 \"c-parse.y\"\n+#line 1257 \"c-parse.y\"\n { yyval.ttype = build_nt (CALL_EXPR, yyvsp[-2].ttype, yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 232:\n-#line 1261 \"c-parse.y\"\n+#line 1262 \"c-parse.y\"\n { yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 233:\n-#line 1263 \"c-parse.y\"\n+#line 1264 \"c-parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 234:\n-#line 1265 \"c-parse.y\"\n+#line 1266 \"c-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-3].ttype, NULL_TREE);\n \t\t  if (! flag_isoc99)\n \t\t    error (\"`[*]' in parameter declaration only allowed in ISO C 99\");\n \t\t;\n     break;}\n case 235:\n-#line 1270 \"c-parse.y\"\n+#line 1271 \"c-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 236:\n-#line 1272 \"c-parse.y\"\n+#line 1273 \"c-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-2].ttype, NULL_TREE); ;\n     break;}\n case 237:\n-#line 1279 \"c-parse.y\"\n+#line 1280 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 239:\n-#line 1285 \"c-parse.y\"\n+#line 1286 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 240:\n-#line 1287 \"c-parse.y\"\n+#line 1288 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 241:\n-#line 1292 \"c-parse.y\"\n+#line 1293 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 242:\n-#line 1294 \"c-parse.y\"\n+#line 1295 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 243:\n-#line 1299 \"c-parse.y\"\n+#line 1300 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 244:\n-#line 1301 \"c-parse.y\"\n+#line 1302 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 245:\n-#line 1306 \"c-parse.y\"\n+#line 1307 \"c-parse.y\"\n { yyval.ttype = start_struct (RECORD_TYPE, yyvsp[-1].ttype);\n \t\t  /* Start scope of tag before parsing components.  */\n \t\t;\n     break;}\n case 246:\n-#line 1310 \"c-parse.y\"\n+#line 1311 \"c-parse.y\"\n { yyval.ttype = finish_struct (yyvsp[-3].ttype, yyvsp[-2].ttype, chainon (yyvsp[-6].ttype, yyvsp[0].ttype)); ;\n     break;}\n case 247:\n-#line 1312 \"c-parse.y\"\n+#line 1313 \"c-parse.y\"\n { yyval.ttype = finish_struct (start_struct (RECORD_TYPE, NULL_TREE),\n \t\t\t\t      yyvsp[-2].ttype, chainon (yyvsp[-4].ttype, yyvsp[0].ttype));\n \t\t;\n     break;}\n case 248:\n-#line 1316 \"c-parse.y\"\n+#line 1317 \"c-parse.y\"\n { yyval.ttype = xref_tag (RECORD_TYPE, yyvsp[0].ttype); ;\n     break;}\n case 249:\n-#line 1318 \"c-parse.y\"\n+#line 1319 \"c-parse.y\"\n { yyval.ttype = start_struct (UNION_TYPE, yyvsp[-1].ttype); ;\n     break;}\n case 250:\n-#line 1320 \"c-parse.y\"\n+#line 1321 \"c-parse.y\"\n { yyval.ttype = finish_struct (yyvsp[-3].ttype, yyvsp[-2].ttype, chainon (yyvsp[-6].ttype, yyvsp[0].ttype)); ;\n     break;}\n case 251:\n-#line 1322 \"c-parse.y\"\n+#line 1323 \"c-parse.y\"\n { yyval.ttype = finish_struct (start_struct (UNION_TYPE, NULL_TREE),\n \t\t\t\t      yyvsp[-2].ttype, chainon (yyvsp[-4].ttype, yyvsp[0].ttype));\n \t\t;\n     break;}\n case 252:\n-#line 1326 \"c-parse.y\"\n+#line 1327 \"c-parse.y\"\n { yyval.ttype = xref_tag (UNION_TYPE, yyvsp[0].ttype); ;\n     break;}\n case 253:\n-#line 1328 \"c-parse.y\"\n+#line 1329 \"c-parse.y\"\n { yyval.ttype = start_enum (yyvsp[-1].ttype); ;\n     break;}\n case 254:\n-#line 1330 \"c-parse.y\"\n+#line 1331 \"c-parse.y\"\n { yyval.ttype = finish_enum (yyvsp[-4].ttype, nreverse (yyvsp[-3].ttype),\n \t\t\t\t    chainon (yyvsp[-7].ttype, yyvsp[0].ttype)); ;\n     break;}\n case 255:\n-#line 1333 \"c-parse.y\"\n+#line 1334 \"c-parse.y\"\n { yyval.ttype = start_enum (NULL_TREE); ;\n     break;}\n case 256:\n-#line 1335 \"c-parse.y\"\n+#line 1336 \"c-parse.y\"\n { yyval.ttype = finish_enum (yyvsp[-4].ttype, nreverse (yyvsp[-3].ttype),\n \t\t\t\t    chainon (yyvsp[-6].ttype, yyvsp[0].ttype)); ;\n     break;}\n case 257:\n-#line 1338 \"c-parse.y\"\n+#line 1339 \"c-parse.y\"\n { yyval.ttype = xref_tag (ENUMERAL_TYPE, yyvsp[0].ttype); ;\n     break;}\n case 261:\n-#line 1349 \"c-parse.y\"\n+#line 1350 \"c-parse.y\"\n { if (pedantic && ! flag_isoc99)\n \t\t    pedwarn (\"comma at end of enumerator list\"); ;\n     break;}\n case 262:\n-#line 1355 \"c-parse.y\"\n+#line 1356 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 263:\n-#line 1357 \"c-parse.y\"\n+#line 1358 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t  pedwarn (\"no semicolon at end of struct or union\"); ;\n     break;}\n case 264:\n-#line 1362 \"c-parse.y\"\n+#line 1363 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 265:\n-#line 1364 \"c-parse.y\"\n+#line 1365 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[-2].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 266:\n-#line 1366 \"c-parse.y\"\n+#line 1367 \"c-parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"extra semicolon in struct or union specified\"); ;\n     break;}\n case 267:\n-#line 1381 \"c-parse.y\"\n+#line 1382 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype;\n \t\t  current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack); ;\n     break;}\n case 268:\n-#line 1386 \"c-parse.y\"\n+#line 1387 \"c-parse.y\"\n {\n \t\t  /* Support for unnamed structs or unions as members of \n \t\t     structs or unions (which is [a] useful and [b] supports \n@@ -3018,164 +3018,164 @@ case 268:\n \t\t;\n     break;}\n case 269:\n-#line 1399 \"c-parse.y\"\n+#line 1400 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype;\n \t\t  current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack); ;\n     break;}\n case 270:\n-#line 1404 \"c-parse.y\"\n+#line 1405 \"c-parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids member declarations with no members\");\n \t\t  shadow_tag(yyvsp[0].ttype);\n \t\t  yyval.ttype = NULL_TREE; ;\n     break;}\n case 271:\n-#line 1409 \"c-parse.y\"\n+#line 1410 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 272:\n-#line 1411 \"c-parse.y\"\n+#line 1412 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype;\n \t\t  RESTORE_WARN_FLAGS (yyvsp[-1].ttype); ;\n     break;}\n case 274:\n-#line 1418 \"c-parse.y\"\n+#line 1419 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 275:\n-#line 1423 \"c-parse.y\"\n+#line 1424 \"c-parse.y\"\n { yyval.ttype = grokfield (yyvsp[-3].filename, yyvsp[-2].lineno, yyvsp[-1].ttype, current_declspecs, NULL_TREE);\n \t\t  decl_attributes (yyval.ttype, yyvsp[0].ttype, prefix_attributes); ;\n     break;}\n case 276:\n-#line 1427 \"c-parse.y\"\n+#line 1428 \"c-parse.y\"\n { yyval.ttype = grokfield (yyvsp[-5].filename, yyvsp[-4].lineno, yyvsp[-3].ttype, current_declspecs, yyvsp[-1].ttype);\n \t\t  decl_attributes (yyval.ttype, yyvsp[0].ttype, prefix_attributes); ;\n     break;}\n case 277:\n-#line 1430 \"c-parse.y\"\n+#line 1431 \"c-parse.y\"\n { yyval.ttype = grokfield (yyvsp[-4].filename, yyvsp[-3].lineno, NULL_TREE, current_declspecs, yyvsp[-1].ttype);\n \t\t  decl_attributes (yyval.ttype, yyvsp[0].ttype, prefix_attributes); ;\n     break;}\n case 279:\n-#line 1442 \"c-parse.y\"\n+#line 1443 \"c-parse.y\"\n { if (yyvsp[-2].ttype == error_mark_node)\n \t\t    yyval.ttype = yyvsp[-2].ttype;\n \t\t  else\n \t\t    yyval.ttype = chainon (yyvsp[0].ttype, yyvsp[-2].ttype); ;\n     break;}\n case 280:\n-#line 1447 \"c-parse.y\"\n+#line 1448 \"c-parse.y\"\n { yyval.ttype = error_mark_node; ;\n     break;}\n case 281:\n-#line 1453 \"c-parse.y\"\n+#line 1454 \"c-parse.y\"\n { yyval.ttype = build_enumerator (yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 282:\n-#line 1455 \"c-parse.y\"\n+#line 1456 \"c-parse.y\"\n { yyval.ttype = build_enumerator (yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 283:\n-#line 1460 \"c-parse.y\"\n+#line 1461 \"c-parse.y\"\n { yyval.ttype = build_tree_list (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 284:\n-#line 1462 \"c-parse.y\"\n+#line 1463 \"c-parse.y\"\n { yyval.ttype = build_tree_list (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 285:\n-#line 1467 \"c-parse.y\"\n+#line 1468 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 287:\n-#line 1473 \"c-parse.y\"\n+#line 1474 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 288:\n-#line 1475 \"c-parse.y\"\n+#line 1476 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 289:\n-#line 1480 \"c-parse.y\"\n+#line 1481 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 290:\n-#line 1482 \"c-parse.y\"\n+#line 1483 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 291:\n-#line 1487 \"c-parse.y\"\n+#line 1488 \"c-parse.y\"\n { yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 292:\n-#line 1490 \"c-parse.y\"\n+#line 1491 \"c-parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 293:\n-#line 1492 \"c-parse.y\"\n+#line 1493 \"c-parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 294:\n-#line 1494 \"c-parse.y\"\n+#line 1495 \"c-parse.y\"\n { yyval.ttype = build_nt (CALL_EXPR, yyvsp[-2].ttype, yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 295:\n-#line 1496 \"c-parse.y\"\n+#line 1497 \"c-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 296:\n-#line 1498 \"c-parse.y\"\n+#line 1499 \"c-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-2].ttype, NULL_TREE); ;\n     break;}\n case 297:\n-#line 1500 \"c-parse.y\"\n+#line 1501 \"c-parse.y\"\n { yyval.ttype = build_nt (CALL_EXPR, NULL_TREE, yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 298:\n-#line 1502 \"c-parse.y\"\n+#line 1503 \"c-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, NULL_TREE, yyvsp[-1].ttype); ;\n     break;}\n case 299:\n-#line 1504 \"c-parse.y\"\n+#line 1505 \"c-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, NULL_TREE, NULL_TREE); ;\n     break;}\n case 300:\n-#line 1508 \"c-parse.y\"\n+#line 1509 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 301:\n-#line 1517 \"c-parse.y\"\n+#line 1518 \"c-parse.y\"\n {\n \t\t  if (pedantic && yyvsp[0].ends_in_label)\n \t\t    pedwarn (\"ANSI C forbids label at end of compound statement\");\n \t\t;\n     break;}\n case 303:\n-#line 1526 \"c-parse.y\"\n+#line 1527 \"c-parse.y\"\n { yyval.ends_in_label = yyvsp[0].ends_in_label; ;\n     break;}\n case 304:\n-#line 1528 \"c-parse.y\"\n+#line 1529 \"c-parse.y\"\n { yyval.ends_in_label = 0; ;\n     break;}\n case 308:\n-#line 1540 \"c-parse.y\"\n+#line 1541 \"c-parse.y\"\n { emit_line_note (input_filename, lineno);\n \t\t  pushlevel (0);\n \t\t  clear_last_expr ();\n \t\t  expand_start_bindings (0);\n \t\t;\n     break;}\n case 310:\n-#line 1552 \"c-parse.y\"\n+#line 1553 \"c-parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids label declarations\"); ;\n     break;}\n case 313:\n-#line 1563 \"c-parse.y\"\n+#line 1564 \"c-parse.y\"\n { tree link;\n \t\t  for (link = yyvsp[-1].ttype; link; link = TREE_CHAIN (link))\n \t\t    {\n@@ -3186,37 +3186,37 @@ case 313:\n \t\t;\n     break;}\n case 314:\n-#line 1577 \"c-parse.y\"\n+#line 1578 \"c-parse.y\"\n {;\n     break;}\n case 316:\n-#line 1581 \"c-parse.y\"\n+#line 1582 \"c-parse.y\"\n { compstmt_count++; ;\n     break;}\n case 317:\n-#line 1584 \"c-parse.y\"\n+#line 1585 \"c-parse.y\"\n { yyval.ttype = convert (void_type_node, integer_zero_node); ;\n     break;}\n case 318:\n-#line 1586 \"c-parse.y\"\n+#line 1587 \"c-parse.y\"\n { emit_line_note (input_filename, lineno);\n \t\t  expand_end_bindings (getdecls (), 1, 0);\n \t\t  yyval.ttype = poplevel (1, 1, 0); ;\n     break;}\n case 319:\n-#line 1590 \"c-parse.y\"\n+#line 1591 \"c-parse.y\"\n { emit_line_note (input_filename, lineno);\n \t\t  expand_end_bindings (getdecls (), kept_level_p (), 0);\n \t\t  yyval.ttype = poplevel (kept_level_p (), 0, 0); ;\n     break;}\n case 320:\n-#line 1594 \"c-parse.y\"\n+#line 1595 \"c-parse.y\"\n { emit_line_note (input_filename, lineno);\n \t\t  expand_end_bindings (getdecls (), kept_level_p (), 0);\n \t\t  yyval.ttype = poplevel (kept_level_p (), 0, 0); ;\n     break;}\n case 321:\n-#line 1601 \"c-parse.y\"\n+#line 1602 \"c-parse.y\"\n { if (current_function_decl == 0)\n \t\t    {\n \t\t      error (\"braced-group within expression allowed only inside a function\");\n@@ -3234,11 +3234,11 @@ case 321:\n \t\t;\n     break;}\n case 322:\n-#line 1618 \"c-parse.y\"\n+#line 1619 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 325:\n-#line 1632 \"c-parse.y\"\n+#line 1633 \"c-parse.y\"\n { emit_line_note (yyvsp[-5].filename, yyvsp[-4].lineno);\n \t\t  c_expand_start_cond (truthvalue_conversion (yyvsp[-1].ttype), 0, \n \t\t\t\t       compstmt_count);\n@@ -3248,7 +3248,7 @@ case 325:\n \t\t  position_after_white_space (); ;\n     break;}\n case 326:\n-#line 1646 \"c-parse.y\"\n+#line 1647 \"c-parse.y\"\n { stmt_count++;\n \t\t  compstmt_count++;\n \t\t  emit_line_note (yyvsp[-2].filename, yyvsp[-1].lineno);\n@@ -3258,43 +3258,43 @@ case 326:\n \t\t  position_after_white_space (); ;\n     break;}\n case 327:\n-#line 1654 \"c-parse.y\"\n+#line 1655 \"c-parse.y\"\n { expand_loop_continue_here (); ;\n     break;}\n case 328:\n-#line 1658 \"c-parse.y\"\n+#line 1659 \"c-parse.y\"\n { yyval.filename = input_filename; ;\n     break;}\n case 329:\n-#line 1662 \"c-parse.y\"\n+#line 1663 \"c-parse.y\"\n { yyval.lineno = lineno; ;\n     break;}\n case 330:\n-#line 1667 \"c-parse.y\"\n+#line 1668 \"c-parse.y\"\n { ;\n     break;}\n case 331:\n-#line 1672 \"c-parse.y\"\n+#line 1673 \"c-parse.y\"\n { ;\n     break;}\n case 332:\n-#line 1677 \"c-parse.y\"\n+#line 1678 \"c-parse.y\"\n { yyval.ends_in_label = yyvsp[0].ends_in_label; ;\n     break;}\n case 333:\n-#line 1682 \"c-parse.y\"\n+#line 1683 \"c-parse.y\"\n { yyval.ends_in_label = 0; ;\n     break;}\n case 334:\n-#line 1684 \"c-parse.y\"\n+#line 1685 \"c-parse.y\"\n { yyval.ends_in_label = 1; ;\n     break;}\n case 335:\n-#line 1690 \"c-parse.y\"\n+#line 1691 \"c-parse.y\"\n { stmt_count++; ;\n     break;}\n case 337:\n-#line 1693 \"c-parse.y\"\n+#line 1694 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-3].filename, yyvsp[-2].lineno);\n /* It appears that this should not be done--that a non-lvalue array\n@@ -3312,19 +3312,19 @@ case 337:\n \t\t  iterator_expand (yyvsp[-1].ttype); ;\n     break;}\n case 338:\n-#line 1709 \"c-parse.y\"\n+#line 1710 \"c-parse.y\"\n { c_expand_start_else ();\n \t\t  yyvsp[-1].itype = stmt_count;\n \t\t  position_after_white_space (); ;\n     break;}\n case 339:\n-#line 1713 \"c-parse.y\"\n+#line 1714 \"c-parse.y\"\n { c_expand_end_cond ();\n \t\t  if (extra_warnings && stmt_count == yyvsp[-3].itype)\n \t\t    warning (\"empty body in an else-statement\"); ;\n     break;}\n case 340:\n-#line 1717 \"c-parse.y\"\n+#line 1718 \"c-parse.y\"\n { c_expand_end_cond ();\n \t\t  /* This warning is here instead of in simple_if, because we\n \t\t     do not want a warning if an empty if is followed by an\n@@ -3335,11 +3335,11 @@ case 340:\n \t\t\t\t\t\t\"empty body in an if-statement\"); ;\n     break;}\n case 341:\n-#line 1729 \"c-parse.y\"\n+#line 1730 \"c-parse.y\"\n { c_expand_end_cond (); ;\n     break;}\n case 342:\n-#line 1731 \"c-parse.y\"\n+#line 1732 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-2].filename, yyvsp[-1].lineno);\n \t\t  /* The emit_nop used to come before emit_line_note,\n@@ -3351,7 +3351,7 @@ case 342:\n \t\t  emit_nop (); ;\n     break;}\n case 343:\n-#line 1741 \"c-parse.y\"\n+#line 1742 \"c-parse.y\"\n { /* Don't start the loop till we have succeeded\n \t\t     in parsing the end test.  This is to make sure\n \t\t     that we end every loop we start.  */\n@@ -3362,22 +3362,22 @@ case 343:\n \t\t  position_after_white_space (); ;\n     break;}\n case 344:\n-#line 1750 \"c-parse.y\"\n+#line 1751 \"c-parse.y\"\n { expand_end_loop (); ;\n     break;}\n case 345:\n-#line 1753 \"c-parse.y\"\n+#line 1754 \"c-parse.y\"\n { emit_line_note (input_filename, lineno);\n \t\t  expand_exit_loop_if_false (NULL_PTR,\n \t\t\t\t\t     truthvalue_conversion (yyvsp[-2].ttype));\n \t\t  expand_end_loop (); ;\n     break;}\n case 346:\n-#line 1759 \"c-parse.y\"\n+#line 1760 \"c-parse.y\"\n { expand_end_loop (); ;\n     break;}\n case 347:\n-#line 1762 \"c-parse.y\"\n+#line 1763 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-5].filename, yyvsp[-4].lineno);\n \t\t  /* See comment in `while' alternative, above.  */\n@@ -3390,12 +3390,12 @@ case 347:\n \t\t;\n     break;}\n case 348:\n-#line 1774 \"c-parse.y\"\n+#line 1775 \"c-parse.y\"\n { yyvsp[0].lineno = lineno;\n \t\t  yyval.filename = input_filename; ;\n     break;}\n case 349:\n-#line 1777 \"c-parse.y\"\n+#line 1778 \"c-parse.y\"\n { \n \t\t  /* Start the loop.  Doing this after parsing\n \t\t     all the expressions ensures we will end the loop.  */\n@@ -3410,7 +3410,7 @@ case 349:\n \t\t  position_after_white_space (); ;\n     break;}\n case 350:\n-#line 1790 \"c-parse.y\"\n+#line 1791 \"c-parse.y\"\n { /* Emit the increment expression, with a line number.  */\n \t\t  emit_line_note (yyvsp[-4].filename, yyvsp[-5].lineno);\n \t\t  expand_loop_continue_here ();\n@@ -3419,44 +3419,44 @@ case 350:\n \t\t  expand_end_loop (); ;\n     break;}\n case 351:\n-#line 1797 \"c-parse.y\"\n+#line 1798 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-5].filename, yyvsp[-4].lineno);\n \t\t  c_expand_start_case (yyvsp[-1].ttype);\n \t\t  position_after_white_space (); ;\n     break;}\n case 352:\n-#line 1802 \"c-parse.y\"\n+#line 1803 \"c-parse.y\"\n { expand_end_case (yyvsp[-3].ttype); ;\n     break;}\n case 353:\n-#line 1804 \"c-parse.y\"\n+#line 1805 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-3].filename, yyvsp[-2].lineno);\n \t\t  if ( ! expand_exit_something ())\n \t\t    error (\"break statement not within loop or switch\"); ;\n     break;}\n case 354:\n-#line 1809 \"c-parse.y\"\n+#line 1810 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-3].filename, yyvsp[-2].lineno);\n \t\t  if (! expand_continue_loop (NULL_PTR))\n \t\t    error (\"continue statement not within a loop\"); ;\n     break;}\n case 355:\n-#line 1814 \"c-parse.y\"\n+#line 1815 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-3].filename, yyvsp[-2].lineno);\n \t\t  c_expand_return (NULL_TREE); ;\n     break;}\n case 356:\n-#line 1818 \"c-parse.y\"\n+#line 1819 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-4].filename, yyvsp[-3].lineno);\n \t\t  c_expand_return (yyvsp[-1].ttype); ;\n     break;}\n case 357:\n-#line 1822 \"c-parse.y\"\n+#line 1823 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-7].filename, yyvsp[-6].lineno);\n \t\t  STRIP_NOPS (yyvsp[-2].ttype);\n@@ -3468,31 +3468,31 @@ case 357:\n \t\t    error (\"argument of `asm' is not a constant string\"); ;\n     break;}\n case 358:\n-#line 1833 \"c-parse.y\"\n+#line 1834 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-9].filename, yyvsp[-8].lineno);\n \t\t  c_expand_asm_operands (yyvsp[-4].ttype, yyvsp[-2].ttype, NULL_TREE, NULL_TREE,\n \t\t\t\t\t yyvsp[-6].ttype == ridpointers[(int)RID_VOLATILE],\n \t\t\t\t\t input_filename, lineno); ;\n     break;}\n case 359:\n-#line 1840 \"c-parse.y\"\n+#line 1841 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-11].filename, yyvsp[-10].lineno);\n \t\t  c_expand_asm_operands (yyvsp[-6].ttype, yyvsp[-4].ttype, yyvsp[-2].ttype, NULL_TREE,\n \t\t\t\t\t yyvsp[-8].ttype == ridpointers[(int)RID_VOLATILE],\n \t\t\t\t\t input_filename, lineno); ;\n     break;}\n case 360:\n-#line 1848 \"c-parse.y\"\n+#line 1849 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-13].filename, yyvsp[-12].lineno);\n \t\t  c_expand_asm_operands (yyvsp[-8].ttype, yyvsp[-6].ttype, yyvsp[-4].ttype, yyvsp[-2].ttype,\n \t\t\t\t\t yyvsp[-10].ttype == ridpointers[(int)RID_VOLATILE],\n \t\t\t\t\t input_filename, lineno); ;\n     break;}\n case 361:\n-#line 1854 \"c-parse.y\"\n+#line 1855 \"c-parse.y\"\n { tree decl;\n \t\t  stmt_count++;\n \t\t  emit_line_note (yyvsp[-4].filename, yyvsp[-3].lineno);\n@@ -3505,15 +3505,15 @@ case 361:\n \t\t;\n     break;}\n case 362:\n-#line 1865 \"c-parse.y\"\n+#line 1866 \"c-parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids `goto *expr;'\");\n \t\t  stmt_count++;\n \t\t  emit_line_note (yyvsp[-5].filename, yyvsp[-4].lineno);\n \t\t  expand_computed_goto (convert (ptr_type_node, yyvsp[-1].ttype)); ;\n     break;}\n case 365:\n-#line 1880 \"c-parse.y\"\n+#line 1881 \"c-parse.y\"\n {\n \t    /* The value returned by this action is  */\n \t    /*      1 if everything is OK */ \n@@ -3536,14 +3536,14 @@ case 365:\n \t  ;\n     break;}\n case 366:\n-#line 1901 \"c-parse.y\"\n+#line 1902 \"c-parse.y\"\n {\n \t    if (yyvsp[-1].itype)\n \t      iterator_for_loop_end (yyvsp[-3].ttype);\n \t  ;\n     break;}\n case 367:\n-#line 1932 \"c-parse.y\"\n+#line 1933 \"c-parse.y\"\n { register tree value = check_case_value (yyvsp[-1].ttype);\n \t\t  register tree label\n \t\t    = build_decl (LABEL_DECL, NULL_TREE, NULL_TREE);\n@@ -3576,7 +3576,7 @@ case 367:\n \t\t  position_after_white_space (); ;\n     break;}\n case 368:\n-#line 1963 \"c-parse.y\"\n+#line 1964 \"c-parse.y\"\n { register tree value1 = check_case_value (yyvsp[-3].ttype);\n \t\t  register tree value2 = check_case_value (yyvsp[-1].ttype);\n \t\t  register tree label\n@@ -3609,7 +3609,7 @@ case 368:\n \t\t  position_after_white_space (); ;\n     break;}\n case 369:\n-#line 1994 \"c-parse.y\"\n+#line 1995 \"c-parse.y\"\n {\n \t\t  tree duplicate;\n \t\t  register tree label\n@@ -3626,7 +3626,7 @@ case 369:\n \t\t  position_after_white_space (); ;\n     break;}\n case 370:\n-#line 2009 \"c-parse.y\"\n+#line 2010 \"c-parse.y\"\n { tree label = define_label (input_filename, lineno, yyvsp[-2].ttype);\n \t\t  stmt_count++;\n \t\t  emit_nop ();\n@@ -3638,52 +3638,52 @@ case 370:\n \t\t  position_after_white_space (); ;\n     break;}\n case 371:\n-#line 2024 \"c-parse.y\"\n+#line 2025 \"c-parse.y\"\n { emit_line_note (input_filename, lineno);\n \t\t  yyval.ttype = NULL_TREE; ;\n     break;}\n case 372:\n-#line 2027 \"c-parse.y\"\n+#line 2028 \"c-parse.y\"\n { emit_line_note (input_filename, lineno); ;\n     break;}\n case 373:\n-#line 2032 \"c-parse.y\"\n+#line 2033 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 375:\n-#line 2039 \"c-parse.y\"\n+#line 2040 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 378:\n-#line 2046 \"c-parse.y\"\n+#line 2047 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 379:\n-#line 2051 \"c-parse.y\"\n+#line 2052 \"c-parse.y\"\n { yyval.ttype = build_tree_list (yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 380:\n-#line 2056 \"c-parse.y\"\n+#line 2057 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, combine_strings (yyvsp[0].ttype), NULL_TREE); ;\n     break;}\n case 381:\n-#line 2058 \"c-parse.y\"\n+#line 2059 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, combine_strings (yyvsp[0].ttype), yyvsp[-2].ttype); ;\n     break;}\n case 382:\n-#line 2064 \"c-parse.y\"\n+#line 2065 \"c-parse.y\"\n { pushlevel (0);\n \t\t  clear_parm_order ();\n \t\t  declare_parm_level (0); ;\n     break;}\n case 383:\n-#line 2068 \"c-parse.y\"\n+#line 2069 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype;\n \t\t  parmlist_tags_warning ();\n \t\t  poplevel (0, 0, 0); ;\n     break;}\n case 385:\n-#line 2076 \"c-parse.y\"\n+#line 2077 \"c-parse.y\"\n { tree parm;\n \t\t  if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids forward parameter declarations\");\n@@ -3693,19 +3693,19 @@ case 385:\n \t\t  clear_parm_order (); ;\n     break;}\n case 386:\n-#line 2084 \"c-parse.y\"\n+#line 2085 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 387:\n-#line 2086 \"c-parse.y\"\n+#line 2087 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, NULL_TREE, NULL_TREE); ;\n     break;}\n case 388:\n-#line 2092 \"c-parse.y\"\n+#line 2093 \"c-parse.y\"\n { yyval.ttype = get_parm_info (0); ;\n     break;}\n case 389:\n-#line 2094 \"c-parse.y\"\n+#line 2095 \"c-parse.y\"\n { yyval.ttype = get_parm_info (0);\n \t\t  /* Gcc used to allow this as an extension.  However, it does\n \t\t     not work for all targets, and thus has been disabled.\n@@ -3717,23 +3717,23 @@ case 389:\n \t\t;\n     break;}\n case 390:\n-#line 2104 \"c-parse.y\"\n+#line 2105 \"c-parse.y\"\n { yyval.ttype = get_parm_info (1); ;\n     break;}\n case 391:\n-#line 2106 \"c-parse.y\"\n+#line 2107 \"c-parse.y\"\n { yyval.ttype = get_parm_info (0); ;\n     break;}\n case 392:\n-#line 2111 \"c-parse.y\"\n+#line 2112 \"c-parse.y\"\n { push_parm_decl (yyvsp[0].ttype); ;\n     break;}\n case 393:\n-#line 2113 \"c-parse.y\"\n+#line 2114 \"c-parse.y\"\n { push_parm_decl (yyvsp[0].ttype); ;\n     break;}\n case 394:\n-#line 2120 \"c-parse.y\"\n+#line 2121 \"c-parse.y\"\n { yyval.ttype = build_tree_list (build_tree_list (current_declspecs,\n \t\t\t\t\t\t\t yyvsp[-1].ttype),\n \t\t\t\t\tbuild_tree_list (prefix_attributes,\n@@ -3743,7 +3743,7 @@ case 394:\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack); ;\n     break;}\n case 395:\n-#line 2128 \"c-parse.y\"\n+#line 2129 \"c-parse.y\"\n { yyval.ttype = build_tree_list (build_tree_list (current_declspecs,\n \t\t\t\t\t\t\t yyvsp[-1].ttype),\n \t\t\t\t\tbuild_tree_list (prefix_attributes,\n@@ -3753,7 +3753,7 @@ case 395:\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack); ;\n     break;}\n case 396:\n-#line 2136 \"c-parse.y\"\n+#line 2137 \"c-parse.y\"\n { yyval.ttype = build_tree_list (build_tree_list (current_declspecs,\n \t\t\t\t\t\t\t yyvsp[-1].ttype),\n \t\t\t\t\tbuild_tree_list (prefix_attributes,\n@@ -3763,7 +3763,7 @@ case 396:\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack); ;\n     break;}\n case 397:\n-#line 2144 \"c-parse.y\"\n+#line 2145 \"c-parse.y\"\n { yyval.ttype = build_tree_list (build_tree_list (current_declspecs,\n \t\t\t\t\t\t\t yyvsp[-1].ttype),\n \t\t\t\t\tbuild_tree_list (prefix_attributes,\n@@ -3773,7 +3773,7 @@ case 397:\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack); ;\n     break;}\n case 398:\n-#line 2153 \"c-parse.y\"\n+#line 2154 \"c-parse.y\"\n { yyval.ttype = build_tree_list (build_tree_list (current_declspecs,\n \t\t\t\t\t\t\t yyvsp[-1].ttype),\n \t\t\t\t\tbuild_tree_list (prefix_attributes,\n@@ -3783,50 +3783,50 @@ case 398:\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack); ;\n     break;}\n case 399:\n-#line 2166 \"c-parse.y\"\n+#line 2167 \"c-parse.y\"\n { pushlevel (0);\n \t\t  clear_parm_order ();\n \t\t  declare_parm_level (1); ;\n     break;}\n case 400:\n-#line 2170 \"c-parse.y\"\n+#line 2171 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype;\n \t\t  parmlist_tags_warning ();\n \t\t  poplevel (0, 0, 0); ;\n     break;}\n case 402:\n-#line 2178 \"c-parse.y\"\n+#line 2179 \"c-parse.y\"\n { tree t;\n \t\t  for (t = yyvsp[-1].ttype; t; t = TREE_CHAIN (t))\n \t\t    if (TREE_VALUE (t) == NULL_TREE)\n \t\t      error (\"`...' in old-style identifier list\");\n \t\t  yyval.ttype = tree_cons (NULL_TREE, NULL_TREE, yyvsp[-1].ttype); ;\n     break;}\n case 403:\n-#line 2188 \"c-parse.y\"\n+#line 2189 \"c-parse.y\"\n { yyval.ttype = build_tree_list (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 404:\n-#line 2190 \"c-parse.y\"\n+#line 2191 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[-2].ttype, build_tree_list (NULL_TREE, yyvsp[0].ttype)); ;\n     break;}\n case 405:\n-#line 2196 \"c-parse.y\"\n+#line 2197 \"c-parse.y\"\n { yyval.ttype = build_tree_list (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 406:\n-#line 2198 \"c-parse.y\"\n+#line 2199 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[-2].ttype, build_tree_list (NULL_TREE, yyvsp[0].ttype)); ;\n     break;}\n case 407:\n-#line 2203 \"c-parse.y\"\n+#line 2204 \"c-parse.y\"\n { yyval.ttype = SAVE_WARN_FLAGS();\n \t\t  pedantic = 0;\n \t\t  warn_pointer_arith = 0; ;\n     break;}\n }\n    /* the action file gets copied in in place of this dollarsign */\n-#line 543 \"/usr/share/misc/bison.simple\"\n+#line 543 \"/usr/lib/bison.simple\"\n \f\n   yyvsp -= yylen;\n   yyssp -= yylen;\n@@ -4046,5 +4046,5 @@ case 407:\n     }\n   return 1;\n }\n-#line 2208 \"c-parse.y\"\n+#line 2209 \"c-parse.y\"\n "}, {"sha": "c278565931d201ef9227947b9f667a704f299d5b", "filename": "gcc/cexp.c", "status": "modified", "additions": 173, "deletions": 105, "changes": 278, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6a6823ed0b970d0ea76e72a1fb7e219365433e4/gcc%2Fcexp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6a6823ed0b970d0ea76e72a1fb7e219365433e4/gcc%2Fcexp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcexp.c?ref=b6a6823ed0b970d0ea76e72a1fb7e219365433e4", "patch": "@@ -1,25 +1,24 @@\n \n /*  A Bison parser, made from cexp.y\n- by  GNU Bison version 1.25\n-  */\n+    by GNU Bison version 1.28  */\n \n #define YYBISON 1  /* Identify Bison output.  */\n \n-#define\tINT\t258\n-#define\tCHAR\t259\n-#define\tNAME\t260\n-#define\tERROR\t261\n-#define\tOR\t262\n-#define\tAND\t263\n-#define\tEQUAL\t264\n-#define\tNOTEQUAL\t265\n-#define\tLEQ\t266\n-#define\tGEQ\t267\n-#define\tLSH\t268\n-#define\tRSH\t269\n-#define\tUNARY\t270\n-\n-#line 27 \"cexp.y\"\n+#define\tINT\t257\n+#define\tCHAR\t258\n+#define\tNAME\t259\n+#define\tERROR\t260\n+#define\tOR\t261\n+#define\tAND\t262\n+#define\tEQUAL\t263\n+#define\tNOTEQUAL\t264\n+#define\tLEQ\t265\n+#define\tGEQ\t266\n+#define\tLSH\t267\n+#define\tRSH\t268\n+#define\tUNARY\t269\n+\n+#line 28 \"cexp.y\"\n \n #include \"config.h\"\n \n@@ -146,7 +145,7 @@ static void integer_overflow PARAMS ((void));\n #define SIGNED (~0)\n #define UNSIGNED 0\n \n-#line 154 \"cexp.y\"\n+#line 155 \"cexp.y\"\n typedef union {\n   struct constant {HOST_WIDEST_INT value; int signedp;} integer;\n   struct name {U_CHAR *address; int length;} name;\n@@ -166,7 +165,7 @@ typedef union {\n #define\tYYFLAG\t\t-32768\n #define\tYYNTBASE\t34\n \n-#define YYTRANSLATE(x) ((unsigned)(x) <= 270 ? yytranslate[x] : 43)\n+#define YYTRANSLATE(x) ((unsigned)(x) <= 269 ? yytranslate[x] : 43)\n \n static const char yytranslate[] = {     0,\n      2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n@@ -194,8 +193,8 @@ static const char yytranslate[] = {     0,\n      2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n      2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n      2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n-     2,     2,     2,     2,     2,     1,     2,     3,     4,     5,\n-     6,    10,    11,    15,    16,    19,    20,    21,    22,    28\n+     2,     2,     2,     2,     2,     1,     3,     4,     5,     6,\n+    10,    11,    15,    16,    19,    20,    21,    22,    28\n };\n \n #if YYDEBUG != 0\n@@ -227,10 +226,10 @@ static const short yyrhs[] = {    35,\n \n #if YYDEBUG != 0\n static const short yyrline[] = { 0,\n-   184,   194,   195,   202,   207,   210,   212,   215,   219,   221,\n-   226,   231,   244,   261,   274,   280,   286,   292,   298,   301,\n-   304,   311,   318,   325,   332,   335,   338,   341,   344,   347,\n-   350,   353,   355,   358,   361,   363,   365,   373,   375,   388\n+   185,   195,   196,   203,   208,   211,   213,   216,   220,   222,\n+   227,   232,   245,   262,   275,   281,   287,   293,   299,   302,\n+   305,   312,   319,   326,   333,   336,   339,   342,   345,   348,\n+   351,   354,   356,   359,   362,   364,   366,   374,   376,   389\n };\n #endif\n \n@@ -336,7 +335,8 @@ static const short yycheck[] = {     4,\n     26,    27,    23,    24,    25,    26,    27,     0,     9\n };\n /* -*-C-*-  Note some compilers choke on comments on `#line' lines.  */\n-#line 3 \"/usr/cygnus/TBD-TBD/share/bison.simple\"\n+#line 3 \"/usr/lib/bison.simple\"\n+/* This file comes from bison-1.28.  */\n \n /* Skeleton output parser for bison,\n    Copyright (C) 1984, 1989, 1990 Free Software Foundation, Inc.\n@@ -353,46 +353,66 @@ static const short yycheck[] = {     4,\n \n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n-   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.  */\n+   Foundation, Inc., 59 Temple Place - Suite 330,\n+   Boston, MA 02111-1307, USA.  */\n \n /* As a special exception, when this file is copied by Bison into a\n    Bison output file, you may use that output file without restriction.\n    This special exception was added by the Free Software Foundation\n    in version 1.24 of Bison.  */\n \n-#ifndef alloca\n+/* This is the parser code that is written into each bison parser\n+  when the %semantic_parser declaration is not specified in the grammar.\n+  It was written by Richard Stallman by simplifying the hairy parser\n+  used when %semantic_parser is specified.  */\n+\n+#ifndef YYSTACK_USE_ALLOCA\n+#ifdef alloca\n+#define YYSTACK_USE_ALLOCA\n+#else /* alloca not defined */\n #ifdef __GNUC__\n+#define YYSTACK_USE_ALLOCA\n #define alloca __builtin_alloca\n #else /* not GNU C.  */\n-#if (!defined (__STDC__) && defined (sparc)) || defined (__sparc__) || defined (__sparc) || defined (__sgi)\n+#if (!defined (__STDC__) && defined (sparc)) || defined (__sparc__) || defined (__sparc) || defined (__sgi) || (defined (__sun) && defined (__i386))\n+#define YYSTACK_USE_ALLOCA\n #include <alloca.h>\n #else /* not sparc */\n-#if defined (MSDOS) && !defined (__TURBOC__)\n+/* We think this test detects Watcom and Microsoft C.  */\n+/* This used to test MSDOS, but that is a bad idea\n+   since that symbol is in the user namespace.  */\n+#if (defined (_MSDOS) || defined (_MSDOS_)) && !defined (__TURBOC__)\n+#if 0 /* No need for malloc.h, which pollutes the namespace;\n+\t instead, just don't use alloca.  */\n #include <malloc.h>\n+#endif\n #else /* not MSDOS, or __TURBOC__ */\n #if defined(_AIX)\n-#include <malloc.h>\n+/* I don't know what this was needed for, but it pollutes the namespace.\n+   So I turned it off.   rms, 2 May 1997.  */\n+/* #include <malloc.h>  */\n  #pragma alloca\n-#else /* not MSDOS, __TURBOC__, or _AIX */\n-#ifdef __hpux\n-#ifdef __cplusplus\n-extern \"C\" {\n-void *alloca (unsigned int);\n-};\n-#else /* not __cplusplus */\n-void *alloca ();\n-#endif /* not __cplusplus */\n+#define YYSTACK_USE_ALLOCA\n+#else /* not MSDOS, or __TURBOC__, or _AIX */\n+#if 0\n+#ifdef __hpux /* haible@ilog.fr says this works for HPUX 9.05 and up,\n+\t\t and on HPUX 10.  Eventually we can turn this on.  */\n+#define YYSTACK_USE_ALLOCA\n+#define alloca __builtin_alloca\n #endif /* __hpux */\n+#endif\n #endif /* not _AIX */\n #endif /* not MSDOS, or __TURBOC__ */\n-#endif /* not sparc.  */\n-#endif /* not GNU C.  */\n-#endif /* alloca not defined.  */\n+#endif /* not sparc */\n+#endif /* not GNU C */\n+#endif /* alloca not defined */\n+#endif /* YYSTACK_USE_ALLOCA not defined */\n \n-/* This is the parser code that is written into each bison parser\n-  when the %semantic_parser declaration is not specified in the grammar.\n-  It was written by Richard Stallman by simplifying the hairy parser\n-  used when %semantic_parser is specified.  */\n+#ifdef YYSTACK_USE_ALLOCA\n+#define YYSTACK_ALLOC alloca\n+#else\n+#define YYSTACK_ALLOC malloc\n+#endif\n \n /* Note: there must be only one dollar sign in this file.\n    It is replaced by the list of actions, each action\n@@ -402,8 +422,8 @@ void *alloca ();\n #define yyclearin\t(yychar = YYEMPTY)\n #define YYEMPTY\t\t-2\n #define YYEOF\t\t0\n-#define YYACCEPT\treturn(0)\n-#define YYABORT \treturn(1)\n+#define YYACCEPT\tgoto yyacceptlab\n+#define YYABORT \tgoto yyabortlab\n #define YYERROR\t\tgoto yyerrlab1\n /* Like YYERROR except do call yyerror.\n    This remains here temporarily to ease the\n@@ -484,12 +504,12 @@ int yydebug;\t\t\t/*  nonzero means print parse trace\t*/\n #ifndef YYMAXDEPTH\n #define YYMAXDEPTH 10000\n #endif\n-\n-/* Prevent warning if -Wstrict-prototypes.  */\n-#ifdef __GNUC__\n-int yyparse (void);\n-#endif\n \f\n+/* Define __yy_memcpy.  Note that the size argument\n+   should be passed with type unsigned int, because that is what the non-GCC\n+   definitions require.  With GCC, __builtin_memcpy takes an arg\n+   of type size_t, but it can handle unsigned int.  */\n+\n #if __GNUC__ > 1\t\t/* GNU C and GNU C++ define this.  */\n #define __yy_memcpy(TO,FROM,COUNT)\t__builtin_memcpy(TO,FROM,COUNT)\n #else\t\t\t\t/* not GNU C or C++ */\n@@ -501,7 +521,7 @@ static void\n __yy_memcpy (to, from, count)\n      char *to;\n      char *from;\n-     int count;\n+     unsigned int count;\n {\n   register char *f = from;\n   register char *t = to;\n@@ -516,10 +536,10 @@ __yy_memcpy (to, from, count)\n /* This is the most reliable way to avoid incompatibilities\n    in available built-in functions on various systems.  */\n static void\n-__yy_memcpy (char *to, char *from, int count)\n+__yy_memcpy (char *to, char *from, unsigned int count)\n {\n-  register char *f = from;\n   register char *t = to;\n+  register char *f = from;\n   register int i = count;\n \n   while (i-- > 0)\n@@ -529,7 +549,7 @@ __yy_memcpy (char *to, char *from, int count)\n #endif\n #endif\n \f\n-#line 196 \"/usr/cygnus/TBD-TBD/share/bison.simple\"\n+#line 217 \"/usr/lib/bison.simple\"\n \n /* The user can define YYPARSE_PARAM as the name of an argument to be passed\n    into yyparse.  The argument should have type void *.\n@@ -550,6 +570,15 @@ __yy_memcpy (char *to, char *from, int count)\n #define YYPARSE_PARAM_DECL\n #endif /* not YYPARSE_PARAM */\n \n+/* Prevent warning if -Wstrict-prototypes.  */\n+#ifdef __GNUC__\n+#ifdef YYPARSE_PARAM\n+int yyparse (void *);\n+#else\n+int yyparse (void);\n+#endif\n+#endif\n+\n int\n yyparse(YYPARSE_PARAM_ARG)\n      YYPARSE_PARAM_DECL\n@@ -578,6 +607,7 @@ yyparse(YYPARSE_PARAM_ARG)\n #endif\n \n   int yystacksize = YYINITDEPTH;\n+  int yyfree_stacks = 0;\n \n #ifdef YYPURE\n   int yychar;\n@@ -662,18 +692,32 @@ yyparse(YYPARSE_PARAM_ARG)\n       if (yystacksize >= YYMAXDEPTH)\n \t{\n \t  yyerror(\"parser stack overflow\");\n+\t  if (yyfree_stacks)\n+\t    {\n+\t      free (yyss);\n+\t      free (yyvs);\n+#ifdef YYLSP_NEEDED\n+\t      free (yyls);\n+#endif\n+\t    }\n \t  return 2;\n \t}\n       yystacksize *= 2;\n       if (yystacksize > YYMAXDEPTH)\n \tyystacksize = YYMAXDEPTH;\n-      yyss = (short *) alloca (yystacksize * sizeof (*yyssp));\n-      __yy_memcpy ((char *)yyss, (char *)yyss1, size * sizeof (*yyssp));\n-      yyvs = (YYSTYPE *) alloca (yystacksize * sizeof (*yyvsp));\n-      __yy_memcpy ((char *)yyvs, (char *)yyvs1, size * sizeof (*yyvsp));\n+#ifndef YYSTACK_USE_ALLOCA\n+      yyfree_stacks = 1;\n+#endif\n+      yyss = (short *) YYSTACK_ALLOC (yystacksize * sizeof (*yyssp));\n+      __yy_memcpy ((char *)yyss, (char *)yyss1,\n+\t\t   size * (unsigned int) sizeof (*yyssp));\n+      yyvs = (YYSTYPE *) YYSTACK_ALLOC (yystacksize * sizeof (*yyvsp));\n+      __yy_memcpy ((char *)yyvs, (char *)yyvs1,\n+\t\t   size * (unsigned int) sizeof (*yyvsp));\n #ifdef YYLSP_NEEDED\n-      yyls = (YYLTYPE *) alloca (yystacksize * sizeof (*yylsp));\n-      __yy_memcpy ((char *)yyls, (char *)yyls1, size * sizeof (*yylsp));\n+      yyls = (YYLTYPE *) YYSTACK_ALLOC (yystacksize * sizeof (*yylsp));\n+      __yy_memcpy ((char *)yyls, (char *)yyls1,\n+\t\t   size * (unsigned int) sizeof (*yylsp));\n #endif\n #endif /* no yyoverflow */\n \n@@ -834,7 +878,7 @@ yyparse(YYPARSE_PARAM_ARG)\n   switch (yyn) {\n \n case 1:\n-#line 185 \"cexp.y\"\n+#line 186 \"cexp.y\"\n {\n \t\t  expression_value = yyvsp[0].integer.value;\n #ifdef TEST_EXP_READER\n@@ -843,55 +887,55 @@ case 1:\n \t\t;\n     break;}\n case 3:\n-#line 196 \"cexp.y\"\n+#line 197 \"cexp.y\"\n { if (pedantic)\n \t\t\t    pedwarn (\"comma operator in operand of `#if'\");\n \t\t\t  yyval.integer = yyvsp[0].integer; ;\n     break;}\n case 4:\n-#line 203 \"cexp.y\"\n+#line 204 \"cexp.y\"\n { yyval.integer.value = - yyvsp[0].integer.value;\n \t\t\t  yyval.integer.signedp = yyvsp[0].integer.signedp;\n \t\t\t  if ((yyval.integer.value & yyvsp[0].integer.value & yyval.integer.signedp) < 0)\n \t\t\t    integer_overflow (); ;\n     break;}\n case 5:\n-#line 208 \"cexp.y\"\n+#line 209 \"cexp.y\"\n { yyval.integer.value = ! yyvsp[0].integer.value;\n \t\t\t  yyval.integer.signedp = SIGNED; ;\n     break;}\n case 6:\n-#line 211 \"cexp.y\"\n+#line 212 \"cexp.y\"\n { yyval.integer = yyvsp[0].integer; ;\n     break;}\n case 7:\n-#line 213 \"cexp.y\"\n+#line 214 \"cexp.y\"\n { yyval.integer.value = ~ yyvsp[0].integer.value;\n \t\t\t  yyval.integer.signedp = yyvsp[0].integer.signedp; ;\n     break;}\n case 8:\n-#line 216 \"cexp.y\"\n+#line 217 \"cexp.y\"\n { yyval.integer.value = check_assertion (yyvsp[0].name.address, yyvsp[0].name.length,\n \t\t\t\t\t\t      0, NULL_PTR);\n \t\t\t  yyval.integer.signedp = SIGNED; ;\n     break;}\n case 9:\n-#line 220 \"cexp.y\"\n+#line 221 \"cexp.y\"\n { keyword_parsing = 1; ;\n     break;}\n case 10:\n-#line 222 \"cexp.y\"\n+#line 223 \"cexp.y\"\n { yyval.integer.value = check_assertion (yyvsp[-4].name.address, yyvsp[-4].name.length,\n \t\t\t\t\t\t      1, yyvsp[-1].keywords);\n \t\t\t  keyword_parsing = 0;\n \t\t\t  yyval.integer.signedp = SIGNED; ;\n     break;}\n case 11:\n-#line 227 \"cexp.y\"\n+#line 228 \"cexp.y\"\n { yyval.integer = yyvsp[-1].integer; ;\n     break;}\n case 12:\n-#line 232 \"cexp.y\"\n+#line 233 \"cexp.y\"\n { yyval.integer.signedp = yyvsp[-2].integer.signedp & yyvsp[0].integer.signedp;\n \t\t\t  if (yyval.integer.signedp)\n \t\t\t    {\n@@ -906,7 +950,7 @@ case 12:\n \t\t\t\t\t* yyvsp[0].integer.value); ;\n     break;}\n case 13:\n-#line 245 \"cexp.y\"\n+#line 246 \"cexp.y\"\n { if (yyvsp[0].integer.value == 0)\n \t\t\t    {\n \t\t\t      if (!skip_evaluation)\n@@ -925,7 +969,7 @@ case 13:\n \t\t\t\t\t/ yyvsp[0].integer.value); ;\n     break;}\n case 14:\n-#line 262 \"cexp.y\"\n+#line 263 \"cexp.y\"\n { if (yyvsp[0].integer.value == 0)\n \t\t\t    {\n \t\t\t      if (!skip_evaluation)\n@@ -940,49 +984,49 @@ case 14:\n \t\t\t\t\t% yyvsp[0].integer.value); ;\n     break;}\n case 15:\n-#line 275 \"cexp.y\"\n+#line 276 \"cexp.y\"\n { yyval.integer.value = yyvsp[-2].integer.value + yyvsp[0].integer.value;\n \t\t\t  yyval.integer.signedp = yyvsp[-2].integer.signedp & yyvsp[0].integer.signedp;\n \t\t\t  if (overflow_sum_sign (yyvsp[-2].integer.value, yyvsp[0].integer.value,\n \t\t\t\t\t\t yyval.integer.value, yyval.integer.signedp))\n \t\t\t    integer_overflow (); ;\n     break;}\n case 16:\n-#line 281 \"cexp.y\"\n+#line 282 \"cexp.y\"\n { yyval.integer.value = yyvsp[-2].integer.value - yyvsp[0].integer.value;\n \t\t\t  yyval.integer.signedp = yyvsp[-2].integer.signedp & yyvsp[0].integer.signedp;\n \t\t\t  if (overflow_sum_sign (yyval.integer.value, yyvsp[0].integer.value,\n \t\t\t\t\t\t yyvsp[-2].integer.value, yyval.integer.signedp))\n \t\t\t    integer_overflow (); ;\n     break;}\n case 17:\n-#line 287 \"cexp.y\"\n+#line 288 \"cexp.y\"\n { yyval.integer.signedp = yyvsp[-2].integer.signedp;\n \t\t\t  if ((yyvsp[0].integer.value & yyvsp[0].integer.signedp) < 0)\n \t\t\t    yyval.integer.value = right_shift (&yyvsp[-2].integer, -yyvsp[0].integer.value);\n \t\t\t  else\n \t\t\t    yyval.integer.value = left_shift (&yyvsp[-2].integer, yyvsp[0].integer.value); ;\n     break;}\n case 18:\n-#line 293 \"cexp.y\"\n+#line 294 \"cexp.y\"\n { yyval.integer.signedp = yyvsp[-2].integer.signedp;\n \t\t\t  if ((yyvsp[0].integer.value & yyvsp[0].integer.signedp) < 0)\n \t\t\t    yyval.integer.value = left_shift (&yyvsp[-2].integer, -yyvsp[0].integer.value);\n \t\t\t  else\n \t\t\t    yyval.integer.value = right_shift (&yyvsp[-2].integer, yyvsp[0].integer.value); ;\n     break;}\n case 19:\n-#line 299 \"cexp.y\"\n+#line 300 \"cexp.y\"\n { yyval.integer.value = (yyvsp[-2].integer.value == yyvsp[0].integer.value);\n \t\t\t  yyval.integer.signedp = SIGNED; ;\n     break;}\n case 20:\n-#line 302 \"cexp.y\"\n+#line 303 \"cexp.y\"\n { yyval.integer.value = (yyvsp[-2].integer.value != yyvsp[0].integer.value);\n \t\t\t  yyval.integer.signedp = SIGNED; ;\n     break;}\n case 21:\n-#line 305 \"cexp.y\"\n+#line 306 \"cexp.y\"\n { yyval.integer.signedp = SIGNED;\n \t\t\t  if (yyvsp[-2].integer.signedp & yyvsp[0].integer.signedp)\n \t\t\t    yyval.integer.value = yyvsp[-2].integer.value <= yyvsp[0].integer.value;\n@@ -991,7 +1035,7 @@ case 21:\n \t\t\t\t\t<= yyvsp[0].integer.value); ;\n     break;}\n case 22:\n-#line 312 \"cexp.y\"\n+#line 313 \"cexp.y\"\n { yyval.integer.signedp = SIGNED;\n \t\t\t  if (yyvsp[-2].integer.signedp & yyvsp[0].integer.signedp)\n \t\t\t    yyval.integer.value = yyvsp[-2].integer.value >= yyvsp[0].integer.value;\n@@ -1000,7 +1044,7 @@ case 22:\n \t\t\t\t\t>= yyvsp[0].integer.value); ;\n     break;}\n case 23:\n-#line 319 \"cexp.y\"\n+#line 320 \"cexp.y\"\n { yyval.integer.signedp = SIGNED;\n \t\t\t  if (yyvsp[-2].integer.signedp & yyvsp[0].integer.signedp)\n \t\t\t    yyval.integer.value = yyvsp[-2].integer.value < yyvsp[0].integer.value;\n@@ -1009,7 +1053,7 @@ case 23:\n \t\t\t\t\t< yyvsp[0].integer.value); ;\n     break;}\n case 24:\n-#line 326 \"cexp.y\"\n+#line 327 \"cexp.y\"\n { yyval.integer.signedp = SIGNED;\n \t\t\t  if (yyvsp[-2].integer.signedp & yyvsp[0].integer.signedp)\n \t\t\t    yyval.integer.value = yyvsp[-2].integer.value > yyvsp[0].integer.value;\n@@ -1018,76 +1062,76 @@ case 24:\n \t\t\t\t\t> yyvsp[0].integer.value); ;\n     break;}\n case 25:\n-#line 333 \"cexp.y\"\n+#line 334 \"cexp.y\"\n { yyval.integer.value = yyvsp[-2].integer.value & yyvsp[0].integer.value;\n \t\t\t  yyval.integer.signedp = yyvsp[-2].integer.signedp & yyvsp[0].integer.signedp; ;\n     break;}\n case 26:\n-#line 336 \"cexp.y\"\n+#line 337 \"cexp.y\"\n { yyval.integer.value = yyvsp[-2].integer.value ^ yyvsp[0].integer.value;\n \t\t\t  yyval.integer.signedp = yyvsp[-2].integer.signedp & yyvsp[0].integer.signedp; ;\n     break;}\n case 27:\n-#line 339 \"cexp.y\"\n+#line 340 \"cexp.y\"\n { yyval.integer.value = yyvsp[-2].integer.value | yyvsp[0].integer.value;\n \t\t\t  yyval.integer.signedp = yyvsp[-2].integer.signedp & yyvsp[0].integer.signedp; ;\n     break;}\n case 28:\n-#line 342 \"cexp.y\"\n+#line 343 \"cexp.y\"\n { skip_evaluation += !yyvsp[-1].integer.value; ;\n     break;}\n case 29:\n-#line 344 \"cexp.y\"\n+#line 345 \"cexp.y\"\n { skip_evaluation -= !yyvsp[-3].integer.value;\n \t\t\t  yyval.integer.value = (yyvsp[-3].integer.value && yyvsp[0].integer.value);\n \t\t\t  yyval.integer.signedp = SIGNED; ;\n     break;}\n case 30:\n-#line 348 \"cexp.y\"\n+#line 349 \"cexp.y\"\n { skip_evaluation += !!yyvsp[-1].integer.value; ;\n     break;}\n case 31:\n-#line 350 \"cexp.y\"\n+#line 351 \"cexp.y\"\n { skip_evaluation -= !!yyvsp[-3].integer.value;\n \t\t\t  yyval.integer.value = (yyvsp[-3].integer.value || yyvsp[0].integer.value);\n \t\t\t  yyval.integer.signedp = SIGNED; ;\n     break;}\n case 32:\n-#line 354 \"cexp.y\"\n+#line 355 \"cexp.y\"\n { skip_evaluation += !yyvsp[-1].integer.value; ;\n     break;}\n case 33:\n-#line 356 \"cexp.y\"\n+#line 357 \"cexp.y\"\n { skip_evaluation += !!yyvsp[-4].integer.value - !yyvsp[-4].integer.value; ;\n     break;}\n case 34:\n-#line 358 \"cexp.y\"\n+#line 359 \"cexp.y\"\n { skip_evaluation -= !!yyvsp[-6].integer.value;\n \t\t\t  yyval.integer.value = yyvsp[-6].integer.value ? yyvsp[-3].integer.value : yyvsp[0].integer.value;\n \t\t\t  yyval.integer.signedp = yyvsp[-3].integer.signedp & yyvsp[0].integer.signedp; ;\n     break;}\n case 35:\n-#line 362 \"cexp.y\"\n+#line 363 \"cexp.y\"\n { yyval.integer = yylval.integer; ;\n     break;}\n case 36:\n-#line 364 \"cexp.y\"\n+#line 365 \"cexp.y\"\n { yyval.integer = yylval.integer; ;\n     break;}\n case 37:\n-#line 366 \"cexp.y\"\n+#line 367 \"cexp.y\"\n { if (warn_undef && !skip_evaluation)\n \t\t\t    warning (\"`%.*s' is not defined\",\n \t\t\t\t     yyvsp[0].name.length, yyvsp[0].name.address);\n \t\t\t  yyval.integer.value = 0;\n \t\t\t  yyval.integer.signedp = SIGNED; ;\n     break;}\n case 38:\n-#line 374 \"cexp.y\"\n+#line 375 \"cexp.y\"\n { yyval.keywords = 0; ;\n     break;}\n case 39:\n-#line 376 \"cexp.y\"\n+#line 377 \"cexp.y\"\n { struct arglist *temp;\n \t\t\t  yyval.keywords = (struct arglist *) xmalloc (sizeof (struct arglist));\n \t\t\t  yyval.keywords->next = yyvsp[-2].keywords;\n@@ -1102,15 +1146,15 @@ case 39:\n \t\t\t  temp->next->length = 1; ;\n     break;}\n case 40:\n-#line 389 \"cexp.y\"\n+#line 390 \"cexp.y\"\n { yyval.keywords = (struct arglist *) xmalloc (sizeof (struct arglist));\n \t\t\t  yyval.keywords->name = yyvsp[-1].name.address;\n \t\t\t  yyval.keywords->length = yyvsp[-1].name.length;\n \t\t\t  yyval.keywords->next = yyvsp[0].keywords; ;\n     break;}\n }\n    /* the action file gets copied in in place of this dollarsign */\n-#line 498 \"/usr/cygnus/TBD-TBD/share/bison.simple\"\n+#line 543 \"/usr/lib/bison.simple\"\n \f\n   yyvsp -= yylen;\n   yyssp -= yylen;\n@@ -1305,8 +1349,32 @@ case 40:\n \n   yystate = yyn;\n   goto yynewstate;\n+\n+ yyacceptlab:\n+  /* YYACCEPT comes here.  */\n+  if (yyfree_stacks)\n+    {\n+      free (yyss);\n+      free (yyvs);\n+#ifdef YYLSP_NEEDED\n+      free (yyls);\n+#endif\n+    }\n+  return 0;\n+\n+ yyabortlab:\n+  /* YYABORT comes here.  */\n+  if (yyfree_stacks)\n+    {\n+      free (yyss);\n+      free (yyvs);\n+#ifdef YYLSP_NEEDED\n+      free (yyls);\n+#endif\n+    }\n+  return 1;\n }\n-#line 394 \"cexp.y\"\n+#line 395 \"cexp.y\"\n \n \f\n /* During parsing of a C expression, the pointer to the next character"}, {"sha": "2d5610d6a5e36cd70f7039e536d531374a0aa137", "filename": "gcc/cp/parse.c", "status": "modified", "additions": 808, "deletions": 808, "changes": 1616, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6a6823ed0b970d0ea76e72a1fb7e219365433e4/gcc%2Fcp%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6a6823ed0b970d0ea76e72a1fb7e219365433e4/gcc%2Fcp%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparse.c?ref=b6a6823ed0b970d0ea76e72a1fb7e219365433e4"}, {"sha": "66886138880f3bb82f297f6d085f075077917745", "filename": "gcc/objc/objc-parse.c", "status": "modified", "additions": 508, "deletions": 508, "changes": 1016, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6a6823ed0b970d0ea76e72a1fb7e219365433e4/gcc%2Fobjc%2Fobjc-parse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6a6823ed0b970d0ea76e72a1fb7e219365433e4/gcc%2Fobjc%2Fobjc-parse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-parse.c?ref=b6a6823ed0b970d0ea76e72a1fb7e219365433e4", "patch": "@@ -66,7 +66,7 @@\n #define\tALIAS\t316\n #define\tOBJC_STRING\t317\n \n-#line 33 \"objc-parse.y\"\n+#line 34 \"objc-parse.y\"\n \n #include \"config.h\"\n #include \"system.h\"\n@@ -96,10 +96,10 @@ const char * const language_string = \"GNU Obj-C\";\n /* Cause the `yydebug' variable to be defined.  */\n #define YYDEBUG 1\n \n-#line 65 \"objc-parse.y\"\n+#line 66 \"objc-parse.y\"\n typedef union {long itype; tree ttype; enum tree_code code;\n \tchar *filename; int lineno; int ends_in_label; } YYSTYPE;\n-#line 196 \"objc-parse.y\"\n+#line 197 \"objc-parse.y\"\n \n /* Number of statements (loosely speaking) and compound statements \n    seen so far.  */\n@@ -454,63 +454,63 @@ static const short yyrhs[] = {    -1,\n \n #if YYDEBUG != 0\n static const short yyrline[] = { 0,\n-   257,   262,   276,   278,   278,   279,   281,   283,   284,   285,\n-   293,   297,   307,   311,   315,   317,   319,   320,   321,   326,\n-   333,   335,   339,   343,   349,   351,   355,   359,   365,   367,\n-   371,   377,   379,   380,   381,   384,   386,   388,   390,   392,\n-   394,   396,   400,   404,   407,   410,   413,   417,   419,   422,\n-   425,   429,   457,   463,   466,   469,   472,   474,   476,   480,\n-   484,   488,   490,   493,   497,   524,   526,   528,   530,   532,\n-   534,   536,   538,   540,   542,   544,   546,   548,   550,   554,\n-   556,   560,   562,   565,   569,   571,   578,   581,   589,   600,\n-   760,   761,   763,   769,   771,   794,   803,   805,   807,   819,\n-   833,   835,   837,   839,   841,   843,   845,   850,   852,   859,\n-   861,   865,   867,   868,   878,   883,   885,   886,   887,   894,\n-   899,   903,   906,   914,   919,   921,   922,   923,   930,   940,\n-   944,   949,   953,   957,   961,   963,   965,   974,   977,   981,\n-   983,   985,   990,   994,   997,  1001,  1004,  1006,  1018,  1021,\n-  1023,  1025,  1029,  1033,  1035,  1038,  1051,  1054,  1058,  1060,\n-  1068,  1069,  1070,  1074,  1076,  1081,  1083,  1085,  1091,  1092,\n-  1093,  1096,  1098,  1101,  1103,  1106,  1109,  1115,  1122,  1124,\n-  1131,  1138,  1141,  1148,  1151,  1155,  1158,  1162,  1167,  1170,\n-  1174,  1177,  1179,  1181,  1183,  1190,  1192,  1193,  1194,  1199,\n-  1201,  1203,  1205,  1210,  1214,  1217,  1219,  1224,  1226,  1227,\n-  1230,  1230,  1233,  1236,  1238,  1240,  1243,  1245,  1248,  1256,\n-  1270,  1278,  1282,  1296,  1304,  1311,  1313,  1318,  1321,  1326,\n-  1328,  1330,  1337,  1339,  1340,  1348,  1354,  1356,  1358,  1365,\n-  1367,  1373,  1379,  1381,  1383,  1385,  1392,  1394,  1397,  1400,\n-  1404,  1407,  1411,  1414,  1418,  1423,  1425,  1429,  1431,  1433,\n-  1435,  1439,  1441,  1443,  1446,  1448,  1451,  1455,  1457,  1460,\n-  1462,  1467,  1470,  1475,  1477,  1479,  1483,  1507,  1513,  1526,\n-  1531,  1536,  1538,  1543,  1545,  1549,  1553,  1557,  1567,  1569,\n-  1574,  1579,  1582,  1586,  1589,  1593,  1596,  1599,  1602,  1606,\n-  1609,  1613,  1617,  1619,  1621,  1623,  1625,  1627,  1629,  1631,\n-  1635,  1643,  1651,  1653,  1655,  1659,  1661,  1664,  1667,  1679,\n-  1681,  1686,  1688,  1691,  1705,  1708,  1711,  1713,  1715,  1719,\n-  1723,  1729,  1747,  1752,  1757,  1760,  1774,  1783,  1787,  1791,\n-  1795,  1801,  1805,  1810,  1813,  1818,  1821,  1822,  1838,  1843,\n-  1846,  1858,  1860,  1870,  1880,  1881,  1888,  1890,  1902,  1906,\n-  1920,  1926,  1932,  1933,  1938,  1943,  1947,  1951,  1962,  1969,\n-  1976,  1983,  1994,  2000,  2003,  2008,  2031,  2061,  2092,  2123,\n-  2138,  2152,  2156,  2160,  2163,  2168,  2170,  2173,  2175,  2179,\n-  2184,  2187,  2193,  2198,  2203,  2205,  2214,  2215,  2221,  2223,\n-  2233,  2235,  2239,  2242,  2248,  2257,  2265,  2273,  2282,  2295,\n-  2300,  2305,  2307,  2316,  2319,  2324,  2327,  2331,  2340,  2342,\n-  2343,  2344,  2345,  2346,  2360,  2363,  2367,  2373,  2379,  2386,\n-  2391,  2397,  2404,  2410,  2416,  2421,  2427,  2434,  2440,  2446,\n-  2452,  2460,  2466,  2472,  2480,  2487,  2493,  2502,  2509,  2517,\n-  2522,  2525,  2535,  2537,  2540,  2542,  2543,  2546,  2551,  2552,\n-  2569,  2575,  2580,  2584,  2587,  2588,  2591,  2599,  2605,  2614,\n-  2624,  2631,  2635,  2640,  2649,  2656,  2660,  2670,  2672,  2673,\n-  2675,  2677,  2678,  2679,  2680,  2682,  2684,  2687,  2695,  2702,\n-  2702,  2709,  2715,  2717,  2723,  2728,  2733,  2742,  2744,  2750,\n-  2752,  2755,  2757,  2758,  2759,  2762,  2767,  2769,  2773,  2776,\n-  2783,  2789,  2794,  2801,  2806,  2811,  2816,  2823,  2827,  2830,\n-  2836,  2838,  2839,  2840,  2843,  2845,  2846,  2847,  2848,  2849,\n-  2850,  2851,  2852,  2853,  2854,  2855,  2856,  2857,  2858,  2859,\n-  2860,  2861,  2862,  2863,  2863,  2866,  2872,  2877,  2882,  2888,\n-  2890,  2893,  2895,  2902,  2914,  2919,  2925,  2927,  2933,  2937,\n-  2938,  2944,  2946,  2949,  2951,  2957,  2962,  2968,  2975,  2984\n+   258,   263,   277,   279,   279,   280,   282,   284,   285,   286,\n+   294,   298,   308,   312,   316,   318,   320,   321,   322,   327,\n+   334,   336,   340,   344,   350,   352,   356,   360,   366,   368,\n+   372,   378,   380,   381,   382,   385,   387,   389,   391,   393,\n+   395,   397,   401,   405,   408,   411,   414,   418,   420,   423,\n+   426,   430,   458,   464,   467,   470,   473,   475,   477,   481,\n+   485,   489,   491,   494,   498,   525,   527,   529,   531,   533,\n+   535,   537,   539,   541,   543,   545,   547,   549,   551,   555,\n+   557,   561,   563,   566,   570,   572,   579,   582,   590,   601,\n+   761,   762,   764,   770,   772,   795,   804,   806,   808,   820,\n+   834,   836,   838,   840,   842,   844,   846,   851,   853,   860,\n+   862,   866,   868,   869,   879,   884,   886,   887,   888,   895,\n+   900,   904,   907,   915,   920,   922,   923,   924,   931,   941,\n+   945,   950,   954,   958,   962,   964,   966,   975,   978,   982,\n+   984,   986,   991,   995,   998,  1002,  1005,  1007,  1019,  1022,\n+  1024,  1026,  1030,  1034,  1036,  1039,  1052,  1055,  1059,  1061,\n+  1069,  1070,  1071,  1075,  1077,  1082,  1084,  1086,  1092,  1093,\n+  1094,  1097,  1099,  1102,  1104,  1107,  1110,  1116,  1123,  1125,\n+  1132,  1139,  1142,  1149,  1152,  1156,  1159,  1163,  1168,  1171,\n+  1175,  1178,  1180,  1182,  1184,  1191,  1193,  1194,  1195,  1200,\n+  1202,  1204,  1206,  1211,  1215,  1218,  1220,  1225,  1227,  1228,\n+  1231,  1231,  1234,  1237,  1239,  1241,  1244,  1246,  1249,  1257,\n+  1271,  1279,  1283,  1297,  1305,  1312,  1314,  1319,  1322,  1327,\n+  1329,  1331,  1338,  1340,  1341,  1349,  1355,  1357,  1359,  1366,\n+  1368,  1374,  1380,  1382,  1384,  1386,  1393,  1395,  1398,  1401,\n+  1405,  1408,  1412,  1415,  1419,  1424,  1426,  1430,  1432,  1434,\n+  1436,  1440,  1442,  1444,  1447,  1449,  1452,  1456,  1458,  1461,\n+  1463,  1468,  1471,  1476,  1478,  1480,  1484,  1508,  1514,  1527,\n+  1532,  1537,  1539,  1544,  1546,  1550,  1554,  1558,  1568,  1570,\n+  1575,  1580,  1583,  1587,  1590,  1594,  1597,  1600,  1603,  1607,\n+  1610,  1614,  1618,  1620,  1622,  1624,  1626,  1628,  1630,  1632,\n+  1636,  1644,  1652,  1654,  1656,  1660,  1662,  1665,  1668,  1680,\n+  1682,  1687,  1689,  1692,  1706,  1709,  1712,  1714,  1716,  1720,\n+  1724,  1730,  1748,  1753,  1758,  1761,  1775,  1784,  1788,  1792,\n+  1796,  1802,  1806,  1811,  1814,  1819,  1822,  1823,  1839,  1844,\n+  1847,  1859,  1861,  1871,  1881,  1882,  1889,  1891,  1903,  1907,\n+  1921,  1927,  1933,  1934,  1939,  1944,  1948,  1952,  1963,  1970,\n+  1977,  1984,  1995,  2001,  2004,  2009,  2032,  2062,  2093,  2124,\n+  2139,  2153,  2157,  2161,  2164,  2169,  2171,  2174,  2176,  2180,\n+  2185,  2188,  2194,  2199,  2204,  2206,  2215,  2216,  2222,  2224,\n+  2234,  2236,  2240,  2243,  2249,  2258,  2266,  2274,  2283,  2296,\n+  2301,  2306,  2308,  2317,  2320,  2325,  2328,  2332,  2341,  2343,\n+  2344,  2345,  2346,  2347,  2361,  2364,  2368,  2374,  2380,  2387,\n+  2392,  2398,  2405,  2411,  2417,  2422,  2428,  2435,  2441,  2447,\n+  2453,  2461,  2467,  2473,  2481,  2488,  2494,  2503,  2510,  2518,\n+  2523,  2526,  2536,  2538,  2541,  2543,  2544,  2547,  2552,  2553,\n+  2570,  2576,  2581,  2585,  2588,  2589,  2592,  2600,  2606,  2615,\n+  2625,  2632,  2636,  2641,  2650,  2657,  2661,  2671,  2673,  2674,\n+  2676,  2678,  2679,  2680,  2681,  2683,  2685,  2688,  2696,  2703,\n+  2703,  2710,  2716,  2718,  2724,  2729,  2734,  2743,  2745,  2751,\n+  2753,  2756,  2758,  2759,  2760,  2763,  2768,  2770,  2774,  2777,\n+  2784,  2790,  2795,  2802,  2807,  2812,  2817,  2824,  2828,  2831,\n+  2837,  2839,  2840,  2841,  2844,  2846,  2847,  2848,  2849,  2850,\n+  2851,  2852,  2853,  2854,  2855,  2856,  2857,  2858,  2859,  2860,\n+  2861,  2862,  2863,  2864,  2864,  2867,  2873,  2878,  2883,  2889,\n+  2891,  2894,  2896,  2903,  2915,  2920,  2926,  2928,  2934,  2938,\n+  2939,  2945,  2947,  2950,  2952,  2958,  2963,  2969,  2976,  2985\n };\n #endif\n \n@@ -1748,7 +1748,7 @@ static const short yycheck[] = {    56,\n     46,    47,    48,    49,    50,    51,    52,    53,    54\n };\n /* -*-C-*-  Note some compilers choke on comments on `#line' lines.  */\n-#line 3 \"/usr/share/misc/bison.simple\"\n+#line 3 \"/usr/lib/bison.simple\"\n /* This file comes from bison-1.28.  */\n \n /* Skeleton output parser for bison,\n@@ -1962,7 +1962,7 @@ __yy_memcpy (char *to, char *from, unsigned int count)\n #endif\n #endif\n \f\n-#line 217 \"/usr/share/misc/bison.simple\"\n+#line 217 \"/usr/lib/bison.simple\"\n \n /* The user can define YYPARSE_PARAM as the name of an argument to be passed\n    into yyparse.  The argument should have type void *.\n@@ -2291,14 +2291,14 @@ yyparse(YYPARSE_PARAM_ARG)\n   switch (yyn) {\n \n case 1:\n-#line 258 \"objc-parse.y\"\n+#line 259 \"objc-parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids an empty source file\");\n \t\t  finish_file ();\n \t\t;\n     break;}\n case 2:\n-#line 263 \"objc-parse.y\"\n+#line 264 \"objc-parse.y\"\n {\n \t\t  /* In case there were missing closebraces,\n \t\t     get us back to the global binding level.  */\n@@ -2308,15 +2308,15 @@ case 2:\n \t\t;\n     break;}\n case 3:\n-#line 277 \"objc-parse.y\"\n+#line 278 \"objc-parse.y\"\n {yyval.ttype = NULL_TREE; ;\n     break;}\n case 5:\n-#line 278 \"objc-parse.y\"\n+#line 279 \"objc-parse.y\"\n {yyval.ttype = NULL_TREE; ;\n     break;}\n case 10:\n-#line 286 \"objc-parse.y\"\n+#line 287 \"objc-parse.y\"\n { STRIP_NOPS (yyvsp[-2].ttype);\n \t\t  if ((TREE_CODE (yyvsp[-2].ttype) == ADDR_EXPR\n \t\t       && TREE_CODE (TREE_OPERAND (yyvsp[-2].ttype, 0)) == STRING_CST)\n@@ -2326,11 +2326,11 @@ case 10:\n \t\t    error (\"argument of `asm' is not a constant string\"); ;\n     break;}\n case 11:\n-#line 294 \"objc-parse.y\"\n+#line 295 \"objc-parse.y\"\n { RESTORE_WARN_FLAGS (yyvsp[-1].ttype); ;\n     break;}\n case 12:\n-#line 299 \"objc-parse.y\"\n+#line 300 \"objc-parse.y\"\n { if (pedantic)\n \t\t    error (\"ANSI C forbids data definition with no type or storage class\");\n \t\t  else if (!flag_traditional)\n@@ -2341,162 +2341,162 @@ case 12:\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack); ;\n     break;}\n case 13:\n-#line 308 \"objc-parse.y\"\n+#line 309 \"objc-parse.y\"\n { current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack); ;\n     break;}\n case 14:\n-#line 312 \"objc-parse.y\"\n+#line 313 \"objc-parse.y\"\n { current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack); ;\n     break;}\n case 15:\n-#line 316 \"objc-parse.y\"\n+#line 317 \"objc-parse.y\"\n { pedwarn (\"empty declaration\"); ;\n     break;}\n case 16:\n-#line 318 \"objc-parse.y\"\n+#line 319 \"objc-parse.y\"\n { shadow_tag (yyvsp[-1].ttype); ;\n     break;}\n case 19:\n-#line 322 \"objc-parse.y\"\n+#line 323 \"objc-parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C does not allow extra `;' outside of a function\"); ;\n     break;}\n case 20:\n-#line 328 \"objc-parse.y\"\n+#line 329 \"objc-parse.y\"\n { if (! start_function (current_declspecs, yyvsp[0].ttype,\n \t\t\t\t\tprefix_attributes, NULL_TREE))\n \t\t    YYERROR1;\n \t\t  reinit_parse_for_function (); ;\n     break;}\n case 21:\n-#line 333 \"objc-parse.y\"\n+#line 334 \"objc-parse.y\"\n { store_parm_decls (); ;\n     break;}\n case 22:\n-#line 335 \"objc-parse.y\"\n+#line 336 \"objc-parse.y\"\n { finish_function (0); \n \t\t  current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack); ;\n     break;}\n case 23:\n-#line 340 \"objc-parse.y\"\n+#line 341 \"objc-parse.y\"\n { current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack); ;\n     break;}\n case 24:\n-#line 344 \"objc-parse.y\"\n+#line 345 \"objc-parse.y\"\n { if (! start_function (current_declspecs, yyvsp[0].ttype,\n \t\t\t\t\tprefix_attributes, NULL_TREE))\n \t\t    YYERROR1;\n \t\t  reinit_parse_for_function (); ;\n     break;}\n case 25:\n-#line 349 \"objc-parse.y\"\n+#line 350 \"objc-parse.y\"\n { store_parm_decls (); ;\n     break;}\n case 26:\n-#line 351 \"objc-parse.y\"\n+#line 352 \"objc-parse.y\"\n { finish_function (0); \n \t\t  current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack); ;\n     break;}\n case 27:\n-#line 356 \"objc-parse.y\"\n+#line 357 \"objc-parse.y\"\n { current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack); ;\n     break;}\n case 28:\n-#line 360 \"objc-parse.y\"\n+#line 361 \"objc-parse.y\"\n { if (! start_function (NULL_TREE, yyvsp[0].ttype,\n \t\t\t\t\tprefix_attributes, NULL_TREE))\n \t\t    YYERROR1;\n \t\t  reinit_parse_for_function (); ;\n     break;}\n case 29:\n-#line 365 \"objc-parse.y\"\n+#line 366 \"objc-parse.y\"\n { store_parm_decls (); ;\n     break;}\n case 30:\n-#line 367 \"objc-parse.y\"\n+#line 368 \"objc-parse.y\"\n { finish_function (0); \n \t\t  current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack); ;\n     break;}\n case 31:\n-#line 372 \"objc-parse.y\"\n+#line 373 \"objc-parse.y\"\n { current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack); ;\n     break;}\n case 36:\n-#line 385 \"objc-parse.y\"\n+#line 386 \"objc-parse.y\"\n { yyval.code = ADDR_EXPR; ;\n     break;}\n case 37:\n-#line 387 \"objc-parse.y\"\n+#line 388 \"objc-parse.y\"\n { yyval.code = NEGATE_EXPR; ;\n     break;}\n case 38:\n-#line 389 \"objc-parse.y\"\n+#line 390 \"objc-parse.y\"\n { yyval.code = CONVERT_EXPR; ;\n     break;}\n case 39:\n-#line 391 \"objc-parse.y\"\n+#line 392 \"objc-parse.y\"\n { yyval.code = PREINCREMENT_EXPR; ;\n     break;}\n case 40:\n-#line 393 \"objc-parse.y\"\n+#line 394 \"objc-parse.y\"\n { yyval.code = PREDECREMENT_EXPR; ;\n     break;}\n case 41:\n-#line 395 \"objc-parse.y\"\n+#line 396 \"objc-parse.y\"\n { yyval.code = BIT_NOT_EXPR; ;\n     break;}\n case 42:\n-#line 397 \"objc-parse.y\"\n+#line 398 \"objc-parse.y\"\n { yyval.code = TRUTH_NOT_EXPR; ;\n     break;}\n case 43:\n-#line 401 \"objc-parse.y\"\n+#line 402 \"objc-parse.y\"\n { yyval.ttype = build_compound_expr (yyvsp[0].ttype); ;\n     break;}\n case 44:\n-#line 406 \"objc-parse.y\"\n+#line 407 \"objc-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 46:\n-#line 412 \"objc-parse.y\"\n+#line 413 \"objc-parse.y\"\n { yyval.ttype = build_tree_list (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 47:\n-#line 414 \"objc-parse.y\"\n+#line 415 \"objc-parse.y\"\n { chainon (yyvsp[-2].ttype, build_tree_list (NULL_TREE, yyvsp[0].ttype)); ;\n     break;}\n case 49:\n-#line 420 \"objc-parse.y\"\n+#line 421 \"objc-parse.y\"\n { yyval.ttype = build_indirect_ref (yyvsp[0].ttype, \"unary *\"); ;\n     break;}\n case 50:\n-#line 423 \"objc-parse.y\"\n+#line 424 \"objc-parse.y\"\n { yyval.ttype = yyvsp[0].ttype;\n \t\t  RESTORE_WARN_FLAGS (yyvsp[-1].ttype); ;\n     break;}\n case 51:\n-#line 426 \"objc-parse.y\"\n+#line 427 \"objc-parse.y\"\n { yyval.ttype = build_unary_op (yyvsp[-1].code, yyvsp[0].ttype, 0);\n \t\t  overflow_warning (yyval.ttype); ;\n     break;}\n case 52:\n-#line 430 \"objc-parse.y\"\n+#line 431 \"objc-parse.y\"\n { tree label = lookup_label (yyvsp[0].ttype);\n \t\t  if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids `&&'\");\n@@ -2511,61 +2511,61 @@ case 52:\n \t\t;\n     break;}\n case 53:\n-#line 458 \"objc-parse.y\"\n+#line 459 \"objc-parse.y\"\n { skip_evaluation--;\n \t\t  if (TREE_CODE (yyvsp[0].ttype) == COMPONENT_REF\n \t\t      && DECL_C_BIT_FIELD (TREE_OPERAND (yyvsp[0].ttype, 1)))\n \t\t    error (\"`sizeof' applied to a bit-field\");\n \t\t  yyval.ttype = c_sizeof (TREE_TYPE (yyvsp[0].ttype)); ;\n     break;}\n case 54:\n-#line 464 \"objc-parse.y\"\n+#line 465 \"objc-parse.y\"\n { skip_evaluation--;\n \t\t  yyval.ttype = c_sizeof (groktypename (yyvsp[-1].ttype)); ;\n     break;}\n case 55:\n-#line 467 \"objc-parse.y\"\n+#line 468 \"objc-parse.y\"\n { skip_evaluation--;\n \t\t  yyval.ttype = c_alignof_expr (yyvsp[0].ttype); ;\n     break;}\n case 56:\n-#line 470 \"objc-parse.y\"\n+#line 471 \"objc-parse.y\"\n { skip_evaluation--;\n \t\t  yyval.ttype = c_alignof (groktypename (yyvsp[-1].ttype)); ;\n     break;}\n case 57:\n-#line 473 \"objc-parse.y\"\n+#line 474 \"objc-parse.y\"\n { yyval.ttype = build_unary_op (REALPART_EXPR, yyvsp[0].ttype, 0); ;\n     break;}\n case 58:\n-#line 475 \"objc-parse.y\"\n+#line 476 \"objc-parse.y\"\n { yyval.ttype = build_unary_op (IMAGPART_EXPR, yyvsp[0].ttype, 0); ;\n     break;}\n case 59:\n-#line 477 \"objc-parse.y\"\n+#line 478 \"objc-parse.y\"\n { yyval.ttype = build_va_arg (yyvsp[-3].ttype, groktypename (yyvsp[-1].ttype)); ;\n     break;}\n case 60:\n-#line 481 \"objc-parse.y\"\n+#line 482 \"objc-parse.y\"\n { skip_evaluation++; ;\n     break;}\n case 61:\n-#line 485 \"objc-parse.y\"\n+#line 486 \"objc-parse.y\"\n { skip_evaluation++; ;\n     break;}\n case 63:\n-#line 491 \"objc-parse.y\"\n+#line 492 \"objc-parse.y\"\n { tree type = groktypename (yyvsp[-2].ttype);\n \t\t  yyval.ttype = build_c_cast (type, yyvsp[0].ttype); ;\n     break;}\n case 64:\n-#line 494 \"objc-parse.y\"\n+#line 495 \"objc-parse.y\"\n { start_init (NULL_TREE, NULL, 0);\n \t\t  yyvsp[-2].ttype = groktypename (yyvsp[-2].ttype);\n \t\t  really_start_incremental_init (yyvsp[-2].ttype); ;\n     break;}\n case 65:\n-#line 498 \"objc-parse.y\"\n+#line 499 \"objc-parse.y\"\n { const char *name;\n \t\t  tree result = pop_init_level (0);\n \t\t  tree type = yyvsp[-5].ttype;\n@@ -2592,90 +2592,90 @@ case 65:\n \t\t;\n     break;}\n case 67:\n-#line 527 \"objc-parse.y\"\n+#line 528 \"objc-parse.y\"\n { yyval.ttype = parser_build_binary_op (yyvsp[-1].code, yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 68:\n-#line 529 \"objc-parse.y\"\n+#line 530 \"objc-parse.y\"\n { yyval.ttype = parser_build_binary_op (yyvsp[-1].code, yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 69:\n-#line 531 \"objc-parse.y\"\n+#line 532 \"objc-parse.y\"\n { yyval.ttype = parser_build_binary_op (yyvsp[-1].code, yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 70:\n-#line 533 \"objc-parse.y\"\n+#line 534 \"objc-parse.y\"\n { yyval.ttype = parser_build_binary_op (yyvsp[-1].code, yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 71:\n-#line 535 \"objc-parse.y\"\n+#line 536 \"objc-parse.y\"\n { yyval.ttype = parser_build_binary_op (yyvsp[-1].code, yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 72:\n-#line 537 \"objc-parse.y\"\n+#line 538 \"objc-parse.y\"\n { yyval.ttype = parser_build_binary_op (yyvsp[-1].code, yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 73:\n-#line 539 \"objc-parse.y\"\n+#line 540 \"objc-parse.y\"\n { yyval.ttype = parser_build_binary_op (yyvsp[-1].code, yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 74:\n-#line 541 \"objc-parse.y\"\n+#line 542 \"objc-parse.y\"\n { yyval.ttype = parser_build_binary_op (yyvsp[-1].code, yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 75:\n-#line 543 \"objc-parse.y\"\n+#line 544 \"objc-parse.y\"\n { yyval.ttype = parser_build_binary_op (yyvsp[-1].code, yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 76:\n-#line 545 \"objc-parse.y\"\n+#line 546 \"objc-parse.y\"\n { yyval.ttype = parser_build_binary_op (yyvsp[-1].code, yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 77:\n-#line 547 \"objc-parse.y\"\n+#line 548 \"objc-parse.y\"\n { yyval.ttype = parser_build_binary_op (yyvsp[-1].code, yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 78:\n-#line 549 \"objc-parse.y\"\n+#line 550 \"objc-parse.y\"\n { yyval.ttype = parser_build_binary_op (yyvsp[-1].code, yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 79:\n-#line 551 \"objc-parse.y\"\n+#line 552 \"objc-parse.y\"\n { yyvsp[-1].ttype = truthvalue_conversion (default_conversion (yyvsp[-1].ttype));\n \t\t  skip_evaluation += yyvsp[-1].ttype == boolean_false_node; ;\n     break;}\n case 80:\n-#line 554 \"objc-parse.y\"\n+#line 555 \"objc-parse.y\"\n { skip_evaluation -= yyvsp[-3].ttype == boolean_false_node;\n \t\t  yyval.ttype = parser_build_binary_op (TRUTH_ANDIF_EXPR, yyvsp[-3].ttype, yyvsp[0].ttype); ;\n     break;}\n case 81:\n-#line 557 \"objc-parse.y\"\n+#line 558 \"objc-parse.y\"\n { yyvsp[-1].ttype = truthvalue_conversion (default_conversion (yyvsp[-1].ttype));\n \t\t  skip_evaluation += yyvsp[-1].ttype == boolean_true_node; ;\n     break;}\n case 82:\n-#line 560 \"objc-parse.y\"\n+#line 561 \"objc-parse.y\"\n { skip_evaluation -= yyvsp[-3].ttype == boolean_true_node;\n \t\t  yyval.ttype = parser_build_binary_op (TRUTH_ORIF_EXPR, yyvsp[-3].ttype, yyvsp[0].ttype); ;\n     break;}\n case 83:\n-#line 563 \"objc-parse.y\"\n+#line 564 \"objc-parse.y\"\n { yyvsp[-1].ttype = truthvalue_conversion (default_conversion (yyvsp[-1].ttype));\n \t\t  skip_evaluation += yyvsp[-1].ttype == boolean_false_node; ;\n     break;}\n case 84:\n-#line 566 \"objc-parse.y\"\n+#line 567 \"objc-parse.y\"\n { skip_evaluation += ((yyvsp[-4].ttype == boolean_true_node)\n \t\t\t\t      - (yyvsp[-4].ttype == boolean_false_node)); ;\n     break;}\n case 85:\n-#line 569 \"objc-parse.y\"\n+#line 570 \"objc-parse.y\"\n { skip_evaluation -= yyvsp[-6].ttype == boolean_true_node;\n \t\t  yyval.ttype = build_conditional_expr (yyvsp[-6].ttype, yyvsp[-3].ttype, yyvsp[0].ttype); ;\n     break;}\n case 86:\n-#line 572 \"objc-parse.y\"\n+#line 573 \"objc-parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids omitting the middle term of a ?: expression\");\n \t\t  /* Make sure first operand is calculated only once.  */\n@@ -2684,12 +2684,12 @@ case 86:\n \t\t  skip_evaluation += yyvsp[-1].ttype == boolean_true_node; ;\n     break;}\n case 87:\n-#line 579 \"objc-parse.y\"\n+#line 580 \"objc-parse.y\"\n { skip_evaluation -= yyvsp[-4].ttype == boolean_true_node;\n \t\t  yyval.ttype = build_conditional_expr (yyvsp[-4].ttype, yyvsp[-3].ttype, yyvsp[0].ttype); ;\n     break;}\n case 88:\n-#line 582 \"objc-parse.y\"\n+#line 583 \"objc-parse.y\"\n { char class;\n \t\t  yyval.ttype = build_modify_expr (yyvsp[-2].ttype, NOP_EXPR, yyvsp[0].ttype);\n \t\t  class = TREE_CODE_CLASS (TREE_CODE (yyval.ttype));\n@@ -2699,7 +2699,7 @@ case 88:\n \t\t;\n     break;}\n case 89:\n-#line 590 \"objc-parse.y\"\n+#line 591 \"objc-parse.y\"\n { char class;\n \t\t  yyval.ttype = build_modify_expr (yyvsp[-2].ttype, yyvsp[-1].code, yyvsp[0].ttype);\n \t\t  /* This inhibits warnings in truthvalue_conversion.  */\n@@ -2710,7 +2710,7 @@ case 89:\n \t\t;\n     break;}\n case 90:\n-#line 602 \"objc-parse.y\"\n+#line 603 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = lastiddecl;\n \t\t  if (!yyval.ttype || yyval.ttype == error_mark_node)\n@@ -2871,23 +2871,23 @@ case 90:\n \t\t;\n     break;}\n case 92:\n-#line 762 \"objc-parse.y\"\n+#line 763 \"objc-parse.y\"\n { yyval.ttype = combine_strings (yyvsp[0].ttype); ;\n     break;}\n case 93:\n-#line 764 \"objc-parse.y\"\n+#line 765 \"objc-parse.y\"\n { char class = TREE_CODE_CLASS (TREE_CODE (yyvsp[-1].ttype));\n \t\t  if (class == 'e' || class == '1'\n \t\t      || class == '2' || class == '<')\n \t\t    C_SET_EXP_ORIGINAL_CODE (yyvsp[-1].ttype, ERROR_MARK);\n \t\t  yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 94:\n-#line 770 \"objc-parse.y\"\n+#line 771 \"objc-parse.y\"\n { yyval.ttype = error_mark_node; ;\n     break;}\n case 95:\n-#line 772 \"objc-parse.y\"\n+#line 773 \"objc-parse.y\"\n { tree rtl_exp;\n \t\t  if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids braced-groups within expressions\");\n@@ -2912,7 +2912,7 @@ case 95:\n \t\t;\n     break;}\n case 96:\n-#line 795 \"objc-parse.y\"\n+#line 796 \"objc-parse.y\"\n {\n \t\t  /* Make sure we call expand_end_stmt_expr.  Otherwise\n \t\t     we are likely to lose sequences and crash later.  */\n@@ -2923,15 +2923,15 @@ case 96:\n \t\t;\n     break;}\n case 97:\n-#line 804 \"objc-parse.y\"\n+#line 805 \"objc-parse.y\"\n { yyval.ttype = build_function_call (yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 98:\n-#line 806 \"objc-parse.y\"\n+#line 807 \"objc-parse.y\"\n { yyval.ttype = build_array_ref (yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 99:\n-#line 808 \"objc-parse.y\"\n+#line 809 \"objc-parse.y\"\n {\n                   if (doing_objc_thang)\n                     {\n@@ -2945,7 +2945,7 @@ case 99:\n \t\t;\n     break;}\n case 100:\n-#line 820 \"objc-parse.y\"\n+#line 821 \"objc-parse.y\"\n {\n                   tree expr = build_indirect_ref (yyvsp[-2].ttype, \"->\");\n \n@@ -2961,79 +2961,79 @@ case 100:\n \t\t;\n     break;}\n case 101:\n-#line 834 \"objc-parse.y\"\n+#line 835 \"objc-parse.y\"\n { yyval.ttype = build_unary_op (POSTINCREMENT_EXPR, yyvsp[-1].ttype, 0); ;\n     break;}\n case 102:\n-#line 836 \"objc-parse.y\"\n+#line 837 \"objc-parse.y\"\n { yyval.ttype = build_unary_op (POSTDECREMENT_EXPR, yyvsp[-1].ttype, 0); ;\n     break;}\n case 103:\n-#line 838 \"objc-parse.y\"\n+#line 839 \"objc-parse.y\"\n { yyval.ttype = build_message_expr (yyvsp[0].ttype); ;\n     break;}\n case 104:\n-#line 840 \"objc-parse.y\"\n+#line 841 \"objc-parse.y\"\n { yyval.ttype = build_selector_expr (yyvsp[0].ttype); ;\n     break;}\n case 105:\n-#line 842 \"objc-parse.y\"\n+#line 843 \"objc-parse.y\"\n { yyval.ttype = build_protocol_expr (yyvsp[0].ttype); ;\n     break;}\n case 106:\n-#line 844 \"objc-parse.y\"\n+#line 845 \"objc-parse.y\"\n { yyval.ttype = build_encode_expr (yyvsp[0].ttype); ;\n     break;}\n case 107:\n-#line 846 \"objc-parse.y\"\n+#line 847 \"objc-parse.y\"\n { yyval.ttype = build_objc_string_object (yyvsp[0].ttype); ;\n     break;}\n case 109:\n-#line 853 \"objc-parse.y\"\n+#line 854 \"objc-parse.y\"\n { yyval.ttype = chainon (yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t;\n     break;}\n case 111:\n-#line 862 \"objc-parse.y\"\n+#line 863 \"objc-parse.y\"\n { yyval.ttype = chainon (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 114:\n-#line 870 \"objc-parse.y\"\n+#line 871 \"objc-parse.y\"\n { c_mark_varargs ();\n \t\t  if (pedantic)\n \t\t    pedwarn (\"ANSI C does not permit use of `varargs.h'\"); ;\n     break;}\n case 115:\n-#line 880 \"objc-parse.y\"\n+#line 881 \"objc-parse.y\"\n { ;\n     break;}\n case 120:\n-#line 896 \"objc-parse.y\"\n+#line 897 \"objc-parse.y\"\n { current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack); ;\n     break;}\n case 121:\n-#line 900 \"objc-parse.y\"\n+#line 901 \"objc-parse.y\"\n { current_declspecs = TREE_VALUE (declspec_stack);\t\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack); ;\n     break;}\n case 122:\n-#line 904 \"objc-parse.y\"\n+#line 905 \"objc-parse.y\"\n { shadow_tag_warned (yyvsp[-1].ttype, 1);\n \t\t  pedwarn (\"empty declaration\"); ;\n     break;}\n case 123:\n-#line 907 \"objc-parse.y\"\n+#line 908 \"objc-parse.y\"\n { pedwarn (\"empty declaration\"); ;\n     break;}\n case 124:\n-#line 916 \"objc-parse.y\"\n+#line 917 \"objc-parse.y\"\n { ;\n     break;}\n case 129:\n-#line 931 \"objc-parse.y\"\n+#line 932 \"objc-parse.y\"\n { pending_xref_error ();\n \t\t  declspec_stack = tree_cons (prefix_attributes,\n \t\t\t\t\t      current_declspecs,\n@@ -3042,308 +3042,308 @@ case 129:\n \t\t\t\t     &current_declspecs, &prefix_attributes); ;\n     break;}\n case 130:\n-#line 941 \"objc-parse.y\"\n+#line 942 \"objc-parse.y\"\n { prefix_attributes = chainon (prefix_attributes, yyvsp[0].ttype); ;\n     break;}\n case 131:\n-#line 946 \"objc-parse.y\"\n+#line 947 \"objc-parse.y\"\n { current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack); ;\n     break;}\n case 132:\n-#line 950 \"objc-parse.y\"\n+#line 951 \"objc-parse.y\"\n { current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack); ;\n     break;}\n case 133:\n-#line 954 \"objc-parse.y\"\n+#line 955 \"objc-parse.y\"\n { current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack); ;\n     break;}\n case 134:\n-#line 958 \"objc-parse.y\"\n+#line 959 \"objc-parse.y\"\n { current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack); ;\n     break;}\n case 135:\n-#line 962 \"objc-parse.y\"\n+#line 963 \"objc-parse.y\"\n { shadow_tag (yyvsp[-1].ttype); ;\n     break;}\n case 136:\n-#line 964 \"objc-parse.y\"\n+#line 965 \"objc-parse.y\"\n { pedwarn (\"empty declaration\"); ;\n     break;}\n case 137:\n-#line 966 \"objc-parse.y\"\n+#line 967 \"objc-parse.y\"\n { RESTORE_WARN_FLAGS (yyvsp[-1].ttype); ;\n     break;}\n case 138:\n-#line 976 \"objc-parse.y\"\n+#line 977 \"objc-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 139:\n-#line 978 \"objc-parse.y\"\n+#line 979 \"objc-parse.y\"\n { yyval.ttype = chainon (yyvsp[0].ttype, tree_cons (NULL_TREE, yyvsp[-1].ttype, yyvsp[-2].ttype)); ;\n     break;}\n case 140:\n-#line 982 \"objc-parse.y\"\n+#line 983 \"objc-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 141:\n-#line 984 \"objc-parse.y\"\n+#line 985 \"objc-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 142:\n-#line 986 \"objc-parse.y\"\n+#line 987 \"objc-parse.y\"\n { if (extra_warnings)\n \t\t    warning (\"`%s' is not at beginning of declaration\",\n \t\t\t     IDENTIFIER_POINTER (yyvsp[0].ttype));\n \t\t  yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 143:\n-#line 991 \"objc-parse.y\"\n+#line 992 \"objc-parse.y\"\n { yyval.ttype = tree_cons (yyvsp[0].ttype, NULL_TREE, yyvsp[-1].ttype); ;\n     break;}\n case 144:\n-#line 996 \"objc-parse.y\"\n+#line 997 \"objc-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 145:\n-#line 998 \"objc-parse.y\"\n+#line 999 \"objc-parse.y\"\n { yyval.ttype = chainon (yyvsp[0].ttype, tree_cons (NULL_TREE, yyvsp[-1].ttype, yyvsp[-2].ttype)); ;\n     break;}\n case 146:\n-#line 1003 \"objc-parse.y\"\n+#line 1004 \"objc-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 147:\n-#line 1005 \"objc-parse.y\"\n+#line 1006 \"objc-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 148:\n-#line 1007 \"objc-parse.y\"\n+#line 1008 \"objc-parse.y\"\n { if (extra_warnings)\n \t\t    warning (\"`%s' is not at beginning of declaration\",\n \t\t\t     IDENTIFIER_POINTER (yyvsp[0].ttype));\n \t\t  yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 149:\n-#line 1020 \"objc-parse.y\"\n+#line 1021 \"objc-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 150:\n-#line 1022 \"objc-parse.y\"\n+#line 1023 \"objc-parse.y\"\n { yyval.ttype = tree_cons (yyvsp[0].ttype, NULL_TREE, NULL_TREE); ;\n     break;}\n case 151:\n-#line 1024 \"objc-parse.y\"\n+#line 1025 \"objc-parse.y\"\n { yyval.ttype = chainon (yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 152:\n-#line 1026 \"objc-parse.y\"\n+#line 1027 \"objc-parse.y\"\n { yyval.ttype = tree_cons (yyvsp[0].ttype, NULL_TREE, yyvsp[-1].ttype); ;\n     break;}\n case 153:\n-#line 1031 \"objc-parse.y\"\n+#line 1032 \"objc-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, NULL_TREE);\n \t\t  TREE_STATIC (yyval.ttype) = 1; ;\n     break;}\n case 154:\n-#line 1034 \"objc-parse.y\"\n+#line 1035 \"objc-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 155:\n-#line 1036 \"objc-parse.y\"\n+#line 1037 \"objc-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ttype);\n \t\t  TREE_STATIC (yyval.ttype) = 1; ;\n     break;}\n case 156:\n-#line 1039 \"objc-parse.y\"\n+#line 1040 \"objc-parse.y\"\n { if (extra_warnings && TREE_STATIC (yyvsp[-1].ttype))\n \t\t    warning (\"`%s' is not at beginning of declaration\",\n \t\t\t     IDENTIFIER_POINTER (yyvsp[0].ttype));\n \t\t  yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ttype);\n \t\t  TREE_STATIC (yyval.ttype) = TREE_STATIC (yyvsp[-1].ttype); ;\n     break;}\n case 157:\n-#line 1053 \"objc-parse.y\"\n+#line 1054 \"objc-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 158:\n-#line 1055 \"objc-parse.y\"\n+#line 1056 \"objc-parse.y\"\n { yyval.ttype = chainon (yyvsp[0].ttype, tree_cons (NULL_TREE, yyvsp[-1].ttype, yyvsp[-2].ttype)); ;\n     break;}\n case 159:\n-#line 1059 \"objc-parse.y\"\n+#line 1060 \"objc-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 160:\n-#line 1061 \"objc-parse.y\"\n+#line 1062 \"objc-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 163:\n-#line 1071 \"objc-parse.y\"\n+#line 1072 \"objc-parse.y\"\n { /* For a typedef name, record the meaning, not the name.\n \t\t     In case of `foo foo, bar;'.  */\n \t\t  yyval.ttype = lookup_name (yyvsp[0].ttype); ;\n     break;}\n case 164:\n-#line 1075 \"objc-parse.y\"\n+#line 1076 \"objc-parse.y\"\n { yyval.ttype = get_static_reference (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 165:\n-#line 1077 \"objc-parse.y\"\n+#line 1078 \"objc-parse.y\"\n { yyval.ttype = get_object_reference (yyvsp[0].ttype); ;\n     break;}\n case 166:\n-#line 1082 \"objc-parse.y\"\n+#line 1083 \"objc-parse.y\"\n { yyval.ttype = get_object_reference (yyvsp[0].ttype); ;\n     break;}\n case 167:\n-#line 1084 \"objc-parse.y\"\n+#line 1085 \"objc-parse.y\"\n { yyval.ttype = TREE_TYPE (yyvsp[-1].ttype); ;\n     break;}\n case 168:\n-#line 1086 \"objc-parse.y\"\n+#line 1087 \"objc-parse.y\"\n { yyval.ttype = groktypename (yyvsp[-1].ttype); ;\n     break;}\n case 176:\n-#line 1108 \"objc-parse.y\"\n+#line 1109 \"objc-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 177:\n-#line 1110 \"objc-parse.y\"\n+#line 1111 \"objc-parse.y\"\n { if (TREE_CHAIN (yyvsp[-1].ttype)) yyvsp[-1].ttype = combine_strings (yyvsp[-1].ttype);\n \t\t  yyval.ttype = yyvsp[-1].ttype;\n \t\t;\n     break;}\n case 178:\n-#line 1117 \"objc-parse.y\"\n+#line 1118 \"objc-parse.y\"\n { yyval.ttype = start_decl (yyvsp[-3].ttype, current_declspecs, 1,\n \t\t\t\t\t  yyvsp[-1].ttype, prefix_attributes);\n \t\t  start_init (yyval.ttype, yyvsp[-2].ttype, global_bindings_p ()); ;\n     break;}\n case 179:\n-#line 1122 \"objc-parse.y\"\n+#line 1123 \"objc-parse.y\"\n { finish_init ();\n \t\t  finish_decl (yyvsp[-1].ttype, yyvsp[0].ttype, yyvsp[-4].ttype); ;\n     break;}\n case 180:\n-#line 1125 \"objc-parse.y\"\n+#line 1126 \"objc-parse.y\"\n { tree d = start_decl (yyvsp[-2].ttype, current_declspecs, 0,\n \t\t\t\t       yyvsp[0].ttype, prefix_attributes);\n \t\t  finish_decl (d, NULL_TREE, yyvsp[-1].ttype); \n                 ;\n     break;}\n case 181:\n-#line 1133 \"objc-parse.y\"\n+#line 1134 \"objc-parse.y\"\n { yyval.ttype = start_decl (yyvsp[-3].ttype, current_declspecs, 1,\n \t\t\t\t\t  yyvsp[-1].ttype, prefix_attributes);\n \t\t  start_init (yyval.ttype, yyvsp[-2].ttype, global_bindings_p ()); ;\n     break;}\n case 182:\n-#line 1138 \"objc-parse.y\"\n+#line 1139 \"objc-parse.y\"\n { finish_init ();\n \t\t  decl_attributes (yyvsp[-1].ttype, yyvsp[-3].ttype, prefix_attributes);\n \t\t  finish_decl (yyvsp[-1].ttype, yyvsp[0].ttype, yyvsp[-4].ttype); ;\n     break;}\n case 183:\n-#line 1142 \"objc-parse.y\"\n+#line 1143 \"objc-parse.y\"\n { tree d = start_decl (yyvsp[-2].ttype, current_declspecs, 0,\n \t\t\t\t       yyvsp[0].ttype, prefix_attributes);\n \t\t  finish_decl (d, NULL_TREE, yyvsp[-1].ttype); ;\n     break;}\n case 184:\n-#line 1150 \"objc-parse.y\"\n+#line 1151 \"objc-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 185:\n-#line 1152 \"objc-parse.y\"\n+#line 1153 \"objc-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 186:\n-#line 1157 \"objc-parse.y\"\n+#line 1158 \"objc-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 187:\n-#line 1159 \"objc-parse.y\"\n+#line 1160 \"objc-parse.y\"\n { yyval.ttype = chainon (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 188:\n-#line 1164 \"objc-parse.y\"\n+#line 1165 \"objc-parse.y\"\n { yyval.ttype = yyvsp[-2].ttype; ;\n     break;}\n case 189:\n-#line 1169 \"objc-parse.y\"\n+#line 1170 \"objc-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 190:\n-#line 1171 \"objc-parse.y\"\n+#line 1172 \"objc-parse.y\"\n { yyval.ttype = chainon (yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 191:\n-#line 1176 \"objc-parse.y\"\n+#line 1177 \"objc-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 192:\n-#line 1178 \"objc-parse.y\"\n+#line 1179 \"objc-parse.y\"\n { yyval.ttype = build_tree_list (yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 193:\n-#line 1180 \"objc-parse.y\"\n+#line 1181 \"objc-parse.y\"\n { yyval.ttype = build_tree_list (yyvsp[-3].ttype, build_tree_list (NULL_TREE, yyvsp[-1].ttype)); ;\n     break;}\n case 194:\n-#line 1182 \"objc-parse.y\"\n+#line 1183 \"objc-parse.y\"\n { yyval.ttype = build_tree_list (yyvsp[-5].ttype, tree_cons (NULL_TREE, yyvsp[-3].ttype, yyvsp[-1].ttype)); ;\n     break;}\n case 195:\n-#line 1184 \"objc-parse.y\"\n+#line 1185 \"objc-parse.y\"\n { yyval.ttype = build_tree_list (yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 201:\n-#line 1202 \"objc-parse.y\"\n+#line 1203 \"objc-parse.y\"\n { really_start_incremental_init (NULL_TREE); ;\n     break;}\n case 202:\n-#line 1204 \"objc-parse.y\"\n+#line 1205 \"objc-parse.y\"\n { yyval.ttype = pop_init_level (0); ;\n     break;}\n case 203:\n-#line 1206 \"objc-parse.y\"\n+#line 1207 \"objc-parse.y\"\n { yyval.ttype = error_mark_node; ;\n     break;}\n case 204:\n-#line 1212 \"objc-parse.y\"\n+#line 1213 \"objc-parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids empty initializer braces\"); ;\n     break;}\n case 210:\n-#line 1228 \"objc-parse.y\"\n+#line 1229 \"objc-parse.y\"\n { set_init_label (yyvsp[-1].ttype); ;\n     break;}\n case 213:\n-#line 1235 \"objc-parse.y\"\n+#line 1236 \"objc-parse.y\"\n { push_init_level (0); ;\n     break;}\n case 214:\n-#line 1237 \"objc-parse.y\"\n+#line 1238 \"objc-parse.y\"\n { process_init_element (pop_init_level (0)); ;\n     break;}\n case 215:\n-#line 1239 \"objc-parse.y\"\n+#line 1240 \"objc-parse.y\"\n { process_init_element (yyvsp[0].ttype); ;\n     break;}\n case 219:\n-#line 1250 \"objc-parse.y\"\n+#line 1251 \"objc-parse.y\"\n { set_init_label (yyvsp[0].ttype); ;\n     break;}\n case 220:\n-#line 1258 \"objc-parse.y\"\n+#line 1259 \"objc-parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids nested functions\");\n \n@@ -3357,16 +3357,16 @@ case 220:\n \t\t  reinit_parse_for_function (); ;\n     break;}\n case 221:\n-#line 1270 \"objc-parse.y\"\n+#line 1271 \"objc-parse.y\"\n { store_parm_decls (); ;\n     break;}\n case 222:\n-#line 1278 \"objc-parse.y\"\n+#line 1279 \"objc-parse.y\"\n { finish_function (1);\n \t\t  pop_function_context (); ;\n     break;}\n case 223:\n-#line 1284 \"objc-parse.y\"\n+#line 1285 \"objc-parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids nested functions\");\n \n@@ -3380,195 +3380,195 @@ case 223:\n \t\t  reinit_parse_for_function (); ;\n     break;}\n case 224:\n-#line 1296 \"objc-parse.y\"\n+#line 1297 \"objc-parse.y\"\n { store_parm_decls (); ;\n     break;}\n case 225:\n-#line 1304 \"objc-parse.y\"\n+#line 1305 \"objc-parse.y\"\n { finish_function (1);\n \t\t  pop_function_context (); ;\n     break;}\n case 228:\n-#line 1320 \"objc-parse.y\"\n+#line 1321 \"objc-parse.y\"\n { yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 229:\n-#line 1322 \"objc-parse.y\"\n+#line 1323 \"objc-parse.y\"\n { yyval.ttype = build_nt (CALL_EXPR, yyvsp[-2].ttype, yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 230:\n-#line 1327 \"objc-parse.y\"\n+#line 1328 \"objc-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 231:\n-#line 1329 \"objc-parse.y\"\n+#line 1330 \"objc-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-2].ttype, NULL_TREE); ;\n     break;}\n case 232:\n-#line 1331 \"objc-parse.y\"\n+#line 1332 \"objc-parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 233:\n-#line 1338 \"objc-parse.y\"\n+#line 1339 \"objc-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 236:\n-#line 1350 \"objc-parse.y\"\n+#line 1351 \"objc-parse.y\"\n { yyval.ttype = build_nt (CALL_EXPR, yyvsp[-2].ttype, yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 237:\n-#line 1355 \"objc-parse.y\"\n+#line 1356 \"objc-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 238:\n-#line 1357 \"objc-parse.y\"\n+#line 1358 \"objc-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-2].ttype, NULL_TREE); ;\n     break;}\n case 239:\n-#line 1359 \"objc-parse.y\"\n+#line 1360 \"objc-parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 240:\n-#line 1366 \"objc-parse.y\"\n+#line 1367 \"objc-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 242:\n-#line 1375 \"objc-parse.y\"\n+#line 1376 \"objc-parse.y\"\n { yyval.ttype = build_nt (CALL_EXPR, yyvsp[-2].ttype, yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 243:\n-#line 1380 \"objc-parse.y\"\n+#line 1381 \"objc-parse.y\"\n { yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 244:\n-#line 1382 \"objc-parse.y\"\n+#line 1383 \"objc-parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 245:\n-#line 1384 \"objc-parse.y\"\n+#line 1385 \"objc-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 246:\n-#line 1386 \"objc-parse.y\"\n+#line 1387 \"objc-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-2].ttype, NULL_TREE); ;\n     break;}\n case 247:\n-#line 1393 \"objc-parse.y\"\n+#line 1394 \"objc-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 249:\n-#line 1399 \"objc-parse.y\"\n+#line 1400 \"objc-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 250:\n-#line 1401 \"objc-parse.y\"\n+#line 1402 \"objc-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 251:\n-#line 1406 \"objc-parse.y\"\n+#line 1407 \"objc-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 252:\n-#line 1408 \"objc-parse.y\"\n+#line 1409 \"objc-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 253:\n-#line 1413 \"objc-parse.y\"\n+#line 1414 \"objc-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 254:\n-#line 1415 \"objc-parse.y\"\n+#line 1416 \"objc-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 255:\n-#line 1420 \"objc-parse.y\"\n+#line 1421 \"objc-parse.y\"\n { yyval.ttype = start_struct (RECORD_TYPE, yyvsp[-1].ttype);\n \t\t  /* Start scope of tag before parsing components.  */\n \t\t;\n     break;}\n case 256:\n-#line 1424 \"objc-parse.y\"\n+#line 1425 \"objc-parse.y\"\n { yyval.ttype = finish_struct (yyvsp[-3].ttype, yyvsp[-2].ttype, chainon (yyvsp[-6].ttype, yyvsp[0].ttype)); ;\n     break;}\n case 257:\n-#line 1426 \"objc-parse.y\"\n+#line 1427 \"objc-parse.y\"\n { yyval.ttype = finish_struct (start_struct (RECORD_TYPE, NULL_TREE),\n \t\t\t\t      yyvsp[-2].ttype, chainon (yyvsp[-4].ttype, yyvsp[0].ttype));\n \t\t;\n     break;}\n case 258:\n-#line 1430 \"objc-parse.y\"\n+#line 1431 \"objc-parse.y\"\n { yyval.ttype = xref_tag (RECORD_TYPE, yyvsp[0].ttype); ;\n     break;}\n case 259:\n-#line 1432 \"objc-parse.y\"\n+#line 1433 \"objc-parse.y\"\n { yyval.ttype = start_struct (UNION_TYPE, yyvsp[-1].ttype); ;\n     break;}\n case 260:\n-#line 1434 \"objc-parse.y\"\n+#line 1435 \"objc-parse.y\"\n { yyval.ttype = finish_struct (yyvsp[-3].ttype, yyvsp[-2].ttype, chainon (yyvsp[-6].ttype, yyvsp[0].ttype)); ;\n     break;}\n case 261:\n-#line 1436 \"objc-parse.y\"\n+#line 1437 \"objc-parse.y\"\n { yyval.ttype = finish_struct (start_struct (UNION_TYPE, NULL_TREE),\n \t\t\t\t      yyvsp[-2].ttype, chainon (yyvsp[-4].ttype, yyvsp[0].ttype));\n \t\t;\n     break;}\n case 262:\n-#line 1440 \"objc-parse.y\"\n+#line 1441 \"objc-parse.y\"\n { yyval.ttype = xref_tag (UNION_TYPE, yyvsp[0].ttype); ;\n     break;}\n case 263:\n-#line 1442 \"objc-parse.y\"\n+#line 1443 \"objc-parse.y\"\n { yyval.ttype = start_enum (yyvsp[-1].ttype); ;\n     break;}\n case 264:\n-#line 1444 \"objc-parse.y\"\n+#line 1445 \"objc-parse.y\"\n { yyval.ttype = finish_enum (yyvsp[-4].ttype, nreverse (yyvsp[-3].ttype),\n \t\t\t\t    chainon (yyvsp[-7].ttype, yyvsp[0].ttype)); ;\n     break;}\n case 265:\n-#line 1447 \"objc-parse.y\"\n+#line 1448 \"objc-parse.y\"\n { yyval.ttype = start_enum (NULL_TREE); ;\n     break;}\n case 266:\n-#line 1449 \"objc-parse.y\"\n+#line 1450 \"objc-parse.y\"\n { yyval.ttype = finish_enum (yyvsp[-4].ttype, nreverse (yyvsp[-3].ttype),\n \t\t\t\t    chainon (yyvsp[-6].ttype, yyvsp[0].ttype)); ;\n     break;}\n case 267:\n-#line 1452 \"objc-parse.y\"\n+#line 1453 \"objc-parse.y\"\n { yyval.ttype = xref_tag (ENUMERAL_TYPE, yyvsp[0].ttype); ;\n     break;}\n case 271:\n-#line 1463 \"objc-parse.y\"\n+#line 1464 \"objc-parse.y\"\n { if (pedantic && ! flag_isoc99)\n \t\t    pedwarn (\"comma at end of enumerator list\"); ;\n     break;}\n case 272:\n-#line 1469 \"objc-parse.y\"\n+#line 1470 \"objc-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 273:\n-#line 1471 \"objc-parse.y\"\n+#line 1472 \"objc-parse.y\"\n { yyval.ttype = chainon (yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t  pedwarn (\"no semicolon at end of struct or union\"); ;\n     break;}\n case 274:\n-#line 1476 \"objc-parse.y\"\n+#line 1477 \"objc-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 275:\n-#line 1478 \"objc-parse.y\"\n+#line 1479 \"objc-parse.y\"\n { yyval.ttype = chainon (yyvsp[-2].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 276:\n-#line 1480 \"objc-parse.y\"\n+#line 1481 \"objc-parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"extra semicolon in struct or union specified\"); ;\n     break;}\n case 277:\n-#line 1484 \"objc-parse.y\"\n+#line 1485 \"objc-parse.y\"\n {\n \t\t  tree interface = lookup_interface (yyvsp[-1].ttype);\n \n@@ -3583,14 +3583,14 @@ case 277:\n \t\t;\n     break;}\n case 278:\n-#line 1509 \"objc-parse.y\"\n+#line 1510 \"objc-parse.y\"\n { yyval.ttype = yyvsp[0].ttype;\n \t\t  current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack); ;\n     break;}\n case 279:\n-#line 1514 \"objc-parse.y\"\n+#line 1515 \"objc-parse.y\"\n {\n \t\t  /* Support for unnamed structs or unions as members of \n \t\t     structs or unions (which is [a] useful and [b] supports \n@@ -3605,151 +3605,151 @@ case 279:\n \t\t;\n     break;}\n case 280:\n-#line 1527 \"objc-parse.y\"\n+#line 1528 \"objc-parse.y\"\n { yyval.ttype = yyvsp[0].ttype;\n \t\t  current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack); ;\n     break;}\n case 281:\n-#line 1532 \"objc-parse.y\"\n+#line 1533 \"objc-parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids member declarations with no members\");\n \t\t  shadow_tag(yyvsp[0].ttype);\n \t\t  yyval.ttype = NULL_TREE; ;\n     break;}\n case 282:\n-#line 1537 \"objc-parse.y\"\n+#line 1538 \"objc-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 283:\n-#line 1539 \"objc-parse.y\"\n+#line 1540 \"objc-parse.y\"\n { yyval.ttype = yyvsp[0].ttype;\n \t\t  RESTORE_WARN_FLAGS (yyvsp[-1].ttype); ;\n     break;}\n case 285:\n-#line 1546 \"objc-parse.y\"\n+#line 1547 \"objc-parse.y\"\n { yyval.ttype = chainon (yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 286:\n-#line 1551 \"objc-parse.y\"\n+#line 1552 \"objc-parse.y\"\n { yyval.ttype = grokfield (yyvsp[-3].filename, yyvsp[-2].lineno, yyvsp[-1].ttype, current_declspecs, NULL_TREE);\n \t\t  decl_attributes (yyval.ttype, yyvsp[0].ttype, prefix_attributes); ;\n     break;}\n case 287:\n-#line 1555 \"objc-parse.y\"\n+#line 1556 \"objc-parse.y\"\n { yyval.ttype = grokfield (yyvsp[-5].filename, yyvsp[-4].lineno, yyvsp[-3].ttype, current_declspecs, yyvsp[-1].ttype);\n \t\t  decl_attributes (yyval.ttype, yyvsp[0].ttype, prefix_attributes); ;\n     break;}\n case 288:\n-#line 1558 \"objc-parse.y\"\n+#line 1559 \"objc-parse.y\"\n { yyval.ttype = grokfield (yyvsp[-4].filename, yyvsp[-3].lineno, NULL_TREE, current_declspecs, yyvsp[-1].ttype);\n \t\t  decl_attributes (yyval.ttype, yyvsp[0].ttype, prefix_attributes); ;\n     break;}\n case 290:\n-#line 1570 \"objc-parse.y\"\n+#line 1571 \"objc-parse.y\"\n { if (yyvsp[-2].ttype == error_mark_node)\n \t\t    yyval.ttype = yyvsp[-2].ttype;\n \t\t  else\n \t\t    yyval.ttype = chainon (yyvsp[0].ttype, yyvsp[-2].ttype); ;\n     break;}\n case 291:\n-#line 1575 \"objc-parse.y\"\n+#line 1576 \"objc-parse.y\"\n { yyval.ttype = error_mark_node; ;\n     break;}\n case 292:\n-#line 1581 \"objc-parse.y\"\n+#line 1582 \"objc-parse.y\"\n { yyval.ttype = build_enumerator (yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 293:\n-#line 1583 \"objc-parse.y\"\n+#line 1584 \"objc-parse.y\"\n { yyval.ttype = build_enumerator (yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 294:\n-#line 1588 \"objc-parse.y\"\n+#line 1589 \"objc-parse.y\"\n { yyval.ttype = build_tree_list (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 295:\n-#line 1590 \"objc-parse.y\"\n+#line 1591 \"objc-parse.y\"\n { yyval.ttype = build_tree_list (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 296:\n-#line 1595 \"objc-parse.y\"\n+#line 1596 \"objc-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 298:\n-#line 1601 \"objc-parse.y\"\n+#line 1602 \"objc-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 299:\n-#line 1603 \"objc-parse.y\"\n+#line 1604 \"objc-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 300:\n-#line 1608 \"objc-parse.y\"\n+#line 1609 \"objc-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 301:\n-#line 1610 \"objc-parse.y\"\n+#line 1611 \"objc-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 302:\n-#line 1615 \"objc-parse.y\"\n+#line 1616 \"objc-parse.y\"\n { yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 303:\n-#line 1618 \"objc-parse.y\"\n+#line 1619 \"objc-parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 304:\n-#line 1620 \"objc-parse.y\"\n+#line 1621 \"objc-parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 305:\n-#line 1622 \"objc-parse.y\"\n+#line 1623 \"objc-parse.y\"\n { yyval.ttype = build_nt (CALL_EXPR, yyvsp[-2].ttype, yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 306:\n-#line 1624 \"objc-parse.y\"\n+#line 1625 \"objc-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 307:\n-#line 1626 \"objc-parse.y\"\n+#line 1627 \"objc-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-2].ttype, NULL_TREE); ;\n     break;}\n case 308:\n-#line 1628 \"objc-parse.y\"\n+#line 1629 \"objc-parse.y\"\n { yyval.ttype = build_nt (CALL_EXPR, NULL_TREE, yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 309:\n-#line 1630 \"objc-parse.y\"\n+#line 1631 \"objc-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, NULL_TREE, yyvsp[-1].ttype); ;\n     break;}\n case 310:\n-#line 1632 \"objc-parse.y\"\n+#line 1633 \"objc-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, NULL_TREE, NULL_TREE); ;\n     break;}\n case 311:\n-#line 1636 \"objc-parse.y\"\n+#line 1637 \"objc-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 312:\n-#line 1645 \"objc-parse.y\"\n+#line 1646 \"objc-parse.y\"\n {\n \t\t  if (pedantic && yyvsp[0].ends_in_label)\n \t\t    pedwarn (\"ANSI C forbids label at end of compound statement\");\n \t\t;\n     break;}\n case 314:\n-#line 1654 \"objc-parse.y\"\n+#line 1655 \"objc-parse.y\"\n { yyval.ends_in_label = yyvsp[0].ends_in_label; ;\n     break;}\n case 315:\n-#line 1656 \"objc-parse.y\"\n+#line 1657 \"objc-parse.y\"\n { yyval.ends_in_label = 0; ;\n     break;}\n case 319:\n-#line 1668 \"objc-parse.y\"\n+#line 1669 \"objc-parse.y\"\n { emit_line_note (input_filename, lineno);\n \t\t  pushlevel (0);\n \t\t  clear_last_expr ();\n@@ -3759,12 +3759,12 @@ case 319:\n \t\t;\n     break;}\n case 321:\n-#line 1682 \"objc-parse.y\"\n+#line 1683 \"objc-parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids label declarations\"); ;\n     break;}\n case 324:\n-#line 1693 \"objc-parse.y\"\n+#line 1694 \"objc-parse.y\"\n { tree link;\n \t\t  for (link = yyvsp[-1].ttype; link; link = TREE_CHAIN (link))\n \t\t    {\n@@ -3775,37 +3775,37 @@ case 324:\n \t\t;\n     break;}\n case 325:\n-#line 1707 \"objc-parse.y\"\n+#line 1708 \"objc-parse.y\"\n {;\n     break;}\n case 327:\n-#line 1711 \"objc-parse.y\"\n+#line 1712 \"objc-parse.y\"\n { compstmt_count++; ;\n     break;}\n case 328:\n-#line 1714 \"objc-parse.y\"\n+#line 1715 \"objc-parse.y\"\n { yyval.ttype = convert (void_type_node, integer_zero_node); ;\n     break;}\n case 329:\n-#line 1716 \"objc-parse.y\"\n+#line 1717 \"objc-parse.y\"\n { emit_line_note (input_filename, lineno);\n \t\t  expand_end_bindings (getdecls (), 1, 0);\n \t\t  yyval.ttype = poplevel (1, 1, 0); ;\n     break;}\n case 330:\n-#line 1720 \"objc-parse.y\"\n+#line 1721 \"objc-parse.y\"\n { emit_line_note (input_filename, lineno);\n \t\t  expand_end_bindings (getdecls (), kept_level_p (), 0);\n \t\t  yyval.ttype = poplevel (kept_level_p (), 0, 0); ;\n     break;}\n case 331:\n-#line 1724 \"objc-parse.y\"\n+#line 1725 \"objc-parse.y\"\n { emit_line_note (input_filename, lineno);\n \t\t  expand_end_bindings (getdecls (), kept_level_p (), 0);\n \t\t  yyval.ttype = poplevel (kept_level_p (), 0, 0); ;\n     break;}\n case 332:\n-#line 1731 \"objc-parse.y\"\n+#line 1732 \"objc-parse.y\"\n { if (current_function_decl == 0)\n \t\t    {\n \t\t      error (\"braced-group within expression allowed only inside a function\");\n@@ -3823,11 +3823,11 @@ case 332:\n \t\t;\n     break;}\n case 333:\n-#line 1748 \"objc-parse.y\"\n+#line 1749 \"objc-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 336:\n-#line 1762 \"objc-parse.y\"\n+#line 1763 \"objc-parse.y\"\n { emit_line_note (yyvsp[-5].filename, yyvsp[-4].lineno);\n \t\t  c_expand_start_cond (truthvalue_conversion (yyvsp[-1].ttype), 0, \n \t\t\t\t       compstmt_count);\n@@ -3837,7 +3837,7 @@ case 336:\n \t\t  position_after_white_space (); ;\n     break;}\n case 337:\n-#line 1776 \"objc-parse.y\"\n+#line 1777 \"objc-parse.y\"\n { stmt_count++;\n \t\t  compstmt_count++;\n \t\t  emit_line_note (yyvsp[-2].filename, yyvsp[-1].lineno);\n@@ -3847,43 +3847,43 @@ case 337:\n \t\t  position_after_white_space (); ;\n     break;}\n case 338:\n-#line 1784 \"objc-parse.y\"\n+#line 1785 \"objc-parse.y\"\n { expand_loop_continue_here (); ;\n     break;}\n case 339:\n-#line 1788 \"objc-parse.y\"\n+#line 1789 \"objc-parse.y\"\n { yyval.filename = input_filename; ;\n     break;}\n case 340:\n-#line 1792 \"objc-parse.y\"\n+#line 1793 \"objc-parse.y\"\n { yyval.lineno = lineno; ;\n     break;}\n case 341:\n-#line 1797 \"objc-parse.y\"\n+#line 1798 \"objc-parse.y\"\n { ;\n     break;}\n case 342:\n-#line 1802 \"objc-parse.y\"\n+#line 1803 \"objc-parse.y\"\n { ;\n     break;}\n case 343:\n-#line 1807 \"objc-parse.y\"\n+#line 1808 \"objc-parse.y\"\n { yyval.ends_in_label = yyvsp[0].ends_in_label; ;\n     break;}\n case 344:\n-#line 1812 \"objc-parse.y\"\n+#line 1813 \"objc-parse.y\"\n { yyval.ends_in_label = 0; ;\n     break;}\n case 345:\n-#line 1814 \"objc-parse.y\"\n+#line 1815 \"objc-parse.y\"\n { yyval.ends_in_label = 1; ;\n     break;}\n case 346:\n-#line 1820 \"objc-parse.y\"\n+#line 1821 \"objc-parse.y\"\n { stmt_count++; ;\n     break;}\n case 348:\n-#line 1823 \"objc-parse.y\"\n+#line 1824 \"objc-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-3].filename, yyvsp[-2].lineno);\n /* It appears that this should not be done--that a non-lvalue array\n@@ -3901,19 +3901,19 @@ case 348:\n \t\t  iterator_expand (yyvsp[-1].ttype); ;\n     break;}\n case 349:\n-#line 1839 \"objc-parse.y\"\n+#line 1840 \"objc-parse.y\"\n { c_expand_start_else ();\n \t\t  yyvsp[-1].itype = stmt_count;\n \t\t  position_after_white_space (); ;\n     break;}\n case 350:\n-#line 1843 \"objc-parse.y\"\n+#line 1844 \"objc-parse.y\"\n { c_expand_end_cond ();\n \t\t  if (extra_warnings && stmt_count == yyvsp[-3].itype)\n \t\t    warning (\"empty body in an else-statement\"); ;\n     break;}\n case 351:\n-#line 1847 \"objc-parse.y\"\n+#line 1848 \"objc-parse.y\"\n { c_expand_end_cond ();\n \t\t  /* This warning is here instead of in simple_if, because we\n \t\t     do not want a warning if an empty if is followed by an\n@@ -3924,11 +3924,11 @@ case 351:\n \t\t\t\t\t\t\"empty body in an if-statement\"); ;\n     break;}\n case 352:\n-#line 1859 \"objc-parse.y\"\n+#line 1860 \"objc-parse.y\"\n { c_expand_end_cond (); ;\n     break;}\n case 353:\n-#line 1861 \"objc-parse.y\"\n+#line 1862 \"objc-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-2].filename, yyvsp[-1].lineno);\n \t\t  /* The emit_nop used to come before emit_line_note,\n@@ -3940,7 +3940,7 @@ case 353:\n \t\t  emit_nop (); ;\n     break;}\n case 354:\n-#line 1871 \"objc-parse.y\"\n+#line 1872 \"objc-parse.y\"\n { /* Don't start the loop till we have succeeded\n \t\t     in parsing the end test.  This is to make sure\n \t\t     that we end every loop we start.  */\n@@ -3951,22 +3951,22 @@ case 354:\n \t\t  position_after_white_space (); ;\n     break;}\n case 355:\n-#line 1880 \"objc-parse.y\"\n+#line 1881 \"objc-parse.y\"\n { expand_end_loop (); ;\n     break;}\n case 356:\n-#line 1883 \"objc-parse.y\"\n+#line 1884 \"objc-parse.y\"\n { emit_line_note (input_filename, lineno);\n \t\t  expand_exit_loop_if_false (NULL_PTR,\n \t\t\t\t\t     truthvalue_conversion (yyvsp[-2].ttype));\n \t\t  expand_end_loop (); ;\n     break;}\n case 357:\n-#line 1889 \"objc-parse.y\"\n+#line 1890 \"objc-parse.y\"\n { expand_end_loop (); ;\n     break;}\n case 358:\n-#line 1892 \"objc-parse.y\"\n+#line 1893 \"objc-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-5].filename, yyvsp[-4].lineno);\n \t\t  /* See comment in `while' alternative, above.  */\n@@ -3979,12 +3979,12 @@ case 358:\n \t\t;\n     break;}\n case 359:\n-#line 1904 \"objc-parse.y\"\n+#line 1905 \"objc-parse.y\"\n { yyvsp[0].lineno = lineno;\n \t\t  yyval.filename = input_filename; ;\n     break;}\n case 360:\n-#line 1907 \"objc-parse.y\"\n+#line 1908 \"objc-parse.y\"\n { \n \t\t  /* Start the loop.  Doing this after parsing\n \t\t     all the expressions ensures we will end the loop.  */\n@@ -3999,7 +3999,7 @@ case 360:\n \t\t  position_after_white_space (); ;\n     break;}\n case 361:\n-#line 1920 \"objc-parse.y\"\n+#line 1921 \"objc-parse.y\"\n { /* Emit the increment expression, with a line number.  */\n \t\t  emit_line_note (yyvsp[-4].filename, yyvsp[-5].lineno);\n \t\t  expand_loop_continue_here ();\n@@ -4008,44 +4008,44 @@ case 361:\n \t\t  expand_end_loop (); ;\n     break;}\n case 362:\n-#line 1927 \"objc-parse.y\"\n+#line 1928 \"objc-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-5].filename, yyvsp[-4].lineno);\n \t\t  c_expand_start_case (yyvsp[-1].ttype);\n \t\t  position_after_white_space (); ;\n     break;}\n case 363:\n-#line 1932 \"objc-parse.y\"\n+#line 1933 \"objc-parse.y\"\n { expand_end_case (yyvsp[-3].ttype); ;\n     break;}\n case 364:\n-#line 1934 \"objc-parse.y\"\n+#line 1935 \"objc-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-3].filename, yyvsp[-2].lineno);\n \t\t  if ( ! expand_exit_something ())\n \t\t    error (\"break statement not within loop or switch\"); ;\n     break;}\n case 365:\n-#line 1939 \"objc-parse.y\"\n+#line 1940 \"objc-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-3].filename, yyvsp[-2].lineno);\n \t\t  if (! expand_continue_loop (NULL_PTR))\n \t\t    error (\"continue statement not within a loop\"); ;\n     break;}\n case 366:\n-#line 1944 \"objc-parse.y\"\n+#line 1945 \"objc-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-3].filename, yyvsp[-2].lineno);\n \t\t  c_expand_return (NULL_TREE); ;\n     break;}\n case 367:\n-#line 1948 \"objc-parse.y\"\n+#line 1949 \"objc-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-4].filename, yyvsp[-3].lineno);\n \t\t  c_expand_return (yyvsp[-1].ttype); ;\n     break;}\n case 368:\n-#line 1952 \"objc-parse.y\"\n+#line 1953 \"objc-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-7].filename, yyvsp[-6].lineno);\n \t\t  STRIP_NOPS (yyvsp[-2].ttype);\n@@ -4057,31 +4057,31 @@ case 368:\n \t\t    error (\"argument of `asm' is not a constant string\"); ;\n     break;}\n case 369:\n-#line 1963 \"objc-parse.y\"\n+#line 1964 \"objc-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-9].filename, yyvsp[-8].lineno);\n \t\t  c_expand_asm_operands (yyvsp[-4].ttype, yyvsp[-2].ttype, NULL_TREE, NULL_TREE,\n \t\t\t\t\t yyvsp[-6].ttype == ridpointers[(int)RID_VOLATILE],\n \t\t\t\t\t input_filename, lineno); ;\n     break;}\n case 370:\n-#line 1970 \"objc-parse.y\"\n+#line 1971 \"objc-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-11].filename, yyvsp[-10].lineno);\n \t\t  c_expand_asm_operands (yyvsp[-6].ttype, yyvsp[-4].ttype, yyvsp[-2].ttype, NULL_TREE,\n \t\t\t\t\t yyvsp[-8].ttype == ridpointers[(int)RID_VOLATILE],\n \t\t\t\t\t input_filename, lineno); ;\n     break;}\n case 371:\n-#line 1978 \"objc-parse.y\"\n+#line 1979 \"objc-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-13].filename, yyvsp[-12].lineno);\n \t\t  c_expand_asm_operands (yyvsp[-8].ttype, yyvsp[-6].ttype, yyvsp[-4].ttype, yyvsp[-2].ttype,\n \t\t\t\t\t yyvsp[-10].ttype == ridpointers[(int)RID_VOLATILE],\n \t\t\t\t\t input_filename, lineno); ;\n     break;}\n case 372:\n-#line 1984 \"objc-parse.y\"\n+#line 1985 \"objc-parse.y\"\n { tree decl;\n \t\t  stmt_count++;\n \t\t  emit_line_note (yyvsp[-4].filename, yyvsp[-3].lineno);\n@@ -4094,15 +4094,15 @@ case 372:\n \t\t;\n     break;}\n case 373:\n-#line 1995 \"objc-parse.y\"\n+#line 1996 \"objc-parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids `goto *expr;'\");\n \t\t  stmt_count++;\n \t\t  emit_line_note (yyvsp[-5].filename, yyvsp[-4].lineno);\n \t\t  expand_computed_goto (convert (ptr_type_node, yyvsp[-1].ttype)); ;\n     break;}\n case 376:\n-#line 2010 \"objc-parse.y\"\n+#line 2011 \"objc-parse.y\"\n {\n \t    /* The value returned by this action is  */\n \t    /*      1 if everything is OK */ \n@@ -4125,14 +4125,14 @@ case 376:\n \t  ;\n     break;}\n case 377:\n-#line 2031 \"objc-parse.y\"\n+#line 2032 \"objc-parse.y\"\n {\n \t    if (yyvsp[-1].itype)\n \t      iterator_for_loop_end (yyvsp[-3].ttype);\n \t  ;\n     break;}\n case 378:\n-#line 2062 \"objc-parse.y\"\n+#line 2063 \"objc-parse.y\"\n { register tree value = check_case_value (yyvsp[-1].ttype);\n \t\t  register tree label\n \t\t    = build_decl (LABEL_DECL, NULL_TREE, NULL_TREE);\n@@ -4165,7 +4165,7 @@ case 378:\n \t\t  position_after_white_space (); ;\n     break;}\n case 379:\n-#line 2093 \"objc-parse.y\"\n+#line 2094 \"objc-parse.y\"\n { register tree value1 = check_case_value (yyvsp[-3].ttype);\n \t\t  register tree value2 = check_case_value (yyvsp[-1].ttype);\n \t\t  register tree label\n@@ -4198,7 +4198,7 @@ case 379:\n \t\t  position_after_white_space (); ;\n     break;}\n case 380:\n-#line 2124 \"objc-parse.y\"\n+#line 2125 \"objc-parse.y\"\n {\n \t\t  tree duplicate;\n \t\t  register tree label\n@@ -4215,7 +4215,7 @@ case 380:\n \t\t  position_after_white_space (); ;\n     break;}\n case 381:\n-#line 2139 \"objc-parse.y\"\n+#line 2140 \"objc-parse.y\"\n { tree label = define_label (input_filename, lineno, yyvsp[-2].ttype);\n \t\t  stmt_count++;\n \t\t  emit_nop ();\n@@ -4227,52 +4227,52 @@ case 381:\n \t\t  position_after_white_space (); ;\n     break;}\n case 382:\n-#line 2154 \"objc-parse.y\"\n+#line 2155 \"objc-parse.y\"\n { emit_line_note (input_filename, lineno);\n \t\t  yyval.ttype = NULL_TREE; ;\n     break;}\n case 383:\n-#line 2157 \"objc-parse.y\"\n+#line 2158 \"objc-parse.y\"\n { emit_line_note (input_filename, lineno); ;\n     break;}\n case 384:\n-#line 2162 \"objc-parse.y\"\n+#line 2163 \"objc-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 386:\n-#line 2169 \"objc-parse.y\"\n+#line 2170 \"objc-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 389:\n-#line 2176 \"objc-parse.y\"\n+#line 2177 \"objc-parse.y\"\n { yyval.ttype = chainon (yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 390:\n-#line 2181 \"objc-parse.y\"\n+#line 2182 \"objc-parse.y\"\n { yyval.ttype = build_tree_list (yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 391:\n-#line 2186 \"objc-parse.y\"\n+#line 2187 \"objc-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, combine_strings (yyvsp[0].ttype), NULL_TREE); ;\n     break;}\n case 392:\n-#line 2188 \"objc-parse.y\"\n+#line 2189 \"objc-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, combine_strings (yyvsp[0].ttype), yyvsp[-2].ttype); ;\n     break;}\n case 393:\n-#line 2194 \"objc-parse.y\"\n+#line 2195 \"objc-parse.y\"\n { pushlevel (0);\n \t\t  clear_parm_order ();\n \t\t  declare_parm_level (0); ;\n     break;}\n case 394:\n-#line 2198 \"objc-parse.y\"\n+#line 2199 \"objc-parse.y\"\n { yyval.ttype = yyvsp[0].ttype;\n \t\t  parmlist_tags_warning ();\n \t\t  poplevel (0, 0, 0); ;\n     break;}\n case 396:\n-#line 2206 \"objc-parse.y\"\n+#line 2207 \"objc-parse.y\"\n { tree parm;\n \t\t  if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids forward parameter declarations\");\n@@ -4282,19 +4282,19 @@ case 396:\n \t\t  clear_parm_order (); ;\n     break;}\n case 397:\n-#line 2214 \"objc-parse.y\"\n+#line 2215 \"objc-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 398:\n-#line 2216 \"objc-parse.y\"\n+#line 2217 \"objc-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, NULL_TREE, NULL_TREE); ;\n     break;}\n case 399:\n-#line 2222 \"objc-parse.y\"\n+#line 2223 \"objc-parse.y\"\n { yyval.ttype = get_parm_info (0); ;\n     break;}\n case 400:\n-#line 2224 \"objc-parse.y\"\n+#line 2225 \"objc-parse.y\"\n { yyval.ttype = get_parm_info (0);\n \t\t  /* Gcc used to allow this as an extension.  However, it does\n \t\t     not work for all targets, and thus has been disabled.\n@@ -4306,23 +4306,23 @@ case 400:\n \t\t;\n     break;}\n case 401:\n-#line 2234 \"objc-parse.y\"\n+#line 2235 \"objc-parse.y\"\n { yyval.ttype = get_parm_info (1); ;\n     break;}\n case 402:\n-#line 2236 \"objc-parse.y\"\n+#line 2237 \"objc-parse.y\"\n { yyval.ttype = get_parm_info (0); ;\n     break;}\n case 403:\n-#line 2241 \"objc-parse.y\"\n+#line 2242 \"objc-parse.y\"\n { push_parm_decl (yyvsp[0].ttype); ;\n     break;}\n case 404:\n-#line 2243 \"objc-parse.y\"\n+#line 2244 \"objc-parse.y\"\n { push_parm_decl (yyvsp[0].ttype); ;\n     break;}\n case 405:\n-#line 2250 \"objc-parse.y\"\n+#line 2251 \"objc-parse.y\"\n { yyval.ttype = build_tree_list (build_tree_list (current_declspecs,\n \t\t\t\t\t\t\t yyvsp[-1].ttype),\n \t\t\t\t\tbuild_tree_list (prefix_attributes,\n@@ -4332,7 +4332,7 @@ case 405:\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack); ;\n     break;}\n case 406:\n-#line 2258 \"objc-parse.y\"\n+#line 2259 \"objc-parse.y\"\n { yyval.ttype = build_tree_list (build_tree_list (current_declspecs,\n \t\t\t\t\t\t\t yyvsp[-1].ttype),\n \t\t\t\t\tbuild_tree_list (prefix_attributes,\n@@ -4342,7 +4342,7 @@ case 406:\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack); ;\n     break;}\n case 407:\n-#line 2266 \"objc-parse.y\"\n+#line 2267 \"objc-parse.y\"\n { yyval.ttype = build_tree_list (build_tree_list (current_declspecs,\n \t\t\t\t\t\t\t yyvsp[-1].ttype),\n \t\t\t\t\tbuild_tree_list (prefix_attributes,\n@@ -4352,7 +4352,7 @@ case 407:\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack); ;\n     break;}\n case 408:\n-#line 2274 \"objc-parse.y\"\n+#line 2275 \"objc-parse.y\"\n { yyval.ttype = build_tree_list (build_tree_list (current_declspecs,\n \t\t\t\t\t\t\t yyvsp[-1].ttype),\n \t\t\t\t\tbuild_tree_list (prefix_attributes,\n@@ -4362,7 +4362,7 @@ case 408:\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack); ;\n     break;}\n case 409:\n-#line 2283 \"objc-parse.y\"\n+#line 2284 \"objc-parse.y\"\n { yyval.ttype = build_tree_list (build_tree_list (current_declspecs,\n \t\t\t\t\t\t\t yyvsp[-1].ttype),\n \t\t\t\t\tbuild_tree_list (prefix_attributes,\n@@ -4372,49 +4372,49 @@ case 409:\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack); ;\n     break;}\n case 410:\n-#line 2296 \"objc-parse.y\"\n+#line 2297 \"objc-parse.y\"\n { pushlevel (0);\n \t\t  clear_parm_order ();\n \t\t  declare_parm_level (1); ;\n     break;}\n case 411:\n-#line 2300 \"objc-parse.y\"\n+#line 2301 \"objc-parse.y\"\n { yyval.ttype = yyvsp[0].ttype;\n \t\t  parmlist_tags_warning ();\n \t\t  poplevel (0, 0, 0); ;\n     break;}\n case 413:\n-#line 2308 \"objc-parse.y\"\n+#line 2309 \"objc-parse.y\"\n { tree t;\n \t\t  for (t = yyvsp[-1].ttype; t; t = TREE_CHAIN (t))\n \t\t    if (TREE_VALUE (t) == NULL_TREE)\n \t\t      error (\"`...' in old-style identifier list\");\n \t\t  yyval.ttype = tree_cons (NULL_TREE, NULL_TREE, yyvsp[-1].ttype); ;\n     break;}\n case 414:\n-#line 2318 \"objc-parse.y\"\n+#line 2319 \"objc-parse.y\"\n { yyval.ttype = build_tree_list (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 415:\n-#line 2320 \"objc-parse.y\"\n+#line 2321 \"objc-parse.y\"\n { yyval.ttype = chainon (yyvsp[-2].ttype, build_tree_list (NULL_TREE, yyvsp[0].ttype)); ;\n     break;}\n case 416:\n-#line 2326 \"objc-parse.y\"\n+#line 2327 \"objc-parse.y\"\n { yyval.ttype = build_tree_list (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 417:\n-#line 2328 \"objc-parse.y\"\n+#line 2329 \"objc-parse.y\"\n { yyval.ttype = chainon (yyvsp[-2].ttype, build_tree_list (NULL_TREE, yyvsp[0].ttype)); ;\n     break;}\n case 418:\n-#line 2333 \"objc-parse.y\"\n+#line 2334 \"objc-parse.y\"\n { yyval.ttype = SAVE_WARN_FLAGS();\n \t\t  pedantic = 0;\n \t\t  warn_pointer_arith = 0; ;\n     break;}\n case 424:\n-#line 2347 \"objc-parse.y\"\n+#line 2348 \"objc-parse.y\"\n {\n \t\t  if (objc_implementation_context)\n                     {\n@@ -4427,114 +4427,114 @@ case 424:\n \t\t;\n     break;}\n case 425:\n-#line 2362 \"objc-parse.y\"\n+#line 2363 \"objc-parse.y\"\n { yyval.ttype = build_tree_list (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 426:\n-#line 2364 \"objc-parse.y\"\n+#line 2365 \"objc-parse.y\"\n { yyval.ttype = chainon (yyvsp[-2].ttype, build_tree_list (NULL_TREE, yyvsp[0].ttype)); ;\n     break;}\n case 427:\n-#line 2369 \"objc-parse.y\"\n+#line 2370 \"objc-parse.y\"\n {\n \t\t  objc_declare_class (yyvsp[-1].ttype);\n \t\t;\n     break;}\n case 428:\n-#line 2375 \"objc-parse.y\"\n+#line 2376 \"objc-parse.y\"\n {\n \t\t  objc_declare_alias (yyvsp[-2].ttype, yyvsp[-1].ttype);\n \t\t;\n     break;}\n case 429:\n-#line 2381 \"objc-parse.y\"\n+#line 2382 \"objc-parse.y\"\n {\n \t\t  objc_interface_context = objc_ivar_context\n \t\t    = start_class (CLASS_INTERFACE_TYPE, yyvsp[-2].ttype, NULL_TREE, yyvsp[-1].ttype);\n                   objc_public_flag = 0;\n \t\t;\n     break;}\n case 430:\n-#line 2387 \"objc-parse.y\"\n+#line 2388 \"objc-parse.y\"\n {\n                   continue_class (objc_interface_context);\n \t\t;\n     break;}\n case 431:\n-#line 2392 \"objc-parse.y\"\n+#line 2393 \"objc-parse.y\"\n {\n \t\t  finish_class (objc_interface_context);\n \t\t  objc_interface_context = NULL_TREE;\n \t\t;\n     break;}\n case 432:\n-#line 2398 \"objc-parse.y\"\n+#line 2399 \"objc-parse.y\"\n {\n \t\t  objc_interface_context\n \t\t    = start_class (CLASS_INTERFACE_TYPE, yyvsp[-1].ttype, NULL_TREE, yyvsp[0].ttype);\n                   continue_class (objc_interface_context);\n \t\t;\n     break;}\n case 433:\n-#line 2405 \"objc-parse.y\"\n+#line 2406 \"objc-parse.y\"\n {\n \t\t  finish_class (objc_interface_context);\n \t\t  objc_interface_context = NULL_TREE;\n \t\t;\n     break;}\n case 434:\n-#line 2411 \"objc-parse.y\"\n+#line 2412 \"objc-parse.y\"\n {\n \t\t  objc_interface_context = objc_ivar_context\n \t\t    = start_class (CLASS_INTERFACE_TYPE, yyvsp[-4].ttype, yyvsp[-2].ttype, yyvsp[-1].ttype);\n                   objc_public_flag = 0;\n \t\t;\n     break;}\n case 435:\n-#line 2417 \"objc-parse.y\"\n+#line 2418 \"objc-parse.y\"\n {\n                   continue_class (objc_interface_context);\n \t\t;\n     break;}\n case 436:\n-#line 2422 \"objc-parse.y\"\n+#line 2423 \"objc-parse.y\"\n {\n \t\t  finish_class (objc_interface_context);\n \t\t  objc_interface_context = NULL_TREE;\n \t\t;\n     break;}\n case 437:\n-#line 2428 \"objc-parse.y\"\n+#line 2429 \"objc-parse.y\"\n {\n \t\t  objc_interface_context\n \t\t    = start_class (CLASS_INTERFACE_TYPE, yyvsp[-3].ttype, yyvsp[-1].ttype, yyvsp[0].ttype);\n                   continue_class (objc_interface_context);\n \t\t;\n     break;}\n case 438:\n-#line 2435 \"objc-parse.y\"\n+#line 2436 \"objc-parse.y\"\n {\n \t\t  finish_class (objc_interface_context);\n \t\t  objc_interface_context = NULL_TREE;\n \t\t;\n     break;}\n case 439:\n-#line 2441 \"objc-parse.y\"\n+#line 2442 \"objc-parse.y\"\n {\n \t\t  objc_implementation_context = objc_ivar_context\n \t\t    = start_class (CLASS_IMPLEMENTATION_TYPE, yyvsp[-1].ttype, NULL_TREE, NULL_TREE);\n                   objc_public_flag = 0;\n \t\t;\n     break;}\n case 440:\n-#line 2447 \"objc-parse.y\"\n+#line 2448 \"objc-parse.y\"\n {\n                   objc_ivar_chain\n \t\t    = continue_class (objc_implementation_context);\n \t\t;\n     break;}\n case 441:\n-#line 2453 \"objc-parse.y\"\n+#line 2454 \"objc-parse.y\"\n {\n \t\t  objc_implementation_context\n \t\t    = start_class (CLASS_IMPLEMENTATION_TYPE, yyvsp[0].ttype, NULL_TREE, NULL_TREE);\n@@ -4543,22 +4543,22 @@ case 441:\n \t\t;\n     break;}\n case 442:\n-#line 2461 \"objc-parse.y\"\n+#line 2462 \"objc-parse.y\"\n {\n \t\t  objc_implementation_context = objc_ivar_context\n \t\t    = start_class (CLASS_IMPLEMENTATION_TYPE, yyvsp[-3].ttype, yyvsp[-1].ttype, NULL_TREE);\n                   objc_public_flag = 0;\n \t\t;\n     break;}\n case 443:\n-#line 2467 \"objc-parse.y\"\n+#line 2468 \"objc-parse.y\"\n {\n                   objc_ivar_chain\n \t\t    = continue_class (objc_implementation_context);\n \t\t;\n     break;}\n case 444:\n-#line 2473 \"objc-parse.y\"\n+#line 2474 \"objc-parse.y\"\n {\n \t\t  objc_implementation_context\n \t\t    = start_class (CLASS_IMPLEMENTATION_TYPE, yyvsp[-2].ttype, yyvsp[0].ttype, NULL_TREE);\n@@ -4567,22 +4567,22 @@ case 444:\n \t\t;\n     break;}\n case 445:\n-#line 2481 \"objc-parse.y\"\n+#line 2482 \"objc-parse.y\"\n {\n \t\t  objc_interface_context\n \t\t    = start_class (CATEGORY_INTERFACE_TYPE, yyvsp[-4].ttype, yyvsp[-2].ttype, yyvsp[0].ttype);\n                   continue_class (objc_interface_context);\n \t\t;\n     break;}\n case 446:\n-#line 2488 \"objc-parse.y\"\n+#line 2489 \"objc-parse.y\"\n {\n \t\t  finish_class (objc_interface_context);\n \t\t  objc_interface_context = NULL_TREE;\n \t\t;\n     break;}\n case 447:\n-#line 2494 \"objc-parse.y\"\n+#line 2495 \"objc-parse.y\"\n {\n \t\t  objc_implementation_context\n \t\t    = start_class (CATEGORY_IMPLEMENTATION_TYPE, yyvsp[-3].ttype, yyvsp[-1].ttype, NULL_TREE);\n@@ -4591,29 +4591,29 @@ case 447:\n \t\t;\n     break;}\n case 448:\n-#line 2504 \"objc-parse.y\"\n+#line 2505 \"objc-parse.y\"\n {\n \t\t  remember_protocol_qualifiers ();\n \t\t  objc_interface_context\n \t\t    = start_protocol(PROTOCOL_INTERFACE_TYPE, yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t;\n     break;}\n case 449:\n-#line 2510 \"objc-parse.y\"\n+#line 2511 \"objc-parse.y\"\n {\n \t\t  forget_protocol_qualifiers();\n \t\t  finish_protocol(objc_interface_context);\n \t\t  objc_interface_context = NULL_TREE;\n \t\t;\n     break;}\n case 450:\n-#line 2519 \"objc-parse.y\"\n+#line 2520 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = NULL_TREE;\n \t\t;\n     break;}\n case 452:\n-#line 2527 \"objc-parse.y\"\n+#line 2528 \"objc-parse.y\"\n {\n \t\t  if (yyvsp[-2].code == LT_EXPR && yyvsp[0].code == GT_EXPR)\n \t\t    yyval.ttype = yyvsp[-1].ttype;\n@@ -4622,54 +4622,54 @@ case 452:\n \t\t;\n     break;}\n case 455:\n-#line 2541 \"objc-parse.y\"\n+#line 2542 \"objc-parse.y\"\n { objc_public_flag = 2; ;\n     break;}\n case 456:\n-#line 2542 \"objc-parse.y\"\n+#line 2543 \"objc-parse.y\"\n { objc_public_flag = 0; ;\n     break;}\n case 457:\n-#line 2543 \"objc-parse.y\"\n+#line 2544 \"objc-parse.y\"\n { objc_public_flag = 1; ;\n     break;}\n case 458:\n-#line 2548 \"objc-parse.y\"\n+#line 2549 \"objc-parse.y\"\n {\n                   yyval.ttype = NULL_TREE;\n                 ;\n     break;}\n case 460:\n-#line 2553 \"objc-parse.y\"\n+#line 2554 \"objc-parse.y\"\n {\n                   if (pedantic)\n \t\t    pedwarn (\"extra semicolon in struct or union specified\");\n                 ;\n     break;}\n case 461:\n-#line 2571 \"objc-parse.y\"\n+#line 2572 \"objc-parse.y\"\n { yyval.ttype = yyvsp[0].ttype;\n \t\t  current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack); ;\n     break;}\n case 462:\n-#line 2576 \"objc-parse.y\"\n+#line 2577 \"objc-parse.y\"\n { yyval.ttype = yyvsp[0].ttype;\n \t\t  current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack); ;\n     break;}\n case 463:\n-#line 2581 \"objc-parse.y\"\n+#line 2582 \"objc-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 464:\n-#line 2586 \"objc-parse.y\"\n+#line 2587 \"objc-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 467:\n-#line 2593 \"objc-parse.y\"\n+#line 2594 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = add_instance_variable (objc_ivar_context,\n \t\t\t\t\t      objc_public_flag,\n@@ -4678,15 +4678,15 @@ case 467:\n                 ;\n     break;}\n case 468:\n-#line 2600 \"objc-parse.y\"\n+#line 2601 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = add_instance_variable (objc_ivar_context,\n \t\t\t\t\t      objc_public_flag,\n \t\t\t\t\t      yyvsp[-2].ttype, current_declspecs, yyvsp[0].ttype);\n                 ;\n     break;}\n case 469:\n-#line 2606 \"objc-parse.y\"\n+#line 2607 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = add_instance_variable (objc_ivar_context,\n \t\t\t\t\t      objc_public_flag,\n@@ -4695,7 +4695,7 @@ case 469:\n                 ;\n     break;}\n case 470:\n-#line 2616 \"objc-parse.y\"\n+#line 2617 \"objc-parse.y\"\n {\n \t\t  remember_protocol_qualifiers ();\n \t\t  if (objc_implementation_context)\n@@ -4705,7 +4705,7 @@ case 470:\n \t\t;\n     break;}\n case 471:\n-#line 2624 \"objc-parse.y\"\n+#line 2625 \"objc-parse.y\"\n {\n \t\t  forget_protocol_qualifiers ();\n \t\t  add_class_method (objc_implementation_context, yyvsp[0].ttype);\n@@ -4714,20 +4714,20 @@ case 471:\n \t\t;\n     break;}\n case 472:\n-#line 2631 \"objc-parse.y\"\n+#line 2632 \"objc-parse.y\"\n {\n \t\t  continue_method_def ();\n \t\t;\n     break;}\n case 473:\n-#line 2635 \"objc-parse.y\"\n+#line 2636 \"objc-parse.y\"\n {\n \t\t  finish_method_def ();\n \t\t  objc_method_context = NULL_TREE;\n \t\t;\n     break;}\n case 474:\n-#line 2641 \"objc-parse.y\"\n+#line 2642 \"objc-parse.y\"\n {\n \t\t  remember_protocol_qualifiers ();\n \t\t  if (objc_implementation_context)\n@@ -4737,7 +4737,7 @@ case 474:\n \t\t;\n     break;}\n case 475:\n-#line 2649 \"objc-parse.y\"\n+#line 2650 \"objc-parse.y\"\n {\n \t\t  forget_protocol_qualifiers ();\n \t\t  add_instance_method (objc_implementation_context, yyvsp[0].ttype);\n@@ -4746,266 +4746,266 @@ case 475:\n \t\t;\n     break;}\n case 476:\n-#line 2656 \"objc-parse.y\"\n+#line 2657 \"objc-parse.y\"\n {\n \t\t  continue_method_def ();\n \t\t;\n     break;}\n case 477:\n-#line 2660 \"objc-parse.y\"\n+#line 2661 \"objc-parse.y\"\n {\n \t\t  finish_method_def ();\n \t\t  objc_method_context = NULL_TREE;\n \t\t;\n     break;}\n case 479:\n-#line 2672 \"objc-parse.y\"\n+#line 2673 \"objc-parse.y\"\n {yyval.ttype = NULL_TREE; ;\n     break;}\n case 484:\n-#line 2679 \"objc-parse.y\"\n+#line 2680 \"objc-parse.y\"\n {yyval.ttype = NULL_TREE; ;\n     break;}\n case 488:\n-#line 2689 \"objc-parse.y\"\n+#line 2690 \"objc-parse.y\"\n {\n \t\t  /* Remember protocol qualifiers in prototypes.  */\n \t\t  remember_protocol_qualifiers ();\n \t\t  objc_inherit_code = CLASS_METHOD_DECL;\n \t\t;\n     break;}\n case 489:\n-#line 2695 \"objc-parse.y\"\n+#line 2696 \"objc-parse.y\"\n {\n \t\t  /* Forget protocol qualifiers here.  */\n \t\t  forget_protocol_qualifiers ();\n \t\t  add_class_method (objc_interface_context, yyvsp[0].ttype);\n \t\t;\n     break;}\n case 491:\n-#line 2703 \"objc-parse.y\"\n+#line 2704 \"objc-parse.y\"\n {\n \t\t  /* Remember protocol qualifiers in prototypes.  */\n \t\t  remember_protocol_qualifiers ();\n \t\t  objc_inherit_code = INSTANCE_METHOD_DECL;\n \t\t;\n     break;}\n case 492:\n-#line 2709 \"objc-parse.y\"\n+#line 2710 \"objc-parse.y\"\n {\n \t\t  /* Forget protocol qualifiers here.  */\n \t\t  forget_protocol_qualifiers ();\n \t\t  add_instance_method (objc_interface_context, yyvsp[0].ttype);\n \t\t;\n     break;}\n case 494:\n-#line 2719 \"objc-parse.y\"\n+#line 2720 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = build_method_decl (objc_inherit_code, yyvsp[-2].ttype, yyvsp[0].ttype, NULL_TREE);\n \t\t;\n     break;}\n case 495:\n-#line 2724 \"objc-parse.y\"\n+#line 2725 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = build_method_decl (objc_inherit_code, NULL_TREE, yyvsp[0].ttype, NULL_TREE);\n \t\t;\n     break;}\n case 496:\n-#line 2729 \"objc-parse.y\"\n+#line 2730 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = build_method_decl (objc_inherit_code, yyvsp[-3].ttype, yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t;\n     break;}\n case 497:\n-#line 2734 \"objc-parse.y\"\n+#line 2735 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = build_method_decl (objc_inherit_code, NULL_TREE, yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t;\n     break;}\n case 506:\n-#line 2764 \"objc-parse.y\"\n+#line 2765 \"objc-parse.y\"\n { current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack); ;\n     break;}\n case 507:\n-#line 2768 \"objc-parse.y\"\n+#line 2769 \"objc-parse.y\"\n { shadow_tag (yyvsp[-1].ttype); ;\n     break;}\n case 508:\n-#line 2770 \"objc-parse.y\"\n+#line 2771 \"objc-parse.y\"\n { pedwarn (\"empty declaration\"); ;\n     break;}\n case 509:\n-#line 2775 \"objc-parse.y\"\n+#line 2776 \"objc-parse.y\"\n { push_parm_decl (yyvsp[0].ttype); ;\n     break;}\n case 510:\n-#line 2777 \"objc-parse.y\"\n+#line 2778 \"objc-parse.y\"\n { push_parm_decl (yyvsp[0].ttype); ;\n     break;}\n case 511:\n-#line 2785 \"objc-parse.y\"\n+#line 2786 \"objc-parse.y\"\n { yyval.ttype = build_tree_list (build_tree_list (current_declspecs,\n \t\t\t\t\t\t\t yyvsp[-1].ttype),\n \t\t\t\t\tbuild_tree_list (prefix_attributes,\n \t\t\t\t\t\t\t yyvsp[0].ttype)); ;\n     break;}\n case 512:\n-#line 2790 \"objc-parse.y\"\n+#line 2791 \"objc-parse.y\"\n { yyval.ttype = build_tree_list (build_tree_list (current_declspecs,\n \t\t\t\t\t\t\t yyvsp[-1].ttype),\n \t\t\t\t\tbuild_tree_list (prefix_attributes,\n \t\t\t\t\t\t\t yyvsp[0].ttype)); ;\n     break;}\n case 513:\n-#line 2795 \"objc-parse.y\"\n+#line 2796 \"objc-parse.y\"\n { yyval.ttype = build_tree_list (build_tree_list (current_declspecs,\n \t\t\t\t\t\t\t yyvsp[-1].ttype),\n \t\t\t\t\tbuild_tree_list (prefix_attributes,\n \t\t\t\t\t\t\t yyvsp[0].ttype)); ;\n     break;}\n case 514:\n-#line 2803 \"objc-parse.y\"\n+#line 2804 \"objc-parse.y\"\n {\n \t    \t  yyval.ttype = NULL_TREE;\n \t\t;\n     break;}\n case 515:\n-#line 2807 \"objc-parse.y\"\n+#line 2808 \"objc-parse.y\"\n {\n \t\t  /* oh what a kludge! */\n \t\t  yyval.ttype = (tree)1;\n \t\t;\n     break;}\n case 516:\n-#line 2812 \"objc-parse.y\"\n+#line 2813 \"objc-parse.y\"\n {\n \t\t  pushlevel (0);\n \t\t;\n     break;}\n case 517:\n-#line 2816 \"objc-parse.y\"\n+#line 2817 \"objc-parse.y\"\n {\n \t  \t  /* returns a tree list node generated by get_parm_info */\n \t\t  yyval.ttype = yyvsp[0].ttype;\n \t\t  poplevel (0, 0, 0);\n \t\t;\n     break;}\n case 520:\n-#line 2831 \"objc-parse.y\"\n+#line 2832 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = chainon (yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t;\n     break;}\n case 525:\n-#line 2844 \"objc-parse.y\"\n+#line 2845 \"objc-parse.y\"\n { yyval.ttype = get_identifier (token_buffer); ;\n     break;}\n case 526:\n-#line 2845 \"objc-parse.y\"\n+#line 2846 \"objc-parse.y\"\n { yyval.ttype = get_identifier (token_buffer); ;\n     break;}\n case 527:\n-#line 2846 \"objc-parse.y\"\n+#line 2847 \"objc-parse.y\"\n { yyval.ttype = get_identifier (token_buffer); ;\n     break;}\n case 528:\n-#line 2847 \"objc-parse.y\"\n+#line 2848 \"objc-parse.y\"\n { yyval.ttype = get_identifier (token_buffer); ;\n     break;}\n case 529:\n-#line 2848 \"objc-parse.y\"\n+#line 2849 \"objc-parse.y\"\n { yyval.ttype = get_identifier (token_buffer); ;\n     break;}\n case 530:\n-#line 2849 \"objc-parse.y\"\n+#line 2850 \"objc-parse.y\"\n { yyval.ttype = get_identifier (token_buffer); ;\n     break;}\n case 531:\n-#line 2850 \"objc-parse.y\"\n+#line 2851 \"objc-parse.y\"\n { yyval.ttype = get_identifier (token_buffer); ;\n     break;}\n case 532:\n-#line 2851 \"objc-parse.y\"\n+#line 2852 \"objc-parse.y\"\n { yyval.ttype = get_identifier (token_buffer); ;\n     break;}\n case 533:\n-#line 2852 \"objc-parse.y\"\n+#line 2853 \"objc-parse.y\"\n { yyval.ttype = get_identifier (token_buffer); ;\n     break;}\n case 534:\n-#line 2853 \"objc-parse.y\"\n+#line 2854 \"objc-parse.y\"\n { yyval.ttype = get_identifier (token_buffer); ;\n     break;}\n case 535:\n-#line 2854 \"objc-parse.y\"\n+#line 2855 \"objc-parse.y\"\n { yyval.ttype = get_identifier (token_buffer); ;\n     break;}\n case 536:\n-#line 2855 \"objc-parse.y\"\n+#line 2856 \"objc-parse.y\"\n { yyval.ttype = get_identifier (token_buffer); ;\n     break;}\n case 537:\n-#line 2856 \"objc-parse.y\"\n+#line 2857 \"objc-parse.y\"\n { yyval.ttype = get_identifier (token_buffer); ;\n     break;}\n case 538:\n-#line 2857 \"objc-parse.y\"\n+#line 2858 \"objc-parse.y\"\n { yyval.ttype = get_identifier (token_buffer); ;\n     break;}\n case 539:\n-#line 2858 \"objc-parse.y\"\n+#line 2859 \"objc-parse.y\"\n { yyval.ttype = get_identifier (token_buffer); ;\n     break;}\n case 540:\n-#line 2859 \"objc-parse.y\"\n+#line 2860 \"objc-parse.y\"\n { yyval.ttype = get_identifier (token_buffer); ;\n     break;}\n case 541:\n-#line 2860 \"objc-parse.y\"\n+#line 2861 \"objc-parse.y\"\n { yyval.ttype = get_identifier (token_buffer); ;\n     break;}\n case 542:\n-#line 2861 \"objc-parse.y\"\n+#line 2862 \"objc-parse.y\"\n { yyval.ttype = get_identifier (token_buffer); ;\n     break;}\n case 543:\n-#line 2862 \"objc-parse.y\"\n+#line 2863 \"objc-parse.y\"\n { yyval.ttype = get_identifier (token_buffer); ;\n     break;}\n case 546:\n-#line 2868 \"objc-parse.y\"\n+#line 2869 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = build_keyword_decl (yyvsp[-5].ttype, yyvsp[-2].ttype, yyvsp[0].ttype);\n \t\t;\n     break;}\n case 547:\n-#line 2873 \"objc-parse.y\"\n+#line 2874 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = build_keyword_decl (yyvsp[-2].ttype, NULL_TREE, yyvsp[0].ttype);\n \t\t;\n     break;}\n case 548:\n-#line 2878 \"objc-parse.y\"\n+#line 2879 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = build_keyword_decl (NULL_TREE, yyvsp[-2].ttype, yyvsp[0].ttype);\n \t\t;\n     break;}\n case 549:\n-#line 2883 \"objc-parse.y\"\n+#line 2884 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = build_keyword_decl (NULL_TREE, NULL_TREE, yyvsp[0].ttype);\n \t\t;\n     break;}\n case 553:\n-#line 2896 \"objc-parse.y\"\n+#line 2897 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = chainon (yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t;\n     break;}\n case 554:\n-#line 2904 \"objc-parse.y\"\n+#line 2905 \"objc-parse.y\"\n {\n \t\t  if (TREE_CHAIN (yyvsp[0].ttype) == NULL_TREE)\n \t\t    /* just return the expr., remove a level of indirection */\n@@ -5016,76 +5016,76 @@ case 554:\n \t\t;\n     break;}\n case 555:\n-#line 2916 \"objc-parse.y\"\n+#line 2917 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = build_tree_list (yyvsp[-2].ttype, yyvsp[0].ttype);\n \t\t;\n     break;}\n case 556:\n-#line 2920 \"objc-parse.y\"\n+#line 2921 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = build_tree_list (NULL_TREE, yyvsp[0].ttype);\n \t\t;\n     break;}\n case 558:\n-#line 2928 \"objc-parse.y\"\n+#line 2929 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = get_class_reference (yyvsp[0].ttype);\n \t\t;\n     break;}\n case 559:\n-#line 2935 \"objc-parse.y\"\n+#line 2936 \"objc-parse.y\"\n { objc_receiver_context = 1; ;\n     break;}\n case 560:\n-#line 2937 \"objc-parse.y\"\n+#line 2938 \"objc-parse.y\"\n { objc_receiver_context = 0; ;\n     break;}\n case 561:\n-#line 2939 \"objc-parse.y\"\n+#line 2940 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = build_tree_list (yyvsp[-3].ttype, yyvsp[-1].ttype);\n \t\t;\n     break;}\n case 565:\n-#line 2952 \"objc-parse.y\"\n+#line 2953 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = chainon (yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t;\n     break;}\n case 566:\n-#line 2959 \"objc-parse.y\"\n+#line 2960 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = build_tree_list (yyvsp[-1].ttype, NULL_TREE);\n \t\t;\n     break;}\n case 567:\n-#line 2963 \"objc-parse.y\"\n+#line 2964 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = build_tree_list (NULL_TREE, NULL_TREE);\n \t\t;\n     break;}\n case 568:\n-#line 2970 \"objc-parse.y\"\n+#line 2971 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = yyvsp[-1].ttype;\n \t\t;\n     break;}\n case 569:\n-#line 2977 \"objc-parse.y\"\n+#line 2978 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = yyvsp[-1].ttype;\n \t\t;\n     break;}\n case 570:\n-#line 2986 \"objc-parse.y\"\n+#line 2987 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = groktypename (yyvsp[-1].ttype);\n \t\t;\n     break;}\n }\n    /* the action file gets copied in in place of this dollarsign */\n-#line 543 \"/usr/share/misc/bison.simple\"\n+#line 543 \"/usr/lib/bison.simple\"\n \f\n   yyvsp -= yylen;\n   yyssp -= yylen;\n@@ -5305,5 +5305,5 @@ case 570:\n     }\n   return 1;\n }\n-#line 2991 \"objc-parse.y\"\n+#line 2992 \"objc-parse.y\"\n "}, {"sha": "da4a596f2d4a7e35f3ee4c3c868b79238c535973", "filename": "gcc/objc/objc-parse.y", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6a6823ed0b970d0ea76e72a1fb7e219365433e4/gcc%2Fobjc%2Fobjc-parse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6a6823ed0b970d0ea76e72a1fb7e219365433e4/gcc%2Fobjc%2Fobjc-parse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-parse.y?ref=b6a6823ed0b970d0ea76e72a1fb7e219365433e4", "patch": "@@ -1,7 +1,7 @@\n /*WARNING: This file is automatically generated!*/\n /* YACC parser for C syntax and for Objective C.  -*-c-*-\n-   Copyright (C) 1987, 1988, 1989, 1992, 1993, 1994, 1995, 1996, 1997, 1998,\n-   1999, 2000 Free Software Foundation, Inc.\n+   Copyright (C) 1987, 1988, 1989, 1992, 1993, 1994, 1995, 1996,\n+   1997, 1998, 1999, 2000 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n "}]}