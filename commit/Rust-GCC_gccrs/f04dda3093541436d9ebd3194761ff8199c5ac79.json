{"sha": "f04dda3093541436d9ebd3194761ff8199c5ac79", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjA0ZGRhMzA5MzU0MTQzNmQ5ZWJkMzE5NDc2MWZmODE5OWM1YWM3OQ==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2014-01-23T19:18:49Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2014-01-23T19:18:49Z"}, "message": "re PR c/58346 (ICE with SIGFPE at -O1 and above on x86_64-linux-gnu (affecting trunk, 4.8, 4.7, and 4.6))\n\n\tPR c/58346\nc-family/\n\t* c-common.c (pointer_to_zero_sized_aggr_p): New function.\n\t* c-common.h: Declare it.\ncp/\n\t* typeck.c (pointer_diff): Give an error on arithmetic on pointer to\n\tan empty aggregate.\nc/\n\t* c-typeck.c (pointer_diff): Give an error on arithmetic on pointer to\n\tan empty aggregate.\ntestsuite/\n\t* c-c++-common/pr58346-1.c: New test.\n\t* c-c++-common/pr58346-2.c: New test.\n\t* c-c++-common/pr58346-3.c: New test.\n\nFrom-SVN: r207004", "tree": {"sha": "9a9f80e007c4a37b50f0d20171385546900224a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9a9f80e007c4a37b50f0d20171385546900224a6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f04dda3093541436d9ebd3194761ff8199c5ac79", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f04dda3093541436d9ebd3194761ff8199c5ac79", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f04dda3093541436d9ebd3194761ff8199c5ac79", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f04dda3093541436d9ebd3194761ff8199c5ac79/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "789eadcd54ffe62037461a4a22c2737ad9cbd01e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/789eadcd54ffe62037461a4a22c2737ad9cbd01e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/789eadcd54ffe62037461a4a22c2737ad9cbd01e"}], "stats": {"total": 96, "additions": 96, "deletions": 0}, "files": [{"sha": "cba9f4e1484c63dde2192f9accf7e92e1b7f9b43", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f04dda3093541436d9ebd3194761ff8199c5ac79/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f04dda3093541436d9ebd3194761ff8199c5ac79/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=f04dda3093541436d9ebd3194761ff8199c5ac79", "patch": "@@ -1,3 +1,9 @@\n+2014-01-23  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c/58346\n+\t* c-common.c (pointer_to_zero_sized_aggr_p): New function.\n+\t* c-common.h: Declare it.\n+\n 2014-01-20  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* c-ada-spec.h (dump_ada_specs): Revert prototype change."}, {"sha": "09128016ba46b85cc0b1443115c10a9bf0619451", "filename": "gcc/c-family/c-common.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f04dda3093541436d9ebd3194761ff8199c5ac79/gcc%2Fc-family%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f04dda3093541436d9ebd3194761ff8199c5ac79/gcc%2Fc-family%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.c?ref=f04dda3093541436d9ebd3194761ff8199c5ac79", "patch": "@@ -11823,4 +11823,15 @@ cxx_fundamental_alignment_p  (unsigned align)\n \t\t\t TYPE_ALIGN (long_double_type_node)));\n }\n \n+/* Return true if T is a pointer to a zero-sized aggregate.  */\n+\n+bool\n+pointer_to_zero_sized_aggr_p (tree t)\n+{\n+  if (!POINTER_TYPE_P (t))\n+    return false;\n+  t = TREE_TYPE (t);\n+  return (TYPE_SIZE (t) && integer_zerop (TYPE_SIZE (t)));\n+}\n+\n #include \"gt-c-family-c-common.h\""}, {"sha": "dab0b8cd82147c52bed08fec48befa750792176b", "filename": "gcc/c-family/c-common.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f04dda3093541436d9ebd3194761ff8199c5ac79/gcc%2Fc-family%2Fc-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f04dda3093541436d9ebd3194761ff8199c5ac79/gcc%2Fc-family%2Fc-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.h?ref=f04dda3093541436d9ebd3194761ff8199c5ac79", "patch": "@@ -789,6 +789,7 @@ extern bool keyword_is_storage_class_specifier (enum rid);\n extern bool keyword_is_type_qualifier (enum rid);\n extern bool keyword_is_decl_specifier (enum rid);\n extern bool cxx_fundamental_alignment_p (unsigned);\n+extern bool pointer_to_zero_sized_aggr_p (tree);\n \n #define c_sizeof(LOC, T)  c_sizeof_or_alignof_type (LOC, T, true, false, 1)\n #define c_alignof(LOC, T) c_sizeof_or_alignof_type (LOC, T, false, false, 1)"}, {"sha": "4088912db61662cb9faf1f20fab4067b971dcb27", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f04dda3093541436d9ebd3194761ff8199c5ac79/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f04dda3093541436d9ebd3194761ff8199c5ac79/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=f04dda3093541436d9ebd3194761ff8199c5ac79", "patch": "@@ -1,3 +1,9 @@\n+2014-01-23  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c/58346\n+\t* c-typeck.c (pointer_diff): Give an error on arithmetic on pointer to\n+\tan empty aggregate.\n+\n 2014-01-23  Marek Polacek  <polacek@redhat.com>\n \n \tPR c/59871"}, {"sha": "77f3bddc469816cae6bb34db9c9be4adce315284", "filename": "gcc/c/c-typeck.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f04dda3093541436d9ebd3194761ff8199c5ac79/gcc%2Fc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f04dda3093541436d9ebd3194761ff8199c5ac79/gcc%2Fc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-typeck.c?ref=f04dda3093541436d9ebd3194761ff8199c5ac79", "patch": "@@ -3536,6 +3536,9 @@ pointer_diff (location_t loc, tree op0, tree op1)\n   /* This generates an error if op0 is pointer to incomplete type.  */\n   op1 = c_size_in_bytes (target_type);\n \n+  if (pointer_to_zero_sized_aggr_p (TREE_TYPE (orig_op1)))\n+    error_at (loc, \"arithmetic on pointer to an empty aggregate\");\n+\n   /* Divide by the size, in easiest possible way.  */\n   result = fold_build2_loc (loc, EXACT_DIV_EXPR, inttype,\n \t\t\t    op0, convert (inttype, op1));"}, {"sha": "aee3fcf8a988128ebb681f53ed9f5a527d14b983", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f04dda3093541436d9ebd3194761ff8199c5ac79/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f04dda3093541436d9ebd3194761ff8199c5ac79/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=f04dda3093541436d9ebd3194761ff8199c5ac79", "patch": "@@ -1,3 +1,9 @@\n+2014-01-23  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c/58346\n+\t* typeck.c (pointer_diff): Give an error on arithmetic on pointer to\n+\tan empty aggregate.\n+\n 2014-01-23  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/55189"}, {"sha": "9cd6a95a7f11cdc7f1201075e62f3f579334d20b", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f04dda3093541436d9ebd3194761ff8199c5ac79/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f04dda3093541436d9ebd3194761ff8199c5ac79/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=f04dda3093541436d9ebd3194761ff8199c5ac79", "patch": "@@ -5043,6 +5043,14 @@ pointer_diff (tree op0, tree op1, tree ptrtype, tsubst_flags_t complain)\n \treturn error_mark_node;\n     }\n \n+  if (pointer_to_zero_sized_aggr_p (TREE_TYPE (op1)))\n+    {\n+      if (complain & tf_error)\n+\terror (\"arithmetic on pointer to an empty aggregate\");\n+      else\n+\treturn error_mark_node;\n+    }\n+\n   op1 = (TYPE_PTROB_P (ptrtype)\n \t ? size_in_bytes (target_type)\n \t : integer_one_node);"}, {"sha": "f3d8d3a7caaeceb247a84a1365b3e1676d142136", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f04dda3093541436d9ebd3194761ff8199c5ac79/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f04dda3093541436d9ebd3194761ff8199c5ac79/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f04dda3093541436d9ebd3194761ff8199c5ac79", "patch": "@@ -1,3 +1,10 @@\n+2014-01-23  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c/58346\n+\t* c-c++-common/pr58346-1.c: New test.\n+\t* c-c++-common/pr58346-2.c: New test.\n+\t* c-c++-common/pr58346-3.c: New test.\n+\n 2014-01-23  Marek Polacek  <polacek@redhat.com>\n \n \tPR c/59871"}, {"sha": "371fcf48454d151f1bdbdd7b31d6a0b0a8d5a707", "filename": "gcc/testsuite/c-c++-common/pr58346-1.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f04dda3093541436d9ebd3194761ff8199c5ac79/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr58346-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f04dda3093541436d9ebd3194761ff8199c5ac79/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr58346-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr58346-1.c?ref=f04dda3093541436d9ebd3194761ff8199c5ac79", "patch": "@@ -0,0 +1,24 @@\n+/* PR c/58346 */\n+/* { dg-do compile } */\n+\n+struct U {\n+#ifdef __cplusplus\n+  char a[0];\n+#endif\n+};\n+static struct U b[6];\n+static struct U *u1, *u2;\n+\n+int\n+foo (struct U *p, struct U *q)\n+{\n+  return q - p; /* { dg-error \"arithmetic on pointer to an empty aggregate\" } */\n+}\n+\n+void\n+bar (void)\n+{\n+  __PTRDIFF_TYPE__ d = u1 - u2; /* { dg-error \"arithmetic on pointer to an empty aggregate\" } */\n+  __asm volatile (\"\" : \"+g\" (d));\n+  foo (&b[0], &b[4]);\n+}"}, {"sha": "195060e420c358ccabc3a513d3a43d71c8b36562", "filename": "gcc/testsuite/c-c++-common/pr58346-2.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f04dda3093541436d9ebd3194761ff8199c5ac79/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr58346-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f04dda3093541436d9ebd3194761ff8199c5ac79/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr58346-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr58346-2.c?ref=f04dda3093541436d9ebd3194761ff8199c5ac79", "patch": "@@ -0,0 +1,8 @@\n+/* PR c/58346 */\n+/* { dg-do compile } */\n+\n+__PTRDIFF_TYPE__\n+foo (int p[3][0], int q[3][0])\n+{\n+  return p - q; /* { dg-error \"arithmetic on pointer to an empty aggregate\" } */\n+}"}, {"sha": "41627ed953c790acbdb89c80cfa4b9f628f18d8c", "filename": "gcc/testsuite/c-c++-common/pr58346-3.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f04dda3093541436d9ebd3194761ff8199c5ac79/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr58346-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f04dda3093541436d9ebd3194761ff8199c5ac79/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr58346-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr58346-3.c?ref=f04dda3093541436d9ebd3194761ff8199c5ac79", "patch": "@@ -0,0 +1,16 @@\n+/* PR c/58346 */\n+/* { dg-do compile } */\n+\n+void\n+foo (void)\n+{\n+  __PTRDIFF_TYPE__ d;\n+  const int i = 0;\n+  int a1[2][0], a2[2][0];\n+  int b1[3][i], b2[4][i];\n+  d = a1 - a2; /* { dg-error \"arithmetic on pointer to an empty aggregate\" } */\n+  __asm volatile (\"\" : \"+g\" (d));\n+  /* No error here for C.  */\n+  d = b1 - b2; /* { dg-error \"arithmetic on pointer to an empty aggregate\" \"\" { target c++ } } */\n+  __asm volatile (\"\" : \"+g\" (d));\n+}"}]}