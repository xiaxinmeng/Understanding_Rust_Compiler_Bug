{"sha": "594f8779730a86ee3e34f05c012e23592649bac5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTk0Zjg3Nzk3MzBhODZlZTNlMzRmMDVjMDEyZTIzNTkyNjQ5YmFjNQ==", "commit": {"author": {"name": "Roman Zippel", "email": "zippel@gcc.gnu.org", "date": "2007-03-04T00:56:51Z"}, "committer": {"name": "Roman Zippel", "email": "zippel@gcc.gnu.org", "date": "2007-03-04T00:56:51Z"}, "message": "emit-rtl.c (find_auto_inc): New.\n\n\t* emit-rtl.c (find_auto_inc): New.\n\t(try_split): recreate REG_INC notes,\n\tUse regular for loops rather than whiles.\n\n\t* gcc.target/m68k/m68k.exp: New.\n\t* gcc.target/m68k/crash1.c: New.\n\nFrom-SVN: r122520", "tree": {"sha": "c1920d93917c8ca94f5adad209809b4f17c10f9a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c1920d93917c8ca94f5adad209809b4f17c10f9a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/594f8779730a86ee3e34f05c012e23592649bac5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/594f8779730a86ee3e34f05c012e23592649bac5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/594f8779730a86ee3e34f05c012e23592649bac5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/594f8779730a86ee3e34f05c012e23592649bac5/comments", "author": null, "committer": null, "parents": [{"sha": "adc485b157a63d64ed71a7c19d3e3d6462c0a832", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/adc485b157a63d64ed71a7c19d3e3d6462c0a832", "html_url": "https://github.com/Rust-GCC/gccrs/commit/adc485b157a63d64ed71a7c19d3e3d6462c0a832"}], "stats": {"total": 68, "additions": 59, "deletions": 9}, "files": [{"sha": "2c9edd2c77c11fcdb923656203b79d45006957bd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/594f8779730a86ee3e34f05c012e23592649bac5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/594f8779730a86ee3e34f05c012e23592649bac5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=594f8779730a86ee3e34f05c012e23592649bac5", "patch": "@@ -1,3 +1,10 @@\n+2007-03-04  Roman Zippel <zippel@linux-m68k.org>\n+            Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* emit-rtl.c (find_auto_inc): New.\n+\t(try_split): recreate REG_INC notes,\n+\tUse regular for loops rather than whiles.\n+\n 2007-03-03  Andreas Schwab  <schwab@suse.de>\n \n \t* configure.ac (HAVE_AS_REL16): Move test back to correct place."}, {"sha": "ebe0a52e7d9774a335eb5b62345002f292580669", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 47, "deletions": 9, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/594f8779730a86ee3e34f05c012e23592649bac5/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/594f8779730a86ee3e34f05c012e23592649bac5/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=594f8779730a86ee3e34f05c012e23592649bac5", "patch": "@@ -3077,6 +3077,37 @@ prev_cc0_setter (rtx insn)\n }\n #endif\n \n+#ifdef AUTO_INC_DEC\n+/* Find a RTX_AUTOINC class rtx which matches DATA.  */\n+\n+static int\n+find_auto_inc (rtx *xp, void *data)\n+{\n+  rtx x = *xp;\n+  rtx reg = data;\n+\n+  if (GET_RTX_CLASS (GET_CODE (x)) != RTX_AUTOINC)\n+    return 0;\n+\n+  switch (GET_CODE (x))\n+    {\n+      case PRE_DEC:\n+      case PRE_INC:\n+      case POST_DEC:\n+      case POST_INC:\n+      case PRE_MODIFY:\n+      case POST_MODIFY:\n+\tif (rtx_equal_p (reg, XEXP (x, 0)))\n+\t  return 1;\n+\tbreak;\n+\n+      default:\n+\tgcc_unreachable ();\n+    }\n+  return -1;\n+}\n+#endif\n+\n /* Increment the label uses for all labels present in rtx.  */\n \n static void\n@@ -3201,8 +3232,7 @@ try_split (rtx pat, rtx trial, int last)\n       switch (REG_NOTE_KIND (note))\n \t{\n \tcase REG_EH_REGION:\n-\t  insn = insn_last;\n-\t  while (insn != NULL_RTX)\n+\t  for (insn = insn_last; insn != NULL_RTX; insn = PREV_INSN (insn))\n \t    {\n \t      if (CALL_P (insn)\n \t\t  || (flag_non_call_exceptions && INSN_P (insn)\n@@ -3211,37 +3241,45 @@ try_split (rtx pat, rtx trial, int last)\n \t\t  = gen_rtx_EXPR_LIST (REG_EH_REGION,\n \t\t\t\t       XEXP (note, 0),\n \t\t\t\t       REG_NOTES (insn));\n-\t      insn = PREV_INSN (insn);\n \t    }\n \t  break;\n \n \tcase REG_NORETURN:\n \tcase REG_SETJMP:\n-\t  insn = insn_last;\n-\t  while (insn != NULL_RTX)\n+\t  for (insn = insn_last; insn != NULL_RTX; insn = PREV_INSN (insn))\n \t    {\n \t      if (CALL_P (insn))\n \t\tREG_NOTES (insn)\n \t\t  = gen_rtx_EXPR_LIST (REG_NOTE_KIND (note),\n \t\t\t\t       XEXP (note, 0),\n \t\t\t\t       REG_NOTES (insn));\n-\t      insn = PREV_INSN (insn);\n \t    }\n \t  break;\n \n \tcase REG_NON_LOCAL_GOTO:\n-\t  insn = insn_last;\n-\t  while (insn != NULL_RTX)\n+\t  for (insn = insn_last; insn != NULL_RTX; insn = PREV_INSN (insn))\n \t    {\n \t      if (JUMP_P (insn))\n \t\tREG_NOTES (insn)\n \t\t  = gen_rtx_EXPR_LIST (REG_NOTE_KIND (note),\n \t\t\t\t       XEXP (note, 0),\n \t\t\t\t       REG_NOTES (insn));\n-\t      insn = PREV_INSN (insn);\n \t    }\n \t  break;\n \n+#ifdef AUTO_INC_DEC\n+\tcase REG_INC:\n+\t  for (insn = insn_last; insn != NULL_RTX; insn = PREV_INSN (insn))\n+\t    {\n+\t      rtx reg = XEXP (note, 0);\n+\t      if (!FIND_REG_INC_NOTE (insn, reg)\n+\t\t  && for_each_rtx (&PATTERN (insn), find_auto_inc, reg) > 0)\n+\t\tREG_NOTES (insn) = gen_rtx_EXPR_LIST (REG_INC, reg,\n+\t\t\t\t\t\t      REG_NOTES (insn));\n+\t    }\n+\t  break;\n+#endif\n+\n \tdefault:\n \t  break;\n \t}"}, {"sha": "097016dec5b9454edecb4a9ec367c6e02eba9f99", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/594f8779730a86ee3e34f05c012e23592649bac5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/594f8779730a86ee3e34f05c012e23592649bac5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=594f8779730a86ee3e34f05c012e23592649bac5", "patch": "@@ -1,3 +1,8 @@\n+2007-03-04  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* gcc.target/m68k/m68k.exp: New.\n+\t* gcc.target/m68k/crash1.c: New.\n+\n 2007-03-03  Tobias Burnus  <burnus@net-b.de>\n \n \t* gfortran.dg/c_by_val.c: Use int64_t instead of long"}]}