{"sha": "ef23e6a2d730a0f57afa958768dba05d0ee36d10", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWYyM2U2YTJkNzMwYTBmNTdhZmE5NTg3NjhkYmEwNWQwZWUzNmQxMA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2013-04-17T12:01:46Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2013-04-17T12:01:46Z"}, "message": "re PR rtl-optimization/56921 (ICE in rtx_cost called by doloop_optimize_loops for PPC)\n\n2013-04-17  Richard Biener  <rguenther@suse.de>\n\n\tPR rtl-optimization/56921\n\t* cfgloop.h (struct loop): Add simple_loop_desc member.\n\t(struct niter_desc): Mark with GTY(()).\n\t(simple_loop_desc): Do not use aux field but simple_loop_desc.\n\t* loop-iv.c (get_simple_loop_desc): Likewise.\n\t(free_simple_loop_desc): Likewise.\n\n\tRevert\n\t2013-04-16  Richard Biener  <rguenther@suse.de>\n\n\tPR rtl-optimization/56921\n\t* loop-init.c (pass_rtl_move_loop_invariants): Add\n\tTODO_do_not_ggc_collect to todo_flags_finish.\n\t(pass_rtl_unswitch): Same.\n\t(pass_rtl_unroll_and_peel_loops): Same.\n\t(pass_rtl_doloop): Same.\n\nFrom-SVN: r198025", "tree": {"sha": "6f5974270d53a9f59def50d3f7b035dafa24e645", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6f5974270d53a9f59def50d3f7b035dafa24e645"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ef23e6a2d730a0f57afa958768dba05d0ee36d10", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef23e6a2d730a0f57afa958768dba05d0ee36d10", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef23e6a2d730a0f57afa958768dba05d0ee36d10", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef23e6a2d730a0f57afa958768dba05d0ee36d10/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fc6f94f567e2a982dcba31dab027a49c196febf3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc6f94f567e2a982dcba31dab027a49c196febf3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc6f94f567e2a982dcba31dab027a49c196febf3"}], "stats": {"total": 46, "additions": 32, "deletions": 14}, "files": [{"sha": "ef6f7fc151513f6e6fb7af006c7b8f973a11ba6b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef23e6a2d730a0f57afa958768dba05d0ee36d10/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef23e6a2d730a0f57afa958768dba05d0ee36d10/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ef23e6a2d730a0f57afa958768dba05d0ee36d10", "patch": "@@ -1,3 +1,22 @@\n+2013-04-17  Richard Biener  <rguenther@suse.de>\n+\n+\tPR rtl-optimization/56921\n+\t* cfgloop.h (struct loop): Add simple_loop_desc member.\n+\t(struct niter_desc): Mark with GTY(()).\n+\t(simple_loop_desc): Do not use aux field but simple_loop_desc.\n+\t* loop-iv.c (get_simple_loop_desc): Likewise.\n+\t(free_simple_loop_desc): Likewise.\n+\n+\tRevert\n+\t2013-04-16  Richard Biener  <rguenther@suse.de>\n+\n+\tPR rtl-optimization/56921\n+\t* loop-init.c (pass_rtl_move_loop_invariants): Add\n+\tTODO_do_not_ggc_collect to todo_flags_finish.\n+\t(pass_rtl_unswitch): Same.\n+\t(pass_rtl_unroll_and_peel_loops): Same.\n+\t(pass_rtl_doloop): Same.\n+\n 2013-04-17  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* tree-ssa-alias.c (nonoverlapping_component_refs_of_decl_p): New."}, {"sha": "29ac6c44937f514ea331a430bc3541f751da2c3a", "filename": "gcc/cfgloop.h", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef23e6a2d730a0f57afa958768dba05d0ee36d10/gcc%2Fcfgloop.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef23e6a2d730a0f57afa958768dba05d0ee36d10/gcc%2Fcfgloop.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgloop.h?ref=ef23e6a2d730a0f57afa958768dba05d0ee36d10", "patch": "@@ -172,6 +172,9 @@ struct GTY ((chain_next (\"%h.next\"))) loop {\n \n   /* Head of the cyclic list of the exits of the loop.  */\n   struct loop_exit *exits;\n+\n+  /* Number of iteration analysis data for RTL.  */\n+  struct niter_desc *simple_loop_desc;\n };\n \n /* Flags for state of loop structure.  */\n@@ -372,7 +375,7 @@ struct rtx_iv\n /* The description of an exit from the loop and of the number of iterations\n    till we take the exit.  */\n \n-struct niter_desc\n+struct GTY(()) niter_desc\n {\n   /* The edge out of the loop.  */\n   edge out_edge;\n@@ -425,7 +428,7 @@ extern void free_simple_loop_desc (struct loop *loop);\n static inline struct niter_desc *\n simple_loop_desc (struct loop *loop)\n {\n-  return (struct niter_desc *) loop->aux;\n+  return loop->simple_loop_desc;\n }\n \n /* Accessors for the loop structures.  */"}, {"sha": "92d621e273c7564ee85c2d2e169050900b981b17", "filename": "gcc/loop-init.c", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef23e6a2d730a0f57afa958768dba05d0ee36d10/gcc%2Floop-init.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef23e6a2d730a0f57afa958768dba05d0ee36d10/gcc%2Floop-init.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop-init.c?ref=ef23e6a2d730a0f57afa958768dba05d0ee36d10", "patch": "@@ -434,8 +434,7 @@ struct rtl_opt_pass pass_rtl_move_loop_invariants =\n   0,                                    /* properties_destroyed */\n   0,                                    /* todo_flags_start */\n   TODO_df_verify |\n-  TODO_df_finish | TODO_verify_rtl_sharing\n-  | TODO_do_not_ggc_collect\t\t/* todo_flags_finish */\n+  TODO_df_finish | TODO_verify_rtl_sharing  /* todo_flags_finish */\n  }\n };\n \n@@ -471,8 +470,7 @@ struct rtl_opt_pass pass_rtl_unswitch =\n   0,                                    /* properties_provided */\n   0,                                    /* properties_destroyed */\n   0,                                    /* todo_flags_start */\n-  TODO_verify_rtl_sharing\n-  | TODO_do_not_ggc_collect\t\t/* todo_flags_finish */\n+  TODO_verify_rtl_sharing,              /* todo_flags_finish */\n  }\n };\n \n@@ -521,8 +519,7 @@ struct rtl_opt_pass pass_rtl_unroll_and_peel_loops =\n   0,                                    /* properties_provided */\n   0,                                    /* properties_destroyed */\n   0,                                    /* todo_flags_start */\n-  TODO_verify_rtl_sharing\n-  | TODO_do_not_ggc_collect\t\t/* todo_flags_finish */\n+  TODO_verify_rtl_sharing,              /* todo_flags_finish */\n  }\n };\n \n@@ -564,7 +561,6 @@ struct rtl_opt_pass pass_rtl_doloop =\n   0,                                    /* properties_provided */\n   0,                                    /* properties_destroyed */\n   0,                                    /* todo_flags_start */\n-  TODO_verify_rtl_sharing\n-  | TODO_do_not_ggc_collect\t\t/* todo_flags_finish */\n+  TODO_verify_rtl_sharing               /* todo_flags_finish */\n  }\n };"}, {"sha": "5695e29825658504237f01467692efed01c8c37b", "filename": "gcc/loop-iv.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef23e6a2d730a0f57afa958768dba05d0ee36d10/gcc%2Floop-iv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef23e6a2d730a0f57afa958768dba05d0ee36d10/gcc%2Floop-iv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop-iv.c?ref=ef23e6a2d730a0f57afa958768dba05d0ee36d10", "patch": "@@ -3016,10 +3016,10 @@ get_simple_loop_desc (struct loop *loop)\n \n   /* At least desc->infinite is not always initialized by\n      find_simple_loop_exit.  */\n-  desc = XCNEW (struct niter_desc);\n+  desc = ggc_alloc_cleared_niter_desc ();\n   iv_analysis_loop_init (loop);\n   find_simple_exit (loop, desc);\n-  loop->aux = desc;\n+  loop->simple_loop_desc = desc;\n \n   if (desc->simple_p && (desc->assumptions || desc->infinite))\n     {\n@@ -3069,6 +3069,6 @@ free_simple_loop_desc (struct loop *loop)\n   if (!desc)\n     return;\n \n-  free (desc);\n-  loop->aux = NULL;\n+  ggc_free (desc);\n+  loop->simple_loop_desc = NULL;\n }"}]}