{"sha": "df7f2736509cfe5e1dd7d9f263355c5043347a9c", "node_id": "C_kwDOANBUbNoAKGRmN2YyNzM2NTA5Y2ZlNWUxZGQ3ZDlmMjYzMzU1YzUwNDMzNDdhOWM", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-09-29T10:30:05Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-09-29T11:47:37Z"}, "message": "libstdc++: Guard use of new built-in with __has_builtin\n\nI forgot that non-GCC compilers don't have this built-in yet.\n\nFor Clang we could do something like the check below (as described in\nP2255), but for now I'm just fixing the regression.\n\n #if __has_builtin((__reference_binds_to_temporary)\n  bool _Dangle = __reference_binds_to_temporary(_Tp, _Res_t)\n                 && __and_<is_reference<_Tp>,\n                           __not_<is_reference<_Res_t>>,\n                           is_convertible<__remove_cvref_t<_Res_t>*,\n                                          __remove_cvref_t<_Tp>*>>::value\n #endif\n\nlibstdc++-v3/ChangeLog:\n\n\t* include/std/type_traits (__is_invocable_impl): Check\n\t__has_builtin(__reference_converts_from_temporary) before using\n\tbuilt-in.", "tree": {"sha": "1b652a884d94d32fda304908fdb83f8598d71398", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1b652a884d94d32fda304908fdb83f8598d71398"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/df7f2736509cfe5e1dd7d9f263355c5043347a9c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df7f2736509cfe5e1dd7d9f263355c5043347a9c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df7f2736509cfe5e1dd7d9f263355c5043347a9c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df7f2736509cfe5e1dd7d9f263355c5043347a9c/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a1f7f9541c2b20eb44750b9c15cd831c62d67f21", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1f7f9541c2b20eb44750b9c15cd831c62d67f21", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1f7f9541c2b20eb44750b9c15cd831c62d67f21"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "a015fd95a71986bccabc2f18120bf909647ce466", "filename": "libstdc++-v3/include/std/type_traits", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df7f2736509cfe5e1dd7d9f263355c5043347a9c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftype_traits", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df7f2736509cfe5e1dd7d9f263355c5043347a9c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftype_traits", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftype_traits?ref=df7f2736509cfe5e1dd7d9f263355c5043347a9c", "patch": "@@ -2901,7 +2901,12 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       template<typename _Tp,\n \t       bool _Nothrow = noexcept(_S_conv<_Tp>(_S_get())),\n \t       typename = decltype(_S_conv<_Tp>(_S_get())),\n-\t       bool _Dangle = __reference_converts_from_temporary(_Tp, _Res_t)>\n+#if __has_builtin(__reference_converts_from_temporary)\n+\t       bool _Dangle = __reference_converts_from_temporary(_Tp, _Res_t)\n+#else\n+\t       bool _Dangle = false\n+#endif\n+\t      >\n \tstatic __bool_constant<_Nothrow && !_Dangle>\n \t_S_test(int);\n "}]}