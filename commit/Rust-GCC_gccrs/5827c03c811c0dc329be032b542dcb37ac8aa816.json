{"sha": "5827c03c811c0dc329be032b542dcb37ac8aa816", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTgyN2MwM2M4MTFjMGRjMzI5YmUwMzJiNTQyZGNiMzdhYzhhYTgxNg==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2014-10-02T13:40:53Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2014-10-02T13:40:53Z"}, "message": "Add file I forgot to add before.\n\nFrom-SVN: r215802", "tree": {"sha": "a55e335a2fb219f234b4f4bbf3a5968b5fe62505", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a55e335a2fb219f234b4f4bbf3a5968b5fe62505"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5827c03c811c0dc329be032b542dcb37ac8aa816", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5827c03c811c0dc329be032b542dcb37ac8aa816", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5827c03c811c0dc329be032b542dcb37ac8aa816", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5827c03c811c0dc329be032b542dcb37ac8aa816/comments", "author": null, "committer": null, "parents": [{"sha": "f65eb9e641751e70ee4f0600218866794023ac65", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f65eb9e641751e70ee4f0600218866794023ac65", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f65eb9e641751e70ee4f0600218866794023ac65"}], "stats": {"total": 22, "additions": 22, "deletions": 0}, "files": [{"sha": "bf0d88cc756d948fe1a28836cc954eb4c4cd6dd0", "filename": "gcc/testsuite/gcc.dg/combine-clobber.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5827c03c811c0dc329be032b542dcb37ac8aa816/gcc%2Ftestsuite%2Fgcc.dg%2Fcombine-clobber.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5827c03c811c0dc329be032b542dcb37ac8aa816/gcc%2Ftestsuite%2Fgcc.dg%2Fcombine-clobber.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcombine-clobber.c?ref=5827c03c811c0dc329be032b542dcb37ac8aa816", "patch": "@@ -0,0 +1,22 @@\n+/* { dg-do compile { target i?86-*-* x86_64-*-* } } */\n+/* { dg-options \"-O2 -fdump-rtl-combine-all\" } */\n+\n+/* This testcase checks if combine tries to combine sequences where the last\n+   insn has a clobber of a reg, and a previous insn sets that reg.\n+\n+   In this case, we have three insns\n+\n+   (set flags (compare a b))\n+   (set tmp (eq flags 0))\n+   (parallel [(set dst (neg tmp))\n+\t      (clobber flags)])\n+\n+   Previously, combine would not try the three-insn combination because of\n+   the set and clobber of flags.  Now it does.  Test that.  */\n+\n+\n+int f(int a, int b) { return -(a == b); }\n+\n+/* This regexp works for reg parameters as well as mem parameters.  */\n+/* { dg-final { scan-rtl-dump {neg:SI[^:]*eq:SI[^:]*:SI} \"combine\" } } */\n+/* { dg-final { cleanup-rtl-dump \"combine\" } } */"}]}