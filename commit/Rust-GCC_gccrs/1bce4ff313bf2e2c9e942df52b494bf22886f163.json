{"sha": "1bce4ff313bf2e2c9e942df52b494bf22886f163", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWJjZTRmZjMxM2JmMmUyYzllOTQyZGY1MmI0OTRiZjIyODg2ZjE2Mw==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2011-03-17T14:59:00Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2011-03-17T14:59:00Z"}, "message": "re PR tree-optimization/48134 (ICE: in refs_may_alias_p_1, at tree-ssa-alias.c:1085 with custom flags)\n\n2011-03-17  Richard Guenther  <rguenther@suse.de>\n\n\tPR middle-end/48134\n\t* tree-ssa.c (insert_debug_temp_for_var_def): If we propagated\n\ta value make sure to fold the statement.\n\n\t* gcc.dg/pr48134.c: New testcase.\n\nFrom-SVN: r171098", "tree": {"sha": "19bd7dee07e0dcd9a4bc23e10fac377ef22b686a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/19bd7dee07e0dcd9a4bc23e10fac377ef22b686a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1bce4ff313bf2e2c9e942df52b494bf22886f163", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1bce4ff313bf2e2c9e942df52b494bf22886f163", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1bce4ff313bf2e2c9e942df52b494bf22886f163", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1bce4ff313bf2e2c9e942df52b494bf22886f163/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7c71147df33fe3ee5e8352fba3d6cfbc15810604", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c71147df33fe3ee5e8352fba3d6cfbc15810604", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c71147df33fe3ee5e8352fba3d6cfbc15810604"}], "stats": {"total": 62, "additions": 55, "deletions": 7}, "files": [{"sha": "298815dc35319902ccb762264d43ca2e2942add3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bce4ff313bf2e2c9e942df52b494bf22886f163/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bce4ff313bf2e2c9e942df52b494bf22886f163/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1bce4ff313bf2e2c9e942df52b494bf22886f163", "patch": "@@ -1,3 +1,9 @@\n+2011-03-17  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/48134\n+\t* tree-ssa.c (insert_debug_temp_for_var_def): If we propagated\n+\ta value make sure to fold the statement.\n+\n 2011-03-17  Chung-Lin Tang  <cltang@codesourcery.com>\n \n \tPR target/43872"}, {"sha": "20ba8d6a6a129c81b296fb67b59a46428c7350a1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bce4ff313bf2e2c9e942df52b494bf22886f163/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bce4ff313bf2e2c9e942df52b494bf22886f163/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1bce4ff313bf2e2c9e942df52b494bf22886f163", "patch": "@@ -1,3 +1,8 @@\n+2011-03-17  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/48134\n+\t* gcc.dg/pr48134.c: New testcase.\n+\n 2011-03-17  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/48165"}, {"sha": "8dc5a6d0d412618d2a2ca0e5a4a9b43706fbc99f", "filename": "gcc/testsuite/gcc.dg/pr48134.c", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bce4ff313bf2e2c9e942df52b494bf22886f163/gcc%2Ftestsuite%2Fgcc.dg%2Fpr48134.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bce4ff313bf2e2c9e942df52b494bf22886f163/gcc%2Ftestsuite%2Fgcc.dg%2Fpr48134.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr48134.c?ref=1bce4ff313bf2e2c9e942df52b494bf22886f163", "patch": "@@ -0,0 +1,31 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fstack-check=specific -fno-tree-dse -fno-tree-fre -fno-tree-loop-optimize -g\" } */\n+\n+struct S\n+{\n+  int w, z;\n+};\n+struct T\n+{\n+  struct S s;\n+};\n+\n+int i;\n+\n+static inline struct S\n+bar (struct S x)\n+{\n+  i++;\n+  return x;\n+}\n+\n+int\n+foo (struct T t, struct S s)\n+{\n+  struct S *c = &s;\n+  if (i)\n+    c = &t.s;\n+  t.s.w = 3;\n+  s = bar (*c);\n+  return t.s.w;\n+}"}, {"sha": "d542e0a253a1c2ed5e21ab760bb4d53f0d100113", "filename": "gcc/tree-ssa.c", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bce4ff313bf2e2c9e942df52b494bf22886f163/gcc%2Ftree-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bce4ff313bf2e2c9e942df52b494bf22886f163/gcc%2Ftree-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa.c?ref=1bce4ff313bf2e2c9e942df52b494bf22886f163", "patch": "@@ -455,13 +455,19 @@ insert_debug_temp_for_var_def (gimple_stmt_iterator *gsi, tree var)\n \tcontinue;\n \n       if (value)\n-\tFOR_EACH_IMM_USE_ON_STMT (use_p, imm_iter)\n-\t  /* unshare_expr is not needed here.  vexpr is either a\n-\t     SINGLE_RHS, that can be safely shared, some other RHS\n-\t     that was unshared when we found it had a single debug\n-\t     use, or a DEBUG_EXPR_DECL, that can be safely\n-\t     shared.  */\n-\t  SET_USE (use_p, value);\n+\t{\n+\t  FOR_EACH_IMM_USE_ON_STMT (use_p, imm_iter)\n+\t    /* unshare_expr is not needed here.  vexpr is either a\n+\t       SINGLE_RHS, that can be safely shared, some other RHS\n+\t       that was unshared when we found it had a single debug\n+\t       use, or a DEBUG_EXPR_DECL, that can be safely\n+\t       shared.  */\n+\t    SET_USE (use_p, value);\n+\t  /* If we didn't replace uses with a debug decl fold the\n+\t     resulting expression.  Otherwise we end up with invalid IL.  */\n+\t  if (TREE_CODE (value) != DEBUG_EXPR_DECL)\n+\t    fold_stmt_inplace (stmt);\n+\t}\n       else\n \tgimple_debug_bind_reset_value (stmt);\n "}]}