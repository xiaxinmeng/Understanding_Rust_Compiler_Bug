{"sha": "08432663f0b0ac2478e3217ed16a9b44a7129b31", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDg0MzI2NjNmMGIwYWMyNDc4ZTMyMTdlZDE2YTliNDRhNzEyOWIzMQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-10-27T18:15:53Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-10-27T18:15:53Z"}, "message": "(bsd/sys/wait.h): Undo previous change.\n\nFrom-SVN: r5919", "tree": {"sha": "18fbe02b1efff971749210b4c9f1e95addd51928", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/18fbe02b1efff971749210b4c9f1e95addd51928"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/08432663f0b0ac2478e3217ed16a9b44a7129b31", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08432663f0b0ac2478e3217ed16a9b44a7129b31", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08432663f0b0ac2478e3217ed16a9b44a7129b31", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08432663f0b0ac2478e3217ed16a9b44a7129b31/comments", "author": null, "committer": null, "parents": [{"sha": "0736d253b5086ae55c68f7533f25c3986fe7c2fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0736d253b5086ae55c68f7533f25c3986fe7c2fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0736d253b5086ae55c68f7533f25c3986fe7c2fa"}], "stats": {"total": 25, "additions": 4, "deletions": 21}, "files": [{"sha": "4b4e78950acd86b9fda5b659fd3ee0be67c04118", "filename": "gcc/fixincludes", "status": "modified", "additions": 4, "deletions": 21, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08432663f0b0ac2478e3217ed16a9b44a7129b31/gcc%2Ffixincludes", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08432663f0b0ac2478e3217ed16a9b44a7129b31/gcc%2Ffixincludes", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixincludes?ref=08432663f0b0ac2478e3217ed16a9b44a7129b31", "patch": "@@ -1001,7 +1001,10 @@ if [ -r ${LIB}/$file ]; then\n   fi\n fi\n \n-# NeXT defines 'int wait(union wait*)', which conflicts with Posix.1.\n+# NeXT 2.0 defines 'int wait(union wait*)', which conflicts with Posix.1.\n+# Note that version 3 of the NeXT system has wait.h in a different directory,\n+# so that this code won't do anything.  But wait.h in version 3 has a\n+# conditional, so it doesn't need this fix.  So everything is okay.\n file=sys/wait.h\n if [ -r $file ] && [ ! -r ${LIB}/$file ]; then\n   cp $file ${LIB}/$file >/dev/null 2>&1 || echo \"Can't copy $file\"\n@@ -1018,26 +1021,6 @@ if [ -r ${LIB}/$file ] \\\n   fi\n fi\n \n-# Some versions of NeXTStep apparently have the file fixed above in\n-# bsd/sys/wait.h, instead.\n-file=bsd/sys/wait.h\n-if [ -r $file ] && [ ! -r ${LIB}/$file ]; then\n-  mkdir ${LIB}/bsd 2>/dev/null\n-  mkdir ${LIB}/bsd/sys 2>/dev/null\n-  cp $file ${LIB}/$file >/dev/null 2>&1 || echo \"Can't copy $file\"\n-  chmod +w ${LIB}/$file 2>/dev/null\n-fi\n-\n-if [ -r ${LIB}/$file ] \\\n-  && grep 'wait[(]union wait' ${LIB}/$file >/dev/null; then\n-  echo Fixing $file, bad wait formal\n-  sed -e 's@wait(union wait@wait(void@' ${LIB}/$file > ${LIB}/${file}.sed\n-  rm -f ${LIB}/$file; mv ${LIB}/${file}.sed ${LIB}/$file\n-  if cmp $file ${LIB}/$file >/dev/null 2>&1; then\n-    rm -f ${LIB}/$file\n-  fi\n-fi\n-\n # Don't use or define the name va_list in stdio.h.\n # This is for ANSI and also to interoperate properly with gvarargs.h.\n file=stdio.h"}]}