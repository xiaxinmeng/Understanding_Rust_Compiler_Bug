{"sha": "cc1efdff706c78c874ab8ff65264004fdc8a7081", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2MxZWZkZmY3MDZjNzhjODc0YWI4ZmY2NTI2NDAwNGZkYzhhNzA4MQ==", "commit": {"author": {"name": "Revital Eres", "email": "revital.eres@linaro.org", "date": "2011-10-30T05:12:53Z"}, "committer": {"name": "Revital Eres", "email": "revitale@gcc.gnu.org", "date": "2011-10-30T05:12:53Z"}, "message": "Fix marking of SMSed loops as BB_DISABLE_SCHEDULE\n\nFrom-SVN: r180673", "tree": {"sha": "5d238ad235f3fabe36d05f85db524965d5a9ae1c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5d238ad235f3fabe36d05f85db524965d5a9ae1c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cc1efdff706c78c874ab8ff65264004fdc8a7081", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc1efdff706c78c874ab8ff65264004fdc8a7081", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc1efdff706c78c874ab8ff65264004fdc8a7081", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc1efdff706c78c874ab8ff65264004fdc8a7081/comments", "author": null, "committer": null, "parents": [{"sha": "6908120ace0a02c62d99ad74e5f9053b3f6b8c41", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6908120ace0a02c62d99ad74e5f9053b3f6b8c41", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6908120ace0a02c62d99ad74e5f9053b3f6b8c41"}], "stats": {"total": 29, "additions": 27, "deletions": 2}, "files": [{"sha": "0eb34e5efad126e2bd5f64d5e9fe05f07282a941", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc1efdff706c78c874ab8ff65264004fdc8a7081/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc1efdff706c78c874ab8ff65264004fdc8a7081/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cc1efdff706c78c874ab8ff65264004fdc8a7081", "patch": "@@ -1,3 +1,10 @@\n+2011-10-30  Revital Eres  <revital.eres@linaro.org>\n+\n+\t* modulo-sched.c (generate_prolog_epilog): Mark prolog and epilog\n+\tas BB_DISABLE_SCHEDULE.\n+\t(mark_loop_unsched): New function.\n+\t(sms_schedule): Call it.\n+\n 2011-10-29  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n \n \tPR target/50617"}, {"sha": "0ea9a4d9a6281a416d3584e365b5955e470607a7", "filename": "gcc/modulo-sched.c", "status": "modified", "additions": 20, "deletions": 2, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc1efdff706c78c874ab8ff65264004fdc8a7081/gcc%2Fmodulo-sched.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc1efdff706c78c874ab8ff65264004fdc8a7081/gcc%2Fmodulo-sched.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmodulo-sched.c?ref=cc1efdff706c78c874ab8ff65264004fdc8a7081", "patch": "@@ -1173,6 +1173,8 @@ generate_prolog_epilog (partial_schedule_ptr ps, struct loop *loop,\n   /* Put the prolog on the entry edge.  */\n   e = loop_preheader_edge (loop);\n   split_edge_and_insert (e, get_insns ());\n+  if (!flag_resched_modulo_sched)\n+    e->dest->flags |= BB_DISABLE_SCHEDULE;\n \n   end_sequence ();\n \n@@ -1186,9 +1188,24 @@ generate_prolog_epilog (partial_schedule_ptr ps, struct loop *loop,\n   gcc_assert (single_exit (loop));\n   e = single_exit (loop);\n   split_edge_and_insert (e, get_insns ());\n+  if (!flag_resched_modulo_sched)\n+    e->dest->flags |= BB_DISABLE_SCHEDULE;\n+\n   end_sequence ();\n }\n \n+/* Mark LOOP as software pipelined so the later\n+   scheduling passes don't touch it.  */\n+static void\n+mark_loop_unsched (struct loop *loop)\n+{\n+  unsigned i;\n+  basic_block *bbs = get_loop_body (loop);\n+\n+  for (i = 0; i < loop->num_nodes; i++)\n+    bbs[i]->flags |= BB_DISABLE_SCHEDULE;\n+}\n+\n /* Return true if all the BBs of the loop are empty except the\n    loop header.  */\n static bool\n@@ -1714,9 +1731,10 @@ sms_schedule (void)\n \t  permute_partial_schedule (ps, g->closing_branch->first_note);\n \n           /* Mark this loop as software pipelined so the later\n-\t     scheduling passes doesn't touch it.  */\n+\t     scheduling passes don't touch it.  */\n \t  if (! flag_resched_modulo_sched)\n-\t    g->bb->flags |= BB_DISABLE_SCHEDULE;\n+\t    mark_loop_unsched (loop);\n+\t  \n \t  /* The life-info is not valid any more.  */\n \t  df_set_bb_dirty (g->bb);\n "}]}