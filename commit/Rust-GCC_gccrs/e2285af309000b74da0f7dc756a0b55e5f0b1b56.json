{"sha": "e2285af309000b74da0f7dc756a0b55e5f0b1b56", "node_id": "C_kwDOANBUbNoAKGUyMjg1YWYzMDkwMDBiNzRkYTBmN2RjNzU2YTBiNTVlNWYwYjFiNTY", "commit": {"author": {"name": "Christophe Lyon", "email": "christophe.lyon@arm.com", "date": "2022-04-19T15:34:04Z"}, "committer": {"name": "Christophe Lyon", "email": "christophe.lyon@arm.com", "date": "2022-05-04T08:17:45Z"}, "message": "arm: Restrict support of vectors of boolean immediates (PR target/104662)\n\nThis simple patch avoids the ICE described in the PR:\ninternal compiler error: in simd_valid_immediate, at config/arm/arm.cc:12866\n\nwith an early exit from simd_valid_immediate if we are trying to\nhandle a vector of booleans and MVE is not enabled.\n\nWe still get an ICE when compiling the existing\ngcc.dg/rtl/arm/mve-vxbi.c without -march=armv8.1-m.main+mve:\n\nerror: unrecognizable insn:\n(insn 7 5 8 2 (set (reg:V4BI 114)\n        (const_vector:V4BI [\n                (const_int 1 [0x1])\n                (const_int 0 [0]) repeated x2\n                (const_int 1 [0x1])\n            ])) -1\n     (nil))\nduring RTL pass: ira\n\nbut there's little we can do since the testcase explicitly creates\nvectors of booleans which do need MVE.\n\nThat is the reason why I do not add a testcase.\n\n2022-04-19  Christophe Lyon  <christophe.lyon@arm.com>\n\n\tPR target/104662\n\t* config/arm/arm.cc (simd_valid_immediate): Exit when input is a\n\tvector of booleans and MVE is not enabled.", "tree": {"sha": "6e817d1d600924bf55ee04fd178f7162f112f69f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6e817d1d600924bf55ee04fd178f7162f112f69f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e2285af309000b74da0f7dc756a0b55e5f0b1b56", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2285af309000b74da0f7dc756a0b55e5f0b1b56", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2285af309000b74da0f7dc756a0b55e5f0b1b56", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2285af309000b74da0f7dc756a0b55e5f0b1b56/comments", "author": null, "committer": null, "parents": [{"sha": "1c8e9bed9b9d46d479b83ae05b334543f66961fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c8e9bed9b9d46d479b83ae05b334543f66961fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c8e9bed9b9d46d479b83ae05b334543f66961fb"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "69a18c2f157c9e1f319bd3d89631298d678178d3", "filename": "gcc/config/arm/arm.cc", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2285af309000b74da0f7dc756a0b55e5f0b1b56/gcc%2Fconfig%2Farm%2Farm.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2285af309000b74da0f7dc756a0b55e5f0b1b56/gcc%2Fconfig%2Farm%2Farm.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.cc?ref=e2285af309000b74da0f7dc756a0b55e5f0b1b56", "patch": "@@ -12849,6 +12849,9 @@ simd_valid_immediate (rtx op, machine_mode mode, int inverse,\n \t  || n_elts * innersize != 16))\n     return -1;\n \n+  if (!TARGET_HAVE_MVE && GET_MODE_CLASS (mode) == MODE_VECTOR_BOOL)\n+    return -1;\n+\n   /* Vectors of float constants.  */\n   if (GET_MODE_CLASS (mode) == MODE_VECTOR_FLOAT)\n     {"}]}