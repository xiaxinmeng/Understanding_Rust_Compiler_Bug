{"sha": "b032c74c6f2abf0d16429970929bb573fb1be619", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjAzMmM3NGM2ZjJhYmYwZDE2NDI5OTcwOTI5YmI1NzNmYjFiZTYxOQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-05-22T20:41:45Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-05-22T20:41:45Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r1053", "tree": {"sha": "0b9661c1b7f60b40bed6c489f941816f0204fe8e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0b9661c1b7f60b40bed6c489f941816f0204fe8e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b032c74c6f2abf0d16429970929bb573fb1be619", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b032c74c6f2abf0d16429970929bb573fb1be619", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b032c74c6f2abf0d16429970929bb573fb1be619", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b032c74c6f2abf0d16429970929bb573fb1be619/comments", "author": null, "committer": null, "parents": [{"sha": "7da551a2e80eeb4f2b3fa8765e84b79e899d934c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7da551a2e80eeb4f2b3fa8765e84b79e899d934c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7da551a2e80eeb4f2b3fa8765e84b79e899d934c"}], "stats": {"total": 17, "additions": 6, "deletions": 11}, "files": [{"sha": "a00d384919228ce59d58dddf8c50dde7918a746d", "filename": "gcc/c-common.c", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b032c74c6f2abf0d16429970929bb573fb1be619/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b032c74c6f2abf0d16429970929bb573fb1be619/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=b032c74c6f2abf0d16429970929bb573fb1be619", "patch": "@@ -27,7 +27,7 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n #undef NULL\n #define NULL 0\n \n-/* Make bindings for __NAME__ and __PRINTABLE_NAME__.  */\n+/* Make bindings for __FUNCTION__ and __PRETTY_FUNCTION__.  */\n \n void\n declare_function_name ()\n@@ -50,23 +50,21 @@ declare_function_name ()\n     }\n \n   push_obstacks_nochange ();\n-  decl = build_decl (VAR_DECL, get_identifier (\"__NAME__\"),\n+  decl = build_decl (VAR_DECL, get_identifier (\"__FUNCTION__\"),\n \t\t     char_array_type_node);\n   TREE_STATIC (decl) = 1;\n   TREE_READONLY (decl) = 1;\n-  TREE_NO_UNUSED_WARNING (decl) = 1;\n   DECL_IGNORED_P (decl) = 1;\n   init = build_string (strlen (name) + 1, name);\n   TREE_TYPE (init) = char_array_type_node;\n   DECL_INITIAL (decl) = init;\n   finish_decl (pushdecl (decl), init, NULL_TREE);\n \n   push_obstacks_nochange ();\n-  decl = build_decl (VAR_DECL, get_identifier (\"__PRINTABLE_NAME__\"),\n+  decl = build_decl (VAR_DECL, get_identifier (\"__PRETTY_FUNCTION__\"),\n \t\t     char_array_type_node);\n   TREE_STATIC (decl) = 1;\n   TREE_READONLY (decl) = 1;\n-  TREE_NO_UNUSED_WARNING (decl) = 1;\n   DECL_IGNORED_P (decl) = 1;\n   init = build_string (strlen (printable_name) + 1, printable_name);\n   TREE_TYPE (init) = char_array_type_node;"}, {"sha": "267267b272eee2ee291092805fdcf104277251de", "filename": "gcc/c-decl.c", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b032c74c6f2abf0d16429970929bb573fb1be619/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b032c74c6f2abf0d16429970929bb573fb1be619/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=b032c74c6f2abf0d16429970929bb573fb1be619", "patch": "@@ -1789,10 +1789,7 @@ pushdecl (x)\n \t\t   /* No shadow warnings for internally generated vars.  */\n \t\t   && !DECL_IGNORED_P (x)\n \t\t   /* No shadow warnings for vars made for inlining.  */\n-\t\t   && ! DECL_FROM_INLINE (x)\n-\t\t   /* No shadow warnings for user-invisible decls.  */\n-\t\t   && ! (TREE_CODE (x) == VAR_DECL\n-\t\t\t && DECL_IGNORED_P (x) && TREE_READONLY (x)))\n+\t\t   && ! DECL_FROM_INLINE (x))\n \t    {\n \t      char *warnstring = 0;\n \n@@ -2599,7 +2596,7 @@ init_decl_processing ()\n   builtin_function (\"__builtin_getman\", double_ftype_double, BUILT_IN_GETMAN, 0);\n #endif\n \n-  /* Create the global bindings of __NAME__ and __PRINTABLE_NAME__.  */\n+  /* Create the global bindings for __FUNCTION__ and __PRETTY_FUNCTION__.  */\n   declare_function_name ();\n \n   start_identifier_warnings ();\n@@ -5456,7 +5453,7 @@ store_parm_decls ()\n   if (c_function_varargs)\n     mark_varargs ();\n \n-  /* Declare __NAME__ and __PRINTABLE_NAME__ for this function.  */\n+  /* Declare __FUNCTION__ and __PRETTY_FUNCTION__ for this function.  */\n \n   declare_function_name ();\n "}]}