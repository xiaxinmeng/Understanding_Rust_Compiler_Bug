{"sha": "9220456e93ac46a3151be4add6042a2ee44a9610", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTIyMDQ1NmU5M2FjNDZhMzE1MWJlNGFkZDYwNDJhMmVlNDRhOTYxMA==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2012-11-22T16:59:18Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2012-11-22T16:59:18Z"}, "message": "i386.md (FPCMP): New mode iterator.\n\n\t* config/i386/i386.md (FPCMP): New mode iterator.\n\t(unord): New mode attribute.\n\t(*cmp<mode>_0_i387): Macroize insn from *cmpfp_0\n\tusing X87MODEF mode iterator.\n\t(*cmp<mode>_0_cc_i387): Macroize insn from *cmpfp_0_cc using\n\tX87MODEF mode iterator.\n\t(*cmpxf_i387): Rename from *cmpfp_xf.\n\t(*cmpxf_cc_i387): Rename from *cmpfp_xf_cc.\n\t(*cmp<mode>_i387): Rename from *cmpfp_<mode>.\n\t(*cmp<mode>_cc_i387): Rename from *cmpfp_<mode>_cc.\n\t(*cmpu<mode>_i387): Macroize insn from *cmpfp_u using X87MODEF\n\tmode iterator.\n\t(*cmpu<mode>_cc_i387): Macroize insn from *cmpfp_u_cc using X87MODEF\n\tmode iterator.\n\t(*cmp<X87MODEF:mode>_<SWI24:mode>_i387): Macroize_insn from\n\t*cmpfp_<mode> using X87MODEF mode iterator.\n\t(*cmp<X87MODEF:mode>_<SWI24:mode>_cc_i387): Macroize_insn from\n\t*cmpfp_<mode>_cc using X87MODEF mode iterator.\n\t(*cmpi<FPCMP:unord><MODEF:mode>_mixed): Macroize insn from\n\t*cmpfp_i{,u}_mixed using FPCMP and MODEF mode iterators.\n\t(*cmpi<FPCMP:unord><MODEF:mode>_mixed): Macroize insn from\n\t*cmpfp_i{,u}_sse using FPCMP and MODEF mode iterators.\n\t(*cmpi<CCFPCMP:unord><X87MODEF:mode>_i387): Macroize insn from\n\t*cmpfp_i{,u}_387 using FPCMP and X87MODEF mode iterators.\n\nFrom-SVN: r193731", "tree": {"sha": "28a73e831370bed0924fc4765d149cae3c8ee3ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/28a73e831370bed0924fc4765d149cae3c8ee3ff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9220456e93ac46a3151be4add6042a2ee44a9610", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9220456e93ac46a3151be4add6042a2ee44a9610", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9220456e93ac46a3151be4add6042a2ee44a9610", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9220456e93ac46a3151be4add6042a2ee44a9610/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c16c63bb99a820721467df46ad97a948c1e520c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c16c63bb99a820721467df46ad97a948c1e520c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c16c63bb99a820721467df46ad97a948c1e520c6"}], "stats": {"total": 281, "additions": 98, "deletions": 183}, "files": [{"sha": "f76c873b6a71811c946f97c88e8a082bd9360bb2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9220456e93ac46a3151be4add6042a2ee44a9610/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9220456e93ac46a3151be4add6042a2ee44a9610/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9220456e93ac46a3151be4add6042a2ee44a9610", "patch": "@@ -1,3 +1,30 @@\n+2012-11-22  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.md (FPCMP): New mode iterator.\n+\t(unord): New mode attribute.\n+\t(*cmp<mode>_0_i387): Macroize insn from *cmpfp_0\n+\tusing X87MODEF mode iterator.\n+\t(*cmp<mode>_0_cc_i387): Macroize insn from *cmpfp_0_cc using\n+\tX87MODEF mode iterator.\n+\t(*cmpxf_i387): Rename from *cmpfp_xf.\n+\t(*cmpxf_cc_i387): Rename from *cmpfp_xf_cc.\n+\t(*cmp<mode>_i387): Rename from *cmpfp_<mode>.\n+\t(*cmp<mode>_cc_i387): Rename from *cmpfp_<mode>_cc.\n+\t(*cmpu<mode>_i387): Macroize insn from *cmpfp_u using X87MODEF\n+\tmode iterator.\n+\t(*cmpu<mode>_cc_i387): Macroize insn from *cmpfp_u_cc using X87MODEF\n+\tmode iterator.\n+\t(*cmp<X87MODEF:mode>_<SWI24:mode>_i387): Macroize_insn from\n+\t*cmpfp_<mode> using X87MODEF mode iterator.\n+\t(*cmp<X87MODEF:mode>_<SWI24:mode>_cc_i387): Macroize_insn from\n+\t*cmpfp_<mode>_cc using X87MODEF mode iterator.\n+\t(*cmpi<FPCMP:unord><MODEF:mode>_mixed): Macroize insn from\n+\t*cmpfp_i{,u}_mixed using FPCMP and MODEF mode iterators.\n+\t(*cmpi<FPCMP:unord><MODEF:mode>_mixed): Macroize insn from\n+\t*cmpfp_i{,u}_sse using FPCMP and MODEF mode iterators.\n+\t(*cmpi<CCFPCMP:unord><X87MODEF:mode>_i387): Macroize insn from\n+\t*cmpfp_i{,u}_387 using FPCMP and X87MODEF mode iterators.\n+\n 2012-11-22  Ian Bolton  <ian.bolton@arm.com>\n \n \t* config/aarch64/aarch64.md (bswaphi2): New pattern."}, {"sha": "69e739612bc4e680b7dd37e1cd14809a9814ba8e", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 71, "deletions": 183, "changes": 254, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9220456e93ac46a3151be4add6042a2ee44a9610/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9220456e93ac46a3151be4add6042a2ee44a9610/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=9220456e93ac46a3151be4add6042a2ee44a9610", "patch": "@@ -1237,35 +1237,26 @@\n ;; We may not use \"#\" to split and emit these, since the REG_DEAD notes\n ;; used to manage the reg stack popping would not be preserved.\n \n-(define_insn \"*cmpfp_0\"\n+(define_insn \"*cmp<mode>_0_i387\"\n   [(set (match_operand:HI 0 \"register_operand\" \"=a\")\n \t(unspec:HI\n \t  [(compare:CCFP\n-\t     (match_operand 1 \"register_operand\" \"f\")\n-\t     (match_operand 2 \"const0_operand\"))]\n+\t     (match_operand:X87MODEF 1 \"register_operand\" \"f\")\n+\t     (match_operand:X87MODEF 2 \"const0_operand\"))]\n \tUNSPEC_FNSTSW))]\n-  \"X87_FLOAT_MODE_P (GET_MODE (operands[1]))\n-   && GET_MODE (operands[1]) == GET_MODE (operands[2])\"\n+  \"TARGET_80387\"\n   \"* return output_fp_compare (insn, operands, false, false);\"\n   [(set_attr \"type\" \"multi\")\n    (set_attr \"unit\" \"i387\")\n-   (set (attr \"mode\")\n-     (cond [(match_operand:SF 1)\n-\t      (const_string \"SF\")\n-\t    (match_operand:DF 1)\n-\t      (const_string \"DF\")\n-\t   ]\n-\t   (const_string \"XF\")))])\n+   (set_attr \"mode\" \"<MODE>\")])\n \n-(define_insn_and_split \"*cmpfp_0_cc\"\n+(define_insn_and_split \"*cmp<mode>_0_cc_i387\"\n   [(set (reg:CCFP FLAGS_REG)\n \t(compare:CCFP\n-\t  (match_operand 1 \"register_operand\" \"f\")\n-\t  (match_operand 2 \"const0_operand\")))\n+\t  (match_operand:X87MODEF 1 \"register_operand\" \"f\")\n+\t  (match_operand:X87MODEF 2 \"const0_operand\")))\n    (clobber (match_operand:HI 0 \"register_operand\" \"=a\"))]\n-  \"X87_FLOAT_MODE_P (GET_MODE (operands[1]))\n-   && TARGET_SAHF && !TARGET_CMOVE\n-   && GET_MODE (operands[1]) == GET_MODE (operands[2])\"\n+  \"TARGET_80387 && TARGET_SAHF && !TARGET_CMOVE\"\n   \"#\"\n   \"&& reload_completed\"\n   [(set (match_dup 0)\n@@ -1277,15 +1268,9 @@\n   \"\"\n   [(set_attr \"type\" \"multi\")\n    (set_attr \"unit\" \"i387\")\n-   (set (attr \"mode\")\n-     (cond [(match_operand:SF 1)\n-\t      (const_string \"SF\")\n-\t    (match_operand:DF 1)\n-\t      (const_string \"DF\")\n-\t   ]\n-\t   (const_string \"XF\")))])\n+   (set_attr \"mode\" \"<MODE>\")])\n \n-(define_insn \"*cmpfp_xf\"\n+(define_insn \"*cmpxf_i387\"\n   [(set (match_operand:HI 0 \"register_operand\" \"=a\")\n \t(unspec:HI\n \t  [(compare:CCFP\n@@ -1298,14 +1283,13 @@\n    (set_attr \"unit\" \"i387\")\n    (set_attr \"mode\" \"XF\")])\n \n-(define_insn_and_split \"*cmpfp_xf_cc\"\n+(define_insn_and_split \"*cmpxf_cc_i387\"\n   [(set (reg:CCFP FLAGS_REG)\n \t(compare:CCFP\n \t  (match_operand:XF 1 \"register_operand\" \"f\")\n \t  (match_operand:XF 2 \"register_operand\" \"f\")))\n    (clobber (match_operand:HI 0 \"register_operand\" \"=a\"))]\n-  \"TARGET_80387\n-   && TARGET_SAHF && !TARGET_CMOVE\"\n+  \"TARGET_80387 && TARGET_SAHF && !TARGET_CMOVE\"\n   \"#\"\n   \"&& reload_completed\"\n   [(set (match_dup 0)\n@@ -1319,7 +1303,7 @@\n    (set_attr \"unit\" \"i387\")\n    (set_attr \"mode\" \"XF\")])\n \n-(define_insn \"*cmpfp_<mode>\"\n+(define_insn \"*cmp<mode>_i387\"\n   [(set (match_operand:HI 0 \"register_operand\" \"=a\")\n \t(unspec:HI\n \t  [(compare:CCFP\n@@ -1332,14 +1316,13 @@\n    (set_attr \"unit\" \"i387\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n-(define_insn_and_split \"*cmpfp_<mode>_cc\"\n+(define_insn_and_split \"*cmp<mode>_cc_i387\"\n   [(set (reg:CCFP FLAGS_REG)\n \t(compare:CCFP\n \t  (match_operand:MODEF 1 \"register_operand\" \"f\")\n \t  (match_operand:MODEF 2 \"nonimmediate_operand\" \"fm\")))\n    (clobber (match_operand:HI 0 \"register_operand\" \"=a\"))]\n-  \"TARGET_80387\n-   && TARGET_SAHF && !TARGET_CMOVE\"\n+  \"TARGET_80387 && TARGET_SAHF && !TARGET_CMOVE\"\n   \"#\"\n   \"&& reload_completed\"\n   [(set (match_dup 0)\n@@ -1353,35 +1336,26 @@\n    (set_attr \"unit\" \"i387\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n-(define_insn \"*cmpfp_u\"\n+(define_insn \"*cmpu<mode>_i387\"\n   [(set (match_operand:HI 0 \"register_operand\" \"=a\")\n \t(unspec:HI\n \t  [(compare:CCFPU\n-\t     (match_operand 1 \"register_operand\" \"f\")\n-\t     (match_operand 2 \"register_operand\" \"f\"))]\n+\t     (match_operand:X87MODEF 1 \"register_operand\" \"f\")\n+\t     (match_operand:X87MODEF 2 \"register_operand\" \"f\"))]\n \t  UNSPEC_FNSTSW))]\n-  \"X87_FLOAT_MODE_P (GET_MODE (operands[1]))\n-   && GET_MODE (operands[1]) == GET_MODE (operands[2])\"\n+  \"TARGET_80387\"\n   \"* return output_fp_compare (insn, operands, false, true);\"\n   [(set_attr \"type\" \"multi\")\n    (set_attr \"unit\" \"i387\")\n-   (set (attr \"mode\")\n-     (cond [(match_operand:SF 1)\n-\t      (const_string \"SF\")\n-\t    (match_operand:DF 1)\n-\t      (const_string \"DF\")\n-\t   ]\n-\t   (const_string \"XF\")))])\n+   (set_attr \"mode\" \"<MODE>\")])\n \n-(define_insn_and_split \"*cmpfp_u_cc\"\n+(define_insn_and_split \"*cmpu<mode>_cc_i387\"\n   [(set (reg:CCFPU FLAGS_REG)\n \t(compare:CCFPU\n-\t  (match_operand 1 \"register_operand\" \"f\")\n-\t  (match_operand 2 \"register_operand\" \"f\")))\n+\t  (match_operand:X87MODEF 1 \"register_operand\" \"f\")\n+\t  (match_operand:X87MODEF 2 \"register_operand\" \"f\")))\n    (clobber (match_operand:HI 0 \"register_operand\" \"=a\"))]\n-  \"X87_FLOAT_MODE_P (GET_MODE (operands[1]))\n-   && TARGET_SAHF && !TARGET_CMOVE\n-   && GET_MODE (operands[1]) == GET_MODE (operands[2])\"\n+  \"TARGET_80387 && TARGET_SAHF && !TARGET_CMOVE\"\n   \"#\"\n   \"&& reload_completed\"\n   [(set (match_dup 0)\n@@ -1393,42 +1367,35 @@\n   \"\"\n   [(set_attr \"type\" \"multi\")\n    (set_attr \"unit\" \"i387\")\n-   (set (attr \"mode\")\n-     (cond [(match_operand:SF 1)\n-\t      (const_string \"SF\")\n-\t    (match_operand:DF 1)\n-\t      (const_string \"DF\")\n-\t   ]\n-\t   (const_string \"XF\")))])\n+   (set_attr \"mode\" \"<MODE>\")])\n \n-(define_insn \"*cmpfp_<mode>\"\n+(define_insn \"*cmp<X87MODEF:mode>_<SWI24:mode>_i387\"\n   [(set (match_operand:HI 0 \"register_operand\" \"=a\")\n \t(unspec:HI\n \t  [(compare:CCFP\n-\t     (match_operand 1 \"register_operand\" \"f\")\n-\t     (match_operator 3 \"float_operator\"\n+\t     (match_operand:X87MODEF 1 \"register_operand\" \"f\")\n+\t     (match_operator:X87MODEF 3 \"float_operator\"\n \t       [(match_operand:SWI24 2 \"memory_operand\" \"m\")]))]\n \t  UNSPEC_FNSTSW))]\n-  \"X87_FLOAT_MODE_P (GET_MODE (operands[1]))\n-   && (TARGET_USE_<MODE>MODE_FIOP || optimize_function_for_size_p (cfun))\n-   && (GET_MODE (operands [3]) == GET_MODE (operands[1]))\"\n+  \"TARGET_80387\n+   && (TARGET_USE_<SWI24:MODE>MODE_FIOP\n+       || optimize_function_for_size_p (cfun))\"\n   \"* return output_fp_compare (insn, operands, false, false);\"\n   [(set_attr \"type\" \"multi\")\n    (set_attr \"unit\" \"i387\")\n    (set_attr \"fp_int_src\" \"true\")\n-   (set_attr \"mode\" \"<MODE>\")])\n+   (set_attr \"mode\" \"<SWI24:MODE>\")])\n \n-(define_insn_and_split \"*cmpfp_<mode>_cc\"\n+(define_insn_and_split \"*cmp<X87MODEF:mode>_<SWI24:mode>_cc_i387\"\n   [(set (reg:CCFP FLAGS_REG)\n \t(compare:CCFP\n-\t  (match_operand 1 \"register_operand\" \"f\")\n-\t  (match_operator 3 \"float_operator\"\n+\t  (match_operand:X87MODEF 1 \"register_operand\" \"f\")\n+\t  (match_operator:X87MODEF 3 \"float_operator\"\n \t    [(match_operand:SWI24 2 \"memory_operand\" \"m\")])))\n    (clobber (match_operand:HI 0 \"register_operand\" \"=a\"))]\n-  \"X87_FLOAT_MODE_P (GET_MODE (operands[1]))\n-   && TARGET_SAHF && !TARGET_CMOVE\n-   && (TARGET_USE_<MODE>MODE_FIOP || optimize_function_for_size_p (cfun))\n-   && (GET_MODE (operands [3]) == GET_MODE (operands[1]))\"\n+  \"TARGET_80387 && TARGET_SAHF && !TARGET_CMOVE\n+   && (TARGET_USE_<SWI24:MODE>MODE_FIOP\n+       || optimize_function_for_size_p (cfun))\"\n   \"#\"\n   \"&& reload_completed\"\n   [(set (match_dup 0)\n@@ -1443,7 +1410,7 @@\n   [(set_attr \"type\" \"multi\")\n    (set_attr \"unit\" \"i387\")\n    (set_attr \"fp_int_src\" \"true\")\n-   (set_attr \"mode\" \"<MODE>\")])\n+   (set_attr \"mode\" \"<SWI24:MODE>\")])\n \n ;; FP compares, step 2\n ;; Move the fpsw to ax.\n@@ -1483,93 +1450,22 @@\n ;; Pentium Pro can do steps 1 through 3 in one go.\n ;; comi*, ucomi*, fcomi*, ficomi*, fucomi*\n ;; (these i387 instructions set flags directly)\n-(define_insn \"*cmpfp_i_mixed\"\n-  [(set (reg:CCFP FLAGS_REG)\n-\t(compare:CCFP (match_operand 0 \"register_operand\" \"f,x\")\n-\t\t      (match_operand 1 \"nonimmediate_operand\" \"f,xm\")))]\n-  \"TARGET_MIX_SSE_I387\n-   && SSE_FLOAT_MODE_P (GET_MODE (operands[0]))\n-   && GET_MODE (operands[0]) == GET_MODE (operands[1])\"\n-  \"* return output_fp_compare (insn, operands, true, false);\"\n-  [(set_attr \"type\" \"fcmp,ssecomi\")\n-   (set_attr \"prefix\" \"orig,maybe_vex\")\n-   (set (attr \"mode\")\n-     (if_then_else (match_operand:SF 1)\n-        (const_string \"SF\")\n-        (const_string \"DF\")))\n-   (set (attr \"prefix_rep\")\n-\t(if_then_else (eq_attr \"type\" \"ssecomi\")\n-\t\t      (const_string \"0\")\n-\t\t      (const_string \"*\")))\n-   (set (attr \"prefix_data16\")\n-\t(cond [(eq_attr \"type\" \"fcmp\")\n-\t\t (const_string \"*\")\n-\t       (eq_attr \"mode\" \"DF\")\n-\t\t (const_string \"1\")\n-\t      ]\n-\t      (const_string \"0\")))\n-   (set_attr \"athlon_decode\" \"vector\")\n-   (set_attr \"amdfam10_decode\" \"direct\")\n-   (set_attr \"bdver1_decode\" \"double\")])\n-\n-(define_insn \"*cmpfp_i_sse\"\n-  [(set (reg:CCFP FLAGS_REG)\n-\t(compare:CCFP (match_operand 0 \"register_operand\" \"x\")\n-\t\t      (match_operand 1 \"nonimmediate_operand\" \"xm\")))]\n-  \"TARGET_SSE_MATH\n-   && SSE_FLOAT_MODE_P (GET_MODE (operands[0]))\n-   && GET_MODE (operands[0]) == GET_MODE (operands[1])\"\n-  \"* return output_fp_compare (insn, operands, true, false);\"\n-  [(set_attr \"type\" \"ssecomi\")\n-   (set_attr \"prefix\" \"maybe_vex\")\n-   (set (attr \"mode\")\n-     (if_then_else (match_operand:SF 1)\n-        (const_string \"SF\")\n-        (const_string \"DF\")))\n-   (set_attr \"prefix_rep\" \"0\")\n-   (set (attr \"prefix_data16\")\n-\t(if_then_else (eq_attr \"mode\" \"DF\")\n-\t\t      (const_string \"1\")\n-\t\t      (const_string \"0\")))\n-   (set_attr \"athlon_decode\" \"vector\")\n-   (set_attr \"amdfam10_decode\" \"direct\")\n-   (set_attr \"bdver1_decode\" \"double\")])\n \n-(define_insn \"*cmpfp_i_i387\"\n-  [(set (reg:CCFP FLAGS_REG)\n-\t(compare:CCFP (match_operand 0 \"register_operand\" \"f\")\n-\t\t      (match_operand 1 \"register_operand\" \"f\")))]\n-  \"X87_FLOAT_MODE_P (GET_MODE (operands[0]))\n-   && TARGET_CMOVE\n-   && !(SSE_FLOAT_MODE_P (GET_MODE (operands[0])) && TARGET_SSE_MATH)\n-   && GET_MODE (operands[0]) == GET_MODE (operands[1])\"\n-  \"* return output_fp_compare (insn, operands, true, false);\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set (attr \"mode\")\n-     (cond [(match_operand:SF 1)\n-\t      (const_string \"SF\")\n-\t    (match_operand:DF 1)\n-\t      (const_string \"DF\")\n-\t   ]\n-\t   (const_string \"XF\")))\n-   (set_attr \"athlon_decode\" \"vector\")\n-   (set_attr \"amdfam10_decode\" \"direct\")\n-   (set_attr \"bdver1_decode\" \"double\")])\n+(define_mode_iterator FPCMP [CCFP CCFPU])\n+(define_mode_attr unord [(CCFP \"\") (CCFPU \"u\")])\n \n-(define_insn \"*cmpfp_iu_mixed\"\n-  [(set (reg:CCFPU FLAGS_REG)\n-\t(compare:CCFPU (match_operand 0 \"register_operand\" \"f,x\")\n-\t\t       (match_operand 1 \"nonimmediate_operand\" \"f,xm\")))]\n+(define_insn \"*cmpi<FPCMP:unord><MODEF:mode>_mixed\"\n+  [(set (reg:FPCMP FLAGS_REG)\n+\t(compare:FPCMP\n+\t  (match_operand:MODEF 0 \"register_operand\" \"f,x\")\n+\t  (match_operand:MODEF 1 \"nonimmediate_operand\" \"f,xm\")))]\n   \"TARGET_MIX_SSE_I387\n-   && SSE_FLOAT_MODE_P (GET_MODE (operands[0]))\n-   && GET_MODE (operands[0]) == GET_MODE (operands[1])\"\n-  \"* return output_fp_compare (insn, operands, true, true);\"\n+   && SSE_FLOAT_MODE_P (<MODEF:MODE>mode)\"\n+  \"* return output_fp_compare (insn, operands, true,\n+\t\t\t       <FPCMP:MODE>mode == CCFPUmode);\"\n   [(set_attr \"type\" \"fcmp,ssecomi\")\n    (set_attr \"prefix\" \"orig,maybe_vex\")\n-   (set (attr \"mode\")\n-     (if_then_else (match_operand:SF 1)\n-        (const_string \"SF\")\n-        (const_string \"DF\")))\n+   (set_attr \"mode\" \"<MODEF:MODE>\")\n    (set (attr \"prefix_rep\")\n \t(if_then_else (eq_attr \"type\" \"ssecomi\")\n \t\t      (const_string \"0\")\n@@ -1585,20 +1481,18 @@\n    (set_attr \"amdfam10_decode\" \"direct\")\n    (set_attr \"bdver1_decode\" \"double\")])\n \n-(define_insn \"*cmpfp_iu_sse\"\n-  [(set (reg:CCFPU FLAGS_REG)\n-\t(compare:CCFPU (match_operand 0 \"register_operand\" \"x\")\n-\t\t       (match_operand 1 \"nonimmediate_operand\" \"xm\")))]\n+(define_insn \"*cmpi<FPCMP:unord><MODEF:mode>_sse\"\n+  [(set (reg:FPCMP FLAGS_REG)\n+\t(compare:FPCMP\n+\t  (match_operand:MODEF 0 \"register_operand\" \"x\")\n+\t  (match_operand:MODEF 1 \"nonimmediate_operand\" \"xm\")))]\n   \"TARGET_SSE_MATH\n-   && SSE_FLOAT_MODE_P (GET_MODE (operands[0]))\n-   && GET_MODE (operands[0]) == GET_MODE (operands[1])\"\n-  \"* return output_fp_compare (insn, operands, true, true);\"\n+   && SSE_FLOAT_MODE_P (<MODEF:MODE>mode)\"\n+  \"* return output_fp_compare (insn, operands, true,\n+\t\t\t       <FPCMP:MODE>mode == CCFPUmode);\"\n   [(set_attr \"type\" \"ssecomi\")\n    (set_attr \"prefix\" \"maybe_vex\")\n-   (set (attr \"mode\")\n-     (if_then_else (match_operand:SF 1)\n-        (const_string \"SF\")\n-        (const_string \"DF\")))\n+   (set_attr \"mode\" \"<MODEF:MODE>\")\n    (set_attr \"prefix_rep\" \"0\")\n    (set (attr \"prefix_data16\")\n \t(if_then_else (eq_attr \"mode\" \"DF\")\n@@ -1608,26 +1502,20 @@\n    (set_attr \"amdfam10_decode\" \"direct\")\n    (set_attr \"bdver1_decode\" \"double\")])\n \n-(define_insn \"*cmpfp_iu_387\"\n-  [(set (reg:CCFPU FLAGS_REG)\n-\t(compare:CCFPU (match_operand 0 \"register_operand\" \"f\")\n-\t\t       (match_operand 1 \"register_operand\" \"f\")))]\n-  \"X87_FLOAT_MODE_P (GET_MODE (operands[0]))\n-   && TARGET_CMOVE\n-   && !(SSE_FLOAT_MODE_P (GET_MODE (operands[0])) && TARGET_SSE_MATH)\n-   && GET_MODE (operands[0]) == GET_MODE (operands[1])\"\n-  \"* return output_fp_compare (insn, operands, true, true);\"\n+(define_insn \"*cmpi<FPCMP:unord><X87MODEF:mode>_i387\"\n+  [(set (reg:FPCMP FLAGS_REG)\n+\t(compare:FPCMP\n+\t  (match_operand:X87MODEF 0 \"register_operand\" \"f\")\n+\t  (match_operand:X87MODEF 1 \"register_operand\" \"f\")))]\n+  \"TARGET_80387 && TARGET_CMOVE\n+   && !(SSE_FLOAT_MODE_P (<X87MODEF:MODE>mode) && TARGET_SSE_MATH)\"\n+  \"* return output_fp_compare (insn, operands, true,\n+\t\t\t       <FPCMP:MODE>mode == CCFPUmode);\"\n   [(set_attr \"type\" \"fcmp\")\n-   (set (attr \"mode\")\n-     (cond [(match_operand:SF 1)\n-\t      (const_string \"SF\")\n-\t    (match_operand:DF 1)\n-\t      (const_string \"DF\")\n-\t   ]\n-\t   (const_string \"XF\")))\n+   (set_attr \"mode\" \"<X87MODEF:MODE>\")\n    (set_attr \"athlon_decode\" \"vector\")\n    (set_attr \"amdfam10_decode\" \"direct\")\n-   (set_attr \"bdver1_decode\" \"direct\")])\n+   (set_attr \"bdver1_decode\" \"double\")])\n \f\n ;; Push/pop instructions.\n "}]}