{"sha": "60197adbfd6b91e997c61ead24e925f65be3fcbe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjAxOTdhZGJmZDZiOTFlOTk3YzYxZWFkMjRlOTI1ZjY1YmUzZmNiZQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2012-05-07T14:38:41Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2012-05-07T14:38:41Z"}, "message": "i386.md (ctz<mode>2): Emit rep;bsf only for TARGET_GENERIC, when not optimizing for size.\n\n\t* config/i386/i386.md (ctz<mode>2): Emit rep;bsf\n\tonly for TARGET_GENERIC, when not optimizing for size.\n\t(*ffs<mode>_1): Ditto.\n\nFrom-SVN: r187247", "tree": {"sha": "9f4d2b1fae8ac80107e6f294c1bfa990fafb1bb0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9f4d2b1fae8ac80107e6f294c1bfa990fafb1bb0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/60197adbfd6b91e997c61ead24e925f65be3fcbe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60197adbfd6b91e997c61ead24e925f65be3fcbe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/60197adbfd6b91e997c61ead24e925f65be3fcbe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60197adbfd6b91e997c61ead24e925f65be3fcbe/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "198fc9f199b905c51873bf17a0a3f05afe11c2c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/198fc9f199b905c51873bf17a0a3f05afe11c2c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/198fc9f199b905c51873bf17a0a3f05afe11c2c5"}], "stats": {"total": 42, "additions": 28, "deletions": 14}, "files": [{"sha": "133719b3387b8cadb8c5672d5ab4fb31f0885146", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60197adbfd6b91e997c61ead24e925f65be3fcbe/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60197adbfd6b91e997c61ead24e925f65be3fcbe/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=60197adbfd6b91e997c61ead24e925f65be3fcbe", "patch": "@@ -1,3 +1,9 @@\n+2012-05-07  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.md (ctz<mode>2): Emit rep;bsf\n+\tonly for TARGET_GENERIC, when not optimizing for size.\n+\t(*ffs<mode>_1): Ditto.\n+\n 2012-05-07  Steven Bosscher  <steven@gcc.gnu.org>\n \n \t* tree-cfg.c (verify_gimple_switch): Tighten checks."}, {"sha": "80f1ec483cf99fdbe4bd2451e795e06a60d87757", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 22, "deletions": 14, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60197adbfd6b91e997c61ead24e925f65be3fcbe/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60197adbfd6b91e997c61ead24e925f65be3fcbe/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=60197adbfd6b91e997c61ead24e925f65be3fcbe", "patch": "@@ -12113,21 +12113,25 @@\n \t(ctz:SWI48 (match_dup 1)))]\n   \"\"\n {\n-  if (optimize_function_for_size_p (cfun))\n-    return \"bsf{<imodesuffix>}\\t{%1, %0|%0, %1}\";\n-  else if (TARGET_BMI)\n+  if (TARGET_BMI)\n     return \"tzcnt{<imodesuffix>}\\t{%1, %0|%0, %1}\";\n-  else \n+  else if (optimize_function_for_size_p (cfun))\n+    ;\n+  else if (TARGET_GENERIC)\n     /* tzcnt expands to rep;bsf and we can use it even if !TARGET_BMI.  */\n     return \"rep; bsf{<imodesuffix>}\\t{%1, %0|%0, %1}\";\n+\n+  return \"bsf{<imodesuffix>}\\t{%1, %0|%0, %1}\";\n }\n   [(set_attr \"type\" \"alu1\")\n    (set_attr \"prefix_0f\" \"1\")\n    (set (attr \"prefix_rep\")\n      (if_then_else\n-       (match_test \"optimize_function_for_size_p (cfun)\")\n-       (const_string \"0\")\n-       (const_string \"1\")))\n+       (ior (match_test \"TARGET_BMI\")\n+\t    (and (not (match_test \"optimize_function_for_size_p (cfun)\"))\n+\t\t (match_test \"TARGET_GENERIC\")))\n+       (const_string \"1\")\n+       (const_string \"0\")))\n    (set_attr \"mode\" \"<MODE>\")])\n \n (define_insn \"ctz<mode>2\"\n@@ -12136,21 +12140,25 @@\n    (clobber (reg:CC FLAGS_REG))]\n   \"\"\n {\n-  if (optimize_function_for_size_p (cfun))\n-    return \"bsf{<imodesuffix>}\\t{%1, %0|%0, %1}\";\n-  else if (TARGET_BMI)\n+  if (TARGET_BMI)\n     return \"tzcnt{<imodesuffix>}\\t{%1, %0|%0, %1}\";\n-  else \n+  else if (optimize_function_for_size_p (cfun))\n+    ;\n+  else if (TARGET_GENERIC)\n     /* tzcnt expands to rep;bsf and we can use it even if !TARGET_BMI.  */\n     return \"rep; bsf{<imodesuffix>}\\t{%1, %0|%0, %1}\";\n+\n+  return \"bsf{<imodesuffix>}\\t{%1, %0|%0, %1}\";\n }\n   [(set_attr \"type\" \"alu1\")\n    (set_attr \"prefix_0f\" \"1\")\n    (set (attr \"prefix_rep\")\n      (if_then_else\n-       (match_test \"optimize_function_for_size_p (cfun)\")\n-       (const_string \"0\")\n-       (const_string \"1\")))\n+       (ior (match_test \"TARGET_BMI\")\n+\t    (and (not (match_test \"optimize_function_for_size_p (cfun)\"))\n+\t\t (match_test \"TARGET_GENERIC\")))\n+       (const_string \"1\")\n+       (const_string \"0\")))\n    (set_attr \"mode\" \"<MODE>\")])\n \n (define_expand \"clz<mode>2\""}]}