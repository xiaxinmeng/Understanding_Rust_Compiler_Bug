{"sha": "f6dbc402e18a4d8e4f4941c4e7b2f9ec4e3c9ed4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjZkYmM0MDJlMThhNGQ4ZTRmNDk0MWM0ZTdiMmY5ZWM0ZTNjOWVkNA==", "commit": {"author": {"name": "James Greenhalgh", "email": "james.greenhalgh@arm.com", "date": "2016-06-20T14:01:04Z"}, "committer": {"name": "James Greenhalgh", "email": "jgreenhalgh@gcc.gnu.org", "date": "2016-06-20T14:01:04Z"}, "message": "[AArch64] Give some new costs for Cortex-A53 floating-point operations\n\ngcc/\n\n\t* config/arm/aarch-cost-tables.h (cortexa53_extra_costs): Make FP\n\tcosts relative to the cost of a register move.\n\nFrom-SVN: r237604", "tree": {"sha": "05997385745005b09d6158a648210056d4172481", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/05997385745005b09d6158a648210056d4172481"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f6dbc402e18a4d8e4f4941c4e7b2f9ec4e3c9ed4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6dbc402e18a4d8e4f4941c4e7b2f9ec4e3c9ed4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6dbc402e18a4d8e4f4941c4e7b2f9ec4e3c9ed4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6dbc402e18a4d8e4f4941c4e7b2f9ec4e3c9ed4/comments", "author": {"login": "jgreenhalgh-arm", "id": 6104025, "node_id": "MDQ6VXNlcjYxMDQwMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6104025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jgreenhalgh-arm", "html_url": "https://github.com/jgreenhalgh-arm", "followers_url": "https://api.github.com/users/jgreenhalgh-arm/followers", "following_url": "https://api.github.com/users/jgreenhalgh-arm/following{/other_user}", "gists_url": "https://api.github.com/users/jgreenhalgh-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jgreenhalgh-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jgreenhalgh-arm/subscriptions", "organizations_url": "https://api.github.com/users/jgreenhalgh-arm/orgs", "repos_url": "https://api.github.com/users/jgreenhalgh-arm/repos", "events_url": "https://api.github.com/users/jgreenhalgh-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/jgreenhalgh-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "636929b8d68c11f92ed3fa47614a38915d9476f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/636929b8d68c11f92ed3fa47614a38915d9476f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/636929b8d68c11f92ed3fa47614a38915d9476f4"}], "stats": {"total": 57, "additions": 31, "deletions": 26}, "files": [{"sha": "0e67896bef9b5fe516051e5ce0c7ddafa4aa0751", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6dbc402e18a4d8e4f4941c4e7b2f9ec4e3c9ed4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6dbc402e18a4d8e4f4941c4e7b2f9ec4e3c9ed4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f6dbc402e18a4d8e4f4941c4e7b2f9ec4e3c9ed4", "patch": "@@ -1,3 +1,8 @@\n+2016-06-20  James Greenhalgh  <james.greenhalgh@arm.com>\n+\n+\t* config/arm/aarch-cost-tables.h (cortexa53_extra_costs): Make FP\n+\tcosts relative to the cost of a register move.\n+\n 2016-06-20  James Greenhalgh  <james.greenhalgh@arm.com>\n \n \t* config/aarch64/arm_neon.h (vcvt_n_f64_s64): New."}, {"sha": "8bcfcb4b93404d74b994f9e79613b21183c902bf", "filename": "gcc/config/arm/aarch-cost-tables.h", "status": "modified", "additions": 26, "deletions": 26, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6dbc402e18a4d8e4f4941c4e7b2f9ec4e3c9ed4/gcc%2Fconfig%2Farm%2Faarch-cost-tables.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6dbc402e18a4d8e4f4941c4e7b2f9ec4e3c9ed4/gcc%2Fconfig%2Farm%2Faarch-cost-tables.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Faarch-cost-tables.h?ref=f6dbc402e18a4d8e4f4941c4e7b2f9ec4e3c9ed4", "patch": "@@ -191,35 +191,35 @@ const struct cpu_cost_table cortexa53_extra_costs =\n   {\n     /* FP SFmode */\n     {\n-      COSTS_N_INSNS (15),\t/* div.  */\n-      COSTS_N_INSNS (3),\t/* mult.  */\n-      COSTS_N_INSNS (7),\t/* mult_addsub. */\n-      COSTS_N_INSNS (7),\t/* fma.  */\n-      COSTS_N_INSNS (3),\t/* addsub.  */\n-      COSTS_N_INSNS (1),\t/* fpconst. */\n-      COSTS_N_INSNS (2),\t/* neg.  */\n-      COSTS_N_INSNS (1),\t/* compare.  */\n-      COSTS_N_INSNS (3),\t/* widen.  */\n-      COSTS_N_INSNS (3),\t/* narrow.  */\n-      COSTS_N_INSNS (3),\t/* toint.  */\n-      COSTS_N_INSNS (3),\t/* fromint.  */\n-      COSTS_N_INSNS (3)\t\t/* roundint.  */\n+      COSTS_N_INSNS (5),\t/* div.  */\n+      COSTS_N_INSNS (1),\t/* mult.  */\n+      COSTS_N_INSNS (2),\t/* mult_addsub.  */\n+      COSTS_N_INSNS (2),\t/* fma.  */\n+      COSTS_N_INSNS (1),\t/* addsub.  */\n+      0,\t\t\t/* fpconst.  */\n+      COSTS_N_INSNS (1),\t/* neg.  */\n+      0,\t\t\t/* compare.  */\n+      COSTS_N_INSNS (1),\t/* widen.  */\n+      COSTS_N_INSNS (1),\t/* narrow.  */\n+      COSTS_N_INSNS (1),\t/* toint.  */\n+      COSTS_N_INSNS (1),\t/* fromint.  */\n+      COSTS_N_INSNS (1)\t\t/* roundint.  */\n     },\n     /* FP DFmode */\n     {\n-      COSTS_N_INSNS (30),\t/* div.  */\n-      COSTS_N_INSNS (3),\t/* mult.  */\n-      COSTS_N_INSNS (7),\t/* mult_addsub.  */\n-      COSTS_N_INSNS (7),\t/* fma.  */\n-      COSTS_N_INSNS (3),\t/* addsub.  */\n-      COSTS_N_INSNS (1),\t/* fpconst.  */\n-      COSTS_N_INSNS (2),\t/* neg.  */\n-      COSTS_N_INSNS (1),\t/* compare.  */\n-      COSTS_N_INSNS (3),\t/* widen.  */\n-      COSTS_N_INSNS (3),\t/* narrow.  */\n-      COSTS_N_INSNS (3),\t/* toint.  */\n-      COSTS_N_INSNS (3),\t/* fromint.  */\n-      COSTS_N_INSNS (3)\t\t/* roundint.  */\n+      COSTS_N_INSNS (10),\t/* div.  */\n+      COSTS_N_INSNS (1),\t/* mult.  */\n+      COSTS_N_INSNS (2),\t/* mult_addsub.  */\n+      COSTS_N_INSNS (2),\t/* fma.  */\n+      COSTS_N_INSNS (1),\t/* addsub.  */\n+      0,\t\t\t/* fpconst.  */\n+      COSTS_N_INSNS (1),\t/* neg.  */\n+      0,\t\t\t/* compare.  */\n+      COSTS_N_INSNS (1),\t/* widen.  */\n+      COSTS_N_INSNS (1),\t/* narrow.  */\n+      COSTS_N_INSNS (1),\t/* toint.  */\n+      COSTS_N_INSNS (1),\t/* fromint.  */\n+      COSTS_N_INSNS (1)\t\t/* roundint.  */\n     }\n   },\n   /* Vector */"}]}