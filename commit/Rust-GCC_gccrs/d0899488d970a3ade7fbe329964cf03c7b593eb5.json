{"sha": "d0899488d970a3ade7fbe329964cf03c7b593eb5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDA4OTk0ODhkOTcwYTNhZGU3ZmJlMzI5OTY0Y2YwM2M3YjU5M2ViNQ==", "commit": {"author": {"name": "Sandra Loosemore", "email": "sandra@codesourcery.com", "date": "2016-01-19T20:44:11Z"}, "committer": {"name": "Sandra Loosemore", "email": "sandra@gcc.gnu.org", "date": "2016-01-19T20:44:11Z"}, "message": "standards.texi: Copy-editing for grammar, markup, and sentence flow throughout the file.\n\n2016-01-19  Sandra Loosemore <sandra@codesourcery.com>\n\n\tgcc/\n\t* doc/standards.texi: Copy-editing for grammar, markup, and sentence\n\tflow throughout the file.  Fix broken link to Objective-C 2.0\n\tdocumentation.\n\t* doc/invoke.texi: More copy-editing; fix numerous typos and spelling\n\terrors.\n\nFrom-SVN: r232583", "tree": {"sha": "35ea137b59c18c998e21acd80d19d7f4d52037c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/35ea137b59c18c998e21acd80d19d7f4d52037c9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d0899488d970a3ade7fbe329964cf03c7b593eb5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0899488d970a3ade7fbe329964cf03c7b593eb5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d0899488d970a3ade7fbe329964cf03c7b593eb5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0899488d970a3ade7fbe329964cf03c7b593eb5/comments", "author": {"login": "SandraLoosemore", "id": 104087111, "node_id": "U_kgDOBjQ-Rw", "avatar_url": "https://avatars.githubusercontent.com/u/104087111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SandraLoosemore", "html_url": "https://github.com/SandraLoosemore", "followers_url": "https://api.github.com/users/SandraLoosemore/followers", "following_url": "https://api.github.com/users/SandraLoosemore/following{/other_user}", "gists_url": "https://api.github.com/users/SandraLoosemore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SandraLoosemore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SandraLoosemore/subscriptions", "organizations_url": "https://api.github.com/users/SandraLoosemore/orgs", "repos_url": "https://api.github.com/users/SandraLoosemore/repos", "events_url": "https://api.github.com/users/SandraLoosemore/events{/privacy}", "received_events_url": "https://api.github.com/users/SandraLoosemore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "199501ea411ff65a4749df39eeda5bb14b1caff7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/199501ea411ff65a4749df39eeda5bb14b1caff7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/199501ea411ff65a4749df39eeda5bb14b1caff7"}], "stats": {"total": 288, "additions": 150, "deletions": 138}, "files": [{"sha": "d343697c2cb6a8d1913e3d455bc44476789d5f4f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0899488d970a3ade7fbe329964cf03c7b593eb5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0899488d970a3ade7fbe329964cf03c7b593eb5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d0899488d970a3ade7fbe329964cf03c7b593eb5", "patch": "@@ -1,3 +1,11 @@\n+2016-01-19  Sandra Loosemore <sandra@codesourcery.com>\n+\n+\t* doc/standards.texi: Copy-editing for grammar, markup, and sentence\n+\tflow throughout the file.  Fix broken link to Objective-C 2.0\n+\tdocumentation.\n+\t* doc/invoke.texi: More copy-editing; fix numerous typos and spelling\n+\terrors.\n+\n 2016-01-19  Wilco Dijkstra  <wdijkstr@arm.com>\n \n \t* ccmp.c (expand_ccmp_expr_1): Avoid spurious unused warnings."}, {"sha": "05cfaef119e00b0c391b6081e402ac8373f0f2d3", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 83, "deletions": 86, "changes": 169, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0899488d970a3ade7fbe329964cf03c7b593eb5/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0899488d970a3ade7fbe329964cf03c7b593eb5/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=d0899488d970a3ade7fbe329964cf03c7b593eb5", "patch": "@@ -2742,9 +2742,9 @@ This warning is enabled by default.\n \n @item -Wlto-type-mismatch\n @opindex Wlto-type-mismatch\n-@opindex Wno-lto-type-mistmach\n+@opindex Wno-lto-type-mismatch\n \n-During the link-time optimization warn about type mismatches in between\n+During the link-time optimization warn about type mismatches in\n global declarations from different compilation units.\n Requires @option{-flto} to be enabled.  Enabled by default.\n \n@@ -3261,7 +3261,7 @@ a message which is too long to fit on a single line.\n @item -fdiagnostics-color[=@var{WHEN}]\n @itemx -fno-diagnostics-color\n @opindex fdiagnostics-color\n-@cindex highlight, color, colour\n+@cindex highlight, color\n @vindex GCC_COLORS @r{environment variable}\n Use color in diagnostics.  @var{WHEN} is @samp{never}, @samp{always},\n or @samp{auto}.  The default depends on how the compiler has been configured,\n@@ -3346,7 +3346,7 @@ option is known to the diagnostic machinery).  Specifying the\n @opindex fno-diagnostics-show-caret\n @opindex fdiagnostics-show-caret\n By default, each diagnostic emitted includes the original source line\n-and a caret '^' indicating the column.  This option suppresses this\n+and a caret @samp{^} indicating the column.  This option suppresses this\n information.  The source line is truncated to @var{n} characters, if\n the @option{-fmessage-length=n} option is given.  When the output is done\n to the terminal, the width is limited to the width given by the\n@@ -5049,7 +5049,7 @@ types. @option{-Wconversion-null} is enabled by default.\n @item -Wzero-as-null-pointer-constant @r{(C++ and Objective-C++ only)}\n @opindex Wzero-as-null-pointer-constant\n @opindex Wno-zero-as-null-pointer-constant\n-Warn when a literal '0' is used as null pointer constant.  This can\n+Warn when a literal @samp{0} is used as null pointer constant.  This can\n be useful to facilitate the conversion to @code{nullptr} in C++11.\n \n @item -Wsubobject-linkage @r{(C++ and Objective-C++ only)}\n@@ -5878,19 +5878,19 @@ except when selective scheduling is enabled.\n \n @item -gsplit-dwarf\n @opindex gsplit-dwarf\n-Separate as much dwarf debugging information as possible into a\n-separate output file with the extension .dwo.  This option allows\n+Separate as much DWARF debugging information as possible into a\n+separate output file with the extension @file{.dwo}.  This option allows\n the build system to avoid linking files with debug information.  To\n-be useful, this option requires a debugger capable of reading .dwo\n+be useful, this option requires a debugger capable of reading @file{.dwo}\n files.\n \n @item -gpubnames\n @opindex gpubnames\n-Generate dwarf .debug_pubnames and .debug_pubtypes sections.\n+Generate DWARF @code{.debug_pubnames} and @code{.debug_pubtypes} sections.\n \n @item -ggnu-pubnames\n @opindex ggnu-pubnames\n-Generate .debug_pubnames and .debug_pubtypes sections in a format\n+Generate @code{.debug_pubnames} and @code{.debug_pubtypes} sections in a format\n suitable for conversion into a GDB@ index.  This option is only useful\n with a linker that can produce GDB@ index version 7.\n \n@@ -5906,18 +5906,17 @@ and on some objects @code{.debug_types} produces larger instead of smaller\n debugging information.\n \n @item -grecord-gcc-switches\n+@item -gno-record-gcc-switches\n @opindex grecord-gcc-switches\n+@opindex gno-record-gcc-switches\n This switch causes the command-line options used to invoke the\n compiler that may affect code generation to be appended to the\n DW_AT_producer attribute in DWARF debugging information.  The options\n are concatenated with spaces separating them from each other and from\n-the compiler version.  See also @option{-frecord-gcc-switches} for another\n-way of storing compiler options into the object file.  This is the default.\n-\n-@item -gno-record-gcc-switches\n-@opindex gno-record-gcc-switches\n-Disallow appending command-line options to the DW_AT_producer attribute\n-in DWARF debugging information.\n+the compiler version.  \n+It is enabled by default.\n+See also @option{-frecord-gcc-switches} for another\n+way of storing compiler options into the object file.  \n \n @item -gstrict-dwarf\n @opindex gstrict-dwarf\n@@ -7591,7 +7590,7 @@ The default is @samp{simple} at levels @option{-O}, @option{-Os}, and\n @opindex freorder-blocks-and-partition\n In addition to reordering basic blocks in the compiled function, in order\n to reduce number of taken branches, partitions hot and cold basic blocks\n-into separate sections of the assembly and .o files, to improve\n+into separate sections of the assembly and @file{.o} files, to improve\n paging and cache locality performance.\n \n This optimization is automatically turned off in the presence of\n@@ -7825,6 +7824,9 @@ had been part of the same translation unit.\n \n To use the link-time optimizer, @option{-flto} and optimization\n options should be specified at compile time and during the final link.\n+It is recommended that you compile all the files participating in the\n+same link with the same options and also specify those options at\n+link time.  \n For example:\n \n @smallexample\n@@ -7855,15 +7857,15 @@ merges them together into a single GIMPLE representation and optimizes\n them as usual to produce @file{myprog}.\n \n The only important thing to keep in mind is that to enable link-time\n-optimizations you need to use the GCC driver to perform the link-step.\n+optimizations you need to use the GCC driver to perform the link step.\n GCC then automatically performs link-time optimization if any of the\n objects involved were compiled with the @option{-flto} command-line option.  \n You generally\n should specify the optimization options to be used for link-time\n optimization though GCC tries to be clever at guessing an\n-optimization level to use from the options used at compile-time\n-if you fail to specify one at link-time.  You can always override\n-the automatic decision to do link-time optimization at link-time\n+optimization level to use from the options used at compile time\n+if you fail to specify one at link time.  You can always override\n+the automatic decision to do link-time optimization at link time\n by passing @option{-fno-lto} to the link command.\n \n To make whole program optimization effective, it is necessary to make\n@@ -7876,14 +7878,14 @@ the linker plugin is not available, @option{-fwhole-program} should be\n used to allow the compiler to make these assumptions, which leads\n to more aggressive optimization decisions.\n \n-When @option{-fuse-linker-plugin} is not enabled then, when a file is\n+When @option{-fuse-linker-plugin} is not enabled, when a file is\n compiled with @option{-flto}, the generated object file is larger than\n a regular object file because it contains GIMPLE bytecodes and the usual\n final code (see @option{-ffat-lto-objects}.  This means that\n object files with LTO information can be linked as normal object\n files; if @option{-fno-lto} is passed to the linker, no\n interprocedural optimizations are applied.  Note that when\n-@option{-fno-fat-lto-objects} is enabled the compile-stage is faster\n+@option{-fno-fat-lto-objects} is enabled the compile stage is faster\n but you cannot perform a regular, non-LTO link on them.\n \n Additionally, the optimization flags used to compile individual files\n@@ -7909,22 +7911,21 @@ further processing.\n \n There are some code generation flags preserved by GCC when\n generating bytecodes, as they need to be used during the final link\n-stage.  Generally options specified at link-time override those\n-specified at compile-time.\n+stage.  Generally options specified at link time override those\n+specified at compile time.\n \n If you do not specify an optimization level option @option{-O} at\n-link-time then GCC computes one based on the optimization levels\n-used when compiling the object files.  The highest optimization\n-level wins here.\n+link time, then GCC uses the highest optimization level \n+used when compiling the object files.\n \n-Currently, the following options and their setting are take from\n-the first object file that explicitely specified it: \n+Currently, the following options and their settings are taken from\n+the first object file that explicitly specifies them: \n @option{-fPIC}, @option{-fpic}, @option{-fpie}, @option{-fcommon},\n @option{-fexceptions}, @option{-fnon-call-exceptions}, @option{-fgnu-tm}\n and all the @option{-m} target flags.\n \n-Certain ABI changing flags are required to match in all compilation-units\n-and trying to override this at link-time with a conflicting value\n+Certain ABI-changing flags are required to match in all compilation units,\n+and trying to override this at link time with a conflicting value\n is ignored.  This includes options such as @option{-freg-struct-return}\n and @option{-fpcc-struct-return}. \n \n@@ -7933,12 +7934,8 @@ Other options such as @option{-ffp-contract}, @option{-fno-strict-overflow},\n are passed through to the link stage and merged conservatively for\n conflicting translation units.  Specifically\n @option{-fno-strict-overflow}, @option{-fwrapv} and @option{-fno-trapv} take\n-precedence and for example @option{-ffp-contract=off} takes precedence\n-over @option{-ffp-contract=fast}.  You can override them at linke-time.\n-\n-It is recommended that you compile all the files participating in the\n-same link with the same options and also specify those options at\n-link time.\n+precedence; and for example @option{-ffp-contract=off} takes precedence\n+over @option{-ffp-contract=fast}.  You can override them at link time.\n \n If LTO encounters objects with C linkage declared with incompatible\n types in separate translation units to be linked together (undefined\n@@ -8038,7 +8035,7 @@ the link-time optimization step directly from the WPA phase.\n @item -flto-odr-type-merging\n @opindex flto-odr-type-merging\n Enable streaming of mangled types names of C++ types and their unification\n-at linktime.  This increases size of LTO object files, but enable\n+at link time.  This increases size of LTO object files, but enables\n diagnostics about One Definition Rule violations.\n \n @item -flto-compression-level=@var{n}\n@@ -8259,7 +8256,7 @@ it might, and @option{-fno-math-errno} is the default.\n \n Allow optimizations for floating-point arithmetic that (a) assume\n that arguments and results are valid and (b) may violate IEEE or\n-ANSI standards.  When used at link-time, it may include libraries\n+ANSI standards.  When used at link time, it may include libraries\n or startup files that change the default FPU control word or other\n similar optimizations.\n \n@@ -8922,7 +8919,7 @@ doing loop versioning for alias in the vectorizer.\n \n @item vect-max-peeling-for-alignment\n The maximum number of loop peels to enhance access alignment\n-for vectorizer. Value -1 means 'no limit'.\n+for vectorizer. Value -1 means no limit.\n \n @item max-iterations-to-track\n The maximum number of iterations of a loop the brute-force algorithm\n@@ -9219,7 +9216,7 @@ redundancies for loads and stores.  If this limit is hit the search\n is aborted and the load or store is not considered redundant.  The\n number of queries is algorithmically limited to the number of\n stores on all paths from the load to the function entry.\n-The default maxmimum number of queries is 1000.\n+The default maximum number of queries is 1000.\n \n @item ira-max-loops-num\n IRA uses regional register allocation by default.  If a function\n@@ -9261,7 +9258,7 @@ motion optimization performed on them.  The default value of the\n parameter is 1000 for @option{-O1} and 10000 for @option{-O2} and above.\n \n @item loop-max-datarefs-for-datadeps\n-Building data dapendencies is expensive for very large loops.  This\n+Building data dependencies is expensive for very large loops.  This\n parameter limits the number of data references in loops that are\n considered for data dependence analysis.  These large loops are no\n handled by the optimizations using loop data dependencies.\n@@ -9406,7 +9403,7 @@ The default value is 75.  A small positive adjustment is applied for\n statements with memory operands as those are even more profitable so sink.\n \n @item max-stores-to-sink\n-The maximum number of conditional stores paires that can be sunk.  Set to 0\n+The maximum number of conditional store pairs that can be sunk.  Set to 0\n if either vectorization (@option{-ftree-vectorize}) or if-conversion\n (@option{-ftree-loop-if-convert}) is disabled.  The default is 2.\n \n@@ -9674,7 +9671,7 @@ out-of-bounds and use-after-free bugs.\n See @uref{https://github.com/google/sanitizers/wiki/AddressSanitizer} for\n more details.  The run-time behavior can be influenced using the\n @env{ASAN_OPTIONS} environment variable.  When set to @code{help=1},\n-the available options are shown at startup of the instrumended program.  See\n+the available options are shown at startup of the instrumented program.  See\n @url{https://github.com/google/sanitizers/wiki/AddressSanitizerFlags#run-time-flags}\n for a list of supported options.\n \n@@ -9904,7 +9901,7 @@ is usable even in freestanding environments.\n @item -fsanitize-coverage=trace-pc\n @opindex fsanitize-coverage=trace-pc\n Enable coverage-guided fuzzing code instrumentation.\n-Inserts call to __sanitizer_cov_trace_pc into every basic block.\n+Inserts a call to @code{__sanitizer_cov_trace_pc} into every basic block.\n \n @item -fbounds-check\n @opindex fbounds-check\n@@ -11765,8 +11762,8 @@ text / bss / data / heap / stack / dso start locations.\n \n @item -freport-bug\n @opindex freport-bug\n-Collect and dump debug information into temporary file if ICE in C/C++\n-compiler occured.\n+Collect and dump debug information into a temporary file if an\n+internal compiler error (ICE) occurs.\n \n @item -fdump-unnumbered\n @opindex fdump-unnumbered\n@@ -12798,7 +12795,7 @@ Do not assume that unaligned memory references are handled by the system.\n @itemx -mno-omit-leaf-frame-pointer\n @opindex momit-leaf-frame-pointer\n @opindex mno-omit-leaf-frame-pointer\n-Omit or keep the frame pointer in leaf functions.  The former behaviour is the\n+Omit or keep the frame pointer in leaf functions.  The former behavior is the\n default.\n \n @item -mtls-dialect=desc\n@@ -12983,7 +12980,7 @@ That allows code to run on hardware variants that lack these registers.\n \n @item -mprefer-short-insn-regs\n @opindex mprefer-short-insn-regs\n-Preferrentially allocate registers that allow short instruction generation.\n+Preferentially allocate registers that allow short instruction generation.\n This can result in increased instruction count, so this may either reduce or\n increase overall code size.\n \n@@ -13275,31 +13272,31 @@ The following instructions are enabled: MPYW, and MPYUW.\n @item 2\n @opindex wlh1\n The multiply option is set to wlh1: 32x32 multiplier, fully\n-pipelined (1 stage).  The following instructions are additionaly\n+pipelined (1 stage).  The following instructions are additionally\n enabled: MPY, MPYU, MPYM, MPYMU, and MPY_S.\n \n @item 3\n @opindex wlh2\n The multiply option is set to wlh2: 32x32 multiplier, fully pipelined\n-(2 stages).  The following instructions are additionaly enabled: MPY,\n+(2 stages).  The following instructions are additionally enabled: MPY,\n MPYU, MPYM, MPYMU, and MPY_S.\n \n @item 4\n @opindex wlh3\n The multiply option is set to wlh3: Two 16x16 multiplier, blocking,\n-sequential.  The following instructions are additionaly enabled: MPY,\n+sequential.  The following instructions are additionally enabled: MPY,\n MPYU, MPYM, MPYMU, and MPY_S.\n \n @item 5\n @opindex wlh4\n The multiply option is set to wlh4: One 16x16 multiplier, blocking,\n-sequential.  The following instructions are additionaly enabled: MPY,\n+sequential.  The following instructions are additionally enabled: MPY,\n MPYU, MPYM, MPYMU, and MPY_S.\n \n @item 6\n @opindex wlh5\n The multiply option is set to wlh5: One 32x4 multiplier, blocking,\n-sequential.  The following instructions are additionaly enabled: MPY,\n+sequential.  The following instructions are additionally enabled: MPY,\n MPYU, MPYM, MPYMU, and MPY_S.\n \n @end table\n@@ -13521,7 +13518,7 @@ Indicate target register priority for r0..r3 / r12..r15.\n \n @item -mlra-priority-noncompact\n @opindex mlra-priority-noncompact\n-Reduce target regsiter priority for r0..r3 / r12..r15.\n+Reduce target register priority for r0..r3 / r12..r15.\n \n @item -mno-millicode\n @opindex mno-millicode\n@@ -14307,7 +14304,7 @@ the compiler and are subject to some limitations:\n The compiler never sets @code{EIND}.\n \n @item\n-The compiler uses @code{EIND} implicitely in @code{EICALL}/@code{EIJMP}\n+The compiler uses @code{EIND} implicitly in @code{EICALL}/@code{EIJMP}\n instructions or might read @code{EIND} directly in order to emulate an\n indirect call/jump by means of a @code{RET} instruction.\n \n@@ -16476,7 +16473,7 @@ to 64 bits.  These are HP-UX specific flags.\n (Dis/En)able data speculative scheduling before reload.\n This results in generation of @code{ld.a} instructions and\n the corresponding check instructions (@code{ld.c} / @code{chk.a}).\n-The default is 'disable'.\n+The default setting is disabled.\n \n @item -msched-ar-data-spec\n @itemx -mno-sched-ar-data-spec\n@@ -16485,7 +16482,7 @@ The default is 'disable'.\n (En/Dis)able data speculative scheduling after reload.\n This results in generation of @code{ld.a} instructions and\n the corresponding check instructions (@code{ld.c} / @code{chk.a}).\n-The default is 'enable'.\n+The default setting is enabled.\n \n @item -mno-sched-control-spec\n @itemx -msched-control-spec\n@@ -16495,7 +16492,7 @@ The default is 'enable'.\n available only during region scheduling (i.e.@: before reload).\n This results in generation of the @code{ld.s} instructions and\n the corresponding check instructions @code{chk.s}.\n-The default is 'disable'.\n+The default setting is disabled.\n \n @item -msched-br-in-data-spec\n @itemx -mno-sched-br-in-data-spec\n@@ -16504,7 +16501,7 @@ The default is 'disable'.\n (En/Dis)able speculative scheduling of the instructions that\n are dependent on the data speculative loads before reload.\n This is effective only with @option{-msched-br-data-spec} enabled.\n-The default is 'enable'.\n+The default setting is enabled.\n \n @item -msched-ar-in-data-spec\n @itemx -mno-sched-ar-in-data-spec\n@@ -16513,7 +16510,7 @@ The default is 'enable'.\n (En/Dis)able speculative scheduling of the instructions that\n are dependent on the data speculative loads after reload.\n This is effective only with @option{-msched-ar-data-spec} enabled.\n-The default is 'enable'.\n+The default setting is enabled.\n \n @item -msched-in-control-spec\n @itemx -mno-sched-in-control-spec\n@@ -16522,7 +16519,7 @@ The default is 'enable'.\n (En/Dis)able speculative scheduling of the instructions that\n are dependent on the control speculative loads.\n This is effective only with @option{-msched-control-spec} enabled.\n-The default is 'enable'.\n+The default setting is enabled.\n \n @item -mno-sched-prefer-non-data-spec-insns\n @itemx -msched-prefer-non-data-spec-insns\n@@ -16531,7 +16528,7 @@ The default is 'enable'.\n If enabled, data-speculative instructions are chosen for schedule\n only if there are no other choices at the moment.  This makes\n the use of the data speculation much more conservative.\n-The default is 'disable'.\n+The default setting is disabled.\n \n @item -mno-sched-prefer-non-control-spec-insns\n @itemx -msched-prefer-non-control-spec-insns\n@@ -16540,7 +16537,7 @@ The default is 'disable'.\n If enabled, control-speculative instructions are chosen for schedule\n only if there are no other choices at the moment.  This makes\n the use of the control speculation much more conservative.\n-The default is 'disable'.\n+The default setting is disabled.\n \n @item -mno-sched-count-spec-in-critical-path\n @itemx -msched-count-spec-in-critical-path\n@@ -16549,7 +16546,7 @@ The default is 'disable'.\n If enabled, speculative dependencies are considered during\n computation of the instructions priorities.  This makes the use of the\n speculation a bit more conservative.\n-The default is 'disable'.\n+The default setting is disabled.\n \n @item -msched-spec-ldc\n @opindex msched-spec-ldc\n@@ -18512,7 +18509,7 @@ to undefined behavior.\n @opindex mrelax-pic-calls\n Try to turn PIC calls that are normally dispatched via register\n @code{$25} into direct calls.  This is only possible if the linker can\n-resolve the destination at link-time and if the destination is within\n+resolve the destination at link time and if the destination is within\n range for a direct call.\n \n @option{-mrelax-pic-calls} is the default if GCC was configured to use\n@@ -18796,7 +18793,7 @@ This option is also passed on to the assembler.\n This option enables or disables warnings about conflicts between the\n MCU name specified by the @option{-mmcu} option and the ISA set by the\n @option{-mcpu} option and/or the hardware multiply support set by the\n-@option{-mhwmult} option.  It also toggles warnings about unrecognised\n+@option{-mhwmult} option.  It also toggles warnings about unrecognized\n MCU names.  This option is on by default.\n \n @item -mcpu=\n@@ -18834,7 +18831,7 @@ for the original 16-bit-only multiply supported by early MCUs.\n A value of @samp{auto} can also be given.  This tells GCC to deduce\n the hardware multiply support based upon the MCU name provided by the\n @option{-mmcu} option.  If no @option{-mmcu} option is specified or if\n-the MCU name is not recognised then no hardware multiply support is\n+the MCU name is not recognized then no hardware multiply support is\n assumed.  @code{auto} is the default setting.\n \n Hardware multiplies are normally performed by calling a library\n@@ -18863,8 +18860,8 @@ do not have one of the @code{lower}, @code{upper}, @code{either} or\n @code{upper}, @code{either} or @code{any}.  The first three behave\n like the corresponding attribute.  The fourth possible value -\n @code{any} - is the default.  It leaves placement entirely up to the\n-linker script and how it assigns the standard sections (.text, .data\n-etc) to the memory regions.\n+linker script and how it assigns the standard sections\n+(@code{.text}, @code{.data}, etc) to the memory regions.\n \n @item -msilicon-errata=\n @opindex msilicon-errata\n@@ -19018,14 +19015,14 @@ compiled with the same @option{-G} setting.\n Generate GP-relative accesses for all data objects in the program.  If you\n use this option, the entire data and BSS segments\n of your program must fit in 64K of memory and you must use an appropriate\n-linker script to allocate them within the addressible range of the\n+linker script to allocate them within the addressable range of the\n global pointer.\n \n @item all\n Generate GP-relative addresses for function pointers as well as data\n pointers.  If you use this option, the entire text, data, and BSS segments\n of your program must fit in 64K of memory and you must use an appropriate\n-linker script to allocate them within the addressible range of the\n+linker script to allocate them within the addressable range of the\n global pointer.\n \n @end table\n@@ -19539,11 +19536,11 @@ support to use, unless this is overridden by an explicit\n @option{-mmul=none} option on the command line.  Thus specifying\n @option{-mcpu=g13} enables the use of the G13 hardware multiply\n peripheral and specifying @option{-mcpu=g10} disables the use of\n-hardware multipications altogether.\n+hardware multiplications altogether.\n \n Note, although the RL78/G14 core is the default target, specifying\n @option{-mcpu=g14} or @option{-mcpu=rl78} on the command line does\n-change the behaviour of the toolchain since it also enables G14\n+change the behavior of the toolchain since it also enables G14\n hardware multiply support.  If these options are not specified on the\n command line then software multiplication routines will be used even\n though the code targets the RL78 core.  This is for backwards\n@@ -19762,7 +19759,7 @@ the AltiVec instruction set.  You may also need to set\n enhancements.\n \n When @option{-maltivec} is used, rather than @option{-maltivec=le} or\n-@option{-maltivec=be}, the element order for Altivec intrinsics such\n+@option{-maltivec=be}, the element order for AltiVec intrinsics such\n as @code{vec_splat}, @code{vec_extract}, and @code{vec_insert} \n match array element order corresponding to the endianness of the\n target.  That is, element zero identifies the leftmost element in a\n@@ -19772,23 +19769,23 @@ little-endian platform.\n \n @item -maltivec=be\n @opindex maltivec=be\n-Generate Altivec instructions using big-endian element order,\n+Generate AltiVec instructions using big-endian element order,\n regardless of whether the target is big- or little-endian.  This is\n the default when targeting a big-endian platform.\n \n-The element order is used to interpret element numbers in Altivec\n+The element order is used to interpret element numbers in AltiVec\n intrinsics such as @code{vec_splat}, @code{vec_extract}, and\n @code{vec_insert}.  By default, these match array element order\n corresponding to the endianness for the target.\n \n @item -maltivec=le\n @opindex maltivec=le\n-Generate Altivec instructions using little-endian element order,\n+Generate AltiVec instructions using little-endian element order,\n regardless of whether the target is big- or little-endian.  This is\n the default when targeting a little-endian platform.  This option is\n currently ignored when targeting a big-endian platform.\n \n-The element order is used to interpret element numbers in Altivec\n+The element order is used to interpret element numbers in AltiVec\n intrinsics such as @code{vec_splat}, @code{vec_extract}, and\n @code{vec_insert}.  By default, these match array element order\n corresponding to the endianness for the target.\n@@ -21133,7 +21130,7 @@ define vector type variables and arguments.  @samp{vector} is only\n available when GNU extensions are enabled.  It will not be expanded\n when requesting strict standard compliance e.g. with @option{-std=c99}.\n In addition to the GCC low-level builtins @option{-mzvector} enables\n-a set of builtins added for compatibility with Altivec-style\n+a set of builtins added for compatibility with AltiVec-style\n implementations like Power and Cell.  In order to make use of these\n builtins the header file @file{vecintrin.h} needs to be included.\n @option{-mzvector} is disabled by default.\n@@ -21487,7 +21484,7 @@ Control the IEEE compliance of floating-point comparisons, which affects the\n handling of cases where the result of a comparison is unordered.  By default\n @option{-mieee} is implicitly enabled.  If @option{-ffinite-math-only} is\n enabled @option{-mno-ieee} is implicitly set, which results in faster\n-floating-point greater-equal and less-equal comparisons.  The implcit settings\n+floating-point greater-equal and less-equal comparisons.  The implicit settings\n can be overridden by specifying either @option{-mieee} or @option{-mno-ieee}.\n \n @item -minline-ic_invalidate\n@@ -24176,9 +24173,9 @@ privileges, isn't available.\n @item -fwritable-relocated-rdata\n @opindex fno-writable-relocated-rdata\n This option is available for MinGW and Cygwin targets.  It specifies\n-that relocated-data in read-only section is put into .data\n+that relocated-data in read-only section is put into the @code{.data}\n section.  This is a necessary for older runtimes not supporting\n-modification of .rdata sections for pseudo-relocation.\n+modification of @code{.rdata} sections for pseudo-relocation.\n \n @item -mpe-aligned-commons\n @opindex mpe-aligned-commons\n@@ -24342,7 +24339,7 @@ strings to control their behavior.  The spec strings built into GCC can\n be overridden by using the @option{-specs=} command-line switch to specify\n a spec file.\n \n-@dfn{Spec files} are plaintext files that are used to construct spec\n+@dfn{Spec files} are plain-text files that are used to construct spec\n strings.  They consist of a sequence of directives separated by blank\n lines.  The type of directive is determined by the first non-whitespace\n character on the line, which can be one of the following:"}, {"sha": "703437f959b06dffbbc4fcbf1038b25003f35bf9", "filename": "gcc/doc/standards.texi", "status": "modified", "additions": 59, "deletions": 52, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0899488d970a3ade7fbe329964cf03c7b593eb5/gcc%2Fdoc%2Fstandards.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0899488d970a3ade7fbe329964cf03c7b593eb5/gcc%2Fdoc%2Fstandards.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fstandards.texi?ref=d0899488d970a3ade7fbe329964cf03c7b593eb5", "patch": "@@ -50,9 +50,6 @@ with some exceptions, and possibly with some extensions.\n @cindex hosted environment\n @findex __STDC_HOSTED__\n \n-GCC supports three versions of the C standard, although support for\n-the most recent version is not yet complete.\n-\n @opindex std\n @opindex ansi\n @opindex pedantic\n@@ -62,10 +59,12 @@ published in 1990.  This standard was ratified as an ISO standard\n (ISO/IEC 9899:1990) later in 1990.  There were no technical\n differences between these publications, although the sections of the\n ANSI standard were renumbered and became clauses in the ISO standard.\n-This standard, in both its forms, is commonly known as @dfn{C89}, or\n-occasionally as @dfn{C90}, from the dates of ratification.  The ANSI\n+The ANSI\n standard, but not the ISO standard, also came with a Rationale\n-document.  To select this standard in GCC, use one of the options\n+document.  \n+This standard, in both its forms, is commonly known as @dfn{C89}, or\n+occasionally as @dfn{C90}, from the dates of ratification.\n+To select this standard in GCC, use one of the options\n @option{-ansi}, @option{-std=c90} or @option{-std=iso9899:1990}; to obtain\n all the diagnostics required by the standard, you should also specify\n @option{-pedantic} (or @option{-pedantic-errors} if you want them to be\n@@ -85,35 +84,40 @@ as @dfn{AMD1}; the amended standard is sometimes known as @dfn{C94} or\n @option{-pedantic} to receive all required diagnostics).\n \n A new edition of the ISO C standard was published in 1999 as ISO/IEC\n-9899:1999, and is commonly known as @dfn{C99}.  GCC has substantially\n+9899:1999, and is commonly known as @dfn{C99}.  (While in\n+development, drafts of this standard version were referred to as\n+@dfn{C9X}.)  GCC has substantially\n complete support for this standard version; see\n @uref{http://gcc.gnu.org/c99status.html} for details.  To select this\n-standard, use @option{-std=c99} or @option{-std=iso9899:1999}.  (While in\n-development, drafts of this standard version were referred to as\n-@dfn{C9X}.)\n+standard, use @option{-std=c99} or @option{-std=iso9899:1999}.  \n \n Errors in the 1999 ISO C standard were corrected in three Technical\n Corrigenda published in 2001, 2004 and 2007.  GCC does not support the\n uncorrected version.\n \n A fourth version of the C standard, known as @dfn{C11}, was published\n-in 2011 as ISO/IEC 9899:2011.  GCC has substantially complete support\n-for this standard, enabled with @option{-std=c11} or\n-@option{-std=iso9899:2011}.  (While in development, drafts of this\n+in 2011 as ISO/IEC 9899:2011.  (While in development, drafts of this\n standard version were referred to as @dfn{C1X}.)\n+GCC has substantially complete support\n+for this standard, enabled with @option{-std=c11} or\n+@option{-std=iso9899:2011}.  \n \n-By default, GCC provides some extensions to the C language that on\n+By default, GCC provides some extensions to the C language that, on\n rare occasions conflict with the C standard.  @xref{C\n-Extensions,,Extensions to the C Language Family}.  Use of the\n+Extensions,,Extensions to the C Language Family}.  \n+Some features that are part of the C99 standard\n+are accepted as extensions in C90 mode, and some features that are part\n+of the C11 standard are accepted as extensions in C90 and C99 modes.\n+Use of the\n @option{-std} options listed above disables these extensions where\n they conflict with the C standard version selected.  You may also\n select an extended version of the C language explicitly with\n @option{-std=gnu90} (for C90 with GNU extensions), @option{-std=gnu99}\n (for C99 with GNU extensions) or @option{-std=gnu11} (for C11 with GNU\n-extensions).  The default, if no C language dialect options are given,\n-is @option{-std=gnu11}.  Some features that are part of the C99 standard\n-are accepted as extensions in C90 mode, and some features that are part\n-of the C11 standard are accepted as extensions in C90 and C99 modes.\n+extensions).  \n+\n+The default, if no C language dialect options are given,\n+is @option{-std=gnu11}.  \n \n The ISO C standard defines (in clause 4) two classes of conforming\n implementation.  A @dfn{conforming hosted implementation} supports the\n@@ -124,45 +128,48 @@ library facilities: those in @code{<float.h>}, @code{<limits.h>},\n @code{<iso646.h>}; since C99, also those in @code{<stdbool.h>} and\n @code{<stdint.h>}; and since C11, also those in @code{<stdalign.h>}\n and @code{<stdnoreturn.h>}.  In addition, complex types, added in C99, are not\n-required for freestanding implementations.  The standard also defines\n-two environments for programs, a @dfn{freestanding environment},\n-required of all implementations and which may not have library\n-facilities beyond those required of freestanding implementations,\n-where the handling of program startup and termination are\n-implementation-defined, and a @dfn{hosted environment}, which is not\n-required, in which all the library facilities are provided and startup\n-is through a function @code{int main (void)} or @code{int main (int,\n-char *[])}.  An OS kernel would be a freestanding environment; a\n-program using the facilities of an operating system would normally be\n-in a hosted implementation.\n+required for freestanding implementations.  \n+\n+The standard also defines two environments for programs, a\n+@dfn{freestanding environment}, required of all implementations and\n+which may not have library facilities beyond those required of\n+freestanding implementations, where the handling of program startup\n+and termination are implementation-defined; and a @dfn{hosted\n+environment}, which is not required, in which all the library\n+facilities are provided and startup is through a function @code{int\n+main (void)} or @code{int main (int, char *[])}.  An OS kernel is an example\n+of a program running in a freestanding environment; \n+a program using the facilities of an\n+operating system is an example of a program running in a hosted environment.\n \n @opindex ffreestanding\n GCC aims towards being usable as a conforming freestanding\n implementation, or as the compiler for a conforming hosted\n-implementation.  By default, it will act as the compiler for a hosted\n+implementation.  By default, it acts as the compiler for a hosted\n implementation, defining @code{__STDC_HOSTED__} as @code{1} and\n presuming that when the names of ISO C functions are used, they have\n the semantics defined in the standard.  To make it act as a conforming\n freestanding implementation for a freestanding environment, use the\n-option @option{-ffreestanding}; it will then define\n-@code{__STDC_HOSTED__} to @code{0} and not make assumptions about the\n+option @option{-ffreestanding}; it then defines\n+@code{__STDC_HOSTED__} to @code{0} and does not make assumptions about the\n meanings of function names from the standard library, with exceptions\n noted below.  To build an OS kernel, you may well still need to make\n your own arrangements for linking and startup.\n @xref{C Dialect Options,,Options Controlling C Dialect}.\n \n GCC does not provide the library facilities required only of hosted\n implementations, nor yet all the facilities required by C99 of\n-freestanding implementations on all platforms; to use the facilities of a hosted\n-environment, you will need to find them elsewhere (for example, in the\n+freestanding implementations on all platforms.  \n+To use the facilities of a hosted\n+environment, you need to find them elsewhere (for example, in the\n GNU C library).  @xref{Standard Libraries,,Standard Libraries}.\n \n Most of the compiler support routines used by GCC are present in\n @file{libgcc}, but there are a few exceptions.  GCC requires the\n freestanding environment provide @code{memcpy}, @code{memmove},\n @code{memset} and @code{memcmp}.\n Finally, if @code{__builtin_trap} is used, and the target does\n-not implement the @code{trap} pattern, then GCC will emit a call\n+not implement the @code{trap} pattern, then GCC emits a call\n to @code{abort}.\n \n For references to Technical Corrigenda, Rationale documents and\n@@ -225,7 +232,9 @@ select an extended version of the C++ language explicitly with\n @option{-std=gnu++98} (for C++98 with GNU extensions), or\n @option{-std=gnu++11} (for C++11 with GNU extensions), or\n @option{-std=gnu++14} (for C++14 with GNU extensions), or\n-@option{-std=gnu++1z} (for C++1z with GNU extensions).  The default, if\n+@option{-std=gnu++1z} (for C++1z with GNU extensions).  \n+\n+The default, if\n no C++ language dialect options are given, is @option{-std=gnu++14}.\n \n @section Objective-C and Objective-C++ Languages\n@@ -251,34 +260,32 @@ works with the Apple/NeXT Objective-C runtime library.\n \n There is no formal written standard for Objective-C or Objective-C++@.\n The authoritative manual on traditional Objective-C (1.0) is\n-``Object-Oriented Programming and the Objective-C Language'',\n-available at a number of web sites:\n+``Object-Oriented Programming and the Objective-C Language'':\n @itemize\n @item\n @uref{http://www.gnustep.org/@/resources/@/documentation/@/ObjectivCBook.pdf}\n is the original NeXTstep document;\n @item\n @uref{http://objc.toodarkpark.net}\n-is the same document in another format;\n-@item\n-@uref{http://developer.apple.com/@/mac/@/library/@/documentation/@/Cocoa/@/Conceptual/@/ObjectiveC/}\n-has an updated version but make sure you search for ``Object Oriented Programming and the Objective-C Programming Language 1.0'',\n-not documentation on the newer ``Objective-C 2.0'' language\n+is the same document in another format.\n @end itemize\n \n The Objective-C exception and synchronization syntax (that is, the\n-keywords @@try, @@throw, @@catch, @@finally and @@synchronized) is\n+keywords @code{@@try}, @code{@@throw}, @code{@@catch},\n+@code{@@finally} and @code{@@synchronized}) is\n supported by GCC and is enabled with the option\n @option{-fobjc-exceptions}.  The syntax is briefly documented in this\n manual and in the Objective-C 2.0 manuals from Apple.\n \n The Objective-C 2.0 language extensions and features are automatically\n-enabled; they include properties (via the @@property, @@synthesize and\n-@@dynamic keywords), fast enumeration (not available in\n-Objective-C++), attributes for methods (such as deprecated, noreturn,\n-sentinel, format), the unused attribute for method arguments, the\n-@@package keyword for instance variables and the @@optional and\n-@@required keywords in protocols.  You can disable all these\n+enabled; they include properties (via the @code{@@property},\n+@code{@@synthesize} and\n+@code{@@dynamic keywords}), fast enumeration (not available in\n+Objective-C++), attributes for methods (such as @code{deprecated},\n+@code{noreturn}, @code{sentinel}, @code{format}),\n+the @code{unused} attribute for method arguments, the\n+@code{@@package} keyword for instance variables and the @code{@@optional} and\n+@code{@@required} keywords in protocols.  You can disable all these\n Objective-C 2.0 language extensions with the option\n @option{-fobjc-std=objc1}, which causes the compiler to recognize the\n same Objective-C language syntax recognized by GCC 4.0, and to produce\n@@ -289,7 +296,7 @@ GCC has currently no support for non-fragile instance variables.\n The authoritative manual on Objective-C 2.0 is available from Apple:\n @itemize\n @item\n-@uref{http://developer.apple.com/@/mac/@/library/@/documentation/@/Cocoa/@/Conceptual/@/ObjectiveC/}\n+@uref{https://developer.apple.com/library/mac/documentation/Cocoa/Conceptual/ProgrammingWithObjectiveC/Introduction/Introduction.html}\n @end itemize\n \n For more information concerning the history of Objective-C that is"}]}