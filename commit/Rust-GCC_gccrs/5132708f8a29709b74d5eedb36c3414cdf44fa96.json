{"sha": "5132708f8a29709b74d5eedb36c3414cdf44fa96", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTEzMjcwOGY4YTI5NzA5Yjc0ZDVlZWRiMzZjMzQxNGNkZjQ0ZmE5Ng==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2009-07-20T12:47:50Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-07-20T12:47:50Z"}, "message": "einfo.ads, [...]: Minor reformatting\n\n2009-07-20  Robert Dewar  <dewar@adacore.com>\n\n\t* einfo.ads, switch.adb, gnatls.adb, inline.adb, sem_ch13.adb: Minor\n\treformatting\n\nFrom-SVN: r149809", "tree": {"sha": "cd9adb2b11129c2ab71ead3667e7e27929206029", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cd9adb2b11129c2ab71ead3667e7e27929206029"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5132708f8a29709b74d5eedb36c3414cdf44fa96", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5132708f8a29709b74d5eedb36c3414cdf44fa96", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5132708f8a29709b74d5eedb36c3414cdf44fa96", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5132708f8a29709b74d5eedb36c3414cdf44fa96/comments", "author": null, "committer": null, "parents": [{"sha": "08ad1d6d82e6531a00d773bc3f24548b98c1f89a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08ad1d6d82e6531a00d773bc3f24548b98c1f89a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08ad1d6d82e6531a00d773bc3f24548b98c1f89a"}], "stats": {"total": 174, "additions": 88, "deletions": 86}, "files": [{"sha": "fb93faffa1da1e7722fb6b534be38e6030b1774b", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5132708f8a29709b74d5eedb36c3414cdf44fa96/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5132708f8a29709b74d5eedb36c3414cdf44fa96/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=5132708f8a29709b74d5eedb36c3414cdf44fa96", "patch": "@@ -1,3 +1,8 @@\n+2009-07-20  Robert Dewar  <dewar@adacore.com>\n+\n+\t* einfo.ads, switch.adb, gnatls.adb, inline.adb, sem_ch13.adb: Minor\n+\treformatting\n+\n 2009-07-17  Richard Guenther  <rguenther@suse.de>\n \n \tPR c/40401"}, {"sha": "a7023078265e29a366e1c4c5cc9b5eae41b36af5", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5132708f8a29709b74d5eedb36c3414cdf44fa96/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5132708f8a29709b74d5eedb36c3414cdf44fa96/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=5132708f8a29709b74d5eedb36c3414cdf44fa96", "patch": "@@ -554,12 +554,11 @@ package Einfo is\n \n --    Component_Clause (Node13)\n --       Present in record components and discriminants. If a record\n---       representation clause is present for the corresponding record\n---       type a that specifies a position for the component, then the\n---       Component_Clause field of the E_Component entity points to the\n---       N_Component_Clause node. Set to Empty if no record representation\n---       clause was present, or if there was no specification for this\n---       component.\n+--       representation clause is present for the corresponding record type a\n+--       that specifies a position for the component, then the Component_Clause\n+--       field of the E_Component entity points to the N_Component_Clause node.\n+--       Set to Empty if no record representation clause was present, or if\n+--       there was no specification for this component.\n \n --    Component_Size (Uint22) [implementation base type only]\n --       Present in array types. It contains the component size value for"}, {"sha": "ada6e59d1f8e8d05e4edc5274d2591a1a898a346", "filename": "gcc/ada/gnatls.adb", "status": "modified", "additions": 41, "deletions": 39, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5132708f8a29709b74d5eedb36c3414cdf44fa96/gcc%2Fada%2Fgnatls.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5132708f8a29709b74d5eedb36c3414cdf44fa96/gcc%2Fada%2Fgnatls.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatls.adb?ref=5132708f8a29709b74d5eedb36c3414cdf44fa96", "patch": "@@ -191,11 +191,14 @@ procedure Gnatls is\n \n    package GNATDIST is\n \n-      --  Any modification to this subunit requires a synchronization with\n+      --  Any modification to this subunit requires synchronization with the\n       --  GNATDIST sources.\n \n-      procedure Output_ALI    (A : ALI_Id);\n+      procedure Output_ALI (A : ALI_Id);\n+      --  Comment required saying what this routine does ???\n+\n       procedure Output_No_ALI (Afile : File_Name_Type);\n+      --  Comments required saying what this routine does ???\n \n    end GNATDIST;\n \n@@ -431,46 +434,45 @@ procedure Gnatls is\n          T_Body);\n \n       Image : constant array (Token_Type) of String_Access :=\n-        (T_No_ALI         => new String'(\"No_ALI\"),\n-         T_ALI            => new String'(\"ALI\"),\n-         T_Unit           => new String'(\"Unit\"),\n-         T_With           => new String'(\"With\"),\n-         T_Source         => new String'(\"Source\"),\n-         T_Afile          => new String'(\"Afile\"),\n-         T_Ofile          => new String'(\"Ofile\"),\n-         T_Sfile          => new String'(\"Sfile\"),\n-         T_Name           => new String'(\"Name\"),\n-         T_Main           => new String'(\"Main\"),\n-         T_Kind           => new String'(\"Kind\"),\n-         T_Flags          => new String'(\"Flags\"),\n-         T_Preelaborated  => new String'(\"Preelaborated\"),\n-         T_Pure           => new String'(\"Pure\"),\n-         T_Has_RACW       => new String'(\"Has_RACW\"),\n-         T_Remote_Types   => new String'(\"Remote_Types\"),\n-         T_Shared_Passive => new String'(\"Shared_Passive\"),\n-         T_RCI            => new String'(\"RCI\"),\n-         T_Predefined     => new String'(\"Predefined\"),\n-         T_Internal       => new String'(\"Internal\"),\n-         T_Is_Generic     => new String'(\"Is_Generic\"),\n-         T_Procedure      => new String'(\"procedure\"),\n-         T_Function       => new String'(\"function\"),\n-         T_Package        => new String'(\"package\"),\n-         T_Subprogram     => new String'(\"subprogram\"),\n-         T_Spec           => new String'(\"spec\"),\n-         T_Body           => new String'(\"body\"));\n+                (T_No_ALI         => new String'(\"No_ALI\"),\n+                 T_ALI            => new String'(\"ALI\"),\n+                 T_Unit           => new String'(\"Unit\"),\n+                 T_With           => new String'(\"With\"),\n+                 T_Source         => new String'(\"Source\"),\n+                 T_Afile          => new String'(\"Afile\"),\n+                 T_Ofile          => new String'(\"Ofile\"),\n+                 T_Sfile          => new String'(\"Sfile\"),\n+                 T_Name           => new String'(\"Name\"),\n+                 T_Main           => new String'(\"Main\"),\n+                 T_Kind           => new String'(\"Kind\"),\n+                 T_Flags          => new String'(\"Flags\"),\n+                 T_Preelaborated  => new String'(\"Preelaborated\"),\n+                 T_Pure           => new String'(\"Pure\"),\n+                 T_Has_RACW       => new String'(\"Has_RACW\"),\n+                 T_Remote_Types   => new String'(\"Remote_Types\"),\n+                 T_Shared_Passive => new String'(\"Shared_Passive\"),\n+                 T_RCI            => new String'(\"RCI\"),\n+                 T_Predefined     => new String'(\"Predefined\"),\n+                 T_Internal       => new String'(\"Internal\"),\n+                 T_Is_Generic     => new String'(\"Is_Generic\"),\n+                 T_Procedure      => new String'(\"procedure\"),\n+                 T_Function       => new String'(\"function\"),\n+                 T_Package        => new String'(\"package\"),\n+                 T_Subprogram     => new String'(\"subprogram\"),\n+                 T_Spec           => new String'(\"spec\"),\n+                 T_Body           => new String'(\"body\"));\n \n       procedure Output_Name  (N : Name_Id);\n       --  Remove any encoding info (%b and %s) and output N\n \n       procedure Output_Afile (A : File_Name_Type);\n       procedure Output_Ofile (O : File_Name_Type);\n       procedure Output_Sfile (S : File_Name_Type);\n-      --  Output various names. Check that the name is different from\n-      --  no name. Otherwise, skip the output.\n+      --  Output various names. Check that the name is different from no name.\n+      --  Otherwise, skip the output.\n \n       procedure Output_Token (T : Token_Type);\n-      --  Output token using a specific format. That is several\n-      --  indentations and:\n+      --  Output token using specific format. That is several indentations and:\n       --\n       --  T_No_ALI  .. T_With : <token> & \" =>\" & NL\n       --  T_Source  .. T_Kind : <token> & \" => \"\n@@ -609,12 +611,12 @@ procedure Gnatls is\n             FS := Full_Source_Name (FS);\n \n             --  There is no full source name. This occurs for instance when a\n-            --  withed unit has a spec file but no body file. This situation\n-            --  is not a problem for GNATDIST since the unit may be located on\n-            --  a partition we do not want to build. However, we need to\n-            --  locate the spec file and to find its full source name.\n-            --  Replace the body file name with the spec file name used to\n-            --  compile the current unit when possible.\n+            --  withed unit has a spec file but no body file. This situation is\n+            --  not a problem for GNATDIST since the unit may be located on a\n+            --  partition we do not want to build. However, we need to locate\n+            --  the spec file and to find its full source name. Replace the\n+            --  body file name with the spec file name used to compile the\n+            --  current unit when possible.\n \n             if FS = No_File then\n                Get_Name_String (S);"}, {"sha": "eeeb9da9106cbbb987ab96f594d4fb3ca1dac180", "filename": "gcc/ada/inline.adb", "status": "modified", "additions": 16, "deletions": 29, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5132708f8a29709b74d5eedb36c3414cdf44fa96/gcc%2Fada%2Finline.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5132708f8a29709b74d5eedb36c3414cdf44fa96/gcc%2Fada%2Finline.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finline.adb?ref=5132708f8a29709b74d5eedb36c3414cdf44fa96", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -206,9 +206,7 @@ package body Inline is\n          --  one needs to be recorded.\n \n          J := Inlined.Table (P1).First_Succ;\n-\n          while J /= No_Succ loop\n-\n             if Successors.Table (J).Subp = P2 then\n                return;\n             end if;\n@@ -543,6 +541,7 @@ package body Inline is\n \n       declare\n          S : Entity_Id;\n+\n       begin\n          S := Scope (Inst);\n          while Present (S) and then S /= Standard_Standard loop\n@@ -555,9 +554,7 @@ package body Inline is\n       end;\n \n       Elmt := First_Elmt (To_Clean);\n-\n       while Present (Elmt) loop\n-\n          if Node (Elmt) = Scop then\n             return;\n          end if;\n@@ -601,9 +598,7 @@ package body Inline is\n \n       else\n          J := Hash_Headers (Index);\n-\n          while J /= No_Subp loop\n-\n             if Inlined.Table (J).Name = E then\n                return J;\n             else\n@@ -642,7 +637,6 @@ package body Inline is\n            and then Serious_Errors_Detected = 0\n          loop\n             Pack := Inlined_Bodies.Table (J);\n-\n             while Present (Pack)\n               and then Scope (Pack) /= Standard_Standard\n               and then not Is_Child_Unit (Pack)\n@@ -722,7 +716,6 @@ package body Inline is\n                Set_Is_Called (Inlined.Table (Index).Name, False);\n \n                while S /= No_Succ loop\n-\n                   if Is_Called\n                     (Inlined.Table (Successors.Table (S).Subp).Name)\n                    or else Inlined.Table (Successors.Table (S).Subp).Main_Call\n@@ -789,8 +782,8 @@ package body Inline is\n         and then not Is_Generic_Instance (P)\n       then\n          Bname := Get_Body_Name (Get_Unit_Name (Unit (N)));\n-         E := First_Entity (P);\n \n+         E := First_Entity (P);\n          while Present (E) loop\n             if Has_Pragma_Inline_Always (E)\n               or else (Front_End_Inlining and then Has_Pragma_Inline (E))\n@@ -800,11 +793,11 @@ package body Inline is\n \n                   if OK then\n \n-                     --  Check that we are not trying to inline a parent\n-                     --  whose body depends on a child, when we are compiling\n-                     --  the body of the child. Otherwise we have a potential\n-                     --  elaboration circularity with inlined subprograms and\n-                     --  with Taft-Amendment types.\n+                     --  Check we are not trying to inline a parent whose body\n+                     --  depends on a child, when we are compiling the body of\n+                     --  the child. Otherwise we have a potential elaboration\n+                     --  circularity with inlined subprograms and with\n+                     --  Taft-Amendment types.\n \n                      declare\n                         Comp        : Node_Id;      --  Body just compiled\n@@ -817,18 +810,17 @@ package body Inline is\n                           and then Present (Body_Entity (P))\n                         then\n                            Child_Spec :=\n-                             Defining_Entity (\n-                               (Unit (Library_Unit (Cunit (Main_Unit)))));\n+                             Defining_Entity\n+                               ((Unit (Library_Unit (Cunit (Main_Unit)))));\n \n                            Comp :=\n                              Parent (Unit_Declaration_Node (Body_Entity (P)));\n \n-                           With_Clause := First (Context_Items (Comp));\n-\n                            --  Check whether the context of the body just\n                            --  compiled includes a child of itself, and that\n                            --  child is the spec of the main compilation.\n \n+                           With_Clause := First (Context_Items (Comp));\n                            while Present (With_Clause) loop\n                               if Nkind (With_Clause) = N_With_Clause\n                                 and then\n@@ -848,7 +840,6 @@ package body Inline is\n                                  --  and keep Taft-amendment types incomplete.\n \n                                  Ent := First_Entity (P);\n-\n                                  while Present (Ent) loop\n                                     if Is_Type (Ent)\n                                        and then Has_Completion_In_Body (Ent)\n@@ -898,7 +889,6 @@ package body Inline is\n \n    begin\n       Elmt := First_Elmt (To_Clean);\n-\n       while Present (Elmt) loop\n          Scop := Node (Elmt);\n \n@@ -961,7 +951,6 @@ package body Inline is\n \n       else\n          Decl := First (Declarations (E_Body));\n-\n          while Present (Decl) loop\n \n             if Nkind (Decl) = N_Full_Type_Declaration\n@@ -1076,9 +1065,10 @@ package body Inline is\n    ---------------\n \n    function Is_Nested (E : Entity_Id) return Boolean is\n-      Scop : Entity_Id := Scope (E);\n+      Scop : Entity_Id;\n \n    begin\n+      Scop := Scope (E);\n       while Scop /= Standard_Standard loop\n          if Ekind (Scop) in Subprogram_Kind then\n             return True;\n@@ -1116,13 +1106,11 @@ package body Inline is\n    --------------------------\n \n    procedure Remove_Dead_Instance (N : Node_Id) is\n-      J    : Int;\n+      J : Int;\n \n    begin\n       J := 0;\n-\n       while J <= Pending_Instantiations.Last loop\n-\n          if Pending_Instantiations.Table (J).Inst_Node = N then\n             Pending_Instantiations.Table (J).Inst_Node := Empty;\n             return;\n@@ -1138,7 +1126,7 @@ package body Inline is\n \n    function Scope_In_Main_Unit (Scop : Entity_Id) return Boolean is\n       Comp : Node_Id;\n-      S    : Entity_Id := Scop;\n+      S    : Entity_Id;\n       Ent  : Entity_Id := Cunit_Entity (Main_Unit);\n \n    begin\n@@ -1148,22 +1136,21 @@ package body Inline is\n       --  the second case, this may lead to circularities if a parent body\n       --  depends on a child spec, and we are analyzing the child.\n \n+      S := Scop;\n       while Scope (S) /= Standard_Standard\n         and then not Is_Child_Unit (S)\n       loop\n          S := Scope (S);\n       end loop;\n \n       Comp := Parent (S);\n-\n       while Present (Comp)\n         and then Nkind (Comp) /= N_Compilation_Unit\n       loop\n          Comp := Parent (Comp);\n       end loop;\n \n       if Is_Child_Unit (Ent) then\n-\n          while Present (Ent)\n            and then Is_Child_Unit (Ent)\n          loop"}, {"sha": "7284e0827eda72263d45dec4b38093c6514223f2", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5132708f8a29709b74d5eedb36c3414cdf44fa96/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5132708f8a29709b74d5eedb36c3414cdf44fa96/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=5132708f8a29709b74d5eedb36c3414cdf44fa96", "patch": "@@ -884,9 +884,8 @@ package body Sem_Ch13 is\n                   Off   : Boolean;\n \n                begin\n-\n-                  --  Exported variables cannot have an address clause,\n-                  --  because this cancels the effect of the pragma Export\n+                  --  Exported variables cannot have an address clause, because\n+                  --  this cancels the effect of the pragma Export.\n \n                   if Is_Exported (U_Ent) then\n                      Error_Msg_N\n@@ -2343,7 +2342,7 @@ package body Sem_Ch13 is\n          Set_Normalized_Position_Max (Fent, Uint_0);\n          Init_Esize                  (Fent, System_Address_Size);\n \n-         Set_Component_Clause    (Fent,\n+         Set_Component_Clause (Fent,\n            Make_Component_Clause (Loc,\n              Component_Name =>\n                Make_Identifier (Loc,\n@@ -2614,17 +2613,27 @@ package body Sem_Ch13 is\n \n             package Sorting is new GNAT.Heap_Sort_G (OC_Move, OC_Lt);\n \n+            -----------\n+            -- OC_Lt --\n+            -----------\n+\n             function OC_Lt (Op1, Op2 : Natural) return Boolean is\n             begin\n                return OC_Fbit (Op1) < OC_Fbit (Op2);\n             end OC_Lt;\n \n+            -------------\n+            -- OC_Move --\n+            -------------\n+\n             procedure OC_Move (From : Natural; To : Natural) is\n             begin\n                OC_Fbit (To) := OC_Fbit (From);\n                OC_Lbit (To) := OC_Lbit (From);\n             end OC_Move;\n \n+         --  Start of processing for Overlap_Check\n+\n          begin\n             CC := First (Component_Clauses (N));\n             while Present (CC) loop"}, {"sha": "cb5c4d11f491c8e832995858f2ab6f0f4c348a56", "filename": "gcc/ada/switch.adb", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5132708f8a29709b74d5eedb36c3414cdf44fa96/gcc%2Fada%2Fswitch.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5132708f8a29709b74d5eedb36c3414cdf44fa96/gcc%2Fada%2Fswitch.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fswitch.adb?ref=5132708f8a29709b74d5eedb36c3414cdf44fa96", "patch": "@@ -148,10 +148,10 @@ package body Switch is\n    begin\n       return Is_Switch (Switch_Chars)\n         and then\n-          (Switch_Chars (First .. Last) = \"-param\"\n-           or else Switch_Chars (First .. Last) = \"dumpbase\"\n-           or else Switch_Chars (First .. Last) = \"auxbase-strip\"\n-           or else Switch_Chars (First .. Last) = \"auxbase\");\n+          (Switch_Chars (First .. Last) = \"-param\"        or else\n+           Switch_Chars (First .. Last) = \"dumpbase\"      or else\n+           Switch_Chars (First .. Last) = \"auxbase-strip\" or else\n+           Switch_Chars (First .. Last) = \"auxbase\");\n    end Is_Internal_GCC_Switch;\n \n    ---------------\n@@ -169,15 +169,15 @@ package body Switch is\n    -----------------\n \n    function Switch_Last (Switch_Chars : String) return Natural is\n-      Last  : Natural := Switch_Chars'Last;\n+      Last : constant Natural := Switch_Chars'Last;\n    begin\n       if Last >= Switch_Chars'First\n         and then Switch_Chars (Last) = ASCII.NUL\n       then\n-         Last := Last - 1;\n+         return Last - 1;\n+      else\n+         return Last;\n       end if;\n-\n-      return Last;\n    end Switch_Last;\n \n    -----------------"}]}