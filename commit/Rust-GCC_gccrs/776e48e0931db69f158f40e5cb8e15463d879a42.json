{"sha": "776e48e0931db69f158f40e5cb8e15463d879a42", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzc2ZTQ4ZTA5MzFkYjY5ZjE1OGY0MGU1Y2I4ZTE1NDYzZDg3OWE0Mg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-07-13T16:25:53Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-07-13T16:25:53Z"}, "message": "ipa-fnsummary: Fix ICE with switch predicates [PR96130]\n\nThe following testcase ICEs since r10-3199.\nThere is a switch with default label, where the controlling expression has\nrange just 0..7 and there are case labels for all those 8 values, but\nnothing has yet optimized away the default.\nSince r10-3199, set_switch_stmt_execution_predicate sets the switch to\ndefault label's edge's predicate to a false predicate and then\ncompute_bb_predicates propagates the predicates through the cfg, but false\npredicates aren't really added.  The caller of compute_bb_predicates\nin one place handles NULL bb->aux as false predicate:\n      if (fbi.info)\n\t{\n\t  if (bb->aux)\n\t    bb_predicate = *(predicate *) bb->aux;\n\t  else\n\t    bb_predicate = false;\n\t}\n      else\n\tbb_predicate = true;\nbut then in two further spots that the patch below is changing\nit assumes bb->aux must be non-NULL.  Those two spots are guarded by a\ncondition that is only true if fbi.info is non-NULL, so I think the right\nfix is to treat NULL aux as false predicate in those spots too.\n\n2020-07-13  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR ipa/96130\n\t* ipa-fnsummary.c (analyze_function_body): Treat NULL bb->aux\n\tas false predicate.\n\n\t* gcc.dg/torture/pr96130.c: New test.", "tree": {"sha": "3d604bcfb67376e9ddd38d9746a80d993d0a7e1d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3d604bcfb67376e9ddd38d9746a80d993d0a7e1d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/776e48e0931db69f158f40e5cb8e15463d879a42", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/776e48e0931db69f158f40e5cb8e15463d879a42", "html_url": "https://github.com/Rust-GCC/gccrs/commit/776e48e0931db69f158f40e5cb8e15463d879a42", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/776e48e0931db69f158f40e5cb8e15463d879a42/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bae66e0f04323ba9d5daf60fcb997de925100e3e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bae66e0f04323ba9d5daf60fcb997de925100e3e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bae66e0f04323ba9d5daf60fcb997de925100e3e"}], "stats": {"total": 36, "additions": 34, "deletions": 2}, "files": [{"sha": "55a0b272a96a1196ebf74c4f9fcb657fe07a553b", "filename": "gcc/ipa-fnsummary.c", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/776e48e0931db69f158f40e5cb8e15463d879a42/gcc%2Fipa-fnsummary.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/776e48e0931db69f158f40e5cb8e15463d879a42/gcc%2Fipa-fnsummary.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-fnsummary.c?ref=776e48e0931db69f158f40e5cb8e15463d879a42", "patch": "@@ -2766,7 +2766,10 @@ analyze_function_body (struct cgraph_node *node, bool early)\n \t  edge ex;\n \t  unsigned int j;\n \t  class tree_niter_desc niter_desc;\n-\t  bb_predicate = *(predicate *) loop->header->aux;\n+\t  if (loop->header->aux)\n+\t    bb_predicate = *(predicate *) loop->header->aux;\n+\t  else\n+\t    bb_predicate = false;\n \n \t  exits = get_loop_exit_edges (loop);\n \t  FOR_EACH_VEC_ELT (exits, j, ex)\n@@ -2799,7 +2802,10 @@ analyze_function_body (struct cgraph_node *node, bool early)\n \t  for (unsigned i = 0; i < loop->num_nodes; i++)\n \t    {\n \t      gimple_stmt_iterator gsi;\n-\t      bb_predicate = *(predicate *) body[i]->aux;\n+\t      if (body[i]->aux)\n+\t\tbb_predicate = *(predicate *) body[i]->aux;\n+\t      else\n+\t\tbb_predicate = false;\n \t      for (gsi = gsi_start_bb (body[i]); !gsi_end_p (gsi);\n \t\t   gsi_next (&gsi))\n \t\t{"}, {"sha": "f722b9ad2a9d17b8ada3fb4295a54a9c948815ae", "filename": "gcc/testsuite/gcc.dg/torture/pr96130.c", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/776e48e0931db69f158f40e5cb8e15463d879a42/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr96130.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/776e48e0931db69f158f40e5cb8e15463d879a42/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr96130.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr96130.c?ref=776e48e0931db69f158f40e5cb8e15463d879a42", "patch": "@@ -0,0 +1,26 @@\n+/* PR ipa/96130 */\n+/* { dg-do compile } */\n+\n+struct S { unsigned j : 3; };\n+int k, l, m;\n+\n+void\n+foo (struct S x)\n+{\n+  while (l != 5)\n+    switch (x.j)\n+      {\n+      case 1:\n+      case 3:\n+      case 4:\n+      case 6:\n+      case 2:\n+      case 5:\n+\tl = m;\n+      case 7:\n+      case 0:\n+\tk = 0;\n+      default:\n+\tbreak;\n+      }\n+}"}]}