{"sha": "f1185ea88a0051b3ce9f44cde900bfef6526b568", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjExODVlYTg4YTAwNTFiM2NlOWY0NGNkZTkwMGJmZWY2NTI2YjU2OA==", "commit": {"author": {"name": "Geng Qi", "email": "gengqi@linux.alibaba.com", "date": "2021-04-30T13:01:31Z"}, "committer": {"name": "Xianmiao Qu", "email": "xianmiao_qu@c-sky.com", "date": "2021-05-25T08:51:24Z"}, "message": "C-SKY: Add cases for csky fpuv3 instructions.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/csky/fpuv3/fpuv3.exp: New.\n\t* gcc.target/csky/fpuv3/fpv3_div.c: New.\n\t* gcc.target/csky/fpuv3/fpv3_fadd.c: New.\n\t* gcc.target/csky/fpuv3/fpv3_fdtos.c: New.\n\t* gcc.target/csky/fpuv3/fpv3_fftoi_rm.c: New.\n\t* gcc.target/csky/fpuv3/fpv3_fftoi_rz.c: New.\n\t* gcc.target/csky/fpuv3/fpv3_fhtos.c: New.\n\t* gcc.target/csky/fpuv3/fpv3_fitof.c: New.\n\t* gcc.target/csky/fpuv3/fpv3_fmov.c: New.\n\t* gcc.target/csky/fpuv3/fpv3_fmovi.c: New.\n\t* gcc.target/csky/fpuv3/fpv3_fmula.c: New.\n\t* gcc.target/csky/fpuv3/fpv3_fmuls.c: New.\n\t* gcc.target/csky/fpuv3/fpv3_fneg.c: New.\n\t* gcc.target/csky/fpuv3/fpv3_fnmula.c: New.\n\t* gcc.target/csky/fpuv3/fpv3_fnmuls.c: New.\n\t* gcc.target/csky/fpuv3/fpv3_fstod.c: New.\n\t* gcc.target/csky/fpuv3/fpv3_fstoh.c: New.\n\t* gcc.target/csky/fpuv3/fpv3_fsub.c: New.\n\t* gcc.target/csky/fpuv3/fpv3_fxtof.c: New.\n\t* gcc.target/csky/fpuv3/fpv3_h.c: New.\n\t* gcc.target/csky/fpuv3/fpv3_hs.c: New.\n\t* gcc.target/csky/fpuv3/fpv3_hsz.c: New.\n\t* gcc.target/csky/fpuv3/fpv3_hz.c: New.\n\t* gcc.target/csky/fpuv3/fpv3_ls.c: New.\n\t* gcc.target/csky/fpuv3/fpv3_lsz.c: New.\n\t* gcc.target/csky/fpuv3/fpv3_lt.c: New.\n\t* gcc.target/csky/fpuv3/fpv3_ltz.c: New.\n\t* gcc.target/csky/fpuv3/fpv3_max.c: New.\n\t* gcc.target/csky/fpuv3/fpv3_min.c: New.\n\t* gcc.target/csky/fpuv3/fpv3_mul.c: New.\n\t* gcc.target/csky/fpuv3/fpv3_mula.c: New.\n\t* gcc.target/csky/fpuv3/fpv3_muls.c: New.\n\t* gcc.target/csky/fpuv3/fpv3_ne.c: New.\n\t* gcc.target/csky/fpuv3/fpv3_nez.c: New.\n\t* gcc.target/csky/fpuv3/fpv3_recip.c: New.\n\t* gcc.target/csky/fpuv3/fpv3_sqrt.c: New.\n\t* gcc.target/csky/fpuv3/fpv3_unordered.c: New.", "tree": {"sha": "71fc2d5ebf59f254b60f0e88eaff646d0cd2bbd5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/71fc2d5ebf59f254b60f0e88eaff646d0cd2bbd5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f1185ea88a0051b3ce9f44cde900bfef6526b568", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1185ea88a0051b3ce9f44cde900bfef6526b568", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1185ea88a0051b3ce9f44cde900bfef6526b568", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1185ea88a0051b3ce9f44cde900bfef6526b568/comments", "author": {"login": "Geng-Qi-alibaba", "id": 74535016, "node_id": "MDQ6VXNlcjc0NTM1MDE2", "avatar_url": "https://avatars.githubusercontent.com/u/74535016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Geng-Qi-alibaba", "html_url": "https://github.com/Geng-Qi-alibaba", "followers_url": "https://api.github.com/users/Geng-Qi-alibaba/followers", "following_url": "https://api.github.com/users/Geng-Qi-alibaba/following{/other_user}", "gists_url": "https://api.github.com/users/Geng-Qi-alibaba/gists{/gist_id}", "starred_url": "https://api.github.com/users/Geng-Qi-alibaba/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Geng-Qi-alibaba/subscriptions", "organizations_url": "https://api.github.com/users/Geng-Qi-alibaba/orgs", "repos_url": "https://api.github.com/users/Geng-Qi-alibaba/repos", "events_url": "https://api.github.com/users/Geng-Qi-alibaba/events{/privacy}", "received_events_url": "https://api.github.com/users/Geng-Qi-alibaba/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d8f6ceb58e6f506866cf0eacd2874f30743ea47c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8f6ceb58e6f506866cf0eacd2874f30743ea47c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8f6ceb58e6f506866cf0eacd2874f30743ea47c"}], "stats": {"total": 958, "additions": 958, "deletions": 0}, "files": [{"sha": "1170e12ac285635b9235c771ed5f5c98b2b4a9d7", "filename": "gcc/testsuite/gcc.target/csky/fpuv3/fpuv3.exp", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1185ea88a0051b3ce9f44cde900bfef6526b568/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpuv3.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1185ea88a0051b3ce9f44cde900bfef6526b568/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpuv3.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpuv3.exp?ref=f1185ea88a0051b3ce9f44cde900bfef6526b568", "patch": "@@ -0,0 +1,50 @@\n+# Copyright (C) 1997, 2004, 2006, 2007 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with GCC; see the file COPYING3.  If not see\n+# <http://www.gnu.org/licenses/>.\n+\n+# GCC testsuite that uses the `dg.exp' driver.\n+\n+# Exit immediately if this isn't a csky target.\n+if { ![istarget csky*-*-*]} then {\n+  return\n+}\n+\n+set cflags [board_info target cflags]\n+if { [string first \"ck6\" \"${cflags}\"] >= 0 } {\n+       verbose \"the test is not support \"\n+       return\n+}\n+if { [string first \"ck5\" \"${cflags}\"] >= 0 } {\n+       verbose \"the test is not support \"\n+       return\n+}\n+\n+# Load support procs.\n+load_lib gcc-dg.exp\n+\n+global DEFAULT_CFLAGS\n+if ![info exists DEFAULT_CFLAGS] then {\n+    set DEFAULT_CFLAGS \"\"\n+}\n+\n+# Initialize `dg'.\n+dg-init\n+\n+# Main loop.\n+dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.\\[cCS\\]]] \\\n+\t\"\" $DEFAULT_CFLAGS\n+\n+# All done.\n+dg-finish"}, {"sha": "32a155145e142981933f33a9d3dee3b9a9fe22ac", "filename": "gcc/testsuite/gcc.target/csky/fpuv3/fpv3_div.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1185ea88a0051b3ce9f44cde900bfef6526b568/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_div.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1185ea88a0051b3ce9f44cde900bfef6526b568/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_div.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_div.c?ref=f1185ea88a0051b3ce9f44cde900bfef6526b568", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do compile } */\n+/* { dg-skip-if  \"test is specific to ck860f\"  { csky-*-* }  { \"*\" }  { \"-mcpu=ck860*f* -mfloat-abi=hard\" \"-mcpu=ck860*f* -mhard-float\"  }  }  */\n+/* { dg-options \"\" } */\n+\n+float div32(float a, float b){\n+  return a/b;\n+}\n+\n+\n+float div64(double a, double b){\n+  return a/b;\n+}\n+\n+/* { dg-final { scan-assembler \"fdiv\\.32\" } }*/\n+/* { dg-final { scan-assembler \"fdiv\\.64\" } }*/"}, {"sha": "d54b529fbca1b542a241032d800040195cba6d38", "filename": "gcc/testsuite/gcc.target/csky/fpuv3/fpv3_fadd.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1185ea88a0051b3ce9f44cde900bfef6526b568/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_fadd.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1185ea88a0051b3ce9f44cde900bfef6526b568/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_fadd.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_fadd.c?ref=f1185ea88a0051b3ce9f44cde900bfef6526b568", "patch": "@@ -0,0 +1,23 @@\n+/* { dg-do compile } */\n+/* { dg-skip-if  \"test is specific to ck860f\"  { csky-*-* }  { \"*\" }  { \"-mcpu=ck860*f* -mfloat-abi=hard\" \"-mcpu=ck860*f* -mhard-float\"  }  }  */\n+/* { dg-options \"-mfpu=fpv3\" } */\n+\n+__fp16 funch(__fp16 a, __fp16 b)\n+{\n+  return a + b;\n+}\n+\n+float funcs(float a, float b)\n+{\n+  return a + b;\n+}\n+\n+double funcd(double a, double b)\n+{\n+  return a + b;\n+}\n+\n+/* { dg-final { scan-assembler \"fadd\\.16\" } }*/\n+/* { dg-final { scan-assembler \"fadd\\.32\" } }*/\n+/* { dg-final { scan-assembler \"fadd\\.64\" } }*/\n+"}, {"sha": "034b15e643e207c0c8b983ea2879961eb85fbd6e", "filename": "gcc/testsuite/gcc.target/csky/fpuv3/fpv3_fdtos.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1185ea88a0051b3ce9f44cde900bfef6526b568/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_fdtos.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1185ea88a0051b3ce9f44cde900bfef6526b568/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_fdtos.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_fdtos.c?ref=f1185ea88a0051b3ce9f44cde900bfef6526b568", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile } */\n+/* { dg-skip-if  \"test is specific to ck860f\"  { csky-*-* }  { \"*\" }  { \"-mcpu=ck860*f* -mfloat-abi=hard\" \"-mcpu=ck860*f* -mhard-float\"  }  }  */\n+/* { dg-options \"\" } */\n+\n+float func(double a)\n+{\n+  return (float)a;\n+}\n+\n+/* { dg-final { scan-assembler \"fdtos\" } }*/\n+"}, {"sha": "11c4f9d58c110508430521677fd4e4d5c6b6259a", "filename": "gcc/testsuite/gcc.target/csky/fpuv3/fpv3_fftoi_rm.c", "status": "added", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1185ea88a0051b3ce9f44cde900bfef6526b568/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_fftoi_rm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1185ea88a0051b3ce9f44cde900bfef6526b568/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_fftoi_rm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_fftoi_rm.c?ref=f1185ea88a0051b3ce9f44cde900bfef6526b568", "patch": "@@ -0,0 +1,55 @@\n+/* { dg-do compile } */\n+/* { dg-skip-if  \"test is specific to ck860f\"  { csky-*-* }  { \"*\" }  { \"-mcpu=ck860*f* -mfloat-abi=hard\" \"-mcpu=ck860*f* -mhard-float\"  }  }  */\n+/* { dg-options \"-ffast-math\" } */\n+\n+int lfloor_float32 (float x)\n+{\n+  return __builtin_lfloorf (x);\n+}\n+\n+int lfloor_float64 (double x)\n+{\n+  return __builtin_lfloor (x);\n+}\n+\n+\n+float floor_float32 (float x)\n+{\n+  return __builtin_floorf (x);\n+}\n+\n+double floor_float64 (double x)\n+{\n+  return __builtin_floor (x);\n+}\n+\n+/* { dg-final { scan-assembler \"fftoi\\.f32\\.s32\\.rni\" } }*/\n+/* { dg-final { scan-assembler \"fftoi\\.f64\\.s32\\.rni\" } }*/\n+/* { dg-final { scan-assembler \"fftofi\\.f32\\.rni\" } }*/\n+/* { dg-final { scan-assembler \"fftofi\\.f64\\.rni\" } }*/\n+\n+int lceil_float32 (float x)\n+{\n+  return __builtin_lceilf (x);\n+}\n+\n+int lceil_float64 (double x)\n+{\n+  return __builtin_lceil (x);\n+}\n+\n+\n+float ceil_float32 (float x)\n+{\n+  return __builtin_ceilf (x);\n+}\n+\n+double ceil_float64 (double x)\n+{\n+  return __builtin_ceil (x);\n+}\n+\n+/* { dg-final { scan-assembler \"fftoi\\.f32\\.s32\\.rpi\" } }*/\n+/* { dg-final { scan-assembler \"fftoi\\.f64\\.s32\\.rpi\" } }*/\n+/* { dg-final { scan-assembler \"fftofi\\.f32\\.rpi\" } }*/\n+/* { dg-final { scan-assembler \"fftofi\\.f64\\.rpi\" } }*/"}, {"sha": "4b2990bbea6260ee22468d3b97bf2dfad2d22f5b", "filename": "gcc/testsuite/gcc.target/csky/fpuv3/fpv3_fftoi_rz.c", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1185ea88a0051b3ce9f44cde900bfef6526b568/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_fftoi_rz.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1185ea88a0051b3ce9f44cde900bfef6526b568/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_fftoi_rz.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_fftoi_rz.c?ref=f1185ea88a0051b3ce9f44cde900bfef6526b568", "patch": "@@ -0,0 +1,41 @@\n+/* { dg-do compile } */\n+/* { dg-skip-if  \"test is specific to ck860f\"  { csky-*-* }  { \"*\" }  { \"-mcpu=ck860*f* -mfloat-abi=hard\" \"-mcpu=ck860*f* -mhard-float\"  }  }  */\n+/* { dg-options \" -mfpu=fpv3\" } */\n+\n+int funce(__fp16 a)\n+{\n+  return (int)a;\n+}\n+\n+unsigned int funcf(__fp16 a)\n+{\n+  return (unsigned int)a;\n+}\n+\n+int funca(float a)\n+{\n+  return (int)a;\n+}\n+\n+unsigned int funcb(float a)\n+{\n+  return (unsigned int)a;\n+}\n+\n+int funcc(double a)\n+{\n+  return (int)a;\n+}\n+\n+unsigned int funcd(double a)\n+{\n+  return (unsigned int)a;\n+}\n+\n+/* { dg-final { scan-assembler \"fftoi\\.f16\\.s32\\.rz\" } }*/\n+/* { dg-final { scan-assembler \"fftoi\\.f16\\.u32\\.rz\" } }*/\n+/* { dg-final { scan-assembler \"fftoi\\.f32\\.s32\\.rz\" } }*/\n+/* { dg-final { scan-assembler \"fftoi\\.f32\\.u32\\.rz\" } }*/\n+/* { dg-final { scan-assembler \"fftoi\\.f64\\.s32\\.rz\" } }*/\n+/* { dg-final { scan-assembler \"fftoi\\.f64\\.u32\\.rz\" } }*/\n+"}, {"sha": "25fc542aa7af6c7a14271c904f7732c99bd30fed", "filename": "gcc/testsuite/gcc.target/csky/fpuv3/fpv3_fhtos.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1185ea88a0051b3ce9f44cde900bfef6526b568/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_fhtos.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1185ea88a0051b3ce9f44cde900bfef6526b568/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_fhtos.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_fhtos.c?ref=f1185ea88a0051b3ce9f44cde900bfef6526b568", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile } */\n+/* { dg-skip-if  \"test is specific to ck860f\"  { csky-*-* }  { \"*\" }  { \"-mcpu=ck860*f* -mfloat-abi=hard\" \"-mcpu=ck860*f* -mhard-float\"  }  }  */\n+/* { dg-options \"-mfpu=fpv3\" } */\n+\n+float func(__fp16 a)\n+{\n+  return (float)a;\n+}\n+\n+/* { dg-final { scan-assembler \"fhtos\" } }*/\n+"}, {"sha": "6a513dc1faac0ac9a2f9b0dce661f7492a4c339b", "filename": "gcc/testsuite/gcc.target/csky/fpuv3/fpv3_fitof.c", "status": "added", "additions": 72, "deletions": 0, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1185ea88a0051b3ce9f44cde900bfef6526b568/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_fitof.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1185ea88a0051b3ce9f44cde900bfef6526b568/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_fitof.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_fitof.c?ref=f1185ea88a0051b3ce9f44cde900bfef6526b568", "patch": "@@ -0,0 +1,72 @@\n+/* { dg-do compile } */\n+/* { dg-skip-if  \"test is specific to ck860f\"  { csky-*-* }  { \"*\" }  { \"-mcpu=ck860*f* -mfloat-abi=hard\" \"-mcpu=ck860*f* -mhard-float\"  }  }  */\n+/* { dg-options \"-mfpu=fpv3\" } */\n+\n+__fp16 funce(int a)\n+{\n+  return (__fp16)a;\n+}\n+\n+__fp16 funcf(unsigned int a)\n+{\n+  return (__fp16)a;\n+}\n+\n+float funca(int a)\n+{\n+  return (float)a;\n+}\n+\n+float funcb(unsigned int a)\n+{\n+  return (float)a;\n+}\n+\n+double funcc(int a)\n+{\n+  return (double)a;\n+}\n+\n+double funcd(unsigned int a)\n+{\n+  return (double)a;\n+}\n+\n+//double funch(short a)\n+//{\n+//  return (double)a;\n+//}\n+//\n+//double funci(unsigned short a)\n+//{\n+//  return (double)a;\n+//}\n+//\n+//float funcj(short a)\n+//{\n+//  return (float)a;\n+//}\n+//\n+//float funck(unsigned short a)\n+//{\n+//  return (float)a;\n+//}\n+\n+__fp16 funcm(short a)\n+{\n+  return (__fp16)a;\n+}\n+\n+__fp16 funcn(unsigned short a)\n+{\n+  return (__fp16)a;\n+}\n+\n+/* { dg-final { scan-assembler \"fitof\\.s32\\.f16\" } }*/\n+/* { dg-final { scan-assembler \"fitof\\.u32\\.f16\" } }*/\n+/* { dg-final { scan-assembler \"fitof\\.s32\\.f32\" } }*/\n+/* { dg-final { scan-assembler \"fitof\\.u32\\.f32\" } }*/\n+/* { dg-final { scan-assembler \"fitof\\.s32\\.f64\" } }*/\n+/* { dg-final { scan-assembler \"fitof\\.u32\\.f64\" } }*/\n+/* { dg-final { scan-assembler \"fitof\\.s16\\.f16\" } }*/\n+/* { dg-final { scan-assembler \"fitof\\.u16\\.f16\" } }*/"}, {"sha": "1aa87b19b3ed35f05642871c099e1a75230c1b39", "filename": "gcc/testsuite/gcc.target/csky/fpuv3/fpv3_fmov.c", "status": "added", "additions": 96, "deletions": 0, "changes": 96, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1185ea88a0051b3ce9f44cde900bfef6526b568/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_fmov.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1185ea88a0051b3ce9f44cde900bfef6526b568/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_fmov.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_fmov.c?ref=f1185ea88a0051b3ce9f44cde900bfef6526b568", "patch": "@@ -0,0 +1,96 @@\n+/* { dg-do compile } */\n+/* { dg-skip-if  \"test is specific to ck860f\"  { csky-*-* }  { \"*\" }  { \"-mcpu=ck860*f* -mfloat-abi=hard\" \"-mcpu=ck860*f* -mhard-float\"  }  }  */\n+/* { dg-options \"-O2 -mfpu=fpv3\" } */\n+\n+#define FUNC(i) func_ ## i\n+\n+#define FTYPE __fp16\n+FTYPE FUNC(ld16) (FTYPE *a, FTYPE *b)\n+{\n+  return *a = *b;\n+}\n+\n+/* { dg-final { scan-assembler \"fld\\.16\" } }*/\n+/* { dg-final { scan-assembler \"fst\\.16\" } }*/\n+\n+#undef FTYPE\n+#define FTYPE float\n+FTYPE FUNC(ld32) (FTYPE *a, FTYPE *b)\n+{\n+  return *a = *b;\n+}\n+\n+/* { dg-final { scan-assembler \"fld\\.32\" } }*/\n+/* { dg-final { scan-assembler \"fld\\.32\" } }*/\n+\n+#undef FTYPE\n+#define FTYPE double\n+FTYPE FUNC(ld64) (FTYPE *a, FTYPE *b)\n+{\n+  return *a = *b;\n+}\n+\n+/* { dg-final { scan-assembler \"fld\\.64\" } }*/\n+/* { dg-final { scan-assembler \"fst\\.64\" } }*/\n+\n+\n+#undef FTYPE\n+#define FTYPE __fp16\n+FTYPE FUNC(ldr16) (FTYPE *a, int i, FTYPE *b)\n+{\n+  return a[i] = b[i];\n+}\n+\n+/* { dg-final { scan-assembler \"fldr\\.16\" } }*/\n+/* { dg-final { scan-assembler \"fstr\\.16\" } }*/\n+\n+#undef FTYPE\n+#define FTYPE float\n+FTYPE FUNC(ldr32) (FTYPE *a, int i, FTYPE *b)\n+{\n+  return a[i] = b[i];\n+}\n+\n+/* { dg-final { scan-assembler \"fldr\\.32\" } }*/\n+/* { dg-final { scan-assembler \"fstr\\.32\" } }*/\n+\n+#undef FTYPE\n+#define FTYPE double\n+FTYPE FUNC(ldr64) (FTYPE *a, int i, FTYPE *b)\n+{\n+  return a[i] = b[i];\n+}\n+\n+/* { dg-final { scan-assembler \"fldr\\.64\" } }*/\n+/* { dg-final { scan-assembler \"fstr\\.64\" } }*/\n+\n+\n+#undef FTYPE\n+#define FTYPE __fp16\n+FTYPE FUNC(mov16) (FTYPE a, FTYPE b)\n+{\n+  a = b;\n+  return a;\n+}\n+\n+/* { dg-final { scan-assembler \"fmov\\.16\" } }*/\n+\n+#undef FTYPE\n+#define FTYPE float\n+FTYPE FUNC(mov32) (FTYPE a, FTYPE b)\n+{\n+  a = b;\n+  return a;\n+}\n+\n+/* { dg-final { scan-assembler \"fmov\\.32\" } }*/\n+\n+#undef FTYPE\n+#define FTYPE double\n+FTYPE FUNC(mov64) (FTYPE a, FTYPE b)\n+{\n+  a = b;\n+  return a;\n+}\n+\n+/* { dg-final { scan-assembler \"fmov\\.64\" } }*/"}, {"sha": "5fbc011607d1843957118241d8c4170314db4c21", "filename": "gcc/testsuite/gcc.target/csky/fpuv3/fpv3_fmovi.c", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1185ea88a0051b3ce9f44cde900bfef6526b568/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_fmovi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1185ea88a0051b3ce9f44cde900bfef6526b568/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_fmovi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_fmovi.c?ref=f1185ea88a0051b3ce9f44cde900bfef6526b568", "patch": "@@ -0,0 +1,31 @@\n+/* { dg-do compile } */\n+/* { dg-skip-if  \"test is specific to ck860f\"  { csky-*-* }  { \"*\" }  { \"-mcpu=ck860*f* -mfloat-abi=hard\" \"-mcpu=ck860*f* -mhard-float\"  }  }  */\n+/* { dg-options \"-O2 -mfpu=fpv3\" } */\n+\n+#define FUNC(i) func_ ## i\n+\n+#define FTYPE __fp16\n+FTYPE FUNC(movi16) (void)\n+{\n+  return 1.0;\n+}\n+\n+/* { dg-final { scan-assembler \"fmovi\\.16\" } }*/\n+\n+#undef FTYPE\n+#define FTYPE float\n+FTYPE FUNC(movi32) (void)\n+{\n+  return 1.0;\n+}\n+\n+/* { dg-final { scan-assembler \"fmovi\\.32\" } }*/\n+\n+#undef FTYPE\n+#define FTYPE double\n+FTYPE FUNC(movi64) (void)\n+{\n+  return 1.0;\n+}\n+\n+/* { dg-final { scan-assembler \"fmovi\\.64\" } }*/"}, {"sha": "078ebc761b4382c8742f025d7cd1c95106589dab", "filename": "gcc/testsuite/gcc.target/csky/fpuv3/fpv3_fmula.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1185ea88a0051b3ce9f44cde900bfef6526b568/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_fmula.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1185ea88a0051b3ce9f44cde900bfef6526b568/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_fmula.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_fmula.c?ref=f1185ea88a0051b3ce9f44cde900bfef6526b568", "patch": "@@ -0,0 +1,23 @@\n+/* { dg-do compile } */\n+/* { dg-skip-if  \"test is specific to ck860f\"  { csky-*-* }  { \"*\" }  { \"-mcpu=ck860*f* -mfloat-abi=hard\" \"-mcpu=ck860*f* -mhard-float\"  }  }  */\n+/* { dg-options \"-O2 -mfpu=fpv3\" } */\n+\n+__fp16 func16(__fp16 a, __fp16 b, __fp16 c){\n+  a += b * c;\n+  return a;\n+}\n+\n+float func32(float a, float b, float c){\n+  a += b * c;\n+  return a;\n+}\n+\n+\n+double func64(double a, double b, double c){\n+  a += b * c;\n+  return a;\n+}\n+\n+/* { dg-final { scan-assembler \"ffmula\\.16\" } }*/\n+/* { dg-final { scan-assembler \"ffmula\\.32\" } }*/\n+/* { dg-final { scan-assembler \"ffmula\\.64\" } }*/"}, {"sha": "efc80bc31a74b3dab74027ad15ad9bb7b3890964", "filename": "gcc/testsuite/gcc.target/csky/fpuv3/fpv3_fmuls.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1185ea88a0051b3ce9f44cde900bfef6526b568/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_fmuls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1185ea88a0051b3ce9f44cde900bfef6526b568/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_fmuls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_fmuls.c?ref=f1185ea88a0051b3ce9f44cde900bfef6526b568", "patch": "@@ -0,0 +1,23 @@\n+/* { dg-do compile } */\n+/* { dg-skip-if  \"test is specific to ck860f\"  { csky-*-* }  { \"*\" }  { \"-mcpu=ck860*f* -mfloat-abi=hard\" \"-mcpu=ck860*f* -mhard-float\"  }  }  */\n+/* { dg-options \"-O2 -mfpu=fpv3\" } */\n+\n+__fp16 func16(__fp16 a, __fp16 b, __fp16 c){\n+  a -= b * c;\n+  return a;\n+}\n+\n+float func32(float a, float b, float c){\n+  a -= b * c;\n+  return a;\n+}\n+\n+\n+double func64(double a, double b, double c){\n+  a -= b * c;\n+  return a;\n+}\n+\n+/* { dg-final { scan-assembler \"ffmuls\\.16\" } }*/\n+/* { dg-final { scan-assembler \"ffmuls\\.32\" } }*/\n+/* { dg-final { scan-assembler \"ffmuls\\.64\" } }*/"}, {"sha": "9941cf848d46662ed3db9cf0b34516ced19d8c7f", "filename": "gcc/testsuite/gcc.target/csky/fpuv3/fpv3_fneg.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1185ea88a0051b3ce9f44cde900bfef6526b568/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_fneg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1185ea88a0051b3ce9f44cde900bfef6526b568/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_fneg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_fneg.c?ref=f1185ea88a0051b3ce9f44cde900bfef6526b568", "patch": "@@ -0,0 +1,22 @@\n+/* { dg-do compile } */\n+/* { dg-skip-if  \"test is specific to ck860f\"  { csky-*-* }  { \"*\" }  { \"-mcpu=ck860*f* -mfloat-abi=hard\" \"-mcpu=ck860*f* -mhard-float\"  }  }  */\n+/* { dg-options \"-mfpu=fpv3\" } */\n+\n+__fp16 func16(__fp16 a)\n+{\n+  return -a;\n+}\n+\n+float func32(float a)\n+{\n+  return -a;\n+}\n+\n+double func64(double a)\n+{\n+  return -a;\n+}\n+\n+/* { dg-final { scan-assembler \"fneg\\.32\" } }*/\n+/* { dg-final { scan-assembler \"fneg\\.64\" } }*/\n+"}, {"sha": "6770d2938819491279319cf5be3c1a3001eed5c9", "filename": "gcc/testsuite/gcc.target/csky/fpuv3/fpv3_fnmula.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1185ea88a0051b3ce9f44cde900bfef6526b568/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_fnmula.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1185ea88a0051b3ce9f44cde900bfef6526b568/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_fnmula.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_fnmula.c?ref=f1185ea88a0051b3ce9f44cde900bfef6526b568", "patch": "@@ -0,0 +1,14 @@\n+/* { dg-do compile } */\n+/* { dg-skip-if  \"test is specific to ck860f\"  { csky-*-* }  { \"*\" }  { \"-mcpu=ck860*f* -mfloat-abi=hard\" \"-mcpu=ck860*f* -mhard-float\"  }  }  */\n+/* { dg-options \"-O2\" } */\n+\n+float fnmula32(float a, float b, float c){\n+  return -(a + b * c);\n+}\n+\n+double fnmula64(double a, double b, double c){\n+  return -(a + b * c);\n+}\n+\n+/* { dg-final { scan-assembler \"ffnmula\\.32\" } }*/\n+/* { dg-final { scan-assembler \"ffnmula\\.64\" } }*/"}, {"sha": "86ba96be24f8ec288e414baf5d9e5eccc0d4e3e1", "filename": "gcc/testsuite/gcc.target/csky/fpuv3/fpv3_fnmuls.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1185ea88a0051b3ce9f44cde900bfef6526b568/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_fnmuls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1185ea88a0051b3ce9f44cde900bfef6526b568/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_fnmuls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_fnmuls.c?ref=f1185ea88a0051b3ce9f44cde900bfef6526b568", "patch": "@@ -0,0 +1,14 @@\n+/* { dg-do compile } */\n+/* { dg-skip-if  \"test is specific to ck860f\"  { csky-*-* }  { \"*\" }  { \"-mcpu=ck860*f* -mfloat-abi=hard\" \"-mcpu=ck860*f* -mhard-float\"  }  }  */\n+/* { dg-options \"-O2\" } */\n+\n+float fnmula32(float a, float b, float c){\n+  return -a + b * c;\n+}\n+\n+double fnmula64(double a, double b, double c){\n+  return -a + b * c;\n+}\n+\n+/* { dg-final { scan-assembler \"ffnmuls\\.32\" } }*/\n+/* { dg-final { scan-assembler \"ffnmuls\\.64\" } }*/"}, {"sha": "d4a615c7b82ef6e605d5bd58b8c6299cc8833405", "filename": "gcc/testsuite/gcc.target/csky/fpuv3/fpv3_fstod.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1185ea88a0051b3ce9f44cde900bfef6526b568/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_fstod.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1185ea88a0051b3ce9f44cde900bfef6526b568/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_fstod.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_fstod.c?ref=f1185ea88a0051b3ce9f44cde900bfef6526b568", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile } */\n+/* { dg-skip-if  \"test is specific to ck860f\"  { csky-*-* }  { \"*\" }  { \"-mcpu=ck860*f* -mfloat-abi=hard\" \"-mcpu=ck860*f* -mhard-float\"  }  }  */\n+/* { dg-options \"\" } */\n+\n+double func(float a)\n+{\n+  return (double)a;\n+}\n+\n+/* { dg-final { scan-assembler \"fstod\" } }*/\n+"}, {"sha": "1333c413507c4f1f02a2d2165a3f5414384a6c04", "filename": "gcc/testsuite/gcc.target/csky/fpuv3/fpv3_fstoh.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1185ea88a0051b3ce9f44cde900bfef6526b568/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_fstoh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1185ea88a0051b3ce9f44cde900bfef6526b568/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_fstoh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_fstoh.c?ref=f1185ea88a0051b3ce9f44cde900bfef6526b568", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile } */\n+/* { dg-skip-if  \"test is specific to ck860f\"  { csky-*-* }  { \"*\" }  { \"-mcpu=ck860*f* -mfloat-abi=hard\" \"-mcpu=ck860*f* -mhard-float\"  }  }  */\n+/* { dg-options \"-mfpu=fpv3\" } */\n+\n+__fp16 func(float a)\n+{\n+  return (__fp16)a;\n+}\n+\n+/* { dg-final { scan-assembler \"fstoh\" } }*/\n+"}, {"sha": "914b2e627d199d6da9c2405733acd82082d252b5", "filename": "gcc/testsuite/gcc.target/csky/fpuv3/fpv3_fsub.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1185ea88a0051b3ce9f44cde900bfef6526b568/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_fsub.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1185ea88a0051b3ce9f44cde900bfef6526b568/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_fsub.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_fsub.c?ref=f1185ea88a0051b3ce9f44cde900bfef6526b568", "patch": "@@ -0,0 +1,23 @@\n+/* { dg-do compile } */\n+/* { dg-skip-if  \"test is specific to ck860f\"  { csky-*-* }  { \"*\" }  { \"-mcpu=ck860*f* -mfloat-abi=hard\" \"-mcpu=ck860*f* -mhard-float\"  }  }  */\n+/* { dg-options \"-mfpu=fpv3\" } */\n+\n+__fp16 funch(__fp16 a, __fp16 b)\n+{\n+  return a - b;\n+}\n+\n+float funcs(float a, float b)\n+{\n+  return a - b;\n+}\n+\n+double funcd(double a, double b)\n+{\n+  return a - b;\n+}\n+\n+/* { dg-final { scan-assembler \"fsub\\.16\" } }*/\n+/* { dg-final { scan-assembler \"fsub\\.32\" } }*/\n+/* { dg-final { scan-assembler \"fsub\\.64\" } }*/\n+"}, {"sha": "d5182a72e6ffe9d21063a5e290543302968c73b3", "filename": "gcc/testsuite/gcc.target/csky/fpuv3/fpv3_fxtof.c", "status": "added", "additions": 76, "deletions": 0, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1185ea88a0051b3ce9f44cde900bfef6526b568/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_fxtof.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1185ea88a0051b3ce9f44cde900bfef6526b568/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_fxtof.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_fxtof.c?ref=f1185ea88a0051b3ce9f44cde900bfef6526b568", "patch": "@@ -0,0 +1,76 @@\n+/* { dg-do compile } */\n+/* { dg-skip-if  \"test is specific to ck860f\"  { csky-*-* }  { \"*\" }  { \"-mcpu=ck860*f* -mfloat-abi=hard\" \"-mcpu=ck860*f* -mhard-float\"  }  }  */\n+/* { dg-options \"-O1\" } */\n+\n+//__fp16\n+//fixed32_to_float16 (int i)\n+//{\n+//  return ((__fp16) i / (1 << 15));\n+//}\n+//\n+//__fp16\n+//fixedu32_to_float16 (unsigned int i)\n+//{\n+//  return ((__fp16) i / (1 << 15));\n+//}\n+//\n+//float\n+//fixed32_to_float32 (int i)\n+//{\n+//  return ((float) i / (1 << 30));\n+//}\n+//\n+//\n+//float\n+//fixedu32_to_float32 (unsigned int i)\n+//{\n+//  return ((float) i / (1 << 30));\n+//}\n+//\n+//double\n+//fixed32_to_float64 (int i)\n+//{\n+//  return ((double) i / (1 << 30));\n+//}\n+//\n+//double\n+//fixedu32_to_float64 (unsigned int i)\n+//{\n+//  return ((double) i / (1 << 30));\n+//}\n+//\n+//__fp16\n+//fixed16_to_float16 (short i)\n+//{\n+//  return ((__fp16) i / (1 << 15));\n+//}\n+//\n+//__fp16\n+//fixedu16_to_float16 (unsigned short i)\n+//{\n+//  return ((__fp16) i / (1 << 15));\n+//}\n+//\n+//float\n+//fixed16_to_float32 (short i)\n+//{\n+//  return ((float) i / (1 << 16));\n+//}\n+//\n+//float\n+//fixedu16_to_float32 (unsigned short i)\n+//{\n+//  return ((float) i / (1 << 16));\n+//}\n+//\n+//double\n+//fixed16_to_float64 (short i)\n+//{\n+//  return ((double) i / (1 << 16));\n+//}\n+//\n+//double\n+//fixedu16_to_float64 (unsigned short i)\n+//{\n+//  return ((double) i / (1 << 16));\n+//}"}, {"sha": "c2e76d04f5f735807d0d646eb0850a466fc4d581", "filename": "gcc/testsuite/gcc.target/csky/fpuv3/fpv3_h.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1185ea88a0051b3ce9f44cde900bfef6526b568/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_h.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1185ea88a0051b3ce9f44cde900bfef6526b568/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_h.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_h.c?ref=f1185ea88a0051b3ce9f44cde900bfef6526b568", "patch": "@@ -0,0 +1,20 @@\n+/* { dg-do compile } */\n+/* { dg-skip-if  \"test is specific to ck860f\"  { csky-*-* }  { \"*\" }  { \"-mcpu=ck860*f* -mfloat-abi=hard\" \"-mcpu=ck860*f* -mhard-float\"  }  }  */\n+/* { dg-options \"\" } */\n+\n+float fh32(float a, float b, float c, float d){\n+  if(a > b)\n+    return c;\n+\n+  return d;\n+}\n+\n+double fh64(double a, double b, double c, double d){\n+  if( a > b)\n+    return c;\n+  return d;\n+}\n+\n+/* { dg-final { scan-assembler \"fcmplt\\.32\" } }*/\n+/* { dg-final { scan-assembler \"fcmplt\\.64\" } }*/\n+"}, {"sha": "ecfaa63de98dbf629f1a1f5677b2ec9937416cdb", "filename": "gcc/testsuite/gcc.target/csky/fpuv3/fpv3_hs.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1185ea88a0051b3ce9f44cde900bfef6526b568/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_hs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1185ea88a0051b3ce9f44cde900bfef6526b568/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_hs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_hs.c?ref=f1185ea88a0051b3ce9f44cde900bfef6526b568", "patch": "@@ -0,0 +1,19 @@\n+/* { dg-do compile } */\n+/* { dg-skip-if  \"test is specific to ck860f\"  { csky-*-* }  { \"*\" }  { \"-mcpu=ck860*f* -mfloat-abi=hard\" \"-mcpu=ck860*f* -mhard-float\"  }  }  */\n+/* { dg-options \"\" } */\n+\n+float fhs32(float a, float b, float c, float d){\n+  if(a >= b)\n+    return c;\n+  return d;\n+}\n+\n+double fhs64(double a, double b, double c, double d){\n+  if( a >= b)\n+    return c;\n+  return d;\n+}\n+\n+/* { dg-final { scan-assembler \"fcmphs\\.32\" } }*/\n+/* { dg-final { scan-assembler \"fcmphs\\.64\" } }*/\n+"}, {"sha": "530a4bea7ec1859c760073fac698b1d0fd7ffd3f", "filename": "gcc/testsuite/gcc.target/csky/fpuv3/fpv3_hsz.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1185ea88a0051b3ce9f44cde900bfef6526b568/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_hsz.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1185ea88a0051b3ce9f44cde900bfef6526b568/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_hsz.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_hsz.c?ref=f1185ea88a0051b3ce9f44cde900bfef6526b568", "patch": "@@ -0,0 +1,21 @@\n+/* { dg-do compile } */\n+/* { dg-skip-if  \"test is specific to ck860f\"  { csky-*-* }  { \"*\" }  { \"-mcpu=ck860*f* -mfloat-abi=hard\" \"-mcpu=ck860*f* -mhard-float\"  }  }  */\n+/* { dg-options \"\" } */\n+\n+float fhsz32(float a, float b, float c){\n+  if(a >= 0.0f)\n+    return b;\n+  else\n+    return c;\n+}\n+\n+double fhsz64(double a, double b, double c){\n+  if( a >= 0.0)\n+    return b;\n+  else\n+    return c;\n+}\n+\n+/* { dg-final { scan-assembler \"fcmphsz\\.32\" } }*/\n+/* { dg-final { scan-assembler \"fcmphsz\\.64\" } }*/\n+"}, {"sha": "a2a8d8f18f70af5d3c1a330e1e0f48f3c2acaaec", "filename": "gcc/testsuite/gcc.target/csky/fpuv3/fpv3_hz.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1185ea88a0051b3ce9f44cde900bfef6526b568/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_hz.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1185ea88a0051b3ce9f44cde900bfef6526b568/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_hz.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_hz.c?ref=f1185ea88a0051b3ce9f44cde900bfef6526b568", "patch": "@@ -0,0 +1,20 @@\n+/* { dg-do compile } */\n+/* { dg-skip-if  \"test is specific to ck860f\"  { csky-*-* }  { \"*\" }  { \"-mcpu=ck860*f* -mfloat-abi=hard\" \"-mcpu=ck860*f* -mhard-float\"  }  }  */\n+/* { dg-options \"-O2\" } */\n+\n+float fhz32(float a, float b, float c){\n+  if(a > 0.0f)\n+    return b;\n+  else\n+    return c;\n+}\n+\n+double fhz64(double a, double b, double c){\n+  if( a > 0.0)\n+    return b;\n+  else\n+    return c;\n+}\n+\n+/* { dg-final { scan-assembler \"fcmphz\\.32\" } }*/\n+/* { dg-final { scan-assembler \"fcmphz\\.64\" } }*/"}, {"sha": "3bb6ac63fe0794b0d1538df2b02f3a1b3d675e97", "filename": "gcc/testsuite/gcc.target/csky/fpuv3/fpv3_ls.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1185ea88a0051b3ce9f44cde900bfef6526b568/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_ls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1185ea88a0051b3ce9f44cde900bfef6526b568/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_ls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_ls.c?ref=f1185ea88a0051b3ce9f44cde900bfef6526b568", "patch": "@@ -0,0 +1,19 @@\n+/* { dg-do compile } */\n+/* { dg-skip-if  \"test is specific to ck860f\"  { csky-*-* }  { \"*\" }  { \"-mcpu=ck860*f* -mfloat-abi=hard\" \"-mcpu=ck860*f* -mhard-float\"  }  }  */\n+/* { dg-options \"-O2\" } */\n+\n+float fls32(float a, float b, float c, float d){\n+  if(a <= b)\n+    return c;\n+\n+  return d;\n+}\n+\n+double fhz64(double a, double b, double c, double d){\n+  if( a <= b)\n+    return c;\n+  return d;\n+}\n+\n+/* { dg-final { scan-assembler \"fcmphs\\.32\" } }*/\n+/* { dg-final { scan-assembler \"fcmphs\\.64\" } }*/"}, {"sha": "6e19efac458e30e505b47c9d33f707fd4db70b2a", "filename": "gcc/testsuite/gcc.target/csky/fpuv3/fpv3_lsz.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1185ea88a0051b3ce9f44cde900bfef6526b568/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_lsz.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1185ea88a0051b3ce9f44cde900bfef6526b568/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_lsz.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_lsz.c?ref=f1185ea88a0051b3ce9f44cde900bfef6526b568", "patch": "@@ -0,0 +1,20 @@\n+/* { dg-do compile } */\n+/* { dg-skip-if  \"test is specific to ck860f\"  { csky-*-* }  { \"*\" }  { \"-mcpu=ck860*f* -mfloat-abi=hard\" \"-mcpu=ck860*f* -mhard-float\"  }  }  */\n+/* { dg-options \"-O2\" } */\n+\n+float flsz32(float a, float b, float c){\n+  if(a <= 0.0f)\n+    return b;\n+  else\n+    return c;\n+}\n+\n+double fhz64(double a, double b, double c){\n+  if( a <= 0.0)\n+    return b;\n+  else\n+    return c;\n+}\n+\n+/* { dg-final { scan-assembler \"fcmplsz\\.32\" } }*/\n+/* { dg-final { scan-assembler \"fcmplsz\\.64\" } }*/"}, {"sha": "e4a716f0c86b59a48c7b11e9ceddb258340b9daf", "filename": "gcc/testsuite/gcc.target/csky/fpuv3/fpv3_lt.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1185ea88a0051b3ce9f44cde900bfef6526b568/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_lt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1185ea88a0051b3ce9f44cde900bfef6526b568/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_lt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_lt.c?ref=f1185ea88a0051b3ce9f44cde900bfef6526b568", "patch": "@@ -0,0 +1,19 @@\n+/* { dg-do compile } */\n+/* { dg-skip-if  \"test is specific to ck860f\"  { csky-*-* }  { \"*\" }  { \"-mcpu=ck860*f* -mfloat-abi=hard\" \"-mcpu=ck860*f* -mhard-float\"  }  }  */\n+/* { dg-options \"\" } */\n+\n+float flt32(float a, float b, float c, float d){\n+  if(a < b)\n+    return c;\n+  return d;\n+}\n+\n+double flt64(double a, double b, double c, double d){\n+  if( a < b)\n+    return c;\n+  return d;\n+}\n+\n+/* { dg-final { scan-assembler \"fcmplt\\.32\" } }*/\n+/* { dg-final { scan-assembler \"fcmplt\\.64\" } }*/\n+"}, {"sha": "984079c7bdc94f07f3efc3680c77aedd33a64796", "filename": "gcc/testsuite/gcc.target/csky/fpuv3/fpv3_ltz.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1185ea88a0051b3ce9f44cde900bfef6526b568/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_ltz.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1185ea88a0051b3ce9f44cde900bfef6526b568/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_ltz.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_ltz.c?ref=f1185ea88a0051b3ce9f44cde900bfef6526b568", "patch": "@@ -0,0 +1,20 @@\n+/* { dg-do compile } */\n+/* { dg-skip-if  \"test is specific to ck860f\"  { csky-*-* }  { \"*\" }  { \"-mcpu=ck860*f* -mfloat-abi=hard\" \"-mcpu=ck860*f* -mhard-float\"  }  }  */\n+/* { dg-options \"-O2\" } */\n+\n+float fltz32(float a, float b, float c){\n+  if(a < 0.0f)\n+    return b;\n+  else\n+    return c;\n+}\n+\n+double fltz64(double a, double b, double c){\n+  if( a < 0.0)\n+    return b;\n+  else\n+    return c;\n+}\n+\n+/* { dg-final { scan-assembler \"fcmpltz\\.32\" } }*/\n+/* { dg-final { scan-assembler \"fcmpltz\\.64\" } }*/"}, {"sha": "32fb74e449aca1e13c110bbd2ce49ff8f27d9308", "filename": "gcc/testsuite/gcc.target/csky/fpuv3/fpv3_max.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1185ea88a0051b3ce9f44cde900bfef6526b568/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_max.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1185ea88a0051b3ce9f44cde900bfef6526b568/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_max.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_max.c?ref=f1185ea88a0051b3ce9f44cde900bfef6526b568", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile } */\n+/* { dg-skip-if  \"test is specific to ck860f\"  { csky-*-* }  { \"*\" }  { \"-mcpu=ck860*f* -mfloat-abi=hard\" \"-mcpu=ck860*f* -mhard-float\"  }  }  */\n+/* { dg-options \"-O2\" } */\n+\n+extern float fmaxf( float x, float y );\n+float fmax32(float a, float b){\n+  return fmaxf(a, b);\n+}\n+\n+extern double fmax( double x, double y );\n+double fmax64(double a, double b){\n+  return fmax(a, b);\n+}\n+\n+/* { dg-final { scan-assembler \"fmaxnm\\.32\" } }*/\n+/* { dg-final { scan-assembler \"fmaxnm\\.64\" } }*/"}, {"sha": "95c087859ae044952decf14d6b84be26365fd528", "filename": "gcc/testsuite/gcc.target/csky/fpuv3/fpv3_min.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1185ea88a0051b3ce9f44cde900bfef6526b568/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_min.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1185ea88a0051b3ce9f44cde900bfef6526b568/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_min.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_min.c?ref=f1185ea88a0051b3ce9f44cde900bfef6526b568", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile } */\n+/* { dg-skip-if  \"test is specific to ck860f\"  { csky-*-* }  { \"*\" }  { \"-mcpu=ck860*f* -mfloat-abi=hard\" \"-mcpu=ck860*f* -mhard-float\"  }  }  */\n+/* { dg-options \"-O2\" } */\n+\n+extern float fminf( float x, float y );\n+float fmin32(float a, float b){\n+  return fminf(a, b);\n+}\n+\n+extern double fmin( double x, double y );\n+double fmin64(double a, double b){\n+  return fmin(a, b);\n+}\n+\n+/* { dg-final { scan-assembler \"fminnm\\.32\" } }*/\n+/* { dg-final { scan-assembler \"fminnm\\.64\" } }*/"}, {"sha": "a168dc7ca6edaa12fbfeef6f1bf9732644e2f3ca", "filename": "gcc/testsuite/gcc.target/csky/fpuv3/fpv3_mul.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1185ea88a0051b3ce9f44cde900bfef6526b568/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_mul.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1185ea88a0051b3ce9f44cde900bfef6526b568/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_mul.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_mul.c?ref=f1185ea88a0051b3ce9f44cde900bfef6526b568", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do compile } */\n+/* { dg-skip-if  \"test is specific to ck860f\"  { csky-*-* }  { \"*\" }  { \"-mcpu=ck860*f* -mfloat-abi=hard\" \"-mcpu=ck860*f* -mhard-float\"  }  }  */\n+/* { dg-options \"\" } */\n+\n+float mul32(float a, float b){\n+  return a*b;\n+}\n+\n+double mul64(double a, double b){\n+  return a*b;\n+}\n+\n+/* { dg-final { scan-assembler \"fmul\\.32\" } }*/\n+/* { dg-final { scan-assembler \"fmul\\.64\" } }*/\n+"}, {"sha": "f78534e61f6a666cedec5be4e1f95e14529d790b", "filename": "gcc/testsuite/gcc.target/csky/fpuv3/fpv3_mula.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1185ea88a0051b3ce9f44cde900bfef6526b568/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_mula.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1185ea88a0051b3ce9f44cde900bfef6526b568/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_mula.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_mula.c?ref=f1185ea88a0051b3ce9f44cde900bfef6526b568", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile } */\n+/* { dg-skip-if  \"test is specific to ck860f\"  { csky-*-* }  { \"*\" }  { \"-mcpu=ck860*f* -mfloat-abi=hard\" \"-mcpu=ck860*f* -mhard-float\"  }  }  */\n+/* { dg-options \"-O2\" } */\n+\n+float func32(float a, float b, float c){\n+  a += b * c;\n+  return a;\n+}\n+\n+double func64(double a, double b, double c){\n+  a += b * c;\n+  return a;\n+}\n+\n+/* { dg-final { scan-assembler \"fmula\\.32\" } }*/\n+/* { dg-final { scan-assembler \"fmula\\.64\" } }*/"}, {"sha": "f144e458e4cc38ffee1d02f7fca6f6e6e0ca5860", "filename": "gcc/testsuite/gcc.target/csky/fpuv3/fpv3_muls.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1185ea88a0051b3ce9f44cde900bfef6526b568/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_muls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1185ea88a0051b3ce9f44cde900bfef6526b568/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_muls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_muls.c?ref=f1185ea88a0051b3ce9f44cde900bfef6526b568", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile } */\n+/* { dg-skip-if  \"test is specific to ck860f\"  { csky-*-* }  { \"*\" }  { \"-mcpu=ck860*f* -mfloat-abi=hard\" \"-mcpu=ck860*f* -mhard-float\"  }  }  */\n+/* { dg-options \"-O2\" } */\n+\n+float muls32(float a, float b, float c){\n+  a -= b * c;\n+  return a;\n+}\n+\n+double muls64(double a, double b, double c){\n+  a -= b * c;\n+  return a;\n+}\n+\n+/* { dg-final { scan-assembler \"fmuls\\.32\" } }*/\n+/* { dg-final { scan-assembler \"fmuls\\.64\" } }*/"}, {"sha": "c24f0ceb18bf0d50492f407aef0fc7f1b3515338", "filename": "gcc/testsuite/gcc.target/csky/fpuv3/fpv3_ne.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1185ea88a0051b3ce9f44cde900bfef6526b568/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_ne.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1185ea88a0051b3ce9f44cde900bfef6526b568/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_ne.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_ne.c?ref=f1185ea88a0051b3ce9f44cde900bfef6526b568", "patch": "@@ -0,0 +1,19 @@\n+/* { dg-do compile } */\n+/* { dg-skip-if  \"test is specific to ck860f\"  { csky-*-* }  { \"*\" }  { \"-mcpu=ck860*f* -mfloat-abi=hard\" \"-mcpu=ck860*f* -mhard-float\"  }  }  */\n+/* { dg-options \"\" } */\n+\n+float fne32(float a, float b, float c, float d){\n+  if(a != b)\n+    return c;\n+  return d;\n+}\n+\n+double fne64(double a, double b, double c, double d){\n+  if( a != b)\n+    return c;\n+  return d;\n+}\n+\n+/* { dg-final { scan-assembler \"fcmpne\\.32\" } }*/\n+/* { dg-final { scan-assembler \"fcmpne\\.64\" } }*/\n+"}, {"sha": "348211d5bf85934d2de2e5a313db83aa19a577dc", "filename": "gcc/testsuite/gcc.target/csky/fpuv3/fpv3_nez.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1185ea88a0051b3ce9f44cde900bfef6526b568/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_nez.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1185ea88a0051b3ce9f44cde900bfef6526b568/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_nez.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_nez.c?ref=f1185ea88a0051b3ce9f44cde900bfef6526b568", "patch": "@@ -0,0 +1,21 @@\n+/* { dg-do compile } */\n+/* { dg-skip-if  \"test is specific to ck860f\"  { csky-*-* }  { \"*\" }  { \"-mcpu=ck860*f* -mfloat-abi=hard\" \"-mcpu=ck860*f* -mhard-float\"  }  }  */\n+/* { dg-options \"\" } */\n+\n+float fnez32(float a, float b, float c){\n+  if(a != 0.0f)\n+    return b;\n+  else\n+    return c;\n+}\n+\n+double fnez64(double a, double b, double c){\n+  if( a != 0.0)\n+    return b;\n+  else\n+    return c;\n+}\n+\n+/* { dg-final { scan-assembler \"fcmpnez\\.32\" } }*/\n+/* { dg-final { scan-assembler \"fcmpnez\\.64\" } }*/\n+"}, {"sha": "cadd367108a2be82dcbacc730e92a88a0cbcfb2f", "filename": "gcc/testsuite/gcc.target/csky/fpuv3/fpv3_recip.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1185ea88a0051b3ce9f44cde900bfef6526b568/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_recip.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1185ea88a0051b3ce9f44cde900bfef6526b568/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_recip.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_recip.c?ref=f1185ea88a0051b3ce9f44cde900bfef6526b568", "patch": "@@ -0,0 +1,14 @@\n+/* { dg-do compile } */\n+/* { dg-skip-if  \"test is specific to ck860f\"  { csky-*-* }  { \"*\" }  { \"-mcpu=ck860*f* -mfloat-abi=hard\" \"-mcpu=ck860*f* -mhard-float\"  }  }  */\n+/* { dg-options \"\" } */\n+\n+float recip32(float a){\n+  return 1.0f/a;\n+}\n+\n+double recip64(double a){\n+  return 1.0/a;\n+}\n+\n+/* { dg-final { scan-assembler \"frecip\\.32\" } }*/\n+/* { dg-final { scan-assembler \"frecip\\.64\" } }*/"}, {"sha": "4d7990073aafa0d67ba480249aa539965355fcfb", "filename": "gcc/testsuite/gcc.target/csky/fpuv3/fpv3_sqrt.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1185ea88a0051b3ce9f44cde900bfef6526b568/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_sqrt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1185ea88a0051b3ce9f44cde900bfef6526b568/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_sqrt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_sqrt.c?ref=f1185ea88a0051b3ce9f44cde900bfef6526b568", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile } */\n+/* { dg-skip-if  \"test is specific to ck860f\"  { csky-*-* }  { \"*\" }  { \"-mcpu=ck860*f* -mfloat-abi=hard\" \"-mcpu=ck860*f* -mhard-float\"  }  }  */\n+/* { dg-options \"-O2\" } */\n+\n+float sqrtf(float);\n+float sqrt32(float a){\n+  return sqrtf(a);\n+}\n+\n+double sqrt(double);\n+double sqrt64(double a){\n+  return sqrt(a);\n+}\n+\n+/* { dg-final { scan-assembler \"fsqrt\\.32\" } }*/\n+/* { dg-final { scan-assembler \"fsqrt\\.64\" } }*/"}, {"sha": "3539eb46bbd6b9ed3b95dfd78e517e2607dbb0cd", "filename": "gcc/testsuite/gcc.target/csky/fpuv3/fpv3_unordered.c", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1185ea88a0051b3ce9f44cde900bfef6526b568/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_unordered.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1185ea88a0051b3ce9f44cde900bfef6526b568/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_unordered.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffpv3_unordered.c?ref=f1185ea88a0051b3ce9f44cde900bfef6526b568", "patch": "@@ -0,0 +1,29 @@\n+/* { dg-do compile } */\n+/* { dg-skip-if  \"test is specific to ck860f\"  { csky-*-* }  { \"*\" }  { \"-mcpu=ck860*f* -mfloat-abi=hard\" \"-mcpu=ck860*f* -mhard-float\"  }  }  */\n+/* { dg-options \"-O2\" } */\n+\n+int func32(float a, float b)\n+{\n+  return __builtin_isunordered(a, b);\n+}\n+\n+int func64(double a, double b)\n+{\n+  return __builtin_isunordered(a, b);\n+}\n+\n+/* { dg-final { scan-assembler \"fcmpuo\\.32\" } }*/\n+/* { dg-final { scan-assembler \"fcmpuo\\.64\" } }*/\n+\n+int func32z(float a)\n+{\n+  return __builtin_isunordered(a, 0);\n+}\n+\n+int func64z(double a)\n+{\n+  return __builtin_isunordered(a, 0);\n+}\n+\n+/* { dg-final { scan-assembler \"fcmpuoz\\.32\" } }*/\n+/* { dg-final { scan-assembler \"fcmpuoz\\.64\" } }*/"}]}