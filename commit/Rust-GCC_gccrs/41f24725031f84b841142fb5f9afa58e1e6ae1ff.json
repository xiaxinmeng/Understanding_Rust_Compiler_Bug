{"sha": "41f24725031f84b841142fb5f9afa58e1e6ae1ff", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDFmMjQ3MjUwMzFmODRiODQxMTQyZmI1ZjlhZmE1OGUxZTZhZTFmZg==", "commit": {"author": {"name": "Stefan Olsson", "email": "stefan@snon.net", "date": "2004-01-14T18:54:18Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2004-01-14T18:54:18Z"}, "message": "mt_allocator.h: Fixups.\n\n\n2004-01-14  Stefan Olsson  <stefan@snon.net>\n\n\t* include/ext/mt_allocator.h: Fixups.\n\t* testsuite/performance/allocator.cc: Enable __mt_alloc tests.\n\t* testsuite/performance/allocator_thread.cc: Same.\n\nFrom-SVN: r75875", "tree": {"sha": "d605563213405a7b3a66f17a14da56001a9fdd25", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d605563213405a7b3a66f17a14da56001a9fdd25"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/41f24725031f84b841142fb5f9afa58e1e6ae1ff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41f24725031f84b841142fb5f9afa58e1e6ae1ff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/41f24725031f84b841142fb5f9afa58e1e6ae1ff", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41f24725031f84b841142fb5f9afa58e1e6ae1ff/comments", "author": null, "committer": null, "parents": [{"sha": "f96540656c6cb530d90e14b2334c9ad3d153e76d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f96540656c6cb530d90e14b2334c9ad3d153e76d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f96540656c6cb530d90e14b2334c9ad3d153e76d"}], "stats": {"total": 31, "additions": 15, "deletions": 16}, "files": [{"sha": "2afafcaf9dbcd4d7db33265ae44de737d499d8b8", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41f24725031f84b841142fb5f9afa58e1e6ae1ff/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41f24725031f84b841142fb5f9afa58e1e6ae1ff/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=41f24725031f84b841142fb5f9afa58e1e6ae1ff", "patch": "@@ -1,3 +1,9 @@\n+2004-01-14  Stefan Olsson  <stefan@snon.net>\n+\n+\t* include/ext/mt_allocator.h: Fixups.\n+\t* testsuite/performance/allocator.cc: Enable __mt_alloc tests.\n+\t* testsuite/performance/allocator_thread.cc: Same.\n+\t\n 2004-01-13  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* testsuite/performance/ifstream_extract_float.cc: Add higher"}, {"sha": "5b69e6375aefe4a7132af11c996899cc260706e3", "filename": "libstdc++-v3/include/ext/mt_allocator.h", "status": "modified", "additions": 5, "deletions": 12, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41f24725031f84b841142fb5f9afa58e1e6ae1ff/libstdc%2B%2B-v3%2Finclude%2Fext%2Fmt_allocator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41f24725031f84b841142fb5f9afa58e1e6ae1ff/libstdc%2B%2B-v3%2Finclude%2Fext%2Fmt_allocator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fmt_allocator.h?ref=41f24725031f84b841142fb5f9afa58e1e6ae1ff", "patch": "@@ -232,7 +232,7 @@ namespace __gnu_cxx\n          * Requests larger than _S_max_bytes are handled by\n          * new/delete directly\n          */\n-        if (__n > _S_max_bytes)\n+        if (__n * sizeof(_Tp) > _S_max_bytes)\n           {\n             void* __ret = malloc(__n * sizeof(_Tp));\n             if (!__ret)\n@@ -263,7 +263,7 @@ namespace __gnu_cxx\n         /*\n          * Round up to power of 2 and figure out which bin to use\n          */\n-        size_t bin = _S_binmap[__n];\n+        size_t bin = _S_binmap[__n * sizeof(_Tp)];\n \n #ifdef __GTHREADS\n         size_t thread_id = _S_get_thread_id();\n@@ -408,7 +408,7 @@ namespace __gnu_cxx\n          * Requests larger than _S_max_bytes are handled by\n          * malloc/free directly\n          */\n-        if (__n > _S_max_bytes)\n+        if (__n * sizeof(_Tp) > _S_max_bytes)\n           {\n             free(__p);\n             return;\n@@ -417,7 +417,7 @@ namespace __gnu_cxx\n         /*\n          * Round up to power of 2 and figure out which bin to use\n          */\n-        size_t bin = _S_binmap[__n];\n+        size_t bin = _S_binmap[__n * sizeof(_Tp)];\n \n #ifdef __GTHREADS\n         size_t thread_id = _S_get_thread_id();\n@@ -607,14 +607,8 @@ namespace __gnu_cxx\n \n           /*\n            * Initialize per thread key to hold pointer to\n-           * _S_thread_freelist NOTE! Here's an ugly workaround - if\n-           * _S_thread_key_destr is not explicitly called at least\n-           * once it won't be linked into the application. This is the\n-           * behavior of template methods and __gthread_key_create()\n-           * takes only a pointer to the function and does not cause\n-           * the compiler to create an instance.\n+           * _S_thread_freelist\n            */\n-          _S_thread_key_destr(NULL);\n           __gthread_key_create(&_S_thread_key, _S_thread_key_destr);\n         }\n #endif\n@@ -647,7 +641,6 @@ namespace __gnu_cxx\n \n           if (!_S_bin[bin].free)\n             __throw_bad_alloc();\n-\n           _S_bin[bin].used = (size_t*) malloc(sizeof(size_t) * __n);\n \n           if (!_S_bin[bin].used)"}, {"sha": "c7299fc5508106f9a6611efbd67d9bf817a5ffd4", "filename": "libstdc++-v3/testsuite/performance/allocator.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41f24725031f84b841142fb5f9afa58e1e6ae1ff/libstdc%2B%2B-v3%2Ftestsuite%2Fperformance%2Fallocator.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41f24725031f84b841142fb5f9afa58e1e6ae1ff/libstdc%2B%2B-v3%2Ftestsuite%2Fperformance%2Fallocator.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fperformance%2Fallocator.cc?ref=41f24725031f84b841142fb5f9afa58e1e6ae1ff", "patch": "@@ -133,12 +133,12 @@ int main(void)\n   calibrate_iterations<vector<test_type> >();\n   test_container(vector<test_type>());\n   test_container(vector<test_type, malloc_allocator<test_type> >());\n-  //test_container(vector<test_type, __mt_alloc<test_type> >());\n+  test_container(vector<test_type, __mt_alloc<test_type> >());\n \n   calibrate_iterations<list<test_type> >();\n   test_container(list<test_type>());\n   test_container(list<test_type, malloc_allocator<test_type> >());\n-  //test_container(list<test_type, __mt_alloc<test_type> >());\n+  test_container(list<test_type, __mt_alloc<test_type> >());\n \n   return 0;\n }"}, {"sha": "68da4d7bcc2751ddc6c35f6c282427b08c132d20", "filename": "libstdc++-v3/testsuite/performance/allocator_thread.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41f24725031f84b841142fb5f9afa58e1e6ae1ff/libstdc%2B%2B-v3%2Ftestsuite%2Fperformance%2Fallocator_thread.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41f24725031f84b841142fb5f9afa58e1e6ae1ff/libstdc%2B%2B-v3%2Ftestsuite%2Fperformance%2Fallocator_thread.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fperformance%2Fallocator_thread.cc?ref=41f24725031f84b841142fb5f9afa58e1e6ae1ff", "patch": "@@ -147,12 +147,12 @@ int main(void)\n   calibrate_iterations<vector<test_type> >();\n   test_container(vector<test_type>());\n   test_container(vector<test_type, malloc_allocator<test_type> >());\n-  //test_container(vector<test_type, __mt_alloc<test_type> >());\n+  test_container(vector<test_type, __mt_alloc<test_type> >());\n \n   calibrate_iterations<list<test_type> >();\n   test_container(list<test_type>());\n   test_container(list<test_type, malloc_allocator<test_type> >());\n-  //test_container(list<test_type, __mt_alloc<test_type> >());\n+  test_container(list<test_type, __mt_alloc<test_type> >());\n \n   return 0;\n }"}]}