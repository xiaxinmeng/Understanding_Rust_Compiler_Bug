{"sha": "a4cd2389276a30c39034a83d640ce68fa407bac1", "node_id": "C_kwDOANBUbNoAKGE0Y2QyMzg5Mjc2YTMwYzM5MDM0YTgzZDY0MGNlNjhmYTQwN2JhYzE", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2022-11-03T14:51:40Z"}, "committer": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2022-11-03T19:24:31Z"}, "message": "c++: change -fconcepts to mean C++20 concepts\n\nIt was always weird that -fconcepts in C++17 mode meant the same thing as\n-fconcepts-ts in C++20 mode; this patch harmonizes the flags so that for TS\nconcepts you always need to write -fconcepts-ts.\n\nIn the unlikely event anyone is still using -fconcepts in C++17 mode, they\ncan either fix their code to work with C++20 concepts or adjust the compiler\nflag.\n\ngcc/c-family/ChangeLog:\n\n\t* c-opts.cc (c_common_post_options): -fconcepts no longer implies\n\t-fconcepts-ts before C++20.\n\ngcc/ChangeLog:\n\n\t* doc/invoke.texi: -fconcepts no longer implies\n\t-fconcepts-ts before C++20.\n\ngcc/cp/ChangeLog:\n\n\t* parser.cc (cp_parser_template_declaration_after_parameters): Fix\n\tconcept parsing below C++20.\n\ngcc/testsuite/ChangeLog:\n\n\t* g++.dg/concepts/auto1.C:\n\t* g++.dg/concepts/auto3.C:\n\t* g++.dg/concepts/auto4.C:\n\t* g++.dg/concepts/class-deduction1.C:\n\t* g++.dg/concepts/class5.C:\n\t* g++.dg/concepts/class6.C:\n\t* g++.dg/concepts/debug1.C:\n\t* g++.dg/concepts/decl-diagnose.C:\n\t* g++.dg/concepts/deduction-constraint1.C:\n\t* g++.dg/concepts/diagnostic1.C:\n\t* g++.dg/concepts/dr1430.C:\n\t* g++.dg/concepts/equiv.C:\n\t* g++.dg/concepts/equiv2.C:\n\t* g++.dg/concepts/expression.C:\n\t* g++.dg/concepts/expression2.C:\n\t* g++.dg/concepts/expression3.C:\n\t* g++.dg/concepts/fn-concept1.C:\n\t* g++.dg/concepts/fn-concept2.C:\n\t* g++.dg/concepts/fn-concept3.C:\n\t* g++.dg/concepts/fn1.C:\n\t* g++.dg/concepts/fn10.C:\n\t* g++.dg/concepts/fn2.C:\n\t* g++.dg/concepts/fn3.C:\n\t* g++.dg/concepts/fn4.C:\n\t* g++.dg/concepts/fn5.C:\n\t* g++.dg/concepts/fn6.C:\n\t* g++.dg/concepts/fn8.C:\n\t* g++.dg/concepts/fn9.C:\n\t* g++.dg/concepts/generic-fn-err.C:\n\t* g++.dg/concepts/generic-fn.C:\n\t* g++.dg/concepts/inherit-ctor1.C:\n\t* g++.dg/concepts/inherit-ctor3.C:\n\t* g++.dg/concepts/intro1.C:\n\t* g++.dg/concepts/intro2.C:\n\t* g++.dg/concepts/intro3.C:\n\t* g++.dg/concepts/intro4.C:\n\t* g++.dg/concepts/intro5.C:\n\t* g++.dg/concepts/intro6.C:\n\t* g++.dg/concepts/intro7.C:\n\t* g++.dg/concepts/locations1.C:\n\t* g++.dg/concepts/partial-concept-id1.C:\n\t* g++.dg/concepts/partial-concept-id2.C:\n\t* g++.dg/concepts/partial-spec5.C:\n\t* g++.dg/concepts/placeholder2.C:\n\t* g++.dg/concepts/placeholder3.C:\n\t* g++.dg/concepts/placeholder4.C:\n\t* g++.dg/concepts/placeholder5.C:\n\t* g++.dg/concepts/placeholder6.C:\n\t* g++.dg/concepts/pr65634.C:\n\t* g++.dg/concepts/pr65636.C:\n\t* g++.dg/concepts/pr65681.C:\n\t* g++.dg/concepts/pr65848.C:\n\t* g++.dg/concepts/pr67249.C:\n\t* g++.dg/concepts/pr67595.C:\n\t* g++.dg/concepts/pr68434.C:\n\t* g++.dg/concepts/pr71127.C:\n\t* g++.dg/concepts/pr71128.C:\n\t* g++.dg/concepts/pr71131.C:\n\t* g++.dg/concepts/pr71385.C:\n\t* g++.dg/concepts/pr85065.C:\n\t* g++.dg/concepts/template-parm11.C:\n\t* g++.dg/concepts/template-parm12.C:\n\t* g++.dg/concepts/template-parm2.C:\n\t* g++.dg/concepts/template-parm3.C:\n\t* g++.dg/concepts/template-parm4.C:\n\t* g++.dg/concepts/template-template-parm1.C:\n\t* g++.dg/concepts/var-concept1.C:\n\t* g++.dg/concepts/var-concept2.C:\n\t* g++.dg/concepts/var-concept3.C:\n\t* g++.dg/concepts/var-concept4.C:\n\t* g++.dg/concepts/var-concept5.C:\n\t* g++.dg/concepts/var-concept6.C:\n\t* g++.dg/concepts/var-concept7.C:\n\t* g++.dg/concepts/var-templ2.C:\n\t* g++.dg/concepts/var-templ3.C:\n\t* g++.dg/concepts/variadic1.C:\n\t* g++.dg/concepts/variadic2.C:\n\t* g++.dg/concepts/variadic3.C:\n\t* g++.dg/concepts/variadic4.C:\n\t* g++.dg/cpp2a/concepts-pr65575.C:\n\t* g++.dg/cpp2a/concepts-pr66091.C:\n\t* g++.dg/cpp2a/concepts-pr84980.C:\n\t* g++.dg/cpp2a/concepts-pr85265.C: Pass -fconcepts-ts.\n\t* g++.dg/cpp2a/concepts-pr84979-2.C:\n\t* g++.dg/cpp2a/concepts-pr84979-3.C: Same diagnostics\n\tin C++20 and below.", "tree": {"sha": "d8bdaa609e0737eb7cb80a94df86b08685bc6caf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d8bdaa609e0737eb7cb80a94df86b08685bc6caf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a4cd2389276a30c39034a83d640ce68fa407bac1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4cd2389276a30c39034a83d640ce68fa407bac1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a4cd2389276a30c39034a83d640ce68fa407bac1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4cd2389276a30c39034a83d640ce68fa407bac1/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c0b38e9fec71dc4cc5e99b1f0cb159c15a8da9ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0b38e9fec71dc4cc5e99b1f0cb159c15a8da9ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0b38e9fec71dc4cc5e99b1f0cb159c15a8da9ba"}], "stats": {"total": 202, "additions": 99, "deletions": 103}, "files": [{"sha": "9e0494b2a456c70be5775e7528ae2b1a88232966", "filename": "gcc/c-family/c-opts.cc", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Fc-family%2Fc-opts.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Fc-family%2Fc-opts.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-opts.cc?ref=a4cd2389276a30c39034a83d640ce68fa407bac1", "patch": "@@ -1090,9 +1090,6 @@ c_common_post_options (const char **pfilename)\n      work with the standard.  */\n   if (cxx_dialect >= cxx20 || flag_concepts_ts)\n     flag_concepts = 1;\n-  else if (flag_concepts)\n-    /* For -std=c++17 -fconcepts, imply -fconcepts-ts.  */\n-    flag_concepts_ts = 1;\n \n   if (num_in_fnames > 1)\n     error (\"too many filenames given; type %<%s %s%> for usage\","}, {"sha": "9523f73d9a308ff9cdbccd0e2814e6ab0d03810a", "filename": "gcc/cp/parser.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Fcp%2Fparser.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Fcp%2Fparser.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.cc?ref=a4cd2389276a30c39034a83d640ce68fa407bac1", "patch": "@@ -31450,10 +31450,11 @@ cp_parser_template_declaration_after_parameters (cp_parser* parser,\n   else if (cxx_dialect >= cxx11\n \t   && cp_lexer_next_token_is_keyword (parser->lexer, RID_USING))\n     decl = cp_parser_alias_declaration (parser);\n-  else if (cxx_dialect >= cxx20 /* Implies flag_concept.  */\n+  else if (flag_concepts\n            && cp_lexer_next_token_is_keyword (parser->lexer, RID_CONCEPT)\n-           && !cp_lexer_nth_token_is_keyword (parser->lexer, 2, RID_BOOL))\n-    /* Allow 'concept bool' to be handled as per the TS.  */\n+\t   && cp_lexer_nth_token_is (parser->lexer, 2, CPP_NAME))\n+    /* -fconcept-ts 'concept bool' syntax is handled below, in\n+\tcp_parser_single_declaration.  */\n     decl = cp_parser_concept_definition (parser);\n   else\n     {"}, {"sha": "2b29db831aee04c4e118c485ebf56ddf4427e13d", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=a4cd2389276a30c39034a83d640ce68fa407bac1", "patch": "@@ -3075,14 +3075,14 @@ exhaustion is signalled by throwing @code{std::bad_alloc}.  See also\n @itemx -fconcepts-ts\n @opindex fconcepts\n @opindex fconcepts-ts\n-Below @option{-std=c++20}, @option{-fconcepts} enables support for the\n-C++ Extensions for Concepts Technical Specification, ISO 19217 (2015).\n-\n-With @option{-std=c++20} and above, Concepts are part of the language\n-standard, so @option{-fconcepts} defaults to on.  But the standard\n-specification of Concepts differs significantly from the TS, so some\n-constructs that were allowed in the TS but didn't make it into the\n-standard can still be enabled by @option{-fconcepts-ts}.\n+Enable support for the C++ Concepts feature for constraining template\n+arguments.  With @option{-std=c++20} and above, Concepts are part of\n+the language standard, so @option{-fconcepts} defaults to on.\n+\n+Some constructs that were allowed by the earlier C++ Extensions for\n+Concepts Technical Specification, ISO 19217 (2015), but didn't make it\n+into the standard, can additionally be enabled by\n+@option{-fconcepts-ts}.\n \n @item -fconstexpr-depth=@var{n}\n @opindex fconstexpr-depth"}, {"sha": "abf7886c9f64a9fad970cbe7833a20011c84494a", "filename": "gcc/testsuite/g++.dg/concepts/auto1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fauto1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fauto1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fauto1.C?ref=a4cd2389276a30c39034a83d640ce68fa407bac1", "patch": "@@ -1,5 +1,5 @@\n // { dg-do compile { target c++17_only } }\n-// { dg-options \"-fconcepts\" }\n+// { dg-options \"-fconcepts-ts\" }\n \n template <class T1, class T2> class A { };\n "}, {"sha": "868a56cf315901d4f87a5ce905ea7edfb09af55c", "filename": "gcc/testsuite/g++.dg/concepts/auto3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fauto3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fauto3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fauto3.C?ref=a4cd2389276a30c39034a83d640ce68fa407bac1", "patch": "@@ -1,5 +1,5 @@\n // { dg-do compile { target c++17_only } }\n-// { dg-options \"-fconcepts\" }\n+// { dg-options \"-fconcepts-ts\" }\n \n template <class...> class tuple {};\n "}, {"sha": "6c984550229b140ab9801cbe57a30fb3577f891a", "filename": "gcc/testsuite/g++.dg/concepts/auto4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fauto4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fauto4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fauto4.C?ref=a4cd2389276a30c39034a83d640ce68fa407bac1", "patch": "@@ -1,6 +1,6 @@\n // PR c++/85006\n // { dg-do compile { target c++17_only } }\n-// { dg-options \"-fconcepts\" }\n+// { dg-options \"-fconcepts-ts\" }\n \n template<typename... Ts> struct A {};\n "}, {"sha": "7f427d053b8855cee32057d7081c0ab4406f0ca5", "filename": "gcc/testsuite/g++.dg/concepts/class-deduction1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fclass-deduction1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fclass-deduction1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fclass-deduction1.C?ref=a4cd2389276a30c39034a83d640ce68fa407bac1", "patch": "@@ -1,5 +1,5 @@\n // { dg-do compile { target c++17_only } }\n-// { dg-options \"-fconcepts\" }\n+// { dg-options \"-fconcepts-ts\" }\n \n template <class T>\n concept bool Isint = __is_same_as(T,int);"}, {"sha": "5f8ece965439731821771078f330bff1ccd494b9", "filename": "gcc/testsuite/g++.dg/concepts/class5.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fclass5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fclass5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fclass5.C?ref=a4cd2389276a30c39034a83d640ce68fa407bac1", "patch": "@@ -1,5 +1,5 @@\n // { dg-do compile { target c++17_only } }\n-// { dg-options \"-fconcepts\" }\n+// { dg-options \"-fconcepts-ts\" }\n \n template<typename T>\n   concept bool One() { return sizeof(T) >= 4; }"}, {"sha": "a1c5e166e553bbc25c883a75b9c00beaf209df9c", "filename": "gcc/testsuite/g++.dg/concepts/class6.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fclass6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fclass6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fclass6.C?ref=a4cd2389276a30c39034a83d640ce68fa407bac1", "patch": "@@ -1,5 +1,5 @@\n // { dg-do compile { target c++17_only } }\n-// { dg-options \"-fconcepts\" }\n+// { dg-options \"-fconcepts-ts\" }\n \n template<typename T>\n   concept bool One() { return sizeof(T) >= 4; }"}, {"sha": "fb48567249f00680613d220eaff42ad0c39b09f0", "filename": "gcc/testsuite/g++.dg/concepts/debug1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fdebug1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fdebug1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fdebug1.C?ref=a4cd2389276a30c39034a83d640ce68fa407bac1", "patch": "@@ -1,6 +1,6 @@\n // PR c++/84551\n // { dg-do compile { target c++17_only } }\n-// { dg-options \"-fconcepts\" }\n+// { dg-options \"-fconcepts-ts\" }\n \n template<typename> concept bool C() { return true; }\n "}, {"sha": "96038fd3dfc71e902b79991b4fa70cfb5e69ff10", "filename": "gcc/testsuite/g++.dg/concepts/decl-diagnose.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fdecl-diagnose.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fdecl-diagnose.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fdecl-diagnose.C?ref=a4cd2389276a30c39034a83d640ce68fa407bac1", "patch": "@@ -1,5 +1,5 @@\n // { dg-do compile { target c++17_only } }\n-// { dg-options \"-fconcepts\" }\n+// { dg-options \"-fconcepts-ts\" }\n \n typedef concept int CINT; // { dg-error \"'concept' cannot appear in a typedef declaration\" }\n "}, {"sha": "d510fe00f2caa1f9b315e12ba6deed579070512a", "filename": "gcc/testsuite/g++.dg/concepts/deduction-constraint1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fdeduction-constraint1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fdeduction-constraint1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fdeduction-constraint1.C?ref=a4cd2389276a30c39034a83d640ce68fa407bac1", "patch": "@@ -1,6 +1,6 @@\n // PR c++/67007\n // { dg-do compile { target c++17_only } }\n-// { dg-options \"-fconcepts\" }\n+// { dg-options \"-fconcepts-ts\" }\n \n template <class U>\n concept bool A ="}, {"sha": "207c36c320e48a9110b5e46dd8b9fc3b3cc3f741", "filename": "gcc/testsuite/g++.dg/concepts/diagnostic1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fdiagnostic1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fdiagnostic1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fdiagnostic1.C?ref=a4cd2389276a30c39034a83d640ce68fa407bac1", "patch": "@@ -1,6 +1,6 @@\n // PR c++/67159\n // { dg-do compile { target c++17_only } }\n-// { dg-options \"-fconcepts -fconcepts-diagnostics-depth=2\" }\n+// { dg-options \"-fconcepts-ts -fconcepts-diagnostics-depth=2\" }\n \n template <class T, class U>\n concept bool SameAs = __is_same_as(T, U);"}, {"sha": "c22a7827eba7137c95b0a02d2d609b6fb0829779", "filename": "gcc/testsuite/g++.dg/concepts/dr1430.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fdr1430.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fdr1430.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fdr1430.C?ref=a4cd2389276a30c39034a83d640ce68fa407bac1", "patch": "@@ -1,6 +1,6 @@\n // PR c++/66092\n // { dg-do compile { target c++17_only } }\n-// { dg-options \"-fconcepts\" }\n+// { dg-options \"-fconcepts-ts\" }\n \n #include <type_traits>\n "}, {"sha": "a5d0c1864c09ffdb2b6685af3d889788abdaf429", "filename": "gcc/testsuite/g++.dg/concepts/equiv.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fequiv.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fequiv.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fequiv.C?ref=a4cd2389276a30c39034a83d640ce68fa407bac1", "patch": "@@ -1,5 +1,5 @@\n // { dg-do link { target c++17_only } }\n-// { dg-options \"-fconcepts\" }\n+// { dg-options \"-fconcepts-ts\" }\n \n // Check equivalence of short- and longhand declarations.\n "}, {"sha": "48a266498f9b7f1868a82d0c76c4d98109f2363b", "filename": "gcc/testsuite/g++.dg/concepts/equiv2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fequiv2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fequiv2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fequiv2.C?ref=a4cd2389276a30c39034a83d640ce68fa407bac1", "patch": "@@ -1,5 +1,5 @@\n // { dg-do link { target c++17_only } }\n-// { dg-options \"-fconcepts\" }\n+// { dg-options \"-fconcepts-ts\" }\n \n \n // template<typename T>"}, {"sha": "3da0c962888a67adf1889337d5caee5aedd0de5c", "filename": "gcc/testsuite/g++.dg/concepts/expression.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fexpression.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fexpression.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fexpression.C?ref=a4cd2389276a30c39034a83d640ce68fa407bac1", "patch": "@@ -1,5 +1,5 @@\n // { dg-do run { target c++17_only } }\n-// { dg-options \"-fconcepts\" }\n+// { dg-options \"-fconcepts-ts\" }\n \n // TODO: ICE on gimplify 16?\n "}, {"sha": "2f7aafc8b6bd844af647784a558f89904c6b3d9a", "filename": "gcc/testsuite/g++.dg/concepts/expression2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fexpression2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fexpression2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fexpression2.C?ref=a4cd2389276a30c39034a83d640ce68fa407bac1", "patch": "@@ -1,5 +1,5 @@\n // { dg-do compile { target c++17_only } }\n-// { dg-options \"-fconcepts\" }\n+// { dg-options \"-fconcepts-ts\" }\n \n template<typename T>\n concept bool C1()"}, {"sha": "a2d340dfaca58699f1bcdd4f96009fce3bccbfec", "filename": "gcc/testsuite/g++.dg/concepts/expression3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fexpression3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fexpression3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fexpression3.C?ref=a4cd2389276a30c39034a83d640ce68fa407bac1", "patch": "@@ -1,5 +1,5 @@\n // { dg-do compile { target c++17_only } }\n-// { dg-options \"-fconcepts\" }\n+// { dg-options \"-fconcepts-ts\" }\n \n template<typename T>\n concept bool C()"}, {"sha": "4908d11d56d85ed3b9a3e0dde438a5f5aed62144", "filename": "gcc/testsuite/g++.dg/concepts/fn-concept1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn-concept1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn-concept1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn-concept1.C?ref=a4cd2389276a30c39034a83d640ce68fa407bac1", "patch": "@@ -1,5 +1,5 @@\n // { dg-do compile { target c++17_only } }\n-// { dg-options \"-fconcepts\" }\n+// { dg-options \"-fconcepts-ts\" }\n \n template<typename T>\n   concept bool Tuple() { // { dg-error \"multiple statements\" }"}, {"sha": "28765054b5ce12ce343a7cbbb85bced7fb165aa0", "filename": "gcc/testsuite/g++.dg/concepts/fn-concept2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn-concept2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn-concept2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn-concept2.C?ref=a4cd2389276a30c39034a83d640ce68fa407bac1", "patch": "@@ -1,5 +1,5 @@\n // { dg-do compile { target c++17_only } }\n-// { dg-options \"-fconcepts\" }\n+// { dg-options \"-fconcepts-ts\" }\n \n template<typename T>\n   concept auto C1() { return 0; } // { dg-error \"16:concept .concept auto C1\\\\(\\\\). declared with a deduced return type\" }"}, {"sha": "88ed5a8e8b27428b7d4470e3bd77a3e1067e2e12", "filename": "gcc/testsuite/g++.dg/concepts/fn-concept3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn-concept3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn-concept3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn-concept3.C?ref=a4cd2389276a30c39034a83d640ce68fa407bac1", "patch": "@@ -1,6 +1,6 @@\n // PR c++/92746\n // { dg-do compile { target c++17_only } }\n-// { dg-options \"-fconcepts\" }\n+// { dg-options \"-fconcepts-ts\" }\n \n template<typename T> concept bool C3() { return true; }\n static_assert(noexcept(C3<int>()), \"function concept should be treated as if noexcept(true) specified\");"}, {"sha": "e22cbf70a46b197fe514d7c1d61f00a63f9a35c8", "filename": "gcc/testsuite/g++.dg/concepts/fn1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn1.C?ref=a4cd2389276a30c39034a83d640ce68fa407bac1", "patch": "@@ -1,5 +1,5 @@\n // { dg-do compile { target c++17_only } }\n-// { dg-options \"-fconcepts\" }\n+// { dg-options \"-fconcepts-ts\" }\n \n template<typename T>\n   concept bool C() { return __is_class(T); }"}, {"sha": "83099de90a14c516b5b8360242b685944aeb821d", "filename": "gcc/testsuite/g++.dg/concepts/fn10.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn10.C?ref=a4cd2389276a30c39034a83d640ce68fa407bac1", "patch": "@@ -1,5 +1,5 @@\n // { dg-do compile { target c++17_only } }\n-// { dg-options \"-fconcepts\" }\n+// { dg-options \"-fconcepts-ts\" }\n \n // Test that constraint satisfaction checks work even when\n // processing template declarations."}, {"sha": "e0ac36ff3ddaab0ff28e9155c7ecccb86d3a4133", "filename": "gcc/testsuite/g++.dg/concepts/fn2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn2.C?ref=a4cd2389276a30c39034a83d640ce68fa407bac1", "patch": "@@ -1,5 +1,5 @@\n // { dg-do compile { target c++17_only } }\n-// { dg-options \"-fconcepts\" }\n+// { dg-options \"-fconcepts-ts\" }\n \n template<typename T>\n   concept bool C() { return __is_class(T); }"}, {"sha": "3e076f62ee8812cace04c07146905cfa4dff2e38", "filename": "gcc/testsuite/g++.dg/concepts/fn3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn3.C?ref=a4cd2389276a30c39034a83d640ce68fa407bac1", "patch": "@@ -1,5 +1,5 @@\n // { dg-do compile { target c++17_only } }\n-// { dg-options \"-fconcepts\" }\n+// { dg-options \"-fconcepts-ts\" }\n \n #include <cassert>\n "}, {"sha": "64186778f28135c21c5c865b4f6ca52839f866a3", "filename": "gcc/testsuite/g++.dg/concepts/fn4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn4.C?ref=a4cd2389276a30c39034a83d640ce68fa407bac1", "patch": "@@ -1,5 +1,5 @@\n // { dg-do compile { target c++17_only } }\n-// { dg-options \"-fconcepts\" }\n+// { dg-options \"-fconcepts-ts\" }\n \n template<typename T>\n   concept bool C() { return __is_class(T); }"}, {"sha": "3decf4e38ee35ca0c995330f6dec338a2334b467", "filename": "gcc/testsuite/g++.dg/concepts/fn5.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn5.C?ref=a4cd2389276a30c39034a83d640ce68fa407bac1", "patch": "@@ -1,5 +1,5 @@\n // { dg-do compile { target c++17_only } }\n-// { dg-options \"-fconcepts\" }\n+// { dg-options \"-fconcepts-ts\" }\n \n // Check shorthand notation.\n "}, {"sha": "57c4cfbd016ed903757d9a8d6cfd5bb1cf275ef9", "filename": "gcc/testsuite/g++.dg/concepts/fn6.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn6.C?ref=a4cd2389276a30c39034a83d640ce68fa407bac1", "patch": "@@ -1,5 +1,5 @@\n // { dg-do compile { target c++17_only } }\n-// { dg-options \"-fconcepts\" }\n+// { dg-options \"-fconcepts-ts\" }\n \n // Redefinition errors.\n "}, {"sha": "594270f5178d3474af17139509cb88ec20ab2f84", "filename": "gcc/testsuite/g++.dg/concepts/fn8.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn8.C?ref=a4cd2389276a30c39034a83d640ce68fa407bac1", "patch": "@@ -1,5 +1,5 @@\n // { dg-do compile { target c++17_only } }\n-// { dg-options \"-fconcepts\" }\n+// { dg-options \"-fconcepts-ts\" }\n \n template<typename T>\n   concept bool Class() { return __is_class(T); }"}, {"sha": "51edd2fc539d25918a5e1dd5eb4ffbcf0c3013e9", "filename": "gcc/testsuite/g++.dg/concepts/fn9.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn9.C?ref=a4cd2389276a30c39034a83d640ce68fa407bac1", "patch": "@@ -1,5 +1,5 @@\n // { dg-do compile { target c++17_only } }\n-// { dg-options \"-fconcepts\" }\n+// { dg-options \"-fconcepts-ts\" }\n \n #include <cassert>\n "}, {"sha": "e4909eb50bff602ad5578f92064f86cce6a7d9a0", "filename": "gcc/testsuite/g++.dg/concepts/generic-fn-err.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fgeneric-fn-err.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fgeneric-fn-err.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fgeneric-fn-err.C?ref=a4cd2389276a30c39034a83d640ce68fa407bac1", "patch": "@@ -1,5 +1,5 @@\n // { dg-do compile { target c++17_only } }\n-// { dg-options \"-fconcepts\" }\n+// { dg-options \"-fconcepts-ts\" }\n \n template<typename T>\n   concept bool C() { return __is_class(T); }"}, {"sha": "983b37092f8f0b0133a5f62e99ed69fd411c806e", "filename": "gcc/testsuite/g++.dg/concepts/generic-fn.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fgeneric-fn.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fgeneric-fn.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fgeneric-fn.C?ref=a4cd2389276a30c39034a83d640ce68fa407bac1", "patch": "@@ -1,5 +1,5 @@\n // { dg-do compile { target c++17_only } }\n-// { dg-options \"-fconcepts\" }\n+// { dg-options \"-fconcepts-ts\" }\n \n #include <cassert>\n #include <type_traits>"}, {"sha": "98c260c89b959e3b1978d49f5bf8e485b9c8ada7", "filename": "gcc/testsuite/g++.dg/concepts/inherit-ctor1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Finherit-ctor1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Finherit-ctor1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Finherit-ctor1.C?ref=a4cd2389276a30c39034a83d640ce68fa407bac1", "patch": "@@ -1,5 +1,5 @@\n // { dg-do compile { target c++17_only } }\n-// { dg-options \"-fconcepts\" }\n+// { dg-options \"-fconcepts-ts\" }\n \n template<typename T>\n   concept bool C = __is_class(T);"}, {"sha": "76308ffb2120078243b11f200e1d7b0f561e96a0", "filename": "gcc/testsuite/g++.dg/concepts/inherit-ctor3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Finherit-ctor3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Finherit-ctor3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Finherit-ctor3.C?ref=a4cd2389276a30c39034a83d640ce68fa407bac1", "patch": "@@ -1,5 +1,5 @@\n // { dg-do compile { target c++17_only } }\n-// { dg-options \"-fconcepts\" }\n+// { dg-options \"-fconcepts-ts\" }\n \n template<typename T>\n   concept bool C() { return __is_class(T); }"}, {"sha": "0dd9b646a4dbbd0a94cceb9ce334f817a733357d", "filename": "gcc/testsuite/g++.dg/concepts/intro1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fintro1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fintro1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fintro1.C?ref=a4cd2389276a30c39034a83d640ce68fa407bac1", "patch": "@@ -1,5 +1,5 @@\n // { dg-do compile { target c++17_only } }\n-// { dg-options \"-fconcepts\" }\n+// { dg-options \"-fconcepts-ts\" }\n \n template<typename T>\n   concept bool C = __is_class(T);"}, {"sha": "5c6906c8d352f3a7a952255806bc261a42067d1c", "filename": "gcc/testsuite/g++.dg/concepts/intro2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fintro2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fintro2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fintro2.C?ref=a4cd2389276a30c39034a83d640ce68fa407bac1", "patch": "@@ -1,5 +1,5 @@\n // { dg-do compile { target c++17_only } }\n-// { dg-options \"-fconcepts\" }\n+// { dg-options \"-fconcepts-ts\" }\n \n #include <cassert>\n "}, {"sha": "c92338e548dc2888c31e3ee6888f825088fca252", "filename": "gcc/testsuite/g++.dg/concepts/intro3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fintro3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fintro3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fintro3.C?ref=a4cd2389276a30c39034a83d640ce68fa407bac1", "patch": "@@ -1,5 +1,5 @@\n // { dg-do compile { target c++17_only } }\n-// { dg-options \"-fconcepts\" }\n+// { dg-options \"-fconcepts-ts\" }\n \n template<typename ... T>\n   concept bool C1 = true;"}, {"sha": "5ddd162893469b3f60354f68b5c12ad76f3bded7", "filename": "gcc/testsuite/g++.dg/concepts/intro4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fintro4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fintro4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fintro4.C?ref=a4cd2389276a30c39034a83d640ce68fa407bac1", "patch": "@@ -1,5 +1,5 @@\n // { dg-do compile { target c++17_only } }\n-// { dg-options \"-fconcepts\" }\n+// { dg-options \"-fconcepts-ts\" }\n \n template<typename ... T>\n   concept bool C1 = true;"}, {"sha": "cb1c5da789400b9f1b1b8459bc91b85d6b0d0101", "filename": "gcc/testsuite/g++.dg/concepts/intro5.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fintro5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fintro5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fintro5.C?ref=a4cd2389276a30c39034a83d640ce68fa407bac1", "patch": "@@ -1,5 +1,5 @@\n // { dg-do compile { target c++17_only } }\n-// { dg-options \"-fconcepts\" }\n+// { dg-options \"-fconcepts-ts\" }\n \n template<typename T, typename U = int>\n   concept bool C()"}, {"sha": "b718d134b2b4f26ebd2e23e6706ad646cf76e46b", "filename": "gcc/testsuite/g++.dg/concepts/intro6.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fintro6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fintro6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fintro6.C?ref=a4cd2389276a30c39034a83d640ce68fa407bac1", "patch": "@@ -1,6 +1,6 @@\n // PR c++/67003\n // { dg-do compile { target c++17_only } }\n-// { dg-options \"-fconcepts\" }\n+// { dg-options \"-fconcepts-ts\" }\n \n namespace X {\n   template<class>"}, {"sha": "0c452a77b868b3168580bfc611af3c1b2c98c2e6", "filename": "gcc/testsuite/g++.dg/concepts/intro7.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fintro7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fintro7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fintro7.C?ref=a4cd2389276a30c39034a83d640ce68fa407bac1", "patch": "@@ -1,6 +1,6 @@\n // PR c++/66985\n // { dg-do compile { target c++17_only } }\n-// { dg-options \"-fconcepts\" }\n+// { dg-options \"-fconcepts-ts\" }\n \n template <template <class> class T>\n concept bool Valid = requires { typename T<int>; };"}, {"sha": "ea227433d2dfcf61f9aabf59697e654d60d903a4", "filename": "gcc/testsuite/g++.dg/concepts/locations1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Flocations1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Flocations1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Flocations1.C?ref=a4cd2389276a30c39034a83d640ce68fa407bac1", "patch": "@@ -1,5 +1,5 @@\n // { dg-do compile { target c++17_only } }\n-// { dg-options \"-fconcepts\" }\n+// { dg-options \"-fconcepts-ts\" }\n \n struct S\n {"}, {"sha": "09c9d4fe8efac6ced6901faf15e9e5d0f9a1f8e5", "filename": "gcc/testsuite/g++.dg/concepts/partial-concept-id1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpartial-concept-id1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpartial-concept-id1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpartial-concept-id1.C?ref=a4cd2389276a30c39034a83d640ce68fa407bac1", "patch": "@@ -1,5 +1,5 @@\n // { dg-do compile { target c++17_only } }\n-// { dg-options \"-fconcepts\" }\n+// { dg-options \"-fconcepts-ts\" }\n \n template<typename T>\n   concept bool Type = true;"}, {"sha": "089f40fe640dffefa9927157491b81ab4ad1c76a", "filename": "gcc/testsuite/g++.dg/concepts/partial-concept-id2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpartial-concept-id2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpartial-concept-id2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpartial-concept-id2.C?ref=a4cd2389276a30c39034a83d640ce68fa407bac1", "patch": "@@ -1,5 +1,5 @@\n // { dg-do compile { target c++17_only } }\n-// { dg-options \"-fconcepts\" }\n+// { dg-options \"-fconcepts-ts\" }\n \n // Make sure that we check partial concept ids\n // with variable concepts."}, {"sha": "954c072ee6ce1f1ac98bfc4908c2dc3499c656d7", "filename": "gcc/testsuite/g++.dg/concepts/partial-spec5.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpartial-spec5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpartial-spec5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpartial-spec5.C?ref=a4cd2389276a30c39034a83d640ce68fa407bac1", "patch": "@@ -1,6 +1,6 @@\n // PR c++/67138\n // { dg-do compile { target c++17_only } }\n-// { dg-options \"-fconcepts\" }\n+// { dg-options \"-fconcepts-ts\" }\n \n template <class T>\n concept bool _Auto = true;"}, {"sha": "f1c3b9c6917ae0a46400ccd8ca7e5cc7f000bb9a", "filename": "gcc/testsuite/g++.dg/concepts/placeholder2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fplaceholder2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fplaceholder2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fplaceholder2.C?ref=a4cd2389276a30c39034a83d640ce68fa407bac1", "patch": "@@ -1,5 +1,5 @@\n // { dg-do compile { target c++17_only } }\n-// { dg-options \"-fconcepts\" }\n+// { dg-options \"-fconcepts-ts\" }\n \n template<typename T>\n concept bool C1 = sizeof(T) == 0;"}, {"sha": "6b79ef6401d7d7024a32800105af6ff76c455ead", "filename": "gcc/testsuite/g++.dg/concepts/placeholder3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fplaceholder3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fplaceholder3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fplaceholder3.C?ref=a4cd2389276a30c39034a83d640ce68fa407bac1", "patch": "@@ -1,6 +1,6 @@\n // PR c++/66218\n // { dg-do compile { target c++17_only } }\n-// { dg-options \"-fconcepts\" }\n+// { dg-options \"-fconcepts-ts\" }\n \n template <class T, class U>\n concept bool Same = __is_same_as(T, U);"}, {"sha": "16451611b2c84c9e8a20a2dacb207e1e6ca61b60", "filename": "gcc/testsuite/g++.dg/concepts/placeholder4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fplaceholder4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fplaceholder4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fplaceholder4.C?ref=a4cd2389276a30c39034a83d640ce68fa407bac1", "patch": "@@ -1,6 +1,6 @@\n // PR c++/66218\n // { dg-do compile { target c++17_only } }\n-// { dg-options \"-fconcepts\" }\n+// { dg-options \"-fconcepts-ts\" }\n \n template <class T, class U>\n concept bool Same = __is_same_as(T, U);"}, {"sha": "21a6b318ff64d2cee12d1a1ae1eeea2711c63401", "filename": "gcc/testsuite/g++.dg/concepts/placeholder5.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fplaceholder5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fplaceholder5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fplaceholder5.C?ref=a4cd2389276a30c39034a83d640ce68fa407bac1", "patch": "@@ -1,5 +1,5 @@\n // { dg-do compile { target c++17_only } }\n-// { dg-options \"-fconcepts\" }\n+// { dg-options \"-fconcepts-ts\" }\n \n template <class T, class U>\n concept bool Same = __is_same_as(T, U);"}, {"sha": "c7f62d1aa4c961c7a026e21e1e8e5848fbe380f1", "filename": "gcc/testsuite/g++.dg/concepts/placeholder6.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fplaceholder6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fplaceholder6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fplaceholder6.C?ref=a4cd2389276a30c39034a83d640ce68fa407bac1", "patch": "@@ -1,5 +1,5 @@\n // { dg-do compile { target c++17_only } }\n-// { dg-options \"-fconcepts\" }\n+// { dg-options \"-fconcepts-ts\" }\n \n template <int I> struct B { static const int i = I; };\n template <int I> concept bool Few = I < 10;"}, {"sha": "650d10eba5fac7dd2a1843581910dec3f1be25aa", "filename": "gcc/testsuite/g++.dg/concepts/pr65634.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr65634.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr65634.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr65634.C?ref=a4cd2389276a30c39034a83d640ce68fa407bac1", "patch": "@@ -1,5 +1,5 @@\n // { dg-do compile { target c++17_only } }\n-// { dg-options \"-fconcepts\" }\n+// { dg-options \"-fconcepts-ts\" }\n \n template<typename T>\n concept bool C1() {"}, {"sha": "69091dcfdb75f17a8897e90825bb380a97477b85", "filename": "gcc/testsuite/g++.dg/concepts/pr65636.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr65636.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr65636.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr65636.C?ref=a4cd2389276a30c39034a83d640ce68fa407bac1", "patch": "@@ -1,5 +1,5 @@\n // { dg-do compile { target c++17_only } }\n-// { dg-options \"-fconcepts\" }\n+// { dg-options \"-fconcepts-ts\" }\n \n using TD = int;\n "}, {"sha": "cf34911e787c2e19d61014046120baa7d1030f74", "filename": "gcc/testsuite/g++.dg/concepts/pr65681.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr65681.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr65681.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr65681.C?ref=a4cd2389276a30c39034a83d640ce68fa407bac1", "patch": "@@ -1,5 +1,5 @@\n // { dg-do compile { target c++17_only } }\n-// { dg-options \"-fconcepts\" }\n+// { dg-options \"-fconcepts-ts\" }\n \n template<typename T>\n concept bool C = requires (T t) { t.mf(); };"}, {"sha": "76e6f6faefc710ff8066e57ab7be450c4ee770d2", "filename": "gcc/testsuite/g++.dg/concepts/pr65848.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr65848.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr65848.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr65848.C?ref=a4cd2389276a30c39034a83d640ce68fa407bac1", "patch": "@@ -1,5 +1,5 @@\n // { dg-do compile { target c++17_only } }\n-// { dg-options \"-fconcepts\" }\n+// { dg-options \"-fconcepts-ts\" }\n \n // Performance test... This should be fast.\n "}, {"sha": "75f0ea0e4eaccc66729619aad6a3f28f399acb75", "filename": "gcc/testsuite/g++.dg/concepts/pr67249.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr67249.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr67249.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr67249.C?ref=a4cd2389276a30c39034a83d640ce68fa407bac1", "patch": "@@ -1,5 +1,5 @@\n // { dg-do compile { target c++17_only } }\n-// { dg-options \"-fconcepts\" }\n+// { dg-options \"-fconcepts-ts\" }\n \n template<class T> concept bool C1 = true;\n template<class A, class B> struct Pair {};"}, {"sha": "33122d2ddb0ad1eb7c112fbec09ca15862e6b486", "filename": "gcc/testsuite/g++.dg/concepts/pr67595.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr67595.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr67595.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr67595.C?ref=a4cd2389276a30c39034a83d640ce68fa407bac1", "patch": "@@ -1,5 +1,5 @@\n // { dg-do compile { target c++17_only } }\n-// { dg-options \"-fconcepts\" }\n+// { dg-options \"-fconcepts-ts\" }\n \n template <class X> concept bool allocatable = requires{{new X}->X *; };\n template <class X> concept bool semiregular = allocatable<X>;"}, {"sha": "ff6a89807001c3206b2ac718f13b6a5736a7a3f9", "filename": "gcc/testsuite/g++.dg/concepts/pr68434.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr68434.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr68434.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr68434.C?ref=a4cd2389276a30c39034a83d640ce68fa407bac1", "patch": "@@ -1,5 +1,5 @@\n // { dg-do compile { target c++17_only } }\n-// { dg-options \"-fconcepts\" }\n+// { dg-options \"-fconcepts-ts\" }\n \n template <class>\n concept bool C1 () {"}, {"sha": "e76aec15809c8a49dc516245ff22106831d11ddd", "filename": "gcc/testsuite/g++.dg/concepts/pr71127.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr71127.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr71127.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr71127.C?ref=a4cd2389276a30c39034a83d640ce68fa407bac1", "patch": "@@ -1,5 +1,5 @@\n // { dg-do compile { target c++17_only } }\n-// { dg-options \"-fconcepts\" }\n+// { dg-options \"-fconcepts-ts\" }\n \n template<template<typename> class T>\n concept bool C = T<int>::value;"}, {"sha": "351a6465df12e16e37137aa36fc0ff1b0a3b289c", "filename": "gcc/testsuite/g++.dg/concepts/pr71128.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr71128.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr71128.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr71128.C?ref=a4cd2389276a30c39034a83d640ce68fa407bac1", "patch": "@@ -1,5 +1,5 @@\n // { dg-do compile { target c++17_only } }\n-// { dg-options \"-fconcepts\" }\n+// { dg-options \"-fconcepts-ts\" }\n \n template<typename T>\n concept bool C() { return true; }"}, {"sha": "8da43aff49ccaded5520d95b97a8ccde192f9422", "filename": "gcc/testsuite/g++.dg/concepts/pr71131.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr71131.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr71131.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr71131.C?ref=a4cd2389276a30c39034a83d640ce68fa407bac1", "patch": "@@ -1,5 +1,5 @@\n // { dg-do compile { target c++17_only } }\n-// { dg-options \"-fconcepts\" }\n+// { dg-options \"-fconcepts-ts\" }\n \n template<template<typename> class T>\n concept bool C = true;"}, {"sha": "66ca52bdfe16e753b876933bad8410b98f9e8937", "filename": "gcc/testsuite/g++.dg/concepts/pr71385.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr71385.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr71385.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr71385.C?ref=a4cd2389276a30c39034a83d640ce68fa407bac1", "patch": "@@ -1,5 +1,5 @@\n // { dg-do compile { target c++17_only } }\n-// { dg-options \"-fconcepts\" }\n+// { dg-options \"-fconcepts-ts\" }\n \n template<class T>\n concept bool Addable(){"}, {"sha": "72f2aca89157a50e72146e5e4c7d4f09d448c261", "filename": "gcc/testsuite/g++.dg/concepts/pr85065.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr85065.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr85065.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr85065.C?ref=a4cd2389276a30c39034a83d640ce68fa407bac1", "patch": "@@ -1,5 +1,5 @@\n // { dg-do compile { target c++17_only } }\n-// { dg-options \"-fconcepts\" }\n+// { dg-options \"-fconcepts-ts\" }\n \n template<int> concept bool C = true;\n "}, {"sha": "b376a490298ccf9823b25e9d5c13c93d24b415f1", "filename": "gcc/testsuite/g++.dg/concepts/template-parm11.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-parm11.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-parm11.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-parm11.C?ref=a4cd2389276a30c39034a83d640ce68fa407bac1", "patch": "@@ -1,5 +1,5 @@\n // { dg-do compile { target c++17_only } }\n-// { dg-options \"-fconcepts\" }\n+// { dg-options \"-fconcepts-ts\" }\n \n template<typename T>\n concept bool NameProvider()"}, {"sha": "81d08180a29dce31bf6c3447bc1a07edba360457", "filename": "gcc/testsuite/g++.dg/concepts/template-parm12.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-parm12.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-parm12.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-parm12.C?ref=a4cd2389276a30c39034a83d640ce68fa407bac1", "patch": "@@ -1,5 +1,5 @@\n // { dg-do compile { target c++17_only } }\n-// { dg-options \"-fconcepts\" }\n+// { dg-options \"-fconcepts-ts\" }\n // Conceptized version of template/ttp23.C\n \n template <class T> concept bool Foo = true;"}, {"sha": "dc6983a6eaa45181a98415f00125283852d57169", "filename": "gcc/testsuite/g++.dg/concepts/template-parm2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-parm2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-parm2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-parm2.C?ref=a4cd2389276a30c39034a83d640ce68fa407bac1", "patch": "@@ -1,5 +1,5 @@\n // { dg-do compile { target c++17_only } }\n-// { dg-options \"-fconcepts\" }\n+// { dg-options \"-fconcepts-ts\" }\n \n template<typename T>\n   concept bool C1 = __is_same_as(T, int);"}, {"sha": "2e6bd2c04e08fc895a8b47b2b7f6f64273ca9cc9", "filename": "gcc/testsuite/g++.dg/concepts/template-parm3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-parm3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-parm3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-parm3.C?ref=a4cd2389276a30c39034a83d640ce68fa407bac1", "patch": "@@ -1,5 +1,5 @@\n // { dg-do compile { target c++17_only } }\n-// { dg-options \"-fconcepts\" }\n+// { dg-options \"-fconcepts-ts\" }\n \n template<typename T>\n   concept bool C1 = __is_same_as(T, int);"}, {"sha": "8f8ad6315bab9ba0f6ee8600173900cba17cdf51", "filename": "gcc/testsuite/g++.dg/concepts/template-parm4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-parm4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-parm4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-parm4.C?ref=a4cd2389276a30c39034a83d640ce68fa407bac1", "patch": "@@ -1,5 +1,5 @@\n // { dg-do compile { target c++17_only } }\n-// { dg-options \"-fconcepts\" }\n+// { dg-options \"-fconcepts-ts\" }\n \n template<typename T>\n   concept bool C1 = __is_same_as(T, int);"}, {"sha": "019a9333ecebb3b94a5ad70da8a68dac3b2a0295", "filename": "gcc/testsuite/g++.dg/concepts/template-template-parm1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-template-parm1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-template-parm1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-template-parm1.C?ref=a4cd2389276a30c39034a83d640ce68fa407bac1", "patch": "@@ -1,6 +1,6 @@\n // PR c++/66937\n // { dg-do compile { target c++17_only } }\n-// { dg-options \"-fconcepts\" }\n+// { dg-options \"-fconcepts-ts\" }\n \n #include <tuple>\n "}, {"sha": "3a3b3405bfff663fb679c5855a74d36ff44c9f76", "filename": "gcc/testsuite/g++.dg/concepts/var-concept1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvar-concept1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvar-concept1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvar-concept1.C?ref=a4cd2389276a30c39034a83d640ce68fa407bac1", "patch": "@@ -1,5 +1,5 @@\n // { dg-do compile { target c++17_only } }\n-// { dg-options \"-fconcepts\" }\n+// { dg-options \"-fconcepts-ts\" }\n \n template<typename T>\n concept bool C1 = __is_class(T);"}, {"sha": "0ef2322cad2db52a8cb0e1f3f5fa09da95df7309", "filename": "gcc/testsuite/g++.dg/concepts/var-concept2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvar-concept2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvar-concept2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvar-concept2.C?ref=a4cd2389276a30c39034a83d640ce68fa407bac1", "patch": "@@ -1,5 +1,5 @@\n // { dg-do compile { target c++17_only } }\n-// { dg-options \"-fconcepts\" }\n+// { dg-options \"-fconcepts-ts\" }\n \n template<typename T>\n   concept bool C1 = __is_class(T);"}, {"sha": "6fd96a5042e27d8f38f125bfbbcf3946eb7780d5", "filename": "gcc/testsuite/g++.dg/concepts/var-concept3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvar-concept3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvar-concept3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvar-concept3.C?ref=a4cd2389276a30c39034a83d640ce68fa407bac1", "patch": "@@ -1,5 +1,5 @@\n // { dg-do compile { target c++17_only } }\n-// { dg-options \"-fconcepts\" }\n+// { dg-options \"-fconcepts-ts\" }\n \n template<typename T>\n   concept bool C1 = __is_class(T);"}, {"sha": "7ae9f36c2d03136578e278ad5aafeea9ac0fe407", "filename": "gcc/testsuite/g++.dg/concepts/var-concept4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvar-concept4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvar-concept4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvar-concept4.C?ref=a4cd2389276a30c39034a83d640ce68fa407bac1", "patch": "@@ -1,5 +1,5 @@\n // { dg-do compile { target c++17_only } }\n-// { dg-options \"-fconcepts\" }\n+// { dg-options \"-fconcepts-ts\" }\n \n template<typename T, typename U>\n concept bool Same = __is_same_as(T, U);"}, {"sha": "cc7f4af47c602a8ca68cc6f1b3459087b2965e1b", "filename": "gcc/testsuite/g++.dg/concepts/var-concept5.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvar-concept5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvar-concept5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvar-concept5.C?ref=a4cd2389276a30c39034a83d640ce68fa407bac1", "patch": "@@ -1,5 +1,5 @@\n // { dg-do compile { target c++17_only } }\n-// { dg-options \"-fconcepts\" }\n+// { dg-options \"-fconcepts-ts\" }\n \n template<typename T1, typename T2>\n concept bool C1 = true;"}, {"sha": "d2270df172799405e9dbe157551d2fcce63f3f9e", "filename": "gcc/testsuite/g++.dg/concepts/var-concept6.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvar-concept6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvar-concept6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvar-concept6.C?ref=a4cd2389276a30c39034a83d640ce68fa407bac1", "patch": "@@ -1,5 +1,5 @@\n // { dg-do compile { target c++17_only } }\n-// { dg-options \"-fconcepts\" }\n+// { dg-options \"-fconcepts-ts\" }\n \n template <class T>\n concept int C = true;\t\t// { dg-error \"bool\" }"}, {"sha": "026fe9f416561f62d02fad5bd930c251633bb189", "filename": "gcc/testsuite/g++.dg/concepts/var-concept7.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvar-concept7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvar-concept7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvar-concept7.C?ref=a4cd2389276a30c39034a83d640ce68fa407bac1", "patch": "@@ -1,6 +1,6 @@\n // PR c++/85133\n // { dg-do compile { target c++17_only } }\n-// { dg-options \"-fconcepts\" }\n+// { dg-options \"-fconcepts-ts\" }\n \n template<typename> concept bool C; // { dg-error \"no initializer\" }\n "}, {"sha": "2eb419aa945e0479071f6e2c685cf0c0bb52c133", "filename": "gcc/testsuite/g++.dg/concepts/var-templ2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvar-templ2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvar-templ2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvar-templ2.C?ref=a4cd2389276a30c39034a83d640ce68fa407bac1", "patch": "@@ -1,6 +1,6 @@\n // PR c++/67139\n // { dg-do compile { target c++17_only } }\n-// { dg-options \"-fconcepts\" }\n+// { dg-options \"-fconcepts-ts\" }\n \n template <class T>\n constexpr typename T::type::value_type _v = T::type::value;"}, {"sha": "662511eee03e13262489b1667f298a793b664be1", "filename": "gcc/testsuite/g++.dg/concepts/var-templ3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvar-templ3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvar-templ3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvar-templ3.C?ref=a4cd2389276a30c39034a83d640ce68fa407bac1", "patch": "@@ -1,6 +1,6 @@\n // PR c++/68666\n // { dg-do compile { target c++17_only } }\n-// { dg-options \"-fconcepts\" }\n+// { dg-options \"-fconcepts-ts\" }\n \n struct A {\n   template <class>"}, {"sha": "c590f28ee8157cd7b35ccd03429cbb59ea3f0db2", "filename": "gcc/testsuite/g++.dg/concepts/variadic1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvariadic1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvariadic1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvariadic1.C?ref=a4cd2389276a30c39034a83d640ce68fa407bac1", "patch": "@@ -1,6 +1,6 @@\n // PR c++/66712\n // { dg-do compile { target c++17_only } }\n-// { dg-options \"-fconcepts\" }\n+// { dg-options \"-fconcepts-ts\" }\n \n template <class T, class...Args>\n concept bool _Constructible_ ="}, {"sha": "1776b951113e6b092721d58e3ac810bf752f5e25", "filename": "gcc/testsuite/g++.dg/concepts/variadic2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvariadic2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvariadic2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvariadic2.C?ref=a4cd2389276a30c39034a83d640ce68fa407bac1", "patch": "@@ -1,5 +1,5 @@\n // { dg-do compile { target c++17_only } }\n-// { dg-options \"-fconcepts\" }\n+// { dg-options \"-fconcepts-ts\" }\n \n template <class T> concept bool Copyable = requires (T t) { T(t); };\n template <class T> concept bool Constructable = requires { T(); };"}, {"sha": "07c2401a785c964597d41134215f54896162b6de", "filename": "gcc/testsuite/g++.dg/concepts/variadic3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvariadic3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvariadic3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvariadic3.C?ref=a4cd2389276a30c39034a83d640ce68fa407bac1", "patch": "@@ -1,6 +1,6 @@\n // PR c++/70036\n // { dg-do compile { target c++17_only } }\n-// { dg-options \"-fconcepts\" }\n+// { dg-options \"-fconcepts-ts\" }\n \n template <class T> concept bool C = true;\n "}, {"sha": "1dfa2e6000b0ee4e3f052e04191cf0e8404a4a8b", "filename": "gcc/testsuite/g++.dg/concepts/variadic4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvariadic4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvariadic4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvariadic4.C?ref=a4cd2389276a30c39034a83d640ce68fa407bac1", "patch": "@@ -1,6 +1,6 @@\n // PR c++/73456\n // { dg-do compile { target c++17_only } }\n-// { dg-options \"-fconcepts\" }\n+// { dg-options \"-fconcepts-ts\" }\n \n template<typename...> struct list {};\n "}, {"sha": "bec97e983522891fa12e4c1b00b5af8f4588fdea", "filename": "gcc/testsuite/g++.dg/cpp2a/concepts-pr65575.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-pr65575.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-pr65575.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-pr65575.C?ref=a4cd2389276a30c39034a83d640ce68fa407bac1", "patch": "@@ -1,6 +1,6 @@\n // PR c++/65575\n // { dg-do compile { target c++17_only } }\n-// { dg-additional-options \"-fconcepts\" }\n+// { dg-additional-options \"-fconcepts-ts\" }\n \n template<typename T>\n concept bool C = false;"}, {"sha": "cd3acf77876b0da4e08ca0b315e141a26f4975f9", "filename": "gcc/testsuite/g++.dg/cpp2a/concepts-pr66091.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-pr66091.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-pr66091.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-pr66091.C?ref=a4cd2389276a30c39034a83d640ce68fa407bac1", "patch": "@@ -1,6 +1,6 @@\n // PR c++/66091\n // { dg-do compile { target c++17_only } }\n-// { dg-additional-options \"-fconcepts\" }\n+// { dg-additional-options \"-fconcepts-ts\" }\n \n template<typename T>\n concept bool C1()"}, {"sha": "726c90f4ab8a751ed410648ae5c7f6b35dab654b", "filename": "gcc/testsuite/g++.dg/cpp2a/concepts-pr84979-2.C", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-pr84979-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-pr84979-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-pr84979-2.C?ref=a4cd2389276a30c39034a83d640ce68fa407bac1", "patch": "@@ -4,10 +4,9 @@\n template <typename T>\n void foo1(T& t) {\n   typename T::template C<void> tcv = t;\n-  typename T::template C<auto> u = tcv; // { dg-error \"\" \"\" { target c++20 } }\n+  typename T::template C<auto> u = tcv; // { dg-error \"\" }\n   T::template C<auto>::f (tcv, u); // { dg-error \"\" }\n   (typename T::template D<auto> (t)); // { dg-error \"\" }\n-// { dg-warning \"only available\" \"\" { target c++17_down } .-1 }\n }\n \n struct T1 {\n@@ -23,7 +22,7 @@ struct T1 {\n template <typename T>\n void foo2(T& t) {\n   typename T::template C<void> tcv = t;\n-  typename T::template C<auto> u = tcv; // { dg-error \"\" \"\" { target c++20 } }\n+  typename T::template C<auto> u = tcv; // { dg-error \"\" }\n   T::template C<auto>::f (tcv, u); // { dg-error \"\" }\n   T::template D<auto> (t); // { dg-error \"\" }\n }"}, {"sha": "ec8ae3564fa982a5f0e4fda0c84d8ccff458411c", "filename": "gcc/testsuite/g++.dg/cpp2a/concepts-pr84979-3.C", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-pr84979-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-pr84979-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-pr84979-3.C?ref=a4cd2389276a30c39034a83d640ce68fa407bac1", "patch": "@@ -8,10 +8,9 @@\n template <typename T>\n void foo1(T& t) {\n   typename T::template C<void> tcv = t;\n-  typename T::template C<auto> u = tcv; // { dg-error \"\" \"\" { target c++20 } }\n+  typename T::template C<auto> u = tcv; // { dg-error \"\" }\n   T::template C<auto>::f (tcv, u); // { dg-error \"\" }\n   (typename T::template D<auto> (t)); // { dg-error \"\" }\n-// { dg-warning \"only available\" \"\" { target c++17_down } .-1 }\n }\n \n struct T1 {\n@@ -27,7 +26,7 @@ struct T1 {\n template <typename T>\n void foo2(T& t) {\n   typename T::template C<void> tcv = t;\n-  typename T::template C<auto> u = tcv; // { dg-error \"\" \"\" { target c++20 } }\n+  typename T::template C<auto> u = tcv; // { dg-error \"\" }\n   T::template C<auto>::f (tcv, u); // { dg-error \"\" }\n   T::template D<auto> (t); // { dg-error \"\" }\n }"}, {"sha": "635a168899949d2b237df5e62cf48db03fbf61da", "filename": "gcc/testsuite/g++.dg/cpp2a/concepts-pr84980.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-pr84980.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-pr84980.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-pr84980.C?ref=a4cd2389276a30c39034a83d640ce68fa407bac1", "patch": "@@ -1,4 +1,4 @@\n // { dg-do compile { target c++17_only } }\n-// { dg-additional-options \"-fconcepts\" }\n+// { dg-additional-options \"-fconcepts-ts\" }\n \n template<T> concept bool C = true;  // { dg-error \"has not been declared\" }"}, {"sha": "d351b4594aeac7bf9c9f26fabb10dbf12b0dde69", "filename": "gcc/testsuite/g++.dg/cpp2a/concepts-pr85265.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-pr85265.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4cd2389276a30c39034a83d640ce68fa407bac1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-pr85265.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-pr85265.C?ref=a4cd2389276a30c39034a83d640ce68fa407bac1", "patch": "@@ -1,6 +1,6 @@\n // PR c++/85265\n // { dg-do compile { target c++17_only } }\n-// { dg-additional-options \"-fconcepts\" }\n+// { dg-additional-options \"-fconcepts-ts\" }\n \n template<typename> concept bool C = true;\n "}]}