{"sha": "a6ec93973c6adf3fc6229ec00114eddf7b1de16f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTZlYzkzOTczYzZhZGYzZmM2MjI5ZWMwMDExNGVkZGY3YjFkZTE2Zg==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2007-01-11T00:15:27Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2007-01-11T00:15:27Z"}, "message": "*.h: New files.\n\n\t* gnu/gcj/xlib/*.h: New files.\n\t* gnu/awt/xlib/*.h: Likewise.\n\t* classpath/lib/gnu/gcj/xlib: New class files.\n\t* classpath/lib/gnu/awt/xlib: Likewise.\n\nFrom-SVN: r120655", "tree": {"sha": "01d9055267d01f0ea0af975f7a555df18b81983e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/01d9055267d01f0ea0af975f7a555df18b81983e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a6ec93973c6adf3fc6229ec00114eddf7b1de16f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6ec93973c6adf3fc6229ec00114eddf7b1de16f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6ec93973c6adf3fc6229ec00114eddf7b1de16f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/comments", "author": null, "committer": null, "parents": [{"sha": "eee96b1bb085e08d7a6eb415bb42e61122914268", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eee96b1bb085e08d7a6eb415bb42e61122914268", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eee96b1bb085e08d7a6eb415bb42e61122914268"}], "stats": {"total": 2646, "additions": 2646, "deletions": 0}, "files": [{"sha": "a7bed7fc5ad0fee1098272e1de383afba5ce4c70", "filename": "libjava/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=a6ec93973c6adf3fc6229ec00114eddf7b1de16f", "patch": "@@ -1,3 +1,10 @@\n+2007-01-10  Tom Tromey  <tromey@redhat.com>\n+\n+\t* gnu/gcj/xlib/*.h: New files.\n+\t* gnu/awt/xlib/*.h: Likewise.\n+\t* classpath/lib/gnu/gcj/xlib: New class files.\n+\t* classpath/lib/gnu/awt/xlib: Likewise.\n+\n 2007-01-10  Tom Tromey  <tromey@redhat.com>\n \n \t* HACKING: Various updates."}, {"sha": "85e366de3816d6410b43762c3cce0e719fc17e0d", "filename": "libjava/classpath/lib/gnu/awt/xlib/XCanvasPeer$DoMap.class", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fclasspath%2Flib%2Fgnu%2Fawt%2Fxlib%2FXCanvasPeer%24DoMap.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fclasspath%2Flib%2Fgnu%2Fawt%2Fxlib%2FXCanvasPeer%24DoMap.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fgnu%2Fawt%2Fxlib%2FXCanvasPeer%24DoMap.class?ref=a6ec93973c6adf3fc6229ec00114eddf7b1de16f"}, {"sha": "33f2a59128498d9a399e8eb0913e0441f1237f44", "filename": "libjava/classpath/lib/gnu/awt/xlib/XCanvasPeer.class", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fclasspath%2Flib%2Fgnu%2Fawt%2Fxlib%2FXCanvasPeer.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fclasspath%2Flib%2Fgnu%2Fawt%2Fxlib%2FXCanvasPeer.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fgnu%2Fawt%2Fxlib%2FXCanvasPeer.class?ref=a6ec93973c6adf3fc6229ec00114eddf7b1de16f"}, {"sha": "08f76c68d826631dbad704b74b2de1740eac0711", "filename": "libjava/classpath/lib/gnu/awt/xlib/XEventLoop.class", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fclasspath%2Flib%2Fgnu%2Fawt%2Fxlib%2FXEventLoop.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fclasspath%2Flib%2Fgnu%2Fawt%2Fxlib%2FXEventLoop.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fgnu%2Fawt%2Fxlib%2FXEventLoop.class?ref=a6ec93973c6adf3fc6229ec00114eddf7b1de16f"}, {"sha": "17891b14a27b792b9bc658357be9797a4e016cf2", "filename": "libjava/classpath/lib/gnu/awt/xlib/XEventQueue.class", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fclasspath%2Flib%2Fgnu%2Fawt%2Fxlib%2FXEventQueue.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fclasspath%2Flib%2Fgnu%2Fawt%2Fxlib%2FXEventQueue.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fgnu%2Fawt%2Fxlib%2FXEventQueue.class?ref=a6ec93973c6adf3fc6229ec00114eddf7b1de16f"}, {"sha": "0ad67f35dedf928a1b9eb47b05109439ddec7177", "filename": "libjava/classpath/lib/gnu/awt/xlib/XFontMetrics.class", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fclasspath%2Flib%2Fgnu%2Fawt%2Fxlib%2FXFontMetrics.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fclasspath%2Flib%2Fgnu%2Fawt%2Fxlib%2FXFontMetrics.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fgnu%2Fawt%2Fxlib%2FXFontMetrics.class?ref=a6ec93973c6adf3fc6229ec00114eddf7b1de16f"}, {"sha": "49be95c498466bd2d81b68feb03b05c5b30c1436", "filename": "libjava/classpath/lib/gnu/awt/xlib/XFontPeer.class", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fclasspath%2Flib%2Fgnu%2Fawt%2Fxlib%2FXFontPeer.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fclasspath%2Flib%2Fgnu%2Fawt%2Fxlib%2FXFontPeer.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fgnu%2Fawt%2Fxlib%2FXFontPeer.class?ref=a6ec93973c6adf3fc6229ec00114eddf7b1de16f"}, {"sha": "43e9b4bcb847d026adb6c34d900b1d6ff043f7c1", "filename": "libjava/classpath/lib/gnu/awt/xlib/XFramePeer.class", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fclasspath%2Flib%2Fgnu%2Fawt%2Fxlib%2FXFramePeer.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fclasspath%2Flib%2Fgnu%2Fawt%2Fxlib%2FXFramePeer.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fgnu%2Fawt%2Fxlib%2FXFramePeer.class?ref=a6ec93973c6adf3fc6229ec00114eddf7b1de16f"}, {"sha": "27b14d0b3ebeef47e63d9163534812c52f31cd86", "filename": "libjava/classpath/lib/gnu/awt/xlib/XGraphics$XRaster.class", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fclasspath%2Flib%2Fgnu%2Fawt%2Fxlib%2FXGraphics%24XRaster.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fclasspath%2Flib%2Fgnu%2Fawt%2Fxlib%2FXGraphics%24XRaster.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fgnu%2Fawt%2Fxlib%2FXGraphics%24XRaster.class?ref=a6ec93973c6adf3fc6229ec00114eddf7b1de16f"}, {"sha": "02601e0af390b270b8d41a7fd2e186766edca524", "filename": "libjava/classpath/lib/gnu/awt/xlib/XGraphics.class", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fclasspath%2Flib%2Fgnu%2Fawt%2Fxlib%2FXGraphics.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fclasspath%2Flib%2Fgnu%2Fawt%2Fxlib%2FXGraphics.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fgnu%2Fawt%2Fxlib%2FXGraphics.class?ref=a6ec93973c6adf3fc6229ec00114eddf7b1de16f"}, {"sha": "7ec5b1ca7e1b15a1f002a2a26119516b99b5e185", "filename": "libjava/classpath/lib/gnu/awt/xlib/XGraphicsConfiguration$FontMetricsCache$PerDisplayCache$CacheEntry.class", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fclasspath%2Flib%2Fgnu%2Fawt%2Fxlib%2FXGraphicsConfiguration%24FontMetricsCache%24PerDisplayCache%24CacheEntry.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fclasspath%2Flib%2Fgnu%2Fawt%2Fxlib%2FXGraphicsConfiguration%24FontMetricsCache%24PerDisplayCache%24CacheEntry.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fgnu%2Fawt%2Fxlib%2FXGraphicsConfiguration%24FontMetricsCache%24PerDisplayCache%24CacheEntry.class?ref=a6ec93973c6adf3fc6229ec00114eddf7b1de16f"}, {"sha": "f1ad48c2f9cf7c270ab578c7101299d63055606d", "filename": "libjava/classpath/lib/gnu/awt/xlib/XGraphicsConfiguration$FontMetricsCache$PerDisplayCache.class", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fclasspath%2Flib%2Fgnu%2Fawt%2Fxlib%2FXGraphicsConfiguration%24FontMetricsCache%24PerDisplayCache.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fclasspath%2Flib%2Fgnu%2Fawt%2Fxlib%2FXGraphicsConfiguration%24FontMetricsCache%24PerDisplayCache.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fgnu%2Fawt%2Fxlib%2FXGraphicsConfiguration%24FontMetricsCache%24PerDisplayCache.class?ref=a6ec93973c6adf3fc6229ec00114eddf7b1de16f"}, {"sha": "13d939241c01053a879a92e585a53d83d6fac32f", "filename": "libjava/classpath/lib/gnu/awt/xlib/XGraphicsConfiguration$FontMetricsCache.class", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fclasspath%2Flib%2Fgnu%2Fawt%2Fxlib%2FXGraphicsConfiguration%24FontMetricsCache.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fclasspath%2Flib%2Fgnu%2Fawt%2Fxlib%2FXGraphicsConfiguration%24FontMetricsCache.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fgnu%2Fawt%2Fxlib%2FXGraphicsConfiguration%24FontMetricsCache.class?ref=a6ec93973c6adf3fc6229ec00114eddf7b1de16f"}, {"sha": "f1ade26026fefde63014bae731fdbc9c7f9f885d", "filename": "libjava/classpath/lib/gnu/awt/xlib/XGraphicsConfiguration.class", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fclasspath%2Flib%2Fgnu%2Fawt%2Fxlib%2FXGraphicsConfiguration.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fclasspath%2Flib%2Fgnu%2Fawt%2Fxlib%2FXGraphicsConfiguration.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fgnu%2Fawt%2Fxlib%2FXGraphicsConfiguration.class?ref=a6ec93973c6adf3fc6229ec00114eddf7b1de16f"}, {"sha": "0acf6d193894ecc56945699fbb6536f8a8364be3", "filename": "libjava/classpath/lib/gnu/awt/xlib/XGraphicsDevice.class", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fclasspath%2Flib%2Fgnu%2Fawt%2Fxlib%2FXGraphicsDevice.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fclasspath%2Flib%2Fgnu%2Fawt%2Fxlib%2FXGraphicsDevice.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fgnu%2Fawt%2Fxlib%2FXGraphicsDevice.class?ref=a6ec93973c6adf3fc6229ec00114eddf7b1de16f"}, {"sha": "1d10fa802fd2c95e5ea38bd29a53dd0d0d96f4e5", "filename": "libjava/classpath/lib/gnu/awt/xlib/XGraphicsEnvironment.class", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fclasspath%2Flib%2Fgnu%2Fawt%2Fxlib%2FXGraphicsEnvironment.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fclasspath%2Flib%2Fgnu%2Fawt%2Fxlib%2FXGraphicsEnvironment.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fgnu%2Fawt%2Fxlib%2FXGraphicsEnvironment.class?ref=a6ec93973c6adf3fc6229ec00114eddf7b1de16f"}, {"sha": "5b72ee16129c5e7457563ecd4dfa0e9ce4dfd087", "filename": "libjava/classpath/lib/gnu/awt/xlib/XOffScreenImage.class", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fclasspath%2Flib%2Fgnu%2Fawt%2Fxlib%2FXOffScreenImage.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fclasspath%2Flib%2Fgnu%2Fawt%2Fxlib%2FXOffScreenImage.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fgnu%2Fawt%2Fxlib%2FXOffScreenImage.class?ref=a6ec93973c6adf3fc6229ec00114eddf7b1de16f"}, {"sha": "861cb40a374b42a204919c7f2cee35d87fb27b05", "filename": "libjava/classpath/lib/gnu/awt/xlib/XPanelPeer.class", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fclasspath%2Flib%2Fgnu%2Fawt%2Fxlib%2FXPanelPeer.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fclasspath%2Flib%2Fgnu%2Fawt%2Fxlib%2FXPanelPeer.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fgnu%2Fawt%2Fxlib%2FXPanelPeer.class?ref=a6ec93973c6adf3fc6229ec00114eddf7b1de16f"}, {"sha": "cbbe2a92bdd401b261172da08660b547e8d6dcf2", "filename": "libjava/classpath/lib/gnu/awt/xlib/XToolkit.class", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fclasspath%2Flib%2Fgnu%2Fawt%2Fxlib%2FXToolkit.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fclasspath%2Flib%2Fgnu%2Fawt%2Fxlib%2FXToolkit.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fgnu%2Fawt%2Fxlib%2FXToolkit.class?ref=a6ec93973c6adf3fc6229ec00114eddf7b1de16f"}, {"sha": "c01abf5e9b7e5d877ea8990a0fda314b2547f8c5", "filename": "libjava/classpath/lib/gnu/gcj/xlib/Clip.class", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fclasspath%2Flib%2Fgnu%2Fgcj%2Fxlib%2FClip.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fclasspath%2Flib%2Fgnu%2Fgcj%2Fxlib%2FClip.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fgnu%2Fgcj%2Fxlib%2FClip.class?ref=a6ec93973c6adf3fc6229ec00114eddf7b1de16f"}, {"sha": "ebebe56304b4f97ef50c9b7d2fdd867212c5b95d", "filename": "libjava/classpath/lib/gnu/gcj/xlib/Colormap.class", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fclasspath%2Flib%2Fgnu%2Fgcj%2Fxlib%2FColormap.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fclasspath%2Flib%2Fgnu%2Fgcj%2Fxlib%2FColormap.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fgnu%2Fgcj%2Fxlib%2FColormap.class?ref=a6ec93973c6adf3fc6229ec00114eddf7b1de16f"}, {"sha": "15ea12b63692e16f329d3d346f9e0fe0f205096d", "filename": "libjava/classpath/lib/gnu/gcj/xlib/Display.class", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fclasspath%2Flib%2Fgnu%2Fgcj%2Fxlib%2FDisplay.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fclasspath%2Flib%2Fgnu%2Fgcj%2Fxlib%2FDisplay.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fgnu%2Fgcj%2Fxlib%2FDisplay.class?ref=a6ec93973c6adf3fc6229ec00114eddf7b1de16f"}, {"sha": "9a3bc4d2f4641ce2dab0f65bf56156ab40a79d84", "filename": "libjava/classpath/lib/gnu/gcj/xlib/Drawable.class", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fclasspath%2Flib%2Fgnu%2Fgcj%2Fxlib%2FDrawable.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fclasspath%2Flib%2Fgnu%2Fgcj%2Fxlib%2FDrawable.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fgnu%2Fgcj%2Fxlib%2FDrawable.class?ref=a6ec93973c6adf3fc6229ec00114eddf7b1de16f"}, {"sha": "c54c0dda6a7142429812258584c694ab92939aca", "filename": "libjava/classpath/lib/gnu/gcj/xlib/Font.class", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fclasspath%2Flib%2Fgnu%2Fgcj%2Fxlib%2FFont.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fclasspath%2Flib%2Fgnu%2Fgcj%2Fxlib%2FFont.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fgnu%2Fgcj%2Fxlib%2FFont.class?ref=a6ec93973c6adf3fc6229ec00114eddf7b1de16f"}, {"sha": "9d57dc7f3ebdc2da8027cc32b65e2782c77c155f", "filename": "libjava/classpath/lib/gnu/gcj/xlib/GC.class", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fclasspath%2Flib%2Fgnu%2Fgcj%2Fxlib%2FGC.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fclasspath%2Flib%2Fgnu%2Fgcj%2Fxlib%2FGC.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fgnu%2Fgcj%2Fxlib%2FGC.class?ref=a6ec93973c6adf3fc6229ec00114eddf7b1de16f"}, {"sha": "9ba88b6d479f87ee8b5a8c7540817f925c9183f5", "filename": "libjava/classpath/lib/gnu/gcj/xlib/Pixmap.class", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fclasspath%2Flib%2Fgnu%2Fgcj%2Fxlib%2FPixmap.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fclasspath%2Flib%2Fgnu%2Fgcj%2Fxlib%2FPixmap.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fgnu%2Fgcj%2Fxlib%2FPixmap.class?ref=a6ec93973c6adf3fc6229ec00114eddf7b1de16f"}, {"sha": "24740762e32afb0c80accded49bbaac70c8090b6", "filename": "libjava/classpath/lib/gnu/gcj/xlib/Screen.class", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fclasspath%2Flib%2Fgnu%2Fgcj%2Fxlib%2FScreen.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fclasspath%2Flib%2Fgnu%2Fgcj%2Fxlib%2FScreen.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fgnu%2Fgcj%2Fxlib%2FScreen.class?ref=a6ec93973c6adf3fc6229ec00114eddf7b1de16f"}, {"sha": "32ec71e7cd959879732a4fe67b63ff212cca6309", "filename": "libjava/classpath/lib/gnu/gcj/xlib/Visual.class", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fclasspath%2Flib%2Fgnu%2Fgcj%2Fxlib%2FVisual.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fclasspath%2Flib%2Fgnu%2Fgcj%2Fxlib%2FVisual.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fgnu%2Fgcj%2Fxlib%2FVisual.class?ref=a6ec93973c6adf3fc6229ec00114eddf7b1de16f"}, {"sha": "308f6b41940cdbfdeb86a8fd66cadf412e06b252", "filename": "libjava/classpath/lib/gnu/gcj/xlib/WMSizeHints.class", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fclasspath%2Flib%2Fgnu%2Fgcj%2Fxlib%2FWMSizeHints.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fclasspath%2Flib%2Fgnu%2Fgcj%2Fxlib%2FWMSizeHints.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fgnu%2Fgcj%2Fxlib%2FWMSizeHints.class?ref=a6ec93973c6adf3fc6229ec00114eddf7b1de16f"}, {"sha": "f7e46480298576dc19891fa698f86ba704570248", "filename": "libjava/classpath/lib/gnu/gcj/xlib/Window.class", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fclasspath%2Flib%2Fgnu%2Fgcj%2Fxlib%2FWindow.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fclasspath%2Flib%2Fgnu%2Fgcj%2Fxlib%2FWindow.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fgnu%2Fgcj%2Fxlib%2FWindow.class?ref=a6ec93973c6adf3fc6229ec00114eddf7b1de16f"}, {"sha": "7d62e6d3b93b8ac11235b1db9b4d52c2d81ead56", "filename": "libjava/classpath/lib/gnu/gcj/xlib/WindowAttributes.class", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fclasspath%2Flib%2Fgnu%2Fgcj%2Fxlib%2FWindowAttributes.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fclasspath%2Flib%2Fgnu%2Fgcj%2Fxlib%2FWindowAttributes.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fgnu%2Fgcj%2Fxlib%2FWindowAttributes.class?ref=a6ec93973c6adf3fc6229ec00114eddf7b1de16f"}, {"sha": "fdc290985088dbd4e55d60b6f23dc603ff93f1c6", "filename": "libjava/classpath/lib/gnu/gcj/xlib/XAnyEvent.class", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fclasspath%2Flib%2Fgnu%2Fgcj%2Fxlib%2FXAnyEvent.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fclasspath%2Flib%2Fgnu%2Fgcj%2Fxlib%2FXAnyEvent.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fgnu%2Fgcj%2Fxlib%2FXAnyEvent.class?ref=a6ec93973c6adf3fc6229ec00114eddf7b1de16f"}, {"sha": "8fc07afd90b991b61e0a0fd0812c412b112e3f2e", "filename": "libjava/classpath/lib/gnu/gcj/xlib/XButtonEvent.class", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fclasspath%2Flib%2Fgnu%2Fgcj%2Fxlib%2FXButtonEvent.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fclasspath%2Flib%2Fgnu%2Fgcj%2Fxlib%2FXButtonEvent.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fgnu%2Fgcj%2Fxlib%2FXButtonEvent.class?ref=a6ec93973c6adf3fc6229ec00114eddf7b1de16f"}, {"sha": "278ca685ab2ed9e978017b344a087840d653a19d", "filename": "libjava/classpath/lib/gnu/gcj/xlib/XColor.class", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fclasspath%2Flib%2Fgnu%2Fgcj%2Fxlib%2FXColor.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fclasspath%2Flib%2Fgnu%2Fgcj%2Fxlib%2FXColor.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fgnu%2Fgcj%2Fxlib%2FXColor.class?ref=a6ec93973c6adf3fc6229ec00114eddf7b1de16f"}, {"sha": "30a7162fb9fc8d4b87179002d178ab9069fa062d", "filename": "libjava/classpath/lib/gnu/gcj/xlib/XConfigureEvent.class", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fclasspath%2Flib%2Fgnu%2Fgcj%2Fxlib%2FXConfigureEvent.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fclasspath%2Flib%2Fgnu%2Fgcj%2Fxlib%2FXConfigureEvent.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fgnu%2Fgcj%2Fxlib%2FXConfigureEvent.class?ref=a6ec93973c6adf3fc6229ec00114eddf7b1de16f"}, {"sha": "aad27d57832744bd442e5e1e7e267929e41cb65b", "filename": "libjava/classpath/lib/gnu/gcj/xlib/XConnectException.class", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fclasspath%2Flib%2Fgnu%2Fgcj%2Fxlib%2FXConnectException.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fclasspath%2Flib%2Fgnu%2Fgcj%2Fxlib%2FXConnectException.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fgnu%2Fgcj%2Fxlib%2FXConnectException.class?ref=a6ec93973c6adf3fc6229ec00114eddf7b1de16f"}, {"sha": "f646dc0adac62cdc765ded22ecd94f782f1724bd", "filename": "libjava/classpath/lib/gnu/gcj/xlib/XEvent.class", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fclasspath%2Flib%2Fgnu%2Fgcj%2Fxlib%2FXEvent.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fclasspath%2Flib%2Fgnu%2Fgcj%2Fxlib%2FXEvent.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fgnu%2Fgcj%2Fxlib%2FXEvent.class?ref=a6ec93973c6adf3fc6229ec00114eddf7b1de16f"}, {"sha": "59de9dbeeb55d821ad2c0dc1999bc9e404f9adf4", "filename": "libjava/classpath/lib/gnu/gcj/xlib/XException.class", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fclasspath%2Flib%2Fgnu%2Fgcj%2Fxlib%2FXException.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fclasspath%2Flib%2Fgnu%2Fgcj%2Fxlib%2FXException.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fgnu%2Fgcj%2Fxlib%2FXException.class?ref=a6ec93973c6adf3fc6229ec00114eddf7b1de16f"}, {"sha": "82e1f8dcfe9f8e861ea6c096271a02bde2ce7ae0", "filename": "libjava/classpath/lib/gnu/gcj/xlib/XExposeEvent.class", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fclasspath%2Flib%2Fgnu%2Fgcj%2Fxlib%2FXExposeEvent.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fclasspath%2Flib%2Fgnu%2Fgcj%2Fxlib%2FXExposeEvent.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fgnu%2Fgcj%2Fxlib%2FXExposeEvent.class?ref=a6ec93973c6adf3fc6229ec00114eddf7b1de16f"}, {"sha": "90062ab4b4e07a9a771280f3e2913a94ec96694f", "filename": "libjava/classpath/lib/gnu/gcj/xlib/XID.class", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fclasspath%2Flib%2Fgnu%2Fgcj%2Fxlib%2FXID.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fclasspath%2Flib%2Fgnu%2Fgcj%2Fxlib%2FXID.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fgnu%2Fgcj%2Fxlib%2FXID.class?ref=a6ec93973c6adf3fc6229ec00114eddf7b1de16f"}, {"sha": "53a84317ac318f9040c56842cc3f94e652d230b6", "filename": "libjava/classpath/lib/gnu/gcj/xlib/XImage.class", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fclasspath%2Flib%2Fgnu%2Fgcj%2Fxlib%2FXImage.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fclasspath%2Flib%2Fgnu%2Fgcj%2Fxlib%2FXImage.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fgnu%2Fgcj%2Fxlib%2FXImage.class?ref=a6ec93973c6adf3fc6229ec00114eddf7b1de16f"}, {"sha": "88b5366f3200f2e3677aeef949d65db98d37d070", "filename": "libjava/classpath/lib/gnu/gcj/xlib/XUnmapEvent.class", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fclasspath%2Flib%2Fgnu%2Fgcj%2Fxlib%2FXUnmapEvent.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fclasspath%2Flib%2Fgnu%2Fgcj%2Fxlib%2FXUnmapEvent.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fgnu%2Fgcj%2Fxlib%2FXUnmapEvent.class?ref=a6ec93973c6adf3fc6229ec00114eddf7b1de16f"}, {"sha": "08498e179c2718968e2961fff0c25da884183ed3", "filename": "libjava/gnu/awt/xlib/XCanvasPeer$DoMap.h", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fgnu%2Fawt%2Fxlib%2FXCanvasPeer%24DoMap.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fgnu%2Fawt%2Fxlib%2FXCanvasPeer%24DoMap.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fawt%2Fxlib%2FXCanvasPeer%24DoMap.h?ref=a6ec93973c6adf3fc6229ec00114eddf7b1de16f", "patch": "@@ -0,0 +1,43 @@\n+\n+// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-\n+\n+#ifndef __gnu_awt_xlib_XCanvasPeer$DoMap__\n+#define __gnu_awt_xlib_XCanvasPeer$DoMap__\n+\n+#pragma interface\n+\n+#include <java/lang/Object.h>\n+extern \"Java\"\n+{\n+  namespace gnu\n+  {\n+    namespace awt\n+    {\n+      namespace xlib\n+      {\n+          class XCanvasPeer$DoMap;\n+      }\n+    }\n+    namespace gcj\n+    {\n+      namespace xlib\n+      {\n+          class Window;\n+      }\n+    }\n+  }\n+}\n+\n+class gnu::awt::xlib::XCanvasPeer$DoMap : public ::java::lang::Object\n+{\n+\n+public:\n+  XCanvasPeer$DoMap(::gnu::gcj::xlib::Window *);\n+  virtual void run();\n+public: // actually package-private\n+  ::gnu::gcj::xlib::Window * __attribute__((aligned(__alignof__( ::java::lang::Object)))) window;\n+public:\n+  static ::java::lang::Class class$;\n+};\n+\n+#endif // __gnu_awt_xlib_XCanvasPeer$DoMap__"}, {"sha": "fb01c06c2e4cf94f0c10c5441c7f688e53351c67", "filename": "libjava/gnu/awt/xlib/XCanvasPeer.h", "status": "added", "additions": 156, "deletions": 0, "changes": 156, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fgnu%2Fawt%2Fxlib%2FXCanvasPeer.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fgnu%2Fawt%2Fxlib%2FXCanvasPeer.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fawt%2Fxlib%2FXCanvasPeer.h?ref=a6ec93973c6adf3fc6229ec00114eddf7b1de16f", "patch": "@@ -0,0 +1,156 @@\n+\n+// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-\n+\n+#ifndef __gnu_awt_xlib_XCanvasPeer__\n+#define __gnu_awt_xlib_XCanvasPeer__\n+\n+#pragma interface\n+\n+#include <java/lang/Object.h>\n+extern \"Java\"\n+{\n+  namespace gnu\n+  {\n+    namespace awt\n+    {\n+      namespace xlib\n+      {\n+          class XCanvasPeer;\n+          class XGraphicsConfiguration;\n+          class XToolkit;\n+      }\n+    }\n+    namespace gcj\n+    {\n+      namespace xlib\n+      {\n+          class Window;\n+          class WindowAttributes;\n+      }\n+    }\n+  }\n+  namespace java\n+  {\n+    namespace awt\n+    {\n+        class AWTEvent;\n+        class BufferCapabilities;\n+        class BufferCapabilities$FlipContents;\n+        class Color;\n+        class Component;\n+        class Cursor;\n+        class Dimension;\n+        class Font;\n+        class FontMetrics;\n+        class Graphics;\n+        class GraphicsConfiguration;\n+        class Image;\n+        class Point;\n+        class Rectangle;\n+        class Toolkit;\n+      namespace event\n+      {\n+          class PaintEvent;\n+      }\n+      namespace image\n+      {\n+          class ColorModel;\n+          class ImageObserver;\n+          class ImageProducer;\n+          class VolatileImage;\n+      }\n+      namespace peer\n+      {\n+          class ContainerPeer;\n+      }\n+    }\n+  }\n+}\n+\n+class gnu::awt::xlib::XCanvasPeer : public ::java::lang::Object\n+{\n+\n+public:\n+  XCanvasPeer(::java::awt::Component *);\n+public: // actually package-private\n+  virtual ::gnu::gcj::xlib::Window * locateParentWindow(::java::awt::Rectangle *);\n+  virtual void initWindowProperties();\n+  virtual ::gnu::awt::xlib::XToolkit * getXToolkit();\n+public: // actually protected\n+  virtual void ensureFlush();\n+public:\n+  virtual ::java::awt::Component * getComponent();\n+public: // actually package-private\n+  virtual jlong getBasicEventMask();\n+public:\n+  virtual jint checkImage(::java::awt::Image *, jint, jint, ::java::awt::image::ImageObserver *);\n+  virtual ::java::awt::Image * createImage(::java::awt::image::ImageProducer *);\n+  virtual ::java::awt::Image * createImage(jint, jint);\n+  virtual void dispose();\n+  virtual ::java::awt::GraphicsConfiguration * getGraphicsConfiguration();\n+  virtual ::java::awt::FontMetrics * getFontMetrics(::java::awt::Font *);\n+  virtual ::java::awt::image::ColorModel * getColorModel();\n+  virtual ::java::awt::Graphics * getGraphics();\n+  virtual ::java::awt::Point * getLocationOnScreen();\n+  virtual ::java::awt::Dimension * getMinimumSize();\n+  virtual ::java::awt::Dimension * minimumSize();\n+  virtual ::java::awt::Dimension * getPreferredSize();\n+  virtual ::java::awt::Dimension * preferredSize();\n+  virtual ::java::awt::Toolkit * getToolkit();\n+  virtual void handleEvent(::java::awt::AWTEvent *);\n+  virtual jboolean isFocusTraversable();\n+  virtual void paint(::java::awt::Graphics *);\n+  virtual jboolean prepareImage(::java::awt::Image *, jint, jint, ::java::awt::image::ImageObserver *);\n+  virtual void print(::java::awt::Graphics *);\n+  virtual void repaint(jlong, jint, jint, jint, jint);\n+  virtual void requestFocus();\n+  virtual void setBackground(::java::awt::Color *);\n+  virtual void setBounds(jint, jint, jint, jint);\n+  virtual void reshape(jint, jint, jint, jint);\n+  virtual void setCursor(::java::awt::Cursor *);\n+  virtual void setEnabled(jboolean);\n+  virtual void enable();\n+  virtual void disable();\n+  virtual void setEventMask(jlong);\n+  virtual void setFont(::java::awt::Font *);\n+  virtual void setForeground(::java::awt::Color *);\n+  virtual void setVisible(jboolean);\n+  virtual void show();\n+  virtual void hide();\n+  virtual jboolean isFocusable();\n+  virtual jboolean requestFocus(::java::awt::Component *, jboolean, jboolean, jlong);\n+  virtual jboolean isObscured();\n+  virtual jboolean canDetermineObscurity();\n+  virtual void coalescePaintEvent(::java::awt::event::PaintEvent *);\n+  virtual void updateCursorImmediately();\n+  virtual ::java::awt::image::VolatileImage * createVolatileImage(jint, jint);\n+  virtual jboolean handlesWheelScrolling();\n+  virtual void createBuffers(jint, ::java::awt::BufferCapabilities *);\n+  virtual ::java::awt::Image * getBackBuffer();\n+  virtual void flip(::java::awt::BufferCapabilities$FlipContents *);\n+  virtual void destroyBuffers();\n+  virtual jboolean isRestackSupported();\n+  virtual void cancelPendingPaint(jint, jint, jint, jint);\n+  virtual void restack();\n+  virtual ::java::awt::Rectangle * getBounds();\n+  virtual void reparent(::java::awt::peer::ContainerPeer *);\n+  virtual void setBounds(jint, jint, jint, jint, jint);\n+  virtual jboolean isReparentSupported();\n+  virtual void layout();\n+public: // actually package-private\n+  static ::java::awt::Dimension * MIN_SIZE;\n+public:\n+  ::gnu::gcj::xlib::Window * __attribute__((aligned(__alignof__( ::java::lang::Object)))) window;\n+public: // actually package-private\n+  ::gnu::gcj::xlib::Window * parent;\n+  ::java::awt::Component * component;\n+  ::gnu::awt::xlib::XGraphicsConfiguration * config;\n+private:\n+  ::gnu::gcj::xlib::WindowAttributes * attributes;\n+  jlong eventMask;\n+  ::java::awt::Rectangle * locationBounds;\n+public:\n+  static ::java::lang::Class class$;\n+};\n+\n+#endif // __gnu_awt_xlib_XCanvasPeer__"}, {"sha": "0827f8aaa9a002bf570d364a2e49971a5538cad6", "filename": "libjava/gnu/awt/xlib/XEventLoop.h", "status": "added", "additions": 75, "deletions": 0, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fgnu%2Fawt%2Fxlib%2FXEventLoop.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fgnu%2Fawt%2Fxlib%2FXEventLoop.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fawt%2Fxlib%2FXEventLoop.h?ref=a6ec93973c6adf3fc6229ec00114eddf7b1de16f", "patch": "@@ -0,0 +1,75 @@\n+\n+// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-\n+\n+#ifndef __gnu_awt_xlib_XEventLoop__\n+#define __gnu_awt_xlib_XEventLoop__\n+\n+#pragma interface\n+\n+#include <java/lang/Object.h>\n+extern \"Java\"\n+{\n+  namespace gnu\n+  {\n+    namespace awt\n+    {\n+        class LightweightRedirector;\n+      namespace xlib\n+      {\n+          class XEventLoop;\n+      }\n+    }\n+    namespace gcj\n+    {\n+      namespace xlib\n+      {\n+          class Display;\n+          class XAnyEvent;\n+      }\n+    }\n+  }\n+  namespace java\n+  {\n+    namespace awt\n+    {\n+        class AWTEvent;\n+        class Component;\n+        class EventQueue;\n+    }\n+  }\n+}\n+\n+class gnu::awt::xlib::XEventLoop : public ::java::lang::Object\n+{\n+\n+public:\n+  XEventLoop(::gnu::gcj::xlib::Display *, ::java::awt::EventQueue *);\n+  virtual void run();\n+public: // actually package-private\n+  virtual jboolean postNextEvent(jboolean);\n+public:\n+  virtual ::java::awt::AWTEvent * getNextEvent(jboolean);\n+public: // actually package-private\n+  virtual jboolean loadNextEvent(jboolean);\n+  virtual ::java::awt::AWTEvent * createEvent();\n+  virtual ::java::awt::AWTEvent * createPaintEvent(::java::awt::Component *);\n+  virtual ::java::awt::AWTEvent * createMouseEvent(jint, ::java::awt::Component *);\n+  virtual void configureNotify(::java::lang::Object *);\n+public:\n+  virtual void flushIfIdle();\n+public: // actually package-private\n+  virtual void setIdle(jboolean);\n+  virtual jboolean isIdle();\n+  ::gnu::gcj::xlib::Display * __attribute__((aligned(__alignof__( ::java::lang::Object)))) display;\n+  ::java::awt::EventQueue * queue;\n+  ::gnu::gcj::xlib::XAnyEvent * anyEvent;\n+private:\n+  ::java::lang::Thread * eventLoopThread;\n+public: // actually package-private\n+  ::gnu::awt::LightweightRedirector * lightweightRedirector;\n+  volatile jboolean idle;\n+public:\n+  static ::java::lang::Class class$;\n+};\n+\n+#endif // __gnu_awt_xlib_XEventLoop__"}, {"sha": "ca41be73e34943ef221e2428cfeb5aa37748b702", "filename": "libjava/gnu/awt/xlib/XEventQueue.h", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fgnu%2Fawt%2Fxlib%2FXEventQueue.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fgnu%2Fawt%2Fxlib%2FXEventQueue.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fawt%2Fxlib%2FXEventQueue.h?ref=a6ec93973c6adf3fc6229ec00114eddf7b1de16f", "patch": "@@ -0,0 +1,50 @@\n+\n+// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-\n+\n+#ifndef __gnu_awt_xlib_XEventQueue__\n+#define __gnu_awt_xlib_XEventQueue__\n+\n+#pragma interface\n+\n+#include <java/awt/EventQueue.h>\n+extern \"Java\"\n+{\n+  namespace gnu\n+  {\n+    namespace awt\n+    {\n+      namespace xlib\n+      {\n+          class XEventQueue;\n+      }\n+    }\n+    namespace gcj\n+    {\n+      namespace xlib\n+      {\n+          class Display;\n+      }\n+    }\n+  }\n+  namespace java\n+  {\n+    namespace awt\n+    {\n+        class AWTEvent;\n+    }\n+  }\n+}\n+\n+class gnu::awt::xlib::XEventQueue : public ::java::awt::EventQueue\n+{\n+\n+public:\n+  XEventQueue(::gnu::gcj::xlib::Display *);\n+  virtual ::java::awt::AWTEvent * getNextEvent();\n+public: // actually package-private\n+  ::gnu::gcj::xlib::Display * __attribute__((aligned(__alignof__( ::java::awt::EventQueue)))) display;\n+public:\n+  static ::java::lang::Class class$;\n+};\n+\n+#endif // __gnu_awt_xlib_XEventQueue__"}, {"sha": "55b2189783f2c3b868aa79374b82379e55b6bce8", "filename": "libjava/gnu/awt/xlib/XFontMetrics.h", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fgnu%2Fawt%2Fxlib%2FXFontMetrics.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fgnu%2Fawt%2Fxlib%2FXFontMetrics.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fawt%2Fxlib%2FXFontMetrics.h?ref=a6ec93973c6adf3fc6229ec00114eddf7b1de16f", "patch": "@@ -0,0 +1,54 @@\n+\n+// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-\n+\n+#ifndef __gnu_awt_xlib_XFontMetrics__\n+#define __gnu_awt_xlib_XFontMetrics__\n+\n+#pragma interface\n+\n+#include <java/awt/FontMetrics.h>\n+extern \"Java\"\n+{\n+  namespace gnu\n+  {\n+    namespace awt\n+    {\n+      namespace xlib\n+      {\n+          class XFontMetrics;\n+      }\n+    }\n+    namespace gcj\n+    {\n+      namespace xlib\n+      {\n+          class Font;\n+      }\n+    }\n+  }\n+  namespace java\n+  {\n+    namespace awt\n+    {\n+        class Font;\n+    }\n+  }\n+}\n+\n+class gnu::awt::xlib::XFontMetrics : public ::java::awt::FontMetrics\n+{\n+\n+public:\n+  XFontMetrics(::gnu::gcj::xlib::Font *, ::java::awt::Font *);\n+  virtual jint getAscent();\n+  virtual jint getDescent();\n+  virtual jint getMaxAscent();\n+  virtual jint getMaxDescent();\n+  virtual jint stringWidth(::java::lang::String *);\n+public: // actually package-private\n+  ::gnu::gcj::xlib::Font * __attribute__((aligned(__alignof__( ::java::awt::FontMetrics)))) xfont;\n+public:\n+  static ::java::lang::Class class$;\n+};\n+\n+#endif // __gnu_awt_xlib_XFontMetrics__"}, {"sha": "7a7f6b7df1afa3634ae4c1fcf70c68c557d675c6", "filename": "libjava/gnu/awt/xlib/XFontPeer.h", "status": "added", "additions": 73, "deletions": 0, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fgnu%2Fawt%2Fxlib%2FXFontPeer.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fgnu%2Fawt%2Fxlib%2FXFontPeer.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fawt%2Fxlib%2FXFontPeer.h?ref=a6ec93973c6adf3fc6229ec00114eddf7b1de16f", "patch": "@@ -0,0 +1,73 @@\n+\n+// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-\n+\n+#ifndef __gnu_awt_xlib_XFontPeer__\n+#define __gnu_awt_xlib_XFontPeer__\n+\n+#pragma interface\n+\n+#include <gnu/java/awt/peer/ClasspathFontPeer.h>\n+#include <gcj/array.h>\n+\n+extern \"Java\"\n+{\n+  namespace gnu\n+  {\n+    namespace awt\n+    {\n+      namespace xlib\n+      {\n+          class XFontPeer;\n+      }\n+    }\n+  }\n+  namespace java\n+  {\n+    namespace awt\n+    {\n+        class Font;\n+        class FontMetrics;\n+      namespace font\n+      {\n+          class FontRenderContext;\n+          class GlyphVector;\n+          class LineMetrics;\n+      }\n+      namespace geom\n+      {\n+          class Rectangle2D;\n+      }\n+    }\n+    namespace text\n+    {\n+        class CharacterIterator;\n+    }\n+  }\n+}\n+\n+class gnu::awt::xlib::XFontPeer : public ::gnu::java::awt::peer::ClasspathFontPeer\n+{\n+\n+public:\n+  XFontPeer(::java::lang::String *, jint);\n+  XFontPeer(::java::lang::String *, jint, jfloat);\n+  virtual jboolean canDisplay(::java::awt::Font *, jchar);\n+  virtual jint canDisplayUpTo(::java::awt::Font *, ::java::text::CharacterIterator *, jint, jint);\n+  virtual ::java::awt::font::GlyphVector * createGlyphVector(::java::awt::Font *, ::java::awt::font::FontRenderContext *, ::java::text::CharacterIterator *);\n+  virtual ::java::awt::font::GlyphVector * createGlyphVector(::java::awt::Font *, ::java::awt::font::FontRenderContext *, JArray< jint > *);\n+  virtual jbyte getBaselineFor(::java::awt::Font *, jchar);\n+  virtual ::java::awt::FontMetrics * getFontMetrics(::java::awt::Font *);\n+  virtual ::java::lang::String * getGlyphName(::java::awt::Font *, jint);\n+  virtual ::java::awt::font::LineMetrics * getLineMetrics(::java::awt::Font *, ::java::text::CharacterIterator *, jint, jint, ::java::awt::font::FontRenderContext *);\n+  virtual ::java::awt::geom::Rectangle2D * getMaxCharBounds(::java::awt::Font *, ::java::awt::font::FontRenderContext *);\n+  virtual jint getMissingGlyphCode(::java::awt::Font *);\n+  virtual jint getNumGlyphs(::java::awt::Font *);\n+  virtual ::java::lang::String * getPostScriptName(::java::awt::Font *);\n+  virtual ::java::awt::geom::Rectangle2D * getStringBounds(::java::awt::Font *, ::java::text::CharacterIterator *, jint, jint, ::java::awt::font::FontRenderContext *);\n+  virtual ::java::lang::String * getSubFamilyName(::java::awt::Font *, ::java::util::Locale *);\n+  virtual jboolean hasUniformLineMetrics(::java::awt::Font *);\n+  virtual ::java::awt::font::GlyphVector * layoutGlyphVector(::java::awt::Font *, ::java::awt::font::FontRenderContext *, JArray< jchar > *, jint, jint, jint);\n+  static ::java::lang::Class class$;\n+};\n+\n+#endif // __gnu_awt_xlib_XFontPeer__"}, {"sha": "621d2919d3442d9ccabf910d2b09b78d1e590dcb", "filename": "libjava/gnu/awt/xlib/XFramePeer.h", "status": "added", "additions": 82, "deletions": 0, "changes": 82, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fgnu%2Fawt%2Fxlib%2FXFramePeer.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fgnu%2Fawt%2Fxlib%2FXFramePeer.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fawt%2Fxlib%2FXFramePeer.h?ref=a6ec93973c6adf3fc6229ec00114eddf7b1de16f", "patch": "@@ -0,0 +1,82 @@\n+\n+// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-\n+\n+#ifndef __gnu_awt_xlib_XFramePeer__\n+#define __gnu_awt_xlib_XFramePeer__\n+\n+#pragma interface\n+\n+#include <gnu/awt/xlib/XCanvasPeer.h>\n+extern \"Java\"\n+{\n+  namespace gnu\n+  {\n+    namespace awt\n+    {\n+      namespace xlib\n+      {\n+          class XFramePeer;\n+      }\n+    }\n+    namespace gcj\n+    {\n+      namespace xlib\n+      {\n+          class Window;\n+          class XConfigureEvent;\n+      }\n+    }\n+  }\n+  namespace java\n+  {\n+    namespace awt\n+    {\n+        class Frame;\n+        class Image;\n+        class Insets;\n+        class MenuBar;\n+        class Rectangle;\n+    }\n+  }\n+}\n+\n+class gnu::awt::xlib::XFramePeer : public ::gnu::awt::xlib::XCanvasPeer\n+{\n+\n+public:\n+  XFramePeer(::java::awt::Frame *);\n+public: // actually package-private\n+  virtual ::gnu::gcj::xlib::Window * locateParentWindow(::java::awt::Rectangle *);\n+  virtual void initWindowProperties();\n+  virtual jlong getBasicEventMask();\n+  virtual void configureNotify(::gnu::gcj::xlib::XConfigureEvent *);\n+public:\n+  virtual void setBounds(jint, jint, jint, jint);\n+  virtual ::java::awt::Insets * getInsets();\n+  virtual ::java::awt::Insets * insets();\n+  virtual void beginValidate();\n+  virtual void endValidate();\n+  virtual void toBack();\n+  virtual void toFront();\n+  virtual void setIconImage(::java::awt::Image *);\n+  virtual void setMenuBar(::java::awt::MenuBar *);\n+  virtual void setTitle(::java::lang::String *);\n+  virtual void setResizable(jboolean);\n+  virtual jint getState();\n+  virtual void setState(jint);\n+  virtual void setMaximizedBounds(::java::awt::Rectangle *);\n+  virtual void beginLayout();\n+  virtual void endLayout();\n+  virtual jboolean isPaintPending();\n+  virtual void setBoundsPrivate(jint, jint, jint, jint);\n+  virtual void updateAlwaysOnTop();\n+  virtual jboolean requestWindowFocus();\n+private:\n+  jboolean __attribute__((aligned(__alignof__( ::gnu::awt::xlib::XCanvasPeer)))) processingConfigureNotify;\n+public: // actually package-private\n+  static ::java::awt::Insets * INSETS_0_PROTOTYPE;\n+public:\n+  static ::java::lang::Class class$;\n+};\n+\n+#endif // __gnu_awt_xlib_XFramePeer__"}, {"sha": "8183599d6c2d374adb020945e5bc4696bdaf530b", "filename": "libjava/gnu/awt/xlib/XGraphics$XRaster.h", "status": "added", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fgnu%2Fawt%2Fxlib%2FXGraphics%24XRaster.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fgnu%2Fawt%2Fxlib%2FXGraphics%24XRaster.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fawt%2Fxlib%2FXGraphics%24XRaster.h?ref=a6ec93973c6adf3fc6229ec00114eddf7b1de16f", "patch": "@@ -0,0 +1,53 @@\n+\n+// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-\n+\n+#ifndef __gnu_awt_xlib_XGraphics$XRaster__\n+#define __gnu_awt_xlib_XGraphics$XRaster__\n+\n+#pragma interface\n+\n+#include <gnu/awt/j2d/MappedRaster.h>\n+extern \"Java\"\n+{\n+  namespace gnu\n+  {\n+    namespace awt\n+    {\n+      namespace xlib\n+      {\n+          class XGraphics$XRaster;\n+      }\n+    }\n+    namespace gcj\n+    {\n+      namespace xlib\n+      {\n+          class XImage;\n+      }\n+    }\n+  }\n+  namespace java\n+  {\n+    namespace awt\n+    {\n+      namespace image\n+      {\n+          class ColorModel;\n+          class WritableRaster;\n+      }\n+    }\n+  }\n+}\n+\n+class gnu::awt::xlib::XGraphics$XRaster : public ::gnu::awt::j2d::MappedRaster\n+{\n+\n+public:\n+  XGraphics$XRaster(::java::awt::image::WritableRaster *, ::gnu::gcj::xlib::XImage *, ::java::awt::image::ColorModel *);\n+public: // actually package-private\n+  ::gnu::gcj::xlib::XImage * __attribute__((aligned(__alignof__( ::gnu::awt::j2d::MappedRaster)))) ximage;\n+public:\n+  static ::java::lang::Class class$;\n+};\n+\n+#endif // __gnu_awt_xlib_XGraphics$XRaster__"}, {"sha": "4098ba441896ea864d448d598cd292e178e74f01", "filename": "libjava/gnu/awt/xlib/XGraphics.h", "status": "added", "additions": 92, "deletions": 0, "changes": 92, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fgnu%2Fawt%2Fxlib%2FXGraphics.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fgnu%2Fawt%2Fxlib%2FXGraphics.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fawt%2Fxlib%2FXGraphics.h?ref=a6ec93973c6adf3fc6229ec00114eddf7b1de16f", "patch": "@@ -0,0 +1,92 @@\n+\n+// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-\n+\n+#ifndef __gnu_awt_xlib_XGraphics__\n+#define __gnu_awt_xlib_XGraphics__\n+\n+#pragma interface\n+\n+#include <java/lang/Object.h>\n+#include <gcj/array.h>\n+\n+extern \"Java\"\n+{\n+  namespace gnu\n+  {\n+    namespace awt\n+    {\n+      namespace j2d\n+      {\n+          class MappedRaster;\n+      }\n+      namespace xlib\n+      {\n+          class XFontMetrics;\n+          class XGraphics;\n+          class XGraphicsConfiguration;\n+      }\n+    }\n+    namespace gcj\n+    {\n+      namespace xlib\n+      {\n+          class Drawable;\n+          class GC;\n+      }\n+    }\n+  }\n+  namespace java\n+  {\n+    namespace awt\n+    {\n+        class Color;\n+        class Font;\n+        class FontMetrics;\n+        class Image;\n+        class Rectangle;\n+        class Shape;\n+      namespace image\n+      {\n+          class ImageObserver;\n+      }\n+    }\n+  }\n+}\n+\n+class gnu::awt::xlib::XGraphics : public ::java::lang::Object\n+{\n+\n+public:\n+  virtual ::java::lang::Object * clone();\n+  virtual void dispose();\n+  XGraphics(::gnu::gcj::xlib::Drawable *, ::gnu::awt::xlib::XGraphicsConfiguration *);\n+  virtual void setColor(::java::awt::Color *);\n+  virtual void setPaintMode();\n+  virtual void setXORMode(::java::awt::Color *);\n+  virtual void setFont(::java::awt::Font *);\n+  virtual ::java::awt::FontMetrics * getFontMetrics(::java::awt::Font *);\n+  virtual void setClip(jint, jint, jint, jint);\n+  virtual void setClip(::java::awt::Shape *);\n+  virtual void copyArea(jint, jint, jint, jint, jint, jint);\n+  virtual void drawLine(jint, jint, jint, jint);\n+  virtual void drawRect(jint, jint, jint, jint);\n+  virtual void fillRect(jint, jint, jint, jint);\n+  virtual void drawArc(jint, jint, jint, jint, jint, jint);\n+  virtual void fillArc(jint, jint, jint, jint, jint, jint);\n+  virtual void drawPolyline(JArray< jint > *, JArray< jint > *, jint);\n+  virtual void drawPolygon(JArray< jint > *, JArray< jint > *, jint);\n+  virtual void fillPolygon(JArray< jint > *, JArray< jint > *, jint, jint, jint);\n+  virtual void drawString(::java::lang::String *, jint, jint);\n+  virtual jboolean drawImage(::java::awt::Image *, jint, jint, ::java::awt::image::ImageObserver *);\n+  virtual ::gnu::awt::j2d::MappedRaster * mapRaster(::java::awt::Rectangle *);\n+  virtual void unmapRaster(::gnu::awt::j2d::MappedRaster *);\n+public: // actually package-private\n+  ::gnu::gcj::xlib::GC * __attribute__((aligned(__alignof__( ::java::lang::Object)))) context;\n+  ::gnu::awt::xlib::XGraphicsConfiguration * config;\n+  ::java::awt::Rectangle * clipBounds;\n+  ::gnu::awt::xlib::XFontMetrics * metrics;\n+public:\n+  static ::java::lang::Class class$;\n+};\n+\n+#endif // __gnu_awt_xlib_XGraphics__"}, {"sha": "42e3c8dbf23ae5a2f39e30a8667825fde026d14e", "filename": "libjava/gnu/awt/xlib/XGraphicsConfiguration$FontMetricsCache$PerDisplayCache$CacheEntry.h", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fgnu%2Fawt%2Fxlib%2FXGraphicsConfiguration%24FontMetricsCache%24PerDisplayCache%24CacheEntry.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fgnu%2Fawt%2Fxlib%2FXGraphicsConfiguration%24FontMetricsCache%24PerDisplayCache%24CacheEntry.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fawt%2Fxlib%2FXGraphicsConfiguration%24FontMetricsCache%24PerDisplayCache%24CacheEntry.h?ref=a6ec93973c6adf3fc6229ec00114eddf7b1de16f", "patch": "@@ -0,0 +1,46 @@\n+\n+// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-\n+\n+#ifndef __gnu_awt_xlib_XGraphicsConfiguration$FontMetricsCache$PerDisplayCache$CacheEntry__\n+#define __gnu_awt_xlib_XGraphicsConfiguration$FontMetricsCache$PerDisplayCache$CacheEntry__\n+\n+#pragma interface\n+\n+#include <java/lang/Object.h>\n+extern \"Java\"\n+{\n+  namespace gnu\n+  {\n+    namespace awt\n+    {\n+      namespace xlib\n+      {\n+          class XFontMetrics;\n+          class XGraphicsConfiguration$FontMetricsCache$PerDisplayCache;\n+          class XGraphicsConfiguration$FontMetricsCache$PerDisplayCache$CacheEntry;\n+      }\n+    }\n+  }\n+  namespace java\n+  {\n+    namespace awt\n+    {\n+        class Font;\n+    }\n+  }\n+}\n+\n+class gnu::awt::xlib::XGraphicsConfiguration$FontMetricsCache$PerDisplayCache$CacheEntry : public ::java::lang::Object\n+{\n+\n+public: // actually package-private\n+  XGraphicsConfiguration$FontMetricsCache$PerDisplayCache$CacheEntry(::gnu::awt::xlib::XGraphicsConfiguration$FontMetricsCache$PerDisplayCache *);\n+  jint __attribute__((aligned(__alignof__( ::java::lang::Object)))) lruOrder;\n+  ::gnu::awt::xlib::XFontMetrics * fm;\n+  ::java::awt::Font * font;\n+  ::gnu::awt::xlib::XGraphicsConfiguration$FontMetricsCache$PerDisplayCache * this$2;\n+public:\n+  static ::java::lang::Class class$;\n+};\n+\n+#endif // __gnu_awt_xlib_XGraphicsConfiguration$FontMetricsCache$PerDisplayCache$CacheEntry__"}, {"sha": "8a236d6704ee376c4d8d91fbc2b22170b2222a16", "filename": "libjava/gnu/awt/xlib/XGraphicsConfiguration$FontMetricsCache$PerDisplayCache.h", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fgnu%2Fawt%2Fxlib%2FXGraphicsConfiguration%24FontMetricsCache%24PerDisplayCache.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fgnu%2Fawt%2Fxlib%2FXGraphicsConfiguration%24FontMetricsCache%24PerDisplayCache.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fawt%2Fxlib%2FXGraphicsConfiguration%24FontMetricsCache%24PerDisplayCache.h?ref=a6ec93973c6adf3fc6229ec00114eddf7b1de16f", "patch": "@@ -0,0 +1,49 @@\n+\n+// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-\n+\n+#ifndef __gnu_awt_xlib_XGraphicsConfiguration$FontMetricsCache$PerDisplayCache__\n+#define __gnu_awt_xlib_XGraphicsConfiguration$FontMetricsCache$PerDisplayCache__\n+\n+#pragma interface\n+\n+#include <java/lang/Object.h>\n+extern \"Java\"\n+{\n+  namespace gnu\n+  {\n+    namespace awt\n+    {\n+      namespace xlib\n+      {\n+          class XFontMetrics;\n+          class XGraphicsConfiguration$FontMetricsCache;\n+          class XGraphicsConfiguration$FontMetricsCache$PerDisplayCache;\n+      }\n+    }\n+  }\n+  namespace java\n+  {\n+    namespace awt\n+    {\n+        class Font;\n+    }\n+  }\n+}\n+\n+class gnu::awt::xlib::XGraphicsConfiguration$FontMetricsCache$PerDisplayCache : public ::java::lang::Object\n+{\n+\n+public: // actually package-private\n+  XGraphicsConfiguration$FontMetricsCache$PerDisplayCache(::gnu::awt::xlib::XGraphicsConfiguration$FontMetricsCache *);\n+  virtual ::gnu::awt::xlib::XFontMetrics * get(::java::awt::Font *);\n+  virtual void put(::java::awt::Font *, ::gnu::awt::xlib::XFontMetrics *);\n+private:\n+  jint __attribute__((aligned(__alignof__( ::java::lang::Object)))) lruCount;\n+  ::java::util::Hashtable * entries;\n+public: // actually package-private\n+  ::gnu::awt::xlib::XGraphicsConfiguration$FontMetricsCache * this$1;\n+public:\n+  static ::java::lang::Class class$;\n+};\n+\n+#endif // __gnu_awt_xlib_XGraphicsConfiguration$FontMetricsCache$PerDisplayCache__"}, {"sha": "53935f518ca469a5df58f4ee20a3dc43005e21d8", "filename": "libjava/gnu/awt/xlib/XGraphicsConfiguration$FontMetricsCache.h", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fgnu%2Fawt%2Fxlib%2FXGraphicsConfiguration%24FontMetricsCache.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fgnu%2Fawt%2Fxlib%2FXGraphicsConfiguration%24FontMetricsCache.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fawt%2Fxlib%2FXGraphicsConfiguration%24FontMetricsCache.h?ref=a6ec93973c6adf3fc6229ec00114eddf7b1de16f", "patch": "@@ -0,0 +1,52 @@\n+\n+// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-\n+\n+#ifndef __gnu_awt_xlib_XGraphicsConfiguration$FontMetricsCache__\n+#define __gnu_awt_xlib_XGraphicsConfiguration$FontMetricsCache__\n+\n+#pragma interface\n+\n+#include <java/lang/Object.h>\n+extern \"Java\"\n+{\n+  namespace gnu\n+  {\n+    namespace awt\n+    {\n+      namespace xlib\n+      {\n+          class XFontMetrics;\n+          class XGraphicsConfiguration$FontMetricsCache;\n+      }\n+    }\n+    namespace gcj\n+    {\n+      namespace xlib\n+      {\n+          class Display;\n+      }\n+    }\n+  }\n+  namespace java\n+  {\n+    namespace awt\n+    {\n+        class Font;\n+    }\n+  }\n+}\n+\n+class gnu::awt::xlib::XGraphicsConfiguration$FontMetricsCache : public ::java::lang::Object\n+{\n+\n+public: // actually package-private\n+  XGraphicsConfiguration$FontMetricsCache();\n+  virtual ::gnu::awt::xlib::XFontMetrics * get(::java::awt::Font *, ::gnu::gcj::xlib::Display *);\n+  virtual void put(::java::awt::Font *, ::gnu::gcj::xlib::Display *, ::gnu::awt::xlib::XFontMetrics *);\n+private:\n+  ::java::util::Hashtable * __attribute__((aligned(__alignof__( ::java::lang::Object)))) displays;\n+public:\n+  static ::java::lang::Class class$;\n+};\n+\n+#endif // __gnu_awt_xlib_XGraphicsConfiguration$FontMetricsCache__"}, {"sha": "b7f53eff9e9881331a04d829ae89aad4059651b8", "filename": "libjava/gnu/awt/xlib/XGraphicsConfiguration.h", "status": "added", "additions": 103, "deletions": 0, "changes": 103, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fgnu%2Fawt%2Fxlib%2FXGraphicsConfiguration.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fgnu%2Fawt%2Fxlib%2FXGraphicsConfiguration.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fawt%2Fxlib%2FXGraphicsConfiguration.h?ref=a6ec93973c6adf3fc6229ec00114eddf7b1de16f", "patch": "@@ -0,0 +1,103 @@\n+\n+// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-\n+\n+#ifndef __gnu_awt_xlib_XGraphicsConfiguration__\n+#define __gnu_awt_xlib_XGraphicsConfiguration__\n+\n+#pragma interface\n+\n+#include <java/awt/GraphicsConfiguration.h>\n+extern \"Java\"\n+{\n+  namespace gnu\n+  {\n+    namespace awt\n+    {\n+      namespace xlib\n+      {\n+          class XFontMetrics;\n+          class XGraphicsConfiguration;\n+          class XGraphicsConfiguration$FontMetricsCache;\n+      }\n+    }\n+    namespace gcj\n+    {\n+      namespace xlib\n+      {\n+          class Colormap;\n+          class Visual;\n+          class XImage;\n+      }\n+    }\n+  }\n+  namespace java\n+  {\n+    namespace awt\n+    {\n+        class Color;\n+        class Font;\n+        class GraphicsDevice;\n+        class Point;\n+        class Rectangle;\n+      namespace geom\n+      {\n+          class AffineTransform;\n+      }\n+      namespace image\n+      {\n+          class BufferedImage;\n+          class ColorModel;\n+          class DataBuffer;\n+          class VolatileImage;\n+          class WritableRaster;\n+      }\n+    }\n+  }\n+}\n+\n+class gnu::awt::xlib::XGraphicsConfiguration : public ::java::awt::GraphicsConfiguration\n+{\n+\n+public:\n+  XGraphicsConfiguration(::gnu::gcj::xlib::Visual *);\n+  virtual ::java::awt::image::BufferedImage * createCompatibleImage(jint, jint);\n+public: // actually package-private\n+  virtual ::java::awt::image::WritableRaster * createRasterForXImage(::gnu::gcj::xlib::XImage *, ::java::awt::Point *);\n+  static void attachData(::gnu::gcj::xlib::XImage *, ::java::awt::image::DataBuffer *, jint);\n+  virtual void prepareColorModel(::gnu::gcj::xlib::XImage *);\n+  virtual void calcZPixmapModels(jint);\n+  virtual void calcDecomposedRGBModels(jint);\n+  virtual void calcPseudoColorModels(jint);\n+public:\n+  virtual ::java::awt::GraphicsDevice * getDevice();\n+  virtual ::java::awt::image::BufferedImage * createCompatibleImage(jint, jint, jint);\n+  virtual ::java::awt::image::VolatileImage * createCompatibleVolatileImage(jint, jint);\n+  virtual ::java::awt::image::ColorModel * getColorModel();\n+public: // actually package-private\n+  virtual void preparePixelCM();\n+public:\n+  virtual ::java::awt::image::ColorModel * getColorModel(jint);\n+  virtual ::java::awt::geom::AffineTransform * getDefaultTransform();\n+  virtual ::java::awt::geom::AffineTransform * getNormalizingTransform();\n+  virtual ::java::awt::Rectangle * getBounds();\n+public: // actually package-private\n+  virtual ::gnu::gcj::xlib::Visual * getVisual();\n+  virtual ::gnu::awt::xlib::XFontMetrics * getXFontMetrics(::java::awt::Font *);\n+  virtual jint getPixel(::java::awt::Color *);\n+public:\n+  virtual ::java::awt::image::VolatileImage * createCompatibleVolatileImage(jint, jint, jint);\n+public: // actually package-private\n+  ::gnu::gcj::xlib::Visual * __attribute__((aligned(__alignof__( ::java::awt::GraphicsConfiguration)))) visual;\n+  jint format;\n+  ::gnu::gcj::xlib::Colormap * colormap;\n+  ::java::awt::image::ColorModel * imageCM;\n+  ::java::awt::image::ColorModel * pixelCM;\n+private:\n+  static const jint CACHE_SIZE_PER_DISPLAY = 10;\n+public: // actually package-private\n+  static ::gnu::awt::xlib::XGraphicsConfiguration$FontMetricsCache * fontMetricsCache;\n+public:\n+  static ::java::lang::Class class$;\n+};\n+\n+#endif // __gnu_awt_xlib_XGraphicsConfiguration__"}, {"sha": "d5dc2f128efa5b182646e885732ca7e7622b449d", "filename": "libjava/gnu/awt/xlib/XGraphicsDevice.h", "status": "added", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fgnu%2Fawt%2Fxlib%2FXGraphicsDevice.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fgnu%2Fawt%2Fxlib%2FXGraphicsDevice.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fawt%2Fxlib%2FXGraphicsDevice.h?ref=a6ec93973c6adf3fc6229ec00114eddf7b1de16f", "patch": "@@ -0,0 +1,53 @@\n+\n+// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-\n+\n+#ifndef __gnu_awt_xlib_XGraphicsDevice__\n+#define __gnu_awt_xlib_XGraphicsDevice__\n+\n+#pragma interface\n+\n+#include <java/awt/GraphicsDevice.h>\n+#include <gcj/array.h>\n+\n+extern \"Java\"\n+{\n+  namespace gnu\n+  {\n+    namespace awt\n+    {\n+      namespace xlib\n+      {\n+          class XGraphicsDevice;\n+          class XToolkit;\n+      }\n+    }\n+  }\n+  namespace java\n+  {\n+    namespace awt\n+    {\n+        class GraphicsConfiguration;\n+    }\n+  }\n+}\n+\n+class gnu::awt::xlib::XGraphicsDevice : public ::java::awt::GraphicsDevice\n+{\n+\n+public:\n+  virtual jint getType();\n+  XGraphicsDevice(jint, ::gnu::awt::xlib::XToolkit *);\n+  virtual ::java::lang::String * getIDstring();\n+  virtual JArray< ::java::awt::GraphicsConfiguration * > * getConfigurations();\n+  virtual ::java::awt::GraphicsConfiguration * getDefaultConfiguration();\n+  virtual jboolean isDisplayChangeSupported();\n+  virtual jboolean isFullScreenSupported();\n+private:\n+  jint __attribute__((aligned(__alignof__( ::java::awt::GraphicsDevice)))) id;\n+  ::java::lang::String * IDstring;\n+  JArray< ::java::awt::GraphicsConfiguration * > * configs;\n+public:\n+  static ::java::lang::Class class$;\n+};\n+\n+#endif // __gnu_awt_xlib_XGraphicsDevice__"}, {"sha": "0f09087ae55fd82a20ef31090ebf467db6b4becc", "filename": "libjava/gnu/awt/xlib/XGraphicsEnvironment.h", "status": "added", "additions": 60, "deletions": 0, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fgnu%2Fawt%2Fxlib%2FXGraphicsEnvironment.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fgnu%2Fawt%2Fxlib%2FXGraphicsEnvironment.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fawt%2Fxlib%2FXGraphicsEnvironment.h?ref=a6ec93973c6adf3fc6229ec00114eddf7b1de16f", "patch": "@@ -0,0 +1,60 @@\n+\n+// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-\n+\n+#ifndef __gnu_awt_xlib_XGraphicsEnvironment__\n+#define __gnu_awt_xlib_XGraphicsEnvironment__\n+\n+#pragma interface\n+\n+#include <java/awt/GraphicsEnvironment.h>\n+#include <gcj/array.h>\n+\n+extern \"Java\"\n+{\n+  namespace gnu\n+  {\n+    namespace awt\n+    {\n+      namespace xlib\n+      {\n+          class XGraphicsDevice;\n+          class XGraphicsEnvironment;\n+          class XToolkit;\n+      }\n+    }\n+  }\n+  namespace java\n+  {\n+    namespace awt\n+    {\n+        class Font;\n+        class Graphics2D;\n+        class GraphicsDevice;\n+      namespace image\n+      {\n+          class BufferedImage;\n+      }\n+    }\n+  }\n+}\n+\n+class gnu::awt::xlib::XGraphicsEnvironment : public ::java::awt::GraphicsEnvironment\n+{\n+\n+public: // actually package-private\n+  XGraphicsEnvironment(::gnu::awt::xlib::XToolkit *);\n+public:\n+  virtual JArray< ::java::awt::GraphicsDevice * > * getScreenDevices();\n+  virtual ::java::awt::GraphicsDevice * getDefaultScreenDevice();\n+  virtual ::java::awt::Graphics2D * createGraphics(::java::awt::image::BufferedImage *);\n+  virtual JArray< ::java::awt::Font * > * getAllFonts();\n+  virtual JArray< ::java::lang::String * > * getAvailableFontFamilyNames(::java::util::Locale *);\n+  virtual JArray< ::java::lang::String * > * getAvailableFontFamilyNames();\n+private:\n+  ::gnu::awt::xlib::XToolkit * __attribute__((aligned(__alignof__( ::java::awt::GraphicsEnvironment)))) toolkit;\n+  JArray< ::gnu::awt::xlib::XGraphicsDevice * > * devices;\n+public:\n+  static ::java::lang::Class class$;\n+};\n+\n+#endif // __gnu_awt_xlib_XGraphicsEnvironment__"}, {"sha": "73ca8bfbc3257a01a4e205753d68af3dfee32fd4", "filename": "libjava/gnu/awt/xlib/XOffScreenImage.h", "status": "added", "additions": 87, "deletions": 0, "changes": 87, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fgnu%2Fawt%2Fxlib%2FXOffScreenImage.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fgnu%2Fawt%2Fxlib%2FXOffScreenImage.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fawt%2Fxlib%2FXOffScreenImage.h?ref=a6ec93973c6adf3fc6229ec00114eddf7b1de16f", "patch": "@@ -0,0 +1,87 @@\n+\n+// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-\n+\n+#ifndef __gnu_awt_xlib_XOffScreenImage__\n+#define __gnu_awt_xlib_XOffScreenImage__\n+\n+#pragma interface\n+\n+#include <java/awt/Image.h>\n+#include <gcj/array.h>\n+\n+extern \"Java\"\n+{\n+  namespace gnu\n+  {\n+    namespace awt\n+    {\n+      namespace xlib\n+      {\n+          class XGraphicsConfiguration;\n+          class XOffScreenImage;\n+      }\n+    }\n+    namespace gcj\n+    {\n+      namespace xlib\n+      {\n+          class Drawable;\n+          class GC;\n+          class Pixmap;\n+      }\n+    }\n+  }\n+  namespace java\n+  {\n+    namespace awt\n+    {\n+        class Graphics;\n+        class GraphicsConfiguration;\n+      namespace image\n+      {\n+          class ColorModel;\n+          class ImageObserver;\n+          class ImageProducer;\n+      }\n+    }\n+  }\n+}\n+\n+class gnu::awt::xlib::XOffScreenImage : public ::java::awt::Image\n+{\n+\n+public: // actually package-private\n+  XOffScreenImage(::gnu::awt::xlib::XGraphicsConfiguration *, ::gnu::gcj::xlib::Drawable *, jint, jint, ::java::awt::image::ColorModel *);\n+  XOffScreenImage(::gnu::awt::xlib::XGraphicsConfiguration *, ::gnu::gcj::xlib::Drawable *, ::java::awt::image::ImageProducer *, ::java::awt::image::ColorModel *);\n+public:\n+  virtual ::gnu::gcj::xlib::Pixmap * getPixmap();\n+  virtual void flush();\n+  virtual ::java::awt::Graphics * getGraphics();\n+  virtual jint getHeight(::java::awt::image::ImageObserver *);\n+  virtual jint getHeight();\n+  virtual ::java::awt::image::ImageProducer * getSource();\n+  virtual jint getWidth(::java::awt::image::ImageObserver *);\n+  virtual jint getWidth();\n+  virtual ::java::lang::Object * getProperty(::java::lang::String *, ::java::awt::image::ImageObserver *);\n+  virtual ::java::awt::GraphicsConfiguration * getGraphicsConfiguration();\n+  virtual void imageComplete(jint);\n+  virtual void setColorModel(::java::awt::image::ColorModel *);\n+  virtual void setDimensions(jint, jint);\n+  virtual void setHints(jint);\n+  virtual void setPixels(jint, jint, jint, jint, ::java::awt::image::ColorModel *, JArray< jint > *, jint, jint);\n+  virtual void setPixels(jint, jint, jint, jint, ::java::awt::image::ColorModel *, JArray< jbyte > *, jint, jint);\n+  virtual void setProperties(::java::util::Hashtable *);\n+private:\n+  ::gnu::gcj::xlib::Pixmap * __attribute__((aligned(__alignof__( ::java::awt::Image)))) pixmap;\n+  ::gnu::awt::xlib::XGraphicsConfiguration * config;\n+  jint width;\n+  jint height;\n+  ::gnu::gcj::xlib::Drawable * drawable;\n+  ::java::awt::image::ImageProducer * prod;\n+  ::gnu::gcj::xlib::GC * gc;\n+  ::java::awt::image::ColorModel * pixmapColorModel;\n+public:\n+  static ::java::lang::Class class$;\n+};\n+\n+#endif // __gnu_awt_xlib_XOffScreenImage__"}, {"sha": "4fcc0c7ee574e8dadaaa9c653817f0d12e5a69af", "filename": "libjava/gnu/awt/xlib/XPanelPeer.h", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fgnu%2Fawt%2Fxlib%2FXPanelPeer.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fgnu%2Fawt%2Fxlib%2FXPanelPeer.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fawt%2Fxlib%2FXPanelPeer.h?ref=a6ec93973c6adf3fc6229ec00114eddf7b1de16f", "patch": "@@ -0,0 +1,50 @@\n+\n+// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-\n+\n+#ifndef __gnu_awt_xlib_XPanelPeer__\n+#define __gnu_awt_xlib_XPanelPeer__\n+\n+#pragma interface\n+\n+#include <gnu/awt/xlib/XCanvasPeer.h>\n+extern \"Java\"\n+{\n+  namespace gnu\n+  {\n+    namespace awt\n+    {\n+      namespace xlib\n+      {\n+          class XPanelPeer;\n+      }\n+    }\n+  }\n+  namespace java\n+  {\n+    namespace awt\n+    {\n+        class Insets;\n+        class Panel;\n+    }\n+  }\n+}\n+\n+class gnu::awt::xlib::XPanelPeer : public ::gnu::awt::xlib::XCanvasPeer\n+{\n+\n+public:\n+  XPanelPeer(::java::awt::Panel *);\n+  virtual ::java::awt::Insets * getInsets();\n+  virtual ::java::awt::Insets * insets();\n+  virtual void beginValidate();\n+  virtual void endValidate();\n+  virtual void beginLayout();\n+  virtual void endLayout();\n+  virtual jboolean isPaintPending();\n+public: // actually package-private\n+  static ::java::awt::Insets * INSETS_0_PROTOTYPE;\n+public:\n+  static ::java::lang::Class class$;\n+};\n+\n+#endif // __gnu_awt_xlib_XPanelPeer__"}, {"sha": "7bfc61e13491e5ca4419217a1293c4a914823f57", "filename": "libjava/gnu/awt/xlib/XToolkit.h", "status": "added", "additions": 209, "deletions": 0, "changes": 209, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fgnu%2Fawt%2Fxlib%2FXToolkit.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fgnu%2Fawt%2Fxlib%2FXToolkit.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fawt%2Fxlib%2FXToolkit.h?ref=a6ec93973c6adf3fc6229ec00114eddf7b1de16f", "patch": "@@ -0,0 +1,209 @@\n+\n+// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-\n+\n+#ifndef __gnu_awt_xlib_XToolkit__\n+#define __gnu_awt_xlib_XToolkit__\n+\n+#pragma interface\n+\n+#include <gnu/java/awt/ClasspathToolkit.h>\n+#include <gcj/array.h>\n+\n+extern \"Java\"\n+{\n+  namespace gnu\n+  {\n+    namespace awt\n+    {\n+      namespace xlib\n+      {\n+          class XEventLoop;\n+          class XGraphicsConfiguration;\n+          class XToolkit;\n+      }\n+    }\n+    namespace gcj\n+    {\n+      namespace xlib\n+      {\n+          class Display;\n+      }\n+    }\n+    namespace java\n+    {\n+      namespace awt\n+      {\n+          class EmbeddedWindow;\n+        namespace peer\n+        {\n+            class ClasspathFontPeer;\n+            class EmbeddedWindowPeer;\n+        }\n+      }\n+    }\n+  }\n+  namespace java\n+  {\n+    namespace awt\n+    {\n+        class Button;\n+        class Canvas;\n+        class Checkbox;\n+        class CheckboxMenuItem;\n+        class Choice;\n+        class Component;\n+        class Dialog;\n+        class Dimension;\n+        class EventQueue;\n+        class FileDialog;\n+        class Font;\n+        class FontMetrics;\n+        class Frame;\n+        class GraphicsDevice;\n+        class GraphicsEnvironment;\n+        class Image;\n+        class Label;\n+        class List;\n+        class Menu;\n+        class MenuBar;\n+        class MenuItem;\n+        class Panel;\n+        class PopupMenu;\n+        class PrintJob;\n+        class ScrollPane;\n+        class Scrollbar;\n+        class TextArea;\n+        class TextField;\n+        class Window;\n+      namespace datatransfer\n+      {\n+          class Clipboard;\n+      }\n+      namespace dnd\n+      {\n+          class DragGestureEvent;\n+          class DragGestureListener;\n+          class DragGestureRecognizer;\n+          class DragSource;\n+        namespace peer\n+        {\n+            class DragSourceContextPeer;\n+        }\n+      }\n+      namespace im\n+      {\n+          class InputMethodHighlight;\n+      }\n+      namespace image\n+      {\n+          class ColorModel;\n+          class ImageObserver;\n+          class ImageProducer;\n+      }\n+      namespace peer\n+      {\n+          class ButtonPeer;\n+          class CanvasPeer;\n+          class CheckboxMenuItemPeer;\n+          class CheckboxPeer;\n+          class ChoicePeer;\n+          class DialogPeer;\n+          class FileDialogPeer;\n+          class FontPeer;\n+          class FramePeer;\n+          class LabelPeer;\n+          class ListPeer;\n+          class MenuBarPeer;\n+          class MenuItemPeer;\n+          class MenuPeer;\n+          class PanelPeer;\n+          class PopupMenuPeer;\n+          class RobotPeer;\n+          class ScrollPanePeer;\n+          class ScrollbarPeer;\n+          class TextAreaPeer;\n+          class TextFieldPeer;\n+          class WindowPeer;\n+      }\n+    }\n+    namespace net\n+    {\n+        class URL;\n+    }\n+  }\n+}\n+\n+class gnu::awt::xlib::XToolkit : public ::gnu::java::awt::ClasspathToolkit\n+{\n+\n+public:\n+  XToolkit();\n+  virtual void flushIfIdle();\n+public: // actually protected\n+  virtual ::java::awt::peer::ButtonPeer * createButton(::java::awt::Button *);\n+  virtual ::java::awt::peer::TextFieldPeer * createTextField(::java::awt::TextField *);\n+  virtual ::java::awt::peer::LabelPeer * createLabel(::java::awt::Label *);\n+  virtual ::java::awt::peer::ListPeer * createList(::java::awt::List *);\n+  virtual ::java::awt::peer::CheckboxPeer * createCheckbox(::java::awt::Checkbox *);\n+  virtual ::java::awt::peer::ScrollbarPeer * createScrollbar(::java::awt::Scrollbar *);\n+  virtual ::java::awt::peer::ScrollPanePeer * createScrollPane(::java::awt::ScrollPane *);\n+  virtual ::java::awt::peer::TextAreaPeer * createTextArea(::java::awt::TextArea *);\n+  virtual ::java::awt::peer::ChoicePeer * createChoice(::java::awt::Choice *);\n+  virtual ::java::awt::peer::FramePeer * createFrame(::java::awt::Frame *);\n+  virtual ::java::awt::peer::CanvasPeer * createCanvas(::java::awt::Canvas *);\n+  virtual ::java::awt::peer::PanelPeer * createPanel(::java::awt::Panel *);\n+  virtual ::java::awt::peer::WindowPeer * createWindow(::java::awt::Window *);\n+  virtual ::java::awt::peer::DialogPeer * createDialog(::java::awt::Dialog *);\n+  virtual ::java::awt::peer::MenuBarPeer * createMenuBar(::java::awt::MenuBar *);\n+  virtual ::java::awt::peer::MenuPeer * createMenu(::java::awt::Menu *);\n+  virtual ::java::awt::peer::PopupMenuPeer * createPopupMenu(::java::awt::PopupMenu *);\n+  virtual ::java::awt::peer::MenuItemPeer * createMenuItem(::java::awt::MenuItem *);\n+  virtual ::java::awt::peer::FileDialogPeer * createFileDialog(::java::awt::FileDialog *);\n+  virtual ::java::awt::peer::CheckboxMenuItemPeer * createCheckboxMenuItem(::java::awt::CheckboxMenuItem *);\n+  virtual ::java::awt::peer::FontPeer * getFontPeer(::java::lang::String *, jint);\n+public:\n+  virtual ::java::awt::Dimension * getScreenSize();\n+  virtual jint getScreenResolution();\n+  virtual ::java::awt::image::ColorModel * getColorModel();\n+  virtual JArray< ::java::lang::String * > * getFontList();\n+  virtual ::java::awt::FontMetrics * getFontMetrics(::java::awt::Font *);\n+  virtual void sync();\n+  virtual ::java::awt::Image * getImage(::java::lang::String *);\n+  virtual ::java::awt::Image * getImage(::java::net::URL *);\n+  virtual ::java::awt::Image * createImage(::java::lang::String *);\n+  virtual ::java::awt::Image * createImage(::java::net::URL *);\n+  virtual jboolean prepareImage(::java::awt::Image *, jint, jint, ::java::awt::image::ImageObserver *);\n+  virtual jint checkImage(::java::awt::Image *, jint, jint, ::java::awt::image::ImageObserver *);\n+  virtual ::java::awt::Image * createImage(::java::awt::image::ImageProducer *);\n+  virtual ::java::awt::Image * createImage(JArray< jbyte > *, jint, jint);\n+  virtual void beep();\n+  virtual ::java::awt::datatransfer::Clipboard * getSystemClipboard();\n+public: // actually protected\n+  virtual ::java::awt::EventQueue * getSystemEventQueueImpl();\n+public:\n+  virtual ::java::awt::PrintJob * getPrintJob(::java::awt::Frame *, ::java::lang::String *, ::java::util::Properties *);\n+public: // actually package-private\n+  virtual ::gnu::awt::xlib::XGraphicsConfiguration * getDefaultXGraphicsConfiguration();\n+public:\n+  virtual ::java::awt::dnd::peer::DragSourceContextPeer * createDragSourceContextPeer(::java::awt::dnd::DragGestureEvent *);\n+  virtual ::java::awt::dnd::DragGestureRecognizer * createDragGestureRecognizer(::java::lang::Class *, ::java::awt::dnd::DragSource *, ::java::awt::Component *, jint, ::java::awt::dnd::DragGestureListener *);\n+  virtual ::java::util::Map * mapInputMethodHighlight(::java::awt::im::InputMethodHighlight *);\n+  virtual ::java::awt::GraphicsEnvironment * getLocalGraphicsEnvironment();\n+  virtual ::gnu::java::awt::peer::ClasspathFontPeer * getClasspathFontPeer(::java::lang::String *, ::java::util::Map *);\n+  virtual ::java::awt::Font * createFont(jint, ::java::io::InputStream *);\n+  virtual ::java::awt::peer::RobotPeer * createRobot(::java::awt::GraphicsDevice *);\n+  virtual ::gnu::java::awt::peer::EmbeddedWindowPeer * createEmbeddedWindow(::gnu::java::awt::EmbeddedWindow *);\n+  virtual jboolean nativeQueueEmpty();\n+  virtual void wakeNativeQueue();\n+  virtual void iterateNativeQueue(::java::awt::EventQueue *, jboolean);\n+public: // actually package-private\n+  static ::gnu::awt::xlib::XToolkit * INSTANCE;\n+  ::gnu::gcj::xlib::Display * __attribute__((aligned(__alignof__( ::gnu::java::awt::ClasspathToolkit)))) display;\n+  ::java::awt::EventQueue * queue;\n+  ::gnu::awt::xlib::XEventLoop * eventLoop;\n+  ::gnu::awt::xlib::XGraphicsConfiguration * defaultConfig;\n+public:\n+  static ::java::lang::Class class$;\n+};\n+\n+#endif // __gnu_awt_xlib_XToolkit__"}, {"sha": "3fe491b144c49ecf18c6e3f17fd465a286c1f5c6", "filename": "libjava/gnu/gcj/xlib/Clip.h", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fgnu%2Fgcj%2Fxlib%2FClip.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fgnu%2Fgcj%2Fxlib%2FClip.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fgcj%2Fxlib%2FClip.h?ref=a6ec93973c6adf3fc6229ec00114eddf7b1de16f", "patch": "@@ -0,0 +1,50 @@\n+\n+// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-\n+\n+#ifndef __gnu_gcj_xlib_Clip__\n+#define __gnu_gcj_xlib_Clip__\n+\n+#pragma interface\n+\n+#include <java/lang/Object.h>\n+#include <gcj/array.h>\n+\n+extern \"Java\"\n+{\n+  namespace gnu\n+  {\n+    namespace gcj\n+    {\n+        class RawData;\n+      namespace xlib\n+      {\n+          class Clip;\n+      }\n+    }\n+  }\n+  namespace java\n+  {\n+    namespace awt\n+    {\n+        class Rectangle;\n+    }\n+  }\n+}\n+\n+class gnu::gcj::xlib::Clip : public ::java::lang::Object\n+{\n+\n+public:\n+  Clip(JArray< ::java::awt::Rectangle * > *);\n+private:\n+  void init(JArray< ::java::awt::Rectangle * > *);\n+public:\n+  void finalize();\n+  void dispose();\n+public: // actually package-private\n+  ::gnu::gcj::RawData * __attribute__((aligned(__alignof__( ::java::lang::Object)))) xrects;\n+public:\n+  static ::java::lang::Class class$;\n+};\n+\n+#endif // __gnu_gcj_xlib_Clip__"}, {"sha": "440766eb8fd36e9fb715e06fa292ac28a00a6ce6", "filename": "libjava/gnu/gcj/xlib/Colormap.h", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fgnu%2Fgcj%2Fxlib%2FColormap.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fgnu%2Fgcj%2Fxlib%2FColormap.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fgcj%2Fxlib%2FColormap.h?ref=a6ec93973c6adf3fc6229ec00114eddf7b1de16f", "patch": "@@ -0,0 +1,47 @@\n+\n+// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-\n+\n+#ifndef __gnu_gcj_xlib_Colormap__\n+#define __gnu_gcj_xlib_Colormap__\n+\n+#pragma interface\n+\n+#include <gnu/gcj/xlib/XID.h>\n+#include <gcj/array.h>\n+\n+extern \"Java\"\n+{\n+  namespace gnu\n+  {\n+    namespace gcj\n+    {\n+      namespace xlib\n+      {\n+          class Colormap;\n+          class Screen;\n+          class XColor;\n+      }\n+    }\n+  }\n+}\n+\n+class gnu::gcj::xlib::Colormap : public ::gnu::gcj::xlib::XID\n+{\n+\n+public:\n+  Colormap(::gnu::gcj::xlib::Screen *, jint);\n+  jlong allocateColorPixel(::gnu::gcj::xlib::XColor *);\n+  ::gnu::gcj::xlib::XColor * allocateColor(jint, jint, jint);\n+  JArray< ::gnu::gcj::xlib::XColor * > * getSharedColors();\n+  JArray< ::gnu::gcj::xlib::XColor * > * getXColors();\n+private:\n+  JArray< ::gnu::gcj::xlib::XColor * > * newXColorArray(jint);\n+public: // actually package-private\n+  ::gnu::gcj::xlib::Screen * __attribute__((aligned(__alignof__( ::gnu::gcj::xlib::XID)))) screen;\n+public:\n+  static const jbyte FLAG_SHARED = 1;\n+  static const jbyte FLAG_NOT_SHARED = 2;\n+  static ::java::lang::Class class$;\n+};\n+\n+#endif // __gnu_gcj_xlib_Colormap__"}, {"sha": "78bc41d2d686fb53d7e3766eefff6db7dee33314", "filename": "libjava/gnu/gcj/xlib/Display.h", "status": "added", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fgnu%2Fgcj%2Fxlib%2FDisplay.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fgnu%2Fgcj%2Fxlib%2FDisplay.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fgcj%2Fxlib%2FDisplay.h?ref=a6ec93973c6adf3fc6229ec00114eddf7b1de16f", "patch": "@@ -0,0 +1,64 @@\n+\n+// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-\n+\n+#ifndef __gnu_gcj_xlib_Display__\n+#define __gnu_gcj_xlib_Display__\n+\n+#pragma interface\n+\n+#include <java/lang/Object.h>\n+extern \"Java\"\n+{\n+  namespace gnu\n+  {\n+    namespace gcj\n+    {\n+        class RawData;\n+      namespace xlib\n+      {\n+          class Display;\n+          class Screen;\n+          class Window;\n+          class XID;\n+      }\n+    }\n+  }\n+}\n+\n+class gnu::gcj::xlib::Display : public ::java::lang::Object\n+{\n+\n+public:\n+  Display();\n+private:\n+  static void staticInit();\n+  void init();\n+public: // actually protected\n+  virtual void finalize();\n+  virtual void addXID(jint, ::gnu::gcj::xlib::XID *);\n+  virtual void removeXID(jint);\n+public:\n+  virtual ::gnu::gcj::xlib::Window * getDefaultRootWindow();\n+  virtual ::gnu::gcj::xlib::XID * getXID(jint);\n+  virtual ::gnu::gcj::xlib::Window * getWindow(jint);\n+  virtual ::gnu::gcj::xlib::Screen * getDefaultScreen();\n+  virtual jint getDefaultScreenNumber();\n+private:\n+  jint getDefaultRootWindowXID();\n+public:\n+  virtual jint getAtom(::java::lang::String *);\n+  virtual ::java::lang::String * getAtomName(jint);\n+private:\n+  jint internAtom(::java::lang::String *);\n+public:\n+  virtual void flush();\n+public: // actually package-private\n+  ::gnu::gcj::RawData * __attribute__((aligned(__alignof__( ::java::lang::Object)))) display;\n+private:\n+  ::java::util::Dictionary * xids;\n+  ::java::util::Dictionary * atoms;\n+public:\n+  static ::java::lang::Class class$;\n+};\n+\n+#endif // __gnu_gcj_xlib_Display__"}, {"sha": "213c361835d395ba7d7508574bbc21f7e6e1948e", "filename": "libjava/gnu/gcj/xlib/Drawable.h", "status": "added", "additions": 60, "deletions": 0, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fgnu%2Fgcj%2Fxlib%2FDrawable.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fgnu%2Fgcj%2Fxlib%2FDrawable.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fgcj%2Fxlib%2FDrawable.h?ref=a6ec93973c6adf3fc6229ec00114eddf7b1de16f", "patch": "@@ -0,0 +1,60 @@\n+\n+// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-\n+\n+#ifndef __gnu_gcj_xlib_Drawable__\n+#define __gnu_gcj_xlib_Drawable__\n+\n+#pragma interface\n+\n+#include <gnu/gcj/xlib/XID.h>\n+#include <gcj/array.h>\n+\n+extern \"Java\"\n+{\n+  namespace gnu\n+  {\n+    namespace gcj\n+    {\n+      namespace xlib\n+      {\n+          class Display;\n+          class Drawable;\n+          class GC;\n+          class XImage;\n+      }\n+    }\n+  }\n+  namespace java\n+  {\n+    namespace awt\n+    {\n+        class Rectangle;\n+    }\n+  }\n+}\n+\n+class gnu::gcj::xlib::Drawable : public ::gnu::gcj::xlib::XID\n+{\n+\n+public:\n+  Drawable(::gnu::gcj::xlib::Display *, jint);\n+  virtual ::java::awt::Rectangle * copyIntoXImage(::gnu::gcj::xlib::XImage *, ::java::awt::Rectangle *, jint, jint);\n+private:\n+  jboolean copyIntoXImageImpl(::gnu::gcj::xlib::XImage *, jint, jint, jint, jint, jint, jint);\n+public:\n+  virtual ::java::awt::Rectangle * getBounds(::java::awt::Rectangle *);\n+  virtual jint getDepth();\n+public: // actually protected\n+  virtual void finalize();\n+public: // actually package-private\n+  virtual void putGCInCache(::gnu::gcj::xlib::GC *);\n+  virtual ::gnu::gcj::xlib::GC * getGCFromCache();\n+private:\n+  JArray< ::gnu::gcj::xlib::GC * > * __attribute__((aligned(__alignof__( ::gnu::gcj::xlib::XID)))) gcCache;\n+  jint gcCachedCount;\n+  static ::java::lang::String * MSG_XGETSUBIMAGE_FAILED;\n+public:\n+  static ::java::lang::Class class$;\n+};\n+\n+#endif // __gnu_gcj_xlib_Drawable__"}, {"sha": "7cf50d36499cad412d8f2da15615c0a270911390", "filename": "libjava/gnu/gcj/xlib/Font.h", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fgnu%2Fgcj%2Fxlib%2FFont.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fgnu%2Fgcj%2Fxlib%2FFont.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fgcj%2Fxlib%2FFont.h?ref=a6ec93973c6adf3fc6229ec00114eddf7b1de16f", "patch": "@@ -0,0 +1,50 @@\n+\n+// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-\n+\n+#ifndef __gnu_gcj_xlib_Font__\n+#define __gnu_gcj_xlib_Font__\n+\n+#pragma interface\n+\n+#include <gnu/gcj/xlib/XID.h>\n+extern \"Java\"\n+{\n+  namespace gnu\n+  {\n+    namespace gcj\n+    {\n+        class RawData;\n+      namespace xlib\n+      {\n+          class Display;\n+          class Font;\n+      }\n+    }\n+  }\n+}\n+\n+class gnu::gcj::xlib::Font : public ::gnu::gcj::xlib::XID\n+{\n+\n+public:\n+  Font(::gnu::gcj::xlib::Display *, ::java::lang::String *);\n+public: // actually package-private\n+  Font(::gnu::gcj::xlib::Display *, ::gnu::gcj::RawData *);\n+  static ::gnu::gcj::RawData * loadFont(::gnu::gcj::xlib::Display *, ::java::lang::String *);\n+  static ::gnu::gcj::RawData * loadFontImpl(::gnu::gcj::xlib::Display *, ::java::lang::String *);\n+  static jint getXIDFromStruct(::gnu::gcj::RawData *);\n+public:\n+  jint getAscent();\n+  jint getDescent();\n+  jint getMaxAscent();\n+  jint getMaxDescent();\n+  jint getStringWidth(::java::lang::String *);\n+public: // actually protected\n+  void finalize();\n+public: // actually package-private\n+  ::gnu::gcj::RawData * __attribute__((aligned(__alignof__( ::gnu::gcj::xlib::XID)))) structure;\n+public:\n+  static ::java::lang::Class class$;\n+};\n+\n+#endif // __gnu_gcj_xlib_Font__"}, {"sha": "cb8bf391287b390477ed3ddf267be7b3360cb789", "filename": "libjava/gnu/gcj/xlib/GC.h", "status": "added", "additions": 76, "deletions": 0, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fgnu%2Fgcj%2Fxlib%2FGC.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fgnu%2Fgcj%2Fxlib%2FGC.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fgcj%2Fxlib%2FGC.h?ref=a6ec93973c6adf3fc6229ec00114eddf7b1de16f", "patch": "@@ -0,0 +1,76 @@\n+\n+// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-\n+\n+#ifndef __gnu_gcj_xlib_GC__\n+#define __gnu_gcj_xlib_GC__\n+\n+#pragma interface\n+\n+#include <java/lang/Object.h>\n+#include <gcj/array.h>\n+\n+extern \"Java\"\n+{\n+  namespace gnu\n+  {\n+    namespace gcj\n+    {\n+        class RawData;\n+      namespace xlib\n+      {\n+          class Drawable;\n+          class Font;\n+          class GC;\n+          class XImage;\n+      }\n+    }\n+  }\n+  namespace java\n+  {\n+    namespace awt\n+    {\n+        class Rectangle;\n+    }\n+  }\n+}\n+\n+class gnu::gcj::xlib::GC : public ::java::lang::Object\n+{\n+\n+public: // actually protected\n+  GC(::gnu::gcj::xlib::Drawable *);\n+public:\n+  virtual ::java::lang::Object * clone();\n+private:\n+  void initStructure(::gnu::gcj::xlib::GC *);\n+public:\n+  virtual ::gnu::gcj::xlib::GC * create();\n+  static ::gnu::gcj::xlib::GC * create(::gnu::gcj::xlib::Drawable *);\n+  virtual void finalize();\n+  virtual void dispose();\n+  virtual void disposeImpl();\n+  virtual void setForeground(jlong);\n+  virtual void setFont(::gnu::gcj::xlib::Font *);\n+  virtual void setClipRectangles(JArray< ::java::awt::Rectangle * > *);\n+  virtual void drawString(::java::lang::String *, jint, jint);\n+  virtual void drawLine(jint, jint, jint, jint);\n+  virtual void drawRectangle(jint, jint, jint, jint);\n+  virtual void fillRectangle(jint, jint, jint, jint);\n+  virtual void fillPolygon(JArray< jint > *, JArray< jint > *, jint, jint, jint);\n+  virtual void drawArc(jint, jint, jint, jint, jint, jint);\n+  virtual void fillArc(jint, jint, jint, jint, jint, jint);\n+  virtual void clearArea(jint, jint, jint, jint, jboolean);\n+  virtual void drawPoint(jint, jint);\n+  virtual void putImage(::gnu::gcj::xlib::XImage *, jint, jint, jint, jint, jint, jint);\n+  virtual void copyArea(::gnu::gcj::xlib::Drawable *, jint, jint, jint, jint, jint, jint);\n+  virtual ::gnu::gcj::xlib::Drawable * getDrawable();\n+private:\n+  void updateClip(JArray< ::java::awt::Rectangle * > *);\n+  ::gnu::gcj::xlib::Drawable * __attribute__((aligned(__alignof__( ::java::lang::Object)))) target;\n+  ::gnu::gcj::RawData * structure;\n+  JArray< ::java::awt::Rectangle * > * clipRectangles;\n+public:\n+  static ::java::lang::Class class$;\n+};\n+\n+#endif // __gnu_gcj_xlib_GC__"}, {"sha": "b73ee7063714438d1c33be069557c3e4a395a412", "filename": "libjava/gnu/gcj/xlib/Pixmap.h", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fgnu%2Fgcj%2Fxlib%2FPixmap.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fgnu%2Fgcj%2Fxlib%2FPixmap.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fgcj%2Fxlib%2FPixmap.h?ref=a6ec93973c6adf3fc6229ec00114eddf7b1de16f", "patch": "@@ -0,0 +1,40 @@\n+\n+// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-\n+\n+#ifndef __gnu_gcj_xlib_Pixmap__\n+#define __gnu_gcj_xlib_Pixmap__\n+\n+#pragma interface\n+\n+#include <gnu/gcj/xlib/Drawable.h>\n+extern \"Java\"\n+{\n+  namespace gnu\n+  {\n+    namespace gcj\n+    {\n+      namespace xlib\n+      {\n+          class Drawable;\n+          class Pixmap;\n+          class Screen;\n+          class XImage;\n+      }\n+    }\n+  }\n+}\n+\n+class gnu::gcj::xlib::Pixmap : public ::gnu::gcj::xlib::Drawable\n+{\n+\n+public:\n+  Pixmap(::gnu::gcj::xlib::XImage *, ::gnu::gcj::xlib::Screen *);\n+  Pixmap(::gnu::gcj::xlib::Drawable *, jint, jint, jint);\n+public: // actually protected\n+  static jint createXID(::gnu::gcj::xlib::Drawable *, jint, jint, jint);\n+  virtual void finalize();\n+public:\n+  static ::java::lang::Class class$;\n+};\n+\n+#endif // __gnu_gcj_xlib_Pixmap__"}, {"sha": "362c2e4827d72b7d659fda4b59915886ca31b964", "filename": "libjava/gnu/gcj/xlib/Screen.h", "status": "added", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fgnu%2Fgcj%2Fxlib%2FScreen.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fgnu%2Fgcj%2Fxlib%2FScreen.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fgcj%2Fxlib%2FScreen.h?ref=a6ec93973c6adf3fc6229ec00114eddf7b1de16f", "patch": "@@ -0,0 +1,61 @@\n+\n+// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-\n+\n+#ifndef __gnu_gcj_xlib_Screen__\n+#define __gnu_gcj_xlib_Screen__\n+\n+#pragma interface\n+\n+#include <java/lang/Object.h>\n+extern \"Java\"\n+{\n+  namespace gnu\n+  {\n+    namespace gcj\n+    {\n+        class RawData;\n+      namespace xlib\n+      {\n+          class Colormap;\n+          class Display;\n+          class Screen;\n+          class Visual;\n+          class Window;\n+      }\n+    }\n+  }\n+}\n+\n+class gnu::gcj::xlib::Screen : public ::java::lang::Object\n+{\n+\n+public: // actually package-private\n+  Screen(::gnu::gcj::xlib::Display *, ::gnu::gcj::RawData *);\n+public:\n+  Screen(::gnu::gcj::xlib::Display *);\n+  Screen(::gnu::gcj::xlib::Display *, jint);\n+  ::gnu::gcj::xlib::Display * getDisplay();\n+  ::gnu::gcj::xlib::Window * getRootWindow();\n+  ::gnu::gcj::xlib::Visual * getRootVisual();\n+private:\n+  ::gnu::gcj::RawData * getRootVisualStructure();\n+public:\n+  jint getRootDepth();\n+  jint getRootWindowXID();\n+  jint getDefaultColormapXID();\n+public: // actually package-private\n+  void initStructure();\n+public:\n+  ::gnu::gcj::xlib::Colormap * getDefaultColormap();\n+  jint getScreenNumber();\n+  jint findScreenNumber();\n+public: // actually package-private\n+  static const jint UNKNOWN = -1;\n+  ::gnu::gcj::xlib::Display * __attribute__((aligned(__alignof__( ::java::lang::Object)))) display;\n+  jint screenNumber;\n+  ::gnu::gcj::RawData * structure;\n+public:\n+  static ::java::lang::Class class$;\n+};\n+\n+#endif // __gnu_gcj_xlib_Screen__"}, {"sha": "de3e25e33088d7991530d4bf446277c653a801cf", "filename": "libjava/gnu/gcj/xlib/Visual.h", "status": "added", "additions": 79, "deletions": 0, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fgnu%2Fgcj%2Fxlib%2FVisual.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fgnu%2Fgcj%2Fxlib%2FVisual.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fgcj%2Fxlib%2FVisual.h?ref=a6ec93973c6adf3fc6229ec00114eddf7b1de16f", "patch": "@@ -0,0 +1,79 @@\n+\n+// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-\n+\n+#ifndef __gnu_gcj_xlib_Visual__\n+#define __gnu_gcj_xlib_Visual__\n+\n+#pragma interface\n+\n+#include <java/lang/Object.h>\n+extern \"Java\"\n+{\n+  namespace gnu\n+  {\n+    namespace gcj\n+    {\n+        class RawData;\n+      namespace xlib\n+      {\n+          class Display;\n+          class Screen;\n+          class Visual;\n+      }\n+    }\n+  }\n+}\n+\n+class gnu::gcj::xlib::Visual : public ::java::lang::Object\n+{\n+\n+public: // actually package-private\n+  Visual(::gnu::gcj::RawData *, ::gnu::gcj::xlib::Screen *, jint);\n+  Visual(::gnu::gcj::xlib::Display *, ::gnu::gcj::RawData *, jint);\n+public: // actually protected\n+  void init(::gnu::gcj::RawData *, jint);\n+  void finalize();\n+public: // actually package-private\n+  ::gnu::gcj::RawData * getVisualStructure();\n+public:\n+  jint getRedMask();\n+  jint getGreenMask();\n+  jint getBlueMask();\n+  jint getScreenNumber();\n+  jint getDepth();\n+  ::gnu::gcj::xlib::Screen * getScreen();\n+  jint getVisualClass();\n+  jboolean hasRGBSubfields();\n+public: // actually protected\n+  void ensureXVisualInfo(jint);\n+public:\n+  ::java::lang::String * toString();\n+  static const jint VC_STATIC_GRAY = 0;\n+  static const jint VC_GRAY_SCALE = 1;\n+  static const jint VC_STATIC_COLOR = 2;\n+  static const jint VC_PSEUDO_COLOR = 3;\n+  static const jint VC_TRUE_COLOR = 4;\n+  static const jint VC_DIRECT_COLOR = 5;\n+public: // actually protected\n+  static const jint MASK_ID = 1;\n+  static const jint MASK_SCREEN = 2;\n+  static const jint MASK_DEPTH = 4;\n+  static const jint MASK_CLASS = 8;\n+  static const jint MASK_RED = 16;\n+  static const jint MASK_GREEN = 32;\n+  static const jint MASK_BLUE = 64;\n+  static const jint MASK_COLORMAP_SIZE = 128;\n+  static const jint MASK_BITS_PER_RGB = 256;\n+  static const jint MASK_ALL = 511;\n+private:\n+  static const jint MASK_VISUAL_STRUCTURE = -2147483647 - 1;\n+public: // actually package-private\n+  ::gnu::gcj::xlib::Display * __attribute__((aligned(__alignof__( ::java::lang::Object)))) display;\n+  ::gnu::gcj::RawData * xVisualInfo;\n+  jint infoMask;\n+  ::gnu::gcj::xlib::Screen * screen;\n+public:\n+  static ::java::lang::Class class$;\n+};\n+\n+#endif // __gnu_gcj_xlib_Visual__"}, {"sha": "2acd58c45970ab8d799b8f0a2cb302bd21edc978", "filename": "libjava/gnu/gcj/xlib/WMSizeHints.h", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fgnu%2Fgcj%2Fxlib%2FWMSizeHints.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fgnu%2Fgcj%2Fxlib%2FWMSizeHints.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fgcj%2Fxlib%2FWMSizeHints.h?ref=a6ec93973c6adf3fc6229ec00114eddf7b1de16f", "patch": "@@ -0,0 +1,46 @@\n+\n+// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-\n+\n+#ifndef __gnu_gcj_xlib_WMSizeHints__\n+#define __gnu_gcj_xlib_WMSizeHints__\n+\n+#pragma interface\n+\n+#include <java/lang/Object.h>\n+extern \"Java\"\n+{\n+  namespace gnu\n+  {\n+    namespace gcj\n+    {\n+        class RawData;\n+      namespace xlib\n+      {\n+          class WMSizeHints;\n+          class Window;\n+      }\n+    }\n+  }\n+}\n+\n+class gnu::gcj::xlib::WMSizeHints : public ::java::lang::Object\n+{\n+\n+public:\n+  WMSizeHints();\n+private:\n+  void init(::gnu::gcj::xlib::WMSizeHints *);\n+public: // actually protected\n+  virtual void finalize();\n+public:\n+  virtual ::java::lang::Object * clone();\n+  virtual void applyNormalHints(::gnu::gcj::xlib::Window *);\n+  virtual void setMinSize(jint, jint);\n+  virtual void setMaxSize(jint, jint);\n+public: // actually package-private\n+  ::gnu::gcj::RawData * __attribute__((aligned(__alignof__( ::java::lang::Object)))) structure;\n+public:\n+  static ::java::lang::Class class$;\n+};\n+\n+#endif // __gnu_gcj_xlib_WMSizeHints__"}, {"sha": "03ece8aeb83f2af2c988284ca9bfa70df73e0efa", "filename": "libjava/gnu/gcj/xlib/Window.h", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fgnu%2Fgcj%2Fxlib%2FWindow.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fgnu%2Fgcj%2Fxlib%2FWindow.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fgcj%2Fxlib%2FWindow.h?ref=a6ec93973c6adf3fc6229ec00114eddf7b1de16f", "patch": "@@ -0,0 +1,69 @@\n+\n+// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-\n+\n+#ifndef __gnu_gcj_xlib_Window__\n+#define __gnu_gcj_xlib_Window__\n+\n+#pragma interface\n+\n+#include <gnu/gcj/xlib/Drawable.h>\n+#include <gcj/array.h>\n+\n+extern \"Java\"\n+{\n+  namespace gnu\n+  {\n+    namespace gcj\n+    {\n+      namespace xlib\n+      {\n+          class Display;\n+          class Visual;\n+          class Window;\n+          class WindowAttributes;\n+      }\n+    }\n+  }\n+  namespace java\n+  {\n+    namespace awt\n+    {\n+        class Rectangle;\n+    }\n+  }\n+}\n+\n+class gnu::gcj::xlib::Window : public ::gnu::gcj::xlib::Drawable\n+{\n+\n+public:\n+  Window(::gnu::gcj::xlib::Window *, ::java::awt::Rectangle *, ::gnu::gcj::xlib::WindowAttributes *);\n+  Window(::gnu::gcj::xlib::Window *, ::java::awt::Rectangle *, ::gnu::gcj::xlib::WindowAttributes *, ::gnu::gcj::xlib::Visual *);\n+  Window(::gnu::gcj::xlib::Window *, ::java::awt::Rectangle *, jint, ::gnu::gcj::xlib::WindowAttributes *, jint, ::gnu::gcj::xlib::Visual *);\n+public: // actually protected\n+  Window(::gnu::gcj::xlib::Display *, jint);\n+  virtual void finalize();\n+  virtual void destroy();\n+  virtual jint createChildXID(::java::awt::Rectangle *, jint, ::gnu::gcj::xlib::WindowAttributes *, jint, ::gnu::gcj::xlib::Visual *);\n+public:\n+  virtual void setAttributes(::gnu::gcj::xlib::WindowAttributes *);\n+  virtual void map();\n+  virtual void unmap();\n+  virtual void toFront();\n+  virtual void toBack();\n+  virtual void setProperty(jint, jint, JArray< jbyte > *);\n+  virtual void setProperty(jint, jint, ::java::lang::String *);\n+  virtual void setWMProtocols(JArray< jint > *);\n+  virtual JArray< jint > * getWMProtocols();\n+  virtual void setProperty(::java::lang::String *, ::java::lang::String *, ::java::lang::String *);\n+  virtual void setBounds(jint, jint, jint, jint);\n+  static const jint COPY_FROM_PARENT = 0;\n+  static const jint INPUT_OUTPUT = 1;\n+  static const jint INPUT_ONLY = 2;\n+public: // actually protected\n+  jboolean __attribute__((aligned(__alignof__( ::gnu::gcj::xlib::Drawable)))) owned;\n+public:\n+  static ::java::lang::Class class$;\n+};\n+\n+#endif // __gnu_gcj_xlib_Window__"}, {"sha": "6c533033d77853a14053880ddfe17e059ad1ceb1", "filename": "libjava/gnu/gcj/xlib/WindowAttributes.h", "status": "added", "additions": 66, "deletions": 0, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fgnu%2Fgcj%2Fxlib%2FWindowAttributes.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fgnu%2Fgcj%2Fxlib%2FWindowAttributes.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fgcj%2Fxlib%2FWindowAttributes.h?ref=a6ec93973c6adf3fc6229ec00114eddf7b1de16f", "patch": "@@ -0,0 +1,66 @@\n+\n+// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-\n+\n+#ifndef __gnu_gcj_xlib_WindowAttributes__\n+#define __gnu_gcj_xlib_WindowAttributes__\n+\n+#pragma interface\n+\n+#include <java/lang/Object.h>\n+extern \"Java\"\n+{\n+  namespace gnu\n+  {\n+    namespace gcj\n+    {\n+        class RawData;\n+      namespace xlib\n+      {\n+          class Display;\n+          class Pixmap;\n+          class Visual;\n+          class Window;\n+          class WindowAttributes;\n+      }\n+    }\n+  }\n+}\n+\n+class gnu::gcj::xlib::WindowAttributes : public ::java::lang::Object\n+{\n+\n+public:\n+  WindowAttributes();\n+  WindowAttributes(::gnu::gcj::xlib::Window *);\n+private:\n+  void initFromWindow(::gnu::gcj::xlib::Window *);\n+  void init(::gnu::gcj::xlib::WindowAttributes *);\n+public: // actually protected\n+  virtual void finalize();\n+public:\n+  virtual ::java::lang::Object * clone();\n+  virtual void setBackground(jlong);\n+  virtual void setBackground(::gnu::gcj::xlib::Pixmap *);\n+  virtual void setEventMask(jlong);\n+  virtual void setVisual(::gnu::gcj::xlib::Visual *);\n+  virtual ::gnu::gcj::xlib::Visual * getVisual();\n+  virtual void apply(::gnu::gcj::xlib::Window *);\n+public: // actually package-private\n+  virtual ::gnu::gcj::RawData * getXSetWindowAttributesStructure();\n+  virtual void initOut();\n+public:\n+  static const jlong MASK_BUTTON_PRESS = 4LL;\n+  static const jlong MASK_BUTTON_RELEASE = 8LL;\n+  static const jlong MASK_EXPOSURE = 32768LL;\n+  static const jlong MASK_STRUCTURE_NOTIFY = 131072LL;\n+public: // actually package-private\n+  ::gnu::gcj::xlib::Display * __attribute__((aligned(__alignof__( ::java::lang::Object)))) display;\n+  ::gnu::gcj::RawData * in;\n+  ::gnu::gcj::RawData * out;\n+  jlong mask;\n+  ::gnu::gcj::xlib::Visual * visual;\n+public:\n+  static ::java::lang::Class class$;\n+};\n+\n+#endif // __gnu_gcj_xlib_WindowAttributes__"}, {"sha": "9a7096e35212c424ae6c1f5cb9080b078ea6994c", "filename": "libjava/gnu/gcj/xlib/XAnyEvent.h", "status": "added", "additions": 89, "deletions": 0, "changes": 89, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fgnu%2Fgcj%2Fxlib%2FXAnyEvent.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fgnu%2Fgcj%2Fxlib%2FXAnyEvent.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fgcj%2Fxlib%2FXAnyEvent.h?ref=a6ec93973c6adf3fc6229ec00114eddf7b1de16f", "patch": "@@ -0,0 +1,89 @@\n+\n+// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-\n+\n+#ifndef __gnu_gcj_xlib_XAnyEvent__\n+#define __gnu_gcj_xlib_XAnyEvent__\n+\n+#pragma interface\n+\n+#include <java/lang/Object.h>\n+extern \"Java\"\n+{\n+  namespace gnu\n+  {\n+    namespace gcj\n+    {\n+        class RawData;\n+      namespace xlib\n+      {\n+          class Display;\n+          class Window;\n+          class XAnyEvent;\n+      }\n+    }\n+  }\n+}\n+\n+class gnu::gcj::xlib::XAnyEvent : public ::java::lang::Object\n+{\n+\n+public:\n+  XAnyEvent(::gnu::gcj::xlib::Display *);\n+private:\n+  void init();\n+public: // actually protected\n+  void finalize();\n+public:\n+  jboolean loadNext(jboolean);\n+  void interrupt();\n+  jint getType();\n+  void setType(jint);\n+  ::gnu::gcj::xlib::Window * getWindow();\n+  void setWindow(::gnu::gcj::xlib::Window *);\n+  jlong getSerial();\n+  void send(::gnu::gcj::xlib::Window *, jboolean, jlong);\n+  ::java::lang::String * toString();\n+  static const jint TYPE_KEY_PRESS = 2;\n+  static const jint TYPE_KEY_RELEASE = 3;\n+  static const jint TYPE_BUTTON_PRESS = 4;\n+  static const jint TYPE_BUTTON_RELEASE = 5;\n+  static const jint TYPE_MOTION_NOTIFY = 6;\n+  static const jint TYPE_ENTER_NOTIFY = 7;\n+  static const jint TYPE_LEAVE_NOTIFY = 8;\n+  static const jint TYPE_FOCUS_IN = 9;\n+  static const jint TYPE_FOCUS_OUT = 10;\n+  static const jint TYPE_KEYMAP_NOTIFY = 11;\n+  static const jint TYPE_EXPOSE = 12;\n+  static const jint TYPE_GRAPHICS_EXPOSE = 13;\n+  static const jint TYPE_NO_EXPOSE = 14;\n+  static const jint TYPE_VISIBILITY_NOTIFY = 15;\n+  static const jint TYPE_CREATE_NOTIFY = 16;\n+  static const jint TYPE_DESTROY_NOTIFY = 17;\n+  static const jint TYPE_UNMAP_NOTIFY = 18;\n+  static const jint TYPE_MAP_NOTIFY = 19;\n+  static const jint TYPE_MAP_REQUEST = 20;\n+  static const jint TYPE_REPARENT_NOTIFY = 21;\n+  static const jint TYPE_CONFIGURE_NOTIFY = 22;\n+  static const jint TYPE_CONFIGURE_REQUEST = 23;\n+  static const jint TYPE_GRAVITY_NOTIFY = 24;\n+  static const jint TYPE_RESIZE_REQUEST = 25;\n+  static const jint TYPE_CIRCULATE_NOTIFY = 26;\n+  static const jint TYPE_CIRCULATE_REQUEST = 27;\n+  static const jint TYPE_PROPERTY_NOTIFY = 28;\n+  static const jint TYPE_SELECTION_CLEAR = 29;\n+  static const jint TYPE_SELECTION_REQUEST = 30;\n+  static const jint TYPE_SELECTION_NOTIFY = 31;\n+  static const jint TYPE_COLORMAP_NOTIFY = 32;\n+  static const jint TYPE_CLIENT_MESSAGE = 33;\n+  static const jint TYPE_MAPPING_NOTIFY = 34;\n+  static const jlong MASK_SUBSTRUCTURE_NOTIFY = 524288LL;\n+  static const jlong MASK_SUBSTRUCTURE_REDIRECT = 1048576LL;\n+public: // actually package-private\n+  ::gnu::gcj::RawData * __attribute__((aligned(__alignof__( ::java::lang::Object)))) pipefds;\n+  ::gnu::gcj::RawData * structure;\n+  ::gnu::gcj::xlib::Display * display;\n+public:\n+  static ::java::lang::Class class$;\n+};\n+\n+#endif // __gnu_gcj_xlib_XAnyEvent__"}, {"sha": "7b482c44f16f00d4eaf2f4a89e2e553d8acd733e", "filename": "libjava/gnu/gcj/xlib/XButtonEvent.h", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fgnu%2Fgcj%2Fxlib%2FXButtonEvent.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fgnu%2Fgcj%2Fxlib%2FXButtonEvent.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fgcj%2Fxlib%2FXButtonEvent.h?ref=a6ec93973c6adf3fc6229ec00114eddf7b1de16f", "patch": "@@ -0,0 +1,49 @@\n+\n+// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-\n+\n+#ifndef __gnu_gcj_xlib_XButtonEvent__\n+#define __gnu_gcj_xlib_XButtonEvent__\n+\n+#pragma interface\n+\n+#include <gnu/gcj/xlib/XEvent.h>\n+extern \"Java\"\n+{\n+  namespace gnu\n+  {\n+    namespace gcj\n+    {\n+      namespace xlib\n+      {\n+          class XAnyEvent;\n+          class XButtonEvent;\n+      }\n+    }\n+  }\n+}\n+\n+class gnu::gcj::xlib::XButtonEvent : public ::gnu::gcj::xlib::XEvent\n+{\n+\n+public:\n+  XButtonEvent(::gnu::gcj::xlib::XAnyEvent *);\n+public: // actually package-private\n+  virtual void init();\n+public:\n+  static const jint MASK_SHIFT = 1;\n+  static const jint MASK_LOCK = 2;\n+  static const jint MASK_CONTROL = 4;\n+  static const jint MASK_MOD1 = 8;\n+  static const jint MASK_MOD2 = 16;\n+  static const jint MASK_MOD3 = 32;\n+  static const jint MASK_MOD4 = 64;\n+  static const jint MASK_MOD5 = 128;\n+  jlong __attribute__((aligned(__alignof__( ::gnu::gcj::xlib::XEvent)))) time;\n+  jint x;\n+  jint y;\n+  jint state;\n+  jint button;\n+  static ::java::lang::Class class$;\n+};\n+\n+#endif // __gnu_gcj_xlib_XButtonEvent__"}, {"sha": "fa2ea695837c70b72b2ac30e227d74e5593be83d", "filename": "libjava/gnu/gcj/xlib/XColor.h", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fgnu%2Fgcj%2Fxlib%2FXColor.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fgnu%2Fgcj%2Fxlib%2FXColor.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fgcj%2Fxlib%2FXColor.h?ref=a6ec93973c6adf3fc6229ec00114eddf7b1de16f", "patch": "@@ -0,0 +1,48 @@\n+\n+// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-\n+\n+#ifndef __gnu_gcj_xlib_XColor__\n+#define __gnu_gcj_xlib_XColor__\n+\n+#pragma interface\n+\n+#include <java/lang/Object.h>\n+extern \"Java\"\n+{\n+  namespace gnu\n+  {\n+    namespace gcj\n+    {\n+        class RawData;\n+      namespace xlib\n+      {\n+          class XColor;\n+      }\n+    }\n+  }\n+}\n+\n+class gnu::gcj::xlib::XColor : public ::java::lang::Object\n+{\n+\n+public:\n+  XColor(jint, jint, jint);\n+  XColor();\n+private:\n+  void init();\n+public: // actually protected\n+  void finalize();\n+public:\n+  void setRGB(jint, jint, jint);\n+  jint getRed();\n+  jint getGreen();\n+  jint getBlue();\n+  jbyte getFlags();\n+  jlong getPixelValue();\n+public: // actually package-private\n+  ::gnu::gcj::RawData * __attribute__((aligned(__alignof__( ::java::lang::Object)))) structure;\n+public:\n+  static ::java::lang::Class class$;\n+};\n+\n+#endif // __gnu_gcj_xlib_XColor__"}, {"sha": "cbc402d6c444152a964b36d217f8777ab1739447", "filename": "libjava/gnu/gcj/xlib/XConfigureEvent.h", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fgnu%2Fgcj%2Fxlib%2FXConfigureEvent.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fgnu%2Fgcj%2Fxlib%2FXConfigureEvent.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fgcj%2Fxlib%2FXConfigureEvent.h?ref=a6ec93973c6adf3fc6229ec00114eddf7b1de16f", "patch": "@@ -0,0 +1,41 @@\n+\n+// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-\n+\n+#ifndef __gnu_gcj_xlib_XConfigureEvent__\n+#define __gnu_gcj_xlib_XConfigureEvent__\n+\n+#pragma interface\n+\n+#include <gnu/gcj/xlib/XEvent.h>\n+extern \"Java\"\n+{\n+  namespace gnu\n+  {\n+    namespace gcj\n+    {\n+      namespace xlib\n+      {\n+          class XAnyEvent;\n+          class XConfigureEvent;\n+      }\n+    }\n+  }\n+  namespace java\n+  {\n+    namespace awt\n+    {\n+        class Rectangle;\n+    }\n+  }\n+}\n+\n+class gnu::gcj::xlib::XConfigureEvent : public ::gnu::gcj::xlib::XEvent\n+{\n+\n+public:\n+  XConfigureEvent(::gnu::gcj::xlib::XAnyEvent *);\n+  virtual ::java::awt::Rectangle * getBounds();\n+  static ::java::lang::Class class$;\n+};\n+\n+#endif // __gnu_gcj_xlib_XConfigureEvent__"}, {"sha": "a234ec90ed09c4c4827a147e47ebb74e0a811d23", "filename": "libjava/gnu/gcj/xlib/XConnectException.h", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fgnu%2Fgcj%2Fxlib%2FXConnectException.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fgnu%2Fgcj%2Fxlib%2FXConnectException.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fgcj%2Fxlib%2FXConnectException.h?ref=a6ec93973c6adf3fc6229ec00114eddf7b1de16f", "patch": "@@ -0,0 +1,33 @@\n+\n+// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-\n+\n+#ifndef __gnu_gcj_xlib_XConnectException__\n+#define __gnu_gcj_xlib_XConnectException__\n+\n+#pragma interface\n+\n+#include <java/io/IOException.h>\n+extern \"Java\"\n+{\n+  namespace gnu\n+  {\n+    namespace gcj\n+    {\n+      namespace xlib\n+      {\n+          class XConnectException;\n+      }\n+    }\n+  }\n+}\n+\n+class gnu::gcj::xlib::XConnectException : public ::java::io::IOException\n+{\n+\n+public:\n+  XConnectException();\n+  XConnectException(::java::lang::String *);\n+  static ::java::lang::Class class$;\n+};\n+\n+#endif // __gnu_gcj_xlib_XConnectException__"}, {"sha": "d74a31c3ec7236719d850e6f66664b320dd763ec", "filename": "libjava/gnu/gcj/xlib/XEvent.h", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fgnu%2Fgcj%2Fxlib%2FXEvent.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fgnu%2Fgcj%2Fxlib%2FXEvent.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fgcj%2Fxlib%2FXEvent.h?ref=a6ec93973c6adf3fc6229ec00114eddf7b1de16f", "patch": "@@ -0,0 +1,40 @@\n+\n+// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-\n+\n+#ifndef __gnu_gcj_xlib_XEvent__\n+#define __gnu_gcj_xlib_XEvent__\n+\n+#pragma interface\n+\n+#include <java/lang/Object.h>\n+extern \"Java\"\n+{\n+  namespace gnu\n+  {\n+    namespace gcj\n+    {\n+      namespace xlib\n+      {\n+          class Display;\n+          class XAnyEvent;\n+          class XEvent;\n+      }\n+    }\n+  }\n+}\n+\n+class gnu::gcj::xlib::XEvent : public ::java::lang::Object\n+{\n+\n+public:\n+  XEvent(::gnu::gcj::xlib::XAnyEvent *);\n+  XEvent(jint, ::gnu::gcj::xlib::Display *);\n+  virtual ::gnu::gcj::xlib::XAnyEvent * getXAnyEvent();\n+  virtual ::java::lang::String * toString();\n+public: // actually package-private\n+  ::gnu::gcj::xlib::XAnyEvent * __attribute__((aligned(__alignof__( ::java::lang::Object)))) event;\n+public:\n+  static ::java::lang::Class class$;\n+};\n+\n+#endif // __gnu_gcj_xlib_XEvent__"}, {"sha": "de1eff0f47a4466bc07eaf60b43b95c37d865102", "filename": "libjava/gnu/gcj/xlib/XException.h", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fgnu%2Fgcj%2Fxlib%2FXException.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fgnu%2Fgcj%2Fxlib%2FXException.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fgcj%2Fxlib%2FXException.h?ref=a6ec93973c6adf3fc6229ec00114eddf7b1de16f", "patch": "@@ -0,0 +1,38 @@\n+\n+// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-\n+\n+#ifndef __gnu_gcj_xlib_XException__\n+#define __gnu_gcj_xlib_XException__\n+\n+#pragma interface\n+\n+#include <java/lang/RuntimeException.h>\n+extern \"Java\"\n+{\n+  namespace gnu\n+  {\n+    namespace gcj\n+    {\n+      namespace xlib\n+      {\n+          class Display;\n+          class XException;\n+      }\n+    }\n+  }\n+}\n+\n+class gnu::gcj::xlib::XException : public ::java::lang::RuntimeException\n+{\n+\n+public:\n+  XException();\n+  XException(::java::lang::String *);\n+  XException(::gnu::gcj::xlib::Display *, jint);\n+public: // actually package-private\n+  static ::java::lang::String * toString(::gnu::gcj::xlib::Display *, jint);\n+public:\n+  static ::java::lang::Class class$;\n+};\n+\n+#endif // __gnu_gcj_xlib_XException__"}, {"sha": "ac8715bd6c7b2da55b1b1ed2e39f9966587c77c8", "filename": "libjava/gnu/gcj/xlib/XExposeEvent.h", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fgnu%2Fgcj%2Fxlib%2FXExposeEvent.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fgnu%2Fgcj%2Fxlib%2FXExposeEvent.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fgcj%2Fxlib%2FXExposeEvent.h?ref=a6ec93973c6adf3fc6229ec00114eddf7b1de16f", "patch": "@@ -0,0 +1,41 @@\n+\n+// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-\n+\n+#ifndef __gnu_gcj_xlib_XExposeEvent__\n+#define __gnu_gcj_xlib_XExposeEvent__\n+\n+#pragma interface\n+\n+#include <gnu/gcj/xlib/XEvent.h>\n+extern \"Java\"\n+{\n+  namespace gnu\n+  {\n+    namespace gcj\n+    {\n+      namespace xlib\n+      {\n+          class XAnyEvent;\n+          class XExposeEvent;\n+      }\n+    }\n+  }\n+  namespace java\n+  {\n+    namespace awt\n+    {\n+        class Rectangle;\n+    }\n+  }\n+}\n+\n+class gnu::gcj::xlib::XExposeEvent : public ::gnu::gcj::xlib::XEvent\n+{\n+\n+public:\n+  XExposeEvent(::gnu::gcj::xlib::XAnyEvent *);\n+  virtual ::java::awt::Rectangle * getBounds();\n+  static ::java::lang::Class class$;\n+};\n+\n+#endif // __gnu_gcj_xlib_XExposeEvent__"}, {"sha": "d216df65e760091fee62b2ea4695c070f72f8b3f", "filename": "libjava/gnu/gcj/xlib/XID.h", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fgnu%2Fgcj%2Fxlib%2FXID.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fgnu%2Fgcj%2Fxlib%2FXID.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fgcj%2Fxlib%2FXID.h?ref=a6ec93973c6adf3fc6229ec00114eddf7b1de16f", "patch": "@@ -0,0 +1,47 @@\n+\n+// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-\n+\n+#ifndef __gnu_gcj_xlib_XID__\n+#define __gnu_gcj_xlib_XID__\n+\n+#pragma interface\n+\n+#include <java/lang/Object.h>\n+extern \"Java\"\n+{\n+  namespace gnu\n+  {\n+    namespace gcj\n+    {\n+      namespace xlib\n+      {\n+          class Display;\n+          class XID;\n+      }\n+    }\n+  }\n+}\n+\n+class gnu::gcj::xlib::XID : public ::java::lang::Object\n+{\n+\n+public:\n+  XID(::gnu::gcj::xlib::Display *, jint);\n+  virtual jint getXID();\n+  virtual ::gnu::gcj::xlib::Display * getDisplay();\n+  virtual ::java::lang::Object * getClientData();\n+  virtual void setClientData(::java::lang::Object *);\n+public: // actually protected\n+  virtual ::java::lang::String * params();\n+public:\n+  virtual ::java::lang::String * toString();\n+public: // actually protected\n+  ::gnu::gcj::xlib::Display * __attribute__((aligned(__alignof__( ::java::lang::Object)))) display;\n+  jint xid;\n+private:\n+  ::java::lang::Object * clientData;\n+public:\n+  static ::java::lang::Class class$;\n+};\n+\n+#endif // __gnu_gcj_xlib_XID__"}, {"sha": "679c60de6b333b8ab76054dca4397f08ea415dac", "filename": "libjava/gnu/gcj/xlib/XImage.h", "status": "added", "additions": 82, "deletions": 0, "changes": 82, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fgnu%2Fgcj%2Fxlib%2FXImage.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fgnu%2Fgcj%2Fxlib%2FXImage.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fgcj%2Fxlib%2FXImage.h?ref=a6ec93973c6adf3fc6229ec00114eddf7b1de16f", "patch": "@@ -0,0 +1,82 @@\n+\n+// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-\n+\n+#ifndef __gnu_gcj_xlib_XImage__\n+#define __gnu_gcj_xlib_XImage__\n+\n+#pragma interface\n+\n+#include <java/lang/Object.h>\n+#include <gcj/array.h>\n+\n+extern \"Java\"\n+{\n+  namespace gnu\n+  {\n+    namespace gcj\n+    {\n+        class RawData;\n+      namespace xlib\n+      {\n+          class Visual;\n+          class XImage;\n+      }\n+    }\n+  }\n+}\n+\n+class gnu::gcj::xlib::XImage : public ::java::lang::Object\n+{\n+\n+public:\n+  XImage(::gnu::gcj::xlib::Visual *, jint, jint, jint, jint, jint, jint, jint);\n+  XImage(::gnu::gcj::xlib::Visual *, jint, jint, jint, jint, jint, jint, jint, jint);\n+  virtual void init(::gnu::gcj::xlib::Visual *, jint, jint, jint, jint, jint, jint, jint, jint);\n+private:\n+  void init(::gnu::gcj::xlib::Visual *, jint, jint);\n+public:\n+  XImage(::gnu::gcj::xlib::Visual *, jint, jint);\n+  XImage(::gnu::gcj::xlib::Visual *, jint, jint, jboolean);\n+  virtual void setData(JArray< jbyte > *, jint);\n+  virtual void setData(JArray< jshort > *, jint);\n+  virtual void setData(JArray< jint > *, jint);\n+private:\n+  void internalSetData(JArray< jbyte > *, jint);\n+  void internalSetData(JArray< jshort > *, jint);\n+  void internalSetData(JArray< jint > *, jint);\n+public: // actually protected\n+  virtual void finalize();\n+public:\n+  virtual jint getWidth();\n+  virtual jint getHeight();\n+  virtual jint getDepth();\n+  virtual jint getFormat();\n+  virtual jboolean isZPixmapFormat();\n+  virtual jint getXOffset();\n+  virtual jint getBytesPerLine();\n+  virtual jint getBitsPerPixel();\n+  virtual jint getImageByteOrder();\n+  virtual jint getBitmapBitOrder();\n+  virtual jint getBitmapUnit();\n+  virtual jint getBitmapPad();\n+  virtual jint getRedMask();\n+  virtual jint getGreenMask();\n+  virtual jint getBlueMask();\n+  virtual void setPixel(jint, jint, jint);\n+  virtual ::java::lang::String * toString();\n+public: // actually package-private\n+  ::java::lang::Object * __attribute__((aligned(__alignof__( ::java::lang::Object)))) dataRef;\n+public:\n+  static const jint XYBITMAP_FORMAT = 0;\n+  static const jint XYPIXMAP_FORMAT = 1;\n+  static const jint ZPIXMAP_FORMAT = 2;\n+  static const jint LEAST_SIGNIFICANT_B_FIRST_ORDER = 0;\n+  static const jint MOST_SIGNIFICANT_B_FIRST_ORDER = 1;\n+public: // actually package-private\n+  jboolean ownsData;\n+  ::gnu::gcj::RawData * structure;\n+public:\n+  static ::java::lang::Class class$;\n+};\n+\n+#endif // __gnu_gcj_xlib_XImage__"}, {"sha": "a42695259569c1c355e10d87ea4f47cbf69f735f", "filename": "libjava/gnu/gcj/xlib/XUnmapEvent.h", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fgnu%2Fgcj%2Fxlib%2FXUnmapEvent.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ec93973c6adf3fc6229ec00114eddf7b1de16f/libjava%2Fgnu%2Fgcj%2Fxlib%2FXUnmapEvent.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fgcj%2Fxlib%2FXUnmapEvent.h?ref=a6ec93973c6adf3fc6229ec00114eddf7b1de16f", "patch": "@@ -0,0 +1,36 @@\n+\n+// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-\n+\n+#ifndef __gnu_gcj_xlib_XUnmapEvent__\n+#define __gnu_gcj_xlib_XUnmapEvent__\n+\n+#pragma interface\n+\n+#include <gnu/gcj/xlib/XEvent.h>\n+extern \"Java\"\n+{\n+  namespace gnu\n+  {\n+    namespace gcj\n+    {\n+      namespace xlib\n+      {\n+          class Display;\n+          class Window;\n+          class XUnmapEvent;\n+      }\n+    }\n+  }\n+}\n+\n+class gnu::gcj::xlib::XUnmapEvent : public ::gnu::gcj::xlib::XEvent\n+{\n+\n+public:\n+  XUnmapEvent(::gnu::gcj::xlib::Display *, ::gnu::gcj::xlib::Window *, ::gnu::gcj::xlib::Window *, jboolean);\n+  virtual void setUnmappedWindow(::gnu::gcj::xlib::Window *);\n+  virtual void setFromConfigure(jboolean);\n+  static ::java::lang::Class class$;\n+};\n+\n+#endif // __gnu_gcj_xlib_XUnmapEvent__"}]}