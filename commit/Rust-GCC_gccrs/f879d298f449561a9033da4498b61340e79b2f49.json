{"sha": "f879d298f449561a9033da4498b61340e79b2f49", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjg3OWQyOThmNDQ5NTYxYTkwMzNkYTQ0OThiNjEzNDBlNzliMmY0OQ==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2005-05-27T15:50:26Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2005-05-27T15:50:26Z"}, "message": "re PR c++/21455 (type 'X' is not a base type for type 'X' in pointer to member conversion)\n\ncp:\n\tPR c++/21455\n\t* typeck.c (get_delta_difference): Cope with incomplete but equal\n\tclasses.  Reorder if.\ntestsuite:\n\tPR c++/21455\n\t* g++.dg/inherit/ptrmem3.C: New.\n\nFrom-SVN: r100258", "tree": {"sha": "0ebc16f1f4cae8cf11f1d1c8abcf8b03f1b4c458", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0ebc16f1f4cae8cf11f1d1c8abcf8b03f1b4c458"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f879d298f449561a9033da4498b61340e79b2f49", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f879d298f449561a9033da4498b61340e79b2f49", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f879d298f449561a9033da4498b61340e79b2f49", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f879d298f449561a9033da4498b61340e79b2f49/comments", "author": null, "committer": null, "parents": [{"sha": "d2763ab5f180a4e22cc7d05c84a3728e89ced2b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2763ab5f180a4e22cc7d05c84a3728e89ced2b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2763ab5f180a4e22cc7d05c84a3728e89ced2b1"}], "stats": {"total": 79, "additions": 52, "deletions": 27}, "files": [{"sha": "5d70567db7cc89fa58930d7cefa229924a247da1", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f879d298f449561a9033da4498b61340e79b2f49/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f879d298f449561a9033da4498b61340e79b2f49/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=f879d298f449561a9033da4498b61340e79b2f49", "patch": "@@ -1,5 +1,9 @@\n 2005-05-27  Nathan Sidwell  <nathan@codesourcery.com>\n \n+\tPR c++/21455\n+\t* typeck.c (get_delta_difference): Cope with incomplete but equal\n+\tclasses.  Reorder if.\n+\n \tPR c++/21681\n \t* parser.c (cp_parser_late_parsing_for_member): Disable access\n \tchecking for template functions."}, {"sha": "92bbc1e071c2941e2cc430291828e404ee2755bf", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 28, "deletions": 27, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f879d298f449561a9033da4498b61340e79b2f49/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f879d298f449561a9033da4498b61340e79b2f49/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=f879d298f449561a9033da4498b61340e79b2f49", "patch": "@@ -5523,7 +5523,6 @@ get_delta_difference (tree from, tree to,\n \t\t      bool c_cast_p)\n {\n   tree binfo;\n-  tree virt_binfo;\n   base_kind kind;\n   tree result;\n \n@@ -5532,36 +5531,14 @@ get_delta_difference (tree from, tree to,\n   binfo = lookup_base (to, from, c_cast_p ? ba_unique : ba_check, &kind);\n   if (kind == bk_inaccessible || kind == bk_ambig)\n     error (\"   in pointer to member function conversion\");\n-  else if (!binfo)\n+  else if (binfo)\n     {\n-      if (!allow_inverse_p)\n-\t{\n-\t  error_not_base_type (from, to);\n-\t  error (\"   in pointer to member conversion\");\n-\t}\n-      else\n-\t{\n-\t  binfo = lookup_base (from, to, c_cast_p ? ba_unique : ba_check, \n-\t\t\t       &kind);\n-\t  if (binfo)\n-\t    {\n-\t      virt_binfo = binfo_from_vbase (binfo);\n-\t      if (virt_binfo)\n-\t\t/* This is a reinterpret cast, we choose to do nothing.  */\n-\t\twarning (0, \"pointer to member cast via virtual base %qT\",\n-\t\t\t BINFO_TYPE (virt_binfo));\n-\t      else\n-\t\tresult = size_diffop (size_zero_node, BINFO_OFFSET (binfo));\n-\t    }\n-\t}\n-    }\n-  else\n-    {\n-      virt_binfo = binfo_from_vbase (binfo);\n-      if (!virt_binfo)\n+      if (kind != bk_via_virtual)\n \tresult = BINFO_OFFSET (binfo);\n       else\n \t{\n+\t  tree virt_binfo = binfo_from_vbase (binfo);\n+\t  \n \t  /* This is a reinterpret cast, we choose to do nothing.  */\n \t  if (allow_inverse_p)\n \t    warning (0, \"pointer to member cast via virtual base %qT\",\n@@ -5571,6 +5548,30 @@ get_delta_difference (tree from, tree to,\n \t\t   BINFO_TYPE (virt_binfo));\n \t}\n     }\n+  else if (same_type_ignoring_top_level_qualifiers_p (from, to))\n+    /* Pointer to member of incomplete class is permitted*/;\n+  else if (!allow_inverse_p)\n+    {\n+      error_not_base_type (from, to);\n+      error (\"   in pointer to member conversion\");\n+    }\n+  else\n+    {\n+      binfo = lookup_base (from, to, c_cast_p ? ba_unique : ba_check, &kind);\n+      if (binfo)\n+\t{\n+\t  if (kind != bk_via_virtual)\n+\t    result = size_diffop (size_zero_node, BINFO_OFFSET (binfo));\n+\t  else\n+\t    {\n+\t      /* This is a reinterpret cast, we choose to do nothing.  */\n+\t      tree virt_binfo = binfo_from_vbase (binfo);\n+\t  \n+\t      warning (0, \"pointer to member cast via virtual base %qT\",\n+\t\t       BINFO_TYPE (virt_binfo));\n+\t    }\n+\t}\n+    }\n \n   return fold_if_not_in_template (convert_to_integer (ptrdiff_type_node, \n \t\t\t\t\t\t      result));"}, {"sha": "1a6bdc7ddf6a86c90acfcdf75e93629563820e25", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f879d298f449561a9033da4498b61340e79b2f49/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f879d298f449561a9033da4498b61340e79b2f49/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f879d298f449561a9033da4498b61340e79b2f49", "patch": "@@ -1,5 +1,8 @@\n 2005-05-27  Nathan Sidwell  <nathan@codesourcery.com>\n \n+\tPR c++/21455\n+\t* g++.dg/inherit/ptrmem3.C: New.\n+\n \tPR c++/21681\n \t* g++.dg/parse/template16.C: New.\n "}, {"sha": "0c06c65df204b233f1dd7e876cdd61512a0eece9", "filename": "gcc/testsuite/g++.dg/inherit/ptrmem3.C", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f879d298f449561a9033da4498b61340e79b2f49/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finherit%2Fptrmem3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f879d298f449561a9033da4498b61340e79b2f49/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finherit%2Fptrmem3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finherit%2Fptrmem3.C?ref=f879d298f449561a9033da4498b61340e79b2f49", "patch": "@@ -0,0 +1,17 @@\n+// Copyright (C) 2005 Free Software Foundation, Inc.\n+// Contributed by Nathan Sidwell 27 May 2005 <nathan@codesourcery.com>\n+\n+// Origin:Andrew Pinski pinskia@gcc.gnu.org\n+// PR 21455  bogus error with pointer to member of incomplete\n+\n+class XMLFile;\n+\n+typedef bool (XMLFile::*ParserFunctionPtr)();\n+\n+struct ParserElement\n+{\n+  ParserFunctionPtr getPreFunc() const { return preFunc; }\n+  ParserFunctionPtr getPostFunc() const { return postFunc; }\n+  ParserFunctionPtr preFunc;\n+  ParserFunctionPtr postFunc;\n+};"}]}