{"sha": "42fe76e063c39eca13f26fb73f6bbbb612dcb4f8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDJmZTc2ZTA2M2MzOWVjYTEzZjI2ZmI3M2Y2YmJiYjYxMmRjYjRmOA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-05-02T08:18:17Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-05-02T08:18:17Z"}, "message": "[multiple changes]\n\n2017-05-02  Eric Botcazou  <ebotcazou@adacore.com>\n\n\t* freeze.adb (Check_Component_Storage_Order): Do not treat bit-packed\n\tarray components specially.\n\n2017-05-02  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch8.adb (Premature_Usage): If the premature usage of\n\tan entity is as the expression in its own object decaration,\n\trewrite the reference as Any_Id to prevent cascaded errors or\n\tcompiler loops when such an entity is used in an address clause.\n\nFrom-SVN: r247462", "tree": {"sha": "9ae53dabdf1fb87c1072cb708923b201947301cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9ae53dabdf1fb87c1072cb708923b201947301cf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/42fe76e063c39eca13f26fb73f6bbbb612dcb4f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42fe76e063c39eca13f26fb73f6bbbb612dcb4f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/42fe76e063c39eca13f26fb73f6bbbb612dcb4f8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42fe76e063c39eca13f26fb73f6bbbb612dcb4f8/comments", "author": null, "committer": null, "parents": [{"sha": "676be6a33532f7aaa97038d36e2cc737f9b8799f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/676be6a33532f7aaa97038d36e2cc737f9b8799f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/676be6a33532f7aaa97038d36e2cc737f9b8799f"}], "stats": {"total": 30, "additions": 21, "deletions": 9}, "files": [{"sha": "daf086f41e7360e52518f4a2b0ab78bbe3b3c976", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42fe76e063c39eca13f26fb73f6bbbb612dcb4f8/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42fe76e063c39eca13f26fb73f6bbbb612dcb4f8/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=42fe76e063c39eca13f26fb73f6bbbb612dcb4f8", "patch": "@@ -1,3 +1,15 @@\n+2017-05-02  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* freeze.adb (Check_Component_Storage_Order): Do not treat bit-packed\n+\tarray components specially.\n+\n+2017-05-02  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch8.adb (Premature_Usage): If the premature usage of\n+\tan entity is as the expression in its own object decaration,\n+\trewrite the reference as Any_Id to prevent cascaded errors or\n+\tcompiler loops when such an entity is used in an address clause.\n+\n 2017-05-01  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/decl.c (components_to_record): Add missing guard."}, {"sha": "e072824a4867d65035137adcc5013057fd310c8c", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42fe76e063c39eca13f26fb73f6bbbb612dcb4f8/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42fe76e063c39eca13f26fb73f6bbbb612dcb4f8/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=42fe76e063c39eca13f26fb73f6bbbb612dcb4f8", "patch": "@@ -1267,18 +1267,10 @@ package body Freeze is\n \n             --  Component SSO differs from enclosing composite:\n \n-            --  Reject if component is a bit-packed array, as it is represented\n-            --  as a scalar internally.\n-\n-            if Is_Bit_Packed_Array (Comp_Base) then\n-               Error_Msg_N\n-                 (\"type of packed component must have same scalar storage \"\n-                  & \"order as enclosing composite\", Err_Node);\n-\n             --  Reject if composite is a bit-packed array, as it is rewritten\n             --  into an array of scalars.\n \n-            elsif Is_Bit_Packed_Array (Encl_Base) then\n+            if Is_Bit_Packed_Array (Encl_Base) then\n                Error_Msg_N\n                  (\"type of packed array must have same scalar storage order \"\n                   & \"as component\", Err_Node);"}, {"sha": "f765bb8dda310a4a61ea04534147b4bb1d5f568f", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42fe76e063c39eca13f26fb73f6bbbb612dcb4f8/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42fe76e063c39eca13f26fb73f6bbbb612dcb4f8/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=42fe76e063c39eca13f26fb73f6bbbb612dcb4f8", "patch": "@@ -8562,6 +8562,14 @@ package body Sem_Ch8 is\n       else\n          Error_Msg_N\n            (\"object& cannot be used before end of its declaration!\", N);\n+\n+         --  If the premature reference appears as the expression in its own\n+         --  declaration, rewrite it to prevent compiler loops in subsequent\n+         --  uses of this mangled declaration in address clauses.\n+\n+         if Nkind (Parent (N)) = N_Object_Declaration then\n+            Set_Entity (N, Any_Id);\n+         end if;\n       end if;\n    end Premature_Usage;\n "}]}