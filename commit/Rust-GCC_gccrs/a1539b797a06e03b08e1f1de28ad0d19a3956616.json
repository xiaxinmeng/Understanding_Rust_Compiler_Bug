{"sha": "a1539b797a06e03b08e1f1de28ad0d19a3956616", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTE1MzliNzk3YTA2ZTAzYjA4ZTFmMWRlMjhhZDBkMTlhMzk1NjYxNg==", "commit": {"author": {"name": "Andrew MacLeod", "email": "amacleod@redhat.com", "date": "2021-07-12T15:38:17Z"}, "committer": {"name": "Andrew MacLeod", "email": "amacleod@redhat.com", "date": "2021-07-12T18:36:24Z"}, "message": "Do not register a cast as an equivalence.\n\nRegistering an equivalence between objects of the same size in a cast can\ncause other relations to be incorrect.\n\n\tgcc/\n\tPR tree-optimization/101335\n\t* range-op.cc (operator_cast::lhs_op1_relation): Delete.\n\n\tgcc/testsuite/\n\t* gcc.dg/tree-ssa/pr101335.c: New.", "tree": {"sha": "dbe4394df357484f0e5c763202f79aede74f6d36", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dbe4394df357484f0e5c763202f79aede74f6d36"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a1539b797a06e03b08e1f1de28ad0d19a3956616", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1539b797a06e03b08e1f1de28ad0d19a3956616", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1539b797a06e03b08e1f1de28ad0d19a3956616", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1539b797a06e03b08e1f1de28ad0d19a3956616/comments", "author": null, "committer": null, "parents": [{"sha": "9d4393af9d2b37b78eb5b1f84f5d4da3a6f7fba6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d4393af9d2b37b78eb5b1f84f5d4da3a6f7fba6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d4393af9d2b37b78eb5b1f84f5d4da3a6f7fba6"}], "stats": {"total": 42, "additions": 17, "deletions": 25}, "files": [{"sha": "08000465fd930d7e16f717cd9c5195c02190c392", "filename": "gcc/range-op.cc", "status": "modified", "additions": 0, "deletions": 25, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1539b797a06e03b08e1f1de28ad0d19a3956616/gcc%2Frange-op.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1539b797a06e03b08e1f1de28ad0d19a3956616/gcc%2Frange-op.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frange-op.cc?ref=a1539b797a06e03b08e1f1de28ad0d19a3956616", "patch": "@@ -2159,10 +2159,6 @@ class operator_cast: public range_operator\n \t\t\t  const irange &lhs,\n \t\t\t  const irange &op2,\n \t\t\t  relation_kind rel = VREL_NONE) const;\n-  virtual enum tree_code lhs_op1_relation (const irange &lhs,\n-\t\t\t\t\t   const irange &op1,\n-\t\t\t\t\t   const irange &op2) const;\n-\n private:\n   bool truncating_cast_p (const irange &inner, const irange &outer) const;\n   bool inside_domain_p (const wide_int &min, const wide_int &max,\n@@ -2171,27 +2167,6 @@ class operator_cast: public range_operator\n \t\t\t   const irange &outer) const;\n } op_convert;\n \n-// Determine if there is a relationship between LHS and OP1.\n-\n-enum tree_code\n-operator_cast::lhs_op1_relation (const irange &lhs,\n-\t\t\t\t const irange &op1,\n-\t\t\t\t const irange &op2 ATTRIBUTE_UNUSED) const\n-{\n-  if (op1.undefined_p ())\n-    return VREL_NONE;\n-  // We can't make larger types equivalent to smaller types because we can\n-  // miss sign extensions in a chain of casts.\n-  // u32 = 0xfffff\n-  // s32 = (s32) u32\n-  // s64 = (s64) s32\n-  // we cant simply \"convert\" s64 = (s64)u32  or we get positive 0xffff\n-  // value instead of sign extended negative value.\n-  if (TYPE_PRECISION (lhs.type ()) == TYPE_PRECISION (op1.type ()))\n-    return EQ_EXPR;\n-  return VREL_NONE;\n-}\n-\n // Return TRUE if casting from INNER to OUTER is a truncating cast.\n \n inline bool"}, {"sha": "921362c2954197b769c04057cfdb016d05e51836", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr101335.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1539b797a06e03b08e1f1de28ad0d19a3956616/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr101335.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1539b797a06e03b08e1f1de28ad0d19a3956616/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr101335.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr101335.c?ref=a1539b797a06e03b08e1f1de28ad0d19a3956616", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O2\" } */\n+\n+unsigned a = 0xFFFFFFFF;\n+int b;\n+int main()\n+{\n+  int c = ~a;\n+  unsigned d = c - 10;\n+  if (d > c)\n+    c = 20;\n+  b = -(c | 0);\n+  if (b > -8)\n+    __builtin_abort ();\n+  return 0;\n+}\n+"}]}