{"sha": "9a85b75fc414653f4a691ea57b83722489cd3d61", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWE4NWI3NWZjNDE0NjUzZjRhNjkxZWE1N2I4MzcyMjQ4OWNkM2Q2MQ==", "commit": {"author": {"name": "James Greenhalgh", "email": "james.greenhalgh@arm.com", "date": "2017-06-21T09:58:57Z"}, "committer": {"name": "James Greenhalgh", "email": "jgreenhalgh@gcc.gnu.org", "date": "2017-06-21T09:58:57Z"}, "message": "[Patch AArch64] Add initial tuning support for Cortex-A55 and Cortex-A75\n\nThis patch adds support for the ARM Cortex-A75 and\nCortex-A55 processors through the -mcpu/-mtune values cortex-a55 and\ncortex-a75, and an ARM DynamIQ big.LITTLE configuration of these two\nprocessors through the -mcpu/-mtune value cortex-a75.cortex-a55\n\nThe ARM Cortex-A75 is ARM's latest and highest performance applications\nprocessor. For the initial tuning provided in this patch, I have chosen to\nshare the tuning structure with its predecessor, the Cortex-A73.\n\nThe ARM Cortex-A55 delivers the best combination of power efficiency\nand performance in its class. For the initial tuning provided in this patch,\nI have chosen to share the tuning structure with its predecessor, the\nCortex-A53.\n\nBoth Cortex-A55 and Cortex-A75 support ARMv8-A with the ARM8.1-A and\nARMv8.2-A extensions, along with the cryptography extension, and\nthe RCPC extensions from ARMv8.3-A. This is reflected in the patch,\n-mcpu=cortex-a75 is treated as equivalent to passing -mtune=cortex-a75\n-march=armv8.2-a+rcpc .\n\n2017-06-21  James Greenhalgh  <james.greenhalgh@arm.com>\n\n\t* config/aarch64/aarch64-cores.def (cortex-a55): New.\n\t(cortex-a75): Likewise.\n\t(cortex-a75.cortex-a55): Likewise.\n\t* config/aarch64/aarch64-tune.md: Regenerate.\n\t* doc/invoke.texi (-mtune): Document new values for -mtune.\n\nFrom-SVN: r249441", "tree": {"sha": "c0952fa22490f012d79a1ea73bcfb15ced2dd2ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c0952fa22490f012d79a1ea73bcfb15ced2dd2ea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9a85b75fc414653f4a691ea57b83722489cd3d61", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a85b75fc414653f4a691ea57b83722489cd3d61", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a85b75fc414653f4a691ea57b83722489cd3d61", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a85b75fc414653f4a691ea57b83722489cd3d61/comments", "author": {"login": "jgreenhalgh-arm", "id": 6104025, "node_id": "MDQ6VXNlcjYxMDQwMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6104025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jgreenhalgh-arm", "html_url": "https://github.com/jgreenhalgh-arm", "followers_url": "https://api.github.com/users/jgreenhalgh-arm/followers", "following_url": "https://api.github.com/users/jgreenhalgh-arm/following{/other_user}", "gists_url": "https://api.github.com/users/jgreenhalgh-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jgreenhalgh-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jgreenhalgh-arm/subscriptions", "organizations_url": "https://api.github.com/users/jgreenhalgh-arm/orgs", "repos_url": "https://api.github.com/users/jgreenhalgh-arm/repos", "events_url": "https://api.github.com/users/jgreenhalgh-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/jgreenhalgh-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6b92ab17be7b413d2f14e40c98c62fd95f6e994e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b92ab17be7b413d2f14e40c98c62fd95f6e994e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b92ab17be7b413d2f14e40c98c62fd95f6e994e"}], "stats": {"total": 34, "additions": 27, "deletions": 7}, "files": [{"sha": "e08150c612c5684153d9fbe1faa8d40b0c4ec17a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a85b75fc414653f4a691ea57b83722489cd3d61/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a85b75fc414653f4a691ea57b83722489cd3d61/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9a85b75fc414653f4a691ea57b83722489cd3d61", "patch": "@@ -1,3 +1,11 @@\n+2017-06-21  James Greenhalgh  <james.greenhalgh@arm.com>\n+\n+\t* config/aarch64/aarch64-cores.def (cortex-a55): New.\n+\t(cortex-a75): Likewise.\n+\t(cortex-a75.cortex-a55): Likewise.\n+\t* config/aarch64/aarch64-tune.md: Regenerate.\n+\t* doc/invoke.texi (-mtune): Document new values for -mtune.\n+\n 2017-06-21  Tom de Vries  <tom@codesourcery.com>\n \n \t* doc/sourcebuild.texi (Add Options, Features for dg-add-options): Add"}, {"sha": "0baa20ce8f5c85fd4edfe3040f1744c1af812099", "filename": "gcc/config/aarch64/aarch64-cores.def", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a85b75fc414653f4a691ea57b83722489cd3d61/gcc%2Fconfig%2Faarch64%2Faarch64-cores.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a85b75fc414653f4a691ea57b83722489cd3d61/gcc%2Fconfig%2Faarch64%2Faarch64-cores.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-cores.def?ref=9a85b75fc414653f4a691ea57b83722489cd3d61", "patch": "@@ -80,11 +80,21 @@ AARCH64_CORE(\"vulcan\",  vulcan, thunderx2t99, 8_1A,  AARCH64_FL_FOR_ARCH8_1 | AA\n /* Cavium ('C') cores. */\n AARCH64_CORE(\"thunderx2t99\",  thunderx2t99,  thunderx2t99, 8_1A,  AARCH64_FL_FOR_ARCH8_1 | AARCH64_FL_CRYPTO, thunderx2t99, 0x43, 0x0af, -1)\n \n+/* ARMv8.2-A Architecture Processors.  */\n+\n+/* ARM ('A') cores. */\n+AARCH64_CORE(\"cortex-a55\",  cortexa55, cortexa53, 8_2A,  AARCH64_FL_FOR_ARCH8_2 | AARCH64_FL_RCPC, cortexa53, 0x41, 0xd05, -1)\n+AARCH64_CORE(\"cortex-a75\",  cortexa75, cortexa57, 8_2A,  AARCH64_FL_FOR_ARCH8_2 | AARCH64_FL_RCPC, cortexa73, 0x41, 0xd0a, -1)\n+\n /* ARMv8-A big.LITTLE implementations.  */\n \n AARCH64_CORE(\"cortex-a57.cortex-a53\",  cortexa57cortexa53, cortexa53, 8A,  AARCH64_FL_FOR_ARCH8 | AARCH64_FL_CRC, cortexa57, 0x41, AARCH64_BIG_LITTLE (0xd07, 0xd03), -1)\n AARCH64_CORE(\"cortex-a72.cortex-a53\",  cortexa72cortexa53, cortexa53, 8A,  AARCH64_FL_FOR_ARCH8 | AARCH64_FL_CRC, cortexa72, 0x41, AARCH64_BIG_LITTLE (0xd08, 0xd03), -1)\n AARCH64_CORE(\"cortex-a73.cortex-a35\",  cortexa73cortexa35, cortexa53, 8A,  AARCH64_FL_FOR_ARCH8 | AARCH64_FL_CRC, cortexa73, 0x41, AARCH64_BIG_LITTLE (0xd09, 0xd04), -1)\n AARCH64_CORE(\"cortex-a73.cortex-a53\",  cortexa73cortexa53, cortexa53, 8A,  AARCH64_FL_FOR_ARCH8 | AARCH64_FL_CRC, cortexa73, 0x41, AARCH64_BIG_LITTLE (0xd09, 0xd03), -1)\n \n+/* ARM DynamIQ big.LITTLE configurations.  */\n+\n+AARCH64_CORE(\"cortex-a75.cortex-a55\",  cortexa75cortexa55, cortexa53, 8_2A,  AARCH64_FL_FOR_ARCH8_2 | AARCH64_FL_RCPC, cortexa73, 0x41, AARCH64_BIG_LITTLE (0xd0a, 0xd05), -1)\n+\n #undef AARCH64_CORE"}, {"sha": "7fcd6cb2c2e9a3bb11bbfc1d6fb3cbf6b85b3d77", "filename": "gcc/config/aarch64/aarch64-tune.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a85b75fc414653f4a691ea57b83722489cd3d61/gcc%2Fconfig%2Faarch64%2Faarch64-tune.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a85b75fc414653f4a691ea57b83722489cd3d61/gcc%2Fconfig%2Faarch64%2Faarch64-tune.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-tune.md?ref=9a85b75fc414653f4a691ea57b83722489cd3d61", "patch": "@@ -1,5 +1,5 @@\n ;; -*- buffer-read-only: t -*-\n ;; Generated automatically by gentune.sh from aarch64-cores.def\n (define_attr \"tune\"\n-\t\"cortexa35,cortexa53,cortexa57,cortexa72,cortexa73,thunderx,thunderxt88p1,thunderxt88,thunderxt81,thunderxt83,xgene1,falkor,qdf24xx,exynosm1,thunderx2t99p1,vulcan,thunderx2t99,cortexa57cortexa53,cortexa72cortexa53,cortexa73cortexa35,cortexa73cortexa53\"\n+\t\"cortexa35,cortexa53,cortexa57,cortexa72,cortexa73,thunderx,thunderxt88p1,thunderxt88,thunderxt81,thunderxt83,xgene1,falkor,qdf24xx,exynosm1,thunderx2t99p1,vulcan,thunderx2t99,cortexa55,cortexa75,cortexa57cortexa53,cortexa72cortexa53,cortexa73cortexa35,cortexa73cortexa53,cortexa75cortexa55\"\n \t(const (symbol_ref \"((enum attr_tune) aarch64_tune)\")))"}, {"sha": "7e7a16a5cb62755573f0f4351ed09a08a7030859", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a85b75fc414653f4a691ea57b83722489cd3d61/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a85b75fc414653f4a691ea57b83722489cd3d61/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=9a85b75fc414653f4a691ea57b83722489cd3d61", "patch": "@@ -14077,17 +14077,19 @@ processors implementing the target architecture.\n @opindex mtune\n Specify the name of the target processor for which GCC should tune the\n performance of the code.  Permissible values for this option are:\n-@samp{generic}, @samp{cortex-a35}, @samp{cortex-a53}, @samp{cortex-a57},\n-@samp{cortex-a72}, @samp{cortex-a73}, @samp{exynos-m1},\n-@samp{xgene1}, @samp{vulcan}, @samp{thunderx},\n+@samp{generic}, @samp{cortex-a35}, @samp{cortex-a53}, @samp{cortex-a55},\n+@samp{cortex-a57}, @samp{cortex-a72}, @samp{cortex-a73}, @samp{cortex-a75},\n+@samp{exynos-m1}, @samp{xgene1}, @samp{vulcan}, @samp{thunderx},\n @samp{thunderxt88}, @samp{thunderxt88p1}, @samp{thunderxt81},\n @samp{thunderxt83}, @samp{thunderx2t99}, @samp{cortex-a57.cortex-a53},\n @samp{cortex-a72.cortex-a53}, @samp{cortex-a73.cortex-a35},\n-@samp{cortex-a73.cortex-a53}, @samp{native}.\n+@samp{cortex-a73.cortex-a53}, @samp{cortex-a75.cortex-a55},\n+@samp{native}.\n \n The values @samp{cortex-a57.cortex-a53}, @samp{cortex-a72.cortex-a53},\n-@samp{cortex-a73.cortex-a35}, @samp{cortex-a73.cortex-a53}\n-specify that GCC should tune for a big.LITTLE system.\n+@samp{cortex-a73.cortex-a35}, @samp{cortex-a73.cortex-a53},\n+@samp{cortex-a75.cortex-a55} specify that GCC should tune for a\n+big.LITTLE system.\n \n Additionally on native AArch64 GNU/Linux systems the value\n @samp{native} tunes performance to the host system.  This option has no effect"}]}