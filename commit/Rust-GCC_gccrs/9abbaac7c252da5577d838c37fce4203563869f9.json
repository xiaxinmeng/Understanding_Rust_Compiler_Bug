{"sha": "9abbaac7c252da5577d838c37fce4203563869f9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWFiYmFhYzdjMjUyZGE1NTc3ZDgzOGMzN2ZjZTQyMDM1NjM4NjlmOQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@cygnus.com", "date": "1997-10-13T18:09:13Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1997-10-13T18:09:13Z"}, "message": "Make-lang.in (g77*): Copied from cp/Make-lang.in g++*.\n\n        * Make-lang.in (g77*): Copied from cp/Make-lang.in g++*.\n        * g77spec.c: New file, mostly copied from g++spec.c\n        * g77.c: Removed.\n\nFrom-SVN: r15893", "tree": {"sha": "6a3e24c63319cfce53c9b421e988e48ab3f671a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6a3e24c63319cfce53c9b421e988e48ab3f671a9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9abbaac7c252da5577d838c37fce4203563869f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9abbaac7c252da5577d838c37fce4203563869f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9abbaac7c252da5577d838c37fce4203563869f9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9abbaac7c252da5577d838c37fce4203563869f9/comments", "author": null, "committer": null, "parents": [{"sha": "8c0a849156d1d8a6b608b8e9f429f6b5aff6fc92", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c0a849156d1d8a6b608b8e9f429f6b5aff6fc92", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c0a849156d1d8a6b608b8e9f429f6b5aff6fc92"}], "stats": {"total": 1874, "additions": 300, "deletions": 1574}, "files": [{"sha": "2c7d5c21ae06b15e05ada392a726dd87a23d0b63", "filename": "gcc/f/ChangeLog.egcs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9abbaac7c252da5577d838c37fce4203563869f9/gcc%2Ff%2FChangeLog.egcs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9abbaac7c252da5577d838c37fce4203563869f9/gcc%2Ff%2FChangeLog.egcs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FChangeLog.egcs?ref=9abbaac7c252da5577d838c37fce4203563869f9", "patch": "@@ -1,3 +1,9 @@\n+Mon Oct 13 12:12:41 1997  Richard Henderson  <rth@cygnus.com>\n+\n+\t* Make-lang.in (g77*): Copied from cp/Make-lang.in g++*.\n+\t* g77spec.c: New file, mostly copied from g++spec.c\n+\t* g77.c: Removed.\n+\n Mon Oct  6 14:15:03 1997  Jeffrey A Law  (law@cygnus.com)\n \n \t* Make-lang.in (f77.mostlyclean): Clean up stuff in the"}, {"sha": "972151f537fa5288ba090e447be25a1eed60e8cb", "filename": "gcc/f/Make-lang.in", "status": "modified", "additions": 25, "deletions": 17, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9abbaac7c252da5577d838c37fce4203563869f9/gcc%2Ff%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9abbaac7c252da5577d838c37fce4203563869f9/gcc%2Ff%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FMake-lang.in?ref=9abbaac7c252da5577d838c37fce4203563869f9", "patch": "@@ -109,23 +109,31 @@ F77 f77: f771\n   f77.maintainer-clean f77.realclean f77.stage1 f77.stage2 f77.stage3 \\\n   f77.stage4 f77.distdir f77.rebuilt\n \n-# Create the compiler driver for g77 (only if `f77' is in LANGUAGES).\n-g77: $(srcdir)/f/g77.c $(srcdir)/f/version.c $(CONFIG_H) $(LIBDEPS)\n-\tcase '$(LANGUAGES)' in \\\n-\t*f77*) \\\n-\t  $(CC) $(ALL_CFLAGS) $(INCLUDES) $(LDFLAGS) \\\n-\t    -o $@ $(srcdir)/f/g77.c $(srcdir)/f/version.c $(LIBS) ;; \\\n-\tesac\n-\n-# Create a version of the g77 driver which calls the cross-compiler\n-# (only if `f77' is in LANGUAGES).\n-g77-cross: $(srcdir)/f/g77.c $(srcdir)/f/version.c version.o $(LIBDEPS)\n-\tcase '$(LANGUAGES)' in \\\n-\t*f77*) \\\n-\t  $(CC) $(ALL_CFLAGS) $(INCLUDES) $(LDFLAGS) \\\n-\t    -DGCC_NAME=\\\"$(GCC_CROSS_NAME)\\\" \\\n-\t    -o $@ $(srcdir)/f/g77.c $(srcdir)/f/version.c $(LIBS) ;; \\\n-\tesac\n+g77.c: $(srcdir)/gcc.c\n+\t-rm -f $@\n+\t$(LN_S) $(srcdir)/gcc.c $@\n+\n+g77spec.o: $(srcdir)/f/g77spec.c\n+\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $(srcdir)/f/g77spec.c\n+\n+# N.B.: This is a copy of the gcc.o rule, with -DLANG_SPECIFIC_DRIVER added.\n+# It'd be nice if we could find an easier way to do this---rather than have\n+# to track changes to the toplevel gcc Makefile as well.\n+# We depend on g77.c last, to make it obvious where it came from.\n+g77.o: $(CONFIG_H) multilib.h config.status $(lang_specs_files) g77.c\n+\t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n+\t$(DRIVER_DEFINES) \\\n+\t-DLANG_SPECIFIC_DRIVER -c g77.c\n+\n+# Create the compiler driver for g77.\n+g77$(exeext): g77.o g77spec.o version.o choose-temp.o pexecute.o $(LIBDEPS) $(EXTRA_GCC_OBJS)\n+\t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ g77.o g77spec.o version.o \\\n+\t  choose-temp.o pexecute.o $(EXTRA_GCC_OBJS) $(LIBS)\n+\n+# Create a version of the g77 driver which calls the cross-compiler.\n+g77-cross$(exeext): g77$(exeext)\n+\t-rm -f g77-cross$(exeext)\n+\tcp g77$(exeext) g77-cross$(exeext)\n \n F77_SRCS = \\\n  $(srcdir)/f/assert.j \\"}, {"sha": "1c0834fd9a3ec05fbc9244c39922acb81057225d", "filename": "gcc/f/g77.c", "status": "removed", "additions": 0, "deletions": 1557, "changes": 1557, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c0a849156d1d8a6b608b8e9f429f6b5aff6fc92/gcc%2Ff%2Fg77.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c0a849156d1d8a6b608b8e9f429f6b5aff6fc92/gcc%2Ff%2Fg77.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fg77.c?ref=8c0a849156d1d8a6b608b8e9f429f6b5aff6fc92", "patch": "@@ -1,1557 +0,0 @@\n-/* G77 preliminary semantic processing for the compiler driver.\n-   Copyright (C) 1993-1997 Free Software Foundation, Inc.\n-   Contributed by Brendan Kehoe (brendan@cygnus.com), with significant\n-   modifications for GNU Fortran by James Craig Burley (burley@gnu.ai.mit.edu).\n-\n-This file is part of GNU Fortran.\n-\n-GNU Fortran is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU Fortran is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU Fortran; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n-02111-1307, USA.  */\n-\n-/* This program is a wrapper to the main `gcc' driver.  The generic\n-   goal of this program is to be basically identical to gcc (in that\n-   it faithfully passes all of the original arguments to gcc) but,\n-   unless explicitly overridden by the user in certain ways, ensure\n-   that the needs of the language supported by this wrapper are met.\n-\n-   For GNU Fortran (g77), we do the following to the argument list\n-   before passing it to `gcc':\n-\n-   1.  Put `-xf77', `-xf77-cpp-input' or `-xratfor' before each list\n-       of foo.f, foo.F or foo.r source files and put `-xnone' after\n-       that list, if necessary.  This shouldn't normally be necessary,\n-       but it is done in case gcc.c normally treats .f/.F files as,\n-       say, to be compiled by f2c.\n-\n-   2.  Make sure `-lf2c -lm' is at the end of the list.\n-\n-   3.  Make sure each time `-lf2c' or `-lm' is seen, it forms\n-       part of the series `-lf2c -lm'.\n-\n-   #1 is not done if `-xfoo' is in effect (where foo is not \"none\").\n-   #2 and #3 are not done if `-nostdlib' or any option that disables\n-   the linking phase is present, or if `-xfoo' is in effect.  Note that\n-   -v by itself disables linking.\n-\n-   This program was originally made out of gcc/cp/g++.c, but the\n-   way it builds the new argument list was rewritten so it is much\n-   easier to maintain, improve the way it decides to add or not add\n-   extra arguments, etc.  And several improvements were made in the\n-   handling of arguments, primarily to make it more consistent with\n-   `gcc' itself.  */\n-\n-#ifndef LANGUAGE_F77\n-#define LANGUAGE_F77 1\t/* Assume f77 language wanted. */\n-#endif\n-\n-#if LANGUAGE_F77 != 1\n-#include <stdio.h>\n-\n-int\n-main (argc, argv)\n-     int argc;\n-     char **argv;\n-{\n-  fprintf (stderr, \"\\\n-g77: `f77' language not included in list of languages\\n\\\n-     built with this installation of gcc.\\n\");\n-  exit (1);\n-}\n-\n-#else\t/* LANGUAGE_F77 == 1 */\n-#include \"config.j\"\n-#include \"version.h\"\n-#include <sys/types.h>\n-#include <errno.h>\n-\n-#ifndef _WIN32\n-#include <sys/file.h>   /* May get R_OK, etc. on some systems.  */\n-#else\n-#include <process.h>\n-#endif\n-\n-#ifdef __STDC__\n-#include <stdarg.h>\n-#else\n-#include <varargs.h>\n-#endif\n-#include <stdio.h>\n-\n-/* Include multi-lib information.  */\n-#include \"multilib.h\"\n-\n-#ifndef R_OK\n-#define R_OK 4\n-#define W_OK 2\n-#define X_OK 1\n-#endif\n-\n-#ifndef WIFSIGNALED\n-#define WIFSIGNALED(S) (((S) & 0xff) != 0 && ((S) & 0xff) != 0x7f)\n-#endif\n-#ifndef WTERMSIG\n-#define WTERMSIG(S) ((S) & 0x7f)\n-#endif\n-#ifndef WIFEXITED\n-#define WIFEXITED(S) (((S) & 0xff) == 0)\n-#endif\n-#ifndef WEXITSTATUS\n-#define WEXITSTATUS(S) (((S) & 0xff00) >> 8)\n-#endif\n-\n-/* Defined to the name of the compiler; if using a cross compiler, the\n-   Makefile should compile this file with the proper name\n-   (e.g., \"i386-aout-gcc\").  */\n-#ifndef GCC_NAME\n-#define GCC_NAME \"gcc\"\n-#endif\n-\n-/* On MSDOS, write temp files in current dir\n-   because there's no place else we can expect to use.  */\n-#ifdef __MSDOS__\n-#ifndef P_tmpdir\n-#define P_tmpdir \".\"\n-#endif\n-#ifndef R_OK\n-#define R_OK 4\n-#define W_OK 2\n-#define X_OK 1\n-#endif\n-#endif\n-\n-/* Add prototype support.  */\n-#ifndef PROTO\n-#if defined (USE_PROTOTYPES) ? USE_PROTOTYPES : defined (__STDC__)\n-#define PROTO(ARGS) ARGS\n-#else\n-#define PROTO(ARGS) ()\n-#endif\n-#endif\n-\n-#ifndef VPROTO\n-#ifdef __STDC__\n-#define PVPROTO(ARGS)\t\tARGS\n-#define VPROTO(ARGS)\t\tARGS\n-#define VA_START(va_list,var)\tva_start(va_list,var)\n-#else\n-#define PVPROTO(ARGS)\t\t()\n-#define VPROTO(ARGS)\t\t(va_alist) va_dcl\n-#define VA_START(va_list,var)\tva_start(va_list)\n-#endif\n-#endif\n-\n-/* Define a generic NULL if one hasn't already been defined.  */\n-\n-#ifndef NULL\n-#define NULL 0\n-#endif\n-\n-/* Define O_RDONLY if the system hasn't defined it for us. */\n-#ifndef O_RDONLY\n-#define O_RDONLY 0\n-#endif\n-\n-#ifndef GENERIC_PTR\n-#if defined (USE_PROTOTYPES) ? USE_PROTOTYPES : defined (__STDC__)\n-#define GENERIC_PTR void *\n-#else\n-#define GENERIC_PTR char *\n-#endif\n-#endif\n-\n-#ifndef NULL_PTR\n-#define NULL_PTR ((GENERIC_PTR)0)\n-#endif\n-\n-#ifdef USG\n-#define vfork fork\n-#endif /* USG */\n-\n-/* On MSDOS, write temp files in current dir\n-   because there's no place else we can expect to use.  */\n-#ifdef __MSDOS__\n-#ifndef P_tmpdir\n-#define P_tmpdir \".\"\n-#endif\n-#endif\n-\n-/* By default there is no special suffix for executables.  */\n-#ifndef EXECUTABLE_SUFFIX\n-#define EXECUTABLE_SUFFIX \"\"\n-#endif\n-\n-/* By default, colon separates directories in a path.  */\n-#ifndef PATH_SEPARATOR\n-#define PATH_SEPARATOR ':'\n-#endif\n-\n-#ifndef DIR_SEPARATOR\n-#define DIR_SEPARATOR '/'\n-#endif\n-\n-static char dir_separator_str[] = {DIR_SEPARATOR, 0};\n-\n-extern char *getenv ();\n-\n-#ifndef errno\n-extern int errno;\n-#endif\n-\n-extern int sys_nerr;\n-#ifndef HAVE_STRERROR\n-#if defined(bsd4_4)\n-extern const char *const sys_errlist[];\n-#else\n-extern char *sys_errlist[];\n-#endif\n-#else\n-extern char *strerror();\n-#endif\n-\n-/* Name with which this program was invoked.  */\n-static char *programname;\n-\n-/* argc, argv from main().  */\n-static int xargc;\n-static char **xargv;\n-\n-/* The new argument list will be contained in these, though if identical\n-   to the original list, these will be == xargc, xargv.  */\n-static int newargc;\n-static char **newargv;\n-\n-/* Options this driver needs to recognize, not just know how to\n-   skip over.  */\n-typedef enum\n-{\n-  OPTION_b,\t\t\t/* Aka --prefix. */\n-  OPTION_B,\t\t\t/* Aka --target. */\n-  OPTION_c,\t\t\t/* Aka --compile. */\n-  OPTION_driver,\t\t/* Wrapper-specific option. */\n-  OPTION_E,\t\t\t/* Aka --preprocess. */\n-  OPTION_for_linker,\t\t/* Aka `-Xlinker' and `-Wl,'. */\n-  OPTION_help,\t\t\t/* --help. */\n-  OPTION_i,\t\t\t/* -imacros, -include, -include-*. */\n-  OPTION_l,\n-  OPTION_L,\t\t\t/* Aka --library-directory. */\n-  OPTION_M,\t\t\t/* Aka --dependencies. */\n-  OPTION_MM,\t\t\t/* Aka --user-dependencies. */\n-  OPTION_nostdlib,\t\t/* Aka --no-standard-libraries, or\n-\t\t\t\t   -nodefaultlibs. */\n-  OPTION_o,\t\t\t/* Aka --output. */\n-  OPTION_P,\t\t\t/* Aka --print-*-name. */\n-  OPTION_S,\t\t\t/* Aka --assemble. */\n-  OPTION_syntax_only,\t\t/* -fsyntax-only. */\n-  OPTION_v,\t\t\t/* Aka --verbose. */\n-  OPTION_version,\t\t/* --version. */\n-  OPTION_V,\t\t\t/* Aka --use-version. */\n-  OPTION_x,\t\t\t/* Aka --language. */\n-  OPTION_\t\t\t/* Unrecognized or unimportant. */\n-} Option;\n-\n-/* THE FOLLOWING COMES STRAIGHT FROM prerelease gcc-2.8.0/gcc.c:  */\n-\n-/* This defines which switch letters take arguments.  */\n-\n-#define DEFAULT_SWITCH_TAKES_ARG(CHAR)      \\\n-  ((CHAR) == 'D' || (CHAR) == 'U' || (CHAR) == 'o' \\\n-   || (CHAR) == 'e' || (CHAR) == 'T' || (CHAR) == 'u' \\\n-   || (CHAR) == 'I' || (CHAR) == 'm' || (CHAR) == 'x' \\\n-   || (CHAR) == 'L' || (CHAR) == 'A')\n-\n-#ifndef SWITCH_TAKES_ARG\n-#define SWITCH_TAKES_ARG(CHAR) DEFAULT_SWITCH_TAKES_ARG(CHAR)\n-#endif\n-\n-/* This defines which multi-letter switches take arguments.  */\n-\n-#define DEFAULT_WORD_SWITCH_TAKES_ARG(STR)\t\t\\\n- (!strcmp (STR, \"Tdata\") || !strcmp (STR, \"Ttext\")\t\\\n-  || !strcmp (STR, \"Tbss\") || !strcmp (STR, \"include\")\t\\\n-  || !strcmp (STR, \"imacros\") || !strcmp (STR, \"aux-info\") \\\n-  || !strcmp (STR, \"idirafter\") || !strcmp (STR, \"iprefix\") \\\n-  || !strcmp (STR, \"iwithprefix\") || !strcmp (STR, \"iwithprefixbefore\") \\\n-  || !strcmp (STR, \"isystem\"))\n-\n-#ifndef WORD_SWITCH_TAKES_ARG\n-#define WORD_SWITCH_TAKES_ARG(STR) DEFAULT_WORD_SWITCH_TAKES_ARG (STR)\n-#endif\n-\n-/* This is the common prefix we use to make temp file names.\n-   It is chosen once for each run of this program.\n-   It is substituted into a spec by %g.\n-   Thus, all temp file names contain this prefix.\n-   In practice, all temp file names start with this prefix.\n-\n-   This prefix comes from the envvar TMPDIR if it is defined;\n-   otherwise, from the P_tmpdir macro if that is defined;\n-   otherwise, in /usr/tmp or /tmp.  */\n-\n-static char *temp_filename;\n-static char *temp_filename_f;\t/* Same with \".f\" appended. */\n-\n-/* Length of the prefix.  */\n-\n-static int temp_filename_length;\n-\n-/* The number of errors that have occurred; the link phase will not be\n-   run if this is non-zero.  */\n-static int error_count = 0;\n-\n-/* Number of commands that exited with a signal.  */\n-\n-static int signal_count = 0;\n-\n-/* END OF STUFF FROM gcc-2.7.0/gcc.c.  */\n-\f\n-char *\n-my_strerror(e)\n-     int e;\n-{\n-\n-#ifdef HAVE_STRERROR\n-  return strerror(e);\n-\n-#else\n-\n-  static char buffer[30];\n-  if (!e)\n-    return \"\";\n-\n-  if (e > 0 && e < sys_nerr)\n-    return sys_errlist[e];\n-\n-  sprintf (buffer, \"Unknown error %d\", e);\n-  return buffer;\n-#endif\n-}\n-\f\n-#ifdef HAVE_VPRINTF\n-/* Output an error message and exit */\n-\n-static void\n-fatal VPROTO((char *format, ...))\n-{\n-#ifndef __STDC__\n-  char *format;\n-#endif\n-  va_list ap;\n-\n-  VA_START (ap, format);\n-\n-#ifndef __STDC__\n-  format = va_arg (ap, char*);\n-#endif\n-\n-  fprintf (stderr, \"%s: \", programname);\n-  vfprintf (stderr, format, ap);\n-  va_end (ap);\n-  fprintf (stderr, \"\\n\");\n-#if 0\n-  /* XXX Not needed for g77 driver.  */\n-  delete_temp_files ();\n-#endif\n-  exit (1);\n-}\n-\n-static void\n-error VPROTO((char *format, ...))\n-{\n-#ifndef __STDC__\n-  char *format;\n-#endif\n-  va_list ap;\n-\n-  VA_START (ap, format);\n-\n-#ifndef __STDC__\n-  format = va_arg (ap, char*);\n-#endif\n-\n-  fprintf (stderr, \"%s: \", programname);\n-  vfprintf (stderr, format, ap);\n-  va_end (ap);\n-\n-  fprintf (stderr, \"\\n\");\n-}\n-\n-#else /* not HAVE_VPRINTF */\n-\n-static void\n-error (msg, arg1, arg2)\n-     char *msg, *arg1, *arg2;\n-{\n-  fprintf (stderr, \"%s: \", programname);\n-  fprintf (stderr, msg, arg1, arg2);\n-  fprintf (stderr, \"\\n\");\n-}\n-\n-static void\n-fatal (msg, arg1, arg2)\n-     char *msg, *arg1, *arg2;\n-{\n-  error (msg, arg1, arg2);\n-#if 0\n-  /* XXX Not needed for g77 driver.  */\n-  delete_temp_files ();\n-#endif\n-  exit (1);\n-}\n-\n-#endif /* not HAVE_VPRINTF */\n-\n-/* More 'friendly' abort that prints the line and file.\n-   config.h can #define abort fancy_abort if you like that sort of thing.  */\n-\n-void\n-fancy_abort ()\n-{\n-  fatal (\"Internal g77 abort.\");\n-}\n-\n-char *\n-xmalloc (size)\n-     unsigned size;\n-{\n-  register char *value = (char *) malloc (size);\n-  if (value == 0)\n-    fatal (\"virtual memory exhausted\");\n-  return value;\n-}\n-\n-static char *\n-concat (s1, s2)\n-     char *s1, *s2;\n-{\n-  int len1 = strlen (s1);\n-  int len2 = strlen (s2);\n-  char *result = xmalloc (len1 + len2 + 1);\n-\n-  strcpy (result, s1);\n-  strcpy (result + len1, s2);\n-  *(result + len1 + len2) = 0;\n-\n-  return result;\n-}\n-\n-static char *\n-concat3 (s1, s2, s3)\n-     char *s1, *s2, *s3;\n-{\n-  return concat (concat (s1, s2), s3);\n-}\n-\n-static char *\n-concat4 (s1, s2, s3, s4)\n-     char *s1, *s2, *s3, *s4;\n-{\n-  return concat (concat (s1, s2), concat (s3, s4));\n-}\n-\n-static char *\n-concat6 (s1, s2, s3, s4, s5, s6)\n-     char *s1, *s2, *s3, *s4, *s5, *s6;\n-{\n-  return concat3 (concat (s1, s2), concat (s3, s4), concat (s5, s6));\n-}\n-\n-static void\n-pfatal_with_name (name)\n-     char *name;\n-{\n-  char *s;\n-\n-  if (errno < sys_nerr)\n-    s = concat (\"%s: \", my_strerror (errno));\n-  else\n-    s = \"cannot open `%s'\";\n-  fatal (s, name);\n-}\n-\n-static void\n-perror_exec (name)\n-     char *name;\n-{\n-  char *s;\n-\n-  if (errno < sys_nerr)\n-    s = concat (\"installation problem, cannot exec `%s': \",\n-\t\tmy_strerror (errno));\n-  else\n-    s = \"installation problem, cannot exec `%s'\";\n-  error (s, name);\n-}\n-\n-/* Compute a string to use as the base of all temporary file names.\n-   It is substituted for %g.  */\n-\n-static char *\n-choose_temp_base_try (try, base)\n-     char *try;\n-     char *base;\n-{\n-  char *rv;\n-  if (base)\n-    rv = base;\n-  else if (try == (char *)0)\n-    rv = 0;\n-  else if (access (try, R_OK | W_OK) != 0)\n-    rv = 0;\n-  else\n-    rv = try;\n-  return rv;\n-}\n-\n-static void\n-choose_temp_base ()\n-{\n-  char *base = 0;\n-  int len;\n-\n-  base = choose_temp_base_try (getenv (\"TMPDIR\"), base);\n-  base = choose_temp_base_try (getenv (\"TMP\"), base);\n-  base = choose_temp_base_try (getenv (\"TEMP\"), base);\n-\n-#ifdef P_tmpdir\n-  base = choose_temp_base_try (P_tmpdir, base);\n-#endif\n-\n-  base = choose_temp_base_try (concat4 (dir_separator_str, \"usr\", \n-                                        dir_separator_str, \"tmp\"), \n-                                base);\n-  base = choose_temp_base_try (concat (dir_separator_str, \"tmp\"), base);\n- \n-  /* If all else fails, use the current directory! */\n-  if (base == (char *)0)\n-    base = concat (\".\", dir_separator_str);\n-\n-  len = strlen (base);\n-  temp_filename = xmalloc (len + strlen (concat (dir_separator_str, \n-                                                 \"gfXXXXXX\")) + 1);\n-  strcpy (temp_filename, base);\n-  if (len > 0 && temp_filename[len-1] != '/'\n-      && temp_filename[len-1] != DIR_SEPARATOR)\n-    temp_filename[len++] = DIR_SEPARATOR;\n-  strcpy (temp_filename + len, \"gfXXXXXX\");\n-\n-  mktemp (temp_filename);\n-  temp_filename_length = strlen (temp_filename);\n-  if (temp_filename_length == 0)\n-    abort ();\n-\n-  temp_filename_f = xmalloc (temp_filename_length + 2);\n-  strcpy (temp_filename_f, temp_filename);\n-  temp_filename_f[temp_filename_length] = '.';\n-  temp_filename_f[temp_filename_length + 1] = 'f';\n-  temp_filename_f[temp_filename_length + 2] = '\\0';\n-}\n-\n-/* This structure describes one mapping.  */\n-struct option_map\n-{\n-  /* The long option's name.  */\n-  char *name;\n-  /* The equivalent short option.  */\n-  char *equivalent;\n-  /* Argument info.  A string of flag chars; NULL equals no options.\n-     a => argument required.\n-     o => argument optional.\n-     j => join argument to equivalent, making one word.\n-     * => require other text after NAME as an argument.  */\n-  char *arg_info;\n-};\n-\n-/* This is the table of mappings.  Mappings are tried sequentially\n-   for each option encountered; the first one that matches, wins.  */\n-\n-struct option_map option_map[] =\n- {\n-   {\"--all-warnings\", \"-Wall\", 0},\n-   {\"--ansi\", \"-ansi\", 0},\n-   {\"--assemble\", \"-S\", 0},\n-   {\"--assert\", \"-A\", \"a\"},\n-   {\"--comments\", \"-C\", 0},\n-   {\"--compile\", \"-c\", 0},\n-   {\"--debug\", \"-g\", \"oj\"},\n-   {\"--define-macro\", \"-D\", \"a\"},\n-   {\"--dependencies\", \"-M\", 0},\n-   {\"--driver\", \"\", 0},\t\t/* Wrapper-specific. */\n-   {\"--dump\", \"-d\", \"a\"},\n-   {\"--dumpbase\", \"-dumpbase\", \"a\"},\n-   {\"--entry\", \"-e\", 0},\n-   {\"--extra-warnings\", \"-W\", 0},\n-   {\"--for-assembler\", \"-Wa\", \"a\"},\n-   {\"--for-linker\", \"-Xlinker\", \"a\"},\n-   {\"--force-link\", \"-u\", \"a\"},\n-   {\"--imacros\", \"-imacros\", \"a\"},\n-   {\"--include\", \"-include\", \"a\"},\n-   {\"--include-barrier\", \"-I-\", 0},\n-   {\"--include-directory\", \"-I\", \"a\"},\n-   {\"--include-directory-after\", \"-idirafter\", \"a\"},\n-   {\"--include-prefix\", \"-iprefix\", \"a\"},\n-   {\"--include-with-prefix\", \"-iwithprefix\", \"a\"},\n-   {\"--include-with-prefix-before\", \"-iwithprefixbefore\", \"a\"},\n-   {\"--include-with-prefix-after\", \"-iwithprefix\", \"a\"},\n-   {\"--language\", \"-x\", \"a\"},\n-   {\"--library-directory\", \"-L\", \"a\"},\n-   {\"--machine\", \"-m\", \"aj\"},\n-   {\"--machine-\", \"-m\", \"*j\"},\n-   {\"--no-line-commands\", \"-P\", 0},\n-   {\"--no-precompiled-includes\", \"-noprecomp\", 0},\n-   {\"--no-standard-includes\", \"-nostdinc\", 0},\n-   {\"--no-standard-libraries\", \"-nostdlib\", 0},\n-   {\"--no-warnings\", \"-w\", 0},\n-   {\"--optimize\", \"-O\", \"oj\"},\n-   {\"--output\", \"-o\", \"a\"},\n-   {\"--pedantic\", \"-pedantic\", 0},\n-   {\"--pedantic-errors\", \"-pedantic-errors\", 0},\n-   {\"--pipe\", \"-pipe\", 0},\n-   {\"--prefix\", \"-B\", \"a\"},\n-   {\"--preprocess\", \"-E\", 0},\n-   {\"--print-file-name\", \"-print-file-name=\", \"aj\"},\n-   {\"--print-libgcc-file-name\", \"-print-libgcc-file-name\", 0},\n-   {\"--print-missing-file-dependencies\", \"-MG\", 0},\n-   {\"--print-multi-lib\", \"-print-multi-lib\", 0},\n-   {\"--print-multi-directory\", \"-print-multi-directory\", 0},\n-   {\"--print-prog-name\", \"-print-prog-name=\", \"aj\"},\n-   {\"--profile\", \"-p\", 0},\n-   {\"--profile-blocks\", \"-a\", 0},\n-   {\"--quiet\", \"-q\", 0},\n-   {\"--save-temps\", \"-save-temps\", 0},\n-   {\"--shared\", \"-shared\", 0},\n-   {\"--silent\", \"-q\", 0},\n-   {\"--static\", \"-static\", 0},\n-   {\"--symbolic\", \"-symbolic\", 0},\n-   {\"--target\", \"-b\", \"a\"},\n-   {\"--trace-includes\", \"-H\", 0},\n-   {\"--traditional\", \"-traditional\", 0},\n-   {\"--traditional-cpp\", \"-traditional-cpp\", 0},\n-   {\"--trigraphs\", \"-trigraphs\", 0},\n-   {\"--undefine-macro\", \"-U\", \"a\"},\n-   {\"--use-version\", \"-V\", \"a\"},\n-   {\"--user-dependencies\", \"-MM\", 0},\n-   {\"--verbose\", \"-v\", 0},\n-   {\"--version\", \"-dumpversion\", 0},\n-   {\"--warn-\", \"-W\", \"*j\"},\n-   {\"--write-dependencies\", \"-MD\", 0},\n-   {\"--write-user-dependencies\", \"-MMD\", 0},\n-   {\"--\", \"-f\", \"*j\"}\n- };\n-\n-/* Compares --options that take one arg.  */\n-\n-static int\n-opteq (xskip, xarg, opt, name)\n-     int *xskip;\n-     char **xarg;\n-     char *opt;\n-     char *name;\n-{\n-  int optlen;\n-  int namelen;\n-  int complen;\n-  int i;\n-  int cmp = strcmp (opt, name);\n-  int skip = 1;\n-  char *arg = NULL;\n-\n-  if (cmp == 0)\n-    {\n-      /* Easy, a straight match.  */\n-      *xskip = skip;\n-      *xarg = arg;\n-      return cmp;\n-    }\n-\n-  optlen = strlen (opt);\n-\n-  for (i = 0; i < sizeof (option_map) / sizeof (option_map[0]); ++i)\n-    {\n-      char *arginfo;\n-      int j;\n-\n-      arginfo = option_map[i].arg_info;\n-      if (arginfo == NULL)\n-\targinfo = \"\";\n-\n-      namelen = strlen (option_map[i].name);\n-      complen = optlen > namelen ? namelen : optlen;\n-\n-      if (strncmp (opt, option_map[i].name, complen) == 0)\n-\t{\n-\t  if (optlen < namelen)\n-\t    {\n-\t      for (j = i + 1;\n-\t\t   j < sizeof (option_map) / sizeof (option_map[0]);\n-\t\t   ++j)\n-\t\tif ((strlen (option_map[j].name) >= optlen)\n-\t\t    && (strncmp (opt, option_map[j].name, optlen) == 0))\n-\t\t  fatal (\"Ambiguous abbreviation `%s'\", opt);\n-\t    }\n-\n-\t  if (optlen > namelen)\n-\t    {\n-\t      if (opt[namelen] == '=')\n-\t\t{\n-\t\t  skip = 0;\n-\t\t  arg = opt + namelen + 1;\n-\t\t}\n-\t      else if (index (arginfo, '*') != 0)\n-\t\t;\n-\t      else\n-\t\tcontinue;\n-\t    }\n-\t  else if (index (arginfo, '*') != 0)\n-\t    fatal (\"Incomplete `%s' option\", option_map[i].name);\n-\n-\t  if (strcmp (name, option_map[i].name) != 0)\n-\t    return 1;\t\t/* Not what is being looked for. */\n-\n-\t  *xskip = skip;\n-\t  *xarg = arg;\n-\t  return 0;\n-\t}\n-    }\n-\n-  return 1;\n-}\n-\n-/* Assumes text[0] == '-'.  Returns number of argv items that belong to\n-   (and follow) this one, an option id for options important to the\n-   caller, and a pointer to the first char of the arg, if embedded (else\n-   returns NULL, meaning no arg or it's the next argv).  */\n-\n-static void\n-lookup_option (xopt, xskip, xarg, text)\n-     Option *xopt;\n-     int *xskip;\n-     char **xarg;\n-     char *text;\n-{\n-  Option opt = OPTION_;\n-  int skip;\n-  char *arg = NULL;\n-\n-  if ((skip = SWITCH_TAKES_ARG (text[1])) > (text[2] != '\\0'))\n-    skip -= (text[2] != '\\0');\t/* Usually one of \"DUoeTuImLA\". */\n-\n-  if (text[1] == 'B')\n-    opt = OPTION_B, skip = (text[2] == '\\0'), arg = text + 2;\n-  else if (text[1] == 'b')\n-    opt = OPTION_b, skip = (text[2] == '\\0'), arg = text + 2;\n-  else if ((text[1] == 'c') && (text[2] == '\\0'))\n-    opt = OPTION_c, skip = 0;\n-  else if ((text[1] == 'E') && (text[2] == '\\0'))\n-    opt = OPTION_E, skip = 0;\n-  else if (text[1] == 'i')\n-    opt = OPTION_i, skip = 0;\n-  else if (text[1] == 'l')\n-    opt = OPTION_l;\n-  else if (text[1] == 'L')\n-    opt = OPTION_L, skip = (text[2] == '\\0'), arg = text + 2;\n-  else if (text[1] == 'o')\n-    opt = OPTION_o;\n-  else if ((text[1] == 'S') && (text[2] == '\\0'))\n-    opt = OPTION_S, skip = 0;\n-  else if (text[1] == 'V')\n-    opt = OPTION_V, skip = (text[2] == '\\0');\n-  else if ((text[1] == 'v') && (text[2] == '\\0'))\n-    opt = OPTION_v, skip = 0;\n-  else if ((text[1] == 'W') && (text[2] == 'l') && (text[3] == ','))\n-    opt = OPTION_for_linker, skip = 0;\n-  else if (text[1] == 'x')\n-    opt = OPTION_x, skip = (text[2] == '\\0'), arg = text + 2;\n-  else\n-    {\n-      if ((skip = WORD_SWITCH_TAKES_ARG (text + 1)) != 0)\n-\t/* Usually one of \"Tdata\", \"Ttext\", \"Tbss\", \"include\",\n-\t   \"imacros\", \"aux-info\", \"idirafter\", \"iprefix\",\n-\t   \"iwithprefix\", \"iwithprefixbefore\", \"isystem\".  */\n-\t;\n-\n-      if (strcmp (text, \"--assemble\") == 0)\n-\topt = OPTION_S;\n-      else if (strcmp (text, \"--compile\") == 0)\n-\topt = OPTION_c;\n-      else if (opteq (&skip, &arg, text, \"--driver\") == 0)\n-\topt = OPTION_driver;\n-      else if (strcmp (text, \"--help\") == 0)\n-\topt = OPTION_help;\n-      else if ((opteq (&skip, &arg, text, \"--imacros\") == 0)\n-\t       || (opteq (&skip, &arg, text, \"--include\") == 0)\n-\t       || (opteq (&skip, &arg, text, \"--include-directory-after\") == 0)\n-\t       || (opteq (&skip, &arg, text, \"--include-prefix\") == 0)\n-\t       || (opteq (&skip, &arg, text, \"--include-with-prefix\") == 0)\n-\t       || (opteq (&skip, &arg, text, \"--include-with-prefix-before\") == 0)\n-\t       || (opteq (&skip, &arg, text, \"--include-with-prefix-after\") == 0))\n-\topt = OPTION_i;\n-      else if (opteq (&skip, &arg, text, \"--language\") == 0)\n-\topt = OPTION_x;\n-      else if (opteq (&skip, &arg, text, \"--library-directory\") == 0)\n-\topt = OPTION_L;\n-      else if ((strcmp (text, \"-M\") == 0)\n-\t       || (strcmp (text, \"--dependencies\") == 0))\n-\topt = OPTION_M;\n-      else if ((strcmp (text, \"-MM\") == 0)\n-\t       || (strcmp (text, \"--user-dependencies\") == 0))\n-\topt = OPTION_MM;\n-      else if (strcmp (text, \"--output\") == 0)\n-\topt = OPTION_o;\n-      else if (opteq (&skip, &arg, text, \"--prefix\") == 0)\n-\topt = OPTION_B;\n-      else if (strcmp (text, \"--preprocess\") == 0)\n-\topt = OPTION_E;\n-      else if ((opteq (&skip, &arg, text, \"--print-file-name\") == 0)\n-\t       || (strcmp (text, \"--print-libgcc-file-name\") == 0)\n-\t       || (strcmp (text, \"--print-multi-lib\") == 0)\n-\t       || (strcmp (text, \"--print-multi-directory\") == 0)\n-\t       || (opteq (&skip, &arg, text, \"--print-prog-name\") == 0))\n-\topt = OPTION_P;\n-      else if ((strcmp (text, \"-nostdlib\") == 0)\n-\t       || (strcmp (text, \"--no-standard-libraries\") == 0)\n-\t       || (strcmp (text, \"-nodefaultlibs\") == 0))\n-\topt = OPTION_nostdlib;\n-      else if (strcmp (text, \"-fsyntax-only\") == 0)\n-\topt = OPTION_syntax_only;\n-      else if (opteq (&skip, &arg, text, \"--use-version\") == 0)\n-\topt = OPTION_V;\n-      else if (strcmp (text, \"--verbose\") == 0)\n-\topt = OPTION_v;\n-      else if (strcmp (text, \"--version\") == 0)\n-\topt = OPTION_version;\n-      else if (strcmp (text, \"-Xlinker\") == 0)\n-\tskip = 1;\n-      else if ((opteq (&skip, &arg, text, \"--assert\") == 0)\n-\t       || (opteq (&skip, &arg, text, \"--define-macro\") == 0)\n-\t       || (opteq (&skip, &arg, text, \"--dump\") == 0)\n-\t       || (opteq (&skip, &arg, text, \"--dumpbase\") == 0)\n-\t       || (opteq (&skip, &arg, text, \"--for-assembler\") == 0)\n-\t       || (opteq (&skip, &arg, text, \"--for-linker\") == 0)\n-\t       || (opteq (&skip, &arg, text, \"--force-link\") == 0)\n-\t       || (opteq (&skip, &arg, text, \"--machine\") == 0)\n-\t       || (opteq (&skip, &arg, text, \"--target\") == 0)\n-\t       || (opteq (&skip, &arg, text, \"--undefine-macro\") == 0))\n-\t;\n-      else\n-\tskip = 0;\n-    }\n-\n-  if (xopt != NULL)\n-    *xopt = opt;\n-  if (xskip != NULL)\n-    *xskip = skip;\n-  if (xarg != NULL)\n-    {\n-      if ((arg != NULL)\n-\t  && (arg[0] == '\\0'))\n-\t*xarg = NULL;\n-      else\n-\t*xarg = arg;\n-    }\n-}\n-\n-static void\n-append_arg (arg)\n-    char *arg;\n-{\n-  static int newargsize;\n-\n-#if 0\n-  fprintf (stderr, \"`%s'\\n\", arg);\n-#endif\n-\n-  if ((newargv == xargv)\n-      && (arg == xargv[newargc]))\n-    {\n-      ++newargc;\n-      return;\t\t\t/* Nothing new here. */\n-    }\n-\n-  if (newargv == xargv)\n-    {\t\t\t\t/* Make new arglist. */\n-      int i;\n-\n-      newargsize = (xargc << 2) + 20;\n-      newargv = (char **) malloc (newargsize * sizeof (char *));\n-\n-      /* Copy what has been done so far.  */\n-      for (i = 0; i < newargc; ++i)\n-\tnewargv[i] = xargv[i];\n-    }\n-\n-  if (newargc == newargsize)\n-    fatal (\"overflowed output arg list for `%s'\", arg);\n-  newargv[newargc++] = arg;\n-}\n-\f\n-extern int execv (), execvp ();\n-\n-/* If a stage of compilation returns an exit status >= 1,\n-   compilation of that file ceases.  */\n-\n-#define MIN_FATAL_STATUS 1\n-\n-/* stdin file number.  */\n-#define STDIN_FILE_NO 0\n-\n-/* stdout file number.  */\n-#define STDOUT_FILE_NO 1\n-\n-/* value of `pipe': port index for reading.  */\n-#define READ_PORT 0\n-\n-/* value of `pipe': port index for writing.  */\n-#define WRITE_PORT 1\n-\n-/* Pipe waiting from last process, to be used as input for the next one.\n-   Value is STDIN_FILE_NO if no pipe is waiting\n-   (i.e. the next command is the first of a group).  */\n-\n-static int last_pipe_input;\n-\n-/* Fork one piped subcommand.  FUNC is the system call to use\n-   (either execv or execvp).  ARGV is the arg vector to use.\n-   NOT_LAST is nonzero if this is not the last subcommand\n-   (i.e. its output should be piped to the next one.)  */\n-\n-#ifdef __MSDOS__\n-\n-#include <process.h>\n-static int\n-pexecute (search_flag, program, argv, not_last)\n-     int search_flag;\n-     char *program;\n-     char *argv[];\n-     int not_last;\n-{\n-#ifdef __GO32__\n-  int i = (search_flag ? spawnv : spawnvp) (1, program, argv);\n-#else\n-  char *scmd, *rf;\n-  FILE *argfile;\n-  int i, el = search_flag ? 0 : 4;\n-\n-  scmd = (char *)malloc (strlen (program) + strlen (temp_filename) + 6 + el);\n-  rf = scmd + strlen(program) + 2 + el;\n-  sprintf (scmd, \"%s%s @%s.gp\", program,\n-\t   (search_flag ? \"\" : \".exe\"), temp_filename);\n-  argfile = fopen (rf, \"w\");\n-  if (argfile == 0)\n-    pfatal_with_name (rf);\n-\n-  for (i=1; argv[i]; i++)\n-    {\n-      char *cp;\n-      for (cp = argv[i]; *cp; cp++)\n-\t{\n-\t  if (*cp == '\"' || *cp == '\\'' || *cp == '\\\\' || isspace (*cp))\n-\t    fputc ('\\\\', argfile);\n-\t  fputc (*cp, argfile);\n-\t}\n-      fputc ('\\n', argfile);\n-    }\n-  fclose (argfile);\n-\n-  i = system (scmd);\n-\n-  remove (rf);\n-#endif\n-  \n-  if (i == -1)\n-    {\n-      perror_exec (program);\n-      return MIN_FATAL_STATUS << 8;\n-    }\n-  return i << 8;\n-}\n-\n-#endif\n-\n-#if (!defined(__MSDOS__) && !defined(OS2) && !defined(_WIN32)) || defined (__CYGWIN32__)\n-\n-static int\n-pexecute (search_flag, program, argv, not_last)\n-     int search_flag;\n-     char *program;\n-     char *argv[];\n-     int not_last;\n-{\n-  int (*func)() = (search_flag ? execv : execvp);\n-  int pid;\n-  int pdes[2];\n-  int input_desc = last_pipe_input;\n-  int output_desc = STDOUT_FILE_NO;\n-  int retries, sleep_interval;\n-\n-  /* If this isn't the last process, make a pipe for its output,\n-     and record it as waiting to be the input to the next process.  */\n-\n-  if (not_last)\n-    {\n-      if (pipe (pdes) < 0)\n-\tpfatal_with_name (\"pipe\");\n-      output_desc = pdes[WRITE_PORT];\n-      last_pipe_input = pdes[READ_PORT];\n-    }\n-  else\n-    last_pipe_input = STDIN_FILE_NO;\n-\n-  /* Fork a subprocess; wait and retry if it fails.  */\n-  sleep_interval = 1;\n-  for (retries = 0; retries < 4; retries++)\n-    {\n-      pid = vfork ();\n-      if (pid >= 0)\n-\tbreak;\n-      sleep (sleep_interval);\n-      sleep_interval *= 2;\n-    }\n-\n-  switch (pid)\n-    {\n-    case -1:\n-#ifdef vfork\n-      pfatal_with_name (\"fork\");\n-#else\n-      pfatal_with_name (\"vfork\");\n-#endif\n-      /* NOTREACHED */\n-      return 0;\n-\n-    case 0: /* child */\n-      /* Move the input and output pipes into place, if nec.  */\n-      if (input_desc != STDIN_FILE_NO)\n-\t{\n-\t  close (STDIN_FILE_NO);\n-\t  dup (input_desc);\n-\t  close (input_desc);\n-\t}\n-      if (output_desc != STDOUT_FILE_NO)\n-\t{\n-\t  close (STDOUT_FILE_NO);\n-\t  dup (output_desc);\n-\t  close (output_desc);\n-\t}\n-\n-      /* Close the parent's descs that aren't wanted here.  */\n-      if (last_pipe_input != STDIN_FILE_NO)\n-\tclose (last_pipe_input);\n-\n-      /* Exec the program.  */\n-      (*func) (program, argv);\n-      perror_exec (program);\n-      exit (-1);\n-      /* NOTREACHED */\n-      return 0;\n-\n-    default:\n-      /* In the parent, after forking.\n-\t Close the descriptors that we made for this child.  */\n-      if (input_desc != STDIN_FILE_NO)\n-\tclose (input_desc);\n-      if (output_desc != STDOUT_FILE_NO)\n-\tclose (output_desc);\n-\n-      /* Return child's process number.  */\n-      return pid;\n-    }\n-}\n-\n-#endif /* not __MSDOS__ and not OS2 and not _WIN32 */\n-\n-#if defined(OS2)\n-\n-static int\n-pexecute (search_flag, program, argv, not_last)\n-     int search_flag;\n-     char *program;\n-     char *argv[];\n-     int not_last;\n-{\n-  return (search_flag ? spawnv : spawnvp) (1, program, argv);\n-}\n-#endif /* OS2 */\n-\n-#if defined(_WIN32) && !defined (__CYGWIN32__)\n-\n-static int\n-pexecute (search_flag, program, argv, not_last)\n-     int search_flag;\n-     char *program;\n-     char *argv[];\n-     int not_last;\n-{\n-  return (search_flag ? __spawnv : __spawnvp) (1, program, argv);\n-}\n-#endif /* _WIN32 */\n-\n-static int\n-doit (char *program, char **argv)\n-{\n-  int pid;\n-  int status;\n-  int ret_code = 0;\n-\n-  pid = pexecute (0, program, argv, 0);\n-\n-#ifdef __MSDOS__\n-  status = pid;\n-#else\n-#if defined(_WIN32) && !defined(__CYGWIN32__)\n-  pid = cwait (&status, pid, WAIT_CHILD);\n-#else\n-  pid = wait (&status);\n-#endif\n-#endif\n-  if (pid < 0)\n-    abort ();\n-\n-  if (status != 0)\n-    {\n-      if (WIFSIGNALED (status))\n-\t{\n-\t  fatal (\"Internal compiler error: program %s got fatal signal %d\",\n-\t\t program, WTERMSIG (status));\n-\t  signal_count++;\n-\t  ret_code = -1;\n-\t}\n-      else if (WIFEXITED (status)\n-\t       && WEXITSTATUS (status) >= MIN_FATAL_STATUS)\n-\tret_code = -1;\n-    }\n-\n-  return ret_code;\n-}\n-\f\n-int\n-main (argc, argv)\n-     int argc;\n-     char **argv;\n-{\n-  register int i = 0;\n-  register char *p;\n-  int verbose = 0;\n-  Option opt;\n-  int skip;\n-  char *arg;\n-  int n_infiles = 0;\n-  int n_outfiles = 0;\n-\n-  /* This will be NULL if we encounter a situation where we should not\n-     link in libf2c.  */\n-  char *library = \"-lf2c\";\n-\n-  /* This will become 0 if anything other than -v and kin (like -V)\n-     is seen, meaning the user is trying to accomplish something.\n-     If it remains nonzero, and the user wants version info, add stuff to\n-     the command line to make gcc invoke all the appropriate phases\n-     to get all the version info.  */\n-  int add_version_magic = 1;\n-\n-  /* The name of the compiler we will want to run---by default, it\n-     will be the definition of `GCC_NAME', e.g., `gcc'.  */\n-  char *gcc = GCC_NAME;\n-\n-  /* 0 => -xnone in effect on input/output\n-     1 => -xfoo in effect on input/output\n-     2 => -xnone in effect on input, -xf77 on output\n-     3 => -xnone in effect on input, -xf77-cpp-input on output.\n-     4 => -xnone in effect on input, -xratfor on output.  */\n-  int saw_speclang = 0;\n-\n-  /* 0 => initial/reset state\n-     1 => last arg was -l<library>\n-     2 => last two args were -l<library> -lm.  */\n-  int saw_library = 0;\n-\n-  /* Initialize for append_arg().  */\n-  xargc = argc;\n-  newargv = xargv = argv;\n-  newargc = 0;\n-\n-  append_arg (argv[0]);\n-\n-  p = argv[0] + strlen (argv[0]);\n-  while (p != argv[0] && p[-1] != '/')\n-    --p;\n-  programname = p;\n-\n-  if (argc == 1)\n-    fatal (\"No input files specified.\\n\");\n-\n-#ifndef __MSDOS__\n-  /* We do a little magic to find out where the main gcc executable\n-     is.  If they ran us as /usr/local/bin/g77, then we will look\n-     for /usr/local/bin/gcc; similarly, if they just ran us as `g77',\n-     we'll just look for `gcc'.  */\n-  if (p != argv[0])\n-    {\n-      *--p = '\\0';\n-      gcc = (char *) malloc ((strlen (argv[0]) + 1 + strlen (GCC_NAME) + 1)\n-\t\t\t     * sizeof (char));\n-      sprintf (gcc, \"%s/%s\", argv[0], GCC_NAME);\n-    }\n-#endif\n-\n-  /* First pass through arglist.\n-\n-     If -nostdlib or a \"turn-off-linking\" option is anywhere in the\n-     command line, don't do any library-option processing (except\n-     relating to -x).  Also, if -v is specified, but no other options\n-     that do anything special (allowing -V version, etc.), remember\n-     to add special stuff to make gcc command actually invoke all\n-     the different phases of the compilation process so all the version\n-     numbers can be seen.\n-\n-     Also, here is where all problems with missing arguments to options\n-     are caught.  If this loop is exited normally, it means all options\n-     have the appropriate number of arguments as far as the rest of this\n-     program is concerned.  */\n-\n-  for (i = 1; i < argc; ++i)\n-    {\n-      if ((argv[i][0] == '+') && (argv[i][1] == 'e'))\n-\t{\n-\t  add_version_magic = 0;\n-\t  continue;\n-\t}\n-      else if ((argv[i][0] != '-') || (argv[i][1] == 0))\n-\t{\n-\t  ++n_infiles;\n-\t  add_version_magic = 0;\n-\t  continue;\n-\t}\n-\n-      lookup_option (&opt, &skip, NULL, argv[i]);\n-\n-      switch (opt)\n-\t{\n-\tcase OPTION_nostdlib:\n-\tcase OPTION_c:\n-\tcase OPTION_S:\n-\tcase OPTION_syntax_only:\n-\tcase OPTION_E:\n-\tcase OPTION_M:\n-\tcase OPTION_MM:\n-\t  /* These options disable linking entirely or linking of the\n-\t     standard libraries.  */\n-\t  library = NULL;\n-\t  add_version_magic = 0;\n-\t  break;\n-\n-\tcase OPTION_for_linker:\n-\tcase OPTION_l:\n-\t  ++n_infiles;\n-\t  add_version_magic = 0;\n-\t  break;\n-\n-\tcase OPTION_o:\n-\t  ++n_outfiles;\n-\t  add_version_magic = 0;\n-\t  break;\n-\n-\tcase OPTION_v:\n-\t  if (!verbose)\n-\t    fprintf (stderr, \"g77 version %s\\n\", ffe_version_string);\n-\t  verbose = 1;\n-\t  break;\n-\n-\tcase OPTION_b:\n-\tcase OPTION_B:\n-\tcase OPTION_L:\n-\tcase OPTION_driver:\n-\tcase OPTION_i:\n-\tcase OPTION_V:\n-\t  /* These options are useful in conjunction with -v to get\n-\t     appropriate version info.  */\n-\t  break;\n-\n-\tcase OPTION_version:\n-\t  printf (\"\\\n-GNU Fortran %s\\n\\\n-Copyright (C) 1997 Free Software Foundation, Inc.\\n\\\n-For more version information on components of the GNU Fortran\\n\\\n-compilation system, especially useful when reporting bugs,\\n\\\n-type the command `g77 --verbose'.\\n\\\n-\\n\\\n-GNU Fortran comes with NO WARRANTY, to the extent permitted by law.\\n\\\n-You may redistribute copies of GNU Fortran\\n\\\n-under the terms of the GNU General Public License.\\n\\\n-For more information about these matters, see the file named COPYING\\n\\\n-or type the command `info -f g77 Copying'.\\n\\\n-\", ffe_version_string);\n-\t  exit (0);\n-\t  break;\n-\n-\tcase OPTION_help:\n-\t  printf (\"\\\n-Usage: g77 [OPTION]... FORTRAN-SOURCE...\\n\\\n-\\n\\\n-Compile and link Fortran source code to produce an executable program,\\n\\\n-which by default is named `a.out', and can be invoked with the UNIX\\n\\\n-command `./a.out'.\\n\\\n-\\n\\\n-Options:\\n\\\n---debug                include debugging information in executable.\\n\\\n---driver=COMMAND       specify preprocessor/compiler/linker driver\\n\\\n-                         to use instead of the default `gcc'.\\n\\\n---help                 display this help and exit.\\n\\\n---optimize[=LEVEL]     take extra time and memory to make generated\\n\\\n-                         executable run faster.  LEVEL is 0 for no\\n\\\n-                         optimization, 1 for normal optimization, and\\n\\\n-                         increases through 3 for more optimization.\\n\\\n---output=PROGRAM       name the executable PROGRAM instead of a.out;\\n\\\n-                         invoke with the command `./PROGRAM'.\\n\\\n---version              display version information and exit.\\n\\\n-\\n\\\n-Many other options exist to tailor the compilation process, specify\\n\\\n-the dialect of the Fortran source code, specify details of the\\n\\\n-code-generation methodology, and so on.\\n\\\n-\\n\\\n-For more information on g77 and gcc, type the commands `info -f g77'\\n\\\n-and `info -f gcc' to read the Info documentation on these commands.\\n\\\n-\\n\\\n-Report bugs to fortran@gnu.ai.mit.edu.\\n\");\n-\t  exit (0);\n-\t  break;\n-\n-\tdefault:\n-\t  add_version_magic = 0;\n-\t  break;\n-\t}\n-\n-      /* This is the one place we check for missing arguments in the\n-\t program.  */\n-\n-      if (i + skip < argc)\n-\ti += skip;\n-      else\n-\tfatal (\"argument to `%s' missing\\n\", argv[i]);\n-    }\n-\n-  if ((n_outfiles != 0) && (n_infiles == 0))\n-    fatal (\"No input files; unwilling to write output files\");\n-\n-  /* Second pass through arglist, transforming arguments as appropriate.  */\n-\n-  for (i = 1; i < argc; ++i)\n-    {\n-      if (argv[i][0] == '\\0')\n-\tappend_arg (argv[i]);\t/* Interesting.  Just append as is. */\n-\n-      else if ((argv[i][0] == '-') && (argv[i][1] != 'l'))\n-\t{\n-\t  /* Not a filename or library. */\n-\n-\t  if (saw_library == 1)\t/* -l<library>. */\n-\t    append_arg (\"-lm\");\n-\t  saw_library = 0;\n-\n-\t  lookup_option (&opt, &skip, &arg, argv[i]);\n-\n-\t  if (argv[i][1] == '\\0')\n-\t    append_arg (argv[i]);\t/* \"-\" == Standard input. */\n-\n-\t  else if (opt == OPTION_x)\n-\t    {\n-\t      /* Track input language. */\n-\t      char *lang;\n-\n-\t      if (arg == NULL)\n-\t\tlang = argv[i+1];\n-\t      else\n-\t\tlang = arg;\n-\n-\t      saw_speclang = (strcmp (lang, \"none\") != 0);\n-\t    }\n-\t  else if (opt == OPTION_driver)\n-\t    {\n-\t      if (arg == NULL)\n-\t\tgcc = argv[i+1];\n-\t      else\n-\t\tgcc = arg;\n-\t      i += skip;\n-\t      continue;\t\t/* Don't append args to new list. */\n-\t    }\n-\t  append_arg (argv[i]);\n-\t  for (; skip != 0; --skip)\n-\t    append_arg (argv[++i]);\n-\t}\n-      else\n-\t{\t\t\t/* A filename/library, not an option. */\n-\t  int len;\n-\t  int want_speclang;\n-\n-\t  /* Here, always append the arg _after_ other stuff, possibly.  */\n-\n-\t  if (saw_speclang == 1)\n-\t    saw_library = 0;\t/* -xfoo currently active. */\n-\t  /* Put -xf77 and -xnone around list of filenames ending in\n-\t     .F or .f, but don't include other filenames or libraries\n-\t     in that list.  */\n-\t  else if ((argv[i][0] != '-')\t/* Not a library. */\n-\t\t   && (len = strlen (argv[i])) > 2\n-\t\t   && ((argv[i][len - 1] == 'F')\n-\t\t       || (argv[i][len - 1] == 'f')\n-\t\t       || (argv[i][len - 1] == 'r'))\n-\t\t   && argv[i][len - 2] == '.')\n-\t    {\t\t\t/* filename.f or filename.F. or filename.r */\n-\t      if (saw_library == 1)\t/* -l<library>. */\n-\t\tappend_arg (\"-lm\");\n-\t      saw_library = 0;\n-\t      switch (argv[i][len - 1])\n-\t\t{\n-\t\tcase 'f':\n-\t\t  want_speclang = 2;\n-\t\t  break;\n-\t\tcase 'F':\n-\t\t  want_speclang = 3;\n-\t\t  break;\n-\t\tcase 'r':\n-\t\t  want_speclang = 4;\n-\t\t  break;\n-\t\tdefault:\n-\t\t  break;\n-\t\t}\n-\t      if (saw_speclang != want_speclang)\n-\t\t{\n-\t\t  switch (want_speclang)\n-\t\t    {\n-\t\t    case 2:\n-\t\t      append_arg (\"-xf77\");\n-\t\t      break;\n-\t\t    case 3:\n-\t\t      append_arg (\"-xf77-cpp-input\");\n-\t\t      break;\n-\t\t    case 4:\n-\t\t      append_arg (\"-xratfor\");\n-\t\t      break;\n-\t\t    default:\n-\t\t      break;\n-\t\t    }\n-\t\t  saw_speclang = want_speclang;\n-\t\t}\n-\t    }\n-\t  else\n-\t    {\t\t\t/* -lfoo or \"alien\" filename. */\n-\t      if (saw_speclang)\n-\t\tappend_arg (\"-xnone\");\n-\t      saw_speclang = 0;\n-\n-\t      if (strcmp (argv[i], \"-lm\") == 0\n-\t\t  || strcmp (argv[i], \"-lmath\") == 0)\n-\t\t{\n-\t\t  if (saw_library == 1)\n-\t\t    saw_library = 2;\t/* -l<library> -lm. */\n-\t\t  else if (library)\n-\t\t    {\n-\t\t      append_arg (library);\n-\t\t      saw_library = 2;\t/* -l<library> -lm. */\n-\t\t    }\n-\t\t}\n-\t      else if ((library != NULL)\n-\t\t       && (strcmp (argv[i], library) == 0))\n-\t\tsaw_library = 1;\t/* -l<library>. */\n-\t      else\n-\t\t{\t\t/* \"Alien\" library or filename. */\n-\t\t  if (saw_library == 1)\n-\t\t    append_arg (\"-lm\");\n-\t\t  saw_library = 0;\n-\t\t}\n-\t    }\n-\t  append_arg (argv[i]);\n-\t}\n-    }\n-\n-  /* Add -lf2c -lm as necessary.  */\n-\n-  if (!add_version_magic && library)\n-    {\t\t\t\t/* Doing a link and no -nostdlib. */\n-      if (saw_speclang)\n-\tappend_arg (\"-xnone\");\n-      switch (saw_library)\n-\t{\n-\tcase 0:\n-\t  append_arg (library);\n-\tcase 1:\n-\t  append_arg (\"-lm\");\n-\tdefault:\n-\t  break;\n-\t}\n-    }\n-  else if (add_version_magic && verbose)\n-    {\n-      FILE *fsrc;\n-\n-      choose_temp_base ();\n-\n-      append_arg (\"-fnull-version\");\n-      append_arg (\"-o\");\n-      append_arg (temp_filename);\n-      append_arg (\"-xf77-cpp-input\");\n-      append_arg (temp_filename_f);\n-      append_arg (\"-xnone\");\n-      if (library)\n-\t{\n-\t  append_arg (library);\n-\t  append_arg (\"-lm\");\n-\t}\n-\n-      fsrc = fopen (temp_filename_f, \"w\");\n-      if (fsrc == 0)\n-\tpfatal_with_name (fsrc);\n-      fputs (\"      call g77__fvers;call g77__ivers;call g77__uvers;end\\n\", fsrc);\n-      fclose (fsrc);\n-    }\n-\n-  append_arg (NULL);\n-  --newargc;\t\t\t/* Don't count null arg at end. */\n-\n-  newargv[0] = gcc;\t\t/* This is safe even if newargv == xargv. */\n-\n-  if (verbose)\n-    {\n-#if 0\n-      if (newargv == xargv)\n-\tfprintf (stderr, \"[Original:]\");\n-#endif\n-\n-      for (i = 0; i < newargc; i++)\n-\tfprintf (stderr, \" %s\", newargv[i]);\n-      fprintf (stderr, \"\\n\");\n-    }\n-\n-  if (doit (gcc, newargv) < 0)\n-    ++error_count;\n-  else if (add_version_magic && verbose)\n-    {\n-      char *outargv[2];\n-\n-      outargv[0] = temp_filename;\n-      outargv[1] = 0;\n-\n-      if (doit (temp_filename, outargv) < 0)\n-\t++error_count;\n-\n-      remove (temp_filename);\n-      remove (temp_filename_f);\n-    }\n-\n-  exit (error_count > 0 ? (signal_count ? 2 : 1) : 0);\n-  /* NOTREACHED */\n-  return 0;\n-}\n-\n-#endif\t/* LANGUAGE_F77 == 1 */"}, {"sha": "051d5d47f174ff8596e0131b65edea3633a74352", "filename": "gcc/f/g77spec.c", "status": "added", "additions": 269, "deletions": 0, "changes": 269, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9abbaac7c252da5577d838c37fce4203563869f9/gcc%2Ff%2Fg77spec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9abbaac7c252da5577d838c37fce4203563869f9/gcc%2Ff%2Fg77spec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fg77spec.c?ref=9abbaac7c252da5577d838c37fce4203563869f9", "patch": "@@ -0,0 +1,269 @@\n+/* Specific flags and argument handling of the Fortran front-end.\n+   Copyright (C) 1997 Free Software Foundation, Inc.\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 59 Temple Place - Suite 330,\n+Boston, MA 02111-1307, USA.  */\n+\n+#include \"config.h\"\n+\n+#include <sys/types.h>\n+#include <stdio.h>\n+\n+#include \"gansidecl.h\"\n+\n+#ifdef HAVE_STDLIB_H\n+#include <stdlib.h>\n+#endif\n+\n+#ifdef HAVE_STRING_H\n+#include <string.h>\n+#endif\n+\n+/* This bit is set if we saw a `-xfoo' language specification.  */\n+#define LANGSPEC\t(1<<1)\n+/* This bit is set if they did `-lm' or `-lmath'.  */\n+#define MATHLIB\t\t(1<<2)\n+/* This bit is set if they did `-lc'.  */\n+#define WITHLIBC\t(1<<3)\n+\n+#ifndef MATH_LIBRARY\n+#define MATH_LIBRARY \"-lm\"\n+#endif\n+\n+#ifndef FORTRAN_LIBRARY\n+#define FORTRAN_LIBRARY \"-lf2c\"\n+#endif\n+\n+extern char *xmalloc PROTO((size_t));\n+\n+void\n+lang_specific_driver (fn, in_argc, in_argv)\n+     void (*fn)();\n+     int *in_argc;\n+     char ***in_argv;\n+{\n+  int i, j;\n+\n+  /* If non-zero, the user gave us the `-v' flag.  */ \n+  int saw_verbose_flag = 0;\n+\n+  /* This will be 0 if we encounter a situation where we should not\n+     link in libstdf77.  */\n+  int library = 1;\n+\n+  /* The number of arguments being added to what's in argv, other than\n+     libraries.  We use this to track the number of times we've inserted\n+     -xf77/-xnone.  */\n+  int added = 2;\n+\n+  /* Used to track options that take arguments, so we don't go wrapping\n+     those with -xf77/-xnone.  */\n+  char *quote = NULL;\n+\n+  /* The new argument list will be contained in this.  */\n+  char **arglist;\n+\n+  /* Non-zero if we saw a `-xfoo' language specification on the\n+     command line.  Used to avoid adding our own -xf77 if the user\n+     already gave a language for the file.  */\n+  int saw_speclang = 0;\n+\n+  /* \"-lm\" or \"-lmath\" if it appears on the command line.  */\n+  char *saw_math = 0;\n+\n+  /* \"-lc\" if it appears on the command line.  */\n+  char *saw_libc = 0;\n+\n+  /* An array used to flag each argument that needs a bit set for\n+     LANGSPEC, MATHLIB, or WITHLIBC.  */\n+  int *args;\n+\n+  /* By default, we throw on the math library.  */\n+  int need_math = 1;\n+\n+  /* The total number of arguments with the new stuff.  */\n+  int argc;\n+\n+  /* The argument list.  */\n+  char **argv;\n+\n+  /* The total number of arguments with the new stuff.  */\n+  int num_args = 1;\n+\n+  argc = *in_argc;\n+  argv = *in_argv;\n+\n+  args = (int *) xmalloc (argc * sizeof (int));\n+  bzero ((char *) args, argc * sizeof (int));\n+\n+  for (i = 1; i < argc; i++)\n+    {\n+      /* If the previous option took an argument, we swallow it here.  */\n+      if (quote)\n+\t{\n+\t  quote = NULL;\n+\t  continue;\n+\t}\n+\n+      /* We don't do this anymore, since we don't get them with minus\n+\t signs on them.  */\n+      if (argv[i][0] == '\\0' || argv[i][1] == '\\0')\n+\tcontinue;\n+\n+      if (argv[i][0] == '-')\n+\t{\n+\t  if (library != 0 && (strcmp (argv[i], \"-nostdlib\") == 0\n+\t\t\t       || strcmp (argv[i], \"-nodefaultlibs\") == 0))\n+\t    {\n+\t      library = 0;\n+\t    }\n+\t  else if (strcmp (argv[i], \"-lm\") == 0\n+\t\t   || strcmp (argv[i], \"-lmath\") == 0\n+#ifdef ALT_LIBM\n+\t\t   || strcmp (argv[i], ALT_LIBM) == 0\n+#endif\n+\t\t  )\n+\t    {\n+\t      args[i] |= MATHLIB;\n+\t      need_math = 0;\n+\t    }\n+\t  else if (strcmp (argv[i], \"-lc\") == 0)\n+\t    args[i] |= WITHLIBC;\n+\t  else if (strcmp (argv[i], \"-v\") == 0)\n+\t    {\n+\t      saw_verbose_flag = 1;\n+\t      if (argc == 2)\n+\t\t{\n+\t\t  /* If they only gave us `-v', don't try to link in libf2c. */ \n+\t\t  library = 0;\n+\t\t}\n+\t    }\n+\t  else if (strncmp (argv[i], \"-x\", 2) == 0)\n+\t    saw_speclang = 1;\n+\t  else if (((argv[i][2] == '\\0'\n+\t\t     && (char *)strchr (\"bBVDUoeTuIYmLiA\", argv[i][1]) != NULL)\n+\t\t    || strcmp (argv[i], \"-Tdata\") == 0))\n+\t    quote = argv[i];\n+\t  else if (library != 0 && ((argv[i][2] == '\\0'\n+\t\t     && (char *) strchr (\"cSEM\", argv[i][1]) != NULL)\n+\t\t    || strcmp (argv[i], \"-MM\") == 0))\n+\t    {\n+\t      /* Don't specify libraries if we won't link, since that would\n+\t\t cause a warning.  */\n+\t      library = 0;\n+\t      added -= 2;\n+\t    }\n+\t  else\n+\t    /* Pass other options through.  */\n+\t    continue;\n+\t}\n+      else\n+\t{\n+\t  int len; \n+\n+\t  if (saw_speclang)\n+\t    {\n+\t      saw_speclang = 0;\n+\t      continue;\n+\t    }\n+\n+\t  /* If the filename ends in .c or .i, put options around it.\n+\t     But not if a specified -x option is currently active.  */\n+\t  len = strlen (argv[i]);\n+\t  if (len > 2\n+\t      && (argv[i][len - 1] == 'c' || argv[i][len - 1] == 'i')\n+\t      && argv[i][len - 2] == '.')\n+\t    {\n+\t      args[i] |= LANGSPEC;\n+\t      added += 2;\n+\t    }\n+\t}\n+    }\n+\n+  if (quote)\n+    (*fn) (\"argument to `%s' missing\\n\", quote);\n+\n+  /* If we know we don't have to do anything, bail now.  */\n+  if (! added && ! library)\n+    {\n+      free (args);\n+      return;\n+    }\n+\n+  num_args = argc + added + need_math;\n+  arglist = (char **) xmalloc (num_args * sizeof (char *));\n+\n+  /* NOTE: We start at 1 now, not 0.  */\n+  for (i = 0, j = 0; i < argc; i++, j++)\n+    {\n+      arglist[j] = argv[i];\n+\n+      /* Make sure -lf2c is before the math library, since libf2c\n+\t itself uses those math routines.  */\n+      if (!saw_math && (args[i] & MATHLIB) && library)\n+\t{\n+\t  --j;\n+\t  saw_math = argv[i];\n+\t}\n+\n+      if (!saw_libc && (args[i] & WITHLIBC) && library)\n+\t{\n+\t  --j;\n+\t  saw_libc = argv[i];\n+\t}\n+\n+      /* Wrap foo.c and foo.i files in a language specification to\n+\t force the gcc compiler driver to run cc1plus on them.  */\n+      if (args[i] & LANGSPEC)\n+\t{\n+\t  int len = strlen (argv[i]);\n+\t  switch (argv[i][len - 1])\n+\t    {\n+\t    case 'F':\n+\t      arglist[j++] = \"-xf77-cpp-input\";\n+\t      break;\n+\t    case 'r':\n+\t      /* Don't do ratfor for \".for\".  */\n+\t      if (argv[i][len - 2] == '.')\n+\t\t{\n+\t\t  arglist[j++] = \"-xratfor\";\n+\t\t  break;\n+\t\t}\n+\t    default:\n+\t      arglist[j++] = \"-xf77\";\n+\t      break;\n+\t    }\n+\t  arglist[j++] = argv[i];\n+\t  arglist[j] = \"-xnone\";\n+\t}\n+  }\n+\n+  /* Add `-lf2c' if we haven't already done so.  */\n+  if (library)\n+    arglist[j++] = FORTRAN_LIBRARY;\n+  if (saw_math)\n+    arglist[j++] = saw_math;\n+  else if (library)\n+    arglist[j++] = MATH_LIBRARY;\n+  if (saw_libc)\n+    arglist[j++] = saw_libc;\n+\n+  arglist[j] = NULL;\n+\n+  *in_argc = j;\n+  *in_argv = arglist;\n+}"}]}