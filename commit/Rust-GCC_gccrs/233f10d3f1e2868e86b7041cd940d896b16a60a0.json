{"sha": "233f10d3f1e2868e86b7041cd940d896b16a60a0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjMzZjEwZDNmMWUyODY4ZTg2YjcwNDFjZDk0MGQ4OTZiMTZhNjBhMA==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@cygnus.com", "date": "1998-11-11T13:52:49Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "1998-11-11T13:52:49Z"}, "message": "* jcf-dump.c (main): Correctly recognize `--'-style long options.\n\nFrom-SVN: r23607", "tree": {"sha": "5d2f826baf293422f52b0a1c8366a7521f16814e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5d2f826baf293422f52b0a1c8366a7521f16814e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/233f10d3f1e2868e86b7041cd940d896b16a60a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/233f10d3f1e2868e86b7041cd940d896b16a60a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/233f10d3f1e2868e86b7041cd940d896b16a60a0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/233f10d3f1e2868e86b7041cd940d896b16a60a0/comments", "author": null, "committer": null, "parents": [{"sha": "2a55b8e817a0cab33db7b55492a17d6e60082f78", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a55b8e817a0cab33db7b55492a17d6e60082f78", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a55b8e817a0cab33db7b55492a17d6e60082f78"}], "stats": {"total": 56, "additions": 29, "deletions": 27}, "files": [{"sha": "0ba26eeb8aaa01a1f62c7a6754d6ac941e7877d0", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/233f10d3f1e2868e86b7041cd940d896b16a60a0/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/233f10d3f1e2868e86b7041cd940d896b16a60a0/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=233f10d3f1e2868e86b7041cd940d896b16a60a0", "patch": "@@ -1,3 +1,7 @@\n+1998-11-11  Tom Tromey  <tromey@cygnus.com>\n+\n+\t* jcf-dump.c (main): Correctly recognize `--'-style long options.\n+\n Tue Nov 10 12:34:03 1998  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n \t* class.c (is_compiled_class): Call safe_layout_class for class"}, {"sha": "6276630ff10c77a2872a588b2c53feb897330a84", "filename": "gcc/java/jcf-dump.c", "status": "modified", "additions": 25, "deletions": 27, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/233f10d3f1e2868e86b7041cd940d896b16a60a0/gcc%2Fjava%2Fjcf-dump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/233f10d3f1e2868e86b7041cd940d896b16a60a0/gcc%2Fjava%2Fjcf-dump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf-dump.c?ref=233f10d3f1e2868e86b7041cd940d896b16a60a0", "patch": "@@ -718,39 +718,37 @@ DEFUN(main, (argc, argv),\n     {\n       char *arg = argv[argi];\n \n-      /* Just let all arguments be given in either \"-\" or \"--\" form.  */\n       if (arg[0] != '-' || ! strcmp (arg, \"--\"))\n \tbreak;\n \n-      if (arg[0] == '-')\n+      /* Just let all arguments be given in either \"-\" or \"--\" form.  */\n+      if (arg[1] == '-')\n+\t++arg;\n+\n+      if (strcmp (arg, \"-o\") == 0 && argi + 1 < argc)\n+\toutput_file = argv[++argi];\n+      else if (strcmp (arg, \"-classpath\") == 0 && argi + 1 < argc)\n+\tjcf_path_classpath_arg (argv[++argi]);\n+      else if (strcmp (arg, \"-CLASSPATH\") == 0 && argi + 1 < argc)\n+\tjcf_path_CLASSPATH_arg (argv[++argi]);\n+      else if (strncmp (arg, \"-I\", 2) == 0)\n+\tjcf_path_include_arg (arg + 2);\n+      else if (strcmp (arg, \"-verbose\") == 0)\n+\tverbose++;\n+      else if (strcmp (arg, \"-print-main\") == 0)\n+\tflag_print_main++;\n+      else if (strcmp (arg, \"-c\") == 0)\n+\tflag_disassemble_methods++;\n+      else if (strcmp (arg, \"-javap\") == 0)\n \t{\n-\t  if (strcmp (arg, \"-o\") == 0 && argi + 1 < argc)\n-\t    output_file = argv[++argi];\n-\t  else if (strcmp (arg, \"-classpath\") == 0 && argi + 1 < argc)\n-\t    jcf_path_classpath_arg (argv[++argi]);\n-\t  else if (strcmp (arg, \"-CLASSPATH\") == 0 && argi + 1 < argc)\n-\t    jcf_path_CLASSPATH_arg (argv[++argi]);\n-\t  else if (strncmp (arg, \"-I\", 2) == 0)\n-\t    jcf_path_include_arg (arg + 2);\n-\t  else if (strcmp (arg, \"-verbose\") == 0)\n-\t    verbose++;\n-\t  else if (strcmp (arg, \"-print-main\") == 0)\n-\t    flag_print_main++;\n-\t  else if (strcmp (arg, \"-c\") == 0)\n-\t    flag_disassemble_methods++;\n-\t  else if (strcmp (arg, \"-javap\") == 0)\n-\t    {\n-\t      flag_javap_compatible++;\n-\t      flag_print_constant_pool = 0;\n-\t    }\n-\t  else\n-\t    {\n-\t      fprintf (stderr, \"%s: illegal argument\\n\", argv[argi]);\n-\t      exit (FATAL_EXIT_CODE);\n-\t    }\n+\t  flag_javap_compatible++;\n+\t  flag_print_constant_pool = 0;\n \t}\n       else\n-\tbreak;\n+\t{\n+\t  fprintf (stderr, \"%s: illegal argument\\n\", argv[argi]);\n+\t  exit (FATAL_EXIT_CODE);\n+\t}\n     }\n \n   if (argi == argc)"}]}