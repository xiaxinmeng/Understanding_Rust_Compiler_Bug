{"sha": "8d2b48ae9f3e1e70dfe2aaf32abb9e74594b8875", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGQyYjQ4YWU5ZjNlMWU3MGRmZTJhYWYzMmFiYjllNzQ1OTRiODg3NQ==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2017-09-04T11:30:26Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2017-09-04T11:30:26Z"}, "message": "re PR sanitizer/82072 (sanitizer does not detect an overflow from LLONG_MIN)\n\n\tPR sanitizer/82072\n\t* convert.c (do_narrow): When sanitizing signed integer overflows,\n\tbail out for signed types.\n\t(convert_to_integer_1) <case NEGATE_EXPR>: Likewise.\n\n\t* c-c++-common/ubsan/pr82072.c: New test.\n\nFrom-SVN: r251651", "tree": {"sha": "9b9eb5195184349428955b9bc16261b81fef83bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9b9eb5195184349428955b9bc16261b81fef83bb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8d2b48ae9f3e1e70dfe2aaf32abb9e74594b8875", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d2b48ae9f3e1e70dfe2aaf32abb9e74594b8875", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d2b48ae9f3e1e70dfe2aaf32abb9e74594b8875", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d2b48ae9f3e1e70dfe2aaf32abb9e74594b8875/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e910a9b11a04d37e2a9a92dd2bc39097728f132c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e910a9b11a04d37e2a9a92dd2bc39097728f132c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e910a9b11a04d37e2a9a92dd2bc39097728f132c"}], "stats": {"total": 45, "additions": 44, "deletions": 1}, "files": [{"sha": "0bc8b4b9b1815aaf5e5a76146b4b1fa7a7dae383", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d2b48ae9f3e1e70dfe2aaf32abb9e74594b8875/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d2b48ae9f3e1e70dfe2aaf32abb9e74594b8875/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8d2b48ae9f3e1e70dfe2aaf32abb9e74594b8875", "patch": "@@ -1,3 +1,10 @@\n+2017-09-04  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR sanitizer/82072\n+\t* convert.c (do_narrow): When sanitizing signed integer overflows,\n+\tbail out for signed types.\n+\t(convert_to_integer_1) <case NEGATE_EXPR>: Likewise.\n+\n 2017-09-04  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/82060"}, {"sha": "139d790fd981c4635a4f4d0cba93e5f9fbe0cde9", "filename": "gcc/convert.c", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d2b48ae9f3e1e70dfe2aaf32abb9e74594b8875/gcc%2Fconvert.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d2b48ae9f3e1e70dfe2aaf32abb9e74594b8875/gcc%2Fconvert.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconvert.c?ref=8d2b48ae9f3e1e70dfe2aaf32abb9e74594b8875", "patch": "@@ -434,6 +434,13 @@ do_narrow (location_t loc,\n     typex = lang_hooks.types.type_for_size (TYPE_PRECISION (typex),\n \t\t\t\t\t    TYPE_UNSIGNED (typex));\n \n+  /* The type demotion below might cause doing unsigned arithmetic\n+     instead of signed, and thus hide overflow bugs.  */\n+  if ((ex_form == PLUS_EXPR || ex_form == MINUS_EXPR)\n+      && !TYPE_UNSIGNED (typex)\n+      && sanitize_flags_p (SANITIZE_SI_OVERFLOW))\n+    return NULL_TREE;\n+\n   /* But now perhaps TYPEX is as wide as INPREC.\n      In that case, do nothing special here.\n      (Otherwise would recurse infinitely in convert.  */\n@@ -895,7 +902,12 @@ convert_to_integer_1 (tree type, tree expr, bool dofold)\n \t\t\t\t\t\t    TYPE_UNSIGNED (typex));\n \n \t      if (!TYPE_UNSIGNED (typex))\n-\t\ttypex = unsigned_type_for (typex);\n+\t\t{\n+\t\t  /* Using unsigned arithmetic may hide overflow bugs.  */\n+\t\t  if (sanitize_flags_p (SANITIZE_SI_OVERFLOW))\n+\t\t    break;\n+\t\t  typex = unsigned_type_for (typex);\n+\t\t}\n \t      return convert (type,\n \t\t\t      fold_build1 (ex_form, typex,\n \t\t\t\t\t   convert (typex,"}, {"sha": "45cee1fe463ffe71bcbf3941d7014bb2b85ffa5a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d2b48ae9f3e1e70dfe2aaf32abb9e74594b8875/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d2b48ae9f3e1e70dfe2aaf32abb9e74594b8875/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8d2b48ae9f3e1e70dfe2aaf32abb9e74594b8875", "patch": "@@ -1,3 +1,8 @@\n+2017-09-04  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR sanitizer/82072\n+\t* c-c++-common/ubsan/pr82072.c: New test.\n+\n 2017-09-04  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/82060"}, {"sha": "d5683406b141f2e3de45d1463115b3214af33c78", "filename": "gcc/testsuite/c-c++-common/ubsan/pr82072.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d2b48ae9f3e1e70dfe2aaf32abb9e74594b8875/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fpr82072.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d2b48ae9f3e1e70dfe2aaf32abb9e74594b8875/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fpr82072.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fpr82072.c?ref=8d2b48ae9f3e1e70dfe2aaf32abb9e74594b8875", "patch": "@@ -0,0 +1,19 @@\n+/* PR sanitizer/82072 */\n+/* { dg-do run } */\n+/* { dg-options \"-fsanitize=signed-integer-overflow\" } */\n+\n+int\n+main ()\n+{\n+  long long l = -__LONG_LONG_MAX__ - 1;\n+  int i = 0;\n+  asm volatile (\"\" : \"+r\" (i));\n+  i -= l;\n+  asm volatile (\"\" : \"+r\" (i));\n+  i = -l;\n+  asm volatile (\"\" : \"+r\" (i));\n+  return 0;\n+}\n+\n+/* { dg-output \"signed integer overflow: 0 - -9223372036854775808 cannot be represented in type 'long long int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*negation of -9223372036854775808 cannot be represented in type 'long long int'\\[^\\n\\r]*; cast to an unsigned type to negate this value to itself\" } */"}]}