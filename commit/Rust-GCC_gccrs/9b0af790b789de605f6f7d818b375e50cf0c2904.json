{"sha": "9b0af790b789de605f6f7d818b375e50cf0c2904", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWIwYWY3OTBiNzg5ZGU2MDVmNmY3ZDgxOGIzNzVlNTBjZjBjMjkwNA==", "commit": {"author": {"name": "Jon Beniston", "email": "jon@beniston.com", "date": "2014-03-02T19:58:24Z"}, "committer": {"name": "Jon Beniston", "email": "jbeniston@gcc.gnu.org", "date": "2014-03-02T19:58:24Z"}, "message": "re PR bootstrap/48230 (bootstrapping gcc-4.6.0-RC-20110321 fails for lm32-rtems*)\n\n\tPR bootstrap/48230\n\tPR bootstrap/50927\n\tPR bootstrap/52466\n\tPR target/46898\n\t* config/lm32/lm32.c (lm32_legitimate_constant_p): Remove, as incorrect.\n\t  (TARGET_LEGITIMATE_CONSTANT_P): Undefine, as not needed.  \n\t* config/lm32/lm32.md (movsi_insn): Add 32-bit immediate support.\n\t(simple_return, *simple_return): New patterns     \n\t* config/lm32/predicates.md (movsi_rhs_operand): Remove as obsolete.\n\t* configure.ac (force_sjlj_exceptions): Force sjlj exceptions for lm32.\n\nFrom-SVN: r208260", "tree": {"sha": "85fb1a7ef0c849a11e4a88540aa5bf9c8ac5bb35", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/85fb1a7ef0c849a11e4a88540aa5bf9c8ac5bb35"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9b0af790b789de605f6f7d818b375e50cf0c2904", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b0af790b789de605f6f7d818b375e50cf0c2904", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b0af790b789de605f6f7d818b375e50cf0c2904", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b0af790b789de605f6f7d818b375e50cf0c2904/comments", "author": {"login": "srcejon", "id": 57259258, "node_id": "MDQ6VXNlcjU3MjU5MjU4", "avatar_url": "https://avatars.githubusercontent.com/u/57259258?v=4", "gravatar_id": "", "url": "https://api.github.com/users/srcejon", "html_url": "https://github.com/srcejon", "followers_url": "https://api.github.com/users/srcejon/followers", "following_url": "https://api.github.com/users/srcejon/following{/other_user}", "gists_url": "https://api.github.com/users/srcejon/gists{/gist_id}", "starred_url": "https://api.github.com/users/srcejon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/srcejon/subscriptions", "organizations_url": "https://api.github.com/users/srcejon/orgs", "repos_url": "https://api.github.com/users/srcejon/repos", "events_url": "https://api.github.com/users/srcejon/events{/privacy}", "received_events_url": "https://api.github.com/users/srcejon/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f1e443c838503fe4c8e47bb3c54dd97f6e7b8aa7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1e443c838503fe4c8e47bb3c54dd97f6e7b8aa7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1e443c838503fe4c8e47bb3c54dd97f6e7b8aa7"}], "stats": {"total": 67, "additions": 42, "deletions": 25}, "files": [{"sha": "4224c014c21f2efc07b3233f5d504470ee325c8c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b0af790b789de605f6f7d818b375e50cf0c2904/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b0af790b789de605f6f7d818b375e50cf0c2904/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9b0af790b789de605f6f7d818b375e50cf0c2904", "patch": "@@ -1,3 +1,16 @@\n+2014-03-02  Jon Beniston  <jon@beniston.com>\n+\n+\tPR bootstrap/48230\n+\tPR bootstrap/50927\n+\tPR bootstrap/52466\n+\tPR target/46898\n+\t* config/lm32/lm32.c (lm32_legitimate_constant_p): Remove, as incorrect.\n+\t  (TARGET_LEGITIMATE_CONSTANT_P): Undefine, as not needed.  \n+\t* config/lm32/lm32.md (movsi_insn): Add 32-bit immediate support.\n+\t(simple_return, *simple_return): New patterns     \n+\t* config/lm32/predicates.md (movsi_rhs_operand): Remove as obsolete.\n+\t* configure.ac (force_sjlj_exceptions): Force sjlj exceptions for lm32.\n+\n 2014-03-01  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* dwarf2out.c (gen_subprogram_die): Tidy."}, {"sha": "4f6aba1e7645502c28a978cfe0e7125b1b82b6d6", "filename": "gcc/config/lm32/lm32.c", "status": "modified", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b0af790b789de605f6f7d818b375e50cf0c2904/gcc%2Fconfig%2Flm32%2Flm32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b0af790b789de605f6f7d818b375e50cf0c2904/gcc%2Fconfig%2Flm32%2Flm32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Flm32%2Flm32.c?ref=9b0af790b789de605f6f7d818b375e50cf0c2904", "patch": "@@ -82,7 +82,6 @@ static rtx lm32_function_arg (cumulative_args_t cum,\n static void lm32_function_arg_advance (cumulative_args_t cum,\n \t\t\t\t       enum machine_mode mode,\n \t\t\t\t       const_tree type, bool named);\n-static bool lm32_legitimate_constant_p (enum machine_mode, rtx);\n \n #undef TARGET_OPTION_OVERRIDE\n #define TARGET_OPTION_OVERRIDE lm32_option_override\n@@ -110,8 +109,6 @@ static bool lm32_legitimate_constant_p (enum machine_mode, rtx);\n #define TARGET_CAN_ELIMINATE lm32_can_eliminate\n #undef TARGET_LEGITIMATE_ADDRESS_P\n #define TARGET_LEGITIMATE_ADDRESS_P lm32_legitimate_address_p\n-#undef TARGET_LEGITIMATE_CONSTANT_P\n-#define TARGET_LEGITIMATE_CONSTANT_P lm32_legitimate_constant_p\n \n struct gcc_target targetm = TARGET_INITIALIZER;\n \n@@ -1228,15 +1225,3 @@ lm32_move_ok (enum machine_mode mode, rtx operands[2]) {\n     return register_or_zero_operand (operands[1], mode);\n   return true;\n }\n-\n-/* Implement TARGET_LEGITIMATE_CONSTANT_P.  */\n-\n-static bool\n-lm32_legitimate_constant_p (enum machine_mode mode, rtx x)\n-{\n-  /* 32-bit addresses require multiple instructions.  */  \n-  if (!flag_pic && reloc_operand (x, mode))\n-    return false; \n-  \n-  return true;\n-}"}, {"sha": "26d16823c1a9e47ff6000a8247b70cef258eaf21", "filename": "gcc/config/lm32/lm32.md", "status": "modified", "additions": 25, "deletions": 5, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b0af790b789de605f6f7d818b375e50cf0c2904/gcc%2Fconfig%2Flm32%2Flm32.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b0af790b789de605f6f7d818b375e50cf0c2904/gcc%2Fconfig%2Flm32%2Flm32.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Flm32%2Flm32.md?ref=9b0af790b789de605f6f7d818b375e50cf0c2904", "patch": "@@ -293,8 +293,8 @@\n )\n \n (define_insn \"movsi_insn\"\n-  [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=r,r,m,m,r,r,r,r,r\")\n-        (match_operand:SI 1 \"movsi_rhs_operand\" \"m,r,r,J,K,L,U,S,Y\"))]\n+  [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=r,r,m,m,r,r,r,r,r,r\")\n+        (match_operand:SI 1 \"general_operand\" \"m,r,r,J,K,L,U,S,Y,n\"))]\n   \"lm32_move_ok (SImode, operands)\"\n   \"@\n    lw       %0, %1\n@@ -305,8 +305,9 @@\n    ori      %0, r0, %1\n    orhi     %0, r0, hi(%1)\n    mva      %0, gp(%1)\n-   orhi     %0, r0, hi(%1)\"\n-  [(set_attr \"type\" \"load,arith,store,store,arith,arith,arith,arith,arith\")]   \n+   orhi     %0, r0, hi(%1)\n+   ori      %0, r0, lo(%1); orhi     %0, %0, hi(%1)\"\n+  [(set_attr \"type\" \"load,arith,store,store,arith,arith,arith,arith,arith,arith\")]   \n )\n \n ;; ---------------------------------\n@@ -636,9 +637,28 @@\n   [(set_attr \"type\" \"uibranch\")]  \n )\n \n-(define_insn \"return\"\n+(define_expand \"return\"\n   [(return)]\n   \"lm32_can_use_return ()\"\n+  \"\"\n+) \n+\n+(define_expand \"simple_return\"\n+  [(simple_return)]\n+  \"\"\n+  \"\"\n+) \n+\n+(define_insn \"*return\"\n+  [(return)]\n+  \"reload_completed\"\n+  \"ret\"\n+  [(set_attr \"type\" \"uibranch\")]  \n+) \n+\n+(define_insn \"*simple_return\"\n+  [(simple_return)]\n+  \"\"\n   \"ret\"\n   [(set_attr \"type\" \"uibranch\")]  \n ) "}, {"sha": "ad2e462db5e856dd0c90508c9d6b40685479b1af", "filename": "gcc/config/lm32/predicates.md", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b0af790b789de605f6f7d818b375e50cf0c2904/gcc%2Fconfig%2Flm32%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b0af790b789de605f6f7d818b375e50cf0c2904/gcc%2Fconfig%2Flm32%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Flm32%2Fpredicates.md?ref=9b0af790b789de605f6f7d818b375e50cf0c2904", "patch": "@@ -70,8 +70,3 @@\n   (ior (match_code \"symbol_ref\")\n        (match_operand 0 \"register_operand\")))\n \n-(define_predicate \"movsi_rhs_operand\"\n-  (ior (match_operand 0 \"nonimmediate_operand\")\n-       (ior (match_code \"const_int\")\n-            (ior (match_test \"satisfies_constraint_S (op)\")\n-                 (match_test \"satisfies_constraint_Y (op)\")))))"}, {"sha": "3d7a5c871d65f8864aab5facc17e4a0477b87bd8", "filename": "gcc/configure.ac", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b0af790b789de605f6f7d818b375e50cf0c2904/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b0af790b789de605f6f7d818b375e50cf0c2904/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=9b0af790b789de605f6f7d818b375e50cf0c2904", "patch": "@@ -1249,6 +1249,10 @@ force_sjlj_exceptions=yes],\n     force_sjlj_exceptions=yes\n     enableval=yes\n     ;;\n+  lm32*-*-*)\n+     force_sjlj_exceptions=yes\n+     enableval=yes\n+     ;;\n   *)\n     force_sjlj_exceptions=no\n     ;;"}]}