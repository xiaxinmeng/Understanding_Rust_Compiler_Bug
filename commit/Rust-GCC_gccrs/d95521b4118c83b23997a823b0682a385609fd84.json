{"sha": "d95521b4118c83b23997a823b0682a385609fd84", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDk1NTIxYjQxMThjODNiMjM5OTdhODIzYjA2ODJhMzg1NjA5ZmQ4NA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2014-12-12T21:05:35Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2014-12-12T21:05:35Z"}, "message": "re PR libstdc++/58594 (std::make_shared does not accept const types as parameters)\n\n\tPR libstdc++/58594\n\t* include/bits/shared_ptr_base.h: Cast away cv-quals.\n\t* testsuite/20_util/shared_ptr/creation/58594-no-rtti.cc: New.\n\t* testsuite/20_util/shared_ptr/creation/private.cc: Make allocator\n\trebindable so test passes with -fno-rtti.\n\nFrom-SVN: r218691", "tree": {"sha": "ab6ce57898561a79383a09723159935456ccb810", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ab6ce57898561a79383a09723159935456ccb810"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d95521b4118c83b23997a823b0682a385609fd84", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d95521b4118c83b23997a823b0682a385609fd84", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d95521b4118c83b23997a823b0682a385609fd84", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d95521b4118c83b23997a823b0682a385609fd84/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4573e50a83f944b14a8756ac96603de0c51e2d6c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4573e50a83f944b14a8756ac96603de0c51e2d6c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4573e50a83f944b14a8756ac96603de0c51e2d6c"}], "stats": {"total": 47, "additions": 44, "deletions": 3}, "files": [{"sha": "a4ab4bfb5d452fb0372627e7f3f75730e1ffeb37", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d95521b4118c83b23997a823b0682a385609fd84/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d95521b4118c83b23997a823b0682a385609fd84/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=d95521b4118c83b23997a823b0682a385609fd84", "patch": "@@ -32,6 +32,12 @@\n \t* libsupc++/vterminate.cc: Likewise.\n \t* src/c++11/thread.cc: Likewise.\n \n+\tPR libstdc++/58594\n+\t* include/bits/shared_ptr_base.h: Cast away cv-quals.\n+\t* testsuite/20_util/shared_ptr/creation/58594-no-rtti.cc: New.\n+\t* testsuite/20_util/shared_ptr/creation/private.cc: Make allocator\n+\trebindable so test passes with -fno-rtti.\n+\n 2014-12-12  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* include/bits/stl_iterator.h (make_reverse_iterator): LWG DR 2285."}, {"sha": "3ef783fa356c2283055a4bd1015b57acd3a8d528", "filename": "libstdc++-v3/include/bits/shared_ptr_base.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d95521b4118c83b23997a823b0682a385609fd84/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fshared_ptr_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d95521b4118c83b23997a823b0682a385609fd84/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fshared_ptr_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fshared_ptr_base.h?ref=d95521b4118c83b23997a823b0682a385609fd84", "patch": "@@ -1120,7 +1120,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t: _M_ptr(), _M_refcount()\n \t{\n \t  typedef typename allocator_traits<_Alloc>::template\n-\t    rebind_traits<_Tp> __traits;\n+\t    rebind_traits<typename std::remove_cv<_Tp>::type> __traits;\n \t  _Deleter<typename __traits::allocator_type> __del = { __a };\n \t  auto __guard = std::__allocate_guarded(__del._M_alloc);\n \t  _M_ptr = __guard.get();"}, {"sha": "2eb8b9542c1adcfa25b811467e715fd5b34a6723", "filename": "libstdc++-v3/testsuite/20_util/shared_ptr/creation/58594-no-rtti.cc", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d95521b4118c83b23997a823b0682a385609fd84/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcreation%2F58594-no-rtti.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d95521b4118c83b23997a823b0682a385609fd84/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcreation%2F58594-no-rtti.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcreation%2F58594-no-rtti.cc?ref=d95521b4118c83b23997a823b0682a385609fd84", "patch": "@@ -0,0 +1,27 @@\n+// { dg-options \"-std=gnu++11 -fno-rtti\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2014 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <memory>\n+\n+// libstdc++/58594\n+void test01()\n+{\n+  std::make_shared<const int>();\n+}"}, {"sha": "63ab55524efd62d2973411693b9683f319e1f940", "filename": "libstdc++-v3/testsuite/20_util/shared_ptr/creation/private.cc", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d95521b4118c83b23997a823b0682a385609fd84/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcreation%2Fprivate.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d95521b4118c83b23997a823b0682a385609fd84/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcreation%2Fprivate.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcreation%2Fprivate.cc?ref=d95521b4118c83b23997a823b0682a385609fd84", "patch": "@@ -37,8 +37,17 @@ class Private\n };\n \n template<typename T>\n-struct MyAlloc : std::allocator<Private>\n+struct MyAlloc : std::allocator<T>\n {\n+  template<typename U>\n+    struct rebind { typedef MyAlloc<U> other; };\n+\n+  MyAlloc() = default;\n+  MyAlloc(const MyAlloc&) = default;\n+\n+  template<typename U>\n+    MyAlloc(const MyAlloc<U>&) { }\n+\n   void construct(T* p) { ::new((void*)p) T(); }\n   void destroy(T* p) { p->~T(); }\n };\n@@ -49,4 +58,3 @@ int main()\n   auto p = std::allocate_shared<Private>(a);\n   return p->get();\n }\n-"}]}