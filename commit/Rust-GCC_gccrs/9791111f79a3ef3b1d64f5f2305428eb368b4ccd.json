{"sha": "9791111f79a3ef3b1d64f5f2305428eb368b4ccd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTc5MTExMWY3OWEzZWYzYjFkNjRmNWYyMzA1NDI4ZWIzNjhiNGNjZA==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1995-02-25T02:16:06Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1995-02-25T02:16:06Z"}, "message": "(PACKSTRUCT_BIT, TARGET_PACKSTRUCT): Change to PADSTRUCT.\n\nAdd comment saying that the option is not useful.\n(TARGET_SWITCHES): Change -mpackstruct option to -mpadstruct.\n(STRUCTURE_SIZE_BOUNDARY): Change PACKSTRUCT to PADSTRUCT changing\ndefault value from 32 to 8.\n\nFrom-SVN: r9071", "tree": {"sha": "1b2615c5fa7e005acc058670bd2ccd75ffd0890a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1b2615c5fa7e005acc058670bd2ccd75ffd0890a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9791111f79a3ef3b1d64f5f2305428eb368b4ccd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9791111f79a3ef3b1d64f5f2305428eb368b4ccd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9791111f79a3ef3b1d64f5f2305428eb368b4ccd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9791111f79a3ef3b1d64f5f2305428eb368b4ccd/comments", "author": null, "committer": null, "parents": [{"sha": "dfe8a5acb9b262887f80674c9e3bd269c64857b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dfe8a5acb9b262887f80674c9e3bd269c64857b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dfe8a5acb9b262887f80674c9e3bd269c64857b7"}], "stats": {"total": 16, "additions": 9, "deletions": 7}, "files": [{"sha": "6e07fb2ab47396e1e56ade66b122f2a458516560", "filename": "gcc/config/sh/sh.h", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9791111f79a3ef3b1d64f5f2305428eb368b4ccd/gcc%2Fconfig%2Fsh%2Fsh.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9791111f79a3ef3b1d64f5f2305428eb368b4ccd/gcc%2Fconfig%2Fsh%2Fsh.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.h?ref=9791111f79a3ef3b1d64f5f2305428eb368b4ccd", "patch": "@@ -79,7 +79,7 @@ extern int target_flags;\n #define CONSTLEN_3_BIT  (1<<21)\n #define HITACHI_BIT     (1<<22)\n #define CONSTLEN_0_BIT  (1<<25)\n-#define PACKSTRUCT_BIT  (1<<28)\n+#define PADSTRUCT_BIT  (1<<28)\n #define LITTLE_ENDIAN_BIT (1<<29)\n \n /* Nonzero if we should generate code using type 0 insns.  */\n@@ -128,10 +128,12 @@ extern int target_flags;\n /* Nonzero if using Hitachi's calling convention.  */\n #define TARGET_HITACHI \t\t(target_flags & HITACHI_BIT)\n \n-/* Nonzero if packing structures as small as they'll go (incompatible\n-   with Hitachi's compiler).  */\n-#define TARGET_PACKSTRUCT       (target_flags & PACKSTRUCT_BIT)\n-\n+/* Nonzero if padding structures to a multiple of 4 bytes.  This is\n+   incompatible with Hitachi's compiler, and gives unusual structure layouts\n+   which confuse programmers.\n+   ??? This option is not useful, but is retained in case there are people\n+   who are still relying on it.  It may be deleted in the future.  */\n+#define TARGET_PADSTRUCT       (target_flags & PADSTRUCT_BIT)\n \n #define TARGET_LITTLE_ENDIAN     (target_flags & LITTLE_ENDIAN_BIT)\n \n@@ -151,7 +153,7 @@ extern int target_flags;\n   {\"hitachi\",\t(HITACHI_BIT) },\t\t\\\n   {\"isize\", \t(ISIZE_BIT) },\t\t\t\\\n   {\"l\",\t\t(LITTLE_ENDIAN_BIT) },  \t\\\n-  {\"packstruct\",(PACKSTRUCT_BIT) },    \t\t\\\n+  {\"padstruct\",(PADSTRUCT_BIT) },    \t\t\\\n   {\"r\",  \t(RTL_BIT) },\t\t\t\\\n   {\"space\", \t(SPACE_BIT) },\t\t\t\\\n   {\"\",   \tTARGET_DEFAULT} \t\t\\\n@@ -276,7 +278,7 @@ do {\t\t\t\t\t\t\t\t\\\n /* Number of bits which any structure or union's size must be a\n    multiple of.  Each structure or union's size is rounded up to a\n    multiple of this.  */\n-#define STRUCTURE_SIZE_BOUNDARY (TARGET_PACKSTRUCT ? 8 : 32)\n+#define STRUCTURE_SIZE_BOUNDARY (TARGET_PADSTRUCT ? 32 : 8)\n \n /* Set this nonzero if move instructions will actually fail to work\n    when given unaligned data.  */"}]}