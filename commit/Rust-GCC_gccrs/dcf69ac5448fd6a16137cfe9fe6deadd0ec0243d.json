{"sha": "dcf69ac5448fd6a16137cfe9fe6deadd0ec0243d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGNmNjlhYzU0NDhmZDZhMTYxMzdjZmU5ZmU2ZGVhZGQwZWMwMjQzZA==", "commit": {"author": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2020-04-23T14:36:29Z"}, "committer": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2020-04-23T15:27:29Z"}, "message": "coroutines, libstdc++-v3: Update to n4861 C++20 DIS.\n\nUpdate the inline namespace to __n4861.\nAdd '__cpp_lib_coroutine' defined to 201902L per n4861.\n\nlibstdc++-v3/ChangeLog:\n\n2020-04-23  Iain Sandoe  <iain@sandoe.co.uk>\n\n\t* include/std/coroutine: Update the inline namespace to __n4861.\n\tAdd the __cpp_lib_coroutine define, set to 201902L.\n\t* include/std/version: Add __cpp_lib_coroutine, set to 201902L.\n\ngcc/testsuite/ChangeLog:\n\n2020-04-23  Iain Sandoe  <iain@sandoe.co.uk>\n\n\t* g++.dg/coroutines/coro-bad-alloc-00-bad-op-new.C: Adjust for\n\tchanged inline namespace.\n\t* g++.dg/coroutines/coro-bad-alloc-01-bad-op-del.C: Likewise.\n\t* g++.dg/coroutines/coro-bad-alloc-02-no-op-new-nt.C: Likewise\n\t* g++.dg/coroutines/coro.h: Likewise", "tree": {"sha": "0cf76eaa017030c8ef79324f06e6fcc391f43d6c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0cf76eaa017030c8ef79324f06e6fcc391f43d6c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dcf69ac5448fd6a16137cfe9fe6deadd0ec0243d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dcf69ac5448fd6a16137cfe9fe6deadd0ec0243d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dcf69ac5448fd6a16137cfe9fe6deadd0ec0243d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dcf69ac5448fd6a16137cfe9fe6deadd0ec0243d/comments", "author": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f7e4641afba7c348a7e7c8655e537a953c416bb3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7e4641afba7c348a7e7c8655e537a953c416bb3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f7e4641afba7c348a7e7c8655e537a953c416bb3"}], "stats": {"total": 36, "additions": 28, "deletions": 8}, "files": [{"sha": "cb21f55287502cb82b19bd6608878faf01ae2dab", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcf69ac5448fd6a16137cfe9fe6deadd0ec0243d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcf69ac5448fd6a16137cfe9fe6deadd0ec0243d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=dcf69ac5448fd6a16137cfe9fe6deadd0ec0243d", "patch": "@@ -1,3 +1,11 @@\n+2020-04-23 Iain Sandoe <iain@sandoe.co.uk>\n+\n+\t* g++.dg/coroutines/coro-bad-alloc-00-bad-op-new.C: Adjust for\n+\tchanged inline namespace.\n+\t* g++.dg/coroutines/coro-bad-alloc-01-bad-op-del.C: Likewise.\n+\t* g++.dg/coroutines/coro-bad-alloc-02-no-op-new-nt.C: Likewise\n+\t* g++.dg/coroutines/coro.h: Likewise\n+\n 2020-04-23  Szabolcs Nagy  <szabolcs.nagy@arm.com>\n \n \tPR target/94697"}, {"sha": "06543a9882418b7c0f2ddda4678094cdc1439fa1", "filename": "gcc/testsuite/g++.dg/coroutines/coro-bad-alloc-00-bad-op-new.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcf69ac5448fd6a16137cfe9fe6deadd0ec0243d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fcoro-bad-alloc-00-bad-op-new.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcf69ac5448fd6a16137cfe9fe6deadd0ec0243d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fcoro-bad-alloc-00-bad-op-new.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fcoro-bad-alloc-00-bad-op-new.C?ref=dcf69ac5448fd6a16137cfe9fe6deadd0ec0243d", "patch": "@@ -6,7 +6,7 @@\n #include \"coro1-allocators.h\"\n \n struct coro1\n-f ()  /* { dg-error {'operator new' is provided by 'std::__n4835::coroutine_traits<coro1>::promise_type' \\{aka 'coro1::promise_type'\\} but is not usable with the function signature 'coro1 f\\(\\)'} } */\n+f ()  /* { dg-error {'operator new' is provided by 'std::__n4861::coroutine_traits<coro1>::promise_type' \\{aka 'coro1::promise_type'\\} but is not usable with the function signature 'coro1 f\\(\\)'} } */\n {\n   co_return;\n }"}, {"sha": "9a4ec34cdf3b8c3c36cc427413fcc725c91c4f4b", "filename": "gcc/testsuite/g++.dg/coroutines/coro-bad-alloc-01-bad-op-del.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcf69ac5448fd6a16137cfe9fe6deadd0ec0243d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fcoro-bad-alloc-01-bad-op-del.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcf69ac5448fd6a16137cfe9fe6deadd0ec0243d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fcoro-bad-alloc-01-bad-op-del.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fcoro-bad-alloc-01-bad-op-del.C?ref=dcf69ac5448fd6a16137cfe9fe6deadd0ec0243d", "patch": "@@ -6,7 +6,7 @@\n #include \"coro1-allocators.h\"\n \n struct coro1\n-f ()  /* { dg-error {'operator delete' is provided by 'std::__n4835::coroutine_traits<coro1>::promise_type' \\{aka 'coro1::promise_type'\\} but is not usable with the function signature 'coro1 f\\(\\)'} } */\n+f ()  /* { dg-error {'operator delete' is provided by 'std::__n4861::coroutine_traits<coro1>::promise_type' \\{aka 'coro1::promise_type'\\} but is not usable with the function signature 'coro1 f\\(\\)'} } */\n {\n   co_return;\n }"}, {"sha": "c0c0792d31d731e384bef236a861d8c55a710688", "filename": "gcc/testsuite/g++.dg/coroutines/coro-bad-alloc-02-no-op-new-nt.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcf69ac5448fd6a16137cfe9fe6deadd0ec0243d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fcoro-bad-alloc-02-no-op-new-nt.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcf69ac5448fd6a16137cfe9fe6deadd0ec0243d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fcoro-bad-alloc-02-no-op-new-nt.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fcoro-bad-alloc-02-no-op-new-nt.C?ref=dcf69ac5448fd6a16137cfe9fe6deadd0ec0243d", "patch": "@@ -9,7 +9,7 @@\n #include \"coro1-allocators.h\"\n \n struct coro1\n-f () /* { dg-error {'coro1::promise_type::get_return_object_on_allocation_failure\\(\\)\\(\\)' is provided by 'std::__n4835::coroutine_traits<coro1>::promise_type' \\{aka 'coro1::promise_type'\\} but 'operator new' is not marked 'throw\\(\\)' or 'noexcept'} } */\n+f () /* { dg-error {'coro1::promise_type::get_return_object_on_allocation_failure\\(\\)\\(\\)' is provided by 'std::__n4861::coroutine_traits<coro1>::promise_type' \\{aka 'coro1::promise_type'\\} but 'operator new' is not marked 'throw\\(\\)' or 'noexcept'} } */\n {\n   co_return;\n }"}, {"sha": "fccfe418616b336da168d72b1e0f2c944d06283e", "filename": "gcc/testsuite/g++.dg/coroutines/coro.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcf69ac5448fd6a16137cfe9fe6deadd0ec0243d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fcoro.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcf69ac5448fd6a16137cfe9fe6deadd0ec0243d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fcoro.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fcoro.h?ref=dcf69ac5448fd6a16137cfe9fe6deadd0ec0243d", "patch": "@@ -32,7 +32,7 @@ namespace coro = std::experimental;\n #  if __cpp_impl_coroutine\n \n namespace std {\n-inline namespace __n4835 {\n+inline namespace __n4861 {\n \n // 21.11.1 coroutine traits\n template<typename _R, typename...> struct coroutine_traits {\n@@ -125,7 +125,7 @@ struct suspend_never {\n   void await_resume() {}\n };\n \n-} // namespace __n4835\n+} // namespace __n4861\n } // namespace std\n \n namespace coro = std;"}, {"sha": "b5dc52c66d2bbaa98fdcc27149bfe21265eeac91", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcf69ac5448fd6a16137cfe9fe6deadd0ec0243d/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcf69ac5448fd6a16137cfe9fe6deadd0ec0243d/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=dcf69ac5448fd6a16137cfe9fe6deadd0ec0243d", "patch": "@@ -1,3 +1,9 @@\n+2020-04-23  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\t* include/std/coroutine: Update the inline namespace to __n4861.\n+\tAdd the __cpp_lib_coroutine define, set to 201902L.\n+\t* include/std/version: Add __cpp_lib_coroutine, set to 201902L.\n+\n 2020-04-22  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* include/std/execution (__cpp_lib_execution): Define to indicate"}, {"sha": "4fa1355c0cae85e57ccbaf92d8c55a8eedf5eb95", "filename": "libstdc++-v3/include/std/coroutine", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcf69ac5448fd6a16137cfe9fe6deadd0ec0243d/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcoroutine", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcf69ac5448fd6a16137cfe9fe6deadd0ec0243d/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcoroutine", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcoroutine?ref=dcf69ac5448fd6a16137cfe9fe6deadd0ec0243d", "patch": "@@ -52,10 +52,13 @@\n \n namespace std _GLIBCXX_VISIBILITY (default)\n {\n-  _GLIBCXX_BEGIN_NAMESPACE_VERSION\n+_GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n #if __cpp_impl_coroutine\n-  inline namespace __n4835 {\n+\n+#define __cpp_lib_coroutine 201902L\n+\n+  inline namespace __n4861 {\n \n   // 17.12.2 coroutine traits\n   /// [coroutine.traits]\n@@ -277,7 +280,7 @@ namespace std _GLIBCXX_VISIBILITY (default)\n     void await_resume() {}\n   };\n \n-  } // namespace __n4835\n+  } // namespace __n4861\n \n #else\n #error \"the coroutine header requires -fcoroutines\""}, {"sha": "d06d60c9106927582c91dabe737abe67417d038b", "filename": "libstdc++-v3/include/std/version", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcf69ac5448fd6a16137cfe9fe6deadd0ec0243d/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fversion", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcf69ac5448fd6a16137cfe9fe6deadd0ec0243d/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fversion", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fversion?ref=dcf69ac5448fd6a16137cfe9fe6deadd0ec0243d", "patch": "@@ -69,6 +69,9 @@\n \n #if __cplusplus >= 201402L\n // c++14\n+#if __cpp_impl_coroutine\n+# define __cpp_lib_coroutine 201902L\n+#endif\n #define __cpp_lib_integral_constant_callable 201304\n #define __cpp_lib_is_final 201402L\n #define __cpp_lib_transformation_trait_aliases 201304"}]}