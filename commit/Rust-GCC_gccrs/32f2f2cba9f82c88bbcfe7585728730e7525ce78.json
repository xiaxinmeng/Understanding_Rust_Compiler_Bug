{"sha": "32f2f2cba9f82c88bbcfe7585728730e7525ce78", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzJmMmYyY2JhOWY4MmM4OGJiY2ZlNzU4NTcyODczMGU3NTI1Y2U3OA==", "commit": {"author": {"name": "Danny Smith", "email": "dannysmith@users.sourceforge.net", "date": "2003-07-16T01:12:19Z"}, "committer": {"name": "Danny Smith", "email": "dannysmith@gcc.gnu.org", "date": "2003-07-16T01:12:19Z"}, "message": "dll-MI1.h: New file.\n\n\t* g++.dg/ext/dll-MI1.h: New file.\n\t* g++.dg/ext/dllexport-MI1.C: New file.\n\t* g++.dg/ext/dllimport-MI1.C: New file.\n\n\tChangeLog: Remove 'testsuite/' from 2003-07-04 entry.\n\nFrom-SVN: r69432", "tree": {"sha": "02a8f76be423548fcc047f8c3cbea69c47137349", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/02a8f76be423548fcc047f8c3cbea69c47137349"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/32f2f2cba9f82c88bbcfe7585728730e7525ce78", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32f2f2cba9f82c88bbcfe7585728730e7525ce78", "html_url": "https://github.com/Rust-GCC/gccrs/commit/32f2f2cba9f82c88bbcfe7585728730e7525ce78", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32f2f2cba9f82c88bbcfe7585728730e7525ce78/comments", "author": null, "committer": null, "parents": [{"sha": "d5648e1233d6edd46046ef626a73b8a1d598c4ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5648e1233d6edd46046ef626a73b8a1d598c4ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5648e1233d6edd46046ef626a73b8a1d598c4ac"}], "stats": {"total": 171, "additions": 160, "deletions": 11}, "files": [{"sha": "e6f3233c9ff18857651dc1096f8a21d7ef4ffa66", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 17, "deletions": 11, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32f2f2cba9f82c88bbcfe7585728730e7525ce78/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32f2f2cba9f82c88bbcfe7585728730e7525ce78/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=32f2f2cba9f82c88bbcfe7585728730e7525ce78", "patch": "@@ -1,3 +1,9 @@\n+2003-07-16  Danny Smith  <dannysmith@users.sourceforge.net>\n+\n+\t* g++.dg/ext/dll-MI1.h: New file.\n+\t* g++.dg/ext/dllexport-MI1.C: New file.\n+\t* g++.dg/ext/dllimport-MI1.C: New file.\n+\n 2003-07-15  Jakub Jelinek  <jakub@redhat.com>\n \n \t* gcc.c-torture/execute/string-opt-8.c (main): Remove i370 and s390,\n@@ -227,18 +233,18 @@\n 2003-07-04  Danny Smith  <dannysmith@users.sourceforge.net>\n \n \tPR c++/5287, PR c++/7910,  PR c++/11021\n-\t* testsuite/g++.dg/ext/dllimport1.C: Add mingw32 as target. Add\n+\t* g++.dg/ext/dllimport1.C: Add mingw32 as target. Add\n \ttests for warnings.\n-\t* testsuite/g++.dg/ext/dllimport2.C: Add tests for warnings.\n-\t* testsuite/g++.dg/ext/dllimport3.C: Likewise.\n-\t* testsuite/g++.dg/ext/dllimport4.C: New file.\n-\t* testsuite/g++.dg/ext/dllimport5.C: New file.\n-\t* testsuite/g++.dg/ext/dllimport6.C: New file.\n-\t* testsuite/g++.dg/ext/dllimport7.C: New file.\n-\t* testsuite/g++.dg/ext/dllimport8.C: New file.\n-\t* testsuite/g++.dg/ext/dllimport9.C: New file.\n-\t* testsuite/g++.dg/ext/dllimport10.C: New file.\n-\t* testsuite/g++.dg/ext/dllexport1.C: New file.\n+\t* g++.dg/ext/dllimport2.C: Add tests for warnings.\n+\t* g++.dg/ext/dllimport3.C: Likewise.\n+\t* g++.dg/ext/dllimport4.C: New file.\n+\t* g++.dg/ext/dllimport5.C: New file.\n+\t* g++.dg/ext/dllimport6.C: New file.\n+\t* g++.dg/ext/dllimport7.C: New file.\n+\t* g++.dg/ext/dllimport8.C: New file.\n+\t* g++.dg/ext/dllimport9.C: New file.\n+\t* g++.dg/ext/dllimport10.C: New file.\n+\t* g++.dg/ext/dllexport1.C: New file.\n \n 2003-07-03  Mark Mitchell  <mark@codesourcery.com>\n "}, {"sha": "2f8b83669391b473750bd970725dae315c1bfd6d", "filename": "gcc/testsuite/g++.dg/ext/dll-MI1.h", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32f2f2cba9f82c88bbcfe7585728730e7525ce78/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fdll-MI1.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32f2f2cba9f82c88bbcfe7585728730e7525ce78/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fdll-MI1.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fdll-MI1.h?ref=32f2f2cba9f82c88bbcfe7585728730e7525ce78", "patch": "@@ -0,0 +1,39 @@\n+// Class definitions for dllexport-MI1.C and dllimport-MI1.C\n+\n+#ifdef BUILDING_MI_DLL\n+#define  DLL_IMPEXP __attribute__ ((dllexport))\n+#else\n+#define  DLL_IMPEXP __attribute__ ((dllimport))\n+#endif\n+\n+\n+#define D1_return 1\n+#define D2_return 2\n+\n+class DLL_IMPEXP MBase\n+{\n+public:\n+  virtual int vf() const = 0;\n+  virtual ~MBase();\n+};\n+\n+class DLL_IMPEXP D1 : virtual public MBase\n+{\n+public:\n+  int vf() const;\n+};\n+\n+class DLL_IMPEXP D2 : virtual public MBase\n+{\n+public:\n+  D2 ();\n+  D2 (D2 const&);\n+  int vf() const;\n+};\n+\n+class DLL_IMPEXP MI1 : public D1, public D2\n+{\n+public:\n+  int vf() const;\n+};\n+"}, {"sha": "e640d3ba7cad2aaf592fb9e649287b5e26b5d73b", "filename": "gcc/testsuite/g++.dg/ext/dllexport-MI1.C", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32f2f2cba9f82c88bbcfe7585728730e7525ce78/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fdllexport-MI1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32f2f2cba9f82c88bbcfe7585728730e7525ce78/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fdllexport-MI1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fdllexport-MI1.C?ref=32f2f2cba9f82c88bbcfe7585728730e7525ce78", "patch": "@@ -0,0 +1,51 @@\n+// { dg-do compile { target i?86-*-cygwin* i?86-*-mingw*} }\n+//  Test that non-virtual MI thunks are exported.\n+\n+\n+// To build the dll and client app:\n+// g++ -shared -o MI.dll dllexport-MI1.C\n+// g++ -o MItest.exe dllimport-MI1.C -L. MI.dll\n+\n+#define BUILDING_MI_DLL\n+#include \"dll-MI1.h\"\n+\n+MBase::~MBase(){}\n+\n+int D1::vf() const { return D1_return; }\n+\n+D2::D2() { }\n+D2::D2 (D2 const&) { }\n+int D2::vf() const { return D2_return; }\n+\n+int MI1::vf() const { return D1::vf();}\n+\n+// a dllexported object \n+DLL_IMPEXP MI1 dllMI1;\n+\n+// use default copy ctor \n+DLL_IMPEXP MI1 dllMI1Copy =  dllMI1;\n+\n+// Scan for export of some methods that are undefined in dllimportMI1.C,\n+\n+// { dg-final { scan-assembler \"-export:_ZNK2D12vfEv\" } }\n+// { dg-final { scan-assembler \"-export:_ZNK2D22vfEv\" } }\n+// { dg-final { scan-assembler \"-export:_ZNK3MI12vfEv\" } }\n+\n+// and MI thunks,\n+\n+// { dg-final { scan-assembler \"-export:_ZThn4_NK3MI12vfEv\" } }\n+// { dg-final { scan-assembler \"-export:_ZTv0_n12_NK2D12vfEv\" } }\n+\n+// and a vtable data variable.\n+\n+// { dg-final { scan-assembler \"-export:_ZTV2D1,data\" } }\n+\n+// an explicit copy ctor\n+// { dg-final { scan-assembler \"-export:_ZN2D2C2ERKS_\" } }\n+\n+// but not implicit copy ctor generated by compiler\n+// nor implicit dtor\n+\n+// { dg-final { scan-assembler-not \"-export:_ZN2D1C2ERKS_\" } }\n+// { dg-final { scan-assembler-not \"-export:_ZN2D1D2Ev\" } }\n+"}, {"sha": "4efdea4e58b64f8bcd1e19e7f03943951614279e", "filename": "gcc/testsuite/g++.dg/ext/dllimport-MI1.C", "status": "added", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32f2f2cba9f82c88bbcfe7585728730e7525ce78/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fdllimport-MI1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32f2f2cba9f82c88bbcfe7585728730e7525ce78/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fdllimport-MI1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fdllimport-MI1.C?ref=32f2f2cba9f82c88bbcfe7585728730e7525ce78", "patch": "@@ -0,0 +1,53 @@\n+// { dg-do compile { target i?86-*-cygwin* i?86-*-mingw*} }\n+//  Test handling of MI thunks in dllimported classes.\n+\n+// To build the dll and client app:\n+// g++ -shared -o MI.dll dllexport-MI1.C\n+// g++ -o MItest.exe dllimport-MI1.C  -L. MI.dll\n+\n+#include <stdlib.h>\n+#include \"dll-MI1.h\"\n+\n+extern DLL_IMPEXP MI1 dllMI1;\n+\n+// This should use the implicit copy ctor for D1 (not imported)\n+// and the explicit copy ctor for D2 (dll-imported). \n+MI1 dllMI1LocalCopy = dllMI1;\n+\n+class  MI2 : public D1, public D2\n+{\n+public:\n+  int vf() const { return D2::vf();}\n+};\n+\n+class  MI3 : public MI1\n+{\n+};\n+\n+int main ()\n+\n+{\n+  MI1 bar1;\n+  MI2 bar2; \n+  MI3 bar3;\n+\n+  if (dllMI1.vf() != D1_return)\n+    abort();\n+\n+  if (dllMI1LocalCopy.vf() != D1_return)\n+    abort();\n+\n+  if (bar1.vf() != D1_return)\n+    abort();\n+\n+  if (bar2.vf() != (D2_return))\n+    abort();\n+\n+  if (bar3.vf() != D1_return )\n+    abort();\n+}\n+\n+// Scan for import of explicit copy ctor for D2, but no import\n+// of compiler generated copy ctor for D1. \n+// { dg-final { scan-assembler  \"__imp___ZN2D2C2ERKS_\" } }\n+// { dg-final { scan-assembler-not \"__imp___ZN2D1C2ERKS_\" } }"}]}