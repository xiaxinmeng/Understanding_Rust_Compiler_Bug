{"sha": "ed0f0c0f2429d3624dd86da66dfcd3926e69a248", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWQwZjBjMGYyNDI5ZDM2MjRkZDg2ZGE2NmRmY2QzOTI2ZTY5YTI0OA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-04-23T15:49:10Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-04-23T15:49:10Z"}, "message": "re PR lto/41550 (Fix security and portability issues in lto-plugin)\n\n2010-04-23  Richard Guenther  <rguenther@suse.de>\n\n\tPR lto/41550\n\t* lto-plugin.c (parse_table_entry): Use xstrdup and xrealloc.\n\t(translate): Likewise.\n\t(all_symbols_read_handler): Likewise.\n\t(claim_file_handler): Likewise.\n\t(process_option): Likewise.\n\t(add_output_files): Likewise.  Remove filename length limit.\n\nFrom-SVN: r158673", "tree": {"sha": "8a34a8f17e23f389a8308685b9e79ec957e16b3b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8a34a8f17e23f389a8308685b9e79ec957e16b3b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ed0f0c0f2429d3624dd86da66dfcd3926e69a248", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed0f0c0f2429d3624dd86da66dfcd3926e69a248", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed0f0c0f2429d3624dd86da66dfcd3926e69a248", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed0f0c0f2429d3624dd86da66dfcd3926e69a248/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4e708ff7549987c941fb0f54c159e362381780d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e708ff7549987c941fb0f54c159e362381780d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e708ff7549987c941fb0f54c159e362381780d7"}], "stats": {"total": 59, "additions": 38, "deletions": 21}, "files": [{"sha": "42e50229202760a374e44e64bcb0e52c8de1547e", "filename": "lto-plugin/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed0f0c0f2429d3624dd86da66dfcd3926e69a248/lto-plugin%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed0f0c0f2429d3624dd86da66dfcd3926e69a248/lto-plugin%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/lto-plugin%2FChangeLog?ref=ed0f0c0f2429d3624dd86da66dfcd3926e69a248", "patch": "@@ -1,3 +1,13 @@\n+2010-04-23  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR lto/41550\n+\t* lto-plugin.c (parse_table_entry): Use xstrdup and xrealloc.\n+\t(translate): Likewise.\n+\t(all_symbols_read_handler): Likewise.\n+\t(claim_file_handler): Likewise.\n+\t(process_option): Likewise.\n+\t(add_output_files): Likewise.  Remove filename length limit.\n+\n 2010-04-02  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n \n \t* Makefile.in: Regenerate."}, {"sha": "d0266ffee6cd2c9ab3a749105d7bdf380590bcdf", "filename": "lto-plugin/lto-plugin.c", "status": "modified", "additions": 28, "deletions": 21, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed0f0c0f2429d3624dd86da66dfcd3926e69a248/lto-plugin%2Flto-plugin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed0f0c0f2429d3624dd86da66dfcd3926e69a248/lto-plugin%2Flto-plugin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/lto-plugin%2Flto-plugin.c?ref=ed0f0c0f2429d3624dd86da66dfcd3926e69a248", "patch": "@@ -140,7 +140,7 @@ parse_table_entry (char *p, struct ld_plugin_symbol *entry, uint32_t *slot)\n       LDPV_HIDDEN\n     };\n \n-  entry->name = strdup (p);\n+  entry->name = xstrdup (p);\n   while (*p)\n     p++;\n   p++;\n@@ -155,7 +155,7 @@ parse_table_entry (char *p, struct ld_plugin_symbol *entry, uint32_t *slot)\n   if (strlen (entry->comdat_key) == 0)\n     entry->comdat_key = NULL;\n   else\n-    entry->comdat_key = strdup (entry->comdat_key);\n+    entry->comdat_key = xstrdup (entry->comdat_key);\n \n   t = *p;\n   check (t <= 4, LDPL_FATAL, \"invalid symbol kind found\");\n@@ -233,9 +233,9 @@ translate (Elf_Data *symtab, struct plugin_symtab *out)\n   while (data < end)\n     {\n       n++;\n-      syms = realloc (syms, n * sizeof (struct ld_plugin_symbol));\n+      syms = xrealloc (syms, n * sizeof (struct ld_plugin_symbol));\n       check (syms, LDPL_FATAL, \"could not allocate memory\");\n-      slots = realloc (slots, n * sizeof (uint32_t));\n+      slots = xrealloc (slots, n * sizeof (uint32_t));\n       check (slots, LDPL_FATAL, \"could not allocate memory\");\n       data = parse_table_entry (data, &syms[n - 1], &slots[n - 1]);\n     }\n@@ -343,22 +343,29 @@ write_resolution (void)\n static void\n add_output_files (FILE *f)\n {\n-  char fname[1000]; /* FIXME: Remove this restriction. */\n-\n   for (;;)\n     {\n+      const unsigned piece = 32;\n+      char *buf, *s = xmalloc (piece);\n       size_t len;\n-      char *s = fgets (fname, sizeof (fname), f);\n-      if (!s)\n-\tbreak;\n \n+      buf = s;\n+cont:\n+      if (!fgets (buf, piece, f))\n+\tbreak;\n       len = strlen (s);\n-      check (s[len - 1] == '\\n', LDPL_FATAL, \"file name too long\");\n+      if (s[len - 1] != '\\n')\n+\t{\n+\t  s = xrealloc (s, len + piece);\n+\t  buf = s + len;\n+\t  goto cont;\n+\t}\n       s[len - 1] = '\\0';\n \n       num_output_files++;\n-      output_files = realloc (output_files, num_output_files * sizeof (char *));\n-      output_files[num_output_files - 1] = strdup (s);\n+      output_files\n+\t= xrealloc (output_files, num_output_files * sizeof (char *));\n+      output_files[num_output_files - 1] = s;\n       add_input_file (output_files[num_output_files - 1]);\n     }\n }\n@@ -472,7 +479,7 @@ all_symbols_read_handler (void)\n       return LDPS_OK;\n     }\n \n-  lto_argv = (char **) calloc (sizeof (char *), num_lto_args);\n+  lto_argv = (char **) xcalloc (sizeof (char *), num_lto_args);\n   lto_arg_ptr = (const char **) lto_argv;\n   assert (lto_wrapper_argv);\n \n@@ -591,7 +598,7 @@ claim_file_handler (const struct ld_plugin_input_file *file, int *claimed)\n     }\n   else\n     {\n-      lto_file.name = strdup (file->name);\n+      lto_file.name = xstrdup (file->name);\n       elf = elf_begin (file->fd, ELF_C_READ, NULL);\n     }\n   lto_file.handle = file->handle;\n@@ -614,8 +621,8 @@ claim_file_handler (const struct ld_plugin_input_file *file, int *claimed)\n   *claimed = 1;\n   num_claimed_files++;\n   claimed_files =\n-    realloc (claimed_files,\n-\t     num_claimed_files * sizeof (struct plugin_file_info));\n+    xrealloc (claimed_files,\n+\t      num_claimed_files * sizeof (struct plugin_file_info));\n   claimed_files[num_claimed_files - 1] = lto_file;\n \n   goto cleanup;\n@@ -642,18 +649,18 @@ process_option (const char *option)\n   else if (!strncmp (option, \"-pass-through=\", strlen(\"-pass-through=\")))\n     {\n       num_pass_through_items++;\n-      pass_through_items = realloc (pass_through_items,\n-                                    num_pass_through_items * sizeof (char *));\n+      pass_through_items = xrealloc (pass_through_items,\n+\t\t\t\t     num_pass_through_items * sizeof (char *));\n       pass_through_items[num_pass_through_items - 1] =\n-          strdup (option + strlen (\"-pass-through=\"));\n+          xstrdup (option + strlen (\"-pass-through=\"));\n     }\n   else\n     {\n       int size;\n       lto_wrapper_num_args += 1;\n       size = lto_wrapper_num_args * sizeof (char *);\n-      lto_wrapper_argv = (char **) realloc (lto_wrapper_argv, size);\n-      lto_wrapper_argv[lto_wrapper_num_args - 1] = strdup(option);\n+      lto_wrapper_argv = (char **) xrealloc (lto_wrapper_argv, size);\n+      lto_wrapper_argv[lto_wrapper_num_args - 1] = xstrdup(option);\n     }\n }\n "}]}