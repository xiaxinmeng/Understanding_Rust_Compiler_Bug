{"sha": "7d25bcce9eacba4c906a9fac9886d34967107dfa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2QyNWJjY2U5ZWFjYmE0YzkwNmE5ZmFjOTg4NmQzNDk2NzEwN2RmYQ==", "commit": {"author": {"name": "Zack Weinberg", "email": "zackw@stanford.edu", "date": "2001-05-08T06:26:49Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2001-05-08T06:26:49Z"}, "message": "config.gcc (i[34567]86-*-sco3.2v4*, [...]): Delete stanzas.\n\n\t* config.gcc (i[34567]86-*-sco3.2v4*, i[34567]86-*-sco*):\n\tDelete stanzas.\n\t* config/i386/sco.h, config/i386/sco4.h, config/i386/scodbx.h,\n\tconfig/i386/sco4dbx.h, config/i386/x-sco4: Delete file.\n\n\t* optabs.c: Delete #ifdef BROKEN_LDEXP block.\n\n\t* POTFILES.in: Remove config/i386/sco.h, config/i386/sco4.h,\n\tconfig/i386/sco4dbx.h, and config/i386/scodbx.h.\n\nFrom-SVN: r41912", "tree": {"sha": "66c2d46581f98fae4a59bc0bfed2cba0663abe12", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/66c2d46581f98fae4a59bc0bfed2cba0663abe12"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7d25bcce9eacba4c906a9fac9886d34967107dfa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d25bcce9eacba4c906a9fac9886d34967107dfa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d25bcce9eacba4c906a9fac9886d34967107dfa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d25bcce9eacba4c906a9fac9886d34967107dfa/comments", "author": null, "committer": null, "parents": [{"sha": "641b2721c4f7ee9975c059ea2ce62c104be985d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/641b2721c4f7ee9975c059ea2ce62c104be985d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/641b2721c4f7ee9975c059ea2ce62c104be985d3"}], "stats": {"total": 441, "additions": 14, "deletions": 427}, "files": [{"sha": "9986959adc4d4365a89bbdf8a2b70e097cd1730f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d25bcce9eacba4c906a9fac9886d34967107dfa/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d25bcce9eacba4c906a9fac9886d34967107dfa/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7d25bcce9eacba4c906a9fac9886d34967107dfa", "patch": "@@ -1,3 +1,12 @@\n+2001-05-07  Zack Weinberg  <zackw@stanford.edu>\n+\n+\t* config.gcc (i[34567]86-*-sco3.2v4*, i[34567]86-*-sco*):\n+\tDelete stanzas.\n+\t* config/i386/sco.h, config/i386/sco4.h, config/i386/scodbx.h,\n+\tconfig/i386/sco4dbx.h, config/i386/x-sco4: Delete file.\n+\n+\t* optabs.c: Delete #ifdef BROKEN_LDEXP block.\n+\n 2001-05-07  John David Anglin  <dave@hiauly1.hia.nrc.ca>\n \n \t* pa.md (interspace_jump): Revise comment."}, {"sha": "f9d4d09e82a7cf456d023a9f188637beef198bd8", "filename": "gcc/config.gcc", "status": "modified", "additions": 0, "deletions": 35, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d25bcce9eacba4c906a9fac9886d34967107dfa/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d25bcce9eacba4c906a9fac9886d34967107dfa/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=7d25bcce9eacba4c906a9fac9886d34967107dfa", "patch": "@@ -1186,41 +1186,6 @@ i[34567]86-*-sco3.2v5*)\t# 80386 running SCO Open Server 5\n \ttmake_file=\"$tmake_file i386/t-i386bare\"\n \textra_parts=\"crti.o crtbegin.o crtend.o crtbeginS.o crtendS.o\"\n \t;;\n-i[34567]86-*-sco3.2v4*) \t# 80386 running SCO 3.2v4 system\n-\txm_defines=\"POSIX BROKEN_LDEXP SMALL_ARG_MAX\"\n-\txmake_file=i386/x-sco4\n-\tinstall_headers_dir=install-headers-cpio\n-        if test x$stabs = xyes\n-\tthen\n-\t\ttm_file=i386/sco4dbx.h\n-\t\ttmake_file=i386/t-svr3dbx\n-\t\textra_parts=\"svr3.ifile svr3z.rfile\"\n-\telse\n-\t\ttm_file=i386/sco4.h\n-\t\ttmake_file=i386/t-crtstuff\n-\t\textra_parts=\"crtbegin.o crtend.o\"\n-\tfi\n-\ttmake_file=\"$tmake_file i386/t-i386bare\"\n-\t# The default EAFS filesystem supports long file names.\n-\t# Truncating the target makes $host != $target which\n-\t# makes gcc think it is doing a cross-compile.\n-\t# truncate_target=yes\n-\t;;\n-i[34567]86-*-sco*)\t \t# 80386 running SCO system\n-\tinstall_headers_dir=install-headers-cpio\n-        if test x$stabs = xyes\n-\tthen\n-\t\ttm_file=i386/scodbx.h\n-\t\ttmake_file=i386/t-svr3dbx\n-\t\textra_parts=\"svr3.ifile svr3z.rfile\"\n-\telse\n-\t\ttm_file=i386/sco.h\n-\t\textra_parts=\"crtbegin.o crtend.o\"\n-\t\ttmake_file=i386/t-crtstuff\n-\tfi\n-\ttmake_file=\"$tmake_file i386/t-i386bare\"\n-\ttruncate_target=yes\n-\t;;\n i[34567]86-*-solaris2*)\n \txm_defines=\"POSIX SMALL_ARG_MAX\"\n \ttm_file=i386/sol2.h"}, {"sha": "9a397ed8c1e1905394c3ba70fa8fc1a9ad666c70", "filename": "gcc/config/i386/sco.h", "status": "removed", "additions": 0, "deletions": 114, "changes": 114, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/641b2721c4f7ee9975c059ea2ce62c104be985d3/gcc%2Fconfig%2Fi386%2Fsco.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/641b2721c4f7ee9975c059ea2ce62c104be985d3/gcc%2Fconfig%2Fi386%2Fsco.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsco.h?ref=641b2721c4f7ee9975c059ea2ce62c104be985d3", "patch": "@@ -1,114 +0,0 @@\n-/* Definitions for Intel 386 running SCO Unix System V.\n-   Copyright (C) 1988, 1992, 1994, 1995, 1996, 1999 \n-   Free Software Foundation, Inc.\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* Mostly it's like AT&T Unix System V. */\n-\n-#include \"i386/sysv3.h\"\n-\n-/* By default, target has a 80387, uses IEEE compatible arithmetic,\n-   and returns float values in the 387, ie,\n-   (TARGET_80387 | TARGET_FLOAT_RETURNS_IN_80387)\n-\n-   SCO's software emulation of a 387 fails to handle the `fucomp'\n-   opcode.  fucomp is only used when generating IEEE compliant code.\n-   So don't make TARGET_IEEE_FP default for SCO. */\n-\n-#undef TARGET_SUBTARGET_DEFAULT\n-#define TARGET_SUBTARGET_DEFAULT (MASK_80387 | MASK_FLOAT_RETURNS)\n-\n-/* Let's guess that the SCO software FPU emulator can't handle\n-   80-bit XFmode insns, so don't generate them.  */\n-#undef LONG_DOUBLE_TYPE_SIZE\n-#define LONG_DOUBLE_TYPE_SIZE 64\n-\n-/* Use crt1.o as a startup file and crtn.o as a closing file.  */\n-\n-#undef STARTFILE_SPEC\n-#define STARTFILE_SPEC \\\n- \"%{pg:gcrt1.o%s}%{!pg:%{p:mcrt1.o%s}%{!p:crt1.o%s}} crtbegin.o%s\"\n-\n-#define ENDFILE_SPEC \"crtend.o%s crtn.o%s\"\n-\n-/* Library spec, including SCO international language support. */\n-\n-#undef LIB_SPEC\n-#define LIB_SPEC \\\n- \"%{p:-L/usr/lib/libp}%{pg:-L/usr/lib/libp} %{scointl:libintl.a%s} -lc\"\n-\n-/* Specify predefined symbols in preprocessor.  */\n-\n-#undef CPP_PREDEFINES\n-#define CPP_PREDEFINES \"-DM_UNIX -DM_I386 -DM_COFF -DM_WORDSWAP -Asystem=svr3\"\n-\n-#undef CPP_SPEC\n-#define CPP_SPEC \"%(cpp_cpu) %{scointl:-DM_INTERNAT}\"\n-\n-/* This spec is used for telling cpp whether char is signed or not.  */\n-\n-#undef SIGNED_CHAR_SPEC\n-#if DEFAULT_SIGNED_CHAR\n-#define SIGNED_CHAR_SPEC \\\n- \"%{funsigned-char:-D__CHAR_UNSIGNED__ -D_CHAR_UNSIGNED}\"\n-#else\n-#define SIGNED_CHAR_SPEC \\\n- \"%{!fsigned-char:-D__CHAR_UNSIGNED__ -D_CHAR_UNSIGNED}\"\n-#endif\n-\n-/* Specify the size_t type.  */\n-#define SIZE_TYPE \"unsigned int\"\n-\n-#if 0 /* Not yet certain whether this is needed.  */\n-/* If no 387, use the general regs to return floating values,\n-   since this system does not emulate the 80387.  */\n-\n-#undef VALUE_REGNO\n-#define VALUE_REGNO(MODE) \\\n-  ((TARGET_80387\n-     && ((MODE) == SFmode || (MODE) == DFmode || (MODE) == XFmode)\n-   ? FIRST_FLOAT_REG : 0)\n-\n-#undef HARD_REGNO_MODE_OK\n-#define HARD_REGNO_MODE_OK(REGNO, MODE)\t\t\t\t\t  \\\n-  ((REGNO) < 2 ? 1\t\t\t\t\t\t\t  \\\n-   : (REGNO) < 4 ? 1\t\t\t\t\t\t\t  \\\n-   : FP_REGNO_P (REGNO) ? ((GET_MODE_CLASS (MODE) == MODE_FLOAT\t\t  \\\n-                          || GET_MODE_CLASS (MODE) == MODE_COMPLEX_FLOAT) \\\n-                         && TARGET_80387\t\t\t\t  \\\n-                         && GET_MODE_UNIT_SIZE (MODE) <= 8)\t\t  \\\n-   : (MODE) != QImode)\n-#endif\n-\n-/* caller has to pop the extra argument passed to functions that return\n-   structures. */\n-\n-#undef RETURN_POPS_ARGS\n-#define RETURN_POPS_ARGS(FUNDECL,FUNTYPE,SIZE)   \\\n-  ((FUNDECL) && TREE_CODE (FUNDECL) == IDENTIFIER_NODE ? 0\t\\\n-   : (TARGET_RTD\t\t\t\t\t\t\\\n-      && (TYPE_ARG_TYPES (FUNTYPE) == 0\t\t\t\t\\\n-\t  || (TREE_VALUE (tree_last (TYPE_ARG_TYPES (FUNTYPE)))\t\\\n-\t      == void_type_node))) ? (SIZE)\t\t\t\\\n-   : 0)\n-/* On other 386 systems, the last line looks like this:\n-   : (aggregate_value_p (TREE_TYPE (FUNTYPE))) ? GET_MODE_SIZE (Pmode) : 0)  */\n-\n-/* Handle #pragma pack. */\n-#define HANDLE_SYSV_PRAGMA"}, {"sha": "da468af1d824adae3648045b3449f5f89108d832", "filename": "gcc/config/i386/sco4.h", "status": "removed", "additions": 0, "deletions": 86, "changes": 86, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/641b2721c4f7ee9975c059ea2ce62c104be985d3/gcc%2Fconfig%2Fi386%2Fsco4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/641b2721c4f7ee9975c059ea2ce62c104be985d3/gcc%2Fconfig%2Fi386%2Fsco4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsco4.h?ref=641b2721c4f7ee9975c059ea2ce62c104be985d3", "patch": "@@ -1,86 +0,0 @@\n-/* Definitions for Intel 386 running SCO Unix System V 3.2 Version 4.\n-   Written by Chip Salzenberg.\n-   Copyright (C) 1992, 1994 Free Software Foundation, Inc.\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-\n-/* Mostly it's like earlier SCO UNIX.  */\n-\n-#include \"i386/sco.h\"\n-\n-/* Use crt1.o as a startup file and crtn.o as a closing file.  */\n-\n-#undef STARTFILE_SPEC\n-#define STARTFILE_SPEC \\\n- \"%{scoxpg3:%{p:mcrt1X.o%s}%{!p:crt1X.o%s}} \\\n-  %{!scoxpg3:\\\n-   %{posix:%{p:mcrt1P.o%s}%{!p:crt1P.o%s}} \\\n-   %{!posix:\\\n-    %{ansi:%{p:mcrt1A.o%s}%{!p:crt1A.o%s}} \\\n-    %{!ansi:%{pg:gcrt1.o%s}%{!pg:%{p:mcrt1.o%s}%{!p:crt1.o%s}}}}} \\\n-  crtbegin.o%s\"\n-\n-#undef ENDFILE_SPEC\n-#define ENDFILE_SPEC \\\n- \"crtend.o%s \\\n-  %{scoxpg3:crtnX.o%s} \\\n-  %{!scoxpg3:\\\n-   %{posix:crtnP.o%s} \\\n-   %{!posix:\\\n-    %{ansi:crtnA.o%s} \\\n-    %{!ansi:crtn.o%s}}}\"\n-\n-/* Library spec.  */\n-\n-#undef LIB_SPEC\n-#define LIB_SPEC \\\n- \"%{p:-L/usr/lib/libp}%{pg:-L/usr/lib/libp} \\\n- %{scoxpg3:-lcX -lcP -lcA} \\\n- %{!scoxpg3:\\\n-  %{posix:-lcP -lcA} \\\n-  %{!posix:\\\n-   %{ansi:-lcA} \\\n-   %{!ansi:%{scointl:-lintl} -lc}}}\"\n-\n-/* Macros, macros everywhere:\n-   Specify predefined symbols in preprocessor.  */\n-\n-#undef CPP_PREDEFINES\n-#define CPP_PREDEFINES \\\n- \"-Asystem=svr3\"\n-\n-#undef CPP_SPEC\n-#define CPP_SPEC \"%(cpp_cpu) \\\n-  -D_i386 -D_M_I386 -D_M_I86 -D_M_I86SM -D_M_SDATA -D_M_STEXT \\\n-  -D_unix -D_M_UNIX -D_M_XENIX \\\n-  -D_M_SYS5 -D_M_SYSV -D_M_SYS3 -D_M_SYSIII \\\n-  -D_M_COFF -D_M_BITFIELDS -D_M_WORDSWAP \\\n-  %{scoxpg3:-D_XOPEN_SOURCE -D_STRICT_NAMES} \\\n-  %{!scoxpg3:%{posix:-D_POSIX_SOURCE -D_STRICT_NAMES}} \\\n-  %{!scoxpg3:%{!posix:\\\n-    %{ansi:-D_STRICT_NAMES}%{!ansi:\\\n-    -Di386 -DM_I386 -DM_I86 -DM_I86SM -DM_SDATA -DM_STEXT \\\n-    -Dunix -DM_UNIX -DM_XENIX \\\n-    -DM_SYS5 -DM_SYSV -DM_SYS3 -DM_SYSIII \\\n-    -DM_COFF -DM_BITFIELDS -DM_WORDSWAP \\\n-    %{scointl:-D_M_INTERNAT -DM_INTERNAT} \\\n-    %{traditional:-D_KR -D_SVID -D_NO_PROTOTYPE}}}}\"\n-\n-/* The system headers are C++-aware.  */\n-#define NO_IMPLICIT_EXTERN_C"}, {"sha": "682cc8d0986bd641f5a49f2fb250a08487ce7c6f", "filename": "gcc/config/i386/sco4dbx.h", "status": "removed", "additions": 0, "deletions": 81, "changes": 81, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/641b2721c4f7ee9975c059ea2ce62c104be985d3/gcc%2Fconfig%2Fi386%2Fsco4dbx.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/641b2721c4f7ee9975c059ea2ce62c104be985d3/gcc%2Fconfig%2Fi386%2Fsco4dbx.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsco4dbx.h?ref=641b2721c4f7ee9975c059ea2ce62c104be985d3", "patch": "@@ -1,81 +0,0 @@\n-/* Definitions for Intel 386 running SCO Unix System V 3.2 Version 4.s,\n-   using dbx-in-coff encapsulation.\n-   Copyright (C) 1992 Free Software Foundation, Inc.\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-\n-/* Mostly it's like earlier SCO UNIX.  */\n-\n-#include \"i386/scodbx.h\"\n-\n-/* Use crt1.o as a startup file and crtn.o as a closing file.  */\n-\n-#undef STARTFILE_SPEC\n-#define STARTFILE_SPEC \\\n- \"%{!r:%{!z:gcc.ifile%s}%{z:gccz.ifile%s}}\\\n-  %{scoxpg3:%{p:mcrt1X.o%s}%{!p:crt1X.o%s}} \\\n-  %{!scoxpg3:\\\n-   %{posix:%{p:mcrt1P.o%s}%{!p:crt1P.o%s}} \\\n-   %{!posix:\\\n-    %{ansi:%{p:mcrt1A.o%s}%{!p:crt1A.o%s}} \\\n-    %{!ansi:%{pg:gcrt1.o%s}%{!pg:%{p:mcrt1.o%s}%{!p:crt1.o%s}}}}}\"\n-\n-#undef ENDFILE_SPEC\n-#define ENDFILE_SPEC \\\n- \"%{scoxpg3:crtnX.o%s} \\\n-  %{!scoxpg3:\\\n-   %{posix:crtnP.o%s} \\\n-   %{!posix:\\\n-    %{ansi:crtnA.o%s} \\\n-    %{!ansi:crtn.o%s}}}\"\n-\n-/* Library spec.  */\n-\n-#undef LIB_SPEC\n-#define LIB_SPEC \\\n- \"%{p:-L/usr/lib/libp}%{pg:-L/usr/lib/libp} \\\n- %{scoxpg3:-lcX -lcP -lcA} \\\n- %{!scoxpg3:\\\n-  %{posix:-lcP -lcA} \\\n-  %{!posix:\\\n-   %{ansi:-lcA} \\\n-   %{!ansi:%{scointl:-lintl} -lc}}}\"\n-\n-/* Macros, macros everywhere:\n-   Specify predefined symbols in preprocessor.  */\n-\n-#undef CPP_PREDEFINES\n-#define CPP_PREDEFINES \"-Dunix -Asystem=svr3\"\n-\n-#undef CPP_SPEC\n-#define CPP_SPEC \"%(cpp_cpu) \\\n-  -D_M_I386 -D_M_I86 -D_M_I86SM -D_M_SDATA -D_M_STEXT \\\n-  -D_M_UNIX -D_M_XENIX \\\n-  -D_M_SYS5 -D_M_SYSV -D_M_SYS3 -D_M_SYSIII \\\n-  -D_M_COFF -D_M_BITFIELDS -D_M_WORDSWAP \\\n-  %{scoxpg3:-D_XOPEN_SOURCE -D_STRICT_NAMES} \\\n-  %{!scoxpg3:%{posix:-D_POSIX_SOURCE -D_STRICT_NAMES}} \\\n-  %{!scoxpg3:%{!posix:\\\n-    %{ansi:-D_STRICT_NAMES}%{!ansi:\\\n-    -DM_I386 -DM_I86 -DM_I86SM -DM_SDATA -DM_STEXT \\\n-    -DM_UNIX -DM_XENIX \\\n-    -DM_SYS5 -DM_SYSV -DM_SYS3 -DM_SYSIII \\\n-    -DM_COFF -DM_BITFIELDS -DM_WORDSWAP \\\n-    %{scointl:-D_M_INTERNAT -DM_INTERNAT} \\\n-    %{traditional:-D_KR -D_SVID -D_NO_PROTOTYPE}}}}\""}, {"sha": "17bbfe95f81d26f4ca73ef5aec9fd90e0b7f60ca", "filename": "gcc/config/i386/scodbx.h", "status": "removed", "additions": 0, "deletions": 88, "changes": 88, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/641b2721c4f7ee9975c059ea2ce62c104be985d3/gcc%2Fconfig%2Fi386%2Fscodbx.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/641b2721c4f7ee9975c059ea2ce62c104be985d3/gcc%2Fconfig%2Fi386%2Fscodbx.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fscodbx.h?ref=641b2721c4f7ee9975c059ea2ce62c104be985d3", "patch": "@@ -1,88 +0,0 @@\n-/* Definitions for Intel 386 running SCO Unix System V,\n-   using dbx-in-coff encapsulation.\n-   Copyright (C) 1992, 1995, 1996, 1999 Free Software Foundation, Inc.\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-#include \"i386/svr3dbx.h\"\n-\n-/* Overridden defines for SCO systems from sco.h. */\n-\n-/* By default, target has a 80387, uses IEEE compatible arithmetic,\n-   and returns float values in the 387, ie,\n-   (TARGET_80387 | TARGET_FLOAT_RETURNS_IN_80387)\n-\n-   SCO's software emulation of a 387 fails to handle the `fucomp'\n-   opcode.  fucomp is only used when generating IEEE compliant code.\n-   So don't make TARGET_IEEE_FP default for SCO. */\n-\n-#undef TARGET_SUBTARGET_DEFAULT\n-#define TARGET_SUBTARGET_DEFAULT (MASK_80387 | MASK_FLOAT_RETURNS)\n-\n-/* Use crt1.o as a startup file and crtn.o as a closing file.  */\n-\n-#undef STARTFILE_SPEC\n-#define STARTFILE_SPEC \\\n-  \"%{!r:%{!z:svr3.ifile%s}%{z:svr3z.ifile%s}}\\\n-   %{pg:gcrt1.o%s}%{!pg:%{p:mcrt1.o%s}%{!p:crt1.o%s}}\"\n-\n-/* Library spec, including SCO international language support. */\n-\n-#undef LIB_SPEC\n-#define LIB_SPEC \\\n- \"%{p:-L/usr/lib/libp}%{pg:-L/usr/lib/libp} %{scointl:libintl.a%s} -lc\"\n-\n-/* Specify predefined symbols in preprocessor.  */\n-\n-#undef CPP_PREDEFINES\n-#define CPP_PREDEFINES \"-Dunix -DM_UNIX -DM_I386 -DM_COFF -DM_WORDSWAP -Asystem=svr3\"\n-\n-#undef CPP_SPEC\n-#define CPP_SPEC \"%(cpp_cpu) %{scointl:-DM_INTERNAT}\"\n-\n-/* This spec is used for telling cpp whether char is signed or not.  */\n-\n-#undef SIGNED_CHAR_SPEC\n-#if DEFAULT_SIGNED_CHAR\n-#define SIGNED_CHAR_SPEC \\\n- \"%{funsigned-char:-D__CHAR_UNSIGNED__ -D_CHAR_UNSIGNED}\"\n-#else\n-#define SIGNED_CHAR_SPEC \\\n- \"%{!fsigned-char:-D__CHAR_UNSIGNED__ -D_CHAR_UNSIGNED}\"\n-#endif\n-\n-/* caller has to pop the extra argument passed to functions that return\n-   structures. */\n-\n-#undef RETURN_POPS_ARGS\n-#define RETURN_POPS_ARGS(FUNDECL,FUNTYPE,SIZE)   \\\n-  ((FUNDECL) && TREE_CODE (FUNDECL) == IDENTIFIER_NODE ? 0\t\\\n-   : (TARGET_RTD\t\t\t\t\t\t\\\n-      && (TYPE_ARG_TYPES (FUNTYPE) == 0\t\t\t\t\\\n-\t  || (TREE_VALUE (tree_last (TYPE_ARG_TYPES (FUNTYPE)))\t\\\n-\t      == void_type_node))) ? (SIZE)\t\t\t\\\n-   : 0)\n-/* On other 386 systems, the last line looks like this:\n-   : (aggregate_value_p (TREE_TYPE (FUNTYPE))) ? GET_MODE_SIZE (Pmode) : 0)  */\n-\n-/* Use periods rather than dollar signs in special g++ assembler names.  */\n-\n-#define NO_DOLLAR_IN_LABEL\n-\n-/* Handle #pragma pack. */\n-#define HANDLE_SYSV_PRAGMA"}, {"sha": "ce50fe976df4d1d6b09d21c4fcea3860466d4f05", "filename": "gcc/config/i386/x-sco4", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/641b2721c4f7ee9975c059ea2ce62c104be985d3/gcc%2Fconfig%2Fi386%2Fx-sco4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/641b2721c4f7ee9975c059ea2ce62c104be985d3/gcc%2Fconfig%2Fi386%2Fx-sco4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fx-sco4?ref=641b2721c4f7ee9975c059ea2ce62c104be985d3", "patch": "@@ -1,2 +0,0 @@\n-# See all the declarations.\n-FIXPROTO_DEFINES = -D_XOPEN_SOURCE"}, {"sha": "0403dbf17dc88fbebe0f6d81a225a14ae5e8f4d5", "filename": "gcc/optabs.c", "status": "modified", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d25bcce9eacba4c906a9fac9886d34967107dfa/gcc%2Foptabs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d25bcce9eacba4c906a9fac9886d34967107dfa/gcc%2Foptabs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.c?ref=7d25bcce9eacba4c906a9fac9886d34967107dfa", "patch": "@@ -4909,23 +4909,6 @@ init_optabs ()\n   ggc_add_rtx_root (libfunc_table, LTI_MAX);\n }\n \f\n-#ifdef BROKEN_LDEXP\n-\n-/* SCO 3.2 apparently has a broken ldexp.  */\n-\n-double\n-ldexp(x,n)\n-     double x;\n-     int n;\n-{\n-  if (n > 0)\n-    while (n--)\n-      x *= 2;\n-\n-  return x;\n-}\n-#endif /* BROKEN_LDEXP */\n-\f\n #ifdef HAVE_conditional_trap\n /* The insn generating function can not take an rtx_code argument.\n    TRAP_RTX is used as an rtx argument.  Its code is replaced with"}, {"sha": "d7848eea80faa30cb405f034ac586dba6b3da738", "filename": "gcc/po/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d25bcce9eacba4c906a9fac9886d34967107dfa/gcc%2Fpo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d25bcce9eacba4c906a9fac9886d34967107dfa/gcc%2Fpo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpo%2FChangeLog?ref=7d25bcce9eacba4c906a9fac9886d34967107dfa", "patch": "@@ -1,3 +1,8 @@\n+2001-05-07  Zack Weinberg  <zackw@stanford.edu>\n+\n+\t* POTFILES.in: Remove config/i386/sco.h, config/i386/sco4.h,\n+\tconfig/i386/sco4dbx.h, and config/i386/scodbx.h.\n+\n 2001-04-04  Zack Weinberg  <zackw@stanford.edu>\n \n \t* POTFILES.in: Remove config/romp/xm-romp.h."}, {"sha": "e942c130f6417a05d5023a237c39fde28576b5f4", "filename": "gcc/po/POTFILES.in", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d25bcce9eacba4c906a9fac9886d34967107dfa/gcc%2Fpo%2FPOTFILES.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d25bcce9eacba4c906a9fac9886d34967107dfa/gcc%2Fpo%2FPOTFILES.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpo%2FPOTFILES.in?ref=7d25bcce9eacba4c906a9fac9886d34967107dfa", "patch": "@@ -186,11 +186,7 @@ config/i386/perform.h\n config/i386/ptx4-i.h\n config/i386/rtems.h\n config/i386/rtemself.h\n-config/i386/sco.h\n-config/i386/sco4.h\n-config/i386/sco4dbx.h\n config/i386/sco5.h\n-config/i386/scodbx.h\n config/i386/seq-gas.h\n config/i386/seq-sysv3.h\n config/i386/seq2-sysv3.h"}]}