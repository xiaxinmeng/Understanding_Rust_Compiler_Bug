{"sha": "c94ae2e4b885fe63dc2c83a173033016a67410ab", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzk0YWUyZTRiODg1ZmU2M2RjMmM4M2ExNzMwMzMwMTZhNjc0MTBhYg==", "commit": {"author": {"name": "David Daney", "email": "ddaney@avtrex.com", "date": "2007-12-08T19:57:40Z"}, "committer": {"name": "David Daney", "email": "daney@gcc.gnu.org", "date": "2007-12-08T19:57:40Z"}, "message": "n32.S (ffi_call_N32): Replace dadd with ADDU...\n\n2007-12-08  David Daney  <ddaney@avtrex.com>\n\n\t* src/mips/n32.S (ffi_call_N32):  Replace dadd with ADDU, dsub with \n\tSUBU, add with ADDU and use smaller code sequences.\n\nFrom-SVN: r130711", "tree": {"sha": "b8385817260e5dd421b3744bd9af5d7026e33e51", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b8385817260e5dd421b3744bd9af5d7026e33e51"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c94ae2e4b885fe63dc2c83a173033016a67410ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c94ae2e4b885fe63dc2c83a173033016a67410ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c94ae2e4b885fe63dc2c83a173033016a67410ab", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c94ae2e4b885fe63dc2c83a173033016a67410ab/comments", "author": null, "committer": null, "parents": [{"sha": "6d90749a7bc9533f8c70d0171676539fd2510fe5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d90749a7bc9533f8c70d0171676539fd2510fe5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d90749a7bc9533f8c70d0171676539fd2510fe5"}], "stats": {"total": 40, "additions": 17, "deletions": 23}, "files": [{"sha": "b547ec77801285ada6765c0237973d668169105b", "filename": "libffi/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c94ae2e4b885fe63dc2c83a173033016a67410ab/libffi%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c94ae2e4b885fe63dc2c83a173033016a67410ab/libffi%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FChangeLog?ref=c94ae2e4b885fe63dc2c83a173033016a67410ab", "patch": "@@ -1,3 +1,8 @@\n+2007-12-08  David Daney  <ddaney@avtrex.com>\n+\n+\t* src/mips/n32.S (ffi_call_N32):  Replace dadd with ADDU, dsub with \n+\tSUBU, add with ADDU and use smaller code sequences.\n+\n 2007-12-07  David Daney  <ddaney@avtrex.com>\n \t* src/mips/ffi.c (ffi_prep_cif_machdep): Handle long double return\n \ttype."}, {"sha": "2f9edb48a9b6a3864c99bee7b2c85e933c2a2c60", "filename": "libffi/src/mips/n32.S", "status": "modified", "additions": 12, "deletions": 23, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c94ae2e4b885fe63dc2c83a173033016a67410ab/libffi%2Fsrc%2Fmips%2Fn32.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c94ae2e4b885fe63dc2c83a173033016a67410ab/libffi%2Fsrc%2Fmips%2Fn32.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fmips%2Fn32.S?ref=c94ae2e4b885fe63dc2c83a173033016a67410ab", "patch": "@@ -78,14 +78,12 @@ sixteen:\n \tSUBU\t$sp, $sp, v0\t# move the stack pointer to reflect the\n \t\t\t\t# arg space\n \n-\tADDU\ta0, $sp, 0      # 4 * FFI_SIZEOF_ARG\n+\tmove\ta0, $sp         # 4 * FFI_SIZEOF_ARG\n \tADDU\ta3, $fp, 3 * FFI_SIZEOF_ARG\n \n \t# Call ffi_prep_args\n \tjal\tt9\n \t\n-\t#\tADDU\t$sp, $sp, 4 * FFI_SIZEOF_ARG\t# adjust $sp to new args\n-\n \t# Copy the stack pointer to t9\n \tmove\tt9, $sp\n \t\n@@ -96,18 +94,16 @@ sixteen:\n \tREG_L\tt6, 2*FFI_SIZEOF_ARG($fp)\n \n \t# Is it bigger than 8 * FFI_SIZEOF_ARG?\n-\tdadd\tt7, $0, 8 * FFI_SIZEOF_ARG\n-\tdsub\tt8, t6, t7\n+\tdaddiu\tt8, t6, -(8 * FFI_SIZEOF_ARG)\n \tbltz\tt8, loadregs\n \n-\tadd\tt9, t9, t8\n+\tADDU\tt9, t9, t8\n \t\n loadregs:\t\n \n-\tREG_L\tt4, 3*FFI_SIZEOF_ARG($fp)  # load the flags word\n-\tadd\tt6, t4, 0\t\t\t      # and copy it into t6\n+\tREG_L\tt6, 3*FFI_SIZEOF_ARG($fp)  # load the flags word into t6.\n \n-\tand\tt4, ((1<<FFI_FLAG_BITS)-1)\n+\tand\tt4, t6, ((1<<FFI_FLAG_BITS)-1)\n \tbnez\tt4, arg1_floatp\n \tREG_L\ta0, 0*FFI_SIZEOF_ARG(t9)\n \tb\targ1_next\n@@ -119,8 +115,7 @@ arg1_doublep:\n \tl.d\t$f12, 0*FFI_SIZEOF_ARG(t9)\n arg1_next:\t\n \t\n-\tadd\tt4, t6, 0\n-\tSRL\tt4, 1*FFI_FLAG_BITS\n+\tSRL\tt4, t6, 1*FFI_FLAG_BITS\n \tand\tt4, ((1<<FFI_FLAG_BITS)-1)\n \tbnez\tt4, arg2_floatp\n \tREG_L\ta1, 1*FFI_SIZEOF_ARG(t9)\n@@ -133,8 +128,7 @@ arg2_doublep:\n \tl.d\t$f13, 1*FFI_SIZEOF_ARG(t9)\t\n arg2_next:\t\n \t\n-\tadd\tt4, t6, 0\n-\tSRL\tt4, 2*FFI_FLAG_BITS\n+\tSRL\tt4, t6, 2*FFI_FLAG_BITS\n \tand\tt4, ((1<<FFI_FLAG_BITS)-1)\n \tbnez\tt4, arg3_floatp\n \tREG_L\ta2, 2*FFI_SIZEOF_ARG(t9)\n@@ -147,8 +141,7 @@ arg3_doublep:\n \tl.d\t$f14, 2*FFI_SIZEOF_ARG(t9)\t\n arg3_next:\t\n \t\n-\tadd\tt4, t6, 0\n-\tSRL\tt4, 3*FFI_FLAG_BITS\n+\tSRL\tt4, t6, 3*FFI_FLAG_BITS\n \tand\tt4, ((1<<FFI_FLAG_BITS)-1)\n \tbnez\tt4, arg4_floatp\n \tREG_L\ta3, 3*FFI_SIZEOF_ARG(t9)\n@@ -161,8 +154,7 @@ arg4_doublep:\n \tl.d\t$f15, 3*FFI_SIZEOF_ARG(t9)\t\n arg4_next:\t\n \t\n-\tadd\tt4, t6, 0\n-\tSRL\tt4, 4*FFI_FLAG_BITS\n+\tSRL\tt4, t6, 4*FFI_FLAG_BITS\n \tand\tt4, ((1<<FFI_FLAG_BITS)-1)\n \tbnez\tt4, arg5_floatp\n \tREG_L\ta4, 4*FFI_SIZEOF_ARG(t9)\n@@ -175,8 +167,7 @@ arg5_doublep:\n \tl.d\t$f16, 4*FFI_SIZEOF_ARG(t9)\t\n arg5_next:\t\n \t\n-\tadd\tt4, t6, 0\n-\tSRL\tt4, 5*FFI_FLAG_BITS\n+\tSRL\tt4, t6, 5*FFI_FLAG_BITS\n \tand\tt4, ((1<<FFI_FLAG_BITS)-1)\n \tbnez\tt4, arg6_floatp\n \tREG_L\ta5, 5*FFI_SIZEOF_ARG(t9)\n@@ -189,8 +180,7 @@ arg6_doublep:\n \tl.d\t$f17, 5*FFI_SIZEOF_ARG(t9)\t\n arg6_next:\t\n \t\n-\tadd\tt4, t6, 0\n-\tSRL\tt4, 6*FFI_FLAG_BITS\n+\tSRL\tt4, t6, 6*FFI_FLAG_BITS\n \tand\tt4, ((1<<FFI_FLAG_BITS)-1)\n \tbnez\tt4, arg7_floatp\n \tREG_L\ta6, 6*FFI_SIZEOF_ARG(t9)\n@@ -203,8 +193,7 @@ arg7_doublep:\n \tl.d\t$f18, 6*FFI_SIZEOF_ARG(t9)\t\n arg7_next:\t\n \t\n-\tadd\tt4, t6, 0\n-\tSRL\tt4, 7*FFI_FLAG_BITS\n+\tSRL\tt4, t6, 7*FFI_FLAG_BITS\n \tand\tt4, ((1<<FFI_FLAG_BITS)-1)\n \tbnez\tt4, arg8_floatp\n \tREG_L\ta7, 7*FFI_SIZEOF_ARG(t9)"}]}