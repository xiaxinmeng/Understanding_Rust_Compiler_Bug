{"sha": "40b4bc2da16cd1145b77bbeb232a2d54b937a4a3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDBiNGJjMmRhMTZjZDExNDViNzdiYmViMjMyYTJkNTRiOTM3YTRhMw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-04-28T13:48:59Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-04-28T13:48:59Z"}, "message": "[multiple changes]\n\n2017-04-28  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch4.adb (Complete_Object_Operation): When rewriting the\n\tcontrolling actual in a prefixed call, preserve the original node\n\tinformation if the prefix itself has been rewritten, for ASIS use.\n\n2017-04-28  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* exp_ch6.adb (Insert_Post_Call_Actions):\n\tCode clean up. Insert the post-call actions after an enclosing\n\tprocedure call when N denotes a function call and appears as an\n\tactual parameter in the procedure call.\n\n2017-04-28  Eric Botcazou  <ebotcazou@adacore.com>\n\n\t* freeze.adb (Check_Component_Storage_Order): If there is a clause\n\tfor the component, also reject the attribute if the component\n\tdoesn't end on a byte boundary and its scalar storage order is\n\tdifferent from that of the enclosing record type.\n\nFrom-SVN: r247391", "tree": {"sha": "593a35eaa4e3d5676feb870ea760c54d208c97d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/593a35eaa4e3d5676feb870ea760c54d208c97d0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/40b4bc2da16cd1145b77bbeb232a2d54b937a4a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40b4bc2da16cd1145b77bbeb232a2d54b937a4a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40b4bc2da16cd1145b77bbeb232a2d54b937a4a3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40b4bc2da16cd1145b77bbeb232a2d54b937a4a3/comments", "author": null, "committer": null, "parents": [{"sha": "66c19cd4fd18119948678367c10f57a5331a10e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66c19cd4fd18119948678367c10f57a5331a10e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66c19cd4fd18119948678367c10f57a5331a10e4"}], "stats": {"total": 74, "additions": 55, "deletions": 19}, "files": [{"sha": "d433c512112b3afaa5d2be7b3f2f54d535036913", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40b4bc2da16cd1145b77bbeb232a2d54b937a4a3/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40b4bc2da16cd1145b77bbeb232a2d54b937a4a3/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=40b4bc2da16cd1145b77bbeb232a2d54b937a4a3", "patch": "@@ -1,3 +1,23 @@\n+2017-04-28  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch4.adb (Complete_Object_Operation): When rewriting the\n+\tcontrolling actual in a prefixed call, preserve the original node\n+\tinformation if the prefix itself has been rewritten, for ASIS use.\n+\n+2017-04-28  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* exp_ch6.adb (Insert_Post_Call_Actions):\n+\tCode clean up. Insert the post-call actions after an enclosing\n+\tprocedure call when N denotes a function call and appears as an\n+\tactual parameter in the procedure call.\n+\n+2017-04-28  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* freeze.adb (Check_Component_Storage_Order): If there is a clause\n+\tfor the component, also reject the attribute if the component\n+\tdoesn't end on a byte boundary and its scalar storage order is\n+\tdifferent from that of the enclosing record type.\n+\n 2017-04-28  Javier Miranda  <miranda@adacore.com>\n \n \t* atree.ads (Info_Messages): Removed."}, {"sha": "0317dc39e2143e1042f82bcf2f3128563e0fe87a", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 21, "deletions": 15, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40b4bc2da16cd1145b77bbeb232a2d54b937a4a3/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40b4bc2da16cd1145b77bbeb232a2d54b937a4a3/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=40b4bc2da16cd1145b77bbeb232a2d54b937a4a3", "patch": "@@ -7316,6 +7316,8 @@ package body Exp_Ch6 is\n    ------------------------------\n \n    procedure Insert_Post_Call_Actions (N : Node_Id; Post_Call : List_Id) is\n+      Context : constant Node_Id := Parent (N);\n+\n    begin\n       if Is_Empty_List (Post_Call) then\n          return;\n@@ -7326,7 +7328,7 @@ package body Exp_Ch6 is\n       --  call or indexing, i.e. an expression context as well.\n \n       if not Is_List_Member (N)\n-        or else Nkind_In (Parent (N), N_Function_Call, N_Indexed_Component)\n+        or else Nkind_In (Context, N_Function_Call, N_Indexed_Component)\n       then\n          --  In Ada 2012 the call may be a function call in an expression\n          --  (since OUT and IN OUT parameters are now allowed for such calls).\n@@ -7402,23 +7404,27 @@ package body Exp_Ch6 is\n          --  corresponding statement list.\n \n          else\n-            declare\n-               P : Node_Id;\n-\n-            begin\n-               P := Parent (N);\n-               pragma Assert (Nkind_In (P, N_Entry_Call_Alternative,\n-                                           N_Triggering_Alternative));\n+            pragma Assert (Nkind_In (Context, N_Entry_Call_Alternative,\n+                                              N_Triggering_Alternative));\n \n-               if Is_Non_Empty_List (Statements (P)) then\n-                  Insert_List_Before_And_Analyze\n-                    (First (Statements (P)), Post_Call);\n-               else\n-                  Set_Statements (P, Post_Call);\n-               end if;\n-            end;\n+            if Is_Non_Empty_List (Statements (Context)) then\n+               Insert_List_Before_And_Analyze\n+                 (First (Statements (Context)), Post_Call);\n+            else\n+               Set_Statements (Context, Post_Call);\n+            end if;\n          end if;\n \n+      --  A procedure call is always part of a declarative or statement list,\n+      --  however a function call may appear nested within a construct. Most\n+      --  cases of function call nesting are handled in the special case above.\n+      --  The only exception is when the function call acts as an actual in a\n+      --  procedure call. In this case the function call is in a list, but the\n+      --  post-call actions must be inserted after the procedure call.\n+\n+      elsif Nkind (Context) = N_Procedure_Call_Statement then\n+         Insert_Actions_After (Context, Post_Call);\n+\n       --  Otherwise, normal case where N is in a statement sequence, just put\n       --  the post-call stuff after the call statement.\n "}, {"sha": "9c48644b42bf2d43aa74b3e6260e73ab33f33e20", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40b4bc2da16cd1145b77bbeb232a2d54b937a4a3/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40b4bc2da16cd1145b77bbeb232a2d54b937a4a3/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=40b4bc2da16cd1145b77bbeb232a2d54b937a4a3", "patch": "@@ -1175,7 +1175,7 @@ package body Freeze is\n \n       Comp_Byte_Aligned : Boolean;\n       pragma Warnings (Off, Comp_Byte_Aligned);\n-      --  Set for the record case, True if Comp starts on a byte boundary\n+      --  Set for the record case, True if Comp is aligned on byte boundaries\n       --  (in which case it is allowed to have different storage order).\n \n       Comp_SSO_Differs  : Boolean;\n@@ -1195,12 +1195,14 @@ package body Freeze is\n \n          else\n             --  If a component clause is present, check if the component starts\n-            --  on a storage element boundary. Otherwise conservatively assume\n-            --  it does so only in the case where the record is not packed.\n+            --  and ends on byte boundaries. Otherwise conservatively assume it\n+            --  does so only in the case where the record is not packed.\n \n             if Present (Component_Clause (Comp)) then\n                Comp_Byte_Aligned :=\n-                 Normalized_First_Bit (Comp) mod System_Storage_Unit = 0;\n+                 (Normalized_First_Bit (Comp) mod System_Storage_Unit = 0)\n+                   and then\n+                 (Esize (Comp) mod System_Storage_Unit = 0);\n             else\n                Comp_Byte_Aligned := not Is_Packed (Encl_Type);\n             end if;"}, {"sha": "4f2c1fd6c5505435000fcff58289111db64b9d71", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40b4bc2da16cd1145b77bbeb232a2d54b937a4a3/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40b4bc2da16cd1145b77bbeb232a2d54b937a4a3/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=40b4bc2da16cd1145b77bbeb232a2d54b937a4a3", "patch": "@@ -8621,6 +8621,14 @@ package body Sem_Ch4 is\n          Actuals : List_Id;\n \n       begin\n+         --  Obj may already have been rewritten if it involves an implicit\n+         --  dereference (e.g. if it is an access to a limited view). Preserve\n+         --  a link to the original node for ASIS use.\n+\n+         if not Comes_From_Source (Obj) then\n+            Set_Original_Node (Dummy, Original_Node (Obj));\n+         end if;\n+\n          --  Common case covering 1) Call to a procedure and 2) Call to a\n          --  function that has some additional actuals.\n "}]}