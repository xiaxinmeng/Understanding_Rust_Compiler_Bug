{"sha": "4cf6b06cb5b02c053738e2975e3b7a4b3c577401", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGNmNmIwNmNiNWIwMmMwNTM3MzhlMjk3NWUzYjdhNGIzYzU3NzQwMQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-04-08T13:30:16Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-04-08T13:30:16Z"}, "message": "c++: Further fix for -fsanitize=vptr [PR94325]\n\nFor -fsanitize=vptr, we insert a NULL store into the vptr instead of just\nadding a CLOBBER of this.  build_clobber_this makes the CLOBBER conditional\non in_charge (implicit) parameter whenever CLASSTYPE_VBASECLASSES, but when\nadding this conditionalization to the -fsanitize=vptr code in PR87095,\nI wanted it to catch some more cases when the class has CLASSTYPE_VBASECLASSES,\nbut the vptr is still not shared with something else, otherwise the\nsanitization would be less effective.\nThe following testcase shows that the chosen test that CLASSTYPE_PRIMARY_BINFO\nis non-NULL and has BINFO_VIRTUAL_P set wasn't sufficient,\nthe D class has still sizeof(D) == sizeof(void*) and thus contains just\na single vptr, but while in B::~B() this results in the vptr not being\ncleared, in C::~C() this condition isn't true, as CLASSTYPE_PRIMARY_BINFO\nin that case is B and is not BINFO_VIRTUAL_P, so it clears the vptr, but the\nD::~D() dtor after invoking C::~C() invokes A::~A() with an already cleared\nvptr, which is then reported.\nThe following patch is just a shot in the dark, keep looking through\nCLASSTYPE_PRIMARY_BINFO until we find BINFO_VIRTUAL_P, but it works on the\nexisting testcase as well as this new one.\n\n2020-04-08  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR c++/94325\n\t* decl.c (begin_destructor_body): For CLASSTYPE_VBASECLASSES class\n\tdtors, if CLASSTYPE_PRIMARY_BINFO is non-NULL, but not BINFO_VIRTUAL_P,\n\tlook at CLASSTYPE_PRIMARY_BINFO of its BINFO_TYPE if it is not\n\tBINFO_VIRTUAL_P, and so on.\n\n\t* g++.dg/ubsan/vptr-15.C: New test.", "tree": {"sha": "fae593ee7c1c11e618e49416f2d22e5a1cae1231", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fae593ee7c1c11e618e49416f2d22e5a1cae1231"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4cf6b06cb5b02c053738e2975e3b7a4b3c577401", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4cf6b06cb5b02c053738e2975e3b7a4b3c577401", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4cf6b06cb5b02c053738e2975e3b7a4b3c577401", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4cf6b06cb5b02c053738e2975e3b7a4b3c577401/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a6479aa4c0532ee9ad1f098b4e82de9dc684e036", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6479aa4c0532ee9ad1f098b4e82de9dc684e036", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6479aa4c0532ee9ad1f098b4e82de9dc684e036"}], "stats": {"total": 47, "additions": 40, "deletions": 7}, "files": [{"sha": "23fb6ad0ff545651830c362fe1c7af48190d7270", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4cf6b06cb5b02c053738e2975e3b7a4b3c577401/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4cf6b06cb5b02c053738e2975e3b7a4b3c577401/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=4cf6b06cb5b02c053738e2975e3b7a4b3c577401", "patch": "@@ -1,3 +1,11 @@\n+2020-04-08  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/94325\n+\t* decl.c (begin_destructor_body): For CLASSTYPE_VBASECLASSES class\n+\tdtors, if CLASSTYPE_PRIMARY_BINFO is non-NULL, but not BINFO_VIRTUAL_P,\n+\tlook at CLASSTYPE_PRIMARY_BINFO of its BINFO_TYPE if it is not\n+\tBINFO_VIRTUAL_P, and so on.\n+\n 2020-04-08  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/94478 - ICE with defaulted comparison operator"}, {"sha": "0ea4b320d8654f051c5d21fc16ab0f6951d16021", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4cf6b06cb5b02c053738e2975e3b7a4b3c577401/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4cf6b06cb5b02c053738e2975e3b7a4b3c577401/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=4cf6b06cb5b02c053738e2975e3b7a4b3c577401", "patch": "@@ -16663,14 +16663,20 @@ begin_destructor_body (void)\n \t    /* If the vptr is shared with some virtual nearly empty base,\n \t       don't clear it if not in charge, the dtor of the virtual\n \t       nearly empty base will do that later.  */\n-\t    if (CLASSTYPE_VBASECLASSES (current_class_type)\n-\t\t&& CLASSTYPE_PRIMARY_BINFO (current_class_type)\n-\t\t&& BINFO_VIRTUAL_P\n-\t\t\t  (CLASSTYPE_PRIMARY_BINFO (current_class_type)))\n+\t    if (CLASSTYPE_VBASECLASSES (current_class_type))\n \t      {\n-\t\tstmt = convert_to_void (stmt, ICV_STATEMENT,\n-\t\t\t\t\ttf_warning_or_error);\n-\t\tstmt = build_if_in_charge (stmt);\n+\t\ttree c = current_class_type;\n+\t\twhile (CLASSTYPE_PRIMARY_BINFO (c))\n+\t\t  {\n+\t\t    if (BINFO_VIRTUAL_P (CLASSTYPE_PRIMARY_BINFO (c)))\n+\t\t      {\n+\t\t\tstmt = convert_to_void (stmt, ICV_STATEMENT,\n+\t\t\t\t\t\ttf_warning_or_error);\n+\t\t\tstmt = build_if_in_charge (stmt);\n+\t\t\tbreak;\n+\t\t      }\n+\t\t    c = BINFO_TYPE (CLASSTYPE_PRIMARY_BINFO (c));\n+\t\t  }\n \t      }\n \t    finish_decl_cleanup (NULL_TREE, stmt);\n \t  }"}, {"sha": "9627b2900fabef687c29ff128c5f40d2d5bb5116", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4cf6b06cb5b02c053738e2975e3b7a4b3c577401/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4cf6b06cb5b02c053738e2975e3b7a4b3c577401/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4cf6b06cb5b02c053738e2975e3b7a4b3c577401", "patch": "@@ -1,3 +1,8 @@\n+2020-04-08  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/94325\n+\t* g++.dg/ubsan/vptr-15.C: New test.\n+\n 2020-04-08  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/94478 - ICE with defaulted comparison operator"}, {"sha": "f6f36a58bab7db2c0fa7aa7f4cd143864f4cb1ab", "filename": "gcc/testsuite/g++.dg/ubsan/vptr-15.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4cf6b06cb5b02c053738e2975e3b7a4b3c577401/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fubsan%2Fvptr-15.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4cf6b06cb5b02c053738e2975e3b7a4b3c577401/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fubsan%2Fvptr-15.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fubsan%2Fvptr-15.C?ref=4cf6b06cb5b02c053738e2975e3b7a4b3c577401", "patch": "@@ -0,0 +1,14 @@\n+// PR c++/94325\n+// { dg-do run { target c++11 } }\n+// { dg-options \"-fsanitize=vptr -fno-sanitize-recover=vptr\" }\n+\n+struct A { virtual ~A () = default; };\n+struct B : public virtual A {};\n+struct C : public B {};\n+struct D : public C {};\n+\n+int\n+main ()\n+{\n+  D a;\n+}"}]}