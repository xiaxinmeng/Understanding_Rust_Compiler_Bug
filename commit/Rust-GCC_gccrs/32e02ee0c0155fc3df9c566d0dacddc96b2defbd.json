{"sha": "32e02ee0c0155fc3df9c566d0dacddc96b2defbd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzJlMDJlZTBjMDE1NWZjM2RmOWM1NjZkMGRhY2RkYzk2YjJkZWZiZA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@yorick.cygnus.com", "date": "1998-02-25T10:07:07Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-02-25T10:07:07Z"}, "message": "typeck.c (get_delta_difference): Give hard error for conversion from virtual base.\n\n\t* typeck.c (get_delta_difference): Give hard error for conversion\n\tfrom virtual base.\n\t* cp-tree.h: Tweak formatting.\n\nFrom-SVN: r18229", "tree": {"sha": "9249db6859211b3367f4ede346e81ce1a0c90a62", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9249db6859211b3367f4ede346e81ce1a0c90a62"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/32e02ee0c0155fc3df9c566d0dacddc96b2defbd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32e02ee0c0155fc3df9c566d0dacddc96b2defbd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/32e02ee0c0155fc3df9c566d0dacddc96b2defbd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32e02ee0c0155fc3df9c566d0dacddc96b2defbd/comments", "author": null, "committer": null, "parents": [{"sha": "75cf27d4c9102fc5c92782ba12d2daef8777aea2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75cf27d4c9102fc5c92782ba12d2daef8777aea2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75cf27d4c9102fc5c92782ba12d2daef8777aea2"}], "stats": {"total": 48, "additions": 25, "deletions": 23}, "files": [{"sha": "76fb2d65bd80bdf07cc086ebb7e7dc397da22e03", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32e02ee0c0155fc3df9c566d0dacddc96b2defbd/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32e02ee0c0155fc3df9c566d0dacddc96b2defbd/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=32e02ee0c0155fc3df9c566d0dacddc96b2defbd", "patch": "@@ -1,3 +1,10 @@\n+Wed Feb 25 09:51:29 1998  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* typeck.c (get_delta_difference): Give hard error for conversion\n+\tfrom virtual base.\n+\n+\t* cp-tree.h: Tweak formatting.\n+\n Wed Feb 25 00:35:33 1998  Jason Merrill  <jason@yorick.cygnus.com>\n \n \t* decl.c (push_namespace): Handle redeclaration error."}, {"sha": "b6f7bc7f9ed099b116d712f954efbbc48e82e577", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32e02ee0c0155fc3df9c566d0dacddc96b2defbd/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32e02ee0c0155fc3df9c566d0dacddc96b2defbd/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=32e02ee0c0155fc3df9c566d0dacddc96b2defbd", "patch": "@@ -29,7 +29,7 @@ Boston, MA 02111-1307, USA.  */\n struct lang_identifier\n {\n   struct tree_identifier ignore;\n-  tree global_value, local_value;\n+  tree namespace_bindings, local_value;\n   tree class_value;\n   tree class_template_info;\n   struct lang_id2 *x;\n@@ -58,8 +58,8 @@ typedef struct\n   tree decl;\n } template_parm_index;\n \n-#define BINDING_SCOPE(NODE)    (((struct tree_binding*)NODE)->scope)\n-#define BINDING_VALUE(NODE)   (((struct tree_binding*)NODE)->value)\n+#define BINDING_SCOPE(NODE)\t(((struct tree_binding*)NODE)->scope)\n+#define BINDING_VALUE(NODE)\t(((struct tree_binding*)NODE)->value)\n #define NAMESPACE_BINDING(ID,NS) BINDING_VALUE (binding_for_name (ID, NS))\n #define IDENTIFIER_GLOBAL_VALUE(NODE) \\\n   NAMESPACE_BINDING (NODE, global_namespace)\n@@ -80,7 +80,7 @@ struct tree_binding\n /* Macros for access to language-specific slots in an identifier.  */\n \n #define IDENTIFIER_NAMESPACE_BINDINGS(NODE)\t\\\n-  (((struct lang_identifier *)(NODE))->global_value)\n+  (((struct lang_identifier *)(NODE))->namespace_bindings)\n #define IDENTIFIER_CLASS_VALUE(NODE)\t\\\n   (((struct lang_identifier *)(NODE))->class_value)\n #define IDENTIFIER_LOCAL_VALUE(NODE)\t\\"}, {"sha": "fa5ee5a2a1bc4c37d1c1a837790759dc1dc15c27", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 14, "deletions": 19, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32e02ee0c0155fc3df9c566d0dacddc96b2defbd/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32e02ee0c0155fc3df9c566d0dacddc96b2defbd/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=32e02ee0c0155fc3df9c566d0dacddc96b2defbd", "patch": "@@ -6304,35 +6304,30 @@ get_delta_difference (from, to, force)\n \t  return delta;\n \t}\n       binfo = get_binfo (to, from, 1);\n-      if (binfo == error_mark_node)\n-\t{\n-\t  if (!force)\n-\t    error (\"   in pointer to member conversion\");\n-\t  return delta;\n-\t}\n-      if (binfo == 0)\n-\t{\n-\t  if (!force)\n-\t    cp_error (\"cannot convert pointer to member of type %T to unrelated pointer to member of type %T\", from, to);\n-\t  return delta;\n-\t}\n-      if (TREE_VIA_VIRTUAL (binfo))\n-\t{\n-\t  binfo = binfo_member (BINFO_TYPE (binfo),\n-\t\t\t\tCLASSTYPE_VBASECLASSES (from));\n-\t  warning (\"pointer to member conversion to virtual base class will only work if you are very careful\");\n-\t}\n+      if (binfo == 0 || binfo == error_mark_node || TREE_VIA_VIRTUAL (binfo))\n+\treturn delta;\n       delta = BINFO_OFFSET (binfo);\n       delta = cp_convert (ptrdiff_type_node, delta);\n       \n       return build_binary_op (MINUS_EXPR,\n \t\t\t      integer_zero_node,\n \t\t\t      delta, 1);\n     }\n+\n   if (TREE_VIA_VIRTUAL (binfo))\n     {\n-      warning (\"pointer to member conversion from virtual base class will only work if you are very careful\");\n+      if (force)\n+\t{\n+\t  cp_warning (\"pointer to member cast from virtual base `%T'\",\n+\t\t      BINFO_TYPE (binfo));\n+\t  warning (\"  will only work if you are very careful\");\n+\t}\n+      else\n+\tcp_error (\"pointer to member conversion from virtual base `%T'\",\n+\t\t  BINFO_TYPE (binfo));\n+      return delta;\n     }\n+\n   return BINFO_OFFSET (binfo);\n }\n "}]}