{"sha": "6b5629db5a50718cac6f09baccf5c78c08beafc2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmI1NjI5ZGI1YTUwNzE4Y2FjNmYwOWJhY2NmNWM3OGMwOGJlYWZjMg==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2009-03-01T21:30:24Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2009-03-01T21:30:24Z"}, "message": "i386.h (CONDITIONAL_REGISTER_USAGE): Do not shadow \"i\" variable.\n\n\t* config/i386/i386.h (CONDITIONAL_REGISTER_USAGE): Do not\n\tshadow \"i\" variable.\n\nFrom-SVN: r144532", "tree": {"sha": "360bd7b6120330a69db7fdc485ebe4a002860464", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/360bd7b6120330a69db7fdc485ebe4a002860464"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6b5629db5a50718cac6f09baccf5c78c08beafc2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b5629db5a50718cac6f09baccf5c78c08beafc2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b5629db5a50718cac6f09baccf5c78c08beafc2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b5629db5a50718cac6f09baccf5c78c08beafc2/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "14e5b28507bfb7b6e17ff390db4ca0cbaa6f78ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14e5b28507bfb7b6e17ff390db4ca0cbaa6f78ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14e5b28507bfb7b6e17ff390db4ca0cbaa6f78ee"}], "stats": {"total": 48, "additions": 22, "deletions": 26}, "files": [{"sha": "213a5dc7e0085cec15842547738866072d70cdd5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b5629db5a50718cac6f09baccf5c78c08beafc2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b5629db5a50718cac6f09baccf5c78c08beafc2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6b5629db5a50718cac6f09baccf5c78c08beafc2", "patch": "@@ -1,3 +1,8 @@\n+2009-03-01  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.h (CONDITIONAL_REGISTER_USAGE): Do not\n+\tshadow \"i\" variable.\n+\n 2009-03-01  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/39331"}, {"sha": "aa46097f39ef29d7cb48e6b063de8aba007d2ba9", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 17, "deletions": 26, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b5629db5a50718cac6f09baccf5c78c08beafc2/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b5629db5a50718cac6f09baccf5c78c08beafc2/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=6b5629db5a50718cac6f09baccf5c78c08beafc2", "patch": "@@ -934,46 +934,37 @@ do {\t\t\t\t\t\t\t\t\t\\\n     j = PIC_OFFSET_TABLE_REGNUM;\t\t\t\t\t\\\n     if (j != INVALID_REGNUM)\t\t\t\t\t\t\\\n       {\t\t\t\t\t\t\t\t\t\\\n-\tfixed_regs[j] = 1;\t\t\t\t\t\t\\\n-\tcall_used_regs[j] = 1;\t\t\t\t\t\t\\\n+\tfixed_regs[j] = call_used_regs[j] = 1;\t\t\t\t\\\n       }\t\t\t\t\t\t\t\t\t\\\n     if (TARGET_64BIT\t\t\t\t\t\t\t\\\n-        && ((cfun && cfun->machine->call_abi == MS_ABI)\t\t\t\\\n-            || (!cfun && DEFAULT_ABI == MS_ABI)))\t\t\t\\\n+\t&& ((cfun && cfun->machine->call_abi == MS_ABI)\t\t\t\\\n+\t    || (!cfun && DEFAULT_ABI == MS_ABI)))\t\t\t\\\n       {\t\t\t\t\t\t\t\t\t\\\n-        int i;\t\t\t\t\t\t\t\t\\\n-        call_used_regs[4 /*RSI*/] = 0;                                  \\\n-        call_used_regs[5 /*RDI*/] = 0;                                  \\\n+\tcall_used_regs[4 /*RSI*/] = 0;\t\t\t\t\t\\\n+\tcall_used_regs[5 /*RDI*/] = 0;\t\t\t\t\t\\\n \tfor (i = 0; i < 8; i++)\t\t\t\t\t\t\\\n \t  call_used_regs[45+i] = 0;\t\t\t\t\t\\\n-\tcall_used_regs[27] = call_used_regs[28] = 0;\t\t\t\\\n+\tcall_used_regs[27 /*XMM6*/] = 0;\t\t\t\t\\\n+\tcall_used_regs[28 /*XMM7*/] = 0;\t\t\t\t\\\n       }\t\t\t\t\t\t\t\t\t\\\n     if (! TARGET_MMX)\t\t\t\t\t\t\t\\\n-      {\t\t\t\t\t\t\t\t\t\\\n-\tint i;\t\t\t\t\t\t\t\t\\\n-        for (i = 0; i < FIRST_PSEUDO_REGISTER; i++)\t\t\t\\\n-          if (TEST_HARD_REG_BIT (reg_class_contents[(int)MMX_REGS], i))\t\\\n-\t    fixed_regs[i] = call_used_regs[i] = 1, reg_names[i] = \"\";\t\\\n-      }\t\t\t\t\t\t\t\t\t\\\n+      for (i = 0; i < FIRST_PSEUDO_REGISTER; i++)\t\t\t\\\n+\tif (TEST_HARD_REG_BIT (reg_class_contents[(int)MMX_REGS], i))\t\\\n+\t  fixed_regs[i] = call_used_regs[i] = 1, reg_names[i] = \"\";\t\\\n     if (! TARGET_SSE)\t\t\t\t\t\t\t\\\n+      for (i = 0; i < FIRST_PSEUDO_REGISTER; i++)\t\t\t\\\n+\tif (TEST_HARD_REG_BIT (reg_class_contents[(int)SSE_REGS], i))\t\\\n+\t  fixed_regs[i] = call_used_regs[i] = 1, reg_names[i] = \"\";\t\\\n+    if (! (TARGET_80387 || TARGET_FLOAT_RETURNS_IN_80387))\t\t\\\n       {\t\t\t\t\t\t\t\t\t\\\n-\tint i;\t\t\t\t\t\t\t\t\\\n-        for (i = 0; i < FIRST_PSEUDO_REGISTER; i++)\t\t\t\\\n-          if (TEST_HARD_REG_BIT (reg_class_contents[(int)SSE_REGS], i))\t\\\n-\t    fixed_regs[i] = call_used_regs[i] = 1, reg_names[i] = \"\";\t\\\n-      }\t\t\t\t\t\t\t\t\t\\\n-    if (! TARGET_80387 && ! TARGET_FLOAT_RETURNS_IN_80387)\t\t\\\n-      {\t\t\t\t\t\t\t\t\t\\\n-\tint i;\t\t\t\t\t\t\t\t\\\n \tHARD_REG_SET x;\t\t\t\t\t\t\t\\\n-        COPY_HARD_REG_SET (x, reg_class_contents[(int)FLOAT_REGS]);\t\\\n-        for (i = 0; i < FIRST_PSEUDO_REGISTER; i++)\t\t\t\\\n-          if (TEST_HARD_REG_BIT (x, i)) \t\t\t\t\\\n+\tCOPY_HARD_REG_SET (x, reg_class_contents[(int)FLOAT_REGS]);\t\\\n+\tfor (i = 0; i < FIRST_PSEUDO_REGISTER; i++)\t\t\t\\\n+\t  if (TEST_HARD_REG_BIT (x, i)) \t\t\t\t\\\n \t    fixed_regs[i] = call_used_regs[i] = 1, reg_names[i] = \"\";\t\\\n       }\t\t\t\t\t\t\t\t\t\\\n     if (! TARGET_64BIT)\t\t\t\t\t\t\t\\\n       {\t\t\t\t\t\t\t\t\t\\\n-\tint i;\t\t\t\t\t\t\t\t\\\n \tfor (i = FIRST_REX_INT_REG; i <= LAST_REX_INT_REG; i++)\t\t\\\n \t  reg_names[i] = \"\";\t\t\t\t\t\t\\\n \tfor (i = FIRST_REX_SSE_REG; i <= LAST_REX_SSE_REG; i++)\t\t\\"}]}