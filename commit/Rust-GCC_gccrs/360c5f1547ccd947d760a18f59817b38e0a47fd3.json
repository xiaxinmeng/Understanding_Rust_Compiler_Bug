{"sha": "360c5f1547ccd947d760a18f59817b38e0a47fd3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzYwYzVmMTU0N2NjZDk0N2Q3NjBhMThmNTk4MTdiMzhlMGE0N2ZkMw==", "commit": {"author": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "1998-08-27T20:51:39Z"}, "committer": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "1998-08-27T20:51:39Z"}, "message": "Migrate from devo/gcc/ch.\n\nFrom-SVN: r22037", "tree": {"sha": "846432ba316a1668f9fe96827ab9ce82c2e0cf15", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/846432ba316a1668f9fe96827ab9ce82c2e0cf15"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/360c5f1547ccd947d760a18f59817b38e0a47fd3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/360c5f1547ccd947d760a18f59817b38e0a47fd3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/360c5f1547ccd947d760a18f59817b38e0a47fd3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/360c5f1547ccd947d760a18f59817b38e0a47fd3/comments", "author": null, "committer": null, "parents": [{"sha": "3a575f253dce5cdd3ef73d6e2e6b9890fa182849", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a575f253dce5cdd3ef73d6e2e6b9890fa182849", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a575f253dce5cdd3ef73d6e2e6b9890fa182849"}], "stats": {"total": 1038, "additions": 1038, "deletions": 0}, "files": [{"sha": "00f3d6acd9f26a9f2550c0e88e3634e84af024be", "filename": "gcc/ch/Makefile.in", "status": "added", "additions": 322, "deletions": 0, "changes": 322, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/360c5f1547ccd947d760a18f59817b38e0a47fd3/gcc%2Fch%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/360c5f1547ccd947d760a18f59817b38e0a47fd3/gcc%2Fch%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fch%2FMakefile.in?ref=360c5f1547ccd947d760a18f59817b38e0a47fd3", "patch": "@@ -0,0 +1,322 @@\n+# Makefile for GNU CHILL compiler.\n+#   Copyright (C) 1987, 88, 90, 91, 92, 93, 1994 Free Software Foundation, Inc.\n+\n+#This file is part of GNU CC.\n+\n+#GNU CC is free software; you can redistribute it and/or modify\n+#it under the terms of the GNU General Public License as published by\n+#the Free Software Foundation; either version 2, or (at your option)\n+#any later version.\n+\n+#GNU CC is distributed in the hope that it will be useful,\n+#but WITHOUT ANY WARRANTY; without even the implied warranty of\n+#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+#GNU General Public License for more details.\n+\n+#You should have received a copy of the GNU General Public License\n+#along with GNU CC; see the file COPYING.  If not, write to\n+#the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.\n+\n+# The makefile built from this file lives in the language subdirectory.\n+# It's purpose is to provide support for:\n+#\n+# 1) recursion where necessary, and only then (building .o's), and\n+# 2) building and debugging cc1 from the language subdirectory, and\n+# 3) nothing else.\n+#\n+# The parent makefile handles all other chores, with help from the\n+# language makefile fragment, of course.\n+#\n+# The targets for external use are:\n+# all, TAGS, ???mostlyclean, ???clean.\n+\n+# Suppress smart makes who think they know how to automake Yacc files\n+.y.c:\n+\n+\n+# Variables that exist for you to override.\n+# See below for how to change them for certain systems.\n+\n+ALLOCA =\n+\n+# Various ways of specifying flags for compilations:  \n+# CFLAGS is for the user to override to, e.g., do a bootstrap with -O2.\n+# BOOT_CFLAGS is the value of CFLAGS to pass\n+# to the stage2 and stage3 compilations\n+# XCFLAGS is used for most compilations but not when using the GCC just built.\n+XCFLAGS =\n+CFLAGS = -g\n+BOOT_CFLAGS = -O $(CFLAGS)\n+# These exists to be overridden by the x-* and t-* files, respectively.\n+X_CFLAGS =\n+T_CFLAGS =\n+\n+X_CPPFLAGS =\n+T_CPPFLAGS =\n+\n+CC = cc\n+AR = ar\n+AR_FLAGS = rc\n+SHELL = /bin/sh\n+MAKEINFO = makeinfo\n+TEXI2DVI = texi2dvi\n+\n+# Define this as & to perform parallel make on a Sequent.\n+# Note that this has some bugs, and it seems currently necessary \n+# to compile all the gen* files first by hand to avoid erroneous results.\n+P =\n+\n+# This is used in the definition of SUBDIR_USE_ALLOCA.\n+# ??? Perhaps it would be better if it just looked for *gcc*.\n+OLDCC = cc\n+\n+# This is used instead of ALL_CFLAGS when compiling with GCC_FOR_TARGET.\n+# It omits XCFLAGS, and specifies -B./.\n+# It also specifies -B$(tooldir)/ to find as and ld for a cross compiler.\n+GCC_CFLAGS=$(INTERNAL_CFLAGS) $(X_CFLAGS) $(T_CFLAGS) $(CFLAGS)\n+\n+# Tools to use when building a cross-compiler.\n+# These are used because `configure' appends `cross-make'\n+# to the makefile when making a cross-compiler.\n+\n+# CYGNUS LOCAL: we don't use cross-make.  Instead we use the tools\n+# from the build tree, if they are available.\n+# program_transform_name and objdir are set by configure.in.\n+program_transform_name =\n+objdir = .\n+\n+target= ... `configure' substitutes actual target name here.\n+xmake_file= ... `configure' substitutes actual x- file name here.\n+tmake_file= ... `configure' substitutes actual t- file name here.\n+#version=`sed -e 's/.*\\\"\\([^ \\\"]*\\)[ \\\"].*/\\1/' < $(srcdir)/version.c`\n+#mainversion=`sed -e 's/.*\\\"\\([0-9]*\\.[0-9]*\\).*/\\1/' < $(srcdir)/version.c`\n+\n+# Directory where sources are, from where we are.\n+srcdir = .\n+\n+# CYGNUS LOCAL\n+# Directory where texinfo.tex lives\n+texidir = $(srcdir)/../../texinfo\n+\n+# Additional system libraries to link with.\n+CLIB=\n+\n+# Change this to a null string if obstacks are installed in the\n+# system library.\n+OBSTACK=obstack.o\n+\n+# Choose the real default target.\n+ALL=all\n+\n+# End of variables for you to override.\n+\n+# Definition of `all' is here so that new rules inserted by sed\n+# do not specify the default target.\n+all: all.indirect\n+\n+# This tells GNU Make version 3 not to put all variables in the environment.\n+.NOEXPORT:\n+\n+# sed inserts variable overrides after the following line.\n+####target overrides\n+####host overrides\n+####cross overrides\n+####build overrides\n+####site overrides\n+\f\n+# Now figure out from those variables how to compile and link.\n+\n+all.indirect: Makefile compiler\n+\n+# IN_GCC tells obstack.h that we are using gcc's <stddef.h> file.\n+INTERNAL_CFLAGS = $(CROSS) -DIN_GCC\n+\n+# This is the variable actually used when we compile.\n+ALL_CFLAGS = $(INTERNAL_CFLAGS) $(X_CFLAGS) $(T_CFLAGS) $(CFLAGS) $(XCFLAGS)\n+\n+# Likewise.\n+ALL_CPPFLAGS = $(CPPFLAGS) $(X_CPPFLAGS) $(T_CPPFLAGS)\n+\n+# CYGNUS LOCAL: SUBDIR_USE_ALLOCA is different from FSF.\n+# Even if ALLOCA is set, don't use it if compiling with GCC.\n+\n+SUBDIR_OBSTACK = `if [ x$(OBSTACK) != x ]; then echo ../$(OBSTACK); else true; fi`\n+#SUBDIR_USE_ALLOCA = `case \"${CC}\" in \"${OLDCC}\") if [ x$(ALLOCA) != x ]; then echo ../$(ALLOCA); else true; fi ;; esac`\n+SUBDIR_USE_ALLOCA = `if [ x$(ALLOCA) != x ]; then echo ../$(ALLOCA); else true; fi`\n+SUBDIR_MALLOC = `if [ x$(MALLOC) != x ]; then echo ../$(MALLOC); else true; fi`\n+\n+# How to link with both our special library facilities\n+# and the system's installed libraries.\n+LIBS = $(SUBDIR_OBSTACK) $(SUBDIR_USE_ALLOCA) $(SUBDIR_MALLOC) $(CLIB)\n+\n+# Specify the directories to be searched for header files.\n+# Both . and srcdir are used, in that order,\n+# so that tm.h and config.h will be found in the compilation\n+# subdirectory rather than in the source directory.\n+INCLUDES = -I. -I.. -I$(srcdir) -I$(srcdir)/.. -I$(srcdir)/../config\n+\n+# Flags to pass to recursive makes.\n+# ??? $(CC) may need some work to handle stage[123].\n+# ??? The choices here will need some experimenting with.\n+FLAGS_TO_PASS = \\\n+\t\"AR_FLAGS=$(AR_FLAGS)\" \\\n+\t\"AR_FOR_TARGET=$(AR_FOR_TARGET)\" \\\n+\t\"BISON=$(BISON)\" \\\n+\t\"BISONFLAGS=$(BISONFLAGS)\" \\\n+\t\"CC=$(CC)\" \\\n+\t\"CFLAGS=$(CFLAGS)\" \\\n+\t\"GCC_FOR_TARGET=$(CC_FOR_TARGET)\" \\\n+\t\"LDFLAGS=$(LDFLAGS)\" \\\n+\t\"LEX=$(LEX)\" \\\n+\t\"LEXFLAGS=$(LEXFLAGS)\" \\\n+\t\"MAKEINFO=$(MAKEINFO)\" \\\n+\t\"MAKEINFOFLAGS=$(MAKEINFOFLAGS)\" \\\n+\t\"RANLIB_FOR_TARGET=$(RANLIB_FOR_TARGET)\" \\\n+\t\"RANLIB_TEST_FOR_TARGET=$(RANLIB_TEST_FOR_TARGET)\" \\\n+\t\"SHELL=$(SHELL)\" \\\n+\t\"exec_prefix=$(exec_prefix)\" \\\n+\t\"prefix=$(prefix)\" \\\n+\t\"tooldir=$(tooldir)\" \\\n+\t\"bindir=$(bindir)\" \\\n+\t\"libsubdir=$(libsubdir)\"\n+\n+# Always use -I$(srcdir)/config when compiling.\n+.c.o:\n+\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $<\n+\n+# This tells GNU make version 3 not to export all the variables\n+# defined in this file into the environment.\n+.NOEXPORT:\n+\f\n+# Lists of files for various purposes.\n+\n+# Language-specific object files for CHILL\n+\n+#C_OBJS = ../cpplib.o ../cppexp.o ../cpphash.o ../cpperror.o\n+\n+CHILL_OBJS = parse.o actions.o except.o grant.o lang.o \\\n+   tree.o lex.o decl.o typeck.o convert.o expr.o loop.o \\\n+   tasking.o timing.o inout.o satisfy.o ch-version.o\n+\n+# Language-independent object files.\n+OBJS = `cat ../stamp-objlist`\n+OBJDEPS = ../stamp-objlist\n+\n+compiler: ../chill ../cc1chill\n+\tcd runtime; $(MAKE) $(FLAGS_TO_PASS) CC=\"$(CC)\" all\n+\n+../cc1chill: $(P) $(CHILL_OBJS) $(OBJDEPS) $(LIBDEPS)\n+\t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ $(CHILL_OBJS) \\\n+\t      $(OBJS) $(C_OBJS) $(LIBS)\n+\n+# This executable is used in the CHILL regression \n+# test script\n+utils/printf : $(srcdir)/utils/printf.c\n+\t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ $<\n+\n+#\n+# This is the top-level trigger for a CHILL regression test.\n+# It also builds those tools needed for CHILL regression testing.\n+#\n+check: ../cc1chill utils/printf\n+\tcd ..; $(MAKE) $(FLAGS_TO_PASS) xgcc gcov cpp cc1 ld\n+\tcd runtime; make libchill.a\n+\t$(srcdir)/regression.sh -d -p\n+\n+clean-tests:\n+\tcd testsuite/execute;  $(MAKE) clean\n+\tcd testsuite/execute/oe;  $(MAKE) clean\n+\tcd testsuite/compile/elektra;  $(MAKE) clean\n+\tcd testsuite/compile/votrics;  $(MAKE) clean\n+\tcd testsuite/compile;  $(MAKE) clean\n+\tcd testsuite/noncompile;  $(MAKE) clean\n+\tcd testsuite/examples;  $(MAKE) clean\n+\n+mostlyclean:\n+\ttest -d testsuite && $(MAKE) clean-tests\n+\trm -f *.o\n+\n+clean:  mostlyclean\n+\tcd runtime;  $(MAKE) clean\n+\n+\f\n+Makefile: $(srcdir)/Makefile.in $(srcdir)/../configure\n+\tcd ..; $(SHELL) config.status\n+\n+native: config.status ../cc1chill ../chill # runtime/libchill.a\n+\f\n+# Compiling object files from source files.\n+\n+# Note that dependencies on obstack.h are not written\n+# because that file is not part of GCC.\n+\n+# CHILL language specific files.\n+\n+RTL_H = $(srcdir)/../rtl.h $(srcdir)/../rtl.def \\\n+\t$(srcdir)/../machmode.h $(srcdir)/../machmode.def\n+TREE_H = $(srcdir)/../tree.h $(srcdir)/../real.h $(srcdir)/../tree.def \\\n+\t$(srcdir)/../machmode.h $(srcdir)/../machmode.def\n+CHILL_TREE_H = $(TREE_H) ch-tree.h ch-tree.def\n+\n+# hash.h really depends on $(srcdir)/gperf.\n+# But this would screw things for people that don't have gperf,\n+# if gperf got touched, say.\n+# Thus you have to remove hash.h to force it to be re-made.\n+# Note: CHILL requires two sets of keywords, one all uppercase and\n+# one all lowercase.  The hash table ends up with both sets in it.\n+$(srcdir)/hash.h:\n+\tsed -e '1,/^%%/d' < $(srcdir)/gperf | \\\n+\t  sed '/^[^a-zA-Z]/d' | tr \"[a-z]\" \"[A-Z]\" > gperf.tmp\n+\tgawk '{ printf (\"s/^%s,/%s,/\\n\", $$1, toupper ($$1)) }' < gperf.tmp > sed.tmp\n+\tsed -f sed.tmp < gperf.tmp > gperf.tmp2\n+\tcat $(srcdir)/gperf gperf.tmp2 > gperf.tmp\n+\tgperf -D -E -S1 -p -j1 -i 1 -g -o -t -k'*' gperf.tmp \\\n+          > $(srcdir)/hash.h\n+\t$(RM) gperf.tmp gperf.tmp2 sed.tmp\n+\n+actions.o : actions.c $(CONFIG_H) $(CHILL_TREE_H) actions.h $(RTL_H) \\\n+\t      lex.h $(srcdir)/../flags.h $(srcdir)/../obstack.h $(srcdir)/../input.h $(srcdir)/../expr.h ../insn-codes.h\n+convert.o : convert.c $(CONFIG_H) $(CHILL_TREE_H) $(srcdir)/../flags.h $(srcdir)/../tree.h\n+decl.o : decl.c $(CONFIG_H) $(CHILL_TREE_H) $(srcdir)/../flags.h lex.h\n+except.o : except.c $(CONFIG_H) $(srcdir)/../tree.h $(RTL_H) $(CHILL_TREE_H)\n+expr.o : expr.c $(CONFIG_H) $(RTL_H) $(CHILL_TREE_H) $(srcdir)/../flags.h \\\n+\t$(srcdir)/../expr.h ../insn-codes.h $(srcdir)/../tree.h lex.h\n+grant.o: grant.c $(CONFIG_H) $(CHILL_TREE_H) $(RTL_H) $(srcdir)/../flags.h $(srcdir)/../input.h \\\n+            lex.h actions.h $(srcdir)/../input.h\n+inout.o : inout.c $(CONFIG_H) $(CHILL_TREE_H) $(srcdir)/../flags.h $(srcdir)/../input.h\n+lang.o : lang.c $(CONFIG_H) $(CHILL_TREE_H) $(srcdir)/../input.h lex.h\n+lex.o : lex.c $(CONFIG_H) $(CHILL_TREE_H) $(RTL_H) $(srcdir)/../flags.h $(srcdir)/../input.h \\\n+           $(srcdir)/parse.h $(srcdir)/../obstack.h lex.h\n+lex.c: hash.h\n+loop.o : loop.c $(CONFIG_H) $(RTL_H) $(CHILL_TREE_H) lex.h ../flags.h \\\n+\t../input.h ../obstack.h ../tree.h\n+parse.o : parse.c $(CONFIG_H) $(CHILL_TREE_H) parse.h \\\n+\tlex.h actions.h tasking.h\n+satisfy.o : satisfy.c $(CONFIG_H) $(CHILL_TREE_H) ../tree.h ../flags.h lex.h\n+timing.o : timing.c $(CONFIG_H) $(CHILL_TREE_H) $(RTL_H) ../flags.h \\\n+               ../input.h ../obstack.h lex.h\n+tasking.o : tasking.c $(CONFIG_H) $(CHILL_TREE_H) $(RTL_H) ../flags.h \\\n+               ../input.h ../obstack.h lex.h\n+tree.o : tree.c $(CONFIG_H) $(CHILL_TREE_H)\n+typeck.o : typeck.c $(CONFIG_H) $(CHILL_TREE_H) ../insn-codes.h \\\n+\t$(srcdir)/../expr.h $(srcdir)/../flags.h lex.h\n+ch-version.o : ch-version.c\n+ch-version.c : Makefile\n+\techo 'char *gnuchill_version = \"$(GNUCHILL_VERSION)\";' > $@\n+\n+## This is ugly, but I don't want GNU make to put these variables in\n+## the environment.  Older makes will see this as a set of targets\n+## with no dependencies and no actions.\n+unexport CHILLFLAGS CHILL_LIB CHILL_FOR_TARGET :\n+\n+\f\n+# These exist for maintenance purposes.\n+\n+# Update the tags table.\n+TAGS: force\n+\tcd $(srcdir);\t\t\t\t\t\t\t\\\n+\tetags *.y *.h *.c *.l ../*.h ../*.c;\t\t\t\t\\\n+\n+.PHONY: TAGS\n+\n+force:"}, {"sha": "706d0cc6d696b1ba56d482d2253b2ee544c22483", "filename": "gcc/ch/runtime/Makefile.in", "status": "added", "additions": 191, "deletions": 0, "changes": 191, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/360c5f1547ccd947d760a18f59817b38e0a47fd3/gcc%2Fch%2Fruntime%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/360c5f1547ccd947d760a18f59817b38e0a47fd3/gcc%2Fch%2Fruntime%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fch%2Fruntime%2FMakefile.in?ref=360c5f1547ccd947d760a18f59817b38e0a47fd3", "patch": "@@ -0,0 +1,191 @@\n+# Makefile for GNU CHILL compiler runtime library.\n+#   Copyright (C) 1987, 88, 90, 91, 92, 93, 1994 Free Software Foundation, Inc.\n+\n+#This file is part of GNU CC.\n+\n+#GNU CC is free software; you can redistribute it and/or modify\n+#it under the terms of the GNU General Public License as published by\n+#the Free Software Foundation; either version 2, or (at your option)\n+#any later version.\n+\n+#GNU CC is distributed in the hope that it will be useful,\n+#but WITHOUT ANY WARRANTY; without even the implied warranty of\n+#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+#GNU General Public License for more details.\n+\n+#You should have received a copy of the GNU General Public License\n+#along with GNU CC; see the file COPYING.  If not, write to\n+#the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.\n+\n+# The targets for external use include:\n+# all, doc, TAGS, mostlyclean, clean, distclean, realclean,\n+\n+srcdir = .\n+\n+AR_FOR_TARGET = ` \\\n+  if [ -f ../../../binutils/ar ] ; then \\\n+    echo ../../../binutils/ar ; \\\n+  else \\\n+    if [ \"$(host_canonical)\" = \"$(target_canonical)\" ] ; then \\\n+      echo ar; \\\n+    else \\\n+       t=\"$(program_transform_name)\"; echo ar | sed -e '' $$t ; \\\n+    fi \\\n+  fi`\n+AR_FOR_TARGET_FLAGS = rc\n+# How to invoke ranlib.\n+RANLIB_FOR_TARGET = ` \\\n+  if [ -f ../../../binutils/ranlib ] ; then \\\n+    echo ../../../binutils/ranlib ; \\\n+  else \\\n+    if [ \"$(host_canonical)\" = \"$(target_canonical)\" ] ; then \\\n+      echo ranlib; \\\n+    else \\\n+       t=\"$(program_transform_name)\"; echo ranlib | sed -e '' $$t ; \\\n+    fi \\\n+  fi`\n+RANLIB_TEST_FOR_TARGET = \\\n+  [ -f $(RANLIB_FOR_TARGET) ] \\\n+  || ( [ \"$(host_canonical)\" = \"$(target_canonical)\" ] \\\n+       && [ -f /usr/bin/ranlib -o -f /bin/ranlib ] )\n+\n+# Directory in which to find other cross-compilation tools and headers.\n+# Used to compile the library\n+tooldir = $(exec_prefix)/$(target_alias)\n+\n+BASE = ../..\n+GCC_FOR_TARGET = $(BASE)/xgcc -B$(BASE)/\n+CFLAGS = -g -O\n+\n+# Always search these dirs when compiling.\n+INCLUDES = -I. -I$(BASE) -I$(srcdir) -I$(srcdir)/$(BASE)/config \\\n+   -I../../include -I$(tooldir)/include -I$(srcdir)/$(BASE) \n+\n+ALL_CFLAGS = $(CFLAGS)\n+\n+AR_FOR_TARGET = ` \\\n+  if [ -f $(BASE)/../binutils/ar ] ; then \\\n+    echo $(BASE)/../binutils/ar ; \\\n+  else \\\n+    if [ \"$(host_canonical)\" = \"$(target_canonical)\" ] ; then \\\n+      echo ar; \\\n+    else \\\n+       t=\"$(program_transform_name)\"; echo ar | sed -e '' $$t ; \\\n+    fi \\\n+  fi`\n+AR_FOR_TARGET_FLAGS = rc\n+RANLIB_FOR_TARGET = ` \\\n+  if [ -f $(BASE)/../binutils/ranlib ] ; then \\\n+    echo $(BASE)/../binutils/ranlib ; \\\n+  else \\\n+    if [ \"$(host_canonical)\" = \"$(target_canonical)\" ] ; then \\\n+      echo ranlib; \\\n+    else \\\n+       t=\"$(program_transform_name)\"; echo ranlib | sed -e '' $$t ; \\\n+    fi \\\n+  fi`\n+RANLIB_TEST_FOR_TARGET = \\\n+  [ -f $(RANLIB_FOR_TARGET) ] \\\n+  || ( [ \"$(host_canonical)\" = \"$(target_canonical)\" ] \\\n+       && [ -f /usr/bin/ranlib -o -f /bin/ranlib ] )\n+\n+\n+AR = $(AR_FOR_TARGET)\n+AR_FLAGS = $(AR_FOR_TARGET_FLAGS)\n+# How to invoke ranlib.\n+RANLIB = $(RANLIB_FOR_TARGET)\n+# Test to use to see whether ranlib exists on the system.\n+RANLIB_TEST = $(RANLIB_TEST_FOR_TARGET)\n+\n+INSTALL = install -c\n+# These permit overriding just for certain files.\n+INSTALL_PROGRAM = $(INSTALL)\n+INSTALL_DATA = $(INSTALL)\n+\n+# End of variables for you to override.\n+\n+# Definition of `all' is here so that new rules inserted by sed\n+# do not specify the default target.\n+all: all.indirect\n+\n+# This tells GNU Make version 3 not to put all variables in the environment.\n+.NOEXPORT:\n+\n+# sed inserts variable overrides after the following lines.\n+####target overrides\n+####host overrides\n+####cross overrides\n+####build overrides\n+####site overrides\n+\f\n+#### Host, target, and site specific Makefile fragments come in here.\n+###\n+\n+.c.o:\n+\t$(GCC_FOR_TARGET) -c $(ALL_CFLAGS) $(INCLUDES) $<\n+\n+# Lists of required functions for each archive.\n+\n+LIBOBJS1 = allgmem.o allmem.o allocate.o cause.o exhstack.o exh.o retmem.o \\\n+\t   unhex.o unhex1.o rtsdummy.o terminate.o\n+\n+IOOBJS = basicio.o chillstdio.o delete.o eoln.o existing.o format.o getassoc.o \\\n+         gettextaccess.o gettextindex.o gettextrecord.o getusage.o \\\n+         indexable.o ioerror.o isassociated.o outoffile.o readable.o \\\n+         readrecord.o sequencible.o settextaccess.o settextindex.o \\\n+         settextrecord.o variable.o writeable.o writerecord.o\n+\n+PSOBJS = andps.o cardps.o concatps.o copyps.o diffps.o eqps.o ffsetclrps.o \\\n+\tffsetps.o flsetclrps.o flsetps.o inbitstr.o inps.o leps.o ltps.o \\\n+\tneps.o notps.o orps.o setbitps.o setbits.o sliceps.o xorps.o\n+\n+STROBJS = concatstr.o eqstr.o ltstr.o memmove.o\n+\n+TIMEOBJS = abstime.o inttime.o waituntil.o remaintime.o convdurrtstime.o \\\n+           checkcycle.o\n+\n+TASKOBJS = continue.o delaycase.o printbuffer.o printevent.o queuelength.o \\\n+\t   sendbuffer.o waitbuffer.o\n+\n+OBJS = $(LIBOBJS1) $(IOOBJS) $(PSOBJS) $(STROBJS) $(TIMEOBJS) $(TASKOBJS)\n+\n+all.indirect: chillrt0.o libchill.a Makefile\n+\n+.PHONY: check installcheck\n+check:\n+installcheck:\n+\n+libchill.a: $(OBJS)\n+\t$(AR_FOR_TARGET) $(AR_FOR_TARGET_FLAGS) $@ $(OBJS)\n+\t-if $(RANLIB_TEST_FOR_TARGET) ; then $(RANLIB_FOR_TARGET) $@; else true; fi\n+\n+$(PSOBJS): $(srcdir)/powerset.h\n+librmt.o: $(srcdir)/rtltypes.h\n+chillrt0.o: $(srcdir)/rtltypes.h $(srcdir)/iomodes.h $(srcdir)/auxtypes.h\n+$(LIBOBJS1): $(srcdir)/rtltypes.h\n+$(TIMEOBJS): $(srcdir)/rtltypes.h $(srcdir)/rts.h\n+$(TASKOBJS): $(srcdir)/rts.h $(srcdir)/rtltypes.h\n+$(IOOBJS): $(srcdir)/fileio.h $(srcdir)/bitstring.h $(srcdir)/auxtypes.h \\\n+           $(srcdir)/iomodes.h $(srcdir)/format.h $(srcdir)/ioerror.h\n+# With a new cc1 compile the library again\n+$(OBJS): ../../cc1\n+\n+install-info:\n+\n+info:\n+\n+dvi:\n+\n+Makefile: $(srcdir)/Makefile.in\n+\t$(SHELL) ./config.status\n+\n+mostlyclean:\n+\t-rm -f $(OBJS) chillrt0.o\n+clean: mostlyclean\n+\t-rm -f libchill.a\n+extraclean: clean\n+\ttrue\n+distclean: extraclean\n+\t-rm -f Makefile\n+realclean: distclean\n+\ttrue"}, {"sha": "b0d91ed38a1c709f1e008059d55850f4c6630dd4", "filename": "gcc/ch/runtime/allgmem.c", "status": "added", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/360c5f1547ccd947d760a18f59817b38e0a47fd3/gcc%2Fch%2Fruntime%2Fallgmem.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/360c5f1547ccd947d760a18f59817b38e0a47fd3/gcc%2Fch%2Fruntime%2Fallgmem.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fch%2Fruntime%2Fallgmem.c?ref=360c5f1547ccd947d760a18f59817b38e0a47fd3", "patch": "@@ -0,0 +1,61 @@\n+/* Implement runtime actions for CHILL.\n+   Copyright (C) 1992,1993 Free Software Foundation, Inc.\n+   Author: Wilfried Moser\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n+\n+#include \"config.h\"\n+#include <stdlib.h>\n+#include \"rtltypes.h\"\n+\n+extern void __cause_ex1 (char *ex, char *filename, int lineno);\n+\n+EXCEPTION (notimplemented);\n+\n+/*\n+ * function _allocate_global_memory\n+ *\n+ * parameters:\n+ *  ptr\t\t\tpointer to location where pointer should be written\n+ *  size\t\tnumber of bytes to allocate\n+ *  filename            source file which issued the call\n+ *  linenumber          line number of the call within that file\n+ *\n+ * returns:\n+ *  void\n+ *\n+ * exceptions:\n+ *  spacefail\n+ *  protectionfail\n+ *  rangefail\n+ *\n+ * abstract:\n+ *  allocate global memory. At the moment we dont know how to realize this,\n+ *  therefore cause NotImplemented.\n+ *\n+*/\n+\n+void\n+_allocate_global_memory (ptr, size, filename, linenumber)\n+     void **ptr;\n+     int size;\n+     char *filename;\n+     int linenumber;\n+{\n+    __cause_ex1 (\"notimplemented\", filename, linenumber);\n+}\n+"}, {"sha": "571884a01960cb43ba1acd90503bb75794dafe15", "filename": "gcc/ch/runtime/checkcycle.c", "status": "added", "additions": 65, "deletions": 0, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/360c5f1547ccd947d760a18f59817b38e0a47fd3/gcc%2Fch%2Fruntime%2Fcheckcycle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/360c5f1547ccd947d760a18f59817b38e0a47fd3/gcc%2Fch%2Fruntime%2Fcheckcycle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fch%2Fruntime%2Fcheckcycle.c?ref=360c5f1547ccd947d760a18f59817b38e0a47fd3", "patch": "@@ -0,0 +1,65 @@\n+/* Implement timing-related runtime actions for CHILL.\n+   Copyright (C) 1992,1993 Free Software Foundation, Inc.\n+   Author: Wilfried Moser\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n+\n+#include \"rtltypes.h\"\n+#include \"rts.h\"\n+\n+EXCEPTION (cyclefail);\n+\n+/*\n+ * function __check_cycle\n+ *\n+ * parameters:\n+ *      t         pointer to initial time\n+ *      dur       duration\n+ *      filename  filename of call\n+ *      lineno    linenumber of call\n+ *\n+ * returns:\n+ *      void\n+ *\n+ * exceptions:\n+ *      cyclefail\n+ *\n+ * abstract:\n+ *      Function checks if cycle is possible (there is time left) and wait the\n+ *      remaining time.\n+ *\n+ */\n+\n+extern int __remaintime (RtsTime *since, unsigned long dur, RtsTime *remain);\n+extern int __cause_ex1 (char *ex, char *file, int lineno);\n+    \n+void\n+__check_cycle (t, dur, fname, lineno)\n+    RtsTime       *t;\n+    unsigned long  dur;\n+    char          *fname;\n+    int            lineno;\n+{\n+  RtsTime remain;\n+  \n+  if (__remaintime (t, dur, &remain) != 0)\n+    /* no time left -- cause exception */\n+    __cause_ex1 (\"cyclefail\", fname, lineno);\n+  \n+  /* delay the process */\n+  __delay_this (wait_wait, &remain, fname, lineno);\n+}"}, {"sha": "c17cd5964d968c64e4037e346803d8c57034458f", "filename": "gcc/ch/runtime/ffsetps.c", "status": "added", "additions": 109, "deletions": 0, "changes": 109, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/360c5f1547ccd947d760a18f59817b38e0a47fd3/gcc%2Fch%2Fruntime%2Fffsetps.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/360c5f1547ccd947d760a18f59817b38e0a47fd3/gcc%2Fch%2Fruntime%2Fffsetps.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fch%2Fruntime%2Fffsetps.c?ref=360c5f1547ccd947d760a18f59817b38e0a47fd3", "patch": "@@ -0,0 +1,109 @@\n+/* Implement POWERSET runtime actions for CHILL.\n+   Copyright (C) 1992,1993 Free Software Foundation, Inc.\n+   Author: Wilfried Moser, et al\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n+\n+#define __CHILL_LIB__\n+\n+#include \"config.h\"\n+#include <stdio.h>\n+#include \"powerset.h\"\n+\n+extern void __cause_ex1 (char *exname, char *file, int lineno);\n+\n+/*\n+ * function __ffsetpowerset\n+ *\n+ * parameters:\n+ *\tps\t\tpowerset\n+ *\tbitlength\tlength of powerset\n+ *      minval          set low bound\n+ *      filename        caller's file name\n+ *      lineno          caller's line number\n+ *\n+ * returns:\n+ *\tint\t\tenum value of lowest member of powerset\n+ *\n+ * exceptions:\n+ *      \"empty\" if the set is empty\n+ *\n+ * abstract:\n+ *  Find first bit set in a powerset and return the corresponding value.\n+ *\n+ */\n+long\n+__ffsetpowerset (ps, bitlength, minval, filename, lineno)\n+     SET_WORD      *ps;\n+     unsigned long  bitlength;\n+     long           minval;\n+     char          *filename;\n+     int            lineno;\n+{\n+  unsigned long bitno;\n+\n+  if (bitlength <= SET_CHAR_SIZE)\n+    {\n+      SET_CHAR cset = *((SET_CHAR *)ps);\n+      if (cset != 0)\n+\t{\n+\t  /* found a bit set .. calculate which */\n+\t  for (bitno = 0; bitno < SET_CHAR_SIZE; bitno++)\n+\t    if (GET_BIT_IN_CHAR (cset, bitno))\n+\t      break;\n+\t  /* return its index */\n+\t  return bitno + minval;\n+\t}\n+    }\n+  else if (bitlength <= SET_SHORT_SIZE)\n+    {\n+      SET_SHORT sset = *((SET_SHORT *)ps);\n+      if (sset != 0)\n+\t{\n+\t  /* found a bit set .. calculate which */\n+\t  for (bitno = 0; bitno < SET_SHORT_SIZE; bitno++)\n+\t    if (GET_BIT_IN_SHORT (sset, bitno))\n+\t      break;\n+\t  /* return its index */\n+\t  return bitno + minval;\n+\t}\n+    }\n+  else /* set composed of array of one or more WORDs */\n+    {\n+      SET_WORD *p    = ps;\n+      SET_WORD *endp = ps + BITS_TO_WORDS(bitlength);\n+      unsigned long    cnt;\n+      \n+      /* FIXME: bitorder problems? */\n+      for (cnt = 0; p < endp; p++, cnt += SET_WORD_SIZE)\n+\t{\n+\t  SET_WORD c = *p;\n+\n+\t  if (c)\n+\t    {\n+\t      /* found a bit set .. calculate which */\n+\t      for (bitno = 0; bitno < SET_WORD_SIZE; bitno++)\n+\t\tif (GET_BIT_IN_WORD (c, bitno))\n+\t\t  break;\n+\t      /* return its index */\n+\t      return cnt + bitno + minval;\n+\t    }\n+\t}\n+    }\n+  /* no bits found - raise exception */\n+  __cause_ex1 (\"empty\", filename, lineno);\n+}"}, {"sha": "16934f581faf60a00715151b6927c17b40584503", "filename": "gcc/ch/runtime/gettextrecord.c", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/360c5f1547ccd947d760a18f59817b38e0a47fd3/gcc%2Fch%2Fruntime%2Fgettextrecord.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/360c5f1547ccd947d760a18f59817b38e0a47fd3/gcc%2Fch%2Fruntime%2Fgettextrecord.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fch%2Fruntime%2Fgettextrecord.c?ref=360c5f1547ccd947d760a18f59817b38e0a47fd3", "patch": "@@ -0,0 +1,30 @@\n+/* Implement Input/Output runtime actions for CHILL.\n+   Copyright (C) 1992,1993 Free Software Foundation, Inc.\n+   Author: Wilfried Moser, et al\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n+\n+#include \"fileio.h\"\n+\n+VarString*\n+__gettextrecord( Text_Mode* the_text, char* file, int line )\n+{\n+  if( !the_text )\n+    CHILLEXCEPTION( file, line, EMPTY, NULL_TEXT );\n+\n+  return the_text->text_record;\n+}"}, {"sha": "b82c5ec8ff305619d8c1e277b09a6ff04c9b44cf", "filename": "gcc/ch/runtime/inttime.c", "status": "added", "additions": 85, "deletions": 0, "changes": 85, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/360c5f1547ccd947d760a18f59817b38e0a47fd3/gcc%2Fch%2Fruntime%2Finttime.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/360c5f1547ccd947d760a18f59817b38e0a47fd3/gcc%2Fch%2Fruntime%2Finttime.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fch%2Fruntime%2Finttime.c?ref=360c5f1547ccd947d760a18f59817b38e0a47fd3", "patch": "@@ -0,0 +1,85 @@\n+/* Implement timing-related runtime actions for CHILL.\n+   Copyright (C) 1992,1993 Free Software Foundation, Inc.\n+   Author: Wilfried Moser\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n+\n+#include <time.h>\n+\n+typedef struct\n+{\n+  void          *p;\n+  unsigned long len;\n+} Descr;\n+\n+typedef Descr   **Toutlist;\n+\n+#define ASSIGN_VALUE(OUT,VAL)          \\\n+do                                     \\\n+{                                      \\\n+  if (OUT)                             \\\n+    switch (OUT->len)                  \\\n+      {                                \\\n+      case 1:                          \\\n+\t*(char *)((OUT)->p) = VAL;     \\\n+\tbreak;                         \\\n+      case 2:                          \\\n+\t*(short *)((OUT)->p) = VAL;    \\\n+\tbreak;                         \\\n+      case 4:                          \\\n+\t*(int *)((OUT)->p) = VAL;      \\\n+\tbreak;                         \\\n+      }                                \\\n+} while (0)\n+\n+\n+/*\n+ * function _inttime\n+ *\n+ * parameters:\n+ *     t    time_t\n+ *     list the pointers to the results\n+ *\n+ * returns:\n+ *     void\n+ *\n+ * exceptions:\n+ *     none\n+ *\n+ * abstract:\n+ *     perform the INTTIME builtin call\n+ *\n+ */\n+\n+void\n+_inttime (timer, outlist)\n+     time_t   timer;\n+     Toutlist outlist;\n+{\n+  struct tm  *time_str;\n+\n+  /* get struct tm from time_t */\n+  time_str = localtime (&timer);\n+\n+  /* assign the values */\n+  ASSIGN_VALUE (outlist[0], time_str->tm_year + 1900);\n+  ASSIGN_VALUE (outlist[1], time_str->tm_mon + 1);\n+  ASSIGN_VALUE (outlist[2], time_str->tm_mday);\n+  ASSIGN_VALUE (outlist[3], time_str->tm_hour);\n+  ASSIGN_VALUE (outlist[4], time_str->tm_min);\n+  ASSIGN_VALUE (outlist[5], time_str->tm_sec);\n+}"}, {"sha": "2c2cc3eccecac00dfebd3e2f8721be24c77e7f55", "filename": "gcc/ch/runtime/sendbuffer.c", "status": "added", "additions": 175, "deletions": 0, "changes": 175, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/360c5f1547ccd947d760a18f59817b38e0a47fd3/gcc%2Fch%2Fruntime%2Fsendbuffer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/360c5f1547ccd947d760a18f59817b38e0a47fd3/gcc%2Fch%2Fruntime%2Fsendbuffer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fch%2Fruntime%2Fsendbuffer.c?ref=360c5f1547ccd947d760a18f59817b38e0a47fd3", "patch": "@@ -0,0 +1,175 @@\n+/* Implement tasking-related runtime actions for CHILL.\n+   Copyright (C) 1992,1993 Free Software Foundation, Inc.\n+   Author: Wilfried Moser\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n+\n+#include \"rtltypes.h\"\n+#include \"rts.h\"\n+\n+EXCEPTION (sendfail);\n+\n+extern void __cause_ex1 (char *ex, char *file, int lineno);\n+\n+#define CAUSE_SENDFAIL  __cause_ex1 (\"sendfail\", filename, lineno)\n+\n+/*\n+ * function __send_buffer\n+ *\n+ * parameters:\n+ *     buffer     pointer to buffer descriptor\n+ *     data       pointer to data descriptor\n+ *     prio       priority for send action\n+ *     timeout\t  pointer to timeout value\n+ *     filename   source file name where function gets called\n+ *     lineno     linenumber in source file\n+ *\n+ * returns:\n+ *     int\t  0 .. success\n+ *                1 .. timeout\n+ *\n+ * exceptions:\n+ *     sendfail\n+ *\n+ * abstract:\n+ *     implement the CHILL SEND buffer action.\n+ */\n+\n+int\n+__send_buffer (buffer, data, prio, timeout, filename, lineno)\n+     Buffer_Descr    *buffer;\n+     Data_Descr      *data;\n+     int              prio;\n+     void            *timeout;\n+     char            *filename;\n+     int              lineno;\n+{\n+  Buffer_Queue        *bq;\n+  Buffer_Send_Queue   *bsq, *bsq_entry, *prev_bsq_entry;\n+  int                  cnt = 0;\n+  int\t\t       retval = 0;\n+  \n+  /* if we don't have anything queued on that buffer,\n+     set up the structure */\n+  memcpy (&bq, buffer->buf, sizeof (Buffer_Queue *));\n+  if (bq == 0)\n+    {\n+      MALLOC (bq, sizeof (Buffer_Queue));\n+      memset (bq, 0, sizeof (Buffer_Queue));\n+      memcpy (buffer->buf, &bq, sizeof (Buffer_Queue *));\n+    }\n+\n+  /* look if there is a process delayed on that buffer */\n+  if (bq->waitqueue != 0)\n+    {\n+\tBuffer_Wait_Queue\t*listentry;\n+\t\n+\t/* there is already a processes waiting for that buffer,\n+\t   check datalength and copy the data in */\n+\tif (bq->waitqueue->datalen < data->length)\n+\t    CAUSE_SENDFAIL;\n+\tmemcpy (bq->waitqueue->dataptr, data->ptr, data->length);\n+\t\n+\t/* set up the entry */\n+\tbq->waitqueue->is_sent = 1;\n+\tbq->waitqueue->who_sent = THIS;\n+\n+\t/* continue waiting process */\n+\t__continue_that (bq->waitqueue->this, prio, filename, lineno);\n+\t\n+\t/* now dequeue all entries of this list */\n+\tlistentry = bq->waitqueue->startlist;\n+\twhile (listentry != 0)\n+\t{\n+\t    Buffer_Wait_Queue\t*tmp, *prev_entry, *bwq;\n+\t    Buffer_Queue\t*bq;\n+\n+\t    tmp = listentry->chain;\n+\t    memcpy (&bq, listentry->bufferaddr, sizeof (Buffer_Queue *));\n+\t    prev_entry = (Buffer_Wait_Queue *)&bq->waitqueue;\n+\t    bwq = bq->waitqueue;\n+\n+\t    while (bwq != listentry)\n+\t    {\n+\t\tprev_entry = bwq;\n+\t\tbwq = bwq->forward;\n+\t    }\n+\t    /* dequeue it */\n+\t    prev_entry->forward = bwq->forward;\n+\t    bq->waitqueuelength--;\n+\t    listentry = tmp;\n+\t}\n+\t\n+\t/* all done */\n+\treturn 0;\n+    }\n+\n+  /* nothing in waitqueue, set up an entry for sendqueue.\n+     Note: we allocate here space for the data too, to reduce\n+     calls to malloc and let the dataptr point just behind\n+     the Buffer_Send_Queue structure. */\n+  MALLOC (bsq_entry, sizeof (Buffer_Send_Queue) + data->length);\n+  memset (bsq_entry, 0, sizeof (Buffer_Send_Queue));\n+\n+  bsq_entry->priority = prio;\n+  bsq_entry->this = THIS;\n+  bsq_entry->datalen = data->length;\n+  bsq_entry->dataptr = bsq_entry + 1;\n+  memcpy (bsq_entry->dataptr, data->ptr, data->length);\n+\n+  /* add entry to sendqueue */\n+  prev_bsq_entry = (Buffer_Send_Queue *)&bq->sendqueue;\n+  bsq = bq->sendqueue;\n+\n+  while (bsq != 0 && bsq->priority >= prio)\n+    {\n+      prev_bsq_entry = bsq;\n+      bsq = bsq->forward;\n+    }\n+  if (bsq == 0)\n+    {\n+      /* beginning or end of the list */\n+      prev_bsq_entry->forward = bsq_entry;\n+    }\n+  else\n+    {\n+      /* somewhere in the middle */\n+      bsq_entry->forward = prev_bsq_entry->forward;\n+      prev_bsq_entry->forward = bsq_entry;\n+    }\n+\n+  if (buffer->maxqueuelength != (unsigned long)-1L &&\n+      bq->sendqueuelength >= buffer->maxqueuelength)\n+    {\n+      /* we have to delay this process */\n+      bsq_entry->is_delayed = 1;\n+      retval = __delay_this (wait_buffer_send, timeout, filename, lineno);\n+      if (retval)\n+        {\n+\t  prev_bsq_entry->forward = bsq_entry->forward;\n+\t  FREE (bsq_entry);\n+        }\n+    }\n+  else\n+    /* just say that there is one more entry in the queue */\n+    bq->sendqueuelength++;\n+  return retval;\n+}\n+\n+/* force function __print_buffer to be linked */\n+extern void __print_buffer ();\n+static EntryPoint pev = __print_buffer;"}]}