{"sha": "f2572a398d21fd52435c94065c0651fd79db847c", "node_id": "C_kwDOANBUbNoAKGYyNTcyYTM5OGQyMWZkNTI0MzVjOTQwNjVjMDY1MWZkNzlkYjg0N2M", "commit": {"author": {"name": "konglin1", "email": "lingling.kong@intel.com", "date": "2021-10-27T09:15:05Z"}, "committer": {"name": "liuhongt", "email": "hongtao.liu@intel.com", "date": "2021-11-10T07:10:23Z"}, "message": "i386: Support complex fma/conj_fma for _Float16.\n\nSupport cmla_optab, cmul_optab, cmla_conj_optab, cmul_conj_optab for vector _Float16.\n\ngcc/ChangeLog:\n\n\t* config/i386/sse.md (cmul<conj_op><mode>3): add new define_expand.\n\t(cmla<conj_op><mode>4): Likewise\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/i386/avx512fp16-vector-complex-float.c: New test.", "tree": {"sha": "a263f0e469d85acd0a685ac3fd9e32832beb00ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a263f0e469d85acd0a685ac3fd9e32832beb00ff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f2572a398d21fd52435c94065c0651fd79db847c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2572a398d21fd52435c94065c0651fd79db847c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2572a398d21fd52435c94065c0651fd79db847c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2572a398d21fd52435c94065c0651fd79db847c/comments", "author": {"login": "konglingling7", "id": 86399175, "node_id": "MDQ6VXNlcjg2Mzk5MTc1", "avatar_url": "https://avatars.githubusercontent.com/u/86399175?v=4", "gravatar_id": "", "url": "https://api.github.com/users/konglingling7", "html_url": "https://github.com/konglingling7", "followers_url": "https://api.github.com/users/konglingling7/followers", "following_url": "https://api.github.com/users/konglingling7/following{/other_user}", "gists_url": "https://api.github.com/users/konglingling7/gists{/gist_id}", "starred_url": "https://api.github.com/users/konglingling7/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/konglingling7/subscriptions", "organizations_url": "https://api.github.com/users/konglingling7/orgs", "repos_url": "https://api.github.com/users/konglingling7/repos", "events_url": "https://api.github.com/users/konglingling7/events{/privacy}", "received_events_url": "https://api.github.com/users/konglingling7/received_events", "type": "User", "site_admin": false}, "committer": {"login": "algebra84", "id": 22926165, "node_id": "MDQ6VXNlcjIyOTI2MTY1", "avatar_url": "https://avatars.githubusercontent.com/u/22926165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/algebra84", "html_url": "https://github.com/algebra84", "followers_url": "https://api.github.com/users/algebra84/followers", "following_url": "https://api.github.com/users/algebra84/following{/other_user}", "gists_url": "https://api.github.com/users/algebra84/gists{/gist_id}", "starred_url": "https://api.github.com/users/algebra84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/algebra84/subscriptions", "organizations_url": "https://api.github.com/users/algebra84/orgs", "repos_url": "https://api.github.com/users/algebra84/repos", "events_url": "https://api.github.com/users/algebra84/events{/privacy}", "received_events_url": "https://api.github.com/users/algebra84/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9299f69027e8e00f5a9debe765a3280ebcba5cd1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9299f69027e8e00f5a9debe765a3280ebcba5cd1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9299f69027e8e00f5a9debe765a3280ebcba5cd1"}], "stats": {"total": 63, "additions": 63, "deletions": 0}, "files": [{"sha": "190841211a56cd775595ffbebd4abceec2e86f34", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2572a398d21fd52435c94065c0651fd79db847c/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2572a398d21fd52435c94065c0651fd79db847c/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=f2572a398d21fd52435c94065c0651fd79db847c", "patch": "@@ -5938,6 +5938,12 @@\n \t[(UNSPEC_COMPLEX_FMA_PAIR \"fmaddc\")\n \t (UNSPEC_COMPLEX_FCMA_PAIR \"fcmaddc\")])\n \n+(define_int_attr conj_op\n+\t[(UNSPEC_COMPLEX_FMA \"\")\n+\t (UNSPEC_COMPLEX_FCMA \"_conj\")\n+\t (UNSPEC_COMPLEX_FMUL \"\")\n+\t (UNSPEC_COMPLEX_FCMUL \"_conj\")])\n+\n (define_mode_attr complexmove\n   [(V32HF \"avx512f_loadv16sf\")\n    (V16HF \"avx512vl_loadv8sf\")\n@@ -6019,6 +6025,15 @@\n   DONE;\n })\n \n+(define_expand \"cmla<conj_op><mode>4\"\n+  [(set (match_operand:VF_AVX512FP16VL 0 \"register_operand\")\n+\t(unspec:VF_AVX512FP16VL\n+\t    [(match_operand:VF_AVX512FP16VL 1 \"vector_operand\")\n+\t     (match_operand:VF_AVX512FP16VL 2 \"vector_operand\")\n+\t     (match_operand:VF_AVX512FP16VL 3 \"vector_operand\")]\n+\t     UNSPEC_COMPLEX_F_C_MA))]\n+  \"TARGET_AVX512FP16\")\n+\n (define_insn \"fma_<complexopname>_<mode><sdc_maskz_name><round_name>\"\n   [(set (match_operand:VF_AVX512FP16VL 0 \"register_operand\" \"=&v\")\n \t(unspec:VF_AVX512FP16VL\n@@ -6153,6 +6168,14 @@\n   [(set_attr \"type\" \"ssemuladd\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n+(define_expand \"cmul<conj_op><mode>3\"\n+  [(set (match_operand:VF_AVX512FP16VL 0 \"register_operand\")\n+\t(unspec:VF_AVX512FP16VL\n+\t  [(match_operand:VF_AVX512FP16VL 1 \"vector_operand\")\n+\t   (match_operand:VF_AVX512FP16VL 2 \"vector_operand\")]\n+\t   UNSPEC_COMPLEX_F_C_MUL))]\n+  \"TARGET_AVX512FP16\")\n+\n (define_insn \"<avx512>_<complexopname>_<mode><maskc_name><round_name>\"\n   [(set (match_operand:VF_AVX512FP16VL 0 \"register_operand\" \"=&v\")\n \t  (unspec:VF_AVX512FP16VL"}, {"sha": "7c579cb64c1f09e45c2061262a25a3b68c19a11c", "filename": "gcc/testsuite/gcc.target/i386/avx512fp16-vector-complex-float.c", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2572a398d21fd52435c94065c0651fd79db847c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512fp16-vector-complex-float.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2572a398d21fd52435c94065c0651fd79db847c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512fp16-vector-complex-float.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512fp16-vector-complex-float.c?ref=f2572a398d21fd52435c94065c0651fd79db847c", "patch": "@@ -0,0 +1,40 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -ffast-math -mavx512fp16 -mavx512vl -mprefer-vector-width=512\" } */\n+/* { dg-final { scan-assembler-times \"vfmaddcph\\[ \\\\t\\]\" 1 } } */\n+/* { dg-final { scan-assembler-not \"vfmadd\\[123]*ph\\[ \\\\t\\]\"} } */\n+/* { dg-final { scan-assembler-not \"vfmadd\\[123]*sh\\[ \\\\t\\]\"} } */\n+/* { dg-final { scan-assembler-times \"vfcmaddcph\\[ \\\\t\\]\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vfmulcph\\[ \\\\t\\]\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vfcmulcph\\[ \\\\t\\]\" 1 } } */\n+\n+#include<complex.h>\n+#define TYPE _Float16\n+#define N 16\n+\n+void fma0 (_Complex TYPE *a, _Complex TYPE *b,\n+           _Complex TYPE * __restrict c)\n+{\n+  for (int i = 0; i < N; i++)\n+    c[i] += a[i] * b[i];\n+}\n+\n+void fmaconj (_Complex TYPE a[restrict N], _Complex TYPE b[restrict N],\n+\t      _Complex TYPE c[restrict N])\n+{\n+  for (int i = 0; i < N; i++)\n+    c[i] += a[i] * ~b[i];\n+}\n+\n+void fmul (_Complex TYPE a[restrict N], _Complex TYPE b[restrict N],\n+\t   _Complex TYPE c[restrict N])\n+{\n+  for (int i = 0; i < N; i++)\n+    c[i] = a[i] * b[i];\n+}\n+\n+void fmulconj (_Complex TYPE a[restrict N], _Complex TYPE b[restrict N],\n+\t       _Complex TYPE c[restrict N])\n+{\n+  for (int i = 0; i < N; i++)\n+    c[i] = a[i] * ~b[i];\n+}"}]}