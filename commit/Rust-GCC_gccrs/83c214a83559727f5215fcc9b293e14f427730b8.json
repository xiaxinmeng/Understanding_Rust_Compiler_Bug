{"sha": "83c214a83559727f5215fcc9b293e14f427730b8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODNjMjE0YTgzNTU5NzI3ZjUyMTVmY2M5YjI5M2UxNGY0Mjc3MzBiOA==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2013-03-15T08:55:07Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2013-03-15T08:55:07Z"}, "message": "unwind-cxx.h: Include sys/sdt.h if detected.\n\n\t* libsupc++/unwind-cxx.h: Include sys/sdt.h if detected.\n\t(PROBE2): New macro.\n\t* libsupc++/eh_throw.cc (__cxa_throw, __cxa_rethrow): Add probe.\n\t* libsupc++/eh_catch.cc (__cxa_begin_catch): Add probe.\n\t* configure.ac: Check for sys/sdt.h.\n\t* configure, config.h.in: Rebuild.\n\nFrom-SVN: r196674", "tree": {"sha": "dd1140722871f720e036bdc5b3cf325a5ccd3b10", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dd1140722871f720e036bdc5b3cf325a5ccd3b10"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/83c214a83559727f5215fcc9b293e14f427730b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83c214a83559727f5215fcc9b293e14f427730b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/83c214a83559727f5215fcc9b293e14f427730b8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83c214a83559727f5215fcc9b293e14f427730b8/comments", "author": null, "committer": null, "parents": [{"sha": "d0a7de7055d1ded39c4e0cfe0ed0411bcd69a1f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0a7de7055d1ded39c4e0cfe0ed0411bcd69a1f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d0a7de7055d1ded39c4e0cfe0ed0411bcd69a1f9"}], "stats": {"total": 41, "additions": 38, "deletions": 3}, "files": [{"sha": "c5a5ddebff7e17bf12654fd5cd0954b073582f68", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83c214a83559727f5215fcc9b293e14f427730b8/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83c214a83559727f5215fcc9b293e14f427730b8/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=83c214a83559727f5215fcc9b293e14f427730b8", "patch": "@@ -1,3 +1,12 @@\n+2013-03-15  Tom Tromey  <tromey@redhat.com>\n+\n+\t* libsupc++/unwind-cxx.h: Include sys/sdt.h if detected.\n+\t(PROBE2): New macro.\n+\t* libsupc++/eh_throw.cc (__cxa_throw, __cxa_rethrow): Add probe.\n+\t* libsupc++/eh_catch.cc (__cxa_begin_catch): Add probe.\n+\t* configure.ac: Check for sys/sdt.h.\n+\t* configure, config.h.in: Rebuild.\n+\n 2013-03-14  Jonathan Wakely  <jwakely.gcc@gmail.com>\n \n \tPR libstdc++/56613"}, {"sha": "9937a1ed15519b58962b703d33e82f40f5af9577", "filename": "libstdc++-v3/config.h.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83c214a83559727f5215fcc9b293e14f427730b8/libstdc%2B%2B-v3%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83c214a83559727f5215fcc9b293e14f427730b8/libstdc%2B%2B-v3%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig.h.in?ref=83c214a83559727f5215fcc9b293e14f427730b8", "patch": "@@ -400,6 +400,9 @@\n /* Define to 1 if you have the <sys/resource.h> header file. */\n #undef HAVE_SYS_RESOURCE_H\n \n+/* Define to 1 if you have the <sys/sdt.h> header file. */\n+#undef HAVE_SYS_SDT_H\n+\n /* Define to 1 if you have the <sys/sem.h> header file. */\n #undef HAVE_SYS_SEM_H\n "}, {"sha": "f40ddcff99e334905af35cb4e36d59b03526deaa", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83c214a83559727f5215fcc9b293e14f427730b8/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83c214a83559727f5215fcc9b293e14f427730b8/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=83c214a83559727f5215fcc9b293e14f427730b8", "patch": "@@ -20417,7 +20417,7 @@ ac_compiler_gnu=$ac_cv_c_compiler_gnu\n for ac_header in endian.h execinfo.h float.h fp.h ieeefp.h inttypes.h \\\n locale.h machine/endian.h machine/param.h nan.h stdint.h stdlib.h string.h \\\n strings.h sys/ipc.h sys/isa_defs.h sys/machine.h sys/param.h \\\n-sys/resource.h sys/sem.h sys/stat.h sys/time.h sys/types.h unistd.h \\\n+sys/resource.h sys/sdt.h sys/sem.h sys/stat.h sys/time.h sys/types.h unistd.h \\\n wchar.h wctype.h\n do :\n   as_ac_Header=`$as_echo \"ac_cv_header_$ac_header\" | $as_tr_sh`"}, {"sha": "de6640644917a1563f29213d78ef896838d4d776", "filename": "libstdc++-v3/configure.ac", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83c214a83559727f5215fcc9b293e14f427730b8/libstdc%2B%2B-v3%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83c214a83559727f5215fcc9b293e14f427730b8/libstdc%2B%2B-v3%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure.ac?ref=83c214a83559727f5215fcc9b293e14f427730b8", "patch": "@@ -216,7 +216,7 @@ GLIBCXX_CHECK_SYSCTL_HW_NCPU\n AC_CHECK_HEADERS([endian.h execinfo.h float.h fp.h ieeefp.h inttypes.h \\\n locale.h machine/endian.h machine/param.h nan.h stdint.h stdlib.h string.h \\\n strings.h sys/ipc.h sys/isa_defs.h sys/machine.h sys/param.h \\\n-sys/resource.h sys/sem.h sys/stat.h sys/time.h sys/types.h unistd.h \\\n+sys/resource.h sys/sdt.h sys/sem.h sys/stat.h sys/time.h sys/types.h unistd.h \\\n wchar.h wctype.h])\n \n # Only do link tests if native. Else, hardcode."}, {"sha": "43e875a95d260727f4efc258f4ffcc71438640a6", "filename": "libstdc++-v3/libsupc++/eh_catch.cc", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83c214a83559727f5215fcc9b293e14f427730b8/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Feh_catch.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83c214a83559727f5215fcc9b293e14f427730b8/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Feh_catch.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Feh_catch.cc?ref=83c214a83559727f5215fcc9b293e14f427730b8", "patch": "@@ -80,6 +80,9 @@ __cxxabiv1::__cxa_begin_catch (void *exc_obj_in) _GLIBCXX_NOTHROW\n     }\n \n   objectp = __gxx_caught_object(exceptionObject);\n+\n+  PROBE2 (catch, objectp, header->exceptionType);\n+\n #ifdef __ARM_EABI_UNWINDER__\n   _Unwind_Complete(exceptionObject);\n #endif"}, {"sha": "a79a025af19366f620fbd58f56700e82cfe26044", "filename": "libstdc++-v3/libsupc++/eh_throw.cc", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83c214a83559727f5215fcc9b293e14f427730b8/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Feh_throw.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83c214a83559727f5215fcc9b293e14f427730b8/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Feh_throw.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Feh_throw.cc?ref=83c214a83559727f5215fcc9b293e14f427730b8", "patch": "@@ -60,6 +60,8 @@ extern \"C\" void\n __cxxabiv1::__cxa_throw (void *obj, std::type_info *tinfo,\n \t\t\t void (_GLIBCXX_CDTOR_CALLABI *dest) (void *))\n {\n+  PROBE2 (throw, obj, tinfo);\n+\n   // Definitely a primary.\n   __cxa_refcounted_exception *header\n     = __get_refcounted_exception_header_from_obj (obj);\n@@ -97,7 +99,12 @@ __cxxabiv1::__cxa_rethrow ()\n       if (!__is_gxx_exception_class(header->unwindHeader.exception_class))\n \tglobals->caughtExceptions = 0;\n       else\n-\theader->handlerCount = -header->handlerCount;\n+\t{\n+\t  header->handlerCount = -header->handlerCount;\n+\t  // Only notify probe for C++ exceptions.\n+\t  PROBE2 (rethrow, __get_object_from_ambiguous_exception(header),\n+\t\t  header->exceptionType);\n+\t}\n \n #ifdef _GLIBCXX_SJLJ_EXCEPTIONS\n       _Unwind_SjLj_Resume_or_Rethrow (&header->unwindHeader);"}, {"sha": "ed4eea5665542113d21307fe2b129f6c070a7d30", "filename": "libstdc++-v3/libsupc++/unwind-cxx.h", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83c214a83559727f5215fcc9b293e14f427730b8/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Funwind-cxx.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83c214a83559727f5215fcc9b293e14f427730b8/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Funwind-cxx.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Funwind-cxx.h?ref=83c214a83559727f5215fcc9b293e14f427730b8", "patch": "@@ -37,6 +37,19 @@\n #include <bits/atomic_word.h>\n #include <cxxabi.h>\n \n+#ifdef _GLIBCXX_HAVE_SYS_SDT_H\n+#include <sys/sdt.h>\n+/* We only want to use stap probes starting with v3.  Earlier versions\n+   added too much startup cost.  */\n+#if defined (STAP_PROBE2) && _SDT_NOTE_TYPE >= 3\n+#define PROBE2(name, arg1, arg2) STAP_PROBE2 (libstdcxx, name, arg1, arg2)\n+#endif\n+#endif\n+\n+#ifndef PROBE2\n+#define PROBE2(name, arg1, arg2)\n+#endif\n+\n #pragma GCC visibility push(default)\n \n namespace __cxxabiv1"}]}