{"sha": "d944c82dce5b0d8848078c95f2be0a45b6909ed9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDk0NGM4MmRjZTViMGQ4ODQ4MDc4Yzk1ZjJiZTBhNDViNjkwOWVkOQ==", "commit": {"author": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2003-07-17T13:25:21Z"}, "committer": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2003-07-17T13:25:21Z"}, "message": "c-common.c (c_estimate_num_insns_1): Don't handle METHOD_CALL_EXPR.\n\n2003-07-17  Steven Bosscher  <steven@gcc.gnu.org>\n\n\t* c-common.c (c_estimate_num_insns_1): Don't handle\n\tMETHOD_CALL_EXPR.\n\t* expr.c (safe_from_p): Likewise.\n\t* gengtype.c (adjust_field_tree_exp): Likewise.\n\t* stmt.c (warn_if_unused_value): Likewise\n\t* tree.c (first_rtl_op): Likewise.\n\t* tree.def: Don't define METHOD_CALL_EXPR.\n\t* java/lang.c (java_estimate_num_insns_1): Don't handle\n\tMETHOD_CALL_EXPR.\n\nFrom-SVN: r69511", "tree": {"sha": "5f3f6a8759b6ccdf197cdaa3fee3d777aa69cbe7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5f3f6a8759b6ccdf197cdaa3fee3d777aa69cbe7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d944c82dce5b0d8848078c95f2be0a45b6909ed9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d944c82dce5b0d8848078c95f2be0a45b6909ed9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d944c82dce5b0d8848078c95f2be0a45b6909ed9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d944c82dce5b0d8848078c95f2be0a45b6909ed9/comments", "author": null, "committer": null, "parents": [{"sha": "d424f7ff66c44c4c2ed5a41e0af6294c2640bd69", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d424f7ff66c44c4c2ed5a41e0af6294c2640bd69", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d424f7ff66c44c4c2ed5a41e0af6294c2640bd69"}], "stats": {"total": 27, "additions": 12, "deletions": 15}, "files": [{"sha": "5cdf4b67b2f77768e47673d0e5bd19d1a19505cd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d944c82dce5b0d8848078c95f2be0a45b6909ed9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d944c82dce5b0d8848078c95f2be0a45b6909ed9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d944c82dce5b0d8848078c95f2be0a45b6909ed9", "patch": "@@ -1,3 +1,15 @@\n+2003-07-17  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* c-common.c (c_estimate_num_insns_1): Don't handle\n+\tMETHOD_CALL_EXPR.\n+\t* expr.c (safe_from_p): Likewise.\n+\t* gengtype.c (adjust_field_tree_exp): Likewise.\n+\t* stmt.c (warn_if_unused_value): Likewise\n+\t* tree.c (first_rtl_op): Likewise.\n+\t* tree.def: Don't define METHOD_CALL_EXPR.\n+\t* java/lang.c (java_estimate_num_insns_1): Don't handle\n+\tMETHOD_CALL_EXPR.\n+\n 2003-07-17  Eric Botcazou  <ebotcazou@libertysurf.fr>\n \n \tPR other/11466"}, {"sha": "09caa0fb7fd6da447dbdbb7a18b40992ac3ad0dc", "filename": "gcc/c-common.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d944c82dce5b0d8848078c95f2be0a45b6909ed9/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d944c82dce5b0d8848078c95f2be0a45b6909ed9/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=d944c82dce5b0d8848078c95f2be0a45b6909ed9", "patch": "@@ -5996,7 +5996,6 @@ c_estimate_num_insns_1 (tree *tp, int *walk_subtrees, void *data)\n     case ROUND_MOD_EXPR:\n     case RDIV_EXPR:\n     case CALL_EXPR:\n-    case METHOD_CALL_EXPR:\n       *count += 10;\n       break;\n     /* Various containers that will produce no code themselves.  */"}, {"sha": "ee181a83e71425de64af5f66070aa38268c51d0c", "filename": "gcc/expr.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d944c82dce5b0d8848078c95f2be0a45b6909ed9/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d944c82dce5b0d8848078c95f2be0a45b6909ed9/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=d944c82dce5b0d8848078c95f2be0a45b6909ed9", "patch": "@@ -6263,10 +6263,6 @@ safe_from_p (rtx x, tree exp, int top_p)\n \t     part of the expression.  */\n \t  return safe_from_p (x, TREE_OPERAND (exp, 1), 0);\n \n-\tcase METHOD_CALL_EXPR:\n-\t  /* This takes an rtx argument, but shouldn't appear here.  */\n-\t  abort ();\n-\n \tdefault:\n \t  break;\n \t}"}, {"sha": "406aed319c9f04081faebf945b169608ca83c7b0", "filename": "gcc/gengtype.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d944c82dce5b0d8848078c95f2be0a45b6909ed9/gcc%2Fgengtype.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d944c82dce5b0d8848078c95f2be0a45b6909ed9/gcc%2Fgengtype.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgengtype.c?ref=d944c82dce5b0d8848078c95f2be0a45b6909ed9", "patch": "@@ -643,7 +643,6 @@ adjust_field_tree_exp (type_p t, options_p opt ATTRIBUTE_UNUSED)\n     { \"GOTO_SUBROUTINE_EXPR\", 0, 2 },\n     { \"RTL_EXPR\", 0, 2 },\n     { \"WITH_CLEANUP_EXPR\", 2, 1 },\n-    { \"METHOD_CALL_EXPR\", 3, 1 }\n   };\n \n   if (t->kind != TYPE_ARRAY)"}, {"sha": "6bddf38335d9d3bae9b47f282bde49f34791ba26", "filename": "gcc/java/lang.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d944c82dce5b0d8848078c95f2be0a45b6909ed9/gcc%2Fjava%2Flang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d944c82dce5b0d8848078c95f2be0a45b6909ed9/gcc%2Fjava%2Flang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Flang.c?ref=d944c82dce5b0d8848078c95f2be0a45b6909ed9", "patch": "@@ -1127,7 +1127,6 @@ java_estimate_num_insns_1 (tree *tp, int *walk_subtrees, void *data)\n     case ROUND_MOD_EXPR:\n     case RDIV_EXPR:\n     case CALL_EXPR:\n-    case METHOD_CALL_EXPR:\n \n     case NEW_ARRAY_EXPR:\n     case NEW_ANONYMOUS_ARRAY_EXPR:"}, {"sha": "09c282de6c6d778d41c03edfa1dd14f879c12291", "filename": "gcc/stmt.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d944c82dce5b0d8848078c95f2be0a45b6909ed9/gcc%2Fstmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d944c82dce5b0d8848078c95f2be0a45b6909ed9/gcc%2Fstmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstmt.c?ref=d944c82dce5b0d8848078c95f2be0a45b6909ed9", "patch": "@@ -2225,7 +2225,6 @@ warn_if_unused_value (tree exp)\n     case INIT_EXPR:\n     case TARGET_EXPR:\n     case CALL_EXPR:\n-    case METHOD_CALL_EXPR:\n     case RTL_EXPR:\n     case TRY_CATCH_EXPR:\n     case WITH_CLEANUP_EXPR:"}, {"sha": "c9a7bcf72401ccbf2d42e2893ef4ddd1a7e3ccbd", "filename": "gcc/tree.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d944c82dce5b0d8848078c95f2be0a45b6909ed9/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d944c82dce5b0d8848078c95f2be0a45b6909ed9/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=d944c82dce5b0d8848078c95f2be0a45b6909ed9", "patch": "@@ -1461,8 +1461,6 @@ first_rtl_op (enum tree_code code)\n       return 0;\n     case WITH_CLEANUP_EXPR:\n       return 2;\n-    case METHOD_CALL_EXPR:\n-      return 3;\n     default:\n       return TREE_CODE_LENGTH (code);\n     }"}, {"sha": "056f5d095be453544aaaecbe5edf8eff2d3167e3", "filename": "gcc/tree.def", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d944c82dce5b0d8848078c95f2be0a45b6909ed9/gcc%2Ftree.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d944c82dce5b0d8848078c95f2be0a45b6909ed9/gcc%2Ftree.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.def?ref=d944c82dce5b0d8848078c95f2be0a45b6909ed9", "patch": "@@ -474,11 +474,6 @@ DEFTREECODE (BIND_EXPR, \"bind_expr\", 'e', 3)\n    made out of a chain of TREE_LIST nodes.  */\n DEFTREECODE (CALL_EXPR, \"call_expr\", 'e', 2)\n \n-/* Call a method.  Operand 0 is the method, whose type is a METHOD_TYPE.\n-   Operand 1 is the expression for \"self\".\n-   Operand 2 is the list of explicit arguments.  */\n-DEFTREECODE (METHOD_CALL_EXPR, \"method_call_expr\", 'e', 4)\n-\n /* Specify a value to compute along with its corresponding cleanup.\n    Operand 0 argument is an expression whose value needs a cleanup.\n    Operand 1 is the cleanup expression for the object."}]}