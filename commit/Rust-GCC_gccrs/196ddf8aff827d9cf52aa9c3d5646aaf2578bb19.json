{"sha": "196ddf8aff827d9cf52aa9c3d5646aaf2578bb19", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTk2ZGRmOGFmZjgyN2Q5Y2Y1MmFhOWMzZDU2NDZhYWYyNTc4YmIxOQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-04-06T05:49:35Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-04-06T05:49:35Z"}, "message": "(emit_reload_insns): Cast enum array index to int.\n\nFrom-SVN: r4026", "tree": {"sha": "c468659546b602c42811b9ab39c1bb1581a40ecd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c468659546b602c42811b9ab39c1bb1581a40ecd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/196ddf8aff827d9cf52aa9c3d5646aaf2578bb19", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/196ddf8aff827d9cf52aa9c3d5646aaf2578bb19", "html_url": "https://github.com/Rust-GCC/gccrs/commit/196ddf8aff827d9cf52aa9c3d5646aaf2578bb19", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/196ddf8aff827d9cf52aa9c3d5646aaf2578bb19/comments", "author": null, "committer": null, "parents": [{"sha": "aadcdb458c68197f3da9a0c25ca839321c96f6bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aadcdb458c68197f3da9a0c25ca839321c96f6bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aadcdb458c68197f3da9a0c25ca839321c96f6bf"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "1dea880d9e8924104bd00d1a099f8503fa5bc395", "filename": "gcc/reload1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/196ddf8aff827d9cf52aa9c3d5646aaf2578bb19/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/196ddf8aff827d9cf52aa9c3d5646aaf2578bb19/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=196ddf8aff827d9cf52aa9c3d5646aaf2578bb19", "patch": "@@ -5541,7 +5541,7 @@ emit_reload_insns (insn)\n \t\t\t      if (new_icode == CODE_FOR_nothing)\n \t\t\t\tnew_mode = mode;\n \t\t\t      else\n-\t\t\t\tnew_mode = insn_operand_mode[new_icode][2];\n+\t\t\t\tnew_mode = insn_operand_mode[(int) new_icode][2];\n \n \t\t\t      if (GET_MODE (second_reload_reg) != new_mode)\n \t\t\t\t{"}]}