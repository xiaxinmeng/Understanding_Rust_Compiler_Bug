{"sha": "ea8ad3e527332487c4e395a95d9588873a58a99b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWE4YWQzZTUyNzMzMjQ4N2M0ZTM5NWE5NWQ5NTg4ODczYTU4YTk5Yg==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2011-09-14T06:26:07Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2011-09-14T06:26:07Z"}, "message": "re PR fortran/34547 (NULL(): Fortran 2003 changes, accepts invalid, ICE on invalid)\n\n2011-09-14  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/34547\n        PR fortran/50375\n        * check.c (gfc_check_null): Allow allocatables as MOLD to NULL.\n        * resolve.c (resolve_transfer): Reject NULL without MOLD.\n        * interface.c (gfc_procedure_use): Reject NULL without MOLD\n        if no explicit interface is known.\n        (gfc_search_interface): Reject NULL without MOLD if it would\n        lead to ambiguity.\n\n2011-09-14  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/34547\n        PR fortran/50375\n        * gfortran.dg/null_5.f90: New.\n        * gfortran.dg/null_6.f90: New.\n\nFrom-SVN: r178841", "tree": {"sha": "ea05e76ae4fb515f8b3075f732a237a358ae0f9f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ea05e76ae4fb515f8b3075f732a237a358ae0f9f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ea8ad3e527332487c4e395a95d9588873a58a99b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea8ad3e527332487c4e395a95d9588873a58a99b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea8ad3e527332487c4e395a95d9588873a58a99b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea8ad3e527332487c4e395a95d9588873a58a99b/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "95a45b570dac0fa415570b77a8ac874caba8481f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95a45b570dac0fa415570b77a8ac874caba8481f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/95a45b570dac0fa415570b77a8ac874caba8481f"}], "stats": {"total": 72, "additions": 70, "deletions": 2}, "files": [{"sha": "eeb462f7fc2dc49feb88a83baedf738e590180e4", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea8ad3e527332487c4e395a95d9588873a58a99b/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea8ad3e527332487c4e395a95d9588873a58a99b/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=ea8ad3e527332487c4e395a95d9588873a58a99b", "patch": "@@ -1,3 +1,14 @@\n+2011-09-14  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/34547\n+\tPR fortran/50375\n+\t* check.c (gfc_check_null): Allow allocatables as MOLD to NULL.\n+\t* resolve.c (resolve_transfer): Reject NULL without MOLD.\n+\t* interface.c (gfc_procedure_use): Reject NULL without MOLD\n+\tif no explicit interface is known.\n+\t(gfc_search_interface): Reject NULL without MOLD if it would\n+\tlead to ambiguity.\n+\n 2011-09-13  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/50379"}, {"sha": "5b692eec151e07eb6fed397ca1247ae89c44e61a", "filename": "gcc/fortran/check.c", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea8ad3e527332487c4e395a95d9588873a58a99b/gcc%2Ffortran%2Fcheck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea8ad3e527332487c4e395a95d9588873a58a99b/gcc%2Ffortran%2Fcheck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fcheck.c?ref=ea8ad3e527332487c4e395a95d9588873a58a99b", "patch": "@@ -2732,14 +2732,20 @@ gfc_check_null (gfc_expr *mold)\n \n   attr = gfc_variable_attr (mold, NULL);\n \n-  if (!attr.pointer && !attr.proc_pointer)\n+  if (!attr.pointer && !attr.proc_pointer && !attr.allocatable)\n     {\n-      gfc_error (\"'%s' argument of '%s' intrinsic at %L must be a POINTER\",\n+      gfc_error (\"'%s' argument of '%s' intrinsic at %L must be a POINTER, \"\n+\t\t \"ALLOCATABLE or procedure pointer\",\n \t\t gfc_current_intrinsic_arg[0]->name,\n \t\t gfc_current_intrinsic, &mold->where);\n       return FAILURE;\n     }\n \n+  if (attr.allocatable\n+      && gfc_notify_std (GFC_STD_F2003, \"Fortran 2003: NULL intrinsic with \"\n+\t\t\t \"allocatable MOLD at %L\", &mold->where) == FAILURE)\n+    return FAILURE;\n+\n   /* F2008, C1242.  */\n   if (gfc_is_coindexed (mold))\n     {"}, {"sha": "7962403a5051aab203070329be377db8d63ad141", "filename": "gcc/fortran/interface.c", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea8ad3e527332487c4e395a95d9588873a58a99b/gcc%2Ffortran%2Finterface.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea8ad3e527332487c4e395a95d9588873a58a99b/gcc%2Ffortran%2Finterface.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Finterface.c?ref=ea8ad3e527332487c4e395a95d9588873a58a99b", "patch": "@@ -2857,6 +2857,13 @@ gfc_procedure_use (gfc_symbol *sym, gfc_actual_arglist **ap, locus *where)\n \t\t\t\"procedure '%s'\", &a->expr->where, sym->name);\n \t      break;\n \t    }\n+\n+\t  if (a->expr && a->expr->expr_type == EXPR_NULL\n+\t      && a->expr->ts.type == BT_UNKNOWN)\n+\t    {\n+\t      gfc_error (\"MOLD argument to NULL required at %L\", &a->expr->where);\n+\t      return;\n+\t    }\n \t}\n \n       return;\n@@ -2949,6 +2956,20 @@ gfc_search_interface (gfc_interface *intr, int sub_flag,\n \t\t      gfc_actual_arglist **ap)\n {\n   gfc_symbol *elem_sym = NULL;\n+  gfc_symbol *null_sym = NULL;\n+  locus null_expr_loc;\n+  gfc_actual_arglist *a;\n+  bool has_null_arg = false;\n+\n+  for (a = *ap; a; a = a->next)\n+    if (a->expr && a->expr->expr_type == EXPR_NULL\n+\t&& a->expr->ts.type == BT_UNKNOWN)\n+      {\n+\thas_null_arg = true;\n+\tnull_expr_loc = a->expr->where;\n+\tbreak;\n+      } \n+\n   for (; intr; intr = intr->next)\n     {\n       if (sub_flag && intr->sym->attr.function)\n@@ -2958,6 +2979,19 @@ gfc_search_interface (gfc_interface *intr, int sub_flag,\n \n       if (gfc_arglist_matches_symbol (ap, intr->sym))\n \t{\n+\t  if (has_null_arg && null_sym)\n+\t    {\n+\t      gfc_error (\"MOLD= required in NULL() argument at %L: Ambiguity \"\n+\t\t\t \"between specific functions %s and %s\",\n+\t\t\t &null_expr_loc, null_sym->name, intr->sym->name);\n+\t      return NULL;\n+\t    }\n+\t  else if (has_null_arg)\n+\t    {\n+\t      null_sym = intr->sym;\n+\t      continue;\n+\t    }\n+\n \t  /* Satisfy 12.4.4.1 such that an elemental match has lower\n \t     weight than a non-elemental match.  */ \n \t  if (intr->sym->attr.elemental)\n@@ -2969,6 +3003,9 @@ gfc_search_interface (gfc_interface *intr, int sub_flag,\n \t}\n     }\n \n+  if (null_sym)\n+    return null_sym;\n+\n   return elem_sym ? elem_sym : NULL;\n }\n "}, {"sha": "9aab8365e4589a456981e50be67106a0e3e61fb2", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea8ad3e527332487c4e395a95d9588873a58a99b/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea8ad3e527332487c4e395a95d9588873a58a99b/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=ea8ad3e527332487c4e395a95d9588873a58a99b", "patch": "@@ -8150,6 +8150,13 @@ resolve_transfer (gfc_code *code)\n \t && exp->value.op.op == INTRINSIC_PARENTHESES)\n     exp = exp->value.op.op1;\n \n+  if (exp && exp->expr_type == EXPR_NULL && exp->ts.type == BT_UNKNOWN)\n+    {\n+      gfc_error (\"NULL intrinsic at %L in data transfer statement requires \"\n+\t\t \"MOLD=\", &exp->where);\n+      return;\n+    }\n+\n   if (exp == NULL || (exp->expr_type != EXPR_VARIABLE\n \t\t      && exp->expr_type != EXPR_FUNCTION))\n     return;"}, {"sha": "5488b1cf484494d67f92436bf05345c95fa8296e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea8ad3e527332487c4e395a95d9588873a58a99b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea8ad3e527332487c4e395a95d9588873a58a99b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ea8ad3e527332487c4e395a95d9588873a58a99b", "patch": "@@ -1,3 +1,10 @@\n+2011-09-14  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/34547\n+\tPR fortran/50375\n+\t* gfortran.dg/null_5.f90: New.\n+\t* gfortran.dg/null_6.f90: New.\n+\n 2011-09-13  Bernd Schmidt  <bernds@codesourcery.com>\n \n \t* gcc.c-torture/compile/20110913-1.c: New test."}]}