{"sha": "7d8577dd46688a3c721fb1e1f271b59f1672e99a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2Q4NTc3ZGQ0NjY4OGEzYzcyMWZiMWUxZjI3MWI1OWYxNjcyZTk5YQ==", "commit": {"author": {"name": "Tom de Vries", "email": "tdevries@suse.de", "date": "2021-07-28T13:44:54Z"}, "committer": {"name": "Tom de Vries", "email": "tdevries@suse.de", "date": "2021-08-02T14:49:27Z"}, "message": "[gcc/doc] Improve nonnull attribute documentation\n\nImprove nonnull attribute documentation in a number of ways:\n\nReorganize discussion of effects into:\n- effects for calls to functions with nonnull-marked parameters, and\n- effects for function definitions with nonnull-marked parameters.\nThis makes it clear that -fno-delete-null-pointer-checks has no effect for\noptimizations based on nonnull-marked parameters in function definitions\n(see PR100404).\n\nMention -Wnonnull-compare.\n\ngcc/ChangeLog:\n\n2021-07-28  Tom de Vries  <tdevries@suse.de>\n\n\tPR middle-end/101665\n\t* doc/extend.texi (nonnull attribute): Improve documentation.", "tree": {"sha": "5d089fd91887ad59b90024f6054b9c977f25fc67", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5d089fd91887ad59b90024f6054b9c977f25fc67"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7d8577dd46688a3c721fb1e1f271b59f1672e99a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d8577dd46688a3c721fb1e1f271b59f1672e99a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d8577dd46688a3c721fb1e1f271b59f1672e99a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d8577dd46688a3c721fb1e1f271b59f1672e99a/comments", "author": {"login": "vries", "id": 4057235, "node_id": "MDQ6VXNlcjQwNTcyMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vries", "html_url": "https://github.com/vries", "followers_url": "https://api.github.com/users/vries/followers", "following_url": "https://api.github.com/users/vries/following{/other_user}", "gists_url": "https://api.github.com/users/vries/gists{/gist_id}", "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vries/subscriptions", "organizations_url": "https://api.github.com/users/vries/orgs", "repos_url": "https://api.github.com/users/vries/repos", "events_url": "https://api.github.com/users/vries/events{/privacy}", "received_events_url": "https://api.github.com/users/vries/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vries", "id": 4057235, "node_id": "MDQ6VXNlcjQwNTcyMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vries", "html_url": "https://github.com/vries", "followers_url": "https://api.github.com/users/vries/followers", "following_url": "https://api.github.com/users/vries/following{/other_user}", "gists_url": "https://api.github.com/users/vries/gists{/gist_id}", "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vries/subscriptions", "organizations_url": "https://api.github.com/users/vries/orgs", "repos_url": "https://api.github.com/users/vries/repos", "events_url": "https://api.github.com/users/vries/events{/privacy}", "received_events_url": "https://api.github.com/users/vries/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "99b520f031c0e491d7e170916df11dd645d60617", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99b520f031c0e491d7e170916df11dd645d60617", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99b520f031c0e491d7e170916df11dd645d60617"}], "stats": {"total": 42, "additions": 31, "deletions": 11}, "files": [{"sha": "49df8e6dc38ab05b85182795f5851317e2d6bba3", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 31, "deletions": 11, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d8577dd46688a3c721fb1e1f271b59f1672e99a/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d8577dd46688a3c721fb1e1f271b59f1672e99a/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=7d8577dd46688a3c721fb1e1f271b59f1672e99a", "patch": "@@ -3488,17 +3488,37 @@ my_memcpy (void *dest, const void *src, size_t len)\n @end smallexample\n \n @noindent\n-causes the compiler to check that, in calls to @code{my_memcpy},\n-arguments @var{dest} and @var{src} are non-null.  If the compiler\n-determines that a null pointer is passed in an argument slot marked\n-as non-null, and the @option{-Wnonnull} option is enabled, a warning\n-is issued.  @xref{Warning Options}.  Unless disabled by\n-the @option{-fno-delete-null-pointer-checks} option the compiler may\n-also perform optimizations based on the knowledge that certain function\n-arguments cannot be null. In addition,\n-the @option{-fisolate-erroneous-paths-attribute} option can be specified\n-to have GCC transform calls with null arguments to non-null functions\n-into traps. @xref{Optimize Options}.\n+informs the compiler that, in calls to @code{my_memcpy}, arguments\n+@var{dest} and @var{src} must be non-null.\n+\n+The attribute has an effect both on functions calls and function definitions.\n+\n+For function calls:\n+@itemize @bullet\n+@item If the compiler determines that a null pointer is\n+passed in an argument slot marked as non-null, and the\n+@option{-Wnonnull} option is enabled, a warning is issued.\n+@xref{Warning Options}.\n+@item The @option{-fisolate-erroneous-paths-attribute} option can be\n+specified to have GCC transform calls with null arguments to non-null\n+functions into traps.  @xref{Optimize Options}.\n+@item The compiler may also perform optimizations based on the\n+knowledge that certain function arguments cannot be null.  These\n+optimizations can be disabled by the\n+@option{-fno-delete-null-pointer-checks} option. @xref{Optimize Options}.\n+@end itemize\n+\n+For function definitions:\n+@itemize @bullet\n+@item If the compiler determines that a function parameter that is\n+marked with nonnull is compared with null, and\n+@option{-Wnonnull-compare} option is enabled, a warning is issued.\n+@xref{Warning Options}.\n+@item The compiler may also perform optimizations based on the\n+knowledge that @code{nonnul} parameters cannot be null.  This can\n+currently not be disabled other than by removing the nonnull\n+attribute.\n+@end itemize\n \n If no @var{arg-index} is given to the @code{nonnull} attribute,\n all pointer arguments are marked as non-null.  To illustrate, the"}]}