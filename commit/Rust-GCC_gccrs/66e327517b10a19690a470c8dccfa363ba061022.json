{"sha": "66e327517b10a19690a470c8dccfa363ba061022", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjZlMzI3NTE3YjEwYTE5NjkwYTQ3MGM4ZGNjZmEzNjNiYTA2MTAyMg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-04-02T10:54:47Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-04-02T10:54:47Z"}, "message": "aarch64: Fix ICE due to aarch64_gen_compare_reg_maybe_ze [PR94435]\n\nThe following testcase ICEs, because aarch64_gen_compare_reg_maybe_ze emits\ninvalid RTL.\nFor y_mode [QH]Imode it expects y to be of that mode (or CONST_INT that fits\ninto that mode) and x being SImode; for non-CONST_INT y it zero extends y\ninto SImode and compares that against x, for CONST_INT y it zero extends y\ninto SImode.  The problem is that when the zero extended constant isn't\nusable directly, it forces it into a REG, but with y_mode mode, and then\ncompares against y.  That is wrong, because it should force it into a SImode\nREG and compare that way.\n\n2020-04-02  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR target/94435\n\t* config/aarch64/aarch64.c (aarch64_gen_compare_reg_maybe_ze): For\n\ty_mode E_[QH]Imode and y being a CONST_INT, change y_mode to SImode.\n\n\t* gcc.target/aarch64/pr94435.c: New test.", "tree": {"sha": "0339e9569326903c2c231d0b52453ab5131bbaf4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0339e9569326903c2c231d0b52453ab5131bbaf4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/66e327517b10a19690a470c8dccfa363ba061022", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66e327517b10a19690a470c8dccfa363ba061022", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66e327517b10a19690a470c8dccfa363ba061022", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66e327517b10a19690a470c8dccfa363ba061022/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ff825b8158394a01a43359efd91d0b6b8c4fa21b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff825b8158394a01a43359efd91d0b6b8c4fa21b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff825b8158394a01a43359efd91d0b6b8c4fa21b"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "1f20cbd8c734e6a67482debb7973ac14a8e8c938", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66e327517b10a19690a470c8dccfa363ba061022/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66e327517b10a19690a470c8dccfa363ba061022/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=66e327517b10a19690a470c8dccfa363ba061022", "patch": "@@ -1,3 +1,9 @@\n+2020-04-02  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/94435\n+\t* config/aarch64/aarch64.c (aarch64_gen_compare_reg_maybe_ze): For\n+\ty_mode E_[QH]Imode and y being a CONST_INT, change y_mode to SImode.\n+\n 2020-04-02  Srinath Parvathaneni  <srinath.parvathaneni@arm.com>\n \n \tPR target/94317"}, {"sha": "16940b44c826a02ac937870753da62df9624f973", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66e327517b10a19690a470c8dccfa363ba061022/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66e327517b10a19690a470c8dccfa363ba061022/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=66e327517b10a19690a470c8dccfa363ba061022", "patch": "@@ -1,3 +1,8 @@\n+2020-04-02  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/94435\n+\t* gcc.target/aarch64/pr94435.c: New test.\n+\n 2020-04-02  Srinath Parvathaneni  <srinath.parvathaneni@arm.com>\n \n \tPR target/94317"}]}