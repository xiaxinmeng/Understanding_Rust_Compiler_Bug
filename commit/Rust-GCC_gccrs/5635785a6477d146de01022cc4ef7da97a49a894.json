{"sha": "5635785a6477d146de01022cc4ef7da97a49a894", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTYzNTc4NWE2NDc3ZDE0NmRlMDEwMjJjYzRlZjdkYTk3YTQ5YTg5NA==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2005-04-26T17:15:46Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2005-04-26T17:15:46Z"}, "message": "ssa-dse-1.c: New test.\n\n\t* gcc.dg/tree-ssa/ssa-dse-1.c: New test.\n\t* gcc.dg/tree-ssa/ssa-dse-2.c: New test.\n\t* gcc.dg/tree-ssa/ssa-dse-3.c: New test.\n\t* gcc.dg/tree-ssa/ssa-dse-4.c: New test.\n\t* gcc.dg/tree-ssa/ssa-dse-5.c: New test.\n\t* gcc.dg/tree-ssa/ssa-dse-6.c: New test.\n\t* gcc.dg/tree-ssa/ssa-dse-7.c: New test.\n\nFrom-SVN: r98779", "tree": {"sha": "aa118eb6e513d40dc6b760be25fd8ea6b99e2b05", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aa118eb6e513d40dc6b760be25fd8ea6b99e2b05"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5635785a6477d146de01022cc4ef7da97a49a894", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5635785a6477d146de01022cc4ef7da97a49a894", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5635785a6477d146de01022cc4ef7da97a49a894", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5635785a6477d146de01022cc4ef7da97a49a894/comments", "author": null, "committer": null, "parents": [{"sha": "b1ca239f187e7dabcdfc155e5f04827ad9bebc31", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1ca239f187e7dabcdfc155e5f04827ad9bebc31", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1ca239f187e7dabcdfc155e5f04827ad9bebc31"}], "stats": {"total": 169, "additions": 169, "deletions": 0}, "files": [{"sha": "1c08f013b8af552a2f3782bc0fdc425996d5abf2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5635785a6477d146de01022cc4ef7da97a49a894/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5635785a6477d146de01022cc4ef7da97a49a894/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5635785a6477d146de01022cc4ef7da97a49a894", "patch": "@@ -1,3 +1,13 @@\n+2005-04-26  Jeff Law  <law@redhat.com>\n+\n+\t* gcc.gc/tree-ssa/ssa-dce-1.c: New test.\n+\t* gcc.gc/tree-ssa/ssa-dce-2.c: New test.\n+\t* gcc.gc/tree-ssa/ssa-dce-3.c: New test.\n+\t* gcc.gc/tree-ssa/ssa-dce-4.c: New test.\n+\t* gcc.gc/tree-ssa/ssa-dce-5.c: New test.\n+\t* gcc.gc/tree-ssa/ssa-dce-6.c: New test.\n+\t* gcc.gc/tree-ssa/ssa-dce-7.c: New test.\n+\n 2004-04-26  Richard Guenther  <rguenth@gcc.gnu.org>\n \n \tPR tree-optimization/17598"}, {"sha": "d0263e3a28760f280fa8ab5967d78c9dbe5a3745", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-dse-1.c", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5635785a6477d146de01022cc4ef7da97a49a894/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dse-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5635785a6477d146de01022cc4ef7da97a49a894/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dse-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dse-1.c?ref=5635785a6477d146de01022cc4ef7da97a49a894", "patch": "@@ -0,0 +1,26 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-dse1\" } */\n+\n+int\n+foo (int a, int b, int c)\n+{\n+  int *p;\n+  if (c)\n+    p = &a;\n+  else\n+    p = &b;\n+\n+  *p = 3;\n+  *p = 4;\n+  return *p;\n+}\n+\n+\n+/* We should eliminate both assignments to *p.  */\n+/* { dg-final { scan-tree-dump-times \" = 3\" 0 \"dse1\"} } */\n+/* { dg-final { scan-tree-dump-times \" = 4\" 0 \"dse1\"} } */\n+\n+/* The return *p should be turned into return 4.  */\n+/* { dg-final { scan-tree-dump-times \" return 4\" 1 \"dse1\"} } */\n+\n+/* { dg-final { cleanup-tree-dump \"dse1\" } } */"}, {"sha": "104ef26df40ca1fa74be38da3796549e95532f2f", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-dse-2.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5635785a6477d146de01022cc4ef7da97a49a894/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dse-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5635785a6477d146de01022cc4ef7da97a49a894/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dse-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dse-2.c?ref=5635785a6477d146de01022cc4ef7da97a49a894", "patch": "@@ -0,0 +1,24 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-dse1\" } */\n+\n+int a, b, c;\n+int\n+foo ()\n+{\n+  int *p;\n+  if (c)\n+    p = &a;\n+  else\n+    p = &b;\n+\n+  *p = 3;\n+  *p = 4;\n+  return *p;\n+}\n+\n+\n+/* We should eliminate the first assignment to *p, but not the second.  */\n+/* { dg-final { scan-tree-dump-times \" = 3\" 0 \"dse1\"} } */\n+/* { dg-final { scan-tree-dump-times \" = 4\" 1 \"dse1\"} } */\n+\n+/* { dg-final { cleanup-tree-dump \"dse1\" } } */"}, {"sha": "4292f2384a5a67edb8fbcb16fabd532674c5d584", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-dse-3.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5635785a6477d146de01022cc4ef7da97a49a894/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dse-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5635785a6477d146de01022cc4ef7da97a49a894/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dse-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dse-3.c?ref=5635785a6477d146de01022cc4ef7da97a49a894", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-dse1\" } */\n+\n+char Bool_Glob;\n+void f(void)\n+{\n+  Bool_Glob = 0;\n+  Bool_Glob = 1;\n+}\n+\n+/* We should eliminate the first assignment to *p, but not the second.  */\n+/* { dg-final { scan-tree-dump-times \"Bool_Glob = 0\" 0 \"dse1\"} } */\n+/* { dg-final { scan-tree-dump-times \"Bool_Glob = 1\" 1 \"dse1\"} } */\n+\n+/* { dg-final { cleanup-tree-dump \"dse1\" } } */\n+"}, {"sha": "39fc85e69262d92a50cf49b0acaaef050333c413", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-dse-4.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5635785a6477d146de01022cc4ef7da97a49a894/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dse-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5635785a6477d146de01022cc4ef7da97a49a894/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dse-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dse-4.c?ref=5635785a6477d146de01022cc4ef7da97a49a894", "patch": "@@ -0,0 +1,19 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-dse1\" } */\n+\n+foo( int *a)\n+{\n+  *a = 5;\n+  *a = 3;\n+}\n+\n+\n+\n+\n+/* We should eliminate the first assignment to *p, but not the second.  */\n+/* { dg-final { scan-tree-dump-times \"= 5\" 0 \"dse1\"} } */\n+/* { dg-final { scan-tree-dump-times \"= 3\" 1 \"dse1\"} } */\n+\n+/* { dg-final { cleanup-tree-dump \"dse1\" } } */\n+\n+"}, {"sha": "537a5e57b8484b13a6de101b88f7ba46bdb35235", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-dse-5.c", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5635785a6477d146de01022cc4ef7da97a49a894/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dse-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5635785a6477d146de01022cc4ef7da97a49a894/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dse-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dse-5.c?ref=5635785a6477d146de01022cc4ef7da97a49a894", "patch": "@@ -0,0 +1,33 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-optimized\" } */\n+\n+int x; \n+ \n+int \n+f1 (int i, int j, int k) \n+{ \n+  int *p = k ? &i : &j; \n+  i = 3;\n+  *p = 5; \n+  x = j; \n+} \n+\n+/* The assignment \"i = 3\" is partialy dead.  Our DSE pass doesn't handle\n+   detection of partially dead assignments.\n+\n+   There's two outputs which would indicate that the optimization was\n+   performed.\n+\n+   If we used block copying to detect and eliminate the partially dead\n+   store, then we should see an assignment \"i = 5\" somewhere in the\n+   dump file.\n+\n+   Another approach would be to redirect the path from the true arm\n+   of the first conditional so that it reaches the statement *p = 5\n+   rather than i = 3.  */\n+\n+/* { dg-final { scan-tree-dump-times \"i = 5\" 1 \"optimized\" { xfail *-*-* }} } */\n+/* { dg-final { scan-tree-dump-times \"<L.*>:;\\[\\n\\t \\]*\\\\*p = 5\" 1 \"optimized\" { xfail *-*-*}} } */\n+\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */\n+"}, {"sha": "3d020067ca7d1c98b17b91e9bff524839f10bdb2", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-dse-6.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5635785a6477d146de01022cc4ef7da97a49a894/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dse-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5635785a6477d146de01022cc4ef7da97a49a894/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dse-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dse-6.c?ref=5635785a6477d146de01022cc4ef7da97a49a894", "patch": "@@ -0,0 +1,18 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-dse1\" } */\n+\n+int foo11 (int c)\n+{\n+  static int local1, local2;\n+  local1 = 0;\n+  local2 += c;\n+  local1 = 2;\n+  local2++;\n+  return local1 + local2;\n+}\n+\n+/* There should only be one assignment to local1 and local2.  */\n+/* { dg-final { scan-tree-dump-times \"local1 = \" 1 \"dse1\"} } */\n+/* { dg-final { scan-tree-dump-times \"local2 = \" 1 \"dse1\"} } */\n+\n+/* { dg-final { cleanup-tree-dump \"dse1\" } } */"}, {"sha": "77e4a6246f32f42a07038ae10e169ba09c2c3ee0", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-dse-7.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5635785a6477d146de01022cc4ef7da97a49a894/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dse-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5635785a6477d146de01022cc4ef7da97a49a894/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dse-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dse-7.c?ref=5635785a6477d146de01022cc4ef7da97a49a894", "patch": "@@ -0,0 +1,23 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-dse1\" } */\n+\n+int glob1, glob2;\n+\n+int foo1 (void)\n+{\n+  glob1 = 0;\n+  glob2 = 1;\n+  glob1 = 2;\n+  glob2 = 3;\n+  return glob1 + glob2;\n+}\n+\n+\n+\n+/* There should only be one assignment to glob1 and glob2, the final\n+   return statement should just return a constant.  */\n+/* { dg-final { scan-tree-dump-times \"glob1 = \" 1 \"dse1\"} } */\n+/* { dg-final { scan-tree-dump-times \"glob2 = \" 1 \"dse1\"} } */\n+/* { dg-final { scan-tree-dump-times \"return 5\" 1 \"dse1\"} } */\n+\n+/* { dg-final { cleanup-tree-dump \"dse1\" } } */"}]}