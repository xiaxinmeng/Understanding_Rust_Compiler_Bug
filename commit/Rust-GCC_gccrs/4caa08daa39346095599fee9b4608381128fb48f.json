{"sha": "4caa08daa39346095599fee9b4608381128fb48f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGNhYTA4ZGFhMzkzNDYwOTU1OTlmZWU5YjQ2MDgzODExMjhmYjQ4Zg==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2007-12-12T11:12:39Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2007-12-12T11:12:39Z"}, "message": "gimplify.c (gimplify_modify_expr_rhs): Handle the case when we are assigning from a constant constructor.\n\n        * gimplify.c (gimplify_modify_expr_rhs): Handle the case when we\n        are assigning from a constant constructor.\n        Fix wrapping in function comment.\n\nFrom-SVN: r130788", "tree": {"sha": "152c25d48afd460f70909cee7507677f1f8c0bfa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/152c25d48afd460f70909cee7507677f1f8c0bfa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4caa08daa39346095599fee9b4608381128fb48f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4caa08daa39346095599fee9b4608381128fb48f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4caa08daa39346095599fee9b4608381128fb48f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4caa08daa39346095599fee9b4608381128fb48f/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ee3f344964c9f427c2d63438a627f8755b716e53", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee3f344964c9f427c2d63438a627f8755b716e53", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee3f344964c9f427c2d63438a627f8755b716e53"}], "stats": {"total": 48, "additions": 46, "deletions": 2}, "files": [{"sha": "aa00c5d9b4377deea353eb20f69f586a15a68ea5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4caa08daa39346095599fee9b4608381128fb48f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4caa08daa39346095599fee9b4608381128fb48f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4caa08daa39346095599fee9b4608381128fb48f", "patch": "@@ -1,3 +1,10 @@\n+2007-12-12  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\tPR tree-optimization/32901\n+\t* gimplify.c (gimplify_modify_expr_rhs): Handle the case when we\n+\tare assigning from a constant constructor.\n+\tFix wrapping in function comment.\n+\n 2007-12-12  Andreas Krebbel  <krebbel1@de.ibm.com>\n \n \t* config/s390/s390.c (s390_O_constraint_str): Limit the range"}, {"sha": "54d5c46ec3ec1fea5ab5f5c2dd0c23de0d4f3fe6", "filename": "gcc/gimplify.c", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4caa08daa39346095599fee9b4608381128fb48f/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4caa08daa39346095599fee9b4608381128fb48f/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=4caa08daa39346095599fee9b4608381128fb48f", "patch": "@@ -3470,8 +3470,9 @@ fold_indirect_ref_rhs (tree t)\n   return NULL_TREE;\n }\n \n-/* Subroutine of gimplify_modify_expr to do simplifications of MODIFY_EXPRs\n-   based on the code of the RHS.  We loop for as long as something changes.  */\n+/* Subroutine of gimplify_modify_expr to do simplifications of\n+   MODIFY_EXPRs based on the code of the RHS.  We loop for as long as\n+   something changes.  */\n \n static enum gimplify_status\n gimplify_modify_expr_rhs (tree *expr_p, tree *from_p, tree *to_p, tree *pre_p,\n@@ -3482,6 +3483,18 @@ gimplify_modify_expr_rhs (tree *expr_p, tree *from_p, tree *to_p, tree *pre_p,\n   while (ret != GS_UNHANDLED)\n     switch (TREE_CODE (*from_p))\n       {\n+      case VAR_DECL:\n+\t/* If we're assigning from a constant constructor, move the\n+\t   constructor expression to the RHS of the MODIFY_EXPR.  */\n+\tif (DECL_INITIAL (*from_p)\n+\t    && TYPE_READONLY (TREE_TYPE (*from_p))\n+\t    && TREE_CODE (DECL_INITIAL (*from_p)) == CONSTRUCTOR)\n+\t  {\n+\t    *from_p = DECL_INITIAL (*from_p);\n+\t    ret = GS_OK;\n+\t  }\n+\tret = GS_UNHANDLED;\n+\tbreak;\n       case INDIRECT_REF:\n \t{\n \t  /* If we have code like "}, {"sha": "9102a88556d38b3e92688e6f4d544c12cf2dc69a", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr32901.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4caa08daa39346095599fee9b4608381128fb48f/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr32901.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4caa08daa39346095599fee9b4608381128fb48f/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr32901.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr32901.c?ref=4caa08daa39346095599fee9b4608381128fb48f", "patch": "@@ -0,0 +1,24 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -fdump-tree-gimple\" } */\n+\n+struct foo {\n+        unsigned a1: 1;\n+        unsigned a2: 3;\n+        unsigned : 4;\n+};\n+\n+extern struct foo thefoo;\n+\n+void setup_foo(void)\n+{\n+        const struct foo init = {\n+                .a1 = 1,\n+                .a2 = 5,\n+        };\n+        thefoo = init;\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"thefoo.0 = \\{\\}\" 1 \"gimple\"} } */\n+/* { dg-final { scan-tree-dump-times \"thefoo.0.a1 = 1\" 1 \"gimple\"} } */\n+/* { dg-final { scan-tree-dump-times \"thefoo.0.a2 = 5\" 1 \"gimple\"} } */\n+/* { dg-final { cleanup-tree-dump \"gimple\" } } */"}]}