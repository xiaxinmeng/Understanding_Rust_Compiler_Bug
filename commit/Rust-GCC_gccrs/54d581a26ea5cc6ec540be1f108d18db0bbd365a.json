{"sha": "54d581a26ea5cc6ec540be1f108d18db0bbd365a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTRkNTgxYTI2ZWE1Y2M2ZWM1NDBiZTFmMTA4ZDE4ZGIwYmJkMzY1YQ==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2004-06-21T12:59:58Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2004-06-21T12:59:58Z"}, "message": "fold-const.c (operand_equal_p): Pass flags in recursive calls for binary and relational operations.\n\n\n\t* fold-const.c (operand_equal_p): Pass flags in recursive calls for\n\tbinary and relational operations.  Add support for TRUTH_ANDIF_EXPR,\n\tTRUTH_ORIF_EXPR, TRUTH_AND_EXPR, TRUTH_OR_EXPR and TRUTH_XOR_EXPR.\n\t* tree.c (commutative_tree_code): Also list UNORDERED_EXPR,\n\tORDERED_EXPR, UNEQ_EXPR, LTGT_EXPR, TRUTH_AND_EXPR, TRUTH_OR_EXPR\n\tand TRUTH_XOR_EXPR.\n\nFrom-SVN: r83433", "tree": {"sha": "fbe467313f9d7b88edaeea4235a6c64516615a03", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fbe467313f9d7b88edaeea4235a6c64516615a03"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/54d581a26ea5cc6ec540be1f108d18db0bbd365a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54d581a26ea5cc6ec540be1f108d18db0bbd365a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54d581a26ea5cc6ec540be1f108d18db0bbd365a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54d581a26ea5cc6ec540be1f108d18db0bbd365a/comments", "author": null, "committer": null, "parents": [{"sha": "19aec1956502bdf46a6c859ca0fa7e4666886bca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19aec1956502bdf46a6c859ca0fa7e4666886bca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/19aec1956502bdf46a6c859ca0fa7e4666886bca"}], "stats": {"total": 42, "additions": 39, "deletions": 3}, "files": [{"sha": "6fb2d9e450caa125ffe9102da880f48000f02237", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54d581a26ea5cc6ec540be1f108d18db0bbd365a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54d581a26ea5cc6ec540be1f108d18db0bbd365a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=54d581a26ea5cc6ec540be1f108d18db0bbd365a", "patch": "@@ -1,3 +1,12 @@\n+2004-06-21  Roger Sayle  <roger@eyesopen.com>\n+\n+\t* fold-const.c (operand_equal_p): Pass flags in recursive calls for\n+\tbinary and relational operations.  Add support for TRUTH_ANDIF_EXPR,\n+\tTRUTH_ORIF_EXPR, TRUTH_AND_EXPR, TRUTH_OR_EXPR and TRUTH_XOR_EXPR.\n+\t* tree.c (commutative_tree_code): Also list UNORDERED_EXPR,\n+\tORDERED_EXPR, UNEQ_EXPR, LTGT_EXPR, TRUTH_AND_EXPR, TRUTH_OR_EXPR\n+\tand TRUTH_XOR_EXPR.\n+\n 2004-06-21  Paolo Bonzini  <bonzini@gnu.org>\n \n \t* rtlanal.c (may_trap_p): Mark LTGT as trapping."}, {"sha": "68c9722ea183640f3fa5e4e9d496e9cc15088a28", "filename": "gcc/fold-const.c", "status": "modified", "additions": 23, "deletions": 3, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54d581a26ea5cc6ec540be1f108d18db0bbd365a/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54d581a26ea5cc6ec540be1f108d18db0bbd365a/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=54d581a26ea5cc6ec540be1f108d18db0bbd365a", "patch": "@@ -2454,9 +2454,10 @@ operand_equal_p (tree arg0, tree arg1, unsigned int flags)\n \n     case '<':\n     case '2':\n-      if (operand_equal_p (TREE_OPERAND (arg0, 0), TREE_OPERAND (arg1, 0), 0)\n-\t  && operand_equal_p (TREE_OPERAND (arg0, 1), TREE_OPERAND (arg1, 1),\n-\t\t\t      0))\n+      if (operand_equal_p (TREE_OPERAND (arg0, 0),\n+\t\t\t   TREE_OPERAND (arg1, 0), flags)\n+\t  && operand_equal_p (TREE_OPERAND (arg0, 1),\n+\t\t\t      TREE_OPERAND (arg1, 1), flags))\n \treturn 1;\n \n       /* For commutative ops, allow the other order.  */\n@@ -2506,6 +2507,25 @@ operand_equal_p (tree arg0, tree arg1, unsigned int flags)\n \t  return operand_equal_p (TREE_OPERAND (arg0, 0),\n \t\t\t\t  TREE_OPERAND (arg1, 0), flags);\n \n+\tcase TRUTH_ANDIF_EXPR:\n+\tcase TRUTH_ORIF_EXPR:\n+\t  return operand_equal_p (TREE_OPERAND (arg0, 0),\n+\t\t\t\t  TREE_OPERAND (arg1, 0), flags)\n+\t\t && operand_equal_p (TREE_OPERAND (arg0, 1),\n+\t\t\t\t     TREE_OPERAND (arg1, 1), flags);\n+\n+\tcase TRUTH_AND_EXPR:\n+\tcase TRUTH_OR_EXPR:\n+\tcase TRUTH_XOR_EXPR:\n+\t  return (operand_equal_p (TREE_OPERAND (arg0, 0),\n+\t\t\t\t   TREE_OPERAND (arg1, 0), flags)\n+\t\t  && operand_equal_p (TREE_OPERAND (arg0, 1),\n+\t\t\t\t      TREE_OPERAND (arg1, 1), flags))\n+\t\t || (operand_equal_p (TREE_OPERAND (arg0, 0),\n+\t\t\t\t      TREE_OPERAND (arg1, 1), flags)\n+\t\t     && operand_equal_p (TREE_OPERAND (arg0, 1),\n+\t\t\t\t\t TREE_OPERAND (arg1, 0), flags));\n+\n \tcase RTL_EXPR:\n \t  return rtx_equal_p (RTL_EXPR_RTL (arg0), RTL_EXPR_RTL (arg1));\n "}, {"sha": "fb1f4d77b6955520e5c8b6e1cf01994fc7f76bca", "filename": "gcc/tree.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54d581a26ea5cc6ec540be1f108d18db0bbd365a/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54d581a26ea5cc6ec540be1f108d18db0bbd365a/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=54d581a26ea5cc6ec540be1f108d18db0bbd365a", "patch": "@@ -3792,6 +3792,13 @@ commutative_tree_code (enum tree_code code)\n     case BIT_AND_EXPR:\n     case NE_EXPR:\n     case EQ_EXPR:\n+    case UNORDERED_EXPR:\n+    case ORDERED_EXPR:\n+    case UNEQ_EXPR:\n+    case LTGT_EXPR:\n+    case TRUTH_AND_EXPR:\n+    case TRUTH_XOR_EXPR:\n+    case TRUTH_OR_EXPR:\n       return true;\n \n     default:"}]}