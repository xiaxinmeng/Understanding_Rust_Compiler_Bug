{"sha": "bab15911661814606d18639ef53597ea9a843afa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmFiMTU5MTE2NjE4MTQ2MDZkMTg2MzllZjUzNTk3ZWE5YTg0M2FmYQ==", "commit": {"author": {"name": "Yannick Moy", "email": "moy@adacore.com", "date": "2019-08-14T09:50:55Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-08-14T09:50:55Z"}, "message": "[Ada] Fix failing assertions on SPARK elaboration\n\nChecking of SPARK elaboration rules may lead to assertion failures on a\ncompiler built with assertions. Now fixed.\n\nThere is no impact on compilation.\n\n2019-08-14  Yannick Moy  <moy@adacore.com>\n\ngcc/ada/\n\n\t* sem_disp.adb (Check_Dispatching_Operation): Update assertion\n\tfor the separate declarations created in GNATprove mode.\n\t* sem_disp.ads (Is_Overriding_Subprogram): Update comment.\n\t* sem_elab.adb (SPARK_Processor): Fix test for checking of\n\toverriding primitives.\n\nFrom-SVN: r274448", "tree": {"sha": "c532ee06556080523abebe3b9b90a0a642e942e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c532ee06556080523abebe3b9b90a0a642e942e3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bab15911661814606d18639ef53597ea9a843afa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bab15911661814606d18639ef53597ea9a843afa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bab15911661814606d18639ef53597ea9a843afa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bab15911661814606d18639ef53597ea9a843afa/comments", "author": {"login": "yannickmoy", "id": 859440, "node_id": "MDQ6VXNlcjg1OTQ0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/859440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yannickmoy", "html_url": "https://github.com/yannickmoy", "followers_url": "https://api.github.com/users/yannickmoy/followers", "following_url": "https://api.github.com/users/yannickmoy/following{/other_user}", "gists_url": "https://api.github.com/users/yannickmoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/yannickmoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yannickmoy/subscriptions", "organizations_url": "https://api.github.com/users/yannickmoy/orgs", "repos_url": "https://api.github.com/users/yannickmoy/repos", "events_url": "https://api.github.com/users/yannickmoy/events{/privacy}", "received_events_url": "https://api.github.com/users/yannickmoy/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4a6db9fd05bff1cd7a487eb87a4a0413c3c2301a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a6db9fd05bff1cd7a487eb87a4a0413c3c2301a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a6db9fd05bff1cd7a487eb87a4a0413c3c2301a"}], "stats": {"total": 27, "additions": 23, "deletions": 4}, "files": [{"sha": "b8f85c459989237e04ddd576c0f02256b4e915da", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bab15911661814606d18639ef53597ea9a843afa/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bab15911661814606d18639ef53597ea9a843afa/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=bab15911661814606d18639ef53597ea9a843afa", "patch": "@@ -1,3 +1,11 @@\n+2019-08-14  Yannick Moy  <moy@adacore.com>\n+\n+\t* sem_disp.adb (Check_Dispatching_Operation): Update assertion\n+\tfor the separate declarations created in GNATprove mode.\n+\t* sem_disp.ads (Is_Overriding_Subprogram): Update comment.\n+\t* sem_elab.adb (SPARK_Processor): Fix test for checking of\n+\toverriding primitives.\n+\n 2019-08-14  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* inline.adb (Add_Inlined_Body): Tweak comments."}, {"sha": "ee8f4431da9b0e8a7ea47f7d087b721244d0e001", "filename": "gcc/ada/sem_disp.adb", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bab15911661814606d18639ef53597ea9a843afa/gcc%2Fada%2Fsem_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bab15911661814606d18639ef53597ea9a843afa/gcc%2Fada%2Fsem_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_disp.adb?ref=bab15911661814606d18639ef53597ea9a843afa", "patch": "@@ -1149,6 +1149,10 @@ package body Sem_Disp is\n          --     overridden primitives. The wrappers include checks on these\n          --     modified conditions. (AI12-113).\n \n+         --  5. Declarations built for subprograms without separate spec which\n+         --     are eligible for inlining in GNATprove (inside\n+         --     Sem_Ch6.Analyze_Subprogram_Body_Helper).\n+\n          if Present (Old_Subp)\n            and then Present (Overridden_Operation (Subp))\n            and then Is_Dispatching_Operation (Old_Subp)\n@@ -1168,7 +1172,9 @@ package body Sem_Disp is\n               or else Get_TSS_Name (Subp) = TSS_Stream_Read\n               or else Get_TSS_Name (Subp) = TSS_Stream_Write\n \n-              or else Present (Contract (Overridden_Operation (Subp))));\n+              or else Present (Contract (Overridden_Operation (Subp)))\n+\n+              or else GNATprove_Mode);\n \n             Check_Controlling_Formals (Tagged_Type, Subp);\n             Override_Dispatching_Operation (Tagged_Type, Old_Subp, Subp);"}, {"sha": "fd399a319729ff2c2894fc3503dec473ad03a363", "filename": "gcc/ada/sem_disp.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bab15911661814606d18639ef53597ea9a843afa/gcc%2Fada%2Fsem_disp.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bab15911661814606d18639ef53597ea9a843afa/gcc%2Fada%2Fsem_disp.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_disp.ads?ref=bab15911661814606d18639ef53597ea9a843afa", "patch": "@@ -151,7 +151,8 @@ package Sem_Disp is\n    --  Returns True if E is a null procedure that is an interface primitive\n \n    function Is_Overriding_Subprogram (E : Entity_Id) return Boolean;\n-   --  Returns True if E is an overriding subprogram\n+   --  Returns True if E is an overriding subprogram and False otherwise, in\n+   --  particular for an inherited subprogram.\n \n    function Is_Tag_Indeterminate (N : Node_Id) return Boolean;\n    --  Returns true if the expression N is tag-indeterminate. An expression"}, {"sha": "714a9f7221fcba7ca2ffc3cebe078e1a901e6e60", "filename": "gcc/ada/sem_elab.adb", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bab15911661814606d18639ef53597ea9a843afa/gcc%2Fada%2Fsem_elab.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bab15911661814606d18639ef53597ea9a843afa/gcc%2Fada%2Fsem_elab.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_elab.adb?ref=bab15911661814606d18639ef53597ea9a843afa", "patch": "@@ -49,6 +49,7 @@ with Sem_Aux;  use Sem_Aux;\n with Sem_Cat;  use Sem_Cat;\n with Sem_Ch7;  use Sem_Ch7;\n with Sem_Ch8;  use Sem_Ch8;\n+with Sem_Disp; use Sem_Disp;\n with Sem_Prag; use Sem_Prag;\n with Sem_Util; use Sem_Util;\n with Sinfo;    use Sinfo;\n@@ -15233,9 +15234,12 @@ package body Sem_Elab is\n          begin\n             --  Nothing to do for predefined primitives because they are\n             --  artifacts of tagged type expansion and cannot override source\n-            --  primitives.\n+            --  primitives. Nothing to do as well for inherited primitives as\n+            --  the check concerns overridding ones.\n \n-            if Is_Predefined_Dispatching_Operation (Prim) then\n+            if Is_Predefined_Dispatching_Operation (Prim)\n+              or else not Is_Overriding_Subprogram (Prim)\n+            then\n                return;\n             end if;\n "}]}