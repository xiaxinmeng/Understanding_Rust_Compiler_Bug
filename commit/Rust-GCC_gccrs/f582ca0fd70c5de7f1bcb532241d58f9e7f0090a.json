{"sha": "f582ca0fd70c5de7f1bcb532241d58f9e7f0090a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjU4MmNhMGZkNzBjNWRlN2YxYmNiNTMyMjQxZDU4ZjllN2YwMDkwYQ==", "commit": {"author": {"name": "Mihail Ionescu", "email": "mihail.ionescu@arm.com", "date": "2020-03-17T12:39:39Z"}, "committer": {"name": "Mihail Ionescu", "email": "mihail.ionescu@arm.com", "date": "2020-03-17T12:44:46Z"}, "message": "[GCC][PATCH][ARM] Add multilib mapping for Armv8.1-M+MVE with -mfloat-abi=hard\n\nThis patch adds a new multilib for armv8.1-m.main+mve with hard float abi. For\narmv8.1-m.main+mve soft and softfp, the v8-M multilibs will be reused.\nThe following mappings are also updated:\n\"-mfloat-abi=hard -march=armv8.1-m.main+mve.fp -> armv8-m.main+fp/hard\"\n\"-mfloat-abi=softfp -march=armv8.1-m.main+mve.fp -> armv8-m.main+fp/softfp\"\n\"-mfloat-abi=soft -march=armv8.1-m.main+mve.fp -> armv8-m.main/nofp\"\ngcc/ChangeLog:\n\n2020-03-17  Mihail Ionescu  <mihail.ionescu@arm.com>\n\n\t* config/arm/t-rmprofile: create new multilib for\n\tarmv8.1-m.main+mve hard float and reuse v8-m.main ones for\n\tv8.1-m.main+mve .\n\ngcc/testsuite/ChangeLog:\n\n2020-03-17  Mihail Ionescu  <mihail.ionescu@arm.com>\n\n\t* gcc.target/arm/multilib.exp: Add new v8.1-M entry.\n\nlibgcc/ChangLog:\n\n2020-03-17  Mihail Ionescu  <mihail.ionescu@arm.com>\n\n\t* config/arm/t-arm: Do not compile cmse_nonsecure_call.S for v8.1-m.", "tree": {"sha": "9b3dd7af40ca1df3f383e429fda0122175d7c509", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9b3dd7af40ca1df3f383e429fda0122175d7c509"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f582ca0fd70c5de7f1bcb532241d58f9e7f0090a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f582ca0fd70c5de7f1bcb532241d58f9e7f0090a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f582ca0fd70c5de7f1bcb532241d58f9e7f0090a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f582ca0fd70c5de7f1bcb532241d58f9e7f0090a/comments", "author": null, "committer": null, "parents": [{"sha": "a9a437ffc4269650e34af92c4fb095b7ed98f94a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9a437ffc4269650e34af92c4fb095b7ed98f94a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a9a437ffc4269650e34af92c4fb095b7ed98f94a"}], "stats": {"total": 33, "additions": 27, "deletions": 6}, "files": [{"sha": "42bad0c7a00b81b8d81e3de6aabd5cf762b632f4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f582ca0fd70c5de7f1bcb532241d58f9e7f0090a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f582ca0fd70c5de7f1bcb532241d58f9e7f0090a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f582ca0fd70c5de7f1bcb532241d58f9e7f0090a", "patch": "@@ -1,3 +1,9 @@\n+2020-03-17  Mihail Ionescu  <mihail.ionescu@arm.com>\n+\n+\t* config/arm/t-rmprofile: create new multilib for\n+\tarmv8.1-m.main+mve hard float and reuse v8-m.main ones for\n+\tv8.1-m.main+mve.\n+\n 2020-03-17  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/94015"}, {"sha": "16e368f25cc2e3ad341adc2752120ad0defdf2a4", "filename": "gcc/config/arm/t-rmprofile", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f582ca0fd70c5de7f1bcb532241d58f9e7f0090a/gcc%2Fconfig%2Farm%2Ft-rmprofile", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f582ca0fd70c5de7f1bcb532241d58f9e7f0090a/gcc%2Fconfig%2Farm%2Ft-rmprofile", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ft-rmprofile?ref=f582ca0fd70c5de7f1bcb532241d58f9e7f0090a", "patch": "@@ -27,8 +27,8 @@\n \n # Arch and FPU variants to build libraries with\n \n-MULTI_ARCH_OPTS_RM\t= march=armv6s-m/march=armv7-m/march=armv7e-m/march=armv7e-m+fp/march=armv7e-m+fp.dp/march=armv8-m.base/march=armv8-m.main/march=armv8-m.main+fp/march=armv8-m.main+fp.dp\n-MULTI_ARCH_DIRS_RM\t= v6-m v7-m v7e-m v7e-m+fp v7e-m+dp v8-m.base v8-m.main v8-m.main+fp v8-m.main+dp\n+MULTI_ARCH_OPTS_RM\t= march=armv6s-m/march=armv7-m/march=armv7e-m/march=armv7e-m+fp/march=armv7e-m+fp.dp/march=armv8-m.base/march=armv8-m.main/march=armv8-m.main+fp/march=armv8-m.main+fp.dp/march=armv8.1-m.main+mve\n+MULTI_ARCH_DIRS_RM\t= v6-m v7-m v7e-m v7e-m+fp v7e-m+dp v8-m.base v8-m.main v8-m.main+fp v8-m.main+dp v8.1-m.main+mve\n \n # Base M-profile (no fp)\n MULTILIB_REQUIRED\t+= mthumb/march=armv6s-m/mfloat-abi=soft\n@@ -48,8 +48,7 @@ MULTILIB_REQUIRED\t+= mthumb/march=armv8-m.main+fp/mfloat-abi=hard\n MULTILIB_REQUIRED\t+= mthumb/march=armv8-m.main+fp/mfloat-abi=softfp\n MULTILIB_REQUIRED\t+= mthumb/march=armv8-m.main+fp.dp/mfloat-abi=hard\n MULTILIB_REQUIRED\t+= mthumb/march=armv8-m.main+fp.dp/mfloat-abi=softfp\n-\n-\n+MULTILIB_REQUIRED\t+= mthumb/march=armv8.1-m.main+mve/mfloat-abi=hard\n \n # Arch Matches\n MULTILIB_MATCHES\t+= march?armv6s-m=march?armv6-m\n@@ -66,12 +65,14 @@ MULTILIB_MATCHES\t+= march?armv7e-m+fp=march?armv7e-m+fpv5\n MULTILIB_REUSE\t\t+= $(foreach ARCH, armv6s-m armv7-m armv7e-m armv8-m\\.base armv8-m\\.main, \\\n \t\t\t     mthumb/march.$(ARCH)/mfloat-abi.soft=mthumb/march.$(ARCH)/mfloat-abi.softfp)\n \n+\n # Map v8.1-M to v8-M.\n MULTILIB_MATCHES\t+= march?armv8-m.main=march?armv8.1-m.main\n MULTILIB_MATCHES\t+= march?armv8-m.main=march?armv8.1-m.main+dsp\n-MULTILIB_MATCHES\t+= march?armv8-m.main=march?armv8.1-m.main+mve\n+MULTILIB_REUSE\t\t+= mthumb/march.armv8-m\\.main/mfloat-abi.soft=mthumb/march.armv8\\.1-m\\.main+mve/mfloat-abi.soft\n+MULTILIB_REUSE\t\t+= mthumb/march.armv8-m\\.main/mfloat-abi.soft=mthumb/march.armv8\\.1-m\\.main+mve/mfloat-abi.softfp\n \n-v8_1m_sp_variants = +fp +dsp+fp +mve.fp\n+v8_1m_sp_variants = +fp +dsp+fp +mve.fp +fp+mve\n v8_1m_dp_variants = +fp.dp +dsp+fp.dp +fp.dp+mve +fp.dp+mve.fp\n \n # Map all v8.1-m.main FP sp variants down to v8-m."}, {"sha": "acf982f7b15207497e2e3d1450078835c9ba6ac3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f582ca0fd70c5de7f1bcb532241d58f9e7f0090a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f582ca0fd70c5de7f1bcb532241d58f9e7f0090a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f582ca0fd70c5de7f1bcb532241d58f9e7f0090a", "patch": "@@ -1,3 +1,7 @@\n+2020-03-17  Mihail Ionescu  <mihail.ionescu@arm.com>\n+\n+\t* gcc.target/arm/multilib.exp: Add new v8.1-M entry.\n+\n 2020-03-17  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/94015"}, {"sha": "f67a92a9201fd1c47d02cf68aa60e2ad6e3cf2a1", "filename": "gcc/testsuite/gcc.target/arm/multilib.exp", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f582ca0fd70c5de7f1bcb532241d58f9e7f0090a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmultilib.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f582ca0fd70c5de7f1bcb532241d58f9e7f0090a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmultilib.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmultilib.exp?ref=f582ca0fd70c5de7f1bcb532241d58f9e7f0090a", "patch": "@@ -814,6 +814,9 @@ if {[multilib_config \"rmprofile\"] } {\n \t{-march=armv8.1-m.main+mve.fp -mfpu=auto -mfloat-abi=soft} \"thumb/v8-m.main/nofp\"\n \t{-march=armv8.1-m.main+mve -mfpu=auto -mfloat-abi=softfp} \"thumb/v8-m.main/nofp\"\n \t{-march=armv8.1-m.main+mve.fp -mfpu=auto -mfloat-abi=softfp} \"thumb/v8-m.main+fp/softfp\"\n+\t{-march=armv8.1-m.main+mve -mfpu=auto -mfloat-abi=hard} \"thumb/v8.1-m.main+mve/hard\"\n+\t{-march=armv8.1-m.main+mve+fp -mfpu=auto -mfloat-abi=hard} \"thumb/v8-m.main+fp/hard\"\n+\t{-march=armv8.1-m.main+mve+fp -mfpu=auto -mfloat-abi=softfp} \"thumb/v8-m.main+fp/softfp\"\n \t{-march=armv8.1-m.main+mve.fp -mfpu=auto -mfloat-abi=hard} \"thumb/v8-m.main+fp/hard\"\n \t{-march=armv8.1-m.main+mve+fp.dp -mfpu=auto -mfloat-abi=soft} \"thumb/v8-m.main/nofp\"\n \t{-march=armv8.1-m.main+mve.fp+fp.dp -mfpu=auto -mfloat-abi=soft} \"thumb/v8-m.main/nofp\""}, {"sha": "836a641326bf8c0beaf20ed6500dc9c25ea52af1", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f582ca0fd70c5de7f1bcb532241d58f9e7f0090a/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f582ca0fd70c5de7f1bcb532241d58f9e7f0090a/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=f582ca0fd70c5de7f1bcb532241d58f9e7f0090a", "patch": "@@ -1,3 +1,7 @@\n+2020-03-17  Mihail Ionescu  <mihail.ionescu@arm.com>\n+\n+\t* config/arm/t-arm: Do not compile cmse_nonsecure_call.S for v8.1-m.\n+\n 2020-03-04  Andreas Krebbel  <krebbel@linux.ibm.com>\n \n \t* config.host: Include the new makefile fragment."}, {"sha": "364f40ebe7f9468d3b0686056e40ff3300f19a98", "filename": "libgcc/config/arm/t-arm", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f582ca0fd70c5de7f1bcb532241d58f9e7f0090a/libgcc%2Fconfig%2Farm%2Ft-arm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f582ca0fd70c5de7f1bcb532241d58f9e7f0090a/libgcc%2Fconfig%2Farm%2Ft-arm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Farm%2Ft-arm?ref=f582ca0fd70c5de7f1bcb532241d58f9e7f0090a", "patch": "@@ -3,15 +3,18 @@ LIB1ASMFUNCS = _thumb1_case_sqi _thumb1_case_uqi _thumb1_case_shi \\\n \t_thumb1_case_uhi _thumb1_case_si _speculation_barrier\n \n HAVE_CMSE:=$(findstring __ARM_FEATURE_CMSE,$(shell $(gcc_compile_bare) -dM -E - </dev/null))\n+HAVE_V81M:=$(findstring armv8.1-m.main,$(gcc_compile_bare))\n ifeq ($(shell $(gcc_compile_bare) -E -mcmse - </dev/null >/dev/null 2>/dev/null; echo $?),0)\n CMSE_OPTS:=-mcmse\n endif\n \n ifdef HAVE_CMSE\n+ifndef HAVE_V81M\n libgcc-objects += cmse.o cmse_nonsecure_call.o\n \n cmse.o: $(srcdir)/config/arm/cmse.c\n \t$(gcc_compile) -c $(CMSE_OPTS) $<\n cmse_nonsecure_call.o: $(srcdir)/config/arm/cmse_nonsecure_call.S\n \t\t       $(gcc_compile) -c $<\n endif\n+endif"}]}