{"sha": "5affe17f859a0857b9d9c7c638f1e4e3939d1172", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWFmZmUxN2Y4NTlhMDg1N2I5ZDljN2M2MzhmMWU0ZTM5MzlkMTE3Mg==", "commit": {"author": {"name": "Abderrazek Zaafrani", "email": "a.zaafrani@samsung.com", "date": "2015-10-27T15:58:05Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2015-10-27T15:58:05Z"}, "message": "isl schedule tree\n\nUse isl_schedule_node instead of isl_band_list for isl-0.15.\nPasses regtest and bootstrap for isl-0.15 and isl-0.12.2 on x86_64-linux.\n\ngcc/ChangeLog:\n\n        * graphite-optimize-isl.c (get_schedule_for_node_st): New callback\n          function to schedule based on isl_schedule_node.\n        (get_schedule_map_st): New schedule optimizer based on isl_schedule_node.\n        (scop_get_domains): New. Return the isl_union_set containing the domains of all the pbbs.\n        (optimize_isl): Call the new function get_schedule_map_st for isl-0.15\n\ngcc/testsuite/ChangeLog:\n\n        * gcc.dg/graphite/block-0.c: Changed to match pattern.\n        * gcc.dg/graphite/interchange-1.c: Same.\n        * gcc.dg/graphite/interchange-10.c: Same.\n        * gcc.dg/graphite/interchange-11.c: Same.\n        * gcc.dg/graphite/interchange-13.c: Same.\n        * gcc.dg/graphite/interchange-3.c: Same.\n        * gcc.dg/graphite/interchange-4.c: Same.\n        * gcc.dg/graphite/interchange-7.c: Same.\n        * gcc.dg/graphite/interchange-9.c: Same.\n        * gcc.dg/graphite/uns-interchange-9.c: Same.\n        * gfortran.dg/graphite/interchange-3.f90: Same.\n\nCo-Authored-By: Aditya Kumar <aditya.k7@samsung.com>\n\nFrom-SVN: r229445", "tree": {"sha": "704eb392cf7852a349580c7e7df9f4a2c6ea12bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/704eb392cf7852a349580c7e7df9f4a2c6ea12bd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5affe17f859a0857b9d9c7c638f1e4e3939d1172", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5affe17f859a0857b9d9c7c638f1e4e3939d1172", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5affe17f859a0857b9d9c7c638f1e4e3939d1172", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5affe17f859a0857b9d9c7c638f1e4e3939d1172/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "55015e590fc5f020107c467ae62166f5ec10a52b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55015e590fc5f020107c467ae62166f5ec10a52b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55015e590fc5f020107c467ae62166f5ec10a52b"}], "stats": {"total": 150, "additions": 129, "deletions": 21}, "files": [{"sha": "6fda3df1e0ec791d046a69817ca28f4893f59af7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5affe17f859a0857b9d9c7c638f1e4e3939d1172/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5affe17f859a0857b9d9c7c638f1e4e3939d1172/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5affe17f859a0857b9d9c7c638f1e4e3939d1172", "patch": "@@ -1,3 +1,12 @@\n+2015-10-27  Abderrazek Zaafrani  <a.zaafrani@samsung.com>\n+\t    Aditya Kumar  <aditya.k7@samsung.com>\n+\n+\t* graphite-optimize-isl.c (get_schedule_for_node_st): New callback\n+\t  function to schedule based on isl_schedule_node.\n+\t(get_schedule_map_st): New schedule optimizer based on isl_schedule_node.\n+\t(scop_get_domains): New. Return the isl_union_set containing the domains of all the pbbs.\n+\t(optimize_isl): Call the new function get_schedule_map_st for isl-0.15\n+\n 2015-10-27  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR target/67215"}, {"sha": "53355bb57dcb5328513f3ad545cc3ee9fa49b9b6", "filename": "gcc/graphite-optimize-isl.c", "status": "modified", "additions": 89, "deletions": 9, "changes": 98, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5affe17f859a0857b9d9c7c638f1e4e3939d1172/gcc%2Fgraphite-optimize-isl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5affe17f859a0857b9d9c7c638f1e4e3939d1172/gcc%2Fgraphite-optimize-isl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-optimize-isl.c?ref=5affe17f859a0857b9d9c7c638f1e4e3939d1172", "patch": "@@ -34,6 +34,9 @@ along with GCC; see the file COPYING3.  If not see\n #include <isl/aff.h>\n #include <isl/options.h>\n #include <isl/ctx.h>\n+#ifdef HAVE_ISL_OPTIONS_SET_SCHEDULE_SERIALIZE_SCCS\n+#include <isl/schedule_node.h>\n+#endif\n \n #include \"system.h\"\n #include \"coretypes.h\"\n@@ -50,20 +53,78 @@ along with GCC; see the file COPYING3.  If not see\n #include \"params.h\"\n #include \"dumpfile.h\"\n \n-static isl_union_set *\n-scop_get_domains (scop_p scop ATTRIBUTE_UNUSED)\n+#ifdef HAVE_ISL_OPTIONS_SET_SCHEDULE_SERIALIZE_SCCS\n+\n+/* get_schedule_for_node_st - Improve schedule for the schedule node.\n+   Only Simple loop tiling is considered.  */\n+\n+static __isl_give isl_schedule_node *\n+get_schedule_for_node_st (__isl_take isl_schedule_node *node, void *user)\n {\n-  int i;\n-  poly_bb_p pbb;\n-  isl_space *space = isl_set_get_space (scop->param_context);\n-  isl_union_set *res = isl_union_set_empty (space);\n+  if (user)\n+    return node;\n \n-  FOR_EACH_VEC_ELT (scop->pbbs, i, pbb)\n-    res = isl_union_set_add_set (res, isl_set_copy (pbb->domain));\n+  if (isl_schedule_node_get_type (node) != isl_schedule_node_band\n+      || isl_schedule_node_n_children (node) != 1)\n+    return node;\n+\n+  isl_space *space = isl_schedule_node_band_get_space (node);\n+  unsigned dims = isl_space_dim (space, isl_dim_set);\n+  isl_schedule_node *child = isl_schedule_node_get_child (node, 0);\n+  isl_schedule_node_type type = isl_schedule_node_get_type (child);\n+  isl_space_free (space);\n+  isl_schedule_node_free (child);\n+\n+  if (type != isl_schedule_node_leaf)\n+    return node;\n+\n+  if (dims <= 1 || !isl_schedule_node_band_get_permutable (node))\n+    {\n+      if (dump_file && dump_flags)\n+\tfprintf (dump_file, \"not tiled\\n\");\n+      return node;\n+    }\n+\n+  /* Tile loops.  */\n+  space = isl_schedule_node_band_get_space (node);\n+  isl_multi_val *sizes = isl_multi_val_zero (space);\n+  long tile_size = PARAM_VALUE (PARAM_LOOP_BLOCK_TILE_SIZE);\n+  isl_ctx *ctx = isl_schedule_node_get_ctx (node);\n+\n+  for (unsigned i = 0; i < dims; i++)\n+    {\n+      sizes = isl_multi_val_set_val (sizes, i,\n+\t\t\t\t     isl_val_int_from_si (ctx, tile_size));\n+      if (dump_file && dump_flags)\n+\tfprintf (dump_file, \"tiled by %ld\\n\", tile_size);\n+    }\n+\n+  node = isl_schedule_node_band_tile (node, sizes);\n+  node = isl_schedule_node_child (node, 0);\n \n-  return res;\n+  return node;\n }\n \n+/* get_schedule_map_st - Improve the schedule by performing other loop\n+   optimizations. _st ending is for schedule tree version of this\n+   function (see get_schedule_map below for the band forest version).\n+\n+   Do a depth-first post-order traversal of the nodes in a schedule\n+   tree and apply get_schedule_for_node_st on them to improve the schedule.\n+  */\n+\n+static __isl_give isl_union_map *\n+get_schedule_map_st (__isl_keep isl_schedule *schedule)\n+{\n+\n+  schedule = isl_schedule_map_schedule_node_bottom_up (schedule,\n+\t\t\t\t\t\t       get_schedule_for_node_st,\n+\t\t\t\t\t\t       NULL);\n+  isl_union_map *schedule_map = isl_schedule_get_map (schedule);\n+  return schedule_map;\n+}\n+#else\n+\n /* get_tile_map - Create a map that describes a n-dimensonal tiling.\n \n    get_tile_map creates a map from a n-dimensional scattering space into an\n@@ -255,6 +316,7 @@ get_schedule_map (isl_schedule *schedule)\n   isl_band_list_free (bandList);\n   return schedule_map;\n }\n+#endif\n \n static isl_stat\n get_single_map (__isl_take isl_map *map, void *user)\n@@ -285,6 +347,20 @@ apply_schedule_map_to_scop (scop_p scop, isl_union_map *schedule_map)\n     }\n }\n \n+static isl_union_set *\n+scop_get_domains (scop_p scop ATTRIBUTE_UNUSED)\n+{\n+  int i;\n+  poly_bb_p pbb;\n+  isl_space *space = isl_set_get_space (scop->param_context);\n+  isl_union_set *res = isl_union_set_empty (space);\n+\n+  FOR_EACH_VEC_ELT (scop->pbbs, i, pbb)\n+    res = isl_union_set_add_set (res, isl_set_copy (pbb->domain));\n+\n+    return res;\n+}\n+\n static const int CONSTANT_BOUND = 20;\n \n /* Compute the schedule for SCOP based on its parameters, domain and set of\n@@ -360,7 +436,11 @@ optimize_isl (scop_p scop)\n     return false;\n #endif\n \n+#ifdef HAVE_ISL_OPTIONS_SET_SCHEDULE_SERIALIZE_SCCS\n+  isl_union_map *schedule_map = get_schedule_map_st (schedule);\n+#else\n   isl_union_map *schedule_map = get_schedule_map (schedule);\n+#endif\n   apply_schedule_map_to_scop (scop, schedule_map);\n \n   isl_schedule_free (schedule);"}, {"sha": "fc176e37e05df75a2149828e3ed23b7479e9b085", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5affe17f859a0857b9d9c7c638f1e4e3939d1172/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5affe17f859a0857b9d9c7c638f1e4e3939d1172/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5affe17f859a0857b9d9c7c638f1e4e3939d1172", "patch": "@@ -1,3 +1,18 @@\n+2015-10-27  Abderrazek Zaafrani  <a.zaafrani@samsung.com>\n+\t    Aditya Kumar  <aditya.k7@samsung.com>\n+\n+\t* gcc.dg/graphite/block-0.c: Changed to match pattern.\n+\t* gcc.dg/graphite/interchange-1.c: Same.\n+\t* gcc.dg/graphite/interchange-10.c: Same.\n+\t* gcc.dg/graphite/interchange-11.c: Same.\n+\t* gcc.dg/graphite/interchange-13.c: Same.\n+\t* gcc.dg/graphite/interchange-3.c: Same.\n+\t* gcc.dg/graphite/interchange-4.c: Same.\n+\t* gcc.dg/graphite/interchange-7.c: Same.\n+\t* gcc.dg/graphite/interchange-9.c: Same.\n+\t* gcc.dg/graphite/uns-interchange-9.c: Same.\n+\t* gfortran.dg/graphite/interchange-3.f90: Same.\n+\n 2015-10-27  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR target/67215"}, {"sha": "2a9f7482d758e957f5a2b88daef1b915d348558c", "filename": "gcc/testsuite/gcc.dg/graphite/block-0.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5affe17f859a0857b9d9c7c638f1e4e3939d1172/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fblock-0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5affe17f859a0857b9d9c7c638f1e4e3939d1172/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fblock-0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fblock-0.c?ref=5affe17f859a0857b9d9c7c638f1e4e3939d1172", "patch": "@@ -42,4 +42,4 @@ main (void)\n   return 0;\n }\n \n-/* { dg-final { scan-tree-dump-times \"not tiled\" 2 \"graphite\" } } */\n+/* { dg-final { scan-tree-dump \"not tiled\" \"graphite\" } } */"}, {"sha": "44b5ae03a572dddc6c046abc260625d8bf2d196f", "filename": "gcc/testsuite/gcc.dg/graphite/interchange-1.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5affe17f859a0857b9d9c7c638f1e4e3939d1172/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Finterchange-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5affe17f859a0857b9d9c7c638f1e4e3939d1172/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Finterchange-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Finterchange-1.c?ref=5affe17f859a0857b9d9c7c638f1e4e3939d1172", "patch": "@@ -49,4 +49,9 @@ main (void)\n   return 0;\n }\n \n-/* { dg-final { scan-tree-dump \"tiled by\" \"graphite\" } } */\n+/*FIXME: Between ISL-0.12 and ISL-0.15 the schedule optimizer needs to print\n+something canonical so that it can be checked in the test.  The final code\n+generated by both are same in this case but the messaged printed are\n+not consistent.  */\n+\n+/* { dg-final { scan-tree-dump \"tiled\" \"graphite\" } } */"}, {"sha": "a955644dea988d21c9019166c6edc5c89db3a725", "filename": "gcc/testsuite/gcc.dg/graphite/interchange-10.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5affe17f859a0857b9d9c7c638f1e4e3939d1172/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Finterchange-10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5affe17f859a0857b9d9c7c638f1e4e3939d1172/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Finterchange-10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Finterchange-10.c?ref=5affe17f859a0857b9d9c7c638f1e4e3939d1172", "patch": "@@ -46,4 +46,4 @@ main (void)\n   return 0;\n }\n \n-/* { dg-final { scan-tree-dump \"tiled by\" \"graphite\" } } */\n+/* { dg-final { scan-tree-dump \"tiled\" \"graphite\" } } */"}, {"sha": "61028225fc416fe19c35b49d914afe3ac0d7f994", "filename": "gcc/testsuite/gcc.dg/graphite/interchange-11.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5affe17f859a0857b9d9c7c638f1e4e3939d1172/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Finterchange-11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5affe17f859a0857b9d9c7c638f1e4e3939d1172/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Finterchange-11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Finterchange-11.c?ref=5affe17f859a0857b9d9c7c638f1e4e3939d1172", "patch": "@@ -46,4 +46,4 @@ main (void)\n   return 0;\n }\n \n-/* { dg-final { scan-tree-dump \"tiled by\" \"graphite\" } } */\n+/* { dg-final { scan-tree-dump \"tiled\" \"graphite\" } } */"}, {"sha": "3398de26c24e7991ef03fc6fc9a8b1d03b823dc4", "filename": "gcc/testsuite/gcc.dg/graphite/interchange-13.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5affe17f859a0857b9d9c7c638f1e4e3939d1172/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Finterchange-13.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5affe17f859a0857b9d9c7c638f1e4e3939d1172/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Finterchange-13.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Finterchange-13.c?ref=5affe17f859a0857b9d9c7c638f1e4e3939d1172", "patch": "@@ -49,5 +49,4 @@ main (void)\n   return 0;\n }\n \n-\n-/* { dg-final { scan-tree-dump \"tiled by\" \"graphite\" } } */\n+/* { dg-final { scan-tree-dump \"tiled\" \"graphite\" } } */"}, {"sha": "4aec824183a8cc18f76d56bc5100b979fe895c50", "filename": "gcc/testsuite/gcc.dg/graphite/interchange-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5affe17f859a0857b9d9c7c638f1e4e3939d1172/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Finterchange-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5affe17f859a0857b9d9c7c638f1e4e3939d1172/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Finterchange-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Finterchange-3.c?ref=5affe17f859a0857b9d9c7c638f1e4e3939d1172", "patch": "@@ -47,4 +47,4 @@ main (void)\n   return 0;\n }\n \n-/* { dg-final { scan-tree-dump \"tiled by\" \"graphite\" } } */\n+/* { dg-final { scan-tree-dump \"tiled\" \"graphite\" } } */"}, {"sha": "463ecb5a66d42e70cc9e8e50ea99c03d659d5a55", "filename": "gcc/testsuite/gcc.dg/graphite/interchange-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5affe17f859a0857b9d9c7c638f1e4e3939d1172/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Finterchange-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5affe17f859a0857b9d9c7c638f1e4e3939d1172/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Finterchange-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Finterchange-4.c?ref=5affe17f859a0857b9d9c7c638f1e4e3939d1172", "patch": "@@ -46,4 +46,4 @@ main (void)\n   return 0;\n }\n \n-/* { dg-final { scan-tree-dump \"tiled by\" \"graphite\" } } */\n+/* { dg-final { scan-tree-dump \"tiled\" \"graphite\" } } */"}, {"sha": "81a6d83232761fdf5b2b5ef0f8c1396d18d9c1b1", "filename": "gcc/testsuite/gcc.dg/graphite/interchange-7.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5affe17f859a0857b9d9c7c638f1e4e3939d1172/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Finterchange-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5affe17f859a0857b9d9c7c638f1e4e3939d1172/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Finterchange-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Finterchange-7.c?ref=5affe17f859a0857b9d9c7c638f1e4e3939d1172", "patch": "@@ -46,4 +46,4 @@ main (void)\n   return 0;\n }\n \n-/* { dg-final { scan-tree-dump \"tiled by\" \"graphite\" } } */\n+/* { dg-final { scan-tree-dump \"tiled\" \"graphite\" } } */"}, {"sha": "88a357893e9cdce243834e0e2d13e5572e62d9e0", "filename": "gcc/testsuite/gcc.dg/graphite/interchange-9.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5affe17f859a0857b9d9c7c638f1e4e3939d1172/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Finterchange-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5affe17f859a0857b9d9c7c638f1e4e3939d1172/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Finterchange-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Finterchange-9.c?ref=5affe17f859a0857b9d9c7c638f1e4e3939d1172", "patch": "@@ -44,4 +44,4 @@ main (void)\n   return 0;\n }\n \n-/* { dg-final { scan-tree-dump \"tiled by\" \"graphite\" } } */\n+/* { dg-final { scan-tree-dump \"tiled\" \"graphite\" } } */"}, {"sha": "cc108c2bbc302b91a396cb9730291302094b3100", "filename": "gcc/testsuite/gcc.dg/graphite/uns-interchange-9.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5affe17f859a0857b9d9c7c638f1e4e3939d1172/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Funs-interchange-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5affe17f859a0857b9d9c7c638f1e4e3939d1172/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Funs-interchange-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Funs-interchange-9.c?ref=5affe17f859a0857b9d9c7c638f1e4e3939d1172", "patch": "@@ -45,4 +45,4 @@ main (void)\n   return 0;\n }\n \n-/* { dg-final { scan-tree-dump \"tiled by\" \"graphite\" } } */\n+/* { dg-final { scan-tree-dump \"tiled\" \"graphite\" } } */"}, {"sha": "8070bbb4a8d5a0860c92585126955100a765f51c", "filename": "gcc/testsuite/gfortran.dg/graphite/interchange-3.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5affe17f859a0857b9d9c7c638f1e4e3939d1172/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Finterchange-3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5affe17f859a0857b9d9c7c638f1e4e3939d1172/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Finterchange-3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Finterchange-3.f90?ref=5affe17f859a0857b9d9c7c638f1e4e3939d1172", "patch": "@@ -24,4 +24,4 @@ Program FOO\n \n end Program FOO\n \n-! { dg-final { scan-tree-dump \"tiled by\" \"graphite\" } }\n+! { dg-final { scan-tree-dump \"tiled\" \"graphite\" } }"}]}