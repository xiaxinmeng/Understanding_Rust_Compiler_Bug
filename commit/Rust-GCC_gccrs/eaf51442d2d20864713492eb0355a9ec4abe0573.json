{"sha": "eaf51442d2d20864713492eb0355a9ec4abe0573", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWFmNTE0NDJkMmQyMDg2NDcxMzQ5MmViMDM1NWE5ZWM0YWJlMDU3Mw==", "commit": {"author": {"name": "Justin Squirek", "email": "squirek@adacore.com", "date": "2018-05-22T13:17:58Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-05-22T13:17:58Z"}, "message": "[Ada] No error on misplaced pragma Pure_Function\n\nThis patch fixes an issue whereby placement of the pragma/aspect Pure_Function\nwas not verified to have been in the same declarative part as the function\ndeclaration incorrectly allowing it to appear after a function body or in a\ndifferent region like a private section.\n\n2018-05-22  Justin Squirek  <squirek@adacore.com>\n\ngcc/ada/\n\n\t* sem_ch12.adb (In_Same_Declarative_Part): Moved to sem_util.\n\t(Freeze_Subprogram_Body, Install_Body): Modify calls to\n\tIn_Same_Declarative_Part.\n\t* sem_prag.adb (Analyze_Pragma-Pragma_Pure_Function): Add check to\n\tverify pragma declaration is within the same declarative list with\n\tcorresponding error message.\n\t* sem_util.adb, sem_util.ads (In_Same_Declarative_Part): Moved from\n\tsem_ch12.adb and generalized to be useful outside the scope of\n\tfreezing.\n\ngcc/testsuite/\n\n\t* gnat.dg/pure_function1.adb, gnat.dg/pure_function1.ads,\n\tgnat.dg/pure_function2.adb, gnat.dg/pure_function2.ads: New testcases.\n\nFrom-SVN: r260507", "tree": {"sha": "2f2350fe698fb7516c8089b7a5192930c6c3d6f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2f2350fe698fb7516c8089b7a5192930c6c3d6f6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eaf51442d2d20864713492eb0355a9ec4abe0573", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eaf51442d2d20864713492eb0355a9ec4abe0573", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eaf51442d2d20864713492eb0355a9ec4abe0573", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eaf51442d2d20864713492eb0355a9ec4abe0573/comments", "author": {"login": "AdaDoom3", "id": 3445599, "node_id": "MDQ6VXNlcjM0NDU1OTk=", "avatar_url": "https://avatars.githubusercontent.com/u/3445599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AdaDoom3", "html_url": "https://github.com/AdaDoom3", "followers_url": "https://api.github.com/users/AdaDoom3/followers", "following_url": "https://api.github.com/users/AdaDoom3/following{/other_user}", "gists_url": "https://api.github.com/users/AdaDoom3/gists{/gist_id}", "starred_url": "https://api.github.com/users/AdaDoom3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AdaDoom3/subscriptions", "organizations_url": "https://api.github.com/users/AdaDoom3/orgs", "repos_url": "https://api.github.com/users/AdaDoom3/repos", "events_url": "https://api.github.com/users/AdaDoom3/events{/privacy}", "received_events_url": "https://api.github.com/users/AdaDoom3/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "80f0c69c2c698023f76d0e5db7e2b42e1fd7b637", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80f0c69c2c698023f76d0e5db7e2b42e1fd7b637", "html_url": "https://github.com/Rust-GCC/gccrs/commit/80f0c69c2c698023f76d0e5db7e2b42e1fd7b637"}], "stats": {"total": 191, "additions": 130, "deletions": 61}, "files": [{"sha": "6341af867cc8be337b343f55a48b32a23adeb542", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eaf51442d2d20864713492eb0355a9ec4abe0573/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eaf51442d2d20864713492eb0355a9ec4abe0573/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=eaf51442d2d20864713492eb0355a9ec4abe0573", "patch": "@@ -1,3 +1,15 @@\n+2018-05-22  Justin Squirek  <squirek@adacore.com>\n+\n+\t* sem_ch12.adb (In_Same_Declarative_Part): Moved to sem_util.\n+\t(Freeze_Subprogram_Body, Install_Body): Modify calls to\n+\tIn_Same_Declarative_Part.\n+\t* sem_prag.adb (Analyze_Pragma-Pragma_Pure_Function): Add check to\n+\tverify pragma declaration is within the same declarative list with\n+\tcorresponding error message.\n+\t* sem_util.adb, sem_util.ads (In_Same_Declarative_Part): Moved from\n+\tsem_ch12.adb and generalized to be useful outside the scope of\n+\tfreezing.\n+\n 2018-05-22  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* sem_ch6.adb (Analyze_Subprogram_Declaration): Set the proper"}, {"sha": "3d93619c68505d9633c7749406cbb3595c4738c6", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 8, "deletions": 57, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eaf51442d2d20864713492eb0355a9ec4abe0573/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eaf51442d2d20864713492eb0355a9ec4abe0573/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=eaf51442d2d20864713492eb0355a9ec4abe0573", "patch": "@@ -657,17 +657,6 @@ package body Sem_Ch12 is\n    --  not done for the instantiation of the bodies, which only require the\n    --  instances of the generic parents to be in scope.\n \n-   function In_Same_Declarative_Part\n-     (F_Node : Node_Id;\n-      Inst   : Node_Id) return Boolean;\n-   --  True if the instantiation Inst and the given freeze_node F_Node appear\n-   --  within the same declarative part, ignoring subunits, but with no inter-\n-   --  vening subprograms or concurrent units. Used to find the proper plave\n-   --  for the freeze node of an instance, when the generic is declared in a\n-   --  previous instance. If predicate is true, the freeze node of the instance\n-   --  can be placed after the freeze node of the previous instance, Otherwise\n-   --  it has to be placed at the end of the current declarative part.\n-\n    function In_Main_Context (E : Entity_Id) return Boolean;\n    --  Check whether an instantiation is in the context of the main unit.\n    --  Used to determine whether its body should be elaborated to allow\n@@ -8664,7 +8653,8 @@ package body Sem_Ch12 is\n \n       if Is_Generic_Instance (Par)\n         and then Present (Freeze_Node (Par))\n-        and then In_Same_Declarative_Part (Freeze_Node (Par), Inst_Node)\n+        and then In_Same_Declarative_Part\n+                   (Parent (Freeze_Node (Par)), Inst_Node)\n       then\n          --  The parent was a premature instantiation. Insert freeze node at\n          --  the end the current declarative part.\n@@ -8711,11 +8701,11 @@ package body Sem_Ch12 is\n         and then Present (Freeze_Node (Par))\n         and then Present (Enc_I)\n       then\n-         if In_Same_Declarative_Part (Freeze_Node (Par), Enc_I)\n+         if In_Same_Declarative_Part (Parent (Freeze_Node (Par)), Enc_I)\n            or else\n              (Nkind (Enc_I) = N_Package_Body\n-               and then\n-                 In_Same_Declarative_Part (Freeze_Node (Par), Parent (Enc_I)))\n+               and then In_Same_Declarative_Part\n+                          (Parent (Freeze_Node (Par)), Parent (Enc_I)))\n          then\n             --  The enclosing package may contain several instances. Rather\n             --  than computing the earliest point at which to insert its freeze\n@@ -8985,46 +8975,6 @@ package body Sem_Ch12 is\n         (Current_Scope, Current_Scope, Assoc_Null);\n    end Init_Env;\n \n-   ------------------------------\n-   -- In_Same_Declarative_Part --\n-   ------------------------------\n-\n-   function In_Same_Declarative_Part\n-     (F_Node : Node_Id;\n-      Inst   : Node_Id) return Boolean\n-   is\n-      Decls : constant Node_Id := Parent (F_Node);\n-      Nod   : Node_Id;\n-\n-   begin\n-      Nod := Parent (Inst);\n-      while Present (Nod) loop\n-         if Nod = Decls then\n-            return True;\n-\n-         elsif Nkind_In (Nod, N_Subprogram_Body,\n-                              N_Package_Body,\n-                              N_Package_Declaration,\n-                              N_Task_Body,\n-                              N_Protected_Body,\n-                              N_Block_Statement)\n-         then\n-            return False;\n-\n-         elsif Nkind (Nod) = N_Subunit then\n-            Nod := Corresponding_Stub (Nod);\n-\n-         elsif Nkind (Nod) = N_Compilation_Unit then\n-            return False;\n-\n-         else\n-            Nod := Parent (Nod);\n-         end if;\n-      end loop;\n-\n-      return False;\n-   end In_Same_Declarative_Part;\n-\n    ---------------------\n    -- In_Main_Context --\n    ---------------------\n@@ -9536,7 +9486,7 @@ package body Sem_Ch12 is\n             --  Freeze instance of inner generic after instance of enclosing\n             --  generic.\n \n-            if In_Same_Declarative_Part (Freeze_Node (Par), N) then\n+            if In_Same_Declarative_Part (Parent (Freeze_Node (Par)), N) then\n \n                --  Handle the following case:\n \n@@ -9570,7 +9520,8 @@ package body Sem_Ch12 is\n             --  instance of enclosing generic.\n \n             elsif Nkind_In (Parent (N), N_Package_Body, N_Subprogram_Body)\n-              and then In_Same_Declarative_Part (Freeze_Node (Par), Parent (N))\n+              and then In_Same_Declarative_Part\n+                         (Parent (Freeze_Node (Par)), Parent (N))\n             then\n                declare\n                   Enclosing :  Entity_Id;"}, {"sha": "ed7441ae7f4e1a0112e8ec0e91c8a549da41f2dc", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 26, "deletions": 4, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eaf51442d2d20864713492eb0355a9ec4abe0573/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eaf51442d2d20864713492eb0355a9ec4abe0573/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=eaf51442d2d20864713492eb0355a9ec4abe0573", "patch": "@@ -21043,6 +21043,8 @@ package body Sem_Prag is\n             E         : Entity_Id;\n             E_Id      : Node_Id;\n             Effective : Boolean := False;\n+            Orig_Def  : Entity_Id;\n+            Same_Decl : Boolean := False;\n \n          begin\n             GNAT_Pragma;\n@@ -21076,11 +21078,27 @@ package body Sem_Prag is\n                        (\"pragma% requires a function name\", Arg1);\n                   end if;\n \n-                  Set_Is_Pure (Def_Id);\n+                  --  When we have a generic function we must jump up a level\n+                  --  to the declaration of the wrapper package itself.\n \n-                  if not Has_Pragma_Pure_Function (Def_Id) then\n-                     Set_Has_Pragma_Pure_Function (Def_Id);\n-                     Effective := True;\n+                  Orig_Def := Def_Id;\n+\n+                  if Is_Generic_Instance (Def_Id) then\n+                     while Nkind (Orig_Def) /= N_Package_Declaration loop\n+                        Orig_Def := Parent (Orig_Def);\n+                     end loop;\n+                  end if;\n+\n+                  if In_Same_Declarative_Part (Parent (N), Orig_Def) then\n+\n+                     Same_Decl := True;\n+\n+                     Set_Is_Pure (Def_Id);\n+\n+                     if not Has_Pragma_Pure_Function (Def_Id) then\n+                        Set_Has_Pragma_Pure_Function (Def_Id);\n+                        Effective := True;\n+                     end if;\n                   end if;\n \n                   exit when From_Aspect_Specification (N);\n@@ -21094,6 +21112,10 @@ package body Sem_Prag is\n                   Error_Msg_NE\n                     (\"pragma Pure_Function on& is redundant?r?\",\n                      N, Entity (E_Id));\n+               elsif not Same_Decl then\n+                  Error_Pragma_Arg\n+                    (\"pragma% argument must be in same declarative \"\n+                     & \"part\", Arg1);\n                end if;\n             end if;\n          end Pure_Function;"}, {"sha": "8f0fcd38d8ee95f3664d8df71aa8f62d690c5de1", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eaf51442d2d20864713492eb0355a9ec4abe0573/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eaf51442d2d20864713492eb0355a9ec4abe0573/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=eaf51442d2d20864713492eb0355a9ec4abe0573", "patch": "@@ -12024,6 +12024,50 @@ package body Sem_Util is\n         and then Reverse_Storage_Order (Btyp);\n    end In_Reverse_Storage_Order_Object;\n \n+   ------------------------------\n+   -- In_Same_Declarative_Part --\n+   ------------------------------\n+\n+   function In_Same_Declarative_Part\n+     (Context : Node_Id;\n+      N       : Node_Id) return Boolean\n+   is\n+      Cont : Node_Id := Context;\n+      Nod  : Node_Id;\n+\n+   begin\n+      if Nkind (Cont) = N_Compilation_Unit_Aux then\n+         Cont := Parent (Cont);\n+      end if;\n+\n+      Nod := Parent (N);\n+      while Present (Nod) loop\n+         if Nod = Cont then\n+            return True;\n+\n+         elsif Nkind_In (Nod, N_Accept_Statement,\n+                              N_Block_Statement,\n+                              N_Compilation_Unit,\n+                              N_Entry_Body,\n+                              N_Package_Body,\n+                              N_Package_Declaration,\n+                              N_Protected_Body,\n+                              N_Subprogram_Body,\n+                              N_Task_Body)\n+         then\n+            return False;\n+\n+         elsif Nkind (Nod) = N_Subunit then\n+            Nod := Corresponding_Stub (Nod);\n+\n+         else\n+            Nod := Parent (Nod);\n+         end if;\n+      end loop;\n+\n+      return False;\n+   end In_Same_Declarative_Part;\n+\n    --------------------------------------\n    -- In_Subprogram_Or_Concurrent_Unit --\n    --------------------------------------"}, {"sha": "7266ffab8d60da00142101b3d4e02994f8596bb4", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eaf51442d2d20864713492eb0355a9ec4abe0573/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eaf51442d2d20864713492eb0355a9ec4abe0573/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=eaf51442d2d20864713492eb0355a9ec4abe0573", "patch": "@@ -1399,6 +1399,12 @@ package Sem_Util is\n    --  Returns True if N denotes a component or subcomponent in a record or\n    --  array that has Reverse_Storage_Order.\n \n+   function In_Same_Declarative_Part\n+     (Context : Node_Id;\n+      N       : Node_Id) return Boolean;\n+   --  True if the node N appears within the same declarative part denoted by\n+   --  the node Context.\n+\n    function In_Subprogram_Or_Concurrent_Unit return Boolean;\n    --  Determines if the current scope is within a subprogram compilation unit\n    --  (inside a subprogram declaration, subprogram body, or generic subprogram"}, {"sha": "ca61568f5c5e9ad1bc2ff7a69ba190ae285a4e80", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eaf51442d2d20864713492eb0355a9ec4abe0573/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eaf51442d2d20864713492eb0355a9ec4abe0573/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=eaf51442d2d20864713492eb0355a9ec4abe0573", "patch": "@@ -1,3 +1,8 @@\n+2018-05-22  Justin Squirek  <squirek@adacore.com>\n+\n+\t* gnat.dg/pure_function1.adb, gnat.dg/pure_function1.ads,\n+\tgnat.dg/pure_function2.adb, gnat.dg/pure_function2.ads: New testcases.\n+\n 2018-05-22  Richard Sandiford  <richard.sandiford@linaro.org>\n \n \tPR middle-end/85862"}, {"sha": "9aab468dba8f421d3a0ae2109da04fd8ed3128b0", "filename": "gcc/testsuite/gnat.dg/pure_function1.adb", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eaf51442d2d20864713492eb0355a9ec4abe0573/gcc%2Ftestsuite%2Fgnat.dg%2Fpure_function1.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eaf51442d2d20864713492eb0355a9ec4abe0573/gcc%2Ftestsuite%2Fgnat.dg%2Fpure_function1.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fpure_function1.adb?ref=eaf51442d2d20864713492eb0355a9ec4abe0573", "patch": "@@ -0,0 +1,8 @@\n+--  { dg-do compile }\n+\n+package body Pure_Function1 is\n+   function F return Integer is (0);\n+   pragma Pure_Function (F);  --  { dg-error \"pragma \\\"Pure_Function\\\" argument must be in same declarative part\" }\n+   pragma Pure_Function (F);  --  { dg-error \"pragma \\\"Pure_Function\\\" argument must be in same declarative part\" }\n+   pragma Pure_Function (F);  --  { dg-error \"pragma \\\"Pure_Function\\\" argument must be in same declarative part\" }\n+end;"}, {"sha": "90b28fb1af9e1121798c781a29a02074a863fde6", "filename": "gcc/testsuite/gnat.dg/pure_function1.ads", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eaf51442d2d20864713492eb0355a9ec4abe0573/gcc%2Ftestsuite%2Fgnat.dg%2Fpure_function1.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eaf51442d2d20864713492eb0355a9ec4abe0573/gcc%2Ftestsuite%2Fgnat.dg%2Fpure_function1.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fpure_function1.ads?ref=eaf51442d2d20864713492eb0355a9ec4abe0573", "patch": "@@ -0,0 +1,6 @@\n+package Pure_Function1 is\n+   function F return Integer;\n+   pragma Pure_Function (F);\n+   pragma Pure_Function (F);\n+   pragma Pure_Function (F);\n+end;"}, {"sha": "28f98cd3dd5fddb23b8c4cfbed5277b59f554841", "filename": "gcc/testsuite/gnat.dg/pure_function2.adb", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eaf51442d2d20864713492eb0355a9ec4abe0573/gcc%2Ftestsuite%2Fgnat.dg%2Fpure_function2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eaf51442d2d20864713492eb0355a9ec4abe0573/gcc%2Ftestsuite%2Fgnat.dg%2Fpure_function2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fpure_function2.adb?ref=eaf51442d2d20864713492eb0355a9ec4abe0573", "patch": "@@ -0,0 +1,10 @@\n+--  { dg-do compile }\n+\n+function Pure_Function2 (X : Integer) return Integer is\n+begin\n+   return X;\n+end Pure_Function2;\n+\n+pragma Pure_Function (Pure_Function2);  --  { dg-error \"pragma \\\"Pure_Function\\\" argument must be in same declarative part\" }\n+pragma Pure_Function (Pure_Function2);  --  { dg-error \"pragma \\\"Pure_Function\\\" argument must be in same declarative part\" }\n+pragma Pure_Function (Pure_Function2);  --  { dg-error \"pragma \\\"Pure_Function\\\" argument must be in same declarative part\" }"}, {"sha": "5cb714093bd0c34fe2904a4c140d47cbb315ec93", "filename": "gcc/testsuite/gnat.dg/pure_function2.ads", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eaf51442d2d20864713492eb0355a9ec4abe0573/gcc%2Ftestsuite%2Fgnat.dg%2Fpure_function2.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eaf51442d2d20864713492eb0355a9ec4abe0573/gcc%2Ftestsuite%2Fgnat.dg%2Fpure_function2.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fpure_function2.ads?ref=eaf51442d2d20864713492eb0355a9ec4abe0573", "patch": "@@ -0,0 +1,5 @@\n+function Pure_Function2 (X : Integer) return Integer with Pure_Function;\n+\n+pragma Pure_Function (Pure_Function2);\n+pragma Pure_Function (Pure_Function2);\n+pragma Pure_Function (Pure_Function2);"}]}