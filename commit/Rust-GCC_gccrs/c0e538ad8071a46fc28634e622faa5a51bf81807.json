{"sha": "c0e538ad8071a46fc28634e622faa5a51bf81807", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzBlNTM4YWQ4MDcxYTQ2ZmMyODYzNGU2MjJmYWE1YTUxYmY4MTgwNw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-03T09:21:55Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-03T09:21:55Z"}, "message": "[multiple changes]\n\n2011-08-03  Emmanuel Briot  <briot@adacore.com>\n\n\t* prj-part.adb, prj-part.ads, prj-makr.adb, prj-pars.adb, prj-conf.adb,\n\tprj-env.adb (Prj.Part.Parse): change parameter Always_Errout_Finalize\n\tto Errout_Handling.\n\n2011-08-03  Emmanuel Briot  <briot@adacore.com>\n\n\t* prj-dect.adb (Parse_Attribute_Declaration): make sure we can use\n\t\"external\" as an attribute name in aggregate projects.\n\n2011-08-03  Jose Ruiz  <ruiz@adacore.com>\n\n\t* s-taprop-vxworks.adb: (Create_Task, Initialize): Ada 2012 pragma CPU\n\tuses CPU numbers starting 1, while VxWorks uses CPU numbers starting\n\tfrom 0, so we need to adjust.\n\n2011-08-03  Emmanuel Briot  <briot@adacore.com>\n\n\t* prj-proc.adb, prj-ext.adb, prj-ext.ads, makeutl.adb, prj-tree.adb,\n\tprj-tree.ads, gnatcmd.adb, clean.adb (External_References): new type.\n\nFrom-SVN: r177244", "tree": {"sha": "3725855258e586f8b68daed8cfdfe5efa06f8cf7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3725855258e586f8b68daed8cfdfe5efa06f8cf7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c0e538ad8071a46fc28634e622faa5a51bf81807", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0e538ad8071a46fc28634e622faa5a51bf81807", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0e538ad8071a46fc28634e622faa5a51bf81807", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0e538ad8071a46fc28634e622faa5a51bf81807/comments", "author": null, "committer": null, "parents": [{"sha": "c4d67e2d730f6a8e45182a384b5b674f5134bc64", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4d67e2d730f6a8e45182a384b5b674f5134bc64", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4d67e2d730f6a8e45182a384b5b674f5134bc64"}], "stats": {"total": 344, "additions": 274, "deletions": 70}, "files": [{"sha": "1c1cf9b4849e3795eb131b9535db83df8f158a14", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0e538ad8071a46fc28634e622faa5a51bf81807/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0e538ad8071a46fc28634e622faa5a51bf81807/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=c0e538ad8071a46fc28634e622faa5a51bf81807", "patch": "@@ -1,3 +1,25 @@\n+2011-08-03  Emmanuel Briot  <briot@adacore.com>\n+\n+\t* prj-part.adb, prj-part.ads, prj-makr.adb, prj-pars.adb, prj-conf.adb,\n+\tprj-env.adb (Prj.Part.Parse): change parameter Always_Errout_Finalize\n+\tto Errout_Handling.\n+\n+2011-08-03  Emmanuel Briot  <briot@adacore.com>\n+\n+\t* prj-dect.adb (Parse_Attribute_Declaration): make sure we can use\n+\t\"external\" as an attribute name in aggregate projects.\n+\n+2011-08-03  Jose Ruiz  <ruiz@adacore.com>\n+\n+\t* s-taprop-vxworks.adb: (Create_Task, Initialize): Ada 2012 pragma CPU\n+\tuses CPU numbers starting 1, while VxWorks uses CPU numbers starting\n+\tfrom 0, so we need to adjust.\n+\n+2011-08-03  Emmanuel Briot  <briot@adacore.com>\n+\n+\t* prj-proc.adb, prj-ext.adb, prj-ext.ads, makeutl.adb, prj-tree.adb,\n+\tprj-tree.ads, gnatcmd.adb, clean.adb (External_References): new type.\n+\n 2011-08-03  Yannick Moy  <moy@adacore.com>\n \n \t* sem_ch6.adb (New_Overloaded_Entity): only issue error for SPARK"}, {"sha": "16897bf3030f4f94dad70a9b988484ca654ed003", "filename": "gcc/ada/clean.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0e538ad8071a46fc28634e622faa5a51bf81807/gcc%2Fada%2Fclean.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0e538ad8071a46fc28634e622faa5a51bf81807/gcc%2Fada%2Fclean.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fclean.adb?ref=c0e538ad8071a46fc28634e622faa5a51bf81807", "patch": "@@ -1886,7 +1886,7 @@ package body Clean is\n \n                            if OK then\n                               Prj.Ext.Add\n-                                (Project_Node_Tree,\n+                                (Project_Node_Tree.External,\n                                  External_Name =>\n                                    Ext_Asgn (Start .. Equal_Pos - 1),\n                                  Value         =>"}, {"sha": "09b95488a12cf4d365e2469c2fc2d7f86cb0addc", "filename": "gcc/ada/gnatcmd.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0e538ad8071a46fc28634e622faa5a51bf81807/gcc%2Fada%2Fgnatcmd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0e538ad8071a46fc28634e622faa5a51bf81807/gcc%2Fada%2Fgnatcmd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatcmd.adb?ref=c0e538ad8071a46fc28634e622faa5a51bf81807", "patch": "@@ -1822,7 +1822,7 @@ begin\n                         if Equal_Pos >= Argv'First + 3\n                           and then Equal_Pos /= Argv'Last\n                         then\n-                           Add (Project_Node_Tree,\n+                           Add (Project_Node_Tree.External,\n                                 External_Name =>\n                                   Argv (Argv'First + 2 .. Equal_Pos - 1),\n                                 Value => Argv (Equal_Pos + 1 .. Argv'Last));"}, {"sha": "6673de1984121acb60a91d37e77890c3a132da1d", "filename": "gcc/ada/makeutl.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0e538ad8071a46fc28634e622faa5a51bf81807/gcc%2Fada%2Fmakeutl.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0e538ad8071a46fc28634e622faa5a51bf81807/gcc%2Fada%2Fmakeutl.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakeutl.adb?ref=c0e538ad8071a46fc28634e622faa5a51bf81807", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2004-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -724,7 +724,7 @@ package body Makeutl is\n       end if;\n \n       return Prj.Ext.Check\n-        (Tree        => Tree,\n+        (Self        => Tree.External,\n          Declaration => Argv (Start .. Finish));\n    end Is_External_Assignment;\n "}, {"sha": "8a0a749a9cd84b68dac0a9c5f70b5888374d9443", "filename": "gcc/ada/prj-conf.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0e538ad8071a46fc28634e622faa5a51bf81807/gcc%2Fada%2Fprj-conf.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0e538ad8071a46fc28634e622faa5a51bf81807/gcc%2Fada%2Fprj-conf.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-conf.adb?ref=c0e538ad8071a46fc28634e622faa5a51bf81807", "patch": "@@ -1119,7 +1119,7 @@ package body Prj.Conf is\n            (In_Tree                => Project_Node_Tree,\n             Project                => Config_Project_Node,\n             Project_File_Name      => Config_File_Path.all,\n-            Always_Errout_Finalize => False,\n+            Errout_Handling        => Prj.Part.Finalize_If_Error,\n             Packages_To_Check      => Packages_To_Check,\n             Current_Directory      => Current_Directory,\n             Is_Config_File         => True,\n@@ -1212,7 +1212,7 @@ package body Prj.Conf is\n         (In_Tree                => Project_Node_Tree,\n          Project                => User_Project_Node,\n          Project_File_Name      => Project_File_Name,\n-         Always_Errout_Finalize => False,\n+         Errout_Handling        => Prj.Part.Finalize_If_Error,\n          Packages_To_Check      => Packages_To_Check,\n          Current_Directory      => Current_Directory,\n          Is_Config_File         => False,"}, {"sha": "8f0ca61af86e7990eebe8aad2969e39111a46b65", "filename": "gcc/ada/prj-dect.adb", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0e538ad8071a46fc28634e622faa5a51bf81807/gcc%2Fada%2Fprj-dect.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0e538ad8071a46fc28634e622faa5a51bf81807/gcc%2Fada%2Fprj-dect.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-dect.adb?ref=c0e538ad8071a46fc28634e622faa5a51bf81807", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2001-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -494,13 +494,18 @@ package body Prj.Dect is\n \n       Scan (In_Tree);\n \n-      --  Body may be an attribute name\n+      --  Body or External may be an attribute name\n \n       if Token = Tok_Body then\n          Token := Tok_Identifier;\n          Token_Name := Snames.Name_Body;\n       end if;\n \n+      if Token = Tok_External then\n+         Token := Tok_Identifier;\n+         Token_Name := Snames.Name_External;\n+      end if;\n+\n       Expect (Tok_Identifier, \"identifier\");\n       Process_Attribute_Name;\n       Rename_Obsolescent_Attributes (In_Tree, Attribute, Current_Package);"}, {"sha": "ee6d2c329355a6b59c5c5ea9afe1b1113b9651b6", "filename": "gcc/ada/prj-ext.adb", "status": "modified", "additions": 121, "deletions": 25, "changes": 146, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0e538ad8071a46fc28634e622faa5a51bf81807/gcc%2Fada%2Fprj-ext.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0e538ad8071a46fc28634e622faa5a51bf81807/gcc%2Fada%2Fprj-ext.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-ext.adb?ref=c0e538ad8071a46fc28634e622faa5a51bf81807", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2000-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2000-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -23,47 +23,81 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n+with Ada.Unchecked_Deallocation;\n with Osint;    use Osint;\n-with Prj.Tree; use Prj.Tree;\n \n package body Prj.Ext is\n \n+   ----------------\n+   -- Initialize --\n+   ----------------\n+\n+   procedure Initialize\n+     (Self      : out External_References;\n+      Copy_From : External_References := No_External_Refs)\n+   is\n+      N  : Name_To_Name_Ptr;\n+      N2 : Name_To_Name_Ptr;\n+   begin\n+      if Self.Refs = null then\n+         Self.Refs := new Name_To_Name_HTable.Instance;\n+\n+         if Copy_From.Refs /= null then\n+            N := Name_To_Name_HTable.Get_First (Copy_From.Refs.all);\n+            while N /= null loop\n+               N2 := new Name_To_Name;\n+               N2.Key := N.Key;\n+               N2.Value := N.Value;\n+               Name_To_Name_HTable.Set (Self.Refs.all, N2);\n+               N := Name_To_Name_HTable.Get_Next (Copy_From.Refs.all);\n+            end loop;\n+         end if;\n+      end if;\n+   end Initialize;\n+\n    ---------\n    -- Add --\n    ---------\n \n    procedure Add\n-     (Tree          : Prj.Tree.Project_Node_Tree_Ref;\n+     (Self          : External_References;\n       External_Name : String;\n       Value         : String)\n    is\n-      The_Key   : Name_Id;\n-      The_Value : Name_Id;\n+      N : Name_To_Name_Ptr;\n    begin\n+      N := new Name_To_Name;\n+\n       Name_Len := Value'Length;\n       Name_Buffer (1 .. Name_Len) := Value;\n-      The_Value := Name_Find;\n+      N.Value := Name_Find;\n+\n       Name_Len := External_Name'Length;\n       Name_Buffer (1 .. Name_Len) := External_Name;\n       Canonical_Case_Env_Var_Name (Name_Buffer (1 .. Name_Len));\n-      The_Key := Name_Find;\n-      Name_To_Name_HTable.Set (Tree.External_References, The_Key, The_Value);\n+      N.Key := Name_Find;\n+\n+      if Current_Verbosity = High then\n+         Debug_Output (\"Add (\" & External_Name & \") is\", N.Value);\n+      end if;\n+\n+      Name_To_Name_HTable.Set (Self.Refs.all, N);\n    end Add;\n \n    -----------\n    -- Check --\n    -----------\n \n    function Check\n-     (Tree        : Prj.Tree.Project_Node_Tree_Ref;\n+     (Self        : External_References;\n       Declaration : String) return Boolean\n    is\n    begin\n       for Equal_Pos in Declaration'Range loop\n          if Declaration (Equal_Pos) = '=' then\n             exit when Equal_Pos = Declaration'First;\n             Add\n-              (Tree          => Tree,\n+              (Self          => Self,\n                External_Name =>\n                  Declaration (Declaration'First .. Equal_Pos - 1),\n                Value         =>\n@@ -79,33 +113,39 @@ package body Prj.Ext is\n    -- Reset --\n    -----------\n \n-   procedure Reset (Tree : Prj.Tree.Project_Node_Tree_Ref) is\n+   procedure Reset (Self : External_References) is\n    begin\n-      Name_To_Name_HTable.Reset (Tree.External_References);\n+      if Self.Refs /= null then\n+         Debug_Output (\"Reset external references\");\n+         Name_To_Name_HTable.Reset (Self.Refs.all);\n+      end if;\n    end Reset;\n \n    --------------\n    -- Value_Of --\n    --------------\n \n    function Value_Of\n-     (Tree          : Prj.Tree.Project_Node_Tree_Ref;\n+     (Self          : External_References;\n       External_Name : Name_Id;\n       With_Default  : Name_Id := No_Name)\n       return          Name_Id\n    is\n-      The_Value : Name_Id;\n-      Name      : String := Get_Name_String (External_Name);\n+      Value : Name_To_Name_Ptr;\n+      Val   : Name_Id;\n+      Name  : String := Get_Name_String (External_Name);\n \n    begin\n       Canonical_Case_Env_Var_Name (Name);\n-      Name_Len := Name'Length;\n-      Name_Buffer (1 .. Name_Len) := Name;\n-      The_Value :=\n-        Name_To_Name_HTable.Get (Tree.External_References, Name_Find);\n \n-      if The_Value /= No_Name then\n-         return The_Value;\n+      if Self.Refs /= null then\n+         Name_Len := Name'Length;\n+         Name_Buffer (1 .. Name_Len) := Name;\n+         Value := Name_To_Name_HTable.Get (Self.Refs.all, Name_Find);\n+\n+         if Value /= null then\n+            return Value.Value;\n+         end if;\n       end if;\n \n       --  Find if it is an environment, if it is, put value in the hash table\n@@ -117,17 +157,73 @@ package body Prj.Ext is\n          if Env_Value /= null and then Env_Value'Length > 0 then\n             Name_Len := Env_Value'Length;\n             Name_Buffer (1 .. Name_Len) := Env_Value.all;\n-            The_Value := Name_Find;\n-            Name_To_Name_HTable.Set\n-              (Tree.External_References, External_Name, The_Value);\n+            Val := Name_Find;\n+\n+            if Current_Verbosity = High then\n+               Debug_Output (\"Value_Of (\" & Get_Name_String (External_Name)\n+                             & \") is\", Val);\n+            end if;\n+\n+            if Self.Refs /= null then\n+               Value := new Name_To_Name;\n+               Value.Key := External_Name;\n+               Value.Value := Val;\n+               Name_To_Name_HTable.Set (Self.Refs.all, Value);\n+            end if;\n+\n             Free (Env_Value);\n-            return The_Value;\n+            return Val;\n \n          else\n+            if Current_Verbosity = High then\n+               Debug_Output (\"Value_Of (\" & Get_Name_String (External_Name)\n+                             & \") is default\", With_Default);\n+            end if;\n             Free (Env_Value);\n             return With_Default;\n          end if;\n       end;\n    end Value_Of;\n \n+   ----------\n+   -- Free --\n+   ----------\n+\n+   procedure Free (Self : in out External_References) is\n+      procedure Unchecked_Free is new Ada.Unchecked_Deallocation\n+        (Name_To_Name_HTable.Instance, Instance_Access);\n+   begin\n+      if Self.Refs /= null then\n+         Reset (Self);\n+         Unchecked_Free (Self.Refs);\n+      end if;\n+   end Free;\n+\n+   --------------\n+   -- Set_Next --\n+   --------------\n+\n+   procedure Set_Next (E : Name_To_Name_Ptr; Next : Name_To_Name_Ptr) is\n+   begin\n+      E.Next := Next;\n+   end Set_Next;\n+\n+   ----------\n+   -- Next --\n+   ----------\n+\n+   function Next (E : Name_To_Name_Ptr) return Name_To_Name_Ptr is\n+   begin\n+      return E.Next;\n+   end Next;\n+\n+   -------------\n+   -- Get_Key --\n+   -------------\n+\n+   function Get_Key (E : Name_To_Name_Ptr) return Name_Id is\n+   begin\n+      return E.Key;\n+   end Get_Key;\n+\n end Prj.Ext;"}, {"sha": "26ad21993011301fbd7fd34ad5c8ff2309306691", "filename": "gcc/ada/prj-ext.ads", "status": "modified", "additions": 63, "deletions": 6, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0e538ad8071a46fc28634e622faa5a51bf81807/gcc%2Fada%2Fprj-ext.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0e538ad8071a46fc28634e622faa5a51bf81807/gcc%2Fada%2Fprj-ext.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-ext.ads?ref=c0e538ad8071a46fc28634e622faa5a51bf81807", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2000-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2000-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -26,7 +26,7 @@\n --  Subprograms to set, get and cache external references, to be used as\n --  External functions in project files.\n \n-with Prj.Tree;\n+with GNAT.Dynamic_HTables;\n \n package Prj.Ext is\n \n@@ -42,27 +42,84 @@ package Prj.Ext is\n    --  trees are loaded in parallel we can have different scenarios (or even\n    --  load the same tree twice and see different views of it).\n \n+   type External_References is private;\n+   No_External_Refs : constant External_References;\n+\n+   procedure Initialize\n+     (Self      : out External_References;\n+      Copy_From : External_References := No_External_Refs);\n+   --  Initialize Self, and copy all values from Copy_From if needed.\n+   --  This has no effect if Self was already initialized.\n+\n+   procedure Free (Self : in out External_References);\n+   --  Free memory used by Self\n+\n    procedure Add\n-     (Tree          : Prj.Tree.Project_Node_Tree_Ref;\n+     (Self          : External_References;\n       External_Name : String;\n       Value         : String);\n    --  Add an external reference (or modify an existing one)\n \n    function Value_Of\n-     (Tree          : Prj.Tree.Project_Node_Tree_Ref;\n+     (Self          : External_References;\n       External_Name : Name_Id;\n       With_Default  : Name_Id := No_Name)\n       return          Name_Id;\n    --  Get the value of an external reference, and cache it for future uses\n \n    function Check\n-     (Tree        : Prj.Tree.Project_Node_Tree_Ref;\n+     (Self        : External_References;\n       Declaration : String) return Boolean;\n    --  Check that an external declaration <external>=<value> is correct.\n    --  If it is correct, the external reference is Added.\n \n-   procedure Reset (Tree : Prj.Tree.Project_Node_Tree_Ref);\n+   procedure Reset (Self : External_References);\n    --  Clear the internal data structure that stores the external references\n    --  and free any allocated memory.\n \n+private\n+\n+   --  Use a Static_HTable, not a Simple_HTable.\n+   --  The issue is that we need to be able to copy the contents of the table\n+   --  (in Initialize), but this isn't doable for Simple_HTable for which\n+   --  iterators do not return the key.\n+\n+   type Name_To_Name;\n+   type Name_To_Name_Ptr is access all Name_To_Name;\n+   type Name_To_Name is record\n+      Key   : Name_Id;\n+      Value : Name_Id;\n+      Next  : Name_To_Name_Ptr;\n+   end record;\n+\n+   procedure Set_Next (E : Name_To_Name_Ptr; Next : Name_To_Name_Ptr);\n+   function  Next     (E : Name_To_Name_Ptr) return Name_To_Name_Ptr;\n+   function  Get_Key  (E : Name_To_Name_Ptr) return Name_Id;\n+\n+   package Name_To_Name_HTable is new GNAT.Dynamic_HTables.Static_HTable\n+     (Header_Num => Header_Num,\n+      Element    => Name_To_Name,\n+      Elmt_Ptr   => Name_To_Name_Ptr,\n+      Null_Ptr   => null,\n+      Set_Next   => Set_Next,\n+      Next       => Next,\n+      Key        => Name_Id,\n+      Get_Key    => Get_Key,\n+      Hash       => Hash,\n+      Equal      => \"=\");\n+   --  General type for htables associating name_id to name_id. This is in\n+   --  particular used to store the values of external references.\n+\n+   type Instance_Access is access all Name_To_Name_HTable.Instance;\n+\n+   type External_References is record\n+      Refs : Instance_Access;\n+      --  External references are stored in this hash table (and manipulated\n+      --  through subprogrames in prj-ext.ads). External references are\n+      --  project-tree specific so that one can load the same tree twice but\n+      --  have two views of it, for instance.\n+   end record;\n+\n+   No_External_Refs : constant External_References := (Refs => null);\n+\n end Prj.Ext;"}, {"sha": "2910a3a3d0d6e6f202ee608c724012ca248db45f", "filename": "gcc/ada/prj-makr.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0e538ad8071a46fc28634e622faa5a51bf81807/gcc%2Fada%2Fprj-makr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0e538ad8071a46fc28634e622faa5a51bf81807/gcc%2Fada%2Fprj-makr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-makr.adb?ref=c0e538ad8071a46fc28634e622faa5a51bf81807", "patch": "@@ -863,7 +863,7 @@ package body Prj.Makr is\n               (In_Tree                => Tree,\n                Project                => Project_Node,\n                Project_File_Name      => Output_Name.all,\n-               Always_Errout_Finalize => False,\n+               Errout_Handling        => Part.Finalize_If_Error,\n                Store_Comments         => True,\n                Is_Config_File         => False,\n                Flags                  => Flags,"}, {"sha": "c638d9e6d9b2c5c0ed0241c6cfb56001252b5066", "filename": "gcc/ada/prj-pars.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0e538ad8071a46fc28634e622faa5a51bf81807/gcc%2Fada%2Fprj-pars.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0e538ad8071a46fc28634e622faa5a51bf81807/gcc%2Fada%2Fprj-pars.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-pars.adb?ref=c0e538ad8071a46fc28634e622faa5a51bf81807", "patch": "@@ -72,7 +72,7 @@ package body Prj.Pars is\n         (In_Tree                => Project_Node_Tree,\n          Project                => Project_Node,\n          Project_File_Name      => Project_File_Name,\n-         Always_Errout_Finalize => False,\n+         Errout_Handling        => Prj.Part.Finalize_If_Error,\n          Packages_To_Check      => Packages_To_Check,\n          Current_Directory      => Current_Dir,\n          Flags                  => Flags,"}, {"sha": "3438fdee6793e87cd3214ae60fa8f25b0725ae25", "filename": "gcc/ada/prj-part.adb", "status": "modified", "additions": 19, "deletions": 7, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0e538ad8071a46fc28634e622faa5a51bf81807/gcc%2Fada%2Fprj-part.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0e538ad8071a46fc28634e622faa5a51bf81807/gcc%2Fada%2Fprj-part.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-part.adb?ref=c0e538ad8071a46fc28634e622faa5a51bf81807", "patch": "@@ -443,7 +443,7 @@ package body Prj.Part is\n      (In_Tree                : Project_Node_Tree_Ref;\n       Project                : out Project_Node_Id;\n       Project_File_Name      : String;\n-      Always_Errout_Finalize : Boolean;\n+      Errout_Handling        : Errout_Mode := Always_Finalize;\n       Packages_To_Check      : String_List_Access := All_Packages;\n       Store_Comments         : Boolean := False;\n       Current_Directory      : String := \"\";\n@@ -477,7 +477,10 @@ package body Prj.Part is\n                     Path              => Path_Name_Id);\n       Free (Real_Project_File_Name);\n \n-      Prj.Err.Initialize;\n+      if Errout_Handling /= Never_Finalize then\n+         Prj.Err.Initialize;\n+      end if;\n+\n       Prj.Err.Scanner.Set_Comment_As_Token (Store_Comments);\n       Prj.Err.Scanner.Set_End_Of_Line_As_Token (Store_Comments);\n \n@@ -607,13 +610,22 @@ package body Prj.Part is\n          Project := Empty_Node;\n       end if;\n \n-      if No (Project) or else Always_Errout_Finalize then\n-         Prj.Err.Finalize;\n+      case Errout_Handling is\n+         when Always_Finalize =>\n+            Prj.Err.Finalize;\n \n-         --  Reinitialize to avoid duplicate warnings later on\n+            --  Reinitialize to avoid duplicate warnings later on\n+            Prj.Err.Initialize;\n \n-         Prj.Err.Initialize;\n-      end if;\n+         when Finalize_If_Error =>\n+            if No (Project) then\n+               Prj.Err.Finalize;\n+               Prj.Err.Initialize;\n+            end if;\n+\n+         when Never_Finalize =>\n+            null;\n+      end case;\n \n    exception\n       when X : others =>"}, {"sha": "c4468a41531f0ba62c76cb39d7cba31bfbea8585", "filename": "gcc/ada/prj-part.ads", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0e538ad8071a46fc28634e622faa5a51bf81807/gcc%2Fada%2Fprj-part.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0e538ad8071a46fc28634e622faa5a51bf81807/gcc%2Fada%2Fprj-part.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-part.ads?ref=c0e538ad8071a46fc28634e622faa5a51bf81807", "patch": "@@ -29,11 +29,19 @@ with Prj.Tree;  use Prj.Tree;\n \n package Prj.Part is\n \n+   type Errout_Mode is\n+     (Always_Finalize,\n+      Finalize_If_Error,\n+      Never_Finalize);\n+   --  Whether Parse should call Errout.Finalize (which prints the error\n+   --  messages on stdout). When Never_Finalize is used, Errout is not reset\n+   --  either at the beginning of Parse.\n+\n    procedure Parse\n      (In_Tree                : Project_Node_Tree_Ref;\n       Project                : out Project_Node_Id;\n       Project_File_Name      : String;\n-      Always_Errout_Finalize : Boolean;\n+      Errout_Handling        : Errout_Mode := Always_Finalize;\n       Packages_To_Check      : String_List_Access := All_Packages;\n       Store_Comments         : Boolean := False;\n       Current_Directory      : String := \"\";"}, {"sha": "1a94e71d85bbc62db7002d751e04bc9f3587064a", "filename": "gcc/ada/prj-proc.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0e538ad8071a46fc28634e622faa5a51bf81807/gcc%2Fada%2Fprj-proc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0e538ad8071a46fc28634e622faa5a51bf81807/gcc%2Fada%2Fprj-proc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-proc.adb?ref=c0e538ad8071a46fc28634e622faa5a51bf81807", "patch": "@@ -1065,7 +1065,7 @@ package body Prj.Proc is\n                   if Ext_List then\n                      Value :=\n                        Prj.Ext.Value_Of\n-                         (From_Project_Node_Tree, Name, No_Name);\n+                         (From_Project_Node_Tree.External, Name, No_Name);\n \n                      if Value /= No_Name then\n                         declare\n@@ -1171,7 +1171,7 @@ package body Prj.Proc is\n \n                      Value :=\n                        Prj.Ext.Value_Of\n-                         (From_Project_Node_Tree, Name, Default);\n+                         (From_Project_Node_Tree.External, Name, Default);\n \n                      if Value = No_Name then\n                         if not Quiet_Output then"}, {"sha": "6fdb02e64aa89e29dbe4e7d3e91b0cc09d6dd67e", "filename": "gcc/ada/prj-tree.adb", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0e538ad8071a46fc28634e622faa5a51bf81807/gcc%2Fada%2Fprj-tree.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0e538ad8071a46fc28634e622faa5a51bf81807/gcc%2Fada%2Fprj-tree.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-tree.adb?ref=c0e538ad8071a46fc28634e622faa5a51bf81807", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2001-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -988,8 +988,12 @@ package body Prj.Tree is\n       Projects_Htable.Reset (Tree.Projects_HT);\n \n       --  Do not reset the external references, in case we are reloading a\n-      --  project, since we want to preserve the current environment\n-      --  Name_To_Name_HTable.Reset (Tree.External_References);\n+      --  project, since we want to preserve the current environment.\n+      --  But we still need to ensure that the external references are properly\n+      --  initialized.\n+\n+      Prj.Ext.Initialize (Tree.External);\n+      --  Prj.Ext.Reset (Tree.External);\n    end Initialize;\n \n    ----------\n@@ -1003,7 +1007,7 @@ package body Prj.Tree is\n       if Proj /= null then\n          Project_Node_Table.Free (Proj.Project_Nodes);\n          Projects_Htable.Reset (Proj.Projects_HT);\n-         Name_To_Name_HTable.Reset (Proj.External_References);\n+         Prj.Ext.Free (Proj.External);\n          Free (Proj.Project_Path);\n          Unchecked_Free (Proj);\n       end if;"}, {"sha": "f24c4060cfac219989dab7b4e79546031e24b491", "filename": "gcc/ada/prj-tree.ads", "status": "modified", "additions": 3, "deletions": 12, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0e538ad8071a46fc28634e622faa5a51bf81807/gcc%2Fada%2Fprj-tree.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0e538ad8071a46fc28634e622faa5a51bf81807/gcc%2Fada%2Fprj-tree.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-tree.ads?ref=c0e538ad8071a46fc28634e622faa5a51bf81807", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2001-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -32,6 +32,7 @@ with Table;\n \n with Prj.Attr; use Prj.Attr;\n with Prj.Env;\n+with Prj.Ext;\n \n package Prj.Tree is\n \n@@ -1453,21 +1454,11 @@ package Prj.Tree is\n \n    end Tree_Private_Part;\n \n-   package Name_To_Name_HTable is new GNAT.Dynamic_HTables.Simple_HTable\n-     (Header_Num => Header_Num,\n-      Element    => Name_Id,\n-      No_Element => No_Name,\n-      Key        => Name_Id,\n-      Hash       => Hash,\n-      Equal      => \"=\");\n-   --  General type for htables associating name_id to name_id. This is in\n-   --  particular used to store the values of external references.\n-\n    type Project_Node_Tree_Data is record\n       Project_Nodes : Tree_Private_Part.Project_Node_Table.Instance;\n       Projects_HT   : Tree_Private_Part.Projects_Htable.Instance;\n \n-      External_References : Name_To_Name_HTable.Instance;\n+      External : Prj.Ext.External_References;\n       --  External references are stored in this hash table (and manipulated\n       --  through subprograms in prj-ext.ads). External references are\n       --  project-tree specific so that one can load the same tree twice but"}, {"sha": "f94e38867426bea1138f597538106cb103d82517", "filename": "gcc/ada/s-taprop-vxworks.adb", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0e538ad8071a46fc28634e622faa5a51bf81807/gcc%2Fada%2Fs-taprop-vxworks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0e538ad8071a46fc28634e622faa5a51bf81807/gcc%2Fada%2Fs-taprop-vxworks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-vxworks.adb?ref=c0e538ad8071a46fc28634e622faa5a51bf81807", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---         Copyright (C) 1992-2010, Free Software Foundation, Inc.          --\n+--         Copyright (C) 1992-2011, Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -954,8 +954,13 @@ package body System.Task_Primitives.Operations is\n       --  Set processor affinity\n \n       if T.Common.Base_CPU /= System.Multiprocessors.Not_A_Specific_CPU then\n+         --  Ada 2012 pragma CPU uses CPU numbers starting from 1, while\n+         --  on VxWorks the first CPU is identified by a 0, so we need to\n+         --  adjust.\n+\n          Result :=\n-           taskCpuAffinitySet (T.Common.LL.Thread, int (T.Common.Base_CPU));\n+           taskCpuAffinitySet\n+             (T.Common.LL.Thread, int (T.Common.Base_CPU) - 1);\n \n       elsif T.Common.Task_Info /= Unspecified_Task_Info then\n          Result :=\n@@ -1412,10 +1417,14 @@ package body System.Task_Primitives.Operations is\n       if Environment_Task.Common.Base_CPU /=\n          System.Multiprocessors.Not_A_Specific_CPU\n       then\n+         --  Ada 2012 pragma CPU uses CPU numbers starting from 1, while\n+         --  on VxWorks the first CPU is identified by a 0, so we need to\n+         --  adjust.\n+\n          Result :=\n            taskCpuAffinitySet\n              (Environment_Task.Common.LL.Thread,\n-              int (Environment_Task.Common.Base_CPU));\n+              int (Environment_Task.Common.Base_CPU) - 1);\n          pragma Assert (Result /= -1);\n       end if;\n    end Initialize;"}]}