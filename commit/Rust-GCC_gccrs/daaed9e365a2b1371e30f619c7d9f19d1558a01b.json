{"sha": "daaed9e365a2b1371e30f619c7d9f19d1558a01b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGFhZWQ5ZTM2NWEyYjEzNzFlMzBmNjE5YzdkOWYxOWQxNTU4YTAxYg==", "commit": {"author": {"name": "Kewen Lin", "email": "linkw@linux.ibm.com", "date": "2021-08-03T03:12:00Z"}, "committer": {"name": "Kewen Lin", "email": "linkw@linux.ibm.com", "date": "2021-08-03T03:12:00Z"}, "message": "tree-cfg: Fix typos on dloop in move_sese_region_to_fn\n\nAs mentioned in [1], there is one pre-existing issue before\nthe refactoring of FOR_EACH_LOOP_FN.  The macro will always\nset the given LOOP as NULL at the end of iterating unless\nthere is some early break inside, obviously there is no\nearly break and dloop will be set as NULL after the loop\niterating.  It's kept as NULL after the factoring.\n\nI tried to debug the test case gcc.dg/graphite/pr83359.c\nwith commit 555758de90074 (also reproduced the ICE with\n555758de90074~), and noticed the compilation of the test\ncase only covers the hunk:\n\n  else\n    {\n      moved_orig_loop_num[dloop->orig_loop_num] = -1;\n      dloop->orig_loop_num = 0;\n    }\n\nit doesn't touch the if condition hunk to increase\n\"moved_orig_loop_num[dloop->orig_loop_num]\".  So the\nfollowing hunk guarded with\n\n  if (moved_orig_loop_num[orig_loop_num] == 2)\n\nusing dloop for dereference doesn't get executed.  It\nexplains why the problem doesn't get exposed before.\n\nBy looking to the code using dloop, I think it's a copy\npaste typo, the modified assertion codes have the same\nwords as the above condition check.  In that context, the\nexpected original number has been assigned to variable\norig_loop_num by extracting from the arg0 of the call\nIFN_LOOP_DIST_ALIAS.\n\n[1] https://gcc.gnu.org/pipermail/gcc-patches/2021-July/576367.html\n\ngcc/ChangeLog:\n\n\t* tree-cfg.c (move_sese_region_to_fn): Fix typos on dloop.", "tree": {"sha": "38032f26950cbb4e2dfa0fe754dfcd7c4832721f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/38032f26950cbb4e2dfa0fe754dfcd7c4832721f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/daaed9e365a2b1371e30f619c7d9f19d1558a01b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/daaed9e365a2b1371e30f619c7d9f19d1558a01b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/daaed9e365a2b1371e30f619c7d9f19d1558a01b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/daaed9e365a2b1371e30f619c7d9f19d1558a01b/comments", "author": {"login": "jedilyn", "id": 38515402, "node_id": "MDQ6VXNlcjM4NTE1NDAy", "avatar_url": "https://avatars.githubusercontent.com/u/38515402?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jedilyn", "html_url": "https://github.com/jedilyn", "followers_url": "https://api.github.com/users/jedilyn/followers", "following_url": "https://api.github.com/users/jedilyn/following{/other_user}", "gists_url": "https://api.github.com/users/jedilyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/jedilyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jedilyn/subscriptions", "organizations_url": "https://api.github.com/users/jedilyn/orgs", "repos_url": "https://api.github.com/users/jedilyn/repos", "events_url": "https://api.github.com/users/jedilyn/events{/privacy}", "received_events_url": "https://api.github.com/users/jedilyn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jedilyn", "id": 38515402, "node_id": "MDQ6VXNlcjM4NTE1NDAy", "avatar_url": "https://avatars.githubusercontent.com/u/38515402?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jedilyn", "html_url": "https://github.com/jedilyn", "followers_url": "https://api.github.com/users/jedilyn/followers", "following_url": "https://api.github.com/users/jedilyn/following{/other_user}", "gists_url": "https://api.github.com/users/jedilyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/jedilyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jedilyn/subscriptions", "organizations_url": "https://api.github.com/users/jedilyn/orgs", "repos_url": "https://api.github.com/users/jedilyn/repos", "events_url": "https://api.github.com/users/jedilyn/events{/privacy}", "received_events_url": "https://api.github.com/users/jedilyn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "724adffe65e1268e8b3f2ab538660020f7572114", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/724adffe65e1268e8b3f2ab538660020f7572114", "html_url": "https://github.com/Rust-GCC/gccrs/commit/724adffe65e1268e8b3f2ab538660020f7572114"}], "stats": {"total": 10, "additions": 4, "deletions": 6}, "files": [{"sha": "9883eaaa9bf1f5793ebe29d8cf120997d8c7d357", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/daaed9e365a2b1371e30f619c7d9f19d1558a01b/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/daaed9e365a2b1371e30f619c7d9f19d1558a01b/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=daaed9e365a2b1371e30f619c7d9f19d1558a01b", "patch": "@@ -7747,9 +7747,8 @@ move_sese_region_to_fn (struct function *dest_cfun, basic_block entry_bb,\n \n   /* Fix up orig_loop_num.  If the block referenced in it has been moved\n      to dest_cfun, update orig_loop_num field, otherwise clear it.  */\n-  class loop *dloop = NULL;\n   signed char *moved_orig_loop_num = NULL;\n-  for (class loop *dloop : loops_list (dest_cfun, 0))\n+  for (auto dloop : loops_list (dest_cfun, 0))\n     if (dloop->orig_loop_num)\n       {\n \tif (moved_orig_loop_num == NULL)\n@@ -7787,11 +7786,10 @@ move_sese_region_to_fn (struct function *dest_cfun, basic_block entry_bb,\n \t      /* If we have moved both loops with this orig_loop_num into\n \t\t dest_cfun and the LOOP_DIST_ALIAS call is being moved there\n \t\t too, update the first argument.  */\n-\t      gcc_assert ((*larray)[dloop->orig_loop_num] != NULL\n-\t\t\t  && (get_loop (saved_cfun, dloop->orig_loop_num)\n-\t\t\t      == NULL));\n+\t      gcc_assert ((*larray)[orig_loop_num] != NULL\n+\t\t\t  && (get_loop (saved_cfun, orig_loop_num) == NULL));\n \t      tree t = build_int_cst (integer_type_node,\n-\t\t\t\t      (*larray)[dloop->orig_loop_num]->num);\n+\t\t\t\t      (*larray)[orig_loop_num]->num);\n \t      gimple_call_set_arg (g, 0, t);\n \t      update_stmt (g);\n \t      /* Make sure the following loop will not update it.  */"}]}