{"sha": "7892ff37f407ef47ee852f281a80fa0dba6a5a67", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzg5MmZmMzdmNDA3ZWY0N2VlODUyZjI4MWE4MGZhMGRiYTZhNWE2Nw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-01-29T08:36:19Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-01-29T08:36:19Z"}, "message": "analyzer: fix build with gcc 4.4 (PR 93276)\n\nAll that is really needed is make sure you #include \"diagnostic-core.h\"\nbefore including pretty-print.h.  By including\ndiagnostic-core.h first, you do:\nand then pretty-print.h will do:\nIf instead pretty-print.h is included first, then it will use __gcc_diag__\ninstead of __gcc_tdiag__ and thus will assume %E/%D etc. can't be handled.\n\n2020-01-29  Jakub Jelinek  <jakub@redhat.com>\n\n\t* analyzer.h (PUSH_IGNORE_WFORMAT, POP_IGNORE_WFORMAT): Remove.\n\t* constraint-manager.cc: Include diagnostic-core.h before graphviz.h.\n\t(range::dump, equiv_class::print): Don't use PUSH_IGNORE_WFORMAT or\n\tPOP_IGNORE_WFORMAT.\n\t* state-purge.cc: Include diagnostic-core.h before\n\tgimple-pretty-print.h.\n\t(state_purge_annotator::add_node_annotations, print_vec_of_names):\n\tDon't use PUSH_IGNORE_WFORMAT or POP_IGNORE_WFORMAT.\n\t* region-model.cc: Move diagnostic-core.h include before graphviz.h.\n\t(path_var::dump, svalue::print, constant_svalue::print_details,\n\tregion::dump_to_pp, region::dump_child_label, region::print_fields,\n\tmap_region::print_fields, map_region::dump_dot_to_pp,\n\tmap_region::dump_child_label, array_region::print_fields,\n\tarray_region::dump_dot_to_pp): Don't use PUSH_IGNORE_WFORMAT or\n\tPOP_IGNORE_WFORMAT.", "tree": {"sha": "1cd63cc7cff877b9188b8544403c5ba8975d5646", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1cd63cc7cff877b9188b8544403c5ba8975d5646"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7892ff37f407ef47ee852f281a80fa0dba6a5a67", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7892ff37f407ef47ee852f281a80fa0dba6a5a67", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7892ff37f407ef47ee852f281a80fa0dba6a5a67", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7892ff37f407ef47ee852f281a80fa0dba6a5a67/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "148018bc3fe7ce47d005a1c5f7b6dd044024a4af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/148018bc3fe7ce47d005a1c5f7b6dd044024a4af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/148018bc3fe7ce47d005a1c5f7b6dd044024a4af"}], "stats": {"total": 68, "additions": 21, "deletions": 47}, "files": [{"sha": "94a67ea40f776cb9878e0ecd45fbcf24a0ad0c6b", "filename": "gcc/analyzer/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7892ff37f407ef47ee852f281a80fa0dba6a5a67/gcc%2Fanalyzer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7892ff37f407ef47ee852f281a80fa0dba6a5a67/gcc%2Fanalyzer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2FChangeLog?ref=7892ff37f407ef47ee852f281a80fa0dba6a5a67", "patch": "@@ -1,3 +1,21 @@\n+2020-01-29  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* analyzer.h (PUSH_IGNORE_WFORMAT, POP_IGNORE_WFORMAT): Remove.\n+\t* constraint-manager.cc: Include diagnostic-core.h before graphviz.h.\n+\t(range::dump, equiv_class::print): Don't use PUSH_IGNORE_WFORMAT or\n+\tPOP_IGNORE_WFORMAT.\n+\t* state-purge.cc: Include diagnostic-core.h before\n+\tgimple-pretty-print.h.\n+\t(state_purge_annotator::add_node_annotations, print_vec_of_names):\n+\tDon't use PUSH_IGNORE_WFORMAT or POP_IGNORE_WFORMAT.\n+\t* region-model.cc: Move diagnostic-core.h include before graphviz.h.\n+\t(path_var::dump, svalue::print, constant_svalue::print_details,\n+\tregion::dump_to_pp, region::dump_child_label, region::print_fields,\n+\tmap_region::print_fields, map_region::dump_dot_to_pp,\n+\tmap_region::dump_child_label, array_region::print_fields,\n+\tarray_region::dump_dot_to_pp): Don't use PUSH_IGNORE_WFORMAT or\n+\tPOP_IGNORE_WFORMAT.\n+\n 2020-01-28  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR analyzer/93316"}, {"sha": "1ae76cc4ea00d24680f9648f7dfbf1cf1524136a", "filename": "gcc/analyzer/analyzer.h", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7892ff37f407ef47ee852f281a80fa0dba6a5a67/gcc%2Fanalyzer%2Fanalyzer.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7892ff37f407ef47ee852f281a80fa0dba6a5a67/gcc%2Fanalyzer%2Fanalyzer.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fanalyzer.h?ref=7892ff37f407ef47ee852f281a80fa0dba6a5a67", "patch": "@@ -100,22 +100,6 @@ class auto_cfun\n   ~auto_cfun () { pop_cfun (); }\n };\n \n-/* Macros for temporarily suppressing -Wformat and -Wformat-extra-args,\n-   for those versions of GCC that support pragmas within a function\n-   (4.6 onwards).  */\n-\n-#if GCC_VERSION >= 4006\n-# define PUSH_IGNORE_WFORMAT \\\n-  _Pragma(\"GCC diagnostic push\") \\\n-  _Pragma(\"GCC diagnostic ignored \\\"-Wformat\\\"\") \\\n-  _Pragma(\"GCC diagnostic ignored \\\"-Wformat-extra-args\\\"\")\n-# define POP_IGNORE_WFORMAT \\\n-  _Pragma(\"GCC diagnostic pop\")\n-#else\n-# define PUSH_IGNORE_WFORMAT\n-# define POP_IGNORE_WFORMAT\n-#endif\n-\n /* A template for creating hash traits for a POD type.  */\n \n template <typename Type>"}, {"sha": "777bd1b13c9bd989767fa4593d1e12ddcbc0ee7c", "filename": "gcc/analyzer/constraint-manager.cc", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7892ff37f407ef47ee852f281a80fa0dba6a5a67/gcc%2Fanalyzer%2Fconstraint-manager.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7892ff37f407ef47ee852f281a80fa0dba6a5a67/gcc%2Fanalyzer%2Fconstraint-manager.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fconstraint-manager.cc?ref=7892ff37f407ef47ee852f281a80fa0dba6a5a67", "patch": "@@ -28,6 +28,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"gimple-iterator.h\"\n #include \"fold-const.h\"\n #include \"selftest.h\"\n+#include \"diagnostic-core.h\"\n #include \"graphviz.h\"\n #include \"function.h\"\n #include \"analyzer/analyzer.h\"\n@@ -120,13 +121,11 @@ bound::get_relation_as_str () const\n void\n range::dump (pretty_printer *pp) const\n {\n-PUSH_IGNORE_WFORMAT\n   pp_printf (pp, \"%qE %s x %s %qE\",\n \t     m_lower_bound.m_constant,\n \t     m_lower_bound.get_relation_as_str (),\n \t     m_upper_bound.get_relation_as_str (),\n \t     m_upper_bound.m_constant);\n-POP_IGNORE_WFORMAT\n }\n \n /* Determine if there is only one possible value for this range.\n@@ -200,9 +199,7 @@ equiv_class::print (pretty_printer *pp) const\n     {\n       if (i > 0)\n \tpp_string (pp, \" == \");\n-PUSH_IGNORE_WFORMAT\n       pp_printf (pp, \"%qE\", m_constant);\n-POP_IGNORE_WFORMAT\n     }\n   pp_character (pp, '}');\n }"}, {"sha": "a5b3dffcc278ce6348031657b2fcc9efb5a46316", "filename": "gcc/analyzer/region-model.cc", "status": "modified", "additions": 1, "deletions": 23, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7892ff37f407ef47ee852f281a80fa0dba6a5a67/gcc%2Fanalyzer%2Fregion-model.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7892ff37f407ef47ee852f281a80fa0dba6a5a67/gcc%2Fanalyzer%2Fregion-model.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fregion-model.cc?ref=7892ff37f407ef47ee852f281a80fa0dba6a5a67", "patch": "@@ -26,6 +26,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"basic-block.h\"\n #include \"gimple.h\"\n #include \"gimple-iterator.h\"\n+#include \"diagnostic-core.h\"\n #include \"graphviz.h\"\n #include \"options.h\"\n #include \"cgraph.h\"\n@@ -37,7 +38,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-pretty-print.h\"\n #include \"diagnostic-color.h\"\n #include \"diagnostic-metadata.h\"\n-#include \"diagnostic-core.h\"\n #include \"tristate.h\"\n #include \"bitmap.h\"\n #include \"selftest.h\"\n@@ -88,14 +88,12 @@ dump_tree (pretty_printer *pp, tree t)\n void\n path_var::dump (pretty_printer *pp) const\n {\n-PUSH_IGNORE_WFORMAT\n   if (m_tree == NULL_TREE)\n     pp_string (pp, \"NULL\");\n   if (CONSTANT_CLASS_P (m_tree))\n     pp_printf (pp, \"%qE\", m_tree);\n   else\n     pp_printf (pp, \"(%qE @ %i)\", m_tree, m_stack_depth);\n-POP_IGNORE_WFORMAT\n }\n \n /* For use in printing a comma-separated list.  */\n@@ -318,13 +316,11 @@ svalue::print (const region_model &model,\n   this_sid.print (pp);\n   pp_string (pp, \": {\");\n \n-PUSH_IGNORE_WFORMAT\n   if (m_type)\n     {\n       gcc_assert (TYPE_P (m_type));\n       pp_printf (pp, \"type: %qT, \", m_type);\n     }\n-POP_IGNORE_WFORMAT\n \n   /* vfunc.  */\n   print_details (model, this_sid, pp);\n@@ -686,9 +682,7 @@ constant_svalue::print_details (const region_model &model ATTRIBUTE_UNUSED,\n \t\t\t\tsvalue_id this_sid ATTRIBUTE_UNUSED,\n \t\t\t\tpretty_printer *pp) const\n {\n-PUSH_IGNORE_WFORMAT\n   pp_printf (pp, \"%qE\", m_cst_expr);\n-POP_IGNORE_WFORMAT\n }\n \n /* Implementation of svalue::get_child_sid vfunc for constant_svalue.  */\n@@ -1284,9 +1278,7 @@ region::dump_to_pp (const region_model &model,\n     }\n   if (m_type)\n     {\n-PUSH_IGNORE_WFORMAT\n       pp_printf (pp, \"%s type: %qT\", field_prefix, m_type);\n-POP_IGNORE_WFORMAT\n       pp_newline (pp);\n     }\n \n@@ -1336,9 +1328,7 @@ region::dump_child_label (const region_model &model,\n \tpp_string (pp, \"active \");\n       else\n \tpp_string (pp, \"inactive \");\n-PUSH_IGNORE_WFORMAT\n       pp_printf (pp, \"view as %qT: \", child->get_type ());\n-POP_IGNORE_WFORMAT\n     }\n }\n \n@@ -1468,10 +1458,8 @@ region::print_fields (const region_model &model ATTRIBUTE_UNUSED,\n   pp_printf (pp, \", sval: \");\n   m_sval_id.print (pp);\n \n-PUSH_IGNORE_WFORMAT\n   if (m_type)\n     pp_printf (pp, \", type: %qT\", m_type);\n-POP_IGNORE_WFORMAT\n }\n \n /* Determine if a pointer to this region must be non-NULL.\n@@ -1574,9 +1562,7 @@ map_region::print_fields (const region_model &model,\n \tpp_string (pp, \", \");\n       tree expr = (*iter).first;\n       region_id child_rid = (*iter).second;\n-PUSH_IGNORE_WFORMAT\n       pp_printf (pp, \"%qE: \", expr);\n-POP_IGNORE_WFORMAT\n       child_rid.print (pp);\n     }\n   pp_string (pp, \"}\");\n@@ -1601,9 +1587,7 @@ map_region::dump_dot_to_pp (const region_model &model,\n \n       pp_printf (pp, \"rid_label_%i [label=\\\"\", child_rid.as_int ());\n       pp_write_text_to_stream (pp);\n-PUSH_IGNORE_WFORMAT\n       pp_printf (pp, \"%qE\", expr);\n-POP_IGNORE_WFORMAT\n       pp_write_text_as_dot_label_to_stream (pp, /*for_record=*/false);\n       pp_string (pp, \"\\\"];\");\n       pp_newline (pp);\n@@ -1633,12 +1617,10 @@ map_region::dump_child_label (const region_model &model,\n       if (child_rid == (*iter).second)\n \t{\n \t  tree key = (*iter).first;\n-PUSH_IGNORE_WFORMAT\n \t  if (DECL_P (key))\n \t    pp_printf (pp, \"%qD: \", key);\n \t  else\n \t    pp_printf (pp, \"%qE: \", key);\n-POP_IGNORE_WFORMAT\n \t}\n     }\n }\n@@ -2246,9 +2228,7 @@ array_region::print_fields (const region_model &model,\n \tpp_string (pp, \", \");\n       int key = (*iter).first;\n       region_id child_rid = (*iter).second;\n-PUSH_IGNORE_WFORMAT\n       pp_printf (pp, \"[%i]: \", key);\n-POP_IGNORE_WFORMAT\n       child_rid.print (pp);\n     }\n   pp_string (pp, \"}\");\n@@ -2273,9 +2253,7 @@ array_region::dump_dot_to_pp (const region_model &model,\n \n       pp_printf (pp, \"rid_label_%i [label=\\\"\", child_rid.as_int ());\n       pp_write_text_to_stream (pp);\n-PUSH_IGNORE_WFORMAT\n       pp_printf (pp, \"%qi\", key);\n-POP_IGNORE_WFORMAT\n       pp_write_text_as_dot_label_to_stream (pp, /*for_record=*/false);\n       pp_string (pp, \"\\\"];\");\n       pp_newline (pp);"}, {"sha": "01237f096fcb7084db9c7845ddfbba6f1489ddf9", "filename": "gcc/analyzer/state-purge.cc", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7892ff37f407ef47ee852f281a80fa0dba6a5a67/gcc%2Fanalyzer%2Fstate-purge.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7892ff37f407ef47ee852f281a80fa0dba6a5a67/gcc%2Fanalyzer%2Fstate-purge.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fstate-purge.cc?ref=7892ff37f407ef47ee852f281a80fa0dba6a5a67", "patch": "@@ -34,6 +34,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-phinodes.h\"\n #include \"options.h\"\n #include \"ssa-iterators.h\"\n+#include \"diagnostic-core.h\"\n #include \"gimple-pretty-print.h\"\n #include \"function.h\"\n #include \"analyzer/analyzer.h\"\n@@ -444,12 +445,10 @@ state_purge_annotator::add_node_annotations (graphviz_out *gv,\n        state_purge_per_ssa_name *per_name_data = (*iter).second;\n        if (per_name_data->get_function () == n.m_fun)\n \t {\n-PUSH_IGNORE_WFORMAT\n \t   if (per_name_data->needed_at_point_p (before_supernode))\n \t     pp_printf (pp, \"%qE needed here\", name);\n \t   else\n \t     pp_printf (pp, \"%qE not needed here\", name);\n-POP_IGNORE_WFORMAT\n \t }\n        pp_newline (pp);\n      }\n@@ -476,9 +475,7 @@ print_vec_of_names (graphviz_out *gv, const char *title,\n     {\n       if (i > 0)\n \tpp_string (pp, \", \");\n-PUSH_IGNORE_WFORMAT\n       pp_printf (pp, \"%qE\", name);\n-POP_IGNORE_WFORMAT\n     }\n   pp_printf (pp, \"}\");\n   pp_write_text_as_html_like_dot_to_stream (pp);"}]}