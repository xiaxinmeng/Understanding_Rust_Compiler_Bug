{"sha": "312f9b9de78c8074663a6450d49bd5113dea3509", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzEyZjliOWRlNzhjODA3NDY2M2E2NDUwZDQ5YmQ1MTEzZGVhMzUwOQ==", "commit": {"author": {"name": "Christian Bruel", "email": "christian.bruel@st.com", "date": "2012-09-14T13:01:56Z"}, "committer": {"name": "Christian Bruel", "email": "chrbr@gcc.gnu.org", "date": "2012-09-14T13:01:56Z"}, "message": "predicates.md (t_reg_operand): Check REG_P for SUBREG.\n\n2012-09-14  Christian Bruel  <christian.bruel@st.com>\n\n       * config/sh/predicates.md (t_reg_operand): Check REG_P for SUBREG.\n       * config/sh/sh.c (sequence_insn_p: Check INSNP_P for SEQUENCE.\n\nFrom-SVN: r191300", "tree": {"sha": "0251b245e6c8c92974ef525cc31ff5dfca381a8f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0251b245e6c8c92974ef525cc31ff5dfca381a8f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/312f9b9de78c8074663a6450d49bd5113dea3509", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/312f9b9de78c8074663a6450d49bd5113dea3509", "html_url": "https://github.com/Rust-GCC/gccrs/commit/312f9b9de78c8074663a6450d49bd5113dea3509", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/312f9b9de78c8074663a6450d49bd5113dea3509/comments", "author": null, "committer": null, "parents": [{"sha": "5f08ae1eb5eeb4c6f0c44df030e3de77f7da2125", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f08ae1eb5eeb4c6f0c44df030e3de77f7da2125", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f08ae1eb5eeb4c6f0c44df030e3de77f7da2125"}], "stats": {"total": 16, "additions": 9, "deletions": 7}, "files": [{"sha": "ad37bbe02606c25c25a27716111f2f79162c7e18", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/312f9b9de78c8074663a6450d49bd5113dea3509/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/312f9b9de78c8074663a6450d49bd5113dea3509/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=312f9b9de78c8074663a6450d49bd5113dea3509", "patch": "@@ -1,3 +1,8 @@\n+2012-09-14  Christian Bruel  <christian.bruel@st.com>\n+\n+\t* config/sh/predicates.md (t_reg_operand): Check REG_P for SUBREG.\n+\t* config/sh/sh.c (sequence_insn_p: Check INSNP_P for SEQUENCE.\n+\n 2012-09-14  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/54564"}, {"sha": "8a4f7db044cdfb375f8f942261793ee11b5d6446", "filename": "gcc/config/sh/predicates.md", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/312f9b9de78c8074663a6450d49bd5113dea3509/gcc%2Fconfig%2Fsh%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/312f9b9de78c8074663a6450d49bd5113dea3509/gcc%2Fconfig%2Fsh%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fpredicates.md?ref=312f9b9de78c8074663a6450d49bd5113dea3509", "patch": "@@ -998,11 +998,12 @@\n \treturn REGNO (op) == T_REG;\n \n       case SUBREG:\n-\treturn REGNO (SUBREG_REG (op)) == T_REG;\n+\treturn REG_P (SUBREG_REG (op)) && REGNO (SUBREG_REG (op)) == T_REG;\n \n       case ZERO_EXTEND:\n       case SIGN_EXTEND:\n \treturn GET_CODE (XEXP (op, 0)) == SUBREG\n+\t       && REG_P (SUBREG_REG (XEXP (op, 0)))\n \t       && REGNO (SUBREG_REG (XEXP (op, 0))) == T_REG;\n \n       default:"}, {"sha": "0de17d41b7959770947e53d1fc319bdebec71ee7", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/312f9b9de78c8074663a6450d49bd5113dea3509/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/312f9b9de78c8074663a6450d49bd5113dea3509/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=312f9b9de78c8074663a6450d49bd5113dea3509", "patch": "@@ -9876,7 +9876,7 @@ fpscr_set_from_mem (int mode, HARD_REG_SET regs_live)\n static bool\n sequence_insn_p (rtx insn)\n {\n-  rtx prev, next, pat;\n+  rtx prev, next;\n \n   prev = PREV_INSN (insn);\n   if (prev == NULL)\n@@ -9886,11 +9886,7 @@ sequence_insn_p (rtx insn)\n   if (next == NULL)\n     return false;\n \n-  pat = PATTERN (next);\n-  if (pat == NULL)\n-    return false;\n-\n-  return GET_CODE (pat) == SEQUENCE;\n+  return INSN_P (next) && GET_CODE (PATTERN (next)) == SEQUENCE;\n }\n \n int"}]}