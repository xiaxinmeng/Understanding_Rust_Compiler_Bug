{"sha": "7723f569345ae82ba440552251a84e65c2a9dcb5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzcyM2Y1NjkzNDVhZTgyYmE0NDA1NTIyNTFhODRlNjVjMmE5ZGNiNQ==", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@axis.com", "date": "2021-03-04T21:58:42Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@axis.com", "date": "2021-03-06T03:14:53Z"}, "message": "cris: don't define MAX_FIXED_MODE_SIZE\n\nIt's been 32 ever since the CRIS port was committed.\nA TODO-item of mine has been to check whether the\nnon-default setting of MAX_FIXED_MODE_SIZE makes sense\nwrt. performance and/or code-size with a modern gcc.  It\ndoesn't, so it goes.  The setting is now the default,\nGET_MODE_BITSIZE (DImode) (defaults.h) i.e. 64.\n\nMeasurements at r11-7500 (f3641ac70eb0) on coremark with\n\"-O2 -march=v10 -mno-mul-bug-workaround\" shows 0.04%\nperformance improvement with this change, and by inspection\nthe effect is that unused and/or unneeded stack-frames are\neliminated more often in the floating-point library (not in\nthe coremark main loop, thus the marginal improvement).  The\nfloating-point library is full of 64-bit unions used to pick\napart floating point numbers, so this kind of makes sense.\n\nInspection of a simulator trace shows that this is indeed\nthe only effect in coremark.  Other local micro-benchmarks\nagree as to the net effect (no traces were inspected\nthough), and the most floating-point-heavy test shows an 8%\nimprovement.  These effects are of course subject to gcc\ncore tweaks and may make sense to be adjusted again in a\nfuture release.\n\nWhile MAX_FIXED_MODE_SIZE is IMO supposed to be an optional\nmacro for performance, setting it to anything smaller than\ntwice the size of an address exposes bad decisions in gcc\nmiddle end, sometimes leading to internal compiler errors.\n(It being set to 32 should *not* affect use of DImode as an\ninteger mode; it's for \"integer machine modes of this size\nor smaller can be used for structures and unions with the\nappropriate sizes\".)  Thus, with the default 64 instead of\n32, there are two tests that now pass for the first time:\ngcc.dg/attr-vector_size.c and gcc.dg/tree-ssa/pr93121-1.c.\n\ngcc:\n\t* config/cris/cris.h (MAX_FIXED_MODE_SIZE): Don't define.", "tree": {"sha": "bc140322884b835800b1343642f44ced6ca4e488", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bc140322884b835800b1343642f44ced6ca4e488"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7723f569345ae82ba440552251a84e65c2a9dcb5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7723f569345ae82ba440552251a84e65c2a9dcb5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7723f569345ae82ba440552251a84e65c2a9dcb5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7723f569345ae82ba440552251a84e65c2a9dcb5/comments", "author": {"login": "hpataxisdotcom", "id": 80339731, "node_id": "MDQ6VXNlcjgwMzM5NzMx", "avatar_url": "https://avatars.githubusercontent.com/u/80339731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hpataxisdotcom", "html_url": "https://github.com/hpataxisdotcom", "followers_url": "https://api.github.com/users/hpataxisdotcom/followers", "following_url": "https://api.github.com/users/hpataxisdotcom/following{/other_user}", "gists_url": "https://api.github.com/users/hpataxisdotcom/gists{/gist_id}", "starred_url": "https://api.github.com/users/hpataxisdotcom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hpataxisdotcom/subscriptions", "organizations_url": "https://api.github.com/users/hpataxisdotcom/orgs", "repos_url": "https://api.github.com/users/hpataxisdotcom/repos", "events_url": "https://api.github.com/users/hpataxisdotcom/events{/privacy}", "received_events_url": "https://api.github.com/users/hpataxisdotcom/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hpataxisdotcom", "id": 80339731, "node_id": "MDQ6VXNlcjgwMzM5NzMx", "avatar_url": "https://avatars.githubusercontent.com/u/80339731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hpataxisdotcom", "html_url": "https://github.com/hpataxisdotcom", "followers_url": "https://api.github.com/users/hpataxisdotcom/followers", "following_url": "https://api.github.com/users/hpataxisdotcom/following{/other_user}", "gists_url": "https://api.github.com/users/hpataxisdotcom/gists{/gist_id}", "starred_url": "https://api.github.com/users/hpataxisdotcom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hpataxisdotcom/subscriptions", "organizations_url": "https://api.github.com/users/hpataxisdotcom/orgs", "repos_url": "https://api.github.com/users/hpataxisdotcom/repos", "events_url": "https://api.github.com/users/hpataxisdotcom/events{/privacy}", "received_events_url": "https://api.github.com/users/hpataxisdotcom/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3c297921e80cd8caab3dd2da89bcef97a910bb31", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c297921e80cd8caab3dd2da89bcef97a910bb31", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c297921e80cd8caab3dd2da89bcef97a910bb31"}], "stats": {"total": 7, "additions": 0, "deletions": 7}, "files": [{"sha": "1f8ccc5dec986e8239f87b810cd2ea1f297b53c9", "filename": "gcc/config/cris/cris.h", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7723f569345ae82ba440552251a84e65c2a9dcb5/gcc%2Fconfig%2Fcris%2Fcris.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7723f569345ae82ba440552251a84e65c2a9dcb5/gcc%2Fconfig%2Fcris%2Fcris.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcris%2Fcris.h?ref=7723f569345ae82ba440552251a84e65c2a9dcb5", "patch": "@@ -352,13 +352,6 @@ extern int cris_cpu_version;\n    with other GNU/Linux ports (i.e. elfos.h users).  */\n #undef PCC_BITFIELD_TYPE_MATTERS\n \n-/* This is only used for non-scalars.  Strange stuff happens to structs\n-   (FIXME: What?) if we use anything larger than largest actually used\n-   datum size, so lets make it 32.  The type \"long long\" will still work\n-   as usual.  We can still have DImode insns, but they will only be used\n-   for scalar data (i.e. long long).  */\n-#define MAX_FIXED_MODE_SIZE 32\n-\n \n /* Node: Type Layout */\n "}]}