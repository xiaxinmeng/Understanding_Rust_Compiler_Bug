{"sha": "52055987fba37d1eb3b3ed34063a07c2e912538e", "node_id": "C_kwDOANBUbNoAKDUyMDU1OTg3ZmJhMzdkMWViM2IzZWQzNDA2M2EwN2MyZTkxMjUzOGU", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-10-13T00:16:22Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-10-13T00:16:22Z"}, "message": "Daily bump.", "tree": {"sha": "668400d56de1834ca3dd10f51892b222d0615aca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/668400d56de1834ca3dd10f51892b222d0615aca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/52055987fba37d1eb3b3ed34063a07c2e912538e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52055987fba37d1eb3b3ed34063a07c2e912538e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/52055987fba37d1eb3b3ed34063a07c2e912538e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52055987fba37d1eb3b3ed34063a07c2e912538e/comments", "author": null, "committer": null, "parents": [{"sha": "bd6f2c63168e89bede631daf8b673eab16acc747", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd6f2c63168e89bede631daf8b673eab16acc747", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd6f2c63168e89bede631daf8b673eab16acc747"}], "stats": {"total": 347, "additions": 346, "deletions": 1}, "files": [{"sha": "0519a399997ef6dd8c27d8f1c64d0fe6ec9187c0", "filename": "ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52055987fba37d1eb3b3ed34063a07c2e912538e/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52055987fba37d1eb3b3ed34063a07c2e912538e/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=52055987fba37d1eb3b3ed34063a07c2e912538e", "patch": "@@ -1,3 +1,10 @@\n+2021-10-12  Eric Gallager  <egallager@gcc.gnu.org>\n+\n+\t* Makefile.def: Mark libcody, libdecnumber,\n+\tc++tools, libgcc, and libobjc as missing TAGS\n+\ttargets.\n+\t* Makefile.in: Regenerate.\n+\n 2021-10-07  Siddhesh Poyarekar  <siddhesh@gotplt.org>\n \n \t* MAINTAINERS: Add myself to DCO section and update email"}, {"sha": "d7ca8042832bed5d63c711a7eeb2e609bfb00753", "filename": "gcc/ChangeLog", "status": "modified", "additions": 108, "deletions": 0, "changes": 108, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52055987fba37d1eb3b3ed34063a07c2e912538e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52055987fba37d1eb3b3ed34063a07c2e912538e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=52055987fba37d1eb3b3ed34063a07c2e912538e", "patch": "@@ -1,3 +1,111 @@\n+2021-10-12  Bill Schmidt  <wschmidt@linux.ibm.com>\n+\n+\tPR target/101985\n+\t* config/rs6000/altivec.h (vec_cpsgn): Swap operand order.\n+\t* config/rs6000/rs6000-overload.def (VEC_COPYSIGN): Use SKIP to\n+\tavoid generating an automatic #define of vec_cpsgn.  Use the\n+\tcorrect built-in for V4SFmode that doesn't depend on VSX.\n+\n+2021-10-12  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/85730\n+\tPR target/82524\n+\t* config/i386/i386.md (*add<mode>_1_slp): Rewrite as\n+\tdefine_insn_and_split pattern.  Add alternative 1 and split it\n+\tpost reload to insert operand 1 into the low part of operand 0.\n+\t(*sub<mode>_1_slp): Ditto.\n+\t(*and<mode>_1_slp): Ditto.\n+\t(*<any_or:code><mode>_1_slp): Ditto.\n+\t(*ashl<mode>3_1_slp): Ditto.\n+\t(*<any_shiftrt:insn><mode>3_1_slp): Ditto.\n+\t(*<any_rotate:insn><mode>3_1_slp): Ditto.\n+\t(*neg<mode>_1_slp): New insn_and_split pattern.\n+\t(*one_cmpl<mode>_1_slp): Ditto.\n+\n+2021-10-12  David Edelsohn  <dje.gcc@gmail.com>\n+\n+\t* doc/install.texi: Update MinGW and mingw-64 Binaries\n+\tdownload links.\n+\n+2021-10-12  Daniel Le Duc Khoi Nguyen  <greenrecyclebin@gmail.com>\n+\n+\t* doc/extend.texi (Common Variable Attributes): Fix typos in\n+\talloc_size documentation.\n+\n+2021-10-12  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/102696\n+\t* tree-vect-slp.c (vect_build_slp_tree_2): Properly mark\n+\tthe tree fatally failed when we reject a BIT_FIELD_REF.\n+\n+2021-10-12  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/102572\n+\t* tree-vect-stmts.c (vect_build_gather_load_calls): When\n+\tgathering the vectorized defs for the mask pass in the\n+\tdesired mask vector type so invariants will be handled\n+\tcorrectly.\n+\n+2021-10-12  Tamar Christina  <tamar.christina@arm.com>\n+\n+\t* config/aarch64/aarch64-sve.md (*fcm<cmp_op><mode>_bic_combine,\n+\t*fcm<cmp_op><mode>_nor_combine, *fcmuo<mode>_bic_combine,\n+\t*fcmuo<mode>_nor_combine): New.\n+\n+2021-10-12  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\tPR target/102588\n+\t* config/sparc/sparc-modes.def (OI): New integer mode.\n+\n+2021-10-12  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gimple-fold.h (clear_padding_type_may_have_padding_p): Declare.\n+\t* gimple-fold.c (clear_padding_type_may_have_padding_p): No longer\n+\tstatic.\n+\n+2021-10-12  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* tree-vectorizer.h (loop_cost_model): New function.\n+\t(unlimited_cost_model): Use it.\n+\t* tree-vect-loop.c (vect_analyze_loop_costing): Use loop_cost_model\n+\tcall instead of flag_vect_cost_model.\n+\t* tree-vect-data-refs.c (vect_enhance_data_refs_alignment): Likewise.\n+\t(vect_prune_runtime_alias_test_list): Likewise.  Also use it instead\n+\tof flag_simd_cost_model.\n+\n+2021-10-12  liuhongt  <hongtao.liu@intel.com>\n+\n+\tPR target/102483\n+\t* config/i386/i386-expand.c (emit_reduc_half): Handle\n+\tV4QImode.\n+\t* config/i386/mmx.md (reduc_<code>_scal_v4qi): New expander.\n+\t(reduc_plus_scal_v4qi): Ditto.\n+\n+2021-10-12  Paul A. Clarke  <pc@us.ibm.com>\n+\n+\t* config/rs6000/smmintrin.h (_mm_cmpeq_epi64, _mm_cmpgt_epi64,\n+\t_mm_mullo_epi32, _mm_mul_epi32, _mm_packus_epi32): New.\n+\t* config/rs6000/nmmintrin.h: Copy from i386, tweak to suit.\n+\n+2021-10-12  Paul A. Clarke  <pc@us.ibm.com>\n+\n+\t* config/rs6000/smmintrin.h (_mm_cvtepi8_epi16, _mm_cvtepi8_epi32,\n+\t_mm_cvtepi8_epi64, _mm_cvtepi16_epi32, _mm_cvtepi16_epi64,\n+\t_mm_cvtepi32_epi64, _mm_cvtepu8_epi16, _mm_cvtepu8_epi32,\n+\t_mm_cvtepu8_epi64, _mm_cvtepu16_epi32, _mm_cvtepu16_epi64,\n+\t_mm_cvtepu32_epi64): New.\n+\n+2021-10-12  Paul A. Clarke  <pc@us.ibm.com>\n+\n+\t* config/rs6000/smmintrin.h (_mm_test_all_zeros,\n+\t_mm_test_all_ones, _mm_test_mix_ones_zeros): Rewrite as macro.\n+\n+2021-10-12  Paul A. Clarke  <pc@us.ibm.com>\n+\n+\t* config/rs6000/smmintrin.h (_mm_min_epi8, _mm_min_epu16,\n+\t_mm_min_epi32, _mm_min_epu32, _mm_max_epi8, _mm_max_epu16,\n+\t_mm_max_epi32, _mm_max_epu32): New.\n+\n 2021-10-11  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* ipa-modref-tree.h (struct modref_access_node): Revert"}, {"sha": "b902c81518ec7026f000073eca69b83f42577990", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52055987fba37d1eb3b3ed34063a07c2e912538e/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52055987fba37d1eb3b3ed34063a07c2e912538e/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=52055987fba37d1eb3b3ed34063a07c2e912538e", "patch": "@@ -1 +1 @@\n-20211012\n+20211013"}, {"sha": "123a664b5d35ddec7a497ca9a1123162cf12a95f", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52055987fba37d1eb3b3ed34063a07c2e912538e/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52055987fba37d1eb3b3ed34063a07c2e912538e/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=52055987fba37d1eb3b3ed34063a07c2e912538e", "patch": "@@ -1,3 +1,15 @@\n+2021-10-12  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* c-format.c (print_char_table): Add %b and %B formats.\n+\t(scan_char_table): Add %b format.\n+\t* c-format.h (T2X_UI, T2X_UL, T2X_ULL, T2X_US, T2X_UC, T2X_ST)\n+\t(T2X_UPD, T2X_UIM): New macros.\n+\n+2021-10-12  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* c-omp.c (c_finish_omp_atomic): Use\n+\tclear_padding_type_may_have_padding_p.\n+\n 2021-10-08  Martin Liska  <mliska@suse.cz>\n \n \t* c-opts.c (c_common_post_options): Use new macro"}, {"sha": "b97f1899351be763c6c004f97f540d79ca6de52c", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52055987fba37d1eb3b3ed34063a07c2e912538e/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52055987fba37d1eb3b3ed34063a07c2e912538e/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=52055987fba37d1eb3b3ed34063a07c2e912538e", "patch": "@@ -1,3 +1,17 @@\n+2021-10-12  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR fortran/102541\n+\t* check.c (gfc_check_present): Handle optional CLASS.\n+\t* interface.c (gfc_compare_actual_formal): Likewise.\n+\t* trans-array.c (gfc_trans_g77_array): Likewise.\n+\t* trans-decl.c (gfc_build_dummy_array_decl): Likewise.\n+\t* trans-types.c (gfc_sym_type): Likewise.\n+\t* primary.c (gfc_variable_attr): Fixes for dummy and\n+\tpointer when 'class%_data' is passed.\n+\t* trans-expr.c (set_dtype_for_unallocated, gfc_conv_procedure_call):\n+\tFor assumed-rank dummy, fix setting rank for dealloc/notassoc actual\n+\tand setting ubound to -1 for assumed-size actuals.\n+\n 2021-10-10  Harald Anlauf  <anlauf@gmx.de>\n \n \tPR fortran/99348"}, {"sha": "0c70382da0122673cad814a5535a74e32ff2bc7a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 115, "deletions": 0, "changes": 115, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52055987fba37d1eb3b3ed34063a07c2e912538e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52055987fba37d1eb3b3ed34063a07c2e912538e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=52055987fba37d1eb3b3ed34063a07c2e912538e", "patch": "@@ -1,3 +1,118 @@\n+2021-10-12  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* gcc.dg/format/c11-printf-1.c, gcc.dg/format/c11-scanf-1.c,\n+\tgcc.dg/format/c2x-printf-1.c, gcc.dg/format/c2x-scanf-1.c,\n+\tgcc.dg/format/ext-9.c, gcc.dg/format/ext-10.c: New tests.\n+\n+2021-10-12  Bill Schmidt  <wschmidt@linux.ibm.com>\n+\n+\tPR target/101985\n+\t* gcc.target/powerpc/pr101985-1.c: New.\n+\t* gcc.target/powerpc/pr101985-2.c: New.\n+\n+2021-10-12  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/85730\n+\tPR target/82524\n+\t* gcc.target/i386/pr85730.c: New test.\n+\n+2021-10-12  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/102696\n+\t* g++.dg/vect/pr102696.cc: New testcase.\n+\n+2021-10-12  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/102572\n+\t* g++.dg/vect/pr102572.cc: New testcase.\n+\n+2021-10-12  Tamar Christina  <tamar.christina@arm.com>\n+\n+\t* gcc.target/aarch64/sve/pred-not-gen-1.c: New test.\n+\t* gcc.target/aarch64/sve/pred-not-gen-2.c: New test.\n+\t* gcc.target/aarch64/sve/pred-not-gen-3.c: New test.\n+\t* gcc.target/aarch64/sve/pred-not-gen-4.c: New test.\n+\n+2021-10-12  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR fortran/102541\n+\t* gfortran.dg/assumed_rank_24.f90: New test.\n+\n+2021-10-12  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gcc.dg/gomp/simd-2.c: Remove option -fvect-cost-model=cheap.\n+\t* gcc.dg/gomp/simd-3.c: Likewise.\n+\n+2021-10-12  liuhongt  <hongtao.liu@intel.com>\n+\n+\t* gcc.target/i386/pr102483.c: New test.\n+\t* gcc.target/i386/pr102483-2.c: New test.\n+\n+2021-10-12  Paul A. Clarke  <pc@us.ibm.com>\n+\n+\t* gcc.target/powerpc/pr78102.c: Fix dg-require-effective-target.\n+\t* gcc.target/powerpc/sse4_1-packusdw.c: Likewise.\n+\t* gcc.target/powerpc/sse4_1-pmaxsb.c: Likewise.\n+\t* gcc.target/powerpc/sse4_1-pmaxsd.c: Likewise.\n+\t* gcc.target/powerpc/sse4_1-pmaxud.c: Likewise.\n+\t* gcc.target/powerpc/sse4_1-pmaxuw.c: Likewise.\n+\t* gcc.target/powerpc/sse4_1-pminsb.c: Likewise.\n+\t* gcc.target/powerpc/sse4_1-pminsd.c: Likewise.\n+\t* gcc.target/powerpc/sse4_1-pminud.c: Likewise.\n+\t* gcc.target/powerpc/sse4_1-pminuw.c: Likewise.\n+\t* gcc.target/powerpc/sse4_1-pmovsxbd.c: Likewise.\n+\t* gcc.target/powerpc/sse4_1-pmovsxbw.c: Likewise.\n+\t* gcc.target/powerpc/sse4_1-pmovsxwd.c: Likewise.\n+\t* gcc.target/powerpc/sse4_1-pmovzxbd.c: Likewise.\n+\t* gcc.target/powerpc/sse4_1-pmovzxbq.c: Likewise.\n+\t* gcc.target/powerpc/sse4_1-pmovzxbw.c: Likewise.\n+\t* gcc.target/powerpc/sse4_1-pmovzxdq.c: Likewise.\n+\t* gcc.target/powerpc/sse4_1-pmovzxwd.c: Likewise.\n+\t* gcc.target/powerpc/sse4_1-pmovzxwq.c: Likewise.\n+\t* gcc.target/powerpc/sse4_1-pmulld.c: Likewise.\n+\t* gcc.target/powerpc/sse4_2-pcmpgtq.c: Likewise.\n+\t* gcc.target/powerpc/sse4_1-phminposuw.c: Use correct\n+\tdg-require-effective-target.\n+\n+2021-10-12  Paul A. Clarke  <pc@us.ibm.com>\n+\n+\t* gcc.target/powerpc/pr78102.c: Copy from gcc.target/i386,\n+\tadjust dg directives to suit.\n+\t* gcc.target/powerpc/sse4_1-packusdw.c: Same.\n+\t* gcc.target/powerpc/sse4_1-pcmpeqq.c: Same.\n+\t* gcc.target/powerpc/sse4_1-pmuldq.c: Same.\n+\t* gcc.target/powerpc/sse4_1-pmulld.c: Same.\n+\t* gcc.target/powerpc/sse4_2-pcmpgtq.c: Same.\n+\t* gcc.target/powerpc/sse4_2-check.h: Copy from gcc.target/i386,\n+\ttweak to suit.\n+\n+2021-10-12  Paul A. Clarke  <pc@us.ibm.com>\n+\n+\t* gcc.target/powerpc/sse4_1-pmovsxbd.c: Copy from gcc.target/i386,\n+\tadjust dg directives to suit.\n+\t* gcc.target/powerpc/sse4_1-pmovsxbq.c: Same.\n+\t* gcc.target/powerpc/sse4_1-pmovsxbw.c: Same.\n+\t* gcc.target/powerpc/sse4_1-pmovsxdq.c: Same.\n+\t* gcc.target/powerpc/sse4_1-pmovsxwd.c: Same.\n+\t* gcc.target/powerpc/sse4_1-pmovsxwq.c: Same.\n+\t* gcc.target/powerpc/sse4_1-pmovzxbd.c: Same.\n+\t* gcc.target/powerpc/sse4_1-pmovzxbq.c: Same.\n+\t* gcc.target/powerpc/sse4_1-pmovzxbw.c: Same.\n+\t* gcc.target/powerpc/sse4_1-pmovzxdq.c: Same.\n+\t* gcc.target/powerpc/sse4_1-pmovzxwd.c: Same.\n+\t* gcc.target/powerpc/sse4_1-pmovzxwq.c: Same.\n+\n+2021-10-12  Paul A. Clarke  <pc@us.ibm.com>\n+\n+\t* gcc.target/powerpc/sse4_1-pmaxsb.c: Copy from gcc.target/i386.\n+\t* gcc.target/powerpc/sse4_1-pmaxsd.c: Same.\n+\t* gcc.target/powerpc/sse4_1-pmaxud.c: Same.\n+\t* gcc.target/powerpc/sse4_1-pmaxuw.c: Same.\n+\t* gcc.target/powerpc/sse4_1-pminsb.c: Same.\n+\t* gcc.target/powerpc/sse4_1-pminsd.c: Same.\n+\t* gcc.target/powerpc/sse4_1-pminud.c: Same.\n+\t* gcc.target/powerpc/sse4_1-pminuw.c: Same.\n+\n 2021-10-11  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* gcc.dg/torture/ssa-pta-fn-1.c: Fix template; add noipa."}, {"sha": "d242ad8a9e9c4eb51122ef587b24926d7f2aebb3", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 63, "deletions": 0, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52055987fba37d1eb3b3ed34063a07c2e912538e/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52055987fba37d1eb3b3ed34063a07c2e912538e/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=52055987fba37d1eb3b3ed34063a07c2e912538e", "patch": "@@ -1,3 +1,66 @@\n+2021-10-12  Julian Brown  <julian@codesourcery.com>\n+\n+\t* target.c (gomp_copy_host2dev): Release device lock on cbuf\n+\terror path.\n+\n+2021-10-12  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* testsuite/libgomp.fortran/icv-3.f90: New.\n+\t* testsuite/libgomp.fortran/icv-4.f90: New.\n+\n+2021-10-12  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* libgomp.texi (omp_get_max_teams, omp_get_teams_thread_limit,\n+\tomp_set_num_teams, omp_set_teams_thread_limit, OMP_NUM_TEAMS,\n+\tOMP_TEAMS_THREAD_LIMIT): Document.\n+\n+2021-10-12  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* libgomp.texi (omp_get_device_num): Move @node before omp_get_dynamic\n+\tto avoid makeinfo warnings.\n+\n+2021-10-12  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* testsuite/libgomp.c-c++-common/icv-3.c: New test.\n+\t* testsuite/libgomp.c-c++-common/icv-4.c: New test.\n+\n+2021-10-12  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR libgomp/102628\n+\tPR libgomp/102668\n+\t* testsuite/libgomp.c-c++-common/alloc-9.c (main): Decrease\n+\tallocation sizes from 420 to 320 and from 768 to 568.\n+\t* testsuite/libgomp.fortran/alloc-11.f90: Likewise.\n+\t* testsuite/libgomp.fortran/alloc-1.F90: Change expected alignment\n+\tfor cr from 16 to 4.\n+\n+2021-10-12  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* testsuite/libgomp.c/scan-11.c: Remove option -fvect-cost-model=cheap.\n+\t* testsuite/libgomp.c/scan-12.c: Likewise.\n+\t* testsuite/libgomp.c/scan-13.c: Likewise.\n+\t* testsuite/libgomp.c/scan-14.c: Likewise.\n+\t* testsuite/libgomp.c/scan-15.c: Likewise.\n+\t* testsuite/libgomp.c/scan-16.c: Likewise.\n+\t* testsuite/libgomp.c/scan-17.c: Likewise.\n+\t* testsuite/libgomp.c/scan-18.c: Likewise.\n+\t* testsuite/libgomp.c/scan-19.c: Likewise.\n+\t* testsuite/libgomp.c/scan-20.c: Likewise.\n+\t* testsuite/libgomp.c/scan-21.c: Likewise.\n+\t* testsuite/libgomp.c/scan-22.c: Likewise.\n+\t* testsuite/libgomp.c++/scan-9.C: Likewise.\n+\t* testsuite/libgomp.c++/scan-10.C: Likewise.\n+\t* testsuite/libgomp.c++/scan-11.C: Likewise.\n+\t* testsuite/libgomp.c++/scan-12.C: Likewise.\n+\t* testsuite/libgomp.c++/scan-13.C: Likewise.\n+\t* testsuite/libgomp.c++/scan-14.C: Likewise.\n+\t* testsuite/libgomp.c++/scan-15.C: Likewise.\n+\t* testsuite/libgomp.c++/scan-16.C: Likewise.\n+\n+2021-10-12  Kewen Lin  <linkw@linux.ibm.com>\n+\n+\t* testsuite/libgomp.graphite/force-parallel-8.c: Add --param max-stores-to-sink=0.\n+\n 2021-10-11  Marcel Vollweiler  <marcel@codesourcery.com>\n \n \t* allocator.c (omp_init_allocator): Replace omp_atv_sequential with"}, {"sha": "304cd9cec37ad5f5ee5dc122c6e6853026a2e94c", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52055987fba37d1eb3b3ed34063a07c2e912538e/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52055987fba37d1eb3b3ed34063a07c2e912538e/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=52055987fba37d1eb3b3ed34063a07c2e912538e", "patch": "@@ -1,3 +1,8 @@\n+2021-10-12  Lu\u00eds Ferreira  <contact@lsferreira.net>\n+\n+\t* d-demangle.c (dlang_parse_qualified): Remove redudant parenthesis\n+\taround lhs and rhs of assignments.\n+\n 2021-10-01  Lu\u00eds Ferreira  <contact@lsferreira.net>\n \n \t* testsuite/d-demangle-expected: Add missing format for new test"}, {"sha": "8294a6c7f5d465ab5b54414b3335dece6df65011", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52055987fba37d1eb3b3ed34063a07c2e912538e/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52055987fba37d1eb3b3ed34063a07c2e912538e/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=52055987fba37d1eb3b3ed34063a07c2e912538e", "patch": "@@ -1,3 +1,24 @@\n+2021-10-12  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* testsuite/20_util/tuple/comparison_operators/overloaded.cc:\n+\tRestore test for operator<.\n+\t* testsuite/20_util/tuple/comparison_operators/overloaded2.cc:\n+\tAdjust expected errors for C++20.\n+\n+2021-10-12  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/101960\n+\t* include/std/tuple (_Tuple_impl(_Tuple_impl&&)): Define as\n+\tdefauled.\n+\t* testsuite/20_util/tuple/cons/101960.cc: Check tuples with\n+\tarray elements before the last element.\n+\n+2021-10-12  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/bits/stl_iterator_base_funcs.h (__advance): Add\n+\tdeleted overload to improve diagnostics.\n+\t(__distance): Likewise.\n+\n 2021-10-11  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* include/bits/atomic_timed_wait.h: Remove unused header."}]}