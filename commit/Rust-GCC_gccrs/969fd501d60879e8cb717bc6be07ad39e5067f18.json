{"sha": "969fd501d60879e8cb717bc6be07ad39e5067f18", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTY5ZmQ1MDFkNjA4NzllOGNiNzE3YmM2YmUwN2FkMzllNTA2N2YxOA==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2001-07-26T08:07:56Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2001-07-26T08:07:56Z"}, "message": "re PR c++/3152 (g++-3.0 segfaults when compiling program using -g)\n\ncp:\n\t* decl.c (last_function_parm_tags): Remove.\n\t(current_function_parm_tags): Remove.\n\t(init_decl_processing): Adjust.\n\t(start_function): Adjust.\n\t(store_parm_decls): Adjust.\n\n\tPR c++/3152\n\t* decl.c (grokdeclarator): Detect when a function typedef is\n\tdeclaring a function, and create last_function_parms correctly.\ntestsuite:\n\t* g++.old-deja/g++.other/crash42.C: New test.\n\nFrom-SVN: r44387", "tree": {"sha": "e75ee3f6066eb226d294e5a52b6c3511f4d79eff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e75ee3f6066eb226d294e5a52b6c3511f4d79eff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/969fd501d60879e8cb717bc6be07ad39e5067f18", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/969fd501d60879e8cb717bc6be07ad39e5067f18", "html_url": "https://github.com/Rust-GCC/gccrs/commit/969fd501d60879e8cb717bc6be07ad39e5067f18", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/969fd501d60879e8cb717bc6be07ad39e5067f18/comments", "author": null, "committer": null, "parents": [{"sha": "4d10215152f92dd3ee79f114ba7dd6acc5e43b54", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d10215152f92dd3ee79f114ba7dd6acc5e43b54", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d10215152f92dd3ee79f114ba7dd6acc5e43b54"}], "stats": {"total": 68, "additions": 54, "deletions": 14}, "files": [{"sha": "70c9bd380bd5c43292edc1059a1e5b37b1e0cc31", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/969fd501d60879e8cb717bc6be07ad39e5067f18/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/969fd501d60879e8cb717bc6be07ad39e5067f18/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=969fd501d60879e8cb717bc6be07ad39e5067f18", "patch": "@@ -1,3 +1,15 @@\n+2001-07-26  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* decl.c (last_function_parm_tags): Remove.\n+\t(current_function_parm_tags): Remove.\n+\t(init_decl_processing): Adjust.\n+\t(start_function): Adjust.\n+\t(store_parm_decls): Adjust.\n+\n+\tPR c++/3152\n+\t* decl.c (grokdeclarator): Detect when a function typedef is\n+\tdeclaring a function, and create last_function_parms correctly.\n+\n 2001-07-25  Jason Merrill  <jason_merrill@redhat.com>\n \t\n \t* call.c (joust): Only prefer a non-builtin candidate to a builtin"}, {"sha": "c9867da52099adecf5a71174a2e0360526680caf", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 21, "deletions": 14, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/969fd501d60879e8cb717bc6be07ad39e5067f18/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/969fd501d60879e8cb717bc6be07ad39e5067f18/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=969fd501d60879e8cb717bc6be07ad39e5067f18", "patch": "@@ -243,14 +243,8 @@ tree static_aggregates;\n \n tree integer_two_node, integer_three_node;\n \n-/* Parsing a function declarator leaves here a chain of structure\n-   and enum types declared in the parmlist.  */\n-\n-static tree last_function_parm_tags;\n-\n /* Similar, for last_function_parm_tags.  */\n tree last_function_parms;\n-static tree current_function_parm_tags;\n \n /* A list of all LABEL_DECLs in the function that have names.  Here so\n    we can clear out their names' definitions at the end of the\n@@ -6565,8 +6559,6 @@ init_decl_processing ()\n   ggc_add_tree_root (&static_dtors, 1);\n   ggc_add_tree_root (&lastiddecl, 1);\n \n-  ggc_add_tree_root (&last_function_parm_tags, 1);\n-  ggc_add_tree_root (&current_function_parm_tags, 1);\n   ggc_add_tree_root (&last_function_parms, 1);\n   ggc_add_tree_root (&error_mark_list, 1);\n \n@@ -11101,6 +11093,26 @@ grokdeclarator (declarator, declspecs, decl_context, initialized, attrlist)\n       type = build_cplus_array_type (TREE_TYPE (type), TYPE_DOMAIN (type));\n     }\n \n+  /* Detect where we're using a typedef of function type to declare a\n+     function. last_function_parms will not be set, so we must create\n+     it now.  */\n+  \n+  if (type == typedef_type && TREE_CODE (type) == FUNCTION_TYPE)\n+    {\n+      tree decls = NULL_TREE;\n+      tree args;\n+\n+      for (args = TYPE_ARG_TYPES (type); args; args = TREE_CHAIN (args))\n+\t{\n+\t  tree decl = build_decl (PARM_DECL, NULL_TREE, TREE_VALUE (args));\n+\n+\t  TREE_CHAIN (decl) = decls;\n+\t  decls = decl;\n+\t}\n+      \n+      last_function_parms = nreverse (decls);\n+    }\n+\n   /* If this is a type name (such as, in a cast or sizeof),\n      compute the type and return it now.  */\n \n@@ -13296,7 +13308,6 @@ start_function (declspecs, declarator, attrs, flags)\n \t}\n \n       last_function_parms = DECL_ARGUMENTS (decl1);\n-      last_function_parm_tags = NULL_TREE;\n     }\n   else\n     {\n@@ -13403,7 +13414,6 @@ start_function (declspecs, declarator, attrs, flags)\n   /* Save the parm names or decls from this function's declarator\n      where store_parm_decls will find them.  */\n   current_function_parms = last_function_parms;\n-  current_function_parm_tags = last_function_parm_tags;\n \n   /* Make sure the parameter and return types are reasonable.  When\n      you declare a function, these types can be incomplete, but they\n@@ -13630,9 +13640,6 @@ store_parm_decls (current_function_parms)\n   int parms_have_cleanups = 0;\n   tree cleanups = NULL_TREE;\n \n-  /* This is a list of types declared among parms in a prototype.  */\n-  tree parmtags = current_function_parm_tags;\n-\n   /* This is a chain of any other decls that came in among the parm\n      declarations.  If a parm is declared with  enum {foo, bar} x;\n      then CONST_DECLs for foo and bar are put here.  */\n@@ -13690,7 +13697,7 @@ store_parm_decls (current_function_parms)\n \t function.  This is all and only the PARM_DECLs that were\n \t pushed into scope by the loop above.  */\n       DECL_ARGUMENTS (fndecl) = getdecls ();\n-      storetags (chainon (parmtags, gettags ()));\n+      storetags (gettags ());\n     }\n   else\n     DECL_ARGUMENTS (fndecl) = NULL_TREE;"}, {"sha": "c06c779aa6ae6ade5232f8110e6a5f1ddd858a57", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/969fd501d60879e8cb717bc6be07ad39e5067f18/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/969fd501d60879e8cb717bc6be07ad39e5067f18/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=969fd501d60879e8cb717bc6be07ad39e5067f18", "patch": "@@ -1,3 +1,7 @@\n+2001-07-26  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* g++.old-deja/g++.other/crash42.C: New test.\n+\n 2001-07-26  Neil Booth  <neil@cat.daikokuya.demon.co.uk>\n \n \t* gcc.dg/cpp/extratokens.c: Fix."}, {"sha": "be316ac6645c383c7c556876e5e786ca2944ae74", "filename": "gcc/testsuite/g++.old-deja/g++.other/crash42.C", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/969fd501d60879e8cb717bc6be07ad39e5067f18/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fcrash42.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/969fd501d60879e8cb717bc6be07ad39e5067f18/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fcrash42.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fcrash42.C?ref=969fd501d60879e8cb717bc6be07ad39e5067f18", "patch": "@@ -0,0 +1,17 @@\n+// Build don't link:\n+// Special g++ Options: -g\n+// \n+// Copyright (C) 2001 Free Software Foundation, Inc.\n+// Contributed by Nathan Sidwell 25 Jul 2001 <nathan@codesourcery.com>\n+\n+// Bug 3152. Using a typedef to declare a function used an unset\n+// global variable, last_function_parms.\n+\n+struct actor \n+{\n+  typedef bool (operation)();\n+\n+  operation a;\n+  operation b;\n+  operation c;\n+};"}]}