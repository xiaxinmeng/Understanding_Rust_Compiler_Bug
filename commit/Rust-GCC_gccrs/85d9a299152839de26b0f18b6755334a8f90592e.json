{"sha": "85d9a299152839de26b0f18b6755334a8f90592e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODVkOWEyOTkxNTI4MzlkZTI2YjBmMThiNjc1NTMzNGE4ZjkwNTkyZQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2015-06-05T19:13:56Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2015-06-05T19:13:56Z"}, "message": "re PR c++/66405 (ICE: in tsubst, at cp/pt.c:11984)\n\n\tPR c++/66405\n\t* pt.c (type_dependent_expression_p): EXPR_PACK_EXPANSION is\n\tdependent even if it has a type.\n\nFrom-SVN: r224162", "tree": {"sha": "cec126e0bb3f0fa1ab717351d8cfdd02649d7cfa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cec126e0bb3f0fa1ab717351d8cfdd02649d7cfa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/85d9a299152839de26b0f18b6755334a8f90592e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85d9a299152839de26b0f18b6755334a8f90592e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85d9a299152839de26b0f18b6755334a8f90592e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85d9a299152839de26b0f18b6755334a8f90592e/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d7438551ff5ffa0afeca2aa3efd13035b26bee34", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7438551ff5ffa0afeca2aa3efd13035b26bee34", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7438551ff5ffa0afeca2aa3efd13035b26bee34"}], "stats": {"total": 14, "additions": 10, "deletions": 4}, "files": [{"sha": "e9a78b3ccb6ebfa62e291196a439a9c62adb3371", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85d9a299152839de26b0f18b6755334a8f90592e/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85d9a299152839de26b0f18b6755334a8f90592e/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=85d9a299152839de26b0f18b6755334a8f90592e", "patch": "@@ -1,3 +1,9 @@\n+2015-06-05  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/66405\n+\t* pt.c (type_dependent_expression_p): EXPR_PACK_EXPANSION is\n+\tdependent even if it has a type.\n+\n 2015-06-05  Aldy Hernandez  <aldyh@redhat.com>\n \n \t* cp-objcp-common.c: Adjust comment for"}, {"sha": "87b35fa99dee7e388c06b3cafdf55654a0789b62", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85d9a299152839de26b0f18b6755334a8f90592e/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85d9a299152839de26b0f18b6755334a8f90592e/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=85d9a299152839de26b0f18b6755334a8f90592e", "patch": "@@ -21442,6 +21442,10 @@ type_dependent_expression_p (tree expression)\n       && variable_template_p (DECL_TI_TEMPLATE (expression)))\n     return any_dependent_template_arguments_p (DECL_TI_ARGS (expression));\n \n+  /* Always dependent, on the number of arguments if nothing else.  */\n+  if (TREE_CODE (expression) == EXPR_PACK_EXPANSION)\n+    return true;\n+\n   if (TREE_TYPE (expression) == unknown_type_node)\n     {\n       if (TREE_CODE (expression) == ADDR_EXPR)\n@@ -21459,10 +21463,6 @@ type_dependent_expression_p (tree expression)\n       if (TREE_CODE (expression) == SCOPE_REF)\n \treturn false;\n \n-      /* Always dependent, on the number of arguments if nothing else.  */\n-      if (TREE_CODE (expression) == EXPR_PACK_EXPANSION)\n-\treturn true;\n-\n       if (BASELINK_P (expression))\n \t{\n \t  if (BASELINK_OPTYPE (expression)"}]}