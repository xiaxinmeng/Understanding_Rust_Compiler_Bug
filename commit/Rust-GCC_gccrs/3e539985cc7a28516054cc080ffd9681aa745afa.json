{"sha": "3e539985cc7a28516054cc080ffd9681aa745afa", "node_id": "C_kwDOANBUbNoAKDNlNTM5OTg1Y2M3YTI4NTE2MDU0Y2MwODBmZmQ5NjgxYWE3NDVhZmE", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-02-09T13:38:33Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-02-10T13:01:10Z"}, "message": "libstdc++: Add atomic_fetch_xor to <stdatomic.h>\n\nThis function (and the explicit memory over version) are present in both\nC++ <atomic> and C <stdatomic.h>, so should be in C++ <stdatomic.h> too.\nThere is a library issue incoming for this, but the resolution is\nobvious.\n\nlibstdc++-v3/ChangeLog:\n\n\t* include/c_compatibility/stdatomic.h (atomic_fetch_xor): Add\n\tusing-declaration.\n\t(atomic_fetch_xor_explicit): Likewise.\n\t* testsuite/29_atomics/headers/stdatomic.h/c_compat.cc: Check\n\tarithmetic and logical operations for atomic_int.", "tree": {"sha": "3600e86d9d6a4f96a854c870c599da949e3aacec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3600e86d9d6a4f96a854c870c599da949e3aacec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3e539985cc7a28516054cc080ffd9681aa745afa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e539985cc7a28516054cc080ffd9681aa745afa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e539985cc7a28516054cc080ffd9681aa745afa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e539985cc7a28516054cc080ffd9681aa745afa/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3d5f4f76e6db0895181ebca538748379bfe6058f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d5f4f76e6db0895181ebca538748379bfe6058f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d5f4f76e6db0895181ebca538748379bfe6058f"}], "stats": {"total": 13, "additions": 13, "deletions": 0}, "files": [{"sha": "c97cbac984ec5496102279c12825f132be54abcf", "filename": "libstdc++-v3/include/c_compatibility/stdatomic.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e539985cc7a28516054cc080ffd9681aa745afa/libstdc%2B%2B-v3%2Finclude%2Fc_compatibility%2Fstdatomic.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e539985cc7a28516054cc080ffd9681aa745afa/libstdc%2B%2B-v3%2Finclude%2Fc_compatibility%2Fstdatomic.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_compatibility%2Fstdatomic.h?ref=3e539985cc7a28516054cc080ffd9681aa745afa", "patch": "@@ -111,6 +111,8 @@ using std::atomic_fetch_sub;\n using std::atomic_fetch_sub_explicit;\n using std::atomic_fetch_or;\n using std::atomic_fetch_or_explicit;\n+using std::atomic_fetch_xor;\n+using std::atomic_fetch_xor_explicit;\n using std::atomic_fetch_and;\n using std::atomic_fetch_and_explicit;\n using std::atomic_flag_test_and_set;"}, {"sha": "6dd4f5b00ca8b0e078bbd5556c2d0e9e9e61ca7b", "filename": "libstdc++-v3/testsuite/29_atomics/headers/stdatomic.h/c_compat.cc", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e539985cc7a28516054cc080ffd9681aa745afa/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fheaders%2Fstdatomic.h%2Fc_compat.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e539985cc7a28516054cc080ffd9681aa745afa/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fheaders%2Fstdatomic.h%2Fc_compat.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fheaders%2Fstdatomic.h%2Fc_compat.cc?ref=3e539985cc7a28516054cc080ffd9681aa745afa", "patch": "@@ -116,6 +116,17 @@ static_assert( requires (::atomic_int* i, int* e) {\n   ::atomic_compare_exchange_weak_explicit(i, e, 3,\n \t\t\t\t\t  memory_order_acq_rel,\n \t\t\t\t\t  memory_order_relaxed);\n+\n+  ::atomic_fetch_add(i, 1);\n+  ::atomic_fetch_add_explicit(i, 1, memory_order_relaxed);\n+  ::atomic_fetch_sub(i, 1);\n+  ::atomic_fetch_sub_explicit(i, 1, memory_order_relaxed);\n+  ::atomic_fetch_and(i, 1);\n+  ::atomic_fetch_and_explicit(i, 1, memory_order_relaxed);\n+  ::atomic_fetch_or(i, 1);\n+  ::atomic_fetch_or_explicit(i, 1, memory_order_relaxed);\n+  ::atomic_fetch_xor(i, 1);\n+  ::atomic_fetch_xor_explicit(i, 1, memory_order_relaxed);\n } );\n \n static_assert( requires (::atomic_flag* f) {"}]}