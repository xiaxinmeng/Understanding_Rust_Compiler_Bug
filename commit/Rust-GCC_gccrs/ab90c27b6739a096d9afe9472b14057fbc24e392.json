{"sha": "ab90c27b6739a096d9afe9472b14057fbc24e392", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWI5MGMyN2I2NzM5YTA5NmQ5YWZlOTQ3MmIxNDA1N2ZiYzI0ZTM5Mg==", "commit": {"author": {"name": "Alexander Monakov", "email": "amonakov@ispras.ru", "date": "2017-09-27T17:16:53Z"}, "committer": {"name": "Alexander Monakov", "email": "amonakov@gcc.gnu.org", "date": "2017-09-27T17:16:53Z"}, "message": "haifa-sched: fix autopref_rank_for_schedule qsort comparator\n\n\t* haifa-sched.c (autopref_rank_for_schedule): Order 'irrelevant' insns\n\tfirst, always call autopref_rank_data otherwise.\n\nFrom-SVN: r253235", "tree": {"sha": "8d90c0fe01da13a06e1c0ed09b5065c77bf98173", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8d90c0fe01da13a06e1c0ed09b5065c77bf98173"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ab90c27b6739a096d9afe9472b14057fbc24e392", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab90c27b6739a096d9afe9472b14057fbc24e392", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab90c27b6739a096d9afe9472b14057fbc24e392", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab90c27b6739a096d9afe9472b14057fbc24e392/comments", "author": {"login": "amonakov", "id": 1997391, "node_id": "MDQ6VXNlcjE5OTczOTE=", "avatar_url": "https://avatars.githubusercontent.com/u/1997391?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amonakov", "html_url": "https://github.com/amonakov", "followers_url": "https://api.github.com/users/amonakov/followers", "following_url": "https://api.github.com/users/amonakov/following{/other_user}", "gists_url": "https://api.github.com/users/amonakov/gists{/gist_id}", "starred_url": "https://api.github.com/users/amonakov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amonakov/subscriptions", "organizations_url": "https://api.github.com/users/amonakov/orgs", "repos_url": "https://api.github.com/users/amonakov/repos", "events_url": "https://api.github.com/users/amonakov/events{/privacy}", "received_events_url": "https://api.github.com/users/amonakov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d4b7f2ee4bb69d5d3594413d63d077d2f3610141", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4b7f2ee4bb69d5d3594413d63d077d2f3610141", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4b7f2ee4bb69d5d3594413d63d077d2f3610141"}], "stats": {"total": 23, "additions": 14, "deletions": 9}, "files": [{"sha": "6f2e0acbbeb19bd294a17d8c3fc724705369b84c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab90c27b6739a096d9afe9472b14057fbc24e392/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab90c27b6739a096d9afe9472b14057fbc24e392/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ab90c27b6739a096d9afe9472b14057fbc24e392", "patch": "@@ -1,3 +1,8 @@\n+2017-09-27  Alexander Monakov  <amonakov@ispras.ru>\n+\n+\t* haifa-sched.c (autopref_rank_for_schedule): Order 'irrelevant' insns\n+\tfirst, always call autopref_rank_data otherwise.\n+\n 2017-09-27  Richard Biener  <rguenther@suse.de>\n \n \t* graphite-scop-detection.c (find_scop_parameters): Move"}, {"sha": "549e8961411ecd0a04ac3b24ba78b5d53e63258a", "filename": "gcc/haifa-sched.c", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab90c27b6739a096d9afe9472b14057fbc24e392/gcc%2Fhaifa-sched.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab90c27b6739a096d9afe9472b14057fbc24e392/gcc%2Fhaifa-sched.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhaifa-sched.c?ref=ab90c27b6739a096d9afe9472b14057fbc24e392", "patch": "@@ -5707,7 +5707,8 @@ autopref_rank_data (autopref_multipass_data_t data1,\n static int\n autopref_rank_for_schedule (const rtx_insn *insn1, const rtx_insn *insn2)\n {\n-  for (int write = 0; write < 2; ++write)\n+  int r = 0;\n+  for (int write = 0; write < 2 && !r; ++write)\n     {\n       autopref_multipass_data_t data1\n \t= &INSN_AUTOPREF_MULTIPASS_DATA (insn1)[write];\n@@ -5716,21 +5717,20 @@ autopref_rank_for_schedule (const rtx_insn *insn1, const rtx_insn *insn2)\n \n       if (data1->status == AUTOPREF_MULTIPASS_DATA_UNINITIALIZED)\n \tautopref_multipass_init (insn1, write);\n-      if (data1->status == AUTOPREF_MULTIPASS_DATA_IRRELEVANT)\n-\tcontinue;\n \n       if (data2->status == AUTOPREF_MULTIPASS_DATA_UNINITIALIZED)\n \tautopref_multipass_init (insn2, write);\n-      if (data2->status == AUTOPREF_MULTIPASS_DATA_IRRELEVANT)\n-\tcontinue;\n \n-      if (!rtx_equal_p (data1->base, data2->base))\n-\tcontinue;\n+      int irrel1 = data1->status == AUTOPREF_MULTIPASS_DATA_IRRELEVANT;\n+      int irrel2 = data2->status == AUTOPREF_MULTIPASS_DATA_IRRELEVANT;\n \n-      return autopref_rank_data (data1, data2);\n+      if (!irrel1 && !irrel2)\n+\tr = autopref_rank_data (data1, data2);\n+      else\n+\tr = irrel2 - irrel1;\n     }\n \n-  return 0;\n+  return r;\n }\n \n /* True if header of debug dump was printed.  */"}]}