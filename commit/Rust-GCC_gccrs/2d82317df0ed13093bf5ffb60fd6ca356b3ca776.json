{"sha": "2d82317df0ed13093bf5ffb60fd6ca356b3ca776", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmQ4MjMxN2RmMGVkMTMwOTNiZjVmZmI2MGZkNmNhMzU2YjNjYTc3Ng==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2005-04-29T21:42:27Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2005-04-29T21:42:27Z"}, "message": "gengtype.c (write_func_for_structure): Split out ...\n\n        * gengtype.c (write_func_for_structure): Split out ...\n        (output_type_enum): ... new function.  Fix thinko accessing\n        TYPE_PARAM_STRUCT data.\n\nCo-Authored-By: Daniel Jacobowitz <dan@codesourcery.com>\n\nFrom-SVN: r99020", "tree": {"sha": "95e869414cd56d97221294d797de9f2f5ddb9c7e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/95e869414cd56d97221294d797de9f2f5ddb9c7e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2d82317df0ed13093bf5ffb60fd6ca356b3ca776", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d82317df0ed13093bf5ffb60fd6ca356b3ca776", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d82317df0ed13093bf5ffb60fd6ca356b3ca776", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d82317df0ed13093bf5ffb60fd6ca356b3ca776/comments", "author": null, "committer": null, "parents": [{"sha": "22e8617b22bcfc266823ac39eb24ade40c10f5b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22e8617b22bcfc266823ac39eb24ade40c10f5b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22e8617b22bcfc266823ac39eb24ade40c10f5b1"}], "stats": {"total": 74, "additions": 29, "deletions": 45}, "files": [{"sha": "4c5843aba37667cc58a3de06c8f74867ff6cd826", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d82317df0ed13093bf5ffb60fd6ca356b3ca776/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d82317df0ed13093bf5ffb60fd6ca356b3ca776/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2d82317df0ed13093bf5ffb60fd6ca356b3ca776", "patch": "@@ -1,3 +1,10 @@\n+2005-04-29  Richard Henderson  <rth@redhat.com>\n+\t    Daniel Jacobowitz  <dan@codesourcery.com>\n+\n+\t* gengtype.c (write_func_for_structure): Split out ...\n+\t(output_type_enum): ... new function.  Fix thinko accessing\n+\tTYPE_PARAM_STRUCT data.\n+\n 2005-04-29  Tom Tromey  <tromey@redhat.com>\n \n \t* tree.c (build_block): Removed unused 'tags' argument."}, {"sha": "042f92f886be84cd3272c38ed06d228c4dbc1751", "filename": "gcc/gengtype.c", "status": "modified", "additions": 22, "deletions": 45, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d82317df0ed13093bf5ffb60fd6ca356b3ca776/gcc%2Fgengtype.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d82317df0ed13093bf5ffb60fd6ca356b3ca776/gcc%2Fgengtype.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgengtype.c?ref=2d82317df0ed13093bf5ffb60fd6ca356b3ca776", "patch": "@@ -1976,6 +1976,25 @@ write_types_process_field (type_p f, const struct walk_type_data *d)\n     }\n }\n \n+/* A subroutine of write_func_for_structure.  Write the enum tag for S.  */\n+\n+static void\n+output_type_enum (outf_p of, type_p s)\n+{\n+  if (s->kind == TYPE_PARAM_STRUCT && s->u.s.line.file != NULL)\n+    {\n+      oprintf (of, \", gt_e_\");\n+      output_mangled_typename (of, s);\n+    }\n+  else if (UNION_OR_STRUCT_P (s) && s->u.s.line.file != NULL)\n+    {\n+      oprintf (of, \", gt_ggc_e_\");\n+      output_mangled_typename (of, s);\n+    }\n+  else\n+    oprintf (of, \", gt_types_enum_last\");\n+}\n+\n /* For S, a structure that's part of ORIG_S, and using parameters\n    PARAM, write out a routine that:\n    - Takes a parameter, a void * but actually of type *S\n@@ -2050,21 +2069,7 @@ write_func_for_structure (type_p orig_s, type_p s, type_p *param,\n \t{\n \t  oprintf (d.of, \", x, gt_%s_\", wtd->param_prefix);\n \t  output_mangled_typename (d.of, orig_s);\n-\n-\t  if (orig_s->u.p->kind == TYPE_PARAM_STRUCT\n-\t      && orig_s->u.p->u.s.line.file != NULL)\n-\t    {\n-\t      oprintf (d.of, \", gt_e_\");\n-\t      output_mangled_typename (d.of, orig_s);\n-\t    }\n-\t  else if (UNION_OR_STRUCT_P (orig_s)\n-\t\t   && orig_s->u.s.line.file != NULL)\n-\t    {\n-\t      oprintf (d.of, \", gt_ggc_e_\");\n-\t      output_mangled_typename (d.of, orig_s);\n-\t    }\n-\t  else\n-\t    oprintf (d.of, \", gt_types_enum_last\");\n+\t  output_type_enum (d.of, orig_s);\n \t}\n       oprintf (d.of, \"))\\n\");\n     }\n@@ -2075,21 +2080,7 @@ write_func_for_structure (type_p orig_s, type_p s, type_p *param,\n \t{\n \t  oprintf (d.of, \", xlimit, gt_%s_\", wtd->param_prefix);\n \t  output_mangled_typename (d.of, orig_s);\n-\n-\t  if (orig_s->u.p->kind == TYPE_PARAM_STRUCT\n-\t      && orig_s->u.p->u.s.line.file != NULL)\n-\t    {\n-\t      oprintf (d.of, \", gt_e_\");\n-\t      output_mangled_typename (d.of, orig_s);\n-\t    }\n-\t  else if (UNION_OR_STRUCT_P (orig_s)\n-\t\t   && orig_s->u.s.line.file != NULL)\n-\t    {\n-\t      oprintf (d.of, \", gt_ggc_e_\");\n-\t      output_mangled_typename (d.of, orig_s);\n-\t    }\n-\t  else\n-\t    oprintf (d.of, \", gt_types_enum_last\");\n+\t  output_type_enum (d.of, orig_s);\n \t}\n       oprintf (d.of, \"))\\n\");\n       oprintf (d.of, \"   xlimit = (\");\n@@ -2115,21 +2106,7 @@ write_func_for_structure (type_p orig_s, type_p s, type_p *param,\n \t    {\n \t      oprintf (d.of, \", xprev, gt_%s_\", wtd->param_prefix);\n \t      output_mangled_typename (d.of, orig_s);\n-\n-\t      if (orig_s->u.p->kind == TYPE_PARAM_STRUCT\n-\t\t  && orig_s->u.p->u.s.line.file != NULL)\n-\t\t{\n-\t\t  oprintf (d.of, \", gt_e_\");\n-\t\t  output_mangled_typename (d.of, orig_s);\n-\t\t}\n-\t      else if (UNION_OR_STRUCT_P (orig_s)\n-\t\t       && orig_s->u.s.line.file != NULL)\n-\t\t{\n-\t\t  oprintf (d.of, \", gt_ggc_e_\");\n-\t\t  output_mangled_typename (d.of, orig_s);\n-\t\t}\n-\t      else\n-\t\toprintf (d.of, \", gt_types_enum_last\");\n+\t      output_type_enum (d.of, orig_s);\n \t    }\n \t  oprintf (d.of, \");\\n\");\n \t  oprintf (d.of, \"      }\\n\");"}]}