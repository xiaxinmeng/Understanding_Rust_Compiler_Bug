{"sha": "5c046034e3ea61dd68965154a398f8f813daf8f2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWMwNDYwMzRlM2VhNjFkZDY4OTY1MTU0YTM5OGY4ZjgxM2RhZjhmMg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-01-15T20:10:44Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-01-15T20:10:44Z"}, "message": "match.pd: Optimize (x < 0) ^ (y < 0) to (x ^ y) < 0 etc. [PR96681]\n\nThis patch simplifies comparisons that test the sign bit xored together.\nIf the comparisons are both < 0 or both >= 0, then we should xor the operands\ntogether and compare the result to < 0, if the comparisons are different,\nwe should compare to >= 0.\n\n2021-01-15  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR tree-optimization/96681\n\t* match.pd ((x < 0) ^ (y < 0) to (x ^ y) < 0): New simplification.\n\t((x >= 0) ^ (y >= 0) to (x ^ y) < 0): Likewise.\n\t((x < 0) ^ (y >= 0) to (x ^ y) >= 0): Likewise.\n\t((x >= 0) ^ (y < 0) to (x ^ y) >= 0): Likewise.\n\n\t* gcc.dg/tree-ssa/pr96681.c: New test.", "tree": {"sha": "3bd073451c69e3dbb6f9eff9dac0a17f6f6d0e49", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3bd073451c69e3dbb6f9eff9dac0a17f6f6d0e49"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5c046034e3ea61dd68965154a398f8f813daf8f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c046034e3ea61dd68965154a398f8f813daf8f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c046034e3ea61dd68965154a398f8f813daf8f2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c046034e3ea61dd68965154a398f8f813daf8f2/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e63c2161d09903ca5c07b1eb0d8c0a1a17967499", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e63c2161d09903ca5c07b1eb0d8c0a1a17967499", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e63c2161d09903ca5c07b1eb0d8c0a1a17967499"}], "stats": {"total": 53, "additions": 53, "deletions": 0}, "files": [{"sha": "e731bdba171e82dfdba3938ea51db5024b225a76", "filename": "gcc/match.pd", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c046034e3ea61dd68965154a398f8f813daf8f2/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c046034e3ea61dd68965154a398f8f813daf8f2/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=5c046034e3ea61dd68965154a398f8f813daf8f2", "patch": "@@ -3993,6 +3993,24 @@ DEFINE_INT_AND_FLOAT_ROUND_FN (RINT)\n    (if (single_use (@2))\n     (cmp @0 @1)))))\n \n+/* Simplify (x < 0) ^ (y < 0) to (x ^ y) < 0 and\n+   (x >= 0) ^ (y >= 0) to (x ^ y) < 0.  */\n+(for cmp (lt ge)\n+ (simplify\n+  (bit_xor (cmp:s @0 integer_zerop) (cmp:s @1 integer_zerop))\n+   (if (INTEGRAL_TYPE_P (TREE_TYPE (@0))\n+\t&& !TYPE_UNSIGNED (TREE_TYPE (@0))\n+\t&& types_match (TREE_TYPE (@0), TREE_TYPE (@1)))\n+    (lt (bit_xor @0 @1) { build_zero_cst (TREE_TYPE (@0)); }))))\n+/* Simplify (x < 0) ^ (y >= 0) to (x ^ y) >= 0 and\n+   (x >= 0) ^ (y < 0) to (x ^ y) >= 0.  */\n+(simplify\n+ (bit_xor:c (lt:s @0 integer_zerop) (ge:s @1 integer_zerop))\n+  (if (INTEGRAL_TYPE_P (TREE_TYPE (@0))\n+       && !TYPE_UNSIGNED (TREE_TYPE (@0))\n+       && types_match (TREE_TYPE (@0), TREE_TYPE (@1)))\n+   (ge (bit_xor @0 @1) { build_zero_cst (TREE_TYPE (@0)); })))\n+\n /* Transform comparisons of the form X * C1 CMP 0 to X CMP 0 in the\n    signed arithmetic case.  That form is created by the compiler\n    often enough for folding it to be of value.  One example is in"}, {"sha": "6d72a1a3d7d83483f1761558952a3e58d434f9c6", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr96681.c", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c046034e3ea61dd68965154a398f8f813daf8f2/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr96681.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c046034e3ea61dd68965154a398f8f813daf8f2/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr96681.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr96681.c?ref=5c046034e3ea61dd68965154a398f8f813daf8f2", "patch": "@@ -0,0 +1,35 @@\n+/* PR tree-optimization/96681 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-optimized\" } */\n+/* { dg-final { scan-tree-dump-times \" \\\\^ \" 5 \"optimized\" } } */\n+/* { dg-final { scan-tree-dump-times \" (?:<|>=) 0\" 5 \"optimized\" } } */\n+\n+int\n+foo (int x, int y)\n+{\n+  return (x < 0) ^ (y < 0);\n+}\n+\n+int\n+bar (int x, int y)\n+{\n+  return (x > -1) ^ (y > -1);\n+}\n+\n+int\n+baz (int x, int y)\n+{\n+  return (x ^ y) < 0;\n+}\n+\n+int\n+qux (int x, int y)\n+{\n+  return (x ^ y) >= 0;\n+}\n+\n+int\n+corge (int x, int y)\n+{\n+  return (x >= 0) ^ (y < 0);\n+}"}]}