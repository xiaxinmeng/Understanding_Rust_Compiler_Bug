{"sha": "e4b631a5a80b0fe254b3e9a747df697780748c12", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTRiNjMxYTVhODBiMGZlMjU0YjNlOWE3NDdkZjY5Nzc4MDc0OGMxMg==", "commit": {"author": {"name": "Simon Wright", "email": "simon@pushface.org", "date": "2016-06-01T07:43:57Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2016-06-01T07:43:57Z"}, "message": "re PR ada/71358 (GNAT.Command_Line.Getopt fails if there are no switches)\n\n\tPR ada/71358\n\t* g-comlin.adb (Display_Section_Help): Do not dereference\n\tConfig.Switches if it's null.\n\t(Getopt): Likewise.\n\nFrom-SVN: r236975", "tree": {"sha": "7c1472e866876626eaf9991b779bebf823d17f2a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7c1472e866876626eaf9991b779bebf823d17f2a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e4b631a5a80b0fe254b3e9a747df697780748c12", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4b631a5a80b0fe254b3e9a747df697780748c12", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e4b631a5a80b0fe254b3e9a747df697780748c12", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4b631a5a80b0fe254b3e9a747df697780748c12/comments", "author": {"login": "simonjwright", "id": 1824512, "node_id": "MDQ6VXNlcjE4MjQ1MTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1824512?v=4", "gravatar_id": "", "url": "https://api.github.com/users/simonjwright", "html_url": "https://github.com/simonjwright", "followers_url": "https://api.github.com/users/simonjwright/followers", "following_url": "https://api.github.com/users/simonjwright/following{/other_user}", "gists_url": "https://api.github.com/users/simonjwright/gists{/gist_id}", "starred_url": "https://api.github.com/users/simonjwright/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/simonjwright/subscriptions", "organizations_url": "https://api.github.com/users/simonjwright/orgs", "repos_url": "https://api.github.com/users/simonjwright/repos", "events_url": "https://api.github.com/users/simonjwright/events{/privacy}", "received_events_url": "https://api.github.com/users/simonjwright/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "827cf695d993e269221ab2eacab5e492e5a19b48", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/827cf695d993e269221ab2eacab5e492e5a19b48", "html_url": "https://github.com/Rust-GCC/gccrs/commit/827cf695d993e269221ab2eacab5e492e5a19b48"}], "stats": {"total": 89, "additions": 51, "deletions": 38}, "files": [{"sha": "52b8f5454e1ee006196b81633785757b2af6675d", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4b631a5a80b0fe254b3e9a747df697780748c12/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4b631a5a80b0fe254b3e9a747df697780748c12/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=e4b631a5a80b0fe254b3e9a747df697780748c12", "patch": "@@ -1,3 +1,10 @@\n+2016-06-01  Simon Wright  <simon@pushface.org>\n+\n+\tPR ada/71358\n+\t* g-comlin.adb (Display_Section_Help): Do not dereference\n+\tConfig.Switches if it's null.\n+\t(Getopt): Likewise.\n+\n 2016-05-31  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* s-osinte-kfreebsd-gnu.ads (clock_getres): Define."}, {"sha": "172edaf889bc63ff2924a953f7355f59b3fc1880", "filename": "gcc/ada/g-comlin.adb", "status": "modified", "additions": 44, "deletions": 38, "changes": 82, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4b631a5a80b0fe254b3e9a747df697780748c12/gcc%2Fada%2Fg-comlin.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4b631a5a80b0fe254b3e9a747df697780748c12/gcc%2Fada%2Fg-comlin.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-comlin.adb?ref=e4b631a5a80b0fe254b3e9a747df697780748c12", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1999-2015, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1999-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -3151,16 +3151,18 @@ package body GNAT.Command_Line is\n \n          New_Line;\n \n-         if Section /= \"\" then\n+         if Section /= \"\" and then Config.Switches /= null then\n             Put_Line (\"Switches after \" & Section);\n          end if;\n \n          --  Compute size of the switches column\n \n-         for S in Config.Switches'Range loop\n-            Max_Len := Natural'Max\n-              (Max_Len, Switch_Name (Config.Switches (S), Section)'Length);\n-         end loop;\n+         if Config.Switches /= null then\n+            for S in Config.Switches'Range loop\n+               Max_Len := Natural'Max\n+                 (Max_Len, Switch_Name (Config.Switches (S), Section)'Length);\n+            end loop;\n+         end if;\n \n          if Config.Aliases /= null then\n             for A in Config.Aliases'Range loop\n@@ -3173,25 +3175,27 @@ package body GNAT.Command_Line is\n \n          --  Display the switches\n \n-         for S in Config.Switches'Range loop\n-            declare\n-               N : constant String :=\n-                     Switch_Name (Config.Switches (S), Section);\n+         if Config.Switches /= null then\n+            for S in Config.Switches'Range loop\n+               declare\n+                  N : constant String :=\n+                    Switch_Name (Config.Switches (S), Section);\n \n-            begin\n-               if N /= \"\" then\n-                  Put (\" \");\n-                  Put (N);\n-                  Put ((1 .. Max_Len - N'Length + 1 => ' '));\n+               begin\n+                  if N /= \"\" then\n+                     Put (\" \");\n+                     Put (N);\n+                     Put ((1 .. Max_Len - N'Length + 1 => ' '));\n \n-                  if Config.Switches (S).Help /= null then\n-                     Put (Config.Switches (S).Help.all);\n-                  end if;\n+                     if Config.Switches (S).Help /= null then\n+                        Put (Config.Switches (S).Help.all);\n+                     end if;\n \n-                  New_Line;\n-               end if;\n-            end;\n-         end loop;\n+                     New_Line;\n+                  end if;\n+               end;\n+            end loop;\n+         end if;\n \n          --  Display the aliases\n \n@@ -3454,25 +3458,27 @@ package body GNAT.Command_Line is\n \n       --  Initialize output values for automatically handled switches\n \n-      for S in Config.Switches'Range loop\n-         case Config.Switches (S).Typ is\n-            when Switch_Untyped =>\n-               null;   --  Nothing to do\n+      if Config.Switches /= null then\n+         for S in Config.Switches'Range loop\n+            case Config.Switches (S).Typ is\n+               when Switch_Untyped =>\n+                  null;   --  Nothing to do\n \n-            when Switch_Boolean =>\n-               Config.Switches (S).Boolean_Output.all :=\n-                 not Config.Switches (S).Boolean_Value;\n+               when Switch_Boolean =>\n+                  Config.Switches (S).Boolean_Output.all :=\n+                    not Config.Switches (S).Boolean_Value;\n \n-            when Switch_Integer =>\n-               Config.Switches (S).Integer_Output.all :=\n-                 Config.Switches (S).Integer_Initial;\n+               when Switch_Integer =>\n+                  Config.Switches (S).Integer_Output.all :=\n+                    Config.Switches (S).Integer_Initial;\n \n-            when Switch_String =>\n-               if Config.Switches (S).String_Output.all = null then\n-                  Config.Switches (S).String_Output.all := new String'(\"\");\n-               end if;\n-         end case;\n-      end loop;\n+               when Switch_String =>\n+                  if Config.Switches (S).String_Output.all = null then\n+                     Config.Switches (S).String_Output.all := new String'(\"\");\n+                  end if;\n+            end case;\n+         end loop;\n+      end if;\n \n       --  For all sections, and all switches within those sections\n "}]}