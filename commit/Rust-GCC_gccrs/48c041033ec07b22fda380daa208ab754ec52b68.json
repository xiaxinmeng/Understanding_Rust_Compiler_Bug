{"sha": "48c041033ec07b22fda380daa208ab754ec52b68", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDhjMDQxMDMzZWMwN2IyMmZkYTM4MGRhYTIwOGFiNzU0ZWM1MmI2OA==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-03-19T10:58:53Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-05-05T14:02:06Z"}, "message": "Provide hint for misspelled -fdump-foo options.\n\ngcc/ChangeLog:\n\n2020-03-19  Martin Liska  <mliska@suse.cz>\n\n\t* dumpfile.c (dump_switch_p): Change return type\n\tand print option suggestion.\n\t* dumpfile.h: Change return type.\n\t* opts-global.c (handle_common_deferred_options):\n\tMove error into dump_switch_p function.\n\ngcc/testsuite/ChangeLog:\n\n2020-03-19  Martin Liska  <mliska@suse.cz>\n\n\t* gcc.dg/spellcheck-options-22.c: New test.", "tree": {"sha": "accb3810832117317dad9679ee5fd6b65a40dcd1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/accb3810832117317dad9679ee5fd6b65a40dcd1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/48c041033ec07b22fda380daa208ab754ec52b68", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEE6I4wzqqylQBfXaRhTcGC3A+nN4UFAl6xcd4ACgkQTcGC3A+n\nN4UBjQgAgeDt5dICgiN7G237R9w8+oJ1rtQb8YkSf7ewU34vI0f7++05+nobVLi0\nLSFGINGhJ8EOmGtcUWpRE4aL3Pv0yrTNXi7f922dA9NYL6PzVXRAo7KPDKYIfopr\nZE4jgIVd0WaNM0L1H7hKg6/hKdbKjScOojyVLN4QMX2ic64e/rNydGxNObhzF2Sx\nX9YSJ8AVUgjSLGkoIItYRNR4pVciVKtEH21AaVC/gRKCUYLLc5l5qR+3Hz+QUUPP\ng17WLm8xXGfv0PvqxbQALcq32Mls9Gg26pwiyxxOvyEP6hlmrl9sV03lsjozVHxd\nV6d2SV7VWDmnrlkQQhIPtKoXxv9Stw==\n=dgWL\n-----END PGP SIGNATURE-----", "payload": "tree accb3810832117317dad9679ee5fd6b65a40dcd1\nparent d2148424165849ac9fe413b7a8d7cd198959bebf\nauthor Martin Liska <mliska@suse.cz> 1584615533 +0100\ncommitter Martin Liska <mliska@suse.cz> 1588687326 +0200\n\nProvide hint for misspelled -fdump-foo options.\n\ngcc/ChangeLog:\n\n2020-03-19  Martin Liska  <mliska@suse.cz>\n\n\t* dumpfile.c (dump_switch_p): Change return type\n\tand print option suggestion.\n\t* dumpfile.h: Change return type.\n\t* opts-global.c (handle_common_deferred_options):\n\tMove error into dump_switch_p function.\n\ngcc/testsuite/ChangeLog:\n\n2020-03-19  Martin Liska  <mliska@suse.cz>\n\n\t* gcc.dg/spellcheck-options-22.c: New test.\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48c041033ec07b22fda380daa208ab754ec52b68", "html_url": "https://github.com/Rust-GCC/gccrs/commit/48c041033ec07b22fda380daa208ab754ec52b68", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48c041033ec07b22fda380daa208ab754ec52b68/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d2148424165849ac9fe413b7a8d7cd198959bebf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2148424165849ac9fe413b7a8d7cd198959bebf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2148424165849ac9fe413b7a8d7cd198959bebf"}], "stats": {"total": 27, "additions": 21, "deletions": 6}, "files": [{"sha": "54718784fd4ed9e91f76d1b4a7fdef457a07d8d4", "filename": "gcc/dumpfile.c", "status": "modified", "additions": 16, "deletions": 3, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48c041033ec07b22fda380daa208ab754ec52b68/gcc%2Fdumpfile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48c041033ec07b22fda380daa208ab754ec52b68/gcc%2Fdumpfile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdumpfile.c?ref=48c041033ec07b22fda380daa208ab754ec52b68", "patch": "@@ -39,6 +39,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-pass.h\" /* for \"current_pass\".  */\n #include \"optinfo-emit-json.h\"\n #include \"stringpool.h\" /* for get_identifier.  */\n+#include \"spellcheck.h\"\n \n /* If non-NULL, return one past-the-end of the matching SUBPART of\n    the WHOLE string.  */\n@@ -1874,7 +1875,7 @@ dump_switch_p_1 (const char *arg, struct dump_file_info *dfi, bool doglob)\n   return 1;\n }\n \n-int\n+void\n gcc::dump_manager::\n dump_switch_p (const char *arg)\n {\n@@ -1896,8 +1897,20 @@ dump_switch_p (const char *arg)\n     for (i = 0; i < m_extra_dump_files_in_use; i++)\n       any |= dump_switch_p_1 (arg, &m_extra_dump_files[i], true);\n \n-\n-  return any;\n+  if (!any)\n+    {\n+      auto_vec<const char *> candidates;\n+      for (size_t i = TDI_none + 1; i != TDI_end; i++)\n+\tcandidates.safe_push (dump_files[i].swtch);\n+      for (size_t i = 0; i < m_extra_dump_files_in_use; i++)\n+\tcandidates.safe_push (m_extra_dump_files[i].swtch);\n+      const char *hint = find_closest_string (arg, &candidates);\n+      if (hint)\n+\terror (\"unrecognized command-line option %<-fdump-%s%>; \"\n+\t       \"did you mean %<-fdump-%s%>?\", arg, hint);\n+      else\n+\terror (\"unrecognized command-line option %<-fdump-%s%>\", arg);\n+    }\n }\n \n /* Parse ARG as a -fopt-info switch and store flags, optgroup_flags"}, {"sha": "00e175a4737992c2fa8a27b287a819b8b7def5ba", "filename": "gcc/dumpfile.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48c041033ec07b22fda380daa208ab754ec52b68/gcc%2Fdumpfile.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48c041033ec07b22fda380daa208ab754ec52b68/gcc%2Fdumpfile.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdumpfile.h?ref=48c041033ec07b22fda380daa208ab754ec52b68", "patch": "@@ -691,7 +691,7 @@ class dump_manager\n   char *\n   get_dump_file_name (struct dump_file_info *dfi, int part = -1) const;\n \n-  int\n+  void\n   dump_switch_p (const char *arg);\n \n   /* Start a dump for PHASE. Store user-supplied dump flags in"}, {"sha": "b1a8429dc3c79ef747745eeedc26193bb6f0bf8d", "filename": "gcc/opts-global.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48c041033ec07b22fda380daa208ab754ec52b68/gcc%2Fopts-global.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48c041033ec07b22fda380daa208ab754ec52b68/gcc%2Fopts-global.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts-global.c?ref=48c041033ec07b22fda380daa208ab754ec52b68", "patch": "@@ -385,8 +385,7 @@ handle_common_deferred_options (void)\n \t  break;\n \n \tcase OPT_fdump_:\n-\t  if (!g->get_dumps ()->dump_switch_p (opt->arg))\n-\t    error (\"unrecognized command-line option %<-fdump-%s%>\", opt->arg);\n+\t  g->get_dumps ()->dump_switch_p (opt->arg);\n \t  break;\n \n         case OPT_fopt_info_:"}, {"sha": "b0ddae2e78ea6586c834e060d95a8e477f13275a", "filename": "gcc/testsuite/gcc.dg/spellcheck-options-22.c", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48c041033ec07b22fda380daa208ab754ec52b68/gcc%2Ftestsuite%2Fgcc.dg%2Fspellcheck-options-22.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48c041033ec07b22fda380daa208ab754ec52b68/gcc%2Ftestsuite%2Fgcc.dg%2Fspellcheck-options-22.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fspellcheck-options-22.c?ref=48c041033ec07b22fda380daa208ab754ec52b68", "patch": "@@ -0,0 +1,3 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-fdump-ipa-ynline\" } */\n+/* { dg-error \"unrecognized command-line option '-fdump-ipa-ynline'; did you mean '-fdump-ipa-inline'?\" \"\" { target *-*-* } 0 } */"}]}