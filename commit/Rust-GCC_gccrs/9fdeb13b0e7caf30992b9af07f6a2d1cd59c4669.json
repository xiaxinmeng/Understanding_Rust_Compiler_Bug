{"sha": "9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWZkZWIxM2IwZTdjYWYzMDk5MmI5YWYwN2Y2YTJkMWNkNTljNDY2OQ==", "commit": {"author": {"name": "Andreas Tobler", "email": "a.tobler@schweiz.ch", "date": "2006-02-28T23:12:00Z"}, "committer": {"name": "Andreas Tobler", "email": "andreast@gcc.gnu.org", "date": "2006-02-28T23:12:00Z"}, "message": "call.exp: Adjust FSF address.\n\n2006-02-28  Andreas Tobler  <a.tobler@schweiz.ch>\n\n\t* testsuite/libffi.call/call.exp: Adjust FSF address. Add test runs for\n\t-O2, -O3, -Os and the warning flags -W -Wall.\n\t* testsuite/libffi.special/special.exp: Likewise.\n\t* testsuite/libffi.call/ffitest.h: Add an __UNUSED__ macro to mark\n\tunused parameter unused for gcc or else do nothing.\n\t* testsuite/libffi.special/ffitestcxx.h: Likewise.\n\t* testsuite/libffi.call/cls_12byte.c (cls_struct_12byte_gn): Mark cif\n\tand userdata unused.\n\t* testsuite/libffi.call/cls_16byte.c (cls_struct_16byte_gn): Likewise.\n\t* testsuite/libffi.call/cls_18byte.c (cls_struct_18byte_gn): Likewise.\n\t* testsuite/libffi.call/cls_19byte.c (cls_struct_19byte_gn): Likewise.\n\t* testsuite/libffi.call/cls_1_1byte.c (cls_struct_1_1byte_gn): Likewise.\n\t* testsuite/libffi.call/cls_20byte.c (cls_struct_20byte_gn): Likewise.\n\t* testsuite/libffi.call/cls_20byte1.c (cls_struct_20byte_gn): Likewise.\n\t* testsuite/libffi.call/cls_24byte.c (cls_struct_24byte_gn): Likewise.\n\t* testsuite/libffi.call/cls_2byte.c (cls_struct_2byte_gn): Likewise.\n\t* testsuite/libffi.call/cls_3_1byte.c (cls_struct_3_1byte_gn): Likewise.\n\t* testsuite/libffi.call/cls_3byte1.c (cls_struct_3byte_gn): Likewise.\n\t* testsuite/libffi.call/cls_3byte2.c (cls_struct_3byte_gn1): Likewise.\n\t* testsuite/libffi.call/cls_4_1byte.c (cls_struct_4_1byte_gn): Likewise.\n\t* testsuite/libffi.call/cls_4byte.c (cls_struct_4byte_gn): Likewise.\n\t* testsuite/libffi.call/cls_5_1_byte.c (cls_struct_5byte_gn): Likewise.\n\t* testsuite/libffi.call/cls_5byte.c (cls_struct_5byte_gn): Likewise.\n\t* testsuite/libffi.call/cls_64byte.c (cls_struct_64byte_gn): Likewise.\n\t* testsuite/libffi.call/cls_6_1_byte.c (cls_struct_6byte_gn): Likewise.\n\t* testsuite/libffi.call/cls_6byte.c (cls_struct_6byte_gn): Likewise.\n\t* testsuite/libffi.call/cls_7_1_byte.c (cls_struct_7byte_gn): Likewise.\n\t* testsuite/libffi.call/cls_7byte.c (cls_struct_7byte_gn): Likewise.\n\t* testsuite/libffi.call/cls_8byte.c (cls_struct_8byte_gn): Likewise.\n\t* testsuite/libffi.call/cls_9byte1.c (cls_struct_9byte_gn): Likewise.\n\t* testsuite/libffi.call/cls_9byte2.c (cls_struct_9byte_gn): Likewise.\n\t* testsuite/libffi.call/cls_align_double.c (cls_struct_align_gn):\n\tLikewise.\n\t* testsuite/libffi.call/cls_align_float.c (cls_struct_align_gn):\n\tLikewise.\n\t* testsuite/libffi.call/cls_align_longdouble.c (cls_struct_align_gn):\n\tLikewise.\n\t* testsuite/libffi.call/cls_align_pointer.c (cls_struct_align_fn): Cast\n\tvoid* to avoid compiler warning.\n\t(main): Likewise.\n\t(cls_struct_align_gn): Mark cif and userdata unused.\n\t* testsuite/libffi.call/cls_align_sint16.c (cls_struct_align_gn):\n\tLikewise.\n\t* testsuite/libffi.call/cls_align_sint32.c (cls_struct_align_gn):\n\tLikewise.\n\t* testsuite/libffi.call/cls_align_sint64.c (cls_struct_align_gn):\n\tLikewise.\n\t* testsuite/libffi.call/cls_align_uint16.c (cls_struct_align_gn):\n\tLikewise.\n\t* testsuite/libffi.call/cls_align_uint32.c (cls_struct_align_gn):\n\tLikewise.\n\t* testsuite/libffi.call/cls_double.c (cls_ret_double_fn): Likewise.\n\t* testsuite/libffi.call/cls_float.c (cls_ret_float_fn): Likewise.\n\t* testsuite/libffi.call/cls_multi_schar.c (test_func_gn): Mark cif and\n\tdata unused.\n\t(main): Cast res_call to silence gcc.\n\t* testsuite/libffi.call/cls_multi_sshort.c (test_func_gn): Mark cif and\n\tdata unused.\n\t(main): Cast res_call to silence gcc.\n\t* testsuite/libffi.call/cls_multi_sshortchar.c (test_func_gn): Mark cif\n\tand data unused.\n\t(main): Cast res_call to silence gcc.\n\t* testsuite/libffi.call/cls_multi_uchar.c (test_func_gn): Mark cif and\n\tdata unused.\n\t(main): Cast res_call to silence gcc.\n\t* testsuite/libffi.call/cls_multi_ushort.c (test_func_gn): Mark cif and\n\tdata unused.\n\t(main): Cast res_call to silence gcc.\n\t* testsuite/libffi.call/cls_multi_ushortchar.c (test_func_gn): Mark cif\n\tand data unused.\n\t(main): Cast res_call to silence gcc.\n\t* testsuite/libffi.call/cls_schar.c (cls_ret_schar_fn): Mark cif and\n\tuserdata unused.\n\t(cls_ret_schar_fn): Cast printf parameter to silence gcc.\n\t* testsuite/libffi.call/cls_sint.c (cls_ret_sint_fn): Mark cif and\n\tuserdata unused.\n\t(cls_ret_sint_fn): Cast printf parameter to silence gcc.\n\t* testsuite/libffi.call/cls_sshort.c (cls_ret_sshort_fn): Mark cif and\n\tuserdata unused.\n\t(cls_ret_sshort_fn): Cast printf parameter to silence gcc.\n\t* testsuite/libffi.call/cls_uchar.c (cls_ret_uchar_fn):  Mark cif and\n\tuserdata unused.\n\t(cls_ret_uchar_fn): Cast printf parameter to silence gcc.\n\t* testsuite/libffi.call/cls_uint.c (cls_ret_uint_fn): Mark cif and\n\tuserdata unused.\n\t(cls_ret_uint_fn): Cast printf parameter to silence gcc.\n\t* testsuite/libffi.call/cls_ulonglong.c (cls_ret_ulonglong_fn): Mark cif\n\tand userdata unused.\n\t* testsuite/libffi.call/cls_ushort.c (cls_ret_ushort_fn): Mark cif and\n\tuserdata unused.\n\t(cls_ret_ushort_fn): Cast printf parameter to silence gcc.\n\t* testsuite/libffi.call/float.c (floating): Remove unused parameter e.\n\t* testsuite/libffi.call/float1.c (main): Remove unused variable i.\n\tCleanup white spaces.\n\t* testsuite/libffi.call/negint.c (checking): Remove unused variable i.\n\t* testsuite/libffi.call/nested_struct.c (cls_struct_combined_gn): Mark\n\tcif and userdata unused.\n\t* testsuite/libffi.call/nested_struct1.c (cls_struct_combined_gn):\n\tLikewise.\n\t* testsuite/libffi.call/nested_struct10.c (B_gn): Likewise.\n\t* testsuite/libffi.call/nested_struct2.c (B_fn): Adjust printf\n\tformatters to silence gcc.\n\t(B_gn): Mark cif and userdata unused.\n\t* testsuite/libffi.call/nested_struct3.c (B_gn): Mark cif and userdata\n\tunused.\n\t* testsuite/libffi.call/nested_struct4.c: Mention related PR.\n\t(B_gn): Mark cif and userdata unused.\n\t* testsuite/libffi.call/nested_struct5.c (B_gn): Mark cif and userdata\n\tunused.\n\t* testsuite/libffi.call/nested_struct6.c: Mention related PR.\n\t(B_gn): Mark cif and userdata unused.\n\t* testsuite/libffi.call/nested_struct7.c (B_gn): Mark cif and userdata\n\tunused.\n\t* testsuite/libffi.call/nested_struct8.c (B_gn): Likewise.\n\t* testsuite/libffi.call/nested_struct9.c (B_gn): Likewise.\n\t* testsuite/libffi.call/problem1.c (stub): Likewise.\n\t* testsuite/libffi.call/pyobjc-tc.c (main): Cast the result to silence\n\tgcc.\n\t* testsuite/libffi.call/return_fl2.c (return_fl): Add the note mentioned\n\tin the last commit for this test case in the test case itself.\n\t* testsuite/libffi.call/closure_fn0.c (closure_test_fn0): Mark cif as\n\tunused.\n\t* testsuite/libffi.call/closure_fn1.c (closure_test_fn1): Likewise.\n\t* testsuite/libffi.call/closure_fn2.c (closure_test_fn2): Likewise.\n\t* testsuite/libffi.call/closure_fn3.c (closure_test_fn3): Likewise.\n\t* testsuite/libffi.call/closure_fn4.c (closure_test_fn0): Likewise.\n\t* testsuite/libffi.call/closure_fn5.c (closure_test_fn5): Likewise.\n\t* testsuite/libffi.call/closure_fn6.c (closure_test_fn0): Likewise.\n\nFrom-SVN: r111582", "tree": {"sha": "492eb3e78d5641f8a72631c49d3c3c065ae108cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/492eb3e78d5641f8a72631c49d3c3c065ae108cc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/comments", "author": null, "committer": null, "parents": [{"sha": "c457fcec8e54df75ee6c133a79cee1417523af59", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c457fcec8e54df75ee6c133a79cee1417523af59", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c457fcec8e54df75ee6c133a79cee1417523af59"}], "stats": {"total": 481, "additions": 335, "deletions": 146}, "files": [{"sha": "ebe638f51f9d11c72303eacf370e6e3d8e3dbae7", "filename": "libffi/ChangeLog", "status": "modified", "additions": 131, "deletions": 0, "changes": 131, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FChangeLog?ref=9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669", "patch": "@@ -1,3 +1,134 @@\n+2006-02-28  Andreas Tobler  <a.tobler@schweiz.ch>\n+\n+\t* testsuite/libffi.call/call.exp: Adjust FSF address. Add test runs for\n+\t-O2, -O3, -Os and the warning flags -W -Wall.\n+\t* testsuite/libffi.special/special.exp: Likewise.\n+\t* testsuite/libffi.call/ffitest.h: Add an __UNUSED__ macro to mark\n+\tunused parameter unused for gcc or else do nothing.\n+\t* testsuite/libffi.special/ffitestcxx.h: Likewise.\n+\t* testsuite/libffi.call/cls_12byte.c (cls_struct_12byte_gn): Mark cif\n+\tand userdata unused.\n+\t* testsuite/libffi.call/cls_16byte.c (cls_struct_16byte_gn): Likewise.\n+\t* testsuite/libffi.call/cls_18byte.c (cls_struct_18byte_gn): Likewise.\n+\t* testsuite/libffi.call/cls_19byte.c (cls_struct_19byte_gn): Likewise.\n+\t* testsuite/libffi.call/cls_1_1byte.c (cls_struct_1_1byte_gn): Likewise.\n+\t* testsuite/libffi.call/cls_20byte.c (cls_struct_20byte_gn): Likewise.\n+\t* testsuite/libffi.call/cls_20byte1.c (cls_struct_20byte_gn): Likewise.\n+\t* testsuite/libffi.call/cls_24byte.c (cls_struct_24byte_gn): Likewise.\n+\t* testsuite/libffi.call/cls_2byte.c (cls_struct_2byte_gn): Likewise.\n+\t* testsuite/libffi.call/cls_3_1byte.c (cls_struct_3_1byte_gn): Likewise.\n+\t* testsuite/libffi.call/cls_3byte1.c (cls_struct_3byte_gn): Likewise.\n+\t* testsuite/libffi.call/cls_3byte2.c (cls_struct_3byte_gn1): Likewise.\n+\t* testsuite/libffi.call/cls_4_1byte.c (cls_struct_4_1byte_gn): Likewise.\n+\t* testsuite/libffi.call/cls_4byte.c (cls_struct_4byte_gn): Likewise.\n+\t* testsuite/libffi.call/cls_5_1_byte.c (cls_struct_5byte_gn): Likewise.\n+\t* testsuite/libffi.call/cls_5byte.c (cls_struct_5byte_gn): Likewise.\n+\t* testsuite/libffi.call/cls_64byte.c (cls_struct_64byte_gn): Likewise.\n+\t* testsuite/libffi.call/cls_6_1_byte.c (cls_struct_6byte_gn): Likewise.\n+\t* testsuite/libffi.call/cls_6byte.c (cls_struct_6byte_gn): Likewise.\n+\t* testsuite/libffi.call/cls_7_1_byte.c (cls_struct_7byte_gn): Likewise.\n+\t* testsuite/libffi.call/cls_7byte.c (cls_struct_7byte_gn): Likewise.\n+\t* testsuite/libffi.call/cls_8byte.c (cls_struct_8byte_gn): Likewise.\n+\t* testsuite/libffi.call/cls_9byte1.c (cls_struct_9byte_gn): Likewise.\n+\t* testsuite/libffi.call/cls_9byte2.c (cls_struct_9byte_gn): Likewise.\n+\t* testsuite/libffi.call/cls_align_double.c (cls_struct_align_gn):\n+\tLikewise.\n+\t* testsuite/libffi.call/cls_align_float.c (cls_struct_align_gn):\n+\tLikewise.\n+\t* testsuite/libffi.call/cls_align_longdouble.c (cls_struct_align_gn):\n+\tLikewise.\n+\t* testsuite/libffi.call/cls_align_pointer.c (cls_struct_align_fn): Cast\n+\tvoid* to avoid compiler warning.\n+\t(main): Likewise.\n+\t(cls_struct_align_gn): Mark cif and userdata unused.\n+\t* testsuite/libffi.call/cls_align_sint16.c (cls_struct_align_gn):\n+\tLikewise.\n+\t* testsuite/libffi.call/cls_align_sint32.c (cls_struct_align_gn):\n+\tLikewise.\n+\t* testsuite/libffi.call/cls_align_sint64.c (cls_struct_align_gn):\n+\tLikewise.\n+\t* testsuite/libffi.call/cls_align_uint16.c (cls_struct_align_gn):\n+\tLikewise.\n+\t* testsuite/libffi.call/cls_align_uint32.c (cls_struct_align_gn):\n+\tLikewise.\n+\t* testsuite/libffi.call/cls_double.c (cls_ret_double_fn): Likewise.\n+\t* testsuite/libffi.call/cls_float.c (cls_ret_float_fn): Likewise.\n+\t* testsuite/libffi.call/cls_multi_schar.c (test_func_gn): Mark cif and\n+\tdata unused.\n+\t(main): Cast res_call to silence gcc.\n+\t* testsuite/libffi.call/cls_multi_sshort.c (test_func_gn): Mark cif and\n+\tdata unused.\n+\t(main): Cast res_call to silence gcc.\n+\t* testsuite/libffi.call/cls_multi_sshortchar.c (test_func_gn): Mark cif\n+\tand data unused.\n+\t(main): Cast res_call to silence gcc.\n+\t* testsuite/libffi.call/cls_multi_uchar.c (test_func_gn): Mark cif and\n+\tdata unused.\n+\t(main): Cast res_call to silence gcc.\n+\t* testsuite/libffi.call/cls_multi_ushort.c (test_func_gn): Mark cif and\n+\tdata unused.\n+\t(main): Cast res_call to silence gcc.\n+\t* testsuite/libffi.call/cls_multi_ushortchar.c (test_func_gn): Mark cif\n+\tand data unused.\n+\t(main): Cast res_call to silence gcc.\n+\t* testsuite/libffi.call/cls_schar.c (cls_ret_schar_fn): Mark cif and\n+\tuserdata unused.\n+\t(cls_ret_schar_fn): Cast printf parameter to silence gcc.\n+\t* testsuite/libffi.call/cls_sint.c (cls_ret_sint_fn): Mark cif and\n+\tuserdata unused.\n+\t(cls_ret_sint_fn): Cast printf parameter to silence gcc.\n+\t* testsuite/libffi.call/cls_sshort.c (cls_ret_sshort_fn): Mark cif and\n+\tuserdata unused.\n+\t(cls_ret_sshort_fn): Cast printf parameter to silence gcc.\n+\t* testsuite/libffi.call/cls_uchar.c (cls_ret_uchar_fn):  Mark cif and\n+\tuserdata unused.\n+\t(cls_ret_uchar_fn): Cast printf parameter to silence gcc.\n+\t* testsuite/libffi.call/cls_uint.c (cls_ret_uint_fn): Mark cif and\n+\tuserdata unused.\n+\t(cls_ret_uint_fn): Cast printf parameter to silence gcc.\n+\t* testsuite/libffi.call/cls_ulonglong.c (cls_ret_ulonglong_fn): Mark cif\n+\tand userdata unused.\n+\t* testsuite/libffi.call/cls_ushort.c (cls_ret_ushort_fn): Mark cif and\n+\tuserdata unused.\n+\t(cls_ret_ushort_fn): Cast printf parameter to silence gcc.\n+\t* testsuite/libffi.call/float.c (floating): Remove unused parameter e.\n+\t* testsuite/libffi.call/float1.c (main): Remove unused variable i.\n+\tCleanup white spaces.\n+\t* testsuite/libffi.call/negint.c (checking): Remove unused variable i.\n+\t* testsuite/libffi.call/nested_struct.c (cls_struct_combined_gn): Mark\n+\tcif and userdata unused.\n+\t* testsuite/libffi.call/nested_struct1.c (cls_struct_combined_gn):\n+\tLikewise.\n+\t* testsuite/libffi.call/nested_struct10.c (B_gn): Likewise.\n+\t* testsuite/libffi.call/nested_struct2.c (B_fn): Adjust printf\n+\tformatters to silence gcc.\n+\t(B_gn): Mark cif and userdata unused.\n+\t* testsuite/libffi.call/nested_struct3.c (B_gn): Mark cif and userdata\n+\tunused.\n+\t* testsuite/libffi.call/nested_struct4.c: Mention related PR.\n+\t(B_gn): Mark cif and userdata unused.\n+\t* testsuite/libffi.call/nested_struct5.c (B_gn): Mark cif and userdata\n+\tunused.\n+\t* testsuite/libffi.call/nested_struct6.c: Mention related PR.\n+\t(B_gn): Mark cif and userdata unused.\n+\t* testsuite/libffi.call/nested_struct7.c (B_gn): Mark cif and userdata\n+\tunused.\n+\t* testsuite/libffi.call/nested_struct8.c (B_gn): Likewise.\n+\t* testsuite/libffi.call/nested_struct9.c (B_gn): Likewise.\n+\t* testsuite/libffi.call/problem1.c (stub): Likewise.\n+\t* testsuite/libffi.call/pyobjc-tc.c (main): Cast the result to silence\n+\tgcc.\n+\t* testsuite/libffi.call/return_fl2.c (return_fl): Add the note mentioned\n+\tin the last commit for this test case in the test case itself.\n+\t* testsuite/libffi.call/closure_fn0.c (closure_test_fn0): Mark cif as\n+\tunused.\n+\t* testsuite/libffi.call/closure_fn1.c (closure_test_fn1): Likewise.\n+\t* testsuite/libffi.call/closure_fn2.c (closure_test_fn2): Likewise.\n+\t* testsuite/libffi.call/closure_fn3.c (closure_test_fn3): Likewise.\n+\t* testsuite/libffi.call/closure_fn4.c (closure_test_fn0): Likewise.\n+\t* testsuite/libffi.call/closure_fn5.c (closure_test_fn5): Likewise.\n+\t* testsuite/libffi.call/closure_fn6.c (closure_test_fn0): Likewise.\n+\n 2006-02-22  Kaz Kojima  <kkojima@gcc.gnu.org>\n \n \t* src/sh/sysv.S: Fix register numbers in the FDE for"}, {"sha": "bd4d2e8cc2570232191e3118bf283d630bcf319e", "filename": "libffi/testsuite/libffi.call/call.exp", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcall.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcall.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fcall.exp?ref=9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669", "patch": "@@ -1,18 +1,18 @@\n-#   Copyright (C) 2003 Free Software Foundation, Inc.\n+# Copyright (C) 2003, 2006 Free Software Foundation, Inc.\n \n # This program is free software; you can redistribute it and/or modify\n # it under the terms of the GNU General Public License as published by\n # the Free Software Foundation; either version 2 of the License, or\n # (at your option) any later version.\n-# \n+#\n # This program is distributed in the hope that it will be useful,\n # but WITHOUT ANY WARRANTY; without even the implied warranty of\n # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n # GNU General Public License for more details.\n-# \n+#\n # You should have received a copy of the GNU General Public License\n # along with this program; if not, write to the Free Software\n-# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  \n+# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n \n # libffi testsuite that uses the 'dg.exp' driver.\n \n@@ -23,7 +23,10 @@ libffi-init\n \n global srcdir subdir\n \n-dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.\\[cS\\]]] \"\" \"\" \n+dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.\\[cS\\]]] \"-O0 -W -Wall\" \"\"\n+dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.\\[cS\\]]] \"-O2\" \"\"\n+dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.\\[cS\\]]] \"-O3\" \"\"\n+dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.\\[cS\\]]] \"-Os\" \"\"\n \n dg-finish\n "}, {"sha": "baa0a31b0cba8175ef8dd9fea2a3dd9a767ce2e0", "filename": "libffi/testsuite/libffi.call/closure_fn0.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fclosure_fn0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fclosure_fn0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fclosure_fn0.c?ref=9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669", "patch": "@@ -10,7 +10,8 @@\n #include \"ffitest.h\"\n \n static void\n-closure_test_fn0(ffi_cif* cif,void* resp,void** args, void* userdata)\n+closure_test_fn0(ffi_cif* cif __UNUSED__, void* resp, void** args,\n+\t\t void* userdata)\n {\n   *(ffi_arg*)resp =\n     (int)*(unsigned long long *)args[0] + (int)(*(int *)args[1]) +"}, {"sha": "89988aab1db8e1a3194a776c3fd34bf5ef483601", "filename": "libffi/testsuite/libffi.call/closure_fn1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fclosure_fn1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fclosure_fn1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fclosure_fn1.c?ref=9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669", "patch": "@@ -10,7 +10,7 @@\n #include \"ffitest.h\"\n \n \n-static void closure_test_fn1(ffi_cif* cif,void* resp,void** args,\n+static void closure_test_fn1(ffi_cif* cif __UNUSED__, void* resp, void** args,\n \t\t\t     void* userdata)\n {\n   *(ffi_arg*)resp ="}, {"sha": "f46fdce7901179c1a75797bafd91f6f931b602cd", "filename": "libffi/testsuite/libffi.call/closure_fn2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fclosure_fn2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fclosure_fn2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fclosure_fn2.c?ref=9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669", "patch": "@@ -9,7 +9,7 @@\n /* { dg-do run { xfail mips64*-*-* arm*-*-* strongarm*-*-* xscale*-*-* } } */\n #include \"ffitest.h\"\n \n-static void closure_test_fn2(ffi_cif* cif,void* resp,void** args,\n+static void closure_test_fn2(ffi_cif* cif __UNUSED__, void* resp, void** args,\n \t\t\t     void* userdata)\n {\n   *(ffi_arg*)resp ="}, {"sha": "acfef78855f5cef15b2f8fda59257ed216c0f1b2", "filename": "libffi/testsuite/libffi.call/closure_fn3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fclosure_fn3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fclosure_fn3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fclosure_fn3.c?ref=9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669", "patch": "@@ -9,7 +9,7 @@\n /* { dg-do run { xfail mips64*-*-* arm*-*-* strongarm*-*-* xscale*-*-* } } */\n #include \"ffitest.h\"\n \n-static void closure_test_fn3(ffi_cif* cif,void* resp,void** args,\n+static void closure_test_fn3(ffi_cif* cif __UNUSED__, void* resp, void** args,\n \t\t\t     void* userdata)\n  {\n    *(ffi_arg*)resp ="}, {"sha": "e46b4574ace31d69e5a388056cf58479f58465b7", "filename": "libffi/testsuite/libffi.call/closure_fn4.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fclosure_fn4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fclosure_fn4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fclosure_fn4.c?ref=9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669", "patch": "@@ -11,7 +11,8 @@\n #include \"ffitest.h\"\n \n static void\n-closure_test_fn0(ffi_cif* cif,void* resp,void** args, void* userdata)\n+closure_test_fn0(ffi_cif* cif __UNUSED__, void* resp, void** args,\n+\t\t void* userdata)\n {\n   *(ffi_arg*)resp =\n     (int)*(unsigned long long *)args[0] + (int)*(unsigned long long *)args[1] +"}, {"sha": "ea52ddec1ffac7b64cb6ec08b712ba9f42f76ddd", "filename": "libffi/testsuite/libffi.call/closure_fn5.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fclosure_fn5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fclosure_fn5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fclosure_fn5.c?ref=9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669", "patch": "@@ -7,11 +7,11 @@\n    Originator:\t<andreast@gcc.gnu.org> 20031026\t */\n \n /* { dg-do run { xfail mips64*-*-* arm*-*-* strongarm*-*-* xscale*-*-* } } */\n-\n #include \"ffitest.h\"\n \n static void\n-closure_test_fn5(ffi_cif* cif,void* resp,void** args, void* userdata)\n+closure_test_fn5(ffi_cif* cif __UNUSED__, void* resp, void** args,\n+\t\t void* userdata)\n {\n   *(ffi_arg*)resp =\n     (int)*(unsigned long long *)args[0] + (int)*(unsigned long long *)args[1] +"}, {"sha": "c81509d6646c5e6dba5943cd56dd8262dc57cfd0", "filename": "libffi/testsuite/libffi.call/closure_fn6.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fclosure_fn6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fclosure_fn6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fclosure_fn6.c?ref=9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669", "patch": "@@ -9,7 +9,8 @@\n #include \"ffitest.h\"\n \n static void\n-closure_test_fn0(ffi_cif* cif,void* resp,void** args, void* userdata)\n+closure_test_fn0(ffi_cif* cif __UNUSED__, void* resp, void** args,\n+\t\t void* userdata)\n {\n   *(ffi_arg*)resp =\n     (int)*(unsigned long long *)args[0] +"}, {"sha": "75269a913cc819d72bb9aa511d7acc9d90ee5a21", "filename": "libffi/testsuite/libffi.call/cls_12byte.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_12byte.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_12byte.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fcls_12byte.c?ref=9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669", "patch": "@@ -28,7 +28,8 @@ cls_struct_12byte cls_struct_12byte_fn(struct cls_struct_12byte b1,\n   return result;\n }\n \n-static void cls_struct_12byte_gn(ffi_cif* cif, void* resp, void** args, void* userdata)\n+static void cls_struct_12byte_gn(ffi_cif* cif __UNUSED__, void* resp,\n+\t\t\t\t void** args , void* userdata __UNUSED__)\n {\n   struct cls_struct_12byte b1, b2;\n "}, {"sha": "09c282629765766edaaa468bbfda1ee5cdb497d1", "filename": "libffi/testsuite/libffi.call/cls_16byte.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_16byte.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_16byte.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fcls_16byte.c?ref=9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669", "patch": "@@ -29,7 +29,8 @@ cls_struct_16byte cls_struct_16byte_fn(struct cls_struct_16byte b1,\n   return result;\n }\n \n-static void cls_struct_16byte_gn(ffi_cif* cif, void* resp, void** args, void* userdata)\n+static void cls_struct_16byte_gn(ffi_cif* cif __UNUSED__, void* resp,\n+\t\t\t\t void** args, void* userdata __UNUSED__)\n {\n   struct cls_struct_16byte b1, b2;\n "}, {"sha": "b4655591d590af38fdaf183aa4295b0df4f5a7df", "filename": "libffi/testsuite/libffi.call/cls_18byte.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_18byte.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_18byte.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fcls_18byte.c?ref=9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669", "patch": "@@ -33,7 +33,8 @@ cls_struct_18byte cls_struct_18byte_fn(struct cls_struct_18byte a1,\n }\n \n static void\n-cls_struct_18byte_gn(ffi_cif* cif, void* resp, void** args, void* userdata)\n+cls_struct_18byte_gn(ffi_cif* cif __UNUSED__, void* resp, void** args,\n+\t\t     void* userdata __UNUSED__)\n {\n   struct cls_struct_18byte a1, a2;\n "}, {"sha": "05bf90128d08b58fb708fd07cf409255d57fa478", "filename": "libffi/testsuite/libffi.call/cls_19byte.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_19byte.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_19byte.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fcls_19byte.c?ref=9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669", "patch": "@@ -36,7 +36,8 @@ cls_struct_19byte cls_struct_19byte_fn(struct cls_struct_19byte a1,\n }\n \n static void\n-cls_struct_19byte_gn(ffi_cif* cif, void* resp, void** args, void* userdata)\n+cls_struct_19byte_gn(ffi_cif* cif __UNUSED__, void* resp, void** args,\n+\t\t     void* userdata __UNUSED__)\n {\n   struct cls_struct_19byte a1, a2;\n "}, {"sha": "e3fd7b6bd505d43fcd3b777db67255b88c905dcf", "filename": "libffi/testsuite/libffi.call/cls_1_1byte.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_1_1byte.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_1_1byte.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fcls_1_1byte.c?ref=9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669", "patch": "@@ -26,7 +26,8 @@ cls_struct_1_1byte cls_struct_1_1byte_fn(struct cls_struct_1_1byte a1,\n }\n \n static void\n-cls_struct_1_1byte_gn(ffi_cif* cif, void* resp, void** args, void* userdata)\n+cls_struct_1_1byte_gn(ffi_cif* cif __UNUSED__, void* resp, void** args,\n+\t\t      void* userdata __UNUSED__)\n {\n \n   struct cls_struct_1_1byte a1, a2;"}, {"sha": "e75faf52f4408399cef19e3ec436438f2c5798e3", "filename": "libffi/testsuite/libffi.call/cls_20byte.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_20byte.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_20byte.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fcls_20byte.c?ref=9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669", "patch": "@@ -29,7 +29,8 @@ cls_struct_20byte cls_struct_20byte_fn(struct cls_struct_20byte a1,\n }\n \n static void\n-cls_struct_20byte_gn(ffi_cif* cif, void* resp, void** args, void* userdata)\n+cls_struct_20byte_gn(ffi_cif* cif __UNUSED__, void* resp, void** args,\n+\t\t     void* userdata __UNUSED__)\n {\n   struct cls_struct_20byte a1, a2;\n "}, {"sha": "41c1d376c37afefedeeb21e661c04dbeb09da98b", "filename": "libffi/testsuite/libffi.call/cls_20byte1.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_20byte1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_20byte1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fcls_20byte1.c?ref=9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669", "patch": "@@ -29,7 +29,8 @@ cls_struct_20byte cls_struct_20byte_fn(struct cls_struct_20byte a1,\n }\n \n static void\n-cls_struct_20byte_gn(ffi_cif* cif, void* resp, void** args, void* userdata)\n+cls_struct_20byte_gn(ffi_cif* cif __UNUSED__, void* resp, void** args,\n+\t\t     void* userdata __UNUSED__)\n {\n   struct cls_struct_20byte a1, a2;\n "}, {"sha": "ae6c4163b869f005f03591c74fe88d2c8a38d1cd", "filename": "libffi/testsuite/libffi.call/cls_24byte.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_24byte.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_24byte.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fcls_24byte.c?ref=9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669", "patch": "@@ -38,7 +38,8 @@ cls_struct_24byte cls_struct_24byte_fn(struct cls_struct_24byte b0,\n }\n \n static void\n-cls_struct_24byte_gn(ffi_cif* cif, void* resp, void** args, void* userdata)\n+cls_struct_24byte_gn(ffi_cif* cif __UNUSED__, void* resp, void** args,\n+\t\t     void* userdata __UNUSED__)\n {\n   struct cls_struct_24byte b0, b1, b2, b3;\n "}, {"sha": "b9fd21ef18588f15aa1f4e7336f833f10dcf64db", "filename": "libffi/testsuite/libffi.call/cls_2byte.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_2byte.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_2byte.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fcls_2byte.c?ref=9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669", "patch": "@@ -28,7 +28,8 @@ cls_struct_2byte cls_struct_2byte_fn(struct cls_struct_2byte a1,\n }\n \n static void\n-cls_struct_2byte_gn(ffi_cif* cif, void* resp, void** args, void* userdata)\n+cls_struct_2byte_gn(ffi_cif* cif __UNUSED__, void* resp, void** args,\n+\t\t    void* userdata __UNUSED__)\n {\n \n   struct cls_struct_2byte a1, a2;"}, {"sha": "0feb11e4db2776e1a4d43f538bc911e399f19a55", "filename": "libffi/testsuite/libffi.call/cls_3_1byte.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_3_1byte.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_3_1byte.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fcls_3_1byte.c?ref=9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669", "patch": "@@ -32,7 +32,8 @@ cls_struct_3_1byte cls_struct_3_1byte_fn(struct cls_struct_3_1byte a1,\n }\n \n static void\n-cls_struct_3_1byte_gn(ffi_cif* cif, void* resp, void** args, void* userdata)\n+cls_struct_3_1byte_gn(ffi_cif* cif __UNUSED__, void* resp, void** args,\n+\t\t      void* userdata __UNUSED__)\n {\n \n   struct cls_struct_3_1byte a1, a2;"}, {"sha": "5be4e4ab8ae7fa5f4a257cb2c550c9b3c11ddd4a", "filename": "libffi/testsuite/libffi.call/cls_3byte1.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_3byte1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_3byte1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fcls_3byte1.c?ref=9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669", "patch": "@@ -28,7 +28,8 @@ cls_struct_3byte cls_struct_3byte_fn(struct cls_struct_3byte a1,\n }\n \n static void\n-cls_struct_3byte_gn(ffi_cif* cif, void* resp, void** args, void* userdata)\n+cls_struct_3byte_gn(ffi_cif* cif __UNUSED__, void* resp, void** args,\n+\t\t    void* userdata __UNUSED__)\n {\n \n   struct cls_struct_3byte a1, a2;"}, {"sha": "c4d57d68b9fa0f001f637a6b72b912be32e96bf8", "filename": "libffi/testsuite/libffi.call/cls_3byte2.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_3byte2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_3byte2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fcls_3byte2.c?ref=9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669", "patch": "@@ -28,7 +28,8 @@ cls_struct_3byte_1 cls_struct_3byte_fn1(struct cls_struct_3byte_1 a1,\n }\n \n static void\n-cls_struct_3byte_gn1(ffi_cif* cif, void* resp, void** args, void* userdata)\n+cls_struct_3byte_gn1(ffi_cif* cif __UNUSED__, void* resp, void** args,\n+\t\t     void* userdata __UNUSED__)\n {\n \n   struct cls_struct_3byte_1 a1, a2;"}, {"sha": "a8a7314aa2d064091503c42178f507d40ff42a4c", "filename": "libffi/testsuite/libffi.call/cls_4_1byte.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_4_1byte.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_4_1byte.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fcls_4_1byte.c?ref=9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669", "patch": "@@ -34,7 +34,8 @@ cls_struct_4_1byte cls_struct_4_1byte_fn(struct cls_struct_4_1byte a1,\n }\n \n static void\n-cls_struct_4_1byte_gn(ffi_cif* cif, void* resp, void** args, void* userdata)\n+cls_struct_4_1byte_gn(ffi_cif* cif __UNUSED__, void* resp, void** args,\n+\t\t      void* userdata __UNUSED__)\n {\n \n   struct cls_struct_4_1byte a1, a2;"}, {"sha": "073bea99d2e7227e4ab5ec8f46b0105323cbdb38", "filename": "libffi/testsuite/libffi.call/cls_4byte.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_4byte.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_4byte.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fcls_4byte.c?ref=9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669", "patch": "@@ -28,7 +28,8 @@ cls_struct_4byte cls_struct_4byte_fn(struct cls_struct_4byte a1,\n }\n \n static void\n-cls_struct_4byte_gn(ffi_cif* cif, void* resp, void** args, void* userdata)\n+cls_struct_4byte_gn(ffi_cif* cif __UNUSED__, void* resp, void** args,\n+\t\t    void* userdata __UNUSED__)\n {\n \n   struct cls_struct_4byte a1, a2;"}, {"sha": "776ffc2c240e655a1af396b5f84385d55f3a3b22", "filename": "libffi/testsuite/libffi.call/cls_5_1_byte.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_5_1_byte.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_5_1_byte.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fcls_5_1_byte.c?ref=9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669", "patch": "@@ -36,7 +36,8 @@ cls_struct_5byte cls_struct_5byte_fn(struct cls_struct_5byte a1,\n }\n \n static void\n-cls_struct_5byte_gn(ffi_cif* cif, void* resp, void** args, void* userdata)\n+cls_struct_5byte_gn(ffi_cif* cif __UNUSED__, void* resp, void** args,\n+\t\t    void* userdata __UNUSED__)\n {\n \n   struct cls_struct_5byte a1, a2;"}, {"sha": "86e97779186d94e9dee8799cf32732cf9956711a", "filename": "libffi/testsuite/libffi.call/cls_5byte.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_5byte.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_5byte.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fcls_5byte.c?ref=9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669", "patch": "@@ -31,7 +31,8 @@ cls_struct_5byte cls_struct_5byte_fn(struct cls_struct_5byte a1,\n }\n \n static void\n-cls_struct_5byte_gn(ffi_cif* cif, void* resp, void** args, void* userdata)\n+cls_struct_5byte_gn(ffi_cif* cif __UNUSED__, void* resp, void** args,\n+\t\t    void* userdata __UNUSED__)\n {\n \n   struct cls_struct_5byte a1, a2;"}, {"sha": "ab1459091092deaffd4a6a56bc978b2c7b251373", "filename": "libffi/testsuite/libffi.call/cls_64byte.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_64byte.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_64byte.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fcls_64byte.c?ref=9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669", "patch": "@@ -43,7 +43,8 @@ cls_struct_64byte cls_struct_64byte_fn(struct cls_struct_64byte b0,\n }\n \n static void\n-cls_struct_64byte_gn(ffi_cif* cif, void* resp, void** args, void* userdata)\n+cls_struct_64byte_gn(ffi_cif* cif __UNUSED__, void* resp, void** args,\n+\t\t     void* userdata __UNUSED__)\n {\n   struct cls_struct_64byte b0, b1, b2, b3;\n "}, {"sha": "4a42cf9eb57f31cd4f6e9f130898cde6579cdd45", "filename": "libffi/testsuite/libffi.call/cls_6_1_byte.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_6_1_byte.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_6_1_byte.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fcls_6_1_byte.c?ref=9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669", "patch": "@@ -38,7 +38,8 @@ cls_struct_6byte cls_struct_6byte_fn(struct cls_struct_6byte a1,\n }\n \n static void\n-cls_struct_6byte_gn(ffi_cif* cif, void* resp, void** args, void* userdata)\n+cls_struct_6byte_gn(ffi_cif* cif __UNUSED__, void* resp, void** args,\n+\t\t    void* userdata __UNUSED__)\n {\n \n   struct cls_struct_6byte a1, a2;"}, {"sha": "1ea26306ae455e5294e4bfd0033fa825f1a66172", "filename": "libffi/testsuite/libffi.call/cls_6byte.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_6byte.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_6byte.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fcls_6byte.c?ref=9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669", "patch": "@@ -33,7 +33,8 @@ cls_struct_6byte cls_struct_6byte_fn(struct cls_struct_6byte a1,\n }\n \n static void\n-cls_struct_6byte_gn(ffi_cif* cif, void* resp, void** args, void* userdata)\n+cls_struct_6byte_gn(ffi_cif* cif __UNUSED__, void* resp, void** args,\n+\t\t    void* userdata __UNUSED__)\n {\n \n   struct cls_struct_6byte a1, a2;"}, {"sha": "1c6d4ad9b8d08bfe0940a3aef0d01e91f5ce5f35", "filename": "libffi/testsuite/libffi.call/cls_7_1_byte.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_7_1_byte.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_7_1_byte.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fcls_7_1_byte.c?ref=9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669", "patch": "@@ -40,7 +40,8 @@ cls_struct_7byte cls_struct_7byte_fn(struct cls_struct_7byte a1,\n }\n \n static void\n-cls_struct_7byte_gn(ffi_cif* cif, void* resp, void** args, void* userdata)\n+cls_struct_7byte_gn(ffi_cif* cif __UNUSED__, void* resp, void** args,\n+\t\t    void* userdata __UNUSED__)\n {\n \n   struct cls_struct_7byte a1, a2;"}, {"sha": "df444f3f836ddd5711ad80af0566c0f3143999fb", "filename": "libffi/testsuite/libffi.call/cls_7byte.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_7byte.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_7byte.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fcls_7byte.c?ref=9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669", "patch": "@@ -33,7 +33,8 @@ cls_struct_7byte cls_struct_7byte_fn(struct cls_struct_7byte a1,\n }\n \n static void\n-cls_struct_7byte_gn(ffi_cif* cif, void* resp, void** args, void* userdata)\n+cls_struct_7byte_gn(ffi_cif* cif __UNUSED__, void* resp, void** args,\n+\t\t    void* userdata __UNUSED__)\n {\n \n   struct cls_struct_7byte a1, a2;"}, {"sha": "5843b0a506ba8ebb647085de4aa24a49fd6a5203", "filename": "libffi/testsuite/libffi.call/cls_8byte.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_8byte.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_8byte.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fcls_8byte.c?ref=9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669", "patch": "@@ -27,7 +27,8 @@ cls_struct_8byte cls_struct_8byte_fn(struct cls_struct_8byte a1,\n }\n \n static void\n-cls_struct_8byte_gn(ffi_cif* cif, void* resp, void** args, void* userdata)\n+cls_struct_8byte_gn(ffi_cif* cif __UNUSED__, void* resp, void** args,\n+\t\t    void* userdata __UNUSED__)\n {\n \n   struct cls_struct_8byte a1, a2;"}, {"sha": "334f57e2fbee3d54a5de4efc59285cb66087d47b", "filename": "libffi/testsuite/libffi.call/cls_9byte1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_9byte1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_9byte1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fcls_9byte1.c?ref=9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669", "patch": "@@ -29,8 +29,8 @@ cls_struct_9byte cls_struct_9byte_fn(struct cls_struct_9byte b1,\n   return result;\n }\n \n-static void cls_struct_9byte_gn(ffi_cif* cif, void* resp, void** args,\n-\t\t\t\tvoid* userdata)\n+static void cls_struct_9byte_gn(ffi_cif* cif __UNUSED__, void* resp,\n+\t\t\t\tvoid** args, void* userdata __UNUSED__)\n {\n   struct cls_struct_9byte b1, b2;\n "}, {"sha": "0e1d01ac46a08e72019f958e2aa9456d18367dfb", "filename": "libffi/testsuite/libffi.call/cls_9byte2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_9byte2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_9byte2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fcls_9byte2.c?ref=9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669", "patch": "@@ -29,8 +29,8 @@ cls_struct_9byte cls_struct_9byte_fn(struct cls_struct_9byte b1,\n   return result;\n }\n \n-static void cls_struct_9byte_gn(ffi_cif* cif, void* resp, void** args,\n-\t\t\t\tvoid* userdata)\n+static void cls_struct_9byte_gn(ffi_cif* cif __UNUSED__, void* resp,\n+\t\t\t\tvoid** args, void* userdata __UNUSED__)\n {\n   struct cls_struct_9byte b1, b2;\n "}, {"sha": "f293d55a97d1f9f0a7b6556332384ab10bf020ea", "filename": "libffi/testsuite/libffi.call/cls_align_double.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_align_double.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_align_double.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fcls_align_double.c?ref=9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669", "patch": "@@ -28,7 +28,8 @@ cls_struct_align cls_struct_align_fn(struct cls_struct_align a1,\n }\n \n static void\n-cls_struct_align_gn(ffi_cif* cif, void* resp, void** args, void* userdata)\n+cls_struct_align_gn(ffi_cif* cif __UNUSED__, void* resp, void** args,\n+\t\t    void* userdata __UNUSED__)\n {\n \n   struct cls_struct_align a1, a2;"}, {"sha": "37556c8ccd07afbba289db9df4b32548fae0145f", "filename": "libffi/testsuite/libffi.call/cls_align_float.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_align_float.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_align_float.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fcls_align_float.c?ref=9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669", "patch": "@@ -28,7 +28,8 @@ cls_struct_align cls_struct_align_fn(struct cls_struct_align a1,\n }\n \n static void\n-cls_struct_align_gn(ffi_cif* cif, void* resp, void** args, void* userdata)\n+cls_struct_align_gn(ffi_cif* cif __UNUSED__, void* resp, void** args,\n+\t\t    void* userdata __UNUSED__)\n {\n \n   struct cls_struct_align a1, a2;"}, {"sha": "506cfdafebad7bfa9cb14fbd45f65fcf089a2465", "filename": "libffi/testsuite/libffi.call/cls_align_longdouble.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_align_longdouble.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_align_longdouble.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fcls_align_longdouble.c?ref=9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669", "patch": "@@ -29,7 +29,8 @@ cls_struct_align cls_struct_align_fn(struct cls_struct_align a1,\n }\n \n static void\n-cls_struct_align_gn(ffi_cif* cif, void* resp, void** args, void* userdata)\n+cls_struct_align_gn(ffi_cif* cif __UNUSED__, void* resp, void** args,\n+\t\t    void* userdata __UNUSED__)\n {\n \n   struct cls_struct_align a1, a2;"}, {"sha": "50273d918ded608c439d7ed0864557874bc18df4", "filename": "libffi/testsuite/libffi.call/cls_align_pointer.c", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_align_pointer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_align_pointer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fcls_align_pointer.c?ref=9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669", "patch": "@@ -19,16 +19,19 @@ cls_struct_align cls_struct_align_fn(struct cls_struct_align a1,\n   struct cls_struct_align result;\n \n   result.a = a1.a + a2.a;\n-  result.b = (void *)((size_t)a1.b + (size_t)a2.b);\n+  result.b = (void *)((unsigned long)a1.b + (unsigned long)a2.b);\n   result.c = a1.c + a2.c;\n \n-  printf(\"%d %d %d %d %d %d: %d %d %d\\n\", a1.a, (size_t)a1.b, a1.c, a2.a, (size_t)a2.b, a2.c, result.a, (size_t)result.b, result.c);\n+  printf(\"%d %lu %d %d %lu %d: %d %lu %d\\n\", a1.a, (unsigned long)a1.b, a1.c,\n+\t a2.a, (unsigned long)a2.b, a2.c, result.a, (unsigned long)result.b,\n+\t result.c);\n \n-  return  result;\n+  return result;\n }\n \n static void\n-cls_struct_align_gn(ffi_cif* cif, void* resp, void** args, void* userdata)\n+cls_struct_align_gn(ffi_cif* cif __UNUSED__, void* resp, void** args,\n+\t\t    void* userdata __UNUSED__)\n {\n \n   struct cls_struct_align a1, a2;\n@@ -84,14 +87,14 @@ int main (void)\n \n   ffi_call(&cif, FFI_FN(cls_struct_align_fn), &res_dbl, args_dbl);\n   /* { dg-output \"12 4951 127 1 9320 13: 13 14271 140\" } */\n-  printf(\"res: %d %d %d\\n\", res_dbl.a, (size_t)res_dbl.b, res_dbl.c);\n+  printf(\"res: %d %lu %d\\n\", res_dbl.a, (unsigned long)res_dbl.b, res_dbl.c);\n   /* { dg-output \"\\nres: 13 14271 140\" } */\n \n   CHECK(ffi_prep_closure(pcl, &cif, cls_struct_align_gn, NULL) == FFI_OK);\n \n   res_dbl = ((cls_struct_align(*)(cls_struct_align, cls_struct_align))(pcl))(g_dbl, f_dbl);\n   /* { dg-output \"\\n12 4951 127 1 9320 13: 13 14271 140\" } */\n-  printf(\"res: %d %d %d\\n\", res_dbl.a, (size_t)res_dbl.b, res_dbl.c);\n+  printf(\"res: %d %lu %d\\n\", res_dbl.a, (unsigned long)res_dbl.b, res_dbl.c);\n   /* { dg-output \"\\nres: 13 14271 140\" } */\n \n   exit(0);"}, {"sha": "b71eb3fbe8bf1730b52dbd0a51dae7f974275fe5", "filename": "libffi/testsuite/libffi.call/cls_align_sint16.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_align_sint16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_align_sint16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fcls_align_sint16.c?ref=9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669", "patch": "@@ -28,7 +28,8 @@ cls_struct_align cls_struct_align_fn(struct cls_struct_align a1,\n }\n \n static void\n-cls_struct_align_gn(ffi_cif* cif, void* resp, void** args, void* userdata)\n+cls_struct_align_gn(ffi_cif* cif __UNUSED__, void* resp, void** args,\n+\t\t    void* userdata __UNUSED__)\n {\n \n   struct cls_struct_align a1, a2;"}, {"sha": "c28a9d220124ab71616cc1cd96a211fd11ed261d", "filename": "libffi/testsuite/libffi.call/cls_align_sint32.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_align_sint32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_align_sint32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fcls_align_sint32.c?ref=9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669", "patch": "@@ -28,7 +28,8 @@ cls_struct_align cls_struct_align_fn(struct cls_struct_align a1,\n }\n \n static void\n-cls_struct_align_gn(ffi_cif* cif, void* resp, void** args, void* userdata)\n+cls_struct_align_gn(ffi_cif* cif __UNUSED__, void* resp, void** args,\n+\t\t    void* userdata __UNUSED__)\n {\n \n   struct cls_struct_align a1, a2;"}, {"sha": "e629610a998b9947321d3762e64c583525c12f9c", "filename": "libffi/testsuite/libffi.call/cls_align_sint64.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_align_sint64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_align_sint64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fcls_align_sint64.c?ref=9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669", "patch": "@@ -28,7 +28,8 @@ cls_struct_align cls_struct_align_fn(struct cls_struct_align a1,\n }\n \n static void\n-cls_struct_align_gn(ffi_cif* cif, void* resp, void** args, void* userdata)\n+cls_struct_align_gn(ffi_cif* cif __UNUSED__, void* resp, void** args,\n+\t\t    void* userdata __UNUSED__)\n {\n \n   struct cls_struct_align a1, a2;"}, {"sha": "e467e372f52cb222f62869b3d8b9582445445d4c", "filename": "libffi/testsuite/libffi.call/cls_align_uint16.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_align_uint16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_align_uint16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fcls_align_uint16.c?ref=9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669", "patch": "@@ -28,7 +28,8 @@ cls_struct_align cls_struct_align_fn(struct cls_struct_align a1,\n }\n \n static void\n-cls_struct_align_gn(ffi_cif* cif, void* resp, void** args, void* userdata)\n+cls_struct_align_gn(ffi_cif* cif __UNUSED__, void* resp, void** args,\n+\t\t    void* userdata __UNUSED__)\n {\n \n   struct cls_struct_align a1, a2;"}, {"sha": "bdee6748ab5f9f6d396761774e718dd31b0f199c", "filename": "libffi/testsuite/libffi.call/cls_align_uint32.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_align_uint32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_align_uint32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fcls_align_uint32.c?ref=9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669", "patch": "@@ -28,7 +28,8 @@ cls_struct_align cls_struct_align_fn(struct cls_struct_align a1,\n }\n \n static void\n-cls_struct_align_gn(ffi_cif* cif, void* resp, void** args, void* userdata)\n+cls_struct_align_gn(ffi_cif* cif __UNUSED__, void* resp, void** args,\n+\t\t    void* userdata __UNUSED__)\n {\n \n   struct cls_struct_align a1, a2;"}, {"sha": "42444a0af6a6b6ae74e98ebb3c087bd4e8565dd4", "filename": "libffi/testsuite/libffi.call/cls_double.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_double.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_double.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fcls_double.c?ref=9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669", "patch": "@@ -7,8 +7,8 @@\n /* { dg-do run { xfail mips64*-*-* arm*-*-* strongarm*-*-* xscale*-*-* } } */\n #include \"ffitest.h\"\n \n-static void cls_ret_double_fn(ffi_cif* cif,void* resp,void** args,\n-\t\t\t     void* userdata)\n+static void cls_ret_double_fn(ffi_cif* cif __UNUSED__, void* resp, void** args,\n+\t\t\t      void* userdata __UNUSED__)\n  {\n    *(double *)resp = *(double *)args[0];\n "}, {"sha": "504e7998e0ab181df550cd80ee880141bbd72730", "filename": "libffi/testsuite/libffi.call/cls_float.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_float.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_float.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fcls_float.c?ref=9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669", "patch": "@@ -7,8 +7,8 @@\n /* { dg-do run { xfail mips64*-*-* arm*-*-* strongarm*-*-* xscale*-*-* } } */\n #include \"ffitest.h\"\n \n-static void cls_ret_float_fn(ffi_cif* cif,void* resp,void** args,\n-\t\t\t     void* userdata)\n+static void cls_ret_float_fn(ffi_cif* cif __UNUSED__, void* resp, void** args,\n+\t\t\t     void* userdata __UNUSED__)\n  {\n    *(float *)resp = *(float *)args[0];\n "}, {"sha": "0ccb3803b4fe57ba0533f06844697efdff8ef929", "filename": "libffi/testsuite/libffi.call/cls_multi_schar.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_multi_schar.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_multi_schar.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fcls_multi_schar.c?ref=9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669", "patch": "@@ -19,7 +19,8 @@ signed char test_func_fn(signed char a1, signed char a2)\n \n }\n \n-static void test_func_gn(ffi_cif *cif, void *rval, void **avals, void *data)\n+static void test_func_gn(ffi_cif *cif __UNUSED__, void *rval, void **avals,\n+\t\t\t void *data __UNUSED__)\n {\n   signed char a1, a2;\n \n@@ -67,7 +68,7 @@ int main (void)\n \n   ffi_call(&cif, FFI_FN(test_func_fn), &res_call, args_dbl);\n   /* { dg-output \"2 125: 127\" } */\n-  printf(\"res: %d\\n\", res_call);\n+  printf(\"res: %d\\n\", (signed char)res_call);\n   /* { dg-output \"\\nres: 127\" } */\n \n   CHECK(ffi_prep_closure(pcl, &cif, test_func_gn, NULL)  == FFI_OK);"}, {"sha": "97598548e38c1754a80165e0377c021ca4ad6b8d", "filename": "libffi/testsuite/libffi.call/cls_multi_sshort.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_multi_sshort.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_multi_sshort.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fcls_multi_sshort.c?ref=9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669", "patch": "@@ -19,7 +19,8 @@ signed short test_func_fn(signed short a1, signed short a2)\n \n }\n \n-static void test_func_gn(ffi_cif *cif, void *rval, void **avals, void *data)\n+static void test_func_gn(ffi_cif *cif __UNUSED__, void *rval, void **avals,\n+\t\t\t void *data __UNUSED__)\n {\n   signed short a1, a2;\n \n@@ -67,7 +68,7 @@ int main (void)\n \n   ffi_call(&cif, FFI_FN(test_func_fn), &res_call, args_dbl);\n   /* { dg-output \"2 32765: 32767\" } */\n-  printf(\"res: %d\\n\", res_call);\n+  printf(\"res: %d\\n\", (unsigned short)res_call);\n   /* { dg-output \"\\nres: 32767\" } */\n \n   CHECK(ffi_prep_closure(pcl, &cif, test_func_gn, NULL)  == FFI_OK);"}, {"sha": "efd109f032c62d324d5fb8acdb919d35a72f9de2", "filename": "libffi/testsuite/libffi.call/cls_multi_sshortchar.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_multi_sshortchar.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_multi_sshortchar.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fcls_multi_sshortchar.c?ref=9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669", "patch": "@@ -20,7 +20,8 @@ signed short test_func_fn(signed char a1, signed short a2,\n \n }\n \n-static void test_func_gn(ffi_cif *cif, void *rval, void **avals, void *data)\n+static void test_func_gn(ffi_cif *cif __UNUSED__, void *rval, void **avals,\n+\t\t\t void *data __UNUSED__)\n {\n   signed char a1, a3;\n   signed short a2, a4;\n@@ -79,7 +80,7 @@ int main (void)\n \n   ffi_call(&cif, FFI_FN(test_func_fn), &res_call, args_dbl);\n   /* { dg-output \"1 32765 127 -128: 32765\" } */\n-  printf(\"res: %d\\n\", res_call);\n+  printf(\"res: %d\\n\", (signed short)res_call);\n   /* { dg-output \"\\nres: 32765\" } */\n \n   CHECK(ffi_prep_closure(pcl, &cif, test_func_gn, NULL)  == FFI_OK);"}, {"sha": "855ea9cd5b86520f4b01f75ce8462f1e7b5fcfcd", "filename": "libffi/testsuite/libffi.call/cls_multi_uchar.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_multi_uchar.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_multi_uchar.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fcls_multi_uchar.c?ref=9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669", "patch": "@@ -20,7 +20,8 @@ unsigned char test_func_fn(unsigned char a1, unsigned char a2,\n \n }\n \n-static void test_func_gn(ffi_cif *cif, void *rval, void **avals, void *data)\n+static void test_func_gn(ffi_cif *cif __UNUSED__, void *rval, void **avals,\n+\t\t\t void *data __UNUSED__)\n {\n   unsigned char a1, a2, a3, a4;\n \n@@ -35,7 +36,9 @@ static void test_func_gn(ffi_cif *cif, void *rval, void **avals, void *data)\n \n typedef unsigned char (*test_type)(unsigned char, unsigned char,\n \t\t\t\t   unsigned char, unsigned char);\n-void test_func(ffi_cif *cif, void *rval, void **avals, void *data)\n+\n+void test_func(ffi_cif *cif __UNUSED__, void *rval __UNUSED__, void **avals,\n+\t       void *data __UNUSED__)\n {\n   printf(\"%d %d %d %d\\n\", *(unsigned char *)avals[0],\n \t *(unsigned char *)avals[1], *(unsigned char *)avals[2],\n@@ -82,7 +85,7 @@ int main (void)\n \n   ffi_call(&cif, FFI_FN(test_func_fn), &res_call, args_dbl);\n   /* { dg-output \"1 2 127 125: 255\" } */\n-  printf(\"res: %d\\n\", res_call);\n+  printf(\"res: %d\\n\", (unsigned char)res_call);\n   /* { dg-output \"\\nres: 255\" } */\n \n   CHECK(ffi_prep_closure(pcl, &cif, test_func_gn, NULL)  == FFI_OK);"}, {"sha": "e8bcf846ef61eebfb5bc3313abef447a92c047fa", "filename": "libffi/testsuite/libffi.call/cls_multi_ushort.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_multi_ushort.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_multi_ushort.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fcls_multi_ushort.c?ref=9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669", "patch": "@@ -19,7 +19,8 @@ unsigned short test_func_fn(unsigned short a1, unsigned short a2)\n \n }\n \n-static void test_func_gn(ffi_cif *cif, void *rval, void **avals, void *data)\n+static void test_func_gn(ffi_cif *cif __UNUSED__, void *rval, void **avals,\n+\t\t\t void *data __UNUSED__)\n {\n   unsigned short a1, a2;\n \n@@ -67,7 +68,7 @@ int main (void)\n \n   ffi_call(&cif, FFI_FN(test_func_fn), &res_call, args_dbl);\n   /* { dg-output \"2 32765: 32767\" } */\n-  printf(\"res: %d\\n\", res_call);\n+  printf(\"res: %d\\n\", (unsigned short)res_call);\n   /* { dg-output \"\\nres: 32767\" } */\n \n   CHECK(ffi_prep_closure(pcl, &cif, test_func_gn, NULL)  == FFI_OK);"}, {"sha": "463038da70acced20a1e56ca62ed8228fec99408", "filename": "libffi/testsuite/libffi.call/cls_multi_ushortchar.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_multi_ushortchar.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_multi_ushortchar.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fcls_multi_ushortchar.c?ref=9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669", "patch": "@@ -20,7 +20,8 @@ unsigned short test_func_fn(unsigned char a1, unsigned short a2,\n \n }\n \n-static void test_func_gn(ffi_cif *cif, void *rval, void **avals, void *data)\n+static void test_func_gn(ffi_cif *cif __UNUSED__, void *rval, void **avals,\n+\t\t\t void *data __UNUSED__)\n {\n   unsigned char a1, a3;\n   unsigned short a2, a4;\n@@ -79,7 +80,7 @@ int main (void)\n \n   ffi_call(&cif, FFI_FN(test_func_fn), &res_call, args_dbl);\n   /* { dg-output \"1 2 127 128: 258\" } */\n-  printf(\"res: %d\\n\", res_call);\n+  printf(\"res: %d\\n\", (unsigned short)res_call);\n   /* { dg-output \"\\nres: 258\" } */\n \n   CHECK(ffi_prep_closure(pcl, &cif, test_func_gn, NULL)  == FFI_OK);"}, {"sha": "beceb740ee656a3efec995cdd77f0343f830e0a2", "filename": "libffi/testsuite/libffi.call/cls_schar.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_schar.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_schar.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fcls_schar.c?ref=9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669", "patch": "@@ -7,12 +7,12 @@\n /* { dg-do run { xfail mips64*-*-* arm*-*-* strongarm*-*-* xscale*-*-* } } */\n #include \"ffitest.h\"\n \n-static void cls_ret_schar_fn(ffi_cif* cif,void* resp,void** args,\n-\t\t\t     void* userdata)\n+static void cls_ret_schar_fn(ffi_cif* cif __UNUSED__, void* resp, void** args,\n+\t\t\t     void* userdata __UNUSED__)\n {\n   *(ffi_arg*)resp = *(signed char *)args[0];\n   printf(\"%d: %d\\n\",*(signed char *)args[0],\n-\t *(ffi_arg*)resp);\n+\t (int)*(ffi_arg *)(resp));\n }\n typedef signed char (*cls_ret_schar)(signed char);\n "}, {"sha": "462d395cc6885117f21662134a5418b221d524a5", "filename": "libffi/testsuite/libffi.call/cls_sint.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_sint.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_sint.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fcls_sint.c?ref=9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669", "patch": "@@ -7,12 +7,12 @@\n /* { dg-do run { xfail mips64*-*-* arm*-*-* strongarm*-*-* xscale*-*-* } } */\n #include \"ffitest.h\"\n \n-static void cls_ret_sint_fn(ffi_cif* cif,void* resp,void** args,\n-\t\t\t     void* userdata)\n+static void cls_ret_sint_fn(ffi_cif* cif __UNUSED__, void* resp, void** args,\n+\t\t\t    void* userdata __UNUSED__)\n {\n   *(ffi_arg*)resp = *(signed int *)args[0];\n   printf(\"%d: %d\\n\",*(signed int *)args[0],\n-\t *(ffi_arg*)resp);\n+\t (int)*(ffi_arg *)(resp));\n }\n typedef signed int (*cls_ret_sint)(signed int);\n "}, {"sha": "e676c26da9888b97be7606f4551cb4c87898d6ba", "filename": "libffi/testsuite/libffi.call/cls_sshort.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_sshort.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_sshort.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fcls_sshort.c?ref=9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669", "patch": "@@ -7,12 +7,12 @@\n /* { dg-do run { xfail mips64*-*-* arm*-*-* strongarm*-*-* xscale*-*-* } } */\n #include \"ffitest.h\"\n \n-static void cls_ret_sshort_fn(ffi_cif* cif,void* resp,void** args,\n-\t\t\t     void* userdata)\n+static void cls_ret_sshort_fn(ffi_cif* cif __UNUSED__, void* resp, void** args,\n+\t\t\t      void* userdata __UNUSED__)\n {\n   *(ffi_arg*)resp = *(signed short *)args[0];\n   printf(\"%d: %d\\n\",*(signed short *)args[0],\n-\t *(ffi_arg*)resp);\n+\t (int)*(ffi_arg *)(resp));\n }\n typedef signed short (*cls_ret_sshort)(signed short);\n "}, {"sha": "d35cd094ce587a4de8e9dd427b2076f499e73a17", "filename": "libffi/testsuite/libffi.call/cls_uchar.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_uchar.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_uchar.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fcls_uchar.c?ref=9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669", "patch": "@@ -7,12 +7,12 @@\n /* { dg-do run { xfail mips64*-*-* arm*-*-* strongarm*-*-* xscale*-*-* } } */\n #include \"ffitest.h\"\n \n-static void cls_ret_uchar_fn(ffi_cif* cif,void* resp,void** args,\n-\t\t\t     void* userdata)\n+static void cls_ret_uchar_fn(ffi_cif* cif __UNUSED__, void* resp, void** args,\n+\t\t\t     void* userdata __UNUSED__)\n {\n   *(ffi_arg*)resp = *(unsigned char *)args[0];\n   printf(\"%d: %d\\n\",*(unsigned char *)args[0],\n-\t *(ffi_arg*)resp);\n+\t (int)*(ffi_arg *)(resp));\n }\n typedef unsigned char (*cls_ret_uchar)(unsigned char);\n "}, {"sha": "25dfedf9b5a6a86dd425cda495f2b13bcc39cf96", "filename": "libffi/testsuite/libffi.call/cls_uint.c", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_uint.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_uint.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fcls_uint.c?ref=9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669", "patch": "@@ -7,14 +7,14 @@\n /* { dg-do run { xfail mips64*-*-* arm*-*-* strongarm*-*-* xscale*-*-* } } */\n #include \"ffitest.h\"\n \n-static void cls_ret_uint_fn(ffi_cif* cif,void* resp,void** args,\n-\t\t\t     void* userdata)\n- {\n-   *(ffi_arg *)resp = *(unsigned int *)args[0];\n-\n-   printf(\"%d: %d\\n\",*(unsigned int *)args[0],\n-\t  *(ffi_arg *)resp);\n- }\n+static void cls_ret_uint_fn(ffi_cif* cif __UNUSED__, void* resp, void** args,\n+\t\t\t    void* userdata __UNUSED__)\n+{\n+  *(ffi_arg *)resp = *(unsigned int *)args[0];\n+\n+  printf(\"%d: %d\\n\",*(unsigned int *)args[0],\n+\t (int)*(ffi_arg *)(resp));\n+}\n typedef unsigned int (*cls_ret_uint)(unsigned int);\n \n int main (void)"}, {"sha": "f7014b7700ea0e2461b8ca0ef90716b8bfb30132", "filename": "libffi/testsuite/libffi.call/cls_ulonglong.c", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_ulonglong.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_ulonglong.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fcls_ulonglong.c?ref=9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669", "patch": "@@ -7,14 +7,14 @@\n /* { dg-do run { xfail mips64*-*-* arm*-*-* strongarm*-*-* xscale*-*-* } } */\n #include \"ffitest.h\"\n \n-static void cls_ret_ulonglong_fn(ffi_cif* cif,void* resp,void** args,\n-\t\t\t     void* userdata)\n- {\n-   *(unsigned long long *)resp=  *(unsigned long long *)args[0];\n-\n-   printf(\"%llu: %llu\\n\",*(unsigned long long *)args[0],\n-\t  *(unsigned long long *)resp);\n- }\n+static void cls_ret_ulonglong_fn(ffi_cif* cif __UNUSED__, void* resp,\n+\t\t\t\t void** args, void* userdata __UNUSED__)\n+{\n+  *(unsigned long long *)resp=  *(unsigned long long *)args[0];\n+\n+  printf(\"%llu: %llu\\n\",*(unsigned long long *)args[0],\n+\t *(unsigned long long *)(resp));\n+}\n typedef unsigned long long (*cls_ret_ulonglong)(unsigned long long);\n \n int main (void)"}, {"sha": "0ddfa1222d87fd397dc5c4dc327ad123d0a3642a", "filename": "libffi/testsuite/libffi.call/cls_ushort.c", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_ushort.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fcls_ushort.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fcls_ushort.c?ref=9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669", "patch": "@@ -7,14 +7,14 @@\n /* { dg-do run { xfail mips64*-*-* arm*-*-* strongarm*-*-* xscale*-*-* } } */\n #include \"ffitest.h\"\n \n-static void cls_ret_ushort_fn(ffi_cif* cif,void* resp,void** args,\n-\t\t\t     void* userdata)\n- {\n-   *(ffi_arg*)resp = *(unsigned short *)args[0];\n-\n-   printf(\"%d: %d\\n\",*(unsigned short *)args[0],\n-\t  *(ffi_arg*)resp);\n- }\n+static void cls_ret_ushort_fn(ffi_cif* cif __UNUSED__, void* resp, void** args,\n+\t\t\t      void* userdata __UNUSED__)\n+{\n+  *(ffi_arg*)resp = *(unsigned short *)args[0];\n+\n+  printf(\"%d: %d\\n\",*(unsigned short *)args[0],\n+\t (int)*(ffi_arg *)(resp));\n+}\n typedef unsigned short (*cls_ret_ushort)(unsigned short);\n \n int main (void)"}, {"sha": "42fce0489f197913c90edc1eb252043f8dcdd015", "filename": "libffi/testsuite/libffi.call/ffitest.h", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fffitest.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fffitest.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fffitest.h?ref=9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669", "patch": "@@ -20,6 +20,14 @@\n #endif\n #endif\n \n+/* Define __UNUSED__ that also other compilers than gcc can run the tests.  */\n+#undef __UNUSED__\n+#if defined(__GNUC__)\n+#define __UNUSED__ __attribute__((__unused__))\n+#else\n+#define __UNUSED__\n+#endif\n+\n /* Prefer MAP_ANON(YMOUS) to /dev/zero, since we don't need to keep a\n    file open.  */\n #ifdef HAVE_MMAP_ANON"}, {"sha": "fbc272d84f1fa894f0c26e8765ed9c109f7dacff", "filename": "libffi/testsuite/libffi.call/float.c", "status": "modified", "additions": 5, "deletions": 9, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Ffloat.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Ffloat.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Ffloat.c?ref=9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669", "patch": "@@ -8,7 +8,7 @@\n \n #include \"ffitest.h\"\n \n-static int floating(int a, float b, double c, long double d, int e)\n+static int floating(int a, float b, double c, long double d)\n {\n   int i;\n \n@@ -28,7 +28,6 @@ int main (void)\n   signed int si1;\n   double d;\n   long double ld;\n-  signed int si2;\n \n   args[0] = &ffi_type_sint;\n   values[0] = &si1;\n@@ -38,26 +37,23 @@ int main (void)\n   values[2] = &d;\n   args[3] = &ffi_type_longdouble;\n   values[3] = &ld;\n-  args[4] = &ffi_type_sint;\n-  values[4] = &si2;\n \n   /* Initialize the cif */\n-  CHECK(ffi_prep_cif(&cif, FFI_DEFAULT_ABI, 5,\n+  CHECK(ffi_prep_cif(&cif, FFI_DEFAULT_ABI, 4,\n \t\t     &ffi_type_sint, args) == FFI_OK);\n \n   si1 = 6;\n   f = 3.14159;\n   d = (double)1.0/(double)3.0;\n   ld = 2.71828182846L;\n-  si2 = 10;\n \n-  floating (si1, f, d, ld, si2);\n+  floating (si1, f, d, ld);\n \n   ffi_call(&cif, FFI_FN(floating), &rint, values);\n \n-  printf (\"%d vs %d\\n\", (int)rint, floating (si1, f, d, ld, si2));\n+  printf (\"%d vs %d\\n\", (int)rint, floating (si1, f, d, ld));\n \n-  CHECK(rint == floating(si1, f, d, ld, si2));\n+  CHECK((int)rint == floating(si1, f, d, ld));\n \n   exit (0);\n }"}, {"sha": "991d059fe405171348bb5823492b114853813030", "filename": "libffi/testsuite/libffi.call/float1.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Ffloat1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Ffloat1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Ffloat1.c?ref=9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669", "patch": "@@ -28,25 +28,25 @@ int main (void)\n   void *values[MAX_ARGS];\n   float f;\n   value_type result[2];\n-  int i;\n+  unsigned int i;\n \n   args[0] = &ffi_type_float;\n   values[0] = &f;\n-  \n+\n   /* Initialize the cif */\n-  CHECK(ffi_prep_cif(&cif, FFI_DEFAULT_ABI, 1, \n+  CHECK(ffi_prep_cif(&cif, FFI_DEFAULT_ABI, 1,\n \t\t     &ffi_type_double, args) == FFI_OK);\n-  \n+\n   f = 3.14159;\n-  \n+\n   /* Put a canary in the return array.  This is a regression test for\n      a buffer overrun.  */\n   memset(result[1].c, CANARY, sizeof (double));\n \n   ffi_call(&cif, FFI_FN(dblit), &result[0].d, values);\n-  \n+\n   /* These are not always the same!! Check for a reasonable delta */\n- \n+\n   CHECK(result[0].d - dblit(f) < DBL_EPSILON);\n \n   /* Check the canary.  */"}, {"sha": "3168113027db434c883a2055ac7ee7ee32748d0a", "filename": "libffi/testsuite/libffi.call/negint.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fnegint.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fnegint.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fnegint.c?ref=9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669", "patch": "@@ -11,7 +11,6 @@\n \n static int checking(int a, short b, signed char c)\n {\n-  int i;\n \n   return (a < 0 && b < 0 && c < 0);\n }"}, {"sha": "8b5b6a733a9525f39e6a74d8a2aac4b1e97a851b", "filename": "libffi/testsuite/libffi.call/nested_struct.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fnested_struct.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fnested_struct.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fnested_struct.c?ref=9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669", "patch": "@@ -50,7 +50,8 @@ cls_struct_combined cls_struct_combined_fn(struct cls_struct_16byte1 b0,\n }\n \n static void\n-cls_struct_combined_gn(ffi_cif* cif, void* resp, void** args, void* userdata)\n+cls_struct_combined_gn(ffi_cif* cif __UNUSED__, void* resp, void** args,\n+\t\t       void* userdata __UNUSED__)\n {\n   struct cls_struct_16byte1 b0;\n   struct cls_struct_16byte2 b1;"}, {"sha": "29bd4405ca4c229765138b83384cb801a619c373", "filename": "libffi/testsuite/libffi.call/nested_struct1.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fnested_struct1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fnested_struct1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fnested_struct1.c?ref=9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669", "patch": "@@ -52,7 +52,8 @@ cls_struct_combined cls_struct_combined_fn(struct cls_struct_16byte1 b0,\n }\n \n static void\n-cls_struct_combined_gn(ffi_cif* cif, void* resp, void** args, void* userdata)\n+cls_struct_combined_gn(ffi_cif* cif __UNUSED__, void* resp, void** args,\n+\t\t       void* userdata __UNUSED__)\n {\n   struct cls_struct_16byte1 b0;\n   struct cls_struct_16byte2 b1;"}, {"sha": "a9f5974a089e27cc7098f21d8533451214d4acbf", "filename": "libffi/testsuite/libffi.call/nested_struct10.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fnested_struct10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fnested_struct10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fnested_struct10.c?ref=9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669", "patch": "@@ -41,8 +41,8 @@ static B B_fn(struct A b2, struct B b3, struct C b4)\n }\n \n static void\n-B_gn(ffi_cif* cif __attribute__((unused)), void* resp, void** args,\n-     void* userdata __attribute__((unused)))\n+B_gn(ffi_cif* cif __UNUSED__, void* resp, void** args,\n+     void* userdata __UNUSED__)\n {\n   struct A b0;\n   struct B b1;"}, {"sha": "a57d799e245968b29493829a072b94127820a115", "filename": "libffi/testsuite/libffi.call/nested_struct2.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fnested_struct2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fnested_struct2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fnested_struct2.c?ref=9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669", "patch": "@@ -27,14 +27,15 @@ B B_fn(struct A b0, struct B b1)\n   result.x.b = b0.b + b1.x.b + b1.y;\n   result.y = b0.b + b1.x.b;\n \n-  printf(\"%d %d %d %d %d: %d %d %d\\n\", b0.a, b0.b, b1.x.a, b1.x.b, b1.y,\n+  printf(\"%lu %d %lu %d %d: %lu %d %d\\n\", b0.a, b0.b, b1.x.a, b1.x.b, b1.y,\n \t result.x.a, result.x.b, result.y);\n \n   return result;\n }\n \n static void\n-B_gn(ffi_cif* cif, void* resp, void** args, void* userdata)\n+B_gn(ffi_cif* cif __UNUSED__, void* resp, void** args,\n+     void* userdata __UNUSED__)\n {\n   struct A b0;\n   struct B b1;"}, {"sha": "1362f833b4ba91e11a28ff559ea167469f56c6b9", "filename": "libffi/testsuite/libffi.call/nested_struct3.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fnested_struct3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fnested_struct3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fnested_struct3.c?ref=9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669", "patch": "@@ -35,7 +35,8 @@ B B_fn(struct A b0, struct B b1)\n }\n \n static void\n-B_gn(ffi_cif* cif, void* resp, void** args, void* userdata)\n+B_gn(ffi_cif* cif __UNUSED__, void* resp, void** args,\n+     void* userdata __UNUSED__)\n {\n   struct A b0;\n   struct B b1;"}, {"sha": "d7abf69c126074448c4284d44841e93d1ce0183f", "filename": "libffi/testsuite/libffi.call/nested_struct4.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fnested_struct4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fnested_struct4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fnested_struct4.c?ref=9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669", "patch": "@@ -3,7 +3,7 @@\n \t\tContains structs as parameter of the struct itself.\n \t\tSample taken from Alan Modras patch to src/prep_cif.c.\n    Limitations:\tnone.\n-   PR:\t\tnone.\n+   PR:\t\tPR 25630.\n    Originator:\t<andreast@gcc.gnu.org> 20051010\t */\n \n /* { dg-do run { xfail mips64*-*-* arm*-*-* strongarm*-*-* xscale*-*-* powerpc*-*-darwin* } } */\n@@ -35,8 +35,8 @@ static B B_fn(struct A b2, struct B b3)\n }\n \n static void\n-B_gn(ffi_cif* cif __attribute__((unused)), void* resp, void** args,\n-     void* userdata __attribute__((unused)))\n+B_gn(ffi_cif* cif __UNUSED__, void* resp, void** args,\n+     void* userdata __UNUSED__)\n {\n   struct A b0;\n   struct B b1;"}, {"sha": "07821b4a68487958321ea08b1f22f27583c47aaa", "filename": "libffi/testsuite/libffi.call/nested_struct5.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fnested_struct5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fnested_struct5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fnested_struct5.c?ref=9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669", "patch": "@@ -35,8 +35,8 @@ static B B_fn(struct A b2, struct B b3)\n }\n \n static void\n-B_gn(ffi_cif* cif __attribute__((unused)), void* resp, void** args,\n-     void* userdata __attribute__((unused)))\n+B_gn(ffi_cif* cif __UNUSED__, void* resp, void** args,\n+     void* userdata __UNUSED__)\n {\n   struct A b0;\n   struct B b1;"}, {"sha": "116254708ada7a8a2dcf897289400fa02132133b", "filename": "libffi/testsuite/libffi.call/nested_struct6.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fnested_struct6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fnested_struct6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fnested_struct6.c?ref=9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669", "patch": "@@ -3,7 +3,7 @@\n \t\tContains structs as parameter of the struct itself.\n \t\tSample taken from Alan Modras patch to src/prep_cif.c.\n    Limitations:\tnone.\n-   PR:\t\tnone.\n+   PR:\t\tPR 25630.\n    Originator:\t<andreast@gcc.gnu.org> 20051010\t */\n \n /* { dg-do run { xfail mips64*-*-* arm*-*-* strongarm*-*-* xscale*-*-* powerpc*-*-darwin* } } */\n@@ -40,8 +40,8 @@ static B B_fn(struct A b2, struct B b3, struct C b4)\n }\n \n static void\n-B_gn(ffi_cif* cif __attribute__((unused)), void* resp, void** args,\n-     void* userdata __attribute__((unused)))\n+B_gn(ffi_cif* cif __UNUSED__, void* resp, void** args,\n+     void* userdata __UNUSED__)\n {\n   struct A b0;\n   struct B b1;"}, {"sha": "6e7de9ea10c3e4df8ad7820ebb63b1d4f242a114", "filename": "libffi/testsuite/libffi.call/nested_struct7.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fnested_struct7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fnested_struct7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fnested_struct7.c?ref=9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669", "patch": "@@ -35,8 +35,8 @@ static B B_fn(struct A b2, struct B b3)\n }\n \n static void\n-B_gn(ffi_cif* cif __attribute__((unused)), void* resp, void** args,\n-     void* userdata __attribute__((unused)))\n+B_gn(ffi_cif* cif __UNUSED__, void* resp, void** args,\n+     void* userdata __UNUSED__)\n {\n   struct A b0;\n   struct B b1;"}, {"sha": "1f745a0eace5f76846736d5e5464cb9ff74f1c57", "filename": "libffi/testsuite/libffi.call/nested_struct8.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fnested_struct8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fnested_struct8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fnested_struct8.c?ref=9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669", "patch": "@@ -40,8 +40,8 @@ static B B_fn(struct A b2, struct B b3, struct C b4)\n }\n \n static void\n-B_gn(ffi_cif* cif __attribute__((unused)), void* resp, void** args,\n-     void* userdata __attribute__((unused)))\n+B_gn(ffi_cif* cif __UNUSED__, void* resp, void** args,\n+     void* userdata __UNUSED__)\n {\n   struct A b0;\n   struct B b1;"}, {"sha": "94636b51266a1a52002a07745df6e414eec0379b", "filename": "libffi/testsuite/libffi.call/nested_struct9.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fnested_struct9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fnested_struct9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fnested_struct9.c?ref=9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669", "patch": "@@ -40,8 +40,8 @@ static B B_fn(struct A b2, struct B b3, struct C b4)\n }\n \n static void\n-B_gn(ffi_cif* cif __attribute__((unused)), void* resp, void** args,\n-     void* userdata __attribute__((unused)))\n+B_gn(ffi_cif* cif __UNUSED__, void* resp, void** args,\n+     void* userdata __UNUSED__)\n {\n   struct A b0;\n   struct B b1;"}, {"sha": "724ffad77fa8daef43331708b75e6cfd78aa3fd5", "filename": "libffi/testsuite/libffi.call/problem1.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fproblem1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fproblem1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fproblem1.c?ref=9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669", "patch": "@@ -27,7 +27,8 @@ my_ffi_struct callee(struct my_ffi_struct a1, struct my_ffi_struct a2)\n   return result;\n }\n \n-void stub(ffi_cif* cif, void* resp, void** args, void* userdata)\n+void stub(ffi_cif* cif __UNUSED__, void* resp, void** args,\n+\t  void* userdata __UNUSED__)\n {\n   struct my_ffi_struct a1;\n   struct my_ffi_struct a2;"}, {"sha": "e29bd6c28368f9c7d8dc6a83772273a7ce9b0482", "filename": "libffi/testsuite/libffi.call/pyobjc-tc.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fpyobjc-tc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Fpyobjc-tc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fpyobjc-tc.c?ref=9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669", "patch": "@@ -107,7 +107,7 @@ int main(void)\n \n \tffi_call(&cif, FFI_FN(doit), &result, values);\n \n-\tprintf (\"The result is %d\\n\", result);\n+\tprintf (\"The result is %d\\n\", (int)result);\n \n \t}\n \texit(0);"}, {"sha": "6df5b540985e81fc45d2579ef308aa52835ff241", "filename": "libffi/testsuite/libffi.call/return_fl2.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Freturn_fl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669/libffi%2Ftestsuite%2Flibffi.call%2Freturn_fl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Freturn_fl2.c?ref=9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669", "patch": "@@ -7,6 +7,9 @@\n /* { dg-do run } */\n #include \"ffitest.h\"\n \n+/* To avoid a false negative on ix86 do not declare the return_fl static.\n+   See PR323.\n+*/\n float return_fl(float fl1, float fl2, float fl3, float fl4)\n {\n   return fl1 + fl2 + fl3 + fl4;"}]}