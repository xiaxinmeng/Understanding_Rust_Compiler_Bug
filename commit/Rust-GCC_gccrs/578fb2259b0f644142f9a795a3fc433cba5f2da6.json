{"sha": "578fb2259b0f644142f9a795a3fc433cba5f2da6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTc4ZmIyMjU5YjBmNjQ0MTQyZjlhNzk1YTNmYzQzM2NiYTVmMmRhNg==", "commit": {"author": {"name": "Alexander Monakov", "email": "amonakov@ispras.ru", "date": "2016-02-02T18:24:25Z"}, "committer": {"name": "Alexander Monakov", "email": "amonakov@gcc.gnu.org", "date": "2016-02-02T18:24:25Z"}, "message": "nvptx: do not use alternative spelling of unsigned comparisons\n\ngcc/ChangeLog:\n\t* config/nvptx/nvptx.c (nvptx_print_operand): Treat LEU, GEU, LTU, GTU\n        like LE, GE, LT, GT when emitting relational operator.\n\ngcc/testsuite/ChangeLog:\n\t* gcc.target/nvptx/unsigned-cmp.c: New test.\n\nFrom-SVN: r233088", "tree": {"sha": "4b31fb4018f1c38c7ac6a75b0010d2607fbc265c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4b31fb4018f1c38c7ac6a75b0010d2607fbc265c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/578fb2259b0f644142f9a795a3fc433cba5f2da6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/578fb2259b0f644142f9a795a3fc433cba5f2da6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/578fb2259b0f644142f9a795a3fc433cba5f2da6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/578fb2259b0f644142f9a795a3fc433cba5f2da6/comments", "author": {"login": "amonakov", "id": 1997391, "node_id": "MDQ6VXNlcjE5OTczOTE=", "avatar_url": "https://avatars.githubusercontent.com/u/1997391?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amonakov", "html_url": "https://github.com/amonakov", "followers_url": "https://api.github.com/users/amonakov/followers", "following_url": "https://api.github.com/users/amonakov/following{/other_user}", "gists_url": "https://api.github.com/users/amonakov/gists{/gist_id}", "starred_url": "https://api.github.com/users/amonakov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amonakov/subscriptions", "organizations_url": "https://api.github.com/users/amonakov/orgs", "repos_url": "https://api.github.com/users/amonakov/repos", "events_url": "https://api.github.com/users/amonakov/events{/privacy}", "received_events_url": "https://api.github.com/users/amonakov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5854ee30ca7854754006da22380bec498e5c2d29", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5854ee30ca7854754006da22380bec498e5c2d29", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5854ee30ca7854754006da22380bec498e5c2d29"}], "stats": {"total": 75, "additions": 63, "deletions": 12}, "files": [{"sha": "e8338107f18cff315483afd72caf1556ce8a4a58", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/578fb2259b0f644142f9a795a3fc433cba5f2da6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/578fb2259b0f644142f9a795a3fc433cba5f2da6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=578fb2259b0f644142f9a795a3fc433cba5f2da6", "patch": "@@ -1,3 +1,8 @@\n+2016-02-02  Alexander Monakov  <amonakov@ispras.ru>\n+\n+\t* config/nvptx/nvptx.c (nvptx_print_operand): Treat LEU, GEU, LTU, GTU\n+\tlike LE, GE, LT, GT when emitting relational operator.\n+\n 2016-02-02  Wilco Dijkstra  <wdijkstr@arm.com>\n \n \t* ira-costs.c (find_costs_and_classes): Add extra argument."}, {"sha": "78614f8a2d77bb32561d47d43ffc7fb6c5b540c1", "filename": "gcc/config/nvptx/nvptx.c", "status": "modified", "additions": 4, "deletions": 12, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/578fb2259b0f644142f9a795a3fc433cba5f2da6/gcc%2Fconfig%2Fnvptx%2Fnvptx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/578fb2259b0f644142f9a795a3fc433cba5f2da6/gcc%2Fconfig%2Fnvptx%2Fnvptx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnvptx%2Fnvptx.c?ref=578fb2259b0f644142f9a795a3fc433cba5f2da6", "patch": "@@ -2031,28 +2031,20 @@ nvptx_print_operand (FILE *file, rtx x, int code)\n \t    fputs (\".ne\", file);\n \t  break;\n \tcase LE:\n+\tcase LEU:\n \t  fputs (\".le\", file);\n \t  break;\n \tcase GE:\n+\tcase GEU:\n \t  fputs (\".ge\", file);\n \t  break;\n \tcase LT:\n+\tcase LTU:\n \t  fputs (\".lt\", file);\n \t  break;\n \tcase GT:\n-\t  fputs (\".gt\", file);\n-\t  break;\n-\tcase LEU:\n-\t  fputs (\".ls\", file);\n-\t  break;\n-\tcase GEU:\n-\t  fputs (\".hs\", file);\n-\t  break;\n-\tcase LTU:\n-\t  fputs (\".lo\", file);\n-\t  break;\n \tcase GTU:\n-\t  fputs (\".hi\", file);\n+\t  fputs (\".gt\", file);\n \t  break;\n \tcase LTGT:\n \t  fputs (\".ne\", file);"}, {"sha": "6da1f381b6c236177b517f2be90e58adb5365445", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/578fb2259b0f644142f9a795a3fc433cba5f2da6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/578fb2259b0f644142f9a795a3fc433cba5f2da6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=578fb2259b0f644142f9a795a3fc433cba5f2da6", "patch": "@@ -1,3 +1,7 @@\n+2016-02-02  Alexander Monakov  <amonakov@ispras.ru>\n+\n+\t* gcc.target/nvptx/unsigned-cmp.c: New test.\n+\n 2016-02-02  Wilco Dijkstra  <wdijkstr@arm.com>\n \n \t* gcc.target/aarch64/scalar_shift_1.c"}, {"sha": "a0cf5c2d468033ce0081b653bc9539d8c9b69fa5", "filename": "gcc/testsuite/gcc.target/nvptx/unsigned-cmp.c", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/578fb2259b0f644142f9a795a3fc433cba5f2da6/gcc%2Ftestsuite%2Fgcc.target%2Fnvptx%2Funsigned-cmp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/578fb2259b0f644142f9a795a3fc433cba5f2da6/gcc%2Ftestsuite%2Fgcc.target%2Fnvptx%2Funsigned-cmp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fnvptx%2Funsigned-cmp.c?ref=578fb2259b0f644142f9a795a3fc433cba5f2da6", "patch": "@@ -0,0 +1,50 @@\n+/* { dg-options \"-O2\" } */\n+/* { dg-do run } */\n+\n+/* nvptx backend used to emit lo/ls/hs/hi suffixes on unsigned comparison\n+   insns instead of the more common lt/le/ge/gt, but ptxas and PTX JIT\n+   miscompile 'ls' and 'hi' under some circumstances, such as when the first\n+   source operand expands to a constant memory load, as demonstrated below.\n+   Reported as NVIDIA bug ID 1725195 (tracker is not public).  */\n+\n+/* Define this to observe PTX translation breakage.  */\n+//#define EMIT_BROKEN_ASM 1\n+\n+/* Or define this to get expected codegen.  */\n+//#define EMIT_WORKING_ASM 1\n+\n+static __attribute__((noinline,noclone)) int ls(unsigned a)\n+{\n+    unsigned v;\n+    /* %nctaid.x is always 1 in gcc testing.  */\n+    asm (\"mov.u32 %0, %%nctaid.x;\" : \"=r\"(v));\n+#if defined(EMIT_BROKEN_ASM)\n+    asm (\"set.u32.ls.u32 %0, %1, %0;\" : \"+r\"(a) : \"r\"(v));\n+#elif defined(EMIT_WORKING_ASM)\n+    asm (\"set.u32.le.u32 %0, %1, %0;\" : \"+r\"(a) : \"r\"(v));\n+#else\n+    a = v <= a ? -1 : 0;\n+#endif\n+    return a;\n+}\n+static __attribute__((noinline,noclone)) int hi(unsigned a)\n+{\n+    unsigned v;\n+    asm (\"mov.u32 %0, %%nctaid.x;\" : \"=r\"(v));\n+#if defined(EMIT_BROKEN_ASM)\n+    asm (\"set.u32.hi.u32 %0, %1, %0;\" : \"+r\"(a) : \"r\"(v));\n+#elif defined(EMIT_WORKING_ASM)\n+    asm (\"set.u32.gt.u32 %0, %1, %0;\" : \"+r\"(a) : \"r\"(v));\n+#else\n+    a = v > a ? -1 : 0;\n+#endif\n+    return a;\n+}\n+int main()\n+{\n+    int i;\n+    for (i=0; i<3; i++)\n+        if (ls(i) != -(1 <= i) || hi(i) != -(1 > i))\n+            __builtin_abort();\n+    return 0;\n+}"}]}