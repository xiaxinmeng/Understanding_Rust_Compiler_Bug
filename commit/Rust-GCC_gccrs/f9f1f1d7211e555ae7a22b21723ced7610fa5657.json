{"sha": "f9f1f1d7211e555ae7a22b21723ced7610fa5657", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjlmMWYxZDcyMTFlNTU1YWU3YTIyYjIxNzIzY2VkNzYxMGZhNTY1Nw==", "commit": {"author": {"name": "Marc Poulhi\u00e8s", "email": "dkm@kataplop.net", "date": "2021-03-16T17:22:31Z"}, "committer": {"name": "Philip Herron", "email": "herron.philip@googlemail.com", "date": "2021-03-27T18:02:51Z"}, "message": "Refactor DejaGNU testsuite\n\nUse more standard layout for DejaGNU testsuite.\n\n3 subdirectories are used for tests:\n- compile/*: tests are build using default torture options.\n- xfail_compile/*: tests are expected to fail early in the frontend and are only\nbuild once.\n- execute/*: tests are executed and exit status is checked.\n\nThe previous .exp files were copied from D tests and were expected to be used in\na different way not really applicable for the current Rust tests.\n\nFixes #281", "tree": {"sha": "791a87fb7b17613ab28a1995d0228b0dc9bc9c5e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/791a87fb7b17613ab28a1995d0228b0dc9bc9c5e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f9f1f1d7211e555ae7a22b21723ced7610fa5657", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9f1f1d7211e555ae7a22b21723ced7610fa5657", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f9f1f1d7211e555ae7a22b21723ced7610fa5657", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9f1f1d7211e555ae7a22b21723ced7610fa5657/comments", "author": {"login": "dkm", "id": 87603, "node_id": "MDQ6VXNlcjg3NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/87603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkm", "html_url": "https://github.com/dkm", "followers_url": "https://api.github.com/users/dkm/followers", "following_url": "https://api.github.com/users/dkm/following{/other_user}", "gists_url": "https://api.github.com/users/dkm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkm/subscriptions", "organizations_url": "https://api.github.com/users/dkm/orgs", "repos_url": "https://api.github.com/users/dkm/repos", "events_url": "https://api.github.com/users/dkm/events{/privacy}", "received_events_url": "https://api.github.com/users/dkm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8"}], "stats": {"total": 1152, "additions": 396, "deletions": 756}, "files": [{"sha": "ef9f51b4ee655e48005c4172fda365b204172387", "filename": "gcc/testsuite/lib/rust-dg.exp", "status": "modified", "additions": 2, "deletions": 59, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Flib%2Frust-dg.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Flib%2Frust-dg.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Frust-dg.exp?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "patch": "@@ -1,4 +1,4 @@\n-# Copyright (C) 2012-2019 Free Software Foundation, Inc.\n+# Copyright (C) 1997-2021 Free Software Foundation, Inc.\n \n # This program is free software; you can redistribute it and/or modify\n # it under the terms of the GNU General Public License as published by\n@@ -19,30 +19,7 @@ load_lib gcc-dg.exp\n # Define rust callbacks for dg.exp.\n \n proc rust-dg-test { prog do_what extra_tool_flags } {\n-    upvar dg-do-what dg-do-what\n-\n-    # Demote link and run tests to compile-only if D runtime is missing.\n-    if ![check_effective_target_d_runtime] {\n-\tswitch $do_what {\n-\t    link -\n-\t    run {\n-\t\tset do_what compile\n-\t\tset dg-do-what compile\n-\t    }\n-\t}\n-    }\n-\n-    # Strip rust.test prefix off test names to avoid pathname failures in\n-    # some tests.\n-    set prog [dg-trim-dirname rust.test $prog]\n-\n-    set result \\\n-\t[gcc-dg-test-1 rust_target_compile $prog $do_what $extra_tool_flags]\n-\n-    set comp_output [lindex $result 0]\n-    set output_file [lindex $result 1]\n-\n-    return [list $comp_output $output_file]\n+    return [gcc-dg-test-1 rust_target_compile $prog $do_what $extra_tool_flags]\n }\n \n proc rust-dg-prune { system text } {\n@@ -51,39 +28,6 @@ proc rust-dg-prune { system text } {\n \n # Utility routines.\n \n-#\n-# Modified dg-runtest that can cycle through a list of optimization options\n-# as c-torture does.\n-#\n-\n-proc rust-dg-runtest { testcases flags default-extra-flags } {\n-    global runtests\n-\n-    foreach test $testcases {\n-\t# If we're only testing specific files and this isn't one of\n-\t# them, skip it.\n-\t\n-\tif ![runtest_file_p $runtests $test] {\n-\t    continue\n-\t}\n-\n-\t# Use TORTURE_OPTIONS to cycle through an option list.\n-\tif [torture-options-exist] then {\n-\t    global torture_with_loops\n-\t    set option_list $torture_with_loops\n-\t} else {\n-\t    set option_list { \"\" }\n-\t}\n-\n-\tset nshort [file tail [file dirname $test]]/[file tail $test]\n-\n-\tforeach flags_t $option_list {\n-\t    verbose \"Testing $nshort, $flags $flags_t\" 1\n-\t    dg-test $test \"$flags $flags_t\" ${default-extra-flags}\n-\t}\n-    }\n-}\n-\n #\n # rust_load -- wrapper around default rust_load to handle tests that\n # require program arguments passed to them.\n@@ -98,7 +42,6 @@ if { [info procs rust_load] != [list] \\\n \tif [info exists RUST_EXECUTE_ARGS] then {\n \t    set args [concat \"{$RUST_EXECUTE_ARGS}\"]\n \t}\n-\t#print \"Running: $program [lindex $args 0]\"\n \tset result [eval [list prev_rust_load $program] $args ]\n \treturn $result\n     }"}, {"sha": "206f5724a4a4e460842138f5db7a494b27922ddb", "filename": "gcc/testsuite/lib/rust.exp", "status": "modified", "additions": 19, "deletions": 44, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Flib%2Frust.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Flib%2Frust.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Frust.exp?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "patch": "@@ -1,4 +1,4 @@\n-# Copyright (C) 2012-2020 Free Software Foundation, Inc.\n+# Copyright (C) 2012-2021 Free Software Foundation, Inc.\n \n # This program is free software; you can redistribute it and/or modify\n # it under the terms of the GNU General Public License as published by\n@@ -30,39 +30,6 @@ load_lib target-libpath.exp\n set rust_compile_options \"\"\n \n \n-#\n-# rust_version -- extract and print the version number of the compiler\n-#\n-\n-proc rust_version { } {\n-    global RUST_UNDER_TEST\n-\n-    rust_init\n-\n-    # ignore any arguments after the command\n-    set compiler [lindex $RUST_UNDER_TEST 0]\n-\n-    # verify that the compiler exists\n-    if { [is_remote host] || [which $compiler] != 0 } then {\n-\tset tmp [remote_exec host \"$compiler -v\"]\n-\tset status [lindex $tmp 0]\n-\tset output [lindex $tmp 1]\n-\tregexp \" version \\[^\\n\\r\\]*\" $output version\n-\tif { $status == 0 && [info exists version] } then {\n-\t    if [is_remote host] {\n-\t\tclone_output \"$compiler $version\\n\"\n-\t    } else {\n-\t\tclone_output \"[which $compiler] $version\\n\"\n-\t    }\n-\t} else {\n-\t    clone_output \"Couldn't determine version of $output [which $compiler]\\n\"\n-\t}\n-    } else {\n-\t# compiler does not exist (this should have already been detected)\n-\twarning \"$compiler does not exist\"\n-    }\n-}\n-\n #\n # rust_include_flags -- include flags for the gcc tree structure\n #\n@@ -118,7 +85,7 @@ proc rust_init { args } {\n     global libdir\n     global gluefile wrap_flags\n     global objdir srcdir\n-    global ALWAYS_DFLAGS\n+    global ALWAYS_RUSTFLAGS\n     global TOOL_EXECUTABLE TOOL_OPTIONS\n     global RUST_UNDER_TEST\n     global TESTING_IN_BUILD_TREE\n@@ -148,6 +115,7 @@ proc rust_init { args } {\n \t    exit 1\n \t}\n     }\n+\n     if ![info exists tmpdir] {\n \tset tmpdir \"/tmp\"\n     }\n@@ -164,24 +132,24 @@ proc rust_init { args } {\n     # compilation.  They are passed first to allow individual\n     # tests to override them.\n     if [info exists TEST_ALWAYS_FLAGS] {\n-\tlappend ALWAYS_DFLAGS \"additional_flags=$TEST_ALWAYS_FLAGS\"\n+\tlappend ALWAYS_RUSTFLAGS \"additional_flags=$TEST_ALWAYS_FLAGS\"\n     }\n \n     if ![is_remote host] {\n \tif [info exists TOOL_OPTIONS] {\n-\t    lappend ALWAYS_DFLAGS \"additional_flags=[rust_include_flags [get_multilibs ${TOOL_OPTIONS}] ]\"\n-\t    lappend ALWAYS_DFLAGS \"ldflags=[rust_link_flags [get_multilibs ${TOOL_OPTIONS}] ]\"\n+\t    lappend ALWAYS_RUSTFLAGS \"additional_flags=[rust_include_flags [get_multilibs ${TOOL_OPTIONS}] ]\"\n+\t    lappend ALWAYS_RUSTFLAGS \"ldflags=[rust_link_flags [get_multilibs ${TOOL_OPTIONS}] ]\"\n \t} else {\n-\t    lappend ALWAYS_DFLAGS \"additional_flags=[rust_include_flags [get_multilibs] ]\"\n-\t    lappend ALWAYS_DFLAGS \"ldflags=[rust_link_flags [get_multilibs] ]\"\n+\t    lappend ALWAYS_RUSTFLAGS \"additional_flags=[rust_include_flags [get_multilibs] ]\"\n+\t    lappend ALWAYS_RUSTFLAGS \"ldflags=[rust_link_flags [get_multilibs] ]\"\n \t}\n     }\n \n     if [info exists TOOL_OPTIONS] {\n-\tlappend ALWAYS_DFLAGS \"additional_flags=$TOOL_OPTIONS\"\n+\tlappend ALWAYS_RUSTFLAGS \"additional_flags=$TOOL_OPTIONS\"\n     }\n \n-    verbose -log \"ALWAYS_DFLAGS set to $ALWAYS_DFLAGS\"\n+    verbose -log \"ALWAYS_RUSTFLAGS set to $ALWAYS_RUSTFLAGS\"\n \n     set gcc_warning_prefix \"warning:\"\n     set gcc_error_prefix \"(fatal )?error:\"\n@@ -196,7 +164,7 @@ proc rust_init { args } {\n proc rust_target_compile { source dest type options } {\n     global tmpdir\n     global gluefile wrap_flags\n-    global ALWAYS_DFLAGS\n+    global ALWAYS_RUSTFLAGS\n     global RUST_UNDER_TEST\n \n     if { [target_info needs_status_wrapper] != \"\" && [info exists gluefile] } {\n@@ -207,7 +175,14 @@ proc rust_target_compile { source dest type options } {\n     lappend options \"timeout=[timeout_value]\"\n     lappend options \"compiler=$RUST_UNDER_TEST\"\n \n-    set options [concat \"$ALWAYS_DFLAGS\" $options]\n+    set options [concat \"$ALWAYS_RUSTFLAGS\" $options]\n     set options [dg-additional-files-options $options $source]\n+\n+    ## FIXME: until the compiler is made less verbose, we need to prune its output completely.\n+    # Only keep line containing error so that the test will correctly report the error and the test\n+    # can FAIL or XFAIL\n+    global additional_prunes\n+    set additional_prunes \"^((?!error).)*$\"\n+\n     return [target_compile $source $dest $type $options]\n }"}, {"sha": "efc63f5641af4a8ad0b5673a03f5d89773be8274", "filename": "gcc/testsuite/rust.test/compile/arithmetic_expressions1.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Farithmetic_expressions1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Farithmetic_expressions1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Farithmetic_expressions1.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/arithmetic_expressions1.rs"}, {"sha": "f7e66af7a266179f8bad20292b0c6908b506c70b", "filename": "gcc/testsuite/rust.test/compile/arrays1.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Farrays1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Farrays1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Farrays1.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/arrays1.rs"}, {"sha": "a3c85232c29453b789b513f5e24008346e2f9e50", "filename": "gcc/testsuite/rust.test/compile/arrays2.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Farrays2.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Farrays2.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Farrays2.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/arrays2.rs"}, {"sha": "8dd1c048b87679b2f05194fc071c6f58a04398a9", "filename": "gcc/testsuite/rust.test/compile/arrays_index1.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Farrays_index1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Farrays_index1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Farrays_index1.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/arrays_index1.rs"}, {"sha": "f9bee7748ee688ee2527fb2bdab6c778e1155b9a", "filename": "gcc/testsuite/rust.test/compile/arrays_index2.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Farrays_index2.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Farrays_index2.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Farrays_index2.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/arrays_index2.rs"}, {"sha": "fe63252cf9b5ac9ca12b1b9ffac1b326f6626fdc", "filename": "gcc/testsuite/rust.test/compile/block_expr1.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fblock_expr1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fblock_expr1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fblock_expr1.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/block_expr1.rs"}, {"sha": "a66ca7bcb01a62843f2b3d9c85f5a47525d854c4", "filename": "gcc/testsuite/rust.test/compile/block_expr2.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fblock_expr2.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fblock_expr2.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fblock_expr2.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/block_expr2.rs"}, {"sha": "a8b2f278f030a8cf4c66df8c3307ffdcfabba302", "filename": "gcc/testsuite/rust.test/compile/block_expr3.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fblock_expr3.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fblock_expr3.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fblock_expr3.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/block_expr3.rs"}, {"sha": "35a5cd047179ee1e6c8f0dc3b33fcfac9b515986", "filename": "gcc/testsuite/rust.test/compile/block_expr4.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fblock_expr4.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fblock_expr4.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fblock_expr4.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/block_expr4.rs"}, {"sha": "e583008380928548ad6fdc64a0a1c204ccdbb878", "filename": "gcc/testsuite/rust.test/compile/block_expr_parser_bug.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fblock_expr_parser_bug.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fblock_expr_parser_bug.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fblock_expr_parser_bug.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/block_expr_parser_bug.rs"}, {"sha": "8afa4746fefb7e9f7b15ea97c17b517c735127f6", "filename": "gcc/testsuite/rust.test/compile/borrow1.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fborrow1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fborrow1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fborrow1.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/borrow1.rs"}, {"sha": "73835c218a2900edc2ac995e858073e93f970345", "filename": "gcc/testsuite/rust.test/compile/char1.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fchar1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fchar1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fchar1.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/char1.rs"}, {"sha": "d3c5263854d52c6fd37fae36ca847023cc40ea5f", "filename": "gcc/testsuite/rust.test/compile/comparison_expr1.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fcomparison_expr1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fcomparison_expr1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fcomparison_expr1.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/comparison_expr1.rs"}, {"sha": "37cfd418e2211fcba498e6e85996c88c33b471d2", "filename": "gcc/testsuite/rust.test/compile/compile.exp", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fcompile.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fcompile.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fcompile.exp?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "patch": "@@ -0,0 +1,35 @@\n+# Copyright (C) 2021 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+# \n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+# \n+# You should have received a copy of the GNU General Public License\n+# along with GCC; see the file COPYING3.  If not see\n+# <http://www.gnu.org/licenses/>.\n+\n+#\n+# Rust torture test suite.\n+#\n+\n+# Load support procs.\n+load_lib rust-dg.exp\n+\n+# Initialize `dg'.\n+dg-init\n+\n+# Main loop.\n+set saved-dg-do-what-default ${dg-do-what-default}\n+\n+set dg-do-what-default \"compile\"\n+gcc-dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.rs]] \"\" \"-w\"\n+set dg-do-what-default ${saved-dg-do-what-default}\n+\n+# All done.\n+dg-finish"}, {"sha": "1ff0d24cf8e67b3fadd3d083e9c668e3312cffc7", "filename": "gcc/testsuite/rust.test/compile/compound_assignment_expr1.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fcompound_assignment_expr1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fcompound_assignment_expr1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fcompound_assignment_expr1.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/compound_assignment_expr1.rs"}, {"sha": "2bb3a95f033ca6d73ac44e3b95b95b2ecea7cd15", "filename": "gcc/testsuite/rust.test/compile/conditional.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fconditional.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fconditional.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fconditional.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/conditional.rs"}, {"sha": "e8ef96b206d456e1cab5a3880ec4267654ea45c7", "filename": "gcc/testsuite/rust.test/compile/constant1.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fconstant1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fconstant1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fconstant1.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/constant1.rs"}, {"sha": "ec6e2404333c444130c8c254231fa09d4b77bed4", "filename": "gcc/testsuite/rust.test/compile/deadcode1.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fdeadcode1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fdeadcode1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fdeadcode1.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/deadcode1.rs"}, {"sha": "9bf3eb56bb0fd7bbd141fe2752cd3b773b3dd2a8", "filename": "gcc/testsuite/rust.test/compile/deref1.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fderef1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fderef1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fderef1.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/deref1.rs"}, {"sha": "57a746fa2e09a89e220c040b2171631bf085e574", "filename": "gcc/testsuite/rust.test/compile/float1.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ffloat1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ffloat1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ffloat1.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/float1.rs"}, {"sha": "50b392e65008387712dcd5aaf758e6db66ea06ca", "filename": "gcc/testsuite/rust.test/compile/float_types.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ffloat_types.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ffloat_types.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ffloat_types.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/float_types.rs"}, {"sha": "a69c07eac43032ee04398d267e8c57ba6575ec59", "filename": "gcc/testsuite/rust.test/compile/forward_decl_1.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fforward_decl_1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fforward_decl_1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fforward_decl_1.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/forward_decl_1.rs"}, {"sha": "ba9c96360f3ba23697de5c35ee6a1e386de91620", "filename": "gcc/testsuite/rust.test/compile/forward_decl_2.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fforward_decl_2.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fforward_decl_2.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fforward_decl_2.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/forward_decl_2.rs"}, {"sha": "257b0f7442ab0828f75ceb5bc2696bdf33532c61", "filename": "gcc/testsuite/rust.test/compile/forward_decl_3.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fforward_decl_3.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fforward_decl_3.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fforward_decl_3.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/forward_decl_3.rs"}, {"sha": "dd8a725949e7c3b42a7bd193fc6d4cc250d3aefb", "filename": "gcc/testsuite/rust.test/compile/forward_decl_4.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fforward_decl_4.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fforward_decl_4.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fforward_decl_4.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/forward_decl_4.rs"}, {"sha": "604bad054d21d7b95bfd385e981424da76c11f94", "filename": "gcc/testsuite/rust.test/compile/function_reference1.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ffunction_reference1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ffunction_reference1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ffunction_reference1.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/function_reference1.rs"}, {"sha": "0b963b27e051d8e45a1c67edd18c3499b8cd8d20", "filename": "gcc/testsuite/rust.test/compile/function_reference2.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ffunction_reference2.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ffunction_reference2.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ffunction_reference2.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/function_reference2.rs"}, {"sha": "32f4728d71c412652ba3cff6d68bbf23d855fcf5", "filename": "gcc/testsuite/rust.test/compile/function_reference3.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ffunction_reference3.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ffunction_reference3.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ffunction_reference3.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/function_reference3.rs"}, {"sha": "a27f0e49d6c9e84aaecf9253581a0220192b1c67", "filename": "gcc/testsuite/rust.test/compile/function_reference4.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ffunction_reference4.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ffunction_reference4.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ffunction_reference4.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/function_reference4.rs"}, {"sha": "8a2965ad93fe762492215bc98fa7ae2f2c0cbb39", "filename": "gcc/testsuite/rust.test/compile/generics1.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fgenerics1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fgenerics1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fgenerics1.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/generics1.rs"}, {"sha": "ee759ddc01289fc08e32cf8d9fb027db6f8df3d3", "filename": "gcc/testsuite/rust.test/compile/generics2.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fgenerics2.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fgenerics2.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fgenerics2.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/generics2.rs"}, {"sha": "0dc41c3114967155796c6cadc37a1456418566a3", "filename": "gcc/testsuite/rust.test/compile/generics3.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fgenerics3.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fgenerics3.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fgenerics3.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/generics3.rs"}, {"sha": "81ac4e6a31888eb1e39fff0ad85e4876e803722d", "filename": "gcc/testsuite/rust.test/compile/generics4.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fgenerics4.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fgenerics4.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fgenerics4.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/generics4.rs"}, {"sha": "3d7f70d280c41c4ed43caaad5faa512599039f54", "filename": "gcc/testsuite/rust.test/compile/generics5.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fgenerics5.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fgenerics5.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fgenerics5.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/generics5.rs"}, {"sha": "da9f16798306b426bf9a7d62a96973621d9149e8", "filename": "gcc/testsuite/rust.test/compile/generics6.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fgenerics6.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fgenerics6.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fgenerics6.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/generics6.rs"}, {"sha": "b534708439484ed52036474d651e9e46df949a31", "filename": "gcc/testsuite/rust.test/compile/generics7.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fgenerics7.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fgenerics7.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fgenerics7.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/generics7.rs"}, {"sha": "eda6d176ea7d12345fbb327c61dfe5275ed7b3c7", "filename": "gcc/testsuite/rust.test/compile/if_elif_else_expr1.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fif_elif_else_expr1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fif_elif_else_expr1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fif_elif_else_expr1.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/if_elif_else_expr1.rs"}, {"sha": "d67afa187b1574c3baa36e017d6b5d7466d36c67", "filename": "gcc/testsuite/rust.test/compile/impl_block1.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fimpl_block1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fimpl_block1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fimpl_block1.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/impl_block1.rs"}, {"sha": "0ed592d07be1cec800ff6a81081432a95363445e", "filename": "gcc/testsuite/rust.test/compile/impl_block2.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fimpl_block2.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fimpl_block2.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fimpl_block2.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/impl_block2.rs"}, {"sha": "3093a6c0f1c7aa3f57d5b8261cf5487c6987e8ff", "filename": "gcc/testsuite/rust.test/compile/impl_block3.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fimpl_block3.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fimpl_block3.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fimpl_block3.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/impl_block3.rs"}, {"sha": "49457c682cc35ecac12cee6844d6f3d13ed8c29e", "filename": "gcc/testsuite/rust.test/compile/implicit_returns1.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fimplicit_returns1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fimplicit_returns1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fimplicit_returns1.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/implicit_returns1.rs"}, {"sha": "38bd8ae6729a4b43d5c97b98f014089a47fef0aa", "filename": "gcc/testsuite/rust.test/compile/infer_type1.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Finfer_type1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Finfer_type1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Finfer_type1.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/infer_type1.rs"}, {"sha": "ccee06aad105e0536fa425bfb6ebabcdd9696624", "filename": "gcc/testsuite/rust.test/compile/integer_inference_var1.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Finteger_inference_var1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Finteger_inference_var1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Finteger_inference_var1.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/integer_inference_var1.rs"}, {"sha": "2209e937479fb308b01ee46d110b75b826078b0f", "filename": "gcc/testsuite/rust.test/compile/integer_inference_var2.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Finteger_inference_var2.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Finteger_inference_var2.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Finteger_inference_var2.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/integer_inference_var2.rs"}, {"sha": "858c5d3cde3da791fe690b0670758f7b6641a2d0", "filename": "gcc/testsuite/rust.test/compile/integer_inference_var3.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Finteger_inference_var3.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Finteger_inference_var3.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Finteger_inference_var3.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/integer_inference_var3.rs"}, {"sha": "136d8183d083651fe16f1a3c1cf5f3aba353ae67", "filename": "gcc/testsuite/rust.test/compile/integer_inference_var4.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Finteger_inference_var4.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Finteger_inference_var4.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Finteger_inference_var4.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/integer_inference_var4.rs"}, {"sha": "6b97de5e058c299561b24fcbeac1a3383f76f675", "filename": "gcc/testsuite/rust.test/compile/integer_inference_var5.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Finteger_inference_var5.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Finteger_inference_var5.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Finteger_inference_var5.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/integer_inference_var5.rs"}, {"sha": "22a916450bad513028a4b9d6d7ec07269e127a57", "filename": "gcc/testsuite/rust.test/compile/integer_types.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Finteger_types.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Finteger_types.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Finteger_types.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/integer_types.rs"}, {"sha": "cd48e8368c0d9f49b54a985d865ced71d340852b", "filename": "gcc/testsuite/rust.test/compile/literals1.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fliterals1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fliterals1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fliterals1.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/literals1.rs"}, {"sha": "a8ee2f59bb85facfbf0f9f4254c10c3971957f62", "filename": "gcc/testsuite/rust.test/compile/loop1.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Floop1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Floop1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Floop1.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/loop1.rs"}, {"sha": "3de3ea819472fd710926f040b2c4dbb31786db72", "filename": "gcc/testsuite/rust.test/compile/loop2.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Floop2.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Floop2.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Floop2.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/loop2.rs"}, {"sha": "76fadfb4337d250f81834576c2bbda330fa5f1e4", "filename": "gcc/testsuite/rust.test/compile/loop3.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Floop3.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Floop3.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Floop3.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/loop3.rs"}, {"sha": "f7b59357aeb110152feaa2d42ca6deb937402248", "filename": "gcc/testsuite/rust.test/compile/loop4.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Floop4.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Floop4.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Floop4.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/loop4.rs"}, {"sha": "4004cd30b7b8ea349b145b46c3c55a1ce77b15b0", "filename": "gcc/testsuite/rust.test/compile/loop5.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Floop5.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Floop5.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Floop5.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/loop5.rs"}, {"sha": "ecd3ad4fd81fa5106f389ff23ad0d3e7d4ce8222", "filename": "gcc/testsuite/rust.test/compile/loop6.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Floop6.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Floop6.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Floop6.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/loop6.rs"}, {"sha": "0cd844592b64d01f0dda16b0f4712e1225670812", "filename": "gcc/testsuite/rust.test/compile/loop7.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Floop7.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Floop7.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Floop7.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/loop7.rs"}, {"sha": "cffa02e630b84b1e2a87706d48bd2b6649b93fa6", "filename": "gcc/testsuite/rust.test/compile/methods1.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fmethods1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fmethods1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fmethods1.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/methods1.rs"}, {"sha": "96a3211f797fada6fbd6cdb5df655fe87b891417", "filename": "gcc/testsuite/rust.test/compile/methods2.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fmethods2.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fmethods2.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fmethods2.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/methods2.rs"}, {"sha": "817f48b60eeb4f6b1105c01759b3aa2ffd393d5d", "filename": "gcc/testsuite/rust.test/compile/name_resolve1.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fname_resolve1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fname_resolve1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fname_resolve1.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/name_resolve1.rs"}, {"sha": "3880be04e0152337fd9c1207cba9e9c446e82cbb", "filename": "gcc/testsuite/rust.test/compile/nested_struct1.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fnested_struct1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fnested_struct1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fnested_struct1.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/nested_struct1.rs"}, {"sha": "7bba6c6678a16c216b68722ab293510cc30bf28b", "filename": "gcc/testsuite/rust.test/compile/parameter_usage1.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fparameter_usage1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fparameter_usage1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fparameter_usage1.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/parameter_usage1.rs"}, {"sha": "33d9d867e0988d39a2a977c50414dfb63e216f71", "filename": "gcc/testsuite/rust.test/compile/parens1.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fparens1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fparens1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fparens1.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/parens1.rs"}, {"sha": "89c21d09449de7f1d93254089a60a411df3e3bfb", "filename": "gcc/testsuite/rust.test/compile/recursive_fn1.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Frecursive_fn1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Frecursive_fn1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Frecursive_fn1.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/recursive_fn1.rs"}, {"sha": "74af41ef16397addfbe1f721cdf23e2b0f1723ce", "filename": "gcc/testsuite/rust.test/compile/scoping1.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fscoping1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fscoping1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fscoping1.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/scoping1.rs"}, {"sha": "373d6dd5a607865943964a84c34eca16d8269435", "filename": "gcc/testsuite/rust.test/compile/self_type1.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fself_type1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fself_type1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fself_type1.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/self_type1.rs"}, {"sha": "3cb1ec58521470e85f13e7b402ce8cdb29a1ea31", "filename": "gcc/testsuite/rust.test/compile/shadow1.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fshadow1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fshadow1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fshadow1.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/shadow1.rs"}, {"sha": "fbac8c0e22f55378a3b32a11a33c18418555cece", "filename": "gcc/testsuite/rust.test/compile/shadow2.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fshadow2.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fshadow2.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fshadow2.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/shadow2.rs"}, {"sha": "7a564af979877aba842ccaeddd1c8cc45fa3f23a", "filename": "gcc/testsuite/rust.test/compile/static_function.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fstatic_function.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fstatic_function.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fstatic_function.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/static_function.rs"}, {"sha": "8464f413b602433bfedfbcbddbd825bab2b8b295", "filename": "gcc/testsuite/rust.test/compile/static_var1.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fstatic_var1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fstatic_var1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fstatic_var1.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/static_var1.rs"}, {"sha": "088827853d81d3e54f687270aabfa1c2d48f9d1c", "filename": "gcc/testsuite/rust.test/compile/str1.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fstr1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fstr1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fstr1.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/str1.rs"}, {"sha": "bc12b93181f8681e49438928e0c5678b9c58ff65", "filename": "gcc/testsuite/rust.test/compile/struct_access1.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fstruct_access1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fstruct_access1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fstruct_access1.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/struct_access1.rs"}, {"sha": "3c0b24a391339805c0e0a87de3a346c858b1c61a", "filename": "gcc/testsuite/rust.test/compile/struct_base_init_1.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fstruct_base_init_1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fstruct_base_init_1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fstruct_base_init_1.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/struct_base_init_1.rs"}, {"sha": "6081476cfac2da2181fb7892fa901b6c50e89fe0", "filename": "gcc/testsuite/rust.test/compile/struct_init.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fstruct_init.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fstruct_init.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fstruct_init.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/struct_init.rs"}, {"sha": "8d210b8b846c488e03329f29f7af7b9538214f8c", "filename": "gcc/testsuite/rust.test/compile/struct_init_2.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fstruct_init_2.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fstruct_init_2.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fstruct_init_2.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/struct_init_2.rs"}, {"sha": "fb1e58efcbae7e22ea998ea86f3fe720275dafbd", "filename": "gcc/testsuite/rust.test/compile/struct_init_3.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fstruct_init_3.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fstruct_init_3.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fstruct_init_3.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/struct_init_3.rs"}, {"sha": "2cc8a19917d4a18419d244320a6121c7e7e9c1e0", "filename": "gcc/testsuite/rust.test/compile/struct_init_4.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fstruct_init_4.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fstruct_init_4.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fstruct_init_4.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/struct_init_4.rs"}, {"sha": "c79ea7145bf5eb19bda3e3679b3ab69c33ae4443", "filename": "gcc/testsuite/rust.test/compile/struct_init_5.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fstruct_init_5.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fstruct_init_5.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fstruct_init_5.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/struct_init_5.rs"}, {"sha": "51b90bc8b857301cf6769f7c82ab595bd3a3610e", "filename": "gcc/testsuite/rust.test/compile/struct_init_6.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fstruct_init_6.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fstruct_init_6.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fstruct_init_6.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/struct_init_6.rs"}, {"sha": "615eae7025d9cb075fb1ea3a20113dbd55909c29", "filename": "gcc/testsuite/rust.test/compile/struct_init_7.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fstruct_init_7.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fstruct_init_7.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fstruct_init_7.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/struct_init_7.rs"}, {"sha": "e62f40af6de83aadf4e620dadfb6cbd957a230cc", "filename": "gcc/testsuite/rust.test/compile/struct_init_8.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fstruct_init_8.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fstruct_init_8.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fstruct_init_8.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/struct_init_8.rs"}, {"sha": "8b8960170f9ef9f4d013547ffc37d4abec367f39", "filename": "gcc/testsuite/rust.test/compile/tuple1.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ftuple1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ftuple1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ftuple1.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/tuple1.rs"}, {"sha": "51333d8bcf209b9db994822caaa99950b633f346", "filename": "gcc/testsuite/rust.test/compile/tuple2.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ftuple2.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ftuple2.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ftuple2.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/tuple2.rs"}, {"sha": "d0fb6fc44297bb2cf8e6c8da3632ce78281ba8b1", "filename": "gcc/testsuite/rust.test/compile/tuple3.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ftuple3.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ftuple3.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ftuple3.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/tuple3.rs"}, {"sha": "8d1bbe9906ce1f2b7e7dab259f6f87a280b15785", "filename": "gcc/testsuite/rust.test/compile/tuple_field_access.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ftuple_field_access.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ftuple_field_access.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ftuple_field_access.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/tuple_field_access.rs"}, {"sha": "65e29f718d8de52534a967404e029be1251b47d9", "filename": "gcc/testsuite/rust.test/compile/tuple_struct1.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ftuple_struct1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ftuple_struct1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ftuple_struct1.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/tuple_struct1.rs"}, {"sha": "5e0a76e1de89ae91ac8b29f2133f323578581b5d", "filename": "gcc/testsuite/rust.test/compile/tuple_struct2.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ftuple_struct2.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ftuple_struct2.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ftuple_struct2.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/tuple_struct2.rs"}, {"sha": "bc4b09a6a5426a84542289027e7ebbfc05a6b848", "filename": "gcc/testsuite/rust.test/compile/type_infer1.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ftype_infer1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ftype_infer1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ftype_infer1.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/type_infer1.rs"}, {"sha": "614c67d6f3c5ac7d334d6d41a01cde25bcab6747", "filename": "gcc/testsuite/rust.test/compile/type_infer2.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ftype_infer2.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ftype_infer2.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ftype_infer2.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/type_infer2.rs"}, {"sha": "b20b565e3326559aa7c32881a244519c3f67991f", "filename": "gcc/testsuite/rust.test/compile/type_infer3.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ftype_infer3.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ftype_infer3.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ftype_infer3.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/type_infer3.rs"}, {"sha": "8e123e2cbd52a06d934b8d2b1549a45d9ac2b241", "filename": "gcc/testsuite/rust.test/compile/type_infer4.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ftype_infer4.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ftype_infer4.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ftype_infer4.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/type_infer4.rs"}, {"sha": "65c70584bd5cc2e33c308e633b36793ee9aad468", "filename": "gcc/testsuite/rust.test/compile/type_infer5.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ftype_infer5.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ftype_infer5.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ftype_infer5.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/type_infer5.rs"}, {"sha": "f6eac9e2eb7c3997f9c9f7b17751f61a9d8947a7", "filename": "gcc/testsuite/rust.test/compile/type_infer6.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ftype_infer6.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ftype_infer6.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ftype_infer6.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/type_infer6.rs"}, {"sha": "1ed966617c7cc929dc7e088e9e3e95432a44827e", "filename": "gcc/testsuite/rust.test/compile/unary_operators.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Funary_operators.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Funary_operators.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Funary_operators.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/unary_operators.rs"}, {"sha": "ea1ebb3f0fdf5607039382a35b5ef2c9e8d8c7b5", "filename": "gcc/testsuite/rust.test/compile/unit_type1.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Funit_type1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Funit_type1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Funit_type1.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/unit_type1.rs"}, {"sha": "cb501885f5b816989c372293e3eb38b8479d4928", "filename": "gcc/testsuite/rust.test/compile/unused1.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Funused1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Funused1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Funused1.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/unused1.rs"}, {"sha": "0df0a851a0d34cc2c61883e0aba927a1f0a082e0", "filename": "gcc/testsuite/rust.test/compile/usize1.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fusize1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fusize1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fusize1.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "previous_filename": "gcc/testsuite/rust.test/compilable/usize1.rs"}, {"sha": "6442e1e4e83622821b3e0938065978692520d6de", "filename": "gcc/testsuite/rust.test/execute/empty_main.rs", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fexecute%2Fempty_main.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fexecute%2Fempty_main.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fexecute%2Fempty_main.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "patch": "@@ -0,0 +1,3 @@\n+fn main() -> i32 {\n+    0\n+}"}, {"sha": "d4e9949cf299733c60e1c8eb483bbe2a519c9c56", "filename": "gcc/testsuite/rust.test/execute/execute.exp", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fexecute%2Fexecute.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fexecute%2Fexecute.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fexecute%2Fexecute.exp?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "patch": "@@ -0,0 +1,35 @@\n+# Copyright (C) 2021 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+# \n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+# \n+# You should have received a copy of the GNU General Public License\n+# along with GCC; see the file COPYING3.  If not see\n+# <http://www.gnu.org/licenses/>.\n+\n+#\n+# Rust torture test suite.\n+#\n+\n+# Load support procs.\n+load_lib rust-dg.exp\n+\n+# Initialize `dg'.\n+dg-init\n+\n+# Main loop.\n+set saved-dg-do-what-default ${dg-do-what-default}\n+\n+set dg-do-what-default \"run\"\n+gcc-dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.rs]] \"\" \"-w\"\n+set dg-do-what-default ${saved-dg-do-what-default}\n+\n+# All done.\n+dg-finish"}, {"sha": "02f0c8b47c08d763713ac5be0494fe17d71ab8e6", "filename": "gcc/testsuite/rust.test/execute/exit_error.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fexecute%2Fexit_error.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fexecute%2Fexit_error.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fexecute%2Fexit_error.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "patch": "@@ -0,0 +1,5 @@\n+// { dg-xfail-run-if \"\" { *-*-* } }\n+// { dg-excess-errors \"Noisy debug print\" }\n+fn main() -> i32 {\n+    1\n+}"}, {"sha": "797f1ca91c921ab76cc54c428f0f85be4d9b75d2", "filename": "gcc/testsuite/rust.test/fail_compilation/arrays1.rs", "status": "removed", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Farrays1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Farrays1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Farrays1.rs?ref=6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8", "patch": "@@ -1,4 +0,0 @@\n-fn main() {\n-    let xs: [i32; 5] = [1, 2, 3, 4, 5];\n-    let a: bool = xs[0];\n-}"}, {"sha": "9ecf322db19ec297f5fc1fdc8fb0bd200eaae395", "filename": "gcc/testsuite/rust.test/fail_compilation/arrays2.rs", "status": "removed", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Farrays2.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Farrays2.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Farrays2.rs?ref=6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8", "patch": "@@ -1,3 +0,0 @@\n-fn main() {\n-    let array: [i32; 5] = [1, 2, 3];\n-}"}, {"sha": "83e16f31f967199a4dce1123c9085f31fd92a782", "filename": "gcc/testsuite/rust.test/fail_compilation/bad_type1.rs", "status": "removed", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Fbad_type1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Fbad_type1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Fbad_type1.rs?ref=6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8", "patch": "@@ -1,3 +0,0 @@\n-fn main() {\n-    let logical: bool = 123;\n-}"}, {"sha": "401a5751d73ca485d2aa9673b4bd8124d2a6c2f4", "filename": "gcc/testsuite/rust.test/fail_compilation/break1.rs", "status": "removed", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Fbreak1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Fbreak1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Fbreak1.rs?ref=6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8", "patch": "@@ -1,5 +0,0 @@\n-fn main() {\n-    let a;\n-    a = 1;\n-    break a;\n-}"}, {"sha": "53cee9a19b1b3b2d89957f20b1b0e33ede303987", "filename": "gcc/testsuite/rust.test/fail_compilation/break2.rs", "status": "removed", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Fbreak2.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Fbreak2.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Fbreak2.rs?ref=6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8", "patch": "@@ -1,14 +0,0 @@\n-fn main() {\n-    let mut a = 1;\n-    let mut b = 1;\n-\n-    let mut c;\n-    while b > 10 {\n-        if (b == 2) {\n-            break b;\n-        }\n-        c = a + b;\n-        a = b;\n-        b = c;\n-    }\n-}"}, {"sha": "2ec25a4b4a2b5d0b9c325e4f7c42aea61a6231f8", "filename": "gcc/testsuite/rust.test/fail_compilation/continue1.rs", "status": "removed", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Fcontinue1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Fcontinue1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Fcontinue1.rs?ref=6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8", "patch": "@@ -1,9 +0,0 @@\n-fn main() {\n-    let mut a = 1;\n-    let mut b = 1;\n-\n-    let _fib = {\n-        continue;\n-        123\n-    };\n-}"}, {"sha": "5578c279c00f4d78445fd19111332559de4ff084", "filename": "gcc/testsuite/rust.test/fail_compilation/func1.rs", "status": "removed", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Ffunc1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Ffunc1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Ffunc1.rs?ref=6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8", "patch": "@@ -1,9 +0,0 @@\n-fn test(x: i32) -> bool {\n-    return x + 1;\n-}\n-\n-fn main() {\n-    let an_integer = 5;\n-\n-    let call_test = test(1);\n-}"}, {"sha": "eae433aa4da3e16201ab253572d582863099b523", "filename": "gcc/testsuite/rust.test/fail_compilation/func2.rs", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Ffunc2.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Ffunc2.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Ffunc2.rs?ref=6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8", "patch": "@@ -1,7 +0,0 @@\n-fn test(a: i32, b: i32) -> i32 {\n-    a + b\n-}\n-\n-fn main() {\n-    let a = test(1);\n-}"}, {"sha": "781caf7866e24714f1036c1dbc16873f985471f5", "filename": "gcc/testsuite/rust.test/fail_compilation/func3.rs", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Ffunc3.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Ffunc3.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Ffunc3.rs?ref=6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8", "patch": "@@ -1,7 +0,0 @@\n-fn test(a: i32, b: i32) -> i32 {\n-    a + b\n-}\n-\n-fn main() {\n-    let a = test(1, true);\n-}"}, {"sha": "71ff7d65d74ade0c33d22f8eed291cacc3722c0e", "filename": "gcc/testsuite/rust.test/fail_compilation/generics1.rs", "status": "removed", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Fgenerics1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Fgenerics1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Fgenerics1.rs?ref=6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8", "patch": "@@ -1,9 +0,0 @@\n-struct GenericStruct<T>(T, usize);\n-\n-fn main() {\n-    let a2: GenericStruct<i8>;\n-    a2 = GenericStruct::<_>(1, 456);\n-\n-    let b2: i32 = a2.0;\n-    let c2: usize = a2.1;\n-}"}, {"sha": "7fe09e77cbf0eafec06d0da1edbf4d641db82900", "filename": "gcc/testsuite/rust.test/fail_compilation/generics2.rs", "status": "removed", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Fgenerics2.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Fgenerics2.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Fgenerics2.rs?ref=6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8", "patch": "@@ -1,9 +0,0 @@\n-struct GenericStruct<T>(T, usize);\n-\n-fn main() {\n-    let a2: GenericStruct<i8>;\n-    a2 = GenericStruct(1, 456);\n-\n-    let b2: i32 = a2.0;\n-    let c2: usize = a2.1;\n-}"}, {"sha": "80ccdec45fc96424a3722b796efa4939dceec499", "filename": "gcc/testsuite/rust.test/fail_compilation/generics3.rs", "status": "removed", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Fgenerics3.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Fgenerics3.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Fgenerics3.rs?ref=6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8", "patch": "@@ -1,9 +0,0 @@\n-struct GenericStruct<T>(T, usize);\n-\n-fn main() {\n-    let a2;\n-    a2 = GenericStruct::<i8>(1, 456);\n-\n-    let b2: i32 = a2.0;\n-    let c2: usize = a2.1;\n-}"}, {"sha": "ef8250b1de1e3e4b7f2f07b7aab6d3d51e37a4b9", "filename": "gcc/testsuite/rust.test/fail_compilation/generics5.rs", "status": "removed", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Fgenerics5.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Fgenerics5.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Fgenerics5.rs?ref=6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8", "patch": "@@ -1,9 +0,0 @@\n-struct GenericStruct<T>(T, usize);\n-\n-fn main() {\n-    let a2;\n-    a2 = GenericStruct::<i8, T>(1, 456);\n-\n-    let b2: i32 = a2.0;\n-    let c2: usize = a2.1;\n-}"}, {"sha": "5713d3b144ffe125263d7aa1834ae7d77e0ee508", "filename": "gcc/testsuite/rust.test/fail_compilation/immutable1.rs", "status": "removed", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Fimmutable1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Fimmutable1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Fimmutable1.rs?ref=6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8", "patch": "@@ -1,5 +0,0 @@\n-static x: i32 = 3;\n-\n-fn main() {\n-    x = 1;\n-}"}, {"sha": "e316e72985767f840353c1ae41bb48dbb7ad9a01", "filename": "gcc/testsuite/rust.test/fail_compilation/immutable2.rs", "status": "removed", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Fimmutable2.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Fimmutable2.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Fimmutable2.rs?ref=6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8", "patch": "@@ -1,5 +0,0 @@\n-const TEST_CONST: i32 = 10;\n-\n-fn main() {\n-    TEST_CONST = 1;\n-}"}, {"sha": "b310193ae8d4be0ae51a1966714724e6ed01f3da", "filename": "gcc/testsuite/rust.test/fail_compilation/immutable3.rs", "status": "removed", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Fimmutable3.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Fimmutable3.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Fimmutable3.rs?ref=6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8", "patch": "@@ -1,4 +0,0 @@\n-fn main() {\n-    let a = 1;\n-    a += 2;\n-}"}, {"sha": "d2e740fb7d8ccc50a3d76d46b93d25421be6d5bf", "filename": "gcc/testsuite/rust.test/fail_compilation/immutable4.rs", "status": "removed", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Fimmutable4.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Fimmutable4.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Fimmutable4.rs?ref=6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8", "patch": "@@ -1,4 +0,0 @@\n-fn main() {\n-    let array: [i32; 3] = [0; 3];\n-    array[0] = 1;\n-}"}, {"sha": "500d007307546d0fbf9ea6d12202f5b236e0c23b", "filename": "gcc/testsuite/rust.test/fail_compilation/missing_return1.rs", "status": "removed", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Fmissing_return1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Fmissing_return1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Fmissing_return1.rs?ref=6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8", "patch": "@@ -1,5 +0,0 @@\n-fn test1() -> i32 {}\n-\n-fn main() {\n-    let call1 = test1();\n-}"}, {"sha": "9acdf5ff7247b667c0bf073f97a66711a1f63d37", "filename": "gcc/testsuite/rust.test/fail_compilation/redef_error1.rs", "status": "removed", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Fredef_error1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Fredef_error1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Fredef_error1.rs?ref=6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8", "patch": "@@ -1,8 +0,0 @@\n-struct S1 {\n-    x: f64,\n-    y: f64,\n-}\n-\n-struct S1(i32, bool);\n-\n-fn main() {}"}, {"sha": "c04d2cf15ecd93ed3bfbd46af911e34a791db10e", "filename": "gcc/testsuite/rust.test/fail_compilation/redef_error2.rs", "status": "removed", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Fredef_error2.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Fredef_error2.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Fredef_error2.rs?ref=6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8", "patch": "@@ -1,4 +0,0 @@\n-const TEST: i32 = 2;\n-const TEST: f32 = 3.0;\n-\n-fn main() {}"}, {"sha": "9ffa4e5ed68559bc784781e4cb2482ddf123be92", "filename": "gcc/testsuite/rust.test/fail_compilation/redef_error3.rs", "status": "removed", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Fredef_error3.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Fredef_error3.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Fredef_error3.rs?ref=6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8", "patch": "@@ -1,9 +0,0 @@\n-fn test() -> bool {\n-    true\n-}\n-\n-fn test() -> i32 {\n-    123\n-}\n-\n-fn main() {}"}, {"sha": "342a67e323db1264b21eaa8830c3fe357edd8004", "filename": "gcc/testsuite/rust.test/fail_compilation/redef_error5.rs", "status": "removed", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Fredef_error5.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Fredef_error5.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Fredef_error5.rs?ref=6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8", "patch": "@@ -1,8 +0,0 @@\n-struct Foo(i32, bool);\n-\n-impl Foo {\n-    const TEST: i32 = 123;\n-    const TEST: bool = false;\n-}\n-\n-fn main() {}"}, {"sha": "18c5c58c78c95d3e2e086bbc5d74c2466d5a92ee", "filename": "gcc/testsuite/rust.test/fail_compilation/shadow1.rs", "status": "removed", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Fshadow1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Fshadow1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Fshadow1.rs?ref=6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8", "patch": "@@ -1,6 +0,0 @@\n-fn main() {\n-    let mut x = 5;\n-    let mut x;\n-    x = true;\n-    x = x + 2;\n-}"}, {"sha": "d94c8c15eddbeceb9d746d8f14ac3191ad819659", "filename": "gcc/testsuite/rust.test/fail_compilation/static_var1.rs", "status": "removed", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Fstatic_var1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Fstatic_var1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Fstatic_var1.rs?ref=6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8", "patch": "@@ -1,5 +0,0 @@\n-static x = 3;\n-\n-fn main() {\n-    let y = x +1;\n-}"}, {"sha": "3eadaef1e597909665c647642ab4cd95946f3646", "filename": "gcc/testsuite/rust.test/fail_compilation/struct_init1.rs", "status": "removed", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Fstruct_init1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Fstruct_init1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Fstruct_init1.rs?ref=6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8", "patch": "@@ -1,8 +0,0 @@\n-struct Foo {\n-    a: f32,\n-    b: f32,\n-}\n-\n-fn main() {\n-    let a = Foo { 0: 10.0, 1: 20.0 };\n-}"}, {"sha": "d551365200361160659f0688cbd9781381451a49", "filename": "gcc/testsuite/rust.test/fail_compilation/tuple1.rs", "status": "removed", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Ftuple1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Ftuple1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Ftuple1.rs?ref=6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8", "patch": "@@ -1,5 +0,0 @@\n-fn main() {\n-    let a: (i32, bool) = (123, 123);\n-    let b;\n-    b = (456, 5f32);\n-}"}, {"sha": "0df07d9d94792b9a4e7906feb9e7bfd9939f49c1", "filename": "gcc/testsuite/rust.test/fail_compilation/tuple_struct1.rs", "status": "removed", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Ftuple_struct1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Ftuple_struct1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Ftuple_struct1.rs?ref=6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8", "patch": "@@ -1,8 +0,0 @@\n-struct Foo {\n-    one: i32,\n-    two: i32,\n-}\n-\n-fn main() {\n-    let a = Foo(1, 2);\n-}"}, {"sha": "6c3c0ab2e59b245d0f2ec33759ce232e1e7e19e4", "filename": "gcc/testsuite/rust.test/fail_compilation/tuple_struct2.rs", "status": "removed", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Ftuple_struct2.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Ftuple_struct2.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Ftuple_struct2.rs?ref=6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8", "patch": "@@ -1,5 +0,0 @@\n-struct Bar(i32, i32, bool);\n-\n-fn main() {\n-    let a = Bar(1, 2);\n-}"}, {"sha": "832df8bd7bcad5f400eec9e93e52df3ece725d5d", "filename": "gcc/testsuite/rust.test/fail_compilation/tuple_struct3.rs", "status": "removed", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Ftuple_struct3.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Ftuple_struct3.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Ftuple_struct3.rs?ref=6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8", "patch": "@@ -1,5 +0,0 @@\n-struct Foo(i32, i32, bool);\n-\n-fn main() {\n-    let c = Foo(1, 2f32, true);\n-}"}, {"sha": "476b908f0835db3225977b4074cafbd77f0cd47a", "filename": "gcc/testsuite/rust.test/fail_compilation/unary_negation.rs", "status": "removed", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Funary_negation.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Funary_negation.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Funary_negation.rs?ref=6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8", "patch": "@@ -1,8 +0,0 @@\n-fn main() {\n-    let a: i32 = -1;\n-    let b: i32 = 3 - -1;\n-    let c: bool = !false;\n-    let d: i32 = !3;\n-\n-    let e: f32 = -true;\n-}"}, {"sha": "f358f0e9c278a05875361cce34de2b369546f62e", "filename": "gcc/testsuite/rust.test/fail_compilation/unary_not.rs", "status": "removed", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Funary_not.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Funary_not.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Funary_not.rs?ref=6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8", "patch": "@@ -1,8 +0,0 @@\n-fn main() {\n-    let a: i32 = -1;\n-    let b: i32 = 3 - -1;\n-    let c: bool = !false;\n-    let d: i32 = !3;\n-\n-    let e: f32 = !5f32;\n-}"}, {"sha": "92393e7dde9dc1b6de9dddfe3df4e6c9b4d3e9f6", "filename": "gcc/testsuite/rust.test/fail_compilation/usize1.rs", "status": "removed", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Fusize1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Fusize1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Fusize1.rs?ref=6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8", "patch": "@@ -1,5 +0,0 @@\n-fn main() {\n-    let a = [1, 2, 3];\n-    let b: u32 = 1;\n-    let c = a[b];\n-}"}, {"sha": "20ebe25a177709a45e85045b751c2a461691004d", "filename": "gcc/testsuite/rust.test/rust-test.exp", "status": "removed", "additions": 0, "deletions": 437, "changes": 437, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8/gcc%2Ftestsuite%2Frust.test%2Frust-test.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8/gcc%2Ftestsuite%2Frust.test%2Frust-test.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Frust-test.exp?ref=6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8", "patch": "@@ -1,437 +0,0 @@\n-# Copyright (C) 2012-2019 Free Software Foundation, Inc.\n-\n-# This program is free software; you can redistribute it and/or modify\n-# it under the terms of the GNU General Public License as published by\n-# the Free Software Foundation; either version 3 of the License, or\n-# (at your option) any later version.\n-#\n-# This program is distributed in the hope that it will be useful,\n-# but WITHOUT ANY WARRANTY; without even the implied warranty of\n-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-# GNU General Public License for more details.\n-#\n-# You should have received a copy of the GNU General Public License\n-# along with GCC; see the file COPYING3.  If not see\n-# <http://www.gnu.org/licenses/>.\n-\n-# Test using the DMD testsuite.\n-# Load support procs.\n-load_lib rust-dg.exp\n-\n-#\n-# Convert DMD arguments to RUST equivalent\n-#\n-\n-proc rust-convert-args { args } {\n-    set out \"\"\n-\n-    foreach arg [split [lindex $args 0] \" \"] {\n-\t# List of switches kept in ASCII collated order.\n-\tif [string match \"-D\" $arg] {\n-\t    lappend out \"-fdoc\"\n-\n-\t} elseif { [regexp -- {^-I([\\w+/-]+)} $arg pattern path] } {\n-\t    lappend out \"-I$path\"\n-\n-\t} elseif { [regexp -- {^-J([\\w+/-]+)} $arg pattern path] } {\n-\t    lappend out \"-J$path\"\n-\n-\t} elseif [string match \"-allinst\" $arg] {\n-\t    lappend out \"-fall-instantiations\"\n-\n-\t} elseif [string match \"-betterC\" $arg] {\n-\t    lappend out \"-fno-druntime\"\n-\n-\t} elseif { [string match \"-boundscheck\" $arg]\n-\t\t || [string match \"-boundscheck=on\" $arg] } {\n-\t    lappend out \"-fbounds-check\"\n-\n-\t} elseif { [string match \"-boundscheck=off\" $arg]\n-\t\t   || [string match \"-noboundscheck\" $arg] } {\n-\t    lappend out \"-fno-bounds-check\"\n-\n-\t} elseif [string match \"-boundscheck=safeonly\" $arg] {\n-\t    lappend out \"-fbounds-check=safeonly\"\n-\n-\t} elseif [string match \"-c\" $arg] {\n-\t    lappend out \"-c\"\n-\n-\t} elseif [string match \"-d\" $arg] {\n-\t    lappend out \"-Wno-deprecated\"\n-\n-\t} elseif [string match \"-de\" $arg] {\n-\t    lappend out \"-Wdeprecated\"\n-\t    lappend out \"-Werror\"\n-\n-\t} elseif [string match \"-debug\" $arg] {\n-\t    lappend out \"-fdebug\"\n-\n-\t} elseif [regexp -- {^-debug=(\\w+)} $arg pattern value] {\n-\t    lappend out \"-fdebug=$value\"\n-\n-\t} elseif [string match \"-dip1000\" $arg] {\n-\t    lappend out \"-ftransition=dip1000\"\n-\n-\t} elseif [string match \"-dip25\" $arg] {\n-\t    lappend out \"-ftransition=dip25\"\n-\n-\t} elseif [string match \"-dw\" $arg] {\n-\t    lappend out \"-Wdeprecated\"\n-\t    lappend out \"-Wno-error\"\n-\n-\t} elseif [string match \"-fPIC\" $arg] {\n-\t    lappend out \"-fPIC\"\n-\n-\t} elseif { [string match \"-g\" $arg]\n-\t\t   || [string match \"-gc\" $arg] } {\n-\t    lappend out \"-g\"\n-\n-\t} elseif [string match \"-inline\" $arg] {\n-\t    lappend out \"-finline-functions\"\n-\n-\t} elseif [string match \"-main\" $arg] {\n-\t    lappend out \"-fmain\"\n-\n-\t} elseif [regexp -- {^-mv=([\\w+=./-]+)} $arg pattern value] {\n-\t    lappend out \"-fmodule-file=$value\"\n-\n-\t} elseif [string match \"-O\" $arg] {\n-\t    lappend out \"-O2\"\n-\n-\t} elseif [string match \"-release\" $arg] {\n-\t    lappend out \"-frelease\"\n-\n-\t} elseif [regexp -- {^-transition=(\\w+)} $arg pattern value] {\n-\t    lappend out \"-ftransition=$value\"\n-\n-\t} elseif [string match \"-unittest\" $arg] {\n-\t    lappend out \"-funittest\"\n-\n-\t} elseif [string match \"-verrors=spec\" $arg] {\n-\t    lappend out \"-Wspeculative\"\n-\n-\t} elseif [regexp -- {^-verrors=(\\d+)} $arg pattern num] {\n-\t    lappend out \"-fmax-errors=$num\"\n-\n-\t} elseif [regexp -- {^-version=(\\w+)} $arg pattern value] {\n-\t    lappend out \"-fversion=$value\"\n-\n-\t} elseif [string match \"-vtls\" $arg] {\n-\t    lappend out \"-ftransition=tls\"\n-\n-\t} elseif [string match \"-w\" $arg] {\n-\t    lappend out \"-Wall\"\n-\t    lappend out \"-Werror\"\n-\n-\t} elseif [string match \"-wi\" $arg] {\n-\t    lappend out \"-Wall\"\n-\t    lappend out \"-Wno-error\"\n-\n-\t} else {\n-\t    # print \"Unhandled Argument: $arg\"\n-\t}\n-    }\n-\n-    return $out\n-}\n-\n-proc rust-copy-extra { base extra } {\n-    # Split base, folder/file.\n-    set type [file dirname $extra]\n-\n-    # print \"Filename: $base - $extra\"\n-\n-    set fdin [open $base/$extra r]\n-    fconfigure $fdin -encoding binary\n-\n-    file mkdir $type\n-    set fdout [open $extra w]\n-    fconfigure $fdout -encoding binary\n-\n-    while { [gets $fdin copy_line] >= 0 } {\n-\tset out_line $copy_line\n-\tputs $fdout $out_line\n-    }\n-\n-    close $fdin\n-    close $fdout\n-\n-    # Remove file once test is finished.\n-    upvar 2 cleanup_extra_files cleanups\n-    lappend cleanups $extra\n-\n-    return $extra\n-}\n-\n-#\n-# Translate DMD test directives to dejagnu equivalent.\n-#\n-#   COMPILE_SEPARATELY: Not handled.\n-#   EXECUTE_ARGS:\tParameters to add to the execution of the test.\n-#   COMPILED_IMPORTS:\tList of modules files that are imported by the main\n-#\t\t\tsource file that should be included in compilation.\n-#\t\t\tCurrently handled the same as EXTRA_SOURCES.\n-#   EXTRA_SOURCES:\tList of extra sources to build and link along with\n-#\t\t\tthe test.\n-#   EXTRA_FILES:\tList of extra files to copy for the test runs.\n-#   PERMUTE_ARGS:\tThe set of arguments to permute in multiple compiler\n-#\t\t\tinvocations.  An empty set means only one permutation\n-#\t\t\twith no arguments.\n-#   TEST_OUTPUT:\tThe output expected from the compilation.\n-#   POST_SCRIPT:\tNot handled.\n-#   REQUIRED_ARGS:\tArguments to add to the compiler command line.\n-#   DISABLED:\t\tNot handled.\n-#\n-\n-proc dmd2dg { base test } {\n-    global DEFAULT_DFLAGS\n-    global PERMUTE_ARGS\n-    global RUST_EXECUTE_ARGS\n-\n-    set PERMUTE_ARGS $DEFAULT_DFLAGS\n-    set RUST_EXECUTE_ARGS \"\"\n-\n-    set extra_sources \"\"\n-    set extra_files \"\"\n-\n-    # Split base, folder/file.\n-    set type [file dirname $test]\n-    set name [file tail $test]\n-\n-    print \"Filename: $base - $test\"\n-\n-    set fdin [open $base/$test r]\n-    #fconfigure $fdin -encoding binary\n-\n-    file mkdir $type\n-    set fdout [open $test w]\n-    #fconfigure $fdout -encoding binary\n-\n-    while { [gets $fdin copy_line] >= 0 } {\n-\tset out_line $copy_line\n-\n-\tif [regexp -- {COMPILE_SEPARATELY} $copy_line] {\n-\t    # COMPILE_SEPARATELY is not handled.\n-\t    regsub -- {COMPILE_SEPARATELY.*$} $copy_line \"\" out_line\n-\n-\t} elseif [regexp -- {DISABLED} $copy_line] {\n-\t    # DISABLED is not handled.\n-\t    regsub -- {DISABLED.*$} $copy_line \"\" out_line\n-\n-\t} elseif [regexp -- {POST_SCRIPT} $copy_line] {\n-\t    # POST_SCRIPT is not handled\n-\t    regsub -- {POST_SCRIPT.*$} $copy_line \"\" out_line\n-\n-\t} elseif [regexp -- {PERMUTE_ARGS\\s*:\\s*(.*)} $copy_line match args] {\n-\t    # PERMUTE_ARGS is handled by rust-do-test.\n-\t    set PERMUTE_ARGS [rust-convert-args $args]\n-\t    regsub -- {PERMUTE_ARGS.*$} $copy_line \"\" out_line\n-\n-\t} elseif [regexp -- {EXECUTE_ARGS\\s*:\\s*(.*)} $copy_line match args] {\n-\t    # EXECUTE_ARGS is handled by rust_load.\n-\t    foreach arg $args {\n-\t\tlappend RUST_EXECUTE_ARGS $arg\n-\t    }\n-\t    regsub -- {EXECUTE_ARGS.*$} $copy_line \"\" out_line\n-\n-\t} elseif [regexp -- {REQUIRED_ARGS\\s*:\\s*(.*)} $copy_line match args] {\n-\t    # Convert all listed arguments to from dmd to rust-style.\n-\t    set new_option \"{ dg-additional-options \\\"[rust-convert-args $args]\\\" }\"\n-\t    regsub -- {REQUIRED_ARGS.*$} $copy_line $new_option out_line\n-\n-\t} elseif [regexp -- {EXTRA_SOURCES\\s*:\\s*(.*)} $copy_line match sources] {\n-\t    # EXTRA_SOURCES are appended to extra_sources list\n-\t    foreach srcfile $sources {\n-\t\tlappend extra_sources $srcfile\n-\t    }\n-\t    regsub -- {EXTRA_SOURCES.*$} $copy_line \"\" out_line\n-\n-\t} elseif [regexp -- {EXTRA_CPP_SOURCES\\s*:\\s*(.*)} $copy_line match sources] {\n-\t    # EXTRA_CPP_SOURCES are appended to extra_sources list\n-\t    foreach srcfile $sources {\n-\t\t# C++ sources are found in the extra-files directory.\n-\t\tlappend extra_sources \"extra-files/$srcfile\"\n-\t    }\n-\t    regsub -- {EXTRA_CPP_SOURCES.*$} $copy_line \"\" out_line\n-\n-\t} elseif [regexp -- {EXTRA_FILES\\s*:\\s*(.*)} $copy_line match files] {\n-\t    # EXTRA_FILES are appended to extra_files list\n-\t    foreach file $files {\n-\t\tlappend extra_files $file\n-\t    }\n-\t    regsub -- {EXTRA_FILES.*$} $copy_line \"\" out_line\n-\n-\t} elseif [regexp -- {COMPILED_IMPORTS\\s*:\\s*(.*)} $copy_line match sources] {\n-\t    # COMPILED_IMPORTS are appended to extra_sources list\n-\t    foreach import $sources {\n-\t\tlappend extra_sources $import\n-\t    }\n-\t    regsub -- {COMPILED_IMPORTS.*$} $copy_line \"\" out_line\n-\n-\t}\n-\n-\tputs $fdout $out_line\n-    }\n-\n-    # Now that all extra sources and files have been collected, copy them all\n-    # to the testsuite build directory.\n-    if { [llength $extra_sources] > 0 } {\n-\tforeach srcfile $extra_sources {\n-\t    rust-copy-extra $base \"$type/$srcfile\"\n-\t}\n-\tset out_line \"// { dg-additional-sources \\\"$extra_sources\\\" }\"\n-\tputs $fdout $out_line\n-    }\n-\n-    if { [llength $extra_files] > 0 } {\n-\tforeach file $extra_files {\n-\t    rust-copy-extra $base \"$type/$file\"\n-\t}\n-\tset out_line \"// { dg-additional-files \\\"$extra_files\\\" }\"\n-\tputs $fdout $out_line\n-    }\n-\n-    # Add specific options for test type\n-\n-    # DMD's testsuite is extremely verbose, compiler messages from constructs\n-    # such as pragma(msg, ...) would otherwise cause tests to fail.\n-    set out_line \"// { dg-prune-output .* }\"\n-    puts $fdout $out_line\n-\n-    # Compilable files are successful if an output is generated.\n-    # Fail compilable are successful if an output is not generated.\n-    # Runnable must compile, link, and return 0 to be successful by default.\n-    switch $type {\n-\trunnable {\n-\t    if ![isnative] {\n-\t\tset out_line \"// { dg-final { output-exists } }\"\n-\t\tputs $fdout $out_line\n-\t    }\n-\t}\n-\n-\tcompilable {\n-\t    puts $fdout \"// { dg-final { output-exists } }\"\n-\t}\n-\n-\tfail_compilation {\n-\t    puts $fdout \"// { dg-do compile }\"\n-\t    puts $fdout \"// { dg-final { output-exists-not } }\"\n-\t}\n-    }\n-\n-    close $fdin\n-    close $fdout\n-\n-    return $test\n-}\n-\n-\n-proc rust-permute-options { options } {\n-    set result { }\n-    set n [expr 1<<[llength $options]]\n-    for { set i 0 } { $i<$n } { incr i } {\n-\tset option \"\"\n-\tfor { set j 0 } { $j<[llength $options] } { incr j } {\n-\t    if [expr $i & 1 << $j] {\n-\t\tappend option [lindex $options $j]\n-\t\tappend option \" \"\n-\t    }\n-\t}\n-\tlappend result $option\n-\n-    }\n-    return $result\n-}\n-\n-\n-proc rust-do-test { } {\n-    global srcdir subdir\n-    global dg-do-what-default\n-    global verbose\n-\n-    # If a testcase doesn't have special options, use these.\n-    global DEFAULT_DFLAGS\n-    if ![info exists DEFAULT_DFLAGS] then {\n-\tset DEFAULT_DFLAGS \"-g -O2\"\n-    }\n-\n-    # These are special options to use on testcase, and override DEFAULT_DFLAGS\n-    global PERMUTE_ARGS\n-\n-    # Set if an extra option should be passed to link to shared druntime.\n-    global SHARED_OPTION\n-\n-    # Additional arguments for rust_load\n-    global RUST_EXECUTE_ARGS\n-\n-    # Initialize `dg'.\n-    dg-init\n-\n-    # Allow blank linkes in output for all of rust.test.\n-    global allow_blank_lines\n-    set save_allow_blank_lines $allow_blank_lines\n-    if { !$allow_blank_lines } {\n-\tset allow_blank_lines 2\n-    }\n-\n-    # Create rust.test link so test names include that subdir.\n-    catch { file link $subdir . }\n-\n-    # Main loop.\n-\n-    # set verbose 1\n-    # set dg-final-code \"\"\n-    # Find all tests and pass to routine.\n-    foreach test [lsort [find $srcdir/$subdir *]] {\n-\tregexp -- \"(.*)/(.+)/(.+)\\.rs$\" $test match base dir name ext\n-\tset ext \"rs\"\n-\n-\t# Skip invalid test extensions\n-\tif { [lsearch \"rs\" $ext] == -1 } {\n-\t    continue\n-\t}\t\n-\n-\t# Convert to DG test.\n-\tset imports [format \"-I%s/%s\" $base $dir]\n-\tset cleanup_extra_files \"\"\n-\t# Include $subdir prefix so test names follow DejaGnu conventions.\n-\tset filename \"$subdir/[dmd2dg $base $dir/$name.$ext]\"\n-\n-\tif { $dir == \"runnable\" } {\n-\t    append PERMUTE_ARGS \" $SHARED_OPTION\"\n-\t}\n-\tset options [rust-permute-options [lsort -unique $PERMUTE_ARGS]]\n-\n-\tswitch $dir {\n-\t    compilable {\n-\t\tfor { set i 0 } { $i<[llength $options] } { incr i } {\n-\t\t    set flags [lindex $options $i]\n-\t\t    set dg-do-what-default \"compile\"\n-\t\t    rust-dg-runtest $filename $flags $imports\n-\t\t}\n-\t    }\n-\n-\t    fail_compilation {\n-\t\tfor { set i 0 } { $i<[llength $options] } { incr i } {\n-\t\t    set flags [lindex $options $i]\n-\t\t    set dg-do-what-default \"compile\"\n-\t\t    rust-dg-runtest $filename $flags $imports\n-\t\t}\n-\t    }\n-\t}\n-\n-\t# Cleanup test directory.\n-\tforeach srcfile $cleanup_extra_files {\n-\t    file delete $subdir/$srcfile\n-\t}\n-\tfile delete $filename\n-    }\n-\n-    set allow_blank_lines $save_allow_blank_lines\n-\n-    # All done.\n-    dg-finish\n-}\n-\n-rust-do-test\n-"}, {"sha": "ee844a60182a8957e7830e86201bb1e1ec449ff8", "filename": "gcc/testsuite/rust.test/xfail_compile/arrays1.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Farrays1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Farrays1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Farrays1.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "patch": "@@ -0,0 +1,5 @@\n+fn main() {\n+    let xs: [i32; 5] = [1, 2, 3, 4, 5];\n+    let a: bool = xs[0]; // { dg-error \"expected .bool. got .i32.\" }\n+    // { dg-error \"failure in setting up let stmt type\" \"\" { target { *-*-* } } .-1 }\n+}"}, {"sha": "69d362d8c8f0fa95abb4d9ba8bcb270db24f2d07", "filename": "gcc/testsuite/rust.test/xfail_compile/arrays2.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Farrays2.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Farrays2.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Farrays2.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "patch": "@@ -0,0 +1,5 @@\n+fn main() {\n+    let array: [i32; 5] = [1, 2, 3]; // { dg-error \"mismatch in array capacity\" }\n+    // { dg-error \"expected ..i32:5.. got ..i32:3..\" \"\" { target { *-*-* } } .-1 }\n+    // { dg-error \"failure in setting up let stmt type\" \"\" { target { *-*-* } } .-2 }\n+}"}, {"sha": "336661ee028dfb2a5d45fc9d2aa58de08e2940b0", "filename": "gcc/testsuite/rust.test/xfail_compile/bad_type1.rs", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fbad_type1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fbad_type1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fbad_type1.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "patch": "@@ -0,0 +1,4 @@\n+fn main() {\n+    let logical: bool = 123; // { dg-error \"expected .bool. got .<integer>.\" }\n+    // { dg-error \"failure in setting up let stmt type\" \"\" { target { *-*-* } } .-1 }\n+}"}, {"sha": "b596189061edb77d4c3014df8b6d22ee2a8db4a6", "filename": "gcc/testsuite/rust.test/xfail_compile/bad_type2.rs", "status": "renamed", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fbad_type2.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fbad_type2.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fbad_type2.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "patch": "@@ -8,7 +8,8 @@ fn main() {\n \n     let mut x;\n     x = 1;\n-    x = true;\n+    x = true; // { dg-error \"expected .<integer>. got .bool.\" }\n+    // { dg-error \"type resolution failure in AssignmentExpr\" \"\" { target { *-*-* } } .-1 }\n \n     let call_test = test(1);\n }", "previous_filename": "gcc/testsuite/rust.test/fail_compilation/bad_type2.rs"}, {"sha": "be3c9e8ee68bf3f32b10c1cac2542c01b09963ab", "filename": "gcc/testsuite/rust.test/xfail_compile/break1.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fbreak1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fbreak1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fbreak1.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "patch": "@@ -0,0 +1,7 @@\n+// { dg-excess-errors \"Noisy error and debug\" }\n+fn main() { // { dg-error \"expected .... got .<tyty::error>.\" }\n+    let a;\n+    a = 1;\n+    break a; // { dg-error \"cannot `break` outside of a loop\"\n+    // { dg-error \"failed to type resolve expression\" \"\" { target { *-*-* } } .-1 }\n+}"}, {"sha": "da7fa77a73f532fbc0972627e64158f5e239df4b", "filename": "gcc/testsuite/rust.test/xfail_compile/break2.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fbreak2.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fbreak2.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fbreak2.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "patch": "@@ -0,0 +1,16 @@\n+// { dg-excess-errors \"Noisy error and debug\" }\n+fn main() {\n+    let mut a = 1;\n+    let mut b = 1;\n+\n+    let mut c;\n+    while b > 10 {\n+        if (b == 2) {\n+            break b;  // { dg-error \"can only break with a value inside `loop`\"\n+            // { dg-error \"failed to type resolve expression\" \"\" { target { *-*-* } } .-1 }\n+        }\n+        c = a + b;\n+        a = b;\n+        b = c;\n+    }\n+}"}, {"sha": "de48ef265b45d328fba66a820bfdc5f4a7a91dea", "filename": "gcc/testsuite/rust.test/xfail_compile/continue1.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fcontinue1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fcontinue1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fcontinue1.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "patch": "@@ -0,0 +1,11 @@\n+// { dg-excess-errors \"Noisy error and debug\" }\n+fn main() {\n+    let mut a = 1;\n+    let mut b = 1;\n+\n+    let _fib = {\n+        continue; // { dg-error \"cannot `continue` outside of a loop\" }\n+        // { dg-error \"failed to type resolve expression\" \"\" { target { *-*-* } } .-1 }\n+        123\n+    };\n+}"}, {"sha": "7c1ce52fc86fede84a7a62837c3d30646cbdc86d", "filename": "gcc/testsuite/rust.test/xfail_compile/func1.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Ffunc1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Ffunc1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Ffunc1.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "patch": "@@ -0,0 +1,9 @@\n+fn test(x: i32) -> bool { // { dg-error \"expected .bool. got .<tyty::error>..\" }\n+    return x + 1; // { dg-error \"expected .bool. got .i32.\" }\n+}\n+\n+fn main() {\n+    let an_integer = 5;\n+\n+    let call_test = test(1);\n+}"}, {"sha": "1a8a30bf4d1c474e11118dd1cb5fbfd403a6fee4", "filename": "gcc/testsuite/rust.test/xfail_compile/func2.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Ffunc2.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Ffunc2.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Ffunc2.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "patch": "@@ -0,0 +1,10 @@\n+// { dg-excess-errors \"Noisy error and debug\" }\n+fn test(a: i32, b: i32) -> i32 {\n+    a + b\n+}\n+\n+fn main() {\n+    let a = test(1); // { dg-error \"unexpected number of arguments 1 expected 2\"\n+    // { dg-error \"failed to lookup type to CallExpr\" \"\" { target { *-*-* } } .-1 }\n+    // { dg-error \"failed to type resolve expression\" \"\" { target { *-*-* } } .-2 }\n+}"}, {"sha": "6cedf8e5da373f5166bf7b90aa15d1eb1e7c15ac", "filename": "gcc/testsuite/rust.test/xfail_compile/func3.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Ffunc3.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Ffunc3.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Ffunc3.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "patch": "@@ -0,0 +1,7 @@\n+fn test(a: i32, b: i32) -> i32 {\n+    a + b\n+}\n+\n+fn main() {\n+    let a = test(1, true); // { dg-error \"expected .i32. got .bool.\" }\n+}"}, {"sha": "7f2493ded45de520e8c648c1dc8be254436da9cb", "filename": "gcc/testsuite/rust.test/xfail_compile/generics1.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fgenerics1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fgenerics1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fgenerics1.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "patch": "@@ -0,0 +1,11 @@\n+// { dg-error \"expected .i32. got .i8.\" \"\" { target { *-*-* } } 0 }\n+\n+struct GenericStruct<T>(T, usize);\n+\n+fn main() {\n+    let a2: GenericStruct<i8>;\n+    a2 = GenericStruct::<_>(1, 456);\n+\n+    let b2: i32 = a2.0; // { dg-error \"failure in setting up let stmt type\" }\n+    let c2: usize = a2.1;\n+}"}, {"sha": "d7a1b50ff3215161e9e9f64e4a437fd778ea055f", "filename": "gcc/testsuite/rust.test/xfail_compile/generics2.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fgenerics2.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fgenerics2.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fgenerics2.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "patch": "@@ -0,0 +1,11 @@\n+// { dg-error \"expected .i32. got .i8.\" \"\" { target { *-*-* } } 0 }\n+\n+struct GenericStruct<T>(T, usize);\n+\n+fn main() {\n+    let a2: GenericStruct<i8>;\n+    a2 = GenericStruct(1, 456);\n+\n+    let b2: i32 = a2.0; // { dg-error \"failure in setting up let stmt type\" }\n+    let c2: usize = a2.1;\n+}"}, {"sha": "14bcc59bd139f555f7e72cb7767047b2c5a80165", "filename": "gcc/testsuite/rust.test/xfail_compile/generics3.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fgenerics3.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fgenerics3.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fgenerics3.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "patch": "@@ -0,0 +1,10 @@\n+// { dg-error \"expected .i32. got .i8.\" \"\" { target { *-*-* } } 0 }\n+struct GenericStruct<T>(T, usize);\n+\n+fn main() {\n+    let a2;\n+    a2 = GenericStruct::<i8>(1, 456);\n+\n+    let b2: i32 = a2.0; // { dg-error \"failure in setting up let stmt type\" }\n+    let c2: usize = a2.1;\n+}"}, {"sha": "80978323346e7a67f03f172942d41ca96626de73", "filename": "gcc/testsuite/rust.test/xfail_compile/generics4.rs", "status": "renamed", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fgenerics4.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fgenerics4.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fgenerics4.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "patch": "@@ -1,3 +1,4 @@\n+// { dg-excess-errors \"Noisy error and debug\" }\n struct GenericStruct<T>(T, usize);\n \n fn main() {", "previous_filename": "gcc/testsuite/rust.test/fail_compilation/generics4.rs"}, {"sha": "5b03bd9e3bbe89b7759eb9bed487857ecba1ff6f", "filename": "gcc/testsuite/rust.test/xfail_compile/generics5.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fgenerics5.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fgenerics5.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fgenerics5.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "patch": "@@ -0,0 +1,13 @@\n+// Current errors are too noisy to match specific ones.\n+// { dg-error \"failed to resolve TypePath: T\" \"\" { target { *-*-* } } 0 }\n+// { dg-error \"unresolved type\" \"\" { target { *-*-* } } 0 }\n+\n+struct GenericStruct<T>(T, usize);\n+\n+fn main() {\n+    let a2;\n+    a2 = GenericStruct::<i8, T>(1, 456);\n+\n+    let b2: i32 = a2.0;\n+    let c2: usize = a2.1;\n+}"}, {"sha": "d78c1b759cb0336b916acdc9bb6c8f20e6a0de3b", "filename": "gcc/testsuite/rust.test/xfail_compile/immutable1.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fimmutable1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fimmutable1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fimmutable1.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "patch": "@@ -0,0 +1,5 @@\n+static x: i32 = 3;\n+\n+fn main() {\n+    x = 1; /* { dg-error \"cannot assign to immutable\" } */\n+}"}, {"sha": "86e70fe29dd36c921a8da191b93042545cd73270", "filename": "gcc/testsuite/rust.test/xfail_compile/immutable2.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fimmutable2.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fimmutable2.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fimmutable2.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "patch": "@@ -0,0 +1,5 @@\n+const TEST_CONST: i32 = 10;\n+\n+fn main() {\n+    TEST_CONST = 1; // { dg-error \"cannot assign to immutable\" }\n+}"}, {"sha": "fb60280d9098a4d88a43b8b3b152ea2d008cc459", "filename": "gcc/testsuite/rust.test/xfail_compile/immutable3.rs", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fimmutable3.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fimmutable3.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fimmutable3.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "patch": "@@ -0,0 +1,4 @@\n+fn main() {\n+    let a = 1;\n+    a += 2; // { dg-error \"cannot assign to immutable\" }\n+}"}, {"sha": "fb14554ab30ec04ec1de0d4ef2fff71e1360b64d", "filename": "gcc/testsuite/rust.test/xfail_compile/immutable4.rs", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fimmutable4.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fimmutable4.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fimmutable4.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "patch": "@@ -0,0 +1,4 @@\n+fn main() {\n+    let array: [i32; 3] = [0; 3];\n+    array[0] = 1; // { dg-error \"cannot assign to immutable\" }\n+}"}, {"sha": "db23609171fd0e8f0aa0518ba3e92b0834901690", "filename": "gcc/testsuite/rust.test/xfail_compile/immutable5.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fimmutable5.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fimmutable5.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fimmutable5.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "patch": "@@ -2,5 +2,5 @@ struct Foo(f32, i32);\n \n fn main() {\n     let a = Foo(1, 2);\n-    a.0 = 22;\n+    a.0 = 22; // { dg-error \"cannot assign to immutable\" }\n }", "previous_filename": "gcc/testsuite/rust.test/fail_compilation/immutable5.rs"}, {"sha": "37eb562597fc2b88ce316b1a15961ad9d36b281f", "filename": "gcc/testsuite/rust.test/xfail_compile/implicit_returns_err1.rs", "status": "renamed", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fimplicit_returns_err1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fimplicit_returns_err1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fimplicit_returns_err1.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "patch": "@@ -1,3 +1,5 @@\n+// { dg-error \"expected .* got .*\" \"\" { target { *-*-* } } 0 }\n+\n fn test(x: i32) -> i32 {\n     if x > 1 {\n         1", "previous_filename": "gcc/testsuite/rust.test/fail_compilation/implicit_returns_err1.rs"}, {"sha": "3b9a40246512cd46f04fe5578cd29ed9ab9f11d9", "filename": "gcc/testsuite/rust.test/xfail_compile/implicit_returns_err2.rs", "status": "renamed", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fimplicit_returns_err2.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fimplicit_returns_err2.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fimplicit_returns_err2.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "patch": "@@ -1,3 +1,5 @@\n+// { dg-error \"expected .* got .*\" \"\" { target { *-*-* } } 0 }\n+\n fn test(x: i32) -> i32 {\n     return 1;\n     true", "previous_filename": "gcc/testsuite/rust.test/fail_compilation/implicit_returns_err2.rs"}, {"sha": "2a64fcf9f4853378b5c87060302f877a06305b79", "filename": "gcc/testsuite/rust.test/xfail_compile/implicit_returns_err3.rs", "status": "renamed", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fimplicit_returns_err3.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fimplicit_returns_err3.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fimplicit_returns_err3.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "patch": "@@ -1,3 +1,4 @@\n+// { dg-error \"expected .* got .*\" \"\" { target { *-*-* } } 0 }\n fn test(x: i32) -> i32 {\n     if x > 1 {\n         1", "previous_filename": "gcc/testsuite/rust.test/fail_compilation/implicit_returns_err3.rs"}, {"sha": "d4ed4d94b48fea4e5ee7b6502bf5d86f7900b5a5", "filename": "gcc/testsuite/rust.test/xfail_compile/missing_return1.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fmissing_return1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fmissing_return1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fmissing_return1.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "patch": "@@ -0,0 +1,6 @@\n+// { dg-error \"expected .* got .*\" \"\" { target { *-*-* } } 0 }\n+fn test1() -> i32 {}\n+\n+fn main() {\n+    let call1 = test1();\n+}"}, {"sha": "cc25b76a7cd53c1a7cd74897569e0d3ef3b39c02", "filename": "gcc/testsuite/rust.test/xfail_compile/redef_error1.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fredef_error1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fredef_error1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fredef_error1.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "patch": "@@ -0,0 +1,9 @@\n+// { dg-excess-errors \"Noisy error and debug\" }\n+struct S1 { // { dg-error \"was defined here\" }\n+    x: f64,\n+    y: f64,\n+}\n+\n+struct S1(i32, bool); // { dg-error \"redefined multiple times\" }\n+\n+fn main() {}"}, {"sha": "3e7e62ff7d54e7cbdc26176f9061efc191d699ab", "filename": "gcc/testsuite/rust.test/xfail_compile/redef_error2.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fredef_error2.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fredef_error2.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fredef_error2.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "patch": "@@ -0,0 +1,5 @@\n+// { dg-excess-errors \"Noisy error and debug\" }\n+const TEST: i32 = 2;  // { dg-error \"was defined here\" }\n+const TEST: f32 = 3.0;  // { dg-error \"redefined multiple times\" }\n+\n+fn main() {}"}, {"sha": "6be31e6bc6ab6d13eb88bc28168ae6ee5b3e82d8", "filename": "gcc/testsuite/rust.test/xfail_compile/redef_error3.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fredef_error3.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fredef_error3.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fredef_error3.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "patch": "@@ -0,0 +1,10 @@\n+// { dg-excess-errors \"Noisy error and debug\" }\n+fn test() -> bool {  // { dg-error \"was defined here\" }\n+    true\n+}\n+\n+fn test() -> i32 { // { dg-error \"redefined multiple times\" }\n+    123\n+}\n+\n+fn main() {}"}, {"sha": "21f3415d68d9cb527cc5ac45537488ecb40b7191", "filename": "gcc/testsuite/rust.test/xfail_compile/redef_error4.rs", "status": "renamed", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fredef_error4.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fredef_error4.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fredef_error4.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "patch": "@@ -1,15 +1,17 @@\n+// { dg-excess-errors \"Noisy error and debug\" }\n+\n struct Foo(i32, bool);\n \n impl Foo {\n     fn new(a: i32, b: bool) -> Foo {\n         Foo(a, b)\n     }\n \n-    fn test() -> i32 {\n+    fn test() -> i32 { // { dg-error \"was defined here\" }\n         test()\n     }\n \n-    fn test() -> bool {\n+    fn test() -> bool { // { dg-error \"redefined multiple times\" }\n         true\n     }\n }", "previous_filename": "gcc/testsuite/rust.test/fail_compilation/redef_error4.rs"}, {"sha": "4b3c7af5d899f21d12bfcb8a33996a6a275d23fe", "filename": "gcc/testsuite/rust.test/xfail_compile/redef_error5.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fredef_error5.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fredef_error5.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fredef_error5.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "patch": "@@ -0,0 +1,9 @@\n+// { dg-excess-errors \"Noisy error and debug\" }\n+struct Foo(i32, bool);\n+\n+impl Foo {\n+    const TEST: i32 = 123; // { dg-error \"was defined here\"  }\n+    const TEST: bool = false; // { dg-error \"redefined multiple times\"  }\n+}\n+\n+fn main() {}"}, {"sha": "35779bb8a4374464b737dfc21243f15a6a792ef3", "filename": "gcc/testsuite/rust.test/xfail_compile/shadow1.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fshadow1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fshadow1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fshadow1.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "patch": "@@ -0,0 +1,7 @@\n+// { dg-excess-errors \"Noisy error and debug\" }\n+fn main() {\n+    let mut x = 5;\n+    let mut x;\n+    x = true;\n+    x = x + 2; // { dg-error \"cannot apply this operator to types bool and <integer>\"  }\n+}"}, {"sha": "b3b5751c93227f4c933f3b22b7618f3d9bc89531", "filename": "gcc/testsuite/rust.test/xfail_compile/static_var1.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fstatic_var1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fstatic_var1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fstatic_var1.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "patch": "@@ -0,0 +1,5 @@\n+static x = 3; // { dg-error \"expecting ':' but '=' found\" }\n+\n+fn main() {// { dg-error \"failed to parse item in crate\" }\n+    let y = x +1;\n+}"}, {"sha": "87ed4438b55a3ef05bf625d9d7772149ee003675", "filename": "gcc/testsuite/rust.test/xfail_compile/struct_init1.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fstruct_init1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fstruct_init1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fstruct_init1.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "patch": "@@ -0,0 +1,9 @@\n+struct Foo {\n+    a: f32,\n+    b: f32,\n+}\n+\n+fn main() {\n+    let a = Foo { 0: 10.0, 1: 20.0 }; // { dg-error \"failed to resolve type for field\" }\n+    // { dg-error \"unknown field\" \"\" { target { *-*-* } } .-1 }\n+}"}, {"sha": "84179b137272a5d2c9c07fffad0cf799cb198574", "filename": "gcc/testsuite/rust.test/xfail_compile/tuple1.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Ftuple1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Ftuple1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Ftuple1.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "patch": "@@ -0,0 +1,5 @@\n+fn main() {\n+    let a: (i32, bool) = (123, 123); // { dg-error \"expected .bool. got .<integer>.\" }\n+    let b;\n+    b = (456, 5f32);\n+}"}, {"sha": "5e45c1f0a7cf0f6cd56ec347cb46d5eb0fd4dd8a", "filename": "gcc/testsuite/rust.test/xfail_compile/tuple_struct1.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Ftuple_struct1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Ftuple_struct1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Ftuple_struct1.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "patch": "@@ -0,0 +1,10 @@\n+struct Foo {\n+    one: i32,\n+    two: i32,\n+}\n+\n+fn main() {\n+    let a = Foo(1, 2); // { dg-error \"expected function, tuple struct or tuple variant, found struct `Foo`\" }\n+    // { dg-error \"failed to lookup type to CallExpr\" \"\" { target { *-*-* } } .-1 }\n+    // { dg-error \"failed to type resolve expression\" \"\" { target { *-*-* } } .-2 }\n+}"}, {"sha": "8e2f74b4799b72624b0bc4b66671dcab276b879d", "filename": "gcc/testsuite/rust.test/xfail_compile/tuple_struct2.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Ftuple_struct2.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Ftuple_struct2.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Ftuple_struct2.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "patch": "@@ -0,0 +1,7 @@\n+struct Bar(i32, i32, bool);\n+\n+fn main() {\n+    let a = Bar(1, 2); // { dg-error \"unexpected number of arguments 2 expected 3\" }\n+    // { dg-error \"failed to lookup type to CallExpr\" \"\" { target { *-*-* } } .-1 }\n+    // { dg-error \"failed to type resolve expression\" \"\" { target { *-*-* } } .-2 }\n+}"}, {"sha": "c52a610ff80890c27a2c07b5ab2d30e14c0bb0f0", "filename": "gcc/testsuite/rust.test/xfail_compile/tuple_struct3.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Ftuple_struct3.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Ftuple_struct3.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Ftuple_struct3.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "patch": "@@ -0,0 +1,5 @@\n+struct Foo(i32, i32, bool);\n+\n+fn main() {\n+    let c = Foo(1, 2f32, true); // { dg-error \"expected .i32. got .f32.\" }\n+}"}, {"sha": "1acb8530266efe7ab5187b6da42ffcdd0a9bdc71", "filename": "gcc/testsuite/rust.test/xfail_compile/unary_negation.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Funary_negation.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Funary_negation.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Funary_negation.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "patch": "@@ -0,0 +1,10 @@\n+// { dg-excess-errors \"Noisy error and debug\" }\n+\n+fn main() {\n+    let a: i32 = -1;\n+    let b: i32 = 3 - -1;\n+    let c: bool = !false;\n+    let d: i32 = !3;\n+\n+    let e: f32 = -true; // // { dg-error \"cannot apply unary - to bool\" }\n+}"}, {"sha": "1620b403fb17830eaf47904d28bfe111f08226aa", "filename": "gcc/testsuite/rust.test/xfail_compile/unary_not.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Funary_not.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Funary_not.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Funary_not.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "patch": "@@ -0,0 +1,9 @@\n+// { dg-excess-errors \"Noisy error and debug\" }\n+fn main() {\n+    let a: i32 = -1;\n+    let b: i32 = 3 - -1;\n+    let c: bool = !false;\n+    let d: i32 = !3;\n+\n+    let e: f32 = !5f32; // { dg-error \"cannot apply unary ! to f32\" }\n+}"}, {"sha": "8c1278921f7b73b46716a54cdb1dcf85240759ae", "filename": "gcc/testsuite/rust.test/xfail_compile/usize1.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fusize1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fusize1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fusize1.rs?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "patch": "@@ -0,0 +1,5 @@\n+fn main() {\n+    let a = [1, 2, 3];\n+    let b: u32 = 1;\n+    let c = a[b]; // { dg-error \"expected .usize. got .u32.\" }\n+}"}, {"sha": "68453a18e1efaa91b9a8533f88851ecfb4df68de", "filename": "gcc/testsuite/rust.test/xfail_compile/xfail_compile.exp", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fxfail_compile.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f1f1d7211e555ae7a22b21723ced7610fa5657/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fxfail_compile.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fxfail_compile.exp?ref=f9f1f1d7211e555ae7a22b21723ced7610fa5657", "patch": "@@ -0,0 +1,36 @@\n+# Copyright (C) 2021 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+# \n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+# \n+# You should have received a copy of the GNU General Public License\n+# along with GCC; see the file COPYING3.  If not see\n+# <http://www.gnu.org/licenses/>.\n+\n+#\n+# Rust test suite.\n+# These tests are expected to raise an error in the frontend\n+#\n+\n+# Load support procs.\n+load_lib rust-dg.exp\n+\n+# Initialize `dg'.\n+dg-init\n+\n+# Main loop.\n+set saved-dg-do-what-default ${dg-do-what-default}\n+\n+set dg-do-what-default \"compile\"\n+dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.rs]] \"\" \"-w\"\n+set dg-do-what-default ${saved-dg-do-what-default}\n+\n+# All done.\n+dg-finish"}]}