{"sha": "473a05b9508468012027dfe4323bb4afb959926e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDczYTA1Yjk1MDg0NjgwMTIwMjdkZmU0MzIzYmI0YWZiOTU5OTI2ZQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-06-04T18:36:38Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-06-04T18:36:38Z"}, "message": "entered into RCS\n\nFrom-SVN: r1155", "tree": {"sha": "cd5eeb58cf8ba7190e85c55a332f30812ed9a744", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cd5eeb58cf8ba7190e85c55a332f30812ed9a744"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/473a05b9508468012027dfe4323bb4afb959926e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/473a05b9508468012027dfe4323bb4afb959926e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/473a05b9508468012027dfe4323bb4afb959926e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/473a05b9508468012027dfe4323bb4afb959926e/comments", "author": null, "committer": null, "parents": [{"sha": "63a1f8345fa12c0eb561c926147a266723ef797a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63a1f8345fa12c0eb561c926147a266723ef797a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/63a1f8345fa12c0eb561c926147a266723ef797a"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "7aee51231aaf87126311698b6b451a6c7db12808", "filename": "gcc/c-lex.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/473a05b9508468012027dfe4323bb4afb959926e/gcc%2Fc-lex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/473a05b9508468012027dfe4323bb4afb959926e/gcc%2Fc-lex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-lex.c?ref=473a05b9508468012027dfe4323bb4afb959926e", "patch": "@@ -1602,7 +1602,7 @@ yylex ()\n \t      }\n #endif\n \n-\t    if (!int_fits_type_p (yylval.ttype, type))\n+\t    if (!flag_traditional && !int_fits_type_p (yylval.ttype, type))\n \t      pedwarn (\"integer constant out of range\");\n \n \t    TREE_TYPE (yylval.ttype) = type;"}]}