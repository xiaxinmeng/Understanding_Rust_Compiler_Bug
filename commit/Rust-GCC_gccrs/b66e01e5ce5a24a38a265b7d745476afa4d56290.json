{"sha": "b66e01e5ce5a24a38a265b7d745476afa4d56290", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjY2ZTAxZTVjZTVhMjRhMzhhMjY1YjdkNzQ1NDc2YWZhNGQ1NjI5MA==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@kss-loka.si", "date": "2006-10-06T22:24:04Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2006-10-06T22:24:04Z"}, "message": "sync-2.c: New test.\n\n\t* gcc.c-torture/compile/sync-2.c: New test.\n\nFrom-SVN: r117519", "tree": {"sha": "6048a934abd34bde8ca17a017ad1cb71434e02eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6048a934abd34bde8ca17a017ad1cb71434e02eb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b66e01e5ce5a24a38a265b7d745476afa4d56290", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b66e01e5ce5a24a38a265b7d745476afa4d56290", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b66e01e5ce5a24a38a265b7d745476afa4d56290", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b66e01e5ce5a24a38a265b7d745476afa4d56290/comments", "author": null, "committer": null, "parents": [{"sha": "f5b2d77b6c93b7a98adcffedc042d44e30055341", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5b2d77b6c93b7a98adcffedc042d44e30055341", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f5b2d77b6c93b7a98adcffedc042d44e30055341"}], "stats": {"total": 170, "additions": 170, "deletions": 0}, "files": [{"sha": "608682795cdbb44370b4cc5016a7d2393a0f86f9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b66e01e5ce5a24a38a265b7d745476afa4d56290/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b66e01e5ce5a24a38a265b7d745476afa4d56290/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b66e01e5ce5a24a38a265b7d745476afa4d56290", "patch": "@@ -1,3 +1,7 @@\n+2006-10-06  Uros Bizjak  <uros@kss-loka.si>\n+\n+\t* gcc.c-torture/compile/sync-2.c: New test.\n+\n 2006-10-06  Tobias Schlueter  <tobias.schlueter@physik.uni-muenchen.de>\n \n \t* gfortran.dg/actual_array_substr_2.f90: Remove '\\r's from"}, {"sha": "299aa09741d5e4d7532404d4cae4d6294058c905", "filename": "gcc/testsuite/gcc.c-torture/compile/sync-2.c", "status": "added", "additions": 166, "deletions": 0, "changes": 166, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b66e01e5ce5a24a38a265b7d745476afa4d56290/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fsync-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b66e01e5ce5a24a38a265b7d745476afa4d56290/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fsync-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fsync-2.c?ref=b66e01e5ce5a24a38a265b7d745476afa4d56290", "patch": "@@ -0,0 +1,166 @@\n+/* Validate that each of the __sync builtins compiles.  This won't \n+   necessarily link, since the target might not support the builtin,\n+   so this may result in external library calls.  */\n+\n+signed char sc;\n+unsigned char uc;\n+signed short ss;\n+unsigned short us;\n+signed int si;\n+unsigned int ui;\n+signed long sl;\n+unsigned long ul;\n+signed long long sll;\n+unsigned long long ull;\n+\n+void test_op_ignore (void)\n+{\n+  (void) __sync_fetch_and_add (&sc, -1);\n+  (void) __sync_fetch_and_add (&uc, -1);\n+  (void) __sync_fetch_and_add (&ss, -1);\n+  (void) __sync_fetch_and_add (&us, -1);\n+  (void) __sync_fetch_and_add (&si, -1);\n+  (void) __sync_fetch_and_add (&ui, -1);\n+  (void) __sync_fetch_and_add (&sl, -1);\n+  (void) __sync_fetch_and_add (&ul, -1);\n+  (void) __sync_fetch_and_add (&sll, -1);\n+  (void) __sync_fetch_and_add (&ull, -1);\n+\n+  (void) __sync_fetch_and_sub (&sc, -1);\n+  (void) __sync_fetch_and_sub (&uc, -1);\n+  (void) __sync_fetch_and_sub (&ss, -1);\n+  (void) __sync_fetch_and_sub (&us, -1);\n+  (void) __sync_fetch_and_sub (&si, -1);\n+  (void) __sync_fetch_and_sub (&ui, -1);\n+  (void) __sync_fetch_and_sub (&sl, -1);\n+  (void) __sync_fetch_and_sub (&ul, -1);\n+  (void) __sync_fetch_and_sub (&sll, -1);\n+  (void) __sync_fetch_and_sub (&ull, -1);\n+\n+  (void) __sync_fetch_and_or (&sc, -1);\n+  (void) __sync_fetch_and_or (&uc, -1);\n+  (void) __sync_fetch_and_or (&ss, -1);\n+  (void) __sync_fetch_and_or (&us, -1);\n+  (void) __sync_fetch_and_or (&si, -1);\n+  (void) __sync_fetch_and_or (&ui, -1);\n+  (void) __sync_fetch_and_or (&sl, -1);\n+  (void) __sync_fetch_and_or (&ul, -1);\n+  (void) __sync_fetch_and_or (&sll, -1);\n+  (void) __sync_fetch_and_or (&ull, -1);\n+\n+  (void) __sync_fetch_and_xor (&sc, -1);\n+  (void) __sync_fetch_and_xor (&uc, -1);\n+  (void) __sync_fetch_and_xor (&ss, -1);\n+  (void) __sync_fetch_and_xor (&us, -1);\n+  (void) __sync_fetch_and_xor (&si, -1);\n+  (void) __sync_fetch_and_xor (&ui, -1);\n+  (void) __sync_fetch_and_xor (&sl, -1);\n+  (void) __sync_fetch_and_xor (&ul, -1);\n+  (void) __sync_fetch_and_xor (&sll, -1);\n+  (void) __sync_fetch_and_xor (&ull, -1);\n+\n+  (void) __sync_fetch_and_and (&sc, -1);\n+  (void) __sync_fetch_and_and (&uc, -1);\n+  (void) __sync_fetch_and_and (&ss, -1);\n+  (void) __sync_fetch_and_and (&us, -1);\n+  (void) __sync_fetch_and_and (&si, -1);\n+  (void) __sync_fetch_and_and (&ui, -1);\n+  (void) __sync_fetch_and_and (&sl, -1);\n+  (void) __sync_fetch_and_and (&ul, -1);\n+  (void) __sync_fetch_and_and (&sll, -1);\n+  (void) __sync_fetch_and_and (&ull, -1);\n+\n+  (void) __sync_fetch_and_nand (&sc, -1);\n+  (void) __sync_fetch_and_nand (&uc, -1);\n+  (void) __sync_fetch_and_nand (&ss, -1);\n+  (void) __sync_fetch_and_nand (&us, -1);\n+  (void) __sync_fetch_and_nand (&si, -1);\n+  (void) __sync_fetch_and_nand (&ui, -1);\n+  (void) __sync_fetch_and_nand (&sl, -1);\n+  (void) __sync_fetch_and_nand (&ul, -1);\n+  (void) __sync_fetch_and_nand (&sll, -1);\n+  (void) __sync_fetch_and_nand (&ull, -1);\n+}\n+\n+void test_fetch_and_op (void)\n+{\n+  sc = __sync_fetch_and_add (&sc, -11);\n+  uc = __sync_fetch_and_add (&uc, -11);\n+  ss = __sync_fetch_and_add (&ss, -11);\n+  us = __sync_fetch_and_add (&us, -11);\n+  si = __sync_fetch_and_add (&si, -11);\n+  ui = __sync_fetch_and_add (&ui, -11);\n+  sl = __sync_fetch_and_add (&sl, -11);\n+  ul = __sync_fetch_and_add (&ul, -11);\n+  sll = __sync_fetch_and_add (&sll, -11);\n+  ull = __sync_fetch_and_add (&ull, -11);\n+\n+  sc = __sync_fetch_and_sub (&sc, -11);\n+  uc = __sync_fetch_and_sub (&uc, -11);\n+  ss = __sync_fetch_and_sub (&ss, -11);\n+  us = __sync_fetch_and_sub (&us, -11);\n+  si = __sync_fetch_and_sub (&si, -11);\n+  ui = __sync_fetch_and_sub (&ui, -11);\n+  sl = __sync_fetch_and_sub (&sl, -11);\n+  ul = __sync_fetch_and_sub (&ul, -11);\n+  sll = __sync_fetch_and_sub (&sll, -11);\n+  ull = __sync_fetch_and_sub (&ull, -11);\n+\n+  sc = __sync_fetch_and_or (&sc, -11);\n+  uc = __sync_fetch_and_or (&uc, -11);\n+  ss = __sync_fetch_and_or (&ss, -11);\n+  us = __sync_fetch_and_or (&us, -11);\n+  si = __sync_fetch_and_or (&si, -11);\n+  ui = __sync_fetch_and_or (&ui, -11);\n+  sl = __sync_fetch_and_or (&sl, -11);\n+  ul = __sync_fetch_and_or (&ul, -11);\n+  sll = __sync_fetch_and_or (&sll, -11);\n+  ull = __sync_fetch_and_or (&ull, -11);\n+\n+  sc = __sync_fetch_and_xor (&sc, -11);\n+  uc = __sync_fetch_and_xor (&uc, -11);\n+  ss = __sync_fetch_and_xor (&ss, -11);\n+  us = __sync_fetch_and_xor (&us, -11);\n+  si = __sync_fetch_and_xor (&si, -11);\n+  ui = __sync_fetch_and_xor (&ui, -11);\n+  sl = __sync_fetch_and_xor (&sl, -11);\n+  ul = __sync_fetch_and_xor (&ul, -11);\n+  sll = __sync_fetch_and_xor (&sll, -11);\n+  ull = __sync_fetch_and_xor (&ull, -11);\n+\n+  sc = __sync_fetch_and_and (&sc, -11);\n+  uc = __sync_fetch_and_and (&uc, -11);\n+  ss = __sync_fetch_and_and (&ss, -11);\n+  us = __sync_fetch_and_and (&us, -11);\n+  si = __sync_fetch_and_and (&si, -11);\n+  ui = __sync_fetch_and_and (&ui, -11);\n+  sl = __sync_fetch_and_and (&sl, -11);\n+  ul = __sync_fetch_and_and (&ul, -11);\n+  sll = __sync_fetch_and_and (&sll, -11);\n+  ull = __sync_fetch_and_and (&ull, -11);\n+\n+  sc = __sync_fetch_and_nand (&sc, -11);\n+  uc = __sync_fetch_and_nand (&uc, -11);\n+  ss = __sync_fetch_and_nand (&ss, -11);\n+  us = __sync_fetch_and_nand (&us, -11);\n+  si = __sync_fetch_and_nand (&si, -11);\n+  ui = __sync_fetch_and_nand (&ui, -11);\n+  sl = __sync_fetch_and_nand (&sl, -11);\n+  ul = __sync_fetch_and_nand (&ul, -11);\n+  sll = __sync_fetch_and_nand (&sll, -11);\n+  ull = __sync_fetch_and_nand (&ull, -11);\n+}\n+\n+void test_lock (void)\n+{\n+  sc = __sync_lock_test_and_set (&sc, -1);\n+  uc = __sync_lock_test_and_set (&uc, -1);\n+  ss = __sync_lock_test_and_set (&ss, -1);\n+  us = __sync_lock_test_and_set (&us, -1);\n+  si = __sync_lock_test_and_set (&si, -1);\n+  ui = __sync_lock_test_and_set (&ui, -1);\n+  sl = __sync_lock_test_and_set (&sl, -1);\n+  ul = __sync_lock_test_and_set (&ul, -1);\n+  sll = __sync_lock_test_and_set (&sll, -1);\n+  ull = __sync_lock_test_and_set (&ull, -1);\n+}"}]}