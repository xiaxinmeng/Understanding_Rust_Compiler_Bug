{"sha": "2abd924f91e54a5229efb2c3bb5fb247059a5b37", "node_id": "C_kwDOANBUbNoAKDJhYmQ5MjRmOTFlNTRhNTIyOWVmYjJjM2JiNWZiMjQ3MDU5YTViMzc", "commit": {"author": {"name": "Jeff Law", "email": "jeffreyalaw@gmail.com", "date": "2021-11-09T04:23:34Z"}, "committer": {"name": "Jeff Law", "email": "jeffreyalaw@gmail.com", "date": "2021-11-09T04:23:34Z"}, "message": "Minor optimization of variable bit testing\n\ngcc/\n\t* match.pd: New pattern to simplify (1 << n) & M ==/!= 0 for M\n\tbeing a power of 2.\n\ngcc/testsuite\n\t* gcc.dg/tree-ssa/bittest.c: New test", "tree": {"sha": "4285b2f2bfbdc45220900bf3fc86a536d76a7fbc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4285b2f2bfbdc45220900bf3fc86a536d76a7fbc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2abd924f91e54a5229efb2c3bb5fb247059a5b37", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2abd924f91e54a5229efb2c3bb5fb247059a5b37", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2abd924f91e54a5229efb2c3bb5fb247059a5b37", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2abd924f91e54a5229efb2c3bb5fb247059a5b37/comments", "author": {"login": "JeffreyALaw", "id": 14062506, "node_id": "MDQ6VXNlcjE0MDYyNTA2", "avatar_url": "https://avatars.githubusercontent.com/u/14062506?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JeffreyALaw", "html_url": "https://github.com/JeffreyALaw", "followers_url": "https://api.github.com/users/JeffreyALaw/followers", "following_url": "https://api.github.com/users/JeffreyALaw/following{/other_user}", "gists_url": "https://api.github.com/users/JeffreyALaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/JeffreyALaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JeffreyALaw/subscriptions", "organizations_url": "https://api.github.com/users/JeffreyALaw/orgs", "repos_url": "https://api.github.com/users/JeffreyALaw/repos", "events_url": "https://api.github.com/users/JeffreyALaw/events{/privacy}", "received_events_url": "https://api.github.com/users/JeffreyALaw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JeffreyALaw", "id": 14062506, "node_id": "MDQ6VXNlcjE0MDYyNTA2", "avatar_url": "https://avatars.githubusercontent.com/u/14062506?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JeffreyALaw", "html_url": "https://github.com/JeffreyALaw", "followers_url": "https://api.github.com/users/JeffreyALaw/followers", "following_url": "https://api.github.com/users/JeffreyALaw/following{/other_user}", "gists_url": "https://api.github.com/users/JeffreyALaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/JeffreyALaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JeffreyALaw/subscriptions", "organizations_url": "https://api.github.com/users/JeffreyALaw/orgs", "repos_url": "https://api.github.com/users/JeffreyALaw/repos", "events_url": "https://api.github.com/users/JeffreyALaw/events{/privacy}", "received_events_url": "https://api.github.com/users/JeffreyALaw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1bd89833d7365e031185aec1df66fab1d23995e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1bd89833d7365e031185aec1df66fab1d23995e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1bd89833d7365e031185aec1df66fab1d23995e0"}], "stats": {"total": 38, "additions": 38, "deletions": 0}, "files": [{"sha": "cdab5e59f4e22316805989cf579c69a4444e9c9d", "filename": "gcc/match.pd", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2abd924f91e54a5229efb2c3bb5fb247059a5b37/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2abd924f91e54a5229efb2c3bb5fb247059a5b37/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=2abd924f91e54a5229efb2c3bb5fb247059a5b37", "patch": "@@ -3441,6 +3441,17 @@ DEFINE_INT_AND_FLOAT_ROUND_FN (RINT)\n \t     (bit_and (convert (shift:shift_type (convert @3) @1)) { newmaskt; })\n \t     (bit_and @4 { newmaskt; })))))))))))))\n \n+/* ((1 << n) & M) != 0  -> n == log2 (M) */\n+(for cmp (ne eq)\n+       icmp (eq ne)\n+ (simplify\n+  (cmp\n+   (bit_and\n+    (nop_convert? (lshift integer_onep @0)) integer_pow2p@1) integer_zerop)\n+  (if (INTEGRAL_TYPE_P (TREE_TYPE (@0)))\n+   (icmp @0 { wide_int_to_tree (TREE_TYPE (@0),\n+\t\t\t\twi::exact_log2 (wi::to_wide (@1))); }))))\n+\n /* Fold (X {&,^,|} C2) << C1 into (X << C1) {&,^,|} (C2 << C1)\n    (X {&,^,|} C2) >> C1 into (X >> C1) & (C2 >> C1).  */\n (for shift (lshift rshift)"}, {"sha": "7d712cad1ee30fde2b75756560ea12f10b0a4b99", "filename": "gcc/testsuite/gcc.dg/tree-ssa/bittest.c", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2abd924f91e54a5229efb2c3bb5fb247059a5b37/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbittest.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2abd924f91e54a5229efb2c3bb5fb247059a5b37/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbittest.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbittest.c?ref=2abd924f91e54a5229efb2c3bb5fb247059a5b37", "patch": "@@ -0,0 +1,27 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-optimized\" } */\n+\n+\n+void bar (void);\n+\n+void\n+foo(unsigned int abc123)\n+{\n+  unsigned int xyzpdq = (1 << abc123);\n+  if ((xyzpdq & 0x800) != 0)\n+    bar();\n+}\n+\n+void\n+baz(unsigned int abc123)\n+{\n+  unsigned int xyzpdq = (1 << abc123);\n+  if ((xyzpdq & 0x800) == 0)\n+    bar();\n+}\n+\n+/* What we want to verify is that the bit test against xyzpdq is\n+   replaced with a test against abc123 which avoids the shifting\n+   and bit ops.  */\n+/* { dg-final { scan-tree-dump-not \"xyzpdq\" \"optimized\"} } */\n+/* { dg-final { scan-tree-dump-times \"if .abc123\" 2 \"optimized\"} } */"}]}