{"sha": "292beb8fdadb4b8846c87ddd51e91e0427a583fa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjkyYmViOGZkYWRiNGI4ODQ2Yzg3ZGRkNTFlOTFlMDQyN2E1ODNmYQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-09-10T09:41:06Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-09-10T09:41:06Z"}, "message": "[multiple changes]\n\n2010-09-10  Robert Dewar  <dewar@adacore.com>\n\n\t* opt.adb (Short_Descriptors): New flag\n\t(Short_Descriptors_Config): New flag\n\t* opt.ads (Short_Descriptors): New flag\n\t(Short_Descriptors_Config): New flag\n\t* par-prag.adb: Add dummy entry for Short_Descriptors pragma\n\t* sem_prag.adb (Set_Mechanism_Value): Deal with Short_Descriptors pragma\n\t(Analyze_Pragma): Implement Short_Descriptors pragma\n\t* snames.ads-tmpl: Add entry for Short_Descriptors pragma\n\n2010-09-10  Emmanuel Briot  <briot@adacore.com>\n\n\t* prj-util.adb, prj-util.ads (Executable_Of): Take into account the\n\tproject's Executable_Suffix.\n\nFrom-SVN: r164147", "tree": {"sha": "87dfc124522efabbd02e767654b3b7d9f6ddcbfa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/87dfc124522efabbd02e767654b3b7d9f6ddcbfa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/292beb8fdadb4b8846c87ddd51e91e0427a583fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/292beb8fdadb4b8846c87ddd51e91e0427a583fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/292beb8fdadb4b8846c87ddd51e91e0427a583fa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/292beb8fdadb4b8846c87ddd51e91e0427a583fa/comments", "author": null, "committer": null, "parents": [{"sha": "e5dc610e6dd4695349a09d02e923ac6b45ba0cbb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5dc610e6dd4695349a09d02e923ac6b45ba0cbb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5dc610e6dd4695349a09d02e923ac6b45ba0cbb"}], "stats": {"total": 159, "additions": 122, "deletions": 37}, "files": [{"sha": "9e59c39fed36405c130e6da3b46e4de58a11cfb9", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/292beb8fdadb4b8846c87ddd51e91e0427a583fa/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/292beb8fdadb4b8846c87ddd51e91e0427a583fa/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=292beb8fdadb4b8846c87ddd51e91e0427a583fa", "patch": "@@ -1,3 +1,19 @@\n+2010-09-10  Robert Dewar  <dewar@adacore.com>\n+\n+\t* opt.adb (Short_Descriptors): New flag\n+\t(Short_Descriptors_Config): New flag\n+\t* opt.ads (Short_Descriptors): New flag\n+\t(Short_Descriptors_Config): New flag\n+\t* par-prag.adb: Add dummy entry for Short_Descriptors pragma\n+\t* sem_prag.adb (Set_Mechanism_Value): Deal with Short_Descriptors pragma\n+\t(Analyze_Pragma): Implement Short_Descriptors pragma\n+\t* snames.ads-tmpl: Add entry for Short_Descriptors pragma\n+\n+2010-09-10  Emmanuel Briot  <briot@adacore.com>\n+\n+\t* prj-util.adb, prj-util.ads (Executable_Of): Take into account the\n+\tproject's Executable_Suffix.\n+\n 2010-09-10  Robert Dewar  <dewar@adacore.com>\n \n \t* g-pehage.ads: Minor reformatting"}, {"sha": "445349ac8c17874d5369ecc44accab36435374d1", "filename": "gcc/ada/opt.adb", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/292beb8fdadb4b8846c87ddd51e91e0427a583fa/gcc%2Fada%2Fopt.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/292beb8fdadb4b8846c87ddd51e91e0427a583fa/gcc%2Fada%2Fopt.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.adb?ref=292beb8fdadb4b8846c87ddd51e91e0427a583fa", "patch": "@@ -61,6 +61,7 @@ package body Opt is\n       Optimize_Alignment_Config             := Optimize_Alignment;\n       Persistent_BSS_Mode_Config            := Persistent_BSS_Mode;\n       Polling_Required_Config               := Polling_Required;\n+      Short_Descriptors_Config              := Short_Descriptors;\n       Use_VADS_Size_Config                  := Use_VADS_Size;\n \n       --  Reset the indication that Optimize_Alignment was set locally, since\n@@ -94,6 +95,7 @@ package body Opt is\n       Optimize_Alignment_Local       := Save.Optimize_Alignment_Local;\n       Persistent_BSS_Mode            := Save.Persistent_BSS_Mode;\n       Polling_Required               := Save.Polling_Required;\n+      Short_Descriptors              := Save.Short_Descriptors;\n       Use_VADS_Size                  := Save.Use_VADS_Size;\n    end Restore_Opt_Config_Switches;\n \n@@ -121,6 +123,7 @@ package body Opt is\n       Save.Optimize_Alignment_Local       := Optimize_Alignment_Local;\n       Save.Persistent_BSS_Mode            := Persistent_BSS_Mode;\n       Save.Polling_Required               := Polling_Required;\n+      Save.Short_Descriptors              := Short_Descriptors;\n       Save.Use_VADS_Size                  := Use_VADS_Size;\n    end Save_Opt_Config_Switches;\n \n@@ -193,6 +196,7 @@ package body Opt is\n       Fast_Math                      := Fast_Math_Config;\n       Optimize_Alignment             := Optimize_Alignment_Config;\n       Polling_Required               := Polling_Required_Config;\n+      Short_Descriptors              := Short_Descriptors_Config;\n    end Set_Opt_Config_Switches;\n \n    ---------------"}, {"sha": "59658c63c02b6c4e4ab583bf1fbb2f56c64c6d9a", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/292beb8fdadb4b8846c87ddd51e91e0427a583fa/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/292beb8fdadb4b8846c87ddd51e91e0427a583fa/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=292beb8fdadb4b8846c87ddd51e91e0427a583fa", "patch": "@@ -1089,7 +1089,12 @@ package Opt is\n    --  GNAT\n    --  Set True if a pragma Short_Circuit_And_Or applies to the current unit.\n \n+   Short_Descriptors : Boolean := False;\n+   --  GNAT\n+   --  Set True if a pragma Short_Descriptors applies to the current unit.\n+\n    Sprint_Line_Limit : Nat := 72;\n+   --  GNAT\n    --  Limit values for chopping long lines in Sprint output, can be reset\n    --  by use of NNN parameter with -gnatG or -gnatD switches.\n \n@@ -1651,6 +1656,14 @@ package Opt is\n    --  flag is used to set the initial value for Polling_Required at the start\n    --  of analyzing each unit.\n \n+   Short_Descriptors_Config : Boolean;\n+   --  GNAT\n+   --  This is the value of the configuration switch that controls the use of\n+   --  Short_Descriptors for setting descriptor default sizes. It can be set\n+   --  True by the use of the pragma Short_Descriptors in the gnat.adc file.\n+   --  This flag is used to set the initial value for Short_Descriptors at the\n+   --  start of analyzing each unit.\n+\n    Use_VADS_Size_Config : Boolean;\n    --  GNAT\n    --  This is the value of the configuration switch that controls the use of\n@@ -1780,6 +1793,7 @@ private\n       Optimize_Alignment_Local       : Boolean;\n       Persistent_BSS_Mode            : Boolean;\n       Polling_Required               : Boolean;\n+      Short_Descriptors              : Boolean;\n       Use_VADS_Size                  : Boolean;\n    end record;\n "}, {"sha": "f0259168476b1e272e44ee4f1344508e5b24e8cf", "filename": "gcc/ada/par-prag.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/292beb8fdadb4b8846c87ddd51e91e0427a583fa/gcc%2Fada%2Fpar-prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/292beb8fdadb4b8846c87ddd51e91e0427a583fa/gcc%2Fada%2Fpar-prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-prag.adb?ref=292beb8fdadb4b8846c87ddd51e91e0427a583fa", "patch": "@@ -1192,6 +1192,7 @@ begin\n            Pragma_Shared                        |\n            Pragma_Shared_Passive                |\n            Pragma_Short_Circuit_And_Or          |\n+           Pragma_Short_Descriptors             |\n            Pragma_Storage_Size                  |\n            Pragma_Storage_Unit                  |\n            Pragma_Static_Elaboration_Desired    |"}, {"sha": "62e6e6ddd1e468c40429984346f5271310989ddf", "filename": "gcc/ada/prj-util.adb", "status": "modified", "additions": 36, "deletions": 16, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/292beb8fdadb4b8846c87ddd51e91e0427a583fa/gcc%2Fada%2Fprj-util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/292beb8fdadb4b8846c87ddd51e91e0427a583fa/gcc%2Fada%2Fprj-util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-util.adb?ref=292beb8fdadb4b8846c87ddd51e91e0427a583fa", "patch": "@@ -105,12 +105,12 @@ package body Prj.Util is\n    -------------------\n \n    function Executable_Of\n-     (Project        : Project_Id;\n-      In_Tree        : Project_Tree_Ref;\n-      Main           : File_Name_Type;\n-      Index          : Int;\n-      Ada_Main       : Boolean := True;\n-      Language       : String := \"\";\n+     (Project  : Project_Id;\n+      In_Tree  : Project_Tree_Ref;\n+      Main     : File_Name_Type;\n+      Index    : Int;\n+      Ada_Main : Boolean := True;\n+      Language : String := \"\";\n       Include_Suffix : Boolean := True) return File_Name_Type\n    is\n       pragma Assert (Project /= No_Project);\n@@ -131,8 +131,6 @@ package body Prj.Util is\n                         In_Package              => Builder_Package,\n                         In_Tree                 => In_Tree);\n \n-      Executable_Suffix_Name : Name_Id := No_Name;\n-\n       Lang   : Language_Ptr;\n \n       Spec_Suffix : Name_Id := No_Name;\n@@ -148,7 +146,7 @@ package body Prj.Util is\n \n       function Add_Suffix (File : File_Name_Type) return File_Name_Type;\n       --  Return the name of the executable, based on File, and adding the\n-      --  executable suffix if needed.\n+      --  executable suffix if needed\n \n       ------------------\n       -- Get_Suffixes --\n@@ -177,19 +175,43 @@ package body Prj.Util is\n       function Add_Suffix (File : File_Name_Type) return File_Name_Type is\n          Saved_EEOT : constant Name_Id := Executable_Extension_On_Target;\n          Result     : File_Name_Type;\n-\n+         Suffix_From_Project : Variable_Value;\n       begin\n          if Include_Suffix then\n-            if Executable_Suffix_Name /= No_Name then\n-               Executable_Extension_On_Target := Executable_Suffix_Name;\n+            if Project.Config.Executable_Suffix /= No_Name then\n+               Executable_Extension_On_Target :=\n+                 Project.Config.Executable_Suffix;\n             end if;\n \n-            Result :=  Executable_Name (File_Name_Type (Executable.Value));\n+            Result :=  Executable_Name (File);\n             Executable_Extension_On_Target := Saved_EEOT;\n             return Result;\n \n          else\n-            return File;\n+            --  We still want to take into account cases where the suffix is\n+            --  specified in the project itself, as opposed to the config file.\n+            --  Unfortunately, when the project was processed, they are both\n+            --  stored in Project.Config, so we need to get it from the project\n+            --  again\n+\n+            Suffix_From_Project :=\n+              Prj.Util.Value_Of\n+                (Variable_Name => Name_Executable_Suffix,\n+                 In_Variables  =>\n+                   In_Tree.Packages.Table (Builder_Package).Decl.Attributes,\n+                 In_Tree       => In_Tree);\n+\n+            if Suffix_From_Project /= Nil_Variable_Value\n+              and then Suffix_From_Project.Value /= No_Name\n+            then\n+               Executable_Extension_On_Target := Suffix_From_Project.Value;\n+               Result :=  Executable_Name (File);\n+               Executable_Extension_On_Target := Saved_EEOT;\n+               return Result;\n+\n+            else\n+               return File;\n+            end if;\n          end if;\n       end Add_Suffix;\n \n@@ -209,8 +231,6 @@ package body Prj.Util is\n       end if;\n \n       if Builder_Package /= No_Package then\n-         Executable_Suffix_Name := Project.Config.Executable_Suffix;\n-\n          if Executable = Nil_Variable_Value and then Ada_Main then\n             Get_Name_String (Main);\n "}, {"sha": "3c1ac0a741dcc66576a21b2b219bb7b069119d27", "filename": "gcc/ada/prj-util.ads", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/292beb8fdadb4b8846c87ddd51e91e0427a583fa/gcc%2Fada%2Fprj-util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/292beb8fdadb4b8846c87ddd51e91e0427a583fa/gcc%2Fada%2Fprj-util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-util.ads?ref=292beb8fdadb4b8846c87ddd51e91e0427a583fa", "patch": "@@ -42,8 +42,9 @@ package Prj.Util is\n    --  standard executable suffix for the platform.\n    --\n    --  If Include_Suffix is true, then the \".exe\" suffix (or any suffix defined\n-   --  in the config and project files) will be added. Otherwise, such a suffix\n-   --  is not added. In particular, the prefix should not be added if you are\n+   --  in the config) will be added. The suffix defined by the user in his own\n+   --  project file is always taken into account. Otherwise, such a suffix is\n+   --  not added. In particular, the prefix should not be added if you are\n    --  potentially testing for cross-platforms, since the suffix might not be\n    --  known (its default value comes from the ...-gnatmake prefix).\n    --"}, {"sha": "f2b74b56440bd080e77ede50aca1ffd27fa91098", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 46, "deletions": 19, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/292beb8fdadb4b8846c87ddd51e91e0427a583fa/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/292beb8fdadb4b8846c87ddd51e91e0427a583fa/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=292beb8fdadb4b8846c87ddd51e91e0427a583fa", "patch": "@@ -4907,8 +4907,8 @@ package body Sem_Prag is\n       --  form created by the parser.\n \n       procedure Set_Mechanism_Value (Ent : Entity_Id; Mech_Name : Node_Id) is\n-         Class : Node_Id;\n-         Param : Node_Id;\n+         Class        : Node_Id;\n+         Param        : Node_Id;\n          Mech_Name_Id : Name_Id;\n \n          procedure Bad_Class;\n@@ -4957,7 +4957,15 @@ package body Sem_Prag is\n \n             elsif Chars (Mech_Name) = Name_Descriptor then\n                Check_VMS (Mech_Name);\n-               Set_Mechanism (Ent, By_Descriptor);\n+\n+               --  Descriptor => Short_Descriptor if pragma was given\n+\n+               if Short_Descriptors then\n+                  Set_Mechanism (Ent, By_Short_Descriptor);\n+               else\n+                  Set_Mechanism (Ent, By_Descriptor);\n+               end if;\n+\n                return;\n \n             elsif Chars (Mech_Name) = Name_Short_Descriptor then\n@@ -4980,7 +4988,6 @@ package body Sem_Prag is\n          --  Note: this form is parsed as an indexed component\n \n          elsif Nkind (Mech_Name) = N_Indexed_Component then\n-\n             Class := First (Expressions (Mech_Name));\n \n             if Nkind (Prefix (Mech_Name)) /= N_Identifier\n@@ -4991,6 +4998,14 @@ package body Sem_Prag is\n                Bad_Mechanism;\n             else\n                Mech_Name_Id := Chars (Prefix (Mech_Name));\n+\n+               --  Change Descriptor => Short_Descriptor if pragma was given\n+\n+               if Mech_Name_Id = Name_Descriptor\n+                 and then Short_Descriptors\n+               then\n+                  Mech_Name_Id := Name_Short_Descriptor;\n+               end if;\n             end if;\n \n          --  MECHANISM_NAME ::= descriptor (Class => CLASS_NAME) |\n@@ -5000,7 +5015,6 @@ package body Sem_Prag is\n          --  Note: this form is parsed as a function call\n \n          elsif Nkind (Mech_Name) = N_Function_Call then\n-\n             Param := First (Parameter_Associations (Mech_Name));\n \n             if Nkind (Name (Mech_Name)) /= N_Identifier\n@@ -5028,72 +5042,72 @@ package body Sem_Prag is\n             Bad_Class;\n \n          elsif Mech_Name_Id = Name_Descriptor\n-               and then Chars (Class) = Name_UBS\n+           and then Chars (Class) = Name_UBS\n          then\n             Set_Mechanism (Ent, By_Descriptor_UBS);\n \n          elsif Mech_Name_Id = Name_Descriptor\n-               and then Chars (Class) = Name_UBSB\n+           and then Chars (Class) = Name_UBSB\n          then\n             Set_Mechanism (Ent, By_Descriptor_UBSB);\n \n          elsif Mech_Name_Id = Name_Descriptor\n-               and then Chars (Class) = Name_UBA\n+           and then Chars (Class) = Name_UBA\n          then\n             Set_Mechanism (Ent, By_Descriptor_UBA);\n \n          elsif Mech_Name_Id = Name_Descriptor\n-               and then Chars (Class) = Name_S\n+           and then Chars (Class) = Name_S\n          then\n             Set_Mechanism (Ent, By_Descriptor_S);\n \n          elsif Mech_Name_Id = Name_Descriptor\n-               and then Chars (Class) = Name_SB\n+           and then Chars (Class) = Name_SB\n          then\n             Set_Mechanism (Ent, By_Descriptor_SB);\n \n          elsif Mech_Name_Id = Name_Descriptor\n-               and then Chars (Class) = Name_A\n+           and then Chars (Class) = Name_A\n          then\n             Set_Mechanism (Ent, By_Descriptor_A);\n \n          elsif Mech_Name_Id = Name_Descriptor\n-               and then Chars (Class) = Name_NCA\n+           and then Chars (Class) = Name_NCA\n          then\n             Set_Mechanism (Ent, By_Descriptor_NCA);\n \n          elsif Mech_Name_Id = Name_Short_Descriptor\n-               and then Chars (Class) = Name_UBS\n+           and then Chars (Class) = Name_UBS\n          then\n             Set_Mechanism (Ent, By_Short_Descriptor_UBS);\n \n          elsif Mech_Name_Id = Name_Short_Descriptor\n-               and then Chars (Class) = Name_UBSB\n+           and then Chars (Class) = Name_UBSB\n          then\n             Set_Mechanism (Ent, By_Short_Descriptor_UBSB);\n \n          elsif Mech_Name_Id = Name_Short_Descriptor\n-               and then Chars (Class) = Name_UBA\n+           and then Chars (Class) = Name_UBA\n          then\n             Set_Mechanism (Ent, By_Short_Descriptor_UBA);\n \n          elsif Mech_Name_Id = Name_Short_Descriptor\n-               and then Chars (Class) = Name_S\n+           and then Chars (Class) = Name_S\n          then\n             Set_Mechanism (Ent, By_Short_Descriptor_S);\n \n          elsif Mech_Name_Id = Name_Short_Descriptor\n-               and then Chars (Class) = Name_SB\n+           and then Chars (Class) = Name_SB\n          then\n             Set_Mechanism (Ent, By_Short_Descriptor_SB);\n \n          elsif Mech_Name_Id = Name_Short_Descriptor\n-               and then Chars (Class) = Name_A\n+           and then Chars (Class) = Name_A\n          then\n             Set_Mechanism (Ent, By_Short_Descriptor_A);\n \n          elsif Mech_Name_Id = Name_Short_Descriptor\n-               and then Chars (Class) = Name_NCA\n+           and then Chars (Class) = Name_NCA\n          then\n             Set_Mechanism (Ent, By_Short_Descriptor_NCA);\n \n@@ -11052,6 +11066,18 @@ package body Sem_Prag is\n             Set_Is_Shared_Passive (Cunit_Ent);\n          end Shared_Passive;\n \n+         -----------------------\n+         -- Short_Descriptors --\n+         -----------------------\n+\n+         --  pragma Short_Descriptors;\n+\n+         when Pragma_Short_Descriptors =>\n+            GNAT_Pragma;\n+            Check_Arg_Count (0);\n+            Check_Valid_Configuration_Pragma;\n+            Short_Descriptors := True;\n+\n          ----------------------\n          -- Source_File_Name --\n          ----------------------\n@@ -12887,6 +12913,7 @@ package body Sem_Prag is\n       Pragma_Share_Generic                 => -1,\n       Pragma_Shared                        => -1,\n       Pragma_Shared_Passive                => -1,\n+      Pragma_Short_Descriptors             =>  0,\n       Pragma_Source_File_Name              => -1,\n       Pragma_Source_File_Name_Project      => -1,\n       Pragma_Source_Reference              => -1,"}, {"sha": "411e3dbd3f076a8a54d2f5c431a69b4c68454104", "filename": "gcc/ada/snames.ads-tmpl", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/292beb8fdadb4b8846c87ddd51e91e0427a583fa/gcc%2Fada%2Fsnames.ads-tmpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/292beb8fdadb4b8846c87ddd51e91e0427a583fa/gcc%2Fada%2Fsnames.ads-tmpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads-tmpl?ref=292beb8fdadb4b8846c87ddd51e91e0427a583fa", "patch": "@@ -386,6 +386,7 @@ package Snames is\n    Name_Restriction_Warnings           : constant Name_Id := N + $; -- GNAT\n    Name_Reviewable                     : constant Name_Id := N + $;\n    Name_Short_Circuit_And_Or           : constant Name_Id := N + $; -- GNAT\n+   Name_Short_Descriptors              : constant Name_Id := N + $; -- GNAT\n    Name_Source_File_Name               : constant Name_Id := N + $; -- GNAT\n    Name_Source_File_Name_Project       : constant Name_Id := N + $; -- GNAT\n    Name_Style_Checks                   : constant Name_Id := N + $; -- GNAT\n@@ -1466,6 +1467,7 @@ package Snames is\n       Pragma_Restriction_Warnings,\n       Pragma_Reviewable,\n       Pragma_Short_Circuit_And_Or,\n+      Pragma_Short_Descriptors,\n       Pragma_Source_File_Name,\n       Pragma_Source_File_Name_Project,\n       Pragma_Style_Checks,"}]}