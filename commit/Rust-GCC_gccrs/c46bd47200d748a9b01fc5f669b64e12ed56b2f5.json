{"sha": "c46bd47200d748a9b01fc5f669b64e12ed56b2f5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzQ2YmQ0NzIwMGQ3NDhhOWIwMWZjNWY2NjliNjRlMTJlZDU2YjJmNQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2017-10-20T10:49:24Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2017-10-20T10:49:24Z"}, "message": "2017-10-20  Richard Biener  <rguenther@suse.de>\n\n\t* graphite-isl-ast-to-gimple.c\n\t(translate_isl_ast_to_gimple::graphite_copy_stmts_from_block):\n\tRemove return value and simplify, dump copied stmt after lhs\n\tadjustment.\n\t(translate_isl_ast_to_gimple::translate_isl_ast_node_user):\n\tReduce dump verbosity.\n\t(gsi_insert_earliest): Likewise.\n\t(translate_isl_ast_to_gimple::copy_bb_and_scalar_dependences): Adjust.\n\t* graphite.c (print_global_statistics): Adjust dumping.\n\t(print_graphite_scop_statistics): Likewise.\n\t(print_graphite_statistics): Do not dump loops here.\n\t(graphite_transform_loops): But here.\n\nFrom-SVN: r253930", "tree": {"sha": "56a311b75cdbf6029a77e22527730ee483b8d2b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/56a311b75cdbf6029a77e22527730ee483b8d2b1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c46bd47200d748a9b01fc5f669b64e12ed56b2f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c46bd47200d748a9b01fc5f669b64e12ed56b2f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c46bd47200d748a9b01fc5f669b64e12ed56b2f5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c46bd47200d748a9b01fc5f669b64e12ed56b2f5/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "424101ddcc5bad4548a8ba15c7572158a5a08036", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/424101ddcc5bad4548a8ba15c7572158a5a08036", "html_url": "https://github.com/Rust-GCC/gccrs/commit/424101ddcc5bad4548a8ba15c7572158a5a08036"}], "stats": {"total": 71, "additions": 39, "deletions": 32}, "files": [{"sha": "2bb52cf1bda7c5da49420dc194ea708aec88dcd4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c46bd47200d748a9b01fc5f669b64e12ed56b2f5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c46bd47200d748a9b01fc5f669b64e12ed56b2f5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c46bd47200d748a9b01fc5f669b64e12ed56b2f5", "patch": "@@ -1,3 +1,18 @@\n+2017-10-20  Richard Biener  <rguenther@suse.de>\n+\n+\t* graphite-isl-ast-to-gimple.c\n+\t(translate_isl_ast_to_gimple::graphite_copy_stmts_from_block):\n+\tRemove return value and simplify, dump copied stmt after lhs\n+\tadjustment.\n+\t(translate_isl_ast_to_gimple::translate_isl_ast_node_user):\n+\tReduce dump verbosity.\n+\t(gsi_insert_earliest): Likewise.\n+\t(translate_isl_ast_to_gimple::copy_bb_and_scalar_dependences): Adjust.\n+\t* graphite.c (print_global_statistics): Adjust dumping.\n+\t(print_graphite_scop_statistics): Likewise.\n+\t(print_graphite_statistics): Do not dump loops here.\n+\t(graphite_transform_loops): But here.\n+\n 2017-10-20  Nicolas Roche  <roche@adacore.com>\n \n \t* configure.ac (ACX_PROG_GNAT): Append \"libgnat\" to the include dir."}, {"sha": "b39ac5441c3cccb89e652c3cf1f4dbb266f9cfed", "filename": "gcc/graphite-isl-ast-to-gimple.c", "status": "modified", "additions": 13, "deletions": 23, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c46bd47200d748a9b01fc5f669b64e12ed56b2f5/gcc%2Fgraphite-isl-ast-to-gimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c46bd47200d748a9b01fc5f669b64e12ed56b2f5/gcc%2Fgraphite-isl-ast-to-gimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-isl-ast-to-gimple.c?ref=c46bd47200d748a9b01fc5f669b64e12ed56b2f5", "patch": "@@ -191,7 +191,7 @@ class translate_isl_ast_to_gimple\n \n   tree get_rename_from_scev (tree old_name, gimple_seq *stmts, loop_p loop,\n \t\t\t     vec<tree> iv_map);\n-  bool graphite_copy_stmts_from_block (basic_block bb, basic_block new_bb,\n+  void graphite_copy_stmts_from_block (basic_block bb, basic_block new_bb,\n \t\t\t\t       vec<tree> iv_map);\n   edge copy_bb_and_scalar_dependences (basic_block bb, edge next_e,\n \t\t\t\t       vec<tree> iv_map);\n@@ -791,13 +791,12 @@ translate_isl_ast_node_user (__isl_keep isl_ast_node *node,\n   isl_ast_expr_free (user_expr);\n \n   basic_block old_bb = GBB_BB (gbb);\n-  if (dump_file)\n+  if (dump_file && (dump_flags & TDF_DETAILS))\n     {\n       fprintf (dump_file,\n \t       \"[codegen] copying from bb_%d on edge (bb_%d, bb_%d)\\n\",\n \t       old_bb->index, next_e->src->index, next_e->dest->index);\n       print_loops_bb (dump_file, GBB_BB (gbb), 0, 3);\n-\n     }\n \n   next_e = copy_bb_and_scalar_dependences (old_bb, next_e, iv_map);\n@@ -807,7 +806,7 @@ translate_isl_ast_node_user (__isl_keep isl_ast_node *node,\n   if (codegen_error_p ())\n     return NULL;\n \n-  if (dump_file)\n+  if (dump_file && (dump_flags & TDF_DETAILS))\n     {\n       fprintf (dump_file, \"[codegen] (after copy) new basic block\\n\");\n       print_loops_bb (dump_file, next_e->src, 0, 3);\n@@ -1049,9 +1048,9 @@ gsi_insert_earliest (gimple_seq seq)\n \n       if (dump_file)\n \t{\n-\t  fprintf (dump_file, \"[codegen] inserting statement: \");\n+\t  fprintf (dump_file, \"[codegen] inserting statement in BB %d: \",\n+\t\t   gimple_bb (use_stmt)->index);\n \t  print_gimple_stmt (dump_file, use_stmt, 0, TDF_VOPS | TDF_MEMSYMS);\n-\t  print_loops_bb (dump_file, gimple_bb (use_stmt), 0, 3);\n \t}\n     }\n }\n@@ -1122,7 +1121,7 @@ should_copy_to_new_region (gimple *stmt, sese_info_p region)\n /* Duplicates the statements of basic block BB into basic block NEW_BB\n    and compute the new induction variables according to the IV_MAP.  */\n \n-bool translate_isl_ast_to_gimple::\n+void translate_isl_ast_to_gimple::\n graphite_copy_stmts_from_block (basic_block bb, basic_block new_bb,\n \t\t\t\tvec<tree> iv_map)\n {\n@@ -1139,7 +1138,6 @@ graphite_copy_stmts_from_block (basic_block bb, basic_block new_bb,\n       /* Create a new copy of STMT and duplicate STMT's virtual\n \t operands.  */\n       gimple *copy = gimple_copy (stmt);\n-      gsi_insert_after (&gsi_tgt, copy, GSI_NEW_STMT);\n \n       /* Rather than not copying debug stmts we reset them.\n          ???  Where we can rewrite uses without inserting new\n@@ -1154,12 +1152,6 @@ graphite_copy_stmts_from_block (basic_block bb, basic_block new_bb,\n \t    gcc_unreachable ();\n \t}\n \n-      if (dump_file)\n-\t{\n-\t  fprintf (dump_file, \"[codegen] inserting statement: \");\n-\t  print_gimple_stmt (dump_file, copy, 0);\n-\t}\n-\n       maybe_duplicate_eh_stmt (copy, stmt);\n       gimple_duplicate_stmt_histograms (cfun, copy, cfun, stmt);\n \n@@ -1172,8 +1164,12 @@ graphite_copy_stmts_from_block (basic_block bb, basic_block new_bb,\n \t  create_new_def_for (old_name, copy, def_p);\n \t}\n \n-      if (codegen_error_p ())\n-\treturn false;\n+      gsi_insert_after (&gsi_tgt, copy, GSI_NEW_STMT);\n+      if (dump_file)\n+\t{\n+\t  fprintf (dump_file, \"[codegen] inserting statement: \");\n+\t  print_gimple_stmt (dump_file, copy, 0);\n+\t}\n \n       /* For each SCEV analyzable SSA_NAME, rename their usage.  */\n       ssa_op_iter iter;\n@@ -1198,8 +1194,6 @@ graphite_copy_stmts_from_block (basic_block bb, basic_block new_bb,\n \n       update_stmt (copy);\n     }\n-\n-  return true;\n }\n \n \n@@ -1236,11 +1230,7 @@ copy_bb_and_scalar_dependences (basic_block bb, edge next_e, vec<tree> iv_map)\n       gsi_insert_after (&gsi_tgt, ass, GSI_NEW_STMT);\n     }\n \n-  if (!graphite_copy_stmts_from_block (bb, new_bb, iv_map))\n-    {\n-      set_codegen_error ();\n-      return NULL;\n-    }\n+  graphite_copy_stmts_from_block (bb, new_bb, iv_map);\n \n   /* Insert out-of SSA copies on the original BB outgoing edges.  */\n   gsi_tgt = gsi_last_bb (new_bb);"}, {"sha": "22d83307bd2256599f9fb0211860957f9ea3213f", "filename": "gcc/graphite.c", "status": "modified", "additions": 11, "deletions": 9, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c46bd47200d748a9b01fc5f669b64e12ed56b2f5/gcc%2Fgraphite.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c46bd47200d748a9b01fc5f669b64e12ed56b2f5/gcc%2Fgraphite.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite.c?ref=c46bd47200d748a9b01fc5f669b64e12ed56b2f5", "patch": "@@ -111,7 +111,7 @@ print_global_statistics (FILE* file)\n   fprintf (file, \"LOOPS:%ld, \", n_loops);\n   fprintf (file, \"CONDITIONS:%ld, \", n_conditions);\n   fprintf (file, \"STMTS:%ld)\\n\", n_stmts);\n-  fprintf (file, \"\\nGlobal profiling statistics (\");\n+  fprintf (file, \"Global profiling statistics (\");\n   fprintf (file, \"BBS:\");\n   n_p_bbs.dump (file);\n   fprintf (file, \", LOOPS:\");\n@@ -120,7 +120,7 @@ print_global_statistics (FILE* file)\n   n_p_conditions.dump (file);\n   fprintf (file, \", STMTS:\");\n   n_p_stmts.dump (file);\n-  fprintf (file, \")\\n\");\n+  fprintf (file, \")\\n\\n\");\n }\n \n /* Print statistics for SCOP to FILE.  */\n@@ -185,7 +185,7 @@ print_graphite_scop_statistics (FILE* file, scop_p scop)\n   fprintf (file, \"LOOPS:%ld, \", n_loops);\n   fprintf (file, \"CONDITIONS:%ld, \", n_conditions);\n   fprintf (file, \"STMTS:%ld)\\n\", n_stmts);\n-  fprintf (file, \"\\nSCoP profiling statistics (\");\n+  fprintf (file, \"SCoP profiling statistics (\");\n   fprintf (file, \"BBS:\");\n   n_p_bbs.dump (file);\n   fprintf (file, \", LOOPS:\");\n@@ -194,7 +194,7 @@ print_graphite_scop_statistics (FILE* file, scop_p scop)\n   n_p_conditions.dump (file);\n   fprintf (file, \", STMTS:\");\n   n_p_stmts.dump (file);\n-  fprintf (file, \")\\n\");\n+  fprintf (file, \")\\n\\n\");\n }\n \n /* Print statistics for SCOPS to FILE.  */\n@@ -203,15 +203,10 @@ static void\n print_graphite_statistics (FILE* file, vec<scop_p> scops)\n {\n   int i;\n-\n   scop_p scop;\n \n   FOR_EACH_VEC_ELT (scops, i, scop)\n     print_graphite_scop_statistics (file, scop);\n-\n-  /* Print the loop structure.  */\n-  print_loops (file, 2);\n-  print_loops (file, 3);\n }\n \n /* Deletes all scops in SCOPS.  */\n@@ -358,6 +353,13 @@ graphite_transform_loops (void)\n   sort_sibling_loops (cfun);\n   canonicalize_loop_closed_ssa_form ();\n \n+  /* Print the loop structure.  */\n+  if (dump_file && (dump_flags & TDF_DETAILS))\n+    {\n+      print_loops (dump_file, 2);\n+      print_loops (dump_file, 3);\n+    }\n+\n   calculate_dominance_info (CDI_POST_DOMINATORS);\n   build_scops (&scops);\n   free_dominance_info (CDI_POST_DOMINATORS);"}]}