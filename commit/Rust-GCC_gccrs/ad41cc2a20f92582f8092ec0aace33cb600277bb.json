{"sha": "ad41cc2a20f92582f8092ec0aace33cb600277bb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWQ0MWNjMmEyMGY5MjU4MmY4MDkyZWMwYWFjZTMzY2I2MDAyNzdiYg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@vlsi1.ultra.nyu.edu", "date": "2000-03-26T19:01:55Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2000-03-26T19:01:55Z"}, "message": "stor-layout.c (layout_type, [...]): early_type_list is now a list of TREE_LIST entries, not types.\n\n\t* stor-layout.c (layout_type, set_sizetype): early_type_list is\n\tnow a list of TREE_LIST entries, not types.\n\t* tree.c (build_common_tree_nodes_2): Eliminate dupliate type sets.\n\t* java/decl.c (init_decl_processing): Call initialize_sizetypes once.\n\tAdjust order of making types.\n\tMake bitsize_*_node values.\n\nFrom-SVN: r32751", "tree": {"sha": "31e1f65a65f2d08101e10be677ffa2b0f9d62f5c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/31e1f65a65f2d08101e10be677ffa2b0f9d62f5c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ad41cc2a20f92582f8092ec0aace33cb600277bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad41cc2a20f92582f8092ec0aace33cb600277bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad41cc2a20f92582f8092ec0aace33cb600277bb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad41cc2a20f92582f8092ec0aace33cb600277bb/comments", "author": null, "committer": null, "parents": [{"sha": "ec386958dacc648b01a60b0b32d21c6fdcfc3c49", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec386958dacc648b01a60b0b32d21c6fdcfc3c49", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec386958dacc648b01a60b0b32d21c6fdcfc3c49"}], "stats": {"total": 52, "additions": 29, "deletions": 23}, "files": [{"sha": "83ddf360c1fce74e0e197b4fd586fff475167343", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad41cc2a20f92582f8092ec0aace33cb600277bb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad41cc2a20f92582f8092ec0aace33cb600277bb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ad41cc2a20f92582f8092ec0aace33cb600277bb", "patch": "@@ -1,5 +1,9 @@\n Sun Mar 26 11:37:55 2000  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n+\t* stor-layout.c (layout_type, set_sizetype): early_type_list is\n+\tnow a list of TREE_LIST entries, not types.\n+\t* tree.c (build_common_tree_nodes_2): Eliminate dupliate type sets.\n+\n \t* expmed.c (extract_bit_field): Ensure BITS_PER_WORD is signed in MAX.\n \t* config/arm/pe.c (arm_pe_return_in_memory): Use host_integerp and\n \tint_bit_position."}, {"sha": "cfdeb1feae4c601432139d72015631d5583ae235", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad41cc2a20f92582f8092ec0aace33cb600277bb/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad41cc2a20f92582f8092ec0aace33cb600277bb/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=ad41cc2a20f92582f8092ec0aace33cb600277bb", "patch": "@@ -1,3 +1,9 @@\n+Sun Mar 26 11:37:55 2000  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* decl.c (init_decl_processing): Only call initialize_sizetypes once.\n+\tAdjust order of making types.\n+\tMake bitsize_*_node values.\n+\n Sat Mar 25 09:12:10 2000  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n \t* class.c (make_field_value): Use byte_position."}, {"sha": "ebe591dc8d3861528d77be83f466c8fd0dde5961", "filename": "gcc/java/decl.c", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad41cc2a20f92582f8092ec0aace33cb600277bb/gcc%2Fjava%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad41cc2a20f92582f8092ec0aace33cb600277bb/gcc%2Fjava%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fdecl.c?ref=ad41cc2a20f92582f8092ec0aace33cb600277bb", "patch": "@@ -457,17 +457,13 @@ init_decl_processing ()\n   pushlevel (0);\t/* make the binding_level structure for global names */\n   global_binding_level = current_binding_level;\n \n+  /* The code here must be similar to build_common_tree_nodes{,_2} in\n+     tree.c, especially as to the order of initializing common nodes.  */\n   error_mark_node = make_node (ERROR_MARK);\n   TREE_TYPE (error_mark_node) = error_mark_node;\n \n-  initialize_sizetypes ();\n   /* Create sizetype first - needed for other types. */\n   initialize_sizetypes ();\n-  set_sizetype (make_unsigned_type (POINTER_SIZE));\n-  size_zero_node = build_int_2 (0, 0);\n-  TREE_TYPE (size_zero_node) = sizetype;\n-  size_one_node = build_int_2 (1, 0);\n-  TREE_TYPE (size_one_node) = sizetype;\n \n   byte_type_node = make_signed_type (8);\n   pushdecl (build_decl (TYPE_DECL, get_identifier (\"byte\"), byte_type_node));\n@@ -491,14 +487,22 @@ init_decl_processing ()\n   pushdecl (build_decl (TYPE_DECL, get_identifier (\"unsigned long\"),\n \t\t\tunsigned_long_type_node));\n \n-  integer_type_node = type_for_size (INT_TYPE_SIZE, 0);\n+  set_sizetype (make_unsigned_type (POINTER_SIZE));\n \n+  /* Define these next since types below may used them.  */\n+  integer_type_node = type_for_size (INT_TYPE_SIZE, 0);\n   integer_zero_node = build_int_2 (0, 0);\n   integer_one_node = build_int_2 (1, 0);\n   integer_two_node = build_int_2 (2, 0);\n   integer_four_node = build_int_2 (4, 0);\n   integer_negative_one_node = build_int_2 (-1, 0);\n \n+  size_zero_node = size_int (0);\n+  size_one_node = size_int (1);\n+  bitsize_zero_node = bitsize_int (0);\n+  bitsize_one_node = bitsize_int (1);\n+  bitsize_unit_node = bitsize_int (BITS_PER_UNIT);\n+\n   long_zero_node = build_int_2 (0, 0);\n   TREE_TYPE (long_zero_node) = long_type_node;\n "}, {"sha": "58ab3f54fdaf0a7b889ab13b37b9b671d29b21f6", "filename": "gcc/stor-layout.c", "status": "modified", "additions": 6, "deletions": 12, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad41cc2a20f92582f8092ec0aace33cb600277bb/gcc%2Fstor-layout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad41cc2a20f92582f8092ec0aace33cb600277bb/gcc%2Fstor-layout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstor-layout.c?ref=ad41cc2a20f92582f8092ec0aace33cb600277bb", "patch": "@@ -1427,10 +1427,7 @@ layout_type (type)\n   /* If this type is created before sizetype has been permanently set,\n      record it so set_sizetype can fix it up.  */\n   if (! sizetype_set)\n-    {\n-      TREE_CHAIN (type) = early_type_list;\n-      early_type_list = type;\n-    }\n+    early_type_list = tree_cons (NULL_TREE, type, early_type_list);\n }\n \f\n /* Create and return a type for signed integers of PRECISION bits.  */\n@@ -1508,7 +1505,7 @@ set_sizetype (type)\n   int precision = MIN (oprecision + BITS_PER_UNIT_LOG + 1,\n \t\t       2 * HOST_BITS_PER_WIDE_INT);\n   unsigned int i;\n-  tree t, next;\n+  tree t;\n \n   if (sizetype_set)\n     abort ();\n@@ -1561,16 +1558,13 @@ set_sizetype (type)\n \n   /* Go down each of the types we already made and set the proper type\n      for the sizes in them.  */\n-  for (t = early_type_list; t != 0; t = next)\n+  for (t = early_type_list; t != 0; t = TREE_CHAIN (t))\n     {\n-      next = TREE_CHAIN (t);\n-      TREE_CHAIN (t) = 0;\n-\n-      if (TREE_CODE (t) != INTEGER_TYPE)\n+      if (TREE_CODE (TREE_VALUE (t)) != INTEGER_TYPE)\n \tabort ();\n \n-      TREE_TYPE (TYPE_SIZE (t)) = bitsizetype;\n-      TREE_TYPE (TYPE_SIZE_UNIT (t)) = sizetype;\n+      TREE_TYPE (TYPE_SIZE (TREE_VALUE (t))) = bitsizetype;\n+      TREE_TYPE (TYPE_SIZE_UNIT (TREE_VALUE (t))) = sizetype;\n     }\n \n   early_type_list = 0;"}, {"sha": "381d5f0ed1df38183619614107626144bb604c73", "filename": "gcc/tree.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad41cc2a20f92582f8092ec0aace33cb600277bb/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad41cc2a20f92582f8092ec0aace33cb600277bb/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=ad41cc2a20f92582f8092ec0aace33cb600277bb", "patch": "@@ -2171,8 +2171,8 @@ tree_cons (purpose, value, chain)\n     }\n \n #ifdef GATHER_STATISTICS\n-  tree_node_counts[(int)x_kind]++;\n-  tree_node_sizes[(int)x_kind] += sizeof (struct tree_list);\n+  tree_node_counts[(int) x_kind]++;\n+  tree_node_sizes[(int) x_kind] += sizeof (struct tree_list);\n #endif\n \n   TREE_SET_CODE (node, TREE_LIST);\n@@ -5709,9 +5709,7 @@ build_common_tree_nodes_2 (short_double)\n {\n   /* Define these next since types below may used them.  */\n   integer_zero_node = build_int_2 (0, 0);\n-  TREE_TYPE (integer_zero_node) = integer_type_node;\n   integer_one_node = build_int_2 (1, 0);\n-  TREE_TYPE (integer_one_node) = integer_type_node;\n \n   size_zero_node = size_int (0);\n   size_one_node = size_int (1);"}]}