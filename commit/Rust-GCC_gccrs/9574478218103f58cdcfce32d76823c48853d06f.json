{"sha": "9574478218103f58cdcfce32d76823c48853d06f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTU3NDQ3ODIxODEwM2Y1OGNkY2ZjZTMyZDc2ODIzYzQ4ODUzZDA2Zg==", "commit": {"author": {"name": "Manuel L\u00f3pez-Ib\u00e1\u00f1ez", "email": "manu@gcc.gnu.org", "date": "2012-05-13T17:38:41Z"}, "committer": {"name": "Manuel L\u00f3pez-Ib\u00e1\u00f1ez", "email": "manu@gcc.gnu.org", "date": "2012-05-13T17:38:41Z"}, "message": "c.opt (Wclobbered,Wempty-body,Wignored-qualifiers, [...]): Use EnabledBy.\n\n2012-05-13  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n\nc-family/\n\t* c.opt (Wclobbered,Wempty-body,Wignored-qualifiers,\n\tWmissing-field-initializers,Wmissing-parameter-type,\n\tWold-style-declaration,Woverride-init): Use EnabledBy.\n\t* c-opts.c (c_common_post_options): Do not set here explicitly.\ngcc/\n\t* common.opt (Wtype-limits): Use EnabledBy.\n\nFrom-SVN: r187441", "tree": {"sha": "d1dbf250ac0d8d854f2899938381ccef5fbb74fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d1dbf250ac0d8d854f2899938381ccef5fbb74fa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9574478218103f58cdcfce32d76823c48853d06f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9574478218103f58cdcfce32d76823c48853d06f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9574478218103f58cdcfce32d76823c48853d06f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9574478218103f58cdcfce32d76823c48853d06f/comments", "author": null, "committer": null, "parents": [{"sha": "daa5129526e2bc12add2253ed76d8bc06e15712c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/daa5129526e2bc12add2253ed76d8bc06e15712c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/daa5129526e2bc12add2253ed76d8bc06e15712c"}], "stats": {"total": 45, "additions": 21, "deletions": 24}, "files": [{"sha": "8c578d7b0d13584fdd3f474b8e091494174bf8e9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9574478218103f58cdcfce32d76823c48853d06f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9574478218103f58cdcfce32d76823c48853d06f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9574478218103f58cdcfce32d76823c48853d06f", "patch": "@@ -1,3 +1,7 @@\n+2012-05-13  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n+\n+\t* common.opt (Wtype-limits): Use EnabledBy.\n+\n 2012-05-13  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/sse.md (<sse>_andnot<mode>3): Handle"}, {"sha": "226568593d849d524e8dd96ff6cb209fc28ed360", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9574478218103f58cdcfce32d76823c48853d06f/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9574478218103f58cdcfce32d76823c48853d06f/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=9574478218103f58cdcfce32d76823c48853d06f", "patch": "@@ -1,3 +1,10 @@\n+2012-05-13  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n+\n+\t* c.opt (Wclobbered,Wempty-body,Wignored-qualifiers,\n+\tWmissing-field-initializers,Wmissing-parameter-type,\n+\tWold-style-declaration,Woverride-init): Use EnabledBy.\n+\t* c-opts.c (c_common_post_options): Do not set here explicitly.\n+\n 2012-05-11  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n \n \tPR 53063"}, {"sha": "8470de15ce0be734972b3194441be5135231013b", "filename": "gcc/c-family/c-opts.c", "status": "modified", "additions": 2, "deletions": 16, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9574478218103f58cdcfce32d76823c48853d06f/gcc%2Fc-family%2Fc-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9574478218103f58cdcfce32d76823c48853d06f/gcc%2Fc-family%2Fc-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-opts.c?ref=9574478218103f58cdcfce32d76823c48853d06f", "patch": "@@ -912,24 +912,10 @@ c_common_post_options (const char **pfilename)\n \n   /* -Wextra implies the following flags\n      unless explicitly overridden.  */\n-  if (warn_type_limits == -1)\n-    warn_type_limits = extra_warnings;\n-  if (warn_clobbered == -1)\n-    warn_clobbered = extra_warnings;\n-  if (warn_empty_body == -1)\n-    warn_empty_body = extra_warnings;\n+\n+  /* Wsign-compare is also enabled by -Wall in C++. */\n   if (warn_sign_compare == -1)\n     warn_sign_compare = extra_warnings;\n-  if (warn_missing_field_initializers == -1)\n-    warn_missing_field_initializers = extra_warnings;\n-  if (warn_missing_parameter_type == -1)\n-    warn_missing_parameter_type = extra_warnings;\n-  if (warn_old_style_declaration == -1)\n-    warn_old_style_declaration = extra_warnings;\n-  if (warn_override_init == -1)\n-    warn_override_init = extra_warnings;\n-  if (warn_ignored_qualifiers == -1)\n-    warn_ignored_qualifiers = extra_warnings;\n \n   /* -Wpointer-sign is disabled by default, but it is enabled if any\n      of -Wall or -Wpedantic are given.  */"}, {"sha": "8afde8a25e2294f7fc2d3f21a5c88e9a20201d2f", "filename": "gcc/c-family/c.opt", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9574478218103f58cdcfce32d76823c48853d06f/gcc%2Fc-family%2Fc.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9574478218103f58cdcfce32d76823c48853d06f/gcc%2Fc-family%2Fc.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc.opt?ref=9574478218103f58cdcfce32d76823c48853d06f", "patch": "@@ -304,7 +304,7 @@ C ObjC C++ ObjC++ Var(warn_char_subscripts) Warning\n Warn about subscripts whose type is \\\"char\\\"\n \n Wclobbered\n-C ObjC C++ ObjC++ Var(warn_clobbered) Init(-1) Warning\n+C ObjC C++ ObjC++ Var(warn_clobbered) Warning EnabledBy(Wextra)\n Warn about variables that might be changed by \\\"longjmp\\\" or \\\"vfork\\\"\n \n Wcomment\n@@ -352,7 +352,7 @@ C++ ObjC++ Var(warn_ecpp) Warning\n Warn about violations of Effective C++ style rules\n \n Wempty-body\n-C ObjC C++ ObjC++ Var(warn_empty_body) Init(-1) Warning\n+C ObjC C++ ObjC++ Var(warn_empty_body) Warning EnabledBy(Wextra)\n Warn about an empty body in an if or else statement\n \n Wendif-labels\n@@ -407,7 +407,7 @@ Wformat=\n C ObjC C++ ObjC++ Joined Warning\n \n Wignored-qualifiers\n-C C++ Var(warn_ignored_qualifiers) Init(-1) Warning\n+C C++ Var(warn_ignored_qualifiers) Warning EnabledBy(Wextra)\n Warn whenever type qualifiers are ignored.\n \n Winit-self\n@@ -474,7 +474,7 @@ C ObjC C++ ObjC++ Var(warn_missing_declarations) Warning\n Warn about global functions without previous declarations\n \n Wmissing-field-initializers\n-C ObjC C++ ObjC++ Var(warn_missing_field_initializers) Init(-1) Warning\n+C ObjC C++ ObjC++ Var(warn_missing_field_initializers) Warning EnabledBy(Wextra)\n Warn about missing fields in struct initializers\n \n Wsuggest-attribute=format\n@@ -490,7 +490,7 @@ C ObjC C++ ObjC++ Warning\n Warn about user-specified include directories that do not exist\n \n Wmissing-parameter-type\n-C ObjC Var(warn_missing_parameter_type) Init(-1) Warning\n+C ObjC Var(warn_missing_parameter_type) Warning EnabledBy(Wextra)\n Warn about function parameters declared without a type specifier in K&R-style functions\n \n Wmissing-prototypes\n@@ -538,7 +538,7 @@ C++ ObjC++ Var(warn_old_style_cast) Warning\n Warn if a C-style cast is used in a program\n \n Wold-style-declaration\n-C ObjC Var(warn_old_style_declaration) Init(-1) Warning\n+C ObjC Var(warn_old_style_declaration) Warning EnabledBy(Wextra)\n Warn for obsolescent usage in a declaration\n \n Wold-style-definition\n@@ -554,7 +554,7 @@ C++ ObjC++ Var(warn_overloaded_virtual) Warning\n Warn about overloaded virtual function names\n \n Woverride-init\n-C ObjC Var(warn_override_init) Init(-1) Warning\n+C ObjC Var(warn_override_init) Warning EnabledBy(Wextra)\n Warn about overriding initializers without side effects\n \n Wpacked-bitfield-compat"}, {"sha": "9e3ba180c6d1e948d87f19a3fa4b7686cf8c477f", "filename": "gcc/common.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9574478218103f58cdcfce32d76823c48853d06f/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9574478218103f58cdcfce32d76823c48853d06f/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=9574478218103f58cdcfce32d76823c48853d06f", "patch": "@@ -646,7 +646,7 @@ Common Var(warn_trampolines) Warning\n Warn whenever a trampoline is generated\n \n Wtype-limits\n-Common Var(warn_type_limits) Init(-1) Warning\n+Common Var(warn_type_limits) Warning EnabledBy(Wextra)\n Warn if a comparison is always true or always false due to the limited range of the data type\n \n Wuninitialized"}]}