{"sha": "4ebf9c376342d1cb69f1aefddc2db5d2fe950248", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGViZjljMzc2MzQyZDFjYjY5ZjFhZWZkZGMyZGI1ZDJmZTk1MDI0OA==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2010-01-05T11:44:43Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2010-01-05T11:44:43Z"}, "message": "6.cc: New.\n\n2010-01-05  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* testsuite/22_locale/time_get/get_monthname/char/6.cc: New.\n\t* testsuite/22_locale/time_get/get_monthname/wchar_t/6.cc: Likewise.\n\t* testsuite/22_locale/time_get/get_weekday/char/6.cc: Likewise.\n\t* testsuite/22_locale/time_get/get_weekday/wchar_t/6.cc: Likewise.\n\nFrom-SVN: r155644", "tree": {"sha": "679c98742c82d4ffca8af4168a521f84ffde7d78", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/679c98742c82d4ffca8af4168a521f84ffde7d78"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4ebf9c376342d1cb69f1aefddc2db5d2fe950248", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ebf9c376342d1cb69f1aefddc2db5d2fe950248", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ebf9c376342d1cb69f1aefddc2db5d2fe950248", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ebf9c376342d1cb69f1aefddc2db5d2fe950248/comments", "author": null, "committer": null, "parents": [{"sha": "1befacc8c5554979882499fa6a1d797791cf85ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1befacc8c5554979882499fa6a1d797791cf85ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1befacc8c5554979882499fa6a1d797791cf85ba"}], "stats": {"total": 364, "additions": 364, "deletions": 0}, "files": [{"sha": "8f0cf4c6058af2f19ace68fbf650cc2320d14b62", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ebf9c376342d1cb69f1aefddc2db5d2fe950248/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ebf9c376342d1cb69f1aefddc2db5d2fe950248/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=4ebf9c376342d1cb69f1aefddc2db5d2fe950248", "patch": "@@ -1,3 +1,10 @@\n+2010-01-05  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* testsuite/22_locale/time_get/get_monthname/char/6.cc: New.\n+\t* testsuite/22_locale/time_get/get_monthname/wchar_t/6.cc: Likewise.\n+\t* testsuite/22_locale/time_get/get_weekday/char/6.cc: Likewise.\n+\t* testsuite/22_locale/time_get/get_weekday/wchar_t/6.cc: Likewise.\n+\n 2010-01-03  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* include/profile/list: Implement DR 1133 here too."}, {"sha": "7a79887b6fd882a34b9d93cf5ea30218024c0141", "filename": "libstdc++-v3/testsuite/22_locale/time_get/get_monthname/char/6.cc", "status": "added", "additions": 89, "deletions": 0, "changes": 89, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ebf9c376342d1cb69f1aefddc2db5d2fe950248/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_get%2Fget_monthname%2Fchar%2F6.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ebf9c376342d1cb69f1aefddc2db5d2fe950248/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_get%2Fget_monthname%2Fchar%2F6.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_get%2Fget_monthname%2Fchar%2F6.cc?ref=4ebf9c376342d1cb69f1aefddc2db5d2fe950248", "patch": "@@ -0,0 +1,89 @@\n+// 2010-01-05  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+// Copyright (C) 2010 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// 22.2.5.1.1 time_get members\n+\n+#include <locale>\n+#include <sstream>\n+#include <cstring>\n+#include <testsuite_hooks.h>\n+\n+void test01()\n+{\n+  using namespace std;\n+  bool test __attribute__((unused)) = true;\n+\n+  typedef istreambuf_iterator<char> iterator_type;\n+\n+  // basic construction\n+  locale loc_c = locale::classic();\n+\n+  // create an ostream-derived object, cache the time_get facet\n+  iterator_type end;\n+\n+  istringstream iss;\n+  iss.imbue(loc_c);\n+  const time_get<char>& tim_get = use_facet<time_get<char> >(iss.getloc()); \n+\n+  const ios_base::iostate good = ios_base::goodbit;\n+  ios_base::iostate errorstate = good;\n+\n+  // iter_type \n+  // get_monthname(iter_type, iter_type, ios_base&, \n+  //               ios_base::iostate&, tm*) const\n+\n+  // sanity checks for \"C\" locale\n+\n+  const char* amname[12] = { \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\n+\t\t\t     \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" };\n+\n+  for (unsigned i = 0; i < 12; ++i)\n+    {\n+      iss.str(amname[i]);\n+      iterator_type is_it01(iss);\n+      tm time01;\n+      memset(&time01, -1, sizeof(tm));\n+      errorstate = good;\n+      tim_get.get_monthname(is_it01, end, iss, errorstate, &time01);\n+      VERIFY( time01.tm_mon == i );\n+      VERIFY( errorstate == ios_base::eofbit );\n+    }\n+\n+  const char* mname[12] = { \"January\", \"February\", \"March\", \"April\",\n+\t\t\t    \"May\", \"June\", \"July\", \"August\",\n+\t\t\t    \"September\", \"October\", \"November\", \"December\" };\n+\n+  for (unsigned i = 0; i < 12; ++i)\n+    {\n+      iss.str(mname[i]);\n+      iterator_type is_it01(iss);\n+      tm time01;\n+      memset(&time01, -1, sizeof(tm));\n+      errorstate = good;\n+      tim_get.get_monthname(is_it01, end, iss, errorstate, &time01);\n+      VERIFY( time01.tm_mon == i );\n+      VERIFY( errorstate == ios_base::eofbit );\n+    }\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "41742cd8fc35766fd7216148a2d888674325d6f3", "filename": "libstdc++-v3/testsuite/22_locale/time_get/get_monthname/wchar_t/6.cc", "status": "added", "additions": 92, "deletions": 0, "changes": 92, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ebf9c376342d1cb69f1aefddc2db5d2fe950248/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_get%2Fget_monthname%2Fwchar_t%2F6.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ebf9c376342d1cb69f1aefddc2db5d2fe950248/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_get%2Fget_monthname%2Fwchar_t%2F6.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_get%2Fget_monthname%2Fwchar_t%2F6.cc?ref=4ebf9c376342d1cb69f1aefddc2db5d2fe950248", "patch": "@@ -0,0 +1,92 @@\n+// 2010-01-05  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+// Copyright (C) 2010 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// 22.2.5.1.1 time_get members\n+\n+#include <locale>\n+#include <sstream>\n+#include <cstring>\n+#include <testsuite_hooks.h>\n+\n+void test01()\n+{\n+  using namespace std;\n+  bool test __attribute__((unused)) = true;\n+\n+  typedef istreambuf_iterator<wchar_t> iterator_type;\n+\n+  // basic construction\n+  locale loc_c = locale::classic();\n+\n+  // create an ostream-derived object, cache the time_get facet\n+  iterator_type end;\n+\n+  wistringstream iss;\n+  iss.imbue(loc_c);\n+  const time_get<wchar_t>& tim_get\n+    = use_facet<time_get<wchar_t> >(iss.getloc()); \n+\n+  const ios_base::iostate good = ios_base::goodbit;\n+  ios_base::iostate errorstate = good;\n+\n+  // iter_type \n+  // get_monthname(iter_type, iter_type, ios_base&, \n+  //               ios_base::iostate&, tm*) const\n+\n+  // sanity checks for \"C\" locale\n+\n+  const wchar_t* amname[12] = { L\"Jan\", L\"Feb\", L\"Mar\", L\"Apr\",\n+\t\t\t\tL\"May\", L\"Jun\", L\"Jul\", L\"Aug\",\n+\t\t\t\tL\"Sep\", L\"Oct\", L\"Nov\", L\"Dec\" };\n+\n+  for (unsigned i = 0; i < 12; ++i)\n+    {\n+      iss.str(amname[i]);\n+      iterator_type is_it01(iss);\n+      tm time01;\n+      memset(&time01, -1, sizeof(tm));\n+      errorstate = good;\n+      tim_get.get_monthname(is_it01, end, iss, errorstate, &time01);\n+      VERIFY( time01.tm_mon == i );\n+      VERIFY( errorstate == ios_base::eofbit );\n+    }\n+\n+  const wchar_t* mname[12] = { L\"January\", L\"February\", L\"March\",\n+\t\t\t       L\"April\", L\"May\", L\"June\",\n+\t\t\t       L\"July\", L\"August\", L\"September\",\n+\t\t\t       L\"October\", L\"November\", L\"December\" };\n+\n+  for (unsigned i = 0; i < 12; ++i)\n+    {\n+      iss.str(mname[i]);\n+      iterator_type is_it01(iss);\n+      tm time01;\n+      memset(&time01, -1, sizeof(tm));\n+      errorstate = good;\n+      tim_get.get_monthname(is_it01, end, iss, errorstate, &time01);\n+      VERIFY( time01.tm_mon == i );\n+      VERIFY( errorstate == ios_base::eofbit );\n+    }\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "595c81c2fb32520bf7f7c892b007e77b6b560727", "filename": "libstdc++-v3/testsuite/22_locale/time_get/get_weekday/char/6.cc", "status": "added", "additions": 87, "deletions": 0, "changes": 87, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ebf9c376342d1cb69f1aefddc2db5d2fe950248/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_get%2Fget_weekday%2Fchar%2F6.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ebf9c376342d1cb69f1aefddc2db5d2fe950248/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_get%2Fget_weekday%2Fchar%2F6.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_get%2Fget_weekday%2Fchar%2F6.cc?ref=4ebf9c376342d1cb69f1aefddc2db5d2fe950248", "patch": "@@ -0,0 +1,87 @@\n+// 2010-01-05  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+// Copyright (C) 2010 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// 22.2.5.1.1 time_get members\n+\n+#include <locale>\n+#include <sstream>\n+#include <cstring>\n+#include <testsuite_hooks.h>\n+\n+void test01()\n+{\n+  using namespace std;\n+  bool test __attribute__((unused)) = true;\n+\n+  typedef istreambuf_iterator<char> iterator_type;\n+\n+  // basic construction\n+  locale loc_c = locale::classic();\n+\n+  // create an ostream-derived object, cache the time_get facet\n+  iterator_type end;\n+\n+  istringstream iss;\n+  iss.imbue(loc_c);\n+  const time_get<char>& tim_get = use_facet<time_get<char> >(iss.getloc()); \n+\n+  const ios_base::iostate good = ios_base::goodbit;\n+  ios_base::iostate errorstate = good;\n+\n+  // iter_type \n+  // get_weekday(iter_type, iter_type, ios_base&, \n+  //             ios_base::iostate&, tm*) const\n+\n+  // sanity checks for \"C\" locale\n+\n+  const char* awdays[7] = { \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" };\n+\n+  for (unsigned i = 0; i < 7; ++i)\n+    {\n+      iss.str(awdays[i]);\n+      iterator_type is_it01(iss);\n+      tm time01;\n+      memset(&time01, -1, sizeof(tm));\n+      errorstate = good;\n+      tim_get.get_weekday(is_it01, end, iss, errorstate, &time01);\n+      VERIFY( time01.tm_wday == i );\n+      VERIFY( errorstate == ios_base::eofbit );\n+    }\n+\n+  const char* wdays[7] = { \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\",\n+\t\t\t   \"Friday\", \"Saturday\" };\n+\n+  for (unsigned i = 0; i < 7; ++i)\n+    {\n+      iss.str(wdays[i]);\n+      iterator_type is_it01(iss);\n+      tm time01;\n+      memset(&time01, -1, sizeof(tm));\n+      errorstate = good;\n+      tim_get.get_weekday(is_it01, end, iss, errorstate, &time01);\n+      VERIFY( time01.tm_wday == i );\n+      VERIFY( errorstate == ios_base::eofbit );\n+    }\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "d4af7b191027c92ef95044b101d2cedfdecec321", "filename": "libstdc++-v3/testsuite/22_locale/time_get/get_weekday/wchar_t/6.cc", "status": "added", "additions": 89, "deletions": 0, "changes": 89, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ebf9c376342d1cb69f1aefddc2db5d2fe950248/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_get%2Fget_weekday%2Fwchar_t%2F6.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ebf9c376342d1cb69f1aefddc2db5d2fe950248/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_get%2Fget_weekday%2Fwchar_t%2F6.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_get%2Fget_weekday%2Fwchar_t%2F6.cc?ref=4ebf9c376342d1cb69f1aefddc2db5d2fe950248", "patch": "@@ -0,0 +1,89 @@\n+// 2010-01-05  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+// Copyright (C) 2010 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// 22.2.5.1.1 time_get members\n+\n+#include <locale>\n+#include <sstream>\n+#include <cstring>\n+#include <testsuite_hooks.h>\n+\n+void test01()\n+{\n+  using namespace std;\n+  bool test __attribute__((unused)) = true;\n+\n+  typedef istreambuf_iterator<wchar_t> iterator_type;\n+\n+  // basic construction\n+  locale loc_c = locale::classic();\n+\n+  // create an ostream-derived object, cache the time_get facet\n+  iterator_type end;\n+\n+  wistringstream iss;\n+  iss.imbue(loc_c);\n+  const time_get<wchar_t>& tim_get\n+    = use_facet<time_get<wchar_t> >(iss.getloc()); \n+\n+  const ios_base::iostate good = ios_base::goodbit;\n+  ios_base::iostate errorstate = good;\n+\n+  // iter_type \n+  // get_weekday(iter_type, iter_type, ios_base&, \n+  //             ios_base::iostate&, tm*) const\n+\n+  // sanity checks for \"C\" locale\n+\n+  const wchar_t* awdays[7] = { L\"Sun\", L\"Mon\", L\"Tue\", L\"Wed\",\n+\t\t\t       L\"Thu\", L\"Fri\", L\"Sat\" };\n+\n+  for (unsigned i = 0; i < 7; ++i)\n+    {\n+      iss.str(awdays[i]);\n+      iterator_type is_it01(iss);\n+      tm time01;\n+      memset(&time01, -1, sizeof(tm));\n+      errorstate = good;\n+      tim_get.get_weekday(is_it01, end, iss, errorstate, &time01);\n+      VERIFY( time01.tm_wday == i );\n+      VERIFY( errorstate == ios_base::eofbit );\n+    }\n+\n+  const wchar_t* wdays[7] = { L\"Sunday\", L\"Monday\", L\"Tuesday\", L\"Wednesday\",\n+\t\t\t      L\"Thursday\", L\"Friday\", L\"Saturday\" };\n+\n+  for (unsigned i = 0; i < 7; ++i)\n+    {\n+      iss.str(wdays[i]);\n+      iterator_type is_it01(iss);\n+      tm time01;\n+      memset(&time01, -1, sizeof(tm));\n+      errorstate = good;\n+      tim_get.get_weekday(is_it01, end, iss, errorstate, &time01);\n+      VERIFY( time01.tm_wday == i );\n+      VERIFY( errorstate == ios_base::eofbit );\n+    }\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}]}