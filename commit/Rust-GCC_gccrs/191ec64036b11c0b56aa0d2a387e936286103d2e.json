{"sha": "191ec64036b11c0b56aa0d2a387e936286103d2e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTkxZWM2NDAzNmIxMWMwYjU2YWEwZDJhMzg3ZTkzNjI4NjEwM2QyZQ==", "commit": {"author": {"name": "Ilya Tocar", "email": "ilya.tocar@intel.com", "date": "2014-11-25T13:56:03Z"}, "committer": {"name": "Ilya Tocar", "email": "tocarip@gcc.gnu.org", "date": "2014-11-25T13:56:03Z"}, "message": "Remove unnecessary calls to strchr.\n\ngcc/\n\t* gcc.c (handle_foffload_option): Remove unnecessary calls to strchr,\n\tstrlen, strncpy.\n\t* lto-wrapper.c (append_offload_options): Likewise.\n\n\nCo-Authored-By: Jakub Jelinek <jakub@redhat.com>\n\nFrom-SVN: r218044", "tree": {"sha": "9ecd455af2d5a192d1d2e62f558b237a9f88e62d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9ecd455af2d5a192d1d2e62f558b237a9f88e62d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/191ec64036b11c0b56aa0d2a387e936286103d2e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/191ec64036b11c0b56aa0d2a387e936286103d2e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/191ec64036b11c0b56aa0d2a387e936286103d2e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/191ec64036b11c0b56aa0d2a387e936286103d2e/comments", "author": {"login": "TocarIP", "id": 16836375, "node_id": "MDQ6VXNlcjE2ODM2Mzc1", "avatar_url": "https://avatars.githubusercontent.com/u/16836375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TocarIP", "html_url": "https://github.com/TocarIP", "followers_url": "https://api.github.com/users/TocarIP/followers", "following_url": "https://api.github.com/users/TocarIP/following{/other_user}", "gists_url": "https://api.github.com/users/TocarIP/gists{/gist_id}", "starred_url": "https://api.github.com/users/TocarIP/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TocarIP/subscriptions", "organizations_url": "https://api.github.com/users/TocarIP/orgs", "repos_url": "https://api.github.com/users/TocarIP/repos", "events_url": "https://api.github.com/users/TocarIP/events{/privacy}", "received_events_url": "https://api.github.com/users/TocarIP/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a959b33fc4a5b4dffc55d5c7f105dc1096a75b42", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a959b33fc4a5b4dffc55d5c7f105dc1096a75b42", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a959b33fc4a5b4dffc55d5c7f105dc1096a75b42"}], "stats": {"total": 33, "additions": 21, "deletions": 12}, "files": [{"sha": "a8b9f75af7fbd1e0088f9ff8f6e766189b4eda41", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/191ec64036b11c0b56aa0d2a387e936286103d2e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/191ec64036b11c0b56aa0d2a387e936286103d2e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=191ec64036b11c0b56aa0d2a387e936286103d2e", "patch": "@@ -1,3 +1,10 @@\n+2014-11-25  Ilya Tocar  <ilya.tocar@intel.com>\n+\t    Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gcc.c (handle_foffload_option): Remove unnecessary calls to strchr,\n+\tstrlen, strncpy.\n+\t* lto-wrapper.c (append_offload_options): Likewise.\n+\n 2014-11-25  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* config/rs6000/rs6000.c (rs6000_call_aix): For the AIX ABI, do not"}, {"sha": "b730ba53d7e33a051565643c397170c60e37a8ce", "filename": "gcc/gcc.c", "status": "modified", "additions": 13, "deletions": 11, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/191ec64036b11c0b56aa0d2a387e936286103d2e/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/191ec64036b11c0b56aa0d2a387e936286103d2e/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=191ec64036b11c0b56aa0d2a387e936286103d2e", "patch": "@@ -3384,11 +3384,11 @@ handle_foffload_option (const char *arg)\n     {\n       next = strchr (cur, ',');\n       if (next == NULL)\n-\tnext = strchr (cur, '\\0');\n+\tnext = end;\n       next = (next > end) ? end : next;\n \n       target = XNEWVEC (char, next - cur + 1);\n-      strncpy (target, cur, next - cur);\n+      memcpy (target, cur, next - cur);\n       target[next - cur] = '\\0';\n \n       /* If 'disable' is passed to the option, stop parsing the option and clean\n@@ -3408,8 +3408,7 @@ handle_foffload_option (const char *arg)\n \t  if (n == NULL)\n \t    n = strchr (c, '\\0');\n \n-\t  if (strlen (target) == (size_t) (n - c)\n-\t      && strncmp (target, c, n - c) == 0)\n+\t  if (next - cur == n - c && strncmp (target, c, n - c) == 0)\n \t    break;\n \n \t  c = *n ? n + 1 : NULL;\n@@ -3420,7 +3419,10 @@ handle_foffload_option (const char *arg)\n \t\t     target);\n \n       if (!offload_targets)\n-\toffload_targets = xstrdup (target);\n+\t{\n+\t  offload_targets = target;\n+\t  target = NULL;\n+\t}\n       else\n \t{\n \t  /* Check that the target hasn't already presented in the list.  */\n@@ -3431,8 +3433,7 @@ handle_foffload_option (const char *arg)\n \t      if (n == NULL)\n \t\tn = strchr (c, '\\0');\n \n-\t      if (strlen (target) == (size_t) (n - c)\n-\t\t  && strncmp (c, target, n - c) == 0)\n+\t      if (next - cur == n - c && strncmp (c, target, n - c) == 0)\n \t\tbreak;\n \n \t      c = n + 1;\n@@ -3442,12 +3443,13 @@ handle_foffload_option (const char *arg)\n \t  /* If duplicate is not found, append the target to the list.  */\n \t  if (c > n)\n \t    {\n+\t      size_t offload_targets_len = strlen (offload_targets);\n \t      offload_targets\n \t\t= XRESIZEVEC (char, offload_targets,\n-\t\t\t      strlen (offload_targets) + strlen (target) + 2);\n-\t      if (strlen (offload_targets) != 0)\n-\t\tstrcat (offload_targets, \":\");\n-\t      strcat (offload_targets, target);\n+\t\t\t      offload_targets_len + next - cur + 2);\n+\t      if (offload_targets_len)\n+\t\toffload_targets[offload_targets_len++] = ':';\n+\t      memcpy (offload_targets + offload_targets_len, target, next - cur);\n \t    }\n \t}\n "}, {"sha": "9a540b4ede5b128a669824171ba795cb47552df1", "filename": "gcc/lto-wrapper.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/191ec64036b11c0b56aa0d2a387e936286103d2e/gcc%2Flto-wrapper.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/191ec64036b11c0b56aa0d2a387e936286103d2e/gcc%2Flto-wrapper.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-wrapper.c?ref=191ec64036b11c0b56aa0d2a387e936286103d2e", "patch": "@@ -587,7 +587,7 @@ append_offload_options (obstack *argv_obstack, const char *target,\n \t    {\n \t      next = strchr (cur, ',');\n \t      if (next == NULL)\n-\t\tnext = strchr (cur, '\\0');\n+\t\tnext = opts;\n \t      next = (next > opts) ? opts : next;\n \n \t      if (strlen (target) == (size_t) (next - cur)"}]}