{"sha": "e6b18eaa6de98b51eabf96089e2e5de971b5043e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTZiMThlYWE2ZGU5OGI1MWVhYmY5NjA4OWUyZTVkZTk3MWI1MDQzZQ==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2009-01-26T23:39:02Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2009-01-26T23:39:02Z"}, "message": "re PR target/38952 (EH does not work.)\n\n2009-01-26  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR target/38952\n\t* g++.dg/torture/stackalign/test-unwind.h (main): Also return 0\n\tif __USING_SJLJ_EXCEPTIONS__ is defined.\n\n\t* g++.dg/torture/stackalign/unwind-0.C (foo): Don't define if\n\t__USING_SJLJ_EXCEPTIONS__ is defined.\n\t* g++.dg/torture/stackalign/unwind-1.C (foo): Likewise.\n\t* g++.dg/torture/stackalign/unwind-2.C (foo): Likewise.\n\t* g++.dg/torture/stackalign/unwind-3.C (foo): Likewise.\n\t* g++.dg/torture/stackalign/unwind-4.C (foo): Likewise.\n\t* g++.dg/torture/stackalign/unwind-5.C (foo): Likewise.\n\t* g++.dg/torture/stackalign/unwind-6.C (foo): Likewise.\n\nFrom-SVN: r143689", "tree": {"sha": "1eeeaa6c2eb786d3d5ba6f129c1ed1120284ddd2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1eeeaa6c2eb786d3d5ba6f129c1ed1120284ddd2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e6b18eaa6de98b51eabf96089e2e5de971b5043e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6b18eaa6de98b51eabf96089e2e5de971b5043e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e6b18eaa6de98b51eabf96089e2e5de971b5043e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6b18eaa6de98b51eabf96089e2e5de971b5043e/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5efb79fcabdcd5e0633e938f6864ecf58700c1b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5efb79fcabdcd5e0633e938f6864ecf58700c1b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5efb79fcabdcd5e0633e938f6864ecf58700c1b3"}], "stats": {"total": 31, "additions": 23, "deletions": 8}, "files": [{"sha": "89c32e50df64f01dbb20e4198381b3d8362de325", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6b18eaa6de98b51eabf96089e2e5de971b5043e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6b18eaa6de98b51eabf96089e2e5de971b5043e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e6b18eaa6de98b51eabf96089e2e5de971b5043e", "patch": "@@ -1,3 +1,18 @@\n+2009-01-26  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/38952\n+\t* g++.dg/torture/stackalign/test-unwind.h (main): Also return 0\n+\tif __USING_SJLJ_EXCEPTIONS__ is defined.\n+\n+\t* g++.dg/torture/stackalign/unwind-0.C (foo): Don't define if\n+\t__USING_SJLJ_EXCEPTIONS__ is defined.\n+\t* g++.dg/torture/stackalign/unwind-1.C (foo): Likewise.\n+\t* g++.dg/torture/stackalign/unwind-2.C (foo): Likewise.\n+\t* g++.dg/torture/stackalign/unwind-3.C (foo): Likewise.\n+\t* g++.dg/torture/stackalign/unwind-4.C (foo): Likewise.\n+\t* g++.dg/torture/stackalign/unwind-5.C (foo): Likewise.\n+\t* g++.dg/torture/stackalign/unwind-6.C (foo): Likewise.\n+\n 2009-01-26  Danny Smith  <dannysmith@users.sourceforge.net>\n \n \tPR testsuite/38949"}, {"sha": "b07b27c21fb7be98414b3f7079f65b9347b70600", "filename": "gcc/testsuite/g++.dg/torture/stackalign/test-unwind.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6b18eaa6de98b51eabf96089e2e5de971b5043e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fstackalign%2Ftest-unwind.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6b18eaa6de98b51eabf96089e2e5de971b5043e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fstackalign%2Ftest-unwind.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fstackalign%2Ftest-unwind.h?ref=e6b18eaa6de98b51eabf96089e2e5de971b5043e", "patch": "@@ -34,7 +34,7 @@ extern void foo(void);\n         );\\\n   }\n \n-#ifdef __PIC__\n+#if defined __PIC__ || defined __USING_SJLJ_EXCEPTIONS__\n int\n main ()\n {"}, {"sha": "f8166eb9548717b33f96a1cc090c74b18fd68b9e", "filename": "gcc/testsuite/g++.dg/torture/stackalign/unwind-0.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6b18eaa6de98b51eabf96089e2e5de971b5043e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fstackalign%2Funwind-0.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6b18eaa6de98b51eabf96089e2e5de971b5043e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fstackalign%2Funwind-0.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fstackalign%2Funwind-0.C?ref=e6b18eaa6de98b51eabf96089e2e5de971b5043e", "patch": "@@ -2,7 +2,7 @@\n \n #include \"test-unwind.h\"\n \n-#ifndef __PIC__\n+#if !defined __PIC__ && !defined __USING_SJLJ_EXCEPTIONS__\n void __attribute__ ((noinline)) foo()\n {\n         ALTER_REGS();"}, {"sha": "70dce748567987c808a9bcd8c05a40dd6096a723", "filename": "gcc/testsuite/g++.dg/torture/stackalign/unwind-1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6b18eaa6de98b51eabf96089e2e5de971b5043e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fstackalign%2Funwind-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6b18eaa6de98b51eabf96089e2e5de971b5043e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fstackalign%2Funwind-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fstackalign%2Funwind-1.C?ref=e6b18eaa6de98b51eabf96089e2e5de971b5043e", "patch": "@@ -2,7 +2,7 @@\n \n #include \"test-unwind.h\"\n \n-#ifndef __PIC__\n+#if !defined __PIC__ && !defined __USING_SJLJ_EXCEPTIONS__\n /* Test situation 1: Stack really realign without DRAP */\n void __attribute__ ((noinline))\n foo ()"}, {"sha": "791eeb55106b461cab2b531db1e98da4e9a17fd2", "filename": "gcc/testsuite/g++.dg/torture/stackalign/unwind-2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6b18eaa6de98b51eabf96089e2e5de971b5043e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fstackalign%2Funwind-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6b18eaa6de98b51eabf96089e2e5de971b5043e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fstackalign%2Funwind-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fstackalign%2Funwind-2.C?ref=e6b18eaa6de98b51eabf96089e2e5de971b5043e", "patch": "@@ -2,7 +2,7 @@\n \n #include \"test-unwind.h\"\n \n-#ifndef __PIC__\n+#if !defined __PIC__ && !defined __USING_SJLJ_EXCEPTIONS__\n /* Test situation 2: stack really realign with DRAP reg CX */\n void __attribute__ ((noinline))\n foo ()"}, {"sha": "29dee2d5a7b74a64918d93f26193e0db70809181", "filename": "gcc/testsuite/g++.dg/torture/stackalign/unwind-3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6b18eaa6de98b51eabf96089e2e5de971b5043e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fstackalign%2Funwind-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6b18eaa6de98b51eabf96089e2e5de971b5043e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fstackalign%2Funwind-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fstackalign%2Funwind-3.C?ref=e6b18eaa6de98b51eabf96089e2e5de971b5043e", "patch": "@@ -2,7 +2,7 @@\n \n #include \"test-unwind.h\"\n \n-#ifndef __PIC__\n+#if !defined __PIC__ && !defined __USING_SJLJ_EXCEPTIONS__\n /* Test situation 3: Stack realign really happen with DRAP reg DI */\n void __attribute__ ((noinline)) __attribute__ ((regparm(3))) \n bar (int arg1, int arg2, int arg3)"}, {"sha": "a896176ae04a60a9eff1252dcf265e9980e764b8", "filename": "gcc/testsuite/g++.dg/torture/stackalign/unwind-4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6b18eaa6de98b51eabf96089e2e5de971b5043e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fstackalign%2Funwind-4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6b18eaa6de98b51eabf96089e2e5de971b5043e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fstackalign%2Funwind-4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fstackalign%2Funwind-4.C?ref=e6b18eaa6de98b51eabf96089e2e5de971b5043e", "patch": "@@ -2,7 +2,7 @@\n \n #include \"test-unwind.h\"\n \n-#ifndef __PIC__\n+#if !defined __PIC__ && !defined __USING_SJLJ_EXCEPTIONS__\n volatile int __attribute__ ((aligned(32))) g_a=1;\n /* Test situation 4: no Drap and stack realign doesn't really happen */\n void __attribute__ ((noinline))"}, {"sha": "514e4e77a56d6ef686c7c1d88a02649f4bd8470d", "filename": "gcc/testsuite/g++.dg/torture/stackalign/unwind-5.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6b18eaa6de98b51eabf96089e2e5de971b5043e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fstackalign%2Funwind-5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6b18eaa6de98b51eabf96089e2e5de971b5043e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fstackalign%2Funwind-5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fstackalign%2Funwind-5.C?ref=e6b18eaa6de98b51eabf96089e2e5de971b5043e", "patch": "@@ -2,7 +2,7 @@\n \n #include \"test-unwind.h\"\n \n-#ifndef __PIC__\n+#if !defined __PIC__ && !defined __USING_SJLJ_EXCEPTIONS__\n double g_f=1.0;\n /* Test situation 5: Stack realign dosn't really happen with DRAP reg CX */\n void __attribute__ ((noinline)) __attribute__ ((regparm(2))) "}, {"sha": "a888ca1b5f9877f8cb39ceb24d4a49f5e3ff65d6", "filename": "gcc/testsuite/g++.dg/torture/stackalign/unwind-6.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6b18eaa6de98b51eabf96089e2e5de971b5043e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fstackalign%2Funwind-6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6b18eaa6de98b51eabf96089e2e5de971b5043e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fstackalign%2Funwind-6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fstackalign%2Funwind-6.C?ref=e6b18eaa6de98b51eabf96089e2e5de971b5043e", "patch": "@@ -2,7 +2,7 @@\n \n #include \"test-unwind.h\"\n \n-#ifndef __PIC__\n+#if !defined __PIC__ && !defined __USING_SJLJ_EXCEPTIONS__\n double g_f=1.0;\n /* Test situation 6: Stack realign dosn't really happen with DRAP reg DI */\n void __attribute__ ((noinline)) __attribute__ ((regparm(3))) "}]}