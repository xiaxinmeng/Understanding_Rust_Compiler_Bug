{"sha": "d3632d41e2da6502060cfd4f20cf9004cb7d0302", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDM2MzJkNDFlMmRhNjUwMjA2MGNmZDRmMjBjZjkwMDRjYjdkMDMwMg==", "commit": {"author": {"name": "Ulrich Weigand", "email": "uweigand@de.ibm.com", "date": "2003-06-30T22:06:41Z"}, "committer": {"name": "Ulrich Weigand", "email": "uweigand@gcc.gnu.org", "date": "2003-06-30T22:06:41Z"}, "message": "s390.c (s390_extra_constraint): New function.\n\n\t* config/s390/s390.c (s390_extra_constraint): New function.\n\t* config/s390/s390-protos.h (s390_extra_constraint): Declare it.\n\t* config/s390/s390.h (EXTRA_CONSTRAINT): Use it.\n\t* config/s390/s390.c (q_constraint): Remove.\n\t* config/s390/s390-protos.h (q_constraint): Likewise.\n\t* config/s390/s390.h (EXTRA_MEMORY_CONSTRAINT): Add 'R', 'S', 'T'.\n\t(EXTRA_ADDRESS_CONSTRAINT): Define.\n\n\t* config/s390/s390.c (larl_operand): Refuse out-of-range operands.\n\t(DISP_IN_RANGE, s390_short_displacement): New.\n\t(legitimate_reload_operand_p): Support long displacements.\n\t(s390_decompose_address): Likewise.\n\t(legitimize_pic_address): Likewise.\n\t(legitimize_address): Likewise.\n\t(s390_fixup_clobbered_return_reg): Likewise.\n\t(s390_emit_prologue, s390_emit_epilogue): Likewise.\n\t(s390_output_mi_thunk): Likewise.\n\n\t* config/s390/s390.md (attr \"op_type\"): Add \"RXY\", \"RSY\", \"SIY\".\n\t(attr \"atype\", attr \"length\"): Add defaults for new op_types.\n\t(all insns): Change op_type attribute where appropriate.\n\n\t(\"*movdi_lay\", \"*movsi_lay\", \"*extendqidi2\", \"*extendqisi2\"): New insns.\n\t(\"*tmqi_ext\", \"*tmdi_mem\", \"*tmsi_mem\", \"*tmhi_mem\", *tmqi_mem\",\n\t\"*tstsi\", \"*tstsi_cconly\", \"*tsthiCCT\", \"*tsthiCCT_cconly\",\n\t\"*tsthi\", \"*tsthi_cconly\", \"*tstqiCCT\", \"*tstqiCCT_cconly\",\n\t\"*tstqi\", \"*tstqi_cconly\", \"*cmpsi_ccs_sign\", \"*cmpsi_ccs\",\n\t\"*cmpsi_ccu\", \"*cmphi_ccu\", \"*cmpqi_ccu\", \"*cli\",\n\t\"movti\", \"*movdi_64\", \"*movdi_31\", \"*movsi\", \"movhi\", \"movqi_64\",\n\t\"movqi\", \"*movstrictqi\", \"*movstricthi\", \"movstrictsi\",\n\t\"*movdf_64\", \"*movdf_31\", \"*movsf\",\n\t\"*load_multiple_si\", \"*store_multiple_di\",\n\t\"*sethighqisi\", \"*sethighhisi\", \"*sethighqidi_31\", \"*extendhisi2\",\n\t\"*la_64\", \"*la_31\", \"*la_31_and\", \"force_la_31\",\n\t\"*addsi3_carry1_cc\", *addsi3_carry1_cconly\",\n\t\"*addsi3_carry2_cc\", *addsi3_carry2_cconly\",\n\t\"*addsi3_cc\", \"*addsi3_cconly\", \"*addsi3_cconly2\",\n\t\"*addsi3_sign\", \"*addsi3_sub\", \"addsi3\",\n\t\"*subsi3_borrow_cc\", \"*subsi3_borrow_cconly\", \"*subsi3_cc\",\n\t\"*subsi3_cconly\", \"*subsi3_sign\", \"*subsi3_sub\", \"subsi3\",\n\t\"mulsi3\"\n\t\"*andsi3_cc\", \"*andsi3_cconly\", \"andsi3\",\n\t\"*andqi3_ss\", \"*andqi3_ss_inv\",\n\t\"*iorsi3_cc\", \"*iorsi3_cconly\", \"iorsi3\",\n\t\"*iorqi3_ss\", \"*iorqi3_ss_inv\",\n\t\"*xorsi3_cc\", \"*xorsi3_cconly\", \"xorsi3\",\n\t\"*xorqi3_ss\", \"*xorqi3_ss_inv\",\n\t\"*tls_load_31\"): Add alternatives for long-displacement instructions.\n\n\t(\"*cmpdf_ccs\", \"*cmpdf_ccs_ibm\", \"*cmpsf_ccs\", \"*cmpsf_ccs_ibm\",\n\t\"*load_multiple_di\", \"*store_multiple_di\",\n\t\"*sethighqidi_64\", \"*zero_extendhisi2_31\",\n\t\"truncdfsf2_ibm\", \"extendsfdf2_ieee\", \"extendsfdf2_ibm\",\n\t\"adddf3\", \"*adddf3\", \"*adddf3_ibm\",\n\t\"addsf3\", \"*addsf3\", \"*addsf3_ibm\",\n\t\"subdf3\", \"*subdf3\", \"*subdf3_ibm\",\n\t\"subsf3\", \"*subsf3\", \"*subsf3_ibm\",\n\t\"mulsi_6432\", \"divmoddisi3\",\n\t\"muldf3\", \"*muldf3\", \"*muldf3_ibm\",\n\t\"mulsf3\", \"*mulsf3\", \"*mulsf3_ibm\",\n\t\"divdf3\", \"*divdf3\", \"*divdf3_ibm\",\n\t\"divsf3\", \"div*sf3\", \"*divsf3_ibm\",\n\t\"sqrtdf2\", \"sqrtsf2\",\n\t\"*cjump_long\", \"*icjump_long\", \"indirect_jump\", \"casesi_jump\",\n\t\"*doloop_si_long\", \"*doloop_di_long\", \"bas_64\", \"bas_31\",\n\t\"bas_r_64\", \"bas_r_31\", \"bas_tls_31\", \"bas_tls_64\"): Adapt memory\n\tand address constraints for instructions that do not accept long\n\tdisplacements.\n\nFrom-SVN: r68744", "tree": {"sha": "0173739d4e525d9cbc5b153ac9207ef0a3e70607", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0173739d4e525d9cbc5b153ac9207ef0a3e70607"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d3632d41e2da6502060cfd4f20cf9004cb7d0302", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3632d41e2da6502060cfd4f20cf9004cb7d0302", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3632d41e2da6502060cfd4f20cf9004cb7d0302", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3632d41e2da6502060cfd4f20cf9004cb7d0302/comments", "author": null, "committer": null, "parents": [{"sha": "52609473f80f0a0cf9f4643eaaf3c72585cc1f16", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52609473f80f0a0cf9f4643eaaf3c72585cc1f16", "html_url": "https://github.com/Rust-GCC/gccrs/commit/52609473f80f0a0cf9f4643eaaf3c72585cc1f16"}], "stats": {"total": 1329, "additions": 838, "deletions": 491}, "files": [{"sha": "47da29f788ccf1380645bc66f500092fc6cb56d7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 71, "deletions": 0, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3632d41e2da6502060cfd4f20cf9004cb7d0302/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3632d41e2da6502060cfd4f20cf9004cb7d0302/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d3632d41e2da6502060cfd4f20cf9004cb7d0302", "patch": "@@ -1,3 +1,74 @@\n+2003-06-30  Ulrich Weigand  <uweigand@de.ibm.com>\n+\n+\t* config/s390/s390.c (s390_extra_constraint): New function.\n+\t* config/s390/s390-protos.h (s390_extra_constraint): Declare it.\n+\t* config/s390/s390.h (EXTRA_CONSTRAINT): Use it.\n+\t* config/s390/s390.c (q_constraint): Remove.\n+\t* config/s390/s390-protos.h (q_constraint): Likewise.\n+\t* config/s390/s390.h (EXTRA_MEMORY_CONSTRAINT): Add 'R', 'S', 'T'.\n+\t(EXTRA_ADDRESS_CONSTRAINT): Define.\n+\n+\t* config/s390/s390.c (larl_operand): Refuse out-of-range operands.\n+\t(DISP_IN_RANGE, s390_short_displacement): New.\n+\t(legitimate_reload_operand_p): Support long displacements.\n+\t(s390_decompose_address): Likewise.\n+\t(legitimize_pic_address): Likewise.\n+\t(legitimize_address): Likewise.\n+\t(s390_fixup_clobbered_return_reg): Likewise.\n+\t(s390_emit_prologue, s390_emit_epilogue): Likewise.\n+\t(s390_output_mi_thunk): Likewise.\n+\n+\t* config/s390/s390.md (attr \"op_type\"): Add \"RXY\", \"RSY\", \"SIY\".\n+\t(attr \"atype\", attr \"length\"): Add defaults for new op_types.\n+\t(all insns): Change op_type attribute where appropriate.\n+\n+\t(\"*movdi_lay\", \"*movsi_lay\", \"*extendqidi2\", \"*extendqisi2\"): New insns.\n+\t(\"*tmqi_ext\", \"*tmdi_mem\", \"*tmsi_mem\", \"*tmhi_mem\", *tmqi_mem\",\n+\t\"*tstsi\", \"*tstsi_cconly\", \"*tsthiCCT\", \"*tsthiCCT_cconly\",\n+\t\"*tsthi\", \"*tsthi_cconly\", \"*tstqiCCT\", \"*tstqiCCT_cconly\",\n+\t\"*tstqi\", \"*tstqi_cconly\", \"*cmpsi_ccs_sign\", \"*cmpsi_ccs\",\n+\t\"*cmpsi_ccu\", \"*cmphi_ccu\", \"*cmpqi_ccu\", \"*cli\", \n+\t\"movti\", \"*movdi_64\", \"*movdi_31\", \"*movsi\", \"movhi\", \"movqi_64\",\n+\t\"movqi\", \"*movstrictqi\", \"*movstricthi\", \"movstrictsi\",\n+\t\"*movdf_64\", \"*movdf_31\", \"*movsf\", \n+\t\"*load_multiple_si\", \"*store_multiple_di\",\n+\t\"*sethighqisi\", \"*sethighhisi\", \"*sethighqidi_31\", \"*extendhisi2\", \n+\t\"*la_64\", \"*la_31\", \"*la_31_and\", \"force_la_31\", \n+\t\"*addsi3_carry1_cc\", *addsi3_carry1_cconly\",\n+\t\"*addsi3_carry2_cc\", *addsi3_carry2_cconly\",\n+\t\"*addsi3_cc\", \"*addsi3_cconly\", \"*addsi3_cconly2\",\n+\t\"*addsi3_sign\", \"*addsi3_sub\", \"addsi3\", \n+\t\"*subsi3_borrow_cc\", \"*subsi3_borrow_cconly\", \"*subsi3_cc\", \n+\t\"*subsi3_cconly\", \"*subsi3_sign\", \"*subsi3_sub\", \"subsi3\",\n+\t\"mulsi3\"\n+\t\"*andsi3_cc\", \"*andsi3_cconly\", \"andsi3\",\n+\t\"*andqi3_ss\", \"*andqi3_ss_inv\",\n+\t\"*iorsi3_cc\", \"*iorsi3_cconly\", \"iorsi3\",\n+\t\"*iorqi3_ss\", \"*iorqi3_ss_inv\",\n+\t\"*xorsi3_cc\", \"*xorsi3_cconly\", \"xorsi3\",\n+\t\"*xorqi3_ss\", \"*xorqi3_ss_inv\",\n+\t\"*tls_load_31\"): Add alternatives for long-displacement instructions.\n+\n+\t(\"*cmpdf_ccs\", \"*cmpdf_ccs_ibm\", \"*cmpsf_ccs\", \"*cmpsf_ccs_ibm\",\n+\t\"*load_multiple_di\", \"*store_multiple_di\",\n+\t\"*sethighqidi_64\", \"*zero_extendhisi2_31\", \n+\t\"truncdfsf2_ibm\", \"extendsfdf2_ieee\", \"extendsfdf2_ibm\",\n+\t\"adddf3\", \"*adddf3\", \"*adddf3_ibm\",\n+\t\"addsf3\", \"*addsf3\", \"*addsf3_ibm\",\n+\t\"subdf3\", \"*subdf3\", \"*subdf3_ibm\",\n+\t\"subsf3\", \"*subsf3\", \"*subsf3_ibm\",\n+\t\"mulsi_6432\", \"divmoddisi3\",\n+\t\"muldf3\", \"*muldf3\", \"*muldf3_ibm\",\n+\t\"mulsf3\", \"*mulsf3\", \"*mulsf3_ibm\",\n+\t\"divdf3\", \"*divdf3\", \"*divdf3_ibm\",\n+\t\"divsf3\", \"div*sf3\", \"*divsf3_ibm\",\n+\t\"sqrtdf2\", \"sqrtsf2\", \n+\t\"*cjump_long\", \"*icjump_long\", \"indirect_jump\", \"casesi_jump\",\n+\t\"*doloop_si_long\", \"*doloop_di_long\", \"bas_64\", \"bas_31\",\n+\t\"bas_r_64\", \"bas_r_31\", \"bas_tls_31\", \"bas_tls_64\"): Adapt memory \n+\tand address constraints for instructions that do not accept long \n+\tdisplacements.\n+\n 2003-06-30  Hartmut Penner  <hpenner@de.ibm.com>\n             Ulrich Weigand  <uweigand@de.ibm.com>\n "}, {"sha": "b0d2350d73ee113947223910aab3ef4eaadece47", "filename": "gcc/config/s390/s390-protos.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3632d41e2da6502060cfd4f20cf9004cb7d0302/gcc%2Fconfig%2Fs390%2Fs390-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3632d41e2da6502060cfd4f20cf9004cb7d0302/gcc%2Fconfig%2Fs390%2Fs390-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390-protos.h?ref=d3632d41e2da6502060cfd4f20cf9004cb7d0302", "patch": "@@ -29,7 +29,7 @@ extern void s390_emit_epilogue PARAMS ((void));\n extern void s390_function_profiler PARAMS ((FILE *, int));\n \n #ifdef RTX_CODE\n-extern int q_constraint PARAMS ((rtx));\n+extern int s390_extra_constraint PARAMS ((rtx, int));\n extern int const0_operand PARAMS ((rtx, enum machine_mode));\n extern int consttable_operand PARAMS ((rtx, enum machine_mode));\n extern int larl_operand PARAMS ((rtx, enum machine_mode));"}, {"sha": "f748374d5115928ee11555c48fce7c69ff12d4c9", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 176, "deletions": 31, "changes": 207, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3632d41e2da6502060cfd4f20cf9004cb7d0302/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3632d41e2da6502060cfd4f20cf9004cb7d0302/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=d3632d41e2da6502060cfd4f20cf9004cb7d0302", "patch": "@@ -204,6 +204,7 @@ static int s390_branch_condition_mask PARAMS ((rtx));\n static const char *s390_branch_condition_mnemonic PARAMS ((rtx, int));\n static int check_mode PARAMS ((rtx, enum machine_mode *));\n static int general_s_operand PARAMS ((rtx, enum machine_mode, int));\n+static int s390_short_displacement PARAMS ((rtx));\n static int s390_decompose_address PARAMS ((rtx, struct s390_address *));\n static rtx get_thread_pointer PARAMS ((void));\n static rtx legitimize_tls_address PARAMS ((rtx, rtx));\n@@ -228,6 +229,11 @@ static rtx restore_gprs PARAMS ((rtx, int, int, int));\n static int s390_function_arg_size PARAMS ((enum machine_mode, tree));\n static bool s390_function_arg_float PARAMS ((enum machine_mode, tree));\n static struct machine_function * s390_init_machine_status PARAMS ((void));\n+\n+/* Check whether integer displacement is in range.  */\n+#define DISP_IN_RANGE(d) \\\n+  (TARGET_LONG_DISPLACEMENT? ((d) >= -524288 && (d) <= 524287) \\\n+                           : ((d) >= 0 && (d) <= 4095))\n  \n /* Return true if SET either doesn't set the CC register, or else\n    the source and destination have matching CC modes and that \n@@ -1103,12 +1109,17 @@ larl_operand (op, mode)\n     return 0;\n   op = XEXP (op, 0);\n \n-  /* Allow adding *even* constants.  */\n+  /* Allow adding *even* in-range constants.  */\n   if (GET_CODE (op) == PLUS)\n     {\n       if (GET_CODE (XEXP (op, 1)) != CONST_INT\n           || (INTVAL (XEXP (op, 1)) & 1) != 0)\n         return 0;\n+#if HOST_BITS_PER_WIDE_INT > 32\n+      if (INTVAL (XEXP (op, 1)) >= (HOST_WIDE_INT)1 << 32\n+\t  || INTVAL (XEXP (op, 1)) < -((HOST_WIDE_INT)1 << 32))\n+        return 0;\n+#endif\t\n       op = XEXP (op, 0);\n     }\n \n@@ -1221,24 +1232,121 @@ s_imm_operand (op, mode)\n   return general_s_operand (op, mode, 1);\n }\n \n-/* Return true if OP is a valid operand for a 'Q' constraint.\n-   This differs from s_operand in that only memory operands\n-   without index register are accepted, nothing else.  */\n+/* Return true if DISP is a valid short displacement.  */\n+\n+static int\n+s390_short_displacement (disp)\n+     rtx disp;\n+{\n+  /* No displacement is OK.  */\n+  if (!disp)\n+    return 1;\n+\n+  /* Integer displacement in range.  */\n+  if (GET_CODE (disp) == CONST_INT)\n+    return INTVAL (disp) >= 0 && INTVAL (disp) < 4096;\n+\n+  /* GOT offset is not OK, the GOT can be large.  */\n+  if (GET_CODE (disp) == CONST\n+      && GET_CODE (XEXP (disp, 0)) == UNSPEC\n+      && XINT (XEXP (disp, 0), 1) == 110)\n+    return 0;\n+\n+  /* All other symbolic constants are literal pool references,\n+     which are OK as the literal pool must be small.  */\n+  if (GET_CODE (disp) == CONST)\n+    return 1;\n+\n+  return 0;\n+}\n+\n+/* Return true if OP is a valid operand for a C constraint.  */\n \n int\n-q_constraint (op)\n-     register rtx op;\n+s390_extra_constraint (op, c)\n+     rtx op;\n+     int c;\n {\n   struct s390_address addr;\n \n-  if (GET_CODE (op) != MEM)\n-    return 0;\n+  switch (c)\n+    {\n+    case 'Q':\n+      if (GET_CODE (op) != MEM)\n+\treturn 0;\n+      if (!s390_decompose_address (XEXP (op, 0), &addr))\n+\treturn 0;\n+      if (addr.indx)\n+\treturn 0;\n \n-  if (!s390_decompose_address (XEXP (op, 0), &addr))\n-    return 0;\n+      if (TARGET_LONG_DISPLACEMENT)\n+\t{\n+\t  if (!s390_short_displacement (addr.disp))\n+\t    return 0;\n+\t}\n+      break;\n \n-  if (addr.indx)\n-    return 0;\n+    case 'R':\n+      if (GET_CODE (op) != MEM)\n+\treturn 0;\n+\n+      if (TARGET_LONG_DISPLACEMENT)\n+\t{\n+\t  if (!s390_decompose_address (XEXP (op, 0), &addr))\n+\t    return 0;\n+\t  if (!s390_short_displacement (addr.disp))\n+\t    return 0;\n+\t}\n+      break;\n+\n+    case 'S':\n+      if (!TARGET_LONG_DISPLACEMENT)\n+\treturn 0;\n+      if (GET_CODE (op) != MEM)\n+\treturn 0;\n+      if (!s390_decompose_address (XEXP (op, 0), &addr))\n+\treturn 0;\n+      if (addr.indx)\n+\treturn 0;\n+      if (s390_short_displacement (addr.disp))\n+\treturn 0;\n+      break;\n+\n+    case 'T':\n+      if (!TARGET_LONG_DISPLACEMENT)\n+\treturn 0;\n+      if (GET_CODE (op) != MEM)\n+\treturn 0;\n+      /* Any invalid address here will be fixed up by reload,\n+\t so accept it for the most generic constraint.  */\n+      if (s390_decompose_address (XEXP (op, 0), &addr)\n+\t  && s390_short_displacement (addr.disp))\n+\treturn 0;\n+      break;\n+\n+    case 'U':\n+      if (TARGET_LONG_DISPLACEMENT)\n+\t{\n+\t  if (!s390_decompose_address (op, &addr))\n+\t    return 0;\n+\t  if (!s390_short_displacement (addr.disp))\n+\t    return 0;\n+\t}\n+      break;\n+\n+    case 'W':\n+      if (!TARGET_LONG_DISPLACEMENT)\n+\treturn 0;\n+      /* Any invalid address here will be fixed up by reload,\n+\t so accept it for the most generic constraint.  */\n+      if (s390_decompose_address (op, &addr)\n+\t  && s390_short_displacement (addr.disp))\n+\treturn 0;\n+      break;\n+\n+    default:\n+      return 0;\n+    }\n \n   return 1;\n }\n@@ -1673,6 +1781,11 @@ int\n legitimate_reload_constant_p (op)\n      register rtx op;\n {\n+  /* Accept la(y) operands.  */\n+  if (GET_CODE (op) == CONST_INT \n+      && DISP_IN_RANGE (INTVAL (op)))\n+    return 1;\n+\n   /* Accept l(g)hi operands.  */\n   if (GET_CODE (op) == CONST_INT\n       && CONST_OK_FOR_LETTER_P (INTVAL (op), 'K'))\n@@ -2016,7 +2129,7 @@ s390_decompose_address (addr, out)\n \t     this is fixed up by reload in any case.  */\n \t  if (base != arg_pointer_rtx && indx != arg_pointer_rtx)\n \t    {\n-\t      if (INTVAL (disp) < 0 || INTVAL (disp) >= 4096)\n+\t      if (!DISP_IN_RANGE (INTVAL (disp)))\n \t        return FALSE;\n \t    }\n         }\n@@ -2395,7 +2508,7 @@ legitimize_pic_address (orig, reg)\n                          pair of LARL and LA.  */\n                       rtx temp = reg? reg : gen_reg_rtx (Pmode);\n \n-                      if (INTVAL (op1) < 0 || INTVAL (op1) >= 4096)\n+                      if (!DISP_IN_RANGE (INTVAL (op1)))\n                         {\n                           int even = INTVAL (op1) - 1;\n                           op0 = gen_rtx_PLUS (Pmode, op0, GEN_INT (even));\n@@ -2766,8 +2879,8 @@ legitimize_address (x, oldx, mode)\n      change later anyway.  */\n \n   if (GET_CODE (constant_term) == CONST_INT\n-      && (INTVAL (constant_term) < 0\n-          || INTVAL (constant_term) >= 4096)\n+      && !TARGET_LONG_DISPLACEMENT\n+      && !DISP_IN_RANGE (INTVAL (constant_term))\n       && !(REG_P (x) && REGNO_PTR_FRAME_P (REGNO (x))))\n     {\n       HOST_WIDE_INT lower = INTVAL (constant_term) & 0xfff;\n@@ -5050,7 +5163,7 @@ s390_fixup_clobbered_return_reg (return_reg)\n \treg = stack_pointer_rtx;\n \n       off = GEN_INT (cfun->machine->frame_size + REGNO (return_reg) * UNITS_PER_WORD);\n-      if (INTVAL (off) >= 4096)\n+      if (!DISP_IN_RANGE (INTVAL (off)))\n \t{\n \t  off = force_const_mem (Pmode, off);\n \t  new_insn = gen_rtx_SET (Pmode, return_reg, off);\n@@ -5534,11 +5647,21 @@ s390_emit_prologue ()\n       \n       /* Substract frame size from stack pointer.  */\n \n-      frame_off = GEN_INT (-cfun->machine->frame_size);\n-      if (!CONST_OK_FOR_LETTER_P (-cfun->machine->frame_size, 'K'))\n-\tframe_off = force_const_mem (Pmode, frame_off);\n+      if (DISP_IN_RANGE (INTVAL (frame_off)))\n+\t{\n+\t  insn = gen_rtx_SET (VOIDmode, stack_pointer_rtx, \n+\t\t\t      gen_rtx_PLUS (Pmode, stack_pointer_rtx, \n+\t\t\t\t      \t    frame_off));\n+\t  insn = emit_insn (insn);\n+\t}\n+      else\n+\t{\n+\t  if (!CONST_OK_FOR_LETTER_P (INTVAL (frame_off), 'K'))\n+\t    frame_off = force_const_mem (Pmode, frame_off);\n+\n+          insn = emit_insn (gen_add2_insn (stack_pointer_rtx, frame_off));\n+\t}\n \n-      insn = emit_insn (gen_add2_insn (stack_pointer_rtx, frame_off));\n       RTX_FRAME_RELATED_P (insn) = 1;\n       REG_NOTES (insn) = \n \tgen_rtx_EXPR_LIST (REG_FRAME_RELATED_EXPR,\n@@ -5697,8 +5820,8 @@ s390_emit_epilogue ()\n     {\n       /* Nothing to restore.  */\n     }\n-  else if (cfun->machine->frame_size + area_bottom >= 0\n-           && cfun->machine->frame_size + area_top <= 4096)\n+  else if (DISP_IN_RANGE (cfun->machine->frame_size + area_bottom)\n+           && DISP_IN_RANGE (cfun->machine->frame_size + area_top-1))\n     {\n       /* Area is in range.  */\n       offset = cfun->machine->frame_size;\n@@ -5710,10 +5833,19 @@ s390_emit_epilogue ()\n       offset = area_bottom < 0 ? -area_bottom : 0; \n       frame_off = GEN_INT (cfun->machine->frame_size - offset);\n \n-      if (!CONST_OK_FOR_LETTER_P (INTVAL (frame_off), 'K'))\n-\tframe_off = force_const_mem (Pmode, frame_off);\n+      if (DISP_IN_RANGE (INTVAL (frame_off)))\n+\t{\n+\t  insn = gen_rtx_SET (VOIDmode, frame_pointer, \n+\t\t\t      gen_rtx_PLUS (Pmode, frame_pointer, frame_off));\n+\t  insn = emit_insn (insn);\n+\t}\n+      else\n+\t{\n+\t  if (!CONST_OK_FOR_LETTER_P (INTVAL (frame_off), 'K'))\n+\t    frame_off = force_const_mem (Pmode, frame_off);\n \n-      insn = emit_insn (gen_add2_insn (frame_pointer, frame_off));\n+\t  insn = emit_insn (gen_add2_insn (frame_pointer, frame_off));\n+\t}\n     }\n \n   /* Restore call saved fprs.  */\n@@ -6649,8 +6781,10 @@ s390_output_mi_thunk (file, thunk, delta, vcall_offset, function)\n   if (TARGET_64BIT)\n     {\n       /* Setup literal pool pointer if required.  */\n-      if (!CONST_OK_FOR_LETTER_P (delta, 'K')\n-\t  || !CONST_OK_FOR_LETTER_P (vcall_offset, 'K'))\n+      if ((!DISP_IN_RANGE (delta) \n+\t   && !CONST_OK_FOR_LETTER_P (delta, 'K'))\n+\t  || (!DISP_IN_RANGE (vcall_offset) \n+\t      && !CONST_OK_FOR_LETTER_P (vcall_offset, 'K')))\n \t{\n \t  op[5] = gen_label_rtx ();\n \t  output_asm_insn (\"larl\\t%4,%5\", op);\n@@ -6661,6 +6795,8 @@ s390_output_mi_thunk (file, thunk, delta, vcall_offset, function)\n \t{\n \t  if (CONST_OK_FOR_LETTER_P (delta, 'J'))\n \t    output_asm_insn (\"la\\t%1,%2(%1)\", op);\n+\t  else if (DISP_IN_RANGE (delta))\n+\t    output_asm_insn (\"lay\\t%1,%2(%1)\", op);\n \t  else if (CONST_OK_FOR_LETTER_P (delta, 'K'))\n \t    output_asm_insn (\"aghi\\t%1,%2\", op);\n \t  else\n@@ -6673,7 +6809,7 @@ s390_output_mi_thunk (file, thunk, delta, vcall_offset, function)\n       /* Perform vcall adjustment.  */\n       if (vcall_offset)\n \t{\n-\t  if (CONST_OK_FOR_LETTER_P (vcall_offset, 'J'))\n+\t  if (DISP_IN_RANGE (vcall_offset))\n \t    {\n \t      output_asm_insn (\"lg\\t%4,0(%1)\", op);\n \t      output_asm_insn (\"ag\\t%1,%3(%4)\", op);\n@@ -6720,8 +6856,10 @@ s390_output_mi_thunk (file, thunk, delta, vcall_offset, function)\n     {\n       /* Setup base pointer if required.  */\n       if (!vcall_offset\n-\t  || !CONST_OK_FOR_LETTER_P (delta, 'K')\n-\t  || !CONST_OK_FOR_LETTER_P (vcall_offset, 'K'))\n+\t  || (!DISP_IN_RANGE (delta)\n+              && !CONST_OK_FOR_LETTER_P (delta, 'K'))\n+\t  || (!DISP_IN_RANGE (delta)\n+              && !CONST_OK_FOR_LETTER_P (vcall_offset, 'K')))\n \t{\n \t  op[5] = gen_label_rtx ();\n \t  output_asm_insn (\"basr\\t%4,0\", op);\n@@ -6734,6 +6872,8 @@ s390_output_mi_thunk (file, thunk, delta, vcall_offset, function)\n \t{\n \t  if (CONST_OK_FOR_LETTER_P (delta, 'J'))\n \t    output_asm_insn (\"la\\t%1,%2(%1)\", op);\n+\t  else if (DISP_IN_RANGE (delta))\n+\t    output_asm_insn (\"lay\\t%1,%2(%1)\", op);\n \t  else if (CONST_OK_FOR_LETTER_P (delta, 'K'))\n \t    output_asm_insn (\"ahi\\t%1,%2\", op);\n \t  else\n@@ -6751,6 +6891,11 @@ s390_output_mi_thunk (file, thunk, delta, vcall_offset, function)\n \t      output_asm_insn (\"lg\\t%4,0(%1)\", op);\n \t      output_asm_insn (\"a\\t%1,%3(%4)\", op);\n \t    }\n+\t  else if (DISP_IN_RANGE (vcall_offset))\n+\t    {\n+\t      output_asm_insn (\"lg\\t%4,0(%1)\", op);\n+\t      output_asm_insn (\"ay\\t%1,%3(%4)\", op);\n+\t    }\n \t  else if (CONST_OK_FOR_LETTER_P (vcall_offset, 'K'))\n \t    {\n \t      output_asm_insn (\"lhi\\t%4,%3\", op);"}, {"sha": "75ebd441122d78288872e6533ea68cf71fa6a366", "filename": "gcc/config/s390/s390.h", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3632d41e2da6502060cfd4f20cf9004cb7d0302/gcc%2Fconfig%2Fs390%2Fs390.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3632d41e2da6502060cfd4f20cf9004cb7d0302/gcc%2Fconfig%2Fs390%2Fs390.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.h?ref=d3632d41e2da6502060cfd4f20cf9004cb7d0302", "patch": "@@ -530,10 +530,11 @@ extern const enum reg_class regclass_map[FIRST_PSEUDO_REGISTER];\n #define CONST_DOUBLE_OK_FOR_LETTER_P(VALUE, C)  1\n \n #define EXTRA_CONSTRAINT(OP, C)                               \t\\\n-     ((C) == 'Q' ?  q_constraint (OP) : \t\t\t\\\n-      (C) == 'S' ?  larl_operand (OP, GET_MODE (OP)) : 0)\n-\n-#define EXTRA_MEMORY_CONSTRAINT(C,STR) ((C) == 'Q')\n+  s390_extra_constraint ((OP), (C))\n+#define EXTRA_MEMORY_CONSTRAINT(C, STR)\t\t\t\t\\\n+  ((C) == 'Q' || (C) == 'R' || (C) == 'S' || (C) == 'T')\n+#define EXTRA_ADDRESS_CONSTRAINT(C, STR)\t\t\t\\\n+  ((C) == 'U' || (C) == 'W')\n \n \n /* Stack layout and calling conventions.  */"}, {"sha": "c24dab11c0a2912a3062dda057ca0e0f5f664792", "filename": "gcc/config/s390/s390.md", "status": "modified", "additions": 585, "deletions": 455, "changes": 1040, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3632d41e2da6502060cfd4f20cf9004cb7d0302/gcc%2Fconfig%2Fs390%2Fs390.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3632d41e2da6502060cfd4f20cf9004cb7d0302/gcc%2Fconfig%2Fs390%2Fs390.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.md?ref=d3632d41e2da6502060cfd4f20cf9004cb7d0302", "patch": "@@ -94,7 +94,7 @@\n ;; Operand type. Used to default length attribute values\n \n (define_attr \"op_type\"\n-  \"NN,E,RR,RRE,RX,RS,RSI,RI,SI,S,SS,SSE,RXE,RSE,RIL,RIE\"\n+  \"NN,E,RR,RRE,RX,RS,RSI,RI,SI,S,SS,SSE,RXE,RSE,RIL,RIE,RXY,RSY,SIY\"\n   (const_string \"RX\"))\n \n ;; Insn are devide in two classes:\n@@ -115,7 +115,10 @@\n          (eq_attr \"op_type\" \"SSE\") (const_string \"agen\")\n          (eq_attr \"op_type\" \"RXE\") (const_string \"agen\")\n          (eq_attr \"op_type\" \"RSE\") (const_string \"agen\")\n-         (eq_attr \"op_type\" \"RIL\") (const_string \"agen\")]\n+         (eq_attr \"op_type\" \"RIL\") (const_string \"agen\")\n+         (eq_attr \"op_type\" \"RXY\") (const_string \"agen\")\n+         (eq_attr \"op_type\" \"RSY\") (const_string \"agen\")\n+         (eq_attr \"op_type\" \"SIY\") (const_string \"agen\")]\n   (const_string \"reg\")))\n \n ;; Generic pipeline function unit.  \n@@ -237,7 +240,10 @@\n          (eq_attr \"op_type\" \"SSE\") (const_int 6)\n          (eq_attr \"op_type\" \"RXE\") (const_int 6)\n          (eq_attr \"op_type\" \"RSE\") (const_int 6)\n-         (eq_attr \"op_type\" \"RIL\") (const_int 6)]\n+         (eq_attr \"op_type\" \"RIL\") (const_int 6)\n+         (eq_attr \"op_type\" \"RXY\") (const_int 6)\n+         (eq_attr \"op_type\" \"RSY\") (const_int 6)\n+         (eq_attr \"op_type\" \"SIY\") (const_int 6)]\n          (const_int 4)))\n \n ;; Define attributes for `asm' insns.\n@@ -378,9 +384,9 @@\n \n (define_insn \"*tmqi_ext\"\n   [(set (reg 33)\n-        (compare (zero_extract:SI (match_operand:QI 0 \"memory_operand\" \"Q\")\n-\t                          (match_operand:SI 1 \"const_int_operand\" \"n\")\n-                                  (match_operand:SI 2 \"const_int_operand\" \"n\"))\n+        (compare (zero_extract:SI (match_operand:QI 0 \"memory_operand\" \"Q,S\")\n+\t                          (match_operand:SI 1 \"const_int_operand\" \"n,n\")\n+                                  (match_operand:SI 2 \"const_int_operand\" \"n,n\"))\n                  (const_int 0)))]\n   \"s390_match_ccmode(insn, CCTmode)\n    && INTVAL (operands[1]) >= 1 && INTVAL (operands[2]) >= 0 \n@@ -391,17 +397,17 @@\n   int shift = 8 - INTVAL (operands[1]) - INTVAL (operands[2]);\n \n   operands[2] = GEN_INT (block << shift);\n-  return \\\"tm\\\\t%0,%b2\\\";\n+  return which_alternative == 0 ? \\\"tm\\\\t%0,%b2\\\" : \\\"tmy\\\\t%0,%b2\\\";\n }\"\n-  [(set_attr \"op_type\" \"SI\")])\n+  [(set_attr \"op_type\" \"SI,SIY\")])\n \n ; Test-under-Mask instructions\n \n (define_insn \"*tmdi_mem\"\n   [(set (reg 33)\n-        (compare (and:DI (match_operand:DI 0 \"memory_operand\" \"Q\")\n-                         (match_operand:DI 1 \"immediate_operand\" \"n\"))\n-                 (match_operand:DI 2 \"immediate_operand\" \"n\")))]\n+        (compare (and:DI (match_operand:DI 0 \"memory_operand\" \"Q,S\")\n+                         (match_operand:DI 1 \"immediate_operand\" \"n,n\"))\n+                 (match_operand:DI 2 \"immediate_operand\" \"n,n\")))]\n   \"TARGET_64BIT\n    && s390_match_ccmode (insn, s390_tm_ccmode (operands[1], operands[2], 0))\n    && s390_single_qi (operands[1], DImode, 0) >= 0\"\n@@ -412,15 +418,15 @@\n \n   operands[0] = gen_rtx_MEM (QImode, \n \t\t\t     plus_constant (XEXP (operands[0], 0), part));\n-  return \\\"tm\\\\t%0,%b1\\\";\n+  return which_alternative == 0 ? \\\"tm\\\\t%0,%b1\\\" : \\\"tmy\\\\t%0,%b1\\\";\n }\"\n-  [(set_attr \"op_type\" \"SI\")])\n+  [(set_attr \"op_type\" \"SI,SIY\")])\n \n (define_insn \"*tmsi_mem\"\n   [(set (reg 33)\n-        (compare (and:SI (match_operand:SI 0 \"memory_operand\" \"Q\")\n-                         (match_operand:SI 1 \"immediate_operand\" \"n\"))\n-                 (match_operand:SI 2 \"immediate_operand\" \"n\")))]\n+        (compare (and:SI (match_operand:SI 0 \"memory_operand\" \"Q,S\")\n+                         (match_operand:SI 1 \"immediate_operand\" \"n,n\"))\n+                 (match_operand:SI 2 \"immediate_operand\" \"n,n\")))]\n   \"s390_match_ccmode (insn, s390_tm_ccmode (operands[1], operands[2], 0))\n    && s390_single_qi (operands[1], SImode, 0) >= 0\"\n   \"*\n@@ -430,15 +436,15 @@\n \n   operands[0] = gen_rtx_MEM (QImode, \n \t\t\t     plus_constant (XEXP (operands[0], 0), part));\n-  return \\\"tm\\\\t%0,%b1\\\";\n+  return which_alternative == 0 ? \\\"tm\\\\t%0,%b1\\\" : \\\"tmy\\\\t%0,%b1\\\";\n }\"\n   [(set_attr \"op_type\" \"SI\")])\n \n (define_insn \"*tmhi_mem\"\n   [(set (reg 33)\n-        (compare (and:SI (subreg:SI (match_operand:HI 0 \"memory_operand\" \"Q\") 0)\n-                         (match_operand:SI 1 \"immediate_operand\" \"n\"))\n-                 (match_operand:SI 2 \"immediate_operand\" \"n\")))]\n+        (compare (and:SI (subreg:SI (match_operand:HI 0 \"memory_operand\" \"Q,S\") 0)\n+                         (match_operand:SI 1 \"immediate_operand\" \"n,n\"))\n+                 (match_operand:SI 2 \"immediate_operand\" \"n,n\")))]\n   \"s390_match_ccmode (insn, s390_tm_ccmode (operands[1], operands[2], 0))\n    && s390_single_qi (operands[1], HImode, 0) >= 0\"\n   \"*\n@@ -448,18 +454,20 @@\n \n   operands[0] = gen_rtx_MEM (QImode, \n \t\t\t     plus_constant (XEXP (operands[0], 0), part));\n-  return \\\"tm\\\\t%0,%b1\\\";\n+  return which_alternative == 0 ? \\\"tm\\\\t%0,%b1\\\" : \\\"tmy\\\\t%0,%b1\\\";\n }\"\n   [(set_attr \"op_type\" \"SI\")])\n \n (define_insn \"*tmqi_mem\"\n   [(set (reg 33)\n-        (compare (and:SI (subreg:SI (match_operand:QI 0 \"memory_operand\" \"Q\") 0)\n-                         (match_operand:SI 1 \"immediate_operand\" \"n\"))\n-                 (match_operand:SI 2 \"immediate_operand\" \"n\")))]\n+        (compare (and:SI (subreg:SI (match_operand:QI 0 \"memory_operand\" \"Q,S\") 0)\n+                         (match_operand:SI 1 \"immediate_operand\" \"n,n\"))\n+                 (match_operand:SI 2 \"immediate_operand\" \"n,n\")))]\n   \"s390_match_ccmode (insn, s390_tm_ccmode (operands[1], operands[2], 0))\"\n-  \"tm\\\\t%0,%b1\"\n-  [(set_attr \"op_type\" \"SI\")])\n+  \"@\n+   tm\\\\t%0,%b1\n+   tmy\\\\t%0,%b1\"\n+  [(set_attr \"op_type\" \"SI,SIY\")])\n \n (define_insn \"*tmdi_reg\"\n   [(set (reg 33)\n@@ -566,26 +574,28 @@\n \n (define_insn \"*tstsi\"\n   [(set (reg 33)\n-        (compare (match_operand:SI 0 \"nonimmediate_operand\" \"d,Q\")\n+        (compare (match_operand:SI 0 \"nonimmediate_operand\" \"d,Q,S\")\n                  (match_operand:SI 1 \"const0_operand\" \"\")))\n-   (set (match_operand:SI 2 \"register_operand\" \"=d,d\")\n+   (set (match_operand:SI 2 \"register_operand\" \"=d,d,d\")\n         (match_dup 0))]\n   \"s390_match_ccmode(insn, CCSmode)\"\n   \"@\n    ltr\\\\t%2,%0\n-   icm\\\\t%2,15,%0\"\n-  [(set_attr \"op_type\" \"RR,RS\")])\n+   icm\\\\t%2,15,%0\n+   icmy\\\\t%2,15,%0\"\n+  [(set_attr \"op_type\" \"RR,RS,RSY\")])\n \n (define_insn \"*tstsi_cconly\"\n   [(set (reg 33)\n-        (compare (match_operand:SI 0 \"nonimmediate_operand\" \"d,Q\")\n+        (compare (match_operand:SI 0 \"nonimmediate_operand\" \"d,Q,S\")\n                  (match_operand:SI 1 \"const0_operand\" \"\")))\n-   (clobber (match_scratch:SI 2 \"=X,d\"))]\n+   (clobber (match_scratch:SI 2 \"=X,d,d\"))]\n   \"s390_match_ccmode(insn, CCSmode)\"\n   \"@\n    ltr\\\\t%0,%0\n-   icm\\\\t%2,15,%0\"\n-  [(set_attr \"op_type\" \"RR,RS\")])\n+   icm\\\\t%2,15,%0\n+   icmy\\\\t%2,15,%0\"\n+  [(set_attr \"op_type\" \"RR,RS,RSY\")])\n \n (define_insn \"*tstsi_cconly2\"\n   [(set (reg 33)\n@@ -597,86 +607,99 @@\n \n (define_insn \"*tsthiCCT\"\n   [(set (reg 33)\n-        (compare (match_operand:HI 0 \"nonimmediate_operand\" \"?Q,d\")\n+        (compare (match_operand:HI 0 \"nonimmediate_operand\" \"?Q,?S,d\")\n                  (match_operand:HI 1 \"const0_operand\" \"\")))\n-   (set (match_operand:HI 2 \"register_operand\" \"=d,0\")\n+   (set (match_operand:HI 2 \"register_operand\" \"=d,d,0\")\n         (match_dup 0))]\n   \"s390_match_ccmode(insn, CCTmode)\"\n   \"@\n    icm\\\\t%2,3,%0\n+   icmy\\\\t%2,3,%0\n    tml\\\\t%0,65535\"\n-  [(set_attr \"op_type\" \"RS,RI\")])\n+  [(set_attr \"op_type\" \"RS,RSY,RI\")])\n \n (define_insn \"*tsthiCCT_cconly\"\n   [(set (reg 33)\n-        (compare (match_operand:HI 0 \"nonimmediate_operand\" \"Q,d\")\n+        (compare (match_operand:HI 0 \"nonimmediate_operand\" \"Q,S,d\")\n                  (match_operand:HI 1 \"const0_operand\" \"\")))\n-   (clobber (match_scratch:HI 2 \"=d,X\"))]\n+   (clobber (match_scratch:HI 2 \"=d,d,X\"))]\n   \"s390_match_ccmode(insn, CCTmode)\"\n   \"@\n    icm\\\\t%2,3,%0\n+   icmy\\\\t%2,3,%0\n    tml\\\\t%0,65535\"\n-  [(set_attr \"op_type\" \"RS,RI\")])\n+  [(set_attr \"op_type\" \"RS,RSY,RI\")])\n \n (define_insn \"*tsthi\"\n   [(set (reg 33)\n-        (compare (match_operand:HI 0 \"s_operand\" \"Q\")\n+        (compare (match_operand:HI 0 \"s_operand\" \"Q,S\")\n                  (match_operand:HI 1 \"const0_operand\" \"\")))\n-   (set (match_operand:HI 2 \"register_operand\" \"=d\")\n+   (set (match_operand:HI 2 \"register_operand\" \"=d,d\")\n         (match_dup 0))]\n   \"s390_match_ccmode(insn, CCSmode)\"\n-  \"icm\\\\t%2,3,%0\"\n-  [(set_attr \"op_type\" \"RS\")])\n+  \"@\n+   icm\\\\t%2,3,%0\n+   icmy\\\\t%2,3,%0\"\n+  [(set_attr \"op_type\" \"RS,RSY\")])\n \n (define_insn \"*tsthi_cconly\"\n   [(set (reg 33)\n-        (compare (match_operand:HI 0 \"s_operand\" \"Q\")\n+        (compare (match_operand:HI 0 \"s_operand\" \"Q,S\")\n                  (match_operand:HI 1 \"const0_operand\" \"\")))\n-   (clobber (match_scratch:HI 2 \"=d\"))]\n+   (clobber (match_scratch:HI 2 \"=d,d\"))]\n   \"s390_match_ccmode(insn, CCSmode)\"\n-  \"icm\\\\t%2,3,%0\"\n-  [(set_attr \"op_type\" \"RS\")])\n+  \"@\n+   icm\\\\t%2,3,%0\n+   icmy\\\\t%2,3,%0\"\n+  [(set_attr \"op_type\" \"RS,RSY\")])\n \n (define_insn \"*tstqiCCT\"\n   [(set (reg 33)\n-        (compare (match_operand:QI 0 \"nonimmediate_operand\" \"?Q,d\")\n+        (compare (match_operand:QI 0 \"nonimmediate_operand\" \"?Q,?S,d\")\n                  (match_operand:QI 1 \"const0_operand\" \"\")))\n-   (set (match_operand:QI 2 \"register_operand\" \"=d,0\")\n+   (set (match_operand:QI 2 \"register_operand\" \"=d,d,0\")\n         (match_dup 0))]\n   \"s390_match_ccmode(insn, CCTmode)\"\n   \"@\n    icm\\\\t%2,1,%0\n+   icmy\\\\t%2,1,%0\n    tml\\\\t%0,255\"\n-  [(set_attr \"op_type\" \"RS,RI\")])\n+  [(set_attr \"op_type\" \"RS,RSY,RI\")])\n \n (define_insn \"*tstqiCCT_cconly\"\n   [(set (reg 33)\n-        (compare (match_operand:QI 0 \"nonimmediate_operand\" \"?Q,d\")\n+        (compare (match_operand:QI 0 \"nonimmediate_operand\" \"?Q,?S,d\")\n                  (match_operand:QI 1 \"const0_operand\" \"\")))]\n   \"s390_match_ccmode(insn, CCTmode)\"\n   \"@\n    cli\\\\t%0,0\n+   cliy\\\\t%0,0\n    tml\\\\t%0,255\"\n-  [(set_attr \"op_type\" \"SI,RI\")])\n+  [(set_attr \"op_type\" \"SI,SIY,RI\")])\n \n (define_insn \"*tstqi\"\n   [(set (reg 33)\n-        (compare (match_operand:QI 0 \"s_operand\" \"Q\")\n+        (compare (match_operand:QI 0 \"s_operand\" \"Q,S\")\n                  (match_operand:QI 1 \"const0_operand\" \"\")))\n-   (set (match_operand:QI 2 \"register_operand\" \"=d\")\n+   (set (match_operand:QI 2 \"register_operand\" \"=d,d\")\n         (match_dup 0))]\n   \"s390_match_ccmode(insn, CCSmode)\"\n-  \"icm\\\\t%2,1,%0\"\n-  [(set_attr \"op_type\" \"RS\")])\n+  \"@\n+   icm\\\\t%2,1,%0\n+   icmy\\\\t%2,1,%0\"\n+  [(set_attr \"op_type\" \"RS,RSY\")])\n \n (define_insn \"*tstqi_cconly\"\n   [(set (reg 33)\n-        (compare (match_operand:QI 0 \"s_operand\" \"Q\")\n+        (compare (match_operand:QI 0 \"s_operand\" \"Q,S\")\n                  (match_operand:QI 1 \"const0_operand\" \"\")))\n-   (clobber (match_scratch:QI 2 \"=d\"))]\n+   (clobber (match_scratch:QI 2 \"=d,d\"))]\n   \"s390_match_ccmode(insn, CCSmode)\"\n-  \"icm\\\\t%2,1,%0\"\n-  [(set_attr \"op_type\" \"RS\")])\n+  \"@\n+   icm\\\\t%2,1,%0\n+   icmy\\\\t%2,1,%0\"\n+  [(set_attr \"op_type\" \"RS,RSY\")])\n+\n \n ; Compare (signed) instructions\n \n@@ -688,7 +711,7 @@\n   \"@\n    cgfr\\\\t%0,%1\n    cgf\\\\t%0,%1\"\n-  [(set_attr \"op_type\" \"RRE,RXE\")])\n+  [(set_attr \"op_type\" \"RRE,RXY\")])\n \n (define_insn \"*cmpdi_ccs\"\n   [(set (reg 33)\n@@ -699,26 +722,29 @@\n    cgr\\\\t%0,%1\n    cghi\\\\t%0,%c1\n    cg\\\\t%0,%1\"\n-  [(set_attr \"op_type\" \"RRE,RI,RXE\")])\n+  [(set_attr \"op_type\" \"RRE,RI,RXY\")])\n    \n (define_insn \"*cmpsi_ccs_sign\"\n   [(set (reg 33)\n-        (compare (sign_extend:SI (match_operand:HI 1 \"memory_operand\" \"m\"))\n-                 (match_operand:SI 0 \"register_operand\" \"d\")))]\n+        (compare (sign_extend:SI (match_operand:HI 1 \"memory_operand\" \"R,T\"))\n+                 (match_operand:SI 0 \"register_operand\" \"d,d\")))]\n   \"s390_match_ccmode(insn, CCSRmode)\"\n-  \"ch\\\\t%0,%1\"\n-  [(set_attr \"op_type\" \"RX\")])\n+  \"@\n+   ch\\\\t%0,%1\n+   chy\\\\t%0,%1\"\n+  [(set_attr \"op_type\" \"RX,RXY\")])\n \n (define_insn \"*cmpsi_ccs\"\n   [(set (reg 33)\n-        (compare (match_operand:SI 0 \"register_operand\" \"d,d,d\")\n-                 (match_operand:SI 1 \"general_operand\" \"d,K,m\")))]\n+        (compare (match_operand:SI 0 \"register_operand\" \"d,d,d,d\")\n+                 (match_operand:SI 1 \"general_operand\" \"d,K,R,T\")))]\n   \"s390_match_ccmode(insn, CCSmode)\"\n   \"@\n    cr\\\\t%0,%1\n    chi\\\\t%0,%c1\n-   c\\\\t%0,%1\"\n-  [(set_attr \"op_type\" \"RR,RI,RX\")])\n+   c\\\\t%0,%1\n+   cy\\\\t%0,%1\"\n+  [(set_attr \"op_type\" \"RR,RI,RX,RXY\")])\n    \n \n ; Compare (unsigned) instructions\n@@ -731,7 +757,7 @@\n   \"@\n    clgfr\\\\t%0,%1\n    clgf\\\\t%0,%1\"\n-  [(set_attr \"op_type\" \"RRE,RXE\")])\n+  [(set_attr \"op_type\" \"RRE,RXY\")])\n \n (define_insn \"*cmpdi_ccu\"\n   [(set (reg 33)\n@@ -741,41 +767,48 @@\n   \"@\n    clgr\\\\t%0,%1\n    clg\\\\t%0,%1\"\n-  [(set_attr \"op_type\" \"RRE,RXE\")])\n+  [(set_attr \"op_type\" \"RRE,RXY\")])\n \n (define_insn \"*cmpsi_ccu\"\n   [(set (reg 33)\n-        (compare (match_operand:SI 0 \"register_operand\" \"d,d\")\n-                 (match_operand:SI 1 \"general_operand\" \"d,m\")))]\n+        (compare (match_operand:SI 0 \"register_operand\" \"d,d,d\")\n+                 (match_operand:SI 1 \"general_operand\" \"d,R,T\")))]\n   \"s390_match_ccmode(insn, CCUmode)\"\n   \"@\n    clr\\\\t%0,%1\n-   cl\\\\t%0,%1\"\n-  [(set_attr \"op_type\" \"RR,RX\")])\n+   cl\\\\t%0,%1\n+   cly\\\\t%0,%1\"\n+  [(set_attr \"op_type\" \"RR,RX,RXY\")])\n \n (define_insn \"*cmphi_ccu\"\n   [(set (reg 33)\n-        (compare (match_operand:HI 0 \"register_operand\" \"d\")\n-                 (match_operand:HI 1 \"s_imm_operand\" \"Q\")))]\n+        (compare (match_operand:HI 0 \"register_operand\" \"d,d\")\n+                 (match_operand:HI 1 \"s_imm_operand\" \"Q,S\")))]\n   \"s390_match_ccmode(insn, CCUmode)\"\n-  \"clm\\\\t%0,3,%1\"\n-  [(set_attr \"op_type\" \"RS\")])\n+  \"@\n+   clm\\\\t%0,3,%1\n+   clmy\\\\t%0,3,%1\"\n+  [(set_attr \"op_type\" \"RS,RSY\")])\n \n (define_insn \"*cmpqi_ccu\"\n   [(set (reg 33)\n-        (compare (match_operand:QI 0 \"register_operand\" \"d\")\n-                 (match_operand:QI 1 \"s_imm_operand\" \"Q\")))]\n+        (compare (match_operand:QI 0 \"register_operand\" \"d,d\")\n+                 (match_operand:QI 1 \"s_imm_operand\" \"Q,S\")))]\n   \"s390_match_ccmode(insn, CCUmode)\"\n-  \"clm\\\\t%0,1,%1\"\n-  [(set_attr \"op_type\" \"RS\")])\n+  \"@\n+   clm\\\\t%0,1,%1\n+   clmy\\\\t%0,1,%1\"\n+  [(set_attr \"op_type\" \"RS,RSY\")])\n \n (define_insn \"*cli\"\n   [(set (reg 33)\n-        (compare (match_operand:QI 0 \"memory_operand\" \"Q\")\n-                 (match_operand:QI 1 \"immediate_operand\" \"n\")))]\n+        (compare (match_operand:QI 0 \"memory_operand\" \"Q,S\")\n+                 (match_operand:QI 1 \"immediate_operand\" \"n,n\")))]\n   \"s390_match_ccmode (insn, CCUmode)\"\n-  \"cli\\\\t%0,%b1\"\n-  [(set_attr \"op_type\" \"SI\")])\n+  \"@\n+   cli\\\\t%0,%b1\n+   cliy\\\\t%0,%b1\"\n+  [(set_attr \"op_type\" \"SI,SIY\")])\n \n (define_insn \"*cmpdi_ccu_mem\"\n   [(set (reg 33)\n@@ -833,7 +866,7 @@\n (define_insn \"*cmpdf_ccs\"\n   [(set (reg 33)\n         (compare (match_operand:DF 0 \"register_operand\" \"f,f\")\n-                 (match_operand:DF 1 \"general_operand\" \"f,m\")))]\n+                 (match_operand:DF 1 \"general_operand\" \"f,R\")))]\n   \"s390_match_ccmode(insn, CCSmode) && TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"@\n    cdbr\\\\t%0,%1\n@@ -844,7 +877,7 @@\n (define_insn \"*cmpdf_ccs_ibm\"\n   [(set (reg 33)\n         (compare (match_operand:DF 0 \"register_operand\" \"f,f\")\n-                 (match_operand:DF 1 \"general_operand\" \"f,m\")))]\n+                 (match_operand:DF 1 \"general_operand\" \"f,R\")))]\n   \"s390_match_ccmode(insn, CCSmode) && TARGET_HARD_FLOAT && TARGET_IBM_FLOAT\"\n   \"@\n    cdr\\\\t%0,%1\n@@ -876,7 +909,7 @@\n (define_insn \"*cmpsf_ccs\"\n   [(set (reg 33)\n         (compare (match_operand:SF 0 \"register_operand\" \"f,f\")\n-                 (match_operand:SF 1 \"general_operand\" \"f,m\")))]\n+                 (match_operand:SF 1 \"general_operand\" \"f,R\")))]\n   \"s390_match_ccmode(insn, CCSmode) && TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"@\n    cebr\\\\t%0,%1\n@@ -887,7 +920,7 @@\n (define_insn \"*cmpsf_ccs\"\n   [(set (reg 33)\n         (compare (match_operand:SF 0 \"register_operand\" \"f,f\")\n-                 (match_operand:SF 1 \"general_operand\" \"f,m\")))]\n+                 (match_operand:SF 1 \"general_operand\" \"f,R\")))]\n   \"s390_match_ccmode(insn, CCSmode) && TARGET_HARD_FLOAT && TARGET_IBM_FLOAT\"\n   \"@\n    cer\\\\t%0,%1\n@@ -905,16 +938,16 @@\n ;\n \n (define_insn \"movti\"\n-  [(set (match_operand:TI 0 \"nonimmediate_operand\" \"=d,Q,d,o,Q\")\n-        (match_operand:TI 1 \"general_operand\" \"Q,d,dKm,d,Q\"))]\n+  [(set (match_operand:TI 0 \"nonimmediate_operand\" \"=d,QS,d,o,Q\")\n+        (match_operand:TI 1 \"general_operand\" \"QS,d,dKm,d,Q\"))]\n   \"TARGET_64BIT\"\n   \"@\n    lmg\\\\t%0,%N0,%1\n    stmg\\\\t%1,%N1,%0\n    #\n    #\n    mvc\\\\t%O0(16,%R0),%1\"\n-  [(set_attr \"op_type\" \"RSE,RSE,NN,NN,SS\")\n+  [(set_attr \"op_type\" \"RSY,RSY,NN,NN,SS\")\n    (set_attr \"type\" \"lm,stm,*,*,cs\")])\n \n (define_split\n@@ -1023,6 +1056,17 @@\n }\"\n   [(set_attr \"op_type\" \"RI\")])\n \n+(define_insn \"*movdi_lay\"\n+  [(set (match_operand:DI 0 \"register_operand\" \"=d\")\n+        (match_operand:DI 1 \"address_operand\" \"p\"))]\n+  \"TARGET_64BIT \n+   && TARGET_LONG_DISPLACEMENT\n+   && GET_CODE (operands[1]) == CONST_INT\n+   && !FP_REG_P (operands[0])\"\n+  \"lay\\\\t%0,%a1\"\n+  [(set_attr \"op_type\" \"RXY\")\n+   (set_attr \"type\" \"la\")])\n+\n (define_insn \"*movdi_larl\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=d\")\n         (match_operand:DI 1 \"larl_operand\" \"X\"))]\n@@ -1033,23 +1077,25 @@\n     (set_attr \"type\"    \"larl\")])\n \n (define_insn \"*movdi_64\"\n-  [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=d,d,m,!*f,!*f,!m,?Q\")\n-        (match_operand:DI 1 \"general_operand\" \"d,m,d,*f,m,*f,?Q\"))]\n+  [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=d,d,m,!*f,!*f,!*f,!R,!T,?Q\")\n+        (match_operand:DI 1 \"general_operand\" \"d,m,d,*f,R,T,*f,*f,?Q\"))]\n   \"TARGET_64BIT\"\n   \"@\n    lgr\\\\t%0,%1\n    lg\\\\t%0,%1\n    stg\\\\t%1,%0\n    ldr\\\\t%0,%1\n    ld\\\\t%0,%1\n+   ldy\\\\t%0,%1\n    std\\\\t%1,%0\n+   stdy\\\\t%1,%0\n    mvc\\\\t%O0(8,%R0),%1\"\n-  [(set_attr \"op_type\" \"RRE,RXE,RXE,RR,RX,RX,SS\")\n-   (set_attr \"type\" \"lr,load,store,floadd,floadd,fstored,cs\")])\n+  [(set_attr \"op_type\" \"RRE,RXY,RXY,RR,RX,RXY,RX,RXY,SS\")\n+   (set_attr \"type\" \"lr,load,store,floadd,floadd,floadd,fstored,fstored,cs\")])\n \n (define_insn \"*movdi_31\"\n-  [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=d,Q,d,o,!*f,!*f,!m,Q\")\n-        (match_operand:DI 1 \"general_operand\" \"Q,d,dKm,d,*f,m,*f,Q\"))]\n+  [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=d,Q,d,o,!*f,!*f,!*f,!R,!T,Q\")\n+        (match_operand:DI 1 \"general_operand\" \"Q,d,dKm,d,*f,R,T,*f,*f,Q\"))]\n   \"!TARGET_64BIT\"\n   \"@\n    lm\\\\t%0,%N0,%1\n@@ -1058,10 +1104,12 @@\n    #\n    ldr\\\\t%0,%1\n    ld\\\\t%0,%1\n+   ldy\\\\t%0,%1\n    std\\\\t%1,%0\n+   stdy\\\\t%1,%0\n    mvc\\\\t%O0(8,%R0),%1\"\n-  [(set_attr \"op_type\" \"RS,RS,NN,NN,RR,RX,RX,SS\")\n-   (set_attr \"type\" \"lm,stm,*,*,floadd,floadd,fstored,cs\")])\n+  [(set_attr \"op_type\" \"RS,RS,NN,NN,RR,RX,RXY,RX,RXY,SS\")\n+   (set_attr \"type\" \"lm,stm,*,*,floadd,floadd,floadd,fstored,fstored,cs\")])\n \n (define_split\n   [(set (match_operand:DI 0 \"nonimmediate_operand\" \"\")\n@@ -1192,20 +1240,34 @@\n }\"\n   [(set_attr \"op_type\" \"RI\")])\n \n+(define_insn \"*movsi_lay\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=d\")\n+        (match_operand:SI 1 \"address_operand\" \"p\"))]\n+  \"TARGET_LONG_DISPLACEMENT\n+   && GET_CODE (operands[1]) == CONST_INT\n+   && !FP_REG_P (operands[0])\"\n+  \"lay\\\\t%0,%a1\"\n+  [(set_attr \"op_type\" \"RXY\")\n+   (set_attr \"type\" \"la\")])\n+\n (define_insn \"*movsi\"\n-  [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=d,d,m,!*f,!*f,!m,?Q\")\n-        (match_operand:SI 1 \"general_operand\" \"d,m,d,*f,m,*f,?Q\"))]\n+  [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=d,d,d,R,T,!*f,!*f,!*f,!R,!T,?Q\")\n+        (match_operand:SI 1 \"general_operand\" \"d,R,T,d,d,*f,R,T,*f,*f,?Q\"))]\n   \"\"\n   \"@\n    lr\\\\t%0,%1\n    l\\\\t%0,%1\n+   ly\\\\t%0,%1\n    st\\\\t%1,%0\n+   sty\\\\t%1,%0\n    ler\\\\t%0,%1\n    le\\\\t%0,%1\n+   ley\\\\t%0,%1\n    ste\\\\t%1,%0\n+   stey\\\\t%1,%0\n    mvc\\\\t%O0(4,%R0),%1\"\n-  [(set_attr \"op_type\" \"RR,RX,RX,RR,RX,RX,SS\")\n-   (set_attr \"type\" \"lr,load,store,floads,floads,fstores,cs\")])\n+  [(set_attr \"op_type\" \"RR,RX,RXY,RX,RXY,RR,RX,RXY,RX,RXY,SS\")\n+   (set_attr \"type\" \"lr,load,load,store,store,floads,floads,floads,fstores,fstores,cs\")])\n \n (define_peephole2\n   [(set (match_operand:SI 0 \"register_operand\" \"\")\n@@ -1223,17 +1285,19 @@\n ;\n \n (define_insn \"movhi\"\n-  [(set (match_operand:HI 0 \"nonimmediate_operand\" \"=d,d,d,m,?Q\")\n-        (match_operand:HI 1 \"general_operand\" \"d,n,m,d,?Q\"))]\n+  [(set (match_operand:HI 0 \"nonimmediate_operand\" \"=d,d,d,d,R,T,?Q\")\n+        (match_operand:HI 1 \"general_operand\" \"d,n,R,T,d,d,?Q\"))]\n   \"\"\n   \"@\n    lr\\\\t%0,%1\n    lhi\\\\t%0,%h1\n    lh\\\\t%0,%1\n+   lhy\\\\t%0,%1\n    sth\\\\t%1,%0\n+   sthy\\\\t%1,%0\n    mvc\\\\t%O0(2,%R0),%1\"\n-  [(set_attr \"op_type\" \"RR,RI,RX,RX,SS\")\n-   (set_attr \"type\" \"lr,*,*,store,cs\")])\n+  [(set_attr \"op_type\" \"RR,RI,RX,RXY,RX,RXY,SS\")\n+   (set_attr \"type\" \"lr,*,*,*,store,store,cs\")])\n \n (define_peephole2\n   [(set (match_operand:HI 0 \"register_operand\" \"\")\n@@ -1250,32 +1314,37 @@\n ;\n \n (define_insn \"movqi_64\"\n-  [(set (match_operand:QI 0 \"nonimmediate_operand\" \"=d,d,d,m,Q,?Q\")\n-        (match_operand:QI 1 \"general_operand\" \"d,n,m,d,n,?Q\"))]\n+  [(set (match_operand:QI 0 \"nonimmediate_operand\" \"=d,d,d,R,T,Q,S,?Q\")\n+        (match_operand:QI 1 \"general_operand\" \"d,n,m,d,d,n,n,?Q\"))]\n   \"TARGET_64BIT\"\n   \"@\n    lr\\\\t%0,%1\n    lhi\\\\t%0,%b1\n    llgc\\\\t%0,%1\n    stc\\\\t%1,%0\n+   stcy\\\\t%1,%0\n    mvi\\\\t%0,%b1\n+   mviy\\\\t%0,%b1\n    mvc\\\\t%O0(1,%R0),%1\"\n-  [(set_attr \"op_type\" \"RR,RI,RXE,RX,SI,SS\")\n-   (set_attr \"type\" \"lr,*,*,store,store,cs\")])\n+  [(set_attr \"op_type\" \"RR,RI,RXY,RX,RXY,SI,SIY,SS\")\n+   (set_attr \"type\" \"lr,*,*,store,store,store,store,cs\")])\n \n (define_insn \"movqi\"\n-  [(set (match_operand:QI 0 \"nonimmediate_operand\" \"=d,d,d,m,Q,?Q\")\n-        (match_operand:QI 1 \"general_operand\" \"d,n,m,d,n,?Q\"))]\n+  [(set (match_operand:QI 0 \"nonimmediate_operand\" \"=d,d,d,d,R,T,Q,S,?Q\")\n+        (match_operand:QI 1 \"general_operand\" \"d,n,R,T,d,d,n,n,?Q\"))]\n   \"\"\n   \"@\n    lr\\\\t%0,%1\n    lhi\\\\t%0,%b1\n    ic\\\\t%0,%1\n+   icy\\\\t%0,%1\n    stc\\\\t%1,%0\n+   stcy\\\\t%1,%0\n    mvi\\\\t%0,%b1\n+   mviy\\\\t%0,%b1\n    mvc\\\\t%O0(1,%R0),%1\"\n-  [(set_attr \"op_type\" \"RR,RI,RX,RX,SI,SS\")\n-   (set_attr \"type\" \"lr,*,*,store,store,cs\")])\n+  [(set_attr \"op_type\" \"RR,RI,RX,RXY,RX,RXY,SI,SIY,SS\")\n+   (set_attr \"type\" \"lr,*,*,*,store,store,store,store,cs\")])\n \n (define_peephole2\n   [(set (match_operand:QI 0 \"nonimmediate_operand\" \"\")\n@@ -1292,39 +1361,42 @@\n ;\n \n (define_insn \"*movstrictqi\"\n-  [(set (strict_low_part (match_operand:QI 0 \"register_operand\" \"+d\"))\n-                         (match_operand:QI 1 \"memory_operand\" \"m\"))]\n+  [(set (strict_low_part (match_operand:QI 0 \"register_operand\" \"+d,d\"))\n+                         (match_operand:QI 1 \"memory_operand\" \"R,T\"))]\n   \"\"\n-  \"ic\\\\t%0,%1\"\n-  [(set_attr \"op_type\"  \"RX\")])\n+  \"@\n+   ic\\\\t%0,%1\n+   icy\\\\t%0,%1\"\n+  [(set_attr \"op_type\"  \"RX,RXY\")])\n \n ;\n ; movstricthi instruction pattern(s).\n ;\n \n (define_insn \"*movstricthi\"\n-  [(set (strict_low_part (match_operand:HI 0 \"register_operand\" \"+d\"))\n-                         (match_operand:HI 1 \"s_imm_operand\" \"Q\"))\n+  [(set (strict_low_part (match_operand:HI 0 \"register_operand\" \"+d,d\"))\n+                         (match_operand:HI 1 \"s_imm_operand\" \"Q,S\"))\n    (clobber (reg:CC 33))]\n   \"\"\n-  \"icm\\\\t%0,3,%1\"\n-  [(set_attr \"op_type\" \"RS\")])\n-\n+  \"@\n+   icm\\\\t%0,3,%1\n+   icmy\\\\t%0,3,%1\"\n+  [(set_attr \"op_type\" \"RS,RSY\")])\n \n ;\n ; movstrictsi instruction pattern(s).\n ;\n \n (define_insn \"movstrictsi\"\n-  [(set (strict_low_part (match_operand:SI 0 \"register_operand\" \"+d,d\"))\n-                         (match_operand:SI 1 \"general_operand\" \"d,m\"))]\n+  [(set (strict_low_part (match_operand:SI 0 \"register_operand\" \"+d,d,d\"))\n+                         (match_operand:SI 1 \"general_operand\" \"d,R,T\"))]\n   \"TARGET_64BIT\"\n   \"@\n    lr\\\\t%0,%1\n-   l\\\\t%0,%1\"\n-  [(set_attr \"op_type\" \"RR,RS\")\n-   (set_attr \"type\" \"lr,load\")])\n-\n+   l\\\\t%0,%1\n+   ly\\\\t%0,%1\"\n+  [(set_attr \"op_type\" \"RR,RX,RXY\")\n+   (set_attr \"type\" \"lr,load,load\")])\n \n ;\n ; movdf instruction pattern(s).\n@@ -1344,35 +1416,39 @@\n }\")\n \n (define_insn \"*movdf_64\"\n-  [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=f,f,m,d,d,m,?Q\")\n-        (match_operand:DF 1 \"general_operand\" \"f,m,f,d,m,d,?Q\"))]\n+  [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=f,f,f,R,T,d,d,m,?Q\")\n+        (match_operand:DF 1 \"general_operand\" \"f,R,T,f,f,d,m,d,?Q\"))]\n   \"TARGET_64BIT\"\n   \"@\n    ldr\\\\t%0,%1\n    ld\\\\t%0,%1\n+   ldy\\\\t%0,%1\n    std\\\\t%1,%0\n+   stdy\\\\t%1,%0\n    lgr\\\\t%0,%1\n    lg\\\\t%0,%1\n    stg\\\\t%1,%0\n    mvc\\\\t%O0(8,%R0),%1\"\n-  [(set_attr \"op_type\" \"RR,RX,RX,RRE,RXE,RXE,SS\")\n-   (set_attr \"type\" \"floadd,floadd,fstored,lr,load,store,cs\")])\n+  [(set_attr \"op_type\" \"RR,RX,RXY,RX,RXY,RRE,RXY,RXY,SS\")\n+   (set_attr \"type\" \"floadd,floadd,floadd,fstored,fstored,lr,load,store,cs\")])\n \n (define_insn \"*movdf_31\"\n-  [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=f,f,m,d,Q,d,o,Q\")\n-        (match_operand:DF 1 \"general_operand\" \"f,m,f,Q,d,dKm,d,Q\"))]\n+  [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=f,f,f,R,T,d,Q,d,o,Q\")\n+        (match_operand:DF 1 \"general_operand\" \"f,R,T,f,f,Q,d,dKm,d,Q\"))]\n   \"!TARGET_64BIT\"\n   \"@\n    ldr\\\\t%0,%1\n    ld\\\\t%0,%1\n+   ldy\\\\t%0,%1\n    std\\\\t%1,%0\n+   stdy\\\\t%1,%0\n    lm\\\\t%0,%N0,%1\n    stm\\\\t%1,%N1,%0\n    #\n    #\n    mvc\\\\t%O0(8,%R0),%1\"\n-  [(set_attr \"op_type\" \"RR,RX,RX,RS,RS,NN,NN,SS\")\n-   (set_attr \"type\" \"floadd,floadd,fstored,lm,stm,*,*,cs\")])\n+  [(set_attr \"op_type\" \"RR,RX,RXY,RX,RXY,RS,RS,NN,NN,SS\")\n+   (set_attr \"type\" \"floadd,floadd,floadd,fstored,fstored,lm,stm,*,*,cs\")])\n \n (define_split\n   [(set (match_operand:DF 0 \"nonimmediate_operand\" \"\")\n@@ -1445,19 +1521,23 @@\n }\")\n \n (define_insn \"*movsf\"\n-  [(set (match_operand:SF 0 \"nonimmediate_operand\" \"=f,f,m,d,d,m,?Q\")\n-        (match_operand:SF 1 \"general_operand\" \"f,m,f,d,m,d,?Q\"))]\n+  [(set (match_operand:SF 0 \"nonimmediate_operand\" \"=f,f,f,R,T,d,d,d,R,T,?Q\")\n+        (match_operand:SF 1 \"general_operand\" \"f,R,T,f,f,d,R,T,d,d,?Q\"))]\n   \"\"\n   \"@\n    ler\\\\t%0,%1\n    le\\\\t%0,%1\n+   ley\\\\t%0,%1\n    ste\\\\t%1,%0\n+   stey\\\\t%1,%0\n    lr\\\\t%0,%1\n    l\\\\t%0,%1\n+   ly\\\\t%0,%1\n    st\\\\t%1,%0\n+   sty\\\\t%1,%0\n    mvc\\\\t%O0(4,%R0),%1\"\n-  [(set_attr \"op_type\" \"RR,RX,RX,RR,RX,RX,SS\")\n-   (set_attr \"type\" \"floads,floads,fstores,lr,load,store,cs\")])\n+  [(set_attr \"op_type\" \"RR,RX,RXY,RX,RXY,RR,RX,RXY,RX,RXY,SS\")\n+   (set_attr \"type\" \"floads,floads,floads,fstores,fstores,lr,load,load,store,store,cs\")])\n \n ;\n ; load_multiple pattern(s).\n@@ -1526,37 +1606,29 @@\n (define_insn \"*load_multiple_di\"\n   [(match_parallel 0 \"load_multiple_operation\"\n \t\t   [(set (match_operand:DI 1 \"register_operand\" \"=r\")\n-\t\t\t (match_operand:DI 2 \"s_operand\" \"Q\"))])]\n+\t\t\t (match_operand:DI 2 \"s_operand\" \"QS\"))])]\n   \"\"\n   \"*\n {\n   int words = XVECLEN (operands[0], 0);\n-\n-  if (XVECLEN (operands[0], 0) == 1)\n-    return \\\"lg\\\\t%1,0(%2)\\\";\n-\n   operands[0] = gen_rtx_REG (DImode, REGNO (operands[1]) + words - 1);\n-    return \\\"lmg\\\\t%1,%0,%2\\\";\n+  return \\\"lmg\\\\t%1,%0,%2\\\";\n }\"\n-   [(set_attr \"op_type\" \"RXE\")\n+   [(set_attr \"op_type\" \"RSY\")\n     (set_attr \"type\"    \"lm\")])\n \n (define_insn \"*load_multiple_si\"\n   [(match_parallel 0 \"load_multiple_operation\"\n-\t\t   [(set (match_operand:SI 1 \"register_operand\" \"=r\")\n-\t\t\t (match_operand:SI 2 \"s_operand\" \"Q\"))])]\n+\t\t   [(set (match_operand:SI 1 \"register_operand\" \"=r,r\")\n+\t\t\t (match_operand:SI 2 \"s_operand\" \"Q,S\"))])]\n   \"\"\n   \"*\n {\n   int words = XVECLEN (operands[0], 0);\n-\n-  if (XVECLEN (operands[0], 0) == 1)\n-    return \\\"l\\\\t%1,0(%2)\\\";\n-\n   operands[0] = gen_rtx_REG (SImode, REGNO (operands[1]) + words - 1);\n-    return \\\"lm\\\\t%1,%0,%2\\\";\n+  return which_alternative == 0 ? \\\"lm\\\\t%1,%0,%2\\\" : \\\"lmy\\\\t%1,%0,%2\\\";\n }\"\n-   [(set_attr \"op_type\" \"RXE\")\n+   [(set_attr \"op_type\" \"RS,RSY\")\n     (set_attr \"type\"    \"lm\")])\n \n ;\n@@ -1627,39 +1699,31 @@\n \n (define_insn \"*store_multiple_di\"\n   [(match_parallel 0 \"store_multiple_operation\"\n-\t\t   [(set (match_operand:DI 1 \"s_operand\" \"=Q\")\n+\t\t   [(set (match_operand:DI 1 \"s_operand\" \"=QS\")\n \t\t\t (match_operand:DI 2 \"register_operand\" \"r\"))])]\n   \"\"\n   \"*\n {\n   int words = XVECLEN (operands[0], 0);\n-\n-  if (XVECLEN (operands[0], 0) == 1)\n-    return \\\"stg\\\\t%1,0(%2)\\\";\n-\n   operands[0] = gen_rtx_REG (DImode, REGNO (operands[2]) + words - 1);\n-    return \\\"stmg\\\\t%2,%0,%1\\\";\n+  return \\\"stmg\\\\t%2,%0,%1\\\";\n }\"\n-   [(set_attr \"op_type\" \"RXE\")\n+   [(set_attr \"op_type\" \"RSY\")\n     (set_attr \"type\"    \"stm\")])\n \n \n (define_insn \"*store_multiple_si\"\n   [(match_parallel 0 \"store_multiple_operation\"\n-\t\t   [(set (match_operand:SI 1 \"s_operand\" \"=Q\")\n-\t\t\t (match_operand:SI 2 \"register_operand\" \"r\"))])]\n+\t\t   [(set (match_operand:SI 1 \"s_operand\" \"=Q,S\")\n+\t\t\t (match_operand:SI 2 \"register_operand\" \"r,r\"))])]\n   \"\"\n   \"*\n {\n   int words = XVECLEN (operands[0], 0);\n-\n-  if (XVECLEN (operands[0], 0) == 1)\n-    return \\\"st\\\\t%1,0(%2)\\\";\n-\n   operands[0] = gen_rtx_REG (SImode, REGNO (operands[2]) + words - 1);\n-    return \\\"stm\\\\t%2,%0,%1\\\";\n+  return which_alternative == 0 ? \\\"stm\\\\t%2,%0,%1\\\" : \\\"stmy\\\\t%2,%0,%1\\\";\n }\"\n-   [(set_attr \"op_type\" \"RXE\")\n+   [(set_attr \"op_type\" \"RS,RSY\")\n     (set_attr \"type\"    \"stm\")])\n \n ;;\n@@ -2043,36 +2107,42 @@\n ;;\n \n (define_insn \"*sethighqisi\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=d\")\n-        (unspec:SI [(match_operand:QI 1 \"s_operand\" \"Q\")] 10))\n+  [(set (match_operand:SI 0 \"register_operand\" \"=d,d\")\n+        (unspec:SI [(match_operand:QI 1 \"s_operand\" \"Q,S\")] 10))\n    (clobber (reg:CC 33))]\n   \"\"\n-  \"icm\\\\t%0,8,%1\"\n-  [(set_attr \"op_type\" \"RS\")])\n+  \"@\n+   icm\\\\t%0,8,%1\n+   icmy\\\\t%0,8,%1\"\n+  [(set_attr \"op_type\" \"RS,RSY\")])\n \n (define_insn \"*sethighhisi\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=d\")\n-        (unspec:SI [(match_operand:HI 1 \"s_operand\" \"Q\")] 10))\n+  [(set (match_operand:SI 0 \"register_operand\" \"=d,d\")\n+        (unspec:SI [(match_operand:HI 1 \"s_operand\" \"Q,S\")] 10))\n    (clobber (reg:CC 33))]\n   \"\"\n-  \"icm\\\\t%0,12,%1\"\n-  [(set_attr \"op_type\" \"RS\")])\n+  \"@\n+   icm\\\\t%0,12,%1\n+   icmy\\\\t%0,12,%1\"\n+  [(set_attr \"op_type\" \"RS,RSY\")])\n \n (define_insn \"*sethighqidi_64\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=d\")\n-        (unspec:DI [(match_operand:QI 1 \"s_operand\" \"Q\")] 10))\n+        (unspec:DI [(match_operand:QI 1 \"s_operand\" \"QS\")] 10))\n    (clobber (reg:CC 33))]\n   \"TARGET_64BIT\"\n   \"icmh\\\\t%0,8,%1\"\n-  [(set_attr \"op_type\" \"RSE\")])\n+  [(set_attr \"op_type\" \"RSY\")])\n \n (define_insn \"*sethighqidi_31\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=d\")\n-        (unspec:DI [(match_operand:QI 1 \"s_operand\" \"Q\")] 10))\n+  [(set (match_operand:DI 0 \"register_operand\" \"=d,d\")\n+        (unspec:DI [(match_operand:QI 1 \"s_operand\" \"Q,S\")] 10))\n    (clobber (reg:CC 33))]\n   \"!TARGET_64BIT\"\n-  \"icm\\\\t%0,8,%1\"\n-  [(set_attr \"op_type\" \"RS\")])\n+  \"@\n+   icm\\\\t%0,8,%1\n+   icmy\\\\t%0,8,%1\"\n+  [(set_attr \"op_type\" \"RS,RSY\")])\n \n (define_insn_and_split \"*extractqi\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=d\")\n@@ -2144,7 +2214,7 @@\n   \"@\n    lgfr\\\\t%0,%1\n    lgf\\\\t%0,%1\"\n-  [(set_attr \"op_type\" \"RRE,RXE\")])\n+  [(set_attr \"op_type\" \"RRE,RXY\")])\n \n ;\n ; extendhidi2 instruction pattern(s).\n@@ -2178,7 +2248,7 @@\n         (sign_extend:DI (match_operand:HI 1 \"memory_operand\" \"m\")))]\n   \"TARGET_64BIT\"\n   \"lgh\\\\t%0,%1\"\n-  [(set_attr \"op_type\" \"RXE\")])\n+  [(set_attr \"op_type\" \"RXY\")])\n \n ;\n ; extendqidi2 instruction pattern(s).\n@@ -2207,10 +2277,17 @@\n }\n \")\n \n+(define_insn \"*extendqidi2\"\n+  [(set (match_operand:DI 0 \"register_operand\" \"=d\")\n+        (sign_extend:DI (match_operand:QI 1 \"memory_operand\" \"m\")))]\n+  \"TARGET_64BIT && TARGET_LONG_DISPLACEMENT\"\n+  \"lgb\\\\t%0,%1\"\n+  [(set_attr \"op_type\" \"RXY\")])\n+\n (define_split\n   [(set (match_operand:DI 0 \"register_operand\" \"\")\n         (sign_extend:DI (match_operand:QI 1 \"s_operand\" \"\")))]\n-  \"TARGET_64BIT && !reload_completed\"\n+  \"TARGET_64BIT && !TARGET_LONG_DISPLACEMENT && !reload_completed\"\n   [(parallel\n     [(set (match_dup 0) (unspec:DI [(match_dup 1)] 10))\n      (clobber (reg:CC 33))])\n@@ -2237,11 +2314,13 @@\n \")\n \n (define_insn \"*extendhisi2\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=d\")\n-        (sign_extend:SI (match_operand:HI 1 \"memory_operand\" \"m\")))]\n+  [(set (match_operand:SI 0 \"register_operand\" \"=d,d\")\n+        (sign_extend:SI (match_operand:HI 1 \"memory_operand\" \"R,T\")))]\n   \"\"\n-  \"lh\\\\t%0,%1\"\n-  [(set_attr \"op_type\" \"RX\")])\n+  \"@\n+   lh\\\\t%0,%1\n+   lhy\\\\t%0,%1\"\n+  [(set_attr \"op_type\" \"RX,RXY\")])\n \n ;\n ; extendqisi2 instruction pattern(s).\n@@ -2260,10 +2339,17 @@\n }\n \")\n \n+(define_insn \"*extendqisi2\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=d\")\n+        (sign_extend:SI (match_operand:QI 1 \"memory_operand\" \"m\")))]\n+  \"TARGET_64BIT && TARGET_LONG_DISPLACEMENT\"\n+  \"lb\\\\t%0,%1\"\n+  [(set_attr \"op_type\" \"RXY\")])\n+\n (define_split\n   [(set (match_operand:SI 0 \"register_operand\" \"\")\n         (sign_extend:SI (match_operand:QI 1 \"s_operand\" \"\")))]\n-  \"!reload_completed\"\n+  \"(!TARGET_64BIT || !TARGET_LONG_DISPLACEMENT) && !reload_completed\"\n   [(parallel\n     [(set (match_dup 0) (unspec:SI [(match_dup 1)] 10))\n      (clobber (reg:CC 33))])\n@@ -2304,7 +2390,7 @@\n   \"@\n    llgfr\\\\t%0,%1\n    llgf\\\\t%0,%1\"\n-  [(set_attr \"op_type\" \"RRE,RXE\")])\n+  [(set_attr \"op_type\" \"RRE,RXY\")])\n \n ;\n ; zero_extendhidi2 instruction pattern(s).\n@@ -2338,7 +2424,7 @@\n         (zero_extend:DI (match_operand:HI 1 \"memory_operand\" \"m\")))]\n   \"TARGET_64BIT\"\n   \"llgh\\\\t%0,%1\"\n-  [(set_attr \"op_type\" \"RXE\")])\n+  [(set_attr \"op_type\" \"RXY\")])\n \n ;\n ; zero_extendqidi2 instruction pattern(s)\n@@ -2372,7 +2458,7 @@\n         (zero_extend:DI (match_operand:QI 1 \"memory_operand\" \"m\")))]\n   \"TARGET_64BIT\"\n   \"llgc\\\\t%0,%1\"\n-  [(set_attr \"op_type\" \"RXE\")])\n+  [(set_attr \"op_type\" \"RXY\")])\n \n ;\n ; zero_extendhisi2 instruction pattern(s).\n@@ -2395,11 +2481,11 @@\n         (zero_extend:SI (match_operand:HI 1 \"memory_operand\" \"m\")))]\n   \"TARGET_64BIT\"\n   \"llgh\\\\t%0,%1\"\n-  [(set_attr \"op_type\" \"RXE\")])\n+  [(set_attr \"op_type\" \"RXY\")])\n \n (define_insn_and_split \"*zero_extendhisi2_31\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=&d\")\n-        (zero_extend:SI (match_operand:HI 1 \"memory_operand\" \"Q\")))\n+        (zero_extend:SI (match_operand:HI 1 \"memory_operand\" \"QS\")))\n    (clobber (reg:CC 33))]\n   \"!TARGET_64BIT\"\n   \"#\"\n@@ -2432,7 +2518,7 @@\n         (zero_extend:SI (match_operand:QI 1 \"memory_operand\" \"m\")))]\n   \"TARGET_64BIT\"\n   \"llgc\\\\t%0,%1\"\n-  [(set_attr \"op_type\" \"RXE\")])\n+  [(set_attr \"op_type\" \"RXY\")])\n \n (define_insn_and_split \"*zero_extendqisi2_31\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=&d\")\n@@ -2466,7 +2552,7 @@\n         (zero_extend:HI (match_operand:QI 1 \"memory_operand\" \"m\")))]\n   \"TARGET_64BIT\"\n   \"llgc\\\\t%0,%1\"\n-  [(set_attr \"op_type\" \"RXE\")])\n+  [(set_attr \"op_type\" \"RXY\")])\n \n (define_insn_and_split \"*zero_extendqihi2_31\"\n   [(set (match_operand:HI 0 \"register_operand\" \"=&d\")\n@@ -2866,7 +2952,7 @@\n \n (define_insn \"truncdfsf2_ibm\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=f,f\")\n-        (float_truncate:SF (match_operand:DF 1 \"general_operand\" \"f,m\")))]\n+        (float_truncate:SF (match_operand:DF 1 \"general_operand\" \"f,R\")))]\n   \"TARGET_HARD_FLOAT && TARGET_IBM_FLOAT\"\n   \"@\n    lrer\\\\t%0,%1\n@@ -2893,7 +2979,7 @@\n \n (define_insn \"extendsfdf2_ieee\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f,f\")\n-        (float_extend:DF (match_operand:SF 1 \"nonimmediate_operand\"  \"f,m\")))]\n+        (float_extend:DF (match_operand:SF 1 \"nonimmediate_operand\"  \"f,R\")))]\n   \"TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"@\n    ldebr\\\\t%0,%1\n@@ -2903,7 +2989,7 @@\n \n (define_insn \"extendsfdf2_ibm\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f,f\")\n-        (float_extend:DF (match_operand:SF 1 \"nonimmediate_operand\" \"f,m\")))\n+        (float_extend:DF (match_operand:SF 1 \"nonimmediate_operand\" \"f,R\")))\n    (clobber (reg:CC 33))]\n   \"TARGET_HARD_FLOAT && TARGET_IBM_FLOAT\"\n   \"@\n@@ -2939,7 +3025,7 @@\n   \"@\n    agfr\\\\t%0,%2\n    agf\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RRE,RXE\")])\n+  [(set_attr \"op_type\"  \"RRE,RXY\")])\n \n (define_insn \"*adddi3_zero_cc\"\n   [(set (reg 33) \n@@ -2952,7 +3038,7 @@\n   \"@\n    algfr\\\\t%0,%2\n    algf\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RRE,RXE\")])\n+  [(set_attr \"op_type\"  \"RRE,RXY\")])\n \n (define_insn \"*adddi3_zero_cconly\"\n   [(set (reg 33) \n@@ -2964,7 +3050,7 @@\n   \"@\n    algfr\\\\t%0,%2\n    algf\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RRE,RXE\")])\n+  [(set_attr \"op_type\"  \"RRE,RXY\")])\n \n (define_insn \"*adddi3_zero\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=d,d\")\n@@ -2975,7 +3061,7 @@\n   \"@\n    algfr\\\\t%0,%2\n    algf\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RRE,RXE\")])\n+  [(set_attr \"op_type\"  \"RRE,RXY\")])\n \n (define_insn \"*adddi3_imm_cc\"\n   [(set (reg 33) \n@@ -3001,7 +3087,7 @@\n   \"@\n    algr\\\\t%0,%2\n    alg\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RRE,RXE\")])\n+  [(set_attr \"op_type\"  \"RRE,RXY\")])\n \n (define_insn \"*adddi3_cconly\"\n   [(set (reg 33) \n@@ -3013,7 +3099,7 @@\n   \"@\n    algr\\\\t%0,%2\n    alg\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RRE,RXE\")])\n+  [(set_attr \"op_type\"  \"RRE,RXY\")])\n \n (define_insn \"*adddi3_cconly2\"\n   [(set (reg 33) \n@@ -3024,7 +3110,7 @@\n   \"@\n    algr\\\\t%0,%2\n    alg\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RRE,RXE\")])\n+  [(set_attr \"op_type\"  \"RRE,RXY\")])\n \n (define_insn \"*adddi3_64\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=d,d,d\")\n@@ -3036,7 +3122,7 @@\n    agr\\\\t%0,%2\n    aghi\\\\t%0,%h2\n    ag\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RRE,RI,RXE\")])\n+  [(set_attr \"op_type\"  \"RRE,RI,RXY\")])\n \n (define_insn_and_split \"*adddi3_31\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=&d\")\n@@ -3081,11 +3167,13 @@\n   \"\")\n \n (define_insn \"*la_64\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=d\")\n-        (match_operand:QI 1 \"address_operand\" \"p\"))]\n+  [(set (match_operand:DI 0 \"register_operand\" \"=d,d\")\n+        (match_operand:QI 1 \"address_operand\" \"U,W\"))]\n   \"TARGET_64BIT\"\n-  \"la\\\\t%0,%a1\"      \n-  [(set_attr \"op_type\" \"RX\")\n+  \"@\n+   la\\\\t%0,%a1\n+   lay\\\\t%0,%a1\"\n+  [(set_attr \"op_type\" \"RX,RXY\")\n    (set_attr \"type\"    \"la\")])\n \n (define_peephole2\n@@ -3144,126 +3232,140 @@\n \n (define_insn \"*addsi3_carry1_cc\"\n   [(set (reg 33) \n-        (compare (plus:SI (match_operand:SI 1 \"nonimmediate_operand\" \"%0,0\")\n-                          (match_operand:SI 2 \"general_operand\" \"d,m\"))\n+        (compare (plus:SI (match_operand:SI 1 \"nonimmediate_operand\" \"%0,0,0\")\n+                          (match_operand:SI 2 \"general_operand\" \"d,R,T\"))\n                  (match_dup 1)))\n-   (set (match_operand:SI 0 \"register_operand\" \"=d,d\")\n+   (set (match_operand:SI 0 \"register_operand\" \"=d,d,d\")\n         (plus:SI (match_dup 1) (match_dup 2)))]\n   \"s390_match_ccmode (insn, CCL1mode)\" \n   \"@\n    alr\\\\t%0,%2\n-   al\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RR,RX\")])\n+   al\\\\t%0,%2\n+   aly\\\\t%0,%2\"\n+  [(set_attr \"op_type\"  \"RR,RX,RXY\")])\n \n (define_insn \"*addsi3_carry1_cconly\"\n   [(set (reg 33) \n-        (compare (plus:SI (match_operand:SI 1 \"nonimmediate_operand\" \"%0,0\")\n-                          (match_operand:SI 2 \"general_operand\" \"d,m\"))\n+        (compare (plus:SI (match_operand:SI 1 \"nonimmediate_operand\" \"%0,0,0\")\n+                          (match_operand:SI 2 \"general_operand\" \"d,R,T\"))\n                  (match_dup 1)))\n-   (clobber (match_scratch:SI 0 \"=d,d\"))]\n+   (clobber (match_scratch:SI 0 \"=d,d,d\"))]\n   \"s390_match_ccmode (insn, CCL1mode)\" \n   \"@\n    alr\\\\t%0,%2\n-   al\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RR,RX\")])\n+   al\\\\t%0,%2\n+   aly\\\\t%0,%2\"\n+  [(set_attr \"op_type\"  \"RR,RX,RXY\")])\n \n (define_insn \"*addsi3_carry2_cc\"\n   [(set (reg 33) \n-        (compare (plus:SI (match_operand:SI 1 \"nonimmediate_operand\" \"%0,0\")\n-                          (match_operand:SI 2 \"general_operand\" \"d,m\"))\n+        (compare (plus:SI (match_operand:SI 1 \"nonimmediate_operand\" \"%0,0,0\")\n+                          (match_operand:SI 2 \"general_operand\" \"d,R,T\"))\n                  (match_dup 2)))\n-   (set (match_operand:SI 0 \"register_operand\" \"=d,d\")\n+   (set (match_operand:SI 0 \"register_operand\" \"=d,d,d\")\n         (plus:SI (match_dup 1) (match_dup 2)))]\n   \"s390_match_ccmode (insn, CCL1mode)\" \n   \"@\n    alr\\\\t%0,%2\n-   al\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RR,RX\")])\n+   al\\\\t%0,%2\n+   aly\\\\t%0,%2\"\n+  [(set_attr \"op_type\"  \"RR,RX,RXY\")])\n \n (define_insn \"*addsi3_carry2_cconly\"\n   [(set (reg 33) \n-        (compare (plus:SI (match_operand:SI 1 \"nonimmediate_operand\" \"%0,0\")\n-                          (match_operand:SI 2 \"general_operand\" \"d,m\"))\n+        (compare (plus:SI (match_operand:SI 1 \"nonimmediate_operand\" \"%0,0,0\")\n+                          (match_operand:SI 2 \"general_operand\" \"d,R,T\"))\n                  (match_dup 2)))\n-   (clobber (match_scratch:SI 0 \"=d,d\"))]\n+   (clobber (match_scratch:SI 0 \"=d,d,d\"))]\n   \"s390_match_ccmode (insn, CCL1mode)\" \n   \"@\n    alr\\\\t%0,%2\n-   al\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RR,RX\")])\n+   al\\\\t%0,%2\n+   aly\\\\t%0,%2\"\n+  [(set_attr \"op_type\"  \"RR,RX,RXY\")])\n \n (define_insn \"*addsi3_cc\"\n   [(set (reg 33) \n-        (compare (plus:SI (match_operand:SI 1 \"nonimmediate_operand\" \"%0,0\")\n-                          (match_operand:SI 2 \"general_operand\" \"d,m\"))\n+        (compare (plus:SI (match_operand:SI 1 \"nonimmediate_operand\" \"%0,0,0\")\n+                          (match_operand:SI 2 \"general_operand\" \"d,R,T\"))\n                  (const_int 0)))\n-   (set (match_operand:SI 0 \"register_operand\" \"=d,d\")\n+   (set (match_operand:SI 0 \"register_operand\" \"=d,d,d\")\n         (plus:SI (match_dup 1) (match_dup 2)))]\n   \"s390_match_ccmode (insn, CCLmode)\" \n   \"@\n    alr\\\\t%0,%2\n-   al\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RR,RX\")])\n+   al\\\\t%0,%2\n+   aly\\\\t%0,%2\"\n+  [(set_attr \"op_type\"  \"RR,RX,RXY\")])\n \n (define_insn \"*addsi3_cconly\"\n   [(set (reg 33) \n-        (compare (plus:SI (match_operand:SI 1 \"nonimmediate_operand\" \"%0,0\")\n-                          (match_operand:SI 2 \"general_operand\" \"d,m\"))\n+        (compare (plus:SI (match_operand:SI 1 \"nonimmediate_operand\" \"%0,0,0\")\n+                          (match_operand:SI 2 \"general_operand\" \"d,R,T\"))\n                  (const_int 0)))\n-   (clobber (match_scratch:SI 0 \"=d,d\"))]\n+   (clobber (match_scratch:SI 0 \"=d,d,d\"))]\n   \"s390_match_ccmode (insn, CCLmode)\" \n   \"@\n    alr\\\\t%0,%2\n-   al\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RR,RX\")])\n+   al\\\\t%0,%2\n+   aly\\\\t%0,%2\"\n+  [(set_attr \"op_type\"  \"RR,RX,RXY\")])\n \n (define_insn \"*addsi3_cconly2\"\n   [(set (reg 33) \n-        (compare (match_operand:SI 1 \"nonimmediate_operand\" \"%0,0\")\n-                 (neg:SI (match_operand:SI 2 \"general_operand\" \"d,m\"))))\n-   (clobber (match_scratch:SI 0 \"=d,d\"))]\n+        (compare (match_operand:SI 1 \"nonimmediate_operand\" \"%0,0,0\")\n+                 (neg:SI (match_operand:SI 2 \"general_operand\" \"d,R,T\"))))\n+   (clobber (match_scratch:SI 0 \"=d,d,d\"))]\n   \"s390_match_ccmode(insn, CCLmode)\"\n   \"@\n    alr\\\\t%0,%2\n-   al\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RR,RX\")])\n+   al\\\\t%0,%2\n+   aly\\\\t%0,%2\"\n+  [(set_attr \"op_type\"  \"RR,RX,RXY\")])\n \n (define_insn \"*addsi3_sign\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=d\")\n-        (plus:SI (match_operand:SI 1 \"register_operand\" \"0\")\n-                 (sign_extend:SI (match_operand:HI 2 \"memory_operand\" \"m\"))))\n+  [(set (match_operand:SI 0 \"register_operand\" \"=d,d\")\n+        (plus:SI (match_operand:SI 1 \"register_operand\" \"0,0\")\n+                 (sign_extend:SI (match_operand:HI 2 \"memory_operand\" \"R,T\"))))\n    (clobber (reg:CC 33))]\n   \"\"\n-  \"ah\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RX\")])\n+  \"@\n+   ah\\\\t%0,%2\n+   ahy\\\\t%0,%2\"\n+  [(set_attr \"op_type\"  \"RX,RXY\")])\n \n (define_insn \"*addsi3_sub\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=d\")\n-        (plus:SI (match_operand:SI 1 \"register_operand\" \"0\")\n-                 (subreg:SI (match_operand:HI 2 \"memory_operand\" \"m\") 0)))\n+  [(set (match_operand:SI 0 \"register_operand\" \"=d,d\")\n+        (plus:SI (match_operand:SI 1 \"register_operand\" \"0,0\")\n+                 (subreg:SI (match_operand:HI 2 \"memory_operand\" \"R,T\") 0)))\n    (clobber (reg:CC 33))]\n   \"\"\n-  \"ah\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RX\")])\n+  \"@\n+   ah\\\\t%0,%2\n+   ahy\\\\t%0,%2\"\n+  [(set_attr \"op_type\"  \"RX,RXY\")])\n \n (define_insn \"addsi3\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=d,d,d\")\n-        (plus:SI (match_operand:SI 1 \"nonimmediate_operand\" \"%0,0,0\")\n-                 (match_operand:SI 2 \"general_operand\" \"d,K,m\")))\n+  [(set (match_operand:SI 0 \"register_operand\" \"=d,d,d,d\")\n+        (plus:SI (match_operand:SI 1 \"nonimmediate_operand\" \"%0,0,0,0\")\n+                 (match_operand:SI 2 \"general_operand\" \"d,K,R,T\")))\n    (clobber (reg:CC 33))]\n   \"\"\n   \"@\n    ar\\\\t%0,%2\n    ahi\\\\t%0,%h2\n-   a\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RR,RI,RX\")])\n+   a\\\\t%0,%2\n+   ay\\\\t%0,%2\"\n+  [(set_attr \"op_type\"  \"RR,RI,RX,RXY\")])\n \n (define_insn \"*la_31\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=d\")\n-        (match_operand:QI 1 \"address_operand\" \"p\"))]\n+  [(set (match_operand:SI 0 \"register_operand\" \"=d,d\")\n+        (match_operand:QI 1 \"address_operand\" \"U,W\"))]\n   \"!TARGET_64BIT && legitimate_la_operand_p (operands[1])\"\n-  \"la\\\\t%0,%a1\"\n-  [(set_attr \"op_type\"  \"RX\")\n+  \"@\n+   la\\\\t%0,%a1\n+   lay\\\\t%0,%a1\"\n+  [(set_attr \"op_type\"  \"RX,RXY\")\n    (set_attr \"type\"     \"la\")])\n \n (define_peephole2\n@@ -3293,12 +3395,14 @@\n   \"\")\n \n (define_insn \"*la_31_and\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=d\")\n-        (and:SI (match_operand:QI 1 \"address_operand\" \"p\")\n+  [(set (match_operand:SI 0 \"register_operand\" \"=d,d\")\n+        (and:SI (match_operand:QI 1 \"address_operand\" \"U,W\")\n                 (const_int 2147483647)))]\n   \"!TARGET_64BIT\"\n-  \"la\\\\t%0,%a1\"\n-  [(set_attr \"op_type\"  \"RX\")\n+  \"@\n+   la\\\\t%0,%a1\n+   lay\\\\t%0,%a1\"\n+  [(set_attr \"op_type\"  \"RX,RXY\")\n    (set_attr \"type\"     \"la\")])\n \n (define_insn_and_split \"*la_31_and_cc\"\n@@ -3316,11 +3420,13 @@\n    (set_attr \"type\"     \"la\")])\n \n (define_insn \"force_la_31\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=d\")\n-        (match_operand:QI 1 \"address_operand\" \"p\"))\n+  [(set (match_operand:SI 0 \"register_operand\" \"=d,d\")\n+        (match_operand:QI 1 \"address_operand\" \"U,W\"))\n    (use (const_int 0))]\n   \"!TARGET_64BIT\"\n-  \"la\\\\t%0,%a1\"\n+  \"@\n+   la\\\\t%0,%a1\n+   lay\\\\t%0,%a1\"\n   [(set_attr \"op_type\"  \"RX\")\n    (set_attr \"type\"     \"la\")])\n \n@@ -3344,15 +3450,15 @@\n   [(parallel\n     [(set (match_operand:DF 0 \"register_operand\" \"=f,f\")\n           (plus:DF (match_operand:DF 1 \"nonimmediate_operand\" \"%0,0\")\n-                   (match_operand:DF 2 \"general_operand\" \"f,m\")))\n+                   (match_operand:DF 2 \"general_operand\" \"f,R\")))\n      (clobber (reg:CC 33))])]\n   \"TARGET_HARD_FLOAT\"\n   \"\")\n \n (define_insn \"*adddf3\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f,f\")\n         (plus:DF (match_operand:DF 1 \"nonimmediate_operand\" \"%0,0\")\n-                 (match_operand:DF 2 \"general_operand\" \"f,m\")))\n+                 (match_operand:DF 2 \"general_operand\" \"f,R\")))\n    (clobber (reg:CC 33))]\n   \"TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"@\n@@ -3364,7 +3470,7 @@\n (define_insn \"*adddf3_ibm\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f,f\")\n         (plus:DF (match_operand:DF 1 \"nonimmediate_operand\" \"%0,0\")\n-                 (match_operand:DF 2 \"general_operand\" \"f,m\")))\n+                 (match_operand:DF 2 \"general_operand\" \"f,R\")))\n    (clobber (reg:CC 33))]\n   \"TARGET_HARD_FLOAT && TARGET_IBM_FLOAT\"\n   \"@\n@@ -3381,15 +3487,15 @@\n   [(parallel\n     [(set (match_operand:SF 0 \"register_operand\" \"=f,f\")\n           (plus:SF (match_operand:SF 1 \"nonimmediate_operand\" \"%0,0\")\n-                   (match_operand:SF 2 \"general_operand\" \"f,m\")))\n+                   (match_operand:SF 2 \"general_operand\" \"f,R\")))\n      (clobber (reg:CC 33))])]\n   \"TARGET_HARD_FLOAT\"\n   \"\")\n \n (define_insn \"*addsf3\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=f,f\")\n         (plus:SF (match_operand:SF 1 \"nonimmediate_operand\" \"%0,0\")\n-                 (match_operand:SF 2 \"general_operand\" \"f,m\")))\n+                 (match_operand:SF 2 \"general_operand\" \"f,R\")))\n    (clobber (reg:CC 33))]\n   \"TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"@\n@@ -3401,7 +3507,7 @@\n (define_insn \"*addsf3\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=f,f\")\n         (plus:SF (match_operand:SF 1 \"nonimmediate_operand\" \"%0,0\")\n-                 (match_operand:SF 2 \"general_operand\" \"f,m\")))\n+                 (match_operand:SF 2 \"general_operand\" \"f,R\")))\n    (clobber (reg:CC 33))]\n   \"TARGET_HARD_FLOAT && TARGET_IBM_FLOAT\"\n   \"@\n@@ -3428,7 +3534,7 @@\n   \"@\n    sgfr\\\\t%0,%2\n    sgf\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RRE,RXE\")])\n+  [(set_attr \"op_type\"  \"RRE,RXY\")])\n \n (define_insn \"*subdi3_zero_cc\"\n   [(set (reg 33) \n@@ -3441,7 +3547,7 @@\n   \"@\n    slgfr\\\\t%0,%2\n    slgf\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RRE,RXE\")])\n+  [(set_attr \"op_type\"  \"RRE,RXY\")])\n \n (define_insn \"*subdi3_zero_cconly\"\n   [(set (reg 33) \n@@ -3453,7 +3559,7 @@\n   \"@\n    slgfr\\\\t%0,%2\n    slgf\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RRE,RXE\")])\n+  [(set_attr \"op_type\"  \"RRE,RXY\")])\n \n (define_insn \"*subdi3_zero\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=d,d\")\n@@ -3464,7 +3570,7 @@\n   \"@\n    slgfr\\\\t%0,%2\n    slgf\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RRE,RXE\")])\n+  [(set_attr \"op_type\"  \"RRE,RXY\")])\n \n (define_insn \"*subdi3_cc\"\n   [(set (reg 33)\n@@ -3477,7 +3583,7 @@\n   \"@\n    slgr\\\\t%0,%2\n    slg\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RRE,RXE\")])\n+  [(set_attr \"op_type\"  \"RRE,RXY\")])\n \n (define_insn \"*subdi3_cconly\"\n   [(set (reg 33)\n@@ -3489,7 +3595,7 @@\n   \"@\n    slgr\\\\t%0,%2\n    slg\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RRE,RXE\")])\n+  [(set_attr \"op_type\"  \"RRE,RXY\")])\n \n (define_insn \"*subdi3_64\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=d,d\")\n@@ -3550,82 +3656,91 @@\n \n (define_insn \"*subsi3_borrow_cc\"\n   [(set (reg 33)\n-        (compare (minus:SI (match_operand:SI 1 \"register_operand\" \"0,0\")\n-                           (match_operand:SI 2 \"general_operand\" \"d,m\"))\n+        (compare (minus:SI (match_operand:SI 1 \"register_operand\" \"0,0,0\")\n+                           (match_operand:SI 2 \"general_operand\" \"d,R,T\"))\n                  (match_dup 1)))\n-   (set (match_operand:SI 0 \"register_operand\" \"=d,d\")\n+   (set (match_operand:SI 0 \"register_operand\" \"=d,d,d\")\n         (minus:SI (match_dup 1) (match_dup 2)))]\n   \"s390_match_ccmode(insn, CCL2mode)\"\n   \"@\n    slr\\\\t%0,%2\n-   sl\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RR,RX\")])\n+   sl\\\\t%0,%2\n+   sly\\\\t%0,%2\"\n+  [(set_attr \"op_type\"  \"RR,RX,RXY\")])\n \n (define_insn \"*subsi3_borrow_cconly\"\n   [(set (reg 33)\n-        (compare (minus:SI (match_operand:SI 1 \"register_operand\" \"0,0\")\n-                           (match_operand:SI 2 \"general_operand\" \"d,m\"))\n+        (compare (minus:SI (match_operand:SI 1 \"register_operand\" \"0,0,0\")\n+                           (match_operand:SI 2 \"general_operand\" \"d,R,T\"))\n                  (match_dup 1)))\n-   (clobber (match_scratch:SI 0 \"=d,d\"))]\n+   (clobber (match_scratch:SI 0 \"=d,d,d\"))]\n   \"s390_match_ccmode(insn, CCL2mode)\"\n   \"@\n    slr\\\\t%0,%2\n-   sl\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RR,RX\")])\n+   sl\\\\t%0,%2\n+   sly\\\\t%0,%2\"\n+  [(set_attr \"op_type\"  \"RR,RX,RXE\")])\n \n (define_insn \"*subsi3_cc\"\n   [(set (reg 33)\n-        (compare (minus:SI (match_operand:SI 1 \"register_operand\" \"0,0\")\n-                           (match_operand:SI 2 \"general_operand\" \"d,m\"))\n+        (compare (minus:SI (match_operand:SI 1 \"register_operand\" \"0,0,0\")\n+                           (match_operand:SI 2 \"general_operand\" \"d,R,T\"))\n                  (const_int 0)))\n-   (set (match_operand:SI 0 \"register_operand\" \"=d,d\")\n+   (set (match_operand:SI 0 \"register_operand\" \"=d,d,d\")\n         (minus:SI (match_dup 1) (match_dup 2)))]\n   \"s390_match_ccmode(insn, CCLmode)\"\n   \"@\n    slr\\\\t%0,%2\n-   sl\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RR,RX\")])\n+   sl\\\\t%0,%2\n+   sly\\\\t%0,%2\"\n+  [(set_attr \"op_type\"  \"RR,RX,RXY\")])\n \n (define_insn \"*subsi3_cconly\"\n   [(set (reg 33)\n-        (compare (minus:SI (match_operand:SI 1 \"register_operand\" \"0,0\")\n-                           (match_operand:SI 2 \"general_operand\" \"d,m\"))\n+        (compare (minus:SI (match_operand:SI 1 \"register_operand\" \"0,0,0\")\n+                           (match_operand:SI 2 \"general_operand\" \"d,R,T\"))\n                  (const_int 0)))\n-   (clobber (match_scratch:SI 0 \"=d,d\"))]\n+   (clobber (match_scratch:SI 0 \"=d,d,d\"))]\n   \"s390_match_ccmode(insn, CCLmode)\"\n   \"@\n    slr\\\\t%0,%2\n-   sl\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RR,RX\")])\n+   sl\\\\t%0,%2\n+   sly\\\\t%0,%2\"\n+  [(set_attr \"op_type\"  \"RR,RX,RXY\")])\n \n (define_insn \"*subsi3_sign\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=d\")\n-        (minus:SI (match_operand:SI 1 \"register_operand\" \"0\")\n-                  (sign_extend:SI (match_operand:HI 2 \"memory_operand\" \"m\"))))\n+  [(set (match_operand:SI 0 \"register_operand\" \"=d,d\")\n+        (minus:SI (match_operand:SI 1 \"register_operand\" \"0,0\")\n+                  (sign_extend:SI (match_operand:HI 2 \"memory_operand\" \"R,T\"))))\n    (clobber (reg:CC 33))]\n   \"\"\n-  \"sh\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RX\")])\n+  \"@\n+   sh\\\\t%0,%2\n+   shy\\\\t%0,%2\"\n+  [(set_attr \"op_type\"  \"RX,RXY\")])\n \n (define_insn \"*subsi3_sub\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=d\")\n-        (minus:SI (match_operand:SI 1 \"register_operand\" \"0\")\n-                  (subreg:SI (match_operand:HI 2 \"memory_operand\" \"m\") 0)))\n+  [(set (match_operand:SI 0 \"register_operand\" \"=d,d\")\n+        (minus:SI (match_operand:SI 1 \"register_operand\" \"0,0\")\n+                  (subreg:SI (match_operand:HI 2 \"memory_operand\" \"R,T\") 0)))\n    (clobber (reg:CC 33))]\n   \"\"\n-  \"sh\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RX\")])\n+  \"@\n+   sh\\\\t%0,%2\n+   shy\\\\t%0,%2\"\n+  [(set_attr \"op_type\"  \"RX,RXY\")])\n \n (define_insn \"subsi3\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=d,d\")\n-        (minus:SI (match_operand:SI 1 \"register_operand\" \"0,0\")\n-                  (match_operand:SI 2 \"general_operand\" \"d,m\")))\n+  [(set (match_operand:SI 0 \"register_operand\" \"=d,d,d\")\n+        (minus:SI (match_operand:SI 1 \"register_operand\" \"0,0,0\")\n+                  (match_operand:SI 2 \"general_operand\" \"d,R,T\")))\n    (clobber (reg:CC 33))]\n   \"\"\n   \"@\n    sr\\\\t%0,%2\n-   s\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RR,RX\")])\n+   s\\\\t%0,%2\n+   sy\\\\t%0,%2\"\n+  [(set_attr \"op_type\"  \"RR,RX,RXY\")])\n \n \n ;\n@@ -3636,15 +3751,15 @@\n   [(parallel\n     [(set (match_operand:DF 0 \"register_operand\" \"=f,f\")\n           (minus:DF (match_operand:DF 1 \"register_operand\" \"0,0\")\n-                    (match_operand:DF 2 \"general_operand\" \"f,m\")))\n+                    (match_operand:DF 2 \"general_operand\" \"f,R\")))\n      (clobber (reg:CC 33))])]\n   \"TARGET_HARD_FLOAT\"\n   \"\")\n \n (define_insn \"*subdf3\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f,f\")\n         (minus:DF (match_operand:DF 1 \"register_operand\" \"0,0\")\n-                  (match_operand:DF 2 \"general_operand\" \"f,m\")))\n+                  (match_operand:DF 2 \"general_operand\" \"f,R\")))\n    (clobber (reg:CC 33))]\n   \"TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"@\n@@ -3656,7 +3771,7 @@\n (define_insn \"*subdf3_ibm\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f,f\")\n         (minus:DF (match_operand:DF 1 \"register_operand\" \"0,0\")\n-                  (match_operand:DF 2 \"general_operand\" \"f,m\")))\n+                  (match_operand:DF 2 \"general_operand\" \"f,R\")))\n    (clobber (reg:CC 33))]\n   \"TARGET_HARD_FLOAT && TARGET_IBM_FLOAT\"\n   \"@\n@@ -3673,15 +3788,15 @@\n   [(parallel\n     [(set (match_operand:SF 0 \"register_operand\" \"=f,f\")\n           (minus:SF (match_operand:SF 1 \"register_operand\" \"0,0\")\n-                    (match_operand:SF 2 \"general_operand\" \"f,m\")))\n+                    (match_operand:SF 2 \"general_operand\" \"f,R\")))\n      (clobber (reg:CC 33))])]\n   \"TARGET_HARD_FLOAT\"\n   \"\")\n \n (define_insn \"*subsf3\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=f,f\")\n         (minus:SF (match_operand:SF 1 \"register_operand\" \"0,0\")\n-                  (match_operand:SF 2 \"general_operand\" \"f,m\")))\n+                  (match_operand:SF 2 \"general_operand\" \"f,R\")))\n    (clobber (reg:CC 33))]\n   \"TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"@\n@@ -3693,7 +3808,7 @@\n (define_insn \"*subsf3_ibm\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=f,f\")\n         (minus:SF (match_operand:SF 1 \"register_operand\" \"0,0\")\n-                  (match_operand:SF 2 \"general_operand\" \"f,m\")))\n+                  (match_operand:SF 2 \"general_operand\" \"f,R\")))\n    (clobber (reg:CC 33))]\n   \"TARGET_HARD_FLOAT && TARGET_IBM_FLOAT\"\n   \"@\n@@ -3719,7 +3834,7 @@\n   \"@\n    msgfr\\\\t%0,%2\n    msgf\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RRE,RXE\")\n+  [(set_attr \"op_type\"  \"RRE,RXY\")\n    (set_attr \"type\"     \"imul\")])\n \n \n@@ -3732,23 +3847,24 @@\n    msgr\\\\t%0,%2\n    mghi\\\\t%0,%h2\n    msg\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RRE,RI,RXE\")\n+  [(set_attr \"op_type\"  \"RRE,RI,RXY\")\n    (set_attr \"type\"     \"imul\")])\n \n ;\n ; mulsi3 instruction pattern(s).\n ;\n \n (define_insn \"mulsi3\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=d,d,d\")\n-        (mult:SI  (match_operand:SI 1 \"nonimmediate_operand\" \"%0,0,0\")\n-                  (match_operand:SI 2 \"general_operand\" \"d,K,m\")))]\n+  [(set (match_operand:SI 0 \"register_operand\" \"=d,d,d,d\")\n+        (mult:SI  (match_operand:SI 1 \"nonimmediate_operand\" \"%0,0,0,0\")\n+                  (match_operand:SI 2 \"general_operand\" \"d,K,R,T\")))]\n   \"\"\n   \"@\n    msr\\\\t%0,%2\n    mhi\\\\t%0,%h2\n-   ms\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RRE,RI,RX\")\n+   ms\\\\t%0,%2\n+   msy\\\\t%0,%2\"\n+  [(set_attr \"op_type\"  \"RRE,RI,RX,RXY\")\n    (set_attr \"type\"     \"imul\")])\n \n ;\n@@ -3781,7 +3897,7 @@\n          (mult:DI (sign_extend:DI \n \t            (truncate:SI (match_operand:DI 1 \"register_operand\" \"0,0\")))\n                   (sign_extend:DI\n-\t            (match_operand:SI 2 \"nonimmediate_operand\" \"d,m\"))))]\n+\t            (match_operand:SI 2 \"nonimmediate_operand\" \"d,R\"))))]\n    \"!TARGET_64BIT\"\n    \"@\n     mr\\\\t%0,%2\n@@ -3797,15 +3913,15 @@\n   [(parallel\n     [(set (match_operand:DF 0 \"register_operand\" \"=f,f\")\n           (mult:DF (match_operand:DF 1 \"nonimmediate_operand\" \"%0,0\")\n-                   (match_operand:DF 2 \"general_operand\" \"f,m\")))\n+                   (match_operand:DF 2 \"general_operand\" \"f,R\")))\n      (clobber (reg:CC 33))])]\n   \"TARGET_HARD_FLOAT\"\n   \"\")\n \n (define_insn \"*muldf3\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f,f\")\n         (mult:DF (match_operand:DF 1 \"nonimmediate_operand\" \"%0,0\")\n-                 (match_operand:DF 2 \"general_operand\" \"f,m\")))\n+                 (match_operand:DF 2 \"general_operand\" \"f,R\")))\n    (clobber (reg:CC 33))]\n   \"TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"@\n@@ -3817,7 +3933,7 @@\n (define_insn \"*muldf3_ibm\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f,f\")\n         (mult:DF (match_operand:DF 1 \"nonimmediate_operand\" \"%0,0\")\n-                 (match_operand:DF 2 \"general_operand\" \"f,m\")))\n+                 (match_operand:DF 2 \"general_operand\" \"f,R\")))\n    (clobber (reg:CC 33))]\n   \"TARGET_HARD_FLOAT && TARGET_IBM_FLOAT\"\n   \"@\n@@ -3834,15 +3950,15 @@\n   [(parallel\n     [(set (match_operand:SF 0 \"register_operand\" \"=f,f\")\n           (mult:SF (match_operand:SF 1 \"nonimmediate_operand\" \"%0,0\")\n-                   (match_operand:SF 2 \"general_operand\" \"f,m\")))\n+                   (match_operand:SF 2 \"general_operand\" \"f,R\")))\n      (clobber (reg:CC 33))])]\n   \"TARGET_HARD_FLOAT\"\n   \"\")\n \n (define_insn \"*mulsf3\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=f,f\")\n         (mult:SF (match_operand:SF 1 \"nonimmediate_operand\" \"%0,0\")\n-                 (match_operand:SF 2 \"general_operand\" \"f,m\")))\n+                 (match_operand:SF 2 \"general_operand\" \"f,R\")))\n    (clobber (reg:CC 33))]\n   \"TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"@\n@@ -3854,7 +3970,7 @@\n (define_insn \"*mulsf3_ibm\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=f,f\")\n         (mult:SF (match_operand:SF 1 \"nonimmediate_operand\" \"%0,0\")\n-                 (match_operand:SF 2 \"general_operand\" \"f,m\")))\n+                 (match_operand:SF 2 \"general_operand\" \"f,R\")))\n    (clobber (reg:CC 33))]\n   \"TARGET_HARD_FLOAT && TARGET_IBM_FLOAT\"\n   \"@\n@@ -3926,7 +4042,7 @@\n   \"@\n    dsgr\\\\t%0,%2\n    dsg\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RRE,RXE\")\n+  [(set_attr \"op_type\"  \"RRE,RXY\")\n    (set_attr \"type\"     \"idiv\")])\n \n (define_insn \"divmodtisi3\"\n@@ -3944,7 +4060,7 @@\n   \"@\n    dsgfr\\\\t%0,%2\n    dsgf\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RRE,RXE\")\n+  [(set_attr \"op_type\"  \"RRE,RXY\")\n    (set_attr \"type\"     \"idiv\")])\n \n ;\n@@ -4006,7 +4122,7 @@\n   \"@\n    dlgr\\\\t%0,%2\n    dlg\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RRE,RXE\")\n+  [(set_attr \"op_type\"  \"RRE,RXY\")\n    (set_attr \"type\"     \"idiv\")])\n \n ;\n@@ -4056,7 +4172,7 @@\n                   (truncate:SI\n                     (div:DI (match_operand:DI 1 \"register_operand\" \"0,0\")\n                             (sign_extend:DI \n-                              (match_operand:SI 2 \"nonimmediate_operand\" \"d,m\")))))\n+                              (match_operand:SI 2 \"nonimmediate_operand\" \"d,R\")))))\n                 (ashift:DI\n                   (zero_extend:DI\n                     (truncate:SI\n@@ -4266,15 +4382,15 @@\n   [(parallel\n     [(set (match_operand:DF 0 \"register_operand\" \"=f,f\")\n           (div:DF (match_operand:DF 1 \"register_operand\" \"0,0\")\n-                  (match_operand:DF 2 \"general_operand\" \"f,m\")))\n+                  (match_operand:DF 2 \"general_operand\" \"f,R\")))\n      (clobber (reg:CC 33))])]\n   \"TARGET_HARD_FLOAT\"\n   \"\")\n \n (define_insn \"*divdf3\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f,f\")\n         (div:DF (match_operand:DF 1 \"register_operand\" \"0,0\")\n-                (match_operand:DF 2 \"general_operand\" \"f,m\")))\n+                (match_operand:DF 2 \"general_operand\" \"f,R\")))\n    (clobber (reg:CC 33))]\n   \"TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"@\n@@ -4286,7 +4402,7 @@\n (define_insn \"*divdf3_ibm\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f,f\")\n         (div:DF (match_operand:DF 1 \"register_operand\" \"0,0\")\n-                (match_operand:DF 2 \"general_operand\" \"f,m\")))\n+                (match_operand:DF 2 \"general_operand\" \"f,R\")))\n    (clobber (reg:CC 33))]\n   \"TARGET_HARD_FLOAT && TARGET_IBM_FLOAT\"\n   \"@\n@@ -4303,15 +4419,15 @@\n   [(parallel\n     [(set (match_operand:SF 0 \"register_operand\" \"=f,f\")\n           (div:SF (match_operand:SF 1 \"register_operand\" \"0,0\")\n-                  (match_operand:SF 2 \"general_operand\" \"f,m\")))\n+                  (match_operand:SF 2 \"general_operand\" \"f,R\")))\n      (clobber (reg:CC 33))])]\n   \"TARGET_HARD_FLOAT\"\n   \"\")\n \n (define_insn \"*divsf3\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=f,f\")\n         (div:SF (match_operand:SF 1 \"register_operand\" \"0,0\")\n-                (match_operand:SF 2 \"general_operand\" \"f,m\")))\n+                (match_operand:SF 2 \"general_operand\" \"f,R\")))\n    (clobber (reg:CC 33))]\n   \"TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"@\n@@ -4323,7 +4439,7 @@\n (define_insn \"*divsf3\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=f,f\")\n         (div:SF (match_operand:SF 1 \"register_operand\" \"0,0\")\n-                (match_operand:SF 2 \"general_operand\" \"f,m\")))\n+                (match_operand:SF 2 \"general_operand\" \"f,R\")))\n    (clobber (reg:CC 33))]\n   \"TARGET_HARD_FLOAT && TARGET_IBM_FLOAT\"\n   \"@\n@@ -4352,7 +4468,7 @@\n   \"@\n    ngr\\\\t%0,%2\n    ng\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RRE,RXE\")])\n+  [(set_attr \"op_type\"  \"RRE,RXY\")])\n \n (define_insn \"*anddi3_cconly\"\n   [(set (reg 33)\n@@ -4364,7 +4480,7 @@\n   \"@\n    ngr\\\\t%0,%2\n    ng\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RRE,RXE\")])\n+  [(set_attr \"op_type\"  \"RRE,RXY\")])\n \n (define_insn \"*anddi3_ni\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=d\")\n@@ -4397,7 +4513,7 @@\n   \"@\n    ngr\\\\t%0,%2\n    ng\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RRE,RXE\")])\n+  [(set_attr \"op_type\"  \"RRE,RXY\")])\n \n (define_insn \"*anddi3_ss\"\n   [(set (match_operand:DI 0 \"s_operand\" \"=Q\")\n@@ -4423,28 +4539,30 @@\n \n (define_insn \"*andsi3_cc\"\n   [(set (reg 33)\n-        (compare (and:SI (match_operand:SI 1 \"nonimmediate_operand\" \"%0,0\")\n-                         (match_operand:SI 2 \"general_operand\" \"d,m\"))\n+        (compare (and:SI (match_operand:SI 1 \"nonimmediate_operand\" \"%0,0,0\")\n+                         (match_operand:SI 2 \"general_operand\" \"d,R,T\"))\n                  (const_int 0)))\n-   (set (match_operand:SI 0 \"register_operand\" \"=d,d\")\n+   (set (match_operand:SI 0 \"register_operand\" \"=d,d,d\")\n         (and:SI (match_dup 1) (match_dup 2)))]\n   \"s390_match_ccmode(insn, CCTmode)\"\n   \"@\n    nr\\\\t%0,%2\n-   n\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RR,RX\")])\n+   n\\\\t%0,%2\n+   ny\\\\t%0,%2\"\n+  [(set_attr \"op_type\"  \"RR,RX,RXY\")])\n \n (define_insn \"*andsi3_cconly\"\n   [(set (reg 33)\n-        (compare (and:SI (match_operand:SI 1 \"nonimmediate_operand\" \"%0,0\")\n-                         (match_operand:SI 2 \"general_operand\" \"d,m\"))\n+        (compare (and:SI (match_operand:SI 1 \"nonimmediate_operand\" \"%0,0,0\")\n+                         (match_operand:SI 2 \"general_operand\" \"d,R,T\"))\n                  (const_int 0)))\n-   (clobber (match_scratch:SI 0 \"=d,d\"))]\n+   (clobber (match_scratch:SI 0 \"=d,d,d\"))]\n   \"s390_match_ccmode(insn, CCTmode)\"\n   \"@\n    nr\\\\t%0,%2\n-   n\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RR,RX\")])\n+   n\\\\t%0,%2\n+   ny\\\\t%0,%2\"\n+  [(set_attr \"op_type\"  \"RR,RX,RXY\")])\n \n (define_insn \"*andsi3_ni\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=d\")\n@@ -4467,15 +4585,16 @@\n   [(set_attr \"op_type\"  \"RI\")])\n \n (define_insn \"andsi3\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=d,d\")\n-        (and:SI (match_operand:SI 1 \"nonimmediate_operand\" \"%0,0\")\n-                (match_operand:SI 2 \"general_operand\" \"d,m\")))\n+  [(set (match_operand:SI 0 \"register_operand\" \"=d,d,d\")\n+        (and:SI (match_operand:SI 1 \"nonimmediate_operand\" \"%0,0,0\")\n+                (match_operand:SI 2 \"general_operand\" \"d,R,T\")))\n    (clobber (reg:CC 33))]\n   \"\"\n   \"@\n    nr\\\\t%0,%2\n-   n\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RR,RX\")])\n+   n\\\\t%0,%2\n+   ny\\\\t%0,%2\"\n+  [(set_attr \"op_type\"  \"RR,RX,RXY\")])\n \n (define_insn \"*andsi3_ss\"\n   [(set (match_operand:SI 0 \"s_operand\" \"=Q\")\n@@ -4562,26 +4681,28 @@\n   [(set_attr \"op_type\"  \"RR\")])\n \n (define_insn \"*andqi3_ss\"\n-  [(set (match_operand:QI 0 \"s_operand\" \"=Q,Q\")\n+  [(set (match_operand:QI 0 \"s_operand\" \"=Q,S,Q\")\n         (and:QI (match_dup 0)\n-                (match_operand:QI 1 \"s_imm_operand\" \"n,Q\")))\n+                (match_operand:QI 1 \"s_imm_operand\" \"n,n,Q\")))\n    (clobber (reg:CC 33))]\n   \"\"\n   \"@\n    ni\\\\t%0,%b1\n+   niy\\\\t%0,%b1\n    nc\\\\t%O0(1,%R0),%1\"\n-  [(set_attr \"op_type\"  \"SI,SS\")])\n+  [(set_attr \"op_type\"  \"SI,SIY,SS\")])\n \n (define_insn \"*andqi3_ss_inv\"\n-  [(set (match_operand:QI 0 \"s_operand\" \"=Q,Q\")\n-        (and:QI (match_operand:QI 1 \"s_imm_operand\" \"n,Q\")\n+  [(set (match_operand:QI 0 \"s_operand\" \"=Q,S,Q\")\n+        (and:QI (match_operand:QI 1 \"s_imm_operand\" \"n,n,Q\")\n                 (match_dup 0)))\n    (clobber (reg:CC 33))]\n   \"\"\n   \"@\n    ni\\\\t%0,%b1\n+   niy\\\\t%0,%b1\n    nc\\\\t%O0(1,%R0),%1\"\n-  [(set_attr \"op_type\"  \"SI,SS\")])\n+  [(set_attr \"op_type\"  \"SI,SIY,SS\")])\n \n \n ;;\n@@ -4603,7 +4724,7 @@\n   \"@\n    ogr\\\\t%0,%2\n    og\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RRE,RXE\")])\n+  [(set_attr \"op_type\"  \"RRE,RXY\")])\n \n (define_insn \"*iordi3_cconly\"\n   [(set (reg 33)\n@@ -4615,7 +4736,7 @@\n   \"@\n    ogr\\\\t%0,%2\n    og\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RRE,RXE\")])\n+  [(set_attr \"op_type\"  \"RRE,RXY\")])\n \n (define_insn \"*iordi3_oi\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=d\")\n@@ -4648,7 +4769,7 @@\n   \"@\n    ogr\\\\t%0,%2\n    og\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RRE,RXE\")])\n+  [(set_attr \"op_type\"  \"RRE,RXY\")])\n \n (define_insn \"*iordi3_ss\"\n   [(set (match_operand:DI 0 \"s_operand\" \"=Q\")\n@@ -4674,28 +4795,30 @@\n \n (define_insn \"*iorsi3_cc\"\n   [(set (reg 33)\n-        (compare (ior:SI (match_operand:SI 1 \"nonimmediate_operand\" \"%0,0\")\n-                         (match_operand:SI 2 \"general_operand\" \"d,m\"))\n+        (compare (ior:SI (match_operand:SI 1 \"nonimmediate_operand\" \"%0,0,0\")\n+                         (match_operand:SI 2 \"general_operand\" \"d,R,T\"))\n                  (const_int 0)))\n-   (set (match_operand:SI 0 \"register_operand\" \"=d,d\")\n+   (set (match_operand:SI 0 \"register_operand\" \"=d,d,d\")\n         (ior:SI (match_dup 1) (match_dup 2)))]\n   \"s390_match_ccmode(insn, CCTmode)\"\n   \"@\n    or\\\\t%0,%2\n-   o\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RR,RX\")])\n+   o\\\\t%0,%2\n+   oy\\\\t%0,%2\"\n+  [(set_attr \"op_type\"  \"RR,RX,RXY\")])\n \n (define_insn \"*iorsi3_cconly\"\n   [(set (reg 33)\n-        (compare (ior:SI (match_operand:SI 1 \"nonimmediate_operand\" \"%0,0\")\n-                         (match_operand:SI 2 \"general_operand\" \"d,m\"))\n+        (compare (ior:SI (match_operand:SI 1 \"nonimmediate_operand\" \"%0,0,0\")\n+                         (match_operand:SI 2 \"general_operand\" \"d,R,T\"))\n                  (const_int 0)))\n-   (clobber (match_scratch:SI 0 \"=d,d\"))]\n+   (clobber (match_scratch:SI 0 \"=d,d,d\"))]\n   \"s390_match_ccmode(insn, CCTmode)\"\n   \"@\n    or\\\\t%0,%2\n-   o\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RR,RX\")])\n+   o\\\\t%0,%2\n+   oy\\\\t%0,%2\"\n+  [(set_attr \"op_type\"  \"RR,RX,RXY\")])\n \n (define_insn \"*iorsi3_oi\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=d\")\n@@ -4718,15 +4841,16 @@\n   [(set_attr \"op_type\"  \"RI\")])\n \n (define_insn \"iorsi3\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=d,d\")\n-        (ior:SI (match_operand:SI 1 \"nonimmediate_operand\" \"%0,0\")\n-                (match_operand:SI 2 \"general_operand\" \"d,m\")))\n+  [(set (match_operand:SI 0 \"register_operand\" \"=d,d,d\")\n+        (ior:SI (match_operand:SI 1 \"nonimmediate_operand\" \"%0,0,0\")\n+                (match_operand:SI 2 \"general_operand\" \"d,R,T\")))\n    (clobber (reg:CC 33))]\n   \"\"\n   \"@\n    or\\\\t%0,%2\n-   o\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RR,RX\")])\n+   o\\\\t%0,%2\n+   oy\\\\t%0,%2\"\n+  [(set_attr \"op_type\"  \"RR,RX,RXY\")])\n \n (define_insn \"*iorsi3_ss\"\n   [(set (match_operand:SI 0 \"s_operand\" \"=Q\")\n@@ -4813,26 +4937,28 @@\n   [(set_attr \"op_type\"  \"RR\")])\n \n (define_insn \"*iorqi3_ss\"\n-  [(set (match_operand:QI 0 \"s_operand\" \"=Q,Q\")\n+  [(set (match_operand:QI 0 \"s_operand\" \"=Q,S,Q\")\n         (ior:QI (match_dup 0)\n-                (match_operand:QI 1 \"s_imm_operand\" \"n,Q\")))\n+                (match_operand:QI 1 \"s_imm_operand\" \"n,n,Q\")))\n    (clobber (reg:CC 33))]\n   \"\"\n   \"@\n    oi\\\\t%0,%b1\n+   oiy\\\\t%0,%b1\n    oc\\\\t%O0(1,%R0),%1\"\n-  [(set_attr \"op_type\"  \"SI,SS\")])\n+  [(set_attr \"op_type\"  \"SI,SIY,SS\")])\n \n (define_insn \"*iorqi3_ss_inv\"\n-  [(set (match_operand:QI 0 \"s_operand\" \"=Q,Q\")\n-        (ior:QI (match_operand:QI 1 \"s_imm_operand\" \"n,Q\")\n+  [(set (match_operand:QI 0 \"s_operand\" \"=Q,S,Q\")\n+        (ior:QI (match_operand:QI 1 \"s_imm_operand\" \"n,n,Q\")\n                 (match_dup 0)))\n    (clobber (reg:CC 33))]\n   \"\"\n   \"@\n    oi\\\\t%0,%b1\n+   oiy\\\\t%0,%b1\n    oc\\\\t%O0(1,%R0),%1\"\n-  [(set_attr \"op_type\"  \"SI,SS\")])\n+  [(set_attr \"op_type\"  \"SI,SIY,SS\")])\n \n \n ;;\n@@ -4854,7 +4980,7 @@\n   \"@\n    xgr\\\\t%0,%2\n    xg\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RRE,RXE\")])\n+  [(set_attr \"op_type\"  \"RRE,RXY\")])\n \n (define_insn \"*xordi3_cconly\"\n   [(set (reg 33)\n@@ -4866,7 +4992,7 @@\n   \"@\n    xgr\\\\t%0,%2\n    xr\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RRE,RXE\")])\n+  [(set_attr \"op_type\"  \"RRE,RXY\")])\n \n (define_insn \"xordi3\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=d,d\")\n@@ -4877,7 +5003,7 @@\n   \"@\n    xgr\\\\t%0,%2\n    xg\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RRE,RXE\")])\n+  [(set_attr \"op_type\"  \"RRE,RXY\")])\n \n (define_insn \"*xordi3_ss\"\n   [(set (match_operand:DI 0 \"s_operand\" \"=Q\")\n@@ -4903,39 +5029,42 @@\n \n (define_insn \"*xorsi3_cc\"\n   [(set (reg 33)\n-        (compare (xor:SI (match_operand:SI 1 \"nonimmediate_operand\" \"%0,0\")\n-                         (match_operand:SI 2 \"general_operand\" \"d,m\"))\n+        (compare (xor:SI (match_operand:SI 1 \"nonimmediate_operand\" \"%0,0,0\")\n+                         (match_operand:SI 2 \"general_operand\" \"d,R,T\"))\n                  (const_int 0)))\n-   (set (match_operand:SI 0 \"register_operand\" \"=d,d\")\n+   (set (match_operand:SI 0 \"register_operand\" \"=d,d,d\")\n         (xor:SI (match_dup 1) (match_dup 2)))]\n   \"s390_match_ccmode(insn, CCTmode)\"\n   \"@\n    xr\\\\t%0,%2\n-   x\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RR,RX\")])\n+   x\\\\t%0,%2\n+   xy\\\\t%0,%2\"\n+  [(set_attr \"op_type\"  \"RR,RX,RXY\")])\n \n (define_insn \"*xorsi3_cconly\"\n   [(set (reg 33)\n-        (compare (xor:SI (match_operand:SI 1 \"nonimmediate_operand\" \"%0,0\")\n-                         (match_operand:SI 2 \"general_operand\" \"d,m\"))\n+        (compare (xor:SI (match_operand:SI 1 \"nonimmediate_operand\" \"%0,0,0\")\n+                         (match_operand:SI 2 \"general_operand\" \"d,R,T\"))\n                  (const_int 0)))\n-   (clobber (match_scratch:SI 0 \"=d,d\"))]\n+   (clobber (match_scratch:SI 0 \"=d,d,d\"))]\n   \"s390_match_ccmode(insn, CCTmode)\"\n   \"@\n    xr\\\\t%0,%2\n-   x\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RR,RX\")])\n+   x\\\\t%0,%2\n+   xy\\\\t%0,%2\"\n+  [(set_attr \"op_type\"  \"RR,RX,RXY\")])\n \n (define_insn \"xorsi3\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=d,d\")\n-        (xor:SI (match_operand:SI 1 \"nonimmediate_operand\" \"%0,0\")\n-                (match_operand:SI 2 \"general_operand\" \"d,m\")))\n+  [(set (match_operand:SI 0 \"register_operand\" \"=d,d,d\")\n+        (xor:SI (match_operand:SI 1 \"nonimmediate_operand\" \"%0,0,0\")\n+                (match_operand:SI 2 \"general_operand\" \"d,R,T\")))\n    (clobber (reg:CC 33))]\n   \"\"\n   \"@\n    xr\\\\t%0,%2\n-   x\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RR,RX\")])\n+   x\\\\t%0,%2\n+   xy\\\\t%0,%2\"\n+  [(set_attr \"op_type\"  \"RR,RX,RXY\")])\n \n (define_insn \"*xorsi3_ss\"\n   [(set (match_operand:SI 0 \"s_operand\" \"=Q\")\n@@ -4966,8 +5095,7 @@\n    (clobber (reg:CC 33))]\n   \"\"\n   \"xr\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RR\")\n-   (set_attr \"atype\"    \"reg\")])\n+  [(set_attr \"op_type\"  \"RR\")])\n \n (define_insn \"*xorhi3_ss\"\n   [(set (match_operand:HI 0 \"s_operand\" \"=Q\")\n@@ -5001,26 +5129,28 @@\n   [(set_attr \"op_type\"  \"RR\")])\n \n (define_insn \"*xorqi3_ss\"\n-  [(set (match_operand:QI 0 \"s_operand\" \"=Q,Q\")\n+  [(set (match_operand:QI 0 \"s_operand\" \"=Q,S,Q\")\n         (xor:QI (match_dup 0)\n-                (match_operand:QI 1 \"s_imm_operand\" \"n,Q\")))\n+                (match_operand:QI 1 \"s_imm_operand\" \"n,n,Q\")))\n    (clobber (reg:CC 33))]\n   \"\"\n   \"@\n    xi\\\\t%0,%b1\n+   xiy\\\\t%0,%b1\n    xc\\\\t%O0(1,%R0),%1\"\n-  [(set_attr \"op_type\"  \"SI,SS\")])\n+  [(set_attr \"op_type\"  \"SI,SIY,SS\")])\n \n (define_insn \"*xorqi3_ss_inv\"\n-  [(set (match_operand:QI 0 \"s_operand\" \"=Q,Q\")\n-        (xor:QI (match_operand:QI 1 \"s_imm_operand\" \"n,Q\")\n+  [(set (match_operand:QI 0 \"s_operand\" \"=Q,S,Q\")\n+        (xor:QI (match_operand:QI 1 \"s_imm_operand\" \"n,n,Q\")\n                 (match_dup 0)))\n    (clobber (reg:CC 33))]\n   \"\"\n   \"@\n    xi\\\\t%0,%b1\n+   xiy\\\\t%0,%b1\n    xc\\\\t%O0(1,%R0),%1\"\n-  [(set_attr \"op_type\"  \"SI,SS\")])\n+  [(set_attr \"op_type\"  \"SI,SIY,SS\")])\n \n \n ;;\n@@ -5239,27 +5369,25 @@\n \n (define_insn \"sqrtdf2\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f,f\")\n-\t(sqrt:DF (match_operand:DF 1 \"general_operand\" \"f,m\")))]\n+\t(sqrt:DF (match_operand:DF 1 \"general_operand\" \"f,R\")))]\n   \"TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"@\n    sqdbr\\\\t%0,%1\n    sqdb\\\\t%0,%1\"\n-  [(set_attr \"op_type\"  \"RRE,RSE\")\n-   (set_attr \"type\"     \"fsqrtd\")])\n+  [(set_attr \"op_type\"  \"RRE,RXE\")])\n \n ;\n ; sqrtsf2 instruction pattern(s).\n ;\n \n (define_insn \"sqrtsf2\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=f,f\")\n-\t(sqrt:SF (match_operand:SF 1 \"general_operand\" \"f,m\")))]\n+\t(sqrt:SF (match_operand:SF 1 \"general_operand\" \"f,R\")))]\n   \"TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"@\n    sqebr\\\\t%0,%1\n    sqeb\\\\t%0,%1\"\n-  [(set_attr \"op_type\"  \"RRE,RSE\")\n-   (set_attr \"type\"     \"fsqrts\")])\n+  [(set_attr \"op_type\"  \"RRE,RXE\")])\n \n ;;\n ;;- One complement instructions.\n@@ -5796,7 +5924,7 @@\n  [(set (pc)\n        (if_then_else\n          (match_operator 1 \"comparison_operator\" [(reg 33) (const_int 0)])\n-\t (match_operand 0 \"address_operand\" \"p\")\n+\t (match_operand 0 \"address_operand\" \"U\")\n \t (pc)))]\n   \"\"\n   \"*\n@@ -5848,7 +5976,7 @@\n        (if_then_else\n          (match_operator 1 \"comparison_operator\" [(reg 33) (const_int 0)])\n          (pc)\n-\t (match_operand 0 \"address_operand\" \"p\")))]\n+\t (match_operand 0 \"address_operand\" \"U\")))]\n   \"\"\n   \"*\n {\n@@ -5961,7 +6089,7 @@\n         (if_then_else\n           (ne (match_operand:SI 1 \"register_operand\" \"d,d\")\n               (const_int 1))\n-          (match_operand 0 \"address_operand\" \"p,p\")\n+          (match_operand 0 \"address_operand\" \"U,U\")\n           (pc)))\n    (set (match_operand:SI 2 \"register_operand\" \"=1,?*m*d\")\n         (plus:SI (match_dup 1) (const_int -1)))\n@@ -6037,7 +6165,7 @@\n         (if_then_else\n           (ne (match_operand:DI 1 \"register_operand\" \"d,d\")\n               (const_int 1))\n-          (match_operand 0 \"address_operand\" \"p,p\")\n+          (match_operand 0 \"address_operand\" \"U,U\")\n           (pc)))\n    (set (match_operand:DI 2 \"register_operand\" \"=1,?*m*d\")\n         (plus:DI (match_dup 1) (const_int -1)))\n@@ -6116,7 +6244,7 @@\n ;\n \n (define_insn \"indirect_jump\"\n- [(set (pc) (match_operand 0 \"address_operand\" \"p\"))]\n+ [(set (pc) (match_operand 0 \"address_operand\" \"U\"))]\n   \"\"\n   \"*\n {\n@@ -6136,7 +6264,7 @@\n ;\n \n (define_insn \"casesi_jump\"\n- [(set (pc) (match_operand 0 \"address_operand\" \"p\"))\n+ [(set (pc) (match_operand 0 \"address_operand\" \"U\"))\n    (use (label_ref (match_operand 1 \"\" \"\")))]\n   \"\"\n   \"*\n@@ -6342,7 +6470,7 @@\n    (set_attr \"atype\"    \"agen\")])\n \n (define_insn \"bas_64\"\n-  [(call (mem:QI (match_operand:QI 0 \"address_operand\" \"p\"))\n+  [(call (mem:QI (match_operand:QI 0 \"address_operand\" \"U\"))\n          (match_operand:SI 1 \"const_int_operand\" \"n\"))\n    (clobber (match_operand:DI 2 \"register_operand\" \"=r\"))]\n   \"TARGET_64BIT\"\n@@ -6351,7 +6479,7 @@\n    (set_attr \"type\"    \"jsr\")])\n \n (define_insn \"bas_31\"\n-  [(call (mem:QI (match_operand:QI 0 \"address_operand\" \"p\"))\n+  [(call (mem:QI (match_operand:QI 0 \"address_operand\" \"U\"))\n          (match_operand:SI 1 \"const_int_operand\" \"n\"))\n    (clobber (match_operand:SI 2 \"register_operand\" \"=r\"))]\n   \"!TARGET_64BIT\"\n@@ -6468,7 +6596,7 @@\n \n (define_insn \"bas_r_64\"\n   [(set (match_operand 0 \"register_operand\" \"=df\")\n-        (call (mem:QI (match_operand:QI 1 \"address_operand\" \"p\"))\n+        (call (mem:QI (match_operand:QI 1 \"address_operand\" \"U\"))\n               (match_operand:SI 2 \"const_int_operand\" \"n\")))\n    (clobber (match_operand:DI 3 \"register_operand\" \"=r\"))]\n   \"TARGET_64BIT\"\n@@ -6478,7 +6606,7 @@\n \n (define_insn \"bas_r_31\"\n   [(set (match_operand 0 \"register_operand\" \"=df\")\n-        (call (mem:QI (match_operand:QI 1 \"address_operand\" \"p\"))\n+        (call (mem:QI (match_operand:QI 1 \"address_operand\" \"U\"))\n               (match_operand:SI 2 \"const_int_operand\" \"n\")))\n    (clobber (match_operand:SI 3 \"register_operand\" \"=r\"))]\n   \"!TARGET_64BIT\"\n@@ -6542,13 +6670,15 @@\n   [(set_attr \"op_type\" \"RXE\")])\n \n (define_insn \"*tls_load_31\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=d\")\n-        (unspec:SI [(match_operand:SI 1 \"memory_operand\" \"m\")\n+  [(set (match_operand:SI 0 \"register_operand\" \"=d,d\")\n+        (unspec:SI [(match_operand:SI 1 \"memory_operand\" \"R,T\")\n                     (match_operand:SI 2 \"\" \"\")]\n \t\t   UNSPEC_TLS_LOAD))]\n   \"!TARGET_64BIT\"\n-  \"l\\\\t%0,%1%J2\"\n-  [(set_attr \"op_type\" \"RX\")])\n+  \"@\n+   l\\\\t%0,%1%J2\n+   ly\\\\t%0,%1%J2\"\n+  [(set_attr \"op_type\" \"RX,RXY\")])\n \n (define_expand \"call_value_tls\"\n   [(set (match_operand 0 \"\" \"\")\n@@ -6648,7 +6778,7 @@\n \n (define_insn \"bas_tls_64\"\n   [(set (match_operand 0 \"register_operand\" \"=df\")\n-        (call (mem:QI (match_operand:QI 1 \"address_operand\" \"p\"))\n+        (call (mem:QI (match_operand:QI 1 \"address_operand\" \"U\"))\n               (match_operand:SI 2 \"const_int_operand\" \"n\")))\n    (clobber (match_operand:DI 3 \"register_operand\" \"=r\"))\n    (use (match_operand:DI 4 \"\" \"\"))]\n@@ -6660,7 +6790,7 @@\n \n (define_insn \"bas_tls_31\"\n   [(set (match_operand 0 \"register_operand\" \"=df\")\n-        (call (mem:QI (match_operand:QI 1 \"address_operand\" \"p\"))\n+        (call (mem:QI (match_operand:QI 1 \"address_operand\" \"U\"))\n               (match_operand:SI 2 \"const_int_operand\" \"n\")))\n    (clobber (match_operand:SI 3 \"register_operand\" \"=r\"))\n    (use (match_operand:SI 4 \"\" \"\"))]"}]}