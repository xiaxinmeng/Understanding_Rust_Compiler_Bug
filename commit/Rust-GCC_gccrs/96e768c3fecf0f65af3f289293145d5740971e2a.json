{"sha": "96e768c3fecf0f65af3f289293145d5740971e2a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTZlNzY4YzNmZWNmMGY2NWFmM2YyODkyOTMxNDVkNTc0MDk3MWUyYQ==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2019-01-08T22:33:04Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2019-01-08T22:33:04Z"}, "message": "PR c++/88538 - braced-init-list in template-argument-list.\n\n\t* parser.c (cp_parser_template_argument): Handle braced-init-list when\n\tin C++20.\n\n\t* g++.dg/cpp2a/nontype-class11.C: New test.\n\nFrom-SVN: r267741", "tree": {"sha": "e33dfc612400316353e66c17b2cb536c3aa20a93", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e33dfc612400316353e66c17b2cb536c3aa20a93"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/96e768c3fecf0f65af3f289293145d5740971e2a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96e768c3fecf0f65af3f289293145d5740971e2a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/96e768c3fecf0f65af3f289293145d5740971e2a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96e768c3fecf0f65af3f289293145d5740971e2a/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7e55f2d86830d45cbad7cf19d58e4c675fd20579", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e55f2d86830d45cbad7cf19d58e4c675fd20579", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e55f2d86830d45cbad7cf19d58e4c675fd20579"}], "stats": {"total": 38, "additions": 38, "deletions": 0}, "files": [{"sha": "91465daea613b7d7de17f2466af83ae35afbd2f2", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96e768c3fecf0f65af3f289293145d5740971e2a/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96e768c3fecf0f65af3f289293145d5740971e2a/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=96e768c3fecf0f65af3f289293145d5740971e2a", "patch": "@@ -1,5 +1,9 @@\n 2019-01-08  Marek Polacek  <polacek@redhat.com>\n \n+\tPR c++/88538 - braced-init-list in template-argument-list.\n+\t* parser.c (cp_parser_template_argument): Handle braced-init-list when\n+\tin C++20.\n+\n \tPR c++/88548 - this accepted in static member functions.\n \t* parser.c (cp_debug_parser): Adjust printing of\n \tlocal_variables_forbidden_p."}, {"sha": "f441943dc8e69ba8c3e82658711986eec762c5af", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96e768c3fecf0f65af3f289293145d5740971e2a/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96e768c3fecf0f65af3f289293145d5740971e2a/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=96e768c3fecf0f65af3f289293145d5740971e2a", "patch": "@@ -17026,6 +17026,14 @@ cp_parser_template_argument (cp_parser* parser)\n     argument = cp_parser_constant_expression (parser);\n   else\n     {\n+      /* In C++20, we can encounter a braced-init-list.  */\n+      if (cxx_dialect >= cxx2a\n+\t  && cp_lexer_next_token_is (parser->lexer, CPP_OPEN_BRACE))\n+\t{\n+\t  bool expr_non_constant_p;\n+\t  return cp_parser_braced_list (parser, &expr_non_constant_p);\n+\t}\n+\n       /* With C++17 generalized non-type template arguments we need to handle\n \t lvalue constant expressions, too.  */\n       argument = cp_parser_assignment_expression (parser);"}, {"sha": "f7b37d96ed9bcbb0f60de35fb677e71393726800", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96e768c3fecf0f65af3f289293145d5740971e2a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96e768c3fecf0f65af3f289293145d5740971e2a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=96e768c3fecf0f65af3f289293145d5740971e2a", "patch": "@@ -1,3 +1,8 @@\n+2019-01-08  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/88538 - braced-init-list in template-argument-list.\n+\t* g++.dg/cpp2a/nontype-class11.C: New test.\n+\n 2019-01-08  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/88457"}, {"sha": "8a06d23904b901f0c6b60e50b96b181c9001b50d", "filename": "gcc/testsuite/g++.dg/cpp2a/nontype-class11.C", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96e768c3fecf0f65af3f289293145d5740971e2a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fnontype-class11.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96e768c3fecf0f65af3f289293145d5740971e2a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fnontype-class11.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fnontype-class11.C?ref=96e768c3fecf0f65af3f289293145d5740971e2a", "patch": "@@ -0,0 +1,21 @@\n+// PR c++/88538\n+// { dg-do compile { target c++2a } }\n+\n+struct S {\n+  unsigned a;\n+  unsigned b;\n+  constexpr S(unsigned _a, unsigned _b) noexcept: a{_a}, b{_b} { }\n+};\n+\n+template <S p>\n+void fnc()\n+{\n+}\n+\n+template<S s> struct X { };\n+\n+void f()\n+{\n+  fnc<{10,20}>();\n+  X<{1, 2}> x;\n+}"}]}