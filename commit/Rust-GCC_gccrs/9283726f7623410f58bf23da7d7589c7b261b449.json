{"sha": "9283726f7623410f58bf23da7d7589c7b261b449", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTI4MzcyNmY3NjIzNDEwZjU4YmYyM2RhN2Q3NTg5YzdiMjYxYjQ0OQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2012-07-10T08:24:51Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2012-07-10T08:24:51Z"}, "message": "spu: Rename patterns for vec_widen_<s>mult_even/odd_<mode>\n\n        * config/spu/spu-builtins.md (spu_mpy): Move to spu.md.\n        (spu_mpyu, spu_mpyhhu, spu_mpyhh): Likewise.\n        * config/spu/spu.md (vec_widen_smult_odd_v8hi): Rename from spu_mpy.\n        (vec_widen_umult_odd_v8hi): Rename from spu_mpyu.\n        (vec_widen_smult_even_v8hi): Rename from spu_mpyhh.\n        (vec_widen_umult_even_v8hi): Rename from spu_mpyhhu.\n        * config/spu/spu-builtins.def: Update pattern names to match.\n\nFrom-SVN: r189406", "tree": {"sha": "f1e86a05f5ecf1d574557f3d3d688cdffc81f14d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f1e86a05f5ecf1d574557f3d3d688cdffc81f14d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9283726f7623410f58bf23da7d7589c7b261b449", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9283726f7623410f58bf23da7d7589c7b261b449", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9283726f7623410f58bf23da7d7589c7b261b449", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9283726f7623410f58bf23da7d7589c7b261b449/comments", "author": null, "committer": null, "parents": [{"sha": "2371eaecd58c8f0a6243591c174ed0c8c92d199a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2371eaecd58c8f0a6243591c174ed0c8c92d199a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2371eaecd58c8f0a6243591c174ed0c8c92d199a"}], "stats": {"total": 183, "additions": 95, "deletions": 88}, "files": [{"sha": "89f8a7d321620dce1e55134ecc92a9939446fa1d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9283726f7623410f58bf23da7d7589c7b261b449/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9283726f7623410f58bf23da7d7589c7b261b449/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9283726f7623410f58bf23da7d7589c7b261b449", "patch": "@@ -1,5 +1,13 @@\n 2012-07-10  Richard Henderson  <rth@redhat.com>\n \n+\t* config/spu/spu-builtins.md (spu_mpy): Move to spu.md.\n+\t(spu_mpyu, spu_mpyhhu, spu_mpyhh): Likewise.\n+\t* config/spu/spu.md (vec_widen_smult_odd_v8hi): Rename from spu_mpy.\n+\t(vec_widen_umult_odd_v8hi): Rename from spu_mpyu.\n+\t(vec_widen_smult_even_v8hi): Rename from spu_mpyhh.\n+\t(vec_widen_umult_even_v8hi): Rename from spu_mpyhhu.\n+\t* config/spu/spu-builtins.def: Update pattern names to match.\n+\n \t* config/rs6000/altivec.md (vec_widen_umult_even_v16qi): Rename\n \tfrom altivec_vmuleub.\n \t(vec_widen_smult_even_v16qi): Rename from altivec_vmulesb."}, {"sha": "6095e9cbc3c7642e1421133bf02d01950728fc02", "filename": "gcc/config/spu/spu-builtins.def", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9283726f7623410f58bf23da7d7589c7b261b449/gcc%2Fconfig%2Fspu%2Fspu-builtins.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9283726f7623410f58bf23da7d7589c7b261b449/gcc%2Fconfig%2Fspu%2Fspu-builtins.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fspu%2Fspu-builtins.def?ref=9283726f7623410f58bf23da7d7589c7b261b449", "patch": "@@ -62,15 +62,15 @@ DEF_BUILTIN (SI_SFI,         CODE_FOR_spu_sf,        \"si_sfi\",         B_INSN,\n DEF_BUILTIN (SI_SFX,         CODE_FOR_spu_sfx,       \"si_sfx\",         B_INSN,   _A4(SPU_BTI_QUADWORD, SPU_BTI_QUADWORD, SPU_BTI_QUADWORD, SPU_BTI_QUADWORD))\n DEF_BUILTIN (SI_BG,          CODE_FOR_spu_bg,        \"si_bg\",          B_INSN,   _A3(SPU_BTI_QUADWORD, SPU_BTI_QUADWORD, SPU_BTI_QUADWORD))\n DEF_BUILTIN (SI_BGX,         CODE_FOR_spu_bgx,       \"si_bgx\",         B_INSN,   _A4(SPU_BTI_QUADWORD, SPU_BTI_QUADWORD, SPU_BTI_QUADWORD, SPU_BTI_QUADWORD))\n-DEF_BUILTIN (SI_MPY,         CODE_FOR_spu_mpy,       \"si_mpy\",         B_INSN,   _A3(SPU_BTI_QUADWORD, SPU_BTI_QUADWORD, SPU_BTI_QUADWORD))\n-DEF_BUILTIN (SI_MPYU,        CODE_FOR_spu_mpyu,      \"si_mpyu\",        B_INSN,   _A3(SPU_BTI_QUADWORD, SPU_BTI_QUADWORD, SPU_BTI_QUADWORD))\n-DEF_BUILTIN (SI_MPYI,        CODE_FOR_spu_mpy,       \"si_mpyi\",        B_INSN,   _A3(SPU_BTI_QUADWORD, SPU_BTI_QUADWORD, SPU_BTI_S10))\n-DEF_BUILTIN (SI_MPYUI,       CODE_FOR_spu_mpyu,      \"si_mpyui\",       B_INSN,   _A3(SPU_BTI_QUADWORD, SPU_BTI_QUADWORD, SPU_BTI_S10))\n+DEF_BUILTIN (SI_MPY, CODE_FOR_vec_widen_smult_odd_v8hi, \"si_mpy\",      B_INSN,   _A3(SPU_BTI_QUADWORD, SPU_BTI_QUADWORD, SPU_BTI_QUADWORD))\n+DEF_BUILTIN (SI_MPYU, CODE_FOR_vec_widen_umult_odd_v8hi, \"si_mpyu\",    B_INSN,   _A3(SPU_BTI_QUADWORD, SPU_BTI_QUADWORD, SPU_BTI_QUADWORD))\n+DEF_BUILTIN (SI_MPYI, CODE_FOR_vec_widen_smult_odd_v8hi, \"si_mpyi\",    B_INSN,   _A3(SPU_BTI_QUADWORD, SPU_BTI_QUADWORD, SPU_BTI_S10))\n+DEF_BUILTIN (SI_MPYUI, CODE_FOR_vec_widen_umult_odd_v8hi, \"si_mpyui\",  B_INSN,   _A3(SPU_BTI_QUADWORD, SPU_BTI_QUADWORD, SPU_BTI_S10))\n DEF_BUILTIN (SI_MPYA,        CODE_FOR_spu_mpya,      \"si_mpya\",        B_INSN,   _A4(SPU_BTI_QUADWORD, SPU_BTI_QUADWORD, SPU_BTI_QUADWORD, SPU_BTI_QUADWORD))\n DEF_BUILTIN (SI_MPYH,        CODE_FOR_spu_mpyh,      \"si_mpyh\",        B_INSN,   _A3(SPU_BTI_QUADWORD, SPU_BTI_QUADWORD, SPU_BTI_QUADWORD))\n DEF_BUILTIN (SI_MPYS,        CODE_FOR_spu_mpys,      \"si_mpys\",        B_INSN,   _A3(SPU_BTI_QUADWORD, SPU_BTI_QUADWORD, SPU_BTI_QUADWORD))\n-DEF_BUILTIN (SI_MPYHH,       CODE_FOR_spu_mpyhh,     \"si_mpyhh\",       B_INSN,   _A3(SPU_BTI_QUADWORD, SPU_BTI_QUADWORD, SPU_BTI_QUADWORD))\n-DEF_BUILTIN (SI_MPYHHU,      CODE_FOR_spu_mpyhhu,    \"si_mpyhhu\",      B_INSN,   _A3(SPU_BTI_QUADWORD, SPU_BTI_QUADWORD, SPU_BTI_QUADWORD))\n+DEF_BUILTIN (SI_MPYHH, CODE_FOR_vec_widen_smult_even_v8hi, \"si_mpyhh\", B_INSN,   _A3(SPU_BTI_QUADWORD, SPU_BTI_QUADWORD, SPU_BTI_QUADWORD))\n+DEF_BUILTIN (SI_MPYHHU, CODE_FOR_vec_widen_umult_even_v8hi, \"si_mpyhhu\", B_INSN, _A3(SPU_BTI_QUADWORD, SPU_BTI_QUADWORD, SPU_BTI_QUADWORD))\n DEF_BUILTIN (SI_MPYHHA,      CODE_FOR_spu_mpyhha,    \"si_mpyhha\",      B_INSN,   _A4(SPU_BTI_QUADWORD, SPU_BTI_QUADWORD, SPU_BTI_QUADWORD, SPU_BTI_QUADWORD))\n DEF_BUILTIN (SI_MPYHHAU,     CODE_FOR_spu_mpyhhau,   \"si_mpyhhau\",     B_INSN,   _A4(SPU_BTI_QUADWORD, SPU_BTI_QUADWORD, SPU_BTI_QUADWORD, SPU_BTI_QUADWORD))\n DEF_BUILTIN (SI_CLZ,         CODE_FOR_clzv4si2,      \"si_clz\",         B_INSN,   _A2(SPU_BTI_QUADWORD, SPU_BTI_QUADWORD))\n@@ -295,16 +295,16 @@ DEF_BUILTIN (SPU_MHHADD,           CODE_FOR_nothing,       \"spu_mhhadd\",\n DEF_BUILTIN (SPU_MHHADD_0,         CODE_FOR_spu_mpyhhau,   \"spu_mhhadd_0\",         B_INTERNAL, _A4(SPU_BTI_UV4SI,  SPU_BTI_UV8HI,  SPU_BTI_UV8HI,  SPU_BTI_UV4SI))\n DEF_BUILTIN (SPU_MHHADD_1,         CODE_FOR_spu_mpyhha,    \"spu_mhhadd_1\",         B_INTERNAL, _A4(SPU_BTI_V4SI,   SPU_BTI_V8HI,   SPU_BTI_V8HI,   SPU_BTI_V4SI))\n DEF_BUILTIN (SPU_MULE,             CODE_FOR_nothing,       \"spu_mule\",             B_OVERLOAD, _A1(SPU_BTI_VOID))\n-DEF_BUILTIN (SPU_MULE_0,           CODE_FOR_spu_mpyhhu,    \"spu_mule_0\",           B_INTERNAL, _A3(SPU_BTI_UV4SI,  SPU_BTI_UV8HI,  SPU_BTI_UV8HI))\n-DEF_BUILTIN (SPU_MULE_1,           CODE_FOR_spu_mpyhh,     \"spu_mule_1\",           B_INTERNAL, _A3(SPU_BTI_V4SI,   SPU_BTI_V8HI,   SPU_BTI_V8HI))\n+DEF_BUILTIN (SPU_MULE_0, CODE_FOR_vec_widen_umult_even_v8hi, \"spu_mule_0\",         B_INTERNAL, _A3(SPU_BTI_UV4SI,  SPU_BTI_UV8HI,  SPU_BTI_UV8HI))\n+DEF_BUILTIN (SPU_MULE_1, CODE_FOR_vec_widen_smult_even_v8hi, \"spu_mule_1\",         B_INTERNAL, _A3(SPU_BTI_V4SI,   SPU_BTI_V8HI,   SPU_BTI_V8HI))\n DEF_BUILTIN (SPU_MUL,              CODE_FOR_nothing,       \"spu_mul\",              B_OVERLOAD, _A1(SPU_BTI_VOID))\n DEF_BUILTIN (SPU_MUL_0,            CODE_FOR_mulv4sf3,      \"spu_mul_0\",            B_INTERNAL, _A3(SPU_BTI_V4SF,   SPU_BTI_V4SF,   SPU_BTI_V4SF))\n DEF_BUILTIN (SPU_MUL_1,            CODE_FOR_mulv2df3,      \"spu_mul_1\",            B_INTERNAL, _A3(SPU_BTI_V2DF,   SPU_BTI_V2DF,   SPU_BTI_V2DF))\n DEF_BUILTIN (SPU_MULO,             CODE_FOR_nothing,       \"spu_mulo\",             B_OVERLOAD, _A1(SPU_BTI_VOID))\n-DEF_BUILTIN (SPU_MULO_0,           CODE_FOR_spu_mpy,       \"spu_mulo_0\",           B_INTERNAL, _A3(SPU_BTI_V4SI,   SPU_BTI_V8HI,   SPU_BTI_V8HI))\n-DEF_BUILTIN (SPU_MULO_1,           CODE_FOR_spu_mpyu,      \"spu_mulo_1\",           B_INTERNAL, _A3(SPU_BTI_UV4SI,  SPU_BTI_UV8HI,  SPU_BTI_UV8HI))\n-DEF_BUILTIN (SPU_MULO_2,           CODE_FOR_spu_mpy,       \"spu_mulo_2\",           B_INTERNAL, _A3(SPU_BTI_V4SI,   SPU_BTI_V8HI,   SPU_BTI_INTHI))\n-DEF_BUILTIN (SPU_MULO_3,           CODE_FOR_spu_mpyu,      \"spu_mulo_3\",           B_INTERNAL, _A3(SPU_BTI_UV4SI,  SPU_BTI_UV8HI,  SPU_BTI_UINTHI))\n+DEF_BUILTIN (SPU_MULO_0, CODE_FOR_vec_widen_smult_odd_v8hi, \"spu_mulo_0\",          B_INTERNAL, _A3(SPU_BTI_V4SI,   SPU_BTI_V8HI,   SPU_BTI_V8HI))\n+DEF_BUILTIN (SPU_MULO_1, CODE_FOR_vec_widen_umult_odd_v8hi, \"spu_mulo_1\",          B_INTERNAL, _A3(SPU_BTI_UV4SI,  SPU_BTI_UV8HI,  SPU_BTI_UV8HI))\n+DEF_BUILTIN (SPU_MULO_2, CODE_FOR_vec_widen_smult_odd_v8hi, \"spu_mulo_2\",          B_INTERNAL, _A3(SPU_BTI_V4SI,   SPU_BTI_V8HI,   SPU_BTI_INTHI))\n+DEF_BUILTIN (SPU_MULO_3, CODE_FOR_vec_widen_umult_odd_v8hi, \"spu_mulo_3\",          B_INTERNAL, _A3(SPU_BTI_UV4SI,  SPU_BTI_UV8HI,  SPU_BTI_UINTHI))\n DEF_BUILTIN (SPU_NMSUB,            CODE_FOR_nothing,       \"spu_nmsub\",            B_OVERLOAD, _A1(SPU_BTI_VOID))\n DEF_BUILTIN (SPU_NMSUB_0,          CODE_FOR_fnmav4sf4,     \"spu_nmsub_0\",          B_INTERNAL, _A4(SPU_BTI_V4SF,   SPU_BTI_V4SF,   SPU_BTI_V4SF,   SPU_BTI_V4SF))\n DEF_BUILTIN (SPU_NMSUB_1,          CODE_FOR_nfmsv2df4,     \"spu_nmsub_1\",          B_INTERNAL, _A4(SPU_BTI_V2DF,   SPU_BTI_V2DF,   SPU_BTI_V2DF,   SPU_BTI_V2DF))"}, {"sha": "6f7baadb2951d24e6d547eb821a1edf7f29d90bf", "filename": "gcc/config/spu/spu-builtins.md", "status": "modified", "additions": 0, "deletions": 65, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9283726f7623410f58bf23da7d7589c7b261b449/gcc%2Fconfig%2Fspu%2Fspu-builtins.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9283726f7623410f58bf23da7d7589c7b261b449/gcc%2Fconfig%2Fspu%2Fspu-builtins.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fspu%2Fspu-builtins.md?ref=9283726f7623410f58bf23da7d7589c7b261b449", "patch": "@@ -197,41 +197,6 @@\n   \"\"\n   \"\")\n \n-;; integer multiply\n-(define_insn \"spu_mpy\"\n-  [(set (match_operand:V4SI 0 \"spu_reg_operand\" \"=r,r\")\n-        (mult:V4SI\n-\t  (sign_extend:V4SI\n-\t    (vec_select:V4HI\n-\t      (match_operand:V8HI 1 \"spu_reg_operand\" \"r,r\")\n-\t      (parallel [(const_int 1)(const_int 3)(const_int 5)(const_int 7)])))\n-          (sign_extend:V4SI\n-\t    (vec_select:V4HI\n-\t      (match_operand:V8HI 2 \"spu_arith_operand\" \"r,B\")\n-\t      (parallel [(const_int 1)(const_int 3)(const_int 5)(const_int 7)])))))]\n-  \"\"\n-  \"@\n-   mpy\\t%0,%1,%2\n-   mpyi\\t%0,%1,%2\"\n-  [(set_attr \"type\" \"fp7\")])\n-\n-(define_insn \"spu_mpyu\"\n-  [(set (match_operand:V4SI 0 \"spu_reg_operand\" \"=r,r\")\n-        (mult:V4SI\n-\t  (zero_extend:V4SI\n-\t    (vec_select:V4HI\n-\t      (match_operand:V8HI 1 \"spu_reg_operand\" \"r,r\")\n-\t      (parallel [(const_int 1)(const_int 3)(const_int 5)(const_int 7)])))\n-          (zero_extend:V4SI\n-\t    (vec_select:V4HI\n-\t      (match_operand:V8HI 2 \"spu_arith_operand\" \"r,B\")\n-\t      (parallel [(const_int 1)(const_int 3)(const_int 5)(const_int 7)])))))]\n-  \"\"\n-  \"@\n-   mpyu\\t%0,%1,%2\n-   mpyui\\t%0,%1,%2\"\n-  [(set_attr \"type\" \"fp7\")])\n-\n (define_insn \"spu_mpya\"\n   [(set (match_operand:V4SI 0 \"spu_reg_operand\" \"=r\")\n         (plus:V4SI\n@@ -283,36 +248,6 @@\n   \"mpys\\t%0,%1,%2\"\n   [(set_attr \"type\" \"fp7\")])\n \n-(define_insn \"spu_mpyhhu\"\n-  [(set (match_operand:V4SI 0 \"spu_reg_operand\" \"=r\")\n-\t(mult:V4SI\n-\t  (zero_extend:V4SI\n-\t    (vec_select:V4HI\n-\t      (match_operand:V8HI 1 \"spu_reg_operand\" \"r\")\n-\t      (parallel [(const_int 0)(const_int 2)(const_int 4)(const_int 6)])))\n-\t  (zero_extend:V4SI\n-\t    (vec_select:V4HI\n-\t      (match_operand:V8HI 2 \"spu_reg_operand\" \"r\")\n-\t      (parallel [(const_int 0)(const_int 2)(const_int 4)(const_int 6)])))))]\n-  \"\"\n-  \"mpyhhu\\t%0,%1,%2\"\n-  [(set_attr \"type\" \"fp7\")])\n-\n-(define_insn \"spu_mpyhh\"\n-  [(set (match_operand:V4SI 0 \"spu_reg_operand\" \"=r\")\n-\t(mult:V4SI\n-\t  (sign_extend:V4SI\n-\t    (vec_select:V4HI\n-\t      (match_operand:V8HI 1 \"spu_reg_operand\" \"r\")\n-\t      (parallel [(const_int 0)(const_int 2)(const_int 4)(const_int 6)])))\n-\t  (sign_extend:V4SI\n-\t    (vec_select:V4HI\n-\t      (match_operand:V8HI 2 \"spu_reg_operand\" \"r\")\n-\t      (parallel [(const_int 0)(const_int 2)(const_int 4)(const_int 6)])))))]\n-  \"\"\n-  \"mpyhh\\t%0,%1,%2\"\n-  [(set_attr \"type\" \"fp7\")])\n-\n (define_insn \"spu_mpyhhau\"\n   [(set (match_operand:V4SI 0 \"spu_reg_operand\" \"=r\")\n         (plus:V4SI"}, {"sha": "ee5fced6665c39589c089727ddddfc24b1640750", "filename": "gcc/config/spu/spu.md", "status": "modified", "additions": 75, "deletions": 11, "changes": 86, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9283726f7623410f58bf23da7d7589c7b261b449/gcc%2Fconfig%2Fspu%2Fspu.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9283726f7623410f58bf23da7d7589c7b261b449/gcc%2Fconfig%2Fspu%2Fspu.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fspu%2Fspu.md?ref=9283726f7623410f58bf23da7d7589c7b261b449", "patch": "@@ -1387,8 +1387,8 @@\n     rtx mask = gen_reg_rtx (V4SImode);\n \n     emit_move_insn (mask, spu_const (V4SImode, 0x0000ffff));\n-    emit_insn (gen_spu_mpyhh (high, operands[1], operands[2]));\n-    emit_insn (gen_spu_mpy (low, operands[1], operands[2]));\n+    emit_insn (gen_vec_widen_smult_even_v8hi (high, operands[1], operands[2]));\n+    emit_insn (gen_vec_widen_smult_odd_v8hi (low, operands[1], operands[2]));\n     emit_insn (gen_vashlv4si3 (shift, high, spu_const(V4SImode, 16)));\n     emit_insn (gen_selb (result, shift, low, mask));\n     DONE;\n@@ -1482,7 +1482,7 @@\n     rtx op2 = simplify_gen_subreg (V8HImode, operands[2], V4SImode, 0);\n     emit_insn (gen_spu_mpyh(a, op1, op2));\n     emit_insn (gen_spu_mpyh(b, op2, op1));\n-    emit_insn (gen_spu_mpyu(c, op1, op2));\n+    emit_insn (gen_vec_widen_umult_odd_v8hi (c, op1, op2));\n     emit_insn (gen_addv4si3(d, a, b));\n     emit_insn (gen_addv4si3(operands[0], d, c));\n     DONE;\n@@ -4612,6 +4612,70 @@ selb\\t%0,%4,%0,%3\"\n   DONE;\n }\")\n \n+(define_insn \"vec_widen_smult_odd_v8hi\"\n+  [(set (match_operand:V4SI 0 \"spu_reg_operand\" \"=r,r\")\n+        (mult:V4SI\n+\t  (sign_extend:V4SI\n+\t    (vec_select:V4HI\n+\t      (match_operand:V8HI 1 \"spu_reg_operand\" \"r,r\")\n+\t      (parallel [(const_int 1)(const_int 3)(const_int 5)(const_int 7)])))\n+          (sign_extend:V4SI\n+\t    (vec_select:V4HI\n+\t      (match_operand:V8HI 2 \"spu_arith_operand\" \"r,B\")\n+\t      (parallel [(const_int 1)(const_int 3)(const_int 5)(const_int 7)])))))]\n+  \"\"\n+  \"@\n+   mpy\\t%0,%1,%2\n+   mpyi\\t%0,%1,%2\"\n+  [(set_attr \"type\" \"fp7\")])\n+\n+(define_insn \"vec_widen_umult_odd_v8hi\"\n+  [(set (match_operand:V4SI 0 \"spu_reg_operand\" \"=r,r\")\n+        (mult:V4SI\n+\t  (zero_extend:V4SI\n+\t    (vec_select:V4HI\n+\t      (match_operand:V8HI 1 \"spu_reg_operand\" \"r,r\")\n+\t      (parallel [(const_int 1)(const_int 3)(const_int 5)(const_int 7)])))\n+          (zero_extend:V4SI\n+\t    (vec_select:V4HI\n+\t      (match_operand:V8HI 2 \"spu_arith_operand\" \"r,B\")\n+\t      (parallel [(const_int 1)(const_int 3)(const_int 5)(const_int 7)])))))]\n+  \"\"\n+  \"@\n+   mpyu\\t%0,%1,%2\n+   mpyui\\t%0,%1,%2\"\n+  [(set_attr \"type\" \"fp7\")])\n+\n+(define_insn \"vec_widen_smult_even_v8hi\"\n+  [(set (match_operand:V4SI 0 \"spu_reg_operand\" \"=r\")\n+\t(mult:V4SI\n+\t  (sign_extend:V4SI\n+\t    (vec_select:V4HI\n+\t      (match_operand:V8HI 1 \"spu_reg_operand\" \"r\")\n+\t      (parallel [(const_int 0)(const_int 2)(const_int 4)(const_int 6)])))\n+\t  (sign_extend:V4SI\n+\t    (vec_select:V4HI\n+\t      (match_operand:V8HI 2 \"spu_reg_operand\" \"r\")\n+\t      (parallel [(const_int 0)(const_int 2)(const_int 4)(const_int 6)])))))]\n+  \"\"\n+  \"mpyhh\\t%0,%1,%2\"\n+  [(set_attr \"type\" \"fp7\")])\n+\n+(define_insn \"vec_widen_umult_even_v8hi\"\n+  [(set (match_operand:V4SI 0 \"spu_reg_operand\" \"=r\")\n+\t(mult:V4SI\n+\t  (zero_extend:V4SI\n+\t    (vec_select:V4HI\n+\t      (match_operand:V8HI 1 \"spu_reg_operand\" \"r\")\n+\t      (parallel [(const_int 0)(const_int 2)(const_int 4)(const_int 6)])))\n+\t  (zero_extend:V4SI\n+\t    (vec_select:V4HI\n+\t      (match_operand:V8HI 2 \"spu_reg_operand\" \"r\")\n+\t      (parallel [(const_int 0)(const_int 2)(const_int 4)(const_int 6)])))))]\n+  \"\"\n+  \"mpyhhu\\t%0,%1,%2\"\n+  [(set_attr \"type\" \"fp7\")])\n+\n (define_expand \"vec_widen_umult_hi_v8hi\"\n   [(set (match_operand:V4SI 0 \"register_operand\"   \"=r\")\n         (mult:V4SI\n@@ -4634,8 +4698,8 @@ selb\\t%0,%4,%0,%3\"\n     0x04, 0x05, 0x06, 0x07, 0x14, 0x15, 0x16, 0x17};\n   \n   emit_move_insn (mask, array_to_constant (TImode, arr));\n-  emit_insn (gen_spu_mpyhhu (ve, operands[1], operands[2]));\n-  emit_insn (gen_spu_mpyu (vo, operands[1], operands[2]));\n+  emit_insn (gen_vec_widen_umult_even_v8hi (ve, operands[1], operands[2]));\n+  emit_insn (gen_vec_widen_umult_odd_v8hi (vo, operands[1], operands[2]));\n   emit_insn (gen_shufb (operands[0], ve, vo, mask));\n   DONE;\n }\")\n@@ -4662,8 +4726,8 @@ selb\\t%0,%4,%0,%3\"\n     0x0C, 0x0D, 0x0E, 0x0F, 0x1C, 0x1D, 0x1E, 0x1F};\n \n   emit_move_insn (mask, array_to_constant (TImode, arr));\n-  emit_insn (gen_spu_mpyhhu (ve, operands[1], operands[2]));\n-  emit_insn (gen_spu_mpyu (vo, operands[1], operands[2]));\n+  emit_insn (gen_vec_widen_umult_even_v8hi (ve, operands[1], operands[2]));\n+  emit_insn (gen_vec_widen_umult_odd_v8hi (vo, operands[1], operands[2]));\n   emit_insn (gen_shufb (operands[0], ve, vo, mask));\n   DONE;\n }\")\n@@ -4690,8 +4754,8 @@ selb\\t%0,%4,%0,%3\"\n     0x04, 0x05, 0x06, 0x07, 0x14, 0x15, 0x16, 0x17};\n   \n   emit_move_insn (mask, array_to_constant (TImode, arr));\n-  emit_insn (gen_spu_mpyhh (ve, operands[1], operands[2]));\n-  emit_insn (gen_spu_mpy (vo, operands[1], operands[2]));\n+  emit_insn (gen_vec_widen_smult_even_v8hi (ve, operands[1], operands[2]));\n+  emit_insn (gen_vec_widen_smult_odd_v8hi (vo, operands[1], operands[2]));\n   emit_insn (gen_shufb (operands[0], ve, vo, mask));\n   DONE;\n }\")\n@@ -4718,8 +4782,8 @@ selb\\t%0,%4,%0,%3\"\n     0x0C, 0x0D, 0x0E, 0x0F, 0x1C, 0x1D, 0x1E, 0x1F};\n \n   emit_move_insn (mask, array_to_constant (TImode, arr));\n-  emit_insn (gen_spu_mpyhh (ve, operands[1], operands[2]));\n-  emit_insn (gen_spu_mpy (vo, operands[1], operands[2]));\n+  emit_insn (gen_vec_widen_smult_even_v8hi (ve, operands[1], operands[2]));\n+  emit_insn (gen_vec_widen_smult_odd_v8hi (vo, operands[1], operands[2]));\n   emit_insn (gen_shufb (operands[0], ve, vo, mask));\n   DONE;\n }\")"}]}