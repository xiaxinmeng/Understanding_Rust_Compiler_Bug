{"sha": "3a9db91bee496712656e0f8aecf55f39cffd8413", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2E5ZGI5MWJlZTQ5NjcxMjY1NmUwZjhhZWNmNTVmMzljZmZkODQxMw==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-03-30T15:49:10Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-03-30T15:49:10Z"}, "message": "Fix scan pattern of vect-8.f90 dump.\n\n\tPR testsuite/94402\n\t* gfortran.dg/vect/vect-8.f90: Allow 22 or 23 loops\n\tto be vectorized (based on libmvec presence).", "tree": {"sha": "d43caa1d9b4882932db5fd170fa41b8df36a6457", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d43caa1d9b4882932db5fd170fa41b8df36a6457"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3a9db91bee496712656e0f8aecf55f39cffd8413", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEE6I4wzqqylQBfXaRhTcGC3A+nN4UFAl6CFPYACgkQTcGC3A+n\nN4UskAf5AVeduzvPzj8tqDVKFkwKCfilq6gsWPm87idWn8sJry5w7ZssetM24AWQ\nrvpIzNrZIRBUyCikF48B58FHT08vGrgR+fbIOWz1rlQFe7QKBwhfm4oyyZWv31Ui\nhIhssR0p78FKFweYNb1R392Shp6fL3tTnf8dP9YY/i0EWkoxXZmOkwmqfoHScKeX\nAkRYtx98HSodyYJ7pXEbOCjVAt8nv5sCtjBFupIJZjNO5LLDUhWc0mB+UvMF2xEa\nVOfWm5CTcZiPBkHZGybki0UyadJ+9VSfqlI0wMEat72qU3bI7Y9PkWC/WmM1Ly/J\n6AcIckjqMKjqcDsPSipRBO6EhuExUw==\n=v7rR\n-----END PGP SIGNATURE-----", "payload": "tree d43caa1d9b4882932db5fd170fa41b8df36a6457\nparent ec919cfcef8d7fcbaab24d0e0d472c65e5329ca6\nauthor Martin Liska <mliska@suse.cz> 1585583350 +0200\ncommitter Martin Liska <mliska@suse.cz> 1585583350 +0200\n\nFix scan pattern of vect-8.f90 dump.\n\n\tPR testsuite/94402\n\t* gfortran.dg/vect/vect-8.f90: Allow 22 or 23 loops\n\tto be vectorized (based on libmvec presence).\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a9db91bee496712656e0f8aecf55f39cffd8413", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a9db91bee496712656e0f8aecf55f39cffd8413", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a9db91bee496712656e0f8aecf55f39cffd8413/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ec919cfcef8d7fcbaab24d0e0d472c65e5329ca6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec919cfcef8d7fcbaab24d0e0d472c65e5329ca6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec919cfcef8d7fcbaab24d0e0d472c65e5329ca6"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "4b4cd0780fd97825de632db4da59050b7332174b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a9db91bee496712656e0f8aecf55f39cffd8413/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a9db91bee496712656e0f8aecf55f39cffd8413/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3a9db91bee496712656e0f8aecf55f39cffd8413", "patch": "@@ -1,3 +1,9 @@\n+2020-03-30  Martin Liska  <mliska@suse.cz>\n+\n+\tPR testsuite/94402\n+\t* gfortran.dg/vect/vect-8.f90: Allow 22 or 23 loops\n+\tto be vectorized (based on libmvec presence).\n+\n 2020-03-30  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/93069"}, {"sha": "b10c4fc0a97b11f51793be9bb3b819daed528927", "filename": "gcc/testsuite/gfortran.dg/vect/vect-8.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a9db91bee496712656e0f8aecf55f39cffd8413/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Fvect-8.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a9db91bee496712656e0f8aecf55f39cffd8413/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Fvect-8.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Fvect-8.f90?ref=3a9db91bee496712656e0f8aecf55f39cffd8413", "patch": "@@ -705,5 +705,5 @@ SUBROUTINE kernel(tk)\n END SUBROUTINE kernel\n \n ! { dg-final { scan-tree-dump-times \"vectorized 23 loops\" 1 \"vect\" { target aarch64*-*-* } } }\n-! { dg-final { scan-tree-dump-times \"vectorized 22 loops\" 1 \"vect\" { target { vect_intdouble_cvt && { ! aarch64*-*-* } } } } }\n+! { dg-final { scan-tree-dump-times \"vectorized 2\\[23\\] loops\" 1 \"vect\" { target { vect_intdouble_cvt && { ! aarch64*-*-* } } } } }\n ! { dg-final { scan-tree-dump-times \"vectorized 17 loops\" 1 \"vect\" { target { { ! vect_intdouble_cvt } && { ! aarch64*-*-* } } } } }"}]}