{"sha": "3c16e99cf7731729290b96af4ec3b4fe6c68b63a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2MxNmU5OWNmNzczMTcyOTI5MGI5NmFmNGVjM2I0ZmU2YzY4YjYzYQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2017-09-20T12:08:16Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2017-09-20T12:08:16Z"}, "message": "re PR tree-optimization/80213 (ICE in check_loop_closed_ssa_use, at tree-ssa-loop-manip.c:704)\n\n2017-09-20  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/80213\n\t* graphite-scop-detection.c (trivially_empty_bb_p): Labels\n\tare allowed in empty BBs as well.\n\t(canonicalize_loop_closed_ssa): Also look for other complex\n\tedges.\n\t(scop_detection::get_sese): Include the loop-closed PHI block\n\tin loop SESEs.\n\t(scop_detection::merge_sese): Remove code adding extra blocks.\n\t(scop_detection::region_has_one_loop): Adjust for get_sese changes.\n\t(build_scops): Assert the final returned scop is invalid.\n\nFrom-SVN: r253008", "tree": {"sha": "80b438289e9600ac8fa92e0d6c21f8d3bf1baa18", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/80b438289e9600ac8fa92e0d6c21f8d3bf1baa18"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3c16e99cf7731729290b96af4ec3b4fe6c68b63a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c16e99cf7731729290b96af4ec3b4fe6c68b63a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c16e99cf7731729290b96af4ec3b4fe6c68b63a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c16e99cf7731729290b96af4ec3b4fe6c68b63a/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "52e22c79dce498a3195bc8501fa54787a642067c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52e22c79dce498a3195bc8501fa54787a642067c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/52e22c79dce498a3195bc8501fa54787a642067c"}], "stats": {"total": 64, "additions": 34, "deletions": 30}, "files": [{"sha": "3ee9ea19e03d2a1991d79a5f46125efb4511aba9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c16e99cf7731729290b96af4ec3b4fe6c68b63a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c16e99cf7731729290b96af4ec3b4fe6c68b63a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3c16e99cf7731729290b96af4ec3b4fe6c68b63a", "patch": "@@ -1,3 +1,16 @@\n+2017-09-20  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/80213\n+\t* graphite-scop-detection.c (trivially_empty_bb_p): Labels\n+\tare allowed in empty BBs as well.\n+\t(canonicalize_loop_closed_ssa): Also look for other complex\n+\tedges.\n+\t(scop_detection::get_sese): Include the loop-closed PHI block\n+\tin loop SESEs.\n+\t(scop_detection::merge_sese): Remove code adding extra blocks.\n+\t(scop_detection::region_has_one_loop): Adjust for get_sese changes.\n+\t(build_scops): Assert the final returned scop is invalid.\n+\n 2017-09-20  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/82264"}, {"sha": "68e86ec7967860d790e24431ad33136a3fe46b51", "filename": "gcc/graphite-scop-detection.c", "status": "modified", "additions": 21, "deletions": 30, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c16e99cf7731729290b96af4ec3b4fe6c68b63a/gcc%2Fgraphite-scop-detection.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c16e99cf7731729290b96af4ec3b4fe6c68b63a/gcc%2Fgraphite-scop-detection.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-scop-detection.c?ref=3c16e99cf7731729290b96af4ec3b4fe6c68b63a", "patch": "@@ -261,7 +261,8 @@ trivially_empty_bb_p (basic_block bb)\n   gimple_stmt_iterator gsi;\n \n   for (gsi = gsi_start_bb (bb); !gsi_end_p (gsi); gsi_next (&gsi))\n-    if (gimple_code (gsi_stmt (gsi)) != GIMPLE_DEBUG)\n+    if (gimple_code (gsi_stmt (gsi)) != GIMPLE_DEBUG\n+\t&& gimple_code (gsi_stmt (gsi)) != GIMPLE_LABEL)\n       return false;\n \n   return true;\n@@ -355,7 +356,7 @@ canonicalize_loop_closed_ssa (loop_p loop)\n   edge e = single_exit (loop);\n   basic_block bb;\n \n-  if (!e || e->flags & EDGE_ABNORMAL)\n+  if (!e || (e->flags & EDGE_COMPLEX))\n     return;\n \n   bb = e->dest;\n@@ -674,14 +675,19 @@ scop_detection::get_sese (loop_p loop)\n   if (!loop)\n     return invalid_sese;\n \n-  if (!loops_state_satisfies_p (LOOPS_HAVE_PREHEADERS))\n-    return invalid_sese;\n+  edge scop_begin = loop_preheader_edge (loop);\n   edge scop_end = single_exit (loop);\n-  if (!scop_end)\n+  if (!scop_end || (scop_end->flags & EDGE_COMPLEX))\n     return invalid_sese;\n-  edge scop_begin = loop_preheader_edge (loop);\n-  sese_l s (scop_begin, scop_end);\n-  return s;\n+  /* Include the BB with the loop-closed SSA PHI nodes.\n+     canonicalize_loop_closed_ssa makes sure that is in proper shape.  */\n+  if (! single_pred_p (scop_end->dest)\n+      || ! single_succ_p (scop_end->dest)\n+      || ! trivially_empty_bb_p (scop_end->dest))\n+    gcc_unreachable ();\n+  scop_end = single_succ_edge (scop_end->dest);\n+\n+  return sese_l (scop_begin, scop_end);\n }\n \n /* Return the closest dominator with a single entry edge.  */\n@@ -848,26 +854,6 @@ scop_detection::merge_sese (sese_l first, sese_l second) const\n       return invalid_sese;\n     }\n \n-  /* FIXME: We should remove this piece of code once\n-     canonicalize_loop_closed_ssa has been removed, because that function\n-     adds a BB with single exit.  */\n-  if (!trivially_empty_bb_p (get_exit_bb (combined)))\n-    {\n-      /* Find the first empty succ (with single exit) of combined.exit.  */\n-      basic_block imm_succ = combined.exit->dest;\n-      if (single_succ_p (imm_succ)\n-\t  && single_pred_p (imm_succ)\n-\t  && trivially_empty_bb_p (imm_succ))\n-\tcombined.exit = single_succ_edge (imm_succ);\n-      else\n-\t{\n-\t  DEBUG_PRINT (dp << \"[scop-detection-fail] Discarding SCoP because \"\n-\t\t\t  << \"no single exit (empty succ) for sese exit\";\n-\t\t       print_sese (dump_file, combined));\n-\t  return invalid_sese;\n-\t}\n-    }\n-\n   /* Analyze all the BBs in new sese.  */\n   if (harmful_loop_in_region (combined))\n     return invalid_sese;\n@@ -1027,7 +1013,8 @@ scop_detection::region_has_one_loop (sese_l s)\n     return false;\n \n   /* Otherwise, check whether we have adjacent loops.  */\n-  return begin->dest->loop_father == end->src->loop_father;\n+  return (single_pred_p (end->src)\n+\t  && begin->dest->loop_father == single_pred (end->src)->loop_father);\n }\n \n /* Add to SCOPS a scop starting at SCOP_BEGIN and ending at SCOP_END.  */\n@@ -2053,8 +2040,12 @@ build_scops (vec<scop_p> *scops)\n \n   canonicalize_loop_closed_ssa_form ();\n \n+  /* ???  We walk the loop tree assuming loop->next is ordered.\n+     This is not so but we'd be free to order it here.  */\n   scop_detection sb;\n-  sb.build_scop_depth (scop_detection::invalid_sese, current_loops->tree_root);\n+  sese_l tem = sb.build_scop_depth (scop_detection::invalid_sese,\n+\t\t\t\t    current_loops->tree_root);\n+  gcc_assert (! tem);\n \n   /* Now create scops from the lightweight SESEs.  */\n   vec<sese_l> scops_l = sb.get_scops ();"}]}