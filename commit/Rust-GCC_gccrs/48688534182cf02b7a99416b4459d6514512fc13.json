{"sha": "48688534182cf02b7a99416b4459d6514512fc13", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDg2ODg1MzQxODJjZjAyYjdhOTk0MTZiNDQ1OWQ2NTE0NTEyZmMxMw==", "commit": {"author": {"name": "Hristian Kirtchev", "email": "kirtchev@adacore.com", "date": "2018-05-23T10:22:25Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-05-23T10:22:25Z"}, "message": "[Ada] Suppression of elaboration-related warnings\n\nThis patch modifies the effects of pragma Warnings (Off, ...) to suppress\nelaboration warnings related to an entity.\n\n2018-05-23  Hristian Kirtchev  <kirtchev@adacore.com>\n\ngcc/ada/\n\n\t* einfo.adb (Is_Elaboration_Checks_OK_Id): Use predicate\n\tIs_Elaboration_Target.\n\t(Is_Elaboration_Target): New routine.\n\t(Is_Elaboration_Warnings_OK_Id): Use predicate Is_Elaboration_Target.\n\t(Set_Is_Elaboration_Checks_OK_Id): Use predicate Is_Elaboration_Target.\n\t(Set_Is_Elaboration_Warnings_OK_Id): Use predicate\n\tIs_Elaboration_Target.\n\t* einfo.ads: Add new synthesized attribute Is_Elaboration_Target along\n\twith occurrences in nodes.\n\t(Is_Elaboration_Target): New routine.\n\t* sem_prag.adb (Analyze_Pragma): Suppress elaboration warnings when an\n\telaboration target is subject to pragma Warnings (Off, ...).\n\ngcc/testsuite/\n\n\t* gnat.dg/elab5.adb, gnat.dg/elab5_pkg.adb, gnat.dg/elab5_pkg.ads: New\n\ttestcase.\n\nFrom-SVN: r260580", "tree": {"sha": "35436d54ca20dffa4a5295ffd4279151abd753e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/35436d54ca20dffa4a5295ffd4279151abd753e5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/48688534182cf02b7a99416b4459d6514512fc13", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48688534182cf02b7a99416b4459d6514512fc13", "html_url": "https://github.com/Rust-GCC/gccrs/commit/48688534182cf02b7a99416b4459d6514512fc13", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48688534182cf02b7a99416b4459d6514512fc13/comments", "author": {"login": "kirtchev-adacore", "id": 60669983, "node_id": "MDQ6VXNlcjYwNjY5OTgz", "avatar_url": "https://avatars.githubusercontent.com/u/60669983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kirtchev-adacore", "html_url": "https://github.com/kirtchev-adacore", "followers_url": "https://api.github.com/users/kirtchev-adacore/followers", "following_url": "https://api.github.com/users/kirtchev-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/kirtchev-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/kirtchev-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kirtchev-adacore/subscriptions", "organizations_url": "https://api.github.com/users/kirtchev-adacore/orgs", "repos_url": "https://api.github.com/users/kirtchev-adacore/repos", "events_url": "https://api.github.com/users/kirtchev-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/kirtchev-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6e6e00ffd2e588af096ea00e8ae9576efd1d1e49", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e6e00ffd2e588af096ea00e8ae9576efd1d1e49", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e6e00ffd2e588af096ea00e8ae9576efd1d1e49"}], "stats": {"total": 259, "additions": 234, "deletions": 25}, "files": [{"sha": "cfe3b82cc6625943e18392272254e92d2bdf8ee7", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48688534182cf02b7a99416b4459d6514512fc13/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48688534182cf02b7a99416b4459d6514512fc13/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=48688534182cf02b7a99416b4459d6514512fc13", "patch": "@@ -1,3 +1,18 @@\n+2018-05-23  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* einfo.adb (Is_Elaboration_Checks_OK_Id): Use predicate\n+\tIs_Elaboration_Target.\n+\t(Is_Elaboration_Target): New routine.\n+\t(Is_Elaboration_Warnings_OK_Id): Use predicate Is_Elaboration_Target.\n+\t(Set_Is_Elaboration_Checks_OK_Id): Use predicate Is_Elaboration_Target.\n+\t(Set_Is_Elaboration_Warnings_OK_Id): Use predicate\n+\tIs_Elaboration_Target.\n+\t* einfo.ads: Add new synthesized attribute Is_Elaboration_Target along\n+\twith occurrences in nodes.\n+\t(Is_Elaboration_Target): New routine.\n+\t* sem_prag.adb (Analyze_Pragma): Suppress elaboration warnings when an\n+\telaboration target is subject to pragma Warnings (Off, ...).\n+\n 2018-05-23  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* repinfo.adb (List_Type_Info): Remove obsolete stuff."}, {"sha": "6d5c7eace85b7ebb64d4ee45fd22bc6250b90971", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 18, "deletions": 24, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48688534182cf02b7a99416b4459d6514512fc13/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48688534182cf02b7a99416b4459d6514512fc13/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=48688534182cf02b7a99416b4459d6514512fc13", "patch": "@@ -2253,23 +2253,13 @@ package body Einfo is\n \n    function Is_Elaboration_Checks_OK_Id (Id : E) return B is\n    begin\n-      pragma Assert\n-        (Ekind_In (Id, E_Constant, E_Variable)\n-          or else Is_Entry (Id)\n-          or else Is_Generic_Unit (Id)\n-          or else Is_Subprogram (Id)\n-          or else Is_Task_Type (Id));\n+      pragma Assert (Is_Elaboration_Target (Id));\n       return Flag148 (Id);\n    end Is_Elaboration_Checks_OK_Id;\n \n    function Is_Elaboration_Warnings_OK_Id (Id : E) return B is\n    begin\n-      pragma Assert\n-        (Ekind_In (Id, E_Constant, E_Variable, E_Void)\n-          or else Is_Entry (Id)\n-          or else Is_Generic_Unit (Id)\n-          or else Is_Subprogram (Id)\n-          or else Is_Task_Type (Id));\n+      pragma Assert (Is_Elaboration_Target (Id) or else Ekind (Id) = E_Void);\n       return Flag304 (Id);\n    end Is_Elaboration_Warnings_OK_Id;\n \n@@ -5478,23 +5468,13 @@ package body Einfo is\n \n    procedure Set_Is_Elaboration_Checks_OK_Id (Id : E; V : B := True) is\n    begin\n-      pragma Assert\n-        (Ekind_In (Id, E_Constant, E_Variable)\n-          or else Is_Entry (Id)\n-          or else Is_Generic_Unit (Id)\n-          or else Is_Subprogram (Id)\n-          or else Is_Task_Type (Id));\n+      pragma Assert (Is_Elaboration_Target (Id));\n       Set_Flag148 (Id, V);\n    end Set_Is_Elaboration_Checks_OK_Id;\n \n    procedure Set_Is_Elaboration_Warnings_OK_Id (Id : E; V : B := True) is\n    begin\n-      pragma Assert\n-        (Ekind_In (Id, E_Constant, E_Variable)\n-          or else Is_Entry (Id)\n-          or else Is_Generic_Unit (Id)\n-          or else Is_Subprogram (Id)\n-          or else Is_Task_Type (Id));\n+      pragma Assert (Is_Elaboration_Target (Id));\n       Set_Flag304 (Id, V);\n    end Set_Is_Elaboration_Warnings_OK_Id;\n \n@@ -8112,6 +8092,20 @@ package body Einfo is\n                   and then Is_Entity_Attribute_Name (Attribute_Name (N)));\n    end Is_Entity_Name;\n \n+   ---------------------------\n+   -- Is_Elaboration_Target --\n+   ---------------------------\n+\n+   function Is_Elaboration_Target (Id : Entity_Id) return Boolean is\n+   begin\n+      return\n+        Ekind_In (Id, E_Constant, E_Variable)\n+          or else Is_Entry        (Id)\n+          or else Is_Generic_Unit (Id)\n+          or else Is_Subprogram   (Id)\n+          or else Is_Task_Type    (Id);\n+   end Is_Elaboration_Target;\n+\n    -----------------------\n    -- Is_External_State --\n    -----------------------"}, {"sha": "7f8f0e212724f845c6b0bb1dbdaebc04175b6e33", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48688534182cf02b7a99416b4459d6514512fc13/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48688534182cf02b7a99416b4459d6514512fc13/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=48688534182cf02b7a99416b4459d6514512fc13", "patch": "@@ -2522,12 +2522,16 @@ package Einfo is\n --       checks. Such targets are allowed to generate run-time conditional ABE\n --       checks or guaranteed ABE failures.\n \n+--    Is_Elaboration_Target (synthesized)\n+--       Applies to all entities, True only for elaboration targets (see the\n+--       terminology in Sem_Elab).\n+\n --    Is_Elaboration_Warnings_OK_Id (Flag304)\n --       Defined in elaboration targets (see terminology in Sem_Elab). Set when\n --       the target appears in a region with elaboration warnings enabled.\n \n --    Is_Elementary_Type (synthesized)\n---       Applies to all entities, true for all elementary types and subtypes.\n+--       Applies to all entities, True for all elementary types and subtypes.\n --       Either Is_Composite_Type or Is_Elementary_Type (but not both) is true\n --       of any type.\n \n@@ -5971,6 +5975,7 @@ package Einfo is\n    --    Address_Clause                      (synth)\n    --    Alignment_Clause                    (synth)\n    --    Is_Atomic_Or_VFA                    (synth)\n+   --    Is_Elaboration_Target               (synth)\n    --    Size_Clause                         (synth)\n \n    --  E_Decimal_Fixed_Point_Type\n@@ -6041,6 +6046,7 @@ package Einfo is\n    --    Entry_Index_Type                    (synth)\n    --    First_Formal                        (synth)\n    --    First_Formal_With_Extras            (synth)\n+   --    Is_Elaboration_Target               (synth)\n    --    Last_Formal                         (synth)\n    --    Number_Formals                      (synth)\n    --    Scope_Depth                         (synth)\n@@ -6202,6 +6208,7 @@ package Einfo is\n    --    Address_Clause                      (synth)\n    --    First_Formal                        (synth)\n    --    First_Formal_With_Extras            (synth)\n+   --    Is_Elaboration_Target               (synth)\n    --    Last_Formal                         (synth)\n    --    Number_Formals                      (synth)\n    --    Scope_Depth                         (synth)\n@@ -6329,6 +6336,7 @@ package Einfo is\n    --    Is_Primitive                        (Flag218)\n    --    Is_Pure                             (Flag44)\n    --    SPARK_Pragma_Inherited              (Flag265)\n+   --    Is_Elaboration_Target               (synth)\n    --    Aren't there more flags and fields? seems like this list should be\n    --    more similar to the E_Function list, which is much longer ???\n \n@@ -6401,6 +6409,7 @@ package Einfo is\n    --    Static_Elaboration_Desired          (Flag77)   (non-generic case only)\n    --    Has_Non_Null_Abstract_State         (synth)\n    --    Has_Null_Abstract_State             (synth)\n+   --    Is_Elaboration_Target               (synth)\n    --    Is_Wrapper_Package                  (synth)    (non-generic case only)\n    --    Scope_Depth                         (synth)\n \n@@ -6525,6 +6534,7 @@ package Einfo is\n    --    Address_Clause                      (synth)\n    --    First_Formal                        (synth)\n    --    First_Formal_With_Extras            (synth)\n+   --    Is_Elaboration_Target               (synth)\n    --    Is_Finalizer                        (synth)\n    --    Last_Formal                         (synth)\n    --    Number_Formals                      (synth)\n@@ -6712,6 +6722,7 @@ package Einfo is\n    --    First_Component                     (synth)\n    --    First_Component_Or_Discriminant     (synth)\n    --    Has_Entries                         (synth)\n+   --    Is_Elaboration_Target               (synth)\n    --    Number_Entries                      (synth)\n    --    Scope_Depth                         (synth)\n    --    (plus type attributes)\n@@ -6777,6 +6788,7 @@ package Einfo is\n    --    Address_Clause                      (synth)\n    --    Alignment_Clause                    (synth)\n    --    Is_Atomic_Or_VFA                    (synth)\n+   --    Is_Elaboration_Target               (synth)\n    --    Size_Clause                         (synth)\n \n    --  E_Void\n@@ -7595,6 +7607,7 @@ package Einfo is\n    function Is_Controlled                       (Id : E) return B;\n    function Is_Discriminal                      (Id : E) return B;\n    function Is_Dynamic_Scope                    (Id : E) return B;\n+   function Is_Elaboration_Target               (Id : E) return B;\n    function Is_External_State                   (Id : E) return B;\n    function Is_Finalizer                        (Id : E) return B;\n    function Is_Null_State                       (Id : E) return B;"}, {"sha": "b864bb8f6214de5a826d4f9091300454d8c406a3", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48688534182cf02b7a99416b4459d6514512fc13/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48688534182cf02b7a99416b4459d6514512fc13/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=48688534182cf02b7a99416b4459d6514512fc13", "patch": "@@ -24696,6 +24696,13 @@ package body Sem_Prag is\n                                 (E, (Chars (Get_Pragma_Arg (Arg1)) =\n                                       Name_Off));\n \n+                              --  Suppress elaboration warnings if the entity\n+                              --  denotes an elaboration target.\n+\n+                              if Is_Elaboration_Target (E) then\n+                                 Set_Is_Elaboration_Warnings_OK_Id (E, False);\n+                              end if;\n+\n                               --  For OFF case, make entry in warnings off\n                               --  pragma table for later processing. But we do\n                               --  not do that within an instance, since these"}, {"sha": "d92394bb33a01a888fa81600036a329a2bdd8ebe", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48688534182cf02b7a99416b4459d6514512fc13/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48688534182cf02b7a99416b4459d6514512fc13/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=48688534182cf02b7a99416b4459d6514512fc13", "patch": "@@ -1,3 +1,8 @@\n+2018-05-23  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* gnat.dg/elab5.adb, gnat.dg/elab5_pkg.adb, gnat.dg/elab5_pkg.ads: New\n+\ttestcase.\n+\n 2018-05-23  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* gnat.dg/elab4.adb, gnat.dg/elab4_pkg.adb, gnat.dg/elab4_pkg.ads: New"}, {"sha": "598a2f19fb7beda5064cdaee1a4fde14b81fb8e5", "filename": "gcc/testsuite/gnat.dg/elab5.adb", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48688534182cf02b7a99416b4459d6514512fc13/gcc%2Ftestsuite%2Fgnat.dg%2Felab5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48688534182cf02b7a99416b4459d6514512fc13/gcc%2Ftestsuite%2Fgnat.dg%2Felab5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Felab5.adb?ref=48688534182cf02b7a99416b4459d6514512fc13", "patch": "@@ -0,0 +1,5 @@\n+--  { dg-do link }\n+\n+with Elab5_Pkg;\n+\n+procedure Elab5 is begin null; end Elab5;"}, {"sha": "5a21fd7a25bccbed48506dd6808f8fe354fc1e33", "filename": "gcc/testsuite/gnat.dg/elab5_pkg.adb", "status": "added", "additions": 123, "deletions": 0, "changes": 123, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48688534182cf02b7a99416b4459d6514512fc13/gcc%2Ftestsuite%2Fgnat.dg%2Felab5_pkg.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48688534182cf02b7a99416b4459d6514512fc13/gcc%2Ftestsuite%2Fgnat.dg%2Felab5_pkg.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Felab5_pkg.adb?ref=48688534182cf02b7a99416b4459d6514512fc13", "patch": "@@ -0,0 +1,123 @@\n+with Ada.Text_IO; use Ada.Text_IO;\n+\n+package body Elab5_Pkg is\n+\n+   --------------------------------------------------\n+   -- Call to call, instantiation, task activation --\n+   --------------------------------------------------\n+\n+   procedure Suppressed_Call_1 is\n+      package Inst is new ABE_Gen;\n+      T : ABE_Task;\n+   begin\n+      ABE_Call;\n+   end Suppressed_Call_1;\n+\n+   function Elaborator_1 return Boolean is\n+   begin\n+      pragma Warnings (\"L\");\n+      Suppressed_Call_1;\n+      pragma Warnings (\"l\");\n+      return True;\n+   end Elaborator_1;\n+\n+   Elab_1 : constant Boolean := Elaborator_1;\n+\n+   procedure Suppressed_Call_2 is\n+      package Inst is new ABE_Gen;\n+      T : ABE_Task;\n+   begin\n+      ABE_Call;\n+   end Suppressed_Call_2;\n+\n+   function Elaborator_2 return Boolean is\n+   begin\n+      Suppressed_Call_2;\n+      return True;\n+   end Elaborator_2;\n+\n+   Elab_2 : constant Boolean := Elaborator_2;\n+\n+   procedure Suppressed_Call_3 is\n+      package Inst is new ABE_Gen;\n+      T : ABE_Task;\n+   begin\n+      ABE_Call;\n+   end Suppressed_Call_3;\n+\n+   function Elaborator_3 return Boolean is\n+   begin\n+      Suppressed_Call_3;\n+      return True;\n+   end Elaborator_3;\n+\n+   Elab_3 : constant Boolean := Elaborator_3;\n+\n+   -----------------------------------------------------------\n+   -- Instantiation to call, instantiation, task activation --\n+   -----------------------------------------------------------\n+\n+   package body Suppressed_Generic is\n+      procedure Force_Body is begin null; end Force_Body;\n+      package Inst is new ABE_Gen;\n+      T : ABE_Task;\n+   begin\n+      ABE_Call;\n+   end Suppressed_Generic;\n+\n+   function Elaborator_4 return Boolean is\n+      pragma Warnings (\"L\");\n+      package Inst is new Suppressed_Generic;\n+      pragma Warnings (\"l\");\n+   begin\n+      return True;\n+   end Elaborator_4;\n+\n+   Elab_4 : constant Boolean := Elaborator_4;\n+\n+   -------------------------------------------------------------\n+   -- Task activation to call, instantiation, task activation --\n+   -------------------------------------------------------------\n+\n+   task body Suppressed_Task is\n+      package Inst is new ABE_Gen;\n+      T : ABE_Task;\n+   begin\n+      ABE_Call;\n+   end Suppressed_Task;\n+\n+   function Elaborator_5 return Boolean is\n+      pragma Warnings (\"L\");\n+      T : Suppressed_Task;\n+      pragma Warnings (\"l\");\n+   begin\n+      return True;\n+   end Elaborator_5;\n+\n+   Elab_5 : constant Boolean := Elaborator_5;\n+\n+   function Elaborator_6 return Boolean is\n+      T : Suppressed_Task;\n+      pragma Warnings (Off, T);\n+   begin\n+      return True;\n+   end Elaborator_6;\n+\n+   Elab_6 : constant Boolean := Elaborator_6;\n+\n+   procedure ABE_Call is\n+   begin\n+      Put_Line (\"ABE_Call\");\n+   end ABE_Call;\n+\n+   package body ABE_Gen is\n+      procedure Force_Body is begin null; end Force_Body;\n+   begin\n+      Put_Line (\"ABE_Gen\");\n+   end ABE_Gen;\n+\n+   task body ABE_Task is\n+   begin\n+      Put_Line (\"ABE_Task\");\n+   end ABE_Task;\n+end Elab5_Pkg;"}, {"sha": "78da6e68e94bfee05ee51c35b598a42b3ccfae19", "filename": "gcc/testsuite/gnat.dg/elab5_pkg.ads", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48688534182cf02b7a99416b4459d6514512fc13/gcc%2Ftestsuite%2Fgnat.dg%2Felab5_pkg.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48688534182cf02b7a99416b4459d6514512fc13/gcc%2Ftestsuite%2Fgnat.dg%2Felab5_pkg.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Felab5_pkg.ads?ref=48688534182cf02b7a99416b4459d6514512fc13", "patch": "@@ -0,0 +1,47 @@\n+package Elab5_Pkg is\n+   procedure ABE_Call;\n+\n+   generic\n+   package ABE_Gen is\n+      procedure Force_Body;\n+   end ABE_Gen;\n+\n+   task type ABE_Task;\n+\n+   --------------------------------------------------\n+   -- Call to call, instantiation, task activation --\n+   --------------------------------------------------\n+\n+   function Elaborator_1 return Boolean;\n+   function Elaborator_2 return Boolean;\n+   function Elaborator_3 return Boolean;\n+\n+   procedure Suppressed_Call_1;\n+\n+   pragma Warnings (\"L\");\n+   procedure Suppressed_Call_2;\n+   pragma Warnings (\"l\");\n+\n+   procedure Suppressed_Call_3;\n+   pragma Warnings (Off, Suppressed_Call_3);\n+\n+   -----------------------------------------------------------\n+   -- Instantiation to call, instantiation, task activation --\n+   -----------------------------------------------------------\n+\n+   function Elaborator_4 return Boolean;\n+\n+   generic\n+   package Suppressed_Generic is\n+      procedure Force_Body;\n+   end Suppressed_Generic;\n+\n+   -------------------------------------------------------------\n+   -- Task activation to call, instantiation, task activation --\n+   -------------------------------------------------------------\n+\n+   function Elaborator_5 return Boolean;\n+   function Elaborator_6 return Boolean;\n+\n+   task type Suppressed_Task;\n+end Elab5_Pkg;"}]}