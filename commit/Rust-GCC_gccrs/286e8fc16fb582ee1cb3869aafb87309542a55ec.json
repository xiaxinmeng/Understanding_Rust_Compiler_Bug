{"sha": "286e8fc16fb582ee1cb3869aafb87309542a55ec", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjg2ZThmYzE2ZmI1ODJlZTFjYjM4NjlhYWZiODczMDk1NDJhNTVlYw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2013-07-13T23:10:29Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2013-07-13T23:10:29Z"}, "message": "print-tree.c (debug_vec_tree): Use debug_raw.\n\n\t* print-tree.c (debug_vec_tree): Use debug_raw.\n\t(debug_raw (vec<tree, va_gc> &)): New.\n\t(debug_raw (vec<tree, va_gc> *)): New.\n\t* tree.h: Declare them.\n\nFrom-SVN: r200940", "tree": {"sha": "cab820c1ef6dae755bb84387aba1007c79765bee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cab820c1ef6dae755bb84387aba1007c79765bee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/286e8fc16fb582ee1cb3869aafb87309542a55ec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/286e8fc16fb582ee1cb3869aafb87309542a55ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/286e8fc16fb582ee1cb3869aafb87309542a55ec", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/286e8fc16fb582ee1cb3869aafb87309542a55ec/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "16b53405ad2baba783cf7ecf34a623fd64db2dda", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16b53405ad2baba783cf7ecf34a623fd64db2dda", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16b53405ad2baba783cf7ecf34a623fd64db2dda"}], "stats": {"total": 45, "additions": 40, "deletions": 5}, "files": [{"sha": "1bcd99421894b9920940a1ccaa185b286e898646", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/286e8fc16fb582ee1cb3869aafb87309542a55ec/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/286e8fc16fb582ee1cb3869aafb87309542a55ec/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=286e8fc16fb582ee1cb3869aafb87309542a55ec", "patch": "@@ -1,3 +1,10 @@\n+2013-07-13  Jason Merrill  <jason@redhat.com>\n+\n+\t* print-tree.c (debug_vec_tree): Use debug_raw.\n+\t(debug_raw (vec<tree, va_gc> &)): New.\n+\t(debug_raw (vec<tree, va_gc> *)): New.\n+\t* tree.h: Declare them.\n+\n 2013-07-13  Bin Cheng  <bin.cheng@arm.com>\n \n \t* ifcvt.c (ifcvt_after_combine): New static variable."}, {"sha": "029c3a25e6dbeff3fc91e354671368ddb1fd59e1", "filename": "gcc/print-tree.c", "status": "modified", "additions": 31, "deletions": 5, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/286e8fc16fb582ee1cb3869aafb87309542a55ec/gcc%2Fprint-tree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/286e8fc16fb582ee1cb3869aafb87309542a55ec/gcc%2Fprint-tree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprint-tree.c?ref=286e8fc16fb582ee1cb3869aafb87309542a55ec", "patch": "@@ -1097,26 +1097,37 @@ debug_body (const tree_node *ptr)\n    down to a depth of six.  */\n \n DEBUG_FUNCTION void\n-debug_vec_tree (vec<tree, va_gc> *vec)\n+debug_raw (vec<tree, va_gc> &ref)\n {\n   tree elt;\n   unsigned ix;\n \n   /* Print the slot this node is in, and its code, and address.  */\n   fprintf (stderr, \"<VEC\");\n-  dump_addr (stderr, \" \", vec->address ());\n+  dump_addr (stderr, \" \", ref.address ());\n \n-  FOR_EACH_VEC_ELT (*vec, ix, elt)\n+  FOR_EACH_VEC_ELT (ref, ix, elt)\n     {\n       fprintf (stderr, \"elt %d \", ix);\n-      debug (elt);\n+      debug_raw (elt);\n     }\n }\n \n DEBUG_FUNCTION void\n debug (vec<tree, va_gc> &ref)\n {\n-  debug_vec_tree (&ref);\n+  tree elt;\n+  unsigned ix;\n+\n+  /* Print the slot this node is in, and its code, and address.  */\n+  fprintf (stderr, \"<VEC\");\n+  dump_addr (stderr, \" \", ref.address ());\n+\n+  FOR_EACH_VEC_ELT (ref, ix, elt)\n+    {\n+      fprintf (stderr, \"elt %d \", ix);\n+      debug (elt);\n+    }\n }\n \n DEBUG_FUNCTION void\n@@ -1127,3 +1138,18 @@ debug (vec<tree, va_gc> *ptr)\n   else\n     fprintf (stderr, \"<nil>\\n\");\n }\n+\n+DEBUG_FUNCTION void\n+debug_raw (vec<tree, va_gc> *ptr)\n+{\n+  if (ptr)\n+    debug_raw (*ptr);\n+  else\n+    fprintf (stderr, \"<nil>\\n\");\n+}\n+\n+DEBUG_FUNCTION void\n+debug_vec_tree (vec<tree, va_gc> *vec)\n+{\n+  debug_raw (vec);\n+}"}, {"sha": "0058a4b17bfce75d275628308cbad5f01d2698ec", "filename": "gcc/tree.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/286e8fc16fb582ee1cb3869aafb87309542a55ec/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/286e8fc16fb582ee1cb3869aafb87309542a55ec/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=286e8fc16fb582ee1cb3869aafb87309542a55ec", "patch": "@@ -6025,6 +6025,8 @@ extern void debug_body (const tree_node *ptr);\n extern void debug_vec_tree (vec<tree, va_gc> *);\n extern void debug (vec<tree, va_gc> &ref);\n extern void debug (vec<tree, va_gc> *ptr);\n+extern void debug_raw (vec<tree, va_gc> &ref);\n+extern void debug_raw (vec<tree, va_gc> *ptr);\n #ifdef BUFSIZ\n extern void dump_addr (FILE*, const char *, const void *);\n extern void print_node (FILE *, const char *, tree, int);"}]}