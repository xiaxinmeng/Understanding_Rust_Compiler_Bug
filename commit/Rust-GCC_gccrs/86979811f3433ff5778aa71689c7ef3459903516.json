{"sha": "86979811f3433ff5778aa71689c7ef3459903516", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODY5Nzk4MTFmMzQzM2ZmNTc3OGFhNzE2ODljN2VmMzQ1OTkwMzUxNg==", "commit": {"author": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2005-07-26T21:38:45Z"}, "committer": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2005-07-26T21:38:45Z"}, "message": "re PR tree-optimization/22504 (benchmark - galgel fails at runtime with miscompare output)\n\n\tPR tree-optimization/22504\n\t* tree-complex.c (expand_complex_addition): Use 'code' instead\n\tof MINUS_EXPR for (VARYING, ONLY_IMAG) and (ONLY_IMAG, VARYING).\n\nFrom-SVN: r102401", "tree": {"sha": "3a709c3fb8644eb0283cc951308cf5256abfe046", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3a709c3fb8644eb0283cc951308cf5256abfe046"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/86979811f3433ff5778aa71689c7ef3459903516", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86979811f3433ff5778aa71689c7ef3459903516", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86979811f3433ff5778aa71689c7ef3459903516", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86979811f3433ff5778aa71689c7ef3459903516/comments", "author": null, "committer": null, "parents": [{"sha": "faf9ab985cd148e516b7254455707d5aabe4f277", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/faf9ab985cd148e516b7254455707d5aabe4f277", "html_url": "https://github.com/Rust-GCC/gccrs/commit/faf9ab985cd148e516b7254455707d5aabe4f277"}], "stats": {"total": 100, "additions": 53, "deletions": 47}, "files": [{"sha": "ac09120ac27fa374b28195ae011df65e8e6e77a8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 51, "deletions": 45, "changes": 96, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86979811f3433ff5778aa71689c7ef3459903516/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86979811f3433ff5778aa71689c7ef3459903516/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=86979811f3433ff5778aa71689c7ef3459903516", "patch": "@@ -1,3 +1,9 @@\n+2005-07-26  Steven Bosscher  <stevenb@suse.de>\n+\n+\tPR tree-optimization/22504\n+\t* tree-complex.c (expand_complex_addition): Use 'code' instead\n+\tof MINUS_EXPR for (VARYING, ONLY_IMAG) and (ONLY_IMAG, VARYING).\n+\n 2005-07-26  Aldy Hernandez  <aldyh@redhat.com>\n \n \t* config.gcc (cpu_type): Add frv case.\n@@ -187,7 +193,7 @@\n \t(analyze_offset_expr, get_ptr_offset, address_analysis,\n \tobject_analysis): Likewise.\n \t(analyze_offset): New function.\n- \t(create_data_ref): Likewise.\n+\t(create_data_ref): Likewise.\n \t(initialize_data_dependence_relation): Call base_addr_differ_p. Compare\n \tdimensions for ARRAY_REFs only.\n \t(build_classic_dist_vector): Make static.\n@@ -218,7 +224,7 @@\n \t* tree-loop-linear.c (linear_transform_loops): Call\n \tcompute_data_dependences_for_loop with correct parameters.\n \t* tree-ssa-alias.c (is_aliased_with): New function.\n- \t* tree-vect-analyze.c (vect_get_ptr_offset): Remove.\n+\t* tree-vect-analyze.c (vect_get_ptr_offset): Remove.\n \t(vect_analyze_offset_expr, vect_base_addr_differ_p): Likewise.\n \t(vect_analyze_data_ref_dependence): Get ddr. Remove call to\n \tvect_base_addr_differ_p, compute_subscript_distance and\n@@ -280,9 +286,9 @@\n \n 2005-07-24  Ira Rosen  <irar@il.ibm.com>\n \n-        PR tree-optimization/22526\n-        * tree-vectorizer.c (slpeel_tree_peel_loop_to_edge): Match the type\n-        of the zero node.\n+\tPR tree-optimization/22526\n+\t* tree-vectorizer.c (slpeel_tree_peel_loop_to_edge): Match the type\n+\tof the zero node.\n \n 2005-07-24  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n \n@@ -474,11 +480,11 @@\n \t(process_unification_queue): Likewise.\n \n 2005-07-22  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n-            Laurent GUERBY  <laurent@guerby.net>\n+\t    Laurent GUERBY  <laurent@guerby.net>\n \n-        PR tree-optimization/22336\n-        * function.c (record_block_change): Check for \n-        cfun->ib_boundaries_block.\n+\tPR tree-optimization/22336\n+\t* function.c (record_block_change): Check for \n+\tcfun->ib_boundaries_block.\n \t\n 2005-07-21  James A. Morrison  <phython@gcc.gnu.org>\n \n@@ -517,8 +523,8 @@\n \n 2005-07-21  Uros Bizjak  <uros@kss-loka.si>\n \n-        PR target/21149\n-        * config/i386/i386.md (sse_movhlps): Fix vec_select values.\n+\tPR target/21149\n+\t* config/i386/i386.md (sse_movhlps): Fix vec_select values.\n \n 2005-07-21  Uros Bizjak  <uros@kss-loka.si>\n \n@@ -557,13 +563,13 @@\n \n \t* config/sh/symbian.c: Replace C++ style line comments with C\n \tstyle line comments.\n-        (symbian_add_attribute): Do not use a ? operator on the LHS of\n+\t(symbian_add_attribute): Do not use a ? operator on the LHS of\n \tan assignment.\n-        (sh_symbian_handle_dll_attribute): Change the type of the\n+\t(sh_symbian_handle_dll_attribute): Change the type of the\n \tmethod vector to \"VEC(tree,gc)*\" and use vector accessor\n \tmacros to walk over the elements.\n-        (symbian_export_vtable_and_rtti_p): Likewise.\n-        (symbian_class_needs_attribute_p): Likewise.\n+\t(symbian_export_vtable_and_rtti_p): Likewise.\n+\t(symbian_class_needs_attribute_p): Likewise.\n \n 2005-07-21  Paolo Bonzini  <bonzini@gnu.org>\n \n@@ -578,7 +584,7 @@\n \t* config/rs6000/darwin.h (REGISTER_TARGET_PRAGMAS): Likewise.\n \n 2005-07-21  Paolo Bonzini  <bonzini@gnu.org>\n-            Zdenek Dvorak  <dvorakz@suse.cz>\n+\t    Zdenek Dvorak  <dvorakz@suse.cz>\n \n \tPR tree-optimization/19210\n \t* common.opt (Wunsafe-loop-optimizations, funsafe-loop-optimizations):\n@@ -656,9 +662,9 @@\n \n \t* config/sh/sh.md (UNSPEC_SP_SET, UNSPEC_SP_TEST): New constants.\n \t(stack_protect_set, stack_protect_test): New expanders.\n-        (stack_protect_set_si, stack_protect_set_si_media,\n+\t(stack_protect_set_si, stack_protect_set_si_media,\n \tstack_protect_set_di_media, stack_protect_test_si,\n-        stack_protect_test_si_media, stack_protect_test_di_media):\n+\tstack_protect_test_si_media, stack_protect_test_di_media):\n \tNew insns.\n \n 2005-07-20  Andrew Pinski  <pinskia@physics.uc.edu>\n@@ -674,7 +680,7 @@\n \tagainst zero.\n \t* tree-flow.h (expr_computes_nonzero): Remove.\n \t* tree-vrp.c (expr_computes_nonzero): Remove.\n- \t(vrp_expr_computes_nonzero): Use tree_expr_nonzero_p.\n+\t(vrp_expr_computes_nonzero): Use tree_expr_nonzero_p.\n \t(extract_range_from_unary_expr): Likewise.\n \t* tree-ssa-dom.c (record_equivalences_from_stmt): Use\n \ttree_expr_nonzero_p.\n@@ -1057,13 +1063,13 @@\n \tnonlocal_referenced_p_1, nonlocal_referenced_p, nonlocal_set_p_1,\n \tint nonlocal_set_p, mark_constant_function): Deleted.\n \t(rest_of_handle_cfg): Removed call to mark_constant_function. \n-        (nonoverlapping_component_refs_p): Added calls to support\n+\t(nonoverlapping_component_refs_p): Added calls to support\n \ttype based aliasing.    \n-        * tree-ssa-alias.c (may_alias_p,\n+\t* tree-ssa-alias.c (may_alias_p,\n \tcompute_flow_insensitive_aliasing): Ditto.\n \t* calls.c (flags_from_decl_or_type): Removed reference to\n \tcgraph_rtl_info. \n-      \t* c-typeck.c (convert_arguments): Make builtins tolerant of having\n+\t* c-typeck.c (convert_arguments): Make builtins tolerant of having\n \ttoo many arguments.  This is necessary for Spec 2000.\n \t* cgraph.h (const_function, pure_function): Removed.\n \t* common.opt: Added \"fipa-pure-const\", \"fipa-reference\",  \n@@ -1212,7 +1218,7 @@\n \tthe computation of the four cross productions for \"range op range\".\n \n 2005-07-14  Alexandre Oliva  <aoliva@redhat.com>\n-            Ulrich Weigand  <uweigand@de.ibm.com>\n+\t    Ulrich Weigand  <uweigand@de.ibm.com>\n \n \tPR target/20126\n \t* loop.c (loop_givs_rescan): Do not ICE if unable to reduce an IV\n@@ -1313,15 +1319,15 @@\n \n 2005-07-13  Eric Christopher  <echristo@redhat.com>\n \n-        * config.gcc (s390x-ibm-tpf*): Add extra_options. Remove\n-        static extra parts.\n-        * config/s390/s390.md: Include tpf.md. Move tpf specific\n-        patterns...\n-        * config/s390/tpf.md: To here.\n-        * config/s390/s390.opt: Move tpf specific options...\n-        * config/s390/tpf.opt: to here. Add mmain option.\n-        * config/s390/tpf-unwind.h: Remove unnecessary defines.\n-        * config/s390/tpf.h: Rewrite.\n+\t* config.gcc (s390x-ibm-tpf*): Add extra_options. Remove\n+\tstatic extra parts.\n+\t* config/s390/s390.md: Include tpf.md. Move tpf specific\n+\tpatterns...\n+\t* config/s390/tpf.md: To here.\n+\t* config/s390/s390.opt: Move tpf specific options...\n+\t* config/s390/tpf.opt: to here. Add mmain option.\n+\t* config/s390/tpf-unwind.h: Remove unnecessary defines.\n+\t* config/s390/tpf.h: Rewrite.\n \n 2005-07-13  H.J. Lu  <hongjiu.lu@intel.com>\n \n@@ -2183,17 +2189,17 @@\n \n 2005-07-06  Fariborz Jahanian <fjahanian@apple.com>\n \n-        * doc/invoke.texi: Update -fforce-mem documentation.\n-        * dojump.c (compare_from_rtx,do_compare_rtx_and_jump): Remove \n-        code for -fforce-mem.\n-        * expmed.c: (store_bit_field,store_fixed_bit_field,\n-        extract_bit_field): Ditto.\n-        * expr.c: (convert_move): Ditto.\n-        * optabs.c: (expand_binop,expand_twoval_unop,expand_twoval_binop,\n-        expand_unop,emit_unop_insn,prepare_cmp_insn,emit_conditional_move,\n-        emit_conditional_add,expand_float,expand_fix): Ditto.\n-        * opts.c: (decode_options): Remove setting of flag_force_mem flag.\n-        (common_handle_option): Issue warning when -fforce-mem specified.\n+\t* doc/invoke.texi: Update -fforce-mem documentation.\n+\t* dojump.c (compare_from_rtx,do_compare_rtx_and_jump): Remove \n+\tcode for -fforce-mem.\n+\t* expmed.c: (store_bit_field,store_fixed_bit_field,\n+\textract_bit_field): Ditto.\n+\t* expr.c: (convert_move): Ditto.\n+\t* optabs.c: (expand_binop,expand_twoval_unop,expand_twoval_binop,\n+\texpand_unop,emit_unop_insn,prepare_cmp_insn,emit_conditional_move,\n+\temit_conditional_add,expand_float,expand_fix): Ditto.\n+\t* opts.c: (decode_options): Remove setting of flag_force_mem flag.\n+\t(common_handle_option): Issue warning when -fforce-mem specified.\n \n 2005-07-06  Paul Brook  <paul@codesourcery.com>\n \n@@ -2657,7 +2663,7 @@\n \tsplit_all_insns_noflow in PIC case if needed.\n \n 2005-07-02  Gabriel Dos Reis  <gdr@integrable-solutions.net>\n-            Christian Ehrhardt <ehrhardt@mathematik.uni-ulm.de>\n+\t    Christian Ehrhardt <ehrhardt@mathematik.uni-ulm.de>\n \n \tPR c++/18279\n \t* c-decl.c (c_write_global_declarations): Dump contents of\n@@ -2737,7 +2743,7 @@\n \tlowercase letter.\n \n 2005-07-02  Zack Weinberg  <zack@codesourcery.com>\n-            Joseph S. Myers  <joseph@codesourcery.com>\n+\t    Joseph S. Myers  <joseph@codesourcery.com>\n \n \t* toplev.c (default_tree_printer): Handle setting location with\n \t'+' flag."}, {"sha": "a63134f0ec1473fb5813c9778514ebbd08f1a0ac", "filename": "gcc/tree-complex.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86979811f3433ff5778aa71689c7ef3459903516/gcc%2Ftree-complex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86979811f3433ff5778aa71689c7ef3459903516/gcc%2Ftree-complex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-complex.c?ref=86979811f3433ff5778aa71689c7ef3459903516", "patch": "@@ -844,7 +844,7 @@ expand_complex_addition (block_stmt_iterator *bsi, tree inner_type,\n \n     case PAIR (VARYING, ONLY_IMAG):\n       rr = ar;\n-      ri = gimplify_build2 (bsi, MINUS_EXPR, inner_type, ai, bi);\n+      ri = gimplify_build2 (bsi, code, inner_type, ai, bi);\n       break;\n \n     case PAIR (ONLY_REAL, VARYING):\n@@ -858,7 +858,7 @@ expand_complex_addition (block_stmt_iterator *bsi, tree inner_type,\n       if (code == MINUS_EXPR)\n \tgoto general;\n       rr = br;\n-      ri = gimplify_build2 (bsi, MINUS_EXPR, inner_type, ai, bi);\n+      ri = gimplify_build2 (bsi, code, inner_type, ai, bi);\n       break;\n \n     case PAIR (VARYING, VARYING):"}]}