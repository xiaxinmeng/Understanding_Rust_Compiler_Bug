{"sha": "f237d906c7c67670df24e41064e7f152d6fdb471", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjIzN2Q5MDZjN2M2NzY3MGRmMjRlNDEwNjRlN2YxNTJkNmZkYjQ3MQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2001-08-09T17:52:35Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2001-08-09T17:52:35Z"}, "message": "tweak comment\n\nFrom-SVN: r44744", "tree": {"sha": "5fbdef231ad6fd5f9dc3242169deb7713ffadac8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5fbdef231ad6fd5f9dc3242169deb7713ffadac8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f237d906c7c67670df24e41064e7f152d6fdb471", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f237d906c7c67670df24e41064e7f152d6fdb471", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f237d906c7c67670df24e41064e7f152d6fdb471", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f237d906c7c67670df24e41064e7f152d6fdb471/comments", "author": null, "committer": null, "parents": [{"sha": "1b0c37d730cd2bda3fa69befcb77e1ae11705219", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b0c37d730cd2bda3fa69befcb77e1ae11705219", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b0c37d730cd2bda3fa69befcb77e1ae11705219"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "a649e23220bc85a413be36bb0c7392745fd05619", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f237d906c7c67670df24e41064e7f152d6fdb471/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f237d906c7c67670df24e41064e7f152d6fdb471/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=f237d906c7c67670df24e41064e7f152d6fdb471", "patch": "@@ -1941,7 +1941,10 @@ defer_fn (fn)\n /* Hunts through the global anonymous union ANON_DECL, building\n    appropriate VAR_DECLs.  Stores cleanups on the list of ELEMS, and\n    returns a VAR_DECL whose size is the same as the size of the\n-   ANON_DECL, if one is available.  */\n+   ANON_DECL, if one is available.\n+\n+   FIXME: we should really handle anonymous unions by binding the names\n+   of the members to COMPONENT_REFs rather than this kludge.  */\n \n static tree \n build_anon_union_vars (anon_decl, elems, static_p, external_p)"}]}