{"sha": "bb8c2886dbf838805777d2c7952f46bbeba7987f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmI4YzI4ODZkYmY4Mzg4MDU3NzdkMmM3OTUyZjQ2YmJlYmE3OTg3Zg==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "iant@google.com", "date": "2014-10-15T15:32:41Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2014-10-15T15:32:41Z"}, "message": "configure.ac: If the compiler supports -Qunused-arguments...\n\n\t* configure.ac: If the compiler supports -Qunused-arguments, use\n\tit when running the compiler on .s files.\n\t* configure: Regenerated.\n\nFrom-SVN: r216268", "tree": {"sha": "bdc1d44318ce5627cb6a73b6ef6d9337cf792b1d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bdc1d44318ce5627cb6a73b6ef6d9337cf792b1d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bb8c2886dbf838805777d2c7952f46bbeba7987f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb8c2886dbf838805777d2c7952f46bbeba7987f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb8c2886dbf838805777d2c7952f46bbeba7987f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb8c2886dbf838805777d2c7952f46bbeba7987f/comments", "author": null, "committer": null, "parents": [{"sha": "9e98c8c32cfb8633053f2663983e9fa845398e52", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e98c8c32cfb8633053f2663983e9fa845398e52", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e98c8c32cfb8633053f2663983e9fa845398e52"}], "stats": {"total": 57, "additions": 57, "deletions": 0}, "files": [{"sha": "ed7f5556d94b9579c5b47f3d3a34b6275a733973", "filename": "libffi/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb8c2886dbf838805777d2c7952f46bbeba7987f/libffi%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb8c2886dbf838805777d2c7952f46bbeba7987f/libffi%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FChangeLog?ref=bb8c2886dbf838805777d2c7952f46bbeba7987f", "patch": "@@ -1,3 +1,9 @@\n+2014-10-15  Ian Lance Taylor  <iant@google.com>\n+\n+\t* configure.ac: If the compiler supports -Qunused-arguments, use\n+\tit when running the compiler on .s files.\n+\t* configure: Regenerated.\n+\n 2014-09-11  Jakub Jelinek  <jakub@redhat.com>\n \n \t* src/powerpc/linux64.S: Emit .note.GNU-stack even when"}, {"sha": "4c53cf9d543f5bdebdff6d63e7e9bf8bed9e4313", "filename": "libffi/configure", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb8c2886dbf838805777d2c7952f46bbeba7987f/libffi%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb8c2886dbf838805777d2c7952f46bbeba7987f/libffi%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fconfigure?ref=bb8c2886dbf838805777d2c7952f46bbeba7987f", "patch": "@@ -12519,6 +12519,28 @@ $as_echo \"#define HAVE_AS_CFI_PSEUDO_OP 1\" >>confdefs.h\n  fi\n \n \n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking if compiler supports -Qunused-arguments\" >&5\n+$as_echo_n \"checking if compiler supports -Qunused-arguments... \" >&6; }\n+if test \"${libffi_cv_c_unused_arguments+set}\" = set; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  CFLAGS_hold=$CFLAGS\n+CFLAGS=\"$CFLAGS -Qunused-arguments\"\n+cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+int i;\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  libffi_cv_c_unused_arguments=yes\n+else\n+  libffi_cv_c_unused_arguments=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+CFLAGS=$CFLAGS_hold\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $libffi_cv_c_unused_arguments\" >&5\n+$as_echo \"$libffi_cv_c_unused_arguments\" >&6; }\n+\n if test x$TARGET = xSPARC; then\n     { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler and linker support unaligned pc related relocs\" >&5\n $as_echo_n \"checking assembler and linker support unaligned pc related relocs... \" >&6; }\n@@ -12604,9 +12626,14 @@ else\n \n \tlibffi_cv_as_x86_pcrel=yes\n \techo '.text; foo: nop; .data; .long foo-.; .text' > conftest.s\n+\tCFLAGS_hold=$CFLAGS\n+\tif test \"$libffi_cv_c_unused_arguments\" = yes; then\n+\t    CFLAGS=\"$CFLAGS -Qunused-arguments\"\n+\tfi\n \tif $CC $CFLAGS -c conftest.s 2>&1 | $EGREP -i 'illegal|warning' > /dev/null; then\n \t    libffi_cv_as_x86_pcrel=no\n \tfi\n+\tCFLAGS=$CFLAGS_hold\n \n fi\n { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $libffi_cv_as_x86_pcrel\" >&5\n@@ -12732,9 +12759,14 @@ else\n \n \tlibffi_cv_as_x86_64_unwind_section_type=yes\n \techo '.section .eh_frame,\"a\",@unwind' > conftest.s\n+\tCFLAGS_hold=$CFLAGS\n+\tif test \"$libffi_cv_c_unused_arguments\" = yes; then\n+\t    CFLAGS=\"$CFLAGS -Qunused-arguments\"\n+\tfi\n \tif $CC $CFLAGS -c conftest.s 2>&1 | grep -i warning > /dev/null; then\n \t    libffi_cv_as_x86_64_unwind_section_type=no\n \tfi\n+\tCFLAGS=$CFLAGS_hold\n \n fi\n { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $libffi_cv_as_x86_64_unwind_section_type\" >&5"}, {"sha": "97d2641b0c9a9ef05576af58c97d2e3ee1ef1f85", "filename": "libffi/configure.ac", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb8c2886dbf838805777d2c7952f46bbeba7987f/libffi%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb8c2886dbf838805777d2c7952f46bbeba7987f/libffi%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fconfigure.ac?ref=bb8c2886dbf838805777d2c7952f46bbeba7987f", "patch": "@@ -295,6 +295,15 @@ AC_C_BIGENDIAN\n \n GCC_AS_CFI_PSEUDO_OP\n \n+AC_CACHE_CHECK([if compiler supports -Qunused-arguments],\n+[libffi_cv_c_unused_arguments],\n+[CFLAGS_hold=$CFLAGS\n+CFLAGS=\"$CFLAGS -Qunused-arguments\"\n+AC_COMPILE_IFELSE([[int i;]],\n+[libffi_cv_c_unused_arguments=yes],\n+[libffi_cv_c_unused_arguments=no])\n+CFLAGS=$CFLAGS_hold])\n+\n if test x$TARGET = xSPARC; then\n     AC_CACHE_CHECK([assembler and linker support unaligned pc related relocs],\n \tlibffi_cv_as_sparc_ua_pcrel, [\n@@ -331,9 +340,14 @@ if test x$TARGET = xX86 || test x$TARGET = xX86_WIN32 || test x$TARGET = xX86_64\n \tlibffi_cv_as_x86_pcrel, [\n \tlibffi_cv_as_x86_pcrel=yes\n \techo '.text; foo: nop; .data; .long foo-.; .text' > conftest.s\n+\tCFLAGS_hold=$CFLAGS\n+\tif test \"$libffi_cv_c_unused_arguments\" = yes; then\n+\t    CFLAGS=\"$CFLAGS -Qunused-arguments\"\n+\tfi\n \tif $CC $CFLAGS -c conftest.s 2>&1 | $EGREP -i 'illegal|warning' > /dev/null; then\n \t    libffi_cv_as_x86_pcrel=no\n \tfi\n+\tCFLAGS=$CFLAGS_hold\n \t])\n     if test \"x$libffi_cv_as_x86_pcrel\" = xyes; then\n \tAC_DEFINE(HAVE_AS_X86_PCREL, 1,\n@@ -397,9 +411,14 @@ if test x$TARGET = xX86_64; then\n \tlibffi_cv_as_x86_64_unwind_section_type, [\n \tlibffi_cv_as_x86_64_unwind_section_type=yes\n \techo '.section .eh_frame,\"a\",@unwind' > conftest.s\n+\tCFLAGS_hold=$CFLAGS\n+\tif test \"$libffi_cv_c_unused_arguments\" = yes; then\n+\t    CFLAGS=\"$CFLAGS -Qunused-arguments\"\n+\tfi\n \tif $CC $CFLAGS -c conftest.s 2>&1 | grep -i warning > /dev/null; then\n \t    libffi_cv_as_x86_64_unwind_section_type=no\n \tfi\n+\tCFLAGS=$CFLAGS_hold\n \t])\n     if test \"x$libffi_cv_as_x86_64_unwind_section_type\" = xyes; then\n \tAC_DEFINE(HAVE_AS_X86_64_UNWIND_SECTION_TYPE, 1,"}]}