{"sha": "d25554549b6ea81d76a3cc920ff20ec915585f96", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDI1NTU0NTQ5YjZlYTgxZDc2YTNjYzkyMGZmMjBlYzkxNTU4NWY5Ng==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-10-06T00:19:55Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-10-06T00:19:55Z"}, "message": "(find_reloads_address): If tem != ad, then create a new\nmem to hold it and store it back into memrefloc.\n\nFrom-SVN: r2330", "tree": {"sha": "8cbf0280ea108f5be345b52f04ba8b45c941014c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8cbf0280ea108f5be345b52f04ba8b45c941014c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d25554549b6ea81d76a3cc920ff20ec915585f96", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d25554549b6ea81d76a3cc920ff20ec915585f96", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d25554549b6ea81d76a3cc920ff20ec915585f96", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d25554549b6ea81d76a3cc920ff20ec915585f96/comments", "author": null, "committer": null, "parents": [{"sha": "026380ff6beed08353f631ac2e974fbf23547ca1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/026380ff6beed08353f631ac2e974fbf23547ca1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/026380ff6beed08353f631ac2e974fbf23547ca1"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "459939b43cc92c9678c74294f8d2eab4280106ca", "filename": "gcc/reload.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d25554549b6ea81d76a3cc920ff20ec915585f96/gcc%2Freload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d25554549b6ea81d76a3cc920ff20ec915585f96/gcc%2Freload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload.c?ref=d25554549b6ea81d76a3cc920ff20ec915585f96", "patch": "@@ -3618,6 +3618,12 @@ find_reloads_address (mode, memrefloc, ad, loc, operand, ind_levels)\n       tem = ad;\n       find_reloads_address (GET_MODE (ad), &tem, XEXP (ad, 0), &XEXP (ad, 0),\n \t\t\t    operand, ind_levels == 0 ? 0 : ind_levels - 1);\n+\n+      /* If tem was changed, then we must create a new memory reference to\n+\t hold it and store it back into memrefloc.  */\n+      if (tem != ad && memrefloc)\n+\t*memrefloc = gen_rtx (MEM, GET_MODE (*memrefloc), tem);\n+\n       /* Check similar cases as for indirect addresses as above except\n \t that we can allow pseudos and a MEM since they should have been\n \t taken care of above.  */"}]}