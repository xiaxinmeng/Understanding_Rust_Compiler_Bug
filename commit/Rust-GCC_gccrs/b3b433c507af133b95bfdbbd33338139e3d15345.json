{"sha": "b3b433c507af133b95bfdbbd33338139e3d15345", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjNiNDMzYzUwN2FmMTMzYjk1YmZkYmJkMzMzMzgxMzllM2QxNTM0NQ==", "commit": {"author": {"name": "Manuel L\u00f3pez-Ib\u00e1\u00f1ez", "email": "manu@gcc.gnu.org", "date": "2006-12-16T16:48:01Z"}, "committer": {"name": "Manuel L\u00f3pez-Ib\u00e1\u00f1ez", "email": "manu@gcc.gnu.org", "date": "2006-12-16T16:48:01Z"}, "message": "re PR middle-end/7651 (Define -Wextra strictly in terms of other warning flags)\n\n2006-12-16  Manuel Lopez-Ibanez  <manu@gcc.gnu.org>\n\n\tPR middle-end/7651\n\t* c.opt (Wempty-body): New.\n\t* doc/invoke.texi (Wempty-body): Document it.\n\t(Wextra): Enabled by -Wextra.\n\t* c-opts.c (c_common_post_options): Enabled by -Wextra.\n\t* c-common.c (empty_body_warning): Replace Wextra with Wempty-body.\n\t* c-parser.c (c_parser_c99_block_statement): Likewise.\ntestsuite/\n\t* gcc.dg/20001116-1.c: Replace -Wextra with -Wempty-body.\n\t* gcc.dg/if-empty-1.c: Likewise.\n\t* gcc.dg/pr23165.c: Likewise.\n\t* g++.dg/warn/empty-body.C: Likewise.\n\nFrom-SVN: r119963", "tree": {"sha": "d673fa90f961dc743634330e431fadf58ca98b8b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d673fa90f961dc743634330e431fadf58ca98b8b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b3b433c507af133b95bfdbbd33338139e3d15345", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3b433c507af133b95bfdbbd33338139e3d15345", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b3b433c507af133b95bfdbbd33338139e3d15345", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3b433c507af133b95bfdbbd33338139e3d15345/comments", "author": null, "committer": null, "parents": [{"sha": "d6b418fa0b3d5dc88ffb3f1673f82e6dbf5da6d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6b418fa0b3d5dc88ffb3f1673f82e6dbf5da6d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6b418fa0b3d5dc88ffb3f1673f82e6dbf5da6d1"}], "stats": {"total": 58, "additions": 45, "deletions": 13}, "files": [{"sha": "b17a039c26adb15c73303eb4c04bb186592ec5a5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3b433c507af133b95bfdbbd33338139e3d15345/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3b433c507af133b95bfdbbd33338139e3d15345/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b3b433c507af133b95bfdbbd33338139e3d15345", "patch": "@@ -1,3 +1,13 @@\n+2006-12-16  Manuel Lopez-Ibanez  <manu@gcc.gnu.org>\n+\n+\tPR middle-end/7651\n+\t* c.opt (Wempty-body): New.\n+\t* doc/invoke.texi (Wempty-body): Document it.\n+\t(Wextra): Enabled by -Wextra.\n+\t* c-opts.c (c_common_post_options): Enabled by -Wextra.\n+\t* c-common.c (empty_body_warning): Replace Wextra with Wempty-body.\n+\t* c-parser.c (c_parser_c99_block_statement): Likewise.\n+\t\n 2006-12-15  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/30185"}, {"sha": "3219cf36067ef9f85c38a4bf37b57f565524e0de", "filename": "gcc/c-common.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3b433c507af133b95bfdbbd33338139e3d15345/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3b433c507af133b95bfdbbd33338139e3d15345/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=b3b433c507af133b95bfdbbd33338139e3d15345", "patch": "@@ -1000,7 +1000,7 @@ strict_aliasing_warning (tree otype, tree type, tree expr)\n void\n empty_body_warning (tree inner_then, tree inner_else)\n {\n-  if (extra_warnings)\n+  if (warn_empty_body)\n     {\n       if (TREE_CODE (inner_then) == STATEMENT_LIST\n \t  && STATEMENT_LIST_TAIL (inner_then))\n@@ -1011,11 +1011,11 @@ empty_body_warning (tree inner_then, tree inner_else)\n \tinner_else = STATEMENT_LIST_TAIL (inner_else)->stmt;\n \n       if (IS_EMPTY_STMT (inner_then) && !inner_else)\n-\twarning (OPT_Wextra, \"%Hempty body in an if-statement\",\n+\twarning (OPT_Wempty_body, \"%Hempty body in an if-statement\",\n \t\t EXPR_LOCUS (inner_then));\n \n       if (inner_else && IS_EMPTY_STMT (inner_else))\n-\twarning (OPT_Wextra, \"%Hempty body in an else-statement\",\n+\twarning (OPT_Wempty_body, \"%Hempty body in an else-statement\",\n \t\t EXPR_LOCUS (inner_else));\n    }\n }"}, {"sha": "9a5d6f6ca3a38061a90fdb6aa899140e51be7af8", "filename": "gcc/c-opts.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3b433c507af133b95bfdbbd33338139e3d15345/gcc%2Fc-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3b433c507af133b95bfdbbd33338139e3d15345/gcc%2Fc-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-opts.c?ref=b3b433c507af133b95bfdbbd33338139e3d15345", "patch": "@@ -1025,8 +1025,11 @@ c_common_post_options (const char **pfilename)\n   if (flag_objc_exceptions && !flag_objc_sjlj_exceptions)\n     flag_exceptions = 1;\n \n-  /* -Wextra implies -Wsign-compare, -Wmissing-field-initializers and\n-     -Woverride-init, but not if explicitly overridden.  */\n+  /* -Wextra implies -Wempty-body, -Wsign-compare, \n+     -Wmissing-field-initializers and -Woverride-init, \n+     but not if explicitly overridden.  */\n+  if (warn_empty_body == -1)\n+    warn_empty_body = extra_warnings;\n   if (warn_sign_compare == -1)\n     warn_sign_compare = extra_warnings;\n   if (warn_missing_field_initializers == -1)"}, {"sha": "b688b15673ffa4ffad285c7e41e8c13a68d4daba", "filename": "gcc/c-parser.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3b433c507af133b95bfdbbd33338139e3d15345/gcc%2Fc-parser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3b433c507af133b95bfdbbd33338139e3d15345/gcc%2Fc-parser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-parser.c?ref=b3b433c507af133b95bfdbbd33338139e3d15345", "patch": "@@ -3832,7 +3832,7 @@ c_parser_c99_block_statement (c_parser *parser)\n    is just parsing a statement but (a) it is a block in C99, (b) we\n    track whether the body is an if statement for the sake of\n    -Wparentheses warnings, (c) we handle an empty body specially for\n-   the sake of -Wextra warnings.  */\n+   the sake of -Wempty-body warnings.  */\n \n static tree\n c_parser_if_body (c_parser *parser, bool *if_p)\n@@ -3844,7 +3844,7 @@ c_parser_if_body (c_parser *parser, bool *if_p)\n \t     && c_parser_peek_2nd_token (parser)->type == CPP_COLON))\n     c_parser_label (parser);\n   *if_p = c_parser_next_token_is_keyword (parser, RID_IF);\n-  if (extra_warnings && c_parser_next_token_is (parser, CPP_SEMICOLON))\n+  if (warn_empty_body && c_parser_next_token_is (parser, CPP_SEMICOLON))\n     add_stmt (build_empty_stmt ());\n   c_parser_statement_after_labels (parser);\n   return c_end_compound_stmt (block, flag_isoc99);"}, {"sha": "ab04dc2acac73c4338b6d7c61c7e7e64fde25991", "filename": "gcc/c.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3b433c507af133b95bfdbbd33338139e3d15345/gcc%2Fc.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3b433c507af133b95bfdbbd33338139e3d15345/gcc%2Fc.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc.opt?ref=b3b433c507af133b95bfdbbd33338139e3d15345", "patch": "@@ -173,6 +173,10 @@ Weffc++\n C++ ObjC++ Var(warn_ecpp)\n Warn about violations of Effective C++ style rules\n \n+Wempty-body\n+C ObjC C++ ObjC++ Var(warn_empty_body) Init(-1)\n+Warn about an empty body in an if or else statement\n+\n Wendif-labels\n C ObjC C++ ObjC++\n Warn about stray tokens after #elif and #endif"}, {"sha": "52b1daa18015d517c7e874606b393b91b8550e43", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3b433c507af133b95bfdbbd33338139e3d15345/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3b433c507af133b95bfdbbd33338139e3d15345/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=b3b433c507af133b95bfdbbd33338139e3d15345", "patch": "@@ -224,7 +224,8 @@ Objective-C and Objective-C++ Dialects}.\n -w  -Wextra  -Wall  -Waggregate-return -Walways-true -Wno-attributes @gol\n -Wc++-compat -Wcast-align  -Wcast-qual  -Wchar-subscripts  -Wcomment @gol\n -Wconversion  -Wno-deprecated-declarations @gol\n--Wdisabled-optimization  -Wno-div-by-zero  -Wno-endif-labels @gol\n+-Wdisabled-optimization  -Wno-div-by-zero  @gol\n+-Wempty-body  -Wno-endif-labels @gol\n -Werror  -Werror-* -Werror-implicit-function-declaration @gol\n -Wfatal-errors  -Wfloat-equal  -Wformat  -Wformat=2 @gol\n -Wno-format-extra-args -Wformat-nonliteral @gol\n@@ -2915,7 +2916,8 @@ void foo(bar) @{ @}\n @end smallexample\n \n @item\n-An empty body occurs in an @samp{if} or @samp{else} statement.\n+An empty body occurs in an @samp{if} or @samp{else} statement. This\n+warning can be independently controlled by @option{-Wempty-body}.\n \n @item\n A pointer is compared against integer zero with @samp{<}, @samp{<=},\n@@ -3165,6 +3167,11 @@ like @code{unsigned ui = -1}; and conversions to smaller types, like\n ((int) x)} and @code{ui = (unsigned) -1}, or if the value is not\n changed by the conversion like in @code{abs (2.0)}.\n \n+@item -Wempty-body\n+@opindex Wempty-body\n+An empty body occurs in an @samp{if} or @samp{else} statement. \n+This warning is also enabled by @option{-Wextra}.\n+\n @item -Wsign-compare\n @opindex Wsign-compare\n @cindex warning for comparison of signed and unsigned values"}, {"sha": "6d8074e2fc8ad05aa343639f7f57bcda88e768a3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3b433c507af133b95bfdbbd33338139e3d15345/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3b433c507af133b95bfdbbd33338139e3d15345/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b3b433c507af133b95bfdbbd33338139e3d15345", "patch": "@@ -1,3 +1,11 @@\n+2006-12-16  Manuel Lopez-Ibanez  <manu@gcc.gnu.org>\n+\n+\tPR middle-end/7651\n+\t* gcc.dg/20001116-1.c: Replace -Wextra with -Wempty-body.\n+\t* gcc.dg/if-empty-1.c: Likewise.\n+\t* gcc.dg/pr23165.c: Likewise.\n+\t* g++.dg/warn/empty-body.C: Likewise.\n+\t\n 2006-12-15  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR libfortran/30005"}, {"sha": "064a09dde2e0e807f94f6903008dd836060c2258", "filename": "gcc/testsuite/g++.dg/warn/empty-body.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3b433c507af133b95bfdbbd33338139e3d15345/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fempty-body.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3b433c507af133b95bfdbbd33338139e3d15345/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fempty-body.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fempty-body.C?ref=b3b433c507af133b95bfdbbd33338139e3d15345", "patch": "@@ -1,5 +1,5 @@\n // PR c++/5520\n-// { dg-options \"-O2 -Wextra\" }\n+// { dg-options \"-O2 -Wempty-body\" }\n \n void breakme()\n {"}, {"sha": "3ea2f381d07e7100025f9e588c299900aa26dbd9", "filename": "gcc/testsuite/gcc.dg/20001116-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3b433c507af133b95bfdbbd33338139e3d15345/gcc%2Ftestsuite%2Fgcc.dg%2F20001116-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3b433c507af133b95bfdbbd33338139e3d15345/gcc%2Ftestsuite%2Fgcc.dg%2F20001116-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20001116-1.c?ref=b3b433c507af133b95bfdbbd33338139e3d15345", "patch": "@@ -2,7 +2,7 @@\n    nasty ICE due to messed up parser context.  Problem originally found\n    during bootstrap; this is synthetic.  -zw  */\n /* { dg-do compile } \n-   { dg-options -W } */\n+   { dg-options -Wempty-body } */\n \n void foo (int x)\n {"}, {"sha": "9785c72a181e0a97a68cef92d880b7d0967b7794", "filename": "gcc/testsuite/gcc.dg/if-empty-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3b433c507af133b95bfdbbd33338139e3d15345/gcc%2Ftestsuite%2Fgcc.dg%2Fif-empty-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3b433c507af133b95bfdbbd33338139e3d15345/gcc%2Ftestsuite%2Fgcc.dg%2Fif-empty-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fif-empty-1.c?ref=b3b433c507af133b95bfdbbd33338139e3d15345", "patch": "@@ -1,7 +1,7 @@\n /* Test diagnostics for empty bodies in if / else.  */\n /* Origin: Joseph Myers <joseph@codesourcery.com> */\n /* { dg-do compile } */\n-/* { dg-options \"-Wextra\" } */\n+/* { dg-options \"-Wempty-body\" } */\n \n void\n f (int x)"}, {"sha": "94e7daebc90b7817ad92f6c3b77fffa376d3cdfd", "filename": "gcc/testsuite/gcc.dg/pr23165.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3b433c507af133b95bfdbbd33338139e3d15345/gcc%2Ftestsuite%2Fgcc.dg%2Fpr23165.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3b433c507af133b95bfdbbd33338139e3d15345/gcc%2Ftestsuite%2Fgcc.dg%2Fpr23165.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr23165.c?ref=b3b433c507af133b95bfdbbd33338139e3d15345", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-Wextra\" } */\n+/* { dg-options \"-Wempty-body\" } */\n void foo (void)\n {\n \tif (0)"}]}