{"sha": "5d5cd66f11e3ece08b4b4f34be9e77ff49a5f11a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWQ1Y2Q2NmYxMWUzZWNlMDhiNGI0ZjM0YmU5ZTc3ZmY0OWE1ZjExYQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2002-12-11T18:28:26Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2002-12-11T18:28:26Z"}, "message": "tree.h (MODULE_LOCAL_P): Kill.\n\n        * tree.h (MODULE_LOCAL_P): Kill.\n        * varasm.c (default_binds_local_p_1): Use decl_visibility instead.\n\nFrom-SVN: r60040", "tree": {"sha": "93945825bb84bcf05fabc5de714eef864da800e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/93945825bb84bcf05fabc5de714eef864da800e0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5d5cd66f11e3ece08b4b4f34be9e77ff49a5f11a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d5cd66f11e3ece08b4b4f34be9e77ff49a5f11a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d5cd66f11e3ece08b4b4f34be9e77ff49a5f11a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d5cd66f11e3ece08b4b4f34be9e77ff49a5f11a/comments", "author": null, "committer": null, "parents": [{"sha": "68d0a3d2797b1fef210c973c1dbf7db2a52ef83a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68d0a3d2797b1fef210c973c1dbf7db2a52ef83a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68d0a3d2797b1fef210c973c1dbf7db2a52ef83a"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "9a8c41acd6599121b0a8a7d364742fc63d566f68", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d5cd66f11e3ece08b4b4f34be9e77ff49a5f11a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d5cd66f11e3ece08b4b4f34be9e77ff49a5f11a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5d5cd66f11e3ece08b4b4f34be9e77ff49a5f11a", "patch": "@@ -1,3 +1,8 @@\n+2002-12-11  Richard Henderson  <rth@redhat.com>\n+\n+\t* tree.h (MODULE_LOCAL_P): Kill.\n+\t* varasm.c (default_binds_local_p_1): Use decl_visibility instead.\n+\n 2002-12-11  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* config/h8300/h8300.md (two define_peephole2): New."}, {"sha": "1dda21c81d775774d6130dca8543b97b01c8bacf", "filename": "gcc/tree.h", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d5cd66f11e3ece08b4b4f34be9e77ff49a5f11a/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d5cd66f11e3ece08b4b4f34be9e77ff49a5f11a/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=5d5cd66f11e3ece08b4b4f34be9e77ff49a5f11a", "patch": "@@ -2402,11 +2402,6 @@ extern tree merge_attributes\t\tPARAMS ((tree, tree));\n extern tree merge_dllimport_decl_attributes PARAMS ((tree, tree));\n #endif\n \n-/* Return true if DECL will be always resolved to a symbol defined in the\n-   same module (shared library or program).  */\n-#define MODULE_LOCAL_P(DECL) \\\n-  (lookup_attribute (\"visibility\", DECL_ATTRIBUTES (DECL)) != NULL)\n-\n /* Return a version of the TYPE, qualified as indicated by the\n    TYPE_QUALS, if one exists.  If no qualified version exists yet,\n    return NULL_TREE.  */"}, {"sha": "8b321af8296cdcd4fdea19f9272e0c7ee5841826", "filename": "gcc/varasm.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d5cd66f11e3ece08b4b4f34be9e77ff49a5f11a/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d5cd66f11e3ece08b4b4f34be9e77ff49a5f11a/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=5d5cd66f11e3ece08b4b4f34be9e77ff49a5f11a", "patch": "@@ -5417,7 +5417,7 @@ default_binds_local_p_1 (exp, shlib)\n   else if (! TREE_PUBLIC (exp))\n     local_p = true;\n   /* A variable is local if the user tells us so.  */\n-  else if (MODULE_LOCAL_P (exp))\n+  else if (decl_visibility (exp) != VISIBILITY_DEFAULT)\n     local_p = true;\n   /* Otherwise, variables defined outside this object may not be local.  */\n   else if (DECL_EXTERNAL (exp))"}]}