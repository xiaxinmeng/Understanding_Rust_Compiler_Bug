{"sha": "efeca0ac4155b76ce713155f190422aac20537c5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWZlY2EwYWM0MTU1Yjc2Y2U3MTMxNTVmMTkwNDIyYWFjMjA1MzdjNQ==", "commit": {"author": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2021-04-29T17:43:00Z"}, "committer": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2021-04-29T17:43:00Z"}, "message": "c++: Overeager use of deleted function before ADL [PR68942]\n\nHere, at template definition time, ordinary name lookup for 'foo(t)'\nfinds only the deleted function, and so we form a CALL_EXPR thereof.\nLater at instantiation time, when initially substituting into this\nCALL_EXPR with T=N::A, we end up calling mark_used on this deleted\nfunction (since it's the only function in the overload set), triggering\na bogus \"use of deleted function error\", before we get to augment the\noverload set via ADL.\n\nThis patch fixes this issue by using the tf_conv flag to disable\nmark_used during the initial substitution into the callee of a\nCALL_EXPR when KOENIG_P, since at this point we're still figuring out\nwhich functions are candidates.\n\ngcc/cp/ChangeLog:\n\n\tPR c++/68942\n\t* pt.c (tsubst_copy_and_build) <case CALL_EXPR>: When KOENIG_P,\n\tset tf_conv during the initial substitution into the function.\n\ngcc/testsuite/ChangeLog:\n\n\tPR c++/68942\n\t* g++.dg/template/koenig12.C: New test.", "tree": {"sha": "cba3a1e0e0c0c78bc56e8513585ae4419c3404e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cba3a1e0e0c0c78bc56e8513585ae4419c3404e4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/efeca0ac4155b76ce713155f190422aac20537c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efeca0ac4155b76ce713155f190422aac20537c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/efeca0ac4155b76ce713155f190422aac20537c5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efeca0ac4155b76ce713155f190422aac20537c5/comments", "author": null, "committer": null, "parents": [{"sha": "f24702258fc78ac37b3e8154d76239cccd30c422", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f24702258fc78ac37b3e8154d76239cccd30c422", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f24702258fc78ac37b3e8154d76239cccd30c422"}], "stats": {"total": 21, "additions": 20, "deletions": 1}, "files": [{"sha": "4e9b40f2164a3762f5ba5e54ded28e5f3de068d6", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efeca0ac4155b76ce713155f190422aac20537c5/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efeca0ac4155b76ce713155f190422aac20537c5/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=efeca0ac4155b76ce713155f190422aac20537c5", "patch": "@@ -20232,7 +20232,11 @@ tsubst_copy_and_build (tree t,\n \t      /* Avoid error about taking the address of a constructor.  */\n \t      function = TREE_OPERAND (function, 0);\n \n-\t    function = tsubst_copy_and_build (function, args, complain,\n+\t    /* When KOENIG_P, we don't want to mark_used the callee before\n+\t       augmenting the overload set via ADL, so during this initial\n+\t       substitution we disable mark_used by setting tf_conv (68942).  */\n+\t    function = tsubst_copy_and_build (function, args,\n+\t\t\t\t\t      complain | (koenig_p * tf_conv),\n \t\t\t\t\t      in_decl,\n \t\t\t\t\t      !qualified_p,\n \t\t\t\t\t      integral_constant_expression_p);"}, {"sha": "fd05ef5719e2dbaf4577cce6523c32d73ffbbc4f", "filename": "gcc/testsuite/g++.dg/template/koenig12.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efeca0ac4155b76ce713155f190422aac20537c5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fkoenig12.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efeca0ac4155b76ce713155f190422aac20537c5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fkoenig12.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fkoenig12.C?ref=efeca0ac4155b76ce713155f190422aac20537c5", "patch": "@@ -0,0 +1,15 @@\n+// PR c++/68942\n+// { dg-do compile { target c++11 } }\n+\n+void foo(...) = delete;\n+\n+template <class T> void lookup(T t) { foo(t); }\n+\n+namespace N {\n+ struct A { };\n+ int foo(A);\n+}\n+\n+int main() {\n+  lookup(N::A{});\n+}"}]}