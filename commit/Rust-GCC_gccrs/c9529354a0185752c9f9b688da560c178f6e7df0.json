{"sha": "c9529354a0185752c9f9b688da560c178f6e7df0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzk1MjkzNTRhMDE4NTc1MmM5ZjliNjg4ZGE1NjBjMTc4ZjZlN2RmMA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-03-14T02:16:38Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-03-14T02:16:38Z"}, "message": "(convert_to_integer): When changing type of truthvalue operation,\n\nchange types of inputs too.\n\nFrom-SVN: r6771", "tree": {"sha": "15921bcd2f67062eed44668b46339c56c3eba8af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/15921bcd2f67062eed44668b46339c56c3eba8af"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c9529354a0185752c9f9b688da560c178f6e7df0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9529354a0185752c9f9b688da560c178f6e7df0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9529354a0185752c9f9b688da560c178f6e7df0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9529354a0185752c9f9b688da560c178f6e7df0/comments", "author": null, "committer": null, "parents": [{"sha": "2e15b172de724f57679d6cf2acba6b366bc4c7dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e15b172de724f57679d6cf2acba6b366bc4c7dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e15b172de724f57679d6cf2acba6b366bc4c7dd"}], "stats": {"total": 26, "additions": 20, "deletions": 6}, "files": [{"sha": "0060b60e37c5a9ed2718bb6cd61227b3578122c0", "filename": "gcc/convert.c", "status": "modified", "additions": 20, "deletions": 6, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9529354a0185752c9f9b688da560c178f6e7df0/gcc%2Fconvert.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9529354a0185752c9f9b688da560c178f6e7df0/gcc%2Fconvert.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconvert.c?ref=c9529354a0185752c9f9b688da560c178f6e7df0", "patch": "@@ -1,5 +1,5 @@\n /* Utility routines for data type conversion for GNU C.\n-   Copyright (C) 1987, 1988, 1991, 1992 Free Software Foundation, Inc.\n+   Copyright (C) 1987, 1988, 1991, 1992, 1994 Free Software Foundation, Inc.\n \n This file is part of GNU C.\n \n@@ -143,16 +143,30 @@ convert_to_integer (type, expr)\n       /* If we are widening the type, put in an explicit conversion.\n \t Similarly if we are not changing the width.  However, if this is\n \t a logical operation that just returns 0 or 1, we can change the\n-\t type of the expression (see below).  */\n+\t type of the expression.  For logical operations, we must\n+\t also change the types of the operands to maintain type\n+\t correctness.  */\n \n-      if (TREE_CODE_CLASS (ex_form) == '<'\n-\t  || ex_form == TRUTH_AND_EXPR || ex_form == TRUTH_ANDIF_EXPR\n-\t  || ex_form == TRUTH_OR_EXPR || ex_form == TRUTH_ORIF_EXPR\n-\t  || ex_form == TRUTH_XOR_EXPR || ex_form == TRUTH_NOT_EXPR)\n+      if (TREE_CODE_CLASS (ex_form) == '<')\n \t{\n \t  TREE_TYPE (expr) = type;\n \t  return expr;\n \t}\n+      else if (ex_form == TRUTH_AND_EXPR || ex_form == TRUTH_ANDIF_EXPR\n+\t       || ex_form == TRUTH_OR_EXPR || ex_form == TRUTH_ORIF_EXPR\n+\t       || ex_form == TRUTH_XOR_EXPR)\n+\t{\n+\t  TREE_OPERAND (expr, 0) = convert (type, TREE_OPERAND (expr, 0));\n+\t  TREE_OPERAND (expr, 1) = convert (type, TREE_OPERAND (expr, 1));\n+\t  TREE_TYPE (expr) = type;\n+\t  return expr;\n+\t}\n+      else if (ex_form == TRUTH_NOT_EXPR)\n+\t{\n+\t  TREE_OPERAND (expr, 0) = convert (type, TREE_OPERAND (expr, 0));\n+\t  TREE_TYPE (expr) = type;\n+\t  return expr;\n+\t}\n       else if (outprec >= inprec)\n \treturn build1 (NOP_EXPR, type, expr);\n "}]}