{"sha": "ef39bb951c50c757ca7f394ef8c832608ea2054f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWYzOWJiOTUxYzUwYzc1N2NhN2YzOTRlZjhjODMyNjA4ZWEyMDU0Zg==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-05-12T18:47:43Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-05-12T18:47:43Z"}, "message": "(copy_loop_body): Delete May 10 change.\n\nFrom-SVN: r4432", "tree": {"sha": "674b2b49a5ea5e4be2a6af4c7b93c2b48b907b0a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/674b2b49a5ea5e4be2a6af4c7b93c2b48b907b0a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ef39bb951c50c757ca7f394ef8c832608ea2054f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef39bb951c50c757ca7f394ef8c832608ea2054f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef39bb951c50c757ca7f394ef8c832608ea2054f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef39bb951c50c757ca7f394ef8c832608ea2054f/comments", "author": null, "committer": null, "parents": [{"sha": "a7d904019909ed6296425e321a61a779efdb0d4b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7d904019909ed6296425e321a61a779efdb0d4b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7d904019909ed6296425e321a61a779efdb0d4b"}], "stats": {"total": 23, "additions": 14, "deletions": 9}, "files": [{"sha": "d93e3bac95a307ab7a8d5e60125f5f3ded8703fd", "filename": "gcc/unroll.c", "status": "modified", "additions": 14, "deletions": 9, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef39bb951c50c757ca7f394ef8c832608ea2054f/gcc%2Funroll.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef39bb951c50c757ca7f394ef8c832608ea2054f/gcc%2Funroll.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Funroll.c?ref=ef39bb951c50c757ca7f394ef8c832608ea2054f", "patch": "@@ -1609,9 +1609,7 @@ copy_loop_body (copy_start, copy_end, map, exit_label, last_iteration,\n \t      pattern = copy_rtx_and_substitute (pattern, map);\n \t      copy = emit_insn (pattern);\n \t    }\n-\t  /* We must copy the REG_NOTES now, because the register mapping\n-\t     might change later.  */\n-\t  REG_NOTES (copy) = copy_rtx_and_substitute (REG_NOTES (insn), map);\n+\t  /* REG_NOTES will be copied later.  */\n \t  \n #ifdef HAVE_cc0\n \t  /* If this insn is setting CC0, it may need to look at\n@@ -1655,9 +1653,6 @@ copy_loop_body (copy_start, copy_end, map, exit_label, last_iteration,\n \tcase JUMP_INSN:\n \t  pattern = copy_rtx_and_substitute (PATTERN (insn), map);\n \t  copy = emit_jump_insn (pattern);\n-\t  /* We must copy the REG_NOTES now, because the register mapping\n-\t     might change later.  */\n-\t  REG_NOTES (copy) = copy_rtx_and_substitute (REG_NOTES (insn), map);\n \n \t  if (JUMP_LABEL (insn) == start_label && insn == copy_end\n \t      && ! last_iteration)\n@@ -1759,9 +1754,6 @@ copy_loop_body (copy_start, copy_end, map, exit_label, last_iteration,\n \tcase CALL_INSN:\n \t  pattern = copy_rtx_and_substitute (PATTERN (insn), map);\n \t  copy = emit_call_insn (pattern);\n-\t  /* We must copy the REG_NOTES now, because the register mapping\n-\t     might change later.  */\n-\t  REG_NOTES (copy) = copy_rtx_and_substitute (REG_NOTES (insn), map);\n \n #ifdef HAVE_cc0\n \t  if (cc0_insn)\n@@ -1812,6 +1804,19 @@ copy_loop_body (copy_start, copy_end, map, exit_label, last_iteration,\n     }\n   while (insn != copy_end);\n   \n+  /* Now copy the REG_NOTES.  */\n+  insn = copy_start;\n+  do\n+    {\n+      insn = NEXT_INSN (insn);\n+      if ((GET_CODE (insn) == INSN || GET_CODE (insn) == JUMP_INSN\n+\t   || GET_CODE (insn) == CALL_INSN)\n+\t  && map->insn_map[INSN_UID (insn)])\n+\tREG_NOTES (map->insn_map[INSN_UID (insn)])\n+\t  = copy_rtx_and_substitute (REG_NOTES (insn), map);\n+    }\n+  while (insn != copy_end);\n+\n   /* There may be notes between copy_notes_from and loop_end.  Emit a copy of\n      each of these notes here, since there may be some important ones, such as\n      NOTE_INSN_BLOCK_END notes, in this group.  We don't do this on the last"}]}