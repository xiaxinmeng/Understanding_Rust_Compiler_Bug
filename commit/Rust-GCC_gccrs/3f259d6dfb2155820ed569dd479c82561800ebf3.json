{"sha": "3f259d6dfb2155820ed569dd479c82561800ebf3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2YyNTlkNmRmYjIxNTU4MjBlZDU2OWRkNDc5YzgyNTYxODAwZWJmMw==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "1993-10-06T17:49:06Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "1993-10-06T17:49:06Z"}, "message": "Let tm file define MAX_*_TYPE_SIZE if *_TYPE_SIZE depends upon target_flags\n\nFrom-SVN: r5640", "tree": {"sha": "84f5810200dd716049f3e518f1d0d147f83d5040", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/84f5810200dd716049f3e518f1d0d147f83d5040"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3f259d6dfb2155820ed569dd479c82561800ebf3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f259d6dfb2155820ed569dd479c82561800ebf3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f259d6dfb2155820ed569dd479c82561800ebf3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f259d6dfb2155820ed569dd479c82561800ebf3/comments", "author": null, "committer": null, "parents": [{"sha": "176c9e6beb33949a252109a2efefbed9045f9c7b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/176c9e6beb33949a252109a2efefbed9045f9c7b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/176c9e6beb33949a252109a2efefbed9045f9c7b"}], "stats": {"total": 26, "additions": 21, "deletions": 5}, "files": [{"sha": "0914ee354727777ed983e396d1c95419afd6eee1", "filename": "gcc/cexp.y", "status": "modified", "additions": 21, "deletions": 5, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f259d6dfb2155820ed569dd479c82561800ebf3/gcc%2Fcexp.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f259d6dfb2155820ed569dd479c82561800ebf3/gcc%2Fcexp.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcexp.y?ref=3f259d6dfb2155820ed569dd479c82561800ebf3", "patch": "@@ -99,6 +99,22 @@ extern int traditional;\n #define WCHAR_TYPE_SIZE INT_TYPE_SIZE\n #endif\n \n+#ifndef MAX_CHAR_TYPE_SIZE\n+#define MAX_CHAR_TYPE_SIZE CHAR_TYPE_SIZE\n+#endif\n+\n+#ifndef MAX_INT_TYPE_SIZE\n+#define MAX_INT_TYPE_SIZE INT_TYPE_SIZE\n+#endif\n+\n+#ifndef MAX_LONG_TYPE_SIZE\n+#define MAX_LONG_TYPE_SIZE LONG_TYPE_SIZE\n+#endif\n+\n+#ifndef MAX_WCHAR_TYPE_SIZE\n+#define MAX_WCHAR_TYPE_SIZE WCHAR_TYPE_SIZE\n+#endif\n+\n /* Yield nonzero if adding two numbers with A's and B's signs can yield a\n    number with SUM's sign, where A, B, and SUM are all C integers.  */\n #define possible_sum_sign(a, b, sum) ((((a) ^ (b)) | ~ ((a) ^ (sum))) < 0)\n@@ -533,21 +549,21 @@ yylex ()\n     {\n       register int result = 0;\n       register num_chars = 0;\n-      unsigned width = CHAR_TYPE_SIZE;\n+      unsigned width = MAX_CHAR_TYPE_SIZE;\n       int max_chars;\n       char *token_buffer;\n \n       if (wide_flag)\n \t{\n-\t  width = WCHAR_TYPE_SIZE;\n+\t  width = MAX_WCHAR_TYPE_SIZE;\n #ifdef MULTIBYTE_CHARS\n \t  max_chars = MB_CUR_MAX;\n #else\n \t  max_chars = 1;\n #endif\n \t}\n       else\n-\tmax_chars = LONG_TYPE_SIZE / width;\n+\tmax_chars = MAX_LONG_TYPE_SIZE / width;\n \n       token_buffer = (char *) alloca (max_chars + 1);\n \n@@ -790,9 +806,9 @@ parse_escape (string_ptr)\n \t\tbreak;\n \t      }\n \t  }\n-\tif ((i & ~((1 << CHAR_TYPE_SIZE) - 1)) != 0)\n+\tif ((i & ~((1 << MAX_CHAR_TYPE_SIZE) - 1)) != 0)\n \t  {\n-\t    i &= (1 << CHAR_TYPE_SIZE) - 1;\n+\t    i &= (1 << MAX_CHAR_TYPE_SIZE) - 1;\n \t    warning (\"octal character constant does not fit in a byte\");\n \t  }\n \treturn i;"}]}