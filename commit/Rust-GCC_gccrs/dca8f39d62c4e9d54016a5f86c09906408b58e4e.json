{"sha": "dca8f39d62c4e9d54016a5f86c09906408b58e4e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGNhOGYzOWQ2MmM0ZTlkNTQwMTZhNWY4NmMwOTkwNjQwOGI1OGU0ZQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2020-01-16T15:53:39Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-06-03T10:01:47Z"}, "message": "[Ada] Small housekeeping work in Check_Private_View\n\n2020-06-03  Eric Botcazou  <ebotcazou@adacore.com>\n\ngcc/ada/\n\n\t* sem_ch12.adb (Check_Private_View): Clean up implementation of\n\tsecond main case, when the generic sees the private declaration.", "tree": {"sha": "121d2056eba91d0dbc2e02d869ee3098b7178f6a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/121d2056eba91d0dbc2e02d869ee3098b7178f6a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dca8f39d62c4e9d54016a5f86c09906408b58e4e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dca8f39d62c4e9d54016a5f86c09906408b58e4e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dca8f39d62c4e9d54016a5f86c09906408b58e4e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dca8f39d62c4e9d54016a5f86c09906408b58e4e/comments", "author": null, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3f06f6c30a8c168388886c13785597e56b398981", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f06f6c30a8c168388886c13785597e56b398981", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f06f6c30a8c168388886c13785597e56b398981"}], "stats": {"total": 28, "additions": 9, "deletions": 19}, "files": [{"sha": "71e1212de66bdcf8e9ddf7b7e7107f5db78278bd", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 9, "deletions": 19, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dca8f39d62c4e9d54016a5f86c09906408b58e4e/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dca8f39d62c4e9d54016a5f86c09906408b58e4e/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=dca8f39d62c4e9d54016a5f86c09906408b58e4e", "patch": "@@ -7431,35 +7431,25 @@ package body Sem_Ch12 is\n            and then Present (Full_View (T))\n            and then not In_Open_Scopes (Scope (T))\n          then\n-            --  In the generic, the full type was visible. Save the private\n-            --  entity, for subsequent exchange.\n+            --  In the generic, the full declaration was visible\n \n             Switch_View (T);\n \n          elsif Has_Private_View (N)\n            and then not Is_Private_Type (T)\n            and then not Has_Been_Exchanged (T)\n-           and then Etype (Get_Associated_Node (N)) /= T\n+           and then (not In_Open_Scopes (Scope (T))\n+                      or else Nkind (Parent (N)) = N_Subtype_Declaration)\n          then\n-            --  Only the private declaration was visible in the generic. If\n-            --  the type appears in a subtype declaration, the subtype in the\n+            --  In the generic, only the private declaration was visible\n+\n+            --  If the type appears in a subtype declaration, the subtype in\n             --  instance must have a view compatible with that of its parent,\n             --  which must be exchanged (see corresponding code in Restore_\n-            --  Private_Views). Otherwise, if the type is defined in a parent\n-            --  unit, leave full visibility within instance, which is safe.\n-\n-            if In_Open_Scopes (Scope (Base_Type (T)))\n-              and then not Is_Private_Type (Base_Type (T))\n-              and then Comes_From_Source (Base_Type (T))\n-            then\n-               null;\n+            --  Private_Views) so we make an exception to the open scope rule.\n \n-            elsif Nkind (Parent (N)) = N_Subtype_Declaration\n-              or else not In_Private_Part (Scope (Base_Type (T)))\n-            then\n-               Prepend_Elmt (T, Exchanged_Views);\n-               Exchange_Declarations (Etype (Get_Associated_Node (N)));\n-            end if;\n+            Prepend_Elmt (T, Exchanged_Views);\n+            Exchange_Declarations (Etype (Get_Associated_Node (N)));\n \n          --  For composite types with inconsistent representation exchange\n          --  component types accordingly."}]}