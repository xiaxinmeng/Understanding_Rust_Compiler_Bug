{"sha": "c23bb84bd333c756c82c53c076befae20804b6cb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzIzYmI4NGJkMzMzYzc1NmM4MmM1M2MwNzZiZWZhZTIwODA0YjZjYg==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2001-08-28T01:32:10Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2001-08-28T01:32:10Z"}, "message": "flow.c (redirect_edge_succ_nodup): Return new edge.\n\n        * flow.c (redirect_edge_succ_nodup): Return new edge.\n        (try_simplify_condjump): Use new edge.\n        * basic-block.h (redirect_edge_succ_nodup): Update prototype.\n\nFrom-SVN: r45222", "tree": {"sha": "aa4a146075ee60eeed30ad01f50c72a006080fae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aa4a146075ee60eeed30ad01f50c72a006080fae"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c23bb84bd333c756c82c53c076befae20804b6cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c23bb84bd333c756c82c53c076befae20804b6cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c23bb84bd333c756c82c53c076befae20804b6cb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c23bb84bd333c756c82c53c076befae20804b6cb/comments", "author": null, "committer": null, "parents": [{"sha": "b5a696fb77de13c828495626919dcd1f5507fddc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5a696fb77de13c828495626919dcd1f5507fddc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5a696fb77de13c828495626919dcd1f5507fddc"}], "stats": {"total": 26, "additions": 17, "deletions": 9}, "files": [{"sha": "ec8504bd9aa5d2d270ed463e73b4aca35611acee", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c23bb84bd333c756c82c53c076befae20804b6cb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c23bb84bd333c756c82c53c076befae20804b6cb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c23bb84bd333c756c82c53c076befae20804b6cb", "patch": "@@ -1,5 +1,9 @@\n 2001-08-27  Roman Zippel  <zippel@linux-m68k.org>\n-        \n+\n+\t* flow.c (redirect_edge_succ_nodup): Return new edge.\n+\t(try_simplify_condjump): Use new edge.\n+\t* basic-block.h (redirect_edge_succ_nodup): Update prototype.\n+\n \t* cse.c (cse_basic_block): Skip note instructions.\n \n 2001-08-27  Richard Henderson  <rth@redhat.com>\n@@ -67,7 +71,7 @@\n \n 2001-08-27  Vladimir Makarov  <vmakarov@touchme.toronto.redhat.com>\n \n-        * rtl.def (DEFINE_CPU_UNIT, DEFINE_QUERY_CPU_UNIT, EXCLUSION_SET,\n+\t* rtl.def (DEFINE_CPU_UNIT, DEFINE_QUERY_CPU_UNIT, EXCLUSION_SET,\n \tPRESENCE_SET, ABSENCE_SET, DEFINE_BYPASS, DEFINE_AUTOMATON,\n \tAUTOMATA_OPTION, DEFINE_RESERVATION, DEFINE_INSN_RESERVATION): New\n \tRTL constructions.\n@@ -92,7 +96,7 @@\n \n \t* rtl.h (LINK_COST_ZERO, LINK_COST_FREE): Remove them.\n \t\n-        * sched-int.h: (curr_state): Add the external definition for\n+\t* sched-int.h: (curr_state): Add the external definition for\n \tautomaton pipeline interface.\n \t(haifa_insn_data): Add comments for members blockage and units.\n \t\n@@ -111,7 +115,7 @@\n \tfirst_cycle_multipass_dfa_lookahead, init_dfa_bubbles,\n \tdfa_bubble): New members in gcc_target.sched.\n \t\n-        * haifa-sched.c (insert_schedule_bubbles_p): New variable.\n+\t* haifa-sched.c (insert_schedule_bubbles_p): New variable.\n \t(MAX_INSN_QUEUE_INDEX): New macro for automaton interface.\n \t(insn_queue): Redefine it as pointer to array.\n \t(NEXT_Q, NEXT_Q_AFTER): Use MAX_INSN_QUEUE_INDEX instead of\n@@ -153,7 +157,7 @@\n \t(get_visual_tbl_length): Add code for automaton interface.\n \t(target_units, print_block_visualization):  Add comments.\n \t\n-        * Makefile.in (GETRUNTIME, HASHTAB, HOST_GETRUNTIME, HOST_HASHTAB,\n+\t* Makefile.in (GETRUNTIME, HASHTAB, HOST_GETRUNTIME, HOST_HASHTAB,\n \tUSE_HOST_GETRUNTIME, USE_HOST_HASHTAB, HOST_VARRAY): New variables.\n \t(sched-rgn.o, sched-vis.o): Add new dependency file target.h.\n \t(getruntime.o, genautomata.o): New entries."}, {"sha": "295748b3034cab2057e3bbf3106c2aa21b7b40c9", "filename": "gcc/basic-block.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c23bb84bd333c756c82c53c076befae20804b6cb/gcc%2Fbasic-block.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c23bb84bd333c756c82c53c076befae20804b6cb/gcc%2Fbasic-block.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbasic-block.h?ref=c23bb84bd333c756c82c53c076befae20804b6cb", "patch": "@@ -303,7 +303,7 @@ extern void make_edge\t\t\tPARAMS ((sbitmap *, basic_block,\n \t\t\t\t\t\t basic_block, int));\n extern void remove_edge\t\t\tPARAMS ((edge));\n extern void redirect_edge_succ\t\tPARAMS ((edge, basic_block));\n-extern void redirect_edge_succ_nodup\tPARAMS ((edge, basic_block));\n+extern edge redirect_edge_succ_nodup\tPARAMS ((edge, basic_block));\n extern void redirect_edge_pred\t\tPARAMS ((edge, basic_block));\n extern void create_basic_block\t\tPARAMS ((int, rtx, rtx, rtx));\n extern int flow_delete_block\t\tPARAMS ((basic_block));"}, {"sha": "d2f37e5f2d45fdc1412aaff9bbe726e3fb53247b", "filename": "gcc/flow.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c23bb84bd333c756c82c53c076befae20804b6cb/gcc%2Fflow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c23bb84bd333c756c82c53c076befae20804b6cb/gcc%2Fflow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflow.c?ref=c23bb84bd333c756c82c53c076befae20804b6cb", "patch": "@@ -3335,8 +3335,10 @@ try_simplify_condjump (cbranch_block)\n   /* Success.  Update the CFG to match.  Note that after this point\n      the edge variable names appear backwards; the redirection is done\n      this way to preserve edge profile data.  */\n-  redirect_edge_succ_nodup (cbranch_jump_edge, cbranch_dest_block);\n-  redirect_edge_succ_nodup (cbranch_fallthru_edge, jump_dest_block);\n+  cbranch_jump_edge = redirect_edge_succ_nodup (cbranch_jump_edge,\n+\t\t\t\t\t\tcbranch_dest_block);\n+  cbranch_fallthru_edge = redirect_edge_succ_nodup (cbranch_fallthru_edge,\n+\t\t\t\t\t\t    jump_dest_block);\n   cbranch_jump_edge->flags |= EDGE_FALLTHRU;\n   cbranch_fallthru_edge->flags &= ~EDGE_FALLTHRU;\n \n@@ -9029,7 +9031,7 @@ redirect_edge_succ (e, new_succ)\n \n /* Like previous but avoid possible dupplicate edge.  */\n \n-void\n+edge\n redirect_edge_succ_nodup (e, new_succ)\n      edge e;\n      basic_block new_succ;\n@@ -9045,9 +9047,11 @@ redirect_edge_succ_nodup (e, new_succ)\n       s->probability += e->probability;\n       s->count += e->count;\n       remove_edge (e);\n+      e = s;\n     }\n   else\n     redirect_edge_succ (e, new_succ);\n+  return e;\n }\n \n /* Redirect an edge's predecessor from one block to another.  */"}]}