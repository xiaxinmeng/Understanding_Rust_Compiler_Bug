{"sha": "a386566118054e08bb733f1248649fb6847c407e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTM4NjU2NjExODA1NGUwOGJiNzMzZjEyNDg2NDlmYjY4NDdjNDA3ZQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-11-26T09:51:51Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-11-26T09:51:51Z"}, "message": "gimple-fold: Use DECL_PADDING_P in __builtin_clear_padding\n\nOn Wed, Nov 25, 2020 at 12:26:17PM -0500, Jason Merrill wrote:\n> I think you want to check DECL_PADDING_P here; the C and C++ front ends set\n> it on unnamed bit-fields, and that's what is_empty_type looks at.\n\nWhile the above has been written in the context of __builtin_bit_cast patch,\nI think it applies to __builtin_clear_padding too.\n\nSo this patch implements that.  The C FE sets DECL_PADDING_P solely on the\nDECL_BIT_FIELD !DECL_NAME FIELD_DECLs, the C++ FE sets it on those and in\nanother spot I haven't really figured out what it is about.\n\n2020-11-26  Jakub Jelinek  <jakub@redhat.com>\n\n\t* gimple-fold.c (clear_padding_union): Ignore DECL_PADDING_P\n\tfields.\n\t(clear_padding_type): Ignore DECL_PADDING_P fields, rather than\n\tDECL_BIT_FIELD with NULL DECL_NAME.", "tree": {"sha": "3fb332683d5f0f66a34bce27642717610328d715", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3fb332683d5f0f66a34bce27642717610328d715"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a386566118054e08bb733f1248649fb6847c407e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a386566118054e08bb733f1248649fb6847c407e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a386566118054e08bb733f1248649fb6847c407e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a386566118054e08bb733f1248649fb6847c407e/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "39f5e9aded23e8b7e0e7080fc6020478b9c5b7b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39f5e9aded23e8b7e0e7080fc6020478b9c5b7b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39f5e9aded23e8b7e0e7080fc6020478b9c5b7b5"}], "stats": {"total": 6, "additions": 2, "deletions": 4}, "files": [{"sha": "a821b649bf8f385e12f427acb941910620dd6dfd", "filename": "gcc/gimple-fold.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a386566118054e08bb733f1248649fb6847c407e/gcc%2Fgimple-fold.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a386566118054e08bb733f1248649fb6847c407e/gcc%2Fgimple-fold.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-fold.c?ref=a386566118054e08bb733f1248649fb6847c407e", "patch": "@@ -4327,7 +4327,7 @@ clear_padding_union (clear_padding_struct *buf, tree type, HOST_WIDE_INT sz)\n     }\n \n   for (tree field = TYPE_FIELDS (type); field; field = DECL_CHAIN (field))\n-    if (TREE_CODE (field) == FIELD_DECL)\n+    if (TREE_CODE (field) == FIELD_DECL && !DECL_PADDING_P (field))\n       {\n \tif (DECL_SIZE_UNIT (field) == NULL_TREE)\n \t  {\n@@ -4455,13 +4455,11 @@ clear_padding_type (clear_padding_struct *buf, tree type, HOST_WIDE_INT sz)\n       HOST_WIDE_INT cur_pos;\n       cur_pos = 0;\n       for (tree field = TYPE_FIELDS (type); field; field = DECL_CHAIN (field))\n-\tif (TREE_CODE (field) == FIELD_DECL)\n+\tif (TREE_CODE (field) == FIELD_DECL && !DECL_PADDING_P (field))\n \t  {\n \t    tree ftype = TREE_TYPE (field);\n \t    if (DECL_BIT_FIELD (field))\n \t      {\n-\t\tif (DECL_NAME (field) == NULL_TREE)\n-\t\t  continue;\n \t\tHOST_WIDE_INT fldsz = TYPE_PRECISION (ftype);\n \t\tif (fldsz == 0)\n \t\t  continue;"}]}