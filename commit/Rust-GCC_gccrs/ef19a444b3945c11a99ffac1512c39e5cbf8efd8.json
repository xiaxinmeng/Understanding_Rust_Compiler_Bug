{"sha": "ef19a444b3945c11a99ffac1512c39e5cbf8efd8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWYxOWE0NDRiMzk0NWMxMWE5OWZmYWMxNTEyYzM5ZTVjYmY4ZWZkOA==", "commit": {"author": {"name": "Bernd Edlinger", "email": "bernd.edlinger@hotmail.de", "date": "2016-08-09T17:58:00Z"}, "committer": {"name": "Bernd Edlinger", "email": "edlinger@gcc.gnu.org", "date": "2016-08-09T17:58:00Z"}, "message": "re PR bootstrap/72833 (error in fortran/parse.c (unexpected_eof) on Mac OS X 10.7)\n\n2016-08-09  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n\n        PR bootstrap/72833\n        * fixincl.tpl (version-compare): Fix generation with autogen 5.18.\n        * inclhack.def (darwin_longjmp_noreturn): New fix.\n        * fixincl.x: Regenerated.\n        * tests/base/i386/setjmp.h [DARWIN_LONGJMP_NORETURN_CHECK]: new test.\n\nFrom-SVN: r239301", "tree": {"sha": "1d6018ced7a53f2e2e09b4f3cfda9db1d5d3a773", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1d6018ced7a53f2e2e09b4f3cfda9db1d5d3a773"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ef19a444b3945c11a99ffac1512c39e5cbf8efd8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef19a444b3945c11a99ffac1512c39e5cbf8efd8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef19a444b3945c11a99ffac1512c39e5cbf8efd8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef19a444b3945c11a99ffac1512c39e5cbf8efd8/comments", "author": {"login": "bernd-edlinger", "id": 17638929, "node_id": "MDQ6VXNlcjE3NjM4OTI5", "avatar_url": "https://avatars.githubusercontent.com/u/17638929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bernd-edlinger", "html_url": "https://github.com/bernd-edlinger", "followers_url": "https://api.github.com/users/bernd-edlinger/followers", "following_url": "https://api.github.com/users/bernd-edlinger/following{/other_user}", "gists_url": "https://api.github.com/users/bernd-edlinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/bernd-edlinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bernd-edlinger/subscriptions", "organizations_url": "https://api.github.com/users/bernd-edlinger/orgs", "repos_url": "https://api.github.com/users/bernd-edlinger/repos", "events_url": "https://api.github.com/users/bernd-edlinger/events{/privacy}", "received_events_url": "https://api.github.com/users/bernd-edlinger/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "408702b44570a4c92e4f9d05cd97f98cf12a4eb4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/408702b44570a4c92e4f9d05cd97f98cf12a4eb4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/408702b44570a4c92e4f9d05cd97f98cf12a4eb4"}], "stats": {"total": 103, "additions": 95, "deletions": 8}, "files": [{"sha": "b9430b71d4ab16417a576083b30bc706f8d0f94f", "filename": "fixincludes/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef19a444b3945c11a99ffac1512c39e5cbf8efd8/fixincludes%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef19a444b3945c11a99ffac1512c39e5cbf8efd8/fixincludes%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2FChangeLog?ref=ef19a444b3945c11a99ffac1512c39e5cbf8efd8", "patch": "@@ -1,3 +1,11 @@\n+2016-08-09  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n+\n+\tPR bootstrap/72833\n+\t* fixincl.tpl (version-compare): Fix generation with autogen 5.18.\n+\t* inclhack.def (darwin_longjmp_noreturn): New fix.\n+\t* fixincl.x: Regenerated.\n+\t* tests/base/i386/setjmp.h [DARWIN_LONGJMP_NORETURN_CHECK]: new test.\n+\n 2016-08-01  Muhammad Bilal  <mbilal@codesourcery.com>\n \n \t* fixinc.in: Use --parents option to make LIB directory."}, {"sha": "3d70cabc7fd6dd0e63033e6523fac1dca01b285a", "filename": "fixincludes/fixincl.tpl", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef19a444b3945c11a99ffac1512c39e5cbf8efd8/fixincludes%2Ffixincl.tpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef19a444b3945c11a99ffac1512c39e5cbf8efd8/fixincludes%2Ffixincl.tpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ffixincl.tpl?ref=ef19a444b3945c11a99ffac1512c39e5cbf8efd8", "patch": "@@ -1,7 +1,7 @@\n [= AutoGen5 Template -*- Mode: C -*-\n x=fixincl.x =]\n [=\n- (if (version-compare >= autogen-version \"5.18\")\n+ (if (version-compare >= autogen-version \"5.18.1\")\n      (dne \"-D\" \" * \" \"/* \")\n      (dne \" * \" \"/* \") ) =]\n  */"}, {"sha": "6cd1b608b6abd5291105a4a24d60d747cdcf5eaf", "filename": "fixincludes/fixincl.x", "status": "modified", "additions": 57, "deletions": 7, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef19a444b3945c11a99ffac1512c39e5cbf8efd8/fixincludes%2Ffixincl.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef19a444b3945c11a99ffac1512c39e5cbf8efd8/fixincludes%2Ffixincl.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ffixincl.x?ref=ef19a444b3945c11a99ffac1512c39e5cbf8efd8", "patch": "@@ -1,12 +1,12 @@\n /*  -*- buffer-read-only: t -*- vi: set ro:\n- * \n+ *\n  * DO NOT EDIT THIS FILE   (fixincl.x)\n- * \n- * It has been AutoGen-ed  June 10, 2016 at 12:56:52 PM by AutoGen 5.18.3\n+ *\n+ * It has been AutoGen-ed  August  8, 2016 at 08:46:37 PM by AutoGen 5.18\n  * From the definitions    inclhack.def\n  * and the template file   fixincl\n  */\n-/* DO NOT SVN-MERGE THIS FILE, EITHER Fri Jun 10 12:56:52 UTC 2016\n+/* DO NOT SVN-MERGE THIS FILE, EITHER Mon Aug  8 20:46:37 CEST 2016\n  *\n  * You must regenerate it.  Use the ./genfixes script.\n  *\n@@ -15,7 +15,7 @@\n  * certain ANSI-incompatible system header files which are fixed to work\n  * correctly with ANSI C and placed in a directory that GNU C will search.\n  *\n- * This file contains 235 fixup descriptions.\n+ * This file contains 236 fixup descriptions.\n  *\n  * See README for more information.\n  *\n@@ -2697,6 +2697,50 @@ static const char* apzDarwin_Gcc4_BreakagePatch[] = {\n     \"((__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 1))\",\n     (char*)NULL };\n \n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Darwin_Longjmp_Noreturn fix\n+ */\n+tSCC zDarwin_Longjmp_NoreturnName[] =\n+     \"darwin_longjmp_noreturn\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zDarwin_Longjmp_NoreturnList[] =\n+  \"i386/setjmp.h\\0\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+tSCC* apzDarwin_Longjmp_NoreturnMachs[] = {\n+        \"*-*-darwin*\",\n+        (const char*)NULL };\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zDarwin_Longjmp_NoreturnSelect0[] =\n+       \"(.*longjmp\\\\(.*jmp_buf.*[^)]+\\\\));\";\n+\n+/*\n+ *  content bypass pattern - skip fix if pattern found\n+ */\n+tSCC zDarwin_Longjmp_NoreturnBypass0[] =\n+       \"__dead2\";\n+\n+#define    DARWIN_LONGJMP_NORETURN_TEST_CT  2\n+static tTestDesc aDarwin_Longjmp_NoreturnTests[] = {\n+  { TT_NEGREP,   zDarwin_Longjmp_NoreturnBypass0, (regex_t*)NULL },\n+  { TT_EGREP,    zDarwin_Longjmp_NoreturnSelect0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Darwin_Longjmp_Noreturn\n+ */\n+static const char* apzDarwin_Longjmp_NoreturnPatch[] = {\n+    \"format\",\n+    \"%1 __attribute__ ((__noreturn__));\",\n+    (char*)NULL };\n+\n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of Darwin_Private_Extern fix\n@@ -9633,9 +9677,9 @@ static const char* apzX11_SprintfPatch[] = {\n  *\n  *  List of all fixes\n  */\n-#define REGEX_COUNT          272\n+#define REGEX_COUNT          274\n #define MACH_LIST_SIZE_LIMIT 187\n-#define FIX_COUNT            235\n+#define FIX_COUNT            236\n \n /*\n  *  Enumerate the fixes\n@@ -9703,6 +9747,7 @@ typedef enum {\n     DARWIN_9_LONG_DOUBLE_FUNCS_2_FIXIDX,\n     DARWIN_EXTERNC_FIXIDX,\n     DARWIN_GCC4_BREAKAGE_FIXIDX,\n+    DARWIN_LONGJMP_NORETURN_FIXIDX,\n     DARWIN_PRIVATE_EXTERN_FIXIDX,\n     DARWIN_STDINT_1_FIXIDX,\n     DARWIN_STDINT_2_FIXIDX,\n@@ -10189,6 +10234,11 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      DARWIN_GCC4_BREAKAGE_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aDarwin_Gcc4_BreakageTests,   apzDarwin_Gcc4_BreakagePatch, 0 },\n \n+  {  zDarwin_Longjmp_NoreturnName,    zDarwin_Longjmp_NoreturnList,\n+     apzDarwin_Longjmp_NoreturnMachs,\n+     DARWIN_LONGJMP_NORETURN_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aDarwin_Longjmp_NoreturnTests,   apzDarwin_Longjmp_NoreturnPatch, 0 },\n+\n   {  zDarwin_Private_ExternName,    zDarwin_Private_ExternList,\n      apzDarwin_Private_ExternMachs,\n      DARWIN_PRIVATE_EXTERN_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,"}, {"sha": "2f7588028311534da8c59f9838110ec1d8748ace", "filename": "fixincludes/inclhack.def", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef19a444b3945c11a99ffac1512c39e5cbf8efd8/fixincludes%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef19a444b3945c11a99ffac1512c39e5cbf8efd8/fixincludes%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Finclhack.def?ref=ef19a444b3945c11a99ffac1512c39e5cbf8efd8", "patch": "@@ -1394,6 +1394,21 @@ fix = {\n   \t      \"(__GNUC_MINOR__ >= 1)\\n\";\n };\n \n+/*\n+ *  Before Mac OS X 10.8 <i386/setjmp.h> doesn't mark longjump noreturn.\n+ */\n+fix = {\n+    hackname  = darwin_longjmp_noreturn;\n+    mach      = \"*-*-darwin*\";\n+    files     = \"i386/setjmp.h\";\n+    bypass    = \"__dead2\";\n+    select    = \"(.*longjmp\\\\(.*jmp_buf.*[^)]+\\\\));\";\n+    c_fix     = format;\n+    c_fix_arg = \"%1 __attribute__ ((__noreturn__));\";\n+\n+    test_text = \"void siglongjmp(sigjmp_buf, int);\";\n+};\n+\n /*\n  *  __private_extern__ doesn't exist in FSF GCC.  Even if it did,\n  *  why would you ever put it in a system header file?"}, {"sha": "3fd30258500536a38c5bf3508e045ad188e1e00a", "filename": "fixincludes/tests/base/i386/setjmp.h", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef19a444b3945c11a99ffac1512c39e5cbf8efd8/fixincludes%2Ftests%2Fbase%2Fi386%2Fsetjmp.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef19a444b3945c11a99ffac1512c39e5cbf8efd8/fixincludes%2Ftests%2Fbase%2Fi386%2Fsetjmp.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ftests%2Fbase%2Fi386%2Fsetjmp.h?ref=ef19a444b3945c11a99ffac1512c39e5cbf8efd8", "patch": "@@ -0,0 +1,14 @@\n+/*  DO NOT EDIT THIS FILE.\n+\n+    It has been auto-edited by fixincludes from:\n+\n+\t\"fixinc/tests/inc/i386/setjmp.h\"\n+\n+    This had to be done to correct non-standard usages in the\n+    original, manufacturer supplied header file.  */\n+\n+\n+\n+#if defined( DARWIN_LONGJMP_NORETURN_CHECK )\n+void siglongjmp(sigjmp_buf, int) __attribute__ ((__noreturn__));\n+#endif  /* DARWIN_LONGJMP_NORETURN_CHECK */"}]}