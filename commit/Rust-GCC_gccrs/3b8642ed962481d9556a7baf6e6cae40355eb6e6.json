{"sha": "3b8642ed962481d9556a7baf6e6cae40355eb6e6", "node_id": "C_kwDOANBUbNoAKDNiODY0MmVkOTYyNDgxZDk1NTZhN2JhZjZlNmNhZTQwMzU1ZWI2ZTY", "commit": {"author": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2022-08-16T12:21:16Z"}, "committer": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2022-08-16T12:21:24Z"}, "message": "unsafe: Allow calls to safe intrinsics", "tree": {"sha": "10146493fe6d740f57545c8001aca1fd4e2f4ec6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/10146493fe6d740f57545c8001aca1fd4e2f4ec6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3b8642ed962481d9556a7baf6e6cae40355eb6e6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b8642ed962481d9556a7baf6e6cae40355eb6e6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b8642ed962481d9556a7baf6e6cae40355eb6e6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b8642ed962481d9556a7baf6e6cae40355eb6e6/comments", "author": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "021e4953390da748515debfc8973149457d3118a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/021e4953390da748515debfc8973149457d3118a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/021e4953390da748515debfc8973149457d3118a"}], "stats": {"total": 69, "additions": 66, "deletions": 3}, "files": [{"sha": "e3f325395628092b2381b16c4a1e5fb3823ef6c2", "filename": "gcc/rust/checks/errors/rust-unsafe-checker.cc", "status": "modified", "additions": 54, "deletions": 3, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b8642ed962481d9556a7baf6e6cae40355eb6e6/gcc%2Frust%2Fchecks%2Ferrors%2Frust-unsafe-checker.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b8642ed962481d9556a7baf6e6cae40355eb6e6/gcc%2Frust%2Fchecks%2Ferrors%2Frust-unsafe-checker.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fchecks%2Ferrors%2Frust-unsafe-checker.cc?ref=3b8642ed962481d9556a7baf6e6cae40355eb6e6", "patch": "@@ -90,6 +90,50 @@ check_unsafe_call (HIR::Function *fn, Location locus, const std::string &kind)\n \t\t   kind.c_str ());\n }\n \n+static bool\n+is_safe_intrinsic (const std::string &fn_name)\n+{\n+  static const std::unordered_set<std::string> safe_intrinsics = {\n+    \"abort\",\n+    \"size_of\",\n+    \"min_align_of\",\n+    \"needs_drop\",\n+    \"caller_location\",\n+    \"add_with_overflow\",\n+    \"sub_with_overflow\",\n+    \"mul_with_overflow\",\n+    \"wrapping_add\",\n+    \"wrapping_sub\",\n+    \"wrapping_mul\",\n+    \"saturating_add\",\n+    \"saturating_sub\",\n+    \"rotate_left\",\n+    \"rotate_right\",\n+    \"ctpop\",\n+    \"ctlz\",\n+    \"cttz\",\n+    \"bswap\",\n+    \"bitreverse\",\n+    \"discriminant_value\",\n+    \"type_id\",\n+    \"likely\",\n+    \"unlikely\",\n+    \"ptr_guaranteed_eq\",\n+    \"ptr_guaranteed_ne\",\n+    \"minnumf32\",\n+    \"minnumf64\",\n+    \"maxnumf32\",\n+    \"rustc_peek\",\n+    \"maxnumf64\",\n+    \"type_name\",\n+    \"forget\",\n+    \"black_box\",\n+    \"variant_count\",\n+  };\n+\n+  return safe_intrinsics.find (fn_name) != safe_intrinsics.end ();\n+}\n+\n static void\n check_extern_call (HIR::ExternalItem *maybe_fn, HIR::ExternBlock *parent_block,\n \t\t   Location locus)\n@@ -103,9 +147,16 @@ check_extern_call (HIR::ExternalItem *maybe_fn, HIR::ExternBlock *parent_block,\n   // hand, any function defined in a block with a specific ABI (even `extern\n   // \"Rust\"` blocks) is unsafe to call\n \n-  if (maybe_fn->get_extern_kind () == ExternalItem::ExternKind::Function)\n-    rust_error_at (locus,\n-\t\t   \"call to extern function requires unsafe function or block\");\n+  if (maybe_fn->get_extern_kind () != ExternalItem::ExternKind::Function)\n+    return;\n+\n+  // Some intrinsics are safe to call\n+  if (parent_block->get_abi () == Rust::ABI::INTRINSIC\n+      && is_safe_intrinsic (maybe_fn->get_item_name ()))\n+    return;\n+\n+  rust_error_at (locus,\n+\t\t \"call to extern function requires unsafe function or block\");\n }\n \n void"}, {"sha": "6b6be06b908dbfd95534116b8fa5c8c02a2446aa", "filename": "gcc/testsuite/rust/compile/unsafe10.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b8642ed962481d9556a7baf6e6cae40355eb6e6/gcc%2Ftestsuite%2Frust%2Fcompile%2Funsafe10.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b8642ed962481d9556a7baf6e6cae40355eb6e6/gcc%2Ftestsuite%2Frust%2Fcompile%2Funsafe10.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Funsafe10.rs?ref=3b8642ed962481d9556a7baf6e6cae40355eb6e6", "patch": "@@ -0,0 +1,12 @@\n+extern \"rust-intrinsic\" {\n+    pub fn rotate_left<T>(l: T, r: T) -> T;\n+}\n+\n+fn main() -> i32 {\n+    let a = 15;\n+    let b = 15;\n+\n+    let _ = rotate_left(a, b);\n+\n+    0\n+}"}]}