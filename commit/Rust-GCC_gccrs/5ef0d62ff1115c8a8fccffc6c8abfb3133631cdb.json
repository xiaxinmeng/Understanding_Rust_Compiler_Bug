{"sha": "5ef0d62ff1115c8a8fccffc6c8abfb3133631cdb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWVmMGQ2MmZmMTExNWM4YThmY2NmZmM2YzhhYmZiMzEzMzYzMWNkYg==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2005-03-29T22:54:04Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2005-03-29T22:54:04Z"}, "message": "natRuntime.cc (insertSystemProperties): Set gnu.gcj.runtime.endorsed.dirs.\n\nlibjava:\n\t* java/lang/natRuntime.cc (insertSystemProperties): Set\n\tgnu.gcj.runtime.endorsed.dirs.\n\t* Makefile.in: Rebuilt.\n\t* Makefile.am (ordinary_java_source_files): Added\n\tHelperClassLoader.java.\n\t(AM_CXXFLAGS): Define GCJ_ENDORSED_DIRS.\n\t* gnu/gcj/runtime/VMClassLoader.java (VMClassLoader): Extends\n\tHelperClassLoader.\n\t(init): Use addDirectoriesFromProperty.\n\t* gnu/gcj/runtime/BootClassLoader.java (BootClassLoader): Extends\n\tHelperClassLoader.  Use addDirectoriesFromProperty.  Handle\n\tgnu.gcj.runtime.endorsed.dirs.\n\t* gnu/gcj/runtime/HelperClassLoader.java: New file.\ngcc/java:\n\t* gcj.texi (libgcj Runtime Properties): Document\n\tgnu.gcj.runtime.endorsed.dirs.\n\nFrom-SVN: r97212", "tree": {"sha": "2d4449e7e3a3876a2087356b50a265ed2e971520", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2d4449e7e3a3876a2087356b50a265ed2e971520"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5ef0d62ff1115c8a8fccffc6c8abfb3133631cdb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ef0d62ff1115c8a8fccffc6c8abfb3133631cdb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ef0d62ff1115c8a8fccffc6c8abfb3133631cdb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ef0d62ff1115c8a8fccffc6c8abfb3133631cdb/comments", "author": null, "committer": null, "parents": [{"sha": "0e2ea9b837fb49cf04ac6ed974c717030d39be44", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e2ea9b837fb49cf04ac6ed974c717030d39be44", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e2ea9b837fb49cf04ac6ed974c717030d39be44"}], "stats": {"total": 67, "additions": 67, "deletions": 0}, "files": [{"sha": "9b81b522ffa54d38a80a36f59a9e12bc95019020", "filename": "libjava/gnu/gcj/runtime/HelperClassLoader.java", "status": "added", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ef0d62ff1115c8a8fccffc6c8abfb3133631cdb/libjava%2Fgnu%2Fgcj%2Fruntime%2FHelperClassLoader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ef0d62ff1115c8a8fccffc6c8abfb3133631cdb/libjava%2Fgnu%2Fgcj%2Fruntime%2FHelperClassLoader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fgcj%2Fruntime%2FHelperClassLoader.java?ref=5ef0d62ff1115c8a8fccffc6c8abfb3133631cdb", "patch": "@@ -0,0 +1,67 @@\n+/* Copyright (C) 2005  Free Software Foundation\n+\n+   This file is part of libgcj.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n+details.  */\n+\n+package gnu.gcj.runtime;\n+\n+import java.io.File;\n+import java.io.FilenameFilter;\n+import java.io.IOException;\n+import java.net.URL;\n+import java.net.URLClassLoader;\n+import java.util.StringTokenizer;\n+\n+/**\n+ * This is a URLClassLoader that has an extra helper method for\n+ * handling things like java.ext.dirs.\n+ */\n+class HelperClassLoader extends URLClassLoader\n+{\n+  HelperClassLoader()\n+  {\n+    super(new URL[0]);\n+  }\n+\n+  /**\n+   * This is a helper method that adds all the jar and zip files from\n+   * a given list of paths to this class loader.  The paths are taken\n+   * from a system property whose name is provided as an argument.\n+   */\n+  final void addDirectoriesFromProperty(String propName)\n+  {\n+    StringTokenizer st\n+      = new StringTokenizer (System.getProperty (propName, \"\"),\n+\t\t\t     File.pathSeparator);\n+    try\n+      {\n+\twhile (st.hasMoreElements ())\n+\t  {\n+\t    String dirname = st.nextToken ();\n+\t    File dir = new File (dirname);\n+            if (dir.exists ())\n+\t      {\n+\t\tif (! dirname.endsWith (File.separator))\n+\t\t  dirname = dirname + File.separator;\n+\t\tString files[] = dir.list (new FilenameFilter ()\n+\t\t  {\n+\t\t    public boolean accept (File dir, String name)\n+\t\t    {\n+\t\t      return name.endsWith (\".jar\") || name.endsWith (\".zip\");\n+\t\t    }\n+\t\t  });\n+\t\tfor (int i = files.length - 1; i >= 0; i--)\n+\t\t  addURL(new URL(\"file\", \"\", -1, dirname + files[i]));\n+\t      }\n+\t  }\n+      }\n+    catch (java.net.MalformedURLException x)\n+      {\n+\t// This should never happen.\n+\tthrow new RuntimeException(x);\n+      }\n+  }\n+}"}]}