{"sha": "ae29d0253f8333b228e24c6202f567ee9dca8da9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWUyOWQwMjUzZjgzMzNiMjI4ZTI0YzYyMDJmNTY3ZWU5ZGNhOGRhOQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2013-12-08T09:44:48Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2013-12-08T09:44:48Z"}, "message": "explicit_instantiation.cc: New.\n\n2013-12-08  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* testsuite/20_util/add_const/requirements/explicit_instantiation.cc:\n\tNew.\n\t* testsuite/20_util/add_const/value.cc: Likewise.\n\t* testsuite/20_util/add_cv/requirements/explicit_instantiation.cc:\n\tLikewise.\n\t* testsuite/20_util/add_cv/value.cc: Likewise.\n\t* testsuite/20_util/add_pointer/requirements/explicit_instantiation.cc:\n\tLikewise.\n\t* testsuite/20_util/add_pointer/value.cc: Likewise.\n\t* testsuite/20_util/add_volatile/requirements/\n\texplicit_instantiation.cc: Likewise.\n\t* testsuite/20_util/add_volatile/value.cc: Likewise.\n\t* testsuite/20_util/alignment_of/requirements/\n\texplicit_instantiation.cc: Likewise.\n\t* testsuite/20_util/alignment_of/requirements/typedefs.cc: Likewise.\n\t* testsuite/20_util/alignment_of/value.cc: Likewise.\n\t* testsuite/20_util/extent/requirements/explicit_instantiation.cc:\n\tLikewise.\n\t* testsuite/20_util/extent/requirements/typedefs.cc: Likewise.\n\t* testsuite/20_util/extent/value.cc: Likewise.\n\t* testsuite/20_util/has_virtual_destructor/requirements/\n\texplicit_instantiation.cc: Likewise.\n\t* testsuite/20_util/has_virtual_destructor/requirements/\n\ttypedefs.cc: Likewise.\n\t* testsuite/20_util/has_virtual_destructor/value.cc: Likewise.\n\t* testsuite/20_util/is_abstract/requirements/explicit_instantiation.cc:\n \tLikewise.\n\t* testsuite/20_util/is_abstract/requirements/typedefs.cc: Likewise.\n\t* testsuite/20_util/is_abstract/value.cc: Likewise.\n\t* testsuite/20_util/is_arithmetic/requirements/\n\texplicit_instantiation.cc: Likewise.\n\t* testsuite/20_util/is_arithmetic/requirements/typedefs.cc: Likewise.\n\t* testsuite/20_util/is_arithmetic/value.cc: Likewise.\n\t* testsuite/20_util/is_array/requirements/explicit_instantiation.cc:\n\tLikewise.\n\t* testsuite/20_util/is_array/requirements/typedefs.cc: Likewise.\n\t* testsuite/20_util/is_array/value.cc: Likewise.\n\t* testsuite/20_util/is_base_of/requirements/explicit_instantiation.cc:\n\tLikewise.\n\t* testsuite/20_util/is_base_of/requirements/typedefs.cc: Likewise.\n\t* testsuite/20_util/is_base_of/value.cc: Likewise.\n\t* testsuite/20_util/is_class/requirements/explicit_instantiation.cc:\n\tLikewise.\n\t* testsuite/20_util/is_class/requirements/typedefs.cc: Likewise.\n\t* testsuite/20_util/is_class/value.cc: Likewise.\n\t* testsuite/20_util/is_const/requirements/explicit_instantiation.cc:\n\tLikewise.\n\t* testsuite/20_util/is_const/requirements/typedefs.cc: Likewise.\n\t* testsuite/20_util/is_const/value.cc: Likewise.\n\t* testsuite/20_util/is_empty/requirements/explicit_instantiation.cc:\n\tLikewise.\n\t* testsuite/20_util/is_empty/requirements/typedefs.cc: Likewise.\n\t* testsuite/20_util/is_empty/value.cc: Likewise.\n\t* testsuite/20_util/is_enum/requirements/explicit_instantiation.cc:\n\tLikewise.\n\t* testsuite/20_util/is_enum/requirements/typedefs.cc\n\t* testsuite/20_util/is_enum/value.cc: Likewise.\n\t* testsuite/20_util/is_pointer/requirements/explicit_instantiation.cc\n\t* testsuite/20_util/is_pointer/value.cc: Likewise.\n\t* testsuite/20_util/is_polymorphic/requirements/\n\texplicit_instantiation.cc: Likewise.\n\t* testsuite/20_util/is_polymorphic/requirements/typedefs.cc: Likewise.\n\t* testsuite/20_util/is_polymorphic/value.cc: Likewise.\n\t* testsuite/20_util/is_same/requirements/explicit_instantiation.cc\n\t* testsuite/20_util/is_same/requirements/typedefs.cc: Likewise.\n\t* testsuite/20_util/is_same/value.cc: Likewise.\n\t* testsuite/20_util/is_union/requirements/\n\texplicit_instantiation.cc: Likewise.\n\t* testsuite/20_util/is_union/requirements/typedefs.cc: Likewise.\n\t* testsuite/20_util/is_union/value.cc: Likewise.\n\t* testsuite/20_util/is_void/requirements/explicit_instantiation.cc\n\t* testsuite/20_util/is_void/requirements/typedefs.cc: Likewise.\n\t* testsuite/20_util/is_void/value.cc: Likewise.\n\t* testsuite/20_util/is_volatile/requirements/\n\texplicit_instantiation.cc: Likewise.\n\t* testsuite/20_util/is_volatile/requirements/typedefs.cc: Likewise.\n\t* testsuite/20_util/is_volatile/value.cc: Likewise.\n\t* testsuite/20_util/rank/requirements/explicit_instantiation.cc:\n\tLikewise.\n\t* testsuite/20_util/rank/requirements/typedefs.cc: Likewise.\n\t* testsuite/20_util/rank/value.cc: Likewise.\n\t* testsuite/20_util/remove_all_extents/requirements/\n\texplicit_instantiation.cc: Likewise.\n\t* testsuite/20_util/remove_all_extents/value.cc: Likewise.\n\t* testsuite/20_util/remove_const/requirements/\n\texplicit_instantiation.cc: Likewise.\n\t* testsuite/20_util/remove_const/value.cc: Likewise.\n\t* testsuite/20_util/remove_cv/requirements/explicit_instantiation.cc:\n\tLikewise.\n\t* testsuite/20_util/remove_cv/value.cc: Likewise.\n\t* testsuite/20_util/remove_extent/requirements/\n\texplicit_instantiation.cc: Likewise.\n\t* testsuite/20_util/remove_extent/value.cc: Likewise.\n\t* testsuite/20_util/remove_pointer/requirements/\n\texplicit_instantiation.cc: Likewise.\n\t* testsuite/20_util/remove_pointer/value.cc: Likewise.\n\t* testsuite/20_util/remove_volatile/requirements/\n\texplicit_instantiation.cc: Likewise.\n\t* testsuite/20_util/remove_volatile/value.cc: Likewise.\n\nFrom-SVN: r205789", "tree": {"sha": "ac1f3d73fcae0e398e3267427d09fca9f0e3dbaa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ac1f3d73fcae0e398e3267427d09fca9f0e3dbaa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ae29d0253f8333b228e24c6202f567ee9dca8da9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae29d0253f8333b228e24c6202f567ee9dca8da9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae29d0253f8333b228e24c6202f567ee9dca8da9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae29d0253f8333b228e24c6202f567ee9dca8da9/comments", "author": null, "committer": null, "parents": [{"sha": "7cf0b2a659a78b8e463a5bb776b8fc72b7f295df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7cf0b2a659a78b8e463a5bb776b8fc72b7f295df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7cf0b2a659a78b8e463a5bb776b8fc72b7f295df"}], "stats": {"total": 2778, "additions": 2778, "deletions": 0}, "files": [{"sha": "a814fd5855e08473f00dd885374bb978b387b1d0", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 102, "deletions": 0, "changes": 102, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=ae29d0253f8333b228e24c6202f567ee9dca8da9", "patch": "@@ -1,3 +1,105 @@\n+2013-12-08  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* testsuite/20_util/add_const/requirements/explicit_instantiation.cc:\n+\tNew.\n+\t* testsuite/20_util/add_const/value.cc: Likewise.\n+\t* testsuite/20_util/add_cv/requirements/explicit_instantiation.cc:\n+\tLikewise.\n+\t* testsuite/20_util/add_cv/value.cc: Likewise.\n+\t* testsuite/20_util/add_pointer/requirements/explicit_instantiation.cc:\n+\tLikewise.\n+\t* testsuite/20_util/add_pointer/value.cc: Likewise.\n+\t* testsuite/20_util/add_volatile/requirements/\n+\texplicit_instantiation.cc: Likewise.\n+\t* testsuite/20_util/add_volatile/value.cc: Likewise.\n+\t* testsuite/20_util/alignment_of/requirements/\n+\texplicit_instantiation.cc: Likewise.\n+\t* testsuite/20_util/alignment_of/requirements/typedefs.cc: Likewise.\n+\t* testsuite/20_util/alignment_of/value.cc: Likewise.\n+\t* testsuite/20_util/extent/requirements/explicit_instantiation.cc:\n+\tLikewise.\n+\t* testsuite/20_util/extent/requirements/typedefs.cc: Likewise.\n+\t* testsuite/20_util/extent/value.cc: Likewise.\n+\t* testsuite/20_util/has_virtual_destructor/requirements/\n+\texplicit_instantiation.cc: Likewise.\n+\t* testsuite/20_util/has_virtual_destructor/requirements/\n+\ttypedefs.cc: Likewise.\n+\t* testsuite/20_util/has_virtual_destructor/value.cc: Likewise.\n+\t* testsuite/20_util/is_abstract/requirements/explicit_instantiation.cc:\n+ \tLikewise.\n+\t* testsuite/20_util/is_abstract/requirements/typedefs.cc: Likewise.\n+\t* testsuite/20_util/is_abstract/value.cc: Likewise.\n+\t* testsuite/20_util/is_arithmetic/requirements/\n+\texplicit_instantiation.cc: Likewise.\n+\t* testsuite/20_util/is_arithmetic/requirements/typedefs.cc: Likewise.\n+\t* testsuite/20_util/is_arithmetic/value.cc: Likewise.\n+\t* testsuite/20_util/is_array/requirements/explicit_instantiation.cc:\n+\tLikewise.\n+\t* testsuite/20_util/is_array/requirements/typedefs.cc: Likewise.\n+\t* testsuite/20_util/is_array/value.cc: Likewise.\n+\t* testsuite/20_util/is_base_of/requirements/explicit_instantiation.cc:\n+\tLikewise.\n+\t* testsuite/20_util/is_base_of/requirements/typedefs.cc: Likewise.\n+\t* testsuite/20_util/is_base_of/value.cc: Likewise.\n+\t* testsuite/20_util/is_class/requirements/explicit_instantiation.cc:\n+\tLikewise.\n+\t* testsuite/20_util/is_class/requirements/typedefs.cc: Likewise.\n+\t* testsuite/20_util/is_class/value.cc: Likewise.\n+\t* testsuite/20_util/is_const/requirements/explicit_instantiation.cc:\n+\tLikewise.\n+\t* testsuite/20_util/is_const/requirements/typedefs.cc: Likewise.\n+\t* testsuite/20_util/is_const/value.cc: Likewise.\n+\t* testsuite/20_util/is_empty/requirements/explicit_instantiation.cc:\n+\tLikewise.\n+\t* testsuite/20_util/is_empty/requirements/typedefs.cc: Likewise.\n+\t* testsuite/20_util/is_empty/value.cc: Likewise.\n+\t* testsuite/20_util/is_enum/requirements/explicit_instantiation.cc:\n+\tLikewise.\n+\t* testsuite/20_util/is_enum/requirements/typedefs.cc\n+\t* testsuite/20_util/is_enum/value.cc: Likewise.\n+\t* testsuite/20_util/is_pointer/requirements/explicit_instantiation.cc\n+\t* testsuite/20_util/is_pointer/value.cc: Likewise.\n+\t* testsuite/20_util/is_polymorphic/requirements/\n+\texplicit_instantiation.cc: Likewise.\n+\t* testsuite/20_util/is_polymorphic/requirements/typedefs.cc: Likewise.\n+\t* testsuite/20_util/is_polymorphic/value.cc: Likewise.\n+\t* testsuite/20_util/is_same/requirements/explicit_instantiation.cc\n+\t* testsuite/20_util/is_same/requirements/typedefs.cc: Likewise.\n+\t* testsuite/20_util/is_same/value.cc: Likewise.\n+\t* testsuite/20_util/is_union/requirements/\n+\texplicit_instantiation.cc: Likewise.\n+\t* testsuite/20_util/is_union/requirements/typedefs.cc: Likewise.\n+\t* testsuite/20_util/is_union/value.cc: Likewise.\n+\t* testsuite/20_util/is_void/requirements/explicit_instantiation.cc\n+\t* testsuite/20_util/is_void/requirements/typedefs.cc: Likewise.\n+\t* testsuite/20_util/is_void/value.cc: Likewise.\n+\t* testsuite/20_util/is_volatile/requirements/\n+\texplicit_instantiation.cc: Likewise.\n+\t* testsuite/20_util/is_volatile/requirements/typedefs.cc: Likewise.\n+\t* testsuite/20_util/is_volatile/value.cc: Likewise.\n+\t* testsuite/20_util/rank/requirements/explicit_instantiation.cc:\n+\tLikewise.\n+\t* testsuite/20_util/rank/requirements/typedefs.cc: Likewise.\n+\t* testsuite/20_util/rank/value.cc: Likewise.\n+\t* testsuite/20_util/remove_all_extents/requirements/\n+\texplicit_instantiation.cc: Likewise.\n+\t* testsuite/20_util/remove_all_extents/value.cc: Likewise.\n+\t* testsuite/20_util/remove_const/requirements/\n+\texplicit_instantiation.cc: Likewise.\n+\t* testsuite/20_util/remove_const/value.cc: Likewise.\n+\t* testsuite/20_util/remove_cv/requirements/explicit_instantiation.cc:\n+\tLikewise.\n+\t* testsuite/20_util/remove_cv/value.cc: Likewise.\n+\t* testsuite/20_util/remove_extent/requirements/\n+\texplicit_instantiation.cc: Likewise.\n+\t* testsuite/20_util/remove_extent/value.cc: Likewise.\n+\t* testsuite/20_util/remove_pointer/requirements/\n+\texplicit_instantiation.cc: Likewise.\n+\t* testsuite/20_util/remove_pointer/value.cc: Likewise.\n+\t* testsuite/20_util/remove_volatile/requirements/\n+\texplicit_instantiation.cc: Likewise.\n+\t* testsuite/20_util/remove_volatile/value.cc: Likewise.\n+\n 2013-12-06  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* testsuite/util/testsuite_tr1.h (test_category, test_property,"}, {"sha": "815008a396a14f84126e03abf5d4f9c5ccd44b3a", "filename": "libstdc++-v3/testsuite/20_util/add_const/requirements/explicit_instantiation.cc", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fadd_const%2Frequirements%2Fexplicit_instantiation.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fadd_const%2Frequirements%2Fexplicit_instantiation.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fadd_const%2Frequirements%2Fexplicit_instantiation.cc?ref=ae29d0253f8333b228e24c6202f567ee9dca8da9", "patch": "@@ -0,0 +1,29 @@\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2013 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// NB: This file is for testing type_traits with NO OTHER INCLUDES.\n+\n+#include <type_traits>\n+\n+namespace std\n+{\n+  typedef short test_type;\n+  template struct add_const<test_type>;\n+}"}, {"sha": "d300e4c89087da81cc37d8e5bb60dd3f75370ad9", "filename": "libstdc++-v3/testsuite/20_util/add_const/value.cc", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fadd_const%2Fvalue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fadd_const%2Fvalue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fadd_const%2Fvalue.cc?ref=ae29d0253f8333b228e24c6202f567ee9dca8da9", "patch": "@@ -0,0 +1,48 @@\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2013 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <type_traits>\n+#include <testsuite_tr1.h>\n+\n+void test01()\n+{\n+  using std::add_const;\n+  using std::is_same;\n+  using namespace __gnu_test;\n+\n+  static_assert(is_same<add_const<int>::type, const int>::value, \"\");\n+  static_assert(is_same<add_const<volatile int>::type,\n+\t\tconst volatile int>::value, \"\");\n+  static_assert(is_same<add_const<int*>::type, int* const>::value, \"\");\n+  static_assert(is_same<add_const<int&>::type, int&>::value, \"\");\n+  static_assert(is_same<add_const<int (int)>::type, int (int)>::value, \"\");\n+  static_assert(is_same<add_const<const int>::type, const int>::value, \"\");\n+  static_assert(is_same<add_const<ClassType>::type,\n+\t\tconst ClassType>::value, \"\");\n+  static_assert(is_same<add_const<volatile ClassType>::type,\n+\t\tconst volatile ClassType>::value, \"\");\n+  static_assert(is_same<add_const<ClassType*>::type,\n+\t\tClassType* const>::value, \"\");\n+  static_assert(is_same<add_const<ClassType&>::type, ClassType&>::value, \"\");\n+  static_assert(is_same<add_const<ClassType (ClassType)>::type,\n+\t\tClassType (ClassType)>::value, \"\");\n+  static_assert(is_same<add_const<const ClassType>::type,\n+\t\tconst ClassType>::value, \"\");\n+}"}, {"sha": "1eaeeb75fb2ad5b96f26be60d8b63342854eb7a2", "filename": "libstdc++-v3/testsuite/20_util/add_cv/requirements/explicit_instantiation.cc", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fadd_cv%2Frequirements%2Fexplicit_instantiation.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fadd_cv%2Frequirements%2Fexplicit_instantiation.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fadd_cv%2Frequirements%2Fexplicit_instantiation.cc?ref=ae29d0253f8333b228e24c6202f567ee9dca8da9", "patch": "@@ -0,0 +1,29 @@\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2013 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// NB: This file is for testing type_traits with NO OTHER INCLUDES.\n+\n+#include <type_traits>\n+\n+namespace std\n+{\n+  typedef short test_type;\n+  template struct add_cv<test_type>;\n+}"}, {"sha": "c36f13c48498507670cc912435d4164d47b0232c", "filename": "libstdc++-v3/testsuite/20_util/add_cv/value.cc", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fadd_cv%2Fvalue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fadd_cv%2Fvalue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fadd_cv%2Fvalue.cc?ref=ae29d0253f8333b228e24c6202f567ee9dca8da9", "patch": "@@ -0,0 +1,49 @@\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2013 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <type_traits>\n+#include <testsuite_tr1.h>\n+\n+void test01()\n+{\n+  using std::add_cv;\n+  using std::is_same;\n+  using namespace __gnu_test;\n+\n+  static_assert(is_same<add_cv<int>::type, const volatile int>::value, \"\");\n+  static_assert(is_same<add_cv<const int>::type,\n+\t\tconst volatile int>::value, \"\");\n+  static_assert(is_same<add_cv<int*>::type, int* const volatile>::value, \"\");\n+  static_assert(is_same<add_cv<int&>::type, int&>::value, \"\");\n+  static_assert(is_same<add_cv<int (int)>::type, int (int)>::value, \"\");\n+  static_assert(is_same<add_cv<const volatile int>::type,\n+\t\tconst volatile int>::value, \"\");\n+  static_assert(is_same<add_cv<ClassType>::type,\n+\t\tconst volatile ClassType>::value, \"\");\n+  static_assert(is_same<add_cv<volatile ClassType>::type,\n+\t\tconst volatile ClassType>::value, \"\");\n+  static_assert(is_same<add_cv<ClassType*>::type,\n+\t\tClassType* const volatile>::value, \"\");\n+  static_assert(is_same<add_cv<ClassType&>::type, ClassType&>::value, \"\");\n+  static_assert(is_same<add_cv<ClassType (ClassType)>::type,\n+\t\tClassType (ClassType)>::value, \"\");\n+  static_assert(is_same<add_cv<const volatile ClassType>::type,\n+\t\tconst volatile ClassType>::value, \"\");\n+}"}, {"sha": "68a8cafce4a932ac0a73eff7340a7a697852bdd9", "filename": "libstdc++-v3/testsuite/20_util/add_pointer/requirements/explicit_instantiation.cc", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fadd_pointer%2Frequirements%2Fexplicit_instantiation.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fadd_pointer%2Frequirements%2Fexplicit_instantiation.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fadd_pointer%2Frequirements%2Fexplicit_instantiation.cc?ref=ae29d0253f8333b228e24c6202f567ee9dca8da9", "patch": "@@ -0,0 +1,29 @@\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2013 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// NB: This file is for testing type_traits with NO OTHER INCLUDES.\n+\n+#include <type_traits>\n+\n+namespace std\n+{\n+  typedef short test_type;\n+  template struct add_pointer<test_type>;\n+}"}, {"sha": "de43d6bc269f2efc92ba3c200f016bc0645db842", "filename": "libstdc++-v3/testsuite/20_util/add_pointer/value.cc", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fadd_pointer%2Fvalue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fadd_pointer%2Fvalue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fadd_pointer%2Fvalue.cc?ref=ae29d0253f8333b228e24c6202f567ee9dca8da9", "patch": "@@ -0,0 +1,37 @@\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2013 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <type_traits>\n+#include <testsuite_tr1.h>\n+\n+void test01()\n+{\n+  using std::add_pointer;\n+  using std::is_same;\n+  using namespace __gnu_test;\n+\n+  static_assert(is_same<add_pointer<int>::type, int*>::value, \"\");\n+  static_assert(is_same<add_pointer<int*>::type, int**>::value, \"\");\n+  static_assert(is_same<add_pointer<const int>::type, const int*>::value, \"\");\n+  static_assert(is_same<add_pointer<int&>::type, int*>::value, \"\");\n+  static_assert(is_same<add_pointer<ClassType*>::type,\n+\t\tClassType**>::value, \"\");\n+  static_assert(is_same<add_pointer<ClassType>::type, ClassType*>::value, \"\");\n+}"}, {"sha": "cfc657ca5db11267839d8749fe96769fbdfab0f1", "filename": "libstdc++-v3/testsuite/20_util/add_volatile/requirements/explicit_instantiation.cc", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fadd_volatile%2Frequirements%2Fexplicit_instantiation.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fadd_volatile%2Frequirements%2Fexplicit_instantiation.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fadd_volatile%2Frequirements%2Fexplicit_instantiation.cc?ref=ae29d0253f8333b228e24c6202f567ee9dca8da9", "patch": "@@ -0,0 +1,29 @@\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2013 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// NB: This file is for testing type_traits with NO OTHER INCLUDES.\n+\n+#include <type_traits>\n+\n+namespace std\n+{\n+  typedef short test_type;\n+  template struct add_volatile<test_type>;\n+}"}, {"sha": "b78b14eaa8130abc7a799d9368a081dd723cfcc9", "filename": "libstdc++-v3/testsuite/20_util/add_volatile/value.cc", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fadd_volatile%2Fvalue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fadd_volatile%2Fvalue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fadd_volatile%2Fvalue.cc?ref=ae29d0253f8333b228e24c6202f567ee9dca8da9", "patch": "@@ -0,0 +1,49 @@\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2013 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <type_traits>\n+#include <testsuite_tr1.h>\n+\n+void test01()\n+{\n+  using std::add_volatile;\n+  using std::is_same;\n+  using namespace __gnu_test;\n+\n+  static_assert(is_same<add_volatile<int>::type, volatile int>::value, \"\");\n+  static_assert(is_same<add_volatile<const int>::type,\n+\t\tconst volatile int>::value, \"\");\n+  static_assert(is_same<add_volatile<int*>::type, int* volatile>::value, \"\");\n+  static_assert(is_same<add_volatile<int&>::type, int&>::value, \"\");\n+  static_assert(is_same<add_volatile<int (int)>::type, int (int)>::value, \"\");\n+  static_assert(is_same<add_volatile<volatile int>::type,\n+\t\tvolatile int>::value, \"\");\n+  static_assert(is_same<add_volatile<ClassType>::type,\n+\t\tvolatile ClassType>::value, \"\");\n+  static_assert(is_same<add_volatile<const ClassType>::type,\n+\t\tconst volatile ClassType>::value, \"\");\n+  static_assert(is_same<add_volatile<ClassType*>::type,\n+\t\tClassType* volatile>::value, \"\");\n+  static_assert(is_same<add_volatile<ClassType&>::type, ClassType&>::value, \"\");\n+  static_assert(is_same<add_volatile<ClassType (ClassType)>::type,\n+\t\tClassType (ClassType)>::value, \"\");\n+  static_assert(is_same<add_volatile<volatile ClassType>::type,\n+\t\tvolatile ClassType>::value, \"\");\n+}"}, {"sha": "0cee459a4cb540f552fc8424c25e1ffdb9bbd4cb", "filename": "libstdc++-v3/testsuite/20_util/alignment_of/requirements/explicit_instantiation.cc", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Falignment_of%2Frequirements%2Fexplicit_instantiation.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Falignment_of%2Frequirements%2Fexplicit_instantiation.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Falignment_of%2Frequirements%2Fexplicit_instantiation.cc?ref=ae29d0253f8333b228e24c6202f567ee9dca8da9", "patch": "@@ -0,0 +1,29 @@\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2013 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// NB: This file is for testing type_traits with NO OTHER INCLUDES.\n+\n+#include <type_traits>\n+\n+namespace std\n+{\n+  typedef short test_type;\n+  template struct alignment_of<test_type>;\n+}"}, {"sha": "e47147191c1cc8ec0b2b20ac802e6c6d5bde75da", "filename": "libstdc++-v3/testsuite/20_util/alignment_of/requirements/typedefs.cc", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Falignment_of%2Frequirements%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Falignment_of%2Frequirements%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Falignment_of%2Frequirements%2Ftypedefs.cc?ref=ae29d0253f8333b228e24c6202f567ee9dca8da9", "patch": "@@ -0,0 +1,34 @@\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2013 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// \n+// NB: This file is for testing type_traits with NO OTHER INCLUDES.\n+\n+#include <type_traits>\n+\n+void test01()\n+{\n+  // Check for required typedefs\n+  typedef std::alignment_of<int>              test_type;\n+  typedef test_type::value_type               value_type;\n+  typedef test_type::type                     type;\n+  typedef test_type::type::value_type         type_value_type;\n+  typedef test_type::type::type               type_type;\n+}"}, {"sha": "29b8719daa829b45271b3fcea6da8da79218b6bd", "filename": "libstdc++-v3/testsuite/20_util/alignment_of/value.cc", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Falignment_of%2Fvalue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Falignment_of%2Fvalue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Falignment_of%2Fvalue.cc?ref=ae29d0253f8333b228e24c6202f567ee9dca8da9", "patch": "@@ -0,0 +1,36 @@\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2013 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <type_traits>\n+#include <testsuite_tr1.h>\n+\n+void test01()\n+{\n+  using std::alignment_of;\n+  using namespace __gnu_test;\n+\n+  static_assert(test_property<alignment_of, char>(__alignof__(char)), \"\");\n+  static_assert(test_property<alignment_of, short>(__alignof__(short)), \"\");\n+  static_assert(test_property<alignment_of, int>(__alignof__(int)), \"\");\n+  static_assert(test_property<alignment_of, double>(__alignof__(double)), \"\");\n+  static_assert(test_property<alignment_of, int[4]>(__alignof__(int[4])), \"\");\n+  static_assert(test_property<alignment_of,\n+\t\tClassType>(__alignof__(ClassType)), \"\");\n+}"}, {"sha": "dddbfbe7f8b9692e61b3b8d7b1e20df14769fc41", "filename": "libstdc++-v3/testsuite/20_util/extent/requirements/explicit_instantiation.cc", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fextent%2Frequirements%2Fexplicit_instantiation.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fextent%2Frequirements%2Fexplicit_instantiation.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fextent%2Frequirements%2Fexplicit_instantiation.cc?ref=ae29d0253f8333b228e24c6202f567ee9dca8da9", "patch": "@@ -0,0 +1,29 @@\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2013 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// NB: This file is for testing type_traits with NO OTHER INCLUDES.\n+\n+#include <type_traits>\n+\n+namespace std\n+{\n+  typedef short test_type;\n+  template struct extent<test_type, 2>;\n+}"}, {"sha": "c59c66b876e9a8f05c0d1618cf35d23f0ce32a0f", "filename": "libstdc++-v3/testsuite/20_util/extent/requirements/typedefs.cc", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fextent%2Frequirements%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fextent%2Frequirements%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fextent%2Frequirements%2Ftypedefs.cc?ref=ae29d0253f8333b228e24c6202f567ee9dca8da9", "patch": "@@ -0,0 +1,34 @@\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2013 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// \n+// NB: This file is for testing type_traits with NO OTHER INCLUDES.\n+\n+#include <type_traits>\n+\n+void test01()\n+{\n+  // Check for required typedefs\n+  typedef std::extent<int, 1>                 test_type;\n+  typedef test_type::value_type               value_type;\n+  typedef test_type::type                     type;\n+  typedef test_type::type::value_type         type_value_type;\n+  typedef test_type::type::type               type_type;\n+}"}, {"sha": "1f1c0dd21fff3c70721cdf24bbaf48055bdf2fad", "filename": "libstdc++-v3/testsuite/20_util/extent/value.cc", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fextent%2Fvalue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fextent%2Fvalue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fextent%2Fvalue.cc?ref=ae29d0253f8333b228e24c6202f567ee9dca8da9", "patch": "@@ -0,0 +1,47 @@\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2013 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <type_traits>\n+#include <testsuite_tr1.h>\n+\n+void test01()\n+{\n+  using std::extent;\n+  using namespace __gnu_test;\n+\n+  static_assert(test_property<extent, int, 0>(0), \"\");\n+  static_assert(test_property<extent, int[2], 0>(2), \"\");\n+  static_assert(test_property<extent, int[2][4], 0>(2), \"\");\n+  static_assert(test_property<extent, int[][4], 0>(0), \"\");\n+  static_assert(extent<int, 1>::value == 0, \"\");\n+  static_assert(extent<int[2], 1>::value == 0, \"\");\n+  static_assert(extent<int[2][4], 1>::value == 4, \"\");\n+  static_assert(extent<int[][4], 1>::value == 4, \"\");\n+  static_assert(extent<int[10][4][6][8][12][2], 4>::value == 12, \"\");\n+  static_assert(test_property<extent, ClassType, 0>(0), \"\");\n+  static_assert(test_property<extent, ClassType[2], 0>(2), \"\");\n+  static_assert(test_property<extent, ClassType[2][4], 0>(2), \"\");\n+  static_assert(test_property<extent, ClassType[][4], 0>(0), \"\");\n+  static_assert(extent<ClassType, 1>::value == 0, \"\");\n+  static_assert(extent<ClassType[2], 1>::value == 0, \"\");\n+  static_assert(extent<ClassType[2][4], 1>::value == 4, \"\");\n+  static_assert(extent<ClassType[][4], 1>::value == 4, \"\");\n+  static_assert(extent<ClassType[10][4][6][8][12][2], 4>::value == 12, \"\");\n+}"}, {"sha": "af5871fe8bf87d0cc5e9819eaede9c31530946f6", "filename": "libstdc++-v3/testsuite/20_util/has_virtual_destructor/requirements/explicit_instantiation.cc", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fhas_virtual_destructor%2Frequirements%2Fexplicit_instantiation.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fhas_virtual_destructor%2Frequirements%2Fexplicit_instantiation.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fhas_virtual_destructor%2Frequirements%2Fexplicit_instantiation.cc?ref=ae29d0253f8333b228e24c6202f567ee9dca8da9", "patch": "@@ -0,0 +1,29 @@\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2013 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// NB: This file is for testing type_traits with NO OTHER INCLUDES.\n+\n+#include <type_traits>\n+\n+namespace std\n+{\n+  typedef short test_type;\n+  template struct has_virtual_destructor<test_type>;\n+}"}, {"sha": "1e4bd32746bc8fb9429f61fb4e53076eb38553b0", "filename": "libstdc++-v3/testsuite/20_util/has_virtual_destructor/requirements/typedefs.cc", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fhas_virtual_destructor%2Frequirements%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fhas_virtual_destructor%2Frequirements%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fhas_virtual_destructor%2Frequirements%2Ftypedefs.cc?ref=ae29d0253f8333b228e24c6202f567ee9dca8da9", "patch": "@@ -0,0 +1,34 @@\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2013 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// \n+// NB: This file is for testing type_traits with NO OTHER INCLUDES.\n+\n+#include <type_traits>\n+\n+void test01()\n+{\n+  // Check for required typedefs\n+  typedef std::has_virtual_destructor<int>    test_type;\n+  typedef test_type::value_type               value_type;\n+  typedef test_type::type                     type;\n+  typedef test_type::type::value_type         type_value_type;\n+  typedef test_type::type::type               type_type;\n+}"}, {"sha": "7ab6a5d5b3a28477f850ed4322590c6241326465", "filename": "libstdc++-v3/testsuite/20_util/has_virtual_destructor/value.cc", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fhas_virtual_destructor%2Fvalue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fhas_virtual_destructor%2Fvalue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fhas_virtual_destructor%2Fvalue.cc?ref=ae29d0253f8333b228e24c6202f567ee9dca8da9", "patch": "@@ -0,0 +1,50 @@\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2013 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <type_traits>\n+#include <iostream>\n+#include <testsuite_tr1.h>\n+\n+void test01()\n+{\n+  using std::has_virtual_destructor;\n+  using namespace __gnu_test;\n+\n+  // Positive tests.\n+  static_assert(test_category<has_virtual_destructor,\n+\t\tVirtualDestructorClass>(true), \"\");\n+  static_assert(test_category<has_virtual_destructor, std::iostream>(true), \"\");\n+  static_assert(test_category<has_virtual_destructor,\n+\t\tstd::streambuf>(true), \"\");\n+\n+  // Negative tests.\n+  static_assert(test_category<has_virtual_destructor,\n+\t\tPolymorphicClass>(false), \"\");\n+  static_assert(test_category<has_virtual_destructor,\n+\t\tDerivedPolymorphic>(false), \"\");\n+  static_assert(test_category<has_virtual_destructor,\n+\t\tAbstractClass>(false), \"\");\n+  static_assert(test_category<has_virtual_destructor, void>(false), \"\");\n+  static_assert(test_category<has_virtual_destructor, int (int)>(false), \"\");\n+  static_assert(test_category<has_virtual_destructor, int&>(false), \"\");\n+  static_assert(test_category<has_virtual_destructor, EnumType>(false), \"\");\n+  static_assert(test_category<has_virtual_destructor, ClassType>(false), \"\");\n+  static_assert(test_category<has_virtual_destructor, DerivedType>(false), \"\");\n+}"}, {"sha": "5a7a766e8951a974ec0a348bc1603192b1060a70", "filename": "libstdc++-v3/testsuite/20_util/is_abstract/requirements/explicit_instantiation.cc", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_abstract%2Frequirements%2Fexplicit_instantiation.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_abstract%2Frequirements%2Fexplicit_instantiation.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_abstract%2Frequirements%2Fexplicit_instantiation.cc?ref=ae29d0253f8333b228e24c6202f567ee9dca8da9", "patch": "@@ -0,0 +1,29 @@\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2013 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// NB: This file is for testing type_traits with NO OTHER INCLUDES.\n+\n+#include <type_traits>\n+\n+namespace std\n+{\n+  typedef short test_type;\n+  template struct is_abstract<test_type>;\n+}"}, {"sha": "3c753240cad7225dcbeb3e0ee65e812aadccf2b0", "filename": "libstdc++-v3/testsuite/20_util/is_abstract/requirements/typedefs.cc", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_abstract%2Frequirements%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_abstract%2Frequirements%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_abstract%2Frequirements%2Ftypedefs.cc?ref=ae29d0253f8333b228e24c6202f567ee9dca8da9", "patch": "@@ -0,0 +1,34 @@\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2013 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// \n+// NB: This file is for testing type_traits with NO OTHER INCLUDES.\n+\n+#include <type_traits>\n+\n+void test01()\n+{\n+  // Check for required typedefs\n+  typedef std::is_abstract<int>               test_type;\n+  typedef test_type::value_type               value_type;\n+  typedef test_type::type                     type;\n+  typedef test_type::type::value_type         type_value_type;\n+  typedef test_type::type::type               type_type;\n+}"}, {"sha": "8f01419fb890603491891ff2a3bbcae5b2fe25c7", "filename": "libstdc++-v3/testsuite/20_util/is_abstract/value.cc", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_abstract%2Fvalue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_abstract%2Fvalue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_abstract%2Fvalue.cc?ref=ae29d0253f8333b228e24c6202f567ee9dca8da9", "patch": "@@ -0,0 +1,39 @@\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2013 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <type_traits>\n+#include <testsuite_tr1.h>\n+\n+void test01()\n+{\n+  using std::is_abstract;\n+  using namespace __gnu_test;\n+\n+  // Positive tests.\n+  static_assert(test_category<is_abstract, AbstractClass>(true), \"\");\n+\n+  // Negative tests.\n+  static_assert(test_category<is_abstract, void>(false), \"\");\n+  static_assert(test_category<is_abstract, int (int)>(false), \"\");\n+  static_assert(test_category<is_abstract, int&>(false), \"\");\n+  \n+  // Sanity check.\n+  static_assert(test_category<is_abstract, ClassType>(false), \"\");  \n+}"}, {"sha": "c9642c89444f57ac6e813107830e7a002f3bcf15", "filename": "libstdc++-v3/testsuite/20_util/is_arithmetic/requirements/explicit_instantiation.cc", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_arithmetic%2Frequirements%2Fexplicit_instantiation.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_arithmetic%2Frequirements%2Fexplicit_instantiation.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_arithmetic%2Frequirements%2Fexplicit_instantiation.cc?ref=ae29d0253f8333b228e24c6202f567ee9dca8da9", "patch": "@@ -0,0 +1,29 @@\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2013 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// NB: This file is for testing type_traits with NO OTHER INCLUDES.\n+\n+#include <type_traits>\n+\n+namespace std\n+{\n+  typedef short test_type;\n+  template struct is_arithmetic<test_type>;\n+}"}, {"sha": "308669452ea768241a1349ca0602894554bbd6f4", "filename": "libstdc++-v3/testsuite/20_util/is_arithmetic/requirements/typedefs.cc", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_arithmetic%2Frequirements%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_arithmetic%2Frequirements%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_arithmetic%2Frequirements%2Ftypedefs.cc?ref=ae29d0253f8333b228e24c6202f567ee9dca8da9", "patch": "@@ -0,0 +1,34 @@\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2013 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// \n+// NB: This file is for testing type_traits with NO OTHER INCLUDES.\n+\n+#include <type_traits>\n+\n+void test01()\n+{\n+  // Check for required typedefs\n+  typedef std::is_arithmetic<int>             test_type;\n+  typedef test_type::value_type               value_type;\n+  typedef test_type::type                     type;\n+  typedef test_type::type::value_type         type_value_type;\n+  typedef test_type::type::type               type_type;\n+}"}, {"sha": "5150882040a29d874066e20c6424a83be97fe96f", "filename": "libstdc++-v3/testsuite/20_util/is_arithmetic/value.cc", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_arithmetic%2Fvalue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_arithmetic%2Fvalue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_arithmetic%2Fvalue.cc?ref=ae29d0253f8333b228e24c6202f567ee9dca8da9", "patch": "@@ -0,0 +1,51 @@\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2013 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <type_traits>\n+#include <testsuite_tr1.h>\n+\n+void test01()\n+{\n+  using std::is_arithmetic;\n+  using namespace __gnu_test;\n+\n+  static_assert(test_category<is_arithmetic, void>(false), \"\");\n+\n+  static_assert(test_category<is_arithmetic, char>(true), \"\");\n+  static_assert(test_category<is_arithmetic, signed char>(true), \"\");\n+  static_assert(test_category<is_arithmetic, unsigned char>(true), \"\");\n+#ifdef _GLIBCXX_USE_WCHAR_T\n+  static_assert(test_category<is_arithmetic, wchar_t>(true), \"\");\n+#endif\n+  static_assert(test_category<is_arithmetic, short>(true), \"\");\n+  static_assert(test_category<is_arithmetic, unsigned short>(true), \"\");\n+  static_assert(test_category<is_arithmetic, int>(true), \"\");\n+  static_assert(test_category<is_arithmetic, unsigned int>(true), \"\");\n+  static_assert(test_category<is_arithmetic, long>(true), \"\");\n+  static_assert(test_category<is_arithmetic, unsigned long>(true), \"\");\n+  static_assert(test_category<is_arithmetic, long long>(true), \"\");\n+  static_assert(test_category<is_arithmetic, unsigned long long>(true), \"\");\n+  static_assert(test_category<is_arithmetic, float>(true), \"\");\n+  static_assert(test_category<is_arithmetic, double>(true), \"\");\n+  static_assert(test_category<is_arithmetic, long double>(true), \"\");\n+\n+  // Sanity check.\n+  static_assert(test_category<is_arithmetic, ClassType>(false), \"\");\n+}"}, {"sha": "1ae681fe4faa9a92086b57ed4394e634c4042f86", "filename": "libstdc++-v3/testsuite/20_util/is_array/requirements/explicit_instantiation.cc", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_array%2Frequirements%2Fexplicit_instantiation.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_array%2Frequirements%2Fexplicit_instantiation.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_array%2Frequirements%2Fexplicit_instantiation.cc?ref=ae29d0253f8333b228e24c6202f567ee9dca8da9", "patch": "@@ -0,0 +1,29 @@\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2013 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// NB: This file is for testing type_traits with NO OTHER INCLUDES.\n+\n+#include <type_traits>\n+\n+namespace std\n+{\n+  typedef short test_type;\n+  template struct is_array<test_type>;\n+}"}, {"sha": "b9fcb85bfc0aa2b3aede5487d319bc05127b2ef7", "filename": "libstdc++-v3/testsuite/20_util/is_array/requirements/typedefs.cc", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_array%2Frequirements%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_array%2Frequirements%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_array%2Frequirements%2Ftypedefs.cc?ref=ae29d0253f8333b228e24c6202f567ee9dca8da9", "patch": "@@ -0,0 +1,34 @@\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2013 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// \n+// NB: This file is for testing type_traits with NO OTHER INCLUDES.\n+\n+#include <type_traits>\n+\n+void test01()\n+{\n+  // Check for required typedefs\n+  typedef std::is_array<int>                  test_type;\n+  typedef test_type::value_type               value_type;\n+  typedef test_type::type                     type;\n+  typedef test_type::type::value_type         type_value_type;\n+  typedef test_type::type::type               type_type;\n+}"}, {"sha": "a8e336d37730f46d83fa8b9f7450271451be6e5b", "filename": "libstdc++-v3/testsuite/20_util/is_array/value.cc", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_array%2Fvalue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_array%2Fvalue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_array%2Fvalue.cc?ref=ae29d0253f8333b228e24c6202f567ee9dca8da9", "patch": "@@ -0,0 +1,44 @@\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2013 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <type_traits>\n+#include <testsuite_tr1.h>\n+\n+void test01()\n+{\n+  using std::is_array;\n+  using namespace __gnu_test;\n+\n+  static_assert(test_category<is_array, int[2]>(true), \"\");\n+  static_assert(test_category<is_array, int[]>(true), \"\");\n+  static_assert(test_category<is_array, int[2][3]>(true), \"\");\n+  static_assert(test_category<is_array, int[][3]>(true), \"\");\n+  static_assert(test_category<is_array, float*[2]>(true), \"\");\n+  static_assert(test_category<is_array, float*[]>(true), \"\");\n+  static_assert(test_category<is_array, float*[2][3]>(true), \"\");\n+  static_assert(test_category<is_array, float*[][3]>(true), \"\");\n+  static_assert(test_category<is_array, ClassType[2]>(true), \"\");\n+  static_assert(test_category<is_array, ClassType[]>(true), \"\");\n+  static_assert(test_category<is_array, ClassType[2][3]>(true), \"\");\n+  static_assert(test_category<is_array, ClassType[][3]>(true), \"\");\n+\n+  // Sanity check.\n+  static_assert(test_category<is_array, ClassType>(false), \"\");\n+}"}, {"sha": "1564e0aa5591b0a772574fe4edc68a57522f05d6", "filename": "libstdc++-v3/testsuite/20_util/is_base_of/requirements/explicit_instantiation.cc", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_base_of%2Frequirements%2Fexplicit_instantiation.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_base_of%2Frequirements%2Fexplicit_instantiation.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_base_of%2Frequirements%2Fexplicit_instantiation.cc?ref=ae29d0253f8333b228e24c6202f567ee9dca8da9", "patch": "@@ -0,0 +1,29 @@\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2013 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// NB: This file is for testing type_traits with NO OTHER INCLUDES.\n+\n+#include <type_traits>\n+\n+namespace std\n+{\n+  typedef short test_type;\n+  template struct is_base_of<test_type, test_type>;\n+}"}, {"sha": "d39b007ed941e37425f970fc3183ad9f0fd4dbbb", "filename": "libstdc++-v3/testsuite/20_util/is_base_of/requirements/typedefs.cc", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_base_of%2Frequirements%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_base_of%2Frequirements%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_base_of%2Frequirements%2Ftypedefs.cc?ref=ae29d0253f8333b228e24c6202f567ee9dca8da9", "patch": "@@ -0,0 +1,34 @@\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2013 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// \n+// NB: This file is for testing type_traits with NO OTHER INCLUDES.\n+\n+#include <type_traits>\n+\n+void test01()\n+{\n+  // Check for required typedefs\n+  typedef std::is_base_of<int, int>           test_type;\n+  typedef test_type::value_type               value_type;\n+  typedef test_type::type                     type;\n+  typedef test_type::type::value_type         type_value_type;\n+  typedef test_type::type::type               type_type;\n+}"}, {"sha": "cacee4c5dee8feb6e1f017133562737a4afc321e", "filename": "libstdc++-v3/testsuite/20_util/is_base_of/value.cc", "status": "added", "additions": 89, "deletions": 0, "changes": 89, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_base_of%2Fvalue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_base_of%2Fvalue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_base_of%2Fvalue.cc?ref=ae29d0253f8333b228e24c6202f567ee9dca8da9", "patch": "@@ -0,0 +1,89 @@\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2013 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <type_traits>\n+#include <testsuite_tr1.h>\n+\n+class HiddenCons\n+{\n+  HiddenCons();\n+  HiddenCons(const HiddenCons&);\n+};\n+\n+class DerivedHiddenCons\n+: private HiddenCons\n+{\n+  DerivedHiddenCons();\n+  DerivedHiddenCons(const DerivedHiddenCons&);\n+};\n+\n+class MultiDerivedHiddenCons\n+: private HiddenCons, private __gnu_test::ClassType \n+{\n+  MultiDerivedHiddenCons();\n+  MultiDerivedHiddenCons(const MultiDerivedHiddenCons&);\n+};\n+\n+void test01()\n+{\n+  using std::is_base_of;\n+  using namespace __gnu_test;\n+\n+  // Positive tests.\n+  static_assert(test_relationship<is_base_of, AbstractClass,\n+\t\tAbstractClass>(true), \"\");\n+  static_assert(test_relationship<is_base_of, ClassType,\n+\t\tDerivedType>(true), \"\");\n+  static_assert(test_relationship<is_base_of, ClassType,\n+\t\tconst DerivedType>(true), \"\");\n+  static_assert(test_relationship<is_base_of, volatile ClassType,\n+\t\tvolatile DerivedType>(true), \"\");\n+  static_assert(test_relationship<is_base_of, PolymorphicClass,\n+\t\tDerivedPolymorphic>(true), \"\");\n+  static_assert(test_relationship<is_base_of, HiddenCons,\n+\t\tDerivedHiddenCons>(true), \"\");\n+  static_assert(test_relationship<is_base_of, HiddenCons,\n+\t\tMultiDerivedHiddenCons>(true), \"\");\n+  static_assert(test_relationship<is_base_of, ClassType,\n+\t\tMultiDerivedHiddenCons>(true), \"\");\n+\n+  // Negative tests.\n+  static_assert(test_relationship<is_base_of, int, int>(false), \"\");\n+  static_assert(test_relationship<is_base_of, EnumType, EnumType>(false), \"\");\n+  static_assert(test_relationship<is_base_of, UnionType, UnionType>(false), \"\");\n+  static_assert(test_relationship<is_base_of, int, const int>(false), \"\");\n+  static_assert(test_relationship<is_base_of, volatile UnionType,\n+\t\tUnionType>(false), \"\");\n+  static_assert(test_relationship<is_base_of, int&, ClassType>(false), \"\");\n+  static_assert(test_relationship<is_base_of, AbstractClass,\n+\t\tClassType>(false), \"\");\n+  static_assert(test_relationship<is_base_of, ClassType,\n+\t\tAbstractClass>(false), \"\");\n+  static_assert(test_relationship<is_base_of, DerivedType,\n+\t\tClassType>(false), \"\");\n+  static_assert(test_relationship<is_base_of, DerivedPolymorphic,\n+\t\tPolymorphicClass>(false), \"\");\n+  static_assert(test_relationship<is_base_of, DerivedHiddenCons,\n+\t\tHiddenCons>(false), \"\");\n+  static_assert(test_relationship<is_base_of, MultiDerivedHiddenCons,\n+\t\tHiddenCons>(false), \"\");\n+  static_assert(test_relationship<is_base_of, MultiDerivedHiddenCons,\n+\t\tClassType>(false), \"\");\n+}"}, {"sha": "884f4872917cc627043d59dc96130cfbce3e858f", "filename": "libstdc++-v3/testsuite/20_util/is_class/requirements/explicit_instantiation.cc", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_class%2Frequirements%2Fexplicit_instantiation.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_class%2Frequirements%2Fexplicit_instantiation.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_class%2Frequirements%2Fexplicit_instantiation.cc?ref=ae29d0253f8333b228e24c6202f567ee9dca8da9", "patch": "@@ -0,0 +1,29 @@\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2013 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// NB: This file is for testing type_traits with NO OTHER INCLUDES.\n+\n+#include <type_traits>\n+\n+namespace std\n+{\n+  typedef short test_type;\n+  template struct is_class<test_type>;\n+}"}, {"sha": "1cd8d9958cd1c0f53e83019822bd8444862e2144", "filename": "libstdc++-v3/testsuite/20_util/is_class/requirements/typedefs.cc", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_class%2Frequirements%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_class%2Frequirements%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_class%2Frequirements%2Ftypedefs.cc?ref=ae29d0253f8333b228e24c6202f567ee9dca8da9", "patch": "@@ -0,0 +1,34 @@\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2013 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// \n+// NB: This file is for testing type_traits with NO OTHER INCLUDES.\n+\n+#include <type_traits>\n+\n+void test01()\n+{\n+  // Check for required typedefs\n+  typedef std::is_class<int>                  test_type;\n+  typedef test_type::value_type               value_type;\n+  typedef test_type::type                     type;\n+  typedef test_type::type::value_type         type_value_type;\n+  typedef test_type::type::type               type_type;\n+}"}, {"sha": "d3a4add7910eabc2a27df3812b0f6ba940e95673", "filename": "libstdc++-v3/testsuite/20_util/is_class/value.cc", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_class%2Fvalue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_class%2Fvalue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_class%2Fvalue.cc?ref=ae29d0253f8333b228e24c6202f567ee9dca8da9", "patch": "@@ -0,0 +1,51 @@\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2013 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <type_traits>\n+#include <testsuite_tr1.h>\n+\n+void test01()\n+{\n+  using std::is_class;\n+  using namespace __gnu_test;\n+\n+  // Positive tests.\n+  static_assert(test_category<is_class, ClassType>(true), \"\");\n+  static_assert(test_category<is_class, DerivedType>(true), \"\");\n+  static_assert(test_category<is_class, ConvType>(true), \"\");\n+  static_assert(test_category<is_class, AbstractClass>(true), \"\");\n+  static_assert(test_category<is_class, PolymorphicClass>(true), \"\");\n+  static_assert(test_category<is_class, DerivedPolymorphic>(true), \"\");\n+\n+  // Negative tests.\n+  static_assert(test_category<is_class, UnionType>(false), \"\");\n+  static_assert(test_category<is_class, void>(false), \"\");\n+  static_assert(test_category<is_class, int>(false), \"\");\n+  static_assert(test_category<is_class, float>(false), \"\");\n+  static_assert(test_category<is_class, int[2]>(false), \"\");\n+  static_assert(test_category<is_class, int*>(false), \"\");\n+  static_assert(test_category<is_class, int(*)(int)>(false), \"\");\n+  static_assert(test_category<is_class, float&>(false), \"\");\n+  static_assert(test_category<is_class, float(&)(float)>(false), \"\");\n+  static_assert(test_category<is_class, int (ClassType::*)>(false), \"\");\n+  static_assert(test_category<is_class, int (ClassType::*) (int)>(false), \"\");\n+  static_assert(test_category<is_class, int (int)>(false), \"\");\n+  static_assert(test_category<is_class, EnumType>(false), \"\");\n+}"}, {"sha": "c5ee5425f612d12611fd569cad3afe2fa4c15e9c", "filename": "libstdc++-v3/testsuite/20_util/is_const/requirements/explicit_instantiation.cc", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_const%2Frequirements%2Fexplicit_instantiation.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_const%2Frequirements%2Fexplicit_instantiation.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_const%2Frequirements%2Fexplicit_instantiation.cc?ref=ae29d0253f8333b228e24c6202f567ee9dca8da9", "patch": "@@ -0,0 +1,29 @@\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2013 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// NB: This file is for testing type_traits with NO OTHER INCLUDES.\n+\n+#include <type_traits>\n+\n+namespace std\n+{\n+  typedef short test_type;\n+  template struct is_const<test_type>;\n+}"}, {"sha": "6a5d3bf01ec0131c873bdfbfe68fdd618fb7ccec", "filename": "libstdc++-v3/testsuite/20_util/is_const/requirements/typedefs.cc", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_const%2Frequirements%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_const%2Frequirements%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_const%2Frequirements%2Ftypedefs.cc?ref=ae29d0253f8333b228e24c6202f567ee9dca8da9", "patch": "@@ -0,0 +1,34 @@\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2013 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// \n+// NB: This file is for testing type_traits with NO OTHER INCLUDES.\n+\n+#include <type_traits>\n+\n+void test01()\n+{\n+  // Check for required typedefs\n+  typedef std::is_const<int>                  test_type;\n+  typedef test_type::value_type               value_type;\n+  typedef test_type::type                     type;\n+  typedef test_type::type::value_type         type_value_type;\n+  typedef test_type::type::type               type_type;\n+}"}, {"sha": "82f18e0a65ad0ba8eed8a5d061f95e6e0c698c16", "filename": "libstdc++-v3/testsuite/20_util/is_const/value.cc", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_const%2Fvalue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_const%2Fvalue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_const%2Fvalue.cc?ref=ae29d0253f8333b228e24c6202f567ee9dca8da9", "patch": "@@ -0,0 +1,40 @@\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2013 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <type_traits>\n+#include <testsuite_tr1.h>\n+\n+void test01()\n+{\n+  using std::is_const;\n+  using namespace __gnu_test;\n+\n+  // Positive tests.\n+  static_assert(test_property<is_const, const int>(true), \"\");\n+  static_assert(test_property<is_const, const volatile int>(true), \"\");\n+  static_assert(test_property<is_const, cClassType>(true), \"\");\n+  static_assert(test_property<is_const, cvClassType>(true), \"\");\n+\n+  // Negative tests.\n+  static_assert(test_property<is_const, int>(false), \"\");\n+  static_assert(test_property<is_const, volatile int>(false), \"\");\n+  static_assert(test_property<is_const, ClassType>(false), \"\");\n+  static_assert(test_property<is_const, vClassType>(false), \"\");\n+}"}, {"sha": "75aff62eac5fac020797b46daef0c82c552f3fee", "filename": "libstdc++-v3/testsuite/20_util/is_empty/requirements/explicit_instantiation.cc", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_empty%2Frequirements%2Fexplicit_instantiation.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_empty%2Frequirements%2Fexplicit_instantiation.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_empty%2Frequirements%2Fexplicit_instantiation.cc?ref=ae29d0253f8333b228e24c6202f567ee9dca8da9", "patch": "@@ -0,0 +1,29 @@\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2013 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// NB: This file is for testing type_traits with NO OTHER INCLUDES.\n+\n+#include <type_traits>\n+\n+namespace std\n+{\n+  typedef short test_type;\n+  template struct is_empty<test_type>;\n+}"}, {"sha": "d7102ebe864d5c74ae8f29a5548e959b9dbc3eae", "filename": "libstdc++-v3/testsuite/20_util/is_empty/requirements/typedefs.cc", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_empty%2Frequirements%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_empty%2Frequirements%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_empty%2Frequirements%2Ftypedefs.cc?ref=ae29d0253f8333b228e24c6202f567ee9dca8da9", "patch": "@@ -0,0 +1,34 @@\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2013 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// \n+// NB: This file is for testing type_traits with NO OTHER INCLUDES.\n+\n+#include <type_traits>\n+\n+void test01()\n+{\n+  // Check for required typedefs\n+  typedef std::is_empty<int>                  test_type;\n+  typedef test_type::value_type               value_type;\n+  typedef test_type::type                     type;\n+  typedef test_type::type::value_type         type_value_type;\n+  typedef test_type::type::type               type_type;\n+}"}, {"sha": "3334bd527fd1fbf0d34b7455754fce19ff3ac32e", "filename": "libstdc++-v3/testsuite/20_util/is_empty/value.cc", "status": "added", "additions": 66, "deletions": 0, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_empty%2Fvalue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_empty%2Fvalue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_empty%2Fvalue.cc?ref=ae29d0253f8333b228e24c6202f567ee9dca8da9", "patch": "@@ -0,0 +1,66 @@\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2013 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <type_traits>\n+#include <testsuite_tr1.h>\n+\n+class EmptyClassOne\n+{ typedef int type; };\n+\n+class EmptyClassTwo\n+{ static int data; };\n+\n+class EmptyClassThree\n+{ int f(); };\n+\n+class NonEmptyClassOne\n+{ int data; };\n+\n+class NonEmptyClassTwo\n+{\n+  virtual int f();\n+  virtual ~NonEmptyClassTwo();\n+};\n+\n+void test01()\n+{\n+  using std::is_empty;\n+  using namespace __gnu_test;\n+\n+  // Positive tests.\n+  static_assert(test_category<is_empty, ClassType>(true), \"\");\n+  static_assert(test_category<is_empty, EmptyClassOne>(true), \"\");\n+  static_assert(test_category<is_empty, EmptyClassTwo>(true), \"\");\n+  static_assert(test_category<is_empty, EmptyClassThree>(true), \"\");\n+\n+  // Negative tests.\n+  static_assert(test_category<is_empty, void>(false), \"\");\n+  static_assert(test_category<is_empty, float>(false), \"\");\n+  static_assert(test_category<is_empty, int[4]>(false), \"\");\n+  static_assert(test_category<is_empty, int*>(false), \"\");\n+  static_assert(test_category<is_empty, int&>(false), \"\");\n+  static_assert(test_category<is_empty, int (ClassType::*)>(false), \"\");\n+  static_assert(test_category<is_empty, EnumType>(false), \"\");\n+  static_assert(test_category<is_empty, int (int)>(false), \"\");\n+\n+  static_assert(test_category<is_empty, AbstractClass>(false), \"\");\n+  static_assert(test_category<is_empty, NonEmptyClassOne>(false), \"\");\n+  static_assert(test_category<is_empty, NonEmptyClassTwo>(false), \"\");  \n+}"}, {"sha": "f467bc263b7e8a9ff76df805ee26b61633b73820", "filename": "libstdc++-v3/testsuite/20_util/is_enum/requirements/explicit_instantiation.cc", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_enum%2Frequirements%2Fexplicit_instantiation.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_enum%2Frequirements%2Fexplicit_instantiation.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_enum%2Frequirements%2Fexplicit_instantiation.cc?ref=ae29d0253f8333b228e24c6202f567ee9dca8da9", "patch": "@@ -0,0 +1,29 @@\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2013 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// NB: This file is for testing type_traits with NO OTHER INCLUDES.\n+\n+#include <type_traits>\n+\n+namespace std\n+{\n+  typedef short test_type;\n+  template struct is_enum<test_type>;\n+}"}, {"sha": "6c18666657ff46047b4bbc7d0a34c06b9aa866b6", "filename": "libstdc++-v3/testsuite/20_util/is_enum/requirements/typedefs.cc", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_enum%2Frequirements%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_enum%2Frequirements%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_enum%2Frequirements%2Ftypedefs.cc?ref=ae29d0253f8333b228e24c6202f567ee9dca8da9", "patch": "@@ -0,0 +1,34 @@\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2013 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// \n+// NB: This file is for testing type_traits with NO OTHER INCLUDES.\n+\n+#include <type_traits>\n+\n+void test01()\n+{\n+  // Check for required typedefs\n+  typedef std::is_enum<int>                   test_type;\n+  typedef test_type::value_type               value_type;\n+  typedef test_type::type                     type;\n+  typedef test_type::type::value_type         type_value_type;\n+  typedef test_type::type::type               type_type;\n+}"}, {"sha": "c418f7640d1b82364219e2d0bfad578e15b6c254", "filename": "libstdc++-v3/testsuite/20_util/is_enum/value.cc", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_enum%2Fvalue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_enum%2Fvalue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_enum%2Fvalue.cc?ref=ae29d0253f8333b228e24c6202f567ee9dca8da9", "patch": "@@ -0,0 +1,49 @@\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2013 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <type_traits>\n+#include <testsuite_tr1.h>\n+\n+void test01()\n+{\n+  using std::is_enum;\n+  using namespace __gnu_test;\n+\n+  // Positive tests.\n+  static_assert(test_category<is_enum, EnumType>(true), \"\");\n+\n+  // Negative tests.\n+  static_assert(test_category<is_enum, void>(false), \"\");\n+  static_assert(test_category<is_enum, int>(false), \"\");\n+  static_assert(test_category<is_enum, float>(false), \"\");\n+  static_assert(test_category<is_enum, int[2]>(false), \"\");\n+  static_assert(test_category<is_enum, int*>(false), \"\");\n+  static_assert(test_category<is_enum, int(*)(int)>(false), \"\");\n+  static_assert(test_category<is_enum, float&>(false), \"\");\n+  static_assert(test_category<is_enum, float(&)(float)>(false), \"\");\n+  static_assert(test_category<is_enum, int (ClassType::*)>(false), \"\");\n+  static_assert(test_category<is_enum, int (ClassType::*) (int)>(false), \"\");\n+  static_assert(test_category<is_enum, int (int)>(false), \"\");\n+\n+  static_assert(test_category<is_enum, ConvType>(false), \"\");\n+\n+  // Sanity check.\n+  static_assert(test_category<is_enum, ClassType>(false), \"\");\n+}"}, {"sha": "109b038152368c9a736e4333523352f183831953", "filename": "libstdc++-v3/testsuite/20_util/is_pointer/requirements/explicit_instantiation.cc", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_pointer%2Frequirements%2Fexplicit_instantiation.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_pointer%2Frequirements%2Fexplicit_instantiation.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_pointer%2Frequirements%2Fexplicit_instantiation.cc?ref=ae29d0253f8333b228e24c6202f567ee9dca8da9", "patch": "@@ -0,0 +1,29 @@\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2013 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// NB: This file is for testing type_traits with NO OTHER INCLUDES.\n+\n+#include <type_traits>\n+\n+namespace std\n+{\n+  typedef short test_type;\n+  template struct is_pointer<test_type>;\n+}"}, {"sha": "f2115183af800b298db2bebf8af4c11fb0e60884", "filename": "libstdc++-v3/testsuite/20_util/is_pointer/value.cc", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_pointer%2Fvalue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_pointer%2Fvalue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_pointer%2Fvalue.cc?ref=ae29d0253f8333b228e24c6202f567ee9dca8da9", "patch": "@@ -0,0 +1,35 @@\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2013 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <type_traits>\n+#include <testsuite_tr1.h>\n+\n+void test01()\n+{\n+  using std::is_pointer;\n+  using namespace __gnu_test;\n+\n+  static_assert(test_category<is_pointer, int*>(true), \"\");\n+  static_assert(test_category<is_pointer, ClassType*>(true), \"\");\n+  static_assert(test_category<is_pointer, int(*)(int)>(true), \"\");\n+\n+  // Sanity check.\n+  static_assert(test_category<is_pointer, ClassType>(false), \"\");\n+}"}, {"sha": "fd2143594294c3a1ca069b12b158078bc95b7e2d", "filename": "libstdc++-v3/testsuite/20_util/is_polymorphic/requirements/explicit_instantiation.cc", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_polymorphic%2Frequirements%2Fexplicit_instantiation.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_polymorphic%2Frequirements%2Fexplicit_instantiation.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_polymorphic%2Frequirements%2Fexplicit_instantiation.cc?ref=ae29d0253f8333b228e24c6202f567ee9dca8da9", "patch": "@@ -0,0 +1,29 @@\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2013 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// NB: This file is for testing type_traits with NO OTHER INCLUDES.\n+\n+#include <type_traits>\n+\n+namespace std\n+{\n+  typedef short test_type;\n+  template struct is_polymorphic<test_type>;\n+}"}, {"sha": "1a35c52d1be75649fe054ed2b282b82323ba4fa9", "filename": "libstdc++-v3/testsuite/20_util/is_polymorphic/requirements/typedefs.cc", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_polymorphic%2Frequirements%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_polymorphic%2Frequirements%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_polymorphic%2Frequirements%2Ftypedefs.cc?ref=ae29d0253f8333b228e24c6202f567ee9dca8da9", "patch": "@@ -0,0 +1,34 @@\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2013 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// \n+// NB: This file is for testing type_traits with NO OTHER INCLUDES.\n+\n+#include <type_traits>\n+\n+void test01()\n+{\n+  // Check for required typedefs\n+  typedef std::is_polymorphic<int>            test_type;\n+  typedef test_type::value_type               value_type;\n+  typedef test_type::type                     type;\n+  typedef test_type::type::value_type         type_value_type;\n+  typedef test_type::type::type               type_type;\n+}"}, {"sha": "9a7a5e366c7bd9297174676032ef1605e77f0115", "filename": "libstdc++-v3/testsuite/20_util/is_polymorphic/value.cc", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_polymorphic%2Fvalue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_polymorphic%2Fvalue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_polymorphic%2Fvalue.cc?ref=ae29d0253f8333b228e24c6202f567ee9dca8da9", "patch": "@@ -0,0 +1,46 @@\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2013 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <type_traits>\n+#include <iostream>\n+#include <testsuite_tr1.h>\n+\n+void test01()\n+{\n+  using std::is_polymorphic;\n+  using namespace __gnu_test;\n+\n+  // Positive tests.\n+  static_assert(test_category<is_polymorphic, PolymorphicClass>(true), \"\");\n+  static_assert(test_category<is_polymorphic, DerivedPolymorphic>(true), \"\");\n+  static_assert(test_category<is_polymorphic, AbstractClass>(true), \"\");\n+  static_assert(test_category<is_polymorphic,\n+\t\tVirtualDestructorClass>(true), \"\");\n+  static_assert(test_category<is_polymorphic, std::iostream>(true), \"\");\n+  static_assert(test_category<is_polymorphic, std::streambuf>(true), \"\");\n+\n+  // Negative tests.\n+  static_assert(test_category<is_polymorphic, void>(false), \"\");\n+  static_assert(test_category<is_polymorphic, int (int)>(false), \"\");\n+  static_assert(test_category<is_polymorphic, int&>(false), \"\");\n+  static_assert(test_category<is_polymorphic, EnumType>(false), \"\");\n+  static_assert(test_category<is_polymorphic, ClassType>(false), \"\");\n+  static_assert(test_category<is_polymorphic, DerivedType>(false), \"\");\n+}"}, {"sha": "5f46875e0cd84a821ac8ea40c34ab79db1693886", "filename": "libstdc++-v3/testsuite/20_util/is_same/requirements/explicit_instantiation.cc", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_same%2Frequirements%2Fexplicit_instantiation.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_same%2Frequirements%2Fexplicit_instantiation.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_same%2Frequirements%2Fexplicit_instantiation.cc?ref=ae29d0253f8333b228e24c6202f567ee9dca8da9", "patch": "@@ -0,0 +1,29 @@\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2013 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// NB: This file is for testing type_traits with NO OTHER INCLUDES.\n+\n+#include <type_traits>\n+\n+namespace std\n+{\n+  typedef short test_type;\n+  template struct is_same<test_type, test_type>;\n+}"}, {"sha": "b035cf8900c7a2584d82fc67a174448bbc761adb", "filename": "libstdc++-v3/testsuite/20_util/is_same/requirements/typedefs.cc", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_same%2Frequirements%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_same%2Frequirements%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_same%2Frequirements%2Ftypedefs.cc?ref=ae29d0253f8333b228e24c6202f567ee9dca8da9", "patch": "@@ -0,0 +1,34 @@\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2013 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// \n+// NB: This file is for testing type_traits with NO OTHER INCLUDES.\n+\n+#include <type_traits>\n+\n+void test01()\n+{\n+  // Check for required typedefs\n+  typedef std::is_same<int, int>              test_type;\n+  typedef test_type::value_type               value_type;\n+  typedef test_type::type                     type;\n+  typedef test_type::type::value_type         type_value_type;\n+  typedef test_type::type::type               type_type;\n+}"}, {"sha": "3a46f292b82e3f353bd3c02a8cb3cef0006b9f66", "filename": "libstdc++-v3/testsuite/20_util/is_same/value.cc", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_same%2Fvalue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_same%2Fvalue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_same%2Fvalue.cc?ref=ae29d0253f8333b228e24c6202f567ee9dca8da9", "patch": "@@ -0,0 +1,40 @@\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2013 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <type_traits>\n+#include <testsuite_tr1.h>\n+\n+void test01()\n+{\n+  using std::is_same;\n+  using namespace __gnu_test;\n+\n+  // Positive tests.\n+  static_assert(test_relationship<is_same, int, int>(true), \"\");\n+  static_assert(test_relationship<is_same, const int, const int>(true), \"\");\n+  static_assert(test_relationship<is_same, int&, int&>(true), \"\");\n+  static_assert(test_relationship<is_same, ClassType, ClassType>(true), \"\");\n+\n+  // Negative tests.\n+  static_assert(test_relationship<is_same, void, int>(false), \"\");\n+  static_assert(test_relationship<is_same, int, const int>(false), \"\");\n+  static_assert(test_relationship<is_same, int, int&>(false), \"\");\n+  static_assert(test_relationship<is_same, int, ClassType>(false), \"\");\n+}"}, {"sha": "1786bf7bcebd60c885c55cfd4c629d3c2e66cdea", "filename": "libstdc++-v3/testsuite/20_util/is_union/requirements/explicit_instantiation.cc", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_union%2Frequirements%2Fexplicit_instantiation.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_union%2Frequirements%2Fexplicit_instantiation.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_union%2Frequirements%2Fexplicit_instantiation.cc?ref=ae29d0253f8333b228e24c6202f567ee9dca8da9", "patch": "@@ -0,0 +1,29 @@\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2013 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// NB: This file is for testing type_traits with NO OTHER INCLUDES.\n+\n+#include <type_traits>\n+\n+namespace std\n+{\n+  typedef short test_type;\n+  template struct is_union<test_type>;\n+}"}, {"sha": "3b574c4f2839da9baf03def71131d06ed7972327", "filename": "libstdc++-v3/testsuite/20_util/is_union/requirements/typedefs.cc", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_union%2Frequirements%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_union%2Frequirements%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_union%2Frequirements%2Ftypedefs.cc?ref=ae29d0253f8333b228e24c6202f567ee9dca8da9", "patch": "@@ -0,0 +1,34 @@\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2013 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// \n+// NB: This file is for testing type_traits with NO OTHER INCLUDES.\n+\n+#include <type_traits>\n+\n+void test01()\n+{\n+  // Check for required typedefs\n+  typedef std::is_union<int>                  test_type;\n+  typedef test_type::value_type               value_type;\n+  typedef test_type::type                     type;\n+  typedef test_type::type::value_type         type_value_type;\n+  typedef test_type::type::type               type_type;\n+}"}, {"sha": "b8a3835e51111ed74545023155f3eb05ea52e0e6", "filename": "libstdc++-v3/testsuite/20_util/is_union/value.cc", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_union%2Fvalue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_union%2Fvalue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_union%2Fvalue.cc?ref=ae29d0253f8333b228e24c6202f567ee9dca8da9", "patch": "@@ -0,0 +1,51 @@\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2013 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <type_traits>\n+#include <testsuite_tr1.h>\n+\n+void test01()\n+{\n+  using std::is_union;\n+  using namespace __gnu_test;\n+\n+  // Positive tests.\n+  static_assert(test_category<is_union, UnionType>(true), \"\");\n+\n+  // Negative tests.\n+  static_assert(test_category<is_union, ClassType>(false), \"\");\n+  static_assert(test_category<is_union, DerivedType>(false), \"\");\n+  static_assert(test_category<is_union, ConvType>(false), \"\");\n+  static_assert(test_category<is_union, AbstractClass>(false), \"\");\n+  static_assert(test_category<is_union, PolymorphicClass>(false), \"\");\n+  static_assert(test_category<is_union, DerivedPolymorphic>(false), \"\");\n+  static_assert(test_category<is_union, void>(false), \"\");\n+  static_assert(test_category<is_union, int>(false), \"\");\n+  static_assert(test_category<is_union, float>(false), \"\");\n+  static_assert(test_category<is_union, int[2]>(false), \"\");\n+  static_assert(test_category<is_union, int*>(false), \"\");\n+  static_assert(test_category<is_union, int(*)(int)>(false), \"\");\n+  static_assert(test_category<is_union, float&>(false), \"\");\n+  static_assert(test_category<is_union, float(&)(float)>(false), \"\");\n+  static_assert(test_category<is_union, int (ClassType::*)>(false), \"\");\n+  static_assert(test_category<is_union, int (ClassType::*) (int)>(false), \"\");\n+  static_assert(test_category<is_union, int (int)>(false), \"\");\n+  static_assert(test_category<is_union, EnumType>(false), \"\");\n+}"}, {"sha": "7823bb29dc89f420ee5cc3abb2ead96c7ffcb29a", "filename": "libstdc++-v3/testsuite/20_util/is_void/requirements/explicit_instantiation.cc", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_void%2Frequirements%2Fexplicit_instantiation.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_void%2Frequirements%2Fexplicit_instantiation.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_void%2Frequirements%2Fexplicit_instantiation.cc?ref=ae29d0253f8333b228e24c6202f567ee9dca8da9", "patch": "@@ -0,0 +1,29 @@\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2013 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// NB: This file is for testing type_traits with NO OTHER INCLUDES.\n+\n+#include <type_traits>\n+\n+namespace std\n+{\n+  typedef short test_type;\n+  template struct is_void<test_type>;\n+}"}, {"sha": "6242d5e8a8166daec9ce5bc497d10c901d426b91", "filename": "libstdc++-v3/testsuite/20_util/is_void/requirements/typedefs.cc", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_void%2Frequirements%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_void%2Frequirements%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_void%2Frequirements%2Ftypedefs.cc?ref=ae29d0253f8333b228e24c6202f567ee9dca8da9", "patch": "@@ -0,0 +1,34 @@\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2013 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// \n+// NB: This file is for testing type_traits with NO OTHER INCLUDES.\n+\n+#include <type_traits>\n+\n+void test01()\n+{\n+  // Check for required typedefs\n+  typedef std::is_void<int>                   test_type;\n+  typedef test_type::value_type               value_type;\n+  typedef test_type::type                     type;\n+  typedef test_type::type::value_type         type_value_type;\n+  typedef test_type::type::type               type_type;\n+}"}, {"sha": "d8ea2511d704db81c76bacc4a358e1c881d3532d", "filename": "libstdc++-v3/testsuite/20_util/is_void/value.cc", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_void%2Fvalue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_void%2Fvalue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_void%2Fvalue.cc?ref=ae29d0253f8333b228e24c6202f567ee9dca8da9", "patch": "@@ -0,0 +1,51 @@\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2013 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <type_traits>\n+#include <testsuite_tr1.h>\n+\n+void test01()\n+{\n+  using std::is_void;\n+  using namespace __gnu_test;\n+\n+  static_assert(test_category<is_void, void>(true), \"\");\n+  \n+  static_assert(test_category<is_void, char>(false), \"\");\n+  static_assert(test_category<is_void, signed char>(false), \"\");\n+  static_assert(test_category<is_void, unsigned char>(false), \"\");\n+#ifdef _GLIBCXX_USE_WCHAR_T\n+  static_assert(test_category<is_void, wchar_t>(false), \"\");\n+#endif\n+  static_assert(test_category<is_void, short>(false), \"\");\n+  static_assert(test_category<is_void, unsigned short>(false), \"\");\n+  static_assert(test_category<is_void, int>(false), \"\");\n+  static_assert(test_category<is_void, unsigned int>(false), \"\");\n+  static_assert(test_category<is_void, long>(false), \"\");\n+  static_assert(test_category<is_void, unsigned long>(false), \"\");\n+  static_assert(test_category<is_void, long long>(false), \"\");\n+  static_assert(test_category<is_void, unsigned long long>(false), \"\");\n+  static_assert(test_category<is_void, float>(false), \"\");\n+  static_assert(test_category<is_void, double>(false), \"\");\n+  static_assert(test_category<is_void, long double>(false), \"\");\n+\n+  // Sanity check.\n+  static_assert(test_category<is_void, ClassType>(false), \"\");\n+}"}, {"sha": "94c4784bfa389c78ad8b9da336c7617c4155a46d", "filename": "libstdc++-v3/testsuite/20_util/is_volatile/requirements/explicit_instantiation.cc", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_volatile%2Frequirements%2Fexplicit_instantiation.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_volatile%2Frequirements%2Fexplicit_instantiation.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_volatile%2Frequirements%2Fexplicit_instantiation.cc?ref=ae29d0253f8333b228e24c6202f567ee9dca8da9", "patch": "@@ -0,0 +1,29 @@\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2013 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// NB: This file is for testing type_traits with NO OTHER INCLUDES.\n+\n+#include <type_traits>\n+\n+namespace std\n+{\n+  typedef short test_type;\n+  template struct is_volatile<test_type>;\n+}"}, {"sha": "45abc85b4a9285dcbdc14f46994877b39bdffd4e", "filename": "libstdc++-v3/testsuite/20_util/is_volatile/requirements/typedefs.cc", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_volatile%2Frequirements%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_volatile%2Frequirements%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_volatile%2Frequirements%2Ftypedefs.cc?ref=ae29d0253f8333b228e24c6202f567ee9dca8da9", "patch": "@@ -0,0 +1,34 @@\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2013 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// \n+// NB: This file is for testing type_traits with NO OTHER INCLUDES.\n+\n+#include <type_traits>\n+\n+void test01()\n+{\n+  // Check for required typedefs\n+  typedef std::is_volatile<int>               test_type;\n+  typedef test_type::value_type               value_type;\n+  typedef test_type::type                     type;\n+  typedef test_type::type::value_type         type_value_type;\n+  typedef test_type::type::type               type_type;\n+}"}, {"sha": "6f7a8d343c49a60c2bd27c5ad534fd8acd58d0b3", "filename": "libstdc++-v3/testsuite/20_util/is_volatile/value.cc", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_volatile%2Fvalue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_volatile%2Fvalue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_volatile%2Fvalue.cc?ref=ae29d0253f8333b228e24c6202f567ee9dca8da9", "patch": "@@ -0,0 +1,40 @@\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2013 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <type_traits>\n+#include <testsuite_tr1.h>\n+\n+void test01()\n+{\n+  using std::is_volatile;\n+  using namespace __gnu_test;\n+\n+  // Positive tests.\n+  static_assert(test_property<is_volatile, volatile int>(true), \"\");\n+  static_assert(test_property<is_volatile, const volatile int>(true), \"\");\n+  static_assert(test_property<is_volatile, vClassType>(true), \"\");\n+  static_assert(test_property<is_volatile, cvClassType>(true), \"\");\n+\n+  // Negative tests.\n+  static_assert(test_property<is_volatile, int>(false), \"\");\n+  static_assert(test_property<is_volatile, const int>(false), \"\");\n+  static_assert(test_property<is_volatile, ClassType>(false), \"\");\n+  static_assert(test_property<is_volatile, cClassType>(false), \"\");\n+}"}, {"sha": "6c895c084118e7750f32f613452093eab51a1670", "filename": "libstdc++-v3/testsuite/20_util/rank/requirements/explicit_instantiation.cc", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Frank%2Frequirements%2Fexplicit_instantiation.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Frank%2Frequirements%2Fexplicit_instantiation.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Frank%2Frequirements%2Fexplicit_instantiation.cc?ref=ae29d0253f8333b228e24c6202f567ee9dca8da9", "patch": "@@ -0,0 +1,29 @@\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2013 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// NB: This file is for testing type_traits with NO OTHER INCLUDES.\n+\n+#include <type_traits>\n+\n+namespace std\n+{\n+  typedef short test_type;\n+  template struct rank<test_type>;\n+}"}, {"sha": "e1015bd1b6124e9f58d30ec90ee2faafacc5b057", "filename": "libstdc++-v3/testsuite/20_util/rank/requirements/typedefs.cc", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Frank%2Frequirements%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Frank%2Frequirements%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Frank%2Frequirements%2Ftypedefs.cc?ref=ae29d0253f8333b228e24c6202f567ee9dca8da9", "patch": "@@ -0,0 +1,34 @@\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2013 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// \n+// NB: This file is for testing type_traits with NO OTHER INCLUDES.\n+\n+#include <type_traits>\n+\n+void test01()\n+{\n+  // Check for required typedefs\n+  typedef std::rank<int>                      test_type;\n+  typedef test_type::value_type               value_type;\n+  typedef test_type::type                     type;\n+  typedef test_type::type::value_type         type_value_type;\n+  typedef test_type::type::type               type_type;\n+}"}, {"sha": "de27bb875759f2780d4fedf5f4adbc3296be740b", "filename": "libstdc++-v3/testsuite/20_util/rank/value.cc", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Frank%2Fvalue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Frank%2Fvalue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Frank%2Fvalue.cc?ref=ae29d0253f8333b228e24c6202f567ee9dca8da9", "patch": "@@ -0,0 +1,37 @@\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2013 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <type_traits>\n+#include <testsuite_tr1.h>\n+\n+void test01()\n+{\n+  using std::rank;\n+  using namespace __gnu_test;\n+\n+  static_assert(test_property<rank, int>(0), \"\");\n+  static_assert(test_property<rank, int[2]>(1), \"\");\n+  static_assert(test_property<rank, int[][4]>(2), \"\");\n+  static_assert(test_property<rank, int[2][2][4][4][6][6]>(6), \"\");\n+  static_assert(test_property<rank, ClassType>(0), \"\");\n+  static_assert(test_property<rank, ClassType[2]>(1), \"\");\n+  static_assert(test_property<rank, ClassType[][4]>(2), \"\");\n+  static_assert(test_property<rank, ClassType[2][2][4][4][6][6]>(6), \"\");\n+}"}, {"sha": "7a01f47e0f6ec3cb044d696e21c81dbd0209e3d4", "filename": "libstdc++-v3/testsuite/20_util/remove_all_extents/requirements/explicit_instantiation.cc", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fremove_all_extents%2Frequirements%2Fexplicit_instantiation.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fremove_all_extents%2Frequirements%2Fexplicit_instantiation.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fremove_all_extents%2Frequirements%2Fexplicit_instantiation.cc?ref=ae29d0253f8333b228e24c6202f567ee9dca8da9", "patch": "@@ -0,0 +1,29 @@\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2013 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// NB: This file is for testing type_traits with NO OTHER INCLUDES.\n+\n+#include <type_traits>\n+\n+namespace std\n+{\n+  typedef short test_type;\n+  template struct remove_all_extents<test_type>;\n+}"}, {"sha": "6de63856eac49c4410cf7fe2fc2741fda1cf8fa4", "filename": "libstdc++-v3/testsuite/20_util/remove_all_extents/value.cc", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fremove_all_extents%2Fvalue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fremove_all_extents%2Fvalue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fremove_all_extents%2Fvalue.cc?ref=ae29d0253f8333b228e24c6202f567ee9dca8da9", "patch": "@@ -0,0 +1,46 @@\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2013 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <type_traits>\n+#include <testsuite_tr1.h>\n+\n+void test01()\n+{\n+  using std::remove_all_extents;\n+  using std::is_same;\n+  using namespace __gnu_test;\n+\n+  static_assert(is_same<remove_all_extents<int>::type, int>::value, \"\");\n+  static_assert(is_same<remove_all_extents<int[2]>::type, int>::value, \"\");\n+  static_assert(is_same<remove_all_extents<int[2][3]>::type, int>::value, \"\");\n+  static_assert(is_same<remove_all_extents<int[][3]>::type, int>::value, \"\");\n+  static_assert(is_same<remove_all_extents<const int[2][3]>::type,\n+\t\tconst int>::value, \"\");\n+  static_assert(is_same<remove_all_extents<ClassType>::type,\n+\t\tClassType>::value, \"\");\n+  static_assert(is_same<remove_all_extents<ClassType[2]>::type,\n+\t\tClassType>::value, \"\");\n+  static_assert(is_same<remove_all_extents<ClassType[2][3]>::type,\n+\t\tClassType>::value, \"\");\n+  static_assert(is_same<remove_all_extents<ClassType[][3]>::type,\n+\t\tClassType>::value, \"\");\n+  static_assert(is_same<remove_all_extents<const ClassType[2][3]>::type,\n+\t\tconst ClassType>::value, \"\");\n+}"}, {"sha": "5974a5634b920b46542096c172d0f21495502193", "filename": "libstdc++-v3/testsuite/20_util/remove_const/requirements/explicit_instantiation.cc", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fremove_const%2Frequirements%2Fexplicit_instantiation.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fremove_const%2Frequirements%2Fexplicit_instantiation.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fremove_const%2Frequirements%2Fexplicit_instantiation.cc?ref=ae29d0253f8333b228e24c6202f567ee9dca8da9", "patch": "@@ -0,0 +1,29 @@\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2013 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// NB: This file is for testing type_traits with NO OTHER INCLUDES.\n+\n+#include <type_traits>\n+\n+namespace std\n+{\n+  typedef short test_type;\n+  template struct remove_const<test_type>;\n+}"}, {"sha": "dfc8edf8a36ddd6ddcda9e620c26e91ac4ec63cb", "filename": "libstdc++-v3/testsuite/20_util/remove_const/value.cc", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fremove_const%2Fvalue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fremove_const%2Fvalue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fremove_const%2Fvalue.cc?ref=ae29d0253f8333b228e24c6202f567ee9dca8da9", "patch": "@@ -0,0 +1,37 @@\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2013 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <type_traits>\n+#include <testsuite_tr1.h>\n+\n+void test01()\n+{\n+  using std::remove_const;\n+  using std::is_same;\n+  using namespace __gnu_test;\n+\n+  static_assert(is_same<remove_const<const volatile int>::type,\n+\t\tvolatile int>::value, \"\");\n+  static_assert(is_same<remove_const<const int*>::type, const int*>::value, \"\");\n+  static_assert(is_same<remove_const<const volatile ClassType>::type,\n+\t\tvolatile ClassType>::value, \"\");\n+  static_assert(is_same<remove_const<const ClassType*>::type,\n+\t\tconst ClassType*>::value, \"\");\n+}"}, {"sha": "3ef3f1fbdc9429fec6fc2426abcb2290b4f74fe1", "filename": "libstdc++-v3/testsuite/20_util/remove_cv/requirements/explicit_instantiation.cc", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fremove_cv%2Frequirements%2Fexplicit_instantiation.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fremove_cv%2Frequirements%2Fexplicit_instantiation.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fremove_cv%2Frequirements%2Fexplicit_instantiation.cc?ref=ae29d0253f8333b228e24c6202f567ee9dca8da9", "patch": "@@ -0,0 +1,29 @@\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2013 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// NB: This file is for testing type_traits with NO OTHER INCLUDES.\n+\n+#include <type_traits>\n+\n+namespace std\n+{\n+  typedef short test_type;\n+  template struct remove_cv<test_type>;\n+}"}, {"sha": "b1c59b8d74862cbc4f34873dd1898002b5596063", "filename": "libstdc++-v3/testsuite/20_util/remove_cv/value.cc", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fremove_cv%2Fvalue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fremove_cv%2Fvalue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fremove_cv%2Fvalue.cc?ref=ae29d0253f8333b228e24c6202f567ee9dca8da9", "patch": "@@ -0,0 +1,37 @@\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2013 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <type_traits>\n+#include <testsuite_tr1.h>\n+\n+void test01()\n+{\n+  using std::remove_cv;\n+  using std::is_same;\n+  using namespace __gnu_test;\n+\n+  static_assert(is_same<remove_cv<const volatile int>::type, int>::value, \"\");\n+  static_assert(is_same<remove_cv<const volatile int*>::type,\n+\t\tconst volatile int*>::value, \"\");\n+  static_assert(is_same<remove_cv<const volatile ClassType>::type,\n+\t\tClassType>::value, \"\");\n+  static_assert(is_same<remove_cv<const volatile ClassType*>::type,\n+\t\tconst volatile ClassType*>::value, \"\");\n+}"}, {"sha": "0097100a139bbb4c765aa1a6310853931c09e8e8", "filename": "libstdc++-v3/testsuite/20_util/remove_extent/requirements/explicit_instantiation.cc", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fremove_extent%2Frequirements%2Fexplicit_instantiation.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fremove_extent%2Frequirements%2Fexplicit_instantiation.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fremove_extent%2Frequirements%2Fexplicit_instantiation.cc?ref=ae29d0253f8333b228e24c6202f567ee9dca8da9", "patch": "@@ -0,0 +1,29 @@\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2013 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// NB: This file is for testing type_traits with NO OTHER INCLUDES.\n+\n+#include <type_traits>\n+\n+namespace std\n+{\n+  typedef short test_type;\n+  template struct remove_extent<test_type>;\n+}"}, {"sha": "ddbbd6af02d277e73a87a0f4e3d1455b1c2e40e9", "filename": "libstdc++-v3/testsuite/20_util/remove_extent/value.cc", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fremove_extent%2Fvalue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fremove_extent%2Fvalue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fremove_extent%2Fvalue.cc?ref=ae29d0253f8333b228e24c6202f567ee9dca8da9", "patch": "@@ -0,0 +1,45 @@\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2013 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <type_traits>\n+#include <testsuite_tr1.h>\n+\n+void test01()\n+{\n+  using std::remove_extent;\n+  using std::is_same;\n+  using namespace __gnu_test;\n+\n+  static_assert(is_same<remove_extent<int>::type, int>::value, \"\");\n+  static_assert(is_same<remove_extent<int[2]>::type, int>::value, \"\");\n+  static_assert(is_same<remove_extent<int[2][3]>::type, int[3]>::value, \"\");\n+  static_assert(is_same<remove_extent<int[][3]>::type, int[3]>::value, \"\");\n+  static_assert(is_same<remove_extent<const int[2]>::type,\n+\t\tconst int>::value, \"\");\n+  static_assert(is_same<remove_extent<ClassType>::type, ClassType>::value, \"\");\n+  static_assert(is_same<remove_extent<ClassType[2]>::type,\n+\t\tClassType>::value, \"\");\n+  static_assert(is_same<remove_extent<ClassType[2][3]>::type,\n+\t\tClassType[3]>::value, \"\");\n+  static_assert(is_same<remove_extent<ClassType[][3]>::type,\n+\t\tClassType[3]>::value, \"\");\n+  static_assert(is_same<remove_extent<const ClassType[2]>::type,\n+\t\tconst ClassType>::value, \"\");\n+}"}, {"sha": "1cac9852645edf99069d41778d44d2c49aae3fef", "filename": "libstdc++-v3/testsuite/20_util/remove_pointer/requirements/explicit_instantiation.cc", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fremove_pointer%2Frequirements%2Fexplicit_instantiation.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fremove_pointer%2Frequirements%2Fexplicit_instantiation.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fremove_pointer%2Frequirements%2Fexplicit_instantiation.cc?ref=ae29d0253f8333b228e24c6202f567ee9dca8da9", "patch": "@@ -0,0 +1,29 @@\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2013 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// NB: This file is for testing type_traits with NO OTHER INCLUDES.\n+\n+#include <type_traits>\n+\n+namespace std\n+{\n+  typedef short test_type;\n+  template struct remove_pointer<test_type>;\n+}"}, {"sha": "a032811835e677d86ad29e2ebbc8c4c6dfb3a44a", "filename": "libstdc++-v3/testsuite/20_util/remove_pointer/value.cc", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fremove_pointer%2Fvalue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fremove_pointer%2Fvalue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fremove_pointer%2Fvalue.cc?ref=ae29d0253f8333b228e24c6202f567ee9dca8da9", "patch": "@@ -0,0 +1,38 @@\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2013 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <type_traits>\n+#include <testsuite_tr1.h>\n+\n+void test01()\n+{\n+  using std::remove_pointer;\n+  using std::is_same;\n+  using namespace __gnu_test;\n+\n+  static_assert(is_same<remove_pointer<int*>::type, int>::value, \"\");\n+  static_assert(is_same<remove_pointer<int>::type, int>::value, \"\");\n+  static_assert(is_same<remove_pointer<const int*>::type,\n+\t\tconst int>::value, \"\");\n+  static_assert(is_same<remove_pointer<int**>::type, int*>::value, \"\");\n+  static_assert(is_same<remove_pointer<ClassType*>::type,\n+\t\tClassType>::value, \"\");\n+  static_assert(is_same<remove_pointer<ClassType>::type, ClassType>::value, \"\");\n+}"}, {"sha": "1f39beca364d8f23a86f00f55f4ba71bc9d3649b", "filename": "libstdc++-v3/testsuite/20_util/remove_volatile/requirements/explicit_instantiation.cc", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fremove_volatile%2Frequirements%2Fexplicit_instantiation.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fremove_volatile%2Frequirements%2Fexplicit_instantiation.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fremove_volatile%2Frequirements%2Fexplicit_instantiation.cc?ref=ae29d0253f8333b228e24c6202f567ee9dca8da9", "patch": "@@ -0,0 +1,29 @@\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2013 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// NB: This file is for testing type_traits with NO OTHER INCLUDES.\n+\n+#include <type_traits>\n+\n+namespace std\n+{\n+  typedef short test_type;\n+  template struct remove_volatile<test_type>;\n+}"}, {"sha": "9a5829683347f134e41ced604f93370266e290e1", "filename": "libstdc++-v3/testsuite/20_util/remove_volatile/value.cc", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fremove_volatile%2Fvalue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae29d0253f8333b228e24c6202f567ee9dca8da9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fremove_volatile%2Fvalue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fremove_volatile%2Fvalue.cc?ref=ae29d0253f8333b228e24c6202f567ee9dca8da9", "patch": "@@ -0,0 +1,38 @@\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2013 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <type_traits>\n+#include <testsuite_tr1.h>\n+\n+void test01()\n+{\n+  using std::remove_volatile;\n+  using std::is_same;\n+  using namespace __gnu_test;\n+\n+  static_assert(is_same<remove_volatile<const volatile int>::type,\n+\t\tconst int>::value, \"\");\n+  static_assert(is_same<remove_volatile<volatile int*>::type,\n+\t\tvolatile int*>::value, \"\");\n+  static_assert(is_same<remove_volatile<const volatile ClassType>::type,\n+\t\tconst ClassType>::value, \"\");\n+  static_assert(is_same<remove_volatile<volatile ClassType*>::type,\n+\t\tvolatile ClassType*>::value, \"\");\n+}"}]}