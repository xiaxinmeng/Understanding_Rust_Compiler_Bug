{"sha": "0a71919d5257d2e9097d79d00d840f4ecfd746c4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGE3MTkxOWQ1MjU3ZDJlOTA5N2Q3OWQwMGQ4NDBmNGVjZmQ3NDZjNA==", "commit": {"author": {"name": "Falk Hueffner", "email": "falk.hueffner@student.uni-tuebingen.de", "date": "2003-03-16T19:43:53Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2003-03-16T19:43:53Z"}, "message": "re PR target/9164 ([Alpha] improper code generation)\n\n        PR target/9164\n        * tree.c (get_narrower): For extensions with unchanged bit number,\n        return the unsignedness of the outer mode.\n\n        * gcc.c-torture/execute/20030316-1.c: New test case.\n\nFrom-SVN: r64440", "tree": {"sha": "b2938cc461d63e42039bf0d2ef7b462ae30c5c39", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b2938cc461d63e42039bf0d2ef7b462ae30c5c39"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0a71919d5257d2e9097d79d00d840f4ecfd746c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a71919d5257d2e9097d79d00d840f4ecfd746c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a71919d5257d2e9097d79d00d840f4ecfd746c4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a71919d5257d2e9097d79d00d840f4ecfd746c4/comments", "author": null, "committer": null, "parents": [{"sha": "1f5a253a36c2e680af7a627a5077a61fb8afe6b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f5a253a36c2e680af7a627a5077a61fb8afe6b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f5a253a36c2e680af7a627a5077a61fb8afe6b6"}], "stats": {"total": 25, "additions": 24, "deletions": 1}, "files": [{"sha": "d7d2eb465618ab4d403b7fdc061bea3198772301", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a71919d5257d2e9097d79d00d840f4ecfd746c4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a71919d5257d2e9097d79d00d840f4ecfd746c4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0a71919d5257d2e9097d79d00d840f4ecfd746c4", "patch": "@@ -1,3 +1,9 @@\n+2003-03-16  Falk Hueffner  <falk.hueffner@student.uni-tuebingen.de>\n+\n+\tPR target/9164\n+\t* tree.c (get_narrower): For extensions with unchanged bit number,\n+\treturn the unsignedness of the outer mode.\n+\n 2003-03-16  Roger Sayle  <roger@eyesopen.com>\n \n \t* c-typeck.c (build_component_ref):  Turn \"for\" into \"do .. while\""}, {"sha": "423b43d93ea5ff5e03b62fd64c18653f39ea7170", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a71919d5257d2e9097d79d00d840f4ecfd746c4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a71919d5257d2e9097d79d00d840f4ecfd746c4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0a71919d5257d2e9097d79d00d840f4ecfd746c4", "patch": "@@ -1,3 +1,7 @@\n+2003-03-16  Falk Hueffner  <falk.hueffner@student.uni-tuebingen.de>\n+\n+\t* gcc.c-torture/execute/20030316-1.c: New test case.\n+\n 2003-03-16  Nathan Sidwell  <nathan@codesourcery.com>\n \n \tPR c++/9629"}, {"sha": "bde2e136ad3fdc84e09b79baaa763257e1d2e4d8", "filename": "gcc/testsuite/gcc.c-torture/execute/20030316-1.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a71919d5257d2e9097d79d00d840f4ecfd746c4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20030316-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a71919d5257d2e9097d79d00d840f4ecfd746c4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20030316-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20030316-1.c?ref=0a71919d5257d2e9097d79d00d840f4ecfd746c4", "patch": "@@ -0,0 +1,12 @@\n+/* PR target/9164 */\n+/* The comparison operand was sign extended erraneously.  */\n+\n+int\n+main (void)\n+{\n+    long j = 0x40000000;\n+    if ((unsigned int) (0x40000000 + j) < 0L)\n+ \tabort ();\n+\n+    return 0;\n+}"}, {"sha": "30a1c59d5d8a8e00d303aeb3f59991926ad10a30", "filename": "gcc/tree.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a71919d5257d2e9097d79d00d840f4ecfd746c4/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a71919d5257d2e9097d79d00d840f4ecfd746c4/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=0a71919d5257d2e9097d79d00d840f4ecfd746c4", "patch": "@@ -3958,10 +3958,10 @@ get_narrower (op, unsignedp_ptr)\n \n       /* See what's inside this conversion.  If we decide to strip it,\n \t we will set WIN.  */\n-      op = TREE_OPERAND (op, 0);\n \n       if (bitschange > 0)\n \t{\n+\t  op = TREE_OPERAND (op, 0);\n \t  /* An extension: the outermost one can be stripped,\n \t     but remember whether it is zero or sign extension.  */\n \t  if (first)\n@@ -3980,6 +3980,7 @@ get_narrower (op, unsignedp_ptr)\n \t  if (first)\n \t    uns = TREE_UNSIGNED (TREE_TYPE (op));\n \t  first = 0;\n+\t  op = TREE_OPERAND (op, 0);\n \t}\n \n       win = op;"}]}