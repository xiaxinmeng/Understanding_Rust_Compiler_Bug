{"sha": "f2c0ca66325e53b302a2ccbfd25b28ffa4a619c9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjJjMGNhNjYzMjVlNTNiMzAyYTJjY2JmZDI1YjI4ZmZhNGE2MTljOQ==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2013-09-10T15:16:41Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-09-10T15:16:41Z"}, "message": "switch-c.adb: Minor reformatting.\n\n2013-09-10  Robert Dewar  <dewar@adacore.com>\n\n\t* switch-c.adb: Minor reformatting.\n\t* atree.ads (Original_Nodes): Add documentation on ASIS usage.\n\t* sinfo.ads: Add section on ASIS mode (documentation only).\n\nFrom-SVN: r202464", "tree": {"sha": "9f0e0f359b2432d5e87af46be21b68a2de8de7da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9f0e0f359b2432d5e87af46be21b68a2de8de7da"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f2c0ca66325e53b302a2ccbfd25b28ffa4a619c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2c0ca66325e53b302a2ccbfd25b28ffa4a619c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2c0ca66325e53b302a2ccbfd25b28ffa4a619c9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2c0ca66325e53b302a2ccbfd25b28ffa4a619c9/comments", "author": null, "committer": null, "parents": [{"sha": "7b64b700f29a6753d645e3c6a172039fbda94ac6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b64b700f29a6753d645e3c6a172039fbda94ac6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b64b700f29a6753d645e3c6a172039fbda94ac6"}], "stats": {"total": 70, "additions": 66, "deletions": 4}, "files": [{"sha": "9440fe640d940303022f6de51ebc62bf0044ae35", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2c0ca66325e53b302a2ccbfd25b28ffa4a619c9/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2c0ca66325e53b302a2ccbfd25b28ffa4a619c9/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=f2c0ca66325e53b302a2ccbfd25b28ffa4a619c9", "patch": "@@ -1,3 +1,9 @@\n+2013-09-10  Robert Dewar  <dewar@adacore.com>\n+\n+\t* switch-c.adb: Minor reformatting.\n+\t* atree.ads (Original_Nodes): Add documentation on ASIS usage.\n+\t* sinfo.ads: Add section on ASIS mode (documentation only).\n+\n 2013-09-10  Robert Dewar  <dewar@adacore.com>\n \n \t* sem_prag.adb (Analyze_Pragma, case Warnings): Don't allow"}, {"sha": "123beb3907e8db7fd616be077d3d25b8085a8c7d", "filename": "gcc/ada/atree.ads", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2c0ca66325e53b302a2ccbfd25b28ffa4a619c9/gcc%2Fada%2Fatree.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2c0ca66325e53b302a2ccbfd25b28ffa4a619c9/gcc%2Fada%2Fatree.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fatree.ads?ref=f2c0ca66325e53b302a2ccbfd25b28ffa4a619c9", "patch": "@@ -939,12 +939,15 @@ package Atree is\n    function Original_Node (Node : Node_Id) return Node_Id;\n    pragma Inline (Original_Node);\n    --  If Node has not been rewritten, then returns its input argument\n-   --  unchanged, else returns the Node for the original subtree.\n+   --  unchanged, else returns the Node for the original subtree. Note that\n+   --  this is used extensively by ASIS on the trees constructed in ASIS mode\n+   --  to reconstruct the original semantic tree. See section in sinfo.ads\n+   --  for requirements on original nodes returned by this function.\n    --\n    --  Note: Parents are not preserved in original tree nodes that are\n    --  retrieved in this way (i.e. their children may have children whose\n-   --  pointers which reference some other node).\n-\n+   --  pointers which reference some other node). This needs more details???\n+   --\n    --  Note: there is no direct mechanism for deleting an original node (in\n    --  a manner that can be reversed later). One possible approach is to use\n    --  Rewrite to substitute a null statement for the node to be deleted."}, {"sha": "112f8fc00ab6f8f5868c8102173f8904db97cf6c", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2c0ca66325e53b302a2ccbfd25b28ffa4a619c9/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2c0ca66325e53b302a2ccbfd25b28ffa4a619c9/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=f2c0ca66325e53b302a2ccbfd25b28ffa4a619c9", "patch": "@@ -455,6 +455,59 @@ package Sinfo is\n    --  code is being generated, since they involved expander actions that\n    --  destroy the tree.\n \n+   ---------------\n+   -- ASIS Mode --\n+   ---------------\n+\n+   --  When a file is compiled in ASIS mode (-gnatct), expansion is skipped,\n+   --  and the analysis must generate a tree in a form that meets all ASIS\n+   --  requirements.\n+\n+   --  ASIS must be able to recover the original tree that corresponds to the\n+   --  source. It relies heavily on Original_Node for this purpose, which as\n+   --  described in Atree, records the history when a node is rewritten. ASIS\n+   --  uses Original_Node to recover the original node before the Rewrite.\n+\n+   --  At least in ASIS mode (not really important in non-ASIS mode), when\n+   --  N1 is rewritten as N2:\n+\n+   --    The subtree rooted by the original node N1 should be fully decorated,\n+   --    i.e. all semantic fields noted in sinfo.ads should be set properly\n+   --    and any referenced entities should be complete (with exceptions for\n+   --    representation information, noted below).\n+\n+   --    For all the direct descendants of N1 (original node) their Parent\n+   --    links should point not to N1, but to N2 (rewriting node).\n+\n+   --    The Parent links of rewritten nodes (N1 in this example) are set in\n+   --    some cases (to point to the rewritten parent), but in other cases\n+   --    they are set to Empty. This needs sorting out ??? It would be much\n+   --    cleaner if they could always be set in the original node ???\n+\n+   --  Representation Information\n+\n+   --    For the purposes of the data description annex, the representation\n+   --    information for source declared entities must be complete in the\n+   --    ASIS tree.\n+\n+   --    This requires that the front end call the back end (gigi/gcc) in\n+   --    a special \"back annotate only\" mode to obtain information on layout\n+   --    from the back end.\n+\n+   --    For the purposes of this special \"back annotate only\" mode, the\n+   --    requirements that would normally need to be met to generate code\n+   --    are relaxed as follows:\n+\n+   --      Anonymous types need not have full representation information (e.g.\n+   --      sizes need not be set for types where the front end would normally\n+   --      set the sizes), since anonymous types can be ignored in this mode.\n+\n+   --      In this mode, gigi will see at least fragments of a fully annotated\n+   --      unexpanded tree. This means that it will encounter nodes it does\n+   --      not normally handle (such as stubs, task bodies etc). It should\n+   --      simply ignore these nodes, since they are not relevant to the task\n+   --      of back annotating representation information.\n+\n    ------------------------\n    -- Common Flag Fields --\n    ------------------------"}, {"sha": "2cca5d114f61945912b649889287c8db993b5483", "filename": "gcc/ada/switch-c.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2c0ca66325e53b302a2ccbfd25b28ffa4a619c9/gcc%2Fada%2Fswitch-c.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2c0ca66325e53b302a2ccbfd25b28ffa4a619c9/gcc%2Fada%2Fswitch-c.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fswitch-c.adb?ref=f2c0ca66325e53b302a2ccbfd25b28ffa4a619c9", "patch": "@@ -31,9 +31,9 @@ with Debug;    use Debug;\n with Lib;      use Lib;\n with Osint;    use Osint;\n with Opt;      use Opt;\n-with Validsw;  use Validsw;\n with Stylesw;  use Stylesw;\n with Ttypes;   use Ttypes;\n+with Validsw;  use Validsw;\n with Warnsw;   use Warnsw;\n \n with Ada.Unchecked_Deallocation;"}]}