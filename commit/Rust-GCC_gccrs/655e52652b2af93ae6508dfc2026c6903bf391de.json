{"sha": "655e52652b2af93ae6508dfc2026c6903bf391de", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjU1ZTUyNjUyYjJhZjkzYWU2NTA4ZGZjMjAyNmM2OTAzYmYzOTFkZQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2017-05-22T18:54:54Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-05-22T18:54:54Z"}, "message": "re PR middle-end/80809 (Multi-free error for variable size array used within OpenMP task)\n\n\tPR middle-end/80809\n\t* omp-low.c (finish_taskreg_remap): New function.\n\t(finish_taskreg_scan): If unit size of ctx->record_type\n\tis non-constant, unshare the size expression and replace\n\tdecls in it with possible outer var refs.\n\n\t* testsuite/libgomp.c/pr80809-2.c: New test.\n\t* testsuite/libgomp.c/pr80809-3.c: New test.\n\nFrom-SVN: r248346", "tree": {"sha": "f78ceed96325d47d3bf86d478392268ca65be633", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f78ceed96325d47d3bf86d478392268ca65be633"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/655e52652b2af93ae6508dfc2026c6903bf391de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/655e52652b2af93ae6508dfc2026c6903bf391de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/655e52652b2af93ae6508dfc2026c6903bf391de", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/655e52652b2af93ae6508dfc2026c6903bf391de/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e9e2ef9f2f1e037e0f3bc4990947e242106e43b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9e2ef9f2f1e037e0f3bc4990947e242106e43b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9e2ef9f2f1e037e0f3bc4990947e242106e43b9"}], "stats": {"total": 115, "additions": 115, "deletions": 0}, "files": [{"sha": "7bdd6f2c7a769a696ddabebbe6dbfc70783f2fe5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/655e52652b2af93ae6508dfc2026c6903bf391de/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/655e52652b2af93ae6508dfc2026c6903bf391de/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=655e52652b2af93ae6508dfc2026c6903bf391de", "patch": "@@ -1,5 +1,11 @@\n 2017-05-22  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR middle-end/80809\n+\t* omp-low.c (finish_taskreg_remap): New function.\n+\t(finish_taskreg_scan): If unit size of ctx->record_type\n+\tis non-constant, unshare the size expression and replace\n+\tdecls in it with possible outer var refs.\n+\n \tPR middle-end/80809\n \t* gimplify.c (omp_add_variable): For GOVD_DEBUG_PRIVATE use\n \tGOVD_SHARED rather than GOVD_PRIVATE with it."}, {"sha": "968075c3df547c2cf13a873437b420899f649ebc", "filename": "gcc/omp-low.c", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/655e52652b2af93ae6508dfc2026c6903bf391de/gcc%2Fomp-low.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/655e52652b2af93ae6508dfc2026c6903bf391de/gcc%2Fomp-low.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-low.c?ref=655e52652b2af93ae6508dfc2026c6903bf391de", "patch": "@@ -1913,6 +1913,29 @@ scan_omp_task (gimple_stmt_iterator *gsi, omp_context *outer_ctx)\n     }\n }\n \n+/* Helper function for finish_taskreg_scan, called through walk_tree.\n+   If maybe_lookup_decl_in_outer_context returns non-NULL for some\n+   tree, replace it in the expression.  */\n+\n+static tree\n+finish_taskreg_remap (tree *tp, int *walk_subtrees, void *data)\n+{\n+  if (VAR_P (*tp))\n+    {\n+      omp_context *ctx = (omp_context *) data;\n+      tree t = maybe_lookup_decl_in_outer_ctx (*tp, ctx);\n+      if (t != *tp)\n+\t{\n+\t  if (DECL_HAS_VALUE_EXPR_P (t))\n+\t    t = unshare_expr (DECL_VALUE_EXPR (t));\n+\t  *tp = t;\n+\t}\n+      *walk_subtrees = 0;\n+    }\n+  else if (IS_TYPE_OR_DECL_P (*tp))\n+    *walk_subtrees = 0;\n+  return NULL_TREE;\n+}\n \n /* If any decls have been made addressable during scan_omp,\n    adjust their fields if needed, and layout record types\n@@ -2033,6 +2056,11 @@ finish_taskreg_scan (omp_context *ctx)\n \tlayout_type (ctx->srecord_type);\n       tree t = fold_convert_loc (loc, long_integer_type_node,\n \t\t\t\t TYPE_SIZE_UNIT (ctx->record_type));\n+      if (TREE_CODE (t) != INTEGER_CST)\n+\t{\n+\t  t = unshare_expr (t);\n+\t  walk_tree (&t, finish_taskreg_remap, ctx, NULL);\n+\t}\n       gimple_omp_task_set_arg_size (ctx->stmt, t);\n       t = build_int_cst (long_integer_type_node,\n \t\t\t TYPE_ALIGN_UNIT (ctx->record_type));"}, {"sha": "8209f9fa75c3a6d56845951c4fe161e1d9de0a04", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/655e52652b2af93ae6508dfc2026c6903bf391de/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/655e52652b2af93ae6508dfc2026c6903bf391de/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=655e52652b2af93ae6508dfc2026c6903bf391de", "patch": "@@ -1,5 +1,9 @@\n 2017-05-22  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR middle-end/80809\n+\t* testsuite/libgomp.c/pr80809-2.c: New test.\n+\t* testsuite/libgomp.c/pr80809-3.c: New test.\n+\n \tPR middle-end/80809\n \t* testsuite/libgomp.c/pr80809-1.c: New test.\n "}, {"sha": "48af370779493d0e0aeca2bdfed1ec672ec47619", "filename": "libgomp/testsuite/libgomp.c/pr80809-2.c", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/655e52652b2af93ae6508dfc2026c6903bf391de/libgomp%2Ftestsuite%2Flibgomp.c%2Fpr80809-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/655e52652b2af93ae6508dfc2026c6903bf391de/libgomp%2Ftestsuite%2Flibgomp.c%2Fpr80809-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c%2Fpr80809-2.c?ref=655e52652b2af93ae6508dfc2026c6903bf391de", "patch": "@@ -0,0 +1,35 @@\n+/* PR middle-end/80809 */\n+/* { dg-do run } */\n+\n+__attribute__((noinline, noclone)) void\n+foo (int x)\n+{\n+  int i, v[x], w[16];\n+  for (i = 0; i < x; i++)\n+    v[i] = i;\n+  for (i = 0; i < 16; i++)\n+    w[i] = 0;\n+#pragma omp parallel\n+#pragma omp single\n+  for (i = 0; i < 16; i++)\n+#pragma omp task firstprivate (v)\n+    {\n+      int j;\n+      for (j = 0; j < x; j++)\n+\tv[j] += i;\n+      for (j = 0; j < x; j++)\n+\tw[i] += v[j];\n+    }\n+  for (i = 0; i < 16; i++)\n+    if (w[i] != (x - 1) * x / 2 + x * i)\n+      __builtin_abort ();\n+}\n+\n+int\n+main ()\n+{\n+  foo (4);\n+  foo (27);\n+  foo (196);\n+  return 0;\n+}"}, {"sha": "7e0d17983e4de661b5474bdc3c5bcd1ceab08911", "filename": "libgomp/testsuite/libgomp.c/pr80809-3.c", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/655e52652b2af93ae6508dfc2026c6903bf391de/libgomp%2Ftestsuite%2Flibgomp.c%2Fpr80809-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/655e52652b2af93ae6508dfc2026c6903bf391de/libgomp%2Ftestsuite%2Flibgomp.c%2Fpr80809-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c%2Fpr80809-3.c?ref=655e52652b2af93ae6508dfc2026c6903bf391de", "patch": "@@ -0,0 +1,42 @@\n+/* PR middle-end/80809 */\n+/* { dg-do run } */\n+\n+__attribute__((noinline, noclone)) void\n+foo (int x)\n+{\n+  int i, v[x], w[16];\n+  for (i = 0; i < x; i++)\n+    v[i] = i;\n+  for (i = 0; i < 16; i++)\n+    w[i] = 0;\n+#pragma omp parallel\n+#pragma omp single\n+  {\n+    int z[x];\n+    for (i = 0; i < x; i++)\n+      z[0] = 0;\n+    for (i = 0; i < 16; i++)\n+#pragma omp task firstprivate (z) firstprivate (v)\n+      {\n+\tint j;\n+\tfor (j = 0; j < x; j++)\n+\t  z[j] = i;\n+\tfor (j = 0; j < x; j++)\n+\t  v[j] += z[j];\n+\tfor (j = 0; j < x; j++)\n+\t  w[i] += v[j];\n+      }\n+  }\n+  for (i = 0; i < 16; i++)\n+    if (w[i] != (x - 1) * x / 2 + x * i)\n+      __builtin_abort ();\n+}\n+\n+int\n+main ()\n+{\n+  foo (4);\n+  foo (27);\n+  foo (196);\n+  return 0;\n+}"}]}