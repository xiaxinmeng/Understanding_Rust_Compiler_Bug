{"sha": "69723be2b39c9517ebe919b6f81b9b3b78d44b0a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njk3MjNiZTJiMzljOTUxN2ViZTkxOWI2ZjgxYjliM2I3OGQ0NGIwYQ==", "commit": {"author": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2006-09-17T13:14:53Z"}, "committer": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2006-09-17T13:14:53Z"}, "message": "re PR c/25993 (-std= produces incorrect preprocessor output for .S)\n\ngcc/\n\tPR c/25993\n\t* c-opts.c (c_common_handle_option): Ignore the -std options\n\tif the input language is assembly.\n\ntestsuite/\n\tPR c/25993\n\t* gcc.dg/pr25993.c: New test.\n\nFrom-SVN: r117005", "tree": {"sha": "db0c9c78d97e02a45d563a0b352ac781b1e79a92", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/db0c9c78d97e02a45d563a0b352ac781b1e79a92"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/69723be2b39c9517ebe919b6f81b9b3b78d44b0a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69723be2b39c9517ebe919b6f81b9b3b78d44b0a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69723be2b39c9517ebe919b6f81b9b3b78d44b0a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69723be2b39c9517ebe919b6f81b9b3b78d44b0a/comments", "author": null, "committer": null, "parents": [{"sha": "7a7d38044dabb00eee2089a951a2da5afe9d548e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a7d38044dabb00eee2089a951a2da5afe9d548e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a7d38044dabb00eee2089a951a2da5afe9d548e"}], "stats": {"total": 44, "additions": 39, "deletions": 5}, "files": [{"sha": "9cb013809eabda9562e3ef16a553d6d29f930d81", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69723be2b39c9517ebe919b6f81b9b3b78d44b0a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69723be2b39c9517ebe919b6f81b9b3b78d44b0a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=69723be2b39c9517ebe919b6f81b9b3b78d44b0a", "patch": "@@ -1,3 +1,9 @@\n+2006-09-17  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\tPR c/25993\n+\t* c-opts.c (c_common_handle_option): Ignore the -std options\n+\tif the input language is assembly.\n+\n 2006-09-17  Ira Rosen  <irar@il.ibm.com>\n \n         PR tree-opt/21591"}, {"sha": "5821deabb969ab642daa2218e1722cff2fd21d73", "filename": "gcc/c-opts.c", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69723be2b39c9517ebe919b6f81b9b3b78d44b0a/gcc%2Fc-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69723be2b39c9517ebe919b6f81b9b3b78d44b0a/gcc%2Fc-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-opts.c?ref=69723be2b39c9517ebe919b6f81b9b3b78d44b0a", "patch": "@@ -268,6 +268,10 @@ c_common_handle_option (size_t scode, const char *arg, int value)\n   enum opt_code code = (enum opt_code) scode;\n   int result = 1;\n \n+  /* Prevent resetting the language standard to a C dialect when the driver\n+     has already determined that we're looking at assembler input.  */\n+  bool preprocessing_asm_p = (cpp_get_options (parse_in)->lang == CLK_ASM);\n+ \n   switch (code)\n     {\n     default:\n@@ -905,29 +909,34 @@ c_common_handle_option (size_t scode, const char *arg, int value)\n \n     case OPT_std_c__98:\n     case OPT_std_gnu__98:\n-      set_std_cxx98 (code == OPT_std_c__98 /* ISO */);\n+      if (!preprocessing_asm_p)\n+\tset_std_cxx98 (code == OPT_std_c__98 /* ISO */);\n       break;\n \n     case OPT_std_c89:\n     case OPT_std_iso9899_1990:\n     case OPT_std_iso9899_199409:\n-      set_std_c89 (code == OPT_std_iso9899_199409 /* c94 */, true /* ISO */);\n+      if (!preprocessing_asm_p)\n+\tset_std_c89 (code == OPT_std_iso9899_199409 /* c94 */, true /* ISO */);\n       break;\n \n     case OPT_std_gnu89:\n-      set_std_c89 (false /* c94 */, false /* ISO */);\n+      if (!preprocessing_asm_p)\n+\tset_std_c89 (false /* c94 */, false /* ISO */);\n       break;\n \n     case OPT_std_c99:\n     case OPT_std_c9x:\n     case OPT_std_iso9899_1999:\n     case OPT_std_iso9899_199x:\n-      set_std_c99 (true /* ISO */);\n+      if (!preprocessing_asm_p)\n+\tset_std_c99 (true /* ISO */);\n       break;\n \n     case OPT_std_gnu99:\n     case OPT_std_gnu9x:\n-      set_std_c99 (false /* ISO */);\n+      if (!preprocessing_asm_p)\n+\tset_std_c99 (false /* ISO */);\n       break;\n \n     case OPT_trigraphs:"}, {"sha": "0864aeb373e2818c064dcc19c6281ce8a6065371", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69723be2b39c9517ebe919b6f81b9b3b78d44b0a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69723be2b39c9517ebe919b6f81b9b3b78d44b0a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=69723be2b39c9517ebe919b6f81b9b3b78d44b0a", "patch": "@@ -1,3 +1,8 @@\n+2006-09-16  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\tPR c/25993\n+\t* gcc.dg/pr25993.c: New test.\n+\n 2006-09-17  Ira Rosen  <irar@il.ibm.com>\n \n         PR tree-opt/21591"}, {"sha": "392bbedfeb1cfd371293f6448f9327f6a9da05e7", "filename": "gcc/testsuite/gcc.dg/pr25993.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69723be2b39c9517ebe919b6f81b9b3b78d44b0a/gcc%2Ftestsuite%2Fgcc.dg%2Fpr25993.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69723be2b39c9517ebe919b6f81b9b3b78d44b0a/gcc%2Ftestsuite%2Fgcc.dg%2Fpr25993.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr25993.c?ref=69723be2b39c9517ebe919b6f81b9b3b78d44b0a", "patch": "@@ -0,0 +1,14 @@\n+/* { dg-do assemble { target i?86-*-* x86_64-*-* } } */\n+/* { dg-options \"-std=c99 -x assembler-with-cpp\" } */\n+\n+#ifndef __ASSEMBLER__\n+extern int func(void);\n+#else\n+.global func\n+.type func,%function\n+.align 4\n+func:\n+        ret\n+.size func,.-func\n+#endif\n+"}]}