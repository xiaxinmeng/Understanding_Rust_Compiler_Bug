{"sha": "f7e8cd25dd6df6eb5958ff35a60d4de5787f72a2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjdlOGNkMjVkZDZkZjZlYjU5NThmZjM1YTYwZDRkZTU3ODdmNzJhMg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2013-04-10T06:33:26Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2013-04-10T06:33:26Z"}, "message": "re PR c++/56895 (ICE: unexpected expression of kind arrow_expr)\n\n\tPR c++/56895\n\t* typeck.c (cp_build_binary_op): Call fold_non_dependent_expr_sfinae\n\tfirst before calling maybe_constant_value for warn_for_div_by_zero\n\tor invalid shift count warning purposes.\n\n\t* g++.dg/template/arrow3.C: New test.\n\nFrom-SVN: r197660", "tree": {"sha": "1f84c60ffe349e6fb707d5f769e5b1d782d93b1e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1f84c60ffe349e6fb707d5f769e5b1d782d93b1e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f7e8cd25dd6df6eb5958ff35a60d4de5787f72a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7e8cd25dd6df6eb5958ff35a60d4de5787f72a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f7e8cd25dd6df6eb5958ff35a60d4de5787f72a2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7e8cd25dd6df6eb5958ff35a60d4de5787f72a2/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "13aac201baed695d6dc1646e4e07f19e24b3da00", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13aac201baed695d6dc1646e4e07f19e24b3da00", "html_url": "https://github.com/Rust-GCC/gccrs/commit/13aac201baed695d6dc1646e4e07f19e24b3da00"}], "stats": {"total": 65, "additions": 61, "deletions": 4}, "files": [{"sha": "767b2c3820e9d41cb2a9f12ca1ae57a4898deca5", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7e8cd25dd6df6eb5958ff35a60d4de5787f72a2/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7e8cd25dd6df6eb5958ff35a60d4de5787f72a2/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=f7e8cd25dd6df6eb5958ff35a60d4de5787f72a2", "patch": "@@ -1,3 +1,10 @@\n+2013-04-10  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/56895\n+\t* typeck.c (cp_build_binary_op): Call fold_non_dependent_expr_sfinae\n+\tfirst before calling maybe_constant_value for warn_for_div_by_zero\n+\tor invalid shift count warning purposes.\n+\n 2013-04-09  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/25466"}, {"sha": "2f60b102790faf011de78ae9741b1995a7f08c10", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7e8cd25dd6df6eb5958ff35a60d4de5787f72a2/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7e8cd25dd6df6eb5958ff35a60d4de5787f72a2/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=f7e8cd25dd6df6eb5958ff35a60d4de5787f72a2", "patch": "@@ -4047,8 +4047,9 @@ cp_build_binary_op (location_t location,\n \t      || code1 == COMPLEX_TYPE || code1 == VECTOR_TYPE))\n \t{\n \t  enum tree_code tcode0 = code0, tcode1 = code1;\n+\t  tree cop1 = fold_non_dependent_expr_sfinae (op1, tf_none);\n \n-\t  warn_for_div_by_zero (location, maybe_constant_value (op1));\n+\t  warn_for_div_by_zero (location, maybe_constant_value (cop1));\n \n \t  if (tcode0 == COMPLEX_TYPE || tcode0 == VECTOR_TYPE)\n \t    tcode0 = TREE_CODE (TREE_TYPE (TREE_TYPE (op0)));\n@@ -4084,7 +4085,11 @@ cp_build_binary_op (location_t location,\n \n     case TRUNC_MOD_EXPR:\n     case FLOOR_MOD_EXPR:\n-      warn_for_div_by_zero (location, maybe_constant_value (op1));\n+      {\n+\ttree cop1 = fold_non_dependent_expr_sfinae (op1, tf_none);\n+\n+\twarn_for_div_by_zero (location, maybe_constant_value (cop1));\n+      }\n \n       if (code0 == VECTOR_TYPE && code1 == VECTOR_TYPE\n \t  && TREE_CODE (TREE_TYPE (type0)) == INTEGER_TYPE\n@@ -4132,7 +4137,8 @@ cp_build_binary_op (location_t location,\n \t}\n       else if (code0 == INTEGER_TYPE && code1 == INTEGER_TYPE)\n \t{\n-\t  tree const_op1 = maybe_constant_value (op1);\n+\t  tree const_op1 = fold_non_dependent_expr_sfinae (op1, tf_none);\n+\t  const_op1 = maybe_constant_value (const_op1);\n \t  if (TREE_CODE (const_op1) != INTEGER_CST)\n \t    const_op1 = op1;\n \t  result_type = type0;\n@@ -4178,7 +4184,8 @@ cp_build_binary_op (location_t location,\n \t}\n       else if (code0 == INTEGER_TYPE && code1 == INTEGER_TYPE)\n \t{\n-\t  tree const_op1 = maybe_constant_value (op1);\n+\t  tree const_op1 = fold_non_dependent_expr_sfinae (op1, tf_none);\n+\t  const_op1 = maybe_constant_value (const_op1);\n \t  if (TREE_CODE (const_op1) != INTEGER_CST)\n \t    const_op1 = op1;\n \t  result_type = type0;"}, {"sha": "6b44c64351e18e3c386d8c8f173bdeaa3af9835e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7e8cd25dd6df6eb5958ff35a60d4de5787f72a2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7e8cd25dd6df6eb5958ff35a60d4de5787f72a2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f7e8cd25dd6df6eb5958ff35a60d4de5787f72a2", "patch": "@@ -1,3 +1,8 @@\n+2013-04-10  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/56895\n+\t* g++.dg/template/arrow3.C: New test.\n+\n 2013-04-09  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* gcc.target/arm/minmax_minus.c: New test."}, {"sha": "b2029ba4894d749dfbfd4ec2e65d37bcb13b07dc", "filename": "gcc/testsuite/g++.dg/template/arrow3.C", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7e8cd25dd6df6eb5958ff35a60d4de5787f72a2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Farrow3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7e8cd25dd6df6eb5958ff35a60d4de5787f72a2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Farrow3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Farrow3.C?ref=f7e8cd25dd6df6eb5958ff35a60d4de5787f72a2", "patch": "@@ -0,0 +1,38 @@\n+// PR c++/56895\n+// { dg-do compile }\n+\n+extern struct A { bool foo (); A bar (); } *a;\n+\n+template <int>\n+int\n+baz1 ()\n+{\n+  return 2 << (a->bar().foo() ? 1 : 0);\n+}\n+\n+template <int>\n+int\n+baz2 ()\n+{\n+  return 2 >> (a->bar().foo() ? 1 : 0);\n+}\n+\n+template <int>\n+int\n+baz3 ()\n+{\n+  return 10 / (a->bar().foo() ? 1 : 2);\n+}\n+\n+template <int>\n+int\n+baz4 ()\n+{\n+  return 10 % (a->bar().foo() ? 1 : 0);\n+}\n+\n+int\n+test ()\n+{\n+  return baz1<0> () + baz2<0> () + baz3<0> () + baz4<0> ();\n+}"}]}