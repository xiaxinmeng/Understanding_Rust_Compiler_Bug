{"sha": "e43736ad2e9788b5b02a39f38413c5fe693cb6cb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTQzNzM2YWQyZTk3ODhiNWIwMmEzOWYzODQxM2M1ZmU2OTNjYjZjYg==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2003-05-14T21:13:49Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2003-05-14T21:13:49Z"}, "message": "re PR rtl-optimization/10764 (ICE when using log(), -fast-math and optimization)\n\n\n\tPR optimization/10764\n\t* config/i386/i386.md (atan2df3, atan2sf3, atan2xf3, atan2tf3):\n\tAdd an explicit clobber to show that UNSPEC_FPATAN clobbers st(1).\n\t(*fyl2x_sfxf3, *fyl2x_dfxf3, *fyl2x_xf3, *fyl2x_tfxf3):  Likewise,\n\tadd an explicit clobber to show that UNSPEC_FYL2X clobbers st(1).\n\t(logsf2, logdf2, logxf2, logtf2): Update expander patterns to match\n\tthe corresponding *fyl2x_?fxf3 instructions.\n\n\t* gcc.dg/builtins-15.c: New test case.\n\nFrom-SVN: r66811", "tree": {"sha": "8032588c7df6b0368bf90602bec9b9e0d9964d37", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8032588c7df6b0368bf90602bec9b9e0d9964d37"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e43736ad2e9788b5b02a39f38413c5fe693cb6cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e43736ad2e9788b5b02a39f38413c5fe693cb6cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e43736ad2e9788b5b02a39f38413c5fe693cb6cb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e43736ad2e9788b5b02a39f38413c5fe693cb6cb/comments", "author": null, "committer": null, "parents": [{"sha": "f42f5a1b1ec954dd53ea998ff4188c1de8001b0d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f42f5a1b1ec954dd53ea998ff4188c1de8001b0d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f42f5a1b1ec954dd53ea998ff4188c1de8001b0d"}], "stats": {"total": 131, "additions": 87, "deletions": 44}, "files": [{"sha": "81d9028302b737157742a1ea7d8b4e8d8562c7cd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e43736ad2e9788b5b02a39f38413c5fe693cb6cb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e43736ad2e9788b5b02a39f38413c5fe693cb6cb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e43736ad2e9788b5b02a39f38413c5fe693cb6cb", "patch": "@@ -1,3 +1,13 @@\n+2003-05-14  Roger Sayle  <roger@eyesopen.com>\n+\n+\tPR optimization/10764\n+\t* config/i386/i386.md (atan2df3, atan2sf3, atan2xf3, atan2tf3): \n+\tAdd an explicit clobber to show that UNSPEC_FPATAN clobbers st(1).\n+\t(*fyl2x_sfxf3, *fyl2x_dfxf3, *fyl2x_xf3, *fyl2x_tfxf3):  Likewise,\n+\tadd an explicit clobber to show that UNSPEC_FYL2X clobbers st(1).\n+\t(logsf2, logdf2, logxf2, logtf2): Update expander patterns to match\n+\tthe corresponding *fyl2x_?fxf3 instructions.\n+\n 2003-05-14  Richard Henderson  <rth@redhat.com>\n \n \t* config/ia64/ia64.c (ia64_expand_load_address): Force destination"}, {"sha": "eb03cf2b8d55237ada91726b02dbd954b2b622f3", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 56, "deletions": 44, "changes": 100, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e43736ad2e9788b5b02a39f38413c5fe693cb6cb/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e43736ad2e9788b5b02a39f38413c5fe693cb6cb/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=e43736ad2e9788b5b02a39f38413c5fe693cb6cb", "patch": "@@ -15481,97 +15481,106 @@\n    (set_attr \"mode\" \"XF\")])\n \n (define_insn \"atan2df3\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n-\t(unspec:DF [(match_operand:DF 2 \"register_operand\" \"0\")\n-\t\t    (match_operand:DF 1 \"register_operand\" \"u\")]\n-\t UNSPEC_FPATAN))]\n+  [(parallel [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n+\t\t   (unspec:DF [(match_operand:DF 2 \"register_operand\" \"0\")\n+\t\t\t       (match_operand:DF 1 \"register_operand\" \"u\")]\n+\t\t    UNSPEC_FPATAN))\n+\t      (clobber (match_dup 1))])]\n   \"! TARGET_NO_FANCY_MATH_387 && TARGET_80387\n    && flag_unsafe_math_optimizations\"\n   \"fpatan\"\n   [(set_attr \"type\" \"fpspc\")\n    (set_attr \"mode\" \"DF\")])\n \n (define_insn \"atan2sf3\"\n-  [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n-\t(unspec:SF [(match_operand:SF 2 \"register_operand\" \"0\")\n-\t\t    (match_operand:SF 1 \"register_operand\" \"u\")]\n-\t UNSPEC_FPATAN))]\n+  [(parallel [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n+\t\t   (unspec:SF [(match_operand:SF 2 \"register_operand\" \"0\")\n+\t\t\t       (match_operand:SF 1 \"register_operand\" \"u\")]\n+\t\t    UNSPEC_FPATAN))\n+\t      (clobber (match_dup 1))])]\n   \"! TARGET_NO_FANCY_MATH_387 && TARGET_80387\n    && flag_unsafe_math_optimizations\"\n   \"fpatan\"\n   [(set_attr \"type\" \"fpspc\")\n    (set_attr \"mode\" \"SF\")])\n \n (define_insn \"atan2xf3\"\n-  [(set (match_operand:XF 0 \"register_operand\" \"=f\")\n-\t(unspec:XF [(match_operand:XF 2 \"register_operand\" \"0\")\n-\t\t    (match_operand:XF 1 \"register_operand\" \"u\")]\n-\t UNSPEC_FPATAN))]\n+  [(parallel [(set (match_operand:XF 0 \"register_operand\" \"=f\")\n+\t\t   (unspec:XF [(match_operand:XF 2 \"register_operand\" \"0\")\n+\t\t\t       (match_operand:XF 1 \"register_operand\" \"u\")]\n+\t\t    UNSPEC_FPATAN))\n+\t      (clobber (match_dup 1))])]\n   \"! TARGET_NO_FANCY_MATH_387 && TARGET_80387\n    && flag_unsafe_math_optimizations\"\n   \"fpatan\"\n   [(set_attr \"type\" \"fpspc\")\n    (set_attr \"mode\" \"XF\")])\n \n (define_insn \"atan2tf3\"\n-  [(set (match_operand:TF 0 \"register_operand\" \"=f\")\n-\t(unspec:TF [(match_operand:TF 2 \"register_operand\" \"0\")\n-\t\t    (match_operand:TF 1 \"register_operand\" \"u\")]\n-\t UNSPEC_FPATAN))]\n+  [(parallel [(set (match_operand:TF 0 \"register_operand\" \"=f\")\n+\t\t   (unspec:TF [(match_operand:TF 2 \"register_operand\" \"0\")\n+\t\t\t       (match_operand:TF 1 \"register_operand\" \"u\")]\n+\t\t    UNSPEC_FPATAN))\n+\t      (clobber (match_dup 1))])]\n   \"! TARGET_NO_FANCY_MATH_387 && TARGET_80387\n    && flag_unsafe_math_optimizations\"\n   \"fpatan\"\n   [(set_attr \"type\" \"fpspc\")\n    (set_attr \"mode\" \"XF\")])\n \n (define_insn \"*fyl2x_sfxf3\"\n-  [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n-\t(unspec:SF [(match_operand:SF 2 \"register_operand\" \"0\")\n-\t\t    (match_operand:XF 1 \"register_operand\" \"u\")]\n-\t UNSPEC_FYL2X))]\n+  [(parallel [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n+\t\t   (unspec:SF [(match_operand:SF 2 \"register_operand\" \"0\")\n+\t\t\t       (match_operand:XF 1 \"register_operand\" \"u\")]\n+\t\t    UNSPEC_FYL2X))\n+\t      (clobber (match_dup 1))])]\n   \"! TARGET_NO_FANCY_MATH_387 && TARGET_80387\n    && flag_unsafe_math_optimizations\"\n   \"fyl2x\"\n   [(set_attr \"type\" \"fpspc\")\n    (set_attr \"mode\" \"SF\")])\n \n (define_insn \"*fyl2x_dfxf3\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n-\t(unspec:DF [(match_operand:DF 2 \"register_operand\" \"0\")\n-\t\t    (match_operand:XF 1 \"register_operand\" \"u\")]\n-\t UNSPEC_FYL2X))]\n+  [(parallel [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n+\t\t   (unspec:DF [(match_operand:DF 2 \"register_operand\" \"0\")\n+\t\t\t       (match_operand:XF 1 \"register_operand\" \"u\")]\n+\t\t    UNSPEC_FYL2X))\n+\t      (clobber (match_dup 1))])]\n   \"! TARGET_NO_FANCY_MATH_387 && TARGET_80387\n    && flag_unsafe_math_optimizations\"\n   \"fyl2x\"\n   [(set_attr \"type\" \"fpspc\")\n    (set_attr \"mode\" \"DF\")])\n \n (define_insn \"*fyl2x_xf3\"\n-  [(set (match_operand:XF 0 \"register_operand\" \"=f\")\n-\t(unspec:XF [(match_operand:XF 2 \"register_operand\" \"0\")\n-\t\t    (match_operand:XF 1 \"register_operand\" \"u\")]\n-\t UNSPEC_FYL2X))]\n+  [(parallel [(set (match_operand:XF 0 \"register_operand\" \"=f\")\n+\t\t   (unspec:XF [(match_operand:XF 2 \"register_operand\" \"0\")\n+\t\t\t       (match_operand:XF 1 \"register_operand\" \"u\")]\n+\t\t    UNSPEC_FYL2X))\n+\t      (clobber (match_dup 1))])]\n   \"! TARGET_NO_FANCY_MATH_387 && TARGET_80387\n    && flag_unsafe_math_optimizations\"\n   \"fyl2x\"\n   [(set_attr \"type\" \"fpspc\")\n    (set_attr \"mode\" \"XF\")])\n \n (define_insn \"*fyl2x_tfxf3\"\n-  [(set (match_operand:TF 0 \"register_operand\" \"=f\")\n-\t(unspec:TF [(match_operand:TF 2 \"register_operand\" \"0\")\n-\t\t    (match_operand:XF 1 \"register_operand\" \"u\")]\n-\t UNSPEC_FYL2X))]\n+  [(parallel [(set (match_operand:TF 0 \"register_operand\" \"=f\")\n+\t\t   (unspec:TF [(match_operand:TF 2 \"register_operand\" \"0\")\n+\t\t\t       (match_operand:XF 1 \"register_operand\" \"u\")]\n+\t\t    UNSPEC_FYL2X))\n+\t      (clobber (match_dup 1))])]\n   \"! TARGET_NO_FANCY_MATH_387 && TARGET_80387\n    && flag_unsafe_math_optimizations\"\n   \"fyl2x\"\n   [(set_attr \"type\" \"fpspc\")\n    (set_attr \"mode\" \"XF\")])\n \n (define_expand \"logsf2\"\n-  [(set (match_operand:SF 0 \"register_operand\" \"\")\n-\t(unspec:SF [(match_operand:SF 1 \"register_operand\" \"\")\n-\t\t    (match_dup 2)] UNSPEC_FYL2X))]\n+  [(parallel [(set (match_operand:SF 0 \"register_operand\" \"\")\n+\t\t   (unspec:SF [(match_operand:SF 1 \"register_operand\" \"\")\n+\t\t\t       (match_dup 2)] UNSPEC_FYL2X))\n+\t      (clobber (match_dup 2))])]\n   \"! TARGET_NO_FANCY_MATH_387 && TARGET_80387\n    && flag_unsafe_math_optimizations\"\n {\n@@ -15583,9 +15592,10 @@\n })\n \n (define_expand \"logdf2\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"\")\n-\t(unspec:DF [(match_operand:DF 1 \"register_operand\" \"\")\n-\t\t    (match_dup 2)] UNSPEC_FYL2X))]\n+  [(parallel [(set (match_operand:DF 0 \"register_operand\" \"\")\n+\t\t   (unspec:DF [(match_operand:DF 1 \"register_operand\" \"\")\n+\t\t\t       (match_dup 2)] UNSPEC_FYL2X))\n+\t      (clobber (match_dup 2))])]\n   \"! TARGET_NO_FANCY_MATH_387 && TARGET_80387\n    && flag_unsafe_math_optimizations\"\n {\n@@ -15597,9 +15607,10 @@\n })\n \n (define_expand \"logxf2\"\n-  [(set (match_operand:XF 0 \"register_operand\" \"\")\n-\t(unspec:XF [(match_operand:XF 1 \"register_operand\" \"\")\n-\t\t    (match_dup 2)] UNSPEC_FYL2X))]\n+  [(parallel [(set (match_operand:XF 0 \"register_operand\" \"\")\n+\t\t   (unspec:XF [(match_operand:XF 1 \"register_operand\" \"\")\n+\t\t\t       (match_dup 2)] UNSPEC_FYL2X))\n+\t      (clobber (match_dup 2))])]\n   \"! TARGET_NO_FANCY_MATH_387 && TARGET_80387\n    && flag_unsafe_math_optimizations\"\n {\n@@ -15611,9 +15622,10 @@\n })\n \n (define_expand \"logtf2\"\n-  [(set (match_operand:TF 0 \"register_operand\" \"\")\n-\t(unspec:TF [(match_operand:TF 1 \"register_operand\" \"\")\n-\t\t    (match_dup 2)] UNSPEC_FYL2X))]\n+  [(parallel [(set (match_operand:TF 0 \"register_operand\" \"\")\n+\t\t   (unspec:TF [(match_operand:TF 1 \"register_operand\" \"\")\n+\t\t\t       (match_dup 2)] UNSPEC_FYL2X))\n+\t      (clobber (match_dup 2))])]\n   \"! TARGET_NO_FANCY_MATH_387 && TARGET_80387\n    && flag_unsafe_math_optimizations\"\n {"}, {"sha": "be4c76585a7d71ee041856a7c0c82ebcd21f0838", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e43736ad2e9788b5b02a39f38413c5fe693cb6cb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e43736ad2e9788b5b02a39f38413c5fe693cb6cb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e43736ad2e9788b5b02a39f38413c5fe693cb6cb", "patch": "@@ -1,3 +1,7 @@\n+2003-05-14  Roger Sayle  <roger@eyesopen.com>\n+\n+\t* gcc.dg/builtins-15.c: New test case.\n+\n 2003-05-13  Zack Weinberg  <zack@codesourcery.com>\n \n \t* gcc.dg/const-elim-1.c: Tighten scan-assembler-not regexp."}, {"sha": "6d94c7edc51a7f97562f3ed2c2e8e200936dda99", "filename": "gcc/testsuite/gcc.dg/builtins-15.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e43736ad2e9788b5b02a39f38413c5fe693cb6cb/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-15.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e43736ad2e9788b5b02a39f38413c5fe693cb6cb/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-15.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-15.c?ref=e43736ad2e9788b5b02a39f38413c5fe693cb6cb", "patch": "@@ -0,0 +1,17 @@\n+/* Derived from PR optimization/10764  */\n+\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -ffast-math\" } */\n+\n+double log(double x);\n+\n+double ndtri(double y0)\n+{\n+  double x;\n+\n+  x = log(y0);\n+  x = log(x);\n+\n+  return x;\n+}\n+"}]}