{"sha": "0e98f924382c57b9d2781944ca534c893a7976b8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGU5OGY5MjQzODJjNTdiOWQyNzgxOTQ0Y2E1MzRjODkzYTc5NzZiOA==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2002-02-26T06:58:01Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2002-02-26T06:58:01Z"}, "message": "dwarf2out.c (modified_type_die): Do not call type_main_variant for vectors.\n\n2002-02-26  Aldy Hernandez  <aldyh@redhat.com>\n\n        * dwarf2out.c (modified_type_die): Do not call type_main_variant\n        for vectors.\n        (gen_type_die): Same.\n\n        * attribs.c (handle_vector_size_attribute): Set debug information.\n\nFrom-SVN: r50048", "tree": {"sha": "5c5f1a8ad11f67954275c0e6979b919433ead64c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5c5f1a8ad11f67954275c0e6979b919433ead64c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0e98f924382c57b9d2781944ca534c893a7976b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e98f924382c57b9d2781944ca534c893a7976b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e98f924382c57b9d2781944ca534c893a7976b8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e98f924382c57b9d2781944ca534c893a7976b8/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a50cfd52a6419578d6010b1a6e4301a308b68017", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a50cfd52a6419578d6010b1a6e4301a308b68017", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a50cfd52a6419578d6010b1a6e4301a308b68017"}], "stats": {"total": 55, "additions": 46, "deletions": 9}, "files": [{"sha": "c3ab8948805adb11aa5cc632f88fe27d125b36ff", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e98f924382c57b9d2781944ca534c893a7976b8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e98f924382c57b9d2781944ca534c893a7976b8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0e98f924382c57b9d2781944ca534c893a7976b8", "patch": "@@ -1,3 +1,11 @@\n+2002-02-26  Aldy Hernandez  <aldyh@redhat.com>\n+\n+        * dwarf2out.c (modified_type_die): Do not call type_main_variant\n+        for vectors.\n+        (gen_type_die): Same.\n+\n+        * attribs.c (handle_vector_size_attribute): Set debug information.\n+\n 2002-02-26  Daniel Egger  <degger@fhm.edu>\n \n         * config/rs6000/rs6000.md: Swap define_insn attributes to"}, {"sha": "d046a6242ba47578a6ad011f7698fd332090dd88", "filename": "gcc/attribs.c", "status": "modified", "additions": 25, "deletions": 4, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e98f924382c57b9d2781944ca534c893a7976b8/gcc%2Fattribs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e98f924382c57b9d2781944ca534c893a7976b8/gcc%2Fattribs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fattribs.c?ref=0e98f924382c57b9d2781944ca534c893a7976b8", "patch": "@@ -1307,12 +1307,33 @@ handle_vector_size_attribute (node, name, args, flags, no_add_attrs)\n     error (\"no vector mode with the size and type specified could be found\");\n   else\n     {\n+      tree index, array, rt;\n+\n       new_type = type_for_mode (new_mode, TREE_UNSIGNED (type));\n+\n       if (!new_type)\n-\terror (\"no vector mode with the size and type specified could be found\");\n-      else\n-\t/* Build back pointers if needed.  */\n-\t*node = vector_size_helper (*node, new_type);\n+\t{\n+\t  error (\"no vector mode with the size and type specified could be found\");\n+\t  return NULL_TREE;\n+\t}\n+\n+      new_type = build_type_copy (new_type);\n+\n+      /* Set the debug information here, because this is the only\n+\t place where we know the underlying type for a vector made\n+\t with vector_size.  For debugging purposes we pretend a vector\n+\t is an array within a structure.  */\n+      index = build_int_2 (TYPE_VECTOR_SUBPARTS (new_type) - 1, 0);\n+      array = build_array_type (type, build_index_type (index));\n+      rt = make_node (RECORD_TYPE);\n+\n+      TYPE_FIELDS (rt) = build_decl (FIELD_DECL, get_identifier (\"f\"), array);\n+      DECL_CONTEXT (TYPE_FIELDS (rt)) = rt;\n+      layout_type (rt);\n+      TYPE_DEBUG_REPRESENTATION_TYPE (new_type) = rt;\n+\n+      /* Build back pointers if needed.  */\n+      *node = vector_size_helper (*node, new_type);\n     }\n     \n   return NULL_TREE;"}, {"sha": "6313aeba2f48eb0a6a952d03152a1d8acf256ddf", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e98f924382c57b9d2781944ca534c893a7976b8/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e98f924382c57b9d2781944ca534c893a7976b8/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=0e98f924382c57b9d2781944ca534c893a7976b8", "patch": "@@ -7565,7 +7565,12 @@ modified_type_die (type, is_const_type, is_volatile_type, context_die)\n \t     copy was created to help us keep track of typedef names) and\n \t     that copy might have a different TYPE_UID from the original\n \t     ..._TYPE node.  */\n-\t  mod_type_die = lookup_type_die (type_main_variant (type));\n+\t  if (TREE_CODE (type) != VECTOR_TYPE)\n+\t    mod_type_die = lookup_type_die (type_main_variant (type));\n+\t  else\n+\t    /* Vectors have the debugging information in the type,\n+\t       not the main variant.  */\n+\t    mod_type_die = lookup_type_die (type);\n \t  if (mod_type_die == NULL)\n \t    abort ();\n \t}\n@@ -10976,10 +10981,13 @@ gen_type_die (type, context_die)\n   if (type == NULL_TREE || type == error_mark_node)\n     return;\n \n-  /* We are going to output a DIE to represent the unqualified version of\n-     this type (i.e. without any const or volatile qualifiers) so get the\n-     main variant (i.e. the unqualified version) of this type now.  */\n-  type = type_main_variant (type);\n+  /* We are going to output a DIE to represent the unqualified version\n+     of this type (i.e. without any const or volatile qualifiers) so\n+     get the main variant (i.e. the unqualified version) of this type\n+     now.  (Vectors are special because the debugging info is in the\n+     cloned type itself).  */\n+  if (TREE_CODE (type) != VECTOR_TYPE)\n+    type = type_main_variant (type);\n \n   if (TREE_ASM_WRITTEN (type))\n     return;"}]}