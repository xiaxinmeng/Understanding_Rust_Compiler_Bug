{"sha": "500f8f7b5fcd927a28d69c1af2427f4225e56a15", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTAwZjhmN2I1ZmNkOTI3YTI4ZDY5YzFhZjI0MjdmNDIyNWU1NmExNQ==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2007-08-19T01:52:23Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2007-08-19T01:52:23Z"}, "message": "primary.c (match_logical_constant_string): New function to match a \".true.\" or a \".false.\".\n\n\n\t* primary.c (match_logical_constant_string): New function to match\n\ta \".true.\" or a \".false.\".\n\t(match_logical_constant): Use it instead of gfc_match_strings.\n\nFrom-SVN: r127620", "tree": {"sha": "5c813bcd31e654e5529e328a1eee38b54f97786f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5c813bcd31e654e5529e328a1eee38b54f97786f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/500f8f7b5fcd927a28d69c1af2427f4225e56a15", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/500f8f7b5fcd927a28d69c1af2427f4225e56a15", "html_url": "https://github.com/Rust-GCC/gccrs/commit/500f8f7b5fcd927a28d69c1af2427f4225e56a15", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/500f8f7b5fcd927a28d69c1af2427f4225e56a15/comments", "author": null, "committer": null, "parents": [{"sha": "db07c510131f8d85c908ef0a3a6931099ccf9587", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db07c510131f8d85c908ef0a3a6931099ccf9587", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db07c510131f8d85c908ef0a3a6931099ccf9587"}], "stats": {"total": 49, "additions": 42, "deletions": 7}, "files": [{"sha": "0a27333bdf9d897f70a6cec42b76559d995a981c", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/500f8f7b5fcd927a28d69c1af2427f4225e56a15/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/500f8f7b5fcd927a28d69c1af2427f4225e56a15/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=500f8f7b5fcd927a28d69c1af2427f4225e56a15", "patch": "@@ -1,3 +1,9 @@\n+2007-08-18  Roger Sayle  <roger@eyesopen.com>\n+\n+\t* primary.c (match_logical_constant_string): New function to match\n+\ta \".true.\" or a \".false.\".\n+\t(match_logical_constant): Use it instead of gfc_match_strings.\n+\n 2007-08-18  Paul Thomas  <pault@gcc.gnu.org>\n \t    Janus Weil  <jaydub66@gmail.com>\n "}, {"sha": "2be27d7df4106045d23e1009a88f8f3d34cf62d1", "filename": "gcc/fortran/primary.c", "status": "modified", "additions": 36, "deletions": 7, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/500f8f7b5fcd927a28d69c1af2427f4225e56a15/gcc%2Ffortran%2Fprimary.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/500f8f7b5fcd927a28d69c1af2427f4225e56a15/gcc%2Ffortran%2Fprimary.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fprimary.c?ref=500f8f7b5fcd927a28d69c1af2427f4225e56a15", "patch": "@@ -977,21 +977,50 @@ match_string_constant (gfc_expr **result)\n }\n \n \n+/* Match a .true. or .false.  Returns 1 if a .true. was found,\n+   0 if a .false. was found, and -1 otherwise.  */\n+static int\n+match_logical_constant_string (void)\n+{\n+  locus orig_loc = gfc_current_locus;\n+\n+  gfc_gobble_whitespace ();\n+  if (gfc_next_char () == '.')\n+    {\n+      int ch = gfc_next_char();\n+      if (ch == 'f')\n+\t{\n+\t  if (gfc_next_char () == 'a'\n+\t      && gfc_next_char () == 'l'\n+\t      && gfc_next_char () == 's'\n+\t      && gfc_next_char () == 'e'\n+\t      && gfc_next_char () == '.')\n+\t    /* Matched \".false.\".  */\n+\t    return 0;\n+\t}\n+      else if (ch == 't')\n+\t{\n+\t  if (gfc_next_char () == 'r'\n+\t      && gfc_next_char () == 'u'\n+\t      && gfc_next_char () == 'e'\n+\t      && gfc_next_char () == '.')\n+\t    /* Matched \".true.\".  */\n+\t    return 1;\n+\t}\n+    }\n+  gfc_current_locus = orig_loc;\n+  return -1;\n+}\n+\n /* Match a .true. or .false.  */\n \n static match\n match_logical_constant (gfc_expr **result)\n {\n-  static mstring logical_ops[] = {\n-    minit (\".false.\", 0),\n-    minit (\".true.\", 1),\n-    minit (NULL, -1)\n-  };\n-\n   gfc_expr *e;\n   int i, kind;\n \n-  i = gfc_match_strings (logical_ops);\n+  i = match_logical_constant_string ();\n   if (i == -1)\n     return MATCH_NO;\n "}]}