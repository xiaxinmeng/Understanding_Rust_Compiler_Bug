{"sha": "091db7b0af49a12ecb6fea88c0e4443444ee82bd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDkxZGI3YjBhZjQ5YTEyZWNiNmZlYTg4YzBlNDQ0MzQ0NGVlODJiZA==", "commit": {"author": {"name": "David Sherwood", "email": "davids@gcc.gnu.org", "date": "2015-12-08T11:26:33Z"}, "committer": {"name": "David Sherwood", "email": "davids@gcc.gnu.org", "date": "2015-12-08T11:26:33Z"}, "message": "Add file missing from previous commit:\n\n2015-12-08  David Sherwood  <david.sherwood@arm.com>\n\nAdd file missing from previous commit:\ngcc/testsuite:\n\t* gcc.target/aarch64/fmaxmin.c\n\nFrom-SVN: r231404", "tree": {"sha": "76d259e8ff09b0a5256c5f87b7bbc19663e067b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/76d259e8ff09b0a5256c5f87b7bbc19663e067b6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/091db7b0af49a12ecb6fea88c0e4443444ee82bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/091db7b0af49a12ecb6fea88c0e4443444ee82bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/091db7b0af49a12ecb6fea88c0e4443444ee82bd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/091db7b0af49a12ecb6fea88c0e4443444ee82bd/comments", "author": null, "committer": null, "parents": [{"sha": "f9184ba0453e132c5f21b1f2f106987dae3c7065", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9184ba0453e132c5f21b1f2f106987dae3c7065", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f9184ba0453e132c5f21b1f2f106987dae3c7065"}], "stats": {"total": 69, "additions": 69, "deletions": 0}, "files": [{"sha": "7654955b4ce373fde1ed71fe7e32d0f9be111bee", "filename": "gcc/testsuite/gcc.target/aarch64/fmaxmin.c", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/091db7b0af49a12ecb6fea88c0e4443444ee82bd/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ffmaxmin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/091db7b0af49a12ecb6fea88c0e4443444ee82bd/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ffmaxmin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ffmaxmin.c?ref=091db7b0af49a12ecb6fea88c0e4443444ee82bd", "patch": "@@ -0,0 +1,69 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -ftree-vectorize -fno-inline -save-temps\" } */\n+\n+\n+extern void abort (void);\n+double fmax (double, double);\n+float fmaxf (float, float);\n+double fmin (double, double);\n+float fminf (float, float);\n+\n+#define isnan __builtin_isnan\n+#define isinf __builtin_isinf\n+\n+#define NAN __builtin_nan (\"\")\n+#define INFINITY __builtin_inf ()\n+\n+#define NUM_ELEMS(TYPE) (16 / sizeof (TYPE))\n+\n+#define DEF_MAXMIN(TYPE,FUN)\\\n+void test_##FUN (TYPE *__restrict__ r, TYPE *__restrict__ a,\\\n+\t\t TYPE *__restrict__ b)\\\n+{\\\n+  int i;\\\n+  for (i = 0; i < NUM_ELEMS (TYPE); i++)\\\n+    r[i] = FUN (a[i], b[i]);\\\n+}\\\n+\n+DEF_MAXMIN (float, fmaxf)\n+DEF_MAXMIN (double, fmax)\n+\n+DEF_MAXMIN (float, fminf)\n+DEF_MAXMIN (double, fmin)\n+\n+int main ()\n+{\n+  float a_f[4] = { 4, NAN, -3, INFINITY };\n+  float b_f[4] = { 1,   7,NAN, 0 };\n+  float r_f[4];\n+  double a_d[4] = { 4, NAN,  -3,  INFINITY };\n+  double b_d[4] = { 1,   7, NAN,  0 };\n+  double r_d[4];\n+\n+  test_fmaxf (r_f, a_f, b_f);\n+  if (r_f[0] != 4 || isnan (r_f[1]) || isnan (r_f[2]) || !isinf (r_f[3]))\n+    abort ();\n+\n+  test_fminf (r_f, a_f, b_f);\n+  if (r_f[0] != 1 || isnan (r_f[1]) || isnan (r_f[2]) || isinf (r_f[3]))\n+    abort ();\n+\n+  test_fmax (r_d, a_d, b_d);\n+  test_fmax (&r_d[2], &a_d[2], &b_d[2]);\n+  if (r_d[0] != 4 || isnan (r_d[1]) || isnan (r_d[2]) || !isinf (r_d[3]))\n+    abort ();\n+\n+  test_fmin (r_d, a_d, b_d);\n+  test_fmin (&r_d[2], &a_d[2], &b_d[2]);\n+  if (r_d[0] != 1 || isnan (r_d[1]) || isnan (r_d[2]) || isinf (r_d[3]))\n+    abort ();\n+\n+  return 0;\n+}\n+\n+/* { dg-final { scan-assembler-times \"fmaxnm\\tv\\[0-9\\]+\\.4s, v\\[0-9\\]+\\.4s, v\\[0-9\\]+\\.4s\" 1 } } */\n+/* { dg-final { scan-assembler-times \"fmaxnm\\tv\\[0-9\\]+\\.2d, v\\[0-9\\]+\\.2d, v\\[0-9\\]+\\.2d\" 1 } } */\n+\n+/* { dg-final { scan-assembler-times \"fminnm\\tv\\[0-9\\]+\\.4s, v\\[0-9\\]+\\.4s, v\\[0-9\\]+\\.4s\" 1 } } */\n+/* { dg-final { scan-assembler-times \"fminnm\\tv\\[0-9\\]+\\.2d, v\\[0-9\\]+\\.2d, v\\[0-9\\]+\\.2d\" 1 } } */\n+"}]}