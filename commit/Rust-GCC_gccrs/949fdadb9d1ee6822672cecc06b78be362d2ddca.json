{"sha": "949fdadb9d1ee6822672cecc06b78be362d2ddca", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTQ5ZmRhZGI5ZDFlZTY4MjI2NzJjZWNjMDZiNzhiZTM2MmQyZGRjYQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2019-07-31T14:38:26Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2019-07-31T14:38:26Z"}, "message": "PR libstdc++/91308 fix constraints on unique_ptr assignment\n\n\tPR libstdc++/91308\n\t* include/bits/unique_ptr.h (unique_ptr::__safe_conversion_up): Remove\n\tconstraints on deleter that should only apply to the constructor.\n\t(unique_ptr<T[], D>::__safe_conversion_up): Likewise.\n\t(unique_ptr<T[], D>::unique_ptr(unique_ptr<U, D>&&)): Restore\n\tconstraints on deleter here.\n\t* testsuite/20_util/unique_ptr/assign/91308.cc: New test.\n\nFrom-SVN: r273937", "tree": {"sha": "1fd650435a78fe8d0d8b0173d6b3972e65fc5053", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1fd650435a78fe8d0d8b0173d6b3972e65fc5053"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/949fdadb9d1ee6822672cecc06b78be362d2ddca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/949fdadb9d1ee6822672cecc06b78be362d2ddca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/949fdadb9d1ee6822672cecc06b78be362d2ddca", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/949fdadb9d1ee6822672cecc06b78be362d2ddca/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "208149b7201420d965991e08cb4e4c261171b0a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/208149b7201420d965991e08cb4e4c261171b0a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/208149b7201420d965991e08cb4e4c261171b0a2"}], "stats": {"total": 86, "additions": 69, "deletions": 17}, "files": [{"sha": "7bfd9be15c8517f1f57080b514e9dcdff7be8d87", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/949fdadb9d1ee6822672cecc06b78be362d2ddca/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/949fdadb9d1ee6822672cecc06b78be362d2ddca/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=949fdadb9d1ee6822672cecc06b78be362d2ddca", "patch": "@@ -1,3 +1,13 @@\n+2019-07-31  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/91308\n+\t* include/bits/unique_ptr.h (unique_ptr::__safe_conversion_up): Remove\n+\tconstraints on deleter that should only apply to the constructor.\n+\t(unique_ptr<T[], D>::__safe_conversion_up): Likewise.\n+\t(unique_ptr<T[], D>::unique_ptr(unique_ptr<U, D>&&)): Restore\n+\tconstraints on deleter here.\n+\t* testsuite/20_util/unique_ptr/assign/91308.cc: New test.\n+\n 2019-07-29  Jonathan Wakely  <jwakely@redhat.com>\n \n \tPR libstdc++/51333"}, {"sha": "0c4eb2568106c85515004888a23e484a0dfe3d46", "filename": "libstdc++-v3/include/bits/unique_ptr.h", "status": "modified", "additions": 13, "deletions": 17, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/949fdadb9d1ee6822672cecc06b78be362d2ddca/libstdc%2B%2B-v3%2Finclude%2Fbits%2Funique_ptr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/949fdadb9d1ee6822672cecc06b78be362d2ddca/libstdc%2B%2B-v3%2Finclude%2Fbits%2Funique_ptr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Funique_ptr.h?ref=949fdadb9d1ee6822672cecc06b78be362d2ddca", "patch": "@@ -245,14 +245,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       // unique_ptr\n       template<typename _Up, typename _Ep>\n \tusing __safe_conversion_up = __and_<\n-\t        is_convertible<typename unique_ptr<_Up, _Ep>::pointer, pointer>,\n-                __not_<is_array<_Up>>,\n-                __or_<__and_<is_reference<deleter_type>,\n-                             is_same<deleter_type, _Ep>>,\n-                      __and_<__not_<is_reference<deleter_type>>,\n-                             is_convertible<_Ep, deleter_type>>\n-                >\n-              >;\n+\t  is_convertible<typename unique_ptr<_Up, _Ep>::pointer, pointer>,\n+\t  __not_<is_array<_Up>>\n+        >;\n \n     public:\n       // Constructors.\n@@ -492,16 +487,14 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       // helper template for detecting a safe conversion from another\n       // unique_ptr\n       template<typename _Up, typename _Ep,\n-               typename _Up_up = unique_ptr<_Up, _Ep>,\n-\t       typename _Up_element_type = typename _Up_up::element_type>\n+               typename _UPtr = unique_ptr<_Up, _Ep>,\n+\t       typename _UP_pointer = typename _UPtr::pointer,\n+\t       typename _UP_element_type = typename _UPtr::element_type>\n \tusing __safe_conversion_up = __and_<\n           is_array<_Up>,\n           is_same<pointer, element_type*>,\n-          is_same<typename _Up_up::pointer, _Up_element_type*>,\n-          is_convertible<_Up_element_type(*)[], element_type(*)[]>,\n-          __or_<__and_<is_reference<deleter_type>, is_same<deleter_type, _Ep>>,\n-                __and_<__not_<is_reference<deleter_type>>,\n-                       is_convertible<_Ep, deleter_type>>>\n+          is_same<_UP_pointer, _UP_element_type*>,\n+          is_convertible<_UP_element_type(*)[], element_type(*)[]>\n         >;\n \n       // helper template for detecting a safe conversion from a raw pointer\n@@ -590,8 +583,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t: _M_t()\n         { }\n \n-      template<typename _Up, typename _Ep,\n-\t       typename = _Require<__safe_conversion_up<_Up, _Ep>>>\n+      template<typename _Up, typename _Ep, typename = _Require<\n+\t       __safe_conversion_up<_Up, _Ep>,\n+\t       typename conditional<is_reference<_Dp>::value,\n+\t\t\t\t    is_same<_Ep, _Dp>,\n+\t\t\t\t    is_convertible<_Ep, _Dp>>::type>>\n \tunique_ptr(unique_ptr<_Up, _Ep>&& __u) noexcept\n \t: _M_t(__u.release(), std::forward<_Ep>(__u.get_deleter()))\n \t{ }"}, {"sha": "6500ea43f02a9a7c40361fc95eb46aff28353423", "filename": "libstdc++-v3/testsuite/20_util/unique_ptr/assign/91308.cc", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/949fdadb9d1ee6822672cecc06b78be362d2ddca/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fassign%2F91308.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/949fdadb9d1ee6822672cecc06b78be362d2ddca/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fassign%2F91308.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fassign%2F91308.cc?ref=949fdadb9d1ee6822672cecc06b78be362d2ddca", "patch": "@@ -0,0 +1,46 @@\n+// Copyright (C) 2019 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-do compile { target c++11 } }\n+\n+#include <memory>\n+\n+struct D1\n+{\n+  void operator()(int* p) const noexcept { }\n+};\n+\n+struct D2 : D1\n+{\n+  D2& operator=(D1&&) noexcept { return *this; }\n+};\n+\n+void\n+test01()\n+{\n+  std::unique_ptr<int, D1> d1;\n+  std::unique_ptr<int, D2> d2;\n+  d2 = std::move(d1);\n+}\n+\n+void\n+test02()\n+{\n+  std::unique_ptr<int[], D1> d1;\n+  std::unique_ptr<int[], D2> d2;\n+  d2 = std::move(d1);\n+}"}]}