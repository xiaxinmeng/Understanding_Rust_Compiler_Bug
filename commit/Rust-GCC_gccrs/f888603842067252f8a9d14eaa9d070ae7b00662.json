{"sha": "f888603842067252f8a9d14eaa9d070ae7b00662", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjg4ODYwMzg0MjA2NzI1MmY4YTlkMTRlYWE5ZDA3MGFlN2IwMDY2Mg==", "commit": {"author": {"name": "Janne Blomqvist", "email": "jb@gcc.gnu.org", "date": "2019-05-17T18:18:04Z"}, "committer": {"name": "Janne Blomqvist", "email": "jb@gcc.gnu.org", "date": "2019-05-17T18:18:04Z"}, "message": "libfortran/90038: Use posix_spawn instead of fork\n    \nfork() semantics can be problematic.  Most unix style OS'es have\nposix_spawn which can be used to replace fork + exec in many cases.\nFor more information see\ne.g. https://www.microsoft.com/en-us/research/uploads/prod/2019/04/fork-hotos19.pdf\n    \nThis replaces the one use of fork in libgfortran with posix_spawn.\n    \n2019-05-17  Janne Blomqvist  <jb@gcc.gnu.org>\n\n        PR libfortran/90038\n        * configure.ac (AC_CHECK_FUNCS_ONCE): Check for posix_spawn.\n        * intrinsics/execute_command_line (execute_command_line): Use\n        posix_spawn.\n        * Makefile.in: Regenerated.\n        * config.h.in: Regenerated.\n        * configure: Regenerated.\n    \nRegtested on x86_64-pc-linux-gnu.\n\nFrom-SVN: r271340", "tree": {"sha": "c99a2f356406142291186a4b7102a86f67f29579", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c99a2f356406142291186a4b7102a86f67f29579"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f888603842067252f8a9d14eaa9d070ae7b00662", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f888603842067252f8a9d14eaa9d070ae7b00662", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f888603842067252f8a9d14eaa9d070ae7b00662", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f888603842067252f8a9d14eaa9d070ae7b00662/comments", "author": null, "committer": null, "parents": [{"sha": "8ee47828d226e2041ac0f3b5b8c1aed43cec24a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ee47828d226e2041ac0f3b5b8c1aed43cec24a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ee47828d226e2041ac0f3b5b8c1aed43cec24a4"}], "stats": {"total": 65, "additions": 52, "deletions": 13}, "files": [{"sha": "e0bf369561b81c263d20a8272f588b12d6e2e817", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f888603842067252f8a9d14eaa9d070ae7b00662/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f888603842067252f8a9d14eaa9d070ae7b00662/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=f888603842067252f8a9d14eaa9d070ae7b00662", "patch": "@@ -1,3 +1,13 @@\n+2019-05-17  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\tPR libfortran/90038\n+\t* configure.ac (AC_CHECK_FUNCS_ONCE): Check for posix_spawn.\n+\t* intrinsics/execute_command_line (execute_command_line): Use\n+\tposix_spawn.\n+\t* Makefile.in: Regenerated.\n+\t* config.h.in: Regenerated.\n+\t* configure: Regenerated.\n+\n 2019-05-17  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR fortran/54613"}, {"sha": "6e9612df8ba55eb064eb72d75df722ed51ddf15c", "filename": "libgfortran/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f888603842067252f8a9d14eaa9d070ae7b00662/libgfortran%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f888603842067252f8a9d14eaa9d070ae7b00662/libgfortran%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FMakefile.in?ref=f888603842067252f8a9d14eaa9d070ae7b00662", "patch": "@@ -694,6 +694,7 @@ pdfdir = @pdfdir@\n prefix = @prefix@\n program_transform_name = @program_transform_name@\n psdir = @psdir@\n+runstatedir = @runstatedir@\n sbindir = @sbindir@\n sharedstatedir = @sharedstatedir@\n srcdir = @srcdir@"}, {"sha": "da3968cb94fdbce774a746cb567224a99e75fe1e", "filename": "libgfortran/config.h.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f888603842067252f8a9d14eaa9d070ae7b00662/libgfortran%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f888603842067252f8a9d14eaa9d070ae7b00662/libgfortran%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfig.h.in?ref=f888603842067252f8a9d14eaa9d070ae7b00662", "patch": "@@ -627,6 +627,9 @@\n /* Define to 1 if we have POSIX getpwuid_r which takes 5 arguments. */\n #undef HAVE_POSIX_GETPWUID_R\n \n+/* Define to 1 if you have the `posix_spawn' function. */\n+#undef HAVE_POSIX_SPAWN\n+\n /* Define to 1 if you have the `pow' function. */\n #undef HAVE_POW\n "}, {"sha": "094c73251897eb8b98d8a72501c91831fae2e4b6", "filename": "libgfortran/configure", "status": "modified", "additions": 23, "deletions": 8, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f888603842067252f8a9d14eaa9d070ae7b00662/libgfortran%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f888603842067252f8a9d14eaa9d070ae7b00662/libgfortran%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfigure?ref=f888603842067252f8a9d14eaa9d070ae7b00662", "patch": "@@ -780,6 +780,7 @@ infodir\n docdir\n oldincludedir\n includedir\n+runstatedir\n localstatedir\n sharedstatedir\n sysconfdir\n@@ -870,6 +871,7 @@ datadir='${datarootdir}'\n sysconfdir='${prefix}/etc'\n sharedstatedir='${prefix}/com'\n localstatedir='${prefix}/var'\n+runstatedir='${localstatedir}/run'\n includedir='${prefix}/include'\n oldincludedir='/usr/include'\n docdir='${datarootdir}/doc/${PACKAGE_TARNAME}'\n@@ -1122,6 +1124,15 @@ do\n   | -silent | --silent | --silen | --sile | --sil)\n     silent=yes ;;\n \n+  -runstatedir | --runstatedir | --runstatedi | --runstated \\\n+  | --runstate | --runstat | --runsta | --runst | --runs \\\n+  | --run | --ru | --r)\n+    ac_prev=runstatedir ;;\n+  -runstatedir=* | --runstatedir=* | --runstatedi=* | --runstated=* \\\n+  | --runstate=* | --runstat=* | --runsta=* | --runst=* | --runs=* \\\n+  | --run=* | --ru=* | --r=*)\n+    runstatedir=$ac_optarg ;;\n+\n   -sbindir | --sbindir | --sbindi | --sbind | --sbin | --sbi | --sb)\n     ac_prev=sbindir ;;\n   -sbindir=* | --sbindir=* | --sbindi=* | --sbind=* | --sbin=* \\\n@@ -1259,7 +1270,7 @@ fi\n for ac_var in\texec_prefix prefix bindir sbindir libexecdir datarootdir \\\n \t\tdatadir sysconfdir sharedstatedir localstatedir includedir \\\n \t\toldincludedir docdir infodir htmldir dvidir pdfdir psdir \\\n-\t\tlibdir localedir mandir\n+\t\tlibdir localedir mandir runstatedir\n do\n   eval ac_val=\\$$ac_var\n   # Remove trailing slashes.\n@@ -1412,6 +1423,7 @@ Fine tuning of the installation directories:\n   --sysconfdir=DIR        read-only single-machine data [PREFIX/etc]\n   --sharedstatedir=DIR    modifiable architecture-independent data [PREFIX/com]\n   --localstatedir=DIR     modifiable single-machine data [PREFIX/var]\n+  --runstatedir=DIR       modifiable per-process data [LOCALSTATEDIR/run]\n   --libdir=DIR            object code libraries [EPREFIX/lib]\n   --includedir=DIR        C header files [PREFIX/include]\n   --oldincludedir=DIR     C header files for non-gcc [/usr/include]\n@@ -2629,6 +2641,7 @@ as_fn_append ac_func_list \" ttyname\"\n as_fn_append ac_func_list \" alarm\"\n as_fn_append ac_func_list \" access\"\n as_fn_append ac_func_list \" fork\"\n+as_fn_append ac_func_list \" posix_spawn\"\n as_fn_append ac_func_list \" setmode\"\n as_fn_append ac_func_list \" fcntl\"\n as_fn_append ac_func_list \" writev\"\n@@ -12685,7 +12698,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12688 \"configure\"\n+#line 12701 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12791,7 +12804,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12794 \"configure\"\n+#line 12807 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -16040,7 +16053,7 @@ else\n     We can't simply define LARGE_OFF_T to be 9223372036854775807,\n     since some C++ compilers masquerading as C compilers\n     incorrectly reject 9223372036854775807.  */\n-#define LARGE_OFF_T (((off_t) 1 << 62) - 1 + ((off_t) 1 << 62))\n+#define LARGE_OFF_T ((((off_t) 1 << 31) << 31) - 1 + (((off_t) 1 << 31) << 31))\n   int off_t_is_large[(LARGE_OFF_T % 2147483629 == 721\n \t\t       && LARGE_OFF_T % 2147483647 == 1)\n \t\t      ? 1 : -1];\n@@ -16086,7 +16099,7 @@ else\n     We can't simply define LARGE_OFF_T to be 9223372036854775807,\n     since some C++ compilers masquerading as C compilers\n     incorrectly reject 9223372036854775807.  */\n-#define LARGE_OFF_T (((off_t) 1 << 62) - 1 + ((off_t) 1 << 62))\n+#define LARGE_OFF_T ((((off_t) 1 << 31) << 31) - 1 + (((off_t) 1 << 31) << 31))\n   int off_t_is_large[(LARGE_OFF_T % 2147483629 == 721\n \t\t       && LARGE_OFF_T % 2147483647 == 1)\n \t\t      ? 1 : -1];\n@@ -16110,7 +16123,7 @@ rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n     We can't simply define LARGE_OFF_T to be 9223372036854775807,\n     since some C++ compilers masquerading as C compilers\n     incorrectly reject 9223372036854775807.  */\n-#define LARGE_OFF_T (((off_t) 1 << 62) - 1 + ((off_t) 1 << 62))\n+#define LARGE_OFF_T ((((off_t) 1 << 31) << 31) - 1 + (((off_t) 1 << 31) << 31))\n   int off_t_is_large[(LARGE_OFF_T % 2147483629 == 721\n \t\t       && LARGE_OFF_T % 2147483647 == 1)\n \t\t      ? 1 : -1];\n@@ -16155,7 +16168,7 @@ else\n     We can't simply define LARGE_OFF_T to be 9223372036854775807,\n     since some C++ compilers masquerading as C compilers\n     incorrectly reject 9223372036854775807.  */\n-#define LARGE_OFF_T (((off_t) 1 << 62) - 1 + ((off_t) 1 << 62))\n+#define LARGE_OFF_T ((((off_t) 1 << 31) << 31) - 1 + (((off_t) 1 << 31) << 31))\n   int off_t_is_large[(LARGE_OFF_T % 2147483629 == 721\n \t\t       && LARGE_OFF_T % 2147483647 == 1)\n \t\t      ? 1 : -1];\n@@ -16179,7 +16192,7 @@ rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n     We can't simply define LARGE_OFF_T to be 9223372036854775807,\n     since some C++ compilers masquerading as C compilers\n     incorrectly reject 9223372036854775807.  */\n-#define LARGE_OFF_T (((off_t) 1 << 62) - 1 + ((off_t) 1 << 62))\n+#define LARGE_OFF_T ((((off_t) 1 << 31) << 31) - 1 + (((off_t) 1 << 31) << 31))\n   int off_t_is_large[(LARGE_OFF_T % 2147483629 == 721\n \t\t       && LARGE_OFF_T % 2147483647 == 1)\n \t\t      ? 1 : -1];\n@@ -16958,6 +16971,8 @@ done\n \n \n \n+\n+\n \n \n "}, {"sha": "8fd5a1a30a9a410a20c24bce6946650257b4c992", "filename": "libgfortran/configure.ac", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f888603842067252f8a9d14eaa9d070ae7b00662/libgfortran%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f888603842067252f8a9d14eaa9d070ae7b00662/libgfortran%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfigure.ac?ref=f888603842067252f8a9d14eaa9d070ae7b00662", "patch": "@@ -315,7 +315,7 @@ else\n    AC_CHECK_FUNCS_ONCE(getrusage times mkstemp strtof strtold snprintf \\\n    ftruncate chsize chdir getentropy getlogin gethostname kill link symlink \\\n    sleep ttyname \\\n-   alarm access fork setmode fcntl writev \\\n+   alarm access fork posix_spawn setmode fcntl writev \\\n    gettimeofday stat fstat lstat getpwuid vsnprintf dup \\\n    getcwd localtime_r gmtime_r getpwuid_r ttyname_r clock_gettime \\\n    getgid getpid getuid geteuid umask getegid \\"}, {"sha": "2ef2324b24392fe4213c96ce22b262b9f93037c6", "filename": "libgfortran/intrinsics/execute_command_line.c", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f888603842067252f8a9d14eaa9d070ae7b00662/libgfortran%2Fintrinsics%2Fexecute_command_line.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f888603842067252f8a9d14eaa9d070ae7b00662/libgfortran%2Fintrinsics%2Fexecute_command_line.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Fexecute_command_line.c?ref=f888603842067252f8a9d14eaa9d070ae7b00662", "patch": "@@ -32,7 +32,10 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #ifdef  HAVE_SYS_WAIT_H\n #include <sys/wait.h>\n #endif\n-\n+#ifdef HAVE_POSIX_SPAWN\n+#include <spawn.h>\n+extern char **environ;\n+#endif\n \n enum { EXEC_SYNCHRONOUS = -2, EXEC_NOERROR = 0, EXEC_SYSTEMFAILED,\n        EXEC_CHILDFAILED, EXEC_INVALIDCOMMAND };\n@@ -71,22 +74,29 @@ execute_command_line (const char *command, bool wait, int *exitstat,\n   /* Flush all I/O units before executing the command.  */\n   flush_all_units();\n \n-#if defined(HAVE_FORK)\n+#if defined(HAVE_POSIX_SPAWN) || defined(HAVE_FORK)\n   if (!wait)\n     {\n       /* Asynchronous execution.  */\n       pid_t pid;\n \n       set_cmdstat (cmdstat, EXEC_NOERROR);\n \n-      if ((pid = fork()) < 0)\n+#ifdef HAVE_POSIX_SPAWN\n+      const char * const argv[] = {\"sh\", \"-c\", cmd, NULL};\n+      if (posix_spawn (&pid, \"/bin/sh\", NULL, NULL,\n+\t\t       (char * const* restrict) argv, environ))\n \tset_cmdstat (cmdstat, EXEC_CHILDFAILED);\n+#elif defined(HAVE_FORK)\n+      if ((pid = fork()) < 0)\n+        set_cmdstat (cmdstat, EXEC_CHILDFAILED);\n       else if (pid == 0)\n \t{\n \t  /* Child process.  */\n \t  int res = system (cmd);\n \t  _exit (WIFEXITED(res) ? WEXITSTATUS(res) : res);\n \t}\n+#endif\n     }\n   else\n #endif\n@@ -96,7 +106,7 @@ execute_command_line (const char *command, bool wait, int *exitstat,\n \n       if (res == -1)\n \tset_cmdstat (cmdstat, EXEC_SYSTEMFAILED);\n-#ifndef HAVE_FORK\n+#if !defined(HAVE_POSIX_SPAWN) && !defined(HAVE_FORK)\n       else if (!wait)\n \tset_cmdstat (cmdstat, EXEC_SYNCHRONOUS);\n #endif"}]}