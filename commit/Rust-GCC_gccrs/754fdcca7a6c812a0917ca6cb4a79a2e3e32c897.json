{"sha": "754fdcca7a6c812a0917ca6cb4a79a2e3e32c897", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzU0ZmRjY2E3YTZjODEyYTA5MTdjYTZjYjRhNzlhMmUzZTMyYzg5Nw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-09-29T23:05:36Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-09-29T23:05:36Z"}, "message": "(mark_user_reg): New function.\n\nFrom-SVN: r12869", "tree": {"sha": "e1dd07e9fff581cdcb78bd4df3cf19e93b686a34", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e1dd07e9fff581cdcb78bd4df3cf19e93b686a34"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/754fdcca7a6c812a0917ca6cb4a79a2e3e32c897", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/754fdcca7a6c812a0917ca6cb4a79a2e3e32c897", "html_url": "https://github.com/Rust-GCC/gccrs/commit/754fdcca7a6c812a0917ca6cb4a79a2e3e32c897", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/754fdcca7a6c812a0917ca6cb4a79a2e3e32c897/comments", "author": null, "committer": null, "parents": [{"sha": "50dc6373e56ad31b2fca259589d4282b7abb5598", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50dc6373e56ad31b2fca259589d4282b7abb5598", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50dc6373e56ad31b2fca259589d4282b7abb5598"}], "stats": {"total": 17, "additions": 17, "deletions": 0}, "files": [{"sha": "522b95ff1c972d048e61c3481027f9d58b106e60", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/754fdcca7a6c812a0917ca6cb4a79a2e3e32c897/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/754fdcca7a6c812a0917ca6cb4a79a2e3e32c897/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=754fdcca7a6c812a0917ca6cb4a79a2e3e32c897", "patch": "@@ -540,6 +540,23 @@ gen_reg_rtx (mode)\n   return val;\n }\n \n+/* Identify REG (which may be a CONCAT) as a user register.  */\n+\n+void\n+mark_user_reg (reg)\n+     rtx reg;\n+{\n+  if (GET_CODE (reg) == CONCAT)\n+    {\n+      REG_USERVAR_P (XEXP (reg, 0)) = 1;\n+      REG_USERVAR_P (XEXP (reg, 1)) = 1;\n+    }\n+  else if (GET_CODE (reg) == REG)\n+    REG_USERVAR_P (reg) = 1;\n+  else\n+    abort ();\n+}\n+\n /* Identify REG as a probable pointer register and show its alignment\n    as ALIGN, if nonzero.  */\n "}]}