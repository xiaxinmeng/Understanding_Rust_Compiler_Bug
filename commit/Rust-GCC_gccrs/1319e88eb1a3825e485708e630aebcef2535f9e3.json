{"sha": "1319e88eb1a3825e485708e630aebcef2535f9e3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTMxOWU4OGViMWEzODI1ZTQ4NTcwOGU2MzBhZWJjZWYyNTM1ZjllMw==", "commit": {"author": {"name": "Andrew Haley", "email": "aph@redhat.com", "date": "2003-09-18T10:09:17Z"}, "committer": {"name": "Andrew Haley", "email": "aph@gcc.gnu.org", "date": "2003-09-18T10:09:17Z"}, "message": "jcf-write.c (generate_bytecode_insns): Add MIN_EXPR and MAX_EXPR.\n\n2003-09-16  Andrew Haley  <aph@redhat.com>\n\n        * jcf-write.c (generate_bytecode_insns): Add MIN_EXPR and MAX_EXPR.\n\nFrom-SVN: r71514", "tree": {"sha": "88546ee135204c607700f54c24ce0196b82abc6c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/88546ee135204c607700f54c24ce0196b82abc6c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1319e88eb1a3825e485708e630aebcef2535f9e3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1319e88eb1a3825e485708e630aebcef2535f9e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1319e88eb1a3825e485708e630aebcef2535f9e3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1319e88eb1a3825e485708e630aebcef2535f9e3/comments", "author": {"login": "theRealAph", "id": 254637, "node_id": "MDQ6VXNlcjI1NDYzNw==", "avatar_url": "https://avatars.githubusercontent.com/u/254637?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theRealAph", "html_url": "https://github.com/theRealAph", "followers_url": "https://api.github.com/users/theRealAph/followers", "following_url": "https://api.github.com/users/theRealAph/following{/other_user}", "gists_url": "https://api.github.com/users/theRealAph/gists{/gist_id}", "starred_url": "https://api.github.com/users/theRealAph/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theRealAph/subscriptions", "organizations_url": "https://api.github.com/users/theRealAph/orgs", "repos_url": "https://api.github.com/users/theRealAph/repos", "events_url": "https://api.github.com/users/theRealAph/events{/privacy}", "received_events_url": "https://api.github.com/users/theRealAph/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "53de5204332cab37f9a51b0cc6329a060d98eeb4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53de5204332cab37f9a51b0cc6329a060d98eeb4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/53de5204332cab37f9a51b0cc6329a060d98eeb4"}], "stats": {"total": 21, "additions": 21, "deletions": 0}, "files": [{"sha": "a171aa1bd98e3f91d1b3fcfc4942280d50d3f9f9", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1319e88eb1a3825e485708e630aebcef2535f9e3/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1319e88eb1a3825e485708e630aebcef2535f9e3/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=1319e88eb1a3825e485708e630aebcef2535f9e3", "patch": "@@ -1,3 +1,7 @@\n+2003-09-16  Andrew Haley  <aph@redhat.com>\n+\n+\t* jcf-write.c (generate_bytecode_insns): Add MIN_EXPR and MAX_EXPR.\n+\n 2003-09-17  Ranjit Mathew  <rmathew@hotmail.com>\n \n \tFixes PR java/9577"}, {"sha": "febd04fbcaa761507597a4e7d9354eebcb89d1ae", "filename": "gcc/java/jcf-write.c", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1319e88eb1a3825e485708e630aebcef2535f9e3/gcc%2Fjava%2Fjcf-write.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1319e88eb1a3825e485708e630aebcef2535f9e3/gcc%2Fjava%2Fjcf-write.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf-write.c?ref=1319e88eb1a3825e485708e630aebcef2535f9e3", "patch": "@@ -2413,6 +2413,23 @@ generate_bytecode_insns (tree exp, int target, struct jcf_partial *state)\n     case JAVA_EXC_OBJ_EXPR:\n       NOTE_PUSH (1);  /* Pushed by exception system. */\n       break;\n+    case MIN_EXPR:\n+    case MAX_EXPR:\n+      {\n+\t/* This copes with cases where fold() has created MIN or MAX\n+\t   from a conditional expression.  */\n+\tenum tree_code code = TREE_CODE (exp) == MIN_EXPR ? LT_EXPR : GT_EXPR;\n+\ttree op0 = TREE_OPERAND (exp, 0);\n+\ttree op1 = TREE_OPERAND (exp, 1);\n+\ttree x;\n+\tif (TREE_SIDE_EFFECTS (op0) || TREE_SIDE_EFFECTS (op1))\n+\t  abort ();\n+\tx = build (COND_EXPR, TREE_TYPE (exp), \n+\t\t   build (code, boolean_type_node, op0, op1), \n+\t\t   op0, op1);\t  \n+\tgenerate_bytecode_insns (x, target, state);\n+\tbreak;\n+      }\t\t\t\t\t     \n     case NEW_CLASS_EXPR:\n       {\n \ttree class = TREE_TYPE (TREE_TYPE (exp));"}]}