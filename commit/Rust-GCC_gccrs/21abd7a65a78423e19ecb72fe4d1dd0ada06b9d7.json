{"sha": "21abd7a65a78423e19ecb72fe4d1dd0ada06b9d7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjFhYmQ3YTY1YTc4NDIzZTE5ZWNiNzJmZTRkMWRkMGFkYTA2YjlkNw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-05-19T16:25:37Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-05-19T16:25:37Z"}, "message": "Add prototypes for static functions.\n\n(sdbout_parms, sdbout_reg_parms): Delete extra parm to plain_type.\n\nFrom-SVN: r12047", "tree": {"sha": "600655f2a1f992f85caaface827a1ab769b25904", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/600655f2a1f992f85caaface827a1ab769b25904"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/21abd7a65a78423e19ecb72fe4d1dd0ada06b9d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21abd7a65a78423e19ecb72fe4d1dd0ada06b9d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21abd7a65a78423e19ecb72fe4d1dd0ada06b9d7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21abd7a65a78423e19ecb72fe4d1dd0ada06b9d7/comments", "author": null, "committer": null, "parents": [{"sha": "841fc5a1153cb54372023fe81978fcfa6adc33ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/841fc5a1153cb54372023fe81978fcfa6adc33ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/841fc5a1153cb54372023fe81978fcfa6adc33ae"}], "stats": {"total": 35, "additions": 18, "deletions": 17}, "files": [{"sha": "ac651a43dc5bbaaea3b2568072eff3cd041a3637", "filename": "gcc/sdbout.c", "status": "modified", "additions": 18, "deletions": 17, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21abd7a65a78423e19ecb72fe4d1dd0ada06b9d7/gcc%2Fsdbout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21abd7a65a78423e19ecb72fe4d1dd0ada06b9d7/gcc%2Fsdbout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsdbout.c?ref=21abd7a65a78423e19ecb72fe4d1dd0ada06b9d7", "patch": "@@ -1,5 +1,5 @@\n /* Output sdb-format symbol table information from GNU compiler.\n-   Copyright (C) 1988, 1992, 1993, 1994, 1995 Free Software Foundation, Inc.\n+   Copyright (C) 1988, 92, 93, 94, 95, 1996 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -101,12 +101,20 @@ void sdbout_init ();\n void sdbout_symbol ();\n void sdbout_types();\n \n-static void sdbout_typedefs ();\n-static void sdbout_syms ();\n-static void sdbout_one_type ();\n-static void sdbout_queue_anonymous_type ();\n-static void sdbout_dequeue_anonymous_types ();\n-static int plain_type_1 ();\n+static char *gen_fake_label\t\tPROTO((void));\n+static int plain_type\t\t\tPROTO((tree));\n+static int template_name_p\t\tPROTO((tree));\n+static void sdbout_record_type_name\tPROTO((tree));\n+static int plain_type_1\t\t\tPROTO((tree, int));\n+static void sdbout_block\t\tPROTO((tree));\n+static void sdbout_syms\t\t\tPROTO((tree));\n+static void sdbout_queue_anonymous_type\tPROTO((tree));\n+static void sdbout_dequeue_anonymous_types PROTO((void));\n+static void sdbout_type\t\t\tPROTO((tree));\n+static void sbdout_field_types\t\tPROTO((tree));\n+static void sdbout_one_type\t\tPROTO((tree));\n+static void sdbout_parms\t\tPROTO((tree));\n+static void sdbout_reg_parms\t\tPROTO((tree));\n \f\n /* Define the default sizes for various types.  */\n \n@@ -293,13 +301,6 @@ sdbout_init (asm_file, input_file_name, syms)\n \t&& !strcmp (IDENTIFIER_POINTER (DECL_NAME (t)), \"__vtbl_ptr_type\"))\n       sdbout_symbol (t, 0);\n #endif  \n-\n-#if 0 /* Nothing need be output for the predefined types.  */\n-  /* Get all permanent types that have typedef names,\n-     and output them all, except for those already output.  */\n-\n-  sdbout_typedefs (syms);\n-#endif\n }\n \n #if 0\n@@ -1319,7 +1320,7 @@ sdbout_parms (parms)\n \t    PUT_SDB_DEF (name);\n \t    PUT_SDB_INT_VAL (DBX_REGISTER_NUMBER (REGNO (best_rtl)));\n \t    PUT_SDB_SCL (C_REGPARM);\n-\t    PUT_SDB_TYPE (plain_type (TREE_TYPE (parms), 0));\n+\t    PUT_SDB_TYPE (plain_type (TREE_TYPE (parms)));\n \t    PUT_SDB_ENDEF;\n \t  }\n \telse if (GET_CODE (DECL_RTL (parms)) == MEM\n@@ -1342,7 +1343,7 @@ sdbout_parms (parms)\n \t    PUT_SDB_INT_VAL (DEBUGGER_ARG_OFFSET (current_sym_value,\n \t\t\t\t\t\t  XEXP (DECL_RTL (parms), 0)));\n \t    PUT_SDB_SCL (C_ARG);\n-\t    PUT_SDB_TYPE (plain_type (TREE_TYPE (parms), 0));\n+\t    PUT_SDB_TYPE (plain_type (TREE_TYPE (parms)));\n \t    PUT_SDB_ENDEF;\n \t  }\n       }\n@@ -1380,7 +1381,7 @@ sdbout_reg_parms (parms)\n \t    PUT_SDB_DEF (name);\n \t    PUT_SDB_INT_VAL (DBX_REGISTER_NUMBER (REGNO (DECL_RTL (parms))));\n \t    PUT_SDB_SCL (C_REG);\n-\t    PUT_SDB_TYPE (plain_type (TREE_TYPE (parms), 0));\n+\t    PUT_SDB_TYPE (plain_type (TREE_TYPE (parms)));\n \t    PUT_SDB_ENDEF;\n \t  }\n \t/* Report parms that live in memory but not where they were passed.  */"}]}