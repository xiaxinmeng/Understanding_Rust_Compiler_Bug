{"sha": "7181e991b54aaee6a21afb372611523a09a0dc00", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzE4MWU5OTFiNTRhYWVlNmEyMWFmYjM3MjYxMTUyM2EwOWEwZGMwMA==", "commit": {"author": {"name": "Fran\u00e7ois Dumont", "email": "fdumont@gcc.gnu.org", "date": "2012-10-16T19:57:03Z"}, "committer": {"name": "Fran\u00e7ois Dumont", "email": "fdumont@gcc.gnu.org", "date": "2012-10-16T19:57:03Z"}, "message": "formatter.h (_Debug_msg_id): Add __msg_bucket_index_oob.\n\n2012-10-16  Fran\u00e7ois Dumont  <fdumont@gcc.gnu.org>\n\n\t* include/debug/formatter.h (_Debug_msg_id): Add\n\t__msg_bucket_index_oob.\n\t* include/debug/macros.h (__glibcxx_check_bucket_index): New.\n\t* include/debug/unordered_set (unordered_set<>::begin(size_type)):\n\tAdd check on bucket index.\n\t(unordered_set<>::begin(size_type) const): Likewise.\n\t(unordered_set<>::cbegin(size_type) const): Likewise.\n\t(unordered_set<>::end(size_type)): Likewise.\n\t(unordered_set<>::end(size_type) const): Likewise.\n\t(unordered_set<>::cend(size_type) const): Likewise.\n\t(unordered_set<>::bucket_size(size_type)): Likewise.\n\t(unordered_multiset<>::begin(size_type)): Likewise.\n\t(unordered_multiset<>::begin(size_type) const): Likewise.\n\t(unordered_multiset<>::cbegin(size_type) const): Likewise.\n\t(unordered_multiset<>::end(size_type)): Likewise.\n\t(unordered_multiset<>::end(size_type) const): Likewise.\n\t(unordered_multiset<>::cend(size_type) const): Likewise.\n\t(unordered_multiset<>::bucket_size(size_type)): Likewise.\n\t* include/debug/unordered_map (unordered_map<>::begin(size_type)):\n\tLikewise.\n\t(unordered_map<>::begin(size_type) const): Likewise.\n\t(unordered_map<>::cbegin(size_type) const): Likewise.\n\t(unordered_map<>::end(size_type)): Likewise.\n\t(unordered_map<>::end(size_type) const): Likewise.\n\t(unordered_map<>::cend(size_type) const): Likewise.\n\t(unordered_map<>::bucket_size(size_type)): Likewise.\n\t(unordered_multimap<>::begin(size_type)): Likewise.\n\t(unordered_multimap<>::begin(size_type) const): Likewise.\n\t(unordered_multimap<>::cbegin(size_type) const): Likewise.\n\t(unordered_multimap<>::end(size_type)): Likewise.\n\t(unordered_multimap<>::end(size_type) const): Likewise.\n\t(unordered_multimap<>::cend(size_type) const): Likewise.\n\t(unordered_multimap<>::bucket_size(size_type)): Likewise.\n\t* testsuite/23_containers/unordered_map/debug/bucket_size_neg.cc:\n\tNew.\n\t* testsuite/23_containers/unordered_map/debug/begin1_neg.cc: New.\n\t* testsuite/23_containers/unordered_map/debug/begin2_neg.cc: New.\n\t* testsuite/23_containers/unordered_map/debug/cbegin_neg.cc: New.\n\t* testsuite/23_containers/unordered_map/debug/end1_neg.cc: New.\n\t* testsuite/23_containers/unordered_map/debug/end2_neg.cc: New.\n\t* testsuite/23_containers/unordered_map/debug/cend_neg.cc: New.\n\t* testsuite/23_containers/unordered_multimap/debug/bucket_size_neg.cc:\n\tNew.\n\t* testsuite/23_containers/unordered_multimap/debug/begin1_neg.cc: New.\n\t* testsuite/23_containers/unordered_multimap/debug/begin2_neg.cc: New.\n\t* testsuite/23_containers/unordered_multimap/debug/cbegin_neg.cc: New.\n\t* testsuite/23_containers/unordered_multimap/debug/end1_neg.cc: New.\n\t* testsuite/23_containers/unordered_multimap/debug/end2_neg.cc: New.\n\t* testsuite/23_containers/unordered_multimap/debug/cend_neg.cc: New.\n\t* testsuite/23_containers/unordered_set/debug/bucket_size_neg.cc:\n\tNew.\n\t* testsuite/23_containers/unordered_set/debug/begin1_neg.cc: New.\n\t* testsuite/23_containers/unordered_set/debug/begin2_neg.cc: New.\n\t* testsuite/23_containers/unordered_set/debug/cbegin_neg.cc: New.\n\t* testsuite/23_containers/unordered_set/debug/end1_neg.cc: New.\n\t* testsuite/23_containers/unordered_set/debug/end2_neg.cc: New.\n\t* testsuite/23_containers/unordered_set/debug/cend_neg.cc: New.\n\t* testsuite/23_containers/unordered_multiset/debug/bucket_size_neg.cc:\n\tNew.\n\t* testsuite/23_containers/unordered_multiset/debug/begin1_neg.cc: New.\n\t* testsuite/23_containers/unordered_multiset/debug/begin2_neg.cc: New.\n\t* testsuite/23_containers/unordered_multiset/debug/cbegin_neg.cc: New.\n\t* testsuite/23_containers/unordered_multiset/debug/end1_neg.cc: New.\n\t* testsuite/23_containers/unordered_multiset/debug/end2_neg.cc: New.\n\t* testsuite/23_containers/unordered_multiset/debug/cend_neg.cc: New.\n\nFrom-SVN: r192512", "tree": {"sha": "3ed45405b807551cb4b195fd6fafab832b78474e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3ed45405b807551cb4b195fd6fafab832b78474e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7181e991b54aaee6a21afb372611523a09a0dc00", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7181e991b54aaee6a21afb372611523a09a0dc00", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7181e991b54aaee6a21afb372611523a09a0dc00", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7181e991b54aaee6a21afb372611523a09a0dc00/comments", "author": null, "committer": null, "parents": [{"sha": "2407343c3da5e8dc3aee56ab3b7ba168de432973", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2407343c3da5e8dc3aee56ab3b7ba168de432973", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2407343c3da5e8dc3aee56ab3b7ba168de432973"}], "stats": {"total": 1196, "additions": 1168, "deletions": 28}, "files": [{"sha": "3527fbccc9d060bd529068c29ca4fa3fdfbb3f3f", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 68, "deletions": 0, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7181e991b54aaee6a21afb372611523a09a0dc00/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7181e991b54aaee6a21afb372611523a09a0dc00/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=7181e991b54aaee6a21afb372611523a09a0dc00", "patch": "@@ -1,3 +1,71 @@\n+2012-10-16  Fran\u00e7ois Dumont  <fdumont@gcc.gnu.org>\n+\n+\t* include/debug/formatter.h (_Debug_msg_id): Add\n+\t__msg_bucket_index_oob.\n+\t* include/debug/macros.h (__glibcxx_check_bucket_index): New.\n+\t* include/debug/unordered_set (unordered_set<>::begin(size_type)):\n+\tAdd check on bucket index.\n+\t(unordered_set<>::begin(size_type) const): Likewise.\n+\t(unordered_set<>::cbegin(size_type) const): Likewise.\n+\t(unordered_set<>::end(size_type)): Likewise.\n+\t(unordered_set<>::end(size_type) const): Likewise.\n+\t(unordered_set<>::cend(size_type) const): Likewise.\n+\t(unordered_set<>::bucket_size(size_type)): Likewise.\n+\t(unordered_multiset<>::begin(size_type)): Likewise.\n+\t(unordered_multiset<>::begin(size_type) const): Likewise.\n+\t(unordered_multiset<>::cbegin(size_type) const): Likewise.\n+\t(unordered_multiset<>::end(size_type)): Likewise.\n+\t(unordered_multiset<>::end(size_type) const): Likewise.\n+\t(unordered_multiset<>::cend(size_type) const): Likewise.\n+\t(unordered_multiset<>::bucket_size(size_type)): Likewise.\n+\t* include/debug/unordered_map (unordered_map<>::begin(size_type)):\n+\tLikewise.\n+\t(unordered_map<>::begin(size_type) const): Likewise.\n+\t(unordered_map<>::cbegin(size_type) const): Likewise.\n+\t(unordered_map<>::end(size_type)): Likewise.\n+\t(unordered_map<>::end(size_type) const): Likewise.\n+\t(unordered_map<>::cend(size_type) const): Likewise.\n+\t(unordered_map<>::bucket_size(size_type)): Likewise.\n+\t(unordered_multimap<>::begin(size_type)): Likewise.\n+\t(unordered_multimap<>::begin(size_type) const): Likewise.\n+\t(unordered_multimap<>::cbegin(size_type) const): Likewise.\n+\t(unordered_multimap<>::end(size_type)): Likewise.\n+\t(unordered_multimap<>::end(size_type) const): Likewise.\n+\t(unordered_multimap<>::cend(size_type) const): Likewise.\n+\t(unordered_multimap<>::bucket_size(size_type)): Likewise.\n+\t* testsuite/23_containers/unordered_map/debug/bucket_size_neg.cc:\n+\tNew.\n+\t* testsuite/23_containers/unordered_map/debug/begin1_neg.cc: New.\n+\t* testsuite/23_containers/unordered_map/debug/begin2_neg.cc: New.\n+\t* testsuite/23_containers/unordered_map/debug/cbegin_neg.cc: New.\n+\t* testsuite/23_containers/unordered_map/debug/end1_neg.cc: New.\n+\t* testsuite/23_containers/unordered_map/debug/end2_neg.cc: New.\n+\t* testsuite/23_containers/unordered_map/debug/cend_neg.cc: New.\n+\t* testsuite/23_containers/unordered_multimap/debug/bucket_size_neg.cc:\n+\tNew.\n+\t* testsuite/23_containers/unordered_multimap/debug/begin1_neg.cc: New.\n+\t* testsuite/23_containers/unordered_multimap/debug/begin2_neg.cc: New.\n+\t* testsuite/23_containers/unordered_multimap/debug/cbegin_neg.cc: New.\n+\t* testsuite/23_containers/unordered_multimap/debug/end1_neg.cc: New.\n+\t* testsuite/23_containers/unordered_multimap/debug/end2_neg.cc: New.\n+\t* testsuite/23_containers/unordered_multimap/debug/cend_neg.cc: New.\n+\t* testsuite/23_containers/unordered_set/debug/bucket_size_neg.cc:\n+\tNew.\n+\t* testsuite/23_containers/unordered_set/debug/begin1_neg.cc: New.\n+\t* testsuite/23_containers/unordered_set/debug/begin2_neg.cc: New.\n+\t* testsuite/23_containers/unordered_set/debug/cbegin_neg.cc: New.\n+\t* testsuite/23_containers/unordered_set/debug/end1_neg.cc: New.\n+\t* testsuite/23_containers/unordered_set/debug/end2_neg.cc: New.\n+\t* testsuite/23_containers/unordered_set/debug/cend_neg.cc: New.\n+\t* testsuite/23_containers/unordered_multiset/debug/bucket_size_neg.cc:\n+\tNew.\n+\t* testsuite/23_containers/unordered_multiset/debug/begin1_neg.cc: New.\n+\t* testsuite/23_containers/unordered_multiset/debug/begin2_neg.cc: New.\n+\t* testsuite/23_containers/unordered_multiset/debug/cbegin_neg.cc: New.\n+\t* testsuite/23_containers/unordered_multiset/debug/end1_neg.cc: New.\n+\t* testsuite/23_containers/unordered_multiset/debug/end2_neg.cc: New.\n+\t* testsuite/23_containers/unordered_multiset/debug/cend_neg.cc: New.\n+\n 2012-10-15  Matthias Klose  <doko@ubuntu.com>\n \n \t* configure.host: Match arm*-*-linux-* for ARM Linux/GNU."}, {"sha": "9bed99821e9f704abac85429228d50251f694c1e", "filename": "libstdc++-v3/include/debug/formatter.h", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7181e991b54aaee6a21afb372611523a09a0dc00/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fformatter.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7181e991b54aaee6a21afb372611523a09a0dc00/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fformatter.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fformatter.h?ref=7181e991b54aaee6a21afb372611523a09a0dc00", "patch": "@@ -107,11 +107,13 @@ namespace __gnu_debug\n     __msg_insert_after_end,\n     __msg_erase_after_bad,\n     __msg_valid_range2,\n-    // unordered sequence local iterators\n+    // unordered container local iterators\n     __msg_local_iter_compare_bad,\n     __msg_non_empty_range,\n     // self move assign\n-    __msg_self_move_assign\n+    __msg_self_move_assign,\n+    // unordered container buckets\n+    __msg_bucket_index_oob\n   };\n \n   class _Error_formatter"}, {"sha": "a8e2f5facb71054e00cbbd9a5db9264d52849bbf", "filename": "libstdc++-v3/include/debug/macros.h", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7181e991b54aaee6a21afb372611523a09a0dc00/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fmacros.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7181e991b54aaee6a21afb372611523a09a0dc00/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fmacros.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fmacros.h?ref=7181e991b54aaee6a21afb372611523a09a0dc00", "patch": "@@ -202,11 +202,19 @@ _GLIBCXX_DEBUG_VERIFY(!_Last._M_is_before_begin(),\t\t\t\\\n // Verify that the subscript _N is less than the container's size.\n #define __glibcxx_check_subscript(_N)\t\t\t\t\t\\\n _GLIBCXX_DEBUG_VERIFY(_N < this->size(),\t\t\t\t\\\n-\t\t      _M_message(__gnu_debug::__msg_subscript_oob)      \\\n+\t\t      _M_message(__gnu_debug::__msg_subscript_oob)\t\\\n                       ._M_sequence(*this, \"this\")\t\t\t\\\n \t\t      ._M_integer(_N, #_N)\t\t\t\t\\\n \t\t      ._M_integer(this->size(), \"size\"))\n \n+// Verify that the bucket _N is less than the container's buckets count.\n+#define __glibcxx_check_bucket_index(_N)\t\t\t\t\\\n+_GLIBCXX_DEBUG_VERIFY(_N < this->bucket_count(),\t\t\t\\\n+\t\t      _M_message(__gnu_debug::__msg_bucket_index_oob)\t\\\n+                      ._M_sequence(*this, \"this\")\t\t\t\\\n+\t\t      ._M_integer(_N, #_N)\t\t\t\t\\\n+\t\t      ._M_integer(this->bucket_count(), \"size\"))\n+\n // Verify that the container is nonempty\n #define __glibcxx_check_nonempty()\t\t\t\t\t\\\n _GLIBCXX_DEBUG_VERIFY(! this->empty(),\t\t\t\t\t\\"}, {"sha": "e980d8ce4f16cf09fddd08e79b7247f3f60ff2cb", "filename": "libstdc++-v3/include/debug/unordered_map", "status": "modified", "additions": 62, "deletions": 12, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7181e991b54aaee6a21afb372611523a09a0dc00/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Funordered_map", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7181e991b54aaee6a21afb372611523a09a0dc00/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Funordered_map", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Funordered_map?ref=7181e991b54aaee6a21afb372611523a09a0dc00", "patch": "@@ -183,27 +183,52 @@ namespace __debug\n       // local versions\n       local_iterator\n       begin(size_type __b)\n-      { return local_iterator(_Base::begin(__b), __b, this); }\n+      {\n+\t__glibcxx_check_bucket_index(__b);\n+\treturn local_iterator(_Base::begin(__b), __b, this);\n+      }\n \n       local_iterator\n       end(size_type __b)\n-      { return local_iterator(_Base::end(__b), __b, this); }\n+      {\n+\t__glibcxx_check_bucket_index(__b);\n+\treturn local_iterator(_Base::end(__b), __b, this);\n+      }\n \n       const_local_iterator\n       begin(size_type __b) const\n-      { return const_local_iterator(_Base::begin(__b), __b, this); }\n+      {\n+\t__glibcxx_check_bucket_index(__b);\n+\treturn const_local_iterator(_Base::begin(__b), __b, this);\n+      }\n \n       const_local_iterator\n       end(size_type __b) const\n-      { return const_local_iterator(_Base::end(__b), __b, this); }\n+      {\n+\t__glibcxx_check_bucket_index(__b);\n+\treturn const_local_iterator(_Base::end(__b), __b, this);\n+      }\n \n       const_local_iterator\n       cbegin(size_type __b) const\n-      { return const_local_iterator(_Base::cbegin(__b), __b, this); }\n+      {\n+\t__glibcxx_check_bucket_index(__b);\n+\treturn const_local_iterator(_Base::cbegin(__b), __b, this);\n+      }\n \n       const_local_iterator\n       cend(size_type __b) const\n-      { return const_local_iterator(_Base::cend(__b), __b, this); }\n+      {\n+\t__glibcxx_check_bucket_index(__b);\n+\treturn const_local_iterator(_Base::cend(__b), __b, this);\n+      }\n+\n+      size_type\n+      bucket_size(size_type __b) const\n+      {\n+\t__glibcxx_check_bucket_index(__b);\n+\treturn _Base::bucket_size(__b);\n+      }\n \n       template<typename... _Args>\n \tstd::pair<iterator, bool>\n@@ -598,27 +623,52 @@ namespace __debug\n       // local versions\n       local_iterator\n       begin(size_type __b)\n-      { return local_iterator(_Base::begin(__b), __b, this); }\n+      {\n+\t__glibcxx_check_bucket_index(__b);\n+\treturn local_iterator(_Base::begin(__b), __b, this);\n+      }\n \n       local_iterator\n       end(size_type __b)\n-      { return local_iterator(_Base::end(__b), __b, this); }\n+      {\n+\t__glibcxx_check_bucket_index(__b);\n+\treturn local_iterator(_Base::end(__b), __b, this);\n+      }\n \n       const_local_iterator\n       begin(size_type __b) const\n-      { return const_local_iterator(_Base::begin(__b), __b, this); }\n+      {\n+\t__glibcxx_check_bucket_index(__b);\n+\treturn const_local_iterator(_Base::begin(__b), __b, this);\n+      }\n \n       const_local_iterator\n       end(size_type __b) const\n-      { return const_local_iterator(_Base::end(__b), __b, this); }\n+      {\n+\t__glibcxx_check_bucket_index(__b);\n+\treturn const_local_iterator(_Base::end(__b), __b, this);\n+      }\n \n       const_local_iterator\n       cbegin(size_type __b) const\n-      { return const_local_iterator(_Base::cbegin(__b), __b, this); }\n+      {\n+\t__glibcxx_check_bucket_index(__b);\n+\treturn const_local_iterator(_Base::cbegin(__b), __b, this);\n+      }\n \n       const_local_iterator\n       cend(size_type __b) const\n-      { return const_local_iterator(_Base::cend(__b), __b, this); }\n+      {\n+\t__glibcxx_check_bucket_index(__b);\n+\treturn const_local_iterator(_Base::cend(__b), __b, this);\n+      }\n+\n+      size_type\n+      bucket_size(size_type __b) const\n+      {\n+\t__glibcxx_check_bucket_index(__b);\n+\treturn _Base::bucket_size(__b);\n+      }\n \n       template<typename... _Args>\n \titerator"}, {"sha": "276821d7e83cb87efa77a565b4dd5d47e21afa59", "filename": "libstdc++-v3/include/debug/unordered_set", "status": "modified", "additions": 62, "deletions": 12, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7181e991b54aaee6a21afb372611523a09a0dc00/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Funordered_set", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7181e991b54aaee6a21afb372611523a09a0dc00/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Funordered_set", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Funordered_set?ref=7181e991b54aaee6a21afb372611523a09a0dc00", "patch": "@@ -183,27 +183,52 @@ namespace __debug\n       // local versions\n       local_iterator\n       begin(size_type __b)\n-      { return local_iterator(_Base::begin(__b), __b, this); }\n+      {\n+\t__glibcxx_check_bucket_index(__b);\n+\treturn local_iterator(_Base::begin(__b), __b, this);\n+      }\n \n       local_iterator\n       end(size_type __b)\n-      { return local_iterator(_Base::end(__b), __b, this); }\n+      {\n+\t__glibcxx_check_bucket_index(__b);\n+\treturn local_iterator(_Base::end(__b), __b, this);\n+      }\n \n       const_local_iterator\n       begin(size_type __b) const\n-      { return const_local_iterator(_Base::begin(__b), __b, this); }\n+      {\n+\t__glibcxx_check_bucket_index(__b);\n+\treturn const_local_iterator(_Base::begin(__b), __b, this);\n+      }\n \n       const_local_iterator\n       end(size_type __b) const\n-      { return const_local_iterator(_Base::end(__b), __b, this); }\n+      {\n+\t__glibcxx_check_bucket_index(__b);\n+\treturn const_local_iterator(_Base::end(__b), __b, this);\n+      }\n \n       const_local_iterator\n       cbegin(size_type __b) const\n-      { return const_local_iterator(_Base::cbegin(__b), __b, this); }\n+      {\n+\t__glibcxx_check_bucket_index(__b);\n+\treturn const_local_iterator(_Base::cbegin(__b), __b, this);\n+      }\n \n       const_local_iterator\n       cend(size_type __b) const\n-      { return const_local_iterator(_Base::cend(__b), __b, this); }\n+      {\n+\t__glibcxx_check_bucket_index(__b);\n+\treturn const_local_iterator(_Base::cend(__b), __b, this);\n+      }\n+\n+      size_type\n+      bucket_size(size_type __b) const\n+      {\n+\t__glibcxx_check_bucket_index(__b);\n+\treturn _Base::bucket_size(__b);\n+      }\n \n       template<typename... _Args>\n \tstd::pair<iterator, bool>\n@@ -593,27 +618,52 @@ namespace __debug\n       // local versions\n       local_iterator\n       begin(size_type __b)\n-      { return local_iterator(_Base::begin(__b), __b, this); }\n+      {\n+\t__glibcxx_check_bucket_index(__b);\n+\treturn local_iterator(_Base::begin(__b), __b, this);\n+      }\n \n       local_iterator\n       end(size_type __b)\n-      { return local_iterator(_Base::end(__b), __b, this); }\n+      {\n+\t__glibcxx_check_bucket_index(__b);\n+\treturn local_iterator(_Base::end(__b), __b, this);\n+      }\n \n       const_local_iterator\n       begin(size_type __b) const\n-      { return const_local_iterator(_Base::begin(__b), __b, this); }\n+      {\n+\t__glibcxx_check_bucket_index(__b);\n+\treturn const_local_iterator(_Base::begin(__b), __b, this);\n+      }\n \n       const_local_iterator\n       end(size_type __b) const\n-      { return const_local_iterator(_Base::end(__b), __b, this); }\n+      {\n+\t__glibcxx_check_bucket_index(__b);\n+\treturn const_local_iterator(_Base::end(__b), __b, this);\n+      }\n \n       const_local_iterator\n       cbegin(size_type __b) const\n-      { return const_local_iterator(_Base::cbegin(__b), __b, this); }\n+      {\n+\t__glibcxx_check_bucket_index(__b);\n+\treturn const_local_iterator(_Base::cbegin(__b), __b, this);\n+      }\n \n       const_local_iterator\n       cend(size_type __b) const\n-      { return const_local_iterator(_Base::cend(__b), __b, this); }\n+      {\n+\t__glibcxx_check_bucket_index(__b);\n+\treturn const_local_iterator(_Base::cend(__b), __b, this);\n+      }\n+\n+      size_type\n+      bucket_size(size_type __b) const\n+      {\n+\t__glibcxx_check_bucket_index(__b);\n+\treturn _Base::bucket_size(__b);\n+      }\n \n       template<typename... _Args>\n \titerator"}, {"sha": "6cd93d108e1fefd93aed13608aac1bf78c253417", "filename": "libstdc++-v3/src/c++11/debug.cc", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7181e991b54aaee6a21afb372611523a09a0dc00/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fdebug.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7181e991b54aaee6a21afb372611523a09a0dc00/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fdebug.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fdebug.cc?ref=7181e991b54aaee6a21afb372611523a09a0dc00", "patch": "@@ -178,7 +178,9 @@ namespace __gnu_debug\n     \"attempt to compare local iterators from different unordered container\"\n     \" buckets\",\n     \"function requires a non-empty iterator range [%1.name;, %2.name;)\",\n-    \"attempt to self move assign\"\n+    \"attempt to self move assign\",\n+    \"attempt to access container with out-of-bounds bucket index %2;,\"\n+    \" container only holds %3; buckets\"\n   };\n \n   void"}, {"sha": "63bdb53b0aa6386dfb8500564c17afb721f79757", "filename": "libstdc++-v3/testsuite/23_containers/unordered_map/debug/begin1_neg.cc", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7181e991b54aaee6a21afb372611523a09a0dc00/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fdebug%2Fbegin1_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7181e991b54aaee6a21afb372611523a09a0dc00/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fdebug%2Fbegin1_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fdebug%2Fbegin1_neg.cc?ref=7181e991b54aaee6a21afb372611523a09a0dc00", "patch": "@@ -0,0 +1,34 @@\n+// Copyright (C) 2012 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+//\n+// { dg-require-debug-mode \"\" }\n+// { dg-options \"-std=c++11\" }\n+// { dg-do run { xfail *-*-* } }\n+\n+#include <unordered_map>\n+\n+void test01()\n+{\n+  std::unordered_map<int, int> um;\n+  um.begin(um.bucket_count());\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "5f8c177a2ae4614de1431af03dee73a5b5ef37c4", "filename": "libstdc++-v3/testsuite/23_containers/unordered_map/debug/begin2_neg.cc", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7181e991b54aaee6a21afb372611523a09a0dc00/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fdebug%2Fbegin2_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7181e991b54aaee6a21afb372611523a09a0dc00/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fdebug%2Fbegin2_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fdebug%2Fbegin2_neg.cc?ref=7181e991b54aaee6a21afb372611523a09a0dc00", "patch": "@@ -0,0 +1,35 @@\n+// Copyright (C) 2012 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+//\n+// { dg-require-debug-mode \"\" }\n+// { dg-options \"-std=c++11\" }\n+// { dg-do run { xfail *-*-* } }\n+\n+#include <unordered_map>\n+\n+void test01()\n+{\n+  std::unordered_map<int, int> um;\n+  const std::unordered_map<int, int>& cum = um;\n+  cum.begin(um.bucket_count());\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "17e2875fbd7fda2b7dd0339a4531f9719d8c73c5", "filename": "libstdc++-v3/testsuite/23_containers/unordered_map/debug/bucket_size_neg.cc", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7181e991b54aaee6a21afb372611523a09a0dc00/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fdebug%2Fbucket_size_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7181e991b54aaee6a21afb372611523a09a0dc00/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fdebug%2Fbucket_size_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fdebug%2Fbucket_size_neg.cc?ref=7181e991b54aaee6a21afb372611523a09a0dc00", "patch": "@@ -0,0 +1,34 @@\n+// Copyright (C) 2012 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+//\n+// { dg-require-debug-mode \"\" }\n+// { dg-options \"-std=c++11\" }\n+// { dg-do run { xfail *-*-* } }\n+\n+#include <unordered_map>\n+\n+void test01()\n+{\n+  std::unordered_map<int, int> um;\n+  um.bucket_size(um.bucket_count());\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "8147256a72530ff4d8c92b4f5d11ecc7c4020525", "filename": "libstdc++-v3/testsuite/23_containers/unordered_map/debug/cbegin_neg.cc", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7181e991b54aaee6a21afb372611523a09a0dc00/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fdebug%2Fcbegin_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7181e991b54aaee6a21afb372611523a09a0dc00/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fdebug%2Fcbegin_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fdebug%2Fcbegin_neg.cc?ref=7181e991b54aaee6a21afb372611523a09a0dc00", "patch": "@@ -0,0 +1,34 @@\n+// Copyright (C) 2012 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+//\n+// { dg-require-debug-mode \"\" }\n+// { dg-options \"-std=c++11\" }\n+// { dg-do run { xfail *-*-* } }\n+\n+#include <unordered_map>\n+\n+void test01()\n+{\n+  std::unordered_map<int, int> um;\n+  um.cbegin(um.bucket_count());\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "0eb4800dbe8b1324807f2e39c9f3731b7da2c8ab", "filename": "libstdc++-v3/testsuite/23_containers/unordered_map/debug/cend_neg.cc", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7181e991b54aaee6a21afb372611523a09a0dc00/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fdebug%2Fcend_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7181e991b54aaee6a21afb372611523a09a0dc00/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fdebug%2Fcend_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fdebug%2Fcend_neg.cc?ref=7181e991b54aaee6a21afb372611523a09a0dc00", "patch": "@@ -0,0 +1,34 @@\n+// Copyright (C) 2012 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+//\n+// { dg-require-debug-mode \"\" }\n+// { dg-options \"-std=c++11\" }\n+// { dg-do run { xfail *-*-* } }\n+\n+#include <unordered_map>\n+\n+void test01()\n+{\n+  std::unordered_map<int, int> um;\n+  um.cend(um.bucket_count());\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "028efed06ce2f9dfe69286b4dba95ae2d2212da2", "filename": "libstdc++-v3/testsuite/23_containers/unordered_map/debug/end1_neg.cc", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7181e991b54aaee6a21afb372611523a09a0dc00/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fdebug%2Fend1_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7181e991b54aaee6a21afb372611523a09a0dc00/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fdebug%2Fend1_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fdebug%2Fend1_neg.cc?ref=7181e991b54aaee6a21afb372611523a09a0dc00", "patch": "@@ -0,0 +1,34 @@\n+// Copyright (C) 2012 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+//\n+// { dg-require-debug-mode \"\" }\n+// { dg-options \"-std=c++11\" }\n+// { dg-do run { xfail *-*-* } }\n+\n+#include <unordered_map>\n+\n+void test01()\n+{\n+  std::unordered_map<int, int> um;\n+  um.end(um.bucket_count());\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "fe25ad6b921995f2da90f2ceec6577063aa2f85a", "filename": "libstdc++-v3/testsuite/23_containers/unordered_map/debug/end2_neg.cc", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7181e991b54aaee6a21afb372611523a09a0dc00/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fdebug%2Fend2_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7181e991b54aaee6a21afb372611523a09a0dc00/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fdebug%2Fend2_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fdebug%2Fend2_neg.cc?ref=7181e991b54aaee6a21afb372611523a09a0dc00", "patch": "@@ -0,0 +1,35 @@\n+// Copyright (C) 2012 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+//\n+// { dg-require-debug-mode \"\" }\n+// { dg-options \"-std=c++11\" }\n+// { dg-do run { xfail *-*-* } }\n+\n+#include <unordered_map>\n+\n+void test01()\n+{\n+  std::unordered_map<int, int> um;\n+  const std::unordered_map<int, int>& cum = um;\n+  cum.end(um.bucket_count());\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "bf70732e3e64bf882c4416844ce8b5d852e0d428", "filename": "libstdc++-v3/testsuite/23_containers/unordered_multimap/debug/begin1_neg.cc", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7181e991b54aaee6a21afb372611523a09a0dc00/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Fdebug%2Fbegin1_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7181e991b54aaee6a21afb372611523a09a0dc00/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Fdebug%2Fbegin1_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Fdebug%2Fbegin1_neg.cc?ref=7181e991b54aaee6a21afb372611523a09a0dc00", "patch": "@@ -0,0 +1,34 @@\n+// Copyright (C) 2012 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+//\n+// { dg-require-debug-mode \"\" }\n+// { dg-options \"-std=c++11\" }\n+// { dg-do run { xfail *-*-* } }\n+\n+#include <unordered_map>\n+\n+void test01()\n+{\n+  std::unordered_multimap<int, int> um;\n+  um.begin(um.bucket_count());\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "5f8c177a2ae4614de1431af03dee73a5b5ef37c4", "filename": "libstdc++-v3/testsuite/23_containers/unordered_multimap/debug/begin2_neg.cc", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7181e991b54aaee6a21afb372611523a09a0dc00/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Fdebug%2Fbegin2_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7181e991b54aaee6a21afb372611523a09a0dc00/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Fdebug%2Fbegin2_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Fdebug%2Fbegin2_neg.cc?ref=7181e991b54aaee6a21afb372611523a09a0dc00", "patch": "@@ -0,0 +1,35 @@\n+// Copyright (C) 2012 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+//\n+// { dg-require-debug-mode \"\" }\n+// { dg-options \"-std=c++11\" }\n+// { dg-do run { xfail *-*-* } }\n+\n+#include <unordered_map>\n+\n+void test01()\n+{\n+  std::unordered_map<int, int> um;\n+  const std::unordered_map<int, int>& cum = um;\n+  cum.begin(um.bucket_count());\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "17e2875fbd7fda2b7dd0339a4531f9719d8c73c5", "filename": "libstdc++-v3/testsuite/23_containers/unordered_multimap/debug/bucket_size_neg.cc", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7181e991b54aaee6a21afb372611523a09a0dc00/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Fdebug%2Fbucket_size_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7181e991b54aaee6a21afb372611523a09a0dc00/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Fdebug%2Fbucket_size_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Fdebug%2Fbucket_size_neg.cc?ref=7181e991b54aaee6a21afb372611523a09a0dc00", "patch": "@@ -0,0 +1,34 @@\n+// Copyright (C) 2012 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+//\n+// { dg-require-debug-mode \"\" }\n+// { dg-options \"-std=c++11\" }\n+// { dg-do run { xfail *-*-* } }\n+\n+#include <unordered_map>\n+\n+void test01()\n+{\n+  std::unordered_map<int, int> um;\n+  um.bucket_size(um.bucket_count());\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "8147256a72530ff4d8c92b4f5d11ecc7c4020525", "filename": "libstdc++-v3/testsuite/23_containers/unordered_multimap/debug/cbegin_neg.cc", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7181e991b54aaee6a21afb372611523a09a0dc00/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Fdebug%2Fcbegin_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7181e991b54aaee6a21afb372611523a09a0dc00/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Fdebug%2Fcbegin_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Fdebug%2Fcbegin_neg.cc?ref=7181e991b54aaee6a21afb372611523a09a0dc00", "patch": "@@ -0,0 +1,34 @@\n+// Copyright (C) 2012 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+//\n+// { dg-require-debug-mode \"\" }\n+// { dg-options \"-std=c++11\" }\n+// { dg-do run { xfail *-*-* } }\n+\n+#include <unordered_map>\n+\n+void test01()\n+{\n+  std::unordered_map<int, int> um;\n+  um.cbegin(um.bucket_count());\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "0eb4800dbe8b1324807f2e39c9f3731b7da2c8ab", "filename": "libstdc++-v3/testsuite/23_containers/unordered_multimap/debug/cend_neg.cc", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7181e991b54aaee6a21afb372611523a09a0dc00/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Fdebug%2Fcend_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7181e991b54aaee6a21afb372611523a09a0dc00/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Fdebug%2Fcend_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Fdebug%2Fcend_neg.cc?ref=7181e991b54aaee6a21afb372611523a09a0dc00", "patch": "@@ -0,0 +1,34 @@\n+// Copyright (C) 2012 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+//\n+// { dg-require-debug-mode \"\" }\n+// { dg-options \"-std=c++11\" }\n+// { dg-do run { xfail *-*-* } }\n+\n+#include <unordered_map>\n+\n+void test01()\n+{\n+  std::unordered_map<int, int> um;\n+  um.cend(um.bucket_count());\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "028efed06ce2f9dfe69286b4dba95ae2d2212da2", "filename": "libstdc++-v3/testsuite/23_containers/unordered_multimap/debug/end1_neg.cc", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7181e991b54aaee6a21afb372611523a09a0dc00/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Fdebug%2Fend1_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7181e991b54aaee6a21afb372611523a09a0dc00/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Fdebug%2Fend1_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Fdebug%2Fend1_neg.cc?ref=7181e991b54aaee6a21afb372611523a09a0dc00", "patch": "@@ -0,0 +1,34 @@\n+// Copyright (C) 2012 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+//\n+// { dg-require-debug-mode \"\" }\n+// { dg-options \"-std=c++11\" }\n+// { dg-do run { xfail *-*-* } }\n+\n+#include <unordered_map>\n+\n+void test01()\n+{\n+  std::unordered_map<int, int> um;\n+  um.end(um.bucket_count());\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "fe25ad6b921995f2da90f2ceec6577063aa2f85a", "filename": "libstdc++-v3/testsuite/23_containers/unordered_multimap/debug/end2_neg.cc", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7181e991b54aaee6a21afb372611523a09a0dc00/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Fdebug%2Fend2_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7181e991b54aaee6a21afb372611523a09a0dc00/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Fdebug%2Fend2_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Fdebug%2Fend2_neg.cc?ref=7181e991b54aaee6a21afb372611523a09a0dc00", "patch": "@@ -0,0 +1,35 @@\n+// Copyright (C) 2012 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+//\n+// { dg-require-debug-mode \"\" }\n+// { dg-options \"-std=c++11\" }\n+// { dg-do run { xfail *-*-* } }\n+\n+#include <unordered_map>\n+\n+void test01()\n+{\n+  std::unordered_map<int, int> um;\n+  const std::unordered_map<int, int>& cum = um;\n+  cum.end(um.bucket_count());\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "1f2ee73487b88e7ac426d4b54312a6f252311d1f", "filename": "libstdc++-v3/testsuite/23_containers/unordered_multiset/debug/begin1_neg.cc", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7181e991b54aaee6a21afb372611523a09a0dc00/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Fdebug%2Fbegin1_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7181e991b54aaee6a21afb372611523a09a0dc00/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Fdebug%2Fbegin1_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Fdebug%2Fbegin1_neg.cc?ref=7181e991b54aaee6a21afb372611523a09a0dc00", "patch": "@@ -0,0 +1,34 @@\n+// Copyright (C) 2012 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+//\n+// { dg-require-debug-mode \"\" }\n+// { dg-options \"-std=c++11\" }\n+// { dg-do run { xfail *-*-* } }\n+\n+#include <unordered_set>\n+\n+void test01()\n+{\n+  std::unordered_multiset<int> us;\n+  us.begin(us.bucket_count());\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "e768a548067c4d4fd061822097d6240e1f25ecef", "filename": "libstdc++-v3/testsuite/23_containers/unordered_multiset/debug/begin2_neg.cc", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7181e991b54aaee6a21afb372611523a09a0dc00/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Fdebug%2Fbegin2_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7181e991b54aaee6a21afb372611523a09a0dc00/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Fdebug%2Fbegin2_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Fdebug%2Fbegin2_neg.cc?ref=7181e991b54aaee6a21afb372611523a09a0dc00", "patch": "@@ -0,0 +1,35 @@\n+// Copyright (C) 2012 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+//\n+// { dg-require-debug-mode \"\" }\n+// { dg-options \"-std=c++11\" }\n+// { dg-do run { xfail *-*-* } }\n+\n+#include <unordered_set>\n+\n+void test01()\n+{\n+  std::unordered_multiset<int> us;\n+  const std::unordered_multiset<int>& cus = us;\n+  cus.begin(us.bucket_count());\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "14928c62ef9f5f9de8a2a06e389939b57f557941", "filename": "libstdc++-v3/testsuite/23_containers/unordered_multiset/debug/bucket_size_neg.cc", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7181e991b54aaee6a21afb372611523a09a0dc00/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Fdebug%2Fbucket_size_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7181e991b54aaee6a21afb372611523a09a0dc00/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Fdebug%2Fbucket_size_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Fdebug%2Fbucket_size_neg.cc?ref=7181e991b54aaee6a21afb372611523a09a0dc00", "patch": "@@ -0,0 +1,34 @@\n+// Copyright (C) 2012 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+//\n+// { dg-require-debug-mode \"\" }\n+// { dg-options \"-std=c++11\" }\n+// { dg-do run { xfail *-*-* } }\n+\n+#include <unordered_set>\n+\n+void test01()\n+{\n+  std::unordered_multiset<int> us;\n+  us.bucket_size(us.bucket_count());\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "0e5a26c31bcf419a3c87ea49898e4feea03ca33b", "filename": "libstdc++-v3/testsuite/23_containers/unordered_multiset/debug/cbegin_neg.cc", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7181e991b54aaee6a21afb372611523a09a0dc00/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Fdebug%2Fcbegin_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7181e991b54aaee6a21afb372611523a09a0dc00/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Fdebug%2Fcbegin_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Fdebug%2Fcbegin_neg.cc?ref=7181e991b54aaee6a21afb372611523a09a0dc00", "patch": "@@ -0,0 +1,34 @@\n+// Copyright (C) 2012 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+//\n+// { dg-require-debug-mode \"\" }\n+// { dg-options \"-std=c++11\" }\n+// { dg-do run { xfail *-*-* } }\n+\n+#include <unordered_set>\n+\n+void test01()\n+{\n+  std::unordered_multiset<int> us;\n+  us.cbegin(us.bucket_count());\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "55d2bb20488962a6b83d4d2d908bd9836cc9db2b", "filename": "libstdc++-v3/testsuite/23_containers/unordered_multiset/debug/cend_neg.cc", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7181e991b54aaee6a21afb372611523a09a0dc00/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Fdebug%2Fcend_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7181e991b54aaee6a21afb372611523a09a0dc00/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Fdebug%2Fcend_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Fdebug%2Fcend_neg.cc?ref=7181e991b54aaee6a21afb372611523a09a0dc00", "patch": "@@ -0,0 +1,34 @@\n+// Copyright (C) 2012 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+//\n+// { dg-require-debug-mode \"\" }\n+// { dg-options \"-std=c++11\" }\n+// { dg-do run { xfail *-*-* } }\n+\n+#include <unordered_set>\n+\n+void test01()\n+{\n+  std::unordered_multiset<int> us;\n+  us.cend(us.bucket_count());\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "4fc054a276e11329fd39d726d5236bfbe4de16a6", "filename": "libstdc++-v3/testsuite/23_containers/unordered_multiset/debug/end1_neg.cc", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7181e991b54aaee6a21afb372611523a09a0dc00/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Fdebug%2Fend1_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7181e991b54aaee6a21afb372611523a09a0dc00/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Fdebug%2Fend1_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Fdebug%2Fend1_neg.cc?ref=7181e991b54aaee6a21afb372611523a09a0dc00", "patch": "@@ -0,0 +1,34 @@\n+// Copyright (C) 2012 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+//\n+// { dg-require-debug-mode \"\" }\n+// { dg-options \"-std=c++11\" }\n+// { dg-do run { xfail *-*-* } }\n+\n+#include <unordered_set>\n+\n+void test01()\n+{\n+  std::unordered_multiset<int> us;\n+  us.end(us.bucket_count());\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "e05782859cb5ef453a31b538744b2b514bb2951d", "filename": "libstdc++-v3/testsuite/23_containers/unordered_multiset/debug/end2_neg.cc", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7181e991b54aaee6a21afb372611523a09a0dc00/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Fdebug%2Fend2_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7181e991b54aaee6a21afb372611523a09a0dc00/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Fdebug%2Fend2_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Fdebug%2Fend2_neg.cc?ref=7181e991b54aaee6a21afb372611523a09a0dc00", "patch": "@@ -0,0 +1,35 @@\n+// Copyright (C) 2012 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+//\n+// { dg-require-debug-mode \"\" }\n+// { dg-options \"-std=c++11\" }\n+// { dg-do run { xfail *-*-* } }\n+\n+#include <unordered_set>\n+\n+void test01()\n+{\n+  std::unordered_multiset<int> us;\n+  const std::unordered_multiset<int>& cus = us;\n+  cus.end(us.bucket_count());\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "2d3b2742831f267d12886afebf16eaec4e8ec7b1", "filename": "libstdc++-v3/testsuite/23_containers/unordered_set/debug/begin1_neg.cc", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7181e991b54aaee6a21afb372611523a09a0dc00/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Fdebug%2Fbegin1_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7181e991b54aaee6a21afb372611523a09a0dc00/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Fdebug%2Fbegin1_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Fdebug%2Fbegin1_neg.cc?ref=7181e991b54aaee6a21afb372611523a09a0dc00", "patch": "@@ -0,0 +1,34 @@\n+// Copyright (C) 2012 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+//\n+// { dg-require-debug-mode \"\" }\n+// { dg-options \"-std=c++11\" }\n+// { dg-do run { xfail *-*-* } }\n+\n+#include <unordered_set>\n+\n+void test01()\n+{\n+  std::unordered_set<int> us;\n+  us.begin(us.bucket_count());\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "7836ec25ce6473b05a9dbb35e62d0cd17a86cc67", "filename": "libstdc++-v3/testsuite/23_containers/unordered_set/debug/begin2_neg.cc", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7181e991b54aaee6a21afb372611523a09a0dc00/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Fdebug%2Fbegin2_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7181e991b54aaee6a21afb372611523a09a0dc00/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Fdebug%2Fbegin2_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Fdebug%2Fbegin2_neg.cc?ref=7181e991b54aaee6a21afb372611523a09a0dc00", "patch": "@@ -0,0 +1,35 @@\n+// Copyright (C) 2012 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+//\n+// { dg-require-debug-mode \"\" }\n+// { dg-options \"-std=c++11\" }\n+// { dg-do run { xfail *-*-* } }\n+\n+#include <unordered_set>\n+\n+void test01()\n+{\n+  std::unordered_set<int> us;\n+  const std::unordered_set<int>& cus = us;\n+  cus.begin(us.bucket_count());\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "5a6f5bbcdb9fb7bb5bc566544717c1d624b230dd", "filename": "libstdc++-v3/testsuite/23_containers/unordered_set/debug/bucket_size_neg.cc", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7181e991b54aaee6a21afb372611523a09a0dc00/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Fdebug%2Fbucket_size_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7181e991b54aaee6a21afb372611523a09a0dc00/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Fdebug%2Fbucket_size_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Fdebug%2Fbucket_size_neg.cc?ref=7181e991b54aaee6a21afb372611523a09a0dc00", "patch": "@@ -0,0 +1,34 @@\n+// Copyright (C) 2012 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+//\n+// { dg-require-debug-mode \"\" }\n+// { dg-options \"-std=c++11\" }\n+// { dg-do run { xfail *-*-* } }\n+\n+#include <unordered_set>\n+\n+void test01()\n+{\n+  std::unordered_set<int> us;\n+  us.bucket_size(us.bucket_count());\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "5e444ad725a4f660cbb6c3a0bdb9adc408cad6d5", "filename": "libstdc++-v3/testsuite/23_containers/unordered_set/debug/cbegin_neg.cc", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7181e991b54aaee6a21afb372611523a09a0dc00/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Fdebug%2Fcbegin_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7181e991b54aaee6a21afb372611523a09a0dc00/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Fdebug%2Fcbegin_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Fdebug%2Fcbegin_neg.cc?ref=7181e991b54aaee6a21afb372611523a09a0dc00", "patch": "@@ -0,0 +1,34 @@\n+// Copyright (C) 2012 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+//\n+// { dg-require-debug-mode \"\" }\n+// { dg-options \"-std=c++11\" }\n+// { dg-do run { xfail *-*-* } }\n+\n+#include <unordered_set>\n+\n+void test01()\n+{\n+  std::unordered_set<int> us;\n+  us.cbegin(us.bucket_count());\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "9fb847b5c16bd1b989787637c86449df1026ed13", "filename": "libstdc++-v3/testsuite/23_containers/unordered_set/debug/cend_neg.cc", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7181e991b54aaee6a21afb372611523a09a0dc00/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Fdebug%2Fcend_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7181e991b54aaee6a21afb372611523a09a0dc00/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Fdebug%2Fcend_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Fdebug%2Fcend_neg.cc?ref=7181e991b54aaee6a21afb372611523a09a0dc00", "patch": "@@ -0,0 +1,34 @@\n+// Copyright (C) 2012 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+//\n+// { dg-require-debug-mode \"\" }\n+// { dg-options \"-std=c++11\" }\n+// { dg-do run { xfail *-*-* } }\n+\n+#include <unordered_set>\n+\n+void test01()\n+{\n+  std::unordered_set<int> us;\n+  us.cend(us.bucket_count());\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "704e6103721c3015f690ab99a022892802910a20", "filename": "libstdc++-v3/testsuite/23_containers/unordered_set/debug/end1_neg.cc", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7181e991b54aaee6a21afb372611523a09a0dc00/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Fdebug%2Fend1_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7181e991b54aaee6a21afb372611523a09a0dc00/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Fdebug%2Fend1_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Fdebug%2Fend1_neg.cc?ref=7181e991b54aaee6a21afb372611523a09a0dc00", "patch": "@@ -0,0 +1,34 @@\n+// Copyright (C) 2012 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+//\n+// { dg-require-debug-mode \"\" }\n+// { dg-options \"-std=c++11\" }\n+// { dg-do run { xfail *-*-* } }\n+\n+#include <unordered_set>\n+\n+void test01()\n+{\n+  std::unordered_set<int> us;\n+  us.end(us.bucket_count());\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "ff645b5f1063128f69ce694b257d3c6fcf2904aa", "filename": "libstdc++-v3/testsuite/23_containers/unordered_set/debug/end2_neg.cc", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7181e991b54aaee6a21afb372611523a09a0dc00/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Fdebug%2Fend2_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7181e991b54aaee6a21afb372611523a09a0dc00/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Fdebug%2Fend2_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Fdebug%2Fend2_neg.cc?ref=7181e991b54aaee6a21afb372611523a09a0dc00", "patch": "@@ -0,0 +1,35 @@\n+// Copyright (C) 2012 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+//\n+// { dg-require-debug-mode \"\" }\n+// { dg-options \"-std=c++11\" }\n+// { dg-do run { xfail *-*-* } }\n+\n+#include <unordered_set>\n+\n+void test01()\n+{\n+  std::unordered_set<int> us;\n+  const std::unordered_set<int>& cus = us;\n+  cus.end(us.bucket_count());\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}]}