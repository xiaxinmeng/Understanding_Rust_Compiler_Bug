{"sha": "0eac9c60ac1f28eeb7bb0a56e533865d984015f6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGVhYzljNjBhYzFmMjhlZWI3YmIwYTU2ZTUzMzg2NWQ5ODQwMTVmNg==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-05-18T09:57:47Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-05-26T07:16:00Z"}, "message": "docs: port old-intall.texi part to install.texi\n\ngcc/ChangeLog:\n\n\t* doc/install.texi: Port relevant part from install-old.texi\n\tand re-generate list of CPUs and systems.", "tree": {"sha": "05ad353d423d7e70814b951cc7a2c50b0b285c2e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/05ad353d423d7e70814b951cc7a2c50b0b285c2e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0eac9c60ac1f28eeb7bb0a56e533865d984015f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0eac9c60ac1f28eeb7bb0a56e533865d984015f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0eac9c60ac1f28eeb7bb0a56e533865d984015f6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0eac9c60ac1f28eeb7bb0a56e533865d984015f6/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "431d26e1dd18c1146d3d4dcd3b45a3b04f7f7d59", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/431d26e1dd18c1146d3d4dcd3b45a3b04f7f7d59", "html_url": "https://github.com/Rust-GCC/gccrs/commit/431d26e1dd18c1146d3d4dcd3b45a3b04f7f7d59"}], "stats": {"total": 72, "additions": 58, "deletions": 14}, "files": [{"sha": "591ccaacbc1c339059b2495f49764196458f108f", "filename": "gcc/doc/install.texi", "status": "modified", "additions": 58, "deletions": 14, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0eac9c60ac1f28eeb7bb0a56e533865d984015f6/gcc%2Fdoc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0eac9c60ac1f28eeb7bb0a56e533865d984015f6/gcc%2Fdoc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finstall.texi?ref=0eac9c60ac1f28eeb7bb0a56e533865d984015f6", "patch": "@@ -697,23 +697,67 @@ The default value is @uref{https://gcc.gnu.org/,,https://gcc.gnu.org/}.\n \n @end table\n \n-@heading Target specification\n-@itemize @bullet\n-@item\n-GCC has code to correctly determine the correct value for @var{target}\n-for nearly all native systems.  Therefore, we highly recommend you do\n-not provide a configure target when configuring a native compiler.\n+@heading Host, Build and Target specification\n \n-@item\n-@var{target} must be specified as @option{--target=@var{target}}\n-when configuring a cross compiler; examples of valid targets would be\n-m68k-elf, sh-elf, etc.\n+Specify the host, build and target machine configurations.  You do this\n+when you run the @file{configure} script.\n \n-@item\n-Specifying just @var{target} instead of @option{--target=@var{target}}\n-implies that the host defaults to @var{target}.\n-@end itemize\n+The @dfn{build} machine is the system which you are using, the\n+@dfn{host} machine is the system where you want to run the resulting\n+compiler (normally the build machine), and the @dfn{target} machine is\n+the system for which you want the compiler to generate code.\n+\n+If you are building a compiler to produce code for the machine it runs\n+on (a native compiler), you normally do not need to specify any operands\n+to @file{configure}; it will try to guess the type of machine you are on\n+and use that as the build, host and target machines.  So you don't need\n+to specify a configuration when building a native compiler unless\n+@file{configure} cannot figure out what your configuration is or guesses\n+wrong.\n+\n+In those cases, specify the build machine's @dfn{configuration name}\n+with the @option{--host} option; the host and target will default to be\n+the same as the host machine.\n+\n+Here is an example:\n+\n+@smallexample\n+./configure --host=x86_64-pc-linux-gnu\n+@end smallexample\n \n+A configuration name may be canonical or it may be more or less\n+abbreviated (@file{config.sub} script produces canonical versions).\n+\n+A canonical configuration name has three parts, separated by dashes.\n+It looks like this: @samp{@var{cpu}-@var{company}-@var{system}}.\n+\n+Here are the possible CPU types:\n+\n+@quotation\n+aarch64, aarch64_be, alpha, alpha64, amdgcn, arc, arceb, arm, armeb, avr, bfin,\n+bpf, cr16, cris, csky, epiphany, fido, fr30, frv, ft32, h8300, hppa, hppa2.0,\n+hppa64, i486, i686, ia64, iq2000, lm32, m32c, m32r, m32rle, m68k, mcore,\n+microblaze, microblazeel, mips, mips64, mips64el, mips64octeon, mips64orion,\n+mips64vr, mipsel, mipsisa32, mipsisa32r2, mipsisa64, mipsisa64r2,\n+mipsisa64r2el, mipsisa64sb1, mipsisa64sr71k, mipstx39, mmix, mn10300, moxie,\n+msp430, nds32be, nds32le, nios2, nvptx, or1k, pdp11, powerpc, powerpc64,\n+powerpc64le, powerpcle, pru, riscv32, riscv32be, riscv64, riscv64be, rl78, rx,\n+s390, s390x, sh, shle, sparc, sparc64, tic6x, tilegx, tilegxbe, tilepro, v850,\n+v850e, v850e1, vax, visium, x86_64, xstormy16, xtensa\n+@end quotation\n+\n+Here is a list of system types:\n+\n+@quotation\n+aix@var{version}, amdhsa, aout, cygwin, darwin@var{version},\n+eabi, eabialtivec, eabisim, eabisimaltivec, elf, elf32,\n+elfbare, elfoabi, freebsd@var{version}, gnu, hpux, hpux@var{version},\n+kfreebsd-gnu, kopensolaris-gnu, linux-androideabi, linux-gnu,\n+linux-gnu_altivec, linux-musl, linux-uclibc, lynxos, mingw32, mingw32crt,\n+mmixware, msdosdjgpp, netbsd, netbsdelf@var{version}, nto-qnx, openbsd,\n+rtems, solaris@var{version}, symbianelf, tpf, uclinux, uclinux_eabi, vms,\n+vxworks, vxworksae, vxworksmils\n+@end quotation\n \n @heading Options specification\n "}]}