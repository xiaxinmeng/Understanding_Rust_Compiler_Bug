{"sha": "0fcb564b72f58f8d3fa3351fbad33d32b63697ca", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGZjYjU2NGI3MmY1OGY4ZDNmYTMzNTFmYmFkMzNkMzJiNjM2OTdjYQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2013-02-27T07:28:48Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2013-02-27T07:28:48Z"}, "message": "incpath.c (add_standard_paths): Use reconcat instead of concat where appropriate and avoid leaking memory.\n\n\t* incpath.c (add_standard_paths): Use reconcat instead of concat\n\twhere appropriate and avoid leaking memory.\n\nFrom-SVN: r196306", "tree": {"sha": "e22ae12d4bb7029d94d5769074842b775d33ab77", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e22ae12d4bb7029d94d5769074842b775d33ab77"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0fcb564b72f58f8d3fa3351fbad33d32b63697ca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fcb564b72f58f8d3fa3351fbad33d32b63697ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0fcb564b72f58f8d3fa3351fbad33d32b63697ca", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fcb564b72f58f8d3fa3351fbad33d32b63697ca/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "dc3577989d23572bc6f695e791eeaad33cfe8f6a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc3577989d23572bc6f695e791eeaad33cfe8f6a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc3577989d23572bc6f695e791eeaad33cfe8f6a"}], "stats": {"total": 34, "additions": 24, "deletions": 10}, "files": [{"sha": "86426e734ccf669126649c09fc91ac7e361b79b1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fcb564b72f58f8d3fa3351fbad33d32b63697ca/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fcb564b72f58f8d3fa3351fbad33d32b63697ca/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0fcb564b72f58f8d3fa3351fbad33d32b63697ca", "patch": "@@ -1,5 +1,8 @@\n 2013-02-27  Jakub Jelinek  <jakub@redhat.com>\n \n+\t* incpath.c (add_standard_paths): Use reconcat instead of concat\n+\twhere appropriate and avoid leaking memory.\n+\n \t* opts.h: Include obstack.h.\n \t(opts_concat): New prototype.\n \t(opts_obstack): New declaration."}, {"sha": "018da982c14cd947f4896ac1cbd569ad18a5d653", "filename": "gcc/incpath.c", "status": "modified", "additions": 21, "deletions": 10, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fcb564b72f58f8d3fa3351fbad33d32b63697ca/gcc%2Fincpath.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fcb564b72f58f8d3fa3351fbad33d32b63697ca/gcc%2Fincpath.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fincpath.c?ref=0fcb564b72f58f8d3fa3351fbad33d32b63697ca", "patch": "@@ -149,12 +149,17 @@ add_standard_paths (const char *sysroot, const char *iprefix,\n \t\t{\n \t\t  char *str = concat (iprefix, p->fname + len, NULL);\n \t\t  if (p->multilib == 1 && imultilib)\n-\t\t    str = concat (str, dir_separator_str, imultilib, NULL);\n+\t\t    str = reconcat (str, str, dir_separator_str,\n+\t\t\t\t    imultilib, NULL);\n \t\t  else if (p->multilib == 2)\n \t\t    {\n \t\t      if (!imultiarch)\n-\t\t\tcontinue;\n-\t\t      str = concat (str, dir_separator_str, imultiarch, NULL);\n+\t\t\t{\n+\t\t\t  free (str);\n+\t\t\t  continue;\n+\t\t\t}\n+\t\t      str = reconcat (str, str, dir_separator_str,\n+\t\t\t\t      imultiarch, NULL);\n \t\t    }\n \t\t  add_path (str, SYSTEM, p->cxx_aware, false);\n \t\t}\n@@ -183,6 +188,7 @@ add_standard_paths (const char *sysroot, const char *iprefix,\n \t\t   && !filename_ncmp (p->fname, cpp_PREFIX, cpp_PREFIX_len))\n \t    {\n  \t      static const char *relocated_prefix;\n+\t      char *ostr;\n \t      /* If this path starts with the configure-time prefix,\n \t\t but the compiler has been relocated, replace it\n \t\t with the run-time prefix.  The run-time exec prefix\n@@ -198,22 +204,27 @@ add_standard_paths (const char *sysroot, const char *iprefix,\n \t\t    = make_relative_prefix (dummy,\n \t\t\t\t\t    cpp_EXEC_PREFIX,\n \t\t\t\t\t    cpp_PREFIX);\n+\t\t  free (dummy);\n \t\t}\n-\t      str = concat (relocated_prefix,\n-\t\t\t    p->fname + cpp_PREFIX_len,\n-\t\t\t    NULL);\n-\t      str = update_path (str, p->component);\n+\t      ostr = concat (relocated_prefix,\n+\t\t\t     p->fname + cpp_PREFIX_len,\n+\t\t\t     NULL);\n+\t      str = update_path (ostr, p->component);\n+\t      free (ostr);\n \t    }\n \t  else\n \t    str = update_path (p->fname, p->component);\n \n \t  if (p->multilib == 1 && imultilib)\n-\t    str = concat (str, dir_separator_str, imultilib, NULL);\n+\t    str = reconcat (str, str, dir_separator_str, imultilib, NULL);\n \t  else if (p->multilib == 2)\n \t    {\n \t      if (!imultiarch)\n-\t\tcontinue;\n-\t      str = concat (str, dir_separator_str, imultiarch, NULL);\n+\t\t{\n+\t\t  free (str);\n+\t\t  continue;\n+\t\t}\n+\t      str = reconcat (str, str, dir_separator_str, imultiarch, NULL);\n \t    }\n \n \t  add_path (str, SYSTEM, p->cxx_aware, false);"}]}