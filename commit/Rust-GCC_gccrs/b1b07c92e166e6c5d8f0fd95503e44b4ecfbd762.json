{"sha": "b1b07c92e166e6c5d8f0fd95503e44b4ecfbd762", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjFiMDdjOTJlMTY2ZTZjNWQ4ZjBmZDk1NTAzZTQ0YjRlY2ZiZDc2Mg==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2009-10-09T13:24:59Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2009-10-09T13:24:59Z"}, "message": "re PR driver/41637 (testsuite (-flto/-fwhopr) leaves does not clean up in /tmp)\n\n2009-10-09  Richard Guenther  <rguenther@suse.de>\n\n\tPR driver/41637\n\t* lto-wrapper.c (ltrans_output_file, flto_out, args_name): New\n\tglobals.\n\t(lto_wrapper_exit): New function.\n\t(fatal): Use it.\n\t(fatal_perror): Likewise.\n\t(fork_execute): Use global args_name, do not free it.\n\t(run_gcc): Use global ltrans_output_file, flto_out, do not free them.\n\t* lto-streamer.h: Remove duplicate prototypes.\n\n\tPR lto/41635\n\tPR lto/41636\n\tlto/\n\t* lto.c (read_cgraph_and_symbols): Do not assert we can open\n\ta file.\n\t* lto-elf.c (init_shdr##BITS): Fix i18n problems.\n\t(init_ehdr##BITS): Likewise.\n\nFrom-SVN: r152588", "tree": {"sha": "df79584a59c59cc699aebb0953c8a12388d08091", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/df79584a59c59cc699aebb0953c8a12388d08091"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b1b07c92e166e6c5d8f0fd95503e44b4ecfbd762", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1b07c92e166e6c5d8f0fd95503e44b4ecfbd762", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1b07c92e166e6c5d8f0fd95503e44b4ecfbd762", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1b07c92e166e6c5d8f0fd95503e44b4ecfbd762/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9f3f7d131fd4200ed84aa44ec75b3c675b8273ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f3f7d131fd4200ed84aa44ec75b3c675b8273ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f3f7d131fd4200ed84aa44ec75b3c675b8273ae"}], "stats": {"total": 80, "additions": 64, "deletions": 16}, "files": [{"sha": "a214221e681691b1cabc47608e09bde83e5e7221", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1b07c92e166e6c5d8f0fd95503e44b4ecfbd762/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1b07c92e166e6c5d8f0fd95503e44b4ecfbd762/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b1b07c92e166e6c5d8f0fd95503e44b4ecfbd762", "patch": "@@ -1,3 +1,15 @@\n+2009-10-09  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR driver/41637\n+\t* lto-wrapper.c (ltrans_output_file, flto_out, args_name): New\n+\tglobals.\n+\t(lto_wrapper_exit): New function.\n+\t(fatal): Use it.\n+\t(fatal_perror): Likewise.\n+\t(fork_execute): Use global args_name, do not free it.\n+\t(run_gcc): Use global ltrans_output_file, flto_out, do not free them.\n+\t* lto-streamer.h: Remove duplicate prototypes.\n+\n 2009-10-09  Richard Guenther  <rguenther@suse.de>\n \n \t* cgraph.c (cgraph_create_edge): Check for NULL call_stmt"}, {"sha": "4d90ecb0d0c4c2bda0cd6af5eccbbfae127a9c32", "filename": "gcc/lto-streamer.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1b07c92e166e6c5d8f0fd95503e44b4ecfbd762/gcc%2Flto-streamer.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1b07c92e166e6c5d8f0fd95503e44b4ecfbd762/gcc%2Flto-streamer.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer.h?ref=b1b07c92e166e6c5d8f0fd95503e44b4ecfbd762", "patch": "@@ -806,10 +806,6 @@ extern void lto_check_version (int, int);\n \n \n /* In lto-streamer-in.c */\n-extern void lto_input_function_body (struct lto_file_decl_data *, tree,\n-\t\t\t\t     const char *);\n-extern void lto_input_constructors_and_inits (struct lto_file_decl_data *,\n-\t\t\t\t\t      const char *);\n extern void lto_input_cgraph (struct lto_file_decl_data *, const char *);\n extern void lto_init_reader (void);\n extern tree lto_input_tree (struct lto_input_block *, struct data_in *);"}, {"sha": "cddd4156a35c80da64e2a8b8c244efefce7aa837", "filename": "gcc/lto-wrapper.c", "status": "modified", "additions": 27, "deletions": 9, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1b07c92e166e6c5d8f0fd95503e44b4ecfbd762/gcc%2Flto-wrapper.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1b07c92e166e6c5d8f0fd95503e44b4ecfbd762/gcc%2Flto-wrapper.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-wrapper.c?ref=b1b07c92e166e6c5d8f0fd95503e44b4ecfbd762", "patch": "@@ -55,6 +55,26 @@ enum lto_mode_d {\n /* Current LTO mode.  */\n static enum lto_mode_d lto_mode = LTO_MODE_NONE;\n \n+static char *ltrans_output_file;\n+static char *flto_out;\n+static char *args_name;\n+\n+static void maybe_unlink_file (const char *);\n+\n+/* Delete tempfiles and exit function.  */\n+\n+static void\n+lto_wrapper_exit (int status)\n+{\n+  if (ltrans_output_file)\n+    maybe_unlink_file (ltrans_output_file);\n+  if (flto_out)\n+    maybe_unlink_file (flto_out);\n+  if (args_name)\n+    maybe_unlink_file (args_name);\n+  exit (status);\n+}\n+\n /* Just die. CMSGID is the error message. */\n \n static void __attribute__ ((format (printf, 1, 2)))\n@@ -68,7 +88,7 @@ fatal (const char * cmsgid, ...)\n   fprintf (stderr, \"\\n\");\n   va_end (ap);\n \n-  exit (FATAL_EXIT_CODE);\n+  lto_wrapper_exit (FATAL_EXIT_CODE);\n }\n \n \n@@ -86,7 +106,7 @@ fatal_perror (const char *cmsgid, ...)\n   fprintf (stderr, \": %s\\n\", xstrerror (e));\n   va_end (ap);\n \n-  exit (FATAL_EXIT_CODE);\n+  lto_wrapper_exit (FATAL_EXIT_CODE);\n }\n \n \n@@ -190,11 +210,13 @@ fork_execute (char **argv)\n {\n   struct pex_obj *pex;\n   char *new_argv[3];\n-  char *args_name = make_temp_file (\".args\");\n-  char *at_args = concat (\"@\", args_name, NULL);\n-  FILE *args = fopen (args_name, \"w\");\n+  char *at_args;\n+  FILE *args;\n   int status;\n \n+  args_name = make_temp_file (\".args\");\n+  at_args = concat (\"@\", args_name, NULL);\n+  args = fopen (args_name, \"w\");\n   if (args == NULL)\n     fatal (\"failed to open %s\", args_name);\n \n@@ -213,7 +235,6 @@ fork_execute (char **argv)\n   collect_wait (new_argv[0], pex);\n \n   maybe_unlink_file (args_name);\n-  free (args_name);\n   free (at_args);\n }\n \n@@ -227,8 +248,6 @@ run_gcc (unsigned argc, char *argv[])\n   unsigned new_argc = argc;\n   const char **new_argv;\n   const char **argv_ptr;\n-  char *ltrans_output_file = NULL;\n-  char *flto_out = NULL;\n   char *list_option_full = NULL;\n \n   new_argc += 8;\n@@ -320,7 +339,6 @@ run_gcc (unsigned argc, char *argv[])\n \tputc (c, stdout);\n       fclose (stream);\n       maybe_unlink_file (ltrans_output_file);\n-      free (ltrans_output_file);\n       free (list_option_full);\n     }\n   else"}, {"sha": "82b8bec7a4747076babedcee68dab8d2aa853737", "filename": "gcc/lto/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1b07c92e166e6c5d8f0fd95503e44b4ecfbd762/gcc%2Flto%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1b07c92e166e6c5d8f0fd95503e44b4ecfbd762/gcc%2Flto%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2FChangeLog?ref=b1b07c92e166e6c5d8f0fd95503e44b4ecfbd762", "patch": "@@ -1,3 +1,12 @@\n+2009-10-09  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR lto/41635\n+\tPR lto/41636\n+\t* lto.c (read_cgraph_and_symbols): Do not assert we can open\n+\ta file.\n+\t* lto-elf.c (init_shdr##BITS): Fix i18n problems.\n+\t(init_ehdr##BITS): Likewise.\n+\n 2009-10-08  Joseph Myers  <joseph@codesourcery.com>\n \n \t* lto-elf.c (init_shdr##BITS, lto_elf_begin_section_with_type,"}, {"sha": "190430b646cd4c31c01c8b2726432a21fbea5400", "filename": "gcc/lto/lto-elf.c", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1b07c92e166e6c5d8f0fd95503e44b4ecfbd762/gcc%2Flto%2Flto-elf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1b07c92e166e6c5d8f0fd95503e44b4ecfbd762/gcc%2Flto%2Flto-elf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto-elf.c?ref=b1b07c92e166e6c5d8f0fd95503e44b4ecfbd762", "patch": "@@ -235,7 +235,12 @@ init_shdr##BITS (Elf_Scn *scn, size_t sh_name, size_t sh_type)\t      \\\n \t\t\t\t\t\t\t\t      \\\n   shdr = elf##BITS##_getshdr (scn);\t\t\t\t      \\\n   if (!shdr)\t\t\t\t\t\t\t      \\\n-    fatal_error (\"elf\"#BITS\"_getshdr() failed: %s\", elf_errmsg (-1));\\\n+    {\t\t\t\t\t\t\t\t      \\\n+      if (BITS == 32)\t\t\t\t\t\t      \\\n+\tfatal_error (\"elf32_getshdr() failed: %s\", elf_errmsg (-1));  \\\n+      else\t\t\t\t\t\t\t      \\\n+\tfatal_error (\"elf64_getshdr() failed: %s\", elf_errmsg (-1));  \\\n+    }\t\t\t\t\t\t\t\t      \\\n \t\t\t\t\t\t\t\t      \\\n   shdr->sh_name = sh_name;\t\t\t\t\t      \\\n   shdr->sh_type = sh_type;\t\t\t\t\t      \\\n@@ -486,7 +491,12 @@ init_ehdr##BITS (lto_elf_file *elf_file)\t\t\t      \\\n \t\t\t\t\t\t\t\t      \\\n   ehdr = elf##BITS##_newehdr (elf_file->elf);\t\t\t      \\\n   if (!ehdr)\t\t\t\t\t\t\t      \\\n-    fatal_error (\"elf\"#BITS\"_newehdr() failed: %s\", elf_errmsg (-1));\\\n+    {\t\t\t\t\t\t\t\t      \\\n+      if (BITS == 32)\t\t\t\t\t\t      \\\n+\tfatal_error (\"elf32_newehdr() failed: %s\", elf_errmsg (-1));  \\\n+      else\t\t\t\t\t\t\t      \\\n+\tfatal_error (\"elf64_newehdr() failed: %s\", elf_errmsg (-1));  \\\n+    }\t\t\t\t\t\t\t\t      \\\n \t\t\t\t\t\t\t\t      \\\n   memcpy (ehdr->e_ident, cached_file_attrs.elf_ident,\t\t      \\\n \t  sizeof cached_file_attrs.elf_ident);\t\t\t      \\"}, {"sha": "2b674c176aca6151381e8415e7e2da62c3b1516f", "filename": "gcc/lto/lto.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1b07c92e166e6c5d8f0fd95503e44b4ecfbd762/gcc%2Flto%2Flto.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1b07c92e166e6c5d8f0fd95503e44b4ecfbd762/gcc%2Flto%2Flto.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto.c?ref=b1b07c92e166e6c5d8f0fd95503e44b4ecfbd762", "patch": "@@ -1779,7 +1779,10 @@ read_cgraph_and_symbols (unsigned nfiles, const char **fnames)\n       unsigned num_objects;\n \n       resolution = fopen (resolution_file_name, \"r\");\n-      gcc_assert (resolution != NULL);\n+      if (resolution == NULL)\n+\tfatal_error (\"could not open symbol resolution file: %s\",\n+\t\t     xstrerror (errno));\n+\n       t = fscanf (resolution, \"%u\", &num_objects);\n       gcc_assert (t == 1);\n "}]}