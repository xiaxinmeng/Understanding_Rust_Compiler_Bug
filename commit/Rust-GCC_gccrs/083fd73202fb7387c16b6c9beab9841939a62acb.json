{"sha": "083fd73202fb7387c16b6c9beab9841939a62acb", "node_id": "C_kwDOANBUbNoAKDA4M2ZkNzMyMDJmYjczODdjMTZiNmM5YmVhYjk4NDE5MzlhNjJhY2I", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-11-10T16:59:29Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-11-11T18:16:17Z"}, "message": "libstdc++: Make pmr::memory_resource::allocate implicitly create objects\n\nCalling the placement version of ::operator new \"implicitly creates\nobjects in the returned region of storage\" as per [intro.object]. This\nallows the returned memory to be used as storage for implicit-lifetime\ntypes (including arrays) without additional action by the caller. This\nis required by the proposed resolution of LWG 3147.\n\nlibstdc++-v3/ChangeLog:\n\n\t* include/std/memory_resource (memory_resource::allocate):\n\tImplicitly create objects in the returned storage.", "tree": {"sha": "7a089906b594a4f235baa11e4e7b41e4a9ed2089", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7a089906b594a4f235baa11e4e7b41e4a9ed2089"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/083fd73202fb7387c16b6c9beab9841939a62acb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/083fd73202fb7387c16b6c9beab9841939a62acb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/083fd73202fb7387c16b6c9beab9841939a62acb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/083fd73202fb7387c16b6c9beab9841939a62acb/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ef0e100f5870bbb792f378858864f915696dd232", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef0e100f5870bbb792f378858864f915696dd232", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef0e100f5870bbb792f378858864f915696dd232"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "97d37f18512b97420738988972a10b4afcfccf90", "filename": "libstdc++-v3/include/std/memory_resource", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/083fd73202fb7387c16b6c9beab9841939a62acb/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fmemory_resource", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/083fd73202fb7387c16b6c9beab9841939a62acb/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fmemory_resource", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fmemory_resource?ref=083fd73202fb7387c16b6c9beab9841939a62acb", "patch": "@@ -33,6 +33,7 @@\n \n #if __cplusplus >= 201703L\n \n+#include <new>\n #include <vector>\t\t\t// vector\n #include <cstddef>\t\t\t// size_t, max_align_t, byte\n #include <shared_mutex>\t\t\t// shared_mutex\n@@ -103,7 +104,7 @@ namespace pmr\n     void*\n     allocate(size_t __bytes, size_t __alignment = _S_max_align)\n     __attribute__((__returns_nonnull__,__alloc_size__(2),__alloc_align__(3)))\n-    { return do_allocate(__bytes, __alignment); }\n+    { return ::operator new(__bytes, do_allocate(__bytes, __alignment)); }\n \n     void\n     deallocate(void* __p, size_t __bytes, size_t __alignment = _S_max_align)"}]}