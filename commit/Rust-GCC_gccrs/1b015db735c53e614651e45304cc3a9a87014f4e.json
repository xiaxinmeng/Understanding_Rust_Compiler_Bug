{"sha": "1b015db735c53e614651e45304cc3a9a87014f4e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWIwMTVkYjczNWM1M2U2MTQ2NTFlNDUzMDRjYzNhOWE4NzAxNGY0ZQ==", "commit": {"author": {"name": "Sandra Loosemore", "email": "sandra@codesourcery.com", "date": "2012-02-16T23:22:29Z"}, "committer": {"name": "Sandra Loosemore", "email": "sandra@gcc.gnu.org", "date": "2012-02-16T23:22:29Z"}, "message": "invoke.texi: Clean up \"that\"/\"which\" confusion.\n\n2012-02-16  Sandra Loosemore  <sandra@codesourcery.com>\n\n\tgcc/\n\t* doc/invoke.texi: Clean up \"that\"/\"which\" confusion.\n\nFrom-SVN: r184320", "tree": {"sha": "c748241b59d14d523f8928e8c76227ed73ad0672", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c748241b59d14d523f8928e8c76227ed73ad0672"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1b015db735c53e614651e45304cc3a9a87014f4e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b015db735c53e614651e45304cc3a9a87014f4e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b015db735c53e614651e45304cc3a9a87014f4e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b015db735c53e614651e45304cc3a9a87014f4e/comments", "author": {"login": "SandraLoosemore", "id": 104087111, "node_id": "U_kgDOBjQ-Rw", "avatar_url": "https://avatars.githubusercontent.com/u/104087111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SandraLoosemore", "html_url": "https://github.com/SandraLoosemore", "followers_url": "https://api.github.com/users/SandraLoosemore/followers", "following_url": "https://api.github.com/users/SandraLoosemore/following{/other_user}", "gists_url": "https://api.github.com/users/SandraLoosemore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SandraLoosemore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SandraLoosemore/subscriptions", "organizations_url": "https://api.github.com/users/SandraLoosemore/orgs", "repos_url": "https://api.github.com/users/SandraLoosemore/repos", "events_url": "https://api.github.com/users/SandraLoosemore/events{/privacy}", "received_events_url": "https://api.github.com/users/SandraLoosemore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7feed46233067ae70fbfd52d3e43150b2b50c9d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7feed46233067ae70fbfd52d3e43150b2b50c9d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7feed46233067ae70fbfd52d3e43150b2b50c9d4"}], "stats": {"total": 307, "additions": 155, "deletions": 152}, "files": [{"sha": "6127cec26bf407ada8d43c8d722d4ce654d5408c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b015db735c53e614651e45304cc3a9a87014f4e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b015db735c53e614651e45304cc3a9a87014f4e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1b015db735c53e614651e45304cc3a9a87014f4e", "patch": "@@ -1,3 +1,7 @@\n+2012-02-16  Sandra Loosemore  <sandra@codesourcery.com>\n+\n+\t* doc/invoke.texi: Clean up \"that\"/\"which\" confusion.\n+\n 2012-02-17  Steven Bosscher  <steven@gcc.gnu.org>\n \n \t* system.h: Poison SMALL_REGISTER_CLASSES"}, {"sha": "0889ca88d3cc8e0f4de8b55dd5a9018489210615", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 151, "deletions": 152, "changes": 303, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b015db735c53e614651e45304cc3a9a87014f4e/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b015db735c53e614651e45304cc3a9a87014f4e/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=1b015db735c53e614651e45304cc3a9a87014f4e", "patch": "@@ -1029,20 +1029,20 @@ compilation is done:\n \n @table @gcctabopt\n @item @var{file}.c\n-C source code which must be preprocessed.\n+C source code that must be preprocessed.\n \n @item @var{file}.i\n-C source code which should not be preprocessed.\n+C source code that should not be preprocessed.\n \n @item @var{file}.ii\n-C++ source code which should not be preprocessed.\n+C++ source code that should not be preprocessed.\n \n @item @var{file}.m\n Objective-C source code.  Note that you must link with the @file{libobjc}\n library to make an Objective-C program work.\n \n @item @var{file}.mi\n-Objective-C source code which should not be preprocessed.\n+Objective-C source code that should not be preprocessed.\n \n @item @var{file}.mm\n @itemx @var{file}.M\n@@ -1051,7 +1051,7 @@ library to make an Objective-C++ program work.  Note that @samp{.M} refers\n to a literal capital M@.\n \n @item @var{file}.mii\n-Objective-C++ source code which should not be preprocessed.\n+Objective-C++ source code that should not be preprocessed.\n \n @item @var{file}.h\n C, C++, Objective-C or Objective-C++ header file to be turned into a\n@@ -1065,16 +1065,16 @@ Ada spec (via the @option{-fdump-ada-spec} switch).\n @itemx @var{file}.CPP\n @itemx @var{file}.c++\n @itemx @var{file}.C\n-C++ source code which must be preprocessed.  Note that in @samp{.cxx},\n+C++ source code that must be preprocessed.  Note that in @samp{.cxx},\n the last two letters must both be literally @samp{x}.  Likewise,\n @samp{.C} refers to a literal capital C@.\n \n @item @var{file}.mm\n @itemx @var{file}.M\n-Objective-C++ source code which must be preprocessed.\n+Objective-C++ source code that must be preprocessed.\n \n @item @var{file}.mii\n-Objective-C++ source code which should not be preprocessed.\n+Objective-C++ source code that should not be preprocessed.\n \n @item @var{file}.hh\n @itemx @var{file}.H\n@@ -1089,27 +1089,27 @@ C++ header file to be turned into a precompiled header or Ada spec.\n @item @var{file}.f\n @itemx @var{file}.for\n @itemx @var{file}.ftn\n-Fixed form Fortran source code which should not be preprocessed.\n+Fixed form Fortran source code that should not be preprocessed.\n \n @item @var{file}.F\n @itemx @var{file}.FOR\n @itemx @var{file}.fpp\n @itemx @var{file}.FPP\n @itemx @var{file}.FTN\n-Fixed form Fortran source code which must be preprocessed (with the traditional\n+Fixed form Fortran source code that must be preprocessed (with the traditional\n preprocessor).\n \n @item @var{file}.f90\n @itemx @var{file}.f95\n @itemx @var{file}.f03\n @itemx @var{file}.f08\n-Free form Fortran source code which should not be preprocessed.\n+Free form Fortran source code that should not be preprocessed.\n \n @item @var{file}.F90\n @itemx @var{file}.F95\n @itemx @var{file}.F03\n @itemx @var{file}.F08\n-Free form Fortran source code which must be preprocessed (with the\n+Free form Fortran source code that must be preprocessed (with the\n traditional preprocessor).\n \n @item @var{file}.go\n@@ -1122,7 +1122,7 @@ Go source code.\n @c @var{file}.jar\n \n @item @var{file}.ads\n-Ada source code file which contains a library unit declaration (a\n+Ada source code file that contains a library unit declaration (a\n declaration of a package, subprogram, or generic, or a generic\n instantiation), or a library unit renaming declaration (a package,\n generic, or subprogram renaming declaration).  Such files are also\n@@ -1144,7 +1144,7 @@ Assembler code.\n \n @item @var{file}.S\n @itemx @var{file}.sx\n-Assembler code which must be preprocessed.\n+Assembler code that must be preprocessed.\n \n @item @var{other}\n An object file to be fed straight into linking.\n@@ -1223,7 +1223,7 @@ Stop after the preprocessing stage; do not run the compiler proper.  The\n output is in the form of preprocessed source code, which is sent to the\n standard output.\n \n-Input files which don't require preprocessing are ignored.\n+Input files that don't require preprocessing are ignored.\n \n @cindex output file option\n @item -o @var{file}\n@@ -1265,7 +1265,7 @@ understood by @command{gcc}.  If the @option{-v} option is also specified\n then @option{--help} will also be passed on to the various processes\n invoked by @command{gcc}, so that they can display the command-line options\n they accept.  If the @option{-Wextra} option has also been specified\n-(prior to the @option{--help} option), then command-line options which\n+(prior to the @option{--help} option), then command-line options that\n have no documentation associated with them will also be displayed.\n \n @item --target-help\n@@ -1311,15 +1311,15 @@ These are the supported qualifiers:\n \n @table @asis\n @item @samp{undocumented}\n-Display only those options which are undocumented.\n+Display only those options that are undocumented.\n \n @item @samp{joined}\n-Display options which take an argument that appears after an equal\n+Display options taking an argument that appears after an equal\n sign in the same continuous piece of text, such as:\n @samp{--help=target}.\n \n @item @samp{separate}\n-Display options which take an argument that appears as a separate word\n+Display options taking an argument that appears as a separate word\n following the original option, such as: @samp{-o output-file}.\n @end table\n \n@@ -1333,7 +1333,7 @@ switches supported by the compiler the following can be used:\n The sense of a qualifier can be inverted by prefixing it with the\n @samp{^} character, so for example to display all binary warning\n options (i.e., ones that are either on or off and that do not take an\n-argument), which have a description the following can be used:\n+argument) that have a description, use:\n \n @smallexample\n --help=warnings,^joined,^undocumented\n@@ -1683,7 +1683,7 @@ do not have an ISO standard meaning.\n \n GCC normally generates special code to handle certain built-in functions\n more efficiently; for instance, calls to @code{alloca} may become single\n-instructions that adjust the stack directly, and calls to @code{memcpy}\n+instructions which adjust the stack directly, and calls to @code{memcpy}\n may become inline copy loops.  The resulting code is often both smaller\n and faster, but since the function calls no longer appear as such, you\n cannot set a breakpoint on those calls, nor can you change the behavior\n@@ -1781,7 +1781,7 @@ fields within structs/unions}, for details.\n Accept some non-standard constructs used in Plan 9 code.\n \n This enables @option{-fms-extensions}, permits passing pointers to\n-structures with anonymous fields to functions which expect pointers to\n+structures with anonymous fields to functions that expect pointers to\n elements of the type of the field, and permits referring to anonymous\n fields declared using a typedef.  @xref{Unnamed Fields,,Unnamed\n struct/union fields within structs/unions}, for details.  This is only\n@@ -1984,7 +1984,7 @@ Inject friend functions into the enclosing namespace, so that they are\n visible outside the scope of the class in which they are declared.\n Friend functions were documented to work this way in the old Annotated\n C++ Reference Manual, and versions of G++ before 4.1 always worked\n-that way.  However, in ISO C++ a friend function which is not declared\n+that way.  However, in ISO C++ a friend function that is not declared\n in an enclosing scope can only be found using argument dependent\n lookup.  This option causes friends to be injected as they were in\n earlier releases.\n@@ -1995,7 +1995,7 @@ release of G++.\n @item -fno-elide-constructors\n @opindex fno-elide-constructors\n The C++ standard allows an implementation to omit creating a temporary\n-which is only used to initialize another object of the same type.\n+that is only used to initialize another object of the same type.\n Specifying this option disables that optimization, and forces G++ to\n call the copy constructor in all cases.\n \n@@ -2033,7 +2033,7 @@ word as an identifier.  You can use the keyword @code{__typeof__} instead.\n \n @item -fno-implicit-templates\n @opindex fno-implicit-templates\n-Never emit code for non-inline templates which are instantiated\n+Never emit code for non-inline templates that are instantiated\n implicitly (i.e.@: by use); only emit code for explicit instantiations.\n @xref{Template Instantiation}, for more information.\n \n@@ -2098,7 +2098,7 @@ template followed by the template arguments and any typedefs or\n typenames in the signature (e.g. @code{void f(T) [with T = int]}\n rather than @code{void f(int)}) so that it's clear which template is\n involved.  When an error message refers to a specialization of a class\n-template, the compiler will omit any template arguments which match\n+template, the compiler will omit any template arguments that match\n the default template arguments for that template.  If either of these\n behaviors make it harder to understand the error message rather than\n easier, using @option{-fno-pretty-templates} will disable them.\n@@ -2129,7 +2129,7 @@ This information is generally only useful to the G++ development team.\n @opindex fstrict-enums\n Allow the compiler to optimize using the assumption that a value of\n enumeration type can only be one of the values of the enumeration (as\n-defined in the C++ standard; basically, a value which can be\n+defined in the C++ standard; basically, a value that can be\n represented in the minimum number of bits needed to represent all the\n enumerators).  This assumption may not be valid if the program uses a\n cast to convert an arbitrary integer value to the enumeration type.\n@@ -2209,13 +2209,13 @@ Types, but not their members, are not hidden by default.\n \n @item\n The One Definition Rule is relaxed for types without explicit\n-visibility specifications which are defined in more than one different\n+visibility specifications that are defined in more than one different\n shared object: those declarations are permitted if they would have\n been permitted when this option was not used.\n @end enumerate\n \n In new code it is better to use @option{-fvisibility=hidden} and\n-export those classes which are intended to be externally visible.\n+export those classes that are intended to be externally visible.\n Unfortunately it is possible for code to rely, perhaps accidentally,\n on the Visual Studio behavior.\n \n@@ -2406,7 +2406,7 @@ public static member functions.\n @item -Wdelete-non-virtual-dtor @r{(C++ and Objective-C++ only)}\n @opindex Wdelete-non-virtual-dtor\n @opindex Wno-delete-non-virtual-dtor\n-Warn when @samp{delete} is used to destroy an instance of a class which\n+Warn when @samp{delete} is used to destroy an instance of a class that\n has virtual functions and non-virtual destructor. It is unsafe to delete\n an instance of a derived class through a pointer to a base class if the\n base class does not have a virtual destructor.  This warning is enabled\n@@ -2534,7 +2534,7 @@ function.  Because this non-conforming behavior is no longer the default\n behavior for G++, @option{-Wnon-template-friend} allows the compiler to\n check existing code for potential trouble spots and is on by default.\n This new compiler behavior can be turned off with\n-@option{-Wno-non-template-friend} which keeps the conformant compiler code\n+@option{-Wno-non-template-friend}, which keeps the conformant compiler code\n but disables the helpful warning.\n \n @item -Wold-style-cast @r{(C++ and Objective-C++ only)}\n@@ -2682,11 +2682,11 @@ machines, and Version 2 on 64-bit target machines.\n @opindex fobjc-call-cxx-cdtors\n For each Objective-C class, check if any of its instance variables is a\n C++ object with a non-trivial default constructor.  If so, synthesize a\n-special @code{- (id) .cxx_construct} instance method that will run\n+special @code{- (id) .cxx_construct} instance method which will run\n non-trivial default constructors on any such instance variables, in order,\n and then return @code{self}.  Similarly, check if any instance variable\n is a C++ object with a non-trivial destructor, and if so, synthesize a\n-special @code{- (void) .cxx_destruct} method that will run\n+special @code{- (void) .cxx_destruct} method which will run\n all such default destructors, in reverse order.\n \n The @code{- (id) .cxx_construct} and @code{- (void) .cxx_destruct}\n@@ -2812,7 +2812,7 @@ Warn if multiple methods with differing argument and/or return types are\n found for a given selector when attempting to send a message using this\n selector to a receiver of type @code{id} or @code{Class}.  When this flag\n is off (which is the default behavior), the compiler will omit such warnings\n-if any differences found are confined to types which share the same size\n+if any differences found are confined to types that share the same size\n and alignment.\n \n @item -Wundeclared-selector @r{(Objective-C and Objective-C++ only)}\n@@ -2877,7 +2877,7 @@ a message which is too long to fit on a single line.\n @item -fno-diagnostics-show-option\n @opindex fno-diagnostics-show-option\n @opindex fdiagnostics-show-option\n-By default, each diagnostic emitted includes text which indicates the\n+By default, each diagnostic emitted includes text indicating the\n command-line option that directly controls the diagnostic (if such an\n option is known to the diagnostic machinery).  Specifying the\n @option{-fno-diagnostics-show-option} flag suppresses that behavior.\n@@ -2891,8 +2891,8 @@ option is known to the diagnostic machinery).  Specifying the\n @cindex messages, warning\n @cindex suppressing warnings\n \n-Warnings are diagnostic messages that report constructions which\n-are not inherently erroneous but which are risky or suggest there\n+Warnings are diagnostic messages that report constructions that\n+are not inherently erroneous but that are risky or suggest there\n may have been an error.\n \n The following language-independent options do not enable specific\n@@ -2934,7 +2934,7 @@ warnings, for example @option{-Wno-error=switch} makes\n is in effect.\n \n The warning message for each controllable warning includes the\n-option which controls the warning.  That option can then be used with\n+option that controls the warning.  That option can then be used with\n @option{-Werror=} and @option{-Wno-error=} as described above.\n (Printing of the option in the warning message can be disabled using the\n @option{-fno-diagnostics-show-option} flag.)\n@@ -3107,10 +3107,10 @@ conditional expression.\n (C++ only) Ambiguous virtual bases.\n \n @item\n-(C++ only) Subscripting an array which has been declared @samp{register}.\n+(C++ only) Subscripting an array that has been declared @samp{register}.\n \n @item\n-(C++ only) Taking the address of a variable which has been declared\n+(C++ only) Taking the address of a variable that has been declared\n @samp{register}.\n \n @item\n@@ -3219,7 +3219,7 @@ aspects of format checking, the options @option{-Wformat-y2k},\n @opindex Wformat-y2k\n @opindex Wno-format-y2k\n If @option{-Wformat} is specified, also warn about @code{strftime}\n-formats which may yield only a two-digit year.\n+formats that may yield only a two-digit year.\n \n @item -Wno-format-contains-nul\n @opindex Wno-format-contains-nul\n@@ -3287,7 +3287,7 @@ can be disabled with the @option{-Wno-nonnull} option.\n @item -Winit-self @r{(C, C++, Objective-C and Objective-C++ only)}\n @opindex Winit-self\n @opindex Wno-init-self\n-Warn about uninitialized variables which are initialized with themselves.\n+Warn about uninitialized variables that are initialized with themselves.\n Note this option can only be used with the @option{-Wuninitialized} option.\n \n For example, GCC will warn about @code{i} being uninitialized in the\n@@ -3626,12 +3626,12 @@ or if a variable may be clobbered by a @code{setjmp} call. In C++,\n warn if a non-static reference or non-static @samp{const} member\n appears in a class without constructors.\n \n-If you want to warn about code which uses the uninitialized value of the\n+If you want to warn about code that uses the uninitialized value of the\n variable in its own initializer, use the @option{-Winit-self} option.\n \n These warnings occur for individual uninitialized or clobbered\n elements of structure, union or array variables as well as for\n-variables which are uninitialized or clobbered as a whole.  They do\n+variables that are uninitialized or clobbered as a whole.  They do\n not occur for variables or elements declared @code{volatile}.  Because\n these warnings depend on optimization, the exact variables or elements\n for which there are warnings will depend on the precise optimization\n@@ -3686,7 +3686,7 @@ The compiler sees only the calls to @code{setjmp}.  It cannot know\n where @code{longjmp} will be called; in fact, a signal handler could\n call it at any point in the code.  As a result, you may get a warning\n even when there is in fact no problem because @code{longjmp} cannot\n-in fact be called at the place which would cause a problem.\n+in fact be called at the place that would cause a problem.\n \n Some spurious warnings can be avoided if you declare all the functions\n you use that never return as @code{noreturn}.  @xref{Function\n@@ -3700,7 +3700,7 @@ This warning is enabled by @option{-Wall} or @option{-Wextra}.\n @cindex warning for unknown pragmas\n @cindex unknown pragmas, warning\n @cindex pragmas, warning of unknown\n-Warn when a #pragma directive is encountered which is not understood by\n+Warn when a @code{#pragma} directive is encountered that is not understood by \n GCC@.  If this command-line option is used, warnings will even be issued\n for unknown pragmas in system header files.  This is not the case if\n the warnings were only enabled by the @option{-Wall} command-line option.\n@@ -3716,7 +3716,7 @@ invalid syntax, or conflicts between pragmas.  See also\n @opindex Wstrict-aliasing\n @opindex Wno-strict-aliasing\n This option is only active when @option{-fstrict-aliasing} is active.\n-It warns about code which might break the strict aliasing rules that the\n+It warns about code that might break the strict aliasing rules that the\n compiler is using for optimization.  The warning does not catch all\n cases, but does attempt to catch the more common pitfalls.  It is\n included in @option{-Wall}.\n@@ -3726,7 +3726,7 @@ It is equivalent to @option{-Wstrict-aliasing=3}\n @opindex Wstrict-aliasing=n\n @opindex Wno-strict-aliasing=n\n This option is only active when @option{-fstrict-aliasing} is active.\n-It warns about code which might break the strict aliasing rules that the\n+It warns about code that might break the strict aliasing rules that the\n compiler is using for optimization.\n Higher levels correspond to higher accuracy (fewer false positives).\n Higher levels also correspond to more effort, similar to the way -O works.\n@@ -3767,10 +3767,10 @@ warn about all cases where the code might overflow: it only warns\n about cases where the compiler implements some optimization.  Thus\n this warning depends on the optimization level.\n \n-An optimization which assumes that signed overflow does not occur is\n+An optimization that assumes that signed overflow does not occur is\n perfectly safe if the values of the variables involved are such that\n overflow never does, in fact, occur.  Therefore this warning can\n-easily give a false positive: a warning about code which is not\n+easily give a false positive: a warning about code that is not\n actually a problem.  To help focus on important issues, several\n warning levels are defined.  No warnings are issued for the use of\n undefined signed overflow when estimating how many iterations a loop\n@@ -3779,7 +3779,7 @@ executed at all.\n \n @table @gcctabopt\n @item -Wstrict-overflow=1\n-Warn about cases which are both questionable and easy to avoid.  For\n+Warn about cases that are both questionable and easy to avoid.  For\n example: @code{x + 1 > x}; with @option{-fstrict-overflow}, the\n compiler will simplify this to @code{1}.  This level of\n @option{-Wstrict-overflow} is enabled by @option{-Wall}; higher levels\n@@ -3827,7 +3827,7 @@ attributes currently supported are listed below.\n @opindex Wsuggest-attribute=noreturn\n @opindex Wno-suggest-attribute=noreturn\n \n-Warn about functions which might be candidates for attributes\n+Warn about functions that might be candidates for attributes\n @code{pure}, @code{const} or @code{noreturn}.  The compiler only warns for\n functions visible in other compilation units or (in the case of @code{pure} and\n @code{const}) if it cannot prove that the function returns normally. A function\n@@ -3898,7 +3898,7 @@ probably mistaken.\n @opindex Wno-traditional\n Warn about certain constructs that behave differently in traditional and\n ISO C@.  Also warn about ISO C constructs that have no traditional C\n-equivalent, and/or problematic constructs which should be avoided.\n+equivalent, and/or problematic constructs that should be avoided.\n \n @itemize @bullet\n @item\n@@ -4036,7 +4036,7 @@ whether or not to issue a warning.\n @item -Wno-free-nonheap-object\n @opindex Wno-free-nonheap-object\n @opindex Wfree-nonheap-object\n-Do not warn when attempting to free an object which was not allocated\n+Do not warn when attempting to free an object that was not allocated\n on the heap.\n \n @item -Wstack-usage=@var{len}\n@@ -4128,7 +4128,7 @@ Warn whenever a pointer is cast so as to remove a type qualifier from\n the target type.  For example, warn if a @code{const char *} is cast\n to an ordinary @code{char *}.\n \n-Also warn when making a cast which introduces a type qualifier in an\n+Also warn when making a cast that introduces a type qualifier in an\n unsafe way.  For example, casting @code{char **} to @code{const char **}\n is unsafe, as in this example:\n \n@@ -4222,7 +4222,7 @@ this warning is enabled by default.  In C this warning is enabled by\n Warn if a @code{goto} statement or a @code{switch} statement jumps\n forward across the initialization of a variable, or jumps backward to a\n label after the variable has been initialized.  This only warns about\n-variables which are initialized when they are declared.  This warning is\n+variables that are initialized when they are declared.  This warning is\n only supported for C and Objective C; in C++ this sort of branch is an\n error in any case.\n \n@@ -4297,7 +4297,7 @@ warnings for redefinition of @code{__TIMESTAMP__}, @code{__TIME__},\n @opindex Wno-strict-prototypes\n Warn if a function is declared or defined without specifying the\n argument types.  (An old-style function definition is permitted without\n-a warning if preceded by a declaration which specifies the argument\n+a warning if preceded by a declaration that specifies the argument\n types.)\n \n @item -Wold-style-declaration @r{(C and Objective-C only)}\n@@ -4331,8 +4331,8 @@ This warning is also enabled by @option{-Wextra}.\n @opindex Wno-missing-prototypes\n Warn if a global function is defined without a previous prototype\n declaration.  This warning is issued even if the definition itself\n-provides a prototype.  The aim is to detect global functions that fail\n-to be declared in header files.\n+provides a prototype.  The aim is to detect global functions that \n+are not declared in header files.\n \n @item -Wmissing-declarations\n @opindex Wmissing-declarations\n@@ -4374,7 +4374,7 @@ warnings without this one, use @samp{-Wextra -Wno-missing-field-initializers}.\n @opindex Wno-missing-format-attribute\n @opindex Wformat\n @opindex Wno-format\n-Warn about function pointers which might be candidates for @code{format}\n+Warn about function pointers that might be candidates for @code{format}\n attributes.  Note these are only possible candidates, not absolute ones.\n GCC will guess that function pointers with @code{format} attributes that\n are used in assignment, initialization, parameter passing or return\n@@ -4384,7 +4384,7 @@ initialization, the type of the parameter variable, or the return type\n of the containing function respectively should also have a @code{format}\n attribute to avoid the warning.\n \n-GCC will also warn about function definitions which might be\n+GCC will also warn about function definitions that might be\n candidates for @code{format} attributes.  Again, these are only\n possible candidates.  GCC will guess that @code{format} attributes\n might be appropriate for any function that calls a function like\n@@ -4410,16 +4410,16 @@ outside the basic ASCII character set are used, you can have two\n different character sequences that look the same.  To avoid confusion,\n the ISO 10646 standard sets out some @dfn{normalization rules} which\n when applied ensure that two sequences that look the same are turned into\n-the same sequence.  GCC can warn you if you are using identifiers which\n+the same sequence.  GCC can warn you if you are using identifiers that\n have not been normalized; this option controls that warning.\n \n-There are four levels of warning that GCC supports.  The default is\n-@option{-Wnormalized=nfc}, which warns about any identifier which is\n+There are four levels of warning supported by GCC.  The default is\n+@option{-Wnormalized=nfc}, which warns about any identifier that is\n not in the ISO 10646 ``C'' normalized form, @dfn{NFC}.  NFC is the\n recommended form for most uses.\n \n-Unfortunately, there are some characters which ISO C and ISO C++ allow\n-in identifiers that when turned into NFC aren't allowable as\n+Unfortunately, there are some characters allowed in identifiers by\n+ISO C and ISO C++ that, when turned into NFC, are not allowed in \n identifiers.  That is, there's no way to use these symbols in portable\n ISO C or C++ and have all your identifiers in NFC@.\n @option{-Wnormalized=id} suppresses the warning for these characters.\n@@ -4434,7 +4434,7 @@ otherwise you can easily create bugs that are literally impossible to see.\n Some characters in ISO 10646 have distinct meanings but look identical\n in some fonts or display methodologies, especially once formatting has\n been applied.  For instance @code{\\u207F}, ``SUPERSCRIPT LATIN SMALL\n-LETTER N'', will display just like a regular @code{n} which has been\n+LETTER N'', will display just like a regular @code{n} that has been\n placed in a superscript.  ISO 10646 defines the @dfn{NFKC}\n normalization scheme to convert all these into a standard form as\n well, and GCC will warn if your code is not in NFKC if you use\n@@ -4608,11 +4608,11 @@ To inhibit the warning messages, use @option{-Wno-variadic-macros}.\n @opindex Wno-vector-operation-performance\n Warn if vector operation is not implemented via SIMD capabilities of the\n architecture.  Mainly useful for the performance tuning.\n-Vector operation can be implemented @code{piecewise} which means that the\n+Vector operation can be implemented @code{piecewise}, which means that the\n scalar operation is performed on every vector element; \n-@code{in parallel} which means that the vector operation is implemented\n+@code{in parallel}, which means that the vector operation is implemented\n using scalars of wider type, which normally is more performance efficient;\n-and @code{as a single scalar} which means that vector fits into a\n+and @code{as a single scalar}, which means that vector fits into a\n scalar type.\n \n @item -Wvla\n@@ -4662,9 +4662,9 @@ Suppress warnings about constructs that cannot be instrumented by\n @item -Woverlength-strings\n @opindex Woverlength-strings\n @opindex Wno-overlength-strings\n-Warn about string constants which are longer than the ``minimum\n+Warn about string constants that are longer than the ``minimum\n maximum'' length specified in the C standard.  Modern compilers\n-generally allow string constants which are much longer than the\n+generally allow string constants that are much longer than the\n standard's minimum limit, but very portable programs should avoid\n using longer strings.\n \n@@ -4735,7 +4735,7 @@ possible.\n Produce debugging information in stabs format (if that is supported),\n without GDB extensions.  This is the format used by DBX on most BSD\n systems.  On MIPS, Alpha and System V Release 4 systems this option\n-produces stabs debugging output which is not understood by DBX or SDB@.\n+produces stabs debugging output that is not understood by DBX or SDB@.\n On System V Release 4 systems this option requires the GNU assembler.\n \n @item -feliminate-unused-debug-symbols\n@@ -4800,8 +4800,8 @@ for maximum benefit.\n \n @item -grecord-gcc-switches\n @opindex grecord-gcc-switches\n-This switch causes the command-line options, that were used to invoke the\n-compiler and may affect code generation, to be appended to the\n+This switch causes the command-line options used to invoke the\n+compiler that may affect code generation to be appended to the\n DW_AT_producer attribute in DWARF debugging information.  The options\n are concatenated with spaces separating them from each other and from\n the compiler version.  See also @option{-frecord-gcc-switches} for another\n@@ -4997,7 +4997,7 @@ This option works only with DWARF 2.\n @opindex fmerge-debug-strings\n @opindex fno-merge-debug-strings\n Direct the linker to not merge together strings in the debugging\n-information which are identical in different object files.  Merging is\n+information that are identical in different object files.  Merging is\n not supported by all assemblers or linkers.  Merging decreases the size\n of the debug information in the output file at the cost of increasing\n link processing time.  Merging is enabled by default.\n@@ -5651,8 +5651,8 @@ language tree to a file.  The file name is generated by appending a\n switch specific suffix to the source file name, and the file is\n created in the same directory as the output file.  If the\n @samp{-@var{options}} form is used, @var{options} is a list of\n-@samp{-} separated options that control the details of the dump.  Not\n-all options are applicable to all dumps, those which are not\n+@samp{-} separated options which control the details of the dump.  Not\n+all options are applicable to all dumps; those that are not\n meaningful will be ignored.  The following options are available\n \n @table @samp\n@@ -6288,7 +6288,7 @@ the member function name.\n @item -fno-defer-pop\n @opindex fno-defer-pop\n Always pop the arguments to each function call as soon as that function\n-returns.  For machines which must pop arguments after a function call,\n+returns.  For machines that must pop arguments after a function call,\n the compiler normally lets arguments accumulate on the stack for several\n function calls and pops them all at once.\n \n@@ -6595,7 +6595,7 @@ Enabled at levels @option{-O2}, @option{-O3}, @option{-Os}.\n @item -fcse-skip-blocks\n @opindex fcse-skip-blocks\n This is similar to @option{-fcse-follow-jumps}, but causes CSE to\n-follow jumps which conditionally skip over blocks.  When CSE\n+follow jumps that conditionally skip over blocks.  When CSE\n encounters a simple @code{if} statement with no else clause,\n @option{-fcse-skip-blocks} causes CSE to follow the jump around the\n body of the @code{if}.\n@@ -6624,7 +6624,7 @@ Enabled at levels @option{-O2}, @option{-O3}, @option{-Os}.\n @item -fgcse-lm\n @opindex fgcse-lm\n When @option{-fgcse-lm} is enabled, global common subexpression elimination will\n-attempt to move loads which are only killed by stores into themselves.  This\n+attempt to move loads that are only killed by stores into themselves.  This\n allows a loop containing a load/store sequence to be changed to a load outside\n the loop, and a copy/store within the loop.\n \n@@ -6715,7 +6715,7 @@ it cannot be null.\n \n Note however that in some environments this assumption is not true.\n Use @option{-fno-delete-null-pointer-checks} to disable this optimization\n-for programs which depend on that behavior.\n+for programs that depend on that behavior.\n \n Some targets, especially embedded ones, disable this option at all levels.\n Otherwise it is enabled at all levels: @option{-O0}, @option{-O1},\n@@ -6801,7 +6801,7 @@ bigger.\n @item -fno-ira-share-spill-slots\n @opindex fno-ira-share-spill-slots\n Switch off sharing stack slots allocated for pseudo-registers.  Each\n-pseudo-register which did not get a hard register will get a separate\n+pseudo-register that did not get a hard register will get a separate\n stack slot and as a result function stack frame will be bigger.\n \n @item -fira-verbose=@var{n}\n@@ -7096,7 +7096,7 @@ Perform matrix flattening and transposing.\n Matrix flattening tries to replace an @math{m}-dimensional matrix\n with its equivalent @math{n}-dimensional matrix, where @math{n < m}.\n This reduces the level of indirection needed for accessing the elements\n-of the matrix. The second optimization is matrix transposing that\n+of the matrix. The second optimization is matrix transposing, which\n attempts to change the order of the matrix's dimensions in order to\n improve cache locality.\n Both optimizations need the @option{-fwhole-program} flag.\n@@ -7156,7 +7156,7 @@ enabled by default at @option{-O} and higher.\n @item -ftree-dse\n @opindex ftree-dse\n Perform dead store elimination (DSE) on trees.  A dead store is a store into\n-a memory location which will later be overwritten by another store without\n+a memory location that is later overwritten by another store without\n any intervening loads.  In this case the earlier store can be deleted.  This\n flag is enabled by default at @option{-O} and higher.\n \n@@ -7262,7 +7262,7 @@ ENDDO\n @end smallexample\n which can be beneficial when @code{M} is larger than the caches,\n because the innermost loop will iterate over a smaller amount of data\n-that can be kept in the caches.  This optimization applies to all the\n+which can be kept in the caches.  This optimization applies to all the\n languages supported by GCC and is not limited to Fortran.  To use this\n code transformation, GCC has to be configured with @option{--with-ppl}\n and @option{--with-cloog} to enable the Graphite loop transformation\n@@ -7373,7 +7373,7 @@ store motion.\n \n @item -ftree-loop-ivcanon\n @opindex ftree-loop-ivcanon\n-Create a canonical counter for number of iterations in the loop for that\n+Create a canonical counter for number of iterations in loops for which\n determining number of iterations requires complicated analysis.  Later\n optimizations then may determine the number easily.  Useful especially\n in connection with unrolling.\n@@ -7748,11 +7748,11 @@ Do not reorder top-level functions, variables, and @code{asm}\n statements.  Output them in the same order that they appear in the\n input file.  When this option is used, unreferenced static variables\n will not be removed.  This option is intended to support existing code\n-which relies on a particular ordering.  For new code, it is better to\n+that relies on a particular ordering.  For new code, it is better to\n use attributes.\n \n-Enabled at level @option{-O0}.  When disabled explicitly, it also imply\n-@option{-fno-section-anchors} that is otherwise enabled at @option{-O0} on some\n+Enabled at level @option{-O0}.  When disabled explicitly, it also implies\n+@option{-fno-section-anchors}, which is otherwise enabled at @option{-O0} on some\n targets.\n \n @item -fweb\n@@ -7862,7 +7862,7 @@ GIMPLE bytecodes and final object code.  GCC automatically selects\n which files to optimize in LTO mode and which files to link without\n further processing.\n \n-There are some code generation flags that GCC preserves when\n+There are some code generation flags preserved by GCC when\n generating bytecodes, as they need to be used during the final link\n stage.  Currently, the following options are saved into the GIMPLE\n bytecode files: @option{-fPIC}, @option{-fcommon} and all the\n@@ -8139,7 +8139,7 @@ This option causes the preprocessor macro @code{__FAST_MATH__} to be defined.\n \n This option is not turned on by any @option{-O} option besides\n @option{-Ofast} since it can result in incorrect output for programs\n-which depend on an exact implementation of IEEE or ISO rules/specifications\n+that depend on an exact implementation of IEEE or ISO rules/specifications\n for math functions. It may, however, yield faster code for programs\n that do not require the guarantees of these specifications.\n \n@@ -8151,7 +8151,7 @@ IEEE exceptions for math error handling may want to use this flag\n for speed while maintaining IEEE arithmetic compatibility.\n \n This option is not turned on by any @option{-O} option since\n-it can result in incorrect output for programs which depend on\n+it can result in incorrect output for programs that depend on\n an exact implementation of IEEE or ISO rules/specifications for\n math functions. It may, however, yield faster code for programs\n that do not require the guarantees of these specifications.\n@@ -8172,7 +8172,7 @@ or startup files that change the default FPU control word or other\n similar optimizations.\n \n This option is not turned on by any @option{-O} option since\n-it can result in incorrect output for programs which depend on\n+it can result in incorrect output for programs that depend on\n an exact implementation of IEEE or ISO rules/specifications for\n math functions. It may, however, yield faster code for programs\n that do not require the guarantees of these specifications.\n@@ -8188,7 +8188,7 @@ Allow re-association of operands in series of floating-point operations.\n This violates the ISO C and C++ language standard by possibly changing\n computation result.  NOTE: re-ordering may change the sign of zero as\n well as ignore NaNs and inhibit or create underflow or overflow (and\n-thus cannot be used on a code which relies on rounding behavior like\n+thus cannot be used on code that relies on rounding behavior like\n @code{(x + 2**52) - 2**52}.  May also reorder floating-point comparisons\n and thus may not be used when ordered comparisons are required.\n This option requires that both @option{-fno-signed-zeros} and\n@@ -8204,7 +8204,7 @@ The default is @option{-fno-associative-math}.\n \n Allow the reciprocal of a value to be used instead of dividing by\n the value if this enables optimizations.  For example @code{x / y}\n-can be replaced with @code{x * (1/y)} which is useful if @code{(1/y)}\n+can be replaced with @code{x * (1/y)}, which is useful if @code{(1/y)}\n is subject to common subexpression elimination.  Note that this loses\n precision and increases the number of flops operating on the value.\n \n@@ -8216,7 +8216,7 @@ Allow optimizations for floating-point arithmetic that assume\n that arguments and results are not NaNs or +-Infs.\n \n This option is not turned on by any @option{-O} option since\n-it can result in incorrect output for programs which depend on\n+it can result in incorrect output for programs that depend on\n an exact implementation of IEEE or ISO rules/specifications for\n math functions. It may, however, yield faster code for programs\n that do not require the guarantees of these specifications.\n@@ -8242,7 +8242,7 @@ that @option{-fno-signaling-nans} be in effect.  Setting this option may\n allow faster code if one relies on ``non-stop'' IEEE arithmetic, for example.\n \n This option should never be turned on by any @option{-O} option since\n-it can result in incorrect output for programs which depend on\n+it can result in incorrect output for programs that depend on\n an exact implementation of IEEE or ISO rules/specifications for\n math functions.\n \n@@ -8396,7 +8396,7 @@ the loop is entered.  This usually makes programs run more slowly.\n \n @item -fpeel-loops\n @opindex fpeel-loops\n-Peels the loops for that there is enough information that they do not\n+Peels loops for which there is enough information that they do not\n roll much (from profile feedback).  It also turns on complete loop peeling\n (i.e.@: complete removal of loops with small constant number of iterations).\n \n@@ -8498,7 +8498,7 @@ Not all targets support this option.\n @opindex param\n In some places, GCC uses various constants to control the amount of\n optimization that is done.  For example, GCC will not inline functions\n-that contain more that a certain number of instructions.  You can\n+that contain more than a certain number of instructions.  You can\n control some of these constants on the command line using the\n @option{--param} option.\n \n@@ -8522,7 +8522,7 @@ more aggressive optimization, making the compilation time increase with\n probably small improvement in executable size.\n \n @item min-crossjump-insns\n-The minimum number of instructions which must be matched at the end\n+The minimum number of instructions that must be matched at the end\n of two blocks before crossjumping will be performed on them.  This\n value is ignored in the case where all instructions in the block being\n crossjumped from are matched.  The default value is 5.\n@@ -8695,7 +8695,7 @@ to allow vectorization.  The default value is 0.\n Scaling factor in calculation of maximum distance an expression\n can be moved by GCSE optimizations.  This is currently supported only in the\n code hoisting pass.  The bigger the ratio, the more aggressive code hoisting\n-will be with simple expressions, i.e., the expressions which have cost\n+will be with simple expressions, i.e., the expressions that have cost\n less than @option{gcse-unrestricted-cost}.  Specifying 0 will disable\n hoisting of simple expressions.  The default value is 10.\n \n@@ -8917,7 +8917,7 @@ by @option{ggc-min-expand}% beyond @option{ggc-min-heapsize}.  Again,\n tuning this may improve compilation speed, and has no effect on code\n generation.\n \n-The default is the smaller of RAM/8, RLIMIT_RSS, or a limit which\n+The default is the smaller of RAM/8, RLIMIT_RSS, or a limit that\n tries to ensure that RLIMIT_DATA or RLIMIT_AS are not exceeded, but\n with a lower bound of 4096 (four megabytes) and an upper bound of\n 131072 (128 megabytes).  If GCC is not able to calculate RAM on a\n@@ -9289,7 +9289,7 @@ options instead.\n @item -Xpreprocessor @var{option}\n @opindex Xpreprocessor\n Pass @var{option} as an option to the preprocessor.  You can use this to\n-supply system-specific preprocessor options which GCC does not know how to\n+supply system-specific preprocessor options that GCC does not know how to\n recognize.\n \n If you want to pass an option that takes an argument, you must use\n@@ -9313,7 +9313,7 @@ contains commas, it is split into multiple options at the commas.\n @item -Xassembler @var{option}\n @opindex Xassembler\n Pass @var{option} as an option to the assembler.  You can use this to\n-supply system-specific assembler options which GCC does not know how to\n+supply system-specific assembler options that GCC does not know how to\n recognize.\n \n If you want to pass an option that takes an argument, you must use\n@@ -9423,7 +9423,7 @@ mechanism when this option is specified.\n @cindex unresolved references and @option{-nodefaultlibs}\n One of the standard libraries bypassed by @option{-nostdlib} and\n @option{-nodefaultlibs} is @file{libgcc.a}, a library of internal subroutines\n-that GCC uses to overcome shortcomings of particular machines, or special\n+which GCC uses to overcome shortcomings of particular machines, or special\n needs for some languages.\n (@xref{Interface,,Interfacing to GCC Output,gccint,GNU Compiler\n Collection (GCC) Internals},\n@@ -9438,7 +9438,7 @@ GNU Compiler Collection (GCC) Internals}.)\n \n @item -pie\n @opindex pie\n-Produce a position independent executable on targets which support it.\n+Produce a position independent executable on targets that support it.\n For predictable results, you must also specify the same set of options\n that were used to generate code (@option{-fpie}, @option{-fPIE},\n or model suboptions) when you specify this option.\n@@ -9540,8 +9540,7 @@ when linking to avoid references to undefined symbols.\n @item -Xlinker @var{option}\n @opindex Xlinker\n Pass @var{option} as an option to the linker.  You can use this to\n-supply system-specific linker options which GCC does not know how to\n-recognize.\n+supply system-specific linker options that GCC does not recognize.\n \n If you want to pass an option that takes a separate argument, you must use\n @option{-Xlinker} twice, once for the option and once for the argument.\n@@ -9604,7 +9603,7 @@ If you really need to change the search order for system directories,\n use the @option{-nostdinc} and/or @option{-isystem} options.\n \n @item -iplugindir=@var{dir}\n-Set the directory to search for plugins which are passed\n+Set the directory to search for plugins that are passed\n by @option{-fplugin=@var{name}} instead of\n @option{-fplugin=@var{path}/@var{name}.so}.  This option is not meant\n to be used by the user, but only passed by the driver.\n@@ -9633,7 +9632,7 @@ without @samp{@var{machine}/@var{version}/} (@pxref{Target Options}).\n \n For each subprogram to be run, the compiler driver first tries the\n @option{-B} prefix, if any.  If that name is not found, or if @option{-B}\n-was not specified, the driver tries two standard prefixes, which are\n+was not specified, the driver tries two standard prefixes, \n @file{/usr/lib/gcc/} and @file{/usr/local/lib/gcc/}.  If neither of\n those results in a file name that is found, the unmodified program\n name is searched for using the directories specified in your\n@@ -9667,7 +9666,7 @@ with boot-strapping the compiler.\n @item -specs=@var{file}\n @opindex specs\n Process @var{file} after the compiler reads in the standard @file{specs}\n-file, in order to override the defaults that the @file{gcc} driver\n+file, in order to override the defaults which the @file{gcc} driver\n program uses when determining what switches to pass to @file{cc1},\n @file{cc1plus}, @file{as}, @file{ld}, etc.  More than one\n @option{-specs=@var{file}} can be specified on the command line, and they\n@@ -9706,7 +9705,7 @@ In addition, the @option{-I-} option inhibits the use of the current\n directory (where the current input file came from) as the first search\n directory for @samp{#include \"@var{file}\"}.  There is no way to\n override this effect of @option{-I-}.  With @option{-I.} you can specify\n-searching the directory which was current when the compiler was\n+searching the directory that was current when the compiler was\n invoked.  That is not exactly the same as what the preprocessor does\n by default, but it is often satisfactory.\n \n@@ -9735,7 +9734,7 @@ a spec file.\n @dfn{Spec files} are plaintext files that are used to construct spec\n strings.  They consist of a sequence of directives separated by blank\n lines.  The type of directive is determined by the first non-whitespace\n-character on the line and it can be one of the following:\n+character on the line, which can be one of the following:\n \n @table @code\n @item %@var{command}\n@@ -10577,7 +10576,7 @@ Generate reentrant, position independent code.  The default is\n \n @item -mthumb-interwork\n @opindex mthumb-interwork\n-Generate code which supports calling between the ARM and Thumb\n+Generate code that supports calling between the ARM and Thumb\n instruction sets.  Without this option, on pre-v5 architectures, the\n two instruction sets cannot be reliably used inside one program.  The\n default is @option{-mno-thumb-interwork}, since slightly larger code\n@@ -10777,7 +10776,7 @@ version of subroutine call instruction.\n \n Even if this switch is enabled, not all function calls will be turned\n into long calls.  The heuristic is that static functions, functions\n-which have the @samp{short-call} attribute, functions that are inside\n+that have the @samp{short-call} attribute, functions that are inside\n the scope of a @samp{#pragma no_long_calls} directive and functions whose\n definitions have already been compiled within the current compilation\n unit, will not be turned into long calls.  The exception to this rule is\n@@ -11005,7 +11004,7 @@ executables because arguments need not to be removed from the\n stack after such a function call.\n \n This option can lead to reduced code size for functions that perform\n-several calls to functions which get their arguments on the stack like\n+several calls to functions that get their arguments on the stack like\n calls to printf-like functions.\n \n @item -mbranch-cost=@var{cost}\n@@ -11202,7 +11201,7 @@ For even more AVR-specific built-in macros see\n @table @code\n \n @item __AVR_@var{Device}__\n-Setting @code{-mmcu=@var{device}} defines this built-in macro that reflects\n+Setting @code{-mmcu=@var{device}} defines this built-in macro which reflects\n the device's name. For example, @code{-mmcu=atmega8} will define the\n built-in macro @code{__AVR_ATmega8__}, @code{-mmcu=attiny261a} defines\n @code{__AVR_ATtiny261A__}, etc.\n@@ -11322,7 +11321,7 @@ Certain other options, such as @option{-mid-shared-library} and\n Don't keep the frame pointer in a register for leaf functions.  This\n avoids the instructions to save, set up and restore frame pointers and\n makes an extra register available in leaf functions.  The option\n-@option{-fomit-frame-pointer} removes the frame pointer for all functions\n+@option{-fomit-frame-pointer} removes the frame pointer for all functions,\n which might make debugging harder.\n \n @item -mspecld-anomaly\n@@ -11613,7 +11612,7 @@ arrange for stack-frame, writable data and constants to all be 32-bit,\n @opindex mno-prologue-epilogue\n @opindex mprologue-epilogue\n With @option{-mno-prologue-epilogue}, the normal function prologue and\n-epilogue that sets up the stack-frame are omitted and no return\n+epilogue which set up the stack frame are omitted and no return\n instructions or return sequences are generated in the code.  Use this\n option only together with visual inspection of the compiled code: no\n warnings or errors are generated when call-saved registers must be saved,\n@@ -11773,7 +11772,7 @@ is @var{version}.  Typical values of @var{version} include @code{10.1},\n \n If the compiler was built to use the system's headers by default,\n then the default for this option is the system version on which the\n-compiler is running, otherwise the default is to make choices which\n+compiler is running, otherwise the default is to make choices that\n are compatible with as many systems and code bases as possible.\n \n @item -mkernel\n@@ -12426,7 +12425,7 @@ Do not use multiply and add/subtract instructions.\n @item -mfdpic\n @opindex mfdpic\n \n-Select the FDPIC ABI, that uses function descriptors to represent\n+Select the FDPIC ABI, which uses function descriptors to represent\n pointers to functions.  Without any PIC/PIE-related options, it\n implies @option{-fPIE}.  With @option{-fpic} or @option{-fpie}, it\n assumes GOT entries and small data are within a 12-bit range from the\n@@ -12795,7 +12794,7 @@ Such code is suitable for level 0 PA systems and kernels.\n @item -mfast-indirect-calls\n @opindex mfast-indirect-calls\n Generate code that assumes calls never cross space boundaries.  This\n-allows GCC to emit code which performs faster indirect calls.\n+allows GCC to emit code that performs faster indirect calls.\n \n This option will not work in the presence of shared libraries or nested\n functions.\n@@ -13458,7 +13457,7 @@ generates new AVX instructions or AVX equivalence for all SSEx instructions\n when needed.\n \n These options will enable GCC to use these extended instructions in\n-generated code, even without @option{-mfpmath=sse}.  Applications which\n+generated code, even without @option{-mfpmath=sse}.  Applications that\n perform run-time CPU detection must compile separate files for each\n supported architecture, using the appropriate flags.  In particular,\n the file containing the CPU detection code should be compiled without\n@@ -13472,7 +13471,7 @@ the DF flag to select between autoincrement or autodecrement mode.  While the\n ABI specifies the DF flag to be cleared on function entry, some operating\n systems violate this specification by not clearing the DF flag in their\n exception dispatchers.  The exception handler can be invoked with the DF flag\n-set which leads to wrong direction mode, when string instructions are used.\n+set, which leads to wrong direction mode when string instructions are used.\n This option can be enabled by default on 32-bit x86 targets by configuring\n GCC with the @option{--enable-cld} configure option.  Generation of @code{cld}\n instructions can be suppressed with the @option{-mno-cld} compiler option\n@@ -13538,7 +13537,7 @@ doesn't need @option{-mrecip}.\n @item -mrecip=@var{opt}\n @opindex mrecip=opt\n This option allows to control which reciprocal estimate instructions\n-may be used.  @var{opt} is a comma separated list of options, that may\n+may be used.  @var{opt} is a comma separated list of options, which may\n be preceded by a @code{!} to invert the option:\n @code{all}: enable all estimate instructions,\n @code{default}: enable the default instructions, equivalent to @option{-mrecip},\n@@ -13649,7 +13648,7 @@ expanding inline loop, @code{libcall} for always expanding library call.\n Don't keep the frame pointer in a register for leaf functions.  This\n avoids the instructions to save, set up and restore frame pointers and\n makes an extra register available in leaf functions.  The option\n-@option{-fomit-frame-pointer} removes the frame pointer for all functions\n+@option{-fomit-frame-pointer} removes the frame pointer for all functions,\n which might make debugging harder.\n \n @item -mtls-direct-seg-refs\n@@ -14506,7 +14505,7 @@ deprecated in favor of that option.\n @item -m68020-40\n @opindex m68020-40\n Generate output for a 68040, without using any of the new instructions.\n-This results in code which can run relatively efficiently on either a\n+This results in code that can run relatively efficiently on either a\n 68020/68881 or a 68030 or a 68040.  The generated code does use the\n 68881 instructions that are emulated on the 68040.\n \n@@ -14515,7 +14514,7 @@ The option is equivalent to @option{-march=68020} @option{-mtune=68020-40}.\n @item -m68020-60\n @opindex m68020-60\n Generate output for a 68060, without using any of the new instructions.\n-This results in code which can run relatively efficiently on either a\n+This results in code that can run relatively efficiently on either a\n 68020/68881 or a 68030 or a 68040.  The generated code does use the\n 68881 instructions that are emulated on the 68060.\n \n@@ -14762,7 +14761,7 @@ simulator library (@file{libsim.a)} from the linker command line.\n @item -mstack-increment=@var{size}\n @opindex mstack-increment\n Set the maximum amount for a single stack increment operation.  Large\n-values can increase the speed of programs which contain functions\n+values can increase the speed of programs that contain functions\n that need a large amount of stack space, but they can also trigger a\n segmentation fault if the stack is extended too much.  The default\n value is 0x1000.\n@@ -15793,7 +15792,7 @@ Enable or disable use of Branch Likely instructions, regardless of the\n default for the selected architecture.  By default, Branch Likely\n instructions may be generated if they are supported by the selected\n architecture.  An exception is for the MIPS32 and MIPS64 architectures\n-and processors which implement those architectures; for those, Branch\n+and processors that implement those architectures; for those, Branch\n Likely instructions will not be generated by default because the MIPS32\n and MIPS64 architectures specifically deprecate their use.\n \n@@ -15977,20 +15976,20 @@ MN10300 processors.\n \n @item -mam33\n @opindex mam33\n-Generate code which uses features specific to the AM33 processor.\n+Generate code using features specific to the AM33 processor.\n \n @item -mno-am33\n @opindex mno-am33\n-Do not generate code which uses features specific to the AM33 processor.  This\n+Do not generate code using features specific to the AM33 processor.  This\n is the default.\n \n @item -mam33-2\n @opindex mam33-2\n-Generate code which uses features specific to the AM33/2.0 processor.\n+Generate code using features specific to the AM33/2.0 processor.\n \n @item -mam34\n @opindex mam34\n-Generate code which uses features specific to the AM34 processor.\n+Generate code using features specific to the AM34 processor.\n \n @item -mtune=@var{cpu-type}\n @opindex mtune\n@@ -16001,7 +16000,7 @@ type.  The CPU type must be one of @samp{mn10300}, @samp{am33},\n \n @item -mreturn-pointer-on-d0\n @opindex mreturn-pointer-on-d0\n-When generating a function which returns a pointer, return the pointer\n+When generating a function that returns a pointer, return the pointer\n in both @code{a0} and @code{d0}.  Otherwise, the pointer is returned\n only in a0, and attempts to call such functions without a prototype\n would result in errors.  Note that this option is on by default; use\n@@ -16179,13 +16178,13 @@ rather than being permanently enabled.\n \n @item -mno-inefficient-warnings\n Disables warnings about the generation of inefficient code.  These\n-warnings can be generated, for example, when compiling code which\n+warnings can be generated, for example, when compiling code that\n performs byte-level memory operations on the MAC AE type.  The MAC AE has\n no hardware support for byte-level memory operations, so all byte\n load/stores must be synthesized from word load/store operations.  This is\n inefficient and a warning will be generated indicating to the programmer\n that they should rewrite the code to avoid byte operations, or to target\n-an AE type which has the necessary hardware support.  This option enables\n+an AE type that has the necessary hardware support.  This option enables\n the warning to be turned off.\n \n @end table\n@@ -16840,15 +16839,15 @@ by the target during instruction scheduling.  The argument\n @var{all}: all dependences are costly,\n @var{true_store_to_load}: a true dependence from store to load is costly,\n @var{store_to_load}: any dependence from store to load is costly,\n-@var{number}: any dependence which latency >= @var{number} is costly.\n+@var{number}: any dependence for which latency >= @var{number} is costly.\n \n @item -minsert-sched-nops=@var{scheme}\n @opindex minsert-sched-nops\n This option controls which nop insertion scheme will be used during\n the second scheduling pass.  The argument @var{scheme} takes one of the\n following values:\n @var{no}: Don't insert nops.\n-@var{pad}: Pad with nops any dispatch group which has vacant issue slots,\n+@var{pad}: Pad with nops any dispatch group that has vacant issue slots,\n according to the scheduler's grouping.\n @var{regroup_exact}: Insert nops to force costly dependent insns into\n separate groups.  Insert exactly as many nops as needed to force an insn\n@@ -17136,7 +17135,7 @@ roots.\n @item -mrecip=@var{opt}\n @opindex mrecip=opt\n This option allows to control which reciprocal estimate instructions\n-may be used.  @var{opt} is a comma separated list of options, that may\n+may be used.  @var{opt} is a comma separated list of options, which may\n be preceded by a @code{!} to invert the option:\n @code{all}: enable all estimate instructions,\n @code{default}: enable the default instructions, equivalent to @option{-mrecip},\n@@ -17287,7 +17286,7 @@ could result in slower and/or larger code if variables which once\n could have been held in the reserved register are now pushed onto the\n stack.\n \n-Note, common variables (variables which have not been initialised) and\n+Note, common variables (variables that have not been initialised) and\n constants are not placed into the small data area as they are assigned\n to other sections in the output executable.\n \n@@ -17564,7 +17563,7 @@ hardware floating point is used.\n @opindex mwarn-framesize\n Emit a warning if the current function exceeds the given frame size.  Because\n this is a compile-time check it doesn't need to be a real problem when the program\n-runs.  It is intended to identify functions which most probably cause\n+runs.  It is intended to identify functions that most probably cause\n a stack overflow.  It is useful to be used in an environment with limited stack\n size e.g.@: the linux kernel.\n \n@@ -18340,8 +18339,8 @@ relocation.  @option{-mno-error-reloc} disables the error,\n @opindex msafe-dma\n @opindex munsafe-dma\n \n-Instructions which initiate or test completion of DMA must not be\n-reordered with respect to loads and stores of the memory which is being\n+Instructions that initiate or test completion of DMA must not be\n+reordered with respect to loads and stores of the memory that is being\n accessed.  Users typically address this problem using the volatile\n keyword, but that can lead to inefficient code in places where the\n memory is known to not change.  Rather than mark the memory as volatile\n@@ -18447,7 +18446,7 @@ sure it is within 125.\n \n @item -msafe-hints\n @opindex msafe-hints\n-Work around a hardware bug which causes the SPU to stall indefinitely.\n+Work around a hardware bug that causes the SPU to stall indefinitely.\n By default, GCC will insert the @code{hbrp} instruction to make sure\n this stall won't happen.\n \n@@ -18842,7 +18841,7 @@ used in code generation.\n \n Most of them have both positive and negative forms; the negative form\n of @option{-ffoo} would be @option{-fno-foo}.  In the table below, only\n-one of the forms is listed---the one which is not the default.  You\n+one of the forms is listed---the one that is not the default.  You\n can figure out the other form by either removing @samp{no-} or adding\n it.\n \n@@ -18874,7 +18873,7 @@ exceptions.  For some targets, this implies GCC will generate frame\n unwind information for all functions, which can produce significant data\n size overhead, although it does not affect execution.  If you do not\n specify this option, GCC will enable it by default for languages like\n-C++ which normally require exception handling, and disable it for\n+C++ that normally require exception handling, and disable it for\n languages like C that do not normally require it.  However, you may need\n to enable this option when compiling C code that needs to interoperate\n properly with exception handlers written in C++.  You may also wish to\n@@ -18944,7 +18943,7 @@ Use it to conform to a non-default application binary interface.\n @opindex fshort-enums\n Allocate to an @code{enum} type only as many bytes as it needs for the\n declared range of possible values.  Specifically, the @code{enum} type\n-will be equivalent to the smallest integer type which has enough room.\n+will be equivalent to the smallest integer type that has enough room.\n \n @strong{Warning:} the @option{-fshort-enums} switch causes GCC to generate\n code that is not binary compatible with code generated without that switch.\n@@ -18987,7 +18986,7 @@ you will get a multiple-definition error when you link them.\n In this case, you must compile with @option{-fcommon} instead.\n Compiling with @option{-fno-common} is useful on targets for which\n it provides better performance, or if you wish to verify that the\n-program will work on other systems which always treat uninitialized\n+program will work on other systems that always treat uninitialized\n variable declarations this way.\n \n @item -fno-ident\n@@ -19080,7 +19079,7 @@ for @option{-fpie} and 2 for @option{-fPIE}.\n Do not use jump tables for switch statements even where it would be\n more efficient than other code generation strategies.  This option is\n of use in conjunction with @option{-fpic} or @option{-fPIC} for\n-building code which forms part of a dynamic linker and cannot\n+building code that forms part of a dynamic linker and cannot\n reference the address of a jump table.  On some targets, jump tables\n do not require a GOT and this option is not needed.\n \n@@ -19449,7 +19448,7 @@ GNU Compiler Collection (GCC) Internals}.\n @findex LC_ALL\n @cindex locale\n These environment variables control the way that GCC uses\n-localization information that allow GCC to work with different\n+localization information which allows GCC to work with different\n national conventions.  GCC inspects the locale categories\n @env{LC_CTYPE} and @env{LC_MESSAGES} if it has been configured to do\n so.  These locale categories can be set to any value supported by your"}]}