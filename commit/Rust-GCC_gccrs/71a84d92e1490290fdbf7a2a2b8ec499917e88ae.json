{"sha": "71a84d92e1490290fdbf7a2a2b8ec499917e88ae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzFhODRkOTJlMTQ5MDI5MGZkYmY3YTJhMmI4ZWM0OTk5MTdlODhhZQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2017-10-10T20:06:33Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-10-10T20:06:33Z"}, "message": "re PR target/79565 (ICE in copy_to_mode_reg, at explow.c:612)\n\n\tPR target/79565\n\tPR target/82483\n\t* config/i386/i386.c (ix86_init_mmx_sse_builtins): Add\n\tOPTION_MASK_ISA_MMX for __builtin_ia32_maskmovq,\n\t__builtin_ia32_vec_ext_v4hi and __builtin_ia32_vec_set_v4hi.\n\t(ix86_expand_builtin): Treat OPTION_MASK_ISA_MMX similarly\n\tto OPTION_MASK_ISA_AVX512VL - builtins that have both\n\tOPTION_MASK_ISA_MMX and some other bit set require both\n\tmmx and the ISAs without the mmx bit.\n\t* config/i386/i386-builtin.def (__builtin_ia32_cvtps2pi,\n\t__builtin_ia32_cvttps2pi, __builtin_ia32_cvtpi2ps,\n\t__builtin_ia32_pavgb, __builtin_ia32_pavgw, __builtin_ia32_pmulhuw,\n\t__builtin_ia32_pmaxub, __builtin_ia32_pmaxsw, __builtin_ia32_pminub,\n\t__builtin_ia32_pminsw, __builtin_ia32_psadbw, __builtin_ia32_pmovmskb,\n\t__builtin_ia32_pshufw, __builtin_ia32_cvtpd2pi,\n\t__builtin_ia32_cvttpd2pi, __builtin_ia32_cvtpi2pd,\n\t__builtin_ia32_pmuludq, __builtin_ia32_pabsb, __builtin_ia32_pabsw,\n\t__builtin_ia32_pabsd, __builtin_ia32_phaddw, __builtin_ia32_phaddd,\n\t__builtin_ia32_phaddsw, __builtin_ia32_phsubw, __builtin_ia32_phsubd,\n\t__builtin_ia32_phsubsw, __builtin_ia32_pmaddubsw,\n\t__builtin_ia32_pmulhrsw, __builtin_ia32_pshufb, __builtin_ia32_psignb,\n\t__builtin_ia32_psignw, __builtin_ia32_psignd, __builtin_ia32_movntq,\n\t__builtin_ia32_paddq, __builtin_ia32_psubq, __builtin_ia32_palignr):\n\tAdd OPTION_MASK_ISA_MMX.\n\n\t* gcc.target/i386/pr82483-1.c: New test.\n\t* gcc.target/i386/pr82483-2.c: New test.\n\nCo-Authored-By: H.J. Lu <hongjiu.lu@intel.com>\n\nFrom-SVN: r253609", "tree": {"sha": "0c6e3486b96c234e34077874cf63b8f5109085db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0c6e3486b96c234e34077874cf63b8f5109085db"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/71a84d92e1490290fdbf7a2a2b8ec499917e88ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71a84d92e1490290fdbf7a2a2b8ec499917e88ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/71a84d92e1490290fdbf7a2a2b8ec499917e88ae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71a84d92e1490290fdbf7a2a2b8ec499917e88ae/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "eead34af3a6a0530a6d5da5b2221c7656c2e2d43", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eead34af3a6a0530a6d5da5b2221c7656c2e2d43", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eead34af3a6a0530a6d5da5b2221c7656c2e2d43"}], "stats": {"total": 185, "additions": 142, "deletions": 43}, "files": [{"sha": "d2d89e329997be2ab444cec890050704b5bd2427", "filename": "gcc/ChangeLog", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71a84d92e1490290fdbf7a2a2b8ec499917e88ae/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71a84d92e1490290fdbf7a2a2b8ec499917e88ae/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=71a84d92e1490290fdbf7a2a2b8ec499917e88ae", "patch": "@@ -1,3 +1,31 @@\n+2017-10-10  Jakub Jelinek  <jakub@redhat.com>\n+\t    H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/79565\n+\tPR target/82483\n+\t* config/i386/i386.c (ix86_init_mmx_sse_builtins): Add\n+\tOPTION_MASK_ISA_MMX for __builtin_ia32_maskmovq,\n+\t__builtin_ia32_vec_ext_v4hi and __builtin_ia32_vec_set_v4hi.\n+\t(ix86_expand_builtin): Treat OPTION_MASK_ISA_MMX similarly\n+\tto OPTION_MASK_ISA_AVX512VL - builtins that have both\n+\tOPTION_MASK_ISA_MMX and some other bit set require both\n+\tmmx and the ISAs without the mmx bit.\n+\t* config/i386/i386-builtin.def (__builtin_ia32_cvtps2pi,\n+\t__builtin_ia32_cvttps2pi, __builtin_ia32_cvtpi2ps,\n+\t__builtin_ia32_pavgb, __builtin_ia32_pavgw, __builtin_ia32_pmulhuw,\n+\t__builtin_ia32_pmaxub, __builtin_ia32_pmaxsw, __builtin_ia32_pminub,\n+\t__builtin_ia32_pminsw, __builtin_ia32_psadbw, __builtin_ia32_pmovmskb,\n+\t__builtin_ia32_pshufw, __builtin_ia32_cvtpd2pi,\n+\t__builtin_ia32_cvttpd2pi, __builtin_ia32_cvtpi2pd,\n+\t__builtin_ia32_pmuludq, __builtin_ia32_pabsb, __builtin_ia32_pabsw,\n+\t__builtin_ia32_pabsd, __builtin_ia32_phaddw, __builtin_ia32_phaddd,\n+\t__builtin_ia32_phaddsw, __builtin_ia32_phsubw, __builtin_ia32_phsubd,\n+\t__builtin_ia32_phsubsw, __builtin_ia32_pmaddubsw,\n+\t__builtin_ia32_pmulhrsw, __builtin_ia32_pshufb, __builtin_ia32_psignb,\n+\t__builtin_ia32_psignw, __builtin_ia32_psignd, __builtin_ia32_movntq,\n+\t__builtin_ia32_paddq, __builtin_ia32_psubq, __builtin_ia32_palignr):\n+\tAdd OPTION_MASK_ISA_MMX.\n+\n 2017-10-10  Andreas Tobler  <andreast@gcc.gnu.org>\n \n \t* config.gcc (armv7*-*-freebsd*): New target."}, {"sha": "0d5d5b746757dd53e447d8549a08b36111452df8", "filename": "gcc/config/i386/i386-builtin.def", "status": "modified", "additions": 36, "deletions": 36, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71a84d92e1490290fdbf7a2a2b8ec499917e88ae/gcc%2Fconfig%2Fi386%2Fi386-builtin.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71a84d92e1490290fdbf7a2a2b8ec499917e88ae/gcc%2Fconfig%2Fi386%2Fi386-builtin.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-builtin.def?ref=71a84d92e1490290fdbf7a2a2b8ec499917e88ae", "patch": "@@ -137,7 +137,7 @@ BDESC (OPTION_MASK_ISA_SSE, CODE_FOR_sse_storelps, \"__builtin_ia32_storelps\", IX\n \n /* SSE or 3DNow!A  */\n BDESC (OPTION_MASK_ISA_SSE | OPTION_MASK_ISA_3DNOW_A, CODE_FOR_sse_sfence, \"__builtin_ia32_sfence\", IX86_BUILTIN_SFENCE, UNKNOWN, (int) VOID_FTYPE_VOID)\n-BDESC (OPTION_MASK_ISA_SSE | OPTION_MASK_ISA_3DNOW_A, CODE_FOR_sse_movntq, \"__builtin_ia32_movntq\", IX86_BUILTIN_MOVNTQ, UNKNOWN, (int) VOID_FTYPE_PULONGLONG_ULONGLONG)\n+BDESC (OPTION_MASK_ISA_SSE | OPTION_MASK_ISA_3DNOW_A | OPTION_MASK_ISA_MMX, CODE_FOR_sse_movntq, \"__builtin_ia32_movntq\", IX86_BUILTIN_MOVNTQ, UNKNOWN, (int) VOID_FTYPE_PULONGLONG_ULONGLONG)\n \n /* SSE2 */\n BDESC (OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_lfence, \"__builtin_ia32_lfence\", IX86_BUILTIN_LFENCE, UNKNOWN, (int) VOID_FTYPE_VOID)\n@@ -505,10 +505,10 @@ BDESC (OPTION_MASK_ISA_SSE, CODE_FOR_sqrtv4sf2, \"__builtin_ia32_sqrtps_nr\", IX86\n BDESC (OPTION_MASK_ISA_SSE, CODE_FOR_sse_rsqrtv4sf2, \"__builtin_ia32_rsqrtps\", IX86_BUILTIN_RSQRTPS, UNKNOWN, (int) V4SF_FTYPE_V4SF)\n BDESC (OPTION_MASK_ISA_SSE, CODE_FOR_rsqrtv4sf2, \"__builtin_ia32_rsqrtps_nr\", IX86_BUILTIN_RSQRTPS_NR, UNKNOWN, (int) V4SF_FTYPE_V4SF)\n BDESC (OPTION_MASK_ISA_SSE, CODE_FOR_sse_rcpv4sf2, \"__builtin_ia32_rcpps\", IX86_BUILTIN_RCPPS, UNKNOWN, (int) V4SF_FTYPE_V4SF)\n-BDESC (OPTION_MASK_ISA_SSE, CODE_FOR_sse_cvtps2pi, \"__builtin_ia32_cvtps2pi\", IX86_BUILTIN_CVTPS2PI, UNKNOWN, (int) V2SI_FTYPE_V4SF)\n+BDESC (OPTION_MASK_ISA_SSE | OPTION_MASK_ISA_MMX, CODE_FOR_sse_cvtps2pi, \"__builtin_ia32_cvtps2pi\", IX86_BUILTIN_CVTPS2PI, UNKNOWN, (int) V2SI_FTYPE_V4SF)\n BDESC (OPTION_MASK_ISA_SSE, CODE_FOR_sse_cvtss2si, \"__builtin_ia32_cvtss2si\", IX86_BUILTIN_CVTSS2SI, UNKNOWN, (int) INT_FTYPE_V4SF)\n BDESC (OPTION_MASK_ISA_SSE | OPTION_MASK_ISA_64BIT, CODE_FOR_sse_cvtss2siq, \"__builtin_ia32_cvtss2si64\", IX86_BUILTIN_CVTSS2SI64, UNKNOWN, (int) INT64_FTYPE_V4SF)\n-BDESC (OPTION_MASK_ISA_SSE, CODE_FOR_sse_cvttps2pi, \"__builtin_ia32_cvttps2pi\", IX86_BUILTIN_CVTTPS2PI, UNKNOWN, (int) V2SI_FTYPE_V4SF)\n+BDESC (OPTION_MASK_ISA_SSE | OPTION_MASK_ISA_MMX, CODE_FOR_sse_cvttps2pi, \"__builtin_ia32_cvttps2pi\", IX86_BUILTIN_CVTTPS2PI, UNKNOWN, (int) V2SI_FTYPE_V4SF)\n BDESC (OPTION_MASK_ISA_SSE, CODE_FOR_sse_cvttss2si, \"__builtin_ia32_cvttss2si\", IX86_BUILTIN_CVTTSS2SI, UNKNOWN, (int) INT_FTYPE_V4SF)\n BDESC (OPTION_MASK_ISA_SSE | OPTION_MASK_ISA_64BIT, CODE_FOR_sse_cvttss2siq, \"__builtin_ia32_cvttss2si64\", IX86_BUILTIN_CVTTSS2SI64, UNKNOWN, (int) INT64_FTYPE_V4SF)\n \n@@ -562,7 +562,7 @@ BDESC (OPTION_MASK_ISA_SSE, CODE_FOR_sse_movlhps_exp,  \"__builtin_ia32_movlhps\",\n BDESC (OPTION_MASK_ISA_SSE, CODE_FOR_vec_interleave_highv4sf, \"__builtin_ia32_unpckhps\", IX86_BUILTIN_UNPCKHPS, UNKNOWN, (int) V4SF_FTYPE_V4SF_V4SF)\n BDESC (OPTION_MASK_ISA_SSE, CODE_FOR_vec_interleave_lowv4sf, \"__builtin_ia32_unpcklps\", IX86_BUILTIN_UNPCKLPS, UNKNOWN, (int) V4SF_FTYPE_V4SF_V4SF)\n \n-BDESC (OPTION_MASK_ISA_SSE, CODE_FOR_sse_cvtpi2ps, \"__builtin_ia32_cvtpi2ps\", IX86_BUILTIN_CVTPI2PS, UNKNOWN, (int) V4SF_FTYPE_V4SF_V2SI)\n+BDESC (OPTION_MASK_ISA_SSE | OPTION_MASK_ISA_MMX, CODE_FOR_sse_cvtpi2ps, \"__builtin_ia32_cvtpi2ps\", IX86_BUILTIN_CVTPI2PS, UNKNOWN, (int) V4SF_FTYPE_V4SF_V2SI)\n BDESC (OPTION_MASK_ISA_SSE, CODE_FOR_sse_cvtsi2ss, \"__builtin_ia32_cvtsi2ss\", IX86_BUILTIN_CVTSI2SS, UNKNOWN, (int) V4SF_FTYPE_V4SF_SI)\n BDESC (OPTION_MASK_ISA_SSE | OPTION_MASK_ISA_64BIT, CODE_FOR_sse_cvtsi2ssq, \"__builtin_ia32_cvtsi642ss\", IX86_BUILTIN_CVTSI642SS, UNKNOWN, V4SF_FTYPE_V4SF_DI)\n \n@@ -576,19 +576,19 @@ BDESC (OPTION_MASK_ISA_SSE, CODE_FOR_abstf2, 0, IX86_BUILTIN_FABSQ, UNKNOWN, (in\n BDESC (OPTION_MASK_ISA_SSE, CODE_FOR_copysigntf3, 0, IX86_BUILTIN_COPYSIGNQ, UNKNOWN, (int) FLOAT128_FTYPE_FLOAT128_FLOAT128)\n \n /* SSE MMX or 3Dnow!A */\n-BDESC (OPTION_MASK_ISA_SSE | OPTION_MASK_ISA_3DNOW_A, CODE_FOR_mmx_uavgv8qi3, \"__builtin_ia32_pavgb\", IX86_BUILTIN_PAVGB, UNKNOWN, (int) V8QI_FTYPE_V8QI_V8QI)\n-BDESC (OPTION_MASK_ISA_SSE | OPTION_MASK_ISA_3DNOW_A, CODE_FOR_mmx_uavgv4hi3, \"__builtin_ia32_pavgw\", IX86_BUILTIN_PAVGW, UNKNOWN, (int) V4HI_FTYPE_V4HI_V4HI)\n-BDESC (OPTION_MASK_ISA_SSE | OPTION_MASK_ISA_3DNOW_A, CODE_FOR_mmx_umulv4hi3_highpart, \"__builtin_ia32_pmulhuw\", IX86_BUILTIN_PMULHUW, UNKNOWN, (int) V4HI_FTYPE_V4HI_V4HI)\n+BDESC (OPTION_MASK_ISA_SSE | OPTION_MASK_ISA_3DNOW_A | OPTION_MASK_ISA_MMX, CODE_FOR_mmx_uavgv8qi3, \"__builtin_ia32_pavgb\", IX86_BUILTIN_PAVGB, UNKNOWN, (int) V8QI_FTYPE_V8QI_V8QI)\n+BDESC (OPTION_MASK_ISA_SSE | OPTION_MASK_ISA_3DNOW_A | OPTION_MASK_ISA_MMX, CODE_FOR_mmx_uavgv4hi3, \"__builtin_ia32_pavgw\", IX86_BUILTIN_PAVGW, UNKNOWN, (int) V4HI_FTYPE_V4HI_V4HI)\n+BDESC (OPTION_MASK_ISA_SSE | OPTION_MASK_ISA_3DNOW_A | OPTION_MASK_ISA_MMX, CODE_FOR_mmx_umulv4hi3_highpart, \"__builtin_ia32_pmulhuw\", IX86_BUILTIN_PMULHUW, UNKNOWN, (int) V4HI_FTYPE_V4HI_V4HI)\n \n-BDESC (OPTION_MASK_ISA_SSE | OPTION_MASK_ISA_3DNOW_A, CODE_FOR_mmx_umaxv8qi3, \"__builtin_ia32_pmaxub\", IX86_BUILTIN_PMAXUB, UNKNOWN, (int) V8QI_FTYPE_V8QI_V8QI)\n-BDESC (OPTION_MASK_ISA_SSE | OPTION_MASK_ISA_3DNOW_A, CODE_FOR_mmx_smaxv4hi3, \"__builtin_ia32_pmaxsw\", IX86_BUILTIN_PMAXSW, UNKNOWN, (int) V4HI_FTYPE_V4HI_V4HI)\n-BDESC (OPTION_MASK_ISA_SSE | OPTION_MASK_ISA_3DNOW_A, CODE_FOR_mmx_uminv8qi3, \"__builtin_ia32_pminub\", IX86_BUILTIN_PMINUB, UNKNOWN, (int) V8QI_FTYPE_V8QI_V8QI)\n-BDESC (OPTION_MASK_ISA_SSE | OPTION_MASK_ISA_3DNOW_A, CODE_FOR_mmx_sminv4hi3, \"__builtin_ia32_pminsw\", IX86_BUILTIN_PMINSW, UNKNOWN, (int) V4HI_FTYPE_V4HI_V4HI)\n+BDESC (OPTION_MASK_ISA_SSE | OPTION_MASK_ISA_3DNOW_A | OPTION_MASK_ISA_MMX, CODE_FOR_mmx_umaxv8qi3, \"__builtin_ia32_pmaxub\", IX86_BUILTIN_PMAXUB, UNKNOWN, (int) V8QI_FTYPE_V8QI_V8QI)\n+BDESC (OPTION_MASK_ISA_SSE | OPTION_MASK_ISA_3DNOW_A | OPTION_MASK_ISA_MMX, CODE_FOR_mmx_smaxv4hi3, \"__builtin_ia32_pmaxsw\", IX86_BUILTIN_PMAXSW, UNKNOWN, (int) V4HI_FTYPE_V4HI_V4HI)\n+BDESC (OPTION_MASK_ISA_SSE | OPTION_MASK_ISA_3DNOW_A | OPTION_MASK_ISA_MMX, CODE_FOR_mmx_uminv8qi3, \"__builtin_ia32_pminub\", IX86_BUILTIN_PMINUB, UNKNOWN, (int) V8QI_FTYPE_V8QI_V8QI)\n+BDESC (OPTION_MASK_ISA_SSE | OPTION_MASK_ISA_3DNOW_A | OPTION_MASK_ISA_MMX, CODE_FOR_mmx_sminv4hi3, \"__builtin_ia32_pminsw\", IX86_BUILTIN_PMINSW, UNKNOWN, (int) V4HI_FTYPE_V4HI_V4HI)\n \n-BDESC (OPTION_MASK_ISA_SSE | OPTION_MASK_ISA_3DNOW_A, CODE_FOR_mmx_psadbw, \"__builtin_ia32_psadbw\", IX86_BUILTIN_PSADBW, UNKNOWN, (int) V1DI_FTYPE_V8QI_V8QI)\n-BDESC (OPTION_MASK_ISA_SSE | OPTION_MASK_ISA_3DNOW_A, CODE_FOR_mmx_pmovmskb, \"__builtin_ia32_pmovmskb\", IX86_BUILTIN_PMOVMSKB, UNKNOWN, (int) INT_FTYPE_V8QI)\n+BDESC (OPTION_MASK_ISA_SSE | OPTION_MASK_ISA_3DNOW_A | OPTION_MASK_ISA_MMX, CODE_FOR_mmx_psadbw, \"__builtin_ia32_psadbw\", IX86_BUILTIN_PSADBW, UNKNOWN, (int) V1DI_FTYPE_V8QI_V8QI)\n+BDESC (OPTION_MASK_ISA_SSE | OPTION_MASK_ISA_3DNOW_A | OPTION_MASK_ISA_MMX, CODE_FOR_mmx_pmovmskb, \"__builtin_ia32_pmovmskb\", IX86_BUILTIN_PMOVMSKB, UNKNOWN, (int) INT_FTYPE_V8QI)\n \n-BDESC (OPTION_MASK_ISA_SSE | OPTION_MASK_ISA_3DNOW_A, CODE_FOR_mmx_pshufw, \"__builtin_ia32_pshufw\", IX86_BUILTIN_PSHUFW, UNKNOWN, (int) V4HI_FTYPE_V4HI_INT)\n+BDESC (OPTION_MASK_ISA_SSE | OPTION_MASK_ISA_3DNOW_A | OPTION_MASK_ISA_MMX, CODE_FOR_mmx_pshufw, \"__builtin_ia32_pshufw\", IX86_BUILTIN_PSHUFW, UNKNOWN, (int) V4HI_FTYPE_V4HI_INT)\n \n /* SSE2 */\n BDESC (OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_shufpd, \"__builtin_ia32_shufpd\", IX86_BUILTIN_SHUFPD, UNKNOWN, (int) V2DF_FTYPE_V2DF_V2DF_INT)\n@@ -600,12 +600,12 @@ BDESC (OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_cvtdq2pd, \"__builtin_ia32_cvtdq2pd\",\n BDESC (OPTION_MASK_ISA_SSE2, CODE_FOR_floatv4siv4sf2, \"__builtin_ia32_cvtdq2ps\", IX86_BUILTIN_CVTDQ2PS, UNKNOWN, (int) V4SF_FTYPE_V4SI)\n \n BDESC (OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_cvtpd2dq, \"__builtin_ia32_cvtpd2dq\", IX86_BUILTIN_CVTPD2DQ, UNKNOWN, (int) V4SI_FTYPE_V2DF)\n-BDESC (OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_cvtpd2pi, \"__builtin_ia32_cvtpd2pi\", IX86_BUILTIN_CVTPD2PI, UNKNOWN, (int) V2SI_FTYPE_V2DF)\n+BDESC (OPTION_MASK_ISA_SSE2 | OPTION_MASK_ISA_MMX, CODE_FOR_sse2_cvtpd2pi, \"__builtin_ia32_cvtpd2pi\", IX86_BUILTIN_CVTPD2PI, UNKNOWN, (int) V2SI_FTYPE_V2DF)\n BDESC (OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_cvtpd2ps, \"__builtin_ia32_cvtpd2ps\", IX86_BUILTIN_CVTPD2PS, UNKNOWN, (int) V4SF_FTYPE_V2DF)\n BDESC (OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_cvttpd2dq, \"__builtin_ia32_cvttpd2dq\", IX86_BUILTIN_CVTTPD2DQ, UNKNOWN, (int) V4SI_FTYPE_V2DF)\n-BDESC (OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_cvttpd2pi, \"__builtin_ia32_cvttpd2pi\", IX86_BUILTIN_CVTTPD2PI, UNKNOWN, (int) V2SI_FTYPE_V2DF)\n+BDESC (OPTION_MASK_ISA_SSE2 | OPTION_MASK_ISA_MMX, CODE_FOR_sse2_cvttpd2pi, \"__builtin_ia32_cvttpd2pi\", IX86_BUILTIN_CVTTPD2PI, UNKNOWN, (int) V2SI_FTYPE_V2DF)\n \n-BDESC (OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_cvtpi2pd, \"__builtin_ia32_cvtpi2pd\", IX86_BUILTIN_CVTPI2PD, UNKNOWN, (int) V2DF_FTYPE_V2SI)\n+BDESC (OPTION_MASK_ISA_SSE2 | OPTION_MASK_ISA_MMX, CODE_FOR_sse2_cvtpi2pd, \"__builtin_ia32_cvtpi2pd\", IX86_BUILTIN_CVTPI2PD, UNKNOWN, (int) V2DF_FTYPE_V2SI)\n \n BDESC (OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_cvtsd2si, \"__builtin_ia32_cvtsd2si\", IX86_BUILTIN_CVTSD2SI, UNKNOWN, (int) INT_FTYPE_V2DF)\n BDESC (OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_cvttsd2si, \"__builtin_ia32_cvttsd2si\", IX86_BUILTIN_CVTTSD2SI, UNKNOWN, (int) INT_FTYPE_V2DF)\n@@ -721,7 +721,7 @@ BDESC (OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_packuswb, \"__builtin_ia32_packuswb128\n BDESC (OPTION_MASK_ISA_SSE2, CODE_FOR_umulv8hi3_highpart, \"__builtin_ia32_pmulhuw128\", IX86_BUILTIN_PMULHUW128, UNKNOWN, (int) V8HI_FTYPE_V8HI_V8HI)\n BDESC (OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_psadbw, \"__builtin_ia32_psadbw128\", IX86_BUILTIN_PSADBW128, UNKNOWN, (int) V2DI_FTYPE_V16QI_V16QI)\n \n-BDESC (OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_umulv1siv1di3, \"__builtin_ia32_pmuludq\", IX86_BUILTIN_PMULUDQ, UNKNOWN, (int) V1DI_FTYPE_V2SI_V2SI)\n+BDESC (OPTION_MASK_ISA_SSE2 | OPTION_MASK_ISA_MMX, CODE_FOR_sse2_umulv1siv1di3, \"__builtin_ia32_pmuludq\", IX86_BUILTIN_PMULUDQ, UNKNOWN, (int) V1DI_FTYPE_V2SI_V2SI)\n BDESC (OPTION_MASK_ISA_SSE2, CODE_FOR_vec_widen_umult_even_v4si, \"__builtin_ia32_pmuludq128\", IX86_BUILTIN_PMULUDQ128, UNKNOWN, (int) V2DI_FTYPE_V4SI_V4SI)\n \n BDESC (OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_pmaddwd, \"__builtin_ia32_pmaddwd128\", IX86_BUILTIN_PMADDWD128, UNKNOWN, (int) V4SI_FTYPE_V8HI_V8HI)\n@@ -761,8 +761,8 @@ BDESC (OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_vmsqrtv2df2, \"__builtin_ia32_sqrtsd\",\n BDESC (OPTION_MASK_ISA_SSE, CODE_FOR_sse2_movq128, \"__builtin_ia32_movq128\", IX86_BUILTIN_MOVQ128, UNKNOWN, (int) V2DI_FTYPE_V2DI)\n \n /* SSE2 MMX */\n-BDESC (OPTION_MASK_ISA_SSE2, CODE_FOR_mmx_addv1di3, \"__builtin_ia32_paddq\", IX86_BUILTIN_PADDQ, UNKNOWN, (int) V1DI_FTYPE_V1DI_V1DI)\n-BDESC (OPTION_MASK_ISA_SSE2, CODE_FOR_mmx_subv1di3, \"__builtin_ia32_psubq\", IX86_BUILTIN_PSUBQ, UNKNOWN, (int) V1DI_FTYPE_V1DI_V1DI)\n+BDESC (OPTION_MASK_ISA_SSE2 | OPTION_MASK_ISA_MMX, CODE_FOR_mmx_addv1di3, \"__builtin_ia32_paddq\", IX86_BUILTIN_PADDQ, UNKNOWN, (int) V1DI_FTYPE_V1DI_V1DI)\n+BDESC (OPTION_MASK_ISA_SSE2 | OPTION_MASK_ISA_MMX, CODE_FOR_mmx_subv1di3, \"__builtin_ia32_psubq\", IX86_BUILTIN_PSUBQ, UNKNOWN, (int) V1DI_FTYPE_V1DI_V1DI)\n \n /* SSE3 */\n BDESC (OPTION_MASK_ISA_SSE3, CODE_FOR_sse3_movshdup, \"__builtin_ia32_movshdup\", IX86_BUILTIN_MOVSHDUP, UNKNOWN, (int) V4SF_FTYPE_V4SF)\n@@ -777,40 +777,40 @@ BDESC (OPTION_MASK_ISA_SSE3, CODE_FOR_sse3_hsubv2df3, \"__builtin_ia32_hsubpd\", I\n \n /* SSSE3 */\n BDESC (OPTION_MASK_ISA_SSSE3, CODE_FOR_absv16qi2, \"__builtin_ia32_pabsb128\", IX86_BUILTIN_PABSB128, UNKNOWN, (int) V16QI_FTYPE_V16QI)\n-BDESC (OPTION_MASK_ISA_SSSE3, CODE_FOR_absv8qi2, \"__builtin_ia32_pabsb\", IX86_BUILTIN_PABSB, UNKNOWN, (int) V8QI_FTYPE_V8QI)\n+BDESC (OPTION_MASK_ISA_SSSE3 | OPTION_MASK_ISA_MMX, CODE_FOR_absv8qi2, \"__builtin_ia32_pabsb\", IX86_BUILTIN_PABSB, UNKNOWN, (int) V8QI_FTYPE_V8QI)\n BDESC (OPTION_MASK_ISA_SSSE3, CODE_FOR_absv8hi2, \"__builtin_ia32_pabsw128\", IX86_BUILTIN_PABSW128, UNKNOWN, (int) V8HI_FTYPE_V8HI)\n-BDESC (OPTION_MASK_ISA_SSSE3, CODE_FOR_absv4hi2, \"__builtin_ia32_pabsw\", IX86_BUILTIN_PABSW, UNKNOWN, (int) V4HI_FTYPE_V4HI)\n+BDESC (OPTION_MASK_ISA_SSSE3 | OPTION_MASK_ISA_MMX, CODE_FOR_absv4hi2, \"__builtin_ia32_pabsw\", IX86_BUILTIN_PABSW, UNKNOWN, (int) V4HI_FTYPE_V4HI)\n BDESC (OPTION_MASK_ISA_SSSE3, CODE_FOR_absv4si2, \"__builtin_ia32_pabsd128\", IX86_BUILTIN_PABSD128, UNKNOWN, (int) V4SI_FTYPE_V4SI)\n-BDESC (OPTION_MASK_ISA_SSSE3, CODE_FOR_absv2si2, \"__builtin_ia32_pabsd\", IX86_BUILTIN_PABSD, UNKNOWN, (int) V2SI_FTYPE_V2SI)\n+BDESC (OPTION_MASK_ISA_SSSE3 | OPTION_MASK_ISA_MMX, CODE_FOR_absv2si2, \"__builtin_ia32_pabsd\", IX86_BUILTIN_PABSD, UNKNOWN, (int) V2SI_FTYPE_V2SI)\n \n BDESC (OPTION_MASK_ISA_SSSE3, CODE_FOR_ssse3_phaddwv8hi3, \"__builtin_ia32_phaddw128\", IX86_BUILTIN_PHADDW128, UNKNOWN, (int) V8HI_FTYPE_V8HI_V8HI)\n-BDESC (OPTION_MASK_ISA_SSSE3, CODE_FOR_ssse3_phaddwv4hi3, \"__builtin_ia32_phaddw\", IX86_BUILTIN_PHADDW, UNKNOWN, (int) V4HI_FTYPE_V4HI_V4HI)\n+BDESC (OPTION_MASK_ISA_SSSE3 | OPTION_MASK_ISA_MMX, CODE_FOR_ssse3_phaddwv4hi3, \"__builtin_ia32_phaddw\", IX86_BUILTIN_PHADDW, UNKNOWN, (int) V4HI_FTYPE_V4HI_V4HI)\n BDESC (OPTION_MASK_ISA_SSSE3, CODE_FOR_ssse3_phadddv4si3, \"__builtin_ia32_phaddd128\", IX86_BUILTIN_PHADDD128, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI)\n-BDESC (OPTION_MASK_ISA_SSSE3, CODE_FOR_ssse3_phadddv2si3, \"__builtin_ia32_phaddd\", IX86_BUILTIN_PHADDD, UNKNOWN, (int) V2SI_FTYPE_V2SI_V2SI)\n+BDESC (OPTION_MASK_ISA_SSSE3 | OPTION_MASK_ISA_MMX, CODE_FOR_ssse3_phadddv2si3, \"__builtin_ia32_phaddd\", IX86_BUILTIN_PHADDD, UNKNOWN, (int) V2SI_FTYPE_V2SI_V2SI)\n BDESC (OPTION_MASK_ISA_SSSE3, CODE_FOR_ssse3_phaddswv8hi3, \"__builtin_ia32_phaddsw128\", IX86_BUILTIN_PHADDSW128, UNKNOWN, (int) V8HI_FTYPE_V8HI_V8HI)\n-BDESC (OPTION_MASK_ISA_SSSE3, CODE_FOR_ssse3_phaddswv4hi3, \"__builtin_ia32_phaddsw\", IX86_BUILTIN_PHADDSW, UNKNOWN, (int) V4HI_FTYPE_V4HI_V4HI)\n+BDESC (OPTION_MASK_ISA_SSSE3 | OPTION_MASK_ISA_MMX, CODE_FOR_ssse3_phaddswv4hi3, \"__builtin_ia32_phaddsw\", IX86_BUILTIN_PHADDSW, UNKNOWN, (int) V4HI_FTYPE_V4HI_V4HI)\n BDESC (OPTION_MASK_ISA_SSSE3, CODE_FOR_ssse3_phsubwv8hi3, \"__builtin_ia32_phsubw128\", IX86_BUILTIN_PHSUBW128, UNKNOWN, (int) V8HI_FTYPE_V8HI_V8HI)\n-BDESC (OPTION_MASK_ISA_SSSE3, CODE_FOR_ssse3_phsubwv4hi3, \"__builtin_ia32_phsubw\", IX86_BUILTIN_PHSUBW, UNKNOWN, (int) V4HI_FTYPE_V4HI_V4HI)\n+BDESC (OPTION_MASK_ISA_SSSE3 | OPTION_MASK_ISA_MMX, CODE_FOR_ssse3_phsubwv4hi3, \"__builtin_ia32_phsubw\", IX86_BUILTIN_PHSUBW, UNKNOWN, (int) V4HI_FTYPE_V4HI_V4HI)\n BDESC (OPTION_MASK_ISA_SSSE3, CODE_FOR_ssse3_phsubdv4si3, \"__builtin_ia32_phsubd128\", IX86_BUILTIN_PHSUBD128, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI)\n-BDESC (OPTION_MASK_ISA_SSSE3, CODE_FOR_ssse3_phsubdv2si3, \"__builtin_ia32_phsubd\", IX86_BUILTIN_PHSUBD, UNKNOWN, (int) V2SI_FTYPE_V2SI_V2SI)\n+BDESC (OPTION_MASK_ISA_SSSE3 | OPTION_MASK_ISA_MMX, CODE_FOR_ssse3_phsubdv2si3, \"__builtin_ia32_phsubd\", IX86_BUILTIN_PHSUBD, UNKNOWN, (int) V2SI_FTYPE_V2SI_V2SI)\n BDESC (OPTION_MASK_ISA_SSSE3, CODE_FOR_ssse3_phsubswv8hi3, \"__builtin_ia32_phsubsw128\", IX86_BUILTIN_PHSUBSW128, UNKNOWN, (int) V8HI_FTYPE_V8HI_V8HI)\n-BDESC (OPTION_MASK_ISA_SSSE3, CODE_FOR_ssse3_phsubswv4hi3, \"__builtin_ia32_phsubsw\", IX86_BUILTIN_PHSUBSW, UNKNOWN, (int) V4HI_FTYPE_V4HI_V4HI)\n+BDESC (OPTION_MASK_ISA_SSSE3 | OPTION_MASK_ISA_MMX, CODE_FOR_ssse3_phsubswv4hi3, \"__builtin_ia32_phsubsw\", IX86_BUILTIN_PHSUBSW, UNKNOWN, (int) V4HI_FTYPE_V4HI_V4HI)\n BDESC (OPTION_MASK_ISA_SSSE3, CODE_FOR_ssse3_pmaddubsw128, \"__builtin_ia32_pmaddubsw128\", IX86_BUILTIN_PMADDUBSW128, UNKNOWN, (int) V8HI_FTYPE_V16QI_V16QI)\n-BDESC (OPTION_MASK_ISA_SSSE3, CODE_FOR_ssse3_pmaddubsw, \"__builtin_ia32_pmaddubsw\", IX86_BUILTIN_PMADDUBSW, UNKNOWN, (int) V4HI_FTYPE_V8QI_V8QI)\n+BDESC (OPTION_MASK_ISA_SSSE3 | OPTION_MASK_ISA_MMX, CODE_FOR_ssse3_pmaddubsw, \"__builtin_ia32_pmaddubsw\", IX86_BUILTIN_PMADDUBSW, UNKNOWN, (int) V4HI_FTYPE_V8QI_V8QI)\n BDESC (OPTION_MASK_ISA_SSSE3, CODE_FOR_ssse3_pmulhrswv8hi3, \"__builtin_ia32_pmulhrsw128\", IX86_BUILTIN_PMULHRSW128, UNKNOWN, (int) V8HI_FTYPE_V8HI_V8HI)\n-BDESC (OPTION_MASK_ISA_SSSE3, CODE_FOR_ssse3_pmulhrswv4hi3, \"__builtin_ia32_pmulhrsw\", IX86_BUILTIN_PMULHRSW, UNKNOWN, (int) V4HI_FTYPE_V4HI_V4HI)\n+BDESC (OPTION_MASK_ISA_SSSE3 | OPTION_MASK_ISA_MMX, CODE_FOR_ssse3_pmulhrswv4hi3, \"__builtin_ia32_pmulhrsw\", IX86_BUILTIN_PMULHRSW, UNKNOWN, (int) V4HI_FTYPE_V4HI_V4HI)\n BDESC (OPTION_MASK_ISA_SSSE3, CODE_FOR_ssse3_pshufbv16qi3, \"__builtin_ia32_pshufb128\", IX86_BUILTIN_PSHUFB128, UNKNOWN, (int) V16QI_FTYPE_V16QI_V16QI)\n-BDESC (OPTION_MASK_ISA_SSSE3, CODE_FOR_ssse3_pshufbv8qi3, \"__builtin_ia32_pshufb\", IX86_BUILTIN_PSHUFB, UNKNOWN, (int) V8QI_FTYPE_V8QI_V8QI)\n+BDESC (OPTION_MASK_ISA_SSSE3 | OPTION_MASK_ISA_MMX, CODE_FOR_ssse3_pshufbv8qi3, \"__builtin_ia32_pshufb\", IX86_BUILTIN_PSHUFB, UNKNOWN, (int) V8QI_FTYPE_V8QI_V8QI)\n BDESC (OPTION_MASK_ISA_SSSE3, CODE_FOR_ssse3_psignv16qi3, \"__builtin_ia32_psignb128\", IX86_BUILTIN_PSIGNB128, UNKNOWN, (int) V16QI_FTYPE_V16QI_V16QI)\n-BDESC (OPTION_MASK_ISA_SSSE3, CODE_FOR_ssse3_psignv8qi3, \"__builtin_ia32_psignb\", IX86_BUILTIN_PSIGNB, UNKNOWN, (int) V8QI_FTYPE_V8QI_V8QI)\n+BDESC (OPTION_MASK_ISA_SSSE3 | OPTION_MASK_ISA_MMX, CODE_FOR_ssse3_psignv8qi3, \"__builtin_ia32_psignb\", IX86_BUILTIN_PSIGNB, UNKNOWN, (int) V8QI_FTYPE_V8QI_V8QI)\n BDESC (OPTION_MASK_ISA_SSSE3, CODE_FOR_ssse3_psignv8hi3, \"__builtin_ia32_psignw128\", IX86_BUILTIN_PSIGNW128, UNKNOWN, (int) V8HI_FTYPE_V8HI_V8HI)\n-BDESC (OPTION_MASK_ISA_SSSE3, CODE_FOR_ssse3_psignv4hi3, \"__builtin_ia32_psignw\", IX86_BUILTIN_PSIGNW, UNKNOWN, (int) V4HI_FTYPE_V4HI_V4HI)\n+BDESC (OPTION_MASK_ISA_SSSE3 | OPTION_MASK_ISA_MMX, CODE_FOR_ssse3_psignv4hi3, \"__builtin_ia32_psignw\", IX86_BUILTIN_PSIGNW, UNKNOWN, (int) V4HI_FTYPE_V4HI_V4HI)\n BDESC (OPTION_MASK_ISA_SSSE3, CODE_FOR_ssse3_psignv4si3, \"__builtin_ia32_psignd128\", IX86_BUILTIN_PSIGND128, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI)\n-BDESC (OPTION_MASK_ISA_SSSE3, CODE_FOR_ssse3_psignv2si3, \"__builtin_ia32_psignd\", IX86_BUILTIN_PSIGND, UNKNOWN, (int) V2SI_FTYPE_V2SI_V2SI)\n+BDESC (OPTION_MASK_ISA_SSSE3 | OPTION_MASK_ISA_MMX, CODE_FOR_ssse3_psignv2si3, \"__builtin_ia32_psignd\", IX86_BUILTIN_PSIGND, UNKNOWN, (int) V2SI_FTYPE_V2SI_V2SI)\n \n /* SSSE3.  */\n BDESC (OPTION_MASK_ISA_SSSE3, CODE_FOR_ssse3_palignrti, \"__builtin_ia32_palignr128\", IX86_BUILTIN_PALIGNR128, UNKNOWN, (int) V2DI_FTYPE_V2DI_V2DI_INT_CONVERT)\n-BDESC (OPTION_MASK_ISA_SSSE3, CODE_FOR_ssse3_palignrdi, \"__builtin_ia32_palignr\", IX86_BUILTIN_PALIGNR, UNKNOWN, (int) V1DI_FTYPE_V1DI_V1DI_INT_CONVERT)\n+BDESC (OPTION_MASK_ISA_SSSE3 | OPTION_MASK_ISA_MMX, CODE_FOR_ssse3_palignrdi, \"__builtin_ia32_palignr\", IX86_BUILTIN_PALIGNR, UNKNOWN, (int) V1DI_FTYPE_V1DI_V1DI_INT_CONVERT)\n \n /* SSE4.1 */\n BDESC (OPTION_MASK_ISA_SSE4_1, CODE_FOR_sse4_1_blendpd, \"__builtin_ia32_blendpd\", IX86_BUILTIN_BLENDPD, UNKNOWN, (int) V2DF_FTYPE_V2DF_V2DF_INT)"}, {"sha": "7abda92bf01de895801044ace90b5ee444b8a162", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 18, "deletions": 7, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71a84d92e1490290fdbf7a2a2b8ec499917e88ae/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71a84d92e1490290fdbf7a2a2b8ec499917e88ae/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=71a84d92e1490290fdbf7a2a2b8ec499917e88ae", "patch": "@@ -32988,7 +32988,9 @@ ix86_init_mmx_sse_builtins (void)\n \t\t    UNSIGNED_FTYPE_VOID, IX86_BUILTIN_STMXCSR);\n \n   /* SSE or 3DNow!A */\n-  def_builtin (OPTION_MASK_ISA_SSE | OPTION_MASK_ISA_3DNOW_A,\n+  def_builtin (OPTION_MASK_ISA_SSE | OPTION_MASK_ISA_3DNOW_A\n+\t       /* As it uses V4HImode, we have to require -mmmx too.  */\n+\t       | OPTION_MASK_ISA_MMX,\n \t       \"__builtin_ia32_maskmovq\", VOID_FTYPE_V8QI_V8QI_PCHAR,\n \t       IX86_BUILTIN_MASKMOVQ);\n \n@@ -33426,7 +33428,9 @@ ix86_init_mmx_sse_builtins (void)\n   def_builtin_const (OPTION_MASK_ISA_SSE2, \"__builtin_ia32_vec_ext_v8hi\",\n \t\t     HI_FTYPE_V8HI_INT, IX86_BUILTIN_VEC_EXT_V8HI);\n \n-  def_builtin_const (OPTION_MASK_ISA_SSE | OPTION_MASK_ISA_3DNOW_A,\n+  def_builtin_const (OPTION_MASK_ISA_SSE | OPTION_MASK_ISA_3DNOW_A\n+\t\t     /* As it uses V4HImode, we have to require -mmmx too.  */\n+\t\t     | OPTION_MASK_ISA_MMX,\n \t\t     \"__builtin_ia32_vec_ext_v4hi\",\n \t\t     HI_FTYPE_V4HI_INT, IX86_BUILTIN_VEC_EXT_V4HI);\n \n@@ -33450,7 +33454,9 @@ ix86_init_mmx_sse_builtins (void)\n   def_builtin_const (OPTION_MASK_ISA_SSE2, \"__builtin_ia32_vec_set_v8hi\",\n \t\t     V8HI_FTYPE_V8HI_HI_INT, IX86_BUILTIN_VEC_SET_V8HI);\n \n-  def_builtin_const (OPTION_MASK_ISA_SSE | OPTION_MASK_ISA_3DNOW_A,\n+  def_builtin_const (OPTION_MASK_ISA_SSE | OPTION_MASK_ISA_3DNOW_A\n+\t\t     /* As it uses V4HImode, we have to require -mmmx too.  */\n+\t\t     | OPTION_MASK_ISA_MMX,\n \t\t     \"__builtin_ia32_vec_set_v4hi\",\n \t\t     V4HI_FTYPE_V4HI_HI_INT, IX86_BUILTIN_VEC_SET_V4HI);\n \n@@ -37914,18 +37920,23 @@ ix86_expand_builtin (tree exp, rtx target, rtx subtarget,\n      Originally the builtin was not created if it wasn't applicable to the\n      current ISA based on the command line switches.  With function specific\n      options, we need to check in the context of the function making the call\n-     whether it is supported.  Treat AVX512VL specially.  For other flags,\n+     whether it is supported.  Treat AVX512VL and MMX specially.  For other flags,\n      if isa includes more than one ISA bit, treat those are requiring any\n      of them.  For AVX512VL, require both AVX512VL and the non-AVX512VL\n-     ISAs.  Similarly for 64BIT, but we shouldn't be building such builtins\n+     ISAs.  Likewise for MMX, require both MMX and the non-MMX ISAs.\n+     Similarly for 64BIT, but we shouldn't be building such builtins\n      at all, -m64 is a whole TU option.  */\n   if (((ix86_builtins_isa[fcode].isa\n-\t& ~(OPTION_MASK_ISA_AVX512VL | OPTION_MASK_ISA_64BIT))\n+\t& ~(OPTION_MASK_ISA_AVX512VL | OPTION_MASK_ISA_MMX\n+\t    | OPTION_MASK_ISA_64BIT))\n        && !(ix86_builtins_isa[fcode].isa\n-\t    & ~(OPTION_MASK_ISA_AVX512VL | OPTION_MASK_ISA_64BIT)\n+\t    & ~(OPTION_MASK_ISA_AVX512VL | OPTION_MASK_ISA_MMX\n+\t\t| OPTION_MASK_ISA_64BIT)\n \t    & ix86_isa_flags))\n       || ((ix86_builtins_isa[fcode].isa & OPTION_MASK_ISA_AVX512VL)\n \t  && !(ix86_isa_flags & OPTION_MASK_ISA_AVX512VL))\n+      || ((ix86_builtins_isa[fcode].isa & OPTION_MASK_ISA_MMX)\n+\t  && !(ix86_isa_flags & OPTION_MASK_ISA_MMX))\n       || (ix86_builtins_isa[fcode].isa2\n \t  && !(ix86_builtins_isa[fcode].isa2 & ix86_isa_flags2)))\n     {"}, {"sha": "57d38e0196fea53a5c37735eb5d4a520c4d5560c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71a84d92e1490290fdbf7a2a2b8ec499917e88ae/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71a84d92e1490290fdbf7a2a2b8ec499917e88ae/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=71a84d92e1490290fdbf7a2a2b8ec499917e88ae", "patch": "@@ -1,3 +1,10 @@\n+2017-10-10  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/79565\n+\tPR target/82483\n+\t* gcc.target/i386/pr82483-1.c: New test.\n+\t* gcc.target/i386/pr82483-2.c: New test.\n+\n 2017-10-10  Will Schmidt <will_schmidt@vnet.ibm.com>\n \n \t* gcc.target/powerpc/fold-vec-mult-int128-p8.c: Update options"}, {"sha": "59a59dc8dfe4268c9f81760c6f77c105790e6666", "filename": "gcc/testsuite/gcc.target/i386/pr82483-1.c", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71a84d92e1490290fdbf7a2a2b8ec499917e88ae/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr82483-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71a84d92e1490290fdbf7a2a2b8ec499917e88ae/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr82483-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr82483-1.c?ref=71a84d92e1490290fdbf7a2a2b8ec499917e88ae", "patch": "@@ -0,0 +1,44 @@\n+/* PR target/82483 */\n+/* { dg-do compile } */\n+/* { dg-options \"-mssse3 -mno-mmx -Wno-psabi\" } */\n+/* { dg-error \"needs isa option\" \"\" { target *-*-* } 0 } */\n+\n+#include <x86intrin.h>\n+\n+void f1 (__m64 x, __m64 y, char *z) { _mm_maskmove_si64 (x, y, z); }\n+int f2 (__m64 x) { return _mm_extract_pi16 (x, 1); }\n+__m64 f3 (__m64 x, int y) { return _mm_insert_pi16 (x, y, 1); }\n+__m64 f4 (__m128 x) { return _mm_cvtps_pi32 (x); }\n+__m64 f5 (__m128 x) { return _mm_cvttps_pi32 (x); }\n+__m128 f6 (__m128 x, __m64 y) { return _mm_cvtpi32_ps (x, y); }\n+__m64 f7 (__m64 x, __m64 y) { return _mm_avg_pu8 (x, y); }\n+__m64 f8 (__m64 x, __m64 y) { return _mm_avg_pu16 (x, y); }\n+__m64 f9 (__m64 x, __m64 y) { return _mm_mulhi_pu16 (x, y); }\n+__m64 f10 (__m64 x, __m64 y) { return _mm_max_pu8 (x, y); }\n+__m64 f11 (__m64 x, __m64 y) { return _mm_max_pi16 (x, y); }\n+__m64 f12 (__m64 x, __m64 y) { return _mm_min_pu8 (x, y); }\n+__m64 f13 (__m64 x, __m64 y) { return _mm_min_pi16 (x, y); }\n+__m64 f14 (__m64 x, __m64 y) { return _mm_sad_pu8 (x, y); }\n+int f15 (__m64 x) { return _mm_movemask_pi8 (x); }\n+__m64 f16 (__m64 x) { return _mm_shuffle_pi16 (x, 1); }\n+__m64 f17 (__m128d x) { return _mm_cvtpd_pi32 (x); }\n+__m64 f18 (__m128d x) { return _mm_cvttpd_pi32 (x); }\n+__m128d f19 (__m64 x) { return _mm_cvtpi32_pd (x); }\n+__m64 f20 (__m64 x, __m64 y) { return _mm_mul_su32 (x, y); }\n+__m64 f21 (__m64 x) { return _mm_abs_pi8 (x); }\n+__m64 f22 (__m64 x) { return _mm_abs_pi16 (x); }\n+__m64 f23 (__m64 x) { return _mm_abs_pi32 (x); }\n+__m64 f24 (__m64 x, __m64 y) { return _mm_hadd_pi16 (x, y); }\n+__m64 f25 (__m64 x, __m64 y) { return _mm_hadd_pi32 (x, y); }\n+__m64 f26 (__m64 x, __m64 y) { return _mm_hadds_pi16 (x, y); }\n+__m64 f27 (__m64 x, __m64 y) { return _mm_hsub_pi16 (x, y); }\n+__m64 f28 (__m64 x, __m64 y) { return _mm_hsub_pi32 (x, y); }\n+__m64 f29 (__m64 x, __m64 y) { return _mm_hsubs_pi16 (x, y); }\n+__m64 f30 (__m64 x, __m64 y) { return _mm_maddubs_pi16 (x, y); }\n+__m64 f31 (__m64 x, __m64 y) { return _mm_mulhrs_pi16 (x, y); }\n+__m64 f32 (__m64 x, __m64 y) { return _mm_shuffle_pi8 (x, y); }\n+__m64 f33 (__m64 x, __m64 y) { return _mm_sign_pi8 (x, y); }\n+__m64 f34 (__m64 x, __m64 y) { return _mm_sign_pi16 (x, y); }\n+__m64 f35 (__m64 x, __m64 y) { return _mm_sign_pi32 (x, y); }\n+void f36 (__m64 *x, __m64 y) { _mm_stream_pi (x, y); }\n+__m64 f37 (__m64 x, __m64 y) { return _mm_alignr_pi8 (x, y, 3); }"}, {"sha": "305ddbd6c64c336ec2b825162b0cbe48a7df96ae", "filename": "gcc/testsuite/gcc.target/i386/pr82483-2.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71a84d92e1490290fdbf7a2a2b8ec499917e88ae/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr82483-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71a84d92e1490290fdbf7a2a2b8ec499917e88ae/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr82483-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr82483-2.c?ref=71a84d92e1490290fdbf7a2a2b8ec499917e88ae", "patch": "@@ -0,0 +1,9 @@\n+/* PR target/82483 */\n+/* { dg-do compile } */\n+/* { dg-options \"-mssse3 -mno-mmx -Wno-psabi\" } */\n+/* { dg-error \"needs isa option\" \"\" { target *-*-* } 0 } */\n+\n+#include <x86intrin.h>\n+\n+__v1di f1 (__v1di x, __v1di y) { return __builtin_ia32_paddq (x, y); }\n+__v1di f2 (__v1di x, __v1di y) { return __builtin_ia32_psubq (x, y); }"}]}