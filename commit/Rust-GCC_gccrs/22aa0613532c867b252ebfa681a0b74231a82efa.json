{"sha": "22aa0613532c867b252ebfa681a0b74231a82efa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjJhYTA2MTM1MzJjODY3YjI1MmViZmE2ODFhMGI3NDIzMWE4MmVmYQ==", "commit": {"author": {"name": "Tom de Vries", "email": "tdevries@suse.de", "date": "2018-12-19T10:16:51Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2018-12-19T10:16:51Z"}, "message": "[nvptx] Only use one logical barrier resource\n\nFor openacc loops, we generate this style of code:\n...\n        @%r41   bra.uni $L5;\n        @%r40   bra     $L6;\n                mov.u64 %r32, %ar0;\n                cvta.shared.u64 %r39, __worker_bcast;\n                st.u64  [%r39], %r32;\n$L6:\n$L5:\n                bar.sync        0;\n        @%r40   bra     $L4;\n                cvta.shared.u64 %r38, __worker_bcast;\n                ld.u64  %r32, [%r38];\n                ...\n$L4:\n                bar.sync        1;\n...\n\nThe first barrier is there to ensure that no thread reads the broadcast buffer\nbefore it's written.  The second barrier is there to ensure that no thread\noverwrites the broadcast buffer before all threads have read it (as well as\nimplementing the obligatory synchronization after a worker loop).\n\nWe've been using the logical barrier resources '0' and '1' for these two\nbarriers, but there's no reason why we can't use the same one.\n\nUse logical barrier resource '0' for both barriers, making the openacc\nimplementation claim less resources.\n\nBuild and reg-tested on x86_64 with nvptx accelerator.\n\n2018-12-19  Tom de Vries  <tdevries@suse.de>\n\n\t* config/nvptx/nvptx.c (nvptx_single): Always pass false to\n\tnvptx_wsync.\n\t(nvptx_process_pars): Likewise.\n\nFrom-SVN: r267257", "tree": {"sha": "eccf2f6784d32219c737be2665f0f97cf03fbbec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eccf2f6784d32219c737be2665f0f97cf03fbbec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/22aa0613532c867b252ebfa681a0b74231a82efa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22aa0613532c867b252ebfa681a0b74231a82efa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22aa0613532c867b252ebfa681a0b74231a82efa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22aa0613532c867b252ebfa681a0b74231a82efa/comments", "author": {"login": "vries", "id": 4057235, "node_id": "MDQ6VXNlcjQwNTcyMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vries", "html_url": "https://github.com/vries", "followers_url": "https://api.github.com/users/vries/followers", "following_url": "https://api.github.com/users/vries/following{/other_user}", "gists_url": "https://api.github.com/users/vries/gists{/gist_id}", "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vries/subscriptions", "organizations_url": "https://api.github.com/users/vries/orgs", "repos_url": "https://api.github.com/users/vries/repos", "events_url": "https://api.github.com/users/vries/events{/privacy}", "received_events_url": "https://api.github.com/users/vries/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "43be05f54315b889662bb4f8c085cce301a03862", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43be05f54315b889662bb4f8c085cce301a03862", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43be05f54315b889662bb4f8c085cce301a03862"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "9596b26860c925ad99f8b0f9bf8a9cbe6b49b207", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22aa0613532c867b252ebfa681a0b74231a82efa/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22aa0613532c867b252ebfa681a0b74231a82efa/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=22aa0613532c867b252ebfa681a0b74231a82efa", "patch": "@@ -1,3 +1,9 @@\n+2018-12-19  Tom de Vries  <tdevries@suse.de>\n+\n+\t* config/nvptx/nvptx.c (nvptx_single): Always pass false to\n+\tnvptx_wsync.\n+\t(nvptx_process_pars): Likewise.\n+\n 2018-12-19  Tom de Vries  <tdevries@suse.de>\n \n \t* config/nvptx/nvptx.c (nvptx_previous_fndecl): Declare."}, {"sha": "a354811194c57064bbe0e67f6cb6cda0cec96aad", "filename": "gcc/config/nvptx/nvptx.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22aa0613532c867b252ebfa681a0b74231a82efa/gcc%2Fconfig%2Fnvptx%2Fnvptx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22aa0613532c867b252ebfa681a0b74231a82efa/gcc%2Fconfig%2Fnvptx%2Fnvptx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnvptx%2Fnvptx.c?ref=22aa0613532c867b252ebfa681a0b74231a82efa", "patch": "@@ -4351,7 +4351,7 @@ nvptx_single (unsigned mask, basic_block from, basic_block to)\n \t  /* This barrier is needed to avoid worker zero clobbering\n \t     the broadcast buffer before all the other workers have\n \t     had a chance to read this instance of it.  */\n-\t  emit_insn_before (nvptx_wsync (true), tail);\n+\t  emit_insn_before (nvptx_wsync (false), tail);\n \t}\n \n       extract_insn (tail);\n@@ -4476,7 +4476,7 @@ nvptx_process_pars (parallel *par)\n \t{\n \t  /* Insert begin and end synchronizations.  */\n \t  emit_insn_before (nvptx_wsync (false), par->forked_insn);\n-\t  emit_insn_before (nvptx_wsync (true), par->join_insn);\n+\t  emit_insn_before (nvptx_wsync (false), par->join_insn);\n \t}\n     }\n   else if (par->mask & GOMP_DIM_MASK (GOMP_DIM_VECTOR))"}]}