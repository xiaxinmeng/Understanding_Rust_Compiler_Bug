{"sha": "9b8fd32ccaa15bf9b85fd3136b053b8c6546a415", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWI4ZmQzMmNjYWExNWJmOWI4NWZkMzEzNmIwNTNiOGM2NTQ2YTQxNQ==", "commit": {"author": {"name": "Phil Edwards", "email": "pme@gcc.gnu.org", "date": "2001-01-23T17:02:28Z"}, "committer": {"name": "Phil Edwards", "email": "pme@gcc.gnu.org", "date": "2001-01-23T17:02:28Z"}, "message": "acinclude.m4: Cosmetic changes only.\n\n2001-01-23  Phil Edwards  <pme@sources.redhat.com>\n\n\t* acinclude.m4:  Cosmetic changes only.\n\t* aclocal.m4:  Regenerated.\n\t* configure:  Regenerated.\n\t* configure.target:  Update documented list of changed variables.\n\t* docs/html/install.html:  Fix typo.\n\t* docs/html/20_util/howto.html:  More notes on auto_ptr.\n\t* docs/html/27_io/howto.html:  More notes on streabufs.\n\t* docs/html/faq/index.html:  Add rel_ops problem and mention the\n\t  DEC as(1) .subsection difficulty.\n\t* docs/html/faq/index.txt:  Regenerated.\n\nFrom-SVN: r39200", "tree": {"sha": "f614e3a98bb60ea927450bb794052ca9effbb5d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f614e3a98bb60ea927450bb794052ca9effbb5d8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9b8fd32ccaa15bf9b85fd3136b053b8c6546a415", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b8fd32ccaa15bf9b85fd3136b053b8c6546a415", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b8fd32ccaa15bf9b85fd3136b053b8c6546a415", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b8fd32ccaa15bf9b85fd3136b053b8c6546a415/comments", "author": null, "committer": null, "parents": [{"sha": "44f715c8ed9b5deeada97229f1e5833b7d326785", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44f715c8ed9b5deeada97229f1e5833b7d326785", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44f715c8ed9b5deeada97229f1e5833b7d326785"}], "stats": {"total": 2340, "additions": 1256, "deletions": 1084}, "files": [{"sha": "a995358e21b0c68f654317dcf94eb7119f2270da", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b8fd32ccaa15bf9b85fd3136b053b8c6546a415/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b8fd32ccaa15bf9b85fd3136b053b8c6546a415/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=9b8fd32ccaa15bf9b85fd3136b053b8c6546a415", "patch": "@@ -1,3 +1,28 @@\n+2001-01-23  Phil Edwards  <pme@sources.redhat.com>\n+\n+\t* acinclude.m4:  Cosmetic changes only.\n+\t* aclocal.m4:  Regenerated.\n+\t* configure:  Regenerated.\n+\t* configure.target:  Update documented list of changed variables.\n+\t* docs/html/install.html:  Fix typo.\n+\t* docs/html/20_util/howto.html:  More notes on auto_ptr.\n+\t* docs/html/27_io/howto.html:  More notes on streabufs.\n+\t* docs/html/faq/index.html:  Add rel_ops problem and mention the\n+\t  DEC as(1) .subsection difficulty.\n+\t* docs/html/faq/index.txt:  Regenerated.\n+\n+2001-01-23  Mark Mitchell  <mark@codesourcery.com>\n+\n+        * ainclude.m4 (GLIBCPP_CHEC_MATH_DECLS_AND_LINKAGE_1): New macro.\n+        (GLIBCPP_CHECK_MATH_SUPPORT): Use it.\n+        (GLIBCPP_CHECK_TYPE_SUPPORT): Don't autoconf ctype information if\n+        its already provided in config.target.\n+        * aclocal.m4: Regenerated.\n+        * configure: Likewise.\n+        * configure.target: Set ctype_include_dir for lots of systems.\n+        * libsupc++/Makefile.am: Explicitly include --tag disable-shared.\n+        * libsupc++/Makefile.in: Regenerated.\n+\n 2001-01-23  Gabriel Dos Reis  <gdr@codesourcery.com>\n \n \t* testsuite/lib/libstdc++.exp: Improve.  Add support for @xxx#"}, {"sha": "c8037fe899f8546548efe4c1fc2e37e1865f258a", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 22, "deletions": 22, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b8fd32ccaa15bf9b85fd3136b053b8c6546a415/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b8fd32ccaa15bf9b85fd3136b053b8c6546a415/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=9b8fd32ccaa15bf9b85fd3136b053b8c6546a415", "patch": "@@ -356,7 +356,7 @@ AC_DEFUN(GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_1, [\n dnl\n dnl Like GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_1, but does a bunch of\n dnl of functions at once.  It's an all-or-nothing check -- either \n-dnl HAVE_XYZ is defined for each of the functions, or for none of them\n+dnl HAVE_XYZ is defined for each of the functions, or for none of them.\n dnl Doing it this way saves significant configure time.\n AC_DEFUN(GLIBCPP_CHECK_MATH_DECLS_AND_LINKAGES_1, [\n   AC_MSG_CHECKING([for $1 functions])\n@@ -365,8 +365,8 @@ AC_DEFUN(GLIBCPP_CHECK_MATH_DECLS_AND_LINKAGES_1, [\n     AC_LANG_CPLUSPLUS\n     AC_TRY_COMPILE([#include <math.h>],\n                    [ `for x in $3; do echo \"$x (0);\"; done` ],\n-\t           [glibcpp_cv_func_$2_use=yes],\n-\t           [glibcpp_cv_func_$2_use=no])\n+                   [glibcpp_cv_func_$2_use=yes],\n+                   [glibcpp_cv_func_$2_use=no])\n     AC_LANG_RESTORE])\n   AC_MSG_RESULT($glibcpp_cv_func_$2_use)\n   if test x$glibcpp_cv_func_$2_use = x\"yes\"; then\n@@ -633,12 +633,12 @@ AC_DEFUN(GLIBCPP_CHECK_MATH_SUPPORT, [\n \n   dnl Check to see if basic C math functions have float versions.\n   GLIBCPP_CHECK_MATH_DECLS_AND_LINKAGES_1(float trig,\n-\t                                  float_trig,\n-\t                                  acosf asinf atanf \\\n+                                          float_trig,\n+                                          acosf asinf atanf \\\n                                           cosf sinf tanf \\\n-\t                                  coshf sinhf tanhf)\n+                                          coshf sinhf tanhf)\n   GLIBCPP_CHECK_MATH_DECLS_AND_LINKAGES_1(float round,\n-\t                                  float_round,\n+                                          float_round,\n                                           ceilf floorf)\n   GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_1(isnanf)\n   GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_1(isinff)\n@@ -656,12 +656,12 @@ AC_DEFUN(GLIBCPP_CHECK_MATH_SUPPORT, [\n \n   dnl Check to see if basic C math functions have long double versions.\n   GLIBCPP_CHECK_MATH_DECLS_AND_LINKAGES_1(long double trig,\n-\t                                  long_double_trig,\n-\t                                  acosl asinl atanl \\\n+                                          long_double_trig,\n+                                          acosl asinl atanl \\\n                                           cosl sinl tanl \\\n-\t                                  coshl sinhl tanhl)\n+                                          coshl sinhl tanhl)\n   GLIBCPP_CHECK_MATH_DECLS_AND_LINKAGES_1(long double round,\n-\t                                  long_double_round,\n+                                          long_double_round,\n                                           ceill floorl)\n   GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_1(isnanl)\n   GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_1(isinfl)\n@@ -694,12 +694,12 @@ AC_DEFUN(GLIBCPP_CHECK_MATH_SUPPORT, [\n \n   dnl Check to see if basic C math functions have float versions.\n   GLIBCPP_CHECK_MATH_DECLS_AND_LINKAGES_1(_float trig,\n-\t                                  _float_trig,\n-\t                                  _acosf _asinf _atanf \\\n+                                          _float_trig,\n+                                          _acosf _asinf _atanf \\\n                                           _cosf _sinf _tanf \\\n-\t                                  _coshf _sinhf _tanhf)\n+                                          _coshf _sinhf _tanhf)\n   GLIBCPP_CHECK_MATH_DECLS_AND_LINKAGES_1(_float round,\n-\t                                  _float_round,\n+                                          _float_round,\n                                           _ceilf _floorf)\n   GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_1(_isnanf)\n   GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_1(_isinff)\n@@ -717,12 +717,12 @@ AC_DEFUN(GLIBCPP_CHECK_MATH_SUPPORT, [\n \n   dnl Check to see if basic C math functions have long double versions.\n   GLIBCPP_CHECK_MATH_DECLS_AND_LINKAGES_1(_long double trig,\n-\t                                  _long_double_trig,\n-\t                                  _acosl _asinl _atanl \\\n+                                          _long_double_trig,\n+                                          _acosl _asinl _atanl \\\n                                           _cosl _sinl _tanl \\\n-\t                                  _coshl _sinhl _tanhl)\n+                                          _coshl _sinhl _tanhl)\n   GLIBCPP_CHECK_MATH_DECLS_AND_LINKAGES_1(_long double round,\n-\t                                  _long_double_round,\n+                                          _long_double_round,\n                                           _ceill _floorl)\n   GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_1(_isnanl)\n   GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_1(_isinfl)\n@@ -1398,13 +1398,13 @@ changequote(<<, >>)dnl\n changequote([, ])\n   [case \"$enableval\" in\n    c) \n-\tenable_cheaders=c \n+        enable_cheaders=c \n         ;;\n    c_std)  \n-\tenable_cheaders=c_std \n+        enable_cheaders=c_std \n         ;;\n    c_shadow)  \n-\tenable_cheaders=c_shadow \n+        enable_cheaders=c_shadow \n         ;;\n    *)   AC_MSG_ERROR([Unknown argument to enable/disable \"C\" headers]) \n         ;;"}, {"sha": "d78d3a08fe556bd027fa28e04dde743aa4acc0b1", "filename": "libstdc++-v3/aclocal.m4", "status": "modified", "additions": 22, "deletions": 22, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b8fd32ccaa15bf9b85fd3136b053b8c6546a415/libstdc%2B%2B-v3%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b8fd32ccaa15bf9b85fd3136b053b8c6546a415/libstdc%2B%2B-v3%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Faclocal.m4?ref=9b8fd32ccaa15bf9b85fd3136b053b8c6546a415", "patch": "@@ -368,7 +368,7 @@ AC_DEFUN(GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_1, [\n dnl\n dnl Like GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_1, but does a bunch of\n dnl of functions at once.  It's an all-or-nothing check -- either \n-dnl HAVE_XYZ is defined for each of the functions, or for none of them\n+dnl HAVE_XYZ is defined for each of the functions, or for none of them.\n dnl Doing it this way saves significant configure time.\n AC_DEFUN(GLIBCPP_CHECK_MATH_DECLS_AND_LINKAGES_1, [\n   AC_MSG_CHECKING([for $1 functions])\n@@ -377,8 +377,8 @@ AC_DEFUN(GLIBCPP_CHECK_MATH_DECLS_AND_LINKAGES_1, [\n     AC_LANG_CPLUSPLUS\n     AC_TRY_COMPILE([#include <math.h>],\n                    [ `for x in $3; do echo \"$x (0);\"; done` ],\n-\t           [glibcpp_cv_func_$2_use=yes],\n-\t           [glibcpp_cv_func_$2_use=no])\n+                   [glibcpp_cv_func_$2_use=yes],\n+                   [glibcpp_cv_func_$2_use=no])\n     AC_LANG_RESTORE])\n   AC_MSG_RESULT($glibcpp_cv_func_$2_use)\n   if test x$glibcpp_cv_func_$2_use = x\"yes\"; then\n@@ -645,12 +645,12 @@ AC_DEFUN(GLIBCPP_CHECK_MATH_SUPPORT, [\n \n   dnl Check to see if basic C math functions have float versions.\n   GLIBCPP_CHECK_MATH_DECLS_AND_LINKAGES_1(float trig,\n-\t                                  float_trig,\n-\t                                  acosf asinf atanf \\\n+                                          float_trig,\n+                                          acosf asinf atanf \\\n                                           cosf sinf tanf \\\n-\t                                  coshf sinhf tanhf)\n+                                          coshf sinhf tanhf)\n   GLIBCPP_CHECK_MATH_DECLS_AND_LINKAGES_1(float round,\n-\t                                  float_round,\n+                                          float_round,\n                                           ceilf floorf)\n   GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_1(isnanf)\n   GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_1(isinff)\n@@ -668,12 +668,12 @@ AC_DEFUN(GLIBCPP_CHECK_MATH_SUPPORT, [\n \n   dnl Check to see if basic C math functions have long double versions.\n   GLIBCPP_CHECK_MATH_DECLS_AND_LINKAGES_1(long double trig,\n-\t                                  long_double_trig,\n-\t                                  acosl asinl atanl \\\n+                                          long_double_trig,\n+                                          acosl asinl atanl \\\n                                           cosl sinl tanl \\\n-\t                                  coshl sinhl tanhl)\n+                                          coshl sinhl tanhl)\n   GLIBCPP_CHECK_MATH_DECLS_AND_LINKAGES_1(long double round,\n-\t                                  long_double_round,\n+                                          long_double_round,\n                                           ceill floorl)\n   GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_1(isnanl)\n   GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_1(isinfl)\n@@ -706,12 +706,12 @@ AC_DEFUN(GLIBCPP_CHECK_MATH_SUPPORT, [\n \n   dnl Check to see if basic C math functions have float versions.\n   GLIBCPP_CHECK_MATH_DECLS_AND_LINKAGES_1(_float trig,\n-\t                                  _float_trig,\n-\t                                  _acosf _asinf _atanf \\\n+                                          _float_trig,\n+                                          _acosf _asinf _atanf \\\n                                           _cosf _sinf _tanf \\\n-\t                                  _coshf _sinhf _tanhf)\n+                                          _coshf _sinhf _tanhf)\n   GLIBCPP_CHECK_MATH_DECLS_AND_LINKAGES_1(_float round,\n-\t                                  _float_round,\n+                                          _float_round,\n                                           _ceilf _floorf)\n   GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_1(_isnanf)\n   GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_1(_isinff)\n@@ -729,12 +729,12 @@ AC_DEFUN(GLIBCPP_CHECK_MATH_SUPPORT, [\n \n   dnl Check to see if basic C math functions have long double versions.\n   GLIBCPP_CHECK_MATH_DECLS_AND_LINKAGES_1(_long double trig,\n-\t                                  _long_double_trig,\n-\t                                  _acosl _asinl _atanl \\\n+                                          _long_double_trig,\n+                                          _acosl _asinl _atanl \\\n                                           _cosl _sinl _tanl \\\n-\t                                  _coshl _sinhl _tanhl)\n+                                          _coshl _sinhl _tanhl)\n   GLIBCPP_CHECK_MATH_DECLS_AND_LINKAGES_1(_long double round,\n-\t                                  _long_double_round,\n+                                          _long_double_round,\n                                           _ceill _floorl)\n   GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_1(_isnanl)\n   GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_1(_isinfl)\n@@ -1410,13 +1410,13 @@ changequote(<<, >>)dnl\n changequote([, ])\n   [case \"$enableval\" in\n    c) \n-\tenable_cheaders=c \n+        enable_cheaders=c \n         ;;\n    c_std)  \n-\tenable_cheaders=c_std \n+        enable_cheaders=c_std \n         ;;\n    c_shadow)  \n-\tenable_cheaders=c_shadow \n+        enable_cheaders=c_shadow \n         ;;\n    *)   AC_MSG_ERROR([Unknown argument to enable/disable \"C\" headers]) \n         ;;"}, {"sha": "14aea7a32aba06d4b6c9f4b0daccdf30bd526ea5", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 832, "deletions": 821, "changes": 1653, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b8fd32ccaa15bf9b85fd3136b053b8c6546a415/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b8fd32ccaa15bf9b85fd3136b053b8c6546a415/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=9b8fd32ccaa15bf9b85fd3136b053b8c6546a415"}, {"sha": "28168cbca6c366d91a66658814a406d68d4d67f8", "filename": "libstdc++-v3/configure.target", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b8fd32ccaa15bf9b85fd3136b053b8c6546a415/libstdc%2B%2B-v3%2Fconfigure.target", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b8fd32ccaa15bf9b85fd3136b053b8c6546a415/libstdc%2B%2B-v3%2Fconfigure.target", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure.target?ref=9b8fd32ccaa15bf9b85fd3136b053b8c6546a415", "patch": "@@ -20,6 +20,7 @@\n #   glibcpp_cxxflags       Special CXXFLAGS to use when building\n #   cpu_include_dir        CPU-specific include directory, relative to srcdir\n #   os_include_dir         OS-specific include directory, relative to srcdir\n+#   ctype_include_dir      Platform-specific (usually OS) ctype include dir\n # The first two are set in configure.host and modified here.\n \n "}, {"sha": "e642ea79f623e47507f80398e771797ef1e32ca7", "filename": "libstdc++-v3/docs/html/20_util/howto.html", "status": "modified", "additions": 50, "deletions": 21, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b8fd32ccaa15bf9b85fd3136b053b8c6546a415/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F20_util%2Fhowto.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b8fd32ccaa15bf9b85fd3136b053b8c6546a415/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F20_util%2Fhowto.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F20_util%2Fhowto.html?ref=9b8fd32ccaa15bf9b85fd3136b053b8c6546a415", "patch": "@@ -8,7 +8,7 @@\n    <META NAME=\"GENERATOR\" CONTENT=\"vi and eight fingers\">\n    <TITLE>libstdc++-v3 HOWTO:  Chapter 20</TITLE>\n <LINK REL=StyleSheet HREF=\"../lib3styles.css\">\n-<!-- $Id: howto.html,v 1.4 2000/12/03 23:47:47 jsm28 Exp $ -->\n+<!-- $Id: howto.html,v 1.1 2000/12/10 04:04:54 pme Exp $ -->\n </HEAD>\n <BODY>\n \n@@ -24,7 +24,7 @@ <H1 CLASS=\"centered\"><A NAME=\"top\">Chapter 20:  General Utilities</A></H1>\n <H1>Contents</H1>\n <UL>\n    <LI><A HREF=\"#1\"><TT>auto_ptr</TT> is not omnipotent</A>\n-   <LI><A HREF=\"#2\">Automatically-generated operators</A>\n+   <LI><A HREF=\"#2\"><TT>auto_ptr</TT> inside container classes</A>\n    <LI><A HREF=\"#3\">Functors</A>\n    <LI><A HREF=\"#4\">Pairs</A>\n </UL>\n@@ -82,32 +82,61 @@ <H2><A NAME=\"1\"><TT>auto_ptr</TT> is not omnipotent</A></H2>\n       to one or many things.  If it points to many things, you are about\n       to die.  AP is trivial to write, however, so you could write your\n       own <TT>auto_array_ptr</TT> for that situation (in fact, this has\n-      been done many times; check the newsgroups, Usenet, Boost, etc).\n+      been done many times; check the mailing lists, Usenet, Boost, etc).\n    </P>\n    <P>Return <A HREF=\"#top\">to top of page</A> or\n       <A HREF=\"../faq/index.html\">to the FAQ</A>.\n    </P>\n \n <HR>\n-<H2><A NAME=\"2\">Automatically-generated operators</A></H2>\n-   <P>Many programs (for that matter, many of the Standard algorithms\n-      and containers) require that you write comparison operators for\n-      your classes, like <TT>operator&gt;=</TT>.  As any mathmatician\n-      will tell you, once you have defined equality and ordering, all\n-      of the other comparisons are easily defined in terms of those two.\n-   </P>\n-   <P>The Committee agrees.  So, once you have written\n-      <TT>operator==</TT> and <TT>operator&lt;</TT> for your class\n-      (whether they are global or member functions is up to you), you\n-      can have the compiler do the grunt-work of generating the rest:\n+<H2><A NAME=\"2\"><TT>auto_ptr</TT> inside container classes</A></H2>\n+   <P>All of the <A HREF=\"../23_containers/howto.html\">containers</A>\n+      described in the standard library require their contained types\n+      to have, among other things, a copy contructor like this:\n       <PRE>\n-    #include &lt;header_with_my_op==_and_op&lt;_defined&gt;\n-    #include &lt;utility&gt;\n-    using std::rel_ops;     // note the nested namespace!\n-\n-    ...\n-    if ((obj1 != obj2) || (obj3 >= obj4))  foo();\n+    struct My_Type\n+    {\n+\tMy_Type (My_Type const&amp;);\n+    };\n+      </PRE>\n+      Note the const keyword; the object being copied shouldn't change.\n+      The template class <TT>auto_ptr</TT> (called AP here) does not\n+      meet this requirement.  Creating a new AP by copying an existing\n+      one transfers ownership of the pointed-to object, which means that\n+      the AP being copied must change, which in turn means that the\n+      copy ctors of AP do not take const objects.\n+   </P>\n+   <P>The resulting rule is simple:  <EM>Never ever use a container of\n+      auto_ptr objects.</EM>  The standard says that undefined behavior\n+      is the result, but it is guaranteed to be messy.\n+   </P>\n+   <P>To prevent you from doing this to yourself, the\n+      <A HREF=\"../19_diagnostics/howto.html#3\">concept checks</A> built\n+      in to this implementation will issue an error if you try to\n+      compile code like this:\n+      <PRE>\n+    #include &lt;vector&gt;\n+    #include &lt;memory&gt;\n+    \n+    void f()\n+    {\n+\tstd::vector&lt; std::auto_ptr&lt;int&gt; &gt;   vec_ap_int;\n+    }\n+      </PRE>\n+      Should you try this, you will see an error along the lines of the\n+      following (look through the ugly line-wrapping):\n+      <PRE>\n+/installdir/include/g++-v3/bits/concept_checks.h: In\n+ static member function `static _Type\n+ <B>_STL_ERROR::__const_parameter_required_for_copy_constructor</B>(_Type, const\n+ _Type&amp;) [with _Type = std::auto_ptr&lt;int&gt;]':\n+/installdir/include/g++-v3/bits/concept_checks.h:383: passing\n+ `const std::auto_ptr&lt;int&gt;' as `this' argument of\n+ `std::auto_ptr&lt;_Tp&gt;::operator std::auto_ptr_ref&lt;_Tp1&gt;()\n+ [with _Tp1 = int, _Tp = int]' discards qualifiers\n       </PRE>\n+      See the highlighted error?  It starts with a message in all caps\n+      to get your attention.\n    </P>\n    <P>Return <A HREF=\"#top\">to top of page</A> or\n       <A HREF=\"../faq/index.html\">to the FAQ</A>.\n@@ -185,7 +214,7 @@ <H2><A NAME=\"4\">Pairs</A></H2>\n Comments and suggestions are welcome, and may be sent to\n <A HREF=\"mailto:pme@sources.redhat.com\">Phil Edwards</A> or\n <A HREF=\"mailto:gdr@gcc.gnu.org\">Gabriel Dos Reis</A>.\n-<BR> $Id: howto.html,v 1.4 2000/12/03 23:47:47 jsm28 Exp $\n+<BR> $Id: howto.html,v 1.1 2000/12/10 04:04:54 pme Exp $\n </EM></P>\n \n "}, {"sha": "1c47a2bbf1d42b1681cd2e3c62baf5a4ff78c4e9", "filename": "libstdc++-v3/docs/html/27_io/howto.html", "status": "modified", "additions": 58, "deletions": 2, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b8fd32ccaa15bf9b85fd3136b053b8c6546a415/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F27_io%2Fhowto.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b8fd32ccaa15bf9b85fd3136b053b8c6546a415/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F27_io%2Fhowto.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F27_io%2Fhowto.html?ref=9b8fd32ccaa15bf9b85fd3136b053b8c6546a415", "patch": "@@ -8,7 +8,7 @@\n    <META NAME=\"GENERATOR\" CONTENT=\"vi and eight fingers\">\n    <TITLE>libstdc++-v3 HOWTO:  Chapter 27</TITLE>\n <LINK REL=StyleSheet HREF=\"../lib3styles.css\">\n-<!-- $Id: howto.html,v 1.5 2000/12/03 23:47:49 jsm28 Exp $ -->\n+<!-- $Id: howto.html,v 1.1 2000/12/10 04:04:56 pme Exp $ -->\n </HEAD>\n <BODY>\n \n@@ -28,6 +28,7 @@ <H1>Contents</H1>\n    <LI><A HREF=\"#3\">Binary I/O</A>\n    <LI><A HREF=\"#4\">Iostreams class hierarchy diagram</A>\n    <LI><A HREF=\"#5\">What is this &lt;sstream&gt;/stringstreams thing?</A>\n+   <LI><A HREF=\"#6\">Deriving a stream buffer</A>\n </UL>\n \n <HR>\n@@ -327,6 +328,61 @@ <H2><A NAME=\"5\">What is this &lt;sstream&gt;/stringstreams thing?</A></H2>\n       support them, and 2) if you use them, people will laugh at you.\n    </P>\n \n+<HR>\n+<H2><A NAME=\"6\">Deriving a stream buffer</A></H2>\n+   <P>Creating your own stream buffers for I/O can be remarkably easy.\n+      If you are interested in doing so, we highly recommend two very\n+      excellent books:  <EM>Standard C++ IOStreams and Locales</EM> by\n+      Langer and Kreft, ISBN 0-201-18395-1, and\n+      <A HREF=\"http://www.josuttis.com/libbook/\">The C++ Standard Library</A>\n+      by Nicolai Josuttis, ISBN 0-201-37926-0.  Both are published by\n+      Addison-Wesley, who isn't paying us a cent for saying that, honest.\n+   </P>\n+   <P>Here is a simple example, io/outbuf1, from the Josuttis text.  It\n+      transforms everything sent through it to uppercase.  This version\n+      assumes many things about the nature of the character type being\n+      used (for more information, read the books or the newsgroups):\n+      <PRE>\n+    #include &lt;iostream&gt;\n+    #include &lt;streambuf&gt;\n+    #include &lt;locale&gt;\n+    #include &lt;cstdio&gt;\n+\n+    class outbuf : public std::streambuf\n+    {\n+      protected:\n+\t/* central output function\n+\t * - print characters in uppercase mode\n+\t */\n+\tvirtual int_type overflow (int_type c) {\n+\t    if (c != EOF) {\n+\t\t// convert lowercase to uppercase\n+\t\tc = std::toupper(static_cast&lt;char&gt;(c),getloc());\n+\n+\t\t// and write the character to the standard output\n+\t\tif (putchar(c) == EOF) {\n+\t\t    return EOF;\n+\t\t}\n+\t    }\n+\t    return c;\n+\t}\n+    };\n+\n+    int main()\n+    {\n+\t// create special output buffer\n+\toutbuf ob;\n+\t// initialize output stream with that output buffer\n+\tstd::ostream out(&ob);\n+\n+\tout &lt;&lt; \"31 hexadecimal: \"\n+\t    &lt;&lt; std::hex &lt;&lt; 31 &lt;&lt; std::endl;\n+\treturn 0;\n+    }\n+   </PRE>\n+      Try it yourself!\n+   </P>\n+\n \n <!-- ####################################################### -->\n \n@@ -335,7 +391,7 @@ <H2><A NAME=\"5\">What is this &lt;sstream&gt;/stringstreams thing?</A></H2>\n Comments and suggestions are welcome, and may be sent to\n <A HREF=\"mailto:pme@sources.redhat.com\">Phil Edwards</A> or\n <A HREF=\"mailto:gdr@gcc.gnu.org\">Gabriel Dos Reis</A>.\n-<BR> $Id: howto.html,v 1.5 2000/12/03 23:47:49 jsm28 Exp $\n+<BR> $Id: howto.html,v 1.1 2000/12/10 04:04:56 pme Exp $\n </EM></P>\n \n "}, {"sha": "a9b82250505e4c3ea6597da5a28edc4d6ce0bac8", "filename": "libstdc++-v3/docs/html/faq/index.html", "status": "modified", "additions": 29, "deletions": 3, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b8fd32ccaa15bf9b85fd3136b053b8c6546a415/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Ffaq%2Findex.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b8fd32ccaa15bf9b85fd3136b053b8c6546a415/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Ffaq%2Findex.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Ffaq%2Findex.html?ref=9b8fd32ccaa15bf9b85fd3136b053b8c6546a415", "patch": "@@ -9,7 +9,7 @@\n   ** Locations of \"the most recent snapshot is the Nth\" text are \n   ** answers 1_1, 1_4, 4_1, 5_6.\n -->\n-<!-- $Id: index.html,v 1.10 2000/12/03 23:47:49 jsm28 Exp $ -->\n+<!-- $Id: index.html,v 1.1 2000/12/10 04:04:56 pme Exp $ -->\n </HEAD>\n <BODY>\n \n@@ -53,6 +53,7 @@ <H1>Questions</H1>\n          <LI><A HREF=\"#3_1\">Can libstdc++-v3 be used with &lt;my\n                             favorite compiler&gt;?</A>\n          <LI><A HREF=\"#3_2\">Building under Cygwin hangs/explodes!?</A>\n+         <LI><A HREF=\"#3_3\">Building under DEC OSF kills the assembler</A>\n       </OL>\n \n    <LI><A HREF=\"#4_0\">Known Bugs and Non-Bugs</A>\n@@ -369,6 +370,22 @@ <H2><A NAME=\"3_2\">3.2 Building under Cygwin hangs/explodes!?</A></H2>\n          <A HREF=\"http://www.xraylith.wisc.edu/~khan/software/gnu-win32/libstdc++-v3.html\">Cygwin-related website</A>.\n       </P>\n \n+<HR>\n+   <H2><A NAME=\"3_3\">3.3 Building DEC OSF kills the assembler</A></H2>\n+      <P>The <TT>atomicity.h</TT> header for the Alpha processor\n+         currently uses pseudo-operators which the DEC assembler\n+\t doesn't understand (in particular, .subsection and .previous).\n+\t The simple solution is to install GNU <TT>as</TT> and arrange\n+\t for the GCC build to use it (or merge the sources and build\n+\t it during the bootstrap).\n+      </P>\n+      <P>Anyone who\n+         <A HREF=\"http://gcc.gnu.org/ml/libstdc++/2000-12/msg00279.html\">knows\n+\t the DEC assembler well enough</A> to provide the equivalent of\n+\t these two pseudos would win praise and accolades from many.\n+      </P>\n+\n+\n <HR>\n <H1><A NAME=\"4_0\">4.0 Known Bugs and Non-Bugs</A></H1>\n    <EM>Note that this section can get rapdily outdated -- such is the\n@@ -482,6 +499,15 @@ <H2><A NAME=\"4_4\">4.4 Things in libstdc++ that look like bugs</A></H2>\n          necessarily trying to be OO.  There are multiple solutions\n          under discussion.\n       </P>\n+      <P>Another is the <TT>rel_ops</TT> namespace and the template\n+         comparison operator functions contained therein.  If they become\n+\t visible in the same namespace as other comparison functions\n+\t (e.g., '<TT>using</TT>' them and the &lt;iterator&gt; header),\n+\t then you will suddenly be faced with huge numbers of ambiguity\n+\t errors.  This was discussed on the -v3 list; Nathan Myers\n+\t <A HREF=\"http://gcc.gnu.org/ml/libstdc++/2001-01/msg00247.html\">sums\n+\t things up here</A>.\n+      </P>\n       <H3><A NAME=\"4_4_interface\">The g++-3 headers are\n                                       <EM>not ours</EM></A></H3>\n       <P>If you have found an extremely broken header file which is\n@@ -572,7 +598,7 @@ <H2><A NAME=\"5_3\">5.3 What about the STL from SGI?</A></H2>\n          is merged into libstdc++-v3 with changes as necessary.  \n          Currently release 3.3 is being used.  Changes in the STL\n          usually produce some weird bugs and lots of changes in the\n-         rest of the libstd++ source as we scramble to keep up. :-)\n+         rest of the libstdc++ source as we scramble to keep up. :-)\n       </P>\n       <P>In particular, <TT>string</TT> is not from SGI and makes no\n          use of their &quot;rope&quot; class (which is included as an\n@@ -652,7 +678,7 @@ <H2><A NAME=\"5_7\">5.7 How do I get a copy of the ISO C++ Standard?</A></H2>\n Comments and suggestions are welcome, and may be sent to\n <A HREF=\"mailto:pme@sources.redhat.com\">Phil Edwards</A> or\n <A HREF=\"mailto:gdr@gcc.gnu.org\">Gabriel Dos Reis</A>.\n-<BR> $Id: index.html,v 1.10 2000/12/03 23:47:49 jsm28 Exp $\n+<BR> $Id: index.html,v 1.1 2000/12/10 04:04:56 pme Exp $\n </EM></P>\n \n "}, {"sha": "e1a8e388244b62d6a6d5ba2f6102787fadd3d5c2", "filename": "libstdc++-v3/docs/html/faq/index.txt", "status": "modified", "additions": 214, "deletions": 190, "changes": 404, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b8fd32ccaa15bf9b85fd3136b053b8c6546a415/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Ffaq%2Findex.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b8fd32ccaa15bf9b85fd3136b053b8c6546a415/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Ffaq%2Findex.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Ffaq%2Findex.txt?ref=9b8fd32ccaa15bf9b85fd3136b053b8c6546a415", "patch": "@@ -1,14 +1,14 @@\n \n                      libstdc++ Frequently Asked Questions\n-                                       \n+\n    The latest version of this document is always available at\n    [1]http://gcc.gnu.org/onlinedocs/libstdc++/faq/.\n-   \n+\n    To the [2]libstdc++-v3 homepage.\n      _________________________________________________________________\n-   \n+\n                                    Questions\n-                                       \n+\n     1. [3]General Information\n          1. [4]What is libstdc++-v3?\n          2. [5]Why should I use libstdc++?\n@@ -27,121 +27,122 @@\n     3. [17]Platform-Specific Issues\n          1. [18]Can libstdc++-v3 be used with <my favorite compiler>?\n          2. [19]Building under Cygwin hangs/explodes!?\n-    4. [20]Known Bugs and Non-Bugs\n-         1. [21]What works already?\n-         2. [22]Bugs in gcc/g++ (not libstdc++-v3)\n-         3. [23]Bugs in the C++ language/lib specification\n-         4. [24]Things in libstdc++ that look like bugs\n-            [25]The g++-3 headers are not ours\n-         5. [26]Aw, that's easy to fix!\n-    5. [27]Miscellaneous\n-         1. [28]string::iterator is not char*; vector<T>::iterator is not\n+         3. [20]Building under DEC OSF kills the assembler\n+    4. [21]Known Bugs and Non-Bugs\n+         1. [22]What works already?\n+         2. [23]Bugs in gcc/g++ (not libstdc++-v3)\n+         3. [24]Bugs in the C++ language/lib specification\n+         4. [25]Things in libstdc++ that look like bugs\n+            [26]The g++-3 headers are not ours\n+         5. [27]Aw, that's easy to fix!\n+    5. [28]Miscellaneous\n+         1. [29]string::iterator is not char*; vector<T>::iterator is not\n             T*\n-         2. [29]What's next after libstdc++-v3?\n-         3. [30]What about the STL from SGI?\n-         4. [31]Extensions and Backward Compatibility\n-         5. [32]Compiling with \"-fnew-abi\"\n-         6. [33]Is libstdc++-v3 thread-safe?\n-         7. [34]How do I get a copy of the ISO C++ Standard?\n+         2. [30]What's next after libstdc++-v3?\n+         3. [31]What about the STL from SGI?\n+         4. [32]Extensions and Backward Compatibility\n+         5. [33]Compiling with \"-fnew-abi\"\n+         6. [34]Is libstdc++-v3 thread-safe?\n+         7. [35]How do I get a copy of the ISO C++ Standard?\n      _________________________________________________________________\n-   \n+\n                             1.0 General Information\n-                                       \n+\n 1.1 What is libstdc++-v3?\n \n    The GNU Standard C++ Library v3, or libstdc++-2.90.x/2.9x, is an\n    ongoing project to implement the ISO 14882 Standard C++ library as\n    described in chapters 17 through 27 and annex D. As the library\n    reaches stable plateaus, it is captured in a snapshot and released.\n-   The current release is [35]the tenth snapshot. For those who want to\n+   The current release is [36]the tenth snapshot. For those who want to\n    see exactly how far the project has come, or just want the latest\n    bleeding-edge code, the up-to-date source is available over anonymous\n    CVS, and can even be browsed over the Web (see below).\n-   \n+\n    A more formal description of the V3 goals can be found in the official\n-   [36]design document.\n+   [37]design document.\n      _________________________________________________________________\n-   \n+\n 1.2 Why should I use libstdc++?\n \n    The completion of the ISO C++ standardization gave the C++ community a\n    powerful set of reuseable tools in the form of the C++ Standard\n    Library. However, all existing C++ implementations are (as the Draft\n    Standard used to say) \"incomplet and incorrekt,\" and many suffer from\n    limitations of the compilers that use them.\n-   \n+\n    The GNU C/C++/FORTRAN/<pick-a-language> compiler (gcc, g++, etc) is\n    widely considered to be one of the leading compilers in the world. Its\n-   development has recently been taken over by the [37]GCC team. All of\n-   the rapid development and near-legendary [38]portability that are the\n+   development has recently been taken over by the [38]GCC team. All of\n+   the rapid development and near-legendary [39]portability that are the\n    hallmarks of an open-source project are being applied to libstdc++.\n-   \n+\n    That means that all of the Standard classes and functions (such as\n    string, vector<>, iostreams, and algorithms) will be freely available\n    and fully compliant. Programmers will no longer need to \"roll their\n    own\" nor be worried about platform-specific incompatabilities.\n      _________________________________________________________________\n-   \n+\n 1.3 Who's in charge of it?\n \n    The libstdc++ project is contributed to by several developers all over\n    the world, in the same way as GCC or Linux. Benjamin Kosnik, Gabriel\n    Dos Reis, Phil Edwards, and Ulrich Drepper are the lead maintainers of\n    the CVS archive.\n-   \n+\n    Development and discussion is held on the libstdc++ mailing list.\n    Subscribing to the list, or searching the list archives, is open to\n-   everyone. You can read instructions for doing so on the [39]homepage.\n+   everyone. You can read instructions for doing so on the [40]homepage.\n    If you have questions, ideas, code, or are just curious, sign up!\n      _________________________________________________________________\n-   \n+\n 1.4 How do I get libstdc++?\n \n-   The tenth (and latest) snapshot of libstdc++-v3 is [40]available via\n+   The tenth (and latest) snapshot of libstdc++-v3 is [41]available via\n    ftp.\n-   \n-   The [41]homepage has instructions for retrieving the latest CVS\n+\n+   The [42]homepage has instructions for retrieving the latest CVS\n    sources, and for browsing the CVS sources over the web.\n-   \n+\n    The subset commonly known as the Standard Template Library (chapters\n    23 through 25, mostly) is adapted from the SGI STL, which is also an\n    ongoing work.\n      _________________________________________________________________\n-   \n+\n 1.5 When is libstdc++ going to be finished?\n \n    Nathan Myers gave the best of all possible answers, responding to a\n    Usenet article asking this question: Sooner, if you help.\n      _________________________________________________________________\n-   \n+\n 1.6 How do I contribute to the effort?\n \n-   Here is [42]a page devoted to this topic. Subscribing to the mailing\n+   Here is [43]a page devoted to this topic. Subscribing to the mailing\n    list (see above, or the homepage) is a very good idea if you have\n    something to contribute, or if you have spare time and want to help.\n    Contributions don't have to be in the form of source code; anybody who\n    is willing to help write documentation, for example, or has found a\n    bug in code that we all thought was working, is more than welcome!\n      _________________________________________________________________\n-   \n+\n 1.7 What happened to libg++? I need that!\n \n    The most recent libg++ README states that libg++ is no longer being\n    actively maintained. It should not be used for new projects, and is\n    only being kicked along to support older code.\n-   \n+\n    The libg++ was designed and created when there was no Standard to\n    provide guidance. Classes like linked lists are now provided for by\n    list<T> and do not need to be created by genclass. (For that matter,\n    templates exist now and are well-supported, whereas genclass (mostly)\n    predates them.)\n-   \n+\n    There are other classes in libg++ that are not specified in the ISO\n    Standard (e.g., statistical analysis). While there are a lot of really\n    useful things that are used by a lot of people (e.g., statistics :-),\n    the Standards Committee couldn't include everything, and so a lot of\n    those \"obvious\" classes didn't get included.\n-   \n+\n    Since libstdc++ is an implementation of the Standard Library, we have\n    no plans at this time to include non-Standard utilities in the\n    implementation, however handy they are. (The extensions provided in\n@@ -150,30 +151,30 @@\n    entirely plausable that the \"useful stuff\" from libg++ might be\n    extracted into an updated utilities library, but nobody has stated\n    such a project yet.\n-   \n-   (The [43]Boost site houses free C++ libraries that do varying things,\n+\n+   (The [44]Boost site houses free C++ libraries that do varying things,\n    and happened to be started by members of the Standards Committee.\n    Certain \"useful stuff\" classes will probably migrate there.)\n-   \n-   For the bold and/or desperate, the [44]GCC FAQ describes where to find\n+\n+   For the bold and/or desperate, the [45]GCC FAQ describes where to find\n    the last libg++ source.\n      _________________________________________________________________\n-   \n+\n 1.8 What if I have more questions?\n \n    If you have read the README and RELEASE-NOTES files, and your question\n    remains unanswered, then just ask the mailing list. At present, you do\n    not need to be subscribed to the list to send a message to it. More\n    information is available on the homepage (including how to browse the\n-   list archives); to send to the list, use [45]libstdc++@gcc.gnu.org.\n-   \n+   list archives); to send to the list, use [46]libstdc++@gcc.gnu.org.\n+\n    If you have a question that you think should be included here, or if\n-   you have a question about a question/answer here, contact [46]Phil\n-   Edwards or [47]Gabriel Dos Reis.\n+   you have a question about a question/answer here, contact [47]Phil\n+   Edwards or [48]Gabriel Dos Reis.\n      _________________________________________________________________\n-   \n+\n                                2.0 Installation\n-                                       \n+\n 2.1 How do I install libstdc++-v3?\n \n    Complete instructions are not given here (this is a FAQ, not an\n@@ -183,115 +184,128 @@\n        GCC is much easier and more automated than building the GCC 2.[78]\n        series was.\n      * If you plan on hacking around with the makefiles, you will need\n-       the tools [48]autoconfand [49]automake.\n+       the tools [49]autoconfand [50]automake.\n      * GNU Make is the only make that supports these makefiles.\n-       \n-   The file [50]documentation.html provides a good overview of the steps\n+\n+   The file [51]documentation.html provides a good overview of the steps\n    necessary to build, install, and use the library. Instructions for\n    configuring the library with new flags such as --enable-threads are\n    there also.\n-   \n-   The top-level install.html and [51]RELEASE-NOTES files contain the\n+\n+   The top-level install.html and [52]RELEASE-NOTES files contain the\n    exact build and installation instructions. You may wish to browse\n    those files over CVSweb ahead of time to get a feel for what's\n    required. RELEASE-NOTES is located in the \".../docs/17_intro/\"\n    directory of the distribution.\n      _________________________________________________________________\n-   \n+\n 2.2 Is this a drop-in replacement for the libstdc++ that's shipped with g++?\n \n    Yes, as of 2.90.8, it is intended as such. And as of 2.91,\n    libstdc++-v3 is the library that's shipped with g++, so much of this\n    answer has become moot.\n      _________________________________________________________________\n-   \n+\n 2.3 What is this CVS thing that you keep mentioning?\n \n    The Concurrent Versions System is one of several revision control\n    packages. It was selected for GNU projects because it's free (speech),\n-   free (beer), and very high quality. The [52]CVS entry in the GNU\n-   software catalogue has a better description as well as a [53]link to\n+   free (beer), and very high quality. The [53]CVS entry in the GNU\n+   software catalogue has a better description as well as a [54]link to\n    the makers of CVS.\n-   \n+\n    The \"anonymous client checkout\" feature of CVS is similar to anonymous\n    FTP in that it allows anyone to retrieve the latest libstdc++ sources.\n-   \n+\n    After the first of April, American users will have a \"/pharmacy\"\n    command-line option...\n      _________________________________________________________________\n-   \n+\n 2.4 How do I know if it works?\n \n    libstdc++-v3 comes with its own testsuite. You do not need to actually\n    install the library (\"gmake install\") to run the testsuite. Note that\n    2.91 does not use DejaGNU yet.\n-   \n+\n    To run the testsuite on the library after building it, use \"gmake\n    check\" while in your build directory. To run the testsuite on the\n    library after building and installing it, use \"gmake check-install\"\n    instead.\n-   \n+\n    The testsuite subdirectory in your build directory will then contain\n    three files of the form YYYYMMDD-mkcheck*.txt. One of them\n    (-mkcheck.txt itself) contains the results of the tests; this can be\n    mailed to the list. The other files (-mkchecklog.txt and\n    -mkcheckfiles.txt) contain messages from the compiler while building\n    the test programs, and a list of the tests to be run, respectively.\n-   \n+\n    If you find bugs in the testsuite programs themselves, or if you think\n    of a new test program that should be added to the suite, please write\n    up your idea and send it to the list!\n      _________________________________________________________________\n-   \n+\n                          3.0 Platform-Specific Issues\n-                                       \n+\n 3.1 Can libstdc++-v3 be used with <my favorite compiler>?\n \n    Probably not. Yet.\n-   \n+\n    Because GCC advances so rapidly, development and testing of libstdc++\n    is being done almost entirely under that compiler. If you are curious\n    about whether other, lesser compilers (*grin*) support libstdc++, you\n    are more than welcome to try. Configuring and building the library\n    (see above) will still require certain tools, however. Also keep in\n    mind that building libstdc++ does not imply that your compiler will be\n    able to use all of the features found in the C++ Standard Library.\n-   \n+\n    Since the goal of ISO Standardization is for all C++ implementations\n    to be able to share code, the final libstdc++ should, in theory, be\n    useable under any ISO-compliant compiler. It will still be targeted\n    and optimized for GCC/g++, however.\n      _________________________________________________________________\n-   \n+\n 3.2 Building under Cygwin hangs/explodes!?\n \n    Sometimes, yes. You're probably in the middle of generating the\n    numeric_limits specializations when it hangs, right? Thought so...\n-   \n+\n    The <limits> header and its associated library code are\n    platform-specific. These files get generated from scratch during\n    installation, and it is this generator that is hanging. More\n    specifically, the only sure way to determine what the\n    numeric_limits<T>::traps boolean should be is to actually divide by\n    zero and see if it is trapped or not.\n-   \n+\n    Under NT, this will occasionally just hang. On those occasions when\n    the test does not hang, the zero-division is in fact trapped. That\n    doesn't prevent hanging elsewhere.\n-   \n+\n    You have two options. You can get a newer cygwin1.dll (see the Cygwin\n-   paragraph in the [54]installation instructions). Or you can get a\n+   paragraph in the [55]installation instructions). Or you can get a\n    prebuilt set of bits/std_limits.h and src/limitsMEMBERS.cc files from\n-   Mumit Khan's [55]Cygwin-related website.\n+   Mumit Khan's [56]Cygwin-related website.\n      _________________________________________________________________\n-   \n+\n+3.3 Building DEC OSF kills the assembler\n+\n+   The atomicity.h header for the Alpha processor currently uses\n+   pseudo-operators which the DEC assembler doesn't understand (in\n+   particular, .subsection and .previous). The simple solution is to\n+   install GNU as and arrange for the GCC build to use it (or merge the\n+   sources and build it during the bootstrap).\n+\n+   Anyone who [57]knows the DEC assembler well enough to provide the\n+   equivalent of these two pseudos would win praise and accolades from\n+   many.\n+     _________________________________________________________________\n+\n                           4.0 Known Bugs and Non-Bugs\n-                                       \n+\n    Note that this section can get rapdily outdated -- such is the nature\n    of an open-source project. For the latest information, join the\n    mailing list or look through recent archives. The RELEASE- NOTES and\n    BUGS files are generally kept up-to-date.\n-   \n+\n 4.1 What works already?\n \n    This is a verbatim clip from the \"Status\" section of the RELEASE-NOTES\n@@ -347,7 +361,7 @@ New:\n - Many, many testsuite additions and consistent VERIFY usage.\n - work on mkcheck to make it more flexible, use libtool, etc.\n      _________________________________________________________________\n-   \n+\n 4.2 Bugs in gcc/g++ (not libstdc++-v3)\n \n    This is by no means meant to be complete nor exhaustive, but mentions\n@@ -357,120 +371,127 @@ New:\n      * As of 2.91, these bugs have all been fixed. We look forward to new\n        ones, well, not exactly...\n      _________________________________________________________________\n-   \n+\n 4.3 Bugs in the C++ language/lib specification\n \n-   Yes, unfortunately, there are some. In a [56]message to the list,\n+   Yes, unfortunately, there are some. In a [58]message to the list,\n    Nathan Myers announced that he has started a list of problems in the\n    ISO C++ Standard itself, especially with regard to the chapters that\n-   concern the library. The list itself is [57]posted on his website.\n+   concern the library. The list itself is [59]posted on his website.\n    Developers who are having problems interpreting the Standard may wish\n    to consult his notes.\n-   \n+\n    For those people who are not part of the ISO Library Group (i.e.,\n    nearly all of us needing to read this page in the first place :-), a\n-   public list of the library defects is occasionally published [58]here.\n+   public list of the library defects is occasionally published [60]here.\n      _________________________________________________________________\n-   \n+\n 4.4 Things in libstdc++ that look like bugs\n \n    There are things which are not bugs in the compiler (4.2) nor the\n    language specification (4.3), but aren't really bugs in libstdc++,\n    either. Really!\n-   \n+\n    The biggest of these is the quadzillions of warnings about the library\n    headers emitted when -Weffc++ is used. Making libstdc++\n    \"-Weffc++-clean\" is not a goal of the project, for a few reasons.\n    Mainly, that option tries to enforce object-oriented programming,\n    while the Standard Library isn't necessarily trying to be OO. There\n    are multiple solutions under discussion.\n-   \n+\n+   Another is the rel_ops namespace and the template comparison operator\n+   functions contained therein. If they become visible in the same\n+   namespace as other comparison functions (e.g., 'using' them and the\n+   <iterator> header), then you will suddenly be faced with huge numbers\n+   of ambiguity errors. This was discussed on the -v3 list; Nathan Myers\n+   [61]sums things up here.\n+\n   The g++-3 headers are not ours\n-  \n+\n    If you have found an extremely broken header file which is causing\n    problems for you, look carefully before submitting a \"high\" priority\n    bug report (which you probably shouldn't do anyhow; see the last\n-   paragraph of the page describing [59]the GCC bug database).\n-   \n+   paragraph of the page describing [62]the GCC bug database).\n+\n    If the headers are in ${prefix}/include/g++-3, then you are using the\n    old libstdc++-v2 library, which is nonstandard and unmaintained. Do\n    not report problems with -v2 to the -v3 mailing list.\n-   \n+\n    Currently our header files are installed in ${prefix}/include/g++-v3\n    (see the 'v'?). This may change with the next release of GCC, as it\n-   may be too confusing, but [60]the question has not yet been decided.\n+   may be too confusing, but [63]the question has not yet been decided.\n      _________________________________________________________________\n-   \n+\n 4.5 Aw, that's easy to fix!\n \n    If you have found a bug in the library and you think you have a\n    working fix, then send it in! The main GCC site has a page on\n-   [61]submitting patches that covers the procedure, but for libstdc++\n+   [64]submitting patches that covers the procedure, but for libstdc++\n    you should of course send the patch to our mailing list, not the GCC\n-   mailing list. The libstdc++ [62]contributors' page also talks about\n+   mailing list. The libstdc++ [65]contributors' page also talks about\n    how to submit patches.\n-   \n+\n    In addition to the description, the patch, and the ChangeLog entry, it\n    is a Good Thing if you can additionally create a small test program to\n    test for the presence of the bug that your patch fixes. Bugs have a\n    way of being reintroduced; if an old bug creeps back in, it will be\n-   caught immediately by the [63]testsuite -- but only if such a test\n+   caught immediately by the [66]testsuite -- but only if such a test\n    exists.\n      _________________________________________________________________\n-   \n+\n                                5.0 Miscellaneous\n-                                       \n+\n 5.1 string::iterator is not char*; vector<T>::iterator is not T*\n \n    If you have code that depends on container<T> iterators being\n    implemented as pointer-to-T, your code is broken.\n-   \n+\n    While there are arguments for iterators to be implemented in that\n    manner, A) they aren't very good ones in the long term, and B) they\n    were never guaranteed by the Standard anyway. The type-safety achieved\n    by making iterators a real class rather than a typedef for T*\n    outweighs nearly all opposing arguments.\n      _________________________________________________________________\n-   \n+\n 5.2 What's next after libstdc++-v3?\n \n    Hopefully, not much. The goal of libstdc++-v3 is to produce a\n    fully-compliant, fully-portable Standard Library. After that, we're\n    mostly done: there won't be any more compliance work to do.\n-   \n+\n    The ISO Committee will meet periodically to review Defect Reports in\n    the C++ Standard. Undoubtably some of these will result in changes to\n    the Standard, which will be reflected in patches to libstdc++. Some of\n    that is already happening, see 4.2. Some of those changes are being\n    predicted by the library maintainers, and we add code to the library\n    based on what the current proposed resolution specifies.\n-   \n+\n    The current libstdc++ contains extensions to the Library which must be\n    explicitly requested by client code (for example, the hash tables from\n    SGI). Other extensions may be added to libstdc++-v3 if they seem to be\n    \"standard\" enough. (For example, the \"long long\" type from C99.)\n    Bugfixes and rewrites (to improve or fix thread safety, for instance)\n    will of course be a continuing task.\n-   \n-   [64]This question about the next libstdc++ prompted some brief but\n-   interesting [65]speculation.\n+\n+   [67]This question about the next libstdc++ prompted some brief but\n+   interesting [68]speculation.\n      _________________________________________________________________\n-   \n+\n 5.3 What about the STL from SGI?\n \n-   The [66]STL from SGI is merged into libstdc++-v3 with changes as\n+   The [69]STL from SGI is merged into libstdc++-v3 with changes as\n    necessary. Currently release 3.3 is being used. Changes in the STL\n    usually produce some weird bugs and lots of changes in the rest of the\n-   libstd++ source as we scramble to keep up. :-)\n-   \n+   libstdc++ source as we scramble to keep up. :-)\n+\n    In particular, string is not from SGI and makes no use of their \"rope\"\n    class (which is included as an optional extension), nor is valarray\n    and some others. Classes like vector<> are, however.\n-   \n+\n    The FAQ for SGI's STL (one jump off of their main page) is recommended\n    reading.\n      _________________________________________________________________\n-   \n+\n 5.4 Extensions and Backward Compatibility\n \n    Although you can specify -I options to make the preprocessor search\n@@ -479,31 +500,31 @@ New:\n        #include <ext/hash_map>\n \n \n-   Extensions to the library have [67]their own page.\n+   Extensions to the library have [70]their own page.\n      _________________________________________________________________\n-   \n+\n 5.5 Compiling with \"-fnew-abi\"\n \n    Towards the end of July 1999, this subject was brought up again on the\n-   mailing list under a different name. The related [68]thread (by the\n+   mailing list under a different name. The related [71]thread (by the\n    name HOWTO-honor-std) is very instructive. More info is at the end of\n    RELEASE-NOTES.\n-   \n+\n    This functionality is now automated and turned on by default.\n      _________________________________________________________________\n-   \n+\n 5.6 Is libstdc++-v3 thread-safe?\n \n    Quick answer: no, as of 2.91 (tenth snapshot), the library is not\n    appropriate for multithreaded access. The string class is MT-safe.\n-   \n+\n    This is assuming that your idea of \"multithreaded\" is the same as\n    ours... The general question of multithreading and libstdc++-v3 is\n-   addressed in the chapter-specific advice for [69]Library Introduction.\n-   Threadsafe containers are covered in more detail in [70]the Received\n+   addressed in the chapter-specific advice for [72]Library Introduction.\n+   Threadsafe containers are covered in more detail in [73]the Received\n    Wisdom section on containers.\n      _________________________________________________________________\n-   \n+\n 5.7 How do I get a copy of the ISO C++ Standard?\n \n    Copies of the full ISO 14882 standard are available on line via the\n@@ -512,17 +533,17 @@ New:\n    their two-meeting commitment for voting rights, may get a copy of the\n    standard from their respective national standards organization. In the\n    USA, this national standards organization is ANSI and their website is\n-   right [71]here. (And if you've already registered with them, clicking\n-   this link will take you to directly to the place where you can [72]buy\n+   right [74]here. (And if you've already registered with them, clicking\n+   this link will take you to directly to the place where you can [75]buy\n    the standard on-line.\n-   \n-   Who is your country's member body? Visit the [73]ISO homepage and find\n+\n+   Who is your country's member body? Visit the [76]ISO homepage and find\n    out!\n      _________________________________________________________________\n-   \n-   Comments and suggestions are welcome, and may be sent to [74]Phil\n-   Edwards or [75]Gabriel Dos Reis.\n-   $Id: index.html,v 1.10 2000/12/03 23:47:49 jsm28 Exp $ \n+\n+   Comments and suggestions are welcome, and may be sent to [77]Phil\n+   Edwards or [78]Gabriel Dos Reis.\n+   $Id: index.html,v 1.1 2000/12/10 04:04:56 pme Exp $ \n \n References\n \n@@ -545,59 +566,62 @@ References\n   17. ../faq/index.html#3_0\n   18. ../faq/index.html#3_1\n   19. ../faq/index.html#3_2\n-  20. ../faq/index.html#4_0\n-  21. ../faq/index.html#4_1\n-  22. ../faq/index.html#4_2\n-  23. ../faq/index.html#4_3\n-  24. ../faq/index.html#4_4\n-  25. ../faq/index.html#4_4_interface\n-  26. ../faq/index.html#4_5\n-  27. ../faq/index.html#5_0\n-  28. ../faq/index.html#5_1\n-  29. ../faq/index.html#5_2\n-  30. ../faq/index.html#5_3\n-  31. ../faq/index.html#5_4\n-  32. ../faq/index.html#5_5\n-  33. ../faq/index.html#5_6\n-  34. ../faq/index.html#5_7\n-  35. ftp://gcc.gnu.org/pub/libstdc++/libstdc++-2.91.tar.gz\n-  36. ../17_intro/DESIGN\n-  37. http://gcc.gnu.org/\n-  38. http://gcc.gnu.org/gcc-2.95/buildstat.html\n-  39. http://gcc.gnu.org/libstdc++/\n-  40. ftp://gcc.gnu.org/pub/libstdc++/libstdc++-2.91.tar.gz\n-  41. http://gcc.gnu.org/libstdc++/\n-  42. ../17_intro/contribute.html\n-  43. http://www.boost.org/\n-  44. http://gcc.gnu.org/fom_serv/cache/33.html\n-  45. mailto:libstdc++@gcc.gnu.org\n-  46. mailto:pme@sources.redhat.com\n-  47. mailto:gdr@gcc.gnu.org\n-  48. http://sources.redhat.com/autoconf/\n-  49. http://sources.redhat.com/automake/\n-  50. ../documentation.html\n-  51. ../17_intro/RELEASE-NOTES\n-  52. http://www.gnu.org/software/cvs/cvs.html\n-  53. http://www.cyclic.com/\n-  54. ../install.html\n-  55. http://www.xraylith.wisc.edu/~khan/software/gnu-win32/libstdc++-v3.html\n-  56. http://gcc.gnu.org/ml/libstdc++/1998/msg00006.html\n-  57. http://www.cantrip.org/draft-bugs.txt\n-  58. http://anubis.dkuug.dk/jtc1/sc22/wg21/\n-  59. http://gcc.gnu.org/gnatswrite.html\n-  60. http://gcc.gnu.org/ml/gcc/2000-10/msg00732.html\n-  61. http://gcc.gnu.org/contribute.html\n-  62. ../17_intro/contribute.html\n-  63. ../faq/index.html#2_4\n-  64. http://gcc.gnu.org/ml/libstdc++/1999/msg00080.html\n-  65. http://gcc.gnu.org/ml/libstdc++/1999/msg00084.html\n-  66. http://www.sgi.com/Technology/STL/\n-  67. ../ext/howto.html\n-  68. http://gcc.gnu.org/ml/libstdc++/1999-q3/msg00066.html\n-  69. http://gcc.gnu.org/libstdc++/17_intro/howto.html#3\n-  70. http://gcc.gnu.org/libstdc++/23_containers/howto.html\n-  71. http://www.ansi.org/\n-  72. http://webstore.ansi.org/ansidocstore/product.asp?sku=ISO%2FIEC+14882%2D1998\n-  73. http://www.iso.ch/\n-  74. mailto:pme@sources.redhat.com\n-  75. mailto:gdr@gcc.gnu.org\n+  20. ../faq/index.html#3_3\n+  21. ../faq/index.html#4_0\n+  22. ../faq/index.html#4_1\n+  23. ../faq/index.html#4_2\n+  24. ../faq/index.html#4_3\n+  25. ../faq/index.html#4_4\n+  26. ../faq/index.html#4_4_interface\n+  27. ../faq/index.html#4_5\n+  28. ../faq/index.html#5_0\n+  29. ../faq/index.html#5_1\n+  30. ../faq/index.html#5_2\n+  31. ../faq/index.html#5_3\n+  32. ../faq/index.html#5_4\n+  33. ../faq/index.html#5_5\n+  34. ../faq/index.html#5_6\n+  35. ../faq/index.html#5_7\n+  36. ftp://gcc.gnu.org/pub/libstdc++/libstdc++-2.91.tar.gz\n+  37. ../17_intro/DESIGN\n+  38. http://gcc.gnu.org/\n+  39. http://gcc.gnu.org/gcc-2.95/buildstat.html\n+  40. http://gcc.gnu.org/libstdc++/\n+  41. ftp://gcc.gnu.org/pub/libstdc++/libstdc++-2.91.tar.gz\n+  42. http://gcc.gnu.org/libstdc++/\n+  43. ../17_intro/contribute.html\n+  44. http://www.boost.org/\n+  45. http://gcc.gnu.org/fom_serv/cache/33.html\n+  46. mailto:libstdc++@gcc.gnu.org\n+  47. mailto:pme@sources.redhat.com\n+  48. mailto:gdr@gcc.gnu.org\n+  49. http://sources.redhat.com/autoconf/\n+  50. http://sources.redhat.com/automake/\n+  51. ../documentation.html\n+  52. ../17_intro/RELEASE-NOTES\n+  53. http://www.gnu.org/software/cvs/cvs.html\n+  54. http://www.cyclic.com/\n+  55. ../install.html\n+  56. http://www.xraylith.wisc.edu/~khan/software/gnu-win32/libstdc++-v3.html\n+  57. http://gcc.gnu.org/ml/libstdc++/2000-12/msg00279.html\n+  58. http://gcc.gnu.org/ml/libstdc++/1998/msg00006.html\n+  59. http://www.cantrip.org/draft-bugs.txt\n+  60. http://anubis.dkuug.dk/jtc1/sc22/wg21/\n+  61. http://gcc.gnu.org/ml/libstdc++/2001-01/msg00247.html\n+  62. http://gcc.gnu.org/gnatswrite.html\n+  63. http://gcc.gnu.org/ml/gcc/2000-10/msg00732.html\n+  64. http://gcc.gnu.org/contribute.html\n+  65. ../17_intro/contribute.html\n+  66. ../faq/index.html#2_4\n+  67. http://gcc.gnu.org/ml/libstdc++/1999/msg00080.html\n+  68. http://gcc.gnu.org/ml/libstdc++/1999/msg00084.html\n+  69. http://www.sgi.com/Technology/STL/\n+  70. ../ext/howto.html\n+  71. http://gcc.gnu.org/ml/libstdc++/1999-q3/msg00066.html\n+  72. http://gcc.gnu.org/libstdc++/17_intro/howto.html#3\n+  73. http://gcc.gnu.org/libstdc++/23_containers/howto.html\n+  74. http://www.ansi.org/\n+  75. http://webstore.ansi.org/ansidocstore/product.asp?sku=ISO%2FIEC+14882%2D1998\n+  76. http://www.iso.ch/\n+  77. mailto:pme@sources.redhat.com\n+  78. mailto:gdr@gcc.gnu.org"}, {"sha": "be50063b8a12beb5564d1b25e887016266918f1f", "filename": "libstdc++-v3/docs/html/install.html", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b8fd32ccaa15bf9b85fd3136b053b8c6546a415/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Finstall.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b8fd32ccaa15bf9b85fd3136b053b8c6546a415/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Finstall.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Finstall.html?ref=9b8fd32ccaa15bf9b85fd3136b053b8c6546a415", "patch": "@@ -7,7 +7,7 @@\n    <META NAME=\"GENERATOR\" CONTENT=\"vi and eight fingers\">\n    <TITLE>libstdc++-v3 Installation Instructions</TITLE>\n <LINK REL=StyleSheet HREF=\"lib3styles.css\">\n-<!-- $Id: install.html,v 1.1 2000/12/10 04:03:08 pme Exp $ -->\n+<!-- $Id: install.html,v 1.2 2001/01/21 09:36:09 pme Exp $ -->\n </HEAD>\n <BODY>\n \n@@ -150,7 +150,7 @@ <H2><A NAME=\"srcsetup\">Setting up the source directories</A></H2>\n \n    <P><B>...with a gcc-2.9[67] snapshot</B>\n       <P>Unpack the <EM>gccsrcdir</EM> and go into that directory.  For\n-X        instance, <TT>gcc-2.95.2</TT> is a valid <EM>gccsrcdir</EM>.\n+         instance, <TT>gcc-2.95.2</TT> is a valid <EM>gccsrcdir</EM>.\n          Once in <EM>gccsrcdir</EM>, you'll need to rename the libstdc++-v3\n          directory which comes with that snapshot:\n          <PRE>\n@@ -370,7 +370,7 @@ <H2><A NAME=\"\"></A></H2>\n Comments and suggestions are welcome, and may be sent to\n <A HREF=\"mailto:pme@sources.redhat.com\">Phil Edwards</A> or\n <A HREF=\"mailto:gdr@gcc.gnu.org\">Gabriel Dos Reis</A>.\n-<BR> $Id: install.html,v 1.1 2000/12/10 04:03:08 pme Exp $\n+<BR> $Id: install.html,v 1.2 2001/01/21 09:36:09 pme Exp $\n </EM></P>\n \n "}]}