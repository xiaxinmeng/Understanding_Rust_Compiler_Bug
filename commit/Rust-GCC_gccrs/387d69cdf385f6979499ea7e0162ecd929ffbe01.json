{"sha": "387d69cdf385f6979499ea7e0162ecd929ffbe01", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mzg3ZDY5Y2RmMzg1ZjY5Nzk0OTllYTdlMDE2MmVjZDkyOWZmYmUwMQ==", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-06-26T15:29:25Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-06-26T15:29:25Z"}, "message": "Merge #528\n\n528: Marking live symbols in tuple expr, array expr, grouped expr, type cast expr, lazy boolean expr. r=philberty a=thomasyonug\n\nMarking live symbols in tuple expr, array expr, grouped expr, type cast expr, lazy boolean expr.\n\nCo-authored-by: Thomas Young <wenzhang5800@gmail.com>", "tree": {"sha": "6762600966d68447c8fe16712d8dab24fd720eb9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6762600966d68447c8fe16712d8dab24fd720eb9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/387d69cdf385f6979499ea7e0162ecd929ffbe01", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJg10fVCRBK7hj4Ov3rIwAAQvwIAIACHBvBgCytTBt99jYGRzyV\nduOWIyqoQS3poHC1chGAZHuOSBgIAJAle5jzMmN8dDLn3ss1sqr4Mz5qDqX+S6GC\nBbY8cVN9wUR/GOBZMqFPEXT0/d4N4X/Uoy0nU5RGkENydxxj5Te4dwfJ3UU0BSB0\nyc6sQ76duXklYXXqpdsCogZvl6EYZD7A2HdSjFLU8DJ14gzClpDrdB87Fcp/DiKc\nQEAaE0dcYc225Ec3dB3jcM0eqfDyejc2zVpXGzf4/bMzBc7lkyow9qDLekUFjMPw\nvCOUgsPfOxX4vKfTIWilJx8nElk0uF7CTXxVRp3jneKMpBT3KCJLH1UkZPRTgaI=\n=SbV9\n-----END PGP SIGNATURE-----\n", "payload": "tree 6762600966d68447c8fe16712d8dab24fd720eb9\nparent 99bc27d278359be9aec5597504807a6456a88a6c\nparent 5e63d163fe8c398d1953feae503d545e84c798bf\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1624721365 +0000\ncommitter GitHub <noreply@github.com> 1624721365 +0000\n\nMerge #528\n\n528: Marking live symbols in tuple expr, array expr, grouped expr, type cast expr, lazy boolean expr. r=philberty a=thomasyonug\n\nMarking live symbols in tuple expr, array expr, grouped expr, type cast expr, lazy boolean expr.\n\nCo-authored-by: Thomas Young <wenzhang5800@gmail.com>\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/387d69cdf385f6979499ea7e0162ecd929ffbe01", "html_url": "https://github.com/Rust-GCC/gccrs/commit/387d69cdf385f6979499ea7e0162ecd929ffbe01", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/387d69cdf385f6979499ea7e0162ecd929ffbe01/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "99bc27d278359be9aec5597504807a6456a88a6c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99bc27d278359be9aec5597504807a6456a88a6c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99bc27d278359be9aec5597504807a6456a88a6c"}, {"sha": "5e63d163fe8c398d1953feae503d545e84c798bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e63d163fe8c398d1953feae503d545e84c798bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e63d163fe8c398d1953feae503d545e84c798bf"}], "stats": {"total": 80, "additions": 80, "deletions": 0}, "files": [{"sha": "f718a61b90135a7890269295d8513071cd8e766f", "filename": "gcc/rust/hir/tree/rust-hir-expr.h", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/387d69cdf385f6979499ea7e0162ecd929ffbe01/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-expr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/387d69cdf385f6979499ea7e0162ecd929ffbe01/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-expr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-expr.h?ref=387d69cdf385f6979499ea7e0162ecd929ffbe01", "patch": "@@ -1064,6 +1064,15 @@ class TupleExpr : public ExprWithoutBlock\n \n   bool is_unit () const { return tuple_elems.size () == 0; }\n \n+  void iterate (std::function<bool (Expr *)> cb)\n+  {\n+    for (auto &tuple_elem : tuple_elems)\n+      {\n+\tif (!cb (tuple_elem.get ()))\n+\t  return;\n+      }\n+  }\n+\n protected:\n   /* Use covariance to implement clone function as returning this object rather\n    * than base */"}, {"sha": "67dd76a48c6719b489a9822d3d8c36181a3902f9", "filename": "gcc/rust/lint/rust-lint-marklive.h", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/387d69cdf385f6979499ea7e0162ecd929ffbe01/gcc%2Frust%2Flint%2Frust-lint-marklive.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/387d69cdf385f6979499ea7e0162ecd929ffbe01/gcc%2Frust%2Flint%2Frust-lint-marklive.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Flint%2Frust-lint-marklive.h?ref=387d69cdf385f6979499ea7e0162ecd929ffbe01", "patch": "@@ -54,6 +54,43 @@ class MarkLive : public MarkLiveBase\n     expr.get_expr ().get ()->accept_vis (*this);\n   }\n \n+  void visit (HIR::LazyBooleanExpr &expr) override\n+  {\n+    expr.get_lhs ()->accept_vis (*this);\n+    expr.get_rhs ()->accept_vis (*this);\n+  }\n+\n+  void visit (HIR::TypeCastExpr &expr) override\n+  {\n+    expr.get_expr ().get ()->accept_vis (*this);\n+  }\n+\n+  void visit (HIR::GroupedExpr &expr) override\n+  {\n+    expr.get_expr_in_parens ()->accept_vis (*this);\n+  }\n+\n+  void visit (HIR::ArrayExpr &expr) override\n+  {\n+    expr.get_internal_elements ()->accept_vis (*this);\n+  }\n+\n+  void visit (HIR::ArrayElemsValues &expr) override\n+  {\n+    expr.iterate ([&] (HIR::Expr *expr) mutable -> bool {\n+      expr->accept_vis (*this);\n+      return true;\n+    });\n+  }\n+\n+  void visit (HIR::TupleExpr &expr) override\n+  {\n+    expr.iterate ([&] (HIR::Expr *expr) mutable -> bool {\n+      expr->accept_vis (*this);\n+      return true;\n+    });\n+  }\n+\n   void visit (HIR::BlockExpr &expr) override\n   {\n     expr.iterate_stmts ([&] (HIR::Stmt *s) mutable -> bool {"}, {"sha": "4e2b2e03f31e98ece816daa0aaa23e28a225d88f", "filename": "gcc/testsuite/rust/compile/torture/array_function.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/387d69cdf385f6979499ea7e0162ecd929ffbe01/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Farray_function.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/387d69cdf385f6979499ea7e0162ecd929ffbe01/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Farray_function.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Farray_function.rs?ref=387d69cdf385f6979499ea7e0162ecd929ffbe01", "patch": "@@ -0,0 +1,8 @@\n+fn foo() -> i32 {\n+    1\n+}\n+\n+\n+fn main() {\n+    let _a: [i32; 1] = [foo()];\n+}\n\\ No newline at end of file"}, {"sha": "eca7178b7f790d8857d988d44379f566df950c84", "filename": "gcc/testsuite/rust/compile/torture/grouped_expr_function.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/387d69cdf385f6979499ea7e0162ecd929ffbe01/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Fgrouped_expr_function.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/387d69cdf385f6979499ea7e0162ecd929ffbe01/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Fgrouped_expr_function.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Fgrouped_expr_function.rs?ref=387d69cdf385f6979499ea7e0162ecd929ffbe01", "patch": "@@ -0,0 +1,6 @@\n+fn foo() {}\n+\n+\n+fn main() {\n+    let _a = (foo());\n+}\n\\ No newline at end of file"}, {"sha": "1be51274d03d6ba8cf6d38b161fa0953e9f3477e", "filename": "gcc/testsuite/rust/compile/torture/lazybooleanexpr_function.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/387d69cdf385f6979499ea7e0162ecd929ffbe01/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Flazybooleanexpr_function.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/387d69cdf385f6979499ea7e0162ecd929ffbe01/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Flazybooleanexpr_function.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Flazybooleanexpr_function.rs?ref=387d69cdf385f6979499ea7e0162ecd929ffbe01", "patch": "@@ -0,0 +1,14 @@\n+fn foo() -> bool {\n+    return true;\n+}\n+\n+fn bar() -> bool {\n+    return false;\n+}\n+\n+\n+\n+fn main() {\n+    let _a = true && foo();\n+    let _b = true || bar();\n+}\n\\ No newline at end of file"}, {"sha": "514b586cc09a721f7754f1b37ae2b2809110eae9", "filename": "gcc/testsuite/rust/compile/torture/tuple_function.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/387d69cdf385f6979499ea7e0162ecd929ffbe01/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Ftuple_function.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/387d69cdf385f6979499ea7e0162ecd929ffbe01/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Ftuple_function.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Ftuple_function.rs?ref=387d69cdf385f6979499ea7e0162ecd929ffbe01", "patch": "@@ -0,0 +1,6 @@\n+fn foo() -> i32 {\n+    return 1;\n+}\n+fn main() {\n+    let _a = (foo(), 2);\n+}"}]}