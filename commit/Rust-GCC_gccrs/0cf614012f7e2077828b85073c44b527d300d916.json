{"sha": "0cf614012f7e2077828b85073c44b527d300d916", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGNmNjE0MDEyZjdlMjA3NzgyOGI4NTA3M2M0NGI1MjdkMzAwZDkxNg==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2004-06-28T17:52:45Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2004-06-28T17:52:45Z"}, "message": "cp-demangle.h: Declare cplus_demangle_operators...\n\nlibiberty:\n\t* cp-demangle.h: Declare cplus_demangle_operators,\n\tcplus_demangle_builtin_types, cplus_demangle_mangled_name, and\n\tcplus_demangle_type as static if IN_GLIBCPP_V3.\nlibobjc:\n\t* encoding.c: Rename target_flags with a #define to avoid\n\tconflict with a prior declaration.\n\nFrom-SVN: r83800", "tree": {"sha": "d11594c041588d7561ac1b299fddf1d1762b178a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d11594c041588d7561ac1b299fddf1d1762b178a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0cf614012f7e2077828b85073c44b527d300d916", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0cf614012f7e2077828b85073c44b527d300d916", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0cf614012f7e2077828b85073c44b527d300d916", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0cf614012f7e2077828b85073c44b527d300d916/comments", "author": null, "committer": null, "parents": [{"sha": "5cd2906234e13880f9ba8ef10a0a3d3550914e77", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5cd2906234e13880f9ba8ef10a0a3d3550914e77", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5cd2906234e13880f9ba8ef10a0a3d3550914e77"}], "stats": {"total": 92, "additions": 59, "deletions": 33}, "files": [{"sha": "6458c2afe624f1b92b9c666c0c9f17b567b7600a", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cf614012f7e2077828b85073c44b527d300d916/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cf614012f7e2077828b85073c44b527d300d916/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=0cf614012f7e2077828b85073c44b527d300d916", "patch": "@@ -1,3 +1,9 @@\n+2004-06-28  Zack Weinberg  <zack@codesourcery.com>\n+\n+\t* cp-demangle.h: Declare cplus_demangle_operators,\n+\tcplus_demangle_builtin_types, cplus_demangle_mangled_name, and\n+\tcplus_demangle_type as static if IN_GLIBCPP_V3.\n+\n 2004-06-28  Ian Lance Taylor  <ian@wasabisystems.com>\n \n \tPR other/16240\n@@ -604,7 +610,7 @@\n \n 2003-08-12  Nathanael Nerode  <neroden@gcc.gnu.org>\n \n-        * cp-demangle.c: Clarify what package(s) this is part of.\n+\t* cp-demangle.c: Clarify what package(s) this is part of.\n \n 2003-07-05  Danny Smith  <dannysmith@users.sourceforge.net>\n "}, {"sha": "02e74ec8735365788bab6ed5c80ed663083a03a4", "filename": "libiberty/cp-demangle.h", "status": "modified", "additions": 16, "deletions": 4, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cf614012f7e2077828b85073c44b527d300d916/libiberty%2Fcp-demangle.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cf614012f7e2077828b85073c44b527d300d916/libiberty%2Fcp-demangle.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fcp-demangle.h?ref=0cf614012f7e2077828b85073c44b527d300d916", "patch": "@@ -131,19 +131,31 @@ struct d_info\n \n /* Functions and arrays in cp-demangle.c which are referenced by\n    functions in cp-demint.c.  */\n+#ifdef IN_GLIBCPP_V3\n+#define CP_STATIC_IF_GLIBCPP_V3 static\n+#else\n+#define CP_STATIC_IF_GLIBCPP_V3 extern\n+#endif\n \n-extern const struct demangle_operator_info cplus_demangle_operators[];\n+CP_STATIC_IF_GLIBCPP_V3\n+const struct demangle_operator_info cplus_demangle_operators[];\n \n #define D_BUILTIN_TYPE_COUNT (26)\n \n-extern const struct demangle_builtin_type_info\n+CP_STATIC_IF_GLIBCPP_V3\n+const struct demangle_builtin_type_info\n cplus_demangle_builtin_types[D_BUILTIN_TYPE_COUNT];\n \n-extern struct demangle_component *\n+CP_STATIC_IF_GLIBCPP_V3\n+struct demangle_component *\n cplus_demangle_mangled_name PARAMS ((struct d_info *, int));\n \n-extern struct demangle_component *\n+CP_STATIC_IF_GLIBCPP_V3\n+struct demangle_component *\n cplus_demangle_type PARAMS ((struct d_info *));\n \n extern void\n cplus_demangle_init_info PARAMS ((const char *, int, size_t, struct d_info *));\n+\n+/* cp-demangle.c needs to define this a little differently */\n+#undef CP_STATIC_IF_GLIBCPP_V3"}, {"sha": "b311888a3550aa0850811c9df2a5679f63c98607", "filename": "libobjc/ChangeLog", "status": "modified", "additions": 31, "deletions": 26, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cf614012f7e2077828b85073c44b527d300d916/libobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cf614012f7e2077828b85073c44b527d300d916/libobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2FChangeLog?ref=0cf614012f7e2077828b85073c44b527d300d916", "patch": "@@ -1,7 +1,12 @@\n+2004-06-28  Zack Weinberg  <zack@codesourcery.com>\n+\n+\t* encoding.c: Rename target_flags with a #define to avoid\n+\tconflict with a prior declaration.\n+\n 2004-06-24  Andrew Pinski  <apinski@apple.com>\n \n \t* objc/encoding.h: Wrap the functions with extern \"C\" for C++\n-\tmode. \n+\tmode.\n \t* objc/hash.h: Likewise.\n \t* objc/objc-api.h: Likewise.\n \t* objc/objc-list.h: Likewise.\n@@ -18,10 +23,10 @@\n \n 2004-06-20  Alexander Malmberg  <alexander@malmberg.org>\n \n-        * Makefile.in (exception.lo): Remove $(OBJC_GCFLAGS).\n-        (exception_gc.lo): New.\n-        (OBJS_GC): Add exception_gc.lo.\n-\t\n+\t* Makefile.in (exception.lo): Remove $(OBJC_GCFLAGS).\n+\t(exception_gc.lo): New.\n+\t(OBJS_GC): Add exception_gc.lo.\n+\n 2004-06-17  Richard Henderson  <rth@redhat.com>\n \n \t* exception.c: New file.\n@@ -74,30 +79,30 @@\n \n \tMerge from the libobjc-branch\n \t2004-02-09  Andrew Pinski  <pinskia@physics.uc.edu>\n-\t\n+\n \t\t* Makefile.in (OBJC_H): Change objc-deps.h to objc-decls.h.\n-\t\n+\n \t2004-02-03  Andrew Pinski  <pinskia@physics.uc.edu>\n-\t\n+\n \t\t* Makefile.in (OBJC_H): Add objc-deps.h.\n-\t\n+\n \t2004-01-27  Nicola Pero  <n.pero@mi.flashnet.it>\n-\t\n+\n \t\t* Protocol.m ([-conformsTo:]): If the argument is nil, return NO.\n \t\t([-hash], [-isEqual:]): New methods.\n-\t\n+\n \t2004-01-27  Richard Frith-Macdonald <rfm@gnu.org>\n-\t\n+\n \t\t* sarray.c (sarray_free): Add a better comment.\n-\t\n+\n \t2004-01-27  Adam Fedor  <fedor@gnu.org>\n-\t\n+\n \t\t* hash.c (hash_add): Cast cachep to int.\n \t\t* selector.c (__sel_register_typed_name): Cast\n \t\tsoffset_decode to int.\n-\t\n+\n \t2004-01-27  Alexander Malmberg  <alexander@malmberg.org>\n-\t\n+\n \t\t* selector.c: Rename register_selectors_from_list to\n \t\t__objc_register_selectors_from_list. Update caller.\n \t\t(__objc_register_selectors_from_list): Lock __objc_runtime_mutex\n@@ -109,30 +114,30 @@\n \t\t* sendmsg.c (class_add_method_list): Use\n \t\t__objc_register_selectors_from_list.\n \t\t* objc/runtime.h: Add __objc_register_selectors_from_list.\n-\t\n+\n \t2004-01-25  Adam Fedor  <fedor@gnu.org>\n-\t            Nicola Pero  <n.pero@mi.flashnet.it>\n-\t            Andrew Pinski  <pinskia@physics.uc.edu>\n-\t\n+\t\t    Nicola Pero  <n.pero@mi.flashnet.it>\n+\t\t    Andrew Pinski  <pinskia@physics.uc.edu>\n+\n \t\t* objc/objc-decls.h: New file.\n \t\t* objc/objc-api.h (_objc_lookup_class): Mark as export.\n \t\t(_objc_load_callback): Likewise.\n \t\t(_objc_object_alloc): Likewise.\n \t\t(_objc_object_copy): Likewise.\n \t\t(_objc_object_dispose): Likewise.\n-\t\n+\n \t2004-01-25  Andrew Pinski  <pinskia@physics.uc.edu>\n-\t\n+\n \t\t* archive.c: s/__inline__/inline\n-\t\t* sendmsg.c: Likewise. \n-\t\n+\t\t* sendmsg.c: Likewise.\n+\n \t\t* encoding.c: Remove FIXME about the warning\n \t\tabout unused variable.\n \t\t* sendmsg.c: Add a FIXME comment saying that\n \t\tthis should be using libffi.\n-\t\n+\n \t\t* Makefile.in (LIBTOOL): Use @LIBTOOL@ now as it works.\n-\t\n+\n \n 2004-05-13  Andrew Pinski  <pinskia@physics.uc.edu>\n "}, {"sha": "dba203204b6010fae7ef3e8b47a2e30e3e960442", "filename": "libobjc/encoding.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cf614012f7e2077828b85073c44b527d300d916/libobjc%2Fencoding.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cf614012f7e2077828b85073c44b527d300d916/libobjc%2Fencoding.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fencoding.c?ref=0cf614012f7e2077828b85073c44b527d300d916", "patch": "@@ -86,8 +86,11 @@ Boston, MA 02111-1307, USA.  */\n #define STRUCTURE_SIZE_BOUNDARY (BITS_PER_UNIT * sizeof (struct{char a;}))\n \n /* Some ROUND_TYPE_ALIGN macros use TARGET_foo, and consequently\n-   target_flags.  Define a dummy entry here to so we don't die.  */\n-static int __attribute__ ((__unused__)) target_flags = 0;\n+   target_flags.  Define a dummy entry here to so we don't die.\n+   We have to rename it because target_flags may already have been\n+   declared extern.  */\n+#define target_flags not_target_flags\n+static int __attribute__ ((__unused__)) not_target_flags = 0;\n \n \n /*  FIXME: while this file has no business including tm.h, this"}]}