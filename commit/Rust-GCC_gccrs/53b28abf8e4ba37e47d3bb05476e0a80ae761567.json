{"sha": "53b28abf8e4ba37e47d3bb05476e0a80ae761567", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTNiMjhhYmY4ZTRiYTM3ZTQ3ZDNiYjA1NDc2ZTBhODBhZTc2MTU2Nw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-03-14T07:15:08Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-03-14T07:15:08Z"}, "message": "Fix doubled indefinite articles, mostly in comments.\n\n2020-03-14  Jakub Jelinek  <jakub@redhat.com>\n\n\t* gimple-fold.c (gimple_fold_builtin_strncpy): Change\n\t\"a an\" to \"an\" in a comment.\n\t* hsa-common.h (is_a_helper): Likewise.\n\t* tree-ssa-strlen.c (maybe_diag_stxncpy_trunc): Likewise.\n\t* config/arc/arc.c (arc600_corereg_hazard): Likewise.\n\t* config/s390/s390.c (s390_indirect_branch_via_thunk): Likewise.\n\n\t* logic.cc (formula::formula): Change \"a an\" to \"an\" in a comment.\n\t* parser.c (cp_debug_parser): Change \"a an\" to \"an\" in a string\n\tliteral.", "tree": {"sha": "852c7ce396caa57ba7a3880fa4b07d539d6f11cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/852c7ce396caa57ba7a3880fa4b07d539d6f11cb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/53b28abf8e4ba37e47d3bb05476e0a80ae761567", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53b28abf8e4ba37e47d3bb05476e0a80ae761567", "html_url": "https://github.com/Rust-GCC/gccrs/commit/53b28abf8e4ba37e47d3bb05476e0a80ae761567", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53b28abf8e4ba37e47d3bb05476e0a80ae761567/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0034955eb16f7a3a79e242750c27fcad62d90147", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0034955eb16f7a3a79e242750c27fcad62d90147", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0034955eb16f7a3a79e242750c27fcad62d90147"}], "stats": {"total": 29, "additions": 22, "deletions": 7}, "files": [{"sha": "0f79a7cfc20a253a85ec70c98836f7568262bf51", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53b28abf8e4ba37e47d3bb05476e0a80ae761567/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53b28abf8e4ba37e47d3bb05476e0a80ae761567/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=53b28abf8e4ba37e47d3bb05476e0a80ae761567", "patch": "@@ -1,3 +1,12 @@\n+2020-03-14  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gimple-fold.c (gimple_fold_builtin_strncpy): Change\n+\t\"a an\" to \"an\" in a comment.\n+\t* hsa-common.h (is_a_helper): Likewise.\n+\t* tree-ssa-strlen.c (maybe_diag_stxncpy_trunc): Likewise.\n+\t* config/arc/arc.c (arc600_corereg_hazard): Likewise.\n+\t* config/s390/s390.c (s390_indirect_branch_via_thunk): Likewise.\n+\n 2020-03-13  Aaron Sawdey  <acsawdey@linux.ibm.com>\n \n \tPR target/92379"}, {"sha": "537af791bbe9b2cd201ca6299a8547c997fd3714", "filename": "gcc/config/arc/arc.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53b28abf8e4ba37e47d3bb05476e0a80ae761567/gcc%2Fconfig%2Farc%2Farc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53b28abf8e4ba37e47d3bb05476e0a80ae761567/gcc%2Fconfig%2Farc%2Farc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc.c?ref=53b28abf8e4ba37e47d3bb05476e0a80ae761567", "patch": "@@ -9353,7 +9353,7 @@ arc600_corereg_hazard (rtx_insn *pred, rtx_insn *succ)\n \t  continue;\n \t}\n       rtx dest = XEXP (x, 0);\n-      /* Check if this sets a an extension register.  N.B. we use 61 for the\n+      /* Check if this sets an extension register.  N.B. we use 61 for the\n \t condition codes, which is definitely not an extension register.  */\n       if (REG_P (dest) && REGNO (dest) >= 32 && REGNO (dest) < 61\n \t  /* Check if the same register is used by the PAT.  */"}, {"sha": "b6bc334796dd52fa5bf38fbdefba27711c4b31a4", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53b28abf8e4ba37e47d3bb05476e0a80ae761567/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53b28abf8e4ba37e47d3bb05476e0a80ae761567/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=53b28abf8e4ba37e47d3bb05476e0a80ae761567", "patch": "@@ -13252,7 +13252,7 @@ s390_output_mi_thunk (FILE *file, tree thunk ATTRIBUTE_UNUSED,\n   assemble_end_function (thunk, fnname);\n }\n \n-/* Output either an indirect jump or a an indirect call\n+/* Output either an indirect jump or an indirect call\n    (RETURN_ADDR_REGNO != INVALID_REGNUM) with target register REGNO\n    using a branch trampoline disabling branch target prediction.  */\n "}, {"sha": "79434c9d45e420a156537bd662a9c91886a43cbb", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53b28abf8e4ba37e47d3bb05476e0a80ae761567/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53b28abf8e4ba37e47d3bb05476e0a80ae761567/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=53b28abf8e4ba37e47d3bb05476e0a80ae761567", "patch": "@@ -1,3 +1,9 @@\n+2020-03-14  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* logic.cc (formula::formula): Change \"a an\" to \"an\" in a comment.\n+\t* parser.c (cp_debug_parser): Change \"a an\" to \"an\" in a string\n+\tliteral.\n+\n 2020-03-13  Patrick Palka  <ppalka@redhat.com>\n \n \tPR c++/67960"}, {"sha": "4e376fd6e2f6f6c60e7df5f927555ad1f94fdb9e", "filename": "gcc/cp/logic.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53b28abf8e4ba37e47d3bb05476e0a80ae761567/gcc%2Fcp%2Flogic.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53b28abf8e4ba37e47d3bb05476e0a80ae761567/gcc%2Fcp%2Flogic.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Flogic.cc?ref=53b28abf8e4ba37e47d3bb05476e0a80ae761567", "patch": "@@ -238,7 +238,7 @@ struct formula\n \n   formula (tree t)\n   {\n-    /* This should call emplace_back(). There's a an extra copy being\n+    /* This should call emplace_back(). There's an extra copy being\n        invoked by using push_back().  */\n     m_clauses.push_back (t);\n     m_current = m_clauses.begin ();"}, {"sha": "0c7db8b4962dbafb69202a94ecb409f87e6b2697", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53b28abf8e4ba37e47d3bb05476e0a80ae761567/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53b28abf8e4ba37e47d3bb05476e0a80ae761567/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=53b28abf8e4ba37e47d3bb05476e0a80ae761567", "patch": "@@ -556,7 +556,7 @@ cp_debug_parser (FILE *file, cp_parser *parser)\n \t\t\t      parser->in_statement & IN_SWITCH_STMT);\n   cp_debug_print_flag (file, \"Parsing a structured OpenMP block\",\n \t\t\t      parser->in_statement & IN_OMP_BLOCK);\n-  cp_debug_print_flag (file, \"Parsing a an OpenMP loop\",\n+  cp_debug_print_flag (file, \"Parsing an OpenMP loop\",\n \t\t\t      parser->in_statement & IN_OMP_FOR);\n   cp_debug_print_flag (file, \"Parsing an if statement\",\n \t\t\t      parser->in_statement & IN_IF_STMT);"}, {"sha": "9e45cc55df48c535c64ca22e7d955da3315fc5a7", "filename": "gcc/gimple-fold.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53b28abf8e4ba37e47d3bb05476e0a80ae761567/gcc%2Fgimple-fold.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53b28abf8e4ba37e47d3bb05476e0a80ae761567/gcc%2Fgimple-fold.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-fold.c?ref=53b28abf8e4ba37e47d3bb05476e0a80ae761567", "patch": "@@ -1857,7 +1857,7 @@ gimple_fold_builtin_strncpy (gimple_stmt_iterator *gsi,\n   /* If the LEN parameter is zero, return DEST.  */\n   if (integer_zerop (len))\n     {\n-      /* Avoid warning if the destination refers to a an array/pointer\n+      /* Avoid warning if the destination refers to an array/pointer\n \t decorate with attribute nonstring.  */\n       if (!nonstring)\n \t{"}, {"sha": "ffeaaba454d140c80dccf82b9acdc62683292082", "filename": "gcc/hsa-common.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53b28abf8e4ba37e47d3bb05476e0a80ae761567/gcc%2Fhsa-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53b28abf8e4ba37e47d3bb05476e0a80ae761567/gcc%2Fhsa-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhsa-common.h?ref=53b28abf8e4ba37e47d3bb05476e0a80ae761567", "patch": "@@ -199,7 +199,7 @@ class hsa_op_immed : public hsa_op_with_type\n   void operator delete (void *) {}\n };\n \n-/* Report whether or not P is a an immediate operand.  */\n+/* Report whether or not P is an immediate operand.  */\n \n template <>\n template <>"}, {"sha": "0d70f3cc95d5043c9eff070dd288df92d21bf90b", "filename": "gcc/tree-ssa-strlen.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53b28abf8e4ba37e47d3bb05476e0a80ae761567/gcc%2Ftree-ssa-strlen.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53b28abf8e4ba37e47d3bb05476e0a80ae761567/gcc%2Ftree-ssa-strlen.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-strlen.c?ref=53b28abf8e4ba37e47d3bb05476e0a80ae761567", "patch": "@@ -3081,7 +3081,7 @@ maybe_diag_stxncpy_trunc (gimple_stmt_iterator gsi, tree src, tree cnt)\n \treturn false;\n     }\n \n-  /* Likewise, if the destination refers to a an array/pointer declared\n+  /* Likewise, if the destination refers to an array/pointer declared\n      nonstring return early.  */\n   if (get_attr_nonstring_decl (dstdecl, &ref))\n     return false;"}]}