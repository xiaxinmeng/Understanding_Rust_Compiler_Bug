{"sha": "f709638a8d4de40489a146bbabc26bfea446d9b9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjcwOTYzOGE4ZDRkZTQwNDg5YTE0NmJiYWJjMjZiZmVhNDQ2ZDliOQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2008-07-14T08:46:14Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2008-07-14T08:46:14Z"}, "message": "tree-ssa-pre.c (insert_into_preds_of_block): Do not call convert.\n\n2008-07-14  Richard Guenther  <rguenther@suse.de>\n\n\t* tree-ssa-pre.c (insert_into_preds_of_block): Do not call\n\tconvert.\n\nFrom-SVN: r137780", "tree": {"sha": "589592bbb71834189f504fff4dcfe789985bb3ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/589592bbb71834189f504fff4dcfe789985bb3ee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f709638a8d4de40489a146bbabc26bfea446d9b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f709638a8d4de40489a146bbabc26bfea446d9b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f709638a8d4de40489a146bbabc26bfea446d9b9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f709638a8d4de40489a146bbabc26bfea446d9b9/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1f9e1fc69b80fcc48f4df72fb0a3d9020f802a46", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f9e1fc69b80fcc48f4df72fb0a3d9020f802a46", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f9e1fc69b80fcc48f4df72fb0a3d9020f802a46"}], "stats": {"total": 16, "additions": 7, "deletions": 9}, "files": [{"sha": "09fa7d3f6f957027defaa3654f1bf8e7f3e40044", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f709638a8d4de40489a146bbabc26bfea446d9b9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f709638a8d4de40489a146bbabc26bfea446d9b9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f709638a8d4de40489a146bbabc26bfea446d9b9", "patch": "@@ -1,3 +1,8 @@\n+2008-07-14  Richard Guenther  <rguenther@suse.de>\n+\n+\t* tree-ssa-pre.c (insert_into_preds_of_block): Do not call\n+\tconvert.\n+\n 2008-07-14  Andreas Krebbel  <krebbel1@de.ibm.com>\n \n \tPR target/36745"}, {"sha": "07290bc48c4446423327b9e8293133d49d7b3898", "filename": "gcc/tree-ssa-pre.c", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f709638a8d4de40489a146bbabc26bfea446d9b9/gcc%2Ftree-ssa-pre.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f709638a8d4de40489a146bbabc26bfea446d9b9/gcc%2Ftree-ssa-pre.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-pre.c?ref=f709638a8d4de40489a146bbabc26bfea446d9b9", "patch": "@@ -2949,18 +2949,11 @@ insert_into_preds_of_block (basic_block block, unsigned int exprnum,\n \t     our IL requires all operands of a phi node have the same\n \t     type.  */\n \t  tree name = PRE_EXPR_NAME (eprime);\n-\t  if (TREE_TYPE (name) != type)\n+\t  if (!useless_type_conversion_p (type, TREE_TYPE (name)))\n \t    {\n \t      tree builtexpr;\n \t      tree forcedexpr;\n-\t      /* When eliminating casts through unions,\n-\t\t we sometimes want to convert a real to an integer,\n-\t\t which fold_convert will ICE on  */\n-/*\t      if (fold_convertible_p (type, name)) */\n-\t\tbuiltexpr = fold_convert (type, name);\n-/*\t      else\n-\t\tbuiltexpr = convert (type, name);*/\n-\n+\t      builtexpr = fold_convert (type, name);\n \t      forcedexpr = force_gimple_operand (builtexpr,\n \t\t\t\t\t\t &stmts, true,\n \t\t\t\t\t\t NULL);"}]}