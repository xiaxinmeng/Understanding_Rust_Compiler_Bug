{"sha": "bc8b35b594a1d5dbe919579e11a4372baeb6f96d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmM4YjM1YjU5NGExZDVkYmU5MTk1NzllMTFhNDM3MmJhZWI2Zjk2ZA==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2006-10-01T08:27:49Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2006-10-01T08:27:49Z"}, "message": "basic_file_stdio.cc: As an extension...\n\n2006-10-01  Paolo Carlini  <pcarlini@suse.de>\n\n\t* config/io/basic_file_stdio.cc: As an extension, and\n\tconsistently with C facilities, allow for in|out|app and\n\tin|out|app|binary openmodes.\n\t* testsuite/27_io/basic_filebuf/open/char/4.cc: New.\n\nFrom-SVN: r117346", "tree": {"sha": "79823d103470e555356990870d01803f1c0b14a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/79823d103470e555356990870d01803f1c0b14a8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bc8b35b594a1d5dbe919579e11a4372baeb6f96d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc8b35b594a1d5dbe919579e11a4372baeb6f96d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc8b35b594a1d5dbe919579e11a4372baeb6f96d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc8b35b594a1d5dbe919579e11a4372baeb6f96d/comments", "author": null, "committer": null, "parents": [{"sha": "f53c2bfab1e6bf3cfa926e2617867f2875af28ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f53c2bfab1e6bf3cfa926e2617867f2875af28ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f53c2bfab1e6bf3cfa926e2617867f2875af28ed"}], "stats": {"total": 62, "additions": 62, "deletions": 0}, "files": [{"sha": "b843fb4c8b501b95c3c93d1104e4a9e70598329f", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc8b35b594a1d5dbe919579e11a4372baeb6f96d/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc8b35b594a1d5dbe919579e11a4372baeb6f96d/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=bc8b35b594a1d5dbe919579e11a4372baeb6f96d", "patch": "@@ -1,3 +1,10 @@\n+2006-10-01  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* config/io/basic_file_stdio.cc: As an extension, and\n+\tconsistently with C facilities, allow for in|out|app and\n+\tin|out|app|binary openmodes.\n+\t* testsuite/27_io/basic_filebuf/open/char/4.cc: New.\n+\n 2006-09-30  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* include/ext/pb_ds/detail/types_traits.hpp (store_extra_false_type):"}, {"sha": "41d914ad8599907061a5189a224d7078127dcd4b", "filename": "libstdc++-v3/config/io/basic_file_stdio.cc", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc8b35b594a1d5dbe919579e11a4372baeb6f96d/libstdc%2B%2B-v3%2Fconfig%2Fio%2Fbasic_file_stdio.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc8b35b594a1d5dbe919579e11a4372baeb6f96d/libstdc%2B%2B-v3%2Fconfig%2Fio%2Fbasic_file_stdio.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fio%2Fbasic_file_stdio.cc?ref=bc8b35b594a1d5dbe919579e11a4372baeb6f96d", "patch": "@@ -95,13 +95,17 @@ namespace\n       case (in                     ): return \"r\";  \n       case (in|out                 ): return \"r+\"; \n       case (in|out|trunc           ): return \"w+\"; \n+      // Extension to Table 92.\n+      case (in|out      |app       ): return \"a+\"; \n \t\n       case (   out          |binary): return \"wb\"; \n       case (   out      |app|binary): return \"ab\"; \n       case (   out|trunc    |binary): return \"wb\"; \n       case (in              |binary): return \"rb\"; \n       case (in|out          |binary): return \"r+b\";\n       case (in|out|trunc    |binary): return \"w+b\";\n+      // Extension to Table 92.\n+      case (in|out      |app|binary): return \"a+b\";\n \t\n       default: return 0; // invalid\n       }"}, {"sha": "dde8086999ace6a1dba27e34174cf88a21b95043", "filename": "libstdc++-v3/testsuite/27_io/basic_filebuf/open/char/4.cc", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc8b35b594a1d5dbe919579e11a4372baeb6f96d/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fopen%2Fchar%2F4.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc8b35b594a1d5dbe919579e11a4372baeb6f96d/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fopen%2Fchar%2F4.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fopen%2Fchar%2F4.cc?ref=bc8b35b594a1d5dbe919579e11a4372baeb6f96d", "patch": "@@ -0,0 +1,51 @@\n+// 2006-10-01  Paolo Carlini  <pcarlini@suse.de>\n+\n+// Copyright (C) 2006 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+#include <fstream>\n+#include <testsuite_hooks.h>\n+\n+// As an extension to Table 92, consistently with the C standards, we also\n+// allow in|out|app and in|out|app|binary.\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+  const char* name = \"tmp_file4\";\n+\n+  std::fstream scratch_file;\n+\n+  scratch_file.open(name, std::ios_base::in | std::ios_base::out\n+\t\t    | std::ios_base::app);\n+  VERIFY( scratch_file );\n+  VERIFY( scratch_file.is_open() );\n+  scratch_file.close();\n+\n+  scratch_file.open(name, std::ios_base::in | std::ios_base::out\n+\t\t    | std::ios_base::app | std::ios_base::binary);\n+  VERIFY( scratch_file );\n+  VERIFY( scratch_file.is_open() );  \n+  scratch_file.close();\n+}\n+\n+int\n+main()\n+{\n+  test01();\n+  return 0;\n+}"}]}