{"sha": "9858e0ccdaea066d6c044e6e4195966e9e4b2747", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTg1OGUwY2NkYWVhMDY2ZDZjMDQ0ZTZlNDE5NTk2NmU5ZTRiMjc0Nw==", "commit": {"author": {"name": "Jie Zhang", "email": "jie.zhang@analog.com", "date": "2010-01-13T14:57:59Z"}, "committer": {"name": "Jie Zhang", "email": "jiez@gcc.gnu.org", "date": "2010-01-13T14:57:59Z"}, "message": "l2.c: New test.\n\n\t* gcc.target/bfin/l2.c: New test.\n\t* gcc.target/bfin/bfin.exp (dg-bfin-processors): New.\n\nFrom-SVN: r155860", "tree": {"sha": "87c22eef20cf47fef3a76da7b92988ee70997976", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/87c22eef20cf47fef3a76da7b92988ee70997976"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9858e0ccdaea066d6c044e6e4195966e9e4b2747", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9858e0ccdaea066d6c044e6e4195966e9e4b2747", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9858e0ccdaea066d6c044e6e4195966e9e4b2747", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9858e0ccdaea066d6c044e6e4195966e9e4b2747/comments", "author": {"login": "jiez-adi", "id": 103514486, "node_id": "U_kgDOBiuBdg", "avatar_url": "https://avatars.githubusercontent.com/u/103514486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jiez-adi", "html_url": "https://github.com/jiez-adi", "followers_url": "https://api.github.com/users/jiez-adi/followers", "following_url": "https://api.github.com/users/jiez-adi/following{/other_user}", "gists_url": "https://api.github.com/users/jiez-adi/gists{/gist_id}", "starred_url": "https://api.github.com/users/jiez-adi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jiez-adi/subscriptions", "organizations_url": "https://api.github.com/users/jiez-adi/orgs", "repos_url": "https://api.github.com/users/jiez-adi/repos", "events_url": "https://api.github.com/users/jiez-adi/events{/privacy}", "received_events_url": "https://api.github.com/users/jiez-adi/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "48f30f629fb6991ba1ddbd40385993a2a29457a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48f30f629fb6991ba1ddbd40385993a2a29457a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/48f30f629fb6991ba1ddbd40385993a2a29457a8"}], "stats": {"total": 69, "additions": 68, "deletions": 1}, "files": [{"sha": "9d264b6b44de5fdf75c8d8311a208f9d8d38874b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9858e0ccdaea066d6c044e6e4195966e9e4b2747/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9858e0ccdaea066d6c044e6e4195966e9e4b2747/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9858e0ccdaea066d6c044e6e4195966e9e4b2747", "patch": "@@ -1,3 +1,8 @@\n+2010-01-13  Jie Zhang  <jie.zhang@analog.com>\n+\n+\t* gcc.target/bfin/l2.c: New test.\n+\t* gcc.target/bfin/bfin.exp (dg-bfin-processors): New.\n+\n 2010-01-13  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/42716"}, {"sha": "85a50a5ba4a732ec73485eb9f11ed1afbf9c45b3", "filename": "gcc/testsuite/gcc.target/bfin/bfin.exp", "status": "modified", "additions": 25, "deletions": 1, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9858e0ccdaea066d6c044e6e4195966e9e4b2747/gcc%2Ftestsuite%2Fgcc.target%2Fbfin%2Fbfin.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9858e0ccdaea066d6c044e6e4195966e9e4b2747/gcc%2Ftestsuite%2Fgcc.target%2Fbfin%2Fbfin.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fbfin%2Fbfin.exp?ref=9858e0ccdaea066d6c044e6e4195966e9e4b2747", "patch": "@@ -1,4 +1,4 @@\n-# Copyright (C) 2007 Free Software Foundation, Inc.\n+# Copyright (C) 2007, 2010 Free Software Foundation, Inc.\n \n # This program is free software; you can redistribute it and/or modify\n # it under the terms of the GNU General Public License as published by\n@@ -53,6 +53,30 @@ proc dg-bfin-options {args} {\n     }\n }\n \n+# dg-bfin-processors can be used to specify the processors which can\n+# run the test case.\n+proc dg-bfin-processors {args} {\n+    upvar dg-extra-tool-flags extra_tool_flags\n+    upvar dg-do-what do_what\n+\n+    set multilib_cpu \"\"\n+    set cpu \"\"\n+\n+    foreach flag [target_info multilib_flags] {\n+\tregexp \"^-mcpu=([^-]*)\" $flag dummy multilib_cpu\n+    }\n+\n+    set cpus [lindex $args 1]\n+\n+    foreach cpu $cpus {\n+\tif {$multilib_cpu == $cpu} {\n+\t    return\n+\t}\n+    }\n+\n+    set do_what [list [lindex $do_what 0] \"N\" \"P\"]\n+}\n+\n # Initialize `dg'.\n dg-init\n "}, {"sha": "56f64cc82b485201abde2c1e1486ec0eca4d3fc0", "filename": "gcc/testsuite/gcc.target/bfin/l2.c", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9858e0ccdaea066d6c044e6e4195966e9e4b2747/gcc%2Ftestsuite%2Fgcc.target%2Fbfin%2Fl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9858e0ccdaea066d6c044e6e4195966e9e4b2747/gcc%2Ftestsuite%2Fgcc.target%2Fbfin%2Fl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fbfin%2Fl2.c?ref=9858e0ccdaea066d6c044e6e4195966e9e4b2747", "patch": "@@ -0,0 +1,38 @@\n+/* { dg-do run { target bfin-*-linux-uclibc } } */\n+/* { dg-bfin-processors bf544 bf547 bf548 bf549 bf561} */\n+\n+#if defined(__ADSPBF544__)\n+#define L2_START 0xFEB00000\n+#define L2_LENGTH 0x10000\n+#else\n+#define L2_START 0xFEB00000\n+#define L2_LENGTH 0x20000\n+#endif\n+\n+int n __attribute__ ((l2));\n+\n+int foo (int i) __attribute__ ((l2));\n+\n+int foo (int a)\n+{\n+  return a + 1;\n+}\n+\n+int main ()\n+{\n+  int r;\n+  unsigned long *p;\n+\n+  p = (unsigned long *) foo;\n+  if (*p < L2_START || *p >= L2_START + L2_LENGTH)\n+    return 1;\n+\n+  p = (unsigned long *) &n;\n+  if ((unsigned long) p < L2_START || (unsigned long) p >= L2_START + L2_LENGTH)\n+    return 2;\n+\n+  if (foo (0) != 1)\n+    return 3;\n+\n+  return 0;\n+}"}]}