{"sha": "c1a404bd99198779b2115d99ab84535a5b7fd9fb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzFhNDA0YmQ5OTE5ODc3OWIyMTE1ZDk5YWI4NDUzNWE1YjdmZDlmYg==", "commit": {"author": {"name": "Richard Sandiford", "email": "rsandifo@redhat.com", "date": "2004-09-09T20:39:28Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2004-09-09T20:39:28Z"}, "message": "genattrtab.c (write_insn_cases): New function, split out from write_attr_case.\n\n\t* genattrtab.c (write_insn_cases): New function, split out from\n\twrite_attr_case.  Correctly handle define_peepholes when printing\n\tthe instruction name.\n\t(write_attr_case, write_const_num_delay_slots): Use write_insn_cases.\n\nFrom-SVN: r87252", "tree": {"sha": "546268e9a1b4d0a339b08e4c2e3109ea5498665d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/546268e9a1b4d0a339b08e4c2e3109ea5498665d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c1a404bd99198779b2115d99ab84535a5b7fd9fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1a404bd99198779b2115d99ab84535a5b7fd9fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1a404bd99198779b2115d99ab84535a5b7fd9fb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1a404bd99198779b2115d99ab84535a5b7fd9fb/comments", "author": null, "committer": null, "parents": [{"sha": "b2416742352d9a2def00e2a63a6c90bdbda910f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2416742352d9a2def00e2a63a6c90bdbda910f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b2416742352d9a2def00e2a63a6c90bdbda910f6"}], "stats": {"total": 48, "additions": 29, "deletions": 19}, "files": [{"sha": "ba72d1c276624d23b2e2ad31b86e478abc6cc282", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1a404bd99198779b2115d99ab84535a5b7fd9fb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1a404bd99198779b2115d99ab84535a5b7fd9fb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c1a404bd99198779b2115d99ab84535a5b7fd9fb", "patch": "@@ -1,3 +1,10 @@\n+2004-09-09  Richard Sandiford  <rsandifo@redhat.com>\n+\n+\t* genattrtab.c (write_insn_cases): New function, split out from\n+\twrite_attr_case.  Correctly handle define_peepholes when printing\n+\tthe instruction name.\n+\t(write_attr_case, write_const_num_delay_slots): Use write_insn_cases.\n+\n 2004-09-09  Hans-Peter Nilsson  <hp@axis.com>\n \n \tPR target/17377"}, {"sha": "44a073f2b53269c0862e8580c2fd72c56bb6b04c", "filename": "gcc/genattrtab.c", "status": "modified", "additions": 22, "deletions": 19, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1a404bd99198779b2115d99ab84535a5b7fd9fb/gcc%2Fgenattrtab.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1a404bd99198779b2115d99ab84535a5b7fd9fb/gcc%2Fgenattrtab.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenattrtab.c?ref=c1a404bd99198779b2115d99ab84535a5b7fd9fb", "patch": "@@ -336,6 +336,7 @@ static rtx eliminate_known_true (rtx, rtx, int, int);\n static void write_attr_set\t(struct attr_desc *, int, rtx,\n \t\t\t\t const char *, const char *, rtx,\n \t\t\t\t int, int);\n+static void write_insn_cases\t(struct insn_ent *, int);\n static void write_attr_case\t(struct attr_desc *, struct attr_value *,\n \t\t\t\t int, const char *, const char *, int, rtx);\n static void write_attr_valueq\t(struct attr_desc *, const char *);\n@@ -3873,15 +3874,32 @@ write_attr_set (struct attr_desc *attr, int indent, rtx value,\n     }\n }\n \n+/* Write a series of case statements for every instruction in list IE.\n+   INDENT is the amount of indentation to write before each case.  */\n+\n+static void\n+write_insn_cases (struct insn_ent *ie, int indent)\n+{\n+  for (; ie != 0; ie = ie->next)\n+    if (ie->def->insn_code != -1)\n+      {\n+\twrite_indent (indent);\n+\tif (GET_CODE (ie->def->def) == DEFINE_PEEPHOLE)\n+\t  printf (\"case %d:  /* define_peephole, line %d */\\n\",\n+\t\t  ie->def->insn_code, ie->def->lineno);\n+\telse\n+\t  printf (\"case %d:  /* %s */\\n\",\n+\t\t  ie->def->insn_code, XSTR (ie->def->def, 0));\n+      }\n+}\n+\n /* Write out the computation for one attribute value.  */\n \n static void\n write_attr_case (struct attr_desc *attr, struct attr_value *av,\n \t\t int write_case_lines, const char *prefix, const char *suffix,\n \t\t int indent, rtx known_true)\n {\n-  struct insn_ent *ie;\n-\n   if (av->num_insns == 0)\n     return;\n \n@@ -3898,15 +3916,7 @@ write_attr_case (struct attr_desc *attr, struct attr_value *av,\n     }\n \n   if (write_case_lines)\n-    {\n-      for (ie = av->first_insn; ie; ie = ie->next)\n-\tif (ie->def->insn_code != -1)\n-\t  {\n-\t    write_indent (indent);\n-\t    printf (\"case %d:  /* %s */\\n\",\n-\t\t    ie->def->insn_code, XSTR (ie->def->def, 0));\n-\t  }\n-    }\n+    write_insn_cases (av->first_insn, indent);\n   else\n     {\n       write_indent (indent);\n@@ -4357,7 +4367,6 @@ write_const_num_delay_slots (void)\n {\n   struct attr_desc *attr = find_attr (&num_delay_slots_str, 0);\n   struct attr_value *av;\n-  struct insn_ent *ie;\n \n   if (attr)\n     {\n@@ -4371,13 +4380,7 @@ write_const_num_delay_slots (void)\n \t  length_used = 0;\n \t  walk_attr_value (av->value);\n \t  if (length_used)\n-\t    {\n-\t      for (ie = av->first_insn; ie; ie = ie->next)\n-\t\tif (ie->def->insn_code != -1)\n-\t\t  printf (\"    case %d:  /* %s */\\n\",\n-\t\t\t  ie->def->insn_code, XSTR (ie->def->def, 0));\n-\t      printf (\"      return 0;\\n\");\n-\t    }\n+\t    write_insn_cases (av->first_insn, 4);\n \t}\n \n       printf (\"    default:\\n\");"}]}