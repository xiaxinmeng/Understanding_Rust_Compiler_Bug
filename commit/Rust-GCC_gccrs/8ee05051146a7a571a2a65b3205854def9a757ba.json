{"sha": "8ee05051146a7a571a2a65b3205854def9a757ba", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGVlMDUwNTExNDZhN2E1NzFhMmE2NWIzMjA1ODU0ZGVmOWE3NTdiYQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2013-05-17T22:15:47Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2013-05-17T22:15:47Z"}, "message": "lto-partition.c (privatize_symbol_name): Return true when privatizing happened.\n\n\t* lto-partition.c (privatize_symbol_name): Return true when\n\tprivatizing happened.\n\t(rename_statics): Do not go into infinite loop when privatizing\n\tis not needed.\n\nFrom-SVN: r199040", "tree": {"sha": "26a9f13a6ab5c370d095e513433b24bb37bf8aad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/26a9f13a6ab5c370d095e513433b24bb37bf8aad"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8ee05051146a7a571a2a65b3205854def9a757ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ee05051146a7a571a2a65b3205854def9a757ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ee05051146a7a571a2a65b3205854def9a757ba", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ee05051146a7a571a2a65b3205854def9a757ba/comments", "author": null, "committer": null, "parents": [{"sha": "c3272a921a1492fcc4e437580d718f423f4e32db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3272a921a1492fcc4e437580d718f423f4e32db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3272a921a1492fcc4e437580d718f423f4e32db"}], "stats": {"total": 23, "additions": 16, "deletions": 7}, "files": [{"sha": "3ea106b85454600b048821367469f91e978f94c6", "filename": "gcc/lto/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ee05051146a7a571a2a65b3205854def9a757ba/gcc%2Flto%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ee05051146a7a571a2a65b3205854def9a757ba/gcc%2Flto%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2FChangeLog?ref=8ee05051146a7a571a2a65b3205854def9a757ba", "patch": "@@ -1,3 +1,10 @@\n+2013-05-15  Jan Hubicka  <jh@suse.cz>\n+\n+\t* lto-partition.c (privatize_symbol_name): Return true when\n+\tprivatizing happened.\n+\t(rename_statics): Do not go into infinite loop when privatizing\n+\tis not needed.\n+\n 2013-05-16  Jason Merrill  <jason@redhat.com>\n \n \t* Make-lang.in ($(LTO_EXE)): Use link mutex."}, {"sha": "62341c12c04b87bd0cc98a2e524608dda32a1663", "filename": "gcc/lto/lto-partition.c", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ee05051146a7a571a2a65b3205854def9a757ba/gcc%2Flto%2Flto-partition.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ee05051146a7a571a2a65b3205854def9a757ba/gcc%2Flto%2Flto-partition.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto-partition.c?ref=8ee05051146a7a571a2a65b3205854def9a757ba", "patch": "@@ -766,7 +766,7 @@ lto_balanced_map (void)\n       with symbols defined out of the LTO world.\n */\n \n-static void\n+static bool\n privatize_symbol_name (symtab_node node)\n {\n   tree decl = node->symbol.decl;\n@@ -781,7 +781,7 @@ privatize_symbol_name (symtab_node node)\n \tfprintf (cgraph_dump_file,\n \t\t\"Not privatizing symbol name: %s. It privatized already.\\n\",\n \t\tname);\n-      return;\n+      return false;\n     }\n   /* Avoid mangling of already mangled clones. \n      ???  should have a flag whether a symbol has a 'private' name already,\n@@ -793,7 +793,7 @@ privatize_symbol_name (symtab_node node)\n \tfprintf (cgraph_dump_file,\n \t\t\"Not privatizing symbol name: %s. Has unique name.\\n\",\n \t\tname);\n-      return;\n+      return false;\n     }\n   change_decl_assembler_name (decl, clone_function_name (decl, \"lto_priv\"));\n   if (node->symbol.lto_file_data)\n@@ -804,6 +804,7 @@ privatize_symbol_name (symtab_node node)\n     fprintf (cgraph_dump_file,\n \t    \"Privatizing symbol name: %s -> %s\\n\",\n \t    name, IDENTIFIER_POINTER (DECL_ASSEMBLER_NAME (decl)));\n+  return true;\n }\n \n /* Promote variable VNODE to be static.  */\n@@ -906,11 +907,12 @@ rename_statics (lto_symtab_encoder_t encoder, symtab_node node)\n \t&& (!encoder\n \t    || lto_symtab_encoder_lookup (encoder, s) != LCC_NOT_FOUND))\n       {\n-        privatize_symbol_name (s);\n-\t/* Re-start from beggining since we do not know how many symbols changed a name.  */\n-\ts = symtab_node_for_asm (name);\n+        if (privatize_symbol_name (s))\n+\t  /* Re-start from beggining since we do not know how many symbols changed a name.  */\n+\t  s = symtab_node_for_asm (name);\n+        else s = s->symbol.next_sharing_asm_name;\n       }\n-   else s = s->symbol.next_sharing_asm_name;\n+    else s = s->symbol.next_sharing_asm_name;\n }\n \n /* Find out all static decls that need to be promoted to global because"}]}