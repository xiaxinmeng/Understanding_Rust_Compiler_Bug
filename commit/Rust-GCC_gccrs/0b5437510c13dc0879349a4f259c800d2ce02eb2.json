{"sha": "0b5437510c13dc0879349a4f259c800d2ce02eb2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGI1NDM3NTEwYzEzZGMwODc5MzQ5YTRmMjU5YzgwMGQyY2UwMmViMg==", "commit": {"author": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2021-03-12T15:33:02Z"}, "committer": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2021-03-12T15:33:02Z"}, "message": "Fortran/OpenMP: Fix use_device_{ptr,addr} with assumed-size array [PR98858]\n\ngcc/ChangeLog:\n\n\tPR fortran/98858\n\t* gimplify.c (omp_add_variable): Handle NULL_TREE as size\n\toccuring for assumed-size arrays in use_device_{ptr,addr}.\n\nlibgomp/ChangeLog:\n\n\tPR fortran/98858\n\t* testsuite/libgomp.fortran/use_device_ptr-3.f90: New test.", "tree": {"sha": "e826db71f61bb4b8581652be07a4608d25025a3f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e826db71f61bb4b8581652be07a4608d25025a3f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0b5437510c13dc0879349a4f259c800d2ce02eb2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b5437510c13dc0879349a4f259c800d2ce02eb2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b5437510c13dc0879349a4f259c800d2ce02eb2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b5437510c13dc0879349a4f259c800d2ce02eb2/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a6e9633ccb593937fceec67fafc2afe5d518d735", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6e9633ccb593937fceec67fafc2afe5d518d735", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6e9633ccb593937fceec67fafc2afe5d518d735"}], "stats": {"total": 93, "additions": 92, "deletions": 1}, "files": [{"sha": "6da66985ad62cc170158f76656fe3085b6246567", "filename": "gcc/gimplify.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b5437510c13dc0879349a4f259c800d2ce02eb2/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b5437510c13dc0879349a4f259c800d2ce02eb2/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=0b5437510c13dc0879349a4f259c800d2ce02eb2", "patch": "@@ -7078,7 +7078,7 @@ omp_add_variable (struct gimplify_omp_ctx *ctx, tree decl, unsigned int flags)\n       if ((flags & GOVD_SHARED) == 0)\n \t{\n \t  t = TYPE_SIZE_UNIT (TREE_TYPE (TREE_TYPE (decl)));\n-\t  if (DECL_P (t))\n+\t  if (t && DECL_P (t))\n \t    omp_notice_variable (ctx, t, true);\n \t}\n     }"}, {"sha": "f2b33cd5e89654fae73c55562af930242a1fee06", "filename": "libgomp/testsuite/libgomp.fortran/use_device_ptr-3.f90", "status": "added", "additions": 91, "deletions": 0, "changes": 91, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b5437510c13dc0879349a4f259c800d2ce02eb2/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fuse_device_ptr-3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b5437510c13dc0879349a4f259c800d2ce02eb2/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fuse_device_ptr-3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fuse_device_ptr-3.f90?ref=0b5437510c13dc0879349a4f259c800d2ce02eb2", "patch": "@@ -0,0 +1,91 @@\n+! PR fortran/98858\n+!\n+! Assumed-size array with use_device_ptr()\n+!\n+program test_use_device_ptr\n+  use iso_c_binding, only: c_ptr, c_loc, c_f_pointer\n+  implicit none\n+  double precision :: alpha\n+  integer, parameter :: lda = 10\n+  integer, allocatable :: mat(:, :)\n+       integer :: i, j\n+\n+  allocate(mat(lda, lda))\n+  do i = 1, lda\n+    do j = 1, lda\n+      mat(j,i) = i*100 + j\n+    end do\n+  end do\n+\n+  !$omp target enter data map(to:mat)\n+  call dgemm(lda, mat)\n+  !$omp target exit data map(from:mat)\n+\n+  do i = 1, lda\n+    do j = 1, lda\n+      if (mat(j,i) /= -(i*100 + j)) stop 1\n+    end do\n+  end do\n+\n+  !$omp target enter data map(to:mat)\n+  call dgemm2(lda, mat)\n+  !$omp target exit data map(from:mat)\n+\n+  do i = 1, lda\n+    do j = 1, lda\n+      if (mat(j,i) /= (i*100 + j)) stop 1\n+    end do\n+  end do\n+\n+  contains\n+\n+    subroutine dgemm(lda, a)\n+      implicit none\n+      integer :: lda\n+      integer, target:: a(lda,*) ! need target attribute to use c_loc\n+      !$omp target data use_device_ptr(a)\n+        call negate_it(c_loc(a), lda)\n+      !$omp end target data\n+    end subroutine\n+\n+    subroutine dgemm2(lda, a)\n+      implicit none\n+      integer :: lda\n+      integer, target:: a(lda,*) ! need target attribute to use c_loc\n+      !$omp target data use_device_addr(a)\n+        call negate_it(c_loc(a), lda)\n+      !$omp end target data\n+    end subroutine\n+\n+    subroutine negate_it(a, n)\n+      type(c_ptr), value :: a\n+      integer, value :: n\n+      integer, pointer :: array(:,:)\n+\n+      ! detour due to OpenMP 5.0 oddness\n+      call c_f_pointer(a, array, [n,n])\n+      call do_offload(array, n)\n+    end\n+\n+    subroutine do_offload(aptr, n)\n+      integer, target :: aptr(:,:)\n+      integer, value :: n\n+      !$omp target is_device_ptr(aptr)\n+      call negate_it_tgt(aptr, n)\n+      !$omp end target\n+    end subroutine do_offload\n+\n+    subroutine negate_it_tgt(array, n)\n+      !$omp declare target\n+       integer, value :: n\n+       integer :: array(n,n)\n+       integer :: i, j\n+       !$omp parallel do collapse(2)\n+       do i = 1, n\n+         do j = 1, n\n+           array(j,i) = - array(j,i)\n+         end do\n+       end do\n+       !$omp end parallel do\n+  end subroutine\n+end program"}]}