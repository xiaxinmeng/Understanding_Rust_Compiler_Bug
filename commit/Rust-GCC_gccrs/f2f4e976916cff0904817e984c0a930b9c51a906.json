{"sha": "f2f4e976916cff0904817e984c0a930b9c51a906", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjJmNGU5NzY5MTZjZmYwOTA0ODE3ZTk4NGMwYTkzMGI5YzUxYTkwNg==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2004-03-06T03:19:40Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2004-03-06T03:19:40Z"}, "message": "* builtins.c: Consistently use logN not log* in comments.\n\nFrom-SVN: r79009", "tree": {"sha": "1d5ae0f6a16bd7ebc22d0655f06279976e8ae99d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1d5ae0f6a16bd7ebc22d0655f06279976e8ae99d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f2f4e976916cff0904817e984c0a930b9c51a906", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2f4e976916cff0904817e984c0a930b9c51a906", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2f4e976916cff0904817e984c0a930b9c51a906", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2f4e976916cff0904817e984c0a930b9c51a906/comments", "author": null, "committer": null, "parents": [{"sha": "2b3493c8bb8ee8d00e93c55d9cad5b322aa9f76e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b3493c8bb8ee8d00e93c55d9cad5b322aa9f76e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b3493c8bb8ee8d00e93c55d9cad5b322aa9f76e"}], "stats": {"total": 12, "additions": 8, "deletions": 4}, "files": [{"sha": "d885b3c7209f867502168537d8cea5ce6cf79ba2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2f4e976916cff0904817e984c0a930b9c51a906/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2f4e976916cff0904817e984c0a930b9c51a906/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f2f4e976916cff0904817e984c0a930b9c51a906", "patch": "@@ -1,3 +1,7 @@\n+2004-03-05  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* builtins.c: Consistently use logN not log* in comments.\n+\n 2004-03-05  Andreas Krebbel  <krebbel1@de.ibm.com>\n \n \t* rtl.h (mem_expr_equal_p): Function prototype added."}, {"sha": "c9aa2ab2d6be74ae4875ce9635e3e14f18b35879", "filename": "gcc/builtins.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2f4e976916cff0904817e984c0a930b9c51a906/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2f4e976916cff0904817e984c0a930b9c51a906/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=f2f4e976916cff0904817e984c0a930b9c51a906", "patch": "@@ -6172,8 +6172,8 @@ real_dconstp (tree expr, const REAL_VALUE_TYPE *value)\n }\n \n /* A subroutine of fold_builtin to fold the various logarithmic\n-   functions.  EXP is the CALL_EXPR of a call to a builtin log*\n-   function.  VALUE is the base of the log* function.  */\n+   functions.  EXP is the CALL_EXPR of a call to a builtin logN\n+   function.  VALUE is the base of the logN function.  */\n \n static tree\n fold_builtin_logarithm (tree exp, const REAL_VALUE_TYPE *value)\n@@ -6187,7 +6187,7 @@ fold_builtin_logarithm (tree exp, const REAL_VALUE_TYPE *value)\n       tree arg = TREE_VALUE (arglist);\n       const enum built_in_function fcode = builtin_mathfn_code (arg);\n \t\n-      /* Optimize log*(1.0) = 0.0.  */\n+      /* Optimize logN(1.0) = 0.0.  */\n       if (real_onep (arg))\n \treturn build_real (type, dconst0);\n \n@@ -6218,7 +6218,7 @@ fold_builtin_logarithm (tree exp, const REAL_VALUE_TYPE *value)\n \t\t      || fcode == BUILT_IN_EXP10L))))\n \treturn convert (type, TREE_VALUE (TREE_OPERAND (arg, 1)));\n \n-      /* Optimize log*(func()) for various exponential functions.  We\n+      /* Optimize logN(func()) for various exponential functions.  We\n          want to determine the value \"x\" and the power \"exponent\" in\n          order to transform logN(x**exponent) into exponent*logN(x).  */\n       if (flag_unsafe_math_optimizations)"}]}