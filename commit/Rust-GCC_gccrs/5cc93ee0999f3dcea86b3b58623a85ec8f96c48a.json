{"sha": "5cc93ee0999f3dcea86b3b58623a85ec8f96c48a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWNjOTNlZTA5OTlmM2RjZWE4NmIzYjU4NjIzYTg1ZWM4Zjk2YzQ4YQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2011-05-31T17:43:04Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2011-05-31T17:43:04Z"}, "message": "i386.md: Use SWI248x instead of X87MODEI...\n\n\t* config/i386/i386.md: Use SWI248x instead of X87MODEI, SWI24 instead\n\tof X87MODEI12 and SWI48x instead of SSEMODEI24.\n\t(SWI248x): New mode iterator, rename from X87MODEI.\n\t(X87MODEI): Remove mode iterator.\n\t(X87MODEI12): Ditto.\n\t(SSEMODEI24): Ditto.\n\nFrom-SVN: r174498", "tree": {"sha": "db64315ec46b55e59b6c107bce76f931daaa9d0b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/db64315ec46b55e59b6c107bce76f931daaa9d0b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5cc93ee0999f3dcea86b3b58623a85ec8f96c48a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5cc93ee0999f3dcea86b3b58623a85ec8f96c48a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5cc93ee0999f3dcea86b3b58623a85ec8f96c48a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5cc93ee0999f3dcea86b3b58623a85ec8f96c48a/comments", "author": null, "committer": null, "parents": [{"sha": "f0686e7897527411f7d0d68b723789f294ecf73a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0686e7897527411f7d0d68b723789f294ecf73a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f0686e7897527411f7d0d68b723789f294ecf73a"}], "stats": {"total": 482, "additions": 244, "deletions": 238}, "files": [{"sha": "2ddaf65493f7e1d1f3f772b075f04d123cbd4ff4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cc93ee0999f3dcea86b3b58623a85ec8f96c48a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cc93ee0999f3dcea86b3b58623a85ec8f96c48a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5cc93ee0999f3dcea86b3b58623a85ec8f96c48a", "patch": "@@ -1,3 +1,12 @@\n+2011-05-31  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.md: Use SWI248x instead of X87MODEI, SWI24 instead\n+\tof X87MODEI12 and SWI48x instead of SSEMODEI24.\n+\t(SWI248x): New mode iterator, rename from X87MODEI.\n+\t(X87MODEI): Remove mode iterator.\n+\t(X87MODEI12): Ditto.\n+\t(SSEMODEI24): Ditto.\n+\n 2011-05-31  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* params.def (PARAM_MAX_VARTRACK_EXPR_DEPTH): New.\n@@ -16,8 +25,7 @@\n \n 2011-05-31  Alexandre Oliva  <aoliva@redhat.com>\n \n-\t* gengtype-state.c (read_state_params_structs): Initialize\n-\tprevious.\n+\t* gengtype-state.c (read_state_params_structs): Initialize previous.\n \n 2011-05-31  Uros Bizjak  <ubizjak@gmail.com>\n "}, {"sha": "056d3c9686a333a27081ac554b240e9491a29962", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 234, "deletions": 236, "changes": 470, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cc93ee0999f3dcea86b3b58623a85ec8f96c48a/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cc93ee0999f3dcea86b3b58623a85ec8f96c48a/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=5cc93ee0999f3dcea86b3b58623a85ec8f96c48a", "patch": "@@ -790,24 +790,27 @@\n (define_code_attr sgnprefix [(sign_extend \"i\") (zero_extend \"\")\n \t\t\t     (div \"i\") (udiv \"\")])\n \n-;; 64bit single word integer modes.\n+;; All integer modes.\n (define_mode_iterator SWI1248x [QI HI SI DI])\n \n-;; 64bit single word integer modes without QImode and HImode.\n-(define_mode_iterator SWI48x [SI DI])\n+;; All integer modes without QImode.\n+(define_mode_iterator SWI248x [HI SI DI])\n \n-;; Single word integer modes.\n-(define_mode_iterator SWI [QI HI SI (DI \"TARGET_64BIT\")])\n+;; All integer modes without QImode and HImode.\n+(define_mode_iterator SWI48x [SI DI])\n \n-;; Single word integer modes without SImode and DImode.\n+;; All integer modes without SImode and DImode.\n (define_mode_iterator SWI12 [QI HI])\n \n-;; Single word integer modes without DImode.\n+;; All integer modes without DImode.\n (define_mode_iterator SWI124 [QI HI SI])\n \n-;; Single word integer modes without QImode and DImode.\n+;; All integer modes without QImode and DImode.\n (define_mode_iterator SWI24 [HI SI])\n \n+;; Single word integer modes.\n+(define_mode_iterator SWI [QI HI SI (DI \"TARGET_64BIT\")])\n+\n ;; Single word integer modes without QImode.\n (define_mode_iterator SWI248 [HI SI (DI \"TARGET_64BIT\")])\n \n@@ -824,7 +827,7 @@\n \t\t\t    (HI \"TARGET_HIMODE_MATH\")\n \t\t\t    SI (DI \"TARGET_64BIT\")])\n \n-;; Math-dependant single word integer modes without DImode.\n+;; Math-dependant integer modes without DImode.\n (define_mode_iterator SWIM124 [(QI \"TARGET_QIMODE_MATH\")\n \t\t\t       (HI \"TARGET_HIMODE_MATH\")\n \t\t\t       SI])\n@@ -927,15 +930,6 @@\n ;; All x87 floating point modes\n (define_mode_iterator X87MODEF [SF DF XF])\n \n-;; All integer modes handled by x87 fisttp operator.\n-(define_mode_iterator X87MODEI [HI SI DI])\n-\n-;; All integer modes handled by integer x87 operators.\n-(define_mode_iterator X87MODEI12 [HI SI])\n-\n-;; All integer modes handled by SSE cvtts?2si* operators.\n-(define_mode_iterator SSEMODEI24 [SI DI])\n-\n ;; SSE instruction suffix for various modes\n (define_mode_attr ssemodesuffix\n   [(SF \"ss\") (DF \"sd\")\n@@ -1425,7 +1419,7 @@\n \t  [(compare:CCFP\n \t     (match_operand 1 \"register_operand\" \"f\")\n \t     (match_operator 3 \"float_operator\"\n-\t       [(match_operand:X87MODEI12 2 \"memory_operand\" \"m\")]))]\n+\t       [(match_operand:SWI24 2 \"memory_operand\" \"m\")]))]\n \t  UNSPEC_FNSTSW))]\n   \"X87_FLOAT_MODE_P (GET_MODE (operands[1]))\n    && (TARGET_USE_<MODE>MODE_FIOP || optimize_function_for_size_p (cfun))\n@@ -1441,7 +1435,7 @@\n \t(compare:CCFP\n \t  (match_operand 1 \"register_operand\" \"f\")\n \t  (match_operator 3 \"float_operator\"\n-\t    [(match_operand:X87MODEI12 2 \"memory_operand\" \"m\")])))\n+\t    [(match_operand:SWI24 2 \"memory_operand\" \"m\")])))\n    (clobber (match_operand:HI 0 \"register_operand\" \"=a\"))]\n   \"X87_FLOAT_MODE_P (GET_MODE (operands[1]))\n    && TARGET_SAHF && !TARGET_CMOVE\n@@ -4415,33 +4409,33 @@\n (define_peephole2\n   [(set (match_operand:MODEF 0 \"register_operand\" \"\")\n \t(match_operand:MODEF 1 \"memory_operand\" \"\"))\n-   (set (match_operand:SSEMODEI24 2 \"register_operand\" \"\")\n-\t(fix:SSEMODEI24 (match_dup 0)))]\n+   (set (match_operand:SWI48x 2 \"register_operand\" \"\")\n+\t(fix:SWI48x (match_dup 0)))]\n   \"TARGET_SHORTEN_X87_SSE\n    && !(TARGET_AVOID_VECTOR_DECODE && optimize_insn_for_speed_p ())\n    && peep2_reg_dead_p (2, operands[0])\"\n-  [(set (match_dup 2) (fix:SSEMODEI24 (match_dup 1)))])\n+  [(set (match_dup 2) (fix:SWI48x (match_dup 1)))])\n \n ;; Avoid vector decoded forms of the instruction.\n (define_peephole2\n   [(match_scratch:DF 2 \"Y2\")\n-   (set (match_operand:SSEMODEI24 0 \"register_operand\" \"\")\n-\t(fix:SSEMODEI24 (match_operand:DF 1 \"memory_operand\" \"\")))]\n+   (set (match_operand:SWI48x 0 \"register_operand\" \"\")\n+\t(fix:SWI48x (match_operand:DF 1 \"memory_operand\" \"\")))]\n   \"TARGET_AVOID_VECTOR_DECODE && optimize_insn_for_speed_p ()\"\n   [(set (match_dup 2) (match_dup 1))\n-   (set (match_dup 0) (fix:SSEMODEI24 (match_dup 2)))])\n+   (set (match_dup 0) (fix:SWI48x (match_dup 2)))])\n \n (define_peephole2\n   [(match_scratch:SF 2 \"x\")\n-   (set (match_operand:SSEMODEI24 0 \"register_operand\" \"\")\n-\t(fix:SSEMODEI24 (match_operand:SF 1 \"memory_operand\" \"\")))]\n+   (set (match_operand:SWI48x 0 \"register_operand\" \"\")\n+\t(fix:SWI48x (match_operand:SF 1 \"memory_operand\" \"\")))]\n   \"TARGET_AVOID_VECTOR_DECODE && optimize_insn_for_speed_p ()\"\n   [(set (match_dup 2) (match_dup 1))\n-   (set (match_dup 0) (fix:SSEMODEI24 (match_dup 2)))])\n+   (set (match_dup 0) (fix:SWI48x (match_dup 2)))])\n \n (define_insn_and_split \"fix_trunc<mode>_fisttp_i387_1\"\n-  [(set (match_operand:X87MODEI 0 \"nonimmediate_operand\" \"\")\n-\t(fix:X87MODEI (match_operand 1 \"register_operand\" \"\")))]\n+  [(set (match_operand:SWI248x 0 \"nonimmediate_operand\" \"\")\n+\t(fix:SWI248x (match_operand 1 \"register_operand\" \"\")))]\n   \"X87_FLOAT_MODE_P (GET_MODE (operands[1]))\n    && TARGET_FISTTP\n    && !((SSE_FLOAT_MODE_P (GET_MODE (operands[1]))\n@@ -4467,8 +4461,8 @@\n    (set_attr \"mode\" \"<MODE>\")])\n \n (define_insn \"fix_trunc<mode>_i387_fisttp\"\n-  [(set (match_operand:X87MODEI 0 \"memory_operand\" \"=m\")\n-\t(fix:X87MODEI (match_operand 1 \"register_operand\" \"f\")))\n+  [(set (match_operand:SWI248x 0 \"memory_operand\" \"=m\")\n+\t(fix:SWI248x (match_operand 1 \"register_operand\" \"f\")))\n    (clobber (match_scratch:XF 2 \"=&1f\"))]\n   \"X87_FLOAT_MODE_P (GET_MODE (operands[1]))\n    && TARGET_FISTTP\n@@ -4480,9 +4474,9 @@\n    (set_attr \"mode\" \"<MODE>\")])\n \n (define_insn \"fix_trunc<mode>_i387_fisttp_with_temp\"\n-  [(set (match_operand:X87MODEI 0 \"nonimmediate_operand\" \"=m,?r\")\n-\t(fix:X87MODEI (match_operand 1 \"register_operand\" \"f,f\")))\n-   (clobber (match_operand:X87MODEI 2 \"memory_operand\" \"=X,m\"))\n+  [(set (match_operand:SWI248x 0 \"nonimmediate_operand\" \"=m,?r\")\n+\t(fix:SWI248x (match_operand 1 \"register_operand\" \"f,f\")))\n+   (clobber (match_operand:SWI248x 2 \"memory_operand\" \"=X,m\"))\n    (clobber (match_scratch:XF 3 \"=&1f,&1f\"))]\n   \"X87_FLOAT_MODE_P (GET_MODE (operands[1]))\n    && TARGET_FISTTP\n@@ -4494,22 +4488,22 @@\n    (set_attr \"mode\" \"<MODE>\")])\n \n (define_split\n-  [(set (match_operand:X87MODEI 0 \"register_operand\" \"\")\n-\t(fix:X87MODEI (match_operand 1 \"register_operand\" \"\")))\n-   (clobber (match_operand:X87MODEI 2 \"memory_operand\" \"\"))\n+  [(set (match_operand:SWI248x 0 \"register_operand\" \"\")\n+\t(fix:SWI248x (match_operand 1 \"register_operand\" \"\")))\n+   (clobber (match_operand:SWI248x 2 \"memory_operand\" \"\"))\n    (clobber (match_scratch 3 \"\"))]\n   \"reload_completed\"\n-  [(parallel [(set (match_dup 2) (fix:X87MODEI (match_dup 1)))\n+  [(parallel [(set (match_dup 2) (fix:SWI248x (match_dup 1)))\n \t      (clobber (match_dup 3))])\n    (set (match_dup 0) (match_dup 2))])\n \n (define_split\n-  [(set (match_operand:X87MODEI 0 \"memory_operand\" \"\")\n-\t(fix:X87MODEI (match_operand 1 \"register_operand\" \"\")))\n-   (clobber (match_operand:X87MODEI 2 \"memory_operand\" \"\"))\n+  [(set (match_operand:SWI248x 0 \"memory_operand\" \"\")\n+\t(fix:SWI248x (match_operand 1 \"register_operand\" \"\")))\n+   (clobber (match_operand:SWI248x 2 \"memory_operand\" \"\"))\n    (clobber (match_scratch 3 \"\"))]\n   \"reload_completed\"\n-  [(parallel [(set (match_dup 0) (fix:X87MODEI (match_dup 1)))\n+  [(parallel [(set (match_dup 0) (fix:SWI248x (match_dup 1)))\n \t      (clobber (match_dup 3))])])\n \n ;; See the comments in i386.h near OPTIMIZE_MODE_SWITCHING for the description\n@@ -4518,8 +4512,8 @@\n ;; clobbering insns can be used. Look at emit_i387_cw_initialization ()\n ;; function in i386.c.\n (define_insn_and_split \"*fix_trunc<mode>_i387_1\"\n-  [(set (match_operand:X87MODEI 0 \"nonimmediate_operand\" \"\")\n-\t(fix:X87MODEI (match_operand 1 \"register_operand\" \"\")))\n+  [(set (match_operand:SWI248x 0 \"nonimmediate_operand\" \"\")\n+\t(fix:SWI248x (match_operand 1 \"register_operand\" \"\")))\n    (clobber (reg:CC FLAGS_REG))]\n   \"X87_FLOAT_MODE_P (GET_MODE (operands[1]))\n    && !TARGET_FISTTP\n@@ -4607,8 +4601,8 @@\n \t      (clobber (match_dup 5))])])\n \n (define_insn \"fix_trunc<mode>_i387\"\n-  [(set (match_operand:X87MODEI12 0 \"memory_operand\" \"=m\")\n-\t(fix:X87MODEI12 (match_operand 1 \"register_operand\" \"f\")))\n+  [(set (match_operand:SWI24 0 \"memory_operand\" \"=m\")\n+\t(fix:SWI24 (match_operand 1 \"register_operand\" \"f\")))\n    (use (match_operand:HI 2 \"memory_operand\" \"m\"))\n    (use (match_operand:HI 3 \"memory_operand\" \"m\"))]\n   \"X87_FLOAT_MODE_P (GET_MODE (operands[1]))\n@@ -4620,11 +4614,11 @@\n    (set_attr \"mode\" \"<MODE>\")])\n \n (define_insn \"fix_trunc<mode>_i387_with_temp\"\n-  [(set (match_operand:X87MODEI12 0 \"nonimmediate_operand\" \"=m,?r\")\n-\t(fix:X87MODEI12 (match_operand 1 \"register_operand\" \"f,f\")))\n+  [(set (match_operand:SWI24 0 \"nonimmediate_operand\" \"=m,?r\")\n+\t(fix:SWI24 (match_operand 1 \"register_operand\" \"f,f\")))\n    (use (match_operand:HI 2 \"memory_operand\" \"m,m\"))\n    (use (match_operand:HI 3 \"memory_operand\" \"m,m\"))\n-   (clobber (match_operand:X87MODEI12 4 \"memory_operand\" \"=X,m\"))]\n+   (clobber (match_operand:SWI24 4 \"memory_operand\" \"=X,m\"))]\n   \"X87_FLOAT_MODE_P (GET_MODE (operands[1]))\n    && !TARGET_FISTTP\n    && !SSE_FLOAT_MODE_P (GET_MODE (operands[1]))\"\n@@ -4634,25 +4628,25 @@\n    (set_attr \"mode\" \"<MODE>\")])\n \n (define_split\n-  [(set (match_operand:X87MODEI12 0 \"register_operand\" \"\")\n-\t(fix:X87MODEI12 (match_operand 1 \"register_operand\" \"\")))\n+  [(set (match_operand:SWI24 0 \"register_operand\" \"\")\n+\t(fix:SWI24 (match_operand 1 \"register_operand\" \"\")))\n    (use (match_operand:HI 2 \"memory_operand\" \"\"))\n    (use (match_operand:HI 3 \"memory_operand\" \"\"))\n-   (clobber (match_operand:X87MODEI12 4 \"memory_operand\" \"\"))]\n+   (clobber (match_operand:SWI24 4 \"memory_operand\" \"\"))]\n   \"reload_completed\"\n-  [(parallel [(set (match_dup 4) (fix:X87MODEI12 (match_dup 1)))\n+  [(parallel [(set (match_dup 4) (fix:SWI24 (match_dup 1)))\n \t      (use (match_dup 2))\n \t      (use (match_dup 3))])\n    (set (match_dup 0) (match_dup 4))])\n \n (define_split\n-  [(set (match_operand:X87MODEI12 0 \"memory_operand\" \"\")\n-\t(fix:X87MODEI12 (match_operand 1 \"register_operand\" \"\")))\n+  [(set (match_operand:SWI24 0 \"memory_operand\" \"\")\n+\t(fix:SWI24 (match_operand 1 \"register_operand\" \"\")))\n    (use (match_operand:HI 2 \"memory_operand\" \"\"))\n    (use (match_operand:HI 3 \"memory_operand\" \"\"))\n-   (clobber (match_operand:X87MODEI12 4 \"memory_operand\" \"\"))]\n+   (clobber (match_operand:SWI24 4 \"memory_operand\" \"\"))]\n   \"reload_completed\"\n-  [(parallel [(set (match_dup 0) (fix:X87MODEI12 (match_dup 1)))\n+  [(parallel [(set (match_dup 0) (fix:SWI24 (match_dup 1)))\n \t      (use (match_dup 2))\n \t      (use (match_dup 3))])])\n \n@@ -4752,22 +4746,22 @@\n     && reload_completed\"\n   [(set (match_dup 0) (float:X87MODEF (match_dup 1)))])\n \n-(define_expand \"float<SSEMODEI24:mode><X87MODEF:mode>2\"\n+(define_expand \"float<SWI48x:mode><X87MODEF:mode>2\"\n   [(set (match_operand:X87MODEF 0 \"register_operand\" \"\")\n \t(float:X87MODEF\n-\t  (match_operand:SSEMODEI24 1 \"nonimmediate_operand\" \"\")))]\n+\t  (match_operand:SWI48x 1 \"nonimmediate_operand\" \"\")))]\n   \"TARGET_80387\n-   || ((<SSEMODEI24:MODE>mode != DImode || TARGET_64BIT)\n+   || ((<SWI48x:MODE>mode != DImode || TARGET_64BIT)\n        && SSE_FLOAT_MODE_P (<X87MODEF:MODE>mode) && TARGET_SSE_MATH)\"\n {\n-  if (!((<SSEMODEI24:MODE>mode != DImode || TARGET_64BIT)\n+  if (!((<SWI48x:MODE>mode != DImode || TARGET_64BIT)\n \t&& SSE_FLOAT_MODE_P (<X87MODEF:MODE>mode) && TARGET_SSE_MATH)\n-      && !X87_ENABLE_FLOAT (<X87MODEF:MODE>mode, <SSEMODEI24:MODE>mode))\n+      && !X87_ENABLE_FLOAT (<X87MODEF:MODE>mode, <SWI48x:MODE>mode))\n     {\n       rtx reg = gen_reg_rtx (XFmode);\n       rtx (*insn)(rtx, rtx);\n \n-      emit_insn (gen_float<SSEMODEI24:mode>xf2 (reg, operands[1]));\n+      emit_insn (gen_float<SWI48x:mode>xf2 (reg, operands[1]));\n \n       if (<X87MODEF:MODE>mode == SFmode)\n \tinsn = gen_truncxfsf2;\n@@ -4782,17 +4776,17 @@\n })\n \n ;; Pre-reload splitter to add memory clobber to the pattern.\n-(define_insn_and_split \"*float<SSEMODEI24:mode><X87MODEF:mode>2_1\"\n+(define_insn_and_split \"*float<SWI48x:mode><X87MODEF:mode>2_1\"\n   [(set (match_operand:X87MODEF 0 \"register_operand\" \"\")\n-\t(float:X87MODEF (match_operand:SSEMODEI24 1 \"register_operand\" \"\")))]\n+\t(float:X87MODEF (match_operand:SWI48x 1 \"register_operand\" \"\")))]\n   \"((TARGET_80387\n-     && X87_ENABLE_FLOAT (<X87MODEF:MODE>mode, <SSEMODEI24:MODE>mode)\n-     && (!((<SSEMODEI24:MODE>mode != DImode || TARGET_64BIT)\n+     && X87_ENABLE_FLOAT (<X87MODEF:MODE>mode, <SWI48x:MODE>mode)\n+     && (!((<SWI48x:MODE>mode != DImode || TARGET_64BIT)\n \t   && SSE_FLOAT_MODE_P (<X87MODEF:MODE>mode) && TARGET_SSE_MATH)\n \t || TARGET_MIX_SSE_I387))\n-    || ((<SSEMODEI24:MODE>mode != DImode || TARGET_64BIT)\n+    || ((<SWI48x:MODE>mode != DImode || TARGET_64BIT)\n \t&& SSE_FLOAT_MODE_P (<X87MODEF:MODE>mode) && TARGET_SSE_MATH\n-\t&& ((<SSEMODEI24:MODE>mode == SImode\n+\t&& ((<SWI48x:MODE>mode == SImode\n \t     && TARGET_SSE2 && TARGET_USE_VECTOR_CONVERTS\n \t     && optimize_function_for_speed_p (cfun)\n \t     && flag_trapping_math)\n@@ -4804,11 +4798,11 @@\n   [(parallel [(set (match_dup 0) (float:X87MODEF (match_dup 1)))\n \t      (clobber (match_dup 2))])]\n {\n-  operands[2] = assign_386_stack_local (<SSEMODEI24:MODE>mode, SLOT_TEMP);\n+  operands[2] = assign_386_stack_local (<SWI48x:MODE>mode, SLOT_TEMP);\n \n   /* Avoid store forwarding (partial memory) stall penalty\n      by passing DImode value through XMM registers.  */\n-  if (<SSEMODEI24:MODE>mode == DImode && !TARGET_64BIT\n+  if (<SWI48x:MODE>mode == DImode && !TARGET_64BIT\n       && TARGET_80387 && TARGET_SSE2 && TARGET_INTER_UNIT_MOVES\n       && optimize_function_for_speed_p (cfun))\n     {\n@@ -4851,12 +4845,12 @@\n    (set_attr \"bdver1_decode\" \"*,direct\")\n    (set_attr \"fp_int_src\" \"true\")])\n \n-(define_insn \"*float<SSEMODEI24:mode><MODEF:mode>2_mixed_with_temp\"\n+(define_insn \"*float<SWI48x:mode><MODEF:mode>2_mixed_with_temp\"\n   [(set (match_operand:MODEF 0 \"register_operand\" \"=f,f,x,x\")\n \t(float:MODEF\n-\t  (match_operand:SSEMODEI24 1 \"nonimmediate_operand\" \"m,?r,r,m\")))\n-  (clobber (match_operand:SSEMODEI24 2 \"memory_operand\" \"=X,m,m,X\"))]\n-  \"(<SSEMODEI24:MODE>mode != DImode || TARGET_64BIT)\n+\t  (match_operand:SWI48x 1 \"nonimmediate_operand\" \"m,?r,r,m\")))\n+   (clobber (match_operand:SWI48x 2 \"memory_operand\" \"=X,m,m,X\"))]\n+  \"(<SWI48x:MODE>mode != DImode || TARGET_64BIT)\n    && SSE_FLOAT_MODE_P (<MODEF:MODE>mode) && TARGET_MIX_SSE_I387\"\n   \"#\"\n   [(set_attr \"type\" \"fmov,multi,sseicvt,sseicvt\")\n@@ -4869,9 +4863,9 @@\n \n (define_split\n   [(set (match_operand:MODEF 0 \"register_operand\" \"\")\n-\t(float:MODEF (match_operand:SSEMODEI24 1 \"register_operand\" \"\")))\n-   (clobber (match_operand:SSEMODEI24 2 \"memory_operand\" \"\"))]\n-  \"(<SSEMODEI24:MODE>mode != DImode || TARGET_64BIT)\n+\t(float:MODEF (match_operand:SWI48x 1 \"register_operand\" \"\")))\n+   (clobber (match_operand:SWI48x 2 \"memory_operand\" \"\"))]\n+  \"(<SWI48x:MODE>mode != DImode || TARGET_64BIT)\n    && SSE_FLOAT_MODE_P (<MODEF:MODE>mode) && TARGET_MIX_SSE_I387\n    && TARGET_INTER_UNIT_CONVERSIONS\n    && reload_completed\n@@ -4882,9 +4876,9 @@\n \n (define_split\n   [(set (match_operand:MODEF 0 \"register_operand\" \"\")\n-\t(float:MODEF (match_operand:SSEMODEI24 1 \"register_operand\" \"\")))\n-   (clobber (match_operand:SSEMODEI24 2 \"memory_operand\" \"\"))]\n-  \"(<SSEMODEI24:MODE>mode != DImode || TARGET_64BIT)\n+\t(float:MODEF (match_operand:SWI48x 1 \"register_operand\" \"\")))\n+   (clobber (match_operand:SWI48x 2 \"memory_operand\" \"\"))]\n+  \"(<SWI48x:MODE>mode != DImode || TARGET_64BIT)\n    && SSE_FLOAT_MODE_P (<MODEF:MODE>mode) && TARGET_MIX_SSE_I387\n    && !(TARGET_INTER_UNIT_CONVERSIONS || optimize_function_for_size_p (cfun))\n    && reload_completed\n@@ -4894,24 +4888,24 @@\n   [(set (match_dup 2) (match_dup 1))\n    (set (match_dup 0) (float:MODEF (match_dup 2)))])\n \n-(define_insn \"*float<SSEMODEI24:mode><MODEF:mode>2_mixed_interunit\"\n+(define_insn \"*float<SWI48x:mode><MODEF:mode>2_mixed_interunit\"\n   [(set (match_operand:MODEF 0 \"register_operand\" \"=f,x,x\")\n \t(float:MODEF\n-\t  (match_operand:SSEMODEI24 1 \"nonimmediate_operand\" \"m,r,m\")))]\n-  \"(<SSEMODEI24:MODE>mode != DImode || TARGET_64BIT)\n+\t  (match_operand:SWI48x 1 \"nonimmediate_operand\" \"m,r,m\")))]\n+  \"(<SWI48x:MODE>mode != DImode || TARGET_64BIT)\n    && SSE_FLOAT_MODE_P (<MODEF:MODE>mode) && TARGET_MIX_SSE_I387\n    && (TARGET_INTER_UNIT_CONVERSIONS || optimize_function_for_size_p (cfun))\"\n   \"@\n    fild%Z1\\t%1\n-   %vcvtsi2<MODEF:ssemodesuffix><SSEMODEI24:rex64suffix>\\t{%1, %d0|%d0, %1}\n-   %vcvtsi2<MODEF:ssemodesuffix><SSEMODEI24:rex64suffix>\\t{%1, %d0|%d0, %1}\"\n+   %vcvtsi2<MODEF:ssemodesuffix><SWI48x:rex64suffix>\\t{%1, %d0|%d0, %1}\n+   %vcvtsi2<MODEF:ssemodesuffix><SWI48x:rex64suffix>\\t{%1, %d0|%d0, %1}\"\n   [(set_attr \"type\" \"fmov,sseicvt,sseicvt\")\n    (set_attr \"prefix\" \"orig,maybe_vex,maybe_vex\")\n    (set_attr \"mode\" \"<MODEF:MODE>\")\n    (set (attr \"prefix_rex\")\n      (if_then_else\n        (and (eq_attr \"prefix\" \"maybe_vex\")\n-\t    (ne (symbol_ref \"<SSEMODEI24:MODE>mode == DImode\") (const_int 0)))\n+\t    (ne (symbol_ref \"<SWI48x:MODE>mode == DImode\") (const_int 0)))\n        (const_string \"1\")\n        (const_string \"*\")))\n    (set_attr \"unit\" \"i387,*,*\")\n@@ -4920,23 +4914,23 @@\n    (set_attr \"bdver1_decode\" \"*,double,direct\")\n    (set_attr \"fp_int_src\" \"true\")])\n \n-(define_insn \"*float<SSEMODEI24:mode><MODEF:mode>2_mixed_nointerunit\"\n+(define_insn \"*float<SWI48x:mode><MODEF:mode>2_mixed_nointerunit\"\n   [(set (match_operand:MODEF 0 \"register_operand\" \"=f,x\")\n \t(float:MODEF\n-\t  (match_operand:SSEMODEI24 1 \"memory_operand\" \"m,m\")))]\n-  \"(<SSEMODEI24:MODE>mode != DImode || TARGET_64BIT)\n+\t  (match_operand:SWI48x 1 \"memory_operand\" \"m,m\")))]\n+  \"(<SWI48x:MODE>mode != DImode || TARGET_64BIT)\n    && SSE_FLOAT_MODE_P (<MODEF:MODE>mode) && TARGET_MIX_SSE_I387\n    && !(TARGET_INTER_UNIT_CONVERSIONS || optimize_function_for_size_p (cfun))\"\n   \"@\n    fild%Z1\\t%1\n-   %vcvtsi2<MODEF:ssemodesuffix><SSEMODEI24:rex64suffix>\\t{%1, %d0|%d0, %1}\"\n+   %vcvtsi2<MODEF:ssemodesuffix><SWI48x:rex64suffix>\\t{%1, %d0|%d0, %1}\"\n   [(set_attr \"type\" \"fmov,sseicvt\")\n    (set_attr \"prefix\" \"orig,maybe_vex\")\n    (set_attr \"mode\" \"<MODEF:MODE>\")\n    (set (attr \"prefix_rex\")\n      (if_then_else\n        (and (eq_attr \"prefix\" \"maybe_vex\")\n-\t    (ne (symbol_ref \"<SSEMODEI24:MODE>mode == DImode\") (const_int 0)))\n+\t    (ne (symbol_ref \"<SWI48x:MODE>mode == DImode\") (const_int 0)))\n        (const_string \"1\")\n        (const_string \"*\")))\n    (set_attr \"athlon_decode\" \"*,direct\")\n@@ -5093,12 +5087,12 @@\n   DONE;\n })\n \n-(define_insn \"*float<SSEMODEI24:mode><MODEF:mode>2_sse_with_temp\"\n+(define_insn \"*float<SWI48x:mode><MODEF:mode>2_sse_with_temp\"\n   [(set (match_operand:MODEF 0 \"register_operand\" \"=x,x\")\n \t(float:MODEF\n-\t  (match_operand:SSEMODEI24 1 \"nonimmediate_operand\" \"r,m\")))\n-  (clobber (match_operand:SSEMODEI24 2 \"memory_operand\" \"=m,X\"))]\n-  \"(<SSEMODEI24:MODE>mode != DImode || TARGET_64BIT)\n+\t  (match_operand:SWI48x 1 \"nonimmediate_operand\" \"r,m\")))\n+  (clobber (match_operand:SWI48x 2 \"memory_operand\" \"=m,X\"))]\n+  \"(<SWI48x:MODE>mode != DImode || TARGET_64BIT)\n    && SSE_FLOAT_MODE_P (<MODEF:MODE>mode) && TARGET_SSE_MATH\"\n   \"#\"\n   [(set_attr \"type\" \"sseicvt\")\n@@ -5108,21 +5102,21 @@\n    (set_attr \"bdver1_decode\" \"double,direct\")\n    (set_attr \"fp_int_src\" \"true\")])\n \n-(define_insn \"*float<SSEMODEI24:mode><MODEF:mode>2_sse_interunit\"\n+(define_insn \"*float<SWI48x:mode><MODEF:mode>2_sse_interunit\"\n   [(set (match_operand:MODEF 0 \"register_operand\" \"=x,x\")\n \t(float:MODEF\n-\t  (match_operand:SSEMODEI24 1 \"nonimmediate_operand\" \"r,m\")))]\n-  \"(<SSEMODEI24:MODE>mode != DImode || TARGET_64BIT)\n+\t  (match_operand:SWI48x 1 \"nonimmediate_operand\" \"r,m\")))]\n+  \"(<SWI48x:MODE>mode != DImode || TARGET_64BIT)\n    && SSE_FLOAT_MODE_P (<MODEF:MODE>mode) && TARGET_SSE_MATH\n    && (TARGET_INTER_UNIT_CONVERSIONS || optimize_function_for_size_p (cfun))\"\n-  \"%vcvtsi2<MODEF:ssemodesuffix><SSEMODEI24:rex64suffix>\\t{%1, %d0|%d0, %1}\"\n+  \"%vcvtsi2<MODEF:ssemodesuffix><SWI48x:rex64suffix>\\t{%1, %d0|%d0, %1}\"\n   [(set_attr \"type\" \"sseicvt\")\n    (set_attr \"prefix\" \"maybe_vex\")\n    (set_attr \"mode\" \"<MODEF:MODE>\")\n    (set (attr \"prefix_rex\")\n      (if_then_else\n        (and (eq_attr \"prefix\" \"maybe_vex\")\n-\t    (ne (symbol_ref \"<SSEMODEI24:MODE>mode == DImode\") (const_int 0)))\n+\t    (ne (symbol_ref \"<SWI48x:MODE>mode == DImode\") (const_int 0)))\n        (const_string \"1\")\n        (const_string \"*\")))\n    (set_attr \"athlon_decode\" \"double,direct\")\n@@ -5132,9 +5126,9 @@\n \n (define_split\n   [(set (match_operand:MODEF 0 \"register_operand\" \"\")\n-\t(float:MODEF (match_operand:SSEMODEI24 1 \"nonimmediate_operand\" \"\")))\n-   (clobber (match_operand:SSEMODEI24 2 \"memory_operand\" \"\"))]\n-  \"(<SSEMODEI24:MODE>mode != DImode || TARGET_64BIT)\n+\t(float:MODEF (match_operand:SWI48x 1 \"nonimmediate_operand\" \"\")))\n+   (clobber (match_operand:SWI48x 2 \"memory_operand\" \"\"))]\n+  \"(<SWI48x:MODE>mode != DImode || TARGET_64BIT)\n    && SSE_FLOAT_MODE_P (<MODEF:MODE>mode) && TARGET_SSE_MATH\n    && (TARGET_INTER_UNIT_CONVERSIONS || optimize_function_for_size_p (cfun))\n    && reload_completed\n@@ -5143,21 +5137,21 @@\n \t   && SSE_REG_P (operands[0])))\"\n   [(set (match_dup 0) (float:MODEF (match_dup 1)))])\n \n-(define_insn \"*float<SSEMODEI24:mode><MODEF:mode>2_sse_nointerunit\"\n+(define_insn \"*float<SWI48x:mode><MODEF:mode>2_sse_nointerunit\"\n   [(set (match_operand:MODEF 0 \"register_operand\" \"=x\")\n \t(float:MODEF\n-\t  (match_operand:SSEMODEI24 1 \"memory_operand\" \"m\")))]\n-  \"(<SSEMODEI24:MODE>mode != DImode || TARGET_64BIT)\n+\t  (match_operand:SWI48x 1 \"memory_operand\" \"m\")))]\n+  \"(<SWI48x:MODE>mode != DImode || TARGET_64BIT)\n    && SSE_FLOAT_MODE_P (<MODEF:MODE>mode) && TARGET_SSE_MATH\n    && !(TARGET_INTER_UNIT_CONVERSIONS || optimize_function_for_size_p (cfun))\"\n-  \"%vcvtsi2<MODEF:ssemodesuffix><SSEMODEI24:rex64suffix>\\t{%1, %d0|%d0, %1}\"\n+  \"%vcvtsi2<MODEF:ssemodesuffix><SWI48x:rex64suffix>\\t{%1, %d0|%d0, %1}\"\n   [(set_attr \"type\" \"sseicvt\")\n    (set_attr \"prefix\" \"maybe_vex\")\n    (set_attr \"mode\" \"<MODEF:MODE>\")\n    (set (attr \"prefix_rex\")\n      (if_then_else\n        (and (eq_attr \"prefix\" \"maybe_vex\")\n-\t    (ne (symbol_ref \"<SSEMODEI24:MODE>mode == DImode\") (const_int 0)))\n+\t    (ne (symbol_ref \"<SWI48x:MODE>mode == DImode\") (const_int 0)))\n        (const_string \"1\")\n        (const_string \"*\")))\n    (set_attr \"athlon_decode\" \"direct\")\n@@ -5167,9 +5161,9 @@\n \n (define_split\n   [(set (match_operand:MODEF 0 \"register_operand\" \"\")\n-\t(float:MODEF (match_operand:SSEMODEI24 1 \"register_operand\" \"\")))\n-   (clobber (match_operand:SSEMODEI24 2 \"memory_operand\" \"\"))]\n-  \"(<SSEMODEI24:MODE>mode != DImode || TARGET_64BIT)\n+\t(float:MODEF (match_operand:SWI48x 1 \"register_operand\" \"\")))\n+   (clobber (match_operand:SWI48x 2 \"memory_operand\" \"\"))]\n+  \"(<SWI48x:MODE>mode != DImode || TARGET_64BIT)\n    && SSE_FLOAT_MODE_P (<MODEF:MODE>mode) && TARGET_SSE_MATH\n    && !(TARGET_INTER_UNIT_CONVERSIONS || optimize_function_for_size_p (cfun))\n    && reload_completed\n@@ -5181,23 +5175,23 @@\n \n (define_split\n   [(set (match_operand:MODEF 0 \"register_operand\" \"\")\n-\t(float:MODEF (match_operand:SSEMODEI24 1 \"memory_operand\" \"\")))\n-   (clobber (match_operand:SSEMODEI24 2 \"memory_operand\" \"\"))]\n-  \"(<SSEMODEI24:MODE>mode != DImode || TARGET_64BIT)\n+\t(float:MODEF (match_operand:SWI48x 1 \"memory_operand\" \"\")))\n+   (clobber (match_operand:SWI48x 2 \"memory_operand\" \"\"))]\n+  \"(<SWI48x:MODE>mode != DImode || TARGET_64BIT)\n    && SSE_FLOAT_MODE_P (<MODEF:MODE>mode) && TARGET_SSE_MATH\n    && reload_completed\n    && (SSE_REG_P (operands[0])\n        || (GET_CODE (operands[0]) == SUBREG\n \t   && SSE_REG_P (operands[0])))\"\n   [(set (match_dup 0) (float:MODEF (match_dup 1)))])\n \n-(define_insn \"*float<SSEMODEI24:mode><X87MODEF:mode>2_i387_with_temp\"\n+(define_insn \"*float<SWI48x:mode><X87MODEF:mode>2_i387_with_temp\"\n   [(set (match_operand:X87MODEF 0 \"register_operand\" \"=f,f\")\n \t(float:X87MODEF\n-\t  (match_operand:SSEMODEI24 1 \"nonimmediate_operand\" \"m,?r\")))\n-  (clobber (match_operand:SSEMODEI24 2 \"memory_operand\" \"=X,m\"))]\n+\t  (match_operand:SWI48x 1 \"nonimmediate_operand\" \"m,?r\")))\n+  (clobber (match_operand:SWI48x 2 \"memory_operand\" \"=X,m\"))]\n   \"TARGET_80387\n-   && X87_ENABLE_FLOAT (<X87MODEF:MODE>mode, <SSEMODEI24:MODE>mode)\"\n+   && X87_ENABLE_FLOAT (<X87MODEF:MODE>mode, <SWI48x:MODE>mode)\"\n   \"@\n    fild%Z1\\t%1\n    #\"\n@@ -5206,33 +5200,33 @@\n    (set_attr \"unit\" \"*,i387\")\n    (set_attr \"fp_int_src\" \"true\")])\n \n-(define_insn \"*float<SSEMODEI24:mode><X87MODEF:mode>2_i387\"\n+(define_insn \"*float<SWI48x:mode><X87MODEF:mode>2_i387\"\n   [(set (match_operand:X87MODEF 0 \"register_operand\" \"=f\")\n \t(float:X87MODEF\n-\t  (match_operand:SSEMODEI24 1 \"memory_operand\" \"m\")))]\n+\t  (match_operand:SWI48x 1 \"memory_operand\" \"m\")))]\n   \"TARGET_80387\n-   && X87_ENABLE_FLOAT (<X87MODEF:MODE>mode, <SSEMODEI24:MODE>mode)\"\n+   && X87_ENABLE_FLOAT (<X87MODEF:MODE>mode, <SWI48x:MODE>mode)\"\n   \"fild%Z1\\t%1\"\n   [(set_attr \"type\" \"fmov\")\n    (set_attr \"mode\" \"<X87MODEF:MODE>\")\n    (set_attr \"fp_int_src\" \"true\")])\n \n (define_split\n   [(set (match_operand:X87MODEF 0 \"fp_register_operand\" \"\")\n-\t(float:X87MODEF (match_operand:SSEMODEI24 1 \"register_operand\" \"\")))\n-   (clobber (match_operand:SSEMODEI24 2 \"memory_operand\" \"\"))]\n+\t(float:X87MODEF (match_operand:SWI48x 1 \"register_operand\" \"\")))\n+   (clobber (match_operand:SWI48x 2 \"memory_operand\" \"\"))]\n   \"TARGET_80387\n-   && X87_ENABLE_FLOAT (<X87MODEF:MODE>mode, <SSEMODEI24:MODE>mode)\n+   && X87_ENABLE_FLOAT (<X87MODEF:MODE>mode, <SWI48x:MODE>mode)\n    && reload_completed\"\n   [(set (match_dup 2) (match_dup 1))\n    (set (match_dup 0) (float:X87MODEF (match_dup 2)))])\n \n (define_split\n   [(set (match_operand:X87MODEF 0 \"fp_register_operand\" \"\")\n-\t(float:X87MODEF (match_operand:SSEMODEI24 1 \"memory_operand\" \"\")))\n-   (clobber (match_operand:SSEMODEI24 2 \"memory_operand\" \"\"))]\n+\t(float:X87MODEF (match_operand:SWI48x 1 \"memory_operand\" \"\")))\n+   (clobber (match_operand:SWI48x 2 \"memory_operand\" \"\"))]\n   \"TARGET_80387\n-   && X87_ENABLE_FLOAT (<X87MODEF:MODE>mode, <SSEMODEI24:MODE>mode)\n+   && X87_ENABLE_FLOAT (<X87MODEF:MODE>mode, <SWI48x:MODE>mode)\n    && reload_completed\"\n   [(set (match_dup 0) (float:X87MODEF (match_dup 1)))])\n \n@@ -10868,7 +10862,7 @@\n \t(if_then_else\n \t  (match_operator 0 \"ix86_swapped_fp_comparison_operator\"\n \t    [(match_operator 1 \"float_operator\"\n-\t      [(match_operand:X87MODEI12 2 \"nonimmediate_operand\" \"m,?r\")])\n+\t      [(match_operand:SWI24 2 \"nonimmediate_operand\" \"m,?r\")])\n \t     (match_operand 3 \"register_operand\" \"f,f\")])\n \t  (label_ref (match_operand 4 \"\" \"\"))\n \t  (pc)))\n@@ -10887,7 +10881,7 @@\n \t(if_then_else\n \t  (match_operator 0 \"ix86_swapped_fp_comparison_operator\"\n \t    [(match_operator 1 \"float_operator\"\n-\t      [(match_operand:X87MODEI12 2 \"memory_operand\" \"\")])\n+\t      [(match_operand:SWI24 2 \"memory_operand\" \"\")])\n \t     (match_operand 3 \"register_operand\" \"\")])\n \t  (match_operand 4 \"\" \"\")\n \t  (match_operand 5 \"\" \"\")))\n@@ -10911,7 +10905,7 @@\n \t(if_then_else\n \t  (match_operator 0 \"ix86_swapped_fp_comparison_operator\"\n \t    [(match_operator 1 \"float_operator\"\n-\t      [(match_operand:X87MODEI12 2 \"register_operand\" \"\")])\n+\t      [(match_operand:SWI24 2 \"register_operand\" \"\")])\n \t     (match_operand 3 \"register_operand\" \"\")])\n \t  (match_operand 4 \"\" \"\")\n \t  (match_operand 5 \"\" \"\")))\n@@ -12817,11 +12811,11 @@\n   [(set (match_operand:MODEF 0 \"register_operand\" \"=f,f\")\n \t(match_operator:MODEF 3 \"binary_fp_operator\"\n \t  [(float:MODEF\n-\t     (match_operand:X87MODEI12 1 \"nonimmediate_operand\" \"m,?r\"))\n+\t     (match_operand:SWI24 1 \"nonimmediate_operand\" \"m,?r\"))\n \t   (match_operand:MODEF 2 \"register_operand\" \"0,0\")]))]\n-  \"TARGET_80387 && X87_ENABLE_FLOAT (<MODEF:MODE>mode, <X87MODEI12:MODE>mode)\n+  \"TARGET_80387 && X87_ENABLE_FLOAT (<MODEF:MODE>mode, <SWI24:MODE>mode)\n    && !(SSE_FLOAT_MODE_P (<MODEF:MODE>mode) && TARGET_SSE_MATH)\n-   && (TARGET_USE_<X87MODEI12:MODE>MODE_FIOP || optimize_function_for_size_p (cfun))\"\n+   && (TARGET_USE_<SWI24:MODE>MODE_FIOP || optimize_function_for_size_p (cfun))\"\n   \"* return which_alternative ? \\\"#\\\" : output_387_binary_op (insn, operands);\"\n   [(set (attr \"type\")\n         (cond [(match_operand:MODEF 3 \"mult_operator\" \"\")\n@@ -12831,17 +12825,17 @@\n               ]\n               (const_string \"fop\")))\n    (set_attr \"fp_int_src\" \"true\")\n-   (set_attr \"mode\" \"<X87MODEI12:MODE>\")])\n+   (set_attr \"mode\" \"<SWI24:MODE>\")])\n \n (define_insn \"*fop_<MODEF:mode>_3_i387\"\n   [(set (match_operand:MODEF 0 \"register_operand\" \"=f,f\")\n \t(match_operator:MODEF 3 \"binary_fp_operator\"\n \t  [(match_operand:MODEF 1 \"register_operand\" \"0,0\")\n \t   (float:MODEF\n-\t     (match_operand:X87MODEI12 2 \"nonimmediate_operand\" \"m,?r\"))]))]\n-  \"TARGET_80387 && X87_ENABLE_FLOAT (<MODEF:MODE>mode, <X87MODEI12:MODE>mode)\n+\t     (match_operand:SWI24 2 \"nonimmediate_operand\" \"m,?r\"))]))]\n+  \"TARGET_80387 && X87_ENABLE_FLOAT (<MODEF:MODE>mode, <SWI24:MODE>mode)\n    && !(SSE_FLOAT_MODE_P (<MODEF:MODE>mode) && TARGET_SSE_MATH)\n-   && (TARGET_USE_<X87MODEI12:MODE>MODE_FIOP || optimize_function_for_size_p (cfun))\"\n+   && (TARGET_USE_<SWI24:MODE>MODE_FIOP || optimize_function_for_size_p (cfun))\"\n   \"* return which_alternative ? \\\"#\\\" : output_387_binary_op (insn, operands);\"\n   [(set (attr \"type\")\n         (cond [(match_operand:MODEF 3 \"mult_operator\" \"\")\n@@ -12944,7 +12938,7 @@\n   [(set (match_operand:XF 0 \"register_operand\" \"=f,f\")\n \t(match_operator:XF 3 \"binary_fp_operator\"\n \t  [(float:XF\n-\t     (match_operand:X87MODEI12 1 \"nonimmediate_operand\" \"m,?r\"))\n+\t     (match_operand:SWI24 1 \"nonimmediate_operand\" \"m,?r\"))\n \t   (match_operand:XF 2 \"register_operand\" \"0,0\")]))]\n   \"TARGET_80387 && (TARGET_USE_<MODE>MODE_FIOP || optimize_function_for_size_p (cfun))\"\n   \"* return which_alternative ? \\\"#\\\" : output_387_binary_op (insn, operands);\"\n@@ -12963,7 +12957,7 @@\n \t(match_operator:XF 3 \"binary_fp_operator\"\n \t  [(match_operand:XF 1 \"register_operand\" \"0,0\")\n \t   (float:XF\n-\t     (match_operand:X87MODEI12 2 \"nonimmediate_operand\" \"m,?r\"))]))]\n+\t     (match_operand:SWI24 2 \"nonimmediate_operand\" \"m,?r\"))]))]\n   \"TARGET_80387 && (TARGET_USE_<MODE>MODE_FIOP || optimize_function_for_size_p (cfun))\"\n   \"* return which_alternative ? \\\"#\\\" : output_387_binary_op (insn, operands);\"\n   [(set (attr \"type\")\n@@ -13031,7 +13025,7 @@\n (define_split\n   [(set (match_operand 0 \"register_operand\" \"\")\n \t(match_operator 3 \"binary_fp_operator\"\n-\t   [(float (match_operand:X87MODEI12 1 \"register_operand\" \"\"))\n+\t   [(float (match_operand:SWI24 1 \"register_operand\" \"\"))\n \t    (match_operand 2 \"register_operand\" \"\")]))]\n   \"reload_completed\n    && X87_FLOAT_MODE_P (GET_MODE (operands[0]))\n@@ -13053,7 +13047,7 @@\n   [(set (match_operand 0 \"register_operand\" \"\")\n \t(match_operator 3 \"binary_fp_operator\"\n \t   [(match_operand 1 \"register_operand\" \"\")\n-\t    (float (match_operand:X87MODEI12 2 \"register_operand\" \"\"))]))]\n+\t    (float (match_operand:SWI24 2 \"register_operand\" \"\"))]))]\n   \"reload_completed\n    && X87_FLOAT_MODE_P (GET_MODE (operands[0]))\n    && X87_ENABLE_FLOAT (GET_MODE (operands[0]), GET_MODE (operands[2]))\"\n@@ -14439,9 +14433,9 @@\n \t      (clobber (match_dup 3))])])\n \n (define_insn_and_split \"*fist<mode>2_1\"\n-  [(set (match_operand:X87MODEI12 0 \"register_operand\" \"\")\n-\t(unspec:X87MODEI12 [(match_operand:XF 1 \"register_operand\" \"\")]\n-\t\t\t   UNSPEC_FIST))]\n+  [(set (match_operand:SWI24 0 \"register_operand\" \"\")\n+\t(unspec:SWI24 [(match_operand:XF 1 \"register_operand\" \"\")]\n+\t\t      UNSPEC_FIST))]\n   \"TARGET_USE_FANCY_MATH_387\n    && can_create_pseudo_p ()\"\n   \"#\"\n@@ -14457,59 +14451,59 @@\n    (set_attr \"mode\" \"<MODE>\")])\n \n (define_insn \"fist<mode>2\"\n-  [(set (match_operand:X87MODEI12 0 \"memory_operand\" \"=m\")\n-\t(unspec:X87MODEI12 [(match_operand:XF 1 \"register_operand\" \"f\")]\n-\t\t\t   UNSPEC_FIST))]\n+  [(set (match_operand:SWI24 0 \"memory_operand\" \"=m\")\n+\t(unspec:SWI24 [(match_operand:XF 1 \"register_operand\" \"f\")]\n+\t\t      UNSPEC_FIST))]\n   \"TARGET_USE_FANCY_MATH_387\"\n   \"* return output_fix_trunc (insn, operands, false);\"\n   [(set_attr \"type\" \"fpspc\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n (define_insn \"fist<mode>2_with_temp\"\n-  [(set (match_operand:X87MODEI12 0 \"register_operand\" \"=r\")\n-\t(unspec:X87MODEI12 [(match_operand:XF 1 \"register_operand\" \"f\")]\n-\t\t\t   UNSPEC_FIST))\n-   (clobber (match_operand:X87MODEI12 2 \"memory_operand\" \"=m\"))]\n+  [(set (match_operand:SWI24 0 \"register_operand\" \"=r\")\n+\t(unspec:SWI24 [(match_operand:XF 1 \"register_operand\" \"f\")]\n+\t\t      UNSPEC_FIST))\n+   (clobber (match_operand:SWI24 2 \"memory_operand\" \"=m\"))]\n   \"TARGET_USE_FANCY_MATH_387\"\n   \"#\"\n   [(set_attr \"type\" \"fpspc\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n (define_split\n-  [(set (match_operand:X87MODEI12 0 \"register_operand\" \"\")\n-\t(unspec:X87MODEI12 [(match_operand:XF 1 \"register_operand\" \"\")]\n-\t\t\t   UNSPEC_FIST))\n-   (clobber (match_operand:X87MODEI12 2 \"memory_operand\" \"\"))]\n+  [(set (match_operand:SWI24 0 \"register_operand\" \"\")\n+\t(unspec:SWI24 [(match_operand:XF 1 \"register_operand\" \"\")]\n+\t\t      UNSPEC_FIST))\n+   (clobber (match_operand:SWI24 2 \"memory_operand\" \"\"))]\n   \"reload_completed\"\n-  [(set (match_dup 2) (unspec:X87MODEI12 [(match_dup 1)] UNSPEC_FIST))\n+  [(set (match_dup 2) (unspec:SWI24 [(match_dup 1)] UNSPEC_FIST))\n    (set (match_dup 0) (match_dup 2))])\n \n (define_split\n-  [(set (match_operand:X87MODEI12 0 \"memory_operand\" \"\")\n-\t(unspec:X87MODEI12 [(match_operand:XF 1 \"register_operand\" \"\")]\n-\t\t\t   UNSPEC_FIST))\n-   (clobber (match_operand:X87MODEI12 2 \"memory_operand\" \"\"))]\n+  [(set (match_operand:SWI24 0 \"memory_operand\" \"\")\n+\t(unspec:SWI24 [(match_operand:XF 1 \"register_operand\" \"\")]\n+\t\t      UNSPEC_FIST))\n+   (clobber (match_operand:SWI24 2 \"memory_operand\" \"\"))]\n   \"reload_completed\"\n-  [(set (match_dup 0) (unspec:X87MODEI12 [(match_dup 1)] UNSPEC_FIST))])\n+  [(set (match_dup 0) (unspec:SWI24 [(match_dup 1)] UNSPEC_FIST))])\n \n (define_expand \"lrintxf<mode>2\"\n-  [(set (match_operand:X87MODEI 0 \"nonimmediate_operand\" \"\")\n-     (unspec:X87MODEI [(match_operand:XF 1 \"register_operand\" \"\")]\n-\t\t      UNSPEC_FIST))]\n+  [(set (match_operand:SWI248x 0 \"nonimmediate_operand\" \"\")\n+     (unspec:SWI248x [(match_operand:XF 1 \"register_operand\" \"\")]\n+\t\t     UNSPEC_FIST))]\n   \"TARGET_USE_FANCY_MATH_387\")\n \n-(define_expand \"lrint<MODEF:mode><SSEMODEI24:mode>2\"\n-  [(set (match_operand:SSEMODEI24 0 \"nonimmediate_operand\" \"\")\n-     (unspec:SSEMODEI24 [(match_operand:MODEF 1 \"register_operand\" \"\")]\n+(define_expand \"lrint<MODEF:mode><SWI48x:mode>2\"\n+  [(set (match_operand:SWI48x 0 \"nonimmediate_operand\" \"\")\n+     (unspec:SWI48x [(match_operand:MODEF 1 \"register_operand\" \"\")]\n \t\t\tUNSPEC_FIX_NOTRUNC))]\n   \"SSE_FLOAT_MODE_P (<MODEF:MODE>mode) && TARGET_SSE_MATH\n-   && ((<SSEMODEI24:MODE>mode != DImode) || TARGET_64BIT)\")\n+   && ((<SWI48x:MODE>mode != DImode) || TARGET_64BIT)\")\n \n-(define_expand \"lround<MODEF:mode><SSEMODEI24:mode>2\"\n-  [(match_operand:SSEMODEI24 0 \"nonimmediate_operand\" \"\")\n+(define_expand \"lround<MODEF:mode><SWI48x:mode>2\"\n+  [(match_operand:SWI48x 0 \"nonimmediate_operand\" \"\")\n    (match_operand:MODEF 1 \"register_operand\" \"\")]\n   \"SSE_FLOAT_MODE_P (<MODEF:MODE>mode) && TARGET_SSE_MATH\n-   && ((<SSEMODEI24:MODE>mode != DImode) || TARGET_64BIT)\n+   && ((<SWI48x:MODE>mode != DImode) || TARGET_64BIT)\n    && !flag_trapping_math && !flag_rounding_math\"\n {\n   if (optimize_insn_for_size_p ())\n@@ -14611,9 +14605,9 @@\n })\n \n (define_insn_and_split \"*fist<mode>2_floor_1\"\n-  [(set (match_operand:X87MODEI 0 \"nonimmediate_operand\" \"\")\n-\t(unspec:X87MODEI [(match_operand:XF 1 \"register_operand\" \"\")]\n-\t UNSPEC_FIST_FLOOR))\n+  [(set (match_operand:SWI248x 0 \"nonimmediate_operand\" \"\")\n+\t(unspec:SWI248x [(match_operand:XF 1 \"register_operand\" \"\")]\n+\t\t\tUNSPEC_FIST_FLOOR))\n    (clobber (reg:CC FLAGS_REG))]\n   \"TARGET_USE_FANCY_MATH_387\n    && flag_unsafe_math_optimizations\n@@ -14645,7 +14639,7 @@\n (define_insn \"fistdi2_floor\"\n   [(set (match_operand:DI 0 \"memory_operand\" \"=m\")\n \t(unspec:DI [(match_operand:XF 1 \"register_operand\" \"f\")]\n-\t UNSPEC_FIST_FLOOR))\n+\t\t   UNSPEC_FIST_FLOOR))\n    (use (match_operand:HI 2 \"memory_operand\" \"m\"))\n    (use (match_operand:HI 3 \"memory_operand\" \"m\"))\n    (clobber (match_scratch:XF 4 \"=&1f\"))]\n@@ -14659,7 +14653,7 @@\n (define_insn \"fistdi2_floor_with_temp\"\n   [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=m,?r\")\n \t(unspec:DI [(match_operand:XF 1 \"register_operand\" \"f,f\")]\n-\t UNSPEC_FIST_FLOOR))\n+\t\t   UNSPEC_FIST_FLOOR))\n    (use (match_operand:HI 2 \"memory_operand\" \"m,m\"))\n    (use (match_operand:HI 3 \"memory_operand\" \"m,m\"))\n    (clobber (match_operand:DI 4 \"memory_operand\" \"=X,m\"))\n@@ -14674,13 +14668,14 @@\n (define_split\n   [(set (match_operand:DI 0 \"register_operand\" \"\")\n \t(unspec:DI [(match_operand:XF 1 \"register_operand\" \"\")]\n-\t UNSPEC_FIST_FLOOR))\n+\t\t   UNSPEC_FIST_FLOOR))\n    (use (match_operand:HI 2 \"memory_operand\" \"\"))\n    (use (match_operand:HI 3 \"memory_operand\" \"\"))\n    (clobber (match_operand:DI 4 \"memory_operand\" \"\"))\n    (clobber (match_scratch 5 \"\"))]\n   \"reload_completed\"\n-  [(parallel [(set (match_dup 4) (unspec:DI [(match_dup 1)] UNSPEC_FIST_FLOOR))\n+  [(parallel [(set (match_dup 4)\n+\t\t   (unspec:DI [(match_dup 1)] UNSPEC_FIST_FLOOR))\n \t      (use (match_dup 2))\n \t      (use (match_dup 3))\n \t      (clobber (match_dup 5))])\n@@ -14689,21 +14684,22 @@\n (define_split\n   [(set (match_operand:DI 0 \"memory_operand\" \"\")\n \t(unspec:DI [(match_operand:XF 1 \"register_operand\" \"\")]\n-\t UNSPEC_FIST_FLOOR))\n+\t\t   UNSPEC_FIST_FLOOR))\n    (use (match_operand:HI 2 \"memory_operand\" \"\"))\n    (use (match_operand:HI 3 \"memory_operand\" \"\"))\n    (clobber (match_operand:DI 4 \"memory_operand\" \"\"))\n    (clobber (match_scratch 5 \"\"))]\n   \"reload_completed\"\n-  [(parallel [(set (match_dup 0) (unspec:DI [(match_dup 1)] UNSPEC_FIST_FLOOR))\n+  [(parallel [(set (match_dup 0)\n+\t\t   (unspec:DI [(match_dup 1)] UNSPEC_FIST_FLOOR))\n \t      (use (match_dup 2))\n \t      (use (match_dup 3))\n \t      (clobber (match_dup 5))])])\n \n (define_insn \"fist<mode>2_floor\"\n-  [(set (match_operand:X87MODEI12 0 \"memory_operand\" \"=m\")\n-\t(unspec:X87MODEI12 [(match_operand:XF 1 \"register_operand\" \"f\")]\n-\t UNSPEC_FIST_FLOOR))\n+  [(set (match_operand:SWI24 0 \"memory_operand\" \"=m\")\n+\t(unspec:SWI24 [(match_operand:XF 1 \"register_operand\" \"f\")]\n+\t\t      UNSPEC_FIST_FLOOR))\n    (use (match_operand:HI 2 \"memory_operand\" \"m\"))\n    (use (match_operand:HI 3 \"memory_operand\" \"m\"))]\n   \"TARGET_USE_FANCY_MATH_387\n@@ -14714,12 +14710,12 @@\n    (set_attr \"mode\" \"<MODE>\")])\n \n (define_insn \"fist<mode>2_floor_with_temp\"\n-  [(set (match_operand:X87MODEI12 0 \"nonimmediate_operand\" \"=m,?r\")\n-\t(unspec:X87MODEI12 [(match_operand:XF 1 \"register_operand\" \"f,f\")]\n-\t UNSPEC_FIST_FLOOR))\n+  [(set (match_operand:SWI24 0 \"nonimmediate_operand\" \"=m,?r\")\n+\t(unspec:SWI24 [(match_operand:XF 1 \"register_operand\" \"f,f\")]\n+\t\t      UNSPEC_FIST_FLOOR))\n    (use (match_operand:HI 2 \"memory_operand\" \"m,m\"))\n    (use (match_operand:HI 3 \"memory_operand\" \"m,m\"))\n-   (clobber (match_operand:X87MODEI12 4 \"memory_operand\" \"=X,m\"))]\n+   (clobber (match_operand:SWI24 4 \"memory_operand\" \"=X,m\"))]\n   \"TARGET_USE_FANCY_MATH_387\n    && flag_unsafe_math_optimizations\"\n   \"#\"\n@@ -14728,36 +14724,36 @@\n    (set_attr \"mode\" \"<MODE>\")])\n \n (define_split\n-  [(set (match_operand:X87MODEI12 0 \"register_operand\" \"\")\n-\t(unspec:X87MODEI12 [(match_operand:XF 1 \"register_operand\" \"\")]\n-\t UNSPEC_FIST_FLOOR))\n+  [(set (match_operand:SWI24 0 \"register_operand\" \"\")\n+\t(unspec:SWI24 [(match_operand:XF 1 \"register_operand\" \"\")]\n+\t\t      UNSPEC_FIST_FLOOR))\n    (use (match_operand:HI 2 \"memory_operand\" \"\"))\n    (use (match_operand:HI 3 \"memory_operand\" \"\"))\n-   (clobber (match_operand:X87MODEI12 4 \"memory_operand\" \"\"))]\n+   (clobber (match_operand:SWI24 4 \"memory_operand\" \"\"))]\n   \"reload_completed\"\n-  [(parallel [(set (match_dup 4) (unspec:X87MODEI12 [(match_dup 1)]\n-\t\t\t\t  UNSPEC_FIST_FLOOR))\n+  [(parallel [(set (match_dup 4)\n+\t\t   (unspec:SWI24 [(match_dup 1)] UNSPEC_FIST_FLOOR))\n \t      (use (match_dup 2))\n \t      (use (match_dup 3))])\n    (set (match_dup 0) (match_dup 4))])\n \n (define_split\n-  [(set (match_operand:X87MODEI12 0 \"memory_operand\" \"\")\n-\t(unspec:X87MODEI12 [(match_operand:XF 1 \"register_operand\" \"\")]\n-\t UNSPEC_FIST_FLOOR))\n+  [(set (match_operand:SWI24 0 \"memory_operand\" \"\")\n+\t(unspec:SWI24 [(match_operand:XF 1 \"register_operand\" \"\")]\n+\t\t      UNSPEC_FIST_FLOOR))\n    (use (match_operand:HI 2 \"memory_operand\" \"\"))\n    (use (match_operand:HI 3 \"memory_operand\" \"\"))\n-   (clobber (match_operand:X87MODEI12 4 \"memory_operand\" \"\"))]\n+   (clobber (match_operand:SWI24 4 \"memory_operand\" \"\"))]\n   \"reload_completed\"\n-  [(parallel [(set (match_dup 0) (unspec:X87MODEI12 [(match_dup 1)]\n-\t\t\t\t  UNSPEC_FIST_FLOOR))\n+  [(parallel [(set (match_dup 0)\n+\t\t   (unspec:SWI24 [(match_dup 1)] UNSPEC_FIST_FLOOR))\n \t      (use (match_dup 2))\n \t      (use (match_dup 3))])])\n \n (define_expand \"lfloorxf<mode>2\"\n-  [(parallel [(set (match_operand:X87MODEI 0 \"nonimmediate_operand\" \"\")\n-\t\t   (unspec:X87MODEI [(match_operand:XF 1 \"register_operand\" \"\")]\n-\t\t    UNSPEC_FIST_FLOOR))\n+  [(parallel [(set (match_operand:SWI248x 0 \"nonimmediate_operand\" \"\")\n+\t\t   (unspec:SWI248x [(match_operand:XF 1 \"register_operand\" \"\")]\n+\t\t\t\t   UNSPEC_FIST_FLOOR))\n \t      (clobber (reg:CC FLAGS_REG))])]\n   \"TARGET_USE_FANCY_MATH_387\n    && (!TARGET_SSE_MATH || TARGET_MIX_SSE_I387)\n@@ -14868,9 +14864,9 @@\n })\n \n (define_insn_and_split \"*fist<mode>2_ceil_1\"\n-  [(set (match_operand:X87MODEI 0 \"nonimmediate_operand\" \"\")\n-\t(unspec:X87MODEI [(match_operand:XF 1 \"register_operand\" \"\")]\n-\t UNSPEC_FIST_CEIL))\n+  [(set (match_operand:SWI248x 0 \"nonimmediate_operand\" \"\")\n+\t(unspec:SWI248x [(match_operand:XF 1 \"register_operand\" \"\")]\n+\t\t\tUNSPEC_FIST_CEIL))\n    (clobber (reg:CC FLAGS_REG))]\n   \"TARGET_USE_FANCY_MATH_387\n    && flag_unsafe_math_optimizations\n@@ -14902,7 +14898,7 @@\n (define_insn \"fistdi2_ceil\"\n   [(set (match_operand:DI 0 \"memory_operand\" \"=m\")\n \t(unspec:DI [(match_operand:XF 1 \"register_operand\" \"f\")]\n-\t UNSPEC_FIST_CEIL))\n+\t\t   UNSPEC_FIST_CEIL))\n    (use (match_operand:HI 2 \"memory_operand\" \"m\"))\n    (use (match_operand:HI 3 \"memory_operand\" \"m\"))\n    (clobber (match_scratch:XF 4 \"=&1f\"))]\n@@ -14916,7 +14912,7 @@\n (define_insn \"fistdi2_ceil_with_temp\"\n   [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=m,?r\")\n \t(unspec:DI [(match_operand:XF 1 \"register_operand\" \"f,f\")]\n-\t UNSPEC_FIST_CEIL))\n+\t\t   UNSPEC_FIST_CEIL))\n    (use (match_operand:HI 2 \"memory_operand\" \"m,m\"))\n    (use (match_operand:HI 3 \"memory_operand\" \"m,m\"))\n    (clobber (match_operand:DI 4 \"memory_operand\" \"=X,m\"))\n@@ -14931,13 +14927,14 @@\n (define_split\n   [(set (match_operand:DI 0 \"register_operand\" \"\")\n \t(unspec:DI [(match_operand:XF 1 \"register_operand\" \"\")]\n-\t UNSPEC_FIST_CEIL))\n+\t\t   UNSPEC_FIST_CEIL))\n    (use (match_operand:HI 2 \"memory_operand\" \"\"))\n    (use (match_operand:HI 3 \"memory_operand\" \"\"))\n    (clobber (match_operand:DI 4 \"memory_operand\" \"\"))\n    (clobber (match_scratch 5 \"\"))]\n   \"reload_completed\"\n-  [(parallel [(set (match_dup 4) (unspec:DI [(match_dup 1)] UNSPEC_FIST_CEIL))\n+  [(parallel [(set (match_dup 4)\n+\t\t   (unspec:DI [(match_dup 1)] UNSPEC_FIST_CEIL))\n \t      (use (match_dup 2))\n \t      (use (match_dup 3))\n \t      (clobber (match_dup 5))])\n@@ -14946,21 +14943,22 @@\n (define_split\n   [(set (match_operand:DI 0 \"memory_operand\" \"\")\n \t(unspec:DI [(match_operand:XF 1 \"register_operand\" \"\")]\n-\t UNSPEC_FIST_CEIL))\n+\t\t   UNSPEC_FIST_CEIL))\n    (use (match_operand:HI 2 \"memory_operand\" \"\"))\n    (use (match_operand:HI 3 \"memory_operand\" \"\"))\n    (clobber (match_operand:DI 4 \"memory_operand\" \"\"))\n    (clobber (match_scratch 5 \"\"))]\n   \"reload_completed\"\n-  [(parallel [(set (match_dup 0) (unspec:DI [(match_dup 1)] UNSPEC_FIST_CEIL))\n+  [(parallel [(set (match_dup 0)\n+\t\t   (unspec:DI [(match_dup 1)] UNSPEC_FIST_CEIL))\n \t      (use (match_dup 2))\n \t      (use (match_dup 3))\n \t      (clobber (match_dup 5))])])\n \n (define_insn \"fist<mode>2_ceil\"\n-  [(set (match_operand:X87MODEI12 0 \"memory_operand\" \"=m\")\n-\t(unspec:X87MODEI12 [(match_operand:XF 1 \"register_operand\" \"f\")]\n-\t UNSPEC_FIST_CEIL))\n+  [(set (match_operand:SWI24 0 \"memory_operand\" \"=m\")\n+\t(unspec:SWI24 [(match_operand:XF 1 \"register_operand\" \"f\")]\n+\t\t      UNSPEC_FIST_CEIL))\n    (use (match_operand:HI 2 \"memory_operand\" \"m\"))\n    (use (match_operand:HI 3 \"memory_operand\" \"m\"))]\n   \"TARGET_USE_FANCY_MATH_387\n@@ -14971,12 +14969,12 @@\n    (set_attr \"mode\" \"<MODE>\")])\n \n (define_insn \"fist<mode>2_ceil_with_temp\"\n-  [(set (match_operand:X87MODEI12 0 \"nonimmediate_operand\" \"=m,?r\")\n-\t(unspec:X87MODEI12 [(match_operand:XF 1 \"register_operand\" \"f,f\")]\n-\t UNSPEC_FIST_CEIL))\n+  [(set (match_operand:SWI24 0 \"nonimmediate_operand\" \"=m,?r\")\n+\t(unspec:SWI24 [(match_operand:XF 1 \"register_operand\" \"f,f\")]\n+\t\t      UNSPEC_FIST_CEIL))\n    (use (match_operand:HI 2 \"memory_operand\" \"m,m\"))\n    (use (match_operand:HI 3 \"memory_operand\" \"m,m\"))\n-   (clobber (match_operand:X87MODEI12 4 \"memory_operand\" \"=X,m\"))]\n+   (clobber (match_operand:SWI24 4 \"memory_operand\" \"=X,m\"))]\n   \"TARGET_USE_FANCY_MATH_387\n    && flag_unsafe_math_optimizations\"\n   \"#\"\n@@ -14985,36 +14983,36 @@\n    (set_attr \"mode\" \"<MODE>\")])\n \n (define_split\n-  [(set (match_operand:X87MODEI12 0 \"register_operand\" \"\")\n-\t(unspec:X87MODEI12 [(match_operand:XF 1 \"register_operand\" \"\")]\n-\t UNSPEC_FIST_CEIL))\n+  [(set (match_operand:SWI24 0 \"register_operand\" \"\")\n+\t(unspec:SWI24 [(match_operand:XF 1 \"register_operand\" \"\")]\n+\t\t      UNSPEC_FIST_CEIL))\n    (use (match_operand:HI 2 \"memory_operand\" \"\"))\n    (use (match_operand:HI 3 \"memory_operand\" \"\"))\n-   (clobber (match_operand:X87MODEI12 4 \"memory_operand\" \"\"))]\n+   (clobber (match_operand:SWI24 4 \"memory_operand\" \"\"))]\n   \"reload_completed\"\n-  [(parallel [(set (match_dup 4) (unspec:X87MODEI12 [(match_dup 1)]\n-\t\t\t\t  UNSPEC_FIST_CEIL))\n+  [(parallel [(set (match_dup 4)\n+\t\t   (unspec:SWI24 [(match_dup 1)] UNSPEC_FIST_CEIL))\n \t      (use (match_dup 2))\n \t      (use (match_dup 3))])\n    (set (match_dup 0) (match_dup 4))])\n \n (define_split\n-  [(set (match_operand:X87MODEI12 0 \"memory_operand\" \"\")\n-\t(unspec:X87MODEI12 [(match_operand:XF 1 \"register_operand\" \"\")]\n-\t UNSPEC_FIST_CEIL))\n+  [(set (match_operand:SWI24 0 \"memory_operand\" \"\")\n+\t(unspec:SWI24 [(match_operand:XF 1 \"register_operand\" \"\")]\n+\t\t      UNSPEC_FIST_CEIL))\n    (use (match_operand:HI 2 \"memory_operand\" \"\"))\n    (use (match_operand:HI 3 \"memory_operand\" \"\"))\n-   (clobber (match_operand:X87MODEI12 4 \"memory_operand\" \"\"))]\n+   (clobber (match_operand:SWI24 4 \"memory_operand\" \"\"))]\n   \"reload_completed\"\n-  [(parallel [(set (match_dup 0) (unspec:X87MODEI12 [(match_dup 1)]\n-\t\t\t\t  UNSPEC_FIST_CEIL))\n+  [(parallel [(set (match_dup 0)\n+\t\t   (unspec:SWI24 [(match_dup 1)] UNSPEC_FIST_CEIL))\n \t      (use (match_dup 2))\n \t      (use (match_dup 3))])])\n \n (define_expand \"lceilxf<mode>2\"\n-  [(parallel [(set (match_operand:X87MODEI 0 \"nonimmediate_operand\" \"\")\n-\t\t   (unspec:X87MODEI [(match_operand:XF 1 \"register_operand\" \"\")]\n-\t\t    UNSPEC_FIST_CEIL))\n+  [(parallel [(set (match_operand:SWI248x 0 \"nonimmediate_operand\" \"\")\n+\t\t   (unspec:SWI248x [(match_operand:XF 1 \"register_operand\" \"\")]\n+\t\t\t\t   UNSPEC_FIST_CEIL))\n \t      (clobber (reg:CC FLAGS_REG))])]\n   \"TARGET_USE_FANCY_MATH_387\n    && (!TARGET_SSE_MATH || TARGET_MIX_SSE_I387)"}]}