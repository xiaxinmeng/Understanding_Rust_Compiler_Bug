{"sha": "bc7f13bf15c30ee57601c3ec0c8390cfc15e01db", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmM3ZjEzYmYxNWMzMGVlNTc2MDFjM2VjMGM4MzkwY2ZjMTVlMDFkYg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-05-25T14:32:06Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-05-25T14:32:06Z"}, "message": "re PR c++/48292 ([C++0x] \"sorry, unimplemented: use of 'type_pack_expansion' in template\")\n\n\tPR c++/48292\n\t* pt.c (tsubst_decl) [PARM_DECL]: Handle partial instantiation of\n\tfunction parameter pack.\n\t(tsubst_pack_expansion): Likewise.\n\nFrom-SVN: r174201", "tree": {"sha": "6cab305912e008cc94baefa5399f51c30b447b08", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6cab305912e008cc94baefa5399f51c30b447b08"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bc7f13bf15c30ee57601c3ec0c8390cfc15e01db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc7f13bf15c30ee57601c3ec0c8390cfc15e01db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc7f13bf15c30ee57601c3ec0c8390cfc15e01db", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc7f13bf15c30ee57601c3ec0c8390cfc15e01db/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0dfef520f05214d7b199d0be09f55f511418b0e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0dfef520f05214d7b199d0be09f55f511418b0e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0dfef520f05214d7b199d0be09f55f511418b0e9"}], "stats": {"total": 41, "additions": 36, "deletions": 5}, "files": [{"sha": "57321507c8109d36733b201d9f1f8e162d1e8a99", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc7f13bf15c30ee57601c3ec0c8390cfc15e01db/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc7f13bf15c30ee57601c3ec0c8390cfc15e01db/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=bc7f13bf15c30ee57601c3ec0c8390cfc15e01db", "patch": "@@ -1,5 +1,10 @@\n 2011-05-25  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/48292\n+\t* pt.c (tsubst_decl) [PARM_DECL]: Handle partial instantiation of\n+\tfunction parameter pack.\n+\t(tsubst_pack_expansion): Likewise.\n+\n \t* cp-objcp-common.c (cp_common_init_ts): TYPE_ARGUMENT_PACK has\n \tTS_COMMON.\n "}, {"sha": "fc84314daafde4a07d416001ee997f32b247cad4", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc7f13bf15c30ee57601c3ec0c8390cfc15e01db/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc7f13bf15c30ee57601c3ec0c8390cfc15e01db/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=bc7f13bf15c30ee57601c3ec0c8390cfc15e01db", "patch": "@@ -8711,7 +8711,12 @@ tsubst_pack_expansion (tree t, tree args, tsubst_flags_t complain,\n \t\t have the wrong value for a recursive call.  Just make a\n \t\t dummy decl, since it's only used for its type.  */\n \t      arg_pack = tsubst_decl (parm_pack, args, complain);\n-\t      arg_pack = make_fnparm_pack (arg_pack);\n+\t      if (arg_pack && FUNCTION_PARAMETER_PACK_P (arg_pack))\n+\t\t/* Partial instantiation of the parm_pack, we can't build\n+\t\t   up an argument pack yet.  */\n+\t\targ_pack = NULL_TREE;\n+\t      else\n+\t\targ_pack = make_fnparm_pack (arg_pack);\n \t    }\n \t}\n       else\n@@ -9801,14 +9806,14 @@ tsubst_decl (tree t, tree args, tsubst_flags_t complain)\n             if (DECL_TEMPLATE_PARM_P (t))\n               SET_DECL_TEMPLATE_PARM_P (r);\n \n-\t    /* An argument of a function parameter pack is not a parameter\n-\t       pack.  */\n-\t    FUNCTION_PARAMETER_PACK_P (r) = false;\n-\n             if (expanded_types)\n               /* We're on the Ith parameter of the function parameter\n                  pack.  */\n               {\n+\t\t/* An argument of a function parameter pack is not a parameter\n+\t\t   pack.  */\n+\t\tFUNCTION_PARAMETER_PACK_P (r) = false;\n+\n                 /* Get the Ith type.  */\n                 type = TREE_VEC_ELT (expanded_types, i);\n "}, {"sha": "9f13b0d757357d2f6bd52b32200552eff1db215c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc7f13bf15c30ee57601c3ec0c8390cfc15e01db/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc7f13bf15c30ee57601c3ec0c8390cfc15e01db/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bc7f13bf15c30ee57601c3ec0c8390cfc15e01db", "patch": "@@ -1,3 +1,7 @@\n+2011-05-25  Jason Merrill  <jason@redhat.com>\n+\n+\t* g++.dg/cpp0x/variadic109.C: New.\n+\n 2011-05-25  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t * gcc.target/i386/pause-1.c: New."}, {"sha": "0ec69af812e58b5246fec0a667c41cfefe86db25", "filename": "gcc/testsuite/g++.dg/cpp0x/variadic109.C", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc7f13bf15c30ee57601c3ec0c8390cfc15e01db/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic109.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc7f13bf15c30ee57601c3ec0c8390cfc15e01db/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic109.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic109.C?ref=bc7f13bf15c30ee57601c3ec0c8390cfc15e01db", "patch": "@@ -0,0 +1,17 @@\n+// PR c++/48292\n+// { dg-options -std=c++0x }\n+\n+template <typename... Args> int g(Args...);\n+\n+template <int N = 0>\n+struct A\n+{\n+    template <typename... Args>\n+    static auto f(Args... args) -> decltype(g(args...));\n+};\n+\n+int main()\n+{\n+    A<>::f();\n+    return 0;\n+}"}]}