{"sha": "4075e7e8dcbb00abdd1f02e54d3328ed86644fbd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDA3NWU3ZThkY2JiMDBhYmRkMWYwMmU1NGQzMzI4ZWQ4NjY0NGZiZA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2009-09-16T08:50:46Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2009-09-16T08:50:46Z"}, "message": "re PR tree-optimization/34011 (Memory load is not eliminated from tight vectorized loop)\n\n2009-09-16  Richard Guenther  <rguenther@suse.de>\n\n\tPR middle-end/34011\n\t* tree-flow-inline.h (may_be_aliased): Compute readonly variables\n\tas non-aliased.\n\n\t* gcc.dg/tree-ssa/ssa-lim-7.c: New testcase.\n\nFrom-SVN: r151740", "tree": {"sha": "89ab08745815f374219ed6e82d3b8d681e4529c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/89ab08745815f374219ed6e82d3b8d681e4529c1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4075e7e8dcbb00abdd1f02e54d3328ed86644fbd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4075e7e8dcbb00abdd1f02e54d3328ed86644fbd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4075e7e8dcbb00abdd1f02e54d3328ed86644fbd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4075e7e8dcbb00abdd1f02e54d3328ed86644fbd/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "50cb834f7b62f6ea941c42f29841d10372d26804", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50cb834f7b62f6ea941c42f29841d10372d26804", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50cb834f7b62f6ea941c42f29841d10372d26804"}], "stats": {"total": 36, "additions": 34, "deletions": 2}, "files": [{"sha": "00f964ee401cdac52d59f692999d3d5373d220f3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4075e7e8dcbb00abdd1f02e54d3328ed86644fbd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4075e7e8dcbb00abdd1f02e54d3328ed86644fbd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4075e7e8dcbb00abdd1f02e54d3328ed86644fbd", "patch": "@@ -1,3 +1,9 @@\n+2009-09-16  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/34011\n+\t* tree-flow-inline.h (may_be_aliased): Compute readonly variables\n+\tas non-aliased.\n+\n 2009-09-16  DJ Delorie  <dj@redhat.com>\n \t    Kaz Kojima  <kkojima@gcc.gnu.org>\n "}, {"sha": "f2ba9735f8ffd2b09082d691b8355f8c0b6185c4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4075e7e8dcbb00abdd1f02e54d3328ed86644fbd/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4075e7e8dcbb00abdd1f02e54d3328ed86644fbd/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4075e7e8dcbb00abdd1f02e54d3328ed86644fbd", "patch": "@@ -1,3 +1,8 @@\n+2009-09-16  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/34011\n+\t* gcc.dg/tree-ssa/ssa-lim-7.c: New testcase.\n+\n 2009-09-16  DJ Delorie  <dj@redhat.com>\n \t    Kaz Kojima  <kkojima@gcc.gnu.org>\n "}, {"sha": "f8e15f344860b6408ce34a6ce2278367c8e6811d", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-lim-7.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4075e7e8dcbb00abdd1f02e54d3328ed86644fbd/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-lim-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4075e7e8dcbb00abdd1f02e54d3328ed86644fbd/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-lim-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-lim-7.c?ref=4075e7e8dcbb00abdd1f02e54d3328ed86644fbd", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -fdump-tree-lim1-details\" } */\n+\n+extern const int srcshift;\n+\n+void foo (int *srcdata, int *dstdata)\n+{\n+  int i;\n+\n+  for (i = 0; i < 256; i++)\n+    dstdata[i] = srcdata[i] << srcshift;\n+}\n+\n+/* { dg-final { scan-tree-dump \"Moving statement\" \"lim1\" } } */\n+/* { dg-final { cleanup-tree-dump \"lim1\" } } */"}, {"sha": "fdb33378beebf33b75ea431c000fd626dfc8aaec", "filename": "gcc/tree-flow-inline.h", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4075e7e8dcbb00abdd1f02e54d3328ed86644fbd/gcc%2Ftree-flow-inline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4075e7e8dcbb00abdd1f02e54d3328ed86644fbd/gcc%2Ftree-flow-inline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-flow-inline.h?ref=4075e7e8dcbb00abdd1f02e54d3328ed86644fbd", "patch": "@@ -616,12 +616,18 @@ is_global_var (const_tree t)\n \n /* Return true if VAR may be aliased.  A variable is considered as\n    maybe aliased if it has its address taken by the local TU\n-   or possibly by another TU.  */\n+   or possibly by another TU and might be modified through a pointer.  */\n \n static inline bool\n may_be_aliased (const_tree var)\n {\n-  return (TREE_PUBLIC (var) || DECL_EXTERNAL (var) || TREE_ADDRESSABLE (var));\n+  return (TREE_CODE (var) != CONST_DECL\n+\t  && !((TREE_STATIC (var) || TREE_PUBLIC (var) || DECL_EXTERNAL (var))\n+\t       && TREE_READONLY (var)\n+\t       && !TYPE_NEEDS_CONSTRUCTING (TREE_TYPE (var)))\n+\t  && (TREE_PUBLIC (var)\n+\t      || DECL_EXTERNAL (var)\n+\t      || TREE_ADDRESSABLE (var)));\n }\n \n "}]}