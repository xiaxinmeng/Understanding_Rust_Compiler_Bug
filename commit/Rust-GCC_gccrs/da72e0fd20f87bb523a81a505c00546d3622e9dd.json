{"sha": "da72e0fd20f87bb523a81a505c00546d3622e9dd", "node_id": "C_kwDOANBUbNoAKGRhNzJlMGZkMjBmODdiYjUyM2E4MWE1MDVjMDA1NDZkMzYyMmU5ZGQ", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-02-04T15:23:31Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-02-04T19:51:26Z"}, "message": "libstdc++: Remove un-implementable noexcept from Filesystem TS operations\n\nLWG 3014 removed these incorrect noexcept specifications from the C++17\nstd::filesystem operations. They are also incorrect on the experimental\nTS versions and should be removed from them too.\n\nlibstdc++-v3/ChangeLog:\n\n\t* include/experimental/bits/fs_ops.h (fs::copy_file): Remove\n\tnoexcept.\n\t(fs::create_directories): Likewise.\n\t(fs::remove_all): Likewise.\n\t* src/filesystem/ops.cc (fs::copy_file): Remove noexcept.\n\t(fs::create_directories): Likewise.\n\t(fs::remove_all): Likewise.", "tree": {"sha": "3955102550af850e020b1ccef3d1eacaaf5b772f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3955102550af850e020b1ccef3d1eacaaf5b772f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/da72e0fd20f87bb523a81a505c00546d3622e9dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da72e0fd20f87bb523a81a505c00546d3622e9dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da72e0fd20f87bb523a81a505c00546d3622e9dd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da72e0fd20f87bb523a81a505c00546d3622e9dd/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ebf6175464768983a2d8c82c2d47771ee89192b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ebf6175464768983a2d8c82c2d47771ee89192b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ebf6175464768983a2d8c82c2d47771ee89192b8"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "dafd1ec79a0a37c22bf5c7d71f3dc9a3b1dd18d4", "filename": "libstdc++-v3/include/experimental/bits/fs_ops.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da72e0fd20f87bb523a81a505c00546d3622e9dd/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fbits%2Ffs_ops.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da72e0fd20f87bb523a81a505c00546d3622e9dd/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fbits%2Ffs_ops.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fbits%2Ffs_ops.h?ref=da72e0fd20f87bb523a81a505c00546d3622e9dd", "patch": "@@ -74,19 +74,19 @@ inline namespace v1\n   { return copy_file(__from, __to, copy_options::none); }\n \n   inline bool\n-  copy_file(const path& __from, const path& __to, error_code& __ec) noexcept\n+  copy_file(const path& __from, const path& __to, error_code& __ec)\n   { return copy_file(__from, __to, copy_options::none, __ec); }\n \n   bool copy_file(const path& __from, const path& __to, copy_options __option);\n   bool copy_file(const path& __from, const path& __to, copy_options __option,\n-\t\t error_code& __ec) noexcept;\n+\t\t error_code& __ec);\n \n   void copy_symlink(const path& __existing_symlink, const path& __new_symlink);\n   void copy_symlink(const path& __existing_symlink, const path& __new_symlink,\n \t\t    error_code& __ec) noexcept;\n \n   bool create_directories(const path& __p);\n-  bool create_directories(const path& __p, error_code& __ec) noexcept;\n+  bool create_directories(const path& __p, error_code& __ec);\n \n   bool create_directory(const path& __p);\n   bool create_directory(const path& __p, error_code& __ec) noexcept;\n@@ -262,7 +262,7 @@ inline namespace v1\n   bool remove(const path& __p, error_code& __ec) noexcept;\n \n   uintmax_t remove_all(const path& __p);\n-  uintmax_t remove_all(const path& __p, error_code& __ec) noexcept;\n+  uintmax_t remove_all(const path& __p, error_code& __ec);\n \n   void rename(const path& __from, const path& __to);\n   void rename(const path& __from, const path& __to, error_code& __ec) noexcept;"}, {"sha": "e2a2cefdf49296cf409b0b92601204b73208b6db", "filename": "libstdc++-v3/src/filesystem/ops.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da72e0fd20f87bb523a81a505c00546d3622e9dd/libstdc%2B%2B-v3%2Fsrc%2Ffilesystem%2Fops.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da72e0fd20f87bb523a81a505c00546d3622e9dd/libstdc%2B%2B-v3%2Fsrc%2Ffilesystem%2Fops.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Ffilesystem%2Fops.cc?ref=da72e0fd20f87bb523a81a505c00546d3622e9dd", "patch": "@@ -372,7 +372,7 @@ fs::copy_file(const path& from, const path& to, copy_options option)\n \n bool\n fs::copy_file(const path& from, const path& to, copy_options options,\n-\t      error_code& ec) noexcept\n+\t      error_code& ec)\n {\n #ifdef _GLIBCXX_HAVE_SYS_STAT_H\n   return do_copy_file(from.c_str(), to.c_str(), copy_file_options(options),\n@@ -424,7 +424,7 @@ fs::create_directories(const path& p)\n }\n \n bool\n-fs::create_directories(const path& p, error_code& ec) noexcept\n+fs::create_directories(const path& p, error_code& ec)\n {\n   if (p.empty())\n     {\n@@ -1098,7 +1098,7 @@ fs::remove_all(const path& p)\n }\n \n std::uintmax_t\n-fs::remove_all(const path& p, error_code& ec) noexcept\n+fs::remove_all(const path& p, error_code& ec)\n {\n   // Use the C++17 implementation.\n   return std::filesystem::remove_all(p.native(), ec);"}]}