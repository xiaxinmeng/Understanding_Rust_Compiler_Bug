{"sha": "a508ef2266a2ae21875b5169c4039dd7438a7939", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTUwOGVmMjI2NmEyYWUyMTg3NWI1MTY5YzQwMzlkZDc0MzhhNzkzOQ==", "commit": {"author": {"name": "Mike Stump", "email": "mikestump@comcast.net", "date": "2013-05-14T19:09:29Z"}, "committer": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "2013-05-14T19:09:29Z"}, "message": "recog.h: Rename struct recog_data to Recog_data.\n\n\t* recog.h: Rename struct recog_data to Recog_data.\n\t* recog.c: Likewise.\n\t* reload.c (can_reload_into): Likewise.\n\t* config/picochip/picochip.c: Likewise.\n\nFrom-SVN: r198898", "tree": {"sha": "7c360c40c2532bd524874cbebac12b57b77f0130", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7c360c40c2532bd524874cbebac12b57b77f0130"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a508ef2266a2ae21875b5169c4039dd7438a7939", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a508ef2266a2ae21875b5169c4039dd7438a7939", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a508ef2266a2ae21875b5169c4039dd7438a7939", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a508ef2266a2ae21875b5169c4039dd7438a7939/comments", "author": null, "committer": null, "parents": [{"sha": "e7180acbb92275577a02326efb3ad2671a3f73b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7180acbb92275577a02326efb3ad2671a3f73b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7180acbb92275577a02326efb3ad2671a3f73b7"}], "stats": {"total": 21, "additions": 14, "deletions": 7}, "files": [{"sha": "0f92b30cc1de9423b76247d91d6c7d560b31fbd7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a508ef2266a2ae21875b5169c4039dd7438a7939/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a508ef2266a2ae21875b5169c4039dd7438a7939/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a508ef2266a2ae21875b5169c4039dd7438a7939", "patch": "@@ -1,3 +1,10 @@\n+2013-05-14  Mike Stump  <mikestump@comcast.net>\n+\n+\t* recog.h: Rename struct recog_data to Recog_data.\n+\t* recog.c: Likewise.\n+\t* reload.c (can_reload_into): Likewise.\n+\t* config/picochip/picochip.c: Likewise.\n+\n 2013-05-14  Mike Stump  <mikestump@comcast.net>\n \n \t* web.c (union_match_dups): Also check DF_REF_REAL_LOC."}, {"sha": "56722fa016ce2c48d5124cb93091c9963431b8ba", "filename": "gcc/config/picochip/picochip.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a508ef2266a2ae21875b5169c4039dd7438a7939/gcc%2Fconfig%2Fpicochip%2Fpicochip.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a508ef2266a2ae21875b5169c4039dd7438a7939/gcc%2Fconfig%2Fpicochip%2Fpicochip.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpicochip%2Fpicochip.c?ref=a508ef2266a2ae21875b5169c4039dd7438a7939", "patch": "@@ -187,7 +187,7 @@ struct vliw_state picochip_current_vliw_state;\n \n /* Save/restore recog_data. */\n static int picochip_saved_which_alternative;\n-static struct recog_data picochip_saved_recog_data;\n+static struct Recog_data picochip_saved_recog_data;\n \n /* Determine which ALU to use for the instruction in\n    picochip_current_prescan_insn. */\n@@ -3150,7 +3150,7 @@ picochip_save_recog_data (void)\n {\n   picochip_saved_which_alternative = which_alternative;\n   memcpy (&picochip_saved_recog_data, &recog_data,\n-\t  sizeof (struct recog_data));\n+\t  sizeof (struct Recog_data));\n }\n \n /* Restore some of the contents of global variable recog_data. */\n@@ -3159,7 +3159,7 @@ picochip_restore_recog_data (void)\n {\n   which_alternative = picochip_saved_which_alternative;\n   memcpy (&recog_data, &picochip_saved_recog_data,\n-\t  sizeof (struct recog_data));\n+\t  sizeof (struct Recog_data));\n }\n \n /* Ensure that no var tracking notes are emitted in the middle of a"}, {"sha": "dad7ee0dfb21a6360e9a119f64d31bf4626e47e3", "filename": "gcc/recog.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a508ef2266a2ae21875b5169c4039dd7438a7939/gcc%2Frecog.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a508ef2266a2ae21875b5169c4039dd7438a7939/gcc%2Frecog.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frecog.c?ref=a508ef2266a2ae21875b5169c4039dd7438a7939", "patch": "@@ -70,7 +70,7 @@ static rtx split_insn (rtx);\n \n int volatile_ok;\n \n-struct recog_data recog_data;\n+struct Recog_data recog_data;\n \n /* Contains a vector of operand_alternative structures for every operand.\n    Set up by preprocess_constraints.  */"}, {"sha": "1bb0738b46fd9128715ceb921bb80a0f0456168b", "filename": "gcc/recog.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a508ef2266a2ae21875b5169c4039dd7438a7939/gcc%2Frecog.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a508ef2266a2ae21875b5169c4039dd7438a7939/gcc%2Frecog.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frecog.h?ref=a508ef2266a2ae21875b5169c4039dd7438a7939", "patch": "@@ -179,7 +179,7 @@ extern int which_alternative;\n \n /* The following vectors hold the results from insn_extract.  */\n \n-struct recog_data\n+struct Recog_data\n {\n   /* It is very tempting to make the 5 operand related arrays into a\n      structure and index on that.  However, to be source compatible\n@@ -245,7 +245,7 @@ struct recog_data\n   rtx insn;\n };\n \n-extern struct recog_data recog_data;\n+extern struct Recog_data recog_data;\n \n /* Contains a vector of operand_alternative structures for every operand.\n    Set up by preprocess_constraints.  */"}, {"sha": "959d143b8766dbdeb29bc2ea5d7df06ade44d2b0", "filename": "gcc/reload.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a508ef2266a2ae21875b5169c4039dd7438a7939/gcc%2Freload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a508ef2266a2ae21875b5169c4039dd7438a7939/gcc%2Freload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload.c?ref=a508ef2266a2ae21875b5169c4039dd7438a7939", "patch": "@@ -895,7 +895,7 @@ can_reload_into (rtx in, int regno, enum machine_mode mode)\n {\n   rtx dst, test_insn;\n   int r = 0;\n-  struct recog_data save_recog_data;\n+  struct Recog_data save_recog_data;\n \n   /* For matching constraints, we often get notional input reloads where\n      we want to use the original register as the reload register.  I.e."}]}