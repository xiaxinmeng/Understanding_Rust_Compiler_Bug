{"sha": "130de160707667f91c5367e154573a60dfc329cc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTMwZGUxNjA3MDc2NjdmOTFjNTM2N2UxNTQ1NzNhNjBkZmMzMjljYw==", "commit": {"author": {"name": "Sascha Brawer", "email": "brawer@dandelis.ch", "date": "2003-09-11T16:45:10Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2003-09-11T16:45:10Z"}, "message": "Toolkit.java (getSystemEventQueue): Call SecurityManager if one is installed.\n\n2003-09-11  Sascha Brawer  <brawer@dandelis.ch>\n\n\t* java/awt/Toolkit.java (getSystemEventQueue): Call SecurityManager\n\tif one is installed. Improve Javadoc.\n\t(getSystemEventQueueImpl): Improve Javadoc.\n\nFrom-SVN: r71308", "tree": {"sha": "f45aeebafcda4eafd9f6b9df095b9c639beb3585", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f45aeebafcda4eafd9f6b9df095b9c639beb3585"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/130de160707667f91c5367e154573a60dfc329cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/130de160707667f91c5367e154573a60dfc329cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/130de160707667f91c5367e154573a60dfc329cc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/130de160707667f91c5367e154573a60dfc329cc/comments", "author": null, "committer": null, "parents": [{"sha": "c203255aba10d807f68097646f4aeb3feaf2cb48", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c203255aba10d807f68097646f4aeb3feaf2cb48", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c203255aba10d807f68097646f4aeb3feaf2cb48"}], "stats": {"total": 51, "additions": 46, "deletions": 5}, "files": [{"sha": "a1551e6cf4102c756c94a3775e3fa4fa1a9a0f8a", "filename": "libjava/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/130de160707667f91c5367e154573a60dfc329cc/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/130de160707667f91c5367e154573a60dfc329cc/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=130de160707667f91c5367e154573a60dfc329cc", "patch": "@@ -1,3 +1,9 @@\n+2003-09-11  Sascha Brawer  <brawer@dandelis.ch>\n+\n+\t* java/awt/Toolkit.java (getSystemEventQueue): Call SecurityManager\n+\tif one is installed. Improve Javadoc.\n+\t(getSystemEventQueueImpl): Improve Javadoc.\n+\n 2003-09-11  Tom Tromey  <tromey@redhat.com>\n \n \t* java/io/natFilePosix.cc (getCanonicalPath): Handle case where"}, {"sha": "e13bd5f4db14ed9b8b2a5ea670dacddc9eef9417", "filename": "libjava/java/awt/Toolkit.java", "status": "modified", "additions": 40, "deletions": 5, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/130de160707667f91c5367e154573a60dfc329cc/libjava%2Fjava%2Fawt%2FToolkit.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/130de160707667f91c5367e154573a60dfc329cc/libjava%2Fjava%2Fawt%2FToolkit.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FToolkit.java?ref=130de160707667f91c5367e154573a60dfc329cc", "patch": "@@ -803,23 +803,58 @@ public static String getProperty(String key, String def)\n     return props.getProperty(key, def);\n   }\n \n+\n   /**\n-   * Returns the event queue for the applet.  Despite the word \"System\"\n-   * in the name of this method, there is no guarantee that the same queue\n-   * is shared system wide.\n+   * Returns the event queue that is suitable for the calling context.\n+   *\n+   * <p>Despite the word \u201cSystem\u201d in the name of this\n+   * method, a toolkit may provide different event queues for each\n+   * applet. There is no guarantee that the same queue is shared\n+   * system-wide.\n+   *\n+   * <p>The implementation first checks whether a\n+   * SecurityManager has been installed. If so, its {@link\n+   * java.lang.SecurityManager#checkAwtEventQueueAccess()} method gets\n+   * called. The security manager will throw a SecurityException if it\n+   * does not grant the permission to access the event queue.\n    *\n-   * @return The event queue for this applet (or application)\n+   * <p>Next, the call is delegated to {@link\n+   * #getSystemEventQueueImpl()}.\n+   *\n+   * @return The event queue for this applet (or application).\n+   *\n+   * @throws SecurityException if a security manager has been\n+   * installed, and it does not grant the permission to access the\n+   * event queue.\n    */\n   public final EventQueue getSystemEventQueue()\n   {\n+    SecurityManager sm;\n+\n+    sm = System.getSecurityManager();\n+    if (sm != null)\n+      sm.checkAwtEventQueueAccess();\n+\n     return getSystemEventQueueImpl();\n   }\n \n+\n   /**\n-   * // FIXME: What does this do?\n+   * Returns the event queue that is suitable for the calling context.\n+   *\n+   * <p>Despite the word \u201c,System\u201d, in the name of this\n+   * method, a toolkit may provide different event queues for each\n+   * applet. There is no guarantee that the same queue is shared\n+   * system-wide.\n+   *\n+   * <p>No security checks are performed, which is why this method\n+   * may only be called by Toolkits.\n+   *\n+   * @see #getSystemEventQueue()\n    */\n   protected abstract EventQueue getSystemEventQueueImpl();\n \n+\n   /**\n    * @since 1.3\n    */"}]}