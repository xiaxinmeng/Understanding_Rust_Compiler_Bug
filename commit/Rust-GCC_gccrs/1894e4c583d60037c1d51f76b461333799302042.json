{"sha": "1894e4c583d60037c1d51f76b461333799302042", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTg5NGU0YzU4M2Q2MDAzN2MxZDUxZjc2YjQ2MTMzMzc5OTMwMjA0Mg==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2008-08-25T22:52:47Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2008-08-25T22:52:47Z"}, "message": "acinclude.m4 ([GLIBCXX_CHECK_GETTIMEOFDAY]): Change to use GCC_TRY_COMPILE_OR_LINK.\n\n2008-08-23  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* acinclude.m4 ([GLIBCXX_CHECK_GETTIMEOFDAY]): Change to use\n\tGCC_TRY_COMPILE_OR_LINK.\n\t([GLIBCXX_CHECK_CLOCK_GETTIME]): Rename to\n\t[GLIBCXX_ENABLE_CLOCK_GETTIME], a versatile configure-time option,\n\t[no] by default, since it includes TRY_LINK checks.  librt is also\n\tsearched, if requested.\n\t* doc/xml/manual/configure.xml: Document the latter.\n\t* configure.ac: Move the above checks outside native-only.\n\t* configure: Regenerate.\n\nFrom-SVN: r139576", "tree": {"sha": "966487ab77d3d85b03bc8ec5435569466d611c78", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/966487ab77d3d85b03bc8ec5435569466d611c78"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1894e4c583d60037c1d51f76b461333799302042", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1894e4c583d60037c1d51f76b461333799302042", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1894e4c583d60037c1d51f76b461333799302042", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1894e4c583d60037c1d51f76b461333799302042/comments", "author": null, "committer": null, "parents": [{"sha": "e57903b847ed740d541538d5c51d19879be2b825", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e57903b847ed740d541538d5c51d19879be2b825", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e57903b847ed740d541538d5c51d19879be2b825"}], "stats": {"total": 27999, "additions": 9691, "deletions": 18308}, "files": [{"sha": "ca92259ebeb9bcdf177ecd1ce454f6c3de357e58", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1894e4c583d60037c1d51f76b461333799302042/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1894e4c583d60037c1d51f76b461333799302042/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=1894e4c583d60037c1d51f76b461333799302042", "patch": "@@ -1,3 +1,13 @@\n+2008-08-25  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* linkage.m4 ([GLIBCXX_CHECK_BUILTIN_MATH_DECL_AND_LINKAGE_1],\n+\t[GLIBCXX_CHECK_BUILTIN_MATH_SUPPORT]): Remove \n+\t* configure.ac: Do not call the latter.\n+\t* crossconfig.m4: Likewise.\n+\t* libmath/mathconf.h: Adjust.\n+\t* configure: Regenerate.\n+\t* config.h.in: Likewise.\n+\n 2008-08-24  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* acinclude.m4 ([GLIBCXX_CHECK_RANDOM_TR1]): Simplify, just use"}, {"sha": "007477204188d48f0a3b42695bb361016a1c9625", "filename": "libstdc++-v3/config.h.in", "status": "modified", "additions": 0, "deletions": 42, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1894e4c583d60037c1d51f76b461333799302042/libstdc%2B%2B-v3%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1894e4c583d60037c1d51f76b461333799302042/libstdc%2B%2B-v3%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig.h.in?ref=1894e4c583d60037c1d51f76b461333799302042", "patch": "@@ -631,48 +631,6 @@\n /* Define to 1 if you have the `_tanl' function. */\n #undef HAVE__TANL\n \n-/* Define if the compiler/host combination has __builtin_abs. */\n-#undef HAVE___BUILTIN_ABS\n-\n-/* Define if the compiler/host combination has __builtin_cos. */\n-#undef HAVE___BUILTIN_COS\n-\n-/* Define if the compiler/host combination has __builtin_cosf. */\n-#undef HAVE___BUILTIN_COSF\n-\n-/* Define if the compiler/host combination has __builtin_cosl. */\n-#undef HAVE___BUILTIN_COSL\n-\n-/* Define if the compiler/host combination has __builtin_fabs. */\n-#undef HAVE___BUILTIN_FABS\n-\n-/* Define if the compiler/host combination has __builtin_fabsf. */\n-#undef HAVE___BUILTIN_FABSF\n-\n-/* Define if the compiler/host combination has __builtin_fabsl. */\n-#undef HAVE___BUILTIN_FABSL\n-\n-/* Define if the compiler/host combination has __builtin_labs. */\n-#undef HAVE___BUILTIN_LABS\n-\n-/* Define if the compiler/host combination has __builtin_sin. */\n-#undef HAVE___BUILTIN_SIN\n-\n-/* Define if the compiler/host combination has __builtin_sinf. */\n-#undef HAVE___BUILTIN_SINF\n-\n-/* Define if the compiler/host combination has __builtin_sinl. */\n-#undef HAVE___BUILTIN_SINL\n-\n-/* Define if the compiler/host combination has __builtin_sqrt. */\n-#undef HAVE___BUILTIN_SQRT\n-\n-/* Define if the compiler/host combination has __builtin_sqrtf. */\n-#undef HAVE___BUILTIN_SQRTF\n-\n-/* Define if the compiler/host combination has __builtin_sqrtl. */\n-#undef HAVE___BUILTIN_SQRTL\n-\n /* Define to 1 if you have the `__signbit' function. */\n #undef HAVE___SIGNBIT\n "}, {"sha": "d53fe36ece60b8b4f5750865e83c7fbf10daef61", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 9673, "deletions": 18136, "changes": 27809, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1894e4c583d60037c1d51f76b461333799302042/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1894e4c583d60037c1d51f76b461333799302042/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=1894e4c583d60037c1d51f76b461333799302042"}, {"sha": "5704b4b17cffc6d6de91e415b132a3c00a704df7", "filename": "libstdc++-v3/configure.ac", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1894e4c583d60037c1d51f76b461333799302042/libstdc%2B%2B-v3%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1894e4c583d60037c1d51f76b461333799302042/libstdc%2B%2B-v3%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure.ac?ref=1894e4c583d60037c1d51f76b461333799302042", "patch": "@@ -104,7 +104,7 @@ GLIBCXX_ENABLE_THREADS\n GLIBCXX_CHECK_COMPILER_FEATURES\n GLIBCXX_CHECK_STANDARD_LAYOUT\n \n-# Enable all the variable C++ runtime options that doesn't require linking.\n+# Enable all the variable C++ runtime options that don't require linking.\n GLIBCXX_ENABLE_CSTDIO\n GLIBCXX_ENABLE_CLOCALE\n GLIBCXX_ENABLE_ALLOCATOR\n@@ -167,11 +167,10 @@ if $GLIBCXX_IS_NATIVE; then\n \n   GLIBCXX_CHECK_LINKER_FEATURES\n   GLIBCXX_CHECK_MATH_SUPPORT\n-  GLIBCXX_CHECK_BUILTIN_MATH_SUPPORT\n   GLIBCXX_CHECK_COMPLEX_MATH_SUPPORT\n   GLIBCXX_CHECK_STDLIB_SUPPORT\n \n-  # For dev/random and dev/urandom for TR1.\n+  # For /dev/random and /dev/urandom for TR1.\n   GLIBCXX_CHECK_RANDOM_TR1\n \n   # For TLS support.\n@@ -211,7 +210,6 @@ else\n   fi\n \n   # Construct crosses by hand, eliminating bits that need ld...\n-  # GLIBCXX_CHECK_BUILTIN_MATH_SUPPORT\n   # GLIBCXX_CHECK_MATH_SUPPORT\n \n   # First, test for \"known\" system libraries.  We may be using newlib even"}, {"sha": "399077546d3017bd5ff38b4493a7033b0f353a07", "filename": "libstdc++-v3/crossconfig.m4", "status": "modified", "additions": 0, "deletions": 32, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1894e4c583d60037c1d51f76b461333799302042/libstdc%2B%2B-v3%2Fcrossconfig.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1894e4c583d60037c1d51f76b461333799302042/libstdc%2B%2B-v3%2Fcrossconfig.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fcrossconfig.m4?ref=1894e4c583d60037c1d51f76b461333799302042", "patch": "@@ -16,7 +16,6 @@ case \"${host}\" in\n     GLIBCXX_CHECK_COMPILER_FEATURES\n     GLIBCXX_CHECK_LINKER_FEATURES\n     GLIBCXX_CHECK_MATH_SUPPORT\n-    GLIBCXX_CHECK_BUILTIN_MATH_SUPPORT\n     GLIBCXX_CHECK_COMPLEX_MATH_SUPPORT\n     GLIBCXX_CHECK_STDLIB_SUPPORT\n \n@@ -39,7 +38,6 @@ case \"${host}\" in\n \n     # Don't call GLIBCXX_CHECK_LINKER_FEATURES, Darwin doesn't have a GNU ld\n     GLIBCXX_CHECK_MATH_SUPPORT\n-    GLIBCXX_CHECK_BUILTIN_MATH_SUPPORT\n     GLIBCXX_CHECK_COMPLEX_MATH_SUPPORT\n     GLIBCXX_CHECK_STDLIB_SUPPORT\n     ;;\n@@ -53,21 +51,6 @@ case \"${host}\" in\n     AC_DEFINE(HAVE_COPYSIGN)\n     AC_DEFINE(HAVE_SINCOS)\n     AC_DEFINE(HAVE_HYPOT)\n-    # GLIBCXX_CHECK_BUILTIN_MATH_SUPPORT\n-    AC_DEFINE(HAVE___BUILTIN_ABS)\n-    AC_DEFINE(HAVE___BUILTIN_FABSF)\n-    AC_DEFINE(HAVE___BUILTIN_FABS)\n-    AC_DEFINE(HAVE___BUILTIN_FABSL)\n-    AC_DEFINE(HAVE___BUILTIN_LABS)\n-    AC_DEFINE(HAVE___BUILTIN_SQRTF)\n-    AC_DEFINE(HAVE___BUILTIN_SQRT)\n-    AC_DEFINE(HAVE___BUILTIN_SQRTL)\n-    AC_DEFINE(HAVE___BUILTIN_SINF)\n-    AC_DEFINE(HAVE___BUILTIN_SIN)\n-    AC_DEFINE(HAVE___BUILTIN_SINL)\n-    AC_DEFINE(HAVE___BUILTIN_COSF)\n-    AC_DEFINE(HAVE___BUILTIN_COS)\n-    AC_DEFINE(HAVE___BUILTIN_COSL)\n     # GLIBCXX_CHECK_COMPLEX_MATH_SUPPORT\n     # GLIBCXX_CHECK_STDLIB_SUPPORT\n     AC_DEFINE(HAVE_COPYSIGN)\n@@ -147,7 +130,6 @@ case \"${host}\" in\n     GLIBCXX_CHECK_COMPILER_FEATURES\n     GLIBCXX_CHECK_LINKER_FEATURES\n     GLIBCXX_CHECK_MATH_SUPPORT\n-    GLIBCXX_CHECK_BUILTIN_MATH_SUPPORT\n     GLIBCXX_CHECK_COMPLEX_MATH_SUPPORT\n     GLIBCXX_CHECK_STDLIB_SUPPORT\n \n@@ -224,20 +206,6 @@ case \"${host}\" in\n          AC_DEFINE(HAVE_LIBM)\n         ;;\n     esac\n-    case \"$target\" in\n-      sparc*-*-solaris2.8 | sparc*-*-solaris2.9 | sparc*-*-solaris2.10)\n-        # I saw these on sparc-sun-solaris2.8, but not 2.6, and not on i386\n-        AC_DEFINE(HAVE___BUILTIN_ABS)\n-        AC_DEFINE(HAVE___BUILTIN_LABS)\n-        AC_DEFINE(HAVE___BUILTIN_FABS)\n-        AC_DEFINE(HAVE___BUILTIN_FABSF)\n-        AC_DEFINE(HAVE___BUILTIN_FABSL)\n-        AC_DEFINE(HAVE___BUILTIN_COS)\n-        AC_DEFINE(HAVE___BUILTIN_COSF)\n-        AC_DEFINE(HAVE___BUILTIN_SIN)\n-        AC_DEFINE(HAVE___BUILTIN_SINF)\n-       ;;\n-    esac\n     case \"$target\" in\n       *-*-solaris2.10)\n       # These two C99 functions are present only in Solaris >= 10"}, {"sha": "50ab0214c6652c370f24b431f216ad5a91c89b7d", "filename": "libstdc++-v3/libmath/mathconf.h", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1894e4c583d60037c1d51f76b461333799302042/libstdc%2B%2B-v3%2Flibmath%2Fmathconf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1894e4c583d60037c1d51f76b461333799302042/libstdc%2B%2B-v3%2Flibmath%2Fmathconf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibmath%2Fmathconf.h?ref=1894e4c583d60037c1d51f76b461333799302042", "patch": "@@ -1,6 +1,7 @@\n /* Configuration data for libmath subpart of libstdc++. */\n \n-/* Copyright (C) 1997-1999, 2000, 2001 Free Software Foundation, Inc.\n+/* Copyright (C) 1997-1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006,\n+   2007, 2008 Free Software Foundation, Inc.\n \n    This file is part of the GNU ISO C++ Library.  This library is free\n    software; you can redistribute it and/or modify it under the\n@@ -263,10 +264,10 @@ do {\t\t\t\t\t\t\t\t\\\n \n \n /* Replacement for non-existing float functions.  */\n-#if !defined(HAVE_FABSF) && !defined(HAVE___BUILTIN_FABSF)\n+#ifndef HAVE_FABSF\n # define fabsf(x) fabs (x)\n #endif\n-#if !defined(HAVE_COSF) && !defined(HAVE___BUILTIN_COSF)\n+#ifndef HAVE_COSF\n # define cosf(x) cos (x)\n #endif\n #ifndef HAVE_COSHF\n@@ -284,13 +285,13 @@ do {\t\t\t\t\t\t\t\t\\\n #ifndef HAVE_POWF\n # define powf(x, y) pow (x, y)\n #endif\n-#if !defined(HAVE_SINF) && !defined(HAVE___BUILTIN_SINF)\n+#ifndef HAVE_SINF\n # define sinf(x) sin (x)\n #endif\n #ifndef HAVE_SINHF\n # define sinhf(x) sinh (x)\n #endif\n-#if !defined(HAVE_SQRTF) && !defined(HAVE___BUILTIN_SQRTF)\n+#ifndef HAVE_SQRTF\n # define sqrtf(x) sqrt (x)\n #endif\n #ifndef HAVE_TANF\n@@ -306,4 +307,3 @@ do {\t\t\t\t\t\t\t\t\\\n #ifdef __cplusplus\n }\n #endif\n-"}, {"sha": "f1a15ac18852f58a376f23438f24541d3bfd6f3e", "filename": "libstdc++-v3/linkage.m4", "status": "modified", "additions": 0, "deletions": 88, "changes": 88, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1894e4c583d60037c1d51f76b461333799302042/libstdc%2B%2B-v3%2Flinkage.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1894e4c583d60037c1d51f76b461333799302042/libstdc%2B%2B-v3%2Flinkage.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flinkage.m4?ref=1894e4c583d60037c1d51f76b461333799302042", "patch": "@@ -290,94 +290,6 @@ AC_DEFUN([GLIBCXX_CHECK_STDLIB_DECL_AND_LINKAGE_3], [\n   fi\n ])\n \n-dnl\n-dnl Because the builtins are picky picky picky about the arguments they take,\n-dnl do an explict linkage tests here.\n-dnl Check to see if the (math function) argument passed is\n-dnl 1) declared when using the c++ compiler\n-dnl 2) has \"C\" linkage\n-dnl\n-dnl Define HAVE_CARGF etc if \"cargf\" is declared and links\n-dnl\n-dnl argument 1 is name of function to check\n-dnl\n-dnl ASSUMES argument is a math function with ONE parameter\n-dnl\n-dnl GLIBCXX_CHECK_BUILTIN_MATH_DECL_LINKAGE_1\n-AC_DEFUN([GLIBCXX_CHECK_BUILTIN_MATH_DECL_AND_LINKAGE_1], [\n-  AC_MSG_CHECKING([for $1 declaration])\n-  if test x${glibcxx_cv_func_$1_use+set} != xset; then\n-    AC_CACHE_VAL(glibcxx_cv_func_$1_use, [\n-      AC_LANG_SAVE\n-      AC_LANG_CPLUSPLUS\n-      AC_TRY_COMPILE([#include <math.h>],\n-                     [ $1(0);],\n-                     [glibcxx_cv_func_$1_use=yes], [glibcxx_cv_func_$1_use=no])\n-      AC_LANG_RESTORE\n-    ])\n-  fi\n-  AC_MSG_RESULT($glibcxx_cv_func_$1_use)\n-  if test x$glibcxx_cv_func_$1_use = x\"yes\"; then\n-    AC_MSG_CHECKING([for $1 linkage])\n-    if test x${glibcxx_cv_func_$1_link+set} != xset; then\n-      AC_CACHE_VAL(glibcxx_cv_func_$1_link, [\n-        AC_TRY_LINK([#include <math.h>],\n-                    [ $1(0);],\n-                    [glibcxx_cv_func_$1_link=yes], [glibcxx_cv_func_$1_link=no])\n-      ])\n-    fi\n-    AC_MSG_RESULT($glibcxx_cv_func_$1_link)\n-    define([NAME], [translit([$1],[abcdefghijklmnopqrstuvwxyz],\n-    \t\t\t\t  [ABCDEFGHIJKLMNOPQRSTUVWXYZ])])\n-    if test x$glibcxx_cv_func_$1_link = x\"yes\"; then\n-      AC_DEFINE([HAVE_]NAME, 1, [Define if the compiler/host combination has $1.])\n-    fi\n-    undefine([NAME])\n-  fi\n-])\n-\n-\n-dnl\n-dnl Check to see what builtin math functions are supported\n-dnl\n-dnl check for __builtin_abs\n-dnl check for __builtin_fabsf\n-dnl check for __builtin_fabs\n-dnl check for __builtin_fabl\n-dnl check for __builtin_labs\n-dnl check for __builtin_sqrtf\n-dnl check for __builtin_sqrtl\n-dnl check for __builtin_sqrt\n-dnl check for __builtin_sinf\n-dnl check for __builtin_sin\n-dnl check for __builtin_sinl\n-dnl check for __builtin_cosf\n-dnl check for __builtin_cos\n-dnl check for __builtin_cosl\n-dnl\n-dnl GLIBCXX_CHECK_BUILTIN_MATH_SUPPORT\n-AC_DEFUN([GLIBCXX_CHECK_BUILTIN_MATH_SUPPORT], [\n-  dnl Test for builtin math functions.\n-  dnl These are made in gcc/c-common.c\n-  GLIBCXX_CHECK_BUILTIN_MATH_DECL_AND_LINKAGE_1(__builtin_abs)\n-  GLIBCXX_CHECK_BUILTIN_MATH_DECL_AND_LINKAGE_1(__builtin_fabsf)\n-  GLIBCXX_CHECK_BUILTIN_MATH_DECL_AND_LINKAGE_1(__builtin_fabs)\n-  GLIBCXX_CHECK_BUILTIN_MATH_DECL_AND_LINKAGE_1(__builtin_fabsl)\n-  GLIBCXX_CHECK_BUILTIN_MATH_DECL_AND_LINKAGE_1(__builtin_labs)\n-\n-  GLIBCXX_CHECK_BUILTIN_MATH_DECL_AND_LINKAGE_1(__builtin_sqrtf)\n-  GLIBCXX_CHECK_BUILTIN_MATH_DECL_AND_LINKAGE_1(__builtin_sqrt)\n-  GLIBCXX_CHECK_BUILTIN_MATH_DECL_AND_LINKAGE_1(__builtin_sqrtl)\n-\n-  GLIBCXX_CHECK_BUILTIN_MATH_DECL_AND_LINKAGE_1(__builtin_sinf)\n-  GLIBCXX_CHECK_BUILTIN_MATH_DECL_AND_LINKAGE_1(__builtin_sin)\n-  GLIBCXX_CHECK_BUILTIN_MATH_DECL_AND_LINKAGE_1(__builtin_sinl)\n-\n-  GLIBCXX_CHECK_BUILTIN_MATH_DECL_AND_LINKAGE_1(__builtin_cosf)\n-  GLIBCXX_CHECK_BUILTIN_MATH_DECL_AND_LINKAGE_1(__builtin_cos)\n-  GLIBCXX_CHECK_BUILTIN_MATH_DECL_AND_LINKAGE_1(__builtin_cosl)\n-])\n-\n dnl\n dnl Check to see what the underlying c library is like\n dnl These checks need to do two things:"}]}