{"sha": "603a0084b1bb600833e17822b18353f841b16467", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjAzYTAwODRiMWJiNjAwODMzZTE3ODIyYjE4MzUzZjg0MWIxNjQ2Nw==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2014-07-15T13:41:58Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2014-07-15T13:41:58Z"}, "message": "call.c (convert_like_real): Call print_z_candidate and inform only if permerror returns true.\n\n2014-07-15  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* call.c (convert_like_real): Call print_z_candidate and inform only\n\tif permerror returns true.\n\nFrom-SVN: r212560", "tree": {"sha": "c3a59735f52b09c3afcd7fbcf0209fba87200de5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c3a59735f52b09c3afcd7fbcf0209fba87200de5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/603a0084b1bb600833e17822b18353f841b16467", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/603a0084b1bb600833e17822b18353f841b16467", "html_url": "https://github.com/Rust-GCC/gccrs/commit/603a0084b1bb600833e17822b18353f841b16467", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/603a0084b1bb600833e17822b18353f841b16467/comments", "author": null, "committer": null, "parents": [{"sha": "78d22941b3e3c7a74bc87f6f50ae908338c11c6a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78d22941b3e3c7a74bc87f6f50ae908338c11c6a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78d22941b3e3c7a74bc87f6f50ae908338c11c6a"}], "stats": {"total": 15, "additions": 11, "deletions": 4}, "files": [{"sha": "697ba793c73d274dc5085b8164fdd15d4a858507", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/603a0084b1bb600833e17822b18353f841b16467/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/603a0084b1bb600833e17822b18353f841b16467/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=603a0084b1bb600833e17822b18353f841b16467", "patch": "@@ -1,3 +1,8 @@\n+2014-07-15  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* call.c (convert_like_real): Call print_z_candidate and inform only\n+\tif permerror returns true.\n+\n 2014-07-14  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* class.c (build_clone): Do not clear assembler names of"}, {"sha": "6da1218042f53bf838992642a52d460f2f347019", "filename": "gcc/cp/call.c", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/603a0084b1bb600833e17822b18353f841b16467/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/603a0084b1bb600833e17822b18353f841b16467/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=603a0084b1bb600833e17822b18353f841b16467", "patch": "@@ -6076,9 +6076,11 @@ convert_like_real (conversion *convs, tree expr, tree fn, int argnum,\n \t{\n \t  if (t->kind == ck_user && t->cand->reason)\n \t    {\n-\t      permerror (loc, \"invalid user-defined conversion \"\n-\t\t\t \"from %qT to %qT\", TREE_TYPE (expr), totype);\n-\t      print_z_candidate (loc, \"candidate is:\", t->cand);\n+\t      complained = permerror (loc, \"invalid user-defined conversion \"\n+\t\t\t\t      \"from %qT to %qT\", TREE_TYPE (expr),\n+\t\t\t\t      totype);\n+\t      if (complained)\n+\t\tprint_z_candidate (loc, \"candidate is:\", t->cand);\n \t      expr = convert_like_real (t, expr, fn, argnum, 1,\n \t\t\t\t\t/*issue_conversion_warnings=*/false,\n \t\t\t\t\t/*c_cast_p=*/false,\n@@ -6089,7 +6091,7 @@ convert_like_real (conversion *convs, tree expr, tree fn, int argnum,\n \t\t\t\t\t     complain);\n \t      else\n \t\texpr = cp_convert (totype, expr, complain);\n-\t      if (fn)\n+\t      if (complained && fn)\n \t\tinform (DECL_SOURCE_LOCATION (fn),\n \t\t\t\"  initializing argument %P of %qD\", argnum, fn);\n \t      return expr;"}]}