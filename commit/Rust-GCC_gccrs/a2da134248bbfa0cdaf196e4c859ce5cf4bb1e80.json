{"sha": "a2da134248bbfa0cdaf196e4c859ce5cf4bb1e80", "node_id": "C_kwDOANBUbNoAKGEyZGExMzQyNDhiYmZhMGNkYWYxOTZlNGM4NTljZTVjZjRiYjFlODA", "commit": {"author": {"name": "Ju-Zhe Zhong", "email": "juzhe.zhong@rivai.ai", "date": "2023-02-06T05:08:39Z"}, "committer": {"name": "Kito Cheng", "email": "kito.cheng@sifive.com", "date": "2023-02-12T03:04:08Z"}, "message": "RISC-V: Add vzext.vf8 C API tests\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/riscv/rvv/base/vzext_vf8-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vzext_vf8-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vzext_vf8-3.c: New test.\n\t* gcc.target/riscv/rvv/base/vzext_vf8_m-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vzext_vf8_m-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vzext_vf8_m-3.c: New test.\n\t* gcc.target/riscv/rvv/base/vzext_vf8_mu-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vzext_vf8_mu-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vzext_vf8_mu-3.c: New test.\n\t* gcc.target/riscv/rvv/base/vzext_vf8_tu-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vzext_vf8_tu-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vzext_vf8_tu-3.c: New test.\n\t* gcc.target/riscv/rvv/base/vzext_vf8_tum-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vzext_vf8_tum-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vzext_vf8_tum-3.c: New test.\n\t* gcc.target/riscv/rvv/base/vzext_vf8_tumu-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vzext_vf8_tumu-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vzext_vf8_tumu-3.c: New test.", "tree": {"sha": "7e5e11d63310c30081697275e8eb29b42ba589e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7e5e11d63310c30081697275e8eb29b42ba589e6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a2da134248bbfa0cdaf196e4c859ce5cf4bb1e80", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2da134248bbfa0cdaf196e4c859ce5cf4bb1e80", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2da134248bbfa0cdaf196e4c859ce5cf4bb1e80", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2da134248bbfa0cdaf196e4c859ce5cf4bb1e80/comments", "author": {"login": "zhongjuzhe", "id": 66454988, "node_id": "MDQ6VXNlcjY2NDU0OTg4", "avatar_url": "https://avatars.githubusercontent.com/u/66454988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhongjuzhe", "html_url": "https://github.com/zhongjuzhe", "followers_url": "https://api.github.com/users/zhongjuzhe/followers", "following_url": "https://api.github.com/users/zhongjuzhe/following{/other_user}", "gists_url": "https://api.github.com/users/zhongjuzhe/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhongjuzhe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhongjuzhe/subscriptions", "organizations_url": "https://api.github.com/users/zhongjuzhe/orgs", "repos_url": "https://api.github.com/users/zhongjuzhe/repos", "events_url": "https://api.github.com/users/zhongjuzhe/events{/privacy}", "received_events_url": "https://api.github.com/users/zhongjuzhe/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "99fa5d94c41355f82f9f83d98faeaf58c6aa85fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99fa5d94c41355f82f9f83d98faeaf58c6aa85fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99fa5d94c41355f82f9f83d98faeaf58c6aa85fc"}], "stats": {"total": 612, "additions": 612, "deletions": 0}, "files": [{"sha": "c0620ec27b17c10c90fa0576e5b0434a29e170a6", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vzext_vf8-1.c", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2da134248bbfa0cdaf196e4c859ce5cf4bb1e80/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2da134248bbfa0cdaf196e4c859ce5cf4bb1e80/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8-1.c?ref=a2da134248bbfa0cdaf196e4c859ce5cf4bb1e80", "patch": "@@ -0,0 +1,34 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint64m1_t test___riscv_vzext_vf8_u64m1(vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_u64m1(op1,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf8_u64m2(vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_u64m2(op1,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf8_u64m4(vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_u64m4(op1,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf8_u64m8(vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_u64m8(op1,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */"}, {"sha": "6a191aef61f84917df945e2850676a7034e21cc9", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vzext_vf8-2.c", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2da134248bbfa0cdaf196e4c859ce5cf4bb1e80/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2da134248bbfa0cdaf196e4c859ce5cf4bb1e80/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8-2.c?ref=a2da134248bbfa0cdaf196e4c859ce5cf4bb1e80", "patch": "@@ -0,0 +1,34 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint64m1_t test___riscv_vzext_vf8_u64m1(vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_u64m1(op1,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf8_u64m2(vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_u64m2(op1,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf8_u64m4(vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_u64m4(op1,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf8_u64m8(vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_u64m8(op1,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */"}, {"sha": "f29adaf3b0b8971409c20ce730afd752bec878a1", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vzext_vf8-3.c", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2da134248bbfa0cdaf196e4c859ce5cf4bb1e80/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2da134248bbfa0cdaf196e4c859ce5cf4bb1e80/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8-3.c?ref=a2da134248bbfa0cdaf196e4c859ce5cf4bb1e80", "patch": "@@ -0,0 +1,34 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint64m1_t test___riscv_vzext_vf8_u64m1(vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_u64m1(op1,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf8_u64m2(vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_u64m2(op1,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf8_u64m4(vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_u64m4(op1,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf8_u64m8(vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_u64m8(op1,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */"}, {"sha": "bb35704346fe12eedccd14a7fbb6db53ac438db4", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vzext_vf8_m-1.c", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2da134248bbfa0cdaf196e4c859ce5cf4bb1e80/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8_m-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2da134248bbfa0cdaf196e4c859ce5cf4bb1e80/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8_m-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8_m-1.c?ref=a2da134248bbfa0cdaf196e4c859ce5cf4bb1e80", "patch": "@@ -0,0 +1,34 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint64m1_t test___riscv_vzext_vf8_u64m1_m(vbool64_t mask,vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_u64m1_m(mask,op1,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf8_u64m2_m(vbool32_t mask,vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_u64m2_m(mask,op1,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf8_u64m4_m(vbool16_t mask,vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_u64m4_m(mask,op1,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf8_u64m8_m(vbool8_t mask,vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_u64m8_m(mask,op1,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "d93cf35f876b933bab66f01ead46d1254fb3bb58", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vzext_vf8_m-2.c", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2da134248bbfa0cdaf196e4c859ce5cf4bb1e80/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8_m-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2da134248bbfa0cdaf196e4c859ce5cf4bb1e80/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8_m-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8_m-2.c?ref=a2da134248bbfa0cdaf196e4c859ce5cf4bb1e80", "patch": "@@ -0,0 +1,34 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint64m1_t test___riscv_vzext_vf8_u64m1_m(vbool64_t mask,vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_u64m1_m(mask,op1,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf8_u64m2_m(vbool32_t mask,vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_u64m2_m(mask,op1,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf8_u64m4_m(vbool16_t mask,vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_u64m4_m(mask,op1,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf8_u64m8_m(vbool8_t mask,vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_u64m8_m(mask,op1,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "4e0be75405b4012f616feab4c6d745dc58f91340", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vzext_vf8_m-3.c", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2da134248bbfa0cdaf196e4c859ce5cf4bb1e80/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8_m-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2da134248bbfa0cdaf196e4c859ce5cf4bb1e80/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8_m-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8_m-3.c?ref=a2da134248bbfa0cdaf196e4c859ce5cf4bb1e80", "patch": "@@ -0,0 +1,34 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint64m1_t test___riscv_vzext_vf8_u64m1_m(vbool64_t mask,vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_u64m1_m(mask,op1,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf8_u64m2_m(vbool32_t mask,vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_u64m2_m(mask,op1,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf8_u64m4_m(vbool16_t mask,vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_u64m4_m(mask,op1,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf8_u64m8_m(vbool8_t mask,vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_u64m8_m(mask,op1,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "320371062f99540fae095f44ba804c521a5389ec", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vzext_vf8_mu-1.c", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2da134248bbfa0cdaf196e4c859ce5cf4bb1e80/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8_mu-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2da134248bbfa0cdaf196e4c859ce5cf4bb1e80/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8_mu-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8_mu-1.c?ref=a2da134248bbfa0cdaf196e4c859ce5cf4bb1e80", "patch": "@@ -0,0 +1,34 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint64m1_t test___riscv_vzext_vf8_u64m1_mu(vbool64_t mask,vuint64m1_t merge,vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_u64m1_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf8_u64m2_mu(vbool32_t mask,vuint64m2_t merge,vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_u64m2_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf8_u64m4_mu(vbool16_t mask,vuint64m4_t merge,vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_u64m4_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf8_u64m8_mu(vbool8_t mask,vuint64m8_t merge,vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_u64m8_mu(mask,merge,op1,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*mu\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*mu\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*mu\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*mu\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "83af580e66f55f1ddbb18566faaf46aad21e17ce", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vzext_vf8_mu-2.c", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2da134248bbfa0cdaf196e4c859ce5cf4bb1e80/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8_mu-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2da134248bbfa0cdaf196e4c859ce5cf4bb1e80/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8_mu-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8_mu-2.c?ref=a2da134248bbfa0cdaf196e4c859ce5cf4bb1e80", "patch": "@@ -0,0 +1,34 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint64m1_t test___riscv_vzext_vf8_u64m1_mu(vbool64_t mask,vuint64m1_t merge,vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_u64m1_mu(mask,merge,op1,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf8_u64m2_mu(vbool32_t mask,vuint64m2_t merge,vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_u64m2_mu(mask,merge,op1,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf8_u64m4_mu(vbool16_t mask,vuint64m4_t merge,vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_u64m4_mu(mask,merge,op1,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf8_u64m8_mu(vbool8_t mask,vuint64m8_t merge,vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_u64m8_mu(mask,merge,op1,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*t[au],\\s*mu\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*t[au],\\s*mu\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*t[au],\\s*mu\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*t[au],\\s*mu\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "44a41981de34c98d807476c886305acf2b21bc8b", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vzext_vf8_mu-3.c", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2da134248bbfa0cdaf196e4c859ce5cf4bb1e80/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8_mu-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2da134248bbfa0cdaf196e4c859ce5cf4bb1e80/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8_mu-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8_mu-3.c?ref=a2da134248bbfa0cdaf196e4c859ce5cf4bb1e80", "patch": "@@ -0,0 +1,34 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint64m1_t test___riscv_vzext_vf8_u64m1_mu(vbool64_t mask,vuint64m1_t merge,vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_u64m1_mu(mask,merge,op1,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf8_u64m2_mu(vbool32_t mask,vuint64m2_t merge,vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_u64m2_mu(mask,merge,op1,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf8_u64m4_mu(vbool16_t mask,vuint64m4_t merge,vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_u64m4_mu(mask,merge,op1,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf8_u64m8_mu(vbool8_t mask,vuint64m8_t merge,vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_u64m8_mu(mask,merge,op1,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*mu\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*mu\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*mu\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*mu\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "35bd01227ccd832cbace049623f0b06918db4322", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vzext_vf8_tu-1.c", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2da134248bbfa0cdaf196e4c859ce5cf4bb1e80/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8_tu-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2da134248bbfa0cdaf196e4c859ce5cf4bb1e80/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8_tu-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8_tu-1.c?ref=a2da134248bbfa0cdaf196e4c859ce5cf4bb1e80", "patch": "@@ -0,0 +1,34 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint64m1_t test___riscv_vzext_vf8_u64m1_tu(vuint64m1_t merge,vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_u64m1_tu(merge,op1,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf8_u64m2_tu(vuint64m2_t merge,vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_u64m2_tu(merge,op1,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf8_u64m4_tu(vuint64m4_t merge,vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_u64m4_tu(merge,op1,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf8_u64m8_tu(vuint64m8_t merge,vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_u64m8_tu(merge,op1,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */"}, {"sha": "7610fcdcb207c5d7518a4b113ad58d6cb5ce220a", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vzext_vf8_tu-2.c", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2da134248bbfa0cdaf196e4c859ce5cf4bb1e80/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8_tu-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2da134248bbfa0cdaf196e4c859ce5cf4bb1e80/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8_tu-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8_tu-2.c?ref=a2da134248bbfa0cdaf196e4c859ce5cf4bb1e80", "patch": "@@ -0,0 +1,34 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint64m1_t test___riscv_vzext_vf8_u64m1_tu(vuint64m1_t merge,vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_u64m1_tu(merge,op1,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf8_u64m2_tu(vuint64m2_t merge,vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_u64m2_tu(merge,op1,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf8_u64m4_tu(vuint64m4_t merge,vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_u64m4_tu(merge,op1,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf8_u64m8_tu(vuint64m8_t merge,vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_u64m8_tu(merge,op1,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */"}, {"sha": "705f073874d3ee25e25f8f36626f1875e19a1e94", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vzext_vf8_tu-3.c", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2da134248bbfa0cdaf196e4c859ce5cf4bb1e80/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8_tu-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2da134248bbfa0cdaf196e4c859ce5cf4bb1e80/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8_tu-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8_tu-3.c?ref=a2da134248bbfa0cdaf196e4c859ce5cf4bb1e80", "patch": "@@ -0,0 +1,34 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint64m1_t test___riscv_vzext_vf8_u64m1_tu(vuint64m1_t merge,vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_u64m1_tu(merge,op1,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf8_u64m2_tu(vuint64m2_t merge,vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_u64m2_tu(merge,op1,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf8_u64m4_tu(vuint64m4_t merge,vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_u64m4_tu(merge,op1,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf8_u64m8_tu(vuint64m8_t merge,vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_u64m8_tu(merge,op1,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */"}, {"sha": "553ea9443b69036fe3a27bf58db4ac5af2997122", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vzext_vf8_tum-1.c", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2da134248bbfa0cdaf196e4c859ce5cf4bb1e80/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8_tum-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2da134248bbfa0cdaf196e4c859ce5cf4bb1e80/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8_tum-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8_tum-1.c?ref=a2da134248bbfa0cdaf196e4c859ce5cf4bb1e80", "patch": "@@ -0,0 +1,34 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint64m1_t test___riscv_vzext_vf8_u64m1_tum(vbool64_t mask,vuint64m1_t merge,vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_u64m1_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf8_u64m2_tum(vbool32_t mask,vuint64m2_t merge,vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_u64m2_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf8_u64m4_tum(vbool16_t mask,vuint64m4_t merge,vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_u64m4_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf8_u64m8_tum(vbool8_t mask,vuint64m8_t merge,vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_u64m8_tum(mask,merge,op1,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "8f47c1cb7a64495b9534b8150ea49ad7e5201a81", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vzext_vf8_tum-2.c", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2da134248bbfa0cdaf196e4c859ce5cf4bb1e80/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8_tum-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2da134248bbfa0cdaf196e4c859ce5cf4bb1e80/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8_tum-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8_tum-2.c?ref=a2da134248bbfa0cdaf196e4c859ce5cf4bb1e80", "patch": "@@ -0,0 +1,34 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint64m1_t test___riscv_vzext_vf8_u64m1_tum(vbool64_t mask,vuint64m1_t merge,vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_u64m1_tum(mask,merge,op1,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf8_u64m2_tum(vbool32_t mask,vuint64m2_t merge,vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_u64m2_tum(mask,merge,op1,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf8_u64m4_tum(vbool16_t mask,vuint64m4_t merge,vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_u64m4_tum(mask,merge,op1,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf8_u64m8_tum(vbool8_t mask,vuint64m8_t merge,vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_u64m8_tum(mask,merge,op1,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "2c0d0cb10da34df243f9220c1577f89370535a22", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vzext_vf8_tum-3.c", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2da134248bbfa0cdaf196e4c859ce5cf4bb1e80/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8_tum-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2da134248bbfa0cdaf196e4c859ce5cf4bb1e80/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8_tum-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8_tum-3.c?ref=a2da134248bbfa0cdaf196e4c859ce5cf4bb1e80", "patch": "@@ -0,0 +1,34 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint64m1_t test___riscv_vzext_vf8_u64m1_tum(vbool64_t mask,vuint64m1_t merge,vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_u64m1_tum(mask,merge,op1,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf8_u64m2_tum(vbool32_t mask,vuint64m2_t merge,vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_u64m2_tum(mask,merge,op1,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf8_u64m4_tum(vbool16_t mask,vuint64m4_t merge,vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_u64m4_tum(mask,merge,op1,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf8_u64m8_tum(vbool8_t mask,vuint64m8_t merge,vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_u64m8_tum(mask,merge,op1,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "e9341cf0573d628310f2f4941bd72c61592ef1e7", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vzext_vf8_tumu-1.c", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2da134248bbfa0cdaf196e4c859ce5cf4bb1e80/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8_tumu-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2da134248bbfa0cdaf196e4c859ce5cf4bb1e80/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8_tumu-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8_tumu-1.c?ref=a2da134248bbfa0cdaf196e4c859ce5cf4bb1e80", "patch": "@@ -0,0 +1,34 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint64m1_t test___riscv_vzext_vf8_u64m1_tumu(vbool64_t mask,vuint64m1_t merge,vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_u64m1_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf8_u64m2_tumu(vbool32_t mask,vuint64m2_t merge,vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_u64m2_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf8_u64m4_tumu(vbool16_t mask,vuint64m4_t merge,vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_u64m4_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf8_u64m8_tumu(vbool8_t mask,vuint64m8_t merge,vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_u64m8_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*mu\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*mu\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*mu\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*mu\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "ac5dd0f55c15ba1b8c78551d432aa8988bc58dc9", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vzext_vf8_tumu-2.c", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2da134248bbfa0cdaf196e4c859ce5cf4bb1e80/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8_tumu-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2da134248bbfa0cdaf196e4c859ce5cf4bb1e80/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8_tumu-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8_tumu-2.c?ref=a2da134248bbfa0cdaf196e4c859ce5cf4bb1e80", "patch": "@@ -0,0 +1,34 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint64m1_t test___riscv_vzext_vf8_u64m1_tumu(vbool64_t mask,vuint64m1_t merge,vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_u64m1_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf8_u64m2_tumu(vbool32_t mask,vuint64m2_t merge,vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_u64m2_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf8_u64m4_tumu(vbool16_t mask,vuint64m4_t merge,vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_u64m4_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf8_u64m8_tumu(vbool8_t mask,vuint64m8_t merge,vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_u64m8_tumu(mask,merge,op1,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*tu,\\s*mu\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*tu,\\s*mu\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*tu,\\s*mu\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*tu,\\s*mu\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "fa6133ec9c4e46db0d449bfc1ca0d628bd327ac4", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vzext_vf8_tumu-3.c", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2da134248bbfa0cdaf196e4c859ce5cf4bb1e80/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8_tumu-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2da134248bbfa0cdaf196e4c859ce5cf4bb1e80/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8_tumu-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8_tumu-3.c?ref=a2da134248bbfa0cdaf196e4c859ce5cf4bb1e80", "patch": "@@ -0,0 +1,34 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint64m1_t test___riscv_vzext_vf8_u64m1_tumu(vbool64_t mask,vuint64m1_t merge,vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_u64m1_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf8_u64m2_tumu(vbool32_t mask,vuint64m2_t merge,vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_u64m2_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf8_u64m4_tumu(vbool16_t mask,vuint64m4_t merge,vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_u64m4_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf8_u64m8_tumu(vbool8_t mask,vuint64m8_t merge,vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_u64m8_tumu(mask,merge,op1,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*mu\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*mu\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*mu\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*mu\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}]}