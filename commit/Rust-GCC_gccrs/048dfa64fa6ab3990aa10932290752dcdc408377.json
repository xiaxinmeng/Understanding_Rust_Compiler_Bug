{"sha": "048dfa64fa6ab3990aa10932290752dcdc408377", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDQ4ZGZhNjRmYTZhYjM5OTBhYTEwOTMyMjkwNzUyZGNkYzQwODM3Nw==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-05-09T06:17:35Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-05-09T06:17:35Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r943", "tree": {"sha": "0f170c9104d6a179b472512af72e95a2d9139c27", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0f170c9104d6a179b472512af72e95a2d9139c27"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/048dfa64fa6ab3990aa10932290752dcdc408377", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/048dfa64fa6ab3990aa10932290752dcdc408377", "html_url": "https://github.com/Rust-GCC/gccrs/commit/048dfa64fa6ab3990aa10932290752dcdc408377", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/048dfa64fa6ab3990aa10932290752dcdc408377/comments", "author": null, "committer": null, "parents": [{"sha": "2c325bb8de77846b7d5dc5ff1994302a2577912d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c325bb8de77846b7d5dc5ff1994302a2577912d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c325bb8de77846b7d5dc5ff1994302a2577912d"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "8db6c514d226ed544dfd6c78a14041fb6b5c3488", "filename": "gcc/integrate.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/048dfa64fa6ab3990aa10932290752dcdc408377/gcc%2Fintegrate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/048dfa64fa6ab3990aa10932290752dcdc408377/gcc%2Fintegrate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fintegrate.c?ref=048dfa64fa6ab3990aa10932290752dcdc408377", "patch": "@@ -281,6 +281,8 @@ initialize_for_inline (fndecl, min_labelno, max_labelno, max_reg, copy)\n \n       if (GET_CODE (p) == REG)\n \tparmdecl_map[REGNO (p)] = parms;\n+      /* This flag is cleared later\n+\t if the function ever modifies the value of the parm.  */\n       TREE_READONLY (parms) = 1;\n     }\n "}]}