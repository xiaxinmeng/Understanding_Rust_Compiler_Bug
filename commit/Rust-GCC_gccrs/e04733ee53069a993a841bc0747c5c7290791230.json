{"sha": "e04733ee53069a993a841bc0747c5c7290791230", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTA0NzMzZWU1MzA2OWE5OTNhODQxYmMwNzQ3YzVjNzI5MDc5MTIzMA==", "commit": {"author": {"name": "Andi Kleen", "email": "ak@linux.intel.com", "date": "2014-09-01T16:41:28Z"}, "committer": {"name": "Andi Kleen", "email": "ak@gcc.gnu.org", "date": "2014-09-01T16:41:28Z"}, "message": "Support slim LTO bootstrap\n\nChange the bootstrap-lto config file to use slim (non fat) LTO..\nSpeeds up the LTO bootstrap by ~18% on a 4 core system.\n\nThis requires using gcc-ar/ranlib in post stage 1 builds, so these\nare passed to all sub builds.\n\nconfig/:\n\n2014-09-01  Andi Kleen  <ak@linux.intel.com>\n\n\t* bootstrap-lto.mk: Implement slim bootstrap.\n\n/:\n2014-09-01  Andi Kleen  <ak@linux.intel.com>\n\n\t* Makefile.tpl (POSTSTAGE1_HOST_EXPORTS): Add LTO_EXPORTS.\n\tPOSTSTAGE1_FLAGS_TO_PASS):  Add LTO_FLAGS_TO_PASS.\n\t* Makefile.in: Regenerate.\n\nFrom-SVN: r214801", "tree": {"sha": "5101ad662599b9013f8ccaabee2c19dc2bf5ab54", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5101ad662599b9013f8ccaabee2c19dc2bf5ab54"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e04733ee53069a993a841bc0747c5c7290791230", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e04733ee53069a993a841bc0747c5c7290791230", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e04733ee53069a993a841bc0747c5c7290791230", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e04733ee53069a993a841bc0747c5c7290791230/comments", "author": null, "committer": null, "parents": [{"sha": "b5617e5f69bdd5ad7a3da9b34d1871fb2aff940a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5617e5f69bdd5ad7a3da9b34d1871fb2aff940a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5617e5f69bdd5ad7a3da9b34d1871fb2aff940a"}], "stats": {"total": 30, "additions": 25, "deletions": 5}, "files": [{"sha": "a0f8c221a51d0de4cc0757564ef1c041755062f1", "filename": "ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e04733ee53069a993a841bc0747c5c7290791230/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e04733ee53069a993a841bc0747c5c7290791230/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=e04733ee53069a993a841bc0747c5c7290791230", "patch": "@@ -1,3 +1,9 @@\n+2014-09-01  Andi Kleen  <ak@linux.intel.com>\n+\n+\t* Makefile.tpl (POSTSTAGE1_HOST_EXPORTS): Add LTO_EXPORTS.\n+\tPOSTSTAGE1_FLAGS_TO_PASS):  Add LTO_FLAGS_TO_PASS.\n+\t* Makefile.in: Regenerate.\n+\n 2014-08-28  David Malcolm  <dmalcolm@redhat.com>\n \n \t* rtx-classes-status.txt: Delete"}, {"sha": "d6105b34924f2b7d5fe0cdd005020d1c36339ba2", "filename": "Makefile.in", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e04733ee53069a993a841bc0747c5c7290791230/Makefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e04733ee53069a993a841bc0747c5c7290791230/Makefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.in?ref=e04733ee53069a993a841bc0747c5c7290791230", "patch": "@@ -257,6 +257,7 @@ POSTSTAGE1_HOST_EXPORTS = \\\n \t  $(XGCC_FLAGS_FOR_TARGET) $$TFLAGS\"; export CC; \\\n \tCC_FOR_BUILD=\"$$CC\"; export CC_FOR_BUILD; \\\n \t$(POSTSTAGE1_CXX_EXPORT) \\\n+\t$(LTO_EXPORTS) \\\n \tGNATBIND=\"$$r/$(HOST_SUBDIR)/prev-gcc/gnatbind\"; export GNATBIND; \\\n \tLDFLAGS=\"$(POSTSTAGE1_LDFLAGS) $(BOOT_LDFLAGS)\"; export LDFLAGS; \\\n \tHOST_LIBS=\"$(POSTSTAGE1_LIBS)\"; export HOST_LIBS;\n@@ -828,6 +829,7 @@ POSTSTAGE1_FLAGS_TO_PASS = \\\n \tGNATBIND=\"$${GNATBIND}\" \\\n \tLDFLAGS=\"$${LDFLAGS}\" \\\n \tHOST_LIBS=\"$${HOST_LIBS}\" \\\n+\t$(LTO_FLAGS_TO_PASS) \\\n \t\"`echo 'ADAFLAGS=$(BOOT_ADAFLAGS)' | sed -e s'/[^=][^=]*=$$/XFOO=/'`\"\n \n # Flags to pass down to makes which are built with the target environment."}, {"sha": "f7c7e38cddeb67b1563a9025c1dad7a57a95b4f5", "filename": "Makefile.tpl", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e04733ee53069a993a841bc0747c5c7290791230/Makefile.tpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e04733ee53069a993a841bc0747c5c7290791230/Makefile.tpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.tpl?ref=e04733ee53069a993a841bc0747c5c7290791230", "patch": "@@ -260,6 +260,7 @@ POSTSTAGE1_HOST_EXPORTS = \\\n \t  $(XGCC_FLAGS_FOR_TARGET) $$TFLAGS\"; export CC; \\\n \tCC_FOR_BUILD=\"$$CC\"; export CC_FOR_BUILD; \\\n \t$(POSTSTAGE1_CXX_EXPORT) \\\n+\t$(LTO_EXPORTS) \\\n \tGNATBIND=\"$$r/$(HOST_SUBDIR)/prev-gcc/gnatbind\"; export GNATBIND; \\\n \tLDFLAGS=\"$(POSTSTAGE1_LDFLAGS) $(BOOT_LDFLAGS)\"; export LDFLAGS; \\\n \tHOST_LIBS=\"$(POSTSTAGE1_LIBS)\"; export HOST_LIBS;\n@@ -633,6 +634,7 @@ POSTSTAGE1_FLAGS_TO_PASS = \\\n \tGNATBIND=\"$${GNATBIND}\" \\\n \tLDFLAGS=\"$${LDFLAGS}\" \\\n \tHOST_LIBS=\"$${HOST_LIBS}\" \\\n+\t$(LTO_FLAGS_TO_PASS) \\\n \t\"`echo 'ADAFLAGS=$(BOOT_ADAFLAGS)' | sed -e s'/[^=][^=]*=$$/XFOO=/'`\"\n \n # Flags to pass down to makes which are built with the target environment."}, {"sha": "a1653c6328a03986bbcc91ea4084e99b6b9d230f", "filename": "config/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e04733ee53069a993a841bc0747c5c7290791230/config%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e04733ee53069a993a841bc0747c5c7290791230/config%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2FChangeLog?ref=e04733ee53069a993a841bc0747c5c7290791230", "patch": "@@ -1,3 +1,7 @@\n+2014-09-01  Andi Kleen  <ak@linux.intel.com>\n+\n+\t* bootstrap-lto.mk: Implement slim bootstrap.\n+\n 2014-08-21  Bin Cheng  <bin.cheng@arm.com>\n \n \t* isl.m4 (ISL_CHECK_VERSION): Check link of isl library"}, {"sha": "9e065e1d85a09325c4332ad64202295b9f3e2fc0", "filename": "config/bootstrap-lto.mk", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e04733ee53069a993a841bc0747c5c7290791230/config%2Fbootstrap-lto.mk", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e04733ee53069a993a841bc0747c5c7290791230/config%2Fbootstrap-lto.mk", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Fbootstrap-lto.mk?ref=e04733ee53069a993a841bc0747c5c7290791230", "patch": "@@ -1,7 +1,13 @@\n-# This option enables LTO for stage2 and stage3.\n-# FIXME: Our build system is not yet able to use gcc-ar wrapper, so we need\n-# to go with -ffat-lto-objects. \n+# This option enables LTO for stage2 and stage3 in slim mode\n \n-STAGE2_CFLAGS += -flto=jobserver -frandom-seed=1 -ffat-lto-objects\n-STAGE3_CFLAGS += -flto=jobserver -frandom-seed=1 -ffat-lto-objects\n+STAGE2_CFLAGS += -flto=jobserver -frandom-seed=1\n+STAGE3_CFLAGS += -flto=jobserver -frandom-seed=1\n STAGEprofile_CFLAGS += -fno-lto\n+\n+# assumes the host supports the linker plugin\n+LTO_AR = $$r/$(HOST_SUBDIR)/prev-gcc/gcc-ar$(exeext) -B$$r/$(HOST_SUBDIR)/prev-gcc/\n+LTO_RANLIB = $$r/$(HOST_SUBDIR)/prev-gcc/gcc-ranlib$(exeext) -B$$r/$(HOST_SUBDIR)/prev-gcc/\n+\n+LTO_EXPORTS = AR=\"$(LTO_AR)\"; export AR; \\\n+\t      RANLIB=\"$(LTO_RANLIB)\"; export RANLIB;\n+LTO_FLAGS_TO_PASS = AR=\"$(LTO_AR)\" RANLIB=\"$(LTO_RANLIB)\""}]}