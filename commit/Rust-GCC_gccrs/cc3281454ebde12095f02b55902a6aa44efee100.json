{"sha": "cc3281454ebde12095f02b55902a6aa44efee100", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2MzMjgxNDU0ZWJkZTEyMDk1ZjAyYjU1OTAyYTZhYTQ0ZWZlZTEwMA==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2006-05-03T00:19:40Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2006-05-03T00:19:40Z"}, "message": "re PR c++/27102 (ICE with invalid class name in function template)\n\n\tPR c++/27102\n\t* decl.c (grokdeclarator): Robustify checks for defining members\n\tof incomplete types.\n\tPR c++/27102\n\t* g++.dg/template/crash49.C: New test.\n\nFrom-SVN: r113492", "tree": {"sha": "d52890f371966bbc7c877ce570e317a009e69c06", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d52890f371966bbc7c877ce570e317a009e69c06"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cc3281454ebde12095f02b55902a6aa44efee100", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc3281454ebde12095f02b55902a6aa44efee100", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc3281454ebde12095f02b55902a6aa44efee100", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc3281454ebde12095f02b55902a6aa44efee100/comments", "author": null, "committer": null, "parents": [{"sha": "db40f6d4a1a19e3337e1ef87ae3edcdd2610072f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db40f6d4a1a19e3337e1ef87ae3edcdd2610072f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db40f6d4a1a19e3337e1ef87ae3edcdd2610072f"}], "stats": {"total": 32, "additions": 26, "deletions": 6}, "files": [{"sha": "1b8438cb03efdde10d791df2251c9489f8093209", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc3281454ebde12095f02b55902a6aa44efee100/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc3281454ebde12095f02b55902a6aa44efee100/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=cc3281454ebde12095f02b55902a6aa44efee100", "patch": "@@ -1,5 +1,9 @@\n 2006-05-02  Mark Mitchell  <mark@codesourcery.com>\n \n+\tPR c++/27102\n+\t* decl.c (grokdeclarator): Robustify checks for defining members\n+\tof incomplete types.\n+\n \tPR c++/27309\n \t* class.c (add_method): Call grok_special_member_properties.\n \t* decl.c (grokdeclarator): Don't call it here."}, {"sha": "057c1fb51691f43e4abeb3aaa1392e41e6fa7c3d", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 13, "deletions": 6, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc3281454ebde12095f02b55902a6aa44efee100/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc3281454ebde12095f02b55902a6aa44efee100/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=cc3281454ebde12095f02b55902a6aa44efee100", "patch": "@@ -7722,12 +7722,19 @@ grokdeclarator (const cp_declarator *declarator,\n       else if (/* If the qualifying type is already complete, then we\n \t\t  can skip the following checks.  */\n \t       !COMPLETE_TYPE_P (ctype)\n-\t       /* If a function is being defined, then the qualifying\n-\t\t  type must be complete.  The qualifying type may be\n-\t\t  incomplete for a declaration only if the qualifying\n-\t\t  type is one of the classes presently being defined,\n-\t\t  or if it is a dependent type.  */\n-\t       && (funcdef_flag \n+\t       && (/* If the function is being defined, then\n+\t\t      qualifying type must certainly be complete.  */\n+\t\t   funcdef_flag \n+\t\t   /* A friend declaration of \"T::f\" is OK, even if\n+\t\t      \"T\" is a template parameter.  But, if this\n+\t\t      function is not a friend, the qualifying type\n+\t\t      must be a class.  */\n+\t\t   || (!friendp && !CLASS_TYPE_P (ctype))\n+\t\t   /* For a declaration, the type need not be\n+\t\t      complete, if either it is dependent (since there\n+\t\t      is no meaningful definition of complete in that\n+\t\t      case) or the qualifying class is currently being\n+\t\t      defined.  */\n \t\t   || !(dependent_type_p (ctype)\n \t\t\t|| currently_open_class (ctype)))\n \t       /* Check that the qualifying type is complete.  */"}, {"sha": "a439ad29fd64c2a9fa54d3556f0106f9b3690fbb", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc3281454ebde12095f02b55902a6aa44efee100/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc3281454ebde12095f02b55902a6aa44efee100/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cc3281454ebde12095f02b55902a6aa44efee100", "patch": "@@ -1,3 +1,8 @@\n+2006-05-02  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/27102\n+\t* g++.dg/template/crash49.C: New test.\n+\n 2006-05-02  Steve Ellcey  <sje@cup.hp.com>\n \n \tPR testsuite/27032"}, {"sha": "41fc9be7b22b1377bdd5ee279aada39debe82e92", "filename": "gcc/testsuite/g++.dg/template/crash49.C", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc3281454ebde12095f02b55902a6aa44efee100/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash49.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc3281454ebde12095f02b55902a6aa44efee100/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash49.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash49.C?ref=cc3281454ebde12095f02b55902a6aa44efee100", "patch": "@@ -0,0 +1,4 @@\n+// PR c++/27102\n+\n+template <typename T>\n+void T::foo; // { dg-error \"invalid\" }"}]}