{"sha": "91d0e8dec9e589701e681ec4357e054fd658c2bb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTFkMGU4ZGVjOWU1ODk3MDFlNjgxZWM0MzU3ZTA1NGZkNjU4YzJiYg==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2015-08-04T10:45:48Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2015-08-04T10:45:48Z"}, "message": "[AArch64][14/14] Reuse target_option_current_node when passing pragma string to target attribute\n\n\t* config/aarch64/aarch64.c (aarch64_option_valid_attribute_p):\n\tExit early and use target_option_current_node if processing current\n\tpragma.\n\nFrom-SVN: r226567", "tree": {"sha": "9473e9bef2a6c5ba5a6db220edb6b790866c6675", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9473e9bef2a6c5ba5a6db220edb6b790866c6675"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/91d0e8dec9e589701e681ec4357e054fd658c2bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91d0e8dec9e589701e681ec4357e054fd658c2bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91d0e8dec9e589701e681ec4357e054fd658c2bb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91d0e8dec9e589701e681ec4357e054fd658c2bb/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e55edd82da9252f80615fa0912db13fbe295360d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e55edd82da9252f80615fa0912db13fbe295360d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e55edd82da9252f80615fa0912db13fbe295360d"}], "stats": {"total": 18, "additions": 18, "deletions": 0}, "files": [{"sha": "a76cf0380b5707c559311e88b1de4ec4b9c4e0b5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91d0e8dec9e589701e681ec4357e054fd658c2bb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91d0e8dec9e589701e681ec4357e054fd658c2bb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=91d0e8dec9e589701e681ec4357e054fd658c2bb", "patch": "@@ -1,3 +1,9 @@\n+2015-08-04  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* config/aarch64/aarch64.c (aarch64_option_valid_attribute_p):\n+\tExit early and use target_option_current_node if processing current\n+\tpragma.\n+\n 2015-08-04  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* doc/extend.texi (AArch64 Function Attributes): New node."}, {"sha": "ad6c330b75e5bd1987c0ffbaa4f4d223b6755cac", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91d0e8dec9e589701e681ec4357e054fd658c2bb/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91d0e8dec9e589701e681ec4357e054fd658c2bb/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=91d0e8dec9e589701e681ec4357e054fd658c2bb", "patch": "@@ -8414,6 +8414,18 @@ aarch64_option_valid_attribute_p (tree fndecl, tree, tree args, int)\n   tree old_optimize;\n   tree new_target, new_optimize;\n   tree existing_target = DECL_FUNCTION_SPECIFIC_TARGET (fndecl);\n+\n+  /* If what we're processing is the current pragma string then the\n+     target option node is already stored in target_option_current_node\n+     by aarch64_pragma_target_parse in aarch64-c.c.  Use that to avoid\n+     having to re-parse the string.  This is especially useful to keep\n+     arm_neon.h compile times down since that header contains a lot\n+     of intrinsics enclosed in pragmas.  */\n+  if (!existing_target && args == current_target_pragma)\n+    {\n+      DECL_FUNCTION_SPECIFIC_TARGET (fndecl) = target_option_current_node;\n+      return true;\n+    }\n   tree func_optimize = DECL_FUNCTION_SPECIFIC_OPTIMIZATION (fndecl);\n \n   old_optimize = build_optimization_node (&global_options);"}]}