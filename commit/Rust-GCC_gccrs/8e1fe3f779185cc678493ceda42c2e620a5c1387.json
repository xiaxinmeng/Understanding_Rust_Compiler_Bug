{"sha": "8e1fe3f779185cc678493ceda42c2e620a5c1387", "node_id": "C_kwDOANBUbNoAKDhlMWZlM2Y3NzkxODVjYzY3ODQ5M2NlZGE0MmMyZTYyMGE1YzEzODc", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-10-12T07:37:25Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-10-12T07:37:25Z"}, "message": "openmp: Avoid calling clear_type_padding_in_mask in the common case where there can't be any padding\n\nWe can use the clear_padding_type_may_have_padding_p function, which\nis conservative for e.g. RECORD_TYPE/UNION_TYPE, but for the floating and\ncomplex floating types is accurate.  clear_type_padding_in_mask is\nmore expensive because we need to allocate memory, fill it, call the function\nwhich itself is more expensive and then analyze the memory, so for the\ncommon case of float/double atomics or even long double on most targets\nwe can avoid that.\n\n2021-10-12  Jakub Jelinek  <jakub@redhat.com>\n\ngcc/\n\t* gimple-fold.h (clear_padding_type_may_have_padding_p): Declare.\n\t* gimple-fold.c (clear_padding_type_may_have_padding_p): No longer\n\tstatic.\ngcc/c-family/\n\t* c-omp.c (c_finish_omp_atomic): Use\n\tclear_padding_type_may_have_padding_p.", "tree": {"sha": "bc1d031d537edf06f7ab8513fb465143f9b32cb5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bc1d031d537edf06f7ab8513fb465143f9b32cb5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8e1fe3f779185cc678493ceda42c2e620a5c1387", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e1fe3f779185cc678493ceda42c2e620a5c1387", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e1fe3f779185cc678493ceda42c2e620a5c1387", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e1fe3f779185cc678493ceda42c2e620a5c1387/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4096bf82a0cda5f79d7e5921b73897f76e00a800", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4096bf82a0cda5f79d7e5921b73897f76e00a800", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4096bf82a0cda5f79d7e5921b73897f76e00a800"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "b9024cb15a9123533dbd29c15a26774076e17a6a", "filename": "gcc/c-family/c-omp.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e1fe3f779185cc678493ceda42c2e620a5c1387/gcc%2Fc-family%2Fc-omp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e1fe3f779185cc678493ceda42c2e620a5c1387/gcc%2Fc-family%2Fc-omp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-omp.c?ref=8e1fe3f779185cc678493ceda42c2e620a5c1387", "patch": "@@ -381,7 +381,9 @@ c_finish_omp_atomic (location_t loc, enum tree_code code,\n \t  bool clear_padding = false;\n \t  HOST_WIDE_INT non_padding_start = 0;\n \t  HOST_WIDE_INT non_padding_end = 0;\n-\t  if (BITS_PER_UNIT == 8 && CHAR_BIT == 8)\n+\t  if (BITS_PER_UNIT == 8\n+\t      && CHAR_BIT == 8\n+\t      && clear_padding_type_may_have_padding_p (cmptype))\n \t    {\n \t      HOST_WIDE_INT sz = int_size_in_bytes (cmptype), i;\n \t      gcc_assert (sz > 0);"}, {"sha": "7fcfef41f7229f92830201c350cf82b861cbbcac", "filename": "gcc/gimple-fold.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e1fe3f779185cc678493ceda42c2e620a5c1387/gcc%2Fgimple-fold.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e1fe3f779185cc678493ceda42c2e620a5c1387/gcc%2Fgimple-fold.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-fold.c?ref=8e1fe3f779185cc678493ceda42c2e620a5c1387", "patch": "@@ -4632,7 +4632,7 @@ clear_padding_real_needs_padding_p (tree type)\n \n /* Return true if TYPE might contain any padding bits.  */\n \n-static bool\n+bool\n clear_padding_type_may_have_padding_p (tree type)\n {\n   switch (TREE_CODE (type))"}, {"sha": "397f4aeb7cfe5c87176ec9f3dd32fea611595e81", "filename": "gcc/gimple-fold.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e1fe3f779185cc678493ceda42c2e620a5c1387/gcc%2Fgimple-fold.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e1fe3f779185cc678493ceda42c2e620a5c1387/gcc%2Fgimple-fold.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-fold.h?ref=8e1fe3f779185cc678493ceda42c2e620a5c1387", "patch": "@@ -36,6 +36,7 @@ extern tree maybe_fold_and_comparisons (tree, enum tree_code, tree, tree,\n \t\t\t\t\tenum tree_code, tree, tree);\n extern tree maybe_fold_or_comparisons (tree, enum tree_code, tree, tree,\n \t\t\t\t       enum tree_code, tree, tree);\n+extern bool clear_padding_type_may_have_padding_p (tree);\n extern void clear_type_padding_in_mask (tree, unsigned char *);\n extern bool optimize_atomic_compare_exchange_p (gimple *);\n extern void fold_builtin_atomic_compare_exchange (gimple_stmt_iterator *);"}]}