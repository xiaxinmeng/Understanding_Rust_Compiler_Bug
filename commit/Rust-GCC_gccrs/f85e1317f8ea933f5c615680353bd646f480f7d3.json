{"sha": "f85e1317f8ea933f5c615680353bd646f480f7d3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjg1ZTEzMTdmOGVhOTMzZjVjNjE1NjgwMzUzYmQ2NDZmNDgwZjdkMw==", "commit": {"author": {"name": "Patrick Palka", "email": "ppalka@gcc.gnu.org", "date": "2015-12-17T04:01:47Z"}, "committer": {"name": "Patrick Palka", "email": "ppalka@gcc.gnu.org", "date": "2015-12-17T04:01:47Z"}, "message": "Fix some blockers of PR c++/24666 (arrays decay to pointers too early)\n\ngcc/cp/ChangeLog:\n\n\tPR c++/16333\n\tPR c++/41426\n\tPR c++/59878\n\tPR c++/66895\n\t* typeck.c (convert_for_initialization): Don't perform an early\n\tdecaying conversion if converting to a class type.\n\ngcc/testsuite/ChangeLog:\n\n\tPR c++/16333\n\tPR c++/41426\n\tPR c++/59878\n\tPR c++/66895\n\t* g++.dg/conversion/pr16333.C: New test.\n\t* g++.dg/conversion/pr41426.C: New test.\n\t* g++.dg/conversion/pr59878.C: New test.\n\t* g++.dg/conversion/pr66895.C: New test.\n\nFrom-SVN: r231736", "tree": {"sha": "5e30c38f716a0c0974f3789b148f2648e1ce888e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5e30c38f716a0c0974f3789b148f2648e1ce888e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f85e1317f8ea933f5c615680353bd646f480f7d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f85e1317f8ea933f5c615680353bd646f480f7d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f85e1317f8ea933f5c615680353bd646f480f7d3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f85e1317f8ea933f5c615680353bd646f480f7d3/comments", "author": null, "committer": null, "parents": [{"sha": "5fdfa03e795034058a66f641eb9d1f4499052639", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5fdfa03e795034058a66f641eb9d1f4499052639", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5fdfa03e795034058a66f641eb9d1f4499052639"}], "stats": {"total": 127, "additions": 120, "deletions": 7}, "files": [{"sha": "14292e9fab350cd6ec26c2665e2956eed59adaa0", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f85e1317f8ea933f5c615680353bd646f480f7d3/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f85e1317f8ea933f5c615680353bd646f480f7d3/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=f85e1317f8ea933f5c615680353bd646f480f7d3", "patch": "@@ -1,3 +1,12 @@\n+2015-12-16  Patrick Palka  <ppalka@gcc.gnu.org>\n+\n+\tPR c++/16333\n+\tPR c++/41426\n+\tPR c++/59878\n+\tPR c++/66895\n+\t* typeck.c (convert_for_initialization): Don't perform an early\n+\tdecaying conversion if converting to a class type.\n+\n 2015-12-16  Patrick Palka  <ppalka@gcc.gnu.org>\n \n \t* tree.c (cp_tree_operand_length): Define in terms of"}, {"sha": "a06ecf0732a38ae699aae454bfd8c7b21fa2781c", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f85e1317f8ea933f5c615680353bd646f480f7d3/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f85e1317f8ea933f5c615680353bd646f480f7d3/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=f85e1317f8ea933f5c615680353bd646f480f7d3", "patch": "@@ -8479,13 +8479,15 @@ convert_for_initialization (tree exp, tree type, tree rhs, int flags,\n       || (TREE_CODE (rhs) == TREE_LIST && TREE_VALUE (rhs) == error_mark_node))\n     return error_mark_node;\n \n-  if ((TREE_CODE (TREE_TYPE (rhs)) == ARRAY_TYPE\n-       && TREE_CODE (type) != ARRAY_TYPE\n-       && (TREE_CODE (type) != REFERENCE_TYPE\n-\t   || TREE_CODE (TREE_TYPE (type)) != ARRAY_TYPE))\n-      || (TREE_CODE (TREE_TYPE (rhs)) == FUNCTION_TYPE\n-\t  && !TYPE_REFFN_P (type))\n-      || TREE_CODE (TREE_TYPE (rhs)) == METHOD_TYPE)\n+  if (MAYBE_CLASS_TYPE_P (non_reference (type)))\n+    ;\n+  else if ((TREE_CODE (TREE_TYPE (rhs)) == ARRAY_TYPE\n+\t    && TREE_CODE (type) != ARRAY_TYPE\n+\t    && (TREE_CODE (type) != REFERENCE_TYPE\n+\t\t|| TREE_CODE (TREE_TYPE (type)) != ARRAY_TYPE))\n+\t   || (TREE_CODE (TREE_TYPE (rhs)) == FUNCTION_TYPE\n+\t       && !TYPE_REFFN_P (type))\n+\t   || TREE_CODE (TREE_TYPE (rhs)) == METHOD_TYPE)\n     rhs = decay_conversion (rhs, complain);\n \n   rhstype = TREE_TYPE (rhs);"}, {"sha": "697fd0667b85b9b636ac3ae958f3accb3a8ef970", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f85e1317f8ea933f5c615680353bd646f480f7d3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f85e1317f8ea933f5c615680353bd646f480f7d3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f85e1317f8ea933f5c615680353bd646f480f7d3", "patch": "@@ -1,3 +1,14 @@\n+2015-12-16  Patrick Palka  <ppalka@gcc.gnu.org>\n+\n+\tPR c++/16333\n+\tPR c++/41426\n+\tPR c++/59878\n+\tPR c++/66895\n+\t* g++.dg/conversion/pr16333.C: New test.\n+\t* g++.dg/conversion/pr41426.C: New test.\n+\t* g++.dg/conversion/pr59878.C: New test.\n+\t* g++.dg/conversion/pr66895.C: New test.\n+\n 2015-12-16  Martin Sebor  <msebor@redhat.com>\n \n \tPR c/68868"}, {"sha": "810c12a9acb451953ec4548c4f4b7ecf0d186635", "filename": "gcc/testsuite/g++.dg/conversion/pr16333.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f85e1317f8ea933f5c615680353bd646f480f7d3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fpr16333.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f85e1317f8ea933f5c615680353bd646f480f7d3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fpr16333.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fpr16333.C?ref=f85e1317f8ea933f5c615680353bd646f480f7d3", "patch": "@@ -0,0 +1,10 @@\n+// PR c++/16333\n+\n+struct X {\n+   X (const int (&)[3]);\n+};\n+\n+int a[3];\n+X foo1 () { return a; }\n+const X &foo2 () { return a; } // { dg-warning \"returning reference to temporary\" }\n+X &foo3 () { return a; } // { dg-error \"invalid initialization\" }"}, {"sha": "78ec5fbdfbf54a25af6c2a98e61922a364137d31", "filename": "gcc/testsuite/g++.dg/conversion/pr41426.C", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f85e1317f8ea933f5c615680353bd646f480f7d3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fpr41426.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f85e1317f8ea933f5c615680353bd646f480f7d3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fpr41426.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fpr41426.C?ref=f85e1317f8ea933f5c615680353bd646f480f7d3", "patch": "@@ -0,0 +1,40 @@\n+// PR c++/41426\n+\n+template <typename _T>\n+struct A\n+{\n+   template <int _N>\n+       A(_T (&V)[_N]);\n+   A();\n+};\n+\n+A<float> g1()\n+{\n+   float f[] = {1.1f, 2.3f};\n+   return f;\n+}\n+\n+const A<float> &g3()\n+{\n+   float f[] = {1.1f, 2.3f};\n+   return f; // { dg-warning \"returning reference to temporary\" }\n+}\n+\n+A<float> &g4()\n+{\n+   float f[] = {1.1f, 2.3f};\n+   return f; // { dg-error \"invalid initialization\" }\n+}\n+\n+struct B\n+{\n+   B (int (&v)[10]);\n+   B();\n+};\n+\n+B g2()\n+{\n+   int c[10];\n+   return c;\n+}\n+"}, {"sha": "ed567fe6f24037f4ad7fab80e7c3830abb7bed61", "filename": "gcc/testsuite/g++.dg/conversion/pr59878.C", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f85e1317f8ea933f5c615680353bd646f480f7d3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fpr59878.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f85e1317f8ea933f5c615680353bd646f480f7d3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fpr59878.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fpr59878.C?ref=f85e1317f8ea933f5c615680353bd646f480f7d3", "patch": "@@ -0,0 +1,25 @@\n+// PR c++/59878\n+\n+struct Test {\n+ template <int N>\n+ Test(const char (&array)[N]) {}\n+};\n+\n+Test test() {\n+ return \"test1\";\n+}\n+\n+void test2(Test arg = \"test12\") {}\n+\n+template <typename T>\n+void test3(T arg = \"test123\") {}\n+\n+template <typename T>\n+void test4(const T &arg = \"test123\") {}\n+\n+int main() {\n+ test();\n+ test2();\n+ test3<Test>();\n+ test4<Test>();\n+}"}, {"sha": "14203bdab50beb931568c7b25bb0a4346c21c37f", "filename": "gcc/testsuite/g++.dg/conversion/pr66895.C", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f85e1317f8ea933f5c615680353bd646f480f7d3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fpr66895.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f85e1317f8ea933f5c615680353bd646f480f7d3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fpr66895.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fpr66895.C?ref=f85e1317f8ea933f5c615680353bd646f480f7d3", "patch": "@@ -0,0 +1,16 @@\n+// PR c++/66895\n+// { dg-do compile { target c++11 } }\n+\n+#include <cstddef>\n+#include <initializer_list>\n+\n+struct S {\n+    template<std::size_t N> S(char const (&)[N]);\n+};\n+struct T1 { S s; };\n+void f1(std::initializer_list<T1>);\n+void g1() { f1({{\"\"}}); }\n+\n+struct T2 { const S& s; };\n+void f2(std::initializer_list<T2>);\n+void g2() { f2({{\"\"}}); }"}]}