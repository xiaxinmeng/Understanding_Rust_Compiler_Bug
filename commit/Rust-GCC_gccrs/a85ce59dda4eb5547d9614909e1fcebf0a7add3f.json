{"sha": "a85ce59dda4eb5547d9614909e1fcebf0a7add3f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTg1Y2U1OWRkYTRlYjU1NDdkOTYxNDkwOWUxZmNlYmYwYTdhZGQzZg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2012-02-14T19:40:10Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2012-02-14T19:40:10Z"}, "message": "re PR debug/51950 (fdebug-types-section regression for member pointers)\n\n\tPR debug/51950\n\t* dwarf2out.c (clone_tree_hash): New function.\n\t(copy_decls_walk): Use it instead of clone_tree.\n\nFrom-SVN: r184224", "tree": {"sha": "e83d2f0949a0a43c2da5dcf2515535b1adb0b8b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e83d2f0949a0a43c2da5dcf2515535b1adb0b8b2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a85ce59dda4eb5547d9614909e1fcebf0a7add3f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a85ce59dda4eb5547d9614909e1fcebf0a7add3f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a85ce59dda4eb5547d9614909e1fcebf0a7add3f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a85ce59dda4eb5547d9614909e1fcebf0a7add3f/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "317ea7c0f44135b03b5dc1827532004ef86d72e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/317ea7c0f44135b03b5dc1827532004ef86d72e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/317ea7c0f44135b03b5dc1827532004ef86d72e0"}], "stats": {"total": 38, "additions": 37, "deletions": 1}, "files": [{"sha": "c5d2009fbb865997438e05087bdf066b8c664a91", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a85ce59dda4eb5547d9614909e1fcebf0a7add3f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a85ce59dda4eb5547d9614909e1fcebf0a7add3f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a85ce59dda4eb5547d9614909e1fcebf0a7add3f", "patch": "@@ -1,3 +1,9 @@\n+2012-02-14  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR debug/51950\n+\t* dwarf2out.c (clone_tree_hash): New function.\n+\t(copy_decls_walk): Use it instead of clone_tree.\n+\n 2012-02-14  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/52244"}, {"sha": "d6fbce6771cfd2f2324ed40d590db8f983072284", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 31, "deletions": 1, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a85ce59dda4eb5547d9614909e1fcebf0a7add3f/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a85ce59dda4eb5547d9614909e1fcebf0a7add3f/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=a85ce59dda4eb5547d9614909e1fcebf0a7add3f", "patch": "@@ -7407,6 +7407,32 @@ copy_ancestor_tree (dw_die_ref unit, dw_die_ref die, htab_t decl_table)\n   return copy;\n }\n \n+/* Like clone_tree, but additionally enter all the children into\n+   the hash table decl_table.  */\n+\n+static dw_die_ref\n+clone_tree_hash (dw_die_ref die, htab_t decl_table)\n+{\n+  dw_die_ref c;\n+  dw_die_ref clone = clone_die (die);\n+  struct decl_table_entry *entry;\n+  void **slot = htab_find_slot_with_hash (decl_table, die,\n+\t\t\t\t\t  htab_hash_pointer (die), INSERT);\n+  /* Assert that DIE isn't in the hash table yet.  If it would be there\n+     before, the ancestors would be necessarily there as well, therefore\n+     clone_tree_hash wouldn't be called.  */\n+  gcc_assert (*slot == HTAB_EMPTY_ENTRY);\n+  entry = XCNEW (struct decl_table_entry);\n+  entry->orig = die;\n+  entry->copy = clone;\n+  *slot = entry;\n+\n+  FOR_EACH_CHILD (die, c,\n+\t\t  add_child_die (clone, clone_tree_hash (c, decl_table)));\n+\n+  return clone;\n+}\n+\n /* Walk the DIE and its children, looking for references to incomplete\n    or trivial types that are unmarked (i.e., that are not in the current\n    type_unit).  */\n@@ -7443,7 +7469,11 @@ copy_decls_walk (dw_die_ref unit, dw_die_ref die, htab_t decl_table)\n           else\n             {\n               dw_die_ref parent = unit;\n-              dw_die_ref copy = clone_tree (targ);\n+\t      dw_die_ref copy = clone_die (targ);\n+\n+\t      FOR_EACH_CHILD (targ, c,\n+\t\t\t      add_child_die (copy,\n+\t\t\t\t\t     clone_tree_hash (c, decl_table)));\n \n               /* Make sure the cloned tree is marked as part of the\n                  type unit.  */"}]}