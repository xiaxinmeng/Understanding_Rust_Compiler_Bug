{"sha": "e73fb06d5a1386fe0a18285d52bcc7865a13a84c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTczZmIwNmQ1YTEzODZmZTBhMTgyODVkNTJiY2M3ODY1YTEzYTg0Yw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2019-06-21T06:46:45Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-06-21T06:46:45Z"}, "message": "re PR c++/90950 (OpenMP clause handling rejecting references to incomplete types in templates)\n\n\tPR c++/90950\n\t* semantics.c (finish_omp_clauses): Don't reject references to\n\tincomplete types if processing_template_decl.\n\n\t* g++.dg/gomp/lastprivate-1.C: New test.\n\nFrom-SVN: r272543", "tree": {"sha": "eed3d392ed4410bccece3a2a65b705805b6026db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eed3d392ed4410bccece3a2a65b705805b6026db"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e73fb06d5a1386fe0a18285d52bcc7865a13a84c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e73fb06d5a1386fe0a18285d52bcc7865a13a84c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e73fb06d5a1386fe0a18285d52bcc7865a13a84c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e73fb06d5a1386fe0a18285d52bcc7865a13a84c/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "080c269b61251983df2115b783f749216969d8c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/080c269b61251983df2115b783f749216969d8c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/080c269b61251983df2115b783f749216969d8c8"}], "stats": {"total": 28, "additions": 27, "deletions": 1}, "files": [{"sha": "c958318abe7209b15a8015c51e7c13ba80293755", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e73fb06d5a1386fe0a18285d52bcc7865a13a84c/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e73fb06d5a1386fe0a18285d52bcc7865a13a84c/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=e73fb06d5a1386fe0a18285d52bcc7865a13a84c", "patch": "@@ -1,3 +1,9 @@\n+2019-06-21  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/90950\n+\t* semantics.c (finish_omp_clauses): Don't reject references to\n+\tincomplete types if processing_template_decl.\n+\n 2019-06-19  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/60364 - noreturn after first decl not diagnosed."}, {"sha": "92c48753d429f6bf3c3aa90157623173014000d1", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e73fb06d5a1386fe0a18285d52bcc7865a13a84c/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e73fb06d5a1386fe0a18285d52bcc7865a13a84c/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=e73fb06d5a1386fe0a18285d52bcc7865a13a84c", "patch": "@@ -7831,7 +7831,8 @@ finish_omp_clauses (tree clauses, enum c_omp_region_type ort)\n \t  t = require_complete_type (t);\n \t  if (t == error_mark_node)\n \t    remove = true;\n-\t  else if (TYPE_REF_P (TREE_TYPE (t))\n+\t  else if (!processing_template_decl\n+\t\t   && TYPE_REF_P (TREE_TYPE (t))\n \t\t   && !complete_type_or_else (TREE_TYPE (TREE_TYPE (t)), t))\n \t    remove = true;\n \t}"}, {"sha": "ab8cc800dd5ebb85a2c7ca4dc8f0edeafa77cb02", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e73fb06d5a1386fe0a18285d52bcc7865a13a84c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e73fb06d5a1386fe0a18285d52bcc7865a13a84c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e73fb06d5a1386fe0a18285d52bcc7865a13a84c", "patch": "@@ -1,5 +1,8 @@\n 2019-06-21  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR c++/90950\n+\t* g++.dg/gomp/lastprivate-1.C: New test.\n+\n \t* gcc.dg/vect/vect-simd-11.c: New test.\n \t* gcc.target/i386/sse2-vect-simd-11.c: New test.\n \t* gcc.target/i386/avx2-vect-simd-11.c: New test."}, {"sha": "ce25e1a6b900b49496223145219ea5a6d9f3872c", "filename": "gcc/testsuite/g++.dg/gomp/lastprivate-1.C", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e73fb06d5a1386fe0a18285d52bcc7865a13a84c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Flastprivate-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e73fb06d5a1386fe0a18285d52bcc7865a13a84c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Flastprivate-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Flastprivate-1.C?ref=e73fb06d5a1386fe0a18285d52bcc7865a13a84c", "patch": "@@ -0,0 +1,16 @@\n+// PR c++/90950\n+// { dg-do compile }\n+\n+template <typename T>\n+T\n+foo (void)\n+{\n+  T y = 0;\n+  T &x = y;\n+  #pragma omp parallel for lastprivate (x)\n+  for (int i = 0; i < 8; ++i)\n+    x = i;\n+  return x;\n+}\n+\n+int a = foo<int> ();"}]}