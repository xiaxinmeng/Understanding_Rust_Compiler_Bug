{"sha": "5aae9091074b63bf1b8d4c504e7f226b45222287", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWFhZTkwOTEwNzRiNjNiZjFiOGQ0YzUwNGU3ZjIyNmI0NTIyMjI4Nw==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1996-06-22T00:39:43Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1996-06-22T00:39:43Z"}, "message": "(call_internal1, call_value_internal1): Delete obsolete code.\n\n(call_internal2, call_value_internal2, call_value_multiple_internal2):\nDelete obsolete code.  Explicitly load SYMBOL_REF into register.\n(call_value): Change Pmode to SImode in gen_call_value_internal0 call.\n\nFrom-SVN: r12323", "tree": {"sha": "2b29f65f4553230e2bd8454a02f4d825e9a30013", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2b29f65f4553230e2bd8454a02f4d825e9a30013"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5aae9091074b63bf1b8d4c504e7f226b45222287", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5aae9091074b63bf1b8d4c504e7f226b45222287", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5aae9091074b63bf1b8d4c504e7f226b45222287", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5aae9091074b63bf1b8d4c504e7f226b45222287/comments", "author": null, "committer": null, "parents": [{"sha": "e396202af1b78051fdadcb01af28e0300991466c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e396202af1b78051fdadcb01af28e0300991466c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e396202af1b78051fdadcb01af28e0300991466c"}], "stats": {"total": 92, "additions": 32, "deletions": 60}, "files": [{"sha": "06d57cc0459d56500fbbb20f1a34fd750c9d5983", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 32, "deletions": 60, "changes": 92, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5aae9091074b63bf1b8d4c504e7f226b45222287/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5aae9091074b63bf1b8d4c504e7f226b45222287/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=5aae9091074b63bf1b8d4c504e7f226b45222287", "patch": "@@ -6369,18 +6369,10 @@ move\\\\t%0,%z4\\\\n\\\\\n \n   if (GET_CODE (target) == SYMBOL_REF)\n     return \\\"%*jal\\\\t%0\\\";\n-\n   else if (GET_CODE (target) == CONST_INT)\n-    {\n-      operands[0] = target;\n-      return \\\"%[li\\\\t%@,%0\\\\n\\\\t%*jal\\\\t%2,%@%]\\\";\n-    }\n-\n+    return \\\"%[li\\\\t%@,%0\\\\n\\\\t%*jal\\\\t%2,%@%]\\\";\n   else\n-    {\n-      operands[0] = target;\n-      return \\\"%*jal\\\\t%2,%0\\\";\n-    }\n+    return \\\"%*jal\\\\t%2,%0\\\";\n }\"\n   [(set_attr \"type\"\t\"call\")\n    (set_attr \"mode\"\t\"none\")\n@@ -6396,22 +6388,18 @@ move\\\\t%0,%z4\\\\n\\\\\n   register rtx target = operands[0];\n \n   if (GET_CODE (target) == SYMBOL_REF)\n-    return \\\"jal\\\\t%0\\\";\n-\n-  else if (GET_CODE (target) == CONST_INT)\n-    {\n-      operands[0] = target;\n-      return \\\"li\\\\t%^,%0\\\\n\\\\tjal\\\\t%2,%^\\\";\n-    }\n-\n-  else\n     {\n-      operands[0] = target;\n-      if (REGNO (target) != PIC_FUNCTION_ADDR_REGNUM)\n-\treturn \\\"move\\\\t%^,%0\\\\n\\\\tjal\\\\t%2,%^\\\";\n+      if (GET_MODE (target) == SImode)\n+\treturn \\\"la\\\\t%^,%0\\\\n\\\\tjal\\\\t%2,%^\\\";\n       else\n-\treturn \\\"jal\\\\t%2,%0\\\";\n+\treturn \\\"dla\\\\t%^,%0\\\\n\\\\tjal\\\\t%2,%^\\\";\n     }\n+  else if (GET_CODE (target) == CONST_INT)\n+    return \\\"li\\\\t%^,%0\\\\n\\\\tjal\\\\t%2,%^\\\";\n+  else if (REGNO (target) != PIC_FUNCTION_ADDR_REGNUM)\n+    return \\\"move\\\\t%^,%0\\\\n\\\\tjal\\\\t%2,%^\\\";\n+  else\n+    return \\\"jal\\\\t%2,%0\\\";\n }\"\n   [(set_attr \"type\"\t\"call\")\n    (set_attr \"mode\"\t\"none\")\n@@ -6519,7 +6507,7 @@ move\\\\t%0,%z4\\\\n\\\\\n \t}\n \n       emit_call_insn (gen_call_value_internal0 (operands[0], operands[1], operands[2],\n-\t\t\t\t\t        gen_rtx (REG, Pmode, GP_REG_FIRST + 31)));\n+\t\t\t\t\t        gen_rtx (REG, SImode, GP_REG_FIRST + 31)));\n \n       DONE;\n     }\n@@ -6545,18 +6533,10 @@ move\\\\t%0,%z4\\\\n\\\\\n \n   if (GET_CODE (target) == SYMBOL_REF)\n     return \\\"%*jal\\\\t%1\\\";\n-\n   else if (GET_CODE (target) == CONST_INT)\n-    {\n-      operands[1] = target;\n-      return \\\"%[li\\\\t%@,%1\\\\n\\\\t%*jal\\\\t%3,%@%]\\\";\n-    }\n-\n+    return \\\"%[li\\\\t%@,%1\\\\n\\\\t%*jal\\\\t%3,%@%]\\\";\n   else\n-    {\n-      operands[1] = target;\n-      return \\\"%*jal\\\\t%3,%1\\\";\n-    }\n+    return \\\"%*jal\\\\t%3,%1\\\";\n }\"\n   [(set_attr \"type\"\t\"call\")\n    (set_attr \"mode\"\t\"none\")\n@@ -6573,22 +6553,18 @@ move\\\\t%0,%z4\\\\n\\\\\n   register rtx target = operands[1];\n \n   if (GET_CODE (target) == SYMBOL_REF)\n-    return \\\"jal\\\\t%1\\\";\n-\n-  else if (GET_CODE (target) == CONST_INT)\n-    {\n-      operands[1] = target;\n-      return \\\"li\\\\t%^,%1\\\\n\\\\tjal\\\\t%3,%^\\\";\n-    }\n-\n-  else\n     {\n-      operands[1] = target;\n-      if (REGNO (target) != PIC_FUNCTION_ADDR_REGNUM)\n-\treturn \\\"move\\\\t%^,%1\\\\n\\\\tjal\\\\t%3,%^\\\";\n+      if (GET_MODE (target) == SImode)\n+\treturn \\\"la\\\\t%^,%1\\\\n\\\\tjal\\\\t%3,%^\\\";\n       else\n-\treturn \\\"jal\\\\t%3,%1\\\";\n+\treturn \\\"dla\\\\t%^,%1\\\\n\\\\tjal\\\\t%3,%^\\\";\n     }\n+  else if (GET_CODE (target) == CONST_INT)\n+    return \\\"li\\\\t%^,%1\\\\n\\\\tjal\\\\t%3,%^\\\";\n+  else if (REGNO (target) != PIC_FUNCTION_ADDR_REGNUM)\n+    return \\\"move\\\\t%^,%1\\\\n\\\\tjal\\\\t%3,%^\\\";\n+  else\n+    return \\\"jal\\\\t%3,%1\\\";\n }\"\n   [(set_attr \"type\"\t\"call\")\n    (set_attr \"mode\"\t\"none\")\n@@ -6678,22 +6654,18 @@ move\\\\t%0,%z4\\\\n\\\\\n   register rtx target = operands[1];\n \n   if (GET_CODE (target) == SYMBOL_REF)\n-    return \\\"jal\\\\t%1\\\";\n-\n-  else if (GET_CODE (target) == CONST_INT)\n-    {\n-      operands[1] = target;\n-      return \\\"li\\\\t%^,%1\\\\n\\\\tjal\\\\t%4,%^\\\";\n-    }\n-\n-  else\n     {\n-      operands[1] = target;\n-      if (REGNO (target) != PIC_FUNCTION_ADDR_REGNUM)\n-\treturn \\\"move\\\\t%^,%1\\\\n\\\\tjal\\\\t%4,%^\\\";\n+      if (GET_MODE (target) == SImode)\n+\treturn \\\"la\\\\t%^,%1\\\\n\\\\tjal\\\\t%4,%^\\\";\n       else\n-\treturn \\\"jal\\\\t%4,%1\\\";\n+\treturn \\\"la\\\\t%^,%1\\\\n\\\\tjal\\\\t%4,%^\\\";\n     }\n+  else if (GET_CODE (target) == CONST_INT)\n+    return \\\"li\\\\t%^,%1\\\\n\\\\tjal\\\\t%4,%^\\\";\n+  else if (REGNO (target) != PIC_FUNCTION_ADDR_REGNUM)\n+    return \\\"move\\\\t%^,%1\\\\n\\\\tjal\\\\t%4,%^\\\";\n+  else\n+    return \\\"jal\\\\t%4,%1\\\";\n }\"\n   [(set_attr \"type\"\t\"call\")\n    (set_attr \"mode\"\t\"none\")"}]}