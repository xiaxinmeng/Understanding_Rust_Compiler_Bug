{"sha": "39521a94f844f6c6462b4b7849e7f1e2780be6fa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mzk1MjFhOTRmODQ0ZjZjNjQ2MmI0Yjc4NDllN2YxZTI3ODBiZTZmYQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-08-01T10:06:44Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-08-01T10:06:44Z"}, "message": "[multiple changes]\n\n2014-08-01  Yannick Moy  <moy@adacore.com>\n\n\t* inline.adb (Cannot_Inline): Issue info message instead of\n\twarning for subprograms not inlined in GNATprove mode.\n\t* sem_res.adb (Resolve_Call): Take body into account for deciding\n\twhether subprogram can be inlined in GNATprove mode or not.\n\n2014-08-01  Claire Dross  <dross@adacore.com>\n\n\t* exp_util.ads (Get_First_Parent_With_Ext_Axioms_For_Entity): Renaming\n\tof Get_First_Parent_With_External_Axiomatization_For_Entity for\n\tshorter.\n\t* sem_ch12.adb (Analyze_Associations): Only call Build_Wrapper\n\tfor parameters of packages with external axiomatization.\n\nFrom-SVN: r213443", "tree": {"sha": "ca4a53080ce020fa8abbb8fc3d5044f4955a0102", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ca4a53080ce020fa8abbb8fc3d5044f4955a0102"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/39521a94f844f6c6462b4b7849e7f1e2780be6fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39521a94f844f6c6462b4b7849e7f1e2780be6fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39521a94f844f6c6462b4b7849e7f1e2780be6fa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39521a94f844f6c6462b4b7849e7f1e2780be6fa/comments", "author": null, "committer": null, "parents": [{"sha": "b98a872b2227a0a075cce2549db7bb415fe6e083", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b98a872b2227a0a075cce2549db7bb415fe6e083", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b98a872b2227a0a075cce2549db7bb415fe6e083"}], "stats": {"total": 54, "additions": 38, "deletions": 16}, "files": [{"sha": "88c0e79103d0eb19079925bd3a069cf9d8daac97", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39521a94f844f6c6462b4b7849e7f1e2780be6fa/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39521a94f844f6c6462b4b7849e7f1e2780be6fa/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=39521a94f844f6c6462b4b7849e7f1e2780be6fa", "patch": "@@ -1,3 +1,18 @@\n+2014-08-01  Yannick Moy  <moy@adacore.com>\n+\n+\t* inline.adb (Cannot_Inline): Issue info message instead of\n+\twarning for subprograms not inlined in GNATprove mode.\n+\t* sem_res.adb (Resolve_Call): Take body into account for deciding\n+\twhether subprogram can be inlined in GNATprove mode or not.\n+\n+2014-08-01  Claire Dross  <dross@adacore.com>\n+\n+\t* exp_util.ads (Get_First_Parent_With_Ext_Axioms_For_Entity): Renaming\n+\tof Get_First_Parent_With_External_Axiomatization_For_Entity for\n+\tshorter.\n+\t* sem_ch12.adb (Analyze_Associations): Only call Build_Wrapper\n+\tfor parameters of packages with external axiomatization.\n+\n 2014-08-01  Robert Dewar  <dewar@adacore.com>\n \n \t* sem_res.adb: Minor comment addition."}, {"sha": "235951ebca3229f8b82466819e3a80f92a8221d1", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39521a94f844f6c6462b4b7849e7f1e2780be6fa/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39521a94f844f6c6462b4b7849e7f1e2780be6fa/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=39521a94f844f6c6462b4b7849e7f1e2780be6fa", "patch": "@@ -3228,11 +3228,11 @@ package body Exp_Util is\n       end;\n    end Get_Current_Value_Condition;\n \n-   --------------------------------------------------------------\n-   -- Get_First_Parent_With_External_Axiomatization_For_Entity --\n-   --------------------------------------------------------------\n+   -------------------------------------------------\n+   -- Get_First_Parent_With_Ext_Axioms_For_Entity --\n+   -------------------------------------------------\n \n-   function Get_First_Parent_With_External_Axiomatization_For_Entity\n+   function Get_First_Parent_With_Ext_Axioms_For_Entity\n      (E : Entity_Id) return Entity_Id is\n \n       Decl : Node_Id;\n@@ -3259,21 +3259,21 @@ package body Exp_Util is\n       elsif Ekind (E) = E_Package\n         and then Present (Generic_Parent (Decl))\n       then\n-         return Get_First_Parent_With_External_Axiomatization_For_Entity\n+         return Get_First_Parent_With_Ext_Axioms_For_Entity\n            (Generic_Parent (Decl));\n \n          --  Otherwise, look at E's scope instead if present\n \n       elsif Present (Scope (E)) then\n-         return Get_First_Parent_With_External_Axiomatization_For_Entity\n+         return Get_First_Parent_With_Ext_Axioms_For_Entity\n              (Scope (E));\n \n          --  Else there is no such axiomatized package\n \n       else\n          return Empty;\n       end if;\n-   end Get_First_Parent_With_External_Axiomatization_For_Entity;\n+   end Get_First_Parent_With_Ext_Axioms_For_Entity;\n \n    ---------------------\n    -- Get_Stream_Size --"}, {"sha": "0483f8f31f15c3aa7b9c4846085db57100b01a04", "filename": "gcc/ada/exp_util.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39521a94f844f6c6462b4b7849e7f1e2780be6fa/gcc%2Fada%2Fexp_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39521a94f844f6c6462b4b7849e7f1e2780be6fa/gcc%2Fada%2Fexp_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.ads?ref=39521a94f844f6c6462b4b7849e7f1e2780be6fa", "patch": "@@ -525,7 +525,7 @@ package Exp_Util is\n    --  N_Op_Eq), or to determine the result of some other test in other cases\n    --  (e.g. no access check required if N_Op_Ne Null).\n \n-   function Get_First_Parent_With_External_Axiomatization_For_Entity\n+   function Get_First_Parent_With_Ext_Axioms_For_Entity\n      (E : Entity_Id) return Entity_Id;\n    --  Returns the package entity with an external axiomatization containing E,\n    --  if any, or Empty if none."}, {"sha": "b9531c6c0687d8b1ad020550945202d90deb4e62", "filename": "gcc/ada/inline.adb", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39521a94f844f6c6462b4b7849e7f1e2780be6fa/gcc%2Fada%2Finline.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39521a94f844f6c6462b4b7849e7f1e2780be6fa/gcc%2Fada%2Finline.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finline.adb?ref=39521a94f844f6c6462b4b7849e7f1e2780be6fa", "patch": "@@ -1239,11 +1239,12 @@ package body Inline is\n         and then Msg (Msg'First .. Msg'First + 12) = \"cannot inline\"\n       then\n          declare\n-            Len1 : constant Positive := 13;  --  \"cannot inline\"\n-            Len2 : constant Positive := 25;  --  \"no contextual analysis of\"\n+            Len1 : constant Positive := 13;  --  length of \"cannot inline\"\n+            Len2 : constant Positive := 31;\n+            --  lenth of \"info: no contextual analysis of\"\n             New_Msg : String (1 .. Msg'Length + Len2 - Len1);\n          begin\n-            New_Msg (1 .. Len2) := \"no contextual analysis of\";\n+            New_Msg (1 .. Len2) := \"info: no contextual analysis of\";\n             New_Msg (Len2 + 1 .. Msg'Length + Len2 - Len1) :=\n               Msg (Msg'First + Len1 .. Msg'Last);\n             Cannot_Inline (New_Msg, N, Subp, Is_Serious);"}, {"sha": "3c783764b5d196d9338bda7cd4aa6083d755ebab", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39521a94f844f6c6462b4b7849e7f1e2780be6fa/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39521a94f844f6c6462b4b7849e7f1e2780be6fa/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=39521a94f844f6c6462b4b7849e7f1e2780be6fa", "patch": "@@ -30,6 +30,7 @@ with Elists;   use Elists;\n with Errout;   use Errout;\n with Expander; use Expander;\n with Exp_Disp; use Exp_Disp;\n+with Exp_Util; use Exp_Util;\n with Fname;    use Fname;\n with Fname.UF; use Fname.UF;\n with Freeze;   use Freeze;\n@@ -1669,7 +1670,11 @@ package body Sem_Ch12 is\n \n                   else\n                      if GNATprove_Mode\n-                        and then Ekind (Defining_Entity (Analyzed_Formal))\n+                       and then\n+                         Present\n+                           (Get_First_Parent_With_Ext_Axioms_For_Entity\n+                              (Defining_Entity (Analyzed_Formal)))\n+                       and then Ekind (Defining_Entity (Analyzed_Formal))\n                           = E_Function\n                      then\n "}, {"sha": "2d5766e27b1e64d6f2f253b5db17588e9df41d73", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39521a94f844f6c6462b4b7849e7f1e2780be6fa/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39521a94f844f6c6462b4b7849e7f1e2780be6fa/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=39521a94f844f6c6462b4b7849e7f1e2780be6fa", "patch": "@@ -6217,16 +6217,17 @@ package body Sem_Res is\n          --  being inlined.\n \n          declare\n-            Nam_UA : constant Entity_Id := Ultimate_Alias (Nam);\n-            Decl   : constant Node_Id   := Unit_Declaration_Node (Nam_UA);\n+            Nam_UA  : constant Entity_Id := Ultimate_Alias (Nam);\n+            Decl    : constant Node_Id   := Unit_Declaration_Node (Nam_UA);\n+            Body_Id : constant Entity_Id := Corresponding_Body (Decl);\n \n          begin\n             --  If the subprogram is not eligible for inlining in GNATprove\n             --  mode, do nothing.\n \n             if Nkind (Decl) /= N_Subprogram_Declaration\n               or else not Is_Inlined_Always (Nam_UA)\n-              or else not Can_Be_Inlined_In_GNATprove_Mode (Nam_UA, Empty)\n+              or else not Can_Be_Inlined_In_GNATprove_Mode (Nam_UA, Body_Id)\n             then\n                null;\n \n@@ -6245,7 +6246,7 @@ package body Sem_Res is\n                --  With the one-pass inlining technique, a call cannot be\n                --  inlined if the corresponding body has not been seen yet.\n \n-               if No (Corresponding_Body (Decl)) then\n+               if No (Body_Id) then\n                   Error_Msg_NE\n                     (\"?no contextual analysis of & (body not seen yet)\",\n                      N, Nam);"}]}