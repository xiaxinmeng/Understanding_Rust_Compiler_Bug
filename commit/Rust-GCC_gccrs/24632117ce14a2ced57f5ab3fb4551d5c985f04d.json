{"sha": "24632117ce14a2ced57f5ab3fb4551d5c985f04d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjQ2MzIxMTdjZTE0YTJjZWQ1N2Y1YWIzZmI0NTUxZDVjOTg1ZjA0ZA==", "commit": {"author": {"name": "Mark Wielaard", "email": "mark@klomp.org", "date": "2002-12-08T23:38:02Z"}, "committer": {"name": "Mark Wielaard", "email": "mark@gcc.gnu.org", "date": "2002-12-08T23:38:02Z"}, "message": "ResourceBundle.java (resourceBundleCache): Not final.\n\n\t* java/util/ResourceBundle.java (resourceBundleCache): Not final.\n\t(lastDefaultLocale): New field.\n\t(getBundle): When Locale.getDefault != lastDefaultLocale reset\n\tresourceBundleCache.\n\nFrom-SVN: r59948", "tree": {"sha": "0428606bc42926355571268cacfa44d7ecf4659c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0428606bc42926355571268cacfa44d7ecf4659c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/24632117ce14a2ced57f5ab3fb4551d5c985f04d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24632117ce14a2ced57f5ab3fb4551d5c985f04d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/24632117ce14a2ced57f5ab3fb4551d5c985f04d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24632117ce14a2ced57f5ab3fb4551d5c985f04d/comments", "author": null, "committer": null, "parents": [{"sha": "37c66aa6ef3000be23ee0f2f53ffd860ab88fee8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37c66aa6ef3000be23ee0f2f53ffd860ab88fee8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/37c66aa6ef3000be23ee0f2f53ffd860ab88fee8"}], "stats": {"total": 25, "additions": 22, "deletions": 3}, "files": [{"sha": "9e255b2cd57a4550fe1a8ab8133ad969aa9c88b2", "filename": "libjava/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24632117ce14a2ced57f5ab3fb4551d5c985f04d/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24632117ce14a2ced57f5ab3fb4551d5c985f04d/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=24632117ce14a2ced57f5ab3fb4551d5c985f04d", "patch": "@@ -1,3 +1,10 @@\n+2002-12-08  Mark Wielaard  <mark@klomp.org>\n+\n+\t* java/util/ResourceBundle.java (resourceBundleCache): Not final.\n+\t(lastDefaultLocale): New field.\n+\t(getBundle): When Locale.getDefault != lastDefaultLocale reset\n+\tresourceBundleCache.\n+\n 2002-12-06  Mark Wielaard  <mark@klomp.org>\n \n \t* java/net/InetAddress.java (toString): Use hostname when not null,"}, {"sha": "2a4e34887c46e60a0ebaf61eeec5b31e904c0fb2", "filename": "libjava/java/util/ResourceBundle.java", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24632117ce14a2ced57f5ab3fb4551d5c985f04d/libjava%2Fjava%2Futil%2FResourceBundle.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24632117ce14a2ced57f5ab3fb4551d5c985f04d/libjava%2Fjava%2Futil%2FResourceBundle.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2FResourceBundle.java?ref=24632117ce14a2ced57f5ab3fb4551d5c985f04d", "patch": "@@ -111,7 +111,13 @@\n    * second hash map is the localized name, the value is a soft\n    * references to the resource bundle.\n    */\n-  private static final Map resourceBundleCache = new HashMap();\n+  private static Map resourceBundleCache;\n+\n+  /**\n+   * The last default Locale we saw. If this ever changes then we have to\n+   * reset our caches.\n+   */\n+  private static Locale lastDefaultLocale;\n \n   /**\n    * The `empty' locale is created once in order to optimize\n@@ -312,6 +318,12 @@ public static final ResourceBundle getBundle(String baseName,\n   {\n     // This implementation searches the bundle in the reverse direction\n     // and builds the parent chain on the fly.\n+    Locale defaultLocale = Locale.getDefault();\n+    if (defaultLocale != lastDefaultLocale)\n+      {\n+\tresourceBundleCache = new HashMap();\n+\tlastDefaultLocale = defaultLocale;\n+      }\n     HashMap cache = (HashMap) resourceBundleCache.get(classLoader);\n     StringBuffer sb = new StringBuffer(60);\n     sb.append(baseName).append('_').append(locale);\n@@ -359,9 +371,9 @@ else if (cache.containsKey(name))\n     // bundle.\n     ResourceBundle bundle = tryLocalBundle(baseName, locale,\n                                            classLoader, baseBundle, cache);\n-    if (bundle == baseBundle && !locale.equals(Locale.getDefault()))\n+    if (bundle == baseBundle && !locale.equals(defaultLocale))\n       {\n-\tbundle = tryLocalBundle(baseName, Locale.getDefault(),\n+\tbundle = tryLocalBundle(baseName, defaultLocale,\n \t\t\t\tclassLoader, baseBundle, cache);\n \t// We need to record that the argument locale maps to the\n \t// bundle we just found.  If we didn't find a bundle, record"}]}