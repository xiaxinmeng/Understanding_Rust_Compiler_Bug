{"sha": "3673b0b3b729cf4e8f9abe01096ecdfad0ad3d5f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzY3M2IwYjNiNzI5Y2Y0ZThmOWFiZTAxMDk2ZWNkZmFkMGFkM2Q1Zg==", "commit": {"author": {"name": "Yizhe", "email": "yizhe@pku.edu.cn", "date": "2021-02-19T09:29:17Z"}, "committer": {"name": "Philip Herron", "email": "herron.philip@googlemail.com", "date": "2021-02-19T10:34:59Z"}, "message": "Fixed unsigned and signed comparision", "tree": {"sha": "7f730db892bd083525f111f4f75df2095ee83099", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7f730db892bd083525f111f4f75df2095ee83099"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3673b0b3b729cf4e8f9abe01096ecdfad0ad3d5f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3673b0b3b729cf4e8f9abe01096ecdfad0ad3d5f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3673b0b3b729cf4e8f9abe01096ecdfad0ad3d5f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3673b0b3b729cf4e8f9abe01096ecdfad0ad3d5f/comments", "author": {"login": "YizhePKU", "id": 42838469, "node_id": "MDQ6VXNlcjQyODM4NDY5", "avatar_url": "https://avatars.githubusercontent.com/u/42838469?v=4", "gravatar_id": "", "url": "https://api.github.com/users/YizhePKU", "html_url": "https://github.com/YizhePKU", "followers_url": "https://api.github.com/users/YizhePKU/followers", "following_url": "https://api.github.com/users/YizhePKU/following{/other_user}", "gists_url": "https://api.github.com/users/YizhePKU/gists{/gist_id}", "starred_url": "https://api.github.com/users/YizhePKU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/YizhePKU/subscriptions", "organizations_url": "https://api.github.com/users/YizhePKU/orgs", "repos_url": "https://api.github.com/users/YizhePKU/repos", "events_url": "https://api.github.com/users/YizhePKU/events{/privacy}", "received_events_url": "https://api.github.com/users/YizhePKU/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6dc2bfb1d0c3c020d99197871c596efdeb6208a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6dc2bfb1d0c3c020d99197871c596efdeb6208a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6dc2bfb1d0c3c020d99197871c596efdeb6208a9"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "66b87e3765cf606c4f1e58d8e18a0ed53715478b", "filename": "gcc/rust/typecheck/rust-tyty.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3673b0b3b729cf4e8f9abe01096ecdfad0ad3d5f/gcc%2Frust%2Ftypecheck%2Frust-tyty.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3673b0b3b729cf4e8f9abe01096ecdfad0ad3d5f/gcc%2Frust%2Ftypecheck%2Frust-tyty.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-tyty.cc?ref=3673b0b3b729cf4e8f9abe01096ecdfad0ad3d5f", "patch": "@@ -193,7 +193,7 @@ ADTType::is_equal (const BaseType &other) const\n \t{\n \t  return false;\n \t}\n-      for (int i = 0; i < num_fields (); i++)\n+      for (size_t i = 0; i < num_fields (); i++)\n \t{\n \t  if (!get_field (i)->is_equal (*other2.get_field (i)))\n \t    {\n@@ -264,7 +264,7 @@ TupleType::is_equal (const BaseType &other) const\n \t{\n \t  return false;\n \t}\n-      for (int i = 0; i < num_fields (); i++)\n+      for (size_t i = 0; i < num_fields (); i++)\n \t{\n \t  if (!get_field (i)->is_equal (*other2.get_field (i)))\n \t    {\n@@ -325,7 +325,7 @@ FnType::is_equal (const BaseType &other) const\n \treturn false;\n       if (num_params () != other2.num_params ())\n \treturn false;\n-      for (int i = 0; i < num_params (); i++)\n+      for (size_t i = 0; i < num_params (); i++)\n \t{\n \t  auto lhs = param_at (i).second;\n \t  auto rhs = other2.param_at (i).second;"}]}