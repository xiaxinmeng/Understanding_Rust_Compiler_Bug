{"sha": "09ef33c10863f37a99396040bfa4329de1271eb3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDllZjMzYzEwODYzZjM3YTk5Mzk2MDQwYmZhNDMyOWRlMTI3MWViMw==", "commit": {"author": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2018-02-25T16:50:50Z"}, "committer": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2018-02-25T16:50:50Z"}, "message": "re PR fortran/83633 (gfortran internal compiler error for explicit-shape array with non-constant bounds)\n\n2018-02-25  Steven G. Kargl  <kargl@gcc.gnu.org>\n\n\tPR fortran/83633\n\t* decl.c (variable_decl): Check that an explicit-shape-array with\n\tnonconstant bounds is allowed.\n\n2018-02-25  Steven G. Kargl  <kargl@gcc.gnu.org>\n\n\tPR fortran/83633\n\t* gfortran.dg/explicit_shape_1.f90: New test.\n\t* gfortran.dg/automatic_module_variable.f90: Update regex.\n\t* gfortran.dg/bad_automatic_objects_1.f90: Ditto.\n\t* gfortran.dg/constant_shape.f90: Ditto.\n\t* gfortran.dg/dec_structure_23.f90: Ditto.\n\t* gfortran.dg/pr78240.f90: Ditto.\n\nFrom-SVN: r257971", "tree": {"sha": "bc03b941fba4b3175b46ed2c886baf947469fd67", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bc03b941fba4b3175b46ed2c886baf947469fd67"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/09ef33c10863f37a99396040bfa4329de1271eb3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09ef33c10863f37a99396040bfa4329de1271eb3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09ef33c10863f37a99396040bfa4329de1271eb3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09ef33c10863f37a99396040bfa4329de1271eb3/comments", "author": null, "committer": null, "parents": [{"sha": "8fba26f48f4224ca9f2faab0b2a28e20784a119c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8fba26f48f4224ca9f2faab0b2a28e20784a119c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8fba26f48f4224ca9f2faab0b2a28e20784a119c"}], "stats": {"total": 103, "additions": 90, "deletions": 13}, "files": [{"sha": "76ac274674ad5f7511177522923fcf4817cb074b", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09ef33c10863f37a99396040bfa4329de1271eb3/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09ef33c10863f37a99396040bfa4329de1271eb3/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=09ef33c10863f37a99396040bfa4329de1271eb3", "patch": "@@ -1,3 +1,9 @@\n+2018-02-25  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/83633\n+\t* decl.c (variable_decl): Check that an explicit-shape-array with\n+\tnonconstant bounds is allowed.\n+\n 2018-02-25  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/84523"}, {"sha": "dcfda27a3c640862a868b84cae39a458084b34cc", "filename": "gcc/fortran/decl.c", "status": "modified", "additions": 48, "deletions": 1, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09ef33c10863f37a99396040bfa4329de1271eb3/gcc%2Ffortran%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09ef33c10863f37a99396040bfa4329de1271eb3/gcc%2Ffortran%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdecl.c?ref=09ef33c10863f37a99396040bfa4329de1271eb3", "patch": "@@ -2304,7 +2304,10 @@ variable_decl (int elem)\n   /* At this point, we know for sure if the symbol is PARAMETER and can thus\n      determine (and check) whether it can be implied-shape.  If it\n      was parsed as assumed-size, change it because PARAMETERs can not\n-     be assumed-size.  */\n+     be assumed-size.\n+\n+     An explicit-shape-array cannot appear under several conditions.\n+     That check is done here as well.  */\n   if (as)\n     {\n       if (as->type == AS_IMPLIED_SHAPE && current_attr.flavor != FL_PARAMETER)\n@@ -2326,6 +2329,50 @@ variable_decl (int elem)\n \t  m = MATCH_ERROR;\n \t  goto cleanup;\n \t}\n+\n+      /* F2018:C830 (R816) An explicit-shape-spec whose bounds are not\n+\t constant expressions shall appear only in a subprogram, derived\n+\t type definition, BLOCK construct, or interface body.  */\n+      if (as->type == AS_EXPLICIT\n+\t  && gfc_current_state () != COMP_BLOCK\n+\t  && gfc_current_state () != COMP_DERIVED\n+\t  && gfc_current_state () != COMP_FUNCTION\n+\t  && gfc_current_state () != COMP_INTERFACE\n+\t  && gfc_current_state () != COMP_SUBROUTINE)\n+\t{\n+\t  gfc_expr *e;\n+\t  bool not_constant = false;\n+\n+\t  for (int i = 0; i < as->rank; i++)\n+\t    {\n+\t      e = gfc_copy_expr (as->lower[i]);\n+\t      gfc_resolve_expr (e);\n+\t      gfc_simplify_expr (e, 0);\n+\t      if (e && (e->expr_type != EXPR_CONSTANT))\n+\t\t{\n+\t\t  not_constant = true;\n+\t\t  break;\n+\t\t}\n+\t      gfc_free_expr (e);\n+\n+\t      e = gfc_copy_expr (as->upper[i]);\n+\t      gfc_resolve_expr (e);\n+\t      gfc_simplify_expr (e, 0);\n+\t      if (e && (e->expr_type != EXPR_CONSTANT))\n+\t\t{\n+\t\t  not_constant = true;\n+\t\t  break;\n+\t\t}\n+\t      gfc_free_expr (e);\n+\t    }\n+\n+\t  if (not_constant)\n+\t    { \n+\t      gfc_error (\"Explicit shaped array with nonconstant bounds at %C\");\n+\t      m = MATCH_ERROR;\n+\t      goto cleanup;\n+\t    }\n+\t}\n     }\n \n   char_len = NULL;"}, {"sha": "86fce26c0835f972befd75a530b061effd69ecac", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09ef33c10863f37a99396040bfa4329de1271eb3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09ef33c10863f37a99396040bfa4329de1271eb3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=09ef33c10863f37a99396040bfa4329de1271eb3", "patch": "@@ -1,3 +1,13 @@\n+2018-02-25  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/83633\n+\t* gfortran.dg/explicit_shape_1.f90: New test.\n+\t* gfortran.dg/automatic_module_variable.f90: Update regex.\n+\t* gfortran.dg/bad_automatic_objects_1.f90: Ditto.\n+\t* gfortran.dg/constant_shape.f90: Ditto.\n+\t* gfortran.dg/dec_structure_23.f90: Ditto.\n+\t* gfortran.dg/pr78240.f90: Ditto.\n+\n 2018-02-25  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/84523"}, {"sha": "ab041fcf4f5ac40cce2e8545be134b20f761a520", "filename": "gcc/testsuite/gfortran.dg/automatic_module_variable.f90", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09ef33c10863f37a99396040bfa4329de1271eb3/gcc%2Ftestsuite%2Fgfortran.dg%2Fautomatic_module_variable.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09ef33c10863f37a99396040bfa4329de1271eb3/gcc%2Ftestsuite%2Fgfortran.dg%2Fautomatic_module_variable.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fautomatic_module_variable.f90?ref=09ef33c10863f37a99396040bfa4329de1271eb3", "patch": "@@ -1,10 +1,12 @@\n ! { dg-do compile }\n ! Tests fix for PR15976\n !\n+! Error message update with patch for PR fortran/83633\n+!\n module sd\n   integer, parameter :: n = 20\n   integer :: i(n)\n-  integer :: j(m) ! { dg-error \"must have constant shape\" }\n+  integer :: j(m) ! { dg-error \"array with nonconstant bounds\" }\n   integer, pointer :: p(:)\n   integer, allocatable :: q(:)\n contains"}, {"sha": "61db2174e5b9cca84428efde8d8d3cccd1983ddd", "filename": "gcc/testsuite/gfortran.dg/bad_automatic_objects_1.f90", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09ef33c10863f37a99396040bfa4329de1271eb3/gcc%2Ftestsuite%2Fgfortran.dg%2Fbad_automatic_objects_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09ef33c10863f37a99396040bfa4329de1271eb3/gcc%2Ftestsuite%2Fgfortran.dg%2Fbad_automatic_objects_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fbad_automatic_objects_1.f90?ref=09ef33c10863f37a99396040bfa4329de1271eb3", "patch": "@@ -5,16 +5,18 @@\n !\n ! Contributed by Joost VandeVondele  <jv244@cam.ac.uk>\n !\n+! Error message update with patch for PR fortran/83633\n+!\n module foo\n   integer    ::  i\n end module foo\n module bar\n   use foo\n-  integer, dimension (i) :: j ! { dg-error \"must have constant shape\" }\n+  integer, dimension (i) :: j ! { dg-error \"array with nonconstant bounds\" }\n   character (len = i) :: c1   ! { dg-error \"must have constant character length\" }\n end module bar\n program foobar\n   use foo\n-  integer, dimension (i) :: k ! { dg-error \"must have constant shape\" }\n+  integer, dimension (i) :: k ! { dg-error \"array with nonconstant bounds\" }\n   character (len = i) :: c2   ! { dg-error \"must have constant character length\" }\n end program foobar"}, {"sha": "5ee927b20e2f8058d05b1671ee163911231519fe", "filename": "gcc/testsuite/gfortran.dg/constant_shape.f90", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09ef33c10863f37a99396040bfa4329de1271eb3/gcc%2Ftestsuite%2Fgfortran.dg%2Fconstant_shape.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09ef33c10863f37a99396040bfa4329de1271eb3/gcc%2Ftestsuite%2Fgfortran.dg%2Fconstant_shape.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fconstant_shape.f90?ref=09ef33c10863f37a99396040bfa4329de1271eb3", "patch": "@@ -3,7 +3,8 @@\n ! PR 78392: ICE in gfc_trans_auto_array_allocation, at fortran/trans-array.c:5979\n !\n ! Contributed by Janus Weil <janus@gcc.gnu.org>\n-\n+! Error message update with patch for PR fortran/83633\n+!\n module mytypes\n    implicit none\n  contains\n@@ -15,6 +16,6 @@ pure integer function get_i ()\n program test\n   use mytypes\n   implicit none\n-  integer, dimension(get_i()) :: x  ! { dg-error \"must have constant shape\" }\n-  print *, size (x)\n+  integer, dimension(get_i()) :: x  ! { dg-error \"array with nonconstant bounds\" }\n+  print *, size (x)                 ! { dg-error \"has no IMPLICIT type\" }\n end"}, {"sha": "78db344e0fc859adfdbcf0d518830eeb03c8d8be", "filename": "gcc/testsuite/gfortran.dg/dec_structure_23.f90", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09ef33c10863f37a99396040bfa4329de1271eb3/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_structure_23.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09ef33c10863f37a99396040bfa4329de1271eb3/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_structure_23.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_structure_23.f90?ref=09ef33c10863f37a99396040bfa4329de1271eb3", "patch": "@@ -6,14 +6,15 @@\n ! Test a regression where an ICE occurred attempting to create array variables\n ! with non-constant array-specs in legacy clist initializers.\n !\n-\n+! Error message update with patch for PR fortran/83633\n+!\n program p\n   implicit none\n   integer :: nn\n   real :: rr\n   structure /s/\n-    integer x(n)    /1/   ! { dg-error \"xpected constant\" }\n-    integer xx(nn)  /1/   ! { dg-error \"xpected constant\" }\n-    integer xxx(rr) /1.0/ ! { dg-error \"xpected constant\" }\n+    integer x(n)    /1/   ! { dg-error \"array with nonconstant bounds\" }\n+    integer xx(nn)  /1/   ! { dg-error \"array with nonconstant bounds\" }\n+    integer xxx(rr) /1.0/ ! { dg-error \"array with nonconstant bounds\" }\n   end structure\n end"}, {"sha": "ca3cd00d855877e1b08f7bebf8757c92980230d9", "filename": "gcc/testsuite/gfortran.dg/explicit_shape_1.f90", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09ef33c10863f37a99396040bfa4329de1271eb3/gcc%2Ftestsuite%2Fgfortran.dg%2Fexplicit_shape_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09ef33c10863f37a99396040bfa4329de1271eb3/gcc%2Ftestsuite%2Fgfortran.dg%2Fexplicit_shape_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fexplicit_shape_1.f90?ref=09ef33c10863f37a99396040bfa4329de1271eb3", "patch": "@@ -0,0 +1,7 @@\n+! { dg-do compile }\n+! PR fortran/83633\n+! Original testcase by Nathan T. Weeks  <weeks at iastate dot edu>\n+!\n+integer :: A(command_argument_count()) = 1 ! { dg-error \"nonconstant bounds\" }\n+write (*,*) A\n+end"}, {"sha": "45d3f86360b58cd0c48d5a1dcca1b3a8d9b4f752", "filename": "gcc/testsuite/gfortran.dg/pr78240.f90", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09ef33c10863f37a99396040bfa4329de1271eb3/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr78240.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09ef33c10863f37a99396040bfa4329de1271eb3/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr78240.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr78240.f90?ref=09ef33c10863f37a99396040bfa4329de1271eb3", "patch": "@@ -7,9 +7,10 @@\n ! to the error handling routine for non-constant array-specs in DATA list\n ! initializers.\n !\n-\n+! Error message update with patch for PR fortran/83633\n+!\n program p\n-  integer x(n)    /1/   ! { dg-error \"cannot appear in the expression\" }\n+  integer x(n)    /1/   ! { dg-error \"array with nonconstant bounds\" }\n end\n ! { dg-prune-output \"module or main program\" }\n ! { dg-prune-output \"Nonconstant array\" }"}]}