{"sha": "aac864b08d063598a11eda07018a3f7377e3ec5e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWFjODY0YjA4ZDA2MzU5OGExMWVkYTA3MDE4YTNmNzM3N2UzZWM1ZQ==", "commit": {"author": {"name": "Kaz Kojima", "email": "kkojima@gcc.gnu.org", "date": "2004-07-29T22:27:43Z"}, "committer": {"name": "Kaz Kojima", "email": "kkojima@gcc.gnu.org", "date": "2004-07-29T22:27:43Z"}, "message": "* config/sh/lib1funcs.asm: Make aliases movstr* for movmem*.\n\nFrom-SVN: r85316", "tree": {"sha": "2686667ac08a8c3c3f07175782207f1114d777a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2686667ac08a8c3c3f07175782207f1114d777a4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aac864b08d063598a11eda07018a3f7377e3ec5e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aac864b08d063598a11eda07018a3f7377e3ec5e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aac864b08d063598a11eda07018a3f7377e3ec5e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aac864b08d063598a11eda07018a3f7377e3ec5e/comments", "author": null, "committer": null, "parents": [{"sha": "7c9b102edeb552a4bb8de08c2287e86130259dc8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c9b102edeb552a4bb8de08c2287e86130259dc8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c9b102edeb552a4bb8de08c2287e86130259dc8"}], "stats": {"total": 32, "additions": 31, "deletions": 1}, "files": [{"sha": "259ddec9e52e87b32ff51428416d092c56b050ec", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aac864b08d063598a11eda07018a3f7377e3ec5e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aac864b08d063598a11eda07018a3f7377e3ec5e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=aac864b08d063598a11eda07018a3f7377e3ec5e", "patch": "@@ -1,3 +1,7 @@\n+2004-07-29  Kaz Kojima  <kkojima@gcc.gnu.org>\n+\n+\t* config/sh/lib1funcs.asm: Make aliases movstr* for movmem*.\n+\n 2004-07-29  Diego Novillo  <dnovillo@redhat.com>\n \n \t* tree-ssa.c (verify_flow_sensitive_alias_info): When"}, {"sha": "30f10a992cda50db48b6961d7b90aca670cfe671", "filename": "gcc/config/sh/lib1funcs.asm", "status": "modified", "additions": 27, "deletions": 1, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aac864b08d063598a11eda07018a3f7377e3ec5e/gcc%2Fconfig%2Fsh%2Flib1funcs.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aac864b08d063598a11eda07018a3f7377e3ec5e/gcc%2Fconfig%2Fsh%2Flib1funcs.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Flib1funcs.asm?ref=aac864b08d063598a11eda07018a3f7377e3ec5e", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 1994, 1995, 1997, 1998, 1999, 2000, 2001, 2002, 2003\n+/* Copyright (C) 1994, 1995, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004\n    Free Software Foundation, Inc.\n \n This file is free software; you can redistribute it and/or modify it\n@@ -52,6 +52,8 @@ Boston, MA 02111-1307, USA.  */\n #define\tGLOBAL0(U,X)\tCONCAT(U,__##X)\n #define\tGLOBAL(X)\tGLOBAL0(__USER_LABEL_PREFIX__,X)\n \n+#define ALIAS(X,Y)\t.global GLOBAL(X); .set GLOBAL(X),GLOBAL(Y)\n+\n #if defined __SH5__ && ! defined __SH4_NOFPU__ && ! defined (__LITTLE_ENDIAN__)\n #define FMOVD_WORKS\n #endif\n@@ -728,88 +730,107 @@ done:\n \tjmp\t@r0\n \tadd\t#64,r4\n \t.align\t4\n+! ??? We need aliases movstr* for movmem* for the older libraries.  These\n+! aliases will be removed at the some point in the future.\n \t.global\tGLOBAL(movmemSI64)\n \tFUNC(GLOBAL(movmemSI64))\n+\tALIAS(movstrSI64,movmemSI64)\n GLOBAL(movmemSI64):\n \tmov.l\t@(60,r5),r0\n \tmov.l\tr0,@(60,r4)\n \t.global\tGLOBAL(movmemSI60)\n \tFUNC(GLOBAL(movmemSI60))\n+\tALIAS(movstrSI60,movmemSI60)\n GLOBAL(movmemSI60):\n \tmov.l\t@(56,r5),r0\n \tmov.l\tr0,@(56,r4)\n \t.global\tGLOBAL(movmemSI56)\n \tFUNC(GLOBAL(movmemSI56))\n+\tALIAS(movstrSI56,movmemSI56)\n GLOBAL(movmemSI56):\n \tmov.l\t@(52,r5),r0\n \tmov.l\tr0,@(52,r4)\n \t.global\tGLOBAL(movmemSI52)\n \tFUNC(GLOBAL(movmemSI52))\n+\tALIAS(movstrSI52,movmemSI52)\n GLOBAL(movmemSI52):\n \tmov.l\t@(48,r5),r0\n \tmov.l\tr0,@(48,r4)\n \t.global\tGLOBAL(movmemSI48)\n \tFUNC(GLOBAL(movmemSI48))\n+\tALIAS(movstrSI48,movmemSI48)\n GLOBAL(movmemSI48):\n \tmov.l\t@(44,r5),r0\n \tmov.l\tr0,@(44,r4)\n \t.global\tGLOBAL(movmemSI44)\n \tFUNC(GLOBAL(movmemSI44))\n+\tALIAS(movstrSI44,movmemSI44)\n GLOBAL(movmemSI44):\n \tmov.l\t@(40,r5),r0\n \tmov.l\tr0,@(40,r4)\n \t.global\tGLOBAL(movmemSI40)\n \tFUNC(GLOBAL(movmemSI40))\n+\tALIAS(movstrSI40,movmemSI40)\n GLOBAL(movmemSI40):\n \tmov.l\t@(36,r5),r0\n \tmov.l\tr0,@(36,r4)\n \t.global\tGLOBAL(movmemSI36)\n \tFUNC(GLOBAL(movmemSI36))\n+\tALIAS(movstrSI36,movmemSI36)\n GLOBAL(movmemSI36):\n \tmov.l\t@(32,r5),r0\n \tmov.l\tr0,@(32,r4)\n \t.global\tGLOBAL(movmemSI32)\n \tFUNC(GLOBAL(movmemSI32))\n+\tALIAS(movstrSI32,movmemSI32)\n GLOBAL(movmemSI32):\n \tmov.l\t@(28,r5),r0\n \tmov.l\tr0,@(28,r4)\n \t.global\tGLOBAL(movmemSI28)\n \tFUNC(GLOBAL(movmemSI28))\n+\tALIAS(movstrSI28,movmemSI28)\n GLOBAL(movmemSI28):\n \tmov.l\t@(24,r5),r0\n \tmov.l\tr0,@(24,r4)\n \t.global\tGLOBAL(movmemSI24)\n \tFUNC(GLOBAL(movmemSI24))\n+\tALIAS(movstrSI24,movmemSI24)\n GLOBAL(movmemSI24):\n \tmov.l\t@(20,r5),r0\n \tmov.l\tr0,@(20,r4)\n \t.global\tGLOBAL(movmemSI20)\n \tFUNC(GLOBAL(movmemSI20))\n+\tALIAS(movstrSI20,movmemSI20)\n GLOBAL(movmemSI20):\n \tmov.l\t@(16,r5),r0\n \tmov.l\tr0,@(16,r4)\n \t.global\tGLOBAL(movmemSI16)\n \tFUNC(GLOBAL(movmemSI16))\n+\tALIAS(movstrSI16,movmemSI16)\n GLOBAL(movmemSI16):\n \tmov.l\t@(12,r5),r0\n \tmov.l\tr0,@(12,r4)\n \t.global\tGLOBAL(movmemSI12)\n \tFUNC(GLOBAL(movmemSI12))\n+\tALIAS(movstrSI12,movmemSI12)\n GLOBAL(movmemSI12):\n \tmov.l\t@(8,r5),r0\n \tmov.l\tr0,@(8,r4)\n \t.global\tGLOBAL(movmemSI8)\n \tFUNC(GLOBAL(movmemSI8))\n+\tALIAS(movstrSI8,movmemSI8)\n GLOBAL(movmemSI8):\n \tmov.l\t@(4,r5),r0\n \tmov.l\tr0,@(4,r4)\n \t.global\tGLOBAL(movmemSI4)\n \tFUNC(GLOBAL(movmemSI4))\n+\tALIAS(movstrSI4,movmemSI4)\n GLOBAL(movmemSI4):\n \tmov.l\t@(0,r5),r0\n \tmov.l\tr0,@(0,r4)\n \t.global\tGLOBAL(movmemSI0)\n \tFUNC(GLOBAL(movmemSI0))\n+\tALIAS(movstrSI0,movmemSI0)\n GLOBAL(movmemSI0):\n \trts\n \tnop\n@@ -836,6 +857,7 @@ GLOBAL(movmemSI0):\n \n \t.global\tGLOBAL(movmem)\n \tFUNC(GLOBAL(movmem))\n+\tALIAS(movstr,movmem)\n GLOBAL(movmem):\n \tmov.l\t@(60,r5),r0\n \tmov.l\tr0,@(60,r4)\n@@ -906,6 +928,10 @@ GLOBAL(movmem):\n \tFUNC(GLOBAL(movmem_i4_odd))\n \tFUNC(GLOBAL(movmemSI12_i4))\n \n+\tALIAS(movstr_i4_even,movmem_i4_even)\n+\tALIAS(movstr_i4_odd,movmem_i4_odd)\n+\tALIAS(movstrSI12_i4,movmemSI12_i4)\n+\n \t.p2align\t5\n L_movmem_2mod4_end:\n \tmov.l\tr0,@(16,r4)"}]}