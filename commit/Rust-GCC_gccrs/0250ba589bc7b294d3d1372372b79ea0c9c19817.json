{"sha": "0250ba589bc7b294d3d1372372b79ea0c9c19817", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDI1MGJhNTg5YmM3YjI5NGQzZDEzNzIzNzJiNzllYTBjOWMxOTgxNw==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2018-08-06T16:46:13Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2018-08-06T16:46:13Z"}, "message": "re PR c++/86767 (continue statements in constexpr functions causes unbounded looping)\n\n\tPR c++/86767\n\t* constexpr.c (cxx_eval_statement_list): Handle continue.\n\n\t* g++.dg/cpp1y/constexpr-86767.C: New test.\n\nFrom-SVN: r263340", "tree": {"sha": "2f586cc6affa60ecebc930f003dfcec2b5584b69", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2f586cc6affa60ecebc930f003dfcec2b5584b69"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0250ba589bc7b294d3d1372372b79ea0c9c19817", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0250ba589bc7b294d3d1372372b79ea0c9c19817", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0250ba589bc7b294d3d1372372b79ea0c9c19817", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0250ba589bc7b294d3d1372372b79ea0c9c19817/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5242b3cb24325fb1ff32a71383ae2e7f855b2c06", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5242b3cb24325fb1ff32a71383ae2e7f855b2c06", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5242b3cb24325fb1ff32a71383ae2e7f855b2c06"}], "stats": {"total": 139, "additions": 139, "deletions": 0}, "files": [{"sha": "7cf87f8b68d2f0f9fc9cbd4d62dae1cfc1c61735", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0250ba589bc7b294d3d1372372b79ea0c9c19817/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0250ba589bc7b294d3d1372372b79ea0c9c19817/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=0250ba589bc7b294d3d1372372b79ea0c9c19817", "patch": "@@ -1,3 +1,8 @@\n+2018-08-06  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/86767\n+\t* constexpr.c (cxx_eval_statement_list): Handle continue.\n+\n 2018-08-03  David Malcolm  <dmalcolm@redhat.com>\n \t    Jonathan Wakely  <jwakely@redhat.com>\n "}, {"sha": "79039ff2b791aea3f05eaa664a90b1820d8fb314", "filename": "gcc/cp/constexpr.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0250ba589bc7b294d3d1372372b79ea0c9c19817/gcc%2Fcp%2Fconstexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0250ba589bc7b294d3d1372372b79ea0c9c19817/gcc%2Fcp%2Fconstexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fconstexpr.c?ref=0250ba589bc7b294d3d1372372b79ea0c9c19817", "patch": "@@ -3950,6 +3950,16 @@ cxx_eval_statement_list (const constexpr_ctx *ctx, tree t,\n   for (i = tsi_start (t); !tsi_end_p (i); tsi_next (&i))\n     {\n       tree stmt = tsi_stmt (i);\n+      /* We've found a continue, so skip everything until we reach\n+\t the label its jumping to.  */\n+      if (continues (jump_target))\n+\t{\n+\t  if (label_matches (ctx, jump_target, stmt))\n+\t    /* Found it.  */\n+\t    *jump_target = NULL_TREE;\n+\t  else\n+\t    continue;\n+\t}\n       if (TREE_CODE (stmt) == DEBUG_BEGIN_STMT)\n \tcontinue;\n       r = cxx_eval_constant_expression (ctx, stmt, false,"}, {"sha": "eec7461275d04f8c6cd90e2deadb15c237bc159b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0250ba589bc7b294d3d1372372b79ea0c9c19817/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0250ba589bc7b294d3d1372372b79ea0c9c19817/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0250ba589bc7b294d3d1372372b79ea0c9c19817", "patch": "@@ -1,3 +1,8 @@\n+2018-08-06  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/86767\n+\t* g++.dg/cpp1y/constexpr-86767.C: New test.\n+\n 2018-08-06  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* g++.dg/torture/pr86763.C (dg-additional-options): Add -lrt"}, {"sha": "2ad71d507d1fb21495dbd6a115e556e57cfef509", "filename": "gcc/testsuite/g++.dg/cpp1y/constexpr-86767.C", "status": "added", "additions": 119, "deletions": 0, "changes": 119, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0250ba589bc7b294d3d1372372b79ea0c9c19817/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fconstexpr-86767.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0250ba589bc7b294d3d1372372b79ea0c9c19817/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fconstexpr-86767.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fconstexpr-86767.C?ref=0250ba589bc7b294d3d1372372b79ea0c9c19817", "patch": "@@ -0,0 +1,119 @@\n+// PR c++/86767\n+// { dg-do compile { target c++14 } }\n+\n+constexpr int\n+fn0 () noexcept\n+{\n+  int r = 0;\n+  for (int i = 0; i < 10; ++i)\n+    {\n+      continue;\n+      r++;\n+      for (int j = 0; j < 10; ++j )\n+\t{\n+\t}\n+    }\n+  return r;\n+}\n+static_assert (fn0 () == 0, \"\");\n+\n+constexpr int\n+fn1 () noexcept\n+{\n+  int r = 0;\n+  for (int i = 0; i < 10; ++i)\n+    for (int j = 0; j < 10; ++j)\n+      {\n+\tcontinue;\n+\tr++;\n+      }\n+  return r;\n+}\n+static_assert (fn1 () == 0, \"\");\n+\n+constexpr int\n+fn2 () noexcept\n+{\n+  int r = 0;\n+  for (int i = 0; i < 10; ++i)\n+    {\n+      continue;\n+      r++;\n+    }\n+  return r;\n+}\n+static_assert (fn2 () == 0, \"\");\n+\n+constexpr int\n+fn3 () noexcept\n+{\n+  int r = 0;\n+  for (int i = 0; i < 10; ++i)\n+    {\n+      continue;\n+      r++;\n+      while (1)\n+\t{\n+\t}\n+    }\n+  return r;\n+}\n+static_assert (fn3 () == 0, \"\");\n+\n+constexpr int\n+fn4 () noexcept\n+{\n+  for (int i = 0; i < 10; ++i)\n+    {\n+      switch (i)\n+\t{\n+\tcase 5:\n+\t  return i;\n+\tdefault:\n+\t  continue;\n+\t}\n+      while (1)\n+\t{\n+\t}\n+    }\n+  return 0;\n+}\n+static_assert (fn4 () == 5, \"\");\n+\n+constexpr int\n+fn5 () noexcept\n+{\n+  for (int i = 0; i < 10; ++i)\n+    {\n+      switch (i)\n+\t{\n+\tcase 0:\n+\tcase 1:\n+\tcase 2:\n+\tcase 3:\n+\tcase 4:\n+\t  continue;\n+\tdefault:\n+\t  return i;\n+\t}\n+      while (1)\n+\t{\n+\t}\n+    }\n+  return 0;\n+}\n+static_assert (fn5 () == 5, \"\");\n+\n+constexpr int\n+fn6 () noexcept\n+{\n+  int r = 0;\n+  for (int i = 0; i < 10; ++i)\n+    {\n+      continue;\n+      for (int j = 0; j < 10; ++j )\n+\tr++;\n+    }\n+  return r;\n+}\n+static_assert (fn6 () == 0, \"\");"}]}