{"sha": "56a7189af03186fa8fbfff36dae728744496b59c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTZhNzE4OWFmMDMxODZmYThmYmZmZjM2ZGFlNzI4NzQ0NDk2YjU5Yw==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@bigpond.net.au", "date": "2002-08-23T01:18:06Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2002-08-23T01:18:06Z"}, "message": "rs6000.c (output_mi_thunk): Don't determine insns for loading delta with num_insns_constant_wide.\n\n\t* config/rs6000/rs6000.c (output_mi_thunk): Don't determine insns\n\tfor loading delta with num_insns_constant_wide.  Calculate\n\tdelta_low, delta_high without using a conditional.\n\nFrom-SVN: r56525", "tree": {"sha": "5729813d7552f7363581019216f15d324cbe8a08", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5729813d7552f7363581019216f15d324cbe8a08"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/56a7189af03186fa8fbfff36dae728744496b59c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56a7189af03186fa8fbfff36dae728744496b59c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/56a7189af03186fa8fbfff36dae728744496b59c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56a7189af03186fa8fbfff36dae728744496b59c/comments", "author": null, "committer": null, "parents": [{"sha": "5b770a964ade161bf7ae6cd9e2a0cfa55ad8d8d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b770a964ade161bf7ae6cd9e2a0cfa55ad8d8d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b770a964ade161bf7ae6cd9e2a0cfa55ad8d8d3"}], "stats": {"total": 27, "additions": 14, "deletions": 13}, "files": [{"sha": "ac7f67c7990559c3a8b55db3c7954dd5377cec21", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56a7189af03186fa8fbfff36dae728744496b59c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56a7189af03186fa8fbfff36dae728744496b59c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=56a7189af03186fa8fbfff36dae728744496b59c", "patch": "@@ -1,3 +1,9 @@\n+2002-08-23  Alan Modra  <amodra@bigpond.net.au>\n+\n+\t* config/rs6000/rs6000.c (output_mi_thunk): Don't determine insns\n+\tfor loading delta with num_insns_constant_wide.  Calculate\n+\tdelta_low, delta_high without using a conditional.\n+\n 2002-08-22  Jason Merrill  <jason@redhat.com>\n \n \t* c-common.h (RETURN_STMT_EXPR): Rename from RETURN_EXPR."}, {"sha": "3ea15aae36797d71b5b0adb69f4560d144507c3e", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 8, "deletions": 13, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56a7189af03186fa8fbfff36dae728744496b59c/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56a7189af03186fa8fbfff36dae728744496b59c/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=56a7189af03186fa8fbfff36dae728744496b59c", "patch": "@@ -11271,23 +11271,22 @@ output_mi_thunk (file, thunk_fndecl, delta, function)\n \tfprintf (file, \"\\taddi %s,%s,%d\\n\", this_reg, this_reg, delta);\n     }\n \n+  /* 64-bit constants.  If \"int\" is 32 bits, we'll never hit this abort.  */\n+  else if (TARGET_64BIT && (delta < -2147483647 - 1 || delta > 2147483647))\n+    abort ();\n+\n   /* Large constants that can be done by one addis instruction.  */\n-  else if ((delta & 0xffff) == 0 && num_insns_constant_wide (delta) == 1)\n+  else if ((delta & 0xffff) == 0)\n     asm_fprintf (file, \"\\t{cau|addis} %s,%s,%d\\n\", this_reg, this_reg,\n \t\t delta >> 16);\n \n   /* 32-bit constants that can be done by an add and addis instruction.  */\n-  else if (TARGET_32BIT || num_insns_constant_wide (delta) == 1)\n+  else\n     {\n       /* Break into two pieces, propagating the sign bit from the low\n \t word to the upper word.  */\n-      int delta_high = delta >> 16;\n-      int delta_low  = delta & 0xffff;\n-      if ((delta_low & 0x8000) != 0)\n-\t{\n-\t  delta_high++;\n-\t  delta_low = (delta_low ^ 0x8000) - 0x8000;\t/* sign extend */\n-\t}\n+      int delta_low  = ((delta & 0xffff) ^ 0x8000) - 0x8000;\n+      int delta_high = (delta - delta_low) >> 16;\n \n       asm_fprintf (file, \"\\t{cau|addis} %s,%s,%d\\n\", this_reg, this_reg,\n \t\t   delta_high);\n@@ -11298,10 +11297,6 @@ output_mi_thunk (file, thunk_fndecl, delta, function)\n \tfprintf (file, \"\\taddi %s,%s,%d\\n\", this_reg, this_reg, delta_low);\n     }\n \n-  /* 64-bit constants, fixme */\n-  else\n-    abort ();\n-\n   /* Get the prefix in front of the names.  */\n   switch (DEFAULT_ABI)\n     {"}]}