{"sha": "f188272d9f6affacbed8055babe1c02601b35d4c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjE4ODI3MmQ5ZjZhZmZhY2JlZDgwNTViYWJlMWMwMjYwMWIzNWQ0Yw==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2013-05-30T07:29:49Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2013-05-30T07:29:49Z"}, "message": "re PR fortran/57458 (TS29113: Wrongly rejects noncontiguous argument to assumed-rank when both are volatile/asynchronous)\n\n2013-05-30  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/57458\n        * interface.c (compare_parameter): Update C1239/C1240 constraint\n        check for assumed-rank/TS29113.\n\n2013-05-30  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/57458\n        * gfortran.dg/assumed_rank_13.f90: New.\n\nFrom-SVN: r199437", "tree": {"sha": "5dde3fa7e4735c312369bdcc1f9b907ca6514718", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5dde3fa7e4735c312369bdcc1f9b907ca6514718"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f188272d9f6affacbed8055babe1c02601b35d4c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f188272d9f6affacbed8055babe1c02601b35d4c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f188272d9f6affacbed8055babe1c02601b35d4c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f188272d9f6affacbed8055babe1c02601b35d4c/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0571154ad5d7c206b2a46b4995287bdf9bfbb988", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0571154ad5d7c206b2a46b4995287bdf9bfbb988", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0571154ad5d7c206b2a46b4995287bdf9bfbb988"}], "stats": {"total": 56, "additions": 47, "deletions": 9}, "files": [{"sha": "87aa9bce433b91951504806b7912564ab3963794", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f188272d9f6affacbed8055babe1c02601b35d4c/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f188272d9f6affacbed8055babe1c02601b35d4c/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=f188272d9f6affacbed8055babe1c02601b35d4c", "patch": "@@ -1,4 +1,10 @@\n-2013-05-28  Tobias Burnus  <burnus@net-b.de>\n+2013-05-30  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/57458\n+\t* interface.c (compare_parameter): Update C1239/C1240 constraint\n+\tcheck for assumed-rank/TS29113.\n+\n+2013-05-29  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/37336\n \t* class.c (finalize_component): Fix coarray array refs.\n@@ -15,7 +21,7 @@\n \tBT_CLASS allocations.\n \t* trans-stmt.c (gfc_trans_allocate): Ditto.\n \n-2013-05-28  Tobias Burnus  <burnus@net-b.de>\n+2013-05-29  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/37336\n \t* resolve.c (gfc_resolve_finalizers): Remove not implemented error."}, {"sha": "adc4e63845f0fa5fa379158c1392ea571460503c", "filename": "gcc/fortran/interface.c", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f188272d9f6affacbed8055babe1c02601b35d4c/gcc%2Ffortran%2Finterface.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f188272d9f6affacbed8055babe1c02601b35d4c/gcc%2Ffortran%2Finterface.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Finterface.c?ref=f188272d9f6affacbed8055babe1c02601b35d4c", "patch": "@@ -2031,14 +2031,15 @@ compare_parameter (gfc_symbol *formal, gfc_expr *actual,\n          || actual->symtree->n.sym->attr.volatile_)\n       &&  (formal->attr.asynchronous || formal->attr.volatile_)\n       && actual->rank && !gfc_is_simply_contiguous (actual, true)\n-      && ((formal->as->type != AS_ASSUMED_SHAPE && !formal->attr.pointer)\n+      && ((formal->as->type != AS_ASSUMED_SHAPE\n+\t   && formal->as->type != AS_ASSUMED_RANK && !formal->attr.pointer)\n \t  || formal->attr.contiguous))\n     {\n       if (where)\n-\tgfc_error (\"Dummy argument '%s' has to be a pointer or assumed-shape \"\n-\t\t   \"array without CONTIGUOUS attribute - as actual argument at\"\n-\t\t   \" %L is not simply contiguous and both are ASYNCHRONOUS \"\n-\t\t   \"or VOLATILE\", formal->name, &actual->where);\n+\tgfc_error (\"Dummy argument '%s' has to be a pointer, assumed-shape or \"\n+\t\t   \"assumed-rank array without CONTIGUOUS attribute - as actual\"\n+\t\t   \" argument at %L is not simply contiguous and both are \"\n+\t\t   \"ASYNCHRONOUS or VOLATILE\", formal->name, &actual->where);\n       return 0;\n     }\n "}, {"sha": "d51376dff39783dfb4e4ef671ec426609415bafa", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f188272d9f6affacbed8055babe1c02601b35d4c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f188272d9f6affacbed8055babe1c02601b35d4c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f188272d9f6affacbed8055babe1c02601b35d4c", "patch": "@@ -1,3 +1,8 @@\n+2013-05-30  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/57458\n+\t* gfortran.dg/assumed_rank_13.f90: New.\n+\n 2013-05-29  Easwaran Raman  <eraman@google.com>\n \n \tPR tree-optimization/57442\n@@ -13,7 +18,7 @@\n \tPR testsuite/57413\n \t* gcc.dg/debug/dwarf2/discriminator.c: Restrict the test to linux-gnu.\n \n-2013-05-28  Tobias Burnus  <burnus@net-b.de>\n+2013-05-29  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/37336\n \t* gfortran.dg/auto_dealloc_2.f90: Update _free count in the dump.\n@@ -65,7 +70,7 @@\n \t* c-c++-common/cilk-plus/AN/test_sec_limits.c: Likewise.\n \t* gcc.dg/cilk-plus/cilk-plus.exp: New script.\n \n-2013-05-28  Tobias Burnus  <burnus@net-b.de>\n+2013-05-29  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/37336\n \t* gfortran.dg/finalize_11.f90: New."}, {"sha": "99a982b33ed5c33349a8b66f28c9668cb7e52520", "filename": "gcc/testsuite/gfortran.dg/assumed_rank_13.f90", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f188272d9f6affacbed8055babe1c02601b35d4c/gcc%2Ftestsuite%2Fgfortran.dg%2Fassumed_rank_13.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f188272d9f6affacbed8055babe1c02601b35d4c/gcc%2Ftestsuite%2Fgfortran.dg%2Fassumed_rank_13.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fassumed_rank_13.f90?ref=f188272d9f6affacbed8055babe1c02601b35d4c", "patch": "@@ -0,0 +1,26 @@\n+! { dg-do compile }\n+!\n+! PR fortran/57458\n+!\n+!\n+\n+  integer, pointer, asynchronous :: i(:)\n+  integer, pointer, volatile :: j(:)\n+  call foo(i)\n+  call foo2(i)\n+  call foo3(j)\n+  call foo4(j)\n+contains\n+  subroutine foo(x)\n+    type(*), dimension(:), asynchronous :: x\n+  end subroutine foo\n+  subroutine foo2(x)\n+    type(*), dimension(..), asynchronous :: x\n+  end subroutine foo2\n+  subroutine foo3(x)\n+    type(*), dimension(:), asynchronous :: x\n+  end subroutine foo3\n+  subroutine foo4(x)\n+    type(*), dimension(..), asynchronous :: x\n+  end subroutine foo4\n+end"}]}