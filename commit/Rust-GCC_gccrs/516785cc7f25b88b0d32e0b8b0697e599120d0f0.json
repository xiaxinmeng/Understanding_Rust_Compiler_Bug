{"sha": "516785cc7f25b88b0d32e0b8b0697e599120d0f0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTE2Nzg1Y2M3ZjI1Yjg4YjBkMzJlMGI4YjA2OTdlNTk5MTIwZDBmMA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-09-06T09:32:56Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-09-06T09:32:56Z"}, "message": "[multiple changes]\n\n2011-09-06  Robert Dewar  <dewar@adacore.com>\n\n\t* g-socket.adb: Minor reformatting\n\n2011-09-06  Javier Miranda  <miranda@adacore.com>\n\n\t* ali.adb (Scan_ALI): Add missing support to load references of\n\tentities imported from other languages.\n\t* ali.ads (Xref_Record): Adding new fields to store the language and\n\tname of an imported entity.\n\t* lib-xref.adb (Output_Import_Export_Info): Fix typo\n\tin comment.\n\n2011-09-06  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_prag.adb (Analyze_Pragma, case Type_Invariant): A type invariant\n\tis allowed on a full type declaration if it is the completion of\n\ta private declarations.\n\t* sem_ch13.adb (Analyze_Aspect_Specifications): An invariant\n\taspect is allowed on a full type declaration in the private part\n\tof a package.\n\nFrom-SVN: r178577", "tree": {"sha": "cb48cd46a7dbac9e5aec82b437ec604dcc3c66a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cb48cd46a7dbac9e5aec82b437ec604dcc3c66a8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/516785cc7f25b88b0d32e0b8b0697e599120d0f0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/516785cc7f25b88b0d32e0b8b0697e599120d0f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/516785cc7f25b88b0d32e0b8b0697e599120d0f0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/516785cc7f25b88b0d32e0b8b0697e599120d0f0/comments", "author": null, "committer": null, "parents": [{"sha": "9669194386f5742c28f0dca6841d74c540e62fab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9669194386f5742c28f0dca6841d74c540e62fab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9669194386f5742c28f0dca6841d74c540e62fab"}], "stats": {"total": 81, "additions": 73, "deletions": 8}, "files": [{"sha": "b2c2a32f6cfc3e629fe12998a92eaeaaffe3e526", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/516785cc7f25b88b0d32e0b8b0697e599120d0f0/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/516785cc7f25b88b0d32e0b8b0697e599120d0f0/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=516785cc7f25b88b0d32e0b8b0697e599120d0f0", "patch": "@@ -1,3 +1,25 @@\n+2011-09-06  Robert Dewar  <dewar@adacore.com>\n+\n+\t* g-socket.adb: Minor reformatting\n+\n+2011-09-06  Javier Miranda  <miranda@adacore.com>\n+\n+\t* ali.adb (Scan_ALI): Add missing support to load references of\n+\tentities imported from other languages.\n+\t* ali.ads (Xref_Record): Adding new fields to store the language and\n+\tname of an imported entity.\n+\t* lib-xref.adb (Output_Import_Export_Info): Fix typo\n+\tin comment.\n+\n+2011-09-06  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_prag.adb (Analyze_Pragma, case Type_Invariant): A type invariant\n+\tis allowed on a full type declaration if it is the completion of\n+\ta private declarations.\n+\t* sem_ch13.adb (Analyze_Aspect_Specifications): An invariant\n+\taspect is allowed on a full type declaration in the private part\n+\tof a package.\n+\n 2011-09-06  Robert Dewar  <dewar@adacore.com>\n \n \t* sem_ch8.ads: Minor reformatting"}, {"sha": "8201dc6461fba5c8ca9fb859d1cf07c2dd61a1dd", "filename": "gcc/ada/ali.adb", "status": "modified", "additions": 17, "deletions": 4, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/516785cc7f25b88b0d32e0b8b0697e599120d0f0/gcc%2Fada%2Fali.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/516785cc7f25b88b0d32e0b8b0697e599120d0f0/gcc%2Fada%2Fali.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fali.adb?ref=516785cc7f25b88b0d32e0b8b0697e599120d0f0", "patch": "@@ -504,6 +504,10 @@ package body ALI is\n                     or else Nextc = '<' or else Nextc = '>'\n                     or else Nextc = '=';\n \n+                  --  Terminate on comma\n+\n+                  exit when Nextc = ',';\n+\n                   --  Terminate if left bracket not part of wide char sequence\n                   --  Note that we only recognize brackets notation so far ???\n \n@@ -2389,12 +2393,21 @@ package body ALI is\n \n                         --  Imported entities reference as in:\n                         --    494b<c,__gnat_copy_attribs>25\n-                        --  ??? Simply skipped for now\n \n                         if Nextc = '<' then\n-                           while Getc /= '>' loop\n-                              null;\n-                           end loop;\n+                           Skipc;\n+                           XR.Imported_Lang := Get_Name;\n+\n+                           pragma Assert (Nextc = ',');\n+                           Skipc;\n+\n+                           XR.Imported_Name := Get_Name;\n+\n+                           pragma Assert (Nextc = '>');\n+                           Skipc;\n+                        else\n+                           XR.Imported_Lang := No_Name;\n+                           XR.Imported_Name := No_Name;\n                         end if;\n \n                         XR.Col   := Get_Nat;"}, {"sha": "b2b9b3d7ffcbe64362095c342f46404b442daf5f", "filename": "gcc/ada/ali.ads", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/516785cc7f25b88b0d32e0b8b0697e599120d0f0/gcc%2Fada%2Fali.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/516785cc7f25b88b0d32e0b8b0697e599120d0f0/gcc%2Fada%2Fali.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fali.ads?ref=516785cc7f25b88b0d32e0b8b0697e599120d0f0", "patch": "@@ -975,6 +975,10 @@ package ALI is\n       --     ref1 is a reference to an entity that was instantied at ref2.\n       --     ref2 itself is also the result of an instantiation, that took\n       --     place at ref3\n+\n+      Imported_Lang : Name_Id := No_Name;\n+      Imported_Name : Name_Id := No_Name;\n+      --  Language and name of imported entity reference\n    end record;\n \n    package Xref is new Table.Table ("}, {"sha": "7fc3e5e466e50a3515b4babdb3e4365414e5af82", "filename": "gcc/ada/g-socket.adb", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/516785cc7f25b88b0d32e0b8b0697e599120d0f0/gcc%2Fada%2Fg-socket.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/516785cc7f25b88b0d32e0b8b0697e599120d0f0/gcc%2Fada%2Fg-socket.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socket.adb?ref=516785cc7f25b88b0d32e0b8b0697e599120d0f0", "patch": "@@ -594,8 +594,10 @@ package body GNAT.Sockets is\n       Socket : Socket_Type)\n    is\n       Last : aliased C.int := C.int (Item.Last);\n+\n    begin\n       Check_For_Fd_Set (Socket);\n+\n       if Item.Last /= No_Socket then\n          Remove_Socket_From_Set (Item.Set'Access, C.int (Socket));\n          Last_Socket_In_Set (Item.Set'Access, Last'Unchecked_Access);\n@@ -1473,6 +1475,7 @@ package body GNAT.Sockets is\n    is\n    begin\n       Check_For_Fd_Set (Socket);\n+\n       return Item.Last /= No_Socket\n         and then Socket <= Item.Last\n         and then Is_Socket_In_Set (Item.Set'Access, C.int (Socket)) /= 0;\n@@ -2120,6 +2123,7 @@ package body GNAT.Sockets is\n    procedure Set (Item : in out Socket_Set_Type; Socket : Socket_Type) is\n    begin\n       Check_For_Fd_Set (Socket);\n+\n       if Item.Last = No_Socket then\n \n          --  Uninitialized socket set, make sure it is properly zeroed out"}, {"sha": "6ba30c71ee4985893d4e069b04c002f3db015d5b", "filename": "gcc/ada/lib-xref.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/516785cc7f25b88b0d32e0b8b0697e599120d0f0/gcc%2Fada%2Flib-xref.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/516785cc7f25b88b0d32e0b8b0697e599120d0f0/gcc%2Fada%2Flib-xref.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-xref.adb?ref=516785cc7f25b88b0d32e0b8b0697e599120d0f0", "patch": "@@ -1163,7 +1163,7 @@ package body Lib.Xref is\n \n       procedure Output_Import_Export_Info (Ent : Entity_Id);\n       --  Output language and external name information for an interfaced\n-      --  entity, using the format <language, external_name>,\n+      --  entity, using the format <language, external_name>\n \n       ------------------------\n       -- Get_Type_Reference --"}, {"sha": "fd7473cece6142060fdea40faaf331c16e7568a6", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/516785cc7f25b88b0d32e0b8b0697e599120d0f0/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/516785cc7f25b88b0d32e0b8b0697e599120d0f0/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=516785cc7f25b88b0d32e0b8b0697e599120d0f0", "patch": "@@ -1289,11 +1289,22 @@ package body Sem_Ch13 is\n                when Aspect_Invariant      |\n                     Aspect_Type_Invariant =>\n \n-                  --  Check placement legality\n+                  --  Check placement legality: An invariant must apply to a\n+                  --  private type, or appear in the private part of a spec.\n+                  --  Analysis of the pragma will verify that in the private\n+                  --  part it applies to a completion.\n \n-                  if not Nkind_In (N, N_Private_Type_Declaration,\n+                  if Nkind_In (N, N_Private_Type_Declaration,\n                                       N_Private_Extension_Declaration)\n                   then\n+                     null;\n+\n+                  elsif Nkind (N) = N_Full_Type_Declaration\n+                    and then In_Private_Part (Current_Scope)\n+                  then\n+                     null;\n+\n+                  else\n                      Error_Msg_N\n                        (\"invariant aspect must apply to a private type\", N);\n                   end if;"}, {"sha": "19818bd9e8a655613bf3e3708c2ace5b79a166b1", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/516785cc7f25b88b0d32e0b8b0697e599120d0f0/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/516785cc7f25b88b0d32e0b8b0697e599120d0f0/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=516785cc7f25b88b0d32e0b8b0697e599120d0f0", "patch": "@@ -10088,10 +10088,21 @@ package body Sem_Prag is\n             if Typ = Any_Type then\n                return;\n \n-            elsif not Ekind_In (Typ, E_Private_Type,\n+            --  An invariant must apply to a private type, or appear in the\n+            --  private part of a package spec and apply to a completion.\n+\n+            elsif Ekind_In (Typ, E_Private_Type,\n                                      E_Record_Type_With_Private,\n                                      E_Limited_Private_Type)\n             then\n+               null;\n+\n+            elsif In_Private_Part (Current_Scope)\n+              and then Has_Private_Declaration (Typ)\n+            then\n+               null;\n+\n+            else\n                Error_Pragma_Arg\n                  (\"pragma% only allowed for private type\", Arg1);\n             end if;"}]}