{"sha": "42666defc0d9a2aa4c152874008062bb67f48f59", "node_id": "C_kwDOANBUbNoAKDQyNjY2ZGVmYzBkOWEyYWE0YzE1Mjg3NDAwODA2MmJiNjdmNDhmNTk", "commit": {"author": {"name": "Ju-Zhe Zhong", "email": "juzhe.zhong@rivai.ai", "date": "2023-02-06T05:15:04Z"}, "committer": {"name": "Kito Cheng", "email": "kito.cheng@sifive.com", "date": "2023-02-12T03:04:09Z"}, "message": "RISC-V: Add vsext.vf4 C API tests\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/riscv/rvv/base/vsext_vf4-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vsext_vf4-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vsext_vf4-3.c: New test.\n\t* gcc.target/riscv/rvv/base/vsext_vf4_m-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vsext_vf4_m-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vsext_vf4_m-3.c: New test.\n\t* gcc.target/riscv/rvv/base/vsext_vf4_mu-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vsext_vf4_mu-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vsext_vf4_mu-3.c: New test.\n\t* gcc.target/riscv/rvv/base/vsext_vf4_tu-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vsext_vf4_tu-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vsext_vf4_tu-3.c: New test.\n\t* gcc.target/riscv/rvv/base/vsext_vf4_tum-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vsext_vf4_tum-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vsext_vf4_tum-3.c: New test.\n\t* gcc.target/riscv/rvv/base/vsext_vf4_tumu-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vsext_vf4_tumu-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vsext_vf4_tumu-3.c: New test.", "tree": {"sha": "9ffee1cdef3b27e71bf2b5a0121bc8f9f8514997", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9ffee1cdef3b27e71bf2b5a0121bc8f9f8514997"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/42666defc0d9a2aa4c152874008062bb67f48f59", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42666defc0d9a2aa4c152874008062bb67f48f59", "html_url": "https://github.com/Rust-GCC/gccrs/commit/42666defc0d9a2aa4c152874008062bb67f48f59", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42666defc0d9a2aa4c152874008062bb67f48f59/comments", "author": {"login": "zhongjuzhe", "id": 66454988, "node_id": "MDQ6VXNlcjY2NDU0OTg4", "avatar_url": "https://avatars.githubusercontent.com/u/66454988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhongjuzhe", "html_url": "https://github.com/zhongjuzhe", "followers_url": "https://api.github.com/users/zhongjuzhe/followers", "following_url": "https://api.github.com/users/zhongjuzhe/following{/other_user}", "gists_url": "https://api.github.com/users/zhongjuzhe/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhongjuzhe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhongjuzhe/subscriptions", "organizations_url": "https://api.github.com/users/zhongjuzhe/orgs", "repos_url": "https://api.github.com/users/zhongjuzhe/repos", "events_url": "https://api.github.com/users/zhongjuzhe/events{/privacy}", "received_events_url": "https://api.github.com/users/zhongjuzhe/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "decfa1d5bc5878dbd77db4c523da49868de2057a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/decfa1d5bc5878dbd77db4c523da49868de2057a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/decfa1d5bc5878dbd77db4c523da49868de2057a"}], "stats": {"total": 1242, "additions": 1242, "deletions": 0}, "files": [{"sha": "f853ceafce92ec1bd26b86c4f0246d8f76778796", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vsext_vf4-1.c", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42666defc0d9a2aa4c152874008062bb67f48f59/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42666defc0d9a2aa4c152874008062bb67f48f59/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4-1.c?ref=42666defc0d9a2aa4c152874008062bb67f48f59", "patch": "@@ -0,0 +1,69 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint32mf2_t test___riscv_vsext_vf4_i32mf2(vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i32mf2(op1,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vsext_vf4_i32m1(vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i32m1(op1,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vsext_vf4_i32m2(vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i32m2(op1,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vsext_vf4_i32m4(vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i32m4(op1,vl);\n+}\n+\n+\n+vint32m8_t test___riscv_vsext_vf4_i32m8(vint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i32m8(op1,vl);\n+}\n+\n+\n+vint64m1_t test___riscv_vsext_vf4_i64m1(vint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i64m1(op1,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vsext_vf4_i64m2(vint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i64m2(op1,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vsext_vf4_i64m4(vint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i64m4(op1,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vsext_vf4_i64m8(vint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i64m8(op1,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */"}, {"sha": "0f7c664bfab16bd6b9d498fc28c0b718b0883085", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vsext_vf4-2.c", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42666defc0d9a2aa4c152874008062bb67f48f59/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42666defc0d9a2aa4c152874008062bb67f48f59/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4-2.c?ref=42666defc0d9a2aa4c152874008062bb67f48f59", "patch": "@@ -0,0 +1,69 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint32mf2_t test___riscv_vsext_vf4_i32mf2(vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i32mf2(op1,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vsext_vf4_i32m1(vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i32m1(op1,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vsext_vf4_i32m2(vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i32m2(op1,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vsext_vf4_i32m4(vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i32m4(op1,31);\n+}\n+\n+\n+vint32m8_t test___riscv_vsext_vf4_i32m8(vint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i32m8(op1,31);\n+}\n+\n+\n+vint64m1_t test___riscv_vsext_vf4_i64m1(vint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i64m1(op1,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vsext_vf4_i64m2(vint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i64m2(op1,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vsext_vf4_i64m4(vint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i64m4(op1,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vsext_vf4_i64m8(vint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i64m8(op1,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */"}, {"sha": "4741663e7495b5db2759d8a898534f143f317e71", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vsext_vf4-3.c", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42666defc0d9a2aa4c152874008062bb67f48f59/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42666defc0d9a2aa4c152874008062bb67f48f59/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4-3.c?ref=42666defc0d9a2aa4c152874008062bb67f48f59", "patch": "@@ -0,0 +1,69 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint32mf2_t test___riscv_vsext_vf4_i32mf2(vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i32mf2(op1,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vsext_vf4_i32m1(vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i32m1(op1,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vsext_vf4_i32m2(vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i32m2(op1,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vsext_vf4_i32m4(vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i32m4(op1,32);\n+}\n+\n+\n+vint32m8_t test___riscv_vsext_vf4_i32m8(vint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i32m8(op1,32);\n+}\n+\n+\n+vint64m1_t test___riscv_vsext_vf4_i64m1(vint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i64m1(op1,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vsext_vf4_i64m2(vint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i64m2(op1,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vsext_vf4_i64m4(vint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i64m4(op1,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vsext_vf4_i64m8(vint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i64m8(op1,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */"}, {"sha": "53720508183a9501ef756a3d3743556ed92dd354", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vsext_vf4_m-1.c", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42666defc0d9a2aa4c152874008062bb67f48f59/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4_m-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42666defc0d9a2aa4c152874008062bb67f48f59/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4_m-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4_m-1.c?ref=42666defc0d9a2aa4c152874008062bb67f48f59", "patch": "@@ -0,0 +1,69 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint32mf2_t test___riscv_vsext_vf4_i32mf2_m(vbool64_t mask,vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i32mf2_m(mask,op1,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vsext_vf4_i32m1_m(vbool32_t mask,vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i32m1_m(mask,op1,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vsext_vf4_i32m2_m(vbool16_t mask,vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i32m2_m(mask,op1,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vsext_vf4_i32m4_m(vbool8_t mask,vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i32m4_m(mask,op1,vl);\n+}\n+\n+\n+vint32m8_t test___riscv_vsext_vf4_i32m8_m(vbool4_t mask,vint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i32m8_m(mask,op1,vl);\n+}\n+\n+\n+vint64m1_t test___riscv_vsext_vf4_i64m1_m(vbool64_t mask,vint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i64m1_m(mask,op1,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vsext_vf4_i64m2_m(vbool32_t mask,vint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i64m2_m(mask,op1,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vsext_vf4_i64m4_m(vbool16_t mask,vint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i64m4_m(mask,op1,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vsext_vf4_i64m8_m(vbool8_t mask,vint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i64m8_m(mask,op1,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "cb993f8cea2ff0a029eb0b98709992559a1588d4", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vsext_vf4_m-2.c", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42666defc0d9a2aa4c152874008062bb67f48f59/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4_m-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42666defc0d9a2aa4c152874008062bb67f48f59/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4_m-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4_m-2.c?ref=42666defc0d9a2aa4c152874008062bb67f48f59", "patch": "@@ -0,0 +1,69 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint32mf2_t test___riscv_vsext_vf4_i32mf2_m(vbool64_t mask,vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i32mf2_m(mask,op1,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vsext_vf4_i32m1_m(vbool32_t mask,vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i32m1_m(mask,op1,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vsext_vf4_i32m2_m(vbool16_t mask,vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i32m2_m(mask,op1,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vsext_vf4_i32m4_m(vbool8_t mask,vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i32m4_m(mask,op1,31);\n+}\n+\n+\n+vint32m8_t test___riscv_vsext_vf4_i32m8_m(vbool4_t mask,vint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i32m8_m(mask,op1,31);\n+}\n+\n+\n+vint64m1_t test___riscv_vsext_vf4_i64m1_m(vbool64_t mask,vint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i64m1_m(mask,op1,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vsext_vf4_i64m2_m(vbool32_t mask,vint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i64m2_m(mask,op1,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vsext_vf4_i64m4_m(vbool16_t mask,vint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i64m4_m(mask,op1,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vsext_vf4_i64m8_m(vbool8_t mask,vint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i64m8_m(mask,op1,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "69077cb00a4cdb7c67478cc045488471c17ece54", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vsext_vf4_m-3.c", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42666defc0d9a2aa4c152874008062bb67f48f59/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4_m-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42666defc0d9a2aa4c152874008062bb67f48f59/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4_m-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4_m-3.c?ref=42666defc0d9a2aa4c152874008062bb67f48f59", "patch": "@@ -0,0 +1,69 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint32mf2_t test___riscv_vsext_vf4_i32mf2_m(vbool64_t mask,vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i32mf2_m(mask,op1,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vsext_vf4_i32m1_m(vbool32_t mask,vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i32m1_m(mask,op1,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vsext_vf4_i32m2_m(vbool16_t mask,vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i32m2_m(mask,op1,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vsext_vf4_i32m4_m(vbool8_t mask,vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i32m4_m(mask,op1,32);\n+}\n+\n+\n+vint32m8_t test___riscv_vsext_vf4_i32m8_m(vbool4_t mask,vint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i32m8_m(mask,op1,32);\n+}\n+\n+\n+vint64m1_t test___riscv_vsext_vf4_i64m1_m(vbool64_t mask,vint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i64m1_m(mask,op1,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vsext_vf4_i64m2_m(vbool32_t mask,vint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i64m2_m(mask,op1,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vsext_vf4_i64m4_m(vbool16_t mask,vint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i64m4_m(mask,op1,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vsext_vf4_i64m8_m(vbool8_t mask,vint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i64m8_m(mask,op1,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "59ccaa7483b9451813a5c98e1e37189dc7f5e8fd", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vsext_vf4_mu-1.c", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42666defc0d9a2aa4c152874008062bb67f48f59/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4_mu-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42666defc0d9a2aa4c152874008062bb67f48f59/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4_mu-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4_mu-1.c?ref=42666defc0d9a2aa4c152874008062bb67f48f59", "patch": "@@ -0,0 +1,69 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint32mf2_t test___riscv_vsext_vf4_i32mf2_mu(vbool64_t mask,vint32mf2_t merge,vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i32mf2_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vsext_vf4_i32m1_mu(vbool32_t mask,vint32m1_t merge,vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i32m1_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vsext_vf4_i32m2_mu(vbool16_t mask,vint32m2_t merge,vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i32m2_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vsext_vf4_i32m4_mu(vbool8_t mask,vint32m4_t merge,vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i32m4_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vint32m8_t test___riscv_vsext_vf4_i32m8_mu(vbool4_t mask,vint32m8_t merge,vint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i32m8_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vint64m1_t test___riscv_vsext_vf4_i64m1_mu(vbool64_t mask,vint64m1_t merge,vint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i64m1_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vsext_vf4_i64m2_mu(vbool32_t mask,vint64m2_t merge,vint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i64m2_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vsext_vf4_i64m4_mu(vbool16_t mask,vint64m4_t merge,vint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i64m4_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vsext_vf4_i64m8_mu(vbool8_t mask,vint64m8_t merge,vint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i64m8_mu(mask,merge,op1,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "13766dfded7037bb22df3ac729ef3e2374e2f53a", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vsext_vf4_mu-2.c", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42666defc0d9a2aa4c152874008062bb67f48f59/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4_mu-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42666defc0d9a2aa4c152874008062bb67f48f59/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4_mu-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4_mu-2.c?ref=42666defc0d9a2aa4c152874008062bb67f48f59", "patch": "@@ -0,0 +1,69 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint32mf2_t test___riscv_vsext_vf4_i32mf2_mu(vbool64_t mask,vint32mf2_t merge,vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i32mf2_mu(mask,merge,op1,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vsext_vf4_i32m1_mu(vbool32_t mask,vint32m1_t merge,vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i32m1_mu(mask,merge,op1,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vsext_vf4_i32m2_mu(vbool16_t mask,vint32m2_t merge,vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i32m2_mu(mask,merge,op1,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vsext_vf4_i32m4_mu(vbool8_t mask,vint32m4_t merge,vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i32m4_mu(mask,merge,op1,31);\n+}\n+\n+\n+vint32m8_t test___riscv_vsext_vf4_i32m8_mu(vbool4_t mask,vint32m8_t merge,vint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i32m8_mu(mask,merge,op1,31);\n+}\n+\n+\n+vint64m1_t test___riscv_vsext_vf4_i64m1_mu(vbool64_t mask,vint64m1_t merge,vint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i64m1_mu(mask,merge,op1,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vsext_vf4_i64m2_mu(vbool32_t mask,vint64m2_t merge,vint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i64m2_mu(mask,merge,op1,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vsext_vf4_i64m4_mu(vbool16_t mask,vint64m4_t merge,vint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i64m4_mu(mask,merge,op1,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vsext_vf4_i64m8_mu(vbool8_t mask,vint64m8_t merge,vint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i64m8_mu(mask,merge,op1,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*t[au],\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*t[au],\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*t[au],\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*t[au],\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*t[au],\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "adccce339b68202d09b02a4071801fc8a54a6ccd", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vsext_vf4_mu-3.c", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42666defc0d9a2aa4c152874008062bb67f48f59/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4_mu-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42666defc0d9a2aa4c152874008062bb67f48f59/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4_mu-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4_mu-3.c?ref=42666defc0d9a2aa4c152874008062bb67f48f59", "patch": "@@ -0,0 +1,69 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint32mf2_t test___riscv_vsext_vf4_i32mf2_mu(vbool64_t mask,vint32mf2_t merge,vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i32mf2_mu(mask,merge,op1,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vsext_vf4_i32m1_mu(vbool32_t mask,vint32m1_t merge,vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i32m1_mu(mask,merge,op1,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vsext_vf4_i32m2_mu(vbool16_t mask,vint32m2_t merge,vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i32m2_mu(mask,merge,op1,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vsext_vf4_i32m4_mu(vbool8_t mask,vint32m4_t merge,vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i32m4_mu(mask,merge,op1,32);\n+}\n+\n+\n+vint32m8_t test___riscv_vsext_vf4_i32m8_mu(vbool4_t mask,vint32m8_t merge,vint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i32m8_mu(mask,merge,op1,32);\n+}\n+\n+\n+vint64m1_t test___riscv_vsext_vf4_i64m1_mu(vbool64_t mask,vint64m1_t merge,vint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i64m1_mu(mask,merge,op1,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vsext_vf4_i64m2_mu(vbool32_t mask,vint64m2_t merge,vint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i64m2_mu(mask,merge,op1,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vsext_vf4_i64m4_mu(vbool16_t mask,vint64m4_t merge,vint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i64m4_mu(mask,merge,op1,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vsext_vf4_i64m8_mu(vbool8_t mask,vint64m8_t merge,vint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i64m8_mu(mask,merge,op1,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "5b65b33661f84d8b3d8e6d87539ee5ad18dd1f10", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vsext_vf4_tu-1.c", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42666defc0d9a2aa4c152874008062bb67f48f59/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4_tu-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42666defc0d9a2aa4c152874008062bb67f48f59/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4_tu-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4_tu-1.c?ref=42666defc0d9a2aa4c152874008062bb67f48f59", "patch": "@@ -0,0 +1,69 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint32mf2_t test___riscv_vsext_vf4_i32mf2_tu(vint32mf2_t merge,vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i32mf2_tu(merge,op1,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vsext_vf4_i32m1_tu(vint32m1_t merge,vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i32m1_tu(merge,op1,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vsext_vf4_i32m2_tu(vint32m2_t merge,vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i32m2_tu(merge,op1,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vsext_vf4_i32m4_tu(vint32m4_t merge,vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i32m4_tu(merge,op1,vl);\n+}\n+\n+\n+vint32m8_t test___riscv_vsext_vf4_i32m8_tu(vint32m8_t merge,vint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i32m8_tu(merge,op1,vl);\n+}\n+\n+\n+vint64m1_t test___riscv_vsext_vf4_i64m1_tu(vint64m1_t merge,vint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i64m1_tu(merge,op1,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vsext_vf4_i64m2_tu(vint64m2_t merge,vint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i64m2_tu(merge,op1,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vsext_vf4_i64m4_tu(vint64m4_t merge,vint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i64m4_tu(merge,op1,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vsext_vf4_i64m8_tu(vint64m8_t merge,vint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i64m8_tu(merge,op1,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */"}, {"sha": "975b9e2338917a4a223793e6613ef3c41d76d8e9", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vsext_vf4_tu-2.c", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42666defc0d9a2aa4c152874008062bb67f48f59/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4_tu-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42666defc0d9a2aa4c152874008062bb67f48f59/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4_tu-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4_tu-2.c?ref=42666defc0d9a2aa4c152874008062bb67f48f59", "patch": "@@ -0,0 +1,69 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint32mf2_t test___riscv_vsext_vf4_i32mf2_tu(vint32mf2_t merge,vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i32mf2_tu(merge,op1,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vsext_vf4_i32m1_tu(vint32m1_t merge,vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i32m1_tu(merge,op1,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vsext_vf4_i32m2_tu(vint32m2_t merge,vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i32m2_tu(merge,op1,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vsext_vf4_i32m4_tu(vint32m4_t merge,vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i32m4_tu(merge,op1,31);\n+}\n+\n+\n+vint32m8_t test___riscv_vsext_vf4_i32m8_tu(vint32m8_t merge,vint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i32m8_tu(merge,op1,31);\n+}\n+\n+\n+vint64m1_t test___riscv_vsext_vf4_i64m1_tu(vint64m1_t merge,vint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i64m1_tu(merge,op1,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vsext_vf4_i64m2_tu(vint64m2_t merge,vint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i64m2_tu(merge,op1,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vsext_vf4_i64m4_tu(vint64m4_t merge,vint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i64m4_tu(merge,op1,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vsext_vf4_i64m8_tu(vint64m8_t merge,vint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i64m8_tu(merge,op1,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */"}, {"sha": "173725af839da78eb80cd354e10068f0dec23c3f", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vsext_vf4_tu-3.c", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42666defc0d9a2aa4c152874008062bb67f48f59/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4_tu-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42666defc0d9a2aa4c152874008062bb67f48f59/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4_tu-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4_tu-3.c?ref=42666defc0d9a2aa4c152874008062bb67f48f59", "patch": "@@ -0,0 +1,69 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint32mf2_t test___riscv_vsext_vf4_i32mf2_tu(vint32mf2_t merge,vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i32mf2_tu(merge,op1,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vsext_vf4_i32m1_tu(vint32m1_t merge,vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i32m1_tu(merge,op1,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vsext_vf4_i32m2_tu(vint32m2_t merge,vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i32m2_tu(merge,op1,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vsext_vf4_i32m4_tu(vint32m4_t merge,vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i32m4_tu(merge,op1,32);\n+}\n+\n+\n+vint32m8_t test___riscv_vsext_vf4_i32m8_tu(vint32m8_t merge,vint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i32m8_tu(merge,op1,32);\n+}\n+\n+\n+vint64m1_t test___riscv_vsext_vf4_i64m1_tu(vint64m1_t merge,vint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i64m1_tu(merge,op1,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vsext_vf4_i64m2_tu(vint64m2_t merge,vint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i64m2_tu(merge,op1,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vsext_vf4_i64m4_tu(vint64m4_t merge,vint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i64m4_tu(merge,op1,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vsext_vf4_i64m8_tu(vint64m8_t merge,vint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i64m8_tu(merge,op1,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */"}, {"sha": "5f54036eef57c5f96265076cc5c601482cb05a48", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vsext_vf4_tum-1.c", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42666defc0d9a2aa4c152874008062bb67f48f59/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4_tum-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42666defc0d9a2aa4c152874008062bb67f48f59/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4_tum-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4_tum-1.c?ref=42666defc0d9a2aa4c152874008062bb67f48f59", "patch": "@@ -0,0 +1,69 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint32mf2_t test___riscv_vsext_vf4_i32mf2_tum(vbool64_t mask,vint32mf2_t merge,vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i32mf2_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vsext_vf4_i32m1_tum(vbool32_t mask,vint32m1_t merge,vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i32m1_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vsext_vf4_i32m2_tum(vbool16_t mask,vint32m2_t merge,vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i32m2_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vsext_vf4_i32m4_tum(vbool8_t mask,vint32m4_t merge,vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i32m4_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vint32m8_t test___riscv_vsext_vf4_i32m8_tum(vbool4_t mask,vint32m8_t merge,vint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i32m8_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vint64m1_t test___riscv_vsext_vf4_i64m1_tum(vbool64_t mask,vint64m1_t merge,vint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i64m1_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vsext_vf4_i64m2_tum(vbool32_t mask,vint64m2_t merge,vint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i64m2_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vsext_vf4_i64m4_tum(vbool16_t mask,vint64m4_t merge,vint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i64m4_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vsext_vf4_i64m8_tum(vbool8_t mask,vint64m8_t merge,vint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i64m8_tum(mask,merge,op1,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "5b48fcbda92530d5ae945a5b5466060065237eac", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vsext_vf4_tum-2.c", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42666defc0d9a2aa4c152874008062bb67f48f59/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4_tum-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42666defc0d9a2aa4c152874008062bb67f48f59/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4_tum-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4_tum-2.c?ref=42666defc0d9a2aa4c152874008062bb67f48f59", "patch": "@@ -0,0 +1,69 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint32mf2_t test___riscv_vsext_vf4_i32mf2_tum(vbool64_t mask,vint32mf2_t merge,vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i32mf2_tum(mask,merge,op1,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vsext_vf4_i32m1_tum(vbool32_t mask,vint32m1_t merge,vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i32m1_tum(mask,merge,op1,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vsext_vf4_i32m2_tum(vbool16_t mask,vint32m2_t merge,vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i32m2_tum(mask,merge,op1,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vsext_vf4_i32m4_tum(vbool8_t mask,vint32m4_t merge,vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i32m4_tum(mask,merge,op1,31);\n+}\n+\n+\n+vint32m8_t test___riscv_vsext_vf4_i32m8_tum(vbool4_t mask,vint32m8_t merge,vint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i32m8_tum(mask,merge,op1,31);\n+}\n+\n+\n+vint64m1_t test___riscv_vsext_vf4_i64m1_tum(vbool64_t mask,vint64m1_t merge,vint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i64m1_tum(mask,merge,op1,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vsext_vf4_i64m2_tum(vbool32_t mask,vint64m2_t merge,vint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i64m2_tum(mask,merge,op1,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vsext_vf4_i64m4_tum(vbool16_t mask,vint64m4_t merge,vint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i64m4_tum(mask,merge,op1,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vsext_vf4_i64m8_tum(vbool8_t mask,vint64m8_t merge,vint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i64m8_tum(mask,merge,op1,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "0a620e4a1ea20b230586c0509e3b2ac400889944", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vsext_vf4_tum-3.c", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42666defc0d9a2aa4c152874008062bb67f48f59/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4_tum-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42666defc0d9a2aa4c152874008062bb67f48f59/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4_tum-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4_tum-3.c?ref=42666defc0d9a2aa4c152874008062bb67f48f59", "patch": "@@ -0,0 +1,69 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint32mf2_t test___riscv_vsext_vf4_i32mf2_tum(vbool64_t mask,vint32mf2_t merge,vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i32mf2_tum(mask,merge,op1,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vsext_vf4_i32m1_tum(vbool32_t mask,vint32m1_t merge,vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i32m1_tum(mask,merge,op1,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vsext_vf4_i32m2_tum(vbool16_t mask,vint32m2_t merge,vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i32m2_tum(mask,merge,op1,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vsext_vf4_i32m4_tum(vbool8_t mask,vint32m4_t merge,vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i32m4_tum(mask,merge,op1,32);\n+}\n+\n+\n+vint32m8_t test___riscv_vsext_vf4_i32m8_tum(vbool4_t mask,vint32m8_t merge,vint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i32m8_tum(mask,merge,op1,32);\n+}\n+\n+\n+vint64m1_t test___riscv_vsext_vf4_i64m1_tum(vbool64_t mask,vint64m1_t merge,vint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i64m1_tum(mask,merge,op1,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vsext_vf4_i64m2_tum(vbool32_t mask,vint64m2_t merge,vint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i64m2_tum(mask,merge,op1,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vsext_vf4_i64m4_tum(vbool16_t mask,vint64m4_t merge,vint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i64m4_tum(mask,merge,op1,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vsext_vf4_i64m8_tum(vbool8_t mask,vint64m8_t merge,vint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i64m8_tum(mask,merge,op1,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "0419de809276e74bd8e799c234a7de4e16a2c5e1", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vsext_vf4_tumu-1.c", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42666defc0d9a2aa4c152874008062bb67f48f59/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4_tumu-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42666defc0d9a2aa4c152874008062bb67f48f59/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4_tumu-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4_tumu-1.c?ref=42666defc0d9a2aa4c152874008062bb67f48f59", "patch": "@@ -0,0 +1,69 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint32mf2_t test___riscv_vsext_vf4_i32mf2_tumu(vbool64_t mask,vint32mf2_t merge,vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i32mf2_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vsext_vf4_i32m1_tumu(vbool32_t mask,vint32m1_t merge,vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i32m1_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vsext_vf4_i32m2_tumu(vbool16_t mask,vint32m2_t merge,vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i32m2_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vsext_vf4_i32m4_tumu(vbool8_t mask,vint32m4_t merge,vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i32m4_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vint32m8_t test___riscv_vsext_vf4_i32m8_tumu(vbool4_t mask,vint32m8_t merge,vint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i32m8_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vint64m1_t test___riscv_vsext_vf4_i64m1_tumu(vbool64_t mask,vint64m1_t merge,vint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i64m1_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vsext_vf4_i64m2_tumu(vbool32_t mask,vint64m2_t merge,vint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i64m2_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vsext_vf4_i64m4_tumu(vbool16_t mask,vint64m4_t merge,vint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i64m4_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vsext_vf4_i64m8_tumu(vbool8_t mask,vint64m8_t merge,vint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i64m8_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "4451144077c3cdfcc76f3f63095f6c971b9a5b4f", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vsext_vf4_tumu-2.c", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42666defc0d9a2aa4c152874008062bb67f48f59/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4_tumu-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42666defc0d9a2aa4c152874008062bb67f48f59/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4_tumu-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4_tumu-2.c?ref=42666defc0d9a2aa4c152874008062bb67f48f59", "patch": "@@ -0,0 +1,69 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint32mf2_t test___riscv_vsext_vf4_i32mf2_tumu(vbool64_t mask,vint32mf2_t merge,vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i32mf2_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vsext_vf4_i32m1_tumu(vbool32_t mask,vint32m1_t merge,vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i32m1_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vsext_vf4_i32m2_tumu(vbool16_t mask,vint32m2_t merge,vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i32m2_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vsext_vf4_i32m4_tumu(vbool8_t mask,vint32m4_t merge,vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i32m4_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vint32m8_t test___riscv_vsext_vf4_i32m8_tumu(vbool4_t mask,vint32m8_t merge,vint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i32m8_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vint64m1_t test___riscv_vsext_vf4_i64m1_tumu(vbool64_t mask,vint64m1_t merge,vint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i64m1_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vsext_vf4_i64m2_tumu(vbool32_t mask,vint64m2_t merge,vint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i64m2_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vsext_vf4_i64m4_tumu(vbool16_t mask,vint64m4_t merge,vint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i64m4_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vsext_vf4_i64m8_tumu(vbool8_t mask,vint64m8_t merge,vint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i64m8_tumu(mask,merge,op1,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*tu,\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*tu,\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*tu,\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*tu,\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*tu,\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*tu,\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*tu,\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*tu,\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*tu,\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "71bd40dcae70a5cc1cfa952582806112cb8a29c1", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vsext_vf4_tumu-3.c", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42666defc0d9a2aa4c152874008062bb67f48f59/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4_tumu-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42666defc0d9a2aa4c152874008062bb67f48f59/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4_tumu-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4_tumu-3.c?ref=42666defc0d9a2aa4c152874008062bb67f48f59", "patch": "@@ -0,0 +1,69 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint32mf2_t test___riscv_vsext_vf4_i32mf2_tumu(vbool64_t mask,vint32mf2_t merge,vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i32mf2_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vsext_vf4_i32m1_tumu(vbool32_t mask,vint32m1_t merge,vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i32m1_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vsext_vf4_i32m2_tumu(vbool16_t mask,vint32m2_t merge,vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i32m2_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vsext_vf4_i32m4_tumu(vbool8_t mask,vint32m4_t merge,vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i32m4_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vint32m8_t test___riscv_vsext_vf4_i32m8_tumu(vbool4_t mask,vint32m8_t merge,vint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i32m8_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vint64m1_t test___riscv_vsext_vf4_i64m1_tumu(vbool64_t mask,vint64m1_t merge,vint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i64m1_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vsext_vf4_i64m2_tumu(vbool32_t mask,vint64m2_t merge,vint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i64m2_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vsext_vf4_i64m4_tumu(vbool16_t mask,vint64m4_t merge,vint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i64m4_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vsext_vf4_i64m8_tumu(vbool8_t mask,vint64m8_t merge,vint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_i64m8_tumu(mask,merge,op1,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}]}