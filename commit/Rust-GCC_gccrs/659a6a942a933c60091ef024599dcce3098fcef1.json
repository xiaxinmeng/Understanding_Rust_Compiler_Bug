{"sha": "659a6a942a933c60091ef024599dcce3098fcef1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjU5YTZhOTQyYTkzM2M2MDA5MWVmMDI0NTk5ZGNjZTMwOThmY2VmMQ==", "commit": {"author": {"name": "Oleg Endo", "email": "olegendo@gcc.gnu.org", "date": "2014-10-08T23:13:02Z"}, "committer": {"name": "Oleg Endo", "email": "olegendo@gcc.gnu.org", "date": "2014-10-08T23:13:02Z"}, "message": "re PR target/52941 (SH Target: Add support for movco.l / movli.l atomics on SH4A)\n\ngcc/\n\tPR target/52941\n\t* config/sh/sync.md (atomic_exchangesi_hard, atomic_exchange<mode>_hard,\n\tatomic_fetch_<fetchop_name>si_hard,\n\tatomic_fetch_<fetchop_name><mode>_hard, atomic_fetch_nandsi_hard,\n\tatomic_fetch_nand<mode>_hard, atomic_<fetchop_name>_fetchsi_hard,\n\tatomic_<fetchop_name>_fetch<mode>_hard, atomic_nand_fetchsi_hard,\n\tatomic_nand_fetch<mode>_hard): Add missing set of T_REG.\n\nFrom-SVN: r216018", "tree": {"sha": "6ca0d94cca4aa432577cee5a1faffb78dec5085d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6ca0d94cca4aa432577cee5a1faffb78dec5085d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/659a6a942a933c60091ef024599dcce3098fcef1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/659a6a942a933c60091ef024599dcce3098fcef1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/659a6a942a933c60091ef024599dcce3098fcef1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/659a6a942a933c60091ef024599dcce3098fcef1/comments", "author": null, "committer": null, "parents": [{"sha": "e0e6414afc3f0dea0f0c03a7ac3b70b35ded9e62", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0e6414afc3f0dea0f0c03a7ac3b70b35ded9e62", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e0e6414afc3f0dea0f0c03a7ac3b70b35ded9e62"}], "stats": {"total": 24, "additions": 22, "deletions": 2}, "files": [{"sha": "30d3c021a81b72130295cc494589dcee140d158d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/659a6a942a933c60091ef024599dcce3098fcef1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/659a6a942a933c60091ef024599dcce3098fcef1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=659a6a942a933c60091ef024599dcce3098fcef1", "patch": "@@ -1,3 +1,13 @@\n+2014-10-08  Oleg Endo  <olegendo@gcc.gnu.org>\n+\n+\tPR target/52941\n+\t* config/sh/sync.md (atomic_exchangesi_hard, atomic_exchange<mode>_hard,\n+\tatomic_fetch_<fetchop_name>si_hard,\n+\tatomic_fetch_<fetchop_name><mode>_hard, atomic_fetch_nandsi_hard,\n+\tatomic_fetch_nand<mode>_hard, atomic_<fetchop_name>_fetchsi_hard,\n+\tatomic_<fetchop_name>_fetch<mode>_hard, atomic_nand_fetchsi_hard,\n+\tatomic_nand_fetch<mode>_hard): Add missing set of T_REG.\n+\n 2014-10-08  Rong Xu  <xur@google.com>\n \n \t* gcov-tool.c (profile_overlap): New driver function"}, {"sha": "a3acaac5617d5017fbeb4d0c584a58e89f6a12af", "filename": "gcc/config/sh/sync.md", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/659a6a942a933c60091ef024599dcce3098fcef1/gcc%2Fconfig%2Fsh%2Fsync.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/659a6a942a933c60091ef024599dcce3098fcef1/gcc%2Fconfig%2Fsh%2Fsync.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsync.md?ref=659a6a942a933c60091ef024599dcce3098fcef1", "patch": "@@ -466,6 +466,7 @@\n    (set (mem:SI (match_dup 1))\n \t(unspec:SI\n \t  [(match_operand:SI 2 \"arith_operand\" \"rI08\")] UNSPEC_ATOMIC))\n+   (set (reg:SI T_REG) (const_int 1))\n    (clobber (reg:SI R0_REG))]\n   \"TARGET_ATOMIC_HARD_LLCS\n    || (TARGET_SH4A_ARCH && TARGET_ATOMIC_ANY && !TARGET_ATOMIC_STRICT)\"\n@@ -484,6 +485,7 @@\n    (set (mem:QIHI (match_dup 1))\n \t(unspec:QIHI\n \t  [(match_operand:QIHI 2 \"register_operand\" \"r\")] UNSPEC_ATOMIC))\n+   (set (reg:SI T_REG) (const_int 1))\n    (clobber (reg:SI R0_REG))\n    (clobber (match_scratch:SI 3 \"=&r\"))\n    (clobber (match_scratch:SI 4 \"=1\"))]\n@@ -617,6 +619,7 @@\n \t  [(FETCHOP:SI (mem:SI (match_dup 1))\n \t     (match_operand:SI 2 \"<fetchop_predicate>\" \"<fetchop_constraint>\"))]\n \t  UNSPEC_ATOMIC))\n+   (set (reg:SI T_REG) (const_int 1))\n    (clobber (reg:SI R0_REG))]\n   \"TARGET_ATOMIC_HARD_LLCS\n    || (TARGET_SH4A_ARCH && TARGET_ATOMIC_ANY && !TARGET_ATOMIC_STRICT)\"\n@@ -637,6 +640,7 @@\n \t  [(FETCHOP:QIHI (mem:QIHI (match_dup 1))\n \t     (match_operand:QIHI 2 \"<fetchop_predicate>\" \"<fetchop_constraint>\"))]\n \t  UNSPEC_ATOMIC))\n+   (set (reg:SI T_REG) (const_int 1))\n    (clobber (reg:SI R0_REG))\n    (clobber (match_scratch:SI 3 \"=&r\"))\n    (clobber (match_scratch:SI 4 \"=1\"))]\n@@ -784,6 +788,7 @@\n \t  [(not:SI (and:SI (mem:SI (match_dup 1))\n \t\t   (match_operand:SI 2 \"logical_operand\" \"rK08\")))]\n \t  UNSPEC_ATOMIC))\n+   (set (reg:SI T_REG) (const_int 1))\n    (clobber (reg:SI R0_REG))]\n   \"TARGET_ATOMIC_HARD_LLCS\n    || (TARGET_SH4A_ARCH && TARGET_ATOMIC_ANY && !TARGET_ATOMIC_STRICT)\"\n@@ -805,6 +810,7 @@\n \t  [(not:QIHI (and:QIHI (mem:QIHI (match_dup 1))\n \t\t     (match_operand:QIHI 2 \"logical_operand\" \"rK08\")))]\n \t  UNSPEC_ATOMIC))\n+   (set (reg:SI T_REG) (const_int 1))\n    (clobber (reg:SI R0_REG))\n    (clobber (match_scratch:SI 3 \"=&r\"))\n    (clobber (match_scratch:SI 4 \"=1\"))]\n@@ -960,7 +966,8 @@\n    (set (mem:SI (match_dup 1))\n \t(unspec:SI\n \t  [(FETCHOP:SI (mem:SI (match_dup 1)) (match_dup 2))]\n-\t  UNSPEC_ATOMIC))]\n+\t  UNSPEC_ATOMIC))\n+   (set (reg:SI T_REG) (const_int 1))]\n   \"TARGET_ATOMIC_HARD_LLCS\n    || (TARGET_SH4A_ARCH && TARGET_ATOMIC_ANY && !TARGET_ATOMIC_STRICT)\"\n {\n@@ -980,6 +987,7 @@\n \t(unspec:QIHI\n \t  [(FETCHOP:QIHI (mem:QIHI (match_dup 1)) (match_dup 2))]\n \t  UNSPEC_ATOMIC))\n+   (set (reg:SI T_REG) (const_int 1))\n    (clobber (reg:SI R0_REG))\n    (clobber (match_scratch:SI 3 \"=&r\"))\n    (clobber (match_scratch:SI 4 \"=1\"))]\n@@ -1124,7 +1132,8 @@\n    (set (mem:SI (match_dup 1))\n \t(unspec:SI\n \t  [(not:SI (and:SI (mem:SI (match_dup 1)) (match_dup 2)))]\n-\t  UNSPEC_ATOMIC))]\n+\t  UNSPEC_ATOMIC))\n+   (set (reg:SI T_REG) (const_int 1))]\n   \"TARGET_ATOMIC_HARD_LLCS\n    || (TARGET_SH4A_ARCH && TARGET_ATOMIC_ANY && !TARGET_ATOMIC_STRICT)\"\n {\n@@ -1145,6 +1154,7 @@\n \t(unspec:QIHI\n \t  [(not:QIHI (and:QIHI (mem:QIHI (match_dup 1)) (match_dup 2)))]\n \t  UNSPEC_ATOMIC))\n+   (set (reg:SI T_REG) (const_int 1))\n    (clobber (reg:SI R0_REG))\n    (clobber (match_scratch:SI 3 \"=&r\"))\n    (clobber (match_scratch:SI 4 \"=1\"))]"}]}