{"sha": "15a932b7e2d647733b468aea0953744520b3a1cf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTVhOTMyYjdlMmQ2NDc3MzNiNDY4YWVhMDk1Mzc0NDUyMGIzYTFjZg==", "commit": {"author": {"name": "Roland McGrath", "email": "roland@gcc.gnu.org", "date": "1995-02-14T00:40:16Z"}, "committer": {"name": "Roland McGrath", "email": "roland@gcc.gnu.org", "date": "1995-02-14T00:40:16Z"}, "message": "Written to use ELF object format.\n\nFrom-SVN: r8949", "tree": {"sha": "1fae169d88b6401a1d981ffc34cd6a9bc0136da6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1fae169d88b6401a1d981ffc34cd6a9bc0136da6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/15a932b7e2d647733b468aea0953744520b3a1cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15a932b7e2d647733b468aea0953744520b3a1cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15a932b7e2d647733b468aea0953744520b3a1cf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15a932b7e2d647733b468aea0953744520b3a1cf/comments", "author": null, "committer": null, "parents": [{"sha": "a2d15ba6d353caccefda575751cc26803ff2369d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2d15ba6d353caccefda575751cc26803ff2369d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2d15ba6d353caccefda575751cc26803ff2369d"}], "stats": {"total": 143, "additions": 122, "deletions": 21}, "files": [{"sha": "5c98b7bf86dc6949c36a5e67bdfe792d725c1a7c", "filename": "gcc/config/mips/gnu.h", "status": "modified", "additions": 122, "deletions": 21, "changes": 143, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15a932b7e2d647733b468aea0953744520b3a1cf/gcc%2Fconfig%2Fmips%2Fgnu.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15a932b7e2d647733b468aea0953744520b3a1cf/gcc%2Fconfig%2Fmips%2Fgnu.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fgnu.h?ref=15a932b7e2d647733b468aea0953744520b3a1cf", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler.  MIPS GNU Hurd version.\n-   Copyright (C) 1994 Free Software Foundation, Inc.\n+   Copyright (C) 1995 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -17,34 +17,135 @@ You should have received a copy of the GNU General Public License\n along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n \n+#include \"mips/mips.h\"\n+\n+#undef SWITCH_TAKES_ARG\n+#undef ASM_FILE_END\n+#undef ASM_OUTPUT_IDENT\n+#undef ASM_OUTPUT_SOURCE_LINE\n+#undef READONLY_DATA_SECTION\n+#undef SELECT_SECTION\n+#undef ASM_DECLARE_FUNCTION_NAME\n+#undef ASM_DECLARE_OBJECT_NAME\n+/* #undef PREFERRED_DEBUGGING_TYPE */\n+\n+#include \"svr4.h\"\n+\n+#undef MD_EXEC_PREFIX\n+#undef MD_STARTFILE_PREFIX\n+#undef TARGET_VERSION\n+#define TARGET_VERSION fprintf (stderr, \" (MIPS GNU/ELF)\");\n+\n+/* Output at beginning of assembler file.  */\n+/* The .file command should always begin the output.  */\n+#undef ASM_FILE_START\n+#define ASM_FILE_START(FILE)\t\t\t\t\t\t\\\n+  do {\t\t\t\t\t\t\t\t\t\\\n+\tmips_asm_file_start (FILE);\t\t\t\t\t\\\n+\tfprintf (FILE, \"\\t.version\\t\\\"01.01\\\"\\n\");\t\t\t\\\n+  } while (0)\n+\n+#undef ASM_FILE_END\n+#define ASM_FILE_END(FILE)\t\t\t\t\t\t\\\n+  do {\t\t\t\t \t\t\t\t\t\\\n+\tmips_asm_file_end(FILE);\t\t\t\t\t\\\n+\tfprintf ((FILE), \"\\t%s\\t\\\"GCC: (GNU) %s\\\"\\n\",\t\t\t\\\n+\t\tIDENT_ASM_OP, version_string);\t\t\t\t\\\n+  } while (0)\n+\n+#undef ASM_OUTPUT_SOURCE_LINE\n+#define ASM_OUTPUT_SOURCE_LINE(FILE, LINE)\t\t\t\t\\\n+  do {\t\t\t\t\t\t\t\t\t\\\n+      ++sym_lineno;\t\t\t\t\t\t\t\\\n+      fprintf ((FILE), \".LM%d:\\n\\t%s %d,0,%d,.LM%d\\n\",\t\t\t\\\n+\t       sym_lineno, ASM_STABN_OP, N_SLINE, (LINE), sym_lineno);\t\\\n+  } while (0)\n+\n+#undef ASM_DECLARE_FUNCTION_NAME\n+#define ASM_DECLARE_FUNCTION_NAME(STREAM, NAME, DECL)\t\t\t\\\n+  do {\t\t\t\t\t\t\t\t\t\\\n+    extern FILE *asm_out_text_file;\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+    if (TARGET_GP_OPT)\t\t\t\t\t\t\t\\\n+      STREAM = asm_out_text_file;\t\t\t\t\t\\\n+    fprintf (STREAM, \"\\t%s\\t \", TYPE_ASM_OP);\t\t\t\t\\\n+    assemble_name (STREAM, NAME);\t\t\t\t\t\\\n+    putc (',', STREAM);\t\t\t\t\t\t\t\\\n+    fprintf (STREAM, TYPE_OPERAND_FMT, \"function\");\t\t\t\\\n+    putc ('\\n', STREAM);\t\t\t\t\t\t\\\n+    ASM_DECLARE_RESULT (STREAM, DECL_RESULT (DECL));\t\t\t\\\n+    current_function_name = NAME;\t\t\t\t\t\\\n+    HALF_PIC_DECLARE (NAME);\t\t\t\t\t\t\\\n+  } while (0)\n+\n+/* Switch  Recognition by gcc.c.  Add -G xx support */\n+#undef SWITCH_TAKES_ARG\n+#define SWITCH_TAKES_ARG(CHAR)\t\t\t\t\t\t\\\n+  ((CHAR) == 'D' || (CHAR) == 'U' || (CHAR) == 'o'\t\t\t\\\n+   || (CHAR) == 'e' || (CHAR) == 'T' || (CHAR) == 'u'\t\t\t\\\n+   || (CHAR) == 'I' || (CHAR) == 'm'\t\t\t\t\t\\\n+   || (CHAR) == 'h' || (CHAR) == 'z'\t\t\t\t\t\\\n+   || (CHAR) == 'L' || (CHAR) == 'A' || (CHAR) == 'G')\n+\n+#undef DEFAULT_PCC_STRUCT_RETURN\n+#define DEFAULT_PCC_STRUCT_RETURN 1\n+\n+#undef DBX_REGISTER_NUMBER\n+#define DBX_REGISTER_NUMBER(REGNO) mips_dbx_regno[ (REGNO) ]\n+\n+#define MIPS_GNU\n+\n #undef CPP_PREDEFINES\n-#define CPP_PREDEFINES \"-Dunix -Dmips -DMACH -D__GNU__ -D__HURD__ \\\n--Asystem(unix) -Asystem(mach) -Acpu(mips) -Amachine(mips) -Asystem(gnu) \\\n+#define CPP_PREDEFINES GNU_CPP_PREDEFINES(\"mips\") \\\n+\"-DMIPSEB -DR3000 -D_MIPSEB -D_R3000 \\\n+-D_MIPS_SZINT=32 -D_MIPS_SZLONG=32 -D_MIPS_SZPTR=32\"\n \n+#undef STANDARD_INCLUDE_DIR\n+#define STANDARD_INCLUDE_DIR \"/include\"\n+\n+#undef ASM_SPEC\n+#define ASM_SPEC \"\\\n+%{mmips-as: \\\n+\t%{!.s:-nocpp} %{.s: %{cpp} %{nocpp}} \\\n+\t%{pipe: %e-pipe is not supported.} \\\n+\t%{K}} \\\n+%{!mmips-as: \\\n+\t%{mcpu=*}} \\\n+%{G*} %{EB} %{EL} %{mips1} %{mips2} %{mips3} %{v} \\\n+%{noasmopt:-O0} \\\n+%{!noasmopt:%{O:-O2} %{O1:-O2} %{O2:-O2} %{O3:-O3}} \\\n+%{g} %{g0} %{g1} %{g2} %{g3} \\\n+%{ggdb:-g} %{ggdb0:-g0} %{ggdb1:-g1} %{ggdb2:-g2} %{ggdb3:-g3} \\\n+%{gstabs:-g} %{gstabs0:-g0} %{gstabs1:-g1} %{gstabs2:-g2} %{gstabs3:-g3} \\\n+%{gstabs+:-g} %{gstabs+0:-g0} %{gstabs+1:-g1} %{gstabs+2:-g2} %{gstabs+3:-g3} \\\n+%{gcoff:-g} %{gcoff0:-g0} %{gcoff1:-g1} %{gcoff2:-g2} %{gcoff3:-g3} \\\n+%{membedded-pic}\"\n+\n+#undef LINK_SPEC\n #define LINK_SPEC \"\\\n %{G*} %{EB} %{EL} %{mips1} %{mips2} %{mips3} \\\n-%{bestGnum} %{shared} %{non_shared}\"\n+%{bestGnum} %{shared} %{non_shared} \\\n+%{call_shared} %{no_archive} %{exact_version} \\\n+%{!shared: %{!non_shared: %{!call_shared: -non_shared}}} \\\n+-systype /gnu/ \"\n+\t\t    \n+#undef LIB_SPEC\n+#define LIB_SPEC \"%{p:-lprof1} %{pg:-lprof1} -lc crtn.o%s\"\n \n-#define MACHINE_TYPE \"MIPS-GNU\"\n+#undef STARTFILE_SPEC\n+#define STARTFILE_SPEC  \"%{pg:gcrt0.o%s} %{!pg:%{p:gcrt0.o%s} %{!p:crt0.o%s}} %{static:-static}\"\n \n-#include \"mips/mips.h\"\n+#undef MACHINE_TYPE\n+#define MACHINE_TYPE \"GNU MIPS/ELF\"\n+\n+#undef YES_UNDERSCORE\n \n-#undef ASM_FINAL_SPEC\n #undef SDB_DEBUGGING_INFO\n+#undef DBX_DEBUGGING_INFO\n #undef MIPS_DEBUGGING_INFO\n+#define DWARF_DEBUGGING_INFO\n \n-/* Generate DBX debugging information.  */\n-#define DBX_DEBUGGING_INFO\n+#define NO_MIPS_SELECT_SECTION\n \n-#undef ASM_OUTPUT_SOURCE_LINE\n-#define ASM_OUTPUT_SOURCE_LINE(STREAM,LINE) \\\n-    fprintf (STREAM, \"\\t.stabd %d,0,%d\\n\", \\\n-\t     N_SLINE, LINE);\n-\n-/* We use BSD object format and our assembler handles .stab<x>. */\n-#undef ASM_STABS_OP\n-#undef ASM_STABN_OP\n-#undef ASM_STABD_OP\n-#define ASM_STABS_OP\t(\".stabs\")\n-#define ASM_STABN_OP\t(\".stabn\")\n-#define ASM_STABD_OP\t(\".stabd\")\n+/* Get machine-independent configuration parameters for the GNU system.  */\n+#include \"gnu.h\""}]}