{"sha": "123f02156122ea13f3bfabdef2b6385a25527158", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTIzZjAyMTU2MTIyZWExM2YzYmZhYmRlZjJiNjM4NWEyNTUyNzE1OA==", "commit": {"author": {"name": "Joffrey Huguet", "email": "huguet@adacore.com", "date": "2019-08-19T08:35:49Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-08-19T08:35:49Z"}, "message": "[Ada] Add formal function parameter equality to SPARK containers\n\nThis patch adds a formal function parameter \"=\" (L, R : Element_Type) to\nSPARK containers. The equality that is used by default for Element_Type\nafter this patch is the primitive equality and not the predefined any\nmore. It also allows to use any function with the appropriate signature\nfor the equality function.\n\n2019-08-19  Joffrey Huguet  <huguet@adacore.com>\n\ngcc/ada/\n\n\t* libgnat/a-cfdlli.ads, libgnat/a-cfhama.ads,\n\tlibgnat/a-cfinve.ads, libgnat/a-cforma.ads,\n\tlibgnat/a-cofove.ads, libgnat/a-cofuma.ads,\n\tlibgnat/a-cofuve.ads: Add formal function parameter \"=\" (L, R :\n\tElement_Type) to the generic packages.\n\nFrom-SVN: r274643", "tree": {"sha": "607945e67d3d966865497f2fcab855ab96f26b1b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/607945e67d3d966865497f2fcab855ab96f26b1b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/123f02156122ea13f3bfabdef2b6385a25527158", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/123f02156122ea13f3bfabdef2b6385a25527158", "html_url": "https://github.com/Rust-GCC/gccrs/commit/123f02156122ea13f3bfabdef2b6385a25527158", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/123f02156122ea13f3bfabdef2b6385a25527158/comments", "author": {"login": "joffreyhuguet", "id": 36951399, "node_id": "MDQ6VXNlcjM2OTUxMzk5", "avatar_url": "https://avatars.githubusercontent.com/u/36951399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joffreyhuguet", "html_url": "https://github.com/joffreyhuguet", "followers_url": "https://api.github.com/users/joffreyhuguet/followers", "following_url": "https://api.github.com/users/joffreyhuguet/following{/other_user}", "gists_url": "https://api.github.com/users/joffreyhuguet/gists{/gist_id}", "starred_url": "https://api.github.com/users/joffreyhuguet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joffreyhuguet/subscriptions", "organizations_url": "https://api.github.com/users/joffreyhuguet/orgs", "repos_url": "https://api.github.com/users/joffreyhuguet/repos", "events_url": "https://api.github.com/users/joffreyhuguet/events{/privacy}", "received_events_url": "https://api.github.com/users/joffreyhuguet/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b1d7f6fe2beffb06c9745e1afba73a6aa7fa9dbd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1d7f6fe2beffb06c9745e1afba73a6aa7fa9dbd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1d7f6fe2beffb06c9745e1afba73a6aa7fa9dbd"}], "stats": {"total": 16, "additions": 16, "deletions": 0}, "files": [{"sha": "8ba0dc4a1d21ac351fe2603fb7bc6060ff75ad3f", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/123f02156122ea13f3bfabdef2b6385a25527158/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/123f02156122ea13f3bfabdef2b6385a25527158/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=123f02156122ea13f3bfabdef2b6385a25527158", "patch": "@@ -1,3 +1,11 @@\n+2019-08-19  Joffrey Huguet  <huguet@adacore.com>\n+\n+\t* libgnat/a-cfdlli.ads, libgnat/a-cfhama.ads,\n+\tlibgnat/a-cfinve.ads, libgnat/a-cforma.ads,\n+\tlibgnat/a-cofove.ads, libgnat/a-cofuma.ads,\n+\tlibgnat/a-cofuve.ads: Add formal function parameter \"=\" (L, R :\n+\tElement_Type) to the generic packages.\n+\n 2019-08-19  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* opt.ads: Clean up left-overs of earlier implementation in"}, {"sha": "b8df023125596732eb6e3c269210b7a91b1dbfcc", "filename": "gcc/ada/libgnat/a-cfdlli.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/123f02156122ea13f3bfabdef2b6385a25527158/gcc%2Fada%2Flibgnat%2Fa-cfdlli.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/123f02156122ea13f3bfabdef2b6385a25527158/gcc%2Fada%2Flibgnat%2Fa-cfdlli.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cfdlli.ads?ref=123f02156122ea13f3bfabdef2b6385a25527158", "patch": "@@ -34,6 +34,7 @@ with Ada.Containers.Functional_Maps;\n \n generic\n    type Element_Type is private;\n+   with function \"=\" (Left, Right : Element_Type) return Boolean is <>;\n \n package Ada.Containers.Formal_Doubly_Linked_Lists with\n   SPARK_Mode"}, {"sha": "c4e822107ed46e6a96fd1205f994c6e1b9f189be", "filename": "gcc/ada/libgnat/a-cfhama.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/123f02156122ea13f3bfabdef2b6385a25527158/gcc%2Fada%2Flibgnat%2Fa-cfhama.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/123f02156122ea13f3bfabdef2b6385a25527158/gcc%2Fada%2Flibgnat%2Fa-cfhama.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cfhama.ads?ref=123f02156122ea13f3bfabdef2b6385a25527158", "patch": "@@ -59,6 +59,7 @@ generic\n    with function Equivalent_Keys\n      (Left  : Key_Type;\n       Right : Key_Type) return Boolean is \"=\";\n+   with function \"=\" (Left, Right : Element_Type) return Boolean is <>;\n \n package Ada.Containers.Formal_Hashed_Maps with\n   SPARK_Mode"}, {"sha": "87940d27bdaad387d0e31fee4b34117a7d7dbd6e", "filename": "gcc/ada/libgnat/a-cfinve.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/123f02156122ea13f3bfabdef2b6385a25527158/gcc%2Fada%2Flibgnat%2Fa-cfinve.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/123f02156122ea13f3bfabdef2b6385a25527158/gcc%2Fada%2Flibgnat%2Fa-cfinve.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cfinve.ads?ref=123f02156122ea13f3bfabdef2b6385a25527158", "patch": "@@ -38,6 +38,7 @@ with Ada.Containers.Functional_Vectors;\n generic\n    type Index_Type is range <>;\n    type Element_Type (<>) is private;\n+   with function \"=\" (Left, Right : Element_Type) return Boolean is <>;\n    Max_Size_In_Storage_Elements : Natural;\n    --  Maximum size of Vector elements in bytes. This has the same meaning as\n    --  in Ada.Containers.Bounded_Holders, with the same restrictions. Note that"}, {"sha": "a13bce4b669821d3a8c9554bc099adcea811a6f6", "filename": "gcc/ada/libgnat/a-cforma.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/123f02156122ea13f3bfabdef2b6385a25527158/gcc%2Fada%2Flibgnat%2Fa-cforma.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/123f02156122ea13f3bfabdef2b6385a25527158/gcc%2Fada%2Flibgnat%2Fa-cforma.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cforma.ads?ref=123f02156122ea13f3bfabdef2b6385a25527158", "patch": "@@ -58,6 +58,7 @@ generic\n    type Element_Type is private;\n \n    with function \"<\" (Left, Right : Key_Type) return Boolean is <>;\n+   with function \"=\" (Left, Right : Element_Type) return Boolean is <>;\n \n package Ada.Containers.Formal_Ordered_Maps with\n   SPARK_Mode"}, {"sha": "b23c6613bf0321dc72048e97c58391663f607191", "filename": "gcc/ada/libgnat/a-cofove.ads", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/123f02156122ea13f3bfabdef2b6385a25527158/gcc%2Fada%2Flibgnat%2Fa-cofove.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/123f02156122ea13f3bfabdef2b6385a25527158/gcc%2Fada%2Flibgnat%2Fa-cofove.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cofove.ads?ref=123f02156122ea13f3bfabdef2b6385a25527158", "patch": "@@ -40,6 +40,8 @@ with Ada.Containers.Functional_Vectors;\n generic\n    type Index_Type is range <>;\n    type Element_Type is private;\n+   with function \"=\" (Left, Right : Element_Type) return Boolean is <>;\n+\n package Ada.Containers.Formal_Vectors with\n   SPARK_Mode\n is"}, {"sha": "bf6e5a8171060bf217ccfad7641b106bb6fcc256", "filename": "gcc/ada/libgnat/a-cofuma.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/123f02156122ea13f3bfabdef2b6385a25527158/gcc%2Fada%2Flibgnat%2Fa-cofuma.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/123f02156122ea13f3bfabdef2b6385a25527158/gcc%2Fada%2Flibgnat%2Fa-cofuma.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cofuma.ads?ref=123f02156122ea13f3bfabdef2b6385a25527158", "patch": "@@ -39,6 +39,7 @@ generic\n    with function Equivalent_Keys\n      (Left  : Key_Type;\n       Right : Key_Type) return Boolean is \"=\";\n+   with function \"=\" (Left, Right : Element_Type) return Boolean is <>;\n \n    Enable_Handling_Of_Equivalence : Boolean := True;\n    --  This constant should only be set to False when no particular handling"}, {"sha": "804d7b0b7edebe91b17908ebcfee48ef5460d76b", "filename": "gcc/ada/libgnat/a-cofuve.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/123f02156122ea13f3bfabdef2b6385a25527158/gcc%2Fada%2Flibgnat%2Fa-cofuve.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/123f02156122ea13f3bfabdef2b6385a25527158/gcc%2Fada%2Flibgnat%2Fa-cofuve.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cofuve.ads?ref=123f02156122ea13f3bfabdef2b6385a25527158", "patch": "@@ -38,6 +38,7 @@ generic\n    --  should have at least one more element at the low end than Index_Type.\n \n    type Element_Type (<>) is private;\n+   with function \"=\" (Left, Right : Element_Type) return Boolean is <>;\n \n package Ada.Containers.Functional_Vectors with SPARK_Mode is\n "}]}