{"sha": "5dbeb128d9d33ef23e15b65dad1c7cc28793692d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWRiZWIxMjhkOWQzM2VmMjNlMTViNjVkYWQxYzdjYzI4NzkzNjkyZA==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "iant@google.com", "date": "2012-09-17T05:15:36Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2012-09-17T05:15:36Z"}, "message": "compile: Detect invalid and likely-bad import statements.\n\n\t* Make-lang.in (go/gogo.o): Depend on filenames.h.\n\nFrom-SVN: r191372", "tree": {"sha": "5324a239d8658af99c9f07bfb4bc67b31c74c90b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5324a239d8658af99c9f07bfb4bc67b31c74c90b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5dbeb128d9d33ef23e15b65dad1c7cc28793692d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5dbeb128d9d33ef23e15b65dad1c7cc28793692d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5dbeb128d9d33ef23e15b65dad1c7cc28793692d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5dbeb128d9d33ef23e15b65dad1c7cc28793692d/comments", "author": null, "committer": null, "parents": [{"sha": "f0e1e86d226c40d8f13f1abd1f8fac7017075000", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0e1e86d226c40d8f13f1abd1f8fac7017075000", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f0e1e86d226c40d8f13f1abd1f8fac7017075000"}], "stats": {"total": 103, "additions": 98, "deletions": 5}, "files": [{"sha": "18a9aa663f9721cf9db90383145f53e456309b78", "filename": "gcc/go/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5dbeb128d9d33ef23e15b65dad1c7cc28793692d/gcc%2Fgo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5dbeb128d9d33ef23e15b65dad1c7cc28793692d/gcc%2Fgo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2FChangeLog?ref=5dbeb128d9d33ef23e15b65dad1c7cc28793692d", "patch": "@@ -1,3 +1,7 @@\n+2012-09-16  Ian Lance Taylor  <iant@google.com>\n+\n+\t* Make-lang.in (go/gogo.o): Depend on filenames.h.\n+\n 2012-08-14   Diego Novillo  <dnovillo@google.com>\n \n \tMerge from cxx-conversion branch.  Configury."}, {"sha": "b3cb2bdbc195d9c4c99ccd172d77d1ac10f3cdf4", "filename": "gcc/go/Make-lang.in", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5dbeb128d9d33ef23e15b65dad1c7cc28793692d/gcc%2Fgo%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5dbeb128d9d33ef23e15b65dad1c7cc28793692d/gcc%2Fgo%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2FMake-lang.in?ref=5dbeb128d9d33ef23e15b65dad1c7cc28793692d", "patch": "@@ -289,10 +289,11 @@ go/gogo-tree.o: go/gofrontend/gogo-tree.cc $(GO_SYSTEM_H) $(TOPLEV_H) \\\n \tconvert.h output.h $(DIAGNOSTIC_H) $(GO_TYPES_H) \\\n \t$(GO_EXPRESSIONS_H) $(GO_STATEMENTS_H) $(GO_RUNTIME_H) \\\n \tgo/gofrontend/backend.h $(GO_GOGO_H)\n-go/gogo.o: go/gofrontend/gogo.cc $(GO_SYSTEM_H) $(GO_C_H) \\\n-\tgo/gofrontend/go-dump.h $(GO_LEX_H) $(GO_TYPES_H) $(GO_STATEMENTS_H) \\\n-\t$(GO_EXPRESSIONS_H) go/gofrontend/dataflow.h $(GO_RUNTIME_H) \\\n-\t$(GO_IMPORT_H) $(GO_EXPORT_H) go/gofrontend/backend.h $(GO_GOGO_H)\n+go/gogo.o: go/gofrontend/gogo.cc $(GO_SYSTEM_H) \\\n+\t$(srcdir)/../include/filenames.h $(GO_C_H) go/gofrontend/go-dump.h \\\n+\t$(GO_LEX_H) $(GO_TYPES_H) $(GO_STATEMENTS_H) $(GO_EXPRESSIONS_H) \\\n+\tgo/gofrontend/dataflow.h $(GO_RUNTIME_H) $(GO_IMPORT_H) \\\n+\t$(GO_EXPORT_H) go/gofrontend/backend.h $(GO_GOGO_H)\n go/import.o: go/gofrontend/import.cc $(GO_SYSTEM_H) \\\n \t$(srcdir)/../include/filenames.h $(srcdir)/../include/simple-object.h \\\n \t$(GO_C_H) $(GO_GOGO_H) $(GO_LEX_H) $(GO_TYPES_H) $(GO_EXPORT_H) \\"}, {"sha": "a434c4df6bb53afd9359ac4316236c2f8716db32", "filename": "gcc/go/gofrontend/gogo.cc", "status": "modified", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5dbeb128d9d33ef23e15b65dad1c7cc28793692d/gcc%2Fgo%2Fgofrontend%2Fgogo.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5dbeb128d9d33ef23e15b65dad1c7cc28793692d/gcc%2Fgo%2Fgofrontend%2Fgogo.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fgogo.cc?ref=5dbeb128d9d33ef23e15b65dad1c7cc28793692d", "patch": "@@ -6,6 +6,8 @@\n \n #include \"go-system.h\"\n \n+#include \"filenames.h\"\n+\n #include \"go-c.h\"\n #include \"go-dump.h\"\n #include \"lex.h\"\n@@ -385,6 +387,57 @@ Gogo::import_package(const std::string& filename,\n \t\t     bool is_local_name_exported,\n \t\t     Location location)\n {\n+  if (filename.empty())\n+    {\n+      error_at(location, \"import path is empty\");\n+      return;\n+    }\n+\n+  const char *pf = filename.data();\n+  const char *pend = pf + filename.length();\n+  while (pf < pend)\n+    {\n+      unsigned int c;\n+      int adv = Lex::fetch_char(pf, &c);\n+      if (adv == 0)\n+\t{\n+\t  error_at(location, \"import path contains invalid UTF-8 sequence\");\n+\t  return;\n+\t}\n+      if (c == '\\0')\n+\t{\n+\t  error_at(location, \"import path contains NUL\");\n+\t  return;\n+\t}\n+      if (c < 0x20 || c == 0x7f)\n+\t{\n+\t  error_at(location, \"import path contains control character\");\n+\t  return;\n+\t}\n+      if (c == '\\\\')\n+\t{\n+\t  error_at(location, \"import path contains backslash; use slash\");\n+\t  return;\n+\t}\n+      if (Lex::is_unicode_space(c))\n+\t{\n+\t  error_at(location, \"import path contains space character\");\n+\t  return;\n+\t}\n+      if (c < 0x7f && strchr(\"!\\\"#$%&'()*,:;<=>?[]^`{|}\", c) != NULL)\n+\t{\n+\t  error_at(location, \"import path contains invalid character '%c'\", c);\n+\t  return;\n+\t}\n+      pf += adv;\n+    }\n+\n+  if (IS_ABSOLUTE_PATH(filename.c_str()))\n+    {\n+      error_at(location, \"import path cannot be absolute path\");\n+      return;\n+    }\n+\n   if (filename == \"unsafe\")\n     {\n       this->import_unsafe(local_name, is_local_name_exported, location);"}, {"sha": "42d444b5fbc6a9b31ad459bac05241ddd1ef6d41", "filename": "gcc/go/gofrontend/lex.cc", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5dbeb128d9d33ef23e15b65dad1c7cc28793692d/gcc%2Fgo%2Fgofrontend%2Flex.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5dbeb128d9d33ef23e15b65dad1c7cc28793692d/gcc%2Fgo%2Fgofrontend%2Flex.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Flex.cc?ref=5dbeb128d9d33ef23e15b65dad1c7cc28793692d", "patch": "@@ -1705,6 +1705,27 @@ struct Unicode_range\n   unsigned int stride;\n };\n \n+// A table of whitespace characters--Unicode code points classified as\n+// \"Space\", \"C\" locale whitespace characters, the \"next line\" control\n+// character (0085), the line separator (2028), the paragraph\n+// separator (2029), and the \"zero-width non-break space\" (feff).\n+\n+static const Unicode_range unicode_space[] =\n+{\n+  { 0x0009, 0x000d, 1 },\n+  { 0x0020, 0x0020, 1 },\n+  { 0x0085, 0x0085, 1 },\n+  { 0x00a0, 0x00a0, 1 },\n+  { 0x1680, 0x1680, 1 },\n+  { 0x180e, 0x180e, 1 },\n+  { 0x2000, 0x200a, 1 },\n+  { 0x2028, 0x2029, 1 },\n+  { 0x202f, 0x202f, 1 },\n+  { 0x205f, 0x205f, 1 },\n+  { 0x3000, 0x3000, 1 },\n+  { 0xfeff, 0xfeff, 1 },\n+};\n+\n // A table of Unicode digits--Unicode code points classified as\n // \"Digit\".\n \n@@ -2294,6 +2315,15 @@ Lex::is_in_unicode_range(unsigned int c, const Unicode_range* ranges,\n     }\n }\n \n+// Return whether C is a space character.\n+\n+bool\n+Lex::is_unicode_space(unsigned int c)\n+{\n+  return Lex::is_in_unicode_range(c, unicode_space,\n+\t\t\t\t  ARRAY_SIZE(unicode_space));\n+}\n+\n // Return whether C is a Unicode digit--a Unicode code point\n // classified as \"Digit\".\n "}, {"sha": "074bbaea4ed463445e1e66a32f0e833c51ca8796", "filename": "gcc/go/gofrontend/lex.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5dbeb128d9d33ef23e15b65dad1c7cc28793692d/gcc%2Fgo%2Fgofrontend%2Flex.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5dbeb128d9d33ef23e15b65dad1c7cc28793692d/gcc%2Fgo%2Fgofrontend%2Flex.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Flex.h?ref=5dbeb128d9d33ef23e15b65dad1c7cc28793692d", "patch": "@@ -375,6 +375,10 @@ class Lex\n   static int\n   fetch_char(const char* str, unsigned int *value);\n \n+  // Return whether C is a Unicode or \"C\" locale space character.\n+  static bool\n+  is_unicode_space(unsigned int c);\n+\n  private:\n   ssize_t\n   get_line();"}, {"sha": "cfcc00f99ee4b01efa9a821a40503a9c993e4944", "filename": "gcc/go/gofrontend/parse.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5dbeb128d9d33ef23e15b65dad1c7cc28793692d/gcc%2Fgo%2Fgofrontend%2Fparse.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5dbeb128d9d33ef23e15b65dad1c7cc28793692d/gcc%2Fgo%2Fgofrontend%2Fparse.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fparse.cc?ref=5dbeb128d9d33ef23e15b65dad1c7cc28793692d", "patch": "@@ -5337,7 +5337,8 @@ Parse::import_spec(void*)\n \n   if (!token->is_string())\n     {\n-      error_at(this->location(), \"missing import package name\");\n+      error_at(this->location(), \"import statement not a string\");\n+      this->advance_token();\n       return;\n     }\n "}]}