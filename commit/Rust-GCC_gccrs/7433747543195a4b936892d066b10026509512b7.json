{"sha": "7433747543195a4b936892d066b10026509512b7", "node_id": "C_kwDOANBUbNoAKDc0MzM3NDc1NDMxOTVhNGI5MzY4OTJkMDY2YjEwMDI2NTA5NTEyYjc", "commit": {"author": {"name": "Gaius Mulley", "email": "gaiusmod2@gmail.com", "date": "2023-02-06T15:24:06Z"}, "committer": {"name": "Gaius Mulley", "email": "gaiusmod2@gmail.com", "date": "2023-02-06T15:24:06Z"}, "message": "Remove unused variables and procedures.\n\nRemove unused variables and procedures (and remove build\nwarning clutter).\n\ngcc/m2/ChangeLog:\n\n\t* gm2-compiler/M2Preprocess.mod (BaseName): Comment out.\n\t* gm2-lang.cc (opt): Remove.\n\t* gm2spec.cc (add_include): Remove.\n\t(full_libraries): Remove.\n\t(concat_option): Remove.\n\nSigned-off-by: Gaius Mulley <gaiusmod2@gmail.com>", "tree": {"sha": "76647277d1e73b120a54fb994632fc72270c456c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/76647277d1e73b120a54fb994632fc72270c456c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7433747543195a4b936892d066b10026509512b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7433747543195a4b936892d066b10026509512b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7433747543195a4b936892d066b10026509512b7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7433747543195a4b936892d066b10026509512b7/comments", "author": null, "committer": null, "parents": [{"sha": "277e1f30a5e4e634304a7b8a532825119f0ea47f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/277e1f30a5e4e634304a7b8a532825119f0ea47f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/277e1f30a5e4e634304a7b8a532825119f0ea47f"}], "stats": {"total": 31, "additions": 2, "deletions": 29}, "files": [{"sha": "d53228b4675288fb1d14db341baed38409e8de2e", "filename": "gcc/m2/gm2-compiler/M2Preprocess.mod", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7433747543195a4b936892d066b10026509512b7/gcc%2Fm2%2Fgm2-compiler%2FM2Preprocess.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7433747543195a4b936892d066b10026509512b7/gcc%2Fm2%2Fgm2-compiler%2FM2Preprocess.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2Preprocess.mod?ref=7433747543195a4b936892d066b10026509512b7", "patch": "@@ -101,6 +101,7 @@ END GetFileName ;\n    Return basename.\n *)\n \n+(*\n PROCEDURE BaseName (Path: String) : String ;\n VAR\n    ext,\n@@ -120,6 +121,7 @@ BEGIN\n    END ;\n    RETURN Dup (Slice(Path, basename, ext))\n END BaseName ;\n+*)\n \n (*\n    MakeSaveTempsFileName - return a temporary file like "}, {"sha": "d9b63bee655222b8799106f92adbeff6bb216933", "filename": "gcc/m2/gm2-lang.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7433747543195a4b936892d066b10026509512b7/gcc%2Fm2%2Fgm2-lang.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7433747543195a4b936892d066b10026509512b7/gcc%2Fm2%2Fgm2-lang.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-lang.cc?ref=7433747543195a4b936892d066b10026509512b7", "patch": "@@ -330,7 +330,6 @@ gm2_langhook_handle_option (\n   enum opt_code code = (enum opt_code)scode;\n \n   const struct cl_option *option = &cl_options[scode];\n-  const char *opt = (const char *)option->opt_text;\n   /* ignore file names.  */\n   if (code == N_OPTS)\n     return 1;"}, {"sha": "0645be9fe02fe3ab0521c7faa9d58c6e24e750bd", "filename": "gcc/m2/gm2spec.cc", "status": "modified", "additions": 0, "deletions": 28, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7433747543195a4b936892d066b10026509512b7/gcc%2Fm2%2Fgm2spec.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7433747543195a4b936892d066b10026509512b7/gcc%2Fm2%2Fgm2spec.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2spec.cc?ref=7433747543195a4b936892d066b10026509512b7", "patch": "@@ -129,8 +129,6 @@ static const char *library_abbrev[maxlib]\n    -flibs=m2pim,m2iso respectively.  This provides a match between\n    the dialect of Modula-2 and the library set.  */\n \n-static const char *add_include (const char *libpath, const char *library);\n-\n static bool seen_scaffold_static = false;\n static bool seen_scaffold_dynamic = false;\n static bool seen_scaffold_main = false;\n@@ -150,7 +148,6 @@ static void append_arg (const struct cl_decoded_option *);\n /* The new argument list will be built here.  */\n static unsigned int gm2_newargc;\n static struct cl_decoded_option *gm2_new_decoded_options;\n-static const char *full_libraries = NULL;\n static const char *libraries = NULL;  /* Abbreviated libraries.  */\n \n \n@@ -241,31 +238,6 @@ safe_strdup (const char *s)\n   return NULL;\n }\n \n-static char *\n-concat_option (char *dest, const char *pre, const char *path, const char *post)\n-{\n-  if (dest == NULL)\n-    {\n-      dest = (char *) xmalloc (strlen (pre) + strlen (path) + strlen (post) + 1);\n-      strcpy (dest, pre);\n-      strcat (dest, path);\n-      strcat (dest, post);\n-      return dest;\n-    }\n-  else\n-    {\n-      char *result = (char *) xmalloc (strlen (dest) + strlen (pre)\n-\t\t\t\t       + strlen (path) + strlen (post) + 1 + 1);\n-      strcpy (result, dest);\n-      strcat (result, \" \");\n-      strcat (result, pre);\n-      strcat (result, path);\n-      strcat (result, post);\n-      free (dest);\n-      return result;\n-    }\n-}\n-\n /* add_default_libs adds the -l option which is derived from the\n    libraries.  */\n "}]}