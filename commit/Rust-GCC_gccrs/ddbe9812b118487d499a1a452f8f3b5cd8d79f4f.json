{"sha": "ddbe9812b118487d499a1a452f8f3b5cd8d79f4f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGRiZTk4MTJiMTE4NDg3ZDQ5OWExYTQ1MmY4ZjNiNWNkOGQ3OWY0Zg==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-04-17T13:33:15Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-04-17T13:33:15Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r761", "tree": {"sha": "5b2df8146a766efe1d63f8c9310afb89c910d753", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5b2df8146a766efe1d63f8c9310afb89c910d753"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ddbe9812b118487d499a1a452f8f3b5cd8d79f4f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddbe9812b118487d499a1a452f8f3b5cd8d79f4f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ddbe9812b118487d499a1a452f8f3b5cd8d79f4f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddbe9812b118487d499a1a452f8f3b5cd8d79f4f/comments", "author": null, "committer": null, "parents": [{"sha": "935e11b058cac46514fd83997c8edda3c0f03d59", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/935e11b058cac46514fd83997c8edda3c0f03d59", "html_url": "https://github.com/Rust-GCC/gccrs/commit/935e11b058cac46514fd83997c8edda3c0f03d59"}], "stats": {"total": 19, "additions": 17, "deletions": 2}, "files": [{"sha": "7ba23ceac20dbea6fd4547aed2a4ba080aaa0028", "filename": "gcc/stmt.c", "status": "modified", "additions": 17, "deletions": 2, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddbe9812b118487d499a1a452f8f3b5cd8d79f4f/gcc%2Fstmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddbe9812b118487d499a1a452f8f3b5cd8d79f4f/gcc%2Fstmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstmt.c?ref=ddbe9812b118487d499a1a452f8f3b5cd8d79f4f", "patch": "@@ -1206,8 +1206,18 @@ expand_expr_stmt (exp)\n       if (TYPE_MODE (TREE_TYPE (exp)) != BLKmode)\n \tcopy_to_reg (last_expr_value);\n       else\n-\t/* This case needs to be written.  */\n-\tabort ();\n+\t{\n+\t  rtx lab = gen_label_rtx ();\n+\t  \n+\t  /* Compare the value with itself to reference it.  */\n+\t  emit_cmp_insn (last_expr_value, last_expr_value, EQ,\n+\t\t\t expand_expr (TYPE_SIZE (last_expr_type),\n+\t\t\t\t      0, VOIDmode, 0),\n+\t\t\t BLKmode, 0,\n+\t\t\t TYPE_ALIGN (last_expr_type) / BITS_PER_UNIT);\n+\t  emit_jump_insn ((*bcc_gen_fctn[(int) EQ]) (lab));\n+\t  emit_label (lab);\n+\t}\n     }\n \n   /* If this expression is part of a ({...}) and is in memory, we may have\n@@ -1291,6 +1301,11 @@ warn_if_unused_value (exp)\n \treturn 0;\n \n     default:\n+      /* Referencing a volatile value is a side effect, so don't warn.  */\n+      if ((TREE_CODE_CLASS (TREE_CODE (exp)) == 'd'\n+\t   || TREE_CODE_CLASS (TREE_CODE (exp)) == 'r')\n+\t  && TREE_THIS_VOLATILE (exp))\n+\treturn 0;\n       warning_with_file_and_line (emit_filename, emit_lineno,\n \t\t\t\t  \"value computed is not used\");\n       return 1;"}]}