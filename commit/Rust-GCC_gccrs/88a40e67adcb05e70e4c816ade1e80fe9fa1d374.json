{"sha": "88a40e67adcb05e70e4c816ade1e80fe9fa1d374", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODhhNDBlNjdhZGNiMDVlNzBlNGM4MTZhZGUxZTgwZmU5ZmExZDM3NA==", "commit": {"author": {"name": "Daniel Berlin", "email": "dberlin@dberlin.org", "date": "2004-11-17T02:01:35Z"}, "committer": {"name": "Daniel Berlin", "email": "dberlin@gcc.gnu.org", "date": "2004-11-17T02:01:35Z"}, "message": "re PR tree-optimization/18519 (ICE: Segmentation fault with optimization)\n\n2004-11-16  Daniel Berlin  <dberlin@dberlin.org>\n\n\tFix PR tree-optimization/18519\n\n\t* tree-optimize (execute_todo): Add case for TODO_cleanup_cfg.\n\t* tree-pass.h: Add TODO_cleanup_cfg.\n\t* tree-ssa-ccp.c (pass_ccp): Use TODO_cleanup_cfg.\n\t(ccp_finalize): Remove call to cleanup_cfg.\n\t* tree-ssa-dce.c (pass_dce): Use TODO_cleanup_cfg and TODO_dump_func.\n\t(pass_cd_dce): Ditto.\n\t(perform_tree_ssa_dce): Remove call to cleanup_cfg,\n\tdump_function_to_file.\n\t* tree-ssa-loop-ch.c (copy_loop_headers): Remove call\n\tto cleanup_cfg.\n\t(pass_ch): Add TODO_cleanup_cfg.\n\t* tree-ssa-loop.c (tree_ssa_loop_done): Remove call to\n\tcleanup_cfg.\n\t(pass_loop_done): Add TODO_cleanup_cfg.\n\t* tree-ssa-phiopt.c (pass_phiopt): Ditto.\n\t(tree_ssa_phiopt): Remove call to cleanup_cfg.\n\nFrom-SVN: r90783", "tree": {"sha": "4b863c2d1c67c8fb1155677401f221fcedc209fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4b863c2d1c67c8fb1155677401f221fcedc209fc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/88a40e67adcb05e70e4c816ade1e80fe9fa1d374", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88a40e67adcb05e70e4c816ade1e80fe9fa1d374", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88a40e67adcb05e70e4c816ade1e80fe9fa1d374", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88a40e67adcb05e70e4c816ade1e80fe9fa1d374/comments", "author": {"login": "dberlin", "id": 324715, "node_id": "MDQ6VXNlcjMyNDcxNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/324715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dberlin", "html_url": "https://github.com/dberlin", "followers_url": "https://api.github.com/users/dberlin/followers", "following_url": "https://api.github.com/users/dberlin/following{/other_user}", "gists_url": "https://api.github.com/users/dberlin/gists{/gist_id}", "starred_url": "https://api.github.com/users/dberlin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dberlin/subscriptions", "organizations_url": "https://api.github.com/users/dberlin/orgs", "repos_url": "https://api.github.com/users/dberlin/repos", "events_url": "https://api.github.com/users/dberlin/events{/privacy}", "received_events_url": "https://api.github.com/users/dberlin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8a45d44821bc808ebc1e85ea07cb89e2d10c7e60", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a45d44821bc808ebc1e85ea07cb89e2d10c7e60", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a45d44821bc808ebc1e85ea07cb89e2d10c7e60"}], "stats": {"total": 60, "additions": 33, "deletions": 27}, "files": [{"sha": "e54898105caf033230fca9283745a0c3bb46f961", "filename": "gcc/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88a40e67adcb05e70e4c816ade1e80fe9fa1d374/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88a40e67adcb05e70e4c816ade1e80fe9fa1d374/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=88a40e67adcb05e70e4c816ade1e80fe9fa1d374", "patch": "@@ -1,3 +1,24 @@\n+2004-11-16  Daniel Berlin  <dberlin@dberlin.org>\n+\n+\tFix PR tree-optimization/18519\n+\t\n+\t* tree-optimize (execute_todo): Add case for TODO_cleanup_cfg.\n+\t* tree-pass.h: Add TODO_cleanup_cfg.\n+\t* tree-ssa-ccp.c (pass_ccp): Use TODO_cleanup_cfg.\n+\t(ccp_finalize): Remove call to cleanup_cfg.\n+\t* tree-ssa-dce.c (pass_dce): Use TODO_cleanup_cfg and TODO_dump_func.\n+\t(pass_cd_dce): Ditto.\n+\t(perform_tree_ssa_dce): Remove call to cleanup_cfg, \n+\tdump_function_to_file.\n+\t* tree-ssa-loop-ch.c (copy_loop_headers): Remove call\n+\tto cleanup_cfg.\n+\t(pass_ch): Add TODO_cleanup_cfg.\n+\t* tree-ssa-loop.c (tree_ssa_loop_done): Remove call to\n+\tcleanup_cfg.\n+\t(pass_loop_done): Add TODO_cleanup_cfg.\n+\t* tree-ssa-phiopt.c (pass_phiopt): Ditto.\n+\t(tree_ssa_phiopt): Remove call to cleanup_cfg.\t\n+\t\n 2004-11-16  Devang Patel  <dpatel@apple.com>\n \n \t* optabs.c (vector_compare_rtx): Fix COMPARISON_CLASS_P use."}, {"sha": "53356b94d551e48949c5adb15466c2452a92fd44", "filename": "gcc/tree-optimize.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88a40e67adcb05e70e4c816ade1e80fe9fa1d374/gcc%2Ftree-optimize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88a40e67adcb05e70e4c816ade1e80fe9fa1d374/gcc%2Ftree-optimize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-optimize.c?ref=88a40e67adcb05e70e4c816ade1e80fe9fa1d374", "patch": "@@ -426,6 +426,9 @@ execute_todo (int properties, unsigned int flags)\n       bitmap_clear (vars_to_rename);\n     }\n \n+  if (flags & TODO_cleanup_cfg)\n+    cleanup_tree_cfg ();\n+\n   if ((flags & TODO_dump_func) && dump_file)\n     {\n       if (properties & PROP_trees)"}, {"sha": "8900bcc6d423dc59f198bde3098c2a49ac9fb777", "filename": "gcc/tree-pass.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88a40e67adcb05e70e4c816ade1e80fe9fa1d374/gcc%2Ftree-pass.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88a40e67adcb05e70e4c816ade1e80fe9fa1d374/gcc%2Ftree-pass.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-pass.h?ref=88a40e67adcb05e70e4c816ade1e80fe9fa1d374", "patch": "@@ -107,6 +107,7 @@ struct dump_file_info\n #define TODO_verify_flow\t(1 << 4)\n #define TODO_verify_stmts\t(1 << 5)\n #define TODO_fix_def_def_chains (1 << 6)        /* rewrite def-def chains  */\n+#define TODO_cleanup_cfg        (1 << 7)        /* cleanup the cfg.  */\n \n #define TODO_verify_all \\\n   (TODO_verify_ssa | TODO_verify_flow | TODO_verify_stmts)"}, {"sha": "1815ebd4d736274c0cae259613c96390698cf005", "filename": "gcc/tree-ssa-ccp.c", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88a40e67adcb05e70e4c816ade1e80fe9fa1d374/gcc%2Ftree-ssa-ccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88a40e67adcb05e70e4c816ade1e80fe9fa1d374/gcc%2Ftree-ssa-ccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-ccp.c?ref=88a40e67adcb05e70e4c816ade1e80fe9fa1d374", "patch": "@@ -629,9 +629,6 @@ ccp_finalize (void)\n   /* Perform substitutions based on the known constant values.  */\n   substitute_and_fold ();\n \n-  /* Now cleanup any unreachable code.  */\n-  cleanup_tree_cfg ();\n-\n   free (value_vector);\n }\n \n@@ -1229,7 +1226,7 @@ struct tree_opt_pass pass_ccp =\n   0,\t\t\t\t\t/* properties_provided */\n   0,\t\t\t\t\t/* properties_destroyed */\n   0,\t\t\t\t\t/* todo_flags_start */\n-  TODO_dump_func | TODO_rename_vars\n+  TODO_cleanup_cfg | TODO_dump_func | TODO_rename_vars\n     | TODO_ggc_collect | TODO_verify_ssa\n     | TODO_verify_stmts,\t\t/* todo_flags_finish */\n   0\t\t\t\t\t/* letter */"}, {"sha": "589fc5b4f8aebce6802c6323d6255ec79928e290", "filename": "gcc/tree-ssa-dce.c", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88a40e67adcb05e70e4c816ade1e80fe9fa1d374/gcc%2Ftree-ssa-dce.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88a40e67adcb05e70e4c816ade1e80fe9fa1d374/gcc%2Ftree-ssa-dce.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dce.c?ref=88a40e67adcb05e70e4c816ade1e80fe9fa1d374", "patch": "@@ -951,14 +951,9 @@ perform_tree_ssa_dce (bool aggressive)\n   if (aggressive)\n     free_dominance_info (CDI_POST_DOMINATORS);\n \n-  cleanup_tree_cfg ();\n-\n   /* Debugging dumps.  */\n   if (dump_file)\n-    {\n-      dump_function_to_file (current_function_decl, dump_file, dump_flags);\n-      print_stats ();\n-    }\n+    print_stats ();\n \n   tree_dce_done (aggressive);\n \n@@ -997,7 +992,7 @@ struct tree_opt_pass pass_dce =\n   0,\t\t\t\t\t/* properties_provided */\n   0,\t\t\t\t\t/* properties_destroyed */\n   0,\t\t\t\t\t/* todo_flags_start */\n-  TODO_fix_def_def_chains |TODO_ggc_collect | TODO_verify_ssa,\t/* todo_flags_finish */\n+  TODO_dump_func | TODO_fix_def_def_chains | TODO_cleanup_cfg | TODO_ggc_collect | TODO_verify_ssa,\t/* todo_flags_finish */\n   0\t\t\t\t\t/* letter */\n };\n \n@@ -1014,7 +1009,7 @@ struct tree_opt_pass pass_cd_dce =\n   0,\t\t\t\t\t/* properties_provided */\n   0,\t\t\t\t\t/* properties_destroyed */\n   0,\t\t\t\t\t/* todo_flags_start */\n-  TODO_fix_def_def_chains | TODO_ggc_collect | TODO_verify_ssa | TODO_verify_flow,\n+  TODO_dump_func | TODO_fix_def_def_chains | TODO_cleanup_cfg | TODO_ggc_collect | TODO_verify_ssa | TODO_verify_flow,\n \t\t\t\t\t/* todo_flags_finish */\n   0\t\t\t\t\t/* letter */\n };"}, {"sha": "71d1bf2162c23e6942d4932ef3666418d9858335", "filename": "gcc/tree-ssa-loop-ch.c", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88a40e67adcb05e70e4c816ade1e80fe9fa1d374/gcc%2Ftree-ssa-loop-ch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88a40e67adcb05e70e4c816ade1e80fe9fa1d374/gcc%2Ftree-ssa-loop-ch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-ch.c?ref=88a40e67adcb05e70e4c816ade1e80fe9fa1d374", "patch": "@@ -214,11 +214,6 @@ copy_loop_headers (void)\n #endif\n \n   loop_optimizer_finalize (loops, NULL);\n-\n-  /* Run cleanup_tree_cfg here regardless of whether we have done anything, so\n-     that we cleanup the blocks created in order to get the loops into a\n-     canonical shape.  */\n-  cleanup_tree_cfg ();\n }\n \n static bool\n@@ -240,7 +235,7 @@ struct tree_opt_pass pass_ch =\n   0,\t\t\t\t\t/* properties_provided */\n   0,\t\t\t\t\t/* properties_destroyed */\n   0,\t\t\t\t\t/* todo_flags_start */\n-  (TODO_dump_func\n-   | TODO_verify_ssa),\t\t\t/* todo_flags_finish */\n+  TODO_cleanup_cfg | TODO_dump_func \n+  | TODO_verify_ssa,\t\t\t/* todo_flags_finish */\n   0\t\t\t\t\t/* letter */\n };"}, {"sha": "570dd4203405f0ec1e4cd36941f3de1cd7501bb1", "filename": "gcc/tree-ssa-loop.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88a40e67adcb05e70e4c816ade1e80fe9fa1d374/gcc%2Ftree-ssa-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88a40e67adcb05e70e4c816ade1e80fe9fa1d374/gcc%2Ftree-ssa-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop.c?ref=88a40e67adcb05e70e4c816ade1e80fe9fa1d374", "patch": "@@ -411,7 +411,6 @@ tree_ssa_loop_done (void)\n   loop_optimizer_finalize (current_loops,\n \t\t\t   (dump_flags & TDF_DETAILS ? dump_file : NULL));\n   current_loops = NULL;\n-  cleanup_tree_cfg ();\n }\n   \n struct tree_opt_pass pass_loop_done = \n@@ -427,7 +426,7 @@ struct tree_opt_pass pass_loop_done =\n   0,\t\t\t\t\t/* properties_provided */\n   0,\t\t\t\t\t/* properties_destroyed */\n   0,\t\t\t\t\t/* todo_flags_start */\n-  TODO_dump_func,\t\t\t/* todo_flags_finish */\n+  TODO_cleanup_cfg | TODO_dump_func,\t/* todo_flags_finish */\n   0\t\t\t\t\t/* letter */\n };\n "}, {"sha": "3c241e43fc54de713d0f7560e547ceaa3c5d2b31", "filename": "gcc/tree-ssa-phiopt.c", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88a40e67adcb05e70e4c816ade1e80fe9fa1d374/gcc%2Ftree-ssa-phiopt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88a40e67adcb05e70e4c816ade1e80fe9fa1d374/gcc%2Ftree-ssa-phiopt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-phiopt.c?ref=88a40e67adcb05e70e4c816ade1e80fe9fa1d374", "patch": "@@ -137,11 +137,6 @@ tree_ssa_phiopt (void)\n \t      }\n \t}\n     }\n-\n-  /* If we removed any PHIs, then we have unreachable blocks and blocks\n-     which need to be merged in the CFG.  */\n-  if (removed_phis)\n-    cleanup_tree_cfg ();\n }\n \n /* Return TRUE if block BB has no executable statements, otherwise return\n@@ -668,7 +663,7 @@ struct tree_opt_pass pass_phiopt =\n   0,\t\t\t\t\t/* properties_provided */\n   0,\t\t\t\t\t/* properties_destroyed */\n   0,\t\t\t\t\t/* todo_flags_start */\n-  TODO_dump_func | TODO_ggc_collect\t/* todo_flags_finish */\n+  TODO_cleanup_cfg | TODO_dump_func | TODO_ggc_collect\t/* todo_flags_finish */\n     | TODO_verify_ssa | TODO_rename_vars\n     | TODO_verify_flow,\n   0\t\t\t\t\t/* letter */"}]}