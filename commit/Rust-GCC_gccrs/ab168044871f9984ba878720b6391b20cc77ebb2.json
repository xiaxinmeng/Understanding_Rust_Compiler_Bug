{"sha": "ab168044871f9984ba878720b6391b20cc77ebb2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWIxNjgwNDQ4NzFmOTk4NGJhODc4NzIwYjYzOTFiMjBjYzc3ZWJiMg==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2018-05-15T16:39:43Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2018-05-15T16:39:43Z"}, "message": "re PR lto/85583 (lto1: internal compiler error: in lto_balanced_map, at lto/lto-partition.c:833)\n\n\n\tPR lto/85583\n\t* lto-partition.c (account_reference_p): Do not account\n\treferences from aliases; do not account refernces from\n\texternal initializers.\n\nFrom-SVN: r260266", "tree": {"sha": "ac5803ea082a9a4d8e6e8bcfcb37acdbb89b3d40", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ac5803ea082a9a4d8e6e8bcfcb37acdbb89b3d40"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ab168044871f9984ba878720b6391b20cc77ebb2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab168044871f9984ba878720b6391b20cc77ebb2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab168044871f9984ba878720b6391b20cc77ebb2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab168044871f9984ba878720b6391b20cc77ebb2/comments", "author": null, "committer": null, "parents": [{"sha": "5f150326b336830ac8e53a7072451df2b6e75352", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f150326b336830ac8e53a7072451df2b6e75352", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f150326b336830ac8e53a7072451df2b6e75352"}], "stats": {"total": 30, "additions": 26, "deletions": 4}, "files": [{"sha": "cd976fa66bb1b623d0825f8a67527aa1311b9ba8", "filename": "gcc/lto/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab168044871f9984ba878720b6391b20cc77ebb2/gcc%2Flto%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab168044871f9984ba878720b6391b20cc77ebb2/gcc%2Flto%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2FChangeLog?ref=ab168044871f9984ba878720b6391b20cc77ebb2", "patch": "@@ -1,3 +1,10 @@\n+2018-05-18  Jan Hubicka  <jh@suse.cz>\n+\n+\tPR lto/85583\n+\t* lto-partition.c (account_reference_p): Do not account\n+\treferences from aliases; do not account refernces from\n+\texternal initializers.\n+\n 2018-04-30  Jan Hubicka  <jh@suse.cz>\n \n \t* lto.c (cmp_partitions_size): Remove."}, {"sha": "fd796e12a2dc7a660e8d5a1e3c1542e8a05d3752", "filename": "gcc/lto/lto-partition.c", "status": "modified", "additions": 19, "deletions": 4, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab168044871f9984ba878720b6391b20cc77ebb2/gcc%2Flto%2Flto-partition.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab168044871f9984ba878720b6391b20cc77ebb2/gcc%2Flto%2Flto-partition.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto-partition.c?ref=ab168044871f9984ba878720b6391b20cc77ebb2", "patch": "@@ -439,12 +439,27 @@ account_reference_p (symtab_node *n1, symtab_node *n2)\n {\n   if (cgraph_node *cnode = dyn_cast <cgraph_node *> (n1))\n     n1 = cnode;\n+  /* Do not account references from aliases - they are never split across\n+     partitions.  */\n+  if (n1->alias)\n+    return false;\n   /* Do not account recursion - the code below will handle it incorrectly\n-     otherwise.  Also do not account references to external symbols.\n-     They will never become local.  */\n+     otherwise.  Do not account references to external symbols: they will\n+     never become local.  Finally do not account references to duplicated\n+     symbols: they will be always local.  */\n   if (n1 == n2 \n-      || DECL_EXTERNAL (n2->decl)\n-      || !n2->definition)\n+      || !n2->definition\n+      || n2->get_partitioning_class () != SYMBOL_PARTITION)\n+    return false;\n+  /* If referring node is external symbol do not account it to boundary\n+     cost. Those are added into units only to enable possible constant\n+     folding and devirtulization.\n+\n+     Here we do not know if it will ever be added to some partition\n+     (this is decided by compute_ltrans_boundary) and second it is not\n+     that likely that constant folding will actually use the reference.  */\n+  if (contained_in_symbol (n1)\n+\t->get_partitioning_class () == SYMBOL_EXTERNAL)\n     return false;\n   return true;\n }"}]}