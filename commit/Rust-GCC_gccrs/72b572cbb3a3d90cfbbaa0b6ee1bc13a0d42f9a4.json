{"sha": "72b572cbb3a3d90cfbbaa0b6ee1bc13a0d42f9a4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzJiNTcyY2JiM2EzZDkwY2ZiYmFhMGI2ZWUxYmMxM2EwZDQyZjlhNA==", "commit": {"author": {"name": "Francois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2014-06-06T19:57:51Z"}, "committer": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2014-06-06T19:57:51Z"}, "message": "io.c (resolve_tag): Warn on non-default kind for NUMBER...\n\n\t* io.c (resolve_tag): Warn on non-default kind for NUMBER,\n\tNEXTREC, RECL, NAMED, OPENED and PENDING I/O specifiers.\n\n\t* gfortran.dg/io_constraints_11.f90: New file.\n\t* gfortran.dg/io_constraints_12.f90: New file.\n\t* gfortran.dg/io_constraints_13.f90: New file.\n\nFrom-SVN: r211323", "tree": {"sha": "8b454b97eddbf10a2a219e8ffc857d06daa03131", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8b454b97eddbf10a2a219e8ffc857d06daa03131"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/72b572cbb3a3d90cfbbaa0b6ee1bc13a0d42f9a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72b572cbb3a3d90cfbbaa0b6ee1bc13a0d42f9a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/72b572cbb3a3d90cfbbaa0b6ee1bc13a0d42f9a4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72b572cbb3a3d90cfbbaa0b6ee1bc13a0d42f9a4/comments", "author": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7b11cab795af9c578a20c0909f3f6edbb31c0879", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b11cab795af9c578a20c0909f3f6edbb31c0879", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b11cab795af9c578a20c0909f3f6edbb31c0879"}], "stats": {"total": 127, "additions": 124, "deletions": 3}, "files": [{"sha": "c292130e3961cf033636069e5a935d5857a7abfe", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72b572cbb3a3d90cfbbaa0b6ee1bc13a0d42f9a4/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72b572cbb3a3d90cfbbaa0b6ee1bc13a0d42f9a4/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=72b572cbb3a3d90cfbbaa0b6ee1bc13a0d42f9a4", "patch": "@@ -1,3 +1,8 @@\n+2014-06-06  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\t* io.c (resolve_tag): Warn on non-default kind for NUMBER,\n+\tNEXTREC, RECL, NAMED, OPENED and PENDING I/O specifiers.\n+\n 2014-06-06  Jakub Jelinek  <jakub@redhat.com>\n \n \t* dump-parse-tree.c (show_omp_namelist): Dump reduction"}, {"sha": "731c6dcc5678c5de355a1b6a2321499622acbc9e", "filename": "gcc/fortran/io.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72b572cbb3a3d90cfbbaa0b6ee1bc13a0d42f9a4/gcc%2Ffortran%2Fio.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72b572cbb3a3d90cfbbaa0b6ee1bc13a0d42f9a4/gcc%2Ffortran%2Fio.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fio.c?ref=72b572cbb3a3d90cfbbaa0b6ee1bc13a0d42f9a4", "patch": "@@ -1497,17 +1497,20 @@ resolve_tag (const io_tag *tag, gfc_expr *e)\n \treturn false;\n     }\n \n-  if ((tag == &tag_iostat || tag == &tag_size || tag == &tag_iolength)\n+  if ((tag == &tag_iostat || tag == &tag_size || tag == &tag_iolength\n+       || tag == &tag_number || tag == &tag_nextrec || tag == &tag_s_recl)\n       && e->ts.kind != gfc_default_integer_kind)\n     {\n       if (!gfc_notify_std (GFC_STD_F2003, \"Fortran 95 requires default \"\n \t\t\t   \"INTEGER in %s tag at %L\", tag->name, &e->where))\n \treturn false;\n     }\n \n-  if (tag == &tag_exist && e->ts.kind != gfc_default_logical_kind)\n+  if (e->ts.kind != gfc_default_logical_kind &&\n+      (tag == &tag_exist || tag == &tag_named || tag == &tag_opened\n+       || tag == &tag_pending))\n     {\n-      if (!gfc_notify_std (GFC_STD_F2008, \"Nondefault LOGICAL \"\n+      if (!gfc_notify_std (GFC_STD_F2008, \"Non-default LOGICAL kind \"\n \t\t\t   \"in %s tag at %L\", tag->name, &e->where))\n \treturn false;\n     }"}, {"sha": "d2e2a4b4683aaaf881b9715076b88824c1a9bbdd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72b572cbb3a3d90cfbbaa0b6ee1bc13a0d42f9a4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72b572cbb3a3d90cfbbaa0b6ee1bc13a0d42f9a4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=72b572cbb3a3d90cfbbaa0b6ee1bc13a0d42f9a4", "patch": "@@ -1,3 +1,9 @@\n+2014-06-06  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\t* gfortran.dg/io_constraints_11.f90: New file.\n+\t* gfortran.dg/io_constraints_12.f90: New file.\n+\t* gfortran.dg/io_constraints_13.f90: New file.\n+\n 2014-06-06  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/61423"}, {"sha": "911c866025fb56782f41503fe130814b41a121cc", "filename": "gcc/testsuite/gfortran.dg/io_constraints_11.f90", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72b572cbb3a3d90cfbbaa0b6ee1bc13a0d42f9a4/gcc%2Ftestsuite%2Fgfortran.dg%2Fio_constraints_11.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72b572cbb3a3d90cfbbaa0b6ee1bc13a0d42f9a4/gcc%2Ftestsuite%2Fgfortran.dg%2Fio_constraints_11.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fio_constraints_11.f90?ref=72b572cbb3a3d90cfbbaa0b6ee1bc13a0d42f9a4", "patch": "@@ -0,0 +1,36 @@\n+! { dg-do compile }\n+! { dg-options \"-std=f95\" }\n+!\n+! Test our conformance to item 4.9 (\"Kind type parameters of integer\n+! specifiers\") of the Fortran 2003 status document at\n+! ftp://ftp.nag.co.uk/sc22wg5/N1551-N1600/N1579.pdf\n+!\n+! The non-default integer variables are allowed since Fortran 2003.\n+! The non-default logical variables are allowed since Fortran 2008.\n+\n+  integer(kind=8) :: i, j, k, n\n+  logical(kind=8) :: l1, l2, l3\n+\n+  open(10, status=\"scratch\", iostat=i) ! { dg-error \"requires default INTEGER\" }\n+\n+  backspace(10, iostat=i) ! { dg-error \"requires default INTEGER\" }\n+  endfile(10, iostat=i) ! { dg-error \"requires default INTEGER\" }\n+  rewind(10, iostat=i) ! { dg-error \"requires default INTEGER\" }\n+\n+  read(*, '(I2)', iostat=i) k ! { dg-error \"requires default INTEGER\" }\n+  read(*, '(I2)', advance='no', size=j) k ! { dg-error \"requires default INTEGER\" }\n+\n+  inquire(iolength=i) \"42\" ! { dg-error \"requires default INTEGER\" }\n+  inquire(10, iostat=i) ! { dg-error \"requires default INTEGER\" }\n+  inquire(10, number=j) ! { dg-error \"requires default INTEGER\" }\n+  inquire(10, recl=k) ! { dg-error \"requires default INTEGER\" }\n+  inquire(10, nextrec=n) ! { dg-error \"requires default INTEGER\" }\n+\n+  inquire(10, exist=l1) ! { dg-error \"Non-default LOGICAL kind\" }\n+  inquire(10, named=l3) ! { dg-error \"Non-default LOGICAL kind\" }\n+  inquire(10, opened=l2) ! { dg-error \"Non-default LOGICAL kind\" }\n+  inquire(10, pending=l2) ! { dg-error \"Non-default LOGICAL kind\" }\n+\n+  close(10, iostat=i) ! { dg-error \"requires default INTEGER\" }\n+\n+end"}, {"sha": "78f11c56345c1d0841412032b91d210096bffc2f", "filename": "gcc/testsuite/gfortran.dg/io_constraints_12.f90", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72b572cbb3a3d90cfbbaa0b6ee1bc13a0d42f9a4/gcc%2Ftestsuite%2Fgfortran.dg%2Fio_constraints_12.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72b572cbb3a3d90cfbbaa0b6ee1bc13a0d42f9a4/gcc%2Ftestsuite%2Fgfortran.dg%2Fio_constraints_12.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fio_constraints_12.f90?ref=72b572cbb3a3d90cfbbaa0b6ee1bc13a0d42f9a4", "patch": "@@ -0,0 +1,36 @@\n+! { dg-do compile }\n+! { dg-options \"-std=f2003\" }\n+!\n+! Test our conformance to item 4.9 (\"Kind type parameters of integer\n+! specifiers\") of the Fortran 2003 status document at\n+! ftp://ftp.nag.co.uk/sc22wg5/N1551-N1600/N1579.pdf\n+!\n+! The non-default integer variables are allowed since Fortran 2003.\n+! The non-default logical variables are allowed since Fortran 2008.\n+\n+  integer(kind=8) :: i, j, k, n\n+  logical(kind=8) :: l1, l2, l3\n+\n+  open(10, status=\"scratch\", iostat=i)\n+\n+  backspace(10, iostat=i)\n+  endfile(10, iostat=i)\n+  rewind(10, iostat=i)\n+\n+  read(*, '(I2)', iostat=i) k\n+  read(*, '(I2)', advance='no', size=j) k\n+\n+  inquire(iolength=i) \"42\"\n+  inquire(10, iostat=i)\n+  inquire(10, number=j)\n+  inquire(10, recl=k)\n+  inquire(10, nextrec=n)\n+\n+  inquire(10, exist=l1) ! { dg-error \"Non-default LOGICAL kind\" }\n+  inquire(10, named=l3) ! { dg-error \"Non-default LOGICAL kind\" }\n+  inquire(10, opened=l2) ! { dg-error \"Non-default LOGICAL kind\" }\n+  inquire(10, pending=l2) ! { dg-error \"Non-default LOGICAL kind\" }\n+\n+  close(10, iostat=i)\n+\n+end"}, {"sha": "f57edf71be9b32c99dbb07dce9613f2b27c34cbb", "filename": "gcc/testsuite/gfortran.dg/io_constraints_13.f90", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72b572cbb3a3d90cfbbaa0b6ee1bc13a0d42f9a4/gcc%2Ftestsuite%2Fgfortran.dg%2Fio_constraints_13.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72b572cbb3a3d90cfbbaa0b6ee1bc13a0d42f9a4/gcc%2Ftestsuite%2Fgfortran.dg%2Fio_constraints_13.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fio_constraints_13.f90?ref=72b572cbb3a3d90cfbbaa0b6ee1bc13a0d42f9a4", "patch": "@@ -0,0 +1,35 @@\n+! { dg-do compile }\n+!\n+! Test our conformance to item 4.9 (\"Kind type parameters of integer\n+! specifiers\") of the Fortran 2003 status document at\n+! ftp://ftp.nag.co.uk/sc22wg5/N1551-N1600/N1579.pdf\n+!\n+! The non-default integer variables are allowed since Fortran 2003.\n+! The non-default logical variables are allowed since Fortran 2008.\n+\n+  integer(kind=8) :: i, j, k, n\n+  logical(kind=8) :: l1, l2, l3\n+\n+  open(10, status=\"scratch\", iostat=i)\n+\n+  backspace(10, iostat=i)\n+  endfile(10, iostat=i)\n+  rewind(10, iostat=i)\n+\n+  read(*, '(I2)', iostat=i) k\n+  read(*, '(I2)', advance='no', size=j) k\n+\n+  inquire(iolength=i) \"42\"\n+  inquire(10, iostat=i)\n+  inquire(10, number=j)\n+  inquire(10, recl=k)\n+  inquire(10, nextrec=n)\n+\n+  inquire(10, exist=l1)\n+  inquire(10, named=l3)\n+  inquire(10, opened=l2)\n+  inquire(10, pending=l2)\n+\n+  close(10, iostat=i)\n+\n+end"}]}