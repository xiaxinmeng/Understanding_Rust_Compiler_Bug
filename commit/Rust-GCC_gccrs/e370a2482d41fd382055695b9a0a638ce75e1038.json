{"sha": "e370a2482d41fd382055695b9a0a638ce75e1038", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTM3MGEyNDgyZDQxZmQzODIwNTU2OTViOWEwYTYzOGNlNzVlMTAzOA==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-08-26T08:20:20Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-08-26T08:20:20Z"}, "message": "mklog: fix renaming with version 0.7.0.\n\ncontrib/ChangeLog:\n\n\t* mklog.py: Use file.{source,target}_file for proper rename\n\thandling.", "tree": {"sha": "a97e7b8b71c657b3b908cc5906ad394518baa675", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a97e7b8b71c657b3b908cc5906ad394518baa675"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e370a2482d41fd382055695b9a0a638ce75e1038", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e370a2482d41fd382055695b9a0a638ce75e1038", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e370a2482d41fd382055695b9a0a638ce75e1038", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e370a2482d41fd382055695b9a0a638ce75e1038/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bfc9250e0de5d5de8a93785ec20e04466ad720f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bfc9250e0de5d5de8a93785ec20e04466ad720f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bfc9250e0de5d5de8a93785ec20e04466ad720f6"}], "stats": {"total": 23, "additions": 17, "deletions": 6}, "files": [{"sha": "cd5ef0bcc74b90a86aa68752fd827a49aa854fe4", "filename": "contrib/mklog.py", "status": "modified", "additions": 17, "deletions": 6, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e370a2482d41fd382055695b9a0a638ce75e1038/contrib%2Fmklog.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e370a2482d41fd382055695b9a0a638ce75e1038/contrib%2Fmklog.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fmklog.py?ref=e370a2482d41fd382055695b9a0a638ce75e1038", "patch": "@@ -148,6 +148,13 @@ def append_changelog_line(out, relative_path, text):\n     return out\n \n \n+def get_rel_path_if_prefixed(path, folder):\n+    if path.startswith(folder):\n+        return path[len(folder):].lstrip('/')\n+    else:\n+        return path\n+\n+\n def generate_changelog(data, no_functions=False, fill_pr_titles=False,\n                        additional_prs=None):\n     changelogs = {}\n@@ -228,21 +235,25 @@ def generate_changelog(data, no_functions=False, fill_pr_titles=False,\n         for file in sorted(files, key=sort_changelog_files):\n             assert file.path.startswith(changelog)\n             in_tests = 'testsuite' in changelog or 'testsuite' in file.path\n-            relative_path = file.path[len(changelog):].lstrip('/')\n+            relative_path = get_rel_path_if_prefixed(file.path, changelog)\n             functions = []\n             if file.is_added_file:\n                 msg = 'New test.' if in_tests else 'New file.'\n                 out = append_changelog_line(out, relative_path, msg)\n             elif file.is_removed_file:\n                 out = append_changelog_line(out, relative_path, 'Removed.')\n             elif hasattr(file, 'is_rename') and file.is_rename:\n-                out = append_changelog_line(out, relative_path, 'Moved to...')\n-                new_path = file.target_file[2:]\n                 # A file can be theoretically moved to a location that\n                 # belongs to a different ChangeLog.  Let user fix it.\n-                if new_path.startswith(changelog):\n-                    new_path = new_path[len(changelog):].lstrip('/')\n-                out += '\\t* %s: ...here.\\n' % (new_path)\n+                #\n+                # Since unidiff 0.7.0, path.file == path.target_file[2:],\n+                # it used to be path.source_file[2:]\n+                relative_path = get_rel_path_if_prefixed(file.source_file[2:],\n+                                                         changelog)\n+                out = append_changelog_line(out, relative_path, 'Moved to...')\n+                new_path = get_rel_path_if_prefixed(file.target_file[2:],\n+                                                    changelog)\n+                out += f'\\t* {new_path}: ...here.\\n'\n             elif os.path.basename(file.path) in generated_files:\n                 out += '\\t* %s: Regenerate.\\n' % (relative_path)\n                 append_changelog_line(out, relative_path, 'Regenerate.')"}]}