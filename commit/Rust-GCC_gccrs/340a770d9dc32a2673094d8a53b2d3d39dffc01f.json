{"sha": "340a770d9dc32a2673094d8a53b2d3d39dffc01f", "node_id": "C_kwDOANBUbNoAKDM0MGE3NzBkOWRjMzJhMjY3MzA5NGQ4YTUzYjJkM2QzOWRmZmMwMWY", "commit": {"author": {"name": "Ju-Zhe Zhong", "email": "juzhe.zhong@rivai.ai", "date": "2023-02-03T23:24:08Z"}, "committer": {"name": "Kito Cheng", "email": "kito.cheng@sifive.com", "date": "2023-02-12T02:59:12Z"}, "message": "RISC-V: Add vneg.v C/C++ API tests\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/riscv/rvv/base/vneg_v-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vneg_v-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vneg_v-3.c: New test.\n\t* gcc.target/riscv/rvv/base/vneg_v_m-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vneg_v_m-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vneg_v_m-3.c: New test.\n\t* gcc.target/riscv/rvv/base/vneg_v_mu-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vneg_v_mu-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vneg_v_mu-3.c: New test.\n\t* gcc.target/riscv/rvv/base/vneg_v_tu-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vneg_v_tu-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vneg_v_tu-3.c: New test.\n\t* gcc.target/riscv/rvv/base/vneg_v_tum-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vneg_v_tum-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vneg_v_tum-3.c: New test.\n\t* gcc.target/riscv/rvv/base/vneg_v_tumu-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vneg_v_tumu-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vneg_v_tumu-3.c: New test.", "tree": {"sha": "486ec8b1418f5b357901faba6a14d456c0772374", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/486ec8b1418f5b357901faba6a14d456c0772374"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/340a770d9dc32a2673094d8a53b2d3d39dffc01f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/340a770d9dc32a2673094d8a53b2d3d39dffc01f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/340a770d9dc32a2673094d8a53b2d3d39dffc01f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/340a770d9dc32a2673094d8a53b2d3d39dffc01f/comments", "author": {"login": "zhongjuzhe", "id": 66454988, "node_id": "MDQ6VXNlcjY2NDU0OTg4", "avatar_url": "https://avatars.githubusercontent.com/u/66454988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhongjuzhe", "html_url": "https://github.com/zhongjuzhe", "followers_url": "https://api.github.com/users/zhongjuzhe/followers", "following_url": "https://api.github.com/users/zhongjuzhe/following{/other_user}", "gists_url": "https://api.github.com/users/zhongjuzhe/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhongjuzhe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhongjuzhe/subscriptions", "organizations_url": "https://api.github.com/users/zhongjuzhe/orgs", "repos_url": "https://api.github.com/users/zhongjuzhe/repos", "events_url": "https://api.github.com/users/zhongjuzhe/events{/privacy}", "received_events_url": "https://api.github.com/users/zhongjuzhe/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2855e29548443fae92d87761c6b3a4c63f1c9a08", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2855e29548443fae92d87761c6b3a4c63f1c9a08", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2855e29548443fae92d87761c6b3a4c63f1c9a08"}], "stats": {"total": 2880, "additions": 2880, "deletions": 0}, "files": [{"sha": "e573a26e2581f949191c3c63f450398dea3d8735", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vneg_v-1.c", "status": "added", "additions": 160, "deletions": 0, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/340a770d9dc32a2673094d8a53b2d3d39dffc01f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvneg_v-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/340a770d9dc32a2673094d8a53b2d3d39dffc01f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvneg_v-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvneg_v-1.c?ref=340a770d9dc32a2673094d8a53b2d3d39dffc01f", "patch": "@@ -0,0 +1,160 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vneg_v_i8mf8(vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8mf8(op1,vl);\n+}\n+\n+\n+vint8mf4_t test___riscv_vneg_v_i8mf4(vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8mf4(op1,vl);\n+}\n+\n+\n+vint8mf2_t test___riscv_vneg_v_i8mf2(vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8mf2(op1,vl);\n+}\n+\n+\n+vint8m1_t test___riscv_vneg_v_i8m1(vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8m1(op1,vl);\n+}\n+\n+\n+vint8m2_t test___riscv_vneg_v_i8m2(vint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8m2(op1,vl);\n+}\n+\n+\n+vint8m4_t test___riscv_vneg_v_i8m4(vint8m4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8m4(op1,vl);\n+}\n+\n+\n+vint8m8_t test___riscv_vneg_v_i8m8(vint8m8_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8m8(op1,vl);\n+}\n+\n+\n+vint16mf4_t test___riscv_vneg_v_i16mf4(vint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16mf4(op1,vl);\n+}\n+\n+\n+vint16mf2_t test___riscv_vneg_v_i16mf2(vint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16mf2(op1,vl);\n+}\n+\n+\n+vint16m1_t test___riscv_vneg_v_i16m1(vint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16m1(op1,vl);\n+}\n+\n+\n+vint16m2_t test___riscv_vneg_v_i16m2(vint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16m2(op1,vl);\n+}\n+\n+\n+vint16m4_t test___riscv_vneg_v_i16m4(vint16m4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16m4(op1,vl);\n+}\n+\n+\n+vint16m8_t test___riscv_vneg_v_i16m8(vint16m8_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16m8(op1,vl);\n+}\n+\n+\n+vint32mf2_t test___riscv_vneg_v_i32mf2(vint32mf2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i32mf2(op1,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vneg_v_i32m1(vint32m1_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i32m1(op1,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vneg_v_i32m2(vint32m2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i32m2(op1,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vneg_v_i32m4(vint32m4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i32m4(op1,vl);\n+}\n+\n+\n+vint32m8_t test___riscv_vneg_v_i32m8(vint32m8_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i32m8(op1,vl);\n+}\n+\n+\n+vint64m1_t test___riscv_vneg_v_i64m1(vint64m1_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i64m1(op1,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vneg_v_i64m2(vint64m2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i64m2(op1,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vneg_v_i64m4(vint64m4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i64m4(op1,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vneg_v_i64m8(vint64m8_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i64m8(op1,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */"}, {"sha": "c7bde883bf49c09c824f1124370867c9f53763d4", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vneg_v-2.c", "status": "added", "additions": 160, "deletions": 0, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/340a770d9dc32a2673094d8a53b2d3d39dffc01f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvneg_v-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/340a770d9dc32a2673094d8a53b2d3d39dffc01f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvneg_v-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvneg_v-2.c?ref=340a770d9dc32a2673094d8a53b2d3d39dffc01f", "patch": "@@ -0,0 +1,160 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vneg_v_i8mf8(vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8mf8(op1,31);\n+}\n+\n+\n+vint8mf4_t test___riscv_vneg_v_i8mf4(vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8mf4(op1,31);\n+}\n+\n+\n+vint8mf2_t test___riscv_vneg_v_i8mf2(vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8mf2(op1,31);\n+}\n+\n+\n+vint8m1_t test___riscv_vneg_v_i8m1(vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8m1(op1,31);\n+}\n+\n+\n+vint8m2_t test___riscv_vneg_v_i8m2(vint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8m2(op1,31);\n+}\n+\n+\n+vint8m4_t test___riscv_vneg_v_i8m4(vint8m4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8m4(op1,31);\n+}\n+\n+\n+vint8m8_t test___riscv_vneg_v_i8m8(vint8m8_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8m8(op1,31);\n+}\n+\n+\n+vint16mf4_t test___riscv_vneg_v_i16mf4(vint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16mf4(op1,31);\n+}\n+\n+\n+vint16mf2_t test___riscv_vneg_v_i16mf2(vint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16mf2(op1,31);\n+}\n+\n+\n+vint16m1_t test___riscv_vneg_v_i16m1(vint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16m1(op1,31);\n+}\n+\n+\n+vint16m2_t test___riscv_vneg_v_i16m2(vint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16m2(op1,31);\n+}\n+\n+\n+vint16m4_t test___riscv_vneg_v_i16m4(vint16m4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16m4(op1,31);\n+}\n+\n+\n+vint16m8_t test___riscv_vneg_v_i16m8(vint16m8_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16m8(op1,31);\n+}\n+\n+\n+vint32mf2_t test___riscv_vneg_v_i32mf2(vint32mf2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i32mf2(op1,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vneg_v_i32m1(vint32m1_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i32m1(op1,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vneg_v_i32m2(vint32m2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i32m2(op1,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vneg_v_i32m4(vint32m4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i32m4(op1,31);\n+}\n+\n+\n+vint32m8_t test___riscv_vneg_v_i32m8(vint32m8_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i32m8(op1,31);\n+}\n+\n+\n+vint64m1_t test___riscv_vneg_v_i64m1(vint64m1_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i64m1(op1,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vneg_v_i64m2(vint64m2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i64m2(op1,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vneg_v_i64m4(vint64m4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i64m4(op1,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vneg_v_i64m8(vint64m8_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i64m8(op1,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */"}, {"sha": "882e9ffc92201a6878bf6184de3a9a226dff4e10", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vneg_v-3.c", "status": "added", "additions": 160, "deletions": 0, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/340a770d9dc32a2673094d8a53b2d3d39dffc01f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvneg_v-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/340a770d9dc32a2673094d8a53b2d3d39dffc01f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvneg_v-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvneg_v-3.c?ref=340a770d9dc32a2673094d8a53b2d3d39dffc01f", "patch": "@@ -0,0 +1,160 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vneg_v_i8mf8(vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8mf8(op1,32);\n+}\n+\n+\n+vint8mf4_t test___riscv_vneg_v_i8mf4(vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8mf4(op1,32);\n+}\n+\n+\n+vint8mf2_t test___riscv_vneg_v_i8mf2(vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8mf2(op1,32);\n+}\n+\n+\n+vint8m1_t test___riscv_vneg_v_i8m1(vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8m1(op1,32);\n+}\n+\n+\n+vint8m2_t test___riscv_vneg_v_i8m2(vint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8m2(op1,32);\n+}\n+\n+\n+vint8m4_t test___riscv_vneg_v_i8m4(vint8m4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8m4(op1,32);\n+}\n+\n+\n+vint8m8_t test___riscv_vneg_v_i8m8(vint8m8_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8m8(op1,32);\n+}\n+\n+\n+vint16mf4_t test___riscv_vneg_v_i16mf4(vint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16mf4(op1,32);\n+}\n+\n+\n+vint16mf2_t test___riscv_vneg_v_i16mf2(vint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16mf2(op1,32);\n+}\n+\n+\n+vint16m1_t test___riscv_vneg_v_i16m1(vint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16m1(op1,32);\n+}\n+\n+\n+vint16m2_t test___riscv_vneg_v_i16m2(vint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16m2(op1,32);\n+}\n+\n+\n+vint16m4_t test___riscv_vneg_v_i16m4(vint16m4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16m4(op1,32);\n+}\n+\n+\n+vint16m8_t test___riscv_vneg_v_i16m8(vint16m8_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16m8(op1,32);\n+}\n+\n+\n+vint32mf2_t test___riscv_vneg_v_i32mf2(vint32mf2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i32mf2(op1,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vneg_v_i32m1(vint32m1_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i32m1(op1,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vneg_v_i32m2(vint32m2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i32m2(op1,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vneg_v_i32m4(vint32m4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i32m4(op1,32);\n+}\n+\n+\n+vint32m8_t test___riscv_vneg_v_i32m8(vint32m8_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i32m8(op1,32);\n+}\n+\n+\n+vint64m1_t test___riscv_vneg_v_i64m1(vint64m1_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i64m1(op1,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vneg_v_i64m2(vint64m2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i64m2(op1,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vneg_v_i64m4(vint64m4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i64m4(op1,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vneg_v_i64m8(vint64m8_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i64m8(op1,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */"}, {"sha": "3af95e1cdd3dac2dd94439174728040f17f3bd1f", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vneg_v_m-1.c", "status": "added", "additions": 160, "deletions": 0, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/340a770d9dc32a2673094d8a53b2d3d39dffc01f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvneg_v_m-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/340a770d9dc32a2673094d8a53b2d3d39dffc01f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvneg_v_m-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvneg_v_m-1.c?ref=340a770d9dc32a2673094d8a53b2d3d39dffc01f", "patch": "@@ -0,0 +1,160 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vneg_v_i8mf8_m(vbool64_t mask,vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8mf8_m(mask,op1,vl);\n+}\n+\n+\n+vint8mf4_t test___riscv_vneg_v_i8mf4_m(vbool32_t mask,vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8mf4_m(mask,op1,vl);\n+}\n+\n+\n+vint8mf2_t test___riscv_vneg_v_i8mf2_m(vbool16_t mask,vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8mf2_m(mask,op1,vl);\n+}\n+\n+\n+vint8m1_t test___riscv_vneg_v_i8m1_m(vbool8_t mask,vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8m1_m(mask,op1,vl);\n+}\n+\n+\n+vint8m2_t test___riscv_vneg_v_i8m2_m(vbool4_t mask,vint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8m2_m(mask,op1,vl);\n+}\n+\n+\n+vint8m4_t test___riscv_vneg_v_i8m4_m(vbool2_t mask,vint8m4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8m4_m(mask,op1,vl);\n+}\n+\n+\n+vint8m8_t test___riscv_vneg_v_i8m8_m(vbool1_t mask,vint8m8_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8m8_m(mask,op1,vl);\n+}\n+\n+\n+vint16mf4_t test___riscv_vneg_v_i16mf4_m(vbool64_t mask,vint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16mf4_m(mask,op1,vl);\n+}\n+\n+\n+vint16mf2_t test___riscv_vneg_v_i16mf2_m(vbool32_t mask,vint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16mf2_m(mask,op1,vl);\n+}\n+\n+\n+vint16m1_t test___riscv_vneg_v_i16m1_m(vbool16_t mask,vint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16m1_m(mask,op1,vl);\n+}\n+\n+\n+vint16m2_t test___riscv_vneg_v_i16m2_m(vbool8_t mask,vint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16m2_m(mask,op1,vl);\n+}\n+\n+\n+vint16m4_t test___riscv_vneg_v_i16m4_m(vbool4_t mask,vint16m4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16m4_m(mask,op1,vl);\n+}\n+\n+\n+vint16m8_t test___riscv_vneg_v_i16m8_m(vbool2_t mask,vint16m8_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16m8_m(mask,op1,vl);\n+}\n+\n+\n+vint32mf2_t test___riscv_vneg_v_i32mf2_m(vbool64_t mask,vint32mf2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i32mf2_m(mask,op1,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vneg_v_i32m1_m(vbool32_t mask,vint32m1_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i32m1_m(mask,op1,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vneg_v_i32m2_m(vbool16_t mask,vint32m2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i32m2_m(mask,op1,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vneg_v_i32m4_m(vbool8_t mask,vint32m4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i32m4_m(mask,op1,vl);\n+}\n+\n+\n+vint32m8_t test___riscv_vneg_v_i32m8_m(vbool4_t mask,vint32m8_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i32m8_m(mask,op1,vl);\n+}\n+\n+\n+vint64m1_t test___riscv_vneg_v_i64m1_m(vbool64_t mask,vint64m1_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i64m1_m(mask,op1,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vneg_v_i64m2_m(vbool32_t mask,vint64m2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i64m2_m(mask,op1,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vneg_v_i64m4_m(vbool16_t mask,vint64m4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i64m4_m(mask,op1,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vneg_v_i64m8_m(vbool8_t mask,vint64m8_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i64m8_m(mask,op1,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "75fd94e48a12bab9197b80953aa3de9e4356bc14", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vneg_v_m-2.c", "status": "added", "additions": 160, "deletions": 0, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/340a770d9dc32a2673094d8a53b2d3d39dffc01f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvneg_v_m-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/340a770d9dc32a2673094d8a53b2d3d39dffc01f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvneg_v_m-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvneg_v_m-2.c?ref=340a770d9dc32a2673094d8a53b2d3d39dffc01f", "patch": "@@ -0,0 +1,160 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vneg_v_i8mf8_m(vbool64_t mask,vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8mf8_m(mask,op1,31);\n+}\n+\n+\n+vint8mf4_t test___riscv_vneg_v_i8mf4_m(vbool32_t mask,vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8mf4_m(mask,op1,31);\n+}\n+\n+\n+vint8mf2_t test___riscv_vneg_v_i8mf2_m(vbool16_t mask,vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8mf2_m(mask,op1,31);\n+}\n+\n+\n+vint8m1_t test___riscv_vneg_v_i8m1_m(vbool8_t mask,vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8m1_m(mask,op1,31);\n+}\n+\n+\n+vint8m2_t test___riscv_vneg_v_i8m2_m(vbool4_t mask,vint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8m2_m(mask,op1,31);\n+}\n+\n+\n+vint8m4_t test___riscv_vneg_v_i8m4_m(vbool2_t mask,vint8m4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8m4_m(mask,op1,31);\n+}\n+\n+\n+vint8m8_t test___riscv_vneg_v_i8m8_m(vbool1_t mask,vint8m8_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8m8_m(mask,op1,31);\n+}\n+\n+\n+vint16mf4_t test___riscv_vneg_v_i16mf4_m(vbool64_t mask,vint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16mf4_m(mask,op1,31);\n+}\n+\n+\n+vint16mf2_t test___riscv_vneg_v_i16mf2_m(vbool32_t mask,vint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16mf2_m(mask,op1,31);\n+}\n+\n+\n+vint16m1_t test___riscv_vneg_v_i16m1_m(vbool16_t mask,vint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16m1_m(mask,op1,31);\n+}\n+\n+\n+vint16m2_t test___riscv_vneg_v_i16m2_m(vbool8_t mask,vint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16m2_m(mask,op1,31);\n+}\n+\n+\n+vint16m4_t test___riscv_vneg_v_i16m4_m(vbool4_t mask,vint16m4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16m4_m(mask,op1,31);\n+}\n+\n+\n+vint16m8_t test___riscv_vneg_v_i16m8_m(vbool2_t mask,vint16m8_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16m8_m(mask,op1,31);\n+}\n+\n+\n+vint32mf2_t test___riscv_vneg_v_i32mf2_m(vbool64_t mask,vint32mf2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i32mf2_m(mask,op1,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vneg_v_i32m1_m(vbool32_t mask,vint32m1_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i32m1_m(mask,op1,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vneg_v_i32m2_m(vbool16_t mask,vint32m2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i32m2_m(mask,op1,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vneg_v_i32m4_m(vbool8_t mask,vint32m4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i32m4_m(mask,op1,31);\n+}\n+\n+\n+vint32m8_t test___riscv_vneg_v_i32m8_m(vbool4_t mask,vint32m8_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i32m8_m(mask,op1,31);\n+}\n+\n+\n+vint64m1_t test___riscv_vneg_v_i64m1_m(vbool64_t mask,vint64m1_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i64m1_m(mask,op1,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vneg_v_i64m2_m(vbool32_t mask,vint64m2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i64m2_m(mask,op1,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vneg_v_i64m4_m(vbool16_t mask,vint64m4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i64m4_m(mask,op1,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vneg_v_i64m8_m(vbool8_t mask,vint64m8_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i64m8_m(mask,op1,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "271f1f37b80aced2f6f49436bb53874e40e9b4f0", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vneg_v_m-3.c", "status": "added", "additions": 160, "deletions": 0, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/340a770d9dc32a2673094d8a53b2d3d39dffc01f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvneg_v_m-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/340a770d9dc32a2673094d8a53b2d3d39dffc01f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvneg_v_m-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvneg_v_m-3.c?ref=340a770d9dc32a2673094d8a53b2d3d39dffc01f", "patch": "@@ -0,0 +1,160 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vneg_v_i8mf8_m(vbool64_t mask,vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8mf8_m(mask,op1,32);\n+}\n+\n+\n+vint8mf4_t test___riscv_vneg_v_i8mf4_m(vbool32_t mask,vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8mf4_m(mask,op1,32);\n+}\n+\n+\n+vint8mf2_t test___riscv_vneg_v_i8mf2_m(vbool16_t mask,vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8mf2_m(mask,op1,32);\n+}\n+\n+\n+vint8m1_t test___riscv_vneg_v_i8m1_m(vbool8_t mask,vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8m1_m(mask,op1,32);\n+}\n+\n+\n+vint8m2_t test___riscv_vneg_v_i8m2_m(vbool4_t mask,vint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8m2_m(mask,op1,32);\n+}\n+\n+\n+vint8m4_t test___riscv_vneg_v_i8m4_m(vbool2_t mask,vint8m4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8m4_m(mask,op1,32);\n+}\n+\n+\n+vint8m8_t test___riscv_vneg_v_i8m8_m(vbool1_t mask,vint8m8_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8m8_m(mask,op1,32);\n+}\n+\n+\n+vint16mf4_t test___riscv_vneg_v_i16mf4_m(vbool64_t mask,vint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16mf4_m(mask,op1,32);\n+}\n+\n+\n+vint16mf2_t test___riscv_vneg_v_i16mf2_m(vbool32_t mask,vint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16mf2_m(mask,op1,32);\n+}\n+\n+\n+vint16m1_t test___riscv_vneg_v_i16m1_m(vbool16_t mask,vint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16m1_m(mask,op1,32);\n+}\n+\n+\n+vint16m2_t test___riscv_vneg_v_i16m2_m(vbool8_t mask,vint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16m2_m(mask,op1,32);\n+}\n+\n+\n+vint16m4_t test___riscv_vneg_v_i16m4_m(vbool4_t mask,vint16m4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16m4_m(mask,op1,32);\n+}\n+\n+\n+vint16m8_t test___riscv_vneg_v_i16m8_m(vbool2_t mask,vint16m8_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16m8_m(mask,op1,32);\n+}\n+\n+\n+vint32mf2_t test___riscv_vneg_v_i32mf2_m(vbool64_t mask,vint32mf2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i32mf2_m(mask,op1,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vneg_v_i32m1_m(vbool32_t mask,vint32m1_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i32m1_m(mask,op1,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vneg_v_i32m2_m(vbool16_t mask,vint32m2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i32m2_m(mask,op1,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vneg_v_i32m4_m(vbool8_t mask,vint32m4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i32m4_m(mask,op1,32);\n+}\n+\n+\n+vint32m8_t test___riscv_vneg_v_i32m8_m(vbool4_t mask,vint32m8_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i32m8_m(mask,op1,32);\n+}\n+\n+\n+vint64m1_t test___riscv_vneg_v_i64m1_m(vbool64_t mask,vint64m1_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i64m1_m(mask,op1,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vneg_v_i64m2_m(vbool32_t mask,vint64m2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i64m2_m(mask,op1,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vneg_v_i64m4_m(vbool16_t mask,vint64m4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i64m4_m(mask,op1,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vneg_v_i64m8_m(vbool8_t mask,vint64m8_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i64m8_m(mask,op1,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "d19962bfa152362d69ee2e14f8d9223cc788ab00", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vneg_v_mu-1.c", "status": "added", "additions": 160, "deletions": 0, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/340a770d9dc32a2673094d8a53b2d3d39dffc01f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvneg_v_mu-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/340a770d9dc32a2673094d8a53b2d3d39dffc01f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvneg_v_mu-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvneg_v_mu-1.c?ref=340a770d9dc32a2673094d8a53b2d3d39dffc01f", "patch": "@@ -0,0 +1,160 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vneg_v_i8mf8_mu(vbool64_t mask,vint8mf8_t merge,vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8mf8_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vint8mf4_t test___riscv_vneg_v_i8mf4_mu(vbool32_t mask,vint8mf4_t merge,vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8mf4_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vint8mf2_t test___riscv_vneg_v_i8mf2_mu(vbool16_t mask,vint8mf2_t merge,vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8mf2_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vint8m1_t test___riscv_vneg_v_i8m1_mu(vbool8_t mask,vint8m1_t merge,vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8m1_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vint8m2_t test___riscv_vneg_v_i8m2_mu(vbool4_t mask,vint8m2_t merge,vint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8m2_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vint8m4_t test___riscv_vneg_v_i8m4_mu(vbool2_t mask,vint8m4_t merge,vint8m4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8m4_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vint8m8_t test___riscv_vneg_v_i8m8_mu(vbool1_t mask,vint8m8_t merge,vint8m8_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8m8_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vint16mf4_t test___riscv_vneg_v_i16mf4_mu(vbool64_t mask,vint16mf4_t merge,vint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16mf4_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vint16mf2_t test___riscv_vneg_v_i16mf2_mu(vbool32_t mask,vint16mf2_t merge,vint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16mf2_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vint16m1_t test___riscv_vneg_v_i16m1_mu(vbool16_t mask,vint16m1_t merge,vint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16m1_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vint16m2_t test___riscv_vneg_v_i16m2_mu(vbool8_t mask,vint16m2_t merge,vint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16m2_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vint16m4_t test___riscv_vneg_v_i16m4_mu(vbool4_t mask,vint16m4_t merge,vint16m4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16m4_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vint16m8_t test___riscv_vneg_v_i16m8_mu(vbool2_t mask,vint16m8_t merge,vint16m8_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16m8_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vint32mf2_t test___riscv_vneg_v_i32mf2_mu(vbool64_t mask,vint32mf2_t merge,vint32mf2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i32mf2_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vneg_v_i32m1_mu(vbool32_t mask,vint32m1_t merge,vint32m1_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i32m1_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vneg_v_i32m2_mu(vbool16_t mask,vint32m2_t merge,vint32m2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i32m2_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vneg_v_i32m4_mu(vbool8_t mask,vint32m4_t merge,vint32m4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i32m4_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vint32m8_t test___riscv_vneg_v_i32m8_mu(vbool4_t mask,vint32m8_t merge,vint32m8_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i32m8_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vint64m1_t test___riscv_vneg_v_i64m1_mu(vbool64_t mask,vint64m1_t merge,vint64m1_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i64m1_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vneg_v_i64m2_mu(vbool32_t mask,vint64m2_t merge,vint64m2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i64m2_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vneg_v_i64m4_mu(vbool16_t mask,vint64m4_t merge,vint64m4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i64m4_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vneg_v_i64m8_mu(vbool8_t mask,vint64m8_t merge,vint64m8_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i64m8_mu(mask,merge,op1,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "e54160b7785a51ec7761601382f4ffff8579c969", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vneg_v_mu-2.c", "status": "added", "additions": 160, "deletions": 0, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/340a770d9dc32a2673094d8a53b2d3d39dffc01f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvneg_v_mu-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/340a770d9dc32a2673094d8a53b2d3d39dffc01f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvneg_v_mu-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvneg_v_mu-2.c?ref=340a770d9dc32a2673094d8a53b2d3d39dffc01f", "patch": "@@ -0,0 +1,160 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vneg_v_i8mf8_mu(vbool64_t mask,vint8mf8_t merge,vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8mf8_mu(mask,merge,op1,31);\n+}\n+\n+\n+vint8mf4_t test___riscv_vneg_v_i8mf4_mu(vbool32_t mask,vint8mf4_t merge,vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8mf4_mu(mask,merge,op1,31);\n+}\n+\n+\n+vint8mf2_t test___riscv_vneg_v_i8mf2_mu(vbool16_t mask,vint8mf2_t merge,vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8mf2_mu(mask,merge,op1,31);\n+}\n+\n+\n+vint8m1_t test___riscv_vneg_v_i8m1_mu(vbool8_t mask,vint8m1_t merge,vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8m1_mu(mask,merge,op1,31);\n+}\n+\n+\n+vint8m2_t test___riscv_vneg_v_i8m2_mu(vbool4_t mask,vint8m2_t merge,vint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8m2_mu(mask,merge,op1,31);\n+}\n+\n+\n+vint8m4_t test___riscv_vneg_v_i8m4_mu(vbool2_t mask,vint8m4_t merge,vint8m4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8m4_mu(mask,merge,op1,31);\n+}\n+\n+\n+vint8m8_t test___riscv_vneg_v_i8m8_mu(vbool1_t mask,vint8m8_t merge,vint8m8_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8m8_mu(mask,merge,op1,31);\n+}\n+\n+\n+vint16mf4_t test___riscv_vneg_v_i16mf4_mu(vbool64_t mask,vint16mf4_t merge,vint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16mf4_mu(mask,merge,op1,31);\n+}\n+\n+\n+vint16mf2_t test___riscv_vneg_v_i16mf2_mu(vbool32_t mask,vint16mf2_t merge,vint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16mf2_mu(mask,merge,op1,31);\n+}\n+\n+\n+vint16m1_t test___riscv_vneg_v_i16m1_mu(vbool16_t mask,vint16m1_t merge,vint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16m1_mu(mask,merge,op1,31);\n+}\n+\n+\n+vint16m2_t test___riscv_vneg_v_i16m2_mu(vbool8_t mask,vint16m2_t merge,vint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16m2_mu(mask,merge,op1,31);\n+}\n+\n+\n+vint16m4_t test___riscv_vneg_v_i16m4_mu(vbool4_t mask,vint16m4_t merge,vint16m4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16m4_mu(mask,merge,op1,31);\n+}\n+\n+\n+vint16m8_t test___riscv_vneg_v_i16m8_mu(vbool2_t mask,vint16m8_t merge,vint16m8_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16m8_mu(mask,merge,op1,31);\n+}\n+\n+\n+vint32mf2_t test___riscv_vneg_v_i32mf2_mu(vbool64_t mask,vint32mf2_t merge,vint32mf2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i32mf2_mu(mask,merge,op1,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vneg_v_i32m1_mu(vbool32_t mask,vint32m1_t merge,vint32m1_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i32m1_mu(mask,merge,op1,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vneg_v_i32m2_mu(vbool16_t mask,vint32m2_t merge,vint32m2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i32m2_mu(mask,merge,op1,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vneg_v_i32m4_mu(vbool8_t mask,vint32m4_t merge,vint32m4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i32m4_mu(mask,merge,op1,31);\n+}\n+\n+\n+vint32m8_t test___riscv_vneg_v_i32m8_mu(vbool4_t mask,vint32m8_t merge,vint32m8_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i32m8_mu(mask,merge,op1,31);\n+}\n+\n+\n+vint64m1_t test___riscv_vneg_v_i64m1_mu(vbool64_t mask,vint64m1_t merge,vint64m1_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i64m1_mu(mask,merge,op1,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vneg_v_i64m2_mu(vbool32_t mask,vint64m2_t merge,vint64m2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i64m2_mu(mask,merge,op1,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vneg_v_i64m4_mu(vbool16_t mask,vint64m4_t merge,vint64m4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i64m4_mu(mask,merge,op1,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vneg_v_i64m8_mu(vbool8_t mask,vint64m8_t merge,vint64m8_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i64m8_mu(mask,merge,op1,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*t[au],\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*t[au],\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*t[au],\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*t[au],\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*t[au],\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*t[au],\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*t[au],\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*t[au],\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*t[au],\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*t[au],\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*t[au],\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*t[au],\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*t[au],\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "5bad6b479d239023f07f2e656c51658446e23997", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vneg_v_mu-3.c", "status": "added", "additions": 160, "deletions": 0, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/340a770d9dc32a2673094d8a53b2d3d39dffc01f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvneg_v_mu-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/340a770d9dc32a2673094d8a53b2d3d39dffc01f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvneg_v_mu-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvneg_v_mu-3.c?ref=340a770d9dc32a2673094d8a53b2d3d39dffc01f", "patch": "@@ -0,0 +1,160 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vneg_v_i8mf8_mu(vbool64_t mask,vint8mf8_t merge,vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8mf8_mu(mask,merge,op1,32);\n+}\n+\n+\n+vint8mf4_t test___riscv_vneg_v_i8mf4_mu(vbool32_t mask,vint8mf4_t merge,vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8mf4_mu(mask,merge,op1,32);\n+}\n+\n+\n+vint8mf2_t test___riscv_vneg_v_i8mf2_mu(vbool16_t mask,vint8mf2_t merge,vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8mf2_mu(mask,merge,op1,32);\n+}\n+\n+\n+vint8m1_t test___riscv_vneg_v_i8m1_mu(vbool8_t mask,vint8m1_t merge,vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8m1_mu(mask,merge,op1,32);\n+}\n+\n+\n+vint8m2_t test___riscv_vneg_v_i8m2_mu(vbool4_t mask,vint8m2_t merge,vint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8m2_mu(mask,merge,op1,32);\n+}\n+\n+\n+vint8m4_t test___riscv_vneg_v_i8m4_mu(vbool2_t mask,vint8m4_t merge,vint8m4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8m4_mu(mask,merge,op1,32);\n+}\n+\n+\n+vint8m8_t test___riscv_vneg_v_i8m8_mu(vbool1_t mask,vint8m8_t merge,vint8m8_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8m8_mu(mask,merge,op1,32);\n+}\n+\n+\n+vint16mf4_t test___riscv_vneg_v_i16mf4_mu(vbool64_t mask,vint16mf4_t merge,vint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16mf4_mu(mask,merge,op1,32);\n+}\n+\n+\n+vint16mf2_t test___riscv_vneg_v_i16mf2_mu(vbool32_t mask,vint16mf2_t merge,vint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16mf2_mu(mask,merge,op1,32);\n+}\n+\n+\n+vint16m1_t test___riscv_vneg_v_i16m1_mu(vbool16_t mask,vint16m1_t merge,vint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16m1_mu(mask,merge,op1,32);\n+}\n+\n+\n+vint16m2_t test___riscv_vneg_v_i16m2_mu(vbool8_t mask,vint16m2_t merge,vint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16m2_mu(mask,merge,op1,32);\n+}\n+\n+\n+vint16m4_t test___riscv_vneg_v_i16m4_mu(vbool4_t mask,vint16m4_t merge,vint16m4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16m4_mu(mask,merge,op1,32);\n+}\n+\n+\n+vint16m8_t test___riscv_vneg_v_i16m8_mu(vbool2_t mask,vint16m8_t merge,vint16m8_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16m8_mu(mask,merge,op1,32);\n+}\n+\n+\n+vint32mf2_t test___riscv_vneg_v_i32mf2_mu(vbool64_t mask,vint32mf2_t merge,vint32mf2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i32mf2_mu(mask,merge,op1,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vneg_v_i32m1_mu(vbool32_t mask,vint32m1_t merge,vint32m1_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i32m1_mu(mask,merge,op1,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vneg_v_i32m2_mu(vbool16_t mask,vint32m2_t merge,vint32m2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i32m2_mu(mask,merge,op1,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vneg_v_i32m4_mu(vbool8_t mask,vint32m4_t merge,vint32m4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i32m4_mu(mask,merge,op1,32);\n+}\n+\n+\n+vint32m8_t test___riscv_vneg_v_i32m8_mu(vbool4_t mask,vint32m8_t merge,vint32m8_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i32m8_mu(mask,merge,op1,32);\n+}\n+\n+\n+vint64m1_t test___riscv_vneg_v_i64m1_mu(vbool64_t mask,vint64m1_t merge,vint64m1_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i64m1_mu(mask,merge,op1,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vneg_v_i64m2_mu(vbool32_t mask,vint64m2_t merge,vint64m2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i64m2_mu(mask,merge,op1,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vneg_v_i64m4_mu(vbool16_t mask,vint64m4_t merge,vint64m4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i64m4_mu(mask,merge,op1,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vneg_v_i64m8_mu(vbool8_t mask,vint64m8_t merge,vint64m8_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i64m8_mu(mask,merge,op1,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "ab238068c26a85572026175b97d2b197b67bdf74", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vneg_v_tu-1.c", "status": "added", "additions": 160, "deletions": 0, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/340a770d9dc32a2673094d8a53b2d3d39dffc01f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvneg_v_tu-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/340a770d9dc32a2673094d8a53b2d3d39dffc01f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvneg_v_tu-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvneg_v_tu-1.c?ref=340a770d9dc32a2673094d8a53b2d3d39dffc01f", "patch": "@@ -0,0 +1,160 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vneg_v_i8mf8_tu(vint8mf8_t merge,vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8mf8_tu(merge,op1,vl);\n+}\n+\n+\n+vint8mf4_t test___riscv_vneg_v_i8mf4_tu(vint8mf4_t merge,vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8mf4_tu(merge,op1,vl);\n+}\n+\n+\n+vint8mf2_t test___riscv_vneg_v_i8mf2_tu(vint8mf2_t merge,vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8mf2_tu(merge,op1,vl);\n+}\n+\n+\n+vint8m1_t test___riscv_vneg_v_i8m1_tu(vint8m1_t merge,vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8m1_tu(merge,op1,vl);\n+}\n+\n+\n+vint8m2_t test___riscv_vneg_v_i8m2_tu(vint8m2_t merge,vint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8m2_tu(merge,op1,vl);\n+}\n+\n+\n+vint8m4_t test___riscv_vneg_v_i8m4_tu(vint8m4_t merge,vint8m4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8m4_tu(merge,op1,vl);\n+}\n+\n+\n+vint8m8_t test___riscv_vneg_v_i8m8_tu(vint8m8_t merge,vint8m8_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8m8_tu(merge,op1,vl);\n+}\n+\n+\n+vint16mf4_t test___riscv_vneg_v_i16mf4_tu(vint16mf4_t merge,vint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16mf4_tu(merge,op1,vl);\n+}\n+\n+\n+vint16mf2_t test___riscv_vneg_v_i16mf2_tu(vint16mf2_t merge,vint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16mf2_tu(merge,op1,vl);\n+}\n+\n+\n+vint16m1_t test___riscv_vneg_v_i16m1_tu(vint16m1_t merge,vint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16m1_tu(merge,op1,vl);\n+}\n+\n+\n+vint16m2_t test___riscv_vneg_v_i16m2_tu(vint16m2_t merge,vint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16m2_tu(merge,op1,vl);\n+}\n+\n+\n+vint16m4_t test___riscv_vneg_v_i16m4_tu(vint16m4_t merge,vint16m4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16m4_tu(merge,op1,vl);\n+}\n+\n+\n+vint16m8_t test___riscv_vneg_v_i16m8_tu(vint16m8_t merge,vint16m8_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16m8_tu(merge,op1,vl);\n+}\n+\n+\n+vint32mf2_t test___riscv_vneg_v_i32mf2_tu(vint32mf2_t merge,vint32mf2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i32mf2_tu(merge,op1,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vneg_v_i32m1_tu(vint32m1_t merge,vint32m1_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i32m1_tu(merge,op1,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vneg_v_i32m2_tu(vint32m2_t merge,vint32m2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i32m2_tu(merge,op1,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vneg_v_i32m4_tu(vint32m4_t merge,vint32m4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i32m4_tu(merge,op1,vl);\n+}\n+\n+\n+vint32m8_t test___riscv_vneg_v_i32m8_tu(vint32m8_t merge,vint32m8_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i32m8_tu(merge,op1,vl);\n+}\n+\n+\n+vint64m1_t test___riscv_vneg_v_i64m1_tu(vint64m1_t merge,vint64m1_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i64m1_tu(merge,op1,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vneg_v_i64m2_tu(vint64m2_t merge,vint64m2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i64m2_tu(merge,op1,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vneg_v_i64m4_tu(vint64m4_t merge,vint64m4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i64m4_tu(merge,op1,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vneg_v_i64m8_tu(vint64m8_t merge,vint64m8_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i64m8_tu(merge,op1,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */"}, {"sha": "59d8420c0055f44aebdc29be6e59302fe7592915", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vneg_v_tu-2.c", "status": "added", "additions": 160, "deletions": 0, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/340a770d9dc32a2673094d8a53b2d3d39dffc01f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvneg_v_tu-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/340a770d9dc32a2673094d8a53b2d3d39dffc01f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvneg_v_tu-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvneg_v_tu-2.c?ref=340a770d9dc32a2673094d8a53b2d3d39dffc01f", "patch": "@@ -0,0 +1,160 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vneg_v_i8mf8_tu(vint8mf8_t merge,vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8mf8_tu(merge,op1,31);\n+}\n+\n+\n+vint8mf4_t test___riscv_vneg_v_i8mf4_tu(vint8mf4_t merge,vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8mf4_tu(merge,op1,31);\n+}\n+\n+\n+vint8mf2_t test___riscv_vneg_v_i8mf2_tu(vint8mf2_t merge,vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8mf2_tu(merge,op1,31);\n+}\n+\n+\n+vint8m1_t test___riscv_vneg_v_i8m1_tu(vint8m1_t merge,vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8m1_tu(merge,op1,31);\n+}\n+\n+\n+vint8m2_t test___riscv_vneg_v_i8m2_tu(vint8m2_t merge,vint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8m2_tu(merge,op1,31);\n+}\n+\n+\n+vint8m4_t test___riscv_vneg_v_i8m4_tu(vint8m4_t merge,vint8m4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8m4_tu(merge,op1,31);\n+}\n+\n+\n+vint8m8_t test___riscv_vneg_v_i8m8_tu(vint8m8_t merge,vint8m8_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8m8_tu(merge,op1,31);\n+}\n+\n+\n+vint16mf4_t test___riscv_vneg_v_i16mf4_tu(vint16mf4_t merge,vint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16mf4_tu(merge,op1,31);\n+}\n+\n+\n+vint16mf2_t test___riscv_vneg_v_i16mf2_tu(vint16mf2_t merge,vint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16mf2_tu(merge,op1,31);\n+}\n+\n+\n+vint16m1_t test___riscv_vneg_v_i16m1_tu(vint16m1_t merge,vint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16m1_tu(merge,op1,31);\n+}\n+\n+\n+vint16m2_t test___riscv_vneg_v_i16m2_tu(vint16m2_t merge,vint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16m2_tu(merge,op1,31);\n+}\n+\n+\n+vint16m4_t test___riscv_vneg_v_i16m4_tu(vint16m4_t merge,vint16m4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16m4_tu(merge,op1,31);\n+}\n+\n+\n+vint16m8_t test___riscv_vneg_v_i16m8_tu(vint16m8_t merge,vint16m8_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16m8_tu(merge,op1,31);\n+}\n+\n+\n+vint32mf2_t test___riscv_vneg_v_i32mf2_tu(vint32mf2_t merge,vint32mf2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i32mf2_tu(merge,op1,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vneg_v_i32m1_tu(vint32m1_t merge,vint32m1_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i32m1_tu(merge,op1,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vneg_v_i32m2_tu(vint32m2_t merge,vint32m2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i32m2_tu(merge,op1,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vneg_v_i32m4_tu(vint32m4_t merge,vint32m4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i32m4_tu(merge,op1,31);\n+}\n+\n+\n+vint32m8_t test___riscv_vneg_v_i32m8_tu(vint32m8_t merge,vint32m8_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i32m8_tu(merge,op1,31);\n+}\n+\n+\n+vint64m1_t test___riscv_vneg_v_i64m1_tu(vint64m1_t merge,vint64m1_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i64m1_tu(merge,op1,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vneg_v_i64m2_tu(vint64m2_t merge,vint64m2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i64m2_tu(merge,op1,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vneg_v_i64m4_tu(vint64m4_t merge,vint64m4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i64m4_tu(merge,op1,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vneg_v_i64m8_tu(vint64m8_t merge,vint64m8_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i64m8_tu(merge,op1,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */"}, {"sha": "0230992d69e40529391a6823c635e485cd21b468", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vneg_v_tu-3.c", "status": "added", "additions": 160, "deletions": 0, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/340a770d9dc32a2673094d8a53b2d3d39dffc01f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvneg_v_tu-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/340a770d9dc32a2673094d8a53b2d3d39dffc01f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvneg_v_tu-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvneg_v_tu-3.c?ref=340a770d9dc32a2673094d8a53b2d3d39dffc01f", "patch": "@@ -0,0 +1,160 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vneg_v_i8mf8_tu(vint8mf8_t merge,vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8mf8_tu(merge,op1,32);\n+}\n+\n+\n+vint8mf4_t test___riscv_vneg_v_i8mf4_tu(vint8mf4_t merge,vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8mf4_tu(merge,op1,32);\n+}\n+\n+\n+vint8mf2_t test___riscv_vneg_v_i8mf2_tu(vint8mf2_t merge,vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8mf2_tu(merge,op1,32);\n+}\n+\n+\n+vint8m1_t test___riscv_vneg_v_i8m1_tu(vint8m1_t merge,vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8m1_tu(merge,op1,32);\n+}\n+\n+\n+vint8m2_t test___riscv_vneg_v_i8m2_tu(vint8m2_t merge,vint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8m2_tu(merge,op1,32);\n+}\n+\n+\n+vint8m4_t test___riscv_vneg_v_i8m4_tu(vint8m4_t merge,vint8m4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8m4_tu(merge,op1,32);\n+}\n+\n+\n+vint8m8_t test___riscv_vneg_v_i8m8_tu(vint8m8_t merge,vint8m8_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8m8_tu(merge,op1,32);\n+}\n+\n+\n+vint16mf4_t test___riscv_vneg_v_i16mf4_tu(vint16mf4_t merge,vint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16mf4_tu(merge,op1,32);\n+}\n+\n+\n+vint16mf2_t test___riscv_vneg_v_i16mf2_tu(vint16mf2_t merge,vint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16mf2_tu(merge,op1,32);\n+}\n+\n+\n+vint16m1_t test___riscv_vneg_v_i16m1_tu(vint16m1_t merge,vint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16m1_tu(merge,op1,32);\n+}\n+\n+\n+vint16m2_t test___riscv_vneg_v_i16m2_tu(vint16m2_t merge,vint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16m2_tu(merge,op1,32);\n+}\n+\n+\n+vint16m4_t test___riscv_vneg_v_i16m4_tu(vint16m4_t merge,vint16m4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16m4_tu(merge,op1,32);\n+}\n+\n+\n+vint16m8_t test___riscv_vneg_v_i16m8_tu(vint16m8_t merge,vint16m8_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16m8_tu(merge,op1,32);\n+}\n+\n+\n+vint32mf2_t test___riscv_vneg_v_i32mf2_tu(vint32mf2_t merge,vint32mf2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i32mf2_tu(merge,op1,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vneg_v_i32m1_tu(vint32m1_t merge,vint32m1_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i32m1_tu(merge,op1,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vneg_v_i32m2_tu(vint32m2_t merge,vint32m2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i32m2_tu(merge,op1,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vneg_v_i32m4_tu(vint32m4_t merge,vint32m4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i32m4_tu(merge,op1,32);\n+}\n+\n+\n+vint32m8_t test___riscv_vneg_v_i32m8_tu(vint32m8_t merge,vint32m8_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i32m8_tu(merge,op1,32);\n+}\n+\n+\n+vint64m1_t test___riscv_vneg_v_i64m1_tu(vint64m1_t merge,vint64m1_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i64m1_tu(merge,op1,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vneg_v_i64m2_tu(vint64m2_t merge,vint64m2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i64m2_tu(merge,op1,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vneg_v_i64m4_tu(vint64m4_t merge,vint64m4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i64m4_tu(merge,op1,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vneg_v_i64m8_tu(vint64m8_t merge,vint64m8_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i64m8_tu(merge,op1,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */"}, {"sha": "a1491a3feb6959cc0e4b92e8444acaf1418b0fd1", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vneg_v_tum-1.c", "status": "added", "additions": 160, "deletions": 0, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/340a770d9dc32a2673094d8a53b2d3d39dffc01f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvneg_v_tum-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/340a770d9dc32a2673094d8a53b2d3d39dffc01f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvneg_v_tum-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvneg_v_tum-1.c?ref=340a770d9dc32a2673094d8a53b2d3d39dffc01f", "patch": "@@ -0,0 +1,160 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vneg_v_i8mf8_tum(vbool64_t mask,vint8mf8_t merge,vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8mf8_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vint8mf4_t test___riscv_vneg_v_i8mf4_tum(vbool32_t mask,vint8mf4_t merge,vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8mf4_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vint8mf2_t test___riscv_vneg_v_i8mf2_tum(vbool16_t mask,vint8mf2_t merge,vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8mf2_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vint8m1_t test___riscv_vneg_v_i8m1_tum(vbool8_t mask,vint8m1_t merge,vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8m1_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vint8m2_t test___riscv_vneg_v_i8m2_tum(vbool4_t mask,vint8m2_t merge,vint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8m2_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vint8m4_t test___riscv_vneg_v_i8m4_tum(vbool2_t mask,vint8m4_t merge,vint8m4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8m4_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vint8m8_t test___riscv_vneg_v_i8m8_tum(vbool1_t mask,vint8m8_t merge,vint8m8_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8m8_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vint16mf4_t test___riscv_vneg_v_i16mf4_tum(vbool64_t mask,vint16mf4_t merge,vint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16mf4_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vint16mf2_t test___riscv_vneg_v_i16mf2_tum(vbool32_t mask,vint16mf2_t merge,vint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16mf2_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vint16m1_t test___riscv_vneg_v_i16m1_tum(vbool16_t mask,vint16m1_t merge,vint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16m1_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vint16m2_t test___riscv_vneg_v_i16m2_tum(vbool8_t mask,vint16m2_t merge,vint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16m2_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vint16m4_t test___riscv_vneg_v_i16m4_tum(vbool4_t mask,vint16m4_t merge,vint16m4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16m4_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vint16m8_t test___riscv_vneg_v_i16m8_tum(vbool2_t mask,vint16m8_t merge,vint16m8_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16m8_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vint32mf2_t test___riscv_vneg_v_i32mf2_tum(vbool64_t mask,vint32mf2_t merge,vint32mf2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i32mf2_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vneg_v_i32m1_tum(vbool32_t mask,vint32m1_t merge,vint32m1_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i32m1_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vneg_v_i32m2_tum(vbool16_t mask,vint32m2_t merge,vint32m2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i32m2_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vneg_v_i32m4_tum(vbool8_t mask,vint32m4_t merge,vint32m4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i32m4_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vint32m8_t test___riscv_vneg_v_i32m8_tum(vbool4_t mask,vint32m8_t merge,vint32m8_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i32m8_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vint64m1_t test___riscv_vneg_v_i64m1_tum(vbool64_t mask,vint64m1_t merge,vint64m1_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i64m1_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vneg_v_i64m2_tum(vbool32_t mask,vint64m2_t merge,vint64m2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i64m2_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vneg_v_i64m4_tum(vbool16_t mask,vint64m4_t merge,vint64m4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i64m4_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vneg_v_i64m8_tum(vbool8_t mask,vint64m8_t merge,vint64m8_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i64m8_tum(mask,merge,op1,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "c8af1d20ef53035e4c4d4f5253aec426703f29f1", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vneg_v_tum-2.c", "status": "added", "additions": 160, "deletions": 0, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/340a770d9dc32a2673094d8a53b2d3d39dffc01f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvneg_v_tum-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/340a770d9dc32a2673094d8a53b2d3d39dffc01f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvneg_v_tum-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvneg_v_tum-2.c?ref=340a770d9dc32a2673094d8a53b2d3d39dffc01f", "patch": "@@ -0,0 +1,160 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vneg_v_i8mf8_tum(vbool64_t mask,vint8mf8_t merge,vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8mf8_tum(mask,merge,op1,31);\n+}\n+\n+\n+vint8mf4_t test___riscv_vneg_v_i8mf4_tum(vbool32_t mask,vint8mf4_t merge,vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8mf4_tum(mask,merge,op1,31);\n+}\n+\n+\n+vint8mf2_t test___riscv_vneg_v_i8mf2_tum(vbool16_t mask,vint8mf2_t merge,vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8mf2_tum(mask,merge,op1,31);\n+}\n+\n+\n+vint8m1_t test___riscv_vneg_v_i8m1_tum(vbool8_t mask,vint8m1_t merge,vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8m1_tum(mask,merge,op1,31);\n+}\n+\n+\n+vint8m2_t test___riscv_vneg_v_i8m2_tum(vbool4_t mask,vint8m2_t merge,vint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8m2_tum(mask,merge,op1,31);\n+}\n+\n+\n+vint8m4_t test___riscv_vneg_v_i8m4_tum(vbool2_t mask,vint8m4_t merge,vint8m4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8m4_tum(mask,merge,op1,31);\n+}\n+\n+\n+vint8m8_t test___riscv_vneg_v_i8m8_tum(vbool1_t mask,vint8m8_t merge,vint8m8_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8m8_tum(mask,merge,op1,31);\n+}\n+\n+\n+vint16mf4_t test___riscv_vneg_v_i16mf4_tum(vbool64_t mask,vint16mf4_t merge,vint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16mf4_tum(mask,merge,op1,31);\n+}\n+\n+\n+vint16mf2_t test___riscv_vneg_v_i16mf2_tum(vbool32_t mask,vint16mf2_t merge,vint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16mf2_tum(mask,merge,op1,31);\n+}\n+\n+\n+vint16m1_t test___riscv_vneg_v_i16m1_tum(vbool16_t mask,vint16m1_t merge,vint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16m1_tum(mask,merge,op1,31);\n+}\n+\n+\n+vint16m2_t test___riscv_vneg_v_i16m2_tum(vbool8_t mask,vint16m2_t merge,vint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16m2_tum(mask,merge,op1,31);\n+}\n+\n+\n+vint16m4_t test___riscv_vneg_v_i16m4_tum(vbool4_t mask,vint16m4_t merge,vint16m4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16m4_tum(mask,merge,op1,31);\n+}\n+\n+\n+vint16m8_t test___riscv_vneg_v_i16m8_tum(vbool2_t mask,vint16m8_t merge,vint16m8_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16m8_tum(mask,merge,op1,31);\n+}\n+\n+\n+vint32mf2_t test___riscv_vneg_v_i32mf2_tum(vbool64_t mask,vint32mf2_t merge,vint32mf2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i32mf2_tum(mask,merge,op1,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vneg_v_i32m1_tum(vbool32_t mask,vint32m1_t merge,vint32m1_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i32m1_tum(mask,merge,op1,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vneg_v_i32m2_tum(vbool16_t mask,vint32m2_t merge,vint32m2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i32m2_tum(mask,merge,op1,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vneg_v_i32m4_tum(vbool8_t mask,vint32m4_t merge,vint32m4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i32m4_tum(mask,merge,op1,31);\n+}\n+\n+\n+vint32m8_t test___riscv_vneg_v_i32m8_tum(vbool4_t mask,vint32m8_t merge,vint32m8_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i32m8_tum(mask,merge,op1,31);\n+}\n+\n+\n+vint64m1_t test___riscv_vneg_v_i64m1_tum(vbool64_t mask,vint64m1_t merge,vint64m1_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i64m1_tum(mask,merge,op1,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vneg_v_i64m2_tum(vbool32_t mask,vint64m2_t merge,vint64m2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i64m2_tum(mask,merge,op1,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vneg_v_i64m4_tum(vbool16_t mask,vint64m4_t merge,vint64m4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i64m4_tum(mask,merge,op1,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vneg_v_i64m8_tum(vbool8_t mask,vint64m8_t merge,vint64m8_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i64m8_tum(mask,merge,op1,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "a147b6a8acb17d79da620665aabf3b167c3455bc", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vneg_v_tum-3.c", "status": "added", "additions": 160, "deletions": 0, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/340a770d9dc32a2673094d8a53b2d3d39dffc01f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvneg_v_tum-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/340a770d9dc32a2673094d8a53b2d3d39dffc01f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvneg_v_tum-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvneg_v_tum-3.c?ref=340a770d9dc32a2673094d8a53b2d3d39dffc01f", "patch": "@@ -0,0 +1,160 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vneg_v_i8mf8_tum(vbool64_t mask,vint8mf8_t merge,vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8mf8_tum(mask,merge,op1,32);\n+}\n+\n+\n+vint8mf4_t test___riscv_vneg_v_i8mf4_tum(vbool32_t mask,vint8mf4_t merge,vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8mf4_tum(mask,merge,op1,32);\n+}\n+\n+\n+vint8mf2_t test___riscv_vneg_v_i8mf2_tum(vbool16_t mask,vint8mf2_t merge,vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8mf2_tum(mask,merge,op1,32);\n+}\n+\n+\n+vint8m1_t test___riscv_vneg_v_i8m1_tum(vbool8_t mask,vint8m1_t merge,vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8m1_tum(mask,merge,op1,32);\n+}\n+\n+\n+vint8m2_t test___riscv_vneg_v_i8m2_tum(vbool4_t mask,vint8m2_t merge,vint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8m2_tum(mask,merge,op1,32);\n+}\n+\n+\n+vint8m4_t test___riscv_vneg_v_i8m4_tum(vbool2_t mask,vint8m4_t merge,vint8m4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8m4_tum(mask,merge,op1,32);\n+}\n+\n+\n+vint8m8_t test___riscv_vneg_v_i8m8_tum(vbool1_t mask,vint8m8_t merge,vint8m8_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8m8_tum(mask,merge,op1,32);\n+}\n+\n+\n+vint16mf4_t test___riscv_vneg_v_i16mf4_tum(vbool64_t mask,vint16mf4_t merge,vint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16mf4_tum(mask,merge,op1,32);\n+}\n+\n+\n+vint16mf2_t test___riscv_vneg_v_i16mf2_tum(vbool32_t mask,vint16mf2_t merge,vint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16mf2_tum(mask,merge,op1,32);\n+}\n+\n+\n+vint16m1_t test___riscv_vneg_v_i16m1_tum(vbool16_t mask,vint16m1_t merge,vint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16m1_tum(mask,merge,op1,32);\n+}\n+\n+\n+vint16m2_t test___riscv_vneg_v_i16m2_tum(vbool8_t mask,vint16m2_t merge,vint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16m2_tum(mask,merge,op1,32);\n+}\n+\n+\n+vint16m4_t test___riscv_vneg_v_i16m4_tum(vbool4_t mask,vint16m4_t merge,vint16m4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16m4_tum(mask,merge,op1,32);\n+}\n+\n+\n+vint16m8_t test___riscv_vneg_v_i16m8_tum(vbool2_t mask,vint16m8_t merge,vint16m8_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16m8_tum(mask,merge,op1,32);\n+}\n+\n+\n+vint32mf2_t test___riscv_vneg_v_i32mf2_tum(vbool64_t mask,vint32mf2_t merge,vint32mf2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i32mf2_tum(mask,merge,op1,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vneg_v_i32m1_tum(vbool32_t mask,vint32m1_t merge,vint32m1_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i32m1_tum(mask,merge,op1,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vneg_v_i32m2_tum(vbool16_t mask,vint32m2_t merge,vint32m2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i32m2_tum(mask,merge,op1,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vneg_v_i32m4_tum(vbool8_t mask,vint32m4_t merge,vint32m4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i32m4_tum(mask,merge,op1,32);\n+}\n+\n+\n+vint32m8_t test___riscv_vneg_v_i32m8_tum(vbool4_t mask,vint32m8_t merge,vint32m8_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i32m8_tum(mask,merge,op1,32);\n+}\n+\n+\n+vint64m1_t test___riscv_vneg_v_i64m1_tum(vbool64_t mask,vint64m1_t merge,vint64m1_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i64m1_tum(mask,merge,op1,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vneg_v_i64m2_tum(vbool32_t mask,vint64m2_t merge,vint64m2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i64m2_tum(mask,merge,op1,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vneg_v_i64m4_tum(vbool16_t mask,vint64m4_t merge,vint64m4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i64m4_tum(mask,merge,op1,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vneg_v_i64m8_tum(vbool8_t mask,vint64m8_t merge,vint64m8_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i64m8_tum(mask,merge,op1,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "07dde9a5a7c5838337b14469a89349774f9ba853", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vneg_v_tumu-1.c", "status": "added", "additions": 160, "deletions": 0, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/340a770d9dc32a2673094d8a53b2d3d39dffc01f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvneg_v_tumu-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/340a770d9dc32a2673094d8a53b2d3d39dffc01f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvneg_v_tumu-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvneg_v_tumu-1.c?ref=340a770d9dc32a2673094d8a53b2d3d39dffc01f", "patch": "@@ -0,0 +1,160 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vneg_v_i8mf8_tumu(vbool64_t mask,vint8mf8_t merge,vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8mf8_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vint8mf4_t test___riscv_vneg_v_i8mf4_tumu(vbool32_t mask,vint8mf4_t merge,vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8mf4_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vint8mf2_t test___riscv_vneg_v_i8mf2_tumu(vbool16_t mask,vint8mf2_t merge,vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8mf2_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vint8m1_t test___riscv_vneg_v_i8m1_tumu(vbool8_t mask,vint8m1_t merge,vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8m1_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vint8m2_t test___riscv_vneg_v_i8m2_tumu(vbool4_t mask,vint8m2_t merge,vint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8m2_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vint8m4_t test___riscv_vneg_v_i8m4_tumu(vbool2_t mask,vint8m4_t merge,vint8m4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8m4_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vint8m8_t test___riscv_vneg_v_i8m8_tumu(vbool1_t mask,vint8m8_t merge,vint8m8_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8m8_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vint16mf4_t test___riscv_vneg_v_i16mf4_tumu(vbool64_t mask,vint16mf4_t merge,vint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16mf4_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vint16mf2_t test___riscv_vneg_v_i16mf2_tumu(vbool32_t mask,vint16mf2_t merge,vint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16mf2_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vint16m1_t test___riscv_vneg_v_i16m1_tumu(vbool16_t mask,vint16m1_t merge,vint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16m1_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vint16m2_t test___riscv_vneg_v_i16m2_tumu(vbool8_t mask,vint16m2_t merge,vint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16m2_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vint16m4_t test___riscv_vneg_v_i16m4_tumu(vbool4_t mask,vint16m4_t merge,vint16m4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16m4_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vint16m8_t test___riscv_vneg_v_i16m8_tumu(vbool2_t mask,vint16m8_t merge,vint16m8_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16m8_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vint32mf2_t test___riscv_vneg_v_i32mf2_tumu(vbool64_t mask,vint32mf2_t merge,vint32mf2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i32mf2_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vneg_v_i32m1_tumu(vbool32_t mask,vint32m1_t merge,vint32m1_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i32m1_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vneg_v_i32m2_tumu(vbool16_t mask,vint32m2_t merge,vint32m2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i32m2_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vneg_v_i32m4_tumu(vbool8_t mask,vint32m4_t merge,vint32m4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i32m4_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vint32m8_t test___riscv_vneg_v_i32m8_tumu(vbool4_t mask,vint32m8_t merge,vint32m8_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i32m8_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vint64m1_t test___riscv_vneg_v_i64m1_tumu(vbool64_t mask,vint64m1_t merge,vint64m1_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i64m1_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vneg_v_i64m2_tumu(vbool32_t mask,vint64m2_t merge,vint64m2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i64m2_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vneg_v_i64m4_tumu(vbool16_t mask,vint64m4_t merge,vint64m4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i64m4_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vneg_v_i64m8_tumu(vbool8_t mask,vint64m8_t merge,vint64m8_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i64m8_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*tu,\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "f62e8474428f69402ecfb3e8798bf98b17cff87c", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vneg_v_tumu-2.c", "status": "added", "additions": 160, "deletions": 0, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/340a770d9dc32a2673094d8a53b2d3d39dffc01f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvneg_v_tumu-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/340a770d9dc32a2673094d8a53b2d3d39dffc01f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvneg_v_tumu-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvneg_v_tumu-2.c?ref=340a770d9dc32a2673094d8a53b2d3d39dffc01f", "patch": "@@ -0,0 +1,160 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vneg_v_i8mf8_tumu(vbool64_t mask,vint8mf8_t merge,vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8mf8_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vint8mf4_t test___riscv_vneg_v_i8mf4_tumu(vbool32_t mask,vint8mf4_t merge,vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8mf4_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vint8mf2_t test___riscv_vneg_v_i8mf2_tumu(vbool16_t mask,vint8mf2_t merge,vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8mf2_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vint8m1_t test___riscv_vneg_v_i8m1_tumu(vbool8_t mask,vint8m1_t merge,vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8m1_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vint8m2_t test___riscv_vneg_v_i8m2_tumu(vbool4_t mask,vint8m2_t merge,vint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8m2_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vint8m4_t test___riscv_vneg_v_i8m4_tumu(vbool2_t mask,vint8m4_t merge,vint8m4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8m4_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vint8m8_t test___riscv_vneg_v_i8m8_tumu(vbool1_t mask,vint8m8_t merge,vint8m8_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8m8_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vint16mf4_t test___riscv_vneg_v_i16mf4_tumu(vbool64_t mask,vint16mf4_t merge,vint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16mf4_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vint16mf2_t test___riscv_vneg_v_i16mf2_tumu(vbool32_t mask,vint16mf2_t merge,vint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16mf2_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vint16m1_t test___riscv_vneg_v_i16m1_tumu(vbool16_t mask,vint16m1_t merge,vint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16m1_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vint16m2_t test___riscv_vneg_v_i16m2_tumu(vbool8_t mask,vint16m2_t merge,vint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16m2_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vint16m4_t test___riscv_vneg_v_i16m4_tumu(vbool4_t mask,vint16m4_t merge,vint16m4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16m4_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vint16m8_t test___riscv_vneg_v_i16m8_tumu(vbool2_t mask,vint16m8_t merge,vint16m8_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16m8_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vint32mf2_t test___riscv_vneg_v_i32mf2_tumu(vbool64_t mask,vint32mf2_t merge,vint32mf2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i32mf2_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vneg_v_i32m1_tumu(vbool32_t mask,vint32m1_t merge,vint32m1_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i32m1_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vneg_v_i32m2_tumu(vbool16_t mask,vint32m2_t merge,vint32m2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i32m2_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vneg_v_i32m4_tumu(vbool8_t mask,vint32m4_t merge,vint32m4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i32m4_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vint32m8_t test___riscv_vneg_v_i32m8_tumu(vbool4_t mask,vint32m8_t merge,vint32m8_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i32m8_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vint64m1_t test___riscv_vneg_v_i64m1_tumu(vbool64_t mask,vint64m1_t merge,vint64m1_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i64m1_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vneg_v_i64m2_tumu(vbool32_t mask,vint64m2_t merge,vint64m2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i64m2_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vneg_v_i64m4_tumu(vbool16_t mask,vint64m4_t merge,vint64m4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i64m4_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vneg_v_i64m8_tumu(vbool8_t mask,vint64m8_t merge,vint64m8_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i64m8_tumu(mask,merge,op1,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*tu,\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*tu,\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*tu,\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*tu,\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*tu,\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*tu,\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*tu,\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*tu,\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*tu,\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*tu,\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*tu,\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*tu,\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*tu,\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*tu,\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*tu,\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*tu,\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*tu,\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*tu,\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*tu,\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*tu,\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*tu,\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*tu,\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "4a9d962e87832bd8ab594cb08e90166b6c9c6729", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vneg_v_tumu-3.c", "status": "added", "additions": 160, "deletions": 0, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/340a770d9dc32a2673094d8a53b2d3d39dffc01f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvneg_v_tumu-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/340a770d9dc32a2673094d8a53b2d3d39dffc01f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvneg_v_tumu-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvneg_v_tumu-3.c?ref=340a770d9dc32a2673094d8a53b2d3d39dffc01f", "patch": "@@ -0,0 +1,160 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vneg_v_i8mf8_tumu(vbool64_t mask,vint8mf8_t merge,vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8mf8_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vint8mf4_t test___riscv_vneg_v_i8mf4_tumu(vbool32_t mask,vint8mf4_t merge,vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8mf4_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vint8mf2_t test___riscv_vneg_v_i8mf2_tumu(vbool16_t mask,vint8mf2_t merge,vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8mf2_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vint8m1_t test___riscv_vneg_v_i8m1_tumu(vbool8_t mask,vint8m1_t merge,vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8m1_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vint8m2_t test___riscv_vneg_v_i8m2_tumu(vbool4_t mask,vint8m2_t merge,vint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8m2_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vint8m4_t test___riscv_vneg_v_i8m4_tumu(vbool2_t mask,vint8m4_t merge,vint8m4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8m4_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vint8m8_t test___riscv_vneg_v_i8m8_tumu(vbool1_t mask,vint8m8_t merge,vint8m8_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i8m8_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vint16mf4_t test___riscv_vneg_v_i16mf4_tumu(vbool64_t mask,vint16mf4_t merge,vint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16mf4_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vint16mf2_t test___riscv_vneg_v_i16mf2_tumu(vbool32_t mask,vint16mf2_t merge,vint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16mf2_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vint16m1_t test___riscv_vneg_v_i16m1_tumu(vbool16_t mask,vint16m1_t merge,vint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16m1_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vint16m2_t test___riscv_vneg_v_i16m2_tumu(vbool8_t mask,vint16m2_t merge,vint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16m2_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vint16m4_t test___riscv_vneg_v_i16m4_tumu(vbool4_t mask,vint16m4_t merge,vint16m4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16m4_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vint16m8_t test___riscv_vneg_v_i16m8_tumu(vbool2_t mask,vint16m8_t merge,vint16m8_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i16m8_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vint32mf2_t test___riscv_vneg_v_i32mf2_tumu(vbool64_t mask,vint32mf2_t merge,vint32mf2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i32mf2_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vneg_v_i32m1_tumu(vbool32_t mask,vint32m1_t merge,vint32m1_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i32m1_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vneg_v_i32m2_tumu(vbool16_t mask,vint32m2_t merge,vint32m2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i32m2_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vneg_v_i32m4_tumu(vbool8_t mask,vint32m4_t merge,vint32m4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i32m4_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vint32m8_t test___riscv_vneg_v_i32m8_tumu(vbool4_t mask,vint32m8_t merge,vint32m8_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i32m8_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vint64m1_t test___riscv_vneg_v_i64m1_tumu(vbool64_t mask,vint64m1_t merge,vint64m1_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i64m1_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vneg_v_i64m2_tumu(vbool32_t mask,vint64m2_t merge,vint64m2_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i64m2_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vneg_v_i64m4_tumu(vbool16_t mask,vint64m4_t merge,vint64m4_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i64m4_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vneg_v_i64m8_tumu(vbool8_t mask,vint64m8_t merge,vint64m8_t op1,size_t vl)\n+{\n+    return __riscv_vneg_v_i64m8_tumu(mask,merge,op1,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*tu,\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*mu\\s+vneg\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}]}