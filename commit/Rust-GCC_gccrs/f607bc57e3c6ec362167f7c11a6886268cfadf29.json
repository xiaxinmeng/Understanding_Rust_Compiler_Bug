{"sha": "f607bc57e3c6ec362167f7c11a6886268cfadf29", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjYwN2JjNTdlM2M2ZWMzNjIxNjdmN2MxMWE2ODg2MjY4Y2ZhZGYyOQ==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2001-11-21T02:57:16Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2001-11-21T02:57:16Z"}, "message": "config.gcc: Delete powerpcle-*-solaris2* stanza.\n\n\t* config.gcc: Delete powerpcle-*-solaris2* stanza.\n\t* config/rs6000/eabi.asm, config/rs6000/rs6000.c,\n\tconfig/rs6000/rs6000.h, config/rs6000/rs6000.md,\n\tconfig/rs6000/sol-ci.asm, config/rs6000/sol-cn.asm,\n\tconfig/rs6000/sysv4.h, config/rs6000/t-ppccomm,\n\tconfig/rs6000/t-ppcos: Expunge all references to Solaris.\n\n\t* config/rs6000/sol-c0.c, config/rs6000/sol2.h: Delete.\n\n\t* config/rs6000/rs6000.md: Replace '%$' with '$' in all\n\toutput templates.\n\t* config/rs6000/rs6000.h: Define DEFAULT_PCC_STRUCT_RETURN to 0,\n\tand change RETURN_IN_MEMORY to just check AGGREGATE_TYPE_P.\n\nFrom-SVN: r47232", "tree": {"sha": "917c35e154b9151d2cdc77dbcf5fc78078d145b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/917c35e154b9151d2cdc77dbcf5fc78078d145b0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f607bc57e3c6ec362167f7c11a6886268cfadf29", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f607bc57e3c6ec362167f7c11a6886268cfadf29", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f607bc57e3c6ec362167f7c11a6886268cfadf29", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f607bc57e3c6ec362167f7c11a6886268cfadf29/comments", "author": null, "committer": null, "parents": [{"sha": "533f5e0fbeed88a6bcb90619f0641e7f1a9fb8a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/533f5e0fbeed88a6bcb90619f0641e7f1a9fb8a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/533f5e0fbeed88a6bcb90619f0641e7f1a9fb8a1"}], "stats": {"total": 758, "additions": 166, "deletions": 592}, "files": [{"sha": "5f6226ac1403686f8625fad5561e7aa042cfcfd3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 62, "deletions": 46, "changes": 108, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f607bc57e3c6ec362167f7c11a6886268cfadf29/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f607bc57e3c6ec362167f7c11a6886268cfadf29/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f607bc57e3c6ec362167f7c11a6886268cfadf29", "patch": "@@ -1,3 +1,19 @@\n+2001-11-20  Zack Weinberg  <zack@codesourcery.com>\n+\n+\t* config.gcc: Delete powerpcle-*-solaris2* stanza.\n+\t* config/rs6000/eabi.asm, config/rs6000/rs6000.c,\n+\tconfig/rs6000/rs6000.h, config/rs6000/rs6000.md,\n+\tconfig/rs6000/sol-ci.asm, config/rs6000/sol-cn.asm,\n+\tconfig/rs6000/sysv4.h, config/rs6000/t-ppccomm,\n+\tconfig/rs6000/t-ppcos: Expunge all references to Solaris.\n+\n+\t* config/rs6000/sol-c0.c, config/rs6000/sol2.h: Delete.\n+\n+\t* config/rs6000/rs6000.md: Replace '%$' with '$' in all\n+\toutput templates.\n+\t* config/rs6000/rs6000.h: Define DEFAULT_PCC_STRUCT_RETURN to 0,\n+\tand change RETURN_IN_MEMORY to just check AGGREGATE_TYPE_P.\n+\n 2001-11-20  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* sh.md: Avoid uninitialized warnings.\n@@ -44,7 +60,7 @@\n \texit label as necessary.\n \n 2001-11-20  Brad Kaiser  <bkaiser@acelink.net>\n- \n+\n \t* reload1.c (elimination_effects): Use function_invariant_p\n \tinstead of CONSTANT_P when considering register equivalences.\n \n@@ -296,7 +312,7 @@ Mon Nov 19 07:21:35 2001  Douglas B. Rupp  <rupp@gnat.com>\n \n \tPR c/4448\n \t* gthr-win32.h: (__gthread_objc_thread_exit): Fix variable\n-\tname __objc_thread_exit_status so that it matches the \n+\tname __objc_thread_exit_status so that it matches the\n \tvariable defined in objc/thr.h.\n \n 2001-11-18  Craig Rodrigues  <rodrigc@gcc.gnu.org>\n@@ -480,11 +496,11 @@ Fri Nov 16 15:22:35 2001  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n 2001-11-16  Bernd Schmidt  <bernds@redhat.com>\n \n-        * config/i386/i386.c (ix86_expand_sse_comi): Generate setcc by\n+\t* config/i386/i386.c (ix86_expand_sse_comi): Generate setcc by\n \thand; don't use gen_setcc_2.\n \t(ix86_expand_builtin): Fix pshufw.\n \t* config/i386/i386.md (maskncmpv4sf3, vmmmaskncmpv4sf3): Special\n-        case UNORDERED to emit the right assembler instruction.\n+\tcase UNORDERED to emit the right assembler instruction.\n \t(mmx_pshufw): Lose operand 2.\n \t(cvtsi2ss): Fix representation.\n \tFrom Graham Stott:\n@@ -526,25 +542,25 @@ Fri Nov 13 09:06:25 2001  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n 2001-11-16  Olivier Hainque <hainque@act-europe.fr>\n \n-        * except.c: Support for catching a list of types with a single handler\n-        (struct eh_region): Change type and filter to lists for catch regions.\n-        (mark_eh_region): Mark the filter list for GC also.\n-        (expand_start_catch): Always build a list if argument not NULL and\n-        register each type of the list through add_type_for_runtime.\n-        (duplicate_eh_region_1): Change type into type_list for catch regions.\n-        (assign_filter_values): Assign a filter to each type associated with a\n-        catch region. Assign filter for NULL types in a unique entry in the\n-        filter list.\n-        (build_post_landing_pads): Emit compare and jump for each filter of\n-        the list associated with a catch region.\n-        (reachable_next_level): When the type thrown is known, stop the search\n-        as soon as one type within a catch list matches. Also, a handler is\n-        potentially reachable only if at least one of the types it catches\n-        has not been previously caught.\n-        (collect_one_action_chain): Retrieve the filter for a NULL type list\n-        from the first filter list entry. For non NULL type lists, add an\n-        action record for every filter assigned.\n-        * except.h: Reflect changes in comment before expand_start_catch.\n+\t* except.c: Support for catching a list of types with a single handler\n+\t(struct eh_region): Change type and filter to lists for catch regions.\n+\t(mark_eh_region): Mark the filter list for GC also.\n+\t(expand_start_catch): Always build a list if argument not NULL and\n+\tregister each type of the list through add_type_for_runtime.\n+\t(duplicate_eh_region_1): Change type into type_list for catch regions.\n+\t(assign_filter_values): Assign a filter to each type associated with a\n+\tcatch region. Assign filter for NULL types in a unique entry in the\n+\tfilter list.\n+\t(build_post_landing_pads): Emit compare and jump for each filter of\n+\tthe list associated with a catch region.\n+\t(reachable_next_level): When the type thrown is known, stop the search\n+\tas soon as one type within a catch list matches. Also, a handler is\n+\tpotentially reachable only if at least one of the types it catches\n+\thas not been previously caught.\n+\t(collect_one_action_chain): Retrieve the filter for a NULL type list\n+\tfrom the first filter list entry. For non NULL type lists, add an\n+\taction record for every filter assigned.\n+\t* except.h: Reflect changes in comment before expand_start_catch.\n \n Fri Nov 16 07:12:51 2001  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n@@ -683,7 +699,7 @@ Thu Nov 15 08:36:39 2001  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \t(m88k-dg-dguxbcs*): Add m88k/t-dgux to tmake_file.\n \t(hppa*): Add pa/t-bsd to tmake_file where no special xmake_file is\n \tused.\n-        (hppa*-*-openbsd*): Don't use nonexitent pa/t-openbsd.\n+\t(hppa*-*-openbsd*): Don't use nonexitent pa/t-openbsd.\n \t* config/m88k/t-dguxbcs: Remove definitions already in t-dgux.\n \t* config/m88k/t-dgux (STMP_FIXPROTO): Define.\n \t* config/i386/t-cygwin (STMP_FIXPROTO): Define.\n@@ -1491,7 +1507,7 @@ Fri Nov  9 17:51:09 2001  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n 2001-11-09  Aldy Hernandez  <aldyh@redhat.com>\n \n-        * rs6000.h (REG_CLASS_CONTENTS): Add VRSAVE bit to ALL_REGS.\n+\t* rs6000.h (REG_CLASS_CONTENTS): Add VRSAVE bit to ALL_REGS.\n \t(CONDITIONAL_REGISTER_USAGE): Disable AltiVec registers unless\n \tgenerating altivec code.\n \t(FIXED_REGISTERS): VRSAVE is fixed.\n@@ -1529,7 +1545,7 @@ Fri Nov  9 11:27:42 2001  Jeffrey A Law  (law@cygnus.com)\n \n 2001-11-09 Ben Elliston  <bje@redhat.com>\n \t   Michael Meissner  <meissner@redhat.com>\n-           Andrew MacLeod  <amacleod@redhat.com>\n+\t   Andrew MacLeod  <amacleod@redhat.com>\n \t   Richard Henderson  <rth@redhat.com>\n \t   Nick Clifton  <nickc@redhat.com>\n \t   Catherine Moore  <clm@redhat.com>\n@@ -1665,7 +1681,7 @@ Thu Nov  8 18:00:55 2001  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n 2001-11-08  Aldy Hernandez  <aldyh@redhat.com>\n \n-        * config/rs6000/rs6000.h (ASM_CPU_SPEC): Add -maltivec.\n+\t* config/rs6000/rs6000.h (ASM_CPU_SPEC): Add -maltivec.\n \n 2001-11-08  Jakub Jelinek  <jakub@redhat.com>\n \n@@ -1983,25 +1999,25 @@ Thu Nov  8 18:00:55 2001  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n 2001-11-07  Daniel Berlin  <dan@cgsoftware.com>\n \n-        * Makefile.in (df.o): Add fibheap.h to dependencies.\n-\n-        * df.h: Add prototypes for transfer functions, iterative_dataflow\n-        functions.\n-        (enum df_flow_dir): New enum.\n-        (enum df_confluence_op): New enum.\n-        (struct df): Add inverse_rts_map.\n-\n-        * df.c: Add sbitmap.h to the list of includes.\n-        (df_rd_global_compute): Removed.\n-        (df_ru_global_compute): Removed.\n-        (df_lr_global_compute): Removed.\n-        (df_rd_transfer_function): New function.\n-        (df_ru_transfer_function): New function.\n-        (df_lr_transfer_function): New function.\n-        (df_analyse_1): allocate/compute/free df->inverse_rts_map.\n-        Use iterative_dataflow_bitmap instead of df_*_global_compute.\n-        (iterative_dataflow_sbitmap): New function.\n-        (iterative_dataflow_bitmap): New function.\n+\t* Makefile.in (df.o): Add fibheap.h to dependencies.\n+\n+\t* df.h: Add prototypes for transfer functions, iterative_dataflow\n+\tfunctions.\n+\t(enum df_flow_dir): New enum.\n+\t(enum df_confluence_op): New enum.\n+\t(struct df): Add inverse_rts_map.\n+\n+\t* df.c: Add sbitmap.h to the list of includes.\n+\t(df_rd_global_compute): Removed.\n+\t(df_ru_global_compute): Removed.\n+\t(df_lr_global_compute): Removed.\n+\t(df_rd_transfer_function): New function.\n+\t(df_ru_transfer_function): New function.\n+\t(df_lr_transfer_function): New function.\n+\t(df_analyse_1): allocate/compute/free df->inverse_rts_map.\n+\tUse iterative_dataflow_bitmap instead of df_*_global_compute.\n+\t(iterative_dataflow_sbitmap): New function.\n+\t(iterative_dataflow_bitmap): New function.\n \n 2001-11-07  Joseph S. Myers  <jsm28@cam.ac.uk>\n "}, {"sha": "68417af30b61d8e16450e7b6f02a628f6d90957a", "filename": "gcc/config.gcc", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f607bc57e3c6ec362167f7c11a6886268cfadf29/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f607bc57e3c6ec362167f7c11a6886268cfadf29/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=f607bc57e3c6ec362167f7c11a6886268cfadf29", "patch": "@@ -2745,12 +2745,6 @@ powerpcle-*-eabi*)\n \ttmake_file=\"rs6000/t-ppcgas rs6000/t-ppccomm\"\n \textra_headers=ppc-asm.h\n \t;;\n-powerpcle-*-solaris2*)\n-\ttm_file=\"${tm_file} elfos.h svr4.h freebsd-spec.h rs6000/sysv4.h rs6000/sysv4le.h rs6000/sol2.h\"\n-\txm_defines=POSIX\n-\ttmake_file=\"rs6000/t-ppcos rs6000/t-ppccomm\"\n-\textra_headers=ppc-asm.h\n-\t;;\n rs6000-ibm-aix3.[01]*)\n \txm_defines=POSIX\n \ttm_file=\"${tm_file} rs6000/aix.h rs6000/aix31.h rs6000/xcoff.h\""}, {"sha": "85f2e1b80c4e2a343f081a76186df7b7bc6d71cc", "filename": "gcc/config/rs6000/eabi.asm", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f607bc57e3c6ec362167f7c11a6886268cfadf29/gcc%2Fconfig%2Frs6000%2Feabi.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f607bc57e3c6ec362167f7c11a6886268cfadf29/gcc%2Fconfig%2Frs6000%2Feabi.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Feabi.asm?ref=f607bc57e3c6ec362167f7c11a6886268cfadf29", "patch": "@@ -131,8 +131,7 @@\n FUNC_START(__eabi)\n \n /* Eliminate -mrelocatable code if not -mrelocatable, so that this file can\n-   be assembled with other assemblers than GAS, such as the Solaris PowerPC\n-   assembler.  */\n+   be assembled with other assemblers than GAS.  */\n \n #ifndef _RELOCATABLE\n \taddis\t10,0,.Linit_p@ha\t\t/* init flag */"}, {"sha": "18f44cbea0c7354976815783809b3c00f03e5b5b", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 38, "deletions": 72, "changes": 110, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f607bc57e3c6ec362167f7c11a6886268cfadf29/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f607bc57e3c6ec362167f7c11a6886268cfadf29/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=f607bc57e3c6ec362167f7c11a6886268cfadf29", "patch": "@@ -1030,7 +1030,7 @@ easy_fp_constant (op, mode)\n     return 1;\n \n   /* If we are using V.4 style PIC, consider all constants to be hard.  */\n-  if (flag_pic && (DEFAULT_ABI == ABI_V4 || DEFAULT_ABI == ABI_SOLARIS))\n+  if (flag_pic && DEFAULT_ABI == ABI_V4)\n     return 0;\n \n #ifdef TARGET_RELOCATABLE\n@@ -1457,7 +1457,7 @@ input_operand (op, mode)\n \n   /* V.4 allows SYMBOL_REFs and CONSTs that are in the small data region\n      to be valid.  */\n-  if ((DEFAULT_ABI == ABI_V4 || DEFAULT_ABI == ABI_SOLARIS)\n+  if (DEFAULT_ABI == ABI_V4\n       && (GET_CODE (op) == SYMBOL_REF || GET_CODE (op) == CONST)\n       && small_data_operand (op, Pmode))\n     return 1;\n@@ -1478,7 +1478,7 @@ small_data_operand (op, mode)\n   if (rs6000_sdata == SDATA_NONE || rs6000_sdata == SDATA_DATA)\n     return 0;\n \n-  if (DEFAULT_ABI != ABI_V4 && DEFAULT_ABI != ABI_SOLARIS)\n+  if (DEFAULT_ABI != ABI_V4)\n     return 0;\n \n   if (GET_CODE (op) == SYMBOL_REF)\n@@ -1968,7 +1968,7 @@ rs6000_emit_move (dest, source, mode)\n       /* Use default pattern for address of ELF small data */\n       if (TARGET_ELF\n \t  && mode == Pmode\n-\t  && (DEFAULT_ABI == ABI_V4 || DEFAULT_ABI == ABI_SOLARIS)\n+\t  && DEFAULT_ABI == ABI_V4\n \t  && (GET_CODE (operands[1]) == SYMBOL_REF \n \t      || GET_CODE (operands[1]) == CONST)\n \t  && small_data_operand (operands[1], mode))\n@@ -1977,7 +1977,7 @@ rs6000_emit_move (dest, source, mode)\n \t  return;\n \t}\n \n-      if ((DEFAULT_ABI == ABI_V4 || DEFAULT_ABI == ABI_SOLARIS)\n+      if (DEFAULT_ABI == ABI_V4\n \t  && mode == Pmode && mode == SImode\n \t  && flag_pic == 1 && got_operand (operands[1], mode))\n \t{\n@@ -2241,8 +2241,7 @@ function_arg_boundary (mode, type)\n      enum machine_mode mode;\n      tree type ATTRIBUTE_UNUSED;\n {\n-  if ((DEFAULT_ABI == ABI_V4 || DEFAULT_ABI == ABI_SOLARIS)\n-      && (mode == DImode || mode == DFmode))\n+  if (DEFAULT_ABI == ABI_V4 && (mode == DImode || mode == DFmode))\n     return 64;\n   else if (TARGET_ALTIVEC_ABI && ALTIVEC_VECTOR_MODE (mode))\n     return 128;\n@@ -2270,7 +2269,7 @@ function_arg_advance (cum, mode, type, named)\n       else\n \tcum->words += RS6000_ARG_SIZE (mode, type);\n     }\n-  else if (DEFAULT_ABI == ABI_V4 || DEFAULT_ABI == ABI_SOLARIS)\n+  else if (DEFAULT_ABI == ABI_V4)\n     {\n       if (TARGET_HARD_FLOAT\n \t  && (mode == SFmode || mode == DFmode))\n@@ -2384,7 +2383,7 @@ function_arg (cum, mode, type, named)\n      or compiler generated library calls.  */\n   if (mode == VOIDmode)\n     {\n-      if ((abi == ABI_V4 || abi == ABI_SOLARIS)\n+      if (abi == ABI_V4\n \t  && TARGET_HARD_FLOAT\n \t  && cum->nargs_prototype < 0\n \t  && type && (cum->prototype || TARGET_NO_PROTOTYPE))\n@@ -2405,7 +2404,7 @@ function_arg (cum, mode, type, named)\n       else\n \treturn NULL;\n     }\n-  else if (abi == ABI_V4 || abi == ABI_SOLARIS)\n+  else if (abi == ABI_V4)\n     {\n       if (TARGET_HARD_FLOAT\n \t  && (mode == SFmode || mode == DFmode))\n@@ -2497,7 +2496,7 @@ function_arg_partial_nregs (cum, mode, type, named)\n      tree type;\n      int named ATTRIBUTE_UNUSED;\n {\n-  if (DEFAULT_ABI == ABI_V4 || DEFAULT_ABI == ABI_SOLARIS)\n+  if (DEFAULT_ABI == ABI_V4)\n     return 0;\n \n   if (USE_FP_FOR_ARG_P (*cum, mode, type)\n@@ -2535,7 +2534,7 @@ function_arg_pass_by_reference (cum, mode, type, named)\n      tree type;\n      int named ATTRIBUTE_UNUSED;\n {\n-  if ((DEFAULT_ABI == ABI_V4 || DEFAULT_ABI == ABI_SOLARIS)\n+  if (DEFAULT_ABI == ABI_V4\n       && ((type && AGGREGATE_TYPE_P (type))\n \t  || mode == TFmode))\n     {\n@@ -2589,7 +2588,7 @@ setup_incoming_varargs (cum, mode, type, pretend_size, no_rtl)\n   if (stdarg_p)\n     function_arg_advance (&next_cum, mode, type, 1);\n \n-  if (DEFAULT_ABI == ABI_V4 || DEFAULT_ABI == ABI_SOLARIS)\n+  if (DEFAULT_ABI == ABI_V4)\n     {\n       /* Indicate to allocate space on the stack for varargs save area.  */\n       /* ??? Does this really have to be located at a magic spot on the\n@@ -2630,7 +2629,7 @@ setup_incoming_varargs (cum, mode, type, pretend_size, no_rtl)\n     }\n \n   /* Save FP registers if needed.  */\n-  if ((DEFAULT_ABI == ABI_V4 || DEFAULT_ABI == ABI_SOLARIS)\n+  if (DEFAULT_ABI == ABI_V4\n       && TARGET_HARD_FLOAT && ! no_rtl\n       && next_cum.fregno <= FP_ARG_V4_MAX_REG)\n     {\n@@ -2669,7 +2668,7 @@ rs6000_build_va_list ()\n \n   /* For AIX, prefer 'char *' because that's what the system\n      header files like.  */\n-  if (DEFAULT_ABI != ABI_V4 && DEFAULT_ABI != ABI_SOLARIS)\n+  if (DEFAULT_ABI != ABI_V4)\n     return build_pointer_type (char_type_node);\n \n   record = make_lang_type (RECORD_TYPE);\n@@ -2715,7 +2714,7 @@ rs6000_va_start (stdarg_p, valist, nextarg)\n   tree gpr, fpr, ovf, sav, t;\n \n   /* Only SVR4 needs something special.  */\n-  if (DEFAULT_ABI != ABI_V4 && DEFAULT_ABI != ABI_SOLARIS)\n+  if (DEFAULT_ABI != ABI_V4)\n     {\n       std_expand_builtin_va_start (stdarg_p, valist, nextarg);\n       return;\n@@ -2790,7 +2789,7 @@ rs6000_va_arg (valist, type)\n      structures which are the same size as integer types are passed\n      right-aligned, as if they were in fact integers.  This only\n      matters for structures of size 1 or 2, or 4 when TARGET_64BIT.  */\n-  if (DEFAULT_ABI != ABI_V4 && DEFAULT_ABI != ABI_SOLARIS)\n+  if (DEFAULT_ABI != ABI_V4)\n     {\n       HOST_WIDE_INT align, rounded_size;\n       enum machine_mode mode;\n@@ -4714,12 +4713,6 @@ print_operand (file, x, code)\n       asm_fprintf (file, RS6000_CALL_GLUE);\n       return;\n \n-    case '$':\n-      /* Write out either a '.' or '$' for the current location, depending\n-\t on whether this is Solaris or not.  */\n-      putc ((DEFAULT_ABI == ABI_SOLARIS) ? '.' : '$', file);\n-      return;\n-\n       /* %a is output_address.  */\n \n     case 'A':\n@@ -5169,13 +5162,7 @@ print_operand (file, x, code)\n \toutput_operand_lossage (\"invalid %%v value\");\n       else\n \t{\n-\t  int value = (INT_LOWPART (x) >> 16) & 0xffff;\n-\n-\t  /* Solaris assembler doesn't like lis 0,0x8000 */\n-\t  if (DEFAULT_ABI == ABI_SOLARIS && (value & 0x8000) != 0)\n-\t    fprintf (file, \"%d\", value | (~0 << 16));\n-\t  else\n-\t    fprintf (file, \"0x%x\", value);\n+\t  fprintf (file, \"0x%x\", (INT_LOWPART (x) >> 16) & 0xffff);\n \t  return;\n \t}\n \n@@ -5314,7 +5301,6 @@ print_operand (file, x, code)\n \n \t    case ABI_V4:\n \t    case ABI_AIX_NODESC:\n-\t    case ABI_SOLARIS:\n \t    case ABI_DARWIN:\n \t      break;\n \t    }\n@@ -5895,10 +5881,8 @@ first_reg_to_save ()\n     if (regs_ever_live[first_reg] \n \t&& (! call_used_regs[first_reg]\n \t    || (first_reg == PIC_OFFSET_TABLE_REGNUM\n-\t\t&& (((DEFAULT_ABI == ABI_V4 || DEFAULT_ABI == ABI_SOLARIS)\n-\t\t     && flag_pic == 1)\n-\t\t    || (DEFAULT_ABI == ABI_DARWIN\n-\t\t\t&& flag_pic)))))\n+\t\t&& ((DEFAULT_ABI == ABI_V4 && flag_pic == 1)\n+\t\t    || (DEFAULT_ABI == ABI_DARWIN && flag_pic)))))\n       break;\n \n   if (profile_flag)\n@@ -6166,10 +6150,8 @@ rs6000_stack_info ()\n   /* Assume that we will have to save PIC_OFFSET_TABLE_REGNUM, \n      even if it currently looks like we won't.  */\n   if (((TARGET_TOC && TARGET_MINIMAL_TOC)\n-       || (flag_pic == 1\n-\t   && (abi == ABI_V4 || abi == ABI_SOLARIS))\n-       || (flag_pic &&\n-\t   abi == ABI_DARWIN))\n+       || (flag_pic == 1 && abi == ABI_V4)\n+       || (flag_pic && abi == ABI_DARWIN))\n       && info_ptr->first_gp_reg_save > PIC_OFFSET_TABLE_REGNUM)\n     info_ptr->gp_size = reg_size * (32 - PIC_OFFSET_TABLE_REGNUM);\n   else\n@@ -6196,7 +6178,6 @@ rs6000_stack_info ()\n \t  && !FP_SAVE_INLINE (info_ptr->first_fp_reg_save))\n       || info_ptr->first_altivec_reg_save <= LAST_ALTIVEC_REGNO\n       || (abi == ABI_V4 && current_function_calls_alloca)\n-      || (abi == ABI_SOLARIS && current_function_calls_alloca)\n       || (DEFAULT_ABI == ABI_DARWIN\n \t  && flag_pic\n \t  && current_function_uses_pic_offset_table)\n@@ -6212,7 +6193,7 @@ rs6000_stack_info ()\n       || regs_ever_live[CR4_REGNO])\n     {\n       info_ptr->cr_save_p = 1;\n-      if (abi == ABI_V4 || abi == ABI_SOLARIS)\n+      if (abi == ABI_V4)\n \tinfo_ptr->cr_size = reg_size;\n     }\n \n@@ -6288,7 +6269,6 @@ rs6000_stack_info ()\n       break;\n \n     case ABI_V4:\n-    case ABI_SOLARIS:\n       info_ptr->fp_save_offset   = - info_ptr->fp_size;\n       info_ptr->gp_save_offset   = info_ptr->fp_save_offset - info_ptr->gp_size;\n       info_ptr->cr_save_offset   = info_ptr->gp_save_offset - info_ptr->cr_size;\n@@ -6358,7 +6338,7 @@ rs6000_stack_info ()\n   if (info_ptr->calls_p)\n     info_ptr->push_p = 1;\n \n-  else if (abi == ABI_V4 || abi == ABI_SOLARIS)\n+  else if (abi == ABI_V4)\n     info_ptr->push_p = (total_raw_size > info_ptr->fixed_size\n \t\t\t|| info_ptr->calls_p);\n \n@@ -6411,11 +6391,10 @@ debug_stack_info (info)\n     {\n     default:\t\t abi_string = \"Unknown\";\tbreak;\n     case ABI_NONE:\t abi_string = \"NONE\";\t\tbreak;\n-    case ABI_AIX:\t abi_string = \"AIX\";\t\tbreak;\n+    case ABI_AIX:\n     case ABI_AIX_NODESC: abi_string = \"AIX\";\t\tbreak;\n     case ABI_DARWIN:\t abi_string = \"Darwin\";\t\tbreak;\n     case ABI_V4:\t abi_string = \"V.4\";\t\tbreak;\n-    case ABI_SOLARIS:\t abi_string = \"Solaris\";\tbreak;\n     }\n \n   fprintf (stderr, \"\\tABI                 = %5s\\n\", abi_string);\n@@ -6599,8 +6578,7 @@ rs6000_emit_load_toc_table (fromprolog)\n \n   if (TARGET_ELF && DEFAULT_ABI != ABI_AIX)\n     {\n-      if ((DEFAULT_ABI == ABI_V4 || DEFAULT_ABI == ABI_SOLARIS) \n-\t  && flag_pic == 1)\n+      if (DEFAULT_ABI == ABI_V4 && flag_pic == 1)\n \t{\n \t  rtx temp = (fromprolog \n \t\t      ? gen_rtx_REG (Pmode, LINK_REGISTER_REGNUM)\n@@ -6906,7 +6884,7 @@ rs6000_emit_allocate_stack (size, copy_r12)\n \t}\n       else if (GET_CODE (stack_limit_rtx) == SYMBOL_REF\n \t       && TARGET_32BIT\n-\t       && (DEFAULT_ABI == ABI_V4 || DEFAULT_ABI == ABI_SOLARIS))\n+\t       && DEFAULT_ABI == ABI_V4)\n \t{\n \t  rtx toload = gen_rtx_CONST (VOIDmode,\n \t\t\t\t      gen_rtx_PLUS (Pmode, \n@@ -7095,7 +7073,7 @@ rs6000_emit_prologue ()\n \t\t\t|| FP_SAVE_INLINE (info->first_fp_reg_save));\n \n   /* For V.4, update stack before we do any saving and set back pointer.  */\n-  if (info->push_p && (DEFAULT_ABI == ABI_V4 || DEFAULT_ABI == ABI_SOLARIS))\n+  if (info->push_p && DEFAULT_ABI == ABI_V4)\n     {\n       if (info->total_size < 32767)\n \tsp_offset = info->total_size;\n@@ -7213,10 +7191,8 @@ rs6000_emit_prologue ()\n \tif ((regs_ever_live[info->first_gp_reg_save+i] \n \t     && ! call_used_regs[info->first_gp_reg_save+i])\n \t    || (i+info->first_gp_reg_save == PIC_OFFSET_TABLE_REGNUM\n-\t\t&& (((DEFAULT_ABI == ABI_V4 || DEFAULT_ABI == ABI_SOLARIS)\n-\t\t     && flag_pic == 1)\n-\t\t    || (DEFAULT_ABI == ABI_DARWIN\n-\t\t\t&& flag_pic))))\n+\t\t&& ((DEFAULT_ABI == ABI_V4 && flag_pic == 1)\n+\t\t    || (DEFAULT_ABI == ABI_DARWIN && flag_pic))))\n \t  {\n \t    rtx addr, reg, mem;\n \t    reg = gen_rtx_REG (reg_mode, info->first_gp_reg_save + i);\n@@ -7305,7 +7281,7 @@ rs6000_emit_prologue ()\n \n   /* Update stack and set back pointer unless this is V.4, \n      for which it was done previously.  */\n-  if (info->push_p && DEFAULT_ABI != ABI_V4 && DEFAULT_ABI != ABI_SOLARIS)\n+  if (info->push_p && DEFAULT_ABI != ABI_V4)\n     rs6000_emit_allocate_stack (info->total_size, FALSE);\n \n   /* Save AltiVec registers if needed.  */\n@@ -7382,8 +7358,8 @@ rs6000_emit_prologue ()\n \n   /* If we are using PIC_OFFSET_TABLE_REGNUM, we need to set it up.  */\n   if ((TARGET_TOC && TARGET_MINIMAL_TOC && get_pool_size () != 0)\n-      || ((DEFAULT_ABI == ABI_V4 || DEFAULT_ABI == ABI_SOLARIS) \n-\t  && flag_pic == 1 && regs_ever_live[PIC_OFFSET_TABLE_REGNUM]))\n+      || (DEFAULT_ABI == ABI_V4 && flag_pic == 1\n+\t  && regs_ever_live[PIC_OFFSET_TABLE_REGNUM]))\n   {\n     /* If emit_load_toc_table will use the link register, we need to save\n        it.  We use R11 for this purpose because emit_load_toc_table\n@@ -7513,7 +7489,7 @@ rs6000_emit_epilogue (sibcall)\n     {\n       /* Under V.4, don't reset the stack pointer until after we're done\n \t loading the saved registers.  */\n-      if (DEFAULT_ABI == ABI_V4 || DEFAULT_ABI == ABI_SOLARIS)\n+      if (DEFAULT_ABI == ABI_V4)\n \tframe_reg_rtx = gen_rtx_REG (Pmode, 11);\n \n       emit_move_insn (frame_reg_rtx,\n@@ -7522,7 +7498,7 @@ rs6000_emit_epilogue (sibcall)\n     }\n   else if (info->push_p)\n     {\n-      if (DEFAULT_ABI == ABI_V4 || DEFAULT_ABI == ABI_SOLARIS)\n+      if (DEFAULT_ABI == ABI_V4)\n \tsp_offset = info->total_size;\n       else\n \t{\n@@ -7614,10 +7590,8 @@ rs6000_emit_epilogue (sibcall)\n       if ((regs_ever_live[info->first_gp_reg_save+i] \n \t   && ! call_used_regs[info->first_gp_reg_save+i])\n \t  || (i+info->first_gp_reg_save == PIC_OFFSET_TABLE_REGNUM\n-\t      && (((DEFAULT_ABI == ABI_V4 || DEFAULT_ABI == ABI_SOLARIS)\n-\t\t   && flag_pic == 1)\n-\t\t  || (DEFAULT_ABI == ABI_DARWIN\n-\t\t      && flag_pic))))\n+\t      && ((DEFAULT_ABI == ABI_V4 && flag_pic == 1)\n+\t\t  || (DEFAULT_ABI == ABI_DARWIN && flag_pic))))\n \t{\n \t  rtx addr = gen_rtx_PLUS (Pmode, frame_reg_rtx, \n \t\t\t\t   GEN_INT (info->gp_save_offset \n@@ -7745,7 +7719,7 @@ rs6000_emit_epilogue (sibcall)\n      (which may not have any obvious dependency on the stack).  This\n      doesn't hurt performance, because there is no scheduling that can\n      be done after this point.  */\n-  if (DEFAULT_ABI == ABI_V4 || DEFAULT_ABI == ABI_SOLARIS)\n+  if (DEFAULT_ABI == ABI_V4)\n     {\n       if (frame_reg_rtx != sp_reg_rtx)\n \t  rs6000_emit_stack_tie ();\n@@ -8167,7 +8141,6 @@ output_mi_thunk (file, thunk_fndecl, delta, function)\n \n     case ABI_V4:\n     case ABI_AIX_NODESC:\n-    case ABI_SOLARIS:\n       prefix = \"\";\n       break;\n     }\n@@ -8230,7 +8203,6 @@ output_mi_thunk (file, thunk_fndecl, delta, function)\n \t  break;\n \n \tcase ABI_AIX_NODESC:\n-\tcase ABI_SOLARIS:\n \tcase ABI_V4:\n \t  fprintf (file, \"\\tb %s\", prefix);\n \t  assemble_name (file, fname);\n@@ -8892,7 +8864,6 @@ output_function_profiler (file, labelno)\n       abort ();\n \n     case ABI_V4:\n-    case ABI_SOLARIS:\n     case ABI_AIX_NODESC:\n       fprintf (file, \"\\tmflr %s\\n\", reg_names[0]);\n       if (flag_pic == 1)\n@@ -9087,7 +9058,6 @@ rs6000_trampoline_size ()\n       break;\n \n     case ABI_V4:\n-    case ABI_SOLARIS:\n     case ABI_AIX_NODESC:\n       ret = (TARGET_32BIT) ? 40 : 48;\n       break;\n@@ -9135,7 +9105,6 @@ rs6000_initialize_trampoline (addr, fnaddr, cxt)\n \n     /* Under V.4/eabi, call __trampoline_setup to do the real work.  */\n     case ABI_V4:\n-    case ABI_SOLARIS:\n     case ABI_AIX_NODESC:\n       emit_library_call (gen_rtx_SYMBOL_REF (SImode, \"__trampoline_setup\"),\n \t\t\t FALSE, VOIDmode, 4,\n@@ -9380,7 +9349,7 @@ rs6000_encode_section_info (decl)\n \t}\n     }\n   else if (rs6000_sdata != SDATA_NONE\n-\t   && (DEFAULT_ABI == ABI_V4 || DEFAULT_ABI == ABI_SOLARIS)\n+\t   && DEFAULT_ABI == ABI_V4\n \t   && TREE_CODE (decl) == VAR_DECL)\n     {\n       int size = int_size_in_bytes (TREE_TYPE (decl));\n@@ -9812,9 +9781,6 @@ rs6000_elf_section_type_flags (decl, name, reloc)\n   if (TARGET_RELOCATABLE)\n     flags |= SECTION_WRITE;\n \n-  /* Solaris doesn't like @nobits, and gas can handle .sbss without it.  */\n-  flags &= ~SECTION_BSS;\n-\n   return flags;\n }\n "}, {"sha": "c2b1b71c2e292598a15e7b1bf4fac2ae15275ef3", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f607bc57e3c6ec362167f7c11a6886268cfadf29/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f607bc57e3c6ec362167f7c11a6886268cfadf29/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=f607bc57e3c6ec362167f7c11a6886268cfadf29", "patch": "@@ -445,7 +445,7 @@ extern struct rs6000_cpu_select rs6000_select[];\n \n /* Debug support */\n extern const char *rs6000_debug_name;\t/* Name for -mdebug-xxxx option */\n-extern const char *rs6000_abi_string;\t/* for -mabi={sysv,darwin,solaris,eabi,aix,altivec} */\n+extern const char *rs6000_abi_string;\t/* for -mabi={sysv,darwin,eabi,aix,altivec} */\n extern int rs6000_debug_stack;\t\t/* debug stack applications */\n extern int rs6000_debug_arg;\t\t/* debug argument handling */\n \n@@ -932,8 +932,7 @@ extern int rs6000_debug_arg;\t\t/* debug argument handling */\n   if (TARGET_SOFT_FLOAT)\t\t\t\t\t\t\\\n     for (i = 32; i < 64; i++)\t\t\t\t\t\t\\\n       fixed_regs[i] = call_used_regs[i] = 1; \t\t\t\t\\\n-  if ((DEFAULT_ABI == ABI_V4 || DEFAULT_ABI == ABI_SOLARIS)\t\t\\\n-      && flag_pic == 1)\t\t\t\t\t\t\t\\\n+  if (DEFAULT_ABI == ABI_V4 && flag_pic == 1)\t\t\t\t\\\n     fixed_regs[PIC_OFFSET_TABLE_REGNUM]\t\t\t\t\t\\\n       = call_used_regs[PIC_OFFSET_TABLE_REGNUM] = 1;\t\t\t\\\n   if (DEFAULT_ABI == ABI_DARWIN && flag_pic)\t\t\t\t\\\n@@ -1181,7 +1180,7 @@ enum reg_class\n    : (C) == 'R' ? LEGITIMATE_CONSTANT_POOL_ADDRESS_P (OP)\t\t\\\n    : (C) == 'S' ? mask64_operand (OP, VOIDmode)\t\t\t\t\\\n    : (C) == 'T' ? mask_operand (OP, VOIDmode)\t\t\t\t\\\n-   : (C) == 'U' ? ((DEFAULT_ABI == ABI_V4 || DEFAULT_ABI == ABI_SOLARIS) \\\n+   : (C) == 'U' ? (DEFAULT_ABI == ABI_V4\t\t\t\t\\\n \t\t   && small_data_operand (OP, GET_MODE (OP)))\t\t\\\n    : 0)\n \n@@ -1254,9 +1253,9 @@ enum reg_class\n enum rs6000_abi {\n   ABI_NONE,\n   ABI_AIX,\t\t\t/* IBM's AIX */\n-  ABI_AIX_NODESC,\t\t/* AIX calling sequence minus function descriptors */\n+  ABI_AIX_NODESC,\t\t/* AIX calling sequence minus\n+\t\t\t\t   function descriptors */\n   ABI_V4,\t\t\t/* System V.4/eabi */\n-  ABI_SOLARIS,\t\t\t/* Solaris */\n   ABI_DARWIN\t\t\t/* Apple's Darwin (OS X kernel) */\n };\n \n@@ -1437,12 +1436,14 @@ typedef struct rs6000_stack {\n /* The definition of this macro implies that there are cases where\n    a scalar value cannot be returned in registers.\n \n-   For the RS/6000, any structure or union type is returned in memory, except for\n-   Solaris, which returns structures <= 8 bytes in registers.  */\n+   For the RS/6000, any structure or union type is returned in memory.\n+   (FIXME: Except for V.4, where those <= 8 bytes are returned in\n+   registers.  Can't change this without breaking compatibility.)  */\n \n-#define RETURN_IN_MEMORY(TYPE)\t\t\t\t\t\t\\\n-  (TYPE_MODE (TYPE) == BLKmode\t\t\t\t\t\t\\\n-   && (DEFAULT_ABI != ABI_SOLARIS || int_size_in_bytes (TYPE) > 8))\n+#define RETURN_IN_MEMORY(TYPE) AGGREGATE_TYPE_P (TYPE)\n+\n+/* Let RETURN_IN_MEMORY control what happens.  */\n+#define DEFAULT_PCC_STRUCT_RETURN 0\n \n /* Mode of stack savearea.\n    FUNCTION is VOIDmode because calling convention maintains SP.\n@@ -1730,8 +1731,7 @@ typedef struct rs6000_args\n  ((DEFAULT_ABI == ABI_AIX\t\t\t\t\t\t\\\n    || DEFAULT_ABI == ABI_DARWIN\t\t\t\t\t\t\\\n    || DEFAULT_ABI == ABI_AIX_NODESC)\t? (TARGET_32BIT ? 8 : 16) :\t\\\n-  (DEFAULT_ABI == ABI_V4\t\t\t\t\t\t\\\n-   || DEFAULT_ABI == ABI_SOLARIS)\t? (TARGET_32BIT ? 4 : 8) :\t\\\n+  (DEFAULT_ABI == ABI_V4)\t\t? (TARGET_32BIT ? 4 : 8) :\t\\\n   (internal_error (\"RETURN_ADDRESS_OFFSET not supported\"), 0))\n \n /* The current return address is in link register (65).  The return address\n@@ -1913,7 +1913,7 @@ typedef struct rs6000_args\n   && CONSTANT_POOL_EXPR_P (XEXP (X, 1)))\n \n #define LEGITIMATE_SMALL_DATA_P(MODE, X)\t\t\t\t\\\n-  ((DEFAULT_ABI == ABI_V4 || DEFAULT_ABI == ABI_SOLARIS)\t\t\\\n+  (DEFAULT_ABI == ABI_V4\t\t\t\t\t\t\\\n    && !flag_pic && !TARGET_TOC\t\t\t\t\t\t\\\n    && (GET_CODE (X) == SYMBOL_REF || GET_CODE (X) == CONST)\t\t\\\n    && small_data_operand (X, MODE))"}, {"sha": "2c664cad6243938bb1f9e30e79e89053c3a78942", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 21, "deletions": 26, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f607bc57e3c6ec362167f7c11a6886268cfadf29/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f607bc57e3c6ec362167f7c11a6886268cfadf29/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=f607bc57e3c6ec362167f7c11a6886268cfadf29", "patch": "@@ -7385,7 +7385,7 @@\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"\")\n \t(unspec:SI [(match_operand:SI 1 \"got_operand\" \"\")\n \t\t    (match_dup 2)] 8))]\n-  \"(DEFAULT_ABI == ABI_V4 || DEFAULT_ABI == ABI_SOLARIS) && flag_pic == 1\"\n+  \"DEFAULT_ABI == ABI_V4 && flag_pic == 1\"\n   \"\n {\n   if (GET_CODE (operands[1]) == CONST)\n@@ -7411,7 +7411,7 @@\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n \t(unspec:SI [(match_operand:SI 1 \"got_no_const_operand\" \"\")\n \t\t    (match_operand:SI 2 \"gpc_reg_operand\" \"b\")] 8))]\n-  \"(DEFAULT_ABI == ABI_V4 || DEFAULT_ABI == ABI_SOLARIS) && flag_pic == 1\"\n+  \"DEFAULT_ABI == ABI_V4 && flag_pic == 1\"\n   \"{l|lwz} %0,%a1@got(%2)\"\n   [(set_attr \"type\" \"load\")])\n \n@@ -7421,7 +7421,7 @@\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"\")\n \t(unspec:SI [(match_operand:SI 1 \"got_no_const_operand\" \"\")\n \t\t    (match_operand:SI 2 \"memory_operand\" \"\")] 8))]\n-  \"(DEFAULT_ABI == ABI_V4 || DEFAULT_ABI == ABI_SOLARIS)\n+  \"DEFAULT_ABI == ABI_V4\n     && flag_pic == 1\n     && (reload_in_progress || reload_completed)\"\n   [(set (match_dup 0) (match_dup 2))\n@@ -9288,8 +9288,7 @@\n (define_insn \"load_toc_v4_pic_si\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=l\")\n \t(unspec:SI [(const_int 0)] 7))]\n-  \"(DEFAULT_ABI == ABI_V4 || DEFAULT_ABI == ABI_SOLARIS) && flag_pic == 1\n-   && TARGET_32BIT\"\n+  \"DEFAULT_ABI == ABI_V4 && flag_pic == 1 && TARGET_32BIT\"\n   \"bl _GLOBAL_OFFSET_TABLE_@local-4\"\n   [(set_attr \"type\" \"branch\")\n    (set_attr \"length\" \"4\")])\n@@ -9342,7 +9341,7 @@\n \n (define_expand \"builtin_setjmp_receiver\"\n   [(use (label_ref (match_operand 0 \"\" \"\")))]\n-  \"((DEFAULT_ABI == ABI_V4 || DEFAULT_ABI == ABI_SOLARIS) && flag_pic == 1)\n+  \"(DEFAULT_ABI == ABI_V4 && flag_pic == 1)\n    || (TARGET_TOC && TARGET_MINIMAL_TOC)\"\n   \"\n {\n@@ -9473,8 +9472,7 @@\n \n       if (DEFAULT_ABI == ABI_V4\n           || DEFAULT_ABI == ABI_AIX_NODESC\n-\t  || DEFAULT_ABI == ABI_DARWIN\n-\t  || DEFAULT_ABI == ABI_SOLARIS)\n+\t  || DEFAULT_ABI == ABI_DARWIN)\n \toperands[0] = force_reg (Pmode, operands[0]);\n \n       else if (DEFAULT_ABI == ABI_AIX)\n@@ -9522,8 +9520,7 @@\n \n       if (DEFAULT_ABI == ABI_V4\n \t  || DEFAULT_ABI == ABI_AIX_NODESC\n-\t  || DEFAULT_ABI == ABI_DARWIN\n-\t  || DEFAULT_ABI == ABI_SOLARIS)\n+\t  || DEFAULT_ABI == ABI_DARWIN)\n \toperands[0] = force_reg (Pmode, operands[0]);\n \n       else if (DEFAULT_ABI == ABI_AIX)\n@@ -9755,8 +9752,7 @@\n    (clobber (match_scratch:SI 3 \"=l,l,l,l\"))]\n   \"DEFAULT_ABI == ABI_AIX_NODESC\n    || DEFAULT_ABI == ABI_V4\n-   || DEFAULT_ABI == ABI_DARWIN\n-   || DEFAULT_ABI == ABI_SOLARIS\"\n+   || DEFAULT_ABI == ABI_DARWIN\"\n   \"*\n {\n   if (INTVAL (operands[2]) & CALL_V4_SET_FP_ARGS)\n@@ -9788,8 +9784,7 @@\n    (clobber (match_scratch:SI 4 \"=l,l,l,l\"))]\n   \"DEFAULT_ABI == ABI_AIX_NODESC\n    || DEFAULT_ABI == ABI_V4\n-   || DEFAULT_ABI == ABI_DARWIN\n-   || DEFAULT_ABI == ABI_SOLARIS\"\n+   || DEFAULT_ABI == ABI_DARWIN\"\n   \"*\n {\n   if (INTVAL (operands[3]) & CALL_V4_SET_FP_ARGS)\n@@ -12933,7 +12928,7 @@\n   else if (get_attr_length (insn) == 4)\n     return \\\"{bdn|bdnz} %l0\\\";\n   else\n-    return \\\"bdz %$+8\\;b %l0\\\";\n+    return \\\"bdz $+8\\;b %l0\\\";\n }\"\n   [(set_attr \"type\" \"branch\")\n    (set_attr \"length\" \"*,12,16\")])\n@@ -12957,7 +12952,7 @@\n   else if (get_attr_length (insn) == 4)\n     return \\\"bdz %l0\\\";\n   else\n-    return \\\"{bdn|bdnz} %$+8\\;b %l0\\\";\n+    return \\\"{bdn|bdnz} $+8\\;b %l0\\\";\n }\"\n   [(set_attr \"type\" \"branch\")\n    (set_attr \"length\" \"*,12,16\")])\n@@ -12981,7 +12976,7 @@\n   else if (get_attr_length (insn) == 4)\n     return \\\"{bdn|bdnz} %l0\\\";\n   else\n-    return \\\"bdz %$+8\\;b %l0\\\";\n+    return \\\"bdz $+8\\;b %l0\\\";\n }\"\n   [(set_attr \"type\" \"branch\")\n    (set_attr \"length\" \"*,12,16\")])\n@@ -13005,7 +13000,7 @@\n   else if (get_attr_length (insn) == 4)\n     return \\\"bdz %l0\\\";\n   else\n-    return \\\"{bdn|bdnz} %$+8\\;b %l0\\\";\n+    return \\\"{bdn|bdnz} $+8\\;b %l0\\\";\n }\"\n   [(set_attr \"type\" \"branch\")\n    (set_attr \"length\" \"*,12,16\")])\n@@ -13031,7 +13026,7 @@\n   else if (get_attr_length (insn) == 4)\n     return \\\"{bdn|bdnz} %l0\\\";\n   else\n-    return \\\"bdz %$+8\\;b %l0\\\";\n+    return \\\"bdz $+8\\;b %l0\\\";\n }\"\n   [(set_attr \"type\" \"branch\")\n    (set_attr \"length\" \"*,12,16\")])\n@@ -13055,7 +13050,7 @@\n   else if (get_attr_length (insn) == 4)\n     return \\\"bdz %l0\\\";\n   else\n-    return \\\"{bdn|bdnz} %$+8\\;b %l0\\\";\n+    return \\\"{bdn|bdnz} $+8\\;b %l0\\\";\n }\"\n   [(set_attr \"type\" \"branch\")\n    (set_attr \"length\" \"*,12,16\")])\n@@ -13079,7 +13074,7 @@\n   else if (get_attr_length (insn) == 4)\n     return \\\"{bdn|bdnz} %l0\\\";\n   else\n-    return \\\"bdz %$+8\\;b %l0\\\";\n+    return \\\"bdz $+8\\;b %l0\\\";\n }\"\n   [(set_attr \"type\" \"branch\")\n    (set_attr \"length\" \"*,12,16\")])\n@@ -13103,7 +13098,7 @@\n   else if (get_attr_length (insn) == 4)\n     return \\\"bdz %l0\\\";\n   else\n-    return \\\"{bdn|bdnz} %$+8\\;b %l0\\\";\n+    return \\\"{bdn|bdnz} $+8\\;b %l0\\\";\n }\"\n   [(set_attr \"type\" \"branch\")\n    (set_attr \"length\" \"*,12,16\")])\n@@ -13129,7 +13124,7 @@\n   else if (get_attr_length (insn) == 4)\n     return \\\"bdz %l0\\\";\n   else\n-    return \\\"{bdn|bdnz} %$+8\\;b %l0\\\";\n+    return \\\"{bdn|bdnz} $+8\\;b %l0\\\";\n }\"\n   [(set_attr \"type\" \"branch\")\n    (set_attr \"length\" \"*,12,16\")])\n@@ -13153,7 +13148,7 @@\n   else if (get_attr_length (insn) == 4)\n     return \\\"{bdn|bdnz} %l0\\\";\n   else\n-    return \\\"bdz %$+8\\;b %l0\\\";\n+    return \\\"bdz $+8\\;b %l0\\\";\n }\"\n   [(set_attr \"type\" \"branch\")\n    (set_attr \"length\" \"*,12,16\")])\n@@ -13177,7 +13172,7 @@\n   else if (get_attr_length (insn) == 4)\n     return \\\"bdz %l0\\\";\n   else\n-    return \\\"{bdn|bdnz} %$+8\\;b %l0\\\";\n+    return \\\"{bdn|bdnz} $+8\\;b %l0\\\";\n }\"\n   [(set_attr \"type\" \"branch\")\n    (set_attr \"length\" \"*,12,16\")])\n@@ -13201,7 +13196,7 @@\n   else if (get_attr_length (insn) == 4)\n     return \\\"{bdn|bdnz} %l0\\\";\n   else\n-    return \\\"bdz %$+8\\;b %l0\\\";\n+    return \\\"bdz $+8\\;b %l0\\\";\n }\"\n   [(set_attr \"type\" \"branch\")\n    (set_attr \"length\" \"*,12,16\")])"}, {"sha": "f7ccb7d7799b8e931826c7282a27f5640eced2c9", "filename": "gcc/config/rs6000/sol-c0.c", "status": "removed", "additions": 0, "deletions": 123, "changes": 123, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/533f5e0fbeed88a6bcb90619f0641e7f1a9fb8a1/gcc%2Fconfig%2Frs6000%2Fsol-c0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/533f5e0fbeed88a6bcb90619f0641e7f1a9fb8a1/gcc%2Fconfig%2Frs6000%2Fsol-c0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fsol-c0.c?ref=533f5e0fbeed88a6bcb90619f0641e7f1a9fb8a1", "patch": "@@ -1,123 +0,0 @@\n-/* Solaris PowerPC startfile.  */\n-/* Copyright (C) 1996, 2000 Free Software Foundation, Inc.\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-In addition to the permissions in the GNU General Public License, the\n-Free Software Foundation gives you unlimited permission to link the\n-compiled version of this file into combinations with other programs,\n-and to distribute those combinations without any restriction coming\n-from the use of this file.  (The General Public License restrictions\n-do apply in other respects; for example, they cover modification of\n-the file, and distribution when not linked into a combine\n-executable.)\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-extern char **_environ;\n-\n-extern int atexit (void (*__func) (void));\n-extern void __init (void) __attribute__ ((__longcall__));\n-extern void __fini (void) __attribute__ ((__longcall__));\n-extern void _start(int argc, char *argv[], char *envp[], void *auxp, \n-\t\t   void (*termfunc)(void));\n-extern void exit(int);\n-extern int main (int argc, char *argv[], char *envp[], void *auxp);\n-\n-typedef void (*func_ptr) (void);\n-int (*__atexit)(func_ptr) = atexit;\n-\n-/* Exception handling */\n-struct ex_shared1 {\n-  void\t*prev;\n-  void\t*next;\n-  char\t*text_start;\n-  char\t*range_start;\n-  char\t*text_end;\n-  char\t*range_end;\n-};\n-\n-struct ex_shared {\n-  void (*ex_register) (struct ex_shared1 *);\n-  void (*ex_deregister) (struct ex_shared1 *);\n-  struct ex_shared1 shared_info;\n-};\n-\n-extern char _ex_text0[], _ex_text1[];\n-extern char _ex_range0[], _ex_range1[];\n-extern void _ex_register (struct ex_shared1 *);\n-extern void _ex_deregister (struct ex_shared1 *);\n-extern char _SDA_BASE_[];\n-extern char _SDA2_BASE_[];\n-\n-struct ex_shared shared __attribute__((section(\".ex_shared\"))) = {\n-  _ex_register,\n-  _ex_deregister,\n-  {\n-    (void *)0,\n-    (void *)0,\n-    _ex_text0,\n-    _ex_range0,\n-    _ex_text1,\n-    _ex_range1\n-  }\n-};\n-\n-static void\n-deregister (void)\n-{\n-  (* shared.ex_deregister) (&shared.shared_info);\n-}\n-\n-/* Start function.  */\n-void\n-_start(int argc, char *argv[], char *envp[], void *auxp, \n-       void (*termfunc)(void))\n-{\n-  int ret;\n-  int dummy = 0;\n-\n-#if 0\n-  /* Disable this for now, it causes an impossible reload.  */\n-  /* Load up r13/r2 before we do anything else.  */\n-  __asm__ volatile (\"mr %%r13,%0;mr %%r2,%1\" : \"=r\" (dummy) : \"r\" (&_SDA_BASE_[0]), \"r\" (&_SDA2_BASE_[0]), \"r\" (dummy));\n-#endif\n-\n-  _environ = envp + dummy;\n-\n-  /* Register loader termination function (the || dummy is to make sure the above asm\n-     is not optimized away).  */\n-  if (termfunc)\n-    atexit (termfunc);\n-\n-  /* Register exception handler if needed */\n-  if (shared.ex_register)\n-    (* shared.ex_register) (&shared.shared_info);\n-\n-  if (shared.ex_deregister)\n-    atexit (deregister);\n-\n-  /* Call any global constructors and destructors.  */\n-  __init ();\n-\n-  atexit (__fini);\n-\n-  /* Call the main program now */\n-  ret = main (argc, argv, envp, auxp);\n-\n-  /* Return to the os */\n-  exit (ret);\n-}"}, {"sha": "b1689605cc9793ab8653675978bd64da70fe92ae", "filename": "gcc/config/rs6000/sol-ci.asm", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f607bc57e3c6ec362167f7c11a6886268cfadf29/gcc%2Fconfig%2Frs6000%2Fsol-ci.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f607bc57e3c6ec362167f7c11a6886268cfadf29/gcc%2Fconfig%2Frs6000%2Fsol-ci.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fsol-ci.asm?ref=f607bc57e3c6ec362167f7c11a6886268cfadf29", "patch": "@@ -1,4 +1,4 @@\n-# crti.s for solaris\n+# crti.s for sysv4\n \n #   Copyright (C) 1996 Free Software Foundation, Inc.\n #   Written By Michael Meissner\n@@ -61,12 +61,12 @@ __CTOR_LIST__:\n \t.type\t__DTOR_LIST__,@object\n __DTOR_LIST__:\n \n-# Head of __init function used for static constructors in Solaris\n+# Head of _init function used for static constructors\n \t.section \".init\",\"ax\"\n \t.align 2\n-\t.globl __init\n-\t.type __init,@function\n-__init:\tstwu\t%r1,-16(%r1)\n+\t.globl _init\n+\t.type _init,@function\n+_init:\tstwu\t%r1,-16(%r1)\n \tmflr\t%r0\n \tstw\t%r31,12(%r1)\n \tstw\t%r0,16(%r1)\n@@ -82,12 +82,12 @@ __init:\tstwu\t%r1,-16(%r1)\n #\tblrl\n #.Lno_reg:\n \n-# Head of __fini function used for static destructors in Solaris\n+# Head of _fini function used for static destructors\n \t.section \".fini\",\"ax\"\n \t.align 2\n-\t.globl __fini\n-\t.type __fini,@function\n-__fini:\tstwu\t%r1,-16(%r1)\n+\t.globl _fini\n+\t.type _fini,@function\n+_fini:\tstwu\t%r1,-16(%r1)\n \tmflr\t%r0\n \tstw\t%r31,12(%r1)\n \tstw\t%r0,16(%r1)"}, {"sha": "b1da7d7b6fb271c2efa2c1e46db2975909075fe0", "filename": "gcc/config/rs6000/sol-cn.asm", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f607bc57e3c6ec362167f7c11a6886268cfadf29/gcc%2Fconfig%2Frs6000%2Fsol-cn.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f607bc57e3c6ec362167f7c11a6886268cfadf29/gcc%2Fconfig%2Frs6000%2Fsol-cn.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fsol-cn.asm?ref=f607bc57e3c6ec362167f7c11a6886268cfadf29", "patch": "@@ -1,4 +1,4 @@\n-# crtn.s for solaris\n+# crtn.s for sysv4\n \n #   Copyright (C) 1996 Free Software Foundation, Inc.\n #   Written By Michael Meissner\n@@ -65,15 +65,15 @@ _ex_text1:\n \t.globl\t_ex_range1\n _ex_range1:\n \n-# Tail of __init used for static constructors in Solaris\n+# Tail of _init used for static constructors\n \t.section \".init\",\"ax\"\n \tlwz\t%r0,16(%r1)\n \tlwz\t%r31,12(%r1)\n \tmtlr\t%r0\n \taddi\t%r1,%r1,16\n \tblr\n \n-# Tail of __fini used for static destructors in Solaris\n+# Tail of _fini used for static destructors\n \t.section \".fini\",\"ax\"\n \tlwz\t%r0,16(%r1)\n \tlwz\t%r31,12(%r1)"}, {"sha": "75e7343eb6042c35364b91931f248c1f2702dea1", "filename": "gcc/config/rs6000/sol2.h", "status": "removed", "additions": 0, "deletions": 174, "changes": 174, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/533f5e0fbeed88a6bcb90619f0641e7f1a9fb8a1/gcc%2Fconfig%2Frs6000%2Fsol2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/533f5e0fbeed88a6bcb90619f0641e7f1a9fb8a1/gcc%2Fconfig%2Frs6000%2Fsol2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fsol2.h?ref=533f5e0fbeed88a6bcb90619f0641e7f1a9fb8a1", "patch": "@@ -1,174 +0,0 @@\n-/* Definitions of target machine for GNU compiler,\n-   for IBM RS/6000 running AIX version 3.1.\n-   Copyright (C) 1996, 1997, 2000 Free Software Foundation, Inc.\n-   Contributed by David Reese (Dave.Reese@East.Sun.COM)\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* Default ABI to use */\n-#undef\tRS6000_ABI_NAME\n-#define RS6000_ABI_NAME \"solaris\"\n-\n-#undef ASM_CPU_SPEC\n-#define ASM_CPU_SPEC \"-le -s\"\n-\n-#undef TARGET_DEFAULT\n-#define TARGET_DEFAULT (MASK_POWERPC | \\\n-\t\t\tMASK_NEW_MNEMONICS | \\\n-\t\t\tMASK_LITTLE_ENDIAN | \\\n-\t\t\tMASK_REGNAMES)\n-\n-#undef\tLIB_DEFAULT_SPEC\n-#define LIB_DEFAULT_SPEC \"%(lib_solaris)\"\n-\n-#undef\tSTARTFILE_DEFAULT_SPEC\n-#define STARTFILE_DEFAULT_SPEC \"%(startfile_solaris)\"\n-\n-#undef\tENDFILE_DEFAULT_SPEC\n-#define ENDFILE_DEFAULT_SPEC \"%(endfile_solaris)\"\n-\n-#undef\tLINK_START_DEFAULT_SPEC\n-#define LINK_START_DEFAULT_SPEC \"%(link_start_solaris)\"\n-\n-#undef CPP_SPEC\n-#define CPP_SPEC \"%{posix: -D_POSIX_SOURCE}\\\n-%(cpp_sysv) %(cpp_endian) %(cpp_cpu) \\\n-%{mmvme: %(cpp_os_mvme) } \\\n-%{msim: %(cpp_os_sim) } \\\n-%{mcall-linux: %(cpp_os_linux) } \\\n-%{mcall-solaris: %(cpp_os_solaris) } \\\n-%{!mmvme: %{!msim: %{!mcall-linux: %{!mcall-solaris: %(cpp_os_default) }}}}\"\n-\n-#undef\tCPP_OS_DEFAULT_SPEC\n-#define\tCPP_OS_DEFAULT_SPEC \"%(cpp_os_solaris)\"\n-\n-#undef\tLINK_OS_DEFAULT_SPEC\n-#define\tLINK_OS_DEFAULT_SPEC \"%(link_os_solaris)\"\n-\n-#undef\tCPP_ENDIAN_LITTLE_SPEC\n-#define\tCPP_ENDIAN_LITTLE_SPEC CPP_ENDIAN_SOLARIS_SPEC\n-\n-#define\tDEFAULT_PCC_STRUCT_RETURN 0\n-\n-#undef TARGET_VERSION\n-#define TARGET_VERSION fprintf (stderr, \" (PowerPC Solaris)\");\n-\n-\f\n-/* Macros to check register numbers against specific register classes.  */\n-\n-#undef\tPREFERRED_DEBUGGING_TYPE\n-#define\tPREFERRED_DEBUGGING_TYPE DBX_DEBUG\n-\n-\n-#if 0\n-#undef\tASM_OUTPUT_ALIGNED_LOCAL\n-#define ASM_OUTPUT_ALIGNED_LOCAL(FILE, NAME, SIZE, ALIGN)\t\t\\\n-do {\t\t\t\t\t\t\t\t\t\\\n-  fprintf ((FILE), \"\\t%s\\t\", \".lcomm\");\t\t\t\t\t\\\n-  assemble_name ((FILE), (NAME));\t\t\t\t\t\\\n-  fprintf ((FILE), \",%u,%u\\n\", (SIZE), (ALIGN) / BITS_PER_UNIT);\t\\\n-} while (0)\n-#endif\n-\n-/* Like block addresses, stabs line numbers are relative to the\n-   current function.  */\n-\n-/* use .stabd instead of .stabn */\n-\n-#define\tASM_STABN_OP\t\"\\t.stabd\\t\"\n-\n-#undef  ASM_OUTPUT_SOURCE_LINE\n-#define ASM_OUTPUT_SOURCE_LINE(file, line)\t\t\t\t\\\n-do\t\t\t\t\t\t\t\t\t\\\n-  {\t\t\t\t\t\t\t\t\t\\\n-    static int sym_lineno = 1;\t\t\t\t\t\t\\\n-    const char *_p;\t\t\t\t\t\t\t\\\n-    fprintf (file, \"\\t.stabd 68,0,%d,.LM%d-\",\t\t\t\t\\\n-\t     line, sym_lineno);\t\t\t\t\t\t\\\n-    STRIP_NAME_ENCODING (_p, XSTR (XEXP (DECL_RTL (current_function_decl), 0), 0)); \\\n-    assemble_name (file, _p);\t\t\t\t\t\t\\\n-    fprintf (file, \"\\n.LM%d:\\n\", sym_lineno);\t\t\t\t\\\n-    sym_lineno += 1;\t\t\t\t\t\t\t\\\n-  }\t\t\t\t\t\t\t\t\t\\\n-while (0)\n-\n-/* This is how to output an assembler line defining a `double' constant.  */\n-\n-#undef\tASM_OUTPUT_DOUBLE\n-#define ASM_OUTPUT_DOUBLE(FILE, VALUE)\t\t\t\t\t\\\n-  {\t\t\t\t\t\t\t\t\t\\\n-    if (REAL_VALUE_ISINF (VALUE)\t\t\t\t\t\\\n-        || REAL_VALUE_ISNAN (VALUE)\t\t\t\t\t\\\n-\t|| REAL_VALUE_MINUS_ZERO (VALUE))\t\t\t\t\\\n-      {\t\t\t\t\t\t\t\t\t\\\n-\tlong t[2];\t\t\t\t\t\t\t\\\n-\tREAL_VALUE_TO_TARGET_DOUBLE ((VALUE), t);\t\t\t\\\n-\tfprintf (FILE, \"\\t.long 0x%lx\\n\\t.long 0x%lx\\n\",\t\t\\\n-\t\tt[0] & 0xffffffff, t[1] & 0xffffffff);\t\t\t\\\n-      }\t\t\t\t\t\t\t\t\t\\\n-    else\t\t\t\t\t\t\t\t\\\n-      {\t\t\t\t\t\t\t\t\t\\\n-\tchar str[30];\t\t\t\t\t\t\t\\\n-\tREAL_VALUE_TO_DECIMAL (VALUE, \"%.20e\", str);\t\t\t\\\n-\tfprintf (FILE, \"\\t.double %s\\n\", str);\t\t\t\t\\\n-      }\t\t\t\t\t\t\t\t\t\\\n-  }\n-\n-/* This is how to output an assembler line defining a `float' constant.  */\n-\n-#undef\tASM_OUTPUT_FLOAT\n-#define ASM_OUTPUT_FLOAT(FILE, VALUE)\t\t\t\t\t\\\n-  {\t\t\t\t\t\t\t\t\t\\\n-    if (REAL_VALUE_ISINF (VALUE)\t\t\t\t\t\\\n-        || REAL_VALUE_ISNAN (VALUE)\t\t\t\t\t\\\n-\t|| REAL_VALUE_MINUS_ZERO (VALUE))\t\t\t\t\\\n-      {\t\t\t\t\t\t\t\t\t\\\n-\tlong t;\t\t\t\t\t\t\t\t\\\n-\tREAL_VALUE_TO_TARGET_SINGLE ((VALUE), t);\t\t\t\\\n-\tfprintf (FILE, \"\\t.long 0x%lx\\n\", t & 0xffffffff);\t\t\\\n-      }\t\t\t\t\t\t\t\t\t\\\n-    else\t\t\t\t\t\t\t\t\\\n-      {\t\t\t\t\t\t\t\t\t\\\n-\tchar str[30];\t\t\t\t\t\t\t\\\n-\tREAL_VALUE_TO_DECIMAL ((VALUE), \"%.20e\", str);\t\t\t\\\n-\tfprintf (FILE, \"\\t.float %s\\n\", str);\t\t\t\t\\\n-      }\t\t\t\t\t\t\t\t\t\\\n-  }\n-\n-\f\n-/* Sun-ppc assembler does not permit '.' in some symbol names.\n-   Use 'name_.labelno' instead.  */\n-#undef ASM_FORMAT_PRIVATE_NAME\n-#define ASM_FORMAT_PRIVATE_NAME(OUTPUT, NAME, LABELNO)\t\\\n-( (OUTPUT) = (char *) alloca (strlen ((NAME)) + 10),\t\\\n-  sprintf ((OUTPUT), \"%s_.%d\", (NAME), (LABELNO))) \n-\n-\n-/* Define this macro as a C expression for the initializer of an\n-   array of string to tell the driver program which options are\n-   defaults for this target and thus do not need to be handled\n-   specially when using `MULTILIB_OPTIONS'.\n-\n-   Do not define this macro if `MULTILIB_OPTIONS' is not defined in\n-   the target makefile fragment or if none of the options listed in\n-   `MULTILIB_OPTIONS' are set by default.  *Note Target Fragment::.  */\n-\n-#undef\tMULTILIB_DEFAULTS\n-#define\tMULTILIB_DEFAULTS { \"mlittle\", \"mcall-solaris\" }\n-\n-#define STDC_0_IN_SYSTEM_HEADERS 1"}, {"sha": "b9978dfdbdcba983800ccc52dbab720b87c9a11d", "filename": "gcc/config/rs6000/sysv4.h", "status": "modified", "additions": 13, "deletions": 90, "changes": 103, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f607bc57e3c6ec362167f7c11a6886268cfadf29/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f607bc57e3c6ec362167f7c11a6886268cfadf29/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fsysv4.h?ref=f607bc57e3c6ec362167f7c11a6886268cfadf29", "patch": "@@ -152,7 +152,6 @@ extern int g_switch_set;\t\t/* Whether -G xx was passed.  */\n   { \"emb\",\t\t 0,\t\t\t\t\t\t\\\n     N_(\"Set the PPC_EMB bit in the ELF flags header\") },\t\t\\\n   { \"vxworks\",\t\t 0, N_(\"no description yet\") },\t\t\t\\\n-  { \"solaris-cclib\",\t 0, N_(\"no description yet\") },\t\t\t\\\n   { \"shlib\",\t\t 0, N_(\"no description yet\") },\t\t\t\\\n   EXTRA_SUBTARGET_SWITCHES\t\t\t\t\t\t\\\n   { \"newlib\",\t\t 0, N_(\"no description yet\") },\n@@ -200,8 +199,6 @@ do {\t\t\t\t\t\t\t\t\t\\\n     rs6000_current_abi = ABI_V4;\t\t\t\t\t\\\n   else if (!strcmp (rs6000_abi_name, \"netbsd\"))\t\t\t\t\\\n     rs6000_current_abi = ABI_V4;\t\t\t\t\t\\\n-  else if (!strcmp (rs6000_abi_name, \"solaris\"))\t\t\t\\\n-    rs6000_current_abi = ABI_SOLARIS;\t\t\t\t\t\\\n   else if (!strcmp (rs6000_abi_name, \"i960-old\"))\t\t\t\\\n     {\t\t\t\t\t\t\t\t\t\\\n       rs6000_current_abi = ABI_V4;\t\t\t\t\t\\\n@@ -230,7 +227,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n       else\t\t\t\t\t\t\t\t\\\n \terror (\"Bad value for -msdata=%s\", rs6000_sdata_name);\t\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n-  else if (DEFAULT_ABI == ABI_V4 || DEFAULT_ABI == ABI_SOLARIS)\t\t\\\n+  else if (DEFAULT_ABI == ABI_V4)\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\t\\\n       rs6000_sdata = SDATA_DATA;\t\t\t\t\t\\\n       rs6000_sdata_name = \"data\";\t\t\t\t\t\\\n@@ -258,8 +255,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n \t     rs6000_sdata_name);\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n-  if (rs6000_sdata != SDATA_NONE && DEFAULT_ABI != ABI_V4\t\t\\\n-      && DEFAULT_ABI != ABI_SOLARIS)\t\t\t\t\t\\\n+  if (rs6000_sdata != SDATA_NONE && DEFAULT_ABI != ABI_V4)\t\t\\\n     {\t\t\t\t\t\t\t\t\t\\\n       rs6000_sdata = SDATA_NONE;\t\t\t\t\t\\\n       error (\"-msdata=%s and -mcall-%s are incompatible.\",\t\t\\\n@@ -430,9 +426,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n \n #define\tSDATA_SECTION_ASM_OP \"\\t.section\\t\\\".sdata\\\",\\\"aw\\\"\"\n #define\tSDATA2_SECTION_ASM_OP \"\\t.section\\t\\\".sdata2\\\",\\\"a\\\"\"\n-#define\tSBSS_SECTION_ASM_OP \\\n-  ((DEFAULT_ABI == ABI_SOLARIS) ? \"\\t.section\\t\\\".sbss\\\",\\\"aw\\\"\" : \"\\t.section\\t\\\".sbss\\\",\\\"aw\\\",@nobits\")\n-\n+#define\tSBSS_SECTION_ASM_OP \"\\t.section\\t\\\".sbss\\\",\\\"aw\\\",@nobits\"\n \n /* Besides the usual ELF sections, we need a toc section.  */\n /* Override elfos.h definition.  */\n@@ -729,14 +723,6 @@ extern int rs6000_pic_labelno;\n   do { fputs (\"\\t.globl \", FILE);\t\\\n        assemble_name (FILE, NAME); putc ('\\n', FILE);} while (0)\n \n-/* This is how to allocate empty space in some section.  Use .space\n-   instead of .zero because the Solaris PowerPC assembler doesn't\n-   like it, and gas accepts either syntax.  */\n-\n-/* Override elfos.h definition.  */\n-#undef\tSKIP_ASM_OP\n-#define SKIP_ASM_OP\t\"\\t.space\\t\"\n-\n /* This says how to output assembler code to declare an\n    uninitialized internal linkage data object.  Under SVR4,\n    the linker seems to want the alignment of data objects\n@@ -938,7 +924,6 @@ do {\t\t\t\t\t\t\\\n %{memb} %{!memb: %{msdata: -memb} %{msdata=eabi: -memb}} \\\n %{mlittle} %{mlittle-endian} %{mbig} %{mbig-endian} \\\n %{!mlittle: %{!mlittle-endian: %{!mbig: %{!mbig-endian: \\\n-    %{mcall-solaris: -mlittle -msolaris} \\\n     %{mcall-freebsd: -mbig} \\\n     %{mcall-i960-old: -mlittle} \\\n     %{mcall-linux: -mbig} \\\n@@ -963,20 +948,17 @@ do {\t\t\t\t\t\t\\\n %{!mlittle: %{!mlittle-endian: %{!mbig: %{!mbig-endian: \\\n     %{mcall-aixdesc: -mbig %(cc1_endian_big) } \\\n     %{mcall-freebsd: -mbig %(cc1_endian_big) } \\\n-    %{mcall-solaris: -mlittle %(cc1_endian_little) } \\\n     %{mcall-i960-old: -mlittle %(cc1_endian_little) } \\\n     %{mcall-linux: -mbig %(cc1_endian_big) } \\\n     %{mcall-netbsd: -mbig %(cc1_endian_big) } \\\n-    %{!mcall-aixdesc: %{!mcall-freebsd: %{!mcall-solaris: %{!mcall-i960-old: %{!mcall-linux: %{!mcall-netbsd: \\\n+    %{!mcall-aixdesc: %{!mcall-freebsd: %{!mcall-i960-old: %{!mcall-linux: %{!mcall-netbsd: \\\n \t    %(cc1_endian_default) \\\n-    }}}}}} \\\n+    }}}}} \\\n }}}} \\\n-%{mcall-solaris: -mregnames } \\\n %{mno-sdata: -msdata=none } \\\n %{meabi: %{!mcall-*: -mcall-sysv }} \\\n %{!meabi: %{!mno-eabi: \\\n     %{mrelocatable: -meabi } \\\n-    %{mcall-solaris: -mno-eabi } \\\n     %{mcall-freebsd: -mno-eabi } \\\n     %{mcall-i960-old: -meabi } \\\n     %{mcall-linux: -mno-eabi } \\\n@@ -1011,8 +993,8 @@ do {\t\t\t\t\t\t\\\n %{mcall-freebsd: %(link_start_freebsd) } \\\n %{mcall-linux: %(link_start_linux) } \\\n %{mcall-netbsd: %(link_start_netbsd) } \\\n-%{mcall-solaris: %(link_start_solaris) } \\\n-%{!mads: %{!myellowknife: %{!mmvme: %{!msim: %{!mcall-freebsd: %{!mcall-linux: %{!mcall-netbsd: %{!mcall-solaris: %(link_start_default) }}}}}}}}\"\n+%{!mads: %{!myellowknife: %{!mmvme: %{!msim: %{!mcall-linux: \\\n+\t%{!mcall-netbsd: %{!mcall-freebsd: %(link_start_default) }}}}}}}\"\n \n #define LINK_START_DEFAULT_SPEC \"\"\n \n@@ -1056,7 +1038,6 @@ do {\t\t\t\t\t\t\\\n %{mlittle: --oformat elf32-powerpcle } %{mlittle-endian: --oformat elf32-powerpcle } \\\n %{!mlittle: %{!mlittle-endian: %{!mbig: %{!mbig-endian: \\\n     %{mcall-i960-old: --oformat elf32-powerpcle} \\\n-    %{mcall-solaris: --oformat elf32-powerpcle} \\\n   }}}}\"\n \n /* Any specific OS flags.  */\n@@ -1068,8 +1049,7 @@ do {\t\t\t\t\t\t\\\n %{mcall-freebsd: %(link_os_freebsd) } \\\n %{mcall-linux: %(link_os_linux) } \\\n %{mcall-netbsd: %(link_os_netbsd) } \\\n-%{mcall-solaris: %(link_os_solaris) } \\\n-%{!mads: %{!myellowknife: %{!mmvme: %{!msim: %{!mcall-freebsd: %{!mcall-linux: %{!mcall-netbsd: %{!mcall-solaris: %(link_os_default) }}}}}}}}\"\n+%{!mads: %{!myellowknife: %{!mmvme: %{!msim: %{!mcall-freebsd: %{!mcall-linux: %{!mcall-netbsd: %(link_os_default) }}}}}}}\"\n \n #define LINK_OS_DEFAULT_SPEC \"\"\n \n@@ -1105,22 +1085,18 @@ do {\t\t\t\t\t\t\\\n \n #define CPP_ENDIAN_LITTLE_SPEC \"-D_LITTLE_ENDIAN -D__LITTLE_ENDIAN__ -Amachine=littleendian\"\n \n-#define CPP_ENDIAN_SOLARIS_SPEC \"-D__LITTLE_ENDIAN__ -Amachine=littleendian\"\n-\n-/* For solaris, don't define _LITTLE_ENDIAN, it conflicts with a header file.  */\n #define\tCPP_ENDIAN_SPEC \\\n \"%{mlittle: %(cpp_endian_little) } \\\n %{mlittle-endian: %(cpp_endian_little) } \\\n %{mbig: %(cpp_endian_big) } \\\n %{mbig-endian: %(cpp_endian_big) } \\\n %{!mlittle: %{!mlittle-endian: %{!mbig: %{!mbig-endian: \\\n-    %{mcall-solaris: %(cpp_endian_solaris) } \\\n     %{mcall-freebsd: %(cpp_endian_big) } \\\n     %{mcall-linux: %(cpp_endian_big) } \\\n     %{mcall-netbsd: %(cpp_endian_big) } \\\n     %{mcall-i960-old: %(cpp_endian_little) } \\\n     %{mcall-aixdesc:  %(cpp_endian_big) } \\\n-    %{!mcall-solaris: %{!mcall-linux: %{!mcall-freebsd: %{!mcall-netbsd: %{!mcall-aixdesc: %(cpp_endian_default) }}}}}}}}}\"\n+    %{!mcall-linux: %{!mcall-freebsd: %{!mcall-netbsd: %{!mcall-aixdesc: %(cpp_endian_default) }}}}}}}}\"\n \n #define\tCPP_ENDIAN_DEFAULT_SPEC \"%(cpp_endian_big)\"\n \n@@ -1134,8 +1110,7 @@ do {\t\t\t\t\t\t\\\n %{mcall-freebsd: %(cpp_os_freebsd) } \\\n %{mcall-linux: %(cpp_os_linux) } \\\n %{mcall-netbsd: %(cpp_os_netbsd) } \\\n-%{mcall-solaris: %(cpp_os_solaris) } \\\n-%{!mads: %{!myellowknife: %{!mmvme: %{!msim: %{!mcall-freebsd: %{!mcall-linux: %{!mcall-netbsd: %{!mcall-solaris: %(cpp_os_default) }}}}}}}}\"\n+%{!mads: %{!myellowknife: %{!mmvme: %{!msim: %{!mcall-freebsd: %{!mcall-linux: %{!mcall-netbsd: %(cpp_os_default) }}}}}}}\"\n \n #define\tCPP_OS_DEFAULT_SPEC \"\"\n \n@@ -1149,8 +1124,7 @@ do {\t\t\t\t\t\t\\\n %{mcall-freebsd: %(startfile_freebsd) } \\\n %{mcall-linux: %(startfile_linux) } \\\n %{mcall-netbsd: %(startfile_netbsd) } \\\n-%{mcall-solaris: %(startfile_solaris) } \\\n-%{!mads: %{!myellowknife: %{!mmvme: %{!msim: %{!mcall-freebsd: %{!mcall-linux: %{!mcall-netbsd: %{!mcall-solaris: %(startfile_default) }}}}}}}}\"\n+%{!mads: %{!myellowknife: %{!mmvme: %{!msim: %{!mcall-freebsd: %{!mcall-linux: %{!mcall-netbsd: %(startfile_default) }}}}}}}\"\n \n #define\tSTARTFILE_DEFAULT_SPEC \"\"\n \n@@ -1164,8 +1138,7 @@ do {\t\t\t\t\t\t\\\n %{mcall-freebsd: %(lib_freebsd) } \\\n %{mcall-linux: %(lib_linux) } \\\n %{mcall-netbsd: %(lib_netbsd) } \\\n-%{mcall-solaris: %(lib_solaris) } \\\n-%{!mads: %{!myellowknife: %{!mmvme: %{!msim: %{!mcall-freebsd: %%{!mcall-linux: %{!mcall-netbsd: %{!mcall-solaris: %(lib_default) }}}}}}}}\"\n+%{!mads: %{!myellowknife: %{!mmvme: %{!msim: %{!mcall-freebsd: %%{!mcall-linux: %{!mcall-netbsd: %(lib_default) }}}}}}}\"\n \n #define LIB_DEFAULT_SPEC \"\"\n \n@@ -1179,9 +1152,8 @@ do {\t\t\t\t\t\t\\\n %{mcall-freebsd: %(endfile_freebsd) } \\\n %{mcall-linux: %(endfile_linux) } \\\n %{mcall-netbsd: %(endfile_netbsd) } \\\n-%{mcall-solaris: %(endfile_solaris)} \\\n %{mvxworks: %(endfile_vxworks) } \\\n-%{!mads: %{!myellowknife: %{!mmvme: %{!msim: %{!mcall-freebsd: %{!mcall-linux: %{!mcall-netbsd: %{!mcall-solaris: %{!mvxworks: %(endfile_default) }}}}}}}}}\"\n+%{!mads: %{!myellowknife: %{!mmvme: %{!msim: %{!mcall-freebsd: %{!mcall-linux: %{!mcall-netbsd: %{!mvxworks: %(endfile_default) }}}}}}}}\"\n \n #define\tENDFILE_DEFAULT_SPEC \"\"\n \n@@ -1314,48 +1286,6 @@ ncrtn.o%s\"\n #define CPP_OS_NETBSD_SPEC \"\\\n -D__powerpc__ -D__NetBSD__ -D__ELF__ -D__KPRINTF_ATTRIBUTE__\"\n \n-/* Solaris support.  */\n-/* For Solaris, Gcc automatically adds in one of the files\n-   /usr/ccs/lib/values-Xc.o, /usr/ccs/lib/values-Xa.o, or\n-   /usr/ccs/lib/values-Xt.o for each final link step (depending upon the other\n-   gcc options selected, such as -traditional and -ansi).  These files each\n-   contain one (initialized) copy of a special variable called `_lib_version'.\n-   Each one of these files has `_lib_version' initialized to a different (enum)\n-   value.  The SVR4 library routines query the value of `_lib_version' at run\n-   to decide how they should behave.  Specifically, they decide (based upon the\n-   value of `_lib_version') if they will act in a strictly ANSI conforming\n-   manner or not.  */\n-\n-#define LIB_SOLARIS_SPEC \"\\\n-%{mnewlib: --start-group -lsolaris -lc --end-group } \\\n-%{!mnewlib: \\\n-    %{ansi:values-Xc.o%s} \\\n-    %{!ansi: \\\n-\t%{traditional:values-Xt.o%s} \\\n-\t%{!traditional:values-Xa.o%s}} \\\n-\t%{compat-bsd:-lucb -lsocket -lnsl -lelf -laio} \\\n-    %{solaris-cclib: /opt/SUNWspro/SC4.0/lib/libabi.a} \\\n-    %{!shared: %{!symbolic: -lc }}}\"\n-\n-#define\tSTARTFILE_SOLARIS_SPEC \"\\\n-%{!msolaris-cclib: scrti.o%s scrt0.o%s} \\\n-%{msolaris-cclib: /opt/SUNWspro/SC4.0/lib/crti.o%s /opt/SUNWspro/SC4.0/lib/crt1.o%s} \\\n-%{!shared:crtbegin.o%s} %{shared:crtbeginS.o%s}\"\n-\n-#define\tENDFILE_SOLARIS_SPEC \"\\\n-%{!shared:crtend.o%s} %{shared:crtendS.o%s} \\\n-%{!msolaris-cclib: scrtn.o%s} \\\n-%{msolaris-cclib: /opt/SUNWspro/SC4.0/lib/crtn.o%s}\"\n-\n-#define LINK_START_SOLARIS_SPEC \"\"\n-\n-#define LINK_OS_SOLARIS_SPEC \"\"\n-\n-#define CPP_OS_SOLARIS_SPEC \"-D__ppc -D__sun__=1 -D__unix__ -D__svr4__  -D__SVR4__ \\\n-%{!undef:%{!ansi:%{!std=*:-Dsun=1 -Dunix -DSVR4 -D__EXTENSIONS__} \\\n-               %{std=gnu*:-Dsun=1 -Dunix -DSVR4 -D__EXTENSIONS__}}} \\\n--Amachine=prep\"\n-\n /* VxWorks support.  */\n /* VxWorks does all the library stuff itself.  */\n #define LIB_VXWORKS_SPEC \"\"\n@@ -1411,7 +1341,6 @@ ncrtn.o%s\"\n   { \"lib_freebsd\",\t\tLIB_FREEBSD_SPEC },\t\t\t\\\n   { \"lib_linux\",\t\tLIB_LINUX_SPEC },\t\t\t\\\n   { \"lib_netbsd\",\t\tLIB_NETBSD_SPEC },\t\t\t\\\n-  { \"lib_solaris\",\t\tLIB_SOLARIS_SPEC },\t\t\t\\\n   { \"lib_vxworks\",\t\tLIB_VXWORKS_SPEC },\t\t\t\\\n   { \"lib_default\",\t\tLIB_DEFAULT_SPEC },\t\t\t\\\n   { \"startfile_ads\",\t\tSTARTFILE_ADS_SPEC },\t\t\t\\\n@@ -1421,7 +1350,6 @@ ncrtn.o%s\"\n   { \"startfile_freebsd\",\tSTARTFILE_FREEBSD_SPEC },\t\t\\\n   { \"startfile_linux\",\t\tSTARTFILE_LINUX_SPEC },\t\t\t\\\n   { \"startfile_netbsd\",\t\tSTARTFILE_NETBSD_SPEC },\t\t\\\n-  { \"startfile_solaris\",\tSTARTFILE_SOLARIS_SPEC },\t\t\\\n   { \"startfile_vxworks\",\tSTARTFILE_VXWORKS_SPEC },\t\t\\\n   { \"startfile_default\",\tSTARTFILE_DEFAULT_SPEC },\t\t\\\n   { \"endfile_ads\",\t\tENDFILE_ADS_SPEC },\t\t\t\\\n@@ -1431,7 +1359,6 @@ ncrtn.o%s\"\n   { \"endfile_freebsd\",\t\tENDFILE_FREEBSD_SPEC },\t\t\t\\\n   { \"endfile_linux\",\t\tENDFILE_LINUX_SPEC },\t\t\t\\\n   { \"endfile_netbsd\",\t\tENDFILE_NETBSD_SPEC },\t\t\t\\\n-  { \"endfile_solaris\",\t\tENDFILE_SOLARIS_SPEC },\t\t\t\\\n   { \"endfile_vxworks\",\t\tENDFILE_VXWORKS_SPEC },\t\t\t\\\n   { \"endfile_default\",\t\tENDFILE_DEFAULT_SPEC },\t\t\t\\\n   { \"link_path\",\t\tLINK_PATH_SPEC },\t\t\t\\\n@@ -1445,7 +1372,6 @@ ncrtn.o%s\"\n   { \"link_start_freebsd\",\tLINK_START_FREEBSD_SPEC },\t\t\\\n   { \"link_start_linux\",\t\tLINK_START_LINUX_SPEC },\t\t\\\n   { \"link_start_netbsd\",\tLINK_START_NETBSD_SPEC },\t\t\\\n-  { \"link_start_solaris\",\tLINK_START_SOLARIS_SPEC },\t\t\\\n   { \"link_start_vxworks\",\tLINK_START_VXWORKS_SPEC },\t\t\\\n   { \"link_start_default\",\tLINK_START_DEFAULT_SPEC },\t\t\\\n   { \"link_os\",\t\t\tLINK_OS_SPEC },\t\t\t\t\\\n@@ -1456,15 +1382,13 @@ ncrtn.o%s\"\n   { \"link_os_freebsd\",\t\tLINK_OS_FREEBSD_SPEC },\t\t\t\\\n   { \"link_os_linux\",\t\tLINK_OS_LINUX_SPEC },\t\t\t\\\n   { \"link_os_netbsd\",\t\tLINK_OS_NETBSD_SPEC },\t\t\t\\\n-  { \"link_os_solaris\",\t\tLINK_OS_SOLARIS_SPEC },\t\t\t\\\n   { \"link_os_vxworks\",\t\tLINK_OS_VXWORKS_SPEC },\t\t\t\\\n   { \"link_os_default\",\t\tLINK_OS_DEFAULT_SPEC },\t\t\t\\\n   { \"cc1_endian_big\",\t\tCC1_ENDIAN_BIG_SPEC },\t\t\t\\\n   { \"cc1_endian_little\",\tCC1_ENDIAN_LITTLE_SPEC },\t\t\\\n   { \"cc1_endian_default\",\tCC1_ENDIAN_DEFAULT_SPEC },\t\t\\\n   { \"cpp_endian_big\",\t\tCPP_ENDIAN_BIG_SPEC },\t\t\t\\\n   { \"cpp_endian_little\",\tCPP_ENDIAN_LITTLE_SPEC },\t\t\\\n-  { \"cpp_endian_solaris\",\tCPP_ENDIAN_SOLARIS_SPEC },\t\t\\\n   { \"cpp_float_default\",\tCPP_FLOAT_DEFAULT_SPEC },\t\t\\\n   { \"cpp_longdouble_default\",\tCPP_LONGDOUBLE_DEFAULT_SPEC },\t\t\\\n   { \"cpp_os_ads\",\t\tCPP_OS_ADS_SPEC },\t\t\t\\\n@@ -1474,7 +1398,6 @@ ncrtn.o%s\"\n   { \"cpp_os_freebsd\",\t\tCPP_OS_FREEBSD_SPEC },\t\t\t\\\n   { \"cpp_os_linux\",\t\tCPP_OS_LINUX_SPEC },\t\t\t\\\n   { \"cpp_os_netbsd\",\t\tCPP_OS_NETBSD_SPEC },\t\t\t\\\n-  { \"cpp_os_solaris\",\t\tCPP_OS_SOLARIS_SPEC },\t\t\t\\\n   { \"cpp_os_vxworks\",\t\tCPP_OS_VXWORKS_SPEC },\t\t\t\\\n   { \"cpp_os_default\",\t\tCPP_OS_DEFAULT_SPEC },\n "}, {"sha": "7edd3d880902d7f23f2ed348db6c5e118bb70132", "filename": "gcc/config/rs6000/t-ppccomm", "status": "modified", "additions": 4, "deletions": 26, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f607bc57e3c6ec362167f7c11a6886268cfadf29/gcc%2Fconfig%2Frs6000%2Ft-ppccomm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f607bc57e3c6ec362167f7c11a6886268cfadf29/gcc%2Fconfig%2Frs6000%2Ft-ppccomm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Ft-ppccomm?ref=f607bc57e3c6ec362167f7c11a6886268cfadf29", "patch": "@@ -40,12 +40,10 @@ INSTALL_LIBGCC = install-multilib\n EXTRA_MULTILIB_PARTS = crtbegin$(objext) crtend$(objext) \\\n   crtbeginS$(objext) crtendS$(objext) \\\n   ecrti$(objext) ecrtn$(objext) \\\n-  scrt0$(objext) scrti$(objext) scrtn$(objext) \\\n   ncrti$(objext) ncrtn$(objext)\n \n-# We build {e,s}crti.o, {e,s}crtn.o, and {s,n}crt0.o which serve to\n-# add begin and end labels to all of the special sections used when we\n-# link using gcc.\n+# We build {e,n}crti.o and {e,n}crtn.o, which serve to add begin and\n+# end labels to all of the special sections used when we link using gcc.\n \n # Assemble startup files.\n ecrti.S: $(srcdir)/config/rs6000/eabi-ci.asm\n@@ -55,21 +53,10 @@ ecrtn.S: $(srcdir)/config/rs6000/eabi-cn.asm\n \tcat $(srcdir)/config/rs6000/eabi-cn.asm >ecrtn.S\n \n ncrti.S: $(srcdir)/config/rs6000/sol-ci.asm\n-\tsed -e 's/__init/_init/' -e 's/__fini/_fini/' \\\n-\t\t$(srcdir)/config/rs6000/sol-ci.asm >ncrti.S\n+\tcat $(srcdir)/config/rs6000/sol-ci.asm >ncrti.S\n \n ncrtn.S: $(srcdir)/config/rs6000/sol-cn.asm\n-\tsed -e 's/__init/_init/' -e 's/__fini/_fini/' \\\n-\t\t$(srcdir)/config/rs6000/sol-cn.asm >ncrtn.S\n-\n-scrti.S: $(srcdir)/config/rs6000/sol-ci.asm\n-\tcat $(srcdir)/config/rs6000/sol-ci.asm >scrti.S\n-\n-scrtn.S: $(srcdir)/config/rs6000/sol-cn.asm\n-\tcat $(srcdir)/config/rs6000/sol-cn.asm >scrtn.S\n-\n-scrt0.c: $(srcdir)/config/rs6000/sol-c0.c\n-\tcat $(srcdir)/config/rs6000/sol-c0.c >scrt0.c\n+\tcat $(srcdir)/config/rs6000/sol-cn.asm >ncrtn.S\n \n # Build multiple copies of ?crt{i,n}.o, one for each target switch.\n $(T)ecrti$(objext): ecrti.S\n@@ -84,15 +71,6 @@ $(T)ncrti$(objext): ncrti.S\n $(T)ncrtn$(objext): ncrtn.S\n \t$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(INCLUDES) $(MULTILIB_CFLAGS) -c ncrtn.S -o $(T)ncrtn$(objext)\n \n-$(T)scrti$(objext): scrti.S\n-\t$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(INCLUDES) $(MULTILIB_CFLAGS) -c scrti.S -o $(T)scrti$(objext)\n-\n-$(T)scrtn$(objext): scrtn.S\n-\t$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(INCLUDES) $(MULTILIB_CFLAGS) -c scrtn.S -o $(T)scrtn$(objext)\n-\n-$(T)scrt0$(objext): scrt0.c\n-\t$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(INCLUDES) $(MULTILIB_CFLAGS) -c scrt0.c -o $(T)scrt0$(objext)\n-\n # It is important that crtbegin.o, etc., aren't surprised by stuff in .sdata.\n CRTSTUFF_T_CFLAGS = -msdata=none\n # There is no need to add -fPIC here because crtstuff is multilibbed"}, {"sha": "819863bead4f8921a2975f07cf0b2dd3e15a2144", "filename": "gcc/config/rs6000/t-ppcos", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f607bc57e3c6ec362167f7c11a6886268cfadf29/gcc%2Fconfig%2Frs6000%2Ft-ppcos", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f607bc57e3c6ec362167f7c11a6886268cfadf29/gcc%2Fconfig%2Frs6000%2Ft-ppcos", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Ft-ppcos?ref=f607bc57e3c6ec362167f7c11a6886268cfadf29", "patch": "@@ -1,4 +1,4 @@\n-# Multilibs for a powerpc hosted ELF target (linux, SVR4, solaris)\n+# Multilibs for a powerpc hosted ELF target (linux, SVR4)\n \n MULTILIB_OPTIONS\t= msoft-float\n MULTILIB_DIRNAMES\t= nof"}]}