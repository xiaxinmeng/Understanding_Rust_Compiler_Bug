{"sha": "b8a4b8c838f2796acd1dc1e5f89ba71701f8f135", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjhhNGI4YzgzOGYyNzk2YWNkMWRjMWU1Zjg5YmE3MTcwMWY4ZjEzNQ==", "commit": {"author": {"name": "Bin Cheng", "email": "bin.cheng@arm.com", "date": "2016-10-13T11:05:53Z"}, "committer": {"name": "Bin Cheng", "email": "amker@gcc.gnu.org", "date": "2016-10-13T11:05:53Z"}, "message": "tree-predcom.c (tree_predictive_commoning_loop): Skip loop that only iterates 1 time.\n\n\t* tree-predcom.c (tree_predictive_commoning_loop): Skip loop that only\n\titerates 1 time.\n\n\tgcc/testsuite\n\t* gfortran.dg/vect/fast-math-mgrid-resid.f: New test string.\n\nFrom-SVN: r241100", "tree": {"sha": "a31af6e945eb8035a06d564e234553169a350e31", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a31af6e945eb8035a06d564e234553169a350e31"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b8a4b8c838f2796acd1dc1e5f89ba71701f8f135", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8a4b8c838f2796acd1dc1e5f89ba71701f8f135", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8a4b8c838f2796acd1dc1e5f89ba71701f8f135", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8a4b8c838f2796acd1dc1e5f89ba71701f8f135/comments", "author": null, "committer": null, "parents": [{"sha": "a5e3d6146d07611eb967befec4dc480c8a19db0d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5e3d6146d07611eb967befec4dc480c8a19db0d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5e3d6146d07611eb967befec4dc480c8a19db0d"}], "stats": {"total": 19, "additions": 19, "deletions": 0}, "files": [{"sha": "76ff0930d49d521d86e9d0b46d8942c996579112", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8a4b8c838f2796acd1dc1e5f89ba71701f8f135/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8a4b8c838f2796acd1dc1e5f89ba71701f8f135/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b8a4b8c838f2796acd1dc1e5f89ba71701f8f135", "patch": "@@ -1,3 +1,8 @@\n+2016-10-13  Bin Cheng  <bin.cheng@arm.com>\n+\n+\t* tree-predcom.c (tree_predictive_commoning_loop): Skip loop that only\n+\titerates 1 time.\n+\n 2016-10-13  Bin Cheng  <bin.cheng@arm.com>\n \n \t* tree-vect-loop-manip.c (adjust_vec_debug_stmts): Don't release"}, {"sha": "461246208571d128992940b1fc744341b78e3541", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8a4b8c838f2796acd1dc1e5f89ba71701f8f135/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8a4b8c838f2796acd1dc1e5f89ba71701f8f135/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b8a4b8c838f2796acd1dc1e5f89ba71701f8f135", "patch": "@@ -1,3 +1,7 @@\n+2016-10-13  Bin Cheng  <bin.cheng@arm.com>\n+\n+\t* gfortran.dg/vect/fast-math-mgrid-resid.f: New test string.\n+\n 2016-10-13  Bin Cheng  <bin.cheng@arm.com>\n \n \t* gcc.dg/vect/vect-98.c: Refine test case."}, {"sha": "88238f9b70e8431f8f418124cc8d872e12a51176", "filename": "gcc/testsuite/gfortran.dg/vect/fast-math-mgrid-resid.f", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8a4b8c838f2796acd1dc1e5f89ba71701f8f135/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Ffast-math-mgrid-resid.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8a4b8c838f2796acd1dc1e5f89ba71701f8f135/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Ffast-math-mgrid-resid.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Ffast-math-mgrid-resid.f?ref=b8a4b8c838f2796acd1dc1e5f89ba71701f8f135", "patch": "@@ -42,3 +42,4 @@ SUBROUTINE RESID(U,V,R,N,A)\n ! { dg-final { scan-tree-dump-times \"Executing predictive commoning without unrolling\" 1 \"pcom\" { target lp64 } } }\n ! { dg-final { scan-tree-dump-times \"Executing predictive commoning without unrolling\" 2 \"pcom\" { target ia32 } } }\n ! { dg-final { scan-tree-dump-times \"Predictive commoning failed: no suitable chains\" 0 \"pcom\" } }\n+! { dg-final { scan-tree-dump-times \"Loop iterates only 1 time, nothing to do\" 1 \"pcom\" } }"}, {"sha": "14d53c2ae29323052418647fed21fc97e6d0a420", "filename": "gcc/tree-predcom.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8a4b8c838f2796acd1dc1e5f89ba71701f8f135/gcc%2Ftree-predcom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8a4b8c838f2796acd1dc1e5f89ba71701f8f135/gcc%2Ftree-predcom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-predcom.c?ref=b8a4b8c838f2796acd1dc1e5f89ba71701f8f135", "patch": "@@ -2465,6 +2465,15 @@ tree_predictive_commoning_loop (struct loop *loop)\n   if (dump_file && (dump_flags & TDF_DETAILS))\n     fprintf (dump_file, \"Processing loop %d\\n\",  loop->num);\n \n+  /* Nothing for predicitive commoning if loop only iterates 1 time.  */\n+  if (get_max_loop_iterations_int (loop) == 0)\n+    {\n+      if (dump_file && (dump_flags & TDF_DETAILS))\n+\tfprintf (dump_file, \"Loop iterates only 1 time, nothing to do.\\n\");\n+\n+      return false;\n+    }\n+\n   /* Find the data references and split them into components according to their\n      dependence relations.  */\n   auto_vec<loop_p, 3> loop_nest;"}]}