{"sha": "fe4e7c6527eb4452c33a8df24e7d76b82ce1a18a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmU0ZTdjNjUyN2ViNDQ1MmMzM2E4ZGYyNGU3ZDc2YjgyY2UxYTE4YQ==", "commit": {"author": {"name": "Andrew Haley", "email": "aph@redhat.com", "date": "2006-06-19T17:38:08Z"}, "committer": {"name": "Andrew Haley", "email": "aph@gcc.gnu.org", "date": "2006-06-19T17:38:08Z"}, "message": "re PR java/1305 ([JSR133] GCJ ignores volatile modifier)\n\n2006-06-19  Andrew Haley  <aph@redhat.com>\n\n        PR java/1305\n        PR java/27908\n        * expr.c (java_modify_addr_for_volatile): New function.\n        (expand_java_field_op): Handle volatile fields.\n        * java-gimplify.c (java_gimplify_component_ref): Call\n        java_modify_addr_for_volatile to give the field_ref the correct\n        volatile type.\n        (java_gimplify_modify_expr): Likewise.\n        * java-tree.h (java_modify_addr_for_volatile): New decl.\n\nFrom-SVN: r114778", "tree": {"sha": "3b4b80cba4b272464d1b60f8d164c7cd515a34ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3b4b80cba4b272464d1b60f8d164c7cd515a34ef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fe4e7c6527eb4452c33a8df24e7d76b82ce1a18a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe4e7c6527eb4452c33a8df24e7d76b82ce1a18a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe4e7c6527eb4452c33a8df24e7d76b82ce1a18a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe4e7c6527eb4452c33a8df24e7d76b82ce1a18a/comments", "author": {"login": "theRealAph", "id": 254637, "node_id": "MDQ6VXNlcjI1NDYzNw==", "avatar_url": "https://avatars.githubusercontent.com/u/254637?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theRealAph", "html_url": "https://github.com/theRealAph", "followers_url": "https://api.github.com/users/theRealAph/followers", "following_url": "https://api.github.com/users/theRealAph/following{/other_user}", "gists_url": "https://api.github.com/users/theRealAph/gists{/gist_id}", "starred_url": "https://api.github.com/users/theRealAph/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theRealAph/subscriptions", "organizations_url": "https://api.github.com/users/theRealAph/orgs", "repos_url": "https://api.github.com/users/theRealAph/repos", "events_url": "https://api.github.com/users/theRealAph/events{/privacy}", "received_events_url": "https://api.github.com/users/theRealAph/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3c618f8732814407a5c98146fa24761ba7dddd78", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c618f8732814407a5c98146fa24761ba7dddd78", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c618f8732814407a5c98146fa24761ba7dddd78"}], "stats": {"total": 89, "additions": 83, "deletions": 6}, "files": [{"sha": "45fd0128a65159fac507fca010ce85b6b2bfa0f7", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe4e7c6527eb4452c33a8df24e7d76b82ce1a18a/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe4e7c6527eb4452c33a8df24e7d76b82ce1a18a/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=fe4e7c6527eb4452c33a8df24e7d76b82ce1a18a", "patch": "@@ -1,3 +1,15 @@\n+2006-06-19  Andrew Haley  <aph@redhat.com>\n+\n+        PR java/1305\n+        PR java/27908\n+\t* expr.c (java_modify_addr_for_volatile): New function.\n+\t(expand_java_field_op): Handle volatile fields.\n+\t* java-gimplify.c (java_gimplify_component_ref): Call\n+\tjava_modify_addr_for_volatile to give the field_ref the correct\n+\tvolatile type.\n+\t(java_gimplify_modify_expr): Likewise.\n+\t* java-tree.h (java_modify_addr_for_volatile): New decl.\n+\n 2006-06-17  Karl Berry  <karl@gnu.org>\n \n \t* gcj.texi (@dircategory): Use \"Software development\" instead"}, {"sha": "329e363db33daf497bc14001c002b70823db27dc", "filename": "gcc/java/expr.c", "status": "modified", "additions": 64, "deletions": 4, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe4e7c6527eb4452c33a8df24e7d76b82ce1a18a/gcc%2Fjava%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe4e7c6527eb4452c33a8df24e7d76b82ce1a18a/gcc%2Fjava%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fexpr.c?ref=fe4e7c6527eb4452c33a8df24e7d76b82ce1a18a", "patch": "@@ -2742,6 +2742,25 @@ build_jni_stub (tree method)\n   return bind;\n }\n \n+\n+/* Given lvalue EXP, return a volatile expression that references the\n+   same object.  */\n+\n+tree\n+java_modify_addr_for_volatile (tree exp)\n+{\n+  tree exp_type = TREE_TYPE (exp);\n+  tree v_type \n+    = build_qualified_type (exp_type,\n+\t\t\t    TYPE_QUALS (exp_type) | TYPE_QUAL_VOLATILE);\n+  tree addr = build_fold_addr_expr (exp);\n+  v_type = build_pointer_type (v_type);\n+  addr = fold_convert (v_type, addr);\n+  exp = build_fold_indirect_ref (addr);\n+  return exp;\n+}\n+\n+\n /* Expand an operation to extract from or store into a field.\n    IS_STATIC is 1 iff the field is static.\n    IS_PUTTING is 1 for putting into a field;  0 for getting from the field.\n@@ -2765,6 +2784,7 @@ expand_java_field_op (int is_static, int is_putting, int field_ref_index)\n   int is_error = 0;\n   tree original_self_type = self_type;\n   tree field_decl;\n+  tree modify_expr;\n   \n   if (! CLASS_LOADED_P (self_type))\n     load_class (self_type, 1);  \n@@ -2785,6 +2805,13 @@ expand_java_field_op (int is_static, int is_putting, int field_ref_index)\n \t\t\t\t  field_type, flags); \n \t  DECL_ARTIFICIAL (field_decl) = 1;\n \t  DECL_IGNORED_P (field_decl) = 1;\n+#if 0\n+\t  /* FIXME: We should be pessimistic about volatility.  We\n+\t     don't know one way or another, but this is safe.\n+\t     However, doing this has bad effects on code quality.  We\n+\t     need to look at better ways to do this.  */\n+\t  TREE_THIS_VOLATILE (field_decl) = 1;\n+#endif\n \t}\n       else\n \t{      \n@@ -2835,12 +2862,45 @@ expand_java_field_op (int is_static, int is_putting, int field_ref_index)\n                 warning (0, \"assignment to final field %q+D not in constructor\",\n \t\t\t field_decl);\n \t    }\n-\t}\n-      java_add_stmt (build2 (MODIFY_EXPR, TREE_TYPE (field_ref),\n-\t\t\t     field_ref, new_value));\n+\t}      \n+\n+      if (TREE_THIS_VOLATILE (field_decl))\n+\tfield_ref = java_modify_addr_for_volatile (field_ref);\n+\n+      modify_expr = build2 (MODIFY_EXPR, TREE_TYPE (field_ref),\n+\t\t\t    field_ref, new_value);\n+\n+      if (TREE_THIS_VOLATILE (field_decl))\n+\tjava_add_stmt \n+\t  (build3 \n+\t   (CALL_EXPR, void_type_node,\n+\t    build_address_of (built_in_decls[BUILT_IN_SYNCHRONIZE]),\n+\t    NULL_TREE, NULL_TREE));\n+      \t  \n+      java_add_stmt (modify_expr);\n     }\n   else\n-    push_value (field_ref);\n+    {\n+      tree temp = build_decl (VAR_DECL, NULL_TREE, TREE_TYPE (field_ref));\n+      java_add_local_var (temp);\n+\n+      if (TREE_THIS_VOLATILE (field_decl))\n+\tfield_ref = java_modify_addr_for_volatile (field_ref);\n+\n+      modify_expr \n+\t= build2 (MODIFY_EXPR, TREE_TYPE (field_ref), temp, field_ref);\n+      java_add_stmt (modify_expr);\n+\n+      if (TREE_THIS_VOLATILE (field_decl))\n+\tjava_add_stmt \n+\t  (build3 \n+\t   (CALL_EXPR, void_type_node,\n+\t    build_address_of (built_in_decls[BUILT_IN_SYNCHRONIZE]),\n+\t    NULL_TREE, NULL_TREE));\n+\n+      push_value (temp);\n+    }      \n+  TREE_THIS_VOLATILE (field_ref) = TREE_THIS_VOLATILE (field_decl);\n }\n \n void"}, {"sha": "54900d3f9ab45126976da2201c5730d480933148", "filename": "gcc/java/java-gimplify.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe4e7c6527eb4452c33a8df24e7d76b82ce1a18a/gcc%2Fjava%2Fjava-gimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe4e7c6527eb4452c33a8df24e7d76b82ce1a18a/gcc%2Fjava%2Fjava-gimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjava-gimplify.c?ref=fe4e7c6527eb4452c33a8df24e7d76b82ce1a18a", "patch": "@@ -223,7 +223,8 @@ java_gimplify_exit_block_expr (tree expr)\n static enum gimplify_status\n java_gimplify_component_ref (tree *expr_p, tree *pre_p, tree *post_p)\n {\n-  if (TREE_THIS_VOLATILE (TREE_OPERAND (*expr_p, 1))\n+  if (CLASS_FROM_SOURCE_P (output_class)\n+      && TREE_THIS_VOLATILE (TREE_OPERAND (*expr_p, 1))\n       && ! TREE_THIS_VOLATILE (*expr_p))\n   {\n     enum gimplify_status stat;\n@@ -246,6 +247,7 @@ java_gimplify_component_ref (tree *expr_p, tree *pre_p, tree *post_p)\n     */\n   \n     TREE_THIS_VOLATILE (*expr_p) = 1;\n+    *expr_p = java_modify_addr_for_volatile (*expr_p);\n     stat = gimplify_expr (expr_p, pre_p, post_p,\n \t\t\t  is_gimple_formal_tmp_var, fb_rvalue);\n     if (stat == GS_ERROR)\n@@ -273,7 +275,8 @@ java_gimplify_modify_expr (tree *modify_expr_p, tree *pre_p, tree *post_p)\n   tree rhs = TREE_OPERAND (modify_expr, 1);\n   tree lhs_type = TREE_TYPE (lhs);\n \n-  if (TREE_CODE (lhs) == COMPONENT_REF\n+  if (CLASS_FROM_SOURCE_P (output_class)\n+      && TREE_CODE (lhs) == COMPONENT_REF\n       && TREE_THIS_VOLATILE (TREE_OPERAND (lhs, 1)))\n     {\n       /* Special handling for volatile fields.  \n@@ -308,6 +311,7 @@ java_gimplify_modify_expr (tree *modify_expr_p, tree *pre_p, tree *post_p)\n \t\t    sync_expr, rhs);\n       TREE_SIDE_EFFECTS (rhs) = 1;\n       TREE_THIS_VOLATILE (lhs) = 1;\n+      lhs = java_modify_addr_for_volatile (lhs);\n       TREE_OPERAND (modify_expr, 0) = lhs;\n       TREE_OPERAND (modify_expr, 1) = rhs;\n     }"}, {"sha": "98aca58daf6e3deaf76281b0ec0330c72b44df9c", "filename": "gcc/java/java-tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe4e7c6527eb4452c33a8df24e7d76b82ce1a18a/gcc%2Fjava%2Fjava-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe4e7c6527eb4452c33a8df24e7d76b82ce1a18a/gcc%2Fjava%2Fjava-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjava-tree.h?ref=fe4e7c6527eb4452c33a8df24e7d76b82ce1a18a", "patch": "@@ -1250,6 +1250,7 @@ extern tree build_invokeinterface (tree, tree);\n extern tree build_jni_stub (tree);\n extern tree invoke_build_dtable (int, tree);\n extern tree build_field_ref (tree, tree, tree);\n+extern tree java_modify_addr_for_volatile (tree);\n extern void pushdecl_force_head (tree);\n extern tree build_java_binop (enum tree_code, tree, tree, tree);\n extern tree build_java_soft_divmod (enum tree_code, tree, tree, tree);"}]}