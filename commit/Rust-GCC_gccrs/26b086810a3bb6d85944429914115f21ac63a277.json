{"sha": "26b086810a3bb6d85944429914115f21ac63a277", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjZiMDg2ODEwYTNiYjZkODU5NDQ0Mjk5MTQxMTVmMjFhYzYzYTI3Nw==", "commit": {"author": {"name": "Yury Gribov", "email": "y.gribov@samsung.com", "date": "2013-12-19T14:50:05Z"}, "committer": {"name": "Yury Gribov", "email": "ygribov@gcc.gnu.org", "date": "2013-12-19T14:50:05Z"}, "message": "mklog: Split generated message in parts.\n\n2013-12-19  Yury Gribov  <y.gribov@samsung.com>\n\n\t* mklog: Split generated message in parts.\n\nFrom-SVN: r206116", "tree": {"sha": "b210c869c63e04a9b2719e1cc168a0709444a0d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b210c869c63e04a9b2719e1cc168a0709444a0d7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/26b086810a3bb6d85944429914115f21ac63a277", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26b086810a3bb6d85944429914115f21ac63a277", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26b086810a3bb6d85944429914115f21ac63a277", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26b086810a3bb6d85944429914115f21ac63a277/comments", "author": null, "committer": null, "parents": [{"sha": "9783e5984b418815896e6eb21d991c5e8457093a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9783e5984b418815896e6eb21d991c5e8457093a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9783e5984b418815896e6eb21d991c5e8457093a"}], "stats": {"total": 51, "additions": 39, "deletions": 12}, "files": [{"sha": "b5adf051d4c535e37ff3f43da5edb6a7a4a6b01e", "filename": "contrib/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26b086810a3bb6d85944429914115f21ac63a277/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26b086810a3bb6d85944429914115f21ac63a277/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=26b086810a3bb6d85944429914115f21ac63a277", "patch": "@@ -1,3 +1,7 @@\n+2013-12-19  Yury Gribov  <y.gribov@samsung.com>\n+\n+\t* mklog: Split generated message in parts.\n+\n 2013-10-31  Chung-Ju Wu  <jasonwucj@gmail.com>\n \n \t* config-list.mk (nds32le-elf, nds32be-elf): Add nds32 target."}, {"sha": "d3f044ee8581e67a11f96a7f67928e566b0fd535", "filename": "contrib/mklog", "status": "modified", "additions": 35, "deletions": 12, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26b086810a3bb6d85944429914115f21ac63a277/contrib%2Fmklog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26b086810a3bb6d85944429914115f21ac63a277/contrib%2Fmklog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fmklog?ref=26b086810a3bb6d85944429914115f21ac63a277", "patch": "@@ -34,6 +34,10 @@ $name = @n[1]; chop($name);\n $addr = $username . \"\\@my.domain.org\";\n $date = `date +%Y-%m-%d`; chop ($date);\n \n+$gcc_root = $0;\n+$gcc_root =~ s/[^\\\\\\/]+$/../;\n+chdir $gcc_root;\n+\n \n #-----------------------------------------------------------------------------\n # Program starts here. You should not need to edit anything below this\n@@ -50,16 +54,28 @@ if ( $#ARGV != 0 ) {\n $diff = $ARGV[0];\n $dir = `dirname $diff`; chop ($dir);\n $basename = `basename $diff`; chop ($basename);\n-$cl = `mktemp /tmp/$basename.XXXXXX` || exit 1; chop ($cl);\n $hdrline = \"$date  $name  <$addr>\";\n \n-open (CLFILE, \">$cl\") or die \"Could not open file $cl for writing\";\n-\n-print CLFILE \"$hdrline\\n\\n\";\n+my %cl_entries;\n+\n+sub get_clname($) {\n+\tmy $dirname = $_[0];\n+\twhile ($dirname) {\n+\t\tmy $clname = \"$dirname/ChangeLog\";\n+\t\tif (-f $clname) {\n+\t\t\tmy $filename_rel = substr ($_[0], length ($dirname) + 1);\n+\t\t\treturn ($filename_rel, $clname);\n+\t\t} else {\n+\t\t\t$dirname =~ s/[\\/\\\\]?[^\\/\\\\]*$//;\n+\t\t} \n+\t}\n+\treturn ($_[0], 'Unknown Changelog');\n+}\n \n # For every file in the .diff print all the function names in ChangeLog\n # format.\n $bof = 0;\n+$clname = get_clname('');\n open (DFILE, $diff) or die \"Could not open file $diff for reading\";\n while (<DFILE>) {\n     # Check if we found a new file.\n@@ -68,10 +84,11 @@ while (<DFILE>) {\n \t# $bof == 1), we just write out a ':' before starting the next\n \t# file.\n \tif ($bof == 1) {\n-\t    print CLFILE \":\\n\";\n+\t\t$cl_entries{$clname} .= \":\\n\";\n \t}\n \t$filename = $2;\n-\tprint CLFILE \"\\t* $filename\";\n+\t($filename_rel, $clname) = get_clname ($filename);\n+\t$cl_entries{$clname} .= \"\\t* $filename_rel\";\n \t$bof = 1;\n     }\n \n@@ -122,13 +139,13 @@ while (<DFILE>) {\n \t    # to the filename, so we need an extra space before the opening\n \t    # brace.\n \t    if ($bof) {\n-\t\tprint CLFILE \" \";\n+\t\t$cl_entries{$clname} .= \" \";\n \t\t$bof = 0;\n \t    } else {\n-\t\tprint CLFILE \"\\t\";\n+\t\t$cl_entries{$clname} .= \"\\t\";\n \t    }\n \n-\t    print CLFILE \"($fn):\\n\";\n+\t\t$cl_entries{$clname} .= \"($fn):\\n\";\n \t    $seen_names{$fn} = 1;\n \t}\n     }\n@@ -138,14 +155,20 @@ while (<DFILE>) {\n # write out a ':'. This happens when there is only one file with no\n # functions.\n if ($bof == 1) {\n-    print CLFILE \":\\n\";\n+\t$cl_entries{$clname} .= \":\\n\";\n+}\n+\n+$temp = `mktemp /tmp/$basename.XXXXXX` || exit 1; chop ($temp);\n+open (CLFILE, \">$temp\") or die \"Could not open file $temp for writing\";\n+\n+foreach my $clname (keys %cl_entries) {\n+\tprint CLFILE \"$clname:\\n\\n$hdrline\\n\\n$cl_entries{$clname}\\n\";\n }\n \n-print CLFILE \"\\n\";\n close (DFILE);\n \n # Concatenate the ChangeLog template and the original .diff file.\n-system (\"cat $diff >>$cl && mv $cl $diff\") == 0\n+system (\"cat $diff >>$temp && mv $temp $diff\") == 0\n     or die \"Could not add the ChangeLog entry to $diff\";\n \n exit 0;"}]}