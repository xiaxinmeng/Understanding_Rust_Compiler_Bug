{"sha": "4f68f111df59d8474f3635bb7a3eb5e0469b722b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGY2OGYxMTFkZjU5ZDg0NzRmMzYzNWJiN2EzZWI1ZTA0NjliNzIyYg==", "commit": {"author": {"name": "Francois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2007-09-20T21:58:23Z"}, "committer": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2007-09-20T21:58:23Z"}, "message": "re PR fortran/33288 (ICE (segfault) in mpfr_cmp2 when evaluating array initializers containing addition)\n\n\tPR fortran/33288\n\n\t* arith.c (reduce_unary, reduce_binary_ac, reduce_binary_ca,\n\treduce_binary_aa): Call ourselves recursively if an element of\n\tthe constructor is itself a constant array.\n\n\t* gfortran.dg/array_constructor_19.f90: New test.\n\nFrom-SVN: r128632", "tree": {"sha": "fe0494cb3b16d6bdc2d81609a958aedec1998bc4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fe0494cb3b16d6bdc2d81609a958aedec1998bc4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4f68f111df59d8474f3635bb7a3eb5e0469b722b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f68f111df59d8474f3635bb7a3eb5e0469b722b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f68f111df59d8474f3635bb7a3eb5e0469b722b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f68f111df59d8474f3635bb7a3eb5e0469b722b/comments", "author": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cc459ab40ad75779ba111199bd75437399251cc3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc459ab40ad75779ba111199bd75437399251cc3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc459ab40ad75779ba111199bd75437399251cc3"}], "stats": {"total": 51, "additions": 47, "deletions": 4}, "files": [{"sha": "f3a65cd086b4cf53086b9fa75c0de5639c1a64c8", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f68f111df59d8474f3635bb7a3eb5e0469b722b/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f68f111df59d8474f3635bb7a3eb5e0469b722b/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=4f68f111df59d8474f3635bb7a3eb5e0469b722b", "patch": "@@ -1,3 +1,10 @@\n+2007-09-20  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\tPR fortran/33288\n+\t* arith.c (reduce_unary, reduce_binary_ac, reduce_binary_ca,\n+\treduce_binary_aa): Call ourselves recursively if an element of\n+\tthe constructor is itself a constant array.\n+\n 2007-09-20  Tobias Schl\ufffdter  <tobi@gcc.gnu.org>\n \n \t* io.c (resolve_tag_format): New function using code split out"}, {"sha": "149f93f08e178c154eadeb1c586d85f1301126b0", "filename": "gcc/fortran/arith.c", "status": "modified", "additions": 18, "deletions": 4, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f68f111df59d8474f3635bb7a3eb5e0469b722b/gcc%2Ffortran%2Farith.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f68f111df59d8474f3635bb7a3eb5e0469b722b/gcc%2Ffortran%2Farith.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Farith.c?ref=4f68f111df59d8474f3635bb7a3eb5e0469b722b", "patch": "@@ -1288,7 +1288,8 @@ reduce_unary (arith (*eval) (gfc_expr *, gfc_expr **), gfc_expr *op,\n \n   for (c = head; c; c = c->next)\n     {\n-      rc = eval (c->expr, &r);\n+      rc = reduce_unary (eval, c->expr, &r);\n+\n       if (rc != ARITH_OK)\n \tbreak;\n \n@@ -1328,7 +1329,11 @@ reduce_binary_ac (arith (*eval) (gfc_expr *, gfc_expr *, gfc_expr **),\n \n   for (c = head; c; c = c->next)\n     {\n-      rc = eval (c->expr, op2, &r);\n+      if (c->expr->expr_type == EXPR_CONSTANT)\n+        rc = eval (c->expr, op2, &r);\n+      else\n+\trc = reduce_binary_ac (eval, c->expr, op2, &r);\n+\n       if (rc != ARITH_OK)\n \tbreak;\n \n@@ -1368,7 +1373,11 @@ reduce_binary_ca (arith (*eval) (gfc_expr *, gfc_expr *, gfc_expr **),\n \n   for (c = head; c; c = c->next)\n     {\n-      rc = eval (op1, c->expr, &r);\n+      if (c->expr->expr_type == EXPR_CONSTANT)\n+\trc = eval (op1, c->expr, &r);\n+      else\n+\trc = reduce_binary_ca (eval, op1, c->expr, &r);\n+\n       if (rc != ARITH_OK)\n \tbreak;\n \n@@ -1395,6 +1404,11 @@ reduce_binary_ca (arith (*eval) (gfc_expr *, gfc_expr *, gfc_expr **),\n }\n \n \n+/* We need a forward declaration of reduce_binary.  */\n+static arith reduce_binary (arith (*eval) (gfc_expr *, gfc_expr *, gfc_expr **),\n+\t\t\t    gfc_expr *op1, gfc_expr *op2, gfc_expr **result);\n+\n+\n static arith\n reduce_binary_aa (arith (*eval) (gfc_expr *, gfc_expr *, gfc_expr **),\n \t\t  gfc_expr *op1, gfc_expr *op2, gfc_expr **result)\n@@ -1421,7 +1435,7 @@ reduce_binary_aa (arith (*eval) (gfc_expr *, gfc_expr *, gfc_expr **),\n \t      break;\n \t    }\n \n-\t  rc = eval (c->expr, d->expr, &r);\n+\t  rc = reduce_binary (eval, c->expr, d->expr, &r);\n \t  if (rc != ARITH_OK)\n \t    break;\n "}, {"sha": "ee10c4cfdcc3f42cdc6c98b40a30c3dfb4406722", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f68f111df59d8474f3635bb7a3eb5e0469b722b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f68f111df59d8474f3635bb7a3eb5e0469b722b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4f68f111df59d8474f3635bb7a3eb5e0469b722b", "patch": "@@ -1,3 +1,8 @@\n+2007-09-20  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\tPR fortran/33288\n+\t* gfortran.dg/array_constructor_19.f90: New test.\n+\n 2007-09-20  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR debug/33316"}, {"sha": "460a34f5c1bb44b85a8730f70b3ec55ad3fb87db", "filename": "gcc/testsuite/gfortran.dg/array_constructor_19.f90", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f68f111df59d8474f3635bb7a3eb5e0469b722b/gcc%2Ftestsuite%2Fgfortran.dg%2Farray_constructor_19.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f68f111df59d8474f3635bb7a3eb5e0469b722b/gcc%2Ftestsuite%2Fgfortran.dg%2Farray_constructor_19.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Farray_constructor_19.f90?ref=4f68f111df59d8474f3635bb7a3eb5e0469b722b", "patch": "@@ -0,0 +1,17 @@\n+! Simplification of unary and binary expressions containing\n+! array constructors.\n+!\n+! See PR33288\n+!\n+! { dg-do run }\n+  real, parameter :: x(1) = 42\n+  real, parameter :: x1(1) = (/ x /) + 1\n+  real, parameter :: x2(1) = 1 + (/ x /)\n+  real, parameter :: x3(1) = -(/ x /)\n+  real, parameter :: x4(2) = (/ x, 1. /) + (/ 2, (/3/) /)\n+\n+  if (any (x1 /= (/43./))) call abort\n+  if (any (x2 /= (/43./))) call abort\n+  if (any (x3 /= (/-42./))) call abort\n+  if (any (x4 /= (/44., 4./))) call abort\n+end"}]}