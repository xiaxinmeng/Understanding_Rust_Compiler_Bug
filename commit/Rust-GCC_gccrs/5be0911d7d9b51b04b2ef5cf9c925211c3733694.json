{"sha": "5be0911d7d9b51b04b2ef5cf9c925211c3733694", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWJlMDkxMWQ3ZDliNTFiMDRiMmVmNWNmOWM5MjUyMTFjMzczMzY5NA==", "commit": {"author": {"name": "Javier Miranda", "email": "miranda@adacore.com", "date": "2007-12-19T16:23:21Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-12-19T16:23:21Z"}, "message": "exp_ch3.adb (Expand_N_Object_Declaration): Complete the circuitry that forces the construction of static dispatch tables...\n\n2007-12-19  Javier Miranda  <miranda@adacore.com>\n\n\t* exp_ch3.adb (Expand_N_Object_Declaration): Complete the circuitry\n\tthat forces the construction of static dispatch tables in case of\n\trecord subtypes.\n\nFrom-SVN: r131073", "tree": {"sha": "8ebfd01d65bc106f6e29ebd6dda6aa14438e1dc8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8ebfd01d65bc106f6e29ebd6dda6aa14438e1dc8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5be0911d7d9b51b04b2ef5cf9c925211c3733694", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5be0911d7d9b51b04b2ef5cf9c925211c3733694", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5be0911d7d9b51b04b2ef5cf9c925211c3733694", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5be0911d7d9b51b04b2ef5cf9c925211c3733694/comments", "author": {"login": "miranda-adacore", "id": 54413934, "node_id": "MDQ6VXNlcjU0NDEzOTM0", "avatar_url": "https://avatars.githubusercontent.com/u/54413934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miranda-adacore", "html_url": "https://github.com/miranda-adacore", "followers_url": "https://api.github.com/users/miranda-adacore/followers", "following_url": "https://api.github.com/users/miranda-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/miranda-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/miranda-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miranda-adacore/subscriptions", "organizations_url": "https://api.github.com/users/miranda-adacore/orgs", "repos_url": "https://api.github.com/users/miranda-adacore/repos", "events_url": "https://api.github.com/users/miranda-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/miranda-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cf284c756a3e6bb36b74c61c5791f28724ed744b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf284c756a3e6bb36b74c61c5791f28724ed744b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf284c756a3e6bb36b74c61c5791f28724ed744b"}], "stats": {"total": 17, "additions": 9, "deletions": 8}, "files": [{"sha": "fcc216e21c5ec9755814a38e6a0221f9093032df", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5be0911d7d9b51b04b2ef5cf9c925211c3733694/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5be0911d7d9b51b04b2ef5cf9c925211c3733694/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=5be0911d7d9b51b04b2ef5cf9c925211c3733694", "patch": "@@ -4051,6 +4051,7 @@ package body Exp_Ch3 is\n       Expr     : constant Node_Id    := Expression (N);\n       Loc      : constant Source_Ptr := Sloc (N);\n       Typ      : constant Entity_Id  := Etype (Def_Id);\n+      Base_Typ : constant Entity_Id  := Base_Type (Typ);\n       Expr_Q   : Node_Id;\n       Id_Ref   : Node_Id;\n       New_Ref  : Node_Id;\n@@ -4075,20 +4076,20 @@ package body Exp_Ch3 is\n       if VM_Target = No_VM\n         and then Static_Dispatch_Tables\n         and then Is_Library_Level_Entity (Def_Id)\n-        and then Is_Library_Level_Tagged_Type (Typ)\n-        and then (Ekind (Typ) = E_Record_Type\n-                    or else Ekind (Typ) = E_Protected_Type\n-                    or else Ekind (Typ) = E_Task_Type)\n-        and then not Has_Dispatch_Table (Typ)\n+        and then Is_Library_Level_Tagged_Type (Base_Typ)\n+        and then (Ekind (Base_Typ) = E_Record_Type\n+                    or else Ekind (Base_Typ) = E_Protected_Type\n+                    or else Ekind (Base_Typ) = E_Task_Type)\n+        and then not Has_Dispatch_Table (Base_Typ)\n       then\n          declare\n             New_Nodes : List_Id := No_List;\n \n          begin\n-            if Is_Concurrent_Type (Typ) then\n-               New_Nodes := Make_DT (Corresponding_Record_Type (Typ), N);\n+            if Is_Concurrent_Type (Base_Typ) then\n+               New_Nodes := Make_DT (Corresponding_Record_Type (Base_Typ), N);\n             else\n-               New_Nodes := Make_DT (Typ, N);\n+               New_Nodes := Make_DT (Base_Typ, N);\n             end if;\n \n             if not Is_Empty_List (New_Nodes) then"}]}