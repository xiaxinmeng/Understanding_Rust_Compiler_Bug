{"sha": "874aeeede55641e963f98fa663653aafa2a16d87", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODc0YWVlZWRlNTU2NDFlOTYzZjk4ZmE2NjM2NTNhYWZhMmExNmQ4Nw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-05-24T03:49:03Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-05-24T03:49:03Z"}, "message": "re PR c++/49102 ([C++0x] Use of deleted copy constructor not diagnosed)\n\n\tPR c++/49102\n\t* call.c (convert_arg_to_ellipsis): Call force_rvalue.\n\nFrom-SVN: r174101", "tree": {"sha": "ab58bc86946cf6084204861e09cb6a81cd300862", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ab58bc86946cf6084204861e09cb6a81cd300862"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/874aeeede55641e963f98fa663653aafa2a16d87", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/874aeeede55641e963f98fa663653aafa2a16d87", "html_url": "https://github.com/Rust-GCC/gccrs/commit/874aeeede55641e963f98fa663653aafa2a16d87", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/874aeeede55641e963f98fa663653aafa2a16d87/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a345e45d144c0e83aed85b6d29f64af3d21b4453", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a345e45d144c0e83aed85b6d29f64af3d21b4453", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a345e45d144c0e83aed85b6d29f64af3d21b4453"}], "stats": {"total": 33, "additions": 29, "deletions": 4}, "files": [{"sha": "c00e0649f1497c8a161b20f251a987303afbee3d", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/874aeeede55641e963f98fa663653aafa2a16d87/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/874aeeede55641e963f98fa663653aafa2a16d87/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=874aeeede55641e963f98fa663653aafa2a16d87", "patch": "@@ -1,5 +1,8 @@\n 2011-05-23  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/49102\n+\t* call.c (convert_arg_to_ellipsis): Call force_rvalue.\n+\n \tPR c++/49105\n \t* typeck.c (cp_build_c_cast): Don't strip cv-quals when\n \tconverting to reference."}, {"sha": "ff3dc062b2e0e29a0d77d28d2dc44b1dfea03922", "filename": "gcc/cp/call.c", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/874aeeede55641e963f98fa663653aafa2a16d87/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/874aeeede55641e963f98fa663653aafa2a16d87/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=874aeeede55641e963f98fa663653aafa2a16d87", "patch": "@@ -5905,10 +5905,13 @@ convert_arg_to_ellipsis (tree arg)\n       /* In a template (or ill-formed code), we can have an incomplete type\n \t even after require_complete_type, in which case we don't know\n \t whether it has trivial copy or not.  */\n-      && COMPLETE_TYPE_P (arg_type)\n-      && (type_has_nontrivial_copy_init (arg_type)\n-\t  || TYPE_HAS_NONTRIVIAL_DESTRUCTOR (arg_type)))\n+      && COMPLETE_TYPE_P (arg_type))\n     {\n+      /* Build up a real lvalue-to-rvalue conversion in case the\n+\t copy constructor is trivial but not callable.  */\n+      if (CLASS_TYPE_P (arg_type))\n+\tforce_rvalue (arg, tf_warning_or_error);\n+\n       /* [expr.call] 5.2.2/7:\n \t Passing a potentially-evaluated argument of class type (Clause 9)\n \t with a non-trivial copy constructor or a non-trivial destructor\n@@ -5920,7 +5923,9 @@ convert_arg_to_ellipsis (tree arg)\n \n \t If the call appears in the context of a sizeof expression,\n \t it is not potentially-evaluated.  */\n-      if (cp_unevaluated_operand == 0)\n+      if (cp_unevaluated_operand == 0\n+\t  && (type_has_nontrivial_copy_init (arg_type)\n+\t      || TYPE_HAS_NONTRIVIAL_DESTRUCTOR (arg_type)))\n \terror (\"cannot pass objects of non-trivially-copyable \"\n \t       \"type %q#T through %<...%>\", arg_type);\n     }"}, {"sha": "4b447eadb1af78091e0f0dacecd6e124f490c5f9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/874aeeede55641e963f98fa663653aafa2a16d87/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/874aeeede55641e963f98fa663653aafa2a16d87/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=874aeeede55641e963f98fa663653aafa2a16d87", "patch": "@@ -1,5 +1,7 @@\n 2011-05-23  Jason Merrill  <jason@redhat.com>\n \n+\t* g++.dg/cpp0x/defaulted28.C: New.\n+\n \t* g++.dg/cpp0x/sfinae25.C: New.\n \n \t* g++.dg/cpp0x/rv-cast2.C: New."}, {"sha": "15caef6cca69f177444586804264b5636f66df91", "filename": "gcc/testsuite/g++.dg/cpp0x/defaulted28.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/874aeeede55641e963f98fa663653aafa2a16d87/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdefaulted28.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/874aeeede55641e963f98fa663653aafa2a16d87/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdefaulted28.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdefaulted28.C?ref=874aeeede55641e963f98fa663653aafa2a16d87", "patch": "@@ -0,0 +1,15 @@\n+// PR c++/49102\n+// { dg-options -std=c++0x }\n+\n+struct A {\n+  A() = default;\n+\n+private:\n+  A(A const&) = default;\t// { dg-error \"private\" }\n+};\n+\n+void f(...) { }\n+int main() {\n+  A a;\n+  f(a); \t\t\t// { dg-error \"this context\" }\n+}"}]}