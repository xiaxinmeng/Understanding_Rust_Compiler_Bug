{"sha": "d4a10d0a628008949adf9e2baee507f8a0985b3f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDRhMTBkMGE2MjgwMDg5NDlhZGY5ZTJiYWVlNTA3ZjhhMDk4NWIzZg==", "commit": {"author": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2012-06-29T16:12:35Z"}, "committer": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2012-06-29T16:12:35Z"}, "message": "configure.ac: Skip C if explicitly selected.\n\ntoplevel/\n\t* configure.ac: Skip C if explicitly selected.\n\t* configure: Regenerate.\n\ngcc/\n\t* configure.ac: Remove special gtfiles case for C.\n\t* configure: Regenerate.\n\t* Makefile.in: Remove C front-end hooks and build hooks that\n\twill be picked up from c/Make-lang.in now.\n\tAdd tree-mudflap to C_COMMON_OBJS.\n\t* gengtype.c (files_rules): Adjust gt-files for c/c-decl.c.\n\t* config/vms/vms.c: Look for c-tree.h in c/.\n\t* doc/gty.texi: Remove reference to c-config-lang.in.\n\t* doc/sourcebuild.texi: Document the c/ subdirectory.\n\nc/\n\t* Make-lang.in: New file, rules migrated from gcc/Makefile.in\n\tand add language Makefile hooks.\n\t* config-lang.in: New file.\n\t* c-config-lang.in: Moved from gcc/config-lang.in to here, and\n\tadd the required \"normal\" config-lang.in rules.\n\t* c-lang.h: Moved from gcc/ to here.\n\t* c-tree.h: Likewise.\n\t* c-objc-common.c: Likewise.\n\t* c-objc-common.h: Likewise.\n\t* c-typeck.c: Likewise.\n\t* c-convert.c: Likewise.\n\t* c-lang.c: Likewise.\n\t* c-aux-info.c: Likewise.\n\t* c-errors.c: Likewise.\n\t* gccspec.c: Likewise.\n\t* c-decl.c: Likewise.  Include gt-c-c-decl.h, not gt-c-decl.h.\n\t* c-parser.c: Likewise.  Include gt-c-c-parser.h, not gt-c-parser.h.\n\nc-family/\n\t* cppspec.c: Moved from gcc/ to here.\n\nobjc/\n\t* Make-ang.in: Adjust for move of C front-end files.\n\t* config-lang.in: Likewise.\n\t* objc-encoding.c: Look for cp-tree.h in cp/, and for c-tree.h\n\tand c-lang.h in c/.\n\t* objc-runtime-shared-support.c: Likewise.\n\t* objc-next-runtime-abi-01.c: Likewise.\n\t* objc-next-runtime-abi-02.c: Likewise.\n\t* objc-gnu-runtime-abi-01.c: Likewise.\n\t* objc-act.c: Likewise.\n\t* objc-lang.c: Likewise.\n\ncp/\n\t* Make-lang.in: Remove tree-mudflap.o from CXX_AND_OBJCXX_OBJS.\n\nFrom-SVN: r189080", "tree": {"sha": "f78869254e81452ccc6da3411b5dc9dd8cc02315", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f78869254e81452ccc6da3411b5dc9dd8cc02315"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d4a10d0a628008949adf9e2baee507f8a0985b3f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4a10d0a628008949adf9e2baee507f8a0985b3f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4a10d0a628008949adf9e2baee507f8a0985b3f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4a10d0a628008949adf9e2baee507f8a0985b3f/comments", "author": null, "committer": null, "parents": [{"sha": "cc193fba85953801d140e87c636a208767b75dfa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc193fba85953801d140e87c636a208767b75dfa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc193fba85953801d140e87c636a208767b75dfa"}], "stats": {"total": 516, "additions": 351, "deletions": 165}, "files": [{"sha": "493ef682577ef17b6d10470ed28418f6c932f773", "filename": "ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a10d0a628008949adf9e2baee507f8a0985b3f/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a10d0a628008949adf9e2baee507f8a0985b3f/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=d4a10d0a628008949adf9e2baee507f8a0985b3f", "patch": "@@ -1,3 +1,8 @@\n+2012-06-29  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* configure.ac: Skip C if explicitly selected.\n+\t* configure: Regenerate.\n+\n 2012-06-28  Christophe Lyon <christophe.lyon@st.com>\n \n \t* configure.ac (CFLAGS_FOR_TARGET, CXXFLAGS_FOR_TARGET): Make sure"}, {"sha": "5eba95c0739397b781d6d458f44dc73b7c68bbad", "filename": "configure", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a10d0a628008949adf9e2baee507f8a0985b3f/configure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a10d0a628008949adf9e2baee507f8a0985b3f/configure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure?ref=d4a10d0a628008949adf9e2baee507f8a0985b3f", "patch": "@@ -6310,8 +6310,11 @@ if test -d ${srcdir}/gcc; then\n \n         case ,${enable_languages}, in\n           *,${language},*)\n-            # Language was explicitly selected; include it.\n-            add_this_lang=yes\n+            # Language was explicitly selected; include it\n+\t    # unless it is C, which is enabled by default.\n+\t    if test \"$language\" != \"c\"; then\n+\t      add_this_lang=yes\n+\t    fi\n             ;;\n           *,all,*)\n             # 'all' was selected, select it if it is a default language"}, {"sha": "2ddd040d0e9c3c0ffc7eca773cea817b86092b38", "filename": "configure.ac", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a10d0a628008949adf9e2baee507f8a0985b3f/configure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a10d0a628008949adf9e2baee507f8a0985b3f/configure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure.ac?ref=d4a10d0a628008949adf9e2baee507f8a0985b3f", "patch": "@@ -1816,8 +1816,11 @@ if test -d ${srcdir}/gcc; then\n \n         case ,${enable_languages}, in\n           *,${language},*)\n-            # Language was explicitly selected; include it.\n-            add_this_lang=yes\n+            # Language was explicitly selected; include it\n+\t    # unless it is C, which is enabled by default.\n+\t    if test \"$language\" != \"c\"; then\n+\t      add_this_lang=yes\n+\t    fi\n             ;;\n           *,all,*)\n             # 'all' was selected, select it if it is a default language"}, {"sha": "7a1c4cc9b84835681d0e84b322965003d954ea75", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a10d0a628008949adf9e2baee507f8a0985b3f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a10d0a628008949adf9e2baee507f8a0985b3f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d4a10d0a628008949adf9e2baee507f8a0985b3f", "patch": "@@ -1,3 +1,15 @@\n+2012-06-29  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* configure.ac: Remove special gtfiles case for C.\n+\t* configure: Regenerate.\n+\t* Makefile.in: Remove C front-end hooks and build hooks that\n+\twill be picked up from c/Make-lang.in now.\n+\tAdd tree-mudflap to C_COMMON_OBJS.\n+\t* gengtype.c (files_rules): Adjust gt-files for c/c-decl.c.\n+\t* config/vms/vms.c: Look for c-tree.h in c/.\n+\t* doc/gty.texi: Remove reference to c-config-lang.in.\n+\t* doc/sourcebuild.texi: Document the c/ subdirectory.\n+\n 2012-06-29  Steven Bosscher  <steven@gcc.gnu.org>\n \n \t* system.h (CASE_USE_BIT_TESTS): Poison."}, {"sha": "afea4f386221175777ec2bfad331e9568f7f91de", "filename": "gcc/Makefile.in", "status": "modified", "additions": 24, "deletions": 102, "changes": 126, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a10d0a628008949adf9e2baee507f8a0985b3f/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a10d0a628008949adf9e2baee507f8a0985b3f/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=d4a10d0a628008949adf9e2baee507f8a0985b3f", "patch": "@@ -502,8 +502,8 @@ host_xm_defines=@host_xm_defines@\n xm_file_list=@xm_file_list@\n xm_include_list=@xm_include_list@\n xm_defines=@xm_defines@\n-lang_checks=check-gcc\n-lang_checks_parallelized=check-gcc\n+lang_checks=\n+lang_checks_parallelized=\n dg_target_exps:=alpha.exp,arm.exp,avr.exp,bfin.exp,cris.exp,frv.exp\n dg_target_exps:=$(dg_target_exps),i386.exp,ia64.exp,m68k.exp,microblaze.exp\n dg_target_exps:=$(dg_target_exps),mips.exp,powerpc.exp,rx.exp,s390.exp,sh.exp\n@@ -717,11 +717,11 @@ GENERATED_MANPAGES = @GENERATED_MANPAGES@\n OTHER_FIXINCLUDES_DIRS=\n \n # A list of all the language-specific executables.\n-COMPILERS = cc1$(exeext) @all_compilers@\n+COMPILERS = @all_compilers@\n \n # List of things which should already be built whenever we try to use xgcc\n # to compile anything (without linking).\n-GCC_PASSES=xgcc$(exeext) cc1$(exeext) specs\n+GCC_PASSES=xgcc$(exeext) specs\n \n # Directory to link to, when using the target `maketest'.\n DIR = ../gcc\n@@ -1133,23 +1133,18 @@ CXX_TARGET_OBJS=@cxx_target_objs@\n # Target specific, Fortran specific object file\n FORTRAN_TARGET_OBJS=@fortran_target_objs@\n \n-# Object files for gcc driver.\n+# Object files for gcc many-languages driver.\n GCC_OBJS = gcc.o ggc-none.o\n \n # Language-specific object files shared by all C-family front ends.\n+# FIXME: tree-mudflap is C-family only, but it is also part of the middle-end.\n+# The mudflap machinery should be properly separated from the front ends, and\n+# perhaps turned into a plugin.\n C_COMMON_OBJS = c-family/c-common.o c-family/c-cppbuiltin.o c-family/c-dump.o \\\n   c-family/c-format.o c-family/c-gimplify.o c-family/c-lex.o \\\n   c-family/c-omp.o c-family/c-opts.o c-family/c-pch.o \\\n   c-family/c-ppoutput.o c-family/c-pragma.o c-family/c-pretty-print.o \\\n-  c-family/c-semantics.o c-family/c-ada-spec.o\n-\n-# Language-specific object files for C and Objective C.\n-C_AND_OBJC_OBJS = attribs.o c-errors.o c-decl.o c-typeck.o \\\n-  c-convert.o c-aux-info.o c-objc-common.o c-parser.o tree-mudflap.o \\\n-  $(C_COMMON_OBJS) $(C_TARGET_OBJS)\n-\n-# Language-specific object files for C.\n-C_OBJS = c-lang.o c-family/stub-objc.o $(C_AND_OBJC_OBJS)\n+  c-family/c-semantics.o c-family/c-ada-spec.o tree-mudflap.o\n \n # Language-independent object files.\n # We put the insn-*.o files first so that a parallel make will build\n@@ -1475,11 +1470,10 @@ OBJS-libcommon-target = $(common_out_object_file) prefix.o params.o \\\n \topts.o opts-common.o options.o vec.o hooks.o common/common-targhooks.o\n \n # This lists all host objects for the front ends.\n-ALL_HOST_FRONTEND_OBJS = $(C_OBJS) \\\n-  $(foreach v,$(CONFIG_LANGUAGES),$($(v)_OBJS))\n+ALL_HOST_FRONTEND_OBJS = $(foreach v,$(CONFIG_LANGUAGES),$($(v)_OBJS))\n \n ALL_HOST_BACKEND_OBJS = $(GCC_OBJS) $(OBJS) $(OBJS-libcommon) \\\n-  $(OBJS-libcommon-target) @TREEBROWSER@ main.o gccspec.o cppspec.o \\\n+  $(OBJS-libcommon-target) @TREEBROWSER@ main.o c-family/cppspec.o \\\n   $(COLLECT2_OBJS) $(EXTRA_GCC_OBJS) $(GCOV_OBJS) $(GCOV_DUMP_OBJS)\n \n # This lists all host object files, whether they are included in this\n@@ -1496,7 +1490,7 @@ MOSTLYCLEANFILES = insn-flags.h insn-config.h insn-codes.h \\\n  tm-preds.h tm-constrs.h checksum-options \\\n  tree-check.h min-insn-modes.c insn-modes.c insn-modes.h \\\n  genrtl.h gt-*.h gtype-*.h gtype-desc.c gtyp-input.list \\\n- xgcc$(exeext) cpp$(exeext) cc1$(exeext) \\\n+ xgcc$(exeext) cpp$(exeext) \\\n  $(EXTRA_PROGRAMS) gcc-cross$(exeext) \\\n  $(SPECS) collect2$(exeext) gcc-ar$(exeext) gcc-nm$(exeext) \\\n  gcc-ranlib$(exeext) \\\n@@ -1740,12 +1734,6 @@ ifeq ($(enable_plugin),yes)\n native: gengtype$(exeext)\n endif\n \n-# Define the names for selecting languages in LANGUAGES.\n-c: cc1$(exeext)\n-\n-# Tell GNU make these are phony targets.\n-.PHONY: c\n-\n # On the target machine, finish building a cross compiler.\n # This does the things that can't be done on the host machine.\n rest.cross: specs\n@@ -1773,19 +1761,19 @@ libcommon.a: $(OBJS-libcommon)\n # We call this executable `xgcc' rather than `gcc'\n # to avoid confusion if the current directory is in the path\n # and CC is `gcc'.  It is renamed to `gcc' when it is installed.\n-xgcc$(exeext): $(GCC_OBJS) gccspec.o libcommon-target.a $(LIBDEPS) \\\n+xgcc$(exeext): $(GCC_OBJS) c/gccspec.o libcommon-target.a $(LIBDEPS) \\\n \t$(EXTRA_GCC_OBJS)\n \t+$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ $(GCC_OBJS) \\\n-\t  gccspec.o $(EXTRA_GCC_OBJS) libcommon-target.a \\\n+\t  c/gccspec.o $(EXTRA_GCC_OBJS) libcommon-target.a \\\n \t  $(EXTRA_GCC_LIBS) $(LIBS)\n \n-# cpp is to cpp0 as gcc is to cc1.\n-# The only difference from xgcc is that it's linked with cppspec.o\n-# instead of gccspec.o.\n-cpp$(exeext): $(GCC_OBJS) cppspec.o libcommon-target.a $(LIBDEPS) \\\n+# cpp is to cpp0 as e.g. g++ is to cc1plus: Just another driver.\n+# It is part of c-family because the handled extensions are hard-coded\n+# and only contain c-family extensions (see known_suffixes).\n+cpp$(exeext): $(GCC_OBJS) c-family/cppspec.o libcommon-target.a $(LIBDEPS) \\\n \t$(EXTRA_GCC_OBJS)\n \t+$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ $(GCC_OBJS) \\\n-\t  cppspec.o $(EXTRA_GCC_OBJS) libcommon-target.a \\\n+\t  c-family/cppspec.o $(EXTRA_GCC_OBJS) libcommon-target.a \\\n \t  $(EXTRA_GCC_LIBS) $(LIBS)\n \n # Dump a specs file to make -B./ read these specs over installed ones.\n@@ -1803,19 +1791,6 @@ checksum-options:\n \techo \"$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS)\" > checksum-options.tmp \\\n \t&& $(srcdir)/../move-if-change checksum-options.tmp checksum-options\n \n-# compute checksum over all object files and the options\n-cc1-checksum.c : build/genchecksum$(build_exeext) checksum-options \\\n-\t$(C_OBJS) $(BACKEND) $(LIBDEPS) \n-\tbuild/genchecksum$(build_exeext) $(C_OBJS) $(BACKEND) $(LIBDEPS) \\\n-                     checksum-options > cc1-checksum.c.tmp && \t\t \\\n-\t$(srcdir)/../move-if-change cc1-checksum.c.tmp cc1-checksum.c\n-\n-cc1-checksum.o : cc1-checksum.c $(CONFIG_H) $(SYSTEM_H)\n-\n-cc1$(exeext): $(C_OBJS) cc1-checksum.o $(BACKEND) $(LIBDEPS)\n-\t+$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ $(C_OBJS) \\\n-\t  cc1-checksum.o $(BACKEND) $(LIBS) $(BACKENDLIBS)\n-\n #\f\n # Build libgcc.a.\n \n@@ -1865,52 +1840,6 @@ srcextra: gcc.srcextra lang.srcextra\n gcc.srcextra: gengtype-lex.c\n \t-cp -p $^ $(srcdir)\n \n-# C language specific files.\n-c-aux-info.o : c-aux-info.c  $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-\t$(C_TREE_H) $(TREE_H) $(FLAGS_H)\n-\n-c-convert.o : c-convert.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-\t$(TREE_H) $(C_TREE_H) $(FLAGS_H) $(C_COMMON_H) convert.h \\\n-\tlanghooks.h $(TARGET_H)\n-\n-c-decl.o : c-decl.c c-lang.h $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-\t$(TREE_H) $(C_TREE_H) $(GGC_H) $(TARGET_H) $(FLAGS_H) $(FUNCTION_H) \\\n-\toutput.h debug.h toplev.h intl.h $(TM_P_H) $(TREE_INLINE_H) \\\n-\t$(TIMEVAR_H) $(OPTS_H) $(C_PRAGMA_H) gt-c-decl.h $(CGRAPH_H) \\\n-\t$(HASHTAB_H) $(LANGHOOKS_DEF_H) \\\n-\t$(TREE_DUMP_H) $(C_COMMON_H) $(CPPLIB_H) $(DIAGNOSTIC_CORE_H) \\\n-\t$(INPUT_H) langhooks.h pointer-set.h tree-iterator.h \\\n-\t$(PLUGIN_H) c-family/c-ada-spec.h c-family/c-objc.h\n-\n-c-errors.o: c-errors.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n-\t$(C_TREE_H) $(FLAGS_H) $(DIAGNOSTIC_H) $(TM_P_H)\n-\n-c-lang.o : c-lang.c c-objc-common.h \\\n-\t$(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n-\t$(C_TREE_H) $(DIAGNOSTIC_CORE_H) \\\n-\tlanghooks.h $(LANGHOOKS_DEF_H) $(C_COMMON_H) gtype-c.h \\\n-\t$(C_PRAGMA_H) $(TREE_INLINE_H)\n-\n-c-objc-common.o : c-objc-common.c c-objc-common.h \\\n-\t$(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-\t$(TREE_H) $(C_TREE_H) $(FLAGS_H) $(DIAGNOSTIC_H) \\\n-\tlanghooks.h $(GGC_H) $(C_PRETTY_PRINT_H) intl.h \\\n-\t$(TREE_PRETTY_PRINT_H)\n-\n-c-parser.o : c-parser.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-\t$(TM_H) $(TREE_H) $(C_TREE_H) $(C_COMMON_H) $(C_PRAGMA_H) $(CPPLIB_H) \\\n-\t$(GGC_H) $(TIMEVAR_H) $(INPUT_H) $(FLAGS_H) \\\n-\tgt-c-parser.h langhooks.h \\\n-\t$(VEC_H) $(TARGET_H) $(CGRAPH_H) $(PLUGIN_H) \\\n-\t c-family/c-objc.h\n-\n-c-typeck.o : c-typeck.c c-lang.h $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-\t$(TREE_H) $(C_TREE_H) $(TARGET_H) $(FLAGS_H) intl.h \\\n-\tlanghooks.h tree-iterator.h $(BITMAP_H) $(GIMPLE_H) \\\n-\tc-family/c-objc.h\n-\n-\n-\n graph.o: graph.c $(SYSTEM_H) coretypes.h $(TM_H) toplev.h $(DIAGNOSTIC_CORE_H) $(FLAGS_H) \\\n     $(RTL_H) $(FUNCTION_H) hard-reg-set.h $(BASIC_BLOCK_H) graph.h $(OBSTACK_H) \\\n     $(CONFIG_H) $(EMIT_RTL_H)\n@@ -1987,7 +1916,10 @@ lto-wrapper$(exeext): lto-wrapper.o ggc-none.o libcommon-target.a $(LIBDEPS)\n lto-wrapper.o: lto-wrapper.c $(CONFIG_H) $(SYSTEM_H) coretypes.h intl.h \\\n \t$(OBSTACK_H) $(DIAGNOSTIC_H) $(OPTS_H) $(OPTIONS_H)\n \n-# Files used by all variants of C.\n+# Files used by all variants of C or by the stand-alone pre-processor.\n+c-family/cppspec.o: c-family/cppspec.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n+    $(TM_H) $(GCC_H) $(OPTS_H)\n+\n c-family/c-common.o : c-family/c-common.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n \t$(TM_H) $(TREE_H) \\\n \t$(OBSTACK_H) $(C_COMMON_H) $(FLAGS_H) toplev.h output.h $(C_PRAGMA_H) \\\n@@ -2107,16 +2039,6 @@ gcc.o: gcc.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) intl.h multilib.h \\\n   $(DRIVER_DEFINES) \\\n   -c $(srcdir)/gcc.c $(OUTPUT_OPTION))\n \n-gccspec.o: gccspec.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(GCC_H) \\\n-    $(OPTS_H)\n-\t(SHLIB='$(SHLIB)'; \\\n-\t$(COMPILER) $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) \\\n-  $(DRIVER_DEFINES) \\\n-  -c $(srcdir)/gccspec.c $(OUTPUT_OPTION))\n-\n-cppspec.o: cppspec.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(GCC_H) \\\n-    $(OPTS_H)\n-\n specs.h : s-specs ; @true\n s-specs : Makefile\n \tlsf=\"$(lang_specs_files)\"; for f in $$lsf; do \\\n@@ -4999,7 +4921,7 @@ site.exp: ./config.status Makefile\n \t\t-e '1,/^## All variables above are.*##/ d' >> site.exp\n \t-@rm -f ./site.tmp\n \n-CHECK_TARGETS = check-gcc @check_languages@\n+CHECK_TARGETS = @check_languages@\n \n check: $(CHECK_TARGETS)\n "}, {"sha": "297439bae9a98fa56094f03964ff62d530d1c4f0", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a10d0a628008949adf9e2baee507f8a0985b3f/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a10d0a628008949adf9e2baee507f8a0985b3f/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=d4a10d0a628008949adf9e2baee507f8a0985b3f", "patch": "@@ -1,3 +1,7 @@\n+2012-06-29  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* cppspec.c: Moved from gcc/ to here.\n+\n 2012-06-27  Kai Tietz  <ktietz@redhat.com>\n \n \tPR preprocessor/37215"}, {"sha": "c9ff70e5544d1a0f6b5f890acb0f32ebf6b9520e", "filename": "gcc/c-family/cppspec.c", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a10d0a628008949adf9e2baee507f8a0985b3f/gcc%2Fc-family%2Fcppspec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a10d0a628008949adf9e2baee507f8a0985b3f/gcc%2Fc-family%2Fcppspec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fcppspec.c?ref=d4a10d0a628008949adf9e2baee507f8a0985b3f", "previous_filename": "gcc/cppspec.c"}, {"sha": "f8572aaa13fa4a2aa5d4d833495bbda2ae1d01c3", "filename": "gcc/c/ChangeLog", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a10d0a628008949adf9e2baee507f8a0985b3f/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a10d0a628008949adf9e2baee507f8a0985b3f/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=d4a10d0a628008949adf9e2baee507f8a0985b3f", "patch": "@@ -0,0 +1,25 @@\n+2012-06-29  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* Make-lang.in: New file, rules migrated from gcc/Makefile.in\n+\tand add language Makefile hooks.\n+\t* config-lang.in: New file.\n+\t* c-config-lang.in: Moved from gcc/config-lang.in to here, and\n+\tadd the required \"normal\" config-lang.in rules.\n+\t* c-lang.h: Moved from gcc/ to here.\n+\t* c-tree.h: Likewise.\n+\t* c-objc-common.c: Likewise.\n+\t* c-objc-common.h: Likewise.\n+\t* c-typeck.c: Likewise.\n+\t* c-convert.c: Likewise.\n+\t* c-lang.c: Likewise.\n+\t* c-aux-info.c: Likewise.\n+\t* c-errors.c: Likewise.\n+\t* gccspec.c: Likewise.\n+\t* c-decl.c: Likewise.  Include gt-c-c-decl.h, not gt-c-decl.h.\n+\t* c-parser.c: Likewise.  Include gt-c-c-parser.h, not gt-c-parser.h.\n+\f\n+Copyright (C) 2012 Free Software Foundation, Inc.\n+\n+Copying and distribution of this file, with or without modification,\n+are permitted in any medium without royalty provided the copyright\n+notice and this notice are preserved."}, {"sha": "08b1ba1a9192af361b9d73ca371bcb89964f9b0a", "filename": "gcc/c/Make-lang.in", "status": "added", "additions": 196, "deletions": 0, "changes": 196, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a10d0a628008949adf9e2baee507f8a0985b3f/gcc%2Fc%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a10d0a628008949adf9e2baee507f8a0985b3f/gcc%2Fc%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FMake-lang.in?ref=d4a10d0a628008949adf9e2baee507f8a0985b3f", "patch": "@@ -0,0 +1,196 @@\n+# Top level -*- makefile -*- fragment for GNU C - C language.\n+# Copyright (C) 1994, 1995, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004,\n+# 2005, 2007, 2008, 2009, 2010, 2011, 2012\n+# Free Software Foundation, Inc.\n+\n+#This file is part of GCC.\n+\n+#GCC is free software; you can redistribute it and/or modify\n+#it under the terms of the GNU General Public License as published by\n+#the Free Software Foundation; either version 3, or (at your option)\n+#any later version.\n+\n+#GCC is distributed in the hope that it will be useful,\n+#but WITHOUT ANY WARRANTY; without even the implied warranty of\n+#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+#GNU General Public License for more details.\n+\n+# You should have received a copy of the GNU General Public License\n+# along with GCC; see the file COPYING3.  If not see\n+# <http://www.gnu.org/licenses/>.\n+\n+# This file provides the language dependent support in the main Makefile.\n+# Each language makefile fragment must provide the following targets:\n+#\n+# foo.all.cross, foo.start.encap, foo.rest.encap,\n+# foo.install-common, foo.install-man, foo.install-info, foo.install-pdf,\n+# foo.install-html, foo.info, foo.dvi, foo.pdf, foo.html, foo.uninstall,\n+# foo.mostlyclean, foo.clean, foo.distclean,\n+# foo.maintainer-clean, foo.stage1, foo.stage2, foo.stage3, foo.stage4\n+#\n+# where `foo' is the name of the language.\n+#\n+# It should also provide rules for:\n+#\n+# - making any compiler driver (eg: gcc)\n+# - the compiler proper (eg: cc1)\n+# - define the names for selecting the language in LANGUAGES.\n+\n+#\f\n+# Define the names for selecting c in LANGUAGES.\n+c: cc1$(exeext)\n+\n+# Tell GNU make to ignore these if they exist.\n+.PHONY: c gcc\n+\n+# The C front end driver.  This is different from the drivers for other\n+# front ends, because there is no C language specific driver (i.e. nothing\n+# is to cc1 as e.g. g++ is to cc1plus, or gfortran is to f951).\n+c/gccspec.o: c/gccspec.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(GCC_H) \\\n+    $(OPTS_H)\n+\t(SHLIB='$(SHLIB)'; \\\n+\t$(COMPILER) $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) \\\n+  $(DRIVER_DEFINES) \\\n+  -c $(srcdir)/c/gccspec.c $(OUTPUT_OPTION))\n+\n+# The C compiler itself.\n+\n+# Language-specific object files for C and Objective C.\n+C_AND_OBJC_OBJS = attribs.o c/c-errors.o c/c-decl.o c/c-typeck.o \\\n+  c/c-convert.o c/c-aux-info.o c/c-objc-common.o c/c-parser.o \\\n+  $(C_COMMON_OBJS) $(C_TARGET_OBJS)\n+\n+# Language-specific object files for C.\n+C_OBJS = c/c-lang.o c-family/stub-objc.o $(C_AND_OBJC_OBJS)\n+c_OBJS = $(C_OBJS) cc1-checksum.o c/gccspec.o\n+\n+# Use strict warnings for this front end.\n+c-warn = $(STRICT_WARN)\n+\n+# compute checksum over all object files and the options\n+cc1-checksum.c : build/genchecksum$(build_exeext) checksum-options \\\n+\t$(C_OBJS) $(BACKEND) $(LIBDEPS) \n+\tbuild/genchecksum$(build_exeext) $(C_OBJS) $(BACKEND) $(LIBDEPS) \\\n+                     checksum-options > cc1-checksum.c.tmp && \t\t \\\n+\t$(srcdir)/../move-if-change cc1-checksum.c.tmp cc1-checksum.c\n+\n+cc1-checksum.o : cc1-checksum.c $(CONFIG_H) $(SYSTEM_H)\n+\n+cc1$(exeext): $(C_OBJS) cc1-checksum.o $(BACKEND) $(LIBDEPS)\n+\t+$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ $(C_OBJS) \\\n+\t  cc1-checksum.o $(BACKEND) $(LIBS) $(BACKENDLIBS)\n+#\f\n+# Build hooks:\n+\n+c.info:\n+c.dvi:\n+c.pdf:\n+c.html:\n+c.install-info:\n+c.install-pdf:\n+c.install-html:\n+c.all.cross:\n+c.start.encap:\n+c.rest.encap:\n+c.srcinfo:\n+c.srcextra: gengtype-lex.c\n+\t-cp -p $^ $(srcdir)\n+c.tags: force\n+\tcd $(srcdir)/c; etags -o TAGS.sub *.c *.h; \\\n+\tetags --include TAGS.sub --include ../TAGS.sub\n+c.man:\n+c.srcman:\n+\n+# List of targets that can use the generic check- rule and its // variant.\n+lang_checks += check-gcc\n+lang_checks_parallelized += check-gcc\n+\n+# 'make check' in gcc/ looks for check-c.  Redirect it to check-gcc.\n+check-c : check-gcc\n+\n+#\f\n+# Install hooks:\n+# cc1 is installed elsewhere as part of $(COMPILERS).\n+\n+c.install-common:\n+c.install-man:\n+c.install-plugin:\n+c.uninstall:\n+\n+#\f\n+# Clean hooks:\n+# A lot of the ancillary files are deleted by the main makefile.\n+# We just have to delete files specific to us.\n+\n+c.mostlyclean:\n+\t-rm -f cc1$(exeext)\n+\t-rm -f c/*$(objext)\n+\t-rm -f c/*$(coverageexts)\n+c.clean:\n+c.distclean:\n+\t-rm -f c/config.status c/Makefile\n+c.maintainer-clean:\n+#\f\n+# Stage hooks:\n+# The main makefile has already created stage?/cp.\n+\n+c.stage1: stage1-start\n+\t-mv c/*$(objext) stage1/c\n+c.stage2: stage2-start\n+\t-mv c/*$(objext) stage2/c\n+c.stage3: stage3-start\n+\t-mv c/*$(objext) stage3/c\n+c.stage4: stage4-start\n+\t-mv c/*$(objext) stage4/c\n+c.stageprofile: stageprofile-start\n+\t-mv c/*$(objext) stageprofile/c\n+c.stagefeedback: stagefeedback-start\n+\t-mv c/*$(objext) stagefeedback/c\n+\n+#\f\n+# .o: .h dependencies.\n+# C language specific files.\n+C_TREE_H = c/c-tree.h $(C_COMMON_H) $(DIAGNOSTIC_H)\n+c/c-aux-info.o : c/c-aux-info.c  $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n+\t$(C_TREE_H) $(TREE_H) $(FLAGS_H)\n+\n+c/c-convert.o : c/c-convert.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n+\t$(TREE_H) $(C_TREE_H) $(FLAGS_H) $(C_COMMON_H) convert.h \\\n+\tlanghooks.h $(TARGET_H)\n+\n+c/c-decl.o : c/c-decl.c c/c-lang.h $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n+\t$(TREE_H) $(C_TREE_H) $(GGC_H) $(TARGET_H) $(FLAGS_H) $(FUNCTION_H) \\\n+\toutput.h debug.h toplev.h intl.h $(TM_P_H) $(TREE_INLINE_H) \\\n+\t$(TIMEVAR_H) $(OPTS_H) $(C_PRAGMA_H) gt-c-c-decl.h $(CGRAPH_H) \\\n+\t$(HASHTAB_H) $(LANGHOOKS_DEF_H) \\\n+\t$(TREE_DUMP_H) $(C_COMMON_H) $(CPPLIB_H) $(DIAGNOSTIC_CORE_H) \\\n+\t$(INPUT_H) langhooks.h pointer-set.h tree-iterator.h \\\n+\t$(PLUGIN_H) c-family/c-ada-spec.h c-family/c-objc.h\n+\n+c/c-errors.o: c/c-errors.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n+\t$(C_TREE_H) $(FLAGS_H) $(DIAGNOSTIC_H) $(TM_P_H)\n+\n+c/c-lang.o : c/c-lang.c c/c-objc-common.h \\\n+\t$(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n+\t$(C_TREE_H) $(DIAGNOSTIC_CORE_H) \\\n+\tlanghooks.h $(LANGHOOKS_DEF_H) $(C_COMMON_H) gtype-c.h \\\n+\t$(C_PRAGMA_H) $(TREE_INLINE_H)\n+\n+c/c-objc-common.o : c/c-objc-common.c c/c-objc-common.h \\\n+\t$(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n+\t$(TREE_H) $(C_TREE_H) $(FLAGS_H) $(DIAGNOSTIC_H) \\\n+\tlanghooks.h $(GGC_H) $(C_PRETTY_PRINT_H) intl.h \\\n+\t$(TREE_PRETTY_PRINT_H)\n+\n+c/c-parser.o : c/c-parser.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n+\t$(TM_H) $(TREE_H) $(C_TREE_H) $(C_COMMON_H) $(C_PRAGMA_H) $(CPPLIB_H) \\\n+\t$(GGC_H) $(TIMEVAR_H) $(INPUT_H) $(FLAGS_H) \\\n+\tgt-c-c-parser.h langhooks.h \\\n+\t$(VEC_H) $(TARGET_H) $(CGRAPH_H) $(PLUGIN_H) \\\n+\tc-family/c-objc.h\n+\n+c/c-typeck.o : c/c-typeck.c c/c-lang.h $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n+\t$(TREE_H) $(C_TREE_H) $(TARGET_H) $(FLAGS_H) intl.h \\\n+\tlanghooks.h tree-iterator.h $(BITMAP_H) $(GIMPLE_H) \\\n+\tc-family/c-objc.h\n+"}, {"sha": "694f9c1f59ed77ade83d9d43baf940420eccaf3c", "filename": "gcc/c/c-aux-info.c", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a10d0a628008949adf9e2baee507f8a0985b3f/gcc%2Fc%2Fc-aux-info.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a10d0a628008949adf9e2baee507f8a0985b3f/gcc%2Fc%2Fc-aux-info.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-aux-info.c?ref=d4a10d0a628008949adf9e2baee507f8a0985b3f", "previous_filename": "gcc/c-aux-info.c"}, {"sha": "f4583c549c952e348051a743164ec77ecfa9150b", "filename": "gcc/c/c-convert.c", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a10d0a628008949adf9e2baee507f8a0985b3f/gcc%2Fc%2Fc-convert.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a10d0a628008949adf9e2baee507f8a0985b3f/gcc%2Fc%2Fc-convert.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-convert.c?ref=d4a10d0a628008949adf9e2baee507f8a0985b3f", "previous_filename": "gcc/c-convert.c"}, {"sha": "711b2dd175036bd9dc072f80ddaf482bebb30422", "filename": "gcc/c/c-decl.c", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a10d0a628008949adf9e2baee507f8a0985b3f/gcc%2Fc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a10d0a628008949adf9e2baee507f8a0985b3f/gcc%2Fc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-decl.c?ref=d4a10d0a628008949adf9e2baee507f8a0985b3f", "patch": "@@ -10152,4 +10152,4 @@ c_register_addr_space (const char *word, addr_space_t as)\n   ridpointers [rid] = id;\n }\n \n-#include \"gt-c-decl.h\"\n+#include \"gt-c-c-decl.h\"", "previous_filename": "gcc/c-decl.c"}, {"sha": "bee534c44fe5c6cd3d19d311383f6e452cfa1c57", "filename": "gcc/c/c-errors.c", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a10d0a628008949adf9e2baee507f8a0985b3f/gcc%2Fc%2Fc-errors.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a10d0a628008949adf9e2baee507f8a0985b3f/gcc%2Fc%2Fc-errors.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-errors.c?ref=d4a10d0a628008949adf9e2baee507f8a0985b3f", "previous_filename": "gcc/c-errors.c"}, {"sha": "ae1b08139e76ca661038794da75415a9a28a9f95", "filename": "gcc/c/c-lang.c", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a10d0a628008949adf9e2baee507f8a0985b3f/gcc%2Fc%2Fc-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a10d0a628008949adf9e2baee507f8a0985b3f/gcc%2Fc%2Fc-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-lang.c?ref=d4a10d0a628008949adf9e2baee507f8a0985b3f", "previous_filename": "gcc/c-lang.c"}, {"sha": "256a269fe0b801f678627d6d0dffea9629767ace", "filename": "gcc/c/c-lang.h", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a10d0a628008949adf9e2baee507f8a0985b3f/gcc%2Fc%2Fc-lang.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a10d0a628008949adf9e2baee507f8a0985b3f/gcc%2Fc%2Fc-lang.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-lang.h?ref=d4a10d0a628008949adf9e2baee507f8a0985b3f", "previous_filename": "gcc/c-lang.h"}, {"sha": "9351cd5a53996c044b703b65a79b8f029be32be9", "filename": "gcc/c/c-objc-common.c", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a10d0a628008949adf9e2baee507f8a0985b3f/gcc%2Fc%2Fc-objc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a10d0a628008949adf9e2baee507f8a0985b3f/gcc%2Fc%2Fc-objc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-objc-common.c?ref=d4a10d0a628008949adf9e2baee507f8a0985b3f", "previous_filename": "gcc/c-objc-common.c"}, {"sha": "dbbd50a729de296a32057e69601120c029134cce", "filename": "gcc/c/c-objc-common.h", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a10d0a628008949adf9e2baee507f8a0985b3f/gcc%2Fc%2Fc-objc-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a10d0a628008949adf9e2baee507f8a0985b3f/gcc%2Fc%2Fc-objc-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-objc-common.h?ref=d4a10d0a628008949adf9e2baee507f8a0985b3f", "previous_filename": "gcc/c-objc-common.h"}, {"sha": "2237749e4a3c8aae3c88ead20453d72e91edb7e8", "filename": "gcc/c/c-parser.c", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a10d0a628008949adf9e2baee507f8a0985b3f/gcc%2Fc%2Fc-parser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a10d0a628008949adf9e2baee507f8a0985b3f/gcc%2Fc%2Fc-parser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-parser.c?ref=d4a10d0a628008949adf9e2baee507f8a0985b3f", "patch": "@@ -10837,4 +10837,4 @@ c_parse_file (void)\n   the_parser = NULL;\n }\n \n-#include \"gt-c-parser.h\"\n+#include \"gt-c-c-parser.h\"", "previous_filename": "gcc/c-parser.c"}, {"sha": "145df357af938fae81456276d1863d40b545a420", "filename": "gcc/c/c-tree.h", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a10d0a628008949adf9e2baee507f8a0985b3f/gcc%2Fc%2Fc-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a10d0a628008949adf9e2baee507f8a0985b3f/gcc%2Fc%2Fc-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-tree.h?ref=d4a10d0a628008949adf9e2baee507f8a0985b3f", "previous_filename": "gcc/c-tree.h"}, {"sha": "c2f713eb02d8b5f78c64929e3043f2afb1595e92", "filename": "gcc/c/c-typeck.c", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a10d0a628008949adf9e2baee507f8a0985b3f/gcc%2Fc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a10d0a628008949adf9e2baee507f8a0985b3f/gcc%2Fc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-typeck.c?ref=d4a10d0a628008949adf9e2baee507f8a0985b3f", "previous_filename": "gcc/c-typeck.c"}, {"sha": "46c7e477471f3329a00d2f2737804585d5163479", "filename": "gcc/c/config-lang.in", "status": "renamed", "additions": 14, "deletions": 6, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a10d0a628008949adf9e2baee507f8a0985b3f/gcc%2Fc%2Fconfig-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a10d0a628008949adf9e2baee507f8a0985b3f/gcc%2Fc%2Fconfig-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fconfig-lang.in?ref=d4a10d0a628008949adf9e2baee507f8a0985b3f", "patch": "@@ -1,5 +1,6 @@\n # Top level configure fragment for GNU C - C language.\n-# Copyright (C) 1994, 1995, 1997, 1998, 2000, 2001, 2002, 2005, 2007, 2010\n+# Copyright (C) 1994, 1995, 1997, 1998, 2000, 2001, 2002, 2005, 2007,\n+# 2010, 2012\n # Free Software Foundation, Inc.\n \n #This file is part of GCC.\n@@ -18,9 +19,16 @@\n #along with GCC; see the file COPYING3.  If not see\n #<http://www.gnu.org/licenses/>.\n \n-# This file c-config-lang.c is a special pseudo config-lang.in file\n-# for the language C. It has limited use, specifically to record the\n-# files used by C that have garbage collection GTY macros in them\n-# which therefore need to be scanned by gengtype.c.\n+# Configure looks for the existence of this file to auto-config each language.\n+# We define several parameters used by configure:\n+#\n+# language\t- name of language as it would appear in $(LANGUAGES)\n+# compilers\t- value to add to $(COMPILERS)\n \n-gtfiles=\"\\$(srcdir)/c-lang.c \\$(srcdir)/c-tree.h \\$(srcdir)/c-decl.c \\$(srcdir)/c-family/c-common.c \\$(srcdir)/c-family/c-common.h \\$(srcdir)/c-family/c-objc.h \\$(srcdir)/c-family/c-cppbuiltin.c \\$(srcdir)/c-family/c-pragma.h \\$(srcdir)/c-family/c-pragma.c \\$(srcdir)/c-objc-common.c \\$(srcdir)/c-parser.c \\$(srcdir)/c-lang.h\"\n+language=\"c\"\n+\n+compilers=\"cc1\\$(exeext)\"\n+\n+target_libs=\n+\n+gtfiles=\"\\$(srcdir)/c/c-lang.c \\$(srcdir)/c/c-tree.h \\$(srcdir)/c/c-decl.c \\$(srcdir)/c-family/c-common.c \\$(srcdir)/c-family/c-common.h \\$(srcdir)/c-family/c-objc.h \\$(srcdir)/c-family/c-cppbuiltin.c \\$(srcdir)/c-family/c-pragma.h \\$(srcdir)/c-family/c-pragma.c \\$(srcdir)/c/c-objc-common.c \\$(srcdir)/c/c-parser.c \\$(srcdir)/c/c-lang.h\"", "previous_filename": "gcc/c-config-lang.in"}, {"sha": "e1613594fc42f91cf6a47f17fd48399ad4d31c3f", "filename": "gcc/c/gccspec.c", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a10d0a628008949adf9e2baee507f8a0985b3f/gcc%2Fc%2Fgccspec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a10d0a628008949adf9e2baee507f8a0985b3f/gcc%2Fc%2Fgccspec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fgccspec.c?ref=d4a10d0a628008949adf9e2baee507f8a0985b3f", "previous_filename": "gcc/gccspec.c"}, {"sha": "733932336a9fb6cff6b0647e82b7aee937884f91", "filename": "gcc/config/vms/vms-c.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a10d0a628008949adf9e2baee507f8a0985b3f/gcc%2Fconfig%2Fvms%2Fvms-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a10d0a628008949adf9e2baee507f8a0985b3f/gcc%2Fconfig%2Fvms%2Fvms-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvms%2Fvms-c.c?ref=d4a10d0a628008949adf9e2baee507f8a0985b3f", "patch": "@@ -27,7 +27,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"c-family/c-pragma.h\"\n #include \"c-family/c-common.h\"\n-#include \"c-tree.h\"\n+#include \"c/c-tree.h\"\n #include \"toplev.h\"\n #include \"ggc.h\"\n #include \"tm_p.h\""}, {"sha": "0bdbece6ae865b4c79faddbd7418b9000c7b6214", "filename": "gcc/configure", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a10d0a628008949adf9e2baee507f8a0985b3f/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a10d0a628008949adf9e2baee507f8a0985b3f/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=d4a10d0a628008949adf9e2baee507f8a0985b3f", "patch": "@@ -26964,11 +26964,6 @@ $as_echo \"#define ENABLE_LTO 1\" >>confdefs.h\n \tesac\n done\n \n-# Pick up gtfiles for c\n-gtfiles=\n-. ${srcdir}/c-config-lang.in\n-all_gtfiles=\"$all_gtfiles [c] $gtfiles\"\n-\n check_languages=\n for language in $all_selected_languages\n do"}, {"sha": "7891fcc39dabca2a41c768cd2639d2586f7423cd", "filename": "gcc/configure.ac", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a10d0a628008949adf9e2baee507f8a0985b3f/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a10d0a628008949adf9e2baee507f8a0985b3f/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=d4a10d0a628008949adf9e2baee507f8a0985b3f", "patch": "@@ -4838,11 +4838,6 @@ changequote([,])dnl\n \tesac\n done\n \n-# Pick up gtfiles for c\n-gtfiles=\n-. ${srcdir}/c-config-lang.in\n-all_gtfiles=\"$all_gtfiles [[c]] $gtfiles\"\n-\n check_languages=\n for language in $all_selected_languages\n do"}, {"sha": "9b5b7c163d60a50501ee5eb13dfb798006fd7fdc", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a10d0a628008949adf9e2baee507f8a0985b3f/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a10d0a628008949adf9e2baee507f8a0985b3f/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=d4a10d0a628008949adf9e2baee507f8a0985b3f", "patch": "@@ -1,3 +1,7 @@\n+2012-06-29  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* Make-lang.in: Remove tree-mudflap.o from CXX_AND_OBJCXX_OBJS.\n+\n 2012-06-27  Jason Merrill  <jason@redhat.com>\n \n \t* parser.c (cp_parser_check_for_invalid_template_id): tag_type parm."}, {"sha": "f09ff36a743a3044b37d675d62fd27338846303c", "filename": "gcc/cp/Make-lang.in", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a10d0a628008949adf9e2baee507f8a0985b3f/gcc%2Fcp%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a10d0a628008949adf9e2baee507f8a0985b3f/gcc%2Fcp%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FMake-lang.in?ref=d4a10d0a628008949adf9e2baee507f8a0985b3f", "patch": "@@ -82,7 +82,7 @@ CXX_AND_OBJCXX_OBJS = cp/call.o cp/decl.o cp/expr.o cp/pt.o cp/typeck2.o \\\n  cp/typeck.o cp/cvt.o cp/except.o cp/friend.o cp/init.o cp/method.o \\\n  cp/search.o cp/semantics.o cp/tree.o cp/repo.o cp/dump.o cp/optimize.o \\\n  cp/mangle.o cp/cp-objcp-common.o cp/name-lookup.o cp/cxx-pretty-print.o \\\n- cp/cp-gimplify.o tree-mudflap.o $(CXX_C_OBJS)\n+ cp/cp-gimplify.o $(CXX_C_OBJS)\n \n # Language-specific object files for C++.\n CXX_OBJS = cp/cp-lang.o c-family/stub-objc.o $(CXX_AND_OBJCXX_OBJS)\n@@ -237,6 +237,7 @@ c++.mostlyclean:\n c++.clean:\n c++.distclean:\n \t-rm -f cp/config.status cp/Makefile\n+\t-rm -f cxxmain.c\n c++.maintainer-clean:\n #\f\n # Stage hooks:"}, {"sha": "cff3ffdfc5dc2dc8378df785453a786cf6ea5d92", "filename": "gcc/doc/gty.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a10d0a628008949adf9e2baee507f8a0985b3f/gcc%2Fdoc%2Fgty.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a10d0a628008949adf9e2baee507f8a0985b3f/gcc%2Fdoc%2Fgty.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fgty.texi?ref=d4a10d0a628008949adf9e2baee507f8a0985b3f", "patch": "@@ -491,7 +491,7 @@ For files shared by all front ends, add the filename to the\n @item\n For files that are part of one front end, add the filename to the\n @code{gtfiles} variable defined in the appropriate\n-@file{config-lang.in}.  For C, the file is @file{c-config-lang.in}.\n+@file{config-lang.in}.\n Headers should appear before non-headers in this list.\n \n @item"}, {"sha": "84fcc23e55a6eb480f28cd5e4672d661d2a6d336", "filename": "gcc/doc/sourcebuild.texi", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a10d0a628008949adf9e2baee507f8a0985b3f/gcc%2Fdoc%2Fsourcebuild.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a10d0a628008949adf9e2baee507f8a0985b3f/gcc%2Fdoc%2Fsourcebuild.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fsourcebuild.texi?ref=d4a10d0a628008949adf9e2baee507f8a0985b3f", "patch": "@@ -168,10 +168,11 @@ The @file{gcc} directory contains the following subdirectories:\n @item @var{language}\n Subdirectories for various languages.  Directories containing a file\n @file{config-lang.in} are language subdirectories.  The contents of\n-the subdirectories @file{cp} (for C++), @file{lto} (for LTO),\n-@file{objc} (for Objective-C) and @file{objcp} (for Objective-C++) are\n-documented in this manual (@pxref{Passes, , Passes and Files of the\n-Compiler}); those for other languages are not.  @xref{Front End, ,\n+the subdirectories @file{c} (for C), @file{cp} (for C++),\n+@file{objc} (for Objective-C), @file{objcp} (for Objective-C++),\n+and @file{lto} (for LTO) are documented in this\n+manual (@pxref{Passes, , Passes and Files of the Compiler});\n+those for other languages are not.  @xref{Front End, ,\n Anatomy of a Language Front End}, for details of the files in these\n directories.\n \n@@ -483,7 +484,7 @@ why isn't this part of this manual or of the GCC Coding Conventions?\n @end table\n \n FIXME: document such files in subdirectories, at least @file{config},\n-@file{cp}, @file{objc}, @file{testsuite}.\n+@file{c}, @file{cp}, @file{objc}, @file{testsuite}.\n \n @node Front End\n @subsection Anatomy of a Language Front End\n@@ -615,10 +616,9 @@ codes.\n @node Front End Config\n @subsubsection The Front End @file{config-lang.in} File\n \n-Each language subdirectory contains a @file{config-lang.in} file.  In\n-addition the main directory contains @file{c-config-lang.in}, which\n-contains limited information for the C language.  This file is a shell\n-script that may define some variables describing the language:\n+Each language subdirectory contains a @file{config-lang.in} file.\n+This file is a shell script that may define some variables describing\n+the language:\n \n @table @code\n @item language"}, {"sha": "96c75b3ebb255661a023ca1d975cbd05a238e69b", "filename": "gcc/gengtype.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a10d0a628008949adf9e2baee507f8a0985b3f/gcc%2Fgengtype.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a10d0a628008949adf9e2baee507f8a0985b3f/gcc%2Fgengtype.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgengtype.c?ref=d4a10d0a628008949adf9e2baee507f8a0985b3f", "patch": "@@ -1786,12 +1786,12 @@ struct file_rule_st files_rules[] = {\n     REG_EXTENDED, NULL_REGEX,\n     \"gt-c-family-$3.h\", \"c-family/$3.h\", NULL_FRULACT},\n \n-  /* Both c-lang.h & c-tree.h gives gt-c-decl.h for c-decl.c !  */\n-  { DIR_PREFIX_REGEX \"c-lang\\\\.h$\",\n-    REG_EXTENDED, NULL_REGEX, \"gt-c-decl.h\", \"c-decl.c\", NULL_FRULACT},\n+  /* Both c-lang.h & c-tree.h gives gt-c-c-decl.h for c-decl.c !  */\n+  { DIR_PREFIX_REGEX \"c/c-lang\\\\.h$\",\n+    REG_EXTENDED, NULL_REGEX, \"gt-c-c-decl.h\", \"c/c-decl.c\", NULL_FRULACT},\n \n-  { DIR_PREFIX_REGEX \"c-tree\\\\.h$\",\n-    REG_EXTENDED, NULL_REGEX, \"gt-c-decl.h\", \"c-decl.c\", NULL_FRULACT},\n+  { DIR_PREFIX_REGEX \"c/c-tree\\\\.h$\",\n+    REG_EXTENDED, NULL_REGEX, \"gt-c-c-decl.h\", \"c/c-decl.c\", NULL_FRULACT},\n \n   /* cp/cp-tree.h gives gt-cp-tree.h for cp/tree.c !  */\n   { DIR_PREFIX_REGEX \"cp/cp-tree\\\\.h$\","}, {"sha": "e8ef7bb347d8646112b2e3b63c4d90535e24777d", "filename": "gcc/objc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a10d0a628008949adf9e2baee507f8a0985b3f/gcc%2Fobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a10d0a628008949adf9e2baee507f8a0985b3f/gcc%2Fobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FChangeLog?ref=d4a10d0a628008949adf9e2baee507f8a0985b3f", "patch": "@@ -1,3 +1,16 @@\n+2012-06-29  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* Make-ang.in: Adjust for move of C front-end files.\n+\t* config-lang.in: Likewise.\n+\t* objc-encoding.c: Look for cp-tree.h in cp/, and for c-tree.h\n+\tand c-lang.h in c/.\n+\t* objc-runtime-shared-support.c: Likewise.\n+\t* objc-next-runtime-abi-01.c: Likewise.\n+\t* objc-next-runtime-abi-02.c: Likewise.\n+\t* objc-gnu-runtime-abi-01.c: Likewise.\n+\t* objc-act.c: Likewise.\n+\t* objc-lang.c: Likewise.\n+\n 2012-06-19  Steven Bosscher  <steven@gcc.gnu.org>\n \n \t* objc-next-runtime-abi-01.c: Do not include tm.h and output.h."}, {"sha": "05ddec639ff21fcd1a36d235e9c978879525e1fa", "filename": "gcc/objc/Make-lang.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a10d0a628008949adf9e2baee507f8a0985b3f/gcc%2Fobjc%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a10d0a628008949adf9e2baee507f8a0985b3f/gcc%2Fobjc%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FMake-lang.in?ref=d4a10d0a628008949adf9e2baee507f8a0985b3f", "patch": "@@ -44,7 +44,7 @@ objc: cc1obj$(exeext)\n .PHONY: objc\n \n START_HDRS = $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) $(C_TREE_H) \\\n-  c-lang.h langhooks.h c-family/c-objc.h objc/objc-act.h\n+  c/c-lang.h langhooks.h c-family/c-objc.h objc/objc-act.h\n \n # Use maximal warnings for this front end.\n objc-warn = $(STRICT_WARN)\n@@ -83,7 +83,7 @@ objc/objc-lang.o : objc/objc-lang.c \\\n    $(START_HDRS) \\\n    $(GGC_H) \\\n    $(LANGHOOKS_DEF_H) $(C_COMMON_H) gtype-objc.h \\\n-   c-objc-common.h\n+   c/c-objc-common.h\n \n objc/objc-runtime-shared-support.o : objc/objc-runtime-shared-support.c \\\n    gt-objc-objc-runtime-shared-support.h \\"}, {"sha": "9a4ede653182e1ea74da2033088db0707904bdab", "filename": "gcc/objc/config-lang.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a10d0a628008949adf9e2baee507f8a0985b3f/gcc%2Fobjc%2Fconfig-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a10d0a628008949adf9e2baee507f8a0985b3f/gcc%2Fobjc%2Fconfig-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fconfig-lang.in?ref=d4a10d0a628008949adf9e2baee507f8a0985b3f", "patch": "@@ -36,4 +36,4 @@ lang_requires=\"c\"\n # Order is important.  If you change this list, make sure you test\n # building without C++ as well; that is, remove the gcc/cp directory,\n # and build with --enable-languages=c,objc.\n-gtfiles=\"\\$(srcdir)/objc/objc-map.h \\$(srcdir)/c-family/c-objc.h \\$(srcdir)/objc/objc-act.h \\$(srcdir)/objc/objc-act.c \\$(srcdir)/objc/objc-runtime-shared-support.c \\$(srcdir)/objc/objc-gnu-runtime-abi-01.c \\$(srcdir)/objc/objc-next-runtime-abi-01.c \\$(srcdir)/objc/objc-next-runtime-abi-02.c \\$(srcdir)/c-parser.c \\$(srcdir)/c-tree.h \\$(srcdir)/c-decl.c \\$(srcdir)/c-lang.h \\$(srcdir)/c-objc-common.c \\$(srcdir)/c-family/c-common.c \\$(srcdir)/c-family/c-common.h \\$(srcdir)/c-family/c-cppbuiltin.c \\$(srcdir)/c-family/c-pragma.h \\$(srcdir)/c-family/c-pragma.c\"\n+gtfiles=\"\\$(srcdir)/objc/objc-map.h \\$(srcdir)/c-family/c-objc.h \\$(srcdir)/objc/objc-act.h \\$(srcdir)/objc/objc-act.c \\$(srcdir)/objc/objc-runtime-shared-support.c \\$(srcdir)/objc/objc-gnu-runtime-abi-01.c \\$(srcdir)/objc/objc-next-runtime-abi-01.c \\$(srcdir)/objc/objc-next-runtime-abi-02.c \\$(srcdir)/c/c-parser.c \\$(srcdir)/c/c-tree.h \\$(srcdir)/c/c-decl.c \\$(srcdir)/c/c-lang.h \\$(srcdir)/c/c-objc-common.c \\$(srcdir)/c-family/c-common.c \\$(srcdir)/c-family/c-common.h \\$(srcdir)/c-family/c-cppbuiltin.c \\$(srcdir)/c-family/c-pragma.h \\$(srcdir)/c-family/c-pragma.c\""}, {"sha": "5c924bf736cfa5435e55d9674060eae332c951ce", "filename": "gcc/objc/objc-act.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a10d0a628008949adf9e2baee507f8a0985b3f/gcc%2Fobjc%2Fobjc-act.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a10d0a628008949adf9e2baee507f8a0985b3f/gcc%2Fobjc%2Fobjc-act.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.c?ref=d4a10d0a628008949adf9e2baee507f8a0985b3f", "patch": "@@ -27,10 +27,10 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n \n #ifdef OBJCPLUS\n-#include \"cp-tree.h\"\n+#include \"cp/cp-tree.h\"\n #else\n-#include \"c-tree.h\"\n-#include \"c-lang.h\"\n+#include \"c/c-tree.h\"\n+#include \"c/c-lang.h\"\n #endif\n \n #include \"c-family/c-common.h\""}, {"sha": "8d4a9c758b76ad24940158f312ad8c04b40c5d60", "filename": "gcc/objc/objc-encoding.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a10d0a628008949adf9e2baee507f8a0985b3f/gcc%2Fobjc%2Fobjc-encoding.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a10d0a628008949adf9e2baee507f8a0985b3f/gcc%2Fobjc%2Fobjc-encoding.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-encoding.c?ref=d4a10d0a628008949adf9e2baee507f8a0985b3f", "patch": "@@ -25,10 +25,10 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n \n #ifdef OBJCPLUS\n-#include \"cp-tree.h\"\n+#include \"cp/cp-tree.h\"\n #else\n-#include \"c-tree.h\"\n-#include \"c-lang.h\"\n+#include \"c/c-tree.h\"\n+#include \"c/c-lang.h\"\n #endif\n \n #include \"c-family/c-common.h\""}, {"sha": "6bdffac10e764ec1894a0073d3fdd9be3c9373f0", "filename": "gcc/objc/objc-gnu-runtime-abi-01.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a10d0a628008949adf9e2baee507f8a0985b3f/gcc%2Fobjc%2Fobjc-gnu-runtime-abi-01.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a10d0a628008949adf9e2baee507f8a0985b3f/gcc%2Fobjc%2Fobjc-gnu-runtime-abi-01.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-gnu-runtime-abi-01.c?ref=d4a10d0a628008949adf9e2baee507f8a0985b3f", "patch": "@@ -24,10 +24,10 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n \n #ifdef OBJCPLUS\n-#include \"cp-tree.h\"\n+#include \"cp/cp-tree.h\"\n #else\n-#include \"c-tree.h\"\n-#include \"c-lang.h\"\n+#include \"c/c-tree.h\"\n+#include \"c/c-lang.h\"\n #endif\n \n #include \"langhooks.h\""}, {"sha": "9aa9bb3731cf067a91943132d168aab7df5c652b", "filename": "gcc/objc/objc-lang.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a10d0a628008949adf9e2baee507f8a0985b3f/gcc%2Fobjc%2Fobjc-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a10d0a628008949adf9e2baee507f8a0985b3f/gcc%2Fobjc%2Fobjc-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-lang.c?ref=d4a10d0a628008949adf9e2baee507f8a0985b3f", "patch": "@@ -25,15 +25,15 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n-#include \"c-tree.h\"\n+#include \"c/c-tree.h\"\n #include \"c-family/c-common.h\"\n #include \"c-family/c-objc.h\"\n #include \"ggc.h\"\n #include \"objc-act.h\"\n #include \"langhooks.h\"\n #include \"langhooks-def.h\"\n-#include \"c-objc-common.h\"\n-#include \"c-lang.h\"\n+#include \"c/c-objc-common.h\"\n+#include \"c/c-lang.h\"\n \n enum c_language_kind c_language = clk_objc;\n "}, {"sha": "cf245911b9018fb4e4dd75cea4341cefc345b9e5", "filename": "gcc/objc/objc-next-runtime-abi-01.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a10d0a628008949adf9e2baee507f8a0985b3f/gcc%2Fobjc%2Fobjc-next-runtime-abi-01.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a10d0a628008949adf9e2baee507f8a0985b3f/gcc%2Fobjc%2Fobjc-next-runtime-abi-01.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-next-runtime-abi-01.c?ref=d4a10d0a628008949adf9e2baee507f8a0985b3f", "patch": "@@ -29,10 +29,10 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n \n #ifdef OBJCPLUS\n-#include \"cp-tree.h\"\n+#include \"cp/cp-tree.h\"\n #else\n-#include \"c-tree.h\"\n-#include \"c-lang.h\"\n+#include \"c/c-tree.h\"\n+#include \"c/c-lang.h\"\n #endif\n #include \"langhooks.h\"\n #include \"c-family/c-objc.h\""}, {"sha": "4f47a5790876ae65e436a62a80a0fbe964d7aa3e", "filename": "gcc/objc/objc-next-runtime-abi-02.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a10d0a628008949adf9e2baee507f8a0985b3f/gcc%2Fobjc%2Fobjc-next-runtime-abi-02.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a10d0a628008949adf9e2baee507f8a0985b3f/gcc%2Fobjc%2Fobjc-next-runtime-abi-02.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-next-runtime-abi-02.c?ref=d4a10d0a628008949adf9e2baee507f8a0985b3f", "patch": "@@ -32,10 +32,10 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n \n #ifdef OBJCPLUS\n-#include \"cp-tree.h\"\n+#include \"cp/cp-tree.h\"\n #else\n-#include \"c-tree.h\"\n-#include \"c-lang.h\"\n+#include \"c/c-tree.h\"\n+#include \"c/c-lang.h\"\n #endif\n #include \"langhooks.h\"\n #include \"c-family/c-objc.h\""}, {"sha": "0b6f93716b82362d92a62dea88f38c09e6ea7b1c", "filename": "gcc/objc/objc-runtime-shared-support.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a10d0a628008949adf9e2baee507f8a0985b3f/gcc%2Fobjc%2Fobjc-runtime-shared-support.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a10d0a628008949adf9e2baee507f8a0985b3f/gcc%2Fobjc%2Fobjc-runtime-shared-support.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-runtime-shared-support.c?ref=d4a10d0a628008949adf9e2baee507f8a0985b3f", "patch": "@@ -25,10 +25,10 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n \n #ifdef OBJCPLUS\n-#include \"cp-tree.h\"\n+#include \"cp/cp-tree.h\"\n #else\n-#include \"c-tree.h\"\n-#include \"c-lang.h\"\n+#include \"c/c-tree.h\"\n+#include \"c/c-lang.h\"\n #endif\n #include \"langhooks.h\"\n #include \"c-family/c-objc.h\""}]}