{"sha": "92dee628c1b1e2819e6869feceb0943e25b30320", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTJkZWU2MjhjMWIxZTI4MTllNjg2OWZlY2ViMDk0M2UyNWIzMDMyMA==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-10-20T22:19:55Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-10-20T22:19:55Z"}, "message": "(ASM_DECLARE_OBJECT_NAME): Set size_directive_output.\n\n(ASM_FINISH_DECLARE_OBJECT): Defined.\n\nFrom-SVN: r5839", "tree": {"sha": "f618bb8c9edeadb45321531a95cce09ee4babe26", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f618bb8c9edeadb45321531a95cce09ee4babe26"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/92dee628c1b1e2819e6869feceb0943e25b30320", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92dee628c1b1e2819e6869feceb0943e25b30320", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92dee628c1b1e2819e6869feceb0943e25b30320", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92dee628c1b1e2819e6869feceb0943e25b30320/comments", "author": null, "committer": null, "parents": [{"sha": "77a2f6986f6fac2c8af126ea2a6971576f9a2b1c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77a2f6986f6fac2c8af126ea2a6971576f9a2b1c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77a2f6986f6fac2c8af126ea2a6971576f9a2b1c"}], "stats": {"total": 114, "additions": 79, "deletions": 35}, "files": [{"sha": "241a173de34b5ca85060336561c5237b4d813e1d", "filename": "gcc/config/i386/osfrose.h", "status": "modified", "additions": 41, "deletions": 19, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92dee628c1b1e2819e6869feceb0943e25b30320/gcc%2Fconfig%2Fi386%2Fosfrose.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92dee628c1b1e2819e6869feceb0943e25b30320/gcc%2Fconfig%2Fi386%2Fosfrose.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fosfrose.h?ref=92dee628c1b1e2819e6869feceb0943e25b30320", "patch": "@@ -718,28 +718,50 @@ while (0)\n    in the usual manner as a label (by means of `ASM_OUTPUT_LABEL').  */\n \n #undef\tASM_DECLARE_OBJECT_NAME\n-#define ASM_DECLARE_OBJECT_NAME(STREAM, NAME, DECL)\t\t\t\\\n-do\t\t\t\t\t\t\t\t\t\\\n- {\t\t\t\t\t\t\t\t\t\\\n-   ASM_OUTPUT_LABEL(STREAM,NAME);                                       \\\n-   HALF_PIC_DECLARE (NAME);\t\t\t\t\t\t\\\n-   if (TARGET_ELF)\t\t\t\t\t\t\t\\\n-     {\t\t\t\t\t\t\t\t\t\\\n-       fprintf (STREAM, \"\\t%s\\t \", TYPE_ASM_OP);\t\t\t\\\n-       assemble_name (STREAM, NAME);\t\t\t\t\t\\\n-       putc (',', STREAM);\t\t\t\t\t\t\\\n-       fprintf (STREAM, TYPE_OPERAND_FMT, \"object\");\t\t\t\\\n-       putc ('\\n', STREAM);\t\t\t\t\t\t\\\n-       if (!flag_inhibit_size_directive && DECL_SIZE (DECL))\t\t\\\n-\t {\t\t\t\t\t\t\t\t\\\n-\t   fprintf (STREAM, \"\\t%s\\t \", SIZE_ASM_OP);\t\t\t\\\n-\t   assemble_name (STREAM, NAME);\t\t\t\t\\\n+#define ASM_DECLARE_OBJECT_NAME(STREAM, NAME, DECL)\t\t\t     \\\n+do\t\t\t\t\t\t\t\t\t     \\\n+ {\t\t\t\t\t\t\t\t\t     \\\n+   ASM_OUTPUT_LABEL(STREAM,NAME);\t\t\t\t\t     \\\n+   HALF_PIC_DECLARE (NAME);\t\t\t\t\t\t     \\\n+   if (TARGET_ELF)\t\t\t\t\t\t\t     \\\n+     {\t\t\t\t\t\t\t\t\t     \\\n+       fprintf (STREAM, \"\\t%s\\t \", TYPE_ASM_OP);\t\t\t     \\\n+       assemble_name (STREAM, NAME);\t\t\t\t\t     \\\n+       putc (',', STREAM);\t\t\t\t\t\t     \\\n+       fprintf (STREAM, TYPE_OPERAND_FMT, \"object\");\t\t\t     \\\n+       putc ('\\n', STREAM);\t\t\t\t\t\t     \\\n+       size_directive_output = 0;\t\t\t\t\t     \\\n+       if (!flag_inhibit_size_directive && DECL_SIZE (DECL))\t\t     \\\n+\t {\t\t\t\t\t\t\t\t     \\\n+           size_directive_output = 1;\t\t\t\t\t     \\\n+\t   fprintf (STREAM, \"\\t%s\\t \", SIZE_ASM_OP);\t\t\t     \\\n+\t   assemble_name (STREAM, NAME);\t\t\t\t     \\\n \t   fprintf (STREAM, \",%d\\n\",  int_size_in_bytes (TREE_TYPE (DECL))); \\\n-\t }\t\t\t\t\t\t\t\t\\\n-     }\t\t\t\t\t\t\t\t\t\\\n- }\t\t\t\t\t\t\t\t\t\\\n+\t }\t\t\t\t\t\t\t\t     \\\n+     }\t\t\t\t\t\t\t\t\t     \\\n+ }\t\t\t\t\t\t\t\t\t     \\\n while (0)\n \n+/* Output the size directive for a decl in rest_of_decl_compilation\n+   in the case where we did not do so before the initializer.\n+   Once we find the error_mark_node, we know that the value of\n+   size_directive_output was set\n+   by ASM_DECLARE_OBJECT_NAME when it was run for the same decl.  */\n+\n+#define ASM_FINISH_DECLARE_OBJECT(FILE, DECL, TOP_LEVEL, AT_END)\t \\\n+do {\t\t\t\t\t\t\t\t\t \\\n+     char *name = XSTR (XEXP (DECL_RTL (DECL), 0), 0);\t\t\t \\\n+     if (!flag_inhibit_size_directive && DECL_SIZE (DECL)\t\t \\\n+         && ! AT_END && TOP_LEVEL\t\t\t\t\t \\\n+\t && DECL_INITIAL (DECL) == error_mark_node\t\t\t \\\n+\t && !size_directive_output)\t\t\t\t\t \\\n+       {\t\t\t\t\t\t\t\t \\\n+\t fprintf (FILE, \"\\t%s\\t \", SIZE_ASM_OP);\t\t\t \\\n+\t assemble_name (FILE, name);\t\t\t\t\t \\\n+\t fprintf (FILE, \",%d\\n\",  int_size_in_bytes (TREE_TYPE (DECL))); \\\n+       }\t\t\t\t\t\t\t\t \\\n+   } while (0)\n+\n /* This is how to declare a function name. */\n \n #undef\tASM_DECLARE_FUNCTION_NAME"}, {"sha": "d0db39b881c5648511865b2ea1689498dd3bc651", "filename": "gcc/config/m88k/m88k.h", "status": "modified", "additions": 38, "deletions": 16, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92dee628c1b1e2819e6869feceb0943e25b30320/gcc%2Fconfig%2Fm88k%2Fm88k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92dee628c1b1e2819e6869feceb0943e25b30320/gcc%2Fconfig%2Fm88k%2Fm88k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm88k%2Fm88k.h?ref=92dee628c1b1e2819e6869feceb0943e25b30320", "patch": "@@ -1912,25 +1912,47 @@ enum reg_class { NO_REGS, AP_REG, XRF_REGS, GENERAL_REGS, AGRF_REGS,\n \n /* Write the extra assembler code needed to declare an object properly.  */\n #undef\tASM_DECLARE_OBJECT_NAME\n-#define ASM_DECLARE_OBJECT_NAME(FILE, NAME, DECL)\t\t\t\\\n-  do {\t\t\t\t\t\t\t\t\t\\\n-    if (DECLARE_ASM_NAME)\t\t\t\t\t\t\\\n-      {\t\t\t\t\t\t\t\t\t\\\n-\tfprintf (FILE, \"\\t%s\\t \", TYPE_ASM_OP);\t\t\t\t\\\n-\tassemble_name (FILE, NAME);\t\t\t\t\t\\\n-\tputc (',', FILE);\t\t\t\t\t\t\\\n-\tfprintf (FILE, TYPE_OPERAND_FMT, \"object\");\t\t\t\\\n-\tputc ('\\n', FILE);\t\t\t\t\t\t\\\n-\tif (!flag_inhibit_size_directive && DECL_SIZE (DECL))\t\t\\\n-\t  {\t\t\t\t\t\t\t\t\\\n-\t    fprintf (FILE, \"\\t%s\\t \", SIZE_ASM_OP);\t\t\t\\\n-\t    assemble_name (FILE, NAME);\t\t\t\t\t\\\n+#define ASM_DECLARE_OBJECT_NAME(FILE, NAME, DECL)\t\t\t    \\\n+  do {\t\t\t\t\t\t\t\t\t    \\\n+    if (DECLARE_ASM_NAME)\t\t\t\t\t\t    \\\n+      {\t\t\t\t\t\t\t\t\t    \\\n+\tfprintf (FILE, \"\\t%s\\t \", TYPE_ASM_OP);\t\t\t\t    \\\n+\tassemble_name (FILE, NAME);\t\t\t\t\t    \\\n+\tputc (',', FILE);\t\t\t\t\t\t    \\\n+\tfprintf (FILE, TYPE_OPERAND_FMT, \"object\");\t\t\t    \\\n+\tputc ('\\n', FILE);\t\t\t\t\t\t    \\\n+        size_directive_output = 0;\t\t\t\t\t    \\\n+\tif (!flag_inhibit_size_directive && DECL_SIZE (DECL))\t\t    \\\n+\t  {\t\t\t\t\t\t\t\t    \\\n+            size_directive_output = 1;\t\t\t\t\t    \\\n+\t    fprintf (FILE, \"\\t%s\\t \", SIZE_ASM_OP);\t\t\t    \\\n+\t    assemble_name (FILE, NAME);\t\t\t\t\t    \\\n \t    fprintf (FILE, \",%d\\n\",  int_size_in_bytes (TREE_TYPE (DECL))); \\\n-\t  }\t\t\t\t\t\t\t\t\\\n-      }\t\t\t\t\t\t\t\t\t\\\n-    ASM_OUTPUT_LABEL(FILE, NAME);\t\t\t\t\t\\\n+\t  }\t\t\t\t\t\t\t\t    \\\n+      }\t\t\t\t\t\t\t\t\t    \\\n+    ASM_OUTPUT_LABEL(FILE, NAME);\t\t\t\t\t    \\\n   } while (0)\n \n+/* Output the size directive for a decl in rest_of_decl_compilation\n+   in the case where we did not do so before the initializer.\n+   Once we find the error_mark_node, we know that the value of\n+   size_directive_output was set\n+   by ASM_DECLARE_OBJECT_NAME when it was run for the same decl.  */\n+\n+#define ASM_FINISH_DECLARE_OBJECT(FILE, DECL, TOP_LEVEL, AT_END)\t \\\n+do {\t\t\t\t\t\t\t\t\t \\\n+     char *name = XSTR (XEXP (DECL_RTL (DECL), 0), 0);\t\t\t \\\n+     if (!flag_inhibit_size_directive && DECL_SIZE (DECL)\t\t \\\n+         && ! AT_END && TOP_LEVEL\t\t\t\t\t \\\n+\t && DECL_INITIAL (DECL) == error_mark_node\t\t\t \\\n+\t && !size_directive_output)\t\t\t\t\t \\\n+       {\t\t\t\t\t\t\t\t \\\n+\t fprintf (FILE, \"\\t%s\\t \", SIZE_ASM_OP);\t\t\t \\\n+\t assemble_name (FILE, name);\t\t\t\t\t \\\n+\t fprintf (FILE, \",%d\\n\",  int_size_in_bytes (TREE_TYPE (DECL))); \\\n+       }\t\t\t\t\t\t\t\t \\\n+   } while (0)\n+\n /* This is how to declare the size of a function.  */\n #undef\tASM_DECLARE_FUNCTION_SIZE\n #define ASM_DECLARE_FUNCTION_SIZE(FILE, FNAME, DECL)\t\t\t\\"}]}