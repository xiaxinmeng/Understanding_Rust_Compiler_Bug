{"sha": "55163419211c6f17e3e22c68304384eba35782a3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTUxNjM0MTkyMTFjNmYxN2UzZTIyYzY4MzA0Mzg0ZWJhMzU3ODJhMw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-01-27T19:35:21Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-01-27T19:35:21Z"}, "message": "aarch64: Fix up *aarch64_bfxilsi_uxtw [PR98853]\n\nThe https://gcc.gnu.org/legacy-ml/gcc-patches/2018-07/msg01895.html\npatch that introduced this pattern claimed:\nWould generate:\n\ncombine_balanced_int:\n        bfxil   w0, w1, 0, 16\n        uxtw    x0, w0\n        ret\n\nBut with this patch generates:\n\ncombine_balanced_int:\n        bfxil   w0, w1, 0, 16\n        ret\nand it is indeed what it should generate, but it doesn't do that,\nit emits bfxil  x0, x1, 0, 16\ninstead which doesn't zero extend from 32 to 64 bits, but preserves\nthe bits from the destination register.\n\n2021-01-27  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR target/98853\n\t* config/aarch64/aarch64.md (*aarch64_bfxilsi_uxtw): Use\n\t%w0, %w1 and %2 instead of %0, %1 and %2.\n\n\t* gcc.c-torture/execute/pr98853-1.c: New test.\n\t* gcc.c-torture/execute/pr98853-2.c: New test.", "tree": {"sha": "51dfb5109fbd6778eb0d29cdc122e8c328241dd1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/51dfb5109fbd6778eb0d29cdc122e8c328241dd1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/55163419211c6f17e3e22c68304384eba35782a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55163419211c6f17e3e22c68304384eba35782a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55163419211c6f17e3e22c68304384eba35782a3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55163419211c6f17e3e22c68304384eba35782a3/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7a279bed24e1b2a628767a60a20f3dcf6f1088cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a279bed24e1b2a628767a60a20f3dcf6f1088cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a279bed24e1b2a628767a60a20f3dcf6f1088cb"}], "stats": {"total": 44, "additions": 42, "deletions": 2}, "files": [{"sha": "e5990765b270b692965f67f2b7390a4470c21bd1", "filename": "gcc/config/aarch64/aarch64.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55163419211c6f17e3e22c68304384eba35782a3/gcc%2Fconfig%2Faarch64%2Faarch64.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55163419211c6f17e3e22c68304384eba35782a3/gcc%2Fconfig%2Faarch64%2Faarch64.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.md?ref=55163419211c6f17e3e22c68304384eba35782a3", "patch": "@@ -5724,10 +5724,10 @@\n     {\n       case 0:\n \toperands[3] = GEN_INT (ctz_hwi (~INTVAL (operands[3])));\n-\treturn \"bfxil\\\\t%0, %1, 0, %3\";\n+\treturn \"bfxil\\\\t%w0, %w1, 0, %3\";\n       case 1:\n \toperands[3] = GEN_INT (ctz_hwi (~INTVAL (operands[4])));\n-\treturn \"bfxil\\\\t%0, %2, 0, %3\";\n+\treturn \"bfxil\\\\t%w0, %w2, 0, %3\";\n       default:\n \tgcc_unreachable ();\n     }"}, {"sha": "b5a37869fa8feba8afacc76da1db5f0a54084952", "filename": "gcc/testsuite/gcc.c-torture/execute/pr98853-1.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55163419211c6f17e3e22c68304384eba35782a3/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr98853-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55163419211c6f17e3e22c68304384eba35782a3/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr98853-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr98853-1.c?ref=55163419211c6f17e3e22c68304384eba35782a3", "patch": "@@ -0,0 +1,21 @@\n+/* PR target/98853 */\n+\n+#if __SIZEOF_INT__ == 4 && __SIZEOF_LONG_LONG__ == 8 && __BYTE_ORDER__ == __ORDER_LITTLE_ENDIAN__\n+__attribute__((__noipa__)) unsigned long long\n+foo (unsigned x, unsigned long long y, unsigned long long z)\n+{\n+  __builtin_memcpy (2 + (char *) &x, 2 + (char *) &y, 2);\n+  return x + z;\n+}\n+#endif\n+\n+int\n+main ()\n+{\n+#if __SIZEOF_INT__ == 4 && __SIZEOF_LONG_LONG__ == 8 && __BYTE_ORDER__ == __ORDER_LITTLE_ENDIAN__\n+  if (foo (0x44444444U, 0x1111111111111111ULL, 0x2222222222222222ULL)\n+      != 0x2222222233336666ULL)\n+    __builtin_abort ();\n+#endif\n+  return 0;\n+}"}, {"sha": "2a3b0f2e9ba635eddf2397207a6704d86aa220cc", "filename": "gcc/testsuite/gcc.c-torture/execute/pr98853-2.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55163419211c6f17e3e22c68304384eba35782a3/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr98853-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55163419211c6f17e3e22c68304384eba35782a3/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr98853-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr98853-2.c?ref=55163419211c6f17e3e22c68304384eba35782a3", "patch": "@@ -0,0 +1,19 @@\n+/* PR target/98853 */\n+\n+#if __SIZEOF_INT__ == 4 && __SIZEOF_LONG_LONG__ == 8\n+__attribute__((noipa)) unsigned long long\n+foo (unsigned long long x, unsigned int y)\n+{\n+  return ((unsigned) x & 0xfffe0000U) | (y & 0x1ffff);\n+}\n+#endif\n+\n+int\n+main ()\n+{\n+#if __SIZEOF_INT__ == 4 && __SIZEOF_LONG_LONG__ == 8\n+  if (foo (0xdeadbeefcaf2babeULL, 0xdeaffeedU) != 0x00000000caf3feedULL)\n+    __builtin_abort ();\n+#endif\n+  return 0;\n+}"}]}