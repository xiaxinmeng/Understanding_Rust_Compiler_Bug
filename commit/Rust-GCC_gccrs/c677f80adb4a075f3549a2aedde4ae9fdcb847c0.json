{"sha": "c677f80adb4a075f3549a2aedde4ae9fdcb847c0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzY3N2Y4MGFkYjRhMDc1ZjM1NDlhMmFlZGRlNGFlOWZkY2I4NDdjMA==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2018-01-31T21:37:54Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2018-01-31T21:37:54Z"}, "message": "re PR rtl-optimization/84123 (internal compiler error: in gen_rtx_SUBREG, at emit-rtl.c:908, alpha linux.)\n\n\tPR rtl-optimization/84123\n\t* combine.c (change_zero_ext): Check if hard register satisfies\n\tcan_change_dest_mode before calling gen_lowpart_SUBREG.\n\nFrom-SVN: r257270", "tree": {"sha": "fc05eda8994a1ab2310607e65f36f7dd87f8c4f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fc05eda8994a1ab2310607e65f36f7dd87f8c4f3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c677f80adb4a075f3549a2aedde4ae9fdcb847c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c677f80adb4a075f3549a2aedde4ae9fdcb847c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c677f80adb4a075f3549a2aedde4ae9fdcb847c0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c677f80adb4a075f3549a2aedde4ae9fdcb847c0/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c9243c043c06d0f8576ff4f76b92d41143d2fc2e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9243c043c06d0f8576ff4f76b92d41143d2fc2e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9243c043c06d0f8576ff4f76b92d41143d2fc2e"}], "stats": {"total": 23, "additions": 21, "deletions": 2}, "files": [{"sha": "88df7ab9c1992ae9dee2748ed8911bfb895b7ecc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c677f80adb4a075f3549a2aedde4ae9fdcb847c0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c677f80adb4a075f3549a2aedde4ae9fdcb847c0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c677f80adb4a075f3549a2aedde4ae9fdcb847c0", "patch": "@@ -1,3 +1,9 @@\n+2018-01-31  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR rtl-optimization/84123\n+\t* combine.c (change_zero_ext): Check if hard register satisfies\n+\tcan_change_dest_mode before calling gen_lowpart_SUBREG.\n+\n 2018-01-31  Vladimir Makarov  <vmakarov@redhat.com>\n \n \tPR target/82444"}, {"sha": "970dd26778e80c2dbb51969ddb7ecb4618ffad6b", "filename": "gcc/combine.c", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c677f80adb4a075f3549a2aedde4ae9fdcb847c0/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c677f80adb4a075f3549a2aedde4ae9fdcb847c0/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=c677f80adb4a075f3549a2aedde4ae9fdcb847c0", "patch": "@@ -11480,8 +11480,15 @@ change_zero_ext (rtx pat)\n \t\t\t\t  gen_int_shift_amount (inner_mode, start));\n \t  else\n \t    x = XEXP (x, 0);\n+\n \t  if (mode != inner_mode)\n-\t    x = gen_lowpart_SUBREG (mode, x);\n+\t    {\n+\t      if (HARD_REGISTER_P (x)\n+\t\t  && !can_change_dest_mode (x, 0, mode))\n+\t\tcontinue;\n+\n+\t      x = gen_lowpart_SUBREG (mode, x);\n+\t    }\n \t}\n       else if (GET_CODE (x) == ZERO_EXTEND\n \t       && GET_CODE (XEXP (x, 0)) == SUBREG\n@@ -11493,7 +11500,13 @@ change_zero_ext (rtx pat)\n \t  size = GET_MODE_PRECISION (inner_mode);\n \t  x = SUBREG_REG (XEXP (x, 0));\n \t  if (GET_MODE (x) != mode)\n-\t    x = gen_lowpart_SUBREG (mode, x);\n+\t    {\n+\t      if (HARD_REGISTER_P (x)\n+\t\t  && !can_change_dest_mode (x, 0, mode))\n+\t\tcontinue;\n+\n+\t      x = gen_lowpart_SUBREG (mode, x);\n+\t    }\n \t}\n       else if (GET_CODE (x) == ZERO_EXTEND\n \t       && REG_P (XEXP (x, 0))"}]}