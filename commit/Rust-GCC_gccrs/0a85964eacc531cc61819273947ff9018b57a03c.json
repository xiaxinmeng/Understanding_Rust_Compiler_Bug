{"sha": "0a85964eacc531cc61819273947ff9018b57a03c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGE4NTk2NGVhY2M1MzFjYzYxODE5MjczOTQ3ZmY5MDE4YjU3YTAzYw==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-06-26T08:44:34Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-06-26T08:44:34Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r1294", "tree": {"sha": "65bb89fcceb1510263b50e91d15e6fed209bf620", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/65bb89fcceb1510263b50e91d15e6fed209bf620"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0a85964eacc531cc61819273947ff9018b57a03c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a85964eacc531cc61819273947ff9018b57a03c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a85964eacc531cc61819273947ff9018b57a03c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a85964eacc531cc61819273947ff9018b57a03c/comments", "author": null, "committer": null, "parents": [{"sha": "59d527639cec7c403ea8790c9b15925c0b38327c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59d527639cec7c403ea8790c9b15925c0b38327c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/59d527639cec7c403ea8790c9b15925c0b38327c"}], "stats": {"total": 52, "additions": 36, "deletions": 16}, "files": [{"sha": "86b426ee593ce442c4766f025de75da5555bdc68", "filename": "gcc/ginclude/stdarg.h", "status": "modified", "additions": 36, "deletions": 16, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a85964eacc531cc61819273947ff9018b57a03c/gcc%2Fginclude%2Fstdarg.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a85964eacc531cc61819273947ff9018b57a03c/gcc%2Fginclude%2Fstdarg.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fginclude%2Fstdarg.h?ref=0a85964eacc531cc61819273947ff9018b57a03c", "patch": "@@ -4,7 +4,10 @@\n    Thus, va_arg (..., short) is not valid.  */\n \n #ifndef _STDARG_H\n+#ifndef __need___va_list\n #define _STDARG_H\n+#endif\n+#undef __need___va_list\n \n #ifndef __GNUC__\n /* Use the system's macros with the system's compiler.  */\n@@ -29,23 +32,20 @@\n #include \"va-i960.h\"\n #else\n \n-#ifdef _HIDDEN_VA_LIST  /* On OSF1, this means varargs.h is \"half-loaded\".  */\n-#undef _VA_LIST\n-#endif\n+/* Define __gnuc_va_list.  */\n \n-/* The macro _VA_LIST_ is the same thing used by this file in Ultrix.  */\n-#ifndef _VA_LIST_\n-/* The macro _VA_LIST is used in SCO Unix 3.2.  */\n-#ifndef _VA_LIST\n-#define _VA_LIST_\n-#define _VA_LIST\n-#ifndef __svr4__\n-typedef char *va_list;\n+#ifndef __GNUC_VA_LIST\n+#define __GNUC_VA_LIST\n+#ifdef __svr4__\n+typedef char *__gnuc_va_list;\n #else\n-typedef void *va_list;\n+typedef void *__gnuc_va_list;\n #endif\n-#endif /* _VA_LIST */\n-#endif /* _VA_LIST_ */\n+#endif\n+\n+/* Define the standard macros for the user,\n+   if this invocation was from the user program.  */\n+#ifdef __STDARG_H\n \n /* Amount of space required in an argument list for an arg of type TYPE.\n    TYPE may alternatively be an expression whose type is used.  */\n@@ -56,18 +56,38 @@ typedef void *va_list;\n #define va_start(AP, LASTARG) \t\t\t\t\t\t\\\n  (AP = ((char *) __builtin_next_arg ()))\n \n-void va_end (va_list);\t\t/* Defined in libgcc.a */\n+void va_end (__gnuc_va_list);\t\t/* Defined in libgcc.a */\n #define va_end(AP)\n \n #define va_arg(AP, TYPE)\t\t\t\t\t\t\\\n  (AP = ((char *) (AP)) += __va_rounded_size (TYPE),\t\t\t\\\n   *((TYPE *) ((char *) (AP) - __va_rounded_size (TYPE))))\n+#endif /* _STDARG_H */\n \n #endif /* not i960 */\n #endif /* not sparc */\n #endif /* not mips */\n #endif /* not hp9000s800 */\n #endif /* not i860 */\n #endif /* not m88k */\n-#endif /* __GNUC__ */\n+\n+#ifdef _STDARG_H\n+/* Define va_list, if desired, from __gnuc_va_list. */\n+\n+#ifdef _HIDDEN_VA_LIST  /* On OSF1, this means varargs.h is \"half-loaded\".  */\n+#undef _VA_LIST\n+#endif\n+\n+/* The macro _VA_LIST_ is the same thing used by this file in Ultrix.  */\n+#ifndef _VA_LIST_\n+/* The macro _VA_LIST is used in SCO Unix 3.2.  */\n+#ifndef _VA_LIST\n+#define _VA_LIST_\n+#define _VA_LIST\n+typedef __gnuc_va_list va_list;\n+#endif /* _VA_LIST */\n+#endif /* _VA_LIST_ */\n #endif /* _STDARG_H */\n+\n+#endif /* __GNUC__ */\n+#endif /* not _STDARG_H */"}]}