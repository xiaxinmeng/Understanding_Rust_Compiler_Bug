{"sha": "73da6b3a14db30c6c4621c0c944dfdd2c6931831", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzNkYTZiM2ExNGRiMzBjNmM0NjIxYzBjOTQ0ZGZkZDJjNjkzMTgzMQ==", "commit": {"author": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2018-01-17T00:09:44Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2018-01-17T00:09:44Z"}, "message": "som.h (ASM_DECLARE_FUNCTION_NAME): Cleanup type and mode variables.\n\n\t* config/pa/som.h (ASM_DECLARE_FUNCTION_NAME): Cleanup type and mode\n\tvariables.\n\nFrom-SVN: r256769", "tree": {"sha": "ee500ff6e07a1d72605e1a298b4a614c90dba041", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ee500ff6e07a1d72605e1a298b4a614c90dba041"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/73da6b3a14db30c6c4621c0c944dfdd2c6931831", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73da6b3a14db30c6c4621c0c944dfdd2c6931831", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73da6b3a14db30c6c4621c0c944dfdd2c6931831", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73da6b3a14db30c6c4621c0c944dfdd2c6931831/comments", "author": null, "committer": null, "parents": [{"sha": "7b8f47005d3d00992f43c7dcc96fee56884f3cb7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b8f47005d3d00992f43c7dcc96fee56884f3cb7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b8f47005d3d00992f43c7dcc96fee56884f3cb7"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "e6d4baea3ce39d74b2a0dabaa9a4305d0d807c5e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73da6b3a14db30c6c4621c0c944dfdd2c6931831/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73da6b3a14db30c6c4621c0c944dfdd2c6931831/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=73da6b3a14db30c6c4621c0c944dfdd2c6931831", "patch": "@@ -1,5 +1,8 @@\n 2018-01-16  John David Anglin  <danglin@gcc.gnu.org>\n \n+\t* config/pa/som.h (ASM_DECLARE_FUNCTION_NAME): Cleanup type and mode\n+\tvariables.\n+\n \t* config/pa/pa.c (pa_function_arg_size): Apply CEIL to GET_MODE_SIZE\n \treturn value.\n "}, {"sha": "cc96c9187e5e71606ebc2970b423687cad34ce16", "filename": "gcc/config/pa/som.h", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73da6b3a14db30c6c4621c0c944dfdd2c6931831/gcc%2Fconfig%2Fpa%2Fsom.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73da6b3a14db30c6c4621c0c944dfdd2c6931831/gcc%2Fconfig%2Fpa%2Fsom.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fsom.h?ref=73da6b3a14db30c6c4621c0c944dfdd2c6931831", "patch": "@@ -119,11 +119,11 @@ do {\t\t\t\t\t\t\t\t\\\n \t     for (parm = DECL_ARGUMENTS (DECL), i = 0; parm && i < 4;\t\\\n \t\t  parm = DECL_CHAIN (parm))\t\t\t\t\\\n \t       {\t\t\t\t\t\t\t\\\n-\t\t if (TYPE_MODE (DECL_ARG_TYPE (parm)) == SFmode\t\t\\\n-\t\t     && ! TARGET_SOFT_FLOAT)\t\t\t\t\\\n+\t\t tree type = DECL_ARG_TYPE (parm);\t\t\t\\\n+\t\t machine_mode mode = TYPE_MODE (type);\t\t\t\\\n+\t\t if (mode == SFmode && ! TARGET_SOFT_FLOAT)\t\t\\\n \t\t   fprintf (FILE, \",ARGW%d=FR\", i++);\t\t\t\\\n-\t\t else if (TYPE_MODE (DECL_ARG_TYPE (parm)) == DFmode\t\\\n-\t\t\t  && ! TARGET_SOFT_FLOAT)\t\t\t\\\n+\t\t else if (mode == DFmode && ! TARGET_SOFT_FLOAT)\t\\\n \t\t   {\t\t\t\t\t\t\t\\\n \t\t     if (i <= 2)\t\t\t\t\t\\\n \t\t       {\t\t\t\t\t\t\\\n@@ -135,13 +135,10 @@ do {\t\t\t\t\t\t\t\t\\\n \t\t   }\t\t\t\t\t\t\t\\\n \t\t else\t\t\t\t\t\t\t\\\n \t\t   {\t\t\t\t\t\t\t\\\n-\t\t     int arg_size =\t\t\t\t\t\\\n-\t\t       pa_function_arg_size (TYPE_MODE (DECL_ARG_TYPE (parm)),\\\n-\t\t\t\t\t     DECL_ARG_TYPE (parm));\t\\\n+\t\t     int arg_size = pa_function_arg_size (mode, type);\t\\\n \t\t     /* Passing structs by invisible reference uses\t\\\n \t\t\tone general register.  */\t\t\t\\\n-\t\t     if (arg_size > 2\t\t\t\t\t\\\n-\t\t\t || TREE_ADDRESSABLE (DECL_ARG_TYPE (parm)))\t\\\n+\t\t     if (arg_size > 2 || TREE_ADDRESSABLE (type))\t\\\n \t\t       arg_size = 1;\t\t\t\t\t\\\n \t\t     if (arg_size == 2 && i <= 2)\t\t\t\\\n \t\t       {\t\t\t\t\t\t\\"}]}