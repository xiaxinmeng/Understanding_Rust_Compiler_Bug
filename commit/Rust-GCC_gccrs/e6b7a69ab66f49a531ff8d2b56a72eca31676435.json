{"sha": "e6b7a69ab66f49a531ff8d2b56a72eca31676435", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTZiN2E2OWFiNjZmNDlhNTMxZmY4ZDJiNTZhNzJlY2EzMTY3NjQzNQ==", "commit": {"author": {"name": "Phil Edwards", "email": "pme@gcc.gnu.org", "date": "2003-07-06T04:07:36Z"}, "committer": {"name": "Phil Edwards", "email": "pme@gcc.gnu.org", "date": "2003-07-06T04:07:36Z"}, "message": "acinclude.m4 (GLIBCXX_ENABLE_SYMVERS): Bump minimal version requirement.\n\n2003-07-05  Phil Edwards  <pme@gcc.gnu.org>\n\n\t* acinclude.m4 (GLIBCXX_ENABLE_SYMVERS):  Bump minimal version\n\trequirement.  Add port_specific_symbol_file variable.\n\t* configure.host:  Add docs for port_specific_symbol_file.\n\tClean up try_cpu block for x86.\n\t* config/linker-map.gnu:  No more \"last symbol can't have a\n\tsemicolon\" kaka.  Add hook for port-specific symbols.\n\t* src/Makefile.am:  Remove trailing whitespace.\n\t(libstdc++-symbol.ver):  Detect the presence of port-specific\n\tsymbols, and add them accordingly.\n\n\t* docs/html/17_intro/porting.texi:  Bring up to date.\n\n\t* src/Makefile.in, aclocal.m4, configure,\n\tdocs/html/17_intro/porting.html:  Regenerated.\n\nFrom-SVN: r68992", "tree": {"sha": "a48885b9c6d905ad208f5800cc45b68bdab46d3e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a48885b9c6d905ad208f5800cc45b68bdab46d3e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e6b7a69ab66f49a531ff8d2b56a72eca31676435", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6b7a69ab66f49a531ff8d2b56a72eca31676435", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e6b7a69ab66f49a531ff8d2b56a72eca31676435", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6b7a69ab66f49a531ff8d2b56a72eca31676435/comments", "author": null, "committer": null, "parents": [{"sha": "0a72704b04e73d1173ae5e1c99464bea55a698b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a72704b04e73d1173ae5e1c99464bea55a698b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a72704b04e73d1173ae5e1c99464bea55a698b4"}], "stats": {"total": 346, "additions": 161, "deletions": 185}, "files": [{"sha": "274be04725b7f9e4189cf52da7ec78dc92c82fcb", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6b7a69ab66f49a531ff8d2b56a72eca31676435/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6b7a69ab66f49a531ff8d2b56a72eca31676435/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=e6b7a69ab66f49a531ff8d2b56a72eca31676435", "patch": "@@ -1,3 +1,20 @@\n+2003-07-05  Phil Edwards  <pme@gcc.gnu.org>\n+\n+\t* acinclude.m4 (GLIBCXX_ENABLE_SYMVERS):  Bump minimal version\n+\trequirement.  Add port_specific_symbol_file variable.\n+\t* configure.host:  Add docs for port_specific_symbol_file.\n+\tClean up try_cpu block for x86.\n+\t* config/linker-map.gnu:  No more \"last symbol can't have a\n+\tsemicolon\" kaka.  Add hook for port-specific symbols.\n+\t* src/Makefile.am:  Remove trailing whitespace.\n+\t(libstdc++-symbol.ver):  Detect the presence of port-specific\n+\tsymbols, and add them accordingly.\n+\n+\t* docs/html/17_intro/porting.texi:  Bring up to date.\n+\n+\t* src/Makefile.in, aclocal.m4, configure,\n+\tdocs/html/17_intro/porting.html:  Regenerated.\n+\n 2003-07-05  Phil Edwards  <pme@gcc.gnu.org>\n \n \t* scripts/create_testsuite_files:  New file."}, {"sha": "8d81668f11113f4291dfbfb639a1ce20920771fc", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6b7a69ab66f49a531ff8d2b56a72eca31676435/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6b7a69ab66f49a531ff8d2b56a72eca31676435/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=e6b7a69ab66f49a531ff8d2b56a72eca31676435", "patch": "@@ -2258,9 +2258,9 @@ if test $enable_symvers != no; then\n   AC_MSG_RESULT($glibcxx_shared_libgcc)\n fi\n \n-# For GNU ld, we need at least this version.  It's 2.12 in the same format\n+# For GNU ld, we need at least this version.  It's 2.14 in the same format\n # as the tested-for version.  See GLIBCXX_CHECK_LINKER_FEATURES for more.\n-glibcxx_min_gnu_ld_version=21200\n+glibcxx_min_gnu_ld_version=21400\n \n # Check to see if unspecified \"yes\" value can win, given results\n # above.\n@@ -2305,6 +2305,7 @@ case $enable_symvers in\n esac\n \n AC_SUBST(SYMVER_MAP)\n+AC_SUBST(port_specific_symbol_file)\n AM_CONDITIONAL(GLIBCXX_BUILD_VERSIONED_SHLIB, test $enable_symvers != no)\n AC_MSG_CHECKING([versioning on shared library symbols])\n AC_MSG_RESULT($enable_symvers)"}, {"sha": "17a95f69c45eb0e2430b77f55ee6be9591880fcd", "filename": "libstdc++-v3/aclocal.m4", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6b7a69ab66f49a531ff8d2b56a72eca31676435/libstdc%2B%2B-v3%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6b7a69ab66f49a531ff8d2b56a72eca31676435/libstdc%2B%2B-v3%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Faclocal.m4?ref=e6b7a69ab66f49a531ff8d2b56a72eca31676435", "patch": "@@ -2270,9 +2270,9 @@ if test $enable_symvers != no; then\n   AC_MSG_RESULT($glibcxx_shared_libgcc)\n fi\n \n-# For GNU ld, we need at least this version.  It's 2.12 in the same format\n+# For GNU ld, we need at least this version.  It's 2.14 in the same format\n # as the tested-for version.  See GLIBCXX_CHECK_LINKER_FEATURES for more.\n-glibcxx_min_gnu_ld_version=21200\n+glibcxx_min_gnu_ld_version=21400\n \n # Check to see if unspecified \"yes\" value can win, given results\n # above.\n@@ -2317,6 +2317,7 @@ case $enable_symvers in\n esac\n \n AC_SUBST(SYMVER_MAP)\n+AC_SUBST(port_specific_symbol_file)\n AM_CONDITIONAL(GLIBCXX_BUILD_VERSIONED_SHLIB, test $enable_symvers != no)\n AC_MSG_CHECKING([versioning on shared library symbols])\n AC_MSG_RESULT($enable_symvers)"}, {"sha": "5cf3dd9c7e7de3bb430c444b029b7ebb93456b71", "filename": "libstdc++-v3/config/linker-map.gnu", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6b7a69ab66f49a531ff8d2b56a72eca31676435/libstdc%2B%2B-v3%2Fconfig%2Flinker-map.gnu", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6b7a69ab66f49a531ff8d2b56a72eca31676435/libstdc%2B%2B-v3%2Fconfig%2Flinker-map.gnu", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Flinker-map.gnu?ref=e6b7a69ab66f49a531ff8d2b56a72eca31676435", "patch": "@@ -1,4 +1,4 @@\n-## Linker script for GNU ld 2.11.94+ only.\n+## Linker script for GNU ld 2.13.91+ only.\n ##\n ## Copyright (C) 2002, 2003 Free Software Foundation, Inc.\n ##\n@@ -25,7 +25,6 @@ GLIBCXX_3.4 {\n   global:\n \n     # Names inside the 'extern' block are demangled names.\n-    # All but the last are terminated with a semicolon.\n     extern \"C++\"\n     {\n       std::[A-Za-k]*;\n@@ -56,7 +55,7 @@ GLIBCXX_3.4 {\n       std::__num_base::_S_format_int*;\n       std::__num_base::_S_atoms_in;\n       std::__num_base::_S_atoms_out;\n-      std::__numpunct_cache*\n+      std::__numpunct_cache*;\n     };\n \n     # Names not in an 'extern' block are mangled names.\n@@ -169,6 +168,8 @@ GLIBCXX_3.4 {\n     _ZN9__gnu_cxx22_Atomic_add_mutex_onceE;\n     _ZN9__gnu_cxx31__gthread_atomic_add_mutex_onceEv;\n \n+  # DO NOT DELETE THIS LINE.  Port-specific symbols, if any, will be here.\n+\n   local:\n     *;\n };"}, {"sha": "c3352ed9d0196f025b4d40356aa3f6c4853b9328", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 40, "deletions": 51, "changes": 91, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6b7a69ab66f49a531ff8d2b56a72eca31676435/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6b7a69ab66f49a531ff8d2b56a72eca31676435/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=e6b7a69ab66f49a531ff8d2b56a72eca31676435", "patch": "@@ -841,7 +841,7 @@ test \"$ac_cv_mingw32\" = yes && MINGW32=yes\n \n     \n \n-  for ac_prog in gawk mawk nawk awk\n+  for ac_prog in mawk gawk nawk awk\n do\n # Extract the first word of \"$ac_prog\", so it can be a program name with args.\n set dummy $ac_prog; ac_word=$2\n@@ -1476,7 +1476,7 @@ else\n   if { (eval echo configure:1477: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; }; then\n     for file in conftest.*; do\n       case $file in\n-      *.c | *.o | *.obj) ;;\n+      *.$ac_ext | *.c | *.o | *.obj) ;;\n       *) ac_cv_exeext=`echo $file | sed -e s/conftest//` ;;\n       esac\n     done\n@@ -22911,7 +22911,7 @@ else\n fi\n rm -f conftest*\n \n-  for ac_hdr in stdlib.h unistd.h sys/stat.h sys/types.h\n+  for ac_hdr in unistd.h\n do\n ac_safe=`echo \"$ac_hdr\" | sed 'y%./+-%__p_%'`\n echo $ac_n \"checking for $ac_hdr\"\"... $ac_c\" 1>&6\n@@ -23043,24 +23043,11 @@ else\n #include <fcntl.h>\n #include <sys/mman.h>\n \n-#if HAVE_SYS_TYPES_H\n-# include <sys/types.h>\n-#endif\n-\n-#if HAVE_STDLIB_H\n-# include <stdlib.h>\n-#endif\n-\n-#if HAVE_SYS_STAT_H\n-# include <sys/stat.h>\n-#endif\n-\n-#if HAVE_UNISTD_H\n-# include <unistd.h>\n-#endif\n-\n /* This mess was copied from the GNU getpagesize.h.  */\n #ifndef HAVE_GETPAGESIZE\n+# ifdef HAVE_UNISTD_H\n+#  include <unistd.h>\n+# endif\n \n /* Assume that all systems that can run configure have sys/param.h.  */\n # ifndef HAVE_SYS_PARAM_H\n@@ -23168,7 +23155,7 @@ main()\n }\n \n EOF\n-if { (eval echo configure:23172: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n+if { (eval echo configure:23159: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n then\n   ac_cv_func_mmap_fixed_mapped=yes\n else\n@@ -23219,18 +23206,18 @@ fi\n # Check to see if libgcc_s exists, indicating that shared libgcc is possible.\n if test $enable_symvers != no; then\n   echo $ac_n \"checking for shared libgcc\"\"... $ac_c\" 1>&6\n-echo \"configure:23223: checking for shared libgcc\" >&5\n+echo \"configure:23210: checking for shared libgcc\" >&5\n   ac_save_CFLAGS=\"$CFLAGS\"\n   CFLAGS=' -lgcc_s'\n   cat > conftest.$ac_ext <<EOF\n-#line 23227 \"configure\"\n+#line 23214 \"configure\"\n #include \"confdefs.h\"\n \n int main() {\n return 0\n ; return 0; }\n EOF\n-if { (eval echo configure:23234: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:23221: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   glibcxx_shared_libgcc=yes\n else\n@@ -23244,9 +23231,9 @@ rm -f conftest*\n   echo \"$ac_t\"\"$glibcxx_shared_libgcc\" 1>&6\n fi\n \n-# For GNU ld, we need at least this version.  It's 2.12 in the same format\n+# For GNU ld, we need at least this version.  It's 2.14 in the same format\n # as the tested-for version.  See GLIBCXX_CHECK_LINKER_FEATURES for more.\n-glibcxx_min_gnu_ld_version=21200\n+glibcxx_min_gnu_ld_version=21400\n \n # Check to see if unspecified \"yes\" value can win, given results\n # above.\n@@ -23265,14 +23252,14 @@ if test $enable_symvers = yes ; then\n       echo 'FOO { global: f[a-z]o; local: *; };' > conftest.map\n       \n       cat > conftest.$ac_ext <<EOF\n-#line 23269 \"configure\"\n+#line 23256 \"configure\"\n #include \"confdefs.h\"\n int foo;\n int main() {\n \n ; return 0; }\n EOF\n-if { (eval echo configure:23276: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:23263: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   enable_symvers=gnu\n else\n@@ -23310,6 +23297,7 @@ esac\n \n \n \n+\n if test $enable_symvers != no; then\n   GLIBCXX_BUILD_VERSIONED_SHLIB_TRUE=\n   GLIBCXX_BUILD_VERSIONED_SHLIB_FALSE='#'\n@@ -23318,7 +23306,7 @@ else\n   GLIBCXX_BUILD_VERSIONED_SHLIB_FALSE=\n fi\n echo $ac_n \"checking versioning on shared library symbols\"\"... $ac_c\" 1>&6\n-echo \"configure:23322: checking versioning on shared library symbols\" >&5\n+echo \"configure:23310: checking versioning on shared library symbols\" >&5\n echo \"$ac_t\"\"$enable_symvers\" 1>&6\n \n \n@@ -23333,17 +23321,17 @@ echo \"$ac_t\"\"$enable_symvers\" 1>&6\n do\n ac_safe=`echo \"$ac_hdr\" | sed 'y%./+-%__p_%'`\n echo $ac_n \"checking for $ac_hdr\"\"... $ac_c\" 1>&6\n-echo \"configure:23337: checking for $ac_hdr\" >&5\n+echo \"configure:23325: checking for $ac_hdr\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_header_$ac_safe'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 23342 \"configure\"\n+#line 23330 \"configure\"\n #include \"confdefs.h\"\n #include <$ac_hdr>\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:23347: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:23335: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out | grep -v \"^conftest.${ac_ext}\\$\"`\n if test -z \"$ac_err\"; then\n   rm -rf conftest*\n@@ -23376,7 +23364,7 @@ done\n     # Can't do these in a loop, else the resulting syntax is wrong.\n     \n   cat > conftest.$ac_ext <<EOF\n-#line 23380 \"configure\"\n+#line 23368 \"configure\"\n #include \"confdefs.h\"\n #include <unistd.h>\n                   #include <sys/time.h>\n@@ -23386,7 +23374,7 @@ int main() {\n  int f = RLIMIT_DATA ; \n ; return 0; }\n EOF\n-if { (eval echo configure:23390: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:23378: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   glibcxx_mresult=1\n else\n@@ -23403,7 +23391,7 @@ EOF\n \n     \n   cat > conftest.$ac_ext <<EOF\n-#line 23407 \"configure\"\n+#line 23395 \"configure\"\n #include \"confdefs.h\"\n #include <unistd.h>\n                   #include <sys/time.h>\n@@ -23413,7 +23401,7 @@ int main() {\n  int f = RLIMIT_RSS ; \n ; return 0; }\n EOF\n-if { (eval echo configure:23417: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:23405: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   glibcxx_mresult=1\n else\n@@ -23430,7 +23418,7 @@ EOF\n \n     \n   cat > conftest.$ac_ext <<EOF\n-#line 23434 \"configure\"\n+#line 23422 \"configure\"\n #include \"confdefs.h\"\n #include <unistd.h>\n                   #include <sys/time.h>\n@@ -23440,7 +23428,7 @@ int main() {\n  int f = RLIMIT_VMEM ; \n ; return 0; }\n EOF\n-if { (eval echo configure:23444: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:23432: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   glibcxx_mresult=1\n else\n@@ -23457,7 +23445,7 @@ EOF\n \n     \n   cat > conftest.$ac_ext <<EOF\n-#line 23461 \"configure\"\n+#line 23449 \"configure\"\n #include \"confdefs.h\"\n #include <unistd.h>\n                   #include <sys/time.h>\n@@ -23467,7 +23455,7 @@ int main() {\n  int f = RLIMIT_AS ; \n ; return 0; }\n EOF\n-if { (eval echo configure:23471: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:23459: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   glibcxx_mresult=1\n else\n@@ -23489,7 +23477,7 @@ EOF\n else\n   \n       cat > conftest.$ac_ext <<EOF\n-#line 23493 \"configure\"\n+#line 23481 \"configure\"\n #include \"confdefs.h\"\n #include <unistd.h>\n                   #include <sys/time.h>\n@@ -23499,7 +23487,7 @@ int main() {\n  struct rlimit r; setrlimit(0, &r);\n ; return 0; }\n EOF\n-if { (eval echo configure:23503: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:23491: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   ac_setrlimit=yes\n else\n@@ -23515,7 +23503,7 @@ fi\n   fi\n \n   echo $ac_n \"checking for testsuite memory limit support\"\"... $ac_c\" 1>&6\n-echo \"configure:23519: checking for testsuite memory limit support\" >&5\n+echo \"configure:23507: checking for testsuite memory limit support\" >&5\n   if test $setrlimit_have_headers = yes && test $ac_setrlimit = yes; then\n     ac_mem_limits=yes\n     cat >> confdefs.h <<\\EOF\n@@ -23531,7 +23519,7 @@ EOF\n     # Look for setenv, so that extended locale tests can be performed.\n     \n   echo $ac_n \"checking for setenv declaration\"\"... $ac_c\" 1>&6\n-echo \"configure:23535: checking for setenv declaration\" >&5\n+echo \"configure:23523: checking for setenv declaration\" >&5\n   if test x${glibcxx_cv_func_setenv_use+set} != xset; then\n     if eval \"test \\\"`echo '$''{'glibcxx_cv_func_setenv_use'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n@@ -23546,14 +23534,14 @@ ac_link='${CXX-g++} -o conftest${ac_exeext} $CXXFLAGS $CPPFLAGS $LDFLAGS conftes\n cross_compiling=$ac_cv_prog_cxx_cross\n \n       cat > conftest.$ac_ext <<EOF\n-#line 23550 \"configure\"\n+#line 23538 \"configure\"\n #include \"confdefs.h\"\n #include <stdlib.h>\n int main() {\n  setenv(0, 0, 0);\n ; return 0; }\n EOF\n-if { (eval echo configure:23557: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:23545: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   glibcxx_cv_func_setenv_use=yes\n else\n@@ -23579,12 +23567,12 @@ fi\n     for ac_func in setenv\n do\n echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n-echo \"configure:23583: checking for $ac_func\" >&5\n+echo \"configure:23571: checking for $ac_func\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 23588 \"configure\"\n+#line 23576 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char $ac_func(); below.  */\n@@ -23607,7 +23595,7 @@ $ac_func();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:23611: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:23599: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_$ac_func=yes\"\n else\n@@ -23767,7 +23755,7 @@ glibcxx_prefixdir=${prefix}\n \n # Process the option --with-gxx-include-dir=<path to include-files directory>\n echo $ac_n \"checking for --with-gxx-include-dir\"\"... $ac_c\" 1>&6\n-echo \"configure:23771: checking for --with-gxx-include-dir\" >&5\n+echo \"configure:23759: checking for --with-gxx-include-dir\" >&5\n # Check whether --with-gxx-include-dir or --without-gxx-include-dir was given.\n if test \"${with_gxx_include_dir+set}\" = set; then\n   withval=\"$with_gxx_include_dir\"\n@@ -23791,7 +23779,7 @@ echo \"$ac_t\"\"$gxx_include_dir\" 1>&6\n \n # Process the option \"--enable-version-specific-runtime-libs\"\n echo $ac_n \"checking for --enable-version-specific-runtime-libs\"\"... $ac_c\" 1>&6\n-echo \"configure:23795: checking for --enable-version-specific-runtime-libs\" >&5\n+echo \"configure:23783: checking for --enable-version-specific-runtime-libs\" >&5\n # Check whether --enable-version-specific-runtime-libs or --disable-version-specific-runtime-libs was given.\n if test \"${enable_version_specific_runtime_libs+set}\" = set; then\n   enableval=\"$enable_version_specific_runtime_libs\"\n@@ -23842,7 +23830,7 @@ if test x\"$glibcxx_toolexecdir\" = x\"no\"; then\n fi\n \n echo $ac_n \"checking for install location\"\"... $ac_c\" 1>&6\n-echo \"configure:23846: checking for install location\" >&5\n+echo \"configure:23834: checking for install location\" >&5\n echo \"$ac_t\"\"$gxx_include_dir\" 1>&6\n \n \n@@ -24126,6 +24114,7 @@ s%@OPT_LDFLAGS@%$OPT_LDFLAGS%g\n s%@LIBMATHOBJS@%$LIBMATHOBJS%g\n s%@WERROR@%$WERROR%g\n s%@SYMVER_MAP@%$SYMVER_MAP%g\n+s%@port_specific_symbol_file@%$port_specific_symbol_file%g\n s%@GLIBCXX_BUILD_VERSIONED_SHLIB_TRUE@%$GLIBCXX_BUILD_VERSIONED_SHLIB_TRUE%g\n s%@GLIBCXX_BUILD_VERSIONED_SHLIB_FALSE@%$GLIBCXX_BUILD_VERSIONED_SHLIB_FALSE%g\n s%@baseline_dir@%$baseline_dir%g"}, {"sha": "763324d9ae708c663118e21933b24a5b97f0a276", "filename": "libstdc++-v3/configure.host", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6b7a69ab66f49a531ff8d2b56a72eca31676435/libstdc%2B%2B-v3%2Fconfigure.host", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6b7a69ab66f49a531ff8d2b56a72eca31676435/libstdc%2B%2B-v3%2Fconfigure.host", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure.host?ref=e6b7a69ab66f49a531ff8d2b56a72eca31676435", "patch": "@@ -41,6 +41,11 @@\n #                          the form '-Wl,blah'\n #                          (defaults to empty in acinclude.m4)\n #\n+#   port_specific_symbol_file\n+#                          whitespace-seperated list of files containing\n+#                              additional symbols to export from the shared\n+#                              library, when symbol versioning is in use\n+#\n #\n # If the defaults will not work for your platform, you need only change the\n # variables that won't work, i.e., you do not need to explicitly set a\n@@ -66,7 +71,7 @@ case \"${host_cpu}\" in\n   alpha*)\n     try_cpu=alpha\n     ;;\n-  athlon* | i586 | i686 | i786 | x86_64)\n+  i[567]86 | x86_64)\n     try_cpu=i486\n     ;;\n   hppa*)"}, {"sha": "fb4682c8c2c9f716253a29cae7a33d40d98a0efc", "filename": "libstdc++-v3/docs/html/17_intro/porting.html", "status": "modified", "additions": 21, "deletions": 21, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6b7a69ab66f49a531ff8d2b56a72eca31676435/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Fporting.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6b7a69ab66f49a531ff8d2b56a72eca31676435/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Fporting.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Fporting.html?ref=e6b7a69ab66f49a531ff8d2b56a72eca31676435", "patch": "@@ -6,7 +6,7 @@\n <meta name=\"generator\" content=\"makeinfo 4.3\">\n <link href=\"http://www.gnu.org/software/texinfo/\" rel=\"generator-home\">\n <!--\n-Copyright &copy; 2000, 2001, 2002 Free Software Foundation, Inc.\n+Copyright &copy; 2000, 2001, 2002, 2003 Free Software Foundation, Inc.\n \n    <p>Permission is granted to copy, distribute and/or modify this document\n under the terms of the GNU Free Documentation License, Version 1.2 or\n@@ -56,6 +56,9 @@ <h2 class=\"unnumbered\">Porting libstdc++-v3</h2>\n works.  It is difficult to test the C++ compiler without a working\n library, but you should at least try some minimal test cases.\n \n+   <p>(Note that what we think of as a \"target,\" the library refers to as\n+a \"host.\"  The comment at the top of <code>configure.in</code> explains why.)\n+\n    <p>Here are the primary steps required to port the library:\n \n <ul class=\"menu\">\n@@ -92,7 +95,7 @@ <h2 class=\"chapter\">Operating system</h2>\n directory under <code>config/os</code> to store the files for your operating\n system.\n \n-   <p>You might have to change the <code>configure.target</code> file to ensure that\n+   <p>You might have to change the <code>configure.host</code> file to ensure that\n your new directory is activated.  Look for the switch statement that sets\n <code>os_include_dir</code>, and add a pattern to handle your operating system\n if the default will not suffice.  The switch statement switches on only\n@@ -134,54 +137,51 @@ <h2 class=\"chapter\">Operating system</h2>\n target.  It will not work to simply define these macros in\n <code>os_defines.h</code>.\n \n-   <p>At this time, there are a few libstdc++-v3-specific macro which may be\n-defined.  <code>_G_USING_THUNKS</code> may be defined to 0 to express that the\n-port doesn't use thunks (although it is unclear that this is still\n-useful since libio support isn't currently working and the g++ v3 ABI\n-invalidates the assumption that some ports don't use thunks).\n+   <p>At this time, there are a few libstdc++-v3-specific macros which may be\n+defined:\n \n-   <p><code>_GLIBCPP_USE_C99_CHECK</code> may be defined to 1 to check C99\n+   <p><code>_GLIBCXX_USE_C99_CHECK</code> may be defined to 1 to check C99\n function declarations (which are not covered by specialization below)\n found in system headers against versions found in the library headers\n derived from the standard.\n \n-   <p><code>_GLIBCPP_USE_C99_DYNAMIC</code> may be defined to an expression that\n+   <p><code>_GLIBCXX_USE_C99_DYNAMIC</code> may be defined to an expression that\n yields 0 if and only if the system headers are exposing proper support\n for C99 functions (which are not covered by specialization below).  If\n defined, it must be 0 while bootstrapping the compiler/rebuilding the\n library.\n \n-   <p><code>_GLIBCPP_USE_C99_LONG_LONG_CHECK</code> may be defined to 1 to check\n+   <p><code>_GLIBCXX_USE_C99_LONG_LONG_CHECK</code> may be defined to 1 to check\n the set of C99 long long function declarations found in system headers\n against versions found in the library headers derived from the\n standard.\n \n-   <p><code>_GLIBCPP_USE_C99_LONG_LONG_DYNAMIC</code> may be defined to an\n+   <p><code>_GLIBCXX_USE_C99_LONG_LONG_DYNAMIC</code> may be defined to an\n expression that yields 0 if and only if the system headers are\n exposing proper support for the set of C99 long long functions.  If\n defined, it must be 0 while bootstrapping the compiler/rebuilding the\n library.\n \n-   <p><code>_GLIBCPP_USE_C99_FP_MACROS_DYNAMIC</code> may be defined to an\n+   <p><code>_GLIBCXX_USE_C99_FP_MACROS_DYNAMIC</code> may be defined to an\n expression that yields 0 if and only if the system headers\n are exposing proper support for the related set of macros.  If defined,\n it must be 0 while bootstrapping the compiler/rebuilding the library.\n \n-   <p><code>_GLIBCPP_USE_C99_FLOAT_TRANSCENDENTALS_CHECK</code> may be defined\n+   <p><code>_GLIBCXX_USE_C99_FLOAT_TRANSCENDENTALS_CHECK</code> may be defined\n to 1 to check the related set of function declarations found in system\n headers against versions found in the library headers derived from\n the standard.\n \n-   <p><code>_GLIBCPP_USE_C99_FLOAT_TRANSCENDENTALS_DYNAMIC</code> may be defined\n+   <p><code>_GLIBCXX_USE_C99_FLOAT_TRANSCENDENTALS_DYNAMIC</code> may be defined\n to an expression that yields 0 if and only if the system headers\n are exposing proper support for the related set of functions.  If defined,\n it must be 0 while bootstrapping the compiler/rebuilding the library.\n \n    <p>Finally, you should bracket the entire file in an include-guard, like\n this:\n \n-<pre class=\"example\">     #ifndef _GLIBCPP_OS_DEFINES\n-     #define _GLIBCPP_OS_DEFINES\n+<pre class=\"example\">     #ifndef _GLIBCXX_OS_DEFINES\n+     #define _GLIBCXX_OS_DEFINES\n      ...\n      #endif\n      </pre>\n@@ -209,14 +209,14 @@ <h2 class=\"chapter\">CPU</h2>\n \n    <p>We recommend that for a target triplet <code>&lt;CPU&gt;-&lt;vendor&gt;-&lt;OS&gt;</code>, you\n name your configuration directory <code>config/cpu/&lt;CPU&gt;</code>.  If you do this,\n-the configury will find the directory itself.  Otherwise you will need to\n-edit the <code>configure.target</code> file and, in the switch statement that sets\n+the configury will find the directory by itself.  Otherwise you will need to\n+edit the <code>configure.host</code> file and, in the switch statement that sets\n <code>cpu_include_dir</code>, add a pattern to handle your chip.\n \n    <p>Note that some chip families share a single configuration directory, for\n example, <code>alpha</code>, <code>alphaev5</code>, and <code>alphaev6</code> all use the\n <code>config/cpu/alpha</code> directory, and there is an entry in the\n-<code>configure.target</code> switch statement to handle this.\n+<code>configure.host</code> switch statement to handle this.\n \n    <p>The <code>cpu_include_dir</code> sets default locations for the files controlling\n <a href=\"#Thread%20safety\">Thread safety</a> and <a href=\"#Numeric%20limits\">Numeric limits</a>, if the defaults are not\n@@ -456,14 +456,14 @@ <h2 class=\"chapter\">Thread safety</h2>\n    <p>Alternatively, if the primitives are more closely related to the OS\n than they are to the CPU, you can put the <code>atomicity.h</code> file in\n the <a href=\"#Operating%20system\">Operating system</a> directory instead.  In this case, you must\n-edit <code>configure.target</code>, and in the switch statement that handles\n+edit <code>configure.host</code>, and in the switch statement that handles\n operating systems, override the <code>ATOMICITYH</code> variable to point to\n the appropriate <code>os_include_dir</code>.  For examples of this approach,\n see the <code>atomicity.h</code> file for AIX.\n \n    <p>With those bits out of the way, you have to actually write\n <code>atomicity.h</code> itself.  This file should be wrapped in an\n-include guard named <code>_BITS_ATOMICITY_H</code>.  It should define one\n+include guard named <code>_GLIBCXX_ATOMICITY_H</code>.  It should define one\n type, and two functions.\n \n    <p>The type is <code>_Atomic_word</code>.  Here is the version used on IRIX:"}, {"sha": "ed4042f932d3f967184cc95623e7b5897c3b6f37", "filename": "libstdc++-v3/docs/html/17_intro/porting.texi", "status": "modified", "additions": 21, "deletions": 21, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6b7a69ab66f49a531ff8d2b56a72eca31676435/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Fporting.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6b7a69ab66f49a531ff8d2b56a72eca31676435/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Fporting.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Fporting.texi?ref=e6b7a69ab66f49a531ff8d2b56a72eca31676435", "patch": "@@ -9,7 +9,7 @@\n @setchapternewpage odd\n \n @copying\n-Copyright @copyright{} 2000, 2001, 2002 Free Software Foundation, Inc.\n+Copyright @copyright{} 2000, 2001, 2002, 2003 Free Software Foundation, Inc.\n \n Permission is granted to copy, distribute and/or modify this document\n under the terms of the GNU Free Documentation License, Version 1.2 or\n@@ -74,6 +74,9 @@ In addition, you should try to verify that the C++ compiler generally\n works.  It is difficult to test the C++ compiler without a working\n library, but you should at least try some minimal test cases.\n \n+(Note that what we think of as a ``target,'' the library refers to as\n+a ``host.''  The comment at the top of @file{configure.in} explains why.)\n+\n Here are the primary steps required to port the library:\n \n @menu\n@@ -106,7 +109,7 @@ directory.  The important information is that there needs to be a\n directory under @file{config/os} to store the files for your operating\n system.\n \n-You might have to change the @file{configure.target} file to ensure that\n+You might have to change the @file{configure.host} file to ensure that\n your new directory is activated.  Look for the switch statement that sets\n @code{os_include_dir}, and add a pattern to handle your operating system\n if the default will not suffice.  The switch statement switches on only\n@@ -150,45 +153,42 @@ need to define.  You will need to add them to the\n target.  It will not work to simply define these macros in\n @file{os_defines.h}.\n \n-At this time, there are a few libstdc++-v3-specific macro which may be\n-defined.  @code{_G_USING_THUNKS} may be defined to 0 to express that the\n-port doesn't use thunks (although it is unclear that this is still\n-useful since libio support isn't currently working and the g++ v3 ABI\n-invalidates the assumption that some ports don't use thunks).\n+At this time, there are a few libstdc++-v3-specific macros which may be\n+defined:\n \n-@code{_GLIBCPP_USE_C99_CHECK} may be defined to 1 to check C99\n+@code{_GLIBCXX_USE_C99_CHECK} may be defined to 1 to check C99\n function declarations (which are not covered by specialization below)\n found in system headers against versions found in the library headers\n derived from the standard.\n \n-@code{_GLIBCPP_USE_C99_DYNAMIC} may be defined to an expression that\n+@code{_GLIBCXX_USE_C99_DYNAMIC} may be defined to an expression that\n yields 0 if and only if the system headers are exposing proper support\n for C99 functions (which are not covered by specialization below).  If\n defined, it must be 0 while bootstrapping the compiler/rebuilding the\n library.\n \n-@code{_GLIBCPP_USE_C99_LONG_LONG_CHECK} may be defined to 1 to check\n+@code{_GLIBCXX_USE_C99_LONG_LONG_CHECK} may be defined to 1 to check\n the set of C99 long long function declarations found in system headers\n against versions found in the library headers derived from the\n standard.\n \n-@code{_GLIBCPP_USE_C99_LONG_LONG_DYNAMIC} may be defined to an\n+@code{_GLIBCXX_USE_C99_LONG_LONG_DYNAMIC} may be defined to an\n expression that yields 0 if and only if the system headers are\n exposing proper support for the set of C99 long long functions.  If\n defined, it must be 0 while bootstrapping the compiler/rebuilding the\n library.\n \n-@code{_GLIBCPP_USE_C99_FP_MACROS_DYNAMIC} may be defined to an\n+@code{_GLIBCXX_USE_C99_FP_MACROS_DYNAMIC} may be defined to an\n expression that yields 0 if and only if the system headers\n are exposing proper support for the related set of macros.  If defined,\n it must be 0 while bootstrapping the compiler/rebuilding the library.\n \n-@code{_GLIBCPP_USE_C99_FLOAT_TRANSCENDENTALS_CHECK} may be defined\n+@code{_GLIBCXX_USE_C99_FLOAT_TRANSCENDENTALS_CHECK} may be defined\n to 1 to check the related set of function declarations found in system\n headers against versions found in the library headers derived from\n the standard.\n \n-@code{_GLIBCPP_USE_C99_FLOAT_TRANSCENDENTALS_DYNAMIC} may be defined\n+@code{_GLIBCXX_USE_C99_FLOAT_TRANSCENDENTALS_DYNAMIC} may be defined\n to an expression that yields 0 if and only if the system headers\n are exposing proper support for the related set of functions.  If defined,\n it must be 0 while bootstrapping the compiler/rebuilding the library.\n@@ -197,8 +197,8 @@ Finally, you should bracket the entire file in an include-guard, like\n this:\n \n @example\n-#ifndef _GLIBCPP_OS_DEFINES\n-#define _GLIBCPP_OS_DEFINES\n+#ifndef _GLIBCXX_OS_DEFINES\n+#define _GLIBCXX_OS_DEFINES\n ...\n #endif\n @end example\n@@ -222,14 +222,14 @@ setup files without explicit help.\n \n We recommend that for a target triplet @code{<CPU>-<vendor>-<OS>}, you\n name your configuration directory @file{config/cpu/<CPU>}.  If you do this,\n-the configury will find the directory itself.  Otherwise you will need to\n-edit the @file{configure.target} file and, in the switch statement that sets\n+the configury will find the directory by itself.  Otherwise you will need to\n+edit the @file{configure.host} file and, in the switch statement that sets\n @code{cpu_include_dir}, add a pattern to handle your chip.\n \n Note that some chip families share a single configuration directory, for\n example, @code{alpha}, @code{alphaev5}, and @code{alphaev6} all use the\n @file{config/cpu/alpha} directory, and there is an entry in the\n-@file{configure.target} switch statement to handle this.\n+@file{configure.host} switch statement to handle this.\n \n The @code{cpu_include_dir} sets default locations for the files controlling\n @ref{Thread safety} and @ref{Numeric limits}, if the defaults are not\n@@ -474,14 +474,14 @@ see the @file{atomicity.h} file for IRIX or IA64.\n Alternatively, if the primitives are more closely related to the OS\n than they are to the CPU, you can put the @file{atomicity.h} file in\n the @ref{Operating system} directory instead.  In this case, you must\n-edit @file{configure.target}, and in the switch statement that handles\n+edit @file{configure.host}, and in the switch statement that handles\n operating systems, override the @code{ATOMICITYH} variable to point to\n the appropriate @code{os_include_dir}.  For examples of this approach,\n see the @file{atomicity.h} file for AIX.\n \n With those bits out of the way, you have to actually write\n @file{atomicity.h} itself.  This file should be wrapped in an\n-include guard named @code{_BITS_ATOMICITY_H}.  It should define one\n+include guard named @code{_GLIBCXX_ATOMICITY_H}.  It should define one\n type, and two functions.  \n \n The type is @code{_Atomic_word}.  Here is the version used on IRIX:"}, {"sha": "72f7cbdb50bd40c04ec4daa18f202b916daa5545", "filename": "libstdc++-v3/src/Makefile.am", "status": "modified", "additions": 17, "deletions": 10, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6b7a69ab66f49a531ff8d2b56a72eca31676435/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6b7a69ab66f49a531ff8d2b56a72eca31676435/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am?ref=e6b7a69ab66f49a531ff8d2b56a72eca31676435", "patch": "@@ -37,9 +37,16 @@ toolexeclib_LTLIBRARIES = libstdc++.la\n \n # Symbol versioning for shared libraries.\n if GLIBCXX_BUILD_VERSIONED_SHLIB\n+port_specific_symbol_file = @port_specific_symbol_file@\n version_arg = -Wl,--version-script=libstdc++-symbol.ver\n libstdc++-symbol.ver:  ${glibcxx_srcdir}/@SYMVER_MAP@\n-\t@LN_S@  ${glibcxx_srcdir}/@SYMVER_MAP@ ./libstdc++-symbol.ver || true\n+\tcp ${glibcxx_srcdir}/@SYMVER_MAP@ ./libstdc++-symbol.ver\n+\tif test \"x${port_specific_symbol_file}\" != x; then \\\n+\t  sed -n '1,/DO NOT DELETE/p' $@ > tmp.top; \\\n+\t  sed -n '/DO NOT DELETE/,$$p' $@ > tmp.bottom; \\\n+\t  cat tmp.top $(port_specific_symbol_file) tmp.bottom > $@; \\\n+\t  rm tmp.top tmp.bottom; \\\n+\tfi\n else\n version_arg =\n libstdc++-symbol.ver:\n@@ -106,7 +113,7 @@ time_members.cc: ${glibcxx_srcdir}/@CTIME_CC@\n # particular host, but with ad hoc naming rules.\n host_sources_extra = \\\n \tbasic_file.cc \\\n-\tc++locale.cc \n+\tc++locale.cc\n \n c++locale.cc: ${glibcxx_srcdir}/@CLOCALE_CC@\n \t@LN_S@ ${glibcxx_srcdir}/@CLOCALE_CC@ ./$@ || true\n@@ -157,7 +164,7 @@ libstdc___la_DEPENDENCIES = libstdc++-symbol.ver $(libstdc___la_LIBADD)\n \n libstdc___la_LDFLAGS = \\\n \t-version-info @libtool_VERSION@ ${version_arg} \\\n-\t-lm @LIBUNWIND_FLAG@ \n+\t-lm @LIBUNWIND_FLAG@\n \n \n # Use special rules for the deprecated source files so that they find\n@@ -188,13 +195,13 @@ demangle.o: demangle.cc\n # modified in a per-library or per-sub-library way.  Need to manually\n # set this option because CONFIG_CXXFLAGS has to be after\n # OPTIMIZE_CXXFLAGS on the compile line so that -O2 can be overridden\n-# as the occasion call for it. \n+# as the occasion calls for it.\n AM_CXXFLAGS = \\\n \t-fno-implicit-templates \\\n \t$(LIBSUPCXX_CXXFLAGS) \\\n \t$(WARN_CXXFLAGS) \\\n \t$(OPTIMIZE_CXXFLAGS) \\\n-\t$(CONFIG_CXXFLAGS)  \n+\t$(CONFIG_CXXFLAGS)\n \n \n # libstdc++ libtool notes\n@@ -216,7 +223,7 @@ AM_CXXFLAGS = \\\n # CXXLINK, just after $(LIBTOOL), so that libtool doesn't have to\n # attempt to infer which configuration to use\n LTCXXCOMPILE = $(LIBTOOL) --tag CXX --mode=compile $(CXX) $(INCLUDES) \\\n-\t       $(AM_CPPFLAGS) $(CPPFLAGS) $(CXXFLAGS) $(AM_CXXFLAGS) \n+\t       $(AM_CPPFLAGS) $(CPPFLAGS) $(CXXFLAGS) $(AM_CXXFLAGS)\n \n # 3) We'd have a problem when building the shared libstdc++ object if\n # the rules automake generates would be used.  We cannot allow g++ to\n@@ -234,13 +241,13 @@ all-local: build_debug\n install-data-local: install_debug\n else\n all-local:\n-install-data-local: \n+install-data-local:\n endif\n \n debugdir = debug\n \n # Build parallel set of debug objects here.\n-stamp-debug: \n+stamp-debug:\n \tif test ! -d ${debugdir}; then \\\n \t  mkdir -p ${debugdir}; \\\n \t  (cd ${debugdir}; \\\n@@ -251,12 +258,12 @@ stamp-debug:\n \t      -e 's/install-data-local: install_debug/install-data-local:/' \\\n \t  < ../Makefile > Makefile) ; \\\n \tfi; \\\n-\techo `date` > stamp-debug; \n+\techo `date` > stamp-debug;\n \n build_debug: stamp-debug\n \t(cd ${debugdir} && $(MAKE) CXXFLAGS='@DEBUG_FLAGS@' all)\n \n # Install debug library here.\n-install_debug: \n+install_debug:\n \t(cd ${debugdir} && $(MAKE) \\\n \ttoolexeclibdir=@glibcxx_toolexeclibdir@/debug install)"}, {"sha": "9062d7ccb1002ccf42ab76687e02fab1171e5aa1", "filename": "libstdc++-v3/src/Makefile.in", "status": "modified", "additions": 29, "deletions": 74, "changes": 103, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6b7a69ab66f49a531ff8d2b56a72eca31676435/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6b7a69ab66f49a531ff8d2b56a72eca31676435/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in?ref=e6b7a69ab66f49a531ff8d2b56a72eca31676435", "patch": "@@ -147,7 +147,10 @@ glibcxx_builddir = @glibcxx_builddir@\n toolexecdir = @glibcxx_toolexecdir@\n toolexeclibdir = @glibcxx_toolexeclibdir@\n toolexeclib_LTLIBRARIES = libstdc++.la\n-@GLIBCXX_BUILD_VERSIONED_SHLIB_TRUE@version_arg = @GLIBCXX_BUILD_VERSIONED_SHLIB_TRUE@-Wl,--version-script=libstdc++-symbol.ver\n+\n+# Symbol versioning for shared libraries.\n+@GLIBCXX_BUILD_VERSIONED_SHLIB_TRUE@port_specific_symbol_file = @port_specific_symbol_file@\n+@GLIBCXX_BUILD_VERSIONED_SHLIB_TRUE@version_arg = -Wl,--version-script=libstdc++-symbol.ver\n @GLIBCXX_BUILD_VERSIONED_SHLIB_FALSE@version_arg = \n \n # Compile flags that should be constant throughout the build, both for\n@@ -156,13 +159,11 @@ OPTIMIZE_CXXFLAGS = @OPTIMIZE_CXXFLAGS@\n \n # These bits are all figured out from configure. Look in acinclude.m4\n # or configure.in to see how they are set. See GLIBCXX_EXPORT_FLAGS\n-CONFIG_CXXFLAGS = \\\n-\t@SECTION_FLAGS@ @EXTRA_CXX_FLAGS@\n+CONFIG_CXXFLAGS =  \t@SECTION_FLAGS@ @EXTRA_CXX_FLAGS@\n \n \n # Warning flags to use.\n-WARN_CXXFLAGS = \\\n-\t@WARN_FLAGS@ $(WERROR) -fdiagnostics-show-location=once\n+WARN_CXXFLAGS =  \t@WARN_FLAGS@ $(WERROR) -fdiagnostics-show-location=once\n \n \n # Use common includes from acinclude.m4/GLIBCXX_EXPORT_INCLUDES\n@@ -171,78 +172,33 @@ LIBMATH_INCLUDES = @LIBMATH_INCLUDES@\n LIBSUPCXX_INCLUDES = @LIBSUPCXX_INCLUDES@\n TOPLEVEL_INCLUDES = @TOPLEVEL_INCLUDES@\n \n-INCLUDES = \\\n-\t-nostdinc++ \\\n-\t$(GLIBCXX_INCLUDES) \\\n-\t$(LIBSUPCXX_INCLUDES) $(LIBMATH_INCLUDES) \\\n-\t$(TOPLEVEL_INCLUDES)\n+INCLUDES =  \t-nostdinc++ \t$(GLIBCXX_INCLUDES) \t$(LIBSUPCXX_INCLUDES) $(LIBMATH_INCLUDES) \t$(TOPLEVEL_INCLUDES)\n \n \n # Source files linked in via configuration/make substitution for a\n # particular host.\n-host_sources = \\\n-\tcodecvt_members.cc \\\n-\tcollate_members.cc \\\n-\tctype_members.cc \\\n-\tmessages_members.cc \\\n-\tmonetary_members.cc \\\n-\tnumeric_members.cc \\\n-\ttime_members.cc\n+host_sources =  \tcodecvt_members.cc \tcollate_members.cc \tctype_members.cc \tmessages_members.cc \tmonetary_members.cc \tnumeric_members.cc \ttime_members.cc\n \n \n # Source files linked in via configuration/make substitution for a\n # particular host, but with ad hoc naming rules.\n-host_sources_extra = \\\n-\tbasic_file.cc \\\n-\tc++locale.cc \n+host_sources_extra =  \tbasic_file.cc \tc++locale.cc\n \n \n # Sources present in the src directory.\n-sources = \\\n-\tallocator-inst.cc \\\n-\tcodecvt.cc \\\n-\tcomplex_io.cc \\\n-\tconcept-inst.cc \\\n-\tctype.cc \\\n-\tdemangle.cc \\\n-\text-inst.cc \\\n-\tfstream-inst.cc \\\n-\tfunctexcept.cc \\\n-\tglobals.cc \\\n-\tio-inst.cc \\\n-\tios.cc \\\n-\tistream-inst.cc \\\n-\tlimits.cc \\\n-\tlocale.cc \\\n-\tlocale-inst.cc \\\n-\tlocalename.cc \\\n-\tmisc-inst.cc \\\n-\tostream-inst.cc \\\n-\tsstream-inst.cc \\\n-\tstdexcept.cc \\\n-\tstreambuf-inst.cc \\\n-\tstring-inst.cc \\\n-\tstrstream.cc \\\n-\tvalarray-inst.cc \\\n-\twstring-inst.cc \\\n-\t${host_sources} \\\n-\t${host_sources_extra}\n+sources =  \tallocator-inst.cc \tcodecvt.cc \tcomplex_io.cc \tconcept-inst.cc \tctype.cc \tdemangle.cc \text-inst.cc \tfstream-inst.cc \tfunctexcept.cc \tglobals.cc \tio-inst.cc \tios.cc \tistream-inst.cc \tlimits.cc \tlocale.cc \tlocale-inst.cc \tlocalename.cc \tmisc-inst.cc \tostream-inst.cc \tsstream-inst.cc \tstdexcept.cc \tstreambuf-inst.cc \tstring-inst.cc \tstrstream.cc \tvalarray-inst.cc \twstring-inst.cc \t${host_sources} \t${host_sources_extra}\n \n \n VPATH = $(top_srcdir)/src:$(top_srcdir)\n \n libstdc___la_SOURCES = $(sources)\n \n-libstdc___la_LIBADD = \\\n-\t$(top_builddir)/libmath/libmath.la \\\n-\t$(top_builddir)/libsupc++/libsupc++convenience.la\n+libstdc___la_LIBADD =  \t$(top_builddir)/libmath/libmath.la \t$(top_builddir)/libsupc++/libsupc++convenience.la\n \n \n libstdc___la_DEPENDENCIES = libstdc++-symbol.ver $(libstdc___la_LIBADD)\n \n-libstdc___la_LDFLAGS = \\\n-\t-version-info @libtool_VERSION@ ${version_arg} \\\n-\t-lm @LIBUNWIND_FLAG@ \n+libstdc___la_LDFLAGS =  \t-version-info @libtool_VERSION@ ${version_arg} \t-lm @LIBUNWIND_FLAG@\n \n \n # Use special rules for the deprecated source files so that they find\n@@ -253,13 +209,8 @@ GLIBCXX_INCLUDE_DIR = @glibcxx_builddir@/include\n # modified in a per-library or per-sub-library way.  Need to manually\n # set this option because CONFIG_CXXFLAGS has to be after\n # OPTIMIZE_CXXFLAGS on the compile line so that -O2 can be overridden\n-# as the occasion call for it. \n-AM_CXXFLAGS = \\\n-\t-fno-implicit-templates \\\n-\t$(LIBSUPCXX_CXXFLAGS) \\\n-\t$(WARN_CXXFLAGS) \\\n-\t$(OPTIMIZE_CXXFLAGS) \\\n-\t$(CONFIG_CXXFLAGS)  \n+# as the occasion calls for it.\n+AM_CXXFLAGS =  \t-fno-implicit-templates \t$(LIBSUPCXX_CXXFLAGS) \t$(WARN_CXXFLAGS) \t$(OPTIMIZE_CXXFLAGS) \t$(CONFIG_CXXFLAGS)\n \n \n # libstdc++ libtool notes\n@@ -280,8 +231,7 @@ AM_CXXFLAGS = \\\n # correct solution is to add `--tag CXX' to LTCXXCOMPILE and maybe\n # CXXLINK, just after $(LIBTOOL), so that libtool doesn't have to\n # attempt to infer which configuration to use\n-LTCXXCOMPILE = $(LIBTOOL) --tag CXX --mode=compile $(CXX) $(INCLUDES) \\\n-\t       $(AM_CPPFLAGS) $(CPPFLAGS) $(CXXFLAGS) $(AM_CXXFLAGS) \n+LTCXXCOMPILE = $(LIBTOOL) --tag CXX --mode=compile $(CXX) $(INCLUDES) \t       $(AM_CPPFLAGS) $(CPPFLAGS) $(CXXFLAGS) $(AM_CXXFLAGS)\n \n \n # 3) We'd have a problem when building the shared libstdc++ object if\n@@ -290,8 +240,7 @@ LTCXXCOMPILE = $(LIBTOOL) --tag CXX --mode=compile $(CXX) $(INCLUDES) \\\n # course is problematic at this point.  So, we get the top-level\n # directory to configure libstdc++-v3 to use gcc as the C++\n # compilation driver.\n-CXXLINK = $(LIBTOOL) --tag CXX --mode=link $(CXX) \\\n-\t  @OPT_LDFLAGS@ @SECTION_LDFLAGS@ $(AM_CXXFLAGS) $(LDFLAGS) -o $@\n+CXXLINK = $(LIBTOOL) --tag CXX --mode=link $(CXX) \t  @OPT_LDFLAGS@ @SECTION_LDFLAGS@ $(AM_CXXFLAGS) $(LDFLAGS) -o $@\n \n \n debugdir = debug\n@@ -321,7 +270,7 @@ DIST_COMMON =  Makefile.am Makefile.in\n \n DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)\n \n-TAR = gtar\n+TAR = tar\n GZIP_ENV = --best\n SOURCES = $(libstdc___la_SOURCES)\n OBJECTS = $(libstdc___la_OBJECTS)\n@@ -433,7 +382,7 @@ TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) $(LISP)\n \t  awk '    { files[$$0] = 1; } \\\n \t       END { for (i in files) print i; }'`; \\\n \ttest -z \"$(ETAGS_ARGS)$$unique$(LISP)$$tags\" \\\n-\t  || (cd $(srcdir) && etags $(ETAGS_ARGS) $$tags  $$unique $(LISP) -o $$here/TAGS)\n+\t  || (cd $(srcdir) && etags -o $$here/TAGS $(ETAGS_ARGS) $$tags  $$unique $(LISP))\n \n mostlyclean-tags:\n \n@@ -540,7 +489,13 @@ distclean-generic clean-generic maintainer-clean-generic clean \\\n mostlyclean distclean maintainer-clean\n \n @GLIBCXX_BUILD_VERSIONED_SHLIB_TRUE@libstdc++-symbol.ver:  ${glibcxx_srcdir}/@SYMVER_MAP@\n-@GLIBCXX_BUILD_VERSIONED_SHLIB_TRUE@\t@LN_S@  ${glibcxx_srcdir}/@SYMVER_MAP@ ./libstdc++-symbol.ver || true\n+@GLIBCXX_BUILD_VERSIONED_SHLIB_TRUE@\tcp ${glibcxx_srcdir}/@SYMVER_MAP@ ./libstdc++-symbol.ver\n+@GLIBCXX_BUILD_VERSIONED_SHLIB_TRUE@\tif test \"x${port_specific_symbol_file}\" != x; then \\\n+@GLIBCXX_BUILD_VERSIONED_SHLIB_TRUE@\t  sed -n '1,/DO NOT DELETE/p' $@ > tmp.top; \\\n+@GLIBCXX_BUILD_VERSIONED_SHLIB_TRUE@\t  sed -n '/DO NOT DELETE/,$$p' $@ > tmp.bottom; \\\n+@GLIBCXX_BUILD_VERSIONED_SHLIB_TRUE@\t  cat tmp.top $(port_specific_symbol_file) tmp.bottom > $@; \\\n+@GLIBCXX_BUILD_VERSIONED_SHLIB_TRUE@\t  rm tmp.top tmp.bottom; \\\n+@GLIBCXX_BUILD_VERSIONED_SHLIB_TRUE@\tfi\n @GLIBCXX_BUILD_VERSIONED_SHLIB_FALSE@libstdc++-symbol.ver:\n \n codecvt_members.cc: ${glibcxx_srcdir}/@CCODECVT_CC@\n@@ -593,10 +548,10 @@ demangle.o: demangle.cc\n @GLIBCXX_BUILD_DEBUG_TRUE@all-local: build_debug\n @GLIBCXX_BUILD_DEBUG_TRUE@install-data-local: install_debug\n @GLIBCXX_BUILD_DEBUG_FALSE@all-local:\n-@GLIBCXX_BUILD_DEBUG_FALSE@install-data-local: \n+@GLIBCXX_BUILD_DEBUG_FALSE@install-data-local:\n \n # Build parallel set of debug objects here.\n-stamp-debug: \n+stamp-debug:\n \tif test ! -d ${debugdir}; then \\\n \t  mkdir -p ${debugdir}; \\\n \t  (cd ${debugdir}; \\\n@@ -607,13 +562,13 @@ stamp-debug:\n \t      -e 's/install-data-local: install_debug/install-data-local:/' \\\n \t  < ../Makefile > Makefile) ; \\\n \tfi; \\\n-\techo `date` > stamp-debug; \n+\techo `date` > stamp-debug;\n \n build_debug: stamp-debug\n \t(cd ${debugdir} && $(MAKE) CXXFLAGS='@DEBUG_FLAGS@' all)\n \n # Install debug library here.\n-install_debug: \n+install_debug:\n \t(cd ${debugdir} && $(MAKE) \\\n \ttoolexeclibdir=@glibcxx_toolexeclibdir@/debug install)\n "}]}