{"sha": "e9186fbe67cc6de61ac858e3e3ed0259d61635bb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTkxODZmYmU2N2NjNmRlNjFhYzg1OGUzZTNlZDAyNTlkNjE2MzViYg==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2006-07-12T17:00:49Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2006-07-12T17:00:49Z"}, "message": "re PR libgcj/27271 (i/o error (java.util.zip.ZipException: Deflated stream ends early.))\n\n\tPR libgcj/27271:\n\t* java/util/zip/ZipFile.java (getInputStream): Call addDummyByte\n\ton PartialInputStream.\n\t(PartialInputStream.dummyByteCount): New field.\n\t(PartialInputStream.fillBuffer): Handle dummy byte.\n\t(PartialInputStream.read): Likewise.\n\t(PartialInputStream.addDummyByte): New method.\n\nFrom-SVN: r115378", "tree": {"sha": "52cea91df9c54af730703326dbdbdab4947f5b41", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/52cea91df9c54af730703326dbdbdab4947f5b41"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e9186fbe67cc6de61ac858e3e3ed0259d61635bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9186fbe67cc6de61ac858e3e3ed0259d61635bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9186fbe67cc6de61ac858e3e3ed0259d61635bb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9186fbe67cc6de61ac858e3e3ed0259d61635bb/comments", "author": null, "committer": null, "parents": [{"sha": "93e890688cd5072dde2851845f3d9a469de34751", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93e890688cd5072dde2851845f3d9a469de34751", "html_url": "https://github.com/Rust-GCC/gccrs/commit/93e890688cd5072dde2851845f3d9a469de34751"}], "stats": {"total": 40, "additions": 35, "deletions": 5}, "files": [{"sha": "55eab669cb94351284909de3615e6edc96ac8b8d", "filename": "libjava/classpath/ChangeLog.gcj", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9186fbe67cc6de61ac858e3e3ed0259d61635bb/libjava%2Fclasspath%2FChangeLog.gcj", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9186fbe67cc6de61ac858e3e3ed0259d61635bb/libjava%2Fclasspath%2FChangeLog.gcj", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2FChangeLog.gcj?ref=e9186fbe67cc6de61ac858e3e3ed0259d61635bb", "patch": "@@ -1,3 +1,13 @@\n+2006-07-12  Tom Tromey  <tromey@redhat.com>\n+\n+\tPR libgcj/27271:\n+\t* java/util/zip/ZipFile.java (getInputStream): Call addDummyByte\n+\ton PartialInputStream.\n+\t(PartialInputStream.dummyByteCount): New field.\n+\t(PartialInputStream.fillBuffer): Handle dummy byte.\n+\t(PartialInputStream.read): Likewise.\n+\t(PartialInputStream.addDummyByte): New method.\n+\n 2006-06-14  Tom Tromey  <tromey@redhat.com>\n \n \tPR java/28024:"}, {"sha": "10c8365b833d1706b553c963d3aef665f2704ae2", "filename": "libjava/classpath/java/util/zip/ZipFile.java", "status": "modified", "additions": 25, "deletions": 5, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9186fbe67cc6de61ac858e3e3ed0259d61635bb/libjava%2Fclasspath%2Fjava%2Futil%2Fzip%2FZipFile.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9186fbe67cc6de61ac858e3e3ed0259d61635bb/libjava%2Fclasspath%2Fjava%2Futil%2Fzip%2FZipFile.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Futil%2Fzip%2FZipFile.java?ref=e9186fbe67cc6de61ac858e3e3ed0259d61635bb", "patch": "@@ -445,6 +445,7 @@ public InputStream getInputStream(ZipEntry entry) throws IOException\n       case ZipOutputStream.STORED:\n \treturn inp;\n       case ZipOutputStream.DEFLATED:\n+        inp.addDummyByte();\n         final Inflater inf = new Inflater(true);\n         final int sz = (int) entry.getSize();\n         return new InflaterInputStream(inp, inf)\n@@ -520,6 +521,11 @@ private static final class PartialInputStream extends InputStream\n     private long bufferOffset;\n     private int pos;\n     private long end;\n+    // We may need to supply an extra dummy byte to our reader.\n+    // See Inflater.  We use a count here to simplify the logic\n+    // elsewhere in this class.  Note that we ignore the dummy\n+    // byte in methods where we know it is not needed.\n+    private int dummyByteCount;\n \n     public PartialInputStream(RandomAccessFile raf, int bufferSize)\n       throws IOException\n@@ -540,8 +546,17 @@ private void fillBuffer() throws IOException\n     {\n       synchronized (raf)\n         {\n-          raf.seek(bufferOffset);\n-          raf.readFully(buffer, 0, (int) Math.min(buffer.length, end - bufferOffset));\n+          long len = end - bufferOffset;\n+          if (len == 0 && dummyByteCount > 0)\n+            {\n+              buffer[0] = 0;\n+              dummyByteCount = 0;\n+            }\n+          else\n+            {\n+              raf.seek(bufferOffset);\n+              raf.readFully(buffer, 0, (int) Math.min(buffer.length, len));\n+            }\n         }\n     }\n     \n@@ -555,7 +570,7 @@ public int available()\n     \n     public int read() throws IOException\n     {\n-      if (bufferOffset + pos >= end)\n+      if (bufferOffset + pos >= end + dummyByteCount)\n \treturn -1;\n       if (pos == buffer.length)\n         {\n@@ -569,9 +584,9 @@ public int read() throws IOException\n \n     public int read(byte[] b, int off, int len) throws IOException\n     {\n-      if (len > end - (bufferOffset + pos))\n+      if (len > end + dummyByteCount - (bufferOffset + pos))\n \t{\n-\t  len = (int) (end - (bufferOffset + pos));\n+\t  len = (int) (end + dummyByteCount - (bufferOffset + pos));\n \t  if (len == 0)\n \t    return -1;\n \t}\n@@ -681,5 +696,10 @@ String readString(int length) throws IOException\n           throw new AssertionError(uee);\n         }\n     }\n+\n+    public void addDummyByte()\n+    {\n+      dummyByteCount = 1;\n+    }\n   }\n }"}]}