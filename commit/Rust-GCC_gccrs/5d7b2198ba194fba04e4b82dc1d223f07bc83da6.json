{"sha": "5d7b2198ba194fba04e4b82dc1d223f07bc83da6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWQ3YjIxOThiYTE5NGZiYTA0ZTRiODJkYzFkMjIzZjA3YmM4M2RhNg==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2004-01-23T12:32:23Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2004-01-23T12:32:23Z"}, "message": "2004-01-23  Michael Koch  <konqueror@gmx.de>\n\n\t* gnu/java/net/protocol/http/Connection.java\n\t(connect): Don't initialize bufferedOutputStream if not needed.\n\t(sendRequest): Set property for content length if content is present.\n\tWrite content only if present.\n\t(getOutputStream): Check if already connected, dont connect,\n\tinitalize bufferedOutputStream if needed.\n\nFrom-SVN: r76412", "tree": {"sha": "864103fde84c0fd65c6c0e8f345b49f80e9dca9a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/864103fde84c0fd65c6c0e8f345b49f80e9dca9a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5d7b2198ba194fba04e4b82dc1d223f07bc83da6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d7b2198ba194fba04e4b82dc1d223f07bc83da6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d7b2198ba194fba04e4b82dc1d223f07bc83da6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d7b2198ba194fba04e4b82dc1d223f07bc83da6/comments", "author": null, "committer": null, "parents": [{"sha": "8fac50e006cada9c19b2099bc39e8f2578bf42da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8fac50e006cada9c19b2099bc39e8f2578bf42da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8fac50e006cada9c19b2099bc39e8f2578bf42da"}], "stats": {"total": 28, "additions": 22, "deletions": 6}, "files": [{"sha": "6ed347af690f3a771828a3b586d3a163cbbebf12", "filename": "libjava/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7b2198ba194fba04e4b82dc1d223f07bc83da6/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7b2198ba194fba04e4b82dc1d223f07bc83da6/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=5d7b2198ba194fba04e4b82dc1d223f07bc83da6", "patch": "@@ -1,3 +1,12 @@\n+2004-01-23  Michael Koch  <konqueror@gmx.de>\n+\n+\t* gnu/java/net/protocol/http/Connection.java\n+\t(connect): Don't initialize bufferedOutputStream if not needed.\n+\t(sendRequest): Set property for content length if content is present.\n+\tWrite content only if present.\n+\t(getOutputStream): Check if already connected, dont connect,\n+\tinitalize bufferedOutputStream if needed.\n+\n 2004-01-23  Michael Koch  <konqueror@gmx.de>\n \n \t* java/io/FileDescriptor.java"}, {"sha": "bc58ebd8bb71e7b15777efdd3de3356f5ba055ac", "filename": "libjava/gnu/java/net/protocol/http/Connection.java", "status": "modified", "additions": 13, "deletions": 6, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7b2198ba194fba04e4b82dc1d223f07bc83da6/libjava%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FConnection.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7b2198ba194fba04e4b82dc1d223f07bc83da6/libjava%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FConnection.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FConnection.java?ref=5d7b2198ba194fba04e4b82dc1d223f07bc83da6", "patch": "@@ -168,7 +168,6 @@ public void connect() throws IOException\n     inputStream =\n       new DataInputStream(new BufferedInputStream(socket.getInputStream()));\n     outputStream = new BufferedOutputStream (socket.getOutputStream());\n-    bufferedOutputStream = new ByteArrayOutputStream (256); //default is too small\n \n     sendRequest();\n     receiveReply();\n@@ -226,7 +225,8 @@ void sendRequest() throws IOException\n       setRequestProperty (\"Content-type\", \"application/x-www-form-urlencoded\");\n \n     // Set correct content length.\n-    setRequestProperty (\"Content-length\", String.valueOf (bufferedOutputStream.size()));\n+    if (bufferedOutputStream != null)\n+      setRequestProperty (\"Content-length\", String.valueOf (bufferedOutputStream.size()));\n \n     // Write all req_props name-value pairs to the output writer.\n     Iterator itr = getRequestProperties().entrySet().iterator();\n@@ -242,8 +242,11 @@ void sendRequest() throws IOException\n     outputWriter.flush();\n \n     // Write content\n-    bufferedOutputStream.writeTo (outputStream);\n-    outputStream.flush();\n+    if (bufferedOutputStream != null)\n+      {\n+\tbufferedOutputStream.writeTo (outputStream);\n+\toutputStream.flush();\n+      }\n   }\n \n   /**\n@@ -382,12 +385,16 @@ public InputStream getInputStream() throws IOException\n    */\n   public OutputStream getOutputStream() throws IOException\n   {\n+    if (connected)\n+      throw new ProtocolException\n+\t(\"You cannot get an outputstream for an existing http connection\");\n+\n     if (!doOutput)\n       throw new ProtocolException\n         (\"Want output stream while haven't setDoOutput(true)\");\n     \n-    if (!connected)\n-      connect();\n+    if (bufferedOutputStream == null)\n+      bufferedOutputStream = new ByteArrayOutputStream (256); //default is too small\n     \n     return bufferedOutputStream;\n   }"}]}