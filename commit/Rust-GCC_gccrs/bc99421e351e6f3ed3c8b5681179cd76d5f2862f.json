{"sha": "bc99421e351e6f3ed3c8b5681179cd76d5f2862f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmM5OTQyMWUzNTFlNmYzZWQzYzhiNTY4MTE3OWNkNzZkNWYyODYyZg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2010-11-04T02:15:00Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2010-11-04T02:15:00Z"}, "message": "re PR c++/46289 (ICE in build_constexpr_constructor_member_initializers, at cp/semantics.c:5513)\n\n\tPR c++/46289\n\t* call.c (can_convert_array): New fn.\n\t(build_aggr_conv): Use it.\n\nFrom-SVN: r166296", "tree": {"sha": "6afa7158366f31867efd482393eb42b9f7fddf4e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6afa7158366f31867efd482393eb42b9f7fddf4e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bc99421e351e6f3ed3c8b5681179cd76d5f2862f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc99421e351e6f3ed3c8b5681179cd76d5f2862f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc99421e351e6f3ed3c8b5681179cd76d5f2862f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc99421e351e6f3ed3c8b5681179cd76d5f2862f/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5eb3445002aeacd5afccb96b869c37a55d943345", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5eb3445002aeacd5afccb96b869c37a55d943345", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5eb3445002aeacd5afccb96b869c37a55d943345"}], "stats": {"total": 76, "additions": 64, "deletions": 12}, "files": [{"sha": "e384cf7991e78b4472cbc1b0b220b5f16033614a", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc99421e351e6f3ed3c8b5681179cd76d5f2862f/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc99421e351e6f3ed3c8b5681179cd76d5f2862f/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=bc99421e351e6f3ed3c8b5681179cd76d5f2862f", "patch": "@@ -1,5 +1,9 @@\n 2010-11-03  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/46289\n+\t* call.c (can_convert_array): New fn.\n+\t(build_aggr_conv): Use it.\n+\n \tPR c++/46289\n \t* semantics.c (build_constexpr_constructor_member_initializers):\n \tAvoid ICE on error."}, {"sha": "4507f3d37b99485b1632f51e16c9ac3aace03f19", "filename": "gcc/cp/call.c", "status": "modified", "additions": 42, "deletions": 12, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc99421e351e6f3ed3c8b5681179cd76d5f2862f/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc99421e351e6f3ed3c8b5681179cd76d5f2862f/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=bc99421e351e6f3ed3c8b5681179cd76d5f2862f", "patch": "@@ -639,6 +639,29 @@ build_list_conv (tree type, tree ctor, int flags)\n   return t;\n }\n \n+/* Subroutine of build_aggr_conv: check whether CTOR, a braced-init-list,\n+   is a valid aggregate initializer for array type ATYPE.  */\n+\n+static bool\n+can_convert_array (tree atype, tree ctor, int flags)\n+{\n+  unsigned i;\n+  tree elttype = TREE_TYPE (atype);\n+  for (i = 0; i < CONSTRUCTOR_NELTS (ctor); ++i)\n+    {\n+      tree val = CONSTRUCTOR_ELT (ctor, i)->value;\n+      bool ok;\n+      if (TREE_CODE (elttype) == ARRAY_TYPE\n+\t  && TREE_CODE (val) == CONSTRUCTOR)\n+\tok = can_convert_array (elttype, val, flags);\n+      else\n+\tok = can_convert_arg (elttype, TREE_TYPE (val), val, flags);\n+      if (!ok)\n+\treturn false;\n+    }\n+  return true;\n+}\n+\n /* Represent a conversion from CTOR, a braced-init-list, to TYPE, an\n    aggregate class, if such a conversion is possible.  */\n \n@@ -652,24 +675,31 @@ build_aggr_conv (tree type, tree ctor, int flags)\n \n   for (; field; field = next_initializable_field (DECL_CHAIN (field)))\n     {\n+      tree ftype = TREE_TYPE (field);\n+      tree val;\n+      bool ok;\n+\n       if (i < CONSTRUCTOR_NELTS (ctor))\n-\t{\n-\t  constructor_elt *ce = CONSTRUCTOR_ELT (ctor, i);\n-\t  if (!can_convert_arg (TREE_TYPE (field), TREE_TYPE (ce->value),\n-\t\t\t\tce->value, flags))\n-\t    return NULL;\n-\t  ++i;\n-\t  if (TREE_CODE (type) == UNION_TYPE)\n-\t    break;\n-\t}\n+\tval = CONSTRUCTOR_ELT (ctor, i)->value;\n       else\n \t{\n \t  if (empty_ctor == NULL_TREE)\n \t    empty_ctor = build_constructor (init_list_type_node, NULL);\n-\t  if (!can_convert_arg (TREE_TYPE (field), TREE_TYPE (empty_ctor),\n-\t\t\t\tempty_ctor, flags))\n-\t    return NULL;\n+\t  val = empty_ctor;\n \t}\n+      ++i;\n+\n+      if (TREE_CODE (ftype) == ARRAY_TYPE\n+\t  && TREE_CODE (val) == CONSTRUCTOR)\n+\tok = can_convert_array (ftype, val, flags);\n+      else\n+\tok = can_convert_arg (ftype, TREE_TYPE (val), val, flags);\n+\n+      if (!ok)\n+\treturn NULL;\n+\n+      if (TREE_CODE (type) == UNION_TYPE)\n+\tbreak;\n     }\n \n   if (i < CONSTRUCTOR_NELTS (ctor))"}, {"sha": "0597d4718dc48ad5d7eef1aaa44201959ecf4264", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc99421e351e6f3ed3c8b5681179cd76d5f2862f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc99421e351e6f3ed3c8b5681179cd76d5f2862f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bc99421e351e6f3ed3c8b5681179cd76d5f2862f", "patch": "@@ -1,3 +1,8 @@\n+2010-11-03  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/46289\n+\t* g++.dg/cpp0x/initlist45.C: New.\n+\n 2010-11-03  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n \t* objc.dg/property/dynamic-2.m: Updated for the fact that @dynamic"}, {"sha": "0e34bc189773cde1f28d6b5f2eb67bd6d74d35a7", "filename": "gcc/testsuite/g++.dg/cpp0x/initlist45.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc99421e351e6f3ed3c8b5681179cd76d5f2862f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist45.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc99421e351e6f3ed3c8b5681179cd76d5f2862f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist45.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist45.C?ref=bc99421e351e6f3ed3c8b5681179cd76d5f2862f", "patch": "@@ -0,0 +1,13 @@\n+// PR c++/46289\n+// { dg-options -std=c++0x }\n+\n+struct A\n+{\n+  int i[2];\n+};\n+\n+struct B\n+{\n+  A a;\n+  B(): a({{1,2}}) { }\n+};"}]}