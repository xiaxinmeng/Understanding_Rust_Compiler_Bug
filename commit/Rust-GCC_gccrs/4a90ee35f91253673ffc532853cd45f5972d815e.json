{"sha": "4a90ee35f91253673ffc532853cd45f5972d815e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGE5MGVlMzVmOTEyNTM2NzNmZmM1MzI4NTNjZDQ1ZjU5NzJkODE1ZQ==", "commit": {"author": {"name": "Alexander Ivchenko", "email": "alexander.ivchenko@intel.com", "date": "2014-08-29T12:31:18Z"}, "committer": {"name": "Kirill Yukhin", "email": "kyukhin@gcc.gnu.org", "date": "2014-08-29T12:31:18Z"}, "message": "AVX-512. Add narrowing vpmov.\n\ngcc/\n\t* config/i386/i386-modes.def: Add V12QI, V14QI, V6HI modes.\n\t* config/i386/sse.md\n\t(define_mode_iterator VI4_128_8_256): New.\n\t(define_mode_iterator VI2_128_4_256): Ditto.\n\t(define_mode_iterator PMOV_DST_MODE): Rename into\n\t(define_mode_iterator PMOV_DST_MODE_1): this.\n\t(define_insn \"*avx512f_<code><pmov_src_lower><mode>2\"):\n\tUse PMOV_DST_MODE_1 mode iterator.\n\t(define_insn \"avx512f_<code><pmov_src_lower><mode>2_mask\"):\n\tDitto.\n\t(define_insn \"avx512f_<code><pmov_src_lower><mode>2_mask\"):\n\tDitto.\n\t(define_insn \"*avx512bw_<code>v32hiv32qi2\"): New.\n\t(define_insn \"avx512bw_<code>v32hiv32qi2_mask\"): Ditto.\n\t(define_expand \"avx512bw_<code>v32hiv32qi2_store_mask\"): Ditto.\n\t(define_mode_iterator PMOV_DST_MODE_2): New.\n\t(define_insn \"*avx512vl_<code><ssedoublemodelower><mode>2\"): Ditto.\n\t(define_insn \"<avx512>_<code><ssedoublemodelower><mode>2_mask\"): Ditto.\n\t(define_expand \"<avx512>_<code><ssedoublemodelower><mode>2_store_mask\"):\n\tDitto.\n\t(define_mode_iterator PMOV_SRC_MODE_3): Ditto.\n\t(define_mode_attr pmov_dst_3): Ditto.\n\t(define_mode_attr pmov_dst_zeroed_3): Ditto.\n\t(define_mode_attr pmov_suff_3): Ditto.\n\t(define_insn \"*avx512vl_<code><mode>v<ssescalarnum>qi2\"): Ditto.\n\t(define_insn \"*avx512vl_<code>v2div2qi2_store\"): Ditto.\n\t(define_insn \"avx512vl_<code>v2div2qi2_mask\"): Ditto.\n\t(define_insn \"avx512vl_<code>v2div2qi2_store_mask\"): Ditto.\n\t(define_insn \"*avx512vl_<code><mode>v4qi2_store\"): Ditto.\n\t(define_insn \"avx512vl_<code><mode>v4qi2_mask\"): Ditto.\n\t(define_insn \"avx512vl_<code><mode>v4qi2_store_mask\"): Ditto.\n\t(define_insn \"*avx512vl_<code><mode>v8qi2_store\"): Ditto.\n\t(define_insn \"avx512vl_<code><mode>v8qi2_mask\"): Ditto.\n\t(define_insn \"avx512vl_<code><mode>v8qi2_store_mask\"): Ditto.\n\t(define_mode_iterator PMOV_SRC_MODE_4): Ditto.\n\t(define_mode_attr pmov_dst_4): Ditto.\n\t(define_mode_attr pmov_dst_zeroed_4): Ditto.\n\t(define_mode_attr pmov_suff_4): Ditto.\n\t(define_insn \"*avx512vl_<code><mode>v<ssescalarnum>hi2\"): Ditto.\n\t(define_insn \"*avx512vl_<code><mode>v4hi2_store\"): Ditto.\n\t(define_insn \"avx512vl_<code><mode>v4hi2_mask\"): Ditto.\n\t(define_insn \"avx512vl_<code><mode>v4hi2_store_mask\"): Ditto.\n\t(define_insn \"*avx512vl_<code>v2div2hi2_store\"): Ditto.\n\t(define_insn \"avx512vl_<code>v2div2hi2_mask\"): Ditto.\n\t(define_insn \"avx512vl_<code>v2div2hi2_store_mask\"): Ditto.\n\t(define_insn \"*avx512vl_<code>v2div2si2\"): Ditto.\n\t(define_insn \"*avx512vl_<code>v2div2si2_store\"): Ditto.\n\t(define_insn \"avx512vl_<code>v2div2si2_mask\"): Ditto.\n\t(define_insn \"avx512vl_<code>v2div2si2_store_mask\"): Ditto.\n\n\n\nCo-Authored-By: Andrey Turetskiy <andrey.turetskiy@intel.com>\nCo-Authored-By: Anna Tikhonova <anna.tikhonova@intel.com>\nCo-Authored-By: Ilya Tocar <ilya.tocar@intel.com>\nCo-Authored-By: Ilya Verbin <ilya.verbin@intel.com>\nCo-Authored-By: Kirill Yukhin <kirill.yukhin@intel.com>\nCo-Authored-By: Maxim Kuznetsov <maxim.kuznetsov@intel.com>\nCo-Authored-By: Michael Zolotukhin <michael.v.zolotukhin@intel.com>\n\nFrom-SVN: r214725", "tree": {"sha": "5a0bc0c0eb2329c492b0c01b0f50e439dd256c3a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5a0bc0c0eb2329c492b0c01b0f50e439dd256c3a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4a90ee35f91253673ffc532853cd45f5972d815e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a90ee35f91253673ffc532853cd45f5972d815e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a90ee35f91253673ffc532853cd45f5972d815e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a90ee35f91253673ffc532853cd45f5972d815e/comments", "author": null, "committer": null, "parents": [{"sha": "ee5ff8845f48cce9b6686dc84a1ec81d04b24814", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee5ff8845f48cce9b6686dc84a1ec81d04b24814", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee5ff8845f48cce9b6686dc84a1ec81d04b24814"}], "stats": {"total": 592, "additions": 579, "deletions": 13}, "files": [{"sha": "ae65958df134ba816671946a8eb17df39ee10630", "filename": "gcc/ChangeLog", "status": "modified", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a90ee35f91253673ffc532853cd45f5972d815e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a90ee35f91253673ffc532853cd45f5972d815e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4a90ee35f91253673ffc532853cd45f5972d815e", "patch": "@@ -1,3 +1,62 @@\n+2014-08-28  Alexander Ivchenko  <alexander.ivchenko@intel.com>\n+\t    Maxim Kuznetsov  <maxim.kuznetsov@intel.com>\n+\t    Anna Tikhonova  <anna.tikhonova@intel.com>\n+\t    Ilya Tocar  <ilya.tocar@intel.com>\n+\t    Andrey Turetskiy  <andrey.turetskiy@intel.com>\n+\t    Ilya Verbin  <ilya.verbin@intel.com>\n+\t    Kirill Yukhin  <kirill.yukhin@intel.com>\n+\t    Michael Zolotukhin  <michael.v.zolotukhin@intel.com>\n+\n+\t* config/i386/i386-modes.def: Add V12QI, V14QI, V6HI modes.\n+\t* config/i386/sse.md\n+\t(define_mode_iterator VI4_128_8_256): New.\n+\t(define_mode_iterator VI2_128_4_256): Ditto.\n+\t(define_mode_iterator PMOV_DST_MODE): Rename into\n+\t(define_mode_iterator PMOV_DST_MODE_1): this.\n+\t(define_insn \"*avx512f_<code><pmov_src_lower><mode>2\"):\n+\tUse PMOV_DST_MODE_1 mode iterator.\n+\t(define_insn \"avx512f_<code><pmov_src_lower><mode>2_mask\"):\n+\tDitto.\n+\t(define_insn \"avx512f_<code><pmov_src_lower><mode>2_mask\"):\n+\tDitto.\n+\t(define_insn \"*avx512bw_<code>v32hiv32qi2\"): New.\n+\t(define_insn \"avx512bw_<code>v32hiv32qi2_mask\"): Ditto.\n+\t(define_expand \"avx512bw_<code>v32hiv32qi2_store_mask\"): Ditto.\n+\t(define_mode_iterator PMOV_DST_MODE_2): New.\n+\t(define_insn \"*avx512vl_<code><ssedoublemodelower><mode>2\"): Ditto.\n+\t(define_insn \"<avx512>_<code><ssedoublemodelower><mode>2_mask\"): Ditto.\n+\t(define_expand \"<avx512>_<code><ssedoublemodelower><mode>2_store_mask\"):\n+\tDitto.\n+\t(define_mode_iterator PMOV_SRC_MODE_3): Ditto.\n+\t(define_mode_attr pmov_dst_3): Ditto.\n+\t(define_mode_attr pmov_dst_zeroed_3): Ditto.\n+\t(define_mode_attr pmov_suff_3): Ditto.\n+\t(define_insn \"*avx512vl_<code><mode>v<ssescalarnum>qi2\"): Ditto.\n+\t(define_insn \"*avx512vl_<code>v2div2qi2_store\"): Ditto.\n+\t(define_insn \"avx512vl_<code>v2div2qi2_mask\"): Ditto.\n+\t(define_insn \"avx512vl_<code>v2div2qi2_store_mask\"): Ditto.\n+\t(define_insn \"*avx512vl_<code><mode>v4qi2_store\"): Ditto.\n+\t(define_insn \"avx512vl_<code><mode>v4qi2_mask\"): Ditto.\n+\t(define_insn \"avx512vl_<code><mode>v4qi2_store_mask\"): Ditto.\n+\t(define_insn \"*avx512vl_<code><mode>v8qi2_store\"): Ditto.\n+\t(define_insn \"avx512vl_<code><mode>v8qi2_mask\"): Ditto.\n+\t(define_insn \"avx512vl_<code><mode>v8qi2_store_mask\"): Ditto.\n+\t(define_mode_iterator PMOV_SRC_MODE_4): Ditto.\n+\t(define_mode_attr pmov_dst_4): Ditto.\n+\t(define_mode_attr pmov_dst_zeroed_4): Ditto.\n+\t(define_mode_attr pmov_suff_4): Ditto.\n+\t(define_insn \"*avx512vl_<code><mode>v<ssescalarnum>hi2\"): Ditto.\n+\t(define_insn \"*avx512vl_<code><mode>v4hi2_store\"): Ditto.\n+\t(define_insn \"avx512vl_<code><mode>v4hi2_mask\"): Ditto.\n+\t(define_insn \"avx512vl_<code><mode>v4hi2_store_mask\"): Ditto.\n+\t(define_insn \"*avx512vl_<code>v2div2hi2_store\"): Ditto.\n+\t(define_insn \"avx512vl_<code>v2div2hi2_mask\"): Ditto.\n+\t(define_insn \"avx512vl_<code>v2div2hi2_store_mask\"): Ditto.\n+\t(define_insn \"*avx512vl_<code>v2div2si2\"): Ditto.\n+\t(define_insn \"*avx512vl_<code>v2div2si2_store\"): Ditto.\n+\t(define_insn \"avx512vl_<code>v2div2si2_mask\"): Ditto.\n+\t(define_insn \"avx512vl_<code>v2div2si2_store_mask\"): Ditto.\n+\n 2014-08-29  Richard Biener  <rguenther@suse.de>\n \n \t* tree-cfg.c (verify_gimple_assign_unary): Do not allow"}, {"sha": "c24abe6fea76529ab53cec78e52f2947c9214171", "filename": "gcc/config/i386/i386-modes.def", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a90ee35f91253673ffc532853cd45f5972d815e/gcc%2Fconfig%2Fi386%2Fi386-modes.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a90ee35f91253673ffc532853cd45f5972d815e/gcc%2Fconfig%2Fi386%2Fi386-modes.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-modes.def?ref=4a90ee35f91253673ffc532853cd45f5972d815e", "patch": "@@ -86,6 +86,9 @@ VECTOR_MODE (INT, TI, 1);     /*                   V1TI */\n VECTOR_MODE (INT, DI, 1);     /*                   V1DI */\n VECTOR_MODE (INT, SI, 1);     /*                   V1SI */\n VECTOR_MODE (INT, QI, 2);     /*                   V2QI */\n+VECTOR_MODE (INT, QI, 12);    /*                  V12QI */\n+VECTOR_MODE (INT, QI, 14);    /*                  V14QI */\n+VECTOR_MODE (INT, HI, 6);     /*                   V6HI */\n \n INT_MODE (OI, 32);\n INT_MODE (XI, 64);"}, {"sha": "e11558e50f94178bab078ca8c02728e17feb02e9", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 517, "deletions": 13, "changes": 530, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a90ee35f91253673ffc532853cd45f5972d815e/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a90ee35f91253673ffc532853cd45f5972d815e/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=4a90ee35f91253673ffc532853cd45f5972d815e", "patch": "@@ -321,6 +321,9 @@\n (define_mode_iterator VI8_AVX2_AVX512F\n   [(V8DI \"TARGET_AVX512F\") (V4DI \"TARGET_AVX2\") V2DI])\n \n+(define_mode_iterator VI4_128_8_256\n+  [V4SI V4DI])\n+\n ;; All V8D* modes\n (define_mode_iterator V8FI\n   [V8DF V8DI])\n@@ -7948,48 +7951,549 @@\n ;;\n ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n \n-(define_mode_iterator PMOV_DST_MODE [V16QI V16HI V8SI V8HI])\n+(define_mode_iterator PMOV_DST_MODE_1 [V16QI V16HI V8SI V8HI])\n (define_mode_attr pmov_src_mode\n   [(V16QI \"V16SI\") (V16HI \"V16SI\") (V8SI \"V8DI\") (V8HI \"V8DI\")])\n (define_mode_attr pmov_src_lower\n   [(V16QI \"v16si\") (V16HI \"v16si\") (V8SI \"v8di\") (V8HI \"v8di\")])\n-(define_mode_attr pmov_suff\n+(define_mode_attr pmov_suff_1\n   [(V16QI \"db\") (V16HI \"dw\") (V8SI \"qd\") (V8HI \"qw\")])\n \n (define_insn \"*avx512f_<code><pmov_src_lower><mode>2\"\n-  [(set (match_operand:PMOV_DST_MODE 0 \"nonimmediate_operand\" \"=v,m\")\n-\t(any_truncate:PMOV_DST_MODE\n+  [(set (match_operand:PMOV_DST_MODE_1 0 \"nonimmediate_operand\" \"=v,m\")\n+\t(any_truncate:PMOV_DST_MODE_1\n \t  (match_operand:<pmov_src_mode> 1 \"register_operand\" \"v,v\")))]\n   \"TARGET_AVX512F\"\n-  \"vpmov<trunsuffix><pmov_suff>\\t{%1, %0|%0, %1}\"\n+  \"vpmov<trunsuffix><pmov_suff_1>\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"ssemov\")\n    (set_attr \"memory\" \"none,store\")\n    (set_attr \"prefix\" \"evex\")\n    (set_attr \"mode\" \"<sseinsnmode>\")])\n \n (define_insn \"avx512f_<code><pmov_src_lower><mode>2_mask\"\n-  [(set (match_operand:PMOV_DST_MODE 0 \"nonimmediate_operand\" \"=v,m\")\n-    (vec_merge:PMOV_DST_MODE\n-      (any_truncate:PMOV_DST_MODE\n+  [(set (match_operand:PMOV_DST_MODE_1 0 \"nonimmediate_operand\" \"=v,m\")\n+    (vec_merge:PMOV_DST_MODE_1\n+      (any_truncate:PMOV_DST_MODE_1\n         (match_operand:<pmov_src_mode> 1 \"register_operand\" \"v,v\"))\n-      (match_operand:PMOV_DST_MODE 2 \"vector_move_operand\" \"0C,0\")\n+      (match_operand:PMOV_DST_MODE_1 2 \"vector_move_operand\" \"0C,0\")\n       (match_operand:<avx512fmaskmode> 3 \"register_operand\" \"Yk,Yk\")))]\n   \"TARGET_AVX512F\"\n-  \"vpmov<trunsuffix><pmov_suff>\\t{%1, %0%{%3%}%N2|%0%{%3%}%N2, %1}\"\n+  \"vpmov<trunsuffix><pmov_suff_1>\\t{%1, %0%{%3%}%N2|%0%{%3%}%N2, %1}\"\n   [(set_attr \"type\" \"ssemov\")\n    (set_attr \"memory\" \"none,store\")\n    (set_attr \"prefix\" \"evex\")\n    (set_attr \"mode\" \"<sseinsnmode>\")])\n \n (define_expand \"avx512f_<code><pmov_src_lower><mode>2_mask_store\"\n-  [(set (match_operand:PMOV_DST_MODE 0 \"memory_operand\")\n-    (vec_merge:PMOV_DST_MODE\n-      (any_truncate:PMOV_DST_MODE\n+  [(set (match_operand:PMOV_DST_MODE_1 0 \"memory_operand\")\n+    (vec_merge:PMOV_DST_MODE_1\n+      (any_truncate:PMOV_DST_MODE_1\n         (match_operand:<pmov_src_mode> 1 \"register_operand\"))\n       (match_dup 0)\n       (match_operand:<avx512fmaskmode> 2 \"register_operand\")))]\n   \"TARGET_AVX512F\")\n \n+(define_insn \"*avx512bw_<code>v32hiv32qi2\"\n+  [(set (match_operand:V32QI 0 \"nonimmediate_operand\" \"=v,m\")\n+\t(any_truncate:V32QI\n+\t    (match_operand:V32HI 1 \"register_operand\" \"v,v\")))]\n+  \"TARGET_AVX512BW\"\n+  \"vpmov<trunsuffix>wb\\t{%1, %0|%0, %1}\"\n+  [(set_attr \"type\" \"ssemov\")\n+   (set_attr \"memory\" \"none,store\")\n+   (set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\" \"XI\")])\n+\n+(define_insn \"avx512bw_<code>v32hiv32qi2_mask\"\n+  [(set (match_operand:V32QI 0 \"nonimmediate_operand\" \"=v,m\")\n+    (vec_merge:V32QI\n+      (any_truncate:V32QI\n+        (match_operand:V32HI 1 \"register_operand\" \"v,v\"))\n+      (match_operand:V32QI 2 \"vector_move_operand\" \"0C,0\")\n+      (match_operand:SI 3 \"register_operand\" \"Yk,Yk\")))]\n+  \"TARGET_AVX512BW\"\n+  \"vpmov<trunsuffix>wb\\t{%1, %0%{%3%}%N2|%0%{%3%}%N2, %1}\"\n+  [(set_attr \"type\" \"ssemov\")\n+   (set_attr \"memory\" \"none,store\")\n+   (set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\" \"XI\")])\n+\n+(define_expand \"avx512bw_<code>v32hiv32qi2_mask_store\"\n+  [(set (match_operand:V32QI 0 \"nonimmediate_operand\")\n+    (vec_merge:V32QI\n+      (any_truncate:V32QI\n+        (match_operand:V32HI 1 \"register_operand\"))\n+      (match_dup 0)\n+      (match_operand:SI 2 \"register_operand\")))]\n+  \"TARGET_AVX512BW\")\n+\n+(define_mode_iterator PMOV_DST_MODE_2\n+  [V4SI V8HI (V16QI \"TARGET_AVX512BW\")])\n+(define_mode_attr pmov_suff_2\n+  [(V16QI \"wb\") (V8HI \"dw\") (V4SI \"qd\")])\n+\n+(define_insn \"*avx512vl_<code><ssedoublemodelower><mode>2\"\n+  [(set (match_operand:PMOV_DST_MODE_2 0 \"nonimmediate_operand\" \"=v,m\")\n+\t(any_truncate:PMOV_DST_MODE_2\n+\t    (match_operand:<ssedoublemode> 1 \"register_operand\" \"v,v\")))]\n+  \"TARGET_AVX512VL\"\n+  \"vpmov<trunsuffix><pmov_suff_2>\\t{%1, %0|%0, %1}\"\n+  [(set_attr \"type\" \"ssemov\")\n+   (set_attr \"memory\" \"none,store\")\n+   (set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\" \"<sseinsnmode>\")])\n+\n+(define_insn \"<avx512>_<code><ssedoublemodelower><mode>2_mask\"\n+  [(set (match_operand:PMOV_DST_MODE_2 0 \"nonimmediate_operand\" \"=v,m\")\n+    (vec_merge:PMOV_DST_MODE_2\n+      (any_truncate:PMOV_DST_MODE_2\n+        (match_operand:<ssedoublemode> 1 \"register_operand\" \"v,v\"))\n+      (match_operand:PMOV_DST_MODE_2 2 \"vector_move_operand\" \"0C,0\")\n+      (match_operand:<avx512fmaskmode> 3 \"register_operand\" \"Yk,Yk\")))]\n+  \"TARGET_AVX512VL\"\n+  \"vpmov<trunsuffix><pmov_suff_2>\\t{%1, %0%{%3%}%N2|%0%{%3%}%N2, %1}\"\n+  [(set_attr \"type\" \"ssemov\")\n+   (set_attr \"memory\" \"none,store\")\n+   (set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\" \"<sseinsnmode>\")])\n+\n+(define_expand \"<avx512>_<code><ssedoublemodelower><mode>2_mask_store\"\n+  [(set (match_operand:PMOV_DST_MODE_2 0 \"nonimmediate_operand\")\n+    (vec_merge:PMOV_DST_MODE_2\n+      (any_truncate:PMOV_DST_MODE_2\n+        (match_operand:<ssedoublemode> 1 \"register_operand\"))\n+      (match_dup 0)\n+      (match_operand:<avx512fmaskmode> 2 \"register_operand\")))]\n+  \"TARGET_AVX512VL\")\n+\n+(define_mode_iterator PMOV_SRC_MODE_3 [V4DI V2DI V8SI V4SI (V8HI \"TARGET_AVX512BW\")])\n+(define_mode_attr pmov_dst_3\n+  [(V4DI \"V4QI\") (V2DI \"V2QI\") (V8SI \"V8QI\") (V4SI \"V4QI\") (V8HI \"V8QI\")])\n+(define_mode_attr pmov_dst_zeroed_3\n+  [(V4DI \"V12QI\") (V2DI \"V14QI\") (V8SI \"V8QI\") (V4SI \"V12QI\") (V8HI \"V8QI\")])\n+(define_mode_attr pmov_suff_3\n+  [(V4DI \"qb\") (V2DI \"qb\") (V8SI \"db\") (V4SI \"db\") (V8HI \"wb\")])\n+\n+(define_insn \"*avx512vl_<code><mode>v<ssescalarnum>qi2\"\n+  [(set (match_operand:V16QI 0 \"register_operand\" \"=v\")\n+    (vec_concat:V16QI\n+      (any_truncate:<pmov_dst_3>\n+\t      (match_operand:PMOV_SRC_MODE_3 1 \"register_operand\" \"v\"))\n+      (match_operand:<pmov_dst_zeroed_3> 2 \"const0_operand\")))]\n+  \"TARGET_AVX512VL\"\n+  \"vpmov<trunsuffix><pmov_suff_3>\\t{%1, %0|%0, %1}\"\n+  [(set_attr \"type\" \"ssemov\")\n+   (set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\" \"TI\")])\n+\n+(define_insn \"*avx512vl_<code>v2div2qi2_store\"\n+  [(set (match_operand:V16QI 0 \"memory_operand\" \"=m\")\n+    (vec_concat:V16QI\n+      (any_truncate:V2QI\n+\t      (match_operand:V2DI 1 \"register_operand\" \"v\"))\n+      (vec_select:V14QI\n+        (match_dup 0)\n+        (parallel [(const_int 2) (const_int 3)\n+                   (const_int 4) (const_int 5)\n+                   (const_int 6) (const_int 7)\n+                   (const_int 8) (const_int 9)\n+                   (const_int 10) (const_int 11)\n+                   (const_int 12) (const_int 13)\n+                   (const_int 14) (const_int 15)]))))]\n+  \"TARGET_AVX512VL\"\n+  \"vpmov<trunsuffix>qb\\t{%1, %0|%0, %1}\"\n+  [(set_attr \"type\" \"ssemov\")\n+   (set_attr \"memory\" \"store\")\n+   (set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\" \"TI\")])\n+\n+(define_insn \"avx512vl_<code>v2div2qi2_mask\"\n+  [(set (match_operand:V16QI 0 \"register_operand\" \"=v\")\n+    (vec_concat:V16QI\n+      (vec_merge:V2QI\n+        (any_truncate:V2QI\n+          (match_operand:V2DI 1 \"register_operand\" \"v\"))\n+        (vec_select:V2QI\n+          (match_operand:V16QI 2 \"vector_move_operand\" \"0C\")\n+          (parallel [(const_int 0) (const_int 1)]))\n+        (match_operand:QI 3 \"register_operand\" \"Yk\"))\n+      (const_vector:V14QI [(const_int 0) (const_int 0)\n+                           (const_int 0) (const_int 0)\n+                           (const_int 0) (const_int 0)\n+                           (const_int 0) (const_int 0)\n+                           (const_int 0) (const_int 0)\n+                           (const_int 0) (const_int 0)\n+                           (const_int 0) (const_int 0)])))]\n+  \"TARGET_AVX512VL\"\n+  \"vpmov<trunsuffix>qb\\t{%1, %0%{%3%}%N2|%0%{%3%}%N2, %1}\"\n+  [(set_attr \"type\" \"ssemov\")\n+   (set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\" \"TI\")])\n+\n+(define_insn \"avx512vl_<code>v2div2qi2_mask_store\"\n+  [(set (match_operand:V16QI 0 \"memory_operand\" \"=m\")\n+    (vec_concat:V16QI\n+      (vec_merge:V2QI\n+        (any_truncate:V2QI\n+          (match_operand:V2DI 1 \"register_operand\" \"v\"))\n+        (vec_select:V2QI\n+          (match_dup 0)\n+          (parallel [(const_int 0) (const_int 1)]))\n+        (match_operand:QI 2 \"register_operand\" \"Yk\"))\n+      (vec_select:V14QI\n+        (match_dup 0)\n+        (parallel [(const_int 2) (const_int 3)\n+                   (const_int 4) (const_int 5)\n+                   (const_int 6) (const_int 7)\n+                   (const_int 8) (const_int 9)\n+                   (const_int 10) (const_int 11)\n+                   (const_int 12) (const_int 13)\n+                   (const_int 14) (const_int 15)]))))]\n+  \"TARGET_AVX512VL\"\n+  \"vpmov<trunsuffix>qb\\t{%1, %0%{%2%}|%0%{%2%}, %1}\"\n+  [(set_attr \"type\" \"ssemov\")\n+   (set_attr \"memory\" \"store\")\n+   (set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\" \"TI\")])\n+\n+(define_insn \"*avx512vl_<code><mode>v4qi2_store\"\n+  [(set (match_operand:V16QI 0 \"memory_operand\" \"=m\")\n+    (vec_concat:V16QI\n+      (any_truncate:V4QI\n+\t      (match_operand:VI4_128_8_256 1 \"register_operand\" \"v\"))\n+      (vec_select:V12QI\n+        (match_dup 0)\n+        (parallel [(const_int 4) (const_int 5)\n+                   (const_int 6) (const_int 7)\n+                   (const_int 8) (const_int 9)\n+                   (const_int 10) (const_int 11)\n+                   (const_int 12) (const_int 13)\n+                   (const_int 14) (const_int 15)]))))]\n+  \"TARGET_AVX512VL\"\n+  \"vpmov<trunsuffix><pmov_suff_3>\\t{%1, %0|%0, %1}\"\n+  [(set_attr \"type\" \"ssemov\")\n+   (set_attr \"memory\" \"store\")\n+   (set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\" \"TI\")])\n+\n+(define_insn \"avx512vl_<code><mode>v4qi2_mask\"\n+  [(set (match_operand:V16QI 0 \"register_operand\" \"=v\")\n+    (vec_concat:V16QI\n+      (vec_merge:V4QI\n+        (any_truncate:V4QI\n+          (match_operand:VI4_128_8_256 1 \"register_operand\" \"v\"))\n+        (vec_select:V4QI\n+          (match_operand:V16QI 2 \"vector_move_operand\" \"0C\")\n+          (parallel [(const_int 0) (const_int 1)\n+                     (const_int 2) (const_int 3)]))\n+        (match_operand:QI 3 \"register_operand\" \"Yk\"))\n+      (const_vector:V12QI [(const_int 0) (const_int 0)\n+                           (const_int 0) (const_int 0)\n+                           (const_int 0) (const_int 0)\n+                           (const_int 0) (const_int 0)\n+                           (const_int 0) (const_int 0)\n+                           (const_int 0) (const_int 0)])))]\n+  \"TARGET_AVX512VL\"\n+  \"vpmov<trunsuffix><pmov_suff_3>\\t{%1, %0%{%3%}%N2|%0%{%3%}%N2, %1}\"\n+  [(set_attr \"type\" \"ssemov\")\n+   (set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\" \"TI\")])\n+\n+(define_insn \"avx512vl_<code><mode>v4qi2_mask_store\"\n+  [(set (match_operand:V16QI 0 \"memory_operand\" \"=m\")\n+    (vec_concat:V16QI\n+      (vec_merge:V4QI\n+        (any_truncate:V4QI\n+          (match_operand:VI4_128_8_256 1 \"register_operand\" \"v\"))\n+        (vec_select:V4QI\n+          (match_dup 0)\n+          (parallel [(const_int 0) (const_int 1)\n+                     (const_int 2) (const_int 3)]))\n+        (match_operand:QI 2 \"register_operand\" \"Yk\"))\n+      (vec_select:V12QI\n+        (match_dup 0)\n+        (parallel [(const_int 4) (const_int 5)\n+                   (const_int 6) (const_int 7)\n+                   (const_int 8) (const_int 9)\n+                   (const_int 10) (const_int 11)\n+                   (const_int 12) (const_int 13)\n+                   (const_int 14) (const_int 15)]))))]\n+  \"TARGET_AVX512VL\"\n+  \"vpmov<trunsuffix><pmov_suff_3>\\t{%1, %0%{%2%}|%0%{%2%}, %1}\"\n+  [(set_attr \"type\" \"ssemov\")\n+   (set_attr \"memory\" \"store\")\n+   (set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\" \"TI\")])\n+\n+(define_mode_iterator VI2_128_BW_4_256\n+  [(V8HI \"TARGET_AVX512BW\") V8SI])\n+\n+(define_insn \"*avx512vl_<code><mode>v8qi2_store\"\n+  [(set (match_operand:V16QI 0 \"memory_operand\" \"=m\")\n+    (vec_concat:V16QI\n+      (any_truncate:V8QI\n+\t      (match_operand:VI2_128_BW_4_256 1 \"register_operand\" \"v\"))\n+      (vec_select:V8QI\n+        (match_dup 0)\n+        (parallel [(const_int 8) (const_int 9)\n+                   (const_int 10) (const_int 11)\n+                   (const_int 12) (const_int 13)\n+                   (const_int 14) (const_int 15)]))))]\n+  \"TARGET_AVX512VL\"\n+  \"vpmov<trunsuffix><pmov_suff_3>\\t{%1, %0|%0, %1}\"\n+  [(set_attr \"type\" \"ssemov\")\n+   (set_attr \"memory\" \"store\")\n+   (set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\" \"TI\")])\n+\n+(define_insn \"avx512vl_<code><mode>v8qi2_mask\"\n+  [(set (match_operand:V16QI 0 \"register_operand\" \"=v\")\n+    (vec_concat:V16QI\n+      (vec_merge:V8QI\n+        (any_truncate:V8QI\n+          (match_operand:VI2_128_BW_4_256 1 \"register_operand\" \"v\"))\n+        (vec_select:V8QI\n+          (match_operand:V16QI 2 \"vector_move_operand\" \"0C\")\n+          (parallel [(const_int 0) (const_int 1)\n+                     (const_int 2) (const_int 3)\n+                     (const_int 4) (const_int 5)\n+                     (const_int 6) (const_int 7)]))\n+        (match_operand:QI 3 \"register_operand\" \"Yk\"))\n+      (const_vector:V8QI [(const_int 0) (const_int 0)\n+                          (const_int 0) (const_int 0)\n+                          (const_int 0) (const_int 0)\n+                          (const_int 0) (const_int 0)])))]\n+  \"TARGET_AVX512VL\"\n+  \"vpmov<trunsuffix><pmov_suff_3>\\t{%1, %0%{%3%}%N2|%0%{%3%}%N2, %1}\"\n+  [(set_attr \"type\" \"ssemov\")\n+   (set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\" \"TI\")])\n+\n+(define_insn \"avx512vl_<code><mode>v8qi2_mask_store\"\n+  [(set (match_operand:V16QI 0 \"memory_operand\" \"=m\")\n+    (vec_concat:V16QI\n+      (vec_merge:V8QI\n+        (any_truncate:V8QI\n+          (match_operand:VI2_128_BW_4_256 1 \"register_operand\" \"v\"))\n+        (vec_select:V8QI\n+          (match_dup 0)\n+          (parallel [(const_int 0) (const_int 1)\n+                     (const_int 2) (const_int 3)\n+                     (const_int 4) (const_int 5)\n+                     (const_int 6) (const_int 7)]))\n+        (match_operand:QI 2 \"register_operand\" \"Yk\"))\n+      (vec_select:V8QI\n+        (match_dup 0)\n+        (parallel [(const_int 8) (const_int 9)\n+                   (const_int 10) (const_int 11)\n+                   (const_int 12) (const_int 13)\n+                   (const_int 14) (const_int 15)]))))]\n+  \"TARGET_AVX512VL\"\n+  \"vpmov<trunsuffix><pmov_suff_3>\\t{%1, %0%{%2%}|%0%{%2%}, %1}\"\n+  [(set_attr \"type\" \"ssemov\")\n+   (set_attr \"memory\" \"store\")\n+   (set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\" \"TI\")])\n+\n+(define_mode_iterator PMOV_SRC_MODE_4 [V4DI V2DI V4SI])\n+(define_mode_attr pmov_dst_4\n+  [(V4DI \"V4HI\") (V2DI \"V2HI\") (V4SI \"V4HI\")])\n+(define_mode_attr pmov_dst_zeroed_4\n+  [(V4DI \"V4HI\") (V2DI \"V6HI\") (V4SI \"V4HI\")])\n+(define_mode_attr pmov_suff_4\n+  [(V4DI \"qw\") (V2DI \"qw\") (V4SI \"dw\")])\n+\n+(define_insn \"*avx512vl_<code><mode>v<ssescalarnum>hi2\"\n+  [(set (match_operand:V8HI 0 \"register_operand\" \"=v\")\n+    (vec_concat:V8HI\n+      (any_truncate:<pmov_dst_4>\n+\t      (match_operand:PMOV_SRC_MODE_4 1 \"register_operand\" \"v\"))\n+      (match_operand:<pmov_dst_zeroed_4> 2 \"const0_operand\")))]\n+  \"TARGET_AVX512VL\"\n+  \"vpmov<trunsuffix><pmov_suff_4>\\t{%1, %0|%0, %1}\"\n+  [(set_attr \"type\" \"ssemov\")\n+   (set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\" \"TI\")])\n+\n+(define_insn \"*avx512vl_<code><mode>v4hi2_store\"\n+  [(set (match_operand:V8HI 0 \"memory_operand\" \"=m\")\n+    (vec_concat:V8HI\n+      (any_truncate:V4HI\n+\t      (match_operand:VI4_128_8_256 1 \"register_operand\" \"v\"))\n+      (vec_select:V4HI\n+        (match_dup 0)\n+        (parallel [(const_int 4) (const_int 5)\n+                   (const_int 6) (const_int 7)]))))]\n+  \"TARGET_AVX512VL\"\n+  \"vpmov<trunsuffix><pmov_suff_4>\\t{%1, %0|%0, %1}\"\n+  [(set_attr \"type\" \"ssemov\")\n+   (set_attr \"memory\" \"store\")\n+   (set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\" \"TI\")])\n+\n+(define_insn \"avx512vl_<code><mode>v4hi2_mask\"\n+  [(set (match_operand:V8HI 0 \"register_operand\" \"=v\")\n+    (vec_concat:V8HI\n+      (vec_merge:V4HI\n+        (any_truncate:V4HI\n+          (match_operand:VI4_128_8_256 1 \"register_operand\" \"v\"))\n+        (vec_select:V4HI\n+          (match_operand:V8HI 2 \"vector_move_operand\" \"0C\")\n+          (parallel [(const_int 0) (const_int 1)\n+                     (const_int 2) (const_int 3)]))\n+        (match_operand:QI 3 \"register_operand\" \"Yk\"))\n+      (const_vector:V4HI [(const_int 0) (const_int 0)\n+                          (const_int 0) (const_int 0)])))]\n+  \"TARGET_AVX512VL\"\n+  \"vpmov<trunsuffix><pmov_suff_4>\\t{%1, %0%{%3%}%N2|%0%{%3%}%N2, %1}\"\n+  [(set_attr \"type\" \"ssemov\")\n+   (set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\" \"TI\")])\n+\n+(define_insn \"avx512vl_<code><mode>v4hi2_mask_store\"\n+  [(set (match_operand:V8HI 0 \"memory_operand\" \"=m\")\n+    (vec_concat:V8HI\n+      (vec_merge:V4HI\n+        (any_truncate:V4HI\n+          (match_operand:VI4_128_8_256 1 \"register_operand\" \"v\"))\n+        (vec_select:V4HI\n+          (match_dup 0)\n+          (parallel [(const_int 0) (const_int 1)\n+                     (const_int 2) (const_int 3)]))\n+        (match_operand:QI 2 \"register_operand\" \"Yk\"))\n+      (vec_select:V4HI\n+        (match_dup 0)\n+        (parallel [(const_int 4) (const_int 5)\n+                   (const_int 6) (const_int 7)]))))]\n+  \"TARGET_AVX512VL\"\n+  \"vpmov<trunsuffix><pmov_suff_4>\\t{%1, %0%{%2%}|%0%{%2%}, %1}\"\n+  [(set_attr \"type\" \"ssemov\")\n+   (set_attr \"memory\" \"store\")\n+   (set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\" \"TI\")])\n+\n+(define_insn \"*avx512vl_<code>v2div2hi2_store\"\n+  [(set (match_operand:V8HI 0 \"memory_operand\" \"=m\")\n+    (vec_concat:V8HI\n+      (any_truncate:V2HI\n+\t      (match_operand:V2DI 1 \"register_operand\" \"v\"))\n+      (vec_select:V6HI\n+        (match_dup 0)\n+        (parallel [(const_int 2) (const_int 3)\n+                   (const_int 4) (const_int 5)\n+                   (const_int 6) (const_int 7)]))))]\n+  \"TARGET_AVX512VL\"\n+  \"vpmov<trunsuffix>qw\\t{%1, %0|%0, %1}\"\n+  [(set_attr \"type\" \"ssemov\")\n+   (set_attr \"memory\" \"store\")\n+   (set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\" \"TI\")])\n+\n+(define_insn \"avx512vl_<code>v2div2hi2_mask\"\n+  [(set (match_operand:V8HI 0 \"register_operand\" \"=v\")\n+    (vec_concat:V8HI\n+      (vec_merge:V2HI\n+        (any_truncate:V2HI\n+          (match_operand:V2DI 1 \"register_operand\" \"v\"))\n+        (vec_select:V2HI\n+          (match_operand:V8HI 2 \"vector_move_operand\" \"0C\")\n+          (parallel [(const_int 0) (const_int 1)]))\n+        (match_operand:QI 3 \"register_operand\" \"Yk\"))\n+      (const_vector:V6HI [(const_int 0) (const_int 0)\n+                          (const_int 0) (const_int 0)\n+                          (const_int 0) (const_int 0)])))]\n+  \"TARGET_AVX512VL\"\n+  \"vpmov<trunsuffix>qw\\t{%1, %0%{%3%}%N2|%0%{%3%}%N2, %1}\"\n+  [(set_attr \"type\" \"ssemov\")\n+   (set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\" \"TI\")])\n+\n+(define_insn \"avx512vl_<code>v2div2hi2_mask_store\"\n+  [(set (match_operand:V8HI 0 \"memory_operand\" \"=m\")\n+    (vec_concat:V8HI\n+      (vec_merge:V2HI\n+        (any_truncate:V2HI\n+          (match_operand:V2DI 1 \"register_operand\" \"v\"))\n+        (vec_select:V2HI\n+          (match_dup 0)\n+          (parallel [(const_int 0) (const_int 1)]))\n+        (match_operand:QI 2 \"register_operand\" \"Yk\"))\n+      (vec_select:V6HI\n+        (match_dup 0)\n+        (parallel [(const_int 2) (const_int 3)\n+                   (const_int 4) (const_int 5)\n+                   (const_int 6) (const_int 7)]))))]\n+  \"TARGET_AVX512VL\"\n+  \"vpmov<trunsuffix>qw\\t{%1, %0%{%2%}|%0%{%2%}, %1}\"\n+  [(set_attr \"type\" \"ssemov\")\n+   (set_attr \"memory\" \"store\")\n+   (set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\" \"TI\")])\n+\n+(define_insn \"*avx512vl_<code>v2div2si2\"\n+  [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n+    (vec_concat:V4SI\n+      (any_truncate:V2SI\n+\t      (match_operand:V2DI 1 \"register_operand\" \"v\"))\n+      (match_operand:V2SI 2 \"const0_operand\")))]\n+  \"TARGET_AVX512VL\"\n+  \"vpmov<trunsuffix>qd\\t{%1, %0|%0, %1}\"\n+  [(set_attr \"type\" \"ssemov\")\n+   (set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\" \"TI\")])\n+\n+(define_insn \"*avx512vl_<code>v2div2si2_store\"\n+  [(set (match_operand:V4SI 0 \"memory_operand\" \"=m\")\n+    (vec_concat:V4SI\n+      (any_truncate:V2SI\n+\t      (match_operand:V2DI 1 \"register_operand\" \"v\"))\n+      (vec_select:V2SI\n+        (match_dup 0)\n+        (parallel [(const_int 2) (const_int 3)]))))]\n+  \"TARGET_AVX512VL\"\n+  \"vpmov<trunsuffix>qd\\t{%1, %0|%0, %1}\"\n+  [(set_attr \"type\" \"ssemov\")\n+   (set_attr \"memory\" \"store\")\n+   (set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\" \"TI\")])\n+\n+(define_insn \"avx512vl_<code>v2div2si2_mask\"\n+  [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n+    (vec_concat:V4SI\n+      (vec_merge:V2SI\n+        (any_truncate:V2SI\n+          (match_operand:V2DI 1 \"register_operand\" \"v\"))\n+        (vec_select:V2SI\n+          (match_operand:V4SI 2 \"vector_move_operand\" \"0C\")\n+          (parallel [(const_int 0) (const_int 1)]))\n+        (match_operand:QI 3 \"register_operand\" \"Yk\"))\n+      (const_vector:V2SI [(const_int 0) (const_int 0)])))]\n+  \"TARGET_AVX512VL\"\n+  \"vpmov<trunsuffix>qd\\t{%1, %0%{%3%}%N2|%0%{%3%}%N2, %1}\"\n+  [(set_attr \"type\" \"ssemov\")\n+   (set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\" \"TI\")])\n+\n+(define_insn \"avx512vl_<code>v2div2si2_mask_store\"\n+  [(set (match_operand:V4SI 0 \"memory_operand\" \"=m\")\n+    (vec_concat:V4SI\n+      (vec_merge:V2SI\n+        (any_truncate:V2SI\n+          (match_operand:V2DI 1 \"register_operand\" \"v\"))\n+        (vec_select:V2SI\n+          (match_dup 0)\n+          (parallel [(const_int 0) (const_int 1)]))\n+        (match_operand:QI 2 \"register_operand\" \"Yk\"))\n+      (vec_select:V2SI\n+        (match_dup 0)\n+        (parallel [(const_int 2) (const_int 3)]))))]\n+  \"TARGET_AVX512VL\"\n+  \"vpmov<trunsuffix>qd\\t{%1, %0%{%2%}|%0%{%2%}, %1}\"\n+  [(set_attr \"type\" \"ssemov\")\n+   (set_attr \"memory\" \"store\")\n+   (set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\" \"TI\")])\n+\n (define_insn \"*avx512f_<code>v8div16qi2\"\n   [(set (match_operand:V16QI 0 \"register_operand\" \"=v\")\n \t(vec_concat:V16QI"}]}