{"sha": "1935f2506e9d4ad4ae4aedb691e5bbd26202ba25", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTkzNWYyNTA2ZTlkNGFkNGFlNGFlZGI2OTFlNWJiZDI2MjAyYmEyNQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-03-16T07:01:36Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-03-16T07:01:36Z"}, "message": "re PR sanitizer/70147 (testcase from hana testsuite gets miscompiled with -fsanitize=undefined)\n\n\tPR c++/70147\n\t* cp-ubsan.c (cp_ubsan_maybe_initialize_vtbl_ptrs): Temporarily\n\tset in_base_initializer.\n\n\t* g++.dg/ubsan/pr70147-1.C: New test.\n\t* g++.dg/ubsan/pr70147-2.C: New test.\n\nFrom-SVN: r234248", "tree": {"sha": "f013dc14c56a36d06ea0994c23be1cac8f455fea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f013dc14c56a36d06ea0994c23be1cac8f455fea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1935f2506e9d4ad4ae4aedb691e5bbd26202ba25", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1935f2506e9d4ad4ae4aedb691e5bbd26202ba25", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1935f2506e9d4ad4ae4aedb691e5bbd26202ba25", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1935f2506e9d4ad4ae4aedb691e5bbd26202ba25/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b2de4950df09c1ec47b1b19eff62745e86663204", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2de4950df09c1ec47b1b19eff62745e86663204", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b2de4950df09c1ec47b1b19eff62745e86663204"}], "stats": {"total": 113, "additions": 113, "deletions": 0}, "files": [{"sha": "ee2ae896f71d93866d62c16ce695decbc733df17", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1935f2506e9d4ad4ae4aedb691e5bbd26202ba25/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1935f2506e9d4ad4ae4aedb691e5bbd26202ba25/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=1935f2506e9d4ad4ae4aedb691e5bbd26202ba25", "patch": "@@ -1,3 +1,9 @@\n+2016-03-16  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/70147\n+\t* cp-ubsan.c (cp_ubsan_maybe_initialize_vtbl_ptrs): Temporarily\n+\tset in_base_initializer.\n+\n 2016-03-15  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/70209"}, {"sha": "d4759da7a25a02d3b604de9ced863c74da9b866f", "filename": "gcc/cp/cp-ubsan.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1935f2506e9d4ad4ae4aedb691e5bbd26202ba25/gcc%2Fcp%2Fcp-ubsan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1935f2506e9d4ad4ae4aedb691e5bbd26202ba25/gcc%2Fcp%2Fcp-ubsan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-ubsan.c?ref=1935f2506e9d4ad4ae4aedb691e5bbd26202ba25", "patch": "@@ -318,9 +318,15 @@ cp_ubsan_maybe_initialize_vtbl_ptrs (tree addr)\n \n   tree type = TREE_TYPE (TREE_TYPE (addr));\n   tree list = build_tree_list (type, addr);\n+  /* We cannot rely on the vtable being set up.  We have to indirect via the\n+     vtt_parm.  */\n+  int save_in_base_initializer = in_base_initializer;\n+  in_base_initializer = 1;\n \n   /* Walk through the hierarchy, initializing the vptr in each base\n      class to NULL.  */\n   dfs_walk_once (TYPE_BINFO (type), cp_ubsan_dfs_initialize_vtbl_ptrs,\n \t\t NULL, list);\n+\n+  in_base_initializer = save_in_base_initializer;\n }"}, {"sha": "3f4d6142dca014eefa44eec75225fb7ffb576be6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1935f2506e9d4ad4ae4aedb691e5bbd26202ba25/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1935f2506e9d4ad4ae4aedb691e5bbd26202ba25/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1935f2506e9d4ad4ae4aedb691e5bbd26202ba25", "patch": "@@ -1,3 +1,9 @@\n+2016-03-16  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/70147\n+\t* g++.dg/ubsan/pr70147-1.C: New test.\n+\t* g++.dg/ubsan/pr70147-2.C: New test.\n+\n 2016-03-15  Martin Sebor  <msebor@redhat.com>\n \n \tPR c++/58281"}, {"sha": "f4dd859450df12ddfadf24e9f074d15c9956299a", "filename": "gcc/testsuite/g++.dg/ubsan/pr70147-1.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1935f2506e9d4ad4ae4aedb691e5bbd26202ba25/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fubsan%2Fpr70147-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1935f2506e9d4ad4ae4aedb691e5bbd26202ba25/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fubsan%2Fpr70147-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fubsan%2Fpr70147-1.C?ref=1935f2506e9d4ad4ae4aedb691e5bbd26202ba25", "patch": "@@ -0,0 +1,12 @@\n+// PR c++/70147\n+// { dg-do run }\n+// { dg-options \"-fsanitize=vptr\" }\n+\n+struct A { A () {} virtual void f () {} };\n+struct B : virtual A { B () {} virtual void f () {} };\n+struct C : B, virtual A { C () {} } c;\n+\n+int\n+main ()\n+{\n+}"}, {"sha": "b74249fe3ec45da3c22945ceb9def9130a081df9", "filename": "gcc/testsuite/g++.dg/ubsan/pr70147-2.C", "status": "added", "additions": 83, "deletions": 0, "changes": 83, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1935f2506e9d4ad4ae4aedb691e5bbd26202ba25/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fubsan%2Fpr70147-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1935f2506e9d4ad4ae4aedb691e5bbd26202ba25/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fubsan%2Fpr70147-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fubsan%2Fpr70147-2.C?ref=1935f2506e9d4ad4ae4aedb691e5bbd26202ba25", "patch": "@@ -0,0 +1,83 @@\n+// PR c++/70147\n+// { dg-do run }\n+// { dg-skip-if \"\" { *-*-* }  { \"*\" } { \"-O0\" } }\n+// { dg-options \"-fsanitize=vptr\" }\n+\n+struct A\n+{\n+  A () : a (0) {}\n+  A (int x) : a (x) {}\n+  virtual void f () {}\n+  virtual int i () { int r = 0; __asm (\"\" : \"+r\" (r)); return r; }\n+  int a;\n+};\n+struct E\n+{\n+  E () : e (0) {}\n+  E (int x) : e (x) {}\n+  virtual void f () {}\n+  virtual int g () { int r = 0; __asm (\"\" : \"+r\" (r)); return r; }\n+  int e;\n+};\n+struct F\n+{\n+  F () : f (0) {}\n+  F (int x) : f (x) {}\n+  virtual int h () { int r = 0; __asm (\"\" : \"+r\" (r)); return r; }\n+  int f;\n+};\n+struct B : virtual A, public E, public F\n+{\n+  B ()\n+    : E (\n+         g ()\n+         + h ()\n+         + i ()\n+        ),\n+      F (g ()\n+         + h ()\n+         + i ()),\n+      b (g () + h () + i ())\t// It is ok to call the methods here.\n+  {\n+    b += g () + h () + i ();\t// And here too.\n+  }\n+  virtual void f () {}\n+  int b;\n+};\n+struct C : B, virtual A\n+{\n+  C () {}\n+};\n+\n+int\n+main ()\n+{\n+  C c;\n+}\n+\n+// { dg-output \"\\[^\\n\\r]*pr70147-2.C:33:\\[0-9]*: runtime error: member call on address 0x\\[0-9a-fA-F]* which does not point to an object of type 'E'(\\n|\\r\\n|\\r)\" }\n+// { dg-output \"0x\\[0-9a-fA-F]*: note: object has invalid vptr(\\n|\\r\\n|\\r)\" }\n+// { dg-output \"  ?.. .. .. ..  ?.. .. .. ..  ?.. .. .. .. \\[^\\n\\r]*(\\n|\\r\\n|\\r)\" }\n+// { dg-output \"              ?\\\\^~~~~~~~~~~\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" }\n+// { dg-output \"              ?invalid vptr(\\n|\\r\\n|\\r)\" }\n+// { dg-output \"\\[^\\n\\r]*pr70147-2.C:34:\\[0-9]*: runtime error: member call on address 0x\\[0-9a-fA-F]* which does not point to an object of type 'F'(\\n|\\r\\n|\\r)\" }\n+// { dg-output \"0x\\[0-9a-fA-F]*: note: object has invalid vptr(\\n|\\r\\n|\\r)\" }\n+// { dg-output \"  ?.. .. .. ..  ?.. .. .. ..  ?.. .. .. .. \\[^\\n\\r]*(\\n|\\r\\n|\\r)\" }\n+// { dg-output \"              ?\\\\^~~~~~~~~~~\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" }\n+// { dg-output \"              ?invalid vptr\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" }\n+// { dg-output \"\\[^\\n\\r]*pr70147-2.C:35:\\[0-9]*: runtime error: member call on address 0x\\[0-9a-fA-F]* which does not point to an object of type 'A'(\\n|\\r\\n|\\r)\" }\n+// { dg-output \"0x\\[0-9a-fA-F]*: note: object has invalid vptr(\\n|\\r\\n|\\r)\" }\n+// { dg-output \"  ?.. .. .. ..  ?.. .. .. ..  ?.. .. .. .. \\[^\\n\\r]*(\\n|\\r\\n|\\r)\" }\n+// { dg-output \"              ?\\\\^~~~~~~~~~~\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" }\n+// { dg-output \"              ?invalid vptr\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" }\n+// Note we don't catch the UB of calling g () on line 36.\n+// { dg-output \"\\[^\\n\\r]*pr70147-2.C:38:\\[0-9]*: runtime error: member call on address 0x\\[0-9a-fA-F]* which does not point to an object of type 'F'(\\n|\\r\\n|\\r)\" }\n+// { dg-output \"0x\\[0-9a-fA-F]*: note: object has invalid vptr(\\n|\\r\\n|\\r)\" }\n+// { dg-output \"  ?.. .. .. ..  ?.. .. .. ..  ?.. .. .. .. \\[^\\n\\r]*(\\n|\\r\\n|\\r)\" }\n+// { dg-output \"              ?\\\\^~~~~~~~~~~\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" }\n+// { dg-output \"              ?invalid vptr\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" }\n+// { dg-output \"\\[^\\n\\r]*pr70147-2.C:39:\\[0-9]*: runtime error: member call on address 0x\\[0-9a-fA-F]* which does not point to an object of type 'A'(\\n|\\r\\n|\\r)\" }\n+// { dg-output \"0x\\[0-9a-fA-F]*: note: object has invalid vptr(\\n|\\r\\n|\\r)\" }\n+// { dg-output \"  ?.. .. .. ..  ?.. .. .. ..  ?.. .. .. .. \\[^\\n\\r]*(\\n|\\r\\n|\\r)\" }\n+// { dg-output \"              ?\\\\^~~~~~~~~~~\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" }\n+// { dg-output \"              ?invalid vptr\" }"}]}