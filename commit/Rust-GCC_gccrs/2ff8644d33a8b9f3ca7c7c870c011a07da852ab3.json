{"sha": "2ff8644d33a8b9f3ca7c7c870c011a07da852ab3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmZmODY0NGQzM2E4YjlmM2NhN2M3Yzg3MGMwMTFhMDdkYTg1MmFiMw==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2008-03-23T21:49:41Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2008-03-23T21:49:41Z"}, "message": "i386.h (STATIC_CHAIN_REGNUM): Use R10_REG and CX_REG.\n\n2008-03-23  H.J. Lu  <hongjiu.lu@intel.com>\n\n\t* config/i386/i386.h (STATIC_CHAIN_REGNUM): Use R10_REG and\n\tCX_REG.\n\nFrom-SVN: r133468", "tree": {"sha": "bf0b5855b1e471e2c81f52fc390f76434259cb7a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bf0b5855b1e471e2c81f52fc390f76434259cb7a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2ff8644d33a8b9f3ca7c7c870c011a07da852ab3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ff8644d33a8b9f3ca7c7c870c011a07da852ab3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ff8644d33a8b9f3ca7c7c870c011a07da852ab3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ff8644d33a8b9f3ca7c7c870c011a07da852ab3/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b45890a44539a840c0ba605e4dea699ca6f50763", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b45890a44539a840c0ba605e4dea699ca6f50763", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b45890a44539a840c0ba605e4dea699ca6f50763"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "b9f4ec26e766b7b8aa0f816e7a94e3a093b29e96", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ff8644d33a8b9f3ca7c7c870c011a07da852ab3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ff8644d33a8b9f3ca7c7c870c011a07da852ab3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2ff8644d33a8b9f3ca7c7c870c011a07da852ab3", "patch": "@@ -1,3 +1,8 @@\n+2008-03-23  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* config/i386/i386.h (STATIC_CHAIN_REGNUM): Use R10_REG and\n+\tCX_REG.\n+\n 2008-03-23  Zuxy Meng <zuxy.meng@gmail.com>\n \n \t* doc/extend.texi (Function Attributes): Add missing comma in the"}, {"sha": "aa7f57a697bbbbe74f486ec3a2070c13e2c1662b", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ff8644d33a8b9f3ca7c7c870c011a07da852ab3/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ff8644d33a8b9f3ca7c7c870c011a07da852ab3/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=2ff8644d33a8b9f3ca7c7c870c011a07da852ab3", "patch": "@@ -1234,7 +1234,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n /* Register in which static-chain is passed to a function.\n    We do use ECX as static chain register for 32 bit ABI.  On the\n    64bit ABI, ECX is an argument register, so we use R10 instead.  */\n-#define STATIC_CHAIN_REGNUM (TARGET_64BIT ? FIRST_REX_INT_REG + 10 - 8 : 2)\n+#define STATIC_CHAIN_REGNUM (TARGET_64BIT ? R10_REG : CX_REG)\n \n /* Register to hold the addressing base for position independent\n    code access to data items.  We don't use PIC pointer for 64bit"}]}