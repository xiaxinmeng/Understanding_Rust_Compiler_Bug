{"sha": "4877a06fa4e9da107e0ddc0455a909f8b274846f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDg3N2EwNmZhNGU5ZGExMDdlMGRkYzA0NTVhOTA5ZjhiMjc0ODQ2Zg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1997-09-10T18:02:36Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1997-09-10T18:02:36Z"}, "message": "dwarf2 EH support\n\nFrom-SVN: r15257", "tree": {"sha": "bd7223d0cc3a3e21d547c4a9601ff1b7e12e5a26", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bd7223d0cc3a3e21d547c4a9601ff1b7e12e5a26"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4877a06fa4e9da107e0ddc0455a909f8b274846f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4877a06fa4e9da107e0ddc0455a909f8b274846f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4877a06fa4e9da107e0ddc0455a909f8b274846f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4877a06fa4e9da107e0ddc0455a909f8b274846f/comments", "author": null, "committer": null, "parents": [{"sha": "9dfc6eba89b34917b26947ffb35984cdd3f70944", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9dfc6eba89b34917b26947ffb35984cdd3f70944", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9dfc6eba89b34917b26947ffb35984cdd3f70944"}], "stats": {"total": 35, "additions": 35, "deletions": 0}, "files": [{"sha": "3b3805368842de52333cb3a260dc7d1580c64623", "filename": "gcc/frame.h", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4877a06fa4e9da107e0ddc0455a909f8b274846f/gcc%2Fframe.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4877a06fa4e9da107e0ddc0455a909f8b274846f/gcc%2Fframe.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fframe.h?ref=4877a06fa4e9da107e0ddc0455a909f8b274846f", "patch": "@@ -0,0 +1,35 @@\n+/* Copyright (C) 1997 Free Software Foundation, Inc.\n+   This file is part of GNU CC.  */\n+\n+typedef struct frame_state\n+{\n+  void *cfa;\n+  void *eh_ptr;\n+  long cfa_offset;\n+  long args_size;\n+  long reg_or_offset[FIRST_PSEUDO_REGISTER+1];\n+  unsigned short cfa_reg;\n+  unsigned short retaddr_column;\n+  char saved[FIRST_PSEUDO_REGISTER+1];\n+} frame_state;\n+\n+/* Values for 'saved' above.  */\n+#define REG_UNSAVED 0\n+#define REG_SAVED_OFFSET 1\n+#define REG_SAVED_REG 2\n+\n+/* Called either from crtbegin.o or a static constructor to register the\n+   unwind info for an object or translation unit, respectively.  */\n+\n+extern void __register_frame (void *);\n+\n+/* Called from crtend.o to deregister the unwind info for an object.  */\n+\n+extern void __deregister_frame (void *);\n+\n+/* Called from __throw to find the registers to restore for a given\n+   PC_TARGET.  The caller should allocate a local variable of `struct\n+   frame_state' (declared in frame.h) and pass its address to STATE_IN.\n+   Returns NULL on failure, otherwise returns STATE_IN.  */\n+\n+extern struct frame_state *__frame_state_for (void *, struct frame_state *);"}]}