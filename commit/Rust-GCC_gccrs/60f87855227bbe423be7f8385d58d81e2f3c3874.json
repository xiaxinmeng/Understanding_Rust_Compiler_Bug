{"sha": "60f87855227bbe423be7f8385d58d81e2f3c3874", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjBmODc4NTUyMjdiYmU0MjNiZTdmODM4NWQ1OGQ4MWUyZjNjMzg3NA==", "commit": {"author": {"name": "Andreas Simbuerger", "email": "simbuerg@fim.uni-passau.de", "date": "2010-08-11T20:30:41Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2010-08-11T20:30:41Z"}, "message": "Introduce compatibility to newer CLooG's CloogState and mask the use with macros where possible.\n\n2010-07-27  Andreas Simbuerger  <simbuerg@fim.uni-passau.de>\n\n\t* graphite-clast-to-gimple.c (build_cloog_prog): Extend with\n\tCloogState.\n\t(set_cloog_options): Same.\n\t(print_clast_stmt): Same.\n\t(scop_to_clast): Same.\n\t(print_generated_program): Same.\n\t(gloog): Same.\n\t* graphite-clast-to-gimple.h: Include graphite-cloog-util.h.\n\t(scop_to_clast): Extend with CloogState.\n\t* graphite-cloog-util.c: Include graphite-cloog-compat.h\n\t(new_Cloog_Domain_from_ppl_Polyhedron):\n\tExtend with CloogState.  Use cloog_domain_from_cloog_matrix (CLOOG_ORG).\n\t(new_Cloog_Domain_from_ppl_Pointset_Powerset): Extend with CloogState.\n\t(new_Cloog_Domain_from_ppl_Polyhedron): Same.\n\t* graphite-cloog-util.h (build_cloog_prog): Same.\n\t* graphite-cloog-copat.h (build_cloog_prog): New.\n\t(CloogState): New.\n\t(cloog_state_malloc): New.\n\t(cloog_state_free): New.\n\t(cloog_loop_malloc): New.\n\t(cloog_options_malloc): New.\n\t(cloog_statement_alloc): New.\n\t(cloog_domain_from_cloog_matrix): New.\n\t(new_Cloog_Domain_from_ppl_Pointset_Powerset): New.\n\t(new_Cloog_Domain_from_ppl_Polyhedron): New.\n\nFrom-SVN: r163164", "tree": {"sha": "8fdd4580fc6fed6d76b15a494cf7d13bbc5bb58c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8fdd4580fc6fed6d76b15a494cf7d13bbc5bb58c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/60f87855227bbe423be7f8385d58d81e2f3c3874", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60f87855227bbe423be7f8385d58d81e2f3c3874", "html_url": "https://github.com/Rust-GCC/gccrs/commit/60f87855227bbe423be7f8385d58d81e2f3c3874", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60f87855227bbe423be7f8385d58d81e2f3c3874/comments", "author": {"login": "simbuerg", "id": 598281, "node_id": "MDQ6VXNlcjU5ODI4MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/598281?v=4", "gravatar_id": "", "url": "https://api.github.com/users/simbuerg", "html_url": "https://github.com/simbuerg", "followers_url": "https://api.github.com/users/simbuerg/followers", "following_url": "https://api.github.com/users/simbuerg/following{/other_user}", "gists_url": "https://api.github.com/users/simbuerg/gists{/gist_id}", "starred_url": "https://api.github.com/users/simbuerg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/simbuerg/subscriptions", "organizations_url": "https://api.github.com/users/simbuerg/orgs", "repos_url": "https://api.github.com/users/simbuerg/repos", "events_url": "https://api.github.com/users/simbuerg/events{/privacy}", "received_events_url": "https://api.github.com/users/simbuerg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4431102bf04d1b55354ce0543e852e0bc5d8970d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4431102bf04d1b55354ce0543e852e0bc5d8970d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4431102bf04d1b55354ce0543e852e0bc5d8970d"}], "stats": {"total": 143, "additions": 115, "deletions": 28}, "files": [{"sha": "37fba311e0a716ceb2714b5590498d6875cb7ba8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60f87855227bbe423be7f8385d58d81e2f3c3874/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60f87855227bbe423be7f8385d58d81e2f3c3874/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=60f87855227bbe423be7f8385d58d81e2f3c3874", "patch": "@@ -1,3 +1,31 @@\n+2010-08-02  Andreas Simbuerger  <simbuerg@fim.uni-passau.de>\n+\n+\t* graphite-clast-to-gimple.c (build_cloog_prog): Extend with\n+\tCloogState.\n+\t(set_cloog_options): Same.\n+\t(print_clast_stmt): Same.\n+\t(scop_to_clast): Same.\n+\t(print_generated_program): Same.\n+\t(gloog): Same.\n+\t* graphite-clast-to-gimple.h: Include graphite-cloog-util.h.\n+\t(scop_to_clast): Extend with CloogState.\n+\t* graphite-cloog-util.c: Include graphite-cloog-compat.h\n+\t(new_Cloog_Domain_from_ppl_Polyhedron):\n+\tExtend with CloogState.  Use cloog_domain_from_cloog_matrix (CLOOG_ORG).\n+\t(new_Cloog_Domain_from_ppl_Pointset_Powerset): Extend with CloogState.\n+\t(new_Cloog_Domain_from_ppl_Polyhedron): Same.\n+\t* graphite-cloog-util.h (build_cloog_prog): Same.\n+\t* graphite-cloog-copat.h (build_cloog_prog): New.\n+\t(CloogState): New.\n+\t(cloog_state_malloc): New.\n+\t(cloog_state_free): New.\n+\t(cloog_loop_malloc): New.\n+\t(cloog_options_malloc): New.\n+\t(cloog_statement_alloc): New.\n+\t(cloog_domain_from_cloog_matrix): New.\n+\t(new_Cloog_Domain_from_ppl_Pointset_Powerset): New.\n+\t(new_Cloog_Domain_from_ppl_Polyhedron): New.\n+\n 2010-08-02  Andreas Simbuerger  <simbuerg@fim.uni-passau.de>\n \n \t* graphite-clast-to-gimple.c (clast_name_to_gcc): Parameter"}, {"sha": "b5e53b52c15484ee37131ed1b0d40b83657afb91", "filename": "gcc/ChangeLog.graphite", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60f87855227bbe423be7f8385d58d81e2f3c3874/gcc%2FChangeLog.graphite", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60f87855227bbe423be7f8385d58d81e2f3c3874/gcc%2FChangeLog.graphite", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog.graphite?ref=60f87855227bbe423be7f8385d58d81e2f3c3874", "patch": "@@ -1,3 +1,31 @@\n+2010-07-27  Andreas Simbuerger  <simbuerg@fim.uni-passau.de>\n+\n+\t* graphite-clast-to-gimple.c (build_cloog_prog): Extend with\n+\tCloogState.\n+\t(set_cloog_options): Same.\n+\t(print_clast_stmt): Same.\n+\t(scop_to_clast): Same.\n+\t(print_generated_program): Same.\n+\t(gloog): Same.\n+\t* graphite-clast-to-gimple.h: Include graphite-cloog-util.h.\n+\t(scop_to_clast): Extend with CloogState.\n+\t* graphite-cloog-util.c: Include graphite-cloog-compat.h\n+\t(new_Cloog_Domain_from_ppl_Polyhedron):\n+\tExtend with CloogState.  Use cloog_domain_from_cloog_matrix (CLOOG_ORG).\n+\t(new_Cloog_Domain_from_ppl_Pointset_Powerset): Extend with CloogState.\n+\t(new_Cloog_Domain_from_ppl_Polyhedron): Same.\n+\t* graphite-cloog-util.h (build_cloog_prog): Same.\n+\t* graphite-cloog-copat.h (build_cloog_prog): New.\n+\t(CloogState): New.\n+\t(cloog_state_malloc): New.\n+\t(cloog_state_free): New.\n+\t(cloog_loop_malloc): New.\n+\t(cloog_options_malloc): New.\n+\t(cloog_statement_alloc): New.\n+\t(cloog_domain_from_cloog_matrix): New.\n+\t(new_Cloog_Domain_from_ppl_Pointset_Powerset): New.\n+\t(new_Cloog_Domain_from_ppl_Polyhedron): New.\n+\n 2010-07-27  Andreas Simbuerger  <simbuerg@fim.uni-passau.de>\n \n \t* graphite-clast-to-gimple.c (clast_name_to_gcc): Parameter"}, {"sha": "11867cfaf14237c43a75d187e10d9ba2410fdda1", "filename": "gcc/graphite-clast-to-gimple.c", "status": "modified", "additions": 30, "deletions": 18, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60f87855227bbe423be7f8385d58d81e2f3c3874/gcc%2Fgraphite-clast-to-gimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60f87855227bbe423be7f8385d58d81e2f3c3874/gcc%2Fgraphite-clast-to-gimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-clast-to-gimple.c?ref=60f87855227bbe423be7f8385d58d81e2f3c3874", "patch": "@@ -1204,7 +1204,8 @@ initialize_cloog_names (scop_p scop, CloogProgram *prog)\n /* Build cloog program for SCoP.  */\n \n static void\n-build_cloog_prog (scop_p scop, CloogProgram *prog, CloogOptions *options)\n+build_cloog_prog (scop_p scop, CloogProgram *prog,\n+                  CloogOptions *options, CloogState *state ATTRIBUTE_UNUSED)\n {\n   int i;\n   int max_nb_loops = scop_max_loop_depth (scop);\n@@ -1216,7 +1217,8 @@ build_cloog_prog (scop_p scop, CloogProgram *prog, CloogOptions *options)\n   int *scaldims;\n \n   cloog_program_set_context\n-    (prog, new_Cloog_Domain_from_ppl_Pointset_Powerset (SCOP_CONTEXT (scop)));\n+    (prog, new_Cloog_Domain_from_ppl_Pointset_Powerset (SCOP_CONTEXT (scop),\n+      scop_nb_params (scop), state));\n   nbs = unify_scattering_dimensions (scop);\n   scaldims = (int *) xmalloc (nbs * (sizeof (int)));\n   cloog_program_set_nb_scattdims (prog, nbs);\n@@ -1226,24 +1228,26 @@ build_cloog_prog (scop_p scop, CloogProgram *prog, CloogOptions *options)\n     {\n       CloogStatement *stmt;\n       CloogBlock *block;\n+      CloogDomain *dom;\n \n       /* Dead code elimination: when the domain of a PBB is empty,\n \t don't generate code for the PBB.  */\n       if (ppl_Pointset_Powerset_C_Polyhedron_is_empty (PBB_DOMAIN (pbb)))\n \tcontinue;\n \n       /* Build the new statement and its block.  */\n-      stmt = cloog_statement_alloc (pbb_index (pbb));\n+      stmt = cloog_statement_alloc (state, pbb_index (pbb));\n+      dom = new_Cloog_Domain_from_ppl_Pointset_Powerset (PBB_DOMAIN (pbb),\n+                                                         scop_nb_params (scop),\n+                                                         state);\n       block = cloog_block_alloc (stmt, 0, NULL, pbb_dim_iter_domain (pbb));\n       cloog_statement_set_usr (stmt, pbb);\n \n       /* Build loop list.  */\n       {\n-        CloogLoop *new_loop_list = cloog_loop_malloc ();\n+        CloogLoop *new_loop_list = cloog_loop_malloc (state);\n         cloog_loop_set_next (new_loop_list, loop_list);\n-        cloog_loop_set_domain\n-\t  (new_loop_list,\n-\t   new_Cloog_Domain_from_ppl_Pointset_Powerset (PBB_DOMAIN (pbb)));\n+        cloog_loop_set_domain (new_loop_list, dom);\n         cloog_loop_set_block (new_loop_list, block);\n         loop_list = new_loop_list;\n       }\n@@ -1266,7 +1270,8 @@ build_cloog_prog (scop_p scop, CloogProgram *prog, CloogOptions *options)\n \tCloogDomain *dom;\n \n \tscat = PBB_TRANSFORMED_SCATTERING (pbb);\n-\tdom = new_Cloog_Domain_from_ppl_Polyhedron (scat);\n+\tdom = new_Cloog_Domain_from_ppl_Polyhedron (scat, scop_nb_params (scop),\n+                                                    state);\n \n         cloog_set_next_domain (new_scattering, scattering);\n         cloog_set_domain (new_scattering, dom);\n@@ -1312,9 +1317,9 @@ build_cloog_prog (scop_p scop, CloogProgram *prog, CloogOptions *options)\n /* Return the options that will be used in GLOOG.  */\n \n static CloogOptions *\n-set_cloog_options (void)\n+set_cloog_options (CloogState *state ATTRIBUTE_UNUSED)\n {\n-  CloogOptions *options = cloog_options_malloc ();\n+  CloogOptions *options = cloog_options_malloc (state);\n \n   /* Change cloog output language to C.  If we do use FORTRAN instead, cloog\n      will stop e.g. with \"ERROR: unbounded loops not allowed in FORTRAN.\", if\n@@ -1363,10 +1368,12 @@ set_cloog_options (void)\n void\n print_clast_stmt (FILE *file, struct clast_stmt *stmt)\n {\n-  CloogOptions *options = set_cloog_options ();\n+  CloogState *state = cloog_state_malloc ();\n+  CloogOptions *options = set_cloog_options (state);\n \n   clast_pprint (file, stmt, 0, options);\n   cloog_options_free (options);\n+  cloog_state_free (state);\n }\n \n /* Prints STMT to STDERR.  */\n@@ -1382,14 +1389,14 @@ debug_clast_stmt (struct clast_stmt *stmt)\n    without a program.  */\n \n cloog_prog_clast\n-scop_to_clast (scop_p scop)\n+scop_to_clast (scop_p scop, CloogState *state)\n {\n-  CloogOptions *options = set_cloog_options ();\n+  CloogOptions *options = set_cloog_options (state);\n   cloog_prog_clast pc;\n \n   /* Connect new cloog prog generation to graphite.  */\n   pc.prog = cloog_program_malloc ();\n-  build_cloog_prog (scop, pc.prog, options);\n+  build_cloog_prog (scop, pc.prog, options, state);\n   pc.prog = cloog_program_generate (pc.prog, options);\n   pc.stmt = cloog_clast_create (pc.prog, options);\n \n@@ -1402,8 +1409,10 @@ scop_to_clast (scop_p scop)\n void\n print_generated_program (FILE *file, scop_p scop)\n {\n-  CloogOptions *options = set_cloog_options ();\n-  cloog_prog_clast pc = scop_to_clast (scop);\n+  CloogState *state = cloog_state_malloc ();\n+  CloogOptions *options = set_cloog_options (state);\n+\n+  cloog_prog_clast pc = scop_to_clast (scop, state);\n \n   fprintf (file, \"       (prog: \\n\");\n   cloog_program_print (file, pc.prog);\n@@ -1454,11 +1463,13 @@ gloog (scop_p scop, htab_t bb_pbb_mapping)\n   ifsese if_region = NULL;\n   htab_t newivs_index, params_index;\n   cloog_prog_clast pc;\n+  CloogState *state;\n \n+  state = cloog_state_malloc ();\n   timevar_push (TV_GRAPHITE_CODE_GEN);\n   gloog_error = false;\n \n-  pc = scop_to_clast (scop);\n+  pc = scop_to_clast (scop, state);\n \n   if (dump_file && (dump_flags & TDF_DETAILS))\n     {\n@@ -1523,7 +1534,8 @@ gloog (scop_p scop, htab_t bb_pbb_mapping)\n \t       num_no_dependency);\n     }\n \n+  cloog_state_free (state);\n+\n   return !gloog_error;\n }\n-\n #endif"}, {"sha": "cd3cbcaebea68790a5de3f9b9330624e2dab9c71", "filename": "gcc/graphite-clast-to-gimple.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60f87855227bbe423be7f8385d58d81e2f3c3874/gcc%2Fgraphite-clast-to-gimple.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60f87855227bbe423be7f8385d58d81e2f3c3874/gcc%2Fgraphite-clast-to-gimple.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-clast-to-gimple.h?ref=60f87855227bbe423be7f8385d58d81e2f3c3874", "patch": "@@ -21,6 +21,7 @@ along with GCC; see the file COPYING3.  If not see\n #ifndef GCC_GRAPHITE_CLAST_TO_GIMPLE_H\n #define GCC_GRAPHITE_CLAST_TO_GIMPLE_H\n \n+#include \"graphite-cloog-util.h\"\n /* Data structure for CLooG program representation.  */\n \n typedef struct cloog_prog_clast {\n@@ -37,7 +38,7 @@ typedef struct bb_pbb_def\n }bb_pbb_def;\n \n extern bool gloog (scop_p, htab_t);\n-extern cloog_prog_clast scop_to_clast (scop_p);\n+extern cloog_prog_clast scop_to_clast (scop_p, CloogState *);\n extern void debug_clast_stmt (struct clast_stmt *);\n extern void print_clast_stmt (FILE *, struct clast_stmt *);\n "}, {"sha": "f27ee5a1228977fee224ceccfcf9c9c077c3afe1", "filename": "gcc/graphite-cloog-compat.h", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60f87855227bbe423be7f8385d58d81e2f3c3874/gcc%2Fgraphite-cloog-compat.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60f87855227bbe423be7f8385d58d81e2f3c3874/gcc%2Fgraphite-cloog-compat.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-cloog-compat.h?ref=60f87855227bbe423be7f8385d58d81e2f3c3874", "patch": "@@ -32,7 +32,8 @@ typedef const char *clast_name_p;\n #ifndef CLOOG_ORG\n \n /* CloogOptions compatibility.  */\n-#define build_cloog_prog(SCOP, PROG, OPT) build_cloog_prog (SCOP, PROG)\n+#define build_cloog_prog(SCOP, PROG, OPT, STATE)\\\n+  build_cloog_prog (SCOP, PROG, STATE)\n #define cloog_program_extract_scalars(PROG, SCATT, OPT)\\\n   cloog_program_extract_scalars (PROG, SCATT)\n #define cloog_program_scatter(PROG, SCATT, OPT)\\\n@@ -44,6 +45,19 @@ typedef const char *clast_name_p;\n #define clast_expr_bin expr_bin\n #define clast_pprint pprint\n \n+/* CloogState compatibility.  */\n+#define CloogState void\n+#define cloog_state_malloc() NULL\n+#define cloog_state_free(STATE)\n+#define cloog_loop_malloc(STATE) cloog_loop_malloc ()\n+#define cloog_options_malloc(STATE) cloog_options_malloc ()\n+#define cloog_statement_alloc(STATE, INDEX) cloog_statement_alloc (INDEX)\n+#define new_Cloog_Domain_from_ppl_Pointset_Powerset(PSPS, NB, STATE)\\\n+  new_Cloog_Domain_from_ppl_Pointset_Powerset (PSPS)\n+#define new_Cloog_Domain_from_ppl_Polyhedron(POLY, NB, STATE)\\\n+  new_Cloog_Domain_from_ppl_Polyhedron (POLY)\n+#define cloog_domain_from_cloog_matrix(STATE, MAT, NB)\\\n+  cloog_domain_matrix2domain (MAT)\n #endif\n \n /* Adapt CLooG accessors from CLooG legacy to"}, {"sha": "500443fd53697be6119d8e8167ca1a82ebab3b2a", "filename": "gcc/graphite-cloog-util.c", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60f87855227bbe423be7f8385d58d81e2f3c3874/gcc%2Fgraphite-cloog-util.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60f87855227bbe423be7f8385d58d81e2f3c3874/gcc%2Fgraphite-cloog-util.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-cloog-util.c?ref=60f87855227bbe423be7f8385d58d81e2f3c3874", "patch": "@@ -30,6 +30,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"ppl_c.h\"\n #include \"cloog/cloog.h\"\n #include \"graphite-cloog-util.h\"\n+#include \"graphite-cloog-compat.h\"\n \n /* Counts the number of constraints in PCS.  */\n \n@@ -228,19 +229,21 @@ new_C_Polyhedron_from_Cloog_Matrix (ppl_Polyhedron_t *ph,\n /* Creates a CloogDomain from polyhedron PH.  */\n \n CloogDomain *\n-new_Cloog_Domain_from_ppl_Polyhedron (ppl_const_Polyhedron_t ph)\n+new_Cloog_Domain_from_ppl_Polyhedron (ppl_const_Polyhedron_t ph, int nb_params,\n+                                      CloogState *state ATTRIBUTE_UNUSED)\n {\n   CloogMatrix *mat = new_Cloog_Matrix_from_ppl_Polyhedron (ph);\n-  CloogDomain *res = cloog_domain_matrix2domain (mat);\n+  CloogDomain *res = cloog_domain_from_cloog_matrix (state, mat, nb_params);\n   cloog_matrix_free (mat);\n   return res;\n }\n \n /* Creates a CloogDomain from a pointset powerset PS.  */\n \n CloogDomain *\n-new_Cloog_Domain_from_ppl_Pointset_Powerset (\n-  ppl_Pointset_Powerset_C_Polyhedron_t ps)\n+new_Cloog_Domain_from_ppl_Pointset_Powerset\n+  (ppl_Pointset_Powerset_C_Polyhedron_t ps, int nb_params,\n+   CloogState *state ATTRIBUTE_UNUSED)\n {\n   CloogDomain *res = NULL;\n   ppl_Pointset_Powerset_C_Polyhedron_iterator_t it, end;\n@@ -257,7 +260,7 @@ new_Cloog_Domain_from_ppl_Pointset_Powerset (\n       CloogDomain *tmp;\n \n       ppl_Pointset_Powerset_C_Polyhedron_iterator_dereference (it, &ph);\n-      tmp = new_Cloog_Domain_from_ppl_Polyhedron (ph);\n+      tmp = new_Cloog_Domain_from_ppl_Polyhedron (ph, nb_params, state);\n \n       if (res == NULL)\n \tres = tmp;"}, {"sha": "eaa48f33f679cd9d0d0916570642458e5066d307", "filename": "gcc/graphite-cloog-util.h", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60f87855227bbe423be7f8385d58d81e2f3c3874/gcc%2Fgraphite-cloog-util.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60f87855227bbe423be7f8385d58d81e2f3c3874/gcc%2Fgraphite-cloog-util.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-cloog-util.h?ref=60f87855227bbe423be7f8385d58d81e2f3c3874", "patch": "@@ -25,9 +25,10 @@ along with GCC; see the file COPYING3.  If not see\n #include \"graphite-cloog-compat.h\"\n \n CloogMatrix *new_Cloog_Matrix_from_ppl_Polyhedron (ppl_const_Polyhedron_t);\n-CloogDomain *new_Cloog_Domain_from_ppl_Polyhedron (ppl_const_Polyhedron_t);\n-CloogDomain * new_Cloog_Domain_from_ppl_Pointset_Powerset (\n-  ppl_Pointset_Powerset_C_Polyhedron_t);\n+CloogDomain *new_Cloog_Domain_from_ppl_Polyhedron (ppl_const_Polyhedron_t,\n+\t\t\t\t\t\t   int, CloogState *);\n+CloogDomain * new_Cloog_Domain_from_ppl_Pointset_Powerset\n+  (ppl_Pointset_Powerset_C_Polyhedron_t, int, CloogState *);\n void new_C_Polyhedron_from_Cloog_Matrix (ppl_Polyhedron_t *, CloogMatrix *);\n \n #endif /* GRAPHITE_CLOOG_UTIL_H */"}]}