{"sha": "66d7749bce891ee8707c0c63ceffeac1a95b4d78", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjZkNzc0OWJjZTg5MWVlODcwN2MwYzYzY2VmZmVhYzFhOTViNGQ3OA==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2019-06-26T12:58:39Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2019-06-26T12:58:39Z"}, "message": "[PR preprocessor/90927] Fixe dependency output\n\nhttps://gcc.gnu.org/ml/gcc-patches/2019-06/msg01664.html\n\tlibcpp/\n\tPR preprocessor/90927\n\t* mkdeps.c (mkdeps::vec::operator[]): Add non-const variant.\n\t(deps_add_target): Deal with out of order unquoted targets.\n\n\tgcc/testsuite/\n\t* c-c++-common/pr90927.c: New.\n\nFrom-SVN: r272692", "tree": {"sha": "aa708b1c46212a60bc2e9fd101c299abd0c61a65", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aa708b1c46212a60bc2e9fd101c299abd0c61a65"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/66d7749bce891ee8707c0c63ceffeac1a95b4d78", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66d7749bce891ee8707c0c63ceffeac1a95b4d78", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66d7749bce891ee8707c0c63ceffeac1a95b4d78", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66d7749bce891ee8707c0c63ceffeac1a95b4d78/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "93a090cf2afdf3749c01bb55112c6e97cf38adc3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93a090cf2afdf3749c01bb55112c6e97cf38adc3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/93a090cf2afdf3749c01bb55112c6e97cf38adc3"}], "stats": {"total": 34, "additions": 31, "deletions": 3}, "files": [{"sha": "83cef684d159ed4500966b0db34ae53f5631b71c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66d7749bce891ee8707c0c63ceffeac1a95b4d78/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66d7749bce891ee8707c0c63ceffeac1a95b4d78/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=66d7749bce891ee8707c0c63ceffeac1a95b4d78", "patch": "@@ -1,3 +1,7 @@\n+2019-06-26  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* c-c++-common/pr90927.c: New.\n+\n 2019-06-26  Richard Biener  <rguenther@suse.de>\n \n \tPR ipa/90982"}, {"sha": "6b0d34827ab45b7f0bd74f3cfb27bb6165f4a260", "filename": "gcc/testsuite/c-c++-common/pr90927.c", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66d7749bce891ee8707c0c63ceffeac1a95b4d78/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr90927.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66d7749bce891ee8707c0c63ceffeac1a95b4d78/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr90927.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr90927.c?ref=66d7749bce891ee8707c0c63ceffeac1a95b4d78", "patch": "@@ -0,0 +1,6 @@\n+/* { dg-do preprocess } */\n+/* { dg-additional-options \"-M -MQ b\\\\\\$ob -MT b\\\\\\$ill\" } */\n+\n+int i;\n+\n+/* { dg-final { scan-file pr90927.i {b\\$ill b\\$\\$ob:} } } */"}, {"sha": "1575d4bcda24199748ac5ad504f29624393e601c", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66d7749bce891ee8707c0c63ceffeac1a95b4d78/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66d7749bce891ee8707c0c63ceffeac1a95b4d78/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=66d7749bce891ee8707c0c63ceffeac1a95b4d78", "patch": "@@ -1,3 +1,9 @@\n+2019-06-26  Nathan Sidwell  <nathan@acm.org>\n+\n+\tPR preprocessor/90927\n+\t* mkdeps.c (mkdeps::vec::operator[]): Add non-const variant.\n+\t(deps_add_target): Deal with out of order unquoted targets.\n+\n 2019-05-19  Andrew Pinski  <apinski@marvell.com>\n \n \tPR pch/81721"}, {"sha": "676ae122bde88685e5e61454fb1289554d2a6d54", "filename": "libcpp/mkdeps.c", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66d7749bce891ee8707c0c63ceffeac1a95b4d78/libcpp%2Fmkdeps.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66d7749bce891ee8707c0c63ceffeac1a95b4d78/libcpp%2Fmkdeps.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fmkdeps.c?ref=66d7749bce891ee8707c0c63ceffeac1a95b4d78", "patch": "@@ -59,6 +59,10 @@ struct mkdeps\n     {\n       return ary[ix];\n     }\n+    T &operator[] (unsigned ix)\n+    {\n+      return ary[ix];\n+    }\n     void push (const T &elt)\n     {\n       if (num == alloc)\n@@ -235,14 +239,22 @@ deps_free (struct mkdeps *d)\n void\n deps_add_target (struct mkdeps *d, const char *t, int quote)\n {\n-  t = apply_vpath (d, t);\n+  t = xstrdup (apply_vpath (d, t));\n+\n   if (!quote)\n     {\n-      gcc_assert (d->quote_lwm == d->targets.size ());\n+      /* Sometimes unquoted items are added after quoted ones.\n+\t Swap out the lowest quoted.  */\n+      if (d->quote_lwm != d->targets.size ())\n+\t{\n+\t  const char *lowest = d->targets[d->quote_lwm];\n+\t  d->targets[d->quote_lwm] = t;\n+\t  t = lowest;\n+\t}\n       d->quote_lwm++;\n     }\n \n-  d->targets.push (xstrdup (t));\n+  d->targets.push (t);\n }\n \n /* Sets the default target if none has been given already.  An empty"}]}