{"sha": "580536aa23064b9deb124bb70c9327c865611b27", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTgwNTM2YWEyMzA2NGI5ZGViMTI0YmI3MGM5MzI3Yzg2NTYxMWIyNw==", "commit": {"author": {"name": "Jerome Lambourg", "email": "lambourg@adacore.com", "date": "2017-06-27T13:47:26Z"}, "committer": {"name": "Olivier Hainque", "email": "hainque@gcc.gnu.org", "date": "2017-06-27T13:47:26Z"}, "message": "vxworks.h (DBX_REGISTER_NUMBER): Pick distinct map for 64bits.\n\n2017-06-27  Jerome Lambourg  <lambourg@adacore.com>\n            Olivier Hainque  <hainque@adacore.com>\n\n\t* config/i386/vxworks.h (DBX_REGISTER_NUMBER): Pick distinct\n\tmap for 64bits.\n\t(TARGET_OS_CPP_BUILTINS): builtin_define CPU to X86_64 for 64bit\n\ttargets. Pick a default if no particular attempt applied.\n\t(STACK_CHECK_PROTECT): Double for 64bit targets, which have\n\tlarger contexts.\n\n\nCo-Authored-By: Olivier Hainque <hainque@adacore.com>\n\nFrom-SVN: r249690", "tree": {"sha": "c7602e66ff552ae7b5f88cddf8b4e926c22f3a80", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c7602e66ff552ae7b5f88cddf8b4e926c22f3a80"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/580536aa23064b9deb124bb70c9327c865611b27", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/580536aa23064b9deb124bb70c9327c865611b27", "html_url": "https://github.com/Rust-GCC/gccrs/commit/580536aa23064b9deb124bb70c9327c865611b27", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/580536aa23064b9deb124bb70c9327c865611b27/comments", "author": {"login": "lambourg", "id": 480233, "node_id": "MDQ6VXNlcjQ4MDIzMw==", "avatar_url": "https://avatars.githubusercontent.com/u/480233?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lambourg", "html_url": "https://github.com/lambourg", "followers_url": "https://api.github.com/users/lambourg/followers", "following_url": "https://api.github.com/users/lambourg/following{/other_user}", "gists_url": "https://api.github.com/users/lambourg/gists{/gist_id}", "starred_url": "https://api.github.com/users/lambourg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lambourg/subscriptions", "organizations_url": "https://api.github.com/users/lambourg/orgs", "repos_url": "https://api.github.com/users/lambourg/repos", "events_url": "https://api.github.com/users/lambourg/events{/privacy}", "received_events_url": "https://api.github.com/users/lambourg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "50567938f93131f62346523bdb5a7d5fd251f42e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50567938f93131f62346523bdb5a7d5fd251f42e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50567938f93131f62346523bdb5a7d5fd251f42e"}], "stats": {"total": 26, "additions": 23, "deletions": 3}, "files": [{"sha": "f52fde4fafa34a039e3496e5dd60a96c8cc1e4bf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/580536aa23064b9deb124bb70c9327c865611b27/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/580536aa23064b9deb124bb70c9327c865611b27/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=580536aa23064b9deb124bb70c9327c865611b27", "patch": "@@ -1,3 +1,13 @@\n+2017-06-27  Jerome Lambourg  <lambourg@adacore.com>\n+            Olivier Hainque  <hainque@adacore.com>\n+\n+\t* config/i386/vxworks.h (DBX_REGISTER_NUMBER): Pick distinct\n+\tmap for 64bits.\n+\t(TARGET_OS_CPP_BUILTINS): builtin_define CPU to X86_64 for 64bit\n+\ttargets. Pick a default if no particular attempt applied.\n+\t(STACK_CHECK_PROTECT): Double for 64bit targets, which have\n+\tlarger contexts.\n+\n 2017-06-27  Jerome Lambourg  <lambourg@adacore.com>\n \n \t* config.gcc (i*86-wrs-vxworks7): Handle new acceptable triplet."}, {"sha": "c851e042a5ac525f04e5595bbd3e848eeead0261", "filename": "gcc/config/i386/vxworks.h", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/580536aa23064b9deb124bb70c9327c865611b27/gcc%2Fconfig%2Fi386%2Fvxworks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/580536aa23064b9deb124bb70c9327c865611b27/gcc%2Fconfig%2Fi386%2Fvxworks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fvxworks.h?ref=580536aa23064b9deb124bb70c9327c865611b27", "patch": "@@ -34,7 +34,8 @@ along with GCC; see the file COPYING3.  If not see\n    the SVR4 numbering.  */\n \n #undef DBX_REGISTER_NUMBER\n-#define DBX_REGISTER_NUMBER(n)  svr4_dbx_register_map[n]\n+#define DBX_REGISTER_NUMBER(n) \\\n+  (TARGET_64BIT ? dbx64_register_map[n] : svr4_dbx_register_map[n])\n \n #define TARGET_OS_CPP_BUILTINS()\t\t\t\\\n   do\t\t\t\t\t\t\t\\\n@@ -59,7 +60,11 @@ along with GCC; see the file COPYING3.  If not see\n           builtin_define (\"CPU=PENTIUM4\");\t\t\\\n           builtin_define (\"CPU_VARIANT=PENTIUM4\");\t\\\n         }\t\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\\\n+      else if (TARGET_64BIT)\t\t\t\t\\\n+          builtin_define (\"CPU=X86_64\");\t\t\\\n+      else\t\t\t\t\t\t\\\n+          builtin_define (\"CPU=I80386\");\t\t\\\n+    } \t\t\t\t\t\t\t\\\n   while (0)\n \n #undef  CPP_SPEC\n@@ -91,5 +96,10 @@ along with GCC; see the file COPYING3.  If not see\n #define STACK_CHECK_STATIC_BUILTIN 1\n \n /* This platform supports the probing method of stack checking (RTP mode).\n-   8K is reserved in the stack to propagate exceptions in case of overflow.  */\n+   8K is reserved in the stack to propagate exceptions in case of overflow. \n+   On 64-bit targets, we double that size.  */\n+#if TARGET_64BIT_DEFAULT\n+#define STACK_CHECK_PROTECT 16384\n+#else\n #define STACK_CHECK_PROTECT 8192\n+#endif"}]}