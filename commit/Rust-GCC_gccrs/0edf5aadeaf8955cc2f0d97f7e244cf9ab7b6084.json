{"sha": "0edf5aadeaf8955cc2f0d97f7e244cf9ab7b6084", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGVkZjVhYWRlYWY4OTU1Y2MyZjBkOTdmN2UyNDRjZjlhYjdiNjA4NA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2015-01-09T18:02:47Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2015-01-09T18:02:47Z"}, "message": "re PR libstdc++/64476 (std::uninitialized_copy tests assignability the wrong way, resulting in performance pessimization)\n\n\tPR libstdc++/64476\n\t* include/bits/stl_uninitialized.h (uninitialized_copy): Fix\n\tis_assignable arguments.\n\t* testsuite/20_util/specialized_algorithms/uninitialized_copy/64476.cc:\n\tNew.\n\nFrom-SVN: r219398", "tree": {"sha": "1738dc512a1370502b752aea2a252efc92fa9c8d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1738dc512a1370502b752aea2a252efc92fa9c8d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0edf5aadeaf8955cc2f0d97f7e244cf9ab7b6084", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0edf5aadeaf8955cc2f0d97f7e244cf9ab7b6084", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0edf5aadeaf8955cc2f0d97f7e244cf9ab7b6084", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0edf5aadeaf8955cc2f0d97f7e244cf9ab7b6084/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "100bfe4a97e83c70098590e57c4f4f04d98c0837", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/100bfe4a97e83c70098590e57c4f4f04d98c0837", "html_url": "https://github.com/Rust-GCC/gccrs/commit/100bfe4a97e83c70098590e57c4f4f04d98c0837"}], "stats": {"total": 78, "additions": 76, "deletions": 2}, "files": [{"sha": "c27250d52a9832a1222064c50b9470d2cb632243", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0edf5aadeaf8955cc2f0d97f7e244cf9ab7b6084/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0edf5aadeaf8955cc2f0d97f7e244cf9ab7b6084/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=0edf5aadeaf8955cc2f0d97f7e244cf9ab7b6084", "patch": "@@ -1,3 +1,11 @@\n+2015-01-09  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/64476\n+\t* include/bits/stl_uninitialized.h (uninitialized_copy): Fix\n+\tis_assignable arguments.\n+\t* testsuite/20_util/specialized_algorithms/uninitialized_copy/64476.cc:\n+\tNew.\n+\n 2015-01-09  Andreas Tobler  <andreast@gcc.gnu.org>\n \n \t* libsupc++/unwind-cxx.h: Revert previous commit."}, {"sha": "61a15618f43795899e688e7536683481cdf2cbb5", "filename": "libstdc++-v3/include/bits/stl_uninitialized.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0edf5aadeaf8955cc2f0d97f7e244cf9ab7b6084/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_uninitialized.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0edf5aadeaf8955cc2f0d97f7e244cf9ab7b6084/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_uninitialized.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_uninitialized.h?ref=0edf5aadeaf8955cc2f0d97f7e244cf9ab7b6084", "patch": "@@ -115,8 +115,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       const bool __assignable = true;\n #else\n       // trivial types can have deleted assignment\n-      typedef typename iterator_traits<_InputIterator>::reference _RefType;\n-      const bool __assignable = is_assignable<_ValueType1, _RefType>::value;\n+      typedef typename iterator_traits<_InputIterator>::reference _RefType1;\n+      typedef typename iterator_traits<_ForwardIterator>::reference _RefType2;\n+      const bool __assignable = is_assignable<_RefType2, _RefType1>::value;\n #endif\n \n       return std::__uninitialized_copy<__is_trivial(_ValueType1)"}, {"sha": "6369b17af1ee6e3208b14dc3628342f9c87cd6f8", "filename": "libstdc++-v3/testsuite/20_util/specialized_algorithms/uninitialized_copy/64476.cc", "status": "added", "additions": 65, "deletions": 0, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0edf5aadeaf8955cc2f0d97f7e244cf9ab7b6084/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fspecialized_algorithms%2Funinitialized_copy%2F64476.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0edf5aadeaf8955cc2f0d97f7e244cf9ab7b6084/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fspecialized_algorithms%2Funinitialized_copy%2F64476.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fspecialized_algorithms%2Funinitialized_copy%2F64476.cc?ref=0edf5aadeaf8955cc2f0d97f7e244cf9ab7b6084", "patch": "@@ -0,0 +1,65 @@\n+// Copyright (C) 2015 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++11\" }\n+\n+#include <memory>\n+#include <testsuite_hooks.h>\n+\n+struct X\n+{\n+  X() = default;\n+  X(X const &) = default;\n+  X& operator=(X const&) = delete;\n+};\n+\n+static_assert(__is_trivial(X), \"X is trivial\");\n+\n+int constructed = 0;\n+int assigned = 0;\n+\n+struct Y\n+{\n+  Y() = default;\n+  Y(Y const &) = default;\n+  Y& operator=(Y const&) = default;\n+\n+  Y(const X&) { ++constructed; }\n+  Y& operator=(const X&)& { ++assigned; return *this; }\n+  Y& operator=(const X&)&& = delete;\n+  Y& operator=(X&&) = delete;\n+};\n+\n+static_assert(__is_trivial(Y), \"Y is trivial\");\n+\n+void\n+test01()\n+{\n+  X a[100];\n+  Y b[100];\n+\n+  std::uninitialized_copy(a, a+10, b);\n+\n+  VERIFY(constructed == 0);\n+  VERIFY(assigned == 10);\n+}\n+\n+int\n+main()\n+{\n+  test01();\n+}"}]}