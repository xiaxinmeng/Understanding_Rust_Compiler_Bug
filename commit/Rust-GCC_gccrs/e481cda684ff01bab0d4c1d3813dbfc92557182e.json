{"sha": "e481cda684ff01bab0d4c1d3813dbfc92557182e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTQ4MWNkYTY4NGZmMDFiYWIwZDRjMWQzODEzZGJmYzkyNTU3MTgyZQ==", "commit": {"author": {"name": "Marc Glisse", "email": "marc.glisse@inria.fr", "date": "2012-09-27T10:06:23Z"}, "committer": {"name": "Marc Glisse", "email": "glisse@gcc.gnu.org", "date": "2012-09-27T10:06:23Z"}, "message": "re PR middle-end/53024 (Support vector_size that is not a power of 2)\n\n2012-09-27  Marc Glisse  <marc.glisse@inria.fr>\n\n\tPR c/53024\n\tPR c++/54427\n\t* gcc/doc/extend.texi (Vector Extensions): C++ improvements.\n\tPower of 2 size requirement.\n\nFrom-SVN: r191800", "tree": {"sha": "be6091b44aaa9d3b9e2680b33a4bc5f883de4e69", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/be6091b44aaa9d3b9e2680b33a4bc5f883de4e69"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e481cda684ff01bab0d4c1d3813dbfc92557182e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e481cda684ff01bab0d4c1d3813dbfc92557182e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e481cda684ff01bab0d4c1d3813dbfc92557182e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e481cda684ff01bab0d4c1d3813dbfc92557182e/comments", "author": {"login": "mglisse", "id": 10097863, "node_id": "MDQ6VXNlcjEwMDk3ODYz", "avatar_url": "https://avatars.githubusercontent.com/u/10097863?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mglisse", "html_url": "https://github.com/mglisse", "followers_url": "https://api.github.com/users/mglisse/followers", "following_url": "https://api.github.com/users/mglisse/following{/other_user}", "gists_url": "https://api.github.com/users/mglisse/gists{/gist_id}", "starred_url": "https://api.github.com/users/mglisse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mglisse/subscriptions", "organizations_url": "https://api.github.com/users/mglisse/orgs", "repos_url": "https://api.github.com/users/mglisse/repos", "events_url": "https://api.github.com/users/mglisse/events{/privacy}", "received_events_url": "https://api.github.com/users/mglisse/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e649d346e789ca15524872c11a40288113c27d50", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e649d346e789ca15524872c11a40288113c27d50", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e649d346e789ca15524872c11a40288113c27d50"}], "stats": {"total": 14, "additions": 11, "deletions": 3}, "files": [{"sha": "5850528c51e9d7f46688a793f1593a64e22e74a7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e481cda684ff01bab0d4c1d3813dbfc92557182e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e481cda684ff01bab0d4c1d3813dbfc92557182e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e481cda684ff01bab0d4c1d3813dbfc92557182e", "patch": "@@ -1,3 +1,10 @@\n+2012-09-27  Marc Glisse  <marc.glisse@inria.fr>\n+\n+\tPR c/53024\n+\tPR c++/54427\n+\t* doc/extend.texi (Vector Extensions): C++ improvements.\n+\tPower of 2 size requirement.\n+\n 2012-09-27  Richard Guenther  <rguenther@suse.de>\n \n \tPR lto/54709"}, {"sha": "9b216df8e1c315c4c2fc55dda053aeab9b944130", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e481cda684ff01bab0d4c1d3813dbfc92557182e/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e481cda684ff01bab0d4c1d3813dbfc92557182e/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=e481cda684ff01bab0d4c1d3813dbfc92557182e", "patch": "@@ -6820,7 +6820,8 @@ corresponding mode of @code{foo} will be @acronym{V4SI}.\n \n The @code{vector_size} attribute is only applicable to integral and\n float scalars, although arrays, pointers, and function return values\n-are allowed in conjunction with this construct.\n+are allowed in conjunction with this construct. Only power of two\n+sizes are currently allowed.\n \n All the basic integer types can be used as base types, both as signed\n and as unsigned: @code{char}, @code{short}, @code{int}, @code{long},\n@@ -6857,7 +6858,7 @@ minus or complement operators on a vector type is a vector whose\n elements are the negative or complemented values of the corresponding\n elements in the operand.\n \n-In C it is possible to use shifting operators @code{<<}, @code{>>} on\n+It is possible to use shifting operators @code{<<}, @code{>>} on\n integer-type vectors. The operation is defined as following: @code{@{a0,\n a1, @dots{}, an@} >> @{b0, b1, @dots{}, bn@} == @{a0 >> b0, a1 >> b1,\n @dots{}, an >> bn@}}@. Vector operands must have the same number of\n@@ -6888,7 +6889,7 @@ invoke undefined behavior at runtime.  Warnings for out of bound\n accesses for vector subscription can be enabled with\n @option{-Warray-bounds}.\n \n-In GNU C vector comparison is supported within standard comparison\n+Vector comparison is supported with standard comparison\n operators: @code{==, !=, <, <=, >, >=}. Comparison operands can be\n vector expressions of integer-type or real-type. Comparison between\n integer-type vectors and real-type vectors are not supported.  The"}]}