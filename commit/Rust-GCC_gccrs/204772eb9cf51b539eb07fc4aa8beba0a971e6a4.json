{"sha": "204772eb9cf51b539eb07fc4aa8beba0a971e6a4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjA0NzcyZWI5Y2Y1MWI1MzllYjA3ZmM0YWE4YmViYTBhOTcxZTZhNA==", "commit": {"author": {"name": "Chris Demetriou", "email": "cgd@sibyte.com", "date": "2000-08-11T03:18:05Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2000-08-11T03:18:05Z"}, "message": "elf.h (CTOR_SECTION_NAME, [...]): New macros define the name of CTOR and DTOR sections.\n\n        * mips/elf.h (CTOR_SECTION_NAME, DTOR_SECTION_NAME): New\n\tmacros define the name of CTOR and DTOR sections.\n\t(CTOR_LIST_BEGIN, CTOR_LIST_END, DTOR_LIST_BEGIN,\n\tDTOR_LIST_END): Change to use attributes to specify\n\tsections.\n        * mips/elf64.h (CTOR_SECTION_NAME, DTOR_SECTION_NAME,\n\t(CTOR_LIST_BEGIN, CTOR_LIST_END, DTOR_LIST_BEGIN,\n\tDTOR_LIST_END): Same as in mips/elf.h.\n\nFrom-SVN: r35618", "tree": {"sha": "c7bdd6516ce15644a04355dfeadece8dffaca3a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c7bdd6516ce15644a04355dfeadece8dffaca3a0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/204772eb9cf51b539eb07fc4aa8beba0a971e6a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/204772eb9cf51b539eb07fc4aa8beba0a971e6a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/204772eb9cf51b539eb07fc4aa8beba0a971e6a4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/204772eb9cf51b539eb07fc4aa8beba0a971e6a4/comments", "author": null, "committer": null, "parents": [{"sha": "366a0fd8043a51bcd6e2f81004cde8d9607331e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/366a0fd8043a51bcd6e2f81004cde8d9607331e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/366a0fd8043a51bcd6e2f81004cde8d9607331e2"}], "stats": {"total": 69, "additions": 43, "deletions": 26}, "files": [{"sha": "69d87c1c01f9da476d54ede21e78deb36836205a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/204772eb9cf51b539eb07fc4aa8beba0a971e6a4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/204772eb9cf51b539eb07fc4aa8beba0a971e6a4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=204772eb9cf51b539eb07fc4aa8beba0a971e6a4", "patch": "@@ -1,3 +1,14 @@\n+2000-08-10  Chris Demetriou  <cgd@sibyte.com>\n+\n+\t* mips/elf.h (CTOR_SECTION_NAME, DTOR_SECTION_NAME): New\n+\tmacros define the name of CTOR and DTOR sections.\n+\t(CTOR_LIST_BEGIN, CTOR_LIST_END, DTOR_LIST_BEGIN,\n+\tDTOR_LIST_END): Change to use attributes to specify\n+\tsections.\n+\t* mips/elf64.h (CTOR_SECTION_NAME, DTOR_SECTION_NAME,\n+\t(CTOR_LIST_BEGIN, CTOR_LIST_END, DTOR_LIST_BEGIN,\n+\tDTOR_LIST_END): Same as in mips/elf.h.\n+\n 2000-08-10  Drew Moseley  <dmoseley@redhat.com>\n \n \t* config/mn10300/mn10300.h: Added no-crt0 option for explicitly"}, {"sha": "8e6907e09636e7cc83483e2e4d554ce6644a42fe", "filename": "gcc/config/mips/elf.h", "status": "modified", "additions": 16, "deletions": 13, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/204772eb9cf51b539eb07fc4aa8beba0a971e6a4/gcc%2Fconfig%2Fmips%2Felf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/204772eb9cf51b539eb07fc4aa8beba0a971e6a4/gcc%2Fconfig%2Fmips%2Felf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Felf.h?ref=204772eb9cf51b539eb07fc4aa8beba0a971e6a4", "patch": "@@ -275,7 +275,8 @@ do {\t\t\t\t\t\t\t\t\t   \\\n \n /* Support the ctors/dtors and other sections.  */\n  \n-/* Define the pseudo-ops used to switch to the .ctors and .dtors sections.\n+/* Define the names of and pseudo-ops used to switch to the .ctors and\n+   .dtors sections.\n  \n    Note that we want to give these sections the SHF_WRITE attribute\n    because these sections will actually contain data (i.e. tables of\n@@ -290,7 +291,9 @@ do {\t\t\t\t\t\t\t\t\t   \\\n    errors unless the .ctors and .dtors sections are marked as writable\n    via the SHF_WRITE attribute.)  */\n \n+#define CTORS_SECTION_NAME      \".ctors\"\n #define CTORS_SECTION_ASM_OP    \"\\t.section\\t.ctors,\\\"aw\\\"\"\n+#define DTORS_SECTION_NAME      \".dtors\"\n #define DTORS_SECTION_ASM_OP    \"\\t.section\\t.dtors,\\\"aw\\\"\"\n  \n /* There's no point providing a default definition of __CTOR_LIST__\n@@ -345,21 +348,21 @@ void FN ()                                                            \\\n     fprintf (FILE, \"\\n\");                                             \\\n   } while (0)\n \n-#define CTOR_LIST_BEGIN                                 \\\n-asm (CTORS_SECTION_ASM_OP);                             \\\n-func_ptr __CTOR_LIST__ = (func_ptr) (-1)\n+#define CTOR_LIST_BEGIN                                               \\\n+func_ptr __CTOR_LIST__ __attribute__((section(CTORS_SECTION_NAME))) = \\\n+  (func_ptr) (-1)\n  \n-#define CTOR_LIST_END                                   \\\n-asm (CTORS_SECTION_ASM_OP);                             \\\n-func_ptr __CTOR_END__ = (func_ptr) 0\n+#define CTOR_LIST_END                                                 \\\n+func_ptr __CTOR_END__ __attribute__((section(CTORS_SECTION_NAME))) =  \\\n+  (func_ptr) 0\n  \n-#define DTOR_LIST_BEGIN                                 \\\n-asm (DTORS_SECTION_ASM_OP);                             \\\n-func_ptr __DTOR_LIST__ = (func_ptr) (-1)\n+#define DTOR_LIST_BEGIN                                               \\\n+func_ptr __DTOR_LIST__ __attribute__((section(DTORS_SECTION_NAME))) = \\\n+  (func_ptr) (-1)\n \n-#define DTOR_LIST_END                                   \\\n-asm (DTORS_SECTION_ASM_OP);                             \\\n-func_ptr __DTOR_END__ = (func_ptr) 0\n+#define DTOR_LIST_END                                                 \\\n+func_ptr __DTOR_END__ __attribute__((section(DTORS_SECTION_NAME))) =  \\\n+  (func_ptr) 0\n \n /* Don't set the target flags, this is done by the linker script */\n #undef LIB_SPEC"}, {"sha": "b6015f594ac48cb5833c61b553a27a4b2ed543a8", "filename": "gcc/config/mips/elf64.h", "status": "modified", "additions": 16, "deletions": 13, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/204772eb9cf51b539eb07fc4aa8beba0a971e6a4/gcc%2Fconfig%2Fmips%2Felf64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/204772eb9cf51b539eb07fc4aa8beba0a971e6a4/gcc%2Fconfig%2Fmips%2Felf64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Felf64.h?ref=204772eb9cf51b539eb07fc4aa8beba0a971e6a4", "patch": "@@ -256,7 +256,8 @@ do {\t\t\t\t\t\t\t\t\t   \\\n \n /* Support the ctors/dtors and other sections.  */\n  \n-/* Define the pseudo-ops used to switch to the .ctors and .dtors sections.\n+/* Define the names of and pseudo-ops used to switch to the .ctors and\n+   .dtors sections.\n  \n    Note that we want to give these sections the SHF_WRITE attribute\n    because these sections will actually contain data (i.e. tables of\n@@ -271,7 +272,9 @@ do {\t\t\t\t\t\t\t\t\t   \\\n    errors unless the .ctors and .dtors sections are marked as writable\n    via the SHF_WRITE attribute.)  */\n \n+#define CTORS_SECTION_NAME      \".ctors\"\n #define CTORS_SECTION_ASM_OP    \"\\t.section\\t.ctors,\\\"aw\\\"\"\n+#define DTORS_SECTION_NAME      \".dtors\"\n #define DTORS_SECTION_ASM_OP    \"\\t.section\\t.dtors,\\\"aw\\\"\"\n  \n /* There's no point providing a default definition of __CTOR_LIST__\n@@ -325,21 +328,21 @@ void FN ()                                                            \\\n     fprintf (FILE, \"\\n\");                                             \\\n   } while (0)\n \n-#define CTOR_LIST_BEGIN                                 \\\n-asm (CTORS_SECTION_ASM_OP);                             \\\n-func_ptr __CTOR_LIST__ = (func_ptr) (-1)\n+#define CTOR_LIST_BEGIN                                               \\\n+func_ptr __CTOR_LIST__ __attribute__((section(CTORS_SECTION_NAME))) = \\\n+  (func_ptr) (-1)\n  \n-#define CTOR_LIST_END                                   \\\n-asm (CTORS_SECTION_ASM_OP);                             \\\n-func_ptr __CTOR_END__ = (func_ptr) 0\n+#define CTOR_LIST_END                                                 \\\n+func_ptr __CTOR_END__ __attribute__((section(CTORS_SECTION_NAME))) =  \\\n+  (func_ptr) 0\n  \n-#define DTOR_LIST_BEGIN                                 \\\n-asm (DTORS_SECTION_ASM_OP);                             \\\n-func_ptr __DTOR_LIST__ = (func_ptr) (-1)\n+#define DTOR_LIST_BEGIN                                               \\\n+func_ptr __DTOR_LIST__ __attribute__((section(DTORS_SECTION_NAME))) = \\\n+  (func_ptr) (-1)\n \n-#define DTOR_LIST_END                                   \\\n-asm (DTORS_SECTION_ASM_OP);                             \\\n-func_ptr __DTOR_END__ = (func_ptr) 0\n+#define DTOR_LIST_END                                                 \\\n+func_ptr __DTOR_END__ __attribute__((section(DTORS_SECTION_NAME))) =  \\\n+  (func_ptr) 0\n \n /* Don't set the target flags, this is done by the linker script */\n #undef LIB_SPEC"}]}