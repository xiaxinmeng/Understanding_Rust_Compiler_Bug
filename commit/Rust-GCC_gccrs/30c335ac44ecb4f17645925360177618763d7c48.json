{"sha": "30c335ac44ecb4f17645925360177618763d7c48", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzBjMzM1YWM0NGVjYjRmMTc2NDU5MjUzNjAxNzc2MTg3NjNkN2M0OA==", "commit": {"author": {"name": "Bill Schmidt", "email": "wschmidt@linux.ibm.com", "date": "2021-08-19T21:07:55Z"}, "committer": {"name": "Bill Schmidt", "email": "wschmidt@linux.ibm.com", "date": "2021-08-23T21:00:26Z"}, "message": "rs6000: Avoid buffer overruns\n\n2021-08-19  Bill Schmidt  <wschmidt@linux.ibm.com>\n\ngcc/\n\tPR target/101830\n\t* config/rs6000/rs6000-gen-builtins.c (consume_whitespace):\n\tDiagnose buffer overrun.\n\t(safe_inc_pos): Fix overrun detection.\n\t(match_identifier): Diagnose buffer overrun.\n\t(match_integer): Likewise.\n\t(match_to_right_bracket): Likewise.", "tree": {"sha": "0088e79bbf0a7c3e43263386da5396233c2d9299", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0088e79bbf0a7c3e43263386da5396233c2d9299"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/30c335ac44ecb4f17645925360177618763d7c48", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30c335ac44ecb4f17645925360177618763d7c48", "html_url": "https://github.com/Rust-GCC/gccrs/commit/30c335ac44ecb4f17645925360177618763d7c48", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30c335ac44ecb4f17645925360177618763d7c48/comments", "author": null, "committer": null, "parents": [{"sha": "3d654ca3f421ff9646470d312097602037176352", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d654ca3f421ff9646470d312097602037176352", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d654ca3f421ff9646470d312097602037176352"}], "stats": {"total": 34, "additions": 30, "deletions": 4}, "files": [{"sha": "05b2d2939b5b84c5bcc04b643a8695e424c6576a", "filename": "gcc/config/rs6000/rs6000-gen-builtins.c", "status": "modified", "additions": 30, "deletions": 4, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30c335ac44ecb4f17645925360177618763d7c48/gcc%2Fconfig%2Frs6000%2Frs6000-gen-builtins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30c335ac44ecb4f17645925360177618763d7c48/gcc%2Fconfig%2Frs6000%2Frs6000-gen-builtins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-gen-builtins.c?ref=30c335ac44ecb4f17645925360177618763d7c48", "patch": "@@ -597,6 +597,13 @@ consume_whitespace (void)\n {\n   while (pos < LINELEN && isspace(linebuf[pos]) && linebuf[pos] != '\\n')\n     pos++;\n+\n+  if (pos >= LINELEN)\n+    {\n+      diag (\"line length overrun at %d.\\n\", pos);\n+      exit (1);\n+    }\n+\n   return;\n }\n \n@@ -623,7 +630,7 @@ advance_line (FILE *file)\n static inline void\n safe_inc_pos (void)\n {\n-  if (pos++ >= LINELEN)\n+  if (++pos >= LINELEN)\n     {\n       (*diag) (\"line length overrun.\\n\");\n       exit (1);\n@@ -636,9 +643,16 @@ static char *\n match_identifier (void)\n {\n   int lastpos = pos - 1;\n-  while (isalnum (linebuf[lastpos + 1]) || linebuf[lastpos + 1] == '_')\n+  while (lastpos < LINELEN - 1\n+\t && (isalnum (linebuf[lastpos + 1]) || linebuf[lastpos + 1] == '_'))\n     ++lastpos;\n \n+  if (lastpos >= LINELEN - 1)\n+    {\n+      diag (\"line length overrun at %d.\\n\", lastpos);\n+      exit (1);\n+    }\n+\n   if (lastpos < pos)\n     return 0;\n \n@@ -660,9 +674,15 @@ match_integer (void)\n     safe_inc_pos ();\n \n   int lastpos = pos - 1;\n-  while (isdigit (linebuf[lastpos + 1]))\n+  while (lastpos < LINELEN - 1 && isdigit (linebuf[lastpos + 1]))\n     ++lastpos;\n \n+  if (lastpos >= LINELEN - 1)\n+    {\n+      diag (\"line length overrun at %d.\\n\", lastpos);\n+      exit (1);\n+    }\n+\n   if (lastpos < pos)\n     return NULL;\n \n@@ -680,7 +700,7 @@ static const char *\n match_to_right_bracket (void)\n {\n   int lastpos = pos - 1;\n-  while (linebuf[lastpos + 1] != ']')\n+  while (lastpos < LINELEN - 1 && linebuf[lastpos + 1] != ']')\n     {\n       if (linebuf[lastpos + 1] == '\\n')\n \t{\n@@ -690,6 +710,12 @@ match_to_right_bracket (void)\n       ++lastpos;\n     }\n \n+  if (lastpos >= LINELEN - 1)\n+    {\n+      diag (\"line length overrun at %d.\\n\", lastpos);\n+      exit (1);\n+    }\n+\n   if (lastpos < pos)\n     return 0;\n "}]}