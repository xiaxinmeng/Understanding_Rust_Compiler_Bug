{"sha": "40e941afc1a0d648ba1e42c0d50add96a64b1911", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDBlOTQxYWZjMWEwZDY0OGJhMWU0MmMwZDUwYWRkOTZhNjRiMTkxMQ==", "commit": {"author": {"name": "Per Bothner", "email": "pbothner@apple.com", "date": "2003-07-31T19:26:17Z"}, "committer": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "2003-07-31T19:26:17Z"}, "message": "opts.c (in_fnames, [...]): Moved here from c-opts.\n\n\n\t* opts.c (in_fnames, num_in_fnames):  Moved here from c-opts.\n\t(add_input_filename):  New function.\n\t(handle_options):  Call add_input_filename directly instead of\n\twith a lang hook.\n\t* opts.h (in_fnames, num_in_fnames):  Moved here.\n\t(add_input_filename):  Declare.\n\t* c-decl.c:  Need to #include opts.h.\n\t* Makefile.in (c-decl.o):  Also depends on opts.h.\n\t* c-opts.c (in_fnames, num_in_fnames):  Moved to opts.c.\n\t(c_common_handle_filename):  Replaced by add_input_filename.\n\t* c-common.h (in_fnames, num_in_fnames, c_common_handle_filename):\n\tRemove.\n\t* langhooks.h (struct lang_hooks):  Remove handle_filename hook.\n\t* langhooks-def.h (LANG_HOOKS_HANDLE_FILENAME):  Remove macro.\n\t(LANG_HOOKS_INITIALIZER):  Remove use of LANG_HOOKS_HANDLE_FILENAME.\n\t* c-lang.c (LANG_HOOKS_HANDLE_FILENAME):  Remove macro.\n\nFrom-SVN: r70012", "tree": {"sha": "1439a449d638a4d9ab3e37e56c424c1622a59ad9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1439a449d638a4d9ab3e37e56c424c1622a59ad9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/40e941afc1a0d648ba1e42c0d50add96a64b1911", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40e941afc1a0d648ba1e42c0d50add96a64b1911", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40e941afc1a0d648ba1e42c0d50add96a64b1911", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40e941afc1a0d648ba1e42c0d50add96a64b1911/comments", "author": null, "committer": null, "parents": [{"sha": "17472bb623e869846f6d555995686bc54e499c10", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17472bb623e869846f6d555995686bc54e499c10", "html_url": "https://github.com/Rust-GCC/gccrs/commit/17472bb623e869846f6d555995686bc54e499c10"}], "stats": {"total": 70, "additions": 44, "deletions": 26}, "files": [{"sha": "1f48c7c67cadb8d81d89456a7bdac7d07126a5b8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e941afc1a0d648ba1e42c0d50add96a64b1911/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e941afc1a0d648ba1e42c0d50add96a64b1911/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=40e941afc1a0d648ba1e42c0d50add96a64b1911", "patch": "@@ -1,3 +1,22 @@\n+2003-07-31  Per Bothner  <pbothner@apple.com>\n+\n+\t* opts.c (in_fnames, num_in_fnames):  Moved here from c-opts.\n+\t(add_input_filename):  New function.\n+\t(handle_options):  Call add_input_filename directly instead of\n+\twith a lang hook.\n+\t* opts.h (in_fnames, num_in_fnames):  Moved here.\n+\t(add_input_filename):  Declare.\n+\t* c-decl.c:  Need to #include opts.h.\n+\t* Makefile.in (c-decl.o):  Also depends on opts.h.\n+\t* c-opts.c (in_fnames, num_in_fnames):  Moved to opts.c.\n+\t(c_common_handle_filename):  Replaced by add_input_filename.\n+\t* c-common.h (in_fnames, num_in_fnames, c_common_handle_filename):\n+\tRemove.\n+\t* langhooks.h (struct lang_hooks):  Remove handle_filename hook.\n+\t* langhooks-def.h (LANG_HOOKS_HANDLE_FILENAME):  Remove macro.\n+\t(LANG_HOOKS_INITIALIZER):  Remove use of LANG_HOOKS_HANDLE_FILENAME.\n+\t* c-lang.c (LANG_HOOKS_HANDLE_FILENAME):  Remove macro.\n+\n 2003-07-31  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>\n \n \t* combine.c (try_combine): Set JUMP_LABEL for newly created"}, {"sha": "5fe504bf4ae9feec4d936ff151c19019885dd7e4", "filename": "gcc/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e941afc1a0d648ba1e42c0d50add96a64b1911/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e941afc1a0d648ba1e42c0d50add96a64b1911/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=40e941afc1a0d648ba1e42c0d50add96a64b1911", "patch": "@@ -1270,7 +1270,7 @@ c-incpath.o: c-incpath.c c-incpath.h $(CONFIG_H) $(SYSTEM_H) $(CPPLIB_H) \\\n c-decl.o : c-decl.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n     $(RTL_H) $(C_TREE_H) $(GGC_H) $(TARGET_H) flags.h function.h output.h \\\n     $(EXPR_H) debug.h toplev.h intl.h $(TM_P_H) tree-inline.h $(TIMEVAR_H) \\\n-    c-pragma.h gt-c-decl.h cgraph.h $(HASHTAB_H) libfuncs.h except.h \\\n+    opts.h c-pragma.h gt-c-decl.h cgraph.h $(HASHTAB_H) libfuncs.h except.h \\\n     $(LANGHOOKS_DEF_H)\n c-typeck.o : c-typeck.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) $(C_TREE_H) \\\n     $(TARGET_H) flags.h intl.h output.h $(EXPR_H) $(RTL_H) toplev.h $(TM_P_H)"}, {"sha": "aecf9638a2fd6025021eca8c0de8dffc29891591", "filename": "gcc/c-common.h", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e941afc1a0d648ba1e42c0d50add96a64b1911/gcc%2Fc-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e941afc1a0d648ba1e42c0d50add96a64b1911/gcc%2Fc-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.h?ref=40e941afc1a0d648ba1e42c0d50add96a64b1911", "patch": "@@ -845,11 +845,6 @@ extern int max_tinst_depth;\n \n extern int skip_evaluation;\n \n-/* The count of input filenames.  Only really valid for comparisons\n-   against 1.  */\n-\n-extern unsigned num_in_fnames;\n-\n /* C types are partitioned into three subsets: object, function, and\n    incomplete types.  */\n #define C_TYPE_OBJECT_P(type) \\\n@@ -901,7 +896,6 @@ extern tree handle_format_attribute (tree *, tree, tree, int, bool *);\n extern tree handle_format_arg_attribute (tree *, tree, tree, int, bool *);\n extern void c_common_insert_default_attributes (tree);\n extern int c_common_handle_option (size_t code, const char *arg, int value);\n-extern void c_common_handle_filename (const char *filename);\n extern bool c_common_missing_argument (const char *opt, size_t code);\n extern tree c_common_type_for_mode (enum machine_mode, int);\n extern tree c_common_type_for_size (unsigned int, int);"}, {"sha": "1f8ca3fcb9425d3cf655a06f0d19c7f4095bf515", "filename": "gcc/c-decl.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e941afc1a0d648ba1e42c0d50add96a64b1911/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e941afc1a0d648ba1e42c0d50add96a64b1911/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=40e941afc1a0d648ba1e42c0d50add96a64b1911", "patch": "@@ -45,6 +45,7 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"cpplib.h\"\n #include \"target.h\"\n #include \"debug.h\"\n+#include \"opts.h\"\n #include \"timevar.h\"\n #include \"c-common.h\"\n #include \"c-pragma.h\""}, {"sha": "fb729f326b9ce78d2cd4b802a4839c0e81d05cd6", "filename": "gcc/c-lang.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e941afc1a0d648ba1e42c0d50add96a64b1911/gcc%2Fc-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e941afc1a0d648ba1e42c0d50add96a64b1911/gcc%2Fc-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-lang.c?ref=40e941afc1a0d648ba1e42c0d50add96a64b1911", "patch": "@@ -45,8 +45,6 @@ enum c_language_kind c_language = clk_c;\n #define LANG_HOOKS_INIT_OPTIONS c_common_init_options\n #undef LANG_HOOKS_HANDLE_OPTION\n #define LANG_HOOKS_HANDLE_OPTION c_common_handle_option\n-#undef LANG_HOOKS_HANDLE_FILENAME\n-#define LANG_HOOKS_HANDLE_FILENAME c_common_handle_filename\n #undef LANG_HOOKS_MISSING_ARGUMENT\n #define LANG_HOOKS_MISSING_ARGUMENT c_common_missing_argument\n #undef LANG_HOOKS_POST_OPTIONS"}, {"sha": "3e4a10aafd3c3745b6fba8328836251da5409303", "filename": "gcc/c-opts.c", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e941afc1a0d648ba1e42c0d50add96a64b1911/gcc%2Fc-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e941afc1a0d648ba1e42c0d50add96a64b1911/gcc%2Fc-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-opts.c?ref=40e941afc1a0d648ba1e42c0d50add96a64b1911", "patch": "@@ -52,8 +52,6 @@ static int saved_lineno;\n static cpp_options *cpp_opts;\n \n /* Input filename.  */\n-static const char **in_fnames;\n-unsigned num_in_fnames;\n static const char *this_input_filename;\n \n /* Filename and stream for preprocessed output.  */\n@@ -1032,15 +1030,6 @@ c_common_handle_option (size_t scode, const char *arg, int value)\n   return result;\n }\n \n-/* Handle FILENAME from the command line.  */\n-void\n-c_common_handle_filename (const char *filename)\n-{\n-  num_in_fnames++;\n-  in_fnames = xrealloc (in_fnames, num_in_fnames * sizeof (in_fnames[0]));\n-  in_fnames[num_in_fnames - 1] = filename;\n-}\n-\n /* Post-switch processing.  */\n bool\n c_common_post_options (const char **pfilename)"}, {"sha": "abdf2df3af86ce1d332fda04de6edb1c2516198f", "filename": "gcc/langhooks-def.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e941afc1a0d648ba1e42c0d50add96a64b1911/gcc%2Flanghooks-def.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e941afc1a0d648ba1e42c0d50add96a64b1911/gcc%2Flanghooks-def.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flanghooks-def.h?ref=40e941afc1a0d648ba1e42c0d50add96a64b1911", "patch": "@@ -88,7 +88,6 @@ extern tree lhd_tree_inlining_convert_parm_for_inlining (tree, tree, tree);\n #define LANG_HOOKS_CLEAR_BINDING_STACK\tlhd_clear_binding_stack\n #define LANG_HOOKS_INIT_OPTIONS\t\thook_uint_uint_constcharptrptr_0\n #define LANG_HOOKS_HANDLE_OPTION\thook_int_size_t_constcharptr_int_0\n-#define LANG_HOOKS_HANDLE_FILENAME\thook_void_constcharptr\n #define LANG_HOOKS_MISSING_ARGUMENT\thook_bool_constcharptr_size_t_false\n #define LANG_HOOKS_POST_OPTIONS\t\tlhd_post_options\n #define LANG_HOOKS_GET_ALIAS_SET\tlhd_get_alias_set\n@@ -247,7 +246,6 @@ extern int lhd_tree_dump_type_quals (tree);\n   LANG_HOOKS_TREE_SIZE, \\\n   LANG_HOOKS_INIT_OPTIONS, \\\n   LANG_HOOKS_HANDLE_OPTION, \\\n-  LANG_HOOKS_HANDLE_FILENAME, \\\n   LANG_HOOKS_MISSING_ARGUMENT, \\\n   LANG_HOOKS_POST_OPTIONS, \\\n   LANG_HOOKS_INIT, \\"}, {"sha": "4c43ddc93ea118e1810299850aed99e9f517d4e3", "filename": "gcc/langhooks.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e941afc1a0d648ba1e42c0d50add96a64b1911/gcc%2Flanghooks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e941afc1a0d648ba1e42c0d50add96a64b1911/gcc%2Flanghooks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flanghooks.h?ref=40e941afc1a0d648ba1e42c0d50add96a64b1911", "patch": "@@ -213,9 +213,6 @@ struct lang_hooks\n      valid and should not be treated as language-independent too.  */\n   int (*handle_option) (size_t code, const char *arg, int value);\n \n-  /* Handle a filename on the command line.  */\n-  void (*handle_filename) (const char *filename);\n-\n   /* Return false to use the default complaint about a missing\n      argument, otherwise output a complaint and return true.  */\n   bool (*missing_argument) (const char *opt, size_t code);"}, {"sha": "de39e5c6c8da3c848e39e24a46b663f9ebd93995", "filename": "gcc/opts.c", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e941afc1a0d648ba1e42c0d50add96a64b1911/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e941afc1a0d648ba1e42c0d50add96a64b1911/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=40e941afc1a0d648ba1e42c0d50add96a64b1911", "patch": "@@ -134,6 +134,10 @@ static unsigned int columns = 80;\n /* What to print when a switch has no documentation.  */\n static const char undocumented_msg[] = N_(\"This switch lacks documentation\");\n \n+/* Input file names. */\n+const char **in_fnames;\n+unsigned num_in_fnames;\n+\n static size_t find_opt (const char *, int);\n static int common_handle_option (size_t scode, const char *arg, int value);\n static void handle_param (const char *);\n@@ -422,7 +426,7 @@ handle_options (unsigned int argc, const char **argv, unsigned int lang_mask)\n       if (opt[0] != '-' || opt[1] == '\\0')\n \t{\n \t  main_input_filename = opt;\n-\t  (*lang_hooks.handle_filename) (opt);\n+\t  add_input_filename (opt);\n \t  n = 1;\n \t  continue;\n \t}\n@@ -437,6 +441,15 @@ handle_options (unsigned int argc, const char **argv, unsigned int lang_mask)\n     }\n }\n \n+/* Handle FILENAME from the command line.  */\n+void\n+add_input_filename (const char *filename)\n+{\n+  num_in_fnames++;\n+  in_fnames = xrealloc (in_fnames, num_in_fnames * sizeof (in_fnames[0]));\n+  in_fnames[num_in_fnames - 1] = filename;\n+}\n+\n /* Parse command line options and set default flag values.  Do minimal\n    options processing.  */\n void"}, {"sha": "6063057e3ecb8f77f7a9d08c2c0fa99e6dcb1a54", "filename": "gcc/opts.h", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e941afc1a0d648ba1e42c0d50add96a64b1911/gcc%2Fopts.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e941afc1a0d648ba1e42c0d50add96a64b1911/gcc%2Fopts.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.h?ref=40e941afc1a0d648ba1e42c0d50add96a64b1911", "patch": "@@ -22,6 +22,7 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #define GCC_OPTS_H\n \n extern void decode_options (unsigned int argc, const char **argv);\n+extern void add_input_filename (const char *filename);\n \n struct cl_option\n {\n@@ -44,4 +45,12 @@ extern const char *const lang_names[];\n #define CL_COMMON\t\t(1 << 29) /* Language-independent.  */\n #define CL_UNDOCUMENTED\t\t(1 << 30) /* Do not output with --help.  */\n \n+/* Input file names. */\n+\n+extern const char **in_fnames;\n+\n+/* The count of input filenames. */\n+\n+extern unsigned num_in_fnames;\n+\n #endif"}]}