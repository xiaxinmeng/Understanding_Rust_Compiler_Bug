{"sha": "3e7db517472f6c671ad616e968f3e1027f42cca7", "node_id": "C_kwDOANBUbNoAKDNlN2RiNTE3NDcyZjZjNjcxYWQ2MTZlOTY4ZjNlMTAyN2Y0MmNjYTc", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-05-05T00:16:29Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-05-05T00:16:29Z"}, "message": "Daily bump.", "tree": {"sha": "a1ba41a596048fe0203fd580ac0333062c7b0714", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a1ba41a596048fe0203fd580ac0333062c7b0714"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3e7db517472f6c671ad616e968f3e1027f42cca7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e7db517472f6c671ad616e968f3e1027f42cca7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e7db517472f6c671ad616e968f3e1027f42cca7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e7db517472f6c671ad616e968f3e1027f42cca7/comments", "author": null, "committer": null, "parents": [{"sha": "ae90c2d0f9bcc30af98c730f91544efa01cb897c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae90c2d0f9bcc30af98c730f91544efa01cb897c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae90c2d0f9bcc30af98c730f91544efa01cb897c"}], "stats": {"total": 228, "additions": 227, "deletions": 1}, "files": [{"sha": "4b88498deea1e02359070f26c938f9a942915c72", "filename": "gcc/ChangeLog", "status": "modified", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e7db517472f6c671ad616e968f3e1027f42cca7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e7db517472f6c671ad616e968f3e1027f42cca7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3e7db517472f6c671ad616e968f3e1027f42cca7", "patch": "@@ -1,3 +1,57 @@\n+2022-05-04  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* omp-low.cc (lower_omp_target): Fix use_device_{addr,ptr} with list\n+\titem that is in an outer data-sharing clause.\n+\n+2022-05-04  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/104658\n+\t* tree-vect-slp.cc (vect_slp_convert_to_external): Do not\n+\tcreate VECTOR_BOOLEAN_TYPE_P extern defs.  Reset the vector\n+\ttype on nodes we promote.\n+\t(vectorizable_bb_reduc_epilogue): Deal with externalized\n+\troot.\n+\t* tree-vect-stmts.cc (vect_maybe_update_slp_op_vectype): Do\n+\tnot allow VECTOR_BOOLEAN_TYPE_P extern defs.\n+\n+2022-05-04  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/103116\n+\t* tree-vect-stmts.cc (get_group_load_store_type): Handle the\n+\tcase we need peeling for gaps even though GROUP_GAP is zero.\n+\n+2022-05-04  Martin Liska  <mliska@suse.cz>\n+\n+\t* gengtype-state.cc (read_a_state_token): Remove dead code.\n+\t* ipa-profile.cc (ipa_profile_read_summary_section): Likewise.\n+\n+2022-05-04  Richard Biener  <rguenther@suse.de>\n+\n+\t* gimplify.cc (gimplify_init_constructor): First gimplify,\n+\tthen simplify the result to a VECTOR_CST.\n+\n+2022-05-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* genconditions.cc (write_conditions): Append a { nullptr, -1 }\n+\telement at the end of insn_conditions.\n+\t(write_writer): Use ARRAY_SIZE (insn_conditions) - 1 instead of\n+\tARRAY_SIZE (insn_conditions).\n+\n+2022-05-04  Christophe Lyon  <christophe.lyon@arm.com>\n+\n+\tPR target/104662\n+\t* config/arm/arm.cc (simd_valid_immediate): Exit when input is a\n+\tvector of booleans and MVE is not enabled.\n+\n+2022-05-04  Richard Biener  <rguenther@suse.de>\n+\n+\tPR debug/105158\n+\t* tree-cfgcleanup.cc (move_debug_stmts_from_forwarder):\n+\tMove debug stmts to the predecessor if moving to the\n+\tdestination is not possible.\n+\t(remove_forwarder_block): Adjust.\n+\t(remove_forwarder_block_with_phi): Likewise.\n+\n 2022-05-03  Roger Sayle  <roger@nextmovesoftware.com>\n \n \tPR tree-optimization/102950"}, {"sha": "75b32b6d57eba36f151572fc1bdfcc356e78b76b", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e7db517472f6c671ad616e968f3e1027f42cca7/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e7db517472f6c671ad616e968f3e1027f42cca7/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=3e7db517472f6c671ad616e968f3e1027f42cca7", "patch": "@@ -1 +1 @@\n-20220504\n+20220505"}, {"sha": "347db0c3f846eb7011a7b6562b9be43db7da6b85", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e7db517472f6c671ad616e968f3e1027f42cca7/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e7db517472f6c671ad616e968f3e1027f42cca7/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=3e7db517472f6c671ad616e968f3e1027f42cca7", "patch": "@@ -1,3 +1,8 @@\n+2022-05-04  Marek Polacek  <polacek@redhat.com>\n+\n+\t* c-warn.cc (warnings_for_convert_and_check): Convert constants of type\n+\tchar to int.\n+\n 2022-04-30  Jason Merrill  <jason@redhat.com>\n \n \tPR c/100545"}, {"sha": "34e2922f9a8df45e3f957a4c661e003f4d22f858", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e7db517472f6c671ad616e968f3e1027f42cca7/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e7db517472f6c671ad616e968f3e1027f42cca7/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=3e7db517472f6c671ad616e968f3e1027f42cca7", "patch": "@@ -1,3 +1,58 @@\n+2022-05-04  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/104470\n+\t* pt.cc (maybe_dependent_member_ref): Handle types.\n+\t(tsubst, tsubst_copy): Use it.\n+\t(tsubst_aggr_type, instantiate_alias_template): Don't handle\n+\ttf_dguide here.\n+\n+2022-05-04  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/105476\n+\t* pt.cc (maybe_aggr_guide): Set processing_template_decl when\n+\tpartially instantiating the guide's parameter list.\n+\n+2022-05-04  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/64679\n+\t* parser.cc (cp_parser_init_declarator): Properly handle a series of\n+\toperator() calls, they are not part of an init-declarator.\n+\n+2022-05-04  Jason Merrill  <jason@redhat.com>\n+\n+\t* decl.cc (reshape_init): Shortcut already-reshaped init.\n+\t (reshape_init_class): Assert not getting one here.\n+\n+2022-05-04  Jason Merrill  <jason@redhat.com>\n+\n+\t* error.cc (cp_print_error_function): Use %qD.\n+\t(function_category): Use %qD.\n+\n+2022-05-04  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/105436\n+\t* parser.cc (cp_parser_next_token_ends_template_argument_p): Don't\n+\treturn true for CPP_GREATER_EQ.\n+\n+2022-05-04  Jason Merrill  <jason@redhat.com>\n+\n+\t* cp-tree.h (struct language_function): Remove x_cdtor_label.\n+\t(cdtor_label, LABEL_DECL_CDTOR): Remove.\n+\t* constexpr.cc (returns): Don't check LABEL_DECL_CDTOR.\n+\t(cxx_eval_constant_expression): Don't call returns.\n+\t* decl.cc (check_goto): Don't check cdtor_label.\n+\t(start_preparsed_function): And don't set it.\n+\t(finish_constructor_body, finish_destructor_body): Remove.\n+\t(finish_function_body): Don't call them.\n+\t* typeck.cc (check_return_expr): Handle cdtor_returns_this here.\n+\t* semantics.cc (finish_return_stmt): Not here.\n+\n+2022-05-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* lambda.cc: Include decl.h.\n+\t(maybe_add_lambda_conv_op): Temporarily override deprecated_state to\n+\tUNAVAILABLE_DEPRECATED_SUPPRESS.\n+\n 2022-05-03  Patrick Palka  <ppalka@redhat.com>\n \n \tPR c++/105351"}, {"sha": "a8ecdc07db5458f7da12ee48364a426eee08339a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e7db517472f6c671ad616e968f3e1027f42cca7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e7db517472f6c671ad616e968f3e1027f42cca7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3e7db517472f6c671ad616e968f3e1027f42cca7", "patch": "@@ -1,3 +1,52 @@\n+2022-05-04  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/105476\n+\t* g++.dg/cpp2a/class-deduction-aggr13.C: New test.\n+\t* g++.dg/cpp2a/class-deduction-aggr13a.C: New test.\n+\n+2022-05-04  Marek Polacek  <polacek@redhat.com>\n+\n+\t* c-c++-common/Wconversion-1.c: New test.\n+\n+2022-05-04  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/64679\n+\t* g++.dg/parse/functor1.C: New test.\n+\n+2022-05-04  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/105436\n+\t* g++.dg/parse/template31.C: New test.\n+\n+2022-05-04  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/104658\n+\t* gcc.target/i386/pr104658.c: New testcase.\n+\n+2022-05-04  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/103116\n+\t* gcc.dg/vect/pr103116-1.c: New testcase.\n+\t* gcc.dg/vect/pr103116-2.c: Likewise.\n+\n+2022-05-04  Martin Liska  <mliska@suse.cz>\n+\n+\t* c-c++-common/asan/alloca_loop_unpoisoning.c: Do not combine\n+\tfake and real stack.\n+\n+2022-05-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* g++.dg/cpp23/lambda-attr1.C: New test.\n+\t* g++.dg/cpp23/lambda-attr2.C: New test.\n+\n+2022-05-04  Martin Liska  <mliska@suse.cz>\n+\n+\t* c-c++-common/hwasan/alloca-outside-caught.c: Update dg-output.\n+\t* c-c++-common/hwasan/heap-overflow.c: Likewise.\n+\t* c-c++-common/hwasan/hwasan-thread-access-parent.c: Likewise.\n+\t* c-c++-common/hwasan/large-aligned-1.c: Likewise.\n+\t* c-c++-common/hwasan/stack-tagging-basic-1.c: Likewise.\n+\n 2022-05-03  Patrick Palka  <ppalka@redhat.com>\n \n \tPR c++/105351"}, {"sha": "69713dea53fd79216cc7c2d88c7cc0bcdf805f83", "filename": "include/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e7db517472f6c671ad616e968f3e1027f42cca7/include%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e7db517472f6c671ad616e968f3e1027f42cca7/include%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2FChangeLog?ref=3e7db517472f6c671ad616e968f3e1027f42cca7", "patch": "@@ -1,3 +1,8 @@\n+2022-05-04  Martin Liska  <mliska@suse.cz>\n+\n+\t* plugin-api.h (enum ld_plugin_tag): Do not set implicit enum\n+\tvalues.\n+\n 2022-04-06  Thomas Schwinge  <thomas@codesourcery.com>\n \n \t* cuda/cuda.h: New file."}, {"sha": "a8ffca2c662d8418ad8c78d063c02201b3a6d51a", "filename": "libcpp/po/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e7db517472f6c671ad616e968f3e1027f42cca7/libcpp%2Fpo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e7db517472f6c671ad616e968f3e1027f42cca7/libcpp%2Fpo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fpo%2FChangeLog?ref=3e7db517472f6c671ad616e968f3e1027f42cca7", "patch": "@@ -1,3 +1,7 @@\n+2022-05-04  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* es.po: Update.\n+\n 2022-03-04  Joseph Myers  <joseph@codesourcery.com>\n \n \t* be.po, ca.po, da.po, de.po, el.po, eo.po, es.po, fi.po, fr.po,"}, {"sha": "02bcb350652b05e567e0eea414032793991daa95", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e7db517472f6c671ad616e968f3e1027f42cca7/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e7db517472f6c671ad616e968f3e1027f42cca7/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=3e7db517472f6c671ad616e968f3e1027f42cca7", "patch": "@@ -1,3 +1,11 @@\n+2022-05-04  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* plugin/plugin-gcn.c (isa_matches_agent): Suggest -foffload-options.\n+\n+2022-05-04  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* testsuite/libgomp.fortran/use_device_addr-5.f90: New test.\n+\n 2022-05-03  Marcel Vollweiler  <marcel@codesourcery.com>\n \n \t* libgomp.map: Added omp_get_mapped_ptr."}, {"sha": "8791e734f8c9ce60ac9ff20d9eb204d955724bba", "filename": "libsanitizer/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e7db517472f6c671ad616e968f3e1027f42cca7/libsanitizer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e7db517472f6c671ad616e968f3e1027f42cca7/libsanitizer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2FChangeLog?ref=3e7db517472f6c671ad616e968f3e1027f42cca7", "patch": "@@ -1,3 +1,18 @@\n+2022-05-04  Martin Liska  <mliska@suse.cz>\n+\n+\t* tsan/Makefile.am: Update Makefile.am files.\n+\t* hwasan/Makefile.am: Likewise.\n+\t* sanitizer_common/Makefile.am: Likewise.\n+\t* Makefile.in: Re-generate.\n+\t* asan/Makefile.in: Likewise.\n+\t* hwasan/Makefile.in: Likewise.\n+\t* interception/Makefile.in: Likewise.\n+\t* libbacktrace/Makefile.in: Likewise.\n+\t* lsan/Makefile.in: Likewise.\n+\t* sanitizer_common/Makefile.in: Likewise.\n+\t* tsan/Makefile.in: Likewise.\n+\t* ubsan/Makefile.in: Likewise.\n+\n 2022-03-14  Xi Ruoyao  <xry111@mengyan1223.wang>\n \n \t* configure.tgt: Enable build on mips*64*-*-linux*."}, {"sha": "6c5d695f03917901599162588f4f5620802ed8ef", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e7db517472f6c671ad616e968f3e1027f42cca7/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e7db517472f6c671ad616e968f3e1027f42cca7/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=3e7db517472f6c671ad616e968f3e1027f42cca7", "patch": "@@ -1,3 +1,25 @@\n+2022-05-04  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/104719\n+\t* include/std/array (array::size(), array::max_size())\n+\t(array::empty(), array::data()): Add  always_inline attribute.\n+\n+2022-05-04  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/104719\n+\t* include/std/array (__array_traits::_S_ref): Remove.\n+\t(__array_traits::_S_ptr): Remove.\n+\t(__array_traits<T, 0>::_Type): Define operator[] and operator T*\n+\tto provide an array-like API.\n+\t(array::_AT_Type): Remove public typeef.\n+\t(array::operator[], array::at, array::front, array::back): Use\n+\tindex operator to access _M_elems instead of _S_ref.\n+\t(array::data): Use implicit conversion from _M_elems to pointer.\n+\t(swap(array&, array&)): Use __enable_if_t helper.\n+\t(get<I>): Use index operator to access _M_elems.\n+\t* testsuite/23_containers/array/tuple_interface/get_neg.cc:\n+\tAdjust dg-error line numbers.\n+\n 2022-05-03  Alexandre Oliva  <oliva@adacore.com>\n \n \tPR c++/105324"}, {"sha": "7f88d49d3492f54f958b8adfa8cf7e561eded135", "filename": "lto-plugin/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e7db517472f6c671ad616e968f3e1027f42cca7/lto-plugin%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e7db517472f6c671ad616e968f3e1027f42cca7/lto-plugin%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/lto-plugin%2FChangeLog?ref=3e7db517472f6c671ad616e968f3e1027f42cca7", "patch": "@@ -1,3 +1,12 @@\n+2022-05-04  Martin Liska  <mliska@suse.cz>\n+\n+\t* lto-plugin.c (struct plugin_objfile): Use bool for offset\n+\tfield.\n+\t(exec_lto_wrapper): Assign true/false to bool variables.\n+\t(process_offload_section): Likewise.\n+\t(claim_file_handler): Likewise.\n+\t(onload): Likewise.\n+\n 2022-03-22  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR lto/102426"}]}