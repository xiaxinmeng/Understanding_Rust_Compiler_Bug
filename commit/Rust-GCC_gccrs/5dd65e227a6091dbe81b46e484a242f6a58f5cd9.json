{"sha": "5dd65e227a6091dbe81b46e484a242f6a58f5cd9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWRkNjVlMjI3YTYwOTFkYmU4MWI0NmU0ODRhMjQyZjZhNThmNWNkOQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2009-12-22T14:30:23Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2009-12-22T14:30:23Z"}, "message": "mangle.c (write_member_name): Move abi-version=1 code back to...\n\n\t* mangle.c (write_member_name): Move abi-version=1 code back to...\n\t(write_expression): ...here.\n\nFrom-SVN: r155399", "tree": {"sha": "cde08b7486c98e370adc902038bb467b4933cdac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cde08b7486c98e370adc902038bb467b4933cdac"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5dd65e227a6091dbe81b46e484a242f6a58f5cd9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5dd65e227a6091dbe81b46e484a242f6a58f5cd9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5dd65e227a6091dbe81b46e484a242f6a58f5cd9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5dd65e227a6091dbe81b46e484a242f6a58f5cd9/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6be8006d35fa0a235786df00b1b500422e7866fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6be8006d35fa0a235786df00b1b500422e7866fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6be8006d35fa0a235786df00b1b500422e7866fa"}], "stats": {"total": 37, "additions": 23, "deletions": 14}, "files": [{"sha": "ed0aeeb6d44e970b85c14b308ed83b9c60c55a8a", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5dd65e227a6091dbe81b46e484a242f6a58f5cd9/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5dd65e227a6091dbe81b46e484a242f6a58f5cd9/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=5dd65e227a6091dbe81b46e484a242f6a58f5cd9", "patch": "@@ -1,3 +1,8 @@\n+2009-12-21  Jason Merrill  <jason@redhat.com>\n+\n+\t* mangle.c (write_member_name): Move abi-version=1 code back to...\n+\t(write_expression): ...here.\n+\n 2009-12-21  Brian Hackett  <bhackett1024@gmail.com>\n \n \t* decl.c (finish_function): Rename pre-genericize event."}, {"sha": "13b0ed47af3daa8d6e586b55ac27d899e61b8960", "filename": "gcc/cp/mangle.c", "status": "modified", "additions": 13, "deletions": 14, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5dd65e227a6091dbe81b46e484a242f6a58f5cd9/gcc%2Fcp%2Fmangle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5dd65e227a6091dbe81b46e484a242f6a58f5cd9/gcc%2Fcp%2Fmangle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmangle.c?ref=5dd65e227a6091dbe81b46e484a242f6a58f5cd9", "patch": "@@ -2299,12 +2299,7 @@ write_member_name (tree member)\n   if (TREE_CODE (member) == IDENTIFIER_NODE)\n     write_source_name (member);\n   else if (DECL_P (member))\n-    {\n-      /* G++ 3.2 incorrectly put out both the \"sr\" code and\n-\t the nested name of the qualified name.  */\n-      G.need_abi_warning = 1;\n-      write_unqualified_name (member);\n-    }\n+    write_unqualified_name (member);\n   else if (TREE_CODE (member) == TEMPLATE_ID_EXPR)\n     {\n       tree name = TREE_OPERAND (member, 0);\n@@ -2401,17 +2396,27 @@ write_expression (tree expr)\n       write_string (\"at\");\n       write_type (TREE_OPERAND (expr, 0));\n     }\n-  else if (abi_version_at_least (2) && TREE_CODE (expr) == SCOPE_REF)\n+  else if (TREE_CODE (expr) == SCOPE_REF)\n     {\n       tree scope = TREE_OPERAND (expr, 0);\n       tree member = TREE_OPERAND (expr, 1);\n \n+      if (!abi_version_at_least (2))\n+\t{\n+\t  write_string (\"sr\");\n+\t  write_type (scope);\n+\t  /* G++ 3.2 incorrectly put out both the \"sr\" code and\n+\t     the nested name of the qualified name.  */\n+\t  G.need_abi_warning = 1;\n+\t  write_encoding (member);\n+\t}\n+\n       /* If the MEMBER is a real declaration, then the qualifying\n \t scope was not dependent.  Ideally, we would not have a\n \t SCOPE_REF in those cases, but sometimes we do.  If the second\n \t argument is a DECL, then the name must not have been\n \t dependent.  */\n-      if (DECL_P (member))\n+      else if (DECL_P (member))\n \twrite_expression (member);\n       else\n \t{\n@@ -2576,12 +2581,6 @@ write_expression (tree expr)\n \t  sorry (\"mangling new-expression\");\n \t  break;\n \n-\t/* Handle pointers-to-members specially.  */\n-\tcase SCOPE_REF:\n-\t  write_type (TREE_OPERAND (expr, 0));\n-\t  write_member_name (TREE_OPERAND (expr, 1));\n-\t  break;\n-\n \tdefault:\n \t  for (i = 0; i < TREE_OPERAND_LENGTH (expr); ++i)\n \t    {"}, {"sha": "0245226d008ac3b4ccee992400ee0729c35bcc5d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5dd65e227a6091dbe81b46e484a242f6a58f5cd9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5dd65e227a6091dbe81b46e484a242f6a58f5cd9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5dd65e227a6091dbe81b46e484a242f6a58f5cd9", "patch": "@@ -1,3 +1,7 @@\n+2009-12-21  Jason Merrill  <jason@redhat.com>\n+\n+\t* g++.dg/abi/mangle14.C: Add expected mangling.\n+\n 2009-12-21  Andy Hutchinson  <hutchinsonandy@gcc.gnu.org>\n \n \t* gcc.dg/pr36901.h: AVR must support address zero."}, {"sha": "2b38255ac0ad4101bb4634f4c99516ba7aa9c5cb", "filename": "gcc/testsuite/g++.dg/abi/mangle14.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5dd65e227a6091dbe81b46e484a242f6a58f5cd9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle14.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5dd65e227a6091dbe81b46e484a242f6a58f5cd9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle14.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle14.C?ref=5dd65e227a6091dbe81b46e484a242f6a58f5cd9", "patch": "@@ -1,5 +1,6 @@\n // { dg-do compile }\n // { dg-options \"-Wabi -fabi-version=1\" }\n+// { dg-final { scan-assembler \"_Z1g1SIXadsr1ANS0_1fIiEEivEE\" } }\n \n struct A {\n   template <typename T> int f ();"}]}