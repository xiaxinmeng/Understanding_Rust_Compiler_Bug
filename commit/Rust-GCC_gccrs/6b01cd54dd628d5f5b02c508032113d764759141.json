{"sha": "6b01cd54dd628d5f5b02c508032113d764759141", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmIwMWNkNTRkZDYyOGQ1ZjViMDJjNTA4MDMyMTEzZDc2NDc1OTE0MQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2007-02-02T12:21:13Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2007-02-02T12:21:13Z"}, "message": "re PR middle-end/30473 (Internal Compiler Error with a sprintf with few arguments for format %s)\n\n\tPR middle-end/30473\n\t* builtins.c (fold_builtin_sprintf): Do not attempt to optimize\n\tsprintf (str, \"%s\").  Do not optimize sprintf (str, \"nopercent\", p++).\n\n\t* gcc.dg/pr30473.c: New test.\n\t* gcc.c-torture/execute/20070201-1.c: New test.\n\nFrom-SVN: r121495", "tree": {"sha": "2be40460b646c9724b96b9db0315c07f49770ee7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2be40460b646c9724b96b9db0315c07f49770ee7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6b01cd54dd628d5f5b02c508032113d764759141", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b01cd54dd628d5f5b02c508032113d764759141", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b01cd54dd628d5f5b02c508032113d764759141", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b01cd54dd628d5f5b02c508032113d764759141/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b198261f9c5ce8b6cec5769eec4f3d82e04eaeb8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b198261f9c5ce8b6cec5769eec4f3d82e04eaeb8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b198261f9c5ce8b6cec5769eec4f3d82e04eaeb8"}], "stats": {"total": 56, "additions": 55, "deletions": 1}, "files": [{"sha": "25b8df07865e19e9b7971f9b3f4f9174047e6d15", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b01cd54dd628d5f5b02c508032113d764759141/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b01cd54dd628d5f5b02c508032113d764759141/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6b01cd54dd628d5f5b02c508032113d764759141", "patch": "@@ -1,3 +1,9 @@\n+2007-02-02  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/30473\n+\t* builtins.c (fold_builtin_sprintf): Do not attempt to optimize\n+\tsprintf (str, \"%s\").  Do not optimize sprintf (str, \"nopercent\", p++).\n+\n 2007-02-02  Maxim Kuvyrkov  <mkuvyrkov@ispras.ru>\n \n \t* sched-int.h (ds_to_dk, dk_to_ds): Declare functions."}, {"sha": "5b9a87f8936793d7205612811b7cdd597725beed", "filename": "gcc/builtins.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b01cd54dd628d5f5b02c508032113d764759141/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b01cd54dd628d5f5b02c508032113d764759141/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=6b01cd54dd628d5f5b02c508032113d764759141", "patch": "@@ -10553,6 +10553,7 @@ fold_builtin_sprintf (tree arglist, int ignored)\n   /* Get the destination string and the format specifier.  */\n   dest = TREE_VALUE (arglist);\n   fmt = TREE_VALUE (TREE_CHAIN (arglist));\n+  arglist = TREE_CHAIN (TREE_CHAIN (arglist));\n \n   /* Check whether the format is a literal string constant.  */\n   fmt_str = c_getstr (fmt);\n@@ -10573,6 +10574,10 @@ fold_builtin_sprintf (tree arglist, int ignored)\n       if (!fn)\n \treturn NULL_TREE;\n \n+      /* Don't optimize sprintf (buf, \"abc\", ptr++).  */\n+      if (arglist)\n+\treturn NULL_TREE;\n+\n       /* Convert sprintf (str, fmt) into strcpy (str, fmt) when\n \t 'format' is known to contain no % formats.  */\n       arglist = build_tree_list (NULL_TREE, fmt);\n@@ -10591,8 +10596,12 @@ fold_builtin_sprintf (tree arglist, int ignored)\n       if (!fn)\n \treturn NULL_TREE;\n \n+      /* Don't crash on sprintf (str1, \"%s\").  */\n+      if (!arglist)\n+\treturn NULL_TREE;\n+\n       /* Convert sprintf (str1, \"%s\", str2) into strcpy (str1, str2).  */\n-      orig = TREE_VALUE (TREE_CHAIN (TREE_CHAIN (arglist)));\n+      orig = TREE_VALUE (arglist);\n       arglist = build_tree_list (NULL_TREE, orig);\n       arglist = tree_cons (NULL_TREE, dest, arglist);\n       if (!ignored)"}, {"sha": "e699db6c61ff001f5e768d928babf075342b4d22", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b01cd54dd628d5f5b02c508032113d764759141/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b01cd54dd628d5f5b02c508032113d764759141/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6b01cd54dd628d5f5b02c508032113d764759141", "patch": "@@ -1,3 +1,9 @@\n+2007-02-02  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/30473\n+\t* gcc.dg/pr30473.c: New test.\n+\t* gcc.c-torture/execute/20070201-1.c: New test.\n+\n 2007-02-01  Roger Sayle  <roger@eyesopen.com>\n \n \t* gfortran.dg/dependency_20.f90: New test case."}, {"sha": "c676c3475a14e12eb102b83c727d8052cceb86bf", "filename": "gcc/testsuite/gcc.c-torture/execute/20070201-1.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b01cd54dd628d5f5b02c508032113d764759141/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20070201-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b01cd54dd628d5f5b02c508032113d764759141/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20070201-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20070201-1.c?ref=6b01cd54dd628d5f5b02c508032113d764759141", "patch": "@@ -0,0 +1,20 @@\n+/* PR middle-end/30473 */\n+\n+extern int sprintf (char *, const char *, ...);\n+extern void abort (void);\n+\n+char *\n+foo (char *buf, char *p)\n+{\n+  sprintf (buf, \"abcde\", p++);\n+  return p;\n+}\n+\n+int\n+main (void)\n+{\n+  char buf[6];\n+  if (foo (buf, &buf[2]) != &buf[3])\n+    abort ();\n+  return 0;\n+}"}, {"sha": "f01c1cc4a7c53dcf109ded782629950ace688767", "filename": "gcc/testsuite/gcc.dg/pr30473.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b01cd54dd628d5f5b02c508032113d764759141/gcc%2Ftestsuite%2Fgcc.dg%2Fpr30473.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b01cd54dd628d5f5b02c508032113d764759141/gcc%2Ftestsuite%2Fgcc.dg%2Fpr30473.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr30473.c?ref=6b01cd54dd628d5f5b02c508032113d764759141", "patch": "@@ -0,0 +1,13 @@\n+/* PR middle-end/30473 */\n+/* Make sure this doesn't ICE.  */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+extern int sprintf (char *, const char *, ...);\n+\n+void\n+foo (char *buf1, char *buf2)\n+{\n+  sprintf (buf1, \"%s\", \"abcde\");\n+  sprintf (buf2, \"%s\");\n+}"}]}