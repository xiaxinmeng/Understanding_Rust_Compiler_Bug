{"sha": "8951374df1e7139b163129c9e18161c5253d0fe2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODk1MTM3NGRmMWU3MTM5YjE2MzEyOWM5ZTE4MTYxYzUyNTNkMGZlMg==", "commit": {"author": {"name": "Maciej W. Rozycki", "email": "macro@wdc.com", "date": "2019-10-01T18:38:58Z"}, "committer": {"name": "Maciej W. Rozycki", "email": "macro@gcc.gnu.org", "date": "2019-10-01T18:38:58Z"}, "message": "libada: Remove racy duplicate gnatlib installation\n\nFor some reason, presumably historical, the `install-gnatlib' target for\nthe default multilib is invoked twice, once via the `ada.install-common'\ntarget in `gcc/ada/gcc-interface/Make-lang.in' invoked from gcc/ and\nagain via the `install-libada' target in libada/.\n\nApart from doing the same twice this is actually harmful in sufficiently\nparallelized `make' invocation, as the removal of old files performed\nwithin the `install-gnatlib' recipe in the former case actually races\nwith the installation of new files done in the latter case, causing the\nrecipe to fail and abort, however non-fatally, having not completed the\ninstallation of all the built files needed for the newly-built compiler\nto work correctly.\n\nThis can be observed with a native `x86_64-linux-gnu' bootstrap:\n\nmake[4]: Entering directory '.../gcc/ada'\nrm -rf .../lib/gcc/x86_64-linux-gnu/10.0.0/adalib\nrm: cannot remove '.../lib/gcc/x86_64-linux-gnu/10.0.0/adalib': Directory not empty\nmake[4]: *** [gcc-interface/Makefile:512: install-gnatlib] Error 1\nmake[4]: Leaving directory '.../gcc/ada'\nmake[3]: *** [.../gcc/ada/gcc-interface/Make-lang.in:853: install-gnatlib] Error 2\nmake[2]: [.../gcc/ada/gcc-interface/Make-lang.in:829: ada.install-common] Error 2 (ignored)\n\nwhich then causes missing files to be reported when an attempt is made\nto use the newly-installed non-functional compiler to build a\n`riscv-linux-gnu' cross-compiler:\n\n(cd ada/bldtools/sinfo; gnatmake -q xsinfo ; ./xsinfo sinfo.h )\nerror: \"ada.ali\" not found, \"ada.ads\" must be compiled\nerror: \"s-memory.ali\" not found, \"s-memory.adb\" must be compiled\ngnatmake: *** bind failed.\n/bin/sh: ./xsinfo: No such file or directory\nmake[2]: *** [.../gcc/ada/Make-generated.in:45: ada/sinfo.h] Error 127\nmake[2]: Leaving directory '.../gcc'\nmake[1]: *** [Makefile:4369: all-gcc] Error 2\nmake[1]: Leaving directory '...'\nmake: *** [Makefile:965: all] Error 2\n\nDepending on timing `.../lib/gcc/x86_64-linux-gnu/10.0.0/adainclude' may\ncause an installation failure instead and the resulting compiler may be\nnon-functional in a different way.\n\nOnly invoke `install-gnatlib' from within gcc/ then if a legacy build\nprocess is being used with libada disabled and gnatlib built manually\nwith `make -C gcc gnatlib'.\n\n\tgcc/\n\t* Makefile.in (gnat_install_lib): New variable.\n\t* configure.ac: Substitute it.\n\t* configure: Regenerate.\n\n\tgcc/ada/\n\t* gcc-interface/Make-lang.in (ada.install-common): Split into...\n\t(gnat-install-tools, gnat-install-lib): ... these.\n\nFrom-SVN: r276422", "tree": {"sha": "c04927a426a71451720d3d42754fa7658f9c0fd8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c04927a426a71451720d3d42754fa7658f9c0fd8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8951374df1e7139b163129c9e18161c5253d0fe2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8951374df1e7139b163129c9e18161c5253d0fe2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8951374df1e7139b163129c9e18161c5253d0fe2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8951374df1e7139b163129c9e18161c5253d0fe2/comments", "author": null, "committer": null, "parents": [{"sha": "56f1a16caeb447934c4c5209664984560b17e63a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56f1a16caeb447934c4c5209664984560b17e63a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/56f1a16caeb447934c4c5209664984560b17e63a"}], "stats": {"total": 45, "additions": 42, "deletions": 3}, "files": [{"sha": "0f96dde03c4cbcf4664fcd5fbd5d88d1cc5d7302", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8951374df1e7139b163129c9e18161c5253d0fe2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8951374df1e7139b163129c9e18161c5253d0fe2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8951374df1e7139b163129c9e18161c5253d0fe2", "patch": "@@ -1,3 +1,9 @@\n+2019-10-01  Maciej W. Rozycki  <macro@wdc.com>\n+\n+\t* Makefile.in (gnat_install_lib): New variable.\n+\t* configure.ac: Substitute it.\n+\t* configure: Regenerate.\n+\n 2019-10-01  Jan Hubicka  <hubicka@ucw.cz>\n \n \tPR lto/91222"}, {"sha": "ca03cfdd2dc150ec563b10d87fa5453d0706e949", "filename": "gcc/Makefile.in", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8951374df1e7139b163129c9e18161c5253d0fe2/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8951374df1e7139b163129c9e18161c5253d0fe2/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=8951374df1e7139b163129c9e18161c5253d0fe2", "patch": "@@ -1706,6 +1706,10 @@ $(FULL_DRIVER_NAME): ./xgcc\n # language hooks, generated by configure\n @language_hooks@\n \n+# Wire in install-gnatlib invocation with `make install' for a configuration\n+# with top-level libada disabled.\n+gnat_install_lib = @gnat_install_lib@\n+\n # per-language makefile fragments\n ifneq ($(LANG_MAKEFRAGS),)\n include $(LANG_MAKEFRAGS)"}, {"sha": "ecc2e25b8504f9abf12b4e7f3830a9b2cb5dd3d9", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8951374df1e7139b163129c9e18161c5253d0fe2/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8951374df1e7139b163129c9e18161c5253d0fe2/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=8951374df1e7139b163129c9e18161c5253d0fe2", "patch": "@@ -1,3 +1,8 @@\n+2019-10-01  Maciej W. Rozycki  <macro@wdc.com>\n+\n+\t* gcc-interface/Make-lang.in (ada.install-common): Split into...\n+\t(gnat-install-tools, gnat-install-lib): ... these.\n+\n 2019-09-26  Alexandre Oliva <oliva@adacore.com>\n \n \t* gcc-interface/decl.c (components_to_record): Set"}, {"sha": "acbe2b877cae6011caf83ee420a57a202eb1ae58", "filename": "gcc/ada/gcc-interface/Make-lang.in", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8951374df1e7139b163129c9e18161c5253d0fe2/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8951374df1e7139b163129c9e18161c5253d0fe2/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMake-lang.in?ref=8951374df1e7139b163129c9e18161c5253d0fe2", "patch": "@@ -822,7 +822,9 @@ doc/gnat-style.pdf: ada/gnat-style.texi $(gcc_docdir)/include/fdl.texi\n # gnatlink, gnatls, gnatmake, gnatname, gnatprep, gnatxref, gnatfind,\n # gnatclean).\n # gnatdll is only used on Windows.\n-ada.install-common:\n+ada.install-common: $(gnat_install_lib) gnat-install-tools\n+\n+gnat-install-tools:\n \t$(MKDIR) $(DESTDIR)$(bindir)\n \t-if [ -f gnat1$(exeext) ] ; \\\n \tthen \\\n@@ -843,6 +845,7 @@ ada.install-common:\n #\n # Finally, install the library\n #\n+gnat-install-lib: | gnat-install-tools\n \t-if [ -f gnat1$(exeext) ] ; \\\n \tthen \\\n \t  $(MAKE) $(COMMON_FLAGS_TO_PASS) $(ADA_FLAGS_TO_PASS) install-gnatlib; \\"}, {"sha": "893a9e6fafc9d53861c826035d53a70082cf4e7c", "filename": "gcc/configure", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8951374df1e7139b163129c9e18161c5253d0fe2/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8951374df1e7139b163129c9e18161c5253d0fe2/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=8951374df1e7139b163129c9e18161c5253d0fe2", "patch": "@@ -814,6 +814,7 @@ SET_MAKE\n accel_dir_suffix\n real_target_noncanonical\n enable_as_accelerator\n+gnat_install_lib\n REPORT_BUGS_TEXI\n REPORT_BUGS_TO\n PKGVERSION\n@@ -7826,6 +7827,16 @@ else\n fi\n \n \n+# If top-level libada has been disabled, then wire in install-gnatlib\n+# invocation with `make install', so that one can build and install\n+# the library manually with `make -C gcc all gnatlib gnattools install'.\n+if test x\"$enable_libada\" = xno; then\n+  gnat_install_lib=gnat-install-lib\n+else\n+  gnat_install_lib=\n+fi\n+\n+\n if test x\"$enable_as_accelerator_for\" != x; then\n \n $as_echo \"#define ACCEL_COMPILER 1\" >>confdefs.h\n@@ -18819,7 +18830,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 18822 \"configure\"\n+#line 18833 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -18925,7 +18936,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 18928 \"configure\"\n+#line 18939 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"}, {"sha": "eff849f1f3836a7c00c6ead7731da8b5ba8488a3", "filename": "gcc/configure.ac", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8951374df1e7139b163129c9e18161c5253d0fe2/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8951374df1e7139b163129c9e18161c5253d0fe2/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=8951374df1e7139b163129c9e18161c5253d0fe2", "patch": "@@ -982,6 +982,16 @@ AC_ARG_ENABLE(languages,\n esac],\n [enable_languages=c])\n \n+# If top-level libada has been disabled, then wire in install-gnatlib\n+# invocation with `make install', so that one can build and install\n+# the library manually with `make -C gcc all gnatlib gnattools install'.\n+if test x\"$enable_libada\" = xno; then\n+  gnat_install_lib=gnat-install-lib\n+else\n+  gnat_install_lib=\n+fi\n+AC_SUBST(gnat_install_lib)\n+\n if test x\"$enable_as_accelerator_for\" != x; then\n   AC_DEFINE(ACCEL_COMPILER, 1,\n     [Define if this compiler should be built as the offload target compiler.])"}]}