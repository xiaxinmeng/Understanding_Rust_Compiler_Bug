{"sha": "a7caf9054ff997137e2da7df70473abb75a9890b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTdjYWY5MDU0ZmY5OTcxMzdlMmRhN2RmNzA0NzNhYmI3NWE5ODkwYg==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2013-12-17T18:41:01Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2013-12-17T18:41:01Z"}, "message": "Add __int128 test.\n\nFrom-SVN: r206065", "tree": {"sha": "715f7d6e3864b87753c35ef31bafaa586c0a1d61", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/715f7d6e3864b87753c35ef31bafaa586c0a1d61"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a7caf9054ff997137e2da7df70473abb75a9890b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7caf9054ff997137e2da7df70473abb75a9890b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7caf9054ff997137e2da7df70473abb75a9890b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7caf9054ff997137e2da7df70473abb75a9890b/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "95796c1fa5cabd90536333d87f00b4d4e3c5ab5a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95796c1fa5cabd90536333d87f00b4d4e3c5ab5a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/95796c1fa5cabd90536333d87f00b4d4e3c5ab5a"}], "stats": {"total": 52, "additions": 52, "deletions": 0}, "files": [{"sha": "d0b796cb91a18854de9a0e1279a8bf90ad4c890d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7caf9054ff997137e2da7df70473abb75a9890b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7caf9054ff997137e2da7df70473abb75a9890b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a7caf9054ff997137e2da7df70473abb75a9890b", "patch": "@@ -1,3 +1,7 @@\n+2013-12-17  Marek Polacek  <polacek@redhat.com>\n+\n+\t* c-c++-common/ubsan/overflow-int128.c: New test.\n+\n 2013-12-17  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR ipa/58290"}, {"sha": "3680bd3e72619808f96b9f782b1c89e127ff8ef1", "filename": "gcc/testsuite/c-c++-common/ubsan/overflow-int128.c", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7caf9054ff997137e2da7df70473abb75a9890b/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Foverflow-int128.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7caf9054ff997137e2da7df70473abb75a9890b/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Foverflow-int128.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Foverflow-int128.c?ref=a7caf9054ff997137e2da7df70473abb75a9890b", "patch": "@@ -0,0 +1,48 @@\n+/* { dg-do run } */\n+/* { dg-require-effective-target int128 } */\n+/* { dg-options \"-fsanitize=signed-integer-overflow\" } */\n+/* { dg-skip-if \"\" { *-*-* } { \"-flto\" } { \"\" } } */\n+\n+/* 2^127 - 1 */\n+#define INT128_MAX (__int128) (((unsigned __int128) 1 << ((__SIZEOF_INT128__ * __CHAR_BIT__) - 1)) - 1)\n+#define INT128_MIN (-INT128_MAX - 1)\n+\n+int\n+main (void)\n+{\n+  volatile __int128 i = INT128_MAX;\n+  volatile __int128 j = 1;\n+  volatile __int128 k = i + j;\n+  k = j + i;\n+  i++;\n+  j = INT128_MAX - 100;\n+  j += (1 << 10);\n+\n+  j = INT128_MIN;\n+  i = -1;\n+  k = i + j;\n+  k = j + i;\n+  j--;\n+  j = INT128_MIN + 100;\n+  j += -(1 << 10);\n+\n+  i = INT128_MAX;\n+  j = 2;\n+  k = i * j;\n+\n+  i = INT128_MIN;\n+  i = -i;\n+\n+  return 0;\n+}\n+\n+/* { dg-output \"signed integer overflow: 0x7fffffffffffffffffffffffffffffff \\\\+ 1 cannot be represented in type '__int128'(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*signed integer overflow: 1 \\\\+ 0x7fffffffffffffffffffffffffffffff cannot be represented in type '__int128'(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*signed integer overflow: 0x7fffffffffffffffffffffffffffffff \\\\+ 1 cannot be represented in type '__int128'(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*signed integer overflow: 0x7fffffffffffffffffffffffffffff9b \\\\+ 1024 cannot be represented in type '__int128'(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*signed integer overflow: -1 \\\\+ 0x80000000000000000000000000000000 cannot be represented in type '__int128'(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*signed integer overflow: 0x80000000000000000000000000000000 \\\\+ -1 cannot be represented in type '__int128'(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*signed integer overflow: 0x80000000000000000000000000000000 \\\\+ -1 cannot be represented in type '__int128'(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*signed integer overflow: 0x80000000000000000000000000000064 \\\\+ -1024 cannot be represented in type '__int128'(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*signed integer overflow: 0x7fffffffffffffffffffffffffffffff \\\\* 2 cannot be represented in type '__int128'(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*negation of 0x80000000000000000000000000000000 cannot be represented in type '__int128'; cast to an unsigned type to negate this value to itself(\\n|\\r\\n|\\r)\" } */"}]}