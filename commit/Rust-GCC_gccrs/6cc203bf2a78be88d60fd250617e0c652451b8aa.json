{"sha": "6cc203bf2a78be88d60fd250617e0c652451b8aa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmNjMjAzYmYyYTc4YmU4OGQ2MGZkMjUwNjE3ZTBjNjUyNDUxYjhhYQ==", "commit": {"author": {"name": "Ghjuvan Lacambre", "email": "lacambre@adacore.com", "date": "2020-09-01T08:57:39Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-10-23T08:24:52Z"}, "message": "[Ada] CUDA: fix CUDA_Execute not working with aggregates\n\ngcc/ada/\n\n\t* exp_prag.adb (Etype_Or_Dim3): New function.\n\t(Expand_Pragma_Cuda_Execute): Use Etype_Or_Dim3 for temporary\n\tdecls.", "tree": {"sha": "445b2cdae96e5fafc7e55fd8874349cbb6574f63", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/445b2cdae96e5fafc7e55fd8874349cbb6574f63"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6cc203bf2a78be88d60fd250617e0c652451b8aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6cc203bf2a78be88d60fd250617e0c652451b8aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6cc203bf2a78be88d60fd250617e0c652451b8aa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6cc203bf2a78be88d60fd250617e0c652451b8aa/comments", "author": {"login": "glacambre", "id": 11534587, "node_id": "MDQ6VXNlcjExNTM0NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/11534587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/glacambre", "html_url": "https://github.com/glacambre", "followers_url": "https://api.github.com/users/glacambre/followers", "following_url": "https://api.github.com/users/glacambre/following{/other_user}", "gists_url": "https://api.github.com/users/glacambre/gists{/gist_id}", "starred_url": "https://api.github.com/users/glacambre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/glacambre/subscriptions", "organizations_url": "https://api.github.com/users/glacambre/orgs", "repos_url": "https://api.github.com/users/glacambre/repos", "events_url": "https://api.github.com/users/glacambre/events{/privacy}", "received_events_url": "https://api.github.com/users/glacambre/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4e40d14622b5ce8771498cdb9cf8cbfe6b71d883", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e40d14622b5ce8771498cdb9cf8cbfe6b71d883", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e40d14622b5ce8771498cdb9cf8cbfe6b71d883"}], "stats": {"total": 25, "additions": 21, "deletions": 4}, "files": [{"sha": "14ccac9b2a485a210c5f86c01787ba706ec35a2c", "filename": "gcc/ada/exp_prag.adb", "status": "modified", "additions": 21, "deletions": 4, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cc203bf2a78be88d60fd250617e0c652451b8aa/gcc%2Fada%2Fexp_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cc203bf2a78be88d60fd250617e0c652451b8aa/gcc%2Fada%2Fexp_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_prag.adb?ref=6cc203bf2a78be88d60fd250617e0c652451b8aa", "patch": "@@ -752,6 +752,11 @@ package body Exp_Prag is\n       --  type of which is Integer, the value of which is Init_Val if present\n       --  and 0 otherwise.\n \n+      function Etype_Or_Dim3 (N : Node_Id) return Node_Id;\n+      --  If N is an aggregate whose type is unknown, return a new occurrence\n+      --  of the public Dim3 type. Otherwise, return a new occurrence of N's\n+      --  type.\n+\n       function Get_Nth_Arg_Type\n          (Subprogram : Entity_Id;\n           N          : Positive) return Entity_Id;\n@@ -988,6 +993,20 @@ package body Exp_Prag is\n             Default_Val => Make_Null (Loc));\n       end Build_Stream_Declaration;\n \n+      ------------------------\n+      -- Etype_Or_Dim3  --\n+      ------------------------\n+\n+      function Etype_Or_Dim3 (N : Node_Id) return Node_Id is\n+      begin\n+         if Nkind (N) = N_Aggregate and then Is_Composite_Type (Etype (N))\n+         then\n+            return New_Occurrence_Of (RTE (RE_Dim3), Sloc (N));\n+         end if;\n+\n+         return New_Occurrence_Of (Etype (N), Loc);\n+      end Etype_Or_Dim3;\n+\n       ----------------------\n       -- Get_Nth_Arg_Type --\n       ----------------------\n@@ -1054,13 +1073,11 @@ package body Exp_Prag is\n       --  referenced multiple times but could have side effects.\n       Temp_Grid_Decl : constant Node_Id := Make_Object_Declaration (Loc,\n         Defining_Identifier => Temp_Grid,\n-        Object_Definition   =>\n-          New_Occurrence_Of (Etype (Grid_Dimensions), Loc),\n+        Object_Definition   => Etype_Or_Dim3 (Grid_Dimensions),\n         Expression          => Grid_Dimensions);\n       Temp_Block_Decl : constant Node_Id := Make_Object_Declaration (Loc,\n         Defining_Identifier => Temp_Block,\n-        Object_Definition   =>\n-          New_Occurrence_Of (Etype (Block_Dimensions), Loc),\n+        Object_Definition   => Etype_Or_Dim3 (Block_Dimensions),\n         Expression          => Block_Dimensions);\n \n       --  List holding the entities of the copies of Procedure_Call's"}]}