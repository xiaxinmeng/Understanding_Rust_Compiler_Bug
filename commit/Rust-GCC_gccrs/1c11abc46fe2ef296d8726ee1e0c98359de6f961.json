{"sha": "1c11abc46fe2ef296d8726ee1e0c98359de6f961", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWMxMWFiYzQ2ZmUyZWYyOTZkODcyNmVlMWUwYzk4MzU5ZGU2Zjk2MQ==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@hxi.com", "date": "2002-02-17T12:41:46Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2002-02-17T12:41:46Z"}, "message": "h8300.h (CONDITIONAL_REGISTER_USAGE): Replace a hard coded register number with an appropriate macro.\n\n\t* config/h8300/h8300.h (CONDITIONAL_REGISTER_USAGE): Replace a\n\thard coded register number with an appropriate macro.\n\t(HARD_REGNO_MODE_OK): Likewise.\n\t(ARG_POINTER_REGNUM): Likewise.\n\t(STATIC_CHAIN_REGNUM): Likewise.\n\t(RETURN_ADDRESS_POINTER_REGNUM): Likewise.\n\t* config/h8300/h8300.md (define_constants): Define more\n\tregister numbers.\n\nFrom-SVN: r49819", "tree": {"sha": "abfc206235e89e0ac5e03feb78a7d4c927c84b61", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/abfc206235e89e0ac5e03feb78a7d4c927c84b61"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1c11abc46fe2ef296d8726ee1e0c98359de6f961", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c11abc46fe2ef296d8726ee1e0c98359de6f961", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c11abc46fe2ef296d8726ee1e0c98359de6f961", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c11abc46fe2ef296d8726ee1e0c98359de6f961/comments", "author": null, "committer": null, "parents": [{"sha": "bd4bf6f8cf6fcf2d38f73fe22f5b4807e4f276f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd4bf6f8cf6fcf2d38f73fe22f5b4807e4f276f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd4bf6f8cf6fcf2d38f73fe22f5b4807e4f276f5"}], "stats": {"total": 35, "additions": 25, "deletions": 10}, "files": [{"sha": "456615b97a659dc838b4af2b6809996184f6f6c9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c11abc46fe2ef296d8726ee1e0c98359de6f961/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c11abc46fe2ef296d8726ee1e0c98359de6f961/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1c11abc46fe2ef296d8726ee1e0c98359de6f961", "patch": "@@ -1,3 +1,14 @@\n+2002-02-17  Kazu Hirata  <kazu@hxi.com>\n+\n+\t* config/h8300/h8300.h (CONDITIONAL_REGISTER_USAGE): Replace a\n+\thard coded register number with an appropriate macro.\n+\t(HARD_REGNO_MODE_OK): Likewise.\n+\t(ARG_POINTER_REGNUM): Likewise.\n+\t(STATIC_CHAIN_REGNUM): Likewise.\n+\t(RETURN_ADDRESS_POINTER_REGNUM): Likewise.\n+\t* config/h8300/h8300.md (define_constants): Define more\n+\tregister numbers.\n+\n 2002-02-17  Philipp Thomas  <pthomas@suse.de>\n \n \t* config/i386/i386.h: Don't mark empty strings for translation."}, {"sha": "a082cde9b21262f9b6e4538a8ecb17664b7a5e3e", "filename": "gcc/config/h8300/h8300.h", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c11abc46fe2ef296d8726ee1e0c98359de6f961/gcc%2Fconfig%2Fh8300%2Fh8300.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c11abc46fe2ef296d8726ee1e0c98359de6f961/gcc%2Fconfig%2Fh8300%2Fh8300.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.h?ref=1c11abc46fe2ef296d8726ee1e0c98359de6f961", "patch": "@@ -294,10 +294,10 @@ extern int target_flags;\n #define REG_ALLOC_ORDER \\\n   { 2, 3, 0, 1, 4, 5, 6, 8, 7, 9, 10}\n \n-#define CONDITIONAL_REGISTER_USAGE\t\t\\\n-{\t\t\t\t\t\t\\\n-  if (!TARGET_MAC)\t\t\t\t\\\n-    fixed_regs[8] = call_used_regs[8] = 1;\t\\\n+#define CONDITIONAL_REGISTER_USAGE\t\t\t\\\n+{\t\t\t\t\t\t\t\\\n+  if (!TARGET_MAC)\t\t\t\t\t\\\n+    fixed_regs[MAC_REG] = call_used_regs[MAC_REG] = 1;\t\\\n }\n \n /* Return number of consecutive hard regs needed starting at reg REGNO\n@@ -322,7 +322,7 @@ extern int target_flags;\n #define HARD_REGNO_MODE_OK(REGNO, MODE)\t\t\t\t\t\\\n   (TARGET_H8300\t\t\t\t\t\t\t\t\\\n    ? ((((REGNO) & 1) == 0) || ((MODE) == HImode) || ((MODE) == QImode))\t\\\n-   : (REGNO) == 8 ? (MODE) == SImode : 1)\n+   : (REGNO) == MAC_REG ? (MODE) == SImode : 1)\n \n /* Value is 1 if it is a good idea to tie two pseudo registers\n    when one has mode MODE1 and one has mode MODE2.\n@@ -355,14 +355,14 @@ extern int target_flags;\n #define FRAME_POINTER_REQUIRED 0\n \n /* Base register for access to arguments of the function.  */\n-#define ARG_POINTER_REGNUM 9\n+#define ARG_POINTER_REGNUM AP_REG\n \n /* Register in which static-chain is passed to a function.  */\n-#define STATIC_CHAIN_REGNUM 3\n+#define STATIC_CHAIN_REGNUM SC_REG\n \n /* Fake register that holds the address on the stack of the\n    current function's return address.  */\n-#define RETURN_ADDRESS_POINTER_REGNUM 10\n+#define RETURN_ADDRESS_POINTER_REGNUM RAP_REG\n \n /* A C expression whose value is RTL representing the value of the return\n    address for the frame COUNT steps up from the current frame."}, {"sha": "4d85dd1206676f7b47276274c45ebd983dce61c0", "filename": "gcc/config/h8300/h8300.md", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c11abc46fe2ef296d8726ee1e0c98359de6f961/gcc%2Fconfig%2Fh8300%2Fh8300.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c11abc46fe2ef296d8726ee1e0c98359de6f961/gcc%2Fconfig%2Fh8300%2Fh8300.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.md?ref=1c11abc46fe2ef296d8726ee1e0c98359de6f961", "patch": "@@ -51,8 +51,12 @@\n ;; ----------------------------------------------------------------------\n \n (define_constants\n-  [(FP_REG\t6)\n-   (SP_REG\t7)])\n+  [(SC_REG\t 3)\n+   (FP_REG\t 6)\n+   (SP_REG\t 7)\n+   (MAC_REG\t 8)\n+   (AP_REG\t 9)\n+   (RAP_REG\t10)])\n \n ;; ----------------------------------------------------------------------\n ;; ATTRIBUTES"}]}