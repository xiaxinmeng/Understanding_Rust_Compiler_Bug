{"sha": "2665ab87beb7932fd554efd21ae7762eb9ecac20", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjY2NWFiODdiZWI3OTMyZmQ1NTRlZmQyMWFlNzc2MmViOWVjYWMyMA==", "commit": {"author": {"name": "David Edelsohn", "email": "edelsohn@gnu.org", "date": "2008-10-29T23:33:02Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2008-10-29T23:33:02Z"}, "message": "re PR target/37878 (PPC64 ldu command generated with invalid offset)\n\n        PR target/37878\n        * config/rs6000/predicates.md (word_offset_memref_operand):\n        Restructure code and look inside auto-inc/dec addresses.\n\nFrom-SVN: r141450", "tree": {"sha": "380041a9e470fb548f755620e8410ed56fc16390", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/380041a9e470fb548f755620e8410ed56fc16390"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2665ab87beb7932fd554efd21ae7762eb9ecac20", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2665ab87beb7932fd554efd21ae7762eb9ecac20", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2665ab87beb7932fd554efd21ae7762eb9ecac20", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2665ab87beb7932fd554efd21ae7762eb9ecac20/comments", "author": null, "committer": null, "parents": [{"sha": "81a39e89f3bb0a5b2c2d59b30254b2ca7e339bc0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81a39e89f3bb0a5b2c2d59b30254b2ca7e339bc0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/81a39e89f3bb0a5b2c2d59b30254b2ca7e339bc0"}], "stats": {"total": 28, "additions": 23, "deletions": 5}, "files": [{"sha": "b3448e3d2c10672df5e435613b1b6e923ea37a0e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2665ab87beb7932fd554efd21ae7762eb9ecac20/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2665ab87beb7932fd554efd21ae7762eb9ecac20/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2665ab87beb7932fd554efd21ae7762eb9ecac20", "patch": "@@ -1,3 +1,9 @@\n+2008-10-29  David Edelsohn  <edelsohn@gnu.org>\n+\n+\tPR target/37878\n+\t* config/rs6000/predicates.md (word_offset_memref_operand):\n+\tRestructure code and look inside auto-inc/dec addresses.\n+\t\n 2008-10-29  Steve Ellcey  <sje@cup.hp.com>\n \n \tPR target/32277"}, {"sha": "af80ef46b6f0a8ddc8933c44d23fe0af29264505", "filename": "gcc/config/rs6000/predicates.md", "status": "modified", "additions": 17, "deletions": 5, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2665ab87beb7932fd554efd21ae7762eb9ecac20/gcc%2Fconfig%2Frs6000%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2665ab87beb7932fd554efd21ae7762eb9ecac20/gcc%2Fconfig%2Frs6000%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fpredicates.md?ref=2665ab87beb7932fd554efd21ae7762eb9ecac20", "patch": "@@ -373,11 +373,23 @@\n \n ;; Return 1 if the operand is a memory operand with an address divisible by 4\n (define_predicate \"word_offset_memref_operand\"\n-  (and (match_operand 0 \"memory_operand\")\n-       (match_test \"GET_CODE (XEXP (op, 0)) != PLUS\n-\t\t    || ! REG_P (XEXP (XEXP (op, 0), 0)) \n-\t\t    || GET_CODE (XEXP (XEXP (op, 0), 1)) != CONST_INT\n-\t\t    || INTVAL (XEXP (XEXP (op, 0), 1)) % 4 == 0\")))\n+  (match_operand 0 \"memory_operand\")\n+{\n+  /* Address inside MEM.  */\n+  op = XEXP (op, 0);\n+\n+  /* Extract address from auto-inc/dec.  */\n+  if (GET_CODE (op) == PRE_INC\n+      || GET_CODE (op) == PRE_DEC)\n+    op = XEXP (op, 0);\n+  else if (GET_CODE (op) == PRE_MODIFY)\n+    op = XEXP (op, 1);\n+\n+  return (GET_CODE (op) != PLUS\n+\t  || ! REG_P (XEXP (op, 0))\n+\t  || GET_CODE (XEXP (op, 1)) != CONST_INT\n+\t  || INTVAL (XEXP (op, 1)) % 4 == 0);\n+})\n \n ;; Return 1 if the operand is an indexed or indirect memory operand.\n (define_predicate \"indexed_or_indirect_operand\""}]}