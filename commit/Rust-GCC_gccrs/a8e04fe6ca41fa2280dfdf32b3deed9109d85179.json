{"sha": "a8e04fe6ca41fa2280dfdf32b3deed9109d85179", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YThlMDRmZTZjYTQxZmEyMjgwZGZkZjMyYjNkZWVkOTEwOWQ4NTE3OQ==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2005-03-30T23:46:28Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2005-03-30T23:46:28Z"}, "message": "config.gcc (cpu_is_64bit): Set for 64-bit powerpc cpus.\n\n\t* config.gcc (cpu_is_64bit): Set for 64-bit powerpc cpus.\n\t(powerpc64-*-linux*): Use it.  Rearrange tm_file assignment.\n\t(powerpc-*-linux*): Build a biarch compiler when --enable-targets\n\tis given with \"powerpc64*\" or \"all\", or when --with-cpu chooses\n\ta 64-bit cpu.\n\nFrom-SVN: r97290", "tree": {"sha": "6c03297197199c8f04a0e16dfc869a329e7921f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6c03297197199c8f04a0e16dfc869a329e7921f8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a8e04fe6ca41fa2280dfdf32b3deed9109d85179", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8e04fe6ca41fa2280dfdf32b3deed9109d85179", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a8e04fe6ca41fa2280dfdf32b3deed9109d85179", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8e04fe6ca41fa2280dfdf32b3deed9109d85179/comments", "author": null, "committer": null, "parents": [{"sha": "fdfa76bdd915d0e9fa1ed725bc131562d7c263f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fdfa76bdd915d0e9fa1ed725bc131562d7c263f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fdfa76bdd915d0e9fa1ed725bc131562d7c263f9"}], "stats": {"total": 58, "additions": 41, "deletions": 17}, "files": [{"sha": "d79c6ec45237374f6ebdc15d0253b27fdeb698e2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 18, "deletions": 10, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8e04fe6ca41fa2280dfdf32b3deed9109d85179/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8e04fe6ca41fa2280dfdf32b3deed9109d85179/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a8e04fe6ca41fa2280dfdf32b3deed9109d85179", "patch": "@@ -1,3 +1,11 @@\n+2005-03-31  Alan Modra  <amodra@bigpond.net.au>\n+\n+\t* config.gcc (cpu_is_64bit): Set for 64-bit powerpc cpus.\n+\t(powerpc64-*-linux*): Use it.  Rearrange tm_file assignment.\n+\t(powerpc-*-linux*): Build a biarch compiler when --enable-targets\n+\tis given with \"powerpc64*\" or \"all\", or when --with-cpu chooses\n+\ta 64-bit cpu.\n+\n 2005-03-30  James E. Wilson  <wilson@specifixinc.com>\n \n \tPR debug/20268\n@@ -88,7 +96,7 @@\n \t2nd argument to match int.\n \t* libgcc2.h (__powisf2, __powidf2, __powixf2, __powitf2): Change\n \t2nd argument type to int.\n-\t* libgcc2.c: Change prototype of __powi* functions to use \n+\t* libgcc2.c: Change prototype of __powi* functions to use\n \tint.\n \n 2005-03-30  Dale Johannesen  <dalej@apple.com>\n@@ -141,7 +149,7 @@\n \n 2005-03-30  Sebastian Pop  <pop@cri.ensmp.fr>\n \n-\t* tree-scalar-evolution.c (instantiate_parameters_1): Return \n+\t* tree-scalar-evolution.c (instantiate_parameters_1): Return\n \tas soon as a chrec_dont_know is detected.\n \n 2005-03-31  Danny Smith  <dannysmith@users.sourceforge.net>\n@@ -411,15 +419,15 @@\n \t(pass_tree_profile): Reference it.\n \t* value-prof.c: Include tree-flow.h, tree-flow-inline.h, diagnostic.h,\n \ttree.h, gcov-io.h.\n-\t(insn_divmod_values_to_profile): Rename to \n+\t(insn_divmod_values_to_profile): Rename to\n \trtl_divmod_values_to_profile. Adjust.\n \t(insn_values_to_profile): Rename to rtl_values_to_profile. Adjust.\n \t(insn_prefetch_values_to_profile): Adjust.\n \t(rtl_value_profile_transformations): Adjust.\n \t(gen_divmod_fixed_value): Rename to rtl_divmod_fixed_value.\n \t(gen_mod_pow2): Rename to rtl_mod_pow2.\n \t(gen_mod_subtract): Rename to rtl_mod_subtract.\n-\t(divmod_fixed_value_transform): Rename to \n+\t(divmod_fixed_value_transform): Rename to\n \trtl_divmod_fixed_value_transform.\n \t(mod_pow2_value_transform): Rename to rtl_mod_pow2_value_transform.\n \t(mod_subtract_transform): Rename to rtl_mod_subtract_transform.\n@@ -523,7 +531,7 @@\n \t(stfiwx): New.\n \t* config/rs6000/rs6000.h (EXTRA_CONSTRAINT): Add 'Z'.\n \t(EXTRA_MEMORY_CONSTRAINT): Likewise.\n-\t* config/rs6000/rs6000.c (indexed_or_indirect_operand): New. \n+\t* config/rs6000/rs6000.c (indexed_or_indirect_operand): New.\n \t* config/rs6000/rs6000-protos.h (indexed_or_indirect_operand): New.\n \n 2005-03-25  Kazu Hirata  <kazu@cs.umass.edu>\n@@ -636,7 +644,7 @@\n \tnot optimizing.\n \n 2005-03-23  Dorit Naishlos  <dorit@il.ib.com>\n- \n+\n \tPR tree-optimization/20501\n \t* tree-vect-analyze.c (vect_enhance_data_refs_alignment): Debug print\n \treporting that peeling for alignment is applied moved to...\n@@ -756,7 +764,7 @@\n \t* dwarf2out.c (dwarf2_debug_hooks): Ditto.\n \t* sdbout.c (sdb_debug_hooks): Ditto.\n \t* vmsdbgout.c (vmsdbg_debug_hooks): Ditto.\n-\t\n+\n 2005-03-22  Mark Mitchell  <mark@codesourcery.com>\n \n \t* doc/extend.texi: Deprecate C++ min/max operators.\n@@ -906,7 +914,7 @@\n \t* config/fr30/fr30.opt: New file.\n \n 2005-03-18  Daniel Berlin  <dberlin@dberlin.org>\n-\t\n+\n \tFix PR tree-optimization/20542\n \n \t* tree-flow-inline.h (overlap_subvar): Move to here.\n@@ -915,7 +923,7 @@\n \t* tree-ssa-alias.c (add_pointed_to_var): Use overlap_subvar here.\n \t* tree-ssa-loop-im.c (is_call_clobbered_ref): Return proper answer\n \tfor variables with subvars.\n-\t\n+\n 2005-03-21 Mostafa Hagog <mustafa@il.ibm.com>\n \n \tPR middle-end/20177\n@@ -3904,7 +3912,7 @@\n \tnot including (reg). Do not check for reg being CRIS_PC_REGNUM.\n \t(EXTRA_MEMORY_CONSTRAINT): Define as 'Q'.\n \t* config/cris/cris.md: Tweak comments referring to Q.\n- \t(\"cmpsi\", \"cmphi\", \"cmpqi\", \"*movsi_internal\", \"movhi\")\n+\t(\"cmpsi\", \"cmphi\", \"cmpqi\", \"*movsi_internal\", \"movhi\")\n \t(\"movstricthi\", \"movqi\", \"movstrictqi\", \"movsf\", \"addsi3\")\n \t(\"addhi3\", \"addqi3\", \"subsi3\", \"subhi3\", \"subqi3\")\n \t(\"*expanded_andsi\", \"*expanded_andhi\", \"*andhi_lowpart\", \"andqi3\")"}, {"sha": "c4d5d3fd85bad651c32dc8afd75afd802d74661c", "filename": "gcc/config.gcc", "status": "modified", "additions": 23, "deletions": 7, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8e04fe6ca41fa2280dfdf32b3deed9109d85179/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8e04fe6ca41fa2280dfdf32b3deed9109d85179/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=a8e04fe6ca41fa2280dfdf32b3deed9109d85179", "patch": "@@ -231,6 +231,7 @@ esac\n # machines.\n tm_p_file=\n cpu_type=`echo ${target} | sed 's/-.*$//'`\n+cpu_is_64bit=\n case ${target} in\n alpha*-*-*)\n \tcpu_type=alpha\n@@ -287,6 +288,11 @@ powerpc*-*-*)\n \tcpu_type=rs6000\n \textra_headers=\"ppc-asm.h altivec.h spe.h\"\n \tneed_64bit_hwint=yes\n+\tcase x$with_cpu in\n+\t    xpowerpc64|xdefault64|x6[23]0|x970|xG5|xpower[345]|xrs64a)\n+\t\tcpu_is_64bit=yes\n+\t\t;;\n+\tesac\n \t;;\n rs6000*-*-*)\n \tneed_64bit_hwint=yes\n@@ -1536,12 +1542,10 @@ avr-*-*)\n #\textra_headers=\n #\t;;\n powerpc64-*-linux*)\n-\ttm_file=\"rs6000/biarch64.h ${tm_file} dbxelf.h elfos.h svr4.h freebsd-spec.h rs6000/sysv4.h\"\n-\tcase x$with_cpu in\n-\tx|xpowerpc64|xdefault64|x6[23]0|x970|xG5|xpower[345]|xrs64a)\n-\t\ttm_file=\"${tm_file} rs6000/default64.h\";;\n-\tesac\n-\ttm_file=\"${tm_file} rs6000/linux64.h\"\n+\ttm_file=\"${tm_file} dbxelf.h elfos.h svr4.h freebsd-spec.h rs6000/sysv4.h\"\n+\ttest x$with_cpu != x || cpu_is_64bit=yes\n+\ttest x$cpu_is_64bit != xyes || tm_file=\"${tm_file} rs6000/default64.h\"\n+\ttm_file=\"rs6000/biarch64.h ${tm_file} rs6000/linux64.h\"\n \ttmake_file=\"rs6000/t-fprules ${tmake_file} rs6000/t-ppccomm rs6000/t-linux64\"\n \t;;\n powerpc64-*-gnu*)\n@@ -1620,8 +1624,20 @@ powerpc-*-linux*spe*)\n \ttmake_file=\"rs6000/t-fprules rs6000/t-ppcos ${tmake_file} rs6000/t-ppccomm\"\n \t;;\n powerpc-*-linux*)\n-\ttm_file=\"${tm_file} dbxelf.h elfos.h svr4.h freebsd-spec.h rs6000/sysv4.h rs6000/linux.h\"\n+\ttm_file=\"${tm_file} dbxelf.h elfos.h svr4.h freebsd-spec.h rs6000/sysv4.h\"\n \ttmake_file=\"rs6000/t-fprules rs6000/t-ppcos ${tmake_file} rs6000/t-ppccomm\"\n+\tcase ${enable_targets}:${cpu_is_64bit} in\n+\t    *powerpc64* | all:* | *:yes)\n+\t\tif test x$cpu_is_64bit = xyes; then\n+\t\t    tm_file=\"${tm_file} rs6000/default64.h\"\n+\t\tfi\n+\t\ttm_file=\"rs6000/biarch64.h ${tm_file} rs6000/linux64.h\"\n+\t\ttmake_file=\"$tmake_file rs6000/t-linux64\"\n+\t\t;;\n+\t    *)\n+\t\ttm_file=\"${tm_file} rs6000/linux.h\"\n+\t\t;;\n+\tesac\n \t;;\n powerpc-*-gnu-gnualtivec*)\n \ttm_file=\"${cpu_type}/${cpu_type}.h elfos.h svr4.h freebsd-spec.h gnu.h rs6000/sysv4.h rs6000/linux.h rs6000/linuxaltivec.h rs6000/gnu.h\""}]}