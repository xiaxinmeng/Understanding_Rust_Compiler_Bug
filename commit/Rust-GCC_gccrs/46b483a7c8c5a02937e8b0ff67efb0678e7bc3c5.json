{"sha": "46b483a7c8c5a02937e8b0ff67efb0678e7bc3c5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDZiNDgzYTdjOGM1YTAyOTM3ZThiMGZmNjdlZmIwNjc4ZTdiYzNjNQ==", "commit": {"author": {"name": "Daniel Berlin", "email": "dberlin@dberlin.org", "date": "2004-11-22T20:28:01Z"}, "committer": {"name": "Daniel Berlin", "email": "dberlin@gcc.gnu.org", "date": "2004-11-22T20:28:01Z"}, "message": "tree-ssa.c (verify_ssa): SSA_OP_ALL_USES should be SSA_OP_ALL_USES | SSA_OP_ALL_KILLS for verification...\n\n2004-11-22 Daniel Berlin  <dberlin@dberlin.org>\n\n        * tree-ssa.c (verify_ssa): SSA_OP_ALL_USES should be\n\tSSA_OP_ALL_USES | SSA_OP_ALL_KILLS for verification purposes.\n\nFrom-SVN: r91026", "tree": {"sha": "2f6071d7856e5af2369142bdaaba18dd88a54de5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2f6071d7856e5af2369142bdaaba18dd88a54de5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/46b483a7c8c5a02937e8b0ff67efb0678e7bc3c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46b483a7c8c5a02937e8b0ff67efb0678e7bc3c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/46b483a7c8c5a02937e8b0ff67efb0678e7bc3c5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46b483a7c8c5a02937e8b0ff67efb0678e7bc3c5/comments", "author": {"login": "dberlin", "id": 324715, "node_id": "MDQ6VXNlcjMyNDcxNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/324715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dberlin", "html_url": "https://github.com/dberlin", "followers_url": "https://api.github.com/users/dberlin/followers", "following_url": "https://api.github.com/users/dberlin/following{/other_user}", "gists_url": "https://api.github.com/users/dberlin/gists{/gist_id}", "starred_url": "https://api.github.com/users/dberlin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dberlin/subscriptions", "organizations_url": "https://api.github.com/users/dberlin/orgs", "repos_url": "https://api.github.com/users/dberlin/repos", "events_url": "https://api.github.com/users/dberlin/events{/privacy}", "received_events_url": "https://api.github.com/users/dberlin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ad630bef66f402d1919dd0fc6c0aa37b9ceb0afc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad630bef66f402d1919dd0fc6c0aa37b9ceb0afc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad630bef66f402d1919dd0fc6c0aa37b9ceb0afc"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "d94b75d394467a81a8a4a435a81dbf5112e9836f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46b483a7c8c5a02937e8b0ff67efb0678e7bc3c5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46b483a7c8c5a02937e8b0ff67efb0678e7bc3c5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=46b483a7c8c5a02937e8b0ff67efb0678e7bc3c5", "patch": "@@ -1,3 +1,8 @@\n+2004-11-22 Daniel Berlin  <dberlin@dberlin.org>\n+\n+        * tree-ssa.c (verify_ssa): SSA_OP_ALL_USES should be\n+\tSSA_OP_ALL_USES | SSA_OP_ALL_KILLS for verification purposes.\n+\n 2004-11-22  David Edelsohn  <edelsohn@gnu.org>\n \t    Fariborz Jahanian  <fjahanian@apple.com>\n "}, {"sha": "5dfa8c7142232db83471ed79600c9e4abc8c4b95", "filename": "gcc/tree-ssa.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46b483a7c8c5a02937e8b0ff67efb0678e7bc3c5/gcc%2Ftree-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46b483a7c8c5a02937e8b0ff67efb0678e7bc3c5/gcc%2Ftree-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa.c?ref=46b483a7c8c5a02937e8b0ff67efb0678e7bc3c5", "patch": "@@ -655,7 +655,7 @@ verify_ssa (void)\n \t\t  goto err;\n \t\t}\n \n-\t  FOR_EACH_SSA_TREE_OPERAND (op, stmt, iter, SSA_OP_ALL_USES)\n+\t  FOR_EACH_SSA_TREE_OPERAND (op, stmt, iter, SSA_OP_ALL_USES | SSA_OP_ALL_KILLS)\n \t    {\n \t      if (verify_use (bb, definition_block[SSA_NAME_VERSION (op)],\n \t\t\t      op, stmt, false, !is_gimple_reg (op),"}]}