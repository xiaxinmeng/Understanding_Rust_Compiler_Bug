{"sha": "69f232c5a1a432d133431720f19c233cb20d8079", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjlmMjMyYzVhMWE0MzJkMTMzNDMxNzIwZjE5YzIzM2NiMjBkODA3OQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2012-04-28T04:56:55Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2012-04-28T04:56:55Z"}, "message": "compiler: Fix some crashes on invalid code.\n\nFixes issue 7.\n\nFrom-SVN: r186929", "tree": {"sha": "44c7a0848e4d40359a0c29b84c9292f3f270dd32", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/44c7a0848e4d40359a0c29b84c9292f3f270dd32"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/69f232c5a1a432d133431720f19c233cb20d8079", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69f232c5a1a432d133431720f19c233cb20d8079", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69f232c5a1a432d133431720f19c233cb20d8079", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69f232c5a1a432d133431720f19c233cb20d8079/comments", "author": null, "committer": null, "parents": [{"sha": "fa06ad0d58e8981afc7dd0e8965505bab04a5320", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa06ad0d58e8981afc7dd0e8965505bab04a5320", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa06ad0d58e8981afc7dd0e8965505bab04a5320"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "a266694d24cf88bdc73a3f76414c44a1ff6abaa3", "filename": "gcc/go/gofrontend/expressions.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69f232c5a1a432d133431720f19c233cb20d8079/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69f232c5a1a432d133431720f19c233cb20d8079/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc?ref=69f232c5a1a432d133431720f19c233cb20d8079", "patch": "@@ -9225,7 +9225,7 @@ Call_expression::set_results(Translate_context* context, tree call_tree)\n       ref->set_is_lvalue();\n       tree temp_tree = ref->get_tree(context);\n       if (temp_tree == error_mark_node)\n-\tcontinue;\n+\treturn error_mark_node;\n \n       tree val_tree = build3_loc(loc.gcc_location(), COMPONENT_REF,\n                                  TREE_TYPE(field), call_tree, field, NULL_TREE);"}, {"sha": "74bab411ac09878e3d87001bfac4fcdb5a344e31", "filename": "gcc/go/gofrontend/types.cc", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69f232c5a1a432d133431720f19c233cb20d8079/gcc%2Fgo%2Fgofrontend%2Ftypes.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69f232c5a1a432d133431720f19c233cb20d8079/gcc%2Fgo%2Fgofrontend%2Ftypes.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Ftypes.cc?ref=69f232c5a1a432d133431720f19c233cb20d8079", "patch": "@@ -5450,6 +5450,11 @@ Array_type::get_length_tree(Gogo* gogo)\n       mpz_t val;\n       if (this->length_->numeric_constant_value(&nc) && nc.to_int(&val))\n \t{\n+\t  if (mpz_sgn(val) < 0)\n+\t    {\n+\t      this->length_tree_ = error_mark_node;\n+\t      return this->length_tree_;\n+\t    }\n \t  Type* t = nc.type();\n \t  if (t == NULL)\n \t    t = Type::lookup_integer_type(\"int\");\n@@ -6551,7 +6556,11 @@ bool\n Interface_type::is_identical(const Interface_type* t,\n \t\t\t     bool errors_are_identical) const\n {\n-  go_assert(this->methods_are_finalized_ && t->methods_are_finalized_);\n+  // If methods have not been finalized, then we are asking whether\n+  // func redeclarations are the same.  This is an error, so for\n+  // simplicity we say they are never the same.\n+  if (!this->methods_are_finalized_ || !t->methods_are_finalized_)\n+    return false;\n \n   // We require the same methods with the same types.  The methods\n   // have already been sorted."}]}