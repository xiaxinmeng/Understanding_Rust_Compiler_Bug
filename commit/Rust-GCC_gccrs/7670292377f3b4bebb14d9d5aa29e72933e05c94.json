{"sha": "7670292377f3b4bebb14d9d5aa29e72933e05c94", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzY3MDI5MjM3N2YzYjRiZWJiMTRkOWQ1YWEyOWU3MjkzM2UwNWM5NA==", "commit": {"author": {"name": "Richard Earnshaw", "email": "rearnsha@arm.com", "date": "2012-06-14T09:24:51Z"}, "committer": {"name": "Richard Earnshaw", "email": "rearnsha@gcc.gnu.org", "date": "2012-06-14T09:24:51Z"}, "message": "arm.opt (mfp=2, [...]): Delete options.\n\n\t* arm.opt (mfp=2, mfp=3, mfpe, mfpe=2, mfpe=3): Delete options.\n        * arm-fpus.def (fpa, fpe2, fpe3, maverick): Delete FPU types.\n\t* arm-tables.opt: Regenerated.\n        * doc/invoke.texi: Remove references to deleted options.\n\nFrom-SVN: r188603", "tree": {"sha": "2027427f331a2801ffaabba9c30a72d20d1f5150", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2027427f331a2801ffaabba9c30a72d20d1f5150"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7670292377f3b4bebb14d9d5aa29e72933e05c94", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7670292377f3b4bebb14d9d5aa29e72933e05c94", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7670292377f3b4bebb14d9d5aa29e72933e05c94", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7670292377f3b4bebb14d9d5aa29e72933e05c94/comments", "author": null, "committer": null, "parents": [{"sha": "9257546baf59e4c74e8e4192155ac701b5fb210a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9257546baf59e4c74e8e4192155ac701b5fb210a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9257546baf59e4c74e8e4192155ac701b5fb210a"}], "stats": {"total": 85, "additions": 26, "deletions": 59}, "files": [{"sha": "c7f2d6743d59b09210b1b5ae23b90a1a98fbebdf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7670292377f3b4bebb14d9d5aa29e72933e05c94/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7670292377f3b4bebb14d9d5aa29e72933e05c94/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7670292377f3b4bebb14d9d5aa29e72933e05c94", "patch": "@@ -1,3 +1,10 @@\n+2012-06-14  Richard Earnshaw  <rearnsha@arm.com>\n+\n+\t* arm.opt (mfp=2, mfp=3, mfpe, mfpe=2, mfpe=3): Delete options.\n+        * arm-fpus.def (fpa, fpe2, fpe3, maverick): Delete FPU types.\n+\t* arm-tables.opt: Regenerated.\n+        * doc/invoke.texi: Remove references to deleted options.\n+\n 2012-06-14  Sandeep Kumar Singh  <Sandeep.Singh2@kpitcummins.com>\n \n \t* config/h8300/genmova.sh: Modified to add offset bits of "}, {"sha": "d0fbfd3704b7b63194e7c3a58ad0a0395e428b35", "filename": "gcc/config/arm/arm-fpus.def", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7670292377f3b4bebb14d9d5aa29e72933e05c94/gcc%2Fconfig%2Farm%2Farm-fpus.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7670292377f3b4bebb14d9d5aa29e72933e05c94/gcc%2Fconfig%2Farm%2Farm-fpus.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-fpus.def?ref=7670292377f3b4bebb14d9d5aa29e72933e05c94", "patch": "@@ -27,10 +27,6 @@\n \n    genopt.sh assumes no whitespace up to the first \",\" in each entry.  */\n \n-ARM_FPU(\"fpa\",\t\tARM_FP_MODEL_FPA, 0, VFP_NONE, false, false)\n-ARM_FPU(\"fpe2\",\t\tARM_FP_MODEL_FPA, 2, VFP_NONE, false, false)\n-ARM_FPU(\"fpe3\",\t\tARM_FP_MODEL_FPA, 3, VFP_NONE, false, false)\n-ARM_FPU(\"maverick\",\tARM_FP_MODEL_MAVERICK, 0, VFP_NONE, false, false)\n ARM_FPU(\"vfp\",\t\tARM_FP_MODEL_VFP, 2, VFP_REG_D16, false, false)\n ARM_FPU(\"vfpv3\",\tARM_FP_MODEL_VFP, 3, VFP_REG_D32, false, false)\n ARM_FPU(\"vfpv3-fp16\",\tARM_FP_MODEL_VFP, 3, VFP_REG_D32, false, true)"}, {"sha": "acdfbe912cb6c49c5888850ec5da13bc896670fd", "filename": "gcc/config/arm/arm-tables.opt", "status": "modified", "additions": 14, "deletions": 26, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7670292377f3b4bebb14d9d5aa29e72933e05c94/gcc%2Fconfig%2Farm%2Farm-tables.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7670292377f3b4bebb14d9d5aa29e72933e05c94/gcc%2Fconfig%2Farm%2Farm-tables.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-tables.opt?ref=7670292377f3b4bebb14d9d5aa29e72933e05c94", "patch": "@@ -360,56 +360,44 @@ Name(arm_fpu) Type(int)\n Known ARM FPUs (for use with the -mfpu= option):\n \n EnumValue\n-Enum(arm_fpu) String(fpa) Value(0)\n+Enum(arm_fpu) String(vfp) Value(0)\n \n EnumValue\n-Enum(arm_fpu) String(fpe2) Value(1)\n+Enum(arm_fpu) String(vfpv3) Value(1)\n \n EnumValue\n-Enum(arm_fpu) String(fpe3) Value(2)\n+Enum(arm_fpu) String(vfpv3-fp16) Value(2)\n \n EnumValue\n-Enum(arm_fpu) String(maverick) Value(3)\n+Enum(arm_fpu) String(vfpv3-d16) Value(3)\n \n EnumValue\n-Enum(arm_fpu) String(vfp) Value(4)\n+Enum(arm_fpu) String(vfpv3-d16-fp16) Value(4)\n \n EnumValue\n-Enum(arm_fpu) String(vfpv3) Value(5)\n+Enum(arm_fpu) String(vfpv3xd) Value(5)\n \n EnumValue\n-Enum(arm_fpu) String(vfpv3-fp16) Value(6)\n+Enum(arm_fpu) String(vfpv3xd-fp16) Value(6)\n \n EnumValue\n-Enum(arm_fpu) String(vfpv3-d16) Value(7)\n+Enum(arm_fpu) String(neon) Value(7)\n \n EnumValue\n-Enum(arm_fpu) String(vfpv3-d16-fp16) Value(8)\n+Enum(arm_fpu) String(neon-fp16) Value(8)\n \n EnumValue\n-Enum(arm_fpu) String(vfpv3xd) Value(9)\n+Enum(arm_fpu) String(vfpv4) Value(9)\n \n EnumValue\n-Enum(arm_fpu) String(vfpv3xd-fp16) Value(10)\n+Enum(arm_fpu) String(vfpv4-d16) Value(10)\n \n EnumValue\n-Enum(arm_fpu) String(neon) Value(11)\n+Enum(arm_fpu) String(fpv4-sp-d16) Value(11)\n \n EnumValue\n-Enum(arm_fpu) String(neon-fp16) Value(12)\n+Enum(arm_fpu) String(neon-vfpv4) Value(12)\n \n EnumValue\n-Enum(arm_fpu) String(vfpv4) Value(13)\n-\n-EnumValue\n-Enum(arm_fpu) String(vfpv4-d16) Value(14)\n-\n-EnumValue\n-Enum(arm_fpu) String(fpv4-sp-d16) Value(15)\n-\n-EnumValue\n-Enum(arm_fpu) String(neon-vfpv4) Value(16)\n-\n-EnumValue\n-Enum(arm_fpu) String(vfp3) Value(17)\n+Enum(arm_fpu) String(vfp3) Value(13)\n "}, {"sha": "fb12c55b4d03e590febeb5bea4a4324beaff051e", "filename": "gcc/config/arm/arm.opt", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7670292377f3b4bebb14d9d5aa29e72933e05c94/gcc%2Fconfig%2Farm%2Farm.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7670292377f3b4bebb14d9d5aa29e72933e05c94/gcc%2Fconfig%2Farm%2Farm.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.opt?ref=7670292377f3b4bebb14d9d5aa29e72933e05c94", "patch": "@@ -126,12 +126,6 @@ Enum(float_abi_type) String(softfp) Value(ARM_FLOAT_ABI_SOFTFP)\n EnumValue\n Enum(float_abi_type) String(hard) Value(ARM_FLOAT_ABI_HARD)\n \n-mfp=2\n-Target RejectNegative Undocumented Alias(mfpu=, fpe2)\n-\n-mfp=3\n-Target RejectNegative Undocumented Alias(mfpu=, fpe3)\n-\n mfp16-format=\n Target RejectNegative Joined Enum(arm_fp16_format_type) Var(arm_fp16_format) Init(ARM_FP16_FORMAT_NONE)\n Specify the __fp16 floating-point format\n@@ -149,16 +143,6 @@ Enum(arm_fp16_format_type) String(ieee) Value(ARM_FP16_FORMAT_IEEE)\n EnumValue\n Enum(arm_fp16_format_type) String(alternative) Value(ARM_FP16_FORMAT_ALTERNATIVE)\n \n-;; Now ignored.\n-mfpe\n-Target RejectNegative Mask(FPE) Undocumented\n-\n-mfpe=2\n-Target RejectNegative Undocumented Alias(mfpu=, fpe2)\n-\n-mfpe=3\n-Target RejectNegative Undocumented Alias(mfpu=, fpe3)\n-\n mfpu=\n Target RejectNegative Joined Enum(arm_fpu) Var(arm_fpu_index)\n Specify the name of the target floating point hardware/format"}, {"sha": "9fa0085ce39d733ef0b4e6607f50f50aca10288e", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 5, "deletions": 13, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7670292377f3b4bebb14d9d5aa29e72933e05c94/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7670292377f3b4bebb14d9d5aa29e72933e05c94/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=7670292377f3b4bebb14d9d5aa29e72933e05c94", "patch": "@@ -480,7 +480,7 @@ Objective-C and Objective-C++ Dialects}.\n -mapcs-reentrant  -mno-apcs-reentrant @gol\n -msched-prolog  -mno-sched-prolog @gol\n -mlittle-endian  -mbig-endian  -mwords-little-endian @gol\n--mfloat-abi=@var{name}  -mfpe @gol\n+-mfloat-abi=@var{name} @gol\n -mfp16-format=@var{name}\n -mthumb-interwork  -mno-thumb-interwork @gol\n -mcpu=@var{name}  -march=@var{name}  -mfpu=@var{name}  @gol\n@@ -10842,20 +10842,12 @@ Linux, and not all architectures are recognized.  If the auto-detect is\n unsuccessful the option has no effect.\n \n @item -mfpu=@var{name}\n-@itemx -mfpe=@var{number}\n-@itemx -mfp=@var{number}\n @opindex mfpu\n-@opindex mfpe\n-@opindex mfp\n This specifies what floating-point hardware (or hardware emulation) is\n-available on the target.  Permissible names are: @samp{fpa}, @samp{fpe2},\n-@samp{fpe3}, @samp{maverick}, @samp{vfp}, @samp{vfpv3}, @samp{vfpv3-fp16},\n-@samp{vfpv3-d16}, @samp{vfpv3-d16-fp16}, @samp{vfpv3xd}, @samp{vfpv3xd-fp16},\n-@samp{neon}, @samp{neon-fp16}, @samp{vfpv4}, @samp{vfpv4-d16},\n-@samp{fpv4-sp-d16} and @samp{neon-vfpv4}.\n-@option{-mfp} and @option{-mfpe} are synonyms for\n-@option{-mfpu}=@samp{fpe}@var{number}, for compatibility with older versions\n-of GCC@.\n+available on the target.  Permissible names are: @samp{vfp}, @samp{vfpv3},\n+@samp{vfpv3-fp16}, @samp{vfpv3-d16}, @samp{vfpv3-d16-fp16}, @samp{vfpv3xd},\n+@samp{vfpv3xd-fp16}, @samp{neon}, @samp{neon-fp16}, @samp{vfpv4},\n+@samp{vfpv4-d16}, @samp{fpv4-sp-d16} and @samp{neon-vfpv4}.\n \n If @option{-msoft-float} is specified this specifies the format of\n floating-point values."}]}