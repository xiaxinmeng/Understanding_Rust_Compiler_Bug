{"sha": "de972f9de777f333091d7f9044232d1c36fcd7fd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGU5NzJmOWRlNzc3ZjMzMzA5MWQ3ZjkwNDQyMzJkMWMzNmZjZDdmZA==", "commit": {"author": {"name": "Pascal Obry", "email": "obry@adacore.com", "date": "2005-06-16T08:40:36Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2005-06-16T08:40:36Z"}, "message": "g-dynhta.ads, [...] (Reset): Free the table itself after releasing the items.\n\n2005-06-14  Pascal Obry  <obry@adacore.com>\n\n\t* g-dynhta.ads, g-dynhta.adb (Reset): Free the table itself after\n\treleasing the items.\n\nFrom-SVN: r101041", "tree": {"sha": "cc921bbf3ca223a3cdfc91eece877b2fb384002c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cc921bbf3ca223a3cdfc91eece877b2fb384002c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/de972f9de777f333091d7f9044232d1c36fcd7fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de972f9de777f333091d7f9044232d1c36fcd7fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de972f9de777f333091d7f9044232d1c36fcd7fd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de972f9de777f333091d7f9044232d1c36fcd7fd/comments", "author": {"login": "TurboGit", "id": 467069, "node_id": "MDQ6VXNlcjQ2NzA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/467069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TurboGit", "html_url": "https://github.com/TurboGit", "followers_url": "https://api.github.com/users/TurboGit/followers", "following_url": "https://api.github.com/users/TurboGit/following{/other_user}", "gists_url": "https://api.github.com/users/TurboGit/gists{/gist_id}", "starred_url": "https://api.github.com/users/TurboGit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TurboGit/subscriptions", "organizations_url": "https://api.github.com/users/TurboGit/orgs", "repos_url": "https://api.github.com/users/TurboGit/repos", "events_url": "https://api.github.com/users/TurboGit/events{/privacy}", "received_events_url": "https://api.github.com/users/TurboGit/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "df9572726bdf0b2dac33f6fbe4248bc0f4d6062d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df9572726bdf0b2dac33f6fbe4248bc0f4d6062d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df9572726bdf0b2dac33f6fbe4248bc0f4d6062d"}], "stats": {"total": 30, "additions": 19, "deletions": 11}, "files": [{"sha": "677beafe693e261e5cba19167ee867feaed5864b", "filename": "gcc/ada/g-dynhta.adb", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de972f9de777f333091d7f9044232d1c36fcd7fd/gcc%2Fada%2Fg-dynhta.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de972f9de777f333091d7f9044232d1c36fcd7fd/gcc%2Fada%2Fg-dynhta.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-dynhta.adb?ref=de972f9de777f333091d7f9044232d1c36fcd7fd", "patch": "@@ -1,12 +1,12 @@\n ------------------------------------------------------------------------------\n --                                                                          --\n---                         GNAT RUNTIME COMPONENTS                          --\n+--                         GNAT RUN-TIME COMPONENTS                         --\n --                                                                          --\n --                 G N A T . D Y N A M I C _ H T A B L E S                  --\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---           Copyright (C) 2002-2004 Ada Core Technologies, Inc.            --\n+--                     Copyright (C) 2002-2005 AdaCore                      --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -32,6 +32,7 @@\n ------------------------------------------------------------------------------\n \n with Ada.Unchecked_Deallocation;\n+\n package body GNAT.Dynamic_HTables is\n \n    -------------------\n@@ -179,6 +180,9 @@ package body GNAT.Dynamic_HTables is\n       -----------\n \n       procedure Reset (T : in out Instance) is\n+         procedure Free is\n+           new Ada.Unchecked_Deallocation (Instance_Data, Instance);\n+\n       begin\n          if T = null then\n             return;\n@@ -187,6 +191,8 @@ package body GNAT.Dynamic_HTables is\n          for J in T.Table'Range loop\n             T.Table (J) := Null_Ptr;\n          end loop;\n+\n+         Free (T);\n       end Reset;\n \n       ---------\n@@ -205,6 +211,7 @@ package body GNAT.Dynamic_HTables is\n          Set_Next (E, T.Table (Index));\n          T.Table (Index) := E;\n       end Set;\n+\n    end Static_HTable;\n \n    -------------------\n@@ -264,7 +271,6 @@ package body GNAT.Dynamic_HTables is\n \n       function Get_Next (T : Instance) return Element is\n          Tmp : constant Elmt_Ptr := Tab.Get_Next (Tab.Instance (T));\n-\n       begin\n          if Tmp = null then\n             return No_Element;\n@@ -322,7 +328,6 @@ package body GNAT.Dynamic_HTables is\n \n       procedure Set (T : in out Instance; K : Key; E : Element) is\n          Tmp : constant Elmt_Ptr := Tab.Get (Tab.Instance (T), K);\n-\n       begin\n          if Tmp = null then\n             Tab.Set (Tab.Instance (T), new Element_Wrapper'(K, E, null));\n@@ -339,6 +344,7 @@ package body GNAT.Dynamic_HTables is\n       begin\n          E.Next := Next;\n       end Set_Next;\n+\n    end Simple_HTable;\n \n end GNAT.Dynamic_HTables;"}, {"sha": "9486ab12a720f9ddecf34216d721caf3a6700e49", "filename": "gcc/ada/g-dynhta.ads", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de972f9de777f333091d7f9044232d1c36fcd7fd/gcc%2Fada%2Fg-dynhta.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de972f9de777f333091d7f9044232d1c36fcd7fd/gcc%2Fada%2Fg-dynhta.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-dynhta.ads?ref=de972f9de777f333091d7f9044232d1c36fcd7fd", "patch": "@@ -1,12 +1,12 @@\n ------------------------------------------------------------------------------\n --                                                                          --\n---                         GNAT RUNTIME COMPONENTS                          --\n+--                         GNAT RUN-TIME COMPONENTS                         --\n --                                                                          --\n --                 G N A T . D Y N A M I C _ H T A B L E S                  --\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---           Copyright (C) 1995-2003 Ada Core Technologies, Inc.            --\n+--                     Copyright (C) 1995-2005 AdaCore                      --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -103,13 +103,13 @@ package GNAT.Dynamic_HTables is\n       Nil : constant Instance;\n \n       procedure Reset (T : in out Instance);\n-      --  Resets the hash table by setting all its elements to Null_Ptr. The\n-      --  effect is to clear the hash table so that it can be reused. For the\n+      --  Resets the hash table by releasing all memory associated with\n+      --  it. The hash table can safely be reused after this call. For the\n       --  most common case where Elmt_Ptr is an access type, and Null_Ptr is\n       --  null, this is only needed if the same table is reused in a new\n       --  context. If Elmt_Ptr is other than an access type, or Null_Ptr is\n-      --  other than null, then Reset must be called before the first use\n-      --  of the hash table.\n+      --  other than null, then Reset must be called before the first use of\n+      --  the hash table.\n \n       procedure Set (T : in out Instance; E : Elmt_Ptr);\n       --  Insert the element pointer in the HTable\n@@ -177,7 +177,9 @@ package GNAT.Dynamic_HTables is\n       --  associated element.\n \n       procedure Reset (T : in out Instance);\n-      --  Removes and frees all elements in the table\n+      --  Releases all memory associated with the table. The table can be\n+      --  reused after this call (it is automatically allocated on the first\n+      --  access to the table).\n \n       function Get (T : Instance; K : Key) return Element;\n       --  Returns the Element associated with a key or No_Element if the"}]}