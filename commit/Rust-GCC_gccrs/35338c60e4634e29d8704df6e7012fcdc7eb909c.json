{"sha": "35338c60e4634e29d8704df6e7012fcdc7eb909c", "node_id": "C_kwDOANBUbNoAKDM1MzM4YzYwZTQ2MzRlMjlkODcwNGRmNmU3MDEyZmNkYzdlYjkwOWM", "commit": {"author": {"name": "Etienne Servais", "email": "servais@adacore.com", "date": "2021-09-29T13:22:00Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-10-11T13:38:11Z"}, "message": "[Ada] Remove constant arguments\n\ngcc/ada/\n\n\t* ali.adb (Get_Name): Ignore_Spaces is always False.\n\t* bindo-graphs.adb (Set_Is_Existing_Source_Target_Relation): Val\n\tis always True.\n\t* cstand.adb (New_Standard_Entity): New_Node_Kind is always\n\tN_Defininig_Identifier.\n\t* exp_ch3.adb (Predef_Stream_Attr_Spec): For_Body is always\n\tFalse.\n\t* exp_dist.adb (Add_Parameter_To_NVList): RACW_Ctrl is always\n\tFalse.\n\t* gnatls.adb (Add_Directories): Prepend is always False.\n\t* sem_ch10.adb, sem_ch10.ads (Load_Needed_Body): Do_Analyze is\n\talways True.\n\t* sem_ch3.adb, sem_ch3.ads (Process_Range_Expr_In_Decl):\n\tR_Check_Off is always False.\n\t* sem_elab.adb: (Info_Variable_Reference): Info_Msg is always\n\tFalse, In_SPARK is always True.\n\t(Set_Is_Traversed_Body, Set_Is_Saved_Construct,\n\tSet_Is_Saved_Relation): Val is always True.\n\t* treepr.adb (Visit_Descendant): No_Indent is always False.\n\t(Print_Node): Fmt does not need such a big scope.", "tree": {"sha": "227e560377204885b3d907aaa24e1c01b6c19905", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/227e560377204885b3d907aaa24e1c01b6c19905"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/35338c60e4634e29d8704df6e7012fcdc7eb909c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35338c60e4634e29d8704df6e7012fcdc7eb909c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35338c60e4634e29d8704df6e7012fcdc7eb909c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35338c60e4634e29d8704df6e7012fcdc7eb909c/comments", "author": {"login": "vser1", "id": 8308457, "node_id": "MDQ6VXNlcjgzMDg0NTc=", "avatar_url": "https://avatars.githubusercontent.com/u/8308457?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vser1", "html_url": "https://github.com/vser1", "followers_url": "https://api.github.com/users/vser1/followers", "following_url": "https://api.github.com/users/vser1/following{/other_user}", "gists_url": "https://api.github.com/users/vser1/gists{/gist_id}", "starred_url": "https://api.github.com/users/vser1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vser1/subscriptions", "organizations_url": "https://api.github.com/users/vser1/orgs", "repos_url": "https://api.github.com/users/vser1/repos", "events_url": "https://api.github.com/users/vser1/events{/privacy}", "received_events_url": "https://api.github.com/users/vser1/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d64c67d67dab6b6c578d4bf4131b4cf129cffafc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d64c67d67dab6b6c578d4bf4131b4cf129cffafc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d64c67d67dab6b6c578d4bf4131b4cf129cffafc"}], "stats": {"total": 408, "additions": 160, "deletions": 248}, "files": [{"sha": "88cc247888c945bb968022c68bdee6b412667310", "filename": "gcc/ada/ali.adb", "status": "modified", "additions": 7, "deletions": 10, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35338c60e4634e29d8704df6e7012fcdc7eb909c/gcc%2Fada%2Fali.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35338c60e4634e29d8704df6e7012fcdc7eb909c/gcc%2Fada%2Fali.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fali.adb?ref=35338c60e4634e29d8704df6e7012fcdc7eb909c", "patch": "@@ -963,19 +963,18 @@ package body ALI is\n       --  special characters are included in the returned name.\n \n       function Get_Name\n-        (Ignore_Spaces  : Boolean := False;\n-         Ignore_Special : Boolean := False;\n+        (Ignore_Special : Boolean := False;\n          May_Be_Quoted  : Boolean := False) return Name_Id;\n       --  Skip blanks, then scan out a name (name is left in Name_Buffer with\n       --  length in Name_Len, as well as being returned in Name_Id form).\n       --  If Lower is set to True then the Name_Buffer will be converted to\n       --  all lower case, for systems where file names are not case sensitive.\n       --  This ensures that gnatbind works correctly regardless of the case\n-      --  of the file name on all systems. The termination condition depends\n-      --  on the settings of Ignore_Spaces and Ignore_Special:\n+      --  of the file name on all systems.\n       --\n-      --    If Ignore_Spaces is False (normal case), then scan is terminated\n-      --    by the normal end of field condition (EOL, space, horizontal tab)\n+      --  The scan is terminated by the normal end of field condition\n+      --  (EOL, space, horizontal tab). Furthermore, the termination condition\n+      --  depends on the setting of Ignore_Special:\n       --\n       --    If Ignore_Special is False (normal case), the scan is terminated by\n       --    a typeref bracket or an equal sign except for the special case of\n@@ -986,7 +985,6 @@ package body ALI is\n       --    the name is 'unquoted'. In this case Ignore_Special is ignored and\n       --    assumed to be True.\n       --\n-      --  It is an error to set both Ignore_Spaces and Ignore_Special to True.\n       --  This function handles wide characters properly.\n \n       function Get_Nat return Nat;\n@@ -1240,8 +1238,7 @@ package body ALI is\n       --------------\n \n       function Get_Name\n-        (Ignore_Spaces  : Boolean := False;\n-         Ignore_Special : Boolean := False;\n+        (Ignore_Special : Boolean := False;\n          May_Be_Quoted  : Boolean := False) return Name_Id\n       is\n          Char : Character;\n@@ -1298,7 +1295,7 @@ package body ALI is\n             loop\n                Add_Char_To_Name_Buffer (Getc);\n \n-               exit when At_End_Of_Field and then not Ignore_Spaces;\n+               exit when At_End_Of_Field;\n \n                if not Ignore_Special then\n                   if Name_Buffer (1) = '\"' then"}, {"sha": "09899813a7692f5eb0da5bb04e0915eb868da96d", "filename": "gcc/ada/bindo-graphs.adb", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35338c60e4634e29d8704df6e7012fcdc7eb909c/gcc%2Fada%2Fbindo-graphs.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35338c60e4634e29d8704df6e7012fcdc7eb909c/gcc%2Fada%2Fbindo-graphs.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindo-graphs.adb?ref=35338c60e4634e29d8704df6e7012fcdc7eb909c", "patch": "@@ -4903,11 +4903,10 @@ package body Bindo.Graphs is\n \n       procedure Set_Is_Existing_Source_Target_Relation\n         (G   : Invocation_Graph;\n-         Rel : Source_Target_Relation;\n-         Val : Boolean := True);\n+         Rel : Source_Target_Relation);\n       pragma Inline (Set_Is_Existing_Source_Target_Relation);\n       --  Mark a source vertex and a target vertex described by relation Rel as\n-      --  already related in invocation graph G depending on value Val.\n+      --  already related in invocation graph G.\n \n       procedure Set_IGE_Attributes\n         (G    : Invocation_Graph;\n@@ -5636,19 +5635,14 @@ package body Bindo.Graphs is\n \n       procedure Set_Is_Existing_Source_Target_Relation\n         (G   : Invocation_Graph;\n-         Rel : Source_Target_Relation;\n-         Val : Boolean := True)\n+         Rel : Source_Target_Relation)\n       is\n       begin\n          pragma Assert (Present (G));\n          pragma Assert (Present (Rel.Source));\n          pragma Assert (Present (Rel.Target));\n \n-         if Val then\n-            Relation_Sets.Insert (G.Relations, Rel);\n-         else\n-            Relation_Sets.Delete (G.Relations, Rel);\n-         end if;\n+         Relation_Sets.Insert (G.Relations, Rel);\n       end Set_Is_Existing_Source_Target_Relation;\n \n       ------------------------"}, {"sha": "41de2a574769143234f905fb29a6bae8e66bea0d", "filename": "gcc/ada/cstand.adb", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35338c60e4634e29d8704df6e7012fcdc7eb909c/gcc%2Fada%2Fcstand.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35338c60e4634e29d8704df6e7012fcdc7eb909c/gcc%2Fada%2Fcstand.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcstand.adb?ref=35338c60e4634e29d8704df6e7012fcdc7eb909c", "patch": "@@ -149,8 +149,7 @@ package body CStand is\n    function New_Operator (Op : Name_Id; Typ : Entity_Id) return Entity_Id;\n    --  Build entity for standard operator with given name and type\n \n-   function New_Standard_Entity\n-     (New_Node_Kind : Node_Kind := N_Defining_Identifier) return Entity_Id;\n+   function New_Standard_Entity return Entity_Id;\n    --  Builds a new entity for Standard\n \n    function New_Standard_Entity (Nam : String) return Entity_Id;\n@@ -1793,10 +1792,9 @@ package body CStand is\n    -- New_Standard_Entity --\n    -------------------------\n \n-   function New_Standard_Entity\n-     (New_Node_Kind : Node_Kind := N_Defining_Identifier) return Entity_Id\n+   function New_Standard_Entity return Entity_Id\n    is\n-      E : constant Entity_Id := New_Entity (New_Node_Kind, Stloc);\n+      E : constant Entity_Id := New_Entity (N_Defining_Identifier, Stloc);\n \n    begin\n       --  All standard entities are Pure and Public"}, {"sha": "1f4f19189aba824f0cdb56a416983a3de75a58f9", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35338c60e4634e29d8704df6e7012fcdc7eb909c/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35338c60e4634e29d8704df6e7012fcdc7eb909c/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=35338c60e4634e29d8704df6e7012fcdc7eb909c", "patch": "@@ -332,10 +332,9 @@ package body Exp_Ch3 is\n    --  no declarations and no statements.\n \n    function Predef_Stream_Attr_Spec\n-     (Loc      : Source_Ptr;\n-      Tag_Typ  : Entity_Id;\n-      Name     : TSS_Name_Type;\n-      For_Body : Boolean := False) return Node_Id;\n+     (Loc     : Source_Ptr;\n+      Tag_Typ : Entity_Id;\n+      Name    : TSS_Name_Type) return Node_Id;\n    --  Specialized version of Predef_Spec_Or_Body that apply to read, write,\n    --  input and output attribute whose specs are constructed in Exp_Strm.\n \n@@ -10907,10 +10906,9 @@ package body Exp_Ch3 is\n    -----------------------------\n \n    function Predef_Stream_Attr_Spec\n-     (Loc      : Source_Ptr;\n-      Tag_Typ  : Entity_Id;\n-      Name     : TSS_Name_Type;\n-      For_Body : Boolean := False) return Node_Id\n+     (Loc     : Source_Ptr;\n+      Tag_Typ : Entity_Id;\n+      Name    : TSS_Name_Type) return Node_Id\n    is\n       Ret_Type : Entity_Id;\n \n@@ -10928,7 +10926,7 @@ package body Exp_Ch3 is\n            Tag_Typ  => Tag_Typ,\n            Profile  => Build_Stream_Attr_Profile (Loc, Tag_Typ, Name),\n            Ret_Type => Ret_Type,\n-           For_Body => For_Body);\n+           For_Body => False);\n    end Predef_Stream_Attr_Spec;\n \n    ---------------------------------"}, {"sha": "41c0aea8a367ac5900c35a744c51541fd614aa5a", "filename": "gcc/ada/exp_dist.adb", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35338c60e4634e29d8704df6e7012fcdc7eb909c/gcc%2Fada%2Fexp_dist.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35338c60e4634e29d8704df6e7012fcdc7eb909c/gcc%2Fada%2Fexp_dist.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dist.adb?ref=35338c60e4634e29d8704df6e7012fcdc7eb909c", "patch": "@@ -300,12 +300,9 @@ package body Exp_Dist is\n       NVList      : Entity_Id;\n       Parameter   : Entity_Id;\n       Constrained : Boolean;\n-      RACW_Ctrl   : Boolean := False;\n       Any         : Entity_Id) return Node_Id;\n    --  Return a call to Add_Item to add the Any corresponding to the designated\n    --  formal Parameter (with the indicated Constrained status) to NVList.\n-   --  RACW_Ctrl must be set to True for controlling formals of distributed\n-   --  object primitive operations.\n \n    --------------------\n    -- Stub_Structure --\n@@ -1089,7 +1086,6 @@ package body Exp_Dist is\n       NVList      : Entity_Id;\n       Parameter   : Entity_Id;\n       Constrained : Boolean;\n-      RACW_Ctrl   : Boolean := False;\n       Any         : Entity_Id) return Node_Id\n    is\n       Parameter_Name_String : String_Id;\n@@ -1146,7 +1142,7 @@ package body Exp_Dist is\n \n       Parameter_Name_String := String_From_Name_Buffer;\n \n-      if RACW_Ctrl or else Nkind (Parameter) = N_Defining_Identifier then\n+      if Nkind (Parameter) = N_Defining_Identifier then\n \n          --  When the parameter passed to Add_Parameter_To_NVList is an\n          --  Extra_Constrained parameter, Parameter is an N_Defining_"}, {"sha": "68990e19605bd4d646d6b7123adc6cec3438f5de", "filename": "gcc/ada/gnatls.adb", "status": "modified", "additions": 5, "deletions": 11, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35338c60e4634e29d8704df6e7012fcdc7eb909c/gcc%2Fada%2Fgnatls.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35338c60e4634e29d8704df6e7012fcdc7eb909c/gcc%2Fada%2Fgnatls.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatls.adb?ref=35338c60e4634e29d8704df6e7012fcdc7eb909c", "patch": "@@ -234,9 +234,8 @@ procedure Gnatls is\n       --  already been initialized.\n \n       procedure Add_Directories\n-        (Self    : in out String_Access;\n-         Path    : String;\n-         Prepend : Boolean := False);\n+        (Self : in out String_Access;\n+         Path : String);\n       --  Add one or more directories to the path. Directories added with this\n       --  procedure are added in order after the current directory and before\n       --  the path given by the environment variable GPR_PROJECT_PATH. A value\n@@ -1239,9 +1238,8 @@ procedure Gnatls is\n       ---------------------\n \n       procedure Add_Directories\n-        (Self    : in out String_Access;\n-         Path    : String;\n-         Prepend : Boolean := False)\n+        (Self : in out String_Access;\n+         Path : String)\n       is\n          Tmp : String_Access;\n \n@@ -1250,11 +1248,7 @@ procedure Gnatls is\n             Self := new String'(Uninitialized_Prefix & Path);\n          else\n             Tmp := Self;\n-            if Prepend then\n-               Self := new String'(Path & Path_Separator & Tmp.all);\n-            else\n-               Self := new String'(Tmp.all & Path_Separator & Path);\n-            end if;\n+            Self := new String'(Tmp.all & Path_Separator & Path);\n             Free (Tmp);\n          end if;\n       end Add_Directories;"}, {"sha": "75a03797c2ddc8879d5b2d71a29b359b1981a07c", "filename": "gcc/ada/sem_ch10.adb", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35338c60e4634e29d8704df6e7012fcdc7eb909c/gcc%2Fada%2Fsem_ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35338c60e4634e29d8704df6e7012fcdc7eb909c/gcc%2Fada%2Fsem_ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch10.adb?ref=35338c60e4634e29d8704df6e7012fcdc7eb909c", "patch": "@@ -5610,9 +5610,8 @@ package body Sem_Ch10 is\n    --  demand, at the point of instantiation (see ch12).\n \n    procedure Load_Needed_Body\n-     (N          : Node_Id;\n-      OK         : out Boolean;\n-      Do_Analyze : Boolean := True)\n+     (N  : Node_Id;\n+      OK : out Boolean)\n    is\n       Body_Name : Unit_Name_Type;\n       Unum      : Unit_Number_Type;\n@@ -5646,9 +5645,8 @@ package body Sem_Ch10 is\n                Write_Eol;\n             end if;\n \n-            if Do_Analyze then\n-               Semantics (Cunit (Unum));\n-            end if;\n+            --  We always perform analyses\n+            Semantics (Cunit (Unum));\n          end if;\n \n          OK := True;"}, {"sha": "ecf3151a5158a0c725ffd27a7da7b3743cec4ffd", "filename": "gcc/ada/sem_ch10.ads", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35338c60e4634e29d8704df6e7012fcdc7eb909c/gcc%2Fada%2Fsem_ch10.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35338c60e4634e29d8704df6e7012fcdc7eb909c/gcc%2Fada%2Fsem_ch10.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch10.ads?ref=35338c60e4634e29d8704df6e7012fcdc7eb909c", "patch": "@@ -59,16 +59,13 @@ package Sem_Ch10 is\n    --  reported on Error_Node (if present); otherwise no error is reported.\n \n    procedure Load_Needed_Body\n-     (N          : Node_Id;\n-      OK         : out Boolean;\n-      Do_Analyze : Boolean := True);\n+     (N  : Node_Id;\n+      OK : out Boolean);\n    --  Load and analyze the body of a context unit that is generic, or that\n    --  contains generic units or inlined units. The body becomes part of the\n    --  semantic dependency set of the unit that needs it. The returned result\n    --  in OK is True if the load is successful, and False if the requested file\n-   --  cannot be found. If the flag Do_Analyze is false, the unit is loaded and\n-   --  parsed only. This allows a selective analysis in some inlining cases\n-   --  where a full analysis would lead so circularities in the back-end.\n+   --  cannot be found.\n \n    procedure Remove_Context (N : Node_Id);\n    --  Removes the entities from the context clause of the given compilation"}, {"sha": "57db637857999a7ea660cc0d4a5c53187e66f928", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 90, "deletions": 99, "changes": 189, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35338c60e4634e29d8704df6e7012fcdc7eb909c/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35338c60e4634e29d8704df6e7012fcdc7eb909c/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=35338c60e4634e29d8704df6e7012fcdc7eb909c", "patch": "@@ -21641,11 +21641,10 @@ package body Sem_Ch3 is\n    --------------------------------\n \n    procedure Process_Range_Expr_In_Decl\n-     (R            : Node_Id;\n-      T            : Entity_Id;\n-      Subtyp       : Entity_Id := Empty;\n-      Check_List   : List_Id   := No_List;\n-      R_Check_Off  : Boolean   := False)\n+     (R          : Node_Id;\n+      T          : Entity_Id;\n+      Subtyp     : Entity_Id := Empty;\n+      Check_List : List_Id   := No_List)\n    is\n       Lo, Hi      : Node_Id;\n       R_Checks    : Check_Result;\n@@ -21748,13 +21747,8 @@ package body Sem_Ch3 is\n          --  represent the null range the Constraint_Error exception should\n          --  not be raised.\n \n-         --  ??? The following code should be cleaned up as follows\n-\n-         --  1. The Is_Null_Range (Lo, Hi) test should disappear since it\n-         --     is done in the call to Range_Check (R, T); below\n-\n-         --  2. The use of R_Check_Off should be investigated and possibly\n-         --     removed, this would clean up things a bit.\n+         --  ??? The Is_Null_Range (Lo, Hi) test should disappear since it\n+         --  is done in the call to Range_Check (R, T); below.\n \n          if Is_Null_Range (Lo, Hi) then\n             null;\n@@ -21771,8 +21765,8 @@ package body Sem_Ch3 is\n \n             if Expander_Active or GNATprove_Mode then\n \n-               --  Call Force_Evaluation to create declarations as needed to\n-               --  deal with side effects, and also create typ_FIRST/LAST\n+               --  Call Force_Evaluation to create declarations as needed\n+               --  to deal with side effects, and also create typ_FIRST/LAST\n                --  entities for bounds if we have a subtype name.\n \n                --  Note: we do this transformation even if expansion is not\n@@ -21790,106 +21784,103 @@ package body Sem_Ch3 is\n             --  because the type we check against isn't necessarily the place\n             --  where we put the check.\n \n-            if not R_Check_Off then\n-               R_Checks := Get_Range_Checks (R, T);\n-\n-               --  Look up tree to find an appropriate insertion point. We\n-               --  can't just use insert_actions because later processing\n-               --  depends on the insertion node. Prior to Ada 2012 the\n-               --  insertion point could only be a declaration or a loop, but\n-               --  quantified expressions can appear within any context in an\n-               --  expression, and the insertion point can be any statement,\n-               --  pragma, or declaration.\n-\n-               Insert_Node := Parent (R);\n-               while Present (Insert_Node) loop\n-                  exit when\n-                    Nkind (Insert_Node) in N_Declaration\n-                    and then\n-                      Nkind (Insert_Node) not in N_Component_Declaration\n-                                               | N_Loop_Parameter_Specification\n-                                               | N_Function_Specification\n-                                               | N_Procedure_Specification;\n-\n-                  exit when Nkind (Insert_Node) in\n-                              N_Later_Decl_Item                     |\n-                              N_Statement_Other_Than_Procedure_Call |\n-                              N_Procedure_Call_Statement            |\n-                              N_Pragma;\n-\n-                  Insert_Node := Parent (Insert_Node);\n-               end loop;\n+            R_Checks := Get_Range_Checks (R, T);\n \n-               --  Why would Type_Decl not be present???  Without this test,\n-               --  short regression tests fail.\n+            --  Look up tree to find an appropriate insertion point. We can't\n+            --  just use insert_actions because later processing depends on\n+            --  the insertion node. Prior to Ada 2012 the insertion point could\n+            --  only be a declaration or a loop, but quantified expressions can\n+            --  appear within any context in an expression, and the insertion\n+            --  point can be any statement, pragma, or declaration.\n \n-               if Present (Insert_Node) then\n+            Insert_Node := Parent (R);\n+            while Present (Insert_Node) loop\n+               exit when\n+                 Nkind (Insert_Node) in N_Declaration\n+                 and then\n+                   Nkind (Insert_Node) not in N_Component_Declaration\n+                                            | N_Loop_Parameter_Specification\n+                                            | N_Function_Specification\n+                                            | N_Procedure_Specification;\n+\n+               exit when Nkind (Insert_Node) in\n+                           N_Later_Decl_Item                     |\n+                           N_Statement_Other_Than_Procedure_Call |\n+                           N_Procedure_Call_Statement            |\n+                           N_Pragma;\n+\n+               Insert_Node := Parent (Insert_Node);\n+            end loop;\n \n-                  --  Case of loop statement. Verify that the range is part\n-                  --  of the subtype indication of the iteration scheme.\n+            --  Why would Type_Decl not be present???  Without this test,\n+            --  short regression tests fail.\n \n-                  if Nkind (Insert_Node) = N_Loop_Statement then\n-                     declare\n-                        Indic : Node_Id;\n+            if Present (Insert_Node) then\n \n-                     begin\n-                        Indic := Parent (R);\n-                        while Present (Indic)\n-                          and then Nkind (Indic) /= N_Subtype_Indication\n-                        loop\n-                           Indic := Parent (Indic);\n-                        end loop;\n+               --  Case of loop statement. Verify that the range is part of the\n+               --  subtype indication of the iteration scheme.\n \n-                        if Present (Indic) then\n-                           Def_Id := Etype (Subtype_Mark (Indic));\n+               if Nkind (Insert_Node) = N_Loop_Statement then\n+                  declare\n+                     Indic : Node_Id;\n \n-                           Insert_Range_Checks\n-                             (R_Checks,\n-                              Insert_Node,\n-                              Def_Id,\n-                              Sloc (Insert_Node),\n-                              Do_Before => True);\n-                        end if;\n-                     end;\n+                  begin\n+                     Indic := Parent (R);\n+                     while Present (Indic)\n+                       and then Nkind (Indic) /= N_Subtype_Indication\n+                     loop\n+                        Indic := Parent (Indic);\n+                     end loop;\n+\n+                     if Present (Indic) then\n+                        Def_Id := Etype (Subtype_Mark (Indic));\n \n-                  --  Case of declarations. If the declaration is for a type\n-                  --  and involves discriminants, the checks are premature at\n-                  --  the declaration point and need to wait for the expansion\n-                  --  of the initialization procedure, which will pass in the\n-                  --  list to put them on; otherwise, the checks are done at\n-                  --  the declaration point and there is no need to do them\n-                  --  again in the initialization procedure.\n+                        Insert_Range_Checks\n+                          (R_Checks,\n+                           Insert_Node,\n+                           Def_Id,\n+                           Sloc (Insert_Node),\n+                           Do_Before => True);\n+                     end if;\n+                  end;\n \n-                  elsif Nkind (Insert_Node) in N_Declaration then\n-                     Def_Id := Defining_Identifier (Insert_Node);\n+               --  Case of declarations. If the declaration is for a type and\n+               --  involves discriminants, the checks are premature at the\n+               --  declaration point and need to wait for the expansion of the\n+               --  initialization procedure, which will pass in the list to put\n+               --  them on; otherwise, the checks are done at the declaration\n+               --  point and there is no need to do them again in the\n+               --  initialization procedure.\n \n-                     if (Ekind (Def_Id) = E_Record_Type\n-                          and then Depends_On_Discriminant (R))\n-                       or else\n-                        (Ekind (Def_Id) = E_Protected_Type\n-                          and then Has_Discriminants (Def_Id))\n-                     then\n-                        if Present (Check_List) then\n-                           Append_Range_Checks\n-                             (R_Checks,\n-                               Check_List, Def_Id, Sloc (Insert_Node));\n-                        end if;\n+               elsif Nkind (Insert_Node) in N_Declaration then\n+                  Def_Id := Defining_Identifier (Insert_Node);\n \n-                     else\n-                        if No (Check_List) then\n-                           Insert_Range_Checks\n-                             (R_Checks,\n-                               Insert_Node, Def_Id, Sloc (Insert_Node));\n-                        end if;\n+                  if (Ekind (Def_Id) = E_Record_Type\n+                       and then Depends_On_Discriminant (R))\n+                    or else\n+                     (Ekind (Def_Id) = E_Protected_Type\n+                       and then Has_Discriminants (Def_Id))\n+                  then\n+                     if Present (Check_List) then\n+                        Append_Range_Checks\n+                          (R_Checks,\n+                            Check_List, Def_Id, Sloc (Insert_Node));\n                      end if;\n \n-                  --  Case of statements. Drop the checks, as the range appears\n-                  --  in the context of a quantified expression. Insertion will\n-                  --  take place when expression is expanded.\n-\n                   else\n-                     null;\n+                     if No (Check_List) then\n+                        Insert_Range_Checks\n+                          (R_Checks,\n+                            Insert_Node, Def_Id, Sloc (Insert_Node));\n+                     end if;\n                   end if;\n+\n+               --  Case of statements. Drop the checks, as the range appears in\n+               --  the context of a quantified expression. Insertion will take\n+               --  place when expression is expanded.\n+\n+               else\n+                  null;\n                end if;\n             end if;\n          end if;"}, {"sha": "f3722a0e7d5bfb71b18c41f9ef22c634baa42f0a", "filename": "gcc/ada/sem_ch3.ads", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35338c60e4634e29d8704df6e7012fcdc7eb909c/gcc%2Fada%2Fsem_ch3.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35338c60e4634e29d8704df6e7012fcdc7eb909c/gcc%2Fada%2Fsem_ch3.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.ads?ref=35338c60e4634e29d8704df6e7012fcdc7eb909c", "patch": "@@ -257,11 +257,10 @@ package Sem_Ch3 is\n    --  Priv_T is the private view of the type whose full declaration is in N.\n \n    procedure Process_Range_Expr_In_Decl\n-     (R            : Node_Id;\n-      T            : Entity_Id;\n-      Subtyp       : Entity_Id := Empty;\n-      Check_List   : List_Id   := No_List;\n-      R_Check_Off  : Boolean   := False);\n+     (R          : Node_Id;\n+      T          : Entity_Id;\n+      Subtyp     : Entity_Id := Empty;\n+      Check_List : List_Id   := No_List);\n    --  Process a range expression that appears in a declaration context. The\n    --  range is analyzed and resolved with the base type of the given type, and\n    --  an appropriate check for expressions in non-static contexts made on the\n@@ -271,8 +270,7 @@ package Sem_Ch3 is\n    --  pointer of R so that the types get properly frozen. Check_List is used\n    --  when the subprogram is called from Build_Record_Init_Proc and is used to\n    --  return a set of constraint checking statements generated by the Checks\n-   --  package. R_Check_Off is set to True when the call to Range_Check is to\n-   --  be skipped.\n+   --  package.\n    --\n    --  If Subtyp is given, then the range is for the named subtype Subtyp, and\n    --  in this case the bounds are captured if necessary using this name."}, {"sha": "1fbe0377a66d30430607f0124db305d67f3f2c01", "filename": "gcc/ada/sem_elab.adb", "status": "modified", "additions": 21, "deletions": 56, "changes": 77, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35338c60e4634e29d8704df6e7012fcdc7eb909c/gcc%2Fada%2Fsem_elab.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35338c60e4634e29d8704df6e7012fcdc7eb909c/gcc%2Fada%2Fsem_elab.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_elab.adb?ref=35338c60e4634e29d8704df6e7012fcdc7eb909c", "patch": "@@ -1308,15 +1308,11 @@ package body Sem_Elab is\n       --  is set, then string \" in SPARK\" is added to the end of the message.\n \n       procedure Info_Variable_Reference\n-        (Ref      : Node_Id;\n-         Var_Id   : Entity_Id;\n-         Info_Msg : Boolean;\n-         In_SPARK : Boolean);\n+        (Ref    : Node_Id;\n+         Var_Id : Entity_Id);\n       pragma Inline (Info_Variable_Reference);\n       --  Output information concerning reference Ref which mentions variable\n-      --  Var_Id. If flag Info_Msg is set, the routine emits an information\n-      --  message, otherwise it emits an error. If flag In_SPARK is set, then\n-      --  string \" in SPARK\" is added to the end of the message.\n+      --  Var_Id. The routine emits an error suffixed with \" in SPARK\".\n \n    end Diagnostics;\n    use Diagnostics;\n@@ -3036,11 +3032,9 @@ package body Sem_Elab is\n       pragma Inline (Nested_Scenarios);\n       --  Obtain the list of scenarios associated with subprogram body N\n \n-      procedure Set_Is_Traversed_Body\n-        (N   : Node_Id;\n-         Val : Boolean := True);\n+      procedure Set_Is_Traversed_Body (N : Node_Id);\n       pragma Inline (Set_Is_Traversed_Body);\n-      --  Mark subprogram body N as traversed depending on value Val\n+      --  Mark subprogram body N as traversed\n \n       procedure Set_Nested_Scenarios\n         (N         : Node_Id;\n@@ -3105,18 +3099,11 @@ package body Sem_Elab is\n       -- Set_Is_Traversed_Body --\n       ---------------------------\n \n-      procedure Set_Is_Traversed_Body\n-        (N   : Node_Id;\n-         Val : Boolean := True)\n-      is\n+      procedure Set_Is_Traversed_Body (N : Node_Id) is\n          pragma Assert (Present (N));\n \n       begin\n-         if Val then\n-            NE_Set.Insert (Traversed_Bodies_Set, N);\n-         else\n-            NE_Set.Delete (Traversed_Bodies_Set, N);\n-         end if;\n+         NE_Set.Insert (Traversed_Bodies_Set, N);\n       end Set_Is_Traversed_Body;\n \n       --------------------------\n@@ -6697,19 +6684,17 @@ package body Sem_Elab is\n       -----------------------------\n \n       procedure Info_Variable_Reference\n-        (Ref      : Node_Id;\n-         Var_Id   : Entity_Id;\n-         Info_Msg : Boolean;\n-         In_SPARK : Boolean)\n+        (Ref    : Node_Id;\n+         Var_Id : Entity_Id)\n       is\n       begin\n          if Is_Read (Ref) then\n             Elab_Msg_NE\n               (Msg      => \"read of variable & during elaboration\",\n                N        => Ref,\n                Id       => Var_Id,\n-               Info_Msg => Info_Msg,\n-               In_SPARK => In_SPARK);\n+               Info_Msg => False,\n+               In_SPARK => True);\n          end if;\n       end Info_Variable_Reference;\n    end Diagnostics;\n@@ -8638,10 +8623,8 @@ package body Sem_Elab is\n \n             elsif Is_Suitable_Variable_Reference (N) then\n                Info_Variable_Reference\n-                 (Ref      => N,\n-                  Var_Id   => Targ_Id,\n-                  Info_Msg => False,\n-                  In_SPARK => True);\n+                 (Ref    => N,\n+                  Var_Id => Targ_Id);\n \n             --  No other scenario may impose a requirement on the context of\n             --  the main unit.\n@@ -11805,19 +11788,15 @@ package body Sem_Elab is\n       --  by creating an entry for it in the ALI file of the main unit. Formal\n       --  In_State denotes the current state of the Processing phase.\n \n-      procedure Set_Is_Saved_Construct\n-        (Constr : Entity_Id;\n-         Val    : Boolean := True);\n+      procedure Set_Is_Saved_Construct (Constr : Entity_Id);\n       pragma Inline (Set_Is_Saved_Construct);\n       --  Mark invocation construct Constr as declared in the ALI file of the\n-      --  main unit depending on value Val.\n+      --  main unit.\n \n-      procedure Set_Is_Saved_Relation\n-        (Rel : Invoker_Target_Relation;\n-         Val : Boolean := True);\n+      procedure Set_Is_Saved_Relation (Rel : Invoker_Target_Relation);\n       pragma Inline (Set_Is_Saved_Relation);\n       --  Mark simple invocation relation Rel as recorded in the ALI file of\n-      --  the main unit depending on value Val.\n+      --  the main unit.\n \n       function Target_Of\n         (Pos      : Active_Scenario_Pos;\n@@ -13307,34 +13286,20 @@ package body Sem_Elab is\n       -- Set_Is_Saved_Construct --\n       ----------------------------\n \n-      procedure Set_Is_Saved_Construct\n-        (Constr : Entity_Id;\n-         Val    : Boolean := True)\n-      is\n+      procedure Set_Is_Saved_Construct (Constr : Entity_Id) is\n          pragma Assert (Present (Constr));\n \n       begin\n-         if Val then\n-            NE_Set.Insert (Saved_Constructs_Set, Constr);\n-         else\n-            NE_Set.Delete (Saved_Constructs_Set, Constr);\n-         end if;\n+         NE_Set.Insert (Saved_Constructs_Set, Constr);\n       end Set_Is_Saved_Construct;\n \n       ---------------------------\n       -- Set_Is_Saved_Relation --\n       ---------------------------\n \n-      procedure Set_Is_Saved_Relation\n-        (Rel : Invoker_Target_Relation;\n-         Val : Boolean := True)\n-      is\n+      procedure Set_Is_Saved_Relation (Rel : Invoker_Target_Relation) is\n       begin\n-         if Val then\n-            IR_Set.Insert (Saved_Relations_Set, Rel);\n-         else\n-            IR_Set.Delete (Saved_Relations_Set, Rel);\n-         end if;\n+         IR_Set.Insert (Saved_Relations_Set, Rel);\n       end Set_Is_Saved_Relation;\n \n       ------------------"}, {"sha": "2e9d2c278087ddef32ed81737abf4865f2da3e7b", "filename": "gcc/ada/treepr.adb", "status": "modified", "additions": 10, "deletions": 24, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35338c60e4634e29d8704df6e7012fcdc7eb909c/gcc%2Fada%2Ftreepr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35338c60e4634e29d8704df6e7012fcdc7eb909c/gcc%2Fada%2Ftreepr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftreepr.adb?ref=35338c60e4634e29d8704df6e7012fcdc7eb909c", "patch": "@@ -1184,7 +1184,6 @@ package body Treepr is\n       Prefix : constant String := Prefix_Str & Prefix_Char;\n \n       Sfile : Source_File_Index;\n-      Fmt   : UI_Format;\n \n    begin\n       if Phase /= Printing then\n@@ -1400,12 +1399,6 @@ package body Treepr is\n          end if;\n       end if;\n \n-      if Nkind (N) = N_Integer_Literal and then Print_In_Hex (N) then\n-         Fmt := Hex;\n-      else\n-         Fmt := Auto;\n-      end if;\n-\n       declare\n          Fields : Node_Field_Array renames Node_Field_Table (Nkind (N)).all;\n          Should_Print : constant Node_Field_Set :=\n@@ -1440,6 +1433,12 @@ package body Treepr is\n               => False,\n \n             others => True);\n+\n+         Fmt : constant UI_Format :=\n+           (if Nkind (N) = N_Integer_Literal and then Print_In_Hex (N)\n+            then Hex\n+            else Auto);\n+\n       begin\n          --  Outer loop makes flags come out last\n \n@@ -2054,25 +2053,16 @@ package body Treepr is\n       New_Prefix : String (Prefix_Str'First .. Prefix_Str'Last + 2);\n       --  Prefix string for printing referenced fields\n \n-      procedure Visit_Descendant\n-        (D         : Union_Id;\n-         No_Indent : Boolean := False);\n+      procedure Visit_Descendant (D : Union_Id);\n       --  This procedure tests the given value of one of the Fields referenced\n       --  by the current node to determine whether to visit it recursively.\n-      --  Normally No_Indent is false, which means that the visited node will\n-      --  be indented using New_Prefix. If No_Indent is set to True, then\n-      --  this indentation is skipped, and Prefix_Str is used for the call\n-      --  to print the descendant. No_Indent is effective only if the\n-      --  referenced descendant is a node.\n+      --  The visited node will be indented using New_Prefix.\n \n       ----------------------\n       -- Visit_Descendant --\n       ----------------------\n \n-      procedure Visit_Descendant\n-        (D         : Union_Id;\n-         No_Indent : Boolean := False)\n-      is\n+      procedure Visit_Descendant (D : Union_Id) is\n       begin\n          --  Case of descendant is a node\n \n@@ -2145,11 +2135,7 @@ package body Treepr is\n                --  execute a return if the node is not to be visited), we can\n                --  go ahead and visit the node.\n \n-               if No_Indent then\n-                  Visit_Node (Nod, Prefix_Str, Prefix_Char);\n-               else\n-                  Visit_Node (Nod, New_Prefix, ' ');\n-               end if;\n+               Visit_Node (Nod, New_Prefix, ' ');\n             end;\n \n          --  Case of descendant is a list"}]}