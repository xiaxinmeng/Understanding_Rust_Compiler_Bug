{"sha": "da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGE5NmY1YWI0OWQ4ZTQ1YmRjYTBkMDhjNWVjYzQwOGRkYmMzZGU0Nw==", "commit": {"author": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2008-05-04T19:07:28Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2008-05-04T19:07:28Z"}, "message": "re PR fortran/35995 (ANY, ALL, and COUNT errors for zero sized sections)\n\n2008-05-04  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR libfortran/35995\n\t* m4/ifunction_logical.m4:  If the extent of \"array\"\n\tis less than zero, set it to zero.  Use an explicit\n\tflag for breaking out of the main loop to avoid, because\n\tthe data pointer for \"array\" may be NULL for an empty\n\tarray.\n\t* m4/ifunction.m4:  Likewise.\n\t* generated/all_l1.c: Regenerated.\n\t* generated/all_l16.c: Regenerated.\n\t* generated/all_l2.c: Regenerated.\n\t* generated/all_l4.c: Regenerated.\n\t* generated/all_l8.c: Regenerated.\n\t* generated/any_l1.c: Regenerated.\n\t* generated/any_l16.c: Regenerated.\n\t* generated/any_l2.c: Regenerated.\n\t* generated/any_l4.c: Regenerated.\n\t* generated/any_l8.c: Regenerated.\n\t* generated/count_16_l.c: Regenerated.\n\t* generated/count_1_l.c: Regenerated.\n\t* generated/count_2_l.c: Regenerated.\n\t* generated/count_4_l.c: Regenerated.\n\t* generated/count_8_l.c: Regenerated.\n\t* generated/maxloc1_16_i1.c: Regenerated.\n\t* generated/maxloc1_16_i16.c: Regenerated.\n\t* generated/maxloc1_16_i2.c: Regenerated.\n\t* generated/maxloc1_16_i4.c: Regenerated.\n\t* generated/maxloc1_16_i8.c: Regenerated.\n\t* generated/maxloc1_16_r10.c: Regenerated.\n\t* generated/maxloc1_16_r16.c: Regenerated.\n\t* generated/maxloc1_16_r4.c: Regenerated.\n\t* generated/maxloc1_16_r8.c: Regenerated.\n\t* generated/maxloc1_4_i1.c: Regenerated.\n\t* generated/maxloc1_4_i16.c: Regenerated.\n\t* generated/maxloc1_4_i2.c: Regenerated.\n\t* generated/maxloc1_4_i4.c: Regenerated.\n\t* generated/maxloc1_4_i8.c: Regenerated.\n\t* generated/maxloc1_4_r10.c: Regenerated.\n\t* generated/maxloc1_4_r16.c: Regenerated.\n\t* generated/maxloc1_4_r4.c: Regenerated.\n\t* generated/maxloc1_4_r8.c: Regenerated.\n\t* generated/maxloc1_8_i1.c: Regenerated.\n\t* generated/maxloc1_8_i16.c: Regenerated.\n\t* generated/maxloc1_8_i2.c: Regenerated.\n\t* generated/maxloc1_8_i4.c: Regenerated.\n\t* generated/maxloc1_8_i8.c: Regenerated.\n\t* generated/maxloc1_8_r10.c: Regenerated.\n\t* generated/maxloc1_8_r16.c: Regenerated.\n\t* generated/maxloc1_8_r4.c: Regenerated.\n\t* generated/maxloc1_8_r8.c: Regenerated.\n\t* generated/maxval_i1.c: Regenerated.\n\t* generated/maxval_i16.c: Regenerated.\n\t* generated/maxval_i2.c: Regenerated.\n\t* generated/maxval_i4.c: Regenerated.\n\t* generated/maxval_i8.c: Regenerated.\n\t* generated/maxval_r10.c: Regenerated.\n\t* generated/maxval_r16.c: Regenerated.\n\t* generated/maxval_r4.c: Regenerated.\n\t* generated/maxval_r8.c: Regenerated.\n\t* generated/minloc1_16_i1.c: Regenerated.\n\t* generated/minloc1_16_i16.c: Regenerated.\n\t* generated/minloc1_16_i2.c: Regenerated.\n\t* generated/minloc1_16_i4.c: Regenerated.\n\t* generated/minloc1_16_i8.c: Regenerated.\n\t* generated/minloc1_16_r10.c: Regenerated.\n\t* generated/minloc1_16_r16.c: Regenerated.\n\t* generated/minloc1_16_r4.c: Regenerated.\n\t* generated/minloc1_16_r8.c: Regenerated.\n\t* generated/minloc1_4_i1.c: Regenerated.\n\t* generated/minloc1_4_i16.c: Regenerated.\n\t* generated/minloc1_4_i2.c: Regenerated.\n\t* generated/minloc1_4_i4.c: Regenerated.\n\t* generated/minloc1_4_i8.c: Regenerated.\n\t* generated/minloc1_4_r10.c: Regenerated.\n\t* generated/minloc1_4_r16.c: Regenerated.\n\t* generated/minloc1_4_r4.c: Regenerated.\n\t* generated/minloc1_4_r8.c: Regenerated.\n\t* generated/minloc1_8_i1.c: Regenerated.\n\t* generated/minloc1_8_i16.c: Regenerated.\n\t* generated/minloc1_8_i2.c: Regenerated.\n\t* generated/minloc1_8_i4.c: Regenerated.\n\t* generated/minloc1_8_i8.c: Regenerated.\n\t* generated/minloc1_8_r10.c: Regenerated.\n\t* generated/minloc1_8_r16.c: Regenerated.\n\t* generated/minloc1_8_r4.c: Regenerated.\n\t* generated/minloc1_8_r8.c: Regenerated.\n\t* generated/minval_i1.c: Regenerated.\n\t* generated/minval_i16.c: Regenerated.\n\t* generated/minval_i2.c: Regenerated.\n\t* generated/minval_i4.c: Regenerated.\n\t* generated/minval_i8.c: Regenerated.\n\t* generated/minval_r10.c: Regenerated.\n\t* generated/minval_r16.c: Regenerated.\n\t* generated/minval_r4.c: Regenerated.\n\t* generated/minval_r8.c: Regenerated.\n\t* generated/product_c10.c: Regenerated.\n\t* generated/product_c16.c: Regenerated.\n\t* generated/product_c4.c: Regenerated.\n\t* generated/product_c8.c: Regenerated.\n\t* generated/product_i1.c: Regenerated.\n\t* generated/product_i16.c: Regenerated.\n\t* generated/product_i2.c: Regenerated.\n\t* generated/product_i4.c: Regenerated.\n\t* generated/product_i8.c: Regenerated.\n\t* generated/product_r10.c: Regenerated.\n\t* generated/product_r16.c: Regenerated.\n\t* generated/product_r4.c: Regenerated.\n\t* generated/product_r8.c: Regenerated.\n\t* generated/sum_c10.c: Regenerated.\n\t* generated/sum_c16.c: Regenerated.\n\t* generated/sum_c4.c: Regenerated.\n\t* generated/sum_c8.c: Regenerated.\n\t* generated/sum_i1.c: Regenerated.\n\t* generated/sum_i16.c: Regenerated.\n\t* generated/sum_i2.c: Regenerated.\n\t* generated/sum_i4.c: Regenerated.\n\t* generated/sum_i8.c: Regenerated.\n\t* generated/sum_r10.c: Regenerated.\n\t* generated/sum_r16.c: Regenerated.\n\t* generated/sum_r4.c: Regenerated.\n\t* generated/sum_r8.c: Regenerated.\n\n2008-05-04  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR libfortran/35995\n\t* gfortran.dg/intrinsic_ifunction_1.f90:  New test case.\n\nFrom-SVN: r134934", "tree": {"sha": "b2ffeecf45cdd998f85c6ea3842a5747af150b22", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b2ffeecf45cdd998f85c6ea3842a5747af150b22"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/comments", "author": null, "committer": null, "parents": [{"sha": "62d2739afd9e0b8cea92edae521222930b67743d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62d2739afd9e0b8cea92edae521222930b67743d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62d2739afd9e0b8cea92edae521222930b67743d"}], "stats": {"total": 1305, "additions": 976, "deletions": 329}, "files": [{"sha": "11fb08ced85f2666ae3fdc0290f2d38ab7d1a808", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -1,3 +1,8 @@\n+2008-05-04  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR libfortran/35995\n+\t* gfortran.dg/intrinsic_ifunction_1.f90:  New test case.\n+\n 2008-05-04   Andy Hutchinson   <hutchinsonandy@aim.com>\n \n \t* gcc.dg/nested-func-5.c: Skip for target without trampolines."}, {"sha": "a27c220ee4601bc96b8723679f6a419b208c035d", "filename": "gcc/testsuite/gfortran.dg/intrinsic_ifunction_1.f90", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/gcc%2Ftestsuite%2Fgfortran.dg%2Fintrinsic_ifunction_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/gcc%2Ftestsuite%2Fgfortran.dg%2Fintrinsic_ifunction_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fintrinsic_ifunction_1.f90?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -0,0 +1,43 @@\n+! { dg-do run }\n+! PR 35995 - ifunction.m4 and ifunction_logical.m4 had a bug\n+! where zero-sized arguments were not handled correctly.\n+! Test case provided by Dick Hendrickson, amended by\n+! Thomas Koenig.\n+\n+      program try_gf0026_etc\n+\n+      call       gf0026(  0,  1)\n+      call       foo   (  0,  1)\n+\n+      end program\n+\n+      SUBROUTINE GF0026(nf0,nf1)\n+      LOGICAL LDA(9)\n+      INTEGER IDA(NF0,9), iii(9)\n+\n+      lda = (/ (i/2*2 .eq. I, i=1,9) /)\n+      LDA = ALL ( IDA .NE. -1000,  1)\n+      if (.not. all(lda)) call abort\n+      if (.not. all(ida .ne. -1000)) call abort\n+\n+      lda = (/ (i/2*2 .eq. I, i=1,9) /)\n+      LDA = any ( IDA .NE. -1000,  1)\n+      print *, lda          !expect FALSE\n+      if (any(lda)) call abort\n+      print *, any(ida .ne. -1000)   !expect FALSE\n+      if (any(ida .ne. -1000)) call abort\n+\n+      iii = 137\n+      iii = count ( IDA .NE. -1000,  1)\n+      if (any(iii /= 0)) call abort\n+      if (count(ida .ne. -1000) /= 0) call abort\n+\n+      END SUBROUTINE\n+\n+      subroutine foo (nf0, nf1)\n+      integer, dimension(9):: res, iii\n+      integer, dimension(nf0,9) :: ida\n+      res = (/ (-i, i=1,9) /)\n+      res = product (ida, 1)\n+      if (any(res /= 1)) call abort\n+      end subroutine foo"}, {"sha": "9da45d503c5f86af5fa9f9dd4b6271103d456d06", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 123, "deletions": 0, "changes": 123, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -1,3 +1,126 @@\n+2008-05-04  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR libfortran/35995\n+\t* m4/ifunction_logical.m4:  If the extent of \"array\"\n+\tis less than zero, set it to zero.  Use an explicit\n+\tflag for breaking out of the main loop to avoid, because\n+\tthe data pointer for \"array\" may be NULL for an empty\n+\tarray.\n+\t* m4/ifunction.m4:  Likewise.\n+\t* generated/all_l1.c: Regenerated.\n+\t* generated/all_l16.c: Regenerated.\n+\t* generated/all_l2.c: Regenerated.\n+\t* generated/all_l4.c: Regenerated.\n+\t* generated/all_l8.c: Regenerated.\n+\t* generated/any_l1.c: Regenerated.\n+\t* generated/any_l16.c: Regenerated.\n+\t* generated/any_l2.c: Regenerated.\n+\t* generated/any_l4.c: Regenerated.\n+\t* generated/any_l8.c: Regenerated.\n+\t* generated/count_16_l.c: Regenerated.\n+\t* generated/count_1_l.c: Regenerated.\n+\t* generated/count_2_l.c: Regenerated.\n+\t* generated/count_4_l.c: Regenerated.\n+\t* generated/count_8_l.c: Regenerated.\n+\t* generated/maxloc1_16_i1.c: Regenerated.\n+\t* generated/maxloc1_16_i16.c: Regenerated.\n+\t* generated/maxloc1_16_i2.c: Regenerated.\n+\t* generated/maxloc1_16_i4.c: Regenerated.\n+\t* generated/maxloc1_16_i8.c: Regenerated.\n+\t* generated/maxloc1_16_r10.c: Regenerated.\n+\t* generated/maxloc1_16_r16.c: Regenerated.\n+\t* generated/maxloc1_16_r4.c: Regenerated.\n+\t* generated/maxloc1_16_r8.c: Regenerated.\n+\t* generated/maxloc1_4_i1.c: Regenerated.\n+\t* generated/maxloc1_4_i16.c: Regenerated.\n+\t* generated/maxloc1_4_i2.c: Regenerated.\n+\t* generated/maxloc1_4_i4.c: Regenerated.\n+\t* generated/maxloc1_4_i8.c: Regenerated.\n+\t* generated/maxloc1_4_r10.c: Regenerated.\n+\t* generated/maxloc1_4_r16.c: Regenerated.\n+\t* generated/maxloc1_4_r4.c: Regenerated.\n+\t* generated/maxloc1_4_r8.c: Regenerated.\n+\t* generated/maxloc1_8_i1.c: Regenerated.\n+\t* generated/maxloc1_8_i16.c: Regenerated.\n+\t* generated/maxloc1_8_i2.c: Regenerated.\n+\t* generated/maxloc1_8_i4.c: Regenerated.\n+\t* generated/maxloc1_8_i8.c: Regenerated.\n+\t* generated/maxloc1_8_r10.c: Regenerated.\n+\t* generated/maxloc1_8_r16.c: Regenerated.\n+\t* generated/maxloc1_8_r4.c: Regenerated.\n+\t* generated/maxloc1_8_r8.c: Regenerated.\n+\t* generated/maxval_i1.c: Regenerated.\n+\t* generated/maxval_i16.c: Regenerated.\n+\t* generated/maxval_i2.c: Regenerated.\n+\t* generated/maxval_i4.c: Regenerated.\n+\t* generated/maxval_i8.c: Regenerated.\n+\t* generated/maxval_r10.c: Regenerated.\n+\t* generated/maxval_r16.c: Regenerated.\n+\t* generated/maxval_r4.c: Regenerated.\n+\t* generated/maxval_r8.c: Regenerated.\n+\t* generated/minloc1_16_i1.c: Regenerated.\n+\t* generated/minloc1_16_i16.c: Regenerated.\n+\t* generated/minloc1_16_i2.c: Regenerated.\n+\t* generated/minloc1_16_i4.c: Regenerated.\n+\t* generated/minloc1_16_i8.c: Regenerated.\n+\t* generated/minloc1_16_r10.c: Regenerated.\n+\t* generated/minloc1_16_r16.c: Regenerated.\n+\t* generated/minloc1_16_r4.c: Regenerated.\n+\t* generated/minloc1_16_r8.c: Regenerated.\n+\t* generated/minloc1_4_i1.c: Regenerated.\n+\t* generated/minloc1_4_i16.c: Regenerated.\n+\t* generated/minloc1_4_i2.c: Regenerated.\n+\t* generated/minloc1_4_i4.c: Regenerated.\n+\t* generated/minloc1_4_i8.c: Regenerated.\n+\t* generated/minloc1_4_r10.c: Regenerated.\n+\t* generated/minloc1_4_r16.c: Regenerated.\n+\t* generated/minloc1_4_r4.c: Regenerated.\n+\t* generated/minloc1_4_r8.c: Regenerated.\n+\t* generated/minloc1_8_i1.c: Regenerated.\n+\t* generated/minloc1_8_i16.c: Regenerated.\n+\t* generated/minloc1_8_i2.c: Regenerated.\n+\t* generated/minloc1_8_i4.c: Regenerated.\n+\t* generated/minloc1_8_i8.c: Regenerated.\n+\t* generated/minloc1_8_r10.c: Regenerated.\n+\t* generated/minloc1_8_r16.c: Regenerated.\n+\t* generated/minloc1_8_r4.c: Regenerated.\n+\t* generated/minloc1_8_r8.c: Regenerated.\n+\t* generated/minval_i1.c: Regenerated.\n+\t* generated/minval_i16.c: Regenerated.\n+\t* generated/minval_i2.c: Regenerated.\n+\t* generated/minval_i4.c: Regenerated.\n+\t* generated/minval_i8.c: Regenerated.\n+\t* generated/minval_r10.c: Regenerated.\n+\t* generated/minval_r16.c: Regenerated.\n+\t* generated/minval_r4.c: Regenerated.\n+\t* generated/minval_r8.c: Regenerated.\n+\t* generated/product_c10.c: Regenerated.\n+\t* generated/product_c16.c: Regenerated.\n+\t* generated/product_c4.c: Regenerated.\n+\t* generated/product_c8.c: Regenerated.\n+\t* generated/product_i1.c: Regenerated.\n+\t* generated/product_i16.c: Regenerated.\n+\t* generated/product_i2.c: Regenerated.\n+\t* generated/product_i4.c: Regenerated.\n+\t* generated/product_i8.c: Regenerated.\n+\t* generated/product_r10.c: Regenerated.\n+\t* generated/product_r16.c: Regenerated.\n+\t* generated/product_r4.c: Regenerated.\n+\t* generated/product_r8.c: Regenerated.\n+\t* generated/sum_c10.c: Regenerated.\n+\t* generated/sum_c16.c: Regenerated.\n+\t* generated/sum_c4.c: Regenerated.\n+\t* generated/sum_c8.c: Regenerated.\n+\t* generated/sum_i1.c: Regenerated.\n+\t* generated/sum_i16.c: Regenerated.\n+\t* generated/sum_i2.c: Regenerated.\n+\t* generated/sum_i4.c: Regenerated.\n+\t* generated/sum_i8.c: Regenerated.\n+\t* generated/sum_r10.c: Regenerated.\n+\t* generated/sum_r16.c: Regenerated.\n+\t* generated/sum_r4.c: Regenerated.\n+\t* generated/sum_r8.c: Regenerated.\n+\n 2008-05-04  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR libfortran/35990"}, {"sha": "8345adc1f6e65ad931fa7db28be8defdd4d63382", "filename": "libgfortran/generated/all_l1.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fall_l1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fall_l1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fall_l1.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -57,6 +57,7 @@ all_l1 (gfc_array_l1 * const restrict retarray,\n   index_type delta;\n   index_type dim;\n   int src_kind;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n@@ -65,6 +66,9 @@ all_l1 (gfc_array_l1 * const restrict retarray,\n   src_kind = GFC_DESCRIPTOR_SIZE (array);\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n+\n   delta = array->dim[dim].stride * src_kind;\n \n   for (n = 0; n < dim; n++)\n@@ -164,7 +168,8 @@ all_l1 (gfc_array_l1 * const restrict retarray,\n \n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_LOGICAL_1 * restrict src;\n       GFC_LOGICAL_1 result;\n@@ -207,7 +212,7 @@ all_l1 (gfc_array_l1 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n+              continue_loop = 0;\n               break;\n             }\n           else"}, {"sha": "ee6f8f93c9fbd565d236687ad9cf16e44b9dce58", "filename": "libgfortran/generated/all_l16.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fall_l16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fall_l16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fall_l16.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -57,6 +57,7 @@ all_l16 (gfc_array_l16 * const restrict retarray,\n   index_type delta;\n   index_type dim;\n   int src_kind;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n@@ -65,6 +66,9 @@ all_l16 (gfc_array_l16 * const restrict retarray,\n   src_kind = GFC_DESCRIPTOR_SIZE (array);\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n+\n   delta = array->dim[dim].stride * src_kind;\n \n   for (n = 0; n < dim; n++)\n@@ -164,7 +168,8 @@ all_l16 (gfc_array_l16 * const restrict retarray,\n \n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_LOGICAL_1 * restrict src;\n       GFC_LOGICAL_16 result;\n@@ -207,7 +212,7 @@ all_l16 (gfc_array_l16 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n+              continue_loop = 0;\n               break;\n             }\n           else"}, {"sha": "dd069c57d61251b041dd67c7d034be6f23981af1", "filename": "libgfortran/generated/all_l2.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fall_l2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fall_l2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fall_l2.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -57,6 +57,7 @@ all_l2 (gfc_array_l2 * const restrict retarray,\n   index_type delta;\n   index_type dim;\n   int src_kind;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n@@ -65,6 +66,9 @@ all_l2 (gfc_array_l2 * const restrict retarray,\n   src_kind = GFC_DESCRIPTOR_SIZE (array);\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n+\n   delta = array->dim[dim].stride * src_kind;\n \n   for (n = 0; n < dim; n++)\n@@ -164,7 +168,8 @@ all_l2 (gfc_array_l2 * const restrict retarray,\n \n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_LOGICAL_1 * restrict src;\n       GFC_LOGICAL_2 result;\n@@ -207,7 +212,7 @@ all_l2 (gfc_array_l2 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n+              continue_loop = 0;\n               break;\n             }\n           else"}, {"sha": "00a0896f669fd9759841a2b8e1ec314c5dd69048", "filename": "libgfortran/generated/all_l4.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fall_l4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fall_l4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fall_l4.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -57,6 +57,7 @@ all_l4 (gfc_array_l4 * const restrict retarray,\n   index_type delta;\n   index_type dim;\n   int src_kind;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n@@ -65,6 +66,9 @@ all_l4 (gfc_array_l4 * const restrict retarray,\n   src_kind = GFC_DESCRIPTOR_SIZE (array);\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n+\n   delta = array->dim[dim].stride * src_kind;\n \n   for (n = 0; n < dim; n++)\n@@ -164,7 +168,8 @@ all_l4 (gfc_array_l4 * const restrict retarray,\n \n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_LOGICAL_1 * restrict src;\n       GFC_LOGICAL_4 result;\n@@ -207,7 +212,7 @@ all_l4 (gfc_array_l4 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n+              continue_loop = 0;\n               break;\n             }\n           else"}, {"sha": "b08c19cdba57a3b1eb9fe88eaf9940653c28f412", "filename": "libgfortran/generated/all_l8.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fall_l8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fall_l8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fall_l8.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -57,6 +57,7 @@ all_l8 (gfc_array_l8 * const restrict retarray,\n   index_type delta;\n   index_type dim;\n   int src_kind;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n@@ -65,6 +66,9 @@ all_l8 (gfc_array_l8 * const restrict retarray,\n   src_kind = GFC_DESCRIPTOR_SIZE (array);\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n+\n   delta = array->dim[dim].stride * src_kind;\n \n   for (n = 0; n < dim; n++)\n@@ -164,7 +168,8 @@ all_l8 (gfc_array_l8 * const restrict retarray,\n \n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_LOGICAL_1 * restrict src;\n       GFC_LOGICAL_8 result;\n@@ -207,7 +212,7 @@ all_l8 (gfc_array_l8 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n+              continue_loop = 0;\n               break;\n             }\n           else"}, {"sha": "2d11eb1a3b403c45c1f9c6882343ac7e05735662", "filename": "libgfortran/generated/any_l1.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fany_l1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fany_l1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fany_l1.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -57,6 +57,7 @@ any_l1 (gfc_array_l1 * const restrict retarray,\n   index_type delta;\n   index_type dim;\n   int src_kind;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n@@ -65,6 +66,9 @@ any_l1 (gfc_array_l1 * const restrict retarray,\n   src_kind = GFC_DESCRIPTOR_SIZE (array);\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n+\n   delta = array->dim[dim].stride * src_kind;\n \n   for (n = 0; n < dim; n++)\n@@ -164,7 +168,8 @@ any_l1 (gfc_array_l1 * const restrict retarray,\n \n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_LOGICAL_1 * restrict src;\n       GFC_LOGICAL_1 result;\n@@ -207,7 +212,7 @@ any_l1 (gfc_array_l1 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n+              continue_loop = 0;\n               break;\n             }\n           else"}, {"sha": "3d7cd1b1ef9c8d5a4d2520d3b3d0c66b0b35c0d9", "filename": "libgfortran/generated/any_l16.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fany_l16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fany_l16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fany_l16.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -57,6 +57,7 @@ any_l16 (gfc_array_l16 * const restrict retarray,\n   index_type delta;\n   index_type dim;\n   int src_kind;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n@@ -65,6 +66,9 @@ any_l16 (gfc_array_l16 * const restrict retarray,\n   src_kind = GFC_DESCRIPTOR_SIZE (array);\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n+\n   delta = array->dim[dim].stride * src_kind;\n \n   for (n = 0; n < dim; n++)\n@@ -164,7 +168,8 @@ any_l16 (gfc_array_l16 * const restrict retarray,\n \n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_LOGICAL_1 * restrict src;\n       GFC_LOGICAL_16 result;\n@@ -207,7 +212,7 @@ any_l16 (gfc_array_l16 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n+              continue_loop = 0;\n               break;\n             }\n           else"}, {"sha": "1c874182b3e2e8c49b9609758846c9b7af1d4602", "filename": "libgfortran/generated/any_l2.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fany_l2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fany_l2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fany_l2.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -57,6 +57,7 @@ any_l2 (gfc_array_l2 * const restrict retarray,\n   index_type delta;\n   index_type dim;\n   int src_kind;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n@@ -65,6 +66,9 @@ any_l2 (gfc_array_l2 * const restrict retarray,\n   src_kind = GFC_DESCRIPTOR_SIZE (array);\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n+\n   delta = array->dim[dim].stride * src_kind;\n \n   for (n = 0; n < dim; n++)\n@@ -164,7 +168,8 @@ any_l2 (gfc_array_l2 * const restrict retarray,\n \n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_LOGICAL_1 * restrict src;\n       GFC_LOGICAL_2 result;\n@@ -207,7 +212,7 @@ any_l2 (gfc_array_l2 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n+              continue_loop = 0;\n               break;\n             }\n           else"}, {"sha": "71a8cb0e63fb080d8009bec4b51c6ac571205a07", "filename": "libgfortran/generated/any_l4.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fany_l4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fany_l4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fany_l4.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -57,6 +57,7 @@ any_l4 (gfc_array_l4 * const restrict retarray,\n   index_type delta;\n   index_type dim;\n   int src_kind;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n@@ -65,6 +66,9 @@ any_l4 (gfc_array_l4 * const restrict retarray,\n   src_kind = GFC_DESCRIPTOR_SIZE (array);\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n+\n   delta = array->dim[dim].stride * src_kind;\n \n   for (n = 0; n < dim; n++)\n@@ -164,7 +168,8 @@ any_l4 (gfc_array_l4 * const restrict retarray,\n \n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_LOGICAL_1 * restrict src;\n       GFC_LOGICAL_4 result;\n@@ -207,7 +212,7 @@ any_l4 (gfc_array_l4 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n+              continue_loop = 0;\n               break;\n             }\n           else"}, {"sha": "55ff7a601b0d193f834a9c0c73dba570cf8e3279", "filename": "libgfortran/generated/any_l8.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fany_l8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fany_l8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fany_l8.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -57,6 +57,7 @@ any_l8 (gfc_array_l8 * const restrict retarray,\n   index_type delta;\n   index_type dim;\n   int src_kind;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n@@ -65,6 +66,9 @@ any_l8 (gfc_array_l8 * const restrict retarray,\n   src_kind = GFC_DESCRIPTOR_SIZE (array);\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n+\n   delta = array->dim[dim].stride * src_kind;\n \n   for (n = 0; n < dim; n++)\n@@ -164,7 +168,8 @@ any_l8 (gfc_array_l8 * const restrict retarray,\n \n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_LOGICAL_1 * restrict src;\n       GFC_LOGICAL_8 result;\n@@ -207,7 +212,7 @@ any_l8 (gfc_array_l8 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n+              continue_loop = 0;\n               break;\n             }\n           else"}, {"sha": "638fb179e2517d4efcf9f8cc64293791b2868032", "filename": "libgfortran/generated/count_16_l.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fcount_16_l.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fcount_16_l.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fcount_16_l.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -57,6 +57,7 @@ count_16_l (gfc_array_i16 * const restrict retarray,\n   index_type delta;\n   index_type dim;\n   int src_kind;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n@@ -65,6 +66,9 @@ count_16_l (gfc_array_i16 * const restrict retarray,\n   src_kind = GFC_DESCRIPTOR_SIZE (array);\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n+\n   delta = array->dim[dim].stride * src_kind;\n \n   for (n = 0; n < dim; n++)\n@@ -164,7 +168,8 @@ count_16_l (gfc_array_i16 * const restrict retarray,\n \n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_LOGICAL_1 * restrict src;\n       GFC_INTEGER_16 result;\n@@ -203,7 +208,7 @@ count_16_l (gfc_array_i16 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n+              continue_loop = 0;\n               break;\n             }\n           else"}, {"sha": "52ae34baa5f39c430932ce7b1797365ca1736c86", "filename": "libgfortran/generated/count_1_l.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fcount_1_l.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fcount_1_l.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fcount_1_l.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -57,6 +57,7 @@ count_1_l (gfc_array_i1 * const restrict retarray,\n   index_type delta;\n   index_type dim;\n   int src_kind;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n@@ -65,6 +66,9 @@ count_1_l (gfc_array_i1 * const restrict retarray,\n   src_kind = GFC_DESCRIPTOR_SIZE (array);\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n+\n   delta = array->dim[dim].stride * src_kind;\n \n   for (n = 0; n < dim; n++)\n@@ -164,7 +168,8 @@ count_1_l (gfc_array_i1 * const restrict retarray,\n \n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_LOGICAL_1 * restrict src;\n       GFC_INTEGER_1 result;\n@@ -203,7 +208,7 @@ count_1_l (gfc_array_i1 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n+              continue_loop = 0;\n               break;\n             }\n           else"}, {"sha": "ddede7160f587d2d35b58d2b6faecbbf0ea93c02", "filename": "libgfortran/generated/count_2_l.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fcount_2_l.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fcount_2_l.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fcount_2_l.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -57,6 +57,7 @@ count_2_l (gfc_array_i2 * const restrict retarray,\n   index_type delta;\n   index_type dim;\n   int src_kind;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n@@ -65,6 +66,9 @@ count_2_l (gfc_array_i2 * const restrict retarray,\n   src_kind = GFC_DESCRIPTOR_SIZE (array);\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n+\n   delta = array->dim[dim].stride * src_kind;\n \n   for (n = 0; n < dim; n++)\n@@ -164,7 +168,8 @@ count_2_l (gfc_array_i2 * const restrict retarray,\n \n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_LOGICAL_1 * restrict src;\n       GFC_INTEGER_2 result;\n@@ -203,7 +208,7 @@ count_2_l (gfc_array_i2 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n+              continue_loop = 0;\n               break;\n             }\n           else"}, {"sha": "6bdc9ca18bf2273f3da8774a31212c665d1726d0", "filename": "libgfortran/generated/count_4_l.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fcount_4_l.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fcount_4_l.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fcount_4_l.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -57,6 +57,7 @@ count_4_l (gfc_array_i4 * const restrict retarray,\n   index_type delta;\n   index_type dim;\n   int src_kind;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n@@ -65,6 +66,9 @@ count_4_l (gfc_array_i4 * const restrict retarray,\n   src_kind = GFC_DESCRIPTOR_SIZE (array);\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n+\n   delta = array->dim[dim].stride * src_kind;\n \n   for (n = 0; n < dim; n++)\n@@ -164,7 +168,8 @@ count_4_l (gfc_array_i4 * const restrict retarray,\n \n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_LOGICAL_1 * restrict src;\n       GFC_INTEGER_4 result;\n@@ -203,7 +208,7 @@ count_4_l (gfc_array_i4 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n+              continue_loop = 0;\n               break;\n             }\n           else"}, {"sha": "3c1c565361089ba55a97a7a9c19f09f240e7ee9a", "filename": "libgfortran/generated/count_8_l.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fcount_8_l.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fcount_8_l.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fcount_8_l.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -57,6 +57,7 @@ count_8_l (gfc_array_i8 * const restrict retarray,\n   index_type delta;\n   index_type dim;\n   int src_kind;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n@@ -65,6 +66,9 @@ count_8_l (gfc_array_i8 * const restrict retarray,\n   src_kind = GFC_DESCRIPTOR_SIZE (array);\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n+\n   delta = array->dim[dim].stride * src_kind;\n \n   for (n = 0; n < dim; n++)\n@@ -164,7 +168,8 @@ count_8_l (gfc_array_i8 * const restrict retarray,\n \n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_LOGICAL_1 * restrict src;\n       GFC_INTEGER_8 result;\n@@ -203,7 +208,7 @@ count_8_l (gfc_array_i8 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n+              continue_loop = 0;\n               break;\n             }\n           else"}, {"sha": "7cccedae55b76d14bf7823e3e613195307a3dcdc", "filename": "libgfortran/generated/maxloc1_16_i1.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fmaxloc1_16_i1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fmaxloc1_16_i1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_16_i1.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -57,12 +57,15 @@ maxloc1_16_i1 (gfc_array_i16 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -149,7 +152,8 @@ maxloc1_16_i1 (gfc_array_i16 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_INTEGER_1 * restrict src;\n       GFC_INTEGER_16 result;\n@@ -193,8 +197,8 @@ maxloc1_16_i1 (gfc_array_i16 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "d7126afbcce0e9da2133a23a5d28dcd29081f070", "filename": "libgfortran/generated/maxloc1_16_i16.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fmaxloc1_16_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fmaxloc1_16_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_16_i16.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -57,12 +57,15 @@ maxloc1_16_i16 (gfc_array_i16 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -149,7 +152,8 @@ maxloc1_16_i16 (gfc_array_i16 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_INTEGER_16 * restrict src;\n       GFC_INTEGER_16 result;\n@@ -193,8 +197,8 @@ maxloc1_16_i16 (gfc_array_i16 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "278ef5b5eb930ce398613c2ca575eee20634016d", "filename": "libgfortran/generated/maxloc1_16_i2.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fmaxloc1_16_i2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fmaxloc1_16_i2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_16_i2.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -57,12 +57,15 @@ maxloc1_16_i2 (gfc_array_i16 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -149,7 +152,8 @@ maxloc1_16_i2 (gfc_array_i16 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_INTEGER_2 * restrict src;\n       GFC_INTEGER_16 result;\n@@ -193,8 +197,8 @@ maxloc1_16_i2 (gfc_array_i16 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "4e2e73114d3edcdcc846d4a649abf909a72ca5ae", "filename": "libgfortran/generated/maxloc1_16_i4.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fmaxloc1_16_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fmaxloc1_16_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_16_i4.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -57,12 +57,15 @@ maxloc1_16_i4 (gfc_array_i16 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -149,7 +152,8 @@ maxloc1_16_i4 (gfc_array_i16 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_INTEGER_4 * restrict src;\n       GFC_INTEGER_16 result;\n@@ -193,8 +197,8 @@ maxloc1_16_i4 (gfc_array_i16 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "1a9eb519adbd1ff4bf3ee082bdf2fd06d504a380", "filename": "libgfortran/generated/maxloc1_16_i8.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fmaxloc1_16_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fmaxloc1_16_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_16_i8.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -57,12 +57,15 @@ maxloc1_16_i8 (gfc_array_i16 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -149,7 +152,8 @@ maxloc1_16_i8 (gfc_array_i16 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_INTEGER_8 * restrict src;\n       GFC_INTEGER_16 result;\n@@ -193,8 +197,8 @@ maxloc1_16_i8 (gfc_array_i16 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "79805f5519b1efef09f3e936622bf1dad601a70c", "filename": "libgfortran/generated/maxloc1_16_r10.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fmaxloc1_16_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fmaxloc1_16_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_16_r10.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -57,12 +57,15 @@ maxloc1_16_r10 (gfc_array_i16 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -149,7 +152,8 @@ maxloc1_16_r10 (gfc_array_i16 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_REAL_10 * restrict src;\n       GFC_INTEGER_16 result;\n@@ -193,8 +197,8 @@ maxloc1_16_r10 (gfc_array_i16 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "49b27c3422743ce766558ca20133e4e1942aa87e", "filename": "libgfortran/generated/maxloc1_16_r16.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fmaxloc1_16_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fmaxloc1_16_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_16_r16.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -57,12 +57,15 @@ maxloc1_16_r16 (gfc_array_i16 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -149,7 +152,8 @@ maxloc1_16_r16 (gfc_array_i16 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_REAL_16 * restrict src;\n       GFC_INTEGER_16 result;\n@@ -193,8 +197,8 @@ maxloc1_16_r16 (gfc_array_i16 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "cb4cc17f78c576e8502ec07d19da5e9cd51ea0d2", "filename": "libgfortran/generated/maxloc1_16_r4.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fmaxloc1_16_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fmaxloc1_16_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_16_r4.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -57,12 +57,15 @@ maxloc1_16_r4 (gfc_array_i16 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -149,7 +152,8 @@ maxloc1_16_r4 (gfc_array_i16 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_REAL_4 * restrict src;\n       GFC_INTEGER_16 result;\n@@ -193,8 +197,8 @@ maxloc1_16_r4 (gfc_array_i16 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "bddedbe63fa93dc15a6b238c17c81311e0886911", "filename": "libgfortran/generated/maxloc1_16_r8.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fmaxloc1_16_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fmaxloc1_16_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_16_r8.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -57,12 +57,15 @@ maxloc1_16_r8 (gfc_array_i16 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -149,7 +152,8 @@ maxloc1_16_r8 (gfc_array_i16 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_REAL_8 * restrict src;\n       GFC_INTEGER_16 result;\n@@ -193,8 +197,8 @@ maxloc1_16_r8 (gfc_array_i16 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "3a1ae07de92ced90ed69cc375147469dd69f2115", "filename": "libgfortran/generated/maxloc1_4_i1.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fmaxloc1_4_i1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fmaxloc1_4_i1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_4_i1.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -57,12 +57,15 @@ maxloc1_4_i1 (gfc_array_i4 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -149,7 +152,8 @@ maxloc1_4_i1 (gfc_array_i4 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_INTEGER_1 * restrict src;\n       GFC_INTEGER_4 result;\n@@ -193,8 +197,8 @@ maxloc1_4_i1 (gfc_array_i4 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "d9e1b3e527fad51f03b9105502437d6f9d10df38", "filename": "libgfortran/generated/maxloc1_4_i16.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fmaxloc1_4_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fmaxloc1_4_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_4_i16.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -57,12 +57,15 @@ maxloc1_4_i16 (gfc_array_i4 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -149,7 +152,8 @@ maxloc1_4_i16 (gfc_array_i4 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_INTEGER_16 * restrict src;\n       GFC_INTEGER_4 result;\n@@ -193,8 +197,8 @@ maxloc1_4_i16 (gfc_array_i4 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "dedb28b8dc07df9f6ad1ffb2f9560f31c335185b", "filename": "libgfortran/generated/maxloc1_4_i2.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fmaxloc1_4_i2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fmaxloc1_4_i2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_4_i2.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -57,12 +57,15 @@ maxloc1_4_i2 (gfc_array_i4 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -149,7 +152,8 @@ maxloc1_4_i2 (gfc_array_i4 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_INTEGER_2 * restrict src;\n       GFC_INTEGER_4 result;\n@@ -193,8 +197,8 @@ maxloc1_4_i2 (gfc_array_i4 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "12bad843e9202f921f45913ddce789b18ea3cec2", "filename": "libgfortran/generated/maxloc1_4_i4.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fmaxloc1_4_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fmaxloc1_4_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_4_i4.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -57,12 +57,15 @@ maxloc1_4_i4 (gfc_array_i4 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -149,7 +152,8 @@ maxloc1_4_i4 (gfc_array_i4 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_INTEGER_4 * restrict src;\n       GFC_INTEGER_4 result;\n@@ -193,8 +197,8 @@ maxloc1_4_i4 (gfc_array_i4 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "2215521cb1b6729dda4cb62f605994cfdbce8b3a", "filename": "libgfortran/generated/maxloc1_4_i8.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fmaxloc1_4_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fmaxloc1_4_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_4_i8.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -57,12 +57,15 @@ maxloc1_4_i8 (gfc_array_i4 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -149,7 +152,8 @@ maxloc1_4_i8 (gfc_array_i4 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_INTEGER_8 * restrict src;\n       GFC_INTEGER_4 result;\n@@ -193,8 +197,8 @@ maxloc1_4_i8 (gfc_array_i4 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "0ed1df2fde03d759fe8be548db8855377e40e127", "filename": "libgfortran/generated/maxloc1_4_r10.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fmaxloc1_4_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fmaxloc1_4_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_4_r10.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -57,12 +57,15 @@ maxloc1_4_r10 (gfc_array_i4 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -149,7 +152,8 @@ maxloc1_4_r10 (gfc_array_i4 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_REAL_10 * restrict src;\n       GFC_INTEGER_4 result;\n@@ -193,8 +197,8 @@ maxloc1_4_r10 (gfc_array_i4 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "ae1a4f16fabbab49c1c074455f6b1e8d6bd8ddf3", "filename": "libgfortran/generated/maxloc1_4_r16.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fmaxloc1_4_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fmaxloc1_4_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_4_r16.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -57,12 +57,15 @@ maxloc1_4_r16 (gfc_array_i4 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -149,7 +152,8 @@ maxloc1_4_r16 (gfc_array_i4 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_REAL_16 * restrict src;\n       GFC_INTEGER_4 result;\n@@ -193,8 +197,8 @@ maxloc1_4_r16 (gfc_array_i4 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "6b1656424cd76442606649844d0820c72228b85d", "filename": "libgfortran/generated/maxloc1_4_r4.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fmaxloc1_4_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fmaxloc1_4_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_4_r4.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -57,12 +57,15 @@ maxloc1_4_r4 (gfc_array_i4 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -149,7 +152,8 @@ maxloc1_4_r4 (gfc_array_i4 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_REAL_4 * restrict src;\n       GFC_INTEGER_4 result;\n@@ -193,8 +197,8 @@ maxloc1_4_r4 (gfc_array_i4 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "bbc6f9e54e5df89ed387c306faf47a998cdb8d58", "filename": "libgfortran/generated/maxloc1_4_r8.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fmaxloc1_4_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fmaxloc1_4_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_4_r8.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -57,12 +57,15 @@ maxloc1_4_r8 (gfc_array_i4 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -149,7 +152,8 @@ maxloc1_4_r8 (gfc_array_i4 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_REAL_8 * restrict src;\n       GFC_INTEGER_4 result;\n@@ -193,8 +197,8 @@ maxloc1_4_r8 (gfc_array_i4 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "85c44f9d0dcdb5c2fedb33f7bf0c0fb9a0c73030", "filename": "libgfortran/generated/maxloc1_8_i1.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fmaxloc1_8_i1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fmaxloc1_8_i1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_8_i1.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -57,12 +57,15 @@ maxloc1_8_i1 (gfc_array_i8 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -149,7 +152,8 @@ maxloc1_8_i1 (gfc_array_i8 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_INTEGER_1 * restrict src;\n       GFC_INTEGER_8 result;\n@@ -193,8 +197,8 @@ maxloc1_8_i1 (gfc_array_i8 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "18d1ad1d2f20b510db3a408d8549811e4b5ddeb7", "filename": "libgfortran/generated/maxloc1_8_i16.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fmaxloc1_8_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fmaxloc1_8_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_8_i16.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -57,12 +57,15 @@ maxloc1_8_i16 (gfc_array_i8 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -149,7 +152,8 @@ maxloc1_8_i16 (gfc_array_i8 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_INTEGER_16 * restrict src;\n       GFC_INTEGER_8 result;\n@@ -193,8 +197,8 @@ maxloc1_8_i16 (gfc_array_i8 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "121cc0fe8cb7ecfe1462927c1ccf9cef2c130efb", "filename": "libgfortran/generated/maxloc1_8_i2.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fmaxloc1_8_i2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fmaxloc1_8_i2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_8_i2.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -57,12 +57,15 @@ maxloc1_8_i2 (gfc_array_i8 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -149,7 +152,8 @@ maxloc1_8_i2 (gfc_array_i8 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_INTEGER_2 * restrict src;\n       GFC_INTEGER_8 result;\n@@ -193,8 +197,8 @@ maxloc1_8_i2 (gfc_array_i8 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "8386a29979e9bc26278f5cb8fdad3dc93c7663d1", "filename": "libgfortran/generated/maxloc1_8_i4.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fmaxloc1_8_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fmaxloc1_8_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_8_i4.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -57,12 +57,15 @@ maxloc1_8_i4 (gfc_array_i8 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -149,7 +152,8 @@ maxloc1_8_i4 (gfc_array_i8 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_INTEGER_4 * restrict src;\n       GFC_INTEGER_8 result;\n@@ -193,8 +197,8 @@ maxloc1_8_i4 (gfc_array_i8 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "ed71c49250218b9fc504f326f695398f2eec990d", "filename": "libgfortran/generated/maxloc1_8_i8.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fmaxloc1_8_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fmaxloc1_8_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_8_i8.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -57,12 +57,15 @@ maxloc1_8_i8 (gfc_array_i8 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -149,7 +152,8 @@ maxloc1_8_i8 (gfc_array_i8 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_INTEGER_8 * restrict src;\n       GFC_INTEGER_8 result;\n@@ -193,8 +197,8 @@ maxloc1_8_i8 (gfc_array_i8 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "a7b71bc54f3be2a26f37f661ee4a744c2a85c164", "filename": "libgfortran/generated/maxloc1_8_r10.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fmaxloc1_8_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fmaxloc1_8_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_8_r10.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -57,12 +57,15 @@ maxloc1_8_r10 (gfc_array_i8 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -149,7 +152,8 @@ maxloc1_8_r10 (gfc_array_i8 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_REAL_10 * restrict src;\n       GFC_INTEGER_8 result;\n@@ -193,8 +197,8 @@ maxloc1_8_r10 (gfc_array_i8 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "9fd0b46dbda2efe24fa05d6b3e67e694a2465d15", "filename": "libgfortran/generated/maxloc1_8_r16.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fmaxloc1_8_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fmaxloc1_8_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_8_r16.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -57,12 +57,15 @@ maxloc1_8_r16 (gfc_array_i8 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -149,7 +152,8 @@ maxloc1_8_r16 (gfc_array_i8 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_REAL_16 * restrict src;\n       GFC_INTEGER_8 result;\n@@ -193,8 +197,8 @@ maxloc1_8_r16 (gfc_array_i8 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "79f1103dc8f0ca930643727c8bff7fa6a295c056", "filename": "libgfortran/generated/maxloc1_8_r4.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fmaxloc1_8_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fmaxloc1_8_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_8_r4.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -57,12 +57,15 @@ maxloc1_8_r4 (gfc_array_i8 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -149,7 +152,8 @@ maxloc1_8_r4 (gfc_array_i8 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_REAL_4 * restrict src;\n       GFC_INTEGER_8 result;\n@@ -193,8 +197,8 @@ maxloc1_8_r4 (gfc_array_i8 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "b0ab7608b41fa932b600d8b66727bd09e675a936", "filename": "libgfortran/generated/maxloc1_8_r8.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fmaxloc1_8_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fmaxloc1_8_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_8_r8.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -57,12 +57,15 @@ maxloc1_8_r8 (gfc_array_i8 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -149,7 +152,8 @@ maxloc1_8_r8 (gfc_array_i8 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_REAL_8 * restrict src;\n       GFC_INTEGER_8 result;\n@@ -193,8 +197,8 @@ maxloc1_8_r8 (gfc_array_i8 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "a7288eb827b4a9cc5cfb54c3548d71039b9b575f", "filename": "libgfortran/generated/maxval_i1.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fmaxval_i1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fmaxval_i1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxval_i1.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -56,12 +56,15 @@ maxval_i1 (gfc_array_i1 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -148,7 +151,8 @@ maxval_i1 (gfc_array_i1 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_INTEGER_1 * restrict src;\n       GFC_INTEGER_1 result;\n@@ -187,8 +191,8 @@ maxval_i1 (gfc_array_i1 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "d50ab6f3558a7d0df411323215f1c1fb954739c3", "filename": "libgfortran/generated/maxval_i16.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fmaxval_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fmaxval_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxval_i16.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -56,12 +56,15 @@ maxval_i16 (gfc_array_i16 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -148,7 +151,8 @@ maxval_i16 (gfc_array_i16 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_INTEGER_16 * restrict src;\n       GFC_INTEGER_16 result;\n@@ -187,8 +191,8 @@ maxval_i16 (gfc_array_i16 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "c49b18120431cba00e95fe7291f81076e546dffd", "filename": "libgfortran/generated/maxval_i2.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fmaxval_i2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fmaxval_i2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxval_i2.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -56,12 +56,15 @@ maxval_i2 (gfc_array_i2 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -148,7 +151,8 @@ maxval_i2 (gfc_array_i2 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_INTEGER_2 * restrict src;\n       GFC_INTEGER_2 result;\n@@ -187,8 +191,8 @@ maxval_i2 (gfc_array_i2 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "354c86d9a1ed4ed06ae7bd9c66214500799924f8", "filename": "libgfortran/generated/maxval_i4.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fmaxval_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fmaxval_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxval_i4.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -56,12 +56,15 @@ maxval_i4 (gfc_array_i4 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -148,7 +151,8 @@ maxval_i4 (gfc_array_i4 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_INTEGER_4 * restrict src;\n       GFC_INTEGER_4 result;\n@@ -187,8 +191,8 @@ maxval_i4 (gfc_array_i4 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "91a2b00c619f9f38135b3a7c8113995e76d297ba", "filename": "libgfortran/generated/maxval_i8.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fmaxval_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fmaxval_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxval_i8.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -56,12 +56,15 @@ maxval_i8 (gfc_array_i8 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -148,7 +151,8 @@ maxval_i8 (gfc_array_i8 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_INTEGER_8 * restrict src;\n       GFC_INTEGER_8 result;\n@@ -187,8 +191,8 @@ maxval_i8 (gfc_array_i8 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "c959a8083a6aac076b5268fcd2057f9a617142eb", "filename": "libgfortran/generated/maxval_r10.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fmaxval_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fmaxval_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxval_r10.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -56,12 +56,15 @@ maxval_r10 (gfc_array_r10 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -148,7 +151,8 @@ maxval_r10 (gfc_array_r10 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_REAL_10 * restrict src;\n       GFC_REAL_10 result;\n@@ -187,8 +191,8 @@ maxval_r10 (gfc_array_r10 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "a05808d2e5c55a45930e4d0c417a60ac8d356969", "filename": "libgfortran/generated/maxval_r16.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fmaxval_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fmaxval_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxval_r16.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -56,12 +56,15 @@ maxval_r16 (gfc_array_r16 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -148,7 +151,8 @@ maxval_r16 (gfc_array_r16 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_REAL_16 * restrict src;\n       GFC_REAL_16 result;\n@@ -187,8 +191,8 @@ maxval_r16 (gfc_array_r16 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "a00468bc84576663496dd80cbfd74d3ae51b6fe3", "filename": "libgfortran/generated/maxval_r4.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fmaxval_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fmaxval_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxval_r4.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -56,12 +56,15 @@ maxval_r4 (gfc_array_r4 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -148,7 +151,8 @@ maxval_r4 (gfc_array_r4 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_REAL_4 * restrict src;\n       GFC_REAL_4 result;\n@@ -187,8 +191,8 @@ maxval_r4 (gfc_array_r4 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "1c9e41df6d09fc67878bbb41b1249937a2ba4289", "filename": "libgfortran/generated/maxval_r8.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fmaxval_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fmaxval_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxval_r8.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -56,12 +56,15 @@ maxval_r8 (gfc_array_r8 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -148,7 +151,8 @@ maxval_r8 (gfc_array_r8 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_REAL_8 * restrict src;\n       GFC_REAL_8 result;\n@@ -187,8 +191,8 @@ maxval_r8 (gfc_array_r8 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "f95aa9068979286827de302ce5774e982a4ff10a", "filename": "libgfortran/generated/minloc1_16_i1.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fminloc1_16_i1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fminloc1_16_i1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_16_i1.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -57,12 +57,15 @@ minloc1_16_i1 (gfc_array_i16 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -149,7 +152,8 @@ minloc1_16_i1 (gfc_array_i16 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_INTEGER_1 * restrict src;\n       GFC_INTEGER_16 result;\n@@ -193,8 +197,8 @@ minloc1_16_i1 (gfc_array_i16 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "9a5da308ede93c2b5d897d6f8f5820a9ac558d42", "filename": "libgfortran/generated/minloc1_16_i16.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fminloc1_16_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fminloc1_16_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_16_i16.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -57,12 +57,15 @@ minloc1_16_i16 (gfc_array_i16 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -149,7 +152,8 @@ minloc1_16_i16 (gfc_array_i16 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_INTEGER_16 * restrict src;\n       GFC_INTEGER_16 result;\n@@ -193,8 +197,8 @@ minloc1_16_i16 (gfc_array_i16 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "ad282f9b774ac00d1123079881516b22bbb18c89", "filename": "libgfortran/generated/minloc1_16_i2.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fminloc1_16_i2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fminloc1_16_i2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_16_i2.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -57,12 +57,15 @@ minloc1_16_i2 (gfc_array_i16 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -149,7 +152,8 @@ minloc1_16_i2 (gfc_array_i16 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_INTEGER_2 * restrict src;\n       GFC_INTEGER_16 result;\n@@ -193,8 +197,8 @@ minloc1_16_i2 (gfc_array_i16 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "7eb382d89eedfd6c20f7be93a41ac62b4bd8bd54", "filename": "libgfortran/generated/minloc1_16_i4.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fminloc1_16_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fminloc1_16_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_16_i4.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -57,12 +57,15 @@ minloc1_16_i4 (gfc_array_i16 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -149,7 +152,8 @@ minloc1_16_i4 (gfc_array_i16 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_INTEGER_4 * restrict src;\n       GFC_INTEGER_16 result;\n@@ -193,8 +197,8 @@ minloc1_16_i4 (gfc_array_i16 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "7995d26101cef45b9e6eafb507431c02ac03b3c2", "filename": "libgfortran/generated/minloc1_16_i8.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fminloc1_16_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fminloc1_16_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_16_i8.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -57,12 +57,15 @@ minloc1_16_i8 (gfc_array_i16 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -149,7 +152,8 @@ minloc1_16_i8 (gfc_array_i16 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_INTEGER_8 * restrict src;\n       GFC_INTEGER_16 result;\n@@ -193,8 +197,8 @@ minloc1_16_i8 (gfc_array_i16 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "c7da9d1b5dc0d17e9851b10d4b3f246e9c8c8884", "filename": "libgfortran/generated/minloc1_16_r10.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fminloc1_16_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fminloc1_16_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_16_r10.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -57,12 +57,15 @@ minloc1_16_r10 (gfc_array_i16 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -149,7 +152,8 @@ minloc1_16_r10 (gfc_array_i16 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_REAL_10 * restrict src;\n       GFC_INTEGER_16 result;\n@@ -193,8 +197,8 @@ minloc1_16_r10 (gfc_array_i16 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "c24cb81dca5f97a9e5451658a49337fa786aad71", "filename": "libgfortran/generated/minloc1_16_r16.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fminloc1_16_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fminloc1_16_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_16_r16.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -57,12 +57,15 @@ minloc1_16_r16 (gfc_array_i16 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -149,7 +152,8 @@ minloc1_16_r16 (gfc_array_i16 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_REAL_16 * restrict src;\n       GFC_INTEGER_16 result;\n@@ -193,8 +197,8 @@ minloc1_16_r16 (gfc_array_i16 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "37cda9b2c1cb0be1c816deadc90188fb7133a8e7", "filename": "libgfortran/generated/minloc1_16_r4.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fminloc1_16_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fminloc1_16_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_16_r4.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -57,12 +57,15 @@ minloc1_16_r4 (gfc_array_i16 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -149,7 +152,8 @@ minloc1_16_r4 (gfc_array_i16 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_REAL_4 * restrict src;\n       GFC_INTEGER_16 result;\n@@ -193,8 +197,8 @@ minloc1_16_r4 (gfc_array_i16 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "b0bbf82d313aafafc014a2948a9be099aae18204", "filename": "libgfortran/generated/minloc1_16_r8.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fminloc1_16_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fminloc1_16_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_16_r8.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -57,12 +57,15 @@ minloc1_16_r8 (gfc_array_i16 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -149,7 +152,8 @@ minloc1_16_r8 (gfc_array_i16 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_REAL_8 * restrict src;\n       GFC_INTEGER_16 result;\n@@ -193,8 +197,8 @@ minloc1_16_r8 (gfc_array_i16 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "eab1b40109df2147fc797c6790df0e3105f7d15c", "filename": "libgfortran/generated/minloc1_4_i1.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fminloc1_4_i1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fminloc1_4_i1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_4_i1.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -57,12 +57,15 @@ minloc1_4_i1 (gfc_array_i4 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -149,7 +152,8 @@ minloc1_4_i1 (gfc_array_i4 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_INTEGER_1 * restrict src;\n       GFC_INTEGER_4 result;\n@@ -193,8 +197,8 @@ minloc1_4_i1 (gfc_array_i4 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "3446e4e825db271110ee5d6074ada2fdfed4340b", "filename": "libgfortran/generated/minloc1_4_i16.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fminloc1_4_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fminloc1_4_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_4_i16.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -57,12 +57,15 @@ minloc1_4_i16 (gfc_array_i4 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -149,7 +152,8 @@ minloc1_4_i16 (gfc_array_i4 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_INTEGER_16 * restrict src;\n       GFC_INTEGER_4 result;\n@@ -193,8 +197,8 @@ minloc1_4_i16 (gfc_array_i4 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "1e2a8c6652db9f581181b665387917a08d20f65d", "filename": "libgfortran/generated/minloc1_4_i2.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fminloc1_4_i2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fminloc1_4_i2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_4_i2.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -57,12 +57,15 @@ minloc1_4_i2 (gfc_array_i4 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -149,7 +152,8 @@ minloc1_4_i2 (gfc_array_i4 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_INTEGER_2 * restrict src;\n       GFC_INTEGER_4 result;\n@@ -193,8 +197,8 @@ minloc1_4_i2 (gfc_array_i4 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "6e4b137f183b0e4c9fd96ddd08b5bba45e7306ec", "filename": "libgfortran/generated/minloc1_4_i4.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fminloc1_4_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fminloc1_4_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_4_i4.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -57,12 +57,15 @@ minloc1_4_i4 (gfc_array_i4 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -149,7 +152,8 @@ minloc1_4_i4 (gfc_array_i4 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_INTEGER_4 * restrict src;\n       GFC_INTEGER_4 result;\n@@ -193,8 +197,8 @@ minloc1_4_i4 (gfc_array_i4 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "5295a1050c7c50ccb53c09739658d22568ebf465", "filename": "libgfortran/generated/minloc1_4_i8.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fminloc1_4_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fminloc1_4_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_4_i8.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -57,12 +57,15 @@ minloc1_4_i8 (gfc_array_i4 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -149,7 +152,8 @@ minloc1_4_i8 (gfc_array_i4 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_INTEGER_8 * restrict src;\n       GFC_INTEGER_4 result;\n@@ -193,8 +197,8 @@ minloc1_4_i8 (gfc_array_i4 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "a020a9908a6c84ccbcd3c4eddce40af777ff5724", "filename": "libgfortran/generated/minloc1_4_r10.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fminloc1_4_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fminloc1_4_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_4_r10.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -57,12 +57,15 @@ minloc1_4_r10 (gfc_array_i4 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -149,7 +152,8 @@ minloc1_4_r10 (gfc_array_i4 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_REAL_10 * restrict src;\n       GFC_INTEGER_4 result;\n@@ -193,8 +197,8 @@ minloc1_4_r10 (gfc_array_i4 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "19bf03c3b75b8db99c04a796ece8c0a5bd814f3c", "filename": "libgfortran/generated/minloc1_4_r16.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fminloc1_4_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fminloc1_4_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_4_r16.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -57,12 +57,15 @@ minloc1_4_r16 (gfc_array_i4 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -149,7 +152,8 @@ minloc1_4_r16 (gfc_array_i4 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_REAL_16 * restrict src;\n       GFC_INTEGER_4 result;\n@@ -193,8 +197,8 @@ minloc1_4_r16 (gfc_array_i4 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "ba54897ba39119cdf432ac0c786e700e7df406e1", "filename": "libgfortran/generated/minloc1_4_r4.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fminloc1_4_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fminloc1_4_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_4_r4.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -57,12 +57,15 @@ minloc1_4_r4 (gfc_array_i4 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -149,7 +152,8 @@ minloc1_4_r4 (gfc_array_i4 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_REAL_4 * restrict src;\n       GFC_INTEGER_4 result;\n@@ -193,8 +197,8 @@ minloc1_4_r4 (gfc_array_i4 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "07fb27a66065dfbd84d458187111b5263013a186", "filename": "libgfortran/generated/minloc1_4_r8.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fminloc1_4_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fminloc1_4_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_4_r8.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -57,12 +57,15 @@ minloc1_4_r8 (gfc_array_i4 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -149,7 +152,8 @@ minloc1_4_r8 (gfc_array_i4 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_REAL_8 * restrict src;\n       GFC_INTEGER_4 result;\n@@ -193,8 +197,8 @@ minloc1_4_r8 (gfc_array_i4 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "409a961a78661fc1d2f95c3331c624567fa3a528", "filename": "libgfortran/generated/minloc1_8_i1.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fminloc1_8_i1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fminloc1_8_i1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_8_i1.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -57,12 +57,15 @@ minloc1_8_i1 (gfc_array_i8 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -149,7 +152,8 @@ minloc1_8_i1 (gfc_array_i8 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_INTEGER_1 * restrict src;\n       GFC_INTEGER_8 result;\n@@ -193,8 +197,8 @@ minloc1_8_i1 (gfc_array_i8 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "47fc6665dec1a0f93b56b844494f3163e89dc9c4", "filename": "libgfortran/generated/minloc1_8_i16.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fminloc1_8_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fminloc1_8_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_8_i16.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -57,12 +57,15 @@ minloc1_8_i16 (gfc_array_i8 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -149,7 +152,8 @@ minloc1_8_i16 (gfc_array_i8 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_INTEGER_16 * restrict src;\n       GFC_INTEGER_8 result;\n@@ -193,8 +197,8 @@ minloc1_8_i16 (gfc_array_i8 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "22080173f897aa8eee683321c7b42845a1c55175", "filename": "libgfortran/generated/minloc1_8_i2.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fminloc1_8_i2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fminloc1_8_i2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_8_i2.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -57,12 +57,15 @@ minloc1_8_i2 (gfc_array_i8 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -149,7 +152,8 @@ minloc1_8_i2 (gfc_array_i8 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_INTEGER_2 * restrict src;\n       GFC_INTEGER_8 result;\n@@ -193,8 +197,8 @@ minloc1_8_i2 (gfc_array_i8 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "71df4e662e38989974cb76ce71b3a2707c654f61", "filename": "libgfortran/generated/minloc1_8_i4.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fminloc1_8_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fminloc1_8_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_8_i4.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -57,12 +57,15 @@ minloc1_8_i4 (gfc_array_i8 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -149,7 +152,8 @@ minloc1_8_i4 (gfc_array_i8 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_INTEGER_4 * restrict src;\n       GFC_INTEGER_8 result;\n@@ -193,8 +197,8 @@ minloc1_8_i4 (gfc_array_i8 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "d4e471a62bbb74f804868596cbde3ee33b16c571", "filename": "libgfortran/generated/minloc1_8_i8.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fminloc1_8_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fminloc1_8_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_8_i8.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -57,12 +57,15 @@ minloc1_8_i8 (gfc_array_i8 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -149,7 +152,8 @@ minloc1_8_i8 (gfc_array_i8 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_INTEGER_8 * restrict src;\n       GFC_INTEGER_8 result;\n@@ -193,8 +197,8 @@ minloc1_8_i8 (gfc_array_i8 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "61632394d6cb51edd974a455c597f9d3ab113b2a", "filename": "libgfortran/generated/minloc1_8_r10.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fminloc1_8_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fminloc1_8_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_8_r10.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -57,12 +57,15 @@ minloc1_8_r10 (gfc_array_i8 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -149,7 +152,8 @@ minloc1_8_r10 (gfc_array_i8 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_REAL_10 * restrict src;\n       GFC_INTEGER_8 result;\n@@ -193,8 +197,8 @@ minloc1_8_r10 (gfc_array_i8 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "3e0416adb527cfa437345afe5aa5293ef00eca00", "filename": "libgfortran/generated/minloc1_8_r16.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fminloc1_8_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fminloc1_8_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_8_r16.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -57,12 +57,15 @@ minloc1_8_r16 (gfc_array_i8 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -149,7 +152,8 @@ minloc1_8_r16 (gfc_array_i8 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_REAL_16 * restrict src;\n       GFC_INTEGER_8 result;\n@@ -193,8 +197,8 @@ minloc1_8_r16 (gfc_array_i8 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "c6a6ad4bc555c79fda9e43bdb4517993d5db26dd", "filename": "libgfortran/generated/minloc1_8_r4.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fminloc1_8_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fminloc1_8_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_8_r4.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -57,12 +57,15 @@ minloc1_8_r4 (gfc_array_i8 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -149,7 +152,8 @@ minloc1_8_r4 (gfc_array_i8 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_REAL_4 * restrict src;\n       GFC_INTEGER_8 result;\n@@ -193,8 +197,8 @@ minloc1_8_r4 (gfc_array_i8 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "8a01e3edf26a0d7e0ecd1d9cef7659be066c4667", "filename": "libgfortran/generated/minloc1_8_r8.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fminloc1_8_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fminloc1_8_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_8_r8.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -57,12 +57,15 @@ minloc1_8_r8 (gfc_array_i8 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -149,7 +152,8 @@ minloc1_8_r8 (gfc_array_i8 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_REAL_8 * restrict src;\n       GFC_INTEGER_8 result;\n@@ -193,8 +197,8 @@ minloc1_8_r8 (gfc_array_i8 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "719a0497c6c0540ca4a9d3420e9069af08fed0a9", "filename": "libgfortran/generated/minval_i1.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fminval_i1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fminval_i1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminval_i1.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -56,12 +56,15 @@ minval_i1 (gfc_array_i1 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -148,7 +151,8 @@ minval_i1 (gfc_array_i1 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_INTEGER_1 * restrict src;\n       GFC_INTEGER_1 result;\n@@ -187,8 +191,8 @@ minval_i1 (gfc_array_i1 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "c4f699b01b11dca653f12b04492a7d9fe595d8dc", "filename": "libgfortran/generated/minval_i16.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fminval_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fminval_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminval_i16.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -56,12 +56,15 @@ minval_i16 (gfc_array_i16 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -148,7 +151,8 @@ minval_i16 (gfc_array_i16 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_INTEGER_16 * restrict src;\n       GFC_INTEGER_16 result;\n@@ -187,8 +191,8 @@ minval_i16 (gfc_array_i16 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "2ff292fe9b14d4b778d62739c78024658dba5611", "filename": "libgfortran/generated/minval_i2.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fminval_i2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fminval_i2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminval_i2.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -56,12 +56,15 @@ minval_i2 (gfc_array_i2 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -148,7 +151,8 @@ minval_i2 (gfc_array_i2 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_INTEGER_2 * restrict src;\n       GFC_INTEGER_2 result;\n@@ -187,8 +191,8 @@ minval_i2 (gfc_array_i2 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "96bfe32bde6c6cc46c777271b9a08473b0828a98", "filename": "libgfortran/generated/minval_i4.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fminval_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fminval_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminval_i4.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -56,12 +56,15 @@ minval_i4 (gfc_array_i4 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -148,7 +151,8 @@ minval_i4 (gfc_array_i4 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_INTEGER_4 * restrict src;\n       GFC_INTEGER_4 result;\n@@ -187,8 +191,8 @@ minval_i4 (gfc_array_i4 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "1682dd2fa394057ebc18651a6cfd65b04fb9b243", "filename": "libgfortran/generated/minval_i8.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fminval_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fminval_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminval_i8.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -56,12 +56,15 @@ minval_i8 (gfc_array_i8 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -148,7 +151,8 @@ minval_i8 (gfc_array_i8 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_INTEGER_8 * restrict src;\n       GFC_INTEGER_8 result;\n@@ -187,8 +191,8 @@ minval_i8 (gfc_array_i8 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "fa9e6366e3806adc25e394f4a153cea3ae6da70f", "filename": "libgfortran/generated/minval_r10.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fminval_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fminval_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminval_r10.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -56,12 +56,15 @@ minval_r10 (gfc_array_r10 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -148,7 +151,8 @@ minval_r10 (gfc_array_r10 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_REAL_10 * restrict src;\n       GFC_REAL_10 result;\n@@ -187,8 +191,8 @@ minval_r10 (gfc_array_r10 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "9561caa94da90487305b7666307536f5ac1706d5", "filename": "libgfortran/generated/minval_r16.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fminval_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fminval_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminval_r16.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -56,12 +56,15 @@ minval_r16 (gfc_array_r16 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -148,7 +151,8 @@ minval_r16 (gfc_array_r16 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_REAL_16 * restrict src;\n       GFC_REAL_16 result;\n@@ -187,8 +191,8 @@ minval_r16 (gfc_array_r16 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "ac048eedb064c327642b3b3eeb60f37ce7df7a72", "filename": "libgfortran/generated/minval_r4.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fminval_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fminval_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminval_r4.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -56,12 +56,15 @@ minval_r4 (gfc_array_r4 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -148,7 +151,8 @@ minval_r4 (gfc_array_r4 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_REAL_4 * restrict src;\n       GFC_REAL_4 result;\n@@ -187,8 +191,8 @@ minval_r4 (gfc_array_r4 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "21ecb3c5afba2c32126834377c798f764ba7a989", "filename": "libgfortran/generated/minval_r8.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fminval_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fminval_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminval_r8.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -56,12 +56,15 @@ minval_r8 (gfc_array_r8 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -148,7 +151,8 @@ minval_r8 (gfc_array_r8 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_REAL_8 * restrict src;\n       GFC_REAL_8 result;\n@@ -187,8 +191,8 @@ minval_r8 (gfc_array_r8 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "66a9c05dec73e3b37364096a7eb47614d2660ade", "filename": "libgfortran/generated/product_c10.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fproduct_c10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fproduct_c10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fproduct_c10.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -56,12 +56,15 @@ product_c10 (gfc_array_c10 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -148,7 +151,8 @@ product_c10 (gfc_array_c10 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_COMPLEX_10 * restrict src;\n       GFC_COMPLEX_10 result;\n@@ -186,8 +190,8 @@ product_c10 (gfc_array_c10 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "ec2acb4e4f97ec5d2e80f036eabc1965be624237", "filename": "libgfortran/generated/product_c16.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fproduct_c16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fproduct_c16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fproduct_c16.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -56,12 +56,15 @@ product_c16 (gfc_array_c16 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -148,7 +151,8 @@ product_c16 (gfc_array_c16 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_COMPLEX_16 * restrict src;\n       GFC_COMPLEX_16 result;\n@@ -186,8 +190,8 @@ product_c16 (gfc_array_c16 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "bd52eb9ab77142798ac2039eba81aab9cd12ddfb", "filename": "libgfortran/generated/product_c4.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fproduct_c4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fproduct_c4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fproduct_c4.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -56,12 +56,15 @@ product_c4 (gfc_array_c4 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -148,7 +151,8 @@ product_c4 (gfc_array_c4 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_COMPLEX_4 * restrict src;\n       GFC_COMPLEX_4 result;\n@@ -186,8 +190,8 @@ product_c4 (gfc_array_c4 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "c124355c1b2b62a7fd0bc9bf45a7df4f2c800030", "filename": "libgfortran/generated/product_c8.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fproduct_c8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fproduct_c8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fproduct_c8.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -56,12 +56,15 @@ product_c8 (gfc_array_c8 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -148,7 +151,8 @@ product_c8 (gfc_array_c8 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_COMPLEX_8 * restrict src;\n       GFC_COMPLEX_8 result;\n@@ -186,8 +190,8 @@ product_c8 (gfc_array_c8 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "362a08ac6a1d9b3804242d41291858dfdd824705", "filename": "libgfortran/generated/product_i1.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fproduct_i1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fproduct_i1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fproduct_i1.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -56,12 +56,15 @@ product_i1 (gfc_array_i1 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -148,7 +151,8 @@ product_i1 (gfc_array_i1 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_INTEGER_1 * restrict src;\n       GFC_INTEGER_1 result;\n@@ -186,8 +190,8 @@ product_i1 (gfc_array_i1 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "a687c3a218e0fa147b34349d62ef566b459df6e6", "filename": "libgfortran/generated/product_i16.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fproduct_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fproduct_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fproduct_i16.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -56,12 +56,15 @@ product_i16 (gfc_array_i16 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -148,7 +151,8 @@ product_i16 (gfc_array_i16 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_INTEGER_16 * restrict src;\n       GFC_INTEGER_16 result;\n@@ -186,8 +190,8 @@ product_i16 (gfc_array_i16 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "f8082b4c7bbf6b10cb6baa052f53027b2ac8f7da", "filename": "libgfortran/generated/product_i2.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fproduct_i2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fproduct_i2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fproduct_i2.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -56,12 +56,15 @@ product_i2 (gfc_array_i2 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -148,7 +151,8 @@ product_i2 (gfc_array_i2 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_INTEGER_2 * restrict src;\n       GFC_INTEGER_2 result;\n@@ -186,8 +190,8 @@ product_i2 (gfc_array_i2 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "11132d4e2bb61771496888ce004d9f93c5a24d18", "filename": "libgfortran/generated/product_i4.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fproduct_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fproduct_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fproduct_i4.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -56,12 +56,15 @@ product_i4 (gfc_array_i4 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -148,7 +151,8 @@ product_i4 (gfc_array_i4 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_INTEGER_4 * restrict src;\n       GFC_INTEGER_4 result;\n@@ -186,8 +190,8 @@ product_i4 (gfc_array_i4 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "da28568f39e6ef06c28abd92fe63973463fcb991", "filename": "libgfortran/generated/product_i8.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fproduct_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fproduct_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fproduct_i8.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -56,12 +56,15 @@ product_i8 (gfc_array_i8 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -148,7 +151,8 @@ product_i8 (gfc_array_i8 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_INTEGER_8 * restrict src;\n       GFC_INTEGER_8 result;\n@@ -186,8 +190,8 @@ product_i8 (gfc_array_i8 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "fb0074e222690e9e9f9e79820cdc3829b9dc6d09", "filename": "libgfortran/generated/product_r10.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fproduct_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fproduct_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fproduct_r10.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -56,12 +56,15 @@ product_r10 (gfc_array_r10 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -148,7 +151,8 @@ product_r10 (gfc_array_r10 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_REAL_10 * restrict src;\n       GFC_REAL_10 result;\n@@ -186,8 +190,8 @@ product_r10 (gfc_array_r10 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "2375cbefef5b8031d1a529cae3959ec074dd2d37", "filename": "libgfortran/generated/product_r16.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fproduct_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fproduct_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fproduct_r16.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -56,12 +56,15 @@ product_r16 (gfc_array_r16 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -148,7 +151,8 @@ product_r16 (gfc_array_r16 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_REAL_16 * restrict src;\n       GFC_REAL_16 result;\n@@ -186,8 +190,8 @@ product_r16 (gfc_array_r16 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "1a3aacc3b79182456c1587acb8c801a4f3b7f069", "filename": "libgfortran/generated/product_r4.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fproduct_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fproduct_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fproduct_r4.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -56,12 +56,15 @@ product_r4 (gfc_array_r4 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -148,7 +151,8 @@ product_r4 (gfc_array_r4 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_REAL_4 * restrict src;\n       GFC_REAL_4 result;\n@@ -186,8 +190,8 @@ product_r4 (gfc_array_r4 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "76cb1bedbbf341e860a1a532b920a1bd804747ff", "filename": "libgfortran/generated/product_r8.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fproduct_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fproduct_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fproduct_r8.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -56,12 +56,15 @@ product_r8 (gfc_array_r8 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -148,7 +151,8 @@ product_r8 (gfc_array_r8 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_REAL_8 * restrict src;\n       GFC_REAL_8 result;\n@@ -186,8 +190,8 @@ product_r8 (gfc_array_r8 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "0c53b6c5880320aafa6cbaaaa3d8d1b2a2923a64", "filename": "libgfortran/generated/sum_c10.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fsum_c10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fsum_c10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fsum_c10.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -56,12 +56,15 @@ sum_c10 (gfc_array_c10 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -148,7 +151,8 @@ sum_c10 (gfc_array_c10 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_COMPLEX_10 * restrict src;\n       GFC_COMPLEX_10 result;\n@@ -186,8 +190,8 @@ sum_c10 (gfc_array_c10 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "a3db7aa7d2aab58c2c898be5349aa97e93d87886", "filename": "libgfortran/generated/sum_c16.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fsum_c16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fsum_c16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fsum_c16.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -56,12 +56,15 @@ sum_c16 (gfc_array_c16 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -148,7 +151,8 @@ sum_c16 (gfc_array_c16 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_COMPLEX_16 * restrict src;\n       GFC_COMPLEX_16 result;\n@@ -186,8 +190,8 @@ sum_c16 (gfc_array_c16 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "849ab8a21bab15c42d9ade4c961009cab147c389", "filename": "libgfortran/generated/sum_c4.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fsum_c4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fsum_c4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fsum_c4.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -56,12 +56,15 @@ sum_c4 (gfc_array_c4 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -148,7 +151,8 @@ sum_c4 (gfc_array_c4 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_COMPLEX_4 * restrict src;\n       GFC_COMPLEX_4 result;\n@@ -186,8 +190,8 @@ sum_c4 (gfc_array_c4 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "dcdcadfcda9644ba41123c91d0e4c9a6d171d0da", "filename": "libgfortran/generated/sum_c8.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fsum_c8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fsum_c8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fsum_c8.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -56,12 +56,15 @@ sum_c8 (gfc_array_c8 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -148,7 +151,8 @@ sum_c8 (gfc_array_c8 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_COMPLEX_8 * restrict src;\n       GFC_COMPLEX_8 result;\n@@ -186,8 +190,8 @@ sum_c8 (gfc_array_c8 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "7b396818b53d92e547452b5cda558a5efeb6cc70", "filename": "libgfortran/generated/sum_i1.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fsum_i1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fsum_i1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fsum_i1.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -56,12 +56,15 @@ sum_i1 (gfc_array_i1 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -148,7 +151,8 @@ sum_i1 (gfc_array_i1 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_INTEGER_1 * restrict src;\n       GFC_INTEGER_1 result;\n@@ -186,8 +190,8 @@ sum_i1 (gfc_array_i1 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "e99da269b81ceebc20e2dbb30c03c1152bac410e", "filename": "libgfortran/generated/sum_i16.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fsum_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fsum_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fsum_i16.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -56,12 +56,15 @@ sum_i16 (gfc_array_i16 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -148,7 +151,8 @@ sum_i16 (gfc_array_i16 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_INTEGER_16 * restrict src;\n       GFC_INTEGER_16 result;\n@@ -186,8 +190,8 @@ sum_i16 (gfc_array_i16 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "8a61191a8f99a4f4c539fe0bb28ae0a3e8be5ad9", "filename": "libgfortran/generated/sum_i2.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fsum_i2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fsum_i2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fsum_i2.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -56,12 +56,15 @@ sum_i2 (gfc_array_i2 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -148,7 +151,8 @@ sum_i2 (gfc_array_i2 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_INTEGER_2 * restrict src;\n       GFC_INTEGER_2 result;\n@@ -186,8 +190,8 @@ sum_i2 (gfc_array_i2 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "f7912ff7aa44029fcf138f553abce6d925cdaafb", "filename": "libgfortran/generated/sum_i4.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fsum_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fsum_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fsum_i4.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -56,12 +56,15 @@ sum_i4 (gfc_array_i4 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -148,7 +151,8 @@ sum_i4 (gfc_array_i4 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_INTEGER_4 * restrict src;\n       GFC_INTEGER_4 result;\n@@ -186,8 +190,8 @@ sum_i4 (gfc_array_i4 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "a8ad4a5a9af70723ff911b3534d208f9c138aeef", "filename": "libgfortran/generated/sum_i8.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fsum_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fsum_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fsum_i8.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -56,12 +56,15 @@ sum_i8 (gfc_array_i8 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -148,7 +151,8 @@ sum_i8 (gfc_array_i8 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_INTEGER_8 * restrict src;\n       GFC_INTEGER_8 result;\n@@ -186,8 +190,8 @@ sum_i8 (gfc_array_i8 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "f96c72cc70b9aa47647ff35572bbb7c09016b41a", "filename": "libgfortran/generated/sum_r10.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fsum_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fsum_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fsum_r10.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -56,12 +56,15 @@ sum_r10 (gfc_array_r10 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -148,7 +151,8 @@ sum_r10 (gfc_array_r10 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_REAL_10 * restrict src;\n       GFC_REAL_10 result;\n@@ -186,8 +190,8 @@ sum_r10 (gfc_array_r10 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "dd8bdcf4dc01d8ed821828253df5a3b47cd43473", "filename": "libgfortran/generated/sum_r16.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fsum_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fsum_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fsum_r16.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -56,12 +56,15 @@ sum_r16 (gfc_array_r16 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -148,7 +151,8 @@ sum_r16 (gfc_array_r16 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_REAL_16 * restrict src;\n       GFC_REAL_16 result;\n@@ -186,8 +190,8 @@ sum_r16 (gfc_array_r16 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "3a39c27f88ee84535b075aa3768a7df2aba696e9", "filename": "libgfortran/generated/sum_r4.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fsum_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fsum_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fsum_r4.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -56,12 +56,15 @@ sum_r4 (gfc_array_r4 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -148,7 +151,8 @@ sum_r4 (gfc_array_r4 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_REAL_4 * restrict src;\n       GFC_REAL_4 result;\n@@ -186,8 +190,8 @@ sum_r4 (gfc_array_r4 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "858174ab43071807aca61adb269f7cf02cb03bcd", "filename": "libgfortran/generated/sum_r8.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fsum_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fgenerated%2Fsum_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fsum_r8.c?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -56,12 +56,15 @@ sum_r8 (gfc_array_r8 * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -148,7 +151,8 @@ sum_r8 (gfc_array_r8 * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_REAL_8 * restrict src;\n       GFC_REAL_8 result;\n@@ -186,8 +190,8 @@ sum_r8 (gfc_array_r8 * const restrict retarray,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "edf3c77d05cb237b47b962b4b3f34791aba73f6d", "filename": "libgfortran/m4/ifunction.m4", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fm4%2Fifunction.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fm4%2Fifunction.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Fifunction.m4?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -39,12 +39,15 @@ name`'rtype_qual`_'atype_code (rtype * const restrict retarray,\n   index_type len;\n   index_type delta;\n   index_type dim;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n   delta = array->dim[dim].stride;\n \n   for (n = 0; n < dim; n++)\n@@ -131,7 +134,8 @@ name`'rtype_qual`_'atype_code (rtype * const restrict retarray,\n   base = array->data;\n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const atype_name * restrict src;\n       rtype_name result;\n@@ -169,8 +173,8 @@ define(FINISH_ARRAY_FUNCTION,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n-              break;\n+\t      continue_loop = 0;\n+\t      break;\n             }\n           else\n             {"}, {"sha": "a31d73a17b93a43a7be91ea4ee97d327ecdc41cd", "filename": "libgfortran/m4/ifunction_logical.m4", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fm4%2Fifunction_logical.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47/libgfortran%2Fm4%2Fifunction_logical.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Fifunction_logical.m4?ref=da96f5ab49d8e45bdca0d08c5ecc408ddbc3de47", "patch": "@@ -40,6 +40,7 @@ name`'rtype_qual`_'atype_code (rtype * const restrict retarray,\n   index_type delta;\n   index_type dim;\n   int src_kind;\n+  int continue_loop;\n \n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n@@ -48,6 +49,9 @@ name`'rtype_qual`_'atype_code (rtype * const restrict retarray,\n   src_kind = GFC_DESCRIPTOR_SIZE (array);\n \n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n+  if (len < 0)\n+    len = 0;\n+\n   delta = array->dim[dim].stride * src_kind;\n \n   for (n = 0; n < dim; n++)\n@@ -147,7 +151,8 @@ name`'rtype_qual`_'atype_code (rtype * const restrict retarray,\n \n   dest = retarray->data;\n \n-  while (base)\n+  continue_loop = 1;\n+  while (continue_loop)\n     {\n       const GFC_LOGICAL_1 * restrict src;\n       rtype_name result;\n@@ -185,7 +190,7 @@ define(FINISH_ARRAY_FUNCTION,\n           if (n == rank)\n             {\n               /* Break out of the look.  */\n-              base = NULL;\n+              continue_loop = 0;\n               break;\n             }\n           else"}]}