{"sha": "598f50d7891b420331f2027e60ba63824d335bad", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTk4ZjUwZDc4OTFiNDIwMzMxZjIwMjdlNjBiYTYzODI0ZDMzNWJhZA==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2019-04-30T20:23:45Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2019-04-30T20:23:45Z"}, "message": "[GC PATCH] Correct TS marking of _EXPR nodes\n\nhttps://gcc.gnu.org/ml/gcc-patches/2019-04/msg01266.html\n\tgcc/\n\t* tree.h (MARK_TS_EXP): New.\n\n\tgcc/c-family/\n\t* c-common.c (c_common_init_ts): Use MARK_TS_EXP.  Mark SIZEOF_EXPR.\n\n\tgcc/cp/\n\t* cp-objcp-common.c (cp_common_init_ts): Use MARK_TS_EXP for _EXPR\n\tnodes.  Call c_common_init_ts.\n\nFrom-SVN: r270711", "tree": {"sha": "f1b9c4af86038992bfe1c5f2afe79dc1873aa6b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f1b9c4af86038992bfe1c5f2afe79dc1873aa6b0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/598f50d7891b420331f2027e60ba63824d335bad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/598f50d7891b420331f2027e60ba63824d335bad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/598f50d7891b420331f2027e60ba63824d335bad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/598f50d7891b420331f2027e60ba63824d335bad/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "41003284ed4f91dfa7d20afa00b9bace5feea4df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41003284ed4f91dfa7d20afa00b9bace5feea4df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/41003284ed4f91dfa7d20afa00b9bace5feea4df"}], "stats": {"total": 129, "additions": 84, "deletions": 45}, "files": [{"sha": "6de1565143c189472be586c5abf02129f8428ff3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/598f50d7891b420331f2027e60ba63824d335bad/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/598f50d7891b420331f2027e60ba63824d335bad/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=598f50d7891b420331f2027e60ba63824d335bad", "patch": "@@ -1,3 +1,7 @@\n+2019-04-30  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* tree.h (MARK_TS_EXP): New.\n+\n 2019-04-30  Martin Liska  <mliska@suse.cz>\n \n \t* opts.c (enable_warning_as_error): Provide hints"}, {"sha": "dcbac101f431863fbede285f0e0b1cbe9115301d", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/598f50d7891b420331f2027e60ba63824d335bad/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/598f50d7891b420331f2027e60ba63824d335bad/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=598f50d7891b420331f2027e60ba63824d335bad", "patch": "@@ -1,3 +1,7 @@\n+2019-04-30  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* c-common.c (c_common_init_ts): Use MARK_TS_EXP.  Mark SIZEOF_EXPR.\n+\n 2019-04-30  Martin Liska  <mliska@suse.cz>\n \n \t* c-pragma.c (handle_pragma_diagnostic): Provide hints"}, {"sha": "3c2f7a9d1c79d111963e9a81bf7f5097674a0fe0", "filename": "gcc/c-family/c-common.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/598f50d7891b420331f2027e60ba63824d335bad/gcc%2Fc-family%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/598f50d7891b420331f2027e60ba63824d335bad/gcc%2Fc-family%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.c?ref=598f50d7891b420331f2027e60ba63824d335bad", "patch": "@@ -7907,8 +7907,9 @@ keyword_is_decl_specifier (enum rid keyword)\n void\n c_common_init_ts (void)\n {\n-  MARK_TS_TYPED (C_MAYBE_CONST_EXPR);\n-  MARK_TS_TYPED (EXCESS_PRECISION_EXPR);\n+  MARK_TS_EXP (SIZEOF_EXPR);\n+  MARK_TS_EXP (C_MAYBE_CONST_EXPR);\n+  MARK_TS_EXP (EXCESS_PRECISION_EXPR);\n }\n \n /* Build a user-defined numeric literal out of an integer constant type VALUE"}, {"sha": "ec15854d22d8125640992b93216f9e5db70af095", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/598f50d7891b420331f2027e60ba63824d335bad/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/598f50d7891b420331f2027e60ba63824d335bad/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=598f50d7891b420331f2027e60ba63824d335bad", "patch": "@@ -1,3 +1,8 @@\n+2019-04-30  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* cp-objcp-common.c (cp_common_init_ts): Use MARK_TS_EXP for _EXPR\n+\tnodes.  Call c_common_init_ts.\n+\n 2019-04-29  Nathan Sidwell  <nathan@acm.org>\n \n \t* decl.c (duplicate_decls): Add whitespace, move comments into"}, {"sha": "bfd3fa6bf8d6b0a1807a419a4c924a7d0e1a0cd9", "filename": "gcc/cp/cp-objcp-common.c", "status": "modified", "additions": 64, "deletions": 43, "changes": 107, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/598f50d7891b420331f2027e60ba63824d335bad/gcc%2Fcp%2Fcp-objcp-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/598f50d7891b420331f2027e60ba63824d335bad/gcc%2Fcp%2Fcp-objcp-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-objcp-common.c?ref=598f50d7891b420331f2027e60ba63824d335bad", "patch": "@@ -386,67 +386,88 @@ cp_common_init_ts (void)\n   MARK_TS_COMMON (BOUND_TEMPLATE_TEMPLATE_PARM);\n   MARK_TS_COMMON (UNBOUND_CLASS_TEMPLATE);\n \n-  MARK_TS_TYPED (EXPR_PACK_EXPANSION);\n   MARK_TS_TYPED (SWITCH_STMT);\n   MARK_TS_TYPED (IF_STMT);\n   MARK_TS_TYPED (FOR_STMT);\n   MARK_TS_TYPED (RANGE_FOR_STMT);\n-  MARK_TS_TYPED (AGGR_INIT_EXPR);\n-  MARK_TS_TYPED (EXPR_STMT);\n   MARK_TS_TYPED (EH_SPEC_BLOCK);\n   MARK_TS_TYPED (CLEANUP_STMT);\n   MARK_TS_TYPED (SCOPE_REF);\n-  MARK_TS_TYPED (CAST_EXPR);\n-  MARK_TS_TYPED (NON_DEPENDENT_EXPR);\n-  MARK_TS_TYPED (MODOP_EXPR);\n   MARK_TS_TYPED (TRY_BLOCK);\n-  MARK_TS_TYPED (THROW_EXPR);\n   MARK_TS_TYPED (HANDLER);\n-  MARK_TS_TYPED (REINTERPRET_CAST_EXPR);\n-  MARK_TS_TYPED (CONST_CAST_EXPR);\n-  MARK_TS_TYPED (STATIC_CAST_EXPR);\n-  MARK_TS_TYPED (DYNAMIC_CAST_EXPR);\n-  MARK_TS_TYPED (IMPLICIT_CONV_EXPR);\n-  MARK_TS_TYPED (TEMPLATE_ID_EXPR);\n-  MARK_TS_TYPED (ARROW_EXPR);\n-  MARK_TS_TYPED (SIZEOF_EXPR);\n-  MARK_TS_TYPED (ALIGNOF_EXPR);\n-  MARK_TS_TYPED (AT_ENCODE_EXPR);\n-  MARK_TS_TYPED (UNARY_PLUS_EXPR);\n-  MARK_TS_TYPED (TRAIT_EXPR);\n   MARK_TS_TYPED (TYPE_ARGUMENT_PACK);\n   MARK_TS_TYPED (NOEXCEPT_EXPR);\n-  MARK_TS_TYPED (NONTYPE_ARGUMENT_PACK);\n   MARK_TS_TYPED (WHILE_STMT);\n-  MARK_TS_TYPED (NEW_EXPR);\n-  MARK_TS_TYPED (VEC_NEW_EXPR);\n   MARK_TS_TYPED (BREAK_STMT);\n-  MARK_TS_TYPED (MEMBER_REF);\n-  MARK_TS_TYPED (DOTSTAR_EXPR);\n   MARK_TS_TYPED (DO_STMT);\n-  MARK_TS_TYPED (DELETE_EXPR);\n-  MARK_TS_TYPED (VEC_DELETE_EXPR);\n   MARK_TS_TYPED (CONTINUE_STMT);\n-  MARK_TS_TYPED (TAG_DEFN);\n-  MARK_TS_TYPED (PSEUDO_DTOR_EXPR);\n-  MARK_TS_TYPED (TYPEID_EXPR);\n-  MARK_TS_TYPED (MUST_NOT_THROW_EXPR);\n-  MARK_TS_TYPED (STMT_EXPR);\n-  MARK_TS_TYPED (OFFSET_REF);\n-  MARK_TS_TYPED (OFFSETOF_EXPR);\n-  MARK_TS_TYPED (ADDRESSOF_EXPR);\n   MARK_TS_TYPED (PTRMEM_CST);\n-  MARK_TS_TYPED (EMPTY_CLASS_EXPR);\n-  MARK_TS_TYPED (VEC_INIT_EXPR);\n   MARK_TS_TYPED (USING_STMT);\n-  MARK_TS_TYPED (LAMBDA_EXPR);\n-  MARK_TS_TYPED (CTOR_INITIALIZER);\n-  MARK_TS_TYPED (REQUIRES_EXPR);\n-  MARK_TS_TYPED (UNARY_LEFT_FOLD_EXPR);\n-  MARK_TS_TYPED (UNARY_RIGHT_FOLD_EXPR);\n-  MARK_TS_TYPED (BINARY_LEFT_FOLD_EXPR);\n-  MARK_TS_TYPED (BINARY_RIGHT_FOLD_EXPR);\n   MARK_TS_TYPED (OMP_DEPOBJ);\n+\n+  MARK_TS_EXP (AGGR_INIT_EXPR);\n+  MARK_TS_EXP (CTOR_INITIALIZER);\n+  MARK_TS_EXP (EXPR_STMT);\n+  MARK_TS_EXP (TAG_DEFN);\n+  MARK_TS_EXP (EMPTY_CLASS_EXPR);\n+  MARK_TS_EXP (MODOP_EXPR);\n+  MARK_TS_EXP (THROW_EXPR);\n+  MARK_TS_EXP (CAST_EXPR);\n+  MARK_TS_EXP (TYPE_EXPR);\n+  MARK_TS_EXP (REINTERPRET_CAST_EXPR);\n+  MARK_TS_EXP (CONST_CAST_EXPR);\n+  MARK_TS_EXP (STATIC_CAST_EXPR);\n+  MARK_TS_EXP (DYNAMIC_CAST_EXPR);\n+  MARK_TS_EXP (IMPLICIT_CONV_EXPR);\n+  MARK_TS_EXP (TEMPLATE_ID_EXPR);\n+  MARK_TS_EXP (ARROW_EXPR);\n+  MARK_TS_EXP (UNARY_PLUS_EXPR);\n+  MARK_TS_EXP (TRAIT_EXPR);\n+\n+  MARK_TS_EXP (NON_DEPENDENT_EXPR);\n+  MARK_TS_EXP (NEW_EXPR);\n+  MARK_TS_EXP (VEC_NEW_EXPR);\n+  MARK_TS_EXP (MEMBER_REF);\n+  MARK_TS_EXP (DOTSTAR_EXPR);\n+  MARK_TS_EXP (DELETE_EXPR);\n+  MARK_TS_EXP (VEC_DELETE_EXPR);\n+  MARK_TS_EXP (PSEUDO_DTOR_EXPR);\n+  MARK_TS_EXP (TYPEID_EXPR);\n+  MARK_TS_EXP (MUST_NOT_THROW_EXPR);\n+  MARK_TS_EXP (STMT_EXPR);\n+  MARK_TS_EXP (OFFSET_REF);\n+  MARK_TS_EXP (OFFSETOF_EXPR);\n+  MARK_TS_EXP (ADDRESSOF_EXPR);\n+  MARK_TS_EXP (VEC_INIT_EXPR);\n+  MARK_TS_EXP (LAMBDA_EXPR);\n+\n+  MARK_TS_EXP (ALIGNOF_EXPR);\n+  MARK_TS_EXP (AT_ENCODE_EXPR);\n+\n+  MARK_TS_EXP (NONTYPE_ARGUMENT_PACK);\n+  MARK_TS_EXP (EXPR_PACK_EXPANSION);\n+  MARK_TS_EXP (UNARY_LEFT_FOLD_EXPR);\n+  MARK_TS_EXP (UNARY_RIGHT_FOLD_EXPR);\n+  MARK_TS_EXP (BINARY_LEFT_FOLD_EXPR);\n+  MARK_TS_EXP (BINARY_RIGHT_FOLD_EXPR);\n+\n+  MARK_TS_EXP (REQUIRES_EXPR);\n+  MARK_TS_EXP (SIMPLE_REQ);\n+  MARK_TS_EXP (TYPE_REQ);\n+  MARK_TS_EXP (COMPOUND_REQ);\n+  MARK_TS_EXP (NESTED_REQ);\n+  MARK_TS_EXP (PRED_CONSTR);\n+  MARK_TS_EXP (CHECK_CONSTR);\n+  MARK_TS_EXP (EXPR_CONSTR);\n+  MARK_TS_EXP (TYPE_CONSTR);\n+  MARK_TS_EXP (ICONV_CONSTR);\n+  MARK_TS_EXP (DEDUCT_CONSTR);\n+  MARK_TS_EXP (EXCEPT_CONSTR);\n+  MARK_TS_EXP (PARM_CONSTR);\n+  MARK_TS_EXP (CONJ_CONSTR);\n+  MARK_TS_EXP (DISJ_CONSTR);\n+\n+  c_common_init_ts ();\n }\n \n #include \"gt-cp-cp-objcp-common.h\""}, {"sha": "d65affea2ee174b133711df41fa263393d418a6b", "filename": "gcc/tree.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/598f50d7891b420331f2027e60ba63824d335bad/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/598f50d7891b420331f2027e60ba63824d335bad/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=598f50d7891b420331f2027e60ba63824d335bad", "patch": "@@ -114,6 +114,10 @@ as_internal_fn (combined_fn code)\n   (MARK_TS_DECL_WITH_VIS (C),\t\t\t\t\\\n    tree_contains_struct[C][TS_DECL_NON_COMMON] = true)\n \n+#define MARK_TS_EXP(C)\t\t\t\t\t\\\n+  (MARK_TS_TYPED (C),\t\t\t\t\t\\\n+   tree_contains_struct[C][TS_EXP] = true)\n+\n /* Returns the string representing CLASS.  */\n \n #define TREE_CODE_CLASS_STRING(CLASS)\\"}]}