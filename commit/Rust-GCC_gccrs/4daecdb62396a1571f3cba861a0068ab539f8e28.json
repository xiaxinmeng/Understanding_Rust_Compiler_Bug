{"sha": "4daecdb62396a1571f3cba861a0068ab539f8e28", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGRhZWNkYjYyMzk2YTE1NzFmM2NiYTg2MWEwMDY4YWI1MzlmOGUyOA==", "commit": {"author": {"name": "Janne Blomqvist", "email": "jb@gcc.gnu.org", "date": "2016-12-19T16:20:09Z"}, "committer": {"name": "Janne Blomqvist", "email": "jb@gcc.gnu.org", "date": "2016-12-19T16:20:09Z"}, "message": "Remove unused functions, take 2.\n\n2016-12-19  Janne Blomqvist  <jb@gcc.gnu.org>\n\n      * Actually remove files that should have been removed by r243799.\nThis line, and those below, will be ignored--\n\nM    libgfortran/ChangeLog\nD    libgfortran/generated/exponent_r10.c\nD    libgfortran/generated/exponent_r16.c\nD    libgfortran/generated/exponent_r4.c\nD    libgfortran/generated/exponent_r8.c\nD    libgfortran/generated/fraction_r10.c\nD    libgfortran/generated/fraction_r16.c\nD    libgfortran/generated/fraction_r4.c\nD    libgfortran/generated/fraction_r8.c\nD    libgfortran/generated/nearest_r10.c\nD    libgfortran/generated/nearest_r16.c\nD    libgfortran/generated/nearest_r4.c\nD    libgfortran/generated/nearest_r8.c\nD    libgfortran/generated/rrspacing_r10.c\nD    libgfortran/generated/rrspacing_r16.c\nD    libgfortran/generated/rrspacing_r4.c\nD    libgfortran/generated/rrspacing_r8.c\nD    libgfortran/generated/set_exponent_r10.c\nD    libgfortran/generated/set_exponent_r16.c\nD    libgfortran/generated/set_exponent_r4.c\nD    libgfortran/generated/set_exponent_r8.c\nD    libgfortran/generated/spacing_r10.c\nD    libgfortran/generated/spacing_r16.c\nD    libgfortran/generated/spacing_r4.c\nD    libgfortran/generated/spacing_r8.c\nD    libgfortran/generated/transpose_c10.c\nD    libgfortran/generated/transpose_c16.c\nD    libgfortran/generated/transpose_c4.c\nD    libgfortran/generated/transpose_c8.c\nD    libgfortran/generated/transpose_i16.c\nD    libgfortran/generated/transpose_i4.c\nD    libgfortran/generated/transpose_i8.c\nD    libgfortran/generated/transpose_r10.c\nD    libgfortran/generated/transpose_r16.c\nD    libgfortran/generated/transpose_r4.c\nD    libgfortran/generated/transpose_r8.c\nD    libgfortran/intrinsics/malloc.c\nD    libgfortran/intrinsics/transpose_generic.c\nD    libgfortran/m4/exponent.m4\nD    libgfortran/m4/fraction.m4\nD    libgfortran/m4/nearest.m4\nD    libgfortran/m4/rrspacing.m4\nD    libgfortran/m4/set_exponent.m4\nD    libgfortran/m4/spacing.m4\nD    libgfortran/m4/transpose.m4\n\nFrom-SVN: r243804", "tree": {"sha": "0b3e2a248ff3023e5cfd7d377449f03d50f300a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0b3e2a248ff3023e5cfd7d377449f03d50f300a5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4daecdb62396a1571f3cba861a0068ab539f8e28", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4daecdb62396a1571f3cba861a0068ab539f8e28", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4daecdb62396a1571f3cba861a0068ab539f8e28", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4daecdb62396a1571f3cba861a0068ab539f8e28/comments", "author": null, "committer": null, "parents": [{"sha": "03506f8cc3da48ed9303ebbd435eeaacee6629e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03506f8cc3da48ed9303ebbd435eeaacee6629e6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03506f8cc3da48ed9303ebbd435eeaacee6629e6"}], "stats": {"total": 3066, "additions": 4, "deletions": 3062}, "files": [{"sha": "f64dae2ddee5aca8fdba8e19a0970adb2a46c524", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4daecdb62396a1571f3cba861a0068ab539f8e28/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4daecdb62396a1571f3cba861a0068ab539f8e28/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=4daecdb62396a1571f3cba861a0068ab539f8e28", "patch": "@@ -1,3 +1,7 @@\n+2016-12-19  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\t* Actually remove files that should have been removed by r243799.\n+\n 2016-12-19  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n \n \t* gfortran.map: Remove _gfortran_stop_numeric_f08."}, {"sha": "b11f12f74ee3a26218f7fcf928871433c6885798", "filename": "libgfortran/generated/exponent_r10.c", "status": "removed", "additions": 0, "deletions": 45, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03506f8cc3da48ed9303ebbd435eeaacee6629e6/libgfortran%2Fgenerated%2Fexponent_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03506f8cc3da48ed9303ebbd435eeaacee6629e6/libgfortran%2Fgenerated%2Fexponent_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fexponent_r10.c?ref=03506f8cc3da48ed9303ebbd435eeaacee6629e6", "patch": "@@ -1,45 +0,0 @@\n-/* Implementation of the EXPONENT intrinsic\n-   Copyright (C) 2003-2016 Free Software Foundation, Inc.\n-   Contributed by Richard Henderson <rth@redhat.com>.\n-\n-This file is part of the GNU Fortran 95 runtime library (libgfortran).\n-\n-Libgfortran is free software; you can redistribute it and/or\n-modify it under the terms of the GNU General Public\n-License as published by the Free Software Foundation; either\n-version 3 of the License, or (at your option) any later version.\n-\n-Libgfortran is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-Under Section 7 of GPL version 3, you are granted additional\n-permissions described in the GCC Runtime Library Exception, version\n-3.1, as published by the Free Software Foundation.\n-\n-You should have received a copy of the GNU General Public License and\n-a copy of the GCC Runtime Library Exception along with this program;\n-see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n-<http://www.gnu.org/licenses/>.  */\n-\n-#include \"libgfortran.h\"\n-\n-\n-\n-#define MATHFUNC(funcname) funcname ## l\n-\n-#if defined (HAVE_GFC_REAL_10) && defined (HAVE_FREXPL)\n-\n-extern GFC_INTEGER_4 exponent_r10 (GFC_REAL_10 s);\n-export_proto(exponent_r10);\n-\n-GFC_INTEGER_4\n-exponent_r10 (GFC_REAL_10 s)\n-{\n-  int ret;\n-  MATHFUNC(frexp) (s, &ret);\n-  return ret;\n-}\n-\n-#endif"}, {"sha": "163b6fd0337c1acd770dcd4ee941ea86354c9279", "filename": "libgfortran/generated/exponent_r16.c", "status": "removed", "additions": 0, "deletions": 49, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03506f8cc3da48ed9303ebbd435eeaacee6629e6/libgfortran%2Fgenerated%2Fexponent_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03506f8cc3da48ed9303ebbd435eeaacee6629e6/libgfortran%2Fgenerated%2Fexponent_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fexponent_r16.c?ref=03506f8cc3da48ed9303ebbd435eeaacee6629e6", "patch": "@@ -1,49 +0,0 @@\n-/* Implementation of the EXPONENT intrinsic\n-   Copyright (C) 2003-2016 Free Software Foundation, Inc.\n-   Contributed by Richard Henderson <rth@redhat.com>.\n-\n-This file is part of the GNU Fortran 95 runtime library (libgfortran).\n-\n-Libgfortran is free software; you can redistribute it and/or\n-modify it under the terms of the GNU General Public\n-License as published by the Free Software Foundation; either\n-version 3 of the License, or (at your option) any later version.\n-\n-Libgfortran is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-Under Section 7 of GPL version 3, you are granted additional\n-permissions described in the GCC Runtime Library Exception, version\n-3.1, as published by the Free Software Foundation.\n-\n-You should have received a copy of the GNU General Public License and\n-a copy of the GCC Runtime Library Exception along with this program;\n-see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n-<http://www.gnu.org/licenses/>.  */\n-\n-#include \"libgfortran.h\"\n-\n-\n-\n-#if defined(GFC_REAL_16_IS_FLOAT128)\n-#define MATHFUNC(funcname) funcname ## q\n-#else\n-#define MATHFUNC(funcname) funcname ## l\n-#endif\n-\n-#if defined (HAVE_GFC_REAL_16) && (defined(GFC_REAL_16_IS_FLOAT128) || defined(HAVE_FREXPL))\n-\n-extern GFC_INTEGER_4 exponent_r16 (GFC_REAL_16 s);\n-export_proto(exponent_r16);\n-\n-GFC_INTEGER_4\n-exponent_r16 (GFC_REAL_16 s)\n-{\n-  int ret;\n-  MATHFUNC(frexp) (s, &ret);\n-  return ret;\n-}\n-\n-#endif"}, {"sha": "15d7cbadbd439f7364aadd1cadc0635ff6733059", "filename": "libgfortran/generated/exponent_r4.c", "status": "removed", "additions": 0, "deletions": 45, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03506f8cc3da48ed9303ebbd435eeaacee6629e6/libgfortran%2Fgenerated%2Fexponent_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03506f8cc3da48ed9303ebbd435eeaacee6629e6/libgfortran%2Fgenerated%2Fexponent_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fexponent_r4.c?ref=03506f8cc3da48ed9303ebbd435eeaacee6629e6", "patch": "@@ -1,45 +0,0 @@\n-/* Implementation of the EXPONENT intrinsic\n-   Copyright (C) 2003-2016 Free Software Foundation, Inc.\n-   Contributed by Richard Henderson <rth@redhat.com>.\n-\n-This file is part of the GNU Fortran 95 runtime library (libgfortran).\n-\n-Libgfortran is free software; you can redistribute it and/or\n-modify it under the terms of the GNU General Public\n-License as published by the Free Software Foundation; either\n-version 3 of the License, or (at your option) any later version.\n-\n-Libgfortran is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-Under Section 7 of GPL version 3, you are granted additional\n-permissions described in the GCC Runtime Library Exception, version\n-3.1, as published by the Free Software Foundation.\n-\n-You should have received a copy of the GNU General Public License and\n-a copy of the GCC Runtime Library Exception along with this program;\n-see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n-<http://www.gnu.org/licenses/>.  */\n-\n-#include \"libgfortran.h\"\n-\n-\n-\n-#define MATHFUNC(funcname) funcname ## f\n-\n-#if defined (HAVE_GFC_REAL_4) && defined (HAVE_FREXPF)\n-\n-extern GFC_INTEGER_4 exponent_r4 (GFC_REAL_4 s);\n-export_proto(exponent_r4);\n-\n-GFC_INTEGER_4\n-exponent_r4 (GFC_REAL_4 s)\n-{\n-  int ret;\n-  MATHFUNC(frexp) (s, &ret);\n-  return ret;\n-}\n-\n-#endif"}, {"sha": "6972cc6642fbe6612e4f5c3a5e4b4b75fbc5dc9d", "filename": "libgfortran/generated/exponent_r8.c", "status": "removed", "additions": 0, "deletions": 45, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03506f8cc3da48ed9303ebbd435eeaacee6629e6/libgfortran%2Fgenerated%2Fexponent_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03506f8cc3da48ed9303ebbd435eeaacee6629e6/libgfortran%2Fgenerated%2Fexponent_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fexponent_r8.c?ref=03506f8cc3da48ed9303ebbd435eeaacee6629e6", "patch": "@@ -1,45 +0,0 @@\n-/* Implementation of the EXPONENT intrinsic\n-   Copyright (C) 2003-2016 Free Software Foundation, Inc.\n-   Contributed by Richard Henderson <rth@redhat.com>.\n-\n-This file is part of the GNU Fortran 95 runtime library (libgfortran).\n-\n-Libgfortran is free software; you can redistribute it and/or\n-modify it under the terms of the GNU General Public\n-License as published by the Free Software Foundation; either\n-version 3 of the License, or (at your option) any later version.\n-\n-Libgfortran is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-Under Section 7 of GPL version 3, you are granted additional\n-permissions described in the GCC Runtime Library Exception, version\n-3.1, as published by the Free Software Foundation.\n-\n-You should have received a copy of the GNU General Public License and\n-a copy of the GCC Runtime Library Exception along with this program;\n-see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n-<http://www.gnu.org/licenses/>.  */\n-\n-#include \"libgfortran.h\"\n-\n-\n-\n-#define MATHFUNC(funcname) funcname\n-\n-#if defined (HAVE_GFC_REAL_8) && defined (HAVE_FREXP)\n-\n-extern GFC_INTEGER_4 exponent_r8 (GFC_REAL_8 s);\n-export_proto(exponent_r8);\n-\n-GFC_INTEGER_4\n-exponent_r8 (GFC_REAL_8 s)\n-{\n-  int ret;\n-  MATHFUNC(frexp) (s, &ret);\n-  return ret;\n-}\n-\n-#endif"}, {"sha": "0d96c3125c1d1fece8f33ed0dd6e35ba2c3dd50c", "filename": "libgfortran/generated/fraction_r10.c", "status": "removed", "additions": 0, "deletions": 44, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03506f8cc3da48ed9303ebbd435eeaacee6629e6/libgfortran%2Fgenerated%2Ffraction_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03506f8cc3da48ed9303ebbd435eeaacee6629e6/libgfortran%2Fgenerated%2Ffraction_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Ffraction_r10.c?ref=03506f8cc3da48ed9303ebbd435eeaacee6629e6", "patch": "@@ -1,44 +0,0 @@\n-/* Implementation of the FRACTION intrinsic\n-   Copyright (C) 2003-2016 Free Software Foundation, Inc.\n-   Contributed by Richard Henderson <rth@redhat.com>.\n-\n-This file is part of the GNU Fortran 95 runtime library (libgfortran).\n-\n-Libgfortran is free software; you can redistribute it and/or\n-modify it under the terms of the GNU General Public\n-License as published by the Free Software Foundation; either\n-version 3 of the License, or (at your option) any later version.\n-\n-Libgfortran is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-Under Section 7 of GPL version 3, you are granted additional\n-permissions described in the GCC Runtime Library Exception, version\n-3.1, as published by the Free Software Foundation.\n-\n-You should have received a copy of the GNU General Public License and\n-a copy of the GCC Runtime Library Exception along with this program;\n-see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n-<http://www.gnu.org/licenses/>.  */\n-\n-#include \"libgfortran.h\"\n-\n-\n-\n-#define MATHFUNC(funcname) funcname ## l\n-\n-#if defined (HAVE_GFC_REAL_10) && defined (HAVE_FREXPL)\n-\n-extern GFC_REAL_10 fraction_r10 (GFC_REAL_10 s);\n-export_proto(fraction_r10);\n-\n-GFC_REAL_10\n-fraction_r10 (GFC_REAL_10 s)\n-{\n-  int dummy_exp;\n-  return MATHFUNC(frexp) (s, &dummy_exp);\n-}\n-\n-#endif"}, {"sha": "6ec0f8074b285a2066d7afe7b1e7f92cf00563cc", "filename": "libgfortran/generated/fraction_r16.c", "status": "removed", "additions": 0, "deletions": 48, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03506f8cc3da48ed9303ebbd435eeaacee6629e6/libgfortran%2Fgenerated%2Ffraction_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03506f8cc3da48ed9303ebbd435eeaacee6629e6/libgfortran%2Fgenerated%2Ffraction_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Ffraction_r16.c?ref=03506f8cc3da48ed9303ebbd435eeaacee6629e6", "patch": "@@ -1,48 +0,0 @@\n-/* Implementation of the FRACTION intrinsic\n-   Copyright (C) 2003-2016 Free Software Foundation, Inc.\n-   Contributed by Richard Henderson <rth@redhat.com>.\n-\n-This file is part of the GNU Fortran 95 runtime library (libgfortran).\n-\n-Libgfortran is free software; you can redistribute it and/or\n-modify it under the terms of the GNU General Public\n-License as published by the Free Software Foundation; either\n-version 3 of the License, or (at your option) any later version.\n-\n-Libgfortran is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-Under Section 7 of GPL version 3, you are granted additional\n-permissions described in the GCC Runtime Library Exception, version\n-3.1, as published by the Free Software Foundation.\n-\n-You should have received a copy of the GNU General Public License and\n-a copy of the GCC Runtime Library Exception along with this program;\n-see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n-<http://www.gnu.org/licenses/>.  */\n-\n-#include \"libgfortran.h\"\n-\n-\n-\n-#if defined(GFC_REAL_16_IS_FLOAT128)\n-#define MATHFUNC(funcname) funcname ## q\n-#else\n-#define MATHFUNC(funcname) funcname ## l\n-#endif\n-\n-#if defined (HAVE_GFC_REAL_16) && (defined(GFC_REAL_16_IS_FLOAT128) || defined(HAVE_FREXPL))\n-\n-extern GFC_REAL_16 fraction_r16 (GFC_REAL_16 s);\n-export_proto(fraction_r16);\n-\n-GFC_REAL_16\n-fraction_r16 (GFC_REAL_16 s)\n-{\n-  int dummy_exp;\n-  return MATHFUNC(frexp) (s, &dummy_exp);\n-}\n-\n-#endif"}, {"sha": "817da4ea04c47f4e7073ea9f0d1f9958720e2f63", "filename": "libgfortran/generated/fraction_r4.c", "status": "removed", "additions": 0, "deletions": 44, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03506f8cc3da48ed9303ebbd435eeaacee6629e6/libgfortran%2Fgenerated%2Ffraction_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03506f8cc3da48ed9303ebbd435eeaacee6629e6/libgfortran%2Fgenerated%2Ffraction_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Ffraction_r4.c?ref=03506f8cc3da48ed9303ebbd435eeaacee6629e6", "patch": "@@ -1,44 +0,0 @@\n-/* Implementation of the FRACTION intrinsic\n-   Copyright (C) 2003-2016 Free Software Foundation, Inc.\n-   Contributed by Richard Henderson <rth@redhat.com>.\n-\n-This file is part of the GNU Fortran 95 runtime library (libgfortran).\n-\n-Libgfortran is free software; you can redistribute it and/or\n-modify it under the terms of the GNU General Public\n-License as published by the Free Software Foundation; either\n-version 3 of the License, or (at your option) any later version.\n-\n-Libgfortran is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-Under Section 7 of GPL version 3, you are granted additional\n-permissions described in the GCC Runtime Library Exception, version\n-3.1, as published by the Free Software Foundation.\n-\n-You should have received a copy of the GNU General Public License and\n-a copy of the GCC Runtime Library Exception along with this program;\n-see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n-<http://www.gnu.org/licenses/>.  */\n-\n-#include \"libgfortran.h\"\n-\n-\n-\n-#define MATHFUNC(funcname) funcname ## f\n-\n-#if defined (HAVE_GFC_REAL_4) && defined (HAVE_FREXPF)\n-\n-extern GFC_REAL_4 fraction_r4 (GFC_REAL_4 s);\n-export_proto(fraction_r4);\n-\n-GFC_REAL_4\n-fraction_r4 (GFC_REAL_4 s)\n-{\n-  int dummy_exp;\n-  return MATHFUNC(frexp) (s, &dummy_exp);\n-}\n-\n-#endif"}, {"sha": "4081d261e8b568585f1f7d592ef86b31d13b9e7c", "filename": "libgfortran/generated/fraction_r8.c", "status": "removed", "additions": 0, "deletions": 44, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03506f8cc3da48ed9303ebbd435eeaacee6629e6/libgfortran%2Fgenerated%2Ffraction_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03506f8cc3da48ed9303ebbd435eeaacee6629e6/libgfortran%2Fgenerated%2Ffraction_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Ffraction_r8.c?ref=03506f8cc3da48ed9303ebbd435eeaacee6629e6", "patch": "@@ -1,44 +0,0 @@\n-/* Implementation of the FRACTION intrinsic\n-   Copyright (C) 2003-2016 Free Software Foundation, Inc.\n-   Contributed by Richard Henderson <rth@redhat.com>.\n-\n-This file is part of the GNU Fortran 95 runtime library (libgfortran).\n-\n-Libgfortran is free software; you can redistribute it and/or\n-modify it under the terms of the GNU General Public\n-License as published by the Free Software Foundation; either\n-version 3 of the License, or (at your option) any later version.\n-\n-Libgfortran is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-Under Section 7 of GPL version 3, you are granted additional\n-permissions described in the GCC Runtime Library Exception, version\n-3.1, as published by the Free Software Foundation.\n-\n-You should have received a copy of the GNU General Public License and\n-a copy of the GCC Runtime Library Exception along with this program;\n-see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n-<http://www.gnu.org/licenses/>.  */\n-\n-#include \"libgfortran.h\"\n-\n-\n-\n-#define MATHFUNC(funcname) funcname\n-\n-#if defined (HAVE_GFC_REAL_8) && defined (HAVE_FREXP)\n-\n-extern GFC_REAL_8 fraction_r8 (GFC_REAL_8 s);\n-export_proto(fraction_r8);\n-\n-GFC_REAL_8\n-fraction_r8 (GFC_REAL_8 s)\n-{\n-  int dummy_exp;\n-  return MATHFUNC(frexp) (s, &dummy_exp);\n-}\n-\n-#endif"}, {"sha": "aa5ff8b7699b21d8df0577b2ee1e62442a7d4962", "filename": "libgfortran/generated/nearest_r10.c", "status": "removed", "additions": 0, "deletions": 51, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03506f8cc3da48ed9303ebbd435eeaacee6629e6/libgfortran%2Fgenerated%2Fnearest_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03506f8cc3da48ed9303ebbd435eeaacee6629e6/libgfortran%2Fgenerated%2Fnearest_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fnearest_r10.c?ref=03506f8cc3da48ed9303ebbd435eeaacee6629e6", "patch": "@@ -1,51 +0,0 @@\n-/* Implementation of the NEAREST intrinsic\n-   Copyright (C) 2003-2016 Free Software Foundation, Inc.\n-   Contributed by Richard Henderson <rth@redhat.com>.\n-\n-This file is part of the GNU Fortran 95 runtime library (libgfortran).\n-\n-Libgfortran is free software; you can redistribute it and/or\n-modify it under the terms of the GNU General Public\n-License as published by the Free Software Foundation; either\n-version 3 of the License, or (at your option) any later version.\n-\n-Libgfortran is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-Under Section 7 of GPL version 3, you are granted additional\n-permissions described in the GCC Runtime Library Exception, version\n-3.1, as published by the Free Software Foundation.\n-\n-You should have received a copy of the GNU General Public License and\n-a copy of the GCC Runtime Library Exception along with this program;\n-see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n-<http://www.gnu.org/licenses/>.  */\n-\n-#include \"libgfortran.h\"\n-\n-\n-\n-#define MATHFUNC(funcname) funcname ## l\n-\n-#if defined (HAVE_GFC_REAL_10) && defined (HAVE_COPYSIGNL) && defined (HAVE_NEXTAFTERL)\n-\n-extern GFC_REAL_10 nearest_r10 (GFC_REAL_10 s, GFC_REAL_10 dir);\n-export_proto(nearest_r10);\n-\n-GFC_REAL_10\n-nearest_r10 (GFC_REAL_10 s, GFC_REAL_10 dir)\n-{\n-  dir = MATHFUNC(copysign) (MATHFUNC(__builtin_inf) (), dir);\n-  if (FLT_EVAL_METHOD != 0)\n-    {\n-      /* ??? Work around glibc bug on x86.  */\n-      volatile GFC_REAL_10 r = MATHFUNC(nextafter) (s, dir);\n-      return r;\n-    }\n-  else\n-    return MATHFUNC(nextafter) (s, dir);\n-}\n-\n-#endif"}, {"sha": "e690151331b0003f93f427b88fb3adfac66a331f", "filename": "libgfortran/generated/nearest_r16.c", "status": "removed", "additions": 0, "deletions": 55, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03506f8cc3da48ed9303ebbd435eeaacee6629e6/libgfortran%2Fgenerated%2Fnearest_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03506f8cc3da48ed9303ebbd435eeaacee6629e6/libgfortran%2Fgenerated%2Fnearest_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fnearest_r16.c?ref=03506f8cc3da48ed9303ebbd435eeaacee6629e6", "patch": "@@ -1,55 +0,0 @@\n-/* Implementation of the NEAREST intrinsic\n-   Copyright (C) 2003-2016 Free Software Foundation, Inc.\n-   Contributed by Richard Henderson <rth@redhat.com>.\n-\n-This file is part of the GNU Fortran 95 runtime library (libgfortran).\n-\n-Libgfortran is free software; you can redistribute it and/or\n-modify it under the terms of the GNU General Public\n-License as published by the Free Software Foundation; either\n-version 3 of the License, or (at your option) any later version.\n-\n-Libgfortran is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-Under Section 7 of GPL version 3, you are granted additional\n-permissions described in the GCC Runtime Library Exception, version\n-3.1, as published by the Free Software Foundation.\n-\n-You should have received a copy of the GNU General Public License and\n-a copy of the GCC Runtime Library Exception along with this program;\n-see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n-<http://www.gnu.org/licenses/>.  */\n-\n-#include \"libgfortran.h\"\n-\n-\n-\n-#if defined(GFC_REAL_16_IS_FLOAT128)\n-#define MATHFUNC(funcname) funcname ## q\n-#else\n-#define MATHFUNC(funcname) funcname ## l\n-#endif\n-\n-#if defined (HAVE_GFC_REAL_16) && (defined(GFC_REAL_16_IS_FLOAT128) || defined(HAVE_COPYSIGNL)) && (defined(GFC_REAL_16_IS_FLOAT128) || defined(HAVE_NEXTAFTERL))\n-\n-extern GFC_REAL_16 nearest_r16 (GFC_REAL_16 s, GFC_REAL_16 dir);\n-export_proto(nearest_r16);\n-\n-GFC_REAL_16\n-nearest_r16 (GFC_REAL_16 s, GFC_REAL_16 dir)\n-{\n-  dir = MATHFUNC(copysign) (MATHFUNC(__builtin_inf) (), dir);\n-  if (FLT_EVAL_METHOD != 0)\n-    {\n-      /* ??? Work around glibc bug on x86.  */\n-      volatile GFC_REAL_16 r = MATHFUNC(nextafter) (s, dir);\n-      return r;\n-    }\n-  else\n-    return MATHFUNC(nextafter) (s, dir);\n-}\n-\n-#endif"}, {"sha": "3ca83ecbf9b6786261aafb0a125df6e8f65041ab", "filename": "libgfortran/generated/nearest_r4.c", "status": "removed", "additions": 0, "deletions": 51, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03506f8cc3da48ed9303ebbd435eeaacee6629e6/libgfortran%2Fgenerated%2Fnearest_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03506f8cc3da48ed9303ebbd435eeaacee6629e6/libgfortran%2Fgenerated%2Fnearest_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fnearest_r4.c?ref=03506f8cc3da48ed9303ebbd435eeaacee6629e6", "patch": "@@ -1,51 +0,0 @@\n-/* Implementation of the NEAREST intrinsic\n-   Copyright (C) 2003-2016 Free Software Foundation, Inc.\n-   Contributed by Richard Henderson <rth@redhat.com>.\n-\n-This file is part of the GNU Fortran 95 runtime library (libgfortran).\n-\n-Libgfortran is free software; you can redistribute it and/or\n-modify it under the terms of the GNU General Public\n-License as published by the Free Software Foundation; either\n-version 3 of the License, or (at your option) any later version.\n-\n-Libgfortran is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-Under Section 7 of GPL version 3, you are granted additional\n-permissions described in the GCC Runtime Library Exception, version\n-3.1, as published by the Free Software Foundation.\n-\n-You should have received a copy of the GNU General Public License and\n-a copy of the GCC Runtime Library Exception along with this program;\n-see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n-<http://www.gnu.org/licenses/>.  */\n-\n-#include \"libgfortran.h\"\n-\n-\n-\n-#define MATHFUNC(funcname) funcname ## f\n-\n-#if defined (HAVE_GFC_REAL_4) && defined (HAVE_COPYSIGNF) && defined (HAVE_NEXTAFTERF)\n-\n-extern GFC_REAL_4 nearest_r4 (GFC_REAL_4 s, GFC_REAL_4 dir);\n-export_proto(nearest_r4);\n-\n-GFC_REAL_4\n-nearest_r4 (GFC_REAL_4 s, GFC_REAL_4 dir)\n-{\n-  dir = MATHFUNC(copysign) (MATHFUNC(__builtin_inf) (), dir);\n-  if (FLT_EVAL_METHOD != 0)\n-    {\n-      /* ??? Work around glibc bug on x86.  */\n-      volatile GFC_REAL_4 r = MATHFUNC(nextafter) (s, dir);\n-      return r;\n-    }\n-  else\n-    return MATHFUNC(nextafter) (s, dir);\n-}\n-\n-#endif"}, {"sha": "861da2ec2d3744af347a37b1f6288b90a11b79ae", "filename": "libgfortran/generated/nearest_r8.c", "status": "removed", "additions": 0, "deletions": 51, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03506f8cc3da48ed9303ebbd435eeaacee6629e6/libgfortran%2Fgenerated%2Fnearest_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03506f8cc3da48ed9303ebbd435eeaacee6629e6/libgfortran%2Fgenerated%2Fnearest_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fnearest_r8.c?ref=03506f8cc3da48ed9303ebbd435eeaacee6629e6", "patch": "@@ -1,51 +0,0 @@\n-/* Implementation of the NEAREST intrinsic\n-   Copyright (C) 2003-2016 Free Software Foundation, Inc.\n-   Contributed by Richard Henderson <rth@redhat.com>.\n-\n-This file is part of the GNU Fortran 95 runtime library (libgfortran).\n-\n-Libgfortran is free software; you can redistribute it and/or\n-modify it under the terms of the GNU General Public\n-License as published by the Free Software Foundation; either\n-version 3 of the License, or (at your option) any later version.\n-\n-Libgfortran is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-Under Section 7 of GPL version 3, you are granted additional\n-permissions described in the GCC Runtime Library Exception, version\n-3.1, as published by the Free Software Foundation.\n-\n-You should have received a copy of the GNU General Public License and\n-a copy of the GCC Runtime Library Exception along with this program;\n-see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n-<http://www.gnu.org/licenses/>.  */\n-\n-#include \"libgfortran.h\"\n-\n-\n-\n-#define MATHFUNC(funcname) funcname\n-\n-#if defined (HAVE_GFC_REAL_8) && defined (HAVE_COPYSIGN) && defined (HAVE_NEXTAFTER)\n-\n-extern GFC_REAL_8 nearest_r8 (GFC_REAL_8 s, GFC_REAL_8 dir);\n-export_proto(nearest_r8);\n-\n-GFC_REAL_8\n-nearest_r8 (GFC_REAL_8 s, GFC_REAL_8 dir)\n-{\n-  dir = MATHFUNC(copysign) (MATHFUNC(__builtin_inf) (), dir);\n-  if (FLT_EVAL_METHOD != 0)\n-    {\n-      /* ??? Work around glibc bug on x86.  */\n-      volatile GFC_REAL_8 r = MATHFUNC(nextafter) (s, dir);\n-      return r;\n-    }\n-  else\n-    return MATHFUNC(nextafter) (s, dir);\n-}\n-\n-#endif"}, {"sha": "d0c6852d0a4ba4ac0d531203cb62fc07610551cb", "filename": "libgfortran/generated/rrspacing_r10.c", "status": "removed", "additions": 0, "deletions": 54, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03506f8cc3da48ed9303ebbd435eeaacee6629e6/libgfortran%2Fgenerated%2Frrspacing_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03506f8cc3da48ed9303ebbd435eeaacee6629e6/libgfortran%2Fgenerated%2Frrspacing_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Frrspacing_r10.c?ref=03506f8cc3da48ed9303ebbd435eeaacee6629e6", "patch": "@@ -1,54 +0,0 @@\n-/* Implementation of the RRSPACING intrinsic\n-   Copyright (C) 2006-2016 Free Software Foundation, Inc.\n-   Contributed by Steven G. Kargl <kargl@gcc.gnu.org>\n-\n-This file is part of the GNU Fortran 95 runtime library (libgfortran).\n-\n-Libgfortran is free software; you can redistribute it and/or\n-modify it under the terms of the GNU General Public\n-License as published by the Free Software Foundation; either\n-version 3 of the License, or (at your option) any later version.\n-\n-Libgfortran is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-Under Section 7 of GPL version 3, you are granted additional\n-permissions described in the GCC Runtime Library Exception, version\n-3.1, as published by the Free Software Foundation.\n-\n-You should have received a copy of the GNU General Public License and\n-a copy of the GCC Runtime Library Exception along with this program;\n-see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n-<http://www.gnu.org/licenses/>.  */\n-\n-#include \"libgfortran.h\"\n-\n-\n-\n-#define MATHFUNC(funcname) funcname ## l\n-\n-#if defined (HAVE_GFC_REAL_10) && defined (HAVE_FABSL) && defined (HAVE_FREXPL)\n-\n-extern GFC_REAL_10 rrspacing_r10 (GFC_REAL_10 s, int p);\n-export_proto(rrspacing_r10);\n-\n-GFC_REAL_10\n-rrspacing_r10 (GFC_REAL_10 s, int p)\n-{\n-  int e;\n-  GFC_REAL_10 x;\n-  x = MATHFUNC(fabs) (s);\n-  if (x == 0.)\n-    return 0.;\n-  MATHFUNC(frexp) (s, &e);\n-#if defined (HAVE_LDEXPL)\n-  return MATHFUNC(ldexp) (x, p - e);\n-#else\n-  return MATHFUNC(scalbn) (x, p - e);\n-#endif\n-\n-}\n-\n-#endif"}, {"sha": "ed0c0053805d3a65a8964265e8973c7a3008768f", "filename": "libgfortran/generated/rrspacing_r16.c", "status": "removed", "additions": 0, "deletions": 58, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03506f8cc3da48ed9303ebbd435eeaacee6629e6/libgfortran%2Fgenerated%2Frrspacing_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03506f8cc3da48ed9303ebbd435eeaacee6629e6/libgfortran%2Fgenerated%2Frrspacing_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Frrspacing_r16.c?ref=03506f8cc3da48ed9303ebbd435eeaacee6629e6", "patch": "@@ -1,58 +0,0 @@\n-/* Implementation of the RRSPACING intrinsic\n-   Copyright (C) 2006-2016 Free Software Foundation, Inc.\n-   Contributed by Steven G. Kargl <kargl@gcc.gnu.org>\n-\n-This file is part of the GNU Fortran 95 runtime library (libgfortran).\n-\n-Libgfortran is free software; you can redistribute it and/or\n-modify it under the terms of the GNU General Public\n-License as published by the Free Software Foundation; either\n-version 3 of the License, or (at your option) any later version.\n-\n-Libgfortran is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-Under Section 7 of GPL version 3, you are granted additional\n-permissions described in the GCC Runtime Library Exception, version\n-3.1, as published by the Free Software Foundation.\n-\n-You should have received a copy of the GNU General Public License and\n-a copy of the GCC Runtime Library Exception along with this program;\n-see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n-<http://www.gnu.org/licenses/>.  */\n-\n-#include \"libgfortran.h\"\n-\n-\n-\n-#if defined(GFC_REAL_16_IS_FLOAT128)\n-#define MATHFUNC(funcname) funcname ## q\n-#else\n-#define MATHFUNC(funcname) funcname ## l\n-#endif\n-\n-#if defined (HAVE_GFC_REAL_16) && (defined(GFC_REAL_16_IS_FLOAT128) || defined(HAVE_FABSL)) && (defined(GFC_REAL_16_IS_FLOAT128) || defined(HAVE_FREXPL))\n-\n-extern GFC_REAL_16 rrspacing_r16 (GFC_REAL_16 s, int p);\n-export_proto(rrspacing_r16);\n-\n-GFC_REAL_16\n-rrspacing_r16 (GFC_REAL_16 s, int p)\n-{\n-  int e;\n-  GFC_REAL_16 x;\n-  x = MATHFUNC(fabs) (s);\n-  if (x == 0.)\n-    return 0.;\n-  MATHFUNC(frexp) (s, &e);\n-#if (defined(GFC_REAL_16_IS_FLOAT128) || defined(HAVE_LDEXPL))\n-  return MATHFUNC(ldexp) (x, p - e);\n-#else\n-  return MATHFUNC(scalbn) (x, p - e);\n-#endif\n-\n-}\n-\n-#endif"}, {"sha": "23c5b86e9e81b6398399105006553e5979e97f79", "filename": "libgfortran/generated/rrspacing_r4.c", "status": "removed", "additions": 0, "deletions": 54, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03506f8cc3da48ed9303ebbd435eeaacee6629e6/libgfortran%2Fgenerated%2Frrspacing_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03506f8cc3da48ed9303ebbd435eeaacee6629e6/libgfortran%2Fgenerated%2Frrspacing_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Frrspacing_r4.c?ref=03506f8cc3da48ed9303ebbd435eeaacee6629e6", "patch": "@@ -1,54 +0,0 @@\n-/* Implementation of the RRSPACING intrinsic\n-   Copyright (C) 2006-2016 Free Software Foundation, Inc.\n-   Contributed by Steven G. Kargl <kargl@gcc.gnu.org>\n-\n-This file is part of the GNU Fortran 95 runtime library (libgfortran).\n-\n-Libgfortran is free software; you can redistribute it and/or\n-modify it under the terms of the GNU General Public\n-License as published by the Free Software Foundation; either\n-version 3 of the License, or (at your option) any later version.\n-\n-Libgfortran is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-Under Section 7 of GPL version 3, you are granted additional\n-permissions described in the GCC Runtime Library Exception, version\n-3.1, as published by the Free Software Foundation.\n-\n-You should have received a copy of the GNU General Public License and\n-a copy of the GCC Runtime Library Exception along with this program;\n-see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n-<http://www.gnu.org/licenses/>.  */\n-\n-#include \"libgfortran.h\"\n-\n-\n-\n-#define MATHFUNC(funcname) funcname ## f\n-\n-#if defined (HAVE_GFC_REAL_4) && defined (HAVE_FABSF) && defined (HAVE_FREXPF)\n-\n-extern GFC_REAL_4 rrspacing_r4 (GFC_REAL_4 s, int p);\n-export_proto(rrspacing_r4);\n-\n-GFC_REAL_4\n-rrspacing_r4 (GFC_REAL_4 s, int p)\n-{\n-  int e;\n-  GFC_REAL_4 x;\n-  x = MATHFUNC(fabs) (s);\n-  if (x == 0.)\n-    return 0.;\n-  MATHFUNC(frexp) (s, &e);\n-#if defined (HAVE_LDEXPF)\n-  return MATHFUNC(ldexp) (x, p - e);\n-#else\n-  return MATHFUNC(scalbn) (x, p - e);\n-#endif\n-\n-}\n-\n-#endif"}, {"sha": "0a8cfef637d78d4208beab3c227f6dfa9fc749e5", "filename": "libgfortran/generated/rrspacing_r8.c", "status": "removed", "additions": 0, "deletions": 54, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03506f8cc3da48ed9303ebbd435eeaacee6629e6/libgfortran%2Fgenerated%2Frrspacing_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03506f8cc3da48ed9303ebbd435eeaacee6629e6/libgfortran%2Fgenerated%2Frrspacing_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Frrspacing_r8.c?ref=03506f8cc3da48ed9303ebbd435eeaacee6629e6", "patch": "@@ -1,54 +0,0 @@\n-/* Implementation of the RRSPACING intrinsic\n-   Copyright (C) 2006-2016 Free Software Foundation, Inc.\n-   Contributed by Steven G. Kargl <kargl@gcc.gnu.org>\n-\n-This file is part of the GNU Fortran 95 runtime library (libgfortran).\n-\n-Libgfortran is free software; you can redistribute it and/or\n-modify it under the terms of the GNU General Public\n-License as published by the Free Software Foundation; either\n-version 3 of the License, or (at your option) any later version.\n-\n-Libgfortran is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-Under Section 7 of GPL version 3, you are granted additional\n-permissions described in the GCC Runtime Library Exception, version\n-3.1, as published by the Free Software Foundation.\n-\n-You should have received a copy of the GNU General Public License and\n-a copy of the GCC Runtime Library Exception along with this program;\n-see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n-<http://www.gnu.org/licenses/>.  */\n-\n-#include \"libgfortran.h\"\n-\n-\n-\n-#define MATHFUNC(funcname) funcname\n-\n-#if defined (HAVE_GFC_REAL_8) && defined (HAVE_FABS) && defined (HAVE_FREXP)\n-\n-extern GFC_REAL_8 rrspacing_r8 (GFC_REAL_8 s, int p);\n-export_proto(rrspacing_r8);\n-\n-GFC_REAL_8\n-rrspacing_r8 (GFC_REAL_8 s, int p)\n-{\n-  int e;\n-  GFC_REAL_8 x;\n-  x = MATHFUNC(fabs) (s);\n-  if (x == 0.)\n-    return 0.;\n-  MATHFUNC(frexp) (s, &e);\n-#if defined (HAVE_LDEXP)\n-  return MATHFUNC(ldexp) (x, p - e);\n-#else\n-  return MATHFUNC(scalbn) (x, p - e);\n-#endif\n-\n-}\n-\n-#endif"}, {"sha": "de8f59dc5b0b39a94fc7a5d36cfcc2f23f0d52e8", "filename": "libgfortran/generated/set_exponent_r10.c", "status": "removed", "additions": 0, "deletions": 44, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03506f8cc3da48ed9303ebbd435eeaacee6629e6/libgfortran%2Fgenerated%2Fset_exponent_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03506f8cc3da48ed9303ebbd435eeaacee6629e6/libgfortran%2Fgenerated%2Fset_exponent_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fset_exponent_r10.c?ref=03506f8cc3da48ed9303ebbd435eeaacee6629e6", "patch": "@@ -1,44 +0,0 @@\n-/* Implementation of the SET_EXPONENT intrinsic\n-   Copyright (C) 2003-2016 Free Software Foundation, Inc.\n-   Contributed by Richard Henderson <rth@redhat.com>.\n-\n-This file is part of the GNU Fortran 95 runtime library (libgfortran).\n-\n-Libgfortran is free software; you can redistribute it and/or\n-modify it under the terms of the GNU General Public\n-License as published by the Free Software Foundation; either\n-version 3 of the License, or (at your option) any later version.\n-\n-Libgfortran is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-Under Section 7 of GPL version 3, you are granted additional\n-permissions described in the GCC Runtime Library Exception, version\n-3.1, as published by the Free Software Foundation.\n-\n-You should have received a copy of the GNU General Public License and\n-a copy of the GCC Runtime Library Exception along with this program;\n-see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n-<http://www.gnu.org/licenses/>.  */\n-\n-#include \"libgfortran.h\"\n-\n-\n-\n-#define MATHFUNC(funcname) funcname ## l\n-\n-#if defined (HAVE_GFC_REAL_10) && defined (HAVE_SCALBNL) && defined (HAVE_FREXPL)\n-\n-extern GFC_REAL_10 set_exponent_r10 (GFC_REAL_10 s, GFC_INTEGER_4 i);\n-export_proto(set_exponent_r10);\n-\n-GFC_REAL_10\n-set_exponent_r10 (GFC_REAL_10 s, GFC_INTEGER_4 i)\n-{\n-  int dummy_exp;\n-  return MATHFUNC(scalbn) (MATHFUNC(frexp) (s, &dummy_exp), i);\n-}\n-\n-#endif"}, {"sha": "1f7c8c79cdb696023cf2bfd320fcc507cd9403d3", "filename": "libgfortran/generated/set_exponent_r16.c", "status": "removed", "additions": 0, "deletions": 48, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03506f8cc3da48ed9303ebbd435eeaacee6629e6/libgfortran%2Fgenerated%2Fset_exponent_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03506f8cc3da48ed9303ebbd435eeaacee6629e6/libgfortran%2Fgenerated%2Fset_exponent_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fset_exponent_r16.c?ref=03506f8cc3da48ed9303ebbd435eeaacee6629e6", "patch": "@@ -1,48 +0,0 @@\n-/* Implementation of the SET_EXPONENT intrinsic\n-   Copyright (C) 2003-2016 Free Software Foundation, Inc.\n-   Contributed by Richard Henderson <rth@redhat.com>.\n-\n-This file is part of the GNU Fortran 95 runtime library (libgfortran).\n-\n-Libgfortran is free software; you can redistribute it and/or\n-modify it under the terms of the GNU General Public\n-License as published by the Free Software Foundation; either\n-version 3 of the License, or (at your option) any later version.\n-\n-Libgfortran is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-Under Section 7 of GPL version 3, you are granted additional\n-permissions described in the GCC Runtime Library Exception, version\n-3.1, as published by the Free Software Foundation.\n-\n-You should have received a copy of the GNU General Public License and\n-a copy of the GCC Runtime Library Exception along with this program;\n-see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n-<http://www.gnu.org/licenses/>.  */\n-\n-#include \"libgfortran.h\"\n-\n-\n-\n-#if defined(GFC_REAL_16_IS_FLOAT128)\n-#define MATHFUNC(funcname) funcname ## q\n-#else\n-#define MATHFUNC(funcname) funcname ## l\n-#endif\n-\n-#if defined (HAVE_GFC_REAL_16) && (defined(GFC_REAL_16_IS_FLOAT128) || defined(HAVE_SCALBNL)) && (defined(GFC_REAL_16_IS_FLOAT128) || defined(HAVE_FREXPL))\n-\n-extern GFC_REAL_16 set_exponent_r16 (GFC_REAL_16 s, GFC_INTEGER_4 i);\n-export_proto(set_exponent_r16);\n-\n-GFC_REAL_16\n-set_exponent_r16 (GFC_REAL_16 s, GFC_INTEGER_4 i)\n-{\n-  int dummy_exp;\n-  return MATHFUNC(scalbn) (MATHFUNC(frexp) (s, &dummy_exp), i);\n-}\n-\n-#endif"}, {"sha": "2c1708b12b09a435ca6d3a91785c4f20fba11913", "filename": "libgfortran/generated/set_exponent_r4.c", "status": "removed", "additions": 0, "deletions": 44, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03506f8cc3da48ed9303ebbd435eeaacee6629e6/libgfortran%2Fgenerated%2Fset_exponent_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03506f8cc3da48ed9303ebbd435eeaacee6629e6/libgfortran%2Fgenerated%2Fset_exponent_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fset_exponent_r4.c?ref=03506f8cc3da48ed9303ebbd435eeaacee6629e6", "patch": "@@ -1,44 +0,0 @@\n-/* Implementation of the SET_EXPONENT intrinsic\n-   Copyright (C) 2003-2016 Free Software Foundation, Inc.\n-   Contributed by Richard Henderson <rth@redhat.com>.\n-\n-This file is part of the GNU Fortran 95 runtime library (libgfortran).\n-\n-Libgfortran is free software; you can redistribute it and/or\n-modify it under the terms of the GNU General Public\n-License as published by the Free Software Foundation; either\n-version 3 of the License, or (at your option) any later version.\n-\n-Libgfortran is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-Under Section 7 of GPL version 3, you are granted additional\n-permissions described in the GCC Runtime Library Exception, version\n-3.1, as published by the Free Software Foundation.\n-\n-You should have received a copy of the GNU General Public License and\n-a copy of the GCC Runtime Library Exception along with this program;\n-see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n-<http://www.gnu.org/licenses/>.  */\n-\n-#include \"libgfortran.h\"\n-\n-\n-\n-#define MATHFUNC(funcname) funcname ## f\n-\n-#if defined (HAVE_GFC_REAL_4) && defined (HAVE_SCALBNF) && defined (HAVE_FREXPF)\n-\n-extern GFC_REAL_4 set_exponent_r4 (GFC_REAL_4 s, GFC_INTEGER_4 i);\n-export_proto(set_exponent_r4);\n-\n-GFC_REAL_4\n-set_exponent_r4 (GFC_REAL_4 s, GFC_INTEGER_4 i)\n-{\n-  int dummy_exp;\n-  return MATHFUNC(scalbn) (MATHFUNC(frexp) (s, &dummy_exp), i);\n-}\n-\n-#endif"}, {"sha": "5b64909058d649baa1f3597362c20413d0e69714", "filename": "libgfortran/generated/set_exponent_r8.c", "status": "removed", "additions": 0, "deletions": 44, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03506f8cc3da48ed9303ebbd435eeaacee6629e6/libgfortran%2Fgenerated%2Fset_exponent_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03506f8cc3da48ed9303ebbd435eeaacee6629e6/libgfortran%2Fgenerated%2Fset_exponent_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fset_exponent_r8.c?ref=03506f8cc3da48ed9303ebbd435eeaacee6629e6", "patch": "@@ -1,44 +0,0 @@\n-/* Implementation of the SET_EXPONENT intrinsic\n-   Copyright (C) 2003-2016 Free Software Foundation, Inc.\n-   Contributed by Richard Henderson <rth@redhat.com>.\n-\n-This file is part of the GNU Fortran 95 runtime library (libgfortran).\n-\n-Libgfortran is free software; you can redistribute it and/or\n-modify it under the terms of the GNU General Public\n-License as published by the Free Software Foundation; either\n-version 3 of the License, or (at your option) any later version.\n-\n-Libgfortran is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-Under Section 7 of GPL version 3, you are granted additional\n-permissions described in the GCC Runtime Library Exception, version\n-3.1, as published by the Free Software Foundation.\n-\n-You should have received a copy of the GNU General Public License and\n-a copy of the GCC Runtime Library Exception along with this program;\n-see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n-<http://www.gnu.org/licenses/>.  */\n-\n-#include \"libgfortran.h\"\n-\n-\n-\n-#define MATHFUNC(funcname) funcname\n-\n-#if defined (HAVE_GFC_REAL_8) && defined (HAVE_SCALBN) && defined (HAVE_FREXP)\n-\n-extern GFC_REAL_8 set_exponent_r8 (GFC_REAL_8 s, GFC_INTEGER_4 i);\n-export_proto(set_exponent_r8);\n-\n-GFC_REAL_8\n-set_exponent_r8 (GFC_REAL_8 s, GFC_INTEGER_4 i)\n-{\n-  int dummy_exp;\n-  return MATHFUNC(scalbn) (MATHFUNC(frexp) (s, &dummy_exp), i);\n-}\n-\n-#endif"}, {"sha": "75a7b2626ec7d53666372c62948c7e055db94753", "filename": "libgfortran/generated/spacing_r10.c", "status": "removed", "additions": 0, "deletions": 53, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03506f8cc3da48ed9303ebbd435eeaacee6629e6/libgfortran%2Fgenerated%2Fspacing_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03506f8cc3da48ed9303ebbd435eeaacee6629e6/libgfortran%2Fgenerated%2Fspacing_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fspacing_r10.c?ref=03506f8cc3da48ed9303ebbd435eeaacee6629e6", "patch": "@@ -1,53 +0,0 @@\n-/* Implementation of the SPACING intrinsic\n-   Copyright (C) 2006-2016 Free Software Foundation, Inc.\n-   Contributed by Steven G. Kargl <kargl@gcc.gnu.org>\n-\n-This file is part of the GNU Fortran 95 runtime library (libgfortran).\n-\n-Libgfortran is free software; you can redistribute it and/or\n-modify it under the terms of the GNU General Public\n-License as published by the Free Software Foundation; either\n-version 3 of the License, or (at your option) any later version.\n-\n-Libgfortran is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-Under Section 7 of GPL version 3, you are granted additional\n-permissions described in the GCC Runtime Library Exception, version\n-3.1, as published by the Free Software Foundation.\n-\n-You should have received a copy of the GNU General Public License and\n-a copy of the GCC Runtime Library Exception along with this program;\n-see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n-<http://www.gnu.org/licenses/>.  */\n-\n-#include \"libgfortran.h\"\n-\n-\n-\n-#define MATHFUNC(funcname) funcname ## l\n-\n-#if defined (HAVE_GFC_REAL_10) && defined (HAVE_FREXPL)\n-\n-extern GFC_REAL_10 spacing_r10 (GFC_REAL_10 s, int p, int emin, GFC_REAL_10 tiny);\n-export_proto(spacing_r10);\n-\n-GFC_REAL_10\n-spacing_r10 (GFC_REAL_10 s, int p, int emin, GFC_REAL_10 tiny)\n-{\n-  int e;\n-  if (s == 0.)\n-    return tiny;\n-  MATHFUNC(frexp) (s, &e);\n-  e = e - p;\n-  e = e > emin ? e : emin;\n-#if defined (HAVE_LDEXPL)\n-  return MATHFUNC(ldexp) (1., e);\n-#else\n-  return MATHFUNC(scalbn) (1., e);\n-#endif\n-}\n-\n-#endif"}, {"sha": "acff212f7e3ec567bcef56435e5eb8c23670f048", "filename": "libgfortran/generated/spacing_r16.c", "status": "removed", "additions": 0, "deletions": 57, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03506f8cc3da48ed9303ebbd435eeaacee6629e6/libgfortran%2Fgenerated%2Fspacing_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03506f8cc3da48ed9303ebbd435eeaacee6629e6/libgfortran%2Fgenerated%2Fspacing_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fspacing_r16.c?ref=03506f8cc3da48ed9303ebbd435eeaacee6629e6", "patch": "@@ -1,57 +0,0 @@\n-/* Implementation of the SPACING intrinsic\n-   Copyright (C) 2006-2016 Free Software Foundation, Inc.\n-   Contributed by Steven G. Kargl <kargl@gcc.gnu.org>\n-\n-This file is part of the GNU Fortran 95 runtime library (libgfortran).\n-\n-Libgfortran is free software; you can redistribute it and/or\n-modify it under the terms of the GNU General Public\n-License as published by the Free Software Foundation; either\n-version 3 of the License, or (at your option) any later version.\n-\n-Libgfortran is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-Under Section 7 of GPL version 3, you are granted additional\n-permissions described in the GCC Runtime Library Exception, version\n-3.1, as published by the Free Software Foundation.\n-\n-You should have received a copy of the GNU General Public License and\n-a copy of the GCC Runtime Library Exception along with this program;\n-see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n-<http://www.gnu.org/licenses/>.  */\n-\n-#include \"libgfortran.h\"\n-\n-\n-\n-#if defined(GFC_REAL_16_IS_FLOAT128)\n-#define MATHFUNC(funcname) funcname ## q\n-#else\n-#define MATHFUNC(funcname) funcname ## l\n-#endif\n-\n-#if defined (HAVE_GFC_REAL_16) && (defined(GFC_REAL_16_IS_FLOAT128) || defined(HAVE_FREXPL))\n-\n-extern GFC_REAL_16 spacing_r16 (GFC_REAL_16 s, int p, int emin, GFC_REAL_16 tiny);\n-export_proto(spacing_r16);\n-\n-GFC_REAL_16\n-spacing_r16 (GFC_REAL_16 s, int p, int emin, GFC_REAL_16 tiny)\n-{\n-  int e;\n-  if (s == 0.)\n-    return tiny;\n-  MATHFUNC(frexp) (s, &e);\n-  e = e - p;\n-  e = e > emin ? e : emin;\n-#if (defined(GFC_REAL_16_IS_FLOAT128) || defined(HAVE_LDEXPL))\n-  return MATHFUNC(ldexp) (1., e);\n-#else\n-  return MATHFUNC(scalbn) (1., e);\n-#endif\n-}\n-\n-#endif"}, {"sha": "383713f1043678456727caee07922100768c732e", "filename": "libgfortran/generated/spacing_r4.c", "status": "removed", "additions": 0, "deletions": 53, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03506f8cc3da48ed9303ebbd435eeaacee6629e6/libgfortran%2Fgenerated%2Fspacing_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03506f8cc3da48ed9303ebbd435eeaacee6629e6/libgfortran%2Fgenerated%2Fspacing_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fspacing_r4.c?ref=03506f8cc3da48ed9303ebbd435eeaacee6629e6", "patch": "@@ -1,53 +0,0 @@\n-/* Implementation of the SPACING intrinsic\n-   Copyright (C) 2006-2016 Free Software Foundation, Inc.\n-   Contributed by Steven G. Kargl <kargl@gcc.gnu.org>\n-\n-This file is part of the GNU Fortran 95 runtime library (libgfortran).\n-\n-Libgfortran is free software; you can redistribute it and/or\n-modify it under the terms of the GNU General Public\n-License as published by the Free Software Foundation; either\n-version 3 of the License, or (at your option) any later version.\n-\n-Libgfortran is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-Under Section 7 of GPL version 3, you are granted additional\n-permissions described in the GCC Runtime Library Exception, version\n-3.1, as published by the Free Software Foundation.\n-\n-You should have received a copy of the GNU General Public License and\n-a copy of the GCC Runtime Library Exception along with this program;\n-see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n-<http://www.gnu.org/licenses/>.  */\n-\n-#include \"libgfortran.h\"\n-\n-\n-\n-#define MATHFUNC(funcname) funcname ## f\n-\n-#if defined (HAVE_GFC_REAL_4) && defined (HAVE_FREXPF)\n-\n-extern GFC_REAL_4 spacing_r4 (GFC_REAL_4 s, int p, int emin, GFC_REAL_4 tiny);\n-export_proto(spacing_r4);\n-\n-GFC_REAL_4\n-spacing_r4 (GFC_REAL_4 s, int p, int emin, GFC_REAL_4 tiny)\n-{\n-  int e;\n-  if (s == 0.)\n-    return tiny;\n-  MATHFUNC(frexp) (s, &e);\n-  e = e - p;\n-  e = e > emin ? e : emin;\n-#if defined (HAVE_LDEXPF)\n-  return MATHFUNC(ldexp) (1., e);\n-#else\n-  return MATHFUNC(scalbn) (1., e);\n-#endif\n-}\n-\n-#endif"}, {"sha": "26419106ad9a224db919c947a6415a7bfe08ff36", "filename": "libgfortran/generated/spacing_r8.c", "status": "removed", "additions": 0, "deletions": 53, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03506f8cc3da48ed9303ebbd435eeaacee6629e6/libgfortran%2Fgenerated%2Fspacing_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03506f8cc3da48ed9303ebbd435eeaacee6629e6/libgfortran%2Fgenerated%2Fspacing_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fspacing_r8.c?ref=03506f8cc3da48ed9303ebbd435eeaacee6629e6", "patch": "@@ -1,53 +0,0 @@\n-/* Implementation of the SPACING intrinsic\n-   Copyright (C) 2006-2016 Free Software Foundation, Inc.\n-   Contributed by Steven G. Kargl <kargl@gcc.gnu.org>\n-\n-This file is part of the GNU Fortran 95 runtime library (libgfortran).\n-\n-Libgfortran is free software; you can redistribute it and/or\n-modify it under the terms of the GNU General Public\n-License as published by the Free Software Foundation; either\n-version 3 of the License, or (at your option) any later version.\n-\n-Libgfortran is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-Under Section 7 of GPL version 3, you are granted additional\n-permissions described in the GCC Runtime Library Exception, version\n-3.1, as published by the Free Software Foundation.\n-\n-You should have received a copy of the GNU General Public License and\n-a copy of the GCC Runtime Library Exception along with this program;\n-see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n-<http://www.gnu.org/licenses/>.  */\n-\n-#include \"libgfortran.h\"\n-\n-\n-\n-#define MATHFUNC(funcname) funcname\n-\n-#if defined (HAVE_GFC_REAL_8) && defined (HAVE_FREXP)\n-\n-extern GFC_REAL_8 spacing_r8 (GFC_REAL_8 s, int p, int emin, GFC_REAL_8 tiny);\n-export_proto(spacing_r8);\n-\n-GFC_REAL_8\n-spacing_r8 (GFC_REAL_8 s, int p, int emin, GFC_REAL_8 tiny)\n-{\n-  int e;\n-  if (s == 0.)\n-    return tiny;\n-  MATHFUNC(frexp) (s, &e);\n-  e = e - p;\n-  e = e > emin ? e : emin;\n-#if defined (HAVE_LDEXP)\n-  return MATHFUNC(ldexp) (1., e);\n-#else\n-  return MATHFUNC(scalbn) (1., e);\n-#endif\n-}\n-\n-#endif"}, {"sha": "67f82f863fc203d175172f883e811e8d3c2fbed3", "filename": "libgfortran/generated/transpose_c10.c", "status": "removed", "additions": 0, "deletions": 115, "changes": 115, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03506f8cc3da48ed9303ebbd435eeaacee6629e6/libgfortran%2Fgenerated%2Ftranspose_c10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03506f8cc3da48ed9303ebbd435eeaacee6629e6/libgfortran%2Fgenerated%2Ftranspose_c10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Ftranspose_c10.c?ref=03506f8cc3da48ed9303ebbd435eeaacee6629e6", "patch": "@@ -1,115 +0,0 @@\n-/* Implementation of the TRANSPOSE intrinsic\n-   Copyright (C) 2003-2016 Free Software Foundation, Inc.\n-   Contributed by Tobias Schl\ufffdter\n-\n-This file is part of the GNU Fortran runtime library (libgfortran).\n-\n-Libgfortran is free software; you can redistribute it and/or\n-modify it under the terms of the GNU General Public\n-License as published by the Free Software Foundation; either\n-version 3 of the License, or (at your option) any later version.\n-\n-Libgfortran is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-Under Section 7 of GPL version 3, you are granted additional\n-permissions described in the GCC Runtime Library Exception, version\n-3.1, as published by the Free Software Foundation.\n-\n-You should have received a copy of the GNU General Public License and\n-a copy of the GCC Runtime Library Exception along with this program;\n-see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n-<http://www.gnu.org/licenses/>.  */\n-\n-#include \"libgfortran.h\"\n-#include <assert.h>\n-\n-\n-#if defined (HAVE_GFC_COMPLEX_10)\n-\n-extern void transpose_c10 (gfc_array_c10 * const restrict ret, \n-\tgfc_array_c10 * const restrict source);\n-export_proto(transpose_c10);\n-\n-void\n-transpose_c10 (gfc_array_c10 * const restrict ret, \n-\tgfc_array_c10 * const restrict source)\n-{\n-  /* r.* indicates the return array.  */\n-  index_type rxstride, rystride;\n-  GFC_COMPLEX_10 * restrict rptr;\n-  /* s.* indicates the source array.  */\n-  index_type sxstride, systride;\n-  const GFC_COMPLEX_10 *sptr;\n-\n-  index_type xcount, ycount;\n-  index_type x, y;\n-\n-  assert (GFC_DESCRIPTOR_RANK (source) == 2);\n-\n-  if (ret->base_addr == NULL)\n-    {\n-      assert (GFC_DESCRIPTOR_RANK (ret) == 2);\n-      assert (ret->dtype == source->dtype);\n-\n-      GFC_DIMENSION_SET(ret->dim[0], 0, GFC_DESCRIPTOR_EXTENT(source,1) - 1,\n-\t\t\t1);\n-\n-      GFC_DIMENSION_SET(ret->dim[1], 0, GFC_DESCRIPTOR_EXTENT(source,0) - 1,\n-\t\t\tGFC_DESCRIPTOR_EXTENT(source, 1));\n-\n-      ret->base_addr = xmallocarray (size0 ((array_t *) ret), \n-                                     sizeof (GFC_COMPLEX_10));\n-      ret->offset = 0;\n-    } else if (unlikely (compile_options.bounds_check))\n-    {\n-      index_type ret_extent, src_extent;\n-\n-      ret_extent = GFC_DESCRIPTOR_EXTENT(ret,0);\n-      src_extent = GFC_DESCRIPTOR_EXTENT(source,1);\n-\n-      if (src_extent != ret_extent)\n-\truntime_error (\"Incorrect extent in return value of TRANSPOSE\"\n-\t\t       \" intrinsic in dimension 1: is %ld,\"\n-\t\t       \" should be %ld\", (long int) src_extent,\n-\t\t       (long int) ret_extent);\n-\n-      ret_extent = GFC_DESCRIPTOR_EXTENT(ret,1);\n-      src_extent = GFC_DESCRIPTOR_EXTENT(source,0);\n-\n-      if (src_extent != ret_extent)\n-\truntime_error (\"Incorrect extent in return value of TRANSPOSE\"\n-\t\t       \" intrinsic in dimension 2: is %ld,\"\n-\t\t       \" should be %ld\", (long int) src_extent,\n-\t\t       (long int) ret_extent);\n-\n-    }\n-\n-  sxstride = GFC_DESCRIPTOR_STRIDE(source,0);\n-  systride = GFC_DESCRIPTOR_STRIDE(source,1);\n-  xcount = GFC_DESCRIPTOR_EXTENT(source,0);\n-  ycount = GFC_DESCRIPTOR_EXTENT(source,1);\n-\n-  rxstride = GFC_DESCRIPTOR_STRIDE(ret,0);\n-  rystride = GFC_DESCRIPTOR_STRIDE(ret,1);\n-\n-  rptr = ret->base_addr;\n-  sptr = source->base_addr;\n-\n-  for (y=0; y < ycount; y++)\n-    {\n-      for (x=0; x < xcount; x++)\n-        {\n-          *rptr = *sptr;\n-\n-          sptr += sxstride;\n-          rptr += rystride;\n-        }\n-        sptr += systride - (sxstride * xcount);\n-        rptr += rxstride - (rystride * xcount);\n-    }\n-}\n-\n-#endif"}, {"sha": "927fa270dfc087f2f4470ab05227bacce5830986", "filename": "libgfortran/generated/transpose_c16.c", "status": "removed", "additions": 0, "deletions": 115, "changes": 115, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03506f8cc3da48ed9303ebbd435eeaacee6629e6/libgfortran%2Fgenerated%2Ftranspose_c16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03506f8cc3da48ed9303ebbd435eeaacee6629e6/libgfortran%2Fgenerated%2Ftranspose_c16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Ftranspose_c16.c?ref=03506f8cc3da48ed9303ebbd435eeaacee6629e6", "patch": "@@ -1,115 +0,0 @@\n-/* Implementation of the TRANSPOSE intrinsic\n-   Copyright (C) 2003-2016 Free Software Foundation, Inc.\n-   Contributed by Tobias Schl\ufffdter\n-\n-This file is part of the GNU Fortran runtime library (libgfortran).\n-\n-Libgfortran is free software; you can redistribute it and/or\n-modify it under the terms of the GNU General Public\n-License as published by the Free Software Foundation; either\n-version 3 of the License, or (at your option) any later version.\n-\n-Libgfortran is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-Under Section 7 of GPL version 3, you are granted additional\n-permissions described in the GCC Runtime Library Exception, version\n-3.1, as published by the Free Software Foundation.\n-\n-You should have received a copy of the GNU General Public License and\n-a copy of the GCC Runtime Library Exception along with this program;\n-see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n-<http://www.gnu.org/licenses/>.  */\n-\n-#include \"libgfortran.h\"\n-#include <assert.h>\n-\n-\n-#if defined (HAVE_GFC_COMPLEX_16)\n-\n-extern void transpose_c16 (gfc_array_c16 * const restrict ret, \n-\tgfc_array_c16 * const restrict source);\n-export_proto(transpose_c16);\n-\n-void\n-transpose_c16 (gfc_array_c16 * const restrict ret, \n-\tgfc_array_c16 * const restrict source)\n-{\n-  /* r.* indicates the return array.  */\n-  index_type rxstride, rystride;\n-  GFC_COMPLEX_16 * restrict rptr;\n-  /* s.* indicates the source array.  */\n-  index_type sxstride, systride;\n-  const GFC_COMPLEX_16 *sptr;\n-\n-  index_type xcount, ycount;\n-  index_type x, y;\n-\n-  assert (GFC_DESCRIPTOR_RANK (source) == 2);\n-\n-  if (ret->base_addr == NULL)\n-    {\n-      assert (GFC_DESCRIPTOR_RANK (ret) == 2);\n-      assert (ret->dtype == source->dtype);\n-\n-      GFC_DIMENSION_SET(ret->dim[0], 0, GFC_DESCRIPTOR_EXTENT(source,1) - 1,\n-\t\t\t1);\n-\n-      GFC_DIMENSION_SET(ret->dim[1], 0, GFC_DESCRIPTOR_EXTENT(source,0) - 1,\n-\t\t\tGFC_DESCRIPTOR_EXTENT(source, 1));\n-\n-      ret->base_addr = xmallocarray (size0 ((array_t *) ret), \n-                                     sizeof (GFC_COMPLEX_16));\n-      ret->offset = 0;\n-    } else if (unlikely (compile_options.bounds_check))\n-    {\n-      index_type ret_extent, src_extent;\n-\n-      ret_extent = GFC_DESCRIPTOR_EXTENT(ret,0);\n-      src_extent = GFC_DESCRIPTOR_EXTENT(source,1);\n-\n-      if (src_extent != ret_extent)\n-\truntime_error (\"Incorrect extent in return value of TRANSPOSE\"\n-\t\t       \" intrinsic in dimension 1: is %ld,\"\n-\t\t       \" should be %ld\", (long int) src_extent,\n-\t\t       (long int) ret_extent);\n-\n-      ret_extent = GFC_DESCRIPTOR_EXTENT(ret,1);\n-      src_extent = GFC_DESCRIPTOR_EXTENT(source,0);\n-\n-      if (src_extent != ret_extent)\n-\truntime_error (\"Incorrect extent in return value of TRANSPOSE\"\n-\t\t       \" intrinsic in dimension 2: is %ld,\"\n-\t\t       \" should be %ld\", (long int) src_extent,\n-\t\t       (long int) ret_extent);\n-\n-    }\n-\n-  sxstride = GFC_DESCRIPTOR_STRIDE(source,0);\n-  systride = GFC_DESCRIPTOR_STRIDE(source,1);\n-  xcount = GFC_DESCRIPTOR_EXTENT(source,0);\n-  ycount = GFC_DESCRIPTOR_EXTENT(source,1);\n-\n-  rxstride = GFC_DESCRIPTOR_STRIDE(ret,0);\n-  rystride = GFC_DESCRIPTOR_STRIDE(ret,1);\n-\n-  rptr = ret->base_addr;\n-  sptr = source->base_addr;\n-\n-  for (y=0; y < ycount; y++)\n-    {\n-      for (x=0; x < xcount; x++)\n-        {\n-          *rptr = *sptr;\n-\n-          sptr += sxstride;\n-          rptr += rystride;\n-        }\n-        sptr += systride - (sxstride * xcount);\n-        rptr += rxstride - (rystride * xcount);\n-    }\n-}\n-\n-#endif"}, {"sha": "d8811d0ebc23823b6f3823117dac5a6dc4037330", "filename": "libgfortran/generated/transpose_c4.c", "status": "removed", "additions": 0, "deletions": 115, "changes": 115, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03506f8cc3da48ed9303ebbd435eeaacee6629e6/libgfortran%2Fgenerated%2Ftranspose_c4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03506f8cc3da48ed9303ebbd435eeaacee6629e6/libgfortran%2Fgenerated%2Ftranspose_c4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Ftranspose_c4.c?ref=03506f8cc3da48ed9303ebbd435eeaacee6629e6", "patch": "@@ -1,115 +0,0 @@\n-/* Implementation of the TRANSPOSE intrinsic\n-   Copyright (C) 2003-2016 Free Software Foundation, Inc.\n-   Contributed by Tobias Schl\ufffdter\n-\n-This file is part of the GNU Fortran runtime library (libgfortran).\n-\n-Libgfortran is free software; you can redistribute it and/or\n-modify it under the terms of the GNU General Public\n-License as published by the Free Software Foundation; either\n-version 3 of the License, or (at your option) any later version.\n-\n-Libgfortran is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-Under Section 7 of GPL version 3, you are granted additional\n-permissions described in the GCC Runtime Library Exception, version\n-3.1, as published by the Free Software Foundation.\n-\n-You should have received a copy of the GNU General Public License and\n-a copy of the GCC Runtime Library Exception along with this program;\n-see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n-<http://www.gnu.org/licenses/>.  */\n-\n-#include \"libgfortran.h\"\n-#include <assert.h>\n-\n-\n-#if defined (HAVE_GFC_COMPLEX_4)\n-\n-extern void transpose_c4 (gfc_array_c4 * const restrict ret, \n-\tgfc_array_c4 * const restrict source);\n-export_proto(transpose_c4);\n-\n-void\n-transpose_c4 (gfc_array_c4 * const restrict ret, \n-\tgfc_array_c4 * const restrict source)\n-{\n-  /* r.* indicates the return array.  */\n-  index_type rxstride, rystride;\n-  GFC_COMPLEX_4 * restrict rptr;\n-  /* s.* indicates the source array.  */\n-  index_type sxstride, systride;\n-  const GFC_COMPLEX_4 *sptr;\n-\n-  index_type xcount, ycount;\n-  index_type x, y;\n-\n-  assert (GFC_DESCRIPTOR_RANK (source) == 2);\n-\n-  if (ret->base_addr == NULL)\n-    {\n-      assert (GFC_DESCRIPTOR_RANK (ret) == 2);\n-      assert (ret->dtype == source->dtype);\n-\n-      GFC_DIMENSION_SET(ret->dim[0], 0, GFC_DESCRIPTOR_EXTENT(source,1) - 1,\n-\t\t\t1);\n-\n-      GFC_DIMENSION_SET(ret->dim[1], 0, GFC_DESCRIPTOR_EXTENT(source,0) - 1,\n-\t\t\tGFC_DESCRIPTOR_EXTENT(source, 1));\n-\n-      ret->base_addr = xmallocarray (size0 ((array_t *) ret), \n-                                     sizeof (GFC_COMPLEX_4));\n-      ret->offset = 0;\n-    } else if (unlikely (compile_options.bounds_check))\n-    {\n-      index_type ret_extent, src_extent;\n-\n-      ret_extent = GFC_DESCRIPTOR_EXTENT(ret,0);\n-      src_extent = GFC_DESCRIPTOR_EXTENT(source,1);\n-\n-      if (src_extent != ret_extent)\n-\truntime_error (\"Incorrect extent in return value of TRANSPOSE\"\n-\t\t       \" intrinsic in dimension 1: is %ld,\"\n-\t\t       \" should be %ld\", (long int) src_extent,\n-\t\t       (long int) ret_extent);\n-\n-      ret_extent = GFC_DESCRIPTOR_EXTENT(ret,1);\n-      src_extent = GFC_DESCRIPTOR_EXTENT(source,0);\n-\n-      if (src_extent != ret_extent)\n-\truntime_error (\"Incorrect extent in return value of TRANSPOSE\"\n-\t\t       \" intrinsic in dimension 2: is %ld,\"\n-\t\t       \" should be %ld\", (long int) src_extent,\n-\t\t       (long int) ret_extent);\n-\n-    }\n-\n-  sxstride = GFC_DESCRIPTOR_STRIDE(source,0);\n-  systride = GFC_DESCRIPTOR_STRIDE(source,1);\n-  xcount = GFC_DESCRIPTOR_EXTENT(source,0);\n-  ycount = GFC_DESCRIPTOR_EXTENT(source,1);\n-\n-  rxstride = GFC_DESCRIPTOR_STRIDE(ret,0);\n-  rystride = GFC_DESCRIPTOR_STRIDE(ret,1);\n-\n-  rptr = ret->base_addr;\n-  sptr = source->base_addr;\n-\n-  for (y=0; y < ycount; y++)\n-    {\n-      for (x=0; x < xcount; x++)\n-        {\n-          *rptr = *sptr;\n-\n-          sptr += sxstride;\n-          rptr += rystride;\n-        }\n-        sptr += systride - (sxstride * xcount);\n-        rptr += rxstride - (rystride * xcount);\n-    }\n-}\n-\n-#endif"}, {"sha": "40a73e62bb2bc058e12688358b94999517e73267", "filename": "libgfortran/generated/transpose_c8.c", "status": "removed", "additions": 0, "deletions": 115, "changes": 115, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03506f8cc3da48ed9303ebbd435eeaacee6629e6/libgfortran%2Fgenerated%2Ftranspose_c8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03506f8cc3da48ed9303ebbd435eeaacee6629e6/libgfortran%2Fgenerated%2Ftranspose_c8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Ftranspose_c8.c?ref=03506f8cc3da48ed9303ebbd435eeaacee6629e6", "patch": "@@ -1,115 +0,0 @@\n-/* Implementation of the TRANSPOSE intrinsic\n-   Copyright (C) 2003-2016 Free Software Foundation, Inc.\n-   Contributed by Tobias Schl\ufffdter\n-\n-This file is part of the GNU Fortran runtime library (libgfortran).\n-\n-Libgfortran is free software; you can redistribute it and/or\n-modify it under the terms of the GNU General Public\n-License as published by the Free Software Foundation; either\n-version 3 of the License, or (at your option) any later version.\n-\n-Libgfortran is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-Under Section 7 of GPL version 3, you are granted additional\n-permissions described in the GCC Runtime Library Exception, version\n-3.1, as published by the Free Software Foundation.\n-\n-You should have received a copy of the GNU General Public License and\n-a copy of the GCC Runtime Library Exception along with this program;\n-see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n-<http://www.gnu.org/licenses/>.  */\n-\n-#include \"libgfortran.h\"\n-#include <assert.h>\n-\n-\n-#if defined (HAVE_GFC_COMPLEX_8)\n-\n-extern void transpose_c8 (gfc_array_c8 * const restrict ret, \n-\tgfc_array_c8 * const restrict source);\n-export_proto(transpose_c8);\n-\n-void\n-transpose_c8 (gfc_array_c8 * const restrict ret, \n-\tgfc_array_c8 * const restrict source)\n-{\n-  /* r.* indicates the return array.  */\n-  index_type rxstride, rystride;\n-  GFC_COMPLEX_8 * restrict rptr;\n-  /* s.* indicates the source array.  */\n-  index_type sxstride, systride;\n-  const GFC_COMPLEX_8 *sptr;\n-\n-  index_type xcount, ycount;\n-  index_type x, y;\n-\n-  assert (GFC_DESCRIPTOR_RANK (source) == 2);\n-\n-  if (ret->base_addr == NULL)\n-    {\n-      assert (GFC_DESCRIPTOR_RANK (ret) == 2);\n-      assert (ret->dtype == source->dtype);\n-\n-      GFC_DIMENSION_SET(ret->dim[0], 0, GFC_DESCRIPTOR_EXTENT(source,1) - 1,\n-\t\t\t1);\n-\n-      GFC_DIMENSION_SET(ret->dim[1], 0, GFC_DESCRIPTOR_EXTENT(source,0) - 1,\n-\t\t\tGFC_DESCRIPTOR_EXTENT(source, 1));\n-\n-      ret->base_addr = xmallocarray (size0 ((array_t *) ret), \n-                                     sizeof (GFC_COMPLEX_8));\n-      ret->offset = 0;\n-    } else if (unlikely (compile_options.bounds_check))\n-    {\n-      index_type ret_extent, src_extent;\n-\n-      ret_extent = GFC_DESCRIPTOR_EXTENT(ret,0);\n-      src_extent = GFC_DESCRIPTOR_EXTENT(source,1);\n-\n-      if (src_extent != ret_extent)\n-\truntime_error (\"Incorrect extent in return value of TRANSPOSE\"\n-\t\t       \" intrinsic in dimension 1: is %ld,\"\n-\t\t       \" should be %ld\", (long int) src_extent,\n-\t\t       (long int) ret_extent);\n-\n-      ret_extent = GFC_DESCRIPTOR_EXTENT(ret,1);\n-      src_extent = GFC_DESCRIPTOR_EXTENT(source,0);\n-\n-      if (src_extent != ret_extent)\n-\truntime_error (\"Incorrect extent in return value of TRANSPOSE\"\n-\t\t       \" intrinsic in dimension 2: is %ld,\"\n-\t\t       \" should be %ld\", (long int) src_extent,\n-\t\t       (long int) ret_extent);\n-\n-    }\n-\n-  sxstride = GFC_DESCRIPTOR_STRIDE(source,0);\n-  systride = GFC_DESCRIPTOR_STRIDE(source,1);\n-  xcount = GFC_DESCRIPTOR_EXTENT(source,0);\n-  ycount = GFC_DESCRIPTOR_EXTENT(source,1);\n-\n-  rxstride = GFC_DESCRIPTOR_STRIDE(ret,0);\n-  rystride = GFC_DESCRIPTOR_STRIDE(ret,1);\n-\n-  rptr = ret->base_addr;\n-  sptr = source->base_addr;\n-\n-  for (y=0; y < ycount; y++)\n-    {\n-      for (x=0; x < xcount; x++)\n-        {\n-          *rptr = *sptr;\n-\n-          sptr += sxstride;\n-          rptr += rystride;\n-        }\n-        sptr += systride - (sxstride * xcount);\n-        rptr += rxstride - (rystride * xcount);\n-    }\n-}\n-\n-#endif"}, {"sha": "6812003cce0fb740cf91f73969b5f1c424138365", "filename": "libgfortran/generated/transpose_i16.c", "status": "removed", "additions": 0, "deletions": 115, "changes": 115, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03506f8cc3da48ed9303ebbd435eeaacee6629e6/libgfortran%2Fgenerated%2Ftranspose_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03506f8cc3da48ed9303ebbd435eeaacee6629e6/libgfortran%2Fgenerated%2Ftranspose_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Ftranspose_i16.c?ref=03506f8cc3da48ed9303ebbd435eeaacee6629e6", "patch": "@@ -1,115 +0,0 @@\n-/* Implementation of the TRANSPOSE intrinsic\n-   Copyright (C) 2003-2016 Free Software Foundation, Inc.\n-   Contributed by Tobias Schl\ufffdter\n-\n-This file is part of the GNU Fortran runtime library (libgfortran).\n-\n-Libgfortran is free software; you can redistribute it and/or\n-modify it under the terms of the GNU General Public\n-License as published by the Free Software Foundation; either\n-version 3 of the License, or (at your option) any later version.\n-\n-Libgfortran is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-Under Section 7 of GPL version 3, you are granted additional\n-permissions described in the GCC Runtime Library Exception, version\n-3.1, as published by the Free Software Foundation.\n-\n-You should have received a copy of the GNU General Public License and\n-a copy of the GCC Runtime Library Exception along with this program;\n-see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n-<http://www.gnu.org/licenses/>.  */\n-\n-#include \"libgfortran.h\"\n-#include <assert.h>\n-\n-\n-#if defined (HAVE_GFC_INTEGER_16)\n-\n-extern void transpose_i16 (gfc_array_i16 * const restrict ret, \n-\tgfc_array_i16 * const restrict source);\n-export_proto(transpose_i16);\n-\n-void\n-transpose_i16 (gfc_array_i16 * const restrict ret, \n-\tgfc_array_i16 * const restrict source)\n-{\n-  /* r.* indicates the return array.  */\n-  index_type rxstride, rystride;\n-  GFC_INTEGER_16 * restrict rptr;\n-  /* s.* indicates the source array.  */\n-  index_type sxstride, systride;\n-  const GFC_INTEGER_16 *sptr;\n-\n-  index_type xcount, ycount;\n-  index_type x, y;\n-\n-  assert (GFC_DESCRIPTOR_RANK (source) == 2);\n-\n-  if (ret->base_addr == NULL)\n-    {\n-      assert (GFC_DESCRIPTOR_RANK (ret) == 2);\n-      assert (ret->dtype == source->dtype);\n-\n-      GFC_DIMENSION_SET(ret->dim[0], 0, GFC_DESCRIPTOR_EXTENT(source,1) - 1,\n-\t\t\t1);\n-\n-      GFC_DIMENSION_SET(ret->dim[1], 0, GFC_DESCRIPTOR_EXTENT(source,0) - 1,\n-\t\t\tGFC_DESCRIPTOR_EXTENT(source, 1));\n-\n-      ret->base_addr = xmallocarray (size0 ((array_t *) ret), \n-                                     sizeof (GFC_INTEGER_16));\n-      ret->offset = 0;\n-    } else if (unlikely (compile_options.bounds_check))\n-    {\n-      index_type ret_extent, src_extent;\n-\n-      ret_extent = GFC_DESCRIPTOR_EXTENT(ret,0);\n-      src_extent = GFC_DESCRIPTOR_EXTENT(source,1);\n-\n-      if (src_extent != ret_extent)\n-\truntime_error (\"Incorrect extent in return value of TRANSPOSE\"\n-\t\t       \" intrinsic in dimension 1: is %ld,\"\n-\t\t       \" should be %ld\", (long int) src_extent,\n-\t\t       (long int) ret_extent);\n-\n-      ret_extent = GFC_DESCRIPTOR_EXTENT(ret,1);\n-      src_extent = GFC_DESCRIPTOR_EXTENT(source,0);\n-\n-      if (src_extent != ret_extent)\n-\truntime_error (\"Incorrect extent in return value of TRANSPOSE\"\n-\t\t       \" intrinsic in dimension 2: is %ld,\"\n-\t\t       \" should be %ld\", (long int) src_extent,\n-\t\t       (long int) ret_extent);\n-\n-    }\n-\n-  sxstride = GFC_DESCRIPTOR_STRIDE(source,0);\n-  systride = GFC_DESCRIPTOR_STRIDE(source,1);\n-  xcount = GFC_DESCRIPTOR_EXTENT(source,0);\n-  ycount = GFC_DESCRIPTOR_EXTENT(source,1);\n-\n-  rxstride = GFC_DESCRIPTOR_STRIDE(ret,0);\n-  rystride = GFC_DESCRIPTOR_STRIDE(ret,1);\n-\n-  rptr = ret->base_addr;\n-  sptr = source->base_addr;\n-\n-  for (y=0; y < ycount; y++)\n-    {\n-      for (x=0; x < xcount; x++)\n-        {\n-          *rptr = *sptr;\n-\n-          sptr += sxstride;\n-          rptr += rystride;\n-        }\n-        sptr += systride - (sxstride * xcount);\n-        rptr += rxstride - (rystride * xcount);\n-    }\n-}\n-\n-#endif"}, {"sha": "dbc5d43c2a820bfae240744b193d405aa9a662bb", "filename": "libgfortran/generated/transpose_i4.c", "status": "removed", "additions": 0, "deletions": 115, "changes": 115, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03506f8cc3da48ed9303ebbd435eeaacee6629e6/libgfortran%2Fgenerated%2Ftranspose_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03506f8cc3da48ed9303ebbd435eeaacee6629e6/libgfortran%2Fgenerated%2Ftranspose_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Ftranspose_i4.c?ref=03506f8cc3da48ed9303ebbd435eeaacee6629e6", "patch": "@@ -1,115 +0,0 @@\n-/* Implementation of the TRANSPOSE intrinsic\n-   Copyright (C) 2003-2016 Free Software Foundation, Inc.\n-   Contributed by Tobias Schl\ufffdter\n-\n-This file is part of the GNU Fortran runtime library (libgfortran).\n-\n-Libgfortran is free software; you can redistribute it and/or\n-modify it under the terms of the GNU General Public\n-License as published by the Free Software Foundation; either\n-version 3 of the License, or (at your option) any later version.\n-\n-Libgfortran is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-Under Section 7 of GPL version 3, you are granted additional\n-permissions described in the GCC Runtime Library Exception, version\n-3.1, as published by the Free Software Foundation.\n-\n-You should have received a copy of the GNU General Public License and\n-a copy of the GCC Runtime Library Exception along with this program;\n-see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n-<http://www.gnu.org/licenses/>.  */\n-\n-#include \"libgfortran.h\"\n-#include <assert.h>\n-\n-\n-#if defined (HAVE_GFC_INTEGER_4)\n-\n-extern void transpose_i4 (gfc_array_i4 * const restrict ret, \n-\tgfc_array_i4 * const restrict source);\n-export_proto(transpose_i4);\n-\n-void\n-transpose_i4 (gfc_array_i4 * const restrict ret, \n-\tgfc_array_i4 * const restrict source)\n-{\n-  /* r.* indicates the return array.  */\n-  index_type rxstride, rystride;\n-  GFC_INTEGER_4 * restrict rptr;\n-  /* s.* indicates the source array.  */\n-  index_type sxstride, systride;\n-  const GFC_INTEGER_4 *sptr;\n-\n-  index_type xcount, ycount;\n-  index_type x, y;\n-\n-  assert (GFC_DESCRIPTOR_RANK (source) == 2);\n-\n-  if (ret->base_addr == NULL)\n-    {\n-      assert (GFC_DESCRIPTOR_RANK (ret) == 2);\n-      assert (ret->dtype == source->dtype);\n-\n-      GFC_DIMENSION_SET(ret->dim[0], 0, GFC_DESCRIPTOR_EXTENT(source,1) - 1,\n-\t\t\t1);\n-\n-      GFC_DIMENSION_SET(ret->dim[1], 0, GFC_DESCRIPTOR_EXTENT(source,0) - 1,\n-\t\t\tGFC_DESCRIPTOR_EXTENT(source, 1));\n-\n-      ret->base_addr = xmallocarray (size0 ((array_t *) ret), \n-                                     sizeof (GFC_INTEGER_4));\n-      ret->offset = 0;\n-    } else if (unlikely (compile_options.bounds_check))\n-    {\n-      index_type ret_extent, src_extent;\n-\n-      ret_extent = GFC_DESCRIPTOR_EXTENT(ret,0);\n-      src_extent = GFC_DESCRIPTOR_EXTENT(source,1);\n-\n-      if (src_extent != ret_extent)\n-\truntime_error (\"Incorrect extent in return value of TRANSPOSE\"\n-\t\t       \" intrinsic in dimension 1: is %ld,\"\n-\t\t       \" should be %ld\", (long int) src_extent,\n-\t\t       (long int) ret_extent);\n-\n-      ret_extent = GFC_DESCRIPTOR_EXTENT(ret,1);\n-      src_extent = GFC_DESCRIPTOR_EXTENT(source,0);\n-\n-      if (src_extent != ret_extent)\n-\truntime_error (\"Incorrect extent in return value of TRANSPOSE\"\n-\t\t       \" intrinsic in dimension 2: is %ld,\"\n-\t\t       \" should be %ld\", (long int) src_extent,\n-\t\t       (long int) ret_extent);\n-\n-    }\n-\n-  sxstride = GFC_DESCRIPTOR_STRIDE(source,0);\n-  systride = GFC_DESCRIPTOR_STRIDE(source,1);\n-  xcount = GFC_DESCRIPTOR_EXTENT(source,0);\n-  ycount = GFC_DESCRIPTOR_EXTENT(source,1);\n-\n-  rxstride = GFC_DESCRIPTOR_STRIDE(ret,0);\n-  rystride = GFC_DESCRIPTOR_STRIDE(ret,1);\n-\n-  rptr = ret->base_addr;\n-  sptr = source->base_addr;\n-\n-  for (y=0; y < ycount; y++)\n-    {\n-      for (x=0; x < xcount; x++)\n-        {\n-          *rptr = *sptr;\n-\n-          sptr += sxstride;\n-          rptr += rystride;\n-        }\n-        sptr += systride - (sxstride * xcount);\n-        rptr += rxstride - (rystride * xcount);\n-    }\n-}\n-\n-#endif"}, {"sha": "631eef3412646f62224fb73b3da67b64587a7783", "filename": "libgfortran/generated/transpose_i8.c", "status": "removed", "additions": 0, "deletions": 115, "changes": 115, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03506f8cc3da48ed9303ebbd435eeaacee6629e6/libgfortran%2Fgenerated%2Ftranspose_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03506f8cc3da48ed9303ebbd435eeaacee6629e6/libgfortran%2Fgenerated%2Ftranspose_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Ftranspose_i8.c?ref=03506f8cc3da48ed9303ebbd435eeaacee6629e6", "patch": "@@ -1,115 +0,0 @@\n-/* Implementation of the TRANSPOSE intrinsic\n-   Copyright (C) 2003-2016 Free Software Foundation, Inc.\n-   Contributed by Tobias Schl\ufffdter\n-\n-This file is part of the GNU Fortran runtime library (libgfortran).\n-\n-Libgfortran is free software; you can redistribute it and/or\n-modify it under the terms of the GNU General Public\n-License as published by the Free Software Foundation; either\n-version 3 of the License, or (at your option) any later version.\n-\n-Libgfortran is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-Under Section 7 of GPL version 3, you are granted additional\n-permissions described in the GCC Runtime Library Exception, version\n-3.1, as published by the Free Software Foundation.\n-\n-You should have received a copy of the GNU General Public License and\n-a copy of the GCC Runtime Library Exception along with this program;\n-see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n-<http://www.gnu.org/licenses/>.  */\n-\n-#include \"libgfortran.h\"\n-#include <assert.h>\n-\n-\n-#if defined (HAVE_GFC_INTEGER_8)\n-\n-extern void transpose_i8 (gfc_array_i8 * const restrict ret, \n-\tgfc_array_i8 * const restrict source);\n-export_proto(transpose_i8);\n-\n-void\n-transpose_i8 (gfc_array_i8 * const restrict ret, \n-\tgfc_array_i8 * const restrict source)\n-{\n-  /* r.* indicates the return array.  */\n-  index_type rxstride, rystride;\n-  GFC_INTEGER_8 * restrict rptr;\n-  /* s.* indicates the source array.  */\n-  index_type sxstride, systride;\n-  const GFC_INTEGER_8 *sptr;\n-\n-  index_type xcount, ycount;\n-  index_type x, y;\n-\n-  assert (GFC_DESCRIPTOR_RANK (source) == 2);\n-\n-  if (ret->base_addr == NULL)\n-    {\n-      assert (GFC_DESCRIPTOR_RANK (ret) == 2);\n-      assert (ret->dtype == source->dtype);\n-\n-      GFC_DIMENSION_SET(ret->dim[0], 0, GFC_DESCRIPTOR_EXTENT(source,1) - 1,\n-\t\t\t1);\n-\n-      GFC_DIMENSION_SET(ret->dim[1], 0, GFC_DESCRIPTOR_EXTENT(source,0) - 1,\n-\t\t\tGFC_DESCRIPTOR_EXTENT(source, 1));\n-\n-      ret->base_addr = xmallocarray (size0 ((array_t *) ret), \n-                                     sizeof (GFC_INTEGER_8));\n-      ret->offset = 0;\n-    } else if (unlikely (compile_options.bounds_check))\n-    {\n-      index_type ret_extent, src_extent;\n-\n-      ret_extent = GFC_DESCRIPTOR_EXTENT(ret,0);\n-      src_extent = GFC_DESCRIPTOR_EXTENT(source,1);\n-\n-      if (src_extent != ret_extent)\n-\truntime_error (\"Incorrect extent in return value of TRANSPOSE\"\n-\t\t       \" intrinsic in dimension 1: is %ld,\"\n-\t\t       \" should be %ld\", (long int) src_extent,\n-\t\t       (long int) ret_extent);\n-\n-      ret_extent = GFC_DESCRIPTOR_EXTENT(ret,1);\n-      src_extent = GFC_DESCRIPTOR_EXTENT(source,0);\n-\n-      if (src_extent != ret_extent)\n-\truntime_error (\"Incorrect extent in return value of TRANSPOSE\"\n-\t\t       \" intrinsic in dimension 2: is %ld,\"\n-\t\t       \" should be %ld\", (long int) src_extent,\n-\t\t       (long int) ret_extent);\n-\n-    }\n-\n-  sxstride = GFC_DESCRIPTOR_STRIDE(source,0);\n-  systride = GFC_DESCRIPTOR_STRIDE(source,1);\n-  xcount = GFC_DESCRIPTOR_EXTENT(source,0);\n-  ycount = GFC_DESCRIPTOR_EXTENT(source,1);\n-\n-  rxstride = GFC_DESCRIPTOR_STRIDE(ret,0);\n-  rystride = GFC_DESCRIPTOR_STRIDE(ret,1);\n-\n-  rptr = ret->base_addr;\n-  sptr = source->base_addr;\n-\n-  for (y=0; y < ycount; y++)\n-    {\n-      for (x=0; x < xcount; x++)\n-        {\n-          *rptr = *sptr;\n-\n-          sptr += sxstride;\n-          rptr += rystride;\n-        }\n-        sptr += systride - (sxstride * xcount);\n-        rptr += rxstride - (rystride * xcount);\n-    }\n-}\n-\n-#endif"}, {"sha": "8c276133bcc5fce399ce627e8236a2f5c07b142c", "filename": "libgfortran/generated/transpose_r10.c", "status": "removed", "additions": 0, "deletions": 115, "changes": 115, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03506f8cc3da48ed9303ebbd435eeaacee6629e6/libgfortran%2Fgenerated%2Ftranspose_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03506f8cc3da48ed9303ebbd435eeaacee6629e6/libgfortran%2Fgenerated%2Ftranspose_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Ftranspose_r10.c?ref=03506f8cc3da48ed9303ebbd435eeaacee6629e6", "patch": "@@ -1,115 +0,0 @@\n-/* Implementation of the TRANSPOSE intrinsic\n-   Copyright (C) 2003-2016 Free Software Foundation, Inc.\n-   Contributed by Tobias Schl\ufffdter\n-\n-This file is part of the GNU Fortran runtime library (libgfortran).\n-\n-Libgfortran is free software; you can redistribute it and/or\n-modify it under the terms of the GNU General Public\n-License as published by the Free Software Foundation; either\n-version 3 of the License, or (at your option) any later version.\n-\n-Libgfortran is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-Under Section 7 of GPL version 3, you are granted additional\n-permissions described in the GCC Runtime Library Exception, version\n-3.1, as published by the Free Software Foundation.\n-\n-You should have received a copy of the GNU General Public License and\n-a copy of the GCC Runtime Library Exception along with this program;\n-see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n-<http://www.gnu.org/licenses/>.  */\n-\n-#include \"libgfortran.h\"\n-#include <assert.h>\n-\n-\n-#if defined (HAVE_GFC_REAL_10)\n-\n-extern void transpose_r10 (gfc_array_r10 * const restrict ret, \n-\tgfc_array_r10 * const restrict source);\n-export_proto(transpose_r10);\n-\n-void\n-transpose_r10 (gfc_array_r10 * const restrict ret, \n-\tgfc_array_r10 * const restrict source)\n-{\n-  /* r.* indicates the return array.  */\n-  index_type rxstride, rystride;\n-  GFC_REAL_10 * restrict rptr;\n-  /* s.* indicates the source array.  */\n-  index_type sxstride, systride;\n-  const GFC_REAL_10 *sptr;\n-\n-  index_type xcount, ycount;\n-  index_type x, y;\n-\n-  assert (GFC_DESCRIPTOR_RANK (source) == 2);\n-\n-  if (ret->base_addr == NULL)\n-    {\n-      assert (GFC_DESCRIPTOR_RANK (ret) == 2);\n-      assert (ret->dtype == source->dtype);\n-\n-      GFC_DIMENSION_SET(ret->dim[0], 0, GFC_DESCRIPTOR_EXTENT(source,1) - 1,\n-\t\t\t1);\n-\n-      GFC_DIMENSION_SET(ret->dim[1], 0, GFC_DESCRIPTOR_EXTENT(source,0) - 1,\n-\t\t\tGFC_DESCRIPTOR_EXTENT(source, 1));\n-\n-      ret->base_addr = xmallocarray (size0 ((array_t *) ret), \n-                                     sizeof (GFC_REAL_10));\n-      ret->offset = 0;\n-    } else if (unlikely (compile_options.bounds_check))\n-    {\n-      index_type ret_extent, src_extent;\n-\n-      ret_extent = GFC_DESCRIPTOR_EXTENT(ret,0);\n-      src_extent = GFC_DESCRIPTOR_EXTENT(source,1);\n-\n-      if (src_extent != ret_extent)\n-\truntime_error (\"Incorrect extent in return value of TRANSPOSE\"\n-\t\t       \" intrinsic in dimension 1: is %ld,\"\n-\t\t       \" should be %ld\", (long int) src_extent,\n-\t\t       (long int) ret_extent);\n-\n-      ret_extent = GFC_DESCRIPTOR_EXTENT(ret,1);\n-      src_extent = GFC_DESCRIPTOR_EXTENT(source,0);\n-\n-      if (src_extent != ret_extent)\n-\truntime_error (\"Incorrect extent in return value of TRANSPOSE\"\n-\t\t       \" intrinsic in dimension 2: is %ld,\"\n-\t\t       \" should be %ld\", (long int) src_extent,\n-\t\t       (long int) ret_extent);\n-\n-    }\n-\n-  sxstride = GFC_DESCRIPTOR_STRIDE(source,0);\n-  systride = GFC_DESCRIPTOR_STRIDE(source,1);\n-  xcount = GFC_DESCRIPTOR_EXTENT(source,0);\n-  ycount = GFC_DESCRIPTOR_EXTENT(source,1);\n-\n-  rxstride = GFC_DESCRIPTOR_STRIDE(ret,0);\n-  rystride = GFC_DESCRIPTOR_STRIDE(ret,1);\n-\n-  rptr = ret->base_addr;\n-  sptr = source->base_addr;\n-\n-  for (y=0; y < ycount; y++)\n-    {\n-      for (x=0; x < xcount; x++)\n-        {\n-          *rptr = *sptr;\n-\n-          sptr += sxstride;\n-          rptr += rystride;\n-        }\n-        sptr += systride - (sxstride * xcount);\n-        rptr += rxstride - (rystride * xcount);\n-    }\n-}\n-\n-#endif"}, {"sha": "2e4fd24bfc20ca804d8534431d29192cd5ece7e2", "filename": "libgfortran/generated/transpose_r16.c", "status": "removed", "additions": 0, "deletions": 115, "changes": 115, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03506f8cc3da48ed9303ebbd435eeaacee6629e6/libgfortran%2Fgenerated%2Ftranspose_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03506f8cc3da48ed9303ebbd435eeaacee6629e6/libgfortran%2Fgenerated%2Ftranspose_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Ftranspose_r16.c?ref=03506f8cc3da48ed9303ebbd435eeaacee6629e6", "patch": "@@ -1,115 +0,0 @@\n-/* Implementation of the TRANSPOSE intrinsic\n-   Copyright (C) 2003-2016 Free Software Foundation, Inc.\n-   Contributed by Tobias Schl\ufffdter\n-\n-This file is part of the GNU Fortran runtime library (libgfortran).\n-\n-Libgfortran is free software; you can redistribute it and/or\n-modify it under the terms of the GNU General Public\n-License as published by the Free Software Foundation; either\n-version 3 of the License, or (at your option) any later version.\n-\n-Libgfortran is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-Under Section 7 of GPL version 3, you are granted additional\n-permissions described in the GCC Runtime Library Exception, version\n-3.1, as published by the Free Software Foundation.\n-\n-You should have received a copy of the GNU General Public License and\n-a copy of the GCC Runtime Library Exception along with this program;\n-see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n-<http://www.gnu.org/licenses/>.  */\n-\n-#include \"libgfortran.h\"\n-#include <assert.h>\n-\n-\n-#if defined (HAVE_GFC_REAL_16)\n-\n-extern void transpose_r16 (gfc_array_r16 * const restrict ret, \n-\tgfc_array_r16 * const restrict source);\n-export_proto(transpose_r16);\n-\n-void\n-transpose_r16 (gfc_array_r16 * const restrict ret, \n-\tgfc_array_r16 * const restrict source)\n-{\n-  /* r.* indicates the return array.  */\n-  index_type rxstride, rystride;\n-  GFC_REAL_16 * restrict rptr;\n-  /* s.* indicates the source array.  */\n-  index_type sxstride, systride;\n-  const GFC_REAL_16 *sptr;\n-\n-  index_type xcount, ycount;\n-  index_type x, y;\n-\n-  assert (GFC_DESCRIPTOR_RANK (source) == 2);\n-\n-  if (ret->base_addr == NULL)\n-    {\n-      assert (GFC_DESCRIPTOR_RANK (ret) == 2);\n-      assert (ret->dtype == source->dtype);\n-\n-      GFC_DIMENSION_SET(ret->dim[0], 0, GFC_DESCRIPTOR_EXTENT(source,1) - 1,\n-\t\t\t1);\n-\n-      GFC_DIMENSION_SET(ret->dim[1], 0, GFC_DESCRIPTOR_EXTENT(source,0) - 1,\n-\t\t\tGFC_DESCRIPTOR_EXTENT(source, 1));\n-\n-      ret->base_addr = xmallocarray (size0 ((array_t *) ret), \n-                                     sizeof (GFC_REAL_16));\n-      ret->offset = 0;\n-    } else if (unlikely (compile_options.bounds_check))\n-    {\n-      index_type ret_extent, src_extent;\n-\n-      ret_extent = GFC_DESCRIPTOR_EXTENT(ret,0);\n-      src_extent = GFC_DESCRIPTOR_EXTENT(source,1);\n-\n-      if (src_extent != ret_extent)\n-\truntime_error (\"Incorrect extent in return value of TRANSPOSE\"\n-\t\t       \" intrinsic in dimension 1: is %ld,\"\n-\t\t       \" should be %ld\", (long int) src_extent,\n-\t\t       (long int) ret_extent);\n-\n-      ret_extent = GFC_DESCRIPTOR_EXTENT(ret,1);\n-      src_extent = GFC_DESCRIPTOR_EXTENT(source,0);\n-\n-      if (src_extent != ret_extent)\n-\truntime_error (\"Incorrect extent in return value of TRANSPOSE\"\n-\t\t       \" intrinsic in dimension 2: is %ld,\"\n-\t\t       \" should be %ld\", (long int) src_extent,\n-\t\t       (long int) ret_extent);\n-\n-    }\n-\n-  sxstride = GFC_DESCRIPTOR_STRIDE(source,0);\n-  systride = GFC_DESCRIPTOR_STRIDE(source,1);\n-  xcount = GFC_DESCRIPTOR_EXTENT(source,0);\n-  ycount = GFC_DESCRIPTOR_EXTENT(source,1);\n-\n-  rxstride = GFC_DESCRIPTOR_STRIDE(ret,0);\n-  rystride = GFC_DESCRIPTOR_STRIDE(ret,1);\n-\n-  rptr = ret->base_addr;\n-  sptr = source->base_addr;\n-\n-  for (y=0; y < ycount; y++)\n-    {\n-      for (x=0; x < xcount; x++)\n-        {\n-          *rptr = *sptr;\n-\n-          sptr += sxstride;\n-          rptr += rystride;\n-        }\n-        sptr += systride - (sxstride * xcount);\n-        rptr += rxstride - (rystride * xcount);\n-    }\n-}\n-\n-#endif"}, {"sha": "d24fa9bb94a2ad86ca24c196dec5ef3eb6ae7a03", "filename": "libgfortran/generated/transpose_r4.c", "status": "removed", "additions": 0, "deletions": 115, "changes": 115, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03506f8cc3da48ed9303ebbd435eeaacee6629e6/libgfortran%2Fgenerated%2Ftranspose_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03506f8cc3da48ed9303ebbd435eeaacee6629e6/libgfortran%2Fgenerated%2Ftranspose_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Ftranspose_r4.c?ref=03506f8cc3da48ed9303ebbd435eeaacee6629e6", "patch": "@@ -1,115 +0,0 @@\n-/* Implementation of the TRANSPOSE intrinsic\n-   Copyright (C) 2003-2016 Free Software Foundation, Inc.\n-   Contributed by Tobias Schl\ufffdter\n-\n-This file is part of the GNU Fortran runtime library (libgfortran).\n-\n-Libgfortran is free software; you can redistribute it and/or\n-modify it under the terms of the GNU General Public\n-License as published by the Free Software Foundation; either\n-version 3 of the License, or (at your option) any later version.\n-\n-Libgfortran is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-Under Section 7 of GPL version 3, you are granted additional\n-permissions described in the GCC Runtime Library Exception, version\n-3.1, as published by the Free Software Foundation.\n-\n-You should have received a copy of the GNU General Public License and\n-a copy of the GCC Runtime Library Exception along with this program;\n-see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n-<http://www.gnu.org/licenses/>.  */\n-\n-#include \"libgfortran.h\"\n-#include <assert.h>\n-\n-\n-#if defined (HAVE_GFC_REAL_4)\n-\n-extern void transpose_r4 (gfc_array_r4 * const restrict ret, \n-\tgfc_array_r4 * const restrict source);\n-export_proto(transpose_r4);\n-\n-void\n-transpose_r4 (gfc_array_r4 * const restrict ret, \n-\tgfc_array_r4 * const restrict source)\n-{\n-  /* r.* indicates the return array.  */\n-  index_type rxstride, rystride;\n-  GFC_REAL_4 * restrict rptr;\n-  /* s.* indicates the source array.  */\n-  index_type sxstride, systride;\n-  const GFC_REAL_4 *sptr;\n-\n-  index_type xcount, ycount;\n-  index_type x, y;\n-\n-  assert (GFC_DESCRIPTOR_RANK (source) == 2);\n-\n-  if (ret->base_addr == NULL)\n-    {\n-      assert (GFC_DESCRIPTOR_RANK (ret) == 2);\n-      assert (ret->dtype == source->dtype);\n-\n-      GFC_DIMENSION_SET(ret->dim[0], 0, GFC_DESCRIPTOR_EXTENT(source,1) - 1,\n-\t\t\t1);\n-\n-      GFC_DIMENSION_SET(ret->dim[1], 0, GFC_DESCRIPTOR_EXTENT(source,0) - 1,\n-\t\t\tGFC_DESCRIPTOR_EXTENT(source, 1));\n-\n-      ret->base_addr = xmallocarray (size0 ((array_t *) ret), \n-                                     sizeof (GFC_REAL_4));\n-      ret->offset = 0;\n-    } else if (unlikely (compile_options.bounds_check))\n-    {\n-      index_type ret_extent, src_extent;\n-\n-      ret_extent = GFC_DESCRIPTOR_EXTENT(ret,0);\n-      src_extent = GFC_DESCRIPTOR_EXTENT(source,1);\n-\n-      if (src_extent != ret_extent)\n-\truntime_error (\"Incorrect extent in return value of TRANSPOSE\"\n-\t\t       \" intrinsic in dimension 1: is %ld,\"\n-\t\t       \" should be %ld\", (long int) src_extent,\n-\t\t       (long int) ret_extent);\n-\n-      ret_extent = GFC_DESCRIPTOR_EXTENT(ret,1);\n-      src_extent = GFC_DESCRIPTOR_EXTENT(source,0);\n-\n-      if (src_extent != ret_extent)\n-\truntime_error (\"Incorrect extent in return value of TRANSPOSE\"\n-\t\t       \" intrinsic in dimension 2: is %ld,\"\n-\t\t       \" should be %ld\", (long int) src_extent,\n-\t\t       (long int) ret_extent);\n-\n-    }\n-\n-  sxstride = GFC_DESCRIPTOR_STRIDE(source,0);\n-  systride = GFC_DESCRIPTOR_STRIDE(source,1);\n-  xcount = GFC_DESCRIPTOR_EXTENT(source,0);\n-  ycount = GFC_DESCRIPTOR_EXTENT(source,1);\n-\n-  rxstride = GFC_DESCRIPTOR_STRIDE(ret,0);\n-  rystride = GFC_DESCRIPTOR_STRIDE(ret,1);\n-\n-  rptr = ret->base_addr;\n-  sptr = source->base_addr;\n-\n-  for (y=0; y < ycount; y++)\n-    {\n-      for (x=0; x < xcount; x++)\n-        {\n-          *rptr = *sptr;\n-\n-          sptr += sxstride;\n-          rptr += rystride;\n-        }\n-        sptr += systride - (sxstride * xcount);\n-        rptr += rxstride - (rystride * xcount);\n-    }\n-}\n-\n-#endif"}, {"sha": "7834aa22f04c4fb20466daa547d23a6b99182f1a", "filename": "libgfortran/generated/transpose_r8.c", "status": "removed", "additions": 0, "deletions": 115, "changes": 115, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03506f8cc3da48ed9303ebbd435eeaacee6629e6/libgfortran%2Fgenerated%2Ftranspose_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03506f8cc3da48ed9303ebbd435eeaacee6629e6/libgfortran%2Fgenerated%2Ftranspose_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Ftranspose_r8.c?ref=03506f8cc3da48ed9303ebbd435eeaacee6629e6", "patch": "@@ -1,115 +0,0 @@\n-/* Implementation of the TRANSPOSE intrinsic\n-   Copyright (C) 2003-2016 Free Software Foundation, Inc.\n-   Contributed by Tobias Schl\ufffdter\n-\n-This file is part of the GNU Fortran runtime library (libgfortran).\n-\n-Libgfortran is free software; you can redistribute it and/or\n-modify it under the terms of the GNU General Public\n-License as published by the Free Software Foundation; either\n-version 3 of the License, or (at your option) any later version.\n-\n-Libgfortran is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-Under Section 7 of GPL version 3, you are granted additional\n-permissions described in the GCC Runtime Library Exception, version\n-3.1, as published by the Free Software Foundation.\n-\n-You should have received a copy of the GNU General Public License and\n-a copy of the GCC Runtime Library Exception along with this program;\n-see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n-<http://www.gnu.org/licenses/>.  */\n-\n-#include \"libgfortran.h\"\n-#include <assert.h>\n-\n-\n-#if defined (HAVE_GFC_REAL_8)\n-\n-extern void transpose_r8 (gfc_array_r8 * const restrict ret, \n-\tgfc_array_r8 * const restrict source);\n-export_proto(transpose_r8);\n-\n-void\n-transpose_r8 (gfc_array_r8 * const restrict ret, \n-\tgfc_array_r8 * const restrict source)\n-{\n-  /* r.* indicates the return array.  */\n-  index_type rxstride, rystride;\n-  GFC_REAL_8 * restrict rptr;\n-  /* s.* indicates the source array.  */\n-  index_type sxstride, systride;\n-  const GFC_REAL_8 *sptr;\n-\n-  index_type xcount, ycount;\n-  index_type x, y;\n-\n-  assert (GFC_DESCRIPTOR_RANK (source) == 2);\n-\n-  if (ret->base_addr == NULL)\n-    {\n-      assert (GFC_DESCRIPTOR_RANK (ret) == 2);\n-      assert (ret->dtype == source->dtype);\n-\n-      GFC_DIMENSION_SET(ret->dim[0], 0, GFC_DESCRIPTOR_EXTENT(source,1) - 1,\n-\t\t\t1);\n-\n-      GFC_DIMENSION_SET(ret->dim[1], 0, GFC_DESCRIPTOR_EXTENT(source,0) - 1,\n-\t\t\tGFC_DESCRIPTOR_EXTENT(source, 1));\n-\n-      ret->base_addr = xmallocarray (size0 ((array_t *) ret), \n-                                     sizeof (GFC_REAL_8));\n-      ret->offset = 0;\n-    } else if (unlikely (compile_options.bounds_check))\n-    {\n-      index_type ret_extent, src_extent;\n-\n-      ret_extent = GFC_DESCRIPTOR_EXTENT(ret,0);\n-      src_extent = GFC_DESCRIPTOR_EXTENT(source,1);\n-\n-      if (src_extent != ret_extent)\n-\truntime_error (\"Incorrect extent in return value of TRANSPOSE\"\n-\t\t       \" intrinsic in dimension 1: is %ld,\"\n-\t\t       \" should be %ld\", (long int) src_extent,\n-\t\t       (long int) ret_extent);\n-\n-      ret_extent = GFC_DESCRIPTOR_EXTENT(ret,1);\n-      src_extent = GFC_DESCRIPTOR_EXTENT(source,0);\n-\n-      if (src_extent != ret_extent)\n-\truntime_error (\"Incorrect extent in return value of TRANSPOSE\"\n-\t\t       \" intrinsic in dimension 2: is %ld,\"\n-\t\t       \" should be %ld\", (long int) src_extent,\n-\t\t       (long int) ret_extent);\n-\n-    }\n-\n-  sxstride = GFC_DESCRIPTOR_STRIDE(source,0);\n-  systride = GFC_DESCRIPTOR_STRIDE(source,1);\n-  xcount = GFC_DESCRIPTOR_EXTENT(source,0);\n-  ycount = GFC_DESCRIPTOR_EXTENT(source,1);\n-\n-  rxstride = GFC_DESCRIPTOR_STRIDE(ret,0);\n-  rystride = GFC_DESCRIPTOR_STRIDE(ret,1);\n-\n-  rptr = ret->base_addr;\n-  sptr = source->base_addr;\n-\n-  for (y=0; y < ycount; y++)\n-    {\n-      for (x=0; x < xcount; x++)\n-        {\n-          *rptr = *sptr;\n-\n-          sptr += sxstride;\n-          rptr += rystride;\n-        }\n-        sptr += systride - (sxstride * xcount);\n-        rptr += rxstride - (rystride * xcount);\n-    }\n-}\n-\n-#endif"}, {"sha": "2d22c8dc4066dd26e63d0396057c8947d75a7b62", "filename": "libgfortran/intrinsics/malloc.c", "status": "removed", "additions": 0, "deletions": 51, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03506f8cc3da48ed9303ebbd435eeaacee6629e6/libgfortran%2Fintrinsics%2Fmalloc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03506f8cc3da48ed9303ebbd435eeaacee6629e6/libgfortran%2Fintrinsics%2Fmalloc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Fmalloc.c?ref=03506f8cc3da48ed9303ebbd435eeaacee6629e6", "patch": "@@ -1,51 +0,0 @@\n-/* Implementation of the MALLOC and FREE intrinsics\n-   Copyright (C) 2005-2016 Free Software Foundation, Inc.\n-   Contributed by Fran\u00e7ois-Xavier Coudert <coudert@clipper.ens.fr>\n-\n-This file is part of the GNU Fortran runtime library (libgfortran).\n-\n-Libgfortran is free software; you can redistribute it and/or\n-modify it under the terms of the GNU General Public\n-License as published by the Free Software Foundation; either\n-version 3 of the License, or (at your option) any later version.\n-\n-Libgfortran is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-Under Section 7 of GPL version 3, you are granted additional\n-permissions described in the GCC Runtime Library Exception, version\n-3.1, as published by the Free Software Foundation.\n-\n-You should have received a copy of the GNU General Public License and\n-a copy of the GCC Runtime Library Exception along with this program;\n-see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n-<http://www.gnu.org/licenses/>.  */\n-\n-#include \"libgfortran.h\"\n-#include <stdlib.h>\n-\n-\n-/* The runtime MALLOC and FREE are kept here until the libgfortran ABI\n-   is broken.  The front-end now emits direct calls to the GCC's malloc()\n-   and free() built-ins.  */\n-\n-extern void PREFIX(free) (void **);\n-export_proto_np(PREFIX(free));\n-\n-void\n-PREFIX(free) (void ** ptr)\n-{\n-  free (*ptr);\n-}\n-\n-\n-extern void * PREFIX(malloc) (size_t *);\n-export_proto_np(PREFIX(malloc));\n-\n-void *\n-PREFIX(malloc) (size_t * size)\n-{\n-  return malloc (*size);\n-}"}, {"sha": "5c623cc1112aa2ee27de25f2b7aa6e7bb5c0fe92", "filename": "libgfortran/intrinsics/transpose_generic.c", "status": "removed", "additions": 0, "deletions": 151, "changes": 151, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03506f8cc3da48ed9303ebbd435eeaacee6629e6/libgfortran%2Fintrinsics%2Ftranspose_generic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03506f8cc3da48ed9303ebbd435eeaacee6629e6/libgfortran%2Fintrinsics%2Ftranspose_generic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Ftranspose_generic.c?ref=03506f8cc3da48ed9303ebbd435eeaacee6629e6", "patch": "@@ -1,151 +0,0 @@\n-/* Implementation of the TRANSPOSE intrinsic\n-   Copyright (C) 2003-2016 Free Software Foundation, Inc.\n-   Contributed by Tobias Schl\ufffdter\n-\n-This file is part of the GNU Fortran runtime library (libgfortran).\n-\n-Libgfortran is free software; you can redistribute it and/or\n-modify it under the terms of the GNU General Public\n-License as published by the Free Software Foundation; either\n-version 3 of the License, or (at your option) any later version.\n-\n-Libgfortran is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-Under Section 7 of GPL version 3, you are granted additional\n-permissions described in the GCC Runtime Library Exception, version\n-3.1, as published by the Free Software Foundation.\n-\n-You should have received a copy of the GNU General Public License and\n-a copy of the GCC Runtime Library Exception along with this program;\n-see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n-<http://www.gnu.org/licenses/>.  */\n-\n-#include \"libgfortran.h\"\n-#include <stdlib.h>\n-#include <string.h>\n-#include <assert.h>\n-\n-extern void transpose (gfc_array_char *, gfc_array_char *);\n-export_proto(transpose);\n-\n-static void\n-transpose_internal (gfc_array_char *ret, gfc_array_char *source)\n-{\n-  /* r.* indicates the return array.  */\n-  index_type rxstride, rystride;\n-  char *rptr;\n-  /* s.* indicates the source array.  */\n-  index_type sxstride, systride;\n-  const char *sptr;\n-\n-  index_type xcount, ycount;\n-  index_type x, y;\n-  index_type size;\n-\n-  assert (GFC_DESCRIPTOR_RANK (source) == 2\n-          && GFC_DESCRIPTOR_RANK (ret) == 2);\n-\n-  size = GFC_DESCRIPTOR_SIZE(ret);\n-\n-  if (ret->base_addr == NULL)\n-    {\n-      assert (ret->dtype == source->dtype);\n-\n-      GFC_DIMENSION_SET(ret->dim[0], 0, GFC_DESCRIPTOR_EXTENT(source,1) - 1,\n-\t\t\t1);\n-\n-      GFC_DIMENSION_SET(ret->dim[1], 0, GFC_DESCRIPTOR_EXTENT(source,0) - 1,\n-\t\t\tGFC_DESCRIPTOR_EXTENT(source, 1));\n-\n-      ret->base_addr = xmallocarray (size0 ((array_t*)ret), size);\n-      ret->offset = 0;\n-    }\n-  else if (unlikely (compile_options.bounds_check))\n-    {\n-      index_type ret_extent, src_extent;\n-\n-      ret_extent = GFC_DESCRIPTOR_EXTENT(ret,0);\n-      src_extent = GFC_DESCRIPTOR_EXTENT(source,1);\n-\n-      if (src_extent != ret_extent)\n-\truntime_error (\"Incorrect extent in return value of TRANSPOSE\"\n-\t\t       \" intrinsic in dimension 1: is %ld,\"\n-\t\t       \" should be %ld\", (long int) src_extent,\n-\t\t       (long int) ret_extent);\n-\n-      ret_extent = GFC_DESCRIPTOR_EXTENT(ret,1);\n-      src_extent = GFC_DESCRIPTOR_EXTENT(source,0);\n-\n-      if (src_extent != ret_extent)\n-\truntime_error (\"Incorrect extent in return value of TRANSPOSE\"\n-\t\t       \" intrinsic in dimension 2: is %ld,\"\n-\t\t       \" should be %ld\", (long int) src_extent,\n-\t\t       (long int) ret_extent);\n-\n-    }\n-\n-  sxstride = GFC_DESCRIPTOR_STRIDE_BYTES(source,0);\n-  systride = GFC_DESCRIPTOR_STRIDE_BYTES(source,1);\n-  xcount = GFC_DESCRIPTOR_EXTENT(source,0);\n-  ycount = GFC_DESCRIPTOR_EXTENT(source,1);\n-\n-  rxstride = GFC_DESCRIPTOR_STRIDE_BYTES(ret,0);\n-  rystride = GFC_DESCRIPTOR_STRIDE_BYTES(ret,1);\n-\n-  rptr = ret->base_addr;\n-  sptr = source->base_addr;\n-\n-  for (y = 0; y < ycount; y++)\n-    {\n-      for (x = 0; x < xcount; x++)\n-        {\n-          memcpy (rptr, sptr, size);\n-\n-          sptr += sxstride;\n-          rptr += rystride;\n-        }\n-      sptr += systride - (sxstride * xcount);\n-      rptr += rxstride - (rystride * xcount);\n-    }\n-}\n-\n-\n-extern void transpose (gfc_array_char *, gfc_array_char *);\n-export_proto(transpose);\n-\n-void\n-transpose (gfc_array_char *ret, gfc_array_char *source)\n-{\n-  transpose_internal (ret, source);\n-}\n-\n-\n-extern void transpose_char (gfc_array_char *, GFC_INTEGER_4,\n-\t\t\t    gfc_array_char *, GFC_INTEGER_4);\n-export_proto(transpose_char);\n-\n-void\n-transpose_char (gfc_array_char *ret,\n-\t\tGFC_INTEGER_4 ret_length __attribute__((unused)),\n-\t\tgfc_array_char *source,\n-\t\tGFC_INTEGER_4 source_length __attribute__((unused)))\n-{\n-  transpose_internal (ret, source);\n-}\n-\n-\n-extern void transpose_char4 (gfc_array_char *, GFC_INTEGER_4,\n-\t\t\t     gfc_array_char *, GFC_INTEGER_4);\n-export_proto(transpose_char4);\n-\n-void\n-transpose_char4 (gfc_array_char *ret,\n-\t\t GFC_INTEGER_4 ret_length __attribute__((unused)),\n-\t\t gfc_array_char *source,\n-\t\t GFC_INTEGER_4 source_length __attribute__((unused)))\n-{\n-  transpose_internal (ret, source);\n-}"}, {"sha": "ebadf2114d023891af6e2990b64f721a8c3dc3e9", "filename": "libgfortran/m4/exponent.m4", "status": "removed", "additions": 0, "deletions": 45, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03506f8cc3da48ed9303ebbd435eeaacee6629e6/libgfortran%2Fm4%2Fexponent.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03506f8cc3da48ed9303ebbd435eeaacee6629e6/libgfortran%2Fm4%2Fexponent.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Fexponent.m4?ref=03506f8cc3da48ed9303ebbd435eeaacee6629e6", "patch": "@@ -1,45 +0,0 @@\n-`/* Implementation of the EXPONENT intrinsic\n-   Copyright (C) 2003-2016 Free Software Foundation, Inc.\n-   Contributed by Richard Henderson <rth@redhat.com>.\n-\n-This file is part of the GNU Fortran 95 runtime library (libgfortran).\n-\n-Libgfortran is free software; you can redistribute it and/or\n-modify it under the terms of the GNU General Public\n-License as published by the Free Software Foundation; either\n-version 3 of the License, or (at your option) any later version.\n-\n-Libgfortran is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-Under Section 7 of GPL version 3, you are granted additional\n-permissions described in the GCC Runtime Library Exception, version\n-3.1, as published by the Free Software Foundation.\n-\n-You should have received a copy of the GNU General Public License and\n-a copy of the GCC Runtime Library Exception along with this program;\n-see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n-<http://www.gnu.org/licenses/>.  */\n-\n-#include \"libgfortran.h\"'\n-\n-include(`mtype.m4')dnl\n-\n-mathfunc_macro\n-\n-`#if defined (HAVE_'real_type`) && 'hasmathfunc(frexp)`\n-\n-extern GFC_INTEGER_4 exponent_r'kind` ('real_type` s);\n-export_proto(exponent_r'kind`);\n-\n-GFC_INTEGER_4\n-exponent_r'kind` ('real_type` s)\n-{\n-  int ret;\n-  MATHFUNC(frexp) (s, &ret);\n-  return ret;\n-}\n-\n-#endif'"}, {"sha": "a228ca040eed166a73a29d21291a9a4e1008d111", "filename": "libgfortran/m4/fraction.m4", "status": "removed", "additions": 0, "deletions": 44, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03506f8cc3da48ed9303ebbd435eeaacee6629e6/libgfortran%2Fm4%2Ffraction.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03506f8cc3da48ed9303ebbd435eeaacee6629e6/libgfortran%2Fm4%2Ffraction.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Ffraction.m4?ref=03506f8cc3da48ed9303ebbd435eeaacee6629e6", "patch": "@@ -1,44 +0,0 @@\n-`/* Implementation of the FRACTION intrinsic\n-   Copyright (C) 2003-2016 Free Software Foundation, Inc.\n-   Contributed by Richard Henderson <rth@redhat.com>.\n-\n-This file is part of the GNU Fortran 95 runtime library (libgfortran).\n-\n-Libgfortran is free software; you can redistribute it and/or\n-modify it under the terms of the GNU General Public\n-License as published by the Free Software Foundation; either\n-version 3 of the License, or (at your option) any later version.\n-\n-Libgfortran is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-Under Section 7 of GPL version 3, you are granted additional\n-permissions described in the GCC Runtime Library Exception, version\n-3.1, as published by the Free Software Foundation.\n-\n-You should have received a copy of the GNU General Public License and\n-a copy of the GCC Runtime Library Exception along with this program;\n-see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n-<http://www.gnu.org/licenses/>.  */\n-\n-#include \"libgfortran.h\"'\n-\n-include(`mtype.m4')dnl\n-\n-mathfunc_macro\n-\n-`#if defined (HAVE_'real_type`) && 'hasmathfunc(frexp)`\n-\n-extern 'real_type` fraction_r'kind` ('real_type` s);\n-export_proto(fraction_r'kind`);\n-\n-'real_type`\n-fraction_r'kind` ('real_type` s)\n-{\n-  int dummy_exp;\n-  return MATHFUNC(frexp) (s, &dummy_exp);\n-}\n-\n-#endif'"}, {"sha": "e4ab9f3d1aea0aeace3c6c2227d846c8d89329b6", "filename": "libgfortran/m4/nearest.m4", "status": "removed", "additions": 0, "deletions": 51, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03506f8cc3da48ed9303ebbd435eeaacee6629e6/libgfortran%2Fm4%2Fnearest.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03506f8cc3da48ed9303ebbd435eeaacee6629e6/libgfortran%2Fm4%2Fnearest.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Fnearest.m4?ref=03506f8cc3da48ed9303ebbd435eeaacee6629e6", "patch": "@@ -1,51 +0,0 @@\n-`/* Implementation of the NEAREST intrinsic\n-   Copyright (C) 2003-2016 Free Software Foundation, Inc.\n-   Contributed by Richard Henderson <rth@redhat.com>.\n-\n-This file is part of the GNU Fortran 95 runtime library (libgfortran).\n-\n-Libgfortran is free software; you can redistribute it and/or\n-modify it under the terms of the GNU General Public\n-License as published by the Free Software Foundation; either\n-version 3 of the License, or (at your option) any later version.\n-\n-Libgfortran is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-Under Section 7 of GPL version 3, you are granted additional\n-permissions described in the GCC Runtime Library Exception, version\n-3.1, as published by the Free Software Foundation.\n-\n-You should have received a copy of the GNU General Public License and\n-a copy of the GCC Runtime Library Exception along with this program;\n-see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n-<http://www.gnu.org/licenses/>.  */\n-\n-#include \"libgfortran.h\"'\n-\n-include(`mtype.m4')dnl\n-\n-mathfunc_macro\n-\n-`#if defined (HAVE_'real_type`) && 'hasmathfunc(copysign) && hasmathfunc(nextafter)`\n-\n-extern 'real_type` nearest_r'kind` ('real_type` s, 'real_type` dir);\n-export_proto(nearest_r'kind`);\n-\n-'real_type`\n-nearest_r'kind` ('real_type` s, 'real_type` dir)\n-{\n-  dir = MATHFUNC(copysign) (MATHFUNC(__builtin_inf) (), dir);\n-  if (FLT_EVAL_METHOD != 0)\n-    {\n-      /* ??? Work around glibc bug on x86.  */\n-      volatile 'real_type` r = MATHFUNC(nextafter) (s, dir);\n-      return r;\n-    }\n-  else\n-    return MATHFUNC(nextafter) (s, dir);\n-}\n-\n-#endif'"}, {"sha": "7d12327960439dfcd461c5d8f4edb43354bac977", "filename": "libgfortran/m4/rrspacing.m4", "status": "removed", "additions": 0, "deletions": 54, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03506f8cc3da48ed9303ebbd435eeaacee6629e6/libgfortran%2Fm4%2Frrspacing.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03506f8cc3da48ed9303ebbd435eeaacee6629e6/libgfortran%2Fm4%2Frrspacing.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Frrspacing.m4?ref=03506f8cc3da48ed9303ebbd435eeaacee6629e6", "patch": "@@ -1,54 +0,0 @@\n-`/* Implementation of the RRSPACING intrinsic\n-   Copyright (C) 2006-2016 Free Software Foundation, Inc.\n-   Contributed by Steven G. Kargl <kargl@gcc.gnu.org>\n-\n-This file is part of the GNU Fortran 95 runtime library (libgfortran).\n-\n-Libgfortran is free software; you can redistribute it and/or\n-modify it under the terms of the GNU General Public\n-License as published by the Free Software Foundation; either\n-version 3 of the License, or (at your option) any later version.\n-\n-Libgfortran is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-Under Section 7 of GPL version 3, you are granted additional\n-permissions described in the GCC Runtime Library Exception, version\n-3.1, as published by the Free Software Foundation.\n-\n-You should have received a copy of the GNU General Public License and\n-a copy of the GCC Runtime Library Exception along with this program;\n-see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n-<http://www.gnu.org/licenses/>.  */\n-\n-#include \"libgfortran.h\"'\n-\n-include(`mtype.m4')dnl\n-\n-mathfunc_macro\n-\n-`#if defined (HAVE_'real_type`) && 'hasmathfunc(fabs) && hasmathfunc(frexp)`\n-\n-extern 'real_type` rrspacing_r'kind` ('real_type` s, int p);\n-export_proto(rrspacing_r'kind`);\n-\n-'real_type`\n-rrspacing_r'kind` ('real_type` s, int p)\n-{\n-  int e;\n-  'real_type` x;\n-  x = MATHFUNC(fabs) (s);\n-  if (x == 0.)\n-    return 0.;\n-  MATHFUNC(frexp) (s, &e);\n-#if 'hasmathfunc(ldexp)`\n-  return MATHFUNC(ldexp) (x, p - e);\n-#else\n-  return MATHFUNC(scalbn) (x, p - e);\n-#endif\n-\n-}\n-\n-#endif'"}, {"sha": "e21b8b7246a63a9f187644d902b1f1a2c625e739", "filename": "libgfortran/m4/set_exponent.m4", "status": "removed", "additions": 0, "deletions": 44, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03506f8cc3da48ed9303ebbd435eeaacee6629e6/libgfortran%2Fm4%2Fset_exponent.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03506f8cc3da48ed9303ebbd435eeaacee6629e6/libgfortran%2Fm4%2Fset_exponent.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Fset_exponent.m4?ref=03506f8cc3da48ed9303ebbd435eeaacee6629e6", "patch": "@@ -1,44 +0,0 @@\n-`/* Implementation of the SET_EXPONENT intrinsic\n-   Copyright (C) 2003-2016 Free Software Foundation, Inc.\n-   Contributed by Richard Henderson <rth@redhat.com>.\n-\n-This file is part of the GNU Fortran 95 runtime library (libgfortran).\n-\n-Libgfortran is free software; you can redistribute it and/or\n-modify it under the terms of the GNU General Public\n-License as published by the Free Software Foundation; either\n-version 3 of the License, or (at your option) any later version.\n-\n-Libgfortran is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-Under Section 7 of GPL version 3, you are granted additional\n-permissions described in the GCC Runtime Library Exception, version\n-3.1, as published by the Free Software Foundation.\n-\n-You should have received a copy of the GNU General Public License and\n-a copy of the GCC Runtime Library Exception along with this program;\n-see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n-<http://www.gnu.org/licenses/>.  */\n-\n-#include \"libgfortran.h\"'\n-\n-include(`mtype.m4')dnl\n-\n-mathfunc_macro\n-\n-`#if defined (HAVE_'real_type`) && 'hasmathfunc(scalbn) && hasmathfunc(frexp)`\n-\n-extern 'real_type` set_exponent_r'kind` ('real_type` s, GFC_INTEGER_4 i);\n-export_proto(set_exponent_r'kind`);\n-\n-'real_type`\n-set_exponent_r'kind` ('real_type` s, GFC_INTEGER_4 i)\n-{\n-  int dummy_exp;\n-  return MATHFUNC(scalbn) (MATHFUNC(frexp) (s, &dummy_exp), i);\n-}\n-\n-#endif'"}, {"sha": "6c2aa6f2d7d8247849c4b51d6542c6493fad5c6e", "filename": "libgfortran/m4/spacing.m4", "status": "removed", "additions": 0, "deletions": 53, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03506f8cc3da48ed9303ebbd435eeaacee6629e6/libgfortran%2Fm4%2Fspacing.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03506f8cc3da48ed9303ebbd435eeaacee6629e6/libgfortran%2Fm4%2Fspacing.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Fspacing.m4?ref=03506f8cc3da48ed9303ebbd435eeaacee6629e6", "patch": "@@ -1,53 +0,0 @@\n-`/* Implementation of the SPACING intrinsic\n-   Copyright (C) 2006-2016 Free Software Foundation, Inc.\n-   Contributed by Steven G. Kargl <kargl@gcc.gnu.org>\n-\n-This file is part of the GNU Fortran 95 runtime library (libgfortran).\n-\n-Libgfortran is free software; you can redistribute it and/or\n-modify it under the terms of the GNU General Public\n-License as published by the Free Software Foundation; either\n-version 3 of the License, or (at your option) any later version.\n-\n-Libgfortran is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-Under Section 7 of GPL version 3, you are granted additional\n-permissions described in the GCC Runtime Library Exception, version\n-3.1, as published by the Free Software Foundation.\n-\n-You should have received a copy of the GNU General Public License and\n-a copy of the GCC Runtime Library Exception along with this program;\n-see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n-<http://www.gnu.org/licenses/>.  */\n-\n-#include \"libgfortran.h\"'\n-\n-include(`mtype.m4')dnl\n-\n-mathfunc_macro\n-\n-`#if defined (HAVE_'real_type`) && 'hasmathfunc(frexp)`\n-\n-extern 'real_type` spacing_r'kind` ('real_type` s, int p, int emin, 'real_type` tiny);\n-export_proto(spacing_r'kind`);\n-\n-'real_type`\n-spacing_r'kind` ('real_type` s, int p, int emin, 'real_type` tiny)\n-{\n-  int e;\n-  if (s == 0.)\n-    return tiny;\n-  MATHFUNC(frexp) (s, &e);\n-  e = e - p;\n-  e = e > emin ? e : emin;\n-#if 'hasmathfunc(ldexp)`\n-  return MATHFUNC(ldexp) (1., e);\n-#else\n-  return MATHFUNC(scalbn) (1., e);\n-#endif\n-}\n-\n-#endif'"}, {"sha": "04a7ca482c1291d48cdb263f0b16e06206b68239", "filename": "libgfortran/m4/transpose.m4", "status": "removed", "additions": 0, "deletions": 116, "changes": 116, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03506f8cc3da48ed9303ebbd435eeaacee6629e6/libgfortran%2Fm4%2Ftranspose.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03506f8cc3da48ed9303ebbd435eeaacee6629e6/libgfortran%2Fm4%2Ftranspose.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Ftranspose.m4?ref=03506f8cc3da48ed9303ebbd435eeaacee6629e6", "patch": "@@ -1,116 +0,0 @@\n-`/* Implementation of the TRANSPOSE intrinsic\n-   Copyright (C) 2003-2016 Free Software Foundation, Inc.\n-   Contributed by Tobias Schl\ufffdter\n-\n-This file is part of the GNU Fortran runtime library (libgfortran).\n-\n-Libgfortran is free software; you can redistribute it and/or\n-modify it under the terms of the GNU General Public\n-License as published by the Free Software Foundation; either\n-version 3 of the License, or (at your option) any later version.\n-\n-Libgfortran is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-Under Section 7 of GPL version 3, you are granted additional\n-permissions described in the GCC Runtime Library Exception, version\n-3.1, as published by the Free Software Foundation.\n-\n-You should have received a copy of the GNU General Public License and\n-a copy of the GCC Runtime Library Exception along with this program;\n-see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n-<http://www.gnu.org/licenses/>.  */\n-\n-#include \"libgfortran.h\"\n-#include <assert.h>'\n-\n-include(iparm.m4)dnl\n-\n-`#if defined (HAVE_'rtype_name`)\n-\n-extern void transpose_'rtype_code` ('rtype` * const restrict ret, \n-\t'rtype` * const restrict source);\n-export_proto(transpose_'rtype_code`);\n-\n-void\n-transpose_'rtype_code` ('rtype` * const restrict ret, \n-\t'rtype` * const restrict source)\n-{\n-  /* r.* indicates the return array.  */\n-  index_type rxstride, rystride;\n-  'rtype_name` * restrict rptr;\n-  /* s.* indicates the source array.  */\n-  index_type sxstride, systride;\n-  const 'rtype_name` *sptr;\n-\n-  index_type xcount, ycount;\n-  index_type x, y;\n-\n-  assert (GFC_DESCRIPTOR_RANK (source) == 2);\n-\n-  if (ret->base_addr == NULL)\n-    {\n-      assert (GFC_DESCRIPTOR_RANK (ret) == 2);\n-      assert (ret->dtype == source->dtype);\n-\n-      GFC_DIMENSION_SET(ret->dim[0], 0, GFC_DESCRIPTOR_EXTENT(source,1) - 1,\n-\t\t\t1);\n-\n-      GFC_DIMENSION_SET(ret->dim[1], 0, GFC_DESCRIPTOR_EXTENT(source,0) - 1,\n-\t\t\tGFC_DESCRIPTOR_EXTENT(source, 1));\n-\n-      ret->base_addr = xmallocarray (size0 ((array_t *) ret), \n-                                     sizeof ('rtype_name`));\n-      ret->offset = 0;\n-    } else if (unlikely (compile_options.bounds_check))\n-    {\n-      index_type ret_extent, src_extent;\n-\n-      ret_extent = GFC_DESCRIPTOR_EXTENT(ret,0);\n-      src_extent = GFC_DESCRIPTOR_EXTENT(source,1);\n-\n-      if (src_extent != ret_extent)\n-\truntime_error (\"Incorrect extent in return value of TRANSPOSE\"\n-\t\t       \" intrinsic in dimension 1: is %ld,\"\n-\t\t       \" should be %ld\", (long int) src_extent,\n-\t\t       (long int) ret_extent);\n-\n-      ret_extent = GFC_DESCRIPTOR_EXTENT(ret,1);\n-      src_extent = GFC_DESCRIPTOR_EXTENT(source,0);\n-\n-      if (src_extent != ret_extent)\n-\truntime_error (\"Incorrect extent in return value of TRANSPOSE\"\n-\t\t       \" intrinsic in dimension 2: is %ld,\"\n-\t\t       \" should be %ld\", (long int) src_extent,\n-\t\t       (long int) ret_extent);\n-\n-    }\n-\n-  sxstride = GFC_DESCRIPTOR_STRIDE(source,0);\n-  systride = GFC_DESCRIPTOR_STRIDE(source,1);\n-  xcount = GFC_DESCRIPTOR_EXTENT(source,0);\n-  ycount = GFC_DESCRIPTOR_EXTENT(source,1);\n-\n-  rxstride = GFC_DESCRIPTOR_STRIDE(ret,0);\n-  rystride = GFC_DESCRIPTOR_STRIDE(ret,1);\n-\n-  rptr = ret->base_addr;\n-  sptr = source->base_addr;\n-\n-  for (y=0; y < ycount; y++)\n-    {\n-      for (x=0; x < xcount; x++)\n-        {\n-          *rptr = *sptr;\n-\n-          sptr += sxstride;\n-          rptr += rystride;\n-        }\n-        sptr += systride - (sxstride * xcount);\n-        rptr += rxstride - (rystride * xcount);\n-    }\n-}\n-\n-#endif'"}]}