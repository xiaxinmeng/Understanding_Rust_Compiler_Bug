{"sha": "d42f26c16c36e5e137bf4e6d0ec09ed32fbe6c90", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDQyZjI2YzE2YzM2ZTVlMTM3YmY0ZTZkMGVjMDllZDMyZmJlNmM5MA==", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@bitrange.com", "date": "2012-11-26T03:25:57Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@gcc.gnu.org", "date": "2012-11-26T03:25:57Z"}, "message": "re PR middle-end/55030 (gcc.c-torture/execute/builtins/memcpy-chk.c execution,  -Os (et al))\n\n\tPR middle-end/55030\n\t* gcc.dg/guality/pr36728-1.c, gcc.dg/guality/pr36728-2.c (foo): Don't\n\tuse volatile asms, use plain asms.   Where the output value for the\n\tasm is unused, write a global variable.\n\nFrom-SVN: r193803", "tree": {"sha": "ca6f1baef55800e541772b818e4729e1ff697077", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ca6f1baef55800e541772b818e4729e1ff697077"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d42f26c16c36e5e137bf4e6d0ec09ed32fbe6c90", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d42f26c16c36e5e137bf4e6d0ec09ed32fbe6c90", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d42f26c16c36e5e137bf4e6d0ec09ed32fbe6c90", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d42f26c16c36e5e137bf4e6d0ec09ed32fbe6c90/comments", "author": null, "committer": null, "parents": [{"sha": "adddc3471f52ea72f9602b0e716f7cdaee8665b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/adddc3471f52ea72f9602b0e716f7cdaee8665b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/adddc3471f52ea72f9602b0e716f7cdaee8665b7"}], "stats": {"total": 27, "additions": 17, "deletions": 10}, "files": [{"sha": "320bd6473236efeb59b3b378e8342acea2462f5f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d42f26c16c36e5e137bf4e6d0ec09ed32fbe6c90/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d42f26c16c36e5e137bf4e6d0ec09ed32fbe6c90/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d42f26c16c36e5e137bf4e6d0ec09ed32fbe6c90", "patch": "@@ -1,3 +1,10 @@\n+2012-11-26  Hans-Peter Nilsson  <hp@bitrange.com>\n+\n+\tPR middle-end/55030\n+\t* gcc.dg/guality/pr36728-1.c, gcc.dg/guality/pr36728-2.c (foo): Don't\n+\tuse volatile asms, use plain asms.   Where the output value for the\n+\tasm is unused, write a global variable.\n+\n 2012-11-25  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* gcc.target/i386/sw-1.c (dg-options): Add -mtune=generic."}, {"sha": "b48c128867bbd37eec6b1e2f702f028554f47693", "filename": "gcc/testsuite/gcc.dg/guality/pr36728-1.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d42f26c16c36e5e137bf4e6d0ec09ed32fbe6c90/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr36728-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d42f26c16c36e5e137bf4e6d0ec09ed32fbe6c90/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr36728-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr36728-1.c?ref=d42f26c16c36e5e137bf4e6d0ec09ed32fbe6c90", "patch": "@@ -1,17 +1,17 @@\n /* PR debug/36728 */\n /* { dg-do run } */\n /* { dg-options \"-g\" } */\n-\n+int a;\n int __attribute__((noinline))\n foo (int arg1, int arg2, int arg3, int arg4, int arg5, int arg6, int arg7)\n {\n   char *x = __builtin_alloca (arg7);\n   int __attribute__ ((aligned(32))) y;\n \n   y = 2;\n-  asm volatile (\"\" : \"=m\" (y) : \"m\" (y));\n+  asm (\"\" : \"=m\" (y) : \"m\" (y));\n   x[0] = 25;\n-  asm volatile (\"\" : \"=m\" (x[0]) : \"m\" (x[0]));\n+  asm (\"\" : \"=m\" (x[0]), \"=m\" (a) : \"m\" (x[0]));\n   return y;\n }\n \n@@ -43,7 +43,7 @@ int\n main ()\n {\n   int l = 0;\n-  asm volatile (\"\" : \"=r\" (l) : \"0\" (l));\n-  foo (l + 1, l + 2, l + 3, l + 4, l + 5, l + 6, l + 30);\n+  asm (\"\" : \"=r\" (l) : \"0\" (l));\n+  a = foo (l + 1, l + 2, l + 3, l + 4, l + 5, l + 6, l + 30);\n   return 0;\n }"}, {"sha": "664a16ec2b8ba63c943096fd745aa04965954cfa", "filename": "gcc/testsuite/gcc.dg/guality/pr36728-2.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d42f26c16c36e5e137bf4e6d0ec09ed32fbe6c90/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr36728-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d42f26c16c36e5e137bf4e6d0ec09ed32fbe6c90/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr36728-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr36728-2.c?ref=d42f26c16c36e5e137bf4e6d0ec09ed32fbe6c90", "patch": "@@ -1,17 +1,17 @@\n /* PR debug/36728 */\n /* { dg-do run } */\n /* { dg-options \"-g\" } */\n-\n+int a;\n int __attribute__((noinline))\n foo (int arg1, int arg2, int arg3, int arg4, int arg5, int arg6, int arg7)\n {\n   char x[30];\n   int __attribute__ ((aligned(32))) y;\n \n   y = 2;\n-  asm volatile (\"\" : \"=m\" (y) : \"m\" (y));\n+  asm (\"\" : \"=m\" (y) : \"m\" (y));\n   x[0] = 25;\n-  asm volatile (\"\" : \"=m\" (x[0]) : \"m\" (x[0]));\n+  asm (\"\" : \"=m\" (x[0]), \"=m\" (a) : \"m\" (x[0]));\n   return y;\n }\n \n@@ -43,7 +43,7 @@ int\n main ()\n {\n   int l = 0;\n-  asm volatile (\"\" : \"=r\" (l) : \"0\" (l));\n-  foo (l + 1, l + 2, l + 3, l + 4, l + 5, l + 6, l + 30);\n+  asm (\"\" : \"=r\" (l) : \"0\" (l));\n+  a = foo (l + 1, l + 2, l + 3, l + 4, l + 5, l + 6, l + 30);\n   return 0;\n }"}]}