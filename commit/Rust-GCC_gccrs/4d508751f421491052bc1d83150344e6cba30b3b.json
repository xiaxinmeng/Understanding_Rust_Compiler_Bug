{"sha": "4d508751f421491052bc1d83150344e6cba30b3b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGQ1MDg3NTFmNDIxNDkxMDUyYmMxZDgzMTUwMzQ0ZTZjYmEzMGIzYg==", "commit": {"author": {"name": "Marc Glisse", "email": "marc.glisse@inria.fr", "date": "2019-05-20T14:53:29Z"}, "committer": {"name": "Marc Glisse", "email": "glisse@gcc.gnu.org", "date": "2019-05-20T14:53:29Z"}, "message": "[i386] Fold __builtin_ia32_shufpd to VEC_PERM_EXPR\n\n2019-05-20  Marc Glisse  <marc.glisse@inria.fr>\n\n\tPR rtl-optimization/43147\n\t* config/i386/i386.c (ix86_gimple_fold_builtin): Handle\n\tIX86_BUILTIN_SHUFPD.\n\nFrom-SVN: r271422", "tree": {"sha": "3baf2dcee3cdad82c9d4fc8e0013557025c3f32d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3baf2dcee3cdad82c9d4fc8e0013557025c3f32d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4d508751f421491052bc1d83150344e6cba30b3b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d508751f421491052bc1d83150344e6cba30b3b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d508751f421491052bc1d83150344e6cba30b3b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d508751f421491052bc1d83150344e6cba30b3b/comments", "author": {"login": "mglisse", "id": 10097863, "node_id": "MDQ6VXNlcjEwMDk3ODYz", "avatar_url": "https://avatars.githubusercontent.com/u/10097863?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mglisse", "html_url": "https://github.com/mglisse", "followers_url": "https://api.github.com/users/mglisse/followers", "following_url": "https://api.github.com/users/mglisse/following{/other_user}", "gists_url": "https://api.github.com/users/mglisse/gists{/gist_id}", "starred_url": "https://api.github.com/users/mglisse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mglisse/subscriptions", "organizations_url": "https://api.github.com/users/mglisse/orgs", "repos_url": "https://api.github.com/users/mglisse/repos", "events_url": "https://api.github.com/users/mglisse/events{/privacy}", "received_events_url": "https://api.github.com/users/mglisse/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7f67becc9854ac159c6970951108e5d3e2afa6e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f67becc9854ac159c6970951108e5d3e2afa6e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f67becc9854ac159c6970951108e5d3e2afa6e8"}], "stats": {"total": 34, "additions": 33, "deletions": 1}, "files": [{"sha": "5d300cab81662b75222f80f80cb5c3da78164951", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d508751f421491052bc1d83150344e6cba30b3b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d508751f421491052bc1d83150344e6cba30b3b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4d508751f421491052bc1d83150344e6cba30b3b", "patch": "@@ -1,3 +1,9 @@\n+2019-05-20  Marc Glisse  <marc.glisse@inria.fr>\n+\n+\tPR rtl-optimization/43147\n+\t* config/i386/i386.c (ix86_gimple_fold_builtin): Handle\n+\tIX86_BUILTIN_SHUFPD.\n+\n 2019-05-20  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* tree-ssa-alias.c (refs_may_alias_p_2): Break out from ..."}, {"sha": "54607748b0baac01b200eb66a9f2a689d2cc1e25", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 27, "deletions": 1, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d508751f421491052bc1d83150344e6cba30b3b/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d508751f421491052bc1d83150344e6cba30b3b/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=4d508751f421491052bc1d83150344e6cba30b3b", "patch": "@@ -17297,7 +17297,7 @@ ix86_gimple_fold_builtin (gimple_stmt_iterator *gsi)\n   int n_args = gimple_call_num_args (stmt);\n   enum ix86_builtins fn_code = (enum ix86_builtins) DECL_FUNCTION_CODE (fndecl);\n   tree decl = NULL_TREE;\n-  tree arg0, arg1;\n+  tree arg0, arg1, arg2;\n   enum rtx_code rcode;\n   unsigned HOST_WIDE_INT count;\n   bool is_vshift;\n@@ -17601,6 +17601,32 @@ ix86_gimple_fold_builtin (gimple_stmt_iterator *gsi)\n \t}\n       break;\n \n+    case IX86_BUILTIN_SHUFPD:\n+      arg2 = gimple_call_arg (stmt, 2);\n+      if (TREE_CODE (arg2) == INTEGER_CST)\n+\t{\n+\t  location_t loc = gimple_location (stmt);\n+\t  unsigned HOST_WIDE_INT imask = TREE_INT_CST_LOW (arg2);\n+\t  arg0 = gimple_call_arg (stmt, 0);\n+\t  arg1 = gimple_call_arg (stmt, 1);\n+\t  tree itype = long_long_integer_type_node;\n+\t  tree vtype = build_vector_type (itype, 2); /* V2DI */\n+\t  tree_vector_builder elts (vtype, 2, 1);\n+\t  /* Ignore bits other than the lowest 2.  */\n+\t  elts.quick_push (build_int_cst (itype, imask & 1));\n+\t  imask >>= 1;\n+\t  elts.quick_push (build_int_cst (itype, 2 + (imask & 1)));\n+\t  tree omask = elts.build ();\n+\t  gimple *g = gimple_build_assign (gimple_call_lhs (stmt),\n+\t\t\t\t\t   VEC_PERM_EXPR,\n+\t\t\t\t\t   arg0, arg1, omask);\n+\t  gimple_set_location (g, loc);\n+\t  gsi_replace (gsi, g, false);\n+\t  return true;\n+\t}\n+      // Do not error yet, the constant could be propagated later?\n+      break;\n+\n     default:\n       break;\n     }"}]}