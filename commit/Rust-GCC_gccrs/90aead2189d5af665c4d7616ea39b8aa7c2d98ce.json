{"sha": "90aead2189d5af665c4d7616ea39b8aa7c2d98ce", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTBhZWFkMjE4OWQ1YWY2NjVjNGQ3NjE2ZWEzOWI4YWE3YzJkOThjZQ==", "commit": {"author": {"name": "Bernd Schmidt", "email": "bernds@redhat.com", "date": "2017-01-14T16:52:18Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2017-01-14T16:52:18Z"}, "message": "re PR rtl-optimization/78626 (ICE in rtl_verify_bb_insns, at cfgrtl.c:2656 (error: flow control insn inside a basic block))\n\n\tPR rtl-optimization/78626\n\tPR rtl-optimization/78727\n\t* cprop.c (one_cprop_pass): Collect unconditional traps in the middle\n\tof a block, and split such blocks after everything else is finished.\n\n        PR rtl-optimization/78626\n        PR rtl-optimization/78727\n\t* gcc.dg/torture/pr78626.c: New test.\n\t* gcc.dg/torture/pr78727.c: New test.\n\nFrom-SVN: r244467", "tree": {"sha": "eaeedf40a4f149f49411c00916e82e192d0f2dcd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eaeedf40a4f149f49411c00916e82e192d0f2dcd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/90aead2189d5af665c4d7616ea39b8aa7c2d98ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90aead2189d5af665c4d7616ea39b8aa7c2d98ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90aead2189d5af665c4d7616ea39b8aa7c2d98ce", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90aead2189d5af665c4d7616ea39b8aa7c2d98ce/comments", "author": null, "committer": null, "parents": [{"sha": "afaecc23b57e1d6827f071a4d560ca57770b2e25", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afaecc23b57e1d6827f071a4d560ca57770b2e25", "html_url": "https://github.com/Rust-GCC/gccrs/commit/afaecc23b57e1d6827f071a4d560ca57770b2e25"}], "stats": {"total": 87, "additions": 86, "deletions": 1}, "files": [{"sha": "746f6af65cec204b2fbbe2d7f4188089588c5486", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90aead2189d5af665c4d7616ea39b8aa7c2d98ce/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90aead2189d5af665c4d7616ea39b8aa7c2d98ce/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=90aead2189d5af665c4d7616ea39b8aa7c2d98ce", "patch": "@@ -1,3 +1,10 @@\n+2017-01-14  Bernd Schmidt  <bschmidt@redhat.com>\n+\n+\tPR rtl-optimization/78626\n+\tPR rtl-optimization/78727\n+\t* cprop.c (one_cprop_pass): Collect unconditional traps in the middle\n+\tof a block, and split such blocks after everything else is finished.\n+\n 2017-01-14  Alan Modra  <amodra@gmail.com>\n \n \tPR target/72749"}, {"sha": "b6c2bc431fd77a59c3f8cae6be495b8626581b0d", "filename": "gcc/cprop.c", "status": "modified", "additions": 24, "deletions": 1, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90aead2189d5af665c4d7616ea39b8aa7c2d98ce/gcc%2Fcprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90aead2189d5af665c4d7616ea39b8aa7c2d98ce/gcc%2Fcprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcprop.c?ref=90aead2189d5af665c4d7616ea39b8aa7c2d98ce", "patch": "@@ -1794,7 +1794,7 @@ one_cprop_pass (void)\n   if (set_hash_table.n_elems > 0)\n     {\n       basic_block bb;\n-      rtx_insn *insn;\n+      auto_vec<rtx_insn *> uncond_traps;\n \n       alloc_cprop_mem (last_basic_block_for_fn (cfun),\n \t\t       set_hash_table.n_elems);\n@@ -1810,13 +1810,20 @@ one_cprop_pass (void)\n \t\t      EXIT_BLOCK_PTR_FOR_FN (cfun),\n \t\t      next_bb)\n \t{\n+\t  bool seen_uncond_trap = false;\n+\t  rtx_insn *insn;\n+\n \t  /* Reset tables used to keep track of what's still valid [since\n \t     the start of the block].  */\n \t  reset_opr_set_tables ();\n \n \t  FOR_BB_INSNS (bb, insn)\n \t    if (INSN_P (insn))\n \t      {\n+\t\tbool was_uncond_trap\n+\t\t  = (GET_CODE (PATTERN (insn)) == TRAP_IF\n+\t\t     && XEXP (PATTERN (insn), 0) == const1_rtx);\n+\n \t\tchanged |= cprop_insn (insn);\n \n \t\t/* Keep track of everything modified by this insn.  */\n@@ -1825,11 +1832,27 @@ one_cprop_pass (void)\n \t\t       insn into a NOTE, or deleted the insn.  */\n \t\tif (! NOTE_P (insn) && ! insn->deleted ())\n \t\t  mark_oprs_set (insn);\n+\n+\t\tif (!was_uncond_trap && !seen_uncond_trap\n+\t\t    && GET_CODE (PATTERN (insn)) == TRAP_IF\n+\t\t    && XEXP (PATTERN (insn), 0) == const1_rtx)\n+\t\t  {\n+\t\t    seen_uncond_trap = true;\n+\t\t    uncond_traps.safe_push (insn);\n+\t\t  }\n \t      }\n \t}\n \n       changed |= bypass_conditional_jumps ();\n \n+      while (!uncond_traps.is_empty ())\n+\t{\n+\t  rtx_insn *insn = uncond_traps.pop ();\n+\t  basic_block to_split = BLOCK_FOR_INSN (insn);\n+\t  remove_edge (split_block (to_split, insn));\n+\t  emit_barrier_after_bb (to_split);\n+\t}\n+\n       FREE_REG_SET (reg_set_bitmap);\n       free_cprop_mem ();\n     }"}, {"sha": "625c99a7d22222cce936964aebd74656cde8fb54", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90aead2189d5af665c4d7616ea39b8aa7c2d98ce/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90aead2189d5af665c4d7616ea39b8aa7c2d98ce/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=90aead2189d5af665c4d7616ea39b8aa7c2d98ce", "patch": "@@ -1,3 +1,10 @@\n+2017-01-14  Bernd Schmidt  <bschmidt@redhat.com>\n+\n+        PR rtl-optimization/78626\n+        PR rtl-optimization/78727\n+\t* gcc.dg/torture/pr78626.c: New test.\n+\t* gcc.dg/torture/pr78727.c: New test.\n+\n 2017-01-14  Alan Modra  <amodra@gmail.com>\n \n \t* gcc.c-torture/compile/pr72749.c: New test."}, {"sha": "ed4775a7f8b8b47ceedcd58f5eab955501d201b5", "filename": "gcc/testsuite/gcc.dg/torture/pr78626.c", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90aead2189d5af665c4d7616ea39b8aa7c2d98ce/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr78626.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90aead2189d5af665c4d7616ea39b8aa7c2d98ce/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr78626.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr78626.c?ref=90aead2189d5af665c4d7616ea39b8aa7c2d98ce", "patch": "@@ -0,0 +1,27 @@\n+/* { dg-do compile } */\n+\n+int qs;\n+\n+void\n+ms (int g1)\n+{\n+  int cy;\n+  int *fr = &cy;\n+\n+  for (;;)\n+    {\n+      *fr = 1;\n+      fr = &g1;\n+\n+      while (qs != 0)\n+        {\n+          if (qs | cy)\n+            qs = g1 / 0; /* { dg-warning \"division\" } */\n+          ++qs;\n+        }\n+\n+      cy = 1;\n+      while (cy != 0)\n+        cy = 2;\n+    }\n+}"}, {"sha": "93cc3d729729abac50aa6f3505b7eebef5dadaa1", "filename": "gcc/testsuite/gcc.dg/torture/pr78727.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90aead2189d5af665c4d7616ea39b8aa7c2d98ce/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr78727.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90aead2189d5af665c4d7616ea39b8aa7c2d98ce/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr78727.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr78727.c?ref=90aead2189d5af665c4d7616ea39b8aa7c2d98ce", "patch": "@@ -0,0 +1,21 @@\n+/* { dg-do compile } */\n+\n+int\n+dd (int gj, unsigned int o7)\n+{\n+  long long int e8 = gj;\n+\n+  e8 |= gj + 1u;\n+  if (e8 != 0)\n+    {\n+      short int *mn = (short int *)&e8;\n+      int pv;\n+\n+      e8 &= e8 > gj;\n+      gj = o7 > e8;\n+      pv = ((gj != 0) ? gj : *mn) && e8;\n+      gj |= *mn / pv;\n+    }\n+\n+  return gj;\n+}"}]}