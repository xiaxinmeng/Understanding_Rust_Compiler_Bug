{"sha": "a5a9046deb1a43c09e53b7e406319ac7936c2e07", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTVhOTA0NmRlYjFhNDNjMDllNTNiN2U0MDYzMTlhYzc5MzZjMmUwNw==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2017-03-31T22:49:53Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2017-03-31T22:49:53Z"}, "message": "re PR rtl-optimization/79405 (Infinite loop in fwprop)\n\n\tPR rtl-optimization/79405\n\t* fwprop.c (propagations_left): New variable.\n\t(forward_propagate_into): Decrement it.\n\t(fwprop_init): Initialize it.\n\t(fw_prop): If the variable has reached zero, stop propagating.\n\t(fwprop_addr): Ditto.\n\ngcc/testsuite/\n\tPR rtl-optimization/79405\n\tgcc.dg/pr79405.c: New testcase.\n\nFrom-SVN: r246627", "tree": {"sha": "bf4be001d4d273f6547bada534c9faa1206afa85", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bf4be001d4d273f6547bada534c9faa1206afa85"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a5a9046deb1a43c09e53b7e406319ac7936c2e07", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5a9046deb1a43c09e53b7e406319ac7936c2e07", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5a9046deb1a43c09e53b7e406319ac7936c2e07", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5a9046deb1a43c09e53b7e406319ac7936c2e07/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "eee3756de395ab6220f78b471a7cd877301455a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eee3756de395ab6220f78b471a7cd877301455a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eee3756de395ab6220f78b471a7cd877301455a2"}], "stats": {"total": 76, "additions": 76, "deletions": 0}, "files": [{"sha": "d4096c9a64a03f8bcc912699e33d4e49925e9d47", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5a9046deb1a43c09e53b7e406319ac7936c2e07/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5a9046deb1a43c09e53b7e406319ac7936c2e07/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a5a9046deb1a43c09e53b7e406319ac7936c2e07", "patch": "@@ -1,3 +1,12 @@\n+2017-03-31  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\tPR rtl-optimization/79405\n+\t* fwprop.c (propagations_left): New variable.\n+\t(forward_propagate_into): Decrement it.\n+\t(fwprop_init): Initialize it.\n+\t(fw_prop): If the variable has reached zero, stop propagating.\n+\t(fwprop_addr): Ditto.\n+\n 2017-03-31  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR debug/79255"}, {"sha": "0ab25efdb8565fa0110307060916cdc309ccbf11", "filename": "gcc/fwprop.c", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5a9046deb1a43c09e53b7e406319ac7936c2e07/gcc%2Ffwprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5a9046deb1a43c09e53b7e406319ac7936c2e07/gcc%2Ffwprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffwprop.c?ref=a5a9046deb1a43c09e53b7e406319ac7936c2e07", "patch": "@@ -120,6 +120,13 @@ static vec<df_ref> use_def_ref;\n static vec<df_ref> reg_defs;\n static vec<df_ref> reg_defs_stack;\n \n+/* The maximum number of propagations that are still allowed.  If we do\n+   more propagations than originally we had uses, we must have ended up\n+   in a propagation loop, as in PR79405.  Until the algorithm fwprop\n+   uses can obviously not get into such loops we need a workaround like\n+   this.  */\n+static int propagations_left;\n+\n /* The MD bitmaps are trimmed to include only live registers to cut\n    memory usage on testcases like insn-recog.c.  Track live registers\n    in the basic block and do not perform forward propagation if the\n@@ -1407,6 +1414,8 @@ forward_propagate_into (df_ref use)\n   if (forward_propagate_and_simplify (use, def_insn, def_set)\n       || forward_propagate_subreg (use, def_insn, def_set))\n     {\n+      propagations_left--;\n+\n       if (cfun->can_throw_non_call_exceptions\n \t  && find_reg_note (use_insn, REG_EH_REGION, NULL_RTX)\n \t  && purge_dead_edges (DF_REF_BB (use)))\n@@ -1434,6 +1443,8 @@ fwprop_init (void)\n   active_defs = XNEWVEC (df_ref, max_reg_num ());\n   if (flag_checking)\n     active_defs_check = sparseset_alloc (max_reg_num ());\n+\n+  propagations_left = DF_USES_TABLE_SIZE ();\n }\n \n static void\n@@ -1480,6 +1491,9 @@ fwprop (void)\n \n   for (i = 0; i < DF_USES_TABLE_SIZE (); i++)\n     {\n+      if (!propagations_left)\n+\tbreak;\n+\n       df_ref use = DF_USES_GET (i);\n       if (use)\n \tif (DF_REF_TYPE (use) == DF_REF_REG_USE\n@@ -1540,6 +1554,9 @@ fwprop_addr (void)\n      end, and we'll go through them as well.  */\n   for (i = 0; i < DF_USES_TABLE_SIZE (); i++)\n     {\n+      if (!propagations_left)\n+\tbreak;\n+\n       df_ref use = DF_USES_GET (i);\n       if (use)\n \tif (DF_REF_TYPE (use) != DF_REF_REG_USE"}, {"sha": "7f236ac742e551b955a20887dec9b104a5e09d79", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5a9046deb1a43c09e53b7e406319ac7936c2e07/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5a9046deb1a43c09e53b7e406319ac7936c2e07/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a5a9046deb1a43c09e53b7e406319ac7936c2e07", "patch": "@@ -1,3 +1,8 @@\n+2017-03-31  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\tPR rtl-optimization/79405\n+\tgcc.dg/pr79405.c: New testcase.\n+\n 2017-03-31  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR debug/79255"}, {"sha": "c17baff713547d9a438aa966fd2078ca7d10d010", "filename": "gcc/testsuite/gcc.dg/pr79405.c", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5a9046deb1a43c09e53b7e406319ac7936c2e07/gcc%2Ftestsuite%2Fgcc.dg%2Fpr79405.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5a9046deb1a43c09e53b7e406319ac7936c2e07/gcc%2Ftestsuite%2Fgcc.dg%2Fpr79405.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr79405.c?ref=a5a9046deb1a43c09e53b7e406319ac7936c2e07", "patch": "@@ -0,0 +1,45 @@\n+/* PR rtl-optimization/79405 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+char cz;\n+long long int xx, u2;\n+\n+void\n+qv (int js, int wl)\n+{\n+  if (js != 0)\n+    {\n+      short int sc;\n+      int *at = (int *)&sc;\n+      long long int gx = 0;\n+\n+      for (;;)\n+\t{\n+\t  *at = 0;\n+\t  js /= sc;\n+\n+\t  for (wl = 0; wl < 2; ++wl)\n+\t    {\n+\t      xx = gx;\n+\t      u2 %= xx > 0;\n+\t      cz /= u2;\n+\n+ fa:\n+\t      if (cz != u2)\n+\t\t{\n+\t\t  gx |= js;\n+\t\t  cz = gx / js;\n+\t\t}\n+\t    }\n+\t}\n+\n+ yq:\n+      wl /= 0x80000000;\n+      u2 = wl;\n+      u2 |= (wl != 0) | (wl != 0 && gx != 0);\n+      js = u2;\n+      goto fa;\n+    }\n+  goto yq;\n+}"}]}