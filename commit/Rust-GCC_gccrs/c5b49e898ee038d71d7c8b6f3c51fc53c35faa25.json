{"sha": "c5b49e898ee038d71d7c8b6f3c51fc53c35faa25", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzViNDllODk4ZWUwMzhkNzFkN2M4YjZmM2M1MWZjNTNjMzVmYWEyNQ==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2003-06-28T08:13:24Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2003-06-28T08:13:24Z"}, "message": "2003-06-28  Michael Koch  <konqueror@gmx.de>\n\n\t* java/net/ServerSocket.java\n\t(setChannel): New method.\n\t* java/net/Socket.java\n\t(setChannel): New method.\n\nFrom-SVN: r68631", "tree": {"sha": "f2b4dd7868517ef647ab84176c06d512cb65a515", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f2b4dd7868517ef647ab84176c06d512cb65a515"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c5b49e898ee038d71d7c8b6f3c51fc53c35faa25", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5b49e898ee038d71d7c8b6f3c51fc53c35faa25", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c5b49e898ee038d71d7c8b6f3c51fc53c35faa25", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5b49e898ee038d71d7c8b6f3c51fc53c35faa25/comments", "author": null, "committer": null, "parents": [{"sha": "b417ae14c842723b740591ee78c952778ed5f26b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b417ae14c842723b740591ee78c952778ed5f26b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b417ae14c842723b740591ee78c952778ed5f26b"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "784cd5fc6c08b7d58f752553c2bbbd1d20b22a49", "filename": "libjava/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5b49e898ee038d71d7c8b6f3c51fc53c35faa25/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5b49e898ee038d71d7c8b6f3c51fc53c35faa25/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=c5b49e898ee038d71d7c8b6f3c51fc53c35faa25", "patch": "@@ -1,3 +1,10 @@\n+2003-06-28  Michael Koch  <konqueror@gmx.de>\n+\n+\t* java/net/ServerSocket.java\n+\t(setChannel): New method.\n+\t* java/net/Socket.java\n+\t(setChannel): New method.\n+\n 2003-06-27  Michael Koch  <konqueror@gmx.de>\n \n \t* java/beans/beancontext/BeanContextSupport.java:"}, {"sha": "699319e70b20a2586779126b9b8887ad2a6c8ca1", "filename": "libjava/java/net/ServerSocket.java", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5b49e898ee038d71d7c8b6f3c51fc53c35faa25/libjava%2Fjava%2Fnet%2FServerSocket.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5b49e898ee038d71d7c8b6f3c51fc53c35faa25/libjava%2Fjava%2Fnet%2FServerSocket.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FServerSocket.java?ref=c5b49e898ee038d71d7c8b6f3c51fc53c35faa25", "patch": "@@ -164,6 +164,14 @@ public ServerSocket (int port, int backlog, InetAddress bindAddr)\n     bind (new InetSocketAddress (bindAddr, port), backlog);\n   }\n \n+  /*\n+   * This method may only be used by java.nio.channels.ServerSocketChannel.open.\n+   */\n+  void setChannel (ServerSocketChannel ch)\n+  {\n+    this.ch = ch;\n+  }\n+\n   /**\n    * Binds the server socket to a specified socket address\n    *"}, {"sha": "ef88de5c1512cb346aa5bf59339ab14fe04d7e0b", "filename": "libjava/java/net/Socket.java", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5b49e898ee038d71d7c8b6f3c51fc53c35faa25/libjava%2Fjava%2Fnet%2FSocket.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5b49e898ee038d71d7c8b6f3c51fc53c35faa25/libjava%2Fjava%2Fnet%2FSocket.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FSocket.java?ref=c5b49e898ee038d71d7c8b6f3c51fc53c35faa25", "patch": "@@ -305,6 +305,15 @@ private Socket(InetAddress raddr, int rport, InetAddress laddr, int lport,\n     // that default.  JDK 1.2 doc infers not to do a bind.\n   }\n \n+  /*\n+   * This method may only be used by java.nio.channels.ServerSocketChannel.accept and\n+   * java.nio.channels.SocketChannel.open.\n+   */\n+  void setChannel (SocketChannel ch)\n+  {\n+    this.ch = ch;\n+  }\n+\n   /**\n    * Binds the socket to the givent local address/port\n    *"}]}