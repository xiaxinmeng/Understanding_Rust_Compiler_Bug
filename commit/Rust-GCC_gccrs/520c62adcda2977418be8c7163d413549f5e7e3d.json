{"sha": "520c62adcda2977418be8c7163d413549f5e7e3d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTIwYzYyYWRjZGEyOTc3NDE4YmU4YzcxNjNkNDEzNTQ5ZjVlN2UzZA==", "commit": {"author": {"name": "Bernd Schmidt", "email": "bernd.schmidt@analog.com", "date": "2007-05-09T11:57:49Z"}, "committer": {"name": "Bernd Schmidt", "email": "bernds@gcc.gnu.org", "date": "2007-05-09T11:57:49Z"}, "message": "bfin.h (LOCAL_ALIGNMENT): Define.\n\n\t* config/bfin/bfin.h (LOCAL_ALIGNMENT): Define.\n\t* config/bfin/bfin.c (bfin_local_alignment): New function.\n\t* config/bfin/bfin-protos.h (bfin_local_alignment): Declare it.\n\nFrom-SVN: r124570", "tree": {"sha": "72aeffb5e3021c4efe73693261c02bf5e915025f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/72aeffb5e3021c4efe73693261c02bf5e915025f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/520c62adcda2977418be8c7163d413549f5e7e3d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/520c62adcda2977418be8c7163d413549f5e7e3d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/520c62adcda2977418be8c7163d413549f5e7e3d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/520c62adcda2977418be8c7163d413549f5e7e3d/comments", "author": null, "committer": null, "parents": [{"sha": "0416068158e46ca20a07a30f4e19c43715f103ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0416068158e46ca20a07a30f4e19c43715f103ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0416068158e46ca20a07a30f4e19c43715f103ea"}], "stats": {"total": 37, "additions": 37, "deletions": 0}, "files": [{"sha": "a5b1469e461d9ec7730e8af4a20c1bef06ae58dd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/520c62adcda2977418be8c7163d413549f5e7e3d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/520c62adcda2977418be8c7163d413549f5e7e3d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=520c62adcda2977418be8c7163d413549f5e7e3d", "patch": "@@ -1,3 +1,9 @@\n+2007-05-08  Bernd Schmidt  <bernd.schmidt@analog.com>\n+\n+\t* config/bfin/bfin.h (LOCAL_ALIGNMENT): Define.\n+\t* config/bfin/bfin.c (bfin_local_alignment): New function.\n+\t* config/bfin/bfin-protos.h (bfin_local_alignment): Declare it.\n+\n 2007-05-08  Chao-ying Fu  <fu@mips.com>\n \n \t* doc/md.texi (msub@var{m}@var{n}4, usub@var{m}@var{n}4): Document."}, {"sha": "525ecd32558e537660f5d90804038c61476c524c", "filename": "gcc/config/bfin/bfin-protos.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/520c62adcda2977418be8c7163d413549f5e7e3d/gcc%2Fconfig%2Fbfin%2Fbfin-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/520c62adcda2977418be8c7163d413549f5e7e3d/gcc%2Fconfig%2Fbfin%2Fbfin-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fbfin%2Fbfin-protos.h?ref=520c62adcda2977418be8c7163d413549f5e7e3d", "patch": "@@ -86,6 +86,7 @@ extern void override_options (void);\n extern void asm_conditional_branch (rtx, rtx *, int, int);\n extern rtx bfin_gen_compare (rtx, Mmode);\n \n+extern int bfin_local_alignment (tree, int);\n extern int bfin_return_in_memory (tree);\n extern void initialize_trampoline (rtx, rtx, rtx);\n extern bool bfin_legitimate_address_p (Mmode, rtx, int);"}, {"sha": "94849ce225b7025df6cef63b1dbea8abefc4656a", "filename": "gcc/config/bfin/bfin.c", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/520c62adcda2977418be8c7163d413549f5e7e3d/gcc%2Fconfig%2Fbfin%2Fbfin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/520c62adcda2977418be8c7163d413549f5e7e3d/gcc%2Fconfig%2Fbfin%2Fbfin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fbfin%2Fbfin.c?ref=520c62adcda2977418be8c7163d413549f5e7e3d", "patch": "@@ -3045,6 +3045,24 @@ bfin_expand_movmem (rtx dst, rtx src, rtx count_exp, rtx align_exp)\n   return false;\n }\n \f\n+/* Compute the alignment for a local variable.\n+   TYPE is the data type, and ALIGN is the alignment that\n+   the object would ordinarily have.  The value of this macro is used\n+   instead of that alignment to align the object.  */\n+\n+int\n+bfin_local_alignment (tree type, int align)\n+{\n+  /* Increasing alignment for (relatively) big types allows the builtin\n+     memcpy can use 32 bit loads/stores.  */\n+  if (TYPE_SIZE (type)\n+      && TREE_CODE (TYPE_SIZE (type)) == INTEGER_CST\n+      && (TREE_INT_CST_LOW (TYPE_SIZE (type)) > 8\n+\t  || TREE_INT_CST_HIGH (TYPE_SIZE (type))) && align < 32)\n+    return 32;\n+  return align;\n+}\n+\f\n /* Implement TARGET_SCHED_ISSUE_RATE.  */\n \n static int"}, {"sha": "5a779da8ca71f354f04da8c0736d5d907fb539b0", "filename": "gcc/config/bfin/bfin.h", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/520c62adcda2977418be8c7163d413549f5e7e3d/gcc%2Fconfig%2Fbfin%2Fbfin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/520c62adcda2977418be8c7163d413549f5e7e3d/gcc%2Fconfig%2Fbfin%2Fbfin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fbfin%2Fbfin.h?ref=520c62adcda2977418be8c7163d413549f5e7e3d", "patch": "@@ -227,6 +227,18 @@ extern const char *bfin_library_id_string;\n \n /*#define DATA_ALIGNMENT(TYPE, BASIC-ALIGN) for arrays.. */\n \n+/* If defined, a C expression to compute the alignment for a local\n+   variable.  TYPE is the data type, and ALIGN is the alignment that\n+   the object would ordinarily have.  The value of this macro is used\n+   instead of that alignment to align the object.\n+\n+   If this macro is not defined, then ALIGN is used.\n+\n+   One use of this macro is to increase alignment of medium-size\n+   data to make it all fit in fewer cache lines.  */\n+\n+#define LOCAL_ALIGNMENT(TYPE, ALIGN) bfin_local_alignment ((TYPE), (ALIGN))\n+\n /* Make strings word-aligned so strcpy from constants will be faster.  */\n #define CONSTANT_ALIGNMENT(EXP, ALIGN)  \\\n   (TREE_CODE (EXP) == STRING_CST        \\"}]}