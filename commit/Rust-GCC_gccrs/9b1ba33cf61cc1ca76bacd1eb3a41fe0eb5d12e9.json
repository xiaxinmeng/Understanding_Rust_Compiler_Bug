{"sha": "9b1ba33cf61cc1ca76bacd1eb3a41fe0eb5d12e9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWIxYmEzM2NmNjFjYzFjYTc2YmFjZDFlYjNhNDFmZTBlYjVkMTJlOQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2016-09-20T17:36:03Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2016-09-20T17:36:03Z"}, "message": "re PR tree-optimization/77621 (Internal compiler error for mtune=atom + msse2)\n\n\tPR target/77621\n\t* config/i386/i386.c (ix86_preferred_simd_mode) <case DFmode>:\n\tDon't return word_mode for !TARGET_VECTORIZE_DOUBLE.\n\t(ix86_add_stmt_cost): Penalize DFmode vector operations\n\tfor !TARGET_VECTORIZE_DOUBLE.\n\ntestsuite/ChangeLog:\n\n\tPR target/77621\n\t* gcc.target/i386/pr77621.c: New test.\n\t* gcc.target/i386/vect-double-2.c: Update scan-tree-dump-times\n\tpattern, loop should vectorize with -mtune=atom.\n\nFrom-SVN: r240277", "tree": {"sha": "707be5437697970fac022b866b613f03254903f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/707be5437697970fac022b866b613f03254903f1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9b1ba33cf61cc1ca76bacd1eb3a41fe0eb5d12e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b1ba33cf61cc1ca76bacd1eb3a41fe0eb5d12e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b1ba33cf61cc1ca76bacd1eb3a41fe0eb5d12e9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b1ba33cf61cc1ca76bacd1eb3a41fe0eb5d12e9/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b276eda4b4e09dc1b8b265a30b41e1493abc3031", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b276eda4b4e09dc1b8b265a30b41e1493abc3031", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b276eda4b4e09dc1b8b265a30b41e1493abc3031"}], "stats": {"total": 40, "additions": 35, "deletions": 5}, "files": [{"sha": "e92ad3866e4497527d45d48a7026fcab05a5a5a2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b1ba33cf61cc1ca76bacd1eb3a41fe0eb5d12e9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b1ba33cf61cc1ca76bacd1eb3a41fe0eb5d12e9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9b1ba33cf61cc1ca76bacd1eb3a41fe0eb5d12e9", "patch": "@@ -1,3 +1,11 @@\n+2016-09-20  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/77621\n+\t* config/i386/i386.c (ix86_preferred_simd_mode) <case DFmode>:\n+\tDon't return word_mode for !TARGET_VECTORIZE_DOUBLE.\n+\t(ix86_add_stmt_cost): Penalize DFmode vector operations\n+\tfor !TARGET_VECTORIZE_DOUBLE.\n+\n 2016-09-20  Gerald Pfeifer  <gerald@pfeifer.com>\n \n \t* doc/invoke.texi (Warning Options): Simplify language."}, {"sha": "ff057dc60f951587f9427b14f66ae42da9a3a836", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b1ba33cf61cc1ca76bacd1eb3a41fe0eb5d12e9/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b1ba33cf61cc1ca76bacd1eb3a41fe0eb5d12e9/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=9b1ba33cf61cc1ca76bacd1eb3a41fe0eb5d12e9", "patch": "@@ -49554,9 +49554,7 @@ ix86_preferred_simd_mode (machine_mode mode)\n \treturn V4SFmode;\n \n     case DFmode:\n-      if (!TARGET_VECTORIZE_DOUBLE)\n-\treturn word_mode;\n-      else if (TARGET_AVX512F)\n+      if (TARGET_AVX512F)\n \treturn V8DFmode;\n       else if (TARGET_AVX && !TARGET_PREFER_AVX128)\n \treturn V4DFmode;\n@@ -49647,9 +49645,14 @@ ix86_add_stmt_cost (void *data, int count, enum vect_cost_for_stmt kind,\n   tree vectype = stmt_info ? stmt_vectype (stmt_info) : NULL_TREE;\n   int stmt_cost = ix86_builtin_vectorization_cost (kind, vectype, misalign);\n \n+  /* Penalize DFmode vector operations for !TARGET_VECTORIZE_DOUBLE.  */\n+  if (kind == vector_stmt && !TARGET_VECTORIZE_DOUBLE\n+      && vectype && GET_MODE_INNER (TYPE_MODE (vectype)) == DFmode)\n+    stmt_cost *= 5;  /* FIXME: The value here is arbitrary.  */\n+\n   /* Statements in an inner loop relative to the loop being\n      vectorized are weighted more heavily.  The value here is\n-      arbitrary and could potentially be improved with analysis.  */\n+     arbitrary and could potentially be improved with analysis.  */\n   if (where == vect_body && stmt_info && stmt_in_inner_loop_p (stmt_info))\n     count *= 50;  /* FIXME.  */\n "}, {"sha": "89024bb89d0f6950f7a043b38e5cda45c10b0841", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b1ba33cf61cc1ca76bacd1eb3a41fe0eb5d12e9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b1ba33cf61cc1ca76bacd1eb3a41fe0eb5d12e9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9b1ba33cf61cc1ca76bacd1eb3a41fe0eb5d12e9", "patch": "@@ -1,3 +1,10 @@\n+2016-09-20  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/77621\n+\t* gcc.target/i386/pr77621.c: New test.\n+\t* gcc.target/i386/vect-double-2.c: Update scan-tree-dump-times\n+\tpattern, loop should vectorize with -mtune=atom.\n+\n 2016-09-20  Maxim Ostapenko  <m.ostapenko@samsung.com>\n \t    Jakub Jelinek  <jakub@redhat.com>\n "}, {"sha": "0de2ef38764605879b9565dc91d14239d9534eae", "filename": "gcc/testsuite/gcc.target/i386/pr77621.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b1ba33cf61cc1ca76bacd1eb3a41fe0eb5d12e9/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr77621.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b1ba33cf61cc1ca76bacd1eb3a41fe0eb5d12e9/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr77621.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr77621.c?ref=9b1ba33cf61cc1ca76bacd1eb3a41fe0eb5d12e9", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -mtune=atom -msse2 -fdump-tree-vect-stats\" } */\n+\n+void\n+foo (double *x, int *y)\n+{\n+  int i;\n+  for (i = 0; i < 8; i++)\n+    x[i] -= y[i] * x[i + 1];\n+}\n+\n+/* { dg-final { scan-tree-dump-not \"Vectorized loops: 1\" \"vect\" } } */"}, {"sha": "f6a43749407eda56d25c8692043b0caa1305c9ed", "filename": "gcc/testsuite/gcc.target/i386/vect-double-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b1ba33cf61cc1ca76bacd1eb3a41fe0eb5d12e9/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fvect-double-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b1ba33cf61cc1ca76bacd1eb3a41fe0eb5d12e9/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fvect-double-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fvect-double-2.c?ref=9b1ba33cf61cc1ca76bacd1eb3a41fe0eb5d12e9", "patch": "@@ -31,4 +31,4 @@ sse2_test (void)\n     }\n }\n \n-/* { dg-final { scan-tree-dump-not \"vectorized 1 loops\" \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorized loops: 1\" 1 \"vect\" } } */"}]}