{"sha": "12c0e3856baf63f933061aacd4f70cd865913ab1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTJjMGUzODU2YmFmNjNmOTMzMDYxYWFjZDRmNzBjZDg2NTkxM2FiMQ==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2011-05-01T12:37:05Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2011-05-01T12:37:05Z"}, "message": "re PR libfortran/48787 (Invalid UP/DOWN rounding with F editing)\n\n2011-05-01  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n\n\tPR libgfortran/48787\n\t* gfortran.dg/round_3.f08: Add more checks.\n\nFrom-SVN: r173233", "tree": {"sha": "e7e24d42157918f0b591e322d1b3ae28916fd1ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e7e24d42157918f0b591e322d1b3ae28916fd1ae"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/12c0e3856baf63f933061aacd4f70cd865913ab1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12c0e3856baf63f933061aacd4f70cd865913ab1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12c0e3856baf63f933061aacd4f70cd865913ab1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12c0e3856baf63f933061aacd4f70cd865913ab1/comments", "author": null, "committer": null, "parents": [{"sha": "6f76a8788eebd50b78213f086166889167f0fcb2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f76a8788eebd50b78213f086166889167f0fcb2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f76a8788eebd50b78213f086166889167f0fcb2"}], "stats": {"total": 30, "additions": 21, "deletions": 9}, "files": [{"sha": "01eabe0ad553d6775bfb898aad031ed82d23f4e5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12c0e3856baf63f933061aacd4f70cd865913ab1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12c0e3856baf63f933061aacd4f70cd865913ab1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=12c0e3856baf63f933061aacd4f70cd865913ab1", "patch": "@@ -1,3 +1,8 @@\n+2011-05-01  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libgfortran/48787\n+\t* gfortran.dg/round_3.f08: Add more checks.\n+\n 2011-04-30  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/48821"}, {"sha": "12d9770fd76ee611e4e302dce2742dfea8b71bb0", "filename": "gcc/testsuite/gfortran.dg/round_3.f08", "status": "modified", "additions": 16, "deletions": 9, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12c0e3856baf63f933061aacd4f70cd865913ab1/gcc%2Ftestsuite%2Fgfortran.dg%2Fround_3.f08", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12c0e3856baf63f933061aacd4f70cd865913ab1/gcc%2Ftestsuite%2Fgfortran.dg%2Fround_3.f08", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fround_3.f08?ref=12c0e3856baf63f933061aacd4f70cd865913ab1", "patch": "@@ -4,10 +4,17 @@\n program pr48615\n     call checkfmt(\"(RU,F17.0)\", 2.5,     \"               3.\")\n     call checkfmt(\"(RU,-1P,F17.1)\", 2.5, \"              0.3\")\n-    call checkfmt(\"(RU,E17.1)\", 2.5,     \"          0.3E+01\") ! 0.2E+01\n+    call checkfmt(\"(RU,E17.1)\", 2.5,     \"          0.3E+01\")\n     call checkfmt(\"(RU,1P,E17.0)\", 2.5,  \"           3.E+00\")\n-    call checkfmt(\"(RU,ES17.0)\", 2.5,    \"           3.E+00\") ! 2.E+00\n+    call checkfmt(\"(RU,ES17.0)\", 2.5,    \"           3.E+00\")\n     call checkfmt(\"(RU,EN17.0)\", 2.5,    \"           3.E+00\")\n+    call checkfmt(\"(RU,F2.0)\",      2.0,  \"2.\")\n+    call checkfmt(\"(RU,F6.4)\",      2.0,  \"2.0000\")\n+    call checkfmt(\"(RU,1P,E6.0E2)\", 2.0,  \"2.E+00\")\n+    call checkfmt(\"(RU,1P,E7.1E2)\", 2.5,  \"2.5E+00\")\n+    call checkfmt(\"(RU,1P,E10.4E2)\", 2.5,  \"2.5000E+00\")\n+    call checkfmt(\"(RU,1P,G6.0E2)\", 2.0,  \"2.E+00\")\n+    call checkfmt(\"(RU,1P,G10.4E2)\", 2.3456e5,  \"2.3456E+05\")\n \n     call checkfmt(\"(RD,F17.0)\", 2.5,     \"               2.\")\n     call checkfmt(\"(RD,-1P,F17.1)\", 2.5, \"              0.2\")\n@@ -18,9 +25,9 @@ program pr48615\n \n     call checkfmt(\"(RC,F17.0)\", 2.5,     \"               3.\")\n     call checkfmt(\"(RC,-1P,F17.1)\", 2.5, \"              0.3\")\n-    call checkfmt(\"(RC,E17.1)\", 2.5,     \"          0.3E+01\") ! 0.2E+01\n+    call checkfmt(\"(RC,E17.1)\", 2.5,     \"          0.3E+01\")\n     call checkfmt(\"(RC,1P,E17.0)\", 2.5,  \"           3.E+00\")\n-    call checkfmt(\"(RC,ES17.0)\", 2.5,    \"           3.E+00\") ! 2.E+00\n+    call checkfmt(\"(RC,ES17.0)\", 2.5,    \"           3.E+00\")\n     call checkfmt(\"(RC,EN17.0)\", 2.5,    \"           3.E+00\")\n \n     call checkfmt(\"(RN,F17.0)\", 2.5,     \"               2.\")\n@@ -53,20 +60,20 @@ program pr48615\n \n     call checkfmt(\"(RC,F17.0)\", -2.5,     \"              -3.\")\n     call checkfmt(\"(RC,-1P,F17.1)\", -2.5, \"             -0.3\")\n-    call checkfmt(\"(RC,E17.1)\", -2.5,     \"         -0.3E+01\") ! -0.2E+01\n+    call checkfmt(\"(RC,E17.1)\", -2.5,     \"         -0.3E+01\")\n     call checkfmt(\"(RC,1P,E17.0)\", -2.5,  \"          -3.E+00\")\n-    call checkfmt(\"(RC,ES17.0)\", -2.5,    \"          -3.E+00\") ! -2.E+00\n+    call checkfmt(\"(RC,ES17.0)\", -2.5,    \"          -3.E+00\")\n     call checkfmt(\"(RC,EN17.0)\", -2.5,    \"          -3.E+00\")\n \n-    call checkfmt(\"(RU,E17.1)\", nearest(2.0, 1.0),     \"          0.3E+01\") ! 0.2E+01\n-    call checkfmt(\"(RD,E17.1)\", nearest(3.0, -1.0),    \"          0.2E+01\") ! 0.3E+01\n+    call checkfmt(\"(RU,E17.1)\", nearest(2.0, 1.0),     \"          0.3E+01\")\n+    call checkfmt(\"(RD,E17.1)\", nearest(3.0, -1.0),    \"          0.2E+01\")\n \n contains\n     subroutine checkfmt(fmt, x, cmp)\n         character(len=*), intent(in) :: fmt\n         real, intent(in) :: x\n         character(len=*), intent(in) :: cmp\n-        character(len=40) :: s\n+        character(len=20) :: s\n         \n         write(s, fmt) x\n         if (s /= cmp) call abort"}]}