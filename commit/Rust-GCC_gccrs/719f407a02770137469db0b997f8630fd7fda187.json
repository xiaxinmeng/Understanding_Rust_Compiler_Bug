{"sha": "719f407a02770137469db0b997f8630fd7fda187", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzE5ZjQwN2EwMjc3MDEzNzQ2OWRiMGI5OTdmODYzMGZkN2ZkYTE4Nw==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2004-03-01T02:25:06Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2004-03-01T02:25:06Z"}, "message": "re PR c++/14267 (ICE on invalid, cast to lval related)\n\n\tPR c++/14267\n\t* typeck.c (build_modify_expr): Remove more of the cast-as-lvalue\n\textension.\n\n\tPR c++/14267\n\t* g++.dg/expr/crash2.C: New test.\n\nFrom-SVN: r78689", "tree": {"sha": "37c4fdcbc66bbb8c2b3f88b4271cc9b1c6b3fa8e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/37c4fdcbc66bbb8c2b3f88b4271cc9b1c6b3fa8e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/719f407a02770137469db0b997f8630fd7fda187", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/719f407a02770137469db0b997f8630fd7fda187", "html_url": "https://github.com/Rust-GCC/gccrs/commit/719f407a02770137469db0b997f8630fd7fda187", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/719f407a02770137469db0b997f8630fd7fda187/comments", "author": null, "committer": null, "parents": [{"sha": "4ce4f2b50c41a395347468e7c3afd946c94db083", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ce4f2b50c41a395347468e7c3afd946c94db083", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ce4f2b50c41a395347468e7c3afd946c94db083"}], "stats": {"total": 68, "additions": 22, "deletions": 46}, "files": [{"sha": "82de3a9e19c38a5bccaea5f6316c7b11a8c92276", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/719f407a02770137469db0b997f8630fd7fda187/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/719f407a02770137469db0b997f8630fd7fda187/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=719f407a02770137469db0b997f8630fd7fda187", "patch": "@@ -1,5 +1,9 @@\n 2004-02-29  Mark Mitchell  <mark@codesourcery.com>\n \n+\tPR c++/14267\n+\t* typeck.c (build_modify_expr): Remove more of the cast-as-lvalue\n+\textension.\n+\n \tPR debug/12103\n \t* class.c (update_vtable_entry_for_fn): Do not go through\n \tcovariance machinery if the type returned by an overrider is the"}, {"sha": "d5d832b40947a0efbbca7672178fcc95d6fa56a3", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 1, "deletions": 46, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/719f407a02770137469db0b997f8630fd7fda187/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/719f407a02770137469db0b997f8630fd7fda187/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=719f407a02770137469db0b997f8630fd7fda187", "patch": "@@ -5098,52 +5098,7 @@ build_modify_expr (tree lhs, enum tree_code modifycode, tree rhs)\n \t\t\t  20011220);\n     }\n \n-  /* Handle a cast used as an \"lvalue\".\n-     We have already performed any binary operator using the value as cast.\n-     Now convert the result to the cast type of the lhs,\n-     and then true type of the lhs and store it there;\n-     then convert result back to the cast type to be the value\n-     of the assignment.  */\n-\n-  switch (TREE_CODE (lhs))\n-    {\n-    case NOP_EXPR:\n-    case CONVERT_EXPR:\n-    case FLOAT_EXPR:\n-    case FIX_TRUNC_EXPR:\n-    case FIX_FLOOR_EXPR:\n-    case FIX_ROUND_EXPR:\n-    case FIX_CEIL_EXPR:\n-      {\n-\ttree inner_lhs = TREE_OPERAND (lhs, 0);\n-\ttree result;\n-\n-\tif (TREE_CODE (TREE_TYPE (newrhs)) == ARRAY_TYPE\n-\t    || TREE_CODE (TREE_TYPE (newrhs)) == FUNCTION_TYPE\n-\t    || TREE_CODE (TREE_TYPE (newrhs)) == METHOD_TYPE\n-\t    || TREE_CODE (TREE_TYPE (newrhs)) == OFFSET_TYPE)\n-\t  newrhs = decay_conversion (newrhs);\n-\t\n-\t/* ISO C++ 5.4/1: The result is an lvalue if T is a reference\n-\t   type, otherwise the result is an rvalue.  */\n-\tif (! lvalue_p (lhs))\n-\t  pedwarn (\"ISO C++ forbids cast to non-reference type used as lvalue\");\n-\n-\tresult = build_modify_expr (inner_lhs, NOP_EXPR,\n-\t\t\t\t    cp_convert (TREE_TYPE (inner_lhs),\n-\t\t\t\t\t\tcp_convert (lhstype, newrhs)));\n-\tif (result == error_mark_node)\n-\t  return result;\n-\treturn cp_convert (TREE_TYPE (lhs), result);\n-      }\n-\n-    default:\n-      break;\n-    }\n-\n-  /* Now we have handled acceptable kinds of LHS that are not truly lvalues.\n-     Reject anything strange now.  */\n-\n+  /* The left-hand side must be an lvalue.  */\n   if (!lvalue_or_else (lhs, \"assignment\"))\n     return error_mark_node;\n "}, {"sha": "c6dbd88042f0a466280ba49d33db71e2bd67af03", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/719f407a02770137469db0b997f8630fd7fda187/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/719f407a02770137469db0b997f8630fd7fda187/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=719f407a02770137469db0b997f8630fd7fda187", "patch": "@@ -1,5 +1,8 @@\n 2004-02-29  Mark Mitchell  <mark@codesourcery.com>\n \n+\tPR c++/14267\n+\t* g++.dg/expr/crash2.C: New test.\n+\n \tPR middle-end/13448\n \t* gcc.dg/inline-5.c: New test.\n \t* gcc.dg/always-inline.c: Split out tests into ..."}, {"sha": "5379bb159d1b151224e7547da1f501e53da72c8f", "filename": "gcc/testsuite/g++.dg/expr/crash2.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/719f407a02770137469db0b997f8630fd7fda187/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fcrash2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/719f407a02770137469db0b997f8630fd7fda187/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fcrash2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fcrash2.C?ref=719f407a02770137469db0b997f8630fd7fda187", "patch": "@@ -0,0 +1,14 @@\n+// PR c++/14267\n+ \n+class foo {\n+public: static int& x;\n+};\n+int temp;\n+int& foo::x=temp;\n+\n+int main() {\n+  int x = 3;\n+  &foo::x = x; // { dg-error \"\" }\n+  return 0;\n+}\n+"}]}