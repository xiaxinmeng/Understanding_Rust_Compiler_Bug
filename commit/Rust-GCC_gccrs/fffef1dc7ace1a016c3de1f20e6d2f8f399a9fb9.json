{"sha": "fffef1dc7ace1a016c3de1f20e6d2f8f399a9fb9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmZmZWYxZGM3YWNlMWEwMTZjM2RlMWYyMGU2ZDJmOGYzOTlhOWZiOQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2007-02-12T18:53:22Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2007-02-12T18:53:22Z"}, "message": "alpha.md (bswapsi2, bswapdi2): New.\n\n        * config/alpha/alpha.md (bswapsi2, bswapdi2): New.\n        (inswl_const): Export.\n\nFrom-SVN: r121853", "tree": {"sha": "37f86bd962a54ff98ce454b52dba53ceabc07932", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/37f86bd962a54ff98ce454b52dba53ceabc07932"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fffef1dc7ace1a016c3de1f20e6d2f8f399a9fb9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fffef1dc7ace1a016c3de1f20e6d2f8f399a9fb9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fffef1dc7ace1a016c3de1f20e6d2f8f399a9fb9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fffef1dc7ace1a016c3de1f20e6d2f8f399a9fb9/comments", "author": null, "committer": null, "parents": [{"sha": "7ab0aca2fecff07dbc2dd3cf01e6288bf4a18454", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ab0aca2fecff07dbc2dd3cf01e6288bf4a18454", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ab0aca2fecff07dbc2dd3cf01e6288bf4a18454"}], "stats": {"total": 61, "additions": 60, "deletions": 1}, "files": [{"sha": "f8a1d0b48c719330a401184af56d938ef0f1d005", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fffef1dc7ace1a016c3de1f20e6d2f8f399a9fb9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fffef1dc7ace1a016c3de1f20e6d2f8f399a9fb9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fffef1dc7ace1a016c3de1f20e6d2f8f399a9fb9", "patch": "@@ -1,3 +1,8 @@\n+2007-02-12  Richard Henderson  <rth@redhat.com>\n+\n+\t* config/alpha/alpha.md (bswapsi2, bswapdi2): New.\n+\t(inswl_const): Export.\n+\n 2007-02-12  Richard Henderson  <rth@redhat.com>\n \n \t* calls.c (emit_library_call_value_1): If PROMOTE_MODE modifed the"}, {"sha": "3edd04c8f0364b1e91f3dd2983ae8d0d2f4550f8", "filename": "gcc/config/alpha/alpha.md", "status": "modified", "additions": 55, "deletions": 1, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fffef1dc7ace1a016c3de1f20e6d2f8f399a9fb9/gcc%2Fconfig%2Falpha%2Falpha.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fffef1dc7ace1a016c3de1f20e6d2f8f399a9fb9/gcc%2Fconfig%2Falpha%2Falpha.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.md?ref=fffef1dc7ace1a016c3de1f20e6d2f8f399a9fb9", "patch": "@@ -1437,6 +1437,60 @@\n   \"TARGET_CIX\"\n   \"ctpop %1,%0\"\n   [(set_attr \"type\" \"mvi\")])\n+\n+(define_expand \"bswapsi2\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"\")\n+\t(bswap:SI (match_operand:SI 1 \"register_operand\" \"\")))]\n+  \"!optimize_size\"\n+{\n+  rtx t0, t1;\n+\n+  t0 = gen_reg_rtx (DImode);\n+  t1 = gen_reg_rtx (DImode);\n+\n+  emit_insn (gen_insxh (t0, gen_lowpart (DImode, operands[1]),\n+\t\t\tGEN_INT (32), GEN_INT (WORDS_BIG_ENDIAN ? 0 : 7)));\n+  emit_insn (gen_inswl_const (t1, gen_lowpart (HImode, operands[1]),\n+\t\t\t      GEN_INT (24)));\n+  emit_insn (gen_iordi3 (t1, t0, t1));\n+  emit_insn (gen_lshrdi3 (t0, t1, GEN_INT (16)));\n+  emit_insn (gen_anddi3 (t1, t1, alpha_expand_zap_mask (0x5)));\n+  emit_insn (gen_anddi3 (t0, t0, alpha_expand_zap_mask (0xa)));\n+  emit_insn (gen_addsi3 (operands[0], gen_lowpart (SImode, t0),\n+\t\t\t gen_lowpart (SImode, t1)));\n+  DONE;\n+})\n+\n+(define_expand \"bswapdi2\"\n+  [(set (match_operand:DI 0 \"register_operand\" \"\")\n+\t(bswap:DI (match_operand:DI 1 \"register_operand\" \"\")))]\n+  \"!optimize_size\"\n+{\n+  rtx t0, t1;\n+\n+  t0 = gen_reg_rtx (DImode);\n+  t1 = gen_reg_rtx (DImode);\n+\n+  /* This method of shifting and masking is not specific to Alpha, but\n+     is only profitable on Alpha because of our handy byte zap insn.  */\n+\n+  emit_insn (gen_lshrdi3 (t0, operands[1], GEN_INT (32)));\n+  emit_insn (gen_ashldi3 (t1, operands[1], GEN_INT (32)));\n+  emit_insn (gen_iordi3 (t1, t0, t1));\n+\n+  emit_insn (gen_lshrdi3 (t0, t1, GEN_INT (16)));\n+  emit_insn (gen_ashldi3 (t1, t1, GEN_INT (16)));\n+  emit_insn (gen_anddi3 (t0, t0, alpha_expand_zap_mask (0xcc)));\n+  emit_insn (gen_anddi3 (t1, t1, alpha_expand_zap_mask (0x33)));\n+  emit_insn (gen_iordi3 (t1, t0, t1));\n+\n+  emit_insn (gen_lshrdi3 (t0, t1, GEN_INT (8)));\n+  emit_insn (gen_ashldi3 (t1, t1, GEN_INT (8)));\n+  emit_insn (gen_anddi3 (t0, t0, alpha_expand_zap_mask (0xaa)));\n+  emit_insn (gen_anddi3 (t1, t1, alpha_expand_zap_mask (0x55)));\n+  emit_insn (gen_iordi3 (operands[0], t0, t1));\n+  DONE;\n+})\n \f\n ;; Next come the shifts and the various extract and insert operations.\n \n@@ -2008,7 +2062,7 @@\n   \"insbl %1,%s2,%0\"\n   [(set_attr \"type\" \"shift\")])\n \n-(define_insn \"*inswl_const\"\n+(define_insn \"inswl_const\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n \t(ashift:DI (zero_extend:DI (match_operand:HI 1 \"register_operand\" \"r\"))\n \t\t   (match_operand:DI 2 \"mul8_operand\" \"I\")))]"}]}