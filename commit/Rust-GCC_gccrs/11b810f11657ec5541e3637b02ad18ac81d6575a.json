{"sha": "11b810f11657ec5541e3637b02ad18ac81d6575a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTFiODEwZjExNjU3ZWM1NTQxZTM2MzdiMDJhZDE4YWM4MWQ2NTc1YQ==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2001-01-15T16:18:43Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2001-01-15T16:18:43Z"}, "message": "pt.c (check_nontype_parm): Rename to ...\n\n\t* pt.c (check_nontype_parm): Rename to ...\n\t(invalid_nontype_parm_type_p): ... here.\n\t(process_template_parm): Adjust.\n\t(convert_template_argument): Adjust.\n\nFrom-SVN: r39040", "tree": {"sha": "698bfed0e481e2e750e3a207bfc246cb55b6fdf4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/698bfed0e481e2e750e3a207bfc246cb55b6fdf4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/11b810f11657ec5541e3637b02ad18ac81d6575a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11b810f11657ec5541e3637b02ad18ac81d6575a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/11b810f11657ec5541e3637b02ad18ac81d6575a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11b810f11657ec5541e3637b02ad18ac81d6575a/comments", "author": null, "committer": null, "parents": [{"sha": "6c98269caade6f1688dce794bffaf3f5bcfb7463", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c98269caade6f1688dce794bffaf3f5bcfb7463", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c98269caade6f1688dce794bffaf3f5bcfb7463"}], "stats": {"total": 15, "additions": 11, "deletions": 4}, "files": [{"sha": "bd54df02f4c7c5e3b82a74919a80f8304e348828", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11b810f11657ec5541e3637b02ad18ac81d6575a/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11b810f11657ec5541e3637b02ad18ac81d6575a/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=11b810f11657ec5541e3637b02ad18ac81d6575a", "patch": "@@ -1,3 +1,10 @@\n+2001-01-15  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* pt.c (check_nontype_parm): Rename to ...\n+\t(invalid_nontype_parm_type_p): ... here.\n+\t(process_template_parm): Adjust.\n+\t(convert_template_argument): Adjust.\n+\n 2001-01-15  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* pt.c (check_nontype_parm): New function."}, {"sha": "1463dbeff1a0f1f51d2060145d1072fb93fb5fcb", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11b810f11657ec5541e3637b02ad18ac81d6575a/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11b810f11657ec5541e3637b02ad18ac81d6575a/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=11b810f11657ec5541e3637b02ad18ac81d6575a", "patch": "@@ -169,7 +169,7 @@ static tree for_each_template_parm_r PARAMS ((tree *, int *, void *));\n static tree instantiate_clone PARAMS ((tree, tree));\n static tree copy_default_args_to_explicit_spec_1 PARAMS ((tree, tree));\n static void copy_default_args_to_explicit_spec PARAMS ((tree));\n-static int check_nontype_parm PARAMS ((tree, int));\n+static int invalid_nontype_parm_type_p PARAMS ((tree, int));\n \n /* Called once to initialize pt.c.  */\n \n@@ -1934,7 +1934,7 @@ process_template_parm (list, next)\n \n       /* A template parameter is not modifiable.  */\n       TREE_READONLY (parm) = 1;\n-      if (check_nontype_parm (TREE_TYPE (parm), 1))\n+      if (invalid_nontype_parm_type_p (TREE_TYPE (parm), 1))\n         TREE_TYPE (parm) = void_type_node;\n       decl = build_decl (CONST_DECL, DECL_NAME (parm), TREE_TYPE (parm));\n       DECL_INITIAL (parm) = DECL_INITIAL (decl) \n@@ -3417,7 +3417,7 @@ convert_template_argument (parm, arg, args, complain, i, in_decl)\n     {\n       tree t = tsubst (TREE_TYPE (parm), args, complain, in_decl);\n \n-      if (check_nontype_parm (t, complain))\n+      if (invalid_nontype_parm_type_p (t, complain))\n         return error_mark_node;\n       \n       if (processing_template_decl)\n@@ -10307,7 +10307,7 @@ current_instantiation ()\n    non-zero, then complain. */\n \n static int\n-check_nontype_parm (type, complain)\n+invalid_nontype_parm_type_p (type, complain)\n      tree type;\n      int complain;\n {"}]}