{"sha": "247ecdf3b8568e4b489598858b7586dccf9f95e5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjQ3ZWNkZjNiODU2OGU0YjQ4OTU5ODg1OGI3NTg2ZGNjZjlmOTVlNQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2015-01-08T15:48:36Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2015-01-08T15:48:36Z"}, "message": "re PR c++/60753 (Deleted definition of an explicit function template specialization, following a declaration, incorrectly accepted)\n\n/cp\n2015-01-08  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/60753\n\t* decl.c (grokfndecl): Add bool parameter.\n\t(grokdeclarator): Adjust calls.\n\t(start_decl): Don't set DECL_DELETED_FN here.\n\n/testsuite\n2015-01-08  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/60753\n\t* g++.dg/cpp0x/deleted10.C: New.\n\nFrom-SVN: r219347", "tree": {"sha": "1616c404b687f28401bb54f5d40ed995afa1d327", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1616c404b687f28401bb54f5d40ed995afa1d327"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/247ecdf3b8568e4b489598858b7586dccf9f95e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/247ecdf3b8568e4b489598858b7586dccf9f95e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/247ecdf3b8568e4b489598858b7586dccf9f95e5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/247ecdf3b8568e4b489598858b7586dccf9f95e5/comments", "author": null, "committer": null, "parents": [{"sha": "45f46750a3513790573791c0eec6b600b42f2042", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45f46750a3513790573791c0eec6b600b42f2042", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45f46750a3513790573791c0eec6b600b42f2042"}], "stats": {"total": 65, "additions": 43, "deletions": 22}, "files": [{"sha": "5c576bc262b610e728faae4e45f3d3da2197fd35", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/247ecdf3b8568e4b489598858b7586dccf9f95e5/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/247ecdf3b8568e4b489598858b7586dccf9f95e5/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=247ecdf3b8568e4b489598858b7586dccf9f95e5", "patch": "@@ -1,3 +1,10 @@\n+2015-01-08  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/60753\n+\t* decl.c (grokfndecl): Add bool parameter.\n+\t(grokdeclarator): Adjust calls.\n+\t(start_decl): Don't set DECL_DELETED_FN here.\n+\n 2015-01-06  Jason Merrill  <jason@redhat.com>\n \n \t* parser.c (cp_parser_nested_name_specifier_opt): Diagnose invalid"}, {"sha": "65ccf7745d273793fd9c21de0195ad15ea2641dc", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 16, "deletions": 22, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/247ecdf3b8568e4b489598858b7586dccf9f95e5/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/247ecdf3b8568e4b489598858b7586dccf9f95e5/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=247ecdf3b8568e4b489598858b7586dccf9f95e5", "patch": "@@ -4631,26 +4631,15 @@ start_decl (const cp_declarator *declarator,\n   if (context != global_namespace)\n     *pushed_scope_p = push_scope (context);\n \n-  if (initialized)\n-    /* Is it valid for this decl to have an initializer at all?\n-       If not, set INITIALIZED to zero, which will indirectly\n-       tell `cp_finish_decl' to ignore the initializer once it is parsed.  */\n-    switch (TREE_CODE (decl))\n-      {\n-      case TYPE_DECL:\n-\terror (\"typedef %qD is initialized (use decltype instead)\", decl);\n-\treturn error_mark_node;\n-\n-      case FUNCTION_DECL:\n-\tif (initialized == SD_DELETED)\n-\t  /* We'll handle the rest of the semantics later, but we need to\n-\t     set this now so it's visible to duplicate_decls.  */\n-\t  DECL_DELETED_FN (decl) = 1;\n-\tbreak;\n-\n-      default:\n-\tbreak;\n-      }\n+  /* Is it valid for this decl to have an initializer at all?\n+     If not, set INITIALIZED to zero, which will indirectly\n+     tell `cp_finish_decl' to ignore the initializer once it is parsed.  */\n+  if (initialized\n+      && TREE_CODE (decl) == TYPE_DECL)\n+    {\n+      error (\"typedef %qD is initialized (use decltype instead)\", decl);\n+      return error_mark_node;\n+    }\n \n   if (initialized)\n     {\n@@ -7630,6 +7619,7 @@ grokfndecl (tree ctype,\n \t    int friendp,\n \t    int publicp,\n \t    int inlinep,\n+\t    bool deletedp,\n \t    special_function_kind sfk,\n \t    bool funcdef_flag,\n \t    int template_count,\n@@ -7768,6 +7758,9 @@ grokfndecl (tree ctype,\n       DECL_CONTEXT (decl) = ctype;\n     }\n \n+  if (deletedp)\n+    DECL_DELETED_FN (decl) = 1;\n+\n   if (ctype)\n     {\n       DECL_CONTEXT (decl) = ctype;\n@@ -10756,7 +10749,7 @@ grokdeclarator (const cp_declarator *declarator,\n \t\t\t       virtualp, flags, memfn_quals, rqual, raises,\n \t\t\t       friendp ? -1 : 0, friendp, publicp,\n                                inlinep | (2 * constexpr_p),\n-\t\t\t       sfk,\n+\t\t\t       initialized == SD_DELETED, sfk,\n \t\t\t       funcdef_flag, template_count, in_namespace,\n \t\t\t       attrlist, declarator->id_loc);\n             decl = set_virt_specifiers (decl, virt_specifiers);\n@@ -10978,7 +10971,8 @@ grokdeclarator (const cp_declarator *declarator,\n \tdecl = grokfndecl (ctype, type, original_name, parms, unqualified_id,\n \t\t\t   virtualp, flags, memfn_quals, rqual, raises,\n \t\t\t   1, friendp,\n-\t\t\t   publicp, inlinep | (2 * constexpr_p), sfk,\n+\t\t\t   publicp, inlinep | (2 * constexpr_p),\n+\t\t\t   initialized == SD_DELETED, sfk,\n                            funcdef_flag,\n \t\t\t   template_count, in_namespace, attrlist,\n \t\t\t   declarator->id_loc);"}, {"sha": "e692f4699d4cf0198cd5dcca1a5d86a31a6190ec", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/247ecdf3b8568e4b489598858b7586dccf9f95e5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/247ecdf3b8568e4b489598858b7586dccf9f95e5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=247ecdf3b8568e4b489598858b7586dccf9f95e5", "patch": "@@ -1,3 +1,8 @@\n+2015-01-08  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/60753\n+\t* g++.dg/cpp0x/deleted10.C: New.\n+\n 2015-01-07  David Malcolm  <dmalcolm@redhat.com>\n \n \t* jit.dg/test-error-dereferencing-void-ptr.c: New test case."}, {"sha": "4fbee27c3336c3719f4bfc8d59a6f088ca35588c", "filename": "gcc/testsuite/g++.dg/cpp0x/deleted10.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/247ecdf3b8568e4b489598858b7586dccf9f95e5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdeleted10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/247ecdf3b8568e4b489598858b7586dccf9f95e5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdeleted10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdeleted10.C?ref=247ecdf3b8568e4b489598858b7586dccf9f95e5", "patch": "@@ -0,0 +1,15 @@\n+// PR c++/60753\n+// { dg-do compile { target c++11 } }\n+\n+template<class T> void foo (T);\n+\n+template<> void foo<int> (int);\n+template<> void foo<int> (int) = delete;     // { dg-error \"deleted\" }\n+\n+struct S\n+{\n+  template<class T> void bar (T);\n+};\n+\n+template<> void S::bar<int> (int);\n+template<> void S::bar<int> (int) = delete;  // { dg-error \"deleted\" }"}]}