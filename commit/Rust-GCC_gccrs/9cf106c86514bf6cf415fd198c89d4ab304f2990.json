{"sha": "9cf106c86514bf6cf415fd198c89d4ab304f2990", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWNmMTA2Yzg2NTE0YmY2Y2Y0MTVmZDE5OGM4OWQ0YWIzMDRmMjk5MA==", "commit": {"author": {"name": "Julian Brown", "email": "julian@codesourcery.com", "date": "2007-01-12T09:20:49Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2007-01-12T09:20:49Z"}, "message": "200x-xx-xx Julian Brown <julian@codesourcery.com>\n\ngcc/\n200x-xx-xx  Julian Brown  <julian@codesourcery.com>\n\n\t* config/m68k/m68k.h (TUNE_68040_60): New macro.\n\t* config/m68k/m68k.c (standard_68881_constant_p): Use it.\n\t* config/m68k/m68k.md: Likewise.\n\nFrom-SVN: r120707", "tree": {"sha": "a41adcd231ec74d9e2180a571e8dbf7a59d7bd1a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a41adcd231ec74d9e2180a571e8dbf7a59d7bd1a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9cf106c86514bf6cf415fd198c89d4ab304f2990", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9cf106c86514bf6cf415fd198c89d4ab304f2990", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9cf106c86514bf6cf415fd198c89d4ab304f2990", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9cf106c86514bf6cf415fd198c89d4ab304f2990/comments", "author": {"login": "jtb20", "id": 6094880, "node_id": "MDQ6VXNlcjYwOTQ4ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/6094880?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtb20", "html_url": "https://github.com/jtb20", "followers_url": "https://api.github.com/users/jtb20/followers", "following_url": "https://api.github.com/users/jtb20/following{/other_user}", "gists_url": "https://api.github.com/users/jtb20/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtb20/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtb20/subscriptions", "organizations_url": "https://api.github.com/users/jtb20/orgs", "repos_url": "https://api.github.com/users/jtb20/repos", "events_url": "https://api.github.com/users/jtb20/events{/privacy}", "received_events_url": "https://api.github.com/users/jtb20/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fe95f2f79935846508510da61613c58b00b3ec75", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe95f2f79935846508510da61613c58b00b3ec75", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe95f2f79935846508510da61613c58b00b3ec75"}], "stats": {"total": 23, "additions": 15, "deletions": 8}, "files": [{"sha": "236347222882146ea8cd5de862821ebce0ae9260", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cf106c86514bf6cf415fd198c89d4ab304f2990/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cf106c86514bf6cf415fd198c89d4ab304f2990/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9cf106c86514bf6cf415fd198c89d4ab304f2990", "patch": "@@ -1,3 +1,9 @@\n+2007-01-12  Julian Brown  <julian@codesourcery.com>\n+\n+\t* config/m68k/m68k.h (TUNE_68040_60): New macro.\n+\t* config/m68k/m68k.c (standard_68881_constant_p): Use it.\n+\t* config/m68k/m68k.md: Likewise.\n+\n 2007-01-12  Julian Brown  <julian@codesourcery.com>\n \t    Richard Sandiford  <richard@codesourcery.com>\n "}, {"sha": "2a2b1aaa6e43e7a5312e3df2475f5c96b438a2ef", "filename": "gcc/config/m68k/m68k.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cf106c86514bf6cf415fd198c89d4ab304f2990/gcc%2Fconfig%2Fm68k%2Fm68k.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cf106c86514bf6cf415fd198c89d4ab304f2990/gcc%2Fconfig%2Fm68k%2Fm68k.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.c?ref=9cf106c86514bf6cf415fd198c89d4ab304f2990", "patch": "@@ -2789,7 +2789,7 @@ standard_68881_constant_p (rtx x)\n \n   /* fmovecr must be emulated on the 68040 and 68060, so it shouldn't be\n      used at all on those chips.  */\n-  if (TUNE_68040 || TUNE_68060)\n+  if (TUNE_68040_60)\n     return 0;\n \n   if (! inited_68881_table)"}, {"sha": "5eedd9acc0f238e9cede1a226bbda23741c5d952", "filename": "gcc/config/m68k/m68k.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cf106c86514bf6cf415fd198c89d4ab304f2990/gcc%2Fconfig%2Fm68k%2Fm68k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cf106c86514bf6cf415fd198c89d4ab304f2990/gcc%2Fconfig%2Fm68k%2Fm68k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.h?ref=9cf106c86514bf6cf415fd198c89d4ab304f2990", "patch": "@@ -130,6 +130,7 @@ Boston, MA 02110-1301, USA.  */\n #define TUNE_68030\tTARGET_68030\n #define TUNE_68040\tTARGET_68040\n #define TUNE_68060\tTARGET_68060\n+#define TUNE_68040_60\t(TUNE_68040 || TUNE_68060)\n #define TUNE_CFV2\tTARGET_5200\n \n #define OVERRIDE_OPTIONS   override_options()"}, {"sha": "c02c75cd8dfaecc4b1b9f48ff3d8a2374cda837a", "filename": "gcc/config/m68k/m68k.md", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cf106c86514bf6cf415fd198c89d4ab304f2990/gcc%2Fconfig%2Fm68k%2Fm68k.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cf106c86514bf6cf415fd198c89d4ab304f2990/gcc%2Fconfig%2Fm68k%2Fm68k.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.md?ref=9cf106c86514bf6cf415fd198c89d4ab304f2990", "patch": "@@ -618,10 +618,10 @@\n   if (ADDRESS_REG_P (operands[0]))\n     {\n       /* On the '040, 'subl an,an' takes 2 clocks while lea takes only 1 */\n-      if (!TUNE_68040 && !TUNE_68060)\n-\treturn \"sub%.l %0,%0\";\n-      else\n+      if (TUNE_68040_60)\n \treturn MOTOROLA ? \"lea 0.w,%0\" : \"lea 0:w,%0\";\n+      else\n+\treturn \"sub%.l %0,%0\";\n     }\n   /* moveq is faster on the 68000.  */\n   if (DATA_REG_P (operands[0]) && TUNE_68000_10)\n@@ -846,10 +846,10 @@\n       if (ADDRESS_REG_P (operands[0]))\n \t{\n \t  /* On the '040, 'subl an,an' takes 2 clocks while lea takes only 1 */\n-\t  if (!TUNE_68040 && !TUNE_68060)\n-\t    return \"sub%.l %0,%0\";\n-\t  else\n+\t  if (TUNE_68040_60)\n \t    return MOTOROLA ? \"lea 0.w,%0\" : \"lea 0:w,%0\";\n+\t  else\n+\t    return \"sub%.l %0,%0\";\n \t}\n       /* moveq is faster on the 68000.  */\n       if (DATA_REG_P (operands[0]) && TUNE_68000_10)\n@@ -2869,7 +2869,7 @@\n   \"TARGET_68881\"\n {\n   if (GET_CODE (operands[2]) == CONST_DOUBLE\n-      && floating_exact_log2 (operands[2]) && !TUNE_68040 && !TUNE_68060)\n+      && floating_exact_log2 (operands[2]) && !TUNE_68040_60)\n     {\n       int i = floating_exact_log2 (operands[2]);\n       operands[2] = GEN_INT (i);"}]}