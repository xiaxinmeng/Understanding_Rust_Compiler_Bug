{"sha": "225ff11985aa7ebb3b51b935e0afe6197ae7f54e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjI1ZmYxMTk4NWFhN2ViYjNiNTFiOTM1ZTBhZmU2MTk3YWU3ZjU0ZQ==", "commit": {"author": {"name": "Andreas Jaeger", "email": "aj@suse.de", "date": "1999-12-09T23:24:58Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "1999-12-09T23:24:58Z"}, "message": "except.c (expand_throw): Add static attribute to match prototype.\n\n\t* except.c (expand_throw): Add static attribute to match\n\tprototype.\n\n\t* Makefile.in (semantics.o): Add dependency on output.h.\n\t* semantics.c: Include output.h for declaration of\n\tmake_function_rtl.\n\nFrom-SVN: r30850", "tree": {"sha": "7666e8073374846ad957d143d2a777c87f1d31c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7666e8073374846ad957d143d2a777c87f1d31c7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/225ff11985aa7ebb3b51b935e0afe6197ae7f54e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/225ff11985aa7ebb3b51b935e0afe6197ae7f54e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/225ff11985aa7ebb3b51b935e0afe6197ae7f54e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/225ff11985aa7ebb3b51b935e0afe6197ae7f54e/comments", "author": {"login": "ajaeger", "id": 16867, "node_id": "MDQ6VXNlcjE2ODY3", "avatar_url": "https://avatars.githubusercontent.com/u/16867?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ajaeger", "html_url": "https://github.com/ajaeger", "followers_url": "https://api.github.com/users/ajaeger/followers", "following_url": "https://api.github.com/users/ajaeger/following{/other_user}", "gists_url": "https://api.github.com/users/ajaeger/gists{/gist_id}", "starred_url": "https://api.github.com/users/ajaeger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ajaeger/subscriptions", "organizations_url": "https://api.github.com/users/ajaeger/orgs", "repos_url": "https://api.github.com/users/ajaeger/repos", "events_url": "https://api.github.com/users/ajaeger/events{/privacy}", "received_events_url": "https://api.github.com/users/ajaeger/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3eb24f739e0576e8370a1aa540950ec9555e62b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3eb24f739e0576e8370a1aa540950ec9555e62b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3eb24f739e0576e8370a1aa540950ec9555e62b2"}], "stats": {"total": 18, "additions": 15, "deletions": 3}, "files": [{"sha": "bde1126e3eb6a7bfc48dde4606bca578259c8841", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/225ff11985aa7ebb3b51b935e0afe6197ae7f54e/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/225ff11985aa7ebb3b51b935e0afe6197ae7f54e/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=225ff11985aa7ebb3b51b935e0afe6197ae7f54e", "patch": "@@ -1,4 +1,13 @@\n-1999-12-09  Mark Mitchell  <mark@codesourcery.com>\n+11999-12-09  Andreas Jaeger  <aj@suse.de>\n+\n+\t* except.c (expand_throw): Add static attribute to match\n+\tprototype.\n+\n+\t* Makefile.in (semantics.o): Add dependency on output.h.\n+\t* semantics.c: Include output.h for declaration of\n+\tmake_function_rtl.\n+\n+999-12-09  Mark Mitchell  <mark@codesourcery.com>\n \n \t* decl.c (init_decl_processing): Reenable inlining on trees.\n \t(finish_function): Likewise."}, {"sha": "d845c3e15762e45faaf321de965197a5776b3ad5", "filename": "gcc/cp/Makefile.in", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/225ff11985aa7ebb3b51b935e0afe6197ae7f54e/gcc%2Fcp%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/225ff11985aa7ebb3b51b935e0afe6197ae7f54e/gcc%2Fcp%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FMakefile.in?ref=225ff11985aa7ebb3b51b935e0afe6197ae7f54e", "patch": "@@ -297,7 +297,8 @@ repo.o : repo.c $(CXX_TREE_H) \\\n   $(srcdir)/../toplev.h $(srcdir)/../ggc.h\n semantics.o: semantics.c $(CXX_TREE_H) lex.h \\\n   $(srcdir)/../except.h $(srcdir)/../toplev.h \\\n-  $(srcdir)/../flags.h $(srcdir)/../ggc.h $(RTL_H)\n+  $(srcdir)/../flags.h $(srcdir)/../ggc.h \\\n+  $(srcdir)/../output.h $(RTL_H) \n dump.o: dump.c $(CXX_TREE_H)\n optimize.o: optimize.c $(CXX_TREE_H) \\\n   $(srcdir)/../rtl.h $(srcdir)/../integrate.h ../insn-config.h"}, {"sha": "48eb4fd89291b43f4ecd31d73d5149c3741cb854", "filename": "gcc/cp/except.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/225ff11985aa7ebb3b51b935e0afe6197ae7f54e/gcc%2Fcp%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/225ff11985aa7ebb3b51b935e0afe6197ae7f54e/gcc%2Fcp%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fexcept.c?ref=225ff11985aa7ebb3b51b935e0afe6197ae7f54e", "patch": "@@ -766,7 +766,7 @@ alloc_eh_object (type)\n \t\tgenerate a label for the throw block\n \t4. jump to the throw block label.  */\n \n-tree\n+static tree\n expand_throw (exp)\n      tree exp;\n {"}, {"sha": "c8368883d4eea213b1fe9d3927559644125ca6fa", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/225ff11985aa7ebb3b51b935e0afe6197ae7f54e/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/225ff11985aa7ebb3b51b935e0afe6197ae7f54e/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=225ff11985aa7ebb3b51b935e0afe6197ae7f54e", "patch": "@@ -34,6 +34,7 @@\n #include \"flags.h\"\n #include \"ggc.h\"\n #include \"rtl.h\"\n+#include \"output.h\"\n \n /* There routines provide a modular interface to perform many parsing\n    operations.  They may therefore be used during actual parsing, or\n@@ -46,6 +47,7 @@\n \n static tree expand_cond PROTO((tree));\n static tree maybe_convert_cond PROTO((tree));\n+static tree simplify_aggr_init_exprs_r PROTO((tree *, int *, void *));\n \n /* Record the fact that STMT was the last statement added to the\n    statement tree.  */"}]}