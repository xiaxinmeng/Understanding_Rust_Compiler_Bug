{"sha": "03bc3cd68260c7270a3bcde14ba159e5a986b0e6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDNiYzNjZDY4MjYwYzcyNzBhM2JjZGUxNGJhMTU5ZTVhOTg2YjBlNg==", "commit": {"author": {"name": "SimplyTheOther", "email": "simplytheother@gmail.com", "date": "2020-06-18T13:57:26Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2020-11-28T21:13:16Z"}, "message": "Added C-SKY target hook (at least provisional one)", "tree": {"sha": "b7aacfe3160720771846a5770aaa73a84d9baef4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b7aacfe3160720771846a5770aaa73a84d9baef4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/03bc3cd68260c7270a3bcde14ba159e5a986b0e6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03bc3cd68260c7270a3bcde14ba159e5a986b0e6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03bc3cd68260c7270a3bcde14ba159e5a986b0e6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03bc3cd68260c7270a3bcde14ba159e5a986b0e6/comments", "author": {"login": "SimplyTheOther", "id": 19371469, "node_id": "MDQ6VXNlcjE5MzcxNDY5", "avatar_url": "https://avatars.githubusercontent.com/u/19371469?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimplyTheOther", "html_url": "https://github.com/SimplyTheOther", "followers_url": "https://api.github.com/users/SimplyTheOther/followers", "following_url": "https://api.github.com/users/SimplyTheOther/following{/other_user}", "gists_url": "https://api.github.com/users/SimplyTheOther/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimplyTheOther/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimplyTheOther/subscriptions", "organizations_url": "https://api.github.com/users/SimplyTheOther/orgs", "repos_url": "https://api.github.com/users/SimplyTheOther/repos", "events_url": "https://api.github.com/users/SimplyTheOther/events{/privacy}", "received_events_url": "https://api.github.com/users/SimplyTheOther/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f1d19b06d14e8fc22915e8e100b5df396f155fe3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1d19b06d14e8fc22915e8e100b5df396f155fe3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1d19b06d14e8fc22915e8e100b5df396f155fe3"}], "stats": {"total": 94, "additions": 93, "deletions": 1}, "files": [{"sha": "558acceae2adb82bfbecbb45fcc909ed31a1edba", "filename": "gcc/config.gcc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03bc3cd68260c7270a3bcde14ba159e5a986b0e6/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03bc3cd68260c7270a3bcde14ba159e5a986b0e6/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=03bc3cd68260c7270a3bcde14ba159e5a986b0e6", "patch": "@@ -1529,7 +1529,7 @@ cr16-*-elf)\n         tm_file=\"elfos.h ${tm_file} newlib-stdint.h\"\n         tmake_file=\"${tmake_file} cr16/t-cr16 \"\n         use_collect2=no\n-\t\trust_target_objs=\"cr16-rust.o\"\n+        rust_target_objs=\"cr16-rust.o\"\n         ;;\n cris-*-elf | cris-*-none)\n \ttm_file=\"dbxelf.h elfos.h newlib-stdint.h ${tm_file}\"\n@@ -1605,6 +1605,7 @@ csky-*-*)\n \t\texit 1\n \t\t;;\n \tesac\n+\trust_target_objs=\"csky-rust.o\"\n \t;;\n epiphany-*-elf | epiphany-*-rtems*)\n \ttm_file=\"${tm_file} dbxelf.h elfos.h\""}, {"sha": "37d12f4360aa49919a6650a398fe9d923d38c09b", "filename": "gcc/config/csky/csky-protos.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03bc3cd68260c7270a3bcde14ba159e5a986b0e6/gcc%2Fconfig%2Fcsky%2Fcsky-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03bc3cd68260c7270a3bcde14ba159e5a986b0e6/gcc%2Fconfig%2Fcsky%2Fcsky-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcsky%2Fcsky-protos.h?ref=03bc3cd68260c7270a3bcde14ba159e5a986b0e6", "patch": "@@ -27,6 +27,8 @@ extern bool csky_legitimate_pic_operand_p (rtx);\n \n extern void csky_cpu_cpp_builtins (cpp_reader *);\n \n+extern void csky_rust_target_cpu_info (void);\n+\n extern bool csky_inlinable_constant (HOST_WIDE_INT value);\n extern bool csky_shifted_imm8_constant (unsigned HOST_WIDE_INT,\n \t\t\t\t\tunsigned int *, unsigned int *);"}, {"sha": "16dd7b2e8afc06450840389aec055925eb1fce3b", "filename": "gcc/config/csky/csky-rust.c", "status": "added", "additions": 83, "deletions": 0, "changes": 83, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03bc3cd68260c7270a3bcde14ba159e5a986b0e6/gcc%2Fconfig%2Fcsky%2Fcsky-rust.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03bc3cd68260c7270a3bcde14ba159e5a986b0e6/gcc%2Fconfig%2Fcsky%2Fcsky-rust.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcsky%2Fcsky-rust.c?ref=03bc3cd68260c7270a3bcde14ba159e5a986b0e6", "patch": "@@ -0,0 +1,83 @@\n+/* Subroutines for the Rust front end for C-SKY targets.\n+   Copyright (C) 2020 Free Software Foundation, Inc.\n+\n+GCC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 3, or (at your option)\n+any later version.\n+\n+GCC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#include \"config.h\"\n+#include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n+#include \"tm_p.h\"\n+#include \"rust/rust-target.h\"\n+#include \"rust/rust-target-def.h\"\n+\n+/* Implement TARGET_RUST_CPU_INFO for C-SKY targets.  */\n+\n+void cris_rust_target_cpu_info(void) {\n+    rust_add_target_info(\"target_arch\", \"csky\");\n+\n+    // llvm seems to have no support for sky (nor historical support), so names are made up by me\n+    // TODO: very subject to change\n+    // TODO maybe put in sub-arches as features? idk. might be useful in this case \n+    if (TARGET_HARD_FLOAT)\n+        rust_add_target_info(\"target_feature\", \"hard-float\");\n+    else\n+        rust_add_target_info(\"target_feature\", \"soft-float\");\n+    if (TARGET_DOUBLE_FLOAT)\n+        rust_add_target_info(\"target_feature\", \"double-float\");\n+    if (TARGET_FDIVDU)\n+        rust_add_target_info(\"target_feature\", \"fdivdu\");\n+    if (TARGET_ELRW)\n+        rust_add_target_info(\"target_feature\", \"elrw\");\n+    if (TARGET_ISTACK)\n+        rust_add_target_info(\"target_feature\", \"istack\");\n+    if (TARGET_MP)\n+        rust_add_target_info(\"target_feature\", \"mp\");\n+    if (TARGET_CP)\n+        rust_add_target_info(\"target_feature\", \"cp\");\n+    if (TARGET_CACHE)\n+        rust_add_target_info(\"target_feature\", \"cache\");\n+    if (TARGET_SECURITY)\n+        rust_add_target_info(\"target_feature\", \"security\"); // maybe also add define for \"mac\"?\n+    if (TARGET_TRUST)\n+        rust_add_target_info(\"target_feature\", \"trust\");\n+    if (TARGET_DSP)\n+        rust_add_target_info(\"target_feature\", \"dsp\");\n+    if (TARGET_EDSP)\n+        rust_add_target_info(\"target_feature\", \"edsp\");\n+    if (TARGET_VDSP)\n+        rust_add_target_info(\"target_feature\", \"vdsp\");\n+    if (TARGET_DIV)\n+        rust_add_target_info(\"target_feature\", \"div\");\n+    if (TARGET_MINI_REGISTERS)\n+        rust_add_target_info(\"target_feature\", \"smart\");\n+    if (TARGET_HIGH_REGISTERS)\n+        rust_add_target_info(\"target_feature\", \"high-registers\");\n+    if (TARGET_ANCHOR)\n+        rust_add_target_info(\"target_feature\", \"anchor\");\n+    if (TARGET_PUSHPOP)\n+        rust_add_target_info(\"target_feature\", \"pushpop\");\n+    if (TARGET_MULTIPLE_STLD)\n+        rust_add_target_info(\"target_feature\", \"multiple-stld\"); // maybe also add define for \"stm\"?\n+    if (TARGET_CONSTANT_POOL)\n+        rust_add_target_info(\"target_feature\", \"constpool\");\n+    if (TARGET_STACK_SIZE)\n+        rust_add_target_info(\"target_feature\", \"stack-size\");\n+    if (TARGET_LIBCCRT)\n+        rust_add_target_info(\"target_feature\", \"ccrt\");\n+    // maybe have branch cost as target feature? but kind of doesn't really fit as \"define\"\n+    if (flag_sched_prolog)\n+        rust_add_target_info(\"target_feature\", \"sched-prolog\");\n+}"}, {"sha": "5461c2a268b3dd9e452d209870b56578b6e1915b", "filename": "gcc/config/csky/csky.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03bc3cd68260c7270a3bcde14ba159e5a986b0e6/gcc%2Fconfig%2Fcsky%2Fcsky.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03bc3cd68260c7270a3bcde14ba159e5a986b0e6/gcc%2Fconfig%2Fcsky%2Fcsky.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcsky%2Fcsky.h?ref=03bc3cd68260c7270a3bcde14ba159e5a986b0e6", "patch": "@@ -704,6 +704,8 @@ extern enum reg_class regno_reg_class[FIRST_PSEUDO_REGISTER];\n #define TARGET_CPU_CPP_BUILTINS()\t\t      \\\n   csky_cpu_cpp_builtins (pfile)\n \n+#define TARGET_RUST_CPU_INFO csky_rust_target_cpu_info\n+\n /******************************************************************\n  *\t\t\tPer-function Data\t\t\t  *\n  ******************************************************************/"}, {"sha": "64137a668949419e583c80eb9126dbe1b65e743f", "filename": "gcc/config/csky/t-csky", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03bc3cd68260c7270a3bcde14ba159e5a986b0e6/gcc%2Fconfig%2Fcsky%2Ft-csky", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03bc3cd68260c7270a3bcde14ba159e5a986b0e6/gcc%2Fconfig%2Fcsky%2Ft-csky", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcsky%2Ft-csky?ref=03bc3cd68260c7270a3bcde14ba159e5a986b0e6", "patch": "@@ -27,3 +27,7 @@ $(srcdir)/config/csky/csky_tables.opt: $(srcdir)/config/csky/csky_genopt.sh \\\n   $(srcdir)/config/csky/csky_cores.def\n \t$(SHELL) $(srcdir)/config/csky/csky_genopt.sh $(srcdir)/config/csky > \\\n \t\t$(srcdir)/config/csky/csky_tables.opt\n+\n+csky-rust.o: $(srcdir)/config/csky/csky-rust.c \\\n+  $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) $(C_COMMON_H)\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $<"}]}