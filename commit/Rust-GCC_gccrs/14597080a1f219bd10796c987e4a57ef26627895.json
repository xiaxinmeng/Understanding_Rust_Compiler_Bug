{"sha": "14597080a1f219bd10796c987e4a57ef26627895", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTQ1OTcwODBhMWYyMTliZDEwNzk2Yzk4N2U0YTU3ZWYyNjYyNzg5NQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2013-02-04T13:31:28Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2013-02-04T13:31:28Z"}, "message": "re PR middle-end/56188 (FAIL: gcc.dg/ipa/ipa-pta-10.c scan-ipa-dump pta \"ESCAPED = { (ESCAPED )?(NONLOCAL )?}\")\n\n2013-02-04  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/56188\n\t* tree-ssa-structalias.c (label_visit): Consider case with\n\tinitially non-empty points-to set.\n\t(perform_var_substitution): Dump node mapping and clean up.\n\nFrom-SVN: r195713", "tree": {"sha": "4742f68251bfff2323dad4108e5b30104476afcb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4742f68251bfff2323dad4108e5b30104476afcb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/14597080a1f219bd10796c987e4a57ef26627895", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14597080a1f219bd10796c987e4a57ef26627895", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14597080a1f219bd10796c987e4a57ef26627895", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14597080a1f219bd10796c987e4a57ef26627895/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ed73881ea9ff3c99389618defe96b814cb952135", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed73881ea9ff3c99389618defe96b814cb952135", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed73881ea9ff3c99389618defe96b814cb952135"}], "stats": {"total": 45, "additions": 31, "deletions": 14}, "files": [{"sha": "597c8baa168dca9f518e8f48ab000d2f1d089cef", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14597080a1f219bd10796c987e4a57ef26627895/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14597080a1f219bd10796c987e4a57ef26627895/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=14597080a1f219bd10796c987e4a57ef26627895", "patch": "@@ -1,3 +1,10 @@\n+2013-02-04  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/56188\n+\t* tree-ssa-structalias.c (label_visit): Consider case with\n+\tinitially non-empty points-to set.\n+\t(perform_var_substitution): Dump node mapping and clean up.\n+\n 2013-02-04  Richard Guenther  <rguenther@suse.de>\n \n \tPR lto/56168"}, {"sha": "31a4c49c66c8a44792b6fdc78190facb539a4606", "filename": "gcc/tree-ssa-structalias.c", "status": "modified", "additions": 24, "deletions": 14, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14597080a1f219bd10796c987e4a57ef26627895/gcc%2Ftree-ssa-structalias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14597080a1f219bd10796c987e4a57ef26627895/gcc%2Ftree-ssa-structalias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-structalias.c?ref=14597080a1f219bd10796c987e4a57ef26627895", "patch": "@@ -2101,13 +2101,17 @@ label_visit (constraint_graph_t graph, struct scc_info *si, unsigned int n)\n \n       if (graph->points_to[w])\n \t{\n-\t  if (first_pred == -1U)\n-\t    first_pred = w;\n-\t  else if (!graph->points_to[n])\n+\t  if (!graph->points_to[n])\n \t    {\n-\t      graph->points_to[n] = BITMAP_ALLOC (&predbitmap_obstack);\n-\t      bitmap_ior (graph->points_to[n],\n-\t\t\t  graph->points_to[first_pred], graph->points_to[w]);\n+\t      if (first_pred == -1U)\n+\t\tfirst_pred = w;\n+\t      else\n+\t\t{\n+\t\t  graph->points_to[n] = BITMAP_ALLOC (&predbitmap_obstack);\n+\t\t  bitmap_ior (graph->points_to[n],\n+\t\t\t      graph->points_to[first_pred],\n+\t\t\t      graph->points_to[w]);\n+\t\t}\n \t    }\n \t  else\n \t    bitmap_ior_into(graph->points_to[n], graph->points_to[w]);\n@@ -2231,14 +2235,20 @@ perform_var_substitution (constraint_graph_t graph)\n   if (dump_file && (dump_flags & TDF_DETAILS))\n     for (i = 0; i < FIRST_REF_NODE; i++)\n       {\n-\tbool direct_node = bitmap_bit_p (graph->direct_nodes, i);\n-\tfprintf (dump_file,\n-\t\t \"Equivalence classes for %s node id %d:%s are pointer: %d\"\n-\t\t \", location:%d\\n\",\n-\t\t direct_node ? \"Direct node\" : \"Indirect node\", i,\n-\t\t get_varinfo (i)->name,\n-\t\t graph->pointer_label[si->node_mapping[i]],\n-\t\t graph->loc_label[si->node_mapping[i]]);\n+\tunsigned j = si->node_mapping[i];\n+\tif (j != i)\n+\t  fprintf (dump_file, \"%s node id %d (%s) mapped to SCC leader \"\n+\t\t   \"node id %d (%s)\\n\",\n+\t\t    bitmap_bit_p (graph->direct_nodes, i)\n+\t\t    ? \"Direct\" : \"Indirect\", i, get_varinfo (i)->name,\n+\t\t    j, get_varinfo (j)->name);\n+\telse\n+\t  fprintf (dump_file,\n+\t\t   \"Equivalence classes for %s node id %d (%s): pointer %d\"\n+\t\t   \", location %d\\n\",\n+\t\t   bitmap_bit_p (graph->direct_nodes, i)\n+\t\t   ? \"direct\" : \"indirect\", i, get_varinfo (i)->name,\n+\t\t   graph->pointer_label[i], graph->loc_label[i]);\n       }\n \n   /* Quickly eliminate our non-pointer variables.  */"}]}