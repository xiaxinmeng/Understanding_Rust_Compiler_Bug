{"sha": "5f4d82c2ea1d086294ed3b2863760bcd171a9127", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWY0ZDgyYzJlYTFkMDg2Mjk0ZWQzYjI4NjM3NjBiY2QxNzFhOTEyNw==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2009-01-30T22:09:15Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2009-01-30T22:09:15Z"}, "message": "re PR tree-optimization/39041 (ICE on valid during vrp2)\n\n2009-01-30  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/39041\n\t* tree-ssa-forwprop.c (forward_propagate_addr_expr_1):\n\tPropagate variable indices only if the types match for this stmt.\n\n\t* gcc.c-torture/compile/pr39041.c: New testcase.\n\nFrom-SVN: r143808", "tree": {"sha": "124fa5debc098af947b864d95735536887120002", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/124fa5debc098af947b864d95735536887120002"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5f4d82c2ea1d086294ed3b2863760bcd171a9127", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f4d82c2ea1d086294ed3b2863760bcd171a9127", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f4d82c2ea1d086294ed3b2863760bcd171a9127", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f4d82c2ea1d086294ed3b2863760bcd171a9127/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d0728ae0d8311979f9e73498d2701bce8216adf1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0728ae0d8311979f9e73498d2701bce8216adf1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d0728ae0d8311979f9e73498d2701bce8216adf1"}], "stats": {"total": 40, "additions": 40, "deletions": 0}, "files": [{"sha": "e871bd645cd0b4bc2c307291335029cd0da96026", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f4d82c2ea1d086294ed3b2863760bcd171a9127/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f4d82c2ea1d086294ed3b2863760bcd171a9127/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5f4d82c2ea1d086294ed3b2863760bcd171a9127", "patch": "@@ -1,3 +1,9 @@\n+2009-01-30  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/39041\n+\t* tree-ssa-forwprop.c (forward_propagate_addr_expr_1):\n+\tPropagate variable indices only if the types match for this stmt.\n+\n 2009-01-30  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/39013"}, {"sha": "02244e51b5dbd2d9be62a5dce62948aadf50e781", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f4d82c2ea1d086294ed3b2863760bcd171a9127/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f4d82c2ea1d086294ed3b2863760bcd171a9127/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5f4d82c2ea1d086294ed3b2863760bcd171a9127", "patch": "@@ -1,3 +1,8 @@\n+2009-01-30  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/39041\n+\t* gcc.c-torture/compile/pr39041.c: New testcase.\n+\n 2009-01-30  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/39013"}, {"sha": "cc58a8a37e05863ecaced1072cfec067a638455b", "filename": "gcc/testsuite/gcc.c-torture/compile/pr39041.c", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f4d82c2ea1d086294ed3b2863760bcd171a9127/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr39041.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f4d82c2ea1d086294ed3b2863760bcd171a9127/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr39041.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr39041.c?ref=5f4d82c2ea1d086294ed3b2863760bcd171a9127", "patch": "@@ -0,0 +1,28 @@\n+int test_bit(int nr, void *addr)\n+{\n+  int *a = (int *)addr;\n+  int mask;\n+  a += nr;\n+  mask = 1 << nr;\n+  return mask & *a;\n+}\n+struct {\n+    struct {\n+\tint disabled;\n+    } *data[1];\n+} trace;\n+struct {\n+    unsigned bits[1];\n+} cpumask;\n+void inc(int *);\n+void dec(int *);\n+int foo(void)\n+{\n+  int cpu;\n+  for (cpu = 0; cpu < 1; cpu++) {\n+      if (test_bit(cpu, cpumask.bits))\n+\tinc(&trace.data[cpu]->disabled);\n+      if (!test_bit(cpu, cpumask.bits))\n+\tdec(&trace.data[cpu]->disabled);\n+  }\n+}"}, {"sha": "3a8126262c2ba777a19d6dba2698114a9d5045f1", "filename": "gcc/tree-ssa-forwprop.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f4d82c2ea1d086294ed3b2863760bcd171a9127/gcc%2Ftree-ssa-forwprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f4d82c2ea1d086294ed3b2863760bcd171a9127/gcc%2Ftree-ssa-forwprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-forwprop.c?ref=5f4d82c2ea1d086294ed3b2863760bcd171a9127", "patch": "@@ -845,6 +845,7 @@ forward_propagate_addr_expr_1 (tree name, tree def_rhs,\n      array elements, then the result is converted into the proper\n      type for the arithmetic.  */\n   if (TREE_CODE (rhs2) == SSA_NAME\n+      && useless_type_conversion_p (TREE_TYPE (name), TREE_TYPE (def_rhs))\n       /* Avoid problems with IVopts creating PLUS_EXPRs with a\n \t different type than their operands.  */\n       && useless_type_conversion_p (TREE_TYPE (lhs), TREE_TYPE (def_rhs)))"}]}