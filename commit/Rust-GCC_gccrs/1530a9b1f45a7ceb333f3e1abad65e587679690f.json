{"sha": "1530a9b1f45a7ceb333f3e1abad65e587679690f", "node_id": "C_kwDOANBUbNoAKDE1MzBhOWIxZjQ1YTdjZWIzMzNmM2UxYWJhZDY1ZTU4NzY3OTY5MGY", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2023-01-04T11:49:19Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2023-01-04T11:53:49Z"}, "message": "libstdc++: Fix std::array<T, 0>::data() to be a constant expression [PR108258]\n\nWhen I refactored the __array_traits helper I broke this.\n\nlibstdc++-v3/ChangeLog:\n\n\tPR libstdc++/108258\n\t* include/std/array (__array_traits<T, 0>::operator T*()): Add\n\tconstexpr.\n\t* testsuite/23_containers/array/element_access/constexpr_c++17.cc: Check\n\tstd::array<T, 0>::data().", "tree": {"sha": "bf61a9dbe8000f7d7f4d34a2562b718485140faa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bf61a9dbe8000f7d7f4d34a2562b718485140faa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1530a9b1f45a7ceb333f3e1abad65e587679690f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1530a9b1f45a7ceb333f3e1abad65e587679690f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1530a9b1f45a7ceb333f3e1abad65e587679690f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1530a9b1f45a7ceb333f3e1abad65e587679690f/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ebc449119442501c927ede0e83697eaece72223e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ebc449119442501c927ede0e83697eaece72223e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ebc449119442501c927ede0e83697eaece72223e"}], "stats": {"total": 21, "additions": 17, "deletions": 4}, "files": [{"sha": "c50a201b0325d3a7ecb7d602a9b150a79b6509bc", "filename": "libstdc++-v3/include/std/array", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1530a9b1f45a7ceb333f3e1abad65e587679690f/libstdc%2B%2B-v3%2Finclude%2Fstd%2Farray", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1530a9b1f45a7ceb333f3e1abad65e587679690f/libstdc%2B%2B-v3%2Finclude%2Fstd%2Farray", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Farray?ref=1530a9b1f45a7ceb333f3e1abad65e587679690f", "patch": "@@ -69,7 +69,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n        // Conversion to a pointer produces a null pointer.\n        __attribute__((__always_inline__))\n-       operator _Tp*() const noexcept { return nullptr; }\n+       constexpr operator _Tp*() const noexcept { return nullptr; }\n      };\n \n      using _Is_swappable = true_type;"}, {"sha": "b92aa5c04e23bc3ab9cf98a6561ad0e57897d696", "filename": "libstdc++-v3/testsuite/23_containers/array/element_access/constexpr_c++17.cc", "status": "modified", "additions": 16, "deletions": 3, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1530a9b1f45a7ceb333f3e1abad65e587679690f/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Felement_access%2Fconstexpr_c%2B%2B17.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1530a9b1f45a7ceb333f3e1abad65e587679690f/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Felement_access%2Fconstexpr_c%2B%2B17.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Felement_access%2Fconstexpr_c%2B%2B17.cc?ref=1530a9b1f45a7ceb333f3e1abad65e587679690f", "patch": "@@ -34,21 +34,34 @@ constexpr std::size_t test01()\n   auto v2  = a.at(2);\n   auto v3  = a.front();\n   auto v4  = a.back();\n-  return v1 + v2 + v3 + v4;\n+  auto v5 = *a.data();\n+  return v1 + v2 + v3 + v4 + v5;\n }\n \n static_assert( test01() == (55 + 66 + 0 + 2) );\n \n constexpr std::size_t test02()\n {\n-  // array\n+  // const array\n   typedef std::array<std::size_t, 6> array_type;\n   const array_type a = { { 0, 55, 66, 99, 4115, 2 } };\n   auto v1  = a[1];\n   auto v2  = a.at(2);\n   auto v3  = a.front();\n   auto v4  = a.back();\n-  return v1 + v2 + v3 + v4;\n+  auto v5 = *a.data();\n+  return v1 + v2 + v3 + v4 + v5;\n }\n \n static_assert( test02() == (55 + 66 + 0 + 2) );\n+\n+constexpr bool test_zero()\n+{\n+  // zero-sized array (PR libstdc++/108258)\n+  std::array<int, 0> a{};\n+  auto v4 = a.data();\n+  // The standard says this is unspecified, it's null for our implementation:\n+  return a.data() == nullptr;\n+}\n+\n+static_assert( test_zero() );"}]}