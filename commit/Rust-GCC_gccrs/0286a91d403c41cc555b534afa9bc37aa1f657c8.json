{"sha": "0286a91d403c41cc555b534afa9bc37aa1f657c8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDI4NmE5MWQ0MDNjNDFjYzU1NWI1MzRhZmE5YmMzN2FhMWY2NTdjOA==", "commit": {"author": {"name": "Per Bothner", "email": "per@bothner.com", "date": "2001-09-04T21:50:31Z"}, "committer": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "2001-09-04T21:50:31Z"}, "message": "parse.y (maybe_yank_clinit): A field without an initializer is not relevant.\n\n\n\t* parse.y (maybe_yank_clinit):  A field without an initializer is not\n\trelevant.  All initializers except static final and constant require\n\t<clinit>, regardless of flag_emit_class_files.\n\nFrom-SVN: r45388", "tree": {"sha": "3aa4d589e9f930024d5f2e721aeee96095bdd21b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3aa4d589e9f930024d5f2e721aeee96095bdd21b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0286a91d403c41cc555b534afa9bc37aa1f657c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0286a91d403c41cc555b534afa9bc37aa1f657c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0286a91d403c41cc555b534afa9bc37aa1f657c8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0286a91d403c41cc555b534afa9bc37aa1f657c8/comments", "author": {"login": "PerBothner", "id": 10293361, "node_id": "MDQ6VXNlcjEwMjkzMzYx", "avatar_url": "https://avatars.githubusercontent.com/u/10293361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PerBothner", "html_url": "https://github.com/PerBothner", "followers_url": "https://api.github.com/users/PerBothner/followers", "following_url": "https://api.github.com/users/PerBothner/following{/other_user}", "gists_url": "https://api.github.com/users/PerBothner/gists{/gist_id}", "starred_url": "https://api.github.com/users/PerBothner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PerBothner/subscriptions", "organizations_url": "https://api.github.com/users/PerBothner/orgs", "repos_url": "https://api.github.com/users/PerBothner/repos", "events_url": "https://api.github.com/users/PerBothner/events{/privacy}", "received_events_url": "https://api.github.com/users/PerBothner/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c0dae541cf5963c517c121a0f6b4b0886578d216", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0dae541cf5963c517c121a0f6b4b0886578d216", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0dae541cf5963c517c121a0f6b4b0886578d216"}], "stats": {"total": 26, "additions": 14, "deletions": 12}, "files": [{"sha": "0f1973822b380e9b0a62d3689c248b587eae2664", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0286a91d403c41cc555b534afa9bc37aa1f657c8/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0286a91d403c41cc555b534afa9bc37aa1f657c8/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=0286a91d403c41cc555b534afa9bc37aa1f657c8", "patch": "@@ -1,3 +1,9 @@\n+2001-09-01  Per Bothner  <per@bothner.com>\n+\n+\t* parse.y (maybe_yank_clinit):  A field without an initializer is not\n+\trelevant.  All initializers except static final and constant require\n+\t<clinit>, regardless of flag_emit_class_files.\n+\n 2001-08-31  Per Bothner  <per@bothner.com>\n \n \t* class.c (set_constant_value):  When not emiting class files, then a"}, {"sha": "698f42274e8f2af771f4bc1dbd62c6201b505a2a", "filename": "gcc/java/parse.y", "status": "modified", "additions": 8, "deletions": 12, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0286a91d403c41cc555b534afa9bc37aa1f657c8/gcc%2Fjava%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0286a91d403c41cc555b534afa9bc37aa1f657c8/gcc%2Fjava%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.y?ref=0286a91d403c41cc555b534afa9bc37aa1f657c8", "patch": "@@ -7862,25 +7862,21 @@ maybe_yank_clinit (mdecl)\n       if (!FIELD_STATIC (current))\n \tcontinue;\n \n+      /* nor in fields with initializers. */\n+      f_init = DECL_INITIAL (current);\n+\n+      if (f_init == NULL_TREE)\n+\tcontinue;\n+\n       /* Anything that isn't String or a basic type is ruled out -- or\n \t if we know how to deal with it (when doing things natively) we\n \t should generated an empty <clinit> so that SUID are computed\n \t correctly. */\n       if (! JSTRING_TYPE_P (TREE_TYPE (current))\n \t  && ! JNUMERIC_TYPE_P (TREE_TYPE (current)))\n \tbreak;\n-\t  \n-      f_init = DECL_INITIAL (current);\n-      /* If we're emitting native code, we want static final fields to\n-\t have constant initializers. If we don't meet these\n-\t conditions, we keep <clinit> */\n-      if (!flag_emit_class_files\n-\t  && !(FIELD_FINAL (current) && f_init && TREE_CONSTANT (f_init)))\n-\tbreak;\n-      /* If we're emitting bytecode, we want static fields to have\n-\t constant initializers or no initializer. If we don't meet\n-\t these conditions, we keep <clinit> */\n-      if (flag_emit_class_files && f_init && !TREE_CONSTANT (f_init))\n+\n+      if (! FIELD_FINAL (current) || ! TREE_CONSTANT (f_init))\n \tbreak;\n     }\n "}]}