{"sha": "b3235e974fee0ce362afafed93a8e5916ae790e1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjMyMzVlOTc0ZmVlMGNlMzYyYWZhZmVkOTNhOGU1OTE2YWU3OTBlMQ==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2016-12-07T12:52:39Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2016-12-07T12:52:39Z"}, "message": "cp-tree.h (enum cp_tree_index): Add CPTI_AUTO_IDENTIFIER & CPTI_DECLTYPE_AUTO_IDENTIFIER.\n\n\t* cp-tree.h (enum cp_tree_index): Add CPTI_AUTO_IDENTIFIER &\n\tCPTI_DECLTYPE_AUTO_IDENTIFIER.\n\t(auto_identifier, decltype_auto_identifier): New.\n\t*decl.c (initialize_predefined_identifiers): Add 'auto' and\n\t'decltype(auto)'.\n\t(grokdeclarator): Use cached identifier.\n\t* pt.c (make_decltype_auto, make_auto, make_constrained_auto,\n\tis_auto): Likewise.\n\nFrom-SVN: r243342", "tree": {"sha": "3b8fde14f0440e81500745808b5c81e2265e8ced", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3b8fde14f0440e81500745808b5c81e2265e8ced"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b3235e974fee0ce362afafed93a8e5916ae790e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3235e974fee0ce362afafed93a8e5916ae790e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b3235e974fee0ce362afafed93a8e5916ae790e1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3235e974fee0ce362afafed93a8e5916ae790e1/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bbe9a71dff7c5684dbdca1c1befc93099b411636", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbe9a71dff7c5684dbdca1c1befc93099b411636", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bbe9a71dff7c5684dbdca1c1befc93099b411636"}], "stats": {"total": 30, "additions": 24, "deletions": 6}, "files": [{"sha": "3964cfd5aa952d60499bb71df5b9e50bebd71f96", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3235e974fee0ce362afafed93a8e5916ae790e1/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3235e974fee0ce362afafed93a8e5916ae790e1/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=b3235e974fee0ce362afafed93a8e5916ae790e1", "patch": "@@ -1,3 +1,14 @@\n+2016-12-07  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* cp-tree.h (enum cp_tree_index): Add CPTI_AUTO_IDENTIFIER &\n+\tCPTI_DECLTYPE_AUTO_IDENTIFIER.\n+\t(auto_identifier, decltype_auto_identifier): New.\n+\t*decl.c (initialize_predefined_identifiers): Add 'auto' and\n+\t'decltype(auto)'.\n+\t(grokdeclarator): Use cached identifier.\n+\t* pt.c (make_decltype_auto, make_auto, make_constrained_auto,\n+\tis_auto): Likewise.\n+\n 2016-12-02  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/78649"}, {"sha": "f7da76a8e818fc08fd1b7ebbb9b5b6614369b47e", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3235e974fee0ce362afafed93a8e5916ae790e1/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3235e974fee0ce362afafed93a8e5916ae790e1/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=b3235e974fee0ce362afafed93a8e5916ae790e1", "patch": "@@ -1117,6 +1117,8 @@ enum cp_tree_index\n     CPTI_PFN_IDENTIFIER,\n     CPTI_VPTR_IDENTIFIER,\n     CPTI_STD_IDENTIFIER,\n+    CPTI_AUTO_IDENTIFIER,\n+    CPTI_DECLTYPE_AUTO_IDENTIFIER,\n \n     CPTI_LANG_NAME_C,\n     CPTI_LANG_NAME_CPLUSPLUS,\n@@ -1200,6 +1202,9 @@ extern GTY(()) tree cp_global_trees[CPTI_MAX];\n #define vptr_identifier\t\t\tcp_global_trees[CPTI_VPTR_IDENTIFIER]\n /* The name of the std namespace.  */\n #define std_identifier\t\t\tcp_global_trees[CPTI_STD_IDENTIFIER]\n+/* auto and declspec(auto) identifiers.  */\n+#define auto_identifier\t\t\tcp_global_trees[CPTI_AUTO_IDENTIFIER]\n+#define decltype_auto_identifier\tcp_global_trees[CPTI_DECLTYPE_AUTO_IDENTIFIER]\n /* The name of a C++17 deduction guide.  */\n #define lang_name_c\t\t\tcp_global_trees[CPTI_LANG_NAME_C]\n #define lang_name_cplusplus\t\tcp_global_trees[CPTI_LANG_NAME_CPLUSPLUS]"}, {"sha": "d7dbf94c07699378d0ca3b85391d3da42dfbd130", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3235e974fee0ce362afafed93a8e5916ae790e1/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3235e974fee0ce362afafed93a8e5916ae790e1/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=b3235e974fee0ce362afafed93a8e5916ae790e1", "patch": "@@ -4034,6 +4034,8 @@ initialize_predefined_identifiers (void)\n     { \"__vtt_parm\", &vtt_parm_identifier, 0 },\n     { \"::\", &global_scope_name, 0 },\n     { \"std\", &std_identifier, 0 },\n+    { \"auto\", &auto_identifier, 0 },\n+    { \"decltype(auto)\", &decltype_auto_identifier, 0 },\n     { NULL, NULL, 0 }\n   };\n \n@@ -10600,7 +10602,7 @@ grokdeclarator (const cp_declarator *declarator,\n \t  gcc_unreachable ();\n \t}\n       if (TREE_CODE (type) != TEMPLATE_TYPE_PARM\n-\t  || TYPE_IDENTIFIER (type) != get_identifier (\"auto\"))\n+\t  || TYPE_IDENTIFIER (type) != auto_identifier)\n \t{\n \t  if (type != error_mark_node)\n \t    {"}, {"sha": "3b80ca402e7d9de75be830da5b5fe5476c7b9e9e", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3235e974fee0ce362afafed93a8e5916ae790e1/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3235e974fee0ce362afafed93a8e5916ae790e1/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=b3235e974fee0ce362afafed93a8e5916ae790e1", "patch": "@@ -24302,13 +24302,13 @@ make_auto_1 (tree name, bool set_canonical)\n tree\n make_decltype_auto (void)\n {\n-  return make_auto_1 (get_identifier (\"decltype(auto)\"), true);\n+  return make_auto_1 (decltype_auto_identifier, true);\n }\n \n tree\n make_auto (void)\n {\n-  return make_auto_1 (get_identifier (\"auto\"), true);\n+  return make_auto_1 (auto_identifier, true);\n }\n \n /* Return a C++17 deduction placeholder for class template TMPL.  */\n@@ -24330,7 +24330,7 @@ make_template_placeholder (tree tmpl)\n tree\n make_constrained_auto (tree con, tree args)\n {\n-  tree type = make_auto_1 (get_identifier (\"auto\"), false);\n+  tree type = make_auto_1 (auto_identifier, false);\n \n   /* Build the constraint. */\n   tree tmpl = DECL_TI_TEMPLATE (con);\n@@ -25016,8 +25016,8 @@ bool\n is_auto (const_tree type)\n {\n   if (TREE_CODE (type) == TEMPLATE_TYPE_PARM\n-      && (TYPE_IDENTIFIER (type) == get_identifier (\"auto\")\n-\t  || TYPE_IDENTIFIER (type) == get_identifier (\"decltype(auto)\")\n+      && (TYPE_IDENTIFIER (type) == auto_identifier\n+\t  || TYPE_IDENTIFIER (type) == decltype_auto_identifier\n \t  || CLASS_PLACEHOLDER_TEMPLATE (type)))\n     return true;\n   else"}]}