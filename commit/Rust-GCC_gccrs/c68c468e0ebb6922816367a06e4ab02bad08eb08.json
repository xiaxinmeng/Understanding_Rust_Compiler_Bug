{"sha": "c68c468e0ebb6922816367a06e4ab02bad08eb08", "node_id": "C_kwDOANBUbNoAKGM2OGM0NjhlMGViYjY5MjI4MTYzNjdhMDZlNGFiMDJiYWQwOGViMDg", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-11-15T14:24:57Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-11-15T14:24:57Z"}, "message": "libstdc++: Fix std::format test for strict -std=c++20 mode\n\nAdjust a test to avoid using std::make_unsigned_t<__int128>. That's\nill-formed in strict modes because std::is_integral_v<__int128> is\nfalse.\n\nlibstdc++-v3/ChangeLog:\n\n\t* testsuite/std/format/functions/format.cc: Do not use\n\tstd::make_unsigned_t<__int128>.", "tree": {"sha": "3d414211c8a31f7ae5756df77aef380af8a4f5c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3d414211c8a31f7ae5756df77aef380af8a4f5c5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c68c468e0ebb6922816367a06e4ab02bad08eb08", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c68c468e0ebb6922816367a06e4ab02bad08eb08", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c68c468e0ebb6922816367a06e4ab02bad08eb08", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c68c468e0ebb6922816367a06e4ab02bad08eb08/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a5d4f38fbe3bf71efd465d5260955bd6675765fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5d4f38fbe3bf71efd465d5260955bd6675765fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5d4f38fbe3bf71efd465d5260955bd6675765fd"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "8019fbdf7125ee54380a13cc977230d6ef49d55e", "filename": "libstdc++-v3/testsuite/std/format/functions/format.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c68c468e0ebb6922816367a06e4ab02bad08eb08/libstdc%2B%2B-v3%2Ftestsuite%2Fstd%2Fformat%2Ffunctions%2Fformat.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c68c468e0ebb6922816367a06e4ab02bad08eb08/libstdc%2B%2B-v3%2Ftestsuite%2Fstd%2Fformat%2Ffunctions%2Fformat.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fstd%2Fformat%2Ffunctions%2Fformat.cc?ref=c68c468e0ebb6922816367a06e4ab02bad08eb08", "patch": "@@ -233,15 +233,14 @@ test_wchar()\n void\n test_minmax()\n {\n-  auto check = []<typename T>(T) {\n+  auto check = []<typename T, typename U = std::make_unsigned_t<T>>(T, U = 0) {\n     const int digits = std::numeric_limits<T>::digits;\n     const std::string zeros(digits, '0');\n     const std::string ones(digits, '1');\n     auto s = std::format(\"{:b}\" , std::numeric_limits<T>::min());\n     VERIFY( s == \"-1\" + zeros );\n     s = std::format(\"{:b}\" , std::numeric_limits<T>::max());\n     VERIFY( s == ones );\n-    using U = std::make_unsigned_t<T>;\n     s = std::format(\"{:0{}b}\" , std::numeric_limits<U>::min(), digits + 1);\n     VERIFY( s == '0' + zeros );\n     s = std::format(\"{:b}\" , std::numeric_limits<U>::max());\n@@ -252,7 +251,9 @@ test_minmax()\n   check(std::int32_t(0));\n   check(std::int64_t(0));\n #ifdef __SIZEOF_INT128__\n-  check(__int128(0));\n+  // std::make_unsigned_t<__int128> is invalid for strict -std=c++20 mode,\n+  // so pass a second argument of the unsigned type.\n+  check(__int128(0), (unsigned __int128)(0));\n #endif\n }\n "}]}