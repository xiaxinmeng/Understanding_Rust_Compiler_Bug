{"sha": "ee68591e69621b4fdbbd925044b66b6147800cf9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWU2ODU5MWU2OTYyMWI0ZmRiYmQ5MjUwNDRiNjZiNjE0NzgwMGNmOQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2014-10-09T08:20:53Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2014-10-09T08:20:53Z"}, "message": "re PR tree-optimization/63445 (request: make -Wstrict-overflow avoid a class of false positives)\n\n2014-10-09  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/63445\n\t* tree-vrp.c (simplify_cond_using_ranges): Only warn about\n\toverflow for non-equality compares.\n\n\t* gcc.dg/Wstrict-overflow-26.c: New testcase.\n\nFrom-SVN: r216028", "tree": {"sha": "bb758a1c6c30688ffeabdbe9b62736d35f09b005", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bb758a1c6c30688ffeabdbe9b62736d35f09b005"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ee68591e69621b4fdbbd925044b66b6147800cf9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee68591e69621b4fdbbd925044b66b6147800cf9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee68591e69621b4fdbbd925044b66b6147800cf9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee68591e69621b4fdbbd925044b66b6147800cf9/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9d55066c88b4c276a969ea2b86614c7bd034f212", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d55066c88b4c276a969ea2b86614c7bd034f212", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d55066c88b4c276a969ea2b86614c7bd034f212"}], "stats": {"total": 32, "additions": 30, "deletions": 2}, "files": [{"sha": "b8b9f3019a802d44b337f3215fce93dc39173beb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee68591e69621b4fdbbd925044b66b6147800cf9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee68591e69621b4fdbbd925044b66b6147800cf9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ee68591e69621b4fdbbd925044b66b6147800cf9", "patch": "@@ -1,3 +1,9 @@\n+2014-10-09  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/63445\n+\t* tree-vrp.c (simplify_cond_using_ranges): Only warn about\n+\toverflow for non-equality compares.\n+\n 2014-10-09  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR rtl-optimization/57003"}, {"sha": "a8870ea3de711dd7a11bf77663189f80544739b1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee68591e69621b4fdbbd925044b66b6147800cf9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee68591e69621b4fdbbd925044b66b6147800cf9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ee68591e69621b4fdbbd925044b66b6147800cf9", "patch": "@@ -1,3 +1,8 @@\n+2014-10-09  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/63445\n+\t* gcc.dg/Wstrict-overflow-26.c: New testcase.\n+\n 2014-10-08  Pat Haugen  <pthaugen@us.ibm.com>\n \n \t* gcc.dg/vmx/3c-01a.c: Add default options from vmx.exp."}, {"sha": "ef805b56d25292aaa8744b07d10a6d9d078ee837", "filename": "gcc/testsuite/gcc.dg/Wstrict-overflow-26.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee68591e69621b4fdbbd925044b66b6147800cf9/gcc%2Ftestsuite%2Fgcc.dg%2FWstrict-overflow-26.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee68591e69621b4fdbbd925044b66b6147800cf9/gcc%2Ftestsuite%2Fgcc.dg%2FWstrict-overflow-26.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWstrict-overflow-26.c?ref=ee68591e69621b4fdbbd925044b66b6147800cf9", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -Wstrict-overflow\" } */\n+\n+int\n+f (int i, int j)\n+{\n+  unsigned int c = 0;                                                          \n+  if (i < j)\n+    {\n+      unsigned int n = j - i;\n+      unsigned int i;\n+      for (i = 0; i < n; i++) /* { dg-bogus \"signed overflow\" } */\n+\tc++;\n+    }\n+  return c;\n+}"}, {"sha": "7ca05284ede099a4cb3aa1f6117f6e2910a78e9e", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee68591e69621b4fdbbd925044b66b6147800cf9/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee68591e69621b4fdbbd925044b66b6147800cf9/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=ee68591e69621b4fdbbd925044b66b6147800cf9", "patch": "@@ -9189,8 +9189,9 @@ simplify_cond_using_ranges (gimple stmt)\n \t      /* If the range overflowed and the user has asked for warnings\n \t\t when strict overflow semantics were used to optimize code,\n \t\t issue an appropriate warning.  */\n-\t      if ((is_negative_overflow_infinity (vr->min)\n-\t\t   || is_positive_overflow_infinity (vr->max))\n+\t      if (cond_code != EQ_EXPR && cond_code != NE_EXPR\n+\t\t  && (is_negative_overflow_infinity (vr->min)\n+\t\t      || is_positive_overflow_infinity (vr->max))\n \t\t  && issue_strict_overflow_warning (WARN_STRICT_OVERFLOW_CONDITIONAL))\n \t\t{\n \t\t  location_t location;"}]}