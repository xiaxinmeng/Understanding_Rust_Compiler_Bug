{"sha": "c1ce46a54585e1897e6226e880a1501a950f98f5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzFjZTQ2YTU0NTg1ZTE4OTdlNjIyNmU4ODBhMTUwMWE5NTBmOThmNQ==", "commit": {"author": {"name": "Matthias Klose", "email": "doko@ubuntu.com", "date": "2010-06-05T15:07:32Z"}, "committer": {"name": "Matthias Klose", "email": "doko@gcc.gnu.org", "date": "2010-06-05T15:07:32Z"}, "message": "gcc.c (cc1_options, [...]): Use find-plugindir spec function to add the -iplugindir option.\n\n2010-06-05  Matthias Klose  <doko@ubuntu.com>\n\n        * gcc.c (cc1_options, cpp_unique_options): Use find-plugindir spec\n        function to add the -iplugindir option.\n        (find_plugindir_spec_function): Add new declaration and function.\n        (static_spec_func): Use it for \"find-plugindir\".\n\nFrom-SVN: r160319", "tree": {"sha": "1360183678bee3ef521c6cf60b009cc2d9b78c49", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1360183678bee3ef521c6cf60b009cc2d9b78c49"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c1ce46a54585e1897e6226e880a1501a950f98f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1ce46a54585e1897e6226e880a1501a950f98f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1ce46a54585e1897e6226e880a1501a950f98f5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1ce46a54585e1897e6226e880a1501a950f98f5/comments", "author": {"login": "doko42", "id": 11258518, "node_id": "MDQ6VXNlcjExMjU4NTE4", "avatar_url": "https://avatars.githubusercontent.com/u/11258518?v=4", "gravatar_id": "", "url": "https://api.github.com/users/doko42", "html_url": "https://github.com/doko42", "followers_url": "https://api.github.com/users/doko42/followers", "following_url": "https://api.github.com/users/doko42/following{/other_user}", "gists_url": "https://api.github.com/users/doko42/gists{/gist_id}", "starred_url": "https://api.github.com/users/doko42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/doko42/subscriptions", "organizations_url": "https://api.github.com/users/doko42/orgs", "repos_url": "https://api.github.com/users/doko42/repos", "events_url": "https://api.github.com/users/doko42/events{/privacy}", "received_events_url": "https://api.github.com/users/doko42/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "913bf7d152ea277398385a275c88fbe5460351f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/913bf7d152ea277398385a275c88fbe5460351f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/913bf7d152ea277398385a275c88fbe5460351f5"}], "stats": {"total": 33, "additions": 29, "deletions": 4}, "files": [{"sha": "1f1c24a89d2a657739dc58daf20ae75db58d935f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1ce46a54585e1897e6226e880a1501a950f98f5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1ce46a54585e1897e6226e880a1501a950f98f5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c1ce46a54585e1897e6226e880a1501a950f98f5", "patch": "@@ -1,3 +1,10 @@\n+2010-06-05  Matthias Klose  <doko@ubuntu.com>\n+\n+\t* gcc.c (cc1_options, cpp_unique_options): Use find-plugindir spec\n+\tfunction to add the -iplugindir option.\n+\t(find_plugindir_spec_function): Add new declaration and function.\n+\t(static_spec_func): Use it for \"find-plugindir\".\n+\n 2010-06-05  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/44361"}, {"sha": "03cfedc9a7b17fcbe060375518230a47ab54bb05", "filename": "gcc/gcc.c", "status": "modified", "additions": 22, "deletions": 4, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1ce46a54585e1897e6226e880a1501a950f98f5/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1ce46a54585e1897e6226e880a1501a950f98f5/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=c1ce46a54585e1897e6226e880a1501a950f98f5", "patch": "@@ -399,6 +399,7 @@ static const char *replace_outfile_spec_function (int, const char **);\n static const char *version_compare_spec_function (int, const char **);\n static const char *include_spec_function (int, const char **);\n static const char *find_file_spec_function (int, const char **);\n+static const char *find_plugindir_spec_function (int, const char **);\n static const char *print_asm_header_spec_function (int, const char **);\n static const char *compare_debug_dump_opt_spec_function (int, const char **);\n static const char *compare_debug_self_opt_spec_function (int, const char **);\n@@ -862,7 +863,7 @@ static const char *cpp_unique_options =\n  %{M} %{MM} %{MF*} %{MG} %{MP} %{MQ*} %{MT*}\\\n  %{!E:%{!M:%{!MM:%{!MT:%{!MQ:%{MD|MMD:%{o*:-MQ %*}}}}}}}\\\n  %{remap} %{g3|ggdb3|gstabs3|gcoff3|gxcoff3|gvms3:-dD}\\\n- %{!iplugindir*:%{fplugin*:-iplugindir=%:find-file(plugin)}}\\\n+ %{!iplugindir*:%{fplugin*:%:find-plugindir()}}\\\n  %{H} %C %{D*&U*&A*} %{i*} %Z %i\\\n  %{fmudflap:-D_MUDFLAP -include mf-runtime.h}\\\n  %{fmudflapth:-D_MUDFLAP -D_MUDFLAPTH -include mf-runtime.h}\\\n@@ -885,7 +886,7 @@ static const char *cpp_debug_options = \"%{d*}\";\n /* NB: This is shared amongst all front-ends, except for Ada.  */\n static const char *cc1_options =\n \"%{pg:%{fomit-frame-pointer:%e-pg and -fomit-frame-pointer are incompatible}}\\\n- %{!iplugindir*:%{fplugin*:-iplugindir=%:find-file(plugin)}}\\\n+ %{!iplugindir*:%{fplugin*:%:find-plugindir()}}\\\n  %1 %{!Q:-quiet} %{!dumpbase:-dumpbase %B} %{d*} %{m*} %{a*}\\\n  %{fcompare-debug-second:%:compare-debug-auxbase-opt(%b)} \\\n  %{!fcompare-debug-second:%{c|S:%{o*:-auxbase-strip %*}%{!o*:-auxbase %b}}}%{!c:%{!S:-auxbase %b}} \\\n@@ -1719,6 +1720,7 @@ static const struct spec_function static_spec_functions[] =\n   { \"version-compare\",\t\tversion_compare_spec_function },\n   { \"include\",\t\t\tinclude_spec_function },\n   { \"find-file\",\t\tfind_file_spec_function },\n+  { \"find-plugindir\",\t\tfind_plugindir_spec_function },\n   { \"print-asm-header\",\t\tprint_asm_header_spec_function },\n   { \"compare-debug-dump-opt\",\tcompare_debug_dump_opt_spec_function },\n   { \"compare-debug-self-opt\",\tcompare_debug_self_opt_spec_function },\n@@ -8657,11 +8659,11 @@ include_spec_function (int argc, const char **argv)\n   return NULL;\n }\n \n-/* %:find-file spec function.  This function replace its argument by\n+/* %:find-file spec function.  This function replaces its argument by\n     the file found thru find_file, that is the -print-file-name gcc\n     program option. */\n static const char *\n-find_file_spec_function (int argc, const char**argv)\n+find_file_spec_function (int argc, const char **argv)\n {\n   const char *file;\n \n@@ -8673,6 +8675,22 @@ find_file_spec_function (int argc, const char**argv)\n }\n \n \n+/* %:find-plugindir spec function.  This function replaces its argument\n+    by the -iplugindir=<dir> option.  `dir' is found thru find_file, that\n+    is the -print-file-name gcc program option. */\n+static const char *\n+find_plugindir_spec_function (int argc, const char **argv ATTRIBUTE_UNUSED)\n+{\n+  const char *option;\n+\n+  if (argc != 0)\n+    abort ();\n+\n+  option = concat (\"-iplugindir=\", find_file (\"plugin\"), NULL);\n+  return option;\n+}\n+\n+\n /* %:print-asm-header spec function.  Print a banner to say that the\n    following output is from the assembler.  */\n "}]}