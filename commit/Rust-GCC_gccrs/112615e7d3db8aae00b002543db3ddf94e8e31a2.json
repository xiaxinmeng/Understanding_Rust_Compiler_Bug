{"sha": "112615e7d3db8aae00b002543db3ddf94e8e31a2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTEyNjE1ZTdkM2RiOGFhZTAwYjAwMjU0M2RiM2RkZjk0ZThlMzFhMg==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2002-11-05T23:46:22Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2002-11-05T23:46:22Z"}, "message": "re PR libstdc++/8258 (basic_istream::readsome() with default buffer change stream state to ios_base::eofbit)\n\n\n2002-11-05  Benjamin Kosnik  <bkoz@redhat.com>\n\n\tPR libstdc++/8258\n\t* include/bits/istream.tcc (istream::readsome): Don't set eofbit\n\tfor null buffer.\n\t(istream::operator>>(_CharT*)): Use traits_type.\n\t(istream::ws): Same.\n\t(istream::operator>>(string)): Same.\n\t* testsuite/27_io/istream_unformatted.cc (test11): Add.\n\nFrom-SVN: r58840", "tree": {"sha": "a94af8bbee145b96c9c31629957f4c6f8fc298c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a94af8bbee145b96c9c31629957f4c6f8fc298c9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/112615e7d3db8aae00b002543db3ddf94e8e31a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/112615e7d3db8aae00b002543db3ddf94e8e31a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/112615e7d3db8aae00b002543db3ddf94e8e31a2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/112615e7d3db8aae00b002543db3ddf94e8e31a2/comments", "author": null, "committer": null, "parents": [{"sha": "81646a31577ecfcccac1ccb662012345361aa253", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81646a31577ecfcccac1ccb662012345361aa253", "html_url": "https://github.com/Rust-GCC/gccrs/commit/81646a31577ecfcccac1ccb662012345361aa253"}], "stats": {"total": 52, "additions": 43, "deletions": 9}, "files": [{"sha": "2675d27827446c6a3ac69ddb01aeb2ae503d1e50", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/112615e7d3db8aae00b002543db3ddf94e8e31a2/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/112615e7d3db8aae00b002543db3ddf94e8e31a2/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=112615e7d3db8aae00b002543db3ddf94e8e31a2", "patch": "@@ -1,3 +1,13 @@\n+2002-11-05  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\tPR libstdc++/8258\n+\t* include/bits/istream.tcc (istream::readsome): Don't set eofbit\n+\tfor null buffer.\n+\t(istream::operator>>(_CharT*)): Use traits_type.\n+\t(istream::ws): Same.\n+\t(istream::operator>>(string)): Same.\t\n+\t* testsuite/27_io/istream_unformatted.cc (test11): Add.\n+\t\n 2002-11-05  Paolo Carlini  <pcarlini@unitus.it>\n \n \tPR libstdc++/8466\n@@ -11,7 +21,7 @@\n \n \t* configure.target (hppa*): Define cpu_include_dir.\n \t* config/os/hpux/os_defines.h (_GLIBCPP_INST_ATOMICITY_LOCK): Define.\n-\t* src/misc-inst.cc (std): Instantiate atomicity lock when\n+\t* src/misc-inst.cc: Instantiate atomicity lock when\n \t_GLIBCPP_INST_ATOMICITY_LOCK is defined.\n \t* config/cpu/hppa/atomicity.h: New file.\n "}, {"sha": "a6e49a923bd2fb027dc951c73fcb2a7c56e4d11e", "filename": "libstdc++-v3/include/bits/istream.tcc", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/112615e7d3db8aae00b002543db3ddf94e8e31a2/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fistream.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/112615e7d3db8aae00b002543db3ddf94e8e31a2/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fistream.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fistream.tcc?ref=112615e7d3db8aae00b002543db3ddf94e8e31a2", "patch": "@@ -811,8 +811,9 @@ namespace std\n \t{\n \t  try \n \t    {\n+\t      // Cannot compare int_type with streamsize generically.\n \t      streamsize __num = this->rdbuf()->in_avail();\n-\t      if (__num > 0)\n+\t      if (__num >= 0)\n \t\t{\n \t\t  __num = min(__num, __n);\n \t\t  if (__num)\n@@ -1034,13 +1035,14 @@ namespace std\n \t      int_type __c = __sb->sgetc();\n \t      \n \t      while (__extracted < __num - 1 \n-\t\t     && __c != __eof && !__ctype.is(ctype_base::space, __c))\n+\t\t     && !_Traits::eq_int_type(__c, __eof)\n+\t\t     && !__ctype.is(ctype_base::space, __c))\n \t\t{\n \t\t  *__s++ = __c;\n \t\t  ++__extracted;\n \t\t  __c = __sb->snextc();\n \t\t}\n-\t      if (__c == __eof)\n+\t      if (_Traits::eq_int_type(__c, __eof))\n \t\t__in.setstate(ios_base::eofbit);\n \n #ifdef _GLIBCPP_RESOLVE_LIB_DEFECTS\n@@ -1078,9 +1080,11 @@ namespace std\n       __streambuf_type* __sb = __in.rdbuf();\n       __int_type __c = __sb->sgetc();\n \n-      while (__c != __eof && __ctype.is(ctype_base::space, __c))\n+      while (!_Traits::eq_int_type(__c, __eof) \n+\t     && __ctype.is(ctype_base::space, __c))\n \t__c = __sb->snextc();\n-      if (__c == __eof)\n+\n+       if (_Traits::eq_int_type(__c, __eof))\n \t__in.setstate(ios_base::eofbit);\n \n       return __in;\n@@ -1114,13 +1118,14 @@ namespace std\n \t  __int_type __c = __sb->sgetc();\n \t  \n \t  while (__extracted < __n \n-\t\t && __c != __eof && !__ctype.is(ctype_base::space, __c))\n+\t\t && !_Traits::eq_int_type(__c, __eof)\n+\t\t && !__ctype.is(ctype_base::space, __c))\n \t    {\n \t      __str += _Traits::to_char_type(__c);\n \t      ++__extracted;\n \t      __c = __sb->snextc();\n \t    }\n-\t  if (__c == __eof)\n+\t  if (_Traits::eq_int_type(__c, __eof))\n \t    __in.setstate(ios_base::eofbit);\n \t  __in.width(0);\n \t}"}, {"sha": "7e449ab2fe481d222bec4979a5d425fadf32dcce", "filename": "libstdc++-v3/testsuite/27_io/istream_unformatted.cc", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/112615e7d3db8aae00b002543db3ddf94e8e31a2/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fistream_unformatted.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/112615e7d3db8aae00b002543db3ddf94e8e31a2/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fistream_unformatted.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fistream_unformatted.cc?ref=112615e7d3db8aae00b002543db3ddf94e8e31a2", "patch": "@@ -551,6 +551,25 @@ test10()\n   VERIFY( test );\n }\n \n+\n+// libstdc++/8258\n+class mybuf : public std::basic_streambuf<char> \n+{ };\n+\n+void test11()\n+{\n+  bool test = true;\n+  using namespace std;\n+  char arr[10];\n+  mybuf sbuf;\n+  basic_istream<char, char_traits<char> > istr(&sbuf);\n+  \n+  VERIFY(istr.rdstate() == ios_base::goodbit);\n+  VERIFY(istr.readsome(arr, 10) == 0);\n+  VERIFY(istr.rdstate() == ios_base::goodbit);\n+}\n+\n+\n int \n main()\n {\n@@ -564,6 +583,6 @@ main()\n   test08();\n   test09();\n   test10();\n-\n+  test11();\n   return 0;\n }"}]}