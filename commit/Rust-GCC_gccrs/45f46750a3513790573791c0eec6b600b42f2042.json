{"sha": "45f46750a3513790573791c0eec6b600b42f2042", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDVmNDY3NTBhMzUxMzc5MDU3Mzc5MWMwZWVjNmI2MDBiNDJmMjA0Mg==", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2015-01-08T15:41:13Z"}, "committer": {"name": "Thomas Schwinge", "email": "tschwinge@gcc.gnu.org", "date": "2015-01-08T15:41:13Z"}, "message": "Make sure that OMP builtins are available in offloading compilers.\n\n\tgcc/\n\t* builtins.def (DEF_GOMP_BUILTIN): Also consider flag_offload_abi\n\tfor registering builtins.\n\t* config/i386/intelmic-mkoffload.c (prepare_target_image): Don't\n\tadd -fopenmp to the argv_obstack used when invoking\n\tcompile_for_target.\n\nFrom-SVN: r219346", "tree": {"sha": "534d8a2d3746af0c984f8502f409c0547d28f7a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/534d8a2d3746af0c984f8502f409c0547d28f7a3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/45f46750a3513790573791c0eec6b600b42f2042", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45f46750a3513790573791c0eec6b600b42f2042", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45f46750a3513790573791c0eec6b600b42f2042", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45f46750a3513790573791c0eec6b600b42f2042/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4f929d9da16fca9bcde0d1077c15136e944c5c0d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f929d9da16fca9bcde0d1077c15136e944c5c0d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f929d9da16fca9bcde0d1077c15136e944c5c0d"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "5bc6591af55872028573eb28eb1988f6424f23f8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45f46750a3513790573791c0eec6b600b42f2042/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45f46750a3513790573791c0eec6b600b42f2042/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=45f46750a3513790573791c0eec6b600b42f2042", "patch": "@@ -1,5 +1,11 @@\n 2015-01-08  Thomas Schwinge  <thomas@codesourcery.com>\n \n+\t* builtins.def (DEF_GOMP_BUILTIN): Also consider flag_offload_abi\n+\tfor registering builtins.\n+\t* config/i386/intelmic-mkoffload.c (prepare_target_image): Don't\n+\tadd -fopenmp to the argv_obstack used when invoking\n+\tcompile_for_target.\n+\n \t* config/i386/intelmic-mkoffload.c (compile_for_target): Always\n \tadd \"-m32\" or \"-m64\" to argv_obstack.\n \t(generate_host_descr_file): Likewise, when invoking host_compiler."}, {"sha": "5a7ed10f550503e2a0176979159d9b0ce69f7b42", "filename": "gcc/builtins.def", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45f46750a3513790573791c0eec6b600b42f2042/gcc%2Fbuiltins.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45f46750a3513790573791c0eec6b600b42f2042/gcc%2Fbuiltins.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.def?ref=45f46750a3513790573791c0eec6b600b42f2042", "patch": "@@ -148,11 +148,14 @@ along with GCC; see the file COPYING3.  If not see\n \n /* Builtin used by the implementation of GNU OpenMP.  None of these are\n    actually implemented in the compiler; they're all in libgomp.  */\n+/* These builtins also need to be enabled in offloading compilers invoked from\n+   mkoffload; for that purpose, we're checking the -foffload-abi flag here.  */\n #undef DEF_GOMP_BUILTIN\n #define DEF_GOMP_BUILTIN(ENUM, NAME, TYPE, ATTRS) \\\n   DEF_BUILTIN (ENUM, \"__builtin_\" NAME, BUILT_IN_NORMAL, TYPE, TYPE,    \\\n                false, true, true, ATTRS, false, \\\n-\t       (flag_openmp || flag_tree_parallelize_loops))\n+\t       (flag_openmp || flag_tree_parallelize_loops \\\n+\t\t|| flag_offload_abi != OFFLOAD_ABI_UNSET))\n \n /* Builtin used by implementation of Cilk Plus.  Most of these are decomposed\n    by the compiler but a few are implemented in libcilkrts.  */ "}, {"sha": "050f2e62d5c254903a5141e4bccec2fa0b65eb08", "filename": "gcc/config/i386/intelmic-mkoffload.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45f46750a3513790573791c0eec6b600b42f2042/gcc%2Fconfig%2Fi386%2Fintelmic-mkoffload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45f46750a3513790573791c0eec6b600b42f2042/gcc%2Fconfig%2Fi386%2Fintelmic-mkoffload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fintelmic-mkoffload.c?ref=45f46750a3513790573791c0eec6b600b42f2042", "patch": "@@ -390,7 +390,6 @@ prepare_target_image (const char *target_compiler, int argc, char **argv)\n   obstack_init (&argv_obstack);\n   obstack_ptr_grow (&argv_obstack, target_compiler);\n   obstack_ptr_grow (&argv_obstack, \"-xlto\");\n-  obstack_ptr_grow (&argv_obstack, \"-fopenmp\");\n   obstack_ptr_grow (&argv_obstack, \"-shared\");\n   obstack_ptr_grow (&argv_obstack, \"-fPIC\");\n   obstack_ptr_grow (&argv_obstack, opt1);"}]}