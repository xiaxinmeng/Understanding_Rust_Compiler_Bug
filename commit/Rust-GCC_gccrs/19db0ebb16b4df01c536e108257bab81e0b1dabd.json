{"sha": "19db0ebb16b4df01c536e108257bab81e0b1dabd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTlkYjBlYmIxNmI0ZGYwMWM1MzZlMTA4MjU3YmFiODFlMGIxZGFiZA==", "commit": {"author": {"name": "Aaron Sawdey", "email": "acsawdey@linux.ibm.com", "date": "2019-01-03T19:20:57Z"}, "committer": {"name": "Aaron Sawdey", "email": "acsawdey@gcc.gnu.org", "date": "2019-01-03T19:20:57Z"}, "message": "rs6000-string.c (expand_block_move): Don't use unaligned vsx and avoid lxvd2x/stxvd2x.\n\n2019-01-03  Aaron Sawdey  <acsawdey@linux.ibm.com>\n\n\t* config/rs6000/rs6000-string.c (expand_block_move): Don't use\n\tunaligned vsx and avoid lxvd2x/stxvd2x.\n\t(gen_lvx_v4si_move): New function.\n\nFrom-SVN: r267562", "tree": {"sha": "2af5e2fb49656d8a262aeb76ac1a58536e6dafd2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2af5e2fb49656d8a262aeb76ac1a58536e6dafd2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/19db0ebb16b4df01c536e108257bab81e0b1dabd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19db0ebb16b4df01c536e108257bab81e0b1dabd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/19db0ebb16b4df01c536e108257bab81e0b1dabd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19db0ebb16b4df01c536e108257bab81e0b1dabd/comments", "author": {"login": "acsawdey", "id": 41373646, "node_id": "MDQ6VXNlcjQxMzczNjQ2", "avatar_url": "https://avatars.githubusercontent.com/u/41373646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/acsawdey", "html_url": "https://github.com/acsawdey", "followers_url": "https://api.github.com/users/acsawdey/followers", "following_url": "https://api.github.com/users/acsawdey/following{/other_user}", "gists_url": "https://api.github.com/users/acsawdey/gists{/gist_id}", "starred_url": "https://api.github.com/users/acsawdey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/acsawdey/subscriptions", "organizations_url": "https://api.github.com/users/acsawdey/orgs", "repos_url": "https://api.github.com/users/acsawdey/repos", "events_url": "https://api.github.com/users/acsawdey/events{/privacy}", "received_events_url": "https://api.github.com/users/acsawdey/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5c571497e1b9b4ac407aa0db359292b0de6cd42e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c571497e1b9b4ac407aa0db359292b0de6cd42e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c571497e1b9b4ac407aa0db359292b0de6cd42e"}], "stats": {"total": 29, "additions": 27, "deletions": 2}, "files": [{"sha": "5a15470c327e62ae30168ac41be4dd1e3ad54209", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19db0ebb16b4df01c536e108257bab81e0b1dabd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19db0ebb16b4df01c536e108257bab81e0b1dabd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=19db0ebb16b4df01c536e108257bab81e0b1dabd", "patch": "@@ -1,3 +1,9 @@\n+2019-01-03  Aaron Sawdey  <acsawdey@linux.ibm.com>\n+\n+\t* config/rs6000/rs6000-string.c (expand_block_move): Don't use\n+\tunaligned vsx and avoid lxvd2x/stxvd2x.\n+\t(gen_lvx_v4si_move): New function.\n+\n 2019-01-03  Tom de Vries  <tdevries@suse.de>\n \n \t* config/nvptx/nvptx.c (MACH_VECTOR_LENGTH, MACH_MAX_WORKERS): Define."}, {"sha": "37e19edbb3e2b3a8afc011d9835accd5a098f4cf", "filename": "gcc/config/rs6000/rs6000-string.c", "status": "modified", "additions": 21, "deletions": 2, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19db0ebb16b4df01c536e108257bab81e0b1dabd/gcc%2Fconfig%2Frs6000%2Frs6000-string.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19db0ebb16b4df01c536e108257bab81e0b1dabd/gcc%2Fconfig%2Frs6000%2Frs6000-string.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-string.c?ref=19db0ebb16b4df01c536e108257bab81e0b1dabd", "patch": "@@ -2669,6 +2669,25 @@ expand_strn_compare (rtx operands[], int no_length)\n   return true;\n }\n \n+/* Generate loads and stores for a move of v4si mode using lvx/stvx.\n+   This uses altivec_{l,st}vx_<mode>_internal which use unspecs to\n+   keep combine from changing what instruction gets used.\n+\n+   DEST is the destination for the data.\n+   SRC is the source of the data for the move.  */\n+\n+static rtx\n+gen_lvx_v4si_move (rtx dest, rtx src)\n+{\n+  gcc_assert (MEM_P (dest) ^ MEM_P (src));\n+  gcc_assert (GET_MODE (dest) == V4SImode && GET_MODE (src) == V4SImode);\n+\n+  if (MEM_P (dest))\n+    return gen_altivec_stvx_v4si_internal (dest, src);\n+  else \n+    return gen_altivec_lvx_v4si_internal (dest, src);\n+}\n+\n /* Expand a block move operation, and return 1 if successful.  Return 0\n    if we should let the compiler generate normal code.\n \n@@ -2721,11 +2740,11 @@ expand_block_move (rtx operands[])\n \n       /* Altivec first, since it will be faster than a string move\n \t when it applies, and usually not significantly larger.  */\n-      if (TARGET_ALTIVEC && bytes >= 16 && (TARGET_EFFICIENT_UNALIGNED_VSX || align >= 128))\n+      if (TARGET_ALTIVEC && bytes >= 16 && align >= 128)\n \t{\n \t  move_bytes = 16;\n \t  mode = V4SImode;\n-\t  gen_func.mov = gen_movv4si;\n+\t  gen_func.mov = gen_lvx_v4si_move;\n \t}\n       else if (bytes >= 8 && TARGET_POWERPC64\n \t       && (align >= 64 || !STRICT_ALIGNMENT))"}]}