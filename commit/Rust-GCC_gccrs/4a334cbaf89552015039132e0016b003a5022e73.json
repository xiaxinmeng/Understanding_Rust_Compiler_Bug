{"sha": "4a334cbaf89552015039132e0016b003a5022e73", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGEzMzRjYmFmODk1NTIwMTUwMzkxMzJlMDAxNmIwMDNhNTAyMmU3Mw==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2015-10-27T11:56:18Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2015-10-27T11:56:18Z"}, "message": "Move min(max...) and max(min...) folds to match.pd\n\nThis handles both integer and floating-point arguments.  It's needed\nfor the follow-on patch to move fmin and fmax to match.pd.\n\nTested on x86_64-linux-gnu, aarch64-linux-gnu and arm-linux-gnueabi.\n\ngcc/\n\t* fold-const.c (fold_minmax): Delete.\n\t(fold_binary_loc): Don't call it.\n\t* match.pd: Add rules previously handled by fold_minmax.\n\nFrom-SVN: r229430", "tree": {"sha": "7c355bb077f64ab4a548684c4a48eece27b439e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7c355bb077f64ab4a548684c4a48eece27b439e5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4a334cbaf89552015039132e0016b003a5022e73", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a334cbaf89552015039132e0016b003a5022e73", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a334cbaf89552015039132e0016b003a5022e73", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a334cbaf89552015039132e0016b003a5022e73/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2f97d24cad349a09ee1beb3e20b636925aa9baa9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f97d24cad349a09ee1beb3e20b636925aa9baa9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f97d24cad349a09ee1beb3e20b636925aa9baa9"}], "stats": {"total": 65, "additions": 14, "deletions": 51}, "files": [{"sha": "1066861197ab13aae0c94ee1a7683cbd3a02b37e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a334cbaf89552015039132e0016b003a5022e73/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a334cbaf89552015039132e0016b003a5022e73/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4a334cbaf89552015039132e0016b003a5022e73", "patch": "@@ -1,3 +1,9 @@\n+2015-10-27  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* fold-const.c (fold_minmax): Delete.\n+\t(fold_binary_loc): Don't call it.\n+\t* match.pd: Add rules previously handled by fold_minmax.\n+\n 2015-10-27  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* builtins.c (fold_builtin_fma): Remove constant handling."}, {"sha": "e8ff1de13b65234d160275bcb9d0d41445a7c058", "filename": "gcc/fold-const.c", "status": "modified", "additions": 0, "deletions": 51, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a334cbaf89552015039132e0016b003a5022e73/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a334cbaf89552015039132e0016b003a5022e73/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=4a334cbaf89552015039132e0016b003a5022e73", "patch": "@@ -8073,49 +8073,6 @@ fold_truth_andor (location_t loc, enum tree_code code, tree type,\n   return NULL_TREE;\n }\n \n-/* Fold a binary expression of code CODE and type TYPE with operands\n-   OP0 and OP1, containing either a MIN-MAX or a MAX-MIN combination.\n-   Return the folded expression if folding is successful.  Otherwise,\n-   return NULL_TREE.  */\n-\n-static tree\n-fold_minmax (location_t loc, enum tree_code code, tree type, tree op0, tree op1)\n-{\n-  enum tree_code compl_code;\n-\n-  if (code == MIN_EXPR)\n-    compl_code = MAX_EXPR;\n-  else if (code == MAX_EXPR)\n-    compl_code = MIN_EXPR;\n-  else\n-    gcc_unreachable ();\n-\n-  /* MIN (MAX (a, b), b) == b.  */\n-  if (TREE_CODE (op0) == compl_code\n-      && operand_equal_p (TREE_OPERAND (op0, 1), op1, 0))\n-    return omit_one_operand_loc (loc, type, op1, TREE_OPERAND (op0, 0));\n-\n-  /* MIN (MAX (b, a), b) == b.  */\n-  if (TREE_CODE (op0) == compl_code\n-      && operand_equal_p (TREE_OPERAND (op0, 0), op1, 0)\n-      && reorder_operands_p (TREE_OPERAND (op0, 1), op1))\n-    return omit_one_operand_loc (loc, type, op1, TREE_OPERAND (op0, 1));\n-\n-  /* MIN (a, MAX (a, b)) == a.  */\n-  if (TREE_CODE (op1) == compl_code\n-      && operand_equal_p (op0, TREE_OPERAND (op1, 0), 0)\n-      && reorder_operands_p (op0, TREE_OPERAND (op1, 1)))\n-    return omit_one_operand_loc (loc, type, op0, TREE_OPERAND (op1, 1));\n-\n-  /* MIN (a, MAX (b, a)) == a.  */\n-  if (TREE_CODE (op1) == compl_code\n-      && operand_equal_p (op0, TREE_OPERAND (op1, 1), 0)\n-      && reorder_operands_p (op0, TREE_OPERAND (op1, 0)))\n-    return omit_one_operand_loc (loc, type, op0, TREE_OPERAND (op1, 0));\n-\n-  return NULL_TREE;\n-}\n-\n /* Helper that tries to canonicalize the comparison ARG0 CODE ARG1\n    by changing CODE to reduce the magnitude of constants involved in\n    ARG0 of the comparison.\n@@ -10426,15 +10383,7 @@ fold_binary_loc (location_t loc,\n       return NULL_TREE;\n \n     case MIN_EXPR:\n-      tem = fold_minmax (loc, MIN_EXPR, type, arg0, arg1);\n-      if (tem)\n-\treturn tem;\n-      goto associate;\n-\n     case MAX_EXPR:\n-      tem = fold_minmax (loc, MAX_EXPR, type, arg0, arg1);\n-      if (tem)\n-\treturn tem;\n       goto associate;\n \n     case TRUTH_ANDIF_EXPR:"}, {"sha": "8de798765be269c802ea7c7a8388c93c44ff08ed", "filename": "gcc/match.pd", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a334cbaf89552015039132e0016b003a5022e73/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a334cbaf89552015039132e0016b003a5022e73/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=4a334cbaf89552015039132e0016b003a5022e73", "patch": "@@ -1176,6 +1176,14 @@ DEFINE_INT_AND_FLOAT_ROUND_FN (RINT)\n  (simplify\n   (minmax @0 @0)\n   @0))\n+/* min(max(x,y),y) -> y.  */\n+(simplify\n+ (min:c (max:c @0 @1) @1)\n+ @1)\n+/* max(min(x,y),y) -> y.  */\n+(simplify\n+ (max:c (min:c @0 @1) @1)\n+ @1)\n (simplify\n  (min @0 @1)\n  (if (INTEGRAL_TYPE_P (type)"}]}