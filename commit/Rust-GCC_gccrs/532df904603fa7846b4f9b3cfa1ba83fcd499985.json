{"sha": "532df904603fa7846b4f9b3cfa1ba83fcd499985", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTMyZGY5MDQ2MDNmYTc4NDZiNGY5YjNjZmExYmE4M2ZjZDQ5OTk4NQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-02-05T15:31:15Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-02-05T15:31:15Z"}, "message": "re PR lto/42762 (ICE in get_resolution() when compiling a C++ program with -flto -fuse-linker-plugin)\n\n2010-02-05  Richard Guenther  <rguenther@suse.de>\n\n\tPR lto/42762\n\t* lto-streamer-in.c (get_resolution): Deal with references\n\tto undefined functions.\n\nFrom-SVN: r156520", "tree": {"sha": "9886dafb7bd09ee3c71d1e400ba40a10a4dcf1cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9886dafb7bd09ee3c71d1e400ba40a10a4dcf1cd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/532df904603fa7846b4f9b3cfa1ba83fcd499985", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/532df904603fa7846b4f9b3cfa1ba83fcd499985", "html_url": "https://github.com/Rust-GCC/gccrs/commit/532df904603fa7846b4f9b3cfa1ba83fcd499985", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/532df904603fa7846b4f9b3cfa1ba83fcd499985/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5c95f07b6154507f16f349d69f0aef23266c81ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c95f07b6154507f16f349d69f0aef23266c81ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c95f07b6154507f16f349d69f0aef23266c81ac"}], "stats": {"total": 15, "additions": 12, "deletions": 3}, "files": [{"sha": "b7548b91ba410120ed80cb23e86edeff1a1d20cc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/532df904603fa7846b4f9b3cfa1ba83fcd499985/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/532df904603fa7846b4f9b3cfa1ba83fcd499985/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=532df904603fa7846b4f9b3cfa1ba83fcd499985", "patch": "@@ -1,3 +1,9 @@\n+2010-02-05  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR lto/42762\n+\t* lto-streamer-in.c (get_resolution): Deal with references\n+\tto undefined functions.\n+\n 2010-02-05  Richard Guenther  <rguenther@suse.de>\n \n \t* tree-ssa-ccp.c (get_symbol_constant_value): Strip all"}, {"sha": "095591484db42a9eec8bd412bfff4371d111927d", "filename": "gcc/lto-streamer-in.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/532df904603fa7846b4f9b3cfa1ba83fcd499985/gcc%2Flto-streamer-in.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/532df904603fa7846b4f9b3cfa1ba83fcd499985/gcc%2Flto-streamer-in.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer-in.c?ref=532df904603fa7846b4f9b3cfa1ba83fcd499985", "patch": "@@ -1515,12 +1515,15 @@ get_resolution (struct data_in *data_in, unsigned index)\n   if (data_in->globals_resolution)\n     {\n       ld_plugin_symbol_resolution_t ret;\n-      gcc_assert (index < VEC_length (ld_plugin_symbol_resolution_t,\n-\t\t\t\t      data_in->globals_resolution));\n+      /* We can have references to not emitted functions in\n+\t DECL_FUNCTION_PERSONALITY at least.  So we can and have\n+\t to indeed return LDPR_UNKNOWN in some cases.   */\n+      if (VEC_length (ld_plugin_symbol_resolution_t,\n+\t\t      data_in->globals_resolution) <= index)\n+\treturn LDPR_UNKNOWN;\n       ret = VEC_index (ld_plugin_symbol_resolution_t,\n \t\t       data_in->globals_resolution,\n \t\t       index);\n-      gcc_assert (ret != LDPR_UNKNOWN);\n       return ret;\n     }\n   else"}]}