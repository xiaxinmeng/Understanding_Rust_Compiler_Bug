{"sha": "5b6f7b962e25d0d94538d83692a2a260eb0b448d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWI2ZjdiOTYyZTI1ZDBkOTQ1MzhkODM2OTJhMmEyNjBlYjBiNDQ4ZA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-02-17T13:05:55Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-02-17T13:05:55Z"}, "message": "(CONST_OK_FOR_LETTER_P): Use (unsigned HOST_WIDE_INT).\n\n(LEGITIMATE_ADDRESS_INTEGER_P, LEGITIMIZE_ADDRESS): Likewise.\n\nFrom-SVN: r13662", "tree": {"sha": "3b2ae5fbc5cb49eb751e61bae1694c2357716125", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3b2ae5fbc5cb49eb751e61bae1694c2357716125"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5b6f7b962e25d0d94538d83692a2a260eb0b448d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b6f7b962e25d0d94538d83692a2a260eb0b448d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b6f7b962e25d0d94538d83692a2a260eb0b448d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b6f7b962e25d0d94538d83692a2a260eb0b448d/comments", "author": null, "committer": null, "parents": [{"sha": "a7653a2c2ff4b43552e38b3635d0fdda9ed035a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7653a2c2ff4b43552e38b3635d0fdda9ed035a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7653a2c2ff4b43552e38b3635d0fdda9ed035a7"}], "stats": {"total": 24, "additions": 12, "deletions": 12}, "files": [{"sha": "6ca3aa4683ae5a633d32ebfa9b4797ef3cf4b269", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b6f7b962e25d0d94538d83692a2a260eb0b448d/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b6f7b962e25d0d94538d83692a2a260eb0b448d/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=5b6f7b962e25d0d94538d83692a2a260eb0b448d", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler, for IBM RS/6000.\n-   Copyright (C) 1992, 1993, 1994, 1995, 1996 Free Software Foundation, Inc.\n+   Copyright (C) 1992, 93, 94, 95, 96, 1997 Free Software Foundation, Inc.\n    Contributed by Richard Kenner (kenner@vlsi1.ultra.nyu.edu)\n \n This file is part of GNU CC.\n@@ -1022,15 +1022,15 @@ enum reg_class\n    `O' is the constant zero\n    `P' is a constant whose negation is a signed 16-bit constant */\n \n-#define CONST_OK_FOR_LETTER_P(VALUE, C)\t\t\t\t\\\n-   ( (C) == 'I' ? (unsigned) ((VALUE) + 0x8000) < 0x10000\t\\\n-   : (C) == 'J' ? ((VALUE) & 0xffff) == 0\t\t\t\\\n-   : (C) == 'K' ? ((VALUE) & 0xffff0000) == 0\t\t\t\\\n-   : (C) == 'L' ? mask_constant (VALUE)\t\t\t\t\\\n-   : (C) == 'M' ? (VALUE) > 31\t\t\t\t\t\\\n-   : (C) == 'N' ? exact_log2 (VALUE) >= 0\t\t\t\\\n-   : (C) == 'O' ? (VALUE) == 0\t\t\t\t\t\\\n-   : (C) == 'P' ? (unsigned) ((- (VALUE)) + 0x8000) < 0x1000\t\\\n+#define CONST_OK_FOR_LETTER_P(VALUE, C)\t\t\t\t\t\\\n+   ( (C) == 'I' ? (unsigned HOST_WIDE_INT) ((VALUE) + 0x8000) < 0x10000\t\\\n+   : (C) == 'J' ? ((VALUE) & 0xffff) == 0\t\t\t\t\\\n+   : (C) == 'K' ? ((VALUE) & 0xffff0000) == 0\t\t\t\t\\\n+   : (C) == 'L' ? mask_constant (VALUE)\t\t\t\t\t\\\n+   : (C) == 'M' ? (VALUE) > 31\t\t\t\t\t\t\\\n+   : (C) == 'N' ? exact_log2 (VALUE) >= 0\t\t\t\t\\\n+   : (C) == 'O' ? (VALUE) == 0\t\t\t\t\t\t\\\n+   : (C) == 'P' ? (unsigned HOST_WIDE_INT) ((- (VALUE)) + 0x8000) < 0x1000 \\\n    : 0)\n \n /* Similar, but for floating constants, and defining letters G and H.\n@@ -1767,7 +1767,7 @@ typedef struct rs6000_args\n \n #define LEGITIMATE_ADDRESS_INTEGER_P(X,OFFSET)\t\t\t\t\\\n  (GET_CODE (X) == CONST_INT\t\t\t\t\t\t\\\n-  && (unsigned) (INTVAL (X) + (OFFSET) + 0x8000) < 0x10000)\n+  && (unsigned HOST_WIDE_INT) (INTVAL (X) + (OFFSET) + 0x8000) < 0x10000)\n \n #define LEGITIMATE_OFFSET_ADDRESS_P(MODE,X)\t\t\\\n  (GET_CODE (X) == PLUS\t\t\t\t\t\\\n@@ -1854,7 +1854,7 @@ typedef struct rs6000_args\n #define LEGITIMIZE_ADDRESS(X,OLDX,MODE,WIN)\t\t\t\t\\\n { if (GET_CODE (X) == PLUS && GET_CODE (XEXP (X, 0)) == REG\t\t\\\n     && GET_CODE (XEXP (X, 1)) == CONST_INT\t\t\t\t\\\n-    && (unsigned) (INTVAL (XEXP (X, 1)) + 0x8000) >= 0x10000)\t\t\\\n+    && (unsigned HOST_WIDE_INT) (INTVAL (XEXP (X, 1)) + 0x8000) >= 0x10000) \\\n     { HOST_WIDE_INT high_int, low_int;\t\t\t\t\t\\\n       rtx sum;\t\t\t\t\t\t\t\t\\\n       high_int = INTVAL (XEXP (X, 1)) & (~ (HOST_WIDE_INT) 0xffff);\t\\"}]}