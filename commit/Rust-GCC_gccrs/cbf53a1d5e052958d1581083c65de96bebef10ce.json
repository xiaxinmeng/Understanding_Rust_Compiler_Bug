{"sha": "cbf53a1d5e052958d1581083c65de96bebef10ce", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2JmNTNhMWQ1ZTA1Mjk1OGQxNTgxMDgzYzY1ZGU5NmJlYmVmMTBjZQ==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@cygnus.com", "date": "2000-11-05T22:59:56Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2000-11-05T22:59:56Z"}, "message": "lex.c (java_parse_escape_sequence): Only read two octal characters if the first one is greater than 3.\n\n\t* lex.c (java_parse_escape_sequence): Only read two octal\n\tcharacters if the first one is greater than 3.  Don't allow\n\t\"octal\" numbers to include the digits 8 or 9.\n\nFrom-SVN: r37267", "tree": {"sha": "bf6dbca8e304c63e7ed2188aa9b3e0c9f5a21ebd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bf6dbca8e304c63e7ed2188aa9b3e0c9f5a21ebd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cbf53a1d5e052958d1581083c65de96bebef10ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cbf53a1d5e052958d1581083c65de96bebef10ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cbf53a1d5e052958d1581083c65de96bebef10ce", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cbf53a1d5e052958d1581083c65de96bebef10ce/comments", "author": null, "committer": null, "parents": [{"sha": "35f93a1e2d5c15959d2de3d4233c69b0f87c8f2b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35f93a1e2d5c15959d2de3d4233c69b0f87c8f2b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35f93a1e2d5c15959d2de3d4233c69b0f87c8f2b"}], "stats": {"total": 42, "additions": 24, "deletions": 18}, "files": [{"sha": "5b77604a661ee3cd5835a2bbee754789c7a3df53", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cbf53a1d5e052958d1581083c65de96bebef10ce/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cbf53a1d5e052958d1581083c65de96bebef10ce/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=cbf53a1d5e052958d1581083c65de96bebef10ce", "patch": "@@ -1,3 +1,9 @@\n+2000-11-04  Tom Tromey  <tromey@cygnus.com>\n+\n+\t* lex.c (java_parse_escape_sequence): Only read two octal\n+\tcharacters if the first one is greater than 3.  Don't allow\n+\t\"octal\" numbers to include the digits 8 or 9.\n+\n 2000-11-05  Joseph S. Myers  <jsm28@cam.ac.uk>\n \n \t* Make-lang.in (java.distdir): Remove."}, {"sha": "1450570806567dc0777240c33bfbf7afa6af3ff5", "filename": "gcc/java/lex.c", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cbf53a1d5e052958d1581083c65de96bebef10ce/gcc%2Fjava%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cbf53a1d5e052958d1581083c65de96bebef10ce/gcc%2Fjava%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Flex.c?ref=cbf53a1d5e052958d1581083c65de96bebef10ce", "patch": "@@ -727,32 +727,32 @@ java_parse_escape_sequence ()\n     case '\\\\':\n       return (unicode_t)0x5c;\n     case '0': case '1': case '2': case '3': case '4':\n-    case '5': case '6': case '7': case '8': case '9':\n+    case '5': case '6': case '7':\n       {\n \tint octal_escape[3];\n \tint octal_escape_index = 0;\n-\t\n-\tfor (; octal_escape_index < 3 && RANGE (c, '0', '9');\n+\tint max = 3;\n+\tint i, shift;\n+\n+\tfor (; octal_escape_index < max && RANGE (c, '0', '7');\n \t     c = java_get_unicode ())\n-\t  octal_escape [octal_escape_index++] = c;\n+\t  {\n+\t    if (octal_escape_index == 0 && c > '3')\n+\t      {\n+\t\t/* According to the grammar, `\\477' has a well-defined\n+\t\t   meaning -- it is `\\47' followed by `7'.  */\n+\t\t--max;\n+\t      }\n+\t    octal_escape [octal_escape_index++] = c;\n+\t  }\n \n \tjava_unget_unicode ();\n \n-\tif ((octal_escape_index == 3) && (octal_escape [0] > '3'))\n-\t  {\n-\t    java_lex_error (\"Literal octal escape out of range\", 0);\n-\t    return JAVA_CHAR_ERROR;\n-\t  }\n-\telse\n-\t  {\n-\t    int i, shift;\n-\t    for (char_lit=0, i = 0, shift = 3*(octal_escape_index-1);\n-\t\t i < octal_escape_index; i++, shift -= 3)\n-\t      char_lit |= (octal_escape [i] - '0') << shift;\n+\tfor (char_lit=0, i = 0, shift = 3*(octal_escape_index-1);\n+\t     i < octal_escape_index; i++, shift -= 3)\n+\t  char_lit |= (octal_escape [i] - '0') << shift;\n \n-\t    return (char_lit);\n-\t  }\n-\tbreak;\n+\treturn char_lit;\n       }\n     case '\\n':\n       return '\\n';\t\t/* ULT, caught latter as a specific error */"}]}