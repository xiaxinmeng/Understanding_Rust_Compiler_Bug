{"sha": "e4ff11a8f2e80adb8ada69bf35ee6a1ab18a9c85", "node_id": "C_kwDOANBUbNoAKGU0ZmYxMWE4ZjJlODBhZGI4YWRhNjliZjM1ZWU2YTFhYjE4YTljODU", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-07-19T07:57:22Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-07-19T09:16:34Z"}, "message": "middle-end/106331 - fix mem attributes for string op arguments\n\nget_memory_rtx tries hard to come up with a MEM_EXPR to record\nin the memory attributes but in the last fallback fails to properly\naccount for an unknown offset and thus, as visible in this testcase,\nincorrect alignment computed from set_mem_attributes.  The following\nrectifies both parts.\n\n\tPR middle-end/106331\n\t* builtins.cc (get_memory_rtx): Compute alignment from\n\tthe original address and set MEM_OFFSET to unknown when\n\twe create a MEM_EXPR from the base object of the address.\n\n\t* gfortran.dg/pr106331.f90: New testcase.", "tree": {"sha": "4283d90f317885b033291676a4da9c7924bd08dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4283d90f317885b033291676a4da9c7924bd08dd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e4ff11a8f2e80adb8ada69bf35ee6a1ab18a9c85", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4ff11a8f2e80adb8ada69bf35ee6a1ab18a9c85", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e4ff11a8f2e80adb8ada69bf35ee6a1ab18a9c85", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4ff11a8f2e80adb8ada69bf35ee6a1ab18a9c85/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0f129766fdb687394f0eea04f69268b5cc034cda", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f129766fdb687394f0eea04f69268b5cc034cda", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f129766fdb687394f0eea04f69268b5cc034cda"}], "stats": {"total": 20, "additions": 16, "deletions": 4}, "files": [{"sha": "0d13197703d9388e87a64b9620663f3e26881dfc", "filename": "gcc/builtins.cc", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4ff11a8f2e80adb8ada69bf35ee6a1ab18a9c85/gcc%2Fbuiltins.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4ff11a8f2e80adb8ada69bf35ee6a1ab18a9c85/gcc%2Fbuiltins.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.cc?ref=e4ff11a8f2e80adb8ada69bf35ee6a1ab18a9c85", "patch": "@@ -1360,7 +1360,7 @@ expand_builtin_prefetch (tree exp)\n rtx\n get_memory_rtx (tree exp, tree len)\n {\n-  tree orig_exp = exp;\n+  tree orig_exp = exp, base;\n   rtx addr, mem;\n \n   /* When EXP is not resolved SAVE_EXPR, MEM_ATTRS can be still derived\n@@ -1391,17 +1391,22 @@ get_memory_rtx (tree exp, tree len)\n   if (is_gimple_mem_ref_addr (TREE_OPERAND (exp, 0)))\n     set_mem_attributes (mem, exp, 0);\n   else if (TREE_CODE (TREE_OPERAND (exp, 0)) == ADDR_EXPR\n-\t   && (exp = get_base_address (TREE_OPERAND (TREE_OPERAND (exp, 0),\n-\t\t\t\t\t\t     0))))\n+\t   && (base = get_base_address (TREE_OPERAND (TREE_OPERAND (exp, 0),\n+\t\t\t\t\t\t      0))))\n     {\n-      exp = build_fold_addr_expr (exp);\n+      unsigned int align = get_pointer_alignment (TREE_OPERAND (exp, 0));\n+      exp = build_fold_addr_expr (base);\n       exp = fold_build2 (MEM_REF,\n \t\t\t build_array_type (char_type_node,\n \t\t\t\t\t   build_range_type (sizetype,\n \t\t\t\t\t\t\t     size_zero_node,\n \t\t\t\t\t\t\t     NULL)),\n \t\t\t exp, build_int_cst (ptr_type_node, 0));\n       set_mem_attributes (mem, exp, 0);\n+      /* Since we stripped parts make sure the offset is unknown and the\n+\t alignment is computed from the original address.  */\n+      clear_mem_offset (mem);\n+      set_mem_align (mem, align);\n     }\n   set_mem_alias_set (mem, 0);\n   return mem;"}, {"sha": "3873863be4810f177000bd9c3a45a61dc251eb25", "filename": "gcc/testsuite/gfortran.dg/pr106331.f90", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4ff11a8f2e80adb8ada69bf35ee6a1ab18a9c85/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr106331.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4ff11a8f2e80adb8ada69bf35ee6a1ab18a9c85/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr106331.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr106331.f90?ref=e4ff11a8f2e80adb8ada69bf35ee6a1ab18a9c85", "patch": "@@ -0,0 +1,7 @@\n+! { dg-do run }\n+! { dg-options \"-Og\" }\n+\n+PROGRAM main\n+  CHARACTER(LEN=24) :: a(2)\n+  a = ''\n+END PROGRAM"}]}