{"sha": "bb3caa357705844d03a633e2d1108e349a929068", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmIzY2FhMzU3NzA1ODQ0ZDAzYTYzM2UyZDExMDhlMzQ5YTkyOTA2OA==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2015-05-28T13:59:17Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2015-05-28T13:59:17Z"}, "message": "futex.h (sys_futex0): Remove function.\n\n\t* config/linux/x86/futex.h (sys_futex0) [!__x86_64__]: Remove function.\n\t(futex_wait) [!__x86_64__]: Use __asm operand instead of sys_futex0.\n\t(futex_wake) [!__x86_64__]: Ditto.\n\nFrom-SVN: r223821", "tree": {"sha": "cedae58782a74267ac41796b7776e68cc7b4f703", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cedae58782a74267ac41796b7776e68cc7b4f703"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bb3caa357705844d03a633e2d1108e349a929068", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb3caa357705844d03a633e2d1108e349a929068", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb3caa357705844d03a633e2d1108e349a929068", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb3caa357705844d03a633e2d1108e349a929068/comments", "author": null, "committer": null, "parents": [{"sha": "de0e921c9df40eb12823ae1b68c271e73507b280", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de0e921c9df40eb12823ae1b68c271e73507b280", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de0e921c9df40eb12823ae1b68c271e73507b280"}], "stats": {"total": 49, "additions": 30, "deletions": 19}, "files": [{"sha": "d12d7bae22d9a13cb70579cde93fd37918384187", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb3caa357705844d03a633e2d1108e349a929068/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb3caa357705844d03a633e2d1108e349a929068/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=bb3caa357705844d03a633e2d1108e349a929068", "patch": "@@ -1,3 +1,9 @@\n+2015-05-28  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/linux/x86/futex.h (sys_futex0) [!__x86_64__]: Remove function.\n+\t(futex_wait) [!__x86_64__]: Use __asm operand instead of sys_futex0.\n+\t(futex_wake) [!__x86_64__]: Ditto.\n+\n 2015-05-28  Julian Brown  <julian@codesourcery.com>\n \n \t* oacc-init.c (resolve_device): Add FAIL_IS_ERROR argument. Update\n@@ -6,14 +12,14 @@\n \t(acc_init_1, acc_shutdown_1): Update call to resolve_device. Call\n \tacc_dev_num_out_of_range as appropriate.\n \t(acc_get_num_devices, acc_set_device_type, acc_get_device_type)\n-\t(acc_get_device_num, acc_set_device_num): Update calls to resolve_device.\n+\t(acc_get_device_num, acc_set_device_num): Update calls to\n+\tresolve_device.\n \t* testsuite/libgomp.oacc-c-c++-common/lib-4.c: Update expected test\n \toutput.\n \n 2015-05-28  Julian Brown  <julian@codesourcery.com>\n \n \tPR libgomp/65742\n-\n \t* oacc-init.c (plugin/plugin-host.h): Include.\n \t(acc_on_device): Check whether we're in an offloaded region for\n \thost_nonshm\n@@ -40,8 +46,7 @@\n \n 2015-05-27  Uros Bizjak  <ubizjak@gmail.com>\n \n-\t* config/linux/x86/futex.h (sys_futex0) [__PIC__]: Remove\n-\tsys_futex0 function.\n+\t* config/linux/x86/futex.h (sys_futex0) [__PIC__]: Remove function.\n \n 2015-05-27  Chung-Lin Tang  <cltang@codesourcery.com>\n "}, {"sha": "0fe50e851cc18439c30337867f1761c144e19a99", "filename": "libgomp/config/linux/x86/futex.h", "status": "modified", "additions": 21, "deletions": 15, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb3caa357705844d03a633e2d1108e349a929068/libgomp%2Fconfig%2Flinux%2Fx86%2Ffutex.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb3caa357705844d03a633e2d1108e349a929068/libgomp%2Fconfig%2Flinux%2Fx86%2Ffutex.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fconfig%2Flinux%2Fx86%2Ffutex.h?ref=bb3caa357705844d03a633e2d1108e349a929068", "patch": "@@ -81,43 +81,49 @@ futex_wake (int *addr, int count)\n #  define SYS_futex\t240\n # endif\n \n-static inline long\n-sys_futex0 (int *addr, int op, int val)\n+static inline void\n+futex_wait (int *addr, int val)\n {\n   long res;\n \n   __asm volatile (\"int $0x80\"\n \t\t  : \"=a\" (res)\n-\t\t  : \"0\"(SYS_futex), \"b\" (addr), \"c\"(op),\n-\t\t    \"d\"(val), \"S\"(0)\n+\t\t  : \"0\" (SYS_futex), \"b\" (addr), \"c\" (gomp_futex_wait),\n+\t\t    \"d\" (val), \"S\" (0)\n \t\t  : \"memory\");\n-  return res;\n-}\n-\n-static inline void\n-futex_wait (int *addr, int val)\n-{\n-  long res = sys_futex0 (addr, gomp_futex_wait, val);\n   if (__builtin_expect (res == -ENOSYS, 0))\n     {\n       gomp_futex_wait &= ~FUTEX_PRIVATE_FLAG;\n       gomp_futex_wake &= ~FUTEX_PRIVATE_FLAG;\n-      sys_futex0 (addr, gomp_futex_wait, val);\n+      __asm volatile (\"int $0x80\"\n+\t\t      : \"=a\" (res)\n+\t\t      : \"0\" (SYS_futex), \"b\" (addr), \"c\" (gomp_futex_wait),\n+\t\t        \"d\" (val), \"S\" (0)\n+\t\t      : \"memory\");\n     }\n }\n \n static inline void\n futex_wake (int *addr, int count)\n {\n-  long res = sys_futex0 (addr, gomp_futex_wake, count);\n+  long res;\n+\n+  __asm volatile (\"int $0x80\"\n+\t\t  : \"=a\" (res)\n+\t\t  : \"0\" (SYS_futex), \"b\" (addr), \"c\" (gomp_futex_wake),\n+\t\t    \"d\" (count)\n+\t\t  : \"memory\");\n   if (__builtin_expect (res == -ENOSYS, 0))\n     {\n       gomp_futex_wait &= ~FUTEX_PRIVATE_FLAG;\n       gomp_futex_wake &= ~FUTEX_PRIVATE_FLAG;\n-      sys_futex0 (addr, gomp_futex_wake, count);\n+      __asm volatile (\"int $0x80\"\n+\t\t      : \"=a\" (res)\n+\t\t      : \"0\" (SYS_futex), \"b\" (addr), \"c\" (gomp_futex_wake),\n+\t\t        \"d\" (count)\n+\t\t      : \"memory\");\n     }\n }\n-\n #endif /* __x86_64__ */\n \n static inline void"}]}