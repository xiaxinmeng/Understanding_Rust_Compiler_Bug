{"sha": "03f104725f74a1dc7b6b1c7937d40e0fb931f75f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDNmMTA0NzI1Zjc0YTFkYzdiNmIxYzc5MzdkNDBlMGZiOTMxZjc1Zg==", "commit": {"author": {"name": "Toon Moene", "email": "toon@moene.indiv.nluug.nl", "date": "2002-04-10T19:49:52Z"}, "committer": {"name": "Toon Moene", "email": "toon@gcc.gnu.org", "date": "2002-04-10T19:49:52Z"}, "message": "c-decl.c (c_init_decl_processing): Move generation of decls for g77_integer_type_node and friends from here ...\n\n2002-04-10  Toon Moene  <toon@moene.indiv.nluug.nl>\n\n\t* c-decl.c (c_init_decl_processing): Move generation of\n\tdecls for g77_integer_type_node and friends from here ...\n\t* c-common.c (c_common_nodes_and_builtins): ... to here.\n\nFrom-SVN: r52141", "tree": {"sha": "684eeb2df3aa27879879e6c38c2b2fb087cbdb0d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/684eeb2df3aa27879879e6c38c2b2fb087cbdb0d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/03f104725f74a1dc7b6b1c7937d40e0fb931f75f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03f104725f74a1dc7b6b1c7937d40e0fb931f75f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03f104725f74a1dc7b6b1c7937d40e0fb931f75f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03f104725f74a1dc7b6b1c7937d40e0fb931f75f/comments", "author": null, "committer": null, "parents": [{"sha": "2f460a0a57bb984d7159f7d40f4cf8724da907ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f460a0a57bb984d7159f7d40f4cf8724da907ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f460a0a57bb984d7159f7d40f4cf8724da907ca"}], "stats": {"total": 108, "additions": 59, "deletions": 49}, "files": [{"sha": "d9962c3ea20a7f1747b0f543007e5c1fecdc6329", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03f104725f74a1dc7b6b1c7937d40e0fb931f75f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03f104725f74a1dc7b6b1c7937d40e0fb931f75f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=03f104725f74a1dc7b6b1c7937d40e0fb931f75f", "patch": "@@ -1,3 +1,9 @@\n+2002-04-10  Toon Moene  <toon@moene.indiv.nluug.nl>\n+\n+\t* c-decl.c (c_init_decl_processing): Move generation of\n+\tdecls for g77_integer_type_node and friends from here ...\n+\t* c-common.c (c_common_nodes_and_builtins): ... to here.\n+\n 2002-04-10  Ulrich Weigand  <uweigand@de.ibm.com>\n \n \t* reload1.c (choose_reload_regs): HARD_FRAME_POINTER_REGNUM"}, {"sha": "79dab3f7b0ad5ade382932db61f52c24637ede2a", "filename": "gcc/c-common.c", "status": "modified", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03f104725f74a1dc7b6b1c7937d40e0fb931f75f/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03f104725f74a1dc7b6b1c7937d40e0fb931f75f/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=03f104725f74a1dc7b6b1c7937d40e0fb931f75f", "patch": "@@ -2652,6 +2652,59 @@ c_common_nodes_and_builtins ()\n     (build_decl (TYPE_DECL, get_identifier (\"complex long double\"),\n \t\t complex_long_double_type_node));\n \n+  /* Types which are common to the fortran compiler and libf2c.  When\n+     changing these, you also need to be concerned with f/com.h.  */\n+\n+  if (TYPE_PRECISION (float_type_node)\n+      == TYPE_PRECISION (long_integer_type_node))\n+    {\n+      g77_integer_type_node = long_integer_type_node;\n+      g77_uinteger_type_node = long_unsigned_type_node;\n+    }\n+  else if (TYPE_PRECISION (float_type_node)\n+\t   == TYPE_PRECISION (integer_type_node))\n+    {\n+      g77_integer_type_node = integer_type_node;\n+      g77_uinteger_type_node = unsigned_type_node;\n+    }\n+  else\n+    g77_integer_type_node = g77_uinteger_type_node = NULL_TREE;\n+\n+  if (g77_integer_type_node != NULL_TREE)\n+    {\n+      (*lang_hooks.decls.pushdecl) (build_decl (TYPE_DECL,\n+\t\t\t\t\t\tget_identifier (\"__g77_integer\"),\n+\t\t\t\t\t\tg77_integer_type_node));\n+      (*lang_hooks.decls.pushdecl) (build_decl (TYPE_DECL,\n+\t\t\t\t\t\tget_identifier (\"__g77_uinteger\"),\n+\t\t\t\t\t\tg77_uinteger_type_node));\n+    }\n+\n+  if (TYPE_PRECISION (float_type_node) * 2\n+      == TYPE_PRECISION (long_integer_type_node))\n+    {\n+      g77_longint_type_node = long_integer_type_node;\n+      g77_ulongint_type_node = long_unsigned_type_node;\n+    }\n+  else if (TYPE_PRECISION (float_type_node) * 2\n+\t   == TYPE_PRECISION (long_long_integer_type_node))\n+    {\n+      g77_longint_type_node = long_long_integer_type_node;\n+      g77_ulongint_type_node = long_long_unsigned_type_node;\n+    }\n+  else\n+    g77_longint_type_node = g77_ulongint_type_node = NULL_TREE;\n+\n+  if (g77_longint_type_node != NULL_TREE)\n+    {\n+      (*lang_hooks.decls.pushdecl) (build_decl (TYPE_DECL,\n+\t\t\t\t\t\tget_identifier (\"__g77_longint\"),\n+\t\t\t\t\t\tg77_longint_type_node));\n+      (*lang_hooks.decls.pushdecl) (build_decl (TYPE_DECL,\n+\t\t\t\t\t\tget_identifier (\"__g77_ulongint\"),\n+\t\t\t\t\t\tg77_ulongint_type_node));\n+    }\n+\n   record_builtin_type (RID_VOID, NULL, void_type_node);\n \n   void_zero_node = build_int_2 (0, 0);"}, {"sha": "3487aef05d90adca94107448d449e3de1b772665", "filename": "gcc/c-decl.c", "status": "modified", "additions": 0, "deletions": 49, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03f104725f74a1dc7b6b1c7937d40e0fb931f75f/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03f104725f74a1dc7b6b1c7937d40e0fb931f75f/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=03f104725f74a1dc7b6b1c7937d40e0fb931f75f", "patch": "@@ -2931,55 +2931,6 @@ c_init_decl_processing ()\n     = build_function_type (ptr_type_node,\n \t\t\t   tree_cons (NULL_TREE, ptr_type_node, endlink));\n \n-  /* Types which are common to the fortran compiler and libf2c.  When\n-     changing these, you also need to be concerned with f/com.h.  */\n-\n-  if (TYPE_PRECISION (float_type_node)\n-      == TYPE_PRECISION (long_integer_type_node))\n-    {\n-      g77_integer_type_node = long_integer_type_node;\n-      g77_uinteger_type_node = long_unsigned_type_node;\n-    }\n-  else if (TYPE_PRECISION (float_type_node)\n-\t   == TYPE_PRECISION (integer_type_node))\n-    {\n-      g77_integer_type_node = integer_type_node;\n-      g77_uinteger_type_node = unsigned_type_node;\n-    }\n-  else\n-    g77_integer_type_node = g77_uinteger_type_node = NULL_TREE;\n-\n-  if (g77_integer_type_node != NULL_TREE)\n-    {\n-      pushdecl (build_decl (TYPE_DECL, get_identifier (\"__g77_integer\"),\n-\t\t\t    g77_integer_type_node));\n-      pushdecl (build_decl (TYPE_DECL, get_identifier (\"__g77_uinteger\"),\n-\t\t\t    g77_uinteger_type_node));\n-    }\n-\n-  if (TYPE_PRECISION (float_type_node) * 2\n-      == TYPE_PRECISION (long_integer_type_node))\n-    {\n-      g77_longint_type_node = long_integer_type_node;\n-      g77_ulongint_type_node = long_unsigned_type_node;\n-    }\n-  else if (TYPE_PRECISION (float_type_node) * 2\n-\t   == TYPE_PRECISION (long_long_integer_type_node))\n-    {\n-      g77_longint_type_node = long_long_integer_type_node;\n-      g77_ulongint_type_node = long_long_unsigned_type_node;\n-    }\n-  else\n-    g77_longint_type_node = g77_ulongint_type_node = NULL_TREE;\n-\n-  if (g77_longint_type_node != NULL_TREE)\n-    {\n-      pushdecl (build_decl (TYPE_DECL, get_identifier (\"__g77_longint\"),\n-\t\t\t    g77_longint_type_node));\n-      pushdecl (build_decl (TYPE_DECL, get_identifier (\"__g77_ulongint\"),\n-\t\t\t    g77_ulongint_type_node));\n-    }\n-\n   pedantic_lvalues = pedantic;\n \n   make_fname_decl = c_make_fname_decl;"}]}