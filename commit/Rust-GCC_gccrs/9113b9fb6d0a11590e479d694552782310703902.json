{"sha": "9113b9fb6d0a11590e479d694552782310703902", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTExM2I5ZmI2ZDBhMTE1OTBlNDc5ZDY5NDU1Mjc4MjMxMDcwMzkwMg==", "commit": {"author": {"name": "Nathan Froyd", "email": "froydnj@codesourcery.com", "date": "2011-02-23T16:44:18Z"}, "committer": {"name": "Nathan Froyd", "email": "froydnj@gcc.gnu.org", "date": "2011-02-23T16:44:18Z"}, "message": "re PR c++/46868 (ICE: SIGSEGV splay_tree_splay (splay-tree.c:149) on invalid code)\n\nfix PR c++/46868\ngcc/cp/\n\tPR c++/46868\n\t* parser.c (cp_parser_class_specifier): Require a closing brace\n\tto attempt error recovery.\n\ngcc/testsuite/\n\tPR c++/46868\n\t* g++.dg/pr46868.C: New test.\n\t* g++.dg/parse/parameter-declaration-1.C: Adjust.\n\t* g++.dg/parse/error14.C: Adjust.\n\nFrom-SVN: r170440", "tree": {"sha": "f432a161e71a5f35dbc1eab3777bf3ba35d731c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f432a161e71a5f35dbc1eab3777bf3ba35d731c0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9113b9fb6d0a11590e479d694552782310703902", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9113b9fb6d0a11590e479d694552782310703902", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9113b9fb6d0a11590e479d694552782310703902", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9113b9fb6d0a11590e479d694552782310703902/comments", "author": null, "committer": null, "parents": [{"sha": "c70c034251ce49cb008d344c504ee086c6105af9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c70c034251ce49cb008d344c504ee086c6105af9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c70c034251ce49cb008d344c504ee086c6105af9"}], "stats": {"total": 29, "additions": 24, "deletions": 5}, "files": [{"sha": "195b3192bf93dc393fae90b440de48008b00a434", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9113b9fb6d0a11590e479d694552782310703902/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9113b9fb6d0a11590e479d694552782310703902/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=9113b9fb6d0a11590e479d694552782310703902", "patch": "@@ -1,3 +1,9 @@\n+2011-02-23  Nathan Froyd  <froydnj@codesourcery.com>\n+\n+\tPR c++/46868\n+\t* parser.c (cp_parser_class_specifier): Require a closing brace\n+\tto attempt error recovery.\n+\n 2011-02-23  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/47833"}, {"sha": "5b08389f4e79909f22b53d418e1f4d0aedd84d6b", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9113b9fb6d0a11590e479d694552782310703902/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9113b9fb6d0a11590e479d694552782310703902/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=9113b9fb6d0a11590e479d694552782310703902", "patch": "@@ -16874,6 +16874,7 @@ cp_parser_class_specifier (cp_parser* parser)\n   tree old_scope = NULL_TREE;\n   tree scope = NULL_TREE;\n   tree bases;\n+  cp_token *closing_brace;\n \n   push_deferring_access_checks (dk_no_deferred);\n \n@@ -16943,7 +16944,7 @@ cp_parser_class_specifier (cp_parser* parser)\n     cp_parser_member_specification_opt (parser);\n \n   /* Look for the trailing `}'.  */\n-  cp_parser_require (parser, CPP_CLOSE_BRACE, RT_CLOSE_BRACE);\n+  closing_brace = cp_parser_require (parser, CPP_CLOSE_BRACE, RT_CLOSE_BRACE);\n   /* Look for trailing attributes to apply to this class.  */\n   if (cp_parser_allow_gnu_extensions_p (parser))\n     attributes = cp_parser_attributes_opt (parser);\n@@ -17018,8 +17019,9 @@ cp_parser_class_specifier (cp_parser* parser)\n       }\n \n     /* If we don't have a type, then something is very wrong and we\n-       shouldn't try to do anything clever.  */\n-    if (TYPE_P (type) && want_semicolon)\n+       shouldn't try to do anything clever.  Likewise for not seeing the\n+       closing brace.  */\n+    if (closing_brace && TYPE_P (type) && want_semicolon)\n       {\n \tcp_token_position prev\n \t  = cp_lexer_previous_token_position (parser->lexer);"}, {"sha": "20e9eed34ada1d1866acc000ec9c1b3f84d698b9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9113b9fb6d0a11590e479d694552782310703902/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9113b9fb6d0a11590e479d694552782310703902/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9113b9fb6d0a11590e479d694552782310703902", "patch": "@@ -1,3 +1,10 @@\n+2011-02-23  Nathan Froyd  <froydnj@codesourcery.com>\n+\n+\tPR c++/46868\n+\t* g++.dg/pr46868.C: New test.\n+\t* g++.dg/parse/parameter-declaration-1.C: Adjust.\n+\t* g++.dg/parse/error14.C: Adjust.\n+\n 2011-02-23  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/47838"}, {"sha": "04f2f56b6dc6d611fb377fa70a17a20623dac3c3", "filename": "gcc/testsuite/g++.dg/parse/error14.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9113b9fb6d0a11590e479d694552782310703902/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror14.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9113b9fb6d0a11590e479d694552782310703902/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror14.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror14.C?ref=9113b9fb6d0a11590e479d694552782310703902", "patch": "@@ -21,6 +21,6 @@ struct X\n \n }; // { dg-error \"2:expected '.' at end of input\" \"at end of input\" }\n    // { dg-error \"1:expected primary-expression before '.' token\" \"primary\" { target *-*-* } 22 }\n-   // { dg-error \"2:expected ';' after struct definition\" \"semicolon\" { target *-*-* } 22 }\n+   // { dg-error \"1:expected unqualified-id\" \"unqualified-id\" { target *-*-* } 22 }\n    // { dg-error \"1:expected ';' before '.' token\" \"function\" { target *-*-* } 22 }\n "}, {"sha": "22d6f214d7df03c0a5c51757dee0c067ced7cad3", "filename": "gcc/testsuite/g++.dg/parse/parameter-declaration-1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9113b9fb6d0a11590e479d694552782310703902/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fparameter-declaration-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9113b9fb6d0a11590e479d694552782310703902/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fparameter-declaration-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fparameter-declaration-1.C?ref=9113b9fb6d0a11590e479d694552782310703902", "patch": "@@ -2,5 +2,5 @@\n // Origin: Robert Schiele; PR C++/8799\n // { dg-do compile }\n \n-struct {\t\t\t// { dg-error \"\" }\n+struct {\n    a(void = 0; a(0), a(0)\t// { dg-error \"\" \"\" { target *-*-* } }"}, {"sha": "544c7b219df0a6ff8677c7b35c0ce05f5bc45312", "filename": "gcc/testsuite/g++.dg/pr46868.C", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9113b9fb6d0a11590e479d694552782310703902/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr46868.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9113b9fb6d0a11590e479d694552782310703902/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr46868.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr46868.C?ref=9113b9fb6d0a11590e479d694552782310703902", "patch": "@@ -0,0 +1,4 @@\n+// PR c++/46868\n+// { dg-do compile }\n+\n+template < int > struct S { S < // { dg-error \"\" }"}]}