{"sha": "49385686db08da967279598d5079050794884e58", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDkzODU2ODZkYjA4ZGE5NjcyNzk1OThkNTA3OTA1MDc5NDg4NGU1OA==", "commit": {"author": {"name": "Aditya Kumar", "email": "aditya.k7@samsung.com", "date": "2015-11-30T20:29:15Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2015-11-30T20:29:15Z"}, "message": "always print parameter names as P_{SSA_NAME_VERSION}\n\nCo-Authored-By: Sebastian Pop <s.pop@samsung.com>\n\nFrom-SVN: r231085", "tree": {"sha": "b2af9c201e16f57627a00ca1aeb7631dce66b9be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b2af9c201e16f57627a00ca1aeb7631dce66b9be"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/49385686db08da967279598d5079050794884e58", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49385686db08da967279598d5079050794884e58", "html_url": "https://github.com/Rust-GCC/gccrs/commit/49385686db08da967279598d5079050794884e58", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49385686db08da967279598d5079050794884e58/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "db941d7ef7b191700ad4467800dd0324365e474e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db941d7ef7b191700ad4467800dd0324365e474e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db941d7ef7b191700ad4467800dd0324365e474e"}], "stats": {"total": 65, "additions": 34, "deletions": 31}, "files": [{"sha": "dbcc3d91c9f982c7c4bf419d6097b56b082634f4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49385686db08da967279598d5079050794884e58/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49385686db08da967279598d5079050794884e58/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=49385686db08da967279598d5079050794884e58", "patch": "@@ -1,3 +1,10 @@\n+2015-11-30  Aditya Kumar  <aditya.k7@samsung.com>\n+\t    Sebastian Pop  <s.pop@samsung.com>\n+\n+\t* graphite-isl-ast-to-gimple.c: Fix dump messages.\n+\t* graphite-scop-detection.c: Same.\n+\t* graphite-sese-to-poly.c (isl_id_for_ssa_name): Do not call get_name.\n+\n 2015-11-30  Cesar Philippidis  <cesar@codesourcery.com>\n \n \t* tree-nested.c (convert_nonlocal_omp_clauses): Add support for"}, {"sha": "16cb5faacda77ba061a3046059966a49913f90d2", "filename": "gcc/graphite-isl-ast-to-gimple.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49385686db08da967279598d5079050794884e58/gcc%2Fgraphite-isl-ast-to-gimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49385686db08da967279598d5079050794884e58/gcc%2Fgraphite-isl-ast-to-gimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-isl-ast-to-gimple.c?ref=49385686db08da967279598d5079050794884e58", "patch": "@@ -2220,7 +2220,7 @@ translate_isl_ast_to_gimple::copy_loop_close_phi_args (basic_block old_bb,\n \t\t   get_loc (old_name));\n       if (dump_file)\n \t{\n-\t  fprintf (dump_file, \"[codegen] Adding loop-closed phi: \");\n+\t  fprintf (dump_file, \"[codegen] Adding loop close phi: \");\n \t  print_gimple_stmt (dump_file, new_close_phi, 0, 0);\n \t}\n \n@@ -2265,7 +2265,7 @@ translate_isl_ast_to_gimple::copy_loop_close_phi_nodes (basic_block old_bb,\n \t\t\t\t\t\t\tbasic_block new_bb)\n {\n   if (dump_file)\n-    fprintf (dump_file, \"[codegen] copying loop closed phi nodes in bb_%d.\\n\",\n+    fprintf (dump_file, \"[codegen] copying loop close phi nodes in bb_%d.\\n\",\n \t     new_bb->index);\n   /* Loop close phi nodes should have only one argument.  */\n   gcc_assert (1 == EDGE_COUNT (old_bb->preds));"}, {"sha": "2f4231a45829589159330e317bf19e36a64be059", "filename": "gcc/graphite-scop-detection.c", "status": "modified", "additions": 16, "deletions": 15, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49385686db08da967279598d5079050794884e58/gcc%2Fgraphite-scop-detection.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49385686db08da967279598d5079050794884e58/gcc%2Fgraphite-scop-detection.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-scop-detection.c?ref=49385686db08da967279598d5079050794884e58", "patch": "@@ -382,7 +382,7 @@ canonicalize_loop_closed_ssa (loop_p loop)\n   if (single_pred_p (bb))\n     {\n       e = split_block_after_labels (bb);\n-      DEBUG_PRINT (dp << \"\\nSplitting bb_\" << bb->index);\n+      DEBUG_PRINT (dp << \"Splitting bb_\" << bb->index << \".\\n\");\n       make_close_phi_nodes_unique (e->src);\n     }\n   else\n@@ -391,7 +391,7 @@ canonicalize_loop_closed_ssa (loop_p loop)\n       basic_block close = split_edge (e);\n \n       e = single_succ_edge (close);\n-      DEBUG_PRINT (dp << \"\\nSplitting edge (\" << e->src->index << \",\"\n+      DEBUG_PRINT (dp << \"Splitting edge (\" << e->src->index << \",\"\n \t\t      << e->dest->index << \")\\n\");\n \n       for (psi = gsi_start_phis (bb); !gsi_end_p (psi); gsi_next (&psi))\n@@ -846,7 +846,7 @@ scop_detection::merge_sese (sese_l first, sese_l second) const\n \tcombined.exit = single_succ_edge (imm_succ);\n       else\n \t{\n-\t  DEBUG_PRINT (dp << \"\\n[scop-detection-fail] Discarding SCoP because \"\n+\t  DEBUG_PRINT (dp << \"[scop-detection-fail] Discarding SCoP because \"\n \t\t\t  << \"no single exit (empty succ) for sese exit\";\n \t\t       print_sese (dump_file, combined));\n \t  return invalid_sese;\n@@ -870,7 +870,7 @@ scop_detection::build_scop_depth (sese_l s, loop_p loop)\n   if (!loop)\n     return s;\n \n-  DEBUG_PRINT (dp << \"\\n[Depth loop_\" << loop->num << \"]\");\n+  DEBUG_PRINT (dp << \"[Depth loop_\" << loop->num << \"]\\n\");\n   s = build_scop_depth (s, loop->inner);\n \n   sese_l s2 = merge_sese (s, get_sese (loop));\n@@ -895,7 +895,7 @@ scop_detection::build_scop_breadth (sese_l s1, loop_p loop)\n {\n   if (!loop)\n     return s1;\n-  DEBUG_PRINT (dp << \"\\n[Breadth loop_\" << loop->num << \"]\");\n+  DEBUG_PRINT (dp << \"[Breadth loop_\" << loop->num << \"]\\n\");\n   gcc_assert (s1);\n \n   loop_p l = loop;\n@@ -981,7 +981,7 @@ scop_detection::loop_is_valid_scop (loop_p loop, sese_l scop) const\n   if (loop_body_is_valid_scop (loop, scop))\n     {\n       DEBUG_PRINT (dp << \"[valid-scop] loop_\" << loop->num\n-\t\t      << \"is a valid scop.\\n\");\n+\t\t      << \" is a valid scop.\\n\");\n       return true;\n     }\n   return false;\n@@ -1013,15 +1013,15 @@ scop_detection::add_scop (sese_l s)\n   /* Do not add scops with only one loop.  */\n   if (region_has_one_loop (s))\n     {\n-      DEBUG_PRINT (dp << \"\\n[scop-detection-fail] Discarding one loop SCoP\";\n+      DEBUG_PRINT (dp << \"[scop-detection-fail] Discarding one loop SCoP.\\n\";\n \t\t   print_sese (dump_file, s));\n       return;\n     }\n \n   if (get_exit_bb (s) == EXIT_BLOCK_PTR_FOR_FN (cfun))\n     {\n-      DEBUG_PRINT (dp << \"\\n[scop-detection-fail] \"\n-\t\t      << \"Discarding SCoP exiting to return\";\n+      DEBUG_PRINT (dp << \"[scop-detection-fail] \"\n+\t\t      << \"Discarding SCoP exiting to return.\";\n \t\t   print_sese (dump_file, s));\n       return;\n     }\n@@ -1033,7 +1033,7 @@ scop_detection::add_scop (sese_l s)\n   remove_intersecting_scops (s);\n \n   scops.safe_push (s);\n-  DEBUG_PRINT (dp << \"\\nAdding SCoP \"; print_sese (dump_file, s));\n+  DEBUG_PRINT (dp << \"Adding SCoP \"; print_sese (dump_file, s));\n }\n \n /* Return true when a statement in SCOP cannot be represented by Graphite.\n@@ -1047,7 +1047,7 @@ scop_detection::harmful_stmt_in_region (sese_l scop) const\n   basic_block exit_bb = get_exit_bb (scop);\n   basic_block entry_bb = get_entry_bb (scop);\n \n-  DEBUG_PRINT (dp << \"\\n[checking-harmful-bbs] \";\n+  DEBUG_PRINT (dp << \"[checking-harmful-bbs] \";\n \t       print_sese (dump_file, scop));\n   gcc_assert (dominated_by_p (CDI_DOMINATORS, exit_bb, entry_bb));\n \n@@ -1112,7 +1112,7 @@ scop_detection::remove_subscops (sese_l s1)\n     {\n       if (subsumes (s1, *s2))\n \t{\n-\t  DEBUG_PRINT (dp << \"\\nRemoving sub-SCoP\";\n+\t  DEBUG_PRINT (dp << \"Removing sub-SCoP\";\n \t\t       print_sese (dump_file, *s2));\n \t  scops.unordered_remove (j);\n \t}\n@@ -1147,8 +1147,9 @@ scop_detection::remove_intersecting_scops (sese_l s1)\n     {\n       if (intersects (s1, *s2))\n \t{\n-\t  DEBUG_PRINT (dp << \"\\nRemoving intersecting SCoP\";\n-\t\t       print_sese (dump_file, *s2); dp << \"Intersects with:\";\n+\t  DEBUG_PRINT (dp << \"Removing intersecting SCoP\";\n+\t\t       print_sese (dump_file, *s2);\n+\t\t       dp << \"Intersects with:\";\n \t\t       print_sese (dump_file, s1));\n \t  scops.unordered_remove (j);\n \t}\n@@ -1721,7 +1722,7 @@ build_cross_bb_scalars_use (scop_p scop, tree use, gimple *use_stmt,\n   gimple *def_stmt = SSA_NAME_DEF_STMT (use);\n   if (gimple_bb (def_stmt) != gimple_bb (use_stmt))\n     {\n-      DEBUG_PRINT (dp << \"\\nAdding scalar read:\";\n+      DEBUG_PRINT (dp << \"Adding scalar read:\";\n \t\t   print_generic_expr (dump_file, use, 0);\n \t\t   dp << \"\\nFrom stmt:\";\n \t\t   print_gimple_stmt (dump_file, use_stmt, 0, 0));"}, {"sha": "7ef01fbf32f2ed2f07c59988c1a3fedfa9e1405d", "filename": "gcc/graphite-sese-to-poly.c", "status": "modified", "additions": 3, "deletions": 13, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49385686db08da967279598d5079050794884e58/gcc%2Fgraphite-sese-to-poly.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49385686db08da967279598d5079050794884e58/gcc%2Fgraphite-sese-to-poly.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-sese-to-poly.c?ref=49385686db08da967279598d5079050794884e58", "patch": "@@ -273,19 +273,9 @@ extract_affine_mul (scop_p s, tree e, __isl_take isl_space *space)\n static isl_id *\n isl_id_for_ssa_name (scop_p s, tree e)\n {\n-  const char *name = get_name (e);\n-  isl_id *id;\n-\n-  if (name)\n-    id = isl_id_alloc (s->isl_context, name, e);\n-  else\n-    {\n-      char name1[10];\n-      snprintf (name1, sizeof (name1), \"P_%d\", SSA_NAME_VERSION (e));\n-      id = isl_id_alloc (s->isl_context, name1, e);\n-    }\n-\n-  return id;\n+  char name1[10];\n+  snprintf (name1, sizeof (name1), \"P_%d\", SSA_NAME_VERSION (e));\n+  return isl_id_alloc (s->isl_context, name1, e);\n }\n \n /* Return an ISL identifier for the data reference DR.  Data references and"}, {"sha": "4aabe7b205478c5fd1703b8eba587c27a0a4463d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49385686db08da967279598d5079050794884e58/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49385686db08da967279598d5079050794884e58/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=49385686db08da967279598d5079050794884e58", "patch": "@@ -1,3 +1,8 @@\n+2015-11-30  Aditya Kumar  <aditya.k7@samsung.com>\n+\t    Sebastian Pop  <s.pop@samsung.com>\n+\n+\t* gcc.dg/graphite/pr35356-1.c: Adjust pattern.\n+\n 2015-11-30  Cesar Philippidis  <cesar@codesourcery.com>\n \t    Nathan Sidwell  <nathan@codesourcery.com>\n "}, {"sha": "0eb714c7870f2de162b3d379e00e81cfaf5e605d", "filename": "gcc/testsuite/gcc.dg/graphite/pr35356-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49385686db08da967279598d5079050794884e58/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr35356-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49385686db08da967279598d5079050794884e58/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr35356-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr35356-1.c?ref=49385686db08da967279598d5079050794884e58", "patch": "@@ -34,4 +34,4 @@ if (n >= k + 1 && k >= 0) {\n \n */\n \n-/* { dg-final { scan-tree-dump-times \"if \\\\\\(n >= k \\\\\\+ 1 && k >= 0\\\\\\) \\\\\\{\" 1 \"graphite\" } } */\n+/* { dg-final { scan-tree-dump-times \"if \\\\\\(P_9 >= P_10 \\\\\\+ 1 && P_10 >= 0\\\\\\) \\\\\\{\" 1 \"graphite\" } } */"}]}