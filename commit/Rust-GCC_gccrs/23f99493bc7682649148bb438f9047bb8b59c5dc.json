{"sha": "23f99493bc7682649148bb438f9047bb8b59c5dc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjNmOTk0OTNiYzc2ODI2NDkxNDhiYjQzOGY5MDQ3YmI4YjU5YzVkYw==", "commit": {"author": {"name": "Mike Stump", "email": "mrs@apple.com", "date": "2006-06-08T22:23:17Z"}, "committer": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "2006-06-08T22:23:17Z"}, "message": "re PR target/26427 (with -fsection-anchors with zero sized structs)\n\n\tPR target/26427\n\t* config/darwin.c (darwin_asm_output_anchor): Disable\n\t-fsection-anchors on darwin for now.\n\t* config/darwin.h (TARGET_ASM_OUTPUT_ANCHOR): Likewise.\n\t* rs6000/rs6000.c (optimization_options): Likewise.\n\ntestsuite:\n\t* gcc.dg/pr26427.c: Test to ensure that -fsection-anchors doesn't\n\tproduce bad code on darwin.\n\nFrom-SVN: r114498", "tree": {"sha": "61d23dcdc1b08a74306174e75f6690abbe62765a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/61d23dcdc1b08a74306174e75f6690abbe62765a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/23f99493bc7682649148bb438f9047bb8b59c5dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23f99493bc7682649148bb438f9047bb8b59c5dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/23f99493bc7682649148bb438f9047bb8b59c5dc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23f99493bc7682649148bb438f9047bb8b59c5dc/comments", "author": null, "committer": null, "parents": [{"sha": "07ea59afb113a51ecb305f3a94f9bebbcaffb6b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07ea59afb113a51ecb305f3a94f9bebbcaffb6b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/07ea59afb113a51ecb305f3a94f9bebbcaffb6b6"}], "stats": {"total": 59, "additions": 56, "deletions": 3}, "files": [{"sha": "ce53bb296270dda410bd56461e98a66ab2fbd7a1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23f99493bc7682649148bb438f9047bb8b59c5dc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23f99493bc7682649148bb438f9047bb8b59c5dc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=23f99493bc7682649148bb438f9047bb8b59c5dc", "patch": "@@ -1,3 +1,11 @@\n+2006-06-08  Mike Stump  <mrs@apple.com>\n+\n+\tPR target/26427\n+\t* config/darwin.c (darwin_asm_output_anchor): Disable\n+\t-fsection-anchors on darwin for now.\n+\t* config/darwin.h (TARGET_ASM_OUTPUT_ANCHOR): Likewise.\n+\t* rs6000/rs6000.c (optimization_options): Likewise.\n+\n 2006-06-08  Volker Reichelt  <reichelt@igpm.rwth-aachen.de>\n \n \tPR target/27421"}, {"sha": "541b772a7a462d955fb0f2987bee323247a88958", "filename": "gcc/config/darwin.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23f99493bc7682649148bb438f9047bb8b59c5dc/gcc%2Fconfig%2Fdarwin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23f99493bc7682649148bb438f9047bb8b59c5dc/gcc%2Fconfig%2Fdarwin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin.c?ref=23f99493bc7682649148bb438f9047bb8b59c5dc", "patch": "@@ -1524,6 +1524,8 @@ darwin_binds_local_p (tree decl)\n   return default_binds_local_p_1 (decl, 0);\n }\n \n+#if 0\n+/* See TARGET_ASM_OUTPUT_ANCHOR for why we can't do this yet.  */\n /* The Darwin's implementation of TARGET_ASM_OUTPUT_ANCHOR.  Define the\n    anchor relative to \".\", the current section position.  We cannot use\n    the default one because ASM_OUTPUT_DEF is wrong for Darwin.  */\n@@ -1536,6 +1538,7 @@ darwin_asm_output_anchor (rtx symbol)\n   fprintf (asm_out_file, \", . + \" HOST_WIDE_INT_PRINT_DEC \"\\n\",\n \t   SYMBOL_REF_BLOCK_OFFSET (symbol));\n }\n+#endif\n \n /* Set the darwin specific attributes on TYPE.  */\n void"}, {"sha": "941f60b357d5ac38925d0d450de130fe80b877fa", "filename": "gcc/config/darwin.h", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23f99493bc7682649148bb438f9047bb8b59c5dc/gcc%2Fconfig%2Fdarwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23f99493bc7682649148bb438f9047bb8b59c5dc/gcc%2Fconfig%2Fdarwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin.h?ref=23f99493bc7682649148bb438f9047bb8b59c5dc", "patch": "@@ -812,8 +812,6 @@ enum machopic_addr_class {\n \tgoto DONE;\t\t\t\t\t\t\t\t\t\\\n       }\n \n-#define TARGET_ASM_OUTPUT_ANCHOR darwin_asm_output_anchor\n-\n /* Experimentally, putting jump tables in text is faster on SPEC.\n    Also this is needed for correctness for coalesced functions.  */\n \n@@ -852,14 +850,28 @@ void add_framework_path (char *);\n #define TARGET_POSIX_IO\n \n /* All new versions of Darwin have C99 functions.  */\n+\n #define TARGET_C99_FUNCTIONS 1\n \n #define WINT_TYPE \"int\"\n \n /* Every program on darwin links against libSystem which contains the pthread\n    routines, so there's no need to explicitly call out when doing threaded\n    work.  */\n+\n #undef GOMP_SELF_SPECS\n #define GOMP_SELF_SPECS \"\"\n \n+/* Darwin can't support anchors until we can cope with the adjustments\n+   to size that ASM_DECLARE_OBJECT_NAME and ASM_DECLARE_CONSTANT_NAME\n+   when outputting members of an anchor block and the linker can be\n+   taught to keep them together or we find some other suitable\n+   code-gen technique.  */\n+\n+#if 0\n+#define TARGET_ASM_OUTPUT_ANCHOR darwin_asm_output_anchor\n+#else\n+#define TARGET_ASM_OUTPUT_ANCHOR NULL\n+#endif\n+\n #endif /* CONFIG_DARWIN_H */"}, {"sha": "dd41f62a59c068e697633478b8fec977acd4e50e", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23f99493bc7682649148bb438f9047bb8b59c5dc/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23f99493bc7682649148bb438f9047bb8b59c5dc/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=23f99493bc7682649148bb438f9047bb8b59c5dc", "patch": "@@ -1633,7 +1633,7 @@ optimization_options (int level ATTRIBUTE_UNUSED, int size ATTRIBUTE_UNUSED)\n   /* Enable section anchors by default.\n      Skip section anchors for Objective C and Objective C++\n      until front-ends fixed.  */\n-  if (lang_hooks.name[4] != 'O')\n+  if (!TARGET_MACHO && lang_hooks.name[4] != 'O')\n     flag_section_anchors = 1;\n }\n "}, {"sha": "344a9f072aec63bac10cae6e8bef713cf59aa7af", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23f99493bc7682649148bb438f9047bb8b59c5dc/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23f99493bc7682649148bb438f9047bb8b59c5dc/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=23f99493bc7682649148bb438f9047bb8b59c5dc", "patch": "@@ -1,3 +1,9 @@\n+2006-06-08  Mike Stump  <mrs@apple.com>\n+\n+\tPR target/26427\n+\t* gcc.dg/pr26427.c: Test to ensure that -fsection-anchors doesn't\n+\tproduce bad code on darwin.\n+\n 2006-06-08  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n \n \tPR fortran/27958"}, {"sha": "3077221c7c78696726ffb22652c07d7f511823d9", "filename": "gcc/testsuite/gcc.dg/pr26427.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23f99493bc7682649148bb438f9047bb8b59c5dc/gcc%2Ftestsuite%2Fgcc.dg%2Fpr26427.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23f99493bc7682649148bb438f9047bb8b59c5dc/gcc%2Ftestsuite%2Fgcc.dg%2Fpr26427.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr26427.c?ref=23f99493bc7682649148bb438f9047bb8b59c5dc", "patch": "@@ -0,0 +1,24 @@\n+/* { dg-warning \"this target does not support\" } */\n+/* { dg-do run { target { *-*-darwin* } } } */\n+/* { dg-options { -fsection-anchors -O } } */\n+/* PR target/26427 */\n+\n+struct a {};\n+static const int d = 1;\n+static const struct a b = {};\n+static const int c = 1;\n+int f(const int *, const struct a *, const int*, const int*);\n+\n+int g(void) {\n+  return f(&c, &b, &d, &c);\n+}\n+\n+int f(const int *b, const struct a *c, const int *d, const int *e) {\n+  return *b == *d;\n+}\n+\n+int main(void) {\n+  if (!g())\n+    __builtin_abort();\n+  return 0;\n+}"}]}