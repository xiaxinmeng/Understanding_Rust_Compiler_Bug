{"sha": "783dc02d89712f5219093d33ad7f08e1509a2134", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzgzZGMwMmQ4OTcxMmY1MjE5MDkzZDMzYWQ3ZjA4ZTE1MDlhMjEzNA==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2020-10-26T13:10:45Z"}, "committer": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2020-10-26T13:11:35Z"}, "message": "Fix simdclones\n\ngcc/ChangeLog:\n\n\tPR ipa/97576\n\t* cgraphclones.c (cgraph_node::materialize_clone): Clear stmt\n\treferences.\n\t* cgraphunit.c (mark_functions_to_output): Do not clear them here.\n\t* ipa-inline-transform.c (inline_transform): Clear stmt references.\n\t* symtab.c (symtab_node::clear_stmts_in_references): Make recursive\n\tfor clones.\n\t* tree-ssa-structalias.c (ipa_pta_execute): Do not clear references.\n\ngcc/testsuite/ChangeLog:\n\n\tPR ipa/97576\n\t* gcc.c-torture/compile/pr97576.c: New test.", "tree": {"sha": "1db4b583f7cff5d77efdc88773e79d57f23800a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1db4b583f7cff5d77efdc88773e79d57f23800a5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/783dc02d89712f5219093d33ad7f08e1509a2134", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/783dc02d89712f5219093d33ad7f08e1509a2134", "html_url": "https://github.com/Rust-GCC/gccrs/commit/783dc02d89712f5219093d33ad7f08e1509a2134", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/783dc02d89712f5219093d33ad7f08e1509a2134/comments", "author": null, "committer": null, "parents": [{"sha": "2d5aad691f5bd605cfc27ce16a1f2d023cd21f75", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d5aad691f5bd605cfc27ce16a1f2d023cd21f75", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d5aad691f5bd605cfc27ce16a1f2d023cd21f75"}], "stats": {"total": 35, "additions": 29, "deletions": 6}, "files": [{"sha": "0ed63078c91b7ee22c77c38b7376250c4f25287a", "filename": "gcc/cgraphclones.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/783dc02d89712f5219093d33ad7f08e1509a2134/gcc%2Fcgraphclones.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/783dc02d89712f5219093d33ad7f08e1509a2134/gcc%2Fcgraphclones.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphclones.c?ref=783dc02d89712f5219093d33ad7f08e1509a2134", "patch": "@@ -1115,6 +1115,7 @@ cgraph_node::materialize_clone ()\n       if (clone.param_adjustments)\n \tclone.param_adjustments->dump (symtab->dump_file);\n     }\n+  clear_stmts_in_references ();\n   /* Copy the OLD_VERSION_NODE function tree to the new version.  */\n   tree_function_versioning (clone_of->decl, decl,\n \t\t\t    clone.tree_map, clone.param_adjustments,"}, {"sha": "08b93cb00ee56af233383e19ae14ea2671a8decd", "filename": "gcc/cgraphunit.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/783dc02d89712f5219093d33ad7f08e1509a2134/gcc%2Fcgraphunit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/783dc02d89712f5219093d33ad7f08e1509a2134/gcc%2Fcgraphunit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphunit.c?ref=783dc02d89712f5219093d33ad7f08e1509a2134", "patch": "@@ -1600,7 +1600,6 @@ mark_functions_to_output (void)\n   FOR_EACH_FUNCTION (node)\n     {\n       tree decl = node->decl;\n-      node->clear_stmts_in_references ();\n \n       gcc_assert (!node->process || node->same_comdat_group);\n       if (node->process)"}, {"sha": "4df1b7fb9eebb447463607e2f4e26065c786d706", "filename": "gcc/ipa-inline-transform.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/783dc02d89712f5219093d33ad7f08e1509a2134/gcc%2Fipa-inline-transform.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/783dc02d89712f5219093d33ad7f08e1509a2134/gcc%2Fipa-inline-transform.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-inline-transform.c?ref=783dc02d89712f5219093d33ad7f08e1509a2134", "patch": "@@ -716,6 +716,7 @@ inline_transform (struct cgraph_node *node)\n       if (n->decl != node->decl)\n \tn->materialize_clone ();\n     }\n+  node->clear_stmts_in_references ();\n \n   /* We might need the body of this function so that we can expand\n      it inline somewhere else.  */"}, {"sha": "067ae2e28a0a9d8190888e35e95c2717fa230957", "filename": "gcc/symtab.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/783dc02d89712f5219093d33ad7f08e1509a2134/gcc%2Fsymtab.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/783dc02d89712f5219093d33ad7f08e1509a2134/gcc%2Fsymtab.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsymtab.c?ref=783dc02d89712f5219093d33ad7f08e1509a2134", "patch": "@@ -752,7 +752,8 @@ symtab_node::remove_stmt_references (gimple *stmt)\n       i++;\n }\n \n-/* Remove all stmt references in non-speculative references.\n+/* Remove all stmt references in non-speculative references in THIS\n+   and all clones.\n    Those are not maintained during inlining & cloning.\n    The exception are speculative references that are updated along\n    with callgraph edges associated with them.  */\n@@ -770,6 +771,13 @@ symtab_node::clear_stmts_in_references (void)\n \tr->lto_stmt_uid = 0;\n \tr->speculative_id = 0;\n       }\n+  cgraph_node *cnode = dyn_cast <cgraph_node *> (this);\n+  if (cnode)\n+    {\n+      if (cnode->clones)\n+\tfor (cnode = cnode->clones; cnode; cnode = cnode->next_sibling_clone)\n+\t  cnode->clear_stmts_in_references ();\n+    }\n }\n \n /* Remove all references in ref list.  */"}, {"sha": "28294c8597ab08a29d8b24bab60e5766f81047e5", "filename": "gcc/testsuite/gcc.c-torture/compile/pr97576.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/783dc02d89712f5219093d33ad7f08e1509a2134/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr97576.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/783dc02d89712f5219093d33ad7f08e1509a2134/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr97576.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr97576.c?ref=783dc02d89712f5219093d33ad7f08e1509a2134", "patch": "@@ -0,0 +1,18 @@\n+void\n+pc (void);\n+\n+void __attribute__ ((simd))\n+ty (void);\n+\n+void __attribute__ ((simd))\n+gf ()\n+{\n+  ty ();\n+}\n+\n+void __attribute__ ((simd))\n+ty (void)\n+{\n+  gf (pc);\n+  gf (gf);\n+}"}, {"sha": "a4832b7543639224f734c804382f3d4b2de1ac4f", "filename": "gcc/tree-ssa-structalias.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/783dc02d89712f5219093d33ad7f08e1509a2134/gcc%2Ftree-ssa-structalias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/783dc02d89712f5219093d33ad7f08e1509a2134/gcc%2Ftree-ssa-structalias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-structalias.c?ref=783dc02d89712f5219093d33ad7f08e1509a2134", "patch": "@@ -8138,10 +8138,6 @@ ipa_pta_execute (void)\n       from = constraints.length ();\n     }\n \n-  /* FIXME: Clone materialization is not preserving stmt references.  */\n-  FOR_EACH_DEFINED_FUNCTION (node)\n-    node->clear_stmts_in_references ();\n-\n   /* Build the constraints.  */\n   FOR_EACH_DEFINED_FUNCTION (node)\n     {"}]}