{"sha": "222aafd7b63a3d79a80c55efefae7b52953be5b4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjIyYWFmZDdiNjNhM2Q3OWE4MGM1NWVmZWZhZTdiNTI5NTNiZTViNA==", "commit": {"author": {"name": "Matthew Fortune", "email": "matthew.fortune@imgtec.com", "date": "2017-02-20T12:06:56Z"}, "committer": {"name": "Matthew Fortune", "email": "mpf@gcc.gnu.org", "date": "2017-02-20T12:06:56Z"}, "message": "Handle WORD_REGISTER_OPERATIONS when reloading (subreg (reg))\n\ngcc/\n\tPR target/78660\n\t* lra-constraints.c (curr_insn_transform): Handle\n\tWORD_REGISTER_OPERATIONS requirements when reloading SUBREGs.\n\nFrom-SVN: r245598", "tree": {"sha": "297a2427fc6d4fd2cd6d7e1579c9500c577630d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/297a2427fc6d4fd2cd6d7e1579c9500c577630d9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/222aafd7b63a3d79a80c55efefae7b52953be5b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/222aafd7b63a3d79a80c55efefae7b52953be5b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/222aafd7b63a3d79a80c55efefae7b52953be5b4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/222aafd7b63a3d79a80c55efefae7b52953be5b4/comments", "author": {"login": "mfortune", "id": 10220247, "node_id": "MDQ6VXNlcjEwMjIwMjQ3", "avatar_url": "https://avatars.githubusercontent.com/u/10220247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mfortune", "html_url": "https://github.com/mfortune", "followers_url": "https://api.github.com/users/mfortune/followers", "following_url": "https://api.github.com/users/mfortune/following{/other_user}", "gists_url": "https://api.github.com/users/mfortune/gists{/gist_id}", "starred_url": "https://api.github.com/users/mfortune/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mfortune/subscriptions", "organizations_url": "https://api.github.com/users/mfortune/orgs", "repos_url": "https://api.github.com/users/mfortune/repos", "events_url": "https://api.github.com/users/mfortune/events{/privacy}", "received_events_url": "https://api.github.com/users/mfortune/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "dc42a736c9c76adf6b9e98cf121d37c7f64e607b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc42a736c9c76adf6b9e98cf121d37c7f64e607b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc42a736c9c76adf6b9e98cf121d37c7f64e607b"}], "stats": {"total": 16, "additions": 15, "deletions": 1}, "files": [{"sha": "9dc6b58a0adf49a95df5055711abb75e9a112ca8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/222aafd7b63a3d79a80c55efefae7b52953be5b4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/222aafd7b63a3d79a80c55efefae7b52953be5b4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=222aafd7b63a3d79a80c55efefae7b52953be5b4", "patch": "@@ -1,3 +1,9 @@\n+2017-02-20  Matthew Fortune  <matthew.fortune@imgtec.com>\n+\n+\tPR target/78660\n+\t* lra-constraints.c (curr_insn_transform): Handle\n+\tWORD_REGISTER_OPERATIONS requirements when reloading SUBREGs.\n+\n 2017-02-19  Uros Bizjak  <ubizjak@gmail.com>\n \n \tRevert:"}, {"sha": "62947e36c97f079be384e21d7f5258a0a3cf778a", "filename": "gcc/lra-constraints.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/222aafd7b63a3d79a80c55efefae7b52953be5b4/gcc%2Flra-constraints.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/222aafd7b63a3d79a80c55efefae7b52953be5b4/gcc%2Flra-constraints.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-constraints.c?ref=222aafd7b63a3d79a80c55efefae7b52953be5b4", "patch": "@@ -4130,7 +4130,15 @@ curr_insn_transform (bool check_only_p)\n \t\t\t  && (goal_alt[i] == NO_REGS\n \t\t\t      || (simplify_subreg_regno\n \t\t\t\t  (ira_class_hard_regs[goal_alt[i]][0],\n-\t\t\t\t   GET_MODE (reg), byte, mode) >= 0)))))\n+\t\t\t\t   GET_MODE (reg), byte, mode) >= 0)))\n+\t\t      /* WORD_REGISTER_OPERATIONS targets require the register\n+\t\t\t to be reloaded when the outer mode is strictly\n+\t\t\t narrower than the inner mode.  Note: It may be\n+\t\t\t necessary to always reload the inner mode here but it\n+\t\t\t requires further investigation.  */\n+\t\t      || (GET_MODE_PRECISION (mode)\n+\t\t\t  < GET_MODE_PRECISION (GET_MODE (reg))\n+\t\t\t  && WORD_REGISTER_OPERATIONS)))\n \t\t{\n \t\t  if (type == OP_OUT)\n \t\t    type = OP_INOUT;"}]}