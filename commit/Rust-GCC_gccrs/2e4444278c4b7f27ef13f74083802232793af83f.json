{"sha": "2e4444278c4b7f27ef13f74083802232793af83f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmU0NDQ0Mjc4YzRiN2YyN2VmMTNmNzQwODM4MDIyMzI3OTNhZjgzZg==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2006-07-04T01:36:31Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2006-07-04T01:36:31Z"}, "message": "re PR libfortran/27704 (Incorrect runtime error on multiple OPEN)\n\n2006-07-03  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n\n\tPR libgfortran/27704\n\t* runtime/error.c (notify_std): Pass common flags into function. Use\n\tflags to show locus of error or warning.\n\t* libgfortran.h: Add enum try.  Add prototype for notify_std.\n\t* io/open.c (edit_modes): Allow status=\"old\" and add extension to\n\tallow status=\"scratch\"\n\t*io/list_read.c (nml_read_obj): Update call to notify_std.\n\t*io/io.h: Remove enum try and prototype for notify_std.\n\t*io/transfer.c (read_sf): Update call to notify_std.\n\t*io/format.c (parse_format_list): Update call to notify_std.\n\nFrom-SVN: r115168", "tree": {"sha": "f2a85db2fbef8080a2e4fd3757e25014aaf79285", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f2a85db2fbef8080a2e4fd3757e25014aaf79285"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2e4444278c4b7f27ef13f74083802232793af83f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e4444278c4b7f27ef13f74083802232793af83f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e4444278c4b7f27ef13f74083802232793af83f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e4444278c4b7f27ef13f74083802232793af83f/comments", "author": null, "committer": null, "parents": [{"sha": "2b17a9af81648eccd08400753a0ad4c74af2e279", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b17a9af81648eccd08400753a0ad4c74af2e279", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b17a9af81648eccd08400753a0ad4c74af2e279"}], "stats": {"total": 58, "additions": 42, "deletions": 16}, "files": [{"sha": "66997a8071b4f40ab4ca620757892343c30de7b8", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e4444278c4b7f27ef13f74083802232793af83f/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e4444278c4b7f27ef13f74083802232793af83f/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=2e4444278c4b7f27ef13f74083802232793af83f", "patch": "@@ -1,3 +1,16 @@\n+2006-07-03  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libgfortran/27704\n+\t* runtime/error.c (notify_std): Pass common flags into function. Use\n+\tflags to show locus of error or warning.\n+\t* libgfortran.h: Add enum try.  Add prototype for notify_std.\n+\t* io/open.c (edit_modes): Allow status=\"old\" and add extension to\n+\tallow status=\"scratch\"\n+\t*io/list_read.c (nml_read_obj): Update call to notify_std.\n+\t*io/io.h: Remove enum try and prototype for notify_std.\n+\t*io/transfer.c (read_sf): Update call to notify_std.\n+\t*io/format.c (parse_format_list): Update call to notify_std.\n+\n 2006-06-25  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n \n \t* io/io.h: Move proto for unit_to_fd..."}, {"sha": "aa6c68bbf2581dc63ca7a7a2cda921224aa0a211", "filename": "libgfortran/io/format.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e4444278c4b7f27ef13f74083802232793af83f/libgfortran%2Fio%2Fformat.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e4444278c4b7f27ef13f74083802232793af83f/libgfortran%2Fio%2Fformat.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fformat.c?ref=2e4444278c4b7f27ef13f74083802232793af83f", "patch": "@@ -575,7 +575,7 @@ parse_format_list (st_parameter_dt *dtp)\n     case FMT_DOLLAR:\n       get_fnode (fmt, &head, &tail, FMT_DOLLAR);\n       tail->repeat = 1;\n-      notify_std (GFC_STD_GNU, \"Extension: $ descriptor\");\n+      notify_std (&dtp->common, GFC_STD_GNU, \"Extension: $ descriptor\");\n       goto between_desc;\n \n     case FMT_T:\n@@ -671,7 +671,7 @@ parse_format_list (st_parameter_dt *dtp)\n \t    {\n \t      fmt->saved_token = t;\n \t      fmt->value = 1;\t/* Default width */\n-\t      notify_std(GFC_STD_GNU, posint_required);\n+\t      notify_std (&dtp->common, GFC_STD_GNU, posint_required);\n \t    }\n \t}\n "}, {"sha": "822930e776a4778e2503b36bac388cf20dabbf84", "filename": "libgfortran/io/io.h", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e4444278c4b7f27ef13f74083802232793af83f/libgfortran%2Fio%2Fio.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e4444278c4b7f27ef13f74083802232793af83f/libgfortran%2Fio%2Fio.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fio.h?ref=2e4444278c4b7f27ef13f74083802232793af83f", "patch": "@@ -46,10 +46,6 @@ typedef enum\n bt;\n \n \n-typedef enum\n-{ SUCCESS = 1, FAILURE }\n-try;\n-\n struct st_parameter_dt;\n \n typedef struct stream\n@@ -865,9 +861,6 @@ extern void list_formatted_write (st_parameter_dt *, bt, void *, int, size_t,\n internal_proto(list_formatted_write);\n \n /* error.c */\n-extern try notify_std (int, const char *);\n-internal_proto(notify_std);\n-\n extern notification notification_std(int);\n internal_proto(notification_std);\n "}, {"sha": "0dcb3dba688840e472c4922dda2935b67f8e25db", "filename": "libgfortran/io/list_read.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e4444278c4b7f27ef13f74083802232793af83f/libgfortran%2Fio%2Flist_read.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e4444278c4b7f27ef13f74083802232793af83f/libgfortran%2Fio%2Flist_read.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Flist_read.c?ref=2e4444278c4b7f27ef13f74083802232793af83f", "patch": "@@ -2214,7 +2214,7 @@ nml_read_obj (st_parameter_dt *dtp, namelist_info * nl, index_type offset,\n \t and set the flag to zero to prevent further warnings.  */\n       if (dtp->u.p.expanded_read == 2)\n \t{\n-\t  notify_std (GFC_STD_GNU, \"Non-standard expanded namelist read.\");\n+\t  notify_std (&dtp->common, GFC_STD_GNU, \"Non-standard expanded namelist read.\");\n \t  dtp->u.p.expanded_read = 0;\n \t}\n "}, {"sha": "3515bef75cef84e3ea40b912056204141c7917d1", "filename": "libgfortran/io/open.c", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e4444278c4b7f27ef13f74083802232793af83f/libgfortran%2Fio%2Fopen.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e4444278c4b7f27ef13f74083802232793af83f/libgfortran%2Fio%2Fopen.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fopen.c?ref=2e4444278c4b7f27ef13f74083802232793af83f", "patch": "@@ -128,7 +128,7 @@ edit_modes (st_parameter_open *opp, gfc_unit * u, unit_flags * flags)\n {\n   /* Complain about attempts to change the unchangeable.  */\n \n-  if (flags->status != STATUS_UNSPECIFIED &&\n+  if (flags->status != STATUS_UNSPECIFIED && flags->status != STATUS_OLD && \n       u->flags.status != flags->status)\n     generate_error (&opp->common, ERROR_BAD_OPTION,\n \t\t    \"Cannot change STATUS parameter in OPEN statement\");\n@@ -154,8 +154,14 @@ edit_modes (st_parameter_open *opp, gfc_unit * u, unit_flags * flags)\n \n   if (flags->status != STATUS_UNSPECIFIED && flags->status != STATUS_OLD &&\n       flags->status != STATUS_UNKNOWN)\n-    generate_error (&opp->common, ERROR_BAD_OPTION,\n+    {\n+      if (flags->status == STATUS_SCRATCH)\n+\tnotify_std (&opp->common, GFC_STD_GNU,\n+\t\t    \"OPEN statement must have a STATUS of OLD or UNKNOWN\");\n+      else\n+\tgenerate_error (&opp->common, ERROR_BAD_OPTION,\n \t\t    \"OPEN statement must have a STATUS of OLD or UNKNOWN\");\n+    }\n \n   if (u->flags.form == FORM_UNFORMATTED)\n     {\n@@ -615,7 +621,7 @@ st_open (st_parameter_open *opp)\n \t\t\t\"Conflicting ACCESS and POSITION flags in\"\n \t\t\t\" OPEN statement\");\n \n-      notify_std (GFC_STD_GNU,\n+      notify_std (&opp->common, GFC_STD_GNU,\n \t\t  \"Extension: APPEND as a value for ACCESS in OPEN statement\");\n       flags.access = ACCESS_SEQUENTIAL;\n       flags.position = POSITION_APPEND;"}, {"sha": "9b91536d0775bffb91a0b61615da208d7a3a7e1c", "filename": "libgfortran/io/transfer.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e4444278c4b7f27ef13f74083802232793af83f/libgfortran%2Fio%2Ftransfer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e4444278c4b7f27ef13f74083802232793af83f/libgfortran%2Fio%2Ftransfer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Ftransfer.c?ref=2e4444278c4b7f27ef13f74083802232793af83f", "patch": "@@ -220,7 +220,8 @@ read_sf (st_parameter_dt *dtp, int *length, int no_error)\n       if (*q == ',')\n \tif (dtp->u.p.sf_read_comma == 1)\n \t  {\n-\t    notify_std (GFC_STD_GNU, \"Comma in formatted numeric read.\");\n+\t    notify_std (&dtp->common, GFC_STD_GNU,\n+\t\t\t\"Comma in formatted numeric read.\");\n \t    *length = n;\n \t    break;\n \t  }"}, {"sha": "5dd2a51e1e0cc2cdd7451b528d35c8571bd56b76", "filename": "libgfortran/libgfortran.h", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e4444278c4b7f27ef13f74083802232793af83f/libgfortran%2Flibgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e4444278c4b7f27ef13f74083802232793af83f/libgfortran%2Flibgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Flibgfortran.h?ref=2e4444278c4b7f27ef13f74083802232793af83f", "patch": "@@ -414,6 +414,11 @@ typedef enum\n { SILENT, WARNING, ERROR }\n notification;\n \n+/* This is returned by notify_std and several io functions.  */\n+typedef enum\n+{ SUCCESS = 1, FAILURE }\n+try;\n+\n /* The filename and line number don't go inside the globals structure.\n    They are set by the rest of the program and must be linked to.  */\n \n@@ -492,6 +497,9 @@ internal_proto(translate_error);\n extern void generate_error (struct st_parameter_common *, int, const char *);\n internal_proto(generate_error);\n \n+extern try notify_std (struct st_parameter_common *, int, const char *);\n+internal_proto(notify_std);\n+\n /* fpu.c */\n \n extern void set_fpu (void);"}, {"sha": "9960733f16a0b0357aaf8bb04c94b33a3f5d2d93", "filename": "libgfortran/runtime/error.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e4444278c4b7f27ef13f74083802232793af83f/libgfortran%2Fruntime%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e4444278c4b7f27ef13f74083802232793af83f/libgfortran%2Fruntime%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fruntime%2Ferror.c?ref=2e4444278c4b7f27ef13f74083802232793af83f", "patch": "@@ -527,7 +527,7 @@ notification_std (int std)\n    standard does not contain the requested bits.  */\n \n try\n-notify_std (int std, const char * message)\n+notify_std (st_parameter_common *cmp, int std, const char * message)\n {\n   int warning;\n \n@@ -540,10 +540,15 @@ notify_std (int std, const char * message)\n \n   if (!warning)\n     {\n+      recursion_check ();\n+      show_locus (cmp);\n       st_printf (\"Fortran runtime error: %s\\n\", message);\n       sys_exit (2);\n     }\n   else\n-    st_printf (\"Fortran runtime warning: %s\\n\", message);\n+    {\n+      show_locus (cmp);\n+      st_printf (\"Fortran runtime warning: %s\\n\", message);\n+    }\n   return FAILURE;\n }"}]}