{"sha": "35a114dae14de7db983aba7e709dcad96405c14a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzVhMTE0ZGFlMTRkZTdkYjk4M2FiYTdlNzA5ZGNhZDk2NDA1YzE0YQ==", "commit": {"author": {"name": "Mark Eggleston", "email": "mark.eggleston@codethink.com", "date": "2019-08-23T13:03:26Z"}, "committer": {"name": "Mark Eggleston", "email": "markeggleston@gcc.gnu.org", "date": "2019-08-23T13:03:26Z"}, "message": "PDF Layout\n\nPrevent lines overlapping the right hand margin, this occurred for\nreferences in the \"See also:\" section, it is prevented by placing\nreferences on their own lines. Two example programs overlapped the\nright hand margin: fixed by adjusting the position and of the comments.\nSome tables had overlapping colums: the column widths were adjusted\naccordingly.\n\nFrom-SVN: r274857", "tree": {"sha": "99aa0cb87cc1dfef98677589157caac1ed1f316f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/99aa0cb87cc1dfef98677589157caac1ed1f316f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/35a114dae14de7db983aba7e709dcad96405c14a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35a114dae14de7db983aba7e709dcad96405c14a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35a114dae14de7db983aba7e709dcad96405c14a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35a114dae14de7db983aba7e709dcad96405c14a/comments", "author": {"login": "markeggleston", "id": 42180582, "node_id": "MDQ6VXNlcjQyMTgwNTgy", "avatar_url": "https://avatars.githubusercontent.com/u/42180582?v=4", "gravatar_id": "", "url": "https://api.github.com/users/markeggleston", "html_url": "https://github.com/markeggleston", "followers_url": "https://api.github.com/users/markeggleston/followers", "following_url": "https://api.github.com/users/markeggleston/following{/other_user}", "gists_url": "https://api.github.com/users/markeggleston/gists{/gist_id}", "starred_url": "https://api.github.com/users/markeggleston/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/markeggleston/subscriptions", "organizations_url": "https://api.github.com/users/markeggleston/orgs", "repos_url": "https://api.github.com/users/markeggleston/repos", "events_url": "https://api.github.com/users/markeggleston/events{/privacy}", "received_events_url": "https://api.github.com/users/markeggleston/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "22f8849d06019e925eb8669274a03daf02e71cc6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22f8849d06019e925eb8669274a03daf02e71cc6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22f8849d06019e925eb8669274a03daf02e71cc6"}], "stats": {"total": 777, "additions": 538, "deletions": 239}, "files": [{"sha": "4bd9291329f7a0e81a65640ce60cdd740d17dd65", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35a114dae14de7db983aba7e709dcad96405c14a/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35a114dae14de7db983aba7e709dcad96405c14a/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=35a114dae14de7db983aba7e709dcad96405c14a", "patch": "@@ -1,3 +1,11 @@\n+2019-08-23  Mark Eggleston  <mark.eggleston@codethink.com>\n+\n+\t* intrinsics.text: References in 'See also:' are now on\n+\tseparate lines to ensure that they always fit in the margins of\n+\ta PDF page.  The column widths of tables have been adjusted\n+\twhere necessary to prevent overlapping text.  All program\n+\texamples now fit within the margins of a PDF page.\n+\n 2019-08-23  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/91283"}, {"sha": "61f533ec4761e8175f3642577b62c608d72a6a87", "filename": "gcc/fortran/intrinsic.texi", "status": "modified", "additions": 530, "deletions": 239, "changes": 769, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35a114dae14de7db983aba7e709dcad96405c14a/gcc%2Ffortran%2Fintrinsic.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35a114dae14de7db983aba7e709dcad96405c14a/gcc%2Ffortran%2Fintrinsic.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fintrinsic.texi?ref=35a114dae14de7db983aba7e709dcad96405c14a", "patch": "@@ -403,8 +403,9 @@ end program test_abort\n @end smallexample\n \n @item @emph{See also}:\n-@ref{EXIT}, @ref{KILL}, @ref{BACKTRACE}\n-\n+@ref{EXIT}, @gol\n+@ref{KILL}, @gol\n+@ref{BACKTRACE}\n @end table\n \n \n@@ -578,8 +579,9 @@ See @ref{ICHAR} for a discussion of converting between numerical values\n and formatted string representations.\n \n @item @emph{See also}:\n-@ref{CHAR}, @ref{IACHAR}, @ref{ICHAR}\n-\n+@ref{CHAR}, @gol\n+@ref{IACHAR}, @gol\n+@ref{ICHAR}\n @end table\n \n \n@@ -631,9 +633,10 @@ end program test_acos\n @end multitable\n \n @item @emph{See also}:\n-Inverse function: @ref{COS}\n-Degrees function: @ref{ACOSD}\n-\n+Inverse function: @gol\n+@ref{COS} @gol\n+Degrees function: @gol\n+@ref{ACOSD}\n @end table\n \n \n@@ -689,9 +692,10 @@ end program test_acosd\n @end multitable\n \n @item @emph{See also}:\n-Inverse function: @ref{COSD}\n-Radians function: @ref{ACOS}\n-\n+Inverse function: @gol\n+@ref{COSD} @gol\n+Radians function: @gol\n+@ref{ACOS} @gol\n @end table\n \n \n@@ -743,7 +747,8 @@ END PROGRAM\n @end multitable\n \n @item @emph{See also}:\n-Inverse function: @ref{COSH}\n+Inverse function: @gol\n+@ref{COSH}\n @end table\n \n \n@@ -788,7 +793,8 @@ end program test_adjustl\n @end smallexample\n \n @item @emph{See also}:\n-@ref{ADJUSTR}, @ref{TRIM}\n+@ref{ADJUSTR}, @gol\n+@ref{TRIM}\n @end table\n \n \n@@ -833,7 +839,8 @@ end program test_adjustr\n @end smallexample\n \n @item @emph{See also}:\n-@ref{ADJUSTL}, @ref{TRIM}\n+@ref{ADJUSTL}, @gol\n+@ref{TRIM}\n @end table\n \n \n@@ -1170,7 +1177,8 @@ END PROGRAM\n @end smallexample\n \n @item @emph{See also}:\n-Fortran 95 elemental function: @ref{IAND}\n+Fortran 95 elemental function: @gol\n+@ref{IAND}\n @end table\n \n \n@@ -1345,9 +1353,10 @@ end program test_asin\n @end multitable\n \n @item @emph{See also}:\n-Inverse function: @ref{SIN}\n-Degrees function: @ref{ASIND}\n-\n+Inverse function: @gol\n+@ref{SIN} @gol\n+Degrees function: @gol\n+@ref{ASIND}\n @end table\n \n \n@@ -1403,9 +1412,10 @@ end program test_asind\n @end multitable\n \n @item @emph{See also}:\n-Inverse function: @ref{SIND}\n-Radians function: @ref{ASIN}\n-\n+Inverse function: @gol\n+@ref{SIND} @gol\n+Radians function: @gol\n+@ref{ASIN}\n @end table\n \n \n@@ -1457,7 +1467,8 @@ END PROGRAM\n @end multitable\n \n @item @emph{See also}:\n-Inverse function: @ref{SINH}\n+Inverse function: @gol\n+@ref{SINH}\n @end table\n \n \n@@ -1593,9 +1604,10 @@ end program test_atan\n @end multitable\n \n @item @emph{See also}:\n-Inverse function: @ref{TAN}\n-Degrees function: @ref{ATAND}\n-\n+Inverse function: @gol\n+@ref{TAN} @gol\n+Degrees function: @gol\n+@ref{ATAND}\n @end table\n \n \n@@ -1657,9 +1669,10 @@ end program test_atand\n @end multitable\n \n @item @emph{See also}:\n-Inverse function: @ref{TAND}\n-Radians function: @ref{ATAN}\n-\n+Inverse function: @gol\n+@ref{TAND} @gol\n+Radians function: @gol\n+@ref{ATAN}\n @end table\n \n \n@@ -1721,8 +1734,10 @@ end program test_atan2\n @end multitable\n \n @item @emph{See also}:\n-Alias: @ref{ATAN}\n-Degrees function: @ref{ATAN2D}\n+Alias: @gol\n+@ref{ATAN} @gol\n+Degrees function: @gol\n+@ref{ATAN2D}\n \n @end table\n \n@@ -1788,9 +1803,10 @@ end program test_atan2d\n @end multitable\n \n @item @emph{See also}:\n-Alias: @ref{ATAND}\n-Radians function: @ref{ATAN2}\n-\n+Alias: @gol\n+@ref{ATAND} @gol\n+Radians function: @gol\n+@ref{ATAN2}\n @end table\n \n \n@@ -1842,7 +1858,8 @@ END PROGRAM\n @end multitable\n \n @item @emph{See also}:\n-Inverse function: @ref{TANH}\n+Inverse function: @gol\n+@ref{TANH}\n @end table\n \n \n@@ -1890,8 +1907,12 @@ end program atomic\n @end smallexample\n \n @item @emph{See also}:\n-@ref{ATOMIC_DEFINE}, @ref{ATOMIC_FETCH_ADD}, @ref{ISO_FORTRAN_ENV},\n-@ref{ATOMIC_AND}, @ref{ATOMIC_OR}, @ref{ATOMIC_XOR}\n+@ref{ATOMIC_DEFINE}, @gol\n+@ref{ATOMIC_FETCH_ADD}, @gol\n+@ref{ISO_FORTRAN_ENV}, @gol\n+@ref{ATOMIC_AND}, @gol\n+@ref{ATOMIC_OR}, @gol\n+@ref{ATOMIC_XOR}\n @end table\n \n \n@@ -1940,8 +1961,12 @@ end program atomic\n @end smallexample\n \n @item @emph{See also}:\n-@ref{ATOMIC_DEFINE}, @ref{ATOMIC_FETCH_AND}, @ref{ISO_FORTRAN_ENV},\n-@ref{ATOMIC_ADD}, @ref{ATOMIC_OR}, @ref{ATOMIC_XOR}\n+@ref{ATOMIC_DEFINE}, @gol\n+@ref{ATOMIC_FETCH_AND}, @gol\n+@ref{ISO_FORTRAN_ENV}, @gol\n+@ref{ATOMIC_ADD}, @gol\n+@ref{ATOMIC_OR}, @gol\n+@ref{ATOMIC_XOR}\n @end table\n \n \n@@ -1995,7 +2020,9 @@ end program atomic\n @end smallexample\n \n @item @emph{See also}:\n-@ref{ATOMIC_DEFINE}, @ref{ATOMIC_REF}, @ref{ISO_FORTRAN_ENV}\n+@ref{ATOMIC_DEFINE}, @gol\n+@ref{ATOMIC_REF}, @gol\n+@ref{ISO_FORTRAN_ENV}\n @end table\n \n \n@@ -2045,8 +2072,13 @@ end program atomic\n @end smallexample\n \n @item @emph{See also}:\n-@ref{ATOMIC_REF}, @ref{ATOMIC_CAS}, @ref{ISO_FORTRAN_ENV},\n-@ref{ATOMIC_ADD}, @ref{ATOMIC_AND}, @ref{ATOMIC_OR}, @ref{ATOMIC_XOR}\n+@ref{ATOMIC_REF}, @gol\n+@ref{ATOMIC_CAS}, @gol\n+@ref{ISO_FORTRAN_ENV}, @gol\n+@ref{ATOMIC_ADD}, @gol\n+@ref{ATOMIC_AND}, @gol\n+@ref{ATOMIC_OR}, @gol\n+@ref{ATOMIC_XOR}\n @end table\n \n \n@@ -2098,8 +2130,12 @@ end program atomic\n @end smallexample\n \n @item @emph{See also}:\n-@ref{ATOMIC_DEFINE}, @ref{ATOMIC_ADD}, @ref{ISO_FORTRAN_ENV},\n-@ref{ATOMIC_FETCH_AND}, @ref{ATOMIC_FETCH_OR}, @ref{ATOMIC_FETCH_XOR}\n+@ref{ATOMIC_DEFINE}, @gol\n+@ref{ATOMIC_ADD}, @gol\n+@ref{ISO_FORTRAN_ENV}, @gol\n+@ref{ATOMIC_FETCH_AND}, @gol\n+@ref{ATOMIC_FETCH_OR}, @gol\n+@ref{ATOMIC_FETCH_XOR}\n @end table\n \n \n@@ -2149,8 +2185,12 @@ end program atomic\n @end smallexample\n \n @item @emph{See also}:\n-@ref{ATOMIC_DEFINE}, @ref{ATOMIC_AND}, @ref{ISO_FORTRAN_ENV},\n-@ref{ATOMIC_FETCH_ADD}, @ref{ATOMIC_FETCH_OR}, @ref{ATOMIC_FETCH_XOR}\n+@ref{ATOMIC_DEFINE}, @gol\n+@ref{ATOMIC_AND}, @gol\n+@ref{ISO_FORTRAN_ENV}, @gol\n+@ref{ATOMIC_FETCH_ADD}, @gol\n+@ref{ATOMIC_FETCH_OR}, @gol\n+@ref{ATOMIC_FETCH_XOR}\n @end table\n \n \n@@ -2200,8 +2240,12 @@ end program atomic\n @end smallexample\n \n @item @emph{See also}:\n-@ref{ATOMIC_DEFINE}, @ref{ATOMIC_OR}, @ref{ISO_FORTRAN_ENV},\n-@ref{ATOMIC_FETCH_ADD}, @ref{ATOMIC_FETCH_AND}, @ref{ATOMIC_FETCH_XOR}\n+@ref{ATOMIC_DEFINE}, @gol\n+@ref{ATOMIC_OR}, @gol\n+@ref{ISO_FORTRAN_ENV}, @gol\n+@ref{ATOMIC_FETCH_ADD}, @gol\n+@ref{ATOMIC_FETCH_AND}, @gol\n+@ref{ATOMIC_FETCH_XOR}\n @end table\n \n \n@@ -2251,8 +2295,12 @@ end program atomic\n @end smallexample\n \n @item @emph{See also}:\n-@ref{ATOMIC_DEFINE}, @ref{ATOMIC_XOR}, @ref{ISO_FORTRAN_ENV},\n-@ref{ATOMIC_FETCH_ADD}, @ref{ATOMIC_FETCH_AND}, @ref{ATOMIC_FETCH_OR}\n+@ref{ATOMIC_DEFINE}, @gol\n+@ref{ATOMIC_XOR}, @gol\n+@ref{ISO_FORTRAN_ENV}, @gol\n+@ref{ATOMIC_FETCH_ADD}, @gol\n+@ref{ATOMIC_FETCH_AND}, @gol\n+@ref{ATOMIC_FETCH_OR}\n @end table\n \n \n@@ -2300,8 +2348,12 @@ end program atomic\n @end smallexample\n \n @item @emph{See also}:\n-@ref{ATOMIC_DEFINE}, @ref{ATOMIC_FETCH_OR}, @ref{ISO_FORTRAN_ENV},\n-@ref{ATOMIC_ADD}, @ref{ATOMIC_OR}, @ref{ATOMIC_XOR}\n+@ref{ATOMIC_DEFINE}, @gol\n+@ref{ATOMIC_FETCH_OR}, @gol\n+@ref{ISO_FORTRAN_ENV}, @gol\n+@ref{ATOMIC_ADD}, @gol\n+@ref{ATOMIC_OR}, @gol\n+@ref{ATOMIC_XOR}\n @end table\n \n \n@@ -2357,8 +2409,12 @@ end program atomic\n @end smallexample\n \n @item @emph{See also}:\n-@ref{ATOMIC_DEFINE}, @ref{ATOMIC_CAS}, @ref{ISO_FORTRAN_ENV},\n-@ref{ATOMIC_FETCH_ADD}, @ref{ATOMIC_FETCH_AND}, @ref{ATOMIC_FETCH_OR},\n+@ref{ATOMIC_DEFINE}, @gol\n+@ref{ATOMIC_CAS}, @gol\n+@ref{ISO_FORTRAN_ENV}, @gol\n+@ref{ATOMIC_FETCH_ADD}, @gol\n+@ref{ATOMIC_FETCH_AND}, @gol\n+@ref{ATOMIC_FETCH_OR}, @gol\n @ref{ATOMIC_FETCH_XOR}\n @end table\n \n@@ -2406,8 +2462,12 @@ end program atomic\n @end smallexample\n \n @item @emph{See also}:\n-@ref{ATOMIC_DEFINE}, @ref{ATOMIC_FETCH_XOR}, @ref{ISO_FORTRAN_ENV},\n-@ref{ATOMIC_ADD}, @ref{ATOMIC_OR}, @ref{ATOMIC_XOR}\n+@ref{ATOMIC_DEFINE}, @gol\n+@ref{ATOMIC_FETCH_XOR}, @gol\n+@ref{ISO_FORTRAN_ENV}, @gol\n+@ref{ATOMIC_ADD}, @gol\n+@ref{ATOMIC_OR}, @gol\n+@ref{ATOMIC_XOR}\n @end table\n \n \n@@ -2794,7 +2854,9 @@ as @var{I}.\n The return value is of type @code{LOGICAL} and of the default kind.\n \n @item @emph{See also}:\n-@ref{BGT}, @ref{BLE}, @ref{BLT}\n+@ref{BGT}, @gol\n+@ref{BLE}, @gol\n+@ref{BLT}\n @end table\n \n \n@@ -2828,7 +2890,9 @@ as @var{I}.\n The return value is of type @code{LOGICAL} and of the default kind.\n \n @item @emph{See also}:\n-@ref{BGE}, @ref{BLE}, @ref{BLT}\n+@ref{BGE}, @gol\n+@ref{BLE}, @gol\n+@ref{BLT}\n @end table\n \n \n@@ -2905,7 +2969,9 @@ as @var{I}.\n The return value is of type @code{LOGICAL} and of the default kind.\n \n @item @emph{See also}:\n-@ref{BGT}, @ref{BGE}, @ref{BLT}\n+@ref{BGT}, @gol\n+@ref{BGE}, @gol\n+@ref{BLT}\n @end table\n \n \n@@ -2939,7 +3005,9 @@ as @var{I}.\n The return value is of type @code{LOGICAL} and of the default kind.\n \n @item @emph{See also}:\n-@ref{BGE}, @ref{BGT}, @ref{BLE}\n+@ref{BGE}, @gol\n+@ref{BGT}, @gol\n+@ref{BLE}\n @end table\n \n \n@@ -3044,7 +3112,8 @@ end subroutine association_test\n @end smallexample\n \n @item @emph{See also}:\n-@ref{C_LOC}, @ref{C_FUNLOC}\n+@ref{C_LOC}, @gol\n+@ref{C_FUNLOC}\n @end table\n \n \n@@ -3098,7 +3167,8 @@ end program main\n @end smallexample\n \n @item @emph{See also}:\n-@ref{C_LOC}, @ref{C_F_PROCPOINTER}\n+@ref{C_LOC}, @gol\n+@ref{C_F_PROCPOINTER}\n @end table\n \n \n@@ -3155,7 +3225,8 @@ end program main\n @end smallexample\n \n @item @emph{See also}:\n-@ref{C_LOC}, @ref{C_F_POINTER}\n+@ref{C_LOC}, @gol\n+@ref{C_F_POINTER}\n @end table\n \n \n@@ -3212,7 +3283,10 @@ end program main\n @end smallexample\n \n @item @emph{See also}:\n-@ref{C_ASSOCIATED}, @ref{C_LOC}, @ref{C_F_POINTER}, @ref{C_F_PROCPOINTER}\n+@ref{C_ASSOCIATED}, @gol\n+@ref{C_LOC}, @gol\n+@ref{C_F_POINTER}, @gol\n+@ref{C_F_PROCPOINTER}\n @end table\n \n \n@@ -3257,7 +3331,10 @@ end subroutine association_test\n @end smallexample\n \n @item @emph{See also}:\n-@ref{C_ASSOCIATED}, @ref{C_FUNLOC}, @ref{C_F_POINTER}, @ref{C_F_PROCPOINTER}\n+@ref{C_ASSOCIATED}, @gol\n+@ref{C_FUNLOC}, @gol\n+@ref{C_F_POINTER}, @gol\n+@ref{C_F_PROCPOINTER}\n @end table\n \n \n@@ -3307,7 +3384,8 @@ The example will print @code{.TRUE.} unless you are using a platform\n where default @code{REAL} variables are unusually padded.\n \n @item @emph{See also}:\n-@ref{SIZEOF}, @ref{STORAGE_SIZE}\n+@ref{SIZEOF}, @gol\n+@ref{STORAGE_SIZE}\n @end table\n \n \n@@ -3352,8 +3430,8 @@ end program test_ceiling\n @end smallexample\n \n @item @emph{See also}:\n-@ref{FLOOR}, @ref{NINT}\n-\n+@ref{FLOOR}, @gol\n+@ref{NINT}\n @end table\n \n \n@@ -3397,7 +3475,7 @@ end program test_char\n @end smallexample\n \n @item @emph{Specific names}:\n-@multitable @columnfractions .20 .20 .20 .25\n+@multitable @columnfractions .18 .18 .24 .25\n @item Name           @tab Argument         @tab Return type             @tab Standard\n @item @code{CHAR(I)} @tab @code{INTEGER I} @tab @code{CHARACTER(LEN=1)} @tab F77 and later\n @end multitable\n@@ -3407,7 +3485,9 @@ See @ref{ICHAR} for a discussion of converting between numerical values\n and formatted string representations.\n \n @item @emph{See also}:\n-@ref{ACHAR}, @ref{IACHAR}, @ref{ICHAR}\n+@ref{ACHAR}, @gol\n+@ref{IACHAR}, @gol\n+@ref{ICHAR}\n \n @end table\n \n@@ -3612,7 +3692,7 @@ Collective subroutine\n @code{CALL CO_BROADCAST(A, SOURCE_IMAGE [, STAT, ERRMSG])}\n \n @item @emph{Arguments}:\n-@multitable @columnfractions .15 .70\n+@multitable @columnfractions .20 .65\n @item @var{A}            @tab INTENT(INOUT) argument; shall have the same\n dynamic type and type paramters on all images of the current team. If it\n is an array, it shall have the same shape on all images.\n@@ -3636,7 +3716,10 @@ end program test\n @end smallexample\n \n @item @emph{See also}:\n-@ref{CO_MAX}, @ref{CO_MIN}, @ref{CO_SUM}, @ref{CO_REDUCE}\n+@ref{CO_MAX}, @gol\n+@ref{CO_MIN}, @gol\n+@ref{CO_SUM}, @gol\n+@ref{CO_REDUCE}\n @end table\n \n \n@@ -3667,7 +3750,7 @@ Collective subroutine\n @code{CALL CO_MAX(A [, RESULT_IMAGE, STAT, ERRMSG])}\n \n @item @emph{Arguments}:\n-@multitable @columnfractions .15 .70\n+@multitable @columnfractions .20 .65\n @item @var{A}            @tab shall be an integer, real or character variable,\n which has the same type and type parameters on all images of the team.\n @item @var{RESULT_IMAGE} @tab (optional) a scalar integer expression; if\n@@ -3690,7 +3773,10 @@ end program test\n @end smallexample\n \n @item @emph{See also}:\n-@ref{CO_MIN}, @ref{CO_SUM}, @ref{CO_REDUCE}, @ref{CO_BROADCAST}\n+@ref{CO_MIN}, @gol\n+@ref{CO_SUM}, @gol\n+@ref{CO_REDUCE}, @gol\n+@ref{CO_BROADCAST}\n @end table\n \n \n@@ -3721,7 +3807,7 @@ Collective subroutine\n @code{CALL CO_MIN(A [, RESULT_IMAGE, STAT, ERRMSG])}\n \n @item @emph{Arguments}:\n-@multitable @columnfractions .15 .70\n+@multitable @columnfractions .20 .65\n @item @var{A}            @tab shall be an integer, real or character variable,\n which has the same type and type parameters on all images of the team.\n @item @var{RESULT_IMAGE} @tab (optional) a scalar integer expression; if\n@@ -3744,7 +3830,10 @@ end program test\n @end smallexample\n \n @item @emph{See also}:\n-@ref{CO_MAX}, @ref{CO_SUM}, @ref{CO_REDUCE}, @ref{CO_BROADCAST}\n+@ref{CO_MAX}, @gol\n+@ref{CO_SUM}, @gol\n+@ref{CO_REDUCE}, @gol\n+@ref{CO_BROADCAST}\n @end table\n \n \n@@ -3779,7 +3868,7 @@ Collective subroutine\n @code{CALL CO_REDUCE(A, OPERATOR, [, RESULT_IMAGE, STAT, ERRMSG])}\n \n @item @emph{Arguments}:\n-@multitable @columnfractions .15 .70\n+@multitable @columnfractions .20 .65\n @item @var{A}            @tab is an @code{INTENT(INOUT)} argument and shall be\n nonpolymorphic. If it is allocatable, it shall be allocated; if it is a pointer,\n it shall be associated.  @var{A} shall have the same type and type parameters on\n@@ -3824,7 +3913,10 @@ function, which takes two arguments of the same type and returning that\n type as result.\n \n @item @emph{See also}:\n-@ref{CO_MIN}, @ref{CO_MAX}, @ref{CO_SUM}, @ref{CO_BROADCAST}\n+@ref{CO_MIN}, @gol\n+@ref{CO_MAX}, @gol\n+@ref{CO_SUM}, @gol\n+@ref{CO_BROADCAST}\n @end table\n \n \n@@ -3855,7 +3947,7 @@ Collective subroutine\n @code{CALL CO_MIN(A [, RESULT_IMAGE, STAT, ERRMSG])}\n \n @item @emph{Arguments}:\n-@multitable @columnfractions .15 .70\n+@multitable @columnfractions .20 .65\n @item @var{A}            @tab shall be an integer, real or complex variable,\n which has the same type and type parameters on all images of the team.\n @item @var{RESULT_IMAGE} @tab (optional) a scalar integer expression; if\n@@ -3872,13 +3964,17 @@ program test\n   val = this_image ()\n   call co_sum (val, result_image=1)\n   if (this_image() == 1) then\n-    write(*,*) \"The sum is \", val ! prints (n**2 + n)/2, with n = num_images()\n+    write(*,*) \"The sum is \", val ! prints (n**2 + n)/2,\n+                                  ! with n = num_images()\n   end if\n end program test\n @end smallexample\n \n @item @emph{See also}:\n-@ref{CO_MAX}, @ref{CO_MIN}, @ref{CO_REDUCE}, @ref{CO_BROADCAST}\n+@ref{CO_MAX}, @gol\n+@ref{CO_MIN}, @gol\n+@ref{CO_REDUCE}, @gol\n+@ref{CO_BROADCAST}\n @end table\n \n \n@@ -3922,7 +4018,8 @@ end program test_command_argument_count\n @end smallexample\n \n @item @emph{See also}:\n-@ref{GET_COMMAND}, @ref{GET_COMMAND_ARGUMENT}\n+@ref{GET_COMMAND}, @gol\n+@ref{GET_COMMAND_ARGUMENT}\n @end table\n \n \n@@ -3966,7 +4063,8 @@ the @code{COMPILER_OPTIONS} intrinsic.\n @end smallexample\n \n @item @emph{See also}:\n-@ref{COMPILER_VERSION}, @ref{ISO_FORTRAN_ENV}\n+@ref{COMPILER_VERSION}, @gol\n+@ref{ISO_FORTRAN_ENV}\n @end table\n \n \n@@ -4008,7 +4106,8 @@ It contains the name of the compiler and its version number.\n @end smallexample\n \n @item @emph{See also}:\n-@ref{COMPILER_OPTIONS}, @ref{ISO_FORTRAN_ENV}\n+@ref{COMPILER_OPTIONS}, @gol\n+@ref{ISO_FORTRAN_ENV}\n @end table\n \n \n@@ -4167,9 +4266,10 @@ end program test_cos\n @end multitable\n \n @item @emph{See also}:\n-Inverse function: @ref{ACOS}\n-Degrees function: @ref{COSD}\n-\n+Inverse function: @gol\n+@ref{ACOS} @gol\n+Degrees function: @gol\n+@ref{COSD}\n @end table\n \n \n@@ -4230,9 +4330,10 @@ end program test_cosd\n @end multitable\n \n @item @emph{See also}:\n-Inverse function: @ref{ACOSD}\n-Radians function: @ref{COS}\n-\n+Inverse function: @gol\n+@ref{ACOSD} @gol\n+Radians function: @gol\n+@ref{COS}\n @end table\n \n \n@@ -4285,8 +4386,8 @@ end program test_cosh\n @end multitable\n \n @item @emph{See also}:\n-Inverse function: @ref{ACOSH}\n-\n+Inverse function: @gol\n+@ref{ACOSH}\n @end table\n \n \n@@ -4339,8 +4440,10 @@ end program test_cotan\n @end multitable\n \n @item @emph{See also}:\n-Converse function: @ref{TAN}\n-Degrees function: @ref{COTAND}\n+Converse function: @gol\n+@ref{TAN} @gol\n+Degrees function: @gol\n+@ref{COTAND}\n @end table\n \n \n@@ -4393,9 +4496,10 @@ end program test_cotand\n @end multitable\n \n @item @emph{See also}:\n-Converse function: @ref{TAND}\n-Radians function: @ref{COTAN}\n-\n+Converse function: @gol\n+@ref{TAND} @gol\n+Radians function: @gol\n+@ref{COTAN}\n @end table\n \n \n@@ -4518,7 +4622,8 @@ end program test_cpu_time\n @end smallexample\n \n @item @emph{See also}:\n-@ref{SYSTEM_CLOCK}, @ref{DATE_AND_TIME}\n+@ref{SYSTEM_CLOCK}, @gol\n+@ref{DATE_AND_TIME}\n @end table\n \n \n@@ -4633,7 +4738,11 @@ end program test_ctime\n @end smallexample\n \n @item @emph{See Also}:\n-@ref{DATE_AND_TIME}, @ref{GMTIME}, @ref{LTIME}, @ref{TIME}, @ref{TIME8}\n+@ref{DATE_AND_TIME}, @gol\n+@ref{GMTIME}, @gol\n+@ref{LTIME}, @gol\n+@ref{TIME}, @gol\n+@ref{TIME8}\n @end table\n \n \n@@ -4709,7 +4818,8 @@ end program test_time_and_date\n @end smallexample\n \n @item @emph{See also}:\n-@ref{CPU_TIME}, @ref{SYSTEM_CLOCK}\n+@ref{CPU_TIME}, @gol\n+@ref{SYSTEM_CLOCK}\n @end table\n \n \n@@ -5707,7 +5817,8 @@ end program test_exit\n @end smallexample\n \n @item @emph{See also}:\n-@ref{ABORT}, @ref{KILL}\n+@ref{ABORT}, @gol\n+@ref{KILL}\n @end table\n \n \n@@ -5899,7 +6010,8 @@ end program test_fdate\n @end smallexample\n \n @item @emph{See also}:\n-@ref{DATE_AND_TIME}, @ref{CTIME}\n+@ref{DATE_AND_TIME}, @gol\n+@ref{CTIME}\n @end table\n \n \n@@ -5963,7 +6075,9 @@ END PROGRAM\n @end smallexample\n \n @item @emph{See also}:\n-@ref{FGETC}, @ref{FPUT}, @ref{FPUTC}\n+@ref{FGETC}, @gol\n+@ref{FPUT}, @gol\n+@ref{FPUTC}\n @end table\n \n \n@@ -6028,7 +6142,9 @@ END PROGRAM\n @end smallexample\n \n @item @emph{See also}:\n-@ref{FGET}, @ref{FPUT}, @ref{FPUTC}\n+@ref{FGET}, @gol\n+@ref{FPUT}, @gol\n+@ref{FPUTC}\n @end table\n \n @node FINDLOC\n@@ -6089,7 +6205,8 @@ is present, the result is an integer of kind @var{KIND}, otherwise it\n is of default kind.\n \n @item @emph{See also}:\n-@ref{MAXLOC}, @ref{MINLOC}\n+@ref{MAXLOC}, @gol\n+@ref{MINLOC}\n \n @end table\n \n@@ -6134,8 +6251,8 @@ end program test_floor\n @end smallexample\n \n @item @emph{See also}:\n-@ref{CEILING}, @ref{NINT}\n-\n+@ref{CEILING}, @gol\n+@ref{NINT}\n @end table\n \n \n@@ -6305,7 +6422,9 @@ END PROGRAM\n @end smallexample\n \n @item @emph{See also}:\n-@ref{FPUTC}, @ref{FGET}, @ref{FGETC}\n+@ref{FPUTC}, @gol\n+@ref{FGET}, @gol\n+@ref{FGETC}\n @end table\n \n \n@@ -6368,7 +6487,9 @@ END PROGRAM\n @end smallexample\n \n @item @emph{See also}:\n-@ref{FPUT}, @ref{FGET}, @ref{FGETC}\n+@ref{FPUT}, @gol\n+@ref{FGET}, @gol\n+@ref{FGETC}\n @end table\n \n \n@@ -6576,7 +6697,10 @@ on success and a system specific error code otherwise.\n See @ref{STAT} for an example.\n \n @item @emph{See also}:\n-To stat a link: @ref{LSTAT}, to stat a file: @ref{STAT}\n+To stat a link: @gol\n+@ref{LSTAT} @gol\n+To stat a file: @gol\n+@ref{STAT}\n @end table\n \n \n@@ -6684,8 +6808,8 @@ end program test_gamma\n @end multitable\n \n @item @emph{See also}:\n-Logarithm of the Gamma function: @ref{LOG_GAMMA}\n-\n+Logarithm of the Gamma function: @gol\n+@ref{LOG_GAMMA}\n @end table\n \n \n@@ -6724,7 +6848,8 @@ END PROGRAM\n @end smallexample\n \n @item @emph{See also}:\n-@ref{IERRNO}, @ref{PERROR}\n+@ref{IERRNO}, @gol\n+@ref{PERROR}\n @end table\n \n \n@@ -6785,10 +6910,12 @@ END PROGRAM\n @end smallexample\n \n @item @emph{See also}:\n-GNU Fortran 77 compatibility function: @ref{IARGC}\n-\n-Fortran 2003 functions and subroutines: @ref{GET_COMMAND},\n-@ref{GET_COMMAND_ARGUMENT}, @ref{COMMAND_ARGUMENT_COUNT}\n+GNU Fortran 77 compatibility function: @gol\n+@ref{IARGC} @gol\n+Fortran 2003 functions and subroutines: @gol\n+@ref{GET_COMMAND}, @gol\n+@ref{GET_COMMAND_ARGUMENT}, @gol\n+@ref{COMMAND_ARGUMENT_COUNT}\n @end table\n \n \n@@ -6839,7 +6966,8 @@ END PROGRAM\n @end smallexample\n \n @item @emph{See also}:\n-@ref{GET_COMMAND_ARGUMENT}, @ref{COMMAND_ARGUMENT_COUNT}\n+@ref{GET_COMMAND_ARGUMENT}, @gol\n+@ref{COMMAND_ARGUMENT_COUNT}\n @end table\n \n \n@@ -6906,7 +7034,8 @@ END PROGRAM\n @end smallexample\n \n @item @emph{See also}:\n-@ref{GET_COMMAND}, @ref{COMMAND_ARGUMENT_COUNT}\n+@ref{GET_COMMAND}, @gol\n+@ref{COMMAND_ARGUMENT_COUNT}\n @end table\n \n \n@@ -7099,7 +7228,8 @@ kind.\n See @code{GETPID} for an example.\n \n @item @emph{See also}:\n-@ref{GETPID}, @ref{GETUID}\n+@ref{GETPID}, @gol\n+@ref{GETUID}\n @end table\n \n \n@@ -7183,7 +7313,8 @@ end program info\n @end smallexample\n \n @item @emph{See also}:\n-@ref{GETGID}, @ref{GETUID}\n+@ref{GETGID}, @gol\n+@ref{GETUID}\n @end table\n \n \n@@ -7216,7 +7347,8 @@ kind.\n See @code{GETPID} for an example.\n \n @item @emph{See also}:\n-@ref{GETPID}, @ref{GETLOG}\n+@ref{GETPID}, @gol\n+@ref{GETLOG}\n @end table\n \n \n@@ -7272,8 +7404,11 @@ effect, zero if not, and negative if the information is not available.\n @end enumerate\n \n @item @emph{See also}:\n-@ref{DATE_AND_TIME}, @ref{CTIME}, @ref{LTIME}, @ref{TIME}, @ref{TIME8}\n-\n+@ref{DATE_AND_TIME}, @gol\n+@ref{CTIME}, @gol\n+@ref{LTIME}, @gol\n+@ref{TIME}, @gol\n+@ref{TIME8}\n @end table\n \n \n@@ -7441,8 +7576,9 @@ See @ref{ICHAR} for a discussion of converting between numerical values\n and formatted string representations.\n \n @item @emph{See also}:\n-@ref{ACHAR}, @ref{CHAR}, @ref{ICHAR}\n-\n+@ref{ACHAR}, @gol\n+@ref{CHAR}, @gol\n+@ref{ICHAR}\n @end table\n \n \n@@ -7502,7 +7638,9 @@ END PROGRAM\n @end smallexample\n \n @item @emph{See also}:\n-@ref{IANY}, @ref{IPARITY}, @ref{IAND}\n+@ref{IANY}, @gol\n+@ref{IPARITY}, @gol\n+@ref{IAND}\n @end table\n \n \n@@ -7564,8 +7702,12 @@ END PROGRAM\n @end multitable\n \n @item @emph{See also}:\n-@ref{IOR}, @ref{IEOR}, @ref{IBITS}, @ref{IBSET}, @ref{IBCLR}, @ref{NOT}\n-\n+@ref{IOR}, @gol\n+@ref{IEOR}, @gol\n+@ref{IBITS}, @gol\n+@ref{IBSET}, @gol\n+@ref{IBCLR}, @gol\n+@ref{NOT}\n @end table\n \n \n@@ -7625,7 +7767,9 @@ END PROGRAM\n @end smallexample\n \n @item @emph{See also}:\n-@ref{IPARITY}, @ref{IALL}, @ref{IOR}\n+@ref{IPARITY}, @gol\n+@ref{IALL}, @gol\n+@ref{IOR}\n @end table\n \n \n@@ -7666,10 +7810,12 @@ The number of command line arguments, type @code{INTEGER(4)}.\n See @ref{GETARG}\n \n @item @emph{See also}:\n-GNU Fortran 77 compatibility subroutine: @ref{GETARG}\n-\n-Fortran 2003 functions and subroutines: @ref{GET_COMMAND},\n-@ref{GET_COMMAND_ARGUMENT}, @ref{COMMAND_ARGUMENT_COUNT}\n+GNU Fortran 77 compatibility subroutine: @gol\n+@ref{GETARG} @gol\n+Fortran 2003 functions and subroutines: @gol\n+@ref{GET_COMMAND}, @gol\n+@ref{GET_COMMAND_ARGUMENT}, @gol\n+@ref{COMMAND_ARGUMENT_COUNT}\n @end table\n \n \n@@ -7719,8 +7865,12 @@ The return value is of type @code{INTEGER} and of the same kind as\n @end multitable\n \n @item @emph{See also}:\n-@ref{IBITS}, @ref{IBSET}, @ref{IAND}, @ref{IOR}, @ref{IEOR}, @ref{MVBITS}\n-\n+@ref{IBITS}, @gol\n+@ref{IBSET}, @gol\n+@ref{IAND}, @gol\n+@ref{IOR}, @gol\n+@ref{IEOR}, @gol\n+@ref{MVBITS}\n @end table\n \n \n@@ -7774,7 +7924,12 @@ The return value is of type @code{INTEGER} and of the same kind as\n @end multitable\n \n @item @emph{See also}:\n-@ref{BIT_SIZE}, @ref{IBCLR}, @ref{IBSET}, @ref{IAND}, @ref{IOR}, @ref{IEOR}\n+@ref{BIT_SIZE}, @gol\n+@ref{IBCLR}, @gol\n+@ref{IBSET}, @gol\n+@ref{IAND}, @gol\n+@ref{IOR}, @gol\n+@ref{IEOR}\n @end table\n \n \n@@ -7823,8 +7978,12 @@ The return value is of type @code{INTEGER} and of the same kind as\n @end multitable\n \n @item @emph{See also}:\n-@ref{IBCLR}, @ref{IBITS}, @ref{IAND}, @ref{IOR}, @ref{IEOR}, @ref{MVBITS}\n-\n+@ref{IBCLR}, @gol\n+@ref{IBITS}, @gol\n+@ref{IAND}, @gol\n+@ref{IOR}, @gol\n+@ref{IEOR}, @gol\n+@ref{MVBITS}\n @end table\n \n \n@@ -7899,8 +8058,9 @@ end program read_val\n @end smallexample\n \n @item @emph{See also}:\n-@ref{ACHAR}, @ref{CHAR}, @ref{IACHAR}\n-\n+@ref{ACHAR}, @gol\n+@ref{CHAR}, @gol\n+@ref{IACHAR}\n @end table\n \n \n@@ -8006,7 +8166,12 @@ type parameter of the other argument as-if a call to @ref{INT} occurred.\n @end multitable\n \n @item @emph{See also}:\n-@ref{IOR}, @ref{IAND}, @ref{IBITS}, @ref{IBSET}, @ref{IBCLR}, @ref{NOT}\n+@ref{IOR}, @gol\n+@ref{IAND}, @gol\n+@ref{IBITS}, @gol\n+@ref{IBSET}, @gol\n+@ref{IBCLR}, @gol\n+@ref{NOT}\n @end table\n \n \n@@ -8082,7 +8247,8 @@ WRITE (*,*) IMAGE_INDEX (array, [2,0,3,1])\n @end smallexample\n \n @item @emph{See also}:\n-@ref{THIS_IMAGE}, @ref{NUM_IMAGES}\n+@ref{THIS_IMAGE}, @gol\n+@ref{NUM_IMAGES}\n @end table\n \n \n@@ -8133,7 +8299,8 @@ The return value is of type @code{INTEGER} and of kind @var{KIND}. If\n @end multitable\n \n @item @emph{See also}:\n-@ref{SCAN}, @ref{VERIFY}\n+@ref{SCAN}, @gol\n+@ref{VERIFY}\n @end table\n \n \n@@ -8236,7 +8403,9 @@ Elemental function\n The return value is a @code{INTEGER(2)} variable.\n \n @item @emph{See also}:\n-@ref{INT}, @ref{INT8}, @ref{LONG}\n+@ref{INT}, @gol\n+@ref{INT8}, @gol\n+@ref{LONG}\n @end table\n \n \n@@ -8271,7 +8440,9 @@ Elemental function\n The return value is a @code{INTEGER(8)} variable.\n \n @item @emph{See also}:\n-@ref{INT}, @ref{INT2}, @ref{LONG}\n+@ref{INT}, @gol\n+@ref{INT2}, @gol\n+@ref{LONG}\n @end table\n \n \n@@ -8325,7 +8496,12 @@ type parameter of the other argument as-if a call to @ref{INT} occurred.\n @end multitable\n \n @item @emph{See also}:\n-@ref{IEOR}, @ref{IAND}, @ref{IBITS}, @ref{IBSET}, @ref{IBCLR}, @ref{NOT}\n+@ref{IEOR}, @gol\n+@ref{IAND}, @gol\n+@ref{IBITS}, @gol\n+@ref{IBSET}, @gol\n+@ref{IBCLR}, @gol\n+@ref{NOT}\n @end table\n \n \n@@ -8386,7 +8562,10 @@ END PROGRAM\n @end smallexample\n \n @item @emph{See also}:\n-@ref{IANY}, @ref{IALL}, @ref{IEOR}, @ref{PARITY}\n+@ref{IANY}, @gol\n+@ref{IALL}, @gol\n+@ref{IEOR}, @gol\n+@ref{PARITY}\n @end table\n \n \n@@ -8866,7 +9045,8 @@ Returns 0 on success; otherwise a system-specific error code is returned.\n @end multitable\n \n @item @emph{See also}:\n-@ref{ABORT}, @ref{EXIT}\n+@ref{ABORT}, @gol\n+@ref{EXIT}\n @end table\n \n \n@@ -8950,7 +9130,8 @@ structure component, or if it has a zero extent along the relevant\n dimension, the lower bound is taken to be 1.\n \n @item @emph{See also}:\n-@ref{UBOUND}, @ref{LCOBOUND}\n+@ref{UBOUND}, @gol\n+@ref{LCOBOUND}\n @end table\n \n \n@@ -8989,7 +9170,8 @@ If @var{DIM} is absent, the result is an array of the lower cobounds of\n corresponding to the lower cobound of the array along that codimension.\n \n @item @emph{See also}:\n-@ref{UCOBOUND}, @ref{LBOUND}\n+@ref{UCOBOUND}, @gol\n+@ref{LBOUND}\n @end table\n \n \n@@ -9030,7 +9212,10 @@ END PROGRAM\n @end smallexample\n \n @item @emph{See also}:\n-@ref{BIT_SIZE}, @ref{TRAILZ}, @ref{POPCNT}, @ref{POPPAR}\n+@ref{BIT_SIZE}, @gol\n+@ref{TRAILZ}, @gol\n+@ref{POPCNT}, @gol\n+@ref{POPPAR}\n @end table\n \n \n@@ -9077,7 +9262,9 @@ The return value is of type @code{INTEGER} and of kind @var{KIND}. If\n \n \n @item @emph{See also}:\n-@ref{LEN_TRIM}, @ref{ADJUSTL}, @ref{ADJUSTR}\n+@ref{LEN_TRIM}, @gol\n+@ref{ADJUSTL}, @gol\n+@ref{ADJUSTR}\n @end table\n \n \n@@ -9113,7 +9300,9 @@ The return value is of type @code{INTEGER} and of kind @var{KIND}. If\n @var{KIND} is absent, the return value is of default integer kind.\n \n @item @emph{See also}:\n-@ref{LEN}, @ref{ADJUSTL}, @ref{ADJUSTR}\n+@ref{LEN}, @gol\n+@ref{ADJUSTL}, @gol\n+@ref{ADJUSTR}\n @end table\n \n \n@@ -9165,7 +9354,9 @@ otherwise, based on the ASCII ordering.\n @end multitable\n \n @item @emph{See also}:\n-@ref{LGT}, @ref{LLE}, @ref{LLT}\n+@ref{LGT}, @gol\n+@ref{LLE}, @gol\n+@ref{LLT}\n @end table\n \n \n@@ -9217,7 +9408,9 @@ otherwise, based on the ASCII ordering.\n @end multitable\n \n @item @emph{See also}:\n-@ref{LGE}, @ref{LLE}, @ref{LLT}\n+@ref{LGE}, @gol\n+@ref{LLE}, @gol\n+@ref{LLT}\n @end table\n \n \n@@ -9260,7 +9453,8 @@ Subroutine, function\n @end multitable\n \n @item @emph{See also}:\n-@ref{SYMLNK}, @ref{UNLINK}\n+@ref{SYMLNK}, @gol\n+@ref{UNLINK}\n @end table\n \n \n@@ -9312,7 +9506,9 @@ otherwise, based on the ASCII ordering.\n @end multitable\n \n @item @emph{See also}:\n-@ref{LGE}, @ref{LGT}, @ref{LLT}\n+@ref{LGE}, @gol\n+@ref{LGT}, @gol\n+@ref{LLT}\n @end table\n \n \n@@ -9364,7 +9560,9 @@ otherwise, based on the ASCII ordering.\n @end multitable\n \n @item @emph{See also}:\n-@ref{LGE}, @ref{LGT}, @ref{LLE}\n+@ref{LGE}, @gol\n+@ref{LGT}, @gol\n+@ref{LLE}\n @end table\n \n \n@@ -9399,7 +9597,8 @@ with @code{INTENT(IN)}\n The return value is of @code{INTEGER(kind=4)} type.\n \n @item @emph{See also}:\n-@ref{INDEX intrinsic}, @ref{LEN_TRIM}\n+@ref{INDEX intrinsic}, @gol\n+@ref{LEN_TRIM}\n @end table\n \n \n@@ -9603,8 +9802,8 @@ end program test_log_gamma\n @end multitable\n \n @item @emph{See also}:\n-Gamma function: @ref{GAMMA}\n-\n+Gamma function: @gol\n+@ref{GAMMA}\n @end table\n \n \n@@ -9640,7 +9839,9 @@ kind corresponding to @var{KIND}, or of the default logical kind if\n @var{KIND} is not given.\n \n @item @emph{See also}:\n-@ref{INT}, @ref{REAL}, @ref{CMPLX}\n+@ref{INT}, @gol\n+@ref{REAL}, @gol\n+@ref{CMPLX}\n @end table\n \n \n@@ -9676,7 +9877,9 @@ Elemental function\n The return value is a @code{INTEGER(4)} variable.\n \n @item @emph{See also}:\n-@ref{INT}, @ref{INT2}, @ref{INT8}\n+@ref{INT}, @gol\n+@ref{INT2}, @gol\n+@ref{INT8}\n @end table\n \n \n@@ -9718,9 +9921,12 @@ The return value is of type @code{INTEGER} and of the same kind as\n @var{I}.\n \n @item @emph{See also}:\n-@ref{ISHFT}, @ref{ISHFTC}, @ref{RSHIFT}, @ref{SHIFTA}, @ref{SHIFTL},\n+@ref{ISHFT}, @gol\n+@ref{ISHFTC}, @gol\n+@ref{RSHIFT}, @gol\n+@ref{SHIFTA}, @gol\n+@ref{SHIFTL}, @gol\n @ref{SHIFTR}\n-\n @end table\n \n \n@@ -9766,7 +9972,10 @@ Returns 0 on success and a system specific error code otherwise.\n See @ref{STAT} for an example.\n \n @item @emph{See also}:\n-To stat an open file: @ref{FSTAT}, to stat a file: @ref{STAT}\n+To stat an open file: @gol\n+@ref{FSTAT} @gol\n+To stat a file: @gol\n+@ref{STAT}\n @end table\n \n \n@@ -9821,8 +10030,11 @@ effect, zero if not, and negative if the information is not available.\n @end enumerate\n \n @item @emph{See also}:\n-@ref{DATE_AND_TIME}, @ref{CTIME}, @ref{GMTIME}, @ref{TIME}, @ref{TIME8}\n-\n+@ref{DATE_AND_TIME}, @gol\n+@ref{CTIME}, @gol\n+@ref{GMTIME}, @gol\n+@ref{TIME}, @gol\n+@ref{TIME8}\n @end table\n \n \n@@ -10051,8 +10263,9 @@ and has the same type and kind as the first argument.\n @end multitable\n \n @item @emph{See also}:\n-@ref{MAXLOC} @ref{MAXVAL}, @ref{MIN}\n-\n+@ref{MAXLOC} @gol\n+@ref{MAXVAL}, @gol\n+@ref{MIN}\n @end table\n \n \n@@ -10159,8 +10372,9 @@ is present, the result is an integer of kind @var{KIND}, otherwise it\n is of default kind.\n \n @item @emph{See also}:\n-@ref{FINDLOC}, @ref{MAX}, @ref{MAXVAL}\n-\n+@ref{FINDLOC}, @gol\n+@ref{MAX}, @gol\n+@ref{MAXVAL}\n @end table\n \n \n@@ -10213,7 +10427,8 @@ the size of @var{ARRAY} with the @var{DIM} dimension removed.  In all\n cases, the result is of the same type and kind as @var{ARRAY}.\n \n @item @emph{See also}:\n-@ref{MAX}, @ref{MAXLOC}\n+@ref{MAX}, @gol\n+@ref{MAXLOC}\n @end table\n \n \n@@ -10250,8 +10465,11 @@ number of clock ticks since the start of the process, or @code{-1} if\n the system does not support @code{clock(3)}.\n \n @item @emph{See also}:\n-@ref{CTIME}, @ref{GMTIME}, @ref{LTIME}, @ref{MCLOCK}, @ref{TIME}\n-\n+@ref{CTIME}, @gol\n+@ref{GMTIME}, @gol\n+@ref{LTIME}, @gol\n+@ref{MCLOCK}, @gol\n+@ref{TIME}\n @end table\n \n \n@@ -10290,8 +10508,11 @@ number of clock ticks since the start of the process, or @code{-1} if\n the system does not support @code{clock(3)}.\n \n @item @emph{See also}:\n-@ref{CTIME}, @ref{GMTIME}, @ref{LTIME}, @ref{MCLOCK}, @ref{TIME8}\n-\n+@ref{CTIME}, @gol\n+@ref{GMTIME}, @gol\n+@ref{LTIME}, @gol\n+@ref{MCLOCK}, @gol\n+@ref{TIME8}\n @end table\n \n \n@@ -10417,7 +10638,9 @@ and has the same type and kind as the first argument.\n @end multitable\n \n @item @emph{See also}:\n-@ref{MAX}, @ref{MINLOC}, @ref{MINVAL}\n+@ref{MAX}, @gol\n+@ref{MINLOC}, @gol\n+@ref{MINVAL}\n @end table\n \n \n@@ -10516,8 +10739,9 @@ is present, the result is an integer of kind @var{KIND}, otherwise it\n is of default kind.\n \n @item @emph{See also}:\n-@ref{FINDLOC}, @ref{MIN}, @ref{MINVAL}\n-\n+@ref{FINDLOC}, @gol\n+@ref{MIN}, @gol\n+@ref{MINVAL}\n @end table\n \n \n@@ -10570,8 +10794,8 @@ the size of @var{ARRAY} with the @var{DIM} dimension removed.  In all\n cases, the result is of the same type and kind as @var{ARRAY}.\n \n @item @emph{See also}:\n-@ref{MIN}, @ref{MINLOC}\n-\n+@ref{MIN}, @gol\n+@ref{MINLOC}\n @end table\n \n \n@@ -10812,7 +11036,12 @@ same kind as @var{FROM}.\n @end multitable\n \n @item @emph{See also}:\n-@ref{IBCLR}, @ref{IBSET}, @ref{IBITS}, @ref{IAND}, @ref{IOR}, @ref{IEOR}\n+@ref{IBCLR}, @gol\n+@ref{IBSET}, @gol\n+@ref{IBITS}, @gol\n+@ref{IAND}, @gol\n+@ref{IOR}, @gol\n+@ref{IEOR}\n @end table\n \n \n@@ -10954,8 +11183,8 @@ end program test_nint\n @end multitable\n \n @item @emph{See also}:\n-@ref{CEILING}, @ref{FLOOR}\n-\n+@ref{CEILING}, @gol\n+@ref{FLOOR}\n @end table\n \n \n@@ -11055,8 +11284,12 @@ argument.\n @end multitable\n \n @item @emph{See also}:\n-@ref{IAND}, @ref{IEOR}, @ref{IOR}, @ref{IBITS}, @ref{IBSET}, @ref{IBCLR}\n-\n+@ref{IAND}, @gol\n+@ref{IEOR}, @gol\n+@ref{IOR}, @gol\n+@ref{IBITS}, @gol\n+@ref{IBSET}, @gol\n+@ref{IBCLR}\n @end table\n \n \n@@ -11158,7 +11391,8 @@ END IF\n @end smallexample\n \n @item @emph{See also}:\n-@ref{THIS_IMAGE}, @ref{IMAGE_INDEX}\n+@ref{THIS_IMAGE}, @gol\n+@ref{IMAGE_INDEX}\n @end table\n \n \n@@ -11217,7 +11451,8 @@ END PROGRAM\n @end smallexample\n \n @item @emph{See also}:\n-Fortran 95 elemental function: @ref{IOR}\n+Fortran 95 elemental function: @gol\n+@ref{IOR}\n @end table\n \n \n@@ -11280,7 +11515,8 @@ Gathering nonzero elements from an array and appending elements from @var{VECTOR\n PROGRAM test_pack_2\n   INTEGER :: m(4)\n   m = (/ 1, 0, 0, 2 /)\n-  WRITE(*, FMT=\"(4(I0, ' '))\") pack(m, m /= 0, (/ 0, 0, 3, 4 /))  ! \"1 2 3 4\"\n+  ! The following results in \"1 2 3 4\"\n+  WRITE(*, FMT=\"(4(I0, ' '))\") pack(m, m /= 0, (/ 0, 0, 3, 4 /))\n END PROGRAM\n @end smallexample\n \n@@ -11412,8 +11648,9 @@ program test_population\n end program test_population\n @end smallexample\n @item @emph{See also}:\n-@ref{POPPAR}, @ref{LEADZ}, @ref{TRAILZ}\n-\n+@ref{POPPAR}, @gol\n+@ref{LEADZ}, @gol\n+@ref{TRAILZ}\n @end table\n \n \n@@ -11457,7 +11694,9 @@ program test_population\n end program test_population\n @end smallexample\n @item @emph{See also}:\n-@ref{POPCNT}, @ref{LEADZ}, @ref{TRAILZ}\n+@ref{POPCNT}, @gol\n+@ref{LEADZ}, @gol\n+@ref{TRAILZ}\n @end table\n \n \n@@ -11501,7 +11740,8 @@ program prec_and_range\n end program prec_and_range\n @end smallexample\n @item @emph{See also}:\n-@ref{SELECTED_REAL_KIND}, @ref{RANGE}\n+@ref{SELECTED_REAL_KIND}, @gol\n+@ref{RANGE}\n @end table\n \n \n@@ -11668,7 +11908,8 @@ GNU extension\n Function\n \n @item @emph{See also}:\n-@ref{RAND}, @ref{RANDOM_NUMBER}\n+@ref{RAND}, @gol\n+@ref{RANDOM_NUMBER}\n @end table\n \n \n@@ -11720,7 +11961,8 @@ end program test_rand\n @end smallexample\n \n @item @emph{See also}:\n-@ref{SRAND}, @ref{RANDOM_NUMBER}\n+@ref{SRAND}, @gol\n+@ref{RANDOM_NUMBER}\n \n @end table\n \n@@ -11745,7 +11987,7 @@ Subroutine\n @code{CALL RANDOM_INIT(REPEATABLE, IMAGE_DISTINCT)}\n \n @item @emph{Arguments}:\n-@multitable @columnfractions .20 .75\n+@multitable @columnfractions .25 .70\n @item @var{REPEATABLE} @tab Shall be a scalar with a @code{LOGICAL} type,\n and it is @code{INTENT(IN)}.  If it is @code{.true.}, the seed is set to\n a processor-dependent value that is the same each time @code{RANDOM_INIT}\n@@ -11776,7 +12018,8 @@ end program test_random_seed\n @end smallexample\n \n @item @emph{See also}:\n-@ref{RANDOM_NUMBER}, @ref{RANDOM_SEED}\n+@ref{RANDOM_NUMBER}, @gol\n+@ref{RANDOM_SEED}\n @end table\n \n \n@@ -11824,7 +12067,8 @@ end program\n @end smallexample\n \n @item @emph{See also}:\n-@ref{RANDOM_SEED}, @ref{RANDOM_INIT}\n+@ref{RANDOM_SEED}, @gol\n+@ref{RANDOM_INIT}\n @end table\n \n \n@@ -11894,7 +12138,8 @@ end program test_random_seed\n @end smallexample\n \n @item @emph{See also}:\n-@ref{RANDOM_NUMBER}, @ref{RANDOM_INIT}\n+@ref{RANDOM_NUMBER}, @gol\n+@ref{RANDOM_INIT}\n @end table\n \n \n@@ -11931,7 +12176,8 @@ kind.\n @item @emph{Example}:\n See @code{PRECISION} for an example.\n @item @emph{See also}:\n-@ref{SELECTED_REAL_KIND}, @ref{PRECISION}\n+@ref{SELECTED_REAL_KIND}, @gol\n+@ref{PRECISION}\n @end table\n \n \n@@ -12271,7 +12517,11 @@ The return value is of type @code{INTEGER} and of the same kind as\n @var{I}.\n \n @item @emph{See also}:\n-@ref{ISHFT}, @ref{ISHFTC}, @ref{LSHIFT}, @ref{SHIFTA}, @ref{SHIFTR},\n+@ref{ISHFT}, @gol\n+@ref{ISHFTC}, @gol\n+@ref{LSHIFT}, @gol\n+@ref{SHIFTA}, @gol\n+@ref{SHIFTR}, @gol\n @ref{SHIFTL}\n \n @end table\n@@ -12404,7 +12654,8 @@ END PROGRAM\n @end smallexample\n \n @item @emph{See also}:\n-@ref{INDEX intrinsic}, @ref{VERIFY}\n+@ref{INDEX intrinsic}, @gol\n+@ref{VERIFY}\n @end table\n \n \n@@ -12672,7 +12923,9 @@ program real_kinds\n end program real_kinds\n @end smallexample\n @item @emph{See also}:\n-@ref{PRECISION}, @ref{RANGE}, @ref{RADIX}\n+@ref{PRECISION}, @gol\n+@ref{RANGE}, @gol\n+@ref{RADIX}\n @end table\n \n \n@@ -12766,7 +13019,8 @@ END PROGRAM\n @end smallexample\n \n @item @emph{See also}:\n-@ref{RESHAPE}, @ref{SIZE}\n+@ref{RESHAPE}, @gol\n+@ref{SIZE}\n @end table\n \n \n@@ -12807,7 +13061,8 @@ The return value is of type @code{INTEGER} and of the same kind as\n @var{I}.\n \n @item @emph{See also}:\n-@ref{SHIFTL}, @ref{SHIFTR}\n+@ref{SHIFTL}, @gol\n+@ref{SHIFTR}\n @end table\n \n \n@@ -12846,7 +13101,8 @@ The return value is of type @code{INTEGER} and of the same kind as\n @var{I}.\n \n @item @emph{See also}:\n-@ref{SHIFTA}, @ref{SHIFTR}\n+@ref{SHIFTA}, @gol\n+@ref{SHIFTR}\n @end table\n \n \n@@ -12885,7 +13141,8 @@ The return value is of type @code{INTEGER} and of the same kind as\n @var{I}.\n \n @item @emph{See also}:\n-@ref{SHIFTA}, @ref{SHIFTL}\n+@ref{SHIFTA}, @gol\n+@ref{SHIFTL}\n @end table\n \n \n@@ -13054,8 +13311,10 @@ end program test_sin\n @end multitable\n \n @item @emph{See also}:\n-Inverse function: @ref{ASIN}\n-Degrees function: @ref{SIND}\n+Inverse function: @gol\n+@ref{ASIN} @gol\n+Degrees function: @gol\n+@ref{SIND}\n @end table\n \n \n@@ -13114,9 +13373,10 @@ end program test_sind\n @end multitable\n \n @item @emph{See also}:\n-Inverse function: @ref{ASIND}\n-Radians function: @ref{SIN}\n-\n+Inverse function: @gol\n+@ref{ASIND} @gol\n+Radians function: @gol\n+@ref{SIN} @gol\n @end table\n \n \n@@ -13215,7 +13475,8 @@ END PROGRAM\n @end smallexample\n \n @item @emph{See also}:\n-@ref{SHAPE}, @ref{RESHAPE}\n+@ref{SHAPE}, @gol\n+@ref{RESHAPE}\n @end table\n \n \n@@ -13268,7 +13529,8 @@ The example will print @code{.TRUE.} unless you are using a platform\n where default @code{REAL} variables are unusually padded.\n \n @item @emph{See also}:\n-@ref{C_SIZEOF}, @ref{STORAGE_SIZE}\n+@ref{C_SIZEOF}, @gol\n+@ref{STORAGE_SIZE}\n @end table\n \n \n@@ -13499,8 +13761,9 @@ Please note that in GNU Fortran, these two sets of intrinsics (@code{RAND},\n pseudo-random number generators.\n \n @item @emph{See also}:\n-@ref{RAND}, @ref{RANDOM_SEED}, @ref{RANDOM_NUMBER}\n-\n+@ref{RAND}, @gol\n+@ref{RANDOM_SEED}, @gol\n+@ref{RANDOM_NUMBER}\n @end table\n \n \n@@ -13587,7 +13850,10 @@ END PROGRAM\n @end smallexample\n \n @item @emph{See also}:\n-To stat an open file: @ref{FSTAT}, to stat a link: @ref{LSTAT}\n+To stat an open file: @gol\n+@ref{FSTAT} @gol\n+To stat a link: @gol\n+@ref{LSTAT}\n @end table\n \n \n@@ -13620,7 +13886,8 @@ expressed in bits for an element of an array that has the dynamic type and type\n parameters of A.\n \n @item @emph{See also}:\n-@ref{C_SIZEOF}, @ref{SIZEOF}\n+@ref{C_SIZEOF}, @gol\n+@ref{SIZEOF}\n @end table\n \n \n@@ -13723,8 +13990,8 @@ Subroutine, function\n @end multitable\n \n @item @emph{See also}:\n-@ref{LINK}, @ref{UNLINK}\n-\n+@ref{LINK}, @gol\n+@ref{UNLINK}\n @end table\n \n \n@@ -13827,7 +14094,7 @@ Subroutine\n @code{CALL SYSTEM_CLOCK([COUNT, COUNT_RATE, COUNT_MAX])}\n \n @item @emph{Arguments}:\n-@multitable @columnfractions .15 .70\n+@multitable @columnfractions .20 .65\n @item @var{COUNT}      @tab (Optional) shall be a scalar of type \n @code{INTEGER} with @code{INTENT(OUT)}.\n @item @var{COUNT_RATE} @tab (Optional) shall be a scalar of type \n@@ -13846,7 +14113,8 @@ END PROGRAM\n @end smallexample\n \n @item @emph{See also}:\n-@ref{DATE_AND_TIME}, @ref{CPU_TIME}\n+@ref{DATE_AND_TIME}, @gol\n+@ref{CPU_TIME}\n @end table\n \n \n@@ -13895,8 +14163,10 @@ end program test_tan\n @end multitable\n \n @item @emph{See also}:\n-Inverse function: @ref{ATAN}\n-Degrees function: @ref{TAND}\n+Inverse function: @gol\n+@ref{ATAN} @gol\n+Degrees function: @gol\n+@ref{TAND}\n @end table\n \n \n@@ -13948,8 +14218,10 @@ end program test_tand\n @end multitable\n \n @item @emph{See also}:\n-Inverse function: @ref{ATAND}\n-Radians function: @ref{TAN}\n+Inverse function: @gol\n+@ref{ATAND} @gol\n+Radians function: @gol\n+@ref{TAN}\n @end table\n \n \n@@ -14073,7 +14345,8 @@ IF (THIS_IMAGE(HUGE(1)) /= THIS_IMAGE())\n @end smallexample\n \n @item @emph{See also}:\n-@ref{NUM_IMAGES}, @ref{IMAGE_INDEX}\n+@ref{NUM_IMAGES}, @gol\n+@ref{IMAGE_INDEX}\n @end table\n \n \n@@ -14113,8 +14386,12 @@ Function\n The return value is a scalar of type @code{INTEGER(4)}.\n \n @item @emph{See also}:\n-@ref{DATE_AND_TIME}, @ref{CTIME}, @ref{GMTIME}, @ref{LTIME}, @ref{MCLOCK}, @ref{TIME8}\n-\n+@ref{DATE_AND_TIME}, @gol\n+@ref{CTIME}, @gol\n+@ref{GMTIME}, @gol\n+@ref{LTIME}, @gol\n+@ref{MCLOCK}, @gol\n+@ref{TIME8}\n @end table\n \n \n@@ -14152,8 +14429,12 @@ Function\n The return value is a scalar of type @code{INTEGER(8)}.\n \n @item @emph{See also}:\n-@ref{DATE_AND_TIME}, @ref{CTIME}, @ref{GMTIME}, @ref{LTIME}, @ref{MCLOCK8}, @ref{TIME}\n-\n+@ref{DATE_AND_TIME}, @gol\n+@ref{CTIME}, @gol\n+@ref{GMTIME}, @gol\n+@ref{LTIME}, @gol\n+@ref{MCLOCK8}, @gol\n+@ref{TIME}\n @end table\n \n \n@@ -14227,7 +14508,10 @@ END PROGRAM\n @end smallexample\n \n @item @emph{See also}:\n-@ref{BIT_SIZE}, @ref{LEADZ}, @ref{POPPAR}, @ref{POPCNT}\n+@ref{BIT_SIZE}, @gol\n+@ref{LEADZ}, @gol\n+@ref{POPPAR}, @gol\n+@ref{POPCNT}\n @end table\n \n \n@@ -14364,7 +14648,8 @@ END PROGRAM\n @end smallexample\n \n @item @emph{See also}:\n-@ref{ADJUSTL}, @ref{ADJUSTR}\n+@ref{ADJUSTL}, @gol\n+@ref{ADJUSTR}\n @end table\n \n \n@@ -14454,7 +14739,8 @@ dimension, the upper bound is taken to be the number of elements along\n the relevant dimension.\n \n @item @emph{See also}:\n-@ref{LBOUND}, @ref{LCOBOUND}\n+@ref{LBOUND}, @gol\n+@ref{LCOBOUND}\n @end table\n \n \n@@ -14493,7 +14779,8 @@ If @var{DIM} is absent, the result is an array of the lower cobounds of\n corresponding to the lower cobound of the array along that codimension.\n \n @item @emph{See also}:\n-@ref{LCOBOUND}, @ref{LBOUND}\n+@ref{LCOBOUND}, @gol\n+@ref{LBOUND}\n @end table\n \n \n@@ -14567,7 +14854,8 @@ Subroutine, function\n @end multitable\n \n @item @emph{See also}:\n-@ref{LINK}, @ref{SYMLNK}\n+@ref{LINK}, @gol\n+@ref{SYMLNK}\n @end table\n \n \n@@ -14618,7 +14906,8 @@ END PROGRAM\n @end smallexample\n \n @item @emph{See also}:\n-@ref{PACK}, @ref{SPREAD}\n+@ref{PACK}, @gol\n+@ref{SPREAD}\n @end table\n \n \n@@ -14673,7 +14962,8 @@ END PROGRAM\n @end smallexample\n \n @item @emph{See also}:\n-@ref{SCAN}, @ref{INDEX intrinsic}\n+@ref{SCAN}, @gol\n+@ref{INDEX intrinsic}\n @end table\n \n \n@@ -14733,7 +15023,8 @@ END PROGRAM\n @end smallexample\n \n @item @emph{See also}:\n-Fortran 95 elemental function: @ref{IEOR}\n+Fortran 95 elemental function: @gol\n+@ref{IEOR}\n @end table\n \n "}]}