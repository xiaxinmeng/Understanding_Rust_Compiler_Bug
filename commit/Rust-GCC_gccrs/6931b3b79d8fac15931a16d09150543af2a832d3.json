{"sha": "6931b3b79d8fac15931a16d09150543af2a832d3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjkzMWIzYjc5ZDhmYWMxNTkzMWExNmQwOTE1MDU0M2FmMmE4MzJkMw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-03-17T13:43:01Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-03-17T13:43:01Z"}, "message": "re PR debug/70271 (internal compiler error: in dwarf2out_finish, at dwarf2out.c:27346)\n\n2016-03-17  Richard Biener  <rguenther@suse.de>\n\n\tPR debug/70271\n\t* dwarf2out.c (dwarf2out_early_finish): Process deferred_asm_name\n\tlast.\n\n\t* g++.dg/debug/pr70271.C: New testcase.\n\nFrom-SVN: r234289", "tree": {"sha": "194b9801f920bc05c55e2cf25d1427a0014f9467", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/194b9801f920bc05c55e2cf25d1427a0014f9467"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6931b3b79d8fac15931a16d09150543af2a832d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6931b3b79d8fac15931a16d09150543af2a832d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6931b3b79d8fac15931a16d09150543af2a832d3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6931b3b79d8fac15931a16d09150543af2a832d3/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9bc057c8da4c460ffd067e5202d399fce6c8cbee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9bc057c8da4c460ffd067e5202d399fce6c8cbee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9bc057c8da4c460ffd067e5202d399fce6c8cbee"}], "stats": {"total": 63, "additions": 54, "deletions": 9}, "files": [{"sha": "a573275d97acbe096bcb3fb8f0b9889e00f0639b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6931b3b79d8fac15931a16d09150543af2a832d3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6931b3b79d8fac15931a16d09150543af2a832d3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6931b3b79d8fac15931a16d09150543af2a832d3", "patch": "@@ -1,3 +1,9 @@\n+2016-03-17  Richard Biener  <rguenther@suse.de>\n+\n+\tPR debug/70271\n+\t* dwarf2out.c (dwarf2out_early_finish): Process deferred_asm_name\n+\tlast.\n+\n 2016-03-17  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/70245"}, {"sha": "0bbff87a95ee1fc0881327557b7e08647f0f8619", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6931b3b79d8fac15931a16d09150543af2a832d3/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6931b3b79d8fac15931a16d09150543af2a832d3/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=6931b3b79d8fac15931a16d09150543af2a832d3", "patch": "@@ -27686,10 +27686,15 @@ dwarf2out_finish (const char *filename)\n static void\n dwarf2out_early_finish (void)\n {\n-  limbo_die_node *node;\n+  /* The point here is to flush out the limbo list so that it is empty\n+     and we don't need to stream it for LTO.  */\n+  flush_limbo_die_list ();\n+\n+  gen_scheduled_generic_parms_dies ();\n+  gen_remaining_tmpl_value_param_die_attribute ();\n \n   /* Add DW_AT_linkage_name for all deferred DIEs.  */\n-  for (node = deferred_asm_name; node; node = node->next)\n+  for (limbo_die_node *node = deferred_asm_name; node; node = node->next)\n     {\n       tree decl = node->created_for;\n       if (DECL_ASSEMBLER_NAME (decl) != DECL_NAME (decl)\n@@ -27703,13 +27708,6 @@ dwarf2out_early_finish (void)\n \t}\n     }\n   deferred_asm_name = NULL;\n-\n-  /* The point here is to flush out the limbo list so that it is empty\n-     and we don't need to stream it for LTO.  */\n-  flush_limbo_die_list ();\n-\n-  gen_scheduled_generic_parms_dies ();\n-  gen_remaining_tmpl_value_param_die_attribute ();\n }\n \n /* Reset all state within dwarf2out.c so that we can rerun the compiler"}, {"sha": "b0bdc245e67a31bd3bbce7586894c8526b96d9cc", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6931b3b79d8fac15931a16d09150543af2a832d3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6931b3b79d8fac15931a16d09150543af2a832d3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6931b3b79d8fac15931a16d09150543af2a832d3", "patch": "@@ -1,3 +1,8 @@\n+2016-03-17  Richard Biener  <rguenther@suse.de>\n+\n+\tPR debug/70271\n+\t* g++.dg/debug/pr70271.C: New testcase.\n+\n 2016-03-17  Ilya Enkovich  <enkovich.gnu@gmail.com>\n \n \t* gcc.target/i386/pr70251.c: New test."}, {"sha": "3c96d3a49e910c023a146f2745f74118397f4e24", "filename": "gcc/testsuite/g++.dg/debug/pr70271.C", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6931b3b79d8fac15931a16d09150543af2a832d3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fpr70271.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6931b3b79d8fac15931a16d09150543af2a832d3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fpr70271.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fpr70271.C?ref=6931b3b79d8fac15931a16d09150543af2a832d3", "patch": "@@ -0,0 +1,36 @@\n+// { dg-do compile }\n+\n+template <typename Function>\n+struct function_traits\n+: public function_traits<decltype(&Function::operator())> \n+{ };\n+\n+template <typename ClassType, typename ReturnType, typename... Args>\n+struct function_traits<ReturnType(ClassType::*)(Args...) const> \n+{\n+  typedef ReturnType (*pointer)(Args...);\n+  typedef ReturnType return_type;\n+};\n+\n+template <typename Function>\n+typename function_traits<Function>::pointer\n+FunctionPointer (const Function& lambda) \n+{\n+  return static_cast<typename function_traits<Function>::pointer>(lambda);\n+}\n+\n+template <typename Function>\n+typename function_traits<Function>::return_type\n+GetReturnValue (Function func) \n+{\n+  typename function_traits<Function>::return_type *dummy;\n+  return *dummy;\n+}\n+template <typename T> class ClassFoo {};\n+template <typename T> void FuncBar () { }\n+\n+template <> inline void FuncBar<double> ()\n+{\n+  typedef void (*func_type)(ClassFoo<double> &);\n+  func_type f1 = FunctionPointer ([](ClassFoo<double> & ref) { });\n+}"}]}