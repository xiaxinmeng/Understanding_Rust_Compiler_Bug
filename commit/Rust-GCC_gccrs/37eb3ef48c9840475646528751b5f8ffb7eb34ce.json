{"sha": "37eb3ef48c9840475646528751b5f8ffb7eb34ce", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzdlYjNlZjQ4Yzk4NDA0NzU2NDY1Mjg3NTFiNWY4ZmZiN2ViMzRjZQ==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2021-07-28T18:47:54Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2021-07-28T18:47:54Z"}, "message": "analyzer: play better with -fsanitize=bounds\n\ngcc/analyzer/ChangeLog:\n\t* region-model.cc (region_model::on_call_pre): Treat\n\tIFN_UBSAN_BOUNDS, BUILT_IN_STACK_SAVE, and BUILT_IN_STACK_RESTORE\n\tas no-ops, rather than handling them as unknown functions.\n\ngcc/testsuite/ChangeLog:\n\t* gcc.dg/analyzer/torture/ubsan-1.c: New test.\n\nSigned-off-by: David Malcolm <dmalcolm@redhat.com>", "tree": {"sha": "214065a8dd069d3f24e7ed4d1a2e183c07f52d9a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/214065a8dd069d3f24e7ed4d1a2e183c07f52d9a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/37eb3ef48c9840475646528751b5f8ffb7eb34ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37eb3ef48c9840475646528751b5f8ffb7eb34ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/37eb3ef48c9840475646528751b5f8ffb7eb34ce", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37eb3ef48c9840475646528751b5f8ffb7eb34ce/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b5081130166a4f2e363f116e0e6b43d83422c947", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5081130166a4f2e363f116e0e6b43d83422c947", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5081130166a4f2e363f116e0e6b43d83422c947"}], "stats": {"total": 66, "additions": 66, "deletions": 0}, "files": [{"sha": "1bc411b2ed66f62fd9a4d35c838cb4b932fd5ee5", "filename": "gcc/analyzer/region-model.cc", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37eb3ef48c9840475646528751b5f8ffb7eb34ce/gcc%2Fanalyzer%2Fregion-model.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37eb3ef48c9840475646528751b5f8ffb7eb34ce/gcc%2Fanalyzer%2Fregion-model.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fregion-model.cc?ref=37eb3ef48c9840475646528751b5f8ffb7eb34ce", "patch": "@@ -1082,6 +1082,8 @@ region_model::on_call_pre (const gcall *call, region_model_context *ctxt,\n        case IFN_BUILTIN_EXPECT:\n \t impl_call_builtin_expect (cd);\n \t return false;\n+       case IFN_UBSAN_BOUNDS:\n+\t return false;\n        }\n     }\n \n@@ -1137,6 +1139,10 @@ region_model::on_call_pre (const gcall *call, region_model_context *ctxt,\n \t    impl_call_strlen (cd);\n \t    return false;\n \n+\t  case BUILT_IN_STACK_SAVE:\n+\t  case BUILT_IN_STACK_RESTORE:\n+\t    return false;\n+\n \t  /* Stdio builtins.  */\n \t  case BUILT_IN_FPRINTF:\n \t  case BUILT_IN_FPRINTF_UNLOCKED:"}, {"sha": "b9f34f166ba76a477df9fc8a40819f70089f4f1d", "filename": "gcc/testsuite/gcc.dg/analyzer/torture/ubsan-1.c", "status": "added", "additions": 60, "deletions": 0, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37eb3ef48c9840475646528751b5f8ffb7eb34ce/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Ftorture%2Fubsan-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37eb3ef48c9840475646528751b5f8ffb7eb34ce/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Ftorture%2Fubsan-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Ftorture%2Fubsan-1.c?ref=37eb3ef48c9840475646528751b5f8ffb7eb34ce", "patch": "@@ -0,0 +1,60 @@\n+/* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } { \"\" } } */\n+/* { dg-additional-options \"-fsanitize=bounds\" } */\n+\n+#include <stdlib.h>\n+#include \"../analyzer-decls.h\"\n+\n+int test_1 (int *arr, int i, int n)\n+{\n+  if (i >= n)\n+    return 0;\n+  return arr[i];\n+}\n+\n+int test_2 (int *arr, int i, int n)\n+{\n+  if (i >= n)\n+    return 0;\n+  if (arr[i])\n+    __analyzer_eval (arr[i]); /* { dg-warning \"TRUE\" } */\n+  else\n+    __analyzer_eval (arr[i]); /* { dg-warning \"FALSE\" } */\n+}\n+\n+int test_3 (int arr[], int i, int n)\n+{\n+  if (i >= n)\n+    return 0;\n+  if (arr[i])\n+    __analyzer_eval (arr[i]); /* { dg-warning \"TRUE\" } */\n+  else\n+    __analyzer_eval (arr[i]); /* { dg-warning \"FALSE\" } */\n+}\n+\n+void test_4 (int i, int n)\n+{\n+  int arr[n];\n+  arr[i] = 42;\n+  __analyzer_eval (arr[i] == 42); /* { dg-warning \"TRUE\" } */\n+}\n+\n+void test_5 (int i, int n)\n+{\n+  int *arr = malloc (sizeof(int) * n);\n+  if (arr)\n+    {\n+      arr[i] = 42;\n+      __analyzer_eval (arr[i] == 42); /* { dg-warning \"TRUE\" } */\n+    }\n+  free (arr);\n+}\n+\n+int global;\n+\n+void test_6 (int i, int n)\n+{\n+  int arr[n];\n+  int saved = global;\n+  arr[i] = 42;\n+  __analyzer_eval (saved == global); /* { dg-warning \"TRUE\" } */\n+}"}]}