{"sha": "dfe2677b2732a912adafd5afe5981dd52e24b05a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGZlMjY3N2IyNzMyYTkxMmFkYWZkNWFmZTU5ODFkZDUyZTI0YjA1YQ==", "commit": {"author": {"name": "Krister Walfridsson", "email": "krister.walfridsson@gmail.com", "date": "2017-09-30T20:45:59Z"}, "committer": {"name": "Krister Walfridsson", "email": "kristerw@gcc.gnu.org", "date": "2017-09-30T20:45:59Z"}, "message": "config.gcc (*-*-netbsd*): New variable nbsd_tm_file containing netbsd.h, netbsd-stdint.h, and netbsd-elf.h.\n\n2017-09-30  Krister Walfridsson  <krister.walfridsson@gmail.com>\n\t    Maya Rashish  <coypu@sdf.org>\n\n\t* config.gcc (*-*-netbsd*): New variable nbsd_tm_file containing\n\tnetbsd.h, netbsd-stdint.h, and netbsd-elf.h.\n\t(alpha*-*-netbsd*) Use nbsd_tm_file.\n\t(arm*-*-netbsdelf*) Likewise.\n\t(i[34567]86-*-netbsdelf*) Likewise.\n\t(x86_64-*-netbsd*) Likewise.\n\t(mips*-*-netbsd*) Likewise.\n\t(powerpc-*-netbsd*) Likewise.\n\t(sh*-*-netbsd*) Likewise.\n\t(sparc-*-netbsdelf*) Likewise.\n\t(sparc64-*-netbsd*) Likewise.\n\t(m68k*-*-netbsdelf*) Use nbsd_tm_file and add CHAR_FAST8/SHORT_FAST16\n\tto tm_defines.\n\t(vax-*-netbsdelf*) Likewise.\n\t* config/netbsd-stdint.h (INT_FAST8_TYPE): Check CHAR_FAST8.\n\t(UINT_FAST8_TYPE) Likewise.\n\t(INT_FAST16_TYPE) Check CHAR_FAST16.\n\t(UINT_FAST16_TYPE) Likewise.\n\nCo-Authored-By: Maya Rashish <coypu@sdf.org>\n\nFrom-SVN: r253323", "tree": {"sha": "fd840e06d11add91d8797b385d3fca1934d69d5b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fd840e06d11add91d8797b385d3fca1934d69d5b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dfe2677b2732a912adafd5afe5981dd52e24b05a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dfe2677b2732a912adafd5afe5981dd52e24b05a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dfe2677b2732a912adafd5afe5981dd52e24b05a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dfe2677b2732a912adafd5afe5981dd52e24b05a/comments", "author": {"login": "kristerw", "id": 3127667, "node_id": "MDQ6VXNlcjMxMjc2Njc=", "avatar_url": "https://avatars.githubusercontent.com/u/3127667?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kristerw", "html_url": "https://github.com/kristerw", "followers_url": "https://api.github.com/users/kristerw/followers", "following_url": "https://api.github.com/users/kristerw/following{/other_user}", "gists_url": "https://api.github.com/users/kristerw/gists{/gist_id}", "starred_url": "https://api.github.com/users/kristerw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kristerw/subscriptions", "organizations_url": "https://api.github.com/users/kristerw/orgs", "repos_url": "https://api.github.com/users/kristerw/repos", "events_url": "https://api.github.com/users/kristerw/events{/privacy}", "received_events_url": "https://api.github.com/users/kristerw/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ae3f9c32ae1f80e52318318fd749c0237c19e4e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae3f9c32ae1f80e52318318fd749c0237c19e4e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae3f9c32ae1f80e52318318fd749c0237c19e4e8"}], "stats": {"total": 64, "additions": 52, "deletions": 12}, "files": [{"sha": "d1c3e9fa409b54fd4bb3cd121b17e0934cecf590", "filename": "gcc/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfe2677b2732a912adafd5afe5981dd52e24b05a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfe2677b2732a912adafd5afe5981dd52e24b05a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dfe2677b2732a912adafd5afe5981dd52e24b05a", "patch": "@@ -1,3 +1,25 @@\n+2017-09-30  Krister Walfridsson  <krister.walfridsson@gmail.com>\n+\t    Maya Rashish  <coypu@sdf.org>\n+\n+\t* config.gcc (*-*-netbsd*): New variable nbsd_tm_file containing\n+\tnetbsd.h, netbsd-stdint.h, and netbsd-elf.h.\n+\t(alpha*-*-netbsd*) Use nbsd_tm_file.\n+\t(arm*-*-netbsdelf*) Likewise.\n+\t(i[34567]86-*-netbsdelf*) Likewise.\n+\t(x86_64-*-netbsd*) Likewise.\n+\t(mips*-*-netbsd*) Likewise.\n+\t(powerpc-*-netbsd*) Likewise.\n+\t(sh*-*-netbsd*) Likewise.\n+\t(sparc-*-netbsdelf*) Likewise.\n+\t(sparc64-*-netbsd*) Likewise.\n+\t(m68k*-*-netbsdelf*) Use nbsd_tm_file and add CHAR_FAST8/SHORT_FAST16\n+\tto tm_defines.\n+\t(vax-*-netbsdelf*) Likewise.\n+\t* config/netbsd-stdint.h (INT_FAST8_TYPE): Check CHAR_FAST8.\n+\t(UINT_FAST8_TYPE) Likewise.\n+\t(INT_FAST16_TYPE) Check CHAR_FAST16.\n+\t(UINT_FAST16_TYPE) Likewise.\n+\n 2017-09-30  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/82361"}, {"sha": "91a55e89d0469bee28d7e6b9a7d394852de29581", "filename": "gcc/config.gcc", "status": "modified", "additions": 14, "deletions": 12, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfe2677b2732a912adafd5afe5981dd52e24b05a/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfe2677b2732a912adafd5afe5981dd52e24b05a/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=dfe2677b2732a912adafd5afe5981dd52e24b05a", "patch": "@@ -801,6 +801,7 @@ case ${target} in\n   case ${enable_threads} in\n     \"\" | yes | posix) thread_file='posix' ;;\n   esac\n+  nbsd_tm_file=\"netbsd.h netbsd-stdint.h netbsd-elf.h\"\n   default_use_cxa_atexit=yes\n   ;;\n *-*-openbsd*)\n@@ -1004,7 +1005,7 @@ alpha*-*-freebsd*)\n \textra_options=\"${extra_options} alpha/elf.opt\"\n \t;;\n alpha*-*-netbsd*)\n-\ttm_file=\"elfos.h ${tm_file} netbsd.h alpha/elf.h netbsd-elf.h alpha/netbsd.h\"\n+\ttm_file=\"elfos.h ${tm_file} ${nbsd_tm_file} alpha/elf.h alpha/netbsd.h\"\n \ttmake_file=\"${tmake_file} alpha/t-alpha\"\n \textra_options=\"${extra_options} netbsd.opt netbsd-elf.opt \\\n \t\t       alpha/elf.opt\"\n@@ -1104,7 +1105,7 @@ arm*-*-freebsd*)                # ARM FreeBSD EABI\n \twith_tls=${with_tls:-gnu}\n \t;;\n arm*-*-netbsdelf*)\n-\ttm_file=\"dbxelf.h elfos.h netbsd.h netbsd-elf.h arm/elf.h arm/aout.h ${tm_file} arm/netbsd-elf.h\"\n+\ttm_file=\"dbxelf.h elfos.h ${nbsd_tm_file} arm/elf.h arm/aout.h ${tm_file} arm/netbsd-elf.h\"\n \textra_options=\"${extra_options} netbsd.opt netbsd-elf.opt\"\n \ttmake_file=\"${tmake_file} arm/t-arm\"\n \ttarget_cpu_cname=\"arm6\"\n@@ -1489,11 +1490,11 @@ x86_64-*-freebsd*)\n \ttm_file=\"${tm_file} i386/unix.h i386/att.h dbxelf.h elfos.h ${fbsd_tm_file} i386/x86-64.h i386/freebsd.h i386/freebsd64.h\"\n \t;;\n i[34567]86-*-netbsdelf*)\n-\ttm_file=\"${tm_file} i386/unix.h i386/att.h dbxelf.h elfos.h netbsd.h netbsd-stdint.h netbsd-elf.h i386/netbsd-elf.h\"\n+\ttm_file=\"${tm_file} i386/unix.h i386/att.h dbxelf.h elfos.h ${nbsd_tm_file} i386/netbsd-elf.h\"\n \textra_options=\"${extra_options} netbsd.opt netbsd-elf.opt\"\n \t;;\n x86_64-*-netbsd*)\n-\ttm_file=\"${tm_file} i386/unix.h i386/att.h dbxelf.h elfos.h netbsd.h netbsd-stdint.h netbsd-elf.h i386/x86-64.h i386/netbsd64.h\"\n+\ttm_file=\"${tm_file} i386/unix.h i386/att.h dbxelf.h elfos.h ${nbsd_tm_file} i386/x86-64.h i386/netbsd64.h\"\n \textra_options=\"${extra_options} netbsd.opt netbsd-elf.opt\"\n \t;;\n i[34567]86-*-openbsd*)\n@@ -1931,9 +1932,9 @@ m68k-*-elf* | fido-*-elf*)\n m68k*-*-netbsdelf*)\n \tdefault_m68k_cpu=68020\n \tdefault_cf_cpu=5475\n-\ttm_file=\"${tm_file} dbxelf.h elfos.h netbsd.h netbsd-elf.h m68k/netbsd-elf.h\"\n+\ttm_file=\"${tm_file} dbxelf.h elfos.h ${nbsd_tm_file} m68k/netbsd-elf.h\"\n \textra_options=\"${extra_options} netbsd.opt netbsd-elf.opt\"\n-\ttm_defines=\"${tm_defines} MOTOROLA=1\"\n+\ttm_defines=\"${tm_defines} MOTOROLA=1 CHAR_FAST8=1 SHORT_FAST16=1\"\n \t;;\n m68k*-*-openbsd*)\n \tdefault_m68k_cpu=68020\n@@ -2060,7 +2061,7 @@ riscv*-*-elf* | riscv*-*-rtems*)\n \t;;\n mips*-*-netbsd*)\t\t\t# NetBSD/mips, either endian.\n \ttarget_cpu_default=\"MASK_ABICALLS\"\n-\ttm_file=\"elfos.h ${tm_file} mips/elf.h netbsd.h netbsd-elf.h mips/netbsd.h\"\n+\ttm_file=\"elfos.h ${tm_file} mips/elf.h ${nbsd_tm_file} mips/netbsd.h\"\n \textra_options=\"${extra_options} netbsd.opt netbsd-elf.opt\"\n \t;;\n mips*-img-linux*)\n@@ -2376,7 +2377,7 @@ powerpc*-*-freebsd*)\n \tesac\n \t;;\n powerpc-*-netbsd*)\n-\ttm_file=\"${tm_file} dbxelf.h elfos.h netbsd.h netbsd-elf.h freebsd-spec.h rs6000/sysv4.h rs6000/netbsd.h\"\n+\ttm_file=\"${tm_file} dbxelf.h elfos.h ${nbsd_tm_file} freebsd-spec.h rs6000/sysv4.h rs6000/netbsd.h\"\n \textra_options=\"${extra_options} netbsd.opt netbsd-elf.opt\"\n \ttmake_file=\"${tmake_file} rs6000/t-netbsd\"\n \textra_options=\"${extra_options} rs6000/sysv4.opt\"\n@@ -2707,7 +2708,7 @@ sh-*-elf* | sh[12346l]*-*-elf* | \\\n \t\t\tfi\n \t\t\ttm_file=\"${tm_file} gnu-user.h linux.h glibc-stdint.h sh/linux.h\" ;;\n \tsh*-*-netbsd*)\n-\t\t\ttm_file=\"${tm_file} netbsd.h netbsd-elf.h sh/netbsd-elf.h\"\n+\t\t\ttm_file=\"${tm_file} ${nbsd_tm_file} sh/netbsd-elf.h\"\n \t\t\textra_options=\"${extra_options} netbsd.opt netbsd-elf.opt\"\n \n \t\t\t;;\n@@ -2867,7 +2868,7 @@ sparc-*-linux*)\n \tfi\n \t;;\n sparc-*-netbsdelf*)\n-\ttm_file=\"${tm_file} dbxelf.h elfos.h sparc/sysv4.h netbsd.h netbsd-elf.h sparc/netbsd-elf.h\"\n+\ttm_file=\"${tm_file} dbxelf.h elfos.h sparc/sysv4.h ${nbsd_tm_file} sparc/netbsd-elf.h\"\n \textra_options=\"${extra_options} netbsd.opt netbsd-elf.opt\"\n \textra_options=\"${extra_options} sparc/long-double-switch.opt\"\n \ttmake_file=\"${tmake_file} sparc/t-sparc\"\n@@ -2915,7 +2916,7 @@ sparc64-*-freebsd*|ultrasparc-*-freebsd*)\n \t;;\n sparc64-*-netbsd*)\n \ttm_file=\"sparc/biarch64.h ${tm_file}\"\n-\ttm_file=\"${tm_file} dbxelf.h elfos.h sparc/sysv4.h netbsd.h netbsd-elf.h sparc/netbsd-elf.h\"\n+\ttm_file=\"${tm_file} dbxelf.h elfos.h sparc/sysv4.h ${nbsd_tm_file} sparc/netbsd-elf.h\"\n \textra_options=\"${extra_options} netbsd.opt netbsd-elf.opt\"\n \textra_options=\"${extra_options} sparc/long-double-switch.opt\"\n \ttmake_file=\"${tmake_file} sparc/t-sparc sparc/t-netbsd64\"\n@@ -3019,8 +3020,9 @@ vax-*-linux*)\n \textra_options=\"${extra_options} vax/elf.opt\"\n \t;;\n vax-*-netbsdelf*)\n-\ttm_file=\"${tm_file} elfos.h netbsd.h netbsd-elf.h vax/elf.h vax/netbsd-elf.h\"\n+\ttm_file=\"${tm_file} elfos.h ${nbsd_tm_file} vax/elf.h vax/netbsd-elf.h\"\n \textra_options=\"${extra_options} netbsd.opt netbsd-elf.opt vax/elf.opt\"\n+\ttm_defines=\"${tm_defines} CHAR_FAST8=1 SHORT_FAST16=1\"\n \t;;\n vax-*-openbsd*)\n \ttm_file=\"vax/vax.h vax/openbsd1.h openbsd.h openbsd-stdint.h openbsd-libpthread.h vax/openbsd.h\""}, {"sha": "3d5466996c9e5ef088dbce0fa6abb6c7f72d321c", "filename": "gcc/config/netbsd-stdint.h", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfe2677b2732a912adafd5afe5981dd52e24b05a/gcc%2Fconfig%2Fnetbsd-stdint.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfe2677b2732a912adafd5afe5981dd52e24b05a/gcc%2Fconfig%2Fnetbsd-stdint.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnetbsd-stdint.h?ref=dfe2677b2732a912adafd5afe5981dd52e24b05a", "patch": "@@ -42,12 +42,28 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #define UINT_LEAST32_TYPE UINT32_TYPE\n #define UINT_LEAST64_TYPE UINT64_TYPE\n \n+#ifdef CHAR_FAST8\n+#define INT_FAST8_TYPE    (LONG_TYPE_SIZE == 64 ? \"int\" : \"signed char\")\n+#else\n #define INT_FAST8_TYPE    INT32_TYPE\n+#endif\n+#ifdef SHORT_FAST16\n+#define INT_FAST16_TYPE   (LONG_TYPE_SIZE == 64 ? \"int\" : \"short int\")\n+#else\n #define INT_FAST16_TYPE   INT32_TYPE\n+#endif\n #define INT_FAST32_TYPE   INT32_TYPE\n #define INT_FAST64_TYPE   INT64_TYPE\n+#ifdef CHAR_FAST8\n+#define UINT_FAST8_TYPE   \"unsigned char\"\n+#else\n #define UINT_FAST8_TYPE   UINT32_TYPE\n+#endif\n+#ifdef SHORT_FAST16\n+#define UINT_FAST16_TYPE  \"short unsigned int\"\n+#else\n #define UINT_FAST16_TYPE  UINT32_TYPE\n+#endif\n #define UINT_FAST32_TYPE  UINT32_TYPE\n #define UINT_FAST64_TYPE  UINT64_TYPE\n "}]}