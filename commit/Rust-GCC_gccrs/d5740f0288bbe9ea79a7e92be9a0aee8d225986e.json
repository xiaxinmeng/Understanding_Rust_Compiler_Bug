{"sha": "d5740f0288bbe9ea79a7e92be9a0aee8d225986e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDU3NDBmMDI4OGJiZTllYTc5YTdlOTJiZTlhMGFlZThkMjI1OTg2ZQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2008-07-12T10:16:16Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2008-07-12T10:16:16Z"}, "message": "date_time: Remove, per N2549, in WP.\n\n2008-07-12  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* include/std/date_time: Remove, per N2549, in WP.\n\t* src/date_time.cc: Likewise.\n\t* config/abi/pre/gnu.ver: Remove <date_time> symbols.\n\t* include/Makefile.am: Remove date_time in std headers.\n\t* src/Makefile.am: Remove date_time.cc to source files.\n\t* include/Makefile.in: Regenerate.\n\t* src/Makefile.in: Likewise.\n\t* testsuite/31_date_time/headers/date_time/types_std.cc: Remove.\n\t* testsuite/31_date_time/headers/date_time/std_c++0x_neg.cc: Likewise.\n\t* testsuite/31_date_time/headers/date_time/functions_std.cc: Likewise.\n\t* testsuite/31_date_time/headers/date_time/synopsis.cc: Likewise.\n\t* testsuite/31_date_time/nanoseconds/requirements/traits.cc: Likewise.\n\t* testsuite/31_date_time/nanoseconds/requirements/duration.cc: Likewise.\n\t* testsuite/31_date_time/system_time/requirements: Likewise.\n\t* testsuite/31_date_time/system_time/requirements/traits.cc: Likewise.\n\t* testsuite/17_intro/headers/c++200x/all.cc: Adjust.\n\t* testsuite/17_intro/headers/c++200x/all_multiple_inclusion.cc: Adjust.\n\nFrom-SVN: r137736", "tree": {"sha": "2d76e3d8757792bd9701218ed5be3b73acbd8501", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2d76e3d8757792bd9701218ed5be3b73acbd8501"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d5740f0288bbe9ea79a7e92be9a0aee8d225986e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5740f0288bbe9ea79a7e92be9a0aee8d225986e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5740f0288bbe9ea79a7e92be9a0aee8d225986e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5740f0288bbe9ea79a7e92be9a0aee8d225986e/comments", "author": null, "committer": null, "parents": [{"sha": "2feaae2036b73d182f8ee0d72722c21ede9dbbbb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2feaae2036b73d182f8ee0d72722c21ede9dbbbb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2feaae2036b73d182f8ee0d72722c21ede9dbbbb"}], "stats": {"total": 643, "additions": 37, "deletions": 606}, "files": [{"sha": "dc9437e5a945a405c5f2df429e0145056e5fdf4b", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5740f0288bbe9ea79a7e92be9a0aee8d225986e/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5740f0288bbe9ea79a7e92be9a0aee8d225986e/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=d5740f0288bbe9ea79a7e92be9a0aee8d225986e", "patch": "@@ -1,3 +1,23 @@\n+2008-07-12  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* include/std/date_time: Remove, per N2549, in WP.\n+\t* src/date_time.cc: Likewise.\n+\t* config/abi/pre/gnu.ver: Remove <date_time> symbols.\n+\t* include/Makefile.am: Remove date_time in std headers.\n+\t* src/Makefile.am: Remove date_time.cc to source files.\n+\t* include/Makefile.in: Regenerate.\n+\t* src/Makefile.in: Likewise.\n+\t* testsuite/31_date_time/headers/date_time/types_std.cc: Remove.\n+\t* testsuite/31_date_time/headers/date_time/std_c++0x_neg.cc: Likewise.\n+\t* testsuite/31_date_time/headers/date_time/functions_std.cc: Likewise.\n+\t* testsuite/31_date_time/headers/date_time/synopsis.cc: Likewise.\n+\t* testsuite/31_date_time/nanoseconds/requirements/traits.cc: Likewise.\n+\t* testsuite/31_date_time/nanoseconds/requirements/duration.cc: Likewise.\n+\t* testsuite/31_date_time/system_time/requirements: Likewise.\n+\t* testsuite/31_date_time/system_time/requirements/traits.cc: Likewise.\n+\t* testsuite/17_intro/headers/c++200x/all.cc: Adjust.\n+\t* testsuite/17_intro/headers/c++200x/all_multiple_inclusion.cc: Adjust.\n+\n 2008-07-10  Johannes Singler  <singler@ira.uka.de>\n \n         * include/parallel/balanced_quicksort.h:"}, {"sha": "8327d10511f85ee2afd28b2c83b2e753c1c72e23", "filename": "libstdc++-v3/config/abi/pre/gnu.ver", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5740f0288bbe9ea79a7e92be9a0aee8d225986e/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpre%2Fgnu.ver", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5740f0288bbe9ea79a7e92be9a0aee8d225986e/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpre%2Fgnu.ver", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpre%2Fgnu.ver?ref=d5740f0288bbe9ea79a7e92be9a0aee8d225986e", "patch": "@@ -882,17 +882,6 @@ GLIBCXX_3.4.11 {\n     _ZSt20__throw_system_errorPKc;\n     _ZSt20__throw_system_errori;\n \n-    # date_time\n-    _ZSt15get_system_timev;\n- \n-    _ZNSt11nanoseconds16seconds_per_tickE;\n-    _ZNSt11nanoseconds16ticks_per_secondE;\n-    _ZNSt11nanoseconds12is_subsecondE;\n-\n-    _ZNSt11system_time16seconds_per_tickE;\n-    _ZNSt11system_time16ticks_per_secondE;\n-    _ZNSt11system_time12is_subsecondE;\n-\n     # char16_t and char32_t\n     _ZNSt14numeric_limitsIu8char*;\n "}, {"sha": "5d8358b42eb1dc544a5d3877d2812909b1c8b80a", "filename": "libstdc++-v3/include/Makefile.am", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5740f0288bbe9ea79a7e92be9a0aee8d225986e/libstdc%2B%2B-v3%2Finclude%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5740f0288bbe9ea79a7e92be9a0aee8d225986e/libstdc%2B%2B-v3%2Finclude%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2FMakefile.am?ref=d5740f0288bbe9ea79a7e92be9a0aee8d225986e", "patch": "@@ -34,7 +34,6 @@ std_headers = \\\n \t${std_srcdir}/c++0x_warning.h \\\n \t${std_srcdir}/complex \\\n \t${std_srcdir}/condition_variable \\\n-\t${std_srcdir}/date_time \\\n \t${std_srcdir}/deque \\\n \t${std_srcdir}/fstream \\\n \t${std_srcdir}/functional \\"}, {"sha": "5820f2612a4d1fb793ff08929c8c0b509349b3f2", "filename": "libstdc++-v3/include/Makefile.in", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5740f0288bbe9ea79a7e92be9a0aee8d225986e/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5740f0288bbe9ea79a7e92be9a0aee8d225986e/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2FMakefile.in?ref=d5740f0288bbe9ea79a7e92be9a0aee8d225986e", "patch": "@@ -287,7 +287,6 @@ std_headers = \\\n \t${std_srcdir}/c++0x_warning.h \\\n \t${std_srcdir}/complex \\\n \t${std_srcdir}/condition_variable \\\n-\t${std_srcdir}/date_time \\\n \t${std_srcdir}/deque \\\n \t${std_srcdir}/fstream \\\n \t${std_srcdir}/functional \\"}, {"sha": "2ad9516971546a2720eb9ef012d0d65dc56c3fed", "filename": "libstdc++-v3/include/std/date_time", "status": "removed", "additions": 0, "deletions": 245, "changes": 245, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2feaae2036b73d182f8ee0d72722c21ede9dbbbb/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fdate_time", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2feaae2036b73d182f8ee0d72722c21ede9dbbbb/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fdate_time", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fdate_time?ref=2feaae2036b73d182f8ee0d72722c21ede9dbbbb", "patch": "@@ -1,245 +0,0 @@\n-// <date_time> -*- C++ -*-\n-\n-// Copyright (C) 2008 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License\n-// along with this library; see the file COPYING.  If not, write to\n-// the Free Software Foundation, 51 Franklin Street, Fifth Floor,\n-// Boston, MA 02110-1301, USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-/** @file date_time\n- *  This is a Standard C++ Library header.\n- */\n-\n-#ifndef _GLIBCXX_DATE_TIME\n-#define _GLIBCXX_DATE_TIME 1\n-\n-#pragma GCC system_header\n-\n-#ifndef __GXX_EXPERIMENTAL_CXX0X__\n-# include <c++0x_warning.h>\n-#else\n-\n-#include <ctime>\n-\n-namespace std\n-{\n-  // duration types\n-\n-  /// nanoseconds\n-  class nanoseconds\n-  {\n-  public:\n-  \n-    // traits information\n-    typedef long long tick_type;\n-    static const tick_type ticks_per_second = 1000L * 1000 * 1000;\n-    static const tick_type seconds_per_tick = 0;\n-    static const bool is_subsecond = true;\n-  \n-    // construct/copy/destroy\n-    nanoseconds(long long __ns = 0) : _M_ns(__ns) { }\n-  \n-    // modifiers\n-    template<typename _RhsDuration>\n-      nanoseconds&\n-      operator+=(const _RhsDuration& __d);\n-  \n-    template<typename _RhsDuration>\n-      nanoseconds&\n-      operator-=(const _RhsDuration& __d);\n-  \n-    nanoseconds&\n-    operator*=(long __multiplier);\n-  \n-    nanoseconds&\n-    operator/=(long __divisor);\n-  \n-    // observers\n-    tick_type count() const { return _M_ns; }\n-  \n-    // operations\n-    nanoseconds operator-() const { return nanoseconds(-_M_ns); }\n-  \n-  private:\n-    tick_type _M_ns;\n-  };\n-  \n-  class microseconds;\n-  class milliseconds;\n-  class seconds;\n-  class minutes;\n-  class hours;\n-  \n-  /// timepoint type\n-  class system_time\n-  {\n-  public:\n-  \n-    // traits information\n-    typedef nanoseconds::tick_type tick_type;\n-    static const tick_type ticks_per_second = nanoseconds::ticks_per_second;\n-    static const tick_type seconds_per_tick = 0;\n-    static const bool is_subsecond = true;\n-  \n-    // create/copy/destroy\n-  \n-    system_time() : _M_sec(0), _M_nsec(0) { }\n-  \n-    explicit system_time(time_t __s, nanoseconds __ns = 0)\n-    : _M_sec(__s), _M_nsec(__ns.count()) { }\n-  \n-    time_t\n-    seconds_since_epoch() const { return _M_sec; }\n-  \n-    nanoseconds\n-    nanoseconds_since_epoch() const\n-    {\n-      return nanoseconds(_M_nsec + _M_sec * ticks_per_second);\n-    }\n-  \n-    // comparison functions\n-  \n-    bool\n-    operator==(const system_time& __rhs) const\n-    {\n-      const tick_type __ns = _M_nsec + _M_sec * ticks_per_second;\n-      const tick_type __xns = __rhs._M_nsec + __rhs._M_sec * ticks_per_second;\n-      return __ns == __xns;\n-    }\n-  \n-    bool\n-    operator!=(const system_time& __rhs) const\n-    {\n-      return !(*this == __rhs);\n-    }\n-  \n-    bool\n-    operator<(const system_time& __rhs) const\n-    {\n-      const tick_type __ns = _M_nsec + _M_sec * ticks_per_second;\n-      const tick_type __xns = __rhs._M_nsec + __rhs._M_sec * ticks_per_second;\n-      return __ns < __xns;\n-    }\n-  \n-    bool\n-    operator<=(const system_time& __rhs) const\n-    {\n-      return !(__rhs < *this);\n-    }\n-  \n-    bool\n-    operator>(const system_time& __rhs) const\n-    {\n-      return __rhs < *this;\n-    }\n-  \n-    bool\n-    operator>=(const system_time& __rhs) const\n-    {\n-      return !(*this < __rhs);\n-    }\n-  \n-    // arithmetic functions\n-    nanoseconds\n-    operator-(const system_time& __rhs) const\n-    {\n-      const tick_type __ns = _M_nsec + _M_sec * ticks_per_second;\n-      const tick_type __xns = __rhs._M_nsec + __rhs._M_sec * ticks_per_second;\n-      return nanoseconds(__ns - __xns);\n-    }\n-  \n-    template<typename _Duration>\n-      system_time\n-      operator+(const _Duration& __td) const;\n-  \n-    template<typename _Duration>\n-      system_time&\n-      operator+=(const _Duration& __td);\n-  \n-    template<typename _Duration>\n-      system_time\n-      operator-(const _Duration& __td) const;\n-  \n-    template<typename _Duration>\n-      system_time&\n-      operator-=(const _Duration& __td);\n-  \n-  public:\n-    std::time_t _M_sec;\n-    tick_type _M_nsec;\n-  };\n-  \n-  // non-member functions\n-  system_time\n-  get_system_time();\n-  \n-  template<typename _Duration>\n-    system_time\n-    operator+(const _Duration& __td, const system_time& __rhs);\n-  \n-  template<class _LhsDuration, class _RhsDuration>\n-    bool\n-    operator==(const _LhsDuration& __lhs, const _RhsDuration& __rhs);\n-  template<class _LhsDuration, class _RhsDuration>\n-    bool\n-    operator!=(const _LhsDuration& __lhs, const _RhsDuration& __rhs);\n-  \n-  template<class _LhsDuration, class _RhsDuration>\n-    bool\n-    operator<(const _LhsDuration& __lhs, const _RhsDuration& __rhs);\n-  template<class _LhsDuration, class _RhsDuration>\n-    bool\n-    operator<=(const _LhsDuration& __lhs, const _RhsDuration& __rhs);\n-  template<class _LhsDuration, class _RhsDuration>\n-    bool\n-    operator>(const _LhsDuration& __lhs, const _RhsDuration& __rhs);\n-  template<class _LhsDuration, class _RhsDuration>\n-    bool\n-    operator>=(const _LhsDuration& __lhs, const _RhsDuration& __rhs);\n-  \n-  template<typename _LhsDuration, typename _RhsDuration>\n-    struct __finest_duration;\n-  \n-  template<class _LhsDuration, class _RhsDuration>\n-    typename __finest_duration<_LhsDuration, _RhsDuration>::type\n-    operator+(const _LhsDuration& __lhs, const _RhsDuration& __rhs);\n-  template<class _LhsDuration, class _RhsDuration>\n-    typename __finest_duration<_LhsDuration, _RhsDuration>::type\n-    operator-(const _LhsDuration& __lhs, const _RhsDuration& __rhs);\n-  \n-  template<class _Duration>\n-    _Duration\n-    operator*(_Duration __lhs, long __rhs);\n-  template<class _Duration>\n-    _Duration\n-    operator*(long __lhs, _Duration __rhs);\n-  \n-  template<class _Duration>\n-    _Duration\n-    operator/(_Duration __lhs, long __rhs);\n-}\n-\n-#endif // __GXX_EXPERIMENTAL_CXX0X__\n-\n-#endif // _GLIBCXX_DATE_TIME"}, {"sha": "8d2cbf5e14b91a37b9f722109fe90ce58646cb15", "filename": "libstdc++-v3/src/Makefile.am", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5740f0288bbe9ea79a7e92be9a0aee8d225986e/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5740f0288bbe9ea79a7e92be9a0aee8d225986e/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am?ref=d5740f0288bbe9ea79a7e92be9a0aee8d225986e", "patch": "@@ -143,7 +143,6 @@ sources = \\\n \tcompatibility.cc \\\n \tcomplex_io.cc \\\n \tctype.cc \\\n-\tdate_time.cc \\\n \tdebug.cc \\\n \tfunctexcept.cc \\\n \thash.cc \\\n@@ -268,11 +267,6 @@ limits_c++0x.lo: limits_c++0x.cc\n limits_c++0x.o: limits_c++0x.cc\n \t$(CXXCOMPILE) -std=gnu++0x -c $<\n \n-date_time.lo: date_time.cc\n-\t$(LTCXXCOMPILE) -std=gnu++0x -c $<\n-date_time.o: date_time.cc\n-\t$(CXXCOMPILE) -std=gnu++0x -c $<\n-\n atomic.lo: atomic.cc\n \t$(LTCXXCOMPILE) -x c++ -std=gnu++0x -c $<\n atomic.o: atomic.cc"}, {"sha": "f0e98973d3f9f849a44f34fc34c14abcc8602848", "filename": "libstdc++-v3/src/Makefile.in", "status": "modified", "additions": 17, "deletions": 23, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5740f0288bbe9ea79a7e92be9a0aee8d225986e/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5740f0288bbe9ea79a7e92be9a0aee8d225986e/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in?ref=d5740f0288bbe9ea79a7e92be9a0aee8d225986e", "patch": "@@ -74,20 +74,20 @@ toolexeclibLTLIBRARIES_INSTALL = $(INSTALL)\n LTLIBRARIES = $(toolexeclib_LTLIBRARIES)\n am__libstdc___la_SOURCES_DIST = atomic.cc bitmap_allocator.cc \\\n \tpool_allocator.cc mt_allocator.cc codecvt.cc compatibility.cc \\\n-\tcomplex_io.cc ctype.cc date_time.cc debug.cc functexcept.cc \\\n-\thash.cc hash_c++0x.cc globals_io.cc hashtable.cc \\\n-\thashtable_c++0x.cc ios.cc ios_failure.cc ios_init.cc \\\n-\tios_locale.cc limits.cc limits_c++0x.cc list.cc debug_list.cc \\\n-\tlocale.cc locale_init.cc locale_facets.cc localename.cc \\\n-\tstdexcept.cc strstream.cc system_error.cc tree.cc \\\n-\tallocator-inst.cc concept-inst.cc fstream-inst.cc ext-inst.cc \\\n-\tios-inst.cc iostream-inst.cc istream-inst.cc istream.cc \\\n-\tlocale-inst.cc misc-inst.cc ostream-inst.cc sstream-inst.cc \\\n-\tstreambuf-inst.cc streambuf.cc string-inst.cc valarray-inst.cc \\\n-\twlocale-inst.cc wstring-inst.cc mutex.cc condition_variable.cc \\\n-\tatomicity.cc codecvt_members.cc collate_members.cc \\\n-\tctype_members.cc messages_members.cc monetary_members.cc \\\n-\tnumeric_members.cc time_members.cc basic_file.cc c++locale.cc \\\n+\tcomplex_io.cc ctype.cc debug.cc functexcept.cc hash.cc \\\n+\thash_c++0x.cc globals_io.cc hashtable.cc hashtable_c++0x.cc \\\n+\tios.cc ios_failure.cc ios_init.cc ios_locale.cc limits.cc \\\n+\tlimits_c++0x.cc list.cc debug_list.cc locale.cc locale_init.cc \\\n+\tlocale_facets.cc localename.cc stdexcept.cc strstream.cc \\\n+\tsystem_error.cc tree.cc allocator-inst.cc concept-inst.cc \\\n+\tfstream-inst.cc ext-inst.cc ios-inst.cc iostream-inst.cc \\\n+\tistream-inst.cc istream.cc locale-inst.cc misc-inst.cc \\\n+\tostream-inst.cc sstream-inst.cc streambuf-inst.cc streambuf.cc \\\n+\tstring-inst.cc valarray-inst.cc wlocale-inst.cc \\\n+\twstring-inst.cc mutex.cc condition_variable.cc atomicity.cc \\\n+\tcodecvt_members.cc collate_members.cc ctype_members.cc \\\n+\tmessages_members.cc monetary_members.cc numeric_members.cc \\\n+\ttime_members.cc basic_file.cc c++locale.cc \\\n \tcompatibility-ldbl.cc parallel_list.cc parallel_settings.cc\n am__objects_1 = atomicity.lo codecvt_members.lo collate_members.lo \\\n \tctype_members.lo messages_members.lo monetary_members.lo \\\n@@ -99,9 +99,9 @@ am__objects_4 = basic_file.lo c++locale.lo $(am__objects_2) \\\n \t$(am__objects_3)\n am__objects_5 = atomic.lo bitmap_allocator.lo pool_allocator.lo \\\n \tmt_allocator.lo codecvt.lo compatibility.lo complex_io.lo \\\n-\tctype.lo date_time.lo debug.lo functexcept.lo hash.lo \\\n-\thash_c++0x.lo globals_io.lo hashtable.lo hashtable_c++0x.lo \\\n-\tios.lo ios_failure.lo ios_init.lo ios_locale.lo limits.lo \\\n+\tctype.lo debug.lo functexcept.lo hash.lo hash_c++0x.lo \\\n+\tglobals_io.lo hashtable.lo hashtable_c++0x.lo ios.lo \\\n+\tios_failure.lo ios_init.lo ios_locale.lo limits.lo \\\n \tlimits_c++0x.lo list.lo debug_list.lo locale.lo locale_init.lo \\\n \tlocale_facets.lo localename.lo stdexcept.lo strstream.lo \\\n \tsystem_error.lo tree.lo allocator-inst.lo concept-inst.lo \\\n@@ -379,7 +379,6 @@ sources = \\\n \tcompatibility.cc \\\n \tcomplex_io.cc \\\n \tctype.cc \\\n-\tdate_time.cc \\\n \tdebug.cc \\\n \tfunctexcept.cc \\\n \thash.cc \\\n@@ -862,11 +861,6 @@ limits_c++0x.lo: limits_c++0x.cc\n limits_c++0x.o: limits_c++0x.cc\n \t$(CXXCOMPILE) -std=gnu++0x -c $<\n \n-date_time.lo: date_time.cc\n-\t$(LTCXXCOMPILE) -std=gnu++0x -c $<\n-date_time.o: date_time.cc\n-\t$(CXXCOMPILE) -std=gnu++0x -c $<\n-\n atomic.lo: atomic.cc\n \t$(LTCXXCOMPILE) -x c++ -std=gnu++0x -c $<\n atomic.o: atomic.cc"}, {"sha": "0286917b779543b46d25dd76bd0356a980700b09", "filename": "libstdc++-v3/src/date_time.cc", "status": "removed", "additions": 0, "deletions": 46, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2feaae2036b73d182f8ee0d72722c21ede9dbbbb/libstdc%2B%2B-v3%2Fsrc%2Fdate_time.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2feaae2036b73d182f8ee0d72722c21ede9dbbbb/libstdc%2B%2B-v3%2Fsrc%2Fdate_time.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fdate_time.cc?ref=2feaae2036b73d182f8ee0d72722c21ede9dbbbb", "patch": "@@ -1,46 +0,0 @@\n-// Copyright (C) 2008 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-#include <date_time>\n-\n-namespace std\n-{\n-  system_time\n-  get_system_time()\n-  {\n-    std::time_t sec = std::time(0);\n-    return system_time(sec);\n-  }\n-\n-  const nanoseconds::tick_type nanoseconds::ticks_per_second;\n-  const nanoseconds::tick_type nanoseconds::seconds_per_tick;\n-  const bool nanoseconds::is_subsecond;\n-\n-  const system_time::tick_type system_time::ticks_per_second;\n-  const system_time::tick_type system_time::seconds_per_tick;\n-  const bool system_time::is_subsecond;\n-}"}, {"sha": "7988666739abe2c8f6bf2ace25bcc9dc3ed01ae7", "filename": "libstdc++-v3/testsuite/17_intro/headers/c++200x/all.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5740f0288bbe9ea79a7e92be9a0aee8d225986e/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders%2Fc%2B%2B200x%2Fall.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5740f0288bbe9ea79a7e92be9a0aee8d225986e/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders%2Fc%2B%2B200x%2Fall.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders%2Fc%2B%2B200x%2Fall.cc?ref=d5740f0288bbe9ea79a7e92be9a0aee8d225986e", "patch": "@@ -97,7 +97,6 @@\n #include <bitset>\n #include <condition_variable>\n #include <complex>\n-#include <date_time>\n #include <deque>\n #include <exception>\n #include <fstream>"}, {"sha": "814fbc3a14451848ce42772acca0aa26bf9048cc", "filename": "libstdc++-v3/testsuite/17_intro/headers/c++200x/all_multiple_inclusion.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5740f0288bbe9ea79a7e92be9a0aee8d225986e/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders%2Fc%2B%2B200x%2Fall_multiple_inclusion.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5740f0288bbe9ea79a7e92be9a0aee8d225986e/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders%2Fc%2B%2B200x%2Fall_multiple_inclusion.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders%2Fc%2B%2B200x%2Fall_multiple_inclusion.cc?ref=d5740f0288bbe9ea79a7e92be9a0aee8d225986e", "patch": "@@ -94,7 +94,6 @@\n #include <array>\n #include <bitset>\n #include <complex>\n-#include <date_time>\n #include <deque>\n #include <exception>\n #include <fstream>\n@@ -205,7 +204,6 @@\n #include <array>\n #include <bitset>\n #include <complex>\n-#include <date_time>\n #include <deque>\n #include <exception>\n #include <fstream>"}, {"sha": "49b4ecac83b82342bd8231f76ddf1798d695e5ad", "filename": "libstdc++-v3/testsuite/31_date_time/headers/date_time/functions_std.cc", "status": "removed", "additions": 0, "deletions": 27, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2feaae2036b73d182f8ee0d72722c21ede9dbbbb/libstdc%2B%2B-v3%2Ftestsuite%2F31_date_time%2Fheaders%2Fdate_time%2Ffunctions_std.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2feaae2036b73d182f8ee0d72722c21ede9dbbbb/libstdc%2B%2B-v3%2Ftestsuite%2F31_date_time%2Fheaders%2Fdate_time%2Ffunctions_std.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F31_date_time%2Fheaders%2Fdate_time%2Ffunctions_std.cc?ref=2feaae2036b73d182f8ee0d72722c21ede9dbbbb", "patch": "@@ -1,27 +0,0 @@\n-// { dg-do compile }\n-// { dg-options \"-std=gnu++0x\" }\n-\n-// Copyright (C) 2008 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n-// USA.\n-\n-#include <date_time>\n-\n-namespace gnu\n-{\n-  using std::get_system_time;\n-}"}, {"sha": "9b98b628c77d4ebd3647f2380a9f4060607bdcef", "filename": "libstdc++-v3/testsuite/31_date_time/headers/date_time/std_c++0x_neg.cc", "status": "removed", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2feaae2036b73d182f8ee0d72722c21ede9dbbbb/libstdc%2B%2B-v3%2Ftestsuite%2F31_date_time%2Fheaders%2Fdate_time%2Fstd_c%2B%2B0x_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2feaae2036b73d182f8ee0d72722c21ede9dbbbb/libstdc%2B%2B-v3%2Ftestsuite%2F31_date_time%2Fheaders%2Fdate_time%2Fstd_c%2B%2B0x_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F31_date_time%2Fheaders%2Fdate_time%2Fstd_c%2B%2B0x_neg.cc?ref=2feaae2036b73d182f8ee0d72722c21ede9dbbbb", "patch": "@@ -1,24 +0,0 @@\n-// { dg-do compile }\n-// { dg-options \"-std=gnu++98\" }\n-\n-// Copyright (C) 2008 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n-// USA.\n-\n-#include <date_time>  // { dg-excess-errors \"In file included from\" }\n-\n-// { dg-error \"upcoming ISO\" \"\" { target *-*-* } 36 } "}, {"sha": "e86c9b784bf021e86db1e214536c9b38b069b62d", "filename": "libstdc++-v3/testsuite/31_date_time/headers/date_time/synopsis.cc", "status": "removed", "additions": 0, "deletions": 70, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2feaae2036b73d182f8ee0d72722c21ede9dbbbb/libstdc%2B%2B-v3%2Ftestsuite%2F31_date_time%2Fheaders%2Fdate_time%2Fsynopsis.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2feaae2036b73d182f8ee0d72722c21ede9dbbbb/libstdc%2B%2B-v3%2Ftestsuite%2F31_date_time%2Fheaders%2Fdate_time%2Fsynopsis.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F31_date_time%2Fheaders%2Fdate_time%2Fsynopsis.cc?ref=2feaae2036b73d182f8ee0d72722c21ede9dbbbb", "patch": "@@ -1,70 +0,0 @@\n-// { dg-do compile }\n-// { dg-options \"-std=gnu++0x\" }\n-\n-// Copyright (C) 2008 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n-// USA.\n-\n-#include <date_time>\n-\n-namespace std {\n-  // duration types\n-  class nanoseconds;\n-  class microseconds;\n-  class milliseconds;\n-  class seconds;\n-  class minutes;\n-  class hours;\n-\n-  // timepoint type\n-  class system_time;\n-\n-  // non-member functions\n-  system_time get_system_time();\n-\n-  template<typename Duration>\n-    system_time operator+(const Duration& td, const system_time& rhs);\n-\n-  template <class LhsDuration, class RhsDuration>\n-    bool operator==(const LhsDuration& lhs, const RhsDuration& rhs);\n-  template <class LhsDuration, class RhsDuration>\n-    bool operator!=(const LhsDuration& lhs, const RhsDuration& rhs);\n-\n-  template <class LhsDuration, class RhsDuration>\n-    bool operator< (const LhsDuration& lhs, const RhsDuration& rhs);\n-  template <class LhsDuration, class RhsDuration>\n-    bool operator<=(const LhsDuration& lhs, const RhsDuration& rhs);\n-  template <class LhsDuration, class RhsDuration>\n-    bool operator> (const LhsDuration& lhs, const RhsDuration& rhs);\n-  template <class LhsDuration, class RhsDuration>\n-    bool operator>=(const LhsDuration& lhs, const RhsDuration& rhs);\n-\n-/*\n-  template <class LhsDuration, class RhsDuration>\n-    FinestDuration operator+(const LhsDuration& lhs, const RhsDuration& rhs);\n-  template <class LhsDuration, class RhsDuration>\n-    FinestDuration operator-(const LhsDuration& lhs, const RhsDuration& rhs);\n-*/\n-  \n-  template <class Duration>\n-    Duration operator*(Duration lhs, long rhs);\n-  template <class Duration>\n-    Duration operator*(long lhs, Duration rhs);\n-\n-  template <class Duration>\n-    Duration operator/(Duration lhs, long rhs);\n-}"}, {"sha": "f8fc5953c5b929a397badbb3e4ff2e0cdec80499", "filename": "libstdc++-v3/testsuite/31_date_time/headers/date_time/types_std.cc", "status": "removed", "additions": 0, "deletions": 33, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2feaae2036b73d182f8ee0d72722c21ede9dbbbb/libstdc%2B%2B-v3%2Ftestsuite%2F31_date_time%2Fheaders%2Fdate_time%2Ftypes_std.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2feaae2036b73d182f8ee0d72722c21ede9dbbbb/libstdc%2B%2B-v3%2Ftestsuite%2F31_date_time%2Fheaders%2Fdate_time%2Ftypes_std.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F31_date_time%2Fheaders%2Fdate_time%2Ftypes_std.cc?ref=2feaae2036b73d182f8ee0d72722c21ede9dbbbb", "patch": "@@ -1,33 +0,0 @@\n-// { dg-do compile }\n-// { dg-options \"-std=gnu++0x\" }\n-\n-// Copyright (C) 2008 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n-// USA.\n-\n-#include <date_time>\n-\n-namespace gnu\n-{\n-  typedef std::nanoseconds t1;\n-  typedef std::microseconds t2;\n-  typedef std::milliseconds t3;\n-  typedef std::seconds t4;\n-  typedef std::minutes t5;\n-  typedef std::hours t6;\n-  typedef std::system_time t7;\n-}"}, {"sha": "ca6e2cf374aafe5cd4dde75ca49c5ac51ac97261", "filename": "libstdc++-v3/testsuite/31_date_time/nanoseconds/requirements/duration.cc", "status": "removed", "additions": 0, "deletions": 50, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2feaae2036b73d182f8ee0d72722c21ede9dbbbb/libstdc%2B%2B-v3%2Ftestsuite%2F31_date_time%2Fnanoseconds%2Frequirements%2Fduration.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2feaae2036b73d182f8ee0d72722c21ede9dbbbb/libstdc%2B%2B-v3%2Ftestsuite%2F31_date_time%2Fnanoseconds%2Frequirements%2Fduration.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F31_date_time%2Fnanoseconds%2Frequirements%2Fduration.cc?ref=2feaae2036b73d182f8ee0d72722c21ede9dbbbb", "patch": "@@ -1,50 +0,0 @@\n-// { dg-do compile }\n-// { dg-options \"-std=gnu++0x\" }\n-\n-// Copyright (C) 2008 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n-// USA.\n-\n-#include <date_time>\n-\n-namespace gnu\n-{\n-  bool\n-  test_nanoseconds_is_duration()\n-  {\n-    typedef std::nanoseconds D;\n-    D d;\n-    D e(d);\n-    d == e;\n-    d < e;\n-    d = e;\n-\n-    typedef D::tick_type tick_type;\n-    tick_type t1 = D::ticks_per_second;\n-    tick_type t2 = D::seconds_per_tick;\n-    bool b1 = D::is_subsecond;\n-    tick_type t3 = d.count();\n-    -d;\n-\n-    d += e;\n-    d -= e;\n-    d *= static_cast<long>(1);\n-    d /= static_cast<long>(1);\n-\n-    return b1 || t1 || t2 || t3;\n-  }\n-}"}, {"sha": "53f36180ea4af74808fafc7e397c508b9cb27bb8", "filename": "libstdc++-v3/testsuite/31_date_time/nanoseconds/requirements/traits.cc", "status": "removed", "additions": 0, "deletions": 33, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2feaae2036b73d182f8ee0d72722c21ede9dbbbb/libstdc%2B%2B-v3%2Ftestsuite%2F31_date_time%2Fnanoseconds%2Frequirements%2Ftraits.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2feaae2036b73d182f8ee0d72722c21ede9dbbbb/libstdc%2B%2B-v3%2Ftestsuite%2F31_date_time%2Fnanoseconds%2Frequirements%2Ftraits.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F31_date_time%2Fnanoseconds%2Frequirements%2Ftraits.cc?ref=2feaae2036b73d182f8ee0d72722c21ede9dbbbb", "patch": "@@ -1,33 +0,0 @@\n-// { dg-do compile }\n-// { dg-options \"-std=gnu++0x\" }\n-\n-// Copyright (C) 2008 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n-// USA.\n-\n-#include <date_time>\n-\n-namespace gnu\n-{\n-  void\n-  test_nanoseconds_traits()\n-  {\n-    static_assert(std::nanoseconds::ticks_per_second == 1000L * 1000 * 1000, \"FIXME\");\n-    static_assert(std::nanoseconds::seconds_per_tick == 0, \"FIXME\");\n-    static_assert(std::nanoseconds::is_subsecond == true, \"FIXME\");\n-  }\n-}"}, {"sha": "0310333a6203d52766f6230320ddb7c96f4d1264", "filename": "libstdc++-v3/testsuite/31_date_time/system_time/requirements/traits.cc", "status": "removed", "additions": 0, "deletions": 33, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2feaae2036b73d182f8ee0d72722c21ede9dbbbb/libstdc%2B%2B-v3%2Ftestsuite%2F31_date_time%2Fsystem_time%2Frequirements%2Ftraits.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2feaae2036b73d182f8ee0d72722c21ede9dbbbb/libstdc%2B%2B-v3%2Ftestsuite%2F31_date_time%2Fsystem_time%2Frequirements%2Ftraits.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F31_date_time%2Fsystem_time%2Frequirements%2Ftraits.cc?ref=2feaae2036b73d182f8ee0d72722c21ede9dbbbb", "patch": "@@ -1,33 +0,0 @@\n-// { dg-do compile }\n-// { dg-options \"-std=gnu++0x\" }\n-\n-// Copyright (C) 2008 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n-// USA.\n-\n-#include <date_time>\n-\n-namespace gnu\n-{\n-  void\n-  test_system_time_traits()\n-  {\n-    static_assert(std::nanoseconds::ticks_per_second == std::nanoseconds::ticks_per_second, \"FIXME\");\n-    static_assert(std::system_time::seconds_per_tick == 0, \"FIXME\");\n-    static_assert(std::system_time::is_subsecond == true, \"FIXME\");\n-  }\n-}"}]}