{"sha": "8b1c5fd0255ca3710cfeb86e5a2c2c50d1000ea9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGIxYzVmZDAyNTVjYTM3MTBjZmViODZlNWEyYzJjNTBkMTAwMGVhOQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2000-11-06T10:42:20Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2000-11-06T10:42:20Z"}, "message": "sparc.md (adddi3): If operands[2] is 4096 and operands[1] is constant...\n\n\t* config/sparc/sparc.md (adddi3): If operands[2] is 4096 and\n\toperands[1] is constant, calculate the sum and generate movdi.\n\t(addsi3): Similarly.  Use SImode in call to arith_4096_operand.\n\t(subsi3): Use SImode in call to arith_4096_operand.\n\n\t* gcc.c-torture/execute/20001031-1.c: New test.\n\nFrom-SVN: r37274", "tree": {"sha": "93f76c20cec258871e34c34edb6c9c73abb25f6e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/93f76c20cec258871e34c34edb6c9c73abb25f6e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8b1c5fd0255ca3710cfeb86e5a2c2c50d1000ea9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b1c5fd0255ca3710cfeb86e5a2c2c50d1000ea9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b1c5fd0255ca3710cfeb86e5a2c2c50d1000ea9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b1c5fd0255ca3710cfeb86e5a2c2c50d1000ea9/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a0115140d05f5dd8b2206a3c9ab1f930730fba3e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0115140d05f5dd8b2206a3c9ab1f930730fba3e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0115140d05f5dd8b2206a3c9ab1f930730fba3e"}], "stats": {"total": 78, "additions": 70, "deletions": 8}, "files": [{"sha": "530cc60d33c67a7ee52e375e2d653f51ef7cc7b4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b1c5fd0255ca3710cfeb86e5a2c2c50d1000ea9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b1c5fd0255ca3710cfeb86e5a2c2c50d1000ea9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8b1c5fd0255ca3710cfeb86e5a2c2c50d1000ea9", "patch": "@@ -1,3 +1,10 @@\n+2000-11-06  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* config/sparc/sparc.md (adddi3): If operands[2] is 4096 and\n+\toperands[1] is constant, calculate the sum and generate movdi.\n+\t(addsi3): Similarly.  Use SImode in call to arith_4096_operand.\n+\t(subsi3): Use SImode in call to arith_4096_operand.\n+\n 2000-11-06  Jakub Jelinek  <jakub@redhat.com>\n \n \t* config/sparc/sparc.h (ASM_OUTPUT_MI_THUNK): On sparc64 we need to"}, {"sha": "93734f9d3866e8c957ab32a3f62b998d76a2f94f", "filename": "gcc/config/sparc/sparc.md", "status": "modified", "additions": 22, "deletions": 8, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b1c5fd0255ca3710cfeb86e5a2c2c50d1000ea9/gcc%2Fconfig%2Fsparc%2Fsparc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b1c5fd0255ca3710cfeb86e5a2c2c50d1000ea9/gcc%2Fconfig%2Fsparc%2Fsparc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.md?ref=8b1c5fd0255ca3710cfeb86e5a2c2c50d1000ea9", "patch": "@@ -5539,6 +5539,8 @@\n   \"\"\n   \"\n {\n+  HOST_WIDE_INT i;\n+\n   if (! TARGET_ARCH64)\n     {\n       emit_insn (gen_rtx_PARALLEL (VOIDmode, gen_rtvec (2,\n@@ -5551,9 +5553,17 @@\n     }\n   if (arith_double_4096_operand(operands[2], DImode))\n     {\n-      emit_insn (gen_rtx_SET (VOIDmode, operands[0],\n-\t\t\t      gen_rtx_MINUS (DImode, operands[1],\n-\t\t\t\t\t     GEN_INT(-4096))));\n+      switch (GET_CODE (operands[1]))\n+\t{\n+\tcase CONST_INT: i = INTVAL (operands[1]); break;\n+\tcase CONST_DOUBLE: i = CONST_DOUBLE_LOW (operands[1]); break;\n+\tdefault:\n+\t  emit_insn (gen_rtx_SET (VOIDmode, operands[0],\n+\t\t\t\t  gen_rtx_MINUS (DImode, operands[1],\n+\t\t\t\t\t\t GEN_INT(-4096))));\n+\t  DONE;\n+\t}\n+      emit_insn (gen_movdi (operands[0], GEN_INT (i + 4096)));\n       DONE;\n     }\n }\")\n@@ -5768,11 +5778,15 @@\n   \"\"\n   \"\n {\n-  if (arith_4096_operand(operands[2], DImode))\n+  if (arith_4096_operand(operands[2], SImode))\n     {\n-      emit_insn (gen_rtx_SET (VOIDmode, operands[0],\n-\t\t\t      gen_rtx_MINUS (SImode, operands[1],\n-\t\t\t\t\t     GEN_INT(-4096))));\n+      if (GET_CODE (operands[1]) == CONST_INT)\n+\temit_insn (gen_movsi (operands[0],\n+\t\t\t      GEN_INT (INTVAL (operands[1]) + 4096)));\n+      else\n+\temit_insn (gen_rtx_SET (VOIDmode, operands[0],\n+\t\t\t\tgen_rtx_MINUS (SImode, operands[1],\n+\t\t\t\t\t       GEN_INT(-4096))));\n       DONE;\n     }\n }\")\n@@ -5967,7 +5981,7 @@\n   \"\"\n   \"\n {\n-  if (arith_4096_operand(operands[2], DImode))\n+  if (arith_4096_operand(operands[2], SImode))\n     {\n       emit_insn (gen_rtx_SET (VOIDmode, operands[0],\n \t\t\t      gen_rtx_PLUS (SImode, operands[1],"}, {"sha": "46ec3b67a69f6733aa73458b412d0e2332a040ea", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b1c5fd0255ca3710cfeb86e5a2c2c50d1000ea9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b1c5fd0255ca3710cfeb86e5a2c2c50d1000ea9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8b1c5fd0255ca3710cfeb86e5a2c2c50d1000ea9", "patch": "@@ -1,3 +1,7 @@\n+2000-11-06  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gcc.c-torture/execute/20001031-1.c: New test.\n+\n 2000-11-04  Mark Mitchell  <mark@codesourcery.com>\n \n \t* g++.old-deja/g++.brendan/misc13.C: Put `strlen' in `std'"}, {"sha": "a2a6c830a21fca33093e8b6383e7ad2c75b2ba39", "filename": "gcc/testsuite/gcc.c-torture/execute/20001031-1.c", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b1c5fd0255ca3710cfeb86e5a2c2c50d1000ea9/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20001031-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b1c5fd0255ca3710cfeb86e5a2c2c50d1000ea9/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20001031-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20001031-1.c?ref=8b1c5fd0255ca3710cfeb86e5a2c2c50d1000ea9", "patch": "@@ -0,0 +1,37 @@\n+extern void abort (void);\n+extern void exit (int);\n+\n+void t1 (int x)\n+{\n+  if (x != 4100)\n+    abort ();\n+}\n+\n+int t2 (void)\n+{\n+  int i;\n+  t1 ((i = 4096) + 4);\n+  return i;\n+}\n+\n+void t3 (long long x)\n+{\n+  if (x != 0x80000fffULL)\n+    abort ();\n+}\n+\n+long long t4 (void)\n+{\n+  long long i;\n+  t3 ((i = 4096) + 0x7fffffffULL);\n+  return i;\n+}\n+\n+main ()\n+{\n+  if (t2 () != 4096)\n+    abort ();\n+  if (t4 () != 4096)\n+    abort ();\n+  exit (0);\n+}"}]}