{"sha": "7026707d152f30b0615dd3c6eabd62bedd5c30a4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzAyNjcwN2QxNTJmMzBiMDYxNWRkM2M2ZWFiZDYyYmVkZDVjMzBhNA==", "commit": {"author": {"name": "Bryce McKinlay", "email": "bryce@waitaki.otago.ac.nz", "date": "2001-05-06T13:42:11Z"}, "committer": {"name": "Bryce McKinlay", "email": "bryce@gcc.gnu.org", "date": "2001-05-06T13:42:11Z"}, "message": "Class.h (_Jv_Self): New union type.\n\n\t* java/lang/Class.h (_Jv_Self): New union type.\n\t(Class): Manipulate vtable pointer via _Jv_Self union. Thanks to\n\tJeff Sturm and Fergus Henderson.\n\n\t* java/lang/ClassLoader.java: Remove dead code fragment.\n\nFrom-SVN: r41876", "tree": {"sha": "f62a0ac2c76e3f6fc5e76e82edf15c3f0d846aa4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f62a0ac2c76e3f6fc5e76e82edf15c3f0d846aa4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7026707d152f30b0615dd3c6eabd62bedd5c30a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7026707d152f30b0615dd3c6eabd62bedd5c30a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7026707d152f30b0615dd3c6eabd62bedd5c30a4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7026707d152f30b0615dd3c6eabd62bedd5c30a4/comments", "author": null, "committer": null, "parents": [{"sha": "2a7f63c4366e4dea8e122f33cc83ccc24d20ed57", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a7f63c4366e4dea8e122f33cc83ccc24d20ed57", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a7f63c4366e4dea8e122f33cc83ccc24d20ed57"}], "stats": {"total": 26, "additions": 19, "deletions": 7}, "files": [{"sha": "5a95e2fc84d383cd175d2d20e4053e196a3dfd8d", "filename": "libjava/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7026707d152f30b0615dd3c6eabd62bedd5c30a4/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7026707d152f30b0615dd3c6eabd62bedd5c30a4/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=7026707d152f30b0615dd3c6eabd62bedd5c30a4", "patch": "@@ -1,3 +1,13 @@\n+2001-05-06  Bryce McKinlay  <bryce@waitaki.otago.ac.nz>\n+\n+\t* java/lang/Class.h (_Jv_Self): New union type.\n+\t(Class): Manipulate vtable pointer via _Jv_Self union. Thanks to\n+\tJeff Sturm and Fergus Henderson.\n+\n+2001-05-06  Bryce McKinlay  <bryce@waitaki.otago.ac.nz>\n+\n+\t* java/lang/ClassLoader.java: Remove dead code fragment.\n+\n 2001-05-03  Martin Kahlert  <martin.kahlert@infineon.com>\n \n \t* jni.cc (_Jv_JNI_GetPrimitiveArrayRegion): Fixed bounds"}, {"sha": "8cce30f3f6e8e70a28cf66f33db3f67669d57874", "filename": "libjava/java/lang/Class.h", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7026707d152f30b0615dd3c6eabd62bedd5c30a4/libjava%2Fjava%2Flang%2FClass.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7026707d152f30b0615dd3c6eabd62bedd5c30a4/libjava%2Fjava%2Flang%2FClass.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FClass.h?ref=7026707d152f30b0615dd3c6eabd62bedd5c30a4", "patch": "@@ -99,6 +99,13 @@ struct _Jv_ifaces\n   jshort count;\n };\n \n+// Used for vtable pointer manipulation.\n+union _Jv_Self\n+{\n+  char *vtable_ptr;\n+  jclass self;\n+};\n+\n #define JV_PRIMITIVE_VTABLE ((_Jv_VTable *) -1)\n \n #define JV_CLASS(Obj) ((jclass) (*(_Jv_VTable **) Obj)->clas)\n@@ -211,9 +218,8 @@ class java::lang::Class : public java::lang::Object\n \n     // C++ ctors set the vtbl pointer to point at an offset inside the vtable\n     // object. That doesn't work for Java, so this hack adjusts it back.\n-    void *p =  ((void **)this)[0];\n-    ((void **)this)[0] = (void *)((char *)p-2*sizeof (void *));\n-\n+    ((_Jv_Self *)this)->vtable_ptr -= 2 * sizeof (void *);\n+    \n     // We must initialize every field of the class.  We do this in the\n     // same order they are declared in Class.h, except for fields that\n     // are initialized to NULL."}, {"sha": "9c4b3c8ad756ba3a7c2d442d4d5a33241b5218ff", "filename": "libjava/java/lang/ClassLoader.java", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7026707d152f30b0615dd3c6eabd62bedd5c30a4/libjava%2Fjava%2Flang%2FClassLoader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7026707d152f30b0615dd3c6eabd62bedd5c30a4/libjava%2Fjava%2Flang%2FClassLoader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FClassLoader.java?ref=7026707d152f30b0615dd3c6eabd62bedd5c30a4", "patch": "@@ -91,10 +91,6 @@ public Class loadClass(String name)\n     return loadClass (name, false);\n   }\n   \n-  /* findClass implementation for the system classloader. \n-  native Class systemFindClass(String name)\n-    throws java.lang.ClassNotFoundException;\n-\n   /** \n    * Loads the class by the given name.  The default implementation\n    * will search for the class in the following order (similar to jdk 1.2)"}]}