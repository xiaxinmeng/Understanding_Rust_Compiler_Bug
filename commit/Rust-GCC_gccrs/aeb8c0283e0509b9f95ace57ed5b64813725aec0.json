{"sha": "aeb8c0283e0509b9f95ace57ed5b64813725aec0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWViOGMwMjgzZTA1MDliOWY5NWFjZTU3ZWQ1YjY0ODEzNzI1YWVjMA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2018-01-27T10:28:20Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2018-01-27T10:28:20Z"}, "message": "re PR fortran/84065 (string_1.f90 fails since r256944)\n\n\tPR fortran/84065\n\t* decl.c (add_init_expr_to_sym): Ignore initializers for too large\n\tlengths.\n\nFrom-SVN: r257121", "tree": {"sha": "741892b11a86773573dd6be77f103182878589d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/741892b11a86773573dd6be77f103182878589d2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aeb8c0283e0509b9f95ace57ed5b64813725aec0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aeb8c0283e0509b9f95ace57ed5b64813725aec0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aeb8c0283e0509b9f95ace57ed5b64813725aec0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aeb8c0283e0509b9f95ace57ed5b64813725aec0/comments", "author": null, "committer": null, "parents": [{"sha": "d76ba10db121e71a7a668b40df259a2893086da3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d76ba10db121e71a7a668b40df259a2893086da3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d76ba10db121e71a7a668b40df259a2893086da3"}], "stats": {"total": 46, "additions": 31, "deletions": 15}, "files": [{"sha": "8660530c07388a09d8f6f0b2d3a0f73667888988", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aeb8c0283e0509b9f95ace57ed5b64813725aec0/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aeb8c0283e0509b9f95ace57ed5b64813725aec0/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=aeb8c0283e0509b9f95ace57ed5b64813725aec0", "patch": "@@ -1,6 +1,12 @@\n+2018-01-27  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR fortran/84065\n+\t* decl.c (add_init_expr_to_sym): Ignore initializers for too large\n+\tlengths.\n+\n 2018-01-26  Damian Rouson  <damian@sourceryinstitute.org>\n-\tAlessandro Fanfarillo  <fanfarillo.gcc@gmail.com>\n-\tSoren Rasmussen  <s.c.rasmussen@gmail.com>\n+\t    Alessandro Fanfarillo  <fanfarillo.gcc@gmail.com>\n+\t    Soren Rasmussen  <s.c.rasmussen@gmail.com>\n \n \tPartial support for Fortran 2018 teams features.\n "}, {"sha": "307caa215d68a754fdd4dc1d58362161721328b5", "filename": "gcc/fortran/decl.c", "status": "modified", "additions": 23, "deletions": 13, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aeb8c0283e0509b9f95ace57ed5b64813725aec0/gcc%2Ffortran%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aeb8c0283e0509b9f95ace57ed5b64813725aec0/gcc%2Ffortran%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdecl.c?ref=aeb8c0283e0509b9f95ace57ed5b64813725aec0", "patch": "@@ -1757,22 +1757,32 @@ add_init_expr_to_sym (const char *name, gfc_expr **initp, locus *var_locus)\n \t      if (!gfc_specification_expr (sym->ts.u.cl->length))\n \t\treturn false;\n \n-\t      HOST_WIDE_INT len = gfc_mpz_get_hwi (sym->ts.u.cl->length->value.integer);\n-\n-\t      if (init->expr_type == EXPR_CONSTANT)\n-\t\tgfc_set_constant_character_len (len, init, -1);\n-\t      else if (init->expr_type == EXPR_ARRAY)\n+\t      int k = gfc_validate_kind (BT_INTEGER, gfc_charlen_int_kind,\n+\t\t\t\t\t false);\n+\t      /* resolve_charlen will complain later on if the length\n+\t\t is too large.  Just skeep the initialization in that case.  */\n+\t      if (mpz_cmp (sym->ts.u.cl->length->value.integer,\n+\t\t\t   gfc_integer_kinds[k].huge) <= 0)\n \t\t{\n-\t\t  gfc_constructor *c;\n+\t\t  HOST_WIDE_INT len\n+\t\t    = gfc_mpz_get_hwi (sym->ts.u.cl->length->value.integer);\n+\n+\t\t  if (init->expr_type == EXPR_CONSTANT)\n+\t\t    gfc_set_constant_character_len (len, init, -1);\n+\t\t  else if (init->expr_type == EXPR_ARRAY)\n+\t\t    {\n+\t\t      gfc_constructor *c;\n \n-\t\t  /* Build a new charlen to prevent simplification from\n-\t\t     deleting the length before it is resolved.  */\n-\t\t  init->ts.u.cl = gfc_new_charlen (gfc_current_ns, NULL);\n-\t\t  init->ts.u.cl->length = gfc_copy_expr (sym->ts.u.cl->length);\n+\t\t      /* Build a new charlen to prevent simplification from\n+\t\t\t deleting the length before it is resolved.  */\n+\t\t      init->ts.u.cl = gfc_new_charlen (gfc_current_ns, NULL);\n+\t\t      init->ts.u.cl->length\n+\t\t\t= gfc_copy_expr (sym->ts.u.cl->length);\n \n-\t\t  for (c = gfc_constructor_first (init->value.constructor);\n-\t\t       c; c = gfc_constructor_next (c))\n-\t\t    gfc_set_constant_character_len (len, c->expr, -1);\n+\t\t      for (c = gfc_constructor_first (init->value.constructor);\n+\t\t\t   c; c = gfc_constructor_next (c))\n+\t\t\tgfc_set_constant_character_len (len, c->expr, -1);\n+\t\t    }\n \t\t}\n \t    }\n \t}"}]}