{"sha": "616f21dfdebc8f32cc5502d19eb248002911e42c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjE2ZjIxZGZkZWJjOGYzMmNjNTUwMmQxOWViMjQ4MDAyOTExZTQyYw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2009-05-29T15:38:20Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2009-05-29T15:38:20Z"}, "message": "re PR middle-end/40291 (ICE on unprototyped memcmp with long long last argument)\n\n\tPR middle-end/40291\n\t* builtins.c (expand_builtin_memcmp): Convert len to sizetype\n\tbefore expansion.\n\n\t* gcc.c-torture/compile/pr40291.c: New test.\n\nFrom-SVN: r147978", "tree": {"sha": "9f03717fa8823eb6b42bf6ada0d75f1c19ec49a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9f03717fa8823eb6b42bf6ada0d75f1c19ec49a6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/616f21dfdebc8f32cc5502d19eb248002911e42c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/616f21dfdebc8f32cc5502d19eb248002911e42c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/616f21dfdebc8f32cc5502d19eb248002911e42c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/616f21dfdebc8f32cc5502d19eb248002911e42c/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "da7ba240d63c597e65eb0b5ba4074969b89606e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da7ba240d63c597e65eb0b5ba4074969b89606e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da7ba240d63c597e65eb0b5ba4074969b89606e9"}], "stats": {"total": 19, "additions": 17, "deletions": 2}, "files": [{"sha": "f864337629dc79ab2968190303e569b5b46425d4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/616f21dfdebc8f32cc5502d19eb248002911e42c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/616f21dfdebc8f32cc5502d19eb248002911e42c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=616f21dfdebc8f32cc5502d19eb248002911e42c", "patch": "@@ -1,3 +1,9 @@\n+2009-05-29  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/40291\n+\t* builtins.c (expand_builtin_memcmp): Convert len to sizetype\n+\tbefore expansion.\n+\n 2009-05-29  Andrey Belevantsev  <abel@ispras.ru>\n \n \tPR rtl-optimization/40101"}, {"sha": "6d9f282668999f70e40bcf3ef6c4da68b154e680", "filename": "gcc/builtins.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/616f21dfdebc8f32cc5502d19eb248002911e42c/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/616f21dfdebc8f32cc5502d19eb248002911e42c/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=616f21dfdebc8f32cc5502d19eb248002911e42c", "patch": "@@ -4189,7 +4189,7 @@ expand_builtin_memcmp (tree exp, rtx target, enum machine_mode mode)\n \n     arg1_rtx = get_memory_rtx (arg1, len);\n     arg2_rtx = get_memory_rtx (arg2, len);\n-    arg3_rtx = expand_normal (len);\n+    arg3_rtx = expand_normal (fold_convert (sizetype, len));\n \n     /* Set MEM_SIZE as appropriate.  */\n     if (GET_CODE (arg3_rtx) == CONST_INT)"}, {"sha": "e8577143ff8409bfea90167697abaf8486a82201", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/616f21dfdebc8f32cc5502d19eb248002911e42c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/616f21dfdebc8f32cc5502d19eb248002911e42c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=616f21dfdebc8f32cc5502d19eb248002911e42c", "patch": "@@ -1,5 +1,8 @@\n 2009-05-29  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR middle-end/40291\n+\t* gcc.c-torture/compile/pr40291.c: New test.\n+\n \tPR target/40017\n \t* gcc.target/powerpc/altivec-types-1.c: Don't expect error for\n \t__vector _Bool.\n@@ -22,7 +25,6 @@\n \t* g++.dg/template/canon-type-6.C: Likewise.\n \t* g++.dg/template/canon-type-7.C: Likewise.\n \n-\n 2009-05-28  Dave Korn  <dave.korn.cygwin@gmail.com>\n             Uros Bizjak  <ubizjak@gmail.com>\n             Danny Smith  <dansmister@gmail.com>"}, {"sha": "d50bbee66080245e7efdc36dcf0bebe8a18fe9a0", "filename": "gcc/testsuite/gcc.c-torture/compile/pr40291.c", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/616f21dfdebc8f32cc5502d19eb248002911e42c/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr40291.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/616f21dfdebc8f32cc5502d19eb248002911e42c/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr40291.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr40291.c?ref=616f21dfdebc8f32cc5502d19eb248002911e42c", "patch": "@@ -0,0 +1,7 @@\n+/* PR middle-end/40291 */\n+\n+int\n+foo (void *x, char *y, unsigned long long z)\n+{\n+  return memcmp (x, y, z);\n+}"}]}