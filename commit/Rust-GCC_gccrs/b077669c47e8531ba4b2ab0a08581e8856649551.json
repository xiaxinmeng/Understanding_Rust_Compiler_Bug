{"sha": "b077669c47e8531ba4b2ab0a08581e8856649551", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjA3NzY2OWM0N2U4NTMxYmE0YjJhYjBhMDg1ODFlODg1NjY0OTU1MQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2015-01-19T02:56:28Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2015-01-19T02:56:28Z"}, "message": "reflect: Fix build for systems that do not define ffi_go_closure.\n\nFrom-SVN: r219831", "tree": {"sha": "213b6ebf34f7973be26ddc57f056206aac523f41", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/213b6ebf34f7973be26ddc57f056206aac523f41"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b077669c47e8531ba4b2ab0a08581e8856649551", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b077669c47e8531ba4b2ab0a08581e8856649551", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b077669c47e8531ba4b2ab0a08581e8856649551", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b077669c47e8531ba4b2ab0a08581e8856649551/comments", "author": null, "committer": null, "parents": [{"sha": "342a33940d94a54496f15fa923f3508be19d05e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/342a33940d94a54496f15fa923f3508be19d05e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/342a33940d94a54496f15fa923f3508be19d05e0"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "7ec277b864a8fab84dfa5ee4392de6dbc5847443", "filename": "libgo/go/reflect/makefunc.go", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b077669c47e8531ba4b2ab0a08581e8856649551/libgo%2Fgo%2Freflect%2Fmakefunc.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b077669c47e8531ba4b2ab0a08581e8856649551/libgo%2Fgo%2Freflect%2Fmakefunc.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Freflect%2Fmakefunc.go?ref=b077669c47e8531ba4b2ab0a08581e8856649551", "patch": "@@ -63,7 +63,7 @@ func MakeFunc(typ Type, fn func(args []Value) (results []Value)) Value {\n \t\tmethod: -1,\n \t}\n \n-\tmakeFuncFFI(ftyp, impl)\n+\tmakeFuncFFI(ftyp, unsafe.Pointer(impl))\n \n \treturn Value{t, unsafe.Pointer(&impl), flag(Func) | flagIndir}\n }\n@@ -102,7 +102,7 @@ func makeMethodValue(op string, v Value) Value {\n \t\trcvr:   rcvr,\n \t}\n \n-\tmakeFuncFFI(ftyp, fv)\n+\tmakeFuncFFI(ftyp, unsafe.Pointer(fv))\n \n \treturn Value{ft, unsafe.Pointer(&fv), v.flag&flagRO | flag(Func) | flagIndir}\n }\n@@ -128,7 +128,7 @@ func makeValueMethod(v Value) Value {\n \t\trcvr:   v,\n \t}\n \n-\tmakeFuncFFI(ftyp, impl)\n+\tmakeFuncFFI(ftyp, unsafe.Pointer(impl))\n \n \treturn Value{t, unsafe.Pointer(&impl), v.flag&flagRO | flag(Func) | flagIndir}\n }"}, {"sha": "c821131bab7adb75fbec5203aa27a479fa10f014", "filename": "libgo/go/reflect/makefunc_ffi.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b077669c47e8531ba4b2ab0a08581e8856649551/libgo%2Fgo%2Freflect%2Fmakefunc_ffi.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b077669c47e8531ba4b2ab0a08581e8856649551/libgo%2Fgo%2Freflect%2Fmakefunc_ffi.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Freflect%2Fmakefunc_ffi.go?ref=b077669c47e8531ba4b2ab0a08581e8856649551", "patch": "@@ -10,7 +10,7 @@ import (\n \n // The makeFuncFFI function, written in C, fills in an FFI closure.\n // It arranges for ffiCall to be invoked directly from FFI.\n-func makeFuncFFI(ftyp *funcType, impl *makeFuncImpl)\n+func makeFuncFFI(ftyp *funcType, impl unsafe.Pointer)\n \n // FFICallbackGo implements the Go side of the libffi callback.\n // It is exported so that C code can call it."}, {"sha": "2a98e9b101912170d012df2579ae60c800982fbe", "filename": "libgo/go/reflect/makefunc_ffi_c.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b077669c47e8531ba4b2ab0a08581e8856649551/libgo%2Fgo%2Freflect%2Fmakefunc_ffi_c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b077669c47e8531ba4b2ab0a08581e8856649551/libgo%2Fgo%2Freflect%2Fmakefunc_ffi_c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Freflect%2Fmakefunc_ffi_c.c?ref=b077669c47e8531ba4b2ab0a08581e8856649551", "patch": "@@ -18,7 +18,7 @@\n \n /* Declare C functions with the names used to call from Go.  */\n \n-void makeFuncFFI(const struct __go_func_type *ftyp, ffi_go_closure *impl)\n+void makeFuncFFI(const struct __go_func_type *ftyp, void *impl)\n   __asm__ (GOSYM_PREFIX \"reflect.makeFuncFFI\");\n \n #ifdef USE_LIBFFI_CLOSURES\n@@ -70,7 +70,7 @@ ffi_callback (ffi_cif* cif __attribute__ ((unused)), void *results,\n /* Allocate an FFI closure and arrange to call ffi_callback.  */\n \n void\n-makeFuncFFI(const struct __go_func_type *ftyp, ffi_go_closure *impl)\n+makeFuncFFI(const struct __go_func_type *ftyp, void *impl)\n {\n   ffi_cif *cif;\n \n@@ -83,7 +83,7 @@ makeFuncFFI(const struct __go_func_type *ftyp, ffi_go_closure *impl)\n #else /* !defined(USE_LIBFFI_CLOSURES) */\n \n void\n-makeFuncFFI(const struct __go_func_type *ftyp, ffi_go_closure *impl)\n+makeFuncFFI(const struct __go_func_type *ftyp, void *impl)\n {\n   runtime_panicstring (\"libgo built without FFI does not support \"\n \t\t       \"reflect.MakeFunc\");"}]}