{"sha": "ba3ad5e002ee9c9523e4b61eb47b1b510d8841ef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmEzYWQ1ZTAwMmVlOWM5NTIzZTRiNjFlYjQ3YjFiNTEwZDg4NDFlZg==", "commit": {"author": {"name": "Philippe De Muyter", "email": "phdm@macqel.be", "date": "1998-03-19T19:27:18Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-03-19T19:27:18Z"}, "message": "fold-const.c (fold): Replace sign-extension of a zero extended value by a single zero extension.\n\n        * fold-const.c (fold): Replace sign-extension of a zero extended\n        value by a single zero extension.\n\nFrom-SVN: r18713", "tree": {"sha": "55df1c77f881cef2e0f99f7e80beca44da88f6f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/55df1c77f881cef2e0f99f7e80beca44da88f6f3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ba3ad5e002ee9c9523e4b61eb47b1b510d8841ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba3ad5e002ee9c9523e4b61eb47b1b510d8841ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba3ad5e002ee9c9523e4b61eb47b1b510d8841ef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba3ad5e002ee9c9523e4b61eb47b1b510d8841ef/comments", "author": {"login": "phdm", "id": 2923420, "node_id": "MDQ6VXNlcjI5MjM0MjA=", "avatar_url": "https://avatars.githubusercontent.com/u/2923420?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phdm", "html_url": "https://github.com/phdm", "followers_url": "https://api.github.com/users/phdm/followers", "following_url": "https://api.github.com/users/phdm/following{/other_user}", "gists_url": "https://api.github.com/users/phdm/gists{/gist_id}", "starred_url": "https://api.github.com/users/phdm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phdm/subscriptions", "organizations_url": "https://api.github.com/users/phdm/orgs", "repos_url": "https://api.github.com/users/phdm/repos", "events_url": "https://api.github.com/users/phdm/events{/privacy}", "received_events_url": "https://api.github.com/users/phdm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6e1f1f930b46d57aaf3fdd3fbbbb5fe68aee4f7d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e1f1f930b46d57aaf3fdd3fbbbb5fe68aee4f7d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e1f1f930b46d57aaf3fdd3fbbbb5fe68aee4f7d"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "e25b040113ee4b7d9cc7a97e583b4e5a07edf294", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba3ad5e002ee9c9523e4b61eb47b1b510d8841ef/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba3ad5e002ee9c9523e4b61eb47b1b510d8841ef/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ba3ad5e002ee9c9523e4b61eb47b1b510d8841ef", "patch": "@@ -1,3 +1,8 @@\n+Thu Mar 19 20:30:31 1998  Philippe De Muyter  <phdm@macqel.be>\n+\n+\t* fold-const.c (fold): Replace sign-extension of a zero extended\n+\tvalue by a single zero extension.\n+\n Thu Mar 19 00:58:07 1998  Jason Merrill  <jason@yorick.cygnus.com>\n \n \t* except.c (init_eh): Do nothing."}, {"sha": "4fcd7448303f258d93e79376510af56b1ae9ac41", "filename": "gcc/fold-const.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba3ad5e002ee9c9523e4b61eb47b1b510d8841ef/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba3ad5e002ee9c9523e4b61eb47b1b510d8841ef/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=ba3ad5e002ee9c9523e4b61eb47b1b510d8841ef", "patch": "@@ -4101,6 +4101,13 @@ fold (expr)\n \t      && ! final_ptr)\n \t    return convert (final_type, TREE_OPERAND (TREE_OPERAND (t, 0), 0));\n \n+\t  /* If we have a sign-extension of a zero-extended value, we can\n+\t     replace that by a single zero-extension.  */\n+\t  if (inside_int && inter_int && final_int\n+\t      && inside_prec < inter_prec && inter_prec < final_prec\n+\t      && inside_unsignedp && !inter_unsignedp)\n+\t    return convert (final_type, TREE_OPERAND (TREE_OPERAND (t, 0), 0));\n+\n \t  /* Two conversions in a row are not needed unless:\n \t     - some conversion is floating-point (overstrict for now), or\n \t     - the intermediate type is narrower than both initial and"}]}