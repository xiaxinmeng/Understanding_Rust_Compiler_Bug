{"sha": "2cf8eabd48500b8d2480301020bd2aa82cf6556d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmNmOGVhYmQ0ODUwMGI4ZDI0ODAzMDEwMjBiZDJhYTgyY2Y2NTU2ZA==", "commit": {"author": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2017-11-08T16:31:39Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2017-11-08T16:31:39Z"}, "message": "[multiple changes]\n\n2017-11-08  Piotr Trojanek  <trojanek@adacore.com>\n\n\t* spark_xrefs.ads (SPARK_Xref_Record): Replace file and scope indices\n\twith Entity_Id of the reference.\n\t* spark_xrefs.adb (dspark): Adapt pretty-printing routine.\n\t* lib-xref-spark_specific.adb (Add_SPARK_Xrefs): Store Entity_Id of the\n\treference, not the file and scope indices.\n\n2017-11-08  Arnaud Charlet  <charlet@adacore.com>\n\n\t* errout.ads (Current_Node): New.\n\t* errout.adb (Error_Msg): Use Current_Node.\n\t* par-ch6.adb, par-ch7.adb, par-ch9.adb, par-util.adb: Set Current_Node\n\twhen relevant.\n\t* style.adb: Call Error_Msg_N when possible.\n\nFrom-SVN: r254543", "tree": {"sha": "c2dbb61ab4220dd6fa0227fb21a70be00dfc9bed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c2dbb61ab4220dd6fa0227fb21a70be00dfc9bed"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2cf8eabd48500b8d2480301020bd2aa82cf6556d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2cf8eabd48500b8d2480301020bd2aa82cf6556d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2cf8eabd48500b8d2480301020bd2aa82cf6556d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2cf8eabd48500b8d2480301020bd2aa82cf6556d/comments", "author": null, "committer": null, "parents": [{"sha": "45a6947d0f40ca6bfebd430969087e0595c47cb8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45a6947d0f40ca6bfebd430969087e0595c47cb8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45a6947d0f40ca6bfebd430969087e0595c47cb8"}], "stats": {"total": 70, "additions": 49, "deletions": 21}, "files": [{"sha": "8fbb4176f699eec7c3517e00c301c9619a70873c", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cf8eabd48500b8d2480301020bd2aa82cf6556d/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cf8eabd48500b8d2480301020bd2aa82cf6556d/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=2cf8eabd48500b8d2480301020bd2aa82cf6556d", "patch": "@@ -1,3 +1,19 @@\n+2017-11-08  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* spark_xrefs.ads (SPARK_Xref_Record): Replace file and scope indices\n+\twith Entity_Id of the reference.\n+\t* spark_xrefs.adb (dspark): Adapt pretty-printing routine.\n+\t* lib-xref-spark_specific.adb (Add_SPARK_Xrefs): Store Entity_Id of the\n+\treference, not the file and scope indices.\n+\n+2017-11-08  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* errout.ads (Current_Node): New.\n+\t* errout.adb (Error_Msg): Use Current_Node.\n+\t* par-ch6.adb, par-ch7.adb, par-ch9.adb, par-util.adb: Set Current_Node\n+\twhen relevant.\n+\t* style.adb: Call Error_Msg_N when possible.\n+\n 2017-11-08  Piotr Trojanek  <trojanek@adacore.com>\n \n \t* spark_xrefs.ads (SPARK_Scope_Record): Rename Scope_Id component to"}, {"sha": "2b9664daac32f58aa6d76928fc5dca5e4aa11240", "filename": "gcc/ada/errout.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cf8eabd48500b8d2480301020bd2aa82cf6556d/gcc%2Fada%2Ferrout.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cf8eabd48500b8d2480301020bd2aa82cf6556d/gcc%2Fada%2Ferrout.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.adb?ref=2cf8eabd48500b8d2480301020bd2aa82cf6556d", "patch": "@@ -307,7 +307,7 @@ package body Errout is\n \n    procedure Error_Msg (Msg : String; Flag_Location : Source_Ptr) is\n    begin\n-      Error_Msg (Msg, Flag_Location, Empty);\n+      Error_Msg (Msg, Flag_Location, Current_Node);\n    end Error_Msg;\n \n    procedure Error_Msg"}, {"sha": "d3de0ad9ff39cd133b547ac5cc1f40d9d63b5298", "filename": "gcc/ada/errout.ads", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cf8eabd48500b8d2480301020bd2aa82cf6556d/gcc%2Fada%2Ferrout.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cf8eabd48500b8d2480301020bd2aa82cf6556d/gcc%2Fada%2Ferrout.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.ads?ref=2cf8eabd48500b8d2480301020bd2aa82cf6556d", "patch": "@@ -68,6 +68,10 @@ package Errout is\n    --  error message tag. The -gnatw.d switch sets this flag True, -gnatw.D\n    --  sets this flag False.\n \n+   Current_Node : Node_Id := Empty;\n+   --  Used by Error_Msg as a default Node_Id.\n+   --  Relevant only when Opt.Include_Subprogram_In_Messages is set.\n+\n    -----------------------------------\n    -- Suppression of Error Messages --\n    -----------------------------------"}, {"sha": "8cc2e7299fd37ba20122b3c77c4a5b85307f7e72", "filename": "gcc/ada/lib-xref-spark_specific.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cf8eabd48500b8d2480301020bd2aa82cf6556d/gcc%2Fada%2Flib-xref-spark_specific.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cf8eabd48500b8d2480301020bd2aa82cf6556d/gcc%2Fada%2Flib-xref-spark_specific.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-xref-spark_specific.adb?ref=2cf8eabd48500b8d2480301020bd2aa82cf6556d", "patch": "@@ -773,8 +773,7 @@ package body SPARK_Specific is\n \n             SPARK_Xref_Table.Append (\n               (Entity    => Unique_Entity (Ref.Ent),\n-               File_Num  => Dependency_Num (Ref.Lun),\n-               Scope_Num => Get_Scope_Num (Ref.Ref_Scope),\n+               Ref_Scope => Ref.Ref_Scope,\n                Rtype     => Typ));\n          end;\n       end loop;"}, {"sha": "ddcedcae1304c281a1a7b10bf1374654d9b6f341", "filename": "gcc/ada/par-ch6.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cf8eabd48500b8d2480301020bd2aa82cf6556d/gcc%2Fada%2Fpar-ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cf8eabd48500b8d2480301020bd2aa82cf6556d/gcc%2Fada%2Fpar-ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch6.adb?ref=2cf8eabd48500b8d2480301020bd2aa82cf6556d", "patch": "@@ -336,6 +336,7 @@ package body Ch6 is\n       end if;\n \n       Scope.Table (Scope.Last).Labl := Name_Node;\n+      Current_Node := Name_Node;\n       Ignore (Tok_Colon);\n \n       --  Deal with generic instantiation, the one case in which we do not"}, {"sha": "7ea2d0675d8e8fe2c8c994453709c8200545fff8", "filename": "gcc/ada/par-ch7.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cf8eabd48500b8d2480301020bd2aa82cf6556d/gcc%2Fada%2Fpar-ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cf8eabd48500b8d2480301020bd2aa82cf6556d/gcc%2Fada%2Fpar-ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch7.adb?ref=2cf8eabd48500b8d2480301020bd2aa82cf6556d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2017, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -146,6 +146,7 @@ package body Ch7 is\n          Scope.Table (Scope.Last).Sloc := Token_Ptr;\n          Name_Node := P_Defining_Program_Unit_Name;\n          Scope.Table (Scope.Last).Labl := Name_Node;\n+         Current_Node := Name_Node;\n \n          if Aspect_Specifications_Present then\n             Aspect_Sloc := Token_Ptr;\n@@ -211,6 +212,7 @@ package body Ch7 is\n          Scope.Table (Scope.Last).Sloc := Token_Ptr;\n          Name_Node := P_Defining_Program_Unit_Name;\n          Scope.Table (Scope.Last).Labl := Name_Node;\n+         Current_Node := Name_Node;\n \n          --  Case of renaming declaration\n "}, {"sha": "b5d6d2036a35ed6a05403afd0ab64d03e3adf9e4", "filename": "gcc/ada/par-ch9.adb", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cf8eabd48500b8d2480301020bd2aa82cf6556d/gcc%2Fada%2Fpar-ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cf8eabd48500b8d2480301020bd2aa82cf6556d/gcc%2Fada%2Fpar-ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch9.adb?ref=2cf8eabd48500b8d2480301020bd2aa82cf6556d", "patch": "@@ -101,6 +101,7 @@ package body Ch9 is\n          Scan; -- past BODY\n          Name_Node := P_Defining_Identifier (C_Is);\n          Scope.Table (Scope.Last).Labl := Name_Node;\n+         Current_Node := Name_Node;\n \n          if Token = Tok_Left_Paren then\n             Error_Msg_SC (\"discriminant part not allowed in task body\");\n@@ -168,6 +169,7 @@ package body Ch9 is\n             Name_Node := P_Defining_Identifier;\n             Set_Defining_Identifier (Task_Node, Name_Node);\n             Scope.Table (Scope.Last).Labl := Name_Node;\n+            Current_Node := Name_Node;\n             Set_Discriminant_Specifications\n               (Task_Node, P_Known_Discriminant_Part_Opt);\n \n@@ -176,6 +178,7 @@ package body Ch9 is\n             Name_Node := P_Defining_Identifier (C_Is);\n             Set_Defining_Identifier (Task_Node, Name_Node);\n             Scope.Table (Scope.Last).Labl := Name_Node;\n+            Current_Node := Name_Node;\n \n             if Token = Tok_Left_Paren then\n                Error_Msg_SC (\"discriminant part not allowed for single task\");\n@@ -447,6 +450,7 @@ package body Ch9 is\n          Scan; -- past BODY\n          Name_Node := P_Defining_Identifier (C_Is);\n          Scope.Table (Scope.Last).Labl := Name_Node;\n+         Current_Node := Name_Node;\n \n          if Token = Tok_Left_Paren then\n             Error_Msg_SC (\"discriminant part not allowed in protected body\");\n@@ -501,6 +505,7 @@ package body Ch9 is\n             Name_Node := P_Defining_Identifier (C_Is);\n             Set_Defining_Identifier (Protected_Node, Name_Node);\n             Scope.Table (Scope.Last).Labl := Name_Node;\n+            Current_Node := Name_Node;\n             Set_Discriminant_Specifications\n               (Protected_Node, P_Known_Discriminant_Part_Opt);\n \n@@ -517,6 +522,7 @@ package body Ch9 is\n             end if;\n \n             Scope.Table (Scope.Last).Labl := Name_Node;\n+            Current_Node := Name_Node;\n          end if;\n \n          P_Aspect_Specifications (Protected_Node, Semicolon => False);\n@@ -1049,6 +1055,7 @@ package body Ch9 is\n       Accept_Node := New_Node (N_Accept_Statement, Token_Ptr);\n       Scan; -- past ACCEPT\n       Scope.Table (Scope.Last).Labl := Token_Node;\n+      Current_Node := Token_Node;\n \n       Set_Entry_Direct_Name (Accept_Node, P_Identifier (C_Do));\n \n@@ -1197,6 +1204,7 @@ package body Ch9 is\n       Name_Node := P_Defining_Identifier;\n       Set_Defining_Identifier (Entry_Node, Name_Node);\n       Scope.Table (Scope.Last).Labl := Name_Node;\n+      Current_Node := Name_Node;\n \n       Formal_Part_Node := P_Entry_Body_Formal_Part;\n       Set_Entry_Body_Formal_Part (Entry_Node, Formal_Part_Node);"}, {"sha": "c9f81d07fd332f0d4498c4bc7a423a1ad1d735e3", "filename": "gcc/ada/par-endh.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cf8eabd48500b8d2480301020bd2aa82cf6556d/gcc%2Fada%2Fpar-endh.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cf8eabd48500b8d2480301020bd2aa82cf6556d/gcc%2Fada%2Fpar-endh.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-endh.adb?ref=2cf8eabd48500b8d2480301020bd2aa82cf6556d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2017, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "01b4670458b7c10c567ce0ce08334fae6a85e1f0", "filename": "gcc/ada/par-util.adb", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cf8eabd48500b8d2480301020bd2aa82cf6556d/gcc%2Fada%2Fpar-util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cf8eabd48500b8d2480301020bd2aa82cf6556d/gcc%2Fada%2Fpar-util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-util.adb?ref=2cf8eabd48500b8d2480301020bd2aa82cf6556d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2017, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -667,6 +667,12 @@ package body Util is\n       pragma Assert (Scope.Last > 0);\n       Scope.Decrement_Last;\n \n+      if Include_Subprogram_In_Messages\n+        and then Scope.Table (Scope.Last).Labl /= Error\n+      then\n+         Current_Node := Scope.Table (Scope.Last).Labl;\n+      end if;\n+\n       if Debug_Flag_P then\n          Error_Msg_Uint_1 := UI_From_Int (Scope.Last);\n          Error_Msg_SC (\"decrement scope stack ptr, new value = ^!\");"}, {"sha": "48b8b584747ba46f8572638dc303806d4b794845", "filename": "gcc/ada/spark_xrefs.adb", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cf8eabd48500b8d2480301020bd2aa82cf6556d/gcc%2Fada%2Fspark_xrefs.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cf8eabd48500b8d2480301020bd2aa82cf6556d/gcc%2Fada%2Fspark_xrefs.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fspark_xrefs.adb?ref=2cf8eabd48500b8d2480301020bd2aa82cf6556d", "patch": "@@ -104,10 +104,9 @@ package body SPARK_Xrefs is\n             Write_Str (Unique_Name (AXR.Entity));\n \n             Write_Char ('\"');\n-            Write_Str (\"  File_Num = \");\n-            Write_Int (Int (AXR.File_Num));\n-            Write_Str (\"  Scope_Num = \");\n-            Write_Int (Int (AXR.Scope_Num));\n+            Write_Str (\"  Reference_Scope = \");\n+            Write_Str (Unique_Name (AXR.Ref_Scope));\n+            Write_Char ('\"');\n             Write_Str (\"  Type = \");\n             Write_Char (AXR.Rtype);\n             Write_Eol;"}, {"sha": "79a21b9faf6691a6823ab4b3d6993b5dfe7b3ef9", "filename": "gcc/ada/spark_xrefs.ads", "status": "modified", "additions": 3, "deletions": 10, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cf8eabd48500b8d2480301020bd2aa82cf6556d/gcc%2Fada%2Fspark_xrefs.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cf8eabd48500b8d2480301020bd2aa82cf6556d/gcc%2Fada%2Fspark_xrefs.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fspark_xrefs.ads?ref=2cf8eabd48500b8d2480301020bd2aa82cf6556d", "patch": "@@ -67,17 +67,10 @@ package SPARK_Xrefs is\n \n    type SPARK_Xref_Record is record\n       Entity : Entity_Id;\n-      --  Pointer to entity name in ALI file\n+      --  Referenced entity\n \n-      File_Num : Nat;\n-      --  File dependency number for the cross-reference. Note that if no file\n-      --  entry is present explicitly, this is just a copy of the reference for\n-      --  the current cross-reference section.\n-\n-      Scope_Num : Nat;\n-      --  Scope number for the cross-reference. Note that if no scope entry is\n-      --  present explicitly, this is just a copy of the reference for the\n-      --  current cross-reference section.\n+      Ref_Scope : Entity_Id;\n+      --  Scope where the reference occurs\n \n       Rtype : Character;\n       --  Indicates type of the reference, using code used in ALI file:"}, {"sha": "df043d0669bf948f0ce0cce0a2bc9920340a5659", "filename": "gcc/ada/style.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cf8eabd48500b8d2480301020bd2aa82cf6556d/gcc%2Fada%2Fstyle.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cf8eabd48500b8d2480301020bd2aa82cf6556d/gcc%2Fada%2Fstyle.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fstyle.adb?ref=2cf8eabd48500b8d2480301020bd2aa82cf6556d", "patch": "@@ -166,7 +166,7 @@ package body Style is\n                   Error_Msg_Node_1 := Def;\n                   Error_Msg_Sloc := Sloc (Def);\n                   Error_Msg -- CODEFIX\n-                    (\"(style) bad casing of & declared#\", Sref);\n+                    (\"(style) bad casing of & declared#\", Sref, Ref);\n                   return;\n \n                --  Else end of identifiers, and they match"}]}