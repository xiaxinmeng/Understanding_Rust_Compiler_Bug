{"sha": "96dd155e2c78f10846b8cda792450846978b8644", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTZkZDE1NWUyYzc4ZjEwODQ2YjhjZGE3OTI0NTA4NDY5NzhiODY0NA==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2005-02-17T07:48:58Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2005-02-17T07:48:58Z"}, "message": "GThreadNativeMethodRunner.java, [...]: Fixed usage of @author tag...\n\n2005-02-17  Michael Koch  <konqueror@gmx.de>\n\n\t* gnu/java/awt/peer/gtk/GThreadNativeMethodRunner.java,\n\tgnu/java/awt/peer/gtk/GdkFontPeer.java,\n\tgnu/java/awt/peer/gtk/GdkGlyphVector.java,\n\tgnu/java/awt/peer/gtk/GdkGraphics.java,\n\tgnu/java/awt/peer/gtk/GdkGraphics2D.java,\n\tgnu/java/awt/peer/gtk/GdkGraphicsConfiguration.java,\n\tgnu/java/awt/peer/gtk/GdkGraphicsEnvironment.java,\n\tgnu/java/awt/peer/gtk/GdkPixbufDecoder.java,\n\tgnu/java/awt/peer/gtk/GdkRobotPeer.java,\n\tgnu/java/awt/peer/gtk/GdkScreenGraphicsDevice.java,\n\tgnu/java/awt/peer/gtk/GdkTextLayout.java,\n\tgnu/java/awt/peer/gtk/GtkCheckboxMenuItemPeer.java,\n\tgnu/java/awt/peer/gtk/GtkChoicePeer.java,\n\tgnu/java/awt/peer/gtk/GtkClipboard.java,\n\tgnu/java/awt/peer/gtk/GtkComponentPeer.java,\n\tgnu/java/awt/peer/gtk/GtkFileDialogPeer.java,\n\tgnu/java/awt/peer/gtk/GtkFontPeer.java,\n\tgnu/java/awt/peer/gtk/GtkLabelPeer.java,\n\tgnu/java/awt/peer/gtk/GtkMenuBarPeer.java,\n\tgnu/java/awt/peer/gtk/GtkMenuItemPeer.java,\n\tgnu/java/awt/peer/gtk/GtkMenuPeer.java,\n\tgnu/java/awt/peer/gtk/GtkScrollPanePeer.java,\n\tgnu/java/awt/peer/gtk/GtkScrollbarPeer.java,\n\tgnu/java/awt/peer/gtk/GtkToolkit.java,\n\tgnu/java/awt/peer/gtk/GtkWindowPeer.java,\n\tjava/applet/Applet.java,\n\tjava/awt/AWTError.java,\n\tjava/awt/AWTEvent.java,\n\tjava/awt/AWTEventMulticaster.java,\n\tjava/awt/AWTException.java,\n\tjava/awt/AWTKeyStroke.java,\n\tjava/awt/AWTPermission.java,\n\tjava/awt/ActiveEvent.java,\n\tjava/awt/Adjustable.java,\n\tjava/awt/AlphaComposite.java,\n\tjava/awt/AttributeValue.java,\n\tjava/awt/BorderLayout.java,\n\tjava/awt/BufferCapabilities.java,\n\tjava/awt/Button.java,\n\tjava/awt/Canvas.java,\n\tjava/awt/CheckboxGroup.java,\n\tjava/awt/CheckboxMenuItem.java,\n\tjava/awt/Color.java,\n\tjava/awt/ColorPaintContext.java,\n\tjava/awt/Component.java,\n\tjava/awt/ComponentOrientation.java,\n\tjava/awt/Composite.java,\n\tjava/awt/CompositeContext.java,\n\tjava/awt/Container.java,\n\tjava/awt/ContainerOrderFocusTraversalPolicy.java,\n\tjava/awt/DefaultFocusTraversalPolicy.java,\n\tjava/awt/Dialog.java,\n\tjava/awt/Dimension.java,\n\tjava/awt/DisplayMode.java,\n\tjava/awt/EventQueue.java,\n\tjava/awt/FileDialog.java,\n\tjava/awt/FontFormatException.java,\n\tjava/awt/Graphics.java,\n\tjava/awt/Graphics2D.java,\n\tjava/awt/GraphicsConfigTemplate.java,\n\tjava/awt/GraphicsConfiguration.java,\n\tjava/awt/GraphicsDevice.java,\n\tjava/awt/GridBagLayout.java,\n\tjava/awt/GridBagLayoutInfo.java,\n\tjava/awt/GridLayout.java,\n\tjava/awt/HeadlessException.java,\n\tjava/awt/IllegalComponentStateException.java,\n\tjava/awt/Image.java,\n\tjava/awt/Insets.java,\n\tjava/awt/ItemSelectable.java,\n\tjava/awt/JobAttributes.java,\n\tjava/awt/KeyEventDispatcher.java,\n\tjava/awt/KeyEventPostProcessor.java,\n\tjava/awt/KeyboardFocusManager.java,\n\tjava/awt/Label.java,\n\tjava/awt/LayoutManager.java,\n\tjava/awt/MenuBar.java,\n\tjava/awt/MenuComponent.java,\n\tjava/awt/MenuContainer.java,\n\tjava/awt/PageAttributes.java,\n\tjava/awt/Paint.java,\n\tjava/awt/PaintContext.java,\n\tjava/awt/Panel.java,\n\tjava/awt/Point.java,\n\tjava/awt/Polygon.java,\n\tjava/awt/PrintGraphics.java,\n\tjava/awt/PrintJob.java,\n\tjava/awt/Rectangle.java,\n\tjava/awt/RenderingHints.java,\n\tjava/awt/Shape.java,\n\tjava/awt/Stroke.java,\n\tjava/awt/SystemColor.java,\n\tjava/awt/Toolkit.java,\n\tjava/awt/Transparency.java,\n\tjava/awt/Window.java,\n\tjava/awt/color/CMMException.java,\n\tjava/awt/color/ColorSpace.java,\n\tjava/awt/color/ICC_ColorSpace.java,\n\tjava/awt/color/ICC_Profile.java,\n\tjava/awt/color/ProfileDataException.java,\n\tjava/awt/datatransfer/FlavorTable.java,\n\tjava/awt/datatransfer/MimeTypeParseException.java,\n\tjava/awt/datatransfer/Transferable.java,\n\tjava/awt/datatransfer/UnsupportedFlavorException.java,\n\tjava/awt/dnd/Autoscroll.java,\n\tjava/awt/dnd/DnDConstants.java,\n\tjava/awt/dnd/DragGestureListener.java,\n\tjava/awt/dnd/DragSourceAdapter.java,\n\tjava/awt/dnd/DragSourceDropEvent.java,\n\tjava/awt/dnd/DragSourceListener.java,\n\tjava/awt/dnd/DragSourceMotionListener.java,\n\tjava/awt/dnd/DropTargetAdapter.java,\n\tjava/awt/dnd/DropTargetContext.java,\n\tjava/awt/dnd/DropTargetListener.java,\n\tjava/awt/dnd/InvalidDnDOperationException.java,\n\tjava/awt/dnd/MouseDragGestureRecognizer.java,\n\tjava/awt/dnd/peer/DropTargetContextPeer.java,\n\tjava/awt/event/AWTEventListener.java,\n\tjava/awt/event/AWTEventListenerProxy.java,\n\tjava/awt/event/ActionEvent.java,\n\tjava/awt/event/AdjustmentEvent.java,\n\tjava/awt/event/AdjustmentListener.java,\n\tjava/awt/event/ComponentAdapter.java,\n\tjava/awt/event/ComponentEvent.java,\n\tjava/awt/event/ComponentListener.java,\n\tjava/awt/event/ContainerAdapter.java,\n\tjava/awt/event/ContainerEvent.java,\n\tjava/awt/event/ContainerListener.java,\n\tjava/awt/event/FocusAdapter.java,\n\tjava/awt/event/FocusEvent.java,\n\tjava/awt/event/FocusListener.java,\n\tjava/awt/event/InputEvent.java,\n\tjava/awt/event/InputMethodEvent.java,\n\tjava/awt/event/InputMethodListener.java,\n\tjava/awt/event/InvocationEvent.java,\n\tjava/awt/event/ItemEvent.java,\n\tjava/awt/event/ItemListener.java,\n\tjava/awt/event/KeyAdapter.java,\n\tjava/awt/event/KeyEvent.java,\n\tjava/awt/event/KeyListener.java,\n\tjava/awt/event/MouseAdapter.java,\n\tjava/awt/event/MouseEvent.java,\n\tjava/awt/event/MouseListener.java,\n\tjava/awt/event/MouseMotionAdapter.java,\n\tjava/awt/event/MouseMotionListener.java,\n\tjava/awt/event/MouseWheelEvent.java,\n\tjava/awt/event/MouseWheelListener.java,\n\tjava/awt/event/PaintEvent.java,\n\tjava/awt/event/TextEvent.java,\n\tjava/awt/event/TextListener.java,\n\tjava/awt/event/WindowAdapter.java,\n\tjava/awt/event/WindowEvent.java,\n\tjava/awt/event/WindowFocusListener.java,\n\tjava/awt/event/WindowListener.java,\n\tjava/awt/event/WindowStateListener.java,\n\tjava/awt/font/TextHitInfo.java,\n\tjava/awt/geom/CubicCurve2D.java,\n\tjava/awt/geom/Dimension2D.java,\n\tjava/awt/geom/Ellipse2D.java,\n\tjava/awt/geom/IllegalPathStateException.java,\n\tjava/awt/geom/Line2D.java,\n\tjava/awt/geom/NoninvertibleTransformException.java,\n\tjava/awt/geom/PathIterator.java,\n\tjava/awt/geom/Point2D.java,\n\tjava/awt/geom/QuadCurve2D.java,\n\tjava/awt/geom/RectangularShape.java,\n\tjava/awt/geom/RoundRectangle2D.java,\n\tjava/awt/im/InputContext.java,\n\tjava/awt/im/InputMethodHighlight.java,\n\tjava/awt/im/InputMethodRequests.java,\n\tjava/awt/im/InputSubset.java,\n\tjava/awt/im/spi/InputMethod.java,\n\tjava/awt/im/spi/InputMethodDescriptor.java,\n\tjava/awt/image/BandCombineOp.java,\n\tjava/awt/image/BandedSampleModel.java,\n\tjava/awt/image/ByteLookupTable.java,\n\tjava/awt/image/ComponentSampleModel.java,\n\tjava/awt/image/DataBuffer.java,\n\tjava/awt/image/DataBufferByte.java,\n\tjava/awt/image/DataBufferDouble.java,\n\tjava/awt/image/DataBufferFloat.java,\n\tjava/awt/image/DataBufferInt.java,\n\tjava/awt/image/DataBufferShort.java,\n\tjava/awt/image/DataBufferUShort.java,\n\tjava/awt/image/ImagingOpException.java,\n\tjava/awt/image/Kernel.java,\n\tjava/awt/image/LookupTable.java,\n\tjava/awt/image/MultiPixelPackedSampleModel.java,\n\tjava/awt/image/PackedColorModel.java,\n\tjava/awt/image/PixelInterleavedSampleModel.java,\n\tjava/awt/image/RGBImageFilter.java,\n\tjava/awt/image/Raster.java,\n\tjava/awt/image/RasterFormatException.java,\n\tjava/awt/image/SampleModel.java,\n\tjava/awt/image/ShortLookupTable.java,\n\tjava/awt/image/SinglePixelPackedSampleModel.java,\n\tjava/awt/image/WritableRaster.java,\n\tjava/awt/print/PrinterAbortException.java,\n\tjava/awt/print/PrinterException.java,\n\tjava/awt/print/PrinterIOException.java,\n\tjava/beans/AppletInitializer.java,\n\tjava/beans/ExceptionListener.java,\n\tjava/beans/PropertyChangeEvent.java,\n\tjava/beans/PropertyChangeListenerProxy.java,\n\tjava/beans/PropertyChangeSupport.java,\n\tjava/beans/PropertyDescriptor.java,\n\tjava/beans/VetoableChangeListenerProxy.java,\n\tjava/beans/VetoableChangeSupport.java,\n\tjava/io/BufferedReader.java,\n\tjava/io/ByteArrayInputStream.java,\n\tjava/io/ByteArrayOutputStream.java,\n\tjava/io/CharArrayReader.java,\n\tjava/io/CharArrayWriter.java,\n\tjava/io/CharConversionException.java,\n\tjava/io/DataInput.java,\n\tjava/io/DataInputStream.java,\n\tjava/io/DataOutput.java,\n\tjava/io/DataOutputStream.java,\n\tjava/io/EOFException.java,\n\tjava/io/FileInputStream.java,\n\tjava/io/FileNotFoundException.java,\n\tjava/io/FileOutputStream.java,\n\tjava/io/FilenameFilter.java,\n\tjava/io/FilterInputStream.java,\n\tjava/io/FilterOutputStream.java,\n\tjava/io/FilterReader.java,\n\tjava/io/FilterWriter.java,\n\tjava/io/IOException.java,\n\tjava/io/InputStream.java,\n\tjava/io/InterruptedIOException.java,\n\tjava/io/LineNumberInputStream.java,\n\tjava/io/LineNumberReader.java,\n\tjava/io/ObjectInputStream.java,\n\tjava/io/ObjectStreamException.java,\n\tjava/io/OptionalDataException.java,\n\tjava/io/OutputStream.java,\n\tjava/io/OutputStreamWriter.java,\n\tjava/io/PrintStream.java,\n\tjava/io/PrintWriter.java,\n\tjava/io/PushbackInputStream.java,\n\tjava/io/PushbackReader.java,\n\tjava/io/RandomAccessFile.java,\n\tjava/io/Reader.java,\n\tjava/io/SequenceInputStream.java,\n\tjava/io/Serializable.java,\n\tjava/io/StreamCorruptedException.java,\n\tjava/io/StreamTokenizer.java,\n\tjava/io/StringBufferInputStream.java,\n\tjava/io/StringWriter.java,\n\tjava/io/SyncFailedException.java,\n\tjava/io/UTFDataFormatException.java,\n\tjava/io/UnsupportedEncodingException.java,\n\tjava/io/WriteAbortedException.java,\n\tjava/io/Writer.java,\n\tjava/lang/AbstractMethodError.java,\n\tjava/lang/ArithmeticException.java,\n\tjava/lang/ArrayIndexOutOfBoundsException.java,\n\tjava/lang/ArrayStoreException.java,\n\tjava/lang/AssertionError.java,\n\tjava/lang/Boolean.java,\n\tjava/lang/Byte.java,\n\tjava/lang/Class.java,\n\tjava/lang/ClassCastException.java,\n\tjava/lang/ClassCircularityError.java,\n\tjava/lang/ClassLoader.java,\n\tjava/lang/ClassNotFoundException.java,\n\tjava/lang/CloneNotSupportedException.java,\n\tjava/lang/Cloneable.java,\n\tjava/lang/Comparable.java,\n\tjava/lang/Compiler.java,\n\tjava/lang/Double.java,\n\tjava/lang/Error.java,\n\tjava/lang/Exception.java,\n\tjava/lang/ExceptionInInitializerError.java,\n\tjava/lang/Float.java,\n\tjava/lang/IllegalAccessError.java,\n\tjava/lang/IllegalAccessException.java,\n\tjava/lang/IllegalArgumentException.java,\n\tjava/lang/IllegalMonitorStateException.java,\n\tjava/lang/IllegalStateException.java,\n\tjava/lang/IllegalThreadStateException.java,\n\tjava/lang/IncompatibleClassChangeError.java,\n\tjava/lang/IndexOutOfBoundsException.java,\n\tjava/lang/InheritableThreadLocal.java,\n\tjava/lang/InstantiationError.java,\n\tjava/lang/InstantiationException.java,\n\tjava/lang/Integer.java,\n\tjava/lang/InternalError.java,\n\tjava/lang/InterruptedException.java,\n\tjava/lang/LinkageError.java,\n\tjava/lang/Long.java,\n\tjava/lang/NegativeArraySizeException.java,\n\tjava/lang/NoClassDefFoundError.java,\n\tjava/lang/NoSuchFieldError.java,\n\tjava/lang/NoSuchFieldException.java,\n\tjava/lang/NoSuchMethodError.java,\n\tjava/lang/NoSuchMethodException.java,\n\tjava/lang/NullPointerException.java,\n\tjava/lang/Number.java,\n\tjava/lang/NumberFormatException.java,\n\tjava/lang/OutOfMemoryError.java,\n\tjava/lang/Process.java,\n\tjava/lang/Runnable.java,\n\tjava/lang/Runtime.java,\n\tjava/lang/RuntimeException.java,\n\tjava/lang/RuntimePermission.java,\n\tjava/lang/SecurityException.java,\n\tjava/lang/SecurityManager.java,\n\tjava/lang/Short.java,\n\tjava/lang/StackOverflowError.java,\n\tjava/lang/StackTraceElement.java,\n\tjava/lang/StringBuffer.java,\n\tjava/lang/StringIndexOutOfBoundsException.java,\n\tjava/lang/ThreadDeath.java,\n\tjava/lang/ThreadGroup.java,\n\tjava/lang/Throwable.java,\n\tjava/lang/UnsatisfiedLinkError.java,\n\tjava/lang/UnsupportedOperationException.java,\n\tjava/lang/VerifyError.java,\n\tjava/lang/VirtualMachineError.java,\n\tjava/lang/reflect/AccessibleObject.java,\n\tjava/lang/reflect/Array.java,\n\tjava/lang/reflect/InvocationTargetException.java,\n\tjava/lang/reflect/Member.java,\n\tjava/lang/reflect/Modifier.java,\n\tjava/lang/reflect/Proxy.java,\n\tjava/lang/reflect/ReflectPermission.java,\n\tjava/lang/reflect/UndeclaredThrowableException.java,\n\tjava/math/BigInteger.java,\n\tjava/net/NetworkInterface.java,\n\tjava/nio/ByteBufferHelper.java,\n\tjava/nio/ByteBufferImpl.java,\n\tjava/nio/DirectByteBufferImpl.java,\n\tjava/nio/DoubleBufferImpl.java,\n\tjava/nio/FloatBufferImpl.java,\n\tjava/nio/IntBufferImpl.java,\n\tjava/nio/LongBufferImpl.java,\n\tjava/nio/ShortBufferImpl.java,\n\tjava/nio/channels/Channel.java,\n\tjava/nio/channels/IllegalBlockingModeException.java,\n\tjava/nio/charset/spi/CharsetProvider.java,\n\tjava/security/AccessControlException.java,\n\tjava/security/BasicPermission.java,\n\tjava/security/DigestException.java,\n\tjava/security/DigestInputStream.java,\n\tjava/security/DigestOutputStream.java,\n\tjava/security/GeneralSecurityException.java,\n\tjava/security/Guard.java,\n\tjava/security/GuardedObject.java,\n\tjava/security/InvalidAlgorithmParameterException.java,\n\tjava/security/InvalidKeyException.java,\n\tjava/security/InvalidParameterException.java,\n\tjava/security/Key.java,\n\tjava/security/KeyException.java,\n\tjava/security/KeyManagementException.java,\n\tjava/security/KeyStoreException.java,\n\tjava/security/MessageDigestSpi.java,\n\tjava/security/NoSuchAlgorithmException.java,\n\tjava/security/NoSuchProviderException.java,\n\tjava/security/Permission.java,\n\tjava/security/PermissionCollection.java,\n\tjava/security/Permissions.java,\n\tjava/security/Principal.java,\n\tjava/security/PrivateKey.java,\n\tjava/security/PrivilegedActionException.java,\n\tjava/security/ProviderException.java,\n\tjava/security/PublicKey.java,\n\tjava/security/SecureRandom.java,\n\tjava/security/SecureRandomSpi.java,\n\tjava/security/SignatureException.java,\n\tjava/security/SignatureSpi.java,\n\tjava/security/SignedObject.java,\n\tjava/security/Signer.java,\n\tjava/security/UnrecoverableKeyException.java,\n\tjava/security/UnresolvedPermission.java,\n\tjava/security/acl/AclNotFoundException.java,\n\tjava/security/acl/LastOwnerException.java,\n\tjava/security/acl/NotOwnerException.java,\n\tjava/security/cert/CertPath.java,\n\tjava/security/cert/CertPathBuilderException.java,\n\tjava/security/cert/CertPathValidatorException.java,\n\tjava/security/cert/CertStoreException.java,\n\tjava/text/BreakIterator.java,\n\tjava/text/ChoiceFormat.java,\n\tjava/text/CollationElementIterator.java,\n\tjava/text/CollationKey.java,\n\tjava/text/Collator.java,\n\tjava/text/DateFormat.java,\n\tjava/text/DateFormatSymbols.java,\n\tjava/text/DecimalFormat.java,\n\tjava/text/DecimalFormatSymbols.java,\n\tjava/text/FieldPosition.java,\n\tjava/text/Format.java,\n\tjava/text/NumberFormat.java,\n\tjava/text/ParseException.java,\n\tjava/text/ParsePosition.java,\n\tjava/text/StringCharacterIterator.java,\n\tjava/util/AbstractCollection.java,\n\tjava/util/AbstractList.java,\n\tjava/util/AbstractMap.java,\n\tjava/util/AbstractSequentialList.java,\n\tjava/util/AbstractSet.java,\n\tjava/util/ArrayList.java,\n\tjava/util/Arrays.java,\n\tjava/util/BitSet.java,\n\tjava/util/Collection.java,\n\tjava/util/Collections.java,\n\tjava/util/Comparator.java,\n\tjava/util/ConcurrentModificationException.java,\n\tjava/util/Currency.java,\n\tjava/util/Date.java,\n\tjava/util/EmptyStackException.java,\n\tjava/util/Enumeration.java,\n\tjava/util/EventListener.java,\n\tjava/util/EventListenerProxy.java,\n\tjava/util/EventObject.java,\n\tjava/util/HashMap.java,\n\tjava/util/HashSet.java,\n\tjava/util/Hashtable.java,\n\tjava/util/IdentityHashMap.java,\n\tjava/util/Iterator.java,\n\tjava/util/LinkedHashSet.java,\n\tjava/util/LinkedList.java,\n\tjava/util/List.java,\n\tjava/util/ListIterator.java,\n\tjava/util/ListResourceBundle.java,\n\tjava/util/Map.java,\n\tjava/util/MissingResourceException.java,\n\tjava/util/NoSuchElementException.java,\n\tjava/util/Observable.java,\n\tjava/util/Observer.java,\n\tjava/util/Properties.java,\n\tjava/util/PropertyPermissionCollection.java,\n\tjava/util/RandomAccess.java,\n\tjava/util/Set.java,\n\tjava/util/SortedMap.java,\n\tjava/util/SortedSet.java,\n\tjava/util/Stack.java,\n\tjava/util/StringTokenizer.java,\n\tjava/util/TooManyListenersException.java,\n\tjava/util/TreeMap.java,\n\tjava/util/TreeSet.java,\n\tjava/util/Vector.java,\n\tjava/util/logging/FileHandler.java,\n\tjava/util/logging/Level.java,\n\tjava/util/prefs/BackingStoreException.java,\n\tjava/util/prefs/InvalidPreferencesFormatException.java,\n\tjava/util/prefs/Preferences.java,\n\tjavax/accessibility/Accessible.java,\n\tjavax/accessibility/AccessibleAction.java,\n\tjavax/accessibility/AccessibleBundle.java,\n\tjavax/accessibility/AccessibleComponent.java,\n\tjavax/accessibility/AccessibleContext.java,\n\tjavax/accessibility/AccessibleEditableText.java,\n\tjavax/accessibility/AccessibleExtendedComponent.java,\n\tjavax/accessibility/AccessibleExtendedTable.java,\n\tjavax/accessibility/AccessibleHyperlink.java,\n\tjavax/accessibility/AccessibleHypertext.java,\n\tjavax/accessibility/AccessibleIcon.java,\n\tjavax/accessibility/AccessibleKeyBinding.java,\n\tjavax/accessibility/AccessibleRelation.java,\n\tjavax/accessibility/AccessibleRelationSet.java,\n\tjavax/accessibility/AccessibleResourceBundle.java,\n\tjavax/accessibility/AccessibleRole.java,\n\tjavax/accessibility/AccessibleSelection.java,\n\tjavax/accessibility/AccessibleState.java,\n\tjavax/accessibility/AccessibleStateSet.java,\n\tjavax/accessibility/AccessibleTable.java,\n\tjavax/accessibility/AccessibleTableModelChange.java,\n\tjavax/accessibility/AccessibleText.java,\n\tjavax/accessibility/AccessibleValue.java,\n\tjavax/imageio/IIOException.java,\n\tjavax/imageio/ImageIO.java,\n\tjavax/imageio/spi/IIOServiceProvider.java,\n\tjavax/imageio/spi/ImageInputStreamSpi.java,\n\tjavax/imageio/spi/ImageOutputStreamSpi.java,\n\tjavax/imageio/spi/ImageReaderWriterSpi.java,\n\tjavax/imageio/spi/ImageTranscoderSpi.java,\n\tjavax/imageio/spi/RegisterableService.java,\n\tjavax/imageio/spi/ServiceRegistry.java,\n\tjavax/imageio/stream/IIOByteBuffer.java,\n\tjavax/imageio/stream/ImageInputStream.java,\n\tjavax/imageio/stream/ImageOutputStream.java,\n\tjavax/naming/Binding.java,\n\tjavax/naming/CannotProceedException.java,\n\tjavax/naming/CompositeName.java,\n\tjavax/naming/CompoundName.java,\n\tjavax/naming/LinkException.java,\n\tjavax/naming/LinkRef.java,\n\tjavax/naming/NameClassPair.java,\n\tjavax/naming/Reference.java,\n\tjavax/naming/ReferralException.java,\n\tjavax/naming/directory/Attribute.java,\n\tjavax/naming/directory/AttributeModificationException.java,\n\tjavax/naming/directory/Attributes.java,\n\tjavax/naming/directory/DirContext.java,\n\tjavax/naming/directory/ModificationItem.java,\n\tjavax/naming/directory/SearchControls.java,\n\tjavax/naming/directory/SearchResult.java,\n\tjavax/naming/event/EventContext.java,\n\tjavax/naming/event/EventDirContext.java,\n\tjavax/naming/event/NamespaceChangeListener.java,\n\tjavax/naming/event/NamingExceptionEvent.java,\n\tjavax/naming/event/NamingListener.java,\n\tjavax/naming/event/ObjectChangeListener.java,\n\tjavax/naming/ldap/Control.java,\n\tjavax/naming/ldap/ExtendedResponse.java,\n\tjavax/naming/ldap/HasControls.java,\n\tjavax/naming/ldap/LdapContext.java,\n\tjavax/naming/ldap/UnsolicitedNotification.java,\n\tjavax/naming/ldap/UnsolicitedNotificationEvent.java,\n\tjavax/naming/ldap/UnsolicitedNotificationListener.java,\n\tjavax/naming/spi/DirectoryManager.java,\n\tjavax/naming/spi/ResolveResult.java,\n\tjavax/naming/spi/Resolver.java,\n\tjavax/security/auth/callback/Callback.java,\n\tjavax/security/auth/callback/CallbackHandler.java,\n\tjavax/security/auth/callback/ChoiceCallback.java,\n\tjavax/security/auth/callback/ConfirmationCallback.java,\n\tjavax/security/auth/callback/LanguageCallback.java,\n\tjavax/security/auth/callback/NameCallback.java,\n\tjavax/security/auth/callback/PasswordCallback.java,\n\tjavax/security/auth/callback/TextInputCallback.java,\n\tjavax/security/auth/callback/TextOutputCallback.java,\n\tjavax/security/auth/callback/UnsupportedCallbackException.java,\n\tjavax/security/sasl/Sasl.java,\n\tjavax/security/sasl/SaslServerFactory.java,\n\tjavax/swing/DefaultBoundedRangeModel.java,\n\tjavax/swing/JComponent.java,\n\tjavax/swing/JList.java,\n\tjavax/swing/JProgressBar.java,\n\tjavax/swing/JRadioButton.java,\n\tjavax/swing/JTextArea.java,\n\tjavax/swing/JTextField.java,\n\tjavax/swing/JToggleButton.java,\n\tjavax/swing/JTree.java,\n\tjavax/swing/SpinnerListModel.java,\n\tjavax/swing/event/EventListenerList.java,\n\tjavax/swing/text/JTextComponent.java,\n\tjavax/swing/text/StringContent.java,\n\tjavax/swing/text/Utilities.java,\n\tjavax/swing/undo/UndoManager.java,\n\tjavax/swing/undo/UndoableEditSupport.java,\n\tjavax/transaction/HeuristicCommitException.java,\n\tjavax/transaction/HeuristicMixedException.java,\n\tjavax/transaction/HeuristicRollbackException.java,\n\tjavax/transaction/InvalidTransactionException.java,\n\tjavax/transaction/NotSupportedException.java,\n\tjavax/transaction/RollbackException.java,\n\tjavax/transaction/Status.java,\n\tjavax/transaction/Synchronization.java,\n\tjavax/transaction/SystemException.java,\n\tjavax/transaction/Transaction.java,\n\tjavax/transaction/TransactionManager.java,\n\tjavax/transaction/TransactionRequiredException.java,\n\tjavax/transaction/TransactionRolledbackException.java,\n\tjavax/transaction/UserTransaction.java,\n\tjavax/transaction/xa/XAException.java,\n\tjavax/transaction/xa/XAResource.java,\n\tjavax/transaction/xa/Xid.java,\n\tjavax/xml/XMLConstants.java,\n\tjavax/xml/datatype/DatatypeConfigurationException.java,\n\tjavax/xml/datatype/DatatypeConstants.java,\n\tjavax/xml/datatype/DatatypeFactory.java,\n\tjavax/xml/datatype/Duration.java,\n\tjavax/xml/datatype/XMLGregorianCalendar.java,\n\tjavax/xml/namespace/NamespaceContext.java,\n\tjavax/xml/namespace/QName.java,\n\tjavax/xml/parsers/DocumentBuilder.java,\n\tjavax/xml/parsers/DocumentBuilderFactory.java,\n\tjavax/xml/parsers/FactoryConfigurationError.java,\n\tjavax/xml/parsers/ParserConfigurationException.java,\n\tjavax/xml/parsers/SAXParser.java,\n\tjavax/xml/parsers/SAXParserFactory.java,\n\tjavax/xml/transform/ErrorListener.java,\n\tjavax/xml/transform/OutputKeys.java,\n\tjavax/xml/transform/Result.java,\n\tjavax/xml/transform/Source.java,\n\tjavax/xml/transform/SourceLocator.java,\n\tjavax/xml/transform/Templates.java,\n\tjavax/xml/transform/Transformer.java,\n\tjavax/xml/transform/TransformerConfigurationException.java,\n\tjavax/xml/transform/TransformerException.java,\n\tjavax/xml/transform/TransformerFactory.java,\n\tjavax/xml/transform/TransformerFactoryConfigurationError.java,\n\tjavax/xml/transform/URIResolver.java,\n\tjavax/xml/transform/dom/DOMLocator.java,\n\tjavax/xml/transform/dom/DOMResult.java,\n\tjavax/xml/transform/dom/DOMSource.java,\n\tjavax/xml/transform/sax/SAXResult.java,\n\tjavax/xml/transform/sax/SAXSource.java,\n\tjavax/xml/transform/sax/SAXTransformerFactory.java,\n\tjavax/xml/transform/sax/TemplatesHandler.java,\n\tjavax/xml/transform/sax/TransformerHandler.java,\n\tjavax/xml/transform/stream/StreamResult.java,\n\tjavax/xml/transform/stream/StreamSource.java,\n\tjavax/xml/validation/Schema.java,\n\tjavax/xml/validation/SchemaFactory.java,\n\tjavax/xml/validation/TypeInfoProvider.java,\n\tjavax/xml/validation/Validator.java,\n\tjavax/xml/validation/ValidatorHandler.java,\n\tjavax/xml/xpath/XPathConstants.java,\n\tjavax/xml/xpath/XPathException.java,\n\tjavax/xml/xpath/XPathExpression.java,\n\tjavax/xml/xpath/XPathExpressionException.java,\n\tjavax/xml/xpath/XPathFactory.java,\n\tjavax/xml/xpath/XPathFactoryConfigurationException.java,\n\tjavax/xml/xpath/XPathFunction.java,\n\tjavax/xml/xpath/XPathFunctionException.java,\n\tjavax/xml/xpath/XPathFunctionResolver.java:\n\tFixed usage of @author tag, reworked import statements,\n\tremoved CVS tags, changed the modifier order and fixed\n\tHTML usage in javadocs.\n\nFrom-SVN: r95152", "tree": {"sha": "562ec727df722dd9631848494a1a04b5b86160df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/562ec727df722dd9631848494a1a04b5b86160df"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/96dd155e2c78f10846b8cda792450846978b8644", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96dd155e2c78f10846b8cda792450846978b8644", "html_url": "https://github.com/Rust-GCC/gccrs/commit/96dd155e2c78f10846b8cda792450846978b8644", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96dd155e2c78f10846b8cda792450846978b8644/comments", "author": null, "committer": null, "parents": [{"sha": "927c8259b186909698e27e3c5390b5f9a01ffc6c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/927c8259b186909698e27e3c5390b5f9a01ffc6c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/927c8259b186909698e27e3c5390b5f9a01ffc6c"}], "stats": {"total": 4270, "additions": 2436, "deletions": 1834}, "files": [{"sha": "d2d055cb55f1adeba870b2c99472de83dffd83f0", "filename": "libjava/ChangeLog", "status": "modified", "additions": 616, "deletions": 0, "changes": 616, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,3 +1,619 @@\n+2005-02-17  Michael Koch  <konqueror@gmx.de>\n+\n+\t* gnu/java/awt/peer/gtk/GThreadNativeMethodRunner.java,\n+\tgnu/java/awt/peer/gtk/GdkFontPeer.java,\n+\tgnu/java/awt/peer/gtk/GdkGlyphVector.java,\n+\tgnu/java/awt/peer/gtk/GdkGraphics.java,\n+\tgnu/java/awt/peer/gtk/GdkGraphics2D.java,\n+\tgnu/java/awt/peer/gtk/GdkGraphicsConfiguration.java,\n+\tgnu/java/awt/peer/gtk/GdkGraphicsEnvironment.java,\n+\tgnu/java/awt/peer/gtk/GdkPixbufDecoder.java,\n+\tgnu/java/awt/peer/gtk/GdkRobotPeer.java,\n+\tgnu/java/awt/peer/gtk/GdkScreenGraphicsDevice.java,\n+\tgnu/java/awt/peer/gtk/GdkTextLayout.java,\n+\tgnu/java/awt/peer/gtk/GtkCheckboxMenuItemPeer.java,\n+\tgnu/java/awt/peer/gtk/GtkChoicePeer.java,\n+\tgnu/java/awt/peer/gtk/GtkClipboard.java,\n+\tgnu/java/awt/peer/gtk/GtkComponentPeer.java,\n+\tgnu/java/awt/peer/gtk/GtkFileDialogPeer.java,\n+\tgnu/java/awt/peer/gtk/GtkFontPeer.java,\n+\tgnu/java/awt/peer/gtk/GtkLabelPeer.java,\n+\tgnu/java/awt/peer/gtk/GtkMenuBarPeer.java,\n+\tgnu/java/awt/peer/gtk/GtkMenuItemPeer.java,\n+\tgnu/java/awt/peer/gtk/GtkMenuPeer.java,\n+\tgnu/java/awt/peer/gtk/GtkScrollPanePeer.java,\n+\tgnu/java/awt/peer/gtk/GtkScrollbarPeer.java,\n+\tgnu/java/awt/peer/gtk/GtkToolkit.java,\n+\tgnu/java/awt/peer/gtk/GtkWindowPeer.java,\n+\tjava/applet/Applet.java,\n+\tjava/awt/AWTError.java,\n+\tjava/awt/AWTEvent.java,\n+\tjava/awt/AWTEventMulticaster.java,\n+\tjava/awt/AWTException.java,\n+\tjava/awt/AWTKeyStroke.java,\n+\tjava/awt/AWTPermission.java,\n+\tjava/awt/ActiveEvent.java,\n+\tjava/awt/Adjustable.java,\n+\tjava/awt/AlphaComposite.java,\n+\tjava/awt/AttributeValue.java,\n+\tjava/awt/BorderLayout.java,\n+\tjava/awt/BufferCapabilities.java,\n+\tjava/awt/Button.java,\n+\tjava/awt/Canvas.java,\n+\tjava/awt/CheckboxGroup.java,\n+\tjava/awt/CheckboxMenuItem.java,\n+\tjava/awt/Color.java,\n+\tjava/awt/ColorPaintContext.java,\n+\tjava/awt/Component.java,\n+\tjava/awt/ComponentOrientation.java,\n+\tjava/awt/Composite.java,\n+\tjava/awt/CompositeContext.java,\n+\tjava/awt/Container.java,\n+\tjava/awt/ContainerOrderFocusTraversalPolicy.java,\n+\tjava/awt/DefaultFocusTraversalPolicy.java,\n+\tjava/awt/Dialog.java,\n+\tjava/awt/Dimension.java,\n+\tjava/awt/DisplayMode.java,\n+\tjava/awt/EventQueue.java,\n+\tjava/awt/FileDialog.java,\n+\tjava/awt/FontFormatException.java,\n+\tjava/awt/Graphics.java,\n+\tjava/awt/Graphics2D.java,\n+\tjava/awt/GraphicsConfigTemplate.java,\n+\tjava/awt/GraphicsConfiguration.java,\n+\tjava/awt/GraphicsDevice.java,\n+\tjava/awt/GridBagLayout.java,\n+\tjava/awt/GridBagLayoutInfo.java,\n+\tjava/awt/GridLayout.java,\n+\tjava/awt/HeadlessException.java,\n+\tjava/awt/IllegalComponentStateException.java,\n+\tjava/awt/Image.java,\n+\tjava/awt/Insets.java,\n+\tjava/awt/ItemSelectable.java,\n+\tjava/awt/JobAttributes.java,\n+\tjava/awt/KeyEventDispatcher.java,\n+\tjava/awt/KeyEventPostProcessor.java,\n+\tjava/awt/KeyboardFocusManager.java,\n+\tjava/awt/Label.java,\n+\tjava/awt/LayoutManager.java,\n+\tjava/awt/MenuBar.java,\n+\tjava/awt/MenuComponent.java,\n+\tjava/awt/MenuContainer.java,\n+\tjava/awt/PageAttributes.java,\n+\tjava/awt/Paint.java,\n+\tjava/awt/PaintContext.java,\n+\tjava/awt/Panel.java,\n+\tjava/awt/Point.java,\n+\tjava/awt/Polygon.java,\n+\tjava/awt/PrintGraphics.java,\n+\tjava/awt/PrintJob.java,\n+\tjava/awt/Rectangle.java,\n+\tjava/awt/RenderingHints.java,\n+\tjava/awt/Shape.java,\n+\tjava/awt/Stroke.java,\n+\tjava/awt/SystemColor.java,\n+\tjava/awt/Toolkit.java,\n+\tjava/awt/Transparency.java,\n+\tjava/awt/Window.java,\n+\tjava/awt/color/CMMException.java,\n+\tjava/awt/color/ColorSpace.java,\n+\tjava/awt/color/ICC_ColorSpace.java,\n+\tjava/awt/color/ICC_Profile.java,\n+\tjava/awt/color/ProfileDataException.java,\n+\tjava/awt/datatransfer/FlavorTable.java,\n+\tjava/awt/datatransfer/MimeTypeParseException.java,\n+\tjava/awt/datatransfer/Transferable.java,\n+\tjava/awt/datatransfer/UnsupportedFlavorException.java,\n+\tjava/awt/dnd/Autoscroll.java,\n+\tjava/awt/dnd/DnDConstants.java,\n+\tjava/awt/dnd/DragGestureListener.java,\n+\tjava/awt/dnd/DragSourceAdapter.java,\n+\tjava/awt/dnd/DragSourceDropEvent.java,\n+\tjava/awt/dnd/DragSourceListener.java,\n+\tjava/awt/dnd/DragSourceMotionListener.java,\n+\tjava/awt/dnd/DropTargetAdapter.java,\n+\tjava/awt/dnd/DropTargetContext.java,\n+\tjava/awt/dnd/DropTargetListener.java,\n+\tjava/awt/dnd/InvalidDnDOperationException.java,\n+\tjava/awt/dnd/MouseDragGestureRecognizer.java,\n+\tjava/awt/dnd/peer/DropTargetContextPeer.java,\n+\tjava/awt/event/AWTEventListener.java,\n+\tjava/awt/event/AWTEventListenerProxy.java,\n+\tjava/awt/event/ActionEvent.java,\n+\tjava/awt/event/AdjustmentEvent.java,\n+\tjava/awt/event/AdjustmentListener.java,\n+\tjava/awt/event/ComponentAdapter.java,\n+\tjava/awt/event/ComponentEvent.java,\n+\tjava/awt/event/ComponentListener.java,\n+\tjava/awt/event/ContainerAdapter.java,\n+\tjava/awt/event/ContainerEvent.java,\n+\tjava/awt/event/ContainerListener.java,\n+\tjava/awt/event/FocusAdapter.java,\n+\tjava/awt/event/FocusEvent.java,\n+\tjava/awt/event/FocusListener.java,\n+\tjava/awt/event/InputEvent.java,\n+\tjava/awt/event/InputMethodEvent.java,\n+\tjava/awt/event/InputMethodListener.java,\n+\tjava/awt/event/InvocationEvent.java,\n+\tjava/awt/event/ItemEvent.java,\n+\tjava/awt/event/ItemListener.java,\n+\tjava/awt/event/KeyAdapter.java,\n+\tjava/awt/event/KeyEvent.java,\n+\tjava/awt/event/KeyListener.java,\n+\tjava/awt/event/MouseAdapter.java,\n+\tjava/awt/event/MouseEvent.java,\n+\tjava/awt/event/MouseListener.java,\n+\tjava/awt/event/MouseMotionAdapter.java,\n+\tjava/awt/event/MouseMotionListener.java,\n+\tjava/awt/event/MouseWheelEvent.java,\n+\tjava/awt/event/MouseWheelListener.java,\n+\tjava/awt/event/PaintEvent.java,\n+\tjava/awt/event/TextEvent.java,\n+\tjava/awt/event/TextListener.java,\n+\tjava/awt/event/WindowAdapter.java,\n+\tjava/awt/event/WindowEvent.java,\n+\tjava/awt/event/WindowFocusListener.java,\n+\tjava/awt/event/WindowListener.java,\n+\tjava/awt/event/WindowStateListener.java,\n+\tjava/awt/font/TextHitInfo.java,\n+\tjava/awt/geom/CubicCurve2D.java,\n+\tjava/awt/geom/Dimension2D.java,\n+\tjava/awt/geom/Ellipse2D.java,\n+\tjava/awt/geom/IllegalPathStateException.java,\n+\tjava/awt/geom/Line2D.java,\n+\tjava/awt/geom/NoninvertibleTransformException.java,\n+\tjava/awt/geom/PathIterator.java,\n+\tjava/awt/geom/Point2D.java,\n+\tjava/awt/geom/QuadCurve2D.java,\n+\tjava/awt/geom/RectangularShape.java,\n+\tjava/awt/geom/RoundRectangle2D.java,\n+\tjava/awt/im/InputContext.java,\n+\tjava/awt/im/InputMethodHighlight.java,\n+\tjava/awt/im/InputMethodRequests.java,\n+\tjava/awt/im/InputSubset.java,\n+\tjava/awt/im/spi/InputMethod.java,\n+\tjava/awt/im/spi/InputMethodDescriptor.java,\n+\tjava/awt/image/BandCombineOp.java,\n+\tjava/awt/image/BandedSampleModel.java,\n+\tjava/awt/image/ByteLookupTable.java,\n+\tjava/awt/image/ComponentSampleModel.java,\n+\tjava/awt/image/DataBuffer.java,\n+\tjava/awt/image/DataBufferByte.java,\n+\tjava/awt/image/DataBufferDouble.java,\n+\tjava/awt/image/DataBufferFloat.java,\n+\tjava/awt/image/DataBufferInt.java,\n+\tjava/awt/image/DataBufferShort.java,\n+\tjava/awt/image/DataBufferUShort.java,\n+\tjava/awt/image/ImagingOpException.java,\n+\tjava/awt/image/Kernel.java,\n+\tjava/awt/image/LookupTable.java,\n+\tjava/awt/image/MultiPixelPackedSampleModel.java,\n+\tjava/awt/image/PackedColorModel.java,\n+\tjava/awt/image/PixelInterleavedSampleModel.java,\n+\tjava/awt/image/RGBImageFilter.java,\n+\tjava/awt/image/Raster.java,\n+\tjava/awt/image/RasterFormatException.java,\n+\tjava/awt/image/SampleModel.java,\n+\tjava/awt/image/ShortLookupTable.java,\n+\tjava/awt/image/SinglePixelPackedSampleModel.java,\n+\tjava/awt/image/WritableRaster.java,\n+\tjava/awt/print/PrinterAbortException.java,\n+\tjava/awt/print/PrinterException.java,\n+\tjava/awt/print/PrinterIOException.java,\n+\tjava/beans/AppletInitializer.java,\n+\tjava/beans/ExceptionListener.java,\n+\tjava/beans/PropertyChangeEvent.java,\n+\tjava/beans/PropertyChangeListenerProxy.java,\n+\tjava/beans/PropertyChangeSupport.java,\n+\tjava/beans/PropertyDescriptor.java,\n+\tjava/beans/VetoableChangeListenerProxy.java,\n+\tjava/beans/VetoableChangeSupport.java,\n+\tjava/io/BufferedReader.java,\n+\tjava/io/ByteArrayInputStream.java,\n+\tjava/io/ByteArrayOutputStream.java,\n+\tjava/io/CharArrayReader.java,\n+\tjava/io/CharArrayWriter.java,\n+\tjava/io/CharConversionException.java,\n+\tjava/io/DataInput.java,\n+\tjava/io/DataInputStream.java,\n+\tjava/io/DataOutput.java,\n+\tjava/io/DataOutputStream.java,\n+\tjava/io/EOFException.java,\n+\tjava/io/FileInputStream.java,\n+\tjava/io/FileNotFoundException.java,\n+\tjava/io/FileOutputStream.java,\n+\tjava/io/FilenameFilter.java,\n+\tjava/io/FilterInputStream.java,\n+\tjava/io/FilterOutputStream.java,\n+\tjava/io/FilterReader.java,\n+\tjava/io/FilterWriter.java,\n+\tjava/io/IOException.java,\n+\tjava/io/InputStream.java,\n+\tjava/io/InterruptedIOException.java,\n+\tjava/io/LineNumberInputStream.java,\n+\tjava/io/LineNumberReader.java,\n+\tjava/io/ObjectInputStream.java,\n+\tjava/io/ObjectStreamException.java,\n+\tjava/io/OptionalDataException.java,\n+\tjava/io/OutputStream.java,\n+\tjava/io/OutputStreamWriter.java,\n+\tjava/io/PrintStream.java,\n+\tjava/io/PrintWriter.java,\n+\tjava/io/PushbackInputStream.java,\n+\tjava/io/PushbackReader.java,\n+\tjava/io/RandomAccessFile.java,\n+\tjava/io/Reader.java,\n+\tjava/io/SequenceInputStream.java,\n+\tjava/io/Serializable.java,\n+\tjava/io/StreamCorruptedException.java,\n+\tjava/io/StreamTokenizer.java,\n+\tjava/io/StringBufferInputStream.java,\n+\tjava/io/StringWriter.java,\n+\tjava/io/SyncFailedException.java,\n+\tjava/io/UTFDataFormatException.java,\n+\tjava/io/UnsupportedEncodingException.java,\n+\tjava/io/WriteAbortedException.java,\n+\tjava/io/Writer.java,\n+\tjava/lang/AbstractMethodError.java,\n+\tjava/lang/ArithmeticException.java,\n+\tjava/lang/ArrayIndexOutOfBoundsException.java,\n+\tjava/lang/ArrayStoreException.java,\n+\tjava/lang/AssertionError.java,\n+\tjava/lang/Boolean.java,\n+\tjava/lang/Byte.java,\n+\tjava/lang/Class.java,\n+\tjava/lang/ClassCastException.java,\n+\tjava/lang/ClassCircularityError.java,\n+\tjava/lang/ClassLoader.java,\n+\tjava/lang/ClassNotFoundException.java,\n+\tjava/lang/CloneNotSupportedException.java,\n+\tjava/lang/Cloneable.java,\n+\tjava/lang/Comparable.java,\n+\tjava/lang/Compiler.java,\n+\tjava/lang/Double.java,\n+\tjava/lang/Error.java,\n+\tjava/lang/Exception.java,\n+\tjava/lang/ExceptionInInitializerError.java,\n+\tjava/lang/Float.java,\n+\tjava/lang/IllegalAccessError.java,\n+\tjava/lang/IllegalAccessException.java,\n+\tjava/lang/IllegalArgumentException.java,\n+\tjava/lang/IllegalMonitorStateException.java,\n+\tjava/lang/IllegalStateException.java,\n+\tjava/lang/IllegalThreadStateException.java,\n+\tjava/lang/IncompatibleClassChangeError.java,\n+\tjava/lang/IndexOutOfBoundsException.java,\n+\tjava/lang/InheritableThreadLocal.java,\n+\tjava/lang/InstantiationError.java,\n+\tjava/lang/InstantiationException.java,\n+\tjava/lang/Integer.java,\n+\tjava/lang/InternalError.java,\n+\tjava/lang/InterruptedException.java,\n+\tjava/lang/LinkageError.java,\n+\tjava/lang/Long.java,\n+\tjava/lang/NegativeArraySizeException.java,\n+\tjava/lang/NoClassDefFoundError.java,\n+\tjava/lang/NoSuchFieldError.java,\n+\tjava/lang/NoSuchFieldException.java,\n+\tjava/lang/NoSuchMethodError.java,\n+\tjava/lang/NoSuchMethodException.java,\n+\tjava/lang/NullPointerException.java,\n+\tjava/lang/Number.java,\n+\tjava/lang/NumberFormatException.java,\n+\tjava/lang/OutOfMemoryError.java,\n+\tjava/lang/Process.java,\n+\tjava/lang/Runnable.java,\n+\tjava/lang/Runtime.java,\n+\tjava/lang/RuntimeException.java,\n+\tjava/lang/RuntimePermission.java,\n+\tjava/lang/SecurityException.java,\n+\tjava/lang/SecurityManager.java,\n+\tjava/lang/Short.java,\n+\tjava/lang/StackOverflowError.java,\n+\tjava/lang/StackTraceElement.java,\n+\tjava/lang/StringBuffer.java,\n+\tjava/lang/StringIndexOutOfBoundsException.java,\n+\tjava/lang/ThreadDeath.java,\n+\tjava/lang/ThreadGroup.java,\n+\tjava/lang/Throwable.java,\n+\tjava/lang/UnsatisfiedLinkError.java,\n+\tjava/lang/UnsupportedOperationException.java,\n+\tjava/lang/VerifyError.java,\n+\tjava/lang/VirtualMachineError.java,\n+\tjava/lang/reflect/AccessibleObject.java,\n+\tjava/lang/reflect/Array.java,\n+\tjava/lang/reflect/InvocationTargetException.java,\n+\tjava/lang/reflect/Member.java,\n+\tjava/lang/reflect/Modifier.java,\n+\tjava/lang/reflect/Proxy.java,\n+\tjava/lang/reflect/ReflectPermission.java,\n+\tjava/lang/reflect/UndeclaredThrowableException.java,\n+\tjava/math/BigInteger.java,\n+\tjava/net/NetworkInterface.java,\n+\tjava/nio/ByteBufferHelper.java,\n+\tjava/nio/ByteBufferImpl.java,\n+\tjava/nio/DirectByteBufferImpl.java,\n+\tjava/nio/DoubleBufferImpl.java,\n+\tjava/nio/FloatBufferImpl.java,\n+\tjava/nio/IntBufferImpl.java,\n+\tjava/nio/LongBufferImpl.java,\n+\tjava/nio/ShortBufferImpl.java,\n+\tjava/nio/channels/Channel.java,\n+\tjava/nio/channels/IllegalBlockingModeException.java,\n+\tjava/nio/charset/spi/CharsetProvider.java,\n+\tjava/security/AccessControlException.java,\n+\tjava/security/BasicPermission.java,\n+\tjava/security/DigestException.java,\n+\tjava/security/DigestInputStream.java,\n+\tjava/security/DigestOutputStream.java,\n+\tjava/security/GeneralSecurityException.java,\n+\tjava/security/Guard.java,\n+\tjava/security/GuardedObject.java,\n+\tjava/security/InvalidAlgorithmParameterException.java,\n+\tjava/security/InvalidKeyException.java,\n+\tjava/security/InvalidParameterException.java,\n+\tjava/security/Key.java,\n+\tjava/security/KeyException.java,\n+\tjava/security/KeyManagementException.java,\n+\tjava/security/KeyStoreException.java,\n+\tjava/security/MessageDigestSpi.java,\n+\tjava/security/NoSuchAlgorithmException.java,\n+\tjava/security/NoSuchProviderException.java,\n+\tjava/security/Permission.java,\n+\tjava/security/PermissionCollection.java,\n+\tjava/security/Permissions.java,\n+\tjava/security/Principal.java,\n+\tjava/security/PrivateKey.java,\n+\tjava/security/PrivilegedActionException.java,\n+\tjava/security/ProviderException.java,\n+\tjava/security/PublicKey.java,\n+\tjava/security/SecureRandom.java,\n+\tjava/security/SecureRandomSpi.java,\n+\tjava/security/SignatureException.java,\n+\tjava/security/SignatureSpi.java,\n+\tjava/security/SignedObject.java,\n+\tjava/security/Signer.java,\n+\tjava/security/UnrecoverableKeyException.java,\n+\tjava/security/UnresolvedPermission.java,\n+\tjava/security/acl/AclNotFoundException.java,\n+\tjava/security/acl/LastOwnerException.java,\n+\tjava/security/acl/NotOwnerException.java,\n+\tjava/security/cert/CertPath.java,\n+\tjava/security/cert/CertPathBuilderException.java,\n+\tjava/security/cert/CertPathValidatorException.java,\n+\tjava/security/cert/CertStoreException.java,\n+\tjava/text/BreakIterator.java,\n+\tjava/text/ChoiceFormat.java,\n+\tjava/text/CollationElementIterator.java,\n+\tjava/text/CollationKey.java,\n+\tjava/text/Collator.java,\n+\tjava/text/DateFormat.java,\n+\tjava/text/DateFormatSymbols.java,\n+\tjava/text/DecimalFormat.java,\n+\tjava/text/DecimalFormatSymbols.java,\n+\tjava/text/FieldPosition.java,\n+\tjava/text/Format.java,\n+\tjava/text/NumberFormat.java,\n+\tjava/text/ParseException.java,\n+\tjava/text/ParsePosition.java,\n+\tjava/text/StringCharacterIterator.java,\n+\tjava/util/AbstractCollection.java,\n+\tjava/util/AbstractList.java,\n+\tjava/util/AbstractMap.java,\n+\tjava/util/AbstractSequentialList.java,\n+\tjava/util/AbstractSet.java,\n+\tjava/util/ArrayList.java,\n+\tjava/util/Arrays.java,\n+\tjava/util/BitSet.java,\n+\tjava/util/Collection.java,\n+\tjava/util/Collections.java,\n+\tjava/util/Comparator.java,\n+\tjava/util/ConcurrentModificationException.java,\n+\tjava/util/Currency.java,\n+\tjava/util/Date.java,\n+\tjava/util/EmptyStackException.java,\n+\tjava/util/Enumeration.java,\n+\tjava/util/EventListener.java,\n+\tjava/util/EventListenerProxy.java,\n+\tjava/util/EventObject.java,\n+\tjava/util/HashMap.java,\n+\tjava/util/HashSet.java,\n+\tjava/util/Hashtable.java,\n+\tjava/util/IdentityHashMap.java,\n+\tjava/util/Iterator.java,\n+\tjava/util/LinkedHashSet.java,\n+\tjava/util/LinkedList.java,\n+\tjava/util/List.java,\n+\tjava/util/ListIterator.java,\n+\tjava/util/ListResourceBundle.java,\n+\tjava/util/Map.java,\n+\tjava/util/MissingResourceException.java,\n+\tjava/util/NoSuchElementException.java,\n+\tjava/util/Observable.java,\n+\tjava/util/Observer.java,\n+\tjava/util/Properties.java,\n+\tjava/util/PropertyPermissionCollection.java,\n+\tjava/util/RandomAccess.java,\n+\tjava/util/Set.java,\n+\tjava/util/SortedMap.java,\n+\tjava/util/SortedSet.java,\n+\tjava/util/Stack.java,\n+\tjava/util/StringTokenizer.java,\n+\tjava/util/TooManyListenersException.java,\n+\tjava/util/TreeMap.java,\n+\tjava/util/TreeSet.java,\n+\tjava/util/Vector.java,\n+\tjava/util/logging/FileHandler.java,\n+\tjava/util/logging/Level.java,\n+\tjava/util/prefs/BackingStoreException.java,\n+\tjava/util/prefs/InvalidPreferencesFormatException.java,\n+\tjava/util/prefs/Preferences.java,\n+\tjavax/accessibility/Accessible.java,\n+\tjavax/accessibility/AccessibleAction.java,\n+\tjavax/accessibility/AccessibleBundle.java,\n+\tjavax/accessibility/AccessibleComponent.java,\n+\tjavax/accessibility/AccessibleContext.java,\n+\tjavax/accessibility/AccessibleEditableText.java,\n+\tjavax/accessibility/AccessibleExtendedComponent.java,\n+\tjavax/accessibility/AccessibleExtendedTable.java,\n+\tjavax/accessibility/AccessibleHyperlink.java,\n+\tjavax/accessibility/AccessibleHypertext.java,\n+\tjavax/accessibility/AccessibleIcon.java,\n+\tjavax/accessibility/AccessibleKeyBinding.java,\n+\tjavax/accessibility/AccessibleRelation.java,\n+\tjavax/accessibility/AccessibleRelationSet.java,\n+\tjavax/accessibility/AccessibleResourceBundle.java,\n+\tjavax/accessibility/AccessibleRole.java,\n+\tjavax/accessibility/AccessibleSelection.java,\n+\tjavax/accessibility/AccessibleState.java,\n+\tjavax/accessibility/AccessibleStateSet.java,\n+\tjavax/accessibility/AccessibleTable.java,\n+\tjavax/accessibility/AccessibleTableModelChange.java,\n+\tjavax/accessibility/AccessibleText.java,\n+\tjavax/accessibility/AccessibleValue.java,\n+\tjavax/imageio/IIOException.java,\n+\tjavax/imageio/ImageIO.java,\n+\tjavax/imageio/spi/IIOServiceProvider.java,\n+\tjavax/imageio/spi/ImageInputStreamSpi.java,\n+\tjavax/imageio/spi/ImageOutputStreamSpi.java,\n+\tjavax/imageio/spi/ImageReaderWriterSpi.java,\n+\tjavax/imageio/spi/ImageTranscoderSpi.java,\n+\tjavax/imageio/spi/RegisterableService.java,\n+\tjavax/imageio/spi/ServiceRegistry.java,\n+\tjavax/imageio/stream/IIOByteBuffer.java,\n+\tjavax/imageio/stream/ImageInputStream.java,\n+\tjavax/imageio/stream/ImageOutputStream.java,\n+\tjavax/naming/Binding.java,\n+\tjavax/naming/CannotProceedException.java,\n+\tjavax/naming/CompositeName.java,\n+\tjavax/naming/CompoundName.java,\n+\tjavax/naming/LinkException.java,\n+\tjavax/naming/LinkRef.java,\n+\tjavax/naming/NameClassPair.java,\n+\tjavax/naming/Reference.java,\n+\tjavax/naming/ReferralException.java,\n+\tjavax/naming/directory/Attribute.java,\n+\tjavax/naming/directory/AttributeModificationException.java,\n+\tjavax/naming/directory/Attributes.java,\n+\tjavax/naming/directory/DirContext.java,\n+\tjavax/naming/directory/ModificationItem.java,\n+\tjavax/naming/directory/SearchControls.java,\n+\tjavax/naming/directory/SearchResult.java,\n+\tjavax/naming/event/EventContext.java,\n+\tjavax/naming/event/EventDirContext.java,\n+\tjavax/naming/event/NamespaceChangeListener.java,\n+\tjavax/naming/event/NamingExceptionEvent.java,\n+\tjavax/naming/event/NamingListener.java,\n+\tjavax/naming/event/ObjectChangeListener.java,\n+\tjavax/naming/ldap/Control.java,\n+\tjavax/naming/ldap/ExtendedResponse.java,\n+\tjavax/naming/ldap/HasControls.java,\n+\tjavax/naming/ldap/LdapContext.java,\n+\tjavax/naming/ldap/UnsolicitedNotification.java,\n+\tjavax/naming/ldap/UnsolicitedNotificationEvent.java,\n+\tjavax/naming/ldap/UnsolicitedNotificationListener.java,\n+\tjavax/naming/spi/DirectoryManager.java,\n+\tjavax/naming/spi/ResolveResult.java,\n+\tjavax/naming/spi/Resolver.java,\n+\tjavax/security/auth/callback/Callback.java,\n+\tjavax/security/auth/callback/CallbackHandler.java,\n+\tjavax/security/auth/callback/ChoiceCallback.java,\n+\tjavax/security/auth/callback/ConfirmationCallback.java,\n+\tjavax/security/auth/callback/LanguageCallback.java,\n+\tjavax/security/auth/callback/NameCallback.java,\n+\tjavax/security/auth/callback/PasswordCallback.java,\n+\tjavax/security/auth/callback/TextInputCallback.java,\n+\tjavax/security/auth/callback/TextOutputCallback.java,\n+\tjavax/security/auth/callback/UnsupportedCallbackException.java,\n+\tjavax/security/sasl/Sasl.java,\n+\tjavax/security/sasl/SaslServerFactory.java,\n+\tjavax/swing/DefaultBoundedRangeModel.java,\n+\tjavax/swing/JComponent.java,\n+\tjavax/swing/JList.java,\n+\tjavax/swing/JProgressBar.java,\n+\tjavax/swing/JRadioButton.java,\n+\tjavax/swing/JTextArea.java,\n+\tjavax/swing/JTextField.java,\n+\tjavax/swing/JToggleButton.java,\n+\tjavax/swing/JTree.java,\n+\tjavax/swing/SpinnerListModel.java,\n+\tjavax/swing/event/EventListenerList.java,\n+\tjavax/swing/text/JTextComponent.java,\n+\tjavax/swing/text/StringContent.java,\n+\tjavax/swing/text/Utilities.java,\n+\tjavax/swing/undo/UndoManager.java,\n+\tjavax/swing/undo/UndoableEditSupport.java,\n+\tjavax/transaction/HeuristicCommitException.java,\n+\tjavax/transaction/HeuristicMixedException.java,\n+\tjavax/transaction/HeuristicRollbackException.java,\n+\tjavax/transaction/InvalidTransactionException.java,\n+\tjavax/transaction/NotSupportedException.java,\n+\tjavax/transaction/RollbackException.java,\n+\tjavax/transaction/Status.java,\n+\tjavax/transaction/Synchronization.java,\n+\tjavax/transaction/SystemException.java,\n+\tjavax/transaction/Transaction.java,\n+\tjavax/transaction/TransactionManager.java,\n+\tjavax/transaction/TransactionRequiredException.java,\n+\tjavax/transaction/TransactionRolledbackException.java,\n+\tjavax/transaction/UserTransaction.java,\n+\tjavax/transaction/xa/XAException.java,\n+\tjavax/transaction/xa/XAResource.java,\n+\tjavax/transaction/xa/Xid.java,\n+\tjavax/xml/XMLConstants.java,\n+\tjavax/xml/datatype/DatatypeConfigurationException.java,\n+\tjavax/xml/datatype/DatatypeConstants.java,\n+\tjavax/xml/datatype/DatatypeFactory.java,\n+\tjavax/xml/datatype/Duration.java,\n+\tjavax/xml/datatype/XMLGregorianCalendar.java,\n+\tjavax/xml/namespace/NamespaceContext.java,\n+\tjavax/xml/namespace/QName.java,\n+\tjavax/xml/parsers/DocumentBuilder.java,\n+\tjavax/xml/parsers/DocumentBuilderFactory.java,\n+\tjavax/xml/parsers/FactoryConfigurationError.java,\n+\tjavax/xml/parsers/ParserConfigurationException.java,\n+\tjavax/xml/parsers/SAXParser.java,\n+\tjavax/xml/parsers/SAXParserFactory.java,\n+\tjavax/xml/transform/ErrorListener.java,\n+\tjavax/xml/transform/OutputKeys.java,\n+\tjavax/xml/transform/Result.java,\n+\tjavax/xml/transform/Source.java,\n+\tjavax/xml/transform/SourceLocator.java,\n+\tjavax/xml/transform/Templates.java,\n+\tjavax/xml/transform/Transformer.java,\n+\tjavax/xml/transform/TransformerConfigurationException.java,\n+\tjavax/xml/transform/TransformerException.java,\n+\tjavax/xml/transform/TransformerFactory.java,\n+\tjavax/xml/transform/TransformerFactoryConfigurationError.java,\n+\tjavax/xml/transform/URIResolver.java,\n+\tjavax/xml/transform/dom/DOMLocator.java,\n+\tjavax/xml/transform/dom/DOMResult.java,\n+\tjavax/xml/transform/dom/DOMSource.java,\n+\tjavax/xml/transform/sax/SAXResult.java,\n+\tjavax/xml/transform/sax/SAXSource.java,\n+\tjavax/xml/transform/sax/SAXTransformerFactory.java,\n+\tjavax/xml/transform/sax/TemplatesHandler.java,\n+\tjavax/xml/transform/sax/TransformerHandler.java,\n+\tjavax/xml/transform/stream/StreamResult.java,\n+\tjavax/xml/transform/stream/StreamSource.java,\n+\tjavax/xml/validation/Schema.java,\n+\tjavax/xml/validation/SchemaFactory.java,\n+\tjavax/xml/validation/TypeInfoProvider.java,\n+\tjavax/xml/validation/Validator.java,\n+\tjavax/xml/validation/ValidatorHandler.java,\n+\tjavax/xml/xpath/XPathConstants.java,\n+\tjavax/xml/xpath/XPathException.java,\n+\tjavax/xml/xpath/XPathExpression.java,\n+\tjavax/xml/xpath/XPathExpressionException.java,\n+\tjavax/xml/xpath/XPathFactory.java,\n+\tjavax/xml/xpath/XPathFactoryConfigurationException.java,\n+\tjavax/xml/xpath/XPathFunction.java,\n+\tjavax/xml/xpath/XPathFunctionException.java,\n+\tjavax/xml/xpath/XPathFunctionResolver.java:\n+\tFixed usage of @author tag, reworked import statements,\n+\tremoved CVS tags, changed the modifier order and fixed\n+\tHTML usage in javadocs.\n+\n 2005-02-16  Julian Scheid  <julian@sektor37.de>\n \n \t* gnu/java/nio/charset/UTF_8.java (decodeLoop): Set inPos to"}, {"sha": "753c7cd46f1263479d4f3feb9da88e34333e070c", "filename": "libjava/gnu/java/awt/peer/gtk/GThreadNativeMethodRunner.java", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGThreadNativeMethodRunner.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGThreadNativeMethodRunner.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGThreadNativeMethodRunner.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -3,7 +3,7 @@\n    --portable-native-sync option. \n    This is used by gthread-jni.c\n    \n-   Copyright (C) 2004 Free Software Foundation, Inc.\n+   Copyright (C) 2004, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -40,10 +40,11 @@\n exception statement from your version. */\n \n package gnu.java.awt.peer.gtk;\n+\n import java.lang.ref.WeakReference;\n-import java.util.Set;\n import java.util.Collections;\n import java.util.HashSet;\n+import java.util.Set;\n \n /** Implements pthread_create(), under glib's gthread abstraction, for use\n     with GNU Classpath's --portable-native-sync option.  This is used in"}, {"sha": "d130c11756077e5f23ebc0bbe89acae341558107", "filename": "libjava/gnu/java/awt/peer/gtk/GdkFontPeer.java", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkFontPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkFontPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkFontPeer.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* GdkFontPeer.java -- Implements FontPeer with GTK+\n-   Copyright (C) 1999, 2004 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2004, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -47,16 +47,15 @@\n import java.awt.font.GlyphVector;\n import java.awt.font.LineMetrics;\n import java.awt.geom.Rectangle2D;\n+import java.text.CharacterIterator;\n+import java.text.StringCharacterIterator;\n import java.util.Locale;\n import java.util.Map;\n import java.util.ResourceBundle;\n-import java.text.CharacterIterator;\n-import java.text.StringCharacterIterator;\n \n public class GdkFontPeer extends ClasspathFontPeer\n {\n-\n-  native static void initStaticState ();\n+  static native void initStaticState();\n   private final int native_state = GtkGenericPeer.getUniqueInteger ();\n   private static ResourceBundle bundle;\n   "}, {"sha": "29d38b5e3f4bb9a5436b59a5fbc937c7bd0c34e0", "filename": "libjava/gnu/java/awt/peer/gtk/GdkGlyphVector.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkGlyphVector.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkGlyphVector.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkGlyphVector.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* GdkGlyphVector.java -- Glyph vector object\n-   Copyright (C) 2003, 2004  Free Software Foundation, Inc.\n+   Copyright (C) 2003, 2004, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -42,9 +42,9 @@\n import java.awt.Rectangle;\n import java.awt.Shape;\n import java.awt.font.FontRenderContext;\n+import java.awt.font.GlyphJustificationInfo;\n import java.awt.font.GlyphMetrics;\n import java.awt.font.GlyphVector;\n-import java.awt.font.GlyphJustificationInfo;\n import java.awt.geom.AffineTransform;\n import java.awt.geom.Point2D;\n import java.awt.geom.Rectangle2D;"}, {"sha": "7361b291c9474d8b94c402d1858d4c84bb420846", "filename": "libjava/gnu/java/awt/peer/gtk/GdkGraphics.java", "status": "modified", "additions": 19, "deletions": 19, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkGraphics.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkGraphics.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkGraphics.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* GdkGraphics.java\n-   Copyright (C) 1998, 1999, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -108,7 +108,7 @@ void initComponentGraphics ()\n \n   native void connectSignals (GtkComponentPeer component);\n \n-  public native void clearRect (int x, int y, int width, int height);\n+  public native void clearRect(int x, int y, int width, int height);\n \n   public void clipRect (int x, int y, int width, int height)\n   {\n@@ -119,15 +119,15 @@ public void clipRect (int x, int y, int width, int height)\n     setClipRectangle (clip.x, clip.y, clip.width, clip.height);\n   }\n \n-  native public void copyArea (int x, int y, int width, int height, \n-\t\t\t       int dx, int dy);\n+  public native void copyArea(int x, int y, int width, int height, \n+\t\t\t      int dx, int dy);\n \n   public Graphics create ()\n   {\n     return new GdkGraphics (this);\n   }\n \n-  native public void dispose ();\n+  public native void dispose();\n \n   native void copyPixmap (Graphics g, int x, int y, int width, int height);\n   native void copyAndScalePixmap (Graphics g, boolean flip_x, boolean flip_y,\n@@ -316,22 +316,22 @@ public boolean drawImage (Image img, int dx1, int dy1, int dx2, int dy2,\n                         SystemColor.window, observer);\n   }\n \n-  native public void drawLine (int x1, int y1, int x2, int y2);\n+  public native void drawLine(int x1, int y1, int x2, int y2);\n \n-  native public void drawArc (int x, int y, int width, int height,\n-\t\t\t      int startAngle, int arcAngle);\n-  native public void fillArc (int x, int y, int width, int height, \n-\t\t\t      int startAngle, int arcAngle);\n-  native public void drawOval(int x, int y, int width, int height);\n-  native public void fillOval(int x, int y, int width, int height);\n+  public native void drawArc(int x, int y, int width, int height,\n+\t\t\t     int startAngle, int arcAngle);\n+  public native void fillArc(int x, int y, int width, int height, \n+\t\t\t     int startAngle, int arcAngle);\n+  public native void drawOval(int x, int y, int width, int height);\n+  public native void fillOval(int x, int y, int width, int height);\n \n-  native public void drawPolygon(int[] xPoints, int[] yPoints, int nPoints);\n-  native public void fillPolygon(int[] xPoints, int[] yPoints, int nPoints);\n+  public native void drawPolygon(int[] xPoints, int[] yPoints, int nPoints);\n+  public native void fillPolygon(int[] xPoints, int[] yPoints, int nPoints);\n \n-  native public void drawPolyline(int[] xPoints, int[] yPoints, int nPoints);\n+  public native void drawPolyline(int[] xPoints, int[] yPoints, int nPoints);\n \n-  native public void drawRect(int x, int y, int width, int height);\n-  native public void fillRect (int x, int y, int width, int height);\n+  public native void drawRect(int x, int y, int width, int height);\n+  public native void fillRect(int x, int y, int width, int height);\n \n   GdkFontPeer getFontPeer() \n   {\n@@ -448,7 +448,7 @@ public void setClip (Shape clip)\n     setClip (clip.getBounds ());\n   }\n \n-  native private void setFGColor (int red, int green, int blue);\n+  private native void setFGColor(int red, int green, int blue);\n \n   public void setColor (Color c)\n   {\n@@ -490,7 +490,7 @@ public void setXORMode (Color c)\n \t\tcolor.getBlue  () ^ xorColor.getBlue ());\n   }\n \n-  native public void translateNative (int x, int y);\n+  public native void translateNative(int x, int y);\n \n   public void translate (int x, int y)\n   {"}, {"sha": "513c75c094a3d112d9ca2fe2a4d4bd5d2b3eac57", "filename": "libjava/gnu/java/awt/peer/gtk/GdkGraphics2D.java", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkGraphics2D.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkGraphics2D.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkGraphics2D.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -366,15 +366,15 @@ private void stateRestore()\n   // \"middle of pixel\" coordinates and light up complete pixels.\n   private boolean shiftDrawCalls = false;\n \n-  private final double shifted(double coord, boolean doShift)\n+  private double shifted(double coord, boolean doShift)\n   {\n     if (doShift)\n       return Math.floor(coord) + 0.5;\n     else\n       return coord;\n   }\n \n-  private final void walkPath(PathIterator p, boolean doShift)\n+  private void walkPath(PathIterator p, boolean doShift)\n   {\n     double x = 0;\n     double y = 0;\n@@ -424,7 +424,7 @@ private final void walkPath(PathIterator p, boolean doShift)\n       }\n   }\n \n-  private final Map getDefaultHints()\n+  private Map getDefaultHints()\n   {\n     HashMap defaultHints = new HashMap();\n \n@@ -446,7 +446,7 @@ private final Map getDefaultHints()\n     return defaultHints;\n   }\n \n-  public static final int[] findSimpleIntegerArray (ColorModel cm, Raster raster)\n+  public static int[] findSimpleIntegerArray (ColorModel cm, Raster raster)\n   {\n     if (cm == null || raster == null)\n       return null;\n@@ -485,7 +485,7 @@ public static final int[] findSimpleIntegerArray (ColorModel cm, Raster raster)\n     return db.getData();\n   }\n \n-  private final void updateBufferedImage()\n+  private void updateBufferedImage()\n   {\n     if (bimage != null && pixelConversionRequired)\n       {\n@@ -497,8 +497,8 @@ private final void updateBufferedImage()\n       }\n   }\n \n-  private final boolean drawImage(Image img, AffineTransform xform,\n-                                  Color bgcolor, ImageObserver obs)\n+  private boolean drawImage(Image img, AffineTransform xform,\n+                            Color bgcolor, ImageObserver obs)\n   {\n     if (img == null)\n       return false;\n@@ -927,8 +927,8 @@ public Color getBackground()\n     return bg;\n   }\n \n-  private final void doPolygon(int[] xPoints, int[] yPoints, int nPoints,\n-                               boolean close, boolean fill)\n+  private void doPolygon(int[] xPoints, int[] yPoints, int nPoints,\n+                         boolean close, boolean fill)\n   {\n     if (nPoints < 1)\n       return;\n@@ -981,8 +981,8 @@ public void drawPolyline(int[] xPoints, int[] yPoints, int nPoints)\n     doPolygon(xPoints, yPoints, nPoints, false, false);\n   }\n \n-  private final boolean drawRaster(ColorModel cm, Raster r,\n-                                   AffineTransform imageToUser, Color bgcolor)\n+  private boolean drawRaster(ColorModel cm, Raster r,\n+                             AffineTransform imageToUser, Color bgcolor)\n   {\n     if (r == null)\n       return false;"}, {"sha": "c485db228baa13997d1b0e61f5dca4a68e587b34", "filename": "libjava/gnu/java/awt/peer/gtk/GdkGraphicsConfiguration.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkGraphicsConfiguration.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkGraphicsConfiguration.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkGraphicsConfiguration.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -38,9 +38,9 @@\n package gnu.java.awt.peer.gtk;\n \n import java.awt.BufferCapabilities;\n-import java.awt.ImageCapabilities;\n import java.awt.GraphicsConfiguration;\n import java.awt.GraphicsDevice;\n+import java.awt.ImageCapabilities;\n import java.awt.Rectangle;\n \n import java.awt.geom.AffineTransform;"}, {"sha": "3f7b87f45cc61ff6eb7d81b92f0e9d7c21ba3974", "filename": "libjava/gnu/java/awt/peer/gtk/GdkGraphicsEnvironment.java", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkGraphicsEnvironment.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkGraphicsEnvironment.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkGraphicsEnvironment.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* GdkGraphicsEnvironment.java -- information about the graphics environment\n-   Copyright (C) 2004 Free Software Foundation, Inc.\n+   Copyright (C) 2004, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -79,8 +79,9 @@ public Graphics2D createGraphics (BufferedImage image)\n   {\n     return new GdkGraphics2D (image);\n   }\n-    native private int nativeGetNumFontFamilies ();\n-    native private void nativeGetFontFamilies (String[] family_names);\n+  \n+  private native int nativeGetNumFontFamilies();\n+  private native void nativeGetFontFamilies(String[] family_names);\n \n   public Font[] getAllFonts ()\n   {"}, {"sha": "ee6c38f3c3ac50994bcf412ff43fe3c3b4826f1f", "filename": "libjava/gnu/java/awt/peer/gtk/GdkPixbufDecoder.java", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkPixbufDecoder.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkPixbufDecoder.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkPixbufDecoder.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* GdkPixbufDecoder.java -- Image data decoding object\n-   Copyright (C) 2003, 2004  Free Software Foundation, Inc.\n+   Copyright (C) 2003, 2004, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -57,16 +57,16 @@\n import java.util.Locale;\n import java.util.Vector;\n \n-import javax.imageio.ImageReader;\n-import javax.imageio.ImageWriter;\n+import javax.imageio.IIOImage;\n import javax.imageio.ImageReadParam;\n+import javax.imageio.ImageReader;\n import javax.imageio.ImageTypeSpecifier;\n import javax.imageio.ImageWriteParam;\n-import javax.imageio.IIOImage;\n+import javax.imageio.ImageWriter;\n import javax.imageio.metadata.IIOMetadata;\n+import javax.imageio.spi.IIORegistry;\n import javax.imageio.spi.ImageReaderSpi;\n import javax.imageio.spi.ImageWriterSpi;\n-import javax.imageio.spi.IIORegistry;\n import javax.imageio.stream.ImageInputStream;\n import javax.imageio.stream.ImageOutputStream;\n \n@@ -80,7 +80,8 @@ public class GdkPixbufDecoder extends gnu.java.awt.image.ImageDecoder\n       }\n     initStaticState ();\n   }\n-  native static void initStaticState ();\n+  \n+  static native void initStaticState();\n   private final int native_state = GtkGenericPeer.getUniqueInteger ();\n   private boolean initialized = false;\n "}, {"sha": "054e7332293a950bb97def6ed9135f159bced894", "filename": "libjava/gnu/java/awt/peer/gtk/GdkRobotPeer.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkRobotPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkRobotPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkRobotPeer.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* GdkRobot.java -- an XTest implementation of RobotPeer\n-   Copyright (C) 2004  Free Software Foundation, Inc.\n+   Copyright (C) 2004, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -39,9 +39,9 @@\n \n import java.awt.AWTException;\n import java.awt.GraphicsDevice;\n+import java.awt.Rectangle;\n import java.awt.image.ColorModel;\n import java.awt.image.DirectColorModel;\n-import java.awt.Rectangle;\n import java.awt.peer.RobotPeer;\n \n /**"}, {"sha": "bd7b46ab8b914dffd349e13828bb32bf5c38ada7", "filename": "libjava/gnu/java/awt/peer/gtk/GdkScreenGraphicsDevice.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkScreenGraphicsDevice.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkScreenGraphicsDevice.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkScreenGraphicsDevice.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* GdkScreenGraphicsDevice.java -- information about a screen device\n-   Copyright (C) 2004 Free Software Foundation, Inc.\n+   Copyright (C) 2004, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -38,8 +38,8 @@\n \n package gnu.java.awt.peer.gtk;\n \n-import java.awt.GraphicsDevice;\n import java.awt.GraphicsConfiguration;\n+import java.awt.GraphicsDevice;\n \n public class GdkScreenGraphicsDevice extends GraphicsDevice\n {"}, {"sha": "1a456d12a3cf93beaf013cc9bb45f97d02df1ff8", "filename": "libjava/gnu/java/awt/peer/gtk/GdkTextLayout.java", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkTextLayout.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkTextLayout.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkTextLayout.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* GdkTextLayout.java\n-   Copyright (C) 2003 Free Software Foundation, Inc.\n+   Copyright (C) 2003, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -38,24 +38,24 @@\n \n package gnu.java.awt.peer.gtk;\n \n+import gnu.classpath.Configuration;\n+import gnu.java.awt.peer.ClasspathTextLayoutPeer;\n+\n import java.awt.Font;\n import java.awt.Graphics2D;\n import java.awt.Shape;\n import java.awt.font.FontRenderContext;\n import java.awt.font.GlyphMetrics;\n import java.awt.font.GlyphVector;\n+import java.awt.font.TextAttribute;\n import java.awt.font.TextHitInfo;\n import java.awt.font.TextLayout;\n import java.awt.geom.AffineTransform;\n import java.awt.geom.GeneralPath;\n import java.awt.geom.Rectangle2D;\n-import java.text.CharacterIterator;\n import java.text.AttributedCharacterIterator;\n import java.text.AttributedString;\n-import java.awt.font.TextAttribute;\n-\n-import gnu.classpath.Configuration;\n-import gnu.java.awt.peer.ClasspathTextLayoutPeer;\n+import java.text.CharacterIterator;\n \n /**\n  * This is an implementation of the text layout peer interface which\n@@ -82,7 +82,7 @@ private native void getExtents(double[] inkExtents,\n   private native void indexToPos(int idx, double[] pos);\n   private native void initState ();\n   private native void dispose ();\n-  native static void initStaticState ();\n+  static native void initStaticState();\n   private final int native_state = GtkGenericPeer.getUniqueInteger ();\n   protected void finalize ()\n   {"}, {"sha": "83aa98981fd9f9cb45a5da1497bc3acfc47f20ab", "filename": "libjava/gnu/java/awt/peer/gtk/GtkCheckboxMenuItemPeer.java", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkCheckboxMenuItemPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkCheckboxMenuItemPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkCheckboxMenuItemPeer.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* GtkCheckboxMenuItemPeer.java -- Implements CheckboxMenuItemPeer with GTK+\n-   Copyright (C) 1999 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -38,11 +38,10 @@\n \n package gnu.java.awt.peer.gtk;\n \n+import java.awt.CheckboxMenuItem;\n import java.awt.ItemSelectable;\n import java.awt.event.ItemEvent;\n-import java.awt.CheckboxMenuItem;\n import java.awt.peer.CheckboxMenuItemPeer;\n-import java.awt.peer.MenuItemPeer;\n \n public class GtkCheckboxMenuItemPeer extends GtkMenuItemPeer\n   implements CheckboxMenuItemPeer\n@@ -55,7 +54,7 @@ public GtkCheckboxMenuItemPeer (CheckboxMenuItem menu)\n     setState (menu.getState ());\n   }\n \n-  native public void setState (boolean t);\n+  public native void setState(boolean t);\n \n   protected void postMenuActionEvent ()\n   {"}, {"sha": "43e48328da3885f6fb7fc794ef1b3fa2aa1b6db5", "filename": "libjava/gnu/java/awt/peer/gtk/GtkChoicePeer.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkChoicePeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkChoicePeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkChoicePeer.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* GtkChoicePeer.java -- Implements ChoicePeer with GTK\n-   Copyright (C) 1998, 1999 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -72,7 +72,7 @@ public GtkChoicePeer (Choice c)\n   native void nativeRemove (int index);\n   native void nativeRemoveAll ();\n \n-  native public void select (int position);\n+  public native void select (int position);\n  \n   public void add (String item, int index)\n   {"}, {"sha": "b9cc1613b7850cb97fcb6c165e64a9097cd48970", "filename": "libjava/gnu/java/awt/peer/gtk/GtkClipboard.java", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkClipboard.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkClipboard.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkClipboard.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* GtkClipboard.java\n-   Copyright (C) 1999 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -52,7 +52,7 @@ public class GtkClipboard extends Clipboard\n   /* the number of milliseconds that we'll wait around for the\n      owner of the GDK_SELECTION_PRIMARY selection to convert \n      the requested data */\n-  final static int SELECTION_RECEIVED_TIMEOUT = 5000;\n+  static final int SELECTION_RECEIVED_TIMEOUT = 5000;\n \n   /* We currently only support transferring of text between applications */\n   static String selection;\n@@ -165,6 +165,6 @@ synchronized void selectionClear()\n   }\n \n   native void initNativeState();\n-  native static void requestStringConversion();\n-  native static void selectionGet();\n+  static native void requestStringConversion();\n+  static native void selectionGet();\n }"}, {"sha": "2625f56a0083ce07969e2bc7115cf2e7f52ab2a7", "filename": "libjava/gnu/java/awt/peer/gtk/GtkComponentPeer.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkComponentPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkComponentPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkComponentPeer.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* GtkComponentPeer.java -- Implements ComponentPeer with GTK\n-   Copyright (C) 1998, 1999, 2002, 2004 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2002, 2004, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -81,7 +81,7 @@ public class GtkComponentPeer extends GtkGenericPeer\n      knows if a parent is disabled.  In that case Component.isEnabled \n      may return true, but our isEnabled will always return false */\n   native boolean isEnabled ();\n-  native static boolean modalHasGrab ();\n+  static native boolean modalHasGrab();\n \n   native int[] gtkWidgetGetForeground ();\n   native int[] gtkWidgetGetBackground ();"}, {"sha": "4281b49cc65717a942935bc86df223c0e27e75d6", "filename": "libjava/gnu/java/awt/peer/gtk/GtkFileDialogPeer.java", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkFileDialogPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkFileDialogPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkFileDialogPeer.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* GtkFileDialogPeer.java -- Implements FileDialogPeer with GTK\n-   Copyright (C) 1998, 1999, 2002, 2004 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2002, 2004, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -57,11 +57,12 @@ public class GtkFileDialogPeer extends GtkDialogPeer implements FileDialogPeer\n   native void create (GtkContainerPeer parent);\n   native void connectSignals ();\n   native void nativeSetFile (String file);\n-  native public String nativeGetDirectory();\n-  native public void nativeSetDirectory(String directory);\n+  public native String nativeGetDirectory();\n+  public native void nativeSetDirectory(String directory);\n   native void nativeSetFilenameFilter (FilenameFilter filter);\n \n-  public void create() {\n+  public void create()\n+  {\n     create((GtkContainerPeer) awtComponent.getParent().getPeer());\n \n     FileDialog fd = (FileDialog) awtComponent;"}, {"sha": "e0f070368c52c009eddf892099ff79c7bf376d1a", "filename": "libjava/gnu/java/awt/peer/gtk/GtkFontPeer.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkFontPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkFontPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkFontPeer.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* GtkFontPeer.java -- Implements FontPeer with GTK+\n-   Copyright (C) 1999, 2004  Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2004, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -67,7 +67,7 @@ public class GtkFontPeer extends ClasspathFontPeer\n       }\n   }\n \n-  final private String Xname;\n+  private final String Xname;\n \n   public GtkFontPeer (String name, int style)\n   {"}, {"sha": "02251632b1ac8dc6716c668720396c0a7729fa7e", "filename": "libjava/gnu/java/awt/peer/gtk/GtkLabelPeer.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkLabelPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkLabelPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkLabelPeer.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* GtkLabelPeer.java -- Implements LabelPeer with GTK\n-   Copyright (C) 1998, 1999 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -48,7 +48,7 @@ public class GtkLabelPeer extends GtkComponentPeer\n   native void gtkWidgetModifyFont (String name, int style, int size);\n   native void nativeSetAlignment (float alignment);\n \n-  native public void setText (String text);\n+  public native void setText(String text);\n   native void setNativeBounds (int x, int y, int width, int height);\n \n   void create ()"}, {"sha": "4b547f56afb9c4b44d3a8170805b40e533685356", "filename": "libjava/gnu/java/awt/peer/gtk/GtkMenuBarPeer.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkMenuBarPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkMenuBarPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkMenuBarPeer.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* GtkMenuBarPeer.java -- Implements MenuBarPeer with GTK+\n-   Copyright (C) 1999 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -76,5 +76,5 @@ public void addHelpMenu (Menu menu)\n     // nativeSetHelpMenu((MenuPeer) menu.getPeer());\n   }\n \n-  native public void delMenu (int index);\n+  public native void delMenu(int index);\n }"}, {"sha": "f85648ee89c4fc1cc39d1383783f6020b6a52ae1", "filename": "libjava/gnu/java/awt/peer/gtk/GtkMenuItemPeer.java", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkMenuItemPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkMenuItemPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkMenuItemPeer.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* GtkMenuItemPeer.java -- Implements MenuItemPeer with GTK+\n-   Copyright (C) 1999 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -40,8 +40,8 @@\n \n import java.awt.Font;\n import java.awt.Menu;\n-import java.awt.MenuComponent;\n import java.awt.MenuBar;\n+import java.awt.MenuComponent;\n import java.awt.MenuItem;\n import java.awt.peer.MenuItemPeer;\n import java.awt.peer.MenuPeer;\n@@ -109,9 +109,9 @@ public void enable ()\n     setEnabled (true);\n   }\n \n-  native public void setEnabled (boolean b);\n+  public native void setEnabled(boolean b);\n \n-  native public void setLabel (String label);\n+  public native void setLabel(String label);\n \n   protected void postMenuActionEvent ()\n   {"}, {"sha": "971a349d26e834880d199e35bb8b90553f22ba88", "filename": "libjava/gnu/java/awt/peer/gtk/GtkMenuPeer.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkMenuPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkMenuPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkMenuPeer.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* GtkMenuPeer.java -- Implements MenuPeer with GTK+\n-   Copyright (C) 1999 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -43,8 +43,8 @@\n import java.awt.MenuContainer;\n import java.awt.MenuItem;\n import java.awt.MenuShortcut;\n-import java.awt.peer.MenuPeer;\n import java.awt.peer.MenuItemPeer;\n+import java.awt.peer.MenuPeer;\n \n public class GtkMenuPeer extends GtkMenuItemPeer\n   implements MenuPeer\n@@ -99,5 +99,5 @@ public void addItem (MenuItemPeer item, MenuShortcut ms)\n     addItem (item, key, shiftModifier);\n   }\n \n-  native public void delItem (int index);\n+  public native void delItem(int index);\n }"}, {"sha": "ae337a0714f895f32d6ccdad606d1cc9b37fb665", "filename": "libjava/gnu/java/awt/peer/gtk/GtkScrollPanePeer.java", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkScrollPanePeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkScrollPanePeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkScrollPanePeer.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* GtkScrollPanePeer.java -- Implements ScrollPanePeer with GTK\n-   Copyright (C) 1998, 1999 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -83,9 +83,9 @@ public void childResized (int width, int height)\n       setPolicy (((ScrollPane) awtComponent).getScrollbarDisplayPolicy ());\n   }\n \n-  native public int getHScrollbarHeight ();\n-  native public int getVScrollbarWidth ();\n-  native public void setScrollPosition (int x, int y);\n+  public native int getHScrollbarHeight();\n+  public native int getVScrollbarWidth();\n+  public native void setScrollPosition(int x, int y);\n \n   public Dimension getPreferredSize ()\n   {"}, {"sha": "065bab12e1de4f2f79bfd24f088ed54604dd963a", "filename": "libjava/gnu/java/awt/peer/gtk/GtkScrollbarPeer.java", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkScrollbarPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkScrollbarPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkScrollbarPeer.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* GtkScrollbarPeer.java -- Implements ScrollbarPeer with GTK+\n-   Copyright (C) 1998, 1999 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -67,9 +67,9 @@ public GtkScrollbarPeer (Scrollbar s)\n     super (s);\n   }\n \n-  native public void setLineIncrement (int amount);\n-  native public void setPageIncrement (int amount);\n-  native public void setValues (int value, int visible, int min, int max);\n+  public native void setLineIncrement(int amount);\n+  public native void setPageIncrement(int amount);\n+  public native void setValues(int value, int visible, int min, int max);\n \n   protected void postAdjustmentEvent (int type, int value)\n   {"}, {"sha": "58987ee2a22898cd1419c167811a4d6e799f9779", "filename": "libjava/gnu/java/awt/peer/gtk/GtkToolkit.java", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkToolkit.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkToolkit.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkToolkit.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* GtkToolkit.java -- Implements an AWT Toolkit using GTK for peers\n-   Copyright (C) 1998, 1999, 2002, 2003, 2004  Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2002, 2003, 2004, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -44,7 +44,6 @@\n import gnu.java.awt.peer.ClasspathFontPeer;\n import gnu.java.awt.peer.ClasspathTextLayoutPeer;\n import gnu.java.awt.peer.EmbeddedWindowPeer;\n-import gnu.java.awt.peer.gtk.GdkPixbufDecoder;\n \n import java.awt.*;\n import java.awt.datatransfer.Clipboard;\n@@ -68,6 +67,7 @@\n import java.util.LinkedHashMap;\n import java.util.Map;\n import java.util.Properties;\n+\n import javax.imageio.spi.IIORegistry;\n \n /* This class uses a deprecated method java.awt.peer.ComponentPeer.getPeer().\n@@ -129,8 +129,8 @@ public GtkToolkit ()\n     systemClipboard = new GtkClipboard ();\n   }\n \n-  native public void beep ();\n-  native private void getScreenSizeDimensions (int[] xy);\n+  public native void beep();\n+  private native void getScreenSizeDimensions(int[] xy);\n   \n   public int checkImage (Image image, int width, int height, \n \t\t\t ImageObserver observer) \n@@ -389,9 +389,10 @@ public PrintJob getPrintJob (Frame frame, String jobtitle, Properties props)\n     return null;\n   }\n \n-  native public int getScreenResolution();\n+  public native int getScreenResolution();\n \n-  public Dimension getScreenSize () {\n+  public Dimension getScreenSize ()\n+  {\n     int dim[] = new int[2];\n     getScreenSizeDimensions(dim);\n     return new Dimension(dim[0], dim[1]);\n@@ -430,7 +431,7 @@ public void run ()\n     return false;\n   }\n \n-  native public void sync ();\n+  public native void sync();\n \n   protected void setComponentState (Component c, GtkComponentPeer cp)\n   {"}, {"sha": "353bc94aee626c7ae70b48f1bf1263b63f037bb6", "filename": "libjava/gnu/java/awt/peer/gtk/GtkWindowPeer.java", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkWindowPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkWindowPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkWindowPeer.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* GtkWindowPeer.java -- Implements WindowPeer with GTK\n-   Copyright (C) 1998, 1999, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -47,14 +47,14 @@\n public class GtkWindowPeer extends GtkContainerPeer\n   implements WindowPeer\n {\n-  static protected final int GDK_WINDOW_TYPE_HINT_NORMAL = 0;\n-  static protected final int GDK_WINDOW_TYPE_HINT_DIALOG = 1;\n-  static protected final int GDK_WINDOW_TYPE_HINT_MENU = 2;\n-  static protected final int GDK_WINDOW_TYPE_HINT_TOOLBAR = 3;\n-  static protected final int GDK_WINDOW_TYPE_HINT_SPLASHSCREEN = 4;\n-  static protected final int GDK_WINDOW_TYPE_HINT_UTILITY = 5;\n-  static protected final int GDK_WINDOW_TYPE_HINT_DOCK = 6;\n-  static protected final int GDK_WINDOW_TYPE_HINT_DESKTOP = 7;\n+  protected static final int GDK_WINDOW_TYPE_HINT_NORMAL = 0;\n+  protected static final int GDK_WINDOW_TYPE_HINT_DIALOG = 1;\n+  protected static final int GDK_WINDOW_TYPE_HINT_MENU = 2;\n+  protected static final int GDK_WINDOW_TYPE_HINT_TOOLBAR = 3;\n+  protected static final int GDK_WINDOW_TYPE_HINT_SPLASHSCREEN = 4;\n+  protected static final int GDK_WINDOW_TYPE_HINT_UTILITY = 5;\n+  protected static final int GDK_WINDOW_TYPE_HINT_DOCK = 6;\n+  protected static final int GDK_WINDOW_TYPE_HINT_DESKTOP = 7;\n \n   private boolean hasBeenShown = false;\n   private int oldState = Frame.NORMAL;\n@@ -112,8 +112,8 @@ public GtkWindowPeer (Window window)\n     super (window);\n   }\n \n-  native public void toBack ();\n-  native public void toFront ();\n+  public native void toBack();\n+  public native void toFront();\n \n   native void nativeSetBounds (int x, int y, int width, int height);\n "}, {"sha": "3adc5ce0a4b7b4104613ab0e920eebe76b3971af", "filename": "libjava/java/applet/Applet.java", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fapplet%2FApplet.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fapplet%2FApplet.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fapplet%2FApplet.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* Applet.java -- Java base applet class\n-   Copyright (C) 1999, 2002, 2004  Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2002, 2004, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -63,8 +63,8 @@\n  * are init, stop, and destroy for control purposes, and getAppletInfo and\n  * getParameterInfo for descriptive purposes.\n  *\n- * @author Aaron M. Renn <arenn@urbanophile.com>\n- * @author Eric Blake <ebb9@email.byu.edu>\n+ * @author Aaron M. Renn (arenn@urbanophile.com)\n+ * @author Eric Blake (ebb9@email.byu.edu)\n  * @since 1.0\n  * @status updated to 1.4\n  */\n@@ -477,7 +477,7 @@ private void readObject(ObjectInputStream s)\n    * This class provides accessibility support for Applets, and is the\n    * runtime type returned by {@link #getAccessibleContext()}.\n    *\n-   * @author Eric Blake <ebb9@email.byu.edu>\n+   * @author Eric Blake (ebb9@email.byu.edu)\n    * @since 1.3\n    */\n   protected class AccessibleApplet extends AccessibleAWTPanel"}, {"sha": "e92bc01e67c5f7f46583d01a0adde64bebc28236", "filename": "libjava/java/awt/AWTError.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FAWTError.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FAWTError.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FAWTError.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* AWTError.java -- A serious AWT error occurred.\n-   Copyright (C) 1999, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -42,7 +42,7 @@\n  * This error is thrown when a critical Abstract Window Toolkit (AWT) error\n  * occurs.\n  *\n- * @author Aaron M. Renn <arenn@urbanophile.com>\n+ * @author Aaron M. Renn (arenn@urbanophile.com)\n  * @status updated to 1.4\n  */\n public class AWTError extends Error"}, {"sha": "faa6dac25ef3f87f1987aaed733ad763e720fcfb", "filename": "libjava/java/awt/AWTEvent.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FAWTEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FAWTEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FAWTEvent.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -50,8 +50,8 @@\n  * listeners. Event masks are appropriately set when registering on\n  * components.\n  *\n- * @author Warren Levy  <warrenl@cygnus.com>\n- * @author Aaron M. Renn <arenn@urbanophile.com>\n+ * @author Warren Levy  (warrenl@cygnus.com)\n+ * @author Aaron M. Renn (arenn@urbanophile.com)\n  * @since 1.1\n  * @status updated to 1.4\n  */"}, {"sha": "943ffacfad3d40a02a6a5a560a80473a77f61689", "filename": "libjava/java/awt/AWTEventMulticaster.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FAWTEventMulticaster.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FAWTEventMulticaster.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FAWTEventMulticaster.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -107,8 +107,8 @@\n  * new listener is then chained to the old.\n  *\n  * @author Bryce McKinlay\n- * @author Aaron M. Renn <arenn@urbanophile.com>\n- * @author Eric Blake <ebb9@email.byu.edu>\n+ * @author Aaron M. Renn (arenn@urbanophile.com)\n+ * @author Eric Blake (ebb9@email.byu.edu)\n  * @since 1.1\n  * @status updated to 1.4\n  */"}, {"sha": "49462a460e11c1a0e14804b41a9a1eb2537c0c4f", "filename": "libjava/java/awt/AWTException.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FAWTException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FAWTException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FAWTException.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* AWTException.java -- Generic AWT exception\n-   Copyright (C) 1999, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -42,7 +42,7 @@\n  * This is a generic exception that indicates an exception occurred in the\n  * Abstract Window Toolkit (AWT) system.\n  *\n- * @author Aaron M. Renn <arenn@urbanophile.com>\n+ * @author Aaron M. Renn (arenn@urbanophile.com)\n  * @status updated to 1.4\n  */\n public class AWTException extends Exception"}, {"sha": "977b3848d6d2b0724cd9d32188ce803b4ed99031", "filename": "libjava/java/awt/AWTKeyStroke.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FAWTKeyStroke.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FAWTKeyStroke.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FAWTKeyStroke.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -63,7 +63,7 @@\n  * instances of a subclass, using reflection, provided the subclass has a\n  * no-arg constructor (of any accessibility).\n  *\n- * @author Eric Blake <ebb9@email.byu.edu>\n+ * @author Eric Blake (ebb9@email.byu.edu)\n  * @see #getAWTKeyStroke(char)\n  * @since 1.4\n  * @status updated to 1.4"}, {"sha": "fc4ae08d55e48ca4080a1436eb392d19169ab00f", "filename": "libjava/java/awt/AWTPermission.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FAWTPermission.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FAWTPermission.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FAWTPermission.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -82,7 +82,7 @@\n  *   <td>malicious code could masquerade as a trusted program</td></tr>\n  * </table>\n  *\n- * @author Tom Tromey <tromey@redhat.com>\n+ * @author Tom Tromey (tromey@redhat.com)\n  * @since 1.2\n  * @status updated to 1.4\n  */"}, {"sha": "5710b38c470b82f754eee1e9b6a06eb8194b0a5f", "filename": "libjava/java/awt/ActiveEvent.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FActiveEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FActiveEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FActiveEvent.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -47,7 +47,7 @@\n  * untrusted code. For example, system code should use an ActiveEvent to\n  * invoke user code securely.\n  *\n- * @author Tom Tromey <tromey@cygnus.com>\n+ * @author Tom Tromey (tromey@cygnus.com)\n  * @since 1.2\n  * @status updated to 1.4\n  */"}, {"sha": "053ddd1c1e3748316b2c8c84e9c30c6b6c3ec86b", "filename": "libjava/java/awt/Adjustable.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FAdjustable.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FAdjustable.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FAdjustable.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* Adjustable.java -- Objects with a numeric adjustment scale\n-   Copyright (C) 1999, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -44,7 +44,7 @@\n  * This interface is for objects that take a numeric value that can be\n  * adjusted within a bounded range.  For example, a scroll bar.\n  *\n- * @author Aaron M. Renn <arenn@urbanophile.com>\n+ * @author Aaron M. Renn (arenn@urbanophile.com)\n  * @since 1.0\n  * @status updated to 1.4\n  */"}, {"sha": "3c7744ba51ec8f12aa7f1870ccd860c1cd2c8b6b", "filename": "libjava/java/awt/AlphaComposite.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FAlphaComposite.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FAlphaComposite.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FAlphaComposite.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* AlphaComposite.java -- provides a context for performing alpha compositing\n-   Copyright (C) 2002 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -44,7 +44,7 @@\n \n /**\n  *\n- * @author Eric Blake <ebb9@email.byu.edu>\n+ * @author Eric Blake (ebb9@email.byu.edu)\n  * @see Composite\n  * @see CompositeContext\n  * @since 1.3"}, {"sha": "10efab18375d68bebee88b1fb80681f7aefb3894", "filename": "libjava/java/awt/AttributeValue.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FAttributeValue.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FAttributeValue.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FAttributeValue.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* AttributeValue.java -- parent of type-safe enums of attributes\n-   Copyright (C) 2002 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -44,7 +44,7 @@\n  * <code>equals</code>, <code>toString</code>, and <code>hashCode</code>, so\n  * that you don't have to (although hashCode is commonly overridden).\n  *\n- * @author Eric Blake <ebb9@email.byu.edu>\n+ * @author Eric Blake (ebb9@email.byu.edu)\n  */\n class AttributeValue\n {"}, {"sha": "7a955d38139f3693125c735e878161855824d4ba", "filename": "libjava/java/awt/BorderLayout.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FBorderLayout.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FBorderLayout.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FBorderLayout.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* BorderLayout.java -- A layout manager class\n-   Copyright (C) 1999, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -43,7 +43,7 @@\n   * in certain sectors of the parent container.\n   *\n   * @author Aaron M. Renn (arenn@urbanophile.com)\n-  * @author Rolf W. Rasmussen  <rolfwr@ii.uib.no>\n+  * @author Rolf W. Rasmussen  (rolfwr@ii.uib.no)\n   */\n public class BorderLayout implements LayoutManager2, java.io.Serializable\n {"}, {"sha": "9f91711e18ac40e749c0e0e0a55f33c0f3b97ab8", "filename": "libjava/java/awt/BufferCapabilities.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FBufferCapabilities.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FBufferCapabilities.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FBufferCapabilities.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* BufferCapabilities.java -- \n-   Copyright (C) 2002 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -41,7 +41,7 @@\n /**\n  * Needs documentation...\n  *\n- * @author Eric Blake <ebb9@email.byu.edu>\n+ * @author Eric Blake (ebb9@email.byu.edu)\n  * @see BufferStrategy#getCapabilities()\n  * @see GraphicsConfiguration#getCapabilities()\n  * @since 1.4"}, {"sha": "1d1a30aa8de679aeb5fcce371410a418a772afab", "filename": "libjava/java/awt/Button.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FButton.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FButton.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FButton.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* Button.java -- AWT button widget\n-   Copyright (C) 1999, 2002, 2004 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2002, 2004, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -54,7 +54,7 @@\n   * This class provides a button widget for the AWT. \n   *\n   * @author Aaron M. Renn (arenn@urbanophile.com)\n-  * @author Tom Tromey <tromey@cygnus.com>\n+  * @author Tom Tromey (tromey@cygnus.com)\n   */\n public class Button extends Component\n   implements java.io.Serializable, Accessible"}, {"sha": "e223d9eae77de13722a0411a86e3daf627ee4126", "filename": "libjava/java/awt/Canvas.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FCanvas.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FCanvas.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FCanvas.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -54,8 +54,8 @@\n  * full-scale custom components.\n  *\n  * @author Original author unknown\n- * @author Tom Tromey  <tromey@redhat.com>\n- * @author Andrew John Hughes  <gnu_andrew@member.fsf.org>\n+ * @author Tom Tromey  (tromey@redhat.com)\n+ * @author Andrew John Hughes  (gnu_andrew@member.fsf.org)\n  * @since 1.0\n  */\n "}, {"sha": "d5d22688ee39cbb1375c27bdd8de8f22879947f7", "filename": "libjava/java/awt/CheckboxGroup.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FCheckboxGroup.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FCheckboxGroup.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FCheckboxGroup.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* CheckboxGroup.java -- A grouping class for checkboxes.\n-   Copyright (C) 1999, 2000, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2000, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -43,7 +43,7 @@\n   * one checkbox in the group can be selected at any one time.\n   *\n   * @author Aaron M. Renn (arenn@urbanophile.com)\n-  * @author Tom Tromey <tromey@redhat.com>\n+  * @author Tom Tromey (tromey@redhat.com)\n   */\n public class CheckboxGroup implements java.io.Serializable\n {"}, {"sha": "d5e4ef511fef5018bce899124a0c5a4bdb73de26", "filename": "libjava/java/awt/CheckboxMenuItem.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FCheckboxMenuItem.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FCheckboxMenuItem.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FCheckboxMenuItem.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* CheckboxMenuItem.java -- A menu option with a checkbox on it.\n-   Copyright (C) 1999, 2000, 2001, 2002, 2004  Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2000, 2001, 2002, 2004, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -53,7 +53,7 @@\n   * the selected state of some option.\n   *\n   * @author Aaron M. Renn (arenn@urbanophile.com)\n-  * @author Tom Tromey <tromey@redhat.com>\n+  * @author Tom Tromey (tromey@redhat.com)\n   */\n public class CheckboxMenuItem extends MenuItem\n   implements ItemSelectable, Accessible"}, {"sha": "c00aa9da038199273646bc6d90242dc61179c242", "filename": "libjava/java/awt/Color.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FColor.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FColor.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FColor.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* Color.java -- represents a color in Java\n-   Copyright (C) 1999, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -53,7 +53,7 @@\n  * <a href=\"http://www.w3.org/pub/WWW/Graphics/Color/sRGB.html\">\n  * http://www.w3.org/pub/WWW/Graphics/Color/sRGB.html</a>.\n  *\n- * @author Aaron M. Renn <arenn@urbanophile.com>\n+ * @author Aaron M. Renn (arenn@urbanophile.com)\n  * @see ColorSpace\n  * @see AlphaComposite\n  * @since 1.0"}, {"sha": "3e3bac48280b29b5e163283ea6f66eb8d3ab89b5", "filename": "libjava/java/awt/ColorPaintContext.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FColorPaintContext.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FColorPaintContext.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FColorPaintContext.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* ColorPaintContext.java -- context for painting solid colors\n-   Copyright (C) 2002, 2004 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2004, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -46,7 +46,7 @@\n  * a raster scan with the given color. However, it is not yet completely\n  * implemented.\n  *\n- * @author Eric Blake <ebb9@email.byu.edu>\n+ * @author Eric Blake (ebb9@email.byu.edu)\n  */\n class ColorPaintContext implements PaintContext\n {"}, {"sha": "847a31da4b6c9c76f022a1d0b3346aafa751c81d", "filename": "libjava/java/awt/Component.java", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FComponent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FComponent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FComponent.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -140,7 +140,7 @@\n  * present but commented out.\n  *\n  * @author original author unknown\n- * @author Eric Blake <ebb9@email.byu.edu>\n+ * @author Eric Blake (ebb9@email.byu.edu)\n  * @since 1.0\n  * @status still missing 1.4 support\n  */\n@@ -4949,7 +4949,7 @@ private void writeObject(ObjectOutputStream s) throws IOException\n   /**\n    * This class provides accessibility support for subclasses of container.\n    *\n-   * @author Eric Blake <ebb9@email.byu.edu>\n+   * @author Eric Blake (ebb9@email.byu.edu)\n    * @since 1.3\n    * @status updated to 1.4\n    */\n@@ -5477,7 +5477,7 @@ public void removeFocusListener(FocusListener l)\n     /**\n      * Converts component changes into property changes.\n      *\n-     * @author Eric Blake <ebb9@email.byu.edu>\n+     * @author Eric Blake (ebb9@email.byu.edu)\n      * @since 1.3\n      * @status updated to 1.4\n      */\n@@ -5534,7 +5534,7 @@ public void componentResized(ComponentEvent e)\n     /**\n      * Converts focus changes into property changes.\n      *\n-     * @author Eric Blake <ebb9@email.byu.edu>\n+     * @author Eric Blake (ebb9@email.byu.edu)\n      * @since 1.3\n      * @status updated to 1.4\n      */\n@@ -5574,7 +5574,7 @@ public void focusLost(FocusEvent e)\n   /**\n    * This class provides support for blitting offscreen surfaces.\n    *\n-   * @author Eric Blake <ebb9@email.byu.edu>\n+   * @author Eric Blake (ebb9@email.byu.edu)\n    * @since 1.4\n    * @XXX Shell class, to allow compilation. This needs documentation and\n    * correct implementation.\n@@ -5610,7 +5610,7 @@ protected void revalidate() {}\n    * This class provides support for flipping component buffers. It is only\n    * designed for use by Canvas and Window.\n    *\n-   * @author Eric Blake <ebb9@email.byu.edu>\n+   * @author Eric Blake (ebb9@email.byu.edu)\n    * @since 1.4\n    * @XXX Shell class, to allow compilation. This needs documentation and\n    * correct implementation."}, {"sha": "8897470da48611de8add464a95e34058f216bb35", "filename": "libjava/java/awt/ComponentOrientation.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FComponentOrientation.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FComponentOrientation.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FComponentOrientation.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -67,7 +67,7 @@\n  * of isHorizontal() and isLeftToRight() rather than comparing objects with\n  * ==, especially since more constants may be added in the future.\n  *\n- * @author Bryce McKinlay <bryce@albatross.co.nz>\n+ * @author Bryce McKinlay (bryce@albatross.co.nz)\n  * @since 1.0\n  * @status updated to 1.4\n  */"}, {"sha": "c636921cc697c6bd720d5ba0ddf00f2f73ea70b7", "filename": "libjava/java/awt/Composite.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FComposite.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FComposite.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FComposite.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* Composite.java -- graphics formed from composite layers\n-   Copyright (C) 2002 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -50,7 +50,7 @@\n  * check on custom objects, <code>readDisplayPixels</code>, to prevent leaking\n  * restricted information graphically.\n  *\n- * @author Eric Blake <ebb9@email.byu.edu>\n+ * @author Eric Blake (ebb9@email.byu.edu)\n  * @see AlphaComposite\n  * @see CompositeContext\n  * @see Graphics2D#setComposite(Composite)"}, {"sha": "301e7cff9953f8d5d0889d492ba57aead01606b2", "filename": "libjava/java/awt/CompositeContext.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FCompositeContext.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FCompositeContext.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FCompositeContext.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* Composite.java -- the context for compositing graphics layers\n-   Copyright (C) 2002 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -45,7 +45,7 @@\n  * This interface provides an optimized environment for compositing graphics.\n  * Several such contexts may exist for a given <code>Composite</code> object.\n  *\n- * @author Eric Blake <ebb9@email.byu.edu>\n+ * @author Eric Blake (ebb9@email.byu.edu)\n  * @see Composite\n  * @since 1.2\n  * @status updated to 1.4"}, {"sha": "64d60abf40ff7d03bd79f55e8e9326b2711d08c6", "filename": "libjava/java/awt/Container.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FContainer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FContainer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FContainer.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -67,7 +67,7 @@\n  * list or bottom of the stacking order.\n  *\n  * @author original author unknown\n- * @author Eric Blake <ebb9@email.byu.edu>\n+ * @author Eric Blake (ebb9@email.byu.edu)\n  *\n  * @since 1.0\n  *\n@@ -1711,7 +1711,7 @@ static class GfxPrintAllVisitor extends GfxVisitor\n   /**\n    * This class provides accessibility support for subclasses of container.\n    *\n-   * @author Eric Blake <ebb9@email.byu.edu>\n+   * @author Eric Blake (ebb9@email.byu.edu)\n    *\n    * @since 1.3\n    */\n@@ -1800,7 +1800,7 @@ public Accessible getAccessibleAt(Point p)\n      * This class fires a <code>PropertyChange</code> listener, if registered,\n      * when children are added or removed from the enclosing accessible object.\n      *\n-     * @author Eric Blake <ebb9@email.byu.edu>\n+     * @author Eric Blake (ebb9@email.byu.edu)\n      *\n      * @since 1.3\n      */"}, {"sha": "91153e69935c5c4432068b7a87002262cd220ffe", "filename": "libjava/java/awt/ContainerOrderFocusTraversalPolicy.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FContainerOrderFocusTraversalPolicy.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FContainerOrderFocusTraversalPolicy.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FContainerOrderFocusTraversalPolicy.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* ContainerOrderFocusTraversalPolicy.java -- \n-   Copyright (C) 2002 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -57,7 +57,7 @@\n  * can override these acceptance criteria by overriding accept.\n  *\n  * @author Michael Koch\n- * @author Thomas Fitzsimmons <fitzsim@redhat.com>\n+ * @author Thomas Fitzsimmons (fitzsim@redhat.com)\n  * @since 1.4\n  */\n public class ContainerOrderFocusTraversalPolicy extends FocusTraversalPolicy"}, {"sha": "f9bd647a0fe20e767af699e0cce3c1b77839446a", "filename": "libjava/java/awt/DefaultFocusTraversalPolicy.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FDefaultFocusTraversalPolicy.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FDefaultFocusTraversalPolicy.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FDefaultFocusTraversalPolicy.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* DefaultFocusTraversalPolicy.java -- \n-   Copyright (C) 2002 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -55,7 +55,7 @@\n  * A Component's focusability is independent of the focusability of\n  * its peer.\n  *\n- * @author Thomas Fitzsimmons <fitzsim@redhat.com>\n+ * @author Thomas Fitzsimmons (fitzsim@redhat.com)\n  * @since 1.4\n  */\n public class DefaultFocusTraversalPolicy"}, {"sha": "8248df3c70dcd8e05d50a594a5937aefbcc0bd33", "filename": "libjava/java/awt/Dialog.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FDialog.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FDialog.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FDialog.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* Dialog.java -- An AWT dialog box\n-   Copyright (C) 1999, 2000, 2001, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2000, 2001, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -48,8 +48,8 @@\n /**\n  * A dialog box widget class.\n  *\n- * @author Aaron M. Renn <arenn@urbanophile.com>\n- * @author Tom Tromey <tromey@redhat.com>\n+ * @author Aaron M. Renn (arenn@urbanophile.com)\n+ * @author Tom Tromey (tromey@redhat.com)\n  */\n public class Dialog extends Window\n {"}, {"sha": "270e04e70d13f20d63dfdc08c9d0bda01f7f96aa", "filename": "libjava/java/awt/Dimension.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FDimension.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FDimension.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FDimension.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -53,9 +53,9 @@\n  * manner, it is your own fault when you get invalid results. Also, this\n  * class is not threadsafe.\n  *\n- * @author Per Bothner <bothner@cygnus.com>\n- * @author Aaron M. Renn <arenn@urbanophile.com>\n- * @author Eric Blake <ebb9@email.byu.edu>\n+ * @author Per Bothner (bothner@cygnus.com)\n+ * @author Aaron M. Renn (arenn@urbanophile.com)\n+ * @author Eric Blake (ebb9@email.byu.edu)\n  * @see Component\n  * @see LayoutManager\n  * @since 1.0"}, {"sha": "a9fac604d0e2bd499c3d90c479f892b4f89758b6", "filename": "libjava/java/awt/DisplayMode.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FDisplayMode.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FDisplayMode.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FDisplayMode.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* DisplayMode.java -- a description of display mode configurations\n-   Copyright (C) 2002, 2003 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2003, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -43,7 +43,7 @@\n  * device configuration. They are device dependent, and may not always be\n  * available.\n  *\n- * @author Eric Blake <ebb9@email.byu.edu>\n+ * @author Eric Blake (ebb9@email.byu.edu)\n  * @see GraphicsDevice\n  * @since 1.4\n  * @status updated to 1.4"}, {"sha": "a2356cc6393b8a67611b39241d0775a251bcff37", "filename": "libjava/java/awt/EventQueue.java", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FEventQueue.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FEventQueue.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FEventQueue.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,4 +1,5 @@\n-/* Copyright (C) 1999, 2000, 2001, 2002, 2003  Free Software Foundation\n+/* EventQueue.java --\n+   Copyright (C) 1999, 2000, 2001, 2002, 2003, 2005  Free Software Foundation\n \n This file is part of GNU Classpath.\n \n@@ -37,15 +38,15 @@\n \n package java.awt;\n \n+import gnu.java.awt.ClasspathToolkit;\n+\n import java.awt.event.ActionEvent;\n import java.awt.event.InputEvent;\n import java.awt.event.InvocationEvent;\n import java.awt.event.WindowEvent;\n import java.lang.reflect.InvocationTargetException;\n import java.util.EmptyStackException;\n \n-import gnu.java.awt.ClasspathToolkit;\n-\n /* Written using on-line Java 2 Platform Standard Edition v1.3 API \n  * Specification, as well as \"The Java Class Libraries\", 2nd edition \n  * (Addison-Wesley, 1998)."}, {"sha": "3e22d02e53dd7cd28ea176d97dbc95be43f2bcdb", "filename": "libjava/java/awt/FileDialog.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FFileDialog.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FFileDialog.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FFileDialog.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* FileDialog.java -- A filename selection dialog box\n-   Copyright (C) 1999, 2000, 2001, 2002, 2004  Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2000, 2001, 2002, 2004, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -46,7 +46,7 @@\n   * This class implements a file selection dialog box widget.\n   *\n   * @author Aaron M. Renn (arenn@urbanophile.com)\n-  * @author Tom Tromey <tromey@redhat.com>\n+  * @author Tom Tromey (tromey@redhat.com)\n   */\n public class FileDialog extends Dialog implements Serializable\n {"}, {"sha": "2971e1de8926deedf816fcad5c6ecfd12c150665", "filename": "libjava/java/awt/FontFormatException.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FFontFormatException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FFontFormatException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FFontFormatException.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* FontFormatException.java -- the specified font is bad\n-   Copyright (C) 2002 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -41,7 +41,7 @@\n /**\n  * Thrown when a specified font is bad.\n  *\n- * @author Eric Blake <ebb9@email.byu.edu>\n+ * @author Eric Blake (ebb9@email.byu.edu)\n  * @see Font\n  * @since 1.3\n  * @status updated to 1.4"}, {"sha": "c1dfbda2a36f64838f08df0775dca6ff1ea9b9d8", "filename": "libjava/java/awt/Graphics.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FGraphics.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FGraphics.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FGraphics.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* Graphics.java -- Abstract Java drawing class\n-   Copyright (C) 1999, 2000, 2002, 2004 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2000, 2002, 2004, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -46,7 +46,7 @@\n   * devices such as the screen or printers.\n   *\n   * @author Aaron M. Renn (arenn@urbanophile.com)\n-  * @author Warren Levy <warrenl@cygnus.com>\n+  * @author Warren Levy (warrenl@cygnus.com)\n   */\n public abstract class Graphics\n {"}, {"sha": "c845c4c1d3b3209010f6ea13cc4162ccf1132741", "filename": "libjava/java/awt/Graphics2D.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FGraphics2D.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FGraphics2D.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FGraphics2D.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -49,7 +49,7 @@\n import java.util.Map;\n \n /**\n- * @author Rolf W. Rasmussen <rolfwr@ii.uib.no>\n+ * @author Rolf W. Rasmussen (rolfwr@ii.uib.no)\n  */\n public abstract class Graphics2D extends Graphics\n {"}, {"sha": "76cf8b690a46afaec3266db93885c315afa340e9", "filename": "libjava/java/awt/GraphicsConfigTemplate.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FGraphicsConfigTemplate.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FGraphicsConfigTemplate.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FGraphicsConfigTemplate.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* GraphicsConfigTemplate.java -- a template for selecting configurations\n-   Copyright (C) 2002 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -45,7 +45,7 @@\n  * one based on various requirements. The resulting configuration has had\n  * all non-default attributes set as required to meet or exceed the request.\n  *\n- * @author Eric Blake <ebb9@email.byu.edu>\n+ * @author Eric Blake (ebb9@email.byu.edu)\n  * @see GraphicsConfiguration\n  * @see GraphicsDevice\n  * @since 1.2"}, {"sha": "97f687e92e65ec38844d14c8773bc2f775662b60", "filename": "libjava/java/awt/GraphicsConfiguration.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FGraphicsConfiguration.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FGraphicsConfiguration.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FGraphicsConfiguration.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -53,7 +53,7 @@\n  * configuration will have a non-zero relative coordinate system in such\n  * a case.\n  *\n- * @author Eric Blake <ebb9@email.byu.edu>\n+ * @author Eric Blake (ebb9@email.byu.edu)\n  * @see Window\n  * @see Frame\n  * @see GraphicsEnvironment"}, {"sha": "c01723356b3dfa998fe9205aec7f5d2b1ff23a01", "filename": "libjava/java/awt/GraphicsDevice.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FGraphicsDevice.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FGraphicsDevice.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FGraphicsDevice.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* GraphicsDevice.java -- information about a graphics device\n-   Copyright (C) 2002 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -44,7 +44,7 @@\n  * each device. Also, this allows you to create virtual devices which operate\n  * over a multi-screen environment.\n  *\n- * @author Eric Blake <ebb9@email.byu.edu>\n+ * @author Eric Blake (ebb9@email.byu.edu)\n  * @see GraphicsEnvironment\n  * @see GraphicsConfiguration\n  * @since 1.3"}, {"sha": "0ee996ce71574f4428f84df1b0b6b8112e203774", "filename": "libjava/java/awt/GridBagLayout.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FGridBagLayout.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FGridBagLayout.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FGridBagLayout.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* GridBagLayout - Layout manager for components according to GridBagConstraints\n-   Copyright (C) 2002, 2003, 2004  Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2003, 2004, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -44,8 +44,8 @@\n import java.util.Hashtable;\n \n /**\n- * @author Michael Koch <konqueror@gmx.de>\n- * @author Jeroen Frijters <jeroen@frijters.net>\n+ * @author Michael Koch (konqueror@gmx.de)\n+ * @author Jeroen Frijters (jeroen@frijters.net)\n  */\n public class GridBagLayout\n     implements Serializable, LayoutManager2"}, {"sha": "bb919b5570a3d10c28974b0c25721b691d76b294", "filename": "libjava/java/awt/GridBagLayoutInfo.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FGridBagLayoutInfo.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FGridBagLayoutInfo.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FGridBagLayoutInfo.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* GridBagLayoutInfo -\n-   Copyright (C) 2003 Free Software Foundation, Inc.\n+   Copyright (C) 2003, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -41,7 +41,7 @@\n import java.io.Serializable;\n \n /**\n- * @author Michael Koch <konqueror@gmx.de>\n+ * @author Michael Koch (konqueror@gmx.de)\n  */\n class GridBagLayoutInfo implements Serializable\n {"}, {"sha": "95980e6ca0b1802e3afde2053acce498978e6fd6", "filename": "libjava/java/awt/GridLayout.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FGridLayout.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FGridLayout.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FGridLayout.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -52,7 +52,7 @@\n  * horizontal and vertical gaps; these are used as spacing between\n  * cells.\n  *\n- * @author Tom Tromey <tromey@redhat.com>\n+ * @author Tom Tromey (tromey@redhat.com)\n  * @author Aaron M. Renn (arenn@urbanophile.com)\n  */\n public class GridLayout implements LayoutManager, Serializable"}, {"sha": "e88279aecea1d19d718d477f6110eadccd907522", "filename": "libjava/java/awt/HeadlessException.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FHeadlessException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FHeadlessException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FHeadlessException.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* HeadlessException.java -- operation not possible in headless environment\n-   Copyright (C) 2002 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -42,7 +42,7 @@\n  * This exception is thrown when code dependent on a keyboard, mouse, or\n  * display is executed in a headless environment.\n  *\n- * @author Eric Blake <ebb9@email.byu.edu>\n+ * @author Eric Blake (ebb9@email.byu.edu)\n  * @since 1.4\n  * @status updated to 1.4\n  */"}, {"sha": "daa9d17dfde26f67bbc1841164d5b0bd2deb76f0", "filename": "libjava/java/awt/IllegalComponentStateException.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FIllegalComponentStateException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FIllegalComponentStateException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FIllegalComponentStateException.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* IllegalComponentStateException.java -- bad component state\n-   Copyright (C) 1999, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -42,7 +42,7 @@\n  * This exception is thrown when the requested operation failed because\n  * a component was not in the proper state.\n  *\n- * @author Aaron M. Renn <arenn@urbanophile.com>\n+ * @author Aaron M. Renn (arenn@urbanophile.com)\n  * @status updated to 1.4\n  */\n public class IllegalComponentStateException extends IllegalStateException"}, {"sha": "39ab06873016cfab103c696b123b9e5bab10fa83", "filename": "libjava/java/awt/Image.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FImage.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FImage.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FImage.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* Image.java -- superclass for images\n-   Copyright (C) 1999, 2002, 2004  Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2002, 2004, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -46,7 +46,7 @@\n /**\n  * This is the abstract superclass of all image objects in Java.\n  *\n- * @author Aaron M. Renn <arenn@urbanophile.com>\n+ * @author Aaron M. Renn (arenn@urbanophile.com)\n  * @since 1.0\n  * @status updated to 1.4\n  */"}, {"sha": "e818629a0f17dd794c740504ad309d4896f3c5f2", "filename": "libjava/java/awt/Insets.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FInsets.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FInsets.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FInsets.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* Insets.java -- information about a container border\n-   Copyright (C) 1999, 2000, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2000, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -43,8 +43,8 @@\n /**\n  * This class represents the \"margin\" or space around a container.\n  *\n- * @author Aaron M. Renn <arenn@urbanophile.com>\n- * @author Eric Blake <ebb9@email.byu.edu>\n+ * @author Aaron M. Renn (arenn@urbanophile.com)\n+ * @author Eric Blake (ebb9@email.byu.edu)\n  * @status \n  */\n public class Insets implements Cloneable, Serializable"}, {"sha": "74129fdda98b02192ff9f56fe439bd70274d421e", "filename": "libjava/java/awt/ItemSelectable.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FItemSelectable.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FItemSelectable.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FItemSelectable.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* ItemSelectable.java -- items that can be selected\n-   Copyright (C) 1999, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -44,7 +44,7 @@\n  * This interface is for objects that can have one or more items selected.\n  * For example, radio buttons.\n  *\n- * @author Aaron M. Renn <arenn@urbanophile.com>\n+ * @author Aaron M. Renn (arenn@urbanophile.com)\n  * @since 1.0\n  * @status updated to 1.4\n  */"}, {"sha": "fc4240d316c4c8aa3db8a1b49cbe5450f3d766b1", "filename": "libjava/java/awt/JobAttributes.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FJobAttributes.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FJobAttributes.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FJobAttributes.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* JobAttributes.java -- \n-   Copyright (C) 2002 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -41,7 +41,7 @@\n /**\n  * Needs documentation...\n  *\n- * @author Eric Blake <ebb9@email.byu.edu>\n+ * @author Eric Blake (ebb9@email.byu.edu)\n  * @since 1.3\n  * @status updated to 1.4, lacks documentation\n  */"}, {"sha": "f9020e74bd33a26090ea237b9518376c9decd85c", "filename": "libjava/java/awt/KeyEventDispatcher.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FKeyEventDispatcher.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FKeyEventDispatcher.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FKeyEventDispatcher.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* KeyEventDispatcher.java -- dispatches key events\n-   Copyright (C) 2002 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -50,7 +50,7 @@\n  * dispatched by other dispatchers. Therefore, it is unnecessary for the user\n  * to register the focus manager as a dispatcher.\n  *\n- * @author Eric Blake <ebb9@email.byu.edu>\n+ * @author Eric Blake (ebb9@email.byu.edu)\n  * @see KeyboardFocusManager#addKeyEventDispatcher(KeyEventDispatcher)\n  * @see KeyboardFocusManager#removeKeyEventDispatcher(KeyEventDispatcher)\n  * @since 1.4"}, {"sha": "0bf6fe650b77d3e238d2e16818f1319fa76823e4", "filename": "libjava/java/awt/KeyEventPostProcessor.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FKeyEventPostProcessor.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FKeyEventPostProcessor.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FKeyEventPostProcessor.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* KeyEventPostProcessor.java -- performs actions after a key event dispatch\n-   Copyright (C) 2002 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -50,7 +50,7 @@\n  * post-processed elsewhere. Therefore, it is unnecessary for the user\n  * to register the focus manager as a dispatcher.\n  *\n- * @author Eric Blake <ebb9@email.byu.edu>\n+ * @author Eric Blake (ebb9@email.byu.edu)\n  * @see KeyboardFocusManager#addKeyEventPostProcessor(KeyEventPostProcessor)\n  * @see KeyboardFocusManager#removeKeyEventPostProcessor(KeyEventPostProcessor)\n  * @since 1.4"}, {"sha": "6ea213e3a786bbcde88807bb84ce69c7ae869d5e", "filename": "libjava/java/awt/KeyboardFocusManager.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FKeyboardFocusManager.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FKeyboardFocusManager.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FKeyboardFocusManager.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -109,9 +109,9 @@\n  * applies recursively to any child components of such a window,\n  * which define no traversal keys of their own.\n  *\n- * @author Eric Blake <ebb9@email.byu.edu>\n- * @author Thomas Fitzsimmons <fitzsim@redhat.com>\n- * @author Andrew John Hughes <gnu_andrew@member.fsf.org>\n+ * @author Eric Blake (ebb9@email.byu.edu)\n+ * @author Thomas Fitzsimmons (fitzsim@redhat.com)\n+ * @author Andrew John Hughes (gnu_andrew@member.fsf.org)\n  * @since 1.4\n  */\n public abstract class KeyboardFocusManager"}, {"sha": "e1a43c8d189410665207e67a1a2aa00beba6653b", "filename": "libjava/java/awt/Label.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FLabel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FLabel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FLabel.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* Label.java -- Java label widget\n-   Copyright (C) 1999, 2000, 2002, 2004  Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2000, 2002, 2004, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -49,8 +49,8 @@\n   * be edited by the user.\n   *\n   * @author Aaron M. Renn (arenn@urbanophile.com)\n-  * @author Tom Tromey <tromey@cygnus.com>\n-  * @author Andrew John Hughes  <gnu_andrew@member.fsf.org>\n+  * @author Tom Tromey (tromey@cygnus.com)\n+  * @author Andrew John Hughes  (gnu_andrew@member.fsf.org)\n   */\n public class Label extends Component implements Accessible\n {"}, {"sha": "62d5b9f6d84c84f296c13f27794d40d4643913d2", "filename": "libjava/java/awt/LayoutManager.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FLayoutManager.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FLayoutManager.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FLayoutManager.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* LayoutManager.java -- lay out elements in a Container\n-   Copyright (C) 1999, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -41,7 +41,7 @@\n /**\n  * This interface is for laying out containers in a particular sequence.\n  *\n- * @author Aaron M. Renn <arenn@urbanophile.com>\n+ * @author Aaron M. Renn (arenn@urbanophile.com)\n  * @see Container\n  * @since 1.0\n  * @status updated to 1.4"}, {"sha": "ce5256fece7958b1fd24590a3eb1fbec464e222d", "filename": "libjava/java/awt/MenuBar.java", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FMenuBar.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FMenuBar.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FMenuBar.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* MenuBar.java -- An AWT menu bar class\n-   Copyright (C) 1999, 2000, 2001, 2002, 2004 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2000, 2001, 2002, 2004, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -53,8 +53,8 @@\n   * This class implements a menu bar in the AWT system.\n   *\n   * @author Aaron M. Renn (arenn@urbanophile.com)\n-  * @author Tom Tromey <tromey@redhat.com>\n-  * @author Andrew John Hughes <gnu_andrew@member.fsf.org>\n+  * @author Tom Tromey (tromey@redhat.com)\n+  * @author Andrew John Hughes (gnu_andrew@member.fsf.org)\n   */\n public class MenuBar extends MenuComponent\n   implements MenuContainer, Serializable, Accessible\n@@ -388,7 +388,7 @@ public AccessibleContext getAccessibleContext()\n /**\n  * This class provides accessibility support for AWT menu bars.\n  *\n- * @author Andrew John Hughes <gnu_andrew@member.fsf.org>\n+ * @author Andrew John Hughes (gnu_andrew@member.fsf.org)\n  */\n protected class AccessibleAWTMenuBar\n   extends AccessibleAWTMenuComponent"}, {"sha": "f5677feeb96af3c76a34983dfe53d27f2228f9c9", "filename": "libjava/java/awt/MenuComponent.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FMenuComponent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FMenuComponent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FMenuComponent.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* MenuComponent.java -- Superclass of all AWT menu components\n-   Copyright (C) 1999, 2000, 2002, 2003, 2004  Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2000, 2002, 2003, 2004, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -55,7 +55,7 @@\n   * This is the superclass of all menu AWT widgets. \n   *\n   * @author Aaron M. Renn (arenn@urbanophile.com)\n-  * @author Andrew John Hughes <gnu_andrew@member.fsf.org>\n+  * @author Andrew John Hughes (gnu_andrew@member.fsf.org)\n   */\n public abstract class MenuComponent implements Serializable\n {\n@@ -465,7 +465,7 @@ public AccessibleContext getAccessibleContext()\n  * This class provides a base for the accessibility support of menu\n  * components.\n  *\n- * @author Andrew John Hughes <gnu_andrew@member.fsf.org>\n+ * @author Andrew John Hughes (gnu_andrew@member.fsf.org)\n  */\n protected abstract class AccessibleAWTMenuComponent\n   extends AccessibleContext"}, {"sha": "08d1cb09c6f25be1990c8d091eba2a8342a6f28a", "filename": "libjava/java/awt/MenuContainer.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FMenuContainer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FMenuContainer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FMenuContainer.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* MenuContainer.java -- container for menu items\n-   Copyright (C) 1999, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -41,7 +41,7 @@\n /**\n  * This interface is a container for menu components.\n  *\n- * @author Aaron M. Renn <arenn@urbanophile.com>\n+ * @author Aaron M. Renn (arenn@urbanophile.com)\n  * @since 1.0\n  * @status updated to 1.4\n  */"}, {"sha": "c94f857dc7983092d62105a5e40b84bca5860f9a", "filename": "libjava/java/awt/PageAttributes.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FPageAttributes.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FPageAttributes.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FPageAttributes.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* PageAttributes.java -- \n-   Copyright (C) 2002 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -43,7 +43,7 @@\n /**\n  * Missing Documentation\n  *\n- * @author Eric Blake <ebb9@email.byu.edu>\n+ * @author Eric Blake (ebb9@email.byu.edu)\n  * @since 1.3\n  * @status updated to 1.4, but missing documentation\n  */"}, {"sha": "fa136ec3fba8c8cf87bcb6f76946ee062915bb66", "filename": "libjava/java/awt/Paint.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FPaint.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FPaint.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FPaint.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -48,7 +48,7 @@\n  * of the graphics object. Instances must be immutable, because the graphics\n  * object does not clone them.\n  *\n- * @author Warren Levy <warrenl@cygnus.com>\n+ * @author Warren Levy (warrenl@cygnus.com)\n  * @see PaintContext\n  * @see Color\n  * @see GradientPaint"}, {"sha": "29003798d6931a5c6d215112d9060b83ff1e0a0c", "filename": "libjava/java/awt/PaintContext.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FPaintContext.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FPaintContext.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FPaintContext.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -42,7 +42,7 @@\n import java.awt.image.Raster;\n \n /**\n- * @author Warren Levy <warrenl@cygnus.com>\n+ * @author Warren Levy (warrenl@cygnus.com)\n  * @see Paint\n  * @since 1.1\n  * @status updated to 1.4"}, {"sha": "628e53e97a17c40cff76a1155b77573546d95627", "filename": "libjava/java/awt/Panel.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FPanel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FPanel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FPanel.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* Panel.java -- Simple container object\n-   Copyright (C) 1999, 2002, 2004  Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2002, 2004, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -127,7 +127,7 @@ public AccessibleContext getAccessibleContext()\n    * This class provides accessibility support for Panels, and is the\n    * runtime type returned by {@link #getAccessibleContext()}.\n    *\n-   * @author Eric Blake <ebb9@email.byu.edu>\n+   * @author Eric Blake (ebb9@email.byu.edu)\n    * @since 1.3\n    */\n   protected class AccessibleAWTPanel extends AccessibleAWTContainer"}, {"sha": "48f5e33651d326a01bc210dbc3ba753cdb27e616", "filename": "libjava/java/awt/Point.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FPoint.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FPoint.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FPoint.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -50,9 +50,9 @@\n  * manner, it is your own fault when you get invalid results. Also, this\n  * class is not threadsafe.\n  *\n- * @author Per Bothner <bothner@cygnus.com>\n- * @author Aaron M. Renn <arenn@urbanophile.com>\n- * @author Eric Blake <ebb9@email.byu.edu>\n+ * @author Per Bothner (bothner@cygnus.com)\n+ * @author Aaron M. Renn (arenn@urbanophile.com)\n+ * @author Eric Blake (ebb9@email.byu.edu)\n  * @since 1.0\n  * @status updated to 1.4\n  */"}, {"sha": "4b1eda85ce9ef1205ae89b07e52b074e69633806", "filename": "libjava/java/awt/Polygon.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FPolygon.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FPolygon.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FPolygon.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* Polygon.java -- class representing a polygon\n-   Copyright (C) 1999, 2002, 2004 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2002, 2004, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -57,8 +57,8 @@\n  * ArrayIndexOutOfBoundsException, or invalid results. Also, this class is\n  * not threadsafe.\n  *\n- * @author Aaron M. Renn <arenn@urbanophile.com>\n- * @author Eric Blake <ebb9@email.byu.edu>\n+ * @author Aaron M. Renn (arenn@urbanophile.com)\n+ * @author Eric Blake (ebb9@email.byu.edu)\n  * @since 1.0\n  * @status updated to 1.4\n  */"}, {"sha": "ae664044d9b94c046ce2448b571f1e95423ceab9", "filename": "libjava/java/awt/PrintGraphics.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FPrintGraphics.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FPrintGraphics.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FPrintGraphics.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* PrintGraphics.java -- a print graphics context\n-   Copyright (C) 1999, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -41,7 +41,7 @@\n /**\n  * This interface allows the originating print job to be obtained.\n  *\n- * @author Aaron M. Renn <arenn@urbanophile.com>\n+ * @author Aaron M. Renn (arenn@urbanophile.com)\n  * @since 1.0\n  * @status updated to 1.4\n  */"}, {"sha": "7bf4534c7fc42aee2eccba6f1cc21f9927e5733f", "filename": "libjava/java/awt/PrintJob.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FPrintJob.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FPrintJob.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FPrintJob.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* PrintJob.java -- A print job class\n-   Copyright (C) 1999, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -41,7 +41,7 @@\n /**\n  * This abstract class represents a print job.\n  *\n- * @author Aaron M. Renn <arenn@urbanophile.com>\n+ * @author Aaron M. Renn (arenn@urbanophile.com)\n  * @see Toolkit#getPrintJob(Frame, String, Properties)\n  * @since 1.0\n  * @status updated to 1.4"}, {"sha": "df7cbbe6dee6e8a4f233fe4375cdfd5789c0db3b", "filename": "libjava/java/awt/Rectangle.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FRectangle.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FRectangle.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FRectangle.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -57,9 +57,9 @@\n  * ArrayIndexOutOfBoundsException, or invalid results. Also, this class is\n  * not threadsafe.\n  *\n- * @author Warren Levy  <warrenl@cygnus.com>\n- * @author Aaron M. Renn <arenn@urbanophile.com>\n- * @author Eric Blake <ebb9@email.byu.edu>\n+ * @author Warren Levy  (warrenl@cygnus.com)\n+ * @author Aaron M. Renn (arenn@urbanophile.com)\n+ * @author Eric Blake (ebb9@email.byu.edu)\n  * @since 1.0\n  * @status updated to 1.4\n  */"}, {"sha": "86e0eb6f0ee89f000013d4b15a936db11e1455f5", "filename": "libjava/java/awt/RenderingHints.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FRenderingHints.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FRenderingHints.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FRenderingHints.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -51,8 +51,8 @@\n  * items are hints only, they may be ignored by a particular\n  * {@link java.awt.Graphics2D} implementation.\n  *\n- * @author Rolf W. Rasmussen <rolfwr@ii.uib.no>\n- * @author Eric Blake <ebb9@email.byu.edu>\n+ * @author Rolf W. Rasmussen (rolfwr@ii.uib.no)\n+ * @author Eric Blake (ebb9@email.byu.edu)\n  */\n public class RenderingHints implements Map, Cloneable\n {"}, {"sha": "1a0852b8d122ce4d3a8f8dfda7f293b3549880ba", "filename": "libjava/java/awt/Shape.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FShape.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FShape.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FShape.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* Shape.java -- the classic Object-Oriented shape interface\n-   Copyright (C) 1999, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -54,7 +54,7 @@\n  * Unclosed shapes are considered as implicitly closed when performing\n  * <code>contains</code> or <code>intersects</code>.\n  *\n- * @author Aaron M. Renn <arenn@urbanophile.com>\n+ * @author Aaron M. Renn (arenn@urbanophile.com)\n  * @see PathIterator\n  * @see AffineTransform\n  * @see java.awt.geom.FlatteningPathIterator"}, {"sha": "1fe1568a4fc74c8791db59b43a62b900dcfb96d0", "filename": "libjava/java/awt/Stroke.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FStroke.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FStroke.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FStroke.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* Stroke.java -- a stroked outline of a shape\n-   Copyright (C) 2002 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -46,7 +46,7 @@\n  * Strokes must be immutable, because the graphics object does not clone\n  * them.\n  *\n- * @author Eric Blake <ebb9@email.byu.edu>\n+ * @author Eric Blake (ebb9@email.byu.edu)\n  * @see BasicStroke\n  * @see Graphics2D#setStroke(Stroke)\n  * @since 1.1"}, {"sha": "90aa577037b1dfd099676aa0ce7dcd31eae0eade", "filename": "libjava/java/awt/SystemColor.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FSystemColor.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FSystemColor.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FSystemColor.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* SystemColor.java -- access dynamic system color values\n-   Copyright (C) 1999, 2002, 2004  Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2002, 2004, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -52,8 +52,8 @@\n  * track the actual color of instances in this class. This means that equals\n  * may give surprising results; you are better off relying on getRGB.\n  *\n- * @author Aaron M. Renn <arenn@urbanophile.com>\n- * @author Eric Blake <ebb9@email.byu.edu>\n+ * @author Aaron M. Renn (arenn@urbanophile.com)\n+ * @author Eric Blake (ebb9@email.byu.edu)\n  * @since 1.1\n  * @status updated to 1.4\n  */"}, {"sha": "c7f2de956202984a8924d8699e7c3abd10d7d5fe", "filename": "libjava/java/awt/Toolkit.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FToolkit.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FToolkit.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FToolkit.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* Toolkit.java -- AWT Toolkit superclass\n-   Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004\n+   Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004, 2005\n    Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n@@ -91,7 +91,7 @@\n  * toolkit <code>gnu.java.awt.peer.gtk.GtkToolkit</code> is used.  This\n  * toolkit creates its peers using the GTK+ toolkit.\n  *\n- * @author Aaron M. Renn <arenn@urbanophile.com>\n+ * @author Aaron M. Renn (arenn@urbanophile.com)\n  */\n public abstract class Toolkit\n {"}, {"sha": "9636458ff2e2256342a2b445b3d0f506a71eb3df", "filename": "libjava/java/awt/Transparency.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FTransparency.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FTransparency.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FTransparency.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -40,7 +40,7 @@\n /**\n  * A common transparency mode for layering graphics.\n  *\n- * @author Warren Levy <warrenl@cygnus.com>\n+ * @author Warren Levy (warrenl@cygnus.com)\n  * @since 1.1\n  * @status updated to 1.4\n  */"}, {"sha": "cdcd1a4bf2509b3e79be5dc598e6f2e3d8f5c68f", "filename": "libjava/java/awt/Window.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FWindow.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2FWindow.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FWindow.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -63,8 +63,8 @@\n /**\n  * This class represents a top-level window with no decorations.\n  *\n- * @author Aaron M. Renn <arenn@urbanophile.com>\n- * @author Warren Levy  <warrenl@cygnus.com>\n+ * @author Aaron M. Renn (arenn@urbanophile.com)\n+ * @author Warren Levy  (warrenl@cygnus.com)\n  */\n public class Window extends Container implements Accessible\n {"}, {"sha": "04ef3e2c8492a037cb69ae62e15fe385d7d5dd1c", "filename": "libjava/java/awt/color/CMMException.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fcolor%2FCMMException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fcolor%2FCMMException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fcolor%2FCMMException.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* CMMException.java -- error in the native CMM\n-   Copyright (C) 2002 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -41,7 +41,7 @@\n /**\n   * Thrown when there is an error in the native CMM.\n   *\n-  * @author Eric Blake <ebb9@email.byu.edu>\n+  * @author Eric Blake (ebb9@email.byu.edu)\n   * @status updated to 1.4\n   */\n public class CMMException extends RuntimeException"}, {"sha": "dd7121ec0bfb5792c5ca33450eb969b2d37a5f80", "filename": "libjava/java/awt/color/ColorSpace.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fcolor%2FColorSpace.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fcolor%2FColorSpace.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fcolor%2FColorSpace.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -43,7 +43,7 @@\n /**\n  * NEEDS DOCUMENTATION\n  *\n- * @author Rolf W. Rasmussen <rolfwr@ii.uib.no>\n+ * @author Rolf W. Rasmussen (rolfwr@ii.uib.no)\n  * @since 1.2\n  */\n public abstract class ColorSpace implements Serializable"}, {"sha": "d6771cd52d2b0f49ca6f70acf2fcf69255be7084", "filename": "libjava/java/awt/color/ICC_ColorSpace.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fcolor%2FICC_ColorSpace.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fcolor%2FICC_ColorSpace.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fcolor%2FICC_ColorSpace.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -76,7 +76,7 @@\n  * guaranteed to have transforms from the PCS to device space.\n  *\n  * @author Sven de Marothy\n- * @author Rolf W. Rasmussen <rolfwr@ii.uib.no>\n+ * @author Rolf W. Rasmussen (rolfwr@ii.uib.no)\n  * @since 1.2\n  */\n public class ICC_ColorSpace extends ColorSpace"}, {"sha": "791ea9f6cf1b02ef20b67f3186c7ccc9cf0b2452", "filename": "libjava/java/awt/color/ICC_Profile.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fcolor%2FICC_Profile.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fcolor%2FICC_Profile.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fcolor%2FICC_Profile.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -79,7 +79,7 @@\n  * (available at www.color.org)\n  *\n  * @author Sven de Marothy\n- * @author Rolf W. Rasmussen <rolfwr@ii.uib.no>\n+ * @author Rolf W. Rasmussen (rolfwr@ii.uib.no)\n  * @since 1.2\n  */\n public class ICC_Profile implements Serializable"}, {"sha": "53b6d28bc3a6b87fe2ef5d89054a938f53f2a690", "filename": "libjava/java/awt/color/ProfileDataException.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fcolor%2FProfileDataException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fcolor%2FProfileDataException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fcolor%2FProfileDataException.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* ProfileDataException.java -- error in processing an ICC_Profile\n-   Copyright (C) 2002 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -42,7 +42,7 @@\n   * Thrown when there is an error accessing or processing an\n   * <code>ICC_Profile</code>.\n   *\n-  * @author Eric Blake <ebb9@email.byu.edu>\n+  * @author Eric Blake (ebb9@email.byu.edu)\n   * @status updated to 1.4\n   */\n public class ProfileDataException extends RuntimeException"}, {"sha": "1275d924ac3734677e820b4812cf6b2967ae7161", "filename": "libjava/java/awt/datatransfer/FlavorTable.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fdatatransfer%2FFlavorTable.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fdatatransfer%2FFlavorTable.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fdatatransfer%2FFlavorTable.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* FlavorTable.java -- A relaxed mapping between flavors\n-   Copyright (C) 2002 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -45,7 +45,7 @@\n  * native can map to multiple flavors, and any flavor can map to multiple\n  * natives; although the mappings are usually symmetric.\n  *\n- * @author Eric Blake <ebb9@email.byu.edu>\n+ * @author Eric Blake (ebb9@email.byu.edu)\n  * @since 1.4\n  * @status updated to 1.4\n  */"}, {"sha": "85331c2b447babf35f1198703a9a2f199969b9ac", "filename": "libjava/java/awt/datatransfer/MimeTypeParseException.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fdatatransfer%2FMimeTypeParseException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fdatatransfer%2FMimeTypeParseException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fdatatransfer%2FMimeTypeParseException.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* MimeTypeParseException.java -- thrown when MIME string couldn't be parsed\n-   Copyright (C) 2001, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 2001, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -41,7 +41,7 @@\n /**\n   * MIME string couldn't be parsed correctly.\n   *\n-  * @author Mark Wielaard <mark@klomp.org>\n+  * @author Mark Wielaard (mark@klomp.org)\n   * @status updated to 1.4\n   */\n public class MimeTypeParseException extends Exception"}, {"sha": "8fa56e82d8077baba343f88d6123944edc95e008", "filename": "libjava/java/awt/datatransfer/Transferable.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fdatatransfer%2FTransferable.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fdatatransfer%2FTransferable.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fdatatransfer%2FTransferable.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* Transferable.java -- Data transfer source\n-   Copyright (C) 1999, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -43,7 +43,7 @@\n /**\n  * This interface is implemented by classes that can transfer data.\n  *\n- * @author Aaron M. Renn <arenn@urbanophile.com>\n+ * @author Aaron M. Renn (arenn@urbanophile.com)\n  * @since 1.1\n  * @status updated to 1.4\n  */"}, {"sha": "57ea8568ff337cf59de15cd55e333954380528b1", "filename": "libjava/java/awt/datatransfer/UnsupportedFlavorException.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fdatatransfer%2FUnsupportedFlavorException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fdatatransfer%2FUnsupportedFlavorException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fdatatransfer%2FUnsupportedFlavorException.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* UnsupportedFlavorException.java -- ata flavor is not valid\n-   Copyright (C) 1999, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -41,7 +41,7 @@\n /**\n  * The data flavor requested is not supported for the transfer data.\n  *\n- * @author Aaron M. Renn <arenn@urbanophile.com>\n+ * @author Aaron M. Renn (arenn@urbanophile.com)\n  * @see Transferable#getTransferData(DataFlavor)\n  * @status updated to 1.4\n  */"}, {"sha": "054bba898f357190956d103c2b88b3a891c94923", "filename": "libjava/java/awt/dnd/Autoscroll.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fdnd%2FAutoscroll.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fdnd%2FAutoscroll.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fdnd%2FAutoscroll.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* Autoscroll.java --\n-   Copyright (C) 2002, 2004  Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2004, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -46,7 +46,7 @@\n  * subject of the operation on a region of a scrollable GUI control that\n  * is not currently visible to the user.\n  *\n- * @author Michael Koch <konqueror@gmx.de>\n+ * @author Michael Koch (konqueror@gmx.de)\n  * @since 1.2\n  * @status updated to 1.4\n  */"}, {"sha": "e00b0003c2e1ba23ccd81fc057f86d8b9aba408d", "filename": "libjava/java/awt/dnd/DnDConstants.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fdnd%2FDnDConstants.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fdnd%2FDnDConstants.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fdnd%2FDnDConstants.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -42,7 +42,7 @@\n  * This class contains various constants used in drag-and-drop operations.\n  * Why it is not an interface is beyond me.\n  *\n- * @author Eric Blake <ebb9@email.byu.edu>\n+ * @author Eric Blake (ebb9@email.byu.edu)\n  * @since 1.2\n  * @status updated to 1.4\n  */"}, {"sha": "f8c7ab474662ce365476ced479b234e5a7e5ccca", "filename": "libjava/java/awt/dnd/DragGestureListener.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fdnd%2FDragGestureListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fdnd%2FDragGestureListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fdnd%2FDragGestureListener.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* DragGestureListener.java --\n-   Copyright (C) 2002 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -44,7 +44,7 @@\n  * This is a listener for starting a drag-and-drop gesture. Upon receiving\n  * notification, the implementor then starts the drag operation.\n  *\n- * @author Eric Blake <ebb9@email.byu.edu>\n+ * @author Eric Blake (ebb9@email.byu.edu)\n  * @see DragGestureRecognizer\n  * @see DragGestureEvent\n  * @see DragSource"}, {"sha": "8d65188f846ec1bed58c1195314fffc32ed50e19", "filename": "libjava/java/awt/dnd/DragSourceAdapter.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fdnd%2FDragSourceAdapter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fdnd%2FDragSourceAdapter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fdnd%2FDragSourceAdapter.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* DragSourceAdapter.java -- drag-and-drop listener adapter\n-   Copyright (C) 2002 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -45,7 +45,7 @@\n  * a subset of these interfaces to extend this class and override only the\n  * desired methods.\n  *\n- * @author Eric Blake <ebb9@email.byu.edu>\n+ * @author Eric Blake (ebb9@email.byu.edu)\n  * @see DragSourceEvent\n  * @see DragSourceListener\n  * @see DragSourceMotionListener"}, {"sha": "876b73d14dc6e15f3714f3f52241f47568b15207", "filename": "libjava/java/awt/dnd/DragSourceDropEvent.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fdnd%2FDragSourceDropEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fdnd%2FDragSourceDropEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fdnd%2FDragSourceDropEvent.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* DragSourceDragEvent.java --\n-   Copyright (C) 2002 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -38,7 +38,7 @@\n package java.awt.dnd;\n \n /**\n- * @author Michael Koch <konqueror@gmx.de>\n+ * @author Michael Koch (konqueror@gmx.de)\n  * @since 1.2\n  *\n  * Written using JDK 1.4.1 Online API"}, {"sha": "c4a7bf2103f2e99cf969c9ef88f16c9eea4b10ee", "filename": "libjava/java/awt/dnd/DragSourceListener.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fdnd%2FDragSourceListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fdnd%2FDragSourceListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fdnd%2FDragSourceListener.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* DragSourceListener.java -- listen to events during the drag\n-   Copyright (C) 2002 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -46,7 +46,7 @@\n  * also use a <code>DragSourceAdapter</code> to filter the events you are\n  * interested in.\n  *\n- * @author Eric Blake <ebb9@email.byu.edu>\n+ * @author Eric Blake (ebb9@email.byu.edu)\n  * @since 1.2\n  * @status updated to 1.4\n  */"}, {"sha": "d25684544866a2657cadaffa76eace52bc60963b", "filename": "libjava/java/awt/dnd/DragSourceMotionListener.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fdnd%2FDragSourceMotionListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fdnd%2FDragSourceMotionListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fdnd%2FDragSourceMotionListener.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* DragSourceMotionListener.java -- tracks motion in the drag source\n-   Copyright (C) 2002 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -45,7 +45,7 @@\n  * event occurs. You can also use a <code>DragSourceAdapter</code> to filter\n  * the events you are interested in.\n  *\n- * @author Eric Blake <ebb9@email.byu.edu>\n+ * @author Eric Blake (ebb9@email.byu.edu)\n  * @see DragSourceDragEvent\n  * @see DragSource\n  * @see DragSourceListener"}, {"sha": "a9a81ac56d5d7776943f3bedae5b5264d2fa7499", "filename": "libjava/java/awt/dnd/DropTargetAdapter.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fdnd%2FDropTargetAdapter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fdnd%2FDropTargetAdapter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fdnd%2FDropTargetAdapter.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* DragSourceAdapter.java -- drag-and-drop listener adapter\n-   Copyright (C) 2002 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -43,7 +43,7 @@\n  * a subset of these interfaces to extend this class and override only the\n  * desired methods.\n  *\n- * @author Michael Koch <konqueror@gmx.de>\n+ * @author Michael Koch (konqueror@gmx.de)\n  * @since 1.4\n  * @status updated to 1.4\n  */"}, {"sha": "0b3ba75b4b67699bef4d92f53d680e72b644266b", "filename": "libjava/java/awt/dnd/DropTargetContext.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fdnd%2FDropTargetContext.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fdnd%2FDropTargetContext.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fdnd%2FDropTargetContext.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -47,7 +47,7 @@\n import java.util.List;\n \n /**\n- * @author Michael Koch <konqueror@gmx.de>\n+ * @author Michael Koch (konqueror@gmx.de)\n  * @since 1.2\n  */\n public class DropTargetContext implements Serializable"}, {"sha": "1eda1e34822077e578192b0fbd683c5f7a9ee966", "filename": "libjava/java/awt/dnd/DropTargetListener.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fdnd%2FDropTargetListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fdnd%2FDropTargetListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fdnd%2FDropTargetListener.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* DropTargetListener.java -- listen to events during the drop\n-   Copyright (C) 2002 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -41,7 +41,7 @@\n import java.util.EventListener;\n \n /**\n- * @author Michael Koch <konqueror@gmx.de>\n+ * @author Michael Koch (konqueror@gmx.de)\n  * @since 1.2\n  * @status updated to 1.4\n  */"}, {"sha": "d02c69b80d534d2464e9706ff01ab6bc34a07b08", "filename": "libjava/java/awt/dnd/InvalidDnDOperationException.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fdnd%2FInvalidDnDOperationException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fdnd%2FInvalidDnDOperationException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fdnd%2FInvalidDnDOperationException.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* InvalidDnDOperationException.java -- thrown when drag-and-drop fails\n-   Copyright (C) 2002 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -43,7 +43,7 @@\n  * requested operation, usually because the underlying DnD system is in the\n  * wrong state.\n  *\n- * @author Eric Blake <ebb9@email.byu.edu>\n+ * @author Eric Blake (ebb9@email.byu.edu)\n  * @since 1.2\n  * @status updated to 1.4\n  */"}, {"sha": "52e19b174761faea9daa8b7317130ed0a21bab16", "filename": "libjava/java/awt/dnd/MouseDragGestureRecognizer.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fdnd%2FMouseDragGestureRecognizer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fdnd%2FMouseDragGestureRecognizer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fdnd%2FMouseDragGestureRecognizer.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* MouseDragGestureRecognizer.java --\n-   Copyright (C) 2002 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -43,7 +43,7 @@\n import java.awt.event.MouseMotionListener;\n \n /**\n- * @author Michael Koch <konqueror@gmx.de>\n+ * @author Michael Koch (konqueror@gmx.de)\n  */\n public abstract class MouseDragGestureRecognizer \n   extends DragGestureRecognizer"}, {"sha": "6c3816f00ac3e6500ed154b8e1fd11aac5f59deb", "filename": "libjava/java/awt/dnd/peer/DropTargetContextPeer.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fdnd%2Fpeer%2FDropTargetContextPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fdnd%2Fpeer%2FDropTargetContextPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fdnd%2Fpeer%2FDropTargetContextPeer.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* DropTargetContextPeer.java -- interface for drag-and-drop peers\n-   Copyright (C) 2002, 2004  Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2004, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -50,7 +50,7 @@\n  * with an associated <code>DropTarget</code> and visible geometry is first \n  * intersected by a logical cursor.\n  * \n- * @author Michael Koch <konqueror@gmx.de>\n+ * @author Michael Koch (konqueror@gmx.de)\n  */\n public interface DropTargetContextPeer\n {"}, {"sha": "b9ce7dc66908d3368a4cb0dc2c77d65993eeb58d", "filename": "libjava/java/awt/event/AWTEventListener.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fevent%2FAWTEventListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fevent%2FAWTEventListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FAWTEventListener.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* AWTEventListener.java -- listen for all events in the AWT system\n-   Copyright (C) 1999, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -46,7 +46,7 @@\n  * system. In general, this should not be used except for classes like\n  * javax.accessibility or by event recorders.\n  *\n- * @author Aaron M. Renn <arenn@urbanophile.com>\n+ * @author Aaron M. Renn (arenn@urbanophile.com)\n  * @see AWTEvent\n  * @see Toolkit#addAWTEventListener(AWTEventListener, long)\n  * @see Toolkit#removeAWTEventListener(AWTEventListener)"}, {"sha": "fef8ae70c5a4a494a55dbd38ff312719a06ec173", "filename": "libjava/java/awt/event/AWTEventListenerProxy.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fevent%2FAWTEventListenerProxy.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fevent%2FAWTEventListenerProxy.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FAWTEventListenerProxy.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* AWTEventListenerProxy.java -- wrapper/filter for AWTEventListener\n-   Copyright (C) 2002 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -45,7 +45,7 @@\n  * This class allows adding an AWTEventListener which only pays attention to\n  * a specific event mask.\n  *\n- * @author Eric Blake <ebb9@email.byu.edu>\n+ * @author Eric Blake (ebb9@email.byu.edu)\n  * @see Toolkit\n  * @see EventListenerProxy\n  * @since 1.4"}, {"sha": "2b9763ee96de42e14abaf8d8b88347c0b1272eef", "filename": "libjava/java/awt/event/ActionEvent.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fevent%2FActionEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fevent%2FActionEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FActionEvent.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* ActionEvent.java -- an action has been triggered\n-   Copyright (C) 1999, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -45,7 +45,7 @@\n  * This event is generated when an action on a component (such as a\n  * button press) occurs.\n  *\n- * @author Aaron M. Renn <arenn@urbanophile.com>\n+ * @author Aaron M. Renn (arenn@urbanophile.com)\n  * @see ActionListener\n  * @since 1.1\n  * @status updated to 1.4"}, {"sha": "f7c7ae48e7cdd711bc9fc5435576e32f8a75f36e", "filename": "libjava/java/awt/event/AdjustmentEvent.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fevent%2FAdjustmentEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fevent%2FAdjustmentEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FAdjustmentEvent.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* AdjustmentEvent.java -- an adjustable value was changed\n-   Copyright (C) 1999, 2002, 2004  Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2002, 2004, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -45,7 +45,7 @@\n  * This class represents an event that is generated when an adjustable\n  * value is changed.\n  *\n- * @author Aaron M. Renn <arenn@urbanophile.com>\n+ * @author Aaron M. Renn (arenn@urbanophile.com)\n  * @see Adjustable\n  * @see AdjustmentListener\n  * @since 1.1"}, {"sha": "d07663c54482d487efaddac168c60ef009e11833", "filename": "libjava/java/awt/event/AdjustmentListener.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fevent%2FAdjustmentListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fevent%2FAdjustmentListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FAdjustmentListener.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* AdjustmentListener.java -- listen for adjustment events\n-   Copyright (C) 1999, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -43,7 +43,7 @@\n /**\n  * Interface for classes that listen for adjustment events.\n  *\n- * @author Aaron M. Renn <arenn@urbanophile.com>\n+ * @author Aaron M. Renn (arenn@urbanophile.com)\n  * @since 1.1\n  * @status updated to 1.4\n  */"}, {"sha": "6ef7847840562b0f91bb55fb11b54a4573970cbb", "filename": "libjava/java/awt/event/ComponentAdapter.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fevent%2FComponentAdapter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fevent%2FComponentAdapter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FComponentAdapter.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* ComponentAdapter.java -- convenience class for writing component listeners\n-   Copyright (C) 1999, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -44,7 +44,7 @@\n  * implementing only a subset of the <code>ComponentListener</code>\n  * interface to extend this class and override only the desired methods.\n  *\n- * @author Aaron M. Renn <arenn@urbanophile.com>\n+ * @author Aaron M. Renn (arenn@urbanophile.com)\n  * @see ComponentEvent\n  * @see ComponentListener\n  * @since 1.1"}, {"sha": "08f0df7936f5234cf63ec35c2ff6ecd0133df2d9", "filename": "libjava/java/awt/event/ComponentEvent.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fevent%2FComponentEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fevent%2FComponentEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FComponentEvent.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* ComponentEvent.java -- notification of events for components\n-   Copyright (C) 1999, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -48,7 +48,7 @@\n  * is also the superclass for other events on components, but\n  * ComponentListeners ignore such subclasses.\n  *\n- * @author Aaron M. Renn <arenn@urbanophile.com>\n+ * @author Aaron M. Renn (arenn@urbanophile.com)\n  * @see ComponentAdapter\n  * @see ComponentListener\n  * @since 1.1"}, {"sha": "7f601740b316cb3d77c1ced08bd082b13c389409", "filename": "libjava/java/awt/event/ComponentListener.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fevent%2FComponentListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fevent%2FComponentListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FComponentListener.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* ComponentListener.java -- receive all events for a component\n-   Copyright (C) 1999, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -46,7 +46,7 @@\n  * handles them internally, taking all appropriate actions. To watch a subset\n  * of these events, use a ComponentAdapter.\n  *\n- * @author Aaron M. Renn <arenn@urbanophile.com>\n+ * @author Aaron M. Renn (arenn@urbanophile.com)\n  * @see ComponentAdapter\n  * @see ComponentEvent\n  * @since 1.1"}, {"sha": "bad475ecf041c2cdab3e49ccd69879cb7326c9ca", "filename": "libjava/java/awt/event/ContainerAdapter.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fevent%2FContainerAdapter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fevent%2FContainerAdapter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FContainerAdapter.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* ContainerAdapter.java -- convenience class for writing container listeners\n-   Copyright (C) 1999, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -44,7 +44,7 @@\n  * implementing only a subset of the <code>ContainerListener</code>\n  * interface to extend this class and override only the desired methods.\n  *\n- * @author Aaron M. Renn <arenn@urbanophile.com>\n+ * @author Aaron M. Renn (arenn@urbanophile.com)\n  * @see ContainerEvent\n  * @see ContainerListener\n  * @since 1.1"}, {"sha": "08c55faf63c13e178f57dbd2c0167655fa939382", "filename": "libjava/java/awt/event/ContainerEvent.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fevent%2FContainerEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fevent%2FContainerEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FContainerEvent.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* ContainerEvent.java -- components added/removed from a container\n-   Copyright (C) 1999, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -46,7 +46,7 @@\n  * container.  Applications do not ordinarily need to handle these events\n  * since the AWT system handles them internally.\n  *\n- * @author Aaron M. Renn <arenn@urbanophile.com>\n+ * @author Aaron M. Renn (arenn@urbanophile.com)\n  * @see ContainerAdapter\n  * @see ContainerListener\n  * @since 1.1"}, {"sha": "2ad00f0b58d7c568dea710d1cf2f766ed67fe2d2", "filename": "libjava/java/awt/event/ContainerListener.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fevent%2FContainerListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fevent%2FContainerListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FContainerListener.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* ContainerListener.java -- listen for container events\n-   Copyright (C) 1999, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -46,7 +46,7 @@\n  * listens for and processes these events. To watch a subset of these events,\n  * use a ContainerAdapter.\n  *\n- * @author Aaron M. Renn <arenn@urbanophile.com>\n+ * @author Aaron M. Renn (arenn@urbanophile.com)\n  * @see ContainerAdapter\n  * @see ContainerEvent\n  * @since 1.1"}, {"sha": "471c7f25c0ad54f918daa75ab3bb35a9dad1f90e", "filename": "libjava/java/awt/event/FocusAdapter.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fevent%2FFocusAdapter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fevent%2FFocusAdapter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FFocusAdapter.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* FocusAdapter.java -- convenience class for writing focus listeners\n-   Copyright (C) 1999, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -44,7 +44,7 @@\n  * implementing only a subset of the <code>FocusListener</code> interface to\n  * extend this class and override only the desired methods.\n  *\n- * @author Aaron M. Renn <arenn@urbanophile.com>\n+ * @author Aaron M. Renn (arenn@urbanophile.com)\n  * @see FocusEvent\n  * @see FocusListener\n  * @since 1.1"}, {"sha": "3bca6a7d49e6a543b2bfb392365b3d8f68d49a70", "filename": "libjava/java/awt/event/FocusEvent.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fevent%2FFocusEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fevent%2FFocusEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FFocusEvent.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* FocusEvent.java -- generated for a focus change\n-   Copyright (C) 1999, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -46,7 +46,7 @@\n  * during a sroll then returned, and permanent changes, such as when the user\n  * TABs through focusable components.\n  *\n- * @author Aaron M. Renn <arenn@urbanophile.com>\n+ * @author Aaron M. Renn (arenn@urbanophile.com)\n  * @see FocusAdapter\n  * @see FocusListener\n  * @since 1.1"}, {"sha": "d8ef5a81e28a7d849a0157d8a13c385409f09611", "filename": "libjava/java/awt/event/FocusListener.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fevent%2FFocusListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fevent%2FFocusListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FFocusListener.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* FocusListener.java -- listen for focus changes\n-   Copyright (C) 1999, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -45,7 +45,7 @@\n  * keyboard focus for a component. To watch a subset of these events, use a\n  * FocusAdapter.\n  *\n- * @author Aaron M. Renn <arenn@urbanophile.com>\n+ * @author Aaron M. Renn (arenn@urbanophile.com)\n  * @see FocusAdapter\n  * @see FocusEvent\n  * @since 1.1"}, {"sha": "cd59afc299c4f692004ef81592f4d755854f295a", "filename": "libjava/java/awt/event/InputEvent.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fevent%2FInputEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fevent%2FInputEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FInputEvent.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* InputEvent.java -- common superclass of component input events\n-   Copyright (C) 1999, 2002, 2004  Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2002, 2004, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -47,7 +47,7 @@\n  * passed to listeners before the component, so that listeners can consume\n  * the event before it does its default behavior.\n  *\n- * @author Aaron M. Renn <arenn@urbanophile.com>\n+ * @author Aaron M. Renn (arenn@urbanophile.com)\n  * @see KeyEvent\n  * @see KeyAdapter\n  * @see MouseEvent"}, {"sha": "98dc4263341e49fc1bc95e41dcfbd00f260745f3", "filename": "libjava/java/awt/event/InputMethodEvent.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fevent%2FInputMethodEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fevent%2FInputMethodEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FInputMethodEvent.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* InputMethodEvent.java -- events from a text input method\n-   Copyright (C) 1999, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -49,7 +49,7 @@\n /**\n  * This class is for event generated by change in a text input method.\n  *\n- * @author Aaron M. Renn <arenn@urbanophile.com>\n+ * @author Aaron M. Renn (arenn@urbanophile.com)\n  * @see InputMethodListener\n  * @since 1.2\n  * @status updated to 1.4"}, {"sha": "08de16f7d3cadfa74291aad1c9da669dce73c566", "filename": "libjava/java/awt/event/InputMethodListener.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fevent%2FInputMethodListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fevent%2FInputMethodListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FInputMethodListener.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* InputMethodListener.java -- listen for input method events\n-   Copyright (C) 1999, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -45,7 +45,7 @@\n  * method. For a text component to use input methods, it must also install\n  * an InputMethodRequests handler.\n  *\n- * @author Aaron M. Renn <arenn@urbanophile.com>\n+ * @author Aaron M. Renn (arenn@urbanophile.com)\n  * @see InputMethodEvent\n  * @see InputMethodRequests\n  * @since 1.2"}, {"sha": "27546c010ec9d0ddf3ba64d27790d4047d61b2f4", "filename": "libjava/java/awt/event/InvocationEvent.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fevent%2FInvocationEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fevent%2FInvocationEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FInvocationEvent.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* InvocationEvent.java -- call a runnable when dispatched\n-   Copyright (C) 1999, 2002, 2004  Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2002, 2004, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -48,7 +48,7 @@\n  * <code>invokeAndWait</code>, so client code can use this fact to avoid\n  * writing special-casing AWTEventListener objects.\n  *\n- * @author Aaron M. Renn <arenn@urbanophile.com>\n+ * @author Aaron M. Renn (arenn@urbanophile.com)\n  * @see ActiveEvent\n  * @see EventQueue#invokeLater(Runnable)\n  * @see EventQueue#invokeAndWait(Runnable)"}, {"sha": "f9c3ee2fcf430a67b706a5a1cac97da0f2996df1", "filename": "libjava/java/awt/event/ItemEvent.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fevent%2FItemEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fevent%2FItemEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FItemEvent.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* ItemEvent.java -- event for item state changes\n-   Copyright (C) 1999, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -46,7 +46,7 @@\n  * abstraction that distills a large number of individual mouse or keyboard\n  * events into a simpler \"item selected\" and \"item deselected\" events.\n  *\n- * @author Aaron M. Renn <arenn@urbanophile.com>\n+ * @author Aaron M. Renn (arenn@urbanophile.com)\n  * @see ItemSelectable\n  * @see ItemListener\n  * @since 1.1"}, {"sha": "cc8f8c7920416ccfd9c542342b076b0ced72a0bc", "filename": "libjava/java/awt/event/ItemListener.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fevent%2FItemListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fevent%2FItemListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FItemListener.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* ItemListener.java -- listen for item events\n-   Copyright (C) 1999, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -44,7 +44,7 @@\n  * This interface is for classes that wish to receive events when an\n  * item's selection state changes.\n  *\n- * @author Aaron M. Renn <arenn@urbanophile.com>\n+ * @author Aaron M. Renn (arenn@urbanophile.com)\n  * @see ItemSelectable\n  * @see ItemEvent\n  * @since 1.1"}, {"sha": "d27786c4347b31c7fc62bd11d28ea11723a21b31", "filename": "libjava/java/awt/event/KeyAdapter.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fevent%2FKeyAdapter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fevent%2FKeyAdapter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FKeyAdapter.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* KeyAdapter.java -- convenience class for writing key listeners\n-   Copyright (C) 1999, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -44,7 +44,7 @@\n  * a subset of the <code>KeyListener</code> interface to extend this class\n  * and override only the desired methods.\n  *\n- * @author Aaron M. Renn <arenn@urbanophile.com>\n+ * @author Aaron M. Renn (arenn@urbanophile.com)\n  * @see KeyEvent\n  * @see KeyListener\n  * @since 1.1"}, {"sha": "cef05ae62415ae1295e70f58fecee6030256541d", "filename": "libjava/java/awt/event/KeyEvent.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fevent%2FKeyEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fevent%2FKeyEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FKeyEvent.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* KeyEvent.java -- event for key presses\n-   Copyright (C) 1999, 2002, 2004  Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2002, 2004, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -70,8 +70,8 @@\n  * as VK_ALL_CANDIDATES in place of ALT+VK_CONVERT. Do not rely on the value\n  * of the VK_* constants, except for VK_ENTER, VK_BACK_SPACE, and VK_TAB.\n  *\n- * @author Aaron M. Renn <arenn@urbanophile.com>\n- * @author Eric Blake <ebb9@email.byu.edu>\n+ * @author Aaron M. Renn (arenn@urbanophile.com)\n+ * @author Eric Blake (ebb9@email.byu.edu)\n  * @see KeyAdapter\n  * @see KeyListener\n  * @since 1.1"}, {"sha": "d46edf4f48f1221bf6f1fedec25368216e5e9fde", "filename": "libjava/java/awt/event/KeyListener.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fevent%2FKeyListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fevent%2FKeyListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FKeyListener.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* KeyListener.java -- listen for keyboard presses\n-   Copyright (C) 1999, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -44,7 +44,7 @@\n  * This interface is for classes that wish to receive keyboard events. To\n  * watch a subset of these events, use a KeyAdapter.\n  *\n- * @author Aaron M. Renn <arenn@urbanophile.com>\n+ * @author Aaron M. Renn (arenn@urbanophile.com)\n  * @see KeyAdapter\n  * @see KeyEvent\n  * @since 1.1"}, {"sha": "5c8cbd0d51ad6669fea4c5c080fc84d2827aae6f", "filename": "libjava/java/awt/event/MouseAdapter.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fevent%2FMouseAdapter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fevent%2FMouseAdapter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FMouseAdapter.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* MouseAdapter.java -- convenience class for writing mouse listeners\n-   Copyright (C) 1999, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -44,7 +44,7 @@\n  * a subset of the <code>MouseListener</code> interface to extend this class\n  * and override only the desired methods.\n  *\n- * @author Aaron M. Renn <arenn@urbanophile.com>\n+ * @author Aaron M. Renn (arenn@urbanophile.com)\n  * @see MouseEvent\n  * @see MouseListener\n  * @since 1.1"}, {"sha": "6e43183dd058be85ddddfd9c2d642b48aa7ce01e", "filename": "libjava/java/awt/event/MouseEvent.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fevent%2FMouseEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fevent%2FMouseEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FMouseEvent.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* MouseEvent.java -- a mouse event\n-   Copyright (C) 1999, 2002, 2004  Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2002, 2004, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -63,8 +63,8 @@\n  * virtual device, some platforms may clip the path to fit in the bounds of\n  * the component.\n  *\n- * @author Aaron M. Renn <arenn@urbanophile.com>\n- * @author Eric Blake <ebb9@email.byu.edu>\n+ * @author Aaron M. Renn (arenn@urbanophile.com)\n+ * @author Eric Blake (ebb9@email.byu.edu)\n  * @see MouseAdapter\n  * @see MouseListener\n  * @see MouseMotionAdapter"}, {"sha": "8b60ef70447f3ed1b8d640a8f852daec8120d372", "filename": "libjava/java/awt/event/MouseListener.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fevent%2FMouseListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fevent%2FMouseListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FMouseListener.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* MouseListener.java -- listen for mouse clicks and crossing component edges\n-   Copyright (C) 1999, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -48,7 +48,7 @@\n  * use MouseWheelListener. To watch a subset of these events, use a\n  * MouseAdapter.\n  *\n- * @author Aaron M. Renn <arenn@urbanophile.com>\n+ * @author Aaron M. Renn (arenn@urbanophile.com)\n  * @see MouseAdapter\n  * @see MouseEvent\n  * @since 1.1"}, {"sha": "0500cc5f58accf246f77880bbb8ee112a3534074", "filename": "libjava/java/awt/event/MouseMotionAdapter.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fevent%2FMouseMotionAdapter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fevent%2FMouseMotionAdapter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FMouseMotionAdapter.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* MouseMotionAdapter.java -- convenience class for mouse motion listeners\n-   Copyright (C) 1999, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -44,7 +44,7 @@\n  * implementing only a subset of the <code>MouseMotionListener</code>\n  * interface to extend this class and override only the desired methods.\n  *\n- * @author Aaron M. Renn <arenn@urbanophile.com>\n+ * @author Aaron M. Renn (arenn@urbanophile.com)\n  * @see MouseEvent\n  * @see MouseMotionListener\n  * @since 1.1"}, {"sha": "1a003eaca808343f7424c221613a56d7009a456b", "filename": "libjava/java/awt/event/MouseMotionListener.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fevent%2FMouseMotionListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fevent%2FMouseMotionListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FMouseMotionListener.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* MouseMotionListener.java -- listen to mouse motion events\n-   Copyright (C) 1999, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -46,7 +46,7 @@\n  * track other mouse events, use MouseListener or MouseWheelListener. To\n  * watch a subset of these events, use a MouseMotionAdapter.\n  *\n- * @author Aaron M. Renn <arenn@urbanophile.com>\n+ * @author Aaron M. Renn (arenn@urbanophile.com)\n  * @see MouseMotionAdapter\n  * @see MouseEvent\n  * @since 1.1"}, {"sha": "c16705759e7324a6318580b5b659ebdee5513531", "filename": "libjava/java/awt/event/MouseWheelEvent.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fevent%2FMouseWheelEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fevent%2FMouseWheelEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FMouseWheelEvent.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* MouseWheelEvent.java -- a mouse wheel event\n-   Copyright (C) 2002 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -57,7 +57,7 @@\n  * \"blocks\" (pages at a time). The initial setting is taken from the platform,\n  * although the user can adjust the setting at any time.\n  *\n- * @author Eric Blake <ebb9@email.byu.edu>\n+ * @author Eric Blake (ebb9@email.byu.edu)\n  * @see MouseWheelListener\n  * @see ScrollPane\n  * @see ScrollPane#setWheelScrollingEnabled(boolean)"}, {"sha": "cfb5528f4f860ae985df9cd6a548c1895a3e4e67", "filename": "libjava/java/awt/event/MouseWheelListener.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fevent%2FMouseWheelListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fevent%2FMouseWheelListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FMouseWheelListener.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* MouseWheelListener.java -- listen for mouse wheel events\n-   Copyright (C) 2002 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -44,7 +44,7 @@\n  * This interface is for classes that wish to receive mouse wheel events. For\n  * other events, use MouseListener or MouseMotionListener.\n  *\n- * @author Eric Blake <ebb9@email.byu.edu>\n+ * @author Eric Blake (ebb9@email.byu.edu)\n  * @see MouseWheelEvent\n  * @since 1.4\n  * @status updated to 1.4"}, {"sha": "c11e2b65fa4a54f58dd0dd47f9e02433a6442617", "filename": "libjava/java/awt/event/PaintEvent.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fevent%2FPaintEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fevent%2FPaintEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FPaintEvent.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* PaintEvent.java -- an area of the screen needs to be repainted\n-   Copyright (C) 1999, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -46,7 +46,7 @@\n  * This event is not meant for users, but exists to allow proper serialization\n  * behavior in the EventQueue with user-accessible events.\n  *\n- * @author Aaron M. Renn <arenn@urbanophile.com>\n+ * @author Aaron M. Renn (arenn@urbanophile.com)\n  * @since 1.1\n  * @status updated to 1.4\n  */"}, {"sha": "7cf44b4c0d615db3376a57ffff13120f70a25d14", "filename": "libjava/java/awt/event/TextEvent.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fevent%2FTextEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fevent%2FTextEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FTextEvent.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* TextEvent.java -- event for text changes\n-   Copyright (C) 1999, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -45,7 +45,7 @@\n  * abstraction that distills a large number of individual mouse or keyboard\n  * events into a simpler \"text changed\" event.\n  *\n- * @author Aaron M. Renn <arenn@urbanophile.com>\n+ * @author Aaron M. Renn (arenn@urbanophile.com)\n  * @see TextComponent\n  * @see TextListener\n  * @since 1.1"}, {"sha": "f764783510cf5a546547f023bcb3e2cb823076ab", "filename": "libjava/java/awt/event/TextListener.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fevent%2FTextListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fevent%2FTextListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FTextListener.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* TextListener.java -- listen for text changes\n-   Copyright (C) 1999, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -44,7 +44,7 @@\n  * This interface is for classes that wish to be notified when text changes\n  * in a component.\n  *\n- * @author Aaron M. Renn <arenn@urbanophile.com>\n+ * @author Aaron M. Renn (arenn@urbanophile.com)\n  * @see TextEvent\n  * @since 1.1\n  * @status updated to 1.4"}, {"sha": "39292862d29b8f180aee6aeae4f4d270c6ea473c", "filename": "libjava/java/awt/event/WindowAdapter.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fevent%2FWindowAdapter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fevent%2FWindowAdapter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FWindowAdapter.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* WindowAdapter.java -- convenience class for writing window listeners\n-   Copyright (C) 1999, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -45,7 +45,7 @@\n  * interested in listening to only a subset of any <code>WindowEvent</code>\n  * actions to extend this class and override only the desired methods.\n  *\n- * @author Aaron M. Renn <arenn@urbanophile.com>\n+ * @author Aaron M. Renn (arenn@urbanophile.com)\n  * @see ComponentEvent\n  * @see ComponentListener\n  * @since 1.1"}, {"sha": "68a8c25d08bebf838c101d59d7a6e65403bae7df", "filename": "libjava/java/awt/event/WindowEvent.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fevent%2FWindowEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fevent%2FWindowEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FWindowEvent.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* WindowEvent.java -- window change event\n-   Copyright (C) 1999, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -48,7 +48,7 @@\n  * like maximization, and WindowFocusListeners deal with focus switching to\n  * or from a window. \n  *\n- * @author Aaron M. Renn <arenn@urbanophile.com>\n+ * @author Aaron M. Renn (arenn@urbanophile.com)\n  * @see WindowAdapter\n  * @see WindowListener\n  * @see WindowFocusListener"}, {"sha": "42034b7c7ab5a5fe89e13e8867c1355743a6ef28", "filename": "libjava/java/awt/event/WindowFocusListener.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fevent%2FWindowFocusListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fevent%2FWindowFocusListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FWindowFocusListener.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* WindowFocusListener.java -- listens for window focus events\n-   Copyright (C) 2002 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -44,7 +44,7 @@\n  * This interface is for classes that wish to monitor events for window\n  * focus changes. To watch a subset of these events, use a WindowAdapter.\n  *\n- * @author Eric Blake <ebb9@email.byu.edu>\n+ * @author Eric Blake (ebb9@email.byu.edu)\n  * @see WindowAdapter\n  * @see WindowEvent\n  * @since 1.4"}, {"sha": "8bbcabaf64d195d5bcb480d39484a71989cdfe55", "filename": "libjava/java/awt/event/WindowListener.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fevent%2FWindowListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fevent%2FWindowListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FWindowListener.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* WindowListener.java -- listens for window events\n-   Copyright (C) 1999, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -44,7 +44,7 @@\n  * This interface is for classes that wish to monitor events for window\n  * changes. To watch a subset of these events, use a WindowAdapter.\n  *\n- * @author Aaron M. Renn <arenn@urbanophile.com>\n+ * @author Aaron M. Renn (arenn@urbanophile.com)\n  * @see WindowAdapter\n  * @see WindowEvent\n  * @since 1.1"}, {"sha": "dcf4496c796622801661398be167d370f4395f40", "filename": "libjava/java/awt/event/WindowStateListener.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fevent%2FWindowStateListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fevent%2FWindowStateListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FWindowStateListener.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* WindowStateListener.java -- listens for window state changes\n-   Copyright (C) 2002 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -44,7 +44,7 @@\n  * This interface is for classes that wish to monitor events for window\n  * state changes.\n  *\n- * @author Eric Blake <ebb9@email.byu.edu>\n+ * @author Eric Blake (ebb9@email.byu.edu)\n  * @see WindowAdapter\n  * @see WindowEvent\n  * @since 1.4"}, {"sha": "2629ad2a54d81efbbd7d24686450d0a63764f173", "filename": "libjava/java/awt/font/TextHitInfo.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Ffont%2FTextHitInfo.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Ffont%2FTextHitInfo.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Ffont%2FTextHitInfo.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* TextHitInfo.java -- \n-   Copyright (C) 2002 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -38,7 +38,7 @@\n package java.awt.font;\n \n /**\n- * @author John Leuner <jewel@debian.org>\n+ * @author John Leuner (jewel@debian.org)\n  */\n public final class TextHitInfo\n {"}, {"sha": "1c500b00b5e1f55aa4248907b18fa87a9aca6487", "filename": "libjava/java/awt/geom/CubicCurve2D.java", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fgeom%2FCubicCurve2D.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fgeom%2FCubicCurve2D.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fgeom%2FCubicCurve2D.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -642,11 +642,11 @@ public static void subdivide(double[] src, int srcOff, double[] left,\n    * @see #solveCubic(double[], double[])\n    * @see QuadCurve2D#solveQuadratic(double[],double[])\n    *\n-   * @author <a href=\"mailto:bjg@network-theory.com\">Brian Gough</a>\n+   * @author Brian Gough (bjg@network-theory.com)\n    * (original C implementation in the <a href=\n    * \"http://www.gnu.org/software/gsl/\">GNU Scientific Library</a>)\n    *\n-   * @author <a href=\"mailto:brawer@dandelis.ch\">Sascha Brawer</a>\n+   * @author Sascha Brawer (brawer@dandelis.ch)\n    * (adaptation to Java)\n    */\n   public static int solveCubic(double[] eqn)\n@@ -689,11 +689,11 @@ public static int solveCubic(double[] eqn)\n    * result of -1 indicates that the equation is constant (i.e.,\n    * always or never zero).\n    *\n-   * @author <a href=\"mailto:bjg@network-theory.com\">Brian Gough</a>\n+   * @author Brain Gouph (bjg@network-theory.com)\n    * (original C implementation in the <a href=\n    * \"http://www.gnu.org/software/gsl/\">GNU Scientific Library</a>)\n    *\n-   * @author <a href=\"mailto:brawer@dandelis.ch\">Sascha Brawer</a>\n+   * @author Sascha Brawer (brawer@dandelis.ch)\n    * (adaptation to Java)\n    */\n   public static int solveCubic(double[] eqn, double[] res)"}, {"sha": "8654c745ec029d52813b75f52a9959b84931ca6e", "filename": "libjava/java/awt/geom/Dimension2D.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fgeom%2FDimension2D.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fgeom%2FDimension2D.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fgeom%2FDimension2D.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -42,8 +42,8 @@\n  * This stores a dimension in 2-dimensional space - a width (along the x-axis)\n  * and height (along the y-axis). The storage is left to subclasses.\n  *\n- * @author Per Bothner <bothner@cygnus.com>\n- * @author Eric Blake <ebb9@email.byu.edu>\n+ * @author Per Bothner (bothner@cygnus.com)\n+ * @author Eric Blake (ebb9@email.byu.edu)\n  * @since 1.2\n  * @status updated to 1.4\n  */"}, {"sha": "85ba1d1e9a5882c7b5c14b803a1587c79bd16d07", "filename": "libjava/java/awt/geom/Ellipse2D.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fgeom%2FEllipse2D.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fgeom%2FEllipse2D.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fgeom%2FEllipse2D.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -46,10 +46,10 @@\n  * The ellipse is defined by it's bounding box (shown in red),\n  * and is defined by the implicit curve:<BR>\n  * <blockquote>(<i>x</i>/<i>a</i>)<sup>2</sup> +\n- * (<i>y</i>/<i>b</i>)<sup>2</sup> = 1<BR><BR>\n+ * (<i>y</i>/<i>b</i>)<sup>2</sup> = 1<BR><BR></blockquote>\n  *\n- * @author Tom Tromey <tromey@cygnus.com>\n- * @author Eric Blake <ebb9@email.byu.edu>\n+ * @author Tom Tromey (tromey@cygnus.com)\n+ * @author Eric Blake (ebb9@email.byu.edu)\n  *\n  * @since 1.2\n  */"}, {"sha": "3aa432df14cae97f7c8127e3fde7e0731d959a6b", "filename": "libjava/java/awt/geom/IllegalPathStateException.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fgeom%2FIllegalPathStateException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fgeom%2FIllegalPathStateException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fgeom%2FIllegalPathStateException.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -41,7 +41,7 @@\n  * Thrown when an operation on a path is in an illegal state, such as appending\n  * a segment to a <code>GeneralPath</code> without an initial moveto.\n  *\n- * @author Tom Tromey <tromey@cygnus.com>\n+ * @author Tom Tromey (tromey@cygnus.com)\n  * @see GeneralPath\n  * @status updated to 1.4\n  */"}, {"sha": "3b64f45572708b1b3953c7d859c51fe00003d5d0", "filename": "libjava/java/awt/geom/Line2D.java", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fgeom%2FLine2D.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fgeom%2FLine2D.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fgeom%2FLine2D.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -46,8 +46,8 @@\n  * Remember, on-screen graphics have increasing x from left-to-right, and\n  * increasing y from top-to-bottom. The storage is left to subclasses.\n  *\n- * @author Tom Tromey <tromey@cygnus.com>\n- * @author Eric Blake <ebb9@email.byu.edu>\n+ * @author Tom Tromey (tromey@cygnus.com)\n+ * @author Eric Blake (ebb9@email.byu.edu)\n  * @author David Gilbert\n  * @since 1.2\n  * @status updated to 1.4\n@@ -867,7 +867,7 @@ public Object clone()\n   /**\n    * This class defines a point in <code>double</code> precision.\n    *\n-   * @author Eric Blake <ebb9@email.byu.edu>\n+   * @author Eric Blake (ebb9@email.byu.edu)\n    * @since 1.2\n    * @status updated to 1.4\n    */\n@@ -1017,7 +1017,7 @@ public Rectangle2D getBounds2D()\n   /**\n    * This class defines a point in <code>float</code> precision.\n    *\n-   * @author Eric Blake <ebb9@email.byu.edu>\n+   * @author Eric Blake (ebb9@email.byu.edu)\n    * @since 1.2\n    * @status updated to 1.4\n    */"}, {"sha": "0fa36674d4e79acd33e1f8ddba21c48b85b1bd8a", "filename": "libjava/java/awt/geom/NoninvertibleTransformException.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fgeom%2FNoninvertibleTransformException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fgeom%2FNoninvertibleTransformException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fgeom%2FNoninvertibleTransformException.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -42,7 +42,7 @@\n  * <code>AffineTransform</code>, but the transform is in a non-invertible\n  * state.\n  *\n- * @author Tom Tromey <tromey@cygnus.com>\n+ * @author Tom Tromey (tromey@cygnus.com)\n  * @see AffineTransform\n  * @status updated to 1.4\n  */"}, {"sha": "6d38911b732e6dbf021df660c6605e9879af690d", "filename": "libjava/java/awt/geom/PathIterator.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fgeom%2FPathIterator.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fgeom%2FPathIterator.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fgeom%2FPathIterator.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -44,8 +44,8 @@\n  * MOVETO directive, and can close a circular path back to the previos\n  * MOVETO via the CLOSE directive.\n  *\n- * @author Tom Tromey <tromey@cygnus.com>\n- * @author Eric Blake <ebb9@email.byu.edu>\n+ * @author Tom Tromey (tromey@cygnus.com)\n+ * @author Eric Blake (ebb9@email.byu.edu)\n  * @see java.awt.Shape\n  * @see java.awt.Stroke\n  * @see FlatteningPathIterator"}, {"sha": "e334ac7806be18647302d450c1419ff720565417", "filename": "libjava/java/awt/geom/Point2D.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fgeom%2FPoint2D.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fgeom%2FPoint2D.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fgeom%2FPoint2D.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -229,7 +229,7 @@ public boolean equals(Object o)\n   /**\n    * This class defines a point in <code>double</code> precision.\n    *\n-   * @author Eric Blake <ebb9@email.byu.edu>\n+   * @author Eric Blake (ebb9@email.byu.edu)\n    * @since 1.2\n    * @status updated to 1.4\n    */\n@@ -307,7 +307,7 @@ public String toString()\n   /**\n    * This class defines a point in <code>float</code> precision.\n    *\n-   * @author Eric Blake <ebb9@email.byu.edu>\n+   * @author Eric Blake (ebb9@email.byu.edu)\n    * @since 1.2\n    * @status updated to 1.4\n    */"}, {"sha": "db7c2abf2ec16444a3ced7487574a3a2ba832bad", "filename": "libjava/java/awt/geom/QuadCurve2D.java", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fgeom%2FQuadCurve2D.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fgeom%2FQuadCurve2D.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fgeom%2FQuadCurve2D.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -41,7 +41,6 @@\n import java.awt.Shape;\n import java.util.NoSuchElementException;\n \n-\n /**\n  * A two-dimensional curve that is parameterized with a quadratic\n  * function.\n@@ -563,11 +562,11 @@ public static void subdivide(double[] src, int srcOff, double[] left,\n    * result of -1 indicates that the equation is constant (i.e.,\n    * always or never zero).\n    *\n-   * @author <a href=\"mailto:bjg@network-theory.com\">Brian Gough</a>\n+   * @author Brain Gouph (bjg@network-theory.com)\n    * (original C implementation in the <a href=\n    * \"http://www.gnu.org/software/gsl/\">GNU Scientific Library</a>)\n    *\n-   * @author <a href=\"mailto:brawer@dandelis.ch\">Sascha Brawer</a>\n+   * @author Sascha Brawer (brawer@dandelis.ch)\n    * (adaptation to Java)\n    */\n   public static int solveQuadratic(double[] eqn)\n@@ -608,11 +607,11 @@ public static int solveQuadratic(double[] eqn)\n    * result of -1 indicates that the equation is constant (i.e.,\n    * always or never zero).\n    *\n-   * @author <a href=\"mailto:bjg@network-theory.com\">Brian Gough</a>\n+   * @author Brian Gouph (bjg@network-theory.com)\n    * (original C implementation in the <a href=\n    * \"http://www.gnu.org/software/gsl/\">GNU Scientific Library</a>)\n    *\n-   * @author <a href=\"mailto:brawer@dandelis.ch\">Sascha Brawer</a>\n+   * @author Sascha Brawer (brawer@dandelis.ch)\n    * (adaptation to Java)\n    */\n   public static int solveQuadratic(double[] eqn, double[] res)"}, {"sha": "8679d2e32d53be6fd0c937bade5719d04f30074d", "filename": "libjava/java/awt/geom/RectangularShape.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fgeom%2FRectangularShape.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fgeom%2FRectangularShape.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fgeom%2FRectangularShape.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -46,8 +46,8 @@\n  * subclasses which represent geometric objects inside a rectangular frame.\n  * This does not specify any geometry except for the bounding box.\n  *\n- * @author Tom Tromey <tromey@cygnus.com>\n- * @author Eric Blake <ebb9@email.byu.edu>\n+ * @author Tom Tromey (tromey@cygnus.com)\n+ * @author Eric Blake (ebb9@email.byu.edu)\n  * @since 1.2\n  * @see Arc2D\n  * @see Ellipse2D"}, {"sha": "b9af7efc7ee5522733dadb1b2d4fb44127e3c7e5", "filename": "libjava/java/awt/geom/RoundRectangle2D.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fgeom%2FRoundRectangle2D.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fgeom%2FRoundRectangle2D.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fgeom%2FRoundRectangle2D.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -41,7 +41,7 @@\n \n \n /** This class implements a rectangle with rounded corners.\n- * @author Tom Tromey <tromey@cygnus.com>\n+ * @author Tom Tromey (tromey@cygnus.com)\n  * @date December 3, 2000\n  */\n public abstract class RoundRectangle2D extends RectangularShape"}, {"sha": "03fbd36102684c2578e1798617c1c6e0799347aa", "filename": "libjava/java/awt/im/InputContext.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fim%2FInputContext.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fim%2FInputContext.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fim%2FInputContext.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* InputContext.java -- provides the context for text input\n-   Copyright (C) 2002, 2003, 2004  Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2003, 2004, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -74,7 +74,7 @@\n  * one entry per line in UTF-8 encoding, each class in the jar that implements\n  * java.awt.im.spi.InputMethodDescriptor.\n  *\n- * @author Eric Blake <ebb9@email.byu.edu>\n+ * @author Eric Blake (ebb9@email.byu.edu)\n  * @see Component#getInputContext()\n  * @see Component#enableInputMethods(boolean)\n  * @since 1.2"}, {"sha": "92867624aafda73fddf0eac71e6c098691418dc1", "filename": "libjava/java/awt/im/InputMethodHighlight.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fim%2FInputMethodHighlight.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fim%2FInputMethodHighlight.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fim%2FInputMethodHighlight.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* InputMethodHighlight.java -- highlights the current text selection\n-   Copyright (C) 2002 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -52,7 +52,7 @@\n  * AttributedCharacterIterators, and may be wrapped in Annotations to separate\n  * text segments.\n  *\n- * @author Eric Blake <ebb9@email.byu.edu>\n+ * @author Eric Blake (ebb9@email.byu.edu)\n  * @see AttributedCharacterIterators\n  * @see Annotation\n  * @since 1.2"}, {"sha": "d39efcb9400e83c16b5dc48524d690d9e431ffd8", "filename": "libjava/java/awt/im/InputMethodRequests.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fim%2FInputMethodRequests.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fim%2FInputMethodRequests.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fim%2FInputMethodRequests.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* InputMethodRequests.java -- handles text insertion via input methods\n-   Copyright (C) 2002 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -51,7 +51,7 @@\n  * usually below the main text window, until it is committed into place at\n  * the insertion point, overwriting any selected text</li></ul>\n  *\n- * @author Eric Blake <ebb9@email.byu.edu>\n+ * @author Eric Blake (ebb9@email.byu.edu)\n  * @see Component#getInputMethodRequests()\n  * @see InputMethodListener\n  * @since 1.2"}, {"sha": "78c2164ffab8031f6c56cc16c4e5173b19b8dc5c", "filename": "libjava/java/awt/im/InputSubset.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fim%2FInputSubset.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fim%2FInputSubset.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fim%2FInputSubset.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* InputSubset.java -- subsets of Unicode important in text input\n-   Copyright (C) 2002, 2003 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2003, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -42,7 +42,7 @@\n  * These constants encompass several Unicode blocks, or portions thereof, for\n  * simplification over {@link Character.UnicodeBlock}.\n  *\n- * @author Eric Blake <ebb9@email.byu.edu>\n+ * @author Eric Blake (ebb9@email.byu.edu)\n  * @since 1.2\n  * @status updated to 1.4\n  */"}, {"sha": "18f7a7b17a3172dfc8a0bb52b8251670cf87522e", "filename": "libjava/java/awt/im/spi/InputMethod.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fim%2Fspi%2FInputMethod.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fim%2Fspi%2FInputMethod.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fim%2Fspi%2FInputMethod.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* InputMethod.java -- defines an interface for complex text input\n-   Copyright (C) 2002 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -51,7 +51,7 @@\n  * <p>These contexts can be loaded by the input method framework, using\n  * {@link InputContext#selectInputMethod(Locale)}.\n  *\n- * @author Eric Blake <ebb9@email.byu.edu>\n+ * @author Eric Blake (ebb9@email.byu.edu)\n  * @since 1.3\n  * @status updated to 1.4\n  */"}, {"sha": "57a1fda48baa1e61ee1ae4a6f7e85c1fd4e19e14", "filename": "libjava/java/awt/im/spi/InputMethodDescriptor.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fim%2Fspi%2FInputMethodDescriptor.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fim%2Fspi%2FInputMethodDescriptor.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fim%2Fspi%2FInputMethodDescriptor.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* InputMethodDescriptor.java -- enables loading and use of an input method\n-   Copyright (C) 2002 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -45,7 +45,7 @@\n  * This interface provides information about an InputMethod before it is\n  * loaded.\n  *\n- * @author Eric Blake <ebb9@email.byu.edu>\n+ * @author Eric Blake (ebb9@email.byu.edu)\n  * @since 1.3\n  * @status updated to 1.4\n  */"}, {"sha": "4c921ede9ae824aabbdf5068ab7b5a90ef7a23fd", "filename": "libjava/java/awt/image/BandCombineOp.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fimage%2FBandCombineOp.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fimage%2FBandCombineOp.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FBandCombineOp.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -53,7 +53,7 @@\n  * for the destination.  Therefore the destination Raster must contain the\n  * same number of bands as the number of rows in the filter matrix.\n  * \n- * @author Jerry Quinn <jlquinn@optonline.net>\n+ * @author Jerry Quinn (jlquinn@optonline.net)\n  */\n public class BandCombineOp implements RasterOp\n {"}, {"sha": "68a4466eea2e4bc7a7e4de0277807b8f923aff6d", "filename": "libjava/java/awt/image/BandedSampleModel.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fimage%2FBandedSampleModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fimage%2FBandedSampleModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FBandedSampleModel.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -41,7 +41,7 @@\n  * multiple pixels in a single unit.  Pixels have 2^n bits and 2^k pixels fit\n  * per data element.\n  *\n- * @author Jerry Quinn <jlquinn@optonline.net>\n+ * @author Jerry Quinn (jlquinn@optonline.net)\n  */\n public final class BandedSampleModel extends ComponentSampleModel\n {"}, {"sha": "8bea284e9d39e466d368569eebc9ad1f13a7c867", "filename": "libjava/java/awt/image/ByteLookupTable.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fimage%2FByteLookupTable.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fimage%2FByteLookupTable.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FByteLookupTable.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* ByteLookupTable.java -- Java class for a pixel translation table.\n-   Copyright (C) 2004 Free Software Foundation, Inc.\n+   Copyright (C) 2004, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -44,7 +44,7 @@\n  * Alpha, R, G, and B.  When doing translation, the offset is subtracted from\n  * the pixel values to allow a subset of an array to be used.\n  *\n- * @author <a href=\"mailto:jlquinn@optonline.net\">Jerry Quinn</a>\n+ * @author Jerry Quinn (jlquinn@optonline.net)\n  * @version 1.0\n  */\n public class ByteLookupTable extends LookupTable"}, {"sha": "86161e0ae39678e493608d207e0e2050282f052f", "filename": "libjava/java/awt/image/ComponentSampleModel.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fimage%2FComponentSampleModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fimage%2FComponentSampleModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FComponentSampleModel.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -56,7 +56,7 @@\n  * is controlled by bandOffset, pixelStride, and scanlineStride, which means\n  * that any combination of interleavings is supported.\n  *\n- * @author Rolf W. Rasmussen <rolfwr@ii.uib.no>\n+ * @author Rolf W. Rasmussen (rolfwr@ii.uib.no)\n  */\n public class ComponentSampleModel extends SampleModel\n {"}, {"sha": "6f0215b10e1abcf8301db1bbb8c797d6a4a2e3a9", "filename": "libjava/java/awt/image/DataBuffer.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fimage%2FDataBuffer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fimage%2FDataBuffer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FDataBuffer.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -41,7 +41,7 @@\n  * of one or more banks.  A bank is a continuous region of data\n  * elements.\n  *\n- * @author Rolf W. Rasmussen <rolfwr@ii.uib.no>\n+ * @author Rolf W. Rasmussen (rolfwr@ii.uib.no)\n  */\n public abstract class DataBuffer\n {"}, {"sha": "a306ede6fd637770271cc2b70c4f20f032f7c757", "filename": "libjava/java/awt/image/DataBufferByte.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fimage%2FDataBufferByte.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fimage%2FDataBufferByte.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FDataBufferByte.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -47,7 +47,7 @@\n    code is a maintenance nightmare.  */\n \n /**\n- * @author Rolf W. Rasmussen <rolfwr@ii.uib.no>\n+ * @author Rolf W. Rasmussen (rolfwr@ii.uib.no)\n  */\n public final class DataBufferByte extends DataBuffer\n {"}, {"sha": "c6d1e100d35a75767c03efc0b838c5b53b9d93f3", "filename": "libjava/java/awt/image/DataBufferDouble.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fimage%2FDataBufferDouble.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fimage%2FDataBufferDouble.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FDataBufferDouble.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -49,8 +49,8 @@\n /**\n  * @since 1.4\n  *\n- * @author <a href=\"mailto:rolfwr@ii.uib.no\">Rolf W. Rasmussen</a>\n- * @author <a href=\"mailto:brawer@dandelis.ch\">Sascha Brawer</a>\n+ * @author Rolf W. Rasmussen (rolfwr@ii.uib.no)\n+ * @author Sascha Brawer (brawer@dandelis.ch)\n  */\n public final class DataBufferDouble\n   extends DataBuffer"}, {"sha": "6b47e2be00595c9db394dcb6200021a826422624", "filename": "libjava/java/awt/image/DataBufferFloat.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fimage%2FDataBufferFloat.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fimage%2FDataBufferFloat.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FDataBufferFloat.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -47,8 +47,8 @@\n    code is a maintenance nightmare.  */\n \n /**\n- * @author <a href=\"mailto:rolfwr@ii.uib.no\">Rolf W. Rasmussen</a>\n- * @author <a href=\"mailto:brawer@dandelis.ch\">Sascha Brawer</a>\n+ * @author Rolf W. Rasmussen (rolfwr@ii.uib.no)\n+ * @author Sascha Brawer (brawer@dandelis.ch)\n  */\n public final class DataBufferFloat\n   extends DataBuffer"}, {"sha": "c90f95588117946f82be56cd440690096233cf62", "filename": "libjava/java/awt/image/DataBufferInt.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fimage%2FDataBufferInt.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fimage%2FDataBufferInt.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FDataBufferInt.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -47,7 +47,7 @@\n    code is a maintenance nightmare.  */\n \n /**\n- * @author Rolf W. Rasmussen <rolfwr@ii.uib.no>\n+ * @author Rolf W. Rasmussen (rolfwr@ii.uib.no)\n  */\n public final class DataBufferInt extends DataBuffer\n {"}, {"sha": "a8d8cb5ef642fc90e83ec78c989e03cbc689a651", "filename": "libjava/java/awt/image/DataBufferShort.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fimage%2FDataBufferShort.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fimage%2FDataBufferShort.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FDataBufferShort.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -48,7 +48,7 @@\n    code is a maintenance nightmare.  */\n \n /**\n- * @author Rolf W. Rasmussen <rolfwr@ii.uib.no>\n+ * @author Rolf W. Rasmussen (rolfwr@ii.uib.no)\n  */\n public final class DataBufferShort extends DataBuffer\n {"}, {"sha": "7466d8579564e15935ed369920cbee003d823011", "filename": "libjava/java/awt/image/DataBufferUShort.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fimage%2FDataBufferUShort.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fimage%2FDataBufferUShort.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FDataBufferUShort.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -48,7 +48,7 @@\n    code is a maintenance nightmare.  */\n \n /**\n- * @author Rolf W. Rasmussen <rolfwr@ii.uib.no>\n+ * @author Rolf W. Rasmussen (rolfwr@ii.uib.no)\n  */\n public final class DataBufferUShort extends DataBuffer\n {"}, {"sha": "0018dc47cc32e0387beef580ae80c179ad374124", "filename": "libjava/java/awt/image/ImagingOpException.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fimage%2FImagingOpException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fimage%2FImagingOpException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FImagingOpException.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* ImagingOpException.java -- indicates an imaging filter failure\n-   Copyright (C) 2002, 2003 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2003, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -42,7 +42,7 @@\n  * This exception is thrown when <code>BufferedImageOp</code> or\n  * <code>RasterOp</code> filters cannot process an image.\n  *\n- * @author Eric Blake <ebb9@email.byu.edu>\n+ * @author Eric Blake (ebb9@email.byu.edu)\n  * @see BufferedImageOp\n  * @see RasterOp\n  * @status updated to 1.4"}, {"sha": "2bc82ee74c6d5a2c8f90b41e82af73871418b585", "filename": "libjava/java/awt/image/Kernel.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fimage%2FKernel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fimage%2FKernel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FKernel.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* Kernel.java -- Java class for an image processing kernel\n-   Copyright (C) 2004 Free Software Foundation, Inc.\n+   Copyright (C) 2004, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -43,7 +43,7 @@\n  * convolution filters among other purposes.  It stores an array of float\n  * values representing a 2-dimensional array in row-major order.\n  *\n- * @author <a href=\"mailto:jlquinn@optonline.net\">Jerry Quinn</a>\n+ * @author Jerry Quinn (jlquinn@optonline.net)\n  * @version 1.0\n  */\n public class Kernel implements Cloneable"}, {"sha": "497cdb6e0897b0ec33bbf4d066129c0cb9d35e57", "filename": "libjava/java/awt/image/LookupTable.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fimage%2FLookupTable.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fimage%2FLookupTable.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FLookupTable.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* LookupTable.java -- Java class for a pixel translation table.\n-   Copyright (C) 2004 Free Software Foundation, Inc.\n+   Copyright (C) 2004, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -47,7 +47,7 @@\n  * @see ByteLookupTable\n  * @see ShortLookupTable\n  *\n- * @author <a href=\"mailto:jlquinn@optonline.net\">Jerry Quinn</a>\n+ * @author Jerry Quinn (jlquinn@optonline.net)\n  * @version 1.0\n  */\n public abstract class LookupTable"}, {"sha": "ab971c0e675b7f963c90880753073ad8e1124118", "filename": "libjava/java/awt/image/MultiPixelPackedSampleModel.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fimage%2FMultiPixelPackedSampleModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fimage%2FMultiPixelPackedSampleModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FMultiPixelPackedSampleModel.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -43,7 +43,7 @@\n  * multiple pixels in a single unit.  Pixels have 2^n bits and 2^k pixels fit\n  * per data element.\n  *\n- * @author Jerry Quinn <jlquinn@optonline.net>\n+ * @author Jerry Quinn (jlquinn@optonline.net)\n  */\n public class MultiPixelPackedSampleModel extends SampleModel\n {"}, {"sha": "457dded93dbce7fb17172370270a325c874b33e7", "filename": "libjava/java/awt/image/PackedColorModel.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fimage%2FPackedColorModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fimage%2FPackedColorModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FPackedColorModel.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -43,7 +43,7 @@\n import java.awt.color.ColorSpace;\n \n /**\n- * @author Rolf W. Rasmussen <rolfwr@ii.uib.no>\n+ * @author Rolf W. Rasmussen (rolfwr@ii.uib.no)\n  */\n public abstract class PackedColorModel extends ColorModel\n {"}, {"sha": "1c0408cd15b9622d49ef2c1bcbb9222a7302228e", "filename": "libjava/java/awt/image/PixelInterleavedSampleModel.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fimage%2FPixelInterleavedSampleModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fimage%2FPixelInterleavedSampleModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FPixelInterleavedSampleModel.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* PixelInterleavedSampleModel.java\n-   Copyright (C) 2004 Free Software Foundation, Inc.\n+   Copyright (C) 2004, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -45,7 +45,7 @@\n  *\n  * @since 1.2\n  *\n- * @author <a href=\"mailto:brawer@dandelis.ch\">Sascha Brawer</a>\n+ * @author Sascha Brawer (brawer@dandelis.ch)\n  */\n public class PixelInterleavedSampleModel\n   extends ComponentSampleModel"}, {"sha": "ca88d70e36053ca6190dad65bf7f79a11aba0367", "filename": "libjava/java/awt/image/RGBImageFilter.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fimage%2FRGBImageFilter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fimage%2FRGBImageFilter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FRGBImageFilter.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* RGBImageFilter.java -- Java class for filtering Pixels by RGB values\n-   Copyright (C) 1999 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -42,7 +42,7 @@\n  * A filter designed to filter images in the default RGBColorModel regardless of \n  * the ImageProducer's ColorModel.\n  *\n- * @author Mark Benvenuto <mcb54@columbia.edu>\n+ * @author Mark Benvenuto (mcb54@columbia.edu)\n  */\n public abstract class RGBImageFilter extends ImageFilter\n {"}, {"sha": "c3cb07fb2191ba2edc135acf8ab3e52a6414bb43", "filename": "libjava/java/awt/image/Raster.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fimage%2FRaster.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fimage%2FRaster.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FRaster.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -41,7 +41,7 @@\n import java.awt.Rectangle;\n \n /**\n- * @author Rolf W. Rasmussen <rolfwr@ii.uib.no>\n+ * @author Rolf W. Rasmussen (rolfwr@ii.uib.no)\n  */\n public class Raster\n {"}, {"sha": "4cfc5b5dc88f4a733dea4e3c9d4881f09a21430b", "filename": "libjava/java/awt/image/RasterFormatException.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fimage%2FRasterFormatException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fimage%2FRasterFormatException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FRasterFormatException.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* RasterFormatException.java -- indicates invalid layout in Raster\n-   Copyright (C) 2002 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -42,7 +42,7 @@\n  * This exception is thrown when there is invalid layout information in\n  * <code>Raster</code>\n  *\n- * @author Eric Blake <ebb9@email.byu.edu>\n+ * @author Eric Blake (ebb9@email.byu.edu)\n  * @see Raster\n  * @status updated to 1.4\n  */"}, {"sha": "b0d12c0ead02887ab3c51a2307f37763f330bd46", "filename": "libjava/java/awt/image/SampleModel.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fimage%2FSampleModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fimage%2FSampleModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FSampleModel.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -37,7 +37,7 @@\n package java.awt.image;\n \n /**\n- * @author Rolf W. Rasmussen <rolfwr@ii.uib.no>\n+ * @author Rolf W. Rasmussen (rolfwr@ii.uib.no)\n  */\n public abstract class SampleModel\n {"}, {"sha": "c57abeba795b8832e9fd3deaf600e1de6fdc3fd6", "filename": "libjava/java/awt/image/ShortLookupTable.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fimage%2FShortLookupTable.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fimage%2FShortLookupTable.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FShortLookupTable.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* ShortLookupTable.java -- Java class for a pixel translation table.\n-   Copyright (C) 2004 Free Software Foundation, Inc.\n+   Copyright (C) 2004, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -44,7 +44,7 @@\n  * Alpha, R, G, and B.  When doing translation, the offset is subtracted from\n  * the pixel values to allow a subset of an array to be used.\n  *\n- * @author <a href=\"mailto:jlquinn@optonline.net\">Jerry Quinn</a>\n+ * @author Jerry Quinn (jlquinn@optonline.net)\n  * @version 1.0\n  */\n public class ShortLookupTable extends LookupTable"}, {"sha": "32789fc635026a5116e2494ff66616016bd8ece1", "filename": "libjava/java/awt/image/SinglePixelPackedSampleModel.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fimage%2FSinglePixelPackedSampleModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fimage%2FSinglePixelPackedSampleModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FSinglePixelPackedSampleModel.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -40,7 +40,7 @@\n import gnu.java.awt.Buffers;\n \n /**\n- * @author Rolf W. Rasmussen <rolfwr@ii.uib.no>\n+ * @author Rolf W. Rasmussen (rolfwr@ii.uib.no)\n  */\n public class SinglePixelPackedSampleModel extends SampleModel\n {"}, {"sha": "de3648af5f349df9daf4d65c758148b1a21b2866", "filename": "libjava/java/awt/image/WritableRaster.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fimage%2FWritableRaster.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fimage%2FWritableRaster.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FWritableRaster.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -41,7 +41,7 @@\n import java.awt.Rectangle;\n \n /**\n- * @author Rolf W. Rasmussen <rolfwr@ii.uib.no>\n+ * @author Rolf W. Rasmussen (rolfwr@ii.uib.no)\n  */\n public class WritableRaster extends Raster\n {"}, {"sha": "5507a4f6ef810a9bc62b4d55263eb59379d16a29", "filename": "libjava/java/awt/print/PrinterAbortException.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fprint%2FPrinterAbortException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fprint%2FPrinterAbortException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fprint%2FPrinterAbortException.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* PrinterAbortException.java -- Indicates the print job was aborted\n-   Copyright (C) 1999, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -42,7 +42,7 @@\n  * This exception is thrown when the print job is aborted, either by the\n  * user or by the application.\n  *\n- * @author Aaron M. Renn <arenn@urbanophile.com>\n+ * @author Aaron M. Renn (arenn@urbanophile.com)\n  * @status updated to 1.4\n  */\n public class PrinterAbortException extends PrinterException"}, {"sha": "e27fdbff4ab9365fedfcb32b1aa0b62cc1f00219", "filename": "libjava/java/awt/print/PrinterException.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fprint%2FPrinterException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fprint%2FPrinterException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fprint%2FPrinterException.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* PrinterException.java -- generic problem in the printing subsystem\n-   Copyright (C) 1999, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -42,7 +42,7 @@\n  * This is the generic toplevel exception for printing errors.  Subclasses\n  * provide more detailed descriptions of the problem.\n  *\n- * @author Aaron M. Renn <arenn@urbanophile.com>\n+ * @author Aaron M. Renn (arenn@urbanophile.com)\n  * @status updated to 1.4\n  */\n public class PrinterException extends Exception"}, {"sha": "e64ff4e6f7b77358514eb4e41a1bc0613e0bbbb5", "filename": "libjava/java/awt/print/PrinterIOException.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fprint%2FPrinterIOException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fawt%2Fprint%2FPrinterIOException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fprint%2FPrinterIOException.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* PrinterIOException.java -- The print job encountered an I/O error\n-   Copyright (C) 1999, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -44,8 +44,8 @@\n  * This exception is thrown when the print job encounters an I/O problem\n  * of some kind.\n  *\n- * @author Aaron M. Renn <arenn@urbanophile.com>\n- * @author Eric Blake <ebb9@email.byu.edu>\n+ * @author Aaron M. Renn (arenn@urbanophile.com)\n+ * @author Eric Blake (ebb9@email.byu.edu)\n  * @status updated to 1.4\n  */\n public class PrinterIOException extends PrinterException"}, {"sha": "0b20c86fefd560240b8ddef31b316617a7b89149", "filename": "libjava/java/beans/AppletInitializer.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fbeans%2FAppletInitializer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fbeans%2FAppletInitializer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fbeans%2FAppletInitializer.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* java.beans.AppletInitializer\n-   Copyright (C) 2001 Free Software Foundation, Inc.\n+   Copyright (C) 2001, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -45,7 +45,7 @@\n  * Bean that is also an Applet.  It is used by\n  * <code>Beans.instantiate()</code>.\n  *\n- * @author Tom Tromey <tromey@redhat.com>\n+ * @author Tom Tromey (tromey@redhat.com)\n  * @since 1.2\n  */\n public interface AppletInitializer"}, {"sha": "01f952f8597bd5b4bf7a6ceff4e0210cf4433a33", "filename": "libjava/java/beans/ExceptionListener.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fbeans%2FExceptionListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fbeans%2FExceptionListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fbeans%2FExceptionListener.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* ExceptionListener.java -- listen for recoverable internal exceptions\n-   Copyright (C) 2002 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -42,7 +42,7 @@\n  * This interface allows a class to monitor internal exceptions, to try to\n  * recover from them.\n  *\n- * @author Eric Blake <ebb9@email.byu.edu>\n+ * @author Eric Blake (ebb9@email.byu.edu)\n  * @since 1.4\n  * @status updated to 1.4\n  */"}, {"sha": "75e17b18be17bd5cec98cc76a0fbdac6419ba736", "filename": "libjava/java/beans/PropertyChangeEvent.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fbeans%2FPropertyChangeEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fbeans%2FPropertyChangeEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fbeans%2FPropertyChangeEvent.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* PropertyChangeEvent.java -- describes a change in a property\n-   Copyright (C) 1998, 2000, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 2000, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -55,7 +55,7 @@\n  * information.\n  *\n  * @author John Keiser\n- * @author Eric Blake <ebb9@email.byu.edu>\n+ * @author Eric Blake (ebb9@email.byu.edu)\n  * @since 1.1\n  * @status udpated to 1.4\n  */"}, {"sha": "3a04de2db5a0c92acc7a123441062c864d2b09da", "filename": "libjava/java/beans/PropertyChangeListenerProxy.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fbeans%2FPropertyChangeListenerProxy.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fbeans%2FPropertyChangeListenerProxy.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fbeans%2FPropertyChangeListenerProxy.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* PropertyChangeListenerProxy.java -- adds a name to a property listener\n-   Copyright (C) 2002 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -45,7 +45,7 @@\n  * associating a name with the listener. This can be used to filter the\n  * changes that one is interested in.\n  *\n- * @author Eric Blake <ebb9@email.byu.edu>\n+ * @author Eric Blake (ebb9@email.byu.edu)\n  * @since 1.4\n  * @status udpated to 1.4\n  */"}, {"sha": "76932bccda3cc298baeac8e315d206a8737837d2", "filename": "libjava/java/beans/PropertyChangeSupport.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fbeans%2FPropertyChangeSupport.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fbeans%2FPropertyChangeSupport.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fbeans%2FPropertyChangeSupport.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* PropertyChangeSupport.java -- support to manage property change listeners\n-   Copyright (C) 1998, 1999, 2000, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2000, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -57,7 +57,7 @@\n  * is thread-safe.\n  *\n  * @author John Keiser\n- * @author Eric Blake <ebb9@email.byu.edu>\n+ * @author Eric Blake (ebb9@email.byu.edu)\n  * @since 1.1\n  * @status updated to 1.4\n  */"}, {"sha": "84c31763023835ec934d385903520cccd1cb4c69", "filename": "libjava/java/beans/PropertyDescriptor.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fbeans%2FPropertyDescriptor.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fbeans%2FPropertyDescriptor.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fbeans%2FPropertyDescriptor.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* java.beans.PropertyDescriptor\n-   Copyright (C) 1998, 2001, 2004 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 2001, 2004, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -57,7 +57,7 @@\n  ** </OL>\n  **\n  ** @author John Keiser\n- ** @author Robert Schuster <thebohemian@gmx.net>\n+ ** @author Robert Schuster (thebohemian@gmx.net)\n  ** @since 1.1\n  ** @status updated to 1.4\n  **/\n@@ -448,7 +448,7 @@ else if (getMethodName1 == null && getMethodName2 == null)\n      * <li>the property type and the read method's return type must be assignable from the\n      * write method's argument type</li>\n      * <li>the write method may not exist</li>\n-     * <ul>\n+     * </ul>\n      * While checking the methods a common new property type is calculated. If the method\n      * succeeds this property type is returned.<br/>\n      * <br/>"}, {"sha": "d5007317bd5a97c466610ae2e6642031e936297d", "filename": "libjava/java/beans/VetoableChangeListenerProxy.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fbeans%2FVetoableChangeListenerProxy.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fbeans%2FVetoableChangeListenerProxy.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fbeans%2FVetoableChangeListenerProxy.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* VetoableChangeListenerProxy.java -- adds a name to a vetoable listener\n-   Copyright (C) 2002 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -45,7 +45,7 @@\n  * associating a name with the listener. This can be used to filter the\n  * changes that one is interested in.\n  *\n- * @author Eric Blake <ebb9@email.byu.edu>\n+ * @author Eric Blake (ebb9@email.byu.edu)\n  * @since 1.4\n  * @status udpated to 1.4\n  */"}, {"sha": "f1dbc50a7784650df7de299ef665bc5c67bb96c3", "filename": "libjava/java/beans/VetoableChangeSupport.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fbeans%2FVetoableChangeSupport.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fbeans%2FVetoableChangeSupport.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fbeans%2FVetoableChangeSupport.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* VetoableChangeSupport.java -- support to manage vetoable change listeners\n-   Copyright (C) 1998, 1999, 2000, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2000, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -57,7 +57,7 @@\n  * is thread-safe.\n  *\n  * @author John Keiser\n- * @author Eric Blake <ebb9@email.byu.edu>\n+ * @author Eric Blake (ebb9@email.byu.edu)\n  * @since 1.1\n  * @status updated to 1.4\n  */"}, {"sha": "ab597884828c32c63f4621102a3696b1a5bd9304", "filename": "libjava/java/io/BufferedReader.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fio%2FBufferedReader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fio%2FBufferedReader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FBufferedReader.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* BufferedReader.java\n-   Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003, 2004\n+   Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005\n      Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n@@ -55,8 +55,8 @@\n  * of remembering any number of input chars, to the limits of\n  * system memory or the size of <code>Integer.MAX_VALUE</code>\n  *\n- * @author Per Bothner <bothner@cygnus.com>\n- * @author Aaron M. Renn <arenn@urbanophile.com>\n+ * @author Per Bothner (bothner@cygnus.com)\n+ * @author Aaron M. Renn (arenn@urbanophile.com)\n  */\n public class BufferedReader extends Reader\n {"}, {"sha": "906e71a0d94480cf3b0ae94625c79406f931336e", "filename": "libjava/java/io/ByteArrayInputStream.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fio%2FByteArrayInputStream.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fio%2FByteArrayInputStream.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FByteArrayInputStream.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* ByteArrayInputStream.java -- Read an array as a stream\n-   Copyright (C) 1998, 1999, 2001 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2001, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -41,7 +41,7 @@\n /**\n   * This class permits an array of bytes to be read as an input stream.\n   *\n-  * @author Warren Levy <warrenl@cygnus.com>\n+  * @author Warren Levy (warrenl@cygnus.com)\n   * @author Aaron M. Renn (arenn@urbanophile.com)\n   */ \n public class ByteArrayInputStream extends InputStream"}, {"sha": "095debefa7bc8593fc33b36eeaba6827ec9bfa3d", "filename": "libjava/java/io/ByteArrayOutputStream.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fio%2FByteArrayOutputStream.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fio%2FByteArrayOutputStream.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FByteArrayOutputStream.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* BufferedReader.java\n-   Copyright (C) 1998, 1999, 2000, 2001, 2003 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2000, 2001, 2003, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -66,7 +66,7 @@\n   * multibyte character encodings.\n   *\n   * @author Aaron M. Renn (arenn@urbanophile.com)\n-  * @author Tom Tromey <tromey@cygnus.com>\n+  * @author Tom Tromey (tromey@cygnus.com)\n   * @date September 24, 1998 \n   */\n public class ByteArrayOutputStream extends OutputStream"}, {"sha": "d0d5a28399c40a7fe48fadf4f0a84ccd522395ee", "filename": "libjava/java/io/CharArrayReader.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fio%2FCharArrayReader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fio%2FCharArrayReader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FCharArrayReader.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* CharArrayReader.java -- Read an array of characters as a stream\n-   Copyright (C) 1998, 2001 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 2001, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -42,7 +42,7 @@\n   * This class permits an array of chars to be read as an input stream.\n   *\n   * @author Aaron M. Renn (arenn@urbanophile.com)\n-  * @author Warren Levy <warrenl@cygnus.com>\n+  * @author Warren Levy (warrenl@cygnus.com)\n   */\n public class CharArrayReader extends Reader\n {"}, {"sha": "4593f15c7849078e9811f22d043bd922d68f19f9", "filename": "libjava/java/io/CharArrayWriter.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fio%2FCharArrayWriter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fio%2FCharArrayWriter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FCharArrayWriter.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* CharArrayWriter.java -- Write chars to a buffer\n-   Copyright (C) 1998, 1999, 2001, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2001, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -60,7 +60,7 @@\n   * <p>\n   *\n   * @author Aaron M. Renn (arenn@urbanophile.com)\n-  * @author Tom Tromey <tromey@cygnus.com>\n+  * @author Tom Tromey (tromey@cygnus.com)\n   */\n public class CharArrayWriter extends Writer\n {"}, {"sha": "6f2afb53f7bde43ae8682ae397a10af839381460", "filename": "libjava/java/io/CharConversionException.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fio%2FCharConversionException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fio%2FCharConversionException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FCharConversionException.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* CharConversionException.java -- Character conversion exceptions\n-   Copyright (C) 1998, 1999, 2001, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2001, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -43,7 +43,7 @@\n  * an attempted character conversion.\n  *\n  * @author Aaron M. Renn (arenn@urbanophile.com)\n- * @author Tom Tromey <tromey@cygnus.com>\n+ * @author Tom Tromey (tromey@cygnus.com)\n  * @since 1.1\n  * @status updated to 1.4\n  */"}, {"sha": "0aa172b17a0cfd4901d9b6c6d36ed15f3b99a471", "filename": "libjava/java/io/DataInput.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fio%2FDataInput.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fio%2FDataInput.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FDataInput.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* DataInput.java -- Interface for reading data from a stream\n-   Copyright (C) 1998, 1999, 2001, 2003 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2001, 2003, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -48,7 +48,7 @@\n  * into Java primitive types. \n  *\n  * @author Aaron M. Renn (arenn@urbanophile.com)\n- * @author Warren Levy <warrenl@cygnus.com>\n+ * @author Warren Levy (warrenl@cygnus.com)\n  */\n public interface DataInput\n {"}, {"sha": "9cdbc6955068c9a1c6a5b11f434d30d5c4239c23", "filename": "libjava/java/io/DataInputStream.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fio%2FDataInputStream.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fio%2FDataInputStream.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FDataInputStream.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -50,8 +50,8 @@\n  *\n  * @see DataInput\n  *\n- * @author Warren Levy <warrenl@cygnus.com>\n- * @author Aaron M. Renn <arenn@urbanophile.com>\n+ * @author Warren Levy (warrenl@cygnus.com)\n+ * @author Aaron M. Renn (arenn@urbanophile.com)\n  * @date October 20, 1998.  \n  */\n public class DataInputStream extends FilterInputStream implements DataInput"}, {"sha": "70fb7d48c696c39e3c483ecf69fda408e6f04af8", "filename": "libjava/java/io/DataOutput.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fio%2FDataOutput.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fio%2FDataOutput.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FDataOutput.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* DataOutput.java -- Interface for writing data from a stream\n-   Copyright (C) 1998, 1999, 2001, 2003 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2001, 2003, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -49,7 +49,7 @@\n  * by classes implementing the <code>DataInput</code> interface. \n  *\n  * @author Aaron M. Renn (arenn@urbanophile.com)\n- * @author Tom Tromey <tromey@cygnus.com>\n+ * @author Tom Tromey (tromey@cygnus.com)\n  *\n  * @see DataInput\n  */"}, {"sha": "9a2d172ac46701c68038d641b23b65383311e919", "filename": "libjava/java/io/DataOutputStream.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fio%2FDataOutputStream.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fio%2FDataOutputStream.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FDataOutputStream.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* DataOutputStream.java -- Writes primitive Java datatypes to streams\n-   Copyright (C) 1998, 2001, 2003 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 2001, 2003, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -51,8 +51,8 @@\n  *\n  * @see DataInputStream\n  *\n- * @author Aaron M. Renn <arenn@urbanophile.com>\n- * @author Tom Tromey <tromey@cygnus.com>\n+ * @author Aaron M. Renn (arenn@urbanophile.com)\n+ * @author Tom Tromey (tromey@cygnus.com)\n  */\n public class DataOutputStream extends FilterOutputStream implements DataOutput\n {"}, {"sha": "2ec28c6c8eeb0f7c5182c4e479f608dbfb8f6715", "filename": "libjava/java/io/EOFException.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fio%2FEOFException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fio%2FEOFException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FEOFException.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* EOFException.java -- unexpected end of file exception\n-   Copyright (C) 1998, 1999, 2001, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2001, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -47,7 +47,7 @@\n  * thus throw this exception.\n  *\n  * @author Aaron M. Renn (arenn@urbanophile.com)\n- * @author Tom Tromey <tromey@cygnus.com>\n+ * @author Tom Tromey (tromey@cygnus.com)\n  * @status updated to 1.4\n  */\n public class EOFException extends IOException"}, {"sha": "17aaf799be06fe7a21f6090c7a55f1cbadeaf0ec", "filename": "libjava/java/io/FileInputStream.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fio%2FFileInputStream.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fio%2FFileInputStream.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FFileInputStream.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* FileInputStream.java -- An input stream that reads from disk files.\n-   Copyright (C) 1998, 2002, 2003, 2004 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 2002, 2003, 2004, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -51,8 +51,8 @@\n /**\n  * This class is a stream that reads its bytes from a file. \n  *\n- * @author Aaron M. Renn <arenn@urbanophile.com>\n- * @author Warren Levy <warrenl@cygnus.com>\n+ * @author Aaron M. Renn (arenn@urbanophile.com)\n+ * @author Warren Levy (warrenl@cygnus.com)\n  */\n public class FileInputStream extends InputStream\n {"}, {"sha": "66809f5e7bbe9c669fd978df621075a3e57c5b3b", "filename": "libjava/java/io/FileNotFoundException.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fio%2FFileNotFoundException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fio%2FFileNotFoundException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FFileNotFoundException.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* FileNotFoundException.java -- the requested file could not be found\n-   Copyright (C) 1998, 1999, 2001, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2001, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -43,8 +43,8 @@\n  * does not exist, or is inaccessible for some other reason (such as writing\n  * a read-only file).\n  *\n- * @author Aaron M. Renn <arenn@urbanophile.com>\n- * @author Tom Tromey <tromey@cygnus.com>\n+ * @author Aaron M. Renn (arenn@urbanophile.com)\n+ * @author Tom Tromey (tromey@cygnus.com)\n  * @status updated to 1.4\n  */\n public class FileNotFoundException extends IOException"}, {"sha": "34b06cbf1517d3f083a774384098486a5e6e4941", "filename": "libjava/java/io/FileOutputStream.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fio%2FFileOutputStream.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fio%2FFileOutputStream.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FFileOutputStream.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* FileOutputStream.java -- Writes to a file on disk.\n-   Copyright (C) 1998, 2001, 2003, 2004 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 2001, 2003, 2004, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -51,8 +51,8 @@\n  * This classes allows a stream of data to be written to a disk file or\n  * any open <code>FileDescriptor</code>.\n  *\n- * @author Aaron M. Renn <arenn@urbanophile.com>\n- * @author Tom Tromey <tromey@cygnus.com>\n+ * @author Aaron M. Renn (arenn@urbanophile.com)\n+ * @author Tom Tromey (tromey@cygnus.com)\n  */\n public class FileOutputStream extends OutputStream\n {"}, {"sha": "dad3ccf28afd16f36223028cb92edb9dc194c2bd", "filename": "libjava/java/io/FilenameFilter.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fio%2FFilenameFilter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fio%2FFilenameFilter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FFilenameFilter.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* FilenameFilter.java -- Filter a list of filenames\n-   Copyright (C) 1998, 1999, 2001, 2003 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2001, 2003, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -53,7 +53,7 @@\n  * or should not be included in the file listing.\n  *\n  * @author Aaron M. Renn (arenn@urbanophile.com)\n- * @author Tom Tromey <tromey@cygnus.com>\n+ * @author Tom Tromey (tromey@cygnus.com)\n  *\n  * @see File#listFiles(java.io.FilenameFilter)\n  * @see java.awt.FileDialog#setFilenameFilter(java.io.FilenameFilter)"}, {"sha": "477521aa8160aed7a9085af25889e4f3764f7f69", "filename": "libjava/java/io/FilterInputStream.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fio%2FFilterInputStream.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fio%2FFilterInputStream.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FFilterInputStream.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* FilterInputStream.java -- Base class for classes that filter input\n-   Copyright (C) 1998, 1999, 2001 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2001, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -65,7 +65,7 @@\n   * <code>InputStream read(byte[])</code> method.\n   *\n   * @author Aaron M. Renn (arenn@urbanophile.com)\n-  * @author Warren Levy <warrenl@cygnus.com>\n+  * @author Warren Levy (warrenl@cygnus.com)\n   */\n public class FilterInputStream extends InputStream\n {"}, {"sha": "98db4ac12c9f4fea0f8e31e6951cf90c386ccc90", "filename": "libjava/java/io/FilterOutputStream.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fio%2FFilterOutputStream.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fio%2FFilterOutputStream.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FFilterOutputStream.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* FilterOutputStream.java -- Parent class for output streams that filter\n-   Copyright (C) 1998, 1999, 2001, 2003 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2001, 2003, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -52,7 +52,7 @@\n   * underlying stream.  Subclasses provide actual filtering.\n   *\n   * @author Aaron M. Renn (arenn@urbanophile.com)\n-  * @author Tom Tromey <tromey@cygnus.com>\n+  * @author Tom Tromey (tromey@cygnus.com)\n   */\n public class FilterOutputStream extends OutputStream\n {"}, {"sha": "4cc6940c51827d4a8fe9da2d0d32e2cb41a44964", "filename": "libjava/java/io/FilterReader.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fio%2FFilterReader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fio%2FFilterReader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FFilterReader.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* FilterReader.java -- Base class for char stream classes that filter input\n-   Copyright (C) 1998, 1999, 2001, 2003 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2001, 2003, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -59,7 +59,7 @@\n   * <code>Reader} read(yte[])</code> method.\n   *\n   * @author Aaron M. Renn (arenn@urbanophile.com)\n-  * @author Warren Levy <warrenl@cygnus.com>\n+  * @author Warren Levy (warrenl@cygnus.com)\n   */\n public abstract class FilterReader extends Reader\n {"}, {"sha": "5a8ede572dbfa5dc7651b4f1782b9391622bb914", "filename": "libjava/java/io/FilterWriter.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fio%2FFilterWriter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fio%2FFilterWriter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FFilterWriter.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* FilterWriter.java -- Parent class for output streams that filter\n-   Copyright (C) 1998, 1999, 2001, 2003 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2001, 2003, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -52,7 +52,7 @@\n   * underlying stream.  Subclasses provide actual filtering.\n   *\n   * @author Aaron M. Renn (arenn@urbanophile.com)\n-  * @author Tom Tromey <tromey@cygnus.com> \n+  * @author Tom Tromey (tromey@cygnus.com) \n   */\n public abstract class FilterWriter extends Writer\n {"}, {"sha": "f1e3848da4a9c0a7b16417187cd2e7def1e8ad56", "filename": "libjava/java/io/IOException.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fio%2FIOException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fio%2FIOException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FIOException.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* IOException.java -- Generic input/output exception\n-   Copyright (C) 1998, 1999, 2001, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2001, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -45,7 +45,7 @@\n   * detailed indication of what happened.\n   *\n   * @author Aaron M. Renn (arenn@urbanophile.com)\n-  * @author Tom Tromey <tromey@cygnus.com>\n+  * @author Tom Tromey (tromey@cygnus.com)\n   * @status updated to 1.4\n   */\n public class IOException extends Exception"}, {"sha": "1d942446711ecdd3edd6f6737538e5e82679767a", "filename": "libjava/java/io/InputStream.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fio%2FInputStream.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fio%2FInputStream.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FInputStream.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* InputStream.java -- Base class for input\n-   Copyright (C) 1998, 1999, 2001 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2001, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -46,7 +46,7 @@\n   * or network connection.\n   *\n   * @author Aaron M. Renn (arenn@urbanophile.com)\n-  * @author Warren Levy <warrenl@cygnus.com>\n+  * @author Warren Levy (warrenl@cygnus.com)\n   */\n public abstract class InputStream\n {"}, {"sha": "614fb3b89478cf0547efcd7b903b06a1622cb06b", "filename": "libjava/java/io/InterruptedIOException.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fio%2FInterruptedIOException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fio%2FInterruptedIOException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FInterruptedIOException.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* InterruptedIOException.java -- an I/O operation was interrupted\n-   Copyright (C) 1998, 1999, 2001, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2001, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -43,8 +43,8 @@\n   * for some reason.  The field bytesTransferred will contain the number of\n   * bytes that were read/written prior to the interruption.\n   *\n-  * @author Aaron M. Renn <arenn@urbanophile.com>\n-  * @author Tom Tromey <tromey@cygnus.com>\n+  * @author Aaron M. Renn (arenn@urbanophile.com)\n+  * @author Tom Tromey (tromey@cygnus.com)\n   * @see Thread#interrupt()\n   * @status updated to 1.4\n   */"}, {"sha": "ae6292e9284de67fa44db556ce2dd9efaf8ac9eb", "filename": "libjava/java/io/LineNumberInputStream.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fio%2FLineNumberInputStream.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fio%2FLineNumberInputStream.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FLineNumberInputStream.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* LineNumberInputStream.java -- An input stream which counts line numbers\n-   Copyright (C) 1998, 1999, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -67,7 +67,7 @@\n  * compatibility only and should not be used in new applications.\n  *\n  * @author Aaron M. Renn (arenn@urbanophile.com)\n- * @author Warren Levy <warrenl@cygnus.com>\n+ * @author Warren Levy (warrenl@cygnus.com)\n  */\n public class LineNumberInputStream extends FilterInputStream\n {"}, {"sha": "0a4797bd6c1a193f97777122c2f90ea53a9a03eb", "filename": "libjava/java/io/LineNumberReader.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fio%2FLineNumberReader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fio%2FLineNumberReader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FLineNumberReader.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* LineNumberReader.java -- A character input stream which counts line numbers\n-   Copyright (C) 1998, 1999, 2001, 2003 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2001, 2003, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -52,9 +52,9 @@\n  * read from the stream does not end in a line termination sequence, it\n  * will not be counted as a line.\n  *\n- * @author Per Bothner <bothner@cygnus.com>\n+ * @author Per Bothner (bothner@cygnus.com)\n  * @author Aaron M. Renn (arenn@urbanophile.com)\n- * @author Guilhem Lavaux <guilhem@kaffe.org>\n+ * @author Guilhem Lavaux (guilhem@kaffe.org)\n  * @date December 28, 2003.\n  */\n /* Written using \"Java Class Libraries\", 2nd edition, plus online"}, {"sha": "bcaa2e3a158429be397b3968426a54beee5938e7", "filename": "libjava/java/io/ObjectInputStream.java", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fio%2FObjectInputStream.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fio%2FObjectInputStream.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FObjectInputStream.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,6 @@\n /* ObjectInputStream.java -- Class used to read serialized objects\n-   Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003, 2005\n+   Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -47,8 +48,8 @@\n import java.lang.reflect.Method;\n import java.lang.reflect.Modifier;\n import java.lang.reflect.Proxy;\n-import java.security.PrivilegedAction;\n import java.security.AccessController;\n+import java.security.PrivilegedAction;\n import java.util.Arrays;\n import java.util.Hashtable;\n import java.util.Vector;"}, {"sha": "fa2c78021c22b2c172d97858748b7e53727b5426", "filename": "libjava/java/io/ObjectStreamException.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fio%2FObjectStreamException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fio%2FObjectStreamException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FObjectStreamException.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* ObjectStreamException.java -- Superclass of all serialization exceptions\n-   Copyright (C) 1998, 2000, 2001, 2002, 2003 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 2000, 2001, 2002, 2003, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -44,7 +44,7 @@\n  * indications of the precise failure.\n  *\n  * @author Aaron M. Renn (arenn@urbanophile.com)\n- * @author Warren Levy <warrenl@cygnus.com>\n+ * @author Warren Levy (warrenl@cygnus.com)\n  * @since 1.1\n  * @status updated to 1.4\n  */"}, {"sha": "858302c0486f1fea316d6511079def32e15561ef", "filename": "libjava/java/io/OptionalDataException.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fio%2FOptionalDataException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fio%2FOptionalDataException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FOptionalDataException.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* OptionalDataException.java -- indicates unexpected data in serialized stream\n-   Copyright (C) 1998, 2000, 2001, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 2000, 2001, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -50,7 +50,7 @@\n  * </ul>\n  *\n  * @author Aaron M. Renn (arenn@urbanophile.com)\n- * @author Warren Levy <warrenl@cygnus.com>\n+ * @author Warren Levy (warrenl@cygnus.com)\n  * @since 1.1\n  * @status updated to 1.4\n  */"}, {"sha": "2b1a90a7508187fb700ad501a55ad7ea91673c25", "filename": "libjava/java/io/OutputStream.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fio%2FOutputStream.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fio%2FOutputStream.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FOutputStream.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* OutputStream.java -- Base class for byte output streams\n-   Copyright (C) 1998, 1999, 2001 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2001, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -46,7 +46,7 @@\n   * destination such as a file on disk or network connection.\n   *\n   * @author Aaron M. Renn (arenn@urbanophile.com)\n-  * @author Tom Tromey <tromey@cygnus.com>\n+  * @author Tom Tromey (tromey@cygnus.com)\n   */\n public abstract class OutputStream\n {"}, {"sha": "07050415aba43009b363717b029fb7538145755b", "filename": "libjava/java/io/OutputStreamWriter.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fio%2FOutputStreamWriter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fio%2FOutputStreamWriter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FOutputStreamWriter.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* OutputStreamWriter.java -- Writer that converts chars to bytes\n-   Copyright (C) 1998, 1999, 2000, 2001, 2003 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2000, 2001, 2003, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -70,7 +70,7 @@\n  * </ul>\n  *\n  * @author Aaron M. Renn (arenn@urbanophile.com)\n- * @author Per Bothner <bothner@cygnus.com>\n+ * @author Per Bothner (bothner@cygnus.com)\n  * @date April 17, 1998.  \n  */\n public class OutputStreamWriter extends Writer"}, {"sha": "02a126b000fd190435ca1815932142aff39ecbae", "filename": "libjava/java/io/PrintStream.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fio%2FPrintStream.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fio%2FPrintStream.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FPrintStream.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* PrintStream.java -- OutputStream for printing output\n-   Copyright (C) 1998, 1999, 2001, 2003 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2001, 2003, 2004, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -55,8 +55,8 @@\n  * <p>\n  * This class converts char's into byte's using the system default encoding.\n  *\n- * @author Aaron M. Renn <arenn@urbanophile.com>\n- * @author Tom Tromey <tromey@cygnus.com>\n+ * @author Aaron M. Renn (arenn@urbanophile.com)\n+ * @author Tom Tromey (tromey@cygnus.com)\n  */\n public class PrintStream extends FilterOutputStream\n {"}, {"sha": "e03f2f85a876d248de294c08a4221141b46fc12d", "filename": "libjava/java/io/PrintWriter.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fio%2FPrintWriter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fio%2FPrintWriter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FPrintWriter.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -54,8 +54,8 @@\n  * class which also auto-flushes when it encounters a newline character\n  * in the chars written).\n  *\n- * @author Per Bothner <bothner@cygnus.com>\n- * @author Aaron M. Renn <arenn@urbanophile.com>\n+ * @author Per Bothner (bothner@cygnus.com)\n+ * @author Aaron M. Renn (arenn@urbanophile.com)\n  * @date April 17, 1998.  \n  */\n public class PrintWriter extends Writer"}, {"sha": "aedd7eb65eedef96fef9f59eec1056675030fada", "filename": "libjava/java/io/PushbackInputStream.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fio%2FPushbackInputStream.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fio%2FPushbackInputStream.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FPushbackInputStream.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* PushbackInputStream.java -- An input stream that can unread bytes\n-   Copyright (C) 1998, 1999, 2001, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2001, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -49,7 +49,7 @@\n   * <p>\n   *\n   * @author Aaron M. Renn (arenn@urbanophile.com)\n-  * @author Warren Levy <warrenl@cygnus.com>\n+  * @author Warren Levy (warrenl@cygnus.com)\n   */\n public class PushbackInputStream extends FilterInputStream\n {"}, {"sha": "05f343ed9aa4f3a8c5be3120b2e3c533936ee89f", "filename": "libjava/java/io/PushbackReader.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fio%2FPushbackReader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fio%2FPushbackReader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FPushbackReader.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* PushbackReader.java -- An character stream that can unread chars\n-   Copyright (C) 1998, 2000, 2001, 2003 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 2000, 2001, 2003, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -49,7 +49,7 @@\n  * by the creator of the stream.\n  *\n  * @author Aaron M. Renn (arenn@urbanophile.com)\n- * @author Warren Levy <warrenl@cygnus.com>\n+ * @author Warren Levy (warrenl@cygnus.com)\n  */\n public class PushbackReader extends FilterReader\n {"}, {"sha": "c23ca3adf2e8681a2e19578eb5154a0a7afa3429", "filename": "libjava/java/io/RandomAccessFile.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fio%2FRandomAccessFile.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fio%2FRandomAccessFile.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FRandomAccessFile.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* RandomAccessFile.java -- Class supporting random file I/O\n-   Copyright (C) 1998, 1999, 2001, 2002, 2003, 2004 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2001, 2002, 2003, 2004, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -55,8 +55,8 @@\n  * <code>DataInput</code> and <code>DataOutput</code> interfaces to allow\n  * the reading and writing of Java primitives.\n  *\n- * @author Aaron M. Renn <arenn@urbanophile.com>\n- * @author Tom Tromey <tromey@cygnus.com>\n+ * @author Aaron M. Renn (arenn@urbanophile.com)\n+ * @author Tom Tromey (tromey@cygnus.com)\n  */\n public class RandomAccessFile implements DataOutput, DataInput\n {"}, {"sha": "bb4494b431a61f3a63c812d1a88ed9bb868105d4", "filename": "libjava/java/io/Reader.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fio%2FReader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fio%2FReader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FReader.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -49,7 +49,7 @@\n  * methods to read characters from a particular input source such as a file\n  * or network connection.\n  *\n- * @author Per Bothner <bothner@cygnus.com>\n+ * @author Per Bothner (bothner@cygnus.com)\n  * @date April 21, 1998.  \n  * @author Aaron M. Renn (arenn@urbanophile.com) \n  */"}, {"sha": "a46b11d56aa5c4c4699b43f313d9ca4721afbfc7", "filename": "libjava/java/io/SequenceInputStream.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fio%2FSequenceInputStream.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fio%2FSequenceInputStream.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FSequenceInputStream.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* SequenceInputStream.java -- Reads multiple input streams in sequence\n-   Copyright (C) 1998, 1999, 2001 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2001, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -61,7 +61,7 @@\n   * to completion, all subordinate streams are closed.\n   *\n   * @author Aaron M. Renn (arenn@urbanophile.com)\n-  * @author Warren Levy <warrenl@cygnus.com>\n+  * @author Warren Levy (warrenl@cygnus.com)\n   */\n public class SequenceInputStream extends InputStream\n {"}, {"sha": "065faae80cfb18ee343ccad9bc10d0b93240deec", "filename": "libjava/java/io/Serializable.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fio%2FSerializable.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fio%2FSerializable.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FSerializable.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* Serializable.java -- Interface to indicate a class may be serialized\n-   Copyright (C) 1998, 1999, 2001 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2001, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -47,7 +47,7 @@\n   * the implementing class may be serialized.\n   *\n   * @author Aaron M. Renn (arenn@urbanophile.com)\n-  * @author Warren Levy <warrenl@cygnus.com>\n+  * @author Warren Levy (warrenl@cygnus.com)\n   */\n public interface Serializable\n {"}, {"sha": "86002cbe8a6603ab27b45ebfdade681f911d081e", "filename": "libjava/java/io/StreamCorruptedException.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fio%2FStreamCorruptedException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fio%2FStreamCorruptedException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FStreamCorruptedException.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* StreamCorruptedException.java -- Error in stream during serialization\n-   Copyright (C) 1998, 2000, 2001, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 2000, 2001, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -43,7 +43,7 @@\n  * read from a stream during de-serialization.\n  *\n  * @author Aaron M. Renn (arenn@urbanophile.com)\n- * @author Warren Levy <warrenl@cygnus.com>\n+ * @author Warren Levy (warrenl@cygnus.com)\n  * @since 1.1\n  * @status updated to 1.4\n  */"}, {"sha": "b5bd38f2d78f58b54c67fb1cc621d8e7599354bf", "filename": "libjava/java/io/StreamTokenizer.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fio%2FStreamTokenizer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fio%2FStreamTokenizer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FStreamTokenizer.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -42,7 +42,7 @@\n  * million-zillion flags that can be set to control the parsing, as \n  * described under the various method headings.\n  *\n- * @author Warren Levy <warrenl@cygnus.com>\n+ * @author Warren Levy (warrenl@cygnus.com)\n  * @date October 25, 1998.  \n  */\n /* Written using \"Java Class Libraries\", 2nd edition, ISBN 0-201-31002-3"}, {"sha": "4ed9a9f71902b621377e362629297add6cd128d9", "filename": "libjava/java/io/StringBufferInputStream.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fio%2FStringBufferInputStream.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fio%2FStringBufferInputStream.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FStringBufferInputStream.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* StringBufferInputStream.java -- Read an String as a stream\n-   Copyright (C) 1998, 1999, 2001 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2001, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -65,7 +65,7 @@\n   * @deprecated\n   *\n   * @author Aaron M. Renn (arenn@urbanophile.com)\n-  * @author Warren Levy <warrenl@cygnus.com>\n+  * @author Warren Levy (warrenl@cygnus.com)\n   */\n public class StringBufferInputStream extends InputStream\n {"}, {"sha": "7b6e14193cd1349e3850d128c31ac9ae492b7aeb", "filename": "libjava/java/io/StringWriter.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fio%2FStringWriter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fio%2FStringWriter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FStringWriter.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* StringWriter.java -- Writes bytes to a StringBuffer\n-   Copyright (C) 1998, 1999, 2000, 2001, 2003 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2000, 2001, 2003, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -47,7 +47,7 @@\n   * can then be used to retrieve a <code>String</code>.\n   *\n   * @author Aaron M. Renn (arenn@urbanophile.com)\n-  * @author Tom Tromey <tromey@cygnus.com>\n+  * @author Tom Tromey (tromey@cygnus.com)\n   */\n public class StringWriter extends Writer\n {"}, {"sha": "5563268ffd57b5dddd93b8959151f0a582233d8b", "filename": "libjava/java/io/SyncFailedException.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fio%2FSyncFailedException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fio%2FSyncFailedException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FSyncFailedException.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* SyncFailedException.java -- a file sync failed\n-   Copyright (C) 1998, 1999, 2001, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2001, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -42,7 +42,7 @@\n  * Thrown when a file synchronization fails.\n  *\n  * @author Aaron M. Renn (arenn@urbanophile.com)\n- * @author Tom Tromey <tromey@cygnus.com>\n+ * @author Tom Tromey (tromey@cygnus.com)\n  * @see FileDescriptor#sync()\n  * @since 1.1\n  * @status updated to 1.4"}, {"sha": "d4f2df253e43be590f0ea81cbb219924c0b761bd", "filename": "libjava/java/io/UTFDataFormatException.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fio%2FUTFDataFormatException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fio%2FUTFDataFormatException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FUTFDataFormatException.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* UTFDataFormatException.java -- thrown on bad format in UTF data\n-   Copyright (C) 1998, 1999, 2001, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2001, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -43,7 +43,7 @@\n  * to indicate that the data read is invalid.\n  *\n  * @author Aaron M. Renn (arenn@urbanophile.com)\n- * @author Tom Tromey <tromey@cygnus.com>\n+ * @author Tom Tromey (tromey@cygnus.com)\n  * @see DataInput\n  * @see DataInputStream#readUTF(DataInput)\n  * @status updated to 1.4"}, {"sha": "5159fb2b246e581965987ce37014969f3746deb3", "filename": "libjava/java/io/UnsupportedEncodingException.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fio%2FUnsupportedEncodingException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fio%2FUnsupportedEncodingException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FUnsupportedEncodingException.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* UnsupportedEncodingException.java -- the requested encoding isn't supported\n-   Copyright (C) 1998, 1999, 2001, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2001, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -43,7 +43,7 @@\n  * not supported.\n  *\n  * @author Aaron M. Renn (arenn@urbanophile.com)\n- * @author Per Bothner <bothner@cygnus.com>\n+ * @author Per Bothner (bothner@cygnus.com)\n  * @since 1.1\n  * @status updated to 1.4\n  */"}, {"sha": "a7787805f30e88d012172902c097df41af1642d5", "filename": "libjava/java/io/WriteAbortedException.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fio%2FWriteAbortedException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fio%2FWriteAbortedException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FWriteAbortedException.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* WriteAbortedException.java -- wraps an exception thrown while writing\n-   Copyright (C) 1998, 2000, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 2000, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -44,7 +44,7 @@\n   * objects are discarded.\n   *\n   * @author Aaron M. Renn (arenn@urbanophile.com)\n-  * @author Eric Blake <ebb9@email.byu.edu>\n+  * @author Eric Blake (ebb9@email.byu.edu)\n   * @since 1.1\n   * @status updated to 1.4\n   */"}, {"sha": "4a69030a5e20cdcd3df3f4ffbd8a87823fc0aea6", "filename": "libjava/java/io/Writer.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fio%2FWriter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Fio%2FWriter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FWriter.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* Writer.java -- Base class for character output streams\n-   Copyright (C) 1998, 1999, 2001, 2003, 2004 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2001, 2003, 2004, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -51,7 +51,7 @@\n  * destination such as a file on disk or network connection.\n  *\n  * @author Aaron M. Renn (arenn@urbanophile.com)\n- * @author Per Bothner <bothner@cygnus.com>\n+ * @author Per Bothner (bothner@cygnus.com)\n  */\n public abstract class Writer\n {"}, {"sha": "8fd20d3c0cfa33c3c0363bd9c33f13c89143eb03", "filename": "libjava/java/lang/AbstractMethodError.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Flang%2FAbstractMethodError.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Flang%2FAbstractMethodError.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FAbstractMethodError.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* AbstractMethodError.java -- thrown if an abstract method is invoked\n-   Copyright (C) 1998, 1999, 2001, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2001, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -46,7 +46,7 @@\n  * reflecting on methods.\n  *\n  * @author Brian Jones\n- * @author Tom Tromey <tromey@cygnus.com>\n+ * @author Tom Tromey (tromey@cygnus.com)\n  * @status updated to 1.4\n  */\n public class AbstractMethodError extends IncompatibleClassChangeError"}, {"sha": "7fb9c1cc4d6a431465dd42756a3b947b0a54f6f4", "filename": "libjava/java/lang/ArithmeticException.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Flang%2FArithmeticException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Flang%2FArithmeticException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FArithmeticException.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,6 +1,6 @@\n /* ArithmeticException.java -- exception thrown to indicate conditions\n    like divide by zero.\n-   Copyright (C) 1998, 1999, 2001, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2001, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -48,7 +48,7 @@\n  * </pre>\n  *\n  * @author Brian Jones\n- * @author Warren Levy <warrenl@cygnus.com>\n+ * @author Warren Levy (warrenl@cygnus.com)\n  * @status updated to 1.4\n  */\n public class ArithmeticException extends RuntimeException"}, {"sha": "abc6d1d607fbf1989ab9ccae666f7a0bdbf1f00b", "filename": "libjava/java/lang/ArrayIndexOutOfBoundsException.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Flang%2FArrayIndexOutOfBoundsException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Flang%2FArrayIndexOutOfBoundsException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FArrayIndexOutOfBoundsException.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,6 +1,6 @@\n /* ArrayIndexOutOfBoundsException.java -- exception thrown when accessing\n    an illegal index.\n-   Copyright (C) 1998, 1999, 2001, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2001, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -48,7 +48,7 @@\n  * </pre>\n  *\n  * @author Brian Jones\n- * @author Warren Levy <warrenl@cygnus.com>\n+ * @author Warren Levy (warrenl@cygnus.com)\n  * @status updated to 1.4\n  */\n public class ArrayIndexOutOfBoundsException extends IndexOutOfBoundsException"}, {"sha": "00a084ec11505738a29ac50b3f6d431e48ea073d", "filename": "libjava/java/lang/ArrayStoreException.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Flang%2FArrayStoreException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Flang%2FArrayStoreException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FArrayStoreException.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,6 +1,6 @@\n /* ArrayStoreException.java -- exception thrown to when trying to store an\n    object into an array of a different type.\n-   Copyright (C) 1998, 1999, 2001, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2001, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -48,7 +48,7 @@\n  * </pre>\n  *\n  * @author Brian Jones\n- * @author Warren Levy <warrenl@cygnus.com>\n+ * @author Warren Levy (warrenl@cygnus.com)\n  * @status updated to 1.4\n  */\n public class ArrayStoreException extends RuntimeException"}, {"sha": "8851be1d30f620e68d1e918e50b3a92210666e0b", "filename": "libjava/java/lang/AssertionError.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Flang%2FAssertionError.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Flang%2FAssertionError.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FAssertionError.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* AssertionError.java -- indication of a failed assertion\n-   Copyright (C) 2002 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -47,7 +47,7 @@\n  * the string <code>\"\" + <em>expression</em></code>. This extends Error,\n  * because you usually do not want to inadvertently trap an assertion failure.\n  *\n- * @author Eric Blake <ebb9@email.byu.edu>\n+ * @author Eric Blake (ebb9@email.byu.edu)\n  * @since 1.4\n  * @status updated to 1.4\n  */"}, {"sha": "a30b669df1ab6c6e65028675cff9dcfaa423088e", "filename": "libjava/java/lang/Boolean.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Flang%2FBoolean.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Flang%2FBoolean.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FBoolean.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* Boolean.java -- object wrapper for boolean\n-   Copyright (C) 1998, 2001, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 2001, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -45,7 +45,7 @@\n  * <code>boolean</code> values.\n  *\n  * @author Paul Fisher\n- * @author Eric Blake <ebb9@email.byu.edu>\n+ * @author Eric Blake (ebb9@email.byu.edu)\n  * @since 1.0\n  * @status updated to 1.4\n  */"}, {"sha": "e59ac598aedbb761b2d8e3cd25ed07e6fcda2a9f", "filename": "libjava/java/lang/Byte.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Flang%2FByte.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Flang%2FByte.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FByte.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* Byte.java -- object wrapper for byte\n-   Copyright (C) 1998, 2001, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 2001, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -48,7 +48,7 @@\n  * @author Paul Fisher\n  * @author John Keiser\n  * @author Per Bothner\n- * @author Eric Blake <ebb9@email.byu.edu>\n+ * @author Eric Blake (ebb9@email.byu.edu)\n  * @since 1.1\n  * @status updated to 1.4\n  */"}, {"sha": "bf11861985d7da0460c91017a904812ab694a84e", "filename": "libjava/java/lang/Class.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Flang%2FClass.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Flang%2FClass.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FClass.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -71,8 +71,8 @@\n  * see {@link ObjectStreamClass}.\n  *\n  * @author John Keiser\n- * @author Eric Blake <ebb9@email.byu.edu>\n- * @author Tom Tromey <tromey@cygnus.com>\n+ * @author Eric Blake (ebb9@email.byu.edu)\n+ * @author Tom Tromey (tromey@cygnus.com)\n  * @since 1.0\n  * @see ClassLoader\n  */"}, {"sha": "49c5262222d8f4a3b8d5aeb2d14b894a180d6ef8", "filename": "libjava/java/lang/ClassCastException.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Flang%2FClassCastException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Flang%2FClassCastException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FClassCastException.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* ClassCastException.java -- exception thrown on bad cast\n-   Copyright (C) 1998, 1999, 2001, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2001, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -47,7 +47,7 @@\n  * </pre>\n  *\n  * @author Brian Jones\n- * @author Warren Levy <warrenl@cygnus.com>\n+ * @author Warren Levy (warrenl@cygnus.com)\n  * @status updated to 1.4\n  */\n public class ClassCastException extends RuntimeException"}, {"sha": "fb93327eb1d4c6f4c9740acfd290ef23e0b002b2", "filename": "libjava/java/lang/ClassCircularityError.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Flang%2FClassCircularityError.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Flang%2FClassCircularityError.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FClassCircularityError.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* ClassCircularityError.java -- thrown when linking circular classes\n-   Copyright (C) 1998, 1999, 2001, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2001, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -44,7 +44,7 @@\n  * incompatible versions of class files, as the compiler normally catches this.\n  *\n  * @author Brian Jones\n- * @author Tom Tromey <tromey@cygnus.com>\n+ * @author Tom Tromey (tromey@cygnus.com)\n  * @status updated to 1.4\n  */\n public class ClassCircularityError extends LinkageError"}, {"sha": "2621281273f83e46ec31f2eca601a62b4d4b78fd", "filename": "libjava/java/lang/ClassLoader.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Flang%2FClassLoader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Flang%2FClassLoader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FClassLoader.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -109,7 +109,7 @@\n  *\n  * @author John Keiser\n  * @author Mark Wielaard\n- * @author Eric Blake <ebb9@email.byu.edu>\n+ * @author Eric Blake (ebb9@email.byu.edu)\n  * @see Class\n  * @since 1.0\n  * @status still missing 1.4 functionality"}, {"sha": "cfa03f5964778de9b68c0bd332fa86082c3a07e4", "filename": "libjava/java/lang/ClassNotFoundException.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Flang%2FClassNotFoundException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Flang%2FClassNotFoundException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FClassNotFoundException.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* ClassNotFoundException.java -- thrown when class definition cannot be found\n-   Copyright (C) 1998, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -43,7 +43,7 @@\n  * cannot be found. This exception is often chained from another Throwable.\n  *\n  * @author Brian Jones\n- * @author Eric Blake <ebb9@email.byu.edu>\n+ * @author Eric Blake (ebb9@email.byu.edu)\n  * @see Class#forName(String)\n  * @see ClassLoader#findSystemClass(String)\n  * @see ClassLoader#loadClass(String, boolean)"}, {"sha": "488e9154c3ab53c4401df29fcd54df4bc679c23e", "filename": "libjava/java/lang/CloneNotSupportedException.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Flang%2FCloneNotSupportedException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Flang%2FCloneNotSupportedException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FCloneNotSupportedException.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* CloneNotSupportedException.java -- thrown when an object cannot be cloned\n-   Copyright (C) 1998, 1999, 2001, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2001, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -60,8 +60,8 @@\n  * </pre>\n  *\n  * @author Brian Jones\n- * @author Warren Levy <warrenl@cygnus.com>\n- * @author Eric Blake <ebb9@email.byu.edu>\n+ * @author Warren Levy (warrenl@cygnus.com)\n+ * @author Eric Blake (ebb9@email.byu.edu)\n  * @see Cloneable\n  * @see Object#clone()\n  * @status updated to 1.4"}, {"sha": "0a8243ea21fcd02370d5c163a5fc09c729b21ad0", "filename": "libjava/java/lang/Cloneable.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Flang%2FCloneable.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Flang%2FCloneable.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FCloneable.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* Cloneable.java -- Interface for marking objects cloneable by Object.clone()\n-   Copyright (C) 1998, 1999, 2001, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2001, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -65,8 +65,8 @@\n  * <code>CloneNotSupportedException</code>.\n  *\n  * @author Paul Fisher\n- * @author Eric Blake <ebb9@email.byu.edu>\n- * @author Warren Levy <warrenl@cygnus.com>\n+ * @author Eric Blake (ebb9@email.byu.edu)\n+ * @author Warren Levy (warrenl@cygnus.com)\n  * @see Object#clone()\n  * @see CloneNotSupportedException\n  * @since 1.0"}, {"sha": "4ffec6056cae97cbe9f1f824a3cc6598c32228b6", "filename": "libjava/java/lang/Comparable.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Flang%2FComparable.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Flang%2FComparable.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FComparable.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* Comparable.java -- Interface for comparaing objects to obtain an ordering\n-   Copyright (C) 1998, 1999, 2001, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2001, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -57,7 +57,7 @@\n  * classes.\n  *\n  * @author Geoff Berry\n- * @author Warren Levy <warrenl@cygnus.com>\n+ * @author Warren Levy (warrenl@cygnus.com)\n  * @see java.util.Comparator\n  * @see java.util.Collections#sort(java.util.List)\n  * @see java.util.Arrays#sort(Object[])"}, {"sha": "1179f79faffab2c868593650f06599d88828e4d3", "filename": "libjava/java/lang/Compiler.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Flang%2FCompiler.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Flang%2FCompiler.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FCompiler.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* Compiler.java -- placeholder for Java-to-native runtime compilers\n-   Copyright (C) 1998, 1999, 2001, 2002, 2004 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2001, 2002, 2004, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -50,7 +50,7 @@\n  *\n  * <p>Note that a VM might not have implemented any of this.\n  *\n- * @author Tom Tromey <tromey@cygnus.com>\n+ * @author Tom Tromey (tromey@cygnus.com)\n  * @see System#getProperty(String)\n  * @see System#getProperty(String, String)\n  * @see System#loadLibrary(String)"}, {"sha": "81985f04e05b250148154970f451d13b190fd116", "filename": "libjava/java/lang/Double.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Flang%2FDouble.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Flang%2FDouble.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FDouble.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* Double.java -- object wrapper for double\n-   Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003\n+   Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003, 2005\n    Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n@@ -48,8 +48,8 @@\n  * related to doubles.\n  *\n  * @author Paul Fisher\n- * @author Andrew Haley <aph@cygnus.com>\n- * @author Eric Blake <ebb9@email.byu.edu>\n+ * @author Andrew Haley (aph@cygnus.com)\n+ * @author Eric Blake (ebb9@email.byu.edu)\n  * @since 1.0\n  * @status updated to 1.4\n  */"}, {"sha": "fc1d6227861ba5c2a7296bc0844cdd3cf9f6d09c", "filename": "libjava/java/lang/Error.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Flang%2FError.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Flang%2FError.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FError.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* Error.java -- Indication of fatal abnormal conditions\n-   Copyright (C) 1998, 1999, 2001, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2001, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -49,8 +49,8 @@\n  * executing the method.\n  *\n  * @author Brian Jones\n- * @author Tom Tromey <tromey@cygnus.com>\n- * @author Eric Blake <ebb9@email.byu.edu>\n+ * @author Tom Tromey (tromey@cygnus.com)\n+ * @author Eric Blake (ebb9@email.byu.edu)\n  * @since 1.0\n  * @status updated to 1.4\n  */"}, {"sha": "68a7dcb2d2b30f7e96f92da9d395872f304814c0", "filename": "libjava/java/lang/Exception.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Flang%2FException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Flang%2FException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FException.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,6 +1,6 @@\n /* Exception.java -- generic exception thrown to indicate an exceptional\n    condition has occurred.\n-   Copyright (C) 1998, 1999, 2001, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2001, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -47,8 +47,8 @@\n  * mouse movements, keyboard clicking, etc.\n  *\n  * @author Brian Jones\n- * @author Warren Levy <warrenl@cygnus.com>\n- * @author Eric Blake <ebb9@email.byu.edu>\n+ * @author Warren Levy (warrenl@cygnus.com)\n+ * @author Eric Blake (ebb9@email.byu.edu)\n  * @status updated to 1.4\n  */\n public class Exception extends Throwable"}, {"sha": "966a9f3acee468a0e5d145ee1b7c41f9864f1b68", "filename": "libjava/java/lang/ExceptionInInitializerError.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Flang%2FExceptionInInitializerError.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Flang%2FExceptionInInitializerError.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FExceptionInInitializerError.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,6 +1,6 @@\n /* ExceptionInInitializerError.java -- thrown when class initialization fails\n    with an uncaught exception\n-   Copyright (C) 1998, 1999, 2000, 2001, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2000, 2001, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -48,8 +48,8 @@\n  * is initialized as part of another action.\n  *\n  * @author Brian Jones\n- * @author Tom Tromey <tromey@cygnus.com>\n- * @author Eric Blake <ebb9@email.byu.edu>\n+ * @author Tom Tromey (tromey@cygnus.com)\n+ * @author Eric Blake (ebb9@email.byu.edu)\n  * @since 1.1\n  * @status updated to 1.4\n  */"}, {"sha": "0fa3547a77ba561772776a81bc36eac24af1abb9", "filename": "libjava/java/lang/Float.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Flang%2FFloat.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Flang%2FFloat.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FFloat.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* Float.java -- object wrapper for float\n-   Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003\n+   Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003, 2005\n    Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n@@ -47,8 +47,8 @@\n  * related to floats.\n  *\n  * @author Paul Fisher\n- * @author Andrew Haley <aph@cygnus.com>\n- * @author Eric Blake <ebb9@email.byu.edu>\n+ * @author Andrew Haley (aph@cygnus.com)\n+ * @author Eric Blake (ebb9@email.byu.edu)\n  * @since 1.0\n  * @status updated to 1.4\n  */"}, {"sha": "a45efd1633b4ea1ebfa70179c6a77fef21bf32b1", "filename": "libjava/java/lang/IllegalAccessError.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Flang%2FIllegalAccessError.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Flang%2FIllegalAccessError.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FIllegalAccessError.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* IllegalAccessError.java -- thrown when linking to an inaccessible member\n-   Copyright (C) 1998, 1999, 2001, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2001, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -47,7 +47,7 @@\n  * application.\n  *\n  * @author Brian Jones\n- * @author Tom Tromey <tromey@cygnus.com>\n+ * @author Tom Tromey (tromey@cygnus.com)\n  * @status updated to 1.4\n  */\n public class IllegalAccessError extends IncompatibleClassChangeError"}, {"sha": "f1ac3b0a32e9c8d1280b71ffac9b0fd1ce445fc2", "filename": "libjava/java/lang/IllegalAccessException.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Flang%2FIllegalAccessException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Flang%2FIllegalAccessException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FIllegalAccessException.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,6 +1,6 @@\n /* IllegalAccessException.java -- thrown on attempt to reflect on\n    inaccessible data\n-   Copyright (C) 1998, 1999, 2001, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2001, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -45,7 +45,7 @@\n  * variable that belongs to a class in another package is bad.\n  *\n  * @author Brian Jones\n- * @author Warren Levy <warrenl@cygnus.com>\n+ * @author Warren Levy (warrenl@cygnus.com)\n  * @see Class#newInstance()\n  * @see Field#set(Object, Object)\n  * @see Field#setBoolean(Object, boolean)"}, {"sha": "d0120135ca1255e83ab9438273664a84da5eb019", "filename": "libjava/java/lang/IllegalArgumentException.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Flang%2FIllegalArgumentException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Flang%2FIllegalArgumentException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FIllegalArgumentException.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,6 +1,6 @@\n /* IllegalArgumentException.java -- thrown when a method is passed an\n    illegal or inappropriate argument\n-   Copyright (C) 1998, 1999, 2001, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2001, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -46,7 +46,7 @@\n  * </pre>\n  *\n  * @author Brian Jones\n- * @author Warren Levy <warrenl@cygnus.com>\n+ * @author Warren Levy (warrenl@cygnus.com)\n  * @status updated to 1.4\n  */\n public class IllegalArgumentException extends RuntimeException"}, {"sha": "7461942ccd7af1c75f1a8f399645b1f144be56a5", "filename": "libjava/java/lang/IllegalMonitorStateException.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Flang%2FIllegalMonitorStateException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Flang%2FIllegalMonitorStateException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FIllegalMonitorStateException.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,6 +1,6 @@\n /* IllegalMonitorStateException.java -- thrown when trying to wait or\n    notify a monitor that is not owned\n-   Copyright (C) 1998, 1999, 2001, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2001, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -49,7 +49,7 @@\n  * </pre>\n  *\n  * @author Brian Jones\n- * @author Warren Levy <warrenl@cygnus.com>\n+ * @author Warren Levy (warrenl@cygnus.com)\n  * @status updated to 1.4\n  */\n public class IllegalMonitorStateException extends RuntimeException"}, {"sha": "f39ea539cc16a1a1945f8cbb111382b3acdeb6ec", "filename": "libjava/java/lang/IllegalStateException.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Flang%2FIllegalStateException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Flang%2FIllegalStateException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FIllegalStateException.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,6 +1,6 @@\n /* IllegalStateException.java -- thrown when invoking a method at\n    an illegal or inappropriate time\n-   Copyright (C) 1998, 1999, 2001, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2001, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -50,7 +50,7 @@\n  * </pre>\n  *\n  * @author Brian Jones\n- * @author Warren Levy <warrenl@cygnus.com>\n+ * @author Warren Levy (warrenl@cygnus.com)\n  * @since 1.1\n  * @status updated to 1.4\n  */"}, {"sha": "d7e0a2ba49b9e85dbee80ec10e06574e9d1d775e", "filename": "libjava/java/lang/IllegalThreadStateException.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Flang%2FIllegalThreadStateException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Flang%2FIllegalThreadStateException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FIllegalThreadStateException.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,6 +1,6 @@\n /* IllegalThreadStateException.java -- thrown when trying to manipulate a\n    Thread when it is not in an appropriate state\n-   Copyright (C) 1998, 1999, 2001, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2001, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -46,7 +46,7 @@\n  * two methods are deprecated, this exception is likely very rare.\n  *\n  * @author Brian Jones\n- * @author Warren Levy <warrenl@cygnus.com>\n+ * @author Warren Levy (warrenl@cygnus.com)\n  * @status updated to 1.4\n  */\n public class IllegalThreadStateException extends IllegalArgumentException"}, {"sha": "7885a2542e66b7f3b0a3b6d3fabdd69318ea0b1e", "filename": "libjava/java/lang/IncompatibleClassChangeError.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Flang%2FIncompatibleClassChangeError.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Flang%2FIncompatibleClassChangeError.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FIncompatibleClassChangeError.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* IncompatibleClassChangeError.java -- thrown for binary incompatible classes\n-   Copyright (C) 1998, 1999, 2001, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2001, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -44,7 +44,7 @@\n  * incompatible way.\n  *\n  * @author Brian Jones\n- * @author Tom Tromey <tromey@cygnus.com>\n+ * @author Tom Tromey (tromey@cygnus.com)\n  * @status updated to 1.4\n  */\n public class IncompatibleClassChangeError extends LinkageError"}, {"sha": "4886f01da9d47ecc8afec1ff673dd721b9b9f542", "filename": "libjava/java/lang/IndexOutOfBoundsException.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Flang%2FIndexOutOfBoundsException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Flang%2FIndexOutOfBoundsException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FIndexOutOfBoundsException.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* IndexOutOfBoundsException.java -- thrown for an invalid index\n-   Copyright (C) 1998, 1999, 2001, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2001, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -46,7 +46,7 @@\n  * which would be out of bounds.\n  *\n  * @author Brian Jones\n- * @author Warren Levy <warrenl@cygnus.com>\n+ * @author Warren Levy (warrenl@cygnus.com)\n  * @status updated to 1.4\n  */\n public class IndexOutOfBoundsException extends RuntimeException"}, {"sha": "43810f80e8735d8cc35ac746c09c3086cc90a73c", "filename": "libjava/java/lang/InheritableThreadLocal.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Flang%2FInheritableThreadLocal.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Flang%2FInheritableThreadLocal.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FInheritableThreadLocal.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* InheritableThreadLocal -- a ThreadLocal which inherits values across threads\n-   Copyright (C) 2000, 2001, 2002, 2003 Free Software Foundation, Inc.\n+   Copyright (C) 2000, 2001, 2002, 2003, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -55,8 +55,8 @@\n  * is in transferring items like User ID or Transaction ID across threads\n  * automatically.\n  *\n- * @author Mark Wielaard <mark@klomp.org>\n- * @author Eric Blake <ebb9@email.byu.edu>\n+ * @author Mark Wielaard (mark@klomp.org)\n+ * @author Eric Blake (ebb9@email.byu.edu)\n  * @see ThreadLocal\n  * @since 1.2\n  * @status updated to 1.4"}, {"sha": "3d2750ce8a314c44c3d3181855d3be9ac0cf878e", "filename": "libjava/java/lang/InstantiationError.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Flang%2FInstantiationError.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Flang%2FInstantiationError.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FInstantiationError.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* InstantiationError.java -- thrown when the linker cannot create an instance\n-   Copyright (C) 1998, 1999, 2001, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2001, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -46,7 +46,7 @@\n  * with the previously compiled application.\n  *\n  * @author Brian Jones\n- * @author Tom Tromey <tromey@cygnus.com>\n+ * @author Tom Tromey (tromey@cygnus.com)\n  * @status updated to 1.4\n  */\n public class InstantiationError extends IncompatibleClassChangeError"}, {"sha": "4aa4bd077ca9c3b7f508e1c130336000fe6876fd", "filename": "libjava/java/lang/InstantiationException.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Flang%2FInstantiationException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Flang%2FInstantiationException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FInstantiationException.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,6 +1,6 @@\n /* InstantiationException.java -- thrown when reflection cannot create an\n    instance\n-   Copyright (C) 1998, 1999, 2001, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2001, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -44,7 +44,7 @@\n  * non-instantiable class (an interface or abstract class).\n  *\n  * @author Brian Jones\n- * @author Warren Levy <warrenl@cygnus.com>\n+ * @author Warren Levy (warrenl@cygnus.com)\n  * @see Class#newInstance()\n  * @status updated to 1.4\n  */"}, {"sha": "eddaea2292ad81493262a056da133d9a01ef8b77", "filename": "libjava/java/lang/Integer.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Flang%2FInteger.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Flang%2FInteger.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FInteger.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* Integer.java -- object wrapper for int\n-   Copyright (C) 1998, 1999, 2001, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2001, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -48,7 +48,7 @@\n  * @author Paul Fisher\n  * @author John Keiser\n  * @author Warren Levy\n- * @author Eric Blake <ebb9@email.byu.edu>\n+ * @author Eric Blake (ebb9@email.byu.edu)\n  * @since 1.0\n  * @status updated to 1.4\n  */"}, {"sha": "d612d092fa2ab121caa172c68ea8c530a108277b", "filename": "libjava/java/lang/InternalError.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Flang%2FInternalError.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Flang%2FInternalError.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FInternalError.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* InternalError.java -- thrown when the VM encounters an internal error\n-   Copyright (C) 1998, 1999, 2001, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2001, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -43,7 +43,7 @@\n  * occurred in the Java Virtual Machine.\n  *\n  * @author Brian Jones\n- * @author Tom Tromey <tromey@cygnus.com>\n+ * @author Tom Tromey (tromey@cygnus.com)\n  * @status updated to 1.4\n  */\n public class InternalError extends VirtualMachineError"}, {"sha": "58951abc46d4f8338ec9b85692ce7f980ff8350d", "filename": "libjava/java/lang/InterruptedException.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Flang%2FInterruptedException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Flang%2FInterruptedException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FInterruptedException.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* InterruptedException.java -- thrown when a thread is interrupted\n-   Copyright (C) 1998, 1999, 2001, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2001, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -44,7 +44,7 @@\n  * <code>interrupt</code> method of class <code>Thread</code>.\n  *\n  * @author Brian Jones\n- * @author Warren Levy <warrenl@cygnus.com>\n+ * @author Warren Levy (warrenl@cygnus.com)\n  * @see Object#wait()\n  * @see Object#wait(long)\n  * @see Object#wait(long, int)"}, {"sha": "ead768f37562fd0d1628bec3a234c096c803d373", "filename": "libjava/java/lang/LinkageError.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Flang%2FLinkageError.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Flang%2FLinkageError.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FLinkageError.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,6 +1,6 @@\n /* LinkageError.java -- thrown when classes valid at separate compile times\n    cannot be linked to each other\n-   Copyright (C) 1998, 1999, 2001, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2001, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -45,7 +45,7 @@\n  * linked to one another.\n  *\n  * @author Brian Jones\n- * @author Tom Tromey <tromey@cygnus.com>\n+ * @author Tom Tromey (tromey@cygnus.com)\n  * @status updated to 1.4\n  */\n public class LinkageError extends Error"}, {"sha": "e93786d2571c356c545b420ab0f89f3fb2789020", "filename": "libjava/java/lang/Long.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Flang%2FLong.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Flang%2FLong.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FLong.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* Long.java -- object wrapper for long\n-   Copyright (C) 1998, 1999, 2001, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2001, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -48,7 +48,7 @@\n  * @author Paul Fisher\n  * @author John Keiser\n  * @author Warren Levy\n- * @author Eric Blake <ebb9@email.byu.edu>\n+ * @author Eric Blake (ebb9@email.byu.edu)\n  * @since 1.0\n  * @status updated to 1.4\n  */"}, {"sha": "695ee0e6e4a7a051f1fea749d97898d1d18ca6d4", "filename": "libjava/java/lang/NegativeArraySizeException.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Flang%2FNegativeArraySizeException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Flang%2FNegativeArraySizeException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FNegativeArraySizeException.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,6 +1,6 @@\n /* NegativeArraySizeException.java -- thrown on attempt to create array\n    with a negative size\n-   Copyright (C) 1998, 1999, 2001, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2001, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -48,7 +48,7 @@\n  * </pre>\n  *\n  * @author Brian Jones\n- * @author Warren Levy <warrenl@cygnus.com>\n+ * @author Warren Levy (warrenl@cygnus.com)\n  * @status updated to 1.4\n  */\n public class NegativeArraySizeException extends RuntimeException"}, {"sha": "8fbdb29909ca20372f9b82d885a61f3ccaceedc8", "filename": "libjava/java/lang/NoClassDefFoundError.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Flang%2FNoClassDefFoundError.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Flang%2FNoClassDefFoundError.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FNoClassDefFoundError.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* NoClassDefFoundError.java -- thrown when a ClassLoader cannot find a class\n-   Copyright (C) 1998, 1999, 2001, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2001, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -47,7 +47,7 @@\n  * class was compiled, but now that definition cannot be found.\n  *\n  * @author Brian Jones\n- * @author Tom Tromey <tromey@cygnus.com>\n+ * @author Tom Tromey (tromey@cygnus.com)\n  * @status updated to 1.4\n  */\n public class NoClassDefFoundError extends LinkageError"}, {"sha": "965dfd6603da79574b798e2b160b9647e98efa37", "filename": "libjava/java/lang/NoSuchFieldError.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Flang%2FNoSuchFieldError.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Flang%2FNoSuchFieldError.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FNoSuchFieldError.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* NoSuchFieldError.java -- thrown when the linker does not find a field\n-   Copyright (C) 1998, 1999, 2001, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2001, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -45,7 +45,7 @@\n  * using binary incompatible class versions.\n  *\n  * @author Brian Jones\n- * @author Tom Tromey <tromey@cygnus.com>\n+ * @author Tom Tromey (tromey@cygnus.com)\n  * @status updated to 1.4\n  */\n public class NoSuchFieldError extends IncompatibleClassChangeError"}, {"sha": "30beeefcd25b1071a8df89bc6959cb77df9e17d5", "filename": "libjava/java/lang/NoSuchFieldException.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Flang%2FNoSuchFieldException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Flang%2FNoSuchFieldException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FNoSuchFieldException.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* NoSuchFieldException.java -- thrown when reflecting a non-existant field\n-   Copyright (C) 1998, 1999, 2001, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2001, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -43,7 +43,7 @@\n  * caused by a variety of reflection methods, when looking up a field by name.\n  *\n  * @author Brian Jones\n- * @author Warren Levy <warrenl@cygnus.com>\n+ * @author Warren Levy (warrenl@cygnus.com)\n  * @since 1.1\n  * @status updated to 1.4\n  */"}, {"sha": "494f7a2713eac1c841b7949a78dc99c4132ea84e", "filename": "libjava/java/lang/NoSuchMethodError.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Flang%2FNoSuchMethodError.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Flang%2FNoSuchMethodError.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FNoSuchMethodError.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* NoSuchMethodError.java -- thrown when the linker does not find a method\n-   Copyright (C) 1998, 1999, 2001, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2001, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -45,7 +45,7 @@\n  * using binary incompatible class versions.\n  *\n  * @author Brian Jones\n- * @author Tom Tromey <tromey@cygnus.com>\n+ * @author Tom Tromey (tromey@cygnus.com)\n  * @status updated to 1.4\n  */\n public class NoSuchMethodError extends IncompatibleClassChangeError"}, {"sha": "fa3e06e4f73135a8c461c1f6ef05d5585cb10741", "filename": "libjava/java/lang/NoSuchMethodException.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Flang%2FNoSuchMethodException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Flang%2FNoSuchMethodException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FNoSuchMethodException.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* NoSuchMethodException.java -- thrown when reflecting a non-existant method\n-   Copyright (C) 1998, 1999, 2001, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2001, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -43,7 +43,7 @@\n  * caused by a variety of reflection methods, when looking up a method by name.\n  *\n  * @author Brian Jones\n- * @author Warren Levy <warrenl@cygnus.com>\n+ * @author Warren Levy (warrenl@cygnus.com)\n  * @status updated to 1.4\n  */\n public class NoSuchMethodException extends Exception"}, {"sha": "c55341cfd3c5efc5c60b661992e2c4e64903e693", "filename": "libjava/java/lang/NullPointerException.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Flang%2FNullPointerException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Flang%2FNullPointerException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FNullPointerException.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* NullPointerException.java -- thrown when using null instead of an object\n-   Copyright (C) 1998, 1999, 2001, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2001, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -53,7 +53,7 @@\n  * <code>null</code> is an inappropriate parameter to a method.\n  *\n  * @author Brian Jones\n- * @author Warren Levy <warrenl@cygnus.com>\n+ * @author Warren Levy (warrenl@cygnus.com)\n  * @status updated to 1.4\n  */\n public class NullPointerException extends RuntimeException"}, {"sha": "70d0fe8543c9d833d3f54f4d597b7f2452c7fb1f", "filename": "libjava/java/lang/Number.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Flang%2FNumber.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96dd155e2c78f10846b8cda792450846978b8644/libjava%2Fjava%2Flang%2FNumber.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FNumber.java?ref=96dd155e2c78f10846b8cda792450846978b8644", "patch": "@@ -1,5 +1,5 @@\n /* Number.java =- abstract superclass of numeric objects\n-   Copyright (C) 1998, 2001, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 2001, 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -51,7 +51,7 @@\n  * @author Paul Fisher\n  * @author John Keiser\n  * @author Warren Levy\n- * @author Eric Blake <ebb9@email.byu.edu>\n+ * @author Eric Blake (ebb9@email.byu.edu)\n  * @since 1.0\n  * @status updated to 1.4\n  */"}]}