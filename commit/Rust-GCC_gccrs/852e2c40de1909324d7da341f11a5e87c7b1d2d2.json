{"sha": "852e2c40de1909324d7da341f11a5e87c7b1d2d2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODUyZTJjNDBkZTE5MDkzMjRkN2RhMzQxZjExYTVlODdjN2IxZDJkMg==", "commit": {"author": {"name": "Phil Muldoon", "email": "pmuldoon@redhat.com", "date": "2010-01-15T23:36:58Z"}, "committer": {"name": "Phil Muldoon", "email": "pmuldoon@gcc.gnu.org", "date": "2010-01-15T23:36:58Z"}, "message": "printers.py (StdStringPrinter.__init__): Remove encoding argument.\n\n2010-01-15  Phil Muldoon  <pmuldoon@redhat.com>\n\n\t* python/libstdcxx/v6/printers.py (StdStringPrinter.__init__):\n\tRemove encoding argument.\n\t(StdStringPrinter.to_string): Do not compute or pass encoding.\n\tUse lazy_string over string function.\n\n\n--this line, and those below, will be ignored--\n\nM    libstdc++-v3/python/libstdcxx/v6/printers.py\nM    libstdc++-v3/ChangeLog\n\nFrom-SVN: r155951", "tree": {"sha": "3bf2ebcc8fb001d2b515d49a58d6ff62679f570a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3bf2ebcc8fb001d2b515d49a58d6ff62679f570a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/852e2c40de1909324d7da341f11a5e87c7b1d2d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/852e2c40de1909324d7da341f11a5e87c7b1d2d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/852e2c40de1909324d7da341f11a5e87c7b1d2d2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/852e2c40de1909324d7da341f11a5e87c7b1d2d2/comments", "author": null, "committer": null, "parents": [{"sha": "4a62494df2d37fc03d1778fd69064dc6cd2dc0b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a62494df2d37fc03d1778fd69064dc6cd2dc0b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a62494df2d37fc03d1778fd69064dc6cd2dc0b9"}], "stats": {"total": 26, "additions": 11, "deletions": 15}, "files": [{"sha": "ddd9acd3762538757a273694e1bf57e478c3447e", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/852e2c40de1909324d7da341f11a5e87c7b1d2d2/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/852e2c40de1909324d7da341f11a5e87c7b1d2d2/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=852e2c40de1909324d7da341f11a5e87c7b1d2d2", "patch": "@@ -1,3 +1,10 @@\n+2010-01-15  Phil Muldoon  <pmuldoon@redhat.com>\n+\n+\t* python/libstdcxx/v6/printers.py (StdStringPrinter.__init__):\n+\tRemove encoding argument.\n+\t(StdStringPrinter.to_string): Do not compute or pass encoding.\n+\tUse lazy_string over string function.\n+\n 2010-01-14  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* include/c_std/cstring (memchr): Forward to the builtin."}, {"sha": "baa0824856b7c805feb7d72274670c69243dbf9d", "filename": "libstdc++-v3/python/libstdcxx/v6/printers.py", "status": "modified", "additions": 4, "deletions": 15, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/852e2c40de1909324d7da341f11a5e87c7b1d2d2/libstdc%2B%2B-v3%2Fpython%2Flibstdcxx%2Fv6%2Fprinters.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/852e2c40de1909324d7da341f11a5e87c7b1d2d2/libstdc%2B%2B-v3%2Fpython%2Flibstdcxx%2Fv6%2Fprinters.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fpython%2Flibstdcxx%2Fv6%2Fprinters.py?ref=852e2c40de1909324d7da341f11a5e87c7b1d2d2", "patch": "@@ -1,6 +1,6 @@\n # Pretty-printers for libstc++.\n \n-# Copyright (C) 2008, 2009 Free Software Foundation, Inc.\n+# Copyright (C) 2008, 2009, 2010 Free Software Foundation, Inc.\n \n # This program is free software; you can redistribute it and/or modify\n # it under the terms of the GNU General Public License as published by\n@@ -529,18 +529,10 @@ def to_string(self):\n class StdStringPrinter:\n     \"Print a std::basic_string of some kind\"\n \n-    def __init__(self, encoding, val):\n-        self.encoding = encoding\n+    def __init__(self, val):\n         self.val = val\n \n     def to_string(self):\n-        # Look up the target encoding as late as possible.\n-        encoding = self.encoding\n-        if encoding == 0:\n-            encoding = gdb.parameter('target-charset')\n-        elif encoding == 1:\n-            encoding = gdb.parameter('target-wide-charset')\n-\n         # Make sure &string works, too.\n         type = self.val.type\n         if type.code == gdb.TYPE_CODE_REF:\n@@ -554,7 +546,7 @@ def to_string(self):\n         reptype = gdb.lookup_type (str (realtype) + '::_Rep').pointer ()\n         header = ptr.cast(reptype) - 1\n         len = header.dereference ()['_M_length']\n-        return self.val['_M_dataplus']['_M_p'].string (encoding, length = len)\n+        return self.val['_M_dataplus']['_M_p'].lazy_string (length = len)\n \n     def display_hint (self):\n         return 'string'\n@@ -687,10 +679,7 @@ def build_libstdcxx_dictionary ():\n     # libstdc++ objects requiring pretty-printing.\n     # In order from:\n     # http://gcc.gnu.org/onlinedocs/libstdc++/latest-doxygen/a01847.html\n-    pretty_printers_dict[re.compile('^std::basic_string<char(,.*)?>$')] = lambda val: StdStringPrinter(0, val)\n-    pretty_printers_dict[re.compile('^std::basic_string<wchar_t(,.*)?>$')] = lambda val: StdStringPrinter(1, val)\n-    pretty_printers_dict[re.compile('^std::basic_string<char16_t(,.*)?>$')] = lambda val: StdStringPrinter('UTF-16', val)\n-    pretty_printers_dict[re.compile('^std::basic_string<char32_t(,.*)?>$')] = lambda val: StdStringPrinter('UTF-32', val)\n+    pretty_printers_dict[re.compile('^std::basic_string<.*>$')] = lambda val: StdStringPrinter(val)\n     pretty_printers_dict[re.compile('^std::bitset<.*>$')] = lambda val: StdBitsetPrinter(\"std::bitset\", val)\n     pretty_printers_dict[re.compile('^std::deque<.*>$')] = lambda val: StdDequePrinter(\"std::deque\", val)\n     pretty_printers_dict[re.compile('^std::list<.*>$')] = lambda val: StdListPrinter(\"std::list\", val)"}]}