{"sha": "5d0cf158229acc8e3ebd9a12fa2a670d3c34f513", "node_id": "C_kwDOANBUbNoAKDVkMGNmMTU4MjI5YWNjOGUzZWJkOWExMmZhMmE2NzBkM2MzNGY1MTM", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-06-23T00:16:40Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-06-23T00:16:40Z"}, "message": "Daily bump.", "tree": {"sha": "4beda7036ba85900a41e639ea18e1f65119333e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4beda7036ba85900a41e639ea18e1f65119333e0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5d0cf158229acc8e3ebd9a12fa2a670d3c34f513", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d0cf158229acc8e3ebd9a12fa2a670d3c34f513", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d0cf158229acc8e3ebd9a12fa2a670d3c34f513", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d0cf158229acc8e3ebd9a12fa2a670d3c34f513/comments", "author": null, "committer": null, "parents": [{"sha": "349a39f061407ce2339d2ba25da97005f2030c88", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/349a39f061407ce2339d2ba25da97005f2030c88", "html_url": "https://github.com/Rust-GCC/gccrs/commit/349a39f061407ce2339d2ba25da97005f2030c88"}], "stats": {"total": 146, "additions": 145, "deletions": 1}, "files": [{"sha": "0a8718f157753349c4f285f1be8f9e66f0d78ad8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d0cf158229acc8e3ebd9a12fa2a670d3c34f513/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d0cf158229acc8e3ebd9a12fa2a670d3c34f513/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5d0cf158229acc8e3ebd9a12fa2a670d3c34f513", "patch": "@@ -1,3 +1,53 @@\n+2022-06-22  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/104642\n+\t* common.opt: Add -funreachable-traps.\n+\t* doc/invoke.texi (-funreachable-traps): Document it.\n+\t* opts.cc (finish_options): Enable at -O0 or -Og.\n+\t* tree.cc (build_common_builtin_nodes): Add __builtin_trap.\n+\t(builtin_decl_unreachable, build_builtin_unreachable): New.\n+\t* tree.h: Declare them.\n+\t* ubsan.cc (sanitize_unreachable_fn): Factor out.\n+\t(ubsan_instrument_unreachable): Use\n+\tgimple_build_builtin_unreachable.\n+\t* ubsan.h (sanitize_unreachable_fn): Declare.\n+\t* gimple.cc (gimple_build_builtin_unreachable): New.\n+\t* gimple.h: Declare it.\n+\t* builtins.cc (expand_builtin_unreachable): Add assert.\n+\t(fold_builtin_0): Call build_builtin_unreachable.\n+\t* sanopt.cc: Don't run for just SANITIZE_RETURN\n+\tor SANITIZE_UNREACHABLE when trapping.\n+\t* cgraphunit.cc (walk_polymorphic_call_targets): Use new\n+\tunreachable functions.\n+\t* gimple-fold.cc (gimple_fold_call)\n+\t(gimple_get_virt_method_for_vtable)\n+\t* ipa-fnsummary.cc (redirect_to_unreachable)\n+\t* ipa-prop.cc (ipa_make_edge_direct_to_target)\n+\t(ipa_impossible_devirt_target)\n+\t* ipa.cc (walk_polymorphic_call_targets)\n+\t* tree-cfg.cc (pass_warn_function_return::execute)\n+\t(execute_fixup_cfg)\n+\t* tree-ssa-loop-ivcanon.cc (remove_exits_and_undefined_stmts)\n+\t(unloop_loops)\n+\t* tree-ssa-sccvn.cc (eliminate_dom_walker::eliminate_stmt):\n+\tLikewise.\n+\n+2022-06-22  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\tPR tree-optimization/106019\n+\t* tree-data-ref.cc (dr_may_alias_p): Try using the\n+\tinnermost_loop_behavior to disambiguate non-loop queries.\n+\n+2022-06-22  Palmer Dabbelt  <palmer@rivosinc.com>\n+\n+\t* doc/invoke.texi (RISC-V): Document -mtune=thead-c906.\n+\n+2022-06-22  Takayuki 'January June' Suwa  <jjsuwa_sys3175@yahoo.co.jp>\n+\n+\t* config/xtensa/xtensa.md (bswapsi2_internal):\n+\tEnlarge the buffer that is obviously smaller than the template\n+\tstring given to sprintf().\n+\n 2022-06-21  Roger Sayle  <roger@nextmovesoftware.com>\n \t    Marek Polacek  <polacek@redhat.com>\n \t    Segher Boessenkool  <segher@kernel.crashing.org>"}, {"sha": "559031e4e87c4a12f8fcc0e716a77427408cdb50", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d0cf158229acc8e3ebd9a12fa2a670d3c34f513/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d0cf158229acc8e3ebd9a12fa2a670d3c34f513/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=5d0cf158229acc8e3ebd9a12fa2a670d3c34f513", "patch": "@@ -1 +1 @@\n-20220622\n+20220623"}, {"sha": "4fb9fd58d6a7c1b9fab4dbc0d37725c10d1ab6be", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d0cf158229acc8e3ebd9a12fa2a670d3c34f513/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d0cf158229acc8e3ebd9a12fa2a670d3c34f513/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=5d0cf158229acc8e3ebd9a12fa2a670d3c34f513", "patch": "@@ -1,3 +1,21 @@\n+2022-06-22  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/105908\n+\t* name-lookup.cc (outer_binding): Strip BASELINK.\n+\n+2022-06-22  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* module.cc (struct duplicate_hash): Remove.\n+\t(duplicate_hash_map): Adjust.\n+\n+2022-06-22  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/104642\n+\t* constexpr.cc (cxx_eval_builtin_function_call): Handle\n+\tunreachable/trap earlier.\n+\t* cp-gimplify.cc (cp_maybe_instrument_return): Use\n+\tbuild_builtin_unreachable.\n+\n 2022-06-18  Jakub Jelinek  <jakub@redhat.com>\n \n \t* cp-ubsan.cc (cp_ubsan_instrument_vptr_p): Use"}, {"sha": "618e987b6bffd884a4111ae14c74272e28011b6e", "filename": "gcc/d/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d0cf158229acc8e3ebd9a12fa2a670d3c34f513/gcc%2Fd%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d0cf158229acc8e3ebd9a12fa2a670d3c34f513/gcc%2Fd%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2FChangeLog?ref=5d0cf158229acc8e3ebd9a12fa2a670d3c34f513", "patch": "@@ -1,3 +1,10 @@\n+2022-06-22  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* dmd/MERGE: Merge upstream dmd 6203135dc.\n+\t* typeinfo.cc (TypeInfoVisitor::visit (TypeInfoStructDeclaration *)):\n+\tUpdate for new front-end interface.\n+\t(SpeculativeTypeVisitor::visit (TypeStruct *)): Likewise.\n+\n 2022-06-15  Iain Buclaw  <ibuclaw@gdcproject.org>\n \n \t* d-attribs.cc (d_langhook_attribute_table): Add no_sanitize."}, {"sha": "c99c66e8a1841d4d1fccfcfa91cc0aa3e2497ca0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d0cf158229acc8e3ebd9a12fa2a670d3c34f513/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d0cf158229acc8e3ebd9a12fa2a670d3c34f513/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5d0cf158229acc8e3ebd9a12fa2a670d3c34f513", "patch": "@@ -1,3 +1,42 @@\n+2022-06-22  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/105908\n+\t* g++.dg/cpp0x/trailing16.C: New test.\n+\n+2022-06-22  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/104642\n+\t* g++.dg/ubsan/return-8a.C: New test.\n+\t* g++.dg/ubsan/return-8b.C: New test.\n+\t* g++.dg/ubsan/return-8d.C: New test.\n+\t* g++.dg/ubsan/return-8e.C: New test.\n+\n+2022-06-22  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\tPR tree-optimization/106019\n+\t* gcc.dg/vect/bb-slp-pr106019.c: New test.\n+\n+2022-06-22  Alexandre Oliva  <oliva@adacore.com>\n+\n+\t* gcc.misc-tests/outputs.exp: Clean up left-overs first.\n+\n+2022-06-22  Alexandre Oliva  <oliva@adacore.com>\n+\n+\t* gcc.misc-tests/outputs.exp (outest): Introduce quiet mode,\n+\tcreate and return lists of passes and fails.  Use it to catch\n+\tskip_atsave cases where -L flags are implicitly added by\n+\tdriver self specs.\n+\n+2022-06-22  Alexandre Oliva  <oliva@adacore.com>\n+\n+\t* g++.dg/lto/pr90990_0.C: Require lto_incremental target.\n+\n+2022-06-22  Haochen Jiang  <haochen.jiang@intel.com>\n+\n+\t* gcc.target/i386/amx-check.h (request_perm_xtile_data):\n+\tNew function to check if AMX is usable and enable AMX.\n+\t(main): Run test if AMX is usable.\n+\n 2022-06-21  Roger Sayle  <roger@nextmovesoftware.com>\n \t    Marek Polacek  <polacek@redhat.com>\n \t    Segher Boessenkool  <segher@kernel.crashing.org>"}, {"sha": "20935047ecb32b61d585efa5a83a10f2adfb02a2", "filename": "libphobos/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d0cf158229acc8e3ebd9a12fa2a670d3c34f513/libphobos%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d0cf158229acc8e3ebd9a12fa2a670d3c34f513/libphobos%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2FChangeLog?ref=5d0cf158229acc8e3ebd9a12fa2a670d3c34f513", "patch": "@@ -1,3 +1,10 @@\n+2022-06-22  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* libdruntime/MERGE: Merge upstream druntime e150cca1.\n+\t* src/MERGE: Merge upstream phobos a4a18d21c.\n+\t* testsuite/libphobos.cycles/cycles.exp (cycle_test_list): Update\n+\texpected result of deprecate test.\n+\n 2022-06-15  Iain Buclaw  <ibuclaw@gdcproject.org>\n \n \t* libdruntime/gcc/attributes.d (no_sanitize): Define."}, {"sha": "b1a149754312bef7e5b6aa0ba6ff454e26035988", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d0cf158229acc8e3ebd9a12fa2a670d3c34f513/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d0cf158229acc8e3ebd9a12fa2a670d3c34f513/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=5d0cf158229acc8e3ebd9a12fa2a670d3c34f513", "patch": "@@ -1,3 +1,26 @@\n+2022-06-22  Alexandre Oliva  <oliva@adacore.com>\n+\n+\t* libsupc++/eh_globals.cc [!_GLIBCXX_HAVE_TLS]\n+\t(__eh_globals_init::~__eh_globals_init): Clear _S_init first.\n+\n+2022-06-22  Alexandre Oliva  <oliva@adacore.com>\n+\n+\t* testsuite/30_threads/this_thread/60421.cc (test02): Call\n+\tsched_yield.\n+\n+2022-06-22  Alexandre Oliva  <oliva@adacore.com>\n+\n+\t* testsuite/20_util/to_chars/long_double.cc: Require cmath.\n+\n+2022-06-22  Alexandre Oliva  <oliva@adacore.com>\n+\n+\t* testsuite/23_containers/bitset/cons/dr1325-2.cc: Work around\n+\tglobal struct bitset.\n+\t* testsuite/23_containers/bitset/ext/15361.cc: Likewise.\n+\t* testsuite/23_containers/bitset/input/1.cc: Likewise.\n+\t* testsuite/23_containers/bitset/to_string/1.cc: Likewise.\n+\t* testsuite/23_containers/bitset/to_string/dr396.cc: Likewise.\n+\n 2022-06-17  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* testsuite/21_strings/basic_string/cons/char/105995.cc: Add"}]}