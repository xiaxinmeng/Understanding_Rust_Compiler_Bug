{"sha": "8fbc58a113676ee2546328b3e031f29940667210", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGZiYzU4YTExMzY3NmVlMjU0NjMyOGIzZTAzMWYyOTk0MDY2NzIxMA==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2011-03-21T10:57:51Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2011-03-21T10:57:51Z"}, "message": "configure.ac (gcc_cv_lto_plugin): Fix typo.\n\n\t* configure.ac (gcc_cv_lto_plugin): Fix typo.\n\tAllow -fuse-linker-plugin for non-default plugin linker.\n\t* configure: Regenerate.\n\nFrom-SVN: r171215", "tree": {"sha": "5d4112b947545fb355a9d7e6557e93a8a9e98b23", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5d4112b947545fb355a9d7e6557e93a8a9e98b23"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8fbc58a113676ee2546328b3e031f29940667210", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8fbc58a113676ee2546328b3e031f29940667210", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8fbc58a113676ee2546328b3e031f29940667210", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8fbc58a113676ee2546328b3e031f29940667210/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7e84ad0b41b8deb0f834695bfece17ac1971f389", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e84ad0b41b8deb0f834695bfece17ac1971f389", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e84ad0b41b8deb0f834695bfece17ac1971f389"}], "stats": {"total": 22, "additions": 18, "deletions": 4}, "files": [{"sha": "030c32f08f798cd3fc0c5e278a02bf033aa0b1ac", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fbc58a113676ee2546328b3e031f29940667210/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fbc58a113676ee2546328b3e031f29940667210/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8fbc58a113676ee2546328b3e031f29940667210", "patch": "@@ -1,3 +1,9 @@\n+2011-03-21  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* configure.ac (gcc_cv_lto_plugin): Fix typo.\n+\tAllow -fuse-linker-plugin for non-default plugin linker.\n+\t* configure: Regenerate.\n+\n 2011-03-21  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n \tPR bootstrap/48167"}, {"sha": "23fa91304c2f6a50b2861da15599dcd84f2fe057", "filename": "gcc/configure", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fbc58a113676ee2546328b3e031f29940667210/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fbc58a113676ee2546328b3e031f29940667210/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=8fbc58a113676ee2546328b3e031f29940667210", "patch": "@@ -23134,21 +23134,25 @@ fi\n $as_echo_n \"checking linker plugin support... \" >&6; }\n gcc_cv_lto_plugin=0\n if test -f liblto_plugin.la; then\n-  if test $in_tree_ld = yes -a x\"$ORIGINAL_PLUGIN_LD_FOR_TARGET=\" = x\"$gcc_cv_ld\"; then\n+  if test $in_tree_ld = yes -a x\"$ORIGINAL_PLUGIN_LD_FOR_TARGET\" = x\"$gcc_cv_ld\"; then\n     if test \"$gcc_cv_gld_major_version\" -eq 2 -a \"$gcc_cv_gld_minor_version\" -ge 21 -o \"$gcc_cv_gld_major_version\" -gt 2; then\n       gcc_cv_lto_plugin=2\n     elif test \"$ld_is_gold\" = yes -a \"$gcc_cv_gld_major_version\" -eq 2 -a \"$gcc_cv_gld_minor_version\" -eq 20; then\n       gcc_cv_lto_plugin=1\n \n     fi\n-  elif echo \"$ld_ver\" | grep GNU > /dev/null; then\n+  elif test x\"$ORIGINAL_PLUGIN_LD_FOR_TARGET\" = x\"$gcc_cv_ld\" && echo \"$ld_ver\" | grep GNU > /dev/null; then\n     # Require GNU ld or gold 2.21+ for plugin support by default.\n     if test \"$ld_vers_major\" -eq 2 -a \"$ld_vers_minor\" -ge 21; then\n       gcc_cv_lto_plugin=2\n     # Allow -fuse-linker-plugin to enable plugin support in GNU gold 2.20.\n     elif test \"$ld_is_gold\" = yes -a \"$ld_vers_major\" -eq 2 -a \"$ld_vers_minor\" -eq 20; then\n       gcc_cv_lto_plugin=1\n     fi\n+  elif test x\"$ORIGINAL_PLUGIN_LD_FOR_TARGET\" != x\"$gcc_cv_ld\"; then\n+    # Allow -fuse-linker-plugin if plugin linker differs from\n+    # default/specified linker.\n+    gcc_cv_lto_plugin=1\n   fi\n fi\n "}, {"sha": "adca466fe8f5c63753f23ba74b3e2f9481626c36", "filename": "gcc/configure.ac", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fbc58a113676ee2546328b3e031f29940667210/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fbc58a113676ee2546328b3e031f29940667210/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=8fbc58a113676ee2546328b3e031f29940667210", "patch": "@@ -3192,21 +3192,25 @@ fi\n AC_MSG_CHECKING(linker plugin support)\n gcc_cv_lto_plugin=0\n if test -f liblto_plugin.la; then\n-  if test $in_tree_ld = yes -a x\"$ORIGINAL_PLUGIN_LD_FOR_TARGET=\" = x\"$gcc_cv_ld\"; then\n+  if test $in_tree_ld = yes -a x\"$ORIGINAL_PLUGIN_LD_FOR_TARGET\" = x\"$gcc_cv_ld\"; then\n     if test \"$gcc_cv_gld_major_version\" -eq 2 -a \"$gcc_cv_gld_minor_version\" -ge 21 -o \"$gcc_cv_gld_major_version\" -gt 2; then\n       gcc_cv_lto_plugin=2\n     elif test \"$ld_is_gold\" = yes -a \"$gcc_cv_gld_major_version\" -eq 2 -a \"$gcc_cv_gld_minor_version\" -eq 20; then\n       gcc_cv_lto_plugin=1\n \n     fi\n-  elif echo \"$ld_ver\" | grep GNU > /dev/null; then\n+  elif test x\"$ORIGINAL_PLUGIN_LD_FOR_TARGET\" = x\"$gcc_cv_ld\" && echo \"$ld_ver\" | grep GNU > /dev/null; then\n     # Require GNU ld or gold 2.21+ for plugin support by default.\n     if test \"$ld_vers_major\" -eq 2 -a \"$ld_vers_minor\" -ge 21; then\n       gcc_cv_lto_plugin=2\n     # Allow -fuse-linker-plugin to enable plugin support in GNU gold 2.20.\n     elif test \"$ld_is_gold\" = yes -a \"$ld_vers_major\" -eq 2 -a \"$ld_vers_minor\" -eq 20; then\n       gcc_cv_lto_plugin=1\n     fi\n+  elif test x\"$ORIGINAL_PLUGIN_LD_FOR_TARGET\" != x\"$gcc_cv_ld\"; then\n+    # Allow -fuse-linker-plugin if plugin linker differs from\n+    # default/specified linker.\n+    gcc_cv_lto_plugin=1\n   fi\n fi\n AC_DEFINE_UNQUOTED(HAVE_LTO_PLUGIN, $gcc_cv_lto_plugin,"}]}