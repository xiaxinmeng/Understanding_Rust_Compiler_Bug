{"sha": "a34ce7c5dff5281eb06e82d0b2fb8e3fe6a36ac7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTM0Y2U3YzVkZmY1MjgxZWIwNmU4MmQwYjJmYjhlM2ZlNmEzNmFjNw==", "commit": {"author": {"name": "Bob Duff", "email": "duff@adacore.com", "date": "2021-03-22T11:39:40Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-06-18T08:36:53Z"}, "message": "[Ada] Avoid passing Enum_Lit'Size to the back end\n\ngcc/ada/\n\n\t* sem_attr.adb (Eval_Attribute): For Enum_Lit'Size, use\n\tEnum_Type'Object_Size.", "tree": {"sha": "653f46ea7ee12f7522c89ba2ee4c9f5f2239b01b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/653f46ea7ee12f7522c89ba2ee4c9f5f2239b01b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a34ce7c5dff5281eb06e82d0b2fb8e3fe6a36ac7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a34ce7c5dff5281eb06e82d0b2fb8e3fe6a36ac7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a34ce7c5dff5281eb06e82d0b2fb8e3fe6a36ac7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a34ce7c5dff5281eb06e82d0b2fb8e3fe6a36ac7/comments", "author": {"login": "bobduff", "id": 29099567, "node_id": "MDQ6VXNlcjI5MDk5NTY3", "avatar_url": "https://avatars.githubusercontent.com/u/29099567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobduff", "html_url": "https://github.com/bobduff", "followers_url": "https://api.github.com/users/bobduff/followers", "following_url": "https://api.github.com/users/bobduff/following{/other_user}", "gists_url": "https://api.github.com/users/bobduff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobduff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobduff/subscriptions", "organizations_url": "https://api.github.com/users/bobduff/orgs", "repos_url": "https://api.github.com/users/bobduff/repos", "events_url": "https://api.github.com/users/bobduff/events{/privacy}", "received_events_url": "https://api.github.com/users/bobduff/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "548280b996ea7e6283193d6c8a3c03d44ef36681", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/548280b996ea7e6283193d6c8a3c03d44ef36681", "html_url": "https://github.com/Rust-GCC/gccrs/commit/548280b996ea7e6283193d6c8a3c03d44ef36681"}], "stats": {"total": 21, "additions": 17, "deletions": 4}, "files": [{"sha": "46c3d65efa3c27b669f5439cc6ca73bb4bca26d5", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 17, "deletions": 4, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a34ce7c5dff5281eb06e82d0b2fb8e3fe6a36ac7/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a34ce7c5dff5281eb06e82d0b2fb8e3fe6a36ac7/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=a34ce7c5dff5281eb06e82d0b2fb8e3fe6a36ac7", "patch": "@@ -7983,14 +7983,27 @@ package body Sem_Attr is\n                end if;\n             end;\n \n-         --  For Size, give size of object if available, otherwise we\n-         --  cannot fold Size.\n-\n          elsif Id = Attribute_Size then\n+            --  For Enum_Lit'Size, use Enum_Type'Object_Size. Taking the 'Size\n+            --  of a literal is kind of a strange thing to do, so we don't want\n+            --  to pass this oddity on to the back end. Note that Etype of an\n+            --  enumeration literal is always a (base) type, never a\n+            --  constrained subtype, so the Esize is always known.\n+\n             if Is_Entity_Name (P)\n-              and then Known_Static_Esize (Entity (P))\n+              and then Ekind (Entity (P)) = E_Enumeration_Literal\n+            then\n+               pragma Assert (Known_Static_Esize (Etype (P)));\n+               Compile_Time_Known_Attribute (N, Esize (Etype (P)));\n+\n+            --  Otherwise, if Size is available, use that\n+\n+            elsif Is_Entity_Name (P) and then Known_Static_Esize (Entity (P))\n             then\n                Compile_Time_Known_Attribute (N, Esize (Entity (P)));\n+\n+            --  Otherwise, we cannot fold\n+\n             else\n                Check_Expressions;\n             end if;"}]}