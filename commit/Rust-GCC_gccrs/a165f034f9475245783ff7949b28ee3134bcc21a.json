{"sha": "a165f034f9475245783ff7949b28ee3134bcc21a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTE2NWYwMzRmOTQ3NTI0NTc4M2ZmNzk0OWIyOGVlMzEzNGJjYzIxYQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2000-11-22T19:22:58Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2000-11-22T19:22:58Z"}, "message": "haifa-sched.c (sched_analyze_1): Don't special-case calls for clobbering registers.\n\n        * haifa-sched.c (sched_analyze_1): Don't special-case calls\n        for clobbering registers.\n        (sched_analyze_2): Likewise.\n        (sched_analyze): Zap reg_last_uses and reg_last_sets after calls.\n\nFrom-SVN: r37668", "tree": {"sha": "2e8de6d245b0c67e4c2cf64e912c841cc8338a4b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2e8de6d245b0c67e4c2cf64e912c841cc8338a4b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a165f034f9475245783ff7949b28ee3134bcc21a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a165f034f9475245783ff7949b28ee3134bcc21a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a165f034f9475245783ff7949b28ee3134bcc21a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a165f034f9475245783ff7949b28ee3134bcc21a/comments", "author": null, "committer": null, "parents": [{"sha": "10ebf5fe407fda5d092f23e50b26272d13bb1106", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10ebf5fe407fda5d092f23e50b26272d13bb1106", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10ebf5fe407fda5d092f23e50b26272d13bb1106"}], "stats": {"total": 33, "additions": 16, "deletions": 17}, "files": [{"sha": "c8bde8c640caef1b7302bca6fcba667fe5d3db42", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 6, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a165f034f9475245783ff7949b28ee3134bcc21a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a165f034f9475245783ff7949b28ee3134bcc21a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a165f034f9475245783ff7949b28ee3134bcc21a", "patch": "@@ -1,10 +1,17 @@\n+2000-11-22  Richard Henderson  <rth@redhat.com>\n+\n+\t* haifa-sched.c (sched_analyze_1): Don't special-case calls\n+\tfor clobbering registers.\n+\t(sched_analyze_2): Likewise.\n+\t(sched_analyze): Zap reg_last_uses and reg_last_sets after calls.\n+\n 2000-11-22  Chris Demetriou  <cgd@sibyte.com>  \n-2000-11-22  Neil Booth  <neilb@earthling.net>\n+\t    Neil Booth  <neilb@earthling.net>\n \n-        * gcc.c (validate_switches): Validate multiple switches named\n-        in '|' (or) expressions in specs.  \n-        (handle_braces): If more than 1 alternative in a '|' spec\n-        matches, call do_spec1 just once.\n+\t* gcc.c (validate_switches): Validate multiple switches named\n+\tin '|' (or) expressions in specs.  \n+\t(handle_braces): If more than 1 alternative in a '|' spec\n+\tmatches, call do_spec1 just once.\n \n 2000-11-22  Michael Meissner  <meissner@redhat.com>\n \n@@ -107,7 +114,7 @@ Wed Nov 22 00:52:55 2000  J\"orn Rennecke <amylaar@redhat.com>\n \n 2000-11-21  Neil Booth  <neilb@earthling.net>\n \n-        * do_includes: Revert to using cpp_read_file.\n+\t* do_includes: Revert to using cpp_read_file.\n \n 2000-11-21  Bernd Schmidt  <bernds@redhat.co.uk>\n "}, {"sha": "cf8fe2b15b7ff08736bee9deb5104b220163bbdf", "filename": "gcc/haifa-sched.c", "status": "modified", "additions": 3, "deletions": 11, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a165f034f9475245783ff7949b28ee3134bcc21a/gcc%2Fhaifa-sched.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a165f034f9475245783ff7949b28ee3134bcc21a/gcc%2Fhaifa-sched.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhaifa-sched.c?ref=a165f034f9475245783ff7949b28ee3134bcc21a", "patch": "@@ -3384,11 +3384,6 @@ sched_analyze_1 (deps, x, insn)\n \t\t}\n \t      else\n \t\tSET_REGNO_REG_SET (reg_pending_clobbers, r);\n-\n-\t      /* Function calls clobber all call_used regs.  */\n-\t      if (global_regs[r] || (code == SET && call_used_regs[r]))\n-\t\tfor (u = deps->last_function_call; u; u = XEXP (u, 1))\n-\t\t  add_dependence (insn, XEXP (u, 0), REG_DEP_ANTI);\n \t    }\n \t}\n       else\n@@ -3540,11 +3535,6 @@ sched_analyze_2 (deps, x, insn)\n \t\t/* ??? This should never happen.  */\n \t\tfor (u = deps->reg_last_clobbers[r]; u; u = XEXP (u, 1))\n \t\t  add_dependence (insn, XEXP (u, 0), 0);\n-\n-\t\tif (call_used_regs[r] || global_regs[r])\n-\t\t  /* Function calls clobber all call_used regs.  */\n-\t\t  for (u = deps->last_function_call; u; u = XEXP (u, 1))\n-\t\t    add_dependence (insn, XEXP (u, 0), REG_DEP_ANTI);\n \t      }\n \t  }\n \telse\n@@ -3987,9 +3977,11 @@ sched_analyze (deps, head, tail)\n \t\t  {\n \t\t    for (u = deps->reg_last_uses[i]; u; u = XEXP (u, 1))\n \t\t      add_dependence (insn, XEXP (u, 0), REG_DEP_ANTI);\n+ \t\t    free_INSN_LIST_list (&deps->reg_last_uses[i]);\n \n \t\t    for (u = deps->reg_last_sets[i]; u; u = XEXP (u, 1))\n-\t\t      add_dependence (insn, XEXP (u, 0), REG_DEP_ANTI);\n+\t\t      add_dependence (insn, XEXP (u, 0), REG_DEP_OUTPUT);\n+ \t\t    free_INSN_LIST_list (&deps->reg_last_sets[i]);\n \n \t\t    SET_REGNO_REG_SET (reg_pending_clobbers, i);\n \t\t  }"}]}