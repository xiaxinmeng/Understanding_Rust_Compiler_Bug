{"sha": "518a3a2106e4e8172a1c7628b79b63635857fec3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTE4YTNhMjEwNmU0ZTgxNzJhMWM3NjI4Yjc5YjYzNjM1ODU3ZmVjMw==", "commit": {"author": {"name": "Tom de Vries", "email": "tdevries@suse.de", "date": "2018-11-30T08:43:50Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2018-11-30T08:43:50Z"}, "message": "[libbacktrace] Factor out backtrace_vector_free\n\nFactor out new function backtrace_vector_free.\n\nBootstrapped and reg-tested on x86_64.\n\n2018-11-30  Tom de Vries  <tdevries@suse.de>\n\n\t* internal.h (backtrace_vector_free): New static inline fuction,\n\tfactored out of ...\n\t* dwarf.c (read_line_info): ... here.\n\nFrom-SVN: r266658", "tree": {"sha": "5127e6a5ff6c59421ad748b7e4dfb68d21a122d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5127e6a5ff6c59421ad748b7e4dfb68d21a122d8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/518a3a2106e4e8172a1c7628b79b63635857fec3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/518a3a2106e4e8172a1c7628b79b63635857fec3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/518a3a2106e4e8172a1c7628b79b63635857fec3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/518a3a2106e4e8172a1c7628b79b63635857fec3/comments", "author": {"login": "vries", "id": 4057235, "node_id": "MDQ6VXNlcjQwNTcyMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vries", "html_url": "https://github.com/vries", "followers_url": "https://api.github.com/users/vries/followers", "following_url": "https://api.github.com/users/vries/following{/other_user}", "gists_url": "https://api.github.com/users/vries/gists{/gist_id}", "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vries/subscriptions", "organizations_url": "https://api.github.com/users/vries/orgs", "repos_url": "https://api.github.com/users/vries/repos", "events_url": "https://api.github.com/users/vries/events{/privacy}", "received_events_url": "https://api.github.com/users/vries/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "507bdfc5f6862052de0ff6d5043a24df380d4d45", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/507bdfc5f6862052de0ff6d5043a24df380d4d45", "html_url": "https://github.com/Rust-GCC/gccrs/commit/507bdfc5f6862052de0ff6d5043a24df380d4d45"}], "stats": {"total": 22, "additions": 19, "deletions": 3}, "files": [{"sha": "9ea10f7e0d687b1d1e4de5cabb7e410bef41dba9", "filename": "libbacktrace/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/518a3a2106e4e8172a1c7628b79b63635857fec3/libbacktrace%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/518a3a2106e4e8172a1c7628b79b63635857fec3/libbacktrace%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2FChangeLog?ref=518a3a2106e4e8172a1c7628b79b63635857fec3", "patch": "@@ -1,3 +1,9 @@\n+2018-11-30  Tom de Vries  <tdevries@suse.de>\n+\n+\t* internal.h (backtrace_vector_free): New static inline fuction,\n+\tfactored out of ...\n+\t* dwarf.c (read_line_info): ... here.\n+\n 2018-11-28  Tom de Vries  <tdevries@suse.de>\n \n \t* dwarf.c (read_abbrevs): Fix handling of abbrevs->abbrevs allocation"}, {"sha": "48ef3638a5f53f3aaeffe349654daf21e05e4405", "filename": "libbacktrace/dwarf.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/518a3a2106e4e8172a1c7628b79b63635857fec3/libbacktrace%2Fdwarf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/518a3a2106e4e8172a1c7628b79b63635857fec3/libbacktrace%2Fdwarf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2Fdwarf.c?ref=518a3a2106e4e8172a1c7628b79b63635857fec3", "patch": "@@ -2057,9 +2057,7 @@ read_line_info (struct backtrace_state *state, struct dwarf_data *ddata,\n   return 1;\n \n  fail:\n-  vec.vec.alc += vec.vec.size;\n-  vec.vec.size = 0;\n-  backtrace_vector_release (state, &vec.vec, error_callback, data);\n+  backtrace_vector_free (state, &vec.vec, error_callback, data);\n   free_line_header (state, hdr, error_callback, data);\n   *lines = (struct line *) (uintptr_t) -1;\n   *lines_count = 0;"}, {"sha": "548f9d7090528269d309947a7de57d445c06c4c5", "filename": "libbacktrace/internal.h", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/518a3a2106e4e8172a1c7628b79b63635857fec3/libbacktrace%2Finternal.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/518a3a2106e4e8172a1c7628b79b63635857fec3/libbacktrace%2Finternal.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2Finternal.h?ref=518a3a2106e4e8172a1c7628b79b63635857fec3", "patch": "@@ -257,6 +257,18 @@ extern int backtrace_vector_release (struct backtrace_state *state,\n \t\t\t\t     backtrace_error_callback error_callback,\n \t\t\t\t     void *data);\n \n+/* Free the space managed by VEC.  This will reset VEC.  */\n+\n+static inline void\n+backtrace_vector_free (struct backtrace_state *state,\n+\t\t       struct backtrace_vector *vec,\n+\t\t       backtrace_error_callback error_callback, void *data)\n+{\n+  vec->alc += vec->size;\n+  vec->size = 0;\n+  backtrace_vector_release (state, vec, error_callback, data);\n+}\n+\n /* Read initial debug data from a descriptor, and set the\n    fileline_data, syminfo_fn, and syminfo_data fields of STATE.\n    Return the fileln_fn field in *FILELN_FN--this is done this way so"}]}