{"sha": "f3245887551932de6aba1aa3e9f911b78a57b5ef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjMyNDU4ODc1NTE5MzJkZTZhYmExYWEzZTlmOTExYjc4YTU3YjVlZg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2018-10-19T21:50:15Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2018-10-19T21:50:15Z"}, "message": "Skip tests for GNU extensions when testing with strict mode\n\nTests for the implicit allocator rebinding extension will fail if the\nextension is disabled, so skip them.\n\n\t* testsuite/23_containers/array/requirements/explicit_instantiation/\n\t3.cc: Skip test when compiled with a -std=c++NN strict mode.\n\t* testsuite/23_containers/deque/requirements/explicit_instantiation/\n\t3.cc: Likewise.\n\t* testsuite/23_containers/forward_list/requirements/\n\texplicit_instantiation/3.cc: Likewise.\n\t* testsuite/23_containers/list/requirements/explicit_instantiation/\n\t3.cc: Likewise.\n\t* testsuite/23_containers/map/requirements/explicit_instantiation/\n\t3.cc: Likewise.\n\t* testsuite/23_containers/multimap/requirements/explicit_instantiation/\n\t3.cc: Likewise.\n\t* testsuite/23_containers/multiset/requirements/explicit_instantiation/\n\t3.cc: Likewise.\n\t* testsuite/23_containers/set/requirements/explicit_instantiation/\n\t3.cc: Likewise.\n\t* testsuite/23_containers/unordered_map/requirements/\n\texplicit_instantiation/3.cc: Likewise.\n\t* testsuite/23_containers/unordered_multimap/requirements/\n\texplicit_instantiation/3.cc: Likewise.\n\t* testsuite/23_containers/unordered_multiset/requirements/\n\texplicit_instantiation/3.cc: Likewise.\n\t* testsuite/23_containers/unordered_set/requirements/\n\texplicit_instantiation/3.cc: Likewise.\n\t* testsuite/23_containers/vector/ext_pointer/explicit_instantiation/\n\t3.cc: Likewise.\n\t* testsuite/23_containers/vector/requirements/explicit_instantiation/\n\t3.cc: Likewise.\n\nFrom-SVN: r265334", "tree": {"sha": "714686f623c2028aadf31de8c17d56c966581d4c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/714686f623c2028aadf31de8c17d56c966581d4c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f3245887551932de6aba1aa3e9f911b78a57b5ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3245887551932de6aba1aa3e9f911b78a57b5ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f3245887551932de6aba1aa3e9f911b78a57b5ef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3245887551932de6aba1aa3e9f911b78a57b5ef/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "92bab15297a57121317df803c9c688955af30722", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92bab15297a57121317df803c9c688955af30722", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92bab15297a57121317df803c9c688955af30722"}], "stats": {"total": 74, "additions": 66, "deletions": 8}, "files": [{"sha": "0399ec68209686e716ef3937b2b9e7e5cdaf3f9d", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3245887551932de6aba1aa3e9f911b78a57b5ef/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3245887551932de6aba1aa3e9f911b78a57b5ef/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=f3245887551932de6aba1aa3e9f911b78a57b5ef", "patch": "@@ -1,5 +1,34 @@\n 2018-10-19  Jonathan Wakely  <jwakely@redhat.com>\n \n+\t* testsuite/23_containers/array/requirements/explicit_instantiation/\n+\t3.cc: Skip test when compiled with a -std=c++NN strict mode.\n+\t* testsuite/23_containers/deque/requirements/explicit_instantiation/\n+\t3.cc: Likewise.\n+\t* testsuite/23_containers/forward_list/requirements/\n+\texplicit_instantiation/3.cc: Likewise.\n+\t* testsuite/23_containers/list/requirements/explicit_instantiation/\n+\t3.cc: Likewise.\n+\t* testsuite/23_containers/map/requirements/explicit_instantiation/\n+\t3.cc: Likewise.\n+\t* testsuite/23_containers/multimap/requirements/explicit_instantiation/\n+\t3.cc: Likewise.\n+\t* testsuite/23_containers/multiset/requirements/explicit_instantiation/\n+\t3.cc: Likewise.\n+\t* testsuite/23_containers/set/requirements/explicit_instantiation/\n+\t3.cc: Likewise.\n+\t* testsuite/23_containers/unordered_map/requirements/\n+\texplicit_instantiation/3.cc: Likewise.\n+\t* testsuite/23_containers/unordered_multimap/requirements/\n+\texplicit_instantiation/3.cc: Likewise.\n+\t* testsuite/23_containers/unordered_multiset/requirements/\n+\texplicit_instantiation/3.cc: Likewise.\n+\t* testsuite/23_containers/unordered_set/requirements/\n+\texplicit_instantiation/3.cc: Likewise.\n+\t* testsuite/23_containers/vector/ext_pointer/explicit_instantiation/\n+\t3.cc: Likewise.\n+\t* testsuite/23_containers/vector/requirements/explicit_instantiation/\n+\t3.cc: Likewise.\n+\n \t* testsuite/23_containers/deque/48101_neg.cc: Prune additional errors\n \tprinted when __STRICT_ANSI__ is defined.\n \t* testsuite/23_containers/forward_list/48101_neg.cc: Likewise."}, {"sha": "000281c6c566d9f6da4a8eadc856ff8f0c975961", "filename": "libstdc++-v3/testsuite/23_containers/array/requirements/explicit_instantiation/3.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3245887551932de6aba1aa3e9f911b78a57b5ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Frequirements%2Fexplicit_instantiation%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3245887551932de6aba1aa3e9f911b78a57b5ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Frequirements%2Fexplicit_instantiation%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Frequirements%2Fexplicit_instantiation%2F3.cc?ref=f3245887551932de6aba1aa3e9f911b78a57b5ef", "patch": "@@ -1,4 +1,5 @@\n // { dg-do compile { target c++11 } }\n+// { dg-skip-if \"no extensions in strict dialects\" { *-*-* } { \"-std=c++*\" } }\n \n // 2010-05-20  Paolo Carlini  <paolo.carlini@oracle.com>\n //\n@@ -20,6 +21,7 @@\n // <http://www.gnu.org/licenses/>.\n \n // This file tests explicit instantiation of library containers\n+// with an allocator for a different value_type (which is a GNU extension).\n \n #include <array>\n #include <testsuite_hooks.h>"}, {"sha": "22aa6cf836fb625c09b9c95267a3c7277cfb77a6", "filename": "libstdc++-v3/testsuite/23_containers/deque/requirements/explicit_instantiation/3.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3245887551932de6aba1aa3e9f911b78a57b5ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fexplicit_instantiation%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3245887551932de6aba1aa3e9f911b78a57b5ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fexplicit_instantiation%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fexplicit_instantiation%2F3.cc?ref=f3245887551932de6aba1aa3e9f911b78a57b5ef", "patch": "@@ -15,12 +15,13 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-\n // This file tests explicit instantiation of library containers\n+// with an allocator for a different value_type (which is a GNU extension).\n \n #include <deque>\n \n // { dg-do compile }\n+// { dg-skip-if \"no extensions in strict dialects\" { *-*-* } { \"-std=c++*\" } }\n \n // libstdc++/21770\n template class std::deque<int, std::allocator<char> >;"}, {"sha": "808b5912c3bc9cbbd5ef430958daed89a3520c4f", "filename": "libstdc++-v3/testsuite/23_containers/forward_list/requirements/explicit_instantiation/3.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3245887551932de6aba1aa3e9f911b78a57b5ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Frequirements%2Fexplicit_instantiation%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3245887551932de6aba1aa3e9f911b78a57b5ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Frequirements%2Fexplicit_instantiation%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Frequirements%2Fexplicit_instantiation%2F3.cc?ref=f3245887551932de6aba1aa3e9f911b78a57b5ef", "patch": "@@ -16,12 +16,13 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-\n // This file tests explicit instantiation of library containers\n+// with an allocator for a different value_type (which is a GNU extension).\n \n #include <forward_list>\n \n // { dg-do compile { target c++11 } }\n+// { dg-skip-if \"no extensions in strict dialects\" { *-*-* } { \"-std=c++*\" } }\n \n // libstdc++/21770\n template class std::forward_list<int, std::allocator<char> >;"}, {"sha": "33a3315b84cd8a265a1f48197646d800e92c38aa", "filename": "libstdc++-v3/testsuite/23_containers/list/requirements/explicit_instantiation/3.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3245887551932de6aba1aa3e9f911b78a57b5ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fexplicit_instantiation%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3245887551932de6aba1aa3e9f911b78a57b5ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fexplicit_instantiation%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fexplicit_instantiation%2F3.cc?ref=f3245887551932de6aba1aa3e9f911b78a57b5ef", "patch": "@@ -15,12 +15,13 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-\n // This file tests explicit instantiation of library containers\n+// with an allocator for a different value_type (which is a GNU extension).\n \n #include <list>\n \n // { dg-do compile }\n+// { dg-skip-if \"no extensions in strict dialects\" { *-*-* } { \"-std=c++*\" } }\n \n // libstdc++/21770\n template class std::list<int, std::allocator<char> >;"}, {"sha": "def50c608e77d33678ac7eee290237ec25ca2540", "filename": "libstdc++-v3/testsuite/23_containers/map/requirements/explicit_instantiation/3.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3245887551932de6aba1aa3e9f911b78a57b5ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Frequirements%2Fexplicit_instantiation%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3245887551932de6aba1aa3e9f911b78a57b5ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Frequirements%2Fexplicit_instantiation%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Frequirements%2Fexplicit_instantiation%2F3.cc?ref=f3245887551932de6aba1aa3e9f911b78a57b5ef", "patch": "@@ -15,12 +15,13 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-\n // This file tests explicit instantiation of library containers\n+// with an allocator for a different value_type (which is a GNU extension).\n \n #include <map>\n \n // { dg-do compile }\n+// { dg-skip-if \"no extensions in strict dialects\" { *-*-* } { \"-std=c++*\" } }\n \n // libstdc++/21770\n template class std::map<int, double, std::less<int>, std::allocator<char> >;"}, {"sha": "af33f7c67f629c9aa675d36cadd354b007fc30dc", "filename": "libstdc++-v3/testsuite/23_containers/multimap/requirements/explicit_instantiation/3.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3245887551932de6aba1aa3e9f911b78a57b5ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Frequirements%2Fexplicit_instantiation%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3245887551932de6aba1aa3e9f911b78a57b5ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Frequirements%2Fexplicit_instantiation%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Frequirements%2Fexplicit_instantiation%2F3.cc?ref=f3245887551932de6aba1aa3e9f911b78a57b5ef", "patch": "@@ -15,12 +15,13 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-\n // This file tests explicit instantiation of library containers\n+// with an allocator for a different value_type (which is a GNU extension).\n \n #include <map>\n \n // { dg-do compile }\n+// { dg-skip-if \"no extensions in strict dialects\" { *-*-* } { \"-std=c++*\" } }\n \n // libstdc++/21770\n template class std::multimap<int, double, std::less<int>, std::allocator<char> >;"}, {"sha": "18b20b61e8f0ed8be5992371a40c5f2c95714242", "filename": "libstdc++-v3/testsuite/23_containers/multiset/requirements/explicit_instantiation/3.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3245887551932de6aba1aa3e9f911b78a57b5ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Frequirements%2Fexplicit_instantiation%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3245887551932de6aba1aa3e9f911b78a57b5ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Frequirements%2Fexplicit_instantiation%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Frequirements%2Fexplicit_instantiation%2F3.cc?ref=f3245887551932de6aba1aa3e9f911b78a57b5ef", "patch": "@@ -15,12 +15,13 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-\n // This file tests explicit instantiation of library containers\n+// with an allocator for a different value_type (which is a GNU extension).\n \n #include <set>\n \n // { dg-do compile }\n+// { dg-skip-if \"no extensions in strict dialects\" { *-*-* } { \"-std=c++*\" } }\n \n // libstdc++/21770\n template class std::multiset<int, std::less<int>, std::allocator<char> >;"}, {"sha": "a51bf47da9e3465cbadf383caf98c23246541bb8", "filename": "libstdc++-v3/testsuite/23_containers/set/requirements/explicit_instantiation/3.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3245887551932de6aba1aa3e9f911b78a57b5ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Frequirements%2Fexplicit_instantiation%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3245887551932de6aba1aa3e9f911b78a57b5ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Frequirements%2Fexplicit_instantiation%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Frequirements%2Fexplicit_instantiation%2F3.cc?ref=f3245887551932de6aba1aa3e9f911b78a57b5ef", "patch": "@@ -15,12 +15,13 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-\n // This file tests explicit instantiation of library containers\n+// with an allocator for a different value_type (which is a GNU extension).\n \n #include <set>\n \n // { dg-do compile }\n+// { dg-skip-if \"no extensions in strict dialects\" { *-*-* } { \"-std=c++*\" } }\n \n // libstdc++/21770\n template class std::set<int, std::less<int>, std::allocator<char> >;"}, {"sha": "09e2267b666dfa1e6e6eadff24ec078d84bf5be7", "filename": "libstdc++-v3/testsuite/23_containers/unordered_map/requirements/explicit_instantiation/3.cc", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3245887551932de6aba1aa3e9f911b78a57b5ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Frequirements%2Fexplicit_instantiation%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3245887551932de6aba1aa3e9f911b78a57b5ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Frequirements%2Fexplicit_instantiation%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Frequirements%2Fexplicit_instantiation%2F3.cc?ref=f3245887551932de6aba1aa3e9f911b78a57b5ef", "patch": "@@ -1,4 +1,5 @@\n // { dg-do compile { target c++11 } }\n+// { dg-skip-if \"no extensions in strict dialects\" { *-*-* } { \"-std=c++*\" } }\n \n // Copyright (C) 2007-2018 Free Software Foundation, Inc.\n //\n@@ -17,6 +18,9 @@\n // along with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n+// This file tests explicit instantiation of library containers\n+// with an allocator for a different value_type (which is a GNU extension).\n+\n #include <unordered_map>\n \n using namespace std;"}, {"sha": "64c13e5d34dfd9d86ba49c502e92a79a348e48da", "filename": "libstdc++-v3/testsuite/23_containers/unordered_multimap/requirements/explicit_instantiation/3.cc", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3245887551932de6aba1aa3e9f911b78a57b5ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Frequirements%2Fexplicit_instantiation%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3245887551932de6aba1aa3e9f911b78a57b5ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Frequirements%2Fexplicit_instantiation%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Frequirements%2Fexplicit_instantiation%2F3.cc?ref=f3245887551932de6aba1aa3e9f911b78a57b5ef", "patch": "@@ -1,4 +1,5 @@\n // { dg-do compile { target c++11 } }\n+// { dg-skip-if \"no extensions in strict dialects\" { *-*-* } { \"-std=c++*\" } }\n \n // Copyright (C) 2007-2018 Free Software Foundation, Inc.\n //\n@@ -17,6 +18,9 @@\n // along with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n+// This file tests explicit instantiation of library containers\n+// with an allocator for a different value_type (which is a GNU extension).\n+\n #include <unordered_map>\n \n using namespace std;"}, {"sha": "711895484903c1ec7e07f09d1dac2eed05d7061e", "filename": "libstdc++-v3/testsuite/23_containers/unordered_multiset/requirements/explicit_instantiation/3.cc", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3245887551932de6aba1aa3e9f911b78a57b5ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Frequirements%2Fexplicit_instantiation%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3245887551932de6aba1aa3e9f911b78a57b5ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Frequirements%2Fexplicit_instantiation%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Frequirements%2Fexplicit_instantiation%2F3.cc?ref=f3245887551932de6aba1aa3e9f911b78a57b5ef", "patch": "@@ -1,4 +1,5 @@\n // { dg-do compile { target c++11 } }\n+// { dg-skip-if \"no extensions in strict dialects\" { *-*-* } { \"-std=c++*\" } }\n \n // Copyright (C) 2007-2018 Free Software Foundation, Inc.\n //\n@@ -17,6 +18,9 @@\n // along with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n+// This file tests explicit instantiation of library containers\n+// with an allocator for a different value_type (which is a GNU extension).\n+\n #include <unordered_set>\n \n using namespace std;"}, {"sha": "892f5528bd339c791e91ca22a3cf09ee08cbaa2b", "filename": "libstdc++-v3/testsuite/23_containers/unordered_set/requirements/explicit_instantiation/3.cc", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3245887551932de6aba1aa3e9f911b78a57b5ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Frequirements%2Fexplicit_instantiation%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3245887551932de6aba1aa3e9f911b78a57b5ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Frequirements%2Fexplicit_instantiation%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Frequirements%2Fexplicit_instantiation%2F3.cc?ref=f3245887551932de6aba1aa3e9f911b78a57b5ef", "patch": "@@ -1,4 +1,5 @@\n // { dg-do compile { target c++11 } }\n+// { dg-skip-if \"no extensions in strict dialects\" { *-*-* } { \"-std=c++*\" } }\n \n // Copyright (C) 2007-2018 Free Software Foundation, Inc.\n //\n@@ -17,6 +18,9 @@\n // along with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n+// This file tests explicit instantiation of library containers\n+// with an allocator for a different value_type (which is a GNU extension).\n+\n #include <unordered_set>\n \n using namespace std;"}, {"sha": "b067404b9631d90635cb7fa49ba61958d3bc8259", "filename": "libstdc++-v3/testsuite/23_containers/vector/ext_pointer/explicit_instantiation/3.cc", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3245887551932de6aba1aa3e9f911b78a57b5ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fext_pointer%2Fexplicit_instantiation%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3245887551932de6aba1aa3e9f911b78a57b5ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fext_pointer%2Fexplicit_instantiation%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fext_pointer%2Fexplicit_instantiation%2F3.cc?ref=f3245887551932de6aba1aa3e9f911b78a57b5ef", "patch": "@@ -17,11 +17,14 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n+// This file tests explicit instantiation of library containers\n+// with an allocator for a different value_type (which is a GNU extension).\n \n #include <vector>\n #include <ext/extptr_allocator.h>\n \n // { dg-do compile }\n+// { dg-skip-if \"no extensions in strict dialects\" { *-*-* } { \"-std=c++*\" } }\n \n // libstdc++/21770\n template class std::vector<int, __gnu_cxx::_ExtPtr_allocator<char> >;"}, {"sha": "3d41864e63c434f8d3528a6ffb2926cb3a2e9989", "filename": "libstdc++-v3/testsuite/23_containers/vector/requirements/explicit_instantiation/3.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3245887551932de6aba1aa3e9f911b78a57b5ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fexplicit_instantiation%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3245887551932de6aba1aa3e9f911b78a57b5ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fexplicit_instantiation%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fexplicit_instantiation%2F3.cc?ref=f3245887551932de6aba1aa3e9f911b78a57b5ef", "patch": "@@ -15,12 +15,13 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-\n // This file tests explicit instantiation of library containers\n+// with an allocator for a different value_type (which is a GNU extension).\n \n #include <vector>\n \n // { dg-do compile }\n+// { dg-skip-if \"no extensions in strict dialects\" { *-*-* } { \"-std=c++*\" } }\n \n // libstdc++/21770\n template class std::vector<int, std::allocator<char> >;"}]}