{"sha": "effed6551681c1411cfaebeb005979cb6996e528", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWZmZWQ2NTUxNjgxYzE0MTFjZmFlYmViMDA1OTc5Y2I2OTk2ZTUyOA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2003-12-19T13:39:05Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2003-12-19T13:39:05Z"}, "message": "re PR c++/13239 (Assertion does not seem to work correctly anymore)\n\n\tPR c++/13239\n\t* builtins.c (expand_builtin_expect_jump): Update\n\tTREE_VALUE (arglist) if unsave_expr_now langhook\n\tcreated a new tree.\n\n\t* g++.dg/opt/expect1.C: New test.\n\nFrom-SVN: r74832", "tree": {"sha": "6bb121a9a36677cc5cb47841903d0d894ded6ae6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6bb121a9a36677cc5cb47841903d0d894ded6ae6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/effed6551681c1411cfaebeb005979cb6996e528", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/effed6551681c1411cfaebeb005979cb6996e528", "html_url": "https://github.com/Rust-GCC/gccrs/commit/effed6551681c1411cfaebeb005979cb6996e528", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/effed6551681c1411cfaebeb005979cb6996e528/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c05fc0c2e1dc82c3e8c53a8d492bd7e0578868ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c05fc0c2e1dc82c3e8c53a8d492bd7e0578868ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c05fc0c2e1dc82c3e8c53a8d492bd7e0578868ec"}], "stats": {"total": 37, "additions": 37, "deletions": 0}, "files": [{"sha": "dec8a807a4b7aa46465dfd7b836c3a74c124c428", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/effed6551681c1411cfaebeb005979cb6996e528/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/effed6551681c1411cfaebeb005979cb6996e528/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=effed6551681c1411cfaebeb005979cb6996e528", "patch": "@@ -1,3 +1,10 @@\n+2003-12-19  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/13239\n+\t* builtins.c (expand_builtin_expect_jump): Update\n+\tTREE_VALUE (arglist) if unsave_expr_now langhook\n+\tcreated a new tree.\n+\n 2003-12-19  Richard Earnshaw  <rearnsha@arm.com>\n \n \t* arm.c (thumb_base_register_rtx_p): Use regno in comparison against"}, {"sha": "d3dfb8824d75f38aa4d254abb63ce4b823485ddb", "filename": "gcc/builtins.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/effed6551681c1411cfaebeb005979cb6996e528/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/effed6551681c1411cfaebeb005979cb6996e528/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=effed6551681c1411cfaebeb005979cb6996e528", "patch": "@@ -4460,6 +4460,14 @@ expand_builtin_expect_jump (tree exp, rtx if_false_label, rtx if_true_label)\n       ret = get_insns ();\n       end_sequence ();\n \n+      /* For mildly unsafe builtin jump's, if unsave_expr_now\n+\t creates a new tree instead of changing the old one\n+\t TREE_VALUE (arglist) needs to be updated.  */\n+      if (arg0 != TREE_VALUE (arglist)\n+\t  && TREE_CODE (arg0) == UNSAVE_EXPR\n+\t  && TREE_OPERAND (arg0, 0) != TREE_VALUE (arglist))\n+\tTREE_VALUE (arglist) = TREE_OPERAND (arg0, 0);\n+\n       /* Now that the __builtin_expect has been validated, go through and add\n \t the expect's to each of the conditional jumps.  If we run into an\n \t error, just give up and generate the 'safe' code of doing a SCC"}, {"sha": "3010412fce19b631322831608df82fe28a77658b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/effed6551681c1411cfaebeb005979cb6996e528/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/effed6551681c1411cfaebeb005979cb6996e528/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=effed6551681c1411cfaebeb005979cb6996e528", "patch": "@@ -1,3 +1,8 @@\n+2003-12-19  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/13239\n+\t* g++.dg/opt/expect1.C: New test.\n+\n 2003-12-19  Hartmut Penner  <hpenner@de.ibm.com>\n \n \t* gcc.dg/altivec-varargs-1.c: Enable testcase on ppc linux."}, {"sha": "90a871f377ade50353a7321da4e18855b5623a3f", "filename": "gcc/testsuite/g++.dg/opt/expect1.C", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/effed6551681c1411cfaebeb005979cb6996e528/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fexpect1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/effed6551681c1411cfaebeb005979cb6996e528/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fexpect1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fexpect1.C?ref=effed6551681c1411cfaebeb005979cb6996e528", "patch": "@@ -0,0 +1,17 @@\n+// PR c++/13239\n+// { dg-do run }\n+// { dg-options \"-O2\" }\n+\n+extern \"C\" void abort (void);\n+\n+struct Y {\n+  int i;\n+};\n+\n+bool foo () { return true; }\n+Y bar () { Y y = {0}; return y; }\n+\n+int main ()\n+{\n+  __builtin_expect (foo () && (bar ().i) == 0, 0) ? 0 : (abort (), 1);\n+}"}]}