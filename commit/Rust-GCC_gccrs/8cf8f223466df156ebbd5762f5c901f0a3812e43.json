{"sha": "8cf8f223466df156ebbd5762f5c901f0a3812e43", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGNmOGYyMjM0NjZkZjE1NmViYmQ1NzYyZjVjOTAxZjBhMzgxMmU0Mw==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2015-01-09T22:05:55Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2015-01-09T22:05:55Z"}, "message": "Simplify jit.dg/test-combination.c\n\ngcc/testsuite/ChangeLog:\n\t* jit.dg/test-threads.c (struct testcase): Move declaration\n\tto jit.dg/all-non-failing-tests.h.\n\t(testcases): Likewise.\n\t* jit.dg/all-non-failing-tests.h (struct testcase): Move\n\tdeclaration here from jit.dg/all-non-failing-tests.h.\n\t(testcases): Likewise.\n\t* jit.dg/test-combination.c (create_code): Eliminate spelling\n\tout all of the testcases in favor of looping through the\n\t\"testcases\" metadata.\n\t(verify_code): Likewise.\n\nFrom-SVN: r219413", "tree": {"sha": "e86f079a53565a0e2dacb12fbc71d2083050e291", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e86f079a53565a0e2dacb12fbc71d2083050e291"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8cf8f223466df156ebbd5762f5c901f0a3812e43", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8cf8f223466df156ebbd5762f5c901f0a3812e43", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8cf8f223466df156ebbd5762f5c901f0a3812e43", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8cf8f223466df156ebbd5762f5c901f0a3812e43/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5357406ff8f315c90a69b87862b11d00830cd159", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5357406ff8f315c90a69b87862b11d00830cd159", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5357406ff8f315c90a69b87862b11d00830cd159"}], "stats": {"total": 239, "additions": 105, "deletions": 134}, "files": [{"sha": "496ba92faf714522e9b36ad75f114e8b79a3ec5f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cf8f223466df156ebbd5762f5c901f0a3812e43/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cf8f223466df156ebbd5762f5c901f0a3812e43/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8cf8f223466df156ebbd5762f5c901f0a3812e43", "patch": "@@ -1,3 +1,16 @@\n+2015-01-09  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* jit.dg/test-threads.c (struct testcase): Move declaration\n+\tto jit.dg/all-non-failing-tests.h.\n+\t(testcases): Likewise.\n+\t* jit.dg/all-non-failing-tests.h (struct testcase): Move\n+\tdeclaration here from jit.dg/all-non-failing-tests.h.\n+\t(testcases): Likewise.\n+\t* jit.dg/test-combination.c (create_code): Eliminate spelling\n+\tout all of the testcases in favor of looping through the\n+\t\"testcases\" metadata.\n+\t(verify_code): Likewise.\n+\n 2015-01-09  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR rtl-optimization/64536"}, {"sha": "82ce7368482a9ffc86740dcb0b294d1c6e3debf4", "filename": "gcc/testsuite/jit.dg/all-non-failing-tests.h", "status": "modified", "additions": 88, "deletions": 0, "changes": 88, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cf8f223466df156ebbd5762f5c901f0a3812e43/gcc%2Ftestsuite%2Fjit.dg%2Fall-non-failing-tests.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cf8f223466df156ebbd5762f5c901f0a3812e43/gcc%2Ftestsuite%2Fjit.dg%2Fall-non-failing-tests.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fjit.dg%2Fall-non-failing-tests.h?ref=8cf8f223466df156ebbd5762f5c901f0a3812e43", "patch": "@@ -178,3 +178,91 @@\n #include \"test-volatile.c\"\n #undef create_code\n #undef verify_code\n+\n+/* Now expose the individual testcases as instances of this struct.  */\n+\n+struct testcase\n+{\n+  const char *m_name;\n+  void (*m_hook_to_create_code) (gcc_jit_context *ctxt,\n+\t\t\t\t void * user_data);\n+  void (*m_hook_to_verify_code) (gcc_jit_context *ctxt,\n+\t\t\t\t gcc_jit_result *result);\n+};\n+\n+const struct testcase testcases[] = {\n+  {\"accessing_struct\",\n+   create_code_accessing_struct,\n+   verify_code_accessing_struct},\n+  {\"accessing_union\",\n+   create_code_accessing_union,\n+   verify_code_accessing_union},\n+  {\"arith_overflow\",\n+   create_code_arith_overflow,\n+   verify_code_arith_overflow},\n+  {\"array_as_pointer\",\n+   create_code_array_as_pointer,\n+   verify_code_array_as_pointer},\n+  {\"arrays\",\n+   create_code_arrays,\n+   verify_code_arrays},\n+  {\"calling_external_function\",\n+   create_code_calling_external_function,\n+   verify_code_calling_external_function},\n+  {\"calling_function_ptr\",\n+   create_code_calling_function_ptr,\n+   verify_code_calling_function_ptr},\n+  {\"constants\",\n+   create_code_constants,\n+   verify_code_constants},\n+  {\"dot_product\",\n+   create_code_dot_product,\n+   verify_code_dot_product},\n+  {\"expressions\",\n+   create_code_expressions,\n+   verify_code_expressions},\n+  {\"factorial\",\n+   create_code_factorial,\n+   verify_code_factorial},\n+  {\"fibonacci\",\n+   create_code_fibonacci,\n+   verify_code_fibonacci},\n+  {\"functions\",\n+   create_code_functions,\n+   verify_code_functions},\n+  {\"hello_world\",\n+   create_code_hello_world,\n+   verify_code_hello_world},\n+  {\"linked_list\",\n+   create_code_linked_list,\n+   verify_code_linked_list},\n+  {\"long_names\",\n+   create_code_long_names,\n+   verify_code_long_names},\n+  {\"quadratic\",\n+   create_code_quadratic,\n+   verify_code_quadratic},\n+  {\"nested_loop\",\n+   create_code_nested_loop,\n+   verify_code_nested_loop},\n+  {\"reading_struct \",\n+   create_code_reading_struct ,\n+   verify_code_reading_struct },\n+  {\"string_literal\",\n+   create_code_string_literal,\n+   verify_code_string_literal},\n+  {\"sum_of_squares\",\n+   create_code_sum_of_squares,\n+   verify_code_sum_of_squares},\n+  {\"types\",\n+   create_code_types,\n+   verify_code_types},\n+  {\"using_global\",\n+   create_code_using_global,\n+   verify_code_using_global},\n+  {\"volatile\",\n+   create_code_volatile,\n+   verify_code_volatile}\n+};\n+\n+const int num_testcases = (sizeof (testcases) / sizeof (testcases[0]));"}, {"sha": "a9f3347c9e05d2ba160beccb79e74d25267942fd", "filename": "gcc/testsuite/jit.dg/test-combination.c", "status": "modified", "additions": 4, "deletions": 48, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cf8f223466df156ebbd5762f5c901f0a3812e43/gcc%2Ftestsuite%2Fjit.dg%2Ftest-combination.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cf8f223466df156ebbd5762f5c901f0a3812e43/gcc%2Ftestsuite%2Fjit.dg%2Ftest-combination.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fjit.dg%2Ftest-combination.c?ref=8cf8f223466df156ebbd5762f5c901f0a3812e43", "patch": "@@ -15,57 +15,13 @@\n void\n create_code (gcc_jit_context *ctxt, void * user_data)\n {\n-  create_code_accessing_struct (ctxt, user_data);\n-  create_code_accessing_union (ctxt, user_data);\n-  create_code_arith_overflow (ctxt, user_data);\n-  create_code_array_as_pointer (ctxt, user_data);\n-  create_code_arrays (ctxt, user_data);\n-  create_code_calling_external_function (ctxt, user_data);\n-  create_code_calling_function_ptr (ctxt, user_data);\n-  create_code_constants (ctxt, user_data);\n-  create_code_dot_product (ctxt, user_data);\n-  create_code_expressions (ctxt, user_data);\n-  create_code_factorial (ctxt, user_data);\n-  create_code_fibonacci (ctxt, user_data);\n-  create_code_functions (ctxt, user_data);\n-  create_code_hello_world (ctxt, user_data);\n-  create_code_linked_list (ctxt, user_data);\n-  create_code_long_names (ctxt, user_data);\n-  create_code_quadratic (ctxt, user_data);\n-  create_code_nested_loop (ctxt, user_data);\n-  create_code_reading_struct  (ctxt, user_data);\n-  create_code_string_literal (ctxt, user_data);\n-  create_code_sum_of_squares (ctxt, user_data);\n-  create_code_types (ctxt, user_data);\n-  create_code_using_global (ctxt, user_data);\n-  create_code_volatile (ctxt, user_data);\n+  for (int i = 0; i < num_testcases; i++)\n+    testcases[i].m_hook_to_create_code (ctxt, user_data);\n }\n \n void\n verify_code (gcc_jit_context *ctxt, gcc_jit_result *result)\n {\n-  verify_code_accessing_struct (ctxt, result);\n-  verify_code_accessing_union (ctxt, result);\n-  verify_code_arith_overflow (ctxt, result);\n-  verify_code_array_as_pointer (ctxt, result);\n-  verify_code_arrays (ctxt, result);\n-  verify_code_calling_external_function (ctxt, result);\n-  verify_code_calling_function_ptr (ctxt, result);\n-  verify_code_constants (ctxt, result);\n-  verify_code_dot_product (ctxt, result);\n-  verify_code_expressions (ctxt, result);\n-  verify_code_factorial (ctxt, result);\n-  verify_code_fibonacci (ctxt, result);\n-  verify_code_functions (ctxt, result);\n-  verify_code_hello_world (ctxt, result);\n-  verify_code_linked_list (ctxt, result);\n-  verify_code_long_names (ctxt, result);\n-  verify_code_quadratic (ctxt, result);\n-  verify_code_nested_loop (ctxt, result);\n-  verify_code_reading_struct (ctxt, result);\n-  verify_code_string_literal (ctxt, result);\n-  verify_code_sum_of_squares (ctxt, result);\n-  verify_code_types (ctxt, result);\n-  verify_code_using_global (ctxt, result);\n-  verify_code_volatile (ctxt, result);\n+  for (int i = 0; i < num_testcases; i++)\n+    testcases[i].m_hook_to_verify_code (ctxt, result);\n }"}, {"sha": "d4e53b259df07a2234c67a7e5138416d6478bb44", "filename": "gcc/testsuite/jit.dg/test-threads.c", "status": "modified", "additions": 0, "deletions": 86, "changes": 86, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cf8f223466df156ebbd5762f5c901f0a3812e43/gcc%2Ftestsuite%2Fjit.dg%2Ftest-threads.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cf8f223466df156ebbd5762f5c901f0a3812e43/gcc%2Ftestsuite%2Fjit.dg%2Ftest-threads.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fjit.dg%2Ftest-threads.c?ref=8cf8f223466df156ebbd5762f5c901f0a3812e43", "patch": "@@ -91,92 +91,6 @@ note (const char* fmt, ...)\n #undef COMBINED_TEST\n #include \"harness.h\"\n \n-struct testcase\n-{\n-  const char *m_name;\n-  void (*m_hook_to_create_code) (gcc_jit_context *ctxt,\n-\t\t\t\t void * user_data);\n-  void (*m_hook_to_verify_code) (gcc_jit_context *ctxt,\n-\t\t\t\t gcc_jit_result *result);\n-};\n-\n-const struct testcase testcases[] = {\n-  {\"accessing_struct\",\n-   create_code_accessing_struct,\n-   verify_code_accessing_struct},\n-  {\"accessing_union\",\n-   create_code_accessing_union,\n-   verify_code_accessing_union},\n-  {\"arith_overflow\",\n-   create_code_arith_overflow,\n-   verify_code_arith_overflow},\n-  {\"array_as_pointer\",\n-   create_code_array_as_pointer,\n-   verify_code_array_as_pointer},\n-  {\"arrays\",\n-   create_code_arrays,\n-   verify_code_arrays},\n-  {\"calling_external_function\",\n-   create_code_calling_external_function,\n-   verify_code_calling_external_function},\n-  {\"calling_function_ptr\",\n-   create_code_calling_function_ptr,\n-   verify_code_calling_function_ptr},\n-  {\"constants\",\n-   create_code_constants,\n-   verify_code_constants},\n-  {\"dot_product\",\n-   create_code_dot_product,\n-   verify_code_dot_product},\n-  {\"expressions\",\n-   create_code_expressions,\n-   verify_code_expressions},\n-  {\"factorial\",\n-   create_code_factorial,\n-   verify_code_factorial},\n-  {\"fibonacci\",\n-   create_code_fibonacci,\n-   verify_code_fibonacci},\n-  {\"functions\",\n-   create_code_functions,\n-   verify_code_functions},\n-  {\"hello_world\",\n-   create_code_hello_world,\n-   verify_code_hello_world},\n-  {\"linked_list\",\n-   create_code_linked_list,\n-   verify_code_linked_list},\n-  {\"long_names\",\n-   create_code_long_names,\n-   verify_code_long_names},\n-  {\"quadratic\",\n-   create_code_quadratic,\n-   verify_code_quadratic},\n-  {\"nested_loop\",\n-   create_code_nested_loop,\n-   verify_code_nested_loop},\n-  {\"reading_struct \",\n-   create_code_reading_struct ,\n-   verify_code_reading_struct },\n-  {\"string_literal\",\n-   create_code_string_literal,\n-   verify_code_string_literal},\n-  {\"sum_of_squares\",\n-   create_code_sum_of_squares,\n-   verify_code_sum_of_squares},\n-  {\"types\",\n-   create_code_types,\n-   verify_code_types},\n-  {\"using_global\",\n-   create_code_using_global,\n-   verify_code_using_global},\n-  {\"volatile\",\n-   create_code_volatile,\n-   verify_code_volatile}\n-};\n-\n-const int num_testcases = (sizeof (testcases) / sizeof (testcases[0]));\n-\n struct thread_data\n {\n   pthread_t m_tid;"}]}