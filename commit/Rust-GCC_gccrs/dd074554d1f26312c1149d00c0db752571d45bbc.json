{"sha": "dd074554d1f26312c1149d00c0db752571d45bbc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGQwNzQ1NTRkMWYyNjMxMmMxMTQ5ZDAwYzBkYjc1MjU3MWQ0NWJiYw==", "commit": {"author": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "1999-02-12T16:25:20Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "1999-02-12T16:25:20Z"}, "message": "Formatting fix.\n\nFrom-SVN: r25171", "tree": {"sha": "395864d1603b55f00bafef2836d74f25ba284c66", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/395864d1603b55f00bafef2836d74f25ba284c66"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dd074554d1f26312c1149d00c0db752571d45bbc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd074554d1f26312c1149d00c0db752571d45bbc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd074554d1f26312c1149d00c0db752571d45bbc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd074554d1f26312c1149d00c0db752571d45bbc/comments", "author": null, "committer": null, "parents": [{"sha": "564ea0512d274a1524479160c6fcc19d43ec342b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/564ea0512d274a1524479160c6fcc19d43ec342b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/564ea0512d274a1524479160c6fcc19d43ec342b"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "66b8de5cc68ac94edc9a64a53fc12fcd31bb21db", "filename": "gcc/reload.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd074554d1f26312c1149d00c0db752571d45bbc/gcc%2Freload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd074554d1f26312c1149d00c0db752571d45bbc/gcc%2Freload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload.c?ref=dd074554d1f26312c1149d00c0db752571d45bbc", "patch": "@@ -5641,7 +5641,7 @@ find_reloads_subreg_address (x, force_replace, opnum, type,\n \t  rtx tem = make_memloc (SUBREG_REG (x), regno);\n \n \t  /* If the address changes because of register elimination, then\n-\t      it must be replaced.  */\n+\t     it must be replaced.  */\n \t  if (force_replace\n \t      || ! rtx_equal_p (tem, reg_equiv_mem[regno]))\n \t    {"}]}