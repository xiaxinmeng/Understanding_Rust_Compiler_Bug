{"sha": "8ad2a0828a542f5549ddb36fccfce659869fab43", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGFkMmEwODI4YTU0MmY1NTQ5ZGRiMzZmY2NmY2U2NTk4NjlmYWI0Mw==", "commit": {"author": {"name": "Laurent GUERBY", "email": "laurent@guerby.net", "date": "2005-01-10T08:19:24Z"}, "committer": {"name": "Laurent Guerby", "email": "guerby@gcc.gnu.org", "date": "2005-01-10T08:19:24Z"}, "message": "c456001.a: New from ACATS 2.5L\n\n2005-01-10  Laurent GUERBY <laurent@guerby.net>\n\n\t* ada/acats/tests/c4/c456001.a: New from ACATS 2.5L\n\t* ada/acats/tests/c3/c392014.a: Update from ACATS 2.5L\n\t* ada/acats/tests/c3/c92005b.ada: Likewise.\n\t* ada/acats/tests/c3/cxb3012.a: Likewise.\n\t* ada/acats/norun.lst: Add c380004 and c953002, add PR\n\nFrom-SVN: r93135", "tree": {"sha": "804055d3da176c14bb570a33d90267746eaec687", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/804055d3da176c14bb570a33d90267746eaec687"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8ad2a0828a542f5549ddb36fccfce659869fab43", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ad2a0828a542f5549ddb36fccfce659869fab43", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ad2a0828a542f5549ddb36fccfce659869fab43", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ad2a0828a542f5549ddb36fccfce659869fab43/comments", "author": {"login": "guerby", "id": 6659329, "node_id": "MDQ6VXNlcjY2NTkzMjk=", "avatar_url": "https://avatars.githubusercontent.com/u/6659329?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guerby", "html_url": "https://github.com/guerby", "followers_url": "https://api.github.com/users/guerby/followers", "following_url": "https://api.github.com/users/guerby/following{/other_user}", "gists_url": "https://api.github.com/users/guerby/gists{/gist_id}", "starred_url": "https://api.github.com/users/guerby/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guerby/subscriptions", "organizations_url": "https://api.github.com/users/guerby/orgs", "repos_url": "https://api.github.com/users/guerby/repos", "events_url": "https://api.github.com/users/guerby/events{/privacy}", "received_events_url": "https://api.github.com/users/guerby/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "826eb7eda5726246f689f035ca699ca053cd59e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/826eb7eda5726246f689f035ca699ca053cd59e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/826eb7eda5726246f689f035ca699ca053cd59e8"}], "stats": {"total": 200, "additions": 178, "deletions": 22}, "files": [{"sha": "90b149d3025bdec2edca39b726ee491332604c10", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ad2a0828a542f5549ddb36fccfce659869fab43/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ad2a0828a542f5549ddb36fccfce659869fab43/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8ad2a0828a542f5549ddb36fccfce659869fab43", "patch": "@@ -1,3 +1,11 @@\n+2005-01-10  Laurent GUERBY <laurent@guerby.net>\n+\n+\t* ada/acats/tests/c4/c456001.a: New from ACATS 2.5L\n+\t* ada/acats/tests/c3/c392014.a: Update from ACATS 2.5L\n+\t* ada/acats/tests/c3/c92005b.ada: Likewise.\n+\t* ada/acats/tests/c3/cxb3012.a: Likewise.\n+\t* ada/acats/norun.lst: Add c380004 and c953002, add PR\n+\t\n 2005-01-09  Paul Brook  <paul@codesourcery.com>\n \n \t* gfortran.dg/common_2.f90: New file."}, {"sha": "5d21693f34d4546bef9dac595dff088a2d1b5db0", "filename": "gcc/testsuite/ada/acats/norun.lst", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ad2a0828a542f5549ddb36fccfce659869fab43/gcc%2Ftestsuite%2Fada%2Facats%2Fnorun.lst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ad2a0828a542f5549ddb36fccfce659869fab43/gcc%2Ftestsuite%2Fada%2Facats%2Fnorun.lst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fada%2Facats%2Fnorun.lst?ref=8ad2a0828a542f5549ddb36fccfce659869fab43", "patch": "@@ -1,4 +1,8 @@\n+c380004\n+c953002\n cdd2a03\n templat\n # Tests must be sorted in alphabetical order\n-# cdd2a03: new Ada ruling not supported yet.\n+# c380004: should be front-end compile time error, PR ada/18817\n+# c953002: often hanging, PR ada/18820\n+# cdd2a03: new Ada ruling not supported yet, PR ada/19323"}, {"sha": "8ecb4144b33816cb81c38d9c0f7d721ce3cae2c7", "filename": "gcc/testsuite/ada/acats/tests/c3/c392014.a", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ad2a0828a542f5549ddb36fccfce659869fab43/gcc%2Ftestsuite%2Fada%2Facats%2Ftests%2Fc3%2Fc392014.a", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ad2a0828a542f5549ddb36fccfce659869fab43/gcc%2Ftestsuite%2Fada%2Facats%2Ftests%2Fc3%2Fc392014.a", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fada%2Facats%2Ftests%2Fc3%2Fc392014.a?ref=8ad2a0828a542f5549ddb36fccfce659869fab43", "patch": "@@ -31,6 +31,8 @@\n -- CHANGE HISTORY:\n --    18 JAN 2001   PHL   Initial version\n --    15 MAR 2001   RLB   Readied for release.\n+--    03 JUN 2004   RLB   Removed constraint for S0, as the subtype has\n+--                        unknown discriminants.\n \n --!\n package C392014_0 is\n@@ -178,7 +180,7 @@ with C392014_1.Child;\n with C392014_2;\n procedure C392014 is\n \n-    subtype S0 is C392014_0.T'Class (D => Ident_Int (17));\n+    subtype S0 is C392014_0.T'Class;\n     subtype S1 is C392014_1.T'Class;\n \n     X0 : aliased C392014_0.T'Class := C392014_0.Create (Ident_Int (5218));"}, {"sha": "9062f93fc2ebb102d05c42ee428c6edca7b67447", "filename": "gcc/testsuite/ada/acats/tests/c4/c456001.a", "status": "added", "additions": 91, "deletions": 0, "changes": 91, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ad2a0828a542f5549ddb36fccfce659869fab43/gcc%2Ftestsuite%2Fada%2Facats%2Ftests%2Fc4%2Fc456001.a", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ad2a0828a542f5549ddb36fccfce659869fab43/gcc%2Ftestsuite%2Fada%2Facats%2Ftests%2Fc4%2Fc456001.a", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fada%2Facats%2Ftests%2Fc4%2Fc456001.a?ref=8ad2a0828a542f5549ddb36fccfce659869fab43", "patch": "@@ -0,0 +1,91 @@\n+-- C456001.A\n+--\n+--                             Grant of Unlimited Rights\n+--\n+--     The Ada Conformity Assessment Authority (ACAA) holds unlimited\n+--     rights in the software and documentation contained herein. Unlimited\n+--     rights are the same as those granted by the U.S. Government for older\n+--     parts of the Ada Conformity Assessment Test Suite, and are defined\n+--     in DFAR 252.227-7013(a)(19). By making this public release, the ACAA\n+--     intends to confer upon all recipients unlimited rights equal to those\n+--     held by the ACAA. These rights include rights to use, duplicate,\n+--     release or disclose the released technical data and computer software\n+--     in whole or in part, in any manner and for any purpose whatsoever, and\n+--     to have or permit others to do so.\n+--\n+--                                    DISCLAIMER\n+--\n+--     ALL MATERIALS OR INFORMATION HEREIN RELEASED, MADE AVAILABLE OR\n+--     DISCLOSED ARE AS IS. THE ACAA MAKES NO EXPRESS OR IMPLIED\n+--     WARRANTY AS TO ANY MATTER WHATSOEVER, INCLUDING THE CONDITIONS OF THE\n+--     SOFTWARE, DOCUMENTATION OR OTHER INFORMATION RELEASED, MADE AVAILABLE\n+--     OR DISCLOSED, OR THE OWNERSHIP, MERCHANTABILITY, OR FITNESS FOR A\n+--     PARTICULAR PURPOSE OF SAID MATERIAL.\n+--\n+--                                     Notice\n+--\n+--    The ACAA has created and maintains the Ada Conformity Assessment Test\n+--    Suite for the purpose of conformity assessments conducted in accordance\n+--    with the International Standard ISO/IEC 18009 - Ada: Conformity\n+--    assessment of a language processor. This test suite should not be used\n+--    to make claims of conformance unless used in accordance with\n+--    ISO/IEC 18009 and any applicable ACAA procedures.\n+--\n+--*\n+-- OBJECTIVE:\n+--     For exponentiation of floating point types, check that\n+--       Constraint_Error is raised (or, if no exception is raised and\n+--       Machine_Overflows is False, that a result is produced) if the\n+--       result is outside of the range of the base type.\n+--     This tests digits 5.\n+\n+-- HISTORY:\n+--     04/30/03  RLB  Created test from old C45622A and C45624A.\n+\n+with Report;\n+\n+procedure C456001 is\n+\n+     type Flt is digits 5;\n+\n+     F : Flt;\n+\n+     function Equal_Flt (One, Two : Flt) return Boolean is\n+         -- Break optimization.\n+     begin\n+          return One = Two * Flt (Report.Ident_Int(1));\n+     end Equal_Flt;\n+\n+begin\n+     Report.Test (\"C456001\", \"For exponentiation of floating point types, \" &\n+                      \"check that Constraint_Error is raised (or, if \" &\n+                      \"if no exception is raised and Machine_Overflows is \" &\n+                      \"False, that a result is produced) if the result is \" &\n+                      \"outside of the range of the base type.\");\n+\n+     begin\n+         F := (Flt'Base'Last)**Report.Ident_Int (2);\n+         if Flt'Machine_Overflows Then\n+             Report.Failed (\"Constraint_Error was not raised for \" &\n+                       \"exponentiation\");\n+         else\n+             -- RM95 3.5.6(7) allows disobeying RM95 4.5(10) if\n+             -- Machine_Overflows is False.\n+             Report.Comment (\"Constraint_Error was not raised for \" &\n+                       \"exponentiation and Machine_Overflows is False\");\n+         end if;\n+         if not Equal_Flt (F, F) then\n+             -- Optimization breaker, F must be evaluated.\n+             Report.Comment (\"Don't optimize F\");\n+         end if;\n+     exception\n+         when Constraint_Error =>\n+             Report.Comment (\"Constraint_Error was raised for \" &\n+                             \"exponentiation\");\n+         when others =>\n+             Report.Failed (\"An exception other than Constraint_Error \" &\n+                            \"was raised for exponentiation\");\n+     end;\n+\n+     Report.Result;\n+end C456001;"}, {"sha": "e5672a7c7662705e9066fa99fd85965a79c9b4af", "filename": "gcc/testsuite/ada/acats/tests/c9/c92005b.ada", "status": "modified", "additions": 12, "deletions": 11, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ad2a0828a542f5549ddb36fccfce659869fab43/gcc%2Ftestsuite%2Fada%2Facats%2Ftests%2Fc9%2Fc92005b.ada", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ad2a0828a542f5549ddb36fccfce659869fab43/gcc%2Ftestsuite%2Fada%2Facats%2Ftests%2Fc9%2Fc92005b.ada", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fada%2Facats%2Ftests%2Fc9%2Fc92005b.ada?ref=8ad2a0828a542f5549ddb36fccfce659869fab43", "patch": "@@ -3,30 +3,31 @@\n --                             Grant of Unlimited Rights\n --\n --     Under contracts F33600-87-D-0337, F33600-84-D-0280, MDA903-79-C-0687,\n---     F08630-91-C-0015, and DCA100-97-D-0025, the U.S. Government obtained \n+--     F08630-91-C-0015, and DCA100-97-D-0025, the U.S. Government obtained\n --     unlimited rights in the software and documentation contained herein.\n---     Unlimited rights are defined in DFAR 252.227-7013(a)(19).  By making \n---     this public release, the Government intends to confer upon all \n---     recipients unlimited rights  equal to those held by the Government.  \n---     These rights include rights to use, duplicate, release or disclose the \n---     released technical data and computer software in whole or in part, in \n---     any manner and for any purpose whatsoever, and to have or permit others \n+--     Unlimited rights are defined in DFAR 252.227-7013(a)(19).  By making\n+--     this public release, the Government intends to confer upon all\n+--     recipients unlimited rights  equal to those held by the Government.\n+--     These rights include rights to use, duplicate, release or disclose the\n+--     released technical data and computer software in whole or in part, in\n+--     any manner and for any purpose whatsoever, and to have or permit others\n --     to do so.\n --\n --                                    DISCLAIMER\n --\n --     ALL MATERIALS OR INFORMATION HEREIN RELEASED, MADE AVAILABLE OR\n---     DISCLOSED ARE AS IS.  THE GOVERNMENT MAKES NO EXPRESS OR IMPLIED \n+--     DISCLOSED ARE AS IS.  THE GOVERNMENT MAKES NO EXPRESS OR IMPLIED\n --     WARRANTY AS TO ANY MATTER WHATSOEVER, INCLUDING THE CONDITIONS OF THE\n---     SOFTWARE, DOCUMENTATION OR OTHER INFORMATION RELEASED, MADE AVAILABLE \n+--     SOFTWARE, DOCUMENTATION OR OTHER INFORMATION RELEASED, MADE AVAILABLE\n --     OR DISCLOSED, OR THE OWNERSHIP, MERCHANTABILITY, OR FITNESS FOR A\n --     PARTICULAR PURPOSE OF SAID MATERIAL.\n --*\n -- CHECK THAT FOR A TASK OBJECT CREATED BY AN ALLOCATOR THE\n -- OBJECT VALUE IS SET DURING EXECUTION OF THE ALLOCATOR.\n \n -- WEI  3/ 4/82\n--- JBG 5/25/85\n+-- JBG  5/25/85\n+-- RLB  1/ 7/05\n \n WITH REPORT;\n  USE REPORT;\n@@ -54,7 +55,7 @@ BLOCK:\n                POINTER_TT1 : ATT1 := NEW TT1;\n                I : BIG_INT := POINTER_TT1.ALL'STORAGE_SIZE;\n           BEGIN\n-               IF NOT EQUAL(INTEGER(I), INTEGER(I)) THEN\n+               IF NOT EQUAL(INTEGER(I MOD 1024), INTEGER(I MOD 1024)) THEN\n                     FAILED (\"UNEXPECTED PROBLEM\");\n                END IF;\n           END PACK;"}, {"sha": "3771f6e6829e3765066264628bc4daa930762872", "filename": "gcc/testsuite/ada/acats/tests/cxb/cxb3012.a", "status": "modified", "additions": 59, "deletions": 9, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ad2a0828a542f5549ddb36fccfce659869fab43/gcc%2Ftestsuite%2Fada%2Facats%2Ftests%2Fcxb%2Fcxb3012.a", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ad2a0828a542f5549ddb36fccfce659869fab43/gcc%2Ftestsuite%2Fada%2Facats%2Ftests%2Fcxb%2Fcxb3012.a", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fada%2Facats%2Ftests%2Fcxb%2Fcxb3012.a?ref=8ad2a0828a542f5549ddb36fccfce659869fab43", "patch": "@@ -74,7 +74,10 @@\n --                          Unchecked_Conversion. Added check for raising\n --                          of Dereference_Error for Update (From Technical\n --                          Corrigendum 1).\n---\n+--      07 Jan 05   RLB     Modified to reflect change to Update by AI-242\n+--                          (which is expected to be part of Amendment 1).\n+--                          [This version allows either semantics.]\n+\n --!\n \n with Report;\n@@ -117,6 +120,15 @@ begin\n       TC_Result_String_5 : constant String := \"1a2b3\";\n       TC_Result_String_6 : constant String := \"XXX---...\";\n \n+      TC_Amd_Result_String_4 :\n+                           constant String := \"XACVCXXXXX\";\n+      TC_Amd_Result_String_5 :\n+                           constant String := \"1a2b3XXXXX\";\n+      TC_Amd_Result_String_6 :\n+                           constant String := \"XXX---...X\";\n+      TC_Amd_Result_String_9 :\n+                           constant String := \"JustATestX\";\n+\n       TC_char_array        : IC.char_array(0..10) := IC.To_C(\"XXXXXXXXXX\");\n       TC_Result_char_array : IC.char_array(0..10) := IC.To_C(\"XXXXXXXXXX\");\n       TC_chars_ptr         : ICS.chars_ptr;\n@@ -210,16 +222,21 @@ begin\n       -- but with the character values in the String overwriting the char\n       -- values in Item.\n       --\n-      -- Note: In each of the cases below, the String parameter Str is\n-      --       treated as if it were nul terminated, which means that the\n-      --       char_array pointed to by TC_chars_ptr will be \"shortened\"\n+      -- Note: In Ada 95, In each of the cases below, the String parameter\n+      --       Str is treated as if it were nul terminated, which means that\n+      --       the char_array pointed to by TC_chars_ptr will be \"shortened\"\n       --       so that it ends after the last character of the Str\n-      --       parameter.\n+      --       parameter. For Ada 2005, this rule is dropped, so the\n+      --       number of characters remains the same.\n \n       TC_chars_ptr := ICS.New_Char_Array(TC_char_array);\n       ICS.Update(TC_chars_ptr, 1, TC_String_4, False);\n \n-      if ICS.Value(TC_chars_ptr) /= TC_Result_String_4 then\n+      if ICS.Value(TC_chars_ptr) = TC_Result_String_4 then\n+         Report.Comment(\"Ada 95 result from Procedure Update - 5\");\n+      elsif ICS.Value(TC_chars_ptr) = TC_Amd_Result_String_4 then\n+         Report.Comment(\"Amendment 1 result from Procedure Update - 5\");\n+      else\n          Report.Failed(\"Incorrect result from Procedure Update - 5\");\n       end if;\n       ICS.Free(TC_chars_ptr);\n@@ -230,7 +247,11 @@ begin\n                  Offset => 0,\n                  Str    => TC_String_5);\n \n-      if ICS.Value(TC_chars_ptr) /= TC_Result_String_5 then\n+      if ICS.Value(TC_chars_ptr) = TC_Result_String_5 then\n+         Report.Comment(\"Ada 95 result from Procedure Update - 6\");\n+      elsif ICS.Value(TC_chars_ptr) = TC_Amd_Result_String_5 then\n+         Report.Comment(\"Amendment 1 result from Procedure Update - 6\");\n+      else\n          Report.Failed(\"Incorrect result from Procedure Update - 6\");\n       end if;\n       ICS.Free(TC_chars_ptr);\n@@ -242,7 +263,11 @@ begin\n                  Str    => TC_String_6,\n                  Check  => True);\n \n-      if ICS.Value(TC_chars_ptr) /= TC_Result_String_6 then\n+      if ICS.Value(TC_chars_ptr) = TC_Result_String_6 then\n+         Report.Comment(\"Ada 95 result from Procedure Update - 7\");\n+      elsif ICS.Value(TC_chars_ptr) = TC_Amd_Result_String_6 then\n+         Report.Comment(\"Amendment 1 result from Procedure Update - 7\");\n+      else\n          Report.Failed(\"Incorrect result from Procedure Update - 7\");\n       end if;\n       ICS.Free(TC_chars_ptr);\n@@ -251,11 +276,36 @@ begin\n       TC_chars_ptr := ICS.New_Char_Array(TC_char_array);\n       ICS.Update(TC_chars_ptr, 0, TC_String_9, True);\n \n-      if ICS.Value(TC_chars_ptr) /= TC_String_9 then\n+      if ICS.Value(TC_chars_ptr) = TC_String_9 then\n+         Report.Comment(\"Ada 95 result from Procedure Update - 8\");\n+      elsif ICS.Value(TC_chars_ptr) = TC_Amd_Result_String_9 then\n+         Report.Comment(\"Amendment 1 result from Procedure Update - 8\");\n+      else\n          Report.Failed(\"Incorrect result from Procedure Update - 8\");\n       end if;\n       ICS.Free(TC_chars_ptr);\n \n+      -- Check what happens if the string and array are the same size (this\n+      -- is the case that caused the change made by the Amendment).\n+      begin\n+         TC_chars_ptr := ICS.New_Char_Array(TC_char_array);\n+         ICS.Update(Item   => TC_chars_ptr,\n+                    Offset => 0,\n+                    Str    => TC_String_10,\n+                    Check  => True);\n+          if ICS.Value(TC_chars_ptr) = TC_String_10 then\n+             Report.Comment(\"Amendment 1 result from Procedure Update - 9\");\n+          else\n+             Report.Failed(\"Incorrect result from Procedure Update - 9\");\n+          end if;\n+      exception\n+         when ICS.Update_Error =>\n+             Report.Comment(\"Ada 95 exception expected from Procedure Update - 9\");\n+         when others           =>\n+           Report.Failed(\"Incorrect exception raised by Procedure Update \" &\n+                         \"with Str parameter - 9\");\n+      end;\n+      ICS.Free(TC_chars_ptr);\n \n \n       -- Check that both of the above versions of Procedure Update will"}]}