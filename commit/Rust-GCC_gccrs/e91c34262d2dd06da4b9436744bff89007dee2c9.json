{"sha": "e91c34262d2dd06da4b9436744bff89007dee2c9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTkxYzM0MjYyZDJkZDA2ZGE0Yjk0MzY3NDRiZmY4OTAwN2RlZTJjOQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-10-07T08:52:47Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-10-07T08:52:47Z"}, "message": "options: Avoid unused variable mask warning [PR97305]\n\n> options-save.c: In function 'void cl_target_option_save(cl_target_option*, gcc_options*, gcc_options*)':\n> options-save.c:8526:26: error: unused variable 'mask' [-Werror=unused-variable]\n>  8526 |   unsigned HOST_WIDE_INT mask = 0;\n>       |                          ^~~~\n> options-save.c: In function 'void cl_target_option_restore(gcc_options*, gcc_options*, cl_target_option*)':\n> options-save.c:8537:26: error: unused variable 'mask' [-Werror=unused-variable]\n>  8537 |   unsigned HOST_WIDE_INT mask;\n>       |                          ^~~~\n\nOops, missed that, sorry.\n\nThe following patch should fix that, tested on x86_64-linux make\noptions-save.c (same file as before) and -> ia64-linux cross make\noptions-save.o (no warning anymore, just the unwanted declarations gone).\n\n2020-10-07  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR bootstrap/97305\n\t* optc-save-gen.awk: Don't declare mask variable if explicit_mask\n\tarray is not present.", "tree": {"sha": "2a68ec873f7362cad4d860c537f2ca7c2762e818", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2a68ec873f7362cad4d860c537f2ca7c2762e818"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e91c34262d2dd06da4b9436744bff89007dee2c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e91c34262d2dd06da4b9436744bff89007dee2c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e91c34262d2dd06da4b9436744bff89007dee2c9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e91c34262d2dd06da4b9436744bff89007dee2c9/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "83f565ed4f37e550e1d40f7b6cf0b5845f29a9c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83f565ed4f37e550e1d40f7b6cf0b5845f29a9c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/83f565ed4f37e550e1d40f7b6cf0b5845f29a9c7"}], "stats": {"total": 26, "additions": 24, "deletions": 2}, "files": [{"sha": "a756835230eb430086e6c92826a5314fb4a525f8", "filename": "gcc/optc-save-gen.awk", "status": "modified", "additions": 24, "deletions": 2, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e91c34262d2dd06da4b9436744bff89007dee2c9/gcc%2Foptc-save-gen.awk", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e91c34262d2dd06da4b9436744bff89007dee2c9/gcc%2Foptc-save-gen.awk", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptc-save-gen.awk?ref=e91c34262d2dd06da4b9436744bff89007dee2c9", "patch": "@@ -597,11 +597,13 @@ for (i = 0; i < n_target_string; i++) {\n }\n \n print \"\";\n-print \"  unsigned HOST_WIDE_INT mask = 0;\";\n \n j = 0;\n k = 0;\n for (i = 0; i < n_extra_target_vars; i++) {\n+\tif (j == 0 && k == 0) {\n+\t\tprint \"  unsigned HOST_WIDE_INT mask = 0;\";\n+\t}\n \tprint \"  if (opts_set->x_\" extra_target_vars[i] \") mask |= HOST_WIDE_INT_1U << \" j \";\";\n \tj++;\n \tif (j == 64) {\n@@ -617,6 +619,9 @@ for (i = 0; i < n_target_other; i++) {\n \t\tprint \"  ptr->explicit_mask_\" var_target_other[i] \" = opts_set->x_\" var_target_other[i] \";\";\n \t\tcontinue;\n \t}\n+\tif (j == 0 && k == 0) {\n+\t\tprint \"  unsigned HOST_WIDE_INT mask = 0;\";\n+\t}\n \tprint \"  if (opts_set->x_\" var_target_other[i] \") mask |= HOST_WIDE_INT_1U << \" j \";\";\n \tj++;\n \tif (j == 64) {\n@@ -628,6 +633,9 @@ for (i = 0; i < n_target_other; i++) {\n }\n \n for (i = 0; i < n_target_enum; i++) {\n+\tif (j == 0 && k == 0) {\n+\t\tprint \"  unsigned HOST_WIDE_INT mask = 0;\";\n+\t}\n \tprint \"  if (opts_set->x_\" var_target_enum[i] \") mask |= HOST_WIDE_INT_1U << \" j \";\";\n \tj++;\n \tif (j == 64) {\n@@ -643,6 +651,9 @@ for (i = 0; i < n_target_int; i++) {\n \t\tprint \"  ptr->explicit_mask_\" var_target_int[i] \" = opts_set->x_\" var_target_int[i] \";\";\n \t\tcontinue;\n \t}\n+\tif (j == 0 && k == 0) {\n+\t\tprint \"  unsigned HOST_WIDE_INT mask = 0;\";\n+\t}\n \tprint \"  if (opts_set->x_\" var_target_int[i] \") mask |= HOST_WIDE_INT_1U << \" j \";\";\n \tj++;\n \tif (j == 64) {\n@@ -654,6 +665,9 @@ for (i = 0; i < n_target_int; i++) {\n }\n \n for (i = 0; i < n_target_short; i++) {\n+\tif (j == 0 && k == 0) {\n+\t\tprint \"  unsigned HOST_WIDE_INT mask = 0;\";\n+\t}\n \tprint \"  if (opts_set->x_\" var_target_short[i] \") mask |= HOST_WIDE_INT_1U << \" j \";\";\n \tj++;\n \tif (j == 64) {\n@@ -665,6 +679,9 @@ for (i = 0; i < n_target_short; i++) {\n }\n \n for (i = 0; i < n_target_char; i++) {\n+\tif (j == 0 && k == 0) {\n+\t\tprint \"  unsigned HOST_WIDE_INT mask = 0;\";\n+\t}\n \tprint \"  if (opts_set->x_\" var_target_char[i] \") mask |= HOST_WIDE_INT_1U << \" j \";\";\n \tj++;\n \tif (j == 64) {\n@@ -676,6 +693,9 @@ for (i = 0; i < n_target_char; i++) {\n }\n \n for (i = 0; i < n_target_string; i++) {\n+\tif (j == 0 && k == 0) {\n+\t\tprint \"  unsigned HOST_WIDE_INT mask = 0;\";\n+\t}\n \tprint \"  if (opts_set->x_\" var_target_string[i] \") mask |= HOST_WIDE_INT_1U << \" j \";\";\n \tj++;\n \tif (j == 64) {\n@@ -732,7 +752,9 @@ for (i = 0; i < n_target_string; i++) {\n }\n \n print \"\";\n-print \"  unsigned HOST_WIDE_INT mask;\";\n+if (has_target_explicit_mask) {\n+\tprint \"  unsigned HOST_WIDE_INT mask;\";\n+}\n \n j = 64;\n k = 0;"}]}