{"sha": "7f3ad6b697267778f8c34e1f8384bc031a025047", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2YzYWQ2YjY5NzI2Nzc3OGY4YzM0ZTFmODM4NGJjMDMxYTAyNTA0Nw==", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@bitrange.com", "date": "2001-12-29T10:36:50Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@gcc.gnu.org", "date": "2001-12-29T10:36:50Z"}, "message": "* gcc.c-torture/compile/20011229-1.c: New test.\n\nFrom-SVN: r48363", "tree": {"sha": "4edad659f3ce4da60ada3229d70aede0e0117418", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4edad659f3ce4da60ada3229d70aede0e0117418"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7f3ad6b697267778f8c34e1f8384bc031a025047", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f3ad6b697267778f8c34e1f8384bc031a025047", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f3ad6b697267778f8c34e1f8384bc031a025047", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f3ad6b697267778f8c34e1f8384bc031a025047/comments", "author": null, "committer": null, "parents": [{"sha": "6f317ef34ffcd121f98d1c3a2ae29aae24e66a9c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f317ef34ffcd121f98d1c3a2ae29aae24e66a9c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f317ef34ffcd121f98d1c3a2ae29aae24e66a9c"}], "stats": {"total": 82, "additions": 82, "deletions": 0}, "files": [{"sha": "79c12d5fef0b3147257d3c44dcad62172b425dd4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f3ad6b697267778f8c34e1f8384bc031a025047/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f3ad6b697267778f8c34e1f8384bc031a025047/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7f3ad6b697267778f8c34e1f8384bc031a025047", "patch": "@@ -1,3 +1,7 @@\n+2001-12-29  Hans-Peter Nilsson  <hp@bitrange.com>\n+\n+\t* gcc.c-torture/compile/20011229-1.c: New test.\n+\n 2001-12-28  Stan Shebs  <shebs@apple.com>\n \n \t* lib/objc-torture.exp: Resync with c-torture.exp."}, {"sha": "97b2655434adbc0b6fe848a6f496279458736020", "filename": "gcc/testsuite/gcc.c-torture/compile/20011229-1.c", "status": "added", "additions": 78, "deletions": 0, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f3ad6b697267778f8c34e1f8384bc031a025047/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20011229-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f3ad6b697267778f8c34e1f8384bc031a025047/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20011229-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20011229-1.c?ref=7f3ad6b697267778f8c34e1f8384bc031a025047", "patch": "@@ -0,0 +1,78 @@\n+/* ICE: call insn does not satisfy its constraints, MMIX port.\n+   Origin: ghostscript-6.52, reduction from hp@bitrange.com.  */\n+struct s0\n+{\n+  void (*init_color)(void *, void *);\n+};\n+struct s1\n+{\n+  void (*map_cmyk)(short, void *, void **, void *);\n+  void (*map_rgb_alpha)(short, void *, void **, void *);\n+};\n+struct s5\n+{\n+  long fill1; int fill2;\n+  long fill3; unsigned int fill4, fill5;\n+};\n+struct s2\n+{\n+  struct s5 x, y;\n+};\n+struct s3\n+{\n+  long dev_color;\n+  unsigned int key;\n+};\n+struct s4\n+{\n+  unsigned char spp;\n+  int alpha;\n+  struct mc_\n+  {\n+    unsigned int values[14];\n+    unsigned int mask, test;\n+    int exact;\n+  } mask_color;\n+  void **pis;\n+  struct s0 *pcs;\n+  struct dd_\n+  {\n+    struct s2 row[2];\n+    struct s2 pixel0;\n+  } dda;\n+  struct s3 clues[256];\n+};\n+extern struct s1 *get_cmap_procs (void **, void *);\n+int image_render_color (struct s4 *, unsigned char *, int, void *);\n+int\n+image_render_color (struct s4 *penum, unsigned char *buffer,\n+\t\t    int data_x, void *dev) \n+{\n+  struct s3 *clues = penum->clues;\n+  void **pis = penum->pis;\n+  struct s2 pnext;\n+  struct s0 *pcs = penum->pcs;\n+  struct s1 *cmap_procs = get_cmap_procs(pis, dev);\n+  void (*map_4)(short, void *, void **, void *) =\n+    (penum->alpha ? cmap_procs->map_rgb_alpha : cmap_procs->map_cmyk);\n+  unsigned int mask = penum->mask_color.mask;\n+  unsigned int test = penum->mask_color.test;\n+  struct s3 *pic_next = &clues[1];\n+  int spp = penum->spp;\n+  unsigned char *psrc = buffer + data_x * spp;\n+  unsigned char v[6];\n+\n+  pnext = penum->dda.pixel0;\n+  __builtin_memset (&v, 0, sizeof(v));\n+  (*(pcs)->init_color) (0, 0);\n+\n+  if (spp == 4)\n+    {\n+      v[0] = psrc[0];\n+      v[1] = psrc[1];\n+      if ((buffer[0] & mask) == test && penum->mask_color.exact)\n+\tpic_next->dev_color = 0;\n+      (*map_4)(v[0], &pic_next->dev_color, pis, dev);\n+    }\n+  return 0;\n+}"}]}