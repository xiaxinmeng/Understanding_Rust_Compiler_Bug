{"sha": "0800b8ea794cfb5e7066a3b5128efb40b98a0ff6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDgwMGI4ZWE3OTRjZmI1ZTcwNjZhM2I1MTI4ZWZiNDBiOThhMGZmNg==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2009-12-24T12:47:37Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2009-12-24T12:47:37Z"}, "message": "stl_deque.h (copy_backward(_Deque_iterator, _Deque_iterator, _Deque_iterator), [...]): Declare.\n\n2009-12-24  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* include/bits/stl_deque.h (copy_backward(_Deque_iterator,\n\t_Deque_iterator, _Deque_iterator), move_backward(_Deque_iterator,\n\t_Deque_iterator, _Deque_iterator)): Declare.\n\t* include/bits/deque.tcc: Implement the latter.\n\t* testsuite/performance/25_algorithms/\n\tcopy_backward_deque_iterators.cc: New.\n\t* testsuite/25_algorithms/move_backward/deque_iterators/1.cc: Likewise.\n\t* testsuite/25_algorithms/copy_backward/deque_iterators/1.cc: Likewise.\n\t* testsuite/23_containers/deque/requirements/dr438/assign_neg.cc:\n\tAdjust dg-error line number.\n\t* testsuite/23_containers/deque/requirements/dr438/insert_neg.cc:\n\tLikewise.\n\t* testsuite/23_containers/deque/requirements/dr438/\n\tconstructor_1_neg.cc: Likewise.\n\t* testsuite/23_containers/deque/requirements/dr438/\n\tconstructor_2_neg.cc: Likewise.\n\nFrom-SVN: r155455", "tree": {"sha": "7802a8769a22c29e7ebf14f12e1a286791cd9e30", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7802a8769a22c29e7ebf14f12e1a286791cd9e30"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0800b8ea794cfb5e7066a3b5128efb40b98a0ff6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0800b8ea794cfb5e7066a3b5128efb40b98a0ff6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0800b8ea794cfb5e7066a3b5128efb40b98a0ff6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0800b8ea794cfb5e7066a3b5128efb40b98a0ff6/comments", "author": null, "committer": null, "parents": [{"sha": "b114d73a7bf4a3ddcc7088da11f842233aecac0a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b114d73a7bf4a3ddcc7088da11f842233aecac0a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b114d73a7bf4a3ddcc7088da11f842233aecac0a"}], "stats": {"total": 295, "additions": 287, "deletions": 8}, "files": [{"sha": "4ca96b2878aa8cae671847132b0e1fb68280f1e5", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0800b8ea794cfb5e7066a3b5128efb40b98a0ff6/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0800b8ea794cfb5e7066a3b5128efb40b98a0ff6/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=0800b8ea794cfb5e7066a3b5128efb40b98a0ff6", "patch": "@@ -1,3 +1,22 @@\n+2009-12-24  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* include/bits/stl_deque.h (copy_backward(_Deque_iterator,\n+\t_Deque_iterator, _Deque_iterator), move_backward(_Deque_iterator,\n+\t_Deque_iterator, _Deque_iterator)): Declare.\n+\t* include/bits/deque.tcc: Implement the latter.\n+\t* testsuite/performance/25_algorithms/\n+\tcopy_backward_deque_iterators.cc: New.\n+\t* testsuite/25_algorithms/move_backward/deque_iterators/1.cc: Likewise.\n+\t* testsuite/25_algorithms/copy_backward/deque_iterators/1.cc: Likewise.\n+\t* testsuite/23_containers/deque/requirements/dr438/assign_neg.cc:\n+\tAdjust dg-error line number.\n+\t* testsuite/23_containers/deque/requirements/dr438/insert_neg.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/deque/requirements/dr438/\n+\tconstructor_1_neg.cc: Likewise.\n+\t* testsuite/23_containers/deque/requirements/dr438/\n+\tconstructor_2_neg.cc: Likewise.\n+\n 2009-12-23  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* testsuite/25_algorithms/copy/5.cc: Move..."}, {"sha": "cde067cf382c1da5aa4bc2573912b97bfeb74eee", "filename": "libstdc++-v3/include/bits/deque.tcc", "status": "modified", "additions": 84, "deletions": 4, "changes": 88, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0800b8ea794cfb5e7066a3b5128efb40b98a0ff6/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fdeque.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0800b8ea794cfb5e7066a3b5128efb40b98a0ff6/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fdeque.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fdeque.tcc?ref=0800b8ea794cfb5e7066a3b5128efb40b98a0ff6", "patch": "@@ -865,11 +865,12 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n \t _Deque_iterator<_Tp, _Tp&, _Tp*> __result)\n     {\n       typedef typename _Deque_iterator<_Tp, _Tp&, _Tp*>::_Self _Self;\n+      typedef typename _Self::difference_type difference_type;\n \n-      typename _Self::difference_type __len = __last - __first;\n+      difference_type __len = __last - __first;\n       while (__len > 0)\n \t{\n-\t  typename _Self::difference_type __clen\n+\t  const difference_type __clen\n \t    = std::min(__len, std::min(__first._M_last - __first._M_cur,\n \t\t\t\t       __result._M_last - __result._M_cur));\n \t  std::copy(__first._M_cur, __first._M_cur + __clen, __result._M_cur);\n@@ -880,6 +881,45 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n       return __result;\n     }\n \n+  template<typename _Tp>\n+    _Deque_iterator<_Tp, _Tp&, _Tp*>\n+    copy_backward(_Deque_iterator<_Tp, const _Tp&, const _Tp*> __first,\n+\t\t  _Deque_iterator<_Tp, const _Tp&, const _Tp*> __last,\n+\t\t  _Deque_iterator<_Tp, _Tp&, _Tp*> __result)\n+    {\n+      typedef typename _Deque_iterator<_Tp, _Tp&, _Tp*>::_Self _Self;\n+      typedef typename _Self::difference_type difference_type;\n+\n+      difference_type __len = __last - __first;\n+      while (__len > 0)\n+\t{\n+\t  difference_type __llen = __last._M_cur - __last._M_first;\n+\t  _Tp* __lend = __last._M_cur;\n+\n+\t  difference_type __rlen = __result._M_cur - __result._M_first;\n+\t  _Tp* __rend = __result._M_cur;\n+\n+\t  if (!__llen)\n+\t    {\n+\t      __llen = _Self::_S_buffer_size();\n+\t      __lend = *(__last._M_node - 1) + __llen;\n+\t    }\n+\t  if (!__rlen)\n+\t    {\n+\t      __rlen = _Self::_S_buffer_size();\n+\t      __rend = *(__result._M_node - 1) + __rlen;\n+\t    }\n+\n+\t  const difference_type __clen = std::min(__len,\n+\t\t\t\t\t\t  std::min(__llen, __rlen));\n+\t  std::copy_backward(__lend - __clen, __lend, __rend);\n+\t  __last -= __clen;\n+\t  __result -= __clen;\n+\t  __len -= __clen;\n+\t}\n+      return __result;\n+    }\n+\n #ifdef __GXX_EXPERIMENTAL_CXX0X__\n   template<typename _Tp>\n     _Deque_iterator<_Tp, _Tp&, _Tp*>\n@@ -888,11 +928,12 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n \t _Deque_iterator<_Tp, _Tp&, _Tp*> __result)\n     {\n       typedef typename _Deque_iterator<_Tp, _Tp&, _Tp*>::_Self _Self;\n+      typedef typename _Self::difference_type difference_type;\n \n-      typename _Self::difference_type __len = __last - __first;\n+      difference_type __len = __last - __first;\n       while (__len > 0)\n \t{\n-\t  const typename _Self::difference_type __clen\n+\t  const difference_type __clen\n \t    = std::min(__len, std::min(__first._M_last - __first._M_cur,\n \t\t\t\t       __result._M_last - __result._M_cur));\n \t  std::move(__first._M_cur, __first._M_cur + __clen, __result._M_cur);\n@@ -902,6 +943,45 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n \t}\n       return __result;\n     }\n+\n+  template<typename _Tp>\n+    _Deque_iterator<_Tp, _Tp&, _Tp*>\n+    move_backward(_Deque_iterator<_Tp, const _Tp&, const _Tp*> __first,\n+\t\t  _Deque_iterator<_Tp, const _Tp&, const _Tp*> __last,\n+\t\t  _Deque_iterator<_Tp, _Tp&, _Tp*> __result)\n+    {\n+      typedef typename _Deque_iterator<_Tp, _Tp&, _Tp*>::_Self _Self;\n+      typedef typename _Self::difference_type difference_type;\n+\n+      difference_type __len = __last - __first;\n+      while (__len > 0)\n+\t{\n+\t  difference_type __llen = __last._M_cur - __last._M_first;\n+\t  _Tp* __lend = __last._M_cur;\n+\n+\t  difference_type __rlen = __result._M_cur - __result._M_first;\n+\t  _Tp* __rend = __result._M_cur;\n+\n+\t  if (!__llen)\n+\t    {\n+\t      __llen = _Self::_S_buffer_size();\n+\t      __lend = *(__last._M_node - 1) + __llen;\n+\t    }\n+\t  if (!__rlen)\n+\t    {\n+\t      __rlen = _Self::_S_buffer_size();\n+\t      __rend = *(__result._M_node - 1) + __rlen;\n+\t    }\n+\n+\t  const difference_type __clen = std::min(__len,\n+\t\t\t\t\t\t  std::min(__llen, __rlen));\n+\t  std::move_backward(__lend - __clen, __lend, __rend);\n+\t  __last -= __clen;\n+\t  __result -= __clen;\n+\t  __len -= __clen;\n+\t}\n+      return __result;\n+    }\n #endif\n \n _GLIBCXX_END_NESTED_NAMESPACE"}, {"sha": "647d5476874381652dc559710acdf0049095fcf0", "filename": "libstdc++-v3/include/bits/stl_deque.h", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0800b8ea794cfb5e7066a3b5128efb40b98a0ff6/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_deque.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0800b8ea794cfb5e7066a3b5128efb40b98a0ff6/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_deque.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_deque.h?ref=0800b8ea794cfb5e7066a3b5128efb40b98a0ff6", "patch": "@@ -370,6 +370,23 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n \t\t       _Deque_iterator<_Tp, const _Tp&, const _Tp*>(__last),\n \t\t       __result); }\n \n+  template<typename _Tp>\n+    _Deque_iterator<_Tp, _Tp&, _Tp*>\n+    copy_backward(_Deque_iterator<_Tp, const _Tp&, const _Tp*>,\n+\t\t  _Deque_iterator<_Tp, const _Tp&, const _Tp*>,\n+\t\t  _Deque_iterator<_Tp, _Tp&, _Tp*>);\n+\n+  template<typename _Tp>\n+    inline _Deque_iterator<_Tp, _Tp&, _Tp*>\n+    copy_backward(_Deque_iterator<_Tp, _Tp&, _Tp*> __first,\n+\t\t  _Deque_iterator<_Tp, _Tp&, _Tp*> __last,\n+\t\t  _Deque_iterator<_Tp, _Tp&, _Tp*> __result)\n+    { return std::copy_backward(_Deque_iterator<_Tp,\n+\t\t\t\tconst _Tp&, const _Tp*>(__first),\n+\t\t\t\t_Deque_iterator<_Tp,\n+\t\t\t\tconst _Tp&, const _Tp*>(__last),\n+\t\t\t\t__result); }\n+\n #ifdef __GXX_EXPERIMENTAL_CXX0X__\n   template<typename _Tp>\n     _Deque_iterator<_Tp, _Tp&, _Tp*>\n@@ -385,6 +402,23 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n     { return std::move(_Deque_iterator<_Tp, const _Tp&, const _Tp*>(__first),\n \t\t       _Deque_iterator<_Tp, const _Tp&, const _Tp*>(__last),\n \t\t       __result); }\n+\n+  template<typename _Tp>\n+    _Deque_iterator<_Tp, _Tp&, _Tp*>\n+    move_backward(_Deque_iterator<_Tp, const _Tp&, const _Tp*>,\n+\t\t  _Deque_iterator<_Tp, const _Tp&, const _Tp*>,\n+\t\t  _Deque_iterator<_Tp, _Tp&, _Tp*>);\n+\n+  template<typename _Tp>\n+    inline _Deque_iterator<_Tp, _Tp&, _Tp*>\n+    move_backward(_Deque_iterator<_Tp, _Tp&, _Tp*> __first,\n+\t\t  _Deque_iterator<_Tp, _Tp&, _Tp*> __last,\n+\t\t  _Deque_iterator<_Tp, _Tp&, _Tp*> __result)\n+    { return std::move_backward(_Deque_iterator<_Tp,\n+\t\t\t\tconst _Tp&, const _Tp*>(__first),\n+\t\t\t\t_Deque_iterator<_Tp,\n+\t\t\t\tconst _Tp&, const _Tp*>(__last),\n+\t\t\t\t__result); }\n #endif\n \n   /**"}, {"sha": "0b948aed7fbf426e3e2808662507d86514395d78", "filename": "libstdc++-v3/testsuite/23_containers/deque/requirements/dr438/assign_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0800b8ea794cfb5e7066a3b5128efb40b98a0ff6/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Fassign_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0800b8ea794cfb5e7066a3b5128efb40b98a0ff6/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Fassign_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Fassign_neg.cc?ref=0800b8ea794cfb5e7066a3b5128efb40b98a0ff6", "patch": "@@ -18,7 +18,7 @@\n // <http://www.gnu.org/licenses/>.\n \n // { dg-do compile }\n-// { dg-error \"no matching\" \"\" { target *-*-* } 1534 }\n+// { dg-error \"no matching\" \"\" { target *-*-* } 1568 }\n // { dg-excess-errors \"\" }\n \n #include <deque>"}, {"sha": "2f88aa8eb8035d3a88237f97130975dc432eea95", "filename": "libstdc++-v3/testsuite/23_containers/deque/requirements/dr438/constructor_1_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0800b8ea794cfb5e7066a3b5128efb40b98a0ff6/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Fconstructor_1_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0800b8ea794cfb5e7066a3b5128efb40b98a0ff6/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Fconstructor_1_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Fconstructor_1_neg.cc?ref=0800b8ea794cfb5e7066a3b5128efb40b98a0ff6", "patch": "@@ -18,7 +18,7 @@\n // <http://www.gnu.org/licenses/>.\n \n // { dg-do compile }\n-// { dg-error \"no matching\" \"\" { target *-*-* } 1473 }\n+// { dg-error \"no matching\" \"\" { target *-*-* } 1507 }\n // { dg-excess-errors \"\" }\n \n #include <deque>"}, {"sha": "3895d1e875866c350470381fdc56003a73c44d89", "filename": "libstdc++-v3/testsuite/23_containers/deque/requirements/dr438/constructor_2_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0800b8ea794cfb5e7066a3b5128efb40b98a0ff6/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Fconstructor_2_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0800b8ea794cfb5e7066a3b5128efb40b98a0ff6/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Fconstructor_2_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Fconstructor_2_neg.cc?ref=0800b8ea794cfb5e7066a3b5128efb40b98a0ff6", "patch": "@@ -18,7 +18,7 @@\n // <http://www.gnu.org/licenses/>.\n \n // { dg-do compile }\n-// { dg-error \"no matching\" \"\" { target *-*-* } 1473 }\n+// { dg-error \"no matching\" \"\" { target *-*-* } 1507 }\n // { dg-excess-errors \"\" }\n \n #include <deque>"}, {"sha": "50d8d4657a13b416a69c8fd4507d027ac5e9f839", "filename": "libstdc++-v3/testsuite/23_containers/deque/requirements/dr438/insert_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0800b8ea794cfb5e7066a3b5128efb40b98a0ff6/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Finsert_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0800b8ea794cfb5e7066a3b5128efb40b98a0ff6/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Finsert_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Finsert_neg.cc?ref=0800b8ea794cfb5e7066a3b5128efb40b98a0ff6", "patch": "@@ -18,7 +18,7 @@\n // <http://www.gnu.org/licenses/>.\n \n // { dg-do compile }\n-// { dg-error \"no matching\" \"\" { target *-*-* } 1618 }\n+// { dg-error \"no matching\" \"\" { target *-*-* } 1652 }\n // { dg-excess-errors \"\" }\n \n #include <deque>"}, {"sha": "57405cc80e88459b98279410327f1a0eab188960", "filename": "libstdc++-v3/testsuite/25_algorithms/copy_backward/deque_iterators/1.cc", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0800b8ea794cfb5e7066a3b5128efb40b98a0ff6/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fcopy_backward%2Fdeque_iterators%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0800b8ea794cfb5e7066a3b5128efb40b98a0ff6/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fcopy_backward%2Fdeque_iterators%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fcopy_backward%2Fdeque_iterators%2F1.cc?ref=0800b8ea794cfb5e7066a3b5128efb40b98a0ff6", "patch": "@@ -0,0 +1,52 @@\n+// 2009-12-24  Paolo Carlini  <paolo.carlini@oracle.com>\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without Pred the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <algorithm>\n+#include <deque>\n+#include <testsuite_hooks.h>\n+\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+  using namespace std;\n+\n+  deque<long> data(200);\n+  for (unsigned i = 0; i < data.size(); ++i)\n+    data[i] = i;\n+\n+  const deque<long> data_1(data.size(), -1);\n+\n+  for (unsigned i = 0; i < data.size(); i += 2)\n+    for (unsigned j = i; j <= data.size(); j += 3)\n+      for (unsigned k = 0; k + (j - i) <= data.size(); k += 5)\n+\t{\n+\t  deque<long> d(data.size(), -1);\n+\t  copy_backward(data.begin() + i, data.begin() + j,\n+\t\t\td.begin() + k + (j - i));\n+\n+\t  VERIFY( equal(data.begin() + i, data.begin() + j,\n+\t\t\td.begin() + k) );\n+\t  VERIFY( equal(d.begin(), d.begin() + k, data_1.begin()) );\n+\t  VERIFY( equal(d.begin() + k + (j - i), d.end(), data_1.begin()) );\n+\t}\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "9a8ba71206f2b3e31baf1fb6c8b76febec81d12d", "filename": "libstdc++-v3/testsuite/25_algorithms/move_backward/deque_iterators/1.cc", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0800b8ea794cfb5e7066a3b5128efb40b98a0ff6/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fmove_backward%2Fdeque_iterators%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0800b8ea794cfb5e7066a3b5128efb40b98a0ff6/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fmove_backward%2Fdeque_iterators%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fmove_backward%2Fdeque_iterators%2F1.cc?ref=0800b8ea794cfb5e7066a3b5128efb40b98a0ff6", "patch": "@@ -0,0 +1,54 @@\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// 2009-12-24  Paolo Carlini  <paolo.carlini@oracle.com>\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without Pred the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <algorithm>\n+#include <deque>\n+#include <testsuite_hooks.h>\n+\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+  using namespace std;\n+\n+  deque<long> data(200);\n+  for (unsigned i = 0; i < data.size(); ++i)\n+    data[i] = i;\n+\n+  const deque<long> data_1(data.size(), -1);\n+\n+  for (unsigned i = 0; i < data.size(); i += 2)\n+    for (unsigned j = i; j <= data.size(); j += 3)\n+      for (unsigned k = 0; k + (j - i) <= data.size(); k += 5)\n+\t{\n+\t  deque<long> d(data.size(), -1);\n+\t  move_backward(data.begin() + i, data.begin() + j,\n+\t\t\td.begin() + k + (j - i));\n+\n+\t  VERIFY( equal(data.begin() + i, data.begin() + j,\n+\t\t\td.begin() + k) );\n+\t  VERIFY( equal(d.begin(), d.begin() + k, data_1.begin()) );\n+\t  VERIFY( equal(d.begin() + k + (j - i), d.end(), data_1.begin()) );\n+\t}\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "c7dbdc006c2133eb772493869c8d92d69b2a020e", "filename": "libstdc++-v3/testsuite/performance/25_algorithms/copy_backward_deque_iterators.cc", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0800b8ea794cfb5e7066a3b5128efb40b98a0ff6/libstdc%2B%2B-v3%2Ftestsuite%2Fperformance%2F25_algorithms%2Fcopy_backward_deque_iterators.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0800b8ea794cfb5e7066a3b5128efb40b98a0ff6/libstdc%2B%2B-v3%2Ftestsuite%2Fperformance%2F25_algorithms%2Fcopy_backward_deque_iterators.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fperformance%2F25_algorithms%2Fcopy_backward_deque_iterators.cc?ref=0800b8ea794cfb5e7066a3b5128efb40b98a0ff6", "patch": "@@ -0,0 +1,40 @@\n+// 2009-24-12  Paolo Carlini  <paolo.carlini@oracle.com>\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without Pred the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <deque>\n+#include <testsuite_performance.h>\n+\n+int main()\n+{\n+  using namespace __gnu_test;\n+\n+  time_counter time;\n+  resource_counter resource;\n+\n+  const std::deque<int> data(3000, 3);\n+\n+  std::deque<int> d(3000, 1);\n+\n+  start_counters(time, resource);\n+  for (int i = 0; i < 1000; ++i)\n+    for (int j = 0; j < 3000; ++j)\n+      std::copy_backward(data.begin(), data.begin() + j, d.end());\n+  stop_counters(time, resource);\n+  report_performance(__FILE__, \"\", time, resource);\n+\n+  return 0;\n+}"}]}