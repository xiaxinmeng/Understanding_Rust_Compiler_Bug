{"sha": "50e159f65532eb334dc2b12210acdc9ab0f334cf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTBlMTU5ZjY1NTMyZWIzMzRkYzJiMTIyMTBhY2RjOWFiMGYzMzRjZg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@casey.cygnus.com", "date": "1999-11-25T02:33:31Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1999-11-25T02:33:31Z"}, "message": "search.c (note_debug_info_needed): Do perform this optimization for dwarf2.\n\n        * search.c (note_debug_info_needed): Do perform this optimization\n        for dwarf2.\n        (maybe_suppress_debug_info): Likewise.  Start by clearing\n        TYPE_DECL_SUPPRESS_DEBUG.\n\nFrom-SVN: r30658", "tree": {"sha": "eb375d133be007843883038588274884865a19eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eb375d133be007843883038588274884865a19eb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/50e159f65532eb334dc2b12210acdc9ab0f334cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50e159f65532eb334dc2b12210acdc9ab0f334cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50e159f65532eb334dc2b12210acdc9ab0f334cf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50e159f65532eb334dc2b12210acdc9ab0f334cf/comments", "author": null, "committer": null, "parents": [{"sha": "9a260e9924e983c75b69431c202c960e8671829b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a260e9924e983c75b69431c202c960e8671829b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a260e9924e983c75b69431c202c960e8671829b"}], "stats": {"total": 36, "additions": 24, "deletions": 12}, "files": [{"sha": "f089e4fffe87c1662a876c1012c2e95fdcb24ea4", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50e159f65532eb334dc2b12210acdc9ab0f334cf/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50e159f65532eb334dc2b12210acdc9ab0f334cf/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=50e159f65532eb334dc2b12210acdc9ab0f334cf", "patch": "@@ -1,3 +1,10 @@\n+1999-11-24  Jason Merrill  <jason@casey.cygnus.com>\n+\n+\t* search.c (note_debug_info_needed): Do perform this optimization\n+\tfor dwarf2.  \n+\t(maybe_suppress_debug_info): Likewise.  Start by clearing\n+\tTYPE_DECL_SUPPRESS_DEBUG.\n+\n 1999-11-24  Mark Mitchell  <mark@codesourcery.com>\n \n \t* pt.c (tsubst_decl): Copy TREE_ASM_WRITTEN for VAR_DECLs."}, {"sha": "ec2594c8a94ab4ffe403ac363d4178c9a791ec57", "filename": "gcc/cp/search.c", "status": "modified", "additions": 17, "deletions": 12, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50e159f65532eb334dc2b12210acdc9ab0f334cf/gcc%2Fcp%2Fsearch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50e159f65532eb334dc2b12210acdc9ab0f334cf/gcc%2Fcp%2Fsearch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsearch.c?ref=50e159f65532eb334dc2b12210acdc9ab0f334cf", "patch": "@@ -2912,19 +2912,28 @@ get_vbase_types (type)\n /* Debug info for C++ classes can get very large; try to avoid\n    emitting it everywhere.\n \n-   As it happens, this optimization wins even when the target supports\n-   BINCL (though only slightly), so we always do it. */\n+   Note that this optimization wins even when the target supports\n+   BINCL (if only slightly), and reduces the amount of work for the\n+   linker.  */\n \n void\n maybe_suppress_debug_info (t)\n      tree t;\n {\n-  /* We don't bother with this for dwarf1, which shouldn't be used for C++\n-     anyway.  */\n-  if (write_symbols == DWARF_DEBUG || write_symbols == DWARF2_DEBUG\n-      || write_symbols == NO_DEBUG)\n+  /* We can't do the usual TYPE_DECL_SUPPRESS_DEBUG thing with DWARF, which\n+     does not support name references between translation units.  It supports\n+     symbolic references between translation units, but only within a single\n+     executable or shared library.\n+\n+     For DWARF 2, we handle TYPE_DECL_SUPPRESS_DEBUG by pretending\n+     that the type was never defined, so we only get the members we\n+     actually define.  */\n+  if (write_symbols == DWARF_DEBUG || write_symbols == NO_DEBUG)\n     return;\n \n+  /* We might have set this earlier in cp_finish_decl.  */\n+  TYPE_DECL_SUPPRESS_DEBUG (TYPE_MAIN_DECL (t)) = 0;\n+\n   /* If we already know how we're handling this class, handle debug info\n      the same way.  */\n   if (CLASSTYPE_INTERFACE_ONLY (t))\n@@ -2962,12 +2971,8 @@ note_debug_info_needed (type)\n     /* We can't go looking for the base types and fields just yet.  */\n     return;\n \n-  /* We can't do the TYPE_DECL_SUPPRESS_DEBUG thing with DWARF, which\n-     does not support name references between translation units.  It supports\n-     symbolic references between translation units, but only within a single\n-     executable or shared library.  */\n-  if (write_symbols == DWARF_DEBUG || write_symbols == DWARF2_DEBUG\n-      || write_symbols == NO_DEBUG)\n+  /* See the comment in maybe_suppress_debug_info.  */\n+  if (write_symbols == DWARF_DEBUG || write_symbols == NO_DEBUG)\n     return;\n \n   dfs_walk (TYPE_BINFO (type), dfs_debug_mark, dfs_debug_unmarkedp, 0);"}]}