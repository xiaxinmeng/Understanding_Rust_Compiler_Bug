{"sha": "dc084c487e997e7f47cee55467628ade4488538b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGMwODRjNDg3ZTk5N2U3ZjQ3Y2VlNTU0Njc2MjhhZGU0NDg4NTM4Yg==", "commit": {"author": {"name": "liuhongt", "email": "hongtao.liu@intel.com", "date": "2021-05-20T01:59:36Z"}, "committer": {"name": "liuhongt", "email": "hongtao.liu@intel.com", "date": "2021-05-24T01:21:21Z"}, "message": "Fix ICE when lhs is NULL.\n\ngcc/ChangeLog:\n\tPR target/100660\n\t* config/i386/i386.c (ix86_gimple_fold_builtin): Replacing\n\tstmt with GIMPLE_NOP when lhs doesn't exist.\n\ngcc/testsuite/ChangeLog:\n\tPR target/100660\n\t* gcc.target/i386/pr100660.c: New test.", "tree": {"sha": "0b3ab11dbc08eac038d2a986cbe27c136d02ba6d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0b3ab11dbc08eac038d2a986cbe27c136d02ba6d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dc084c487e997e7f47cee55467628ade4488538b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc084c487e997e7f47cee55467628ade4488538b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc084c487e997e7f47cee55467628ade4488538b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc084c487e997e7f47cee55467628ade4488538b/comments", "author": {"login": "algebra84", "id": 22926165, "node_id": "MDQ6VXNlcjIyOTI2MTY1", "avatar_url": "https://avatars.githubusercontent.com/u/22926165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/algebra84", "html_url": "https://github.com/algebra84", "followers_url": "https://api.github.com/users/algebra84/followers", "following_url": "https://api.github.com/users/algebra84/following{/other_user}", "gists_url": "https://api.github.com/users/algebra84/gists{/gist_id}", "starred_url": "https://api.github.com/users/algebra84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/algebra84/subscriptions", "organizations_url": "https://api.github.com/users/algebra84/orgs", "repos_url": "https://api.github.com/users/algebra84/repos", "events_url": "https://api.github.com/users/algebra84/events{/privacy}", "received_events_url": "https://api.github.com/users/algebra84/received_events", "type": "User", "site_admin": false}, "committer": {"login": "algebra84", "id": 22926165, "node_id": "MDQ6VXNlcjIyOTI2MTY1", "avatar_url": "https://avatars.githubusercontent.com/u/22926165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/algebra84", "html_url": "https://github.com/algebra84", "followers_url": "https://api.github.com/users/algebra84/followers", "following_url": "https://api.github.com/users/algebra84/following{/other_user}", "gists_url": "https://api.github.com/users/algebra84/gists{/gist_id}", "starred_url": "https://api.github.com/users/algebra84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/algebra84/subscriptions", "organizations_url": "https://api.github.com/users/algebra84/orgs", "repos_url": "https://api.github.com/users/algebra84/repos", "events_url": "https://api.github.com/users/algebra84/events{/privacy}", "received_events_url": "https://api.github.com/users/algebra84/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1040a44aa23f7b106e1c96e6a247ea6fd4021258", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1040a44aa23f7b106e1c96e6a247ea6fd4021258", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1040a44aa23f7b106e1c96e6a247ea6fd4021258"}], "stats": {"total": 43, "additions": 28, "deletions": 15}, "files": [{"sha": "28e6113a609c42fa7e0570f7f61bf39653ec251a", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 18, "deletions": 15, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc084c487e997e7f47cee55467628ade4488538b/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc084c487e997e7f47cee55467628ade4488538b/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=dc084c487e997e7f47cee55467628ade4488538b", "patch": "@@ -17991,21 +17991,24 @@ ix86_gimple_fold_builtin (gimple_stmt_iterator *gsi)\n       gcc_assert (n_args == 2);\n       arg0 = gimple_call_arg (stmt, 0);\n       arg1 = gimple_call_arg (stmt, 1);\n-      {\n-\tlocation_t loc = gimple_location (stmt);\n-\ttree type = TREE_TYPE (arg0);\n-\ttree zero_vec = build_zero_cst (type);\n-\ttree minus_one_vec = build_minus_one_cst (type);\n-\ttree cmp_type = truth_type_for (type);\n-\tgimple_seq stmts = NULL;\n-\ttree cmp = gimple_build (&stmts, tcode, cmp_type, arg0, arg1);\n-\tgsi_insert_seq_before (gsi, stmts, GSI_SAME_STMT);\n-\tgimple* g = gimple_build_assign (gimple_call_lhs (stmt),\n-\t\t\t\t\t VEC_COND_EXPR, cmp,\n-\t\t\t\t\t minus_one_vec, zero_vec);\n-\tgimple_set_location (g, loc);\n-\tgsi_replace (gsi, g, false);\n-      }\n+      if (gimple_call_lhs (stmt))\n+\t{\n+\t  location_t loc = gimple_location (stmt);\n+\t  tree type = TREE_TYPE (arg0);\n+\t  tree zero_vec = build_zero_cst (type);\n+\t  tree minus_one_vec = build_minus_one_cst (type);\n+\t  tree cmp_type = truth_type_for (type);\n+\t  gimple_seq stmts = NULL;\n+\t  tree cmp = gimple_build (&stmts, tcode, cmp_type, arg0, arg1);\n+\t  gsi_insert_seq_before (gsi, stmts, GSI_SAME_STMT);\n+\t  gimple* g = gimple_build_assign (gimple_call_lhs (stmt),\n+\t\t\t\t\t   VEC_COND_EXPR, cmp,\n+\t\t\t\t\t   minus_one_vec, zero_vec);\n+\t  gimple_set_location (g, loc);\n+\t  gsi_replace (gsi, g, false);\n+\t}\n+      else\n+\tgsi_replace (gsi, gimple_build_nop (), false);\n       return true;\n \n     case IX86_BUILTIN_PSLLD:"}, {"sha": "1112b7427795caaa068db626e19c2d72b6eb24a5", "filename": "gcc/testsuite/gcc.target/i386/pr100660.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc084c487e997e7f47cee55467628ade4488538b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr100660.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc084c487e997e7f47cee55467628ade4488538b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr100660.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr100660.c?ref=dc084c487e997e7f47cee55467628ade4488538b", "patch": "@@ -0,0 +1,10 @@\n+/* PR target/pr100660.  */\n+/* { dg-do compile } */\n+/* { dg-options \"-mavx2 -O\" } */\n+\n+typedef char v16qi __attribute__ ((vector_size (16)));\n+v16qi\n+f5 (v16qi a, v16qi b)\n+{\n+  __builtin_ia32_pcmpgtb128 (a, b);\n+}"}]}