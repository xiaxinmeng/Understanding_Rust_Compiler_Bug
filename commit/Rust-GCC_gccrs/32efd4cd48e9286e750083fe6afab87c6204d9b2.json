{"sha": "32efd4cd48e9286e750083fe6afab87c6204d9b2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzJlZmQ0Y2Q0OGU5Mjg2ZTc1MDA4M2ZlNmFmYWI4N2M2MjA0ZDliMg==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2005-02-21T16:12:17Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2005-02-21T16:12:17Z"}, "message": "Button.java, [...]: Fixed formatting issues all over.\n\n2005-02-21  Michael Koch  <konqueror@gmx.de>\n\n\t* java/awt/Button.java,\n\tjava/awt/Container.java,\n\tjava/awt/Font.java,\n\tjava/awt/Frame.java,\n\tjava/text/CollationElementIterator.java,\n\tjava/text/RuleBasedCollator.java,\n\tjava/util/PropertyPermission.java:\n\tFixed formatting issues all over.\n\nFrom-SVN: r95333", "tree": {"sha": "b19a1358f524d9121f633ea6b89bb0191bd306eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b19a1358f524d9121f633ea6b89bb0191bd306eb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/32efd4cd48e9286e750083fe6afab87c6204d9b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32efd4cd48e9286e750083fe6afab87c6204d9b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/32efd4cd48e9286e750083fe6afab87c6204d9b2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32efd4cd48e9286e750083fe6afab87c6204d9b2/comments", "author": null, "committer": null, "parents": [{"sha": "40cd9e66faa14ab388ea0f106ef9b585f8d75b7e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40cd9e66faa14ab388ea0f106ef9b585f8d75b7e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40cd9e66faa14ab388ea0f106ef9b585f8d75b7e"}], "stats": {"total": 189, "additions": 115, "deletions": 74}, "files": [{"sha": "3407bf91d2c834d9a80c28e9877952034c1ce6b5", "filename": "libjava/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32efd4cd48e9286e750083fe6afab87c6204d9b2/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32efd4cd48e9286e750083fe6afab87c6204d9b2/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=32efd4cd48e9286e750083fe6afab87c6204d9b2", "patch": "@@ -1,3 +1,14 @@\n+2005-02-21  Michael Koch  <konqueror@gmx.de>\n+\n+\t* java/awt/Button.java,\n+\tjava/awt/Container.java,\n+\tjava/awt/Font.java,\n+\tjava/awt/Frame.java,\n+\tjava/text/CollationElementIterator.java,\n+\tjava/text/RuleBasedCollator.java,\n+\tjava/util/PropertyPermission.java:\n+\tFixed formatting issues all over.\n+\n 2005-02-21  Mark Wielaard  <mark@klomp.org>\n \n \t* java/io/FileDescriptor.java (sync): Add real exception to"}, {"sha": "eb0fe3b7a2032870ee40b088b4e62901f9d04c38", "filename": "libjava/java/awt/Button.java", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32efd4cd48e9286e750083fe6afab87c6204d9b2/libjava%2Fjava%2Fawt%2FButton.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32efd4cd48e9286e750083fe6afab87c6204d9b2/libjava%2Fjava%2Fawt%2FButton.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FButton.java?ref=32efd4cd48e9286e750083fe6afab87c6204d9b2", "patch": "@@ -96,7 +96,10 @@ public class Button extends Component\n   protected class AccessibleAWTButton extends AccessibleAWTComponent\n     implements AccessibleAction, AccessibleValue\n   {\n-    protected AccessibleAWTButton() { }\n+    protected AccessibleAWTButton()\n+    {\n+      // Do nothing here.\n+    }\n \n     /* (non-Javadoc)\n      * @see javax.accessibility.AccessibleAction#getAccessibleActionCount()"}, {"sha": "cd7fec02ecbbfce0588957fb69bf6ef2b6126422", "filename": "libjava/java/awt/Container.java", "status": "modified", "additions": 20, "deletions": 4, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32efd4cd48e9286e750083fe6afab87c6204d9b2/libjava%2Fjava%2Fawt%2FContainer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32efd4cd48e9286e750083fe6afab87c6204d9b2/libjava%2Fjava%2Fawt%2FContainer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FContainer.java?ref=32efd4cd48e9286e750083fe6afab87c6204d9b2", "patch": "@@ -1686,26 +1686,42 @@ private void writeObject (ObjectOutputStream s) throws IOException\n \n   static class GfxPaintVisitor extends GfxVisitor\n   {\n-    public void visit(Component c, Graphics gfx) { c.paint(gfx); }\n     public static final GfxVisitor INSTANCE = new GfxPaintVisitor();\n+    \n+    public void visit(Component c, Graphics gfx)\n+    {\n+      c.paint(gfx);\n+    }\n   }\n \n   static class GfxPrintVisitor extends GfxVisitor\n   {\n-    public void visit(Component c, Graphics gfx) { c.print(gfx); }\n     public static final GfxVisitor INSTANCE = new GfxPrintVisitor();\n+    \n+    public void visit(Component c, Graphics gfx)\n+    {\n+      c.print(gfx);\n+    }\n   }\n \n   static class GfxPaintAllVisitor extends GfxVisitor\n   {\n-    public void visit(Component c, Graphics gfx) { c.paintAll(gfx); }\n     public static final GfxVisitor INSTANCE = new GfxPaintAllVisitor();\n+\n+    public void visit(Component c, Graphics gfx)\n+    {\n+      c.paintAll(gfx);\n+    }\n   }\n \n   static class GfxPrintAllVisitor extends GfxVisitor\n   {\n-    public void visit(Component c, Graphics gfx) { c.printAll(gfx); }\n     public static final GfxVisitor INSTANCE = new GfxPrintAllVisitor();\n+\n+    public void visit(Component c, Graphics gfx)\n+    {\n+      c.printAll(gfx);\n+    }\n   }\n \n   /**"}, {"sha": "c43297759caa974d2eeb70f68f227bc26d106348", "filename": "libjava/java/awt/Font.java", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32efd4cd48e9286e750083fe6afab87c6204d9b2/libjava%2Fjava%2Fawt%2FFont.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32efd4cd48e9286e750083fe6afab87c6204d9b2/libjava%2Fjava%2Fawt%2FFont.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FFont.java?ref=32efd4cd48e9286e750083fe6afab87c6204d9b2", "patch": "@@ -1,5 +1,5 @@\n /* Font.java -- Font object\n-   Copyright (C) 1999, 2002, 2004 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2002, 2004, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -247,7 +247,10 @@ public static Font decode (String fontspec)\n         {\n           tokenval = Integer.parseInt(token);\n         }\n-      catch(NumberFormatException e) { ; }\n+      catch(NumberFormatException e)\n+        {\n+\t  // Ignored.\n+\t}\n \n       if (tokenval != 0)\n         size = tokenval;"}, {"sha": "d180984ab9d539e93634a7b0f99bde824bc7cc91", "filename": "libjava/java/awt/Frame.java", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32efd4cd48e9286e750083fe6afab87c6204d9b2/libjava%2Fjava%2Fawt%2FFrame.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32efd4cd48e9286e750083fe6afab87c6204d9b2/libjava%2Fjava%2Fawt%2FFrame.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FFrame.java?ref=32efd4cd48e9286e750083fe6afab87c6204d9b2", "patch": "@@ -1,5 +1,5 @@\n /* Frame.java -- AWT toplevel window\n-   Copyright (C) 1999, 2000, 2002, 2004 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2000, 2002, 2004, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -403,10 +403,15 @@ public class Frame extends Window implements MenuContainer\n /**\n   * Notifies this frame that it should create its native peer.\n   */\n-\n private static void fireDummyEvent()\n {\n-  EventQueue.invokeLater(new Runnable() { public void run() { } });\n+  EventQueue.invokeLater(new Runnable()\n+    {\n+      public void run()\n+      {\n+\t// Do nothing here.\n+      }\n+    });\n }\n \n public void"}, {"sha": "481b286c4797b018d58888835240eb3303498d57", "filename": "libjava/java/text/CollationElementIterator.java", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32efd4cd48e9286e750083fe6afab87c6204d9b2/libjava%2Fjava%2Ftext%2FCollationElementIterator.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32efd4cd48e9286e750083fe6afab87c6204d9b2/libjava%2Fjava%2Ftext%2FCollationElementIterator.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Ftext%2FCollationElementIterator.java?ref=32efd4cd48e9286e750083fe6afab87c6204d9b2", "patch": "@@ -369,8 +369,9 @@ public void setText(String text)\n \t\t    idx_idx += idxToMove;\n \t\t    idxToMove = 0;\n \t\t  }\n-\t      } else\n-\t\tidx_idx += prefix.key.length();\n+\t      }\n+\t    else\n+\t      idx_idx += prefix.key.length();\n \t  }\n       }\n     "}, {"sha": "afb766ff8ae7e3833d27c7cba86c2164128ed7c6", "filename": "libjava/java/text/RuleBasedCollator.java", "status": "modified", "additions": 51, "deletions": 50, "changes": 101, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32efd4cd48e9286e750083fe6afab87c6204d9b2/libjava%2Fjava%2Ftext%2FRuleBasedCollator.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32efd4cd48e9286e750083fe6afab87c6204d9b2/libjava%2Fjava%2Ftext%2FRuleBasedCollator.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Ftext%2FRuleBasedCollator.java?ref=32efd4cd48e9286e750083fe6afab87c6204d9b2", "patch": "@@ -1,5 +1,5 @@\n /* RuleBasedCollator.java -- Concrete Collator Class\n-   Copyright (C) 1998, 1999, 2000, 2001, 2003, 2004  Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2000, 2001, 2003, 2004, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -435,56 +435,57 @@ private int subParseString(boolean stop_on_reset, ArrayList v,\n \t    continue;\n \t  }\n \n-\tswitch (c) {\n-\tcase '!':\n-\t  throw new ParseException\n-\t    (\"Modifier '!' is not yet supported by Classpath\", i+base_offset);\n-\tcase '<':\n-\t  type = CollationSorter.GREATERP;\n-\t  break;\n-\tcase ';':\n-\t  type = CollationSorter.GREATERS;\n-\t  break;\n-\tcase ',':\n-\t  type = CollationSorter.GREATERT;\n-\t  break;\n-\tcase '=':\n-\t  type = CollationSorter.EQUAL;\n-\t  break;\n-\tcase '\\'':\n-\t  eatingChars = !eatingChars;\n-\t  doubleQuote = true;\n-\t  break;\n-\tcase '@':\n-\t  if (ignoreChars)\n-\t    throw new ParseException\n-\t      (\"comparison list has not yet been started. You may only use\"\n-\t       + \"(<,;=&)\", i+base_offset);\n-\t  // Inverse the order of secondaries from now on.\n-\t  nextIsModifier = true;\n-\t  type = CollationSorter.INVERSE_SECONDARY;\n-\t  break;\n-\tcase '&':\n-\t  type = CollationSorter.RESET;\n-\t  if (stop_on_reset)\n-\t    break main_parse_loop;\n-\t  break;\n-\tdefault:\n-\t  if (operator < 0)\n-\t    throw new ParseException\n-\t      (\"operator missing at \" + (i+base_offset), i+base_offset);\n-\t  if (!eatingChars &&\n-\t      ((c >= 0x21 && c <= 0x2F) \n-\t       || (c >= 0x3A && c <= 0x40)\n-\t       || (c >= 0x5B && c <= 0x60)\n-\t       || (c >= 0x7B && c <= 0x7E)))\n+\tswitch (c)\n+\t  {\n+\t  case '!':\n \t    throw new ParseException\n-\t      (\"unquoted punctuation character '\"+c+\"'\", i+base_offset);\n-\n-\t  //type = ignoreChars ? CollationSorter.IGNORE : -1;\n-\t  sb.append(c);\n-\t  break;\n-\t}\n+\t      (\"Modifier '!' is not yet supported by Classpath\", i + base_offset);\n+\t  case '<':\n+\t    type = CollationSorter.GREATERP;\n+\t    break;\n+\t  case ';':\n+\t    type = CollationSorter.GREATERS;\n+\t    break;\n+\t  case ',':\n+\t    type = CollationSorter.GREATERT;\n+\t    break;\n+\t  case '=':\n+\t    type = CollationSorter.EQUAL;\n+\t    break;\n+\t  case '\\'':\n+\t    eatingChars = !eatingChars;\n+\t    doubleQuote = true;\n+\t    break;\n+\t  case '@':\n+\t    if (ignoreChars)\n+\t      throw new ParseException\n+\t\t(\"comparison list has not yet been started. You may only use\"\n+\t\t + \"(<,;=&)\", i + base_offset);\n+\t    // Inverse the order of secondaries from now on.\n+\t    nextIsModifier = true;\n+\t    type = CollationSorter.INVERSE_SECONDARY;\n+\t    break;\n+\t  case '&':\n+\t    type = CollationSorter.RESET;\n+\t    if (stop_on_reset)\n+\t      break main_parse_loop;\n+\t    break;\n+\t  default:\n+\t    if (operator < 0)\n+\t      throw new ParseException\n+\t\t(\"operator missing at \" + (i + base_offset), i + base_offset);\n+\t    if (! eatingChars\n+\t\t&& ((c >= 0x21 && c <= 0x2F) \n+\t\t    || (c >= 0x3A && c <= 0x40)\n+\t\t    || (c >= 0x5B && c <= 0x60)\n+\t\t    || (c >= 0x7B && c <= 0x7E)))\n+\t      throw new ParseException\n+\t\t(\"unquoted punctuation character '\" + c + \"'\", i + base_offset);\n+\n+\t    //type = ignoreChars ? CollationSorter.IGNORE : -1;\n+\t    sb.append(c);\n+\t    break;\n+\t  }\n \n \tif (type  < 0)\n \t  continue;"}, {"sha": "7b2667a39ddf7fd72fcd23eb2bafde96905ea2c3", "filename": "libjava/java/util/PropertyPermission.java", "status": "modified", "additions": 13, "deletions": 12, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32efd4cd48e9286e750083fe6afab87c6204d9b2/libjava%2Fjava%2Futil%2FPropertyPermission.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32efd4cd48e9286e750083fe6afab87c6204d9b2/libjava%2Fjava%2Futil%2FPropertyPermission.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2FPropertyPermission.java?ref=32efd4cd48e9286e750083fe6afab87c6204d9b2", "patch": "@@ -1,5 +1,5 @@\n /* PropertyPermission.java -- permission to get and set System properties\n-   Copyright (C) 1999, 2000, 2002, 2004 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2000, 2002, 2004, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -154,17 +154,18 @@ else if (\"write\".equals(str))\n       actions = WRITE;\n     else if (\"read,write\".equals(str) || \"write,read\".equals(str))\n       actions = READ | WRITE;\n-    else {\n-      String lstr = str.toLowerCase();\n-      if (\"read\".equals(lstr))\n-\tactions = READ;\n-      else if (\"write\".equals(lstr))\n-\tactions = WRITE;\n-      else if (\"read,write\".equals(lstr) || \"write,read\".equals(lstr))\n-\tactions = READ | WRITE;\n-      else\n-\tthrow new IllegalArgumentException(\"illegal action \" + str);\n-    }\n+    else\n+      {\n+\tString lstr = str.toLowerCase();\n+\tif (\"read\".equals(lstr))\n+ \t  actions = READ;\n+\telse if (\"write\".equals(lstr))\n+\t  actions = WRITE;\n+\telse if (\"read,write\".equals(lstr) || \"write,read\".equals(lstr))\n+\t  actions = READ | WRITE;\n+\telse\n+\t  throw new IllegalArgumentException(\"illegal action \" + str);\n+      }\n   }\n \n   /**"}]}