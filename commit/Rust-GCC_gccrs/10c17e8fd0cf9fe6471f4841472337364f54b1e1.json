{"sha": "10c17e8fd0cf9fe6471f4841472337364f54b1e1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTBjMTdlOGZkMGNmOWZlNjQ3MWY0ODQxNDcyMzM3MzY0ZjU0YjFlMQ==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2008-09-08T07:19:46Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2008-09-08T07:19:46Z"}, "message": "re PR fortran/37400 (implicit character(len=*,kind=kind('A')) (Q) ... no longer gives the right answer.)\n\n2008-09-07  Tobias Burnus  <burnus@net.b.de>\n\n        PR fortran/37400\n        * symbol.c (gfc_set_default_type): Copy char len.\n\n2008-09-07  Tobias Burnus  <burnus@net.b.de>\n\n        PR fortran/37400\n        * gfortran.dg/implicit_12.f90: New test.\n\nFrom-SVN: r140100", "tree": {"sha": "cd14a2e3238e6fc7639f55953f8d23bf3c414e38", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cd14a2e3238e6fc7639f55953f8d23bf3c414e38"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/10c17e8fd0cf9fe6471f4841472337364f54b1e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10c17e8fd0cf9fe6471f4841472337364f54b1e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10c17e8fd0cf9fe6471f4841472337364f54b1e1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10c17e8fd0cf9fe6471f4841472337364f54b1e1/comments", "author": null, "committer": null, "parents": [{"sha": "d9de9cad96c152a971e7113f3b15030b9d649467", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9de9cad96c152a971e7113f3b15030b9d649467", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d9de9cad96c152a971e7113f3b15030b9d649467"}], "stats": {"total": 45, "additions": 42, "deletions": 3}, "files": [{"sha": "f80f6a0f705c70e04d2bc17ba3fb85ac2a8c75f1", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10c17e8fd0cf9fe6471f4841472337364f54b1e1/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10c17e8fd0cf9fe6471f4841472337364f54b1e1/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=10c17e8fd0cf9fe6471f4841472337364f54b1e1", "patch": "@@ -1,3 +1,8 @@\n+2008-09-08  Tobias Burnus  <burnus@net.b.de>\n+\n+\tPR fortran/37400\n+\t* symbol.c (gfc_set_default_type): Copy char len.\n+\n 2008-09-06  Steven G. Kargl  <kargls@comcast.net>\n \n \tPR fortran/36153"}, {"sha": "905b243a225a71b7a68ac4235da902e566a58fbc", "filename": "gcc/fortran/symbol.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10c17e8fd0cf9fe6471f4841472337364f54b1e1/gcc%2Ffortran%2Fsymbol.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10c17e8fd0cf9fe6471f4841472337364f54b1e1/gcc%2Ffortran%2Fsymbol.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fsymbol.c?ref=10c17e8fd0cf9fe6471f4841472337364f54b1e1", "patch": "@@ -257,6 +257,12 @@ gfc_set_default_type (gfc_symbol *sym, int error_flag, gfc_namespace *ns)\n   sym->ts = *ts;\n   sym->attr.implicit_type = 1;\n \n+  if (ts->cl)\n+    {\n+      sym->ts.cl = gfc_get_charlen ();\n+      *sym->ts.cl = *ts->cl;\n+    }\n+\n   if (sym->attr.is_bind_c == 1)\n     {\n       /* BIND(C) variables should not be implicitly declared.  */"}, {"sha": "af93d1585562ec117ab04266425e7b477100d114", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10c17e8fd0cf9fe6471f4841472337364f54b1e1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10c17e8fd0cf9fe6471f4841472337364f54b1e1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=10c17e8fd0cf9fe6471f4841472337364f54b1e1", "patch": "@@ -1,3 +1,8 @@\n+2008-09-08  Tobias Burnus  <burnus@net.b.de>\n+\n+\tPR fortran/37400\n+\t* gfortran.dg/implicit_12.f90: New test.\n+\n 2008-09-07  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR fortran/37203\n@@ -7,7 +12,7 @@\n \t* gfortran.d/reshape_order_4.f90:  New test case.\n \n 2008-09-07  Richard Guenther  <rguenther@suse.de>\n-            Ira Rosen  <irar@il.ibm.com>\n+\t    Ira Rosen  <irar@il.ibm.com>\n \n \tPR tree-optimization/36630\n \t* gcc.dg/vect/pr36630.c: New test.\n@@ -18,7 +23,7 @@\n \trelated to PURE and statement functions.\n \n 2008-09-07  Dorit Nuzman  <dorit@il.ibm.com>\n-            Ira Rosen  <irar@il.ibm.com>\n+\t    Ira Rosen  <irar@il.ibm.com>\n \n \tPR tree-optimization/35642\n \t* lib/target-supports.exp (check_effective_target_vect_short_mult):\n@@ -35,7 +40,7 @@\n 2008-09-06  Jeff Law <law@redhat.com>\n \n \t* gcc.c-torture/execute/memcpy-bi.c: Include <string.h>\n- \n+\n 2008-09-06  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/37399"}, {"sha": "8136a1839710ceaa0061e0e01a85f6648879fd68", "filename": "gcc/testsuite/gfortran.dg/implicit_12.f90", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10c17e8fd0cf9fe6471f4841472337364f54b1e1/gcc%2Ftestsuite%2Fgfortran.dg%2Fimplicit_12.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10c17e8fd0cf9fe6471f4841472337364f54b1e1/gcc%2Ftestsuite%2Fgfortran.dg%2Fimplicit_12.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fimplicit_12.f90?ref=10c17e8fd0cf9fe6471f4841472337364f54b1e1", "patch": "@@ -0,0 +1,23 @@\n+! { dg-do run}\n+!\n+! PR fortran/37400\n+!\n+module mod \n+   implicit character(len=*,kind=kind('A')) (Q) \n+   parameter(Q1 = '12345678')     ! len=8\n+   parameter(Q2 = 'abcdefghijkl') ! len=12\n+   contains \n+      subroutine sub(Q3) \n+         if(len('#'//Q3//'#') /= 15) call abort()\n+         if('#'//Q3//'#' /= '#ABCDEFGHIJKLM#') call abort()\n+      end subroutine sub \n+end module mod \n+program startest \n+   use mod \n+   implicit none\n+   if(len('#'//Q1//'#') /= 10) call abort()\n+   if(len('#'//Q2//'#') /= 14) call abort()\n+   if('#'//Q1//'#' /='#12345678#') call abort()\n+   if('#'//Q2//'#' /='#abcdefghijkl#') call abort()\n+   call sub('ABCDEFGHIJKLM') ! len=13\n+end program startest"}]}