{"sha": "88e541e13b8cd466aa6cf4acaada7345e43b8eee", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODhlNTQxZTEzYjhjZDQ2NmFhNmNmNGFjYWFkYTczNDVlNDNiOGVlZQ==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2003-12-29T18:47:20Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2003-12-29T18:47:20Z"}, "message": "builtins.c (expand_builtin_apply_args_1): Add pretend args size to the virtual incoming args pointer for downward stacks.\n\n\t* builtins.c (expand_builtin_apply_args_1): Add pretend args size\n\tto the virtual incoming args pointer for downward stacks.\n\nFrom-SVN: r75207", "tree": {"sha": "bab6c846ae138d8ab40bf953fabc1f49bd143bb1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bab6c846ae138d8ab40bf953fabc1f49bd143bb1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/88e541e13b8cd466aa6cf4acaada7345e43b8eee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88e541e13b8cd466aa6cf4acaada7345e43b8eee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88e541e13b8cd466aa6cf4acaada7345e43b8eee", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88e541e13b8cd466aa6cf4acaada7345e43b8eee/comments", "author": null, "committer": null, "parents": [{"sha": "30a035080e17df2e1b21322d398532b30af80cd1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30a035080e17df2e1b21322d398532b30af80cd1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/30a035080e17df2e1b21322d398532b30af80cd1"}], "stats": {"total": 19, "additions": 14, "deletions": 5}, "files": [{"sha": "9541d659244775d3273cfa46e88df38f2f96f044", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88e541e13b8cd466aa6cf4acaada7345e43b8eee/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88e541e13b8cd466aa6cf4acaada7345e43b8eee/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=88e541e13b8cd466aa6cf4acaada7345e43b8eee", "patch": "@@ -1,3 +1,8 @@\n+2003-12-29  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* builtins.c (expand_builtin_apply_args_1): Add pretend args size\n+\tto the virtual incoming args pointer for downward stacks.\n+\n 2003-12-29  Roger Sayle  <roger@eyesopen.com>\n \n \tPR fortran/12632"}, {"sha": "c9449fa5ca6ab3a69ba0b248671014ef35dc0f8a", "filename": "gcc/builtins.c", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88e541e13b8cd466aa6cf4acaada7345e43b8eee/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88e541e13b8cd466aa6cf4acaada7345e43b8eee/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=88e541e13b8cd466aa6cf4acaada7345e43b8eee", "patch": "@@ -1096,7 +1096,7 @@ result_vector (int savep, rtx result)\n static rtx\n expand_builtin_apply_args_1 (void)\n {\n-  rtx registers;\n+  rtx registers, tem;\n   int size, align, regno;\n   enum machine_mode mode;\n   rtx struct_incoming_value = targetm.calls.struct_value_rtx (cfun ? TREE_TYPE (cfun->decl) : 0, 1);\n@@ -1114,8 +1114,6 @@ expand_builtin_apply_args_1 (void)\n   for (regno = 0; regno < FIRST_PSEUDO_REGISTER; regno++)\n     if ((mode = apply_args_mode[regno]) != VOIDmode)\n       {\n-\trtx tem;\n-\n \talign = GET_MODE_ALIGNMENT (mode) / BITS_PER_UNIT;\n \tif (size % align != 0)\n \t  size = CEIL (size, align) * align;\n@@ -1127,8 +1125,14 @@ expand_builtin_apply_args_1 (void)\n       }\n \n   /* Save the arg pointer to the block.  */\n-  emit_move_insn (adjust_address (registers, Pmode, 0),\n-\t\t  copy_to_reg (virtual_incoming_args_rtx));\n+  tem = copy_to_reg (virtual_incoming_args_rtx);\n+#ifdef STACK_GROWS_DOWNWARDS\n+  /* We need the pointer as the caller actually passed them to us, not\n+     as we might have pretended they were passed.  */\n+  tem = plus_constant (tem, current_function_pretend_args_size);\n+#endif\n+  emit_move_insn (adjust_address (registers, Pmode, 0), tem);\n+  \n   size = GET_MODE_SIZE (Pmode);\n \n   /* Save the structure value address unless this is passed as an"}]}