{"sha": "722d59a3375f50d6a56191ddf2dd6a822daae19f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzIyZDU5YTMzNzVmNTBkNmE1NjE5MWRkZjJkZDZhODIyZGFhZTE5Zg==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2002-12-11T13:01:40Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2002-12-11T13:01:40Z"}, "message": "h8300.h (CONST_OK_FOR_J): Remove.\n\n\t* config/h8300/h8300.h (CONST_OK_FOR_J): Remove.\n\t(CONST_OK_FOR_K): Likewise.\n\t(CONST_OK_FOR_M): Likewise.\n\t(CONST_OK_FOR_LETTER_P): Do not use the above macros.\n\nFrom-SVN: r60035", "tree": {"sha": "7a5184ec5562cc9f708ba7058ed2a3d04cd63eab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7a5184ec5562cc9f708ba7058ed2a3d04cd63eab"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/722d59a3375f50d6a56191ddf2dd6a822daae19f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/722d59a3375f50d6a56191ddf2dd6a822daae19f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/722d59a3375f50d6a56191ddf2dd6a822daae19f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/722d59a3375f50d6a56191ddf2dd6a822daae19f/comments", "author": null, "committer": null, "parents": [{"sha": "3cc661ed292d7584bb17b1071bd9c4ef1ea0174b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3cc661ed292d7584bb17b1071bd9c4ef1ea0174b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3cc661ed292d7584bb17b1071bd9c4ef1ea0174b"}], "stats": {"total": 13, "additions": 7, "deletions": 6}, "files": [{"sha": "364c1f561d53ea1d66acecde6ebdad639d67436e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/722d59a3375f50d6a56191ddf2dd6a822daae19f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/722d59a3375f50d6a56191ddf2dd6a822daae19f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=722d59a3375f50d6a56191ddf2dd6a822daae19f", "patch": "@@ -1,3 +1,10 @@\n+2002-12-11  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* config/h8300/h8300.h (CONST_OK_FOR_J): Remove.\n+\t(CONST_OK_FOR_K): Likewise.\n+\t(CONST_OK_FOR_M): Likewise.\n+\t(CONST_OK_FOR_LETTER_P): Do not use the above macros.\n+\n 2002-12-11  Neil Booth  <neil@daikokuya.co.uk>\n \n \t* c-common.c (builtin_define_type_max): Handle unsigned"}, {"sha": "902517d03dd64d52cc3d6d1ba603f4d228982274", "filename": "gcc/config/h8300/h8300.h", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/722d59a3375f50d6a56191ddf2dd6a822daae19f/gcc%2Fconfig%2Fh8300%2Fh8300.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/722d59a3375f50d6a56191ddf2dd6a822daae19f/gcc%2Fconfig%2Fh8300%2Fh8300.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.h?ref=722d59a3375f50d6a56191ddf2dd6a822daae19f", "patch": "@@ -461,24 +461,18 @@ enum reg_class {\n    Return 1 if VALUE is in the range specified by C.  */\n \n #define CONST_OK_FOR_I(VALUE) ((VALUE) == 0)\n-#define CONST_OK_FOR_J(VALUE) ((unsigned HOST_WIDE_INT) (VALUE) < 256)\n-#define CONST_OK_FOR_K(VALUE) ((VALUE) == 1 || (VALUE) == 2)\n #define CONST_OK_FOR_L(VALUE)\t\t\t\t\\\n   (TARGET_H8300H || TARGET_H8300S\t\t\t\\\n    ? (VALUE) == 1 || (VALUE) == 2 || (VALUE) == 4\t\\\n    : (VALUE) == 1 || (VALUE) == 2)\n-#define CONST_OK_FOR_M(VALUE) ((VALUE) == 3 || (VALUE) == 4)\n #define CONST_OK_FOR_N(VALUE)\t\t\t\t\\\n   (TARGET_H8300H || TARGET_H8300S\t\t\t\\\n    ? (VALUE) == -1 || (VALUE) == -2 || (VALUE) == -4\t\\\n    : (VALUE) == -1 || (VALUE) == -2)\n \n #define CONST_OK_FOR_LETTER_P(VALUE, C)\t\t\\\n   ((C) == 'I' ? CONST_OK_FOR_I (VALUE) :\t\\\n-   (C) == 'J' ? CONST_OK_FOR_J (VALUE) :\t\\\n-   (C) == 'K' ? CONST_OK_FOR_K (VALUE) :\t\\\n    (C) == 'L' ? CONST_OK_FOR_L (VALUE) :\t\\\n-   (C) == 'M' ? CONST_OK_FOR_M (VALUE) :\t\\\n    (C) == 'N' ? CONST_OK_FOR_N (VALUE) :\t\\\n    0)\n "}]}