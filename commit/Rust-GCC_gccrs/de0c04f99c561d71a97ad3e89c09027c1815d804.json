{"sha": "de0c04f99c561d71a97ad3e89c09027c1815d804", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGUwYzA0Zjk5YzU2MWQ3MWE5N2FkM2U4OWMwOTAyN2MxODE1ZDgwNA==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2019-01-30T15:04:06Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2019-01-30T15:04:06Z"}, "message": "re PR fortran/88678 (Many gfortran.dg/ieee/ieee_X.f90 test cases fail starting with r267465)\n\n\tPR fortran/88678\n\t* config/fpu-glibc.h (set_fpu_trap_exceptions): Clear stalled\n\texception flags before changing trap mode.  Optimize to call\n\tfeenableexcept and fedisableexcept only once.\n\nFrom-SVN: r268392", "tree": {"sha": "b76ed6ffe7feae8d614585591f75d89566fc0eb2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b76ed6ffe7feae8d614585591f75d89566fc0eb2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/de0c04f99c561d71a97ad3e89c09027c1815d804", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de0c04f99c561d71a97ad3e89c09027c1815d804", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de0c04f99c561d71a97ad3e89c09027c1815d804", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de0c04f99c561d71a97ad3e89c09027c1815d804/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "83a67c0cd7fd11f6ca6a88d2e7db594ef7449454", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83a67c0cd7fd11f6ca6a88d2e7db594ef7449454", "html_url": "https://github.com/Rust-GCC/gccrs/commit/83a67c0cd7fd11f6ca6a88d2e7db594ef7449454"}], "stats": {"total": 39, "additions": 27, "deletions": 12}, "files": [{"sha": "87fc2d6a38caa0b904b35bfa7753ebcd197ff591", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de0c04f99c561d71a97ad3e89c09027c1815d804/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de0c04f99c561d71a97ad3e89c09027c1815d804/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=de0c04f99c561d71a97ad3e89c09027c1815d804", "patch": "@@ -1,3 +1,10 @@\n+2019-01-30  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n+\n+\tPR fortran/88678\n+\t* config/fpu-glibc.h (set_fpu_trap_exceptions): Clear stalled\n+\texception flags before changing trap mode.  Optimize to call\n+\tfeenableexcept and fedisableexcept only once.\n+\n 2019-01-28  Sebastian Huber  <sebastian.huber@embedded-brains.de>\n \n \t* io/async.c (init_adv_cond): Use __GTHREAD_COND_INIT_FUNCTION()."}, {"sha": "9abdfd95ee3bd62fd6f245e035b7a8b8e09bdf47", "filename": "libgfortran/config/fpu-glibc.h", "status": "modified", "additions": 20, "deletions": 12, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de0c04f99c561d71a97ad3e89c09027c1815d804/libgfortran%2Fconfig%2Ffpu-glibc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de0c04f99c561d71a97ad3e89c09027c1815d804/libgfortran%2Fconfig%2Ffpu-glibc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfig%2Ffpu-glibc.h?ref=de0c04f99c561d71a97ad3e89c09027c1815d804", "patch": "@@ -39,48 +39,56 @@ _Static_assert (sizeof(fenv_t) <= (size_t) GFC_FPE_STATE_BUFFER_SIZE,\n \n void set_fpu_trap_exceptions (int trap, int notrap)\n {\n+  int mode_set = 0, mode_clr = 0;\n+\n #ifdef FE_INVALID\n   if (trap & GFC_FPE_INVALID)\n-    feenableexcept (FE_INVALID);\n+    mode_set |= FE_INVALID;\n   if (notrap & GFC_FPE_INVALID)\n-    fedisableexcept (FE_INVALID);\n+    mode_clr |= FE_INVALID;\n #endif\n \n /* Some glibc targets (like alpha) have FE_DENORMAL, but not many.  */\n #ifdef FE_DENORMAL\n   if (trap & GFC_FPE_DENORMAL)\n-    feenableexcept (FE_DENORMAL);\n+    mode_set |= FE_DENORMAL;\n   if (notrap & GFC_FPE_DENORMAL)\n-    fedisableexcept (FE_DENORMAL);\n+    mode_clr |= FE_DENORMAL;\n #endif\n \n #ifdef FE_DIVBYZERO\n   if (trap & GFC_FPE_ZERO)\n-    feenableexcept (FE_DIVBYZERO);\n+    mode_set |= FE_DIVBYZERO;\n   if (notrap & GFC_FPE_ZERO)\n-    fedisableexcept (FE_DIVBYZERO);\n+    mode_clr |= FE_DIVBYZERO;\n #endif\n \n #ifdef FE_OVERFLOW\n   if (trap & GFC_FPE_OVERFLOW)\n-    feenableexcept (FE_OVERFLOW);\n+    mode_set |= FE_OVERFLOW;\n   if (notrap & GFC_FPE_OVERFLOW)\n-    fedisableexcept (FE_OVERFLOW);\n+    mode_clr |= FE_OVERFLOW;\n #endif\n \n #ifdef FE_UNDERFLOW\n   if (trap & GFC_FPE_UNDERFLOW)\n-    feenableexcept (FE_UNDERFLOW);\n+    mode_set |= FE_UNDERFLOW;\n   if (notrap & GFC_FPE_UNDERFLOW)\n-    fedisableexcept (FE_UNDERFLOW);\n+    mode_clr |= FE_UNDERFLOW;\n #endif\n \n #ifdef FE_INEXACT\n   if (trap & GFC_FPE_INEXACT)\n-    feenableexcept (FE_INEXACT);\n+    mode_set |= FE_INEXACT;\n   if (notrap & GFC_FPE_INEXACT)\n-    fedisableexcept (FE_INEXACT);\n+    mode_clr |= FE_INEXACT;\n #endif\n+\n+  /* Clear stalled exception flags.  */\n+  feclearexcept (FE_ALL_EXCEPT);\n+\n+  feenableexcept (mode_set);\n+  fedisableexcept (mode_clr);\n }\n \n "}]}