{"sha": "51a017d8bc4aa54f56d0f245dacf5e847c947b9f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTFhMDE3ZDhiYzRhYTU0ZjU2ZDBmMjQ1ZGFjZjVlODQ3Yzk0N2I5Zg==", "commit": {"author": {"name": "Geoff Keating", "email": "geoffk@cygnus.com", "date": "2000-08-14T04:15:07Z"}, "committer": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "2000-08-14T04:15:07Z"}, "message": "c-torture.exp (c-torture): Make compiler_conditional_xfail_data global.\n\n* lib/c-torture.exp (c-torture): Make\ncompiler_conditional_xfail_data global.\n* lib/f-torture.exp (f-torture): Add in torture_eval_before_compile,\ncompiler_conditional_xfail_data machinery.\n(f-torture-execute): Likewise.\n* g77.c-torture/compile/20000629-1.x: The test only fails on x86,\nand only when unrolling loops.\n\nFrom-SVN: r35669", "tree": {"sha": "09b5b9557cfa8209cb46f49c61d622974ac45302", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/09b5b9557cfa8209cb46f49c61d622974ac45302"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/51a017d8bc4aa54f56d0f245dacf5e847c947b9f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51a017d8bc4aa54f56d0f245dacf5e847c947b9f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51a017d8bc4aa54f56d0f245dacf5e847c947b9f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51a017d8bc4aa54f56d0f245dacf5e847c947b9f/comments", "author": null, "committer": null, "parents": [{"sha": "c0d63866c4679c1876799e6c13f193847b9131a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0d63866c4679c1876799e6c13f193847b9131a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0d63866c4679c1876799e6c13f193847b9131a0"}], "stats": {"total": 43, "additions": 37, "deletions": 6}, "files": [{"sha": "ebfb0a4607cb22c153917610c2c703bbc4bfddc3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51a017d8bc4aa54f56d0f245dacf5e847c947b9f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51a017d8bc4aa54f56d0f245dacf5e847c947b9f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=51a017d8bc4aa54f56d0f245dacf5e847c947b9f", "patch": "@@ -1,5 +1,13 @@\n 2000-08-13  Geoff Keating  <geoffk@cygnus.com>\n \n+\t* lib/c-torture.exp (c-torture): Make\n+\tcompiler_conditional_xfail_data global.\n+\t* lib/f-torture.exp (f-torture): Add in torture_eval_before_compile,\n+\tcompiler_conditional_xfail_data machinery.\n+\t(f-torture-execute): Likewise.\n+\t* g77.c-torture/compile/20000629-1.x: The test only fails on x86,\n+\tand only when unrolling loops.\n+\n \t* gcc.dg/c99-array-lval-1.c: The test on line 14 now passes.\n \n 2000-08-11  Nathan Sidwell  <nathan@codesourcery.com>"}, {"sha": "f1c5c19d65518cb863adb99ddbe0c1c4911f2934", "filename": "gcc/testsuite/g77.f-torture/compile/20000629-1.x", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51a017d8bc4aa54f56d0f245dacf5e847c947b9f/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F20000629-1.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51a017d8bc4aa54f56d0f245dacf5e847c947b9f/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F20000629-1.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F20000629-1.x?ref=51a017d8bc4aa54f56d0f245dacf5e847c947b9f", "patch": "@@ -1,3 +1,10 @@\n-set torture_compile_xfail \"*-*-*\"\n+set torture_eval_before_compile {\n+    set compiler_conditional_xfail_data {\n+        \"bug with -funroll-loops\" \\\n+        \"i?86-*-*\" \\\n+        { \"-funroll-loops\" \"-funroll-all-loops\" } \\\n+        { \"\" }\n+    }\n+}\n \n return 0"}, {"sha": "1d9498f5db65497d3162babf900219791b474d5f", "filename": "gcc/testsuite/lib/c-torture.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51a017d8bc4aa54f56d0f245dacf5e847c947b9f/gcc%2Ftestsuite%2Flib%2Fc-torture.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51a017d8bc4aa54f56d0f245dacf5e847c947b9f/gcc%2Ftestsuite%2Flib%2Fc-torture.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fc-torture.exp?ref=51a017d8bc4aa54f56d0f245dacf5e847c947b9f", "patch": "@@ -255,7 +255,7 @@ proc search_for { file pattern } {\n # to more than 14 chars.\n #\n proc c-torture { args } {\n-    global srcdir subdir\n+    global srcdir subdir compiler_conditional_xfail_data\n \n     set src [lindex $args 0];\n     if { [llength $args] > 1 } {"}, {"sha": "2fe99c0c453a8c582e1f8204bf583ea3e7db26bb", "filename": "gcc/testsuite/lib/f-torture.exp", "status": "modified", "additions": 20, "deletions": 4, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51a017d8bc4aa54f56d0f245dacf5e847c947b9f/gcc%2Ftestsuite%2Flib%2Ff-torture.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51a017d8bc4aa54f56d0f245dacf5e847c947b9f/gcc%2Ftestsuite%2Flib%2Ff-torture.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ff-torture.exp?ref=51a017d8bc4aa54f56d0f245dacf5e847c947b9f", "patch": "@@ -1,4 +1,4 @@\n-# Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998 Free Software Foundation, Inc.\n+# Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998, 2000 Free Software Foundation, Inc.\n \n # This program is free software; you can redistribute it and/or modify\n # it under the terms of the GNU General Public License as published by\n@@ -131,7 +131,7 @@ proc f-torture-compile { src option } {\n # to more than 14 chars.\n #\n proc f-torture-execute { src } {\n-    global tmpdir tool srcdir output \n+    global tmpdir tool srcdir output compiler_conditional_xfail_data\n \n     # Check for alternate driver.\n     if [file exists [file rootname $src].x] {\n@@ -169,6 +169,13 @@ proc f-torture-execute { src } {\n \tif [info exists torture_compile_xfail] {\n \t    setup_xfail $torture_compile_xfail\n \t}\n+\n+\t# torture_execute_before_{compile,execute} can be set by the .x script\n+\t# (if present)\n+\tif [info exists torture_eval_before_compile] {\n+            set ignore_me [eval $torture_eval_before_compile]\n+\t}\n+\n \tremote_file build delete $executable\n \tverbose \"Testing $testcase, $option\" 1\n \n@@ -234,7 +241,11 @@ proc f-torture-execute { src } {\n \tif [info exists torture_execute_xfail] {\n \t    setup_xfail $torture_execute_xfail\n \t}\n-\t\n+\n+\tif [info exists torture_eval_before_execute] {\n+            set ignore_me [eval $torture_eval_before_execute]\n+\t}\n+\n \tset result [g77_load \"$executable\" \"\" \"\"]\n \tset status [lindex $result 0];\n \tset output [lindex $result 1];\n@@ -273,7 +284,7 @@ proc search_for { file pattern } {\n # to more than 14 chars.\n #\n proc f-torture { args } {\n-    global srcdir subdir\n+    global srcdir subdir compiler_conditional_xfail_data\n \n     set src [lindex $args 0];\n     if { [llength $args] > 1 } {\n@@ -313,6 +324,11 @@ proc f-torture { args } {\n \t    setup_xfail $torture_compile_xfail\n \t}\n \n+\t# torture_execute_before_compile is set by the .x script (if present)\n+\tif [info exists torture_eval_before_compile] {\n+            set ignore_me [eval $torture_eval_before_compile]\n+\t}\n+\n \tf-torture-compile $src \"$option $options\"\n     }\n }"}]}