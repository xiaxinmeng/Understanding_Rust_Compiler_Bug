{"sha": "9db931afe6a4dd7329b958ef45116cb4f22f6a80", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWRiOTMxYWZlNmE0ZGQ3MzI5Yjk1OGVmNDUxMTZjYjRmMjJmNmE4MA==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-11-23T23:10:32Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-11-23T23:10:32Z"}, "message": "(build_binary_op): Don't accept complex types for max, min, lt, etc.\n\nFrom-SVN: r6151", "tree": {"sha": "74be78c487e90f5920a5049a89d9930ec6db7197", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/74be78c487e90f5920a5049a89d9930ec6db7197"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9db931afe6a4dd7329b958ef45116cb4f22f6a80", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9db931afe6a4dd7329b958ef45116cb4f22f6a80", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9db931afe6a4dd7329b958ef45116cb4f22f6a80", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9db931afe6a4dd7329b958ef45116cb4f22f6a80/comments", "author": null, "committer": null, "parents": [{"sha": "65753f559890e97f7d0296a6558300dc9ee98e23", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65753f559890e97f7d0296a6558300dc9ee98e23", "html_url": "https://github.com/Rust-GCC/gccrs/commit/65753f559890e97f7d0296a6558300dc9ee98e23"}], "stats": {"total": 12, "additions": 4, "deletions": 8}, "files": [{"sha": "6550df23388705d94d8714b9f70f04b47ccce4c8", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9db931afe6a4dd7329b958ef45116cb4f22f6a80/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9db931afe6a4dd7329b958ef45116cb4f22f6a80/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=9db931afe6a4dd7329b958ef45116cb4f22f6a80", "patch": "@@ -2169,10 +2169,8 @@ build_binary_op (code, orig_op0, orig_op1, convert_p)\n \n     case MAX_EXPR:\n     case MIN_EXPR:\n-      if ((code0 == INTEGER_TYPE || code0 == REAL_TYPE\n-\t   || code0 == COMPLEX_TYPE)\n-\t  && (code1 == INTEGER_TYPE || code1 == REAL_TYPE\n-\t      || code1 == COMPLEX_TYPE))\n+      if ((code0 == INTEGER_TYPE || code0 == REAL_TYPE)\n+\t  && (code1 == INTEGER_TYPE || code1 == REAL_TYPE))\n \tshorten = 1;\n       else if (code0 == POINTER_TYPE && code1 == POINTER_TYPE)\n \t{\n@@ -2189,10 +2187,8 @@ build_binary_op (code, orig_op0, orig_op1, convert_p)\n     case GE_EXPR:\n     case LT_EXPR:\n     case GT_EXPR:\n-      if ((code0 == INTEGER_TYPE || code0 == REAL_TYPE\n-\t   || code0 == COMPLEX_TYPE)\n-\t  && (code1 == INTEGER_TYPE || code1 == REAL_TYPE\n-\t      || code1 == COMPLEX_TYPE))\n+      if ((code0 == INTEGER_TYPE || code0 == REAL_TYPE)\n+\t  && (code1 == INTEGER_TYPE || code1 == REAL_TYPE))\n \tshort_compare = 1;\n       else if (code0 == POINTER_TYPE && code1 == POINTER_TYPE)\n \t{"}]}