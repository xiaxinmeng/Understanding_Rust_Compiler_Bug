{"sha": "db95ac7745b284d1fd667ee6262b4afc778fe074", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGI5NWFjNzc0NWIyODRkMWZkNjY3ZWU2MjYyYjRhZmM3NzhmZTA3NA==", "commit": {"author": {"name": "Andrew Pinski", "email": "apinski@marvell.com", "date": "2021-07-17T08:16:28Z"}, "committer": {"name": "Andrew Pinski", "email": "apinski@marvell.com", "date": "2021-07-19T15:52:56Z"}, "message": "[AARCH64] Fix PR 101205: csinv does not have an zero_extend version\n\nSo the problem is even though there was a csneg with\na zero_extend in the front, there was not one for csinv.\nThis fixes it by extending that pattern.\n\nOK? Bootstrapped and tested on aarch64-linux-gnu with no regressions.\n\ngcc/ChangeLog:\n\n\tPR target/101205\n\t* config/aarch64/aarch64.md (csneg3_uxtw_insn): Rename to ...\n\t(*cs<neg_not_cs>3_uxtw_insn4): and extend to NEG_NOT.\n\ngcc/testsuite/ChangeLog:\n\n\tPR target/101205\n\t* gcc.target/aarch64/csinv-neg-1.c: New test.", "tree": {"sha": "fa51f1b45cbf4b8277be8068f280576c1603db57", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fa51f1b45cbf4b8277be8068f280576c1603db57"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/db95ac7745b284d1fd667ee6262b4afc778fe074", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db95ac7745b284d1fd667ee6262b4afc778fe074", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db95ac7745b284d1fd667ee6262b4afc778fe074", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db95ac7745b284d1fd667ee6262b4afc778fe074/comments", "author": {"login": "apinski-cavium", "id": 6335315, "node_id": "MDQ6VXNlcjYzMzUzMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/6335315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apinski-cavium", "html_url": "https://github.com/apinski-cavium", "followers_url": "https://api.github.com/users/apinski-cavium/followers", "following_url": "https://api.github.com/users/apinski-cavium/following{/other_user}", "gists_url": "https://api.github.com/users/apinski-cavium/gists{/gist_id}", "starred_url": "https://api.github.com/users/apinski-cavium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apinski-cavium/subscriptions", "organizations_url": "https://api.github.com/users/apinski-cavium/orgs", "repos_url": "https://api.github.com/users/apinski-cavium/repos", "events_url": "https://api.github.com/users/apinski-cavium/events{/privacy}", "received_events_url": "https://api.github.com/users/apinski-cavium/received_events", "type": "User", "site_admin": false}, "committer": {"login": "apinski-cavium", "id": 6335315, "node_id": "MDQ6VXNlcjYzMzUzMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/6335315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apinski-cavium", "html_url": "https://github.com/apinski-cavium", "followers_url": "https://api.github.com/users/apinski-cavium/followers", "following_url": "https://api.github.com/users/apinski-cavium/following{/other_user}", "gists_url": "https://api.github.com/users/apinski-cavium/gists{/gist_id}", "starred_url": "https://api.github.com/users/apinski-cavium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apinski-cavium/subscriptions", "organizations_url": "https://api.github.com/users/apinski-cavium/orgs", "repos_url": "https://api.github.com/users/apinski-cavium/repos", "events_url": "https://api.github.com/users/apinski-cavium/events{/privacy}", "received_events_url": "https://api.github.com/users/apinski-cavium/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3522fe2a115a2118553dad9aa98e524674fd8114", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3522fe2a115a2118553dad9aa98e524674fd8114", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3522fe2a115a2118553dad9aa98e524674fd8114"}], "stats": {"total": 118, "additions": 115, "deletions": 3}, "files": [{"sha": "8cd259fca9cdfaae71e8b6c2ccea1ba7d128078e", "filename": "gcc/config/aarch64/aarch64.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db95ac7745b284d1fd667ee6262b4afc778fe074/gcc%2Fconfig%2Faarch64%2Faarch64.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db95ac7745b284d1fd667ee6262b4afc778fe074/gcc%2Fconfig%2Faarch64%2Faarch64.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.md?ref=db95ac7745b284d1fd667ee6262b4afc778fe074", "patch": "@@ -4203,15 +4203,15 @@\n   [(set_attr \"type\" \"csel\")]\n )\n \n-(define_insn \"csneg3_uxtw_insn\"\n+(define_insn \"*cs<neg_not_cs>3_uxtw_insn4\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n \t(zero_extend:DI\n \t  (if_then_else:SI\n \t    (match_operand 1 \"aarch64_comparison_operation\" \"\")\n-\t    (neg:SI (match_operand:SI 2 \"register_operand\" \"r\"))\n+\t    (NEG_NOT:SI (match_operand:SI 2 \"register_operand\" \"r\"))\n \t    (match_operand:SI 3 \"aarch64_reg_or_zero\" \"rZ\"))))]\n   \"\"\n-  \"csneg\\\\t%w0, %w3, %w2, %M1\"\n+  \"cs<neg_not_cs>\\\\t%w0, %w3, %w2, %M1\"\n   [(set_attr \"type\" \"csel\")]\n )\n "}, {"sha": "e528883198de4a7886eb99420165f3f0c63380d2", "filename": "gcc/testsuite/gcc.target/aarch64/csinv-neg-1.c", "status": "added", "additions": 112, "deletions": 0, "changes": 112, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db95ac7745b284d1fd667ee6262b4afc778fe074/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fcsinv-neg-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db95ac7745b284d1fd667ee6262b4afc778fe074/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fcsinv-neg-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fcsinv-neg-1.c?ref=db95ac7745b284d1fd667ee6262b4afc778fe074", "patch": "@@ -0,0 +1,112 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+/*\n+** inv1:\n+**\tcmp\tw0, 0\n+**\tcsinv\tw0, w1, w2, ne\n+**\tret\n+*/\n+unsigned long long\n+inv1(unsigned a, unsigned b, unsigned c)\n+{\n+  unsigned t = a ? b : ~c;\n+  return t;\n+}\n+\n+/*\n+** inv1_local:\n+**\tcmp\tw0, 0\n+**\tcsinv\tw0, w1, w2, ne\n+**\tret\n+*/\n+unsigned long long\n+inv1_local(unsigned a, unsigned b, unsigned c)\n+{\n+  unsigned d = ~c;\n+  unsigned t = a ? b : d;\n+  return t;\n+}\n+\n+/*\n+** inv_zero1:\n+**\tcmp\tw0, 0\n+**\tcsinv\tw0, wzr, w1, ne\n+**\tret\n+*/\n+unsigned long long\n+inv_zero1(unsigned a, unsigned b)\n+{\n+  unsigned t = a ? 0 : ~b; \n+  return t;\n+}\n+\n+/*\n+** inv_zero2:\n+**\tcmp\tw0, 0\n+**\tcsinv\tw0, wzr, w1, eq\n+**\tret\n+*/\n+unsigned long long\n+inv_zero2(unsigned a, unsigned b)\n+{\n+  unsigned t = a ? ~b : 0; \n+  return t;\n+}\n+\n+\n+/*\n+** inv2:\n+**\tcmp\tw0, 0\n+**\tcsinv\tw0, w2, w1, eq\n+**\tret\n+*/\n+unsigned long long\n+inv2(unsigned a, unsigned b, unsigned c)\n+{\n+  unsigned t = a ? ~b : c; \n+  return t;\n+}\n+\n+/*\n+** inv2_local:\n+**\tcmp\tw0, 0\n+**\tcsinv\tw0, w2, w1, eq\n+**\tret\n+*/\n+unsigned long long\n+inv2_local(unsigned a, unsigned b, unsigned c)\n+{\n+  unsigned d = ~b;\n+  unsigned t = a ? d : c; \n+  return t;\n+}\n+\n+/*\n+** neg1:\n+**\tcmp\tw0, 0\n+**\tcsneg\tw0, w1, w2, ne\n+**\tret\n+*/\n+unsigned long long\n+neg1(unsigned a, unsigned b, unsigned c)\n+{\n+  unsigned t = a ? b : -c; \n+  return t;\n+}\n+\n+\n+/*\n+** neg2:\n+**\tcmp\tw0, 0\n+**\tcsneg\tw0, w2, w1, eq\n+**\tret\n+*/\n+unsigned long long\n+neg2(unsigned a, unsigned b, unsigned c)\n+{\n+  unsigned t = a ? -b : c; \n+  return t;\n+}\n+\n+/* { dg-final { check-function-bodies \"**\" \"\" \"\" } } */"}]}