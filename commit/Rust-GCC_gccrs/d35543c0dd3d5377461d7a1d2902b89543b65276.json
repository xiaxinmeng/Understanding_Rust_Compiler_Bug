{"sha": "d35543c0dd3d5377461d7a1d2902b89543b65276", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDM1NTQzYzBkZDNkNTM3NzQ2MWQ3YTFkMjkwMmI4OTU0M2I2NTI3Ng==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2003-06-24T11:54:01Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2003-06-24T11:54:01Z"}, "message": "langhooks-def.h (LANG_HOOKS_PREPARE_ASSEMBLE_VARIABLE): New macro.\n\n\t* langhooks-def.h (LANG_HOOKS_PREPARE_ASSEMBLE_VARIABLE): New macro.\n\t* langhooks.h (lang_hooks_for_decls): Add prepare_assemble_variable.\n\t* varasm.c (assemble_variable): Call prepare_assemble_variable.\n\t* class.c (build_vtable): Make vtables.\n\t* cp-tree.h (DECL_VTABLE_OR_VTT_P): New macro.\n\t* decl2.c (output_vtable_inherit): Rename to ...\n\t(prepare_assemble_variable): ... this one; change interface.\n\t(maybe_emit_vtables): Do not call output_vtable_inherit.\n\t* cp-lang.c (LANG_HOOKS_PREPARE_ASSEMBLE_VARIABLE): Define.\n\t* cp-tree.h (prepare_assemble_variable): New.\n\nFrom-SVN: r68418", "tree": {"sha": "a6c9b0c5a6eb6385afb4054e152dcc98e8dc2066", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a6c9b0c5a6eb6385afb4054e152dcc98e8dc2066"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d35543c0dd3d5377461d7a1d2902b89543b65276", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d35543c0dd3d5377461d7a1d2902b89543b65276", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d35543c0dd3d5377461d7a1d2902b89543b65276", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d35543c0dd3d5377461d7a1d2902b89543b65276/comments", "author": null, "committer": null, "parents": [{"sha": "3a63ab40104e4e1c24b80d1931b2dc6a8650a3df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a63ab40104e4e1c24b80d1931b2dc6a8650a3df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a63ab40104e4e1c24b80d1931b2dc6a8650a3df"}], "stats": {"total": 47, "additions": 40, "deletions": 7}, "files": [{"sha": "7be7d42dc5d6b8e531ba727eaef0c81170313213", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35543c0dd3d5377461d7a1d2902b89543b65276/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35543c0dd3d5377461d7a1d2902b89543b65276/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d35543c0dd3d5377461d7a1d2902b89543b65276", "patch": "@@ -1,3 +1,9 @@\n+Tue Jun 24 13:52:11 CEST 2003  Jan Hubicka  <jh@suse.cz>\n+\n+\t* langhooks-def.h (LANG_HOOKS_PREPARE_ASSEMBLE_VARIABLE): New macro.\n+\t* langhooks.h (lang_hooks_for_decls): Add prepare_assemble_variable.\n+\t* varasm.c (assemble_variable): Call prepare_assemble_variable.\n+\n 2003-06-23  Roger Sayle  <roger@eyesopen.com>\n \n \t* builtins.c (expand_builtin): Use expand_builtin_pow to expand"}, {"sha": "ebb2000eab31f2113894534982cb618fb68ebcb4", "filename": "gcc/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35543c0dd3d5377461d7a1d2902b89543b65276/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35543c0dd3d5377461d7a1d2902b89543b65276/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=d35543c0dd3d5377461d7a1d2902b89543b65276", "patch": "@@ -1596,7 +1596,7 @@ simplify-rtx.o : simplify-rtx.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RT\n    $(REGS_H) hard-reg-set.h flags.h real.h insn-config.h $(RECOG_H) $(EXPR_H) toplev.h \\\n    output.h function.h $(GGC_H) $(OBSTACK_H) $(TM_P_H) $(TREE_H) $(TARGET_H)\n cgraph.o : cgraph.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n-   langhooks.h tree-inline.h toplev.h flags.h ggc.h  $(TARGET_H) cgraph.h gt-cgraph.h\n+   langhooks.h toplev.h flags.h ggc.h  $(TARGET_H) cgraph.h gt-cgraph.h output.h\n cgraphunit.o : cgraphunit.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n    langhooks.h tree-inline.h toplev.h flags.h ggc.h  $(TARGET_H) cgraph.h\n coverage.o : coverage.c gcov-io.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\"}, {"sha": "2bc0484997876bbfb9619a98cf8a3b9e69f7e11b", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35543c0dd3d5377461d7a1d2902b89543b65276/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35543c0dd3d5377461d7a1d2902b89543b65276/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=d35543c0dd3d5377461d7a1d2902b89543b65276", "patch": "@@ -1,3 +1,13 @@\n+Tue Jun 24 13:52:34 CEST 2003  Jan Hubicka  <jh@suse.cz>\n+\n+\t* class.c (build_vtable): Make vtables.\n+\t* cp-tree.h (DECL_VTABLE_OR_VTT_P): New macro.\n+\t* decl2.c (output_vtable_inherit): Rename to ...\n+\t(prepare_assemble_variable): ... this one; change interface.\n+\t(maybe_emit_vtables): Do not call output_vtable_inherit.\n+\t* cp-lang.c (LANG_HOOKS_PREPARE_ASSEMBLE_VARIABLE): Define.\n+\t* cp-tree.h (prepare_assemble_variable): New.\n+\n 2003-06-23  Andrew Pinski <pinskia@physics.uc.edu>\n \n \t* method.c: add prototype for make_alias_for_thunk."}, {"sha": "12c206854564c40a1df5c5fa804b1e2a63fc1b13", "filename": "gcc/cp/class.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35543c0dd3d5377461d7a1d2902b89543b65276/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35543c0dd3d5377461d7a1d2902b89543b65276/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=d35543c0dd3d5377461d7a1d2902b89543b65276", "patch": "@@ -530,6 +530,7 @@ build_vtable (tree class_type, tree name, tree vtable_type)\n   TREE_READONLY (decl) = 1;\n   DECL_VIRTUAL_P (decl) = 1;\n   DECL_ALIGN (decl) = TARGET_VTABLE_ENTRY_ALIGN;\n+  DECL_VTABLE_OR_VTT_P (decl) = 1;\n \n   /* At one time the vtable info was grabbed 2 words at a time.  This\n      fails on sparc unless you have 8-byte alignment.  (tiemann) */"}, {"sha": "c79943727f3b078fe7932f2320842056d227c193", "filename": "gcc/cp/cp-lang.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35543c0dd3d5377461d7a1d2902b89543b65276/gcc%2Fcp%2Fcp-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35543c0dd3d5377461d7a1d2902b89543b65276/gcc%2Fcp%2Fcp-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-lang.c?ref=d35543c0dd3d5377461d7a1d2902b89543b65276", "patch": "@@ -145,6 +145,9 @@ static bool cp_var_mod_type_p (tree);\n #undef LANG_HOOKS_EXPR_SIZE\n #define LANG_HOOKS_EXPR_SIZE cp_expr_size\n \n+#undef LANG_HOOKS_PREPARE_ASSEMBLE_VARIABLE \n+#define LANG_HOOKS_PREPARE_ASSEMBLE_VARIABLE prepare_assemble_variable\n+\n #undef LANG_HOOKS_MAKE_TYPE\n #define LANG_HOOKS_MAKE_TYPE cxx_make_type\n #undef LANG_HOOKS_TYPE_FOR_MODE"}, {"sha": "1527aa45a63f3a260564fb67c1aef4d57634d11e", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35543c0dd3d5377461d7a1d2902b89543b65276/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35543c0dd3d5377461d7a1d2902b89543b65276/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=d35543c0dd3d5377461d7a1d2902b89543b65276", "patch": "@@ -73,6 +73,7 @@ struct diagnostic_context;\n       NEED_TEMPORARY_P (in REF_BIND, BASE_CONV)\n       IDENTIFIER_TYPENAME_P (in IDENTIFIER_NODE)\n    5: C_IS_RESERVED_WORD (in IDENTIFIER_NODE)\n+      DECL_VTABLE_OR_VTT_P (in VAR_DECL)\n    6: For future expansion\n \n    Usage of TYPE_LANG_FLAG_?:\n@@ -2056,6 +2057,9 @@ struct lang_decl GTY(())\n   (DECL_CONTEXT (NODE) \\\n    && TREE_CODE (DECL_CONTEXT (NODE)) == FUNCTION_DECL)\n \n+/* 1 iff VAR_DECL node NODE is virtual table or VTT.  */\n+#define DECL_VTABLE_OR_VTT_P(NODE) TREE_LANG_FLAG_5 (VAR_DECL_CHECK (NODE))\n+\n /* 1 iff NODE is function-local, but for types.  */\n #define LOCAL_CLASS_P(NODE)\t\t\t\t\\\n   (decl_function_context (TYPE_MAIN_DECL (NODE)) != NULL_TREE)\n@@ -3794,6 +3798,7 @@ extern tree build_artificial_parm (tree, tree);\n extern tree get_guard (tree);\n extern tree get_guard_cond (tree);\n extern tree set_guard (tree);\n+extern void prepare_assemble_variable (tree);\n \n extern void cp_error_at\t\t(const char *msgid, ...);\n extern void cp_warning_at\t(const char *msgid, ...);"}, {"sha": "9a96000046899576495f60d24620f29d9d78b5c8", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35543c0dd3d5377461d7a1d2902b89543b65276/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35543c0dd3d5377461d7a1d2902b89543b65276/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=d35543c0dd3d5377461d7a1d2902b89543b65276", "patch": "@@ -66,7 +66,6 @@ static void add_using_namespace (tree, tree, bool);\n static cxx_binding *ambiguous_decl (tree, cxx_binding *, cxx_binding *, int);\n static tree build_anon_union_vars (tree);\n static bool acceptable_java_type (tree);\n-static void output_vtable_inherit (tree);\n static tree start_objects (int, int);\n static void finish_objects (int, int, tree);\n static tree merge_functions (tree, tree);\n@@ -1606,12 +1605,16 @@ import_export_class (tree ctype)\n /* We need to describe to the assembler the relationship between\n    a vtable and the vtable of the parent class.  */\n \n-static void\n-output_vtable_inherit (tree vars)\n+void\n+prepare_assemble_variable (tree vars)\n {\n   tree parent;\n   rtx child_rtx, parent_rtx;\n \n+  if (!flag_vtable_gc || TREE_CODE (vars) != VAR_DECL\n+      || !DECL_VTABLE_OR_VTT_P (vars))\n+    return;\n+\n   child_rtx = XEXP (DECL_RTL (vars), 0);\t  /* strip the mem ref  */\n \n   parent = binfo_for_vtable (vars);\n@@ -1708,9 +1711,6 @@ maybe_emit_vtables (tree ctype)\n \n       rest_of_decl_compilation (vtbl, NULL, 1, 1);\n \n-      if (flag_vtable_gc)\n-\toutput_vtable_inherit (vtbl);\n-\n       /* Because we're only doing syntax-checking, we'll never end up\n \t actually marking the variable as written.  */\n       if (flag_syntax_only)"}, {"sha": "12e4f9b48e19d016d99ffd729d93b66684699fa8", "filename": "gcc/langhooks-def.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35543c0dd3d5377461d7a1d2902b89543b65276/gcc%2Flanghooks-def.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35543c0dd3d5377461d7a1d2902b89543b65276/gcc%2Flanghooks-def.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flanghooks-def.h?ref=d35543c0dd3d5377461d7a1d2902b89543b65276", "patch": "@@ -221,6 +221,7 @@ int lhd_tree_dump_type_quals\t\t\tPARAMS ((tree));\n #define LANG_HOOKS_GETDECLS\tgetdecls\n #define LANG_HOOKS_WARN_UNUSED_GLOBAL_DECL lhd_warn_unused_global_decl\n #define LANG_HOOKS_WRITE_GLOBALS write_global_declarations\n+#define LANG_HOOKS_PREPARE_ASSEMBLE_VARIABLE NULL\n #define LANG_HOOKS_DECL_OK_FOR_SIBCALL\tlhd_decl_ok_for_sibcall\n \n #define LANG_HOOKS_DECLS { \\\n@@ -233,6 +234,7 @@ int lhd_tree_dump_type_quals\t\t\tPARAMS ((tree));\n   LANG_HOOKS_GETDECLS, \\\n   LANG_HOOKS_WARN_UNUSED_GLOBAL_DECL, \\\n   LANG_HOOKS_WRITE_GLOBALS, \\\n+  LANG_HOOKS_PREPARE_ASSEMBLE_VARIABLE, \\\n   LANG_HOOKS_DECL_OK_FOR_SIBCALL, \\\n }\n "}, {"sha": "089fc4ea0592bbdd94459f3c25abeb0d83df7426", "filename": "gcc/langhooks.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35543c0dd3d5377461d7a1d2902b89543b65276/gcc%2Flanghooks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35543c0dd3d5377461d7a1d2902b89543b65276/gcc%2Flanghooks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flanghooks.h?ref=d35543c0dd3d5377461d7a1d2902b89543b65276", "patch": "@@ -181,6 +181,9 @@ struct lang_hooks_for_decls\n      of compilation */\n   void (*final_write_globals) PARAMS ((void));\n \n+  /* Do necessary preparations before assemble_variable can proceed.  */\n+  void (*prepare_assemble_variable) PARAMS ((tree));\n+\n   /* True if this decl may be called via a sibcall.  */\n   bool (*ok_for_sibcall) PARAMS ((tree));\n };"}, {"sha": "fdfa02273418219f9572370c2093c1fb732a348a", "filename": "gcc/varasm.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35543c0dd3d5377461d7a1d2902b89543b65276/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35543c0dd3d5377461d7a1d2902b89543b65276/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=d35543c0dd3d5377461d7a1d2902b89543b65276", "patch": "@@ -1409,6 +1409,9 @@ assemble_variable (decl, top_level, at_end, dont_output_data)\n   int reloc = 0;\n   rtx decl_rtl;\n \n+  if (lang_hooks.decls.prepare_assemble_variable)\n+    (*lang_hooks.decls.prepare_assemble_variable) (decl);\n+\n   last_assemble_variable_decl = 0;\n \n   /* Normally no need to say anything here for external references,"}]}