{"sha": "9b63f28250377b90a744fe57ff482df9c6ee70ed", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWI2M2YyODI1MDM3N2I5MGE3NDRmZTU3ZmY0ODJkZjljNmVlNzBlZA==", "commit": {"author": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2009-06-21T19:05:35Z"}, "committer": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2009-06-21T19:05:35Z"}, "message": "re PR fortran/39850 (Too strict checking for procedures as actual argument)\n\n2009-06-21  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/39850\n\t* interface.c (gfc_compare_interfaces): Take care of implicit typing\n\twhen checking the function attribute. Plus another bugfix.\n\t(compare_parameter): Set attr.function and attr.subroutine according\n\tto the usage of a procedure as actual argument.\n\n\n2009-06-21  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/39850\n\t* gfortran.dg/interface_19.f90: Add 'cleanup-modules'.\n\t* gfortran.dg/interface_20.f90: Ditto.\n\t* gfortran.dg/interface_21.f90: Ditto.\n\t* gfortran.dg/interface_22.f90: Ditto.\n\t* gfortran.dg/interface_30.f90: New.\n\t* gfortran.dg/proc_ptr_11.f90: Fix invalid test case.\n\nFrom-SVN: r148767", "tree": {"sha": "3160767e4f7c3939cd7b606a23072d4c87d6230b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3160767e4f7c3939cd7b606a23072d4c87d6230b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9b63f28250377b90a744fe57ff482df9c6ee70ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b63f28250377b90a744fe57ff482df9c6ee70ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b63f28250377b90a744fe57ff482df9c6ee70ed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b63f28250377b90a744fe57ff482df9c6ee70ed/comments", "author": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "45a1ba933e8a2679470d45feeb440183dcbad4d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45a1ba933e8a2679470d45feeb440183dcbad4d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45a1ba933e8a2679470d45feeb440183dcbad4d9"}], "stats": {"total": 85, "additions": 80, "deletions": 5}, "files": [{"sha": "1c1a6c111e37ac577afd26dbb2c12d0e6b537cc6", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b63f28250377b90a744fe57ff482df9c6ee70ed/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b63f28250377b90a744fe57ff482df9c6ee70ed/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=9b63f28250377b90a744fe57ff482df9c6ee70ed", "patch": "@@ -1,3 +1,11 @@\n+2009-06-21  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/39850\n+\t* interface.c (gfc_compare_interfaces): Take care of implicit typing\n+\twhen checking the function attribute. Plus another bugfix.\n+\t(compare_parameter): Set attr.function and attr.subroutine according\n+\tto the usage of a procedure as actual argument.\n+\n 2009-06-20  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/40452"}, {"sha": "7d26fe444f99938eca0c4ddd70e27c8164379f26", "filename": "gcc/fortran/interface.c", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b63f28250377b90a744fe57ff482df9c6ee70ed/gcc%2Ffortran%2Finterface.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b63f28250377b90a744fe57ff482df9c6ee70ed/gcc%2Ffortran%2Finterface.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Finterface.c?ref=9b63f28250377b90a744fe57ff482df9c6ee70ed", "patch": "@@ -939,7 +939,9 @@ gfc_compare_interfaces (gfc_symbol *s1, gfc_symbol *s2, int generic_flag,\n {\n   gfc_formal_arglist *f1, *f2;\n \n-  if (s1->attr.function && !s2->attr.function)\n+  if (s1->attr.function && (s2->attr.subroutine\n+      || (!s2->attr.function && s2->ts.type == BT_UNKNOWN\n+\t  && gfc_get_default_type (s2->name, s2->ns)->type == BT_UNKNOWN)))\n     {\n       if (errmsg != NULL)\n \tsnprintf (errmsg, err_len, \"'%s' is not a function\", s2->name);\n@@ -967,8 +969,6 @@ gfc_compare_interfaces (gfc_symbol *s1, gfc_symbol *s2, int generic_flag,\n \t\t      \"of '%s'\", s2->name);\n \t  return 0;\n \t}\n-      if (s1->attr.if_source == IFSRC_DECL)\n-\treturn 1;\n     }\n \n   if (s1->attr.if_source == IFSRC_UNKNOWN\n@@ -1388,6 +1388,7 @@ compare_parameter (gfc_symbol *formal, gfc_expr *actual,\n   if (actual->ts.type == BT_PROCEDURE)\n     {\n       char err[200];\n+      gfc_symbol *act_sym = actual->symtree->n.sym;\n \n       if (formal->attr.flavor != FL_PROCEDURE)\n \t{\n@@ -1396,7 +1397,7 @@ compare_parameter (gfc_symbol *formal, gfc_expr *actual,\n \t  return 0;\n \t}\n \n-      if (!gfc_compare_interfaces (formal, actual->symtree->n.sym, 0, 1, err,\n+      if (!gfc_compare_interfaces (formal, act_sym, 0, 1, err,\n \t\t\t\t   sizeof(err)))\n \t{\n \t  if (where)\n@@ -1405,6 +1406,13 @@ compare_parameter (gfc_symbol *formal, gfc_expr *actual,\n \t  return 0;\n \t}\n \n+      if (formal->attr.function && !act_sym->attr.function)\n+\tgfc_add_function (&act_sym->attr, act_sym->name, &act_sym->declared_at);\n+\n+      if (formal->attr.subroutine && !act_sym->attr.subroutine)\n+\tgfc_add_subroutine (&act_sym->attr, act_sym->name,\n+\t\t\t    &act_sym->declared_at);\n+\n       return 1;\n     }\n "}, {"sha": "3618373d51492d31419e5e24b78c9cd288f76193", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b63f28250377b90a744fe57ff482df9c6ee70ed/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b63f28250377b90a744fe57ff482df9c6ee70ed/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9b63f28250377b90a744fe57ff482df9c6ee70ed", "patch": "@@ -1,3 +1,13 @@\n+2009-06-21  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/39850\n+\t* gfortran.dg/interface_19.f90: Add 'cleanup-modules'.\n+\t* gfortran.dg/interface_20.f90: Ditto.\n+\t* gfortran.dg/interface_21.f90: Ditto.\n+\t* gfortran.dg/interface_22.f90: Ditto.\n+\t* gfortran.dg/interface_30.f90: New.\n+\t* gfortran.dg/proc_ptr_11.f90: Fix invalid test case.\n+\n 2009-06-21  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* gcc.dg/tree-ssa/fre-vce-1.c: Cleanup \"fre\" tree dump."}, {"sha": "7a88fc91b3efc261889c4ad7615be9e2a0a37bb7", "filename": "gcc/testsuite/gfortran.dg/interface_19.f90", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b63f28250377b90a744fe57ff482df9c6ee70ed/gcc%2Ftestsuite%2Fgfortran.dg%2Finterface_19.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b63f28250377b90a744fe57ff482df9c6ee70ed/gcc%2Ftestsuite%2Fgfortran.dg%2Finterface_19.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Finterface_19.f90?ref=9b63f28250377b90a744fe57ff482df9c6ee70ed", "patch": "@@ -27,3 +27,6 @@ end module m\n call sub()\n call sub(dcos)\n end\n+\n+! { dg-final { cleanup-modules \"m\" } }\n+"}, {"sha": "9a7dc5cb13157793eaa09ddac59802a9b4685e06", "filename": "gcc/testsuite/gfortran.dg/interface_20.f90", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b63f28250377b90a744fe57ff482df9c6ee70ed/gcc%2Ftestsuite%2Fgfortran.dg%2Finterface_20.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b63f28250377b90a744fe57ff482df9c6ee70ed/gcc%2Ftestsuite%2Fgfortran.dg%2Finterface_20.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Finterface_20.f90?ref=9b63f28250377b90a744fe57ff482df9c6ee70ed", "patch": "@@ -18,3 +18,6 @@ end module m\n intrinsic cos\n call sub(cos) ! { dg-error \"wrong number of arguments\" }\n end\n+\n+! { dg-final { cleanup-modules \"m\" } }\n+"}, {"sha": "566a9ef37075d7273595bd47f668d26a2e352403", "filename": "gcc/testsuite/gfortran.dg/interface_21.f90", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b63f28250377b90a744fe57ff482df9c6ee70ed/gcc%2Ftestsuite%2Fgfortran.dg%2Finterface_21.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b63f28250377b90a744fe57ff482df9c6ee70ed/gcc%2Ftestsuite%2Fgfortran.dg%2Finterface_21.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Finterface_21.f90?ref=9b63f28250377b90a744fe57ff482df9c6ee70ed", "patch": "@@ -20,3 +20,6 @@ end module m\n EXTERNAL foo  ! implicit interface is undefined\n call sub(foo) ! { dg-error \"is not a function\" }\n end\n+\n+! { dg-final { cleanup-modules \"m\" } }\n+"}, {"sha": "fa8e517a186538a2ac74f0e4cd5541c66ceb6c90", "filename": "gcc/testsuite/gfortran.dg/interface_22.f90", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b63f28250377b90a744fe57ff482df9c6ee70ed/gcc%2Ftestsuite%2Fgfortran.dg%2Finterface_22.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b63f28250377b90a744fe57ff482df9c6ee70ed/gcc%2Ftestsuite%2Fgfortran.dg%2Finterface_22.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Finterface_22.f90?ref=9b63f28250377b90a744fe57ff482df9c6ee70ed", "patch": "@@ -23,3 +23,6 @@ module gswap\n     module procedure sreal, schar, sint => sreal ! { dg-error \"Syntax error in MODULE PROCEDURE statement\" }\n   end interface swap\n end module gswap\n+\n+! { dg-final { cleanup-modules \"foo g gswap\" } }\n+"}, {"sha": "0576a42510efbb4b96109fca3b0c1c39649e93ec", "filename": "gcc/testsuite/gfortran.dg/interface_30.f90", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b63f28250377b90a744fe57ff482df9c6ee70ed/gcc%2Ftestsuite%2Fgfortran.dg%2Finterface_30.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b63f28250377b90a744fe57ff482df9c6ee70ed/gcc%2Ftestsuite%2Fgfortran.dg%2Finterface_30.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Finterface_30.f90?ref=9b63f28250377b90a744fe57ff482df9c6ee70ed", "patch": "@@ -0,0 +1,37 @@\n+! { dg-do compile }\n+!\n+! PR39850: Too strict checking for procedures as actual argument\n+!\n+! Original test case by Tobias Burnus <burnus@gcc.gnu.org>\n+! Modified by Janus Weil <janus@gcc.gnu.org>\n+\n+real function func()\n+  print *,\"func\"\n+  func = 42.0\n+end function func\n+\n+program test\n+  external func1,func2,func3,func4  ! subroutine or implicitly typed real function\n+  call sub1(func1)\n+  call sub2(func2)\n+  call sub1(func3)\n+  call sub2(func3)  ! { dg-error \"Type mismatch in argument\" }\n+  call sub2(func4)\n+  call sub1(func4)  ! { dg-error \"Interface mismatch in dummy procedure\" }\n+contains\n+  subroutine sub1(a1)\n+    interface\n+      real function a1()\n+      end function\n+    end interface\n+    print *, a1()\n+  end subroutine sub1\n+  subroutine sub2(a2)\n+    interface\n+      subroutine a2\n+      end subroutine\n+    end interface\n+    call a2()\n+  end subroutine\n+end\n+"}, {"sha": "4e8b3c2531428260593f190478212cfad78165fa", "filename": "gcc/testsuite/gfortran.dg/proc_ptr_11.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b63f28250377b90a744fe57ff482df9c6ee70ed/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_11.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b63f28250377b90a744fe57ff482df9c6ee70ed/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_11.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_11.f90?ref=9b63f28250377b90a744fe57ff482df9c6ee70ed", "patch": "@@ -55,7 +55,7 @@ function add( a, b )\n     end function add\n \n     integer function f(x)\n-      integer :: x\n+      integer,intent(in) :: x\n       f = 317 + x\n     end function\n "}]}