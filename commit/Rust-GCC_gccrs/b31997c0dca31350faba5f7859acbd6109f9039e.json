{"sha": "b31997c0dca31350faba5f7859acbd6109f9039e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjMxOTk3YzBkY2EzMTM1MGZhYmE1Zjc4NTlhY2JkNjEwOWY5MDM5ZQ==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2004-11-22T22:01:11Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2004-11-22T22:01:11Z"}, "message": "tree-flow.h: Remove the prototype for remove_phi_arg.\n\n\t* tree-flow.h: Remove the prototype for remove_phi_arg.\n\tAdd a prototype for remove_phi_args.\n\t* tree-phinodes.c (remove_phi_arg): Remove.\n\t(remove_phi_args): New.\n\t* tree-ssa.c (ssa_remove_edge): Call remove_phi_args instead\n\tof remove_phi_arg.\n\nFrom-SVN: r91034", "tree": {"sha": "14ecdd9bd130d11cf1bae895d1af4e0de1322006", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/14ecdd9bd130d11cf1bae895d1af4e0de1322006"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b31997c0dca31350faba5f7859acbd6109f9039e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b31997c0dca31350faba5f7859acbd6109f9039e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b31997c0dca31350faba5f7859acbd6109f9039e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b31997c0dca31350faba5f7859acbd6109f9039e/comments", "author": null, "committer": null, "parents": [{"sha": "d7889929fdbfff585ee02e6e8d791f2e3b163919", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7889929fdbfff585ee02e6e8d791f2e3b163919", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7889929fdbfff585ee02e6e8d791f2e3b163919"}], "stats": {"total": 59, "additions": 27, "deletions": 32}, "files": [{"sha": "316ad25a1f226f477dfff7db09c6680cff3ae4f7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b31997c0dca31350faba5f7859acbd6109f9039e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b31997c0dca31350faba5f7859acbd6109f9039e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b31997c0dca31350faba5f7859acbd6109f9039e", "patch": "@@ -1,3 +1,12 @@\n+2004-11-22  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* tree-flow.h: Remove the prototype for remove_phi_arg.\n+\tAdd a prototype for remove_phi_args.\n+\t* tree-phinodes.c (remove_phi_arg): Remove.\n+\t(remove_phi_args): New.\n+\t* tree-ssa.c (ssa_remove_edge): Call remove_phi_args instead\n+\tof remove_phi_arg.\n+\n 2004-11-23  Ben Elliston  <bje@au.ibm.com>\n \n \t* doc/cfg.texi (Maintaining the CFG): Use @ftable instead of"}, {"sha": "4b9a3ed5cf4f3cdcb4dbe446df027eb63995fb33", "filename": "gcc/tree-flow.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b31997c0dca31350faba5f7859acbd6109f9039e/gcc%2Ftree-flow.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b31997c0dca31350faba5f7859acbd6109f9039e/gcc%2Ftree-flow.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-flow.h?ref=b31997c0dca31350faba5f7859acbd6109f9039e", "patch": "@@ -510,7 +510,7 @@ extern stmt_ann_t create_stmt_ann (tree);\n extern tree_ann_t create_tree_ann (tree);\n extern tree create_phi_node (tree, basic_block);\n extern void add_phi_arg (tree *, tree, edge);\n-extern void remove_phi_arg (tree, basic_block);\n+extern void remove_phi_args (edge);\n extern void remove_phi_arg_num (tree, int);\n extern void remove_phi_node (tree, tree, basic_block);\n extern void remove_all_phi_nodes_for (bitmap);"}, {"sha": "c4240e7cb69a157c0e60e65a22d9f47101c1f4f5", "filename": "gcc/tree-phinodes.c", "status": "modified", "additions": 15, "deletions": 23, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b31997c0dca31350faba5f7859acbd6109f9039e/gcc%2Ftree-phinodes.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b31997c0dca31350faba5f7859acbd6109f9039e/gcc%2Ftree-phinodes.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-phinodes.c?ref=b31997c0dca31350faba5f7859acbd6109f9039e", "patch": "@@ -349,29 +349,6 @@ add_phi_arg (tree *phi, tree def, edge e)\n   PHI_NUM_ARGS (*phi)++;\n }\n \n-/* Remove a PHI argument from PHI.  BLOCK is the predecessor block where\n-   the PHI argument is coming from.  */\n-\n-void\n-remove_phi_arg (tree phi, basic_block block)\n-{\n-  int i, num_elem = PHI_NUM_ARGS (phi);\n-\n-  for (i = 0; i < num_elem; i++)\n-    {\n-      basic_block src_bb;\n-\n-      src_bb = PHI_ARG_EDGE (phi, i)->src;\n-\n-      if (src_bb == block)\n-\t{\n-\t  remove_phi_arg_num (phi, i);\n-\t  return;\n-\t}\n-    }\n-}\n-\n-\n /* Remove the Ith argument from PHI's argument list.  This routine assumes\n    ordering of alternatives in the vector is not important and implements\n    removal by swapping the last alternative with the alternative we want to\n@@ -400,6 +377,21 @@ remove_phi_arg_num (tree phi, int i)\n   PHI_NUM_ARGS (phi)--;\n }\n \n+/* Remove all PHI arguments associated with edge E.  */\n+\n+void\n+remove_phi_args (edge e)\n+{\n+  tree phi;\n+\n+  for (phi = phi_nodes (e->dest); phi; phi = PHI_CHAIN (phi))\n+    {\n+      int index = phi_arg_from_edge (phi, e);\n+      if (index >= 0)\n+\tremove_phi_arg_num (phi, index);\n+    }\n+}\n+\n /* Remove PHI node PHI from basic block BB.  If PREV is non-NULL, it is\n    used as the node immediately before PHI in the linked list.  */\n "}, {"sha": "1e2b59d44ccde3e4fc55ac654315f8e2d48cf397", "filename": "gcc/tree-ssa.c", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b31997c0dca31350faba5f7859acbd6109f9039e/gcc%2Ftree-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b31997c0dca31350faba5f7859acbd6109f9039e/gcc%2Ftree-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa.c?ref=b31997c0dca31350faba5f7859acbd6109f9039e", "patch": "@@ -53,14 +53,8 @@ Boston, MA 02111-1307, USA.  */\n void\n ssa_remove_edge (edge e)\n {\n-  tree phi, next;\n-\n-  /* Remove the appropriate PHI arguments in E's destination block.  */\n-  for (phi = phi_nodes (e->dest); phi; phi = next)\n-    {\n-      next = PHI_CHAIN (phi);\n-      remove_phi_arg (phi, e->src);\n-    }\n+  /* Remove all PHI arguments for E.  */\n+  remove_phi_args (e);\n \n   remove_edge (e);\n }"}]}