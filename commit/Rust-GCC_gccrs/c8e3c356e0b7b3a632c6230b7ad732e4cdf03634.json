{"sha": "c8e3c356e0b7b3a632c6230b7ad732e4cdf03634", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzhlM2MzNTZlMGI3YjNhNjMyYzYyMzBiN2FkNzMyZTRjZGYwMzYzNA==", "commit": {"author": {"name": "Christophe Lyon", "email": "christophe.lyon@linaro.org", "date": "2017-06-26T09:25:55Z"}, "committer": {"name": "Christophe Lyon", "email": "clyon@gcc.gnu.org", "date": "2017-06-26T09:25:55Z"}, "message": "[ARM, testsuite] Add -mfloat-abi=hard to arm_neon_ok\n\n2017-06-02  Christophe Lyon  <christophe.lyon@linaro.org>\n\n\tgcc/testsuite/\n\t* lib/target-supports.exp\n\t(check_effective_target_arm_neon_ok_nocache): Add flags with\n\t-mfloat-abi=hard. Include arm_neon.h.\n\t(check_effective_target_arm_neon_ok_no_float_abi_nocache): New.\n\t(check_effective_target_arm_neon_ok_no_float_abi): New.\n\t* gcc.target/arm/lto/pr65837_0.c: Require\n\tarm_neon_ok_no_float_abi. Add -mfpu=neon to dg-lto-options.\n\t* gcc.target/arm/lto/pr65837-attr_0.c: Require\n\tarm_neon_ok_no_float_abi. Remove dg-suppress-ld-options.\n\n\tgcc/\n\t* doc/sourcebuild.texi (ARM-specific attributes): Document new\n\tarm_neon_ok_no_float_abi effective target.\n\nFrom-SVN: r249639", "tree": {"sha": "11c50b6106b291d2cd8045cd272e1124e6134f4c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/11c50b6106b291d2cd8045cd272e1124e6134f4c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c8e3c356e0b7b3a632c6230b7ad732e4cdf03634", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8e3c356e0b7b3a632c6230b7ad732e4cdf03634", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8e3c356e0b7b3a632c6230b7ad732e4cdf03634", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8e3c356e0b7b3a632c6230b7ad732e4cdf03634/comments", "author": null, "committer": null, "parents": [{"sha": "25853b33482749fb6a07336ea3790a45cc1752f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25853b33482749fb6a07336ea3790a45cc1752f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/25853b33482749fb6a07336ea3790a45cc1752f7"}], "stats": {"total": 63, "additions": 60, "deletions": 3}, "files": [{"sha": "546342d907b906e1d839bcee43bf649b831e923a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8e3c356e0b7b3a632c6230b7ad732e4cdf03634/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8e3c356e0b7b3a632c6230b7ad732e4cdf03634/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c8e3c356e0b7b3a632c6230b7ad732e4cdf03634", "patch": "@@ -1,3 +1,8 @@\n+2017-06-26  Christophe Lyon  <christophe.lyon@linaro.org>\n+\n+\t* doc/sourcebuild.texi (ARM-specific attributes): Document new\n+\tarm_neon_ok_no_float_abi effective target.\n+\n 2017-06-26  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/80928"}, {"sha": "4136a68a615d0e2d96111d977fc9490b7012071c", "filename": "gcc/doc/sourcebuild.texi", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8e3c356e0b7b3a632c6230b7ad732e4cdf03634/gcc%2Fdoc%2Fsourcebuild.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8e3c356e0b7b3a632c6230b7ad732e4cdf03634/gcc%2Fdoc%2Fsourcebuild.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fsourcebuild.texi?ref=c8e3c356e0b7b3a632c6230b7ad732e4cdf03634", "patch": "@@ -1582,6 +1582,12 @@ Test system supports executing NEON v2 instructions.\n ARM Target supports @code{-mfpu=neon -mfloat-abi=softfp} or compatible\n options.  Some multilibs may be incompatible with these options.\n \n+@item arm_neon_ok_no_float_abi\n+@anchor{arm_neon_ok_no_float_abi}\n+ARM Target supports NEON with @code{-mfpu=neon}, but without any\n+-mfloat-abi= option.  Some multilibs may be incompatible with this\n+option.\n+\n @item arm_neonv2_ok\n @anchor{arm_neonv2_ok}\n ARM Target supports @code{-mfpu=neon-vfpv4 -mfloat-abi=softfp} or compatible"}, {"sha": "87894bf76543ac7c6718b5932dda8a10ef8dd1dc", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8e3c356e0b7b3a632c6230b7ad732e4cdf03634/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8e3c356e0b7b3a632c6230b7ad732e4cdf03634/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c8e3c356e0b7b3a632c6230b7ad732e4cdf03634", "patch": "@@ -1,3 +1,15 @@\n+2017-06-26  Christophe Lyon  <christophe.lyon@linaro.org>\n+\n+\t* lib/target-supports.exp\n+\t(check_effective_target_arm_neon_ok_nocache): Add flags with\n+\t-mfloat-abi=hard. Include arm_neon.h.\n+\t(check_effective_target_arm_neon_ok_no_float_abi_nocache): New.\n+\t(check_effective_target_arm_neon_ok_no_float_abi): New.\n+\t* gcc.target/arm/lto/pr65837_0.c: Require\n+\tarm_neon_ok_no_float_abi. Add -mfpu=neon to dg-lto-options.\n+\t* gcc.target/arm/lto/pr65837-attr_0.c: Require\n+\tarm_neon_ok_no_float_abi. Remove dg-suppress-ld-options.\n+\n 2017-06-24  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/62315"}, {"sha": "f00480b5c02a8ade75c9ed013a57d22982969a73", "filename": "gcc/testsuite/gcc.target/arm/lto/pr65837-attr_0.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8e3c356e0b7b3a632c6230b7ad732e4cdf03634/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Flto%2Fpr65837-attr_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8e3c356e0b7b3a632c6230b7ad732e4cdf03634/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Flto%2Fpr65837-attr_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Flto%2Fpr65837-attr_0.c?ref=c8e3c356e0b7b3a632c6230b7ad732e4cdf03634", "patch": "@@ -1,6 +1,7 @@\n /* { dg-lto-do run } */\n /* { dg-require-effective-target arm_neon_hw } */\n-/* { dg-lto-options {{-flto}} } */\n+/* { dg-require-effective-target arm_neon_ok_no_float_abi } */\n+/* { dg-lto-options {{-flto -mfpu=neon}} } */\n \n #include \"arm_neon.h\"\n "}, {"sha": "5d7cea7b2e4e36a34ed0dde07677b147e1ec1903", "filename": "gcc/testsuite/gcc.target/arm/lto/pr65837_0.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8e3c356e0b7b3a632c6230b7ad732e4cdf03634/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Flto%2Fpr65837_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8e3c356e0b7b3a632c6230b7ad732e4cdf03634/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Flto%2Fpr65837_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Flto%2Fpr65837_0.c?ref=c8e3c356e0b7b3a632c6230b7ad732e4cdf03634", "patch": "@@ -1,7 +1,7 @@\n /* { dg-lto-do run } */\n /* { dg-require-effective-target arm_neon_hw } */\n+/* { dg-require-effective-target arm_neon_ok_no_float_abi } */\n /* { dg-lto-options {{-flto -mfpu=neon}} } */\n-/* { dg-suppress-ld-options {-mfpu=neon} } */\n \n #include \"arm_neon.h\"\n "}, {"sha": "f6e24401879429c2ef1a5dc9f50ff980eafcc1f3", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 34, "deletions": 1, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8e3c356e0b7b3a632c6230b7ad732e4cdf03634/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8e3c356e0b7b3a632c6230b7ad732e4cdf03634/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=c8e3c356e0b7b3a632c6230b7ad732e4cdf03634", "patch": "@@ -3461,8 +3461,9 @@ proc check_effective_target_arm_neon_ok_nocache { } {\n     global et_arm_neon_flags\n     set et_arm_neon_flags \"\"\n     if { [check_effective_target_arm32] } {\n-\tforeach flags {\"\" \"-mfloat-abi=softfp\" \"-mfpu=neon\" \"-mfpu=neon -mfloat-abi=softfp\" \"-mfpu=neon -mfloat-abi=softfp -march=armv7-a\"} {\n+\tforeach flags {\"\" \"-mfloat-abi=softfp\" \"-mfpu=neon\" \"-mfpu=neon -mfloat-abi=softfp\" \"-mfpu=neon -mfloat-abi=softfp -march=armv7-a\" \"-mfloat-abi=hard\" \"-mfpu=neon -mfloat-abi=hard\" \"-mfpu=neon -mfloat-abi=hard -march=armv7-a\"} {\n \t    if { [check_no_compiler_messages_nocache arm_neon_ok object {\n+\t\t#include <arm_neon.h>\n \t\tint dummy;\n \t\t#ifndef __ARM_NEON__\n \t\t#error not NEON\n@@ -3487,6 +3488,38 @@ proc check_effective_target_arm_neon_ok { } {\n \t\tcheck_effective_target_arm_neon_ok_nocache]\n }\n \n+# Return 1 if this is an ARM target supporting -mfpu=neon without any\n+# -mfloat-abi= option.  Useful in tests where add_options is not\n+# supported (such as lto tests).\n+\n+proc check_effective_target_arm_neon_ok_no_float_abi_nocache { } {\n+    if { [check_effective_target_arm32] } {\n+\tforeach flags {\"-mfpu=neon\"} {\n+\t    if { [check_no_compiler_messages_nocache arm_neon_ok_no_float_abi object {\n+\t\t#include <arm_neon.h>\n+\t\tint dummy;\n+\t\t#ifndef __ARM_NEON__\n+\t\t#error not NEON\n+\t\t#endif\n+\t\t/* Avoid the case where a test adds -mfpu=neon, but the toolchain is\n+\t\t   configured for -mcpu=arm926ej-s, for example.  */\n+\t\t#if __ARM_ARCH < 7 || __ARM_ARCH_PROFILE == 'M'\n+\t\t#error Architecture does not support NEON.\n+\t\t#endif\n+\t    } \"$flags\"] } {\n+\t\treturn 1\n+\t    }\n+\t}\n+    }\n+\n+    return 0\n+}\n+\n+proc check_effective_target_arm_neon_ok_no_float_abi { } {\n+    return [check_cached_effective_target arm_neon_ok_no_float_abi \\\n+\t\tcheck_effective_target_arm_neon_ok_no_float_abi_nocache]\n+}\n+\n proc check_effective_target_arm_crc_ok_nocache { } {\n     global et_arm_crc_flags\n     set et_arm_crc_flags \"-march=armv8-a+crc\""}]}