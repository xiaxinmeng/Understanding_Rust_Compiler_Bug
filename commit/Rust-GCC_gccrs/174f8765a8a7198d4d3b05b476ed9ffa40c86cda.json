{"sha": "174f8765a8a7198d4d3b05b476ed9ffa40c86cda", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTc0Zjg3NjVhOGE3MTk4ZDRkM2IwNWI0NzZlZDlmZmE0MGM4NmNkYQ==", "commit": {"author": {"name": "Ira Rosen", "email": "irar@il.ibm.com", "date": "2007-10-22T12:05:36Z"}, "committer": {"name": "Ira Rosen", "email": "irar@gcc.gnu.org", "date": "2007-10-22T12:05:36Z"}, "message": "re PR tree-optimization/33854 (ICE in vectorizable_conversion, at tree-vect-transform.c:3374)\n\n\tPR tree-optimization/33854\n\t* tree-vect-analyze.c (vect_determine_vectorization_factor): Add\n\tFLOAT_EXPR to the list of promotion operations.\n\nFrom-SVN: r129549", "tree": {"sha": "3925db340293586773afd38f0f51719020b11346", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3925db340293586773afd38f0f51719020b11346"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/174f8765a8a7198d4d3b05b476ed9ffa40c86cda", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/174f8765a8a7198d4d3b05b476ed9ffa40c86cda", "html_url": "https://github.com/Rust-GCC/gccrs/commit/174f8765a8a7198d4d3b05b476ed9ffa40c86cda", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/174f8765a8a7198d4d3b05b476ed9ffa40c86cda/comments", "author": {"login": "irar2", "id": 16818592, "node_id": "MDQ6VXNlcjE2ODE4NTky", "avatar_url": "https://avatars.githubusercontent.com/u/16818592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/irar2", "html_url": "https://github.com/irar2", "followers_url": "https://api.github.com/users/irar2/followers", "following_url": "https://api.github.com/users/irar2/following{/other_user}", "gists_url": "https://api.github.com/users/irar2/gists{/gist_id}", "starred_url": "https://api.github.com/users/irar2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/irar2/subscriptions", "organizations_url": "https://api.github.com/users/irar2/orgs", "repos_url": "https://api.github.com/users/irar2/repos", "events_url": "https://api.github.com/users/irar2/events{/privacy}", "received_events_url": "https://api.github.com/users/irar2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9ad5e54f9548cfdd2fbed30d11fc82fd9f4bdd6e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ad5e54f9548cfdd2fbed30d11fc82fd9f4bdd6e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ad5e54f9548cfdd2fbed30d11fc82fd9f4bdd6e"}], "stats": {"total": 51, "additions": 49, "deletions": 2}, "files": [{"sha": "caf5cfdc1ab7083d92f052084b85bc26bda62b68", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/174f8765a8a7198d4d3b05b476ed9ffa40c86cda/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/174f8765a8a7198d4d3b05b476ed9ffa40c86cda/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=174f8765a8a7198d4d3b05b476ed9ffa40c86cda", "patch": "@@ -1,3 +1,9 @@\n+2007-10-22  Ira Rosen  <irar@il.ibm.com>\n+\n+\tPR tree-optimization/33854\n+\t* tree-vect-analyze.c (vect_determine_vectorization_factor): Add\n+\tFLOAT_EXPR to the list of promotion operations.\t\n+\n 2007-10-22  Rask Ingemann Lambertsen  <rask@sygehus.dk>\n \n \tPR target/29473"}, {"sha": "7374719e204427c7a0cd2e42820200f36ee984ca", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/174f8765a8a7198d4d3b05b476ed9ffa40c86cda/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/174f8765a8a7198d4d3b05b476ed9ffa40c86cda/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=174f8765a8a7198d4d3b05b476ed9ffa40c86cda", "patch": "@@ -1,3 +1,9 @@\n+2007-10-22  Ira Rosen  <irar@il.ibm.com>\n+\n+\tPR tree-optimization/33854\n+\t* gcc.dg/vect/O1-pr33854.c: New testcase.\n+\t* gcc.dg/vect/vect.exp: Run tests starting with \"O1-\" with -O1.\n+\n 2007-10-21  David Edelsohn  <edelsohn@gnu.org>\n \n \t* gcc.dg/unwind-1.c: Disable on AIX."}, {"sha": "346da6b60bdea5265ad8f6dcd76276d1d8f4fece", "filename": "gcc/testsuite/gcc.dg/vect/O1-pr33854.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/174f8765a8a7198d4d3b05b476ed9ffa40c86cda/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2FO1-pr33854.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/174f8765a8a7198d4d3b05b476ed9ffa40c86cda/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2FO1-pr33854.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2FO1-pr33854.c?ref=174f8765a8a7198d4d3b05b476ed9ffa40c86cda", "patch": "@@ -0,0 +1,22 @@\n+/* Testcase by Martin Michlmayr <tbm@cyrius.com> */\n+/* { dg-do compile } */\n+\n+extern void *malloc (long unsigned int __size);\n+typedef struct VMatrix_ VMatrix;\n+struct VMatrix_\n+{\n+  int dim;\n+  int t2;\n+};\n+void uniform_correlation_matrix (VMatrix * v)\n+{\n+  double *xbar = ((void *) 0);\n+  int m = v->dim;\n+  int i;\n+  xbar = malloc (m * sizeof *xbar);\n+  for (i = 0; i < m; i++)\n+    xbar[i] /= m;\n+}\n+\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */\n+"}, {"sha": "e58f5809d095e30253d16a928af4a132f46eb020", "filename": "gcc/testsuite/gcc.dg/vect/vect.exp", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/174f8765a8a7198d4d3b05b476ed9ffa40c86cda/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/174f8765a8a7198d4d3b05b476ed9ffa40c86cda/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect.exp?ref=174f8765a8a7198d4d3b05b476ed9ffa40c86cda", "patch": "@@ -23,7 +23,7 @@ load_lib gcc-dg.exp\n set DEFAULT_VECTCFLAGS \"\"\n \n # These flags are used for all targets.\n-lappend DEFAULT_VECTCFLAGS \"-O2\" \"-ftree-vectorize\"\n+lappend DEFAULT_VECTCFLAGS \"-ftree-vectorize\"\n \n # If the target system supports vector instructions, the default action\n # for a test is 'run', otherwise it's 'compile'.  Save current default.\n@@ -98,6 +98,13 @@ if [istarget \"powerpc*-*-*\"] {\n # Initialize `dg'.\n dg-init\n \n+global O1_VECTCFLAGS\n+set O1_VECTCFLAGS $DEFAULT_VECTCFLAGS\n+lappend O1_VECTCFLAGS \"-O1\"\n+lappend O1_VECTCFLAGS \"-fdump-tree-vect-details\"\n+\n+lappend DEFAULT_VECTCFLAGS \"-O2\"\n+\n # Tests that should be run without generating dump info\n dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/nodump-*.\\[cS\\]]]  \\\n \t\"\" $DEFAULT_VECTCFLAGS\n@@ -230,6 +237,11 @@ lappend DEFAULT_VECTCFLAGS \"-O3\"\n dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/O3-vect-*.\\[cS\\]]]  \\\n         \"\" $DEFAULT_VECTCFLAGS\n \n+# With -O1\n+dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/O1-*.\\[cS\\]]]  \\\n+        \"\" $O1_VECTCFLAGS\n+\n+\n # Clean up.\n set dg-do-what-default ${save-dg-do-what-default}\n "}, {"sha": "04257afabc49f12b716ab6c6beacaab5fcb06cf3", "filename": "gcc/tree-vect-analyze.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/174f8765a8a7198d4d3b05b476ed9ffa40c86cda/gcc%2Ftree-vect-analyze.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/174f8765a8a7198d4d3b05b476ed9ffa40c86cda/gcc%2Ftree-vect-analyze.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-analyze.c?ref=174f8765a8a7198d4d3b05b476ed9ffa40c86cda", "patch": "@@ -242,7 +242,8 @@ vect_determine_vectorization_factor (loop_vec_info loop_vinfo)\n \t      operation = GIMPLE_STMT_OPERAND (stmt, 1);\n \t      if (TREE_CODE (operation) == NOP_EXPR\n \t\t  || TREE_CODE (operation) == CONVERT_EXPR\n-\t\t  || TREE_CODE (operation) == WIDEN_MULT_EXPR)\n+\t\t  || TREE_CODE (operation) == WIDEN_MULT_EXPR\n+\t\t  || TREE_CODE (operation) == FLOAT_EXPR)\n \t\t{\n \t\t  tree rhs_type = TREE_TYPE (TREE_OPERAND (operation, 0));\n \t\t  if (TREE_INT_CST_LOW (TYPE_SIZE_UNIT (rhs_type)) < "}]}