{"sha": "5df974120eae22b555b42f19e0bdc8d490c59bc8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWRmOTc0MTIwZWFlMjJiNTU1YjQyZjE5ZTBiZGM4ZDQ5MGM1OWJjOA==", "commit": {"author": {"name": "Anatoly Sokolov", "email": "aesok@post.ru", "date": "2011-01-27T17:10:16Z"}, "committer": {"name": "Anatoly Sokolov", "email": "aesok@gcc.gnu.org", "date": "2011-01-27T17:10:16Z"}, "message": "s390.h (PREFERRED_RELOAD_CLASS): Remove.\n\n\t* config/s390/s390.h (PREFERRED_RELOAD_CLASS): Remove.\n\t* config/s390/s390-protos.h (s390_preferred_reload_class): Remove.\n\t* config/s390/s390.c (TARGET_PREFERRED_RELOAD_CLASS): Define.\n\t(s390_preferred_reload_class): Make static. Change return and\n\t'rclass' argument type to reg_class_t.\n\nFrom-SVN: r169333", "tree": {"sha": "12a3be5b4607604a244dc5cdff8cdca1098af290", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/12a3be5b4607604a244dc5cdff8cdca1098af290"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5df974120eae22b555b42f19e0bdc8d490c59bc8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5df974120eae22b555b42f19e0bdc8d490c59bc8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5df974120eae22b555b42f19e0bdc8d490c59bc8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5df974120eae22b555b42f19e0bdc8d490c59bc8/comments", "author": null, "committer": null, "parents": [{"sha": "779d4b91eb824eb36824dee52bbcfdfe173b2753", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/779d4b91eb824eb36824dee52bbcfdfe173b2753", "html_url": "https://github.com/Rust-GCC/gccrs/commit/779d4b91eb824eb36824dee52bbcfdfe173b2753"}], "stats": {"total": 21, "additions": 13, "deletions": 8}, "files": [{"sha": "7f8d0dc3a0e5e1eb592e3a7b029e0ce8c9b77687", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5df974120eae22b555b42f19e0bdc8d490c59bc8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5df974120eae22b555b42f19e0bdc8d490c59bc8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5df974120eae22b555b42f19e0bdc8d490c59bc8", "patch": "@@ -1,3 +1,11 @@\n+2011-01-27  Anatoly Sokolov  <aesok@post.ru>\n+\n+\t* config/s390/s390.h (PREFERRED_RELOAD_CLASS): Remove.\n+\t* config/s390/s390-protos.h (s390_preferred_reload_class): Remove.\n+\t* config/s390/s390.c (TARGET_PREFERRED_RELOAD_CLASS): Define.\n+\t(s390_preferred_reload_class): Make static. Change return and\n+\t'rclass' argument type to reg_class_t.\n+\n 2011-01-27  Jan Hubicka  <jh@suse.cz>\n \n \tPR middle-end/46949"}, {"sha": "619d0e51dd7bad919af43fcf4e7571871fd968cd", "filename": "gcc/config/s390/s390-protos.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5df974120eae22b555b42f19e0bdc8d490c59bc8/gcc%2Fconfig%2Fs390%2Fs390-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5df974120eae22b555b42f19e0bdc8d490c59bc8/gcc%2Fconfig%2Fs390%2Fs390-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390-protos.h?ref=5df974120eae22b555b42f19e0bdc8d490c59bc8", "patch": "@@ -70,7 +70,6 @@ extern int legitimate_constant_p (rtx);\n extern bool legitimate_reload_constant_p (rtx);\n extern rtx legitimize_pic_address (rtx, rtx);\n extern rtx legitimize_reload_address (rtx, enum machine_mode, int, int);\n-extern enum reg_class s390_preferred_reload_class (rtx, enum reg_class);\n extern enum reg_class s390_secondary_input_reload_class (enum reg_class,\n \t\t\t\t\t\t\t enum machine_mode,\n \t\t\t\t\t\t\t rtx);"}, {"sha": "a8c8bd94362eb7502508cc36e0a5de65413b0e47", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5df974120eae22b555b42f19e0bdc8d490c59bc8/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5df974120eae22b555b42f19e0bdc8d490c59bc8/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=5df974120eae22b555b42f19e0bdc8d490c59bc8", "patch": "@@ -2951,8 +2951,8 @@ legitimate_reload_fp_constant_p (rtx op)\n /* Given an rtx OP being reloaded into a reg required to be in class RCLASS,\n    return the class of reg to actually use.  */\n \n-enum reg_class\n-s390_preferred_reload_class (rtx op, enum reg_class rclass)\n+static reg_class_t\n+s390_preferred_reload_class (rtx op, reg_class_t rclass)\n {\n   switch (GET_CODE (op))\n     {\n@@ -10717,6 +10717,9 @@ s390_loop_unroll_adjust (unsigned nunroll, struct loop *loop)\n #undef TARGET_SCALAR_MODE_SUPPORTED_P\n #define TARGET_SCALAR_MODE_SUPPORTED_P s390_scalar_mode_supported_p\n \n+#undef  TARGET_PREFERRED_RELOAD_CLASS\n+#define TARGET_PREFERRED_RELOAD_CLASS s390_preferred_reload_class\n+\n #undef TARGET_SECONDARY_RELOAD\n #define TARGET_SECONDARY_RELOAD s390_secondary_reload\n "}, {"sha": "abf4efcce270d13ea507257faeaf9174fbd40346", "filename": "gcc/config/s390/s390.h", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5df974120eae22b555b42f19e0bdc8d490c59bc8/gcc%2Fconfig%2Fs390%2Fs390.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5df974120eae22b555b42f19e0bdc8d490c59bc8/gcc%2Fconfig%2Fs390%2Fs390.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.h?ref=5df974120eae22b555b42f19e0bdc8d490c59bc8", "patch": "@@ -531,11 +531,6 @@ extern const enum reg_class regclass_map[FIRST_PSEUDO_REGISTER];\n #define REGNO_OK_FOR_BASE_P(REGNO) REGNO_OK_FOR_INDEX_P (REGNO)\n \n \n-/* Given an rtx X being reloaded into a reg required to be in class CLASS,\n-   return the class of reg to actually use.  */\n-#define PREFERRED_RELOAD_CLASS(X, CLASS)\t\\\n-  s390_preferred_reload_class ((X), (CLASS))\n-\n /* We need secondary memory to move data between GPRs and FPRs.  With\n    DFP the ldgr lgdr instructions are available.  But these\n    instructions do not handle GPR pairs so it is not possible for 31"}]}