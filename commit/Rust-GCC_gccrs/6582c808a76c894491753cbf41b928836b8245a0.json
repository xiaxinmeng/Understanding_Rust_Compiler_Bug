{"sha": "6582c808a76c894491753cbf41b928836b8245a0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjU4MmM4MDhhNzZjODk0NDkxNzUzY2JmNDFiOTI4ODM2YjgyNDVhMA==", "commit": {"author": {"name": "Joel Brobecker", "email": "brobecker@gnat.com", "date": "2004-03-17T08:06:33Z"}, "committer": {"name": "Joel Brobecker", "email": "brobecke@gcc.gnu.org", "date": "2004-03-17T08:06:33Z"}, "message": "dwarf2out.c (subrange_type_die): Define new variable \"subtype\" to hold the subtype tree instead of recomputing...\n\n        * dwarf2out.c (subrange_type_die): Define new variable \"subtype\"\n        to hold the subtype tree instead of recomputing it several times.\n\nFrom-SVN: r79577", "tree": {"sha": "a466dc63fcde15a43df105809a1a2185718a96a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a466dc63fcde15a43df105809a1a2185718a96a6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6582c808a76c894491753cbf41b928836b8245a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6582c808a76c894491753cbf41b928836b8245a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6582c808a76c894491753cbf41b928836b8245a0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6582c808a76c894491753cbf41b928836b8245a0/comments", "author": null, "committer": null, "parents": [{"sha": "cc785e194968d79d424abc0d2b8d8e6bf44a4efc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc785e194968d79d424abc0d2b8d8e6bf44a4efc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc785e194968d79d424abc0d2b8d8e6bf44a4efc"}], "stats": {"total": 14, "additions": 10, "deletions": 4}, "files": [{"sha": "99ebb821c39a097a3a3b7b22339335e157d09791", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6582c808a76c894491753cbf41b928836b8245a0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6582c808a76c894491753cbf41b928836b8245a0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6582c808a76c894491753cbf41b928836b8245a0", "patch": "@@ -1,3 +1,8 @@\n+2004-03-17  Joel Brobecker  <brobecker@gnat.com>\n+\n+\t* dwarf2out.c (subrange_type_die): Define new variable \"subtype\"\n+\tto hold the subtype tree instead of recomputing it several times.\n+\n 2004-03-17  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* config/mn10300/mn10300.c (notice_update_cc): Don't handle"}, {"sha": "cb28ffc815a417400fabc75e1c19678b1afa3d07", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6582c808a76c894491753cbf41b928836b8245a0/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6582c808a76c894491753cbf41b928836b8245a0/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=6582c808a76c894491753cbf41b928836b8245a0", "patch": "@@ -8021,14 +8021,15 @@ subrange_type_die (tree type, dw_die_ref context_die)\n   dw_die_ref subrange_die;\n   tree name = TYPE_NAME (type);\n   const HOST_WIDE_INT size_in_bytes = int_size_in_bytes (type);\n+  tree subtype = TREE_TYPE (type);\n \n   if (context_die == NULL)\n     context_die = comp_unit_die;\n \n-  if (TREE_CODE (TREE_TYPE (type)) == ENUMERAL_TYPE)\n-    subtype_die = gen_enumeration_type_die (TREE_TYPE (type), context_die);\n+  if (TREE_CODE (subtype) == ENUMERAL_TYPE)\n+    subtype_die = gen_enumeration_type_die (subtype, context_die);\n   else\n-    subtype_die = base_type_die (TREE_TYPE (type));\n+    subtype_die = base_type_die (subtype);\n \n   subrange_die = new_die (DW_TAG_subrange_type, context_die, type);\n \n@@ -8039,7 +8040,7 @@ subrange_type_die (tree type, dw_die_ref context_die)\n       add_name_attribute (subrange_die, IDENTIFIER_POINTER (name));\n     }\n \n-  if (int_size_in_bytes (TREE_TYPE (type)) != size_in_bytes)\n+  if (int_size_in_bytes (subtype) != size_in_bytes)\n     {\n       /* The size of the subrange type and its base type do not match,\n          so we need to generate a size attribute for the subrange type.  */"}]}