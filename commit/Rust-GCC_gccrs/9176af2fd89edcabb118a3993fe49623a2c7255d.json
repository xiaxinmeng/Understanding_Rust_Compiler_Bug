{"sha": "9176af2fd89edcabb118a3993fe49623a2c7255d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTE3NmFmMmZkODllZGNhYmIxMThhMzk5M2ZlNDk2MjNhMmM3MjU1ZA==", "commit": {"author": {"name": "Torbjorn Granlund", "email": "tege@gnu.org", "date": "1994-07-05T23:19:00Z"}, "committer": {"name": "Torbjorn Granlund", "email": "tege@gnu.org", "date": "1994-07-05T23:19:00Z"}, "message": "(expand_divmod): Fix typo setting op1_is_pow2.\n\n(expand_divmod): Handle powers-of-two specifically for CEIL_*_EXPR.\n\nFrom-SVN: r7658", "tree": {"sha": "08f6ca9bfa8811b75db3c83d0b7c08fe5411b660", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/08f6ca9bfa8811b75db3c83d0b7c08fe5411b660"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9176af2fd89edcabb118a3993fe49623a2c7255d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9176af2fd89edcabb118a3993fe49623a2c7255d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9176af2fd89edcabb118a3993fe49623a2c7255d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9176af2fd89edcabb118a3993fe49623a2c7255d/comments", "author": null, "committer": null, "parents": [{"sha": "cd5e8f1fc2a2a1934591a15b27005821886db768", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd5e8f1fc2a2a1934591a15b27005821886db768", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd5e8f1fc2a2a1934591a15b27005821886db768"}], "stats": {"total": 23, "additions": 21, "deletions": 2}, "files": [{"sha": "f828e7f07a0533fd05096cdfdd788266fa21e732", "filename": "gcc/expmed.c", "status": "modified", "additions": 21, "deletions": 2, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9176af2fd89edcabb118a3993fe49623a2c7255d/gcc%2Fexpmed.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9176af2fd89edcabb118a3993fe49623a2c7255d/gcc%2Fexpmed.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.c?ref=9176af2fd89edcabb118a3993fe49623a2c7255d", "patch": "@@ -2560,8 +2560,9 @@ expand_divmod (rem_flag, code, mode, op0, op1, target, unsignedp)\n   int op1_is_constant, op1_is_pow2;\n \n   op1_is_constant = GET_CODE (op1) == CONST_INT;\n-  op1_is_pow2 = (EXACT_POWER_OF_2_OR_ZERO_P (INTVAL (op1))\n-\t\t || EXACT_POWER_OF_2_OR_ZERO_P (-INTVAL (op1)));\n+  op1_is_pow2 = (op1_is_constant\n+\t\t && ((EXACT_POWER_OF_2_OR_ZERO_P (INTVAL (op1))\n+\t\t      || EXACT_POWER_OF_2_OR_ZERO_P (-INTVAL (op1)))));\n \n   /*\n      This is the structure of expand_divmod:\n@@ -3112,6 +3113,24 @@ expand_divmod (rem_flag, code, mode, op0, op1, target, unsignedp)\n       case CEIL_MOD_EXPR:\n \tif (unsignedp)\n \t  {\n+\t    if (op1_is_constant && EXACT_POWER_OF_2_OR_ZERO_P (INTVAL (op1)))\n+\t      {\n+\t\trtx t1, t2, t3;\n+\t\tunsigned HOST_WIDE_INT d = INTVAL (op1);\n+\t\tt1 = expand_shift (RSHIFT_EXPR, compute_mode, op0,\n+\t\t\t\t   build_int_2 (floor_log2 (d), 0),\n+\t\t\t\t   NULL_RTX, 1);\n+\t\tt2 = expand_binop (compute_mode, and_optab, op0,\n+\t\t\t\t   GEN_INT (d - 1),\n+\t\t\t\t   NULL_RTX, 1, OPTAB_LIB_WIDEN);\n+\t\tt3 = gen_reg_rtx (compute_mode);\n+\t\tt3 = emit_store_flag (t3, NE, t2, const0_rtx,\n+\t\t\t\t      compute_mode, 1, 1);\n+\t\tquotient = force_operand (gen_rtx (PLUS, compute_mode,\n+\t\t\t\t\t\t   t1, t3),\n+\t\t\t\t\t  tquotient);\n+\t\tbreak;\n+\t      }\n \n \t    /* Try using an instruction that produces both the quotient and\n \t       remainder, using truncation.  We can easily compensate the"}]}