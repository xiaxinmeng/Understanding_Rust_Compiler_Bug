{"sha": "0f1f6967a21f8e4cc6ca7448dd9adc5d09c99edb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGYxZjY5NjdhMjFmOGU0Y2M2Y2E3NDQ4ZGQ5YWRjNWQwOWM5OWVkYg==", "commit": {"author": {"name": "Steven Bosscher", "email": "stevenb@suse.de", "date": "2004-05-30T18:19:18Z"}, "committer": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2004-05-30T18:19:18Z"}, "message": "gimplify.c (sort_case_labels): New.\n\n\t* gimplify.c (sort_case_labels): New.  Split out from...\n\t(gimplify_switch_expr): ...here.  Use it.\n\t* tree-eh.c (lower_try_finally_switch): Sort the labels of\n\tthe SWITCH_EXPR created here before leaving the function.\n\t* tree.c (sort_case_labels): Add prototype.\n\nFrom-SVN: r82462", "tree": {"sha": "1a5a34f7b426458bd3deb75deb9497ec745574a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1a5a34f7b426458bd3deb75deb9497ec745574a6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0f1f6967a21f8e4cc6ca7448dd9adc5d09c99edb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f1f6967a21f8e4cc6ca7448dd9adc5d09c99edb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f1f6967a21f8e4cc6ca7448dd9adc5d09c99edb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f1f6967a21f8e4cc6ca7448dd9adc5d09c99edb/comments", "author": null, "committer": null, "parents": [{"sha": "bd0a5aab91e49e2c36aab756bca6c1d4676a5db6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd0a5aab91e49e2c36aab756bca6c1d4676a5db6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd0a5aab91e49e2c36aab756bca6c1d4676a5db6"}], "stats": {"total": 48, "additions": 45, "deletions": 3}, "files": [{"sha": "d80740694003703160d601f2fef73eeb20069098", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f1f6967a21f8e4cc6ca7448dd9adc5d09c99edb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f1f6967a21f8e4cc6ca7448dd9adc5d09c99edb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0f1f6967a21f8e4cc6ca7448dd9adc5d09c99edb", "patch": "@@ -1,3 +1,11 @@\n+2004-05-30  Steven Bosscher  <stevenb@suse.de>\n+\n+\t* gimplify.c (sort_case_labels): New.  Split out from...\n+\t(gimplify_switch_expr): ...here.  Use it.\n+\t* tree-eh.c (lower_try_finally_switch): Sort the labels of\n+\tthe SWITCH_EXPR created here before leaving the function.\n+\t* tree.c (sort_case_labels): Add prototype.\n+\n 2004-05-30  Andrew Pinski  <pinskia@physics.uc.edu>\n \n \t* fold-const.c (fold) [case TRUTH_NOT_EXPR]: Make sure the type is"}, {"sha": "4693c61f85dedeec999c1d4abc7cebc6022c91a8", "filename": "gcc/gimplify.c", "status": "modified", "additions": 33, "deletions": 2, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f1f6967a21f8e4cc6ca7448dd9adc5d09c99edb/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f1f6967a21f8e4cc6ca7448dd9adc5d09c99edb/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=0f1f6967a21f8e4cc6ca7448dd9adc5d09c99edb", "patch": "@@ -994,6 +994,37 @@ compare_case_labels (const void *p1, const void *p2)\n   return tree_int_cst_compare (CASE_LOW (case1), CASE_LOW (case2));\n }\n \n+/* Sort the case labels in LABEL_VEC in ascending order.  */\n+\n+void\n+sort_case_labels (tree label_vec)\n+{\n+  size_t len = TREE_VEC_LENGTH (label_vec);\n+  tree default_case = TREE_VEC_ELT (label_vec, len - 1);\n+\n+  if (CASE_LOW (default_case))\n+    {\n+      size_t i;\n+\n+      /* The last label in the vector should be the default case\n+         but it is not.  */\n+      for (i = 0; i < len; ++i)\n+\t{\n+\t  tree t = TREE_VEC_ELT (label_vec, i);\n+\t  if (!CASE_LOW (t))\n+\t    {\n+\t      default_case = t;\n+\t      TREE_VEC_ELT (label_vec, i) = TREE_VEC_ELT (label_vec, len - 1);\n+\t      TREE_VEC_ELT (label_vec, len - 1) = default_case;\n+\t      break;\n+\t    }\n+\t}\n+    }\n+\n+  qsort (&TREE_VEC_ELT (label_vec, 0), len - 1, sizeof (tree),\n+\t compare_case_labels);\n+}\n+\n /* Gimplify a SWITCH_EXPR, and collect a TREE_VEC of the labels it can\n    branch to.  */\n \n@@ -1057,12 +1088,12 @@ gimplify_switch_expr (tree *expr_p, tree *pre_p)\n       else\n \t*expr_p = SWITCH_BODY (switch_expr);\n \n-      qsort (&VARRAY_TREE (labels, 0), len, sizeof (tree),\n-\t     compare_case_labels);\n       for (i = 0; i < len; ++i)\n \tTREE_VEC_ELT (label_vec, i) = VARRAY_TREE (labels, i);\n       TREE_VEC_ELT (label_vec, len) = default_case;\n \n+      sort_case_labels (label_vec);\n+\n       SWITCH_BODY (switch_expr) = NULL;\n     }\n   else if (!SWITCH_LABELS (switch_expr))"}, {"sha": "9dd52a3b0bfa8375397715bcb4a30a24a1218c1d", "filename": "gcc/tree-eh.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f1f6967a21f8e4cc6ca7448dd9adc5d09c99edb/gcc%2Ftree-eh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f1f6967a21f8e4cc6ca7448dd9adc5d09c99edb/gcc%2Ftree-eh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-eh.c?ref=0f1f6967a21f8e4cc6ca7448dd9adc5d09c99edb", "patch": "@@ -1200,8 +1200,10 @@ lower_try_finally_switch (struct leh_state *state, struct leh_tf_state *tf)\n   replace_goto_queue (tf);\n   last_case_index += nlabels;\n \n-  /* Make sure that we have a default label, as one is required.  */\n+  /* Make sure that the last case is the default label, as one is required.\n+     Then sort the labels, which is also required in GIMPLE.  */\n   CASE_LOW (last_case) = NULL;\n+  sort_case_labels (case_label_vec);\n \n   /* Need to link switch_stmt after running replace_goto_queue due\n      to not wanting to process the same goto stmts twice.  */"}, {"sha": "48df21271132c41abfa0a70b6065f15d88af9b49", "filename": "gcc/tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f1f6967a21f8e4cc6ca7448dd9adc5d09c99edb/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f1f6967a21f8e4cc6ca7448dd9adc5d09c99edb/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=0f1f6967a21f8e4cc6ca7448dd9adc5d09c99edb", "patch": "@@ -3675,6 +3675,7 @@ extern tree create_artificial_label (void);\n extern void gimplify_function_tree (tree);\n extern const char *get_name (tree);\n extern tree unshare_expr (tree);\n+extern void sort_case_labels (tree);\n \n /* If KIND=='I', return a suitable global initializer (constructor) name.\n    If KIND=='D', return a suitable global clean-up (destructor) name.  */"}]}