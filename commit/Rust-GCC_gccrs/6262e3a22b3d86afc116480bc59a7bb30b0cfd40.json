{"sha": "6262e3a22b3d86afc116480bc59a7bb30b0cfd40", "node_id": "C_kwDOANBUbNoAKDYyNjJlM2EyMmIzZDg2YWZjMTE2NDgwYmM1OWE3YmIzMGIwY2ZkNDA", "commit": {"author": {"name": "Chung-Lin Tang", "email": "cltang@codesourcery.com", "date": "2021-12-03T09:27:17Z"}, "committer": {"name": "Chung-Lin Tang", "email": "cltang@codesourcery.com", "date": "2021-12-03T09:27:17Z"}, "message": "fortran: Fix setting of array lower bound for named arrays\n\nThis patch fixes a case of setting array low-bounds, found for particular uses\nof SOURCE=/MOLD=. This adjusts the relevant part in gfc_trans_allocate() to\nset e3_has_nodescriptor only for non-named arrays.\n\n2021-12-03  Tobias Burnus  <tobias@codesourcery.com>\n\ngcc/fortran/ChangeLog:\n\n\t* trans-stmt.c (gfc_trans_allocate): Set e3_has_nodescriptor to true\n\tonly for non-named arrays.\n\ngcc/testsuite/ChangeLog:\n\n\t* gfortran.dg/allocate_with_source_26.f90: Adjust testcase.\n\t* gfortran.dg/allocate_with_mold_4.f90: New testcase.", "tree": {"sha": "d0720683ed7e0cc6e21395c79bb23c9a4d71fb29", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d0720683ed7e0cc6e21395c79bb23c9a4d71fb29"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6262e3a22b3d86afc116480bc59a7bb30b0cfd40", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6262e3a22b3d86afc116480bc59a7bb30b0cfd40", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6262e3a22b3d86afc116480bc59a7bb30b0cfd40", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6262e3a22b3d86afc116480bc59a7bb30b0cfd40/comments", "author": {"login": "cltang", "id": 4055966, "node_id": "MDQ6VXNlcjQwNTU5NjY=", "avatar_url": "https://avatars.githubusercontent.com/u/4055966?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cltang", "html_url": "https://github.com/cltang", "followers_url": "https://api.github.com/users/cltang/followers", "following_url": "https://api.github.com/users/cltang/following{/other_user}", "gists_url": "https://api.github.com/users/cltang/gists{/gist_id}", "starred_url": "https://api.github.com/users/cltang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cltang/subscriptions", "organizations_url": "https://api.github.com/users/cltang/orgs", "repos_url": "https://api.github.com/users/cltang/repos", "events_url": "https://api.github.com/users/cltang/events{/privacy}", "received_events_url": "https://api.github.com/users/cltang/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cltang", "id": 4055966, "node_id": "MDQ6VXNlcjQwNTU5NjY=", "avatar_url": "https://avatars.githubusercontent.com/u/4055966?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cltang", "html_url": "https://github.com/cltang", "followers_url": "https://api.github.com/users/cltang/followers", "following_url": "https://api.github.com/users/cltang/following{/other_user}", "gists_url": "https://api.github.com/users/cltang/gists{/gist_id}", "starred_url": "https://api.github.com/users/cltang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cltang/subscriptions", "organizations_url": "https://api.github.com/users/cltang/orgs", "repos_url": "https://api.github.com/users/cltang/repos", "events_url": "https://api.github.com/users/cltang/events{/privacy}", "received_events_url": "https://api.github.com/users/cltang/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "31c200c6e110ced8732332376e69c0958985b926", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31c200c6e110ced8732332376e69c0958985b926", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31c200c6e110ced8732332376e69c0958985b926"}], "stats": {"total": 49, "additions": 35, "deletions": 14}, "files": [{"sha": "6b27b14de3560f5dfab1096f6273ae23a9d75a41", "filename": "gcc/fortran/trans-stmt.c", "status": "modified", "additions": 7, "deletions": 10, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6262e3a22b3d86afc116480bc59a7bb30b0cfd40/gcc%2Ffortran%2Ftrans-stmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6262e3a22b3d86afc116480bc59a7bb30b0cfd40/gcc%2Ffortran%2Ftrans-stmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-stmt.c?ref=6262e3a22b3d86afc116480bc59a7bb30b0cfd40", "patch": "@@ -6638,16 +6638,13 @@ gfc_trans_allocate (gfc_code * code)\n       else\n \te3rhs = gfc_copy_expr (code->expr3);\n \n-      // We need to propagate the bounds of the expr3 for source=/mold=;\n-      // however, for nondescriptor arrays, we use internally a lower bound\n-      // of zero instead of one, which needs to be corrected for the allocate obj\n-      if (e3_is == E3_DESC)\n-\t{\n-\t  symbol_attribute attr = gfc_expr_attr (code->expr3);\n-\t  if (code->expr3->expr_type == EXPR_ARRAY ||\n-\t      (!attr.allocatable && !attr.pointer))\n-\t    e3_has_nodescriptor = true;\n-\t}\n+      // We need to propagate the bounds of the expr3 for source=/mold=.\n+      // However, for non-named arrays, the lbound has to be 1 and neither the\n+      // bound used inside the called function even when returning an\n+      // allocatable/pointer nor the zero used internally.\n+      if (e3_is == E3_DESC\n+\t  && code->expr3->expr_type != EXPR_VARIABLE)\n+\te3_has_nodescriptor = true;\n     }\n \n   /* Loop over all objects to allocate.  */"}, {"sha": "d545fe1249f1ba7f45630f02a1d126df87eaba3e", "filename": "gcc/testsuite/gfortran.dg/allocate_with_mold_4.f90", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6262e3a22b3d86afc116480bc59a7bb30b0cfd40/gcc%2Ftestsuite%2Fgfortran.dg%2Fallocate_with_mold_4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6262e3a22b3d86afc116480bc59a7bb30b0cfd40/gcc%2Ftestsuite%2Fgfortran.dg%2Fallocate_with_mold_4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fallocate_with_mold_4.f90?ref=6262e3a22b3d86afc116480bc59a7bb30b0cfd40", "patch": "@@ -0,0 +1,24 @@\n+program A_M\n+  implicit none\n+  real, parameter :: C(5:10) = 5.0\n+  real, dimension (:), allocatable :: A, B\n+  allocate (A(6))\n+  call Init (A)\n+contains\n+  subroutine Init ( A )\n+    real, dimension ( -1 : ), intent ( in ) :: A\n+    integer, dimension ( 1 ) :: lb_B\n+\n+    allocate (B, mold = A)\n+    if (any (lbound (B) /= lbound (A))) stop 1\n+    if (any (ubound (B) /= ubound (A))) stop 2\n+    if (any (shape (B) /= shape (A))) stop 3\n+    if (size (B) /= size (A)) stop 4\n+    deallocate (B)\n+    allocate (B, mold = C)\n+    if (any (lbound (B) /= lbound (C))) stop 5\n+    if (any (ubound (B) /= ubound (C))) stop 6\n+    if (any (shape (B) /= shape (C))) stop 7\n+    if (size (B) /= size (C)) stop 8\n+end\n+end "}, {"sha": "323c8a30b9ee070e1111b6e697ea11f25a3ece0a", "filename": "gcc/testsuite/gfortran.dg/allocate_with_source_26.f90", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6262e3a22b3d86afc116480bc59a7bb30b0cfd40/gcc%2Ftestsuite%2Fgfortran.dg%2Fallocate_with_source_26.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6262e3a22b3d86afc116480bc59a7bb30b0cfd40/gcc%2Ftestsuite%2Fgfortran.dg%2Fallocate_with_source_26.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fallocate_with_source_26.f90?ref=6262e3a22b3d86afc116480bc59a7bb30b0cfd40", "patch": "@@ -34,23 +34,23 @@ program p\n  if (lbound(p1, 1) /= 3 .or. ubound(p1, 1) /= 4 &\n      .or. lbound(p2, 1) /= 3 .or. ubound(p2, 1) /= 4 &\n      .or. lbound(p3, 1) /= 1 .or. ubound(p3, 1) /= 2 &\n-     .or. lbound(p4, 1) /= 7 .or. ubound(p4, 1) /= 8 &\n+     .or. lbound(p4, 1) /= 1 .or. ubound(p4, 1) /= 2 &\n      .or. p1(3)%i /= 43 .or. p1(4)%i /= 56 &\n      .or. p2(3)%i /= 43 .or. p2(4)%i /= 56 &\n      .or. p3(1)%i /= 43 .or. p3(2)%i /= 56 &\n-     .or. p4(7)%i /= 11 .or. p4(8)%i /= 12) then\n+     .or. p4(1)%i /= 11 .or. p4(2)%i /= 12) then\n    call abort()\n  endif\n \n  !write(*,*) lbound(a,1), ubound(a,1) ! prints 1 3\n  !write(*,*) lbound(b,1), ubound(b,1) ! prints 1 3\n- !write(*,*) lbound(c,1), ubound(c,1) ! prints 3 5\n+ !write(*,*) lbound(c,1), ubound(c,1) ! prints 1 3\n  !write(*,*) lbound(d,1), ubound(d,1) ! prints 1 5\n  !write(*,*) lbound(e,1), ubound(e,1) ! prints 1 6\n \n  if (lbound(a,1) /= 1 .or. ubound(a,1) /= 3 &\n      .or. lbound(b,1) /= 1 .or. ubound(b,1) /= 3 &\n-     .or. lbound(c,1) /= 3 .or. ubound(c,1) /= 5 &\n+     .or. lbound(c,1) /= 1 .or. ubound(c,1) /= 3 & \n      .or. lbound(d,1) /= 1 .or. ubound(d,1) /= 5 &\n      .or. lbound(e,1) /= 1 .or. ubound(e,1) /= 6) then\n    call abort()"}]}