{"sha": "0cab6b73df8b8fc78a6f68e664867d1dbbeea9e5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGNhYjZiNzNkZjhiOGZjNzhhNmY2OGU2NjQ4NjdkMWRiYmVlYTllNQ==", "commit": {"author": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2013-02-02T09:50:58Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2013-02-02T09:50:58Z"}, "message": "re PR fortran/50627 (Error recovery: ICE in gfc_free_namespace after diagnosing missing end of construct)\n\n2013-02-02  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/50627\n\tPR fortran/56054\n\t* decl.c (gfc_match_end):  Remove half-ready namespace\n\tfrom parent if the end of a block is missing.\n\t* parse.c (parse_module):  Do not put namespace into\n\tgsymbol on error.\n\n2013-02-02  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/50627\n\tPR fortran/56054\n\t* gfortran.dg/block_12.f90:  New test.\n\t* gfortran.dg/module_error_1.f90:  New test.\n\nFrom-SVN: r195684", "tree": {"sha": "0496b4b0755833aa8aaae77c8eb7e594bdb2a796", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0496b4b0755833aa8aaae77c8eb7e594bdb2a796"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0cab6b73df8b8fc78a6f68e664867d1dbbeea9e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0cab6b73df8b8fc78a6f68e664867d1dbbeea9e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0cab6b73df8b8fc78a6f68e664867d1dbbeea9e5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0cab6b73df8b8fc78a6f68e664867d1dbbeea9e5/comments", "author": null, "committer": null, "parents": [{"sha": "18d2405e9d513dd169ed87d8194feed34ce73798", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18d2405e9d513dd169ed87d8194feed34ce73798", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18d2405e9d513dd169ed87d8194feed34ce73798"}], "stats": {"total": 65, "additions": 64, "deletions": 1}, "files": [{"sha": "47be01fd0a90d7750d0fc248ab956f23cba8badf", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cab6b73df8b8fc78a6f68e664867d1dbbeea9e5/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cab6b73df8b8fc78a6f68e664867d1dbbeea9e5/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=0cab6b73df8b8fc78a6f68e664867d1dbbeea9e5", "patch": "@@ -1,3 +1,12 @@\n+2013-02-02  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/50627\n+\tPR fortran/56054\n+\t* decl.c (gfc_match_end):  Remove half-ready namespace\n+\tfrom parent if the end of a block is missing.\n+\t* parse.c (parse_module):  Do not put namespace into\n+\tgsymbol on error.\n+\n 2012-01-30  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/56138"}, {"sha": "72c511c8b243ab91baef32d9769f6dfa8e49da44", "filename": "gcc/fortran/decl.c", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cab6b73df8b8fc78a6f68e664867d1dbbeea9e5/gcc%2Ffortran%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cab6b73df8b8fc78a6f68e664867d1dbbeea9e5/gcc%2Ffortran%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdecl.c?ref=0cab6b73df8b8fc78a6f68e664867d1dbbeea9e5", "patch": "@@ -5955,6 +5955,8 @@ gfc_match_end (gfc_statement *st)\n   const char *target;\n   int eos_ok;\n   match m;\n+  gfc_namespace *parent_ns, *ns, *prev_ns;\n+  gfc_namespace **nsp;\n \n   old_loc = gfc_current_locus;\n   if (gfc_match (\"end\") != MATCH_YES)\n@@ -6180,6 +6182,35 @@ gfc_match_end (gfc_statement *st)\n \n cleanup:\n   gfc_current_locus = old_loc;\n+\n+  /* If we are missing an END BLOCK, we created a half-ready namespace.\n+     Remove it from the parent namespace's sibling list.  */\n+\n+  if (state == COMP_BLOCK)\n+    {\n+      parent_ns = gfc_current_ns->parent;\n+\n+      nsp = &(gfc_state_stack->previous->tail->ext.block.ns);\n+\n+      prev_ns = NULL;\n+      ns = *nsp;\n+      while (ns)\n+\t{\n+\t  if (ns == gfc_current_ns)\n+\t    {\n+\t      if (prev_ns == NULL)\n+\t\t*nsp = NULL;\n+\t      else\n+\t\tprev_ns->sibling = ns->sibling;\n+\t    }\n+\t  prev_ns = ns;\n+\t  ns = ns->sibling;\n+\t}\n+  \n+      gfc_free_namespace (gfc_current_ns);\n+      gfc_current_ns = parent_ns;\n+    }\n+\n   return MATCH_ERROR;\n }\n "}, {"sha": "6ee7b7fb85cd84d9938aa98b35c1b78be2eab4d8", "filename": "gcc/fortran/parse.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cab6b73df8b8fc78a6f68e664867d1dbbeea9e5/gcc%2Ffortran%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cab6b73df8b8fc78a6f68e664867d1dbbeea9e5/gcc%2Ffortran%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fparse.c?ref=0cab6b73df8b8fc78a6f68e664867d1dbbeea9e5", "patch": "@@ -4291,6 +4291,7 @@ parse_module (void)\n {\n   gfc_statement st;\n   gfc_gsymbol *s;\n+  bool error;\n \n   s = gfc_get_gsymbol (gfc_new_block->name);\n   if (s->defined || (s->type != GSYM_UNKNOWN && s->type != GSYM_MODULE))\n@@ -4304,6 +4305,7 @@ parse_module (void)\n \n   st = parse_spec (ST_NONE);\n \n+  error = false;\n loop:\n   switch (st)\n     {\n@@ -4322,12 +4324,15 @@ parse_module (void)\n       gfc_error (\"Unexpected %s statement in MODULE at %C\",\n \t\t gfc_ascii_statement (st));\n \n+      error = true;\n       reject_statement ();\n       st = next_statement ();\n       goto loop;\n     }\n \n-  s->ns = gfc_current_ns;\n+  /* Make sure not to free the namespace twice on error.  */\n+  if (!error)\n+    s->ns = gfc_current_ns;\n }\n \n "}, {"sha": "c7657437324aef582ea50358dcd63e065a31aabd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cab6b73df8b8fc78a6f68e664867d1dbbeea9e5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cab6b73df8b8fc78a6f68e664867d1dbbeea9e5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0cab6b73df8b8fc78a6f68e664867d1dbbeea9e5", "patch": "@@ -1,3 +1,10 @@\n+2013-02-02  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/50627\n+\tPR fortran/56054\n+\t* gfortran.dg/block_12.f90:  New test.\n+\t* gfortran.dg/module_error_1.f90:  New test.\n+\n 2013-02-02  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* lib/target-supports.exp (check_effective_target_vect_float)"}, {"sha": "a7e9c10439046ab79868f8261c8811ec3e11fa14", "filename": "gcc/testsuite/gfortran.dg/block_12.f90", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cab6b73df8b8fc78a6f68e664867d1dbbeea9e5/gcc%2Ftestsuite%2Fgfortran.dg%2Fblock_12.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cab6b73df8b8fc78a6f68e664867d1dbbeea9e5/gcc%2Ftestsuite%2Fgfortran.dg%2Fblock_12.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fblock_12.f90?ref=0cab6b73df8b8fc78a6f68e664867d1dbbeea9e5", "patch": "@@ -0,0 +1,6 @@\n+! { dg-do compile }\n+! PR 50627 - this used to free a namespace twice.\n+program main\n+  block\n+end program main ! { dg-error \"END BLOCK\" }\n+! { dg-prune-output \"Unexpected end of file\" }"}, {"sha": "84decc0a5710e1d9acafaf7c71f36f24e4fd92b7", "filename": "gcc/testsuite/gfortran.dg/module_error_1.f90", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cab6b73df8b8fc78a6f68e664867d1dbbeea9e5/gcc%2Ftestsuite%2Fgfortran.dg%2Fmodule_error_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cab6b73df8b8fc78a6f68e664867d1dbbeea9e5/gcc%2Ftestsuite%2Fgfortran.dg%2Fmodule_error_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fmodule_error_1.f90?ref=0cab6b73df8b8fc78a6f68e664867d1dbbeea9e5", "patch": "@@ -0,0 +1,5 @@\n+! { dg-do compile }\n+! PR fortran/50627\n+module kernels\n+      select type (args) ! { dg-error \"Unexpected SELECT TYPE\" }\n+end module kernels"}]}