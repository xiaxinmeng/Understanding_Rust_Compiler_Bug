{"sha": "958d6d588056d4cbfb09c6cd18688618fa29c306", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTU4ZDZkNTg4MDU2ZDRjYmZiMDljNmNkMTg2ODg2MThmYTI5YzMwNg==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2009-06-18T00:30:48Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2009-06-18T00:30:48Z"}, "message": "tree-pretty-print.c (maybe_dump_asm_name): New.\n\n        * tree-pretty-print.c (maybe_dump_asm_name): New.\n        (dump_decl_name): Use it.\n        (PRINT_FUNCTION_NAME): Merge into... \n        (dump_function_name): ... here.  Use maybe_dump_asm_name.\n\nFrom-SVN: r148642", "tree": {"sha": "fc4c388a6ce2f3d75417086cf844f4f734e6b350", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fc4c388a6ce2f3d75417086cf844f4f734e6b350"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/958d6d588056d4cbfb09c6cd18688618fa29c306", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/958d6d588056d4cbfb09c6cd18688618fa29c306", "html_url": "https://github.com/Rust-GCC/gccrs/commit/958d6d588056d4cbfb09c6cd18688618fa29c306", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/958d6d588056d4cbfb09c6cd18688618fa29c306/comments", "author": null, "committer": null, "parents": [{"sha": "01a0acb767c18928cab04787fe14bb5abbe1f7e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01a0acb767c18928cab04787fe14bb5abbe1f7e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01a0acb767c18928cab04787fe14bb5abbe1f7e5"}], "stats": {"total": 47, "additions": 41, "deletions": 6}, "files": [{"sha": "b186ffa57fd2c82f1cfb6dfea512c0a3e2775ae4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/958d6d588056d4cbfb09c6cd18688618fa29c306/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/958d6d588056d4cbfb09c6cd18688618fa29c306/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=958d6d588056d4cbfb09c6cd18688618fa29c306", "patch": "@@ -1,3 +1,10 @@\n+2009-06-17  Richard Henderson  <rth@redhat.com>\n+\n+\t* tree-pretty-print.c (maybe_dump_asm_name): New.\n+\t(dump_decl_name): Use it.\n+\t(PRINT_FUNCTION_NAME): Merge into...\n+\t(dump_function_name): ... here.  Use maybe_dump_asm_name.\n+\n 2009-06-17  Cary Coutant  <ccoutant@google.com>\n \n \t* dbxout.c (dbxout_source_line): Add is_stmt parameter."}, {"sha": "cd8033a152331a15c6b4b4e389afd648b81e8b4c", "filename": "gcc/tree-pretty-print.c", "status": "modified", "additions": 34, "deletions": 6, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/958d6d588056d4cbfb09c6cd18688618fa29c306/gcc%2Ftree-pretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/958d6d588056d4cbfb09c6cd18688618fa29c306/gcc%2Ftree-pretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-pretty-print.c?ref=958d6d588056d4cbfb09c6cd18688618fa29c306", "patch": "@@ -50,11 +50,6 @@ static void do_niy (pretty_printer *, const_tree);\n \n #define NIY do_niy(buffer,node)\n \n-#define PRINT_FUNCTION_NAME(NODE)  pp_printf             \\\n-  (buffer, \"%s\", TREE_CODE (NODE) == NOP_EXPR ?              \\\n-   lang_hooks.decl_printable_name (TREE_OPERAND (NODE, 0), 1) : \\\n-   lang_hooks.decl_printable_name (NODE, 1))\n-\n static pretty_printer buffer;\n static int initialized = 0;\n \n@@ -160,6 +155,32 @@ print_generic_expr (FILE *file, tree t, int flags)\n   dump_generic_node (&buffer, t, 0, flags, false);\n }\n \n+/* Dump the assembly name of a decl node if it's sufficiently different\n+   from the decl name.  */\n+\n+static void\n+maybe_dump_asm_name (pretty_printer *buffer, tree node, int flags)\n+{\n+  tree n, a;\n+\n+  if (flags & TDF_SLIM)\n+    return;\n+  if (DECL_NAME (node) == NULL || !DECL_ASSEMBLER_NAME_SET_P (node))\n+    return;\n+\n+  n = DECL_NAME (node);\n+  a = DECL_ASSEMBLER_NAME (node);\n+  if (n == a)\n+    return;\n+  if (strncmp (IDENTIFIER_POINTER (n), \"__builtin_\", 10) == 0)\n+    return;\n+\n+  pp_space (buffer);\n+  pp_character (buffer, '[');\n+  pp_tree_identifier (buffer, a);\n+  pp_character (buffer, ']');\n+}\n+\n /* Dump the name of a _DECL node and its DECL_UID if TDF_UID is set\n    in FLAGS.  */\n \n@@ -182,6 +203,8 @@ dump_decl_name (pretty_printer *buffer, tree node, int flags)\n \t  pp_printf (buffer, \"%c.%u\", c, DECL_UID (t));\n \t}\n     }\n+\n+  maybe_dump_asm_name (buffer, node, flags);\n }\n \n /* Like the above, but used for pretty printing function calls.  */\n@@ -190,7 +213,12 @@ static void\n dump_function_name (pretty_printer *buffer, tree node)\n {\n   if (DECL_NAME (node))\n-    PRINT_FUNCTION_NAME (node);\n+    {\n+      if (TREE_CODE (node) == NOP_EXPR)\n+\tnode = TREE_OPERAND (node, 0);\n+      pp_string (buffer, lang_hooks.decl_printable_name (node, 1));\n+      maybe_dump_asm_name (buffer, node, 0);\n+    }\n   else\n     dump_decl_name (buffer, node, 0);\n }"}]}