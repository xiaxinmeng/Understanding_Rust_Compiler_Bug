{"sha": "9f2a22d0b89e8e4208e84aaeab23f563c085c6c8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWYyYTIyZDBiODllOGU0MjA4ZTg0YWFlYWIyM2Y1NjNjMDg1YzZjOA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-03-17T02:36:12Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-03-17T02:36:12Z"}, "message": "re PR c++/46336 ([C++0X] ICE on invalid: in register_constexpr_fundef, at cp/semantics.c:5571)\n\n\tPR c++/46336\n\t* decl.c (duplicate_decls): Return NULL_TREE for clashing\n\tC functions.\n\nFrom-SVN: r171084", "tree": {"sha": "dc1db96edce1ece695de9de85fd30dcca9324049", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dc1db96edce1ece695de9de85fd30dcca9324049"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9f2a22d0b89e8e4208e84aaeab23f563c085c6c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f2a22d0b89e8e4208e84aaeab23f563c085c6c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f2a22d0b89e8e4208e84aaeab23f563c085c6c8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f2a22d0b89e8e4208e84aaeab23f563c085c6c8/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3f7c74538130857eec303f1470673199ee7142d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f7c74538130857eec303f1470673199ee7142d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f7c74538130857eec303f1470673199ee7142d0"}], "stats": {"total": 23, "additions": 22, "deletions": 1}, "files": [{"sha": "66c831658353e48e29b2bb7bc106e8afe3ef370f", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f2a22d0b89e8e4208e84aaeab23f563c085c6c8/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f2a22d0b89e8e4208e84aaeab23f563c085c6c8/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=9f2a22d0b89e8e4208e84aaeab23f563c085c6c8", "patch": "@@ -1,5 +1,9 @@\n 2011-03-16  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/46336\n+\t* decl.c (duplicate_decls): Return NULL_TREE for clashing\n+\tC functions.\n+\n \tPR c++/47570\n \t* semantics.c (cxx_eval_constant_expression) [COMPOUND_EXPR]: Don't\n \tuse the generic binary expression handling."}, {"sha": "17b316381ec0225731617d7f1b0792f9dea2dae7", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f2a22d0b89e8e4208e84aaeab23f563c085c6c8/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f2a22d0b89e8e4208e84aaeab23f563c085c6c8/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=9f2a22d0b89e8e4208e84aaeab23f563c085c6c8", "patch": "@@ -1456,6 +1456,7 @@ duplicate_decls (tree newdecl, tree olddecl, bool newdecl_is_friend)\n \t      error (\"declaration of C function %q#D conflicts with\",\n \t\t     newdecl);\n \t      error (\"previous declaration %q+#D here\", olddecl);\n+\t      return NULL_TREE;\n \t    }\n \t  else if (compparms (TYPE_ARG_TYPES (TREE_TYPE (newdecl)),\n \t\t\t      TYPE_ARG_TYPES (TREE_TYPE (olddecl))))"}, {"sha": "122beef0b1a43c3667387e2ba64e3b87e1d586a6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f2a22d0b89e8e4208e84aaeab23f563c085c6c8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f2a22d0b89e8e4208e84aaeab23f563c085c6c8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9f2a22d0b89e8e4208e84aaeab23f563c085c6c8", "patch": "@@ -1,5 +1,8 @@\n 2011-03-16  Jason Merrill  <jason@redhat.com>\n \n+\t* g++.dg/cpp0x/constexpr-46336.C: New.\n+\t* g++.dg/parse/friend5.C: Adjust expected errors.\n+\n \t* g++.dg/cpp0x/constexpr-47570.C: New.\n \n 2011-03-16  Dodji Seketeli  <dodji@redhat.com>"}, {"sha": "3c51c2cbf548bc30abcdd4864d0d0a9411db2f3a", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-46336.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f2a22d0b89e8e4208e84aaeab23f563c085c6c8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-46336.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f2a22d0b89e8e4208e84aaeab23f563c085c6c8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-46336.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-46336.C?ref=9f2a22d0b89e8e4208e84aaeab23f563c085c6c8", "patch": "@@ -0,0 +1,14 @@\n+// PR c++/46336\n+// { dg-options -std=c++0x }\n+\n+extern \"C\" {\n+  enum A { };\n+  inline constexpr A\n+  f(A a, A b)\t\t\t// { dg-error \"previous declaration\" }\n+  { return A(static_cast<int>(a) & static_cast<int>(b)); }\n+  enum B { };\n+  inline constexpr B\n+  f(B a, B b)\t\t\t// { dg-error \"C function\" }\n+  { return B(static_cast<int>(a) & static_cast<int>(b)); }\n+}\n+"}, {"sha": "bf1e6bfa6dd6d9ef6216668b5b4d63466c8708fd", "filename": "gcc/testsuite/g++.dg/parse/friend5.C", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f2a22d0b89e8e4208e84aaeab23f563c085c6c8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ffriend5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f2a22d0b89e8e4208e84aaeab23f563c085c6c8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ffriend5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ffriend5.C?ref=9f2a22d0b89e8e4208e84aaeab23f563c085c6c8", "patch": "@@ -4,5 +4,4 @@ extern \"C\" struct A\n {\n   friend void foo(int) {} // { dg-error \"declaration\" }\n   friend void foo() {} // { dg-error \"foo\" \"err\" }\n-  // { dg-warning \"already a friend\" \"warn\" { target *-*-* } 6 }\n };"}]}