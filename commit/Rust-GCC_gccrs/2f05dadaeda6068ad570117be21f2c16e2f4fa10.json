{"sha": "2f05dadaeda6068ad570117be21f2c16e2f4fa10", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmYwNWRhZGFlZGE2MDY4YWQ1NzAxMTdiZTIxZjJjMTZlMmY0ZmExMA==", "commit": {"author": {"name": "Tamar Christina", "email": "tamar.christina@arm.com", "date": "2020-12-13T13:56:30Z"}, "committer": {"name": "Tamar Christina", "email": "tamar.christina@arm.com", "date": "2020-12-13T14:10:07Z"}, "message": "Arm: Add support for auto-vectorization using HF mode.\n\nThis adds support to the auto-vectorizer to support HFmode vectorization for\nAArch32.  This is supported when +fp16 is used.  I wonder if I should disable\nthe returning of the type if the option isn't enabled.\n\nAt the moment it will be returned but the vectorizer will try and fail to use\nit.  It wastes a few compile cycles but doesn't result in bad code.\n\ngcc/ChangeLog:\n\n\t* config/arm/arm.c (arm_preferred_simd_mode): Add E_HFmode.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/arm/vect-half-floats.c: New test.", "tree": {"sha": "bac00efe447b3c60468c2c693ebd9c0a6b6e5cfe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bac00efe447b3c60468c2c693ebd9c0a6b6e5cfe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2f05dadaeda6068ad570117be21f2c16e2f4fa10", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f05dadaeda6068ad570117be21f2c16e2f4fa10", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f05dadaeda6068ad570117be21f2c16e2f4fa10", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f05dadaeda6068ad570117be21f2c16e2f4fa10/comments", "author": {"login": "TamarChristinaArm", "id": 48126768, "node_id": "MDQ6VXNlcjQ4MTI2NzY4", "avatar_url": "https://avatars.githubusercontent.com/u/48126768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TamarChristinaArm", "html_url": "https://github.com/TamarChristinaArm", "followers_url": "https://api.github.com/users/TamarChristinaArm/followers", "following_url": "https://api.github.com/users/TamarChristinaArm/following{/other_user}", "gists_url": "https://api.github.com/users/TamarChristinaArm/gists{/gist_id}", "starred_url": "https://api.github.com/users/TamarChristinaArm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TamarChristinaArm/subscriptions", "organizations_url": "https://api.github.com/users/TamarChristinaArm/orgs", "repos_url": "https://api.github.com/users/TamarChristinaArm/repos", "events_url": "https://api.github.com/users/TamarChristinaArm/events{/privacy}", "received_events_url": "https://api.github.com/users/TamarChristinaArm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TamarChristinaArm", "id": 48126768, "node_id": "MDQ6VXNlcjQ4MTI2NzY4", "avatar_url": "https://avatars.githubusercontent.com/u/48126768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TamarChristinaArm", "html_url": "https://github.com/TamarChristinaArm", "followers_url": "https://api.github.com/users/TamarChristinaArm/followers", "following_url": "https://api.github.com/users/TamarChristinaArm/following{/other_user}", "gists_url": "https://api.github.com/users/TamarChristinaArm/gists{/gist_id}", "starred_url": "https://api.github.com/users/TamarChristinaArm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TamarChristinaArm/subscriptions", "organizations_url": "https://api.github.com/users/TamarChristinaArm/orgs", "repos_url": "https://api.github.com/users/TamarChristinaArm/repos", "events_url": "https://api.github.com/users/TamarChristinaArm/events{/privacy}", "received_events_url": "https://api.github.com/users/TamarChristinaArm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3ed472af6bc9f83b7a8ac553b282f659a0bf53f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ed472af6bc9f83b7a8ac553b282f659a0bf53f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ed472af6bc9f83b7a8ac553b282f659a0bf53f7"}], "stats": {"total": 16, "additions": 16, "deletions": 0}, "files": [{"sha": "7115c0a4a1f955c29c3ce6bfb4196f856565b567", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f05dadaeda6068ad570117be21f2c16e2f4fa10/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f05dadaeda6068ad570117be21f2c16e2f4fa10/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=2f05dadaeda6068ad570117be21f2c16e2f4fa10", "patch": "@@ -29130,6 +29130,8 @@ arm_preferred_simd_mode (scalar_mode mode)\n   if (TARGET_NEON)\n     switch (mode)\n       {\n+      case E_HFmode:\n+\treturn TARGET_NEON_VECTORIZE_DOUBLE ? V4HFmode : V8HFmode;\n       case E_SFmode:\n \treturn TARGET_NEON_VECTORIZE_DOUBLE ? V2SFmode : V4SFmode;\n       case E_SImode:"}, {"sha": "ebfe7f964442a09053b0cbe04bed425e36b0af96", "filename": "gcc/testsuite/gcc.target/arm/vect-half-floats.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f05dadaeda6068ad570117be21f2c16e2f4fa10/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvect-half-floats.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f05dadaeda6068ad570117be21f2c16e2f4fa10/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvect-half-floats.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvect-half-floats.c?ref=2f05dadaeda6068ad570117be21f2c16e2f4fa10", "patch": "@@ -0,0 +1,14 @@\n+/* { dg-do compile }  */\n+/* { dg-require-effective-target target_float16 } */ \n+/* { dg-require-effective-target arm_fp16_ok } */\n+/* { dg-add-options for_float16 } */\n+/* { dg-additional-options \"-Ofast -ftree-vectorize -fdump-tree-vect-all -std=c11\" } */\n+\n+void foo (_Float16 n1[], _Float16 n2[], _Float16 r[], int n)\n+{\n+  for (int i = 0; i < n; i++)\n+   r[i] = n1[i] + n2[i];\n+}\n+\n+/* { dg-final { scan-tree-dump-not \"LOOP VECTORIZED\" \"vect\" } } */\n+"}]}