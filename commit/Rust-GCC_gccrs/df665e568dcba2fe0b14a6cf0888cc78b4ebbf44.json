{"sha": "df665e568dcba2fe0b14a6cf0888cc78b4ebbf44", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGY2NjVlNTY4ZGNiYTJmZTBiMTRhNmNmMDg4OGNjNzhiNGViYmY0NA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-06-11T19:22:17Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-06-11T19:22:33Z"}, "message": "contrib: Make prepare-commit-msg hook smarter for amends\n\nWith this change the prepare-commit-msg hook can compare the log of a\ncommit being amended with the staged changes, and not run mklog.py\nunnecessarily. This is controlled by a git config option,\ngcc-config.mklog-hook-type.\n\ncontrib/ChangeLog:\n\n\t* prepare-commit-msg: Use the gcc-config.mklog-hook-type Git\n\tconfig key instead of the GCC_FORCE_MKLOG environment variable.\n\tOptionally disable generating a new ChangeLog template for\n\tamended commits when the existing log is still OK.", "tree": {"sha": "873579b5c1571eb8a422df4cef1f7bdae278d4b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/873579b5c1571eb8a422df4cef1f7bdae278d4b0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/df665e568dcba2fe0b14a6cf0888cc78b4ebbf44", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df665e568dcba2fe0b14a6cf0888cc78b4ebbf44", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df665e568dcba2fe0b14a6cf0888cc78b4ebbf44", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df665e568dcba2fe0b14a6cf0888cc78b4ebbf44/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "393ccb72566dc004b9ab5c3b8fb6fdca6c095812", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/393ccb72566dc004b9ab5c3b8fb6fdca6c095812", "html_url": "https://github.com/Rust-GCC/gccrs/commit/393ccb72566dc004b9ab5c3b8fb6fdca6c095812"}], "stats": {"total": 13, "additions": 13, "deletions": 0}, "files": [{"sha": "969847df6f4f6eeaccb89faa862b29f6cbe2c948", "filename": "contrib/prepare-commit-msg", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df665e568dcba2fe0b14a6cf0888cc78b4ebbf44/contrib%2Fprepare-commit-msg", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df665e568dcba2fe0b14a6cf0888cc78b4ebbf44/contrib%2Fprepare-commit-msg", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fprepare-commit-msg?ref=df665e568dcba2fe0b14a6cf0888cc78b4ebbf44", "patch": "@@ -49,6 +49,19 @@ elif [ $COMMIT_SOURCE = commit ]; then\n     # otherwise, assume a new commit with -C.\n     if [ $SHA1 = HEAD ]; then\n \tcmd=\"diff --cached HEAD^\"\n+\tif [ \"$(git config gcc-config.mklog-hook-type)\" = \"smart-amend\" ]; then\n+\t    # Check if the existing message still describes the staged changes.\n+\t    f=$(mktemp /tmp/git-commit.XXXXXX) || exit 1\n+\t    git log -1 --pretty=email HEAD > $f\n+\t    printf '\\n---\\n\\n' >> $f\n+\t    git $cmd >> $f\n+\t    if contrib/gcc-changelog/git_email.py \"$f\" >/dev/null 2>&1; then\n+\t\t# Existing commit message is still OK for amended commit.\n+\t\trm $f\n+\t\texit 0\n+\t    fi\n+\t    rm $f\n+\tfi\n     else\n \tcmd=\"diff --cached\"\n     fi"}]}