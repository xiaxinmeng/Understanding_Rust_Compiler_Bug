{"sha": "5e366628853651e5d7a98e7bc12f5fb7746ce993", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWUzNjY2Mjg4NTM2NTFlNWQ3YTk4ZTdiYzEyZjVmYjc3NDZjZTk5Mw==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2018-12-11T11:11:00Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-12-11T11:11:00Z"}, "message": "[Ada] Crash on compilation unit function that builds in place\n\nThis patch fixes a crash on a function that builds its limited result in\nplace. Previously this was handled properly only if the function was a\nchild unit.\n\n2018-12-11  Ed Schonberg  <schonberg@adacore.com>\n\ngcc/ada/\n\n\t* sem_ch3.adb (Build_Itype_Reference): Handle properly an itype\n\treference created for a function that is a compilation unit, for\n\texample if the function builds in place an object of a limited\n\ttype.\n\ngcc/testsuite/\n\n\t* gnat.dg/bip_cu.adb, gnat.dg/bip_cu_constructor.adb,\n\tgnat.dg/bip_cu_constructor.ads, gnat.dg/bip_cu_t.adb,\n\tgnat.dg/bip_cu_t.ads: New testcase.\n\nFrom-SVN: r266999", "tree": {"sha": "4ac1f440ff6cb94ae1ee87f2653e8177773edad1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4ac1f440ff6cb94ae1ee87f2653e8177773edad1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5e366628853651e5d7a98e7bc12f5fb7746ce993", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e366628853651e5d7a98e7bc12f5fb7746ce993", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e366628853651e5d7a98e7bc12f5fb7746ce993", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e366628853651e5d7a98e7bc12f5fb7746ce993/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6b6a0f02ab7012daebd62726066b827fbdfa62f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b6a0f02ab7012daebd62726066b827fbdfa62f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b6a0f02ab7012daebd62726066b827fbdfa62f9"}], "stats": {"total": 55, "additions": 52, "deletions": 3}, "files": [{"sha": "76c6e761e00434ba8150ff619a82272d6277b9b7", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e366628853651e5d7a98e7bc12f5fb7746ce993/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e366628853651e5d7a98e7bc12f5fb7746ce993/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=5e366628853651e5d7a98e7bc12f5fb7746ce993", "patch": "@@ -1,3 +1,10 @@\n+2018-12-11  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch3.adb (Build_Itype_Reference): Handle properly an itype\n+\treference created for a function that is a compilation unit, for\n+\texample if the function builds in place an object of a limited\n+\ttype.\n+\n 2018-12-11  Dmitriy Anisimkov  <anisimko@adacore.com>\n \n \t* libgnat/g-socket.ads, libgnat/g-socket.adb: Fix duration"}, {"sha": "5195f8a267b3bc9c5d999d7ba14de06a447dfdb8", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e366628853651e5d7a98e7bc12f5fb7746ce993/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e366628853651e5d7a98e7bc12f5fb7746ce993/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=5e366628853651e5d7a98e7bc12f5fb7746ce993", "patch": "@@ -10368,12 +10368,13 @@ package body Sem_Ch3 is\n          --  If Nod is a library unit entity, then Insert_After won't work,\n          --  because Nod is not a member of any list. Therefore, we use\n          --  Add_Global_Declaration in this case. This can happen if we have a\n-         --  build-in-place library function.\n+         --  build-in-place library function, child unit or not.\n \n          if (Nkind (Nod) in N_Entity and then Is_Compilation_Unit (Nod))\n            or else\n-             (Nkind (Nod) = N_Defining_Program_Unit_Name\n-               and then Is_Compilation_Unit (Defining_Identifier (Nod)))\n+             (Nkind_In (Nod,\n+                N_Defining_Program_Unit_Name, N_Subprogram_Declaration)\n+               and then Is_Compilation_Unit (Defining_Entity (Nod)))\n          then\n             Add_Global_Declaration (IR);\n          else"}, {"sha": "3bc15f08521d5152d4a68dcb181a41d2c5b3ff8b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e366628853651e5d7a98e7bc12f5fb7746ce993/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e366628853651e5d7a98e7bc12f5fb7746ce993/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5e366628853651e5d7a98e7bc12f5fb7746ce993", "patch": "@@ -1,3 +1,9 @@\n+2018-12-11  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* gnat.dg/bip_cu.adb, gnat.dg/bip_cu_constructor.adb,\n+\tgnat.dg/bip_cu_constructor.ads, gnat.dg/bip_cu_t.adb,\n+\tgnat.dg/bip_cu_t.ads: New testcase.\n+\n 2018-12-11  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* gnat.dg/ghost2.adb, gnat.dg/ghost2.ads: New testcase."}, {"sha": "39790cdc6332575a5be762c4dabf0ac9fff996c7", "filename": "gcc/testsuite/gnat.dg/bip_cu.adb", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e366628853651e5d7a98e7bc12f5fb7746ce993/gcc%2Ftestsuite%2Fgnat.dg%2Fbip_cu.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e366628853651e5d7a98e7bc12f5fb7746ce993/gcc%2Ftestsuite%2Fgnat.dg%2Fbip_cu.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fbip_cu.adb?ref=5e366628853651e5d7a98e7bc12f5fb7746ce993", "patch": "@@ -0,0 +1,10 @@\n+--  { dg-do compile }\n+\n+with BIP_CU_T; use BIP_CU_T;\n+with BIP_CU_Constructor;\n+\n+procedure BIP_CU is\n+    Value : constant T := BIP_CU_Constructor;\n+begin\n+    null;\n+end;"}, {"sha": "7ed3cab9b5cfb3626072bcddf1948a2a9605acbb", "filename": "gcc/testsuite/gnat.dg/bip_cu_constructor.adb", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e366628853651e5d7a98e7bc12f5fb7746ce993/gcc%2Ftestsuite%2Fgnat.dg%2Fbip_cu_constructor.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e366628853651e5d7a98e7bc12f5fb7746ce993/gcc%2Ftestsuite%2Fgnat.dg%2Fbip_cu_constructor.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fbip_cu_constructor.adb?ref=5e366628853651e5d7a98e7bc12f5fb7746ce993", "patch": "@@ -0,0 +1,5 @@\n+with BIP_CU_T; use BIP_CU_T;\n+function BIP_CU_Constructor return T is\n+begin\n+   return Make_T (Name => \"Rumplestiltskin\");\n+end BIP_CU_Constructor;"}, {"sha": "ed77cf48c989c11ca5a485189af36a49f0db517d", "filename": "gcc/testsuite/gnat.dg/bip_cu_constructor.ads", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e366628853651e5d7a98e7bc12f5fb7746ce993/gcc%2Ftestsuite%2Fgnat.dg%2Fbip_cu_constructor.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e366628853651e5d7a98e7bc12f5fb7746ce993/gcc%2Ftestsuite%2Fgnat.dg%2Fbip_cu_constructor.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fbip_cu_constructor.ads?ref=5e366628853651e5d7a98e7bc12f5fb7746ce993", "patch": "@@ -0,0 +1,2 @@\n+with BIP_CU_T; use BIP_CU_T;\n+function BIP_CU_Constructor return T;"}, {"sha": "bf005b1c19152aeea662f17d9741f835c7c06cea", "filename": "gcc/testsuite/gnat.dg/bip_cu_t.adb", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e366628853651e5d7a98e7bc12f5fb7746ce993/gcc%2Ftestsuite%2Fgnat.dg%2Fbip_cu_t.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e366628853651e5d7a98e7bc12f5fb7746ce993/gcc%2Ftestsuite%2Fgnat.dg%2Fbip_cu_t.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fbip_cu_t.adb?ref=5e366628853651e5d7a98e7bc12f5fb7746ce993", "patch": "@@ -0,0 +1,8 @@\n+package body BIP_CU_T is\n+\n+   function Make_T (Name : String) return T is\n+   begin\n+      return (Name => To_Unbounded_String (Name), others => <>);\n+   end Make_T;\n+\n+end BIP_CU_T;"}, {"sha": "75e97b9d4cfa78ca824bb729d79d1a17d42b1b63", "filename": "gcc/testsuite/gnat.dg/bip_cu_t.ads", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e366628853651e5d7a98e7bc12f5fb7746ce993/gcc%2Ftestsuite%2Fgnat.dg%2Fbip_cu_t.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e366628853651e5d7a98e7bc12f5fb7746ce993/gcc%2Ftestsuite%2Fgnat.dg%2Fbip_cu_t.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fbip_cu_t.ads?ref=5e366628853651e5d7a98e7bc12f5fb7746ce993", "patch": "@@ -0,0 +1,10 @@\n+with Ada.Strings.Unbounded; use Ada.Strings.Unbounded;\n+\n+package BIP_CU_T is\n+   type T is limited private;\n+   function Make_T (Name : String) return T;\n+private\n+   type T is limited record\n+      Name : Unbounded_String;\n+   end record;\n+end BIP_CU_T;"}]}