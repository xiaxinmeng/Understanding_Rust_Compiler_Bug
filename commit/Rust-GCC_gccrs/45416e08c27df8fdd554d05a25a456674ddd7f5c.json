{"sha": "45416e08c27df8fdd554d05a25a456674ddd7f5c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDU0MTZlMDhjMjdkZjhmZGQ1NTRkMDVhMjVhNDU2Njc0ZGRkN2Y1Yw==", "commit": {"author": {"name": "Ed Smith-Rowland", "email": "3dw4rd@verizon.net", "date": "2013-04-05T11:38:09Z"}, "committer": {"name": "Edward Smith-Rowland", "email": "emsr@gcc.gnu.org", "date": "2013-04-05T11:38:09Z"}, "message": "There can be only one ref qualifier at most.\n\ngcc/cp:\n2013-04-05  Ed Smith-Rowland  <3dw4rd@verizon.net>\n\n\t* g++.dg/cpp0x/ref-qual-multi-neg.C: New test.\n\ngcc/testsuite:\n2013-04-05  Ed Smith-Rowland  <3dw4rd@verizon.net>\n\n\t* parser.c (cp_parser_ref_qualifier_seq_opt): Move to\n\tcp_parser_ref_qualifier_opt.  Error if more than one ref-qual found.\n\nFrom-SVN: r197514", "tree": {"sha": "7a2c73f400491d230b9c7c958fd053661656865e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7a2c73f400491d230b9c7c958fd053661656865e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/45416e08c27df8fdd554d05a25a456674ddd7f5c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45416e08c27df8fdd554d05a25a456674ddd7f5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45416e08c27df8fdd554d05a25a456674ddd7f5c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45416e08c27df8fdd554d05a25a456674ddd7f5c/comments", "author": {"login": "emsr", "id": 1936479, "node_id": "MDQ6VXNlcjE5MzY0Nzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1936479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emsr", "html_url": "https://github.com/emsr", "followers_url": "https://api.github.com/users/emsr/followers", "following_url": "https://api.github.com/users/emsr/following{/other_user}", "gists_url": "https://api.github.com/users/emsr/gists{/gist_id}", "starred_url": "https://api.github.com/users/emsr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emsr/subscriptions", "organizations_url": "https://api.github.com/users/emsr/orgs", "repos_url": "https://api.github.com/users/emsr/repos", "events_url": "https://api.github.com/users/emsr/events{/privacy}", "received_events_url": "https://api.github.com/users/emsr/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8456d78abf21b3c914c15871d78a451346b14ad1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8456d78abf21b3c914c15871d78a451346b14ad1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8456d78abf21b3c914c15871d78a451346b14ad1"}], "stats": {"total": 67, "additions": 52, "deletions": 15}, "files": [{"sha": "dc6761033028c3314a714a6b55814231ef43aa60", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45416e08c27df8fdd554d05a25a456674ddd7f5c/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45416e08c27df8fdd554d05a25a456674ddd7f5c/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=45416e08c27df8fdd554d05a25a456674ddd7f5c", "patch": "@@ -1,3 +1,8 @@\n+2013-04-05  Ed Smith-Rowland  <3dw4rd@verizon.net>\n+\n+\t* parser.c (cp_parser_ref_qualifier_seq_opt): Move to\n+\tcp_parser_ref_qualifier_opt.  Error if more than one ref-qual found.\n+\n 2013-04-03  Jason Merrill  <jason@redhat.com>\n \n \t* cp-tree.h (FUNCTION_OR_METHOD_TYPE_CHECK): Remove."}, {"sha": "ed8eac8cc4e007a57349ac3443c340c33065877f", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 36, "deletions": 15, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45416e08c27df8fdd554d05a25a456674ddd7f5c/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45416e08c27df8fdd554d05a25a456674ddd7f5c/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=45416e08c27df8fdd554d05a25a456674ddd7f5c", "patch": "@@ -2020,7 +2020,7 @@ static cp_cv_quals cp_parser_cv_qualifier_seq_opt\n   (cp_parser *);\n static cp_virt_specifiers cp_parser_virt_specifier_seq_opt\n   (cp_parser *);\n-static cp_ref_qualifier cp_parser_ref_qualifier_seq_opt\n+static cp_ref_qualifier cp_parser_ref_qualifier_opt\n   (cp_parser *);\n static tree cp_parser_late_return_type_opt\n   (cp_parser *, cp_cv_quals);\n@@ -16463,7 +16463,7 @@ cp_parser_direct_declarator (cp_parser* parser,\n \t\t  /* Parse the cv-qualifier-seq.  */\n \t\t  cv_quals = cp_parser_cv_qualifier_seq_opt (parser);\n \t\t  /* Parse the ref-qualifier. */\n-\t\t  ref_qual = cp_parser_ref_qualifier_seq_opt (parser);\n+\t\t  ref_qual = cp_parser_ref_qualifier_opt (parser);\n \t\t  /* And the exception-specification.  */\n \t\t  exception_specification\n \t\t    = cp_parser_exception_specification_opt (parser);\n@@ -17031,25 +17031,46 @@ cp_parser_cv_qualifier_seq_opt (cp_parser* parser)\n    Returns cp_ref_qualifier representing ref-qualifier. */\n \n static cp_ref_qualifier\n-cp_parser_ref_qualifier_seq_opt (cp_parser* parser)\n+cp_parser_ref_qualifier_opt (cp_parser* parser)\n {\n   cp_ref_qualifier ref_qual = REF_QUAL_NONE;\n-  cp_token *token = cp_lexer_peek_token (parser->lexer);\n-  switch (token->type)\n+\n+  while (true)\n     {\n-    case CPP_AND:\n-      ref_qual = REF_QUAL_LVALUE;\n-      break;\n-    case CPP_AND_AND:\n-      ref_qual = REF_QUAL_RVALUE;\n-      break;\n+      cp_ref_qualifier curr_ref_qual = REF_QUAL_NONE;\n+      cp_token *token = cp_lexer_peek_token (parser->lexer);\n+\n+      switch (token->type)\n+\t{\n+\tcase CPP_AND:\n+\t  curr_ref_qual = REF_QUAL_LVALUE;\n+\t  break;\n+\n+\tcase CPP_AND_AND:\n+\t  curr_ref_qual = REF_QUAL_RVALUE;\n+\t  break;\n+\n+\tdefault:\n+\t  curr_ref_qual = REF_QUAL_NONE;\n+\t  break;\n+\t}\n+\n+      if (!curr_ref_qual)\n+\tbreak;\n+      else if (ref_qual)\n+\t{\n+\t  error_at (token->location, \"multiple ref-qualifiers\");\n+\t  cp_lexer_purge_token (parser->lexer);\n+\t}\n+      else\n+\t{\n+\t  ref_qual = curr_ref_qual;\n+\t  cp_lexer_consume_token (parser->lexer);\n+\t}\n     }\n \n   if (ref_qual)\n-    {\n-      maybe_warn_cpp0x (CPP0X_REF_QUALIFIER);\n-      cp_lexer_consume_token (parser->lexer);\n-    }\n+    maybe_warn_cpp0x (CPP0X_REF_QUALIFIER);\n \n   return ref_qual;\n }"}, {"sha": "e63b313c52e993d7edd10616812efbbdf4364203", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45416e08c27df8fdd554d05a25a456674ddd7f5c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45416e08c27df8fdd554d05a25a456674ddd7f5c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=45416e08c27df8fdd554d05a25a456674ddd7f5c", "patch": "@@ -1,3 +1,7 @@\n+2013-04-05  Ed Smith-Rowland  <3dw4rd@verizon.net>\n+\n+\t* g++.dg/cpp0x/ref-qual-multi-neg.C: New test.\n+\n 2013-04-04  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/40881"}, {"sha": "5be89423f031cc32383c6b21aa2876ff8da3fe2d", "filename": "gcc/testsuite/g++.dg/cpp0x/ref-qual-multi-neg.C", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45416e08c27df8fdd554d05a25a456674ddd7f5c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fref-qual-multi-neg.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45416e08c27df8fdd554d05a25a456674ddd7f5c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fref-qual-multi-neg.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fref-qual-multi-neg.C?ref=45416e08c27df8fdd554d05a25a456674ddd7f5c", "patch": "@@ -0,0 +1,7 @@\n+// { dg-require-effective-target c++11 }\n+\n+class Foo\n+{\n+public:\n+  void bar() const && & { }  // { dg-error \"multiple ref-qualifiers\" }\n+};"}]}