{"sha": "14cfceb7f71bcf72c9c16717ce546412cf6df64b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTRjZmNlYjdmNzFiY2Y3MmM5YzE2NzE3Y2U1NDY0MTJjZjZkZjY0Yg==", "commit": {"author": {"name": "Ilya Leoshkevich", "email": "iii@linux.ibm.com", "date": "2018-11-06T13:20:21Z"}, "committer": {"name": "Ilya Leoshkevich", "email": "iii@gcc.gnu.org", "date": "2018-11-06T13:20:21Z"}, "message": "S/390: Introduce relative_long attribute\n\nIn order to properly fix PR87762, we need to distinguish between\ninstructions which support relative addressing and instructions which\ndon't.  We could check whether the existing \"type\" attribute is equal to\n\"larl\", but there are notable exceptions (lrl, for example), and\nchanging them makes scheduling worse on z10.  We could also check\nwhether the existing \"op_type\" attribute is equal to \"RIL-b\" or \"RIL-c\".\nHowever, adding a new attribute provides more flexibility, since we\ndon't depend idiosyncrasies which might be introduced into PoP in the\nfuture.\n\ngcc/ChangeLog:\n\n2018-11-06  Ilya Leoshkevich  <iii@linux.ibm.com>\n\n\tPR target/87762\n\t* config/s390/s390.md: Add relative_long attribute.\n\nFrom-SVN: r265844", "tree": {"sha": "2336003a665af1ca49919db21fec0b763056aaee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2336003a665af1ca49919db21fec0b763056aaee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/14cfceb7f71bcf72c9c16717ce546412cf6df64b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14cfceb7f71bcf72c9c16717ce546412cf6df64b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14cfceb7f71bcf72c9c16717ce546412cf6df64b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14cfceb7f71bcf72c9c16717ce546412cf6df64b/comments", "author": {"login": "iii-i", "id": 45998171, "node_id": "MDQ6VXNlcjQ1OTk4MTcx", "avatar_url": "https://avatars.githubusercontent.com/u/45998171?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iii-i", "html_url": "https://github.com/iii-i", "followers_url": "https://api.github.com/users/iii-i/followers", "following_url": "https://api.github.com/users/iii-i/following{/other_user}", "gists_url": "https://api.github.com/users/iii-i/gists{/gist_id}", "starred_url": "https://api.github.com/users/iii-i/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iii-i/subscriptions", "organizations_url": "https://api.github.com/users/iii-i/orgs", "repos_url": "https://api.github.com/users/iii-i/repos", "events_url": "https://api.github.com/users/iii-i/events{/privacy}", "received_events_url": "https://api.github.com/users/iii-i/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7307cd25d67aca6da8d4c582f0fd91e12a11a034", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7307cd25d67aca6da8d4c582f0fd91e12a11a034", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7307cd25d67aca6da8d4c582f0fd91e12a11a034"}], "stats": {"total": 99, "additions": 72, "deletions": 27}, "files": [{"sha": "eb09970615b6d90385fd7c82cdaa5555fa2e5608", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14cfceb7f71bcf72c9c16717ce546412cf6df64b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14cfceb7f71bcf72c9c16717ce546412cf6df64b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=14cfceb7f71bcf72c9c16717ce546412cf6df64b", "patch": "@@ -1,3 +1,8 @@\n+2018-11-06  Ilya Leoshkevich  <iii@linux.ibm.com>\n+\n+\tPR target/87762\n+\t* config/s390/s390.md: Add relative_long attribute.\n+\n 2018-11-06  Jan Hubicka  <jh@suse.cz>\n \n \t* ipa-pure-const.c (check_decl): Do not test TYPE_NEEDS_CONSTRUCTING."}, {"sha": "957c378e34f6965881769f7ae6566474e84742f4", "filename": "gcc/config/s390/s390.md", "status": "modified", "additions": 67, "deletions": 27, "changes": 94, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14cfceb7f71bcf72c9c16717ce546412cf6df64b/gcc%2Fconfig%2Fs390%2Fs390.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14cfceb7f71bcf72c9c16717ce546412cf6df64b/gcc%2Fconfig%2Fs390%2Fs390.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.md?ref=14cfceb7f71bcf72c9c16717ce546412cf6df64b", "patch": "@@ -570,6 +570,13 @@\n \t ]\n \t(const_int 0)))\n \n+;; Whether an instruction supports relative long addressing.\n+;; Currently this corresponds to RIL-b and RIL-c instruction formats,\n+;; but having a separate attribute, as opposed to reusing op_type,\n+;; provides additional flexibility.\n+\n+(define_attr \"relative_long\" \"no,yes\" (const_string \"no\"))\n+\n ;; Pipeline description for z900.\n (include \"2064.md\")\n \n@@ -1130,7 +1137,8 @@\n    cgfrl\\t%0,%1\"\n   [(set_attr \"op_type\"      \"RRE,RXY,RIL\")\n    (set_attr \"z10prop\" \"z10_c,*,*\")\n-   (set_attr \"type\"         \"*,*,larl\")])\n+   (set_attr \"type\"         \"*,*,larl\")\n+   (set_attr \"relative_long\" \"*,*,yes\")])\n \n \n \n@@ -1146,7 +1154,8 @@\n   [(set_attr \"op_type\"      \"RX,RXY,RIL\")\n    (set_attr \"cpu_facility\" \"*,longdisp,z10\")\n    (set_attr \"type\"         \"*,*,larl\")\n-   (set_attr \"z196prop\" \"z196_cracked,z196_cracked,z196_cracked\")])\n+   (set_attr \"z196prop\" \"z196_cracked,z196_cracked,z196_cracked\")\n+   (set_attr \"relative_long\" \"*,*,yes\")])\n \n (define_insn \"*cmphi_ccs_z10\"\n   [(set (reg CC_REGNUM)\n@@ -1166,7 +1175,8 @@\n    cgh\\t%0,%1\n    cghrl\\t%0,%1\"\n   [(set_attr \"op_type\" \"RXY,RIL\")\n-   (set_attr \"type\"    \"*,larl\")])\n+   (set_attr \"type\"    \"*,larl\")\n+   (set_attr \"relative_long\" \"*,yes\")])\n \n ; cr, chi, cfi, c, cy, cgr, cghi, cgfi, cg, chsi, cghsi, crl, cgrl\n (define_insn \"*cmp<mode>_ccs\"\n@@ -1187,7 +1197,8 @@\n   [(set_attr \"op_type\" \"RR<E>,RI,SIL,RIL,RX<Y>,RXY,RIL\")\n    (set_attr \"cpu_facility\" \"*,*,z10,extimm,*,longdisp,z10\")\n    (set_attr \"type\" \"*,*,*,*,*,*,larl\")\n-   (set_attr \"z10prop\" \"z10_super_c,z10_super,z10_super,z10_super,z10_super,z10_super,z10_super\")])\n+   (set_attr \"z10prop\" \"z10_super_c,z10_super,z10_super,z10_super,z10_super,z10_super,z10_super\")\n+   (set_attr \"relative_long\" \"*,*,*,*,*,*,yes\")])\n \n \n ; Compare (unsigned) instructions\n@@ -1201,7 +1212,8 @@\n   \"clhrl\\t%0,%1\"\n   [(set_attr \"op_type\" \"RIL\")\n    (set_attr \"type\"    \"larl\")\n-   (set_attr \"z10prop\" \"z10_super\")])\n+   (set_attr \"z10prop\" \"z10_super\")\n+   (set_attr \"relative_long\" \"yes\")])\n \n ; clhrl, clghrl\n (define_insn \"*cmp<GPR:mode>_ccu_zerohi_rldi\"\n@@ -1213,7 +1225,8 @@\n   \"cl<g>hrl\\t%0,%1\"\n   [(set_attr \"op_type\" \"RIL\")\n    (set_attr \"type\"    \"larl\")\n-   (set_attr \"z10prop\" \"z10_super\")])\n+   (set_attr \"z10prop\" \"z10_super\")\n+   (set_attr \"relative_long\" \"yes\")])\n \n (define_insn \"*cmpdi_ccu_zero\"\n   [(set (reg CC_REGNUM)\n@@ -1228,7 +1241,8 @@\n   [(set_attr \"op_type\"      \"RRE,RXY,RIL\")\n    (set_attr \"cpu_facility\" \"*,*,z10\")\n    (set_attr \"type\"         \"*,*,larl\")\n-   (set_attr \"z10prop\" \"z10_super_c,z10_super_E1,z10_super\")])\n+   (set_attr \"z10prop\" \"z10_super_c,z10_super_E1,z10_super\")\n+   (set_attr \"relative_long\" \"*,*,yes\")])\n \n (define_insn \"*cmpdi_ccu\"\n   [(set (reg CC_REGNUM)\n@@ -1248,7 +1262,8 @@\n   [(set_attr \"op_type\" \"RRE,RIL,RIL,SIL,RXY,SS,SS\")\n    (set_attr \"cpu_facility\" \"*,extimm,z10,z10,*,*,*\")\n    (set_attr \"type\"         \"*,*,larl,*,*,*,*\")\n-   (set_attr \"z10prop\" \"z10_super_c,z10_super,z10_super,z10_super,z10_super,*,*\")])\n+   (set_attr \"z10prop\" \"z10_super_c,z10_super,z10_super,z10_super,z10_super,*,*\")\n+   (set_attr \"relative_long\" \"*,*,yes,*,*,*,*\")])\n \n (define_insn \"*cmpsi_ccu\"\n   [(set (reg CC_REGNUM)\n@@ -1267,7 +1282,8 @@\n   [(set_attr \"op_type\" \"RR,RIL,RIL,SIL,RX,RXY,SS,SS\")\n    (set_attr \"cpu_facility\" \"*,extimm,z10,z10,*,longdisp,*,*\")\n    (set_attr \"type\"         \"*,*,larl,*,*,*,*,*\")\n-   (set_attr \"z10prop\" \"z10_super_c,z10_super,z10_super,z10_super,z10_super,z10_super,*,*\")])\n+   (set_attr \"z10prop\" \"z10_super_c,z10_super,z10_super,z10_super,z10_super,z10_super,*,*\")\n+   (set_attr \"relative_long\" \"*,*,yes,*,*,*,*,*\")])\n \n (define_insn \"*cmphi_ccu\"\n   [(set (reg CC_REGNUM)\n@@ -1805,6 +1821,10 @@\n                         *,\n                         *,*,*,*,*,*,*,\n                         z10_super_A1\")\n+   (set_attr \"relative_long\" \"*,*,*,*,*,*,*,*,*,*,\n+                              *,yes,*,*,*,*,*,*,*,*,\n+                              yes,*,*,*,*,*,*,*,*,*,\n+                              *,*,yes\")\n ])\n \n (define_split\n@@ -1997,7 +2017,8 @@\n   \"larl\\t%0,%1\"\n    [(set_attr \"op_type\" \"RIL\")\n     (set_attr \"type\"    \"larl\")\n-    (set_attr \"z10prop\" \"z10_fwd_A1\")])\n+    (set_attr \"z10prop\" \"z10_fwd_A1\")\n+    (set_attr \"relative_long\" \"yes\")])\n \n (define_insn \"*movsi_zarch\"\n   [(set (match_operand:SI 0 \"nonimmediate_operand\"\n@@ -2087,7 +2108,10 @@\n                         *,\n                         z10_rec,\n                         z10_super,\n-                        *,*,*,*,*,*,*\")])\n+                        *,*,*,*,*,*,*\")\n+   (set_attr \"relative_long\" \"*,*,*,*,*,yes,*,*,*,*,\n+                              *,*,*,*,*,*,*,*,*,*,\n+                              *,yes,*,*,*,*,*,*,*,*\")])\n \n (define_insn \"*movsi_esa\"\n   [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=d,d,d,R,!*f,!*f,!*f,!*f,!R,d,t,Q,t\")\n@@ -2254,7 +2278,8 @@\n                        z10_rec,\n                        z10_rec,\n                        z10_rec,\n-                       z10_super,*,*,*,*,*,*\")])\n+                       z10_super,*,*,*,*,*,*\")\n+   (set_attr \"relative_long\" \"*,*,*,*,yes,*,*,yes,*,*,*,*,*,*,*\")])\n \n (define_peephole2\n   [(set (match_operand:HI 0 \"register_operand\" \"\")\n@@ -2543,7 +2568,8 @@\n    (set_attr \"type\" \"fsimpdf,floaddf,floaddf,floaddf,floaddf,floaddf,\n                      fstoredf,fstoredf,*,lr,load,load,store,store,*,*,*,*,load,store\")\n    (set_attr \"z10prop\" \"*,*,*,*,*,*,*,*,z10_fwd_A1,z10_fr_E1,z10_fwd_A3,z10_fwd_A3,z10_rec,z10_rec,*,*,*,*,*,*\")\n-   (set_attr \"cpu_facility\" \"z196,*,*,*,*,longdisp,*,longdisp,*,*,z10,*,z10,*,vx,vx,vx,vx,vx,vx\")])\n+   (set_attr \"cpu_facility\" \"z196,*,*,*,*,longdisp,*,longdisp,*,*,z10,*,z10,*,vx,vx,vx,vx,vx,vx\")\n+   (set_attr \"relative_long\" \"*,*,*,*,*,*,*,*,*,*,yes,*,yes,*,*,*,*,*,*,*\")])\n \n (define_insn \"*mov<mode>_64\"\n   [(set (match_operand:DD_DF 0 \"nonimmediate_operand\" \"=f,f,f,f,R,T,d,d,d,d,b,T\")\n@@ -2566,7 +2592,8 @@\n    (set_attr \"type\"    \"fsimpdf,fload<mode>,fload<mode>,fload<mode>,\n                         fstore<mode>,fstore<mode>,*,lr,load,load,store,store\")\n    (set_attr \"z10prop\" \"*,*,*,*,*,*,z10_fwd_A1,z10_fr_E1,z10_fwd_A3,z10_fwd_A3,z10_rec,z10_rec\")\n-   (set_attr \"cpu_facility\" \"z196,*,*,longdisp,*,longdisp,*,*,z10,*,z10,*\")])\n+   (set_attr \"cpu_facility\" \"z196,*,*,longdisp,*,longdisp,*,*,z10,*,z10,*\")\n+   (set_attr \"relative_long\" \"*,*,*,*,*,*,*,*,yes,*,*,*\")])\n \n (define_insn \"*mov<mode>_31\"\n   [(set (match_operand:DD_DF 0 \"nonimmediate_operand\"\n@@ -2674,7 +2701,8 @@\n    (set_attr \"type\"    \"fsimpsf,fsimpsf,fload<mode>,fload<mode>,fload<mode>,fload<mode>,\n                         fstore<mode>,fstore<mode>,*,lr,load,load,load,store,store,store,*,*,*,*,load,store\")\n    (set_attr \"z10prop\" \"*,*,*,*,*,*,*,*,z10_fwd_A1,z10_fr_E1,z10_fr_E1,z10_fwd_A3,z10_fwd_A3,z10_rec,z10_rec,z10_rec,*,*,*,*,*,*\")\n-   (set_attr \"cpu_facility\" \"z196,vx,*,vx,*,longdisp,*,longdisp,*,*,z10,*,longdisp,z10,*,longdisp,vx,vx,vx,vx,vx,vx\")])\n+   (set_attr \"cpu_facility\" \"z196,vx,*,vx,*,longdisp,*,longdisp,*,*,z10,*,longdisp,z10,*,longdisp,vx,vx,vx,vx,vx,vx\")\n+   (set_attr \"relative_long\" \"*,*,*,*,*,*,*,*,*,*,yes,*,*,yes,*,*,*,*,*,*,*,*\")])\n \n ;\n ; movcc instruction pattern\n@@ -2968,7 +2996,8 @@\n    && GET_MODE_SIZE (GET_MODE (operands[1])) <= UNITS_PER_WORD\"\n   \"exrl\\t%1,%3\"\n   [(set_attr \"op_type\" \"RIL\")\n-   (set_attr \"type\"    \"cs\")])\n+   (set_attr \"type\"    \"cs\")\n+   (set_attr \"relative_long\" \"yes\")])\n \n (define_insn \"*execute\"\n   [(match_parallel 0 \"execute_operation\"\n@@ -4471,7 +4500,8 @@\n   [(set_attr \"op_type\"      \"RRE,RXY,RIL\")\n    (set_attr \"type\"         \"*,*,larl\")\n    (set_attr \"cpu_facility\" \"*,*,z10\")\n-   (set_attr \"z10prop\" \"z10_super_E1,z10_super_E1,z10_super_E1\")])\n+   (set_attr \"z10prop\" \"z10_super_E1,z10_super_E1,z10_super_E1\")\n+   (set_attr \"relative_long\" \"*,*,yes\")])\n \n ;\n ; extend(hi|qi)(si|di)2 instruction pattern(s).\n@@ -4515,7 +4545,8 @@\n   [(set_attr \"op_type\"      \"RRE,RXY,RIL\")\n    (set_attr \"type\"         \"*,*,larl\")\n    (set_attr \"cpu_facility\" \"extimm,extimm,z10\")\n-   (set_attr \"z10prop\" \"z10_super_E1,z10_super_E1,z10_super_E1\")])\n+   (set_attr \"z10prop\" \"z10_super_E1,z10_super_E1,z10_super_E1\")\n+   (set_attr \"relative_long\" \"*,*,yes\")])\n \n (define_insn \"*extendhidi2\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=d\")\n@@ -4541,7 +4572,8 @@\n   [(set_attr \"op_type\"      \"RRE,RX,RXY,RIL\")\n    (set_attr \"type\"         \"*,*,*,larl\")\n    (set_attr \"cpu_facility\" \"extimm,extimm,extimm,z10\")\n-   (set_attr \"z10prop\" \"z10_super_E1,z10_super_E1,z10_super_E1,z10_super_E1\")])\n+   (set_attr \"z10prop\" \"z10_super_E1,z10_super_E1,z10_super_E1,z10_super_E1\")\n+   (set_attr \"relative_long\" \"*,*,*,yes\")])\n \n (define_insn \"*extendhisi2\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=d,d\")\n@@ -4626,7 +4658,8 @@\n   [(set_attr \"op_type\"      \"RRE,RXY,RIL\")\n    (set_attr \"type\"         \"*,*,larl\")\n    (set_attr \"cpu_facility\" \"*,*,z10\")\n-   (set_attr \"z10prop\" \"z10_fwd_E1,z10_fwd_A3,z10_fwd_A3\")])\n+   (set_attr \"z10prop\" \"z10_fwd_E1,z10_fwd_A3,z10_fwd_A3\")\n+   (set_attr \"relative_long\" \"*,*,yes\")])\n \n ;\n ; LLGT-type instructions (zero-extend from 31 bit to 64 bit).\n@@ -4739,7 +4772,8 @@\n   [(set_attr \"op_type\"      \"RXY,RRE,RIL\")\n    (set_attr \"type\"         \"*,*,larl\")\n    (set_attr \"cpu_facility\" \"*,*,z10\")\n-   (set_attr \"z10prop\" \"z10_super_E1,z10_fwd_A3,z10_fwd_A3\")])\n+   (set_attr \"z10prop\" \"z10_super_E1,z10_fwd_A3,z10_fwd_A3\")\n+   (set_attr \"relative_long\" \"*,*,yes\")])\n \n ; llhr, llcr, llghr, llgcr, llh, llc, llgh, llgc\n (define_insn \"*zero_extend<HQI:mode><GPR:mode>2_extimm\"\n@@ -9952,7 +9986,8 @@\n   \"brasl\\t%2,%0\"\n   [(set_attr \"op_type\" \"RIL\")\n    (set_attr \"type\"    \"jsr\")\n-   (set_attr \"z196prop\" \"z196_cracked\")])\n+   (set_attr \"z196prop\" \"z196_cracked\")\n+   (set_attr \"relative_long\" \"yes\")])\n \n (define_insn \"*basr\"\n   [(call (mem:QI (match_operand 0 \"address_operand\" \"ZR\"))\n@@ -10058,7 +10093,8 @@\n   \"brasl\\t%3,%1\"\n   [(set_attr \"op_type\" \"RIL\")\n    (set_attr \"type\"    \"jsr\")\n-   (set_attr \"z196prop\" \"z196_cracked\")])\n+   (set_attr \"z196prop\" \"z196_cracked\")\n+   (set_attr \"relative_long\" \"yes\")])\n \n (define_insn \"*basr_r\"\n   [(set (match_operand 0 \"\" \"\")\n@@ -10201,7 +10237,8 @@\n   \"brasl\\t%3,%1%J4\"\n   [(set_attr \"op_type\" \"RIL\")\n    (set_attr \"type\"    \"jsr\")\n-   (set_attr \"z196prop\" \"z196_cracked\")])\n+   (set_attr \"z196prop\" \"z196_cracked\")\n+   (set_attr \"relative_long\" \"yes\")])\n \n (define_insn \"*basr_tls\"\n   [(set (match_operand 0 \"\" \"\")\n@@ -10736,7 +10773,8 @@\n   [(unspec_volatile [(const_int 0)] UNSPECV_NOP_6_BYTE)]\n   \"\"\n   \"brcl\\t0, 0\"\n-  [(set_attr \"op_type\" \"RIL\")])\n+  [(set_attr \"op_type\" \"RIL\")\n+   (set_attr \"relative_long\" \"yes\")])\n \n \n ;\n@@ -10789,7 +10827,8 @@\n   \"larl\\t%0,%1\"\n   [(set_attr \"op_type\" \"RIL\")\n    (set_attr \"type\"    \"larl\")\n-   (set_attr \"z10prop\" \"z10_fwd_A1\")])\n+   (set_attr \"z10prop\" \"z10_fwd_A1\")\n+   (set_attr \"relative_long\" \"yes\")])\n \n (define_insn \"main_pool\"\n   [(set (match_operand 0 \"register_operand\" \"=a\")\n@@ -11075,7 +11114,8 @@\n   [(set_attr \"type\" \"load,larl\")\n    (set_attr \"op_type\" \"RXY,RIL\")\n    (set_attr \"z10prop\" \"z10_super\")\n-   (set_attr \"z196prop\" \"z196_alone\")])\n+   (set_attr \"z196prop\" \"z196_alone\")\n+   (set_attr \"relative_long\" \"yes\")])\n \n \n ;"}]}