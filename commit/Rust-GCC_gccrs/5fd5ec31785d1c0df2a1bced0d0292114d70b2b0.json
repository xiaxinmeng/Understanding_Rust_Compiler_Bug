{"sha": "5fd5ec31785d1c0df2a1bced0d0292114d70b2b0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWZkNWVjMzE3ODVkMWMwZGYyYTFiY2VkMGQwMjkyMTE0ZDcwYjJiMA==", "commit": {"author": {"name": "Stan Shebs", "email": "shebs@apple.com", "date": "2004-10-29T22:08:47Z"}, "committer": {"name": "Stan Shebs", "email": "shebs@gcc.gnu.org", "date": "2004-10-29T22:08:47Z"}, "message": "* config/rs6000/darwin-tramp.asm: Make more 64-bit-friendly.\n\nFrom-SVN: r89861", "tree": {"sha": "d032987e38484790151f703848eb7f28f6a12ebb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d032987e38484790151f703848eb7f28f6a12ebb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5fd5ec31785d1c0df2a1bced0d0292114d70b2b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5fd5ec31785d1c0df2a1bced0d0292114d70b2b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5fd5ec31785d1c0df2a1bced0d0292114d70b2b0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5fd5ec31785d1c0df2a1bced0d0292114d70b2b0/comments", "author": null, "committer": null, "parents": [{"sha": "158414d63510ea4521ef7918c331081fca386da2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/158414d63510ea4521ef7918c331081fca386da2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/158414d63510ea4521ef7918c331081fca386da2"}], "stats": {"total": 68, "additions": 46, "deletions": 22}, "files": [{"sha": "ae153e73967c565be29100b8a3afaa0ea3af94ec", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fd5ec31785d1c0df2a1bced0d0292114d70b2b0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fd5ec31785d1c0df2a1bced0d0292114d70b2b0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5fd5ec31785d1c0df2a1bced0d0292114d70b2b0", "patch": "@@ -1,3 +1,7 @@\n+2004-10-29  Stan Shebs  <shebs@apple.com>\n+\n+\t* config/rs6000/darwin-tramp.asm: Make more 64-bit-friendly.\n+\n 2004-10-29  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* tree-phinodes.c (allocate_phi_node): New."}, {"sha": "314a360b7f8e10057be6e864e5928b00f1f566b1", "filename": "gcc/config/rs6000/darwin-tramp.asm", "status": "modified", "additions": 42, "deletions": 22, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fd5ec31785d1c0df2a1bced0d0292114d70b2b0/gcc%2Fconfig%2Frs6000%2Fdarwin-tramp.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fd5ec31785d1c0df2a1bced0d0292114d70b2b0/gcc%2Fconfig%2Frs6000%2Fdarwin-tramp.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fdarwin-tramp.asm?ref=5fd5ec31785d1c0df2a1bced0d0292114d70b2b0", "patch": "@@ -33,22 +33,46 @@\n  *  executable file might be covered by the GNU General Public License.\n  */ \n \n+/* Some 32/64 macros, donated from /usr/include/architecture/ppc . */\n+\n+#if defined(__ppc64__)\n+#define MODE_CHOICE(x, y) y\n+#else\n+#define MODE_CHOICE(x, y) x\n+#endif\n+\n+#define cmpg    MODE_CHOICE(cmpw, cmpd)\n+#define lg      MODE_CHOICE(lwz, ld)\n+#define stg     MODE_CHOICE(stw, std)\n+#define lgx     MODE_CHOICE(lwzx, ldx)\n+#define stgx    MODE_CHOICE(stwx, stdx)\n+#define lgu     MODE_CHOICE(lwzu, ldu)\n+#define stgu    MODE_CHOICE(stwu, stdu)\n+#define lgux    MODE_CHOICE(lwzux, ldux)\n+#define stgux   MODE_CHOICE(stwux, stdux)\n+#define lgwa    MODE_CHOICE(lwz, lwa)\n+\n+#define g_long  MODE_CHOICE(long, quad)         /* usage is \".g_long\" */\n+\n+#define GPR_BYTES       MODE_CHOICE(4,8)        /* size of a GPR in bytes */\n+#define LOG2_GPR_BYTES  MODE_CHOICE(2,3)        /* log2(GPR_BYTES) */\n+\n /* Set up trampolines.  */\n \n .text\n-\t.align\t2\n+\t.align\tLOG2_GPR_BYTES\n Ltrampoline_initial:\n \tmflr\tr0\n \tbl\t1f\n Lfunc = .-Ltrampoline_initial\n-\t.long\t0\t\t/* will be replaced with function address */\n+\t.g_long\t0\t\t/* will be replaced with function address */\n Lchain = .-Ltrampoline_initial\n-\t.long\t0\t\t/* will be replaced with static chain */\n+\t.g_long\t0\t\t/* will be replaced with static chain */\n 1:\tmflr\tr11\n-\tlwz\tr12,0(r11)\t/* function address */\n+\tlg\tr12,0(r11)\t/* function address */\n \tmtlr\tr0\n \tmtctr\tr12\n-\tlwz\tr11,4(r11)\t/* static chain */\n+\tlg\tr11,GPR_BYTES(r11)\t/* static chain */\n \tbctr\n \n trampoline_size = .-Ltrampoline_initial\n@@ -65,26 +89,26 @@ ___trampoline_setup:\n LCF0:\n         mflr\tr11\n         addis\tr7,r11,ha16(LTRAMP-LCF0)\n-\tlwz\tr7,lo16(LTRAMP-LCF0)(r7)\n-\tsubi\tr7,r7,4\n+\tlg\tr7,lo16(LTRAMP-LCF0)(r7)\n+\tsubi\tr7,r7,GPR_BYTES\n \tli\tr8,trampoline_size\t/* verify trampoline big enough */\n-\tcmpw\tcr1,r8,r4\n-\tsrwi\tr4,r4,2\t\t/* # words to move */\n-\taddi\tr9,r3,-4\t/* adjust pointer for lwzu */\n+\tcmpg\tcr1,r8,r4\n+\tsrwi\tr4,r4,2\t\t\t/* # words to move (insns always 4-byte) */\n+\taddi\tr9,r3,-GPR_BYTES\t/* adjust pointer for lgu */\n \tmtctr\tr4\n \tblt\tcr1,Labort\n \n \tmtlr\tr0\n \n \t/* Copy the instructions to the stack */\n Lmove:\n-\tlwzu\tr10,4(r7)\n-\tstwu\tr10,4(r9)\n+\tlgu\tr10,GPR_BYTES(r7)\n+\tstgu\tr10,GPR_BYTES(r9)\n \tbdnz\tLmove\n \n \t/* Store correct function and static chain */\n-\tstw\tr5,Lfunc(r3)\n-\tstw\tr6,Lchain(r3)\n+\tstg\tr5,Lfunc(r3)\n+\tstg\tr6,Lchain(r3)\n \n \t/* Now flush both caches */\n \tmtctr\tr4\n@@ -113,23 +137,19 @@ L0$_abort:\n         mflr r11\n         addis r11,r11,ha16(L_abort$lazy_ptr-L0$_abort)\n         mtlr r0\n-\tlwzu r12,lo16(L_abort$lazy_ptr-L0$_abort)(r11)\n+\tlgu r12,lo16(L_abort$lazy_ptr-L0$_abort)(r11)\n         mtctr r12\n         bctr\n .data\n .lazy_symbol_pointer\n L_abort$lazy_ptr:\n         .indirect_symbol _abort\n-#ifdef __ppc64__\n-\t.quad\tdyld_stub_binding_helper\n-#else\n-\t.long\tdyld_stub_binding_helper\n-#endif\n+\t.g_long\tdyld_stub_binding_helper\n #else\n \tbl\t_abort\n #endif\n .data\n-\t.align 2\n+\t.align LOG2_GPR_BYTES\n LTRAMP:\n-\t.long Ltrampoline_initial\n+\t.g_long Ltrampoline_initial\n "}]}