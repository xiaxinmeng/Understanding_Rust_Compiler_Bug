{"sha": "8e4c9a109a46268407e01b8433892fcd7d2d8942", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGU0YzlhMTA5YTQ2MjY4NDA3ZTAxYjg0MzM4OTJmY2Q3ZDJkODk0Mg==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2013-09-02T21:44:35Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2013-09-02T21:44:35Z"}, "message": "lto-symtab.c (lto_symtab_merge_symbols): Add comments; merge duplicated nodes for assembler names.\n\n\n\t* lto-symtab.c (lto_symtab_merge_symbols): Add comments; merge\n\tduplicated nodes for assembler names.\n\t* symtab.c (symtab_unregister_node): Do not attempt to unlink\n\thard registers from assembler name hash.\n\nFrom-SVN: r202186", "tree": {"sha": "317deda59d23dfd5d2381e6b2955d8f2f7bb28ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/317deda59d23dfd5d2381e6b2955d8f2f7bb28ff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8e4c9a109a46268407e01b8433892fcd7d2d8942", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e4c9a109a46268407e01b8433892fcd7d2d8942", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e4c9a109a46268407e01b8433892fcd7d2d8942", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e4c9a109a46268407e01b8433892fcd7d2d8942/comments", "author": null, "committer": null, "parents": [{"sha": "c91061e6b0e1a5ce9484decc9aa208ce00a9af57", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c91061e6b0e1a5ce9484decc9aa208ce00a9af57", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c91061e6b0e1a5ce9484decc9aa208ce00a9af57"}], "stats": {"total": 30, "additions": 28, "deletions": 2}, "files": [{"sha": "4c9554a821237664c19a26d46d4fa8004bdbb480", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e4c9a109a46268407e01b8433892fcd7d2d8942/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e4c9a109a46268407e01b8433892fcd7d2d8942/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8e4c9a109a46268407e01b8433892fcd7d2d8942", "patch": "@@ -1,3 +1,10 @@\n+2013-09-02  Jan Hubicka  <jh@suse.cz>\n+\n+\t* lto-symtab.c (lto_symtab_merge_symbols): Add comments; merge\n+\tduplicated nodes for assembler names.\n+\t* symtab.c (symtab_unregister_node): Do not attempt to unlink\n+\thard registers from assembler name hash.\n+\n 2013-09-02  Jan Hubicka  <jh@suse.cz>\n \n \t* ipa-split.c (execute_split_functions): Split externally visible"}, {"sha": "76e94400f6ac25c69753d7579dc139fb96822abe", "filename": "gcc/lto-symtab.c", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e4c9a109a46268407e01b8433892fcd7d2d8942/gcc%2Flto-symtab.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e4c9a109a46268407e01b8433892fcd7d2d8942/gcc%2Flto-symtab.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-symtab.c?ref=8e4c9a109a46268407e01b8433892fcd7d2d8942", "patch": "@@ -586,6 +586,9 @@ lto_symtab_merge_symbols (void)\n       FOR_EACH_SYMBOL (node)\n \t{\n \t  cgraph_node *cnode, *cnode2;\n+\t  varpool_node *vnode;\n+\t  symtab_node node2;\n+\n \t  if (!node->symbol.analyzed && node->symbol.alias_target)\n \t    {\n \t      symtab_node tgt = symtab_node_for_asm (node->symbol.alias_target);\n@@ -594,22 +597,37 @@ lto_symtab_merge_symbols (void)\n \t\tsymtab_resolve_alias (node, tgt);\n \t    }\n \t  node->symbol.aux = NULL;\n-\t  \n+\n \t  if (!(cnode = dyn_cast <cgraph_node> (node))\n \t      || !cnode->clone_of\n \t      || cnode->clone_of->symbol.decl != cnode->symbol.decl)\n \t    {\n+\t      /* Builtins are not merged via decl merging.  It is however\n+\t\t possible that tree merging unified the declaration.  We\n+\t\t do not want duplicate entries in symbol table.  */\n \t      if (cnode && DECL_BUILT_IN (node->symbol.decl)\n \t\t  && (cnode2 = cgraph_get_node (node->symbol.decl))\n \t\t  && cnode2 != cnode)\n \t\tlto_cgraph_replace_node (cnode2, cnode);\n \n+\t      /* The user defined assembler variables are also not unified by their\n+\t\t symbol name (since it is irrelevant), but we need to unify symbol\n+\t\t nodes if tree merging occured.  */\n+\t      if ((vnode = dyn_cast <varpool_node> (node))\n+\t\t  && DECL_HARD_REGISTER (vnode->symbol.decl)\n+\t\t  && (node2 = symtab_get_node (vnode->symbol.decl))\n+\t\t  && node2 != node)\n+\t\tlto_varpool_replace_node (dyn_cast <varpool_node> (node2),\n+\t\t\t\t\t  vnode);\n+\t  \n+\n \t      /* Abstract functions may have duplicated cgraph nodes attached;\n \t\t remove them.  */\n \t      else if (cnode && DECL_ABSTRACT (cnode->symbol.decl)\n \t\t       && (cnode2 = cgraph_get_node (node->symbol.decl))\n \t\t       && cnode2 != cnode)\n \t\tcgraph_remove_node (cnode2);\n+\n \t      symtab_insert_node_to_hashtable ((symtab_node)node);\n \t    }\n \t}"}, {"sha": "253ba981844310eac29d547ee305885afbf6ddc4", "filename": "gcc/symtab.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e4c9a109a46268407e01b8433892fcd7d2d8942/gcc%2Fsymtab.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e4c9a109a46268407e01b8433892fcd7d2d8942/gcc%2Fsymtab.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsymtab.c?ref=8e4c9a109a46268407e01b8433892fcd7d2d8942", "patch": "@@ -283,7 +283,8 @@ symtab_unregister_node (symtab_node node)\n       else\n \t*slot = replacement_node;\n     }\n-  unlink_from_assembler_name_hash (node, false);\n+  if (!is_a <varpool_node> (node) || !DECL_HARD_REGISTER (node->symbol.decl))\n+    unlink_from_assembler_name_hash (node, false);\n }\n \n /* Return symbol table node associated with DECL, if any,"}]}