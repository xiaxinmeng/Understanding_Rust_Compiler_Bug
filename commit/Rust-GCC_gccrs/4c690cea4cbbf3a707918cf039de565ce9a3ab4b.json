{"sha": "4c690cea4cbbf3a707918cf039de565ce9a3ab4b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGM2OTBjZWE0Y2JiZjNhNzA3OTE4Y2YwMzlkZTU2NWNlOWEzYWI0Yg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2014-01-28T22:00:05Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2014-01-28T22:00:05Z"}, "message": "re PR c++/59818 (Bogus error: call of overloaded .... is ambiguous)\n\n\tPR c++/59818\n\t* pt.c (tsubst_function_type): Make sure we keep the same function\n\tquals.\n\nFrom-SVN: r207215", "tree": {"sha": "9605d218db0f780051e9178026f77a9ec6cbdb44", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9605d218db0f780051e9178026f77a9ec6cbdb44"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4c690cea4cbbf3a707918cf039de565ce9a3ab4b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c690cea4cbbf3a707918cf039de565ce9a3ab4b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c690cea4cbbf3a707918cf039de565ce9a3ab4b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c690cea4cbbf3a707918cf039de565ce9a3ab4b/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "19cef1c1f1da315cf5c66aeea465058d3ef5114b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19cef1c1f1da315cf5c66aeea465058d3ef5114b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/19cef1c1f1da315cf5c66aeea465058d3ef5114b"}], "stats": {"total": 26, "additions": 26, "deletions": 0}, "files": [{"sha": "502f218173b134d0d4aa175f728b5303430e67b1", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c690cea4cbbf3a707918cf039de565ce9a3ab4b/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c690cea4cbbf3a707918cf039de565ce9a3ab4b/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=4c690cea4cbbf3a707918cf039de565ce9a3ab4b", "patch": "@@ -1,5 +1,9 @@\n 2014-01-28  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/59818\n+\t* pt.c (tsubst_function_type): Make sure we keep the same function\n+\tquals.\n+\n \tPR c++/58701\n \t* semantics.c (build_anon_member_initialization): Stop walking\n \twhen we run out of COMPONENT_REFs."}, {"sha": "011db2c134701082277b72f65c05ef776631f06e", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c690cea4cbbf3a707918cf039de565ce9a3ab4b/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c690cea4cbbf3a707918cf039de565ce9a3ab4b/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=4c690cea4cbbf3a707918cf039de565ce9a3ab4b", "patch": "@@ -11189,6 +11189,8 @@ tsubst_function_type (tree t,\n   else\n     {\n       tree r = TREE_TYPE (TREE_VALUE (arg_types));\n+      /* Don't pick up extra function qualifiers from the basetype.  */\n+      r = cp_build_qualified_type_real (r, type_memfn_quals (t), complain);\n       if (! MAYBE_CLASS_TYPE_P (r))\n \t{\n \t  /* [temp.deduct]"}, {"sha": "a4194109ef7f1c00d1ddd07cde4d9d05c13368e6", "filename": "gcc/testsuite/g++.dg/template/ptrmem24.C", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c690cea4cbbf3a707918cf039de565ce9a3ab4b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fptrmem24.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c690cea4cbbf3a707918cf039de565ce9a3ab4b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fptrmem24.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fptrmem24.C?ref=4c690cea4cbbf3a707918cf039de565ce9a3ab4b", "patch": "@@ -0,0 +1,20 @@\n+// PR c++/59818\n+\n+template <class T>\n+struct Identity {\n+  typedef T type;\n+};\n+\n+struct Foo {\n+  template <typename T>\n+  Foo(T*, void (Identity<T>::type::*m)(void));\n+};\n+\n+struct Bar {\n+  void Method(void) const;\n+};\n+\n+void Bar::Method(void) const\n+{\n+  Foo foo(this, &Bar::Method);\t// { dg-error \"no match\" }\n+}"}]}