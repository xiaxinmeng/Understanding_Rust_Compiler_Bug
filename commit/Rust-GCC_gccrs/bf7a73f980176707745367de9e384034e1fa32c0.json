{"sha": "bf7a73f980176707745367de9e384034e1fa32c0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmY3YTczZjk4MDE3NjcwNzc0NTM2N2RlOWUzODQwMzRlMWZhMzJjMA==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2013-05-22T11:13:17Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2013-05-22T11:13:17Z"}, "message": "re PR fortran/57338 (ICE with assumed rank)\n\n2013-05-22  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/57338\n        * intrinsic.c (do_check): Move some checks to ...\n        (do_ts29113_check): ... this new function.\n        (check_specific, gfc_intrinsic_sub_interface): Call it.\n\n2013-05-22  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/57338\n        * gfortran.dg/assumed_type_6.f90: New.\n\nFrom-SVN: r199192", "tree": {"sha": "ef7ae531eb080f1f18ea2cfd531e4ed159c8d0f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ef7ae531eb080f1f18ea2cfd531e4ed159c8d0f6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bf7a73f980176707745367de9e384034e1fa32c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf7a73f980176707745367de9e384034e1fa32c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf7a73f980176707745367de9e384034e1fa32c0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf7a73f980176707745367de9e384034e1fa32c0/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4fcb5d87d420408f9810af56b8b17b2d41876bc0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4fcb5d87d420408f9810af56b8b17b2d41876bc0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4fcb5d87d420408f9810af56b8b17b2d41876bc0"}], "stats": {"total": 67, "additions": 55, "deletions": 12}, "files": [{"sha": "6fb27dc049557c95d0493a17a613cb80cf13f6a6", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf7a73f980176707745367de9e384034e1fa32c0/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf7a73f980176707745367de9e384034e1fa32c0/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=bf7a73f980176707745367de9e384034e1fa32c0", "patch": "@@ -1,11 +1,18 @@\n+2013-05-22  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/57338\n+\t* intrinsic.c (do_check): Move some checks to ...\n+\t(do_ts29113_check): ... this new function.\n+\t(check_specific, gfc_intrinsic_sub_interface): Call it.\n+\n 2013-05-22  Janne Blomqvist  <jb@gcc.gnu.org>\n \n \t* intrinsic.texi (RANDOM_SEED): Improve example.\n \n 2013-05-21  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/57035\n-\t* intrinsic.c (do_check): Add contraint check for\n+\t* intrinsic.c (do_check): Add constraint check for\n \tNO_ARG_CHECK, assumed rank and assumed type.\n \t* gfortran.texi (NO_ARG_CHECK): Minor wording change,\n \tallow PRESENT intrinsic."}, {"sha": "3251ebb558df288d75577f2208d3b1a15e5451e0", "filename": "gcc/fortran/intrinsic.c", "status": "modified", "additions": 30, "deletions": 11, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf7a73f980176707745367de9e384034e1fa32c0/gcc%2Ffortran%2Fintrinsic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf7a73f980176707745367de9e384034e1fa32c0/gcc%2Ffortran%2Fintrinsic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fintrinsic.c?ref=bf7a73f980176707745367de9e384034e1fa32c0", "patch": "@@ -174,21 +174,14 @@ find_char_conv (gfc_typespec *from, gfc_typespec *to)\n }\n \n \n-/* Interface to the check functions.  We break apart an argument list\n-   and call the proper check function rather than forcing each\n-   function to manipulate the argument list.  */\n+/* Check TS29113, C407b for assumed type and C535b for assumed-rank,\n+   and a likewise check for NO_ARG_CHECK.  */\n \n static bool\n-do_check (gfc_intrinsic_sym *specific, gfc_actual_arglist *arg)\n+do_ts29113_check (gfc_intrinsic_sym *specific, gfc_actual_arglist *arg)\n {\n-  gfc_expr *a1, *a2, *a3, *a4, *a5;\n   gfc_actual_arglist *a;\n \n-  if (arg == NULL)\n-    return (*specific->check.f0) ();\n-\n-  /* Check TS29113, C407b for assumed type and C535b for assumed-rank,\n-     and a likewise check for NO_ARG_CHECK.  */\n   for (a = arg; a; a = a->next)\n     {\n       if (!a->expr)\n@@ -242,6 +235,22 @@ do_check (gfc_intrinsic_sym *specific, gfc_actual_arglist *arg)\n \t}\n     }\n \n+  return true;\n+}\n+\n+\n+/* Interface to the check functions.  We break apart an argument list\n+   and call the proper check function rather than forcing each\n+   function to manipulate the argument list.  */\n+\n+static bool\n+do_check (gfc_intrinsic_sym *specific, gfc_actual_arglist *arg)\n+{\n+  gfc_expr *a1, *a2, *a3, *a4, *a5;\n+\n+  if (arg == NULL)\n+    return (*specific->check.f0) ();\n+\n   a1 = arg->expr;\n   arg = arg->next;\n   if (arg == NULL)\n@@ -4038,11 +4047,18 @@ check_specific (gfc_intrinsic_sym *specific, gfc_expr *expr, int error_flag)\n       || specific->check.f1m == gfc_check_min_max_integer\n       || specific->check.f1m == gfc_check_min_max_real\n       || specific->check.f1m == gfc_check_min_max_double)\n-    return (*specific->check.f1m) (*ap);\n+    {\n+      if (!do_ts29113_check (specific, *ap))\n+\treturn false;\n+      return (*specific->check.f1m) (*ap);\n+    }\n \n   if (!sort_actual (specific->name, ap, specific->formal, &expr->where))\n     return false;\n \n+  if (!do_ts29113_check (specific, *ap))\n+    return false;\n+\n   if (specific->check.f3ml == gfc_check_minloc_maxloc)\n     /* This is special because we might have to reorder the argument list.  */\n     t = gfc_check_minloc_maxloc (*ap);\n@@ -4352,6 +4368,9 @@ gfc_intrinsic_sub_interface (gfc_code *c, int error_flag)\n   if (!sort_actual (name, &c->ext.actual, isym->formal, &c->loc))\n     goto fail;\n \n+  if (!do_ts29113_check (isym, c->ext.actual))\n+    goto fail;\n+\n   if (isym->check.f1 != NULL)\n     {\n       if (!do_check (isym, c->ext.actual))"}, {"sha": "dcf16a42258047101451487602d35a8d27f3ec28", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf7a73f980176707745367de9e384034e1fa32c0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf7a73f980176707745367de9e384034e1fa32c0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bf7a73f980176707745367de9e384034e1fa32c0", "patch": "@@ -1,3 +1,8 @@\n+2013-05-22  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/57338\n+\t* gfortran.dg/assumed_type_6.f90: New.\n+\n 2013-05-22  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/57211"}, {"sha": "78ff84976807c2efd13f6199b92748b57ebd8d0a", "filename": "gcc/testsuite/gfortran.dg/assumed_type_6.f90", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf7a73f980176707745367de9e384034e1fa32c0/gcc%2Ftestsuite%2Fgfortran.dg%2Fassumed_type_6.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf7a73f980176707745367de9e384034e1fa32c0/gcc%2Ftestsuite%2Fgfortran.dg%2Fassumed_type_6.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fassumed_type_6.f90?ref=bf7a73f980176707745367de9e384034e1fa32c0", "patch": "@@ -0,0 +1,12 @@\n+! { dg-do compile }\n+!\n+! PR fortran/\n+!\n+! Contributed by Vladim\u00edr Fuka\n+!\n+function avg(a)\n+  integer :: avg\n+  integer,intent(in) :: a(..)\n+  \n+  avg = sum(a)/size(a) ! { dg-error \"Assumed-rank argument at .1. is only permitted as actual argument to intrinsic inquiry functions\" }\n+end function"}]}