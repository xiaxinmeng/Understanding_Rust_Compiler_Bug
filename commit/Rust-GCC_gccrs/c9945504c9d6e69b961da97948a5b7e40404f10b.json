{"sha": "c9945504c9d6e69b961da97948a5b7e40404f10b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzk5NDU1MDRjOWQ2ZTY5Yjk2MWRhOTc5NDhhNWI3ZTQwNDA0ZjEwYg==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2010-04-21T14:41:03Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2010-04-21T14:41:03Z"}, "message": "lto.c (globalize_cross_file_statics): When function has address taken, it needs to be public.\n\n\t* lto.c (globalize_cross_file_statics): When function has address taken,\n\tit needs to be public.\n\t* varpool.c (decide_is_variable_needed): Variable is always needed\n\tduring ltrans.\n\nFrom-SVN: r158609", "tree": {"sha": "518cccaa543aa060a4a7880a9edcef6b9842add4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/518cccaa543aa060a4a7880a9edcef6b9842add4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c9945504c9d6e69b961da97948a5b7e40404f10b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9945504c9d6e69b961da97948a5b7e40404f10b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9945504c9d6e69b961da97948a5b7e40404f10b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9945504c9d6e69b961da97948a5b7e40404f10b/comments", "author": null, "committer": null, "parents": [{"sha": "e7cfce7152f1377ed2db53513f3b0259d8b88718", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7cfce7152f1377ed2db53513f3b0259d8b88718", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7cfce7152f1377ed2db53513f3b0259d8b88718"}], "stats": {"total": 19, "additions": 18, "deletions": 1}, "files": [{"sha": "13ac23956aaaf5348cc9db724aa17b5e73c46d9f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9945504c9d6e69b961da97948a5b7e40404f10b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9945504c9d6e69b961da97948a5b7e40404f10b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c9945504c9d6e69b961da97948a5b7e40404f10b", "patch": "@@ -1,3 +1,8 @@\n+2010-04-21  Jan Hubicka  <jh@suse.cz>\n+\n+\t* varpool.c (decide_is_variable_needed): Variable is always needed\n+\tduring ltrans.\n+\n 2010-04-21  Jan Hubicka  <jh@suse.cz>\n \n \t* opts.c (decode_options): Enable pure-const pass for whopr."}, {"sha": "a97314c928be134ac0bdb1be1413060a16cec766", "filename": "gcc/lto/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9945504c9d6e69b961da97948a5b7e40404f10b/gcc%2Flto%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9945504c9d6e69b961da97948a5b7e40404f10b/gcc%2Flto%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2FChangeLog?ref=c9945504c9d6e69b961da97948a5b7e40404f10b", "patch": "@@ -1,3 +1,8 @@\n+2010-04-21  Jan Hubicka  <jh@suse.cz>\n+\n+\t* lto.c (globalize_cross_file_statics): When function has address taken,\n+\tit needs to be public.\n+\n 2010-04-20  Jan Hubicka  <jh@suse.cz>\n \n \t* lto.c (lto_add_inline_clones): Do not track inlined_decls."}, {"sha": "ea8f03a131db12e754ab177389fde6c6f4a96892", "filename": "gcc/lto/lto.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9945504c9d6e69b961da97948a5b7e40404f10b/gcc%2Flto%2Flto.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9945504c9d6e69b961da97948a5b7e40404f10b/gcc%2Flto%2Flto.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto.c?ref=c9945504c9d6e69b961da97948a5b7e40404f10b", "patch": "@@ -760,7 +760,8 @@ globalize_cross_file_statics (tree *tp, int *walk_subtrees ATTRIBUTE_UNUSED,\n     }\n   else if (TREE_CODE (t) == FUNCTION_DECL && !TREE_PUBLIC (t))\n     {\n-      if (!cgraph_node_in_set_p (cgraph_node (t), context->set))\n+      if (!cgraph_node_in_set_p (cgraph_node (t), context->set)\n+\t  || cgraph_node (t)->address_taken)\n \t{\n \t  /* This file-scope static function is reachable from a set\n \t     which does not contain the function DECL.  Make it global"}, {"sha": "40decfc867b542c6eacdfc561f8b69baf581cbdf", "filename": "gcc/varpool.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9945504c9d6e69b961da97948a5b7e40404f10b/gcc%2Fvarpool.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9945504c9d6e69b961da97948a5b7e40404f10b/gcc%2Fvarpool.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarpool.c?ref=c9945504c9d6e69b961da97948a5b7e40404f10b", "patch": "@@ -230,6 +230,12 @@ varpool_reset_queue (void)\n bool\n decide_is_variable_needed (struct varpool_node *node, tree decl)\n {\n+  /* We do not track variable references at all and thus have no idea if the\n+     variable was referenced in some other partition or not.  \n+     FIXME: We really need address taken edges in callgraph and varpool to\n+     drive WPA and decide whether other partition might reference it or not.  */\n+  if (flag_ltrans)\n+    return true;\n   /* If the user told us it is used, then it must be so.  */\n   if ((node->externally_visible && !DECL_COMDAT (decl))\n       || node->force_output)"}]}