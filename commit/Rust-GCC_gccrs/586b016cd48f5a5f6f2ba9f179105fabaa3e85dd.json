{"sha": "586b016cd48f5a5f6f2ba9f179105fabaa3e85dd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTg2YjAxNmNkNDhmNWE1ZjZmMmJhOWYxNzkxMDVmYWJhYTNlODVkZA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2020-02-28T18:43:55Z"}, "committer": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2020-02-28T18:44:44Z"}, "message": "c++: Fix constrained conversion op.\n\nWe don't want to promote a conversion from viable == 0 to viable == -1.\nFound in ranges-v3.\n\ngcc/cp/ChangeLog\n2020-02-28  Jason Merrill  <jason@redhat.com>\n\n\t* call.c (build_user_type_conversion_1): Don't look at the second\n\tconversion of a non-viable candidate.", "tree": {"sha": "379a757243bef7feb91dd458350f7048ed4e3fa4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/379a757243bef7feb91dd458350f7048ed4e3fa4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/586b016cd48f5a5f6f2ba9f179105fabaa3e85dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/586b016cd48f5a5f6f2ba9f179105fabaa3e85dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/586b016cd48f5a5f6f2ba9f179105fabaa3e85dd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/586b016cd48f5a5f6f2ba9f179105fabaa3e85dd/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4735f92d48c373031be296fd0f7a2cf31fc955da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4735f92d48c373031be296fd0f7a2cf31fc955da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4735f92d48c373031be296fd0f7a2cf31fc955da"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "8a8de3237cd8c077dbc93189f65d99635bdb92a0", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/586b016cd48f5a5f6f2ba9f179105fabaa3e85dd/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/586b016cd48f5a5f6f2ba9f179105fabaa3e85dd/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=586b016cd48f5a5f6f2ba9f179105fabaa3e85dd", "patch": "@@ -1,3 +1,8 @@\n+2020-02-28  Jason Merrill  <jason@redhat.com>\n+\n+\t* call.c (build_user_type_conversion_1): Don't look at the second\n+\tconversion of a non-viable candidate.\n+\n 2020-02-28  Jakub Jelinek  <jakub@redhat.com>\n \n \tP1937R2 - Fixing inconsistencies between const{expr,eval} functions"}, {"sha": "85bbd043a1df3429396a21fd89ce52cf7fffc4ef", "filename": "gcc/cp/call.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/586b016cd48f5a5f6f2ba9f179105fabaa3e85dd/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/586b016cd48f5a5f6f2ba9f179105fabaa3e85dd/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=586b016cd48f5a5f6f2ba9f179105fabaa3e85dd", "patch": "@@ -4083,6 +4083,10 @@ build_user_type_conversion_1 (tree totype, tree expr, int flags,\n \n       for (cand = candidates; cand != old_candidates; cand = cand->next)\n \t{\n+\t  if (cand->viable == 0)\n+\t    /* Already rejected, don't change to -1.  */\n+\t    continue;\n+\n \t  tree rettype = TREE_TYPE (TREE_TYPE (cand->fn));\n \t  conversion *ics\n \t    = implicit_conversion (totype,"}, {"sha": "aa29acbcb1353c5289164d7f5f3ef83b01d9b8be", "filename": "gcc/testsuite/g++.dg/cpp2a/concepts-conv1.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/586b016cd48f5a5f6f2ba9f179105fabaa3e85dd/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-conv1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/586b016cd48f5a5f6f2ba9f179105fabaa3e85dd/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-conv1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-conv1.C?ref=586b016cd48f5a5f6f2ba9f179105fabaa3e85dd", "patch": "@@ -0,0 +1,15 @@\n+// { dg-do compile { target concepts } }\n+\n+template <class T> concept False = false;\n+\n+template <class T>\n+struct A\n+{\n+  explicit operator bool ();\n+  explicit operator bool () requires False<T>;\n+};\n+\n+int main()\n+{\n+  int i { A<int>() };\t\t// { dg-error \"\" }\n+}"}]}