{"sha": "b6f4312871d39547c2e286b6eadac4408ab494ae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjZmNDMxMjg3MWQzOTU0N2MyZTI4NmI2ZWFkYWM0NDA4YWI0OTRhZQ==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2017-07-06T15:49:37Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2017-07-06T15:49:37Z"}, "message": "Support C++-specific selftests\n\ngcc/ChangeLog:\n\t* Makefile.in (SELFTEST_FLAGS): Drop \"-x c\", moving it to...\n\t(C_SELFTEST_FLAGS): New.\n\t(CPP_SELFTEST_FLAGS): New.\n\t(SELFTEST_DEPS): New, from deps of s-selftest.\n\t(C_SELFTEST_DEPS): New, from deps of s-selftest.\n\t(CPP_SELFTEST_DEPS): New.\n\t(selftest): Add dependency on s-selftest-c++.\n\t(s-selftest): Rename to...\n\t(s-selftest-c): ...this, moving deps to SELFTEST_DEPS\n\tand C_SELFTEST_DEPS, and using C_SELFTEST_FLAGS rather\n\tthan SELFTEST_FLAGS.\n\t(selftest-gdb): Rename to...\n\t(selftest-c-gdb): ...this, using C_SELFTEST_DEPS and\n\tC_SELFTEST_FLAGS.\n\t(selftest-gdb): Reintroduce as an alias for selftest-c-gdb.\n\t(selftest-valgrind): Rename to...\n\t(selftest-c-valgrind): ...this, using C_SELFTEST_DEPS and\n\tC_SELFTEST_FLAGS.\n\t(selftest-valgrind): Reintroduce as an alias for\n\tselftest-c-valgrind.\n\t(s-selftest-c++): New.\n\t(selftest-c++-gdb): New.\n\t(selftest-c++-valgrind): New.\n\ngcc/c-family/ChangeLog:\n\t* c-common.c (selftest::c_family_tests): New.\n\t* c-common.h (selftest::run_c_tests): Move decl to c/c-lang.h.\n\t(selftest::c_family_tests): New decl.\n\ngcc/c/ChangeLog:\n\t* c-lang.c (selftest::run_c_tests): Move body to c_family_tests,\n\tand call that instead.\n\t* c-tree.h (selftest::run_c_tests): New decl.\n\ngcc/cp/ChangeLog:\n\t* cp-lang.c (LANG_HOOKS_RUN_LANG_SELFTESTS): Define as\n\tselftest::run_cp_tests.\n\t(selftest::run_cp_tests): New function.\n\t* cp-tree.h (selftest::run_cp_tests): New decl.\n\nFrom-SVN: r250030", "tree": {"sha": "63483bd3bdec776c24bf596c39f2acdc56860a8b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/63483bd3bdec776c24bf596c39f2acdc56860a8b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b6f4312871d39547c2e286b6eadac4408ab494ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6f4312871d39547c2e286b6eadac4408ab494ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6f4312871d39547c2e286b6eadac4408ab494ae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6f4312871d39547c2e286b6eadac4408ab494ae/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a40c6fa86bb08d9db1fad97bc71b6a0158638e05", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a40c6fa86bb08d9db1fad97bc71b6a0158638e05", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a40c6fa86bb08d9db1fad97bc71b6a0158638e05"}], "stats": {"total": 171, "additions": 154, "deletions": 17}, "files": [{"sha": "20fcd8213bb88e84718022052e7da4c014ca7a70", "filename": "gcc/ChangeLog", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6f4312871d39547c2e286b6eadac4408ab494ae/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6f4312871d39547c2e286b6eadac4408ab494ae/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b6f4312871d39547c2e286b6eadac4408ab494ae", "patch": "@@ -1,3 +1,29 @@\n+2017-07-06  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* Makefile.in (SELFTEST_FLAGS): Drop \"-x c\", moving it to...\n+\t(C_SELFTEST_FLAGS): New.\n+\t(CPP_SELFTEST_FLAGS): New.\n+\t(SELFTEST_DEPS): New, from deps of s-selftest.\n+\t(C_SELFTEST_DEPS): New, from deps of s-selftest.\n+\t(CPP_SELFTEST_DEPS): New.\n+\t(selftest): Add dependency on s-selftest-c++.\n+\t(s-selftest): Rename to...\n+\t(s-selftest-c): ...this, moving deps to SELFTEST_DEPS\n+\tand C_SELFTEST_DEPS, and using C_SELFTEST_FLAGS rather\n+\tthan SELFTEST_FLAGS.\n+\t(selftest-gdb): Rename to...\n+\t(selftest-c-gdb): ...this, using C_SELFTEST_DEPS and\n+\tC_SELFTEST_FLAGS.\n+\t(selftest-gdb): Reintroduce as an alias for selftest-c-gdb.\n+\t(selftest-valgrind): Rename to...\n+\t(selftest-c-valgrind): ...this, using C_SELFTEST_DEPS and\n+\tC_SELFTEST_FLAGS.\n+\t(selftest-valgrind): Reintroduce as an alias for\n+\tselftest-c-valgrind.\n+\t(s-selftest-c++): New.\n+\t(selftest-c++-gdb): New.\n+\t(selftest-c++-valgrind): New.\n+\n 2017-07-06  Olivier Hainque  <hainque@adacore.com>\n \n \t* gcc.c (process_command): When deciding if undefined variables"}, {"sha": "2189bc00174a19fcac63df62ab5b38d2dffab51b", "filename": "gcc/Makefile.in", "status": "modified", "additions": 47, "deletions": 15, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6f4312871d39547c2e286b6eadac4408ab494ae/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6f4312871d39547c2e286b6eadac4408ab494ae/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=b6f4312871d39547c2e286b6eadac4408ab494ae", "patch": "@@ -1904,30 +1904,62 @@ rest.cross: specs\n # \"nul.s\" on Windows. Because on Windows \"nul\" is a reserved file name.\n # Specify the path to gcc/testsuite/selftests within the srcdir\n # as an argument to -fself-test.\n-SELFTEST_FLAGS = -nostdinc -x c /dev/null -S -o /dev/null \\\n+SELFTEST_FLAGS = -nostdinc /dev/null -S -o /dev/null \\\n \t-fself-test=$(srcdir)/testsuite/selftests\n \n-# Run the selftests during the build once we have a driver and a cc1,\n+C_SELFTEST_FLAGS = -xc $(SELFTEST_FLAGS)\n+CPP_SELFTEST_FLAGS = -xc++ $(SELFTEST_FLAGS)\n+\n+SELFTEST_DEPS = $(GCC_PASSES) stmp-int-hdrs $(srcdir)/testsuite/selftests\n+\n+C_SELFTEST_DEPS = cc1$(exeext) $(SELFTEST_DEPS)\n+CPP_SELFTEST_DEPS = cc1plus$(exeext) $(SELFTEST_DEPS)\n+\n+# Run the selftests during the build once we have a driver and the frontend,\n # so that self-test failures are caught as early as possible.\n-# Use \"s-selftest\" to ensure that we only run the selftests if the\n-# driver, cc1, or selftest data change.\n+# Use \"s-selftest-FE\" to ensure that we only run the selftests if the\n+# driver, frontend, or selftest data change.\n .PHONY: selftest\n-selftest: s-selftest\n-s-selftest: $(GCC_PASSES) cc1$(exeext) stmp-int-hdrs \\\n-  $(srcdir)/testsuite/selftests\n-\t$(GCC_FOR_TARGET) $(SELFTEST_FLAGS)\n+selftest: s-selftest-c s-selftest-c++\n+\n+# C selftests\n+s-selftest-c: $(C_SELFTEST_DEPS)\n+\t$(GCC_FOR_TARGET) $(C_SELFTEST_FLAGS)\n \t$(STAMP) $@\n \n-# Convenience method for running selftests under gdb:\n-.PHONY: selftest-gdb\n-selftest-gdb: $(GCC_PASSES) cc1$(exeext) stmp-int-hdrs\n-\t$(GCC_FOR_TARGET) $(SELFTEST_FLAGS) \\\n+# Convenience methods for running C selftests under gdb:\n+.PHONY: selftest-c-gdb\n+selftest-c-gdb: $(C_SELFTEST_DEPS)\n+\t$(GCC_FOR_TARGET) $(C_SELFTEST_FLAGS) \\\n \t  -wrapper gdb,--args\n \n-# Convenience method for running selftests under valgrind:\n+.PHONY: selftest-gdb\n+selftest-gdb: selftest-c-gdb\n+\n+# Convenience methods for running C selftests under valgrind:\n+.PHONY: selftest-c-valgrind\n+selftest-c-valgrind: $(C_SELFTEST_DEPS)\n+\t$(GCC_FOR_TARGET) $(C_SELFTEST_FLAGS) \\\n+\t  -wrapper valgrind,--leak-check=full\n+\n .PHONY: selftest-valgrind\n-selftest-valgrind: $(GCC_PASSES) cc1$(exeext) stmp-int-hdrs\n-\t$(GCC_FOR_TARGET) $(SELFTEST_FLAGS) \\\n+selftest-valgrind: selftest-c-valgrind\n+\n+# C++ selftests\n+s-selftest-c++: $(CPP_SELFTEST_DEPS)\n+\t$(GCC_FOR_TARGET) $(CPP_SELFTEST_FLAGS)\n+\t$(STAMP) $@\n+\n+# Convenience method for running C++ selftests under gdb:\n+.PHONY: selftest-c++-gdb\n+selftest-c++-gdb: $(CPP_SELFTEST_DEPS)\n+\t$(GCC_FOR_TARGET) $(CPP_SELFTEST_FLAGS) \\\n+\t  -wrapper gdb,--args\n+\n+# Convenience method for running C++ selftests under valgrind:\n+.PHONY: selftest-c++-valgrind\n+selftest-c++-valgrind: $(CPP_SELFTEST_DEPS)\n+\t$(GCC_FOR_TARGET) $(CPP_SELFTEST_FLAGS) \\\n \t  -wrapper valgrind,--leak-check=full\n \n # Recompile all the language-independent object files."}, {"sha": "7ddf192e496dcce3ca00c41307d5f06eb502be96", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6f4312871d39547c2e286b6eadac4408ab494ae/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6f4312871d39547c2e286b6eadac4408ab494ae/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=b6f4312871d39547c2e286b6eadac4408ab494ae", "patch": "@@ -1,3 +1,9 @@\n+2017-07-06  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* c-common.c (selftest::c_family_tests): New.\n+\t* c-common.h (selftest::run_c_tests): Move decl to c/c-lang.h.\n+\t(selftest::c_family_tests): New decl.\n+\n 2017-07-04  Marek Polacek  <polacek@redhat.com>\n \n \tPR c/81231"}, {"sha": "b4217f3a2cca4e99a8bbbaf30dcfa364eb78cd34", "filename": "gcc/c-family/c-common.c", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6f4312871d39547c2e286b6eadac4408ab494ae/gcc%2Fc-family%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6f4312871d39547c2e286b6eadac4408ab494ae/gcc%2Fc-family%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.c?ref=b6f4312871d39547c2e286b6eadac4408ab494ae", "patch": "@@ -8003,4 +8003,20 @@ c_flt_eval_method (bool maybe_c11_only_p)\n     return c_ts18661_flt_eval_method ();\n }\n \n+#if CHECKING_P\n+\n+namespace selftest {\n+\n+/* Run all of the tests within c-family.  */\n+\n+void\n+c_family_tests (void)\n+{\n+  c_format_c_tests ();\n+}\n+\n+} // namespace selftest\n+\n+#endif /* #if CHECKING_P */\n+\n #include \"gt-c-family-c-common.h\""}, {"sha": "7e7efb2916eafd43314fa98b95996348596e24ff", "filename": "gcc/c-family/c-common.h", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6f4312871d39547c2e286b6eadac4408ab494ae/gcc%2Fc-family%2Fc-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6f4312871d39547c2e286b6eadac4408ab494ae/gcc%2Fc-family%2Fc-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.h?ref=b6f4312871d39547c2e286b6eadac4408ab494ae", "patch": "@@ -1558,8 +1558,12 @@ extern void add_no_sanitize_value (tree node, unsigned int flags);\n \n #if CHECKING_P\n namespace selftest {\n+  /* Declarations for specific families of tests within c-family,\n+     by source file, in alphabetical order.  */\n   extern void c_format_c_tests (void);\n-  extern void run_c_tests (void);\n+\n+  /* The entrypoint for running all of the above tests.  */\n+  extern void c_family_tests (void);\n } // namespace selftest\n #endif /* #if CHECKING_P */\n "}, {"sha": "aba08689638ebfe1dc1d7fd5c0a4949f12ee00ce", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6f4312871d39547c2e286b6eadac4408ab494ae/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6f4312871d39547c2e286b6eadac4408ab494ae/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=b6f4312871d39547c2e286b6eadac4408ab494ae", "patch": "@@ -1,3 +1,9 @@\n+2017-07-06  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* c-lang.c (selftest::run_c_tests): Move body to c_family_tests,\n+\tand call that instead.\n+\t* c-tree.h (selftest::run_c_tests): New decl.\n+\n 2017-06-26  Marek Polacek  <polacek@redhat.com>\n \n \tPR c/80116"}, {"sha": "e05741dadbabd4c2dc12cacc416895186a219646", "filename": "gcc/c/c-lang.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6f4312871d39547c2e286b6eadac4408ab494ae/gcc%2Fc%2Fc-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6f4312871d39547c2e286b6eadac4408ab494ae/gcc%2Fc%2Fc-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-lang.c?ref=b6f4312871d39547c2e286b6eadac4408ab494ae", "patch": "@@ -58,7 +58,10 @@ namespace selftest {\n void\n run_c_tests (void)\n {\n-  c_format_c_tests ();\n+  /* Run selftests shared within the C family.  */\n+  c_family_tests ();\n+\n+  /* Additional C-specific tests.  */\n }\n \n } // namespace selftest"}, {"sha": "a8197eb768dafeca115c9d862095942a6b71e4e6", "filename": "gcc/c/c-tree.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6f4312871d39547c2e286b6eadac4408ab494ae/gcc%2Fc%2Fc-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6f4312871d39547c2e286b6eadac4408ab494ae/gcc%2Fc%2Fc-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-tree.h?ref=b6f4312871d39547c2e286b6eadac4408ab494ae", "patch": "@@ -764,4 +764,11 @@ extern tree decl_constant_value_for_optimization (tree);\n \n extern vec<tree> incomplete_record_decls;\n \n+#if CHECKING_P\n+namespace selftest {\n+  extern void run_c_tests (void);\n+} // namespace selftest\n+#endif /* #if CHECKING_P */\n+\n+\n #endif /* ! GCC_C_TREE_H */"}, {"sha": "2617fff1dc9b5c7b4640ff6177fea112b84ea61c", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6f4312871d39547c2e286b6eadac4408ab494ae/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6f4312871d39547c2e286b6eadac4408ab494ae/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=b6f4312871d39547c2e286b6eadac4408ab494ae", "patch": "@@ -1,3 +1,10 @@\n+2017-07-06  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* cp-lang.c (LANG_HOOKS_RUN_LANG_SELFTESTS): Define as\n+\tselftest::run_cp_tests.\n+\t(selftest::run_cp_tests): New function.\n+\t* cp-tree.h (selftest::run_cp_tests): New decl.\n+\n 2017-07-04  Jakub Jelinek  <jakub@redhat.com>\n \n \t* parser.c (cp_parser_decomposition_declaration): Replace"}, {"sha": "805319a4185345a33c1f26d8a3b4bb16ef058d40", "filename": "gcc/cp/cp-lang.c", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6f4312871d39547c2e286b6eadac4408ab494ae/gcc%2Fcp%2Fcp-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6f4312871d39547c2e286b6eadac4408ab494ae/gcc%2Fcp%2Fcp-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-lang.c?ref=b6f4312871d39547c2e286b6eadac4408ab494ae", "patch": "@@ -79,6 +79,11 @@ static tree cxx_enum_underlying_base_type (const_tree);\n #undef LANG_HOOKS_ENUM_UNDERLYING_BASE_TYPE\n #define LANG_HOOKS_ENUM_UNDERLYING_BASE_TYPE cxx_enum_underlying_base_type\n \n+#if CHECKING_P\n+#undef LANG_HOOKS_RUN_LANG_SELFTESTS\n+#define LANG_HOOKS_RUN_LANG_SELFTESTS selftest::run_cp_tests\n+#endif /* #if CHECKING_P */\n+\n /* Each front end provides its own lang hook initializer.  */\n struct lang_hooks lang_hooks = LANG_HOOKS_INITIALIZER;\n \n@@ -229,6 +234,25 @@ tree cxx_enum_underlying_base_type (const_tree type)\n   return underlying_type;\n }\n \n+#if CHECKING_P\n+\n+namespace selftest {\n+\n+/* Implementation of LANG_HOOKS_RUN_LANG_SELFTESTS for the C++ frontend.  */\n+\n+void\n+run_cp_tests (void)\n+{\n+  /* Run selftests shared within the C family.  */\n+  c_family_tests ();\n+\n+  /* Additional C++-specific tests.  */\n+}\n+\n+} // namespace selftest\n+\n+#endif /* #if CHECKING_P */\n+\n \n #include \"gt-cp-cp-lang.h\"\n #include \"gtype-cp.h\""}, {"sha": "50f4235e4b825fb08dfc38c97ad0b9eb6511e7fc", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6f4312871d39547c2e286b6eadac4408ab494ae/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6f4312871d39547c2e286b6eadac4408ab494ae/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=b6f4312871d39547c2e286b6eadac4408ab494ae", "patch": "@@ -7364,6 +7364,12 @@ extern tree cp_ubsan_maybe_instrument_downcast\t(location_t, tree, tree, tree);\n extern tree cp_ubsan_maybe_instrument_cast_to_vbase (location_t, tree, tree);\n extern void cp_ubsan_maybe_initialize_vtbl_ptrs (tree);\n \n+#if CHECKING_P\n+namespace selftest {\n+  extern void run_cp_tests (void);\n+} // namespace selftest\n+#endif /* #if CHECKING_P */\n+\n /* Inline bodies.  */\n \n inline tree"}]}