{"sha": "af6478c843c106281461ed5fd93377e61716181d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWY2NDc4Yzg0M2MxMDYyODE0NjFlZDVmZDkzMzc3ZTYxNzE2MTgxZA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-08-04T09:52:02Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-08-04T09:52:02Z"}, "message": "[multiple changes]\n\n2014-08-04  Arnaud Charlet  <charlet@adacore.com>\n\n\t* exp_util.adb (Check_Float_Op_Overflow): No-op in codepeer\n\tmode for now, to revert to previous behavior.\n\t* checks.adb: Revert previous change, no longer needed.\n\n2014-08-04  Robert Dewar  <dewar@adacore.com>\n\n\t* gnat1drv.adb (Adjust_Global_Switches): Don't set\n\tCheck_Float_Overflow if Machine_Oveflows_On_Target is True.\n\t* sem_prag.adb (Analyze_Pragma, case Check_Float_Overflow): Don't\n\tset Check_Float_Overflow if Machine_Oveflows_On_Target is True.\n\t* switch-c.adb (Scan_Front_End_Switches): Don't set\n\tCheck_Float_Overflow if Machine_Oveflows_On_Target is True.\n\n2014-08-04  Vincent Celier  <celier@adacore.com>\n\n\t* prj-attr.adb: Add new default indications for\n\tattributes Object_Dir, Exec_Dir, Source_Dirs and Target.\n\t(Attribute_Default_Of): New function (Initialize): Set the\n\tdefault for those attributes that have one specified.\n\t* prj-attr.ads (Attribute_Data): New component Default.\n\t* prj-proc.adb (Expression): Take into account the new defaults\n\tfor attributes Object_Dir, Exec_Dir and Source_Dirs.\n\t* prj-strt.adb (Attribute_Reference): Set the default for\n\tthe attribute.\n\t* prj-tree.ads, prj-tree.adb (Default_Of): New function.\n\t(Set_Default_Of): New procedure.\n\t* prj.adb (The_Dot_String): New global Name_Id variable,\n\tinitialized in procedure Initialize.\n\t(Dot_String): New function\n\t(Initialize): Initialize The_Dot_String.\n\t(Reset): Create the string list Shared.Dot_String_List.\n\t* prj.ads (Attribute_Default_Value): New enumeration type.\n\t(Project_Qualifier): Change enumeration value Dry to Abstract_Project.\n\t(Dot_String): New function.\n\t(Shared_Project_Tree_Data): New string list component Dot_String_List.\n\t* projects.texi: Document new defaults for attribute Object_Dir,\n\tExec_Dir and Source_Dirs.\n\nFrom-SVN: r213548", "tree": {"sha": "63e29bd63d423dfadd88c517110f7a00b8a02086", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/63e29bd63d423dfadd88c517110f7a00b8a02086"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/af6478c843c106281461ed5fd93377e61716181d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af6478c843c106281461ed5fd93377e61716181d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af6478c843c106281461ed5fd93377e61716181d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af6478c843c106281461ed5fd93377e61716181d/comments", "author": null, "committer": null, "parents": [{"sha": "e943fe8a6ae5d1b5f1f82825145cbd4e7c764405", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e943fe8a6ae5d1b5f1f82825145cbd4e7c764405", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e943fe8a6ae5d1b5f1f82825145cbd4e7c764405"}], "stats": {"total": 421, "additions": 347, "deletions": 74}, "files": [{"sha": "af2af30e9823afa541c8bd7640dd40df73baae40", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af6478c843c106281461ed5fd93377e61716181d/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af6478c843c106281461ed5fd93377e61716181d/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=af6478c843c106281461ed5fd93377e61716181d", "patch": "@@ -1,3 +1,43 @@\n+2014-08-04  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* exp_util.adb (Check_Float_Op_Overflow): No-op in codepeer\n+\tmode for now, to revert to previous behavior.\n+\t* checks.adb: Revert previous change, no longer needed.\n+\n+2014-08-04  Robert Dewar  <dewar@adacore.com>\n+\n+\t* gnat1drv.adb (Adjust_Global_Switches): Don't set\n+\tCheck_Float_Overflow if Machine_Oveflows_On_Target is True.\n+\t* sem_prag.adb (Analyze_Pragma, case Check_Float_Overflow): Don't\n+\tset Check_Float_Overflow if Machine_Oveflows_On_Target is True.\n+\t* switch-c.adb (Scan_Front_End_Switches): Don't set\n+\tCheck_Float_Overflow if Machine_Oveflows_On_Target is True.\n+\n+2014-08-04  Vincent Celier  <celier@adacore.com>\n+\n+\t* prj-attr.adb: Add new default indications for\n+\tattributes Object_Dir, Exec_Dir, Source_Dirs and Target.\n+\t(Attribute_Default_Of): New function (Initialize): Set the\n+\tdefault for those attributes that have one specified.\n+\t* prj-attr.ads (Attribute_Data): New component Default.\n+\t* prj-proc.adb (Expression): Take into account the new defaults\n+\tfor attributes Object_Dir, Exec_Dir and Source_Dirs.\n+\t* prj-strt.adb (Attribute_Reference): Set the default for\n+\tthe attribute.\n+\t* prj-tree.ads, prj-tree.adb (Default_Of): New function.\n+\t(Set_Default_Of): New procedure.\n+\t* prj.adb (The_Dot_String): New global Name_Id variable,\n+\tinitialized in procedure Initialize.\n+\t(Dot_String): New function\n+\t(Initialize): Initialize The_Dot_String.\n+\t(Reset): Create the string list Shared.Dot_String_List.\n+\t* prj.ads (Attribute_Default_Value): New enumeration type.\n+\t(Project_Qualifier): Change enumeration value Dry to Abstract_Project.\n+\t(Dot_String): New function.\n+\t(Shared_Project_Tree_Data): New string list component Dot_String_List.\n+\t* projects.texi: Document new defaults for attribute Object_Dir,\n+\tExec_Dir and Source_Dirs.\n+\n 2014-08-04  Robert Dewar  <dewar@adacore.com>\n \n \t* sem_ch12.adb: Minor reformatting."}, {"sha": "0b934eb2a2bf26291ba430171d8bf456b07a5a3e", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 1, "deletions": 12, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af6478c843c106281461ed5fd93377e61716181d/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af6478c843c106281461ed5fd93377e61716181d/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=af6478c843c106281461ed5fd93377e61716181d", "patch": "@@ -9214,7 +9214,6 @@ package body Checks is\n       Wnode       : Node_Id  := Warn_Node;\n       Ret_Result  : Check_Result := (Empty, Empty);\n       Num_Checks  : Integer := 0;\n-      Reason      : RT_Exception_Code := CE_Range_Check_Failed;\n \n       procedure Add_Check (N : Node_Id);\n       --  Adds the action given to Ret_Result if N is non-Empty\n@@ -9836,16 +9835,6 @@ package body Checks is\n          else\n             if not In_Subrange_Of (S_Typ, T_Typ) then\n                Cond := Discrete_Expr_Cond (Ck_Node, T_Typ);\n-\n-            --  Special case CodePeer_Mode and apparently redundant checks on\n-            --  floating point types: these are used as overflow checks, see\n-            --  Exp_Util.Check_Float_Op_Overflow.\n-\n-            elsif CodePeer_Mode and then Check_Float_Overflow\n-              and then Is_Floating_Point_Type (S_Typ)\n-            then\n-               Cond := Discrete_Expr_Cond (Ck_Node, T_Typ);\n-               Reason := CE_Overflow_Check_Failed;\n             end if;\n          end if;\n       end if;\n@@ -10040,7 +10029,7 @@ package body Checks is\n          Add_Check\n            (Make_Raise_Constraint_Error (Loc,\n              Condition => Cond,\n-             Reason    => Reason));\n+             Reason    => CE_Range_Check_Failed));\n       end if;\n \n       return Ret_Result;"}, {"sha": "5532d58bf2d078ac084f4548a761873c9543224e", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 4, "deletions": 22, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af6478c843c106281461ed5fd93377e61716181d/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af6478c843c106281461ed5fd93377e61716181d/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=af6478c843c106281461ed5fd93377e61716181d", "patch": "@@ -1643,30 +1643,12 @@ package body Exp_Util is\n \n       if not Check_Float_Overflow\n         or else not Is_Floating_Point_Type (Etype (N))\n-      then\n-         return;\n-      end if;\n \n-      --  Special expansion for CodePeer_Mode: we reuse the Apply_Range_Check\n-      --  machinery instead of expanding a 'Valid attribute, since CodePeer\n-      --  does not know how to handle expansion of 'Valid on floating point.\n-      --  ??? Consider using the same expansion in normal mode. This should\n-      --  work assuming division checks are also enabled (to prevent generation\n-      --  of NaNs), except for e.g. unchecked conversions which might also\n-      --  generate NaNs.\n-\n-      if CodePeer_Mode then\n-         declare\n-            Typ : constant Entity_Id := Etype (N);\n-         begin\n-            --  Prevent recursion\n+        --  In CodePeer_Mode, rely on the overflow check flag being set instead\n \n-            Set_Analyzed (N);\n-\n-            Apply_Range_Check (N, Typ);\n-            Analyze_And_Resolve (N, Typ);\n-            return;\n-         end;\n+        or else CodePeer_Mode\n+      then\n+         return;\n       end if;\n \n       --  Otherwise we replace the expression by"}, {"sha": "50f4befcc10bc76dd1cb301c9ce6587eb03462e3", "filename": "gcc/ada/gnat1drv.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af6478c843c106281461ed5fd93377e61716181d/gcc%2Fada%2Fgnat1drv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af6478c843c106281461ed5fd93377e61716181d/gcc%2Fada%2Fgnat1drv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat1drv.adb?ref=af6478c843c106281461ed5fd93377e61716181d", "patch": "@@ -371,9 +371,11 @@ procedure Gnat1drv is\n \n          --  Detect overflow on unconstrained floating-point types, such as\n          --  the predefined types Float, Long_Float and Long_Long_Float from\n-         --  package Standard.\n+         --  package Standard. Not necessary if float overflows are checked\n+         --  (Machine_Overflow true), since appropriate Do_Overflow_Check flags\n+         --  will be set in any case.\n \n-         Check_Float_Overflow := True;\n+         Check_Float_Overflow := not Machine_Overflows_On_Target;\n \n          --  Set STRICT mode for overflow checks if not set explicitly. This\n          --  prevents suppressing of overflow checks by default, in code down"}, {"sha": "f9f41b1628368334e6b7c08b845e04ce0a2565bd", "filename": "gcc/ada/prj-attr-pm.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af6478c843c106281461ed5fd93377e61716181d/gcc%2Fada%2Fprj-attr-pm.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af6478c843c106281461ed5fd93377e61716181d/gcc%2Fada%2Fprj-attr-pm.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-attr-pm.adb?ref=af6478c843c106281461ed5fd93377e61716181d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2004-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -47,6 +47,7 @@ package body Prj.Attr.PM is\n             Attr_Kind      => Unknown,\n             Read_Only      => False,\n             Others_Allowed => False,\n+            Default        => Empty_Value,\n             Next           =>\n               Package_Attributes.Table (To_Package.Value).First_Attribute));\n "}, {"sha": "9e003e4761cb03a3e6eb13f66afb875bb665a89e", "filename": "gcc/ada/prj-attr.adb", "status": "modified", "additions": 65, "deletions": 8, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af6478c843c106281461ed5fd93377e61716181d/gcc%2Fada%2Fprj-attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af6478c843c106281461ed5fd93377e61716181d/gcc%2Fada%2Fprj-attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-attr.adb?ref=af6478c843c106281461ed5fd93377e61716181d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2001-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -34,7 +34,7 @@ package body Prj.Attr is\n \n    --  Data for predefined attributes and packages\n \n-   --  Names are in lower case and end with '#'\n+   --  Names are in lower case and end with '#' or 'D'.\n \n    --  Package names are preceded by 'P'\n \n@@ -59,6 +59,11 @@ package body Prj.Attr is\n    --     'O' to indicate that others is allowed as an index for an associative\n    --     array\n \n+   --  If the character after the name in lower case letter is a 'D'\n+   --  (for default), then 'D' must be followed by an enumeration value of type\n+   --  Attribute_Default_Value, followed by a '#'.\n+   --  Example:\n+   --    \"SVobject_dirDdot_value#\"\n    --  End is indicated by two consecutive '#'\n \n    Initialization_Data : constant String :=\n@@ -76,9 +81,9 @@ package body Prj.Attr is\n \n    --  Directories\n \n-   \"SVobject_dir#\" &\n-   \"SVexec_dir#\" &\n-   \"LVsource_dirs#\" &\n+   \"SVobject_dirDdot_value#\" &\n+   \"SVexec_dirDobject_dir_value#\" &\n+   \"LVsource_dirsDdot_value#\" &\n    \"Lainherit_source_path#\" &\n    \"LVexcluded_source_dirs#\" &\n    \"LVignore_source_sub_dirs#\" &\n@@ -129,7 +134,7 @@ package body Prj.Attr is\n    \"Satoolchain_description#\" &\n    \"Saobject_generated#\" &\n    \"Saobjects_linked#\" &\n-   \"SVtarget#\" &\n+   \"SVtargetDtarget_value#\" &\n \n    --  Configuration - Libraries\n \n@@ -416,6 +421,21 @@ package body Prj.Attr is\n       Package_Names (Last_Package_Name) := new String'(Name);\n    end Add_Package_Name;\n \n+   --------------------------\n+   -- Attribute_Default_Of --\n+   --------------------------\n+\n+   function Attribute_Default_Of\n+     (Attribute : Attribute_Node_Id) return Attribute_Default_Value\n+   is\n+   begin\n+      if Attribute = Empty_Attribute then\n+         return Empty_Value;\n+      else\n+         return Attrs.Table (Attribute.Value).Default;\n+      end if;\n+   end Attribute_Default_Of;\n+\n    -----------------------\n    -- Attribute_Kind_Of --\n    -----------------------\n@@ -482,6 +502,7 @@ package body Prj.Attr is\n       First_Attribute   : Attr_Node_Id      := Attr.First_Attribute;\n       Read_Only         : Boolean;\n       Others_Allowed    : Boolean;\n+      Default           : Attribute_Default_Value;\n \n       function Attribute_Location return String;\n       --  Returns a string depending if we are in the project level attributes\n@@ -611,9 +632,11 @@ package body Prj.Attr is\n \n             Read_Only := False;\n             Others_Allowed := False;\n+            Default := Empty_Value;\n \n             if Initialization_Data (Start) = 'R' then\n                Read_Only := True;\n+               Default := Read_Only_Value;\n                Start := Start + 1;\n \n             elsif Initialization_Data (Start) = 'O' then\n@@ -623,12 +646,42 @@ package body Prj.Attr is\n \n             Finish := Start;\n \n-            while Initialization_Data (Finish) /= '#' loop\n+            while Initialization_Data (Finish) /= '#'\n+              and then\n+                Initialization_Data (Finish) /= 'D'\n+            loop\n                Finish := Finish + 1;\n             end loop;\n \n             Attribute_Name :=\n               Name_Id_Of (Initialization_Data (Start .. Finish - 1));\n+\n+            if Initialization_Data (Finish) = 'D' then\n+               Start := Finish + 1;\n+               Finish := Start;\n+\n+               while Initialization_Data (Finish) /= '#' loop\n+                  Finish := Finish + 1;\n+               end loop;\n+\n+               declare\n+                  Default_Name : constant String :=\n+                    Initialization_Data (Start .. Finish - 1);\n+                  pragma Unsuppress (All_Checks);\n+\n+               begin\n+                  Default := Attribute_Default_Value'Value (Default_Name);\n+\n+               exception\n+                  when Constraint_Error =>\n+                     Osint.Fail\n+                       (\"illegal default value \"\"\" &\n+                        Default_Name &\n+                        \"\"\" for attribute \" &\n+                        Get_Name_String (Attribute_Name));\n+               end;\n+            end if;\n+\n             Attrs.Increment_Last;\n \n             if Current_Attribute = Empty_Attr then\n@@ -662,6 +715,7 @@ package body Prj.Attr is\n                Attr_Kind      => Attr_Kind,\n                Read_Only      => Read_Only,\n                Others_Allowed => Others_Allowed,\n+               Default        => Default,\n                Next           => Empty_Attr);\n             Start := Finish + 1;\n          end if;\n@@ -770,7 +824,8 @@ package body Prj.Attr is\n       Attr_Kind          : Defined_Attribute_Kind;\n       Var_Kind           : Defined_Variable_Kind;\n       Index_Is_File_Name : Boolean := False;\n-      Opt_Index          : Boolean := False)\n+      Opt_Index          : Boolean := False;\n+      Default            : Attribute_Default_Value := Empty_Value)\n    is\n       Attr_Name       : Name_Id;\n       First_Attr      : Attr_Node_Id := Empty_Attr;\n@@ -840,6 +895,7 @@ package body Prj.Attr is\n          Attr_Kind      => Real_Attr_Kind,\n          Read_Only      => False,\n          Others_Allowed => False,\n+         Default        => Default,\n          Next           => First_Attr);\n \n       Package_Attributes.Table (In_Package.Value).First_Attribute :=\n@@ -952,6 +1008,7 @@ package body Prj.Attr is\n             Attr_Kind      => Attr_Kind,\n             Read_Only      => False,\n             Others_Allowed => False,\n+            Default        => Attributes (Index).Default,\n             Next           => First_Attr);\n          First_Attr := Attrs.Last;\n       end loop;"}, {"sha": "5b944f9b3bb19346365a65af99030d66cd3e194c", "filename": "gcc/ada/prj-attr.ads", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af6478c843c106281461ed5fd93377e61716181d/gcc%2Fada%2Fprj-attr.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af6478c843c106281461ed5fd93377e61716181d/gcc%2Fada%2Fprj-attr.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-attr.ads?ref=af6478c843c106281461ed5fd93377e61716181d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2001-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -107,6 +107,10 @@ package Prj.Attr is\n       Var_Kind : Defined_Variable_Kind;\n       --  The attribute value kind: single or list\n \n+      Default : Attribute_Default_Value := Empty_Value;\n+      --  The value of the attribute when referenced if the attribute has not\n+      --  been (yet) declared.\n+\n    end record;\n    --  Name and characteristics of an attribute in a package registered\n    --  explicitly with Register_New_Package (see below).\n@@ -190,6 +194,12 @@ package Prj.Attr is\n    --  Set the variable kind of a known attribute. Does nothing if Attribute is\n    --  Empty_Attribute.\n \n+   function Attribute_Default_Of\n+     (Attribute : Attribute_Node_Id) return Attribute_Default_Value;\n+   --  Returns the default of the attribute, Read_Only_Value for read only\n+   --  attributes, Empty_Value when ndefault not specified or specified\n+   --  value.\n+\n    function Optional_Index_Of (Attribute : Attribute_Node_Id) return Boolean;\n    --  Returns True if Attribute is a known attribute and may have an\n    --  optional index. Returns False otherwise.\n@@ -232,12 +242,13 @@ package Prj.Attr is\n       Attr_Kind          : Defined_Attribute_Kind;\n       Var_Kind           : Defined_Variable_Kind;\n       Index_Is_File_Name : Boolean := False;\n-      Opt_Index          : Boolean := False);\n+      Opt_Index          : Boolean := False;\n+      Default            : Attribute_Default_Value := Empty_Value);\n    --  Add a new attribute to registered package In_Package. Fails if Name\n    --  (the attribute name) is empty, if In_Package is Empty_Package or if\n    --  the attribute name has a duplicate name. See definition of type\n    --  Attribute_Data above for the meaning of parameters Attr_Kind, Var_Kind,\n-   --  Index_Is_File_Name and Opt_Index.\n+   --  Index_Is_File_Name, Opt_Index and Default.\n \n    function Package_Node_Id_Of (Name : Name_Id) return Package_Node_Id;\n    --  Returns the package node id of the package with name Name. Returns\n@@ -320,6 +331,7 @@ private\n       Attr_Kind      : Attribute_Kind;\n       Read_Only      : Boolean;\n       Others_Allowed : Boolean;\n+      Default        : Attribute_Default_Value;\n       Next           : Attr_Node_Id;\n    end record;\n    --  Data for an attribute"}, {"sha": "93b5963b644b6a11f6c699a5e952d1153da309e8", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af6478c843c106281461ed5fd93377e61716181d/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af6478c843c106281461ed5fd93377e61716181d/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=af6478c843c106281461ed5fd93377e61716181d", "patch": "@@ -8517,7 +8517,7 @@ package body Prj.Nmsc is\n                   Show_Source_Dirs (Project, Shared);\n                end if;\n \n-               if Project.Qualifier = Dry then\n+               if Project.Qualifier = Abstract_Project then\n                   Check_Abstract_Project (Project, Data);\n                end if;\n          end case;"}, {"sha": "6d4a7f15fb48db3db1811b8f6a326d97566c3d8d", "filename": "gcc/ada/prj-part.adb", "status": "modified", "additions": 14, "deletions": 7, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af6478c843c106281461ed5fd93377e61716181d/gcc%2Fada%2Fprj-part.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af6478c843c106281461ed5fd93377e61716181d/gcc%2Fada%2Fprj-part.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-part.adb?ref=af6478c843c106281461ed5fd93377e61716181d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2001-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1094,7 +1094,8 @@ package body Prj.Part is\n          while Present (With_Clause) loop\n             Imported := Project_Node_Of (With_Clause, In_Tree);\n \n-            if Project_Qualifier_Of (Imported, In_Tree) /= Dry then\n+            if Project_Qualifier_Of (Imported, In_Tree) /= Abstract_Project\n+            then\n                Error_Msg_Name_1 := Name_Id (Path_Name_Of (Imported, In_Tree));\n                Error_Msg (Flags, \"can only import abstract projects, not %%\",\n                           Token_Ptr);\n@@ -1152,7 +1153,7 @@ package body Prj.Part is\n       Qualifier_Location := Token_Ptr;\n \n       if Token = Tok_Abstract then\n-         Proj_Qualifier := Dry;\n+         Proj_Qualifier := Abstract_Project;\n          Scan (In_Tree);\n \n       elsif Token = Tok_Identifier then\n@@ -1370,7 +1371,8 @@ package body Prj.Part is\n             if Extended then\n \n                if A_Project_Name_And_Node.Extended then\n-                  if A_Project_Name_And_Node.Proj_Qualifier /= Dry then\n+                  if A_Project_Name_And_Node.Proj_Qualifier /= Abstract_Project\n+                  then\n                      Error_Msg\n                        (Env.Flags,\n                         \"cannot extend the same project file several times\",\n@@ -1811,8 +1813,11 @@ package body Prj.Part is\n                      --  with sources if it inherits sources from the project\n                      --  it extends.\n \n-                     if Project_Qualifier_Of (Project, In_Tree) = Dry and then\n-                       Project_Qualifier_Of (Extended_Project, In_Tree) /= Dry\n+                     if Project_Qualifier_Of\n+                         (Project, In_Tree) = Abstract_Project\n+                        and then\n+                         Project_Qualifier_Of\n+                           (Extended_Project, In_Tree) /= Abstract_Project\n                      then\n                         Error_Msg\n                           (Env.Flags, \"an abstract project can only extend \" &\n@@ -1925,7 +1930,9 @@ package body Prj.Part is\n          Set_Project_Declaration_Of (Project, In_Tree, Project_Declaration);\n \n          if Present (Extended_Project)\n-           and then Project_Qualifier_Of (Extended_Project, In_Tree) /= Dry\n+           and then\n+             Project_Qualifier_Of\n+               (Extended_Project, In_Tree) /= Abstract_Project\n          then\n             Set_Extending_Project_Of\n               (Project_Declaration_Of (Extended_Project, In_Tree), In_Tree,"}, {"sha": "9ccd935f6af224a3a30e746aae5aa2a9807b1092", "filename": "gcc/ada/prj-pp.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af6478c843c106281461ed5fd93377e61716181d/gcc%2Fada%2Fprj-pp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af6478c843c106281461ed5fd93377e61716181d/gcc%2Fada%2Fprj-pp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-pp.adb?ref=af6478c843c106281461ed5fd93377e61716181d", "patch": "@@ -403,7 +403,7 @@ package body Prj.PP is\n                         Write_String (\"library \", Indent);\n                      when Configuration =>\n                         Write_String (\"configuration \", Indent);\n-                     when Dry =>\n+                     when Abstract_Project =>\n                         Write_String (\"abstract \", Indent);\n                   end case;\n "}, {"sha": "bd681d6b5b30829cbe8229a976dedcc3a6270cc6", "filename": "gcc/ada/prj-proc.adb", "status": "modified", "additions": 72, "deletions": 10, "changes": 82, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af6478c843c106281461ed5fd93377e61716181d/gcc%2Fada%2Fprj-proc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af6478c843c106281461ed5fd93377e61716181d/gcc%2Fada%2Fprj-proc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-proc.adb?ref=af6478c843c106281461ed5fd93377e61716181d", "patch": "@@ -519,6 +519,8 @@ package body Prj.Proc is\n       Last : String_List_Id := Nil_String;\n       --  Reference to the last string elements in Result, when Kind is List\n \n+      Current_Term_Kind : Project_Node_Kind;\n+\n    begin\n       Result.Project := Project;\n       Result.Location := Location_Of (First_Term, From_Project_Node_Tree);\n@@ -528,8 +530,10 @@ package body Prj.Proc is\n       The_Term := First_Term;\n       while Present (The_Term) loop\n          The_Current_Term := Current_Term (The_Term, From_Project_Node_Tree);\n+         Current_Term_Kind :=\n+           Kind_Of (The_Current_Term, From_Project_Node_Tree);\n \n-         case Kind_Of (The_Current_Term, From_Project_Node_Tree) is\n+         case Current_Term_Kind is\n \n             when N_Literal_String =>\n \n@@ -700,6 +704,13 @@ package body Prj.Proc is\n                   Index           : Name_Id := No_Name;\n \n                begin\n+                  <<Object_Dir_Restart>>\n+                  The_Project := Project;\n+                  The_Package := Pkg;\n+                  The_Name := No_Name;\n+                  The_Variable_Id := No_Variable;\n+                  Index := No_Name;\n+\n                   if Present (Term_Project)\n                     and then Term_Project /= From_Project_Node\n                   then\n@@ -741,9 +752,7 @@ package body Prj.Proc is\n                   The_Name :=\n                     Name_Of (The_Current_Term, From_Project_Node_Tree);\n \n-                  if Kind_Of (The_Current_Term, From_Project_Node_Tree) =\n-                                                        N_Attribute_Reference\n-                  then\n+                  if Current_Term_Kind = N_Attribute_Reference then\n                      Index :=\n                        Associative_Array_Index_Of\n                          (The_Current_Term, From_Project_Node_Tree);\n@@ -759,9 +768,7 @@ package body Prj.Proc is\n \n                         --  First, if there is a package, look into the package\n \n-                        if Kind_Of (The_Current_Term, From_Project_Node_Tree) =\n-                                                        N_Variable_Reference\n-                        then\n+                        if Current_Term_Kind = N_Variable_Reference then\n                            The_Variable_Id :=\n                              Shared.Packages.Table\n                                (The_Package).Decl.Variables;\n@@ -786,9 +793,7 @@ package body Prj.Proc is\n \n                         --  If we have not found it, look into the project\n \n-                        if Kind_Of (The_Current_Term, From_Project_Node_Tree) =\n-                             N_Variable_Reference\n-                        then\n+                        if Current_Term_Kind = N_Variable_Reference then\n                            The_Variable_Id := The_Project.Decl.Variables;\n                         else\n                            The_Variable_Id := The_Project.Decl.Attributes;\n@@ -882,6 +887,63 @@ package body Prj.Proc is\n                      end;\n                   end if;\n \n+                  --  Check the defaults\n+\n+                  if Current_Term_Kind = N_Attribute_Reference\n+                    and then The_Variable.Default\n+                  then\n+                     declare\n+                        The_Default : constant Attribute_Default_Value :=\n+                          Default_Of\n+                            (The_Current_Term, From_Project_Node_Tree);\n+                     begin\n+                        case The_Variable.Kind is\n+                        when Undefined =>\n+                           null;\n+\n+                        when Single =>\n+                           case The_Default is\n+                              when Read_Only_Value =>\n+                                 null;\n+\n+                              when Empty_Value =>\n+                                 The_Variable.Value := Empty_String;\n+\n+                              when Dot_Value =>\n+                                 The_Variable.Value := Dot_String;\n+\n+                              when Object_Dir_Value =>\n+                                 From_Project_Node_Tree.Project_Nodes.Table\n+                                   (The_Current_Term).Name :=\n+                                   Snames.Name_Object_Dir;\n+                                 From_Project_Node_Tree.Project_Nodes.Table\n+                                   (The_Current_Term).Default :=\n+                                   Dot_Value;\n+                                 goto Object_Dir_Restart;\n+\n+                              when Target_Value =>\n+                                 null;\n+                           end case;\n+\n+                        when List =>\n+                           case The_Default is\n+                              when Read_Only_Value =>\n+                                 null;\n+\n+                              when Empty_Value =>\n+                                 The_Variable.Values := Nil_String;\n+\n+                              when Dot_Value =>\n+                                 The_Variable.Values :=\n+                                   Shared.Dot_String_List;\n+\n+                              when Object_Dir_Value | Target_Value =>\n+                                 null;\n+                           end case;\n+                        end case;\n+                     end;\n+                  end if;\n+\n                   case Kind is\n \n                      when Undefined =>"}, {"sha": "cacae775aa0860dc158d8f3a7d6c7d1eca17792c", "filename": "gcc/ada/prj-strt.adb", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af6478c843c106281461ed5fd93377e61716181d/gcc%2Fada%2Fprj-strt.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af6478c843c106281461ed5fd93377e61716181d/gcc%2Fada%2Fprj-strt.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-strt.adb?ref=af6478c843c106281461ed5fd93377e61716181d", "patch": "@@ -218,6 +218,9 @@ package body Prj.Strt is\n               (Reference, In_Tree,\n                To => Attribute_Kind_Of (Current_Attribute) in\n                       All_Case_Insensitive_Associative_Array);\n+            Set_Default_Of\n+              (Reference, In_Tree,\n+               To => Attribute_Default_Of (Current_Attribute));\n \n             --  Scan past the attribute name\n "}, {"sha": "023947c4e97872bb06243062675577ba57b69fc7", "filename": "gcc/ada/prj-tree.adb", "status": "modified", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af6478c843c106281461ed5fd93377e61716181d/gcc%2Fada%2Fprj-tree.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af6478c843c106281461ed5fd93377e61716181d/gcc%2Fada%2Fprj-tree.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-tree.adb?ref=af6478c843c106281461ed5fd93377e61716181d", "patch": "@@ -122,6 +122,7 @@ package body Prj.Tree is\n             Src_Index => 0,\n             Path_Name => No_Path,\n             Value     => No_Name,\n+            Default   => Empty_Value,\n             Field1    => Empty_Node,\n             Field2    => Empty_Node,\n             Field3    => Empty_Node,\n@@ -172,6 +173,7 @@ package body Prj.Tree is\n                Src_Index        => 0,\n                Path_Name        => No_Path,\n                Value            => Comments.Table (J).Value,\n+               Default          => Empty_Value,\n                Field1           => Empty_Node,\n                Field2           => Empty_Node,\n                Field3           => Empty_Node,\n@@ -340,6 +342,7 @@ package body Prj.Tree is\n          Src_Index        => 0,\n          Path_Name        => No_Path,\n          Value            => No_Name,\n+         Default          => Empty_Value,\n          Field1           => Empty_Node,\n          Field2           => Empty_Node,\n          Field3           => Empty_Node,\n@@ -385,6 +388,22 @@ package body Prj.Tree is\n       return In_Tree.Project_Nodes.Table (Node).Field1;\n    end Current_Term;\n \n+   ----------------\n+   -- Default_Of --\n+   ----------------\n+\n+   function Default_Of\n+     (Node    : Project_Node_Id;\n+      In_Tree : Project_Node_Tree_Ref) return Attribute_Default_Value\n+   is\n+   begin\n+      pragma Assert\n+        (Present (Node)\n+          and then\n+            In_Tree.Project_Nodes.Table (Node).Kind = N_Attribute_Reference);\n+      return In_Tree.Project_Nodes.Table (Node).Default;\n+   end Default_Of;\n+\n    --------------------------\n    -- Default_Project_Node --\n    --------------------------\n@@ -416,6 +435,7 @@ package body Prj.Tree is\n          Src_Index        => 0,\n          Path_Name        => No_Path,\n          Value            => No_Name,\n+         Default          => Empty_Value,\n          Field1           => Empty_Node,\n          Field2           => Empty_Node,\n          Field3           => Empty_Node,\n@@ -452,6 +472,7 @@ package body Prj.Tree is\n                Src_Index        => 0,\n                Path_Name        => No_Path,\n                Value            => No_Name,\n+               Default          => Empty_Value,\n                Field1           => Empty_Node,\n                Field2           => Empty_Node,\n                Field3           => Empty_Node,\n@@ -486,6 +507,7 @@ package body Prj.Tree is\n                   Src_Index        => 0,\n                   Path_Name        => No_Path,\n                   Value            => Comments.Table (J).Value,\n+                  Default          => Empty_Value,\n                   Field1           => Empty_Node,\n                   Field2           => Empty_Node,\n                   Field3           => Empty_Node,\n@@ -1867,6 +1889,23 @@ package body Prj.Tree is\n       In_Tree.Project_Nodes.Table (Node).Field1 := To;\n    end Set_Current_Term;\n \n+   --------------------\n+   -- Set_Default_Of --\n+   --------------------\n+\n+   procedure Set_Default_Of\n+     (Node    : Project_Node_Id;\n+      In_Tree : Project_Node_Tree_Ref;\n+      To      : Attribute_Default_Value)\n+   is\n+   begin\n+      pragma Assert\n+        (Present (Node)\n+          and then\n+            In_Tree.Project_Nodes.Table (Node).Kind = N_Attribute_Reference);\n+      In_Tree.Project_Nodes.Table (Node).Default := To;\n+   end Set_Default_Of;\n+\n    ----------------------\n    -- Set_Directory_Of --\n    ----------------------"}, {"sha": "e798d6b670041b44e7b5df7a369ce21cc8cbd9bd", "filename": "gcc/ada/prj-tree.ads", "status": "modified", "additions": 18, "deletions": 2, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af6478c843c106281461ed5fd93377e61716181d/gcc%2Fada%2Fprj-tree.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af6478c843c106281461ed5fd93377e61716181d/gcc%2Fada%2Fprj-tree.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-tree.ads?ref=af6478c843c106281461ed5fd93377e61716181d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2001-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -590,6 +590,12 @@ package Prj.Tree is\n    --  Only valid for N_Variable_Reference or N_Attribute_Reference nodes.\n    --  May return Empty_Node.\n \n+   function Default_Of\n+     (Node    : Project_Node_Id;\n+      In_Tree : Project_Node_Tree_Ref) return Attribute_Default_Value;\n+   pragma Inline (Default_Of);\n+   --  Only valid for N_Attribute_Reference nodes\n+\n    function String_Type_Of\n      (Node    : Project_Node_Id;\n       In_Tree : Project_Node_Tree_Ref) return Project_Node_Id;\n@@ -1068,7 +1074,14 @@ package Prj.Tree is\n       In_Tree : Project_Node_Tree_Ref;\n       To      : Project_Node_Id);\n    pragma Inline (Set_Package_Node_Of);\n-   --  Only valid for N_Variable_Reference or N_Attribute_Reference nodes.\n+   --  Only valid for N_Variable_Reference or N_Attribute_Reference nodes\n+\n+   procedure Set_Default_Of\n+     (Node    : Project_Node_Id;\n+      In_Tree : Project_Node_Tree_Ref;\n+      To      : Attribute_Default_Value);\n+   pragma Inline (Set_Default_Of);\n+   --  Only valid for N_Attribute_Reference nodes\n \n    procedure Set_String_Type_Of\n      (Node    : Project_Node_Id;\n@@ -1179,6 +1192,9 @@ package Prj.Tree is\n          Value : Name_Id := No_Name;\n          --  See below for what Project_Node_Kind it is used\n \n+         Default : Attribute_Default_Value := Empty_Value;\n+         --  Only used in N_Attribute_Reference\n+\n          Field1 : Project_Node_Id := Empty_Node;\n          --  See below the meaning for each Project_Node_Kind\n "}, {"sha": "8e5914ba1581e37e1d404e762ae16d0af57c7f1f", "filename": "gcc/ada/prj.adb", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af6478c843c106281461ed5fd93377e61716181d/gcc%2Fada%2Fprj.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af6478c843c106281461ed5fd93377e61716181d/gcc%2Fada%2Fprj.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.adb?ref=af6478c843c106281461ed5fd93377e61716181d", "patch": "@@ -61,6 +61,8 @@ package body Prj is\n \n    The_Empty_String : Name_Id := No_Name;\n \n+   The_Dot_String   : Name_Id := No_Name;\n+\n    Debug_Level : Integer := 0;\n    --  Current indentation level for debug traces\n \n@@ -307,6 +309,15 @@ package body Prj is\n       end case;\n    end Dependency_Name;\n \n+   ----------------\n+   -- Dot_String --\n+   ----------------\n+\n+   function Dot_String return Name_Id is\n+   begin\n+      return The_Dot_String;\n+   end Dot_String;\n+\n    ----------------\n    -- Empty_File --\n    ----------------\n@@ -1057,6 +1068,10 @@ package body Prj is\n          Name_Len := 0;\n          The_Empty_String := Name_Find;\n \n+         Name_Len := 1;\n+         Name_Buffer (1) := '.';\n+         The_Dot_String := Name_Find;\n+\n          Prj.Attr.Initialize;\n \n          --  Make sure that new reserved words after Ada 95 may be used as\n@@ -1442,6 +1457,20 @@ package body Prj is\n          Array_Table.Init            (Tree.Shared.Arrays);\n          Package_Table.Init          (Tree.Shared.Packages);\n \n+         --  Create Dot_String_List\n+\n+         String_Element_Table.Append\n+           (Tree.Shared.String_Elements,\n+            String_Element'\n+              (Value         => The_Dot_String,\n+               Index         => 0,\n+               Display_Value => The_Dot_String,\n+               Location      => No_Location,\n+               Flag          => False,\n+               Next          => Nil_String));\n+         Tree.Shared.Dot_String_List :=\n+           String_Element_Table.Last (Tree.Shared.String_Elements);\n+\n          --  Private part table\n \n          Temp_Files_Table.Init (Tree.Shared.Private_Part.Temp_Files);"}, {"sha": "b44bfa4297f889e7f6ab5abb304b41cef7daa93b", "filename": "gcc/ada/prj.ads", "status": "modified", "additions": 25, "deletions": 2, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af6478c843c106281461ed5fd93377e61716181d/gcc%2Fada%2Fprj.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af6478c843c106281461ed5fd93377e61716181d/gcc%2Fada%2Fprj.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.ads?ref=af6478c843c106281461ed5fd93377e61716181d", "patch": "@@ -72,6 +72,25 @@ package Prj is\n    type Yes_No_Unknown is (Yes, No, Unknown);\n    --  Tri-state to decide if -lgnarl is needed when linking\n \n+   type Attribute_Default_Value is\n+     (Read_Only_Value,\n+      --  for read only attributes (Name, Project_Dir)\n+\n+      Empty_Value,\n+      --  empty string or empty string list\n+\n+      Dot_Value,\n+      --  \".\" or (\".\")\n+\n+      Object_Dir_Value,\n+      --  'Object_Dir\n+\n+      Target_Value\n+      --  'Target (special rules)\n+     );\n+   --  Describe the default values of attributes that are referenced but not\n+   --  declared.\n+\n    pragma Warnings (Off);\n    type Project_Qualifier is\n      (Unspecified,\n@@ -83,15 +102,15 @@ package Prj is\n \n       Library,\n       Configuration,\n-      Dry,\n+      Abstract_Project,\n       Aggregate,\n       Aggregate_Library);\n    pragma Warnings (On);\n    --  Qualifiers that can prefix the reserved word \"project\" in a project\n    --  file:\n    --    Standard:             standard project ...\n    --    Library:              library project is ...\n-   --    Dry:                  abstract project is\n+   --    Abstract_Project:     abstract project is\n    --    Aggregate:            aggregate project is\n    --    Aggregate_Library:    aggregate library project is ...\n    --    Configuration:        configuration project is ...\n@@ -123,6 +142,9 @@ package Prj is\n    function Empty_String return Name_Id;\n    --  Return the id for an empty string \"\"\n \n+   function Dot_String return Name_Id;\n+   --  Return the id for \".\"\n+\n    type Path_Information is record\n       Name         : Path_Name_Type := No_Path;\n       Display_Name : Path_Name_Type := No_Path;\n@@ -1570,6 +1592,7 @@ package Prj is\n       Arrays            : Array_Table.Instance;\n       Packages          : Package_Table.Instance;\n       Private_Part      : Private_Project_Tree_Data;\n+      Dot_String_List   : String_List_Id := Nil_String;\n    end record;\n    type Shared_Project_Tree_Data_Access is access all Shared_Project_Tree_Data;\n    --  The data that is shared among multiple trees, when these trees are"}, {"sha": "b61decaa7ef8438225f6f61b369ccbba5e77ac16", "filename": "gcc/ada/projects.texi", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af6478c843c106281461ed5fd93377e61716181d/gcc%2Fada%2Fprojects.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af6478c843c106281461ed5fd93377e61716181d/gcc%2Fada%2Fprojects.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprojects.texi?ref=af6478c843c106281461ed5fd93377e61716181d", "patch": "@@ -3724,7 +3724,7 @@ Here are some examples of attribute declarations:\n Attributes references may appear anywhere in expressions, and are used\n to retrieve the value previously assigned to the attribute. If an attribute\n has not been set in a given package or project, its value defaults to the\n-empty string or the empty list.\n+empty string or the empty list, with some exceptions.\n \n @smallexample\n attribute_reference ::=\n@@ -3746,6 +3746,15 @@ Examples are:\n   Builder'Default_Switches (\"Ada\")\n @end smallexample\n \n+The exceptions to the empty defaults are:\n+\n+@itemize @bullet\n+@item Object_Dir: default is \".\"\n+@item Exec_Dir: default is 'Object_Dir, that is the value of attribute\n+  Object_Dir in the same project, declared or defaulted.\n+@item Source_Dirs: default is (\".\")\n+@end itemize\n+\n @noindent\n The prefix of an attribute may be:\n "}, {"sha": "6b94a8b2873f752e2c5b6413d3174218b4cbcd19", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af6478c843c106281461ed5fd93377e61716181d/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af6478c843c106281461ed5fd93377e61716181d/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=af6478c843c106281461ed5fd93377e61716181d", "patch": "@@ -11806,7 +11806,7 @@ package body Sem_Prag is\n             GNAT_Pragma;\n             Check_Valid_Configuration_Pragma;\n             Check_Arg_Count (0);\n-            Check_Float_Overflow := True;\n+            Check_Float_Overflow := not Machine_Overflows_On_Target;\n \n          ----------------\n          -- Check_Name --"}, {"sha": "46939c6fd523784b92c44fd2a871885e68388a47", "filename": "gcc/ada/switch-c.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af6478c843c106281461ed5fd93377e61716181d/gcc%2Fada%2Fswitch-c.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af6478c843c106281461ed5fd93377e61716181d/gcc%2Fada%2Fswitch-c.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fswitch-c.adb?ref=af6478c843c106281461ed5fd93377e61716181d", "patch": "@@ -32,11 +32,13 @@ with Lib;      use Lib;\n with Osint;    use Osint;\n with Opt;      use Opt;\n with Stylesw;  use Stylesw;\n+with Targparm; use Targparm;\n with Ttypes;   use Ttypes;\n with Validsw;  use Validsw;\n with Warnsw;   use Warnsw;\n \n with Ada.Unchecked_Deallocation;\n+\n with System.WCh_Con; use System.WCh_Con;\n with System.OS_Lib;\n \n@@ -572,7 +574,7 @@ package body Switch.C is\n \n                   when 'F' =>\n                      Ptr := Ptr + 1;\n-                     Check_Float_Overflow := True;\n+                     Check_Float_Overflow := not Machine_Overflows_On_Target;\n \n                   --  -gnateG (save preprocessor output)\n "}]}