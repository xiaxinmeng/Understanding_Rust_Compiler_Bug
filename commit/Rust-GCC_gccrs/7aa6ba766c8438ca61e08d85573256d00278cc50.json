{"sha": "7aa6ba766c8438ca61e08d85573256d00278cc50", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2FhNmJhNzY2Yzg0MzhjYTYxZTA4ZDg1NTczMjU2ZDAwMjc4Y2M1MA==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2006-07-03T17:31:46Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2006-07-03T17:31:46Z"}, "message": "[multiple changes]\n\n2006-07-03  Ian Lance Taylor  <ian@airs.com>\n\t    Paolo Carlini  <pcarlini@suse.de>\n\n\t* include/ext/rc_string_base.h (__rc_string_base::_S_max_size):\n\tIncrease by a factor of two.\n\t* include/ext/sso_string_base.h (__sso_string_base::_S_max_size):\n\tLikewise.\n\n2006-07-03  Paolo Carlini  <pcarlini@suse.de>\n\n\t* include/ext/sso_string_base.h (__sso_string_base::_M_create): Never\n\tallocate a string bigger than _S_max_size.\n\nFrom-SVN: r115155", "tree": {"sha": "93211a6c9a8464863e08785ae2d8e30d52fba091", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/93211a6c9a8464863e08785ae2d8e30d52fba091"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7aa6ba766c8438ca61e08d85573256d00278cc50", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7aa6ba766c8438ca61e08d85573256d00278cc50", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7aa6ba766c8438ca61e08d85573256d00278cc50", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7aa6ba766c8438ca61e08d85573256d00278cc50/comments", "author": null, "committer": null, "parents": [{"sha": "cdc3c14cfc801d70b3499e21f3d5a02a85badbf4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cdc3c14cfc801d70b3499e21f3d5a02a85badbf4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cdc3c14cfc801d70b3499e21f3d5a02a85badbf4"}], "stats": {"total": 28, "additions": 23, "deletions": 5}, "files": [{"sha": "01868aaabcbe9aa314f2289e834518639c43e094", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7aa6ba766c8438ca61e08d85573256d00278cc50/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7aa6ba766c8438ca61e08d85573256d00278cc50/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=7aa6ba766c8438ca61e08d85573256d00278cc50", "patch": "@@ -1,3 +1,16 @@\n+2006-07-03  Ian Lance Taylor  <ian@airs.com>\n+\t    Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* include/ext/rc_string_base.h (__rc_string_base::_S_max_size):\n+\tIncrease by a factor of two.\n+\t* include/ext/sso_string_base.h (__sso_string_base::_S_max_size):\n+\tLikewise.\n+\n+2006-07-03  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* include/ext/sso_string_base.h (__sso_string_base::_M_create): Never\n+\tallocate a string bigger than _S_max_size.\n+\n 2006-06-29  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* include/Makefile.am (pch1_input, pch1_output_builddir,"}, {"sha": "9470db74fe34ac1937d653af7a4831d78866f1c4", "filename": "libstdc++-v3/include/ext/rc_string_base.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7aa6ba766c8438ca61e08d85573256d00278cc50/libstdc%2B%2B-v3%2Finclude%2Fext%2Frc_string_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7aa6ba766c8438ca61e08d85573256d00278cc50/libstdc%2B%2B-v3%2Finclude%2Fext%2Frc_string_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Frc_string_base.h?ref=7aa6ba766c8438ca61e08d85573256d00278cc50", "patch": "@@ -177,9 +177,9 @@ _GLIBCXX_BEGIN_NAMESPACE(__gnu_cxx)\n       // npos = sizeof(_Rep) + (m * sizeof(_CharT)) + sizeof(_CharT)\n       // Solving for m:\n       // m = ((npos - sizeof(_Rep)) / sizeof(_CharT)) - 1\n-      // In addition, this implementation quarters this amount.\n+      // In addition, this implementation halfs this amount.\n       enum { _S_max_size = (((static_cast<size_type>(-1) - sizeof(_Rep))\n-\t\t\t     / sizeof(_CharT)) - 1) / 4 };\n+\t\t\t     / sizeof(_CharT)) - 1) / 2 };\n \n       // Data Member (private):\n       mutable typename _Util_Base::template _Alloc_hider<_Alloc>  _M_dataplus;"}, {"sha": "1282eb6e53e996bf05e697fcf61751ec7668935a", "filename": "libstdc++-v3/include/ext/sso_string_base.h", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7aa6ba766c8438ca61e08d85573256d00278cc50/libstdc%2B%2B-v3%2Finclude%2Fext%2Fsso_string_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7aa6ba766c8438ca61e08d85573256d00278cc50/libstdc%2B%2B-v3%2Finclude%2Fext%2Fsso_string_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fsso_string_base.h?ref=7aa6ba766c8438ca61e08d85573256d00278cc50", "patch": "@@ -61,9 +61,9 @@ _GLIBCXX_BEGIN_NAMESPACE(__gnu_cxx)\n       // npos = m * sizeof(_CharT) + sizeof(_CharT)\n       // Solving for m:\n       // m = npos / sizeof(_CharT) - 1\n-      // In addition, this implementation quarters this amount.\n+      // In addition, this implementation halfs this amount.\n       enum { _S_max_size = (((static_cast<size_type>(-1)\n-\t\t\t      / sizeof(_CharT)) - 1) / 4) };\n+\t\t\t      / sizeof(_CharT)) - 1) / 2) };\n \n       // Data Members (private):\n       typename _Util_Base::template _Alloc_hider<_CharT_alloc_type>\n@@ -325,7 +325,12 @@ _GLIBCXX_BEGIN_NAMESPACE(__gnu_cxx)\n       // meet amortized linear time requirements of the library: see\n       // http://gcc.gnu.org/ml/libstdc++/2001-07/msg00085.html.\n       if (__capacity > __old_capacity && __capacity < 2 * __old_capacity)\n-\t__capacity = 2 * __old_capacity;\n+\t{\n+\t  __capacity = 2 * __old_capacity;\n+\t  // Never allocate a string bigger than _S_max_size.\n+\t  if (__capacity > size_type(_S_max_size))\n+\t    __capacity = size_type(_S_max_size);\n+\t}\n \n       // NB: Need an array of char_type[__capacity], plus a terminating\n       // null char_type() element."}]}