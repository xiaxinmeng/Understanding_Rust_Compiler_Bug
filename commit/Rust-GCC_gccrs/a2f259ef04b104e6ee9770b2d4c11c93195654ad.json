{"sha": "a2f259ef04b104e6ee9770b2d4c11c93195654ad", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTJmMjU5ZWYwNGIxMDRlNmVlOTc3MGIyZDRjMTFjOTMxOTU2NTRhZA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2015-03-09T19:59:54Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2015-03-09T19:59:54Z"}, "message": "re PR c++/65339 (C++ ICE with lambda and no capture list)\n\n\tPR c++/65339\n\t* call.c: Don't call maybe_resolve_dummy when calling a constructor.\n\nFrom-SVN: r221285", "tree": {"sha": "9419c41d55067980917ddff188920097354a69bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9419c41d55067980917ddff188920097354a69bc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a2f259ef04b104e6ee9770b2d4c11c93195654ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2f259ef04b104e6ee9770b2d4c11c93195654ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2f259ef04b104e6ee9770b2d4c11c93195654ad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2f259ef04b104e6ee9770b2d4c11c93195654ad/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "01177669b2eabfb1ddb3290c35bc110980b44d62", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01177669b2eabfb1ddb3290c35bc110980b44d62", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01177669b2eabfb1ddb3290c35bc110980b44d62"}], "stats": {"total": 38, "additions": 37, "deletions": 1}, "files": [{"sha": "67aa184bcb1f9d641787c178bdb15d12dd7751af", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2f259ef04b104e6ee9770b2d4c11c93195654ad/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2f259ef04b104e6ee9770b2d4c11c93195654ad/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=a2f259ef04b104e6ee9770b2d4c11c93195654ad", "patch": "@@ -1,3 +1,8 @@\n+2015-03-09  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/65339\n+\t* call.c: Don't call maybe_resolve_dummy when calling a constructor.\n+\n 2015-03-09  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c/65120"}, {"sha": "fdd8436d53e7bc4ed99804da709df9f49f338910", "filename": "gcc/cp/call.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2f259ef04b104e6ee9770b2d4c11c93195654ad/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2f259ef04b104e6ee9770b2d4c11c93195654ad/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=a2f259ef04b104e6ee9770b2d4c11c93195654ad", "patch": "@@ -8020,7 +8020,11 @@ build_new_method_call_1 (tree instance, tree fns, vec<tree, va_gc> **args,\n      that would be captured if the call turns out to be to a\n      non-static member function.  Do not actually capture it at this\n      point.  */\n-  first_mem_arg = maybe_resolve_dummy (instance, false);\n+  if (DECL_CONSTRUCTOR_P (fn))\n+    /* Constructors don't use the enclosing 'this'.  */\n+    first_mem_arg = instance;\n+  else\n+    first_mem_arg = maybe_resolve_dummy (instance, false);\n \n   /* Get the high-water mark for the CONVERSION_OBSTACK.  */\n   p = conversion_obstack_alloc (0);"}, {"sha": "d7955fd40c607e24b9f686975924a56e136ad754", "filename": "gcc/testsuite/g++.dg/cpp0x/lambda/lambda-conv9.C", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2f259ef04b104e6ee9770b2d4c11c93195654ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-conv9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2f259ef04b104e6ee9770b2d4c11c93195654ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-conv9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-conv9.C?ref=a2f259ef04b104e6ee9770b2d4c11c93195654ad", "patch": "@@ -0,0 +1,27 @@\n+// PR c++/65339\n+// { dg-do compile { target c++11 } }\n+\n+class FuncWrapper {\n+public:\n+  template <typename Func> void callfunc(Func f)\n+  {\n+     f();\n+  }\n+};\n+\n+class Object {\n+  int field;\n+public:\n+  void Method();\n+  Object() { field = 555; }\n+  Object(const Object&) { __builtin_abort(); }\n+};\n+\n+void Object::Method ()\n+{\n+  FuncWrapper wrap;\n+  wrap.callfunc(*[]()\n+\t\t{\n+\t\t  return Object();\n+\t\t});\n+}"}]}