{"sha": "be2f06ed3d5b59d19971e529889f185e9c2bc6c6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmUyZjA2ZWQzZDViNTlkMTk5NzFlNTI5ODg5ZjE4NWU5YzJiYzZjNg==", "commit": {"author": {"name": "John David Anglin", "email": "dave.anglin@nrc-cnrc.gc.ca", "date": "2008-09-07T19:54:30Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2008-09-07T19:54:30Z"}, "message": "pa32-regs.h (IRA_COVER_CLASSES): Define.\n\n\t* pa32-regs.h (IRA_COVER_CLASSES): Define.\n\t* pa64-regs.h (IRA_COVER_CLASSES): Define.\n\nFrom-SVN: r140093", "tree": {"sha": "02d72a6839218ef5d3e6d89af6a3b5aba32e63a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/02d72a6839218ef5d3e6d89af6a3b5aba32e63a8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/be2f06ed3d5b59d19971e529889f185e9c2bc6c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be2f06ed3d5b59d19971e529889f185e9c2bc6c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be2f06ed3d5b59d19971e529889f185e9c2bc6c6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be2f06ed3d5b59d19971e529889f185e9c2bc6c6/comments", "author": null, "committer": null, "parents": [{"sha": "d6ab7b032fe0def8912502dad23a4dc588269803", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6ab7b032fe0def8912502dad23a4dc588269803", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6ab7b032fe0def8912502dad23a4dc588269803"}], "stats": {"total": 33, "additions": 32, "deletions": 1}, "files": [{"sha": "a0f9fada96b6629d59d6b3d1bfc42484e6bd3c04", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be2f06ed3d5b59d19971e529889f185e9c2bc6c6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be2f06ed3d5b59d19971e529889f185e9c2bc6c6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=be2f06ed3d5b59d19971e529889f185e9c2bc6c6", "patch": "@@ -1,3 +1,8 @@\n+2008-09-07  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n+\n+\t* pa32-regs.h (IRA_COVER_CLASSES): Define.\n+\t* pa64-regs.h (IRA_COVER_CLASSES): Define.\n+\n 2008-09-07  Helge Deller  <deller@gmx.de>\n \n         * pa/linux-atomic.c: New file."}, {"sha": "4463c631d38a2e05438210fa51a674e78f485ebc", "filename": "gcc/config/pa/pa32-regs.h", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be2f06ed3d5b59d19971e529889f185e9c2bc6c6/gcc%2Fconfig%2Fpa%2Fpa32-regs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be2f06ed3d5b59d19971e529889f185e9c2bc6c6/gcc%2Fconfig%2Fpa%2Fpa32-regs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa32-regs.h?ref=be2f06ed3d5b59d19971e529889f185e9c2bc6c6", "patch": "@@ -287,6 +287,19 @@ enum reg_class { NO_REGS, R1_REGS, GENERAL_REGS, FPUPPER_REGS, FP_REGS,\n   {0x00000000, 0x00000000, 0x01000000},\t/* SHIFT_REGS */\t\t\\\n   {0xfffffffe, 0xffffffff, 0x01ffffff}}\t/* ALL_REGS */\n \n+/* The following macro defines cover classes for Integrated Register\n+   Allocator.  Cover classes is a set of non-intersected register\n+   classes covering all hard registers used for register allocation\n+   purpose.  Any move between two registers of a cover class should be\n+   cheaper than load or store of the registers.  The macro value is\n+   array of register classes with LIM_REG_CLASSES used as the end\n+   marker.  */\n+\n+#define IRA_COVER_CLASSES\t\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\t\\\n+  GENERAL_REGS, FP_REGS, SHIFT_REGS, LIM_REG_CLASSES\t\t\t\\\n+}\n+\n /* Defines invalid mode changes.  */\n \n #define CANNOT_CHANGE_MODE_CLASS(FROM, TO, CLASS) \\"}, {"sha": "ec865606d5f8c622f624f944a2c41eedd14719d9", "filename": "gcc/config/pa/pa64-regs.h", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be2f06ed3d5b59d19971e529889f185e9c2bc6c6/gcc%2Fconfig%2Fpa%2Fpa64-regs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be2f06ed3d5b59d19971e529889f185e9c2bc6c6/gcc%2Fconfig%2Fpa%2Fpa64-regs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa64-regs.h?ref=be2f06ed3d5b59d19971e529889f185e9c2bc6c6", "patch": "@@ -235,12 +235,25 @@ enum reg_class { NO_REGS, R1_REGS, GENERAL_REGS, FPUPPER_REGS, FP_REGS,\n  {{0x00000000, 0x00000000},\t/* NO_REGS */\t\t\t\\\n   {0x00000002, 0x00000000},\t/* R1_REGS */\t\t\t\\\n   {0xfffffffe, 0x00000000},\t/* GENERAL_REGS */\t\t\\\n-  {0x00000000, 0x00000000},\t/* FPUPPER_REGS */\t\t\t\\\n+  {0x00000000, 0x00000000},\t/* FPUPPER_REGS */\t\t\\\n   {0x00000000, 0x0fffffff},\t/* FP_REGS */\t\t\t\\\n   {0xfffffffe, 0x0fffffff},\t/* GENERAL_OR_FP_REGS */\t\\\n   {0x00000000, 0x10000000},\t/* SHIFT_REGS */\t\t\\\n   {0xfffffffe, 0x1fffffff}}\t/* ALL_REGS */\n \n+/* The following macro defines cover classes for Integrated Register\n+   Allocator.  Cover classes is a set of non-intersected register\n+   classes covering all hard registers used for register allocation\n+   purpose.  Any move between two registers of a cover class should be\n+   cheaper than load or store of the registers.  The macro value is\n+   array of register classes with LIM_REG_CLASSES used as the end\n+   marker.  */\n+\n+#define IRA_COVER_CLASSES\t\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\t\\\n+  GENERAL_REGS, FP_REGS, SHIFT_REGS, LIM_REG_CLASSES\t\t\t\\\n+}\n+\n /* Defines invalid mode changes.  */\n \n #define CANNOT_CHANGE_MODE_CLASS(FROM, TO, CLASS) \\"}]}