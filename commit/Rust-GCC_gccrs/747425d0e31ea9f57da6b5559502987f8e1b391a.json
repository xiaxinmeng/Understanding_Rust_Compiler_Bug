{"sha": "747425d0e31ea9f57da6b5559502987f8e1b391a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzQ3NDI1ZDBlMzFlYTlmNTdkYTZiNTU1OTUwMjk4N2Y4ZTFiMzkxYQ==", "commit": {"author": {"name": "Chung-Lin Tang", "email": "cltang@codesourcery.com", "date": "2014-03-11T09:04:54Z"}, "committer": {"name": "Chung-Lin Tang", "email": "cltang@gcc.gnu.org", "date": "2014-03-11T09:04:54Z"}, "message": "nios2.c (machine_function): Add fp_save_offset field.\n\n2014-03-11  Chung-Lin Tang  <cltang@codesourcery.com>\n\n\t* config/nios2/nios2.c (machine_function): Add fp_save_offset field.\n\t(nios2_compute_frame_layout):\n\tAdd calculation of cfun->machine->fp_save_offset.\n\t(nios2_expand_prologue): Correct setting of frame pointer register\n\tin prologue.\n\t(nios2_expand_epilogue): Update recovery of stack pointer from\n\tframe pointer accordingly.\n\t(nios2_initial_elimination_offset): Update calculation of offset\n\tfor eliminating to HARD_FRAME_POINTER_REGNUM.\n\nFrom-SVN: r208472", "tree": {"sha": "535b8b0a71e28af5edc65d5993c80497280af179", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/535b8b0a71e28af5edc65d5993c80497280af179"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/747425d0e31ea9f57da6b5559502987f8e1b391a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/747425d0e31ea9f57da6b5559502987f8e1b391a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/747425d0e31ea9f57da6b5559502987f8e1b391a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/747425d0e31ea9f57da6b5559502987f8e1b391a/comments", "author": {"login": "cltang", "id": 4055966, "node_id": "MDQ6VXNlcjQwNTU5NjY=", "avatar_url": "https://avatars.githubusercontent.com/u/4055966?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cltang", "html_url": "https://github.com/cltang", "followers_url": "https://api.github.com/users/cltang/followers", "following_url": "https://api.github.com/users/cltang/following{/other_user}", "gists_url": "https://api.github.com/users/cltang/gists{/gist_id}", "starred_url": "https://api.github.com/users/cltang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cltang/subscriptions", "organizations_url": "https://api.github.com/users/cltang/orgs", "repos_url": "https://api.github.com/users/cltang/repos", "events_url": "https://api.github.com/users/cltang/events{/privacy}", "received_events_url": "https://api.github.com/users/cltang/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8955706a6994416e89c497cf407830e6172b1051", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8955706a6994416e89c497cf407830e6172b1051", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8955706a6994416e89c497cf407830e6172b1051"}], "stats": {"total": 50, "additions": 39, "deletions": 11}, "files": [{"sha": "073c9c4a22d9da5e79e6420f5e1e6736c62b827f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/747425d0e31ea9f57da6b5559502987f8e1b391a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/747425d0e31ea9f57da6b5559502987f8e1b391a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=747425d0e31ea9f57da6b5559502987f8e1b391a", "patch": "@@ -1,3 +1,15 @@\n+2014-03-11  Chung-Lin Tang  <cltang@codesourcery.com>\n+\n+\t* config/nios2/nios2.c (machine_function): Add fp_save_offset field.\n+\t(nios2_compute_frame_layout):\n+\tAdd calculation of cfun->machine->fp_save_offset.\n+\t(nios2_expand_prologue): Correct setting of frame pointer register\n+\tin prologue.\n+\t(nios2_expand_epilogue): Update recovery of stack pointer from\n+\tframe pointer accordingly.\n+\t(nios2_initial_elimination_offset): Update calculation of offset\n+\tfor eliminating to HARD_FRAME_POINTER_REGNUM.\n+\n 2014-03-10  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR ipa/60457"}, {"sha": "edf9a618b3aa136a443ca0e9695025a0fa914acd", "filename": "gcc/config/nios2/nios2.c", "status": "modified", "additions": 27, "deletions": 11, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/747425d0e31ea9f57da6b5559502987f8e1b391a/gcc%2Fconfig%2Fnios2%2Fnios2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/747425d0e31ea9f57da6b5559502987f8e1b391a/gcc%2Fconfig%2Fnios2%2Fnios2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnios2%2Fnios2.c?ref=747425d0e31ea9f57da6b5559502987f8e1b391a", "patch": "@@ -81,8 +81,10 @@ struct GTY (()) machine_function\n   int args_size;\n   /* Number of bytes needed to store registers in frame.  */\n   int save_reg_size;\n-   /* Offset from new stack pointer to store registers.  */\n+  /* Offset from new stack pointer to store registers.  */\n   int save_regs_offset;\n+  /* Offset from save_regs_offset to store frame pointer register.  */\n+  int fp_save_offset;\n   /* != 0 if frame layout already calculated.  */\n   int initialized;\n };\n@@ -390,6 +392,17 @@ nios2_compute_frame_layout (void)\n \t  }\n     }\n \n+  cfun->machine->fp_save_offset = 0;\n+  if (save_mask & (1 << HARD_FRAME_POINTER_REGNUM))\n+    {\n+      int fp_save_offset = 0;\n+      for (regno = 0; regno < HARD_FRAME_POINTER_REGNUM; regno++)\n+\tif (save_mask & (1 << regno))\n+\t  fp_save_offset += 4;\n+\n+      cfun->machine->fp_save_offset = fp_save_offset;\n+    }\n+\n   save_reg_size = NIOS2_STACK_ALIGN (save_reg_size);\n   total_size += save_reg_size;\n   total_size += NIOS2_STACK_ALIGN (crtl->args.pretend_args_size);\n@@ -450,8 +463,8 @@ nios2_expand_prologue (void)\n {\n   unsigned int regno;\n   int total_frame_size, save_offset;\n-  int sp_offset; /* offset from base_reg to final stack value.  */\n-  int fp_offset; /* offset from base_reg to final fp value.  */\n+  int sp_offset;      /* offset from base_reg to final stack value.  */\n+  int save_regs_base; /* offset from base_reg to register save area.  */\n   rtx insn;\n \n   total_frame_size = nios2_compute_frame_layout ();\n@@ -468,8 +481,7 @@ nios2_expand_prologue (void)\n \t\t\tgen_int_mode (cfun->machine->save_regs_offset\n \t\t\t\t      - total_frame_size, Pmode)));\n       RTX_FRAME_RELATED_P (insn) = 1;\n-\n-      fp_offset = 0;\n+      save_regs_base = 0;\n       sp_offset = -cfun->machine->save_regs_offset;\n     }\n   else if (total_frame_size)\n@@ -478,16 +490,16 @@ nios2_expand_prologue (void)\n \t\t\t\t       gen_int_mode (-total_frame_size,\n \t\t\t\t\t\t     Pmode)));\n       RTX_FRAME_RELATED_P (insn) = 1;\n-      fp_offset = cfun->machine->save_regs_offset;\n+      save_regs_base = cfun->machine->save_regs_offset;\n       sp_offset = 0;\n     }\n   else\n-    fp_offset = sp_offset = 0;\n+    save_regs_base = sp_offset = 0;\n \n   if (crtl->limit_stack)\n     nios2_emit_stack_limit_check ();\n \n-  save_offset = fp_offset + cfun->machine->save_reg_size;\n+  save_offset = save_regs_base + cfun->machine->save_reg_size;\n \n   for (regno = LAST_GP_REG; regno > 0; regno--)\n     if (cfun->machine->save_mask & (1 << regno))\n@@ -498,9 +510,10 @@ nios2_expand_prologue (void)\n \n   if (frame_pointer_needed)\n     {\n+      int fp_save_offset = save_regs_base + cfun->machine->fp_save_offset;\n       insn = emit_insn (gen_add3_insn (hard_frame_pointer_rtx,\n \t\t\t\t       stack_pointer_rtx,\n-\t\t\t\t       gen_int_mode (fp_offset, Pmode)));\n+\t\t\t\t       gen_int_mode (fp_save_offset, Pmode)));\n       RTX_FRAME_RELATED_P (insn) = 1;\n     }\n \n@@ -555,7 +568,9 @@ nios2_expand_epilogue (bool sibcall_p)\n   if (frame_pointer_needed)\n     {\n       /* Recover the stack pointer.  */\n-      insn = emit_move_insn (stack_pointer_rtx, hard_frame_pointer_rtx);\n+      insn = emit_insn (gen_add3_insn\n+\t\t\t(stack_pointer_rtx, hard_frame_pointer_rtx,\n+\t\t\t gen_int_mode (-cfun->machine->fp_save_offset, Pmode)));\n       cfa_adj = plus_constant (Pmode, stack_pointer_rtx,\n \t\t\t       (total_frame_size\n \t\t\t\t- cfun->machine->save_regs_offset));\n@@ -772,7 +787,8 @@ nios2_initial_elimination_offset (int from, int to)\n     /* If we are asked for the frame pointer offset, then adjust OFFSET\n        by the offset from the frame pointer to the stack pointer.  */\n   if (to == HARD_FRAME_POINTER_REGNUM)\n-    offset -= cfun->machine->save_regs_offset;\n+    offset -= (cfun->machine->save_regs_offset\n+\t       + cfun->machine->fp_save_offset); \n \n   return offset;\n }"}]}