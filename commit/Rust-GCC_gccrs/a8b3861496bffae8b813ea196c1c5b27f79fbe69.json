{"sha": "a8b3861496bffae8b813ea196c1c5b27f79fbe69", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YThiMzg2MTQ5NmJmZmFlOGI4MTNlYTE5NmMxYzViMjdmNzlmYmU2OQ==", "commit": {"author": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2021-07-16T20:21:13Z"}, "committer": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2021-07-16T20:21:13Z"}, "message": "c++: alias CTAD in unevaluated context [PR101233]\n\nThis is the alias CTAD version of the CTAD bug PR93248, and the fix is\nthe same: clear cp_unevaluated_operand so that the entire chain of\nDECL_ARGUMENTS gets substituted.\n\n\tPR c++/101233\n\ngcc/cp/ChangeLog:\n\n\t* pt.c (alias_ctad_tweaks): Clear cp_unevaluated_operand for\n\tsubstituting DECL_ARGUMENTS.\n\ngcc/testsuite/ChangeLog:\n\n\t* g++.dg/cpp2a/class-deduction-alias10.C: New test.", "tree": {"sha": "5c72154a35c56087ea848454c431ebf83b23a335", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5c72154a35c56087ea848454c431ebf83b23a335"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a8b3861496bffae8b813ea196c1c5b27f79fbe69", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8b3861496bffae8b813ea196c1c5b27f79fbe69", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a8b3861496bffae8b813ea196c1c5b27f79fbe69", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8b3861496bffae8b813ea196c1c5b27f79fbe69/comments", "author": null, "committer": null, "parents": [{"sha": "d04b0c75794545f1f7a942764285e21eaf2915a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d04b0c75794545f1f7a942764285e21eaf2915a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d04b0c75794545f1f7a942764285e21eaf2915a1"}], "stats": {"total": 18, "additions": 17, "deletions": 1}, "files": [{"sha": "94ca3bc633edb2baba22dc2375a7b682e240fa56", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8b3861496bffae8b813ea196c1c5b27f79fbe69/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8b3861496bffae8b813ea196c1c5b27f79fbe69/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=a8b3861496bffae8b813ea196c1c5b27f79fbe69", "patch": "@@ -29097,7 +29097,13 @@ alias_ctad_tweaks (tree tmpl, tree uguides)\n \t  /* Substitute the deduced arguments plus the rewritten template\n \t     parameters into f to get g.  This covers the type, copyness,\n \t     guideness, and explicit-specifier.  */\n-\t  tree g = tsubst_decl (DECL_TEMPLATE_RESULT (f), targs, complain);\n+\t  tree g;\n+\t    {\n+\t      /* Parms are to have DECL_CHAIN tsubsted, which would be skipped\n+\t\t if cp_unevaluated_operand.  */\n+\t      cp_evaluated ev;\n+\t      g = tsubst_decl (DECL_TEMPLATE_RESULT (f), targs, complain);\n+\t    }\n \t  if (g == error_mark_node)\n \t    continue;\n \t  DECL_USE_TEMPLATE (g) = 0;"}, {"sha": "a473fff5dc75983956ebb563d236de39eb4ab86a", "filename": "gcc/testsuite/g++.dg/cpp2a/class-deduction-alias10.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8b3861496bffae8b813ea196c1c5b27f79fbe69/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fclass-deduction-alias10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8b3861496bffae8b813ea196c1c5b27f79fbe69/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fclass-deduction-alias10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fclass-deduction-alias10.C?ref=a8b3861496bffae8b813ea196c1c5b27f79fbe69", "patch": "@@ -0,0 +1,10 @@\n+// PR c++/101233\n+// { dg-do compile { target c++20 } }\n+\n+template<class T, class U>\n+struct A { A(T, U); };\n+\n+template<class T, class U>\n+using B = A<U, T>;\n+\n+using type = decltype(B{0, 0});"}]}