{"sha": "3b36246bc2121221e9ef15f29f03a38c0811b7db", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2IzNjI0NmJjMjEyMTIyMWU5ZWYxNWYyOWYwM2EzOGMwODExYjdkYg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2017-11-19T22:36:25Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2017-11-19T22:36:25Z"}, "message": "re PR ada/83016 (gnat1: warning: command line option \u2018-nostdinc++\u2019 is valid for C++/ObjC++ but not for Ada)\n\n\tPR ada/83016\n\t* gnatlink.adb (Process_Args): Accept multiple switches for --LINK.\n\t(Usage): Adjust.\n\t* gcc-interface/Makefile.in (GCC_LINK): Remove $(ADA_INCLUDES).\n\t(common-tools): Pass $(CC) as --GCC= and $(GCC_LINK) as --LINK= in\n\tthe invocations of $(GNATLINK).\n\t(../../gnatdll$(exeext)): Likewise.\n\t(../../vxaddr2line$(exeext)): Likewise.\n\t(gnatmake-re): Likewise.\n\t(gnatlink-re): Likewise.\n\nFrom-SVN: r254940", "tree": {"sha": "7b765c9944291089662c565f40e06f0beedeaf18", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7b765c9944291089662c565f40e06f0beedeaf18"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3b36246bc2121221e9ef15f29f03a38c0811b7db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b36246bc2121221e9ef15f29f03a38c0811b7db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b36246bc2121221e9ef15f29f03a38c0811b7db", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b36246bc2121221e9ef15f29f03a38c0811b7db/comments", "author": null, "committer": null, "parents": [{"sha": "290295fdf8749df0ab2f69d7e95198d4511cc1d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/290295fdf8749df0ab2f69d7e95198d4511cc1d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/290295fdf8749df0ab2f69d7e95198d4511cc1d8"}], "stats": {"total": 81, "additions": 58, "deletions": 23}, "files": [{"sha": "1d829f2040af468f8ec74b7543a1460ba143353f", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b36246bc2121221e9ef15f29f03a38c0811b7db/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b36246bc2121221e9ef15f29f03a38c0811b7db/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=3b36246bc2121221e9ef15f29f03a38c0811b7db", "patch": "@@ -1,3 +1,16 @@\n+2017-11-20  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\tPR ada/83016\n+\t* gnatlink.adb (Process_Args): Accept multiple switches for --LINK.\n+\t(Usage): Adjust.\n+\t* gcc-interface/Makefile.in (GCC_LINK): Remove $(ADA_INCLUDES).\n+\t(common-tools): Pass $(CC) as --GCC= and $(GCC_LINK) as --LINK= in\n+\tthe invocations of $(GNATLINK).\n+\t(../../gnatdll$(exeext)): Likewise.\n+\t(../../vxaddr2line$(exeext)): Likewise.\n+\t(gnatmake-re): Likewise.\n+\t(gnatlink-re): Likewise.\n+\n 2017-11-16  Doug Rupp  <rupp@adacore.com>\n \n \t* gcc-interface/Makefile.in: Merge Aarch64 and ARM \"ifeq\" blocks.\n@@ -32,7 +45,7 @@\n \n \t* doc/gnat_ugn/gnat_utility_programs.rst (GNAT UGN): Add\n \tgnatsymbolize documentation.\n-\t* gnat_ugn.texi:\u00a0Regenerate.\n+\t* gnat_ugn.texi: Regenerate.\n \n 2017-11-16  Steve Baird  <baird@adacore.com>\n "}, {"sha": "a6da00ec92c312a80236104b80579a760386ce18", "filename": "gcc/ada/gcc-interface/Makefile.in", "status": "modified", "additions": 16, "deletions": 14, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b36246bc2121221e9ef15f29f03a38c0811b7db/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b36246bc2121221e9ef15f29f03a38c0811b7db/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMakefile.in?ref=3b36246bc2121221e9ef15f29f03a38c0811b7db", "patch": "@@ -2111,7 +2111,7 @@ TOOLS_FLAGS_TO_PASS=\t\t\\\n \t\"GNATLINK=$(GNATLINK)\"\t\\\n \t\"GNATBIND=$(GNATBIND)\"\n \n-GCC_LINK=$(CXX) $(GCC_LINK_FLAGS) $(ADA_INCLUDES) $(LDFLAGS)\n+GCC_LINK=$(CXX) $(GCC_LINK_FLAGS) $(LDFLAGS)\n \n # Build directory for the tools. Let's copy the target-dependent\n # sources using the same mechanism as for gnatlib. The other sources are\n@@ -2183,40 +2183,42 @@ common-tools: ../stamp-tools\n \t  gnatchop gnatcmd gnatkr gnatls gnatprep gnatxref gnatfind gnatname \\\n \t  gnatclean -bargs $(ADA_INCLUDES) $(GNATBIND_FLAGS)\n \t$(GNATLINK) -v gnatcmd -o ../../gnat$(exeext) \\\n-\t\t--GCC=\"$(GCC_LINK)\" $(TOOLS_LIBS)\n+\t  --GCC=\"$(CC) $(ADA_INCLUDES)\" --LINK=\"$(GCC_LINK)\" $(TOOLS_LIBS)\n \t$(GNATLINK) -v gnatchop -o ../../gnatchop$(exeext) \\\n-\t\t--GCC=\"$(GCC_LINK)\" $(TOOLS_LIBS)\n+\t  --GCC=\"$(CC) $(ADA_INCLUDES)\" --LINK=\"$(GCC_LINK)\" $(TOOLS_LIBS)\n \t$(GNATLINK) -v gnatkr -o ../../gnatkr$(exeext) \\\n-\t\t--GCC=\"$(GCC_LINK)\" $(TOOLS_LIBS)\n+\t  --GCC=\"$(CC) $(ADA_INCLUDES)\" --LINK=\"$(GCC_LINK)\" $(TOOLS_LIBS)\n \t$(GNATLINK) -v gnatls -o ../../gnatls$(exeext) \\\n-\t\t--GCC=\"$(GCC_LINK)\" $(TOOLS_LIBS)\n+\t  --GCC=\"$(CC) $(ADA_INCLUDES)\" --LINK=\"$(GCC_LINK)\" $(TOOLS_LIBS)\n \t$(GNATLINK) -v gnatprep -o ../../gnatprep$(exeext) \\\n-\t\t--GCC=\"$(GCC_LINK)\" $(TOOLS_LIBS)\n+\t  --GCC=\"$(CC) $(ADA_INCLUDES)\" --LINK=\"$(GCC_LINK)\" $(TOOLS_LIBS)\n \t$(GNATLINK) -v gnatxref -o ../../gnatxref$(exeext) \\\n-\t\t--GCC=\"$(GCC_LINK)\" $(TOOLS_LIBS)\n+\t  --GCC=\"$(CC) $(ADA_INCLUDES)\" --LINK=\"$(GCC_LINK)\" $(TOOLS_LIBS)\n \t$(GNATLINK) -v gnatfind -o ../../gnatfind$(exeext) \\\n-\t\t--GCC=\"$(GCC_LINK)\" $(TOOLS_LIBS)\n+\t  --GCC=\"$(CC) $(ADA_INCLUDES)\" --LINK=\"$(GCC_LINK)\" $(TOOLS_LIBS)\n \t$(GNATLINK) -v gnatname -o ../../gnatname$(exeext) \\\n-\t\t--GCC=\"$(GCC_LINK)\" $(TOOLS_LIBS)\n+\t  --GCC=\"$(CC) $(ADA_INCLUDES)\" --LINK=\"$(GCC_LINK)\" $(TOOLS_LIBS)\n \t$(GNATLINK) -v gnatclean -o ../../gnatclean$(exeext) \\\n-\t\t--GCC=\"$(GCC_LINK)\" $(TOOLS_LIBS)\n+\t  --GCC=\"$(CC) $(ADA_INCLUDES)\" --LINK=\"$(GCC_LINK)\" $(TOOLS_LIBS)\n \n ../../gnatdll$(exeext): ../stamp-tools\n \t$(GNATMAKE) -c $(ADA_INCLUDES) gnatdll --GCC=\"$(CC) $(ALL_ADAFLAGS)\"\n \t$(GNATBIND) $(ADA_INCLUDES) $(GNATBIND_FLAGS) gnatdll\n-\t$(GNATLINK) -v gnatdll -o $@ --GCC=\"$(GCC_LINK)\" $(TOOLS_LIBS)\n+\t$(GNATLINK) -v gnatdll -o $@ \\\n+\t  --GCC=\"$(CC) $(ADA_INCLUDES)\" --LINK=\"$(GCC_LINK)\" $(TOOLS_LIBS)\n \n ../../vxaddr2line$(exeext): ../stamp-tools\n \t$(GNATMAKE) -c  $(ADA_INCLUDES) vxaddr2line --GCC=\"$(CC) $(ALL_ADAFLAGS)\"\n \t$(GNATBIND) $(ADA_INCLUDES) $(GNATBIND_FLAGS) vxaddr2line\n-\t$(GNATLINK) -v vxaddr2line -o $@ --GCC=\"$(GCC_LINK)\" ../targext.o $(CLIB)\n+\t$(GNATLINK) -v vxaddr2line -o $@ \\\n+\t  --GCC=\"$(CC) $(ADA_INCLUDES)\" --LINK=\"$(GCC_LINK)\" ../targext.o $(CLIB)\n \n gnatmake-re: ../stamp-tools\n \t$(GNATMAKE) -j0 $(ADA_INCLUDES) -u sdefault --GCC=\"$(CC) $(MOST_ADA_FLAGS)\"\n \t$(GNATMAKE) -j0 -c $(ADA_INCLUDES) gnatmake --GCC=\"$(CC) $(ALL_ADAFLAGS)\"\n \t$(GNATBIND) $(ADA_INCLUDES) $(GNATBIND_FLAGS) gnatmake\n \t$(GNATLINK) -v gnatmake -o ../../gnatmake$(exeext) \\\n-\t\t--GCC=\"$(GCC_LINK)\" $(TOOLS_LIBS)\n+\t  --GCC=\"$(CC) $(ADA_INCLUDES)\" --LINK=\"$(GCC_LINK)\" $(TOOLS_LIBS)\n \n # Note the use of the \"mv\" command in order to allow gnatlink to be linked with\n # with the former version of gnatlink itself which cannot override itself.\n@@ -2226,7 +2228,7 @@ gnatlink-re: ../stamp-tools gnatmake-re\n \t$(GNATMAKE) -j0 -c $(ADA_INCLUDES) gnatlink --GCC=\"$(CC) $(ALL_ADAFLAGS)\"\n \t$(GNATBIND) $(ADA_INCLUDES) $(GNATBIND_FLAGS) gnatlink\n \t$(GNATLINK) -v gnatlink -o ../../gnatlinknew$(exeext) \\\n-\t\t    --GCC=\"$(GCC_LINK)\" $(TOOLS_LIBS)\n+\t  --GCC=\"$(CC) $(ADA_INCLUDES)\" --LINK=\"$(GCC_LINK)\" $(TOOLS_LIBS)\n \t$(MV)  ../../gnatlinknew$(exeext)  ../../gnatlink$(exeext)\n \n # Needs to be built with CC=gcc"}, {"sha": "4b7f21d97e1bb0e4d579116cb32150aec49ada89", "filename": "gcc/ada/gnatlink.adb", "status": "modified", "additions": 28, "deletions": 8, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b36246bc2121221e9ef15f29f03a38c0811b7db/gcc%2Fada%2Fgnatlink.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b36246bc2121221e9ef15f29f03a38c0811b7db/gcc%2Fada%2Fgnatlink.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatlink.adb?ref=3b36246bc2121221e9ef15f29f03a38c0811b7db", "patch": "@@ -529,15 +529,35 @@ procedure Gnatlink is\n                      Exit_With_Error (\"Missing argument for --LINK=\");\n                   end if;\n \n-                  Linker_Path :=\n-                    System.OS_Lib.Locate_Exec_On_Path (Arg (8 .. Arg'Last));\n+                  declare\n+                     L_Args : constant Argument_List_Access :=\n+                               Argument_String_To_List (Arg (8 .. Arg'Last));\n+                  begin\n+                     --  The linker program is the first argument\n+\n+                     Linker_Path :=\n+                      System.OS_Lib.Locate_Exec_On_Path (L_Args.all (1).all);\n+\n+                     if Linker_Path = null then\n+                        Exit_With_Error\n+                          (\"Could not locate linker: \" & L_Args.all (1).all);\n+                     end if;\n+\n+                     --  The other arguments are passed as-is to the linker\n+\n+                     for J in 2 .. L_Args.all'Last loop\n+                        Gcc_Linker_Options.Increment_Last;\n+                        Gcc_Linker_Options.Table\n+                          (Gcc_Linker_Options.Last) :=\n+                                             new String'(L_Args.all (J).all);\n+                     end loop;\n+                  end;\n \n-                  if Linker_Path = null then\n-                     Exit_With_Error\n-                       (\"Could not locate linker: \" & Arg (8 .. Arg'Last));\n+               elsif Arg'Length >= 6 and then Arg (1 .. 6) = \"--GCC=\" then\n+                  if Arg'Length = 6 then\n+                     Exit_With_Error (\"Missing argument for --GCC=\");\n                   end if;\n \n-               elsif Arg'Length > 6 and then Arg (1 .. 6) = \"--GCC=\" then\n                   declare\n                      Program_Args : constant Argument_List_Access :=\n                                       Argument_String_To_List\n@@ -1413,8 +1433,8 @@ procedure Gnatlink is\n          Write_Line (\"  -M         Create map file mainprog.map\");\n       end if;\n \n-      Write_Line (\"  --GCC=comp Use comp as the compiler\");\n-      Write_Line (\"  --LINK=nam Use 'nam' for the linking rather than 'gcc'\");\n+      Write_Line (\"  --GCC=comp Use 'comp' as the compiler rather than 'gcc'\");\n+      Write_Line (\"  --LINK=lnk Use 'lnk' as the linker rather than 'gcc'\");\n       Write_Eol;\n       Write_Line (\"  [non-Ada-objects]  list of non Ada object files\");\n       Write_Line (\"  [linker-options]   other options for the linker\");"}]}