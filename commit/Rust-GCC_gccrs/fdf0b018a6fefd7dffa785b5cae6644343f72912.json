{"sha": "fdf0b018a6fefd7dffa785b5cae6644343f72912", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmRmMGIwMThhNmZlZmQ3ZGZmYTc4NWI1Y2FlNjY0NDM0M2Y3MjkxMg==", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@axis.com", "date": "2010-09-27T19:55:29Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@gcc.gnu.org", "date": "2010-09-27T19:55:29Z"}, "message": "re PR rtl-optimization/45792 (cris-elf build failure (hangs) due to fix for PR44374)\n\n\tPR rtl-optimization/45792\n\t* cfgcleanup.c (try_head_merge_bb): New rtx vector nextptr.\n\tIf not all insns are to be merged, for each edge, stash the\n\tnext candidate after the to-be-merged insns before doing the\n\tmerge, and use them for the retry at the new insertion point.\n\tHandle CC0 targets when retrying.\n\nCo-Authored-By: Bernd Schmidt <bernds@codesourcery.com>\n\nFrom-SVN: r164663", "tree": {"sha": "ce69be03d7ed2ceb937c270359ca6eb571472c46", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ce69be03d7ed2ceb937c270359ca6eb571472c46"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fdf0b018a6fefd7dffa785b5cae6644343f72912", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fdf0b018a6fefd7dffa785b5cae6644343f72912", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fdf0b018a6fefd7dffa785b5cae6644343f72912", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fdf0b018a6fefd7dffa785b5cae6644343f72912/comments", "author": {"login": "hpataxisdotcom", "id": 80339731, "node_id": "MDQ6VXNlcjgwMzM5NzMx", "avatar_url": "https://avatars.githubusercontent.com/u/80339731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hpataxisdotcom", "html_url": "https://github.com/hpataxisdotcom", "followers_url": "https://api.github.com/users/hpataxisdotcom/followers", "following_url": "https://api.github.com/users/hpataxisdotcom/following{/other_user}", "gists_url": "https://api.github.com/users/hpataxisdotcom/gists{/gist_id}", "starred_url": "https://api.github.com/users/hpataxisdotcom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hpataxisdotcom/subscriptions", "organizations_url": "https://api.github.com/users/hpataxisdotcom/orgs", "repos_url": "https://api.github.com/users/hpataxisdotcom/repos", "events_url": "https://api.github.com/users/hpataxisdotcom/events{/privacy}", "received_events_url": "https://api.github.com/users/hpataxisdotcom/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7458026b018e6635b9d1bae9ec3b9f4738c3d94a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7458026b018e6635b9d1bae9ec3b9f4738c3d94a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7458026b018e6635b9d1bae9ec3b9f4738c3d94a"}], "stats": {"total": 52, "additions": 43, "deletions": 9}, "files": [{"sha": "e767db3d2ca8ffabbb9f656635f1a6c34c5900dc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fdf0b018a6fefd7dffa785b5cae6644343f72912/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fdf0b018a6fefd7dffa785b5cae6644343f72912/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fdf0b018a6fefd7dffa785b5cae6644343f72912", "patch": "@@ -1,3 +1,13 @@\n+2010-09-27  Hans-Peter Nilsson  <hp@axis.com>\n+\t    Bernd Schmidt  <bernds@codesourcery.com>\n+\n+\tPR rtl-optimization/45792\n+\t* cfgcleanup.c (try_head_merge_bb): New rtx vector nextptr.\n+\tIf not all insns are to be merged, for each edge, stash the\n+\tnext candidate after the to-be-merged insns before doing the\n+\tmerge, and use them for the retry at the new insertion point.\n+\tHandle CC0 targets when retrying.\n+\n 2010-09-27  Ian Lance Taylor  <iant@google.com>\n \n \t* common.opt (fsplit-stack): New option."}, {"sha": "d28ae6fb0df3612a128ba0cd6655c27b2ba4fb93", "filename": "gcc/cfgcleanup.c", "status": "modified", "additions": 33, "deletions": 9, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fdf0b018a6fefd7dffa785b5cae6644343f72912/gcc%2Fcfgcleanup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fdf0b018a6fefd7dffa785b5cae6644343f72912/gcc%2Fcfgcleanup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgcleanup.c?ref=fdf0b018a6fefd7dffa785b5cae6644343f72912", "patch": "@@ -1944,7 +1944,7 @@ try_head_merge_bb (basic_block bb)\n   basic_block final_dest_bb = NULL;\n   int max_match = INT_MAX;\n   edge e0;\n-  rtx *headptr, *currptr;\n+  rtx *headptr, *currptr, *nextptr;\n   bool changed, moveall;\n   unsigned ix;\n   rtx e0_last_head, cond, move_before;\n@@ -2077,6 +2077,7 @@ try_head_merge_bb (basic_block bb)\n \n   currptr = XNEWVEC (rtx, nedges);\n   headptr = XNEWVEC (rtx, nedges);\n+  nextptr = XNEWVEC (rtx, nedges);\n \n   for (ix = 0; ix < nedges; ix++)\n     {\n@@ -2132,6 +2133,14 @@ try_head_merge_bb (basic_block bb)\n \n \t  /* Try again, using a different insertion point.  */\n \t  move_before = jump;\n+\n+#ifdef HAVE_cc0\n+\t  /* Don't try moving before a cc0 user, as that may invalidate\n+\t     the cc0.  */\n+\t  if (reg_mentioned_p (cc0_rtx, jump))\n+\t    break;\n+#endif\n+\n \t  continue;\n \t}\n \n@@ -2155,6 +2164,18 @@ try_head_merge_bb (basic_block bb)\n \t    }\n \t}\n \n+      /* If we can't currently move all of the identical insns, remember\n+\t each insn after the range that we'll merge.  */\n+      if (!moveall)\n+\tfor (ix = 0; ix < nedges; ix++)\n+\t  {\n+\t    rtx curr = currptr[ix];\n+\t    do\n+\t      curr = NEXT_INSN (curr);\n+\t    while (!NONDEBUG_INSN_P (curr));\n+\t    nextptr[ix] = curr;\n+\t  }\n+\n       reorder_insns (headptr[0], currptr[0], PREV_INSN (move_before));\n       df_set_bb_dirty (EDGE_SUCC (bb, 0)->dest);\n       if (final_dest_bb != NULL)\n@@ -2170,23 +2191,26 @@ try_head_merge_bb (basic_block bb)\n \t  if (jump == move_before)\n \t    break;\n \n-\t  /* Try again, using a different insertion point.  */\n+\t  /* For the unmerged insns, try a different insertion point.  */\n \t  move_before = jump;\n+\n+#ifdef HAVE_cc0\n+\t  /* Don't try moving before a cc0 user, as that may invalidate\n+\t     the cc0.  */\n+\t  if (reg_mentioned_p (cc0_rtx, jump))\n+\t    break;\n+#endif\n+\n \t  for (ix = 0; ix < nedges; ix++)\n-\t    {\n-\t      rtx curr = currptr[ix];\n-\t      do\n-\t\tcurr = NEXT_INSN (curr);\n-\t      while (!NONDEBUG_INSN_P (curr));\n-\t      currptr[ix] = headptr[ix] = curr;\n-\t    }\n+\t    currptr[ix] = headptr[ix] = nextptr[ix];\n \t}\n     }\n   while (!moveall);\n \n  out:\n   free (currptr);\n   free (headptr);\n+  free (nextptr);\n \n   crossjumps_occured |= changed;\n "}]}