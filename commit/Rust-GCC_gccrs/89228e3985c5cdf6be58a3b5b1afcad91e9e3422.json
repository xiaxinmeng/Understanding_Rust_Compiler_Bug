{"sha": "89228e3985c5cdf6be58a3b5b1afcad91e9e3422", "node_id": "C_kwDOANBUbNoAKDg5MjI4ZTM5ODVjNWNkZjZiZTU4YTNiNWIxYWZjYWQ5MWU5ZTM0MjI", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-10-07T08:28:56Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-10-07T12:27:37Z"}, "message": "tree-optimization/107153 - autopar SSA update issue\n\nautopar performs insertion of stores, eventually requiring a\nvirtual loop PHI and assorted LC PHI adjustments which we intend\nto do once after the pass finishes.  But we also perform intermediate\nupdate_ssa after loop duplication which can lose this fact.  The\nfollowing forces renaming of the virtual operand before the final\nSSA update to fix that.  It also removes the explicit update_ssa\ncall from the gimple_duplicate_sese_tail utility as has been done\nfor all other such utilities and instead performs the SSA update\nfrom autopar.\n\n\tPR tree-optimization/107153\n\t* tree-cfg.cc (gimple_duplicate_sese_tail): Do not update\n\tSSA form here.\n\t* tree-parloops.cc (gen_parallel_loop): Update SSA form\n\tafter to-exit-first transform, no PHI insertion is necessary.\n\t(pass_parallelize_loops::execute): Force re-write of the\n\tvirtual operand SSA web.\n\n\t* gcc.dg/autopar/pr107153.c: New testcase.", "tree": {"sha": "64cb2893ff0393c6e3f5c4032dfd03054febeb55", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/64cb2893ff0393c6e3f5c4032dfd03054febeb55"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/89228e3985c5cdf6be58a3b5b1afcad91e9e3422", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89228e3985c5cdf6be58a3b5b1afcad91e9e3422", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89228e3985c5cdf6be58a3b5b1afcad91e9e3422", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89228e3985c5cdf6be58a3b5b1afcad91e9e3422/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6bd2c1231a95e257dd590754430bdb191b3bca11", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6bd2c1231a95e257dd590754430bdb191b3bca11", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6bd2c1231a95e257dd590754430bdb191b3bca11"}], "stats": {"total": 24, "additions": 22, "deletions": 2}, "files": [{"sha": "2391a674d63e5c8f007f4d096efcfe1724d5db0a", "filename": "gcc/testsuite/gcc.dg/autopar/pr107153.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89228e3985c5cdf6be58a3b5b1afcad91e9e3422/gcc%2Ftestsuite%2Fgcc.dg%2Fautopar%2Fpr107153.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89228e3985c5cdf6be58a3b5b1afcad91e9e3422/gcc%2Ftestsuite%2Fgcc.dg%2Fautopar%2Fpr107153.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fautopar%2Fpr107153.c?ref=89228e3985c5cdf6be58a3b5b1afcad91e9e3422", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O1 -floop-parallelize-all -ftree-parallelize-loops=2 -fno-tree-dominator-opts\" } */\n+\n+void\n+foo (int x, int y)\n+{\n+  int i;\n+\n+  for (i = 0; i < 2; i++)\n+    {\n+    }\n+\n+  while (x)\n+    if (!y)\n+      while (y)\n+        ++y;\n+}"}, {"sha": "42f40f17c56f815e4f751f0b4d4853a797f40057", "filename": "gcc/tree-cfg.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89228e3985c5cdf6be58a3b5b1afcad91e9e3422/gcc%2Ftree-cfg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89228e3985c5cdf6be58a3b5b1afcad91e9e3422/gcc%2Ftree-cfg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.cc?ref=89228e3985c5cdf6be58a3b5b1afcad91e9e3422", "patch": "@@ -6926,8 +6926,6 @@ gimple_duplicate_sese_tail (edge entry, edge exit,\n   /* Anything that is outside of the region, but was dominated by something\n      inside needs to update dominance info.  */\n   iterate_fix_dominators (CDI_DOMINATORS, doms, false);\n-  /* Update the SSA web.  */\n-  update_ssa (TODO_update_ssa);\n \n   if (free_region_copy)\n     free (region_copy);"}, {"sha": "e680d97dd0497846aa825a319265cc871495b66e", "filename": "gcc/tree-parloops.cc", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89228e3985c5cdf6be58a3b5b1afcad91e9e3422/gcc%2Ftree-parloops.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89228e3985c5cdf6be58a3b5b1afcad91e9e3422/gcc%2Ftree-parloops.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-parloops.cc?ref=89228e3985c5cdf6be58a3b5b1afcad91e9e3422", "patch": "@@ -3131,6 +3131,7 @@ gen_parallel_loop (class loop *loop,\n \t to the exit of the loop.  */\n       transform_to_exit_first_loop (loop, reduction_list, nit);\n     }\n+  update_ssa (TODO_update_ssa_no_phi);\n \n   /* Generate initializations for reductions.  */\n   if (!reduction_list->is_empty ())\n@@ -4215,6 +4216,10 @@ pass_parallelize_loops::execute (function *fun)\n \n       checking_verify_loop_structure ();\n \n+      /* ???  Intermediate SSA updates with no PHIs might have lost\n+\t the virtual operand renaming needed by separate_decls_in_region,\n+\t make sure to rename them again.  */\n+      mark_virtual_operands_for_renaming (fun);\n       update_ssa (TODO_update_ssa);\n       if (in_loop_pipeline)\n \trewrite_into_loop_closed_ssa (NULL, 0);"}]}