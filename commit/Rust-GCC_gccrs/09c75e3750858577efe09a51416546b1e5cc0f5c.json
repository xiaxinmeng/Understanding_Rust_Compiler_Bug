{"sha": "09c75e3750858577efe09a51416546b1e5cc0f5c", "node_id": "C_kwDOANBUbNoAKDA5Yzc1ZTM3NTA4NTg1NzdlZmUwOWE1MTQxNjU0NmIxZTVjYzBmNWM", "commit": {"author": {"name": "Pierre-Emmanuel Patry", "email": "pierre-emmanuel.patry@embecosm.com", "date": "2023-02-20T12:31:52Z"}, "committer": {"name": "Pierre-Emmanuel Patry", "email": "pierre-emmanuel.patry@embecosm.com", "date": "2023-03-30T11:52:30Z"}, "message": "libproc_macro: Implement Extend for TokenStream\n\nImplement extension from TokenTree and TokenStream iterators on\nTokenStream rust type.\n\nChangeLog:\n\n\t* librust/proc_macro/rust/bridge/token_stream.rs: Add internal\n\timplementation for TokenStream extension.\n\t* librust/proc_macro/rust/lib.rs: Add call to internal.\n\nSigned-off-by: Pierre-Emmanuel Patry <pierre-emmanuel.patry@embecosm.com>", "tree": {"sha": "a2dbba7925f0b1af4667f6172821cfeedd362247", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a2dbba7925f0b1af4667f6172821cfeedd362247"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/09c75e3750858577efe09a51416546b1e5cc0f5c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09c75e3750858577efe09a51416546b1e5cc0f5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09c75e3750858577efe09a51416546b1e5cc0f5c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09c75e3750858577efe09a51416546b1e5cc0f5c/comments", "author": {"login": "P-E-P", "id": 32375388, "node_id": "MDQ6VXNlcjMyMzc1Mzg4", "avatar_url": "https://avatars.githubusercontent.com/u/32375388?v=4", "gravatar_id": "", "url": "https://api.github.com/users/P-E-P", "html_url": "https://github.com/P-E-P", "followers_url": "https://api.github.com/users/P-E-P/followers", "following_url": "https://api.github.com/users/P-E-P/following{/other_user}", "gists_url": "https://api.github.com/users/P-E-P/gists{/gist_id}", "starred_url": "https://api.github.com/users/P-E-P/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/P-E-P/subscriptions", "organizations_url": "https://api.github.com/users/P-E-P/orgs", "repos_url": "https://api.github.com/users/P-E-P/repos", "events_url": "https://api.github.com/users/P-E-P/events{/privacy}", "received_events_url": "https://api.github.com/users/P-E-P/received_events", "type": "User", "site_admin": false}, "committer": {"login": "P-E-P", "id": 32375388, "node_id": "MDQ6VXNlcjMyMzc1Mzg4", "avatar_url": "https://avatars.githubusercontent.com/u/32375388?v=4", "gravatar_id": "", "url": "https://api.github.com/users/P-E-P", "html_url": "https://github.com/P-E-P", "followers_url": "https://api.github.com/users/P-E-P/followers", "following_url": "https://api.github.com/users/P-E-P/following{/other_user}", "gists_url": "https://api.github.com/users/P-E-P/gists{/gist_id}", "starred_url": "https://api.github.com/users/P-E-P/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/P-E-P/subscriptions", "organizations_url": "https://api.github.com/users/P-E-P/orgs", "repos_url": "https://api.github.com/users/P-E-P/repos", "events_url": "https://api.github.com/users/P-E-P/events{/privacy}", "received_events_url": "https://api.github.com/users/P-E-P/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f84d6127fe60a968bf331ebb9cec58b16df86852", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f84d6127fe60a968bf331ebb9cec58b16df86852", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f84d6127fe60a968bf331ebb9cec58b16df86852"}], "stats": {"total": 26, "additions": 22, "deletions": 4}, "files": [{"sha": "027f450b8261e6ea43b77d816b0358fb821e58d0", "filename": "librust/proc_macro/rust/bridge/token_stream.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09c75e3750858577efe09a51416546b1e5cc0f5c/librust%2Fproc_macro%2Frust%2Fbridge%2Ftoken_stream.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09c75e3750858577efe09a51416546b1e5cc0f5c/librust%2Fproc_macro%2Frust%2Fbridge%2Ftoken_stream.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/librust%2Fproc_macro%2Frust%2Fbridge%2Ftoken_stream.rs?ref=09c75e3750858577efe09a51416546b1e5cc0f5c", "patch": "@@ -85,3 +85,21 @@ impl TokenStream {\n         result\n     }\n }\n+\n+impl Extend<ExternalTokenTree> for TokenStream {\n+    fn extend<I: IntoIterator<Item = ExternalTokenTree>>(&mut self, trees: I) {\n+        for tt in trees {\n+            self.push(tt.into())\n+        }\n+    }\n+}\n+\n+impl Extend<ExternalTokenStream> for TokenStream {\n+    fn extend<I: IntoIterator<Item = ExternalTokenStream>>(&mut self, streams: I) {\n+        for stream in streams {\n+            for tt in stream {\n+                self.push(tt.into());\n+            }\n+        }\n+    }\n+}"}, {"sha": "31676f151993c86fe355e934a81a3d153312e2d9", "filename": "librust/proc_macro/rust/lib.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09c75e3750858577efe09a51416546b1e5cc0f5c/librust%2Fproc_macro%2Frust%2Flib.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09c75e3750858577efe09a51416546b1e5cc0f5c/librust%2Fproc_macro%2Frust%2Flib.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/librust%2Fproc_macro%2Frust%2Flib.rs?ref=09c75e3750858577efe09a51416546b1e5cc0f5c", "patch": "@@ -186,13 +186,13 @@ impl iter::FromIterator<TokenStream> for TokenStream {\n }\n \n impl Extend<TokenTree> for TokenStream {\n-    fn extend<I: IntoIterator<Item = TokenTree>>(&mut self, _trees: I) {\n-        todo!(\"Implement this function\")\n+    fn extend<I: IntoIterator<Item = TokenTree>>(&mut self, trees: I) {\n+        self.0.extend(trees);\n     }\n }\n \n impl Extend<TokenStream> for TokenStream {\n-    fn extend<I: IntoIterator<Item = TokenStream>>(&mut self, _streams: I) {\n-        todo!(\"Implement this function\")\n+    fn extend<I: IntoIterator<Item = TokenStream>>(&mut self, streams: I) {\n+        self.0.extend(streams)\n     }\n }"}]}