{"sha": "c6b51be9d2d12f76ad525d417bd7287a505d28f9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzZiNTFiZTlkMmQxMmY3NmFkNTI1ZDQxN2JkNzI4N2E1MDVkMjhmOQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-12-14T00:12:10Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-12-14T00:12:10Z"}, "message": "(my_strerror): Return \"cannot access\" if errno is 0.\n\n(perror_with_name, pfatal_with_name, perror_exec): Don't assume that\nthe returned value from my_strerror contains no '%'s.\n(sys_nerr): Declare only if HAVE_STRERROR is not defined.\n\nFrom-SVN: r10714", "tree": {"sha": "64ef5e146223a321c6d4960aa365db172609857e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/64ef5e146223a321c6d4960aa365db172609857e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c6b51be9d2d12f76ad525d417bd7287a505d28f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6b51be9d2d12f76ad525d417bd7287a505d28f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c6b51be9d2d12f76ad525d417bd7287a505d28f9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6b51be9d2d12f76ad525d417bd7287a505d28f9/comments", "author": null, "committer": null, "parents": [{"sha": "493810116d3772f95f5afe23f30d5db7ea3781d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/493810116d3772f95f5afe23f30d5db7ea3781d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/493810116d3772f95f5afe23f30d5db7ea3781d4"}], "stats": {"total": 30, "additions": 6, "deletions": 24}, "files": [{"sha": "d19d11e928f0eb167dc79b0004bb847f18eb291c", "filename": "gcc/gcc.c", "status": "modified", "additions": 6, "deletions": 24, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6b51be9d2d12f76ad525d417bd7287a505d28f9/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6b51be9d2d12f76ad525d417bd7287a505d28f9/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=c6b51be9d2d12f76ad525d417bd7287a505d28f9", "patch": "@@ -175,8 +175,8 @@ extern char *getenv ();\n extern int errno;\n #endif\n \n-extern int sys_nerr;\n #ifndef HAVE_STRERROR\n+extern int sys_nerr;\n #if defined(bsd4_4)\n extern const char *const sys_errlist[];\n #else\n@@ -1023,7 +1023,7 @@ my_strerror(e)\n \n   static char buffer[30];\n   if (!e)\n-    return \"\";\n+    return \"cannot access\";\n \n   if (e > 0 && e < sys_nerr)\n     return sys_errlist[e];\n@@ -4722,40 +4722,22 @@ static void\n pfatal_with_name (name)\n      char *name;\n {\n-  char *s;\n-\n-  if (errno < sys_nerr)\n-    s = concat (\"%s: \", my_strerror( errno ));\n-  else\n-    s = \"cannot open `%s'\";\n-  fatal (s, name);\n+  fatal (\"%s: %s\", name, my_strerror (errno));\n }\n \n static void\n perror_with_name (name)\n      char *name;\n {\n-  char *s;\n-\n-  if (errno < sys_nerr)\n-    s = concat (\"%s: \", my_strerror( errno ));\n-  else\n-    s = \"cannot open `%s'\";\n-  error (s, name);\n+  error (\"%s: %s\", name, my_strerror (errno));\n }\n \n static void\n perror_exec (name)\n      char *name;\n {\n-  char *s;\n-\n-  if (errno < sys_nerr)\n-    s = concat (\"installation problem, cannot exec `%s': \",\n-\t\tmy_strerror (errno));\n-  else\n-    s = \"installation problem, cannot exec `%s'\";\n-  error (s, name);\n+  error (\"installation problem, cannot exec `%s': %s\",\n+\t name, my_strerror (errno));\n }\n \n /* More 'friendly' abort that prints the line and file."}]}