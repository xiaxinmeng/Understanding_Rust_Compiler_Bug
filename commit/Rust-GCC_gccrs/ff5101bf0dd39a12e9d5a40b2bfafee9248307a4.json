{"sha": "ff5101bf0dd39a12e9d5a40b2bfafee9248307a4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmY1MTAxYmYwZGQzOWExMmU5ZDVhNDBiMmJmYWZlZTkyNDgzMDdhNA==", "commit": {"author": {"name": "Andi Kleen", "email": "ak@linux.intel.com", "date": "2014-09-30T04:10:12Z"}, "committer": {"name": "Andi Kleen", "email": "ak@gcc.gnu.org", "date": "2014-09-30T04:10:12Z"}, "message": "Make -Q --help print param defaults and min/max values\n\nMake -Q --help print the --param default, min, max values, similar\nto how it does print the defaults for other flags. This is useful\nto let a option auto tuner automatically query all needed information\nabourt gcc params (previously it needed to access the .def file in\nthe source)\n\ngcc/:\n\n2014-09-29  Andi Kleen  <ak@linux.intel.com>\n\n\t* opts.c (print_filtered_help): Print --param min/max/default\n\twith -Q.\n\nFrom-SVN: r215704", "tree": {"sha": "0d9cbc3c11bf7fac6effcfd547507450952df7ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0d9cbc3c11bf7fac6effcfd547507450952df7ef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ff5101bf0dd39a12e9d5a40b2bfafee9248307a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff5101bf0dd39a12e9d5a40b2bfafee9248307a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff5101bf0dd39a12e9d5a40b2bfafee9248307a4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff5101bf0dd39a12e9d5a40b2bfafee9248307a4/comments", "author": null, "committer": null, "parents": [{"sha": "b3b1547f19735b652463a77fd07d1887c82da2af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3b1547f19735b652463a77fd07d1887c82da2af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b3b1547f19735b652463a77fd07d1887c82da2af"}], "stats": {"total": 16, "additions": 15, "deletions": 1}, "files": [{"sha": "1714cec184490af1a45f266236dd1d409a064400", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff5101bf0dd39a12e9d5a40b2bfafee9248307a4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff5101bf0dd39a12e9d5a40b2bfafee9248307a4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ff5101bf0dd39a12e9d5a40b2bfafee9248307a4", "patch": "@@ -1,3 +1,8 @@\n+2014-09-29  Andi Kleen  <ak@linux.intel.com>\n+\n+\t* opts.c (print_filtered_help): Print --param min/max/default\n+\twith -Q.\n+\n 2014-09-29  Kaz Kojima  <kkojima@gcc.gnu.org>\n \n \t* config/sh/sh.md: Use define_c_enum for \"unspec\" and \"unspecv\"."}, {"sha": "5cb5a39acc7a7493238d1bb8775cc9b63cc6f8b5", "filename": "gcc/opts.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff5101bf0dd39a12e9d5a40b2bfafee9248307a4/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff5101bf0dd39a12e9d5a40b2bfafee9248307a4/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=ff5101bf0dd39a12e9d5a40b2bfafee9248307a4", "patch": "@@ -953,6 +953,7 @@ print_filtered_help (unsigned int include_flags,\n   const char *help;\n   bool found = false;\n   bool displayed = false;\n+  char new_help[128];\n \n   if (include_flags == CL_PARAMS)\n     {\n@@ -971,6 +972,15 @@ print_filtered_help (unsigned int include_flags,\n \t  /* Get the translation.  */\n \t  help = _(help);\n \n+\t  if (!opts->x_quiet_flag)\n+\t    {\n+\t      snprintf (new_help, sizeof (new_help),\n+\t\t\t_(\"default %d minimum %d maximum %d\"),\n+\t\t\tcompiler_params[i].default_value,\n+\t\t\tcompiler_params[i].min_value,\n+\t\t\tcompiler_params[i].max_value);\n+\t      help = new_help;\n+\t    }\n \t  wrap_help (help, param, strlen (param), columns);\n \t}\n       putchar ('\\n');\n@@ -985,7 +995,6 @@ print_filtered_help (unsigned int include_flags,\n \n   for (i = 0; i < cl_options_count; i++)\n     {\n-      char new_help[128];\n       const struct cl_option *option = cl_options + i;\n       unsigned int len;\n       const char *opt;"}]}