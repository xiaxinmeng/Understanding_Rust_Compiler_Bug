{"sha": "348c9efcd3341f49e593a51983a594a7fb764386", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzQ4YzllZmNkMzM0MWY0OWU1OTNhNTE5ODNhNTk0YTdmYjc2NDM4Ng==", "commit": {"author": {"name": "Adam Megacz", "email": "adam@xwt.org", "date": "2002-03-06T22:37:26Z"}, "committer": {"name": "Adam Megacz", "email": "megacz@gcc.gnu.org", "date": "2002-03-06T22:37:26Z"}, "message": "FileDescriptor.java: Initialize in/out/err in init().\n\n2002-03-06  Adam Megacz  <adam@xwt.org>\n\n        * java/io/FileDescriptor.java: Initialize in/out/err in init().\n        * java/io/natFileDescriptorWin32.cc (init()): Added function.\n        * java/io/natFileDescriptorPosix.cc (init()): Added function.\n        * java/io/natFileDescriptorEcos.cc (init()): Added function.\n\nFrom-SVN: r50378", "tree": {"sha": "3ac43b0cddbf1aba8587e5920168b476f8b74f37", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3ac43b0cddbf1aba8587e5920168b476f8b74f37"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/348c9efcd3341f49e593a51983a594a7fb764386", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/348c9efcd3341f49e593a51983a594a7fb764386", "html_url": "https://github.com/Rust-GCC/gccrs/commit/348c9efcd3341f49e593a51983a594a7fb764386", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/348c9efcd3341f49e593a51983a594a7fb764386/comments", "author": null, "committer": null, "parents": [{"sha": "037cfe71e00569f3b623da0a672fbbad2dd6c22f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/037cfe71e00569f3b623da0a672fbbad2dd6c22f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/037cfe71e00569f3b623da0a672fbbad2dd6c22f"}], "stats": {"total": 48, "additions": 44, "deletions": 4}, "files": [{"sha": "90af4e67117d52b36226ebdec5c35014300f878f", "filename": "libjava/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/348c9efcd3341f49e593a51983a594a7fb764386/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/348c9efcd3341f49e593a51983a594a7fb764386/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=348c9efcd3341f49e593a51983a594a7fb764386", "patch": "@@ -1,3 +1,10 @@\n+2002-03-06  Adam Megacz  <adam@xwt.org>\n+\n+        * java/io/FileDescriptor.java: Initialize in/out/err in init().\n+        * java/io/natFileDescriptorWin32.cc (init()): Added function.\n+        * java/io/natFileDescriptorPosix.cc (init()): Added function.\n+        * java/io/natFileDescriptorEcos.cc (init()): Added function.\n+\n 2002-03-06  Eric Blake  <ebb9@email.byu.edu>\n \n \t* scripts/unicode-decomp.pl: Move from chartables.pl, and remove"}, {"sha": "427a26a6e3a96e2899031b987e7251dfdea5274a", "filename": "libjava/java/io/FileDescriptor.java", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/348c9efcd3341f49e593a51983a594a7fb764386/libjava%2Fjava%2Fio%2FFileDescriptor.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/348c9efcd3341f49e593a51983a594a7fb764386/libjava%2Fjava%2Fio%2FFileDescriptor.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FFileDescriptor.java?ref=348c9efcd3341f49e593a51983a594a7fb764386", "patch": "@@ -24,14 +24,20 @@\n // if need be.\n public final class FileDescriptor\n {\n-  public static final FileDescriptor in = new FileDescriptor (0);\n-  public static final FileDescriptor out = new FileDescriptor (1);\n-  public static final FileDescriptor err = new FileDescriptor (2);\n+\n+  public static final FileDescriptor in = null;\n+  public static final FileDescriptor out = null;\n+  public static final FileDescriptor err = null;\n+\n+  private static native void init();\n+  static\n+  {\n+    init();\n+  }\n \n   public native void sync () throws SyncFailedException;\n   public native boolean valid ();\n \n-\n   // These are mode values for open().\n   static final int READ   = 1;\n   static final int WRITE  = 2;"}, {"sha": "81e10e2e559df06d29582840b68c05cb30e0373c", "filename": "libjava/java/io/natFileDescriptorEcos.cc", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/348c9efcd3341f49e593a51983a594a7fb764386/libjava%2Fjava%2Fio%2FnatFileDescriptorEcos.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/348c9efcd3341f49e593a51983a594a7fb764386/libjava%2Fjava%2Fio%2FnatFileDescriptorEcos.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FnatFileDescriptorEcos.cc?ref=348c9efcd3341f49e593a51983a594a7fb764386", "patch": "@@ -41,6 +41,14 @@ diag_write (char *data, int len)\n \n #define NO_FSYNC_MESSAGE \"sync unsupported\"\n \n+void\n+java::io::FileDescriptor::init(void)\n+{\n+  in = new java::io::FileDescriptor((jint)(GetStdHandle (0)));\n+  out = new java::io::FileDescriptor((jint)(GetStdHandle (1)));\n+  err = new java::io::FileDescriptor((jint)(GetStdHandle (2)));\n+}\n+\n jboolean\n java::io::FileDescriptor::valid (void)\n {"}, {"sha": "83a1261de0d771570e421cac9a74b82579a3d735", "filename": "libjava/java/io/natFileDescriptorPosix.cc", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/348c9efcd3341f49e593a51983a594a7fb764386/libjava%2Fjava%2Fio%2FnatFileDescriptorPosix.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/348c9efcd3341f49e593a51983a594a7fb764386/libjava%2Fjava%2Fio%2FnatFileDescriptorPosix.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FnatFileDescriptorPosix.cc?ref=348c9efcd3341f49e593a51983a594a7fb764386", "patch": "@@ -45,6 +45,14 @@ details.  */\n \n #define NO_FSYNC_MESSAGE \"sync unsupported\"\n \n+void\n+java::io::FileDescriptor::init(void)\n+{\n+  in = new java::io::FileDescriptor((jint)(GetStdHandle (0)));\n+  out = new java::io::FileDescriptor((jint)(GetStdHandle (1)));\n+  err = new java::io::FileDescriptor((jint)(GetStdHandle (2)));\n+}\n+\n jboolean\n java::io::FileDescriptor::valid (void)\n {"}, {"sha": "4a9d690bf2c196ec69d3c99f6cff47c20cb15ae1", "filename": "libjava/java/io/natFileDescriptorWin32.cc", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/348c9efcd3341f49e593a51983a594a7fb764386/libjava%2Fjava%2Fio%2FnatFileDescriptorWin32.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/348c9efcd3341f49e593a51983a594a7fb764386/libjava%2Fjava%2Fio%2FnatFileDescriptorWin32.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FnatFileDescriptorWin32.cc?ref=348c9efcd3341f49e593a51983a594a7fb764386", "patch": "@@ -32,6 +32,17 @@ details.  */\n #include <java/lang/Thread.h>\n #include <java/io/FileNotFoundException.h>\n \n+// FIXME: casting a FILE (pointer) to a jint will not work on Win64 --\n+//        we should be using gnu.gcj.RawData's.\n+\n+void\n+java::io::FileDescriptor::init(void)\n+{\n+  in = new java::io::FileDescriptor((jint)(GetStdHandle (STD_INPUT_HANDLE)));\n+  out = new java::io::FileDescriptor((jint)(GetStdHandle (STD_OUTPUT_HANDLE)));\n+  err = new java::io::FileDescriptor((jint)(GetStdHandle (STD_ERROR_HANDLE)));\n+}\n+\n static char *\n winerr (void)\n {"}]}