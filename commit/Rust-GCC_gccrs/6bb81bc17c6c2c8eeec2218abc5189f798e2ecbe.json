{"sha": "6bb81bc17c6c2c8eeec2218abc5189f798e2ecbe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmJiODFiYzE3YzZjMmM4ZWVlYzIyMThhYmM1MTg5Zjc5OGUyZWNiZQ==", "commit": {"author": {"name": "Vincent Celier", "email": "celier@adacore.com", "date": "2007-06-06T10:15:24Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-06-06T10:15:24Z"}, "message": "mlib-tgt-specific.adb, [...]: New files.\n\n2007-04-20  Vincent Celier  <celier@adacore.com>\n\n\t* mlib-tgt-specific.adb, mlib-tgt-specific.ads,\n\tmlib-tgt-vms.adb, mlib-tgt-vms.ads: New files.\n\n\t* mlib-tgt.adb, mlib-tgt.ads, mlib-tgt-darwin.adb, \n\tmlib-tgt-vxworks.adb, mlib-tgt-mingw.adb, mlib-tgt-lynxos.adb, \n\tmlib-tgt-linux.adb, mlib-tgt-solaris.adb, mlib-tgt-vms-alpha.adb, \n\tmlib-tgt-vms-ia64.adb, mlib-tgt-aix.adb, mlib-tgt-irix.adb, \n\tmlib-tgt-hpux.adb, mlib-tgt-tru64.adb: Make a common body for package\n\tMLib.Tgt, containing the default versions\n\tof the exported subprograms. For each platforms, create a specific\n\tversion of the body of new child package MLib.Tgt.Specific that contains\n\tonly the bodies of subprograms that are different from the default.\n\t(Archive_Builder_Append_Options): New function\n\nFrom-SVN: r125366", "tree": {"sha": "e3ad95a5caf09f3f07c1c1bd55bfd20e252e81b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e3ad95a5caf09f3f07c1c1bd55bfd20e252e81b3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6bb81bc17c6c2c8eeec2218abc5189f798e2ecbe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6bb81bc17c6c2c8eeec2218abc5189f798e2ecbe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6bb81bc17c6c2c8eeec2218abc5189f798e2ecbe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6bb81bc17c6c2c8eeec2218abc5189f798e2ecbe/comments", "author": {"login": "vcelier", "id": 8888056, "node_id": "MDQ6VXNlcjg4ODgwNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/8888056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vcelier", "html_url": "https://github.com/vcelier", "followers_url": "https://api.github.com/users/vcelier/followers", "following_url": "https://api.github.com/users/vcelier/following{/other_user}", "gists_url": "https://api.github.com/users/vcelier/gists{/gist_id}", "starred_url": "https://api.github.com/users/vcelier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vcelier/subscriptions", "organizations_url": "https://api.github.com/users/vcelier/orgs", "repos_url": "https://api.github.com/users/vcelier/repos", "events_url": "https://api.github.com/users/vcelier/events{/privacy}", "received_events_url": "https://api.github.com/users/vcelier/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a538d22621e5fe98afa9ab84c5ef9975993df104", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a538d22621e5fe98afa9ab84c5ef9975993df104", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a538d22621e5fe98afa9ab84c5ef9975993df104"}], "stats": {"total": 3725, "additions": 1114, "deletions": 2611}, "files": [{"sha": "9545e8af2bf4ed1174c0871f89cc7bf13f4fd958", "filename": "gcc/ada/mlib-tgt-aix.adb", "status": "modified", "additions": 31, "deletions": 209, "changes": 240, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bb81bc17c6c2c8eeec2218abc5189f798e2ecbe/gcc%2Fada%2Fmlib-tgt-aix.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bb81bc17c6c2c8eeec2218abc5189f798e2ecbe/gcc%2Fada%2Fmlib-tgt-aix.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-tgt-aix.adb?ref=6bb81bc17c6c2c8eeec2218abc5189f798e2ecbe", "patch": "@@ -2,12 +2,12 @@\n --                                                                          --\n --                         GNAT COMPILER COMPONENTS                         --\n --                                                                          --\n---                             M L I B . T G T                              --\n+--                     M L I B . T G T . S P E C I F I C                    --\n --                              (AIX Version)                               --\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 2003-2006, AdaCore                     --\n+--                     Copyright (C) 2003-2007, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -25,22 +25,40 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This package provides a set of target dependent routines to build\n---  static, dynamic or relocatable libraries.\n-\n --  This is the AIX version of the body\n \n with Ada.Strings.Fixed; use Ada.Strings.Fixed;\n \n with MLib.Fil;\n with MLib.Utl;\n-with Namet;    use Namet;\n with Opt;\n with Output;   use Output;\n with Prj.Com;\n with Prj.Util; use Prj.Util;\n \n-package body MLib.Tgt is\n+package body MLib.Tgt.Specific is\n+\n+   --  Non default subprograms\n+\n+   procedure Build_Dynamic_Library\n+     (Ofiles       : Argument_List;\n+      Foreign      : Argument_List;\n+      Afiles       : Argument_List;\n+      Options      : Argument_List;\n+      Options_2    : Argument_List;\n+      Interfaces   : Argument_List;\n+      Lib_Filename : String;\n+      Lib_Dir      : String;\n+      Symbol_Data  : Symbol_Record;\n+      Driver_Name  : Name_Id := No_Name;\n+      Lib_Version  : String  := \"\";\n+      Auto_Init    : Boolean := False);\n+\n+   function DLL_Ext return String;\n+\n+   function Support_For_Libraries return Library_Support;\n+\n+   --  Local variables\n \n    No_Arguments        : aliased Argument_List         := (1 .. 0 => null);\n    Empty_Argument_List : constant Argument_List_Access := No_Arguments'Access;\n@@ -66,51 +84,6 @@ package body MLib.Tgt is\n    --  libgnarl. Depends on the thread library (Native or FSU). Resolved for\n    --  the first library linked against libgnarl.\n \n-   ---------------------\n-   -- Archive_Builder --\n-   ---------------------\n-\n-   function Archive_Builder return String is\n-   begin\n-      return \"ar\";\n-   end Archive_Builder;\n-\n-   -----------------------------\n-   -- Archive_Builder_Options --\n-   -----------------------------\n-\n-   function Archive_Builder_Options return String_List_Access is\n-   begin\n-      return new String_List'(1 => new String'(\"cr\"));\n-   end Archive_Builder_Options;\n-\n-   -----------------\n-   -- Archive_Ext --\n-   -----------------\n-\n-   function Archive_Ext return String is\n-   begin\n-      return \"a\";\n-   end Archive_Ext;\n-\n-   ---------------------\n-   -- Archive_Indexer --\n-   ---------------------\n-\n-   function Archive_Indexer return String is\n-   begin\n-      return \"ranlib\";\n-   end Archive_Indexer;\n-\n-   -----------------------------\n-   -- Archive_Indexer_Options --\n-   -----------------------------\n-\n-   function Archive_Indexer_Options return String_List_Access is\n-   begin\n-      return new String_List (1 .. 0);\n-   end Archive_Indexer_Options;\n-\n    ---------------------------\n    -- Build_Dynamic_Library --\n    ---------------------------\n@@ -217,162 +190,6 @@ package body MLib.Tgt is\n       return \"a\";\n    end DLL_Ext;\n \n-   ----------------\n-   -- DLL_Prefix --\n-   ----------------\n-\n-   function DLL_Prefix return String is\n-   begin\n-      return \"lib\";\n-   end DLL_Prefix;\n-\n-   --------------------\n-   -- Dynamic_Option --\n-   --------------------\n-\n-   function Dynamic_Option return String is\n-   begin\n-      return \"-shared\";\n-   end Dynamic_Option;\n-\n-   -------------------\n-   -- Is_Object_Ext --\n-   -------------------\n-\n-   function Is_Object_Ext (Ext : String) return Boolean is\n-   begin\n-      return Ext = \".o\";\n-   end Is_Object_Ext;\n-\n-   --------------\n-   -- Is_C_Ext --\n-   --------------\n-\n-   function Is_C_Ext (Ext : String) return Boolean is\n-   begin\n-      return Ext = \".c\";\n-   end Is_C_Ext;\n-\n-   --------------------\n-   -- Is_Archive_Ext --\n-   --------------------\n-\n-   function Is_Archive_Ext (Ext : String) return Boolean is\n-   begin\n-      return Ext = \".a\";\n-   end Is_Archive_Ext;\n-\n-   -------------\n-   -- Libgnat --\n-   -------------\n-\n-   function Libgnat return String is\n-   begin\n-      return \"libgnat.a\";\n-   end Libgnat;\n-\n-   ------------------------\n-   -- Library_Exists_For --\n-   ------------------------\n-\n-   function Library_Exists_For\n-     (Project : Project_Id;\n-      In_Tree : Project_Tree_Ref) return Boolean\n-   is\n-   begin\n-      if not In_Tree.Projects.Table (Project).Library then\n-         Prj.Com.Fail (\"INTERNAL ERROR: Library_Exists_For called \" &\n-                       \"for non library project\");\n-         return False;\n-\n-      else\n-         declare\n-            Lib_Dir  : constant String :=\n-                         Get_Name_String\n-                           (In_Tree.Projects.Table (Project).Library_Dir);\n-            Lib_Name : constant String :=\n-                         Get_Name_String\n-                           (In_Tree.Projects.Table (Project).Library_Name);\n-\n-         begin\n-            if In_Tree.Projects.Table (Project).Library_Kind = Static then\n-               return Is_Regular_File\n-                 (Lib_Dir & Directory_Separator & \"lib\" &\n-                  Fil.Append_To (Lib_Name, Archive_Ext));\n-\n-            else\n-               return Is_Regular_File\n-                 (Lib_Dir & Directory_Separator & \"lib\" &\n-                  Fil.Append_To (Lib_Name, DLL_Ext));\n-            end if;\n-         end;\n-      end if;\n-   end Library_Exists_For;\n-\n-   ---------------------------\n-   -- Library_File_Name_For --\n-   ---------------------------\n-\n-   function Library_File_Name_For\n-     (Project : Project_Id;\n-      In_Tree : Project_Tree_Ref) return Name_Id\n-   is\n-   begin\n-      if not In_Tree.Projects.Table (Project).Library then\n-         Prj.Com.Fail (\"INTERNAL ERROR: Library_File_Name_For called \" &\n-                       \"for non library project\");\n-         return No_Name;\n-\n-      else\n-         declare\n-            Lib_Name : constant String :=\n-                         Get_Name_String\n-                           (In_Tree.Projects.Table (Project).Library_Name);\n-\n-         begin\n-            Name_Len := 3;\n-            Name_Buffer (1 .. Name_Len) := \"lib\";\n-\n-            if In_Tree.Projects.Table (Project).Library_Kind =\n-              Static\n-            then\n-               Add_Str_To_Name_Buffer (Fil.Append_To (Lib_Name, Archive_Ext));\n-            else\n-               Add_Str_To_Name_Buffer (Fil.Append_To (Lib_Name, DLL_Ext));\n-            end if;\n-\n-            return Name_Find;\n-         end;\n-      end if;\n-   end Library_File_Name_For;\n-\n-   ----------------\n-   -- Object_Ext --\n-   ----------------\n-\n-   function Object_Ext return String is\n-   begin\n-      return \"o\";\n-   end Object_Ext;\n-\n-   ----------------\n-   -- PIC_Option --\n-   ----------------\n-\n-   function PIC_Option return String is\n-   begin\n-      return \"-fPIC\";\n-   end PIC_Option;\n-\n-   -----------------------------------------------\n-   -- Standalone_Library_Auto_Init_Is_Supported --\n-   -----------------------------------------------\n-\n-   function Standalone_Library_Auto_Init_Is_Supported return Boolean is\n-   begin\n-      return True;\n-   end Standalone_Library_Auto_Init_Is_Supported;\n-\n    ---------------------------\n    -- Support_For_Libraries --\n    ---------------------------\n@@ -382,4 +199,9 @@ package body MLib.Tgt is\n       return Static_Only;\n    end Support_For_Libraries;\n \n-end MLib.Tgt;\n+begin\n+   Build_Dynamic_Library_Ptr := Build_Dynamic_Library'Access;\n+   DLL_Ext_Ptr := DLL_Ext'Access;\n+   Support_For_Libraries_Ptr := Support_For_Libraries'Access;\n+\n+end MLib.Tgt.Specific;"}, {"sha": "3ae2fcfbdb6286f890a146f44a834927b41bc01a", "filename": "gcc/ada/mlib-tgt-darwin.adb", "status": "modified", "additions": 39, "deletions": 206, "changes": 245, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bb81bc17c6c2c8eeec2218abc5189f798e2ecbe/gcc%2Fada%2Fmlib-tgt-darwin.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bb81bc17c6c2c8eeec2218abc5189f798e2ecbe/gcc%2Fada%2Fmlib-tgt-darwin.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-tgt-darwin.adb?ref=6bb81bc17c6c2c8eeec2218abc5189f798e2ecbe", "patch": "@@ -2,12 +2,12 @@\n --                                                                          --\n --                         GNAT COMPILER COMPONENTS                         --\n --                                                                          --\n---                             M L I B . T G T                              --\n+--                     M L I B . T G T . S P E C I F I C                    --\n --                             (Darwin Version)                             --\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2001-2006, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -25,70 +25,53 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This package provides a set of target dependent routines to build\n---  static, dynamic and shared libraries.\n-\n --  This is the Darwin version of the body\n \n with MLib;     use MLib;\n with MLib.Fil;\n with MLib.Utl;\n-with Namet;    use Namet;\n with Opt;      use Opt;\n with Output;   use Output;\n-with Prj.Com;\n \n with System;\n \n-package body MLib.Tgt is\n-\n-   Flat_Namespace : aliased String := \"-Wl,-flat_namespace\";\n-   --  Instruct the linker to build the shared library as a flat\n-   --  namespace image. The default is a two-level namespace image.\n+package body MLib.Tgt.Specific is\n \n-   Shared_Libgcc : aliased String := \"-shared-libgcc\";\n+   --  Non default subprograms\n \n-   No_Shared_Libgcc_Options   : aliased Argument_List :=\n-                                  (1 => Flat_Namespace'Access);\n-   With_Shared_Libgcc_Options : aliased Argument_List :=\n-                                  (1 => Flat_Namespace'Access,\n-                                   2 => Shared_Libgcc'Access);\n+   function Archive_Indexer_Options return String_List_Access;\n \n-   ---------------------\n-   -- Archive_Builder --\n-   ---------------------\n+   procedure Build_Dynamic_Library\n+     (Ofiles       : Argument_List;\n+      Foreign      : Argument_List;\n+      Afiles       : Argument_List;\n+      Options      : Argument_List;\n+      Options_2    : Argument_List;\n+      Interfaces   : Argument_List;\n+      Lib_Filename : String;\n+      Lib_Dir      : String;\n+      Symbol_Data  : Symbol_Record;\n+      Driver_Name  : Name_Id := No_Name;\n+      Lib_Version  : String  := \"\";\n+      Auto_Init    : Boolean := False);\n \n-   function Archive_Builder return String is\n-   begin\n-      return \"ar\";\n-   end Archive_Builder;\n+   function DLL_Ext return String;\n \n-   -----------------------------\n-   -- Archive_Builder_Options --\n-   -----------------------------\n+   function Dynamic_Option return String;\n \n-   function Archive_Builder_Options return String_List_Access is\n-   begin\n-      return new String_List'(1 => new String'(\"cr\"));\n-   end Archive_Builder_Options;\n+   function Is_Archive_Ext (Ext : String) return Boolean;\n \n-   -----------------\n-   -- Archive_Ext --\n-   -----------------\n+   --  Local objects\n \n-   function Archive_Ext return  String is\n-   begin\n-      return \"a\";\n-   end Archive_Ext;\n+   Flat_Namespace : aliased String := \"-Wl,-flat_namespace\";\n+   --  Instruct the linker to build the shared library as a flat\n+   --  namespace image. The default is a two-level namespace image.\n \n-   ---------------------\n-   -- Archive_Indexer --\n-   ---------------------\n+   Shared_Libgcc  : aliased String := \"-shared-libgcc\";\n \n-   function Archive_Indexer return String is\n-   begin\n-      return \"ranlib\";\n-   end Archive_Indexer;\n+   Shared_Options : constant Argument_List :=\n+                               (1 => Flat_Namespace'Access,\n+                                2 => Shared_Libgcc'Access);\n \n    -----------------------------\n    -- Archive_Indexer_Options --\n@@ -127,8 +110,6 @@ package body MLib.Tgt is\n                    Lib_Dir & Directory_Separator & \"lib\" &\n                    Fil.Append_To (Lib_Filename, DLL_Ext);\n \n-      Shared_Options : Argument_List_Access;\n-\n       Symbolic_Link_Needed : Boolean := False;\n \n    begin\n@@ -137,21 +118,13 @@ package body MLib.Tgt is\n          Write_Line (Lib_File);\n       end if;\n \n-      --  Invoke gcc with -shared-libgcc, but only for GCC 4 or higher\n-\n-      if GCC_Version >= 4 then\n-         Shared_Options := With_Shared_Libgcc_Options'Access;\n-      else\n-         Shared_Options := No_Shared_Libgcc_Options'Access;\n-      end if;\n-\n       --  If specified, add automatic elaboration/finalization\n \n       if Lib_Version = \"\" then\n          Utl.Gcc\n            (Output_File => Lib_File,\n             Objects     => Ofiles,\n-            Options     => Options & Shared_Options.all,\n+            Options     => Options & Shared_Options,\n             Driver_Name => Driver_Name,\n             Options_2   => Options_2);\n \n@@ -161,7 +134,7 @@ package body MLib.Tgt is\n             Utl.Gcc\n               (Output_File => Lib_Version,\n                Objects     => Ofiles,\n-               Options     => Options & Shared_Options.all,\n+               Options     => Options & Shared_Options,\n                Driver_Name => Driver_Name,\n                Options_2   => Options_2);\n             Symbolic_Link_Needed := Lib_Version /= Lib_File;\n@@ -170,7 +143,7 @@ package body MLib.Tgt is\n             Utl.Gcc\n               (Output_File => Lib_Dir & Directory_Separator & Lib_Version,\n                Objects     => Ofiles,\n-               Options     => Options & Shared_Options.all,\n+               Options     => Options & Shared_Options,\n                Driver_Name => Driver_Name,\n                Options_2   => Options_2);\n             Symbolic_Link_Needed :=\n@@ -214,15 +187,6 @@ package body MLib.Tgt is\n       return \"dylib\";\n    end DLL_Ext;\n \n-   ----------------\n-   -- DLL_Prefix --\n-   ----------------\n-\n-   function DLL_Prefix return String is\n-   begin\n-      return \"lib\";\n-   end DLL_Prefix;\n-\n    --------------------\n    -- Dynamic_Option --\n    --------------------\n@@ -232,24 +196,6 @@ package body MLib.Tgt is\n       return \"-dynamiclib\";\n    end Dynamic_Option;\n \n-   -------------------\n-   -- Is_Object_Ext --\n-   -------------------\n-\n-   function Is_Object_Ext (Ext : String) return Boolean is\n-   begin\n-      return Ext = \".o\";\n-   end Is_Object_Ext;\n-\n-   --------------\n-   -- Is_C_Ext --\n-   --------------\n-\n-   function Is_C_Ext (Ext : String) return Boolean is\n-   begin\n-      return Ext = \".c\";\n-   end Is_C_Ext;\n-\n    --------------------\n    -- Is_Archive_Ext --\n    --------------------\n@@ -259,123 +205,10 @@ package body MLib.Tgt is\n       return Ext = \".dylib\" or else Ext = \".a\";\n    end Is_Archive_Ext;\n \n-   -------------\n-   -- Libgnat --\n-   -------------\n-\n-   function Libgnat return String is\n-   begin\n-      return \"libgnat.a\";\n-   end Libgnat;\n-\n-   ------------------------\n-   -- Library_Exists_For --\n-   ------------------------\n-\n-   function Library_Exists_For\n-     (Project : Project_Id;\n-      In_Tree : Project_Tree_Ref) return Boolean\n-   is\n-   begin\n-      if not In_Tree.Projects.Table (Project).Library then\n-         Prj.Com.Fail (\"INTERNAL ERROR: Library_Exists_For called \" &\n-                       \"for non library project\");\n-         return False;\n-\n-      else\n-         declare\n-            Lib_Dir  : constant String :=\n-                         Get_Name_String\n-                           (In_Tree.Projects.Table (Project).Library_Dir);\n-            Lib_Name : constant String :=\n-                         Get_Name_String\n-                           (In_Tree.Projects.Table (Project).Library_Name);\n-\n-         begin\n-            if In_Tree.Projects.Table (Project).Library_Kind = Static then\n-               return Is_Regular_File\n-                 (Lib_Dir & Directory_Separator & \"lib\" &\n-                  Fil.Append_To (Lib_Name, Archive_Ext));\n-\n-            else\n-               return Is_Regular_File\n-                 (Lib_Dir & Directory_Separator & \"lib\" &\n-                  Fil.Append_To (Lib_Name, DLL_Ext));\n-            end if;\n-         end;\n-      end if;\n-   end Library_Exists_For;\n-\n-   ---------------------------\n-   -- Library_File_Name_For --\n-   ---------------------------\n-\n-   function Library_File_Name_For\n-     (Project : Project_Id;\n-      In_Tree : Project_Tree_Ref) return Name_Id\n-   is\n-   begin\n-      if not In_Tree.Projects.Table (Project).Library then\n-         Prj.Com.Fail (\"INTERNAL ERROR: Library_File_Name_For called \" &\n-                       \"for non library project\");\n-         return No_Name;\n-\n-      else\n-         declare\n-            Lib_Name : constant String :=\n-                         Get_Name_String\n-                           (In_Tree.Projects.Table (Project).Library_Name);\n-\n-         begin\n-            Name_Len := 3;\n-            Name_Buffer (1 .. Name_Len) := \"lib\";\n-\n-            if In_Tree.Projects.Table (Project).Library_Kind =\n-              Static then\n-               Add_Str_To_Name_Buffer (Fil.Append_To (Lib_Name, Archive_Ext));\n-            else\n-               Add_Str_To_Name_Buffer (Fil.Append_To (Lib_Name, DLL_Ext));\n-            end if;\n-\n-            return Name_Find;\n-         end;\n-      end if;\n-   end Library_File_Name_For;\n-\n-   ----------------\n-   -- Object_Ext --\n-   ----------------\n-\n-   function Object_Ext return String is\n-   begin\n-      return \"o\";\n-   end Object_Ext;\n-\n-   ----------------\n-   -- PIC_Option --\n-   ----------------\n-\n-   function PIC_Option return String is\n-   begin\n-      return \"-fPIC\";\n-   end PIC_Option;\n-\n-   -----------------------------------------------\n-   -- Standalone_Library_Auto_Init_Is_Supported --\n-   -----------------------------------------------\n-\n-   function Standalone_Library_Auto_Init_Is_Supported return Boolean is\n-   begin\n-      return True;\n-   end Standalone_Library_Auto_Init_Is_Supported;\n-\n-   ---------------------------\n-   -- Support_For_Libraries --\n-   ---------------------------\n-\n-   function Support_For_Libraries return Library_Support is\n-   begin\n-      return Full;\n-   end Support_For_Libraries;\n-\n-end MLib.Tgt;\n+begin\n+   Archive_Indexer_Options_Ptr := Archive_Indexer_Options'Access;\n+   Build_Dynamic_Library_Ptr := Build_Dynamic_Library'Access;\n+   DLL_Ext_Ptr := DLL_Ext'Access;\n+   Dynamic_Option_Ptr := Dynamic_Option'Access;\n+   Is_Archive_Ext_Ptr := Is_Archive_Ext'Access;\n+end MLib.Tgt.Specific;"}, {"sha": "63ff69ec0d2b6f813a9365ad13f7fea8ee85e25a", "filename": "gcc/ada/mlib-tgt-hpux.adb", "status": "modified", "additions": 24, "deletions": 206, "changes": 230, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bb81bc17c6c2c8eeec2218abc5189f798e2ecbe/gcc%2Fada%2Fmlib-tgt-hpux.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bb81bc17c6c2c8eeec2218abc5189f798e2ecbe/gcc%2Fada%2Fmlib-tgt-hpux.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-tgt-hpux.adb?ref=6bb81bc17c6c2c8eeec2218abc5189f798e2ecbe", "patch": "@@ -2,12 +2,12 @@\n --                                                                          --\n --                         GNAT COMPILER COMPONENTS                         --\n --                                                                          --\n---                             M L I B . T G T                              --\n+--                     M L I B . T G T . S P E C I F I C                    --\n --                             (HP-UX Version)                              --\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 2003-2006, AdaCore                     --\n+--                     Copyright (C) 2003-2007, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -25,65 +25,35 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This package provides a set of target dependent routines to build\n---  libraries (static only on HP-UX).\n-\n --  This is the HP-UX version of the body\n \n with MLib.Fil;\n with MLib.Utl;\n-with Namet;  use Namet;\n with Opt;\n with Output; use Output;\n-with Prj.Com;\n with System;\n \n-package body MLib.Tgt is\n-\n-   ---------------------\n-   -- Archive_Builder --\n-   ---------------------\n-\n-   function Archive_Builder return String is\n-   begin\n-      return \"ar\";\n-   end Archive_Builder;\n-\n-   -----------------------------\n-   -- Archive_Builder_Options --\n-   -----------------------------\n-\n-   function Archive_Builder_Options return String_List_Access is\n-   begin\n-      return new String_List'(1 => new String'(\"cr\"));\n-   end Archive_Builder_Options;\n-\n-   -----------------\n-   -- Archive_Ext --\n-   -----------------\n-\n-   function Archive_Ext return String is\n-   begin\n-      return \"a\";\n-   end Archive_Ext;\n+package body MLib.Tgt.Specific is\n \n-   ---------------------\n-   -- Archive_Indexer --\n-   ---------------------\n+   --  Non default subprograms\n \n-   function Archive_Indexer return String is\n-   begin\n-      return \"ranlib\";\n-   end Archive_Indexer;\n+   procedure Build_Dynamic_Library\n+     (Ofiles       : Argument_List;\n+      Foreign      : Argument_List;\n+      Afiles       : Argument_List;\n+      Options      : Argument_List;\n+      Options_2    : Argument_List;\n+      Interfaces   : Argument_List;\n+      Lib_Filename : String;\n+      Lib_Dir      : String;\n+      Symbol_Data  : Symbol_Record;\n+      Driver_Name  : Name_Id := No_Name;\n+      Lib_Version  : String  := \"\";\n+      Auto_Init    : Boolean := False);\n \n-   -----------------------------\n-   -- Archive_Indexer_Options --\n-   -----------------------------\n+   function DLL_Ext return String;\n \n-   function Archive_Indexer_Options return String_List_Access is\n-   begin\n-      return new String_List (1 .. 0);\n-   end Archive_Indexer_Options;\n+   function Is_Archive_Ext (Ext : String) return Boolean;\n \n    ---------------------------\n    -- Build_Dynamic_Library --\n@@ -197,42 +167,6 @@ package body MLib.Tgt is\n       return \"sl\";\n    end DLL_Ext;\n \n-   ----------------\n-   -- DLL_Prefix --\n-   ----------------\n-\n-   function DLL_Prefix return String is\n-   begin\n-      return \"lib\";\n-   end DLL_Prefix;\n-\n-   --------------------\n-   -- Dynamic_Option --\n-   --------------------\n-\n-   function Dynamic_Option return String is\n-   begin\n-      return \"-shared\";\n-   end Dynamic_Option;\n-\n-   -------------------\n-   -- Is_Object_Ext --\n-   -------------------\n-\n-   function Is_Object_Ext (Ext : String) return Boolean is\n-   begin\n-      return Ext = \".o\";\n-   end Is_Object_Ext;\n-\n-   --------------\n-   -- Is_C_Ext --\n-   --------------\n-\n-   function Is_C_Ext (Ext : String) return Boolean is\n-   begin\n-      return Ext = \".c\";\n-   end Is_C_Ext;\n-\n    --------------------\n    -- Is_Archive_Ext --\n    --------------------\n@@ -242,124 +176,8 @@ package body MLib.Tgt is\n       return Ext = \".a\" or else Ext = \".so\";\n    end Is_Archive_Ext;\n \n-   -------------\n-   -- Libgnat --\n-   -------------\n-\n-   function Libgnat return String is\n-   begin\n-      return \"libgnat.a\";\n-   end Libgnat;\n-\n-   ------------------------\n-   -- Library_Exists_For --\n-   ------------------------\n-\n-   function Library_Exists_For\n-     (Project : Project_Id;\n-      In_Tree : Project_Tree_Ref) return Boolean\n-   is\n-   begin\n-      if not In_Tree.Projects.Table (Project).Library then\n-         Prj.Com.Fail (\"INTERNAL ERROR: Library_Exists_For called \" &\n-                       \"for non library project\");\n-         return False;\n-\n-      else\n-         declare\n-            Lib_Dir  : constant String :=\n-                         Get_Name_String\n-                           (In_Tree.Projects.Table (Project).Library_Dir);\n-            Lib_Name : constant String :=\n-                         Get_Name_String\n-                           (In_Tree.Projects.Table (Project).Library_Name);\n-\n-         begin\n-            if In_Tree.Projects.Table (Project).Library_Kind = Static then\n-               return Is_Regular_File\n-                 (Lib_Dir & Directory_Separator & \"lib\" &\n-                  Fil.Append_To (Lib_Name, Archive_Ext));\n-\n-            else\n-               return Is_Regular_File\n-                 (Lib_Dir & Directory_Separator & \"lib\" &\n-                  Fil.Append_To (Lib_Name, DLL_Ext));\n-            end if;\n-         end;\n-      end if;\n-   end Library_Exists_For;\n-\n-   ---------------------------\n-   -- Library_File_Name_For --\n-   ---------------------------\n-\n-   function Library_File_Name_For\n-     (Project : Project_Id;\n-      In_Tree : Project_Tree_Ref) return Name_Id\n-   is\n-   begin\n-      if not In_Tree.Projects.Table (Project).Library then\n-         Prj.Com.Fail (\"INTERNAL ERROR: Library_File_Name_For called \" &\n-                       \"for non library project\");\n-         return No_Name;\n-\n-      else\n-         declare\n-            Lib_Name : constant String :=\n-                         Get_Name_String\n-                           (In_Tree.Projects.Table (Project).Library_Name);\n-\n-         begin\n-            Name_Len := 3;\n-            Name_Buffer (1 .. Name_Len) := \"lib\";\n-\n-            if In_Tree.Projects.Table (Project).Library_Kind =\n-              Static\n-            then\n-               Add_Str_To_Name_Buffer (Fil.Append_To (Lib_Name, Archive_Ext));\n-            else\n-               Add_Str_To_Name_Buffer (Fil.Append_To (Lib_Name, DLL_Ext));\n-            end if;\n-\n-            return Name_Find;\n-         end;\n-      end if;\n-   end Library_File_Name_For;\n-\n-   ----------------\n-   -- Object_Ext --\n-   ----------------\n-\n-   function Object_Ext return String is\n-   begin\n-      return \"o\";\n-   end Object_Ext;\n-\n-   ----------------\n-   -- PIC_Option --\n-   ----------------\n-\n-   function PIC_Option return String is\n-   begin\n-      return \"-fPIC\";\n-   end PIC_Option;\n-\n-   -----------------------------------------------\n-   -- Standalone_Library_Auto_Init_Is_Supported --\n-   -----------------------------------------------\n-\n-   function Standalone_Library_Auto_Init_Is_Supported return Boolean is\n-   begin\n-      return True;\n-   end Standalone_Library_Auto_Init_Is_Supported;\n-\n-   ---------------------------\n-   -- Support_For_Libraries --\n-   ---------------------------\n-\n-   function Support_For_Libraries return Library_Support is\n-   begin\n-      return Full;\n-   end Support_For_Libraries;\n-\n-end MLib.Tgt;\n+begin\n+   Build_Dynamic_Library_Ptr := Build_Dynamic_Library'Access;\n+   DLL_Ext_Ptr := DLL_Ext'Access;\n+   Is_Archive_Ext_Ptr := Is_Archive_Ext'Access;\n+end MLib.Tgt.Specific;"}, {"sha": "3b45aea0df7b366475a76fb8cf41fddd8105c014", "filename": "gcc/ada/mlib-tgt-irix.adb", "status": "modified", "additions": 22, "deletions": 216, "changes": 238, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bb81bc17c6c2c8eeec2218abc5189f798e2ecbe/gcc%2Fada%2Fmlib-tgt-irix.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bb81bc17c6c2c8eeec2218abc5189f798e2ecbe/gcc%2Fada%2Fmlib-tgt-irix.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-tgt-irix.adb?ref=6bb81bc17c6c2c8eeec2218abc5189f798e2ecbe", "patch": "@@ -2,12 +2,12 @@\n --                                                                          --\n --                         GNAT COMPILER COMPONENTS                         --\n --                                                                          --\n---                             M L I B . T G T                              --\n+--                     M L I B . T G T . S P E C I F I C                    --\n --                              (IRIX Version)                              --\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 2003-2006, AdaCore                     --\n+--                     Copyright (C) 2003-2007, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -25,65 +25,33 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This package provides a set of target dependent routines to build\n---  static, dynamic and shared libraries.\n-\n --  This is the IRIX version of the body\n \n with MLib.Fil;\n with MLib.Utl;\n-with Namet;  use Namet;\n with Opt;\n with Output; use Output;\n-with Prj.Com;\n with System;\n \n-package body MLib.Tgt is\n-\n-   ---------------------\n-   -- Archive_Builder --\n-   ---------------------\n-\n-   function Archive_Builder return String is\n-   begin\n-      return \"ar\";\n-   end Archive_Builder;\n-\n-   -----------------------------\n-   -- Archive_Builder_Options --\n-   -----------------------------\n+package body MLib.Tgt.Specific is\n \n-   function Archive_Builder_Options return String_List_Access is\n-   begin\n-      return new String_List'(1 => new String'(\"cr\"));\n-   end Archive_Builder_Options;\n+   --  Non default subprogram\n \n-   -----------------\n-   -- Archive_Ext --\n-   -----------------\n-\n-   function Archive_Ext return String is\n-   begin\n-      return \"a\";\n-   end Archive_Ext;\n-\n-   ---------------------\n-   -- Archive_Indexer --\n-   ---------------------\n-\n-   function Archive_Indexer return String is\n-   begin\n-      return \"ranlib\";\n-   end Archive_Indexer;\n-\n-   -----------------------------\n-   -- Archive_Indexer_Options --\n-   -----------------------------\n+   procedure Build_Dynamic_Library\n+     (Ofiles       : Argument_List;\n+      Foreign      : Argument_List;\n+      Afiles       : Argument_List;\n+      Options      : Argument_List;\n+      Options_2    : Argument_List;\n+      Interfaces   : Argument_List;\n+      Lib_Filename : String;\n+      Lib_Dir      : String;\n+      Symbol_Data  : Symbol_Record;\n+      Driver_Name  : Name_Id := No_Name;\n+      Lib_Version  : String  := \"\";\n+      Auto_Init    : Boolean := False);\n \n-   function Archive_Indexer_Options return String_List_Access is\n-   begin\n-      return new String_List (1 .. 0);\n-   end Archive_Indexer_Options;\n+   function Is_Archive_Ext (Ext : String) return Boolean;\n \n    ---------------------------\n    -- Build_Dynamic_Library --\n@@ -226,51 +194,6 @@ package body MLib.Tgt is\n       end if;\n    end Build_Dynamic_Library;\n \n-   -------------\n-   -- DLL_Ext --\n-   -------------\n-\n-   function DLL_Ext return String is\n-   begin\n-      return \"so\";\n-   end DLL_Ext;\n-\n-   ----------------\n-   -- DLL_Prefix --\n-   ----------------\n-\n-   function DLL_Prefix return String is\n-   begin\n-      return \"lib\";\n-   end DLL_Prefix;\n-\n-   --------------------\n-   -- Dynamic_Option --\n-   --------------------\n-\n-   function Dynamic_Option return String is\n-   begin\n-      return \"-shared\";\n-   end Dynamic_Option;\n-\n-   -------------------\n-   -- Is_Object_Ext --\n-   -------------------\n-\n-   function Is_Object_Ext (Ext : String) return Boolean is\n-   begin\n-      return Ext = \".o\";\n-   end Is_Object_Ext;\n-\n-   --------------\n-   -- Is_C_Ext --\n-   --------------\n-\n-   function Is_C_Ext (Ext : String) return Boolean is\n-   begin\n-      return Ext = \".c\";\n-   end Is_C_Ext;\n-\n    --------------------\n    -- Is_Archive_Ext --\n    --------------------\n@@ -280,124 +203,7 @@ package body MLib.Tgt is\n       return Ext = \".a\" or else Ext = \".so\";\n    end Is_Archive_Ext;\n \n-   -------------\n-   -- Libgnat --\n-   -------------\n-\n-   function Libgnat return String is\n-   begin\n-      return \"libgnat.a\";\n-   end Libgnat;\n-\n-   ------------------------\n-   -- Library_Exists_For --\n-   ------------------------\n-\n-   function Library_Exists_For\n-     (Project : Project_Id;\n-      In_Tree : Project_Tree_Ref) return Boolean\n-   is\n-   begin\n-      if not In_Tree.Projects.Table (Project).Library then\n-         Prj.Com.Fail (\"INTERNAL ERROR: Library_Exists_For called \" &\n-                       \"for non library project\");\n-         return False;\n-\n-      else\n-         declare\n-            Lib_Dir  : constant String :=\n-                         Get_Name_String\n-                           (In_Tree.Projects.Table (Project).Library_Dir);\n-            Lib_Name : constant String :=\n-                         Get_Name_String\n-                           (In_Tree.Projects.Table (Project).Library_Name);\n-\n-         begin\n-            if In_Tree.Projects.Table (Project).Library_Kind = Static then\n-               return Is_Regular_File\n-                 (Lib_Dir & Directory_Separator & \"lib\" &\n-                  Fil.Append_To (Lib_Name, Archive_Ext));\n-\n-            else\n-               return Is_Regular_File\n-                 (Lib_Dir & Directory_Separator & \"lib\" &\n-                  Fil.Append_To (Lib_Name, DLL_Ext));\n-            end if;\n-         end;\n-      end if;\n-   end Library_Exists_For;\n-\n-   ---------------------------\n-   -- Library_File_Name_For --\n-   ---------------------------\n-\n-   function Library_File_Name_For\n-     (Project : Project_Id;\n-      In_Tree : Project_Tree_Ref) return Name_Id\n-   is\n-   begin\n-      if not In_Tree.Projects.Table (Project).Library then\n-         Prj.Com.Fail (\"INTERNAL ERROR: Library_File_Name_For called \" &\n-                       \"for non library project\");\n-         return No_Name;\n-\n-      else\n-         declare\n-            Lib_Name : constant String :=\n-                         Get_Name_String\n-                           (In_Tree.Projects.Table (Project).Library_Name);\n-\n-         begin\n-            Name_Len := 3;\n-            Name_Buffer (1 .. Name_Len) := \"lib\";\n-\n-            if In_Tree.Projects.Table (Project).Library_Kind =\n-              Static\n-            then\n-               Add_Str_To_Name_Buffer (Fil.Append_To (Lib_Name, Archive_Ext));\n-            else\n-               Add_Str_To_Name_Buffer (Fil.Append_To (Lib_Name, DLL_Ext));\n-            end if;\n-\n-            return Name_Find;\n-         end;\n-      end if;\n-   end Library_File_Name_For;\n-\n-   ----------------\n-   -- Object_Ext --\n-   ----------------\n-\n-   function Object_Ext return String is\n-   begin\n-      return \"o\";\n-   end Object_Ext;\n-\n-   ----------------\n-   -- PIC_Option --\n-   ----------------\n-\n-   function PIC_Option return String is\n-   begin\n-      return \"-fPIC\";\n-   end PIC_Option;\n-\n-   -----------------------------------------------\n-   -- Standalone_Library_Auto_Init_Is_Supported --\n-   -----------------------------------------------\n-\n-   function Standalone_Library_Auto_Init_Is_Supported return Boolean is\n-   begin\n-      return True;\n-   end Standalone_Library_Auto_Init_Is_Supported;\n-\n-   ---------------------------\n-   -- Support_For_Libraries --\n-   ---------------------------\n-\n-   function Support_For_Libraries return Library_Support is\n-   begin\n-      return Full;\n-   end Support_For_Libraries;\n-\n-end MLib.Tgt;\n+begin\n+   Build_Dynamic_Library_Ptr := Build_Dynamic_Library'Access;\n+   Is_Archive_Ext_Ptr := Is_Archive_Ext'Access;\n+end MLib.Tgt.Specific;"}, {"sha": "848a11ca4e7e9f9481e6c0d68831e9e479ad0b9d", "filename": "gcc/ada/mlib-tgt-linux.adb", "status": "modified", "additions": 63, "deletions": 226, "changes": 289, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bb81bc17c6c2c8eeec2218abc5189f798e2ecbe/gcc%2Fada%2Fmlib-tgt-linux.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bb81bc17c6c2c8eeec2218abc5189f798e2ecbe/gcc%2Fada%2Fmlib-tgt-linux.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-tgt-linux.adb?ref=6bb81bc17c6c2c8eeec2218abc5189f798e2ecbe", "patch": "@@ -2,12 +2,12 @@\n --                                                                          --\n --                         GNAT COMPILER COMPONENTS                         --\n --                                                                          --\n---                             M L I B . T G T                              --\n+--                    M L I B . T G T . S P E C I F I C                     --\n --                           (GNU/Linux Version)                            --\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2001-2006, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -25,68 +25,35 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This package provides a set of target dependent routines to build\n---  static, dynamic and shared libraries.\n-\n --  This is the GNU/Linux version of the body\n \n with MLib.Fil;\n with MLib.Utl;\n-with Namet;  use Namet;\n with Opt;\n with Output; use Output;\n-with Prj.Com;\n with System;\n \n-package body MLib.Tgt is\n+package body MLib.Tgt.Specific is\n \n-   use GNAT;\n    use MLib;\n \n-   ---------------------\n-   -- Archive_Builder --\n-   ---------------------\n-\n-   function Archive_Builder return String is\n-   begin\n-      return \"ar\";\n-   end Archive_Builder;\n-\n-   -----------------------------\n-   -- Archive_Builder_Options --\n-   -----------------------------\n-\n-   function Archive_Builder_Options return String_List_Access is\n-   begin\n-      return new String_List'(1 => new String'(\"cr\"));\n-   end Archive_Builder_Options;\n-\n-   -----------------\n-   -- Archive_Ext --\n-   -----------------\n-\n-   function Archive_Ext return  String is\n-   begin\n-      return \"a\";\n-   end Archive_Ext;\n-\n-   ---------------------\n-   -- Archive_Indexer --\n-   ---------------------\n+   --  Non default subprograms\n \n-   function Archive_Indexer return String is\n-   begin\n-      return \"ranlib\";\n-   end Archive_Indexer;\n+   procedure Build_Dynamic_Library\n+     (Ofiles       : Argument_List;\n+      Foreign      : Argument_List;\n+      Afiles       : Argument_List;\n+      Options      : Argument_List;\n+      Options_2    : Argument_List;\n+      Interfaces   : Argument_List;\n+      Lib_Filename : String;\n+      Lib_Dir      : String;\n+      Symbol_Data  : Symbol_Record;\n+      Driver_Name  : Name_Id := No_Name;\n+      Lib_Version  : String  := \"\";\n+      Auto_Init    : Boolean := False);\n \n-   -----------------------------\n-   -- Archive_Indexer_Options --\n-   -----------------------------\n-\n-   function Archive_Indexer_Options return String_List_Access is\n-   begin\n-      return new String_List (1 .. 0);\n-   end Archive_Indexer_Options;\n+   function Is_Archive_Ext (Ext : String) return Boolean;\n \n    ---------------------------\n    -- Build_Dynamic_Library --\n@@ -114,21 +81,23 @@ package body MLib.Tgt is\n       --  Initialization is done through the contructor mechanism\n \n       Lib_File : constant String :=\n-                   Lib_Dir & Directory_Separator & \"lib\" &\n-                   Fil.Append_To (Lib_Filename, DLL_Ext);\n+                   \"lib\" & Fil.Append_To (Lib_Filename, DLL_Ext);\n+\n+      Lib_Path : constant String :=\n+                   Lib_Dir & Directory_Separator & Lib_File;\n \n       Version_Arg          : String_Access;\n       Symbolic_Link_Needed : Boolean := False;\n \n    begin\n       if Opt.Verbose_Mode then\n          Write_Str (\"building relocatable shared library \");\n-         Write_Line (Lib_File);\n+         Write_Line (Lib_Path);\n       end if;\n \n       if Lib_Version = \"\" then\n          Utl.Gcc\n-           (Output_File => Lib_File,\n+           (Output_File => Lib_Path,\n             Objects     => Ofiles,\n             Options     => Options,\n             Driver_Name => Driver_Name,\n@@ -194,7 +163,7 @@ package body MLib.Tgt is\n                   Options     => Options & Version_Arg,\n                   Driver_Name => Driver_Name,\n                   Options_2   => Options_2);\n-               Symbolic_Link_Needed := Lib_Version /= Lib_File;\n+               Symbolic_Link_Needed := Lib_Version /= Lib_Path;\n \n             else\n                Utl.Gcc\n@@ -204,14 +173,14 @@ package body MLib.Tgt is\n                   Driver_Name => Driver_Name,\n                   Options_2   => Options_2);\n                Symbolic_Link_Needed :=\n-                 Lib_Dir & Directory_Separator & Lib_Version /= Lib_File;\n+                 Lib_Dir & Directory_Separator & Lib_Version /= Lib_Path;\n             end if;\n \n             if Symbolic_Link_Needed then\n                declare\n                   Success : Boolean;\n                   Oldpath : String (1 .. Lib_Version'Length + 1);\n-                  Newpath : String (1 .. Lib_File'Length + 1);\n+                  Newpath : String (1 .. Lib_Path'Length + 1);\n \n                   Result : Integer;\n                   pragma Unreferenced (Result);\n@@ -224,63 +193,48 @@ package body MLib.Tgt is\n                begin\n                   Oldpath (1 .. Lib_Version'Length) := Lib_Version;\n                   Oldpath (Oldpath'Last)            := ASCII.NUL;\n-                  Newpath (1 .. Lib_File'Length)    := Lib_File;\n+                  Newpath (1 .. Lib_Path'Length)    := Lib_Path;\n                   Newpath (Newpath'Last)            := ASCII.NUL;\n \n-                  Delete_File (Lib_File, Success);\n+                  Delete_File (Lib_Path, Success);\n \n                   Result := Symlink (Oldpath'Address, Newpath'Address);\n                end;\n+\n+               if Ok_Maj then\n+                  declare\n+                     Success : Boolean;\n+                     Oldpath : String (1 .. Lib_Version'Length + 1);\n+                     Maj_Path : constant String :=\n+                                  Lib_Dir & Directory_Separator &\n+                                  Maj_Version (1 .. Last_Maj);\n+                     Newpath : String (1 .. Maj_Path'Length + 1);\n+\n+                     Result  : Integer;\n+                     pragma Unreferenced (Result);\n+\n+                     function Symlink\n+                       (Oldpath : System.Address;\n+                        Newpath : System.Address) return Integer;\n+                     pragma Import (C, Symlink, \"__gnat_symlink\");\n+\n+                  begin\n+                     Oldpath (1 .. Lib_Version'Length) := Lib_Version;\n+                     Oldpath (Oldpath'Last)            := ASCII.NUL;\n+                     Newpath (1 .. Maj_Path'Length)    := Maj_Path;\n+                     Newpath (Newpath'Last)            := ASCII.NUL;\n+\n+                     Delete_File (Maj_Path, Success);\n+\n+                     Result := Symlink (Oldpath'Address, Newpath'Address);\n+                  end;\n+               end if;\n+\n             end if;\n          end;\n       end if;\n    end Build_Dynamic_Library;\n \n-   -------------\n-   -- DLL_Ext --\n-   -------------\n-\n-   function DLL_Ext return String is\n-   begin\n-      return \"so\";\n-   end DLL_Ext;\n-\n-   ----------------\n-   -- DLL_Prefix --\n-   ----------------\n-\n-   function DLL_Prefix return String is\n-   begin\n-      return \"lib\";\n-   end DLL_Prefix;\n-\n-   --------------------\n-   -- Dynamic_Option --\n-   --------------------\n-\n-   function Dynamic_Option return String is\n-   begin\n-      return \"-shared\";\n-   end Dynamic_Option;\n-\n-   -------------------\n-   -- Is_Object_Ext --\n-   -------------------\n-\n-   function Is_Object_Ext (Ext : String) return Boolean is\n-   begin\n-      return Ext = \".o\";\n-   end Is_Object_Ext;\n-\n-   --------------\n-   -- Is_C_Ext --\n-   --------------\n-\n-   function Is_C_Ext (Ext : String) return Boolean is\n-   begin\n-      return Ext = \".c\";\n-   end Is_C_Ext;\n-\n    --------------------\n    -- Is_Archive_Ext --\n    --------------------\n@@ -290,124 +244,7 @@ package body MLib.Tgt is\n       return Ext = \".a\" or else Ext = \".so\";\n    end Is_Archive_Ext;\n \n-   -------------\n-   -- Libgnat --\n-   -------------\n-\n-   function Libgnat return String is\n-   begin\n-      return \"libgnat.a\";\n-   end Libgnat;\n-\n-   ------------------------\n-   -- Library_Exists_For --\n-   ------------------------\n-\n-   function Library_Exists_For\n-     (Project : Project_Id;\n-      In_Tree : Project_Tree_Ref) return Boolean\n-   is\n-   begin\n-      if not In_Tree.Projects.Table (Project).Library then\n-         Prj.Com.Fail (\"INTERNAL ERROR: Library_Exists_For called \" &\n-                       \"for non library project\");\n-         return False;\n-\n-      else\n-         declare\n-            Lib_Dir  : constant String :=\n-                         Get_Name_String\n-                           (In_Tree.Projects.Table (Project).Library_Dir);\n-            Lib_Name : constant String :=\n-                         Get_Name_String\n-                           (In_Tree.Projects.Table (Project).Library_Name);\n-\n-         begin\n-            if In_Tree.Projects.Table (Project).Library_Kind = Static then\n-               return Is_Regular_File\n-                 (Lib_Dir & Directory_Separator & \"lib\" &\n-                  Fil.Append_To (Lib_Name, Archive_Ext));\n-\n-            else\n-               return Is_Regular_File\n-                 (Lib_Dir & Directory_Separator & \"lib\" &\n-                  Fil.Append_To (Lib_Name, DLL_Ext));\n-            end if;\n-         end;\n-      end if;\n-   end Library_Exists_For;\n-\n-   ---------------------------\n-   -- Library_File_Name_For --\n-   ---------------------------\n-\n-   function Library_File_Name_For\n-     (Project : Project_Id;\n-      In_Tree : Project_Tree_Ref) return Name_Id\n-   is\n-   begin\n-      if not In_Tree.Projects.Table (Project).Library then\n-         Prj.Com.Fail (\"INTERNAL ERROR: Library_File_Name_For called \" &\n-                       \"for non library project\");\n-         return No_Name;\n-\n-      else\n-         declare\n-            Lib_Name : constant String :=\n-                         Get_Name_String\n-                           (In_Tree.Projects.Table (Project).Library_Name);\n-\n-         begin\n-            Name_Len := 3;\n-            Name_Buffer (1 .. Name_Len) := \"lib\";\n-\n-            if In_Tree.Projects.Table (Project).Library_Kind =\n-                 Static\n-            then\n-               Add_Str_To_Name_Buffer (Fil.Append_To (Lib_Name, Archive_Ext));\n-            else\n-               Add_Str_To_Name_Buffer (Fil.Append_To (Lib_Name, DLL_Ext));\n-            end if;\n-\n-            return Name_Find;\n-         end;\n-      end if;\n-   end Library_File_Name_For;\n-\n-   ----------------\n-   -- Object_Ext --\n-   ----------------\n-\n-   function Object_Ext return String is\n-   begin\n-      return \"o\";\n-   end Object_Ext;\n-\n-   ----------------\n-   -- PIC_Option --\n-   ----------------\n-\n-   function PIC_Option return String is\n-   begin\n-      return \"-fPIC\";\n-   end PIC_Option;\n-\n-   -----------------------------------------------\n-   -- Standalone_Library_Auto_Init_Is_Supported --\n-   -----------------------------------------------\n-\n-   function Standalone_Library_Auto_Init_Is_Supported return Boolean is\n-   begin\n-      return True;\n-   end Standalone_Library_Auto_Init_Is_Supported;\n-\n-   ---------------------------\n-   -- Support_For_Libraries --\n-   ---------------------------\n-\n-   function Support_For_Libraries return Library_Support is\n-   begin\n-      return Full;\n-   end Support_For_Libraries;\n-\n-end MLib.Tgt;\n+begin\n+   Build_Dynamic_Library_Ptr := Build_Dynamic_Library'Access;\n+   Is_Archive_Ext_Ptr := Is_Archive_Ext'Access;\n+end MLib.Tgt.Specific;"}, {"sha": "0a667d50014e12d382b01c47d7ce4f2df3c54cae", "filename": "gcc/ada/mlib-tgt-lynxos.adb", "status": "modified", "additions": 31, "deletions": 178, "changes": 209, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bb81bc17c6c2c8eeec2218abc5189f798e2ecbe/gcc%2Fada%2Fmlib-tgt-lynxos.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bb81bc17c6c2c8eeec2218abc5189f798e2ecbe/gcc%2Fada%2Fmlib-tgt-lynxos.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-tgt-lynxos.adb?ref=6bb81bc17c6c2c8eeec2218abc5189f798e2ecbe", "patch": "@@ -2,12 +2,12 @@\n --                                                                          --\n --                         GNAT COMPILER COMPONENTS                         --\n --                                                                          --\n---                             M L I B . T G T                              --\n+--                    M L I B . T G T . S P E C I F I C                     --\n --                             (LynxOS Version)                             --\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---           Copyright (C) 2003-2006 Free Software Foundation, Inc.         --\n+--           Copyright (C) 2003-2007, Free Software Foundation, Inc.        --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -25,61 +25,35 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This package provides a set of target dependent routines to build\n---  static libraries.\n-\n --  This is the LynxOS version of the body\n \n-with MLib.Fil;\n-with Namet;  use Namet;\n-with Prj.Com;\n-\n-package body MLib.Tgt is\n-\n-   ---------------------\n-   -- Archive_Builder --\n-   ---------------------\n-\n-   function Archive_Builder return String is\n-   begin\n-      return \"ar\";\n-   end Archive_Builder;\n+package body MLib.Tgt.Specific is\n \n-   -----------------------------\n-   -- Archive_Builder_Options --\n-   -----------------------------\n+   --  Non default subprograms\n \n-   function Archive_Builder_Options return String_List_Access is\n-   begin\n-      return new String_List'(1 => new String'(\"cr\"));\n-   end Archive_Builder_Options;\n-\n-   -----------------\n-   -- Archive_Ext --\n-   -----------------\n+   procedure Build_Dynamic_Library\n+     (Ofiles       : Argument_List;\n+      Foreign      : Argument_List;\n+      Afiles       : Argument_List;\n+      Options      : Argument_List;\n+      Options_2    : Argument_List;\n+      Interfaces   : Argument_List;\n+      Lib_Filename : String;\n+      Lib_Dir      : String;\n+      Symbol_Data  : Symbol_Record;\n+      Driver_Name  : Name_Id := No_Name;\n+      Lib_Version  : String  := \"\";\n+      Auto_Init    : Boolean := False);\n \n-   function Archive_Ext return String is\n-   begin\n-      return \"a\";\n-   end Archive_Ext;\n+   function DLL_Ext return String;\n \n-   ---------------------\n-   -- Archive_Indexer --\n-   ---------------------\n+   function Dynamic_Option return String;\n \n-   function Archive_Indexer return String is\n-   begin\n-      return \"ranlib\";\n-   end Archive_Indexer;\n+   function PIC_Option return String;\n \n-   -----------------------------\n-   -- Archive_Indexer_Options --\n-   -----------------------------\n+   function Standalone_Library_Auto_Init_Is_Supported return Boolean;\n \n-   function Archive_Indexer_Options return String_List_Access is\n-   begin\n-      return new String_List (1 .. 0);\n-   end Archive_Indexer_Options;\n+   function Support_For_Libraries return Library_Support;\n \n    ---------------------------\n    -- Build_Dynamic_Library --\n@@ -125,15 +99,6 @@ package body MLib.Tgt is\n       return \"\";\n    end DLL_Ext;\n \n-   ----------------\n-   -- DLL_Prefix --\n-   ----------------\n-\n-   function DLL_Prefix return String is\n-   begin\n-      return \"lib\";\n-   end DLL_Prefix;\n-\n    --------------------\n    -- Dynamic_Option --\n    --------------------\n@@ -143,126 +108,6 @@ package body MLib.Tgt is\n       return \"\";\n    end Dynamic_Option;\n \n-   -------------------\n-   -- Is_Object_Ext --\n-   -------------------\n-\n-   function Is_Object_Ext (Ext : String) return Boolean is\n-   begin\n-      return Ext = \".o\";\n-   end Is_Object_Ext;\n-\n-   --------------\n-   -- Is_C_Ext --\n-   --------------\n-\n-   function Is_C_Ext (Ext : String) return Boolean is\n-   begin\n-      return Ext = \".c\";\n-   end Is_C_Ext;\n-\n-   --------------------\n-   -- Is_Archive_Ext --\n-   --------------------\n-\n-   function Is_Archive_Ext (Ext : String) return Boolean is\n-   begin\n-      return Ext = \".a\";\n-   end Is_Archive_Ext;\n-\n-   -------------\n-   -- Libgnat --\n-   -------------\n-\n-   function Libgnat return String is\n-   begin\n-      return \"libgnat.a\";\n-   end Libgnat;\n-\n-   ------------------------\n-   -- Library_Exists_For --\n-   ------------------------\n-\n-   function Library_Exists_For\n-     (Project : Project_Id;\n-      In_Tree : Project_Tree_Ref) return Boolean\n-   is\n-   begin\n-      if not In_Tree.Projects.Table (Project).Library then\n-         Prj.Com.Fail (\"INTERNAL ERROR: Library_Exists_For called \" &\n-                       \"for non library project\");\n-         return False;\n-\n-      else\n-         declare\n-            Lib_Dir  : constant String :=\n-                         Get_Name_String\n-                           (In_Tree.Projects.Table (Project).Library_Dir);\n-            Lib_Name : constant String :=\n-                         Get_Name_String\n-                           (In_Tree.Projects.Table (Project).Library_Name);\n-\n-         begin\n-            if In_Tree.Projects.Table (Project).Library_Kind = Static then\n-               return Is_Regular_File\n-                 (Lib_Dir & Directory_Separator & \"lib\" &\n-                  Fil.Append_To (Lib_Name, Archive_Ext));\n-\n-            else\n-               return Is_Regular_File\n-                 (Lib_Dir & Directory_Separator & \"lib\" &\n-                  Fil.Append_To (Lib_Name, DLL_Ext));\n-            end if;\n-         end;\n-      end if;\n-   end Library_Exists_For;\n-\n-   ---------------------------\n-   -- Library_File_Name_For --\n-   ---------------------------\n-\n-   function Library_File_Name_For\n-     (Project : Project_Id;\n-      In_Tree : Project_Tree_Ref) return Name_Id\n-   is\n-   begin\n-      if not In_Tree.Projects.Table (Project).Library then\n-         Prj.Com.Fail (\"INTERNAL ERROR: Library_File_Name_For called \" &\n-                       \"for non library project\");\n-         return No_Name;\n-\n-      else\n-         declare\n-            Lib_Name : constant String :=\n-                         Get_Name_String\n-                           (In_Tree.Projects.Table (Project).Library_Name);\n-\n-         begin\n-            Name_Len := 3;\n-            Name_Buffer (1 .. Name_Len) := \"lib\";\n-\n-            if In_Tree.Projects.Table (Project).Library_Kind =\n-              Static\n-            then\n-               Add_Str_To_Name_Buffer (Fil.Append_To (Lib_Name, Archive_Ext));\n-            else\n-               Add_Str_To_Name_Buffer (Fil.Append_To (Lib_Name, DLL_Ext));\n-            end if;\n-\n-            return Name_Find;\n-         end;\n-      end if;\n-   end Library_File_Name_For;\n-\n-   ----------------\n-   -- Object_Ext --\n-   ----------------\n-\n-   function Object_Ext return String is\n-   begin\n-      return \"o\";\n-   end Object_Ext;\n-\n    ----------------\n    -- PIC_Option --\n    ----------------\n@@ -290,4 +135,12 @@ package body MLib.Tgt is\n       return Static_Only;\n    end Support_For_Libraries;\n \n-end MLib.Tgt;\n+begin\n+   Build_Dynamic_Library_Ptr := Build_Dynamic_Library'Access;\n+   DLL_Ext_Ptr := DLL_Ext'Access;\n+   Dynamic_Option_Ptr := Dynamic_Option'Access;\n+   PIC_Option_Ptr := PIC_Option'Access;\n+   Standalone_Library_Auto_Init_Is_Supported_Ptr :=\n+     Standalone_Library_Auto_Init_Is_Supported'Access;\n+   Support_For_Libraries_Ptr := Support_For_Libraries'Access;\n+end MLib.Tgt.Specific;"}, {"sha": "cba87e59b37c9f4c75e8ebe7620821fb2acc5f42", "filename": "gcc/ada/mlib-tgt-mingw.adb", "status": "modified", "additions": 30, "deletions": 187, "changes": 217, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bb81bc17c6c2c8eeec2218abc5189f798e2ecbe/gcc%2Fada%2Fmlib-tgt-mingw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bb81bc17c6c2c8eeec2218abc5189f798e2ecbe/gcc%2Fada%2Fmlib-tgt-mingw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-tgt-mingw.adb?ref=6bb81bc17c6c2c8eeec2218abc5189f798e2ecbe", "patch": "@@ -2,12 +2,12 @@\n --                                                                          --\n --                         GNAT COMPILER COMPONENTS                         --\n --                                                                          --\n---                             M L I B . T G T                              --\n+--                    M L I B . T G T . S P E C I F I C                     --\n --                            (Windows Version)                             --\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2002-2006, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2002-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -25,72 +25,46 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This package provides a set of target dependent routines to build\n---  static, dynamic and shared libraries.\n-\n --  This is the Windows version of the body. Works only with GCC versions\n --  supporting the \"-shared\" option.\n \n-with Namet;  use Namet;\n with Opt;\n with Output; use Output;\n-with Prj.Com;\n \n with MLib.Fil;\n with MLib.Utl;\n \n-package body MLib.Tgt is\n+package body MLib.Tgt.Specific is\n \n    package Files renames MLib.Fil;\n    package Tools renames MLib.Utl;\n \n-   No_Argument_List : constant String_List := (1 .. 0 => null);\n-   --  Used as value of parameter Options or Options2 in calls to Gcc\n-\n-   ---------------------\n-   -- Archive_Builder --\n-   ---------------------\n-\n-   function Archive_Builder return String is\n-   begin\n-      return \"ar\";\n-   end Archive_Builder;\n-\n-   -----------------------------\n-   -- Archive_Builder_Options --\n-   -----------------------------\n-\n-   function Archive_Builder_Options return String_List_Access is\n-   begin\n-      return new String_List'(1 => new String'(\"cr\"));\n-   end Archive_Builder_Options;\n+   --  Non default subprograms\n \n-   -----------------\n-   -- Archive_Ext --\n-   -----------------\n+   procedure Build_Dynamic_Library\n+     (Ofiles       : Argument_List;\n+      Foreign      : Argument_List;\n+      Afiles       : Argument_List;\n+      Options      : Argument_List;\n+      Options_2    : Argument_List;\n+      Interfaces   : Argument_List;\n+      Lib_Filename : String;\n+      Lib_Dir      : String;\n+      Symbol_Data  : Symbol_Record;\n+      Driver_Name  : Name_Id := No_Name;\n+      Lib_Version  : String  := \"\";\n+      Auto_Init    : Boolean := False);\n \n-   function Archive_Ext return  String is\n-   begin\n-      return \"a\";\n-   end Archive_Ext;\n+   function DLL_Ext return String;\n \n-   ---------------------\n-   -- Archive_Indexer --\n-   ---------------------\n+   function DLL_Prefix return String;\n \n-   function Archive_Indexer return String is\n-   begin\n-      return \"ranlib\";\n-   end Archive_Indexer;\n+   function Is_Archive_Ext (Ext : String) return Boolean;\n \n-   -----------------------------\n-   -- Archive_Indexer_Options --\n-   -----------------------------\n+   function PIC_Option return String;\n \n-   function Archive_Indexer_Options return String_List_Access is\n-   begin\n-      return new String_List (1 .. 0);\n-   end Archive_Indexer_Options;\n+   No_Argument_List : constant String_List := (1 .. 0 => null);\n+   --  Used as value of parameter Options or Options2 in calls to Gcc\n \n    ---------------------------\n    -- Build_Dynamic_Library --\n@@ -155,33 +129,6 @@ package body MLib.Tgt is\n       return \"\";\n    end DLL_Prefix;\n \n-   --------------------\n-   -- Dynamic_Option --\n-   --------------------\n-\n-   function Dynamic_Option return String is\n-   begin\n-      return \"-shared\";\n-   end Dynamic_Option;\n-\n-   -------------------\n-   -- Is_Object_Ext --\n-   -------------------\n-\n-   function Is_Object_Ext (Ext : String) return Boolean is\n-   begin\n-      return Ext = \".o\";\n-   end Is_Object_Ext;\n-\n-   --------------\n-   -- Is_C_Ext --\n-   --------------\n-\n-   function Is_C_Ext (Ext : String) return Boolean is\n-   begin\n-      return Ext = \".c\";\n-   end Is_C_Ext;\n-\n    --------------------\n    -- Is_Archive_Ext --\n    --------------------\n@@ -191,98 +138,6 @@ package body MLib.Tgt is\n       return Ext = \".a\" or else Ext = \".dll\";\n    end Is_Archive_Ext;\n \n-   -------------\n-   -- Libgnat --\n-   -------------\n-\n-   function Libgnat return String is\n-   begin\n-      return \"libgnat.a\";\n-   end Libgnat;\n-\n-   ------------------------\n-   -- Library_Exists_For --\n-   ------------------------\n-\n-   function Library_Exists_For\n-     (Project : Project_Id;\n-      In_Tree : Project_Tree_Ref) return Boolean is\n-   begin\n-      if not In_Tree.Projects.Table (Project).Library then\n-         Prj.Com.Fail (\"INTERNAL ERROR: Library_Exists_For called \" &\n-                       \"for non library project\");\n-         return False;\n-\n-      else\n-         declare\n-            Lib_Dir  : constant String :=\n-                         Get_Name_String\n-                           (In_Tree.Projects.Table (Project).Library_Dir);\n-            Lib_Name : constant String :=\n-                         Get_Name_String\n-                           (In_Tree.Projects.Table (Project).Library_Name);\n-\n-         begin\n-            if In_Tree.Projects.Table (Project).Library_Kind = Static then\n-               return Is_Regular_File\n-                 (Lib_Dir & Directory_Separator & \"lib\" &\n-                  MLib.Fil.Append_To (Lib_Name, Archive_Ext));\n-\n-            else\n-               return Is_Regular_File\n-                 (Lib_Dir & Directory_Separator &\n-                  MLib.Fil.Append_To (Lib_Name, DLL_Ext));\n-            end if;\n-         end;\n-      end if;\n-   end Library_Exists_For;\n-\n-   ---------------------------\n-   -- Library_File_Name_For --\n-   ---------------------------\n-\n-   function Library_File_Name_For\n-     (Project : Project_Id;\n-      In_Tree : Project_Tree_Ref) return Name_Id is\n-   begin\n-      if not In_Tree.Projects.Table (Project).Library then\n-         Prj.Com.Fail (\"INTERNAL ERROR: Library_File_Name_For called \" &\n-                       \"for non library project\");\n-         return No_Name;\n-\n-      else\n-         declare\n-            Lib_Name : constant String :=\n-                         Get_Name_String\n-                           (In_Tree.Projects.Table (Project).Library_Name);\n-\n-         begin\n-            if In_Tree.Projects.Table (Project).Library_Kind =\n-              Static\n-            then\n-               Name_Len := 3;\n-               Name_Buffer (1 .. Name_Len) := \"lib\";\n-               Add_Str_To_Name_Buffer (Fil.Append_To (Lib_Name, Archive_Ext));\n-\n-            else\n-               Name_Len := 0;\n-               Add_Str_To_Name_Buffer (Fil.Append_To (Lib_Name, DLL_Ext));\n-            end if;\n-\n-            return Name_Find;\n-         end;\n-      end if;\n-   end Library_File_Name_For;\n-\n-   ----------------\n-   -- Object_Ext --\n-   ----------------\n-\n-   function Object_Ext return String is\n-   begin\n-      return \"o\";\n-   end Object_Ext;\n-\n    ----------------\n    -- PIC_Option --\n    ----------------\n@@ -292,22 +147,10 @@ package body MLib.Tgt is\n       return \"\";\n    end PIC_Option;\n \n-   -----------------------------------------------\n-   -- Standalone_Library_Auto_Init_Is_Supported --\n-   -----------------------------------------------\n-\n-   function Standalone_Library_Auto_Init_Is_Supported return Boolean is\n-   begin\n-      return True;\n-   end Standalone_Library_Auto_Init_Is_Supported;\n-\n-   ---------------------------\n-   -- Support_For_Libraries --\n-   ---------------------------\n-\n-   function Support_For_Libraries return Library_Support is\n-   begin\n-      return Full;\n-   end Support_For_Libraries;\n-\n-end MLib.Tgt;\n+begin\n+   Build_Dynamic_Library_Ptr := Build_Dynamic_Library'Access;\n+   DLL_Ext_Ptr := DLL_Ext'Access;\n+   DLL_Prefix_Ptr := DLL_Prefix'Access;\n+   Is_Archive_Ext_Ptr := Is_Archive_Ext'Access;\n+   PIC_Option_Ptr := PIC_Option'Access;\n+end MLib.Tgt.Specific;"}, {"sha": "1692ccdb28beadf8f31832a252163585c7bf0d34", "filename": "gcc/ada/mlib-tgt-solaris.adb", "status": "modified", "additions": 22, "deletions": 216, "changes": 238, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bb81bc17c6c2c8eeec2218abc5189f798e2ecbe/gcc%2Fada%2Fmlib-tgt-solaris.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bb81bc17c6c2c8eeec2218abc5189f798e2ecbe/gcc%2Fada%2Fmlib-tgt-solaris.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-tgt-solaris.adb?ref=6bb81bc17c6c2c8eeec2218abc5189f798e2ecbe", "patch": "@@ -2,12 +2,12 @@\n --                                                                          --\n --                         GNAT COMPILER COMPONENTS                         --\n --                                                                          --\n---                             M L I B . T G T                              --\n+--                    M L I B . T G T . S P E C I F I C                     --\n --                            (Solaris Version)                             --\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---              Copyright (C) 2002-2006 Free Software Foundation, Inc.      --\n+--              Copyright (C) 2002-2007, Free Software Foundation, Inc.     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -25,65 +25,33 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This package provides a set of target dependent routines to build\n---  static, dynamic and shared libraries.\n-\n --  This is the Solaris version of the body\n \n with MLib.Fil;\n with MLib.Utl;\n-with Namet;  use Namet;\n with Opt;\n with Output; use Output;\n-with Prj.Com;\n with System;\n \n-package body MLib.Tgt is\n-\n-   ---------------------\n-   -- Archive_Builder --\n-   ---------------------\n-\n-   function Archive_Builder return String is\n-   begin\n-      return \"ar\";\n-   end Archive_Builder;\n-\n-   -----------------------------\n-   -- Archive_Builder_Options --\n-   -----------------------------\n-\n-   function Archive_Builder_Options return String_List_Access is\n-   begin\n-      return new String_List'(1 => new String'(\"cr\"));\n-   end Archive_Builder_Options;\n-\n-   -----------------\n-   -- Archive_Ext --\n-   -----------------\n-\n-   function Archive_Ext return  String is\n-   begin\n-      return \"a\";\n-   end Archive_Ext;\n-\n-   ---------------------\n-   -- Archive_Indexer --\n-   ---------------------\n+package body MLib.Tgt.Specific is\n \n-   function Archive_Indexer return String is\n-   begin\n-      return \"ranlib\";\n-   end Archive_Indexer;\n+   --  Non default subprograms\n \n-   -----------------------------\n-   -- Archive_Indexer_Options --\n-   -----------------------------\n+   procedure Build_Dynamic_Library\n+     (Ofiles       : Argument_List;\n+      Foreign      : Argument_List;\n+      Afiles       : Argument_List;\n+      Options      : Argument_List;\n+      Options_2    : Argument_List;\n+      Interfaces   : Argument_List;\n+      Lib_Filename : String;\n+      Lib_Dir      : String;\n+      Symbol_Data  : Symbol_Record;\n+      Driver_Name  : Name_Id := No_Name;\n+      Lib_Version  : String  := \"\";\n+      Auto_Init    : Boolean := False);\n \n-   function Archive_Indexer_Options return String_List_Access is\n-   begin\n-      return new String_List (1 .. 0);\n-   end Archive_Indexer_Options;\n+   function Is_Archive_Ext (Ext : String) return Boolean;\n \n    ---------------------------\n    -- Build_Dynamic_Library --\n@@ -182,51 +150,6 @@ package body MLib.Tgt is\n       end if;\n    end Build_Dynamic_Library;\n \n-   -------------\n-   -- DLL_Ext --\n-   -------------\n-\n-   function DLL_Ext return String is\n-   begin\n-      return \"so\";\n-   end DLL_Ext;\n-\n-   ----------------\n-   -- DLL_Prefix --\n-   ----------------\n-\n-   function DLL_Prefix return String is\n-   begin\n-      return \"lib\";\n-   end DLL_Prefix;\n-\n-   --------------------\n-   -- Dynamic_Option --\n-   --------------------\n-\n-   function Dynamic_Option return String is\n-   begin\n-      return \"-shared\";\n-   end Dynamic_Option;\n-\n-   -------------------\n-   -- Is_Object_Ext --\n-   -------------------\n-\n-   function Is_Object_Ext (Ext : String) return Boolean is\n-   begin\n-      return Ext = \".o\";\n-   end Is_Object_Ext;\n-\n-   --------------\n-   -- Is_C_Ext --\n-   --------------\n-\n-   function Is_C_Ext (Ext : String) return Boolean is\n-   begin\n-      return Ext = \".c\";\n-   end Is_C_Ext;\n-\n    --------------------\n    -- Is_Archive_Ext --\n    --------------------\n@@ -236,124 +159,7 @@ package body MLib.Tgt is\n       return Ext = \".a\" or else Ext = \".so\";\n    end Is_Archive_Ext;\n \n-   -------------\n-   -- Libgnat --\n-   -------------\n-\n-   function Libgnat return String is\n-   begin\n-      return \"libgnat.a\";\n-   end Libgnat;\n-\n-   ------------------------\n-   -- Library_Exists_For --\n-   ------------------------\n-\n-   function Library_Exists_For\n-     (Project : Project_Id;\n-      In_Tree : Project_Tree_Ref) return Boolean\n-   is\n-   begin\n-      if not In_Tree.Projects.Table (Project).Library then\n-         Prj.Com.Fail (\"INTERNAL ERROR: Library_Exists_For called \" &\n-                       \"for non library project\");\n-         return False;\n-\n-      else\n-         declare\n-            Lib_Dir  : constant String :=\n-                         Get_Name_String\n-                           (In_Tree.Projects.Table (Project).Library_Dir);\n-            Lib_Name : constant String :=\n-                         Get_Name_String\n-                           (In_Tree.Projects.Table (Project).Library_Name);\n-\n-         begin\n-            if In_Tree.Projects.Table (Project).Library_Kind = Static then\n-               return Is_Regular_File\n-                 (Lib_Dir & Directory_Separator & \"lib\" &\n-                  Fil.Append_To (Lib_Name, Archive_Ext));\n-\n-            else\n-               return Is_Regular_File\n-                 (Lib_Dir & Directory_Separator & \"lib\" &\n-                  Fil.Append_To (Lib_Name, DLL_Ext));\n-            end if;\n-         end;\n-      end if;\n-   end Library_Exists_For;\n-\n-   ---------------------------\n-   -- Library_File_Name_For --\n-   ---------------------------\n-\n-   function Library_File_Name_For\n-     (Project : Project_Id;\n-      In_Tree : Project_Tree_Ref) return Name_Id\n-   is\n-   begin\n-      if not In_Tree.Projects.Table (Project).Library then\n-         Prj.Com.Fail (\"INTERNAL ERROR: Library_File_Name_For called \" &\n-                       \"for non library project\");\n-         return No_Name;\n-\n-      else\n-         declare\n-            Lib_Name : constant String :=\n-                         Get_Name_String\n-                           (In_Tree.Projects.Table (Project).Library_Name);\n-\n-         begin\n-            Name_Len := 3;\n-            Name_Buffer (1 .. Name_Len) := \"lib\";\n-\n-            if In_Tree.Projects.Table (Project).Library_Kind =\n-              Static\n-            then\n-               Add_Str_To_Name_Buffer (Fil.Append_To (Lib_Name, Archive_Ext));\n-            else\n-               Add_Str_To_Name_Buffer (Fil.Append_To (Lib_Name, DLL_Ext));\n-            end if;\n-\n-            return Name_Find;\n-         end;\n-      end if;\n-   end Library_File_Name_For;\n-\n-   ----------------\n-   -- Object_Ext --\n-   ----------------\n-\n-   function Object_Ext return String is\n-   begin\n-      return \"o\";\n-   end Object_Ext;\n-\n-   ----------------\n-   -- PIC_Option --\n-   ----------------\n-\n-   function PIC_Option return String is\n-   begin\n-      return \"-fPIC\";\n-   end PIC_Option;\n-\n-   -----------------------------------------------\n-   -- Standalone_Library_Auto_Init_Is_Supported --\n-   -----------------------------------------------\n-\n-   function Standalone_Library_Auto_Init_Is_Supported return Boolean is\n-   begin\n-      return True;\n-   end Standalone_Library_Auto_Init_Is_Supported;\n-\n-   ---------------------------\n-   -- Support_For_Libraries --\n-   ---------------------------\n-\n-   function Support_For_Libraries return Library_Support is\n-   begin\n-      return Full;\n-   end Support_For_Libraries;\n-\n-end MLib.Tgt;\n+begin\n+   Build_Dynamic_Library_Ptr := Build_Dynamic_Library'Access;\n+   Is_Archive_Ext_Ptr := Is_Archive_Ext'Access;\n+end MLib.Tgt.Specific;"}, {"sha": "03067b9c1edf36ca4b8f8187209d39e12119bfcf", "filename": "gcc/ada/mlib-tgt-specific.adb", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bb81bc17c6c2c8eeec2218abc5189f798e2ecbe/gcc%2Fada%2Fmlib-tgt-specific.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bb81bc17c6c2c8eeec2218abc5189f798e2ecbe/gcc%2Fada%2Fmlib-tgt-specific.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-tgt-specific.adb?ref=6bb81bc17c6c2c8eeec2218abc5189f798e2ecbe", "patch": "@@ -0,0 +1,31 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT COMPILER COMPONENTS                         --\n+--                                                                          --\n+--                    M L I B . T G T . S P E C I F I C                     --\n+--                          (Default empty version)                         --\n+--                                                                          --\n+--                                 B o d y                                  --\n+--                                                                          --\n+--                     Copyright (C) 2007, AdaCore                          --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n+-- to  the  Free Software Foundation,  51  Franklin  Street,  Fifth  Floor, --\n+-- Boston, MA 02110-1301, USA.                                              --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+--  Default empty version\n+\n+package body MLib.Tgt.Specific is\n+end MLib.Tgt.Specific;"}, {"sha": "f35c04fe4c20e8f60755fa270345923822609abb", "filename": "gcc/ada/mlib-tgt-specific.ads", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bb81bc17c6c2c8eeec2218abc5189f798e2ecbe/gcc%2Fada%2Fmlib-tgt-specific.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bb81bc17c6c2c8eeec2218abc5189f798e2ecbe/gcc%2Fada%2Fmlib-tgt-specific.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-tgt-specific.ads?ref=6bb81bc17c6c2c8eeec2218abc5189f798e2ecbe", "patch": "@@ -0,0 +1,35 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT COMPILER COMPONENTS                         --\n+--                                                                          --\n+--                    M L I B . T G T . S P E C I F I C                     --\n+--                                                                          --\n+--                                 S p e c                                  --\n+--                                                                          --\n+--                     Copyright (C) 2007, AdaCore                          --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n+-- to  the  Free Software Foundation,  51  Franklin  Street,  Fifth  Floor, --\n+-- Boston, MA 02110-1301, USA.                                              --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+--  This child package of package MLib.Tgt has no interface.\n+--  For each platform, there is a specific body that defines the subprogram\n+--  that are different from the default defined in the body of MLib.Tgt,\n+--  and modify the corresponding access to subprogram value in the private\n+--  part of MLib.Tgt.\n+\n+package MLib.Tgt.Specific is\n+   pragma Elaborate_Body;\n+end MLib.Tgt.Specific;"}, {"sha": "50290d26897a647f4b75199fb6d887d19a1e05df", "filename": "gcc/ada/mlib-tgt-tru64.adb", "status": "modified", "additions": 26, "deletions": 207, "changes": 233, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bb81bc17c6c2c8eeec2218abc5189f798e2ecbe/gcc%2Fada%2Fmlib-tgt-tru64.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bb81bc17c6c2c8eeec2218abc5189f798e2ecbe/gcc%2Fada%2Fmlib-tgt-tru64.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-tgt-tru64.adb?ref=6bb81bc17c6c2c8eeec2218abc5189f798e2ecbe", "patch": "@@ -2,12 +2,12 @@\n --                                                                          --\n --                         GNAT COMPILER COMPONENTS                         --\n --                                                                          --\n---                             M L I B . T G T                              --\n+--                    M L I B . T G T . S P E C I F I C                     --\n --                             (True64 Version)                             --\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2002-2006 Free Software Foundation, Inc.          --\n+--          Copyright (C) 2002-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -25,70 +25,41 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This package provides a set of target dependent routines to build\n---  static, dynamic and shared libraries.\n-\n --  This is the True64 version of the body\n \n with MLib.Fil;\n with MLib.Utl;\n-with Namet;  use Namet;\n with Opt;\n with Output; use Output;\n-with Prj.Com;\n with System;\n \n-package body MLib.Tgt is\n+package body MLib.Tgt.Specific is\n \n-   use GNAT;\n    use MLib;\n \n-   Expect_Unresolved : aliased String := \"-Wl,-expect_unresolved,*\";\n-\n-   ---------------------\n-   -- Archive_Builder --\n-   ---------------------\n-\n-   function Archive_Builder return String is\n-   begin\n-      return \"ar\";\n-   end Archive_Builder;\n-\n-   -----------------------------\n-   -- Archive_Builder_Options --\n-   -----------------------------\n+   --  Non default subprogram\n \n-   function Archive_Builder_Options return String_List_Access is\n-   begin\n-      return new String_List'(1 => new String'(\"cr\"));\n-   end Archive_Builder_Options;\n-\n-   -----------------\n-   -- Archive_Ext --\n-   -----------------\n-\n-   function Archive_Ext return  String is\n-   begin\n-      return \"a\";\n-   end Archive_Ext;\n+   procedure Build_Dynamic_Library\n+     (Ofiles       : Argument_List;\n+      Foreign      : Argument_List;\n+      Afiles       : Argument_List;\n+      Options      : Argument_List;\n+      Options_2    : Argument_List;\n+      Interfaces   : Argument_List;\n+      Lib_Filename : String;\n+      Lib_Dir      : String;\n+      Symbol_Data  : Symbol_Record;\n+      Driver_Name  : Name_Id := No_Name;\n+      Lib_Version  : String  := \"\";\n+      Auto_Init    : Boolean := False);\n \n-   ---------------------\n-   -- Archive_Indexer --\n-   ---------------------\n+   function Is_Archive_Ext (Ext : String) return Boolean;\n \n-   function Archive_Indexer return String is\n-   begin\n-      return \"ranlib\";\n-   end Archive_Indexer;\n+   function PIC_Option return String;\n \n-   -----------------------------\n-   -- Archive_Indexer_Options --\n-   -----------------------------\n+   --  Local variables\n \n-   function Archive_Indexer_Options return String_List_Access is\n-   begin\n-      return new String_List (1 .. 0);\n-   end Archive_Indexer_Options;\n+   Expect_Unresolved : aliased String := \"-Wl,-expect_unresolved,*\";\n \n    ---------------------------\n    -- Build_Dynamic_Library --\n@@ -192,51 +163,6 @@ package body MLib.Tgt is\n       end if;\n    end Build_Dynamic_Library;\n \n-   -------------\n-   -- DLL_Ext --\n-   -------------\n-\n-   function DLL_Ext return String is\n-   begin\n-      return \"so\";\n-   end DLL_Ext;\n-\n-   ----------------\n-   -- DLL_Prefix --\n-   ----------------\n-\n-   function DLL_Prefix return String is\n-   begin\n-      return \"lib\";\n-   end DLL_Prefix;\n-\n-   --------------------\n-   -- Dynamic_Option --\n-   --------------------\n-\n-   function Dynamic_Option return String is\n-   begin\n-      return \"-shared\";\n-   end Dynamic_Option;\n-\n-   -------------------\n-   -- Is_Object_Ext --\n-   -------------------\n-\n-   function Is_Object_Ext (Ext : String) return Boolean is\n-   begin\n-      return Ext = \".o\";\n-   end Is_Object_Ext;\n-\n-   --------------\n-   -- Is_C_Ext --\n-   --------------\n-\n-   function Is_C_Ext (Ext : String) return Boolean is\n-   begin\n-      return Ext = \".c\";\n-   end Is_C_Ext;\n-\n    --------------------\n    -- Is_Archive_Ext --\n    --------------------\n@@ -246,99 +172,6 @@ package body MLib.Tgt is\n       return Ext = \".a\" or else Ext = \".so\";\n    end Is_Archive_Ext;\n \n-   -------------\n-   -- Libgnat --\n-   -------------\n-\n-   function Libgnat return String is\n-   begin\n-      return \"libgnat.a\";\n-   end Libgnat;\n-\n-   ------------------------\n-   -- Library_Exists_For --\n-   ------------------------\n-\n-   function Library_Exists_For\n-     (Project : Project_Id;\n-      In_Tree : Project_Tree_Ref) return Boolean\n-   is\n-   begin\n-      if not In_Tree.Projects.Table (Project).Library then\n-         Prj.Com.Fail (\"INTERNAL ERROR: Library_Exists_For called \" &\n-                       \"for non library project\");\n-         return False;\n-\n-      else\n-         declare\n-            Lib_Dir  : constant String :=\n-                         Get_Name_String\n-                           (In_Tree.Projects.Table (Project).Library_Dir);\n-            Lib_Name : constant String :=\n-                         Get_Name_String\n-                           (In_Tree.Projects.Table (Project).Library_Name);\n-\n-         begin\n-            if In_Tree.Projects.Table (Project).Library_Kind = Static then\n-               return Is_Regular_File\n-                 (Lib_Dir & Directory_Separator & \"lib\" &\n-                  Fil.Append_To (Lib_Name, Archive_Ext));\n-\n-            else\n-               return Is_Regular_File\n-                 (Lib_Dir & Directory_Separator & \"lib\" &\n-                  Fil.Append_To (Lib_Name, DLL_Ext));\n-            end if;\n-         end;\n-      end if;\n-   end Library_Exists_For;\n-\n-   ---------------------------\n-   -- Library_File_Name_For --\n-   ---------------------------\n-\n-   function Library_File_Name_For\n-     (Project : Project_Id;\n-      In_Tree : Project_Tree_Ref) return Name_Id\n-   is\n-   begin\n-      if not In_Tree.Projects.Table (Project).Library then\n-         Prj.Com.Fail (\"INTERNAL ERROR: Library_File_Name_For called \" &\n-                       \"for non library project\");\n-         return No_Name;\n-\n-      else\n-         declare\n-            Lib_Name : constant String :=\n-                         Get_Name_String\n-                           (In_Tree.Projects.Table (Project).Library_Name);\n-\n-         begin\n-            Name_Len := 3;\n-            Name_Buffer (1 .. Name_Len) := \"lib\";\n-\n-            if In_Tree.Projects.Table (Project).Library_Kind =\n-              Static\n-            then\n-               Add_Str_To_Name_Buffer (Fil.Append_To (Lib_Name, Archive_Ext));\n-            else\n-               Add_Str_To_Name_Buffer (Fil.Append_To (Lib_Name, DLL_Ext));\n-            end if;\n-\n-            return Name_Find;\n-         end;\n-      end if;\n-   end Library_File_Name_For;\n-\n-   ----------------\n-   -- Object_Ext --\n-   ----------------\n-\n-   function Object_Ext return String is\n-   begin\n-      return \"o\";\n-   end Object_Ext;\n-\n    ----------------\n    -- PIC_Option --\n    ----------------\n@@ -348,22 +181,8 @@ package body MLib.Tgt is\n       return \"\";\n    end PIC_Option;\n \n-   -----------------------------------------------\n-   -- Standalone_Library_Auto_Init_Is_Supported --\n-   -----------------------------------------------\n-\n-   function Standalone_Library_Auto_Init_Is_Supported return Boolean is\n-   begin\n-      return True;\n-   end Standalone_Library_Auto_Init_Is_Supported;\n-\n-   ---------------------------\n-   -- Support_For_Libraries --\n-   ---------------------------\n-\n-   function Support_For_Libraries return Library_Support is\n-   begin\n-      return Full;\n-   end Support_For_Libraries;\n-\n-end MLib.Tgt;\n+begin\n+   Build_Dynamic_Library_Ptr := Build_Dynamic_Library'Access;\n+   Is_Archive_Ext_Ptr := Is_Archive_Ext'Access;\n+   PIC_Option_Ptr := PIC_Option'Access;\n+end MLib.Tgt.Specific;"}, {"sha": "b091799764aab69fd46a841b0e523826488e5f65", "filename": "gcc/ada/mlib-tgt-vms-alpha.adb", "status": "modified", "additions": 50, "deletions": 260, "changes": 310, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bb81bc17c6c2c8eeec2218abc5189f798e2ecbe/gcc%2Fada%2Fmlib-tgt-vms-alpha.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bb81bc17c6c2c8eeec2218abc5189f798e2ecbe/gcc%2Fada%2Fmlib-tgt-vms-alpha.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-tgt-vms-alpha.adb?ref=6bb81bc17c6c2c8eeec2218abc5189f798e2ecbe", "patch": "@@ -2,12 +2,12 @@\n --                                                                          --\n --                         GNAT COMPILER COMPONENTS                         --\n --                                                                          --\n---                             M L I B . T G T                              --\n+--                    M L I B . T G T . S P E C I F I C                     --\n --                           (Alpha VMS Version)                            --\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2003-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2003-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -29,22 +29,41 @@\n \n with Ada.Characters.Handling; use Ada.Characters.Handling;\n \n-with GNAT.Directory_Operations; use GNAT.Directory_Operations;\n-\n with MLib.Fil;\n with MLib.Utl;\n-with Namet;    use Namet;\n-with Opt;      use Opt;\n-with Output;   use Output;\n-with Prj.Com;\n+\n+with MLib.Tgt.VMS;\n+pragma Warnings (Off, MLib.Tgt.VMS);\n+--  MLib.Tgt.VMS is with'ed only for elaboration purposes\n+\n+with Opt;    use Opt;\n+with Output; use Output;\n+\n+with GNAT.Directory_Operations; use GNAT.Directory_Operations;\n \n with System;           use System;\n with System.Case_Util; use System.Case_Util;\n with System.CRTL;      use System.CRTL;\n \n-package body MLib.Tgt is\n+package body MLib.Tgt.Specific is\n+\n+   --  Non default subprogram. See comment in mlib-tgt.ads.\n+\n+   procedure Build_Dynamic_Library\n+     (Ofiles       : Argument_List;\n+      Foreign      : Argument_List;\n+      Afiles       : Argument_List;\n+      Options      : Argument_List;\n+      Options_2    : Argument_List;\n+      Interfaces   : Argument_List;\n+      Lib_Filename : String;\n+      Lib_Dir      : String;\n+      Symbol_Data  : Symbol_Record;\n+      Driver_Name  : Name_Id := No_Name;\n+      Lib_Version  : String  := \"\";\n+      Auto_Init    : Boolean := False);\n \n-   use GNAT;\n+   --  Local variables\n \n    Empty_Argument_List : aliased Argument_List := (1 .. 0 => null);\n    Additional_Objects  : Argument_List_Access := Empty_Argument_List'Access;\n@@ -67,56 +86,8 @@ package body MLib.Tgt is\n \n    Shared_Libgcc : aliased String := \"-shared-libgcc\";\n \n-   No_Shared_Libgcc_Switch : aliased Argument_List := (1 .. 0 => null);\n-   Shared_Libgcc_Switch    : aliased Argument_List :=\n-                               (1 => Shared_Libgcc'Access);\n-   Link_With_Shared_Libgcc : Argument_List_Access :=\n-                               No_Shared_Libgcc_Switch'Access;\n-\n-   ---------------------\n-   -- Archive_Builder --\n-   ---------------------\n-\n-   function Archive_Builder return String is\n-   begin\n-      return \"ar\";\n-   end Archive_Builder;\n-\n-   -----------------------------\n-   -- Archive_Builder_Options --\n-   -----------------------------\n-\n-   function Archive_Builder_Options return String_List_Access is\n-   begin\n-      return new String_List'(1 => new String'(\"cr\"));\n-   end Archive_Builder_Options;\n-\n-   -----------------\n-   -- Archive_Ext --\n-   -----------------\n-\n-   function Archive_Ext return String is\n-   begin\n-      return \"olb\";\n-   end Archive_Ext;\n-\n-   ---------------------\n-   -- Archive_Indexer --\n-   ---------------------\n-\n-   function Archive_Indexer return String is\n-   begin\n-      return \"ranlib\";\n-   end Archive_Indexer;\n-\n-   -----------------------------\n-   -- Archive_Indexer_Options --\n-   -----------------------------\n-\n-   function Archive_Indexer_Options return String_List_Access is\n-   begin\n-      return new String_List (1 .. 0);\n-   end Archive_Indexer_Options;\n+   Shared_Libgcc_Switch : constant Argument_List :=\n+                            (1 => Shared_Libgcc'Access);\n \n    ---------------------------\n    -- Build_Dynamic_Library --\n@@ -160,9 +131,9 @@ package body MLib.Tgt is\n \n       function Version_String return String;\n       --  Returns Lib_Version if not empty and if Symbol_Data.Symbol_Policy is\n-      --  not Autonomous, otherwise returns \"\".\n-      --  When Symbol_Data.Symbol_Policy is Autonomous, fails gnatmake if\n-      --  Lib_Version is not the image of a positive number.\n+      --  not Autonomous, otherwise returns \"\". When Symbol_Data.Symbol_Policy\n+      --  is Autonomous, fails gnatmake if Lib_Version is not the image of a\n+      --  positive number.\n \n       ------------------\n       -- Is_Interface --\n@@ -215,6 +186,7 @@ package body MLib.Tgt is\n \n       function Version_String return String is\n          Version : Integer := 0;\n+\n       begin\n          if Lib_Version = \"\"\n            or else Symbol_Data.Symbol_Policy /= Autonomous\n@@ -240,21 +212,17 @@ package body MLib.Tgt is\n          end if;\n       end Version_String;\n \n+      ---------------------\n+      -- Local Variables --\n+      ---------------------\n+\n       Opt_File_Name  : constant String := Option_File_Name;\n       Version        : constant String := Version_String;\n       For_Linker_Opt : String_Access;\n \n    --  Start of processing for Build_Dynamic_Library\n \n    begin\n-      --  Invoke gcc with -shared-libgcc, but only for GCC 3 or higher\n-\n-      if GCC_Version >= 3 then\n-         Link_With_Shared_Libgcc := Shared_Libgcc_Switch'Access;\n-      else\n-         Link_With_Shared_Libgcc := No_Shared_Libgcc_Switch'Access;\n-      end if;\n-\n       --  If option file name does not ends with \".opt\", append \"/OPTIONS\"\n       --  to its specification for the VMS linker.\n \n@@ -277,7 +245,7 @@ package body MLib.Tgt is\n       --  \"gnatsym\" is necessary for building the option file\n \n       if Gnatsym_Path = null then\n-         Gnatsym_Path := OS_Lib.Locate_Exec_On_Path (Gnatsym_Name);\n+         Gnatsym_Path := Locate_Exec_On_Path (Gnatsym_Name);\n \n          if Gnatsym_Path = null then\n             Fail (Gnatsym_Name, \" not found in path\");\n@@ -443,6 +411,11 @@ package body MLib.Tgt is\n          when Restricted =>\n             Last_Argument := Last_Argument + 1;\n             Arguments (Last_Argument) := new String'(\"-R\");\n+\n+         when Direct =>\n+            Last_Argument := Last_Argument + 1;\n+            Arguments (Last_Argument) := new String'(\"-D\");\n+\n       end case;\n \n       --  Add each relevant object file\n@@ -502,7 +475,7 @@ package body MLib.Tgt is\n         (Output_File => Lib_File,\n          Objects     => Ofiles & Additional_Objects.all,\n          Options     => VMS_Options,\n-         Options_2   => Link_With_Shared_Libgcc.all &\n+         Options_2   => Shared_Libgcc_Switch &\n                         Opts (Opts'First .. Last_Opt) &\n                         Opts2 (Opts2'First .. Last_Opt2) & Options_2,\n          Driver_Name => Driver_Name);\n@@ -530,191 +503,8 @@ package body MLib.Tgt is\n       end if;\n    end Build_Dynamic_Library;\n \n-   -------------\n-   -- DLL_Ext --\n-   -------------\n-\n-   function DLL_Ext return String is\n-   begin\n-      return \"exe\";\n-   end DLL_Ext;\n-\n-   ----------------\n-   -- DLL_Prefix --\n-   ----------------\n-\n-   function DLL_Prefix return String is\n-   begin\n-      return \"lib\";\n-   end DLL_Prefix;\n-\n-   --------------------\n-   -- Dynamic_Option --\n-   --------------------\n-\n-   function Dynamic_Option return String is\n-   begin\n-      return \"-shared\";\n-   end Dynamic_Option;\n-\n-   -------------------\n-   -- Is_Object_Ext --\n-   -------------------\n-\n-   function Is_Object_Ext (Ext : String) return Boolean is\n-   begin\n-      return Ext = \".obj\";\n-   end Is_Object_Ext;\n-\n-   --------------\n-   -- Is_C_Ext --\n-   --------------\n-\n-   function Is_C_Ext (Ext : String) return Boolean is\n-   begin\n-      return Ext = \".c\";\n-   end Is_C_Ext;\n-\n-   --------------------\n-   -- Is_Archive_Ext --\n-   --------------------\n-\n-   function Is_Archive_Ext (Ext : String) return Boolean is\n-   begin\n-      return Ext = \".olb\" or else Ext = \".exe\";\n-   end Is_Archive_Ext;\n-\n-   -------------\n-   -- Libgnat --\n-   -------------\n-\n-   function Libgnat return String is\n-      Libgnat_A : constant String := \"libgnat.a\";\n-      Libgnat_Olb : constant String := \"libgnat.olb\";\n-\n-   begin\n-      Name_Len := Libgnat_A'Length;\n-      Name_Buffer (1 .. Name_Len) := Libgnat_A;\n-\n-      if Osint.Find_File (Name_Enter, Osint.Library) /= No_File then\n-         return Libgnat_A;\n-\n-      else\n-         return Libgnat_Olb;\n-      end if;\n-   end Libgnat;\n-\n-   ------------------------\n-   -- Library_Exists_For --\n-   ------------------------\n-\n-   function Library_Exists_For\n-     (Project : Project_Id; In_Tree : Project_Tree_Ref) return Boolean\n-   is\n-   begin\n-      if not In_Tree.Projects.Table (Project).Library then\n-         Fail (\"INTERNAL ERROR: Library_Exists_For called \" &\n-               \"for non library project\");\n-         return False;\n-\n-      else\n-         declare\n-            Lib_Dir : constant String :=\n-              Get_Name_String\n-                (In_Tree.Projects.Table (Project).Library_Dir);\n-            Lib_Name : constant String :=\n-              Get_Name_String\n-                (In_Tree.Projects.Table (Project).Library_Name);\n-\n-         begin\n-            if In_Tree.Projects.Table (Project).Library_Kind =\n-              Static\n-            then\n-               return Is_Regular_File\n-                 (Lib_Dir & Directory_Separator & \"lib\" &\n-                  Fil.Ext_To (Lib_Name, Archive_Ext));\n-\n-            else\n-               return Is_Regular_File\n-                 (Lib_Dir & Directory_Separator & \"lib\" &\n-                  Fil.Ext_To (Lib_Name, DLL_Ext));\n-            end if;\n-         end;\n-      end if;\n-   end Library_Exists_For;\n-\n-   ---------------------------\n-   -- Library_File_Name_For --\n-   ---------------------------\n-\n-   function Library_File_Name_For\n-     (Project : Project_Id;\n-      In_Tree : Project_Tree_Ref) return Name_Id\n-   is\n-   begin\n-      if not In_Tree.Projects.Table (Project).Library then\n-         Prj.Com.Fail (\"INTERNAL ERROR: Library_File_Name_For called \" &\n-                       \"for non library project\");\n-         return No_Name;\n-\n-      else\n-         declare\n-            Lib_Name : constant String :=\n-              Get_Name_String\n-                (In_Tree.Projects.Table (Project).Library_Name);\n-\n-         begin\n-            Name_Len := 3;\n-            Name_Buffer (1 .. Name_Len) := \"lib\";\n-\n-            if In_Tree.Projects.Table (Project).Library_Kind =\n-              Static\n-            then\n-               Add_Str_To_Name_Buffer (Fil.Ext_To (Lib_Name, Archive_Ext));\n-\n-            else\n-               Add_Str_To_Name_Buffer (Fil.Ext_To (Lib_Name, DLL_Ext));\n-            end if;\n-\n-            return Name_Find;\n-         end;\n-      end if;\n-   end Library_File_Name_For;\n-\n-   ----------------\n-   -- Object_Ext --\n-   ----------------\n-\n-   function Object_Ext return String is\n-   begin\n-      return \"obj\";\n-   end Object_Ext;\n-\n-   ----------------\n-   -- PIC_Option --\n-   ----------------\n-\n-   function PIC_Option return String is\n-   begin\n-      return \"\";\n-   end PIC_Option;\n-\n-   -----------------------------------------------\n-   -- Standalone_Library_Auto_Init_Is_Supported --\n-   -----------------------------------------------\n-\n-   function Standalone_Library_Auto_Init_Is_Supported return Boolean is\n-   begin\n-      return True;\n-   end Standalone_Library_Auto_Init_Is_Supported;\n-\n-   ---------------------------\n-   -- Support_For_Libraries --\n-   ---------------------------\n-\n-   function Support_For_Libraries return Library_Support is\n-   begin\n-      return Full;\n-   end Support_For_Libraries;\n+--  Package initialization\n \n-end MLib.Tgt;\n+begin\n+   Build_Dynamic_Library_Ptr    := Build_Dynamic_Library'Access;\n+end MLib.Tgt.Specific;"}, {"sha": "9aad7b879087adc7d3282a2b70e105cd0a640c4e", "filename": "gcc/ada/mlib-tgt-vms-ia64.adb", "status": "modified", "additions": 74, "deletions": 281, "changes": 355, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bb81bc17c6c2c8eeec2218abc5189f798e2ecbe/gcc%2Fada%2Fmlib-tgt-vms-ia64.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bb81bc17c6c2c8eeec2218abc5189f798e2ecbe/gcc%2Fada%2Fmlib-tgt-vms-ia64.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-tgt-vms-ia64.adb?ref=6bb81bc17c6c2c8eeec2218abc5189f798e2ecbe", "patch": "@@ -2,12 +2,12 @@\n --                                                                          --\n --                         GNAT COMPILER COMPONENTS                         --\n --                                                                          --\n---                             M L I B . T G T                              --\n+--                    M L I B . T G T . S P E C I F I C                     --\n --                         (Integrity VMS Version)                          --\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---            Copyright (C) 2004-2005 Free Software Foundation, Inc.        --\n+--            Copyright (C) 2004-2007, Free Software Foundation, Inc.       --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -29,29 +29,48 @@\n \n with Ada.Characters.Handling; use Ada.Characters.Handling;\n \n-with GNAT.Directory_Operations; use GNAT.Directory_Operations;\n-\n with MLib.Fil;\n with MLib.Utl;\n-with Namet;    use Namet;\n-with Opt;      use Opt;\n-with Output;   use Output;\n-with Prj.Com;\n+\n+with MLib.Tgt.VMS;\n+pragma Warnings (Off, MLib.Tgt.VMS);\n+--  MLib.Tgt.VMS is with'ed only for elaboration purposes\n+\n+with Opt;    use Opt;\n+with Output; use Output;\n+\n+with GNAT.Directory_Operations; use GNAT.Directory_Operations;\n \n with System;           use System;\n with System.Case_Util; use System.Case_Util;\n with System.CRTL;      use System.CRTL;\n \n-package body MLib.Tgt is\n+package body MLib.Tgt.Specific is\n \n-   use GNAT;\n+   --  Non default subprogram. See comment in mlib-tgt.ads\n+\n+   procedure Build_Dynamic_Library\n+     (Ofiles       : Argument_List;\n+      Foreign      : Argument_List;\n+      Afiles       : Argument_List;\n+      Options      : Argument_List;\n+      Options_2    : Argument_List;\n+      Interfaces   : Argument_List;\n+      Lib_Filename : String;\n+      Lib_Dir      : String;\n+      Symbol_Data  : Symbol_Record;\n+      Driver_Name  : Name_Id := No_Name;\n+      Lib_Version  : String  := \"\";\n+      Auto_Init    : Boolean := False);\n+\n+   --  Local variables\n \n    Empty_Argument_List : aliased Argument_List := (1 .. 0 => null);\n    Additional_Objects  : Argument_List_Access := Empty_Argument_List'Access;\n    --  Used to add the generated auto-init object files for auto-initializing\n    --  stand-alone libraries.\n \n-   Macro_Name   : constant String := \"mcr gnu:[bin]gcc -c -x assembler\";\n+   Macro_Name : constant String := \"mcr gnu:[bin]gcc -c -x assembler\";\n    --  The name of the command to invoke the macro-assembler\n \n    VMS_Options : Argument_List := (1 .. 1 => null);\n@@ -60,63 +79,15 @@ package body MLib.Tgt is\n \n    Gnatsym_Path : String_Access;\n \n-   Arguments : Argument_List_Access := null;\n+   Arguments     : Argument_List_Access := null;\n    Last_Argument : Natural := 0;\n \n    Success : Boolean := False;\n \n    Shared_Libgcc : aliased String := \"-shared-libgcc\";\n \n-   No_Shared_Libgcc_Switch : aliased Argument_List := (1 .. 0 => null);\n-   Shared_Libgcc_Switch    : aliased Argument_List :=\n-                               (1 => Shared_Libgcc'Access);\n-   Link_With_Shared_Libgcc : Argument_List_Access :=\n-                               No_Shared_Libgcc_Switch'Access;\n-\n-   ---------------------\n-   -- Archive_Builder --\n-   ---------------------\n-\n-   function Archive_Builder return String is\n-   begin\n-      return \"ar\";\n-   end Archive_Builder;\n-\n-   -----------------------------\n-   -- Archive_Builder_Options --\n-   -----------------------------\n-\n-   function Archive_Builder_Options return String_List_Access is\n-   begin\n-      return new String_List'(1 => new String'(\"cr\"));\n-   end Archive_Builder_Options;\n-\n-   -----------------\n-   -- Archive_Ext --\n-   -----------------\n-\n-   function Archive_Ext return String is\n-   begin\n-      return \"olb\";\n-   end Archive_Ext;\n-\n-   ---------------------\n-   -- Archive_Indexer --\n-   ---------------------\n-\n-   function Archive_Indexer return String is\n-   begin\n-      return \"ranlib\";\n-   end Archive_Indexer;\n-\n-   -----------------------------\n-   -- Archive_Indexer_Options --\n-   -----------------------------\n-\n-   function Archive_Indexer_Options return String_List_Access is\n-   begin\n-      return new String_List (1 .. 0);\n-   end Archive_Indexer_Options;\n+   Shared_Libgcc_Switch : constant Argument_List :=\n+                            (1 => Shared_Libgcc'Access);\n \n    ---------------------------\n    -- Build_Dynamic_Library --\n@@ -160,9 +131,9 @@ package body MLib.Tgt is\n \n       function Version_String return String;\n       --  Returns Lib_Version if not empty and if Symbol_Data.Symbol_Policy is\n-      --  not Autonomous, otherwise returns \"\".\n-      --  When Symbol_Data.Symbol_Policy is Autonomous, fails gnatmake if\n-      --  Lib_Version is not the image of a positive number.\n+      --  not Autonomous, otherwise returns \"\". When Symbol_Data.Symbol_Policy\n+      --  is Autonomous, fails gnatmake if Lib_Version is not the image of a\n+      --  positive number.\n \n       ------------------\n       -- Is_Interface --\n@@ -240,21 +211,17 @@ package body MLib.Tgt is\n          end if;\n       end Version_String;\n \n+      ---------------------\n+      -- Local Variables --\n+      ---------------------\n+\n       Opt_File_Name  : constant String := Option_File_Name;\n       Version        : constant String := Version_String;\n       For_Linker_Opt : String_Access;\n \n    --  Start of processing for Build_Dynamic_Library\n \n    begin\n-      --  Invoke gcc with -shared-libgcc, but only for GCC 3 or higher\n-\n-      if GCC_Version >= 3 then\n-         Link_With_Shared_Libgcc := Shared_Libgcc_Switch'Access;\n-      else\n-         Link_With_Shared_Libgcc := No_Shared_Libgcc_Switch'Access;\n-      end if;\n-\n       --  Option file must end with \".opt\"\n \n       if Opt_File_Name'Length > 4\n@@ -275,7 +242,7 @@ package body MLib.Tgt is\n       --  \"gnatsym\" is necessary for building the option file\n \n       if Gnatsym_Path = null then\n-         Gnatsym_Path := OS_Lib.Locate_Exec_On_Path (Gnatsym_Name);\n+         Gnatsym_Path := Locate_Exec_On_Path (Gnatsym_Name);\n \n          if Gnatsym_Path = null then\n             Fail (Gnatsym_Name, \" not found in path\");\n@@ -295,13 +262,15 @@ package body MLib.Tgt is\n             Len             : Natural;\n             OK              : Boolean := True;\n \n-            command  : constant String :=\n-                         Macro_Name & \" \" & Macro_File_Name & ASCII.NUL;\n+            command : constant String :=\n+                        Macro_Name & \" \" & Macro_File_Name & ASCII.NUL;\n             --  The command to invoke the assembler on the generated auto-init\n             --  assembly file.\n+            --  Why odd lower case name ???\n \n             mode : constant String := \"r\" & ASCII.NUL;\n             --  The mode for the invocation of Popen\n+            --  Why odd lower case name ???\n \n          begin\n             To_Upper (Init_Proc);\n@@ -315,26 +284,26 @@ package body MLib.Tgt is\n             --  Create and write the auto-init assembly file\n \n             declare\n-               First_Line : constant String :=\n-                 ASCII.HT &\n-                 \".type \" & Init_Proc & \"#, @function\" &\n-                 ASCII.LF;\n+               First_Line  : constant String :=\n+                               ASCII.HT\n+                               & \".type \" & Init_Proc & \"#, @function\"\n+                               & ASCII.LF;\n                Second_Line : constant String :=\n-                 ASCII.HT &\n-                 \".global \" & Init_Proc & \"#\" &\n-                 ASCII.LF;\n-               Third_Line : constant String :=\n-                 ASCII.HT &\n-                 \".global LIB$INITIALIZE#\" &\n-                 ASCII.LF;\n+                               ASCII.HT\n+                               & \".global \" & Init_Proc & \"#\"\n+                               & ASCII.LF;\n+               Third_Line  : constant String :=\n+                               ASCII.HT\n+                               & \".global LIB$INITIALIZE#\"\n+                               & ASCII.LF;\n                Fourth_Line : constant String :=\n-                 ASCII.HT &\n-                 \".section LIB$INITIALIZE#,\"\"a\"\",@progbits\" &\n-                 ASCII.LF;\n-               Fifth_Line : constant String :=\n-                 ASCII.HT &\n-                 \"data4 @fptr(\" & Init_Proc & \"#)\" &\n-                  ASCII.LF;\n+                               ASCII.HT\n+                               & \".section LIB$INITIALIZE#,\"\"a\"\",@progbits\"\n+                               & ASCII.LF;\n+               Fifth_Line  : constant String :=\n+                               ASCII.HT\n+                               & \"data4 @fptr(\" & Init_Proc & \"#)\"\n+                               & ASCII.LF;\n \n             begin\n                Macro_File := Create_File (Macro_File_Name, Text);\n@@ -476,6 +445,10 @@ package body MLib.Tgt is\n          when Restricted =>\n             Last_Argument := Last_Argument + 1;\n             Arguments (Last_Argument) := new String'(\"-R\");\n+\n+         when Direct =>\n+            Last_Argument := Last_Argument + 1;\n+            Arguments (Last_Argument) := new String'(\"-D\");\n       end case;\n \n       --  Add each relevant object file\n@@ -535,7 +508,7 @@ package body MLib.Tgt is\n         (Output_File => Lib_File,\n          Objects     => Ofiles & Additional_Objects.all,\n          Options     => VMS_Options,\n-         Options_2   => Link_With_Shared_Libgcc.all &\n+         Options_2   => Shared_Libgcc_Switch &\n                         Opts (Opts'First .. Last_Opt) &\n                         Opts2 (Opts2'First .. Last_Opt2) & Options_2,\n          Driver_Name => Driver_Name);\n@@ -549,7 +522,9 @@ package body MLib.Tgt is\n          declare\n             Auto_Init_Object_File_Name : constant String :=\n                                            Lib_Filename & \"__init.obj\";\n+\n             Disregard : Boolean;\n+            pragma Warnings (Off, Disregard);\n \n          begin\n             if Verbose_Mode then\n@@ -563,190 +538,8 @@ package body MLib.Tgt is\n       end if;\n    end Build_Dynamic_Library;\n \n-   -------------\n-   -- DLL_Ext --\n-   -------------\n-\n-   function DLL_Ext return String is\n-   begin\n-      return \"exe\";\n-   end DLL_Ext;\n-\n-   ----------------\n-   -- DLL_Prefix --\n-   ----------------\n-\n-   function DLL_Prefix return String is\n-   begin\n-      return \"lib\";\n-   end DLL_Prefix;\n-\n-   --------------------\n-   -- Dynamic_Option --\n-   --------------------\n-\n-   function Dynamic_Option return String is\n-   begin\n-      return \"-shared\";\n-   end Dynamic_Option;\n-\n-   -------------------\n-   -- Is_Object_Ext --\n-   -------------------\n-\n-   function Is_Object_Ext (Ext : String) return Boolean is\n-   begin\n-      return Ext = \".obj\";\n-   end Is_Object_Ext;\n-\n-   --------------\n-   -- Is_C_Ext --\n-   --------------\n-\n-   function Is_C_Ext (Ext : String) return Boolean is\n-   begin\n-      return Ext = \".c\";\n-   end Is_C_Ext;\n-\n-   --------------------\n-   -- Is_Archive_Ext --\n-   --------------------\n-\n-   function Is_Archive_Ext (Ext : String) return Boolean is\n-   begin\n-      return Ext = \".olb\" or else Ext = \".exe\";\n-   end Is_Archive_Ext;\n-\n-   -------------\n-   -- Libgnat --\n-   -------------\n-\n-   function Libgnat return String is\n-      Libgnat_A : constant String := \"libgnat.a\";\n-      Libgnat_Olb : constant String := \"libgnat.olb\";\n-\n-   begin\n-      Name_Len := Libgnat_A'Length;\n-      Name_Buffer (1 .. Name_Len) := Libgnat_A;\n-\n-      if Osint.Find_File (Name_Enter, Osint.Library) /= No_File then\n-         return Libgnat_A;\n-\n-      else\n-         return Libgnat_Olb;\n-      end if;\n-   end Libgnat;\n-\n-   ------------------------\n-   -- Library_Exists_For --\n-   ------------------------\n-\n-   function Library_Exists_For\n-     (Project : Project_Id; In_Tree : Project_Tree_Ref) return Boolean\n-   is\n-   begin\n-      if not In_Tree.Projects.Table (Project).Library then\n-         Fail (\"INTERNAL ERROR: Library_Exists_For called \" &\n-               \"for non library project\");\n-         return False;\n-\n-      else\n-         declare\n-            Lib_Dir : constant String :=\n-              Get_Name_String\n-                (In_Tree.Projects.Table (Project).Library_Dir);\n-            Lib_Name : constant String :=\n-              Get_Name_String\n-                (In_Tree.Projects.Table (Project).Library_Name);\n-\n-         begin\n-            if In_Tree.Projects.Table (Project).Library_Kind =\n-              Static\n-            then\n-               return Is_Regular_File\n-                 (Lib_Dir & Directory_Separator & \"lib\" &\n-                  Fil.Ext_To (Lib_Name, Archive_Ext));\n-\n-            else\n-               return Is_Regular_File\n-                 (Lib_Dir & Directory_Separator & \"lib\" &\n-                  Fil.Ext_To (Lib_Name, DLL_Ext));\n-            end if;\n-         end;\n-      end if;\n-   end Library_Exists_For;\n-\n-   ---------------------------\n-   -- Library_File_Name_For --\n-   ---------------------------\n-\n-   function Library_File_Name_For\n-     (Project : Project_Id;\n-      In_Tree : Project_Tree_Ref) return Name_Id\n-   is\n-   begin\n-      if not In_Tree.Projects.Table (Project).Library then\n-         Prj.Com.Fail (\"INTERNAL ERROR: Library_File_Name_For called \" &\n-                       \"for non library project\");\n-         return No_Name;\n-\n-      else\n-         declare\n-            Lib_Name : constant String :=\n-              Get_Name_String\n-                (In_Tree.Projects.Table (Project).Library_Name);\n-\n-         begin\n-            Name_Len := 3;\n-            Name_Buffer (1 .. Name_Len) := \"lib\";\n-\n-            if In_Tree.Projects.Table (Project).Library_Kind =\n-              Static then\n-               Add_Str_To_Name_Buffer (Fil.Ext_To (Lib_Name, Archive_Ext));\n-\n-            else\n-               Add_Str_To_Name_Buffer (Fil.Ext_To (Lib_Name, DLL_Ext));\n-            end if;\n-\n-            return Name_Find;\n-         end;\n-      end if;\n-   end Library_File_Name_For;\n-\n-   ----------------\n-   -- Object_Ext --\n-   ----------------\n-\n-   function Object_Ext return String is\n-   begin\n-      return \"obj\";\n-   end Object_Ext;\n-\n-   ----------------\n-   -- PIC_Option --\n-   ----------------\n-\n-   function PIC_Option return String is\n-   begin\n-      return \"\";\n-   end PIC_Option;\n-\n-   -----------------------------------------------\n-   -- Standalone_Library_Auto_Init_Is_Supported --\n-   -----------------------------------------------\n-\n-   function Standalone_Library_Auto_Init_Is_Supported return Boolean is\n-   begin\n-      return True;\n-   end Standalone_Library_Auto_Init_Is_Supported;\n-\n-   ---------------------------\n-   -- Support_For_Libraries --\n-   ---------------------------\n-\n-   function Support_For_Libraries return Library_Support is\n-   begin\n-      return Full;\n-   end Support_For_Libraries;\n+--  Package initialization\n \n-end MLib.Tgt;\n+begin\n+   Build_Dynamic_Library_Ptr    := Build_Dynamic_Library'Access;\n+end MLib.Tgt.Specific;"}, {"sha": "b01ea9d899f41a1a873727f0ee9372a2d6a0192c", "filename": "gcc/ada/mlib-tgt-vms.adb", "status": "added", "additions": 142, "deletions": 0, "changes": 142, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bb81bc17c6c2c8eeec2218abc5189f798e2ecbe/gcc%2Fada%2Fmlib-tgt-vms.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bb81bc17c6c2c8eeec2218abc5189f798e2ecbe/gcc%2Fada%2Fmlib-tgt-vms.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-tgt-vms.adb?ref=6bb81bc17c6c2c8eeec2218abc5189f798e2ecbe", "patch": "@@ -0,0 +1,142 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT COMPILER COMPONENTS                         --\n+--                                                                          --\n+--                         M L I B . T G T . V M S                          --\n+--                                                                          --\n+--                                 B o d y                                  --\n+--                                                                          --\n+--          Copyright (C) 2003-2007, Free Software Foundation, Inc.         --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n+-- to  the  Free Software Foundation,  51  Franklin  Street,  Fifth  Floor, --\n+-- Boston, MA 02110-1301, USA.                                              --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+--  This is the part of MLib.Tgt.Specific common to both VMS versions\n+\n+package body MLib.Tgt.VMS is\n+\n+   --  Non default subprograms. See comments in mlib-tgt.ads\n+\n+   function Archive_Ext return String;\n+\n+   function Default_Symbol_File_Name return String;\n+\n+   function DLL_Ext return String;\n+\n+   function Is_Object_Ext (Ext : String) return Boolean;\n+\n+   function Is_Archive_Ext (Ext : String) return Boolean;\n+\n+   function Libgnat return String;\n+\n+   function Object_Ext return String;\n+\n+   function PIC_Option return String;\n+\n+   -----------------\n+   -- Archive_Ext --\n+   -----------------\n+\n+   function Archive_Ext return String is\n+   begin\n+      return \"olb\";\n+   end Archive_Ext;\n+\n+   ------------------------------\n+   -- Default_Symbol_File_Name --\n+   ------------------------------\n+\n+   function Default_Symbol_File_Name return String is\n+   begin\n+      return \"symvec.opt\";\n+   end Default_Symbol_File_Name;\n+\n+   -------------\n+   -- DLL_Ext --\n+   -------------\n+\n+   function DLL_Ext return String is\n+   begin\n+      return \"exe\";\n+   end DLL_Ext;\n+\n+   -------------------\n+   -- Is_Object_Ext --\n+   -------------------\n+\n+   function Is_Object_Ext (Ext : String) return Boolean is\n+   begin\n+      return Ext = \".obj\";\n+   end Is_Object_Ext;\n+\n+   --------------------\n+   -- Is_Archive_Ext --\n+   --------------------\n+\n+   function Is_Archive_Ext (Ext : String) return Boolean is\n+   begin\n+      return Ext = \".olb\" or else Ext = \".exe\";\n+   end Is_Archive_Ext;\n+\n+   -------------\n+   -- Libgnat --\n+   -------------\n+\n+   function Libgnat return String is\n+      Libgnat_A : constant String := \"libgnat.a\";\n+      Libgnat_Olb : constant String := \"libgnat.olb\";\n+\n+   begin\n+      Name_Len := Libgnat_A'Length;\n+      Name_Buffer (1 .. Name_Len) := Libgnat_A;\n+\n+      if Osint.Find_File (Name_Enter, Osint.Library) /= No_File then\n+         return Libgnat_A;\n+      else\n+         return Libgnat_Olb;\n+      end if;\n+   end Libgnat;\n+\n+   ----------------\n+   -- Object_Ext --\n+   ----------------\n+\n+   function Object_Ext return String is\n+   begin\n+      return \"obj\";\n+   end Object_Ext;\n+\n+   ----------------\n+   -- PIC_Option --\n+   ----------------\n+\n+   function PIC_Option return String is\n+   begin\n+      return \"\";\n+   end PIC_Option;\n+\n+--  Package initialization\n+\n+begin\n+   Archive_Ext_Ptr              := Archive_Ext'Access;\n+   Default_Symbol_File_Name_Ptr := Default_Symbol_File_Name'Access;\n+   DLL_Ext_Ptr                  := DLL_Ext'Access;\n+   Is_Object_Ext_Ptr            := Is_Object_Ext'Access;\n+   Is_Archive_Ext_Ptr           := Is_Archive_Ext'Access;\n+   Libgnat_Ptr                  := Libgnat'Access;\n+   Object_Ext_Ptr               := Object_Ext'Access;\n+   PIC_Option_Ptr               := PIC_Option'Access;\n+end MLib.Tgt.VMS;"}, {"sha": "c544c7f4e109476762e50badfc9c067f8afd0827", "filename": "gcc/ada/mlib-tgt-vms.ads", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bb81bc17c6c2c8eeec2218abc5189f798e2ecbe/gcc%2Fada%2Fmlib-tgt-vms.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bb81bc17c6c2c8eeec2218abc5189f798e2ecbe/gcc%2Fada%2Fmlib-tgt-vms.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-tgt-vms.ads?ref=6bb81bc17c6c2c8eeec2218abc5189f798e2ecbe", "patch": "@@ -0,0 +1,31 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT COMPILER COMPONENTS                         --\n+--                                                                          --\n+--                         M L I B . T G T . V M S                          --\n+--                                                                          --\n+--                                 S p e c                                  --\n+--                                                                          --\n+--             Copyright (C) 2007, Free Software Foundation, Inc.           --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n+-- to  the  Free Software Foundation,  51  Franklin  Street,  Fifth  Floor, --\n+-- Boston, MA 02110-1301, USA.                                              --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+--  This is the part of MLib.Tgt.Specific common to both VMS versions\n+\n+package MLib.Tgt.VMS is\n+   pragma Elaborate_Body;\n+end MLib.Tgt.VMS;"}, {"sha": "d658d47ccf39ca1a681f814664a3081bd558a724", "filename": "gcc/ada/mlib-tgt-vxworks.adb", "status": "modified", "additions": 45, "deletions": 166, "changes": 211, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bb81bc17c6c2c8eeec2218abc5189f798e2ecbe/gcc%2Fada%2Fmlib-tgt-vxworks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bb81bc17c6c2c8eeec2218abc5189f798e2ecbe/gcc%2Fada%2Fmlib-tgt-vxworks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-tgt-vxworks.adb?ref=6bb81bc17c6c2c8eeec2218abc5189f798e2ecbe", "patch": "@@ -2,12 +2,12 @@\n --                                                                          --\n --                         GNAT COMPILER COMPONENTS                         --\n --                                                                          --\n---                             M L I B . T G T                              --\n+--                    M L I B . T G T . S P E C I F I C                     --\n --                            (VxWorks Version)                             --\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---           Copyright (C) 2003-2006 Free Software Foundation, Inc.         --\n+--           Copyright (C) 2003-2007, Free Software Foundation, Inc.        --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -25,17 +25,12 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This package provides a set of target dependent routines to build\n---  static libraries.\n-\n --  This is the VxWorks version of the body\n \n-with MLib.Fil;\n-with Namet;  use Namet;\n-with Prj.Com;\n with Sdefault;\n+with Types;    use Types;\n \n-package body MLib.Tgt is\n+package body MLib.Tgt.Specific is\n \n    -----------------------\n    -- Local Subprograms --\n@@ -45,6 +40,36 @@ package body MLib.Tgt is\n    --  Returns the required suffix for some utilities\n    --  (such as ar and ranlib) that depend on the real target.\n \n+   --  Non default subprograms\n+\n+   function Archive_Builder return String;\n+\n+   function Archive_Indexer return String;\n+\n+   procedure Build_Dynamic_Library\n+     (Ofiles       : Argument_List;\n+      Foreign      : Argument_List;\n+      Afiles       : Argument_List;\n+      Options      : Argument_List;\n+      Options_2    : Argument_List;\n+      Interfaces   : Argument_List;\n+      Lib_Filename : String;\n+      Lib_Dir      : String;\n+      Symbol_Data  : Symbol_Record;\n+      Driver_Name  : Name_Id := No_Name;\n+      Lib_Version  : String  := \"\";\n+      Auto_Init    : Boolean := False);\n+\n+   function DLL_Ext return String;\n+\n+   function Dynamic_Option return String;\n+\n+   function PIC_Option return String;\n+\n+   function Standalone_Library_Auto_Init_Is_Supported return Boolean;\n+\n+   function Support_For_Libraries return Library_Support;\n+\n    ---------------------\n    -- Archive_Builder --\n    ---------------------\n@@ -54,24 +79,6 @@ package body MLib.Tgt is\n       return \"ar\" & Get_Target_Suffix;\n    end Archive_Builder;\n \n-   -----------------------------\n-   -- Archive_Builder_Options --\n-   -----------------------------\n-\n-   function Archive_Builder_Options return String_List_Access is\n-   begin\n-      return new String_List'(1 => new String'(\"cr\"));\n-   end Archive_Builder_Options;\n-\n-   -----------------\n-   -- Archive_Ext --\n-   -----------------\n-\n-   function Archive_Ext return String is\n-   begin\n-      return \"a\";\n-   end Archive_Ext;\n-\n    ---------------------\n    -- Archive_Indexer --\n    ---------------------\n@@ -81,15 +88,6 @@ package body MLib.Tgt is\n       return \"ranlib\" & Get_Target_Suffix;\n    end Archive_Indexer;\n \n-   -----------------------------\n-   -- Archive_Indexer_Options --\n-   -----------------------------\n-\n-   function Archive_Indexer_Options return String_List_Access is\n-   begin\n-      return new String_List (1 .. 0);\n-   end Archive_Indexer_Options;\n-\n    ---------------------------\n    -- Build_Dynamic_Library --\n    ---------------------------\n@@ -134,15 +132,6 @@ package body MLib.Tgt is\n       return \"\";\n    end DLL_Ext;\n \n-   ----------------\n-   -- DLL_Prefix --\n-   ----------------\n-\n-   function DLL_Prefix return String is\n-   begin\n-      return \"lib\";\n-   end DLL_Prefix;\n-\n    --------------------\n    -- Dynamic_Option --\n    --------------------\n@@ -186,126 +175,6 @@ package body MLib.Tgt is\n       end if;\n    end Get_Target_Suffix;\n \n-   -------------------\n-   -- Is_Object_Ext --\n-   -------------------\n-\n-   function Is_Object_Ext (Ext : String) return Boolean is\n-   begin\n-      return Ext = \".o\";\n-   end Is_Object_Ext;\n-\n-   --------------\n-   -- Is_C_Ext --\n-   --------------\n-\n-   function Is_C_Ext (Ext : String) return Boolean is\n-   begin\n-      return Ext = \".c\";\n-   end Is_C_Ext;\n-\n-   --------------------\n-   -- Is_Archive_Ext --\n-   --------------------\n-\n-   function Is_Archive_Ext (Ext : String) return Boolean is\n-   begin\n-      return Ext = \".a\";\n-   end Is_Archive_Ext;\n-\n-   -------------\n-   -- Libgnat --\n-   -------------\n-\n-   function Libgnat return String is\n-   begin\n-      return \"libgnat.a\";\n-   end Libgnat;\n-\n-   ------------------------\n-   -- Library_Exists_For --\n-   ------------------------\n-\n-   function Library_Exists_For\n-     (Project : Project_Id;\n-      In_Tree : Project_Tree_Ref) return Boolean\n-   is\n-   begin\n-      if not In_Tree.Projects.Table (Project).Library then\n-         Prj.Com.Fail (\"INTERNAL ERROR: Library_Exists_For called \" &\n-                       \"for non library project\");\n-         return False;\n-\n-      else\n-         declare\n-            Lib_Dir  : constant String :=\n-                         Get_Name_String\n-                           (In_Tree.Projects.Table (Project).Library_Dir);\n-            Lib_Name : constant String :=\n-                         Get_Name_String\n-                           (In_Tree.Projects.Table (Project).Library_Name);\n-\n-         begin\n-            if In_Tree.Projects.Table (Project).Library_Kind = Static then\n-               return Is_Regular_File\n-                 (Lib_Dir & Directory_Separator & \"lib\" &\n-                  Fil.Append_To (Lib_Name, Archive_Ext));\n-\n-            else\n-               return Is_Regular_File\n-                 (Lib_Dir & Directory_Separator & \"lib\" &\n-                  Fil.Append_To (Lib_Name, DLL_Ext));\n-            end if;\n-         end;\n-      end if;\n-   end Library_Exists_For;\n-\n-   ---------------------------\n-   -- Library_File_Name_For --\n-   ---------------------------\n-\n-   function Library_File_Name_For\n-     (Project : Project_Id;\n-      In_Tree : Project_Tree_Ref) return Name_Id\n-   is\n-   begin\n-      if not In_Tree.Projects.Table (Project).Library then\n-         Prj.Com.Fail (\"INTERNAL ERROR: Library_File_Name_For called \" &\n-                       \"for non library project\");\n-         return No_Name;\n-\n-      else\n-         declare\n-            Lib_Name : constant String :=\n-                         Get_Name_String\n-                           (In_Tree.Projects.Table (Project).Library_Name);\n-\n-         begin\n-            Name_Len := 3;\n-            Name_Buffer (1 .. Name_Len) := \"lib\";\n-\n-            if In_Tree.Projects.Table (Project).Library_Kind =\n-              Static\n-            then\n-               Add_Str_To_Name_Buffer (Fil.Append_To (Lib_Name, Archive_Ext));\n-            else\n-               Add_Str_To_Name_Buffer (Fil.Append_To (Lib_Name, DLL_Ext));\n-            end if;\n-\n-            return Name_Find;\n-         end;\n-      end if;\n-   end Library_File_Name_For;\n-\n-   ----------------\n-   -- Object_Ext --\n-   ----------------\n-\n-   function Object_Ext return String is\n-   begin\n-      return \"o\";\n-   end Object_Ext;\n-\n    ----------------\n    -- PIC_Option --\n    ----------------\n@@ -333,4 +202,14 @@ package body MLib.Tgt is\n       return Static_Only;\n    end Support_For_Libraries;\n \n-end MLib.Tgt;\n+begin\n+   Archive_Builder_Ptr := Archive_Builder'Access;\n+   Archive_Indexer_Ptr := Archive_Indexer'Access;\n+   Build_Dynamic_Library_Ptr := Build_Dynamic_Library'Access;\n+   DLL_Ext_Ptr := DLL_Ext'Access;\n+   Dynamic_Option_Ptr := Dynamic_Option'Access;\n+   PIC_Option_Ptr := PIC_Option'Access;\n+   Standalone_Library_Auto_Init_Is_Supported_Ptr :=\n+     Standalone_Library_Auto_Init_Is_Supported'Access;\n+   Support_For_Libraries_Ptr := Support_For_Libraries'Access;\n+end MLib.Tgt.Specific;"}, {"sha": "8a242bc08712e15f82b98a9112efc0b0b60f3cc0", "filename": "gcc/ada/mlib-tgt.adb", "status": "modified", "additions": 297, "deletions": 46, "changes": 343, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bb81bc17c6c2c8eeec2218abc5189f798e2ecbe/gcc%2Fada%2Fmlib-tgt.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bb81bc17c6c2c8eeec2218abc5189f798e2ecbe/gcc%2Fada%2Fmlib-tgt.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-tgt.adb?ref=6bb81bc17c6c2c8eeec2218abc5189f798e2ecbe", "patch": "@@ -3,11 +3,10 @@\n --                         GNAT COMPILER COMPONENTS                         --\n --                                                                          --\n --                             M L I B . T G T                              --\n---                            (Default Version)                             --\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 2001-2005, AdaCore                     --\n+--                     Copyright (C) 2001-2007, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -29,6 +28,13 @@\n --  All subprograms are dummies, because they are never called,\n --  except Support_For_Libraries which returns None.\n \n+with MLib.Fil;\n+with Prj.Com;\n+\n+with MLib.Tgt.Specific;\n+pragma Warnings (Off, MLib.Tgt.Specific);\n+--  MLib.Tgt.Specific is with'ed only for elaboration purposes\n+\n package body MLib.Tgt is\n \n    ---------------------\n@@ -37,45 +43,108 @@ package body MLib.Tgt is\n \n    function Archive_Builder return String is\n    begin\n-      return \"ar\";\n+      return Archive_Builder_Ptr.all;\n    end Archive_Builder;\n \n+   -----------------------------\n+   -- Archive_Builder_Default --\n+   -----------------------------\n+\n+   function Archive_Builder_Default return String is\n+   begin\n+      return \"ar\";\n+   end Archive_Builder_Default;\n+\n    -----------------------------\n    -- Archive_Builder_Options --\n    -----------------------------\n \n    function Archive_Builder_Options return String_List_Access is\n    begin\n-      return new String_List'(1 => new String'(\"cr\"));\n+      return Archive_Builder_Options_Ptr.all;\n    end Archive_Builder_Options;\n \n+   -------------------------------------\n+   -- Archive_Builder_Options_Default --\n+   -------------------------------------\n+\n+   function Archive_Builder_Options_Default return String_List_Access is\n+   begin\n+      return new String_List'(1 => new String'(\"cr\"));\n+   end Archive_Builder_Options_Default;\n+\n+   ------------------------------------\n+   -- Archive_Builder_Append_Options --\n+   ------------------------------------\n+\n+   function Archive_Builder_Append_Options return String_List_Access is\n+   begin\n+      return Archive_Builder_Append_Options_Ptr.all;\n+   end Archive_Builder_Append_Options;\n+\n+   --------------------------------------------\n+   -- Archive_Builder_Append_Options_Default --\n+   --------------------------------------------\n+\n+   function Archive_Builder_Append_Options_Default return String_List_Access is\n+   begin\n+      return new String_List'(1 => new String'(\"q\"));\n+   end Archive_Builder_Append_Options_Default;\n+\n    -----------------\n    -- Archive_Ext --\n    -----------------\n \n    function Archive_Ext return String is\n    begin\n-      return \"\";\n+      return Archive_Ext_Ptr.all;\n    end Archive_Ext;\n \n+   -------------------------\n+   -- Archive_Ext_Default --\n+   -------------------------\n+\n+   function Archive_Ext_Default return String is\n+   begin\n+      return \"a\";\n+   end Archive_Ext_Default;\n+\n    ---------------------\n    -- Archive_Indexer --\n    ---------------------\n \n    function Archive_Indexer return String is\n    begin\n-      return \"ranlib\";\n+      return Archive_Indexer_Ptr.all;\n    end Archive_Indexer;\n \n+   -----------------------------\n+   -- Archive_Indexer_Default --\n+   -----------------------------\n+\n+   function Archive_Indexer_Default return String is\n+   begin\n+      return \"ranlib\";\n+   end Archive_Indexer_Default;\n+\n    -----------------------------\n    -- Archive_Indexer_Options --\n    -----------------------------\n \n    function Archive_Indexer_Options return String_List_Access is\n    begin\n-      return new String_List (1 .. 0);\n+      return Archive_Indexer_Options_Ptr.all;\n    end Archive_Indexer_Options;\n \n+   -------------------------------------\n+   -- Archive_Indexer_Options_Default --\n+   -------------------------------------\n+\n+   function Archive_Indexer_Options_Default return String_List_Access is\n+   begin\n+      return new String_List (1 .. 0);\n+   end Archive_Indexer_Options_Default;\n+\n    ---------------------------\n    -- Build_Dynamic_Library --\n    ---------------------------\n@@ -90,154 +159,336 @@ package body MLib.Tgt is\n       Lib_Filename : String;\n       Lib_Dir      : String;\n       Symbol_Data  : Symbol_Record;\n-      Driver_Name  : Name_Id := No_Name;\n-      Lib_Version  : String  := \"\";\n-      Auto_Init    : Boolean := False)\n+      Driver_Name  : Name_Id  := No_Name;\n+      Lib_Version  : String   := \"\";\n+      Auto_Init    : Boolean  := False)\n    is\n-      pragma Unreferenced (Ofiles);\n-      pragma Unreferenced (Foreign);\n-      pragma Unreferenced (Afiles);\n-      pragma Unreferenced (Options);\n-      pragma Unreferenced (Options_2);\n-      pragma Unreferenced (Interfaces);\n-      pragma Unreferenced (Lib_Filename);\n-      pragma Unreferenced (Lib_Dir);\n-      pragma Unreferenced (Symbol_Data);\n-      pragma Unreferenced (Driver_Name);\n-      pragma Unreferenced (Lib_Version);\n-      pragma Unreferenced (Auto_Init);\n-\n-   begin\n-      null;\n+   begin\n+      Build_Dynamic_Library_Ptr\n+        (Ofiles,\n+         Foreign,\n+         Afiles,\n+         Options,\n+         Options_2,\n+         Interfaces,\n+         Lib_Filename,\n+         Lib_Dir,\n+         Symbol_Data,\n+         Driver_Name,\n+         Lib_Version,\n+         Auto_Init);\n    end Build_Dynamic_Library;\n \n+   ------------------------------\n+   -- Default_Symbol_File_Name --\n+   ------------------------------\n+\n+   function Default_Symbol_File_Name return String is\n+   begin\n+      return Default_Symbol_File_Name_Ptr.all;\n+   end Default_Symbol_File_Name;\n+\n+   --------------------------------------\n+   -- Default_Symbol_File_Name_Default --\n+   --------------------------------------\n+\n+   function Default_Symbol_File_Name_Default return String is\n+   begin\n+      return \"\";\n+   end Default_Symbol_File_Name_Default;\n+\n    -------------\n    -- DLL_Ext --\n    -------------\n \n    function DLL_Ext return String is\n    begin\n-      return \"\";\n+      return DLL_Ext_Ptr.all;\n    end DLL_Ext;\n \n+   ---------------------\n+   -- DLL_Ext_Default --\n+   ---------------------\n+\n+   function DLL_Ext_Default return String is\n+   begin\n+      return \"so\";\n+   end DLL_Ext_Default;\n+\n    ----------------\n    -- DLL_Prefix --\n    ----------------\n \n    function DLL_Prefix return String is\n    begin\n-      return \"lib\";\n+      return DLL_Prefix_Ptr.all;\n    end DLL_Prefix;\n \n+   ------------------------\n+   -- DLL_Prefix_Default --\n+   ------------------------\n+\n+   function DLL_Prefix_Default return String is\n+   begin\n+      return \"lib\";\n+   end DLL_Prefix_Default;\n+\n    --------------------\n    -- Dynamic_Option --\n    --------------------\n \n    function Dynamic_Option return String is\n    begin\n-      return \"\";\n+      return Dynamic_Option_Ptr.all;\n    end Dynamic_Option;\n \n+   ----------------------------\n+   -- Dynamic_Option_Default --\n+   ----------------------------\n+\n+   function Dynamic_Option_Default return String is\n+   begin\n+      return \"-shared\";\n+   end Dynamic_Option_Default;\n+\n    -------------------\n    -- Is_Object_Ext --\n    -------------------\n \n    function Is_Object_Ext (Ext : String) return Boolean is\n-      pragma Unreferenced (Ext);\n    begin\n-      return False;\n+      return Is_Object_Ext_Ptr (Ext);\n    end Is_Object_Ext;\n \n+   ---------------------------\n+   -- Is_Object_Ext_Default --\n+   ---------------------------\n+\n+   function Is_Object_Ext_Default (Ext : String) return Boolean is\n+   begin\n+      return Ext = \".o\";\n+   end Is_Object_Ext_Default;\n+\n    --------------\n    -- Is_C_Ext --\n    --------------\n \n    function Is_C_Ext (Ext : String) return Boolean is\n-      pragma Unreferenced (Ext);\n    begin\n-      return False;\n+      return Is_C_Ext_Ptr (Ext);\n    end Is_C_Ext;\n \n+   ----------------------\n+   -- Is_C_Ext_Default --\n+   ----------------------\n+\n+   function Is_C_Ext_Default (Ext : String) return Boolean is\n+   begin\n+      return Ext = \".c\";\n+   end Is_C_Ext_Default;\n+\n    --------------------\n    -- Is_Archive_Ext --\n    --------------------\n \n    function Is_Archive_Ext (Ext : String) return Boolean is\n-      pragma Unreferenced (Ext);\n    begin\n-      return False;\n+      return Is_Archive_Ext_Ptr (Ext);\n    end Is_Archive_Ext;\n \n+   ----------------------------\n+   -- Is_Archive_Ext_Default --\n+   ----------------------------\n+\n+   function Is_Archive_Ext_Default (Ext : String) return Boolean is\n+   begin\n+      return Ext = \".a\";\n+   end Is_Archive_Ext_Default;\n+\n    -------------\n    -- Libgnat --\n    -------------\n \n    function Libgnat return String is\n    begin\n-      return \"libgnat.a\";\n+      return Libgnat_Ptr.all;\n    end Libgnat;\n \n+   ---------------------\n+   -- Libgnat_Default --\n+   ---------------------\n+\n+   function Libgnat_Default return String is\n+   begin\n+      return \"libgnat.a\";\n+   end Libgnat_Default;\n+\n    ------------------------\n    -- Library_Exists_For --\n    ------------------------\n \n    function Library_Exists_For\n      (Project : Project_Id; In_Tree : Project_Tree_Ref) return Boolean\n    is\n-      pragma Unreferenced (Project);\n-      pragma Unreferenced (In_Tree);\n    begin\n-      return False;\n+      return Library_Exists_For_Ptr (Project, In_Tree);\n    end Library_Exists_For;\n \n+   --------------------------------\n+   -- Library_Exists_For_Default --\n+   --------------------------------\n+\n+   function Library_Exists_For_Default\n+     (Project : Project_Id; In_Tree : Project_Tree_Ref) return Boolean\n+   is\n+   begin\n+      if not In_Tree.Projects.Table (Project).Library then\n+         Prj.Com.Fail (\"INTERNAL ERROR: Library_Exists_For called \" &\n+                       \"for non library project\");\n+         return False;\n+\n+      else\n+         declare\n+            Lib_Dir  : constant String :=\n+                         Get_Name_String\n+                           (In_Tree.Projects.Table (Project).Library_Dir);\n+            Lib_Name : constant String :=\n+                         Get_Name_String\n+                           (In_Tree.Projects.Table (Project).Library_Name);\n+\n+         begin\n+            if In_Tree.Projects.Table (Project).Library_Kind = Static then\n+               return Is_Regular_File\n+                 (Lib_Dir & Directory_Separator & \"lib\" &\n+                  Fil.Append_To (Lib_Name, Archive_Ext));\n+\n+            else\n+               return Is_Regular_File\n+                 (Lib_Dir & Directory_Separator & DLL_Prefix &\n+                  Fil.Append_To (Lib_Name, DLL_Ext));\n+            end if;\n+         end;\n+      end if;\n+   end Library_Exists_For_Default;\n+\n    ---------------------------\n    -- Library_File_Name_For --\n    ---------------------------\n \n    function Library_File_Name_For\n      (Project : Project_Id;\n-      In_Tree : Project_Tree_Ref) return Name_Id\n+      In_Tree : Project_Tree_Ref) return File_Name_Type\n    is\n-      pragma Unreferenced (Project);\n-      pragma Unreferenced (In_Tree);\n    begin\n-      return No_Name;\n+      return Library_File_Name_For_Ptr (Project, In_Tree);\n    end Library_File_Name_For;\n \n+   -----------------------------------\n+   -- Library_File_Name_For_Default --\n+   -----------------------------------\n+\n+   function Library_File_Name_For_Default\n+     (Project : Project_Id;\n+      In_Tree : Project_Tree_Ref) return File_Name_Type\n+   is\n+   begin\n+      if not In_Tree.Projects.Table (Project).Library then\n+         Prj.Com.Fail (\"INTERNAL ERROR: Library_File_Name_For called \" &\n+                       \"for non library project\");\n+         return No_File;\n+\n+      else\n+         declare\n+            Lib_Name : constant String :=\n+                         Get_Name_String\n+                           (In_Tree.Projects.Table (Project).Library_Name);\n+\n+         begin\n+            if In_Tree.Projects.Table (Project).Library_Kind = Static then\n+               Name_Len := 3;\n+               Name_Buffer (1 .. Name_Len) := \"lib\";\n+               Add_Str_To_Name_Buffer (Fil.Append_To (Lib_Name, Archive_Ext));\n+            else\n+               Name_Len := 0;\n+               Add_Str_To_Name_Buffer (DLL_Prefix);\n+               Add_Str_To_Name_Buffer (Fil.Append_To (Lib_Name, DLL_Ext));\n+            end if;\n+\n+            return Name_Find;\n+         end;\n+      end if;\n+   end Library_File_Name_For_Default;\n+\n    ----------------\n    -- Object_Ext --\n    ----------------\n \n    function Object_Ext return String is\n    begin\n-      return \"\";\n+      return Object_Ext_Ptr.all;\n    end Object_Ext;\n \n+   ------------------------\n+   -- Object_Ext_Default --\n+   ------------------------\n+\n+   function Object_Ext_Default return String is\n+   begin\n+      return \"o\";\n+   end Object_Ext_Default;\n+\n    ----------------\n    -- PIC_Option --\n    ----------------\n \n    function PIC_Option return String is\n    begin\n-      return \"\";\n+      return PIC_Option_Ptr.all;\n    end PIC_Option;\n \n+   ------------------------\n+   -- PIC_Option_Default --\n+   ------------------------\n+\n+   function PIC_Option_Default return String is\n+   begin\n+      return \"-fPIC\";\n+   end PIC_Option_Default;\n+\n    -----------------------------------------------\n    -- Standalone_Library_Auto_Init_Is_Supported --\n    -----------------------------------------------\n \n    function Standalone_Library_Auto_Init_Is_Supported return Boolean is\n    begin\n-      return False;\n+      return Standalone_Library_Auto_Init_Is_Supported_Ptr.all;\n    end Standalone_Library_Auto_Init_Is_Supported;\n \n+   -------------------------------------------------------\n+   -- Standalone_Library_Auto_Init_Is_Supported_Default --\n+   -------------------------------------------------------\n+\n+   function Standalone_Library_Auto_Init_Is_Supported_Default return Boolean is\n+   begin\n+      return True;\n+   end Standalone_Library_Auto_Init_Is_Supported_Default;\n+\n    ---------------------------\n    -- Support_For_Libraries --\n    ---------------------------\n \n    function Support_For_Libraries return Library_Support is\n    begin\n-      return None;\n+      return Support_For_Libraries_Ptr.all;\n    end Support_For_Libraries;\n \n+   -----------------------------------\n+   -- Support_For_Libraries_Default --\n+   -----------------------------------\n+\n+   function Support_For_Libraries_Default return Library_Support is\n+   begin\n+      return Full;\n+   end Support_For_Libraries_Default;\n+\n end MLib.Tgt;"}, {"sha": "670db4548b999fe7f1ccc8f118e9cd7d30d650ed", "filename": "gcc/ada/mlib-tgt.ads", "status": "modified", "additions": 121, "deletions": 7, "changes": 128, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bb81bc17c6c2c8eeec2218abc5189f798e2ecbe/gcc%2Fada%2Fmlib-tgt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bb81bc17c6c2c8eeec2218abc5189f798e2ecbe/gcc%2Fada%2Fmlib-tgt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-tgt.ads?ref=6bb81bc17c6c2c8eeec2218abc5189f798e2ecbe", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                     Copyright (C) 2001-2005, AdaCore                     --\n+--                     Copyright (C) 2001-2007, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -32,7 +32,7 @@\n --  In the default version, libraries are not supported, so function\n --  Support_For_Libraries return None.\n \n-with Prj;         use Prj;\n+with Prj; use Prj;\n \n package MLib.Tgt is\n \n@@ -59,6 +59,10 @@ package MLib.Tgt is\n    function Archive_Builder_Options return String_List_Access;\n    --  A list of options to invoke the Archive_Builder, usually \"cr\" for \"ar\"\n \n+   function Archive_Builder_Append_Options return String_List_Access;\n+   --  A list of options to use with the archive builder to append object\n+   --  files (\"q\", for example).\n+\n    function Archive_Indexer return String;\n    --  Returns the name of the program, if any, that generates an index to the\n    --  contents of an archive, usually \"ranlib\". If there is no archive indexer\n@@ -79,7 +83,7 @@ package MLib.Tgt is\n    --  For Unix and Windows, return \"a\".\n \n    function Object_Ext return String;\n-   --  System dependent object extension, without leadien dot.\n+   --  System dependent object extension, without leading dot.\n    --  On Unix, returns \"o\".\n \n    function DLL_Prefix return String;\n@@ -103,6 +107,10 @@ package MLib.Tgt is\n    function Is_Archive_Ext (Ext : String) return Boolean;\n    --  Returns True iff Ext is an extension for a library\n \n+   function Default_Symbol_File_Name return String;\n+   --  Returns the name of the symbol file when Library_Symbol_File is not\n+   --  specified. Return the empty string when symbol files are not supported.\n+\n    procedure Build_Dynamic_Library\n      (Ofiles       : Argument_List;\n       Foreign      : Argument_List;\n@@ -113,9 +121,9 @@ package MLib.Tgt is\n       Lib_Filename : String;\n       Lib_Dir      : String;\n       Symbol_Data  : Symbol_Record;\n-      Driver_Name  : Name_Id := No_Name;\n-      Lib_Version  : String  := \"\";\n-      Auto_Init    : Boolean := False);\n+      Driver_Name  : Name_Id  := No_Name;\n+      Lib_Version  : String   := \"\";\n+      Auto_Init    : Boolean  := False);\n    --  Build a dynamic/relocatable library\n    --\n    --  Ofiles is the list of all object files in the library\n@@ -158,8 +166,114 @@ package MLib.Tgt is\n \n    function Library_File_Name_For\n      (Project : Project_Id;\n-      In_Tree : Project_Tree_Ref) return Name_Id;\n+      In_Tree : Project_Tree_Ref) return File_Name_Type;\n    --  Returns the file name of the library file of a library project.\n    --  This function can only be called for library projects.\n \n+private\n+   --  Access to subprogram types for indirection\n+\n+   type String_Function is access function return String;\n+   type Is_Ext_Function is access function (Ext : String) return Boolean;\n+   type String_List_Access_Function is access function\n+     return String_List_Access;\n+   type Build_Dynamic_Library_Function is access procedure\n+     (Ofiles       : Argument_List;\n+      Foreign      : Argument_List;\n+      Afiles       : Argument_List;\n+      Options      : Argument_List;\n+      Options_2    : Argument_List;\n+      Interfaces   : Argument_List;\n+      Lib_Filename : String;\n+      Lib_Dir      : String;\n+      Symbol_Data  : Symbol_Record;\n+      Driver_Name  : Name_Id := No_Name;\n+      Lib_Version  : String  := \"\";\n+      Auto_Init    : Boolean := False);\n+\n+   type Library_Exists_For_Function is access function\n+     (Project : Project_Id; In_Tree : Project_Tree_Ref) return Boolean;\n+\n+   type Library_File_Name_For_Function is access function\n+     (Project : Project_Id;\n+      In_Tree : Project_Tree_Ref) return File_Name_Type;\n+\n+   type Boolean_Function is access function return Boolean;\n+\n+   type Library_Support_Function is access function return Library_Support;\n+\n+   function Archive_Builder_Default return String;\n+   Archive_Builder_Ptr : String_Function := Archive_Builder_Default'Access;\n+\n+   function Archive_Builder_Options_Default return String_List_Access;\n+   Archive_Builder_Options_Ptr : String_List_Access_Function :=\n+                                   Archive_Builder_Options_Default'Access;\n+\n+   function Archive_Builder_Append_Options_Default return String_List_Access;\n+\n+   Archive_Builder_Append_Options_Ptr :\n+     String_List_Access_Function :=\n+       Archive_Builder_Append_Options_Default'Access;\n+\n+   function Archive_Ext_Default return String;\n+   Archive_Ext_Ptr : String_Function := Archive_Ext_Default'Access;\n+\n+   function Archive_Indexer_Default return String;\n+   Archive_Indexer_Ptr : String_Function := Archive_Indexer_Default'Access;\n+\n+   function Archive_Indexer_Options_Default return String_List_Access;\n+   Archive_Indexer_Options_Ptr : String_List_Access_Function :=\n+                                   Archive_Indexer_Options_Default'Access;\n+\n+   function Default_Symbol_File_Name_Default return String;\n+   Default_Symbol_File_Name_Ptr : String_Function :=\n+                                    Default_Symbol_File_Name_Default'Access;\n+\n+   Build_Dynamic_Library_Ptr : Build_Dynamic_Library_Function;\n+\n+   function DLL_Ext_Default return String;\n+   DLL_Ext_Ptr : String_Function := DLL_Ext_Default'Access;\n+\n+   function DLL_Prefix_Default return String;\n+   DLL_Prefix_Ptr : String_Function := DLL_Prefix_Default'Access;\n+\n+   function Dynamic_Option_Default return String;\n+   Dynamic_Option_Ptr : String_Function := Dynamic_Option_Default'Access;\n+\n+   function Is_Object_Ext_Default (Ext : String) return Boolean;\n+   Is_Object_Ext_Ptr : Is_Ext_Function := Is_Object_Ext_Default'Access;\n+\n+   function Is_C_Ext_Default (Ext : String) return Boolean;\n+   Is_C_Ext_Ptr : Is_Ext_Function := Is_C_Ext_Default'Access;\n+\n+   function Is_Archive_Ext_Default (Ext : String) return Boolean;\n+   Is_Archive_Ext_Ptr : Is_Ext_Function := Is_Archive_Ext_Default'Access;\n+\n+   function Libgnat_Default return String;\n+   Libgnat_Ptr : String_Function := Libgnat_Default'Access;\n+\n+   function Library_Exists_For_Default\n+     (Project : Project_Id; In_Tree : Project_Tree_Ref) return Boolean;\n+   Library_Exists_For_Ptr : Library_Exists_For_Function :=\n+                              Library_Exists_For_Default'Access;\n+\n+   function Library_File_Name_For_Default\n+     (Project : Project_Id;\n+      In_Tree : Project_Tree_Ref) return File_Name_Type;\n+   Library_File_Name_For_Ptr : Library_File_Name_For_Function :=\n+                                 Library_File_Name_For_Default'Access;\n+\n+   function Object_Ext_Default return String;\n+   Object_Ext_Ptr : String_Function := Object_Ext_Default'Access;\n+\n+   function PIC_Option_Default return String;\n+   PIC_Option_Ptr : String_Function := PIC_Option_Default'Access;\n+\n+   function Standalone_Library_Auto_Init_Is_Supported_Default return Boolean;\n+   Standalone_Library_Auto_Init_Is_Supported_Ptr : Boolean_Function :=\n+            Standalone_Library_Auto_Init_Is_Supported_Default'Access;\n+\n+   function Support_For_Libraries_Default return Library_Support;\n+   Support_For_Libraries_Ptr : Library_Support_Function :=\n+                                 Support_For_Libraries_Default'Access;\n end MLib.Tgt;"}]}