{"sha": "2ea74407863b9a20e652292fb7c0862d6a201c9b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmVhNzQ0MDc4NjNiOWEyMGU2NTIyOTJmYjdjMDg2MmQ2YTIwMWM5Yg==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2007-12-02T23:17:16Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2007-12-02T23:17:16Z"}, "message": "re PR libfortran/33985 (access=\"stream\",form=\"unformatted\" doesn't buffer)\n\n2007-12-02  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n\t    Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR libfortran/33985\n\t* io/transfer.c (read_block, read_block_direct, write_block, write_buf):\n\tDon't seek if file position is already there for STREAM I/O.\n\t(finalize_transfer): For STREAM I/O don't flush unless the file position\n\thas moved past the start position before the transfer.\n\nCo-Authored-By: Thomas Koenig <tkoenig@gcc.gnu.org>\n\nFrom-SVN: r130574", "tree": {"sha": "e033e2ccdc3c68de4f1fe77225eb4e3da8a999ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e033e2ccdc3c68de4f1fe77225eb4e3da8a999ca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2ea74407863b9a20e652292fb7c0862d6a201c9b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ea74407863b9a20e652292fb7c0862d6a201c9b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ea74407863b9a20e652292fb7c0862d6a201c9b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ea74407863b9a20e652292fb7c0862d6a201c9b/comments", "author": null, "committer": null, "parents": [{"sha": "0b93f014a71e3f5e3aa3b46822ae9f74875b2ce7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b93f014a71e3f5e3aa3b46822ae9f74875b2ce7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b93f014a71e3f5e3aa3b46822ae9f74875b2ce7"}], "stats": {"total": 42, "additions": 32, "deletions": 10}, "files": [{"sha": "e77ef147b0a2b86b30025a3714fd95fe6d691e90", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ea74407863b9a20e652292fb7c0862d6a201c9b/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ea74407863b9a20e652292fb7c0862d6a201c9b/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=2ea74407863b9a20e652292fb7c0862d6a201c9b", "patch": "@@ -1,3 +1,12 @@\n+2007-12-02  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\t    Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR libfortran/33985\n+\t* io/transfer.c (read_block, read_block_direct, write_block, write_buf):\n+\tDon't seek if file position is already there for STREAM I/O.\n+\t(finalize_transfer): For STREAM I/O don't flush unless the file position\n+\thas moved past the start position before the transfer.\n+\n 2007-12-01  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n \n \t* intrinsic/stat.c (stat_i4_sub_0, stat_i8_sub_0): Mark parameter"}, {"sha": "05711a06015af7d0bb2940fc0a54645b90443e6c", "filename": "libgfortran/io/transfer.c", "status": "modified", "additions": 23, "deletions": 10, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ea74407863b9a20e652292fb7c0862d6a201c9b/libgfortran%2Fio%2Ftransfer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ea74407863b9a20e652292fb7c0862d6a201c9b/libgfortran%2Fio%2Ftransfer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Ftransfer.c?ref=2ea74407863b9a20e652292fb7c0862d6a201c9b", "patch": "@@ -272,8 +272,10 @@ read_block (st_parameter_dt *dtp, int *length)\n \n   if (is_stream_io (dtp))\n     {\n-      if (sseek (dtp->u.p.current_unit->s,\n-\t\t dtp->u.p.current_unit->strm_pos - 1) == FAILURE)\n+      if (dtp->u.p.current_unit->strm_pos - 1\n+\t  != file_position (dtp->u.p.current_unit->s)\n+\t  && sseek (dtp->u.p.current_unit->s,\n+\t\t    dtp->u.p.current_unit->strm_pos - 1) == FAILURE)\n \t{\n \t  generate_error (&dtp->common, LIBERROR_END, NULL);\n \t  return NULL;\n@@ -357,8 +359,10 @@ read_block_direct (st_parameter_dt *dtp, void *buf, size_t *nbytes)\n \n   if (is_stream_io (dtp))\n     {\n-      if (sseek (dtp->u.p.current_unit->s,\n-\t\t dtp->u.p.current_unit->strm_pos - 1) == FAILURE)\n+      if (dtp->u.p.current_unit->strm_pos - 1\n+\t  != file_position (dtp->u.p.current_unit->s)\n+\t  && sseek (dtp->u.p.current_unit->s,\n+\t\t    dtp->u.p.current_unit->strm_pos - 1) == FAILURE)\n \t{\n \t  generate_error (&dtp->common, LIBERROR_END, NULL);\n \t  return;\n@@ -533,8 +537,10 @@ write_block (st_parameter_dt *dtp, int length)\n \n   if (is_stream_io (dtp))\n     {\n-      if (sseek (dtp->u.p.current_unit->s,\n-\t\t dtp->u.p.current_unit->strm_pos - 1) == FAILURE)\n+      if (dtp->u.p.current_unit->strm_pos - 1\n+\t  != file_position (dtp->u.p.current_unit->s)\n+\t  && sseek (dtp->u.p.current_unit->s,\n+\t\t    dtp->u.p.current_unit->strm_pos - 1) == FAILURE)\n \t{\n \t  generate_error (&dtp->common, LIBERROR_OS, NULL);\n \t  return NULL;\n@@ -595,8 +601,10 @@ write_buf (st_parameter_dt *dtp, void *buf, size_t nbytes)\n \n   if (is_stream_io (dtp))\n     {\n-      if (sseek (dtp->u.p.current_unit->s,\n-\t\t dtp->u.p.current_unit->strm_pos - 1) == FAILURE)\n+      if (dtp->u.p.current_unit->strm_pos - 1\n+\t  != file_position (dtp->u.p.current_unit->s)\n+\t  && sseek (dtp->u.p.current_unit->s,\n+\t\t    dtp->u.p.current_unit->strm_pos - 1) == FAILURE)\n \t{\n \t  generate_error (&dtp->common, LIBERROR_OS, NULL);\n \t  return FAILURE;\n@@ -2640,8 +2648,13 @@ finalize_transfer (st_parameter_dt *dtp)\n     {\n       if (dtp->u.p.current_unit->flags.form == FORM_FORMATTED)\n \tnext_record (dtp, 1);\n-      flush (dtp->u.p.current_unit->s);\n-      sfree (dtp->u.p.current_unit->s);\n+\n+      if (dtp->u.p.current_unit->flags.form == FORM_UNFORMATTED\n+\t  && file_position (dtp->u.p.current_unit->s) >= dtp->rec)\n+\t{\n+\t  flush (dtp->u.p.current_unit->s);\n+\t  sfree (dtp->u.p.current_unit->s);\n+\t}\n       return;\n     }\n "}]}