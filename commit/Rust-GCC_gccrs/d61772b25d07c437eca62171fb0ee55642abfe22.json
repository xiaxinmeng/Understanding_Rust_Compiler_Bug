{"sha": "d61772b25d07c437eca62171fb0ee55642abfe22", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDYxNzcyYjI1ZDA3YzQzN2VjYTYyMTcxZmIwZWU1NTY0MmFiZmUyMg==", "commit": {"author": {"name": "Geoffrey Keating", "email": "geoffk@apple.com", "date": "2006-04-25T19:12:50Z"}, "committer": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "2006-04-25T19:12:50Z"}, "message": "dwarf2asm.c (dw2_asm_output_data): Don't generate RTL just to print an integer.\n\n\t* dwarf2asm.c (dw2_asm_output_data): Don't generate RTL just\n\tto print an integer.\n\nFrom-SVN: r113254", "tree": {"sha": "021e9f53f87cdd8f3de619df53aebfd7ab4d91d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/021e9f53f87cdd8f3de619df53aebfd7ab4d91d9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d61772b25d07c437eca62171fb0ee55642abfe22", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d61772b25d07c437eca62171fb0ee55642abfe22", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d61772b25d07c437eca62171fb0ee55642abfe22", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d61772b25d07c437eca62171fb0ee55642abfe22/comments", "author": {"login": "geoffk01", "id": 31905243, "node_id": "MDQ6VXNlcjMxOTA1MjQz", "avatar_url": "https://avatars.githubusercontent.com/u/31905243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geoffk01", "html_url": "https://github.com/geoffk01", "followers_url": "https://api.github.com/users/geoffk01/followers", "following_url": "https://api.github.com/users/geoffk01/following{/other_user}", "gists_url": "https://api.github.com/users/geoffk01/gists{/gist_id}", "starred_url": "https://api.github.com/users/geoffk01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geoffk01/subscriptions", "organizations_url": "https://api.github.com/users/geoffk01/orgs", "repos_url": "https://api.github.com/users/geoffk01/repos", "events_url": "https://api.github.com/users/geoffk01/events{/privacy}", "received_events_url": "https://api.github.com/users/geoffk01/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cfa81d8af3b4e93ed7b9e3988dc50058a9ffe834", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfa81d8af3b4e93ed7b9e3988dc50058a9ffe834", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cfa81d8af3b4e93ed7b9e3988dc50058a9ffe834"}], "stats": {"total": 11, "additions": 10, "deletions": 1}, "files": [{"sha": "e6b524eb9b5f04b0d1f8b88b88b1c28751c87533", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d61772b25d07c437eca62171fb0ee55642abfe22/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d61772b25d07c437eca62171fb0ee55642abfe22/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d61772b25d07c437eca62171fb0ee55642abfe22", "patch": "@@ -1,3 +1,8 @@\n+2006-04-25  Geoffrey Keating  <geoffk@apple.com>\n+\n+\t* dwarf2asm.c (dw2_asm_output_data): Don't generate RTL just\n+\tto print an integer.\n+\n 2006-04-25  David Edelsohn  <edelsohn@gnu.org>\n \n \t* varasm.c (align_variable): New function."}, {"sha": "59c5e29c2f9d2b57dd7b18f86a55f92fcab72da7", "filename": "gcc/dwarf2asm.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d61772b25d07c437eca62171fb0ee55642abfe22/gcc%2Fdwarf2asm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d61772b25d07c437eca62171fb0ee55642abfe22/gcc%2Fdwarf2asm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2asm.c?ref=d61772b25d07c437eca62171fb0ee55642abfe22", "patch": "@@ -69,13 +69,17 @@ dw2_asm_output_data (int size, unsigned HOST_WIDE_INT value,\n \t\t     const char *comment, ...)\n {\n   va_list ap;\n+  const char *op = integer_asm_op (size, FALSE);\n \n   va_start (ap, comment);\n \n   if (size * 8 < HOST_BITS_PER_WIDE_INT)\n     value &= ~(~(unsigned HOST_WIDE_INT) 0 << (size * 8));\n \n-  dw2_assemble_integer (size, GEN_INT (value));\n+  if (op)\n+    fprintf (asm_out_file, \"%s\" HOST_WIDE_INT_PRINT_HEX, op, value);\n+  else\n+    assemble_integer (GEN_INT (value), size, BITS_PER_UNIT, 1);\n \n   if (flag_debug_asm && comment)\n     {"}]}