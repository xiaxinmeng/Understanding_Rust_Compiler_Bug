{"sha": "33f49367016b4bf543de30324c580a317970b5e8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzNmNDkzNjcwMTZiNGJmNTQzZGUzMDMyNGM1ODBhMzE3OTcwYjVlOA==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2010-10-01T11:58:21Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2010-10-01T11:58:21Z"}, "message": "extract_symvers: Use pvs if present.\n\n\t* scripts/extract_symvers: Use pvs if present.\n\t* config/abi/post/solaris2.8/baseline_symbols.txt: New file.\n\t* config/abi/post/solaris2.8/sparcv9/baseline_symbols.txt: Likewise.\n\t* config/abi/post/solaris2.10/amd64/baseline_symbols.txt: Likewise.\n\t* config/abi/post/solaris2.10/baseline_symbols.txt: Likewise.\n\t* config/abi/post/solaris2.10/sparcv9/baseline_symbols.txt: Likewise.\n\t* configure.host (i?86-*-solaris2*): Remove.\n\t(sparc*-*-solaris2*): Remove.\n\t(*-*-solaris2.[89]): Use solaris2.8 baseline.\n\t(*-*-solaris2.1[0-9]): Use solaris2.10 baseline.\n\t* testsuite/Makefile.am (new-abi-baseline): Add missing /.\n\t* testsuite/Makefile.in: Regenerate.\n\nFrom-SVN: r164879", "tree": {"sha": "0d0f1e0dbd86f2e7fd6571b55562369fb53b9620", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0d0f1e0dbd86f2e7fd6571b55562369fb53b9620"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/33f49367016b4bf543de30324c580a317970b5e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33f49367016b4bf543de30324c580a317970b5e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/33f49367016b4bf543de30324c580a317970b5e8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33f49367016b4bf543de30324c580a317970b5e8/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ca007d11d632deec2cb75bdc010c577dbe3a0938", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca007d11d632deec2cb75bdc010c577dbe3a0938", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca007d11d632deec2cb75bdc010c577dbe3a0938"}], "stats": {"total": 17632, "additions": 17616, "deletions": 16}, "files": [{"sha": "f2938ed442c1ebfc771e3e5a5b925208a45f1b1d", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33f49367016b4bf543de30324c580a317970b5e8/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33f49367016b4bf543de30324c580a317970b5e8/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=33f49367016b4bf543de30324c580a317970b5e8", "patch": "@@ -1,3 +1,18 @@\n+2010-10-01  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* scripts/extract_symvers: Use pvs if present.\n+\t* config/abi/post/solaris2.8/baseline_symbols.txt: New file.\n+\t* config/abi/post/solaris2.8/sparcv9/baseline_symbols.txt: Likewise.\n+\t* config/abi/post/solaris2.10/amd64/baseline_symbols.txt: Likewise.\n+\t* config/abi/post/solaris2.10/baseline_symbols.txt: Likewise.\n+\t* config/abi/post/solaris2.10/sparcv9/baseline_symbols.txt: Likewise.\n+\t* configure.host (i?86-*-solaris2*): Remove.\n+\t(sparc*-*-solaris2*): Remove.\n+\t(*-*-solaris2.[89]): Use solaris2.8 baseline.\n+\t(*-*-solaris2.1[0-9]): Use solaris2.10 baseline.\n+\t* testsuite/Makefile.am (new-abi-baseline): Add missing /.\n+\t* testsuite/Makefile.in: Regenerate.\n+\n 2010-09-30  Michael Eager  <eager@eagercon.com>\n \n \t* config/cpu/microblaze/cpu_defines.h: New. Define"}, {"sha": "a7cc8e8dbc92388cae309cd9b07356524af20218", "filename": "libstdc++-v3/config/abi/post/solaris2.10/amd64/baseline_symbols.txt", "status": "added", "additions": 3505, "deletions": 0, "changes": 3505, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33f49367016b4bf543de30324c580a317970b5e8/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Fsolaris2.10%2Famd64%2Fbaseline_symbols.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33f49367016b4bf543de30324c580a317970b5e8/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Fsolaris2.10%2Famd64%2Fbaseline_symbols.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Fsolaris2.10%2Famd64%2Fbaseline_symbols.txt?ref=33f49367016b4bf543de30324c580a317970b5e8"}, {"sha": "032a3d0e9e94f611176a279f3c53585c744a4c15", "filename": "libstdc++-v3/config/abi/post/solaris2.10/baseline_symbols.txt", "status": "added", "additions": 3493, "deletions": 0, "changes": 3493, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33f49367016b4bf543de30324c580a317970b5e8/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Fsolaris2.10%2Fbaseline_symbols.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33f49367016b4bf543de30324c580a317970b5e8/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Fsolaris2.10%2Fbaseline_symbols.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Fsolaris2.10%2Fbaseline_symbols.txt?ref=33f49367016b4bf543de30324c580a317970b5e8"}, {"sha": "77f1e18a15c64c32a031bb0aaf21366173670183", "filename": "libstdc++-v3/config/abi/post/solaris2.10/sparcv9/baseline_symbols.txt", "status": "added", "additions": 3505, "deletions": 0, "changes": 3505, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33f49367016b4bf543de30324c580a317970b5e8/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Fsolaris2.10%2Fsparcv9%2Fbaseline_symbols.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33f49367016b4bf543de30324c580a317970b5e8/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Fsolaris2.10%2Fsparcv9%2Fbaseline_symbols.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Fsolaris2.10%2Fsparcv9%2Fbaseline_symbols.txt?ref=33f49367016b4bf543de30324c580a317970b5e8"}, {"sha": "767aeaf80764d815d3ff62704218440f9d0f61d1", "filename": "libstdc++-v3/config/abi/post/solaris2.8/baseline_symbols.txt", "status": "added", "additions": 3512, "deletions": 0, "changes": 3512, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33f49367016b4bf543de30324c580a317970b5e8/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Fsolaris2.8%2Fbaseline_symbols.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33f49367016b4bf543de30324c580a317970b5e8/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Fsolaris2.8%2Fbaseline_symbols.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Fsolaris2.8%2Fbaseline_symbols.txt?ref=33f49367016b4bf543de30324c580a317970b5e8"}, {"sha": "a31c7cba1e204d2708a86274a3d2ec9f62e86efe", "filename": "libstdc++-v3/config/abi/post/solaris2.8/sparcv9/baseline_symbols.txt", "status": "added", "additions": 3524, "deletions": 0, "changes": 3524, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33f49367016b4bf543de30324c580a317970b5e8/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Fsolaris2.8%2Fsparcv9%2Fbaseline_symbols.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33f49367016b4bf543de30324c580a317970b5e8/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Fsolaris2.8%2Fsparcv9%2Fbaseline_symbols.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Fsolaris2.8%2Fsparcv9%2Fbaseline_symbols.txt?ref=33f49367016b4bf543de30324c580a317970b5e8"}, {"sha": "30b28dcd9f67711dcddaed34b41e95b525698bf3", "filename": "libstdc++-v3/configure.host", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33f49367016b4bf543de30324c580a317970b5e8/libstdc%2B%2B-v3%2Fconfigure.host", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33f49367016b4bf543de30324c580a317970b5e8/libstdc%2B%2B-v3%2Fconfigure.host", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure.host?ref=33f49367016b4bf543de30324c580a317970b5e8", "patch": "@@ -320,13 +320,13 @@ case \"${host}\" in\n \t;;\n     esac\n     ;;\n-  i?86-*-solaris2*)\n-    abi_baseline_pair=i386-solaris2\n-    ;;\n   powerpc*-*-darwin*)\n     port_specific_symbol_files=\"\\$(srcdir)/../config/os/bsd/darwin/ppc-extra.ver\"\n     ;;\n-  sparc*-*-solaris2*)\n-    abi_baseline_pair=sparc-solaris2\n+  *-*-solaris2.[89])\n+    abi_baseline_pair=solaris2.8\n+    ;;\n+  *-*-solaris2.1[0-9])\n+    abi_baseline_pair=solaris2.10\n     ;;\n esac"}, {"sha": "9eb7be595c41b329087f7663ee892f0fa271a910", "filename": "libstdc++-v3/scripts/extract_symvers", "status": "modified", "additions": 55, "deletions": 9, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33f49367016b4bf543de30324c580a317970b5e8/libstdc%2B%2B-v3%2Fscripts%2Fextract_symvers", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33f49367016b4bf543de30324c580a317970b5e8/libstdc%2B%2B-v3%2Fscripts%2Fextract_symvers", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fscripts%2Fextract_symvers?ref=33f49367016b4bf543de30324c580a317970b5e8", "patch": "@@ -26,6 +26,14 @@ fi\n lib=$1\n output=$2\n \n+# Sun ld doesn't record symbol versions in .dynsym entries and they cannot\n+# easily be extracted from readelf --versions output, so use pvs instead.\n+if type pvs 2>&1 | grep 'not found' > /dev/null; then\n+    :\n+else\n+    pvs=\"pvs -dsvo\"\n+fi\n+\n # GNU binutils, somewhere after version 2.11.2, requires -W/--wide to avoid\n # default line truncation.  -W is not supported and truncation did not occur\n # by default before that point.\n@@ -42,15 +50,53 @@ export LANG\n \n tmp=extract.$$\n \n-${readelf} ${lib} |\\\n-sed -e 's/ \\[<other>: [A-Fa-f0-9]*\\] //' -e '/\\.dynsym/,/^$/p;d' |\\\n-egrep -v ' (LOCAL|UND) ' |\\\n-awk '{ if ($4 == \"FUNC\" || $4 == \"NOTYPE\")\n-         printf \"%s:%s\\n\", $4, $8;\n-       else if ($4 == \"OBJECT\")\n-         printf \"%s:%s:%s\\n\", $4, $3, $8;\n-     }' | sort | uniq > $tmp 2>&1\n-#       else printf \"Huh?  What is %s?\\n\", $8;\n+# Prefer pvs if found.  Need to use nawk on Solaris 2 since Solaris 8/9 awk\n+# (oawk) cannot handle sub.\n+if [ -n ${pvs} ]; then\n+    ${pvs} ${lib} | \\\n+    nawk '# Remove colon separator from version field, trailing semicolon.\n+\t {\n+\t   sub (/:$/, \"\", $3);\n+\t   sub (/;$/, \"\");\n+\t }\n+\t # Record base version.  The [BASE] field was only added in Solaris 11,\n+\t # so simply use the first record instead.\n+\t NR == 1 {\n+\t   basever = $3;\n+\t   next;\n+\t }\n+\t # Ignore version dependencies.\n+\t $4 ~ /\\{.*\\}/ {\n+\t   next;\n+\t }\n+\t NF == 4 {\n+\t   if ($3 == $4 || $3 == basever)\n+\t     # Emit versions or symbols bound to base versions as objects.\n+\t     printf \"OBJECT:0:%s\\n\", $4;\n+\t   else\n+\t     # Everything else without a size field is a function.\n+\t     printf \"FUNC:%s@@%s\\n\", $4, $3;\n+\t   next;\n+\t }\n+\t # Emit objects.\n+\t NF == 5 {\n+\t   # Strip parens from object size.\n+\t   sub (/^\\(/, \"\", $5);\n+\t   sub (/\\)$/, \"\", $5);\n+\t   printf \"OBJECT:%s:%s@@%s\\n\", $5, $4, $3;\n+\t   next;\n+\t }' | sort | uniq > $tmp 2>&1\n+else\n+    ${readelf} ${lib} |\\\n+    sed -e 's/ \\[<other>: [A-Fa-f0-9]*\\] //' -e '/\\.dynsym/,/^$/p;d' |\\\n+    egrep -v ' (LOCAL|UND) ' |\\\n+    awk '{ if ($4 == \"FUNC\" || $4 == \"NOTYPE\")\n+             printf \"%s:%s\\n\", $4, $8;\n+           else if ($4 == \"OBJECT\")\n+             printf \"%s:%s:%s\\n\", $4, $3, $8;\n+         }' | sort | uniq > $tmp 2>&1\n+#          else printf \"Huh?  What is %s?\\n\", $8;\n+fi\n \n \n # I think we'll be doing some more with this file, but for now, dump."}, {"sha": "1f2d34de5ce99b3af5796118c4e3c430ee38a65b", "filename": "libstdc++-v3/testsuite/Makefile.am", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33f49367016b4bf543de30324c580a317970b5e8/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33f49367016b4bf543de30324c580a317970b5e8/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.am?ref=33f49367016b4bf543de30324c580a317970b5e8", "patch": "@@ -80,7 +80,7 @@ baseline_symbols:\n \t  fi; true)\n \n new-abi-baseline:\n-\t-@$(mkinstalldirs) ${baseline_dir}${baseline_subdir}\n+\t-@$(mkinstalldirs) ${baseline_dir}/${baseline_subdir}\n \t-@(output=${baseline_dir}/${baseline_subdir}/baseline_symbols.txt; \\\n \t  if test -f $${output}; then \\\n \t    output=$${output}.new; \\"}, {"sha": "1a6546e7fdbe25e82a199b94e16ec587788f318a", "filename": "libstdc++-v3/testsuite/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33f49367016b4bf543de30324c580a317970b5e8/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33f49367016b4bf543de30324c580a317970b5e8/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in?ref=33f49367016b4bf543de30324c580a317970b5e8", "patch": "@@ -506,7 +506,7 @@ baseline_symbols:\n \t  fi; true)\n \n new-abi-baseline:\n-\t-@$(mkinstalldirs) ${baseline_dir}${baseline_subdir}\n+\t-@$(mkinstalldirs) ${baseline_dir}/${baseline_subdir}\n \t-@(output=${baseline_dir}/${baseline_subdir}/baseline_symbols.txt; \\\n \t  if test -f $${output}; then \\\n \t    output=$${output}.new; \\"}]}