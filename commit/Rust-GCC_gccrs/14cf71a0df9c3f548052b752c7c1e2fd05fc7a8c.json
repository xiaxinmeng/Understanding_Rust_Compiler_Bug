{"sha": "14cf71a0df9c3f548052b752c7c1e2fd05fc7a8c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTRjZjcxYTBkZjljM2Y1NDgwNTJiNzUyYzdjMWUyZmQwNWZjN2E4Yw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2016-10-14T10:28:27Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2016-10-14T10:28:27Z"}, "message": "re PR ada/77968 (ICEs with -flto on gnat.dg)\n\n\tPR ada/77968\n\t* gcc-interface/utils.c (create_var_decl): Do not clear TREE_READONLY\n\tin LTO mode for an external variable.\n\t(can_materialize_object_renaming_p): Move up.\n\nFrom-SVN: r241154", "tree": {"sha": "b89ba7982c5fdf0b1462b5b6c43da034b5ce2ca5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b89ba7982c5fdf0b1462b5b6c43da034b5ce2ca5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/14cf71a0df9c3f548052b752c7c1e2fd05fc7a8c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14cf71a0df9c3f548052b752c7c1e2fd05fc7a8c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14cf71a0df9c3f548052b752c7c1e2fd05fc7a8c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14cf71a0df9c3f548052b752c7c1e2fd05fc7a8c/comments", "author": null, "committer": null, "parents": [{"sha": "45b510b3704b96ae45f86e7f2e0fb62f07e99430", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45b510b3704b96ae45f86e7f2e0fb62f07e99430", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45b510b3704b96ae45f86e7f2e0fb62f07e99430"}], "stats": {"total": 274, "additions": 203, "deletions": 71}, "files": [{"sha": "b900ad406fe0b95277ba50b63039ebc4bfac2c3b", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14cf71a0df9c3f548052b752c7c1e2fd05fc7a8c/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14cf71a0df9c3f548052b752c7c1e2fd05fc7a8c/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=14cf71a0df9c3f548052b752c7c1e2fd05fc7a8c", "patch": "@@ -1,3 +1,10 @@\n+2016-10-14  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\tPR ada/77968\n+\t* gcc-interface/utils.c (create_var_decl): Do not clear TREE_READONLY\n+\tin LTO mode for an external variable.\n+\t(can_materialize_object_renaming_p): Move up.\n+\n 2016-10-13  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n \n \t* gcc-interface/utils2.c: Include memmodel.h."}, {"sha": "c06721f03b16e62f6983922b016a1d55ed3b8371", "filename": "gcc/ada/gcc-interface/utils.c", "status": "modified", "additions": 54, "deletions": 65, "changes": 119, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14cf71a0df9c3f548052b752c7c1e2fd05fc7a8c/gcc%2Fada%2Fgcc-interface%2Futils.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14cf71a0df9c3f548052b752c7c1e2fd05fc7a8c/gcc%2Fada%2Fgcc-interface%2Futils.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Futils.c?ref=14cf71a0df9c3f548052b752c7c1e2fd05fc7a8c", "patch": "@@ -2473,20 +2473,9 @@ create_var_decl (tree name, tree asm_name, tree type, tree init,\n      constant initialization and save any variable elaborations for the\n      elaboration routine.  If we are just annotating types, throw away the\n      initialization if it isn't a constant.  */\n-  if ((extern_flag && init && !constant_p)\n+  if ((extern_flag && !constant_p)\n       || (type_annotate_only && init && !TREE_CONSTANT (init)))\n-    {\n-      init = NULL_TREE;\n-\n-      /* In LTO mode, also clear TREE_READONLY the same way add_decl_expr\n-\t would do it if the initializer was not thrown away here, as the\n-\t WPA phase requires a consistent view across compilation units.  */\n-      if (const_flag && flag_generate_lto)\n-\t{\n-\t  const_flag = false;\n-\t  DECL_READONLY_ONCE_ELAB (var_decl) = 1;\n-\t}\n-    }\n+    init = NULL_TREE;\n \n   /* At the global level, a non-constant initializer generates elaboration\n      statements.  Check that such statements are allowed, that is to say,\n@@ -5341,6 +5330,58 @@ smaller_form_type_p (tree type, tree orig_type)\n   return tree_int_cst_lt (size, osize) != 0;\n }\n \n+/* Return whether EXPR, which is the renamed object in an object renaming\n+   declaration, can be materialized as a reference (with a REFERENCE_TYPE).\n+   This should be synchronized with Exp_Dbug.Debug_Renaming_Declaration.  */\n+\n+bool\n+can_materialize_object_renaming_p (Node_Id expr)\n+{\n+  while (true)\n+    {\n+      switch Nkind (expr)\n+\t{\n+\tcase N_Identifier:\n+\tcase N_Expanded_Name:\n+\t  return true;\n+\n+\tcase N_Selected_Component:\n+\t  {\n+\t    if (Is_Packed (Underlying_Type (Etype (Prefix (expr)))))\n+\t      return false;\n+\n+\t    const Uint bitpos\n+\t      = Normalized_First_Bit (Entity (Selector_Name (expr)));\n+\t    if (!UI_Is_In_Int_Range (bitpos)\n+\t\t|| (bitpos != UI_No_Uint && bitpos != UI_From_Int (0)))\n+\t      return false;\n+\n+\t    expr = Prefix (expr);\n+\t    break;\n+\t  }\n+\n+\tcase N_Indexed_Component:\n+\tcase N_Slice:\n+\t  {\n+\t    const Entity_Id t = Underlying_Type (Etype (Prefix (expr)));\n+\n+\t    if (Is_Array_Type (t) && Present (Packed_Array_Impl_Type (t)))\n+\t      return false;\n+\n+\t    expr = Prefix (expr);\n+\t    break;\n+\t  }\n+\n+\tcase N_Explicit_Dereference:\n+\t  expr = Prefix (expr);\n+\t  break;\n+\n+\tdefault:\n+\t  return true;\n+\t};\n+    }\n+}\n+\n /* Perform final processing on global declarations.  */\n \n static GTY (()) tree dummy_global;\n@@ -6185,58 +6226,6 @@ handle_vector_type_attribute (tree *node, tree name, tree ARG_UNUSED (args),\n   return NULL_TREE;\n }\n \n-/* Return whether EXPR, which is the renamed object in an object renaming\n-   declaration, can be materialized as a reference (REFERENCE_TYPE).  This\n-   should be synchronized with Exp_Dbug.Debug_Renaming_Declaration.  */\n-\n-bool\n-can_materialize_object_renaming_p (Node_Id expr)\n-{\n-  while (true)\n-    {\n-      switch Nkind (expr)\n-\t{\n-\tcase N_Identifier:\n-\tcase N_Expanded_Name:\n-\t  return true;\n-\n-\tcase N_Selected_Component:\n-\t  {\n-\t    if (Is_Packed (Underlying_Type (Etype (Prefix (expr)))))\n-\t      return false;\n-\n-\t    const Uint bitpos\n-\t      = Normalized_First_Bit (Entity (Selector_Name (expr)));\n-\t    if (!UI_Is_In_Int_Range (bitpos)\n-\t\t|| (bitpos != UI_No_Uint && bitpos != UI_From_Int (0)))\n-\t      return false;\n-\n-\t    expr = Prefix (expr);\n-\t    break;\n-\t  }\n-\n-\tcase N_Indexed_Component:\n-\tcase N_Slice:\n-\t  {\n-\t    const Entity_Id t = Underlying_Type (Etype (Prefix (expr)));\n-\n-\t    if (Is_Array_Type (t) && Present (Packed_Array_Impl_Type (t)))\n-\t      return false;\n-\n-\t    expr = Prefix (expr);\n-\t    break;\n-\t  }\n-\n-\tcase N_Explicit_Dereference:\n-\t  expr = Prefix (expr);\n-\t  break;\n-\n-\tdefault:\n-\t  return true;\n-\t};\n-    }\n-}\n-\n /* ----------------------------------------------------------------------- *\n  *                              BUILTIN FUNCTIONS                          *\n  * ----------------------------------------------------------------------- */"}, {"sha": "2d0b4a329a84339f206252e3d0ddbc0ede37b8be", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14cf71a0df9c3f548052b752c7c1e2fd05fc7a8c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14cf71a0df9c3f548052b752c7c1e2fd05fc7a8c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=14cf71a0df9c3f548052b752c7c1e2fd05fc7a8c", "patch": "@@ -1,3 +1,16 @@\n+2016-10-14  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/lto15.adb: Adjust.\n+\t* gnat.dg/lto16.adb: Likewise.\n+\t* gnat.dg/lto17.adb: Likewise\n+\t* gnat.dg/lto18.ad[sb]: New test.\n+\t* gnat.dg/lto18_pkg.ads: New helper.\n+\t* gnat.dg/lto19.adb: New test.\n+\t* gnat.dg/lto19_pkg1.ad[sb]: New helper.\n+\t* gnat.dg/lto19_pkg2.ad[sb]: Likewise.\n+\t* gnat.dg/lto20.adb: New test.\n+\t* gnat.dg/lto20_pkg.ad[sb]: New helper.\n+\n 2016-10-14  Andre Vehreschild  <vehre@gcc.gnu.org>\n \n \t* gfortran.dg/coarray_38.f90: Expect error message."}, {"sha": "3a6599241d168614f2c31cbbea24a1ae3e1b7bae", "filename": "gcc/testsuite/gnat.dg/lto15.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14cf71a0df9c3f548052b752c7c1e2fd05fc7a8c/gcc%2Ftestsuite%2Fgnat.dg%2Flto15.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14cf71a0df9c3f548052b752c7c1e2fd05fc7a8c/gcc%2Ftestsuite%2Fgnat.dg%2Flto15.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Flto15.adb?ref=14cf71a0df9c3f548052b752c7c1e2fd05fc7a8c", "patch": "@@ -1,6 +1,5 @@\n -- { dg-do compile }\n--- { dg-options \"-O -flto -g\" }\n--- { dg-require-effective-target lto }\n+-- { dg-options \"-O -flto -g\" { target lto } }\n \n package body Lto15 is\n "}, {"sha": "271a6c591f2c9ab06c767d55fd2234a67ce220c2", "filename": "gcc/testsuite/gnat.dg/lto16.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14cf71a0df9c3f548052b752c7c1e2fd05fc7a8c/gcc%2Ftestsuite%2Fgnat.dg%2Flto16.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14cf71a0df9c3f548052b752c7c1e2fd05fc7a8c/gcc%2Ftestsuite%2Fgnat.dg%2Flto16.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Flto16.adb?ref=14cf71a0df9c3f548052b752c7c1e2fd05fc7a8c", "patch": "@@ -1,6 +1,5 @@\n -- { dg-do link }\n--- { dg-options \"-O -flto\" }\n--- { dg-require-effective-target lto }\n+-- { dg-options \"-O -flto\" { target lto } }\n \n with Lto16_Pkg; use Lto16_Pkg;\n with Text_IO; use Text_IO;"}, {"sha": "504fb877a645515851180a04030a3fdbe1fae9ff", "filename": "gcc/testsuite/gnat.dg/lto17.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14cf71a0df9c3f548052b752c7c1e2fd05fc7a8c/gcc%2Ftestsuite%2Fgnat.dg%2Flto17.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14cf71a0df9c3f548052b752c7c1e2fd05fc7a8c/gcc%2Ftestsuite%2Fgnat.dg%2Flto17.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Flto17.adb?ref=14cf71a0df9c3f548052b752c7c1e2fd05fc7a8c", "patch": "@@ -1,6 +1,5 @@\n -- { dg-do compile }\n--- { dg-options \"-flto\" }\n--- { dg-require-effective-target lto }\n+-- { dg-options \"-flto\" { target lto } }\n \n package body Lto17 is\n "}, {"sha": "ab4085e1ad6cc3341c71e3fbb262de5909d9050e", "filename": "gcc/testsuite/gnat.dg/lto18.adb", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14cf71a0df9c3f548052b752c7c1e2fd05fc7a8c/gcc%2Ftestsuite%2Fgnat.dg%2Flto18.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14cf71a0df9c3f548052b752c7c1e2fd05fc7a8c/gcc%2Ftestsuite%2Fgnat.dg%2Flto18.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Flto18.adb?ref=14cf71a0df9c3f548052b752c7c1e2fd05fc7a8c", "patch": "@@ -0,0 +1,16 @@\n+-- { dg-do compile }\n+-- { dg-options \"-flto\" { target lto } }\n+\n+package body Lto18 is\n+\n+   procedure Proc (Driver : Rec) is\n+      R : Path;\n+   begin\n+      for I in Driver.Step'Range loop\n+         R := Get (Driver, 1, Driver.Step (I));\n+         R := Get (Driver, 2, Driver.Step (I));\n+         R := Get (Driver, 3, Driver.Step (I));\n+      end loop;\n+   end;\n+\n+end Lto18;"}, {"sha": "486bc889e7d2148acb9807c965eeedf71341ba35", "filename": "gcc/testsuite/gnat.dg/lto18.ads", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14cf71a0df9c3f548052b752c7c1e2fd05fc7a8c/gcc%2Ftestsuite%2Fgnat.dg%2Flto18.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14cf71a0df9c3f548052b752c7c1e2fd05fc7a8c/gcc%2Ftestsuite%2Fgnat.dg%2Flto18.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Flto18.ads?ref=14cf71a0df9c3f548052b752c7c1e2fd05fc7a8c", "patch": "@@ -0,0 +1,7 @@\n+with Lto18_Pkg; use Lto18_Pkg;\n+\n+package Lto18 is\n+\n+    procedure Proc (Driver : Rec);\n+\n+end Lto18;"}, {"sha": "004a1fa97bd87c4ec73e8047f113b29d7c763469", "filename": "gcc/testsuite/gnat.dg/lto18_pkg.ads", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14cf71a0df9c3f548052b752c7c1e2fd05fc7a8c/gcc%2Ftestsuite%2Fgnat.dg%2Flto18_pkg.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14cf71a0df9c3f548052b752c7c1e2fd05fc7a8c/gcc%2Ftestsuite%2Fgnat.dg%2Flto18_pkg.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Flto18_pkg.ads?ref=14cf71a0df9c3f548052b752c7c1e2fd05fc7a8c", "patch": "@@ -0,0 +1,23 @@\n+package Lto18_Pkg is\n+\n+   function N return Positive;\n+   pragma Import (Ada, N);\n+\n+   type Path is array(1 .. N) of Long_Float;\n+   type Path_Vector is array (Positive range <>) of Path;\n+   type Path_Vector_P is access all Path_Vector;\n+   type Path_Vector_PV is array(Positive range <>) of Path_Vector_P;\n+   type Path_Vector_P2 is access all Path_Vector_PV;\n+\n+   type Vector is array (Positive range <>) of Natural;\n+   type Vector_Access is access Vector;\n+\n+   type Rec is record\n+      Val  : Path_Vector_P2;\n+      Step : Vector_Access;\n+   end record;\n+\n+   function Get (R : Rec; I : Positive; M : Natural) return Path;\n+--   pragma Inline (Get);\n+\n+end Lto18_Pkg;"}, {"sha": "7f083d3576f7b0ec75e90325e8061b3b0bc97220", "filename": "gcc/testsuite/gnat.dg/lto19.adb", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14cf71a0df9c3f548052b752c7c1e2fd05fc7a8c/gcc%2Ftestsuite%2Fgnat.dg%2Flto19.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14cf71a0df9c3f548052b752c7c1e2fd05fc7a8c/gcc%2Ftestsuite%2Fgnat.dg%2Flto19.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Flto19.adb?ref=14cf71a0df9c3f548052b752c7c1e2fd05fc7a8c", "patch": "@@ -0,0 +1,11 @@\n+-- { dg-do run }\n+-- { dg-options \"-flto\" { target lto } }\n+-- { dg-excess-errors \"does not match original declaration\" }\n+\n+with Lto19_Pkg1;\n+\n+procedure Lto19 is\n+  R : Lto19_Pkg1.Rec := (I => 1, A => (others => 0));\n+begin\n+  Lto19_Pkg1.Proc (R);\n+end;"}, {"sha": "84b020ba6ccfb32342ce4a7cbc31ba5fffc29341", "filename": "gcc/testsuite/gnat.dg/lto19_pkg1.adb", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14cf71a0df9c3f548052b752c7c1e2fd05fc7a8c/gcc%2Ftestsuite%2Fgnat.dg%2Flto19_pkg1.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14cf71a0df9c3f548052b752c7c1e2fd05fc7a8c/gcc%2Ftestsuite%2Fgnat.dg%2Flto19_pkg1.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Flto19_pkg1.adb?ref=14cf71a0df9c3f548052b752c7c1e2fd05fc7a8c", "patch": "@@ -0,0 +1,5 @@\n+package body Lto19_Pkg1 is\n+\n+  procedure Proc (R : Rec) is begin null; end;\n+\n+end Lto19_Pkg1;"}, {"sha": "523f538d44a1a2c3173b0be4f61df8290d8e8ae7", "filename": "gcc/testsuite/gnat.dg/lto19_pkg1.ads", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14cf71a0df9c3f548052b752c7c1e2fd05fc7a8c/gcc%2Ftestsuite%2Fgnat.dg%2Flto19_pkg1.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14cf71a0df9c3f548052b752c7c1e2fd05fc7a8c/gcc%2Ftestsuite%2Fgnat.dg%2Flto19_pkg1.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Flto19_pkg1.ads?ref=14cf71a0df9c3f548052b752c7c1e2fd05fc7a8c", "patch": "@@ -0,0 +1,14 @@\n+with Lto19_Pkg2;\n+\n+package Lto19_Pkg1 is\n+\n+  type Arr is array (1 .. Lto19_Pkg2.UB) of Integer;\n+\n+  type Rec is record\n+    A : Arr;\n+    I : Integer;\n+  end record;\n+\n+  procedure Proc (R : Rec);\n+\n+end Lto19_Pkg1;"}, {"sha": "70e731a521e38e78a53335be81003758b407265d", "filename": "gcc/testsuite/gnat.dg/lto19_pkg2.adb", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14cf71a0df9c3f548052b752c7c1e2fd05fc7a8c/gcc%2Ftestsuite%2Fgnat.dg%2Flto19_pkg2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14cf71a0df9c3f548052b752c7c1e2fd05fc7a8c/gcc%2Ftestsuite%2Fgnat.dg%2Flto19_pkg2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Flto19_pkg2.adb?ref=14cf71a0df9c3f548052b752c7c1e2fd05fc7a8c", "patch": "@@ -0,0 +1,5 @@\n+package body Lto19_Pkg2 is\n+\n+  function UB return Natural is begin return 8; end;\n+\n+end Lto19_Pkg2;"}, {"sha": "7ca6136cc9e593109a655b00029c6e2bdc5e57a6", "filename": "gcc/testsuite/gnat.dg/lto19_pkg2.ads", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14cf71a0df9c3f548052b752c7c1e2fd05fc7a8c/gcc%2Ftestsuite%2Fgnat.dg%2Flto19_pkg2.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14cf71a0df9c3f548052b752c7c1e2fd05fc7a8c/gcc%2Ftestsuite%2Fgnat.dg%2Flto19_pkg2.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Flto19_pkg2.ads?ref=14cf71a0df9c3f548052b752c7c1e2fd05fc7a8c", "patch": "@@ -0,0 +1,5 @@\n+package Lto19_Pkg2 is\n+\n+  function UB return Natural;\n+\n+end Lto19_Pkg2;"}, {"sha": "e4095a976059fef4117f7458958ae7c1b120b472", "filename": "gcc/testsuite/gnat.dg/lto20.adb", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14cf71a0df9c3f548052b752c7c1e2fd05fc7a8c/gcc%2Ftestsuite%2Fgnat.dg%2Flto20.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14cf71a0df9c3f548052b752c7c1e2fd05fc7a8c/gcc%2Ftestsuite%2Fgnat.dg%2Flto20.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Flto20.adb?ref=14cf71a0df9c3f548052b752c7c1e2fd05fc7a8c", "patch": "@@ -0,0 +1,10 @@\n+-- { dg-do run }\n+-- { dg-options \"-flto\" { target lto } }\n+-- { dg-excess-errors \"does not match original declaration\" }\n+\n+with Lto20_Pkg;\n+\n+procedure Lto20 is\n+begin\n+  Lto20_Pkg.Proc (Lto20_Pkg.Null_Arr);\n+end;"}, {"sha": "a5e5aa0ad9a07caf7e241426c0462ea0e5c34247", "filename": "gcc/testsuite/gnat.dg/lto20_pkg.adb", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14cf71a0df9c3f548052b752c7c1e2fd05fc7a8c/gcc%2Ftestsuite%2Fgnat.dg%2Flto20_pkg.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14cf71a0df9c3f548052b752c7c1e2fd05fc7a8c/gcc%2Ftestsuite%2Fgnat.dg%2Flto20_pkg.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Flto20_pkg.adb?ref=14cf71a0df9c3f548052b752c7c1e2fd05fc7a8c", "patch": "@@ -0,0 +1,9 @@\n+package body Lto20_Pkg is\n+\n+  type Obj is record\n+    I : Integer;\n+  end record;\n+\n+  procedure Proc (A : Arr) is begin null; end;\n+\n+end Lto20_Pkg;"}, {"sha": "6ece15f59679ee25396c74d9d3f906d999a2c784", "filename": "gcc/testsuite/gnat.dg/lto20_pkg.ads", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14cf71a0df9c3f548052b752c7c1e2fd05fc7a8c/gcc%2Ftestsuite%2Fgnat.dg%2Flto20_pkg.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14cf71a0df9c3f548052b752c7c1e2fd05fc7a8c/gcc%2Ftestsuite%2Fgnat.dg%2Flto20_pkg.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Flto20_pkg.ads?ref=14cf71a0df9c3f548052b752c7c1e2fd05fc7a8c", "patch": "@@ -0,0 +1,21 @@\n+package Lto20_Pkg is\n+\n+  type Arr is private;\n+\n+  Null_Arr : constant Arr;\n+\n+  procedure Proc (A : Arr);\n+\n+private\n+\n+  type Obj;\n+\n+  type Handle is access Obj;\n+\n+  Null_Handle : constant Handle := null;\n+\n+  type Arr is array (1 .. 2) of Handle;\n+\n+  Null_Arr : constant Arr := (others => Null_Handle);\n+\n+end Lto20_Pkg;"}]}