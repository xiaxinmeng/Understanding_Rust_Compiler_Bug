{"sha": "58195b740ddfdb337f459d3660adfe60494747db", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTgxOTViNzQwZGRmZGIzMzdmNDU5ZDM2NjBhZGZlNjA0OTQ3NDdkYg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2009-05-29T07:06:35Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2009-05-29T07:06:35Z"}, "message": "re PR target/40017 (stdbool.h/altivec.h)\n\n\tPR target/40017\n\t* config/rs6000/rs6000-c.c (_Bool_keyword): New variable.\n\t(altivec_categorize_keyword, init_vector_keywords,\n\trs6000_cpu_cpp_builtins): Define _Bool as conditional macro\n\tsimilar to bool.\n\n\t* gcc.target/powerpc/altivec-types-1.c: Don't expect error for\n\t__vector _Bool.\n\t* gcc.target/powerpc/altivec-30.c: New test.\n\t* gcc.target/powerpc/altivec-31.c: New test.\n\nFrom-SVN: r147970", "tree": {"sha": "96dbd86211f5253bdf919bc13d504c90dced6235", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/96dbd86211f5253bdf919bc13d504c90dced6235"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/58195b740ddfdb337f459d3660adfe60494747db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58195b740ddfdb337f459d3660adfe60494747db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/58195b740ddfdb337f459d3660adfe60494747db", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58195b740ddfdb337f459d3660adfe60494747db/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "055df276d4e2b36c030223f39cd84743aaac8def", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/055df276d4e2b36c030223f39cd84743aaac8def", "html_url": "https://github.com/Rust-GCC/gccrs/commit/055df276d4e2b36c030223f39cd84743aaac8def"}], "stats": {"total": 87, "additions": 86, "deletions": 1}, "files": [{"sha": "f368de2bb5f43be0d37b250bafcdb114e6a7ea4c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58195b740ddfdb337f459d3660adfe60494747db/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58195b740ddfdb337f459d3660adfe60494747db/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=58195b740ddfdb337f459d3660adfe60494747db", "patch": "@@ -1,3 +1,11 @@\n+2009-05-29  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/40017\n+\t* config/rs6000/rs6000-c.c (_Bool_keyword): New variable.\n+\t(altivec_categorize_keyword, init_vector_keywords,\n+\trs6000_cpu_cpp_builtins): Define _Bool as conditional macro\n+\tsimilar to bool.\n+\n 2009-05-29  Kai Tietz  <kai.tietz@onevision.com>\n \n \t* tree.c (handle_dll_attribute): Check if node is"}, {"sha": "33bbd65bff711c28fb2b2b7e1ca5dbd9dd93efe7", "filename": "gcc/config/rs6000/rs6000-c.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58195b740ddfdb337f459d3660adfe60494747db/gcc%2Fconfig%2Frs6000%2Frs6000-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58195b740ddfdb337f459d3660adfe60494747db/gcc%2Fconfig%2Frs6000%2Frs6000-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-c.c?ref=58195b740ddfdb337f459d3660adfe60494747db", "patch": "@@ -91,6 +91,7 @@ static GTY(()) tree __pixel_keyword;\n static GTY(()) tree pixel_keyword;\n static GTY(()) tree __bool_keyword;\n static GTY(()) tree bool_keyword;\n+static GTY(()) tree _Bool_keyword;\n \n /* Preserved across calls.  */\n static tree expand_bool_pixel;\n@@ -111,6 +112,9 @@ altivec_categorize_keyword (const cpp_token *tok)\n       if (ident == C_CPP_HASHNODE (bool_keyword))\n \treturn C_CPP_HASHNODE (__bool_keyword);\n \n+      if (ident == C_CPP_HASHNODE (_Bool_keyword))\n+\treturn C_CPP_HASHNODE (__bool_keyword);\n+\n       return ident;\n     }\n \n@@ -141,6 +145,9 @@ init_vector_keywords (void)\n \n   bool_keyword = get_identifier (\"bool\");\n   C_CPP_HASHNODE (bool_keyword)->flags |= NODE_CONDITIONAL;\n+\n+  _Bool_keyword = get_identifier (\"_Bool\");\n+  C_CPP_HASHNODE (_Bool_keyword)->flags |= NODE_CONDITIONAL;\n }\n \n /* Called to decide whether a conditional macro should be expanded.\n@@ -295,6 +302,7 @@ rs6000_cpu_cpp_builtins (cpp_reader *pfile)\n \t  builtin_define (\"vector=vector\");\n \t  builtin_define (\"pixel=pixel\");\n \t  builtin_define (\"bool=bool\");\n+\t  builtin_define (\"_Bool=_Bool\");\n \t  init_vector_keywords ();\n \n \t  /* Enable context-sensitive macros.  */"}, {"sha": "2c1fc0334f738f7fdf08704ad76ec31d2abb8458", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58195b740ddfdb337f459d3660adfe60494747db/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58195b740ddfdb337f459d3660adfe60494747db/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=58195b740ddfdb337f459d3660adfe60494747db", "patch": "@@ -1,3 +1,11 @@\n+2009-05-29  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/40017\n+\t* gcc.target/powerpc/altivec-types-1.c: Don't expect error for\n+\t__vector _Bool.\n+\t* gcc.target/powerpc/altivec-30.c: New test.\n+\t* gcc.target/powerpc/altivec-31.c: New test.\n+\n 2009-05-28  Richard Guenther  <rguenther@suse.de>\n \n \t* gcc.dg/tree-ssa/ssa-fre-26.c: New testcase."}, {"sha": "99783191db9111cca3330b1d593aa1f18ace790d", "filename": "gcc/testsuite/gcc.target/powerpc/altivec-30.c", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58195b740ddfdb337f459d3660adfe60494747db/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Faltivec-30.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58195b740ddfdb337f459d3660adfe60494747db/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Faltivec-30.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Faltivec-30.c?ref=58195b740ddfdb337f459d3660adfe60494747db", "patch": "@@ -0,0 +1,32 @@\n+/* { dg-do compile { target powerpc*-*-* } } */\n+/* { dg-require-effective-target powerpc_altivec_ok } */\n+/* { dg-options \"-maltivec\" } */\n+\n+#include <stdbool.h>\n+#include <altivec.h>\n+\n+#define f0(type) void x0##type (vector bool type x) { }\n+f0 (int)\n+\n+#define f1(v, type) void x1##type (v bool type x) { }\n+f1 (vector, int)\n+\n+#define f2(b, type) void x2##type (vector b type x) { }\n+f2 (bool, int)\n+\n+#define f3(v, b, type) void x3##type (v b type x) { }\n+f3 (vector, bool, int)\n+\n+#define f4(v, b, type) void x4##type (v type b x) { }\n+f4 (vector, bool, int)\n+\n+#define B bool\n+#define I int\n+#define BI bool int\n+#define VBI vector bool int\n+\n+vector bool int a;\n+vector B int b;\n+vector B I c;\n+vector BI d;\n+VBI e;"}, {"sha": "233efe1bebb0e95de4a9c2a6109520f8f591ab30", "filename": "gcc/testsuite/gcc.target/powerpc/altivec-31.c", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58195b740ddfdb337f459d3660adfe60494747db/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Faltivec-31.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58195b740ddfdb337f459d3660adfe60494747db/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Faltivec-31.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Faltivec-31.c?ref=58195b740ddfdb337f459d3660adfe60494747db", "patch": "@@ -0,0 +1,29 @@\n+/* { dg-do compile { target powerpc*-*-* } } */\n+/* { dg-require-effective-target powerpc_altivec_ok } */\n+/* { dg-options \"-maltivec\" } */\n+\n+#define f0(type) void x0##type (vector _Bool type x) { }\n+f0 (int)\n+\n+#define f1(v, type) void x1##type (v _Bool type x) { }\n+f1 (vector, int)\n+\n+#define f2(b, type) void x2##type (vector b type x) { }\n+f2 (_Bool, int)\n+\n+#define f3(v, b, type) void x3##type (v b type x) { }\n+f3 (vector, _Bool, int)\n+\n+#define f4(v, b, type) void x4##type (v type b x) { }\n+f4 (vector, _Bool, int)\n+\n+#define B _Bool\n+#define I int\n+#define BI _Bool int\n+#define VBI vector _Bool int\n+\n+vector _Bool int a;\n+vector B int b;\n+vector B I c;\n+vector BI d;\n+VBI e;"}, {"sha": "41de95225b34374775dde24c1a916699262cd4c9", "filename": "gcc/testsuite/gcc.target/powerpc/altivec-types-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58195b740ddfdb337f459d3660adfe60494747db/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Faltivec-types-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58195b740ddfdb337f459d3660adfe60494747db/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Faltivec-types-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Faltivec-types-1.c?ref=58195b740ddfdb337f459d3660adfe60494747db", "patch": "@@ -24,6 +24,7 @@ __vector unsigned vuj;\n __vector signed vsj;\n __vector __bool vbj;\n __vector float vf;\n+__vector _Bool vb;\n \n /* These should be rejected as invalid AltiVec types.  */\n \n@@ -37,7 +38,6 @@ __vector signed long long int vslli;\t/* { dg-error \"AltiVec types\" \"\" } */\n __vector __bool long long int vblli;\t/* { dg-error \"AltiVec types\" \"\" } */\n __vector double vd1;\t\t\t/* { dg-error \"AltiVec types\" \"\" } */\n __vector long double vld;\t\t/* { dg-error \"AltiVec types\" \"\" } */\n-__vector _Bool vb;\t\t\t/* { dg-error \"AltiVec types\" \"\" } */\n __vector _Complex float vcf;\t\t/* { dg-error \"AltiVec types\" \"\" } */\n __vector _Complex double vcd;\t\t/* { dg-error \"AltiVec types\" \"\" } */\n __vector _Complex long double vcld;\t/* { dg-error \"AltiVec types\" \"\" } */"}]}