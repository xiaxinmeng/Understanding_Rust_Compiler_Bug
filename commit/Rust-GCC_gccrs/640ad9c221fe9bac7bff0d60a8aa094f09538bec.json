{"sha": "640ad9c221fe9bac7bff0d60a8aa094f09538bec", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjQwYWQ5YzIyMWZlOWJhYzdiZmYwZDYwYThhYTA5NGYwOTUzOGJlYw==", "commit": {"author": {"name": "Hristian Kirtchev", "email": "kirtchev@adacore.com", "date": "2018-11-14T11:40:47Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-11-14T11:40:47Z"}, "message": "[Ada] Limited function violates No_Exception_Propagation\n\nThis patch suppresses the generation of raise statements in the context\nof build-in-place and elaboration checks for primitives of tagged types\nwhen exceptions cannot be used.\n\n2018-11-14  Hristian Kirtchev  <kirtchev@adacore.com>\n\ngcc/ada/\n\n\t* checks.adb (Install_Primitive_Elaboration_Check): Do not\n\tcreate the check when exceptions cannot be used.\n\t* exp_ch6.adb (Expand_N_Extended_Return_Statement): Do not raise\n\tProgram_Errror when exceptions cannot be used. Analyze the\n\tgenerated code with all checks suppressed.\n\t* exp_ch7.adb (Build_Finalizer): Remove the declaration of\n\tExceptions_OK.\n\t(Make_Deep_Array_Body): Remove the declaration of Exceptions_OK.\n\t(Make_Deep_Record_Body): Remove the declaration of\n\tExceptions_OK.\n\t(Process_Transients_In_Scope): Remove the declaration of\n\tExceptions_OK.\n\t* exp_util.adb (Exceptions_In_Finalization_OK): Renamed to\n\tExceptions_OK.\n\t* exp_util.ads (Exceptions_In_Finalization_OK): Renamed to\n\tExceptions_OK.\n\ngcc/testsuite/\n\n\t* gnat.dg/bip_exception.adb, gnat.dg/bip_exception.ads,\n\tgnat.dg/bip_exception_pkg.ads: New testcase.\n\nFrom-SVN: r266115", "tree": {"sha": "d64b95ae560994460487838cc2f5bf1180dc6eb3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d64b95ae560994460487838cc2f5bf1180dc6eb3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/640ad9c221fe9bac7bff0d60a8aa094f09538bec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/640ad9c221fe9bac7bff0d60a8aa094f09538bec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/640ad9c221fe9bac7bff0d60a8aa094f09538bec", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/640ad9c221fe9bac7bff0d60a8aa094f09538bec/comments", "author": {"login": "kirtchev-adacore", "id": 60669983, "node_id": "MDQ6VXNlcjYwNjY5OTgz", "avatar_url": "https://avatars.githubusercontent.com/u/60669983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kirtchev-adacore", "html_url": "https://github.com/kirtchev-adacore", "followers_url": "https://api.github.com/users/kirtchev-adacore/followers", "following_url": "https://api.github.com/users/kirtchev-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/kirtchev-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/kirtchev-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kirtchev-adacore/subscriptions", "organizations_url": "https://api.github.com/users/kirtchev-adacore/orgs", "repos_url": "https://api.github.com/users/kirtchev-adacore/repos", "events_url": "https://api.github.com/users/kirtchev-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/kirtchev-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e1a20c09aac4149f3099cfc313bbfcd6672064bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1a20c09aac4149f3099cfc313bbfcd6672064bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1a20c09aac4149f3099cfc313bbfcd6672064bc"}], "stats": {"total": 121, "additions": 102, "deletions": 19}, "files": [{"sha": "dda456ea45fc2b894ba143da8b31ba863844a825", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/640ad9c221fe9bac7bff0d60a8aa094f09538bec/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/640ad9c221fe9bac7bff0d60a8aa094f09538bec/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=640ad9c221fe9bac7bff0d60a8aa094f09538bec", "patch": "@@ -1,3 +1,22 @@\n+2018-11-14  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* checks.adb (Install_Primitive_Elaboration_Check): Do not\n+\tcreate the check when exceptions cannot be used.\n+\t* exp_ch6.adb (Expand_N_Extended_Return_Statement): Do not raise\n+\tProgram_Errror when exceptions cannot be used. Analyze the\n+\tgenerated code with all checks suppressed.\n+\t* exp_ch7.adb (Build_Finalizer): Remove the declaration of\n+\tExceptions_OK.\n+\t(Make_Deep_Array_Body): Remove the declaration of Exceptions_OK.\n+\t(Make_Deep_Record_Body): Remove the declaration of\n+\tExceptions_OK.\n+\t(Process_Transients_In_Scope): Remove the declaration of\n+\tExceptions_OK.\n+\t* exp_util.adb (Exceptions_In_Finalization_OK): Renamed to\n+\tExceptions_OK.\n+\t* exp_util.ads (Exceptions_In_Finalization_OK): Renamed to\n+\tExceptions_OK.\n+\n 2018-11-14  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* exp_ch4.adb (Expand_N_Op_Eq): Remove duplicated code and use"}, {"sha": "e7048ecc4ef188eed63925b1c65f72fbd0827ec0", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/640ad9c221fe9bac7bff0d60a8aa094f09538bec/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/640ad9c221fe9bac7bff0d60a8aa094f09538bec/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=640ad9c221fe9bac7bff0d60a8aa094f09538bec", "patch": "@@ -7960,6 +7960,12 @@ package body Checks is\n       elsif Restriction_Active (No_Elaboration_Code) then\n          return;\n \n+      --  Do not generate an elaboration check if exceptions cannot be used,\n+      --  caught, or propagated.\n+\n+      elsif not Exceptions_OK then\n+         return;\n+\n       --  Do not consider subprograms which act as compilation units, because\n       --  they cannot be the target of a dispatching call.\n "}, {"sha": "e3914799a425f57b5d0064714faadc84dc35568c", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 15, "deletions": 4, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/640ad9c221fe9bac7bff0d60a8aa094f09538bec/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/640ad9c221fe9bac7bff0d60a8aa094f09538bec/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=640ad9c221fe9bac7bff0d60a8aa094f09538bec", "patch": "@@ -5099,6 +5099,7 @@ package body Exp_Ch6 is\n                      Alloc_Obj_Id   : Entity_Id;\n                      Alloc_Obj_Decl : Node_Id;\n                      Alloc_If_Stmt  : Node_Id;\n+                     Guard_Except   : Node_Id;\n                      Heap_Allocator : Node_Id;\n                      Pool_Decl      : Node_Id;\n                      Pool_Allocator : Node_Id;\n@@ -5298,6 +5299,18 @@ package body Exp_Ch6 is\n                        (Return_Statement_Entity (N));\n                      Set_Enclosing_Sec_Stack_Return (N);\n \n+                     --  Guard against poor expansion on the caller side by\n+                     --  using a raise statement to catch out-of-range values\n+                     --  of formal parameter BIP_Alloc_Form.\n+\n+                     if Exceptions_OK then\n+                        Guard_Except :=\n+                          Make_Raise_Program_Error (Loc,\n+                            Reason => PE_Build_In_Place_Mismatch);\n+                     else\n+                        Guard_Except := Make_Null_Statement (Loc);\n+                     end if;\n+\n                      --  Create an if statement to test the BIP_Alloc_Form\n                      --  formal and initialize the access object to either the\n                      --  BIP_Object_Access formal (BIP_Alloc_Form =\n@@ -5400,9 +5413,7 @@ package body Exp_Ch6 is\n                          --  Raise Program_Error if it's none of the above;\n                          --  this is a compiler bug.\n \n-                         Else_Statements => New_List (\n-                           Make_Raise_Program_Error (Loc,\n-                             Reason => PE_Build_In_Place_Mismatch)));\n+                         Else_Statements => New_List (Guard_Except));\n \n                      --  If a separate initialization assignment was created\n                      --  earlier, append that following the assignment of the\n@@ -5477,7 +5488,7 @@ package body Exp_Ch6 is\n       Set_Comes_From_Extended_Return_Statement (Return_Stmt);\n \n       Rewrite (N, Result);\n-      Analyze (N);\n+      Analyze (N, Suppress => All_Checks);\n    end Expand_N_Extended_Return_Statement;\n \n    ----------------------------"}, {"sha": "b192956a6784eb499f48a69e38714d868571b02a", "filename": "gcc/ada/exp_ch7.adb", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/640ad9c221fe9bac7bff0d60a8aa094f09538bec/gcc%2Fada%2Fexp_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/640ad9c221fe9bac7bff0d60a8aa094f09538bec/gcc%2Fada%2Fexp_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.adb?ref=640ad9c221fe9bac7bff0d60a8aa094f09538bec", "patch": "@@ -1337,7 +1337,7 @@ package body Exp_Ch7 is\n                              or else\n                                (Present (Clean_Stmts)\n                                  and then Is_Non_Empty_List (Clean_Stmts));\n-      Exceptions_OK    : constant Boolean := Exceptions_In_Finalization_OK;\n+\n       For_Package_Body : constant Boolean := Nkind (N) = N_Package_Body;\n       For_Package_Spec : constant Boolean := Nkind (N) = N_Package_Declaration;\n       For_Package      : constant Boolean :=\n@@ -5328,8 +5328,6 @@ package body Exp_Ch7 is\n          Last_Object  : Node_Id;\n          Related_Node : Node_Id)\n       is\n-         Exceptions_OK : constant Boolean := Exceptions_In_Finalization_OK;\n-\n          Must_Hook : Boolean := False;\n          --  Flag denoting whether the context requires transient object\n          --  export to the outer finalizer.\n@@ -5997,8 +5995,6 @@ package body Exp_Ch7 is\n      (Prim : Final_Primitives;\n       Typ  : Entity_Id) return List_Id\n    is\n-      Exceptions_OK : constant Boolean := Exceptions_In_Finalization_OK;\n-\n       function Build_Adjust_Or_Finalize_Statements\n         (Typ : Entity_Id) return List_Id;\n       --  Create the statements necessary to adjust or finalize an array of\n@@ -6829,8 +6825,6 @@ package body Exp_Ch7 is\n       Typ      : Entity_Id;\n       Is_Local : Boolean := False) return List_Id\n    is\n-      Exceptions_OK : constant Boolean := Exceptions_In_Finalization_OK;\n-\n       function Build_Adjust_Statements (Typ : Entity_Id) return List_Id;\n       --  Build the statements necessary to adjust a record type. The type may\n       --  have discriminants and contain variant parts. Generate:"}, {"sha": "1ef342d318f7b04e14f407274aa675058b14900b", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/640ad9c221fe9bac7bff0d60a8aa094f09538bec/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/640ad9c221fe9bac7bff0d60a8aa094f09538bec/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=640ad9c221fe9bac7bff0d60a8aa094f09538bec", "patch": "@@ -4940,17 +4940,17 @@ package body Exp_Util is\n       end if;\n    end Evolve_Or_Else;\n \n-   -----------------------------------\n-   -- Exceptions_In_Finalization_OK --\n-   -----------------------------------\n+   -------------------\n+   -- Exceptions_OK --\n+   -------------------\n \n-   function Exceptions_In_Finalization_OK return Boolean is\n+   function Exceptions_OK return Boolean is\n    begin\n       return\n         not (Restriction_Active (No_Exception_Handlers)    or else\n              Restriction_Active (No_Exception_Propagation) or else\n              Restriction_Active (No_Exceptions));\n-   end Exceptions_In_Finalization_OK;\n+   end Exceptions_OK;\n \n    -----------------------------------------\n    -- Expand_Static_Predicates_In_Choices --"}, {"sha": "7c2d9b72ec628bb0222bf6764b0264e6a14f6d29", "filename": "gcc/ada/exp_util.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/640ad9c221fe9bac7bff0d60a8aa094f09538bec/gcc%2Fada%2Fexp_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/640ad9c221fe9bac7bff0d60a8aa094f09538bec/gcc%2Fada%2Fexp_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.ads?ref=640ad9c221fe9bac7bff0d60a8aa094f09538bec", "patch": "@@ -544,9 +544,9 @@ package Exp_Util is\n    --  indicating that no checks were required). The Sloc field of the\n    --  constructed N_Or_Else node is copied from Cond1.\n \n-   function Exceptions_In_Finalization_OK return Boolean;\n-   --  Determine whether the finalization machinery can safely add exception\n-   --  handlers and recovery circuitry.\n+   function Exceptions_OK return Boolean;\n+   --  Determine whether exceptions are allowed to be caught, propagated, or\n+   --  raised.\n \n    procedure Expand_Static_Predicates_In_Choices (N : Node_Id);\n    --  N is either a case alternative or a variant. The Discrete_Choices field"}, {"sha": "3fddcce9510163337cfde3ff78bd1b0e9ccf2806", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/640ad9c221fe9bac7bff0d60a8aa094f09538bec/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/640ad9c221fe9bac7bff0d60a8aa094f09538bec/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=640ad9c221fe9bac7bff0d60a8aa094f09538bec", "patch": "@@ -1,3 +1,8 @@\n+2018-11-14  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* gnat.dg/bip_exception.adb, gnat.dg/bip_exception.ads,\n+\tgnat.dg/bip_exception_pkg.ads: New testcase.\n+\n 2018-11-14  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* gnat.dg/equal4.adb, gnat.dg/equal4.ads,"}, {"sha": "1ab24a53c6d1d2a3d95f598697d6a287cce7ca7d", "filename": "gcc/testsuite/gnat.dg/bip_exception.adb", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/640ad9c221fe9bac7bff0d60a8aa094f09538bec/gcc%2Ftestsuite%2Fgnat.dg%2Fbip_exception.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/640ad9c221fe9bac7bff0d60a8aa094f09538bec/gcc%2Ftestsuite%2Fgnat.dg%2Fbip_exception.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fbip_exception.adb?ref=640ad9c221fe9bac7bff0d60a8aa094f09538bec", "patch": "@@ -0,0 +1,17 @@\n+--  { dg-do compile }\n+--  { dg-options \"-gnatwa\" }\n+\n+package body BIP_Exception is\n+   package body Constructors is\n+      function Initialize return T_C4_Scheduler is\n+      begin\n+         return T_C4_Scheduler'(T_Super with null record);\n+      end Initialize;\n+   end Constructors;\n+\n+   overriding procedure V_Run (This : in T_C4_Scheduler) is\n+      pragma Unreferenced (This);\n+   begin\n+      null;\n+   end V_Run;\n+end BIP_Exception;"}, {"sha": "da3e240e95803d67b66d2efe0f61947c3bbd819d", "filename": "gcc/testsuite/gnat.dg/bip_exception.ads", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/640ad9c221fe9bac7bff0d60a8aa094f09538bec/gcc%2Ftestsuite%2Fgnat.dg%2Fbip_exception.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/640ad9c221fe9bac7bff0d60a8aa094f09538bec/gcc%2Ftestsuite%2Fgnat.dg%2Fbip_exception.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fbip_exception.ads?ref=640ad9c221fe9bac7bff0d60a8aa094f09538bec", "patch": "@@ -0,0 +1,20 @@\n+pragma Restrictions (No_Exception_Propagation);\n+with BIP_Exception_Pkg;\n+\n+package BIP_Exception is\n+   type T_C4_Scheduler is new BIP_Exception_Pkg.T_Process with private;\n+   type T_C4_Scheduler_Class_Access is access all T_C4_Scheduler'Class;\n+\n+   package Constructors is\n+      function Initialize return T_C4_Scheduler;\n+   end Constructors;\n+\n+   overriding procedure V_Run (This : in T_C4_Scheduler);\n+   pragma Suppress (Elaboration_Check, V_Run);\n+\n+private\n+   package Super renames BIP_Exception_Pkg;\n+   subtype T_Super is Super.T_Process;\n+\n+   type T_C4_Scheduler is new T_Super with null record;\n+end BIP_Exception;"}, {"sha": "f5f22abbcd0371440c30c7aac9ef204a670b2e3f", "filename": "gcc/testsuite/gnat.dg/bip_exception_pkg.ads", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/640ad9c221fe9bac7bff0d60a8aa094f09538bec/gcc%2Ftestsuite%2Fgnat.dg%2Fbip_exception_pkg.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/640ad9c221fe9bac7bff0d60a8aa094f09538bec/gcc%2Ftestsuite%2Fgnat.dg%2Fbip_exception_pkg.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fbip_exception_pkg.ads?ref=640ad9c221fe9bac7bff0d60a8aa094f09538bec", "patch": "@@ -0,0 +1,11 @@\n+pragma Restrictions (No_Exception_Propagation);\n+\n+package BIP_Exception_Pkg is\n+   type T_Process is abstract tagged limited private;\n+   type T_Process_Class_Access is access all T_Process'Class;\n+\n+   procedure V_Run (This : in T_Process) is abstract;\n+\n+private\n+   type T_Process is abstract tagged limited null record;\n+end BIP_Exception_Pkg;"}]}