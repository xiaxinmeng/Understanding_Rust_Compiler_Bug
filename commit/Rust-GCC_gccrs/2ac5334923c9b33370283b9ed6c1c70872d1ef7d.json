{"sha": "2ac5334923c9b33370283b9ed6c1c70872d1ef7d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmFjNTMzNDkyM2M5YjMzMzcwMjgzYjllZDZjMWM3MDg3MmQxZWY3ZA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-04-25T19:45:30Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-04-25T19:45:30Z"}, "message": "(divhi3, udivhi3, modhi3, umodhi3): Deleted these insns plus some surrounding trash.\n\n(divhi3, udivhi3, modhi3, umodhi3): Deleted these insns plus some\nsurrounding trash.\n(divmodhi4, udivmodhi4): Added these insns.\n\nFrom-SVN: r9440", "tree": {"sha": "1351508bec011225a7e8a5d9e4dd269d7afccdca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1351508bec011225a7e8a5d9e4dd269d7afccdca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2ac5334923c9b33370283b9ed6c1c70872d1ef7d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ac5334923c9b33370283b9ed6c1c70872d1ef7d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ac5334923c9b33370283b9ed6c1c70872d1ef7d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ac5334923c9b33370283b9ed6c1c70872d1ef7d/comments", "author": null, "committer": null, "parents": [{"sha": "f5ec0026978bd7b5da7df82287fa5ef262739d53", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5ec0026978bd7b5da7df82287fa5ef262739d53", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f5ec0026978bd7b5da7df82287fa5ef262739d53"}], "stats": {"total": 241, "additions": 46, "deletions": 195}, "files": [{"sha": "f6d623251a005e556cfa5d3b9c61e252d6049f68", "filename": "gcc/config/m68k/m68k.md", "status": "modified", "additions": 46, "deletions": 195, "changes": 241, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ac5334923c9b33370283b9ed6c1c70872d1ef7d/gcc%2Fconfig%2Fm68k%2Fm68k.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ac5334923c9b33370283b9ed6c1c70872d1ef7d/gcc%2Fconfig%2Fm68k%2Fm68k.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.md?ref=2ac5334923c9b33370283b9ed6c1c70872d1ef7d", "patch": "@@ -3139,99 +3139,6 @@\n \f\n ;; divide instructions\n \n-(define_insn \"divhi3\"\n-  [(set (match_operand:HI 0 \"general_operand\" \"=d\")\n-\t(div:HI (match_operand:HI 1 \"general_operand\" \"0\")\n-\t\t(match_operand:HI 2 \"general_operand\" \"dmn\")))]\n-  \"\"\n-  \"*\n-{\n-#ifdef MOTOROLA\n-  return \\\"ext%.l %0\\;divs%.w %2,%0\\\";\n-#else\n-  return \\\"extl %0\\;divs %2,%0\\\";\n-#endif\n-}\")\n-\n-;; These patterns don't work because the divs instruction is undefined if\n-;; the quotient is more than 16 bits.  This valid C would be miscompiled:\n-;; int n; short d; unsigned short q; ... q = (unsigned int) (n / d);\n-;; Imagine what happens when n = 100000 and d = 1.\n-;;(define_insn \"divhisi3\"\n-;;  [(set (match_operand:HI 0 \"general_operand\" \"=d\")\n-;;\t(truncate:HI\n-;;\t (div:SI\n-;;\t  (match_operand:SI 1 \"general_operand\" \"0\")\n-;;\t  (sign_extend:SI (match_operand:HI 2 \"nonimmediate_operand\" \"dm\")))))]\n-;;  \"\"\n-;;  \"*\n-;;{\n-;;#ifdef MOTOROLA\n-;;  return \\\"divs%.w %2,%0\\\";\n-;;#else\n-;;  return \\\"divs %2,%0\\\";\n-;;#endif\n-;;}\")\n-\n-;;(define_insn \"\"\n-;;  [(set (match_operand:HI 0 \"general_operand\" \"=d\")\n-;;\t(truncate:HI (div:SI (match_operand:SI 1 \"general_operand\" \"0\")\n-;;\t\t\t     (match_operand:SI 2 \"const_int_operand\" \"n\"))))]\n-;;  \"\"\n-;;  \"*\n-;;{\n-;;#ifdef MOTOROLA\n-;;  return \\\"divs%.w %2,%0\\\";\n-;;#else\n-;;  return \\\"divs %2,%0\\\";\n-;;#endif\n-;;}\")\n-\n-(define_insn \"udivhi3\"\n-  [(set (match_operand:HI 0 \"general_operand\" \"=d\")\n-\t(udiv:HI (match_operand:HI 1 \"general_operand\" \"0\")\n-\t\t (match_operand:HI 2 \"general_operand\" \"dmn\")))]\n-  \"\"\n-  \"*\n-{\n-#ifdef MOTOROLA\n-  return \\\"and%.l %#0xFFFF,%0\\;divu%.w %2,%0\\\";\n-#else\n-  return \\\"andl %#0xFFFF,%0\\;divu %2,%0\\\";\n-#endif\n-}\")\n-\n-;; See comment before divhisi3 why these are commented out.\n-;;(define_insn \"udivhisi3\"\n-;;  [(set (match_operand:HI 0 \"general_operand\" \"=d\")\n-;;\t(truncate:HI\n-;;\t (udiv:SI\n-;;\t  (match_operand:SI 1 \"general_operand\" \"0\")\n-;;\t  (zero_extend:SI (match_operand:HI 2 \"nonimmediate_operand\" \"dm\")))))]\n-;;  \"\"\n-;;  \"*\n-;;{\n-;;#ifdef MOTOROLA\n-;;  return \\\"divu%.w %2,%0\\\";\n-;;#else\n-;;  return \\\"divu %2,%0\\\";\n-;;#endif\n-;;}\")\n-\n-;;(define_insn \"\"\n-;;  [(set (match_operand:HI 0 \"general_operand\" \"=d\")\n-;;\t(truncate:HI (udiv:SI (match_operand:SI 1 \"general_operand\" \"0\")\n-;;\t\t\t      (match_operand:SI 2 \"const_int_operand\" \"n\"))))]\n-;;  \"\"\n-;;  \"*\n-;;{\n-;;#ifdef MOTOROLA\n-;;  return \\\"divu%.w %2,%0\\\";\n-;;#else\n-;;  return \\\"divu %2,%0\\\";\n-;;#endif\n-;;}\")\n-\n (define_expand \"divdf3\"\n   [(set (match_operand:DF 0 \"general_operand\" \"\")\n \t(div:DF (match_operand:DF 1 \"general_operand\" \"\")\n@@ -3372,108 +3279,6 @@\n \f\n ;; Remainder instructions.\n \n-(define_insn \"modhi3\"\n-  [(set (match_operand:HI 0 \"general_operand\" \"=d\")\n-\t(mod:HI (match_operand:HI 1 \"general_operand\" \"0\")\n-\t\t(match_operand:HI 2 \"general_operand\" \"dmn\")))]\n-  \"\"\n-  \"*\n-{\n-  /* The swap insn produces cc's that don't correspond to the result.  */\n-  CC_STATUS_INIT;\n-#ifdef MOTOROLA\n-  return \\\"ext%.l %0\\;divs%.w %2,%0\\;swap %0\\\";\n-#else\n-  return \\\"extl %0\\;divs %2,%0\\;swap %0\\\";\n-#endif\n-}\")\n-\n-;; See comment before divhisi3 why these are commented out.\n-;;(define_insn \"modhisi3\"\n-;;  [(set (match_operand:HI 0 \"general_operand\" \"=d\")\n-;;\t(truncate:HI\n-;;\t (mod:SI\n-;;\t  (match_operand:SI 1 \"general_operand\" \"0\")\n-;;\t  (sign_extend:SI (match_operand:HI 2 \"nonimmediate_operand\" \"dm\")))))]\n-;;  \"\"\n-;;  \"*\n-;;{\n-;;  /* The swap insn produces cc's that don't correspond to the result.  */\n-;;  CC_STATUS_INIT;\n-;;#ifdef MOTOROLA\n-;;  return \\\"divs%.w %2,%0\\;swap %0\\\";\n-;;#else\n-;;  return \\\"divs %2,%0\\;swap %0\\\";\n-;;#endif\n-;;}\")\n-\n-;;(define_insn \"\"\n-;;  [(set (match_operand:HI 0 \"general_operand\" \"=d\")\n-;;\t(truncate:HI (mod:SI (match_operand:SI 1 \"general_operand\" \"0\")\n-;;\t\t\t     (match_operand:SI 2 \"const_int_operand\" \"n\"))))]\n-;;  \"\"\n-;;  \"*\n-;;{\n-;;  /* The swap insn produces cc's that don't correspond to the result.  */\n-;;  CC_STATUS_INIT;\n-;;#ifdef MOTOROLA\n-;;  return \\\"divs%.w %2,%0\\;swap %0\\\";\n-;;#else\n-;;  return \\\"divs %2,%0\\;swap %0\\\";\n-;;#endif\n-;;}\")\n-\n-(define_insn \"umodhi3\"\n-  [(set (match_operand:HI 0 \"general_operand\" \"=d\")\n-\t(umod:HI (match_operand:HI 1 \"general_operand\" \"0\")\n-\t\t (match_operand:HI 2 \"general_operand\" \"dmn\")))]\n-  \"\"\n-  \"*\n-{\n-  /* The swap insn produces cc's that don't correspond to the result.  */\n-  CC_STATUS_INIT;\n-#ifdef MOTOROLA\n-  return \\\"and%.l %#0xFFFF,%0\\;divu%.w %2,%0\\;swap %0\\\";\n-#else\n-  return \\\"andl %#0xFFFF,%0\\;divu %2,%0\\;swap %0\\\";\n-#endif\n-}\")\n-\n-;; See comment before divhisi3 why these are commented out.\n-;;(define_insn \"umodhisi3\"\n-;;  [(set (match_operand:HI 0 \"general_operand\" \"=d\")\n-;;\t(truncate:HI\n-;;\t (umod:SI\n-;;\t  (match_operand:SI 1 \"general_operand\" \"0\")\n-;;\t  (zero_extend:SI (match_operand:HI 2 \"nonimmediate_operand\" \"dm\")))))]\n-;;  \"\"\n-;;  \"*\n-;;{\n-;;  /* The swap insn produces cc's that don't correspond to the result.  */\n-;;  CC_STATUS_INIT;\n-;;#ifdef MOTOROLA\n-;;  return \\\"divu%.w %2,%0\\;swap %0\\\";\n-;;#else\n-;;  return \\\"divu %2,%0\\;swap %0\\\";\n-;;#endif\n-;;}\")\n-\n-;;(define_insn \"\"\n-;;  [(set (match_operand:HI 0 \"general_operand\" \"=d\")\n-;;\t(truncate:HI (umod:SI (match_operand:SI 1 \"general_operand\" \"0\")\n-;;\t\t\t      (match_operand:SI 2 \"const_int_operand\" \"n\"))))]\n-;;  \"\"\n-;;  \"*\n-;;{\n-;;  /* The swap insn produces cc's that don't correspond to the result.  */\n-;;  CC_STATUS_INIT;\n-;;#ifdef MOTOROLA\n-;;  return \\\"divu%.w %2,%0\\;swap %0\\\";\n-;;#else\n-;;  return \\\"divu %2,%0\\;swap %0\\\";\n-;;#endif\n-;;}\")\n-\n (define_insn \"divmodsi4\"\n   [(set (match_operand:SI 0 \"general_operand\" \"=d\")\n \t(div:SI (match_operand:SI 1 \"general_operand\" \"0\")\n@@ -3503,6 +3308,52 @@\n   else\n     return \\\"divul%.l %2,%3:%0\\\";\n }\")\n+\n+(define_insn \"divmodhi4\"\n+  [(set (match_operand:HI 0 \"general_operand\" \"=d\")\n+\t(div:HI (match_operand:HI 1 \"general_operand\" \"0\")\n+\t\t(match_operand:HI 2 \"general_operand\" \"g\")))\n+   (set (match_operand:HI 3 \"general_operand\" \"=d\")\n+\t(mod:HI (match_dup 1) (match_dup 2)))]\n+  \"\"\n+  \"*\n+{\n+#ifdef MOTOROLA\n+  output_asm_insn(\\\"ext%.l %0\\;divs%.w %2,%0\\\", operands);\n+#else\n+  output_asm_insn(\\\"extl %0\\;divs %2,%0\\\", operands);\n+#endif\n+  if (!find_reg_note(insn, REG_UNUSED, operands[3]))\n+    {\n+      CC_STATUS_INIT;\n+      return \\\"move%.l %0,%3\\;swap %3\\\";\n+    }\n+  else\n+    return \\\"\\\";\n+}\")\n+\n+(define_insn \"udivmodhi4\"\n+  [(set (match_operand:HI 0 \"general_operand\" \"=d\")\n+\t(udiv:HI (match_operand:HI 1 \"general_operand\" \"0\")\n+\t\t (match_operand:HI 2 \"general_operand\" \"g\")))\n+   (set (match_operand:HI 3 \"general_operand\" \"=d\")\n+\t(umod:HI (match_dup 1) (match_dup 2)))]\n+  \"\"\n+  \"*\n+{\n+#ifdef MOTOROLA\n+  output_asm_insn(\\\"and%.l %#0xFFFF,%0\\;divs%.w %2,%0\\\", operands);\n+#else\n+  output_asm_insn(\\\"and%.l %#0xFFFF,%0\\;divs %2,%0\\\", operands);\n+#endif\n+  if (!find_reg_note(insn, REG_UNUSED, operands[3]))\n+    {\n+      CC_STATUS_INIT;\n+      return \\\"move%.l %0,%3\\;swap %3\\\";\n+    }\n+  else\n+    return \\\"\\\";\n+}\")\n \f\n ;; logical-and instructions\n "}]}