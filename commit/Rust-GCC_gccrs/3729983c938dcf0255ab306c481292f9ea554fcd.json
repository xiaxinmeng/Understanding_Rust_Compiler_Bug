{"sha": "3729983c938dcf0255ab306c481292f9ea554fcd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzcyOTk4M2M5MzhkY2YwMjU1YWIzMDZjNDgxMjkyZjllYTU1NGZjZA==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2011-04-07T18:47:16Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2011-04-07T18:47:16Z"}, "message": "sse.md: Update copyright year.\n\n\t* config/i386/sse.md: Update copyright year.\n\t(avxcvtvecmode): Remove.\n\t(sse_movhlps): Merge with *avx_movhlps.\n\t(sse_movlhps): Merge with *avx_movlhps.\n\t(vec_interleave_highv4sf): Merge with *avx_interleave_highv4sf.\n\t(vec_interleave_lowv4sf): Merge with *avx_interleave_lowv4sf.\n\t(sse_shufps_<mode>): Merge with *avx_shufps_<mode>.\n\t(sse_loadhps): Merge with *avx_loadhps.\n\t(sse_storelps): Merge with *avx_storelps.\n\t(sse_loadlps): Merge with *avx_loadlps.\n\t(sse_movss): Merge with *avx_movss.\n\t(*vec_concatv2sf_sse4_1): Merge with *vec_concatv2sf_avx.\n\t(*vec_concatv4sf_sse): Merge with *vec_concatv4sf_avx.\n\t(*vec_set<mode>_0_sse4_1): Merge with *vec_set<mode>_0_avx.\n\t(*vec_set<mode>_0_sse2): Split multi-unit alternative.\n\t(vec_set<mode>_0): Ditto.\n\t(*vec_setv4sf_sse4_1): Merge with *vec_setv4sf_avx.\n\t(sse4_1_insertps): Merge with *avx_insertps.\n\t(*sse3_interleave_highv2df): Merge with *avx_interleave_highv2df.\n\t(*sse3_interleave_lowv2df): Merge with *avx_interleave_lowv2df.\n\t(vec_interleave_highv2di): Merge with *avx_interleave_highv2di.\n\t(sse2_shufpd_<mode>): Merge with *avx_shufpd_<mode>.\n\t(sse2_storehpd): Merge with *avx_storehpd.\n\t(sse2_loadhpd): Merge with *avx_loadhpd.\n\t(sse2_loadlpd): Merge with *avx_loadlpd.\n\t(sse2_movsd): Merge with *avx_movsd.\n\t(*vec_concatv2df): Merge with *vec_concatv2df.\n\nFrom-SVN: r172123", "tree": {"sha": "8da1d324945286664f1ceabb3064c6192f877d42", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8da1d324945286664f1ceabb3064c6192f877d42"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3729983c938dcf0255ab306c481292f9ea554fcd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3729983c938dcf0255ab306c481292f9ea554fcd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3729983c938dcf0255ab306c481292f9ea554fcd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3729983c938dcf0255ab306c481292f9ea554fcd/comments", "author": null, "committer": null, "parents": [{"sha": "c714e2423e06b8960a240c0293eb2d4da1e9d10d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c714e2423e06b8960a240c0293eb2d4da1e9d10d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c714e2423e06b8960a240c0293eb2d4da1e9d10d"}], "stats": {"total": 957, "additions": 360, "deletions": 597}, "files": [{"sha": "b68a69b80db00c22131ed3fe9e707d26a3ea6847", "filename": "gcc/ChangeLog", "status": "modified", "additions": 43, "deletions": 15, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3729983c938dcf0255ab306c481292f9ea554fcd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3729983c938dcf0255ab306c481292f9ea554fcd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3729983c938dcf0255ab306c481292f9ea554fcd", "patch": "@@ -1,13 +1,42 @@\n+2011-04-07  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/sse.md: Update copyright year.\n+\t(avxcvtvecmode): Remove.\n+\t(sse_movhlps): Merge with *avx_movhlps.\n+\t(sse_movlhps): Merge with *avx_movlhps.\n+\t(vec_interleave_highv4sf): Merge with *avx_interleave_highv4sf.\n+\t(vec_interleave_lowv4sf): Merge with *avx_interleave_lowv4sf.\n+\t(sse_shufps_<mode>): Merge with *avx_shufps_<mode>.\n+\t(sse_loadhps): Merge with *avx_loadhps.\n+\t(sse_storelps): Merge with *avx_storelps.\n+\t(sse_loadlps): Merge with *avx_loadlps.\n+\t(sse_movss): Merge with *avx_movss.\n+\t(*vec_concatv2sf_sse4_1): Merge with *vec_concatv2sf_avx.\n+\t(*vec_concatv4sf_sse): Merge with *vec_concatv4sf_avx.\n+\t(*vec_set<mode>_0_sse4_1): Merge with *vec_set<mode>_0_avx.\n+\t(*vec_set<mode>_0_sse2): Split multi-unit alternative.\n+\t(vec_set<mode>_0): Ditto.\n+\t(*vec_setv4sf_sse4_1): Merge with *vec_setv4sf_avx.\n+\t(sse4_1_insertps): Merge with *avx_insertps.\n+\t(*sse3_interleave_highv2df): Merge with *avx_interleave_highv2df.\n+\t(*sse3_interleave_lowv2df): Merge with *avx_interleave_lowv2df.\n+\t(vec_interleave_highv2di): Merge with *avx_interleave_highv2di.\n+\t(sse2_shufpd_<mode>): Merge with *avx_shufpd_<mode>.\n+\t(sse2_storehpd): Merge with *avx_storehpd.\n+\t(sse2_loadhpd): Merge with *avx_loadhpd.\n+\t(sse2_loadlpd): Merge with *avx_loadlpd.\n+\t(sse2_movsd): Merge with *avx_movsd.\n+\t(*vec_concatv2df): Merge with *vec_concatv2df.\n+\n 2011-04-07  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR debug/48343\n \t* combine.c (combine_instructions): Add last_combined_insn,\n-\tupdate it if insn is after it, pass it to all try_combine\n-\tcalls.\n+\tupdate it if insn is after it, pass it to all try_combine calls.\n \t(try_combine): Add last_combined_insn parameter, pass it instead of\n \ti3 to propagate_for_debug.\n \n-2011-04-05  Nick Clifton  <nickc@redhat.com>\n+2011-04-07  Nick Clifton  <nickc@redhat.com>\n \n \t* config/mn10300/mn10300.md (movqi_internal): Add alternatives\n \tto handle MDR <-> data register transfers.\n@@ -29,22 +58,22 @@\n \n \tPR target/43920\n \t* cfgcleanup.c (walk_to_nondebug_insn): New function.\n-\t(flow_find_cross_jump): Use walk_to_nondebug_insn.  Recalculate bb1 and\n-\tbb2.\n-\t(try_crossjump_to_edge): Handle case that newpos1 or newpos2 is not src1\n-\tor src2.  Redirect edges to the last basic block.  Update frequency and\n-\tcount on multiple basic blocks in case of fallthru.\n+\t(flow_find_cross_jump): Use walk_to_nondebug_insn.  Recalculate bb1\n+\tand bb2.\n+\t(try_crossjump_to_edge): Handle case that newpos1 or newpos2 is not\n+\tsrc1 or src2.  Redirect edges to the last basic block.  Update\n+\tfrequency and count on multiple basic blocks in case of fallthru.\n \n 2011-04-07  Tom de Vries  <tom@codesourcery.com>\n \n \tPR target/43920\n \t* cfgcleanup.c (equal_different_set_p, can_replace_by, merge_dir): New\n \tfunction.\n-\t(old_insns_match_p): Change return type.  Replace return false/true with\n-\treturn dir_none/dir_both.  Use can_replace_by.\n-\t(flow_find_cross_jump): Add dir_p parameter.  Init replacement direction\n-\tfrom dir_p.  Register replacement direction in dir, last_dir and\n-\tafterlast_dir.\tHandle new return type of old_insns_match_p using\n+\t(old_insns_match_p): Change return type.  Replace return false/true\n+\twith return dir_none/dir_both.  Use can_replace_by.\n+\t(flow_find_cross_jump): Add dir_p parameter.  Init replacement\n+\tdirection from dir_p.  Register replacement direction in dir, last_dir\n+\tand afterlast_dir.  Handle new return type of old_insns_match_p using\n \tmerge_dir.  Return replacement direction in dir_p.\n \t(flow_find_head_matching_sequence, outgoing_edges_match): Handle new\n \treturn type of old_insns_match_p.\n@@ -581,8 +610,7 @@\n 2011-04-04  Joseph Myers  <joseph@codesourcery.com>\n \n \t* doc/options.texi (ToLower): Document.\n-\t* opt-functions.awk (switch_bit_fields): Initialize cl_tolower\n-\tfield.\n+\t* opt-functions.awk (switch_bit_fields): Initialize cl_tolower field.\n \t* opts-common.c (decode_cmdline_option): Handle cl_tolower.\n \t* opts.h (cl_option): Add cl_tolower field.\n \t* config/rx/rx.c (rx_handle_option): Use strcmp of -mcpu="}, {"sha": "2ecaad78410e0fd7e9264801530f0448104f3827", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 317, "deletions": 582, "changes": 899, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3729983c938dcf0255ab306c481292f9ea554fcd/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3729983c938dcf0255ab306c481292f9ea554fcd/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=3729983c938dcf0255ab306c481292f9ea554fcd", "patch": "@@ -1,5 +1,5 @@\n ;; GCC machine description for SSE instructions\n-;; Copyright (C) 2005, 2006, 2007, 2008, 2009, 2010\n+;; Copyright (C) 2005, 2006, 2007, 2008, 2009, 2010, 2011\n ;; Free Software Foundation, Inc.\n ;;\n ;; This file is part of GCC.\n@@ -169,8 +169,6 @@\n (define_mode_attr avxscalarmode\n   [(V16QI \"QI\") (V8HI  \"HI\") (V4SI \"SI\") (V2DI \"DI\") (V4SF \"SF\") (V2DF \"DF\")\n    (V32QI \"QI\") (V16HI \"HI\") (V8SI \"SI\") (V4DI \"DI\") (V8SF \"SF\") (V4DF \"DF\")])\n-(define_mode_attr avxcvtvecmode\n-  [(V4SF \"V4SI\") (V8SF \"V8SI\") (V4SI \"V4SF\") (V8SI \"V8SF\")])\n (define_mode_attr avxpermvecmode\n   [(V2DF \"V2DI\") (V4SF \"V4SI\") (V4DF \"V4DI\") (V8SF \"V8SI\")])\n (define_mode_attr avxmodesuffixp\n@@ -2864,42 +2862,27 @@\n   DONE;\n })\n \n-(define_insn \"*avx_movhlps\"\n-  [(set (match_operand:V4SF 0 \"nonimmediate_operand\"     \"=x,x,m\")\n-\t(vec_select:V4SF\n-\t  (vec_concat:V8SF\n-\t    (match_operand:V4SF 1 \"nonimmediate_operand\" \" x,x,0\")\n-\t    (match_operand:V4SF 2 \"nonimmediate_operand\" \" x,o,x\"))\n-\t  (parallel [(const_int 6)\n-\t\t     (const_int 7)\n-\t\t     (const_int 2)\n-\t\t     (const_int 3)])))]\n-  \"TARGET_AVX && !(MEM_P (operands[1]) && MEM_P (operands[2]))\"\n-  \"@\n-   vmovhlps\\t{%2, %1, %0|%0, %1, %2}\n-   vmovlps\\t{%H2, %1, %0|%0, %1, %H2}\n-   vmovhps\\t{%2, %0|%0, %2}\"\n-  [(set_attr \"type\" \"ssemov\")\n-   (set_attr \"prefix\" \"vex\")\n-   (set_attr \"mode\" \"V4SF,V2SF,V2SF\")])\n-\n (define_insn \"sse_movhlps\"\n-  [(set (match_operand:V4SF 0 \"nonimmediate_operand\"     \"=x,x,m\")\n+  [(set (match_operand:V4SF 0 \"nonimmediate_operand\"     \"=x,x,x,x,m\")\n \t(vec_select:V4SF\n \t  (vec_concat:V8SF\n-\t    (match_operand:V4SF 1 \"nonimmediate_operand\" \" 0,0,0\")\n-\t    (match_operand:V4SF 2 \"nonimmediate_operand\" \" x,o,x\"))\n+\t    (match_operand:V4SF 1 \"nonimmediate_operand\" \" 0,x,0,x,0\")\n+\t    (match_operand:V4SF 2 \"nonimmediate_operand\" \" x,x,o,o,x\"))\n \t  (parallel [(const_int 6)\n \t\t     (const_int 7)\n \t\t     (const_int 2)\n \t\t     (const_int 3)])))]\n   \"TARGET_SSE && !(MEM_P (operands[1]) && MEM_P (operands[2]))\"\n   \"@\n    movhlps\\t{%2, %0|%0, %2}\n+   vmovhlps\\t{%2, %1, %0|%0, %1, %2}\n    movlps\\t{%H2, %0|%0, %H2}\n-   movhps\\t{%2, %0|%0, %2}\"\n-  [(set_attr \"type\" \"ssemov\")\n-   (set_attr \"mode\" \"V4SF,V2SF,V2SF\")])\n+   vmovlps\\t{%H2, %1, %0|%0, %1, %H2}\n+   %vmovhps\\t{%2, %0|%0, %2}\"\n+  [(set_attr \"isa\" \"noavx,avx,noavx,avx,base\")\n+   (set_attr \"type\" \"ssemov\")\n+   (set_attr \"prefix\" \"orig,vex,orig,vex,maybe_vex\")\n+   (set_attr \"mode\" \"V4SF,V4SF,V2SF,V2SF,V2SF\")])\n \n (define_expand \"sse_movlhps_exp\"\n   [(set (match_operand:V4SF 0 \"nonimmediate_operand\" \"\")\n@@ -2924,42 +2907,27 @@\n   DONE;\n })\n \n-(define_insn \"*avx_movlhps\"\n-  [(set (match_operand:V4SF 0 \"nonimmediate_operand\"     \"=x,x,o\")\n-\t(vec_select:V4SF\n-\t  (vec_concat:V8SF\n-\t    (match_operand:V4SF 1 \"nonimmediate_operand\" \" x,x,0\")\n-\t    (match_operand:V4SF 2 \"nonimmediate_operand\" \" x,m,x\"))\n-\t  (parallel [(const_int 0)\n-\t\t     (const_int 1)\n-\t\t     (const_int 4)\n-\t\t     (const_int 5)])))]\n-  \"TARGET_AVX && ix86_binary_operator_ok (UNKNOWN, V4SFmode, operands)\"\n-  \"@\n-   vmovlhps\\t{%2, %1, %0|%0, %1, %2}\n-   vmovhps\\t{%2, %1, %0|%0, %1, %2}\n-   vmovlps\\t{%2, %H0|%H0, %2}\"\n-  [(set_attr \"type\" \"ssemov\")\n-   (set_attr \"prefix\" \"vex\")\n-   (set_attr \"mode\" \"V4SF,V2SF,V2SF\")])\n-\n (define_insn \"sse_movlhps\"\n-  [(set (match_operand:V4SF 0 \"nonimmediate_operand\"     \"=x,x,o\")\n+  [(set (match_operand:V4SF 0 \"nonimmediate_operand\"     \"=x,x,x,x,o\")\n \t(vec_select:V4SF\n \t  (vec_concat:V8SF\n-\t    (match_operand:V4SF 1 \"nonimmediate_operand\" \" 0,0,0\")\n-\t    (match_operand:V4SF 2 \"nonimmediate_operand\" \" x,m,x\"))\n+\t    (match_operand:V4SF 1 \"nonimmediate_operand\" \" 0,x,0,x,0\")\n+\t    (match_operand:V4SF 2 \"nonimmediate_operand\" \" x,x,m,x,x\"))\n \t  (parallel [(const_int 0)\n \t\t     (const_int 1)\n \t\t     (const_int 4)\n \t\t     (const_int 5)])))]\n   \"TARGET_SSE && ix86_binary_operator_ok (UNKNOWN, V4SFmode, operands)\"\n   \"@\n    movlhps\\t{%2, %0|%0, %2}\n+   vmovlhps\\t{%2, %1, %0|%0, %1, %2}\n    movhps\\t{%2, %0|%0, %2}\n-   movlps\\t{%2, %H0|%H0, %2}\"\n-  [(set_attr \"type\" \"ssemov\")\n-   (set_attr \"mode\" \"V4SF,V2SF,V2SF\")])\n+   vmovhps\\t{%2, %1, %0|%0, %1, %2}\n+   %vmovlps\\t{%2, %H0|%H0, %2}\"\n+  [(set_attr \"isa\" \"noavx,avx,noavx,avx,base\")\n+   (set_attr \"type\" \"ssemov\")\n+   (set_attr \"prefix\" \"orig,vex,orig,vex,maybe_vex\")\n+   (set_attr \"mode\" \"V4SF,V4SF,V2SF,V2SF,V2SF\")])\n \n ;; Recall that the 256-bit unpck insns only shuffle within their lanes.\n (define_insn \"avx_unpckhps256\"\n@@ -2978,20 +2946,6 @@\n    (set_attr \"prefix\" \"vex\")\n    (set_attr \"mode\" \"V8SF\")])\n \n-(define_insn \"*avx_interleave_highv4sf\"\n-  [(set (match_operand:V4SF 0 \"register_operand\" \"=x\")\n-\t(vec_select:V4SF\n-\t  (vec_concat:V8SF\n-\t    (match_operand:V4SF 1 \"register_operand\" \"x\")\n-\t    (match_operand:V4SF 2 \"nonimmediate_operand\" \"xm\"))\n-\t  (parallel [(const_int 2) (const_int 6)\n-\t\t     (const_int 3) (const_int 7)])))]\n-  \"TARGET_AVX\"\n-  \"vunpckhps\\t{%2, %1, %0|%0, %1, %2}\"\n-  [(set_attr \"type\" \"sselog\")\n-   (set_attr \"prefix\" \"vex\")\n-   (set_attr \"mode\" \"V4SF\")])\n-\n (define_expand \"vec_interleave_highv8sf\"\n   [(set (match_dup 3)\n \t(vec_select:V8SF\n@@ -3027,16 +2981,20 @@\n })\n \n (define_insn \"vec_interleave_highv4sf\"\n-  [(set (match_operand:V4SF 0 \"register_operand\" \"=x\")\n+  [(set (match_operand:V4SF 0 \"register_operand\" \"=x,x\")\n \t(vec_select:V4SF\n \t  (vec_concat:V8SF\n-\t    (match_operand:V4SF 1 \"register_operand\" \"0\")\n-\t    (match_operand:V4SF 2 \"nonimmediate_operand\" \"xm\"))\n+\t    (match_operand:V4SF 1 \"register_operand\" \"0,x\")\n+\t    (match_operand:V4SF 2 \"nonimmediate_operand\" \"xm,xm\"))\n \t  (parallel [(const_int 2) (const_int 6)\n \t\t     (const_int 3) (const_int 7)])))]\n   \"TARGET_SSE\"\n-  \"unpckhps\\t{%2, %0|%0, %2}\"\n-  [(set_attr \"type\" \"sselog\")\n+  \"@\n+   unpckhps\\t{%2, %0|%0, %2}\n+   vunpckhps\\t{%2, %1, %0|%0, %1, %2}\"\n+  [(set_attr \"isa\" \"noavx,avx\")\n+   (set_attr \"type\" \"sselog\")\n+   (set_attr \"prefix\" \"orig,vex\")\n    (set_attr \"mode\" \"V4SF\")])\n \n ;; Recall that the 256-bit unpck insns only shuffle within their lanes.\n@@ -3056,20 +3014,6 @@\n    (set_attr \"prefix\" \"vex\")\n    (set_attr \"mode\" \"V8SF\")])\n \n-(define_insn \"*avx_interleave_lowv4sf\"\n-  [(set (match_operand:V4SF 0 \"register_operand\" \"=x\")\n-\t(vec_select:V4SF\n-\t  (vec_concat:V8SF\n-\t    (match_operand:V4SF 1 \"register_operand\" \"x\")\n-\t    (match_operand:V4SF 2 \"nonimmediate_operand\" \"xm\"))\n-\t  (parallel [(const_int 0) (const_int 4)\n-\t\t     (const_int 1) (const_int 5)])))]\n-  \"TARGET_AVX\"\n-  \"vunpcklps\\t{%2, %1, %0|%0, %1, %2}\"\n-  [(set_attr \"type\" \"sselog\")\n-   (set_attr \"prefix\" \"vex\")\n-   (set_attr \"mode\" \"V4SF\")])\n-\n (define_expand \"vec_interleave_lowv8sf\"\n   [(set (match_dup 3)\n \t(vec_select:V8SF\n@@ -3105,16 +3049,20 @@\n })\n \n (define_insn \"vec_interleave_lowv4sf\"\n-  [(set (match_operand:V4SF 0 \"register_operand\" \"=x\")\n+  [(set (match_operand:V4SF 0 \"register_operand\" \"=x,x\")\n \t(vec_select:V4SF\n \t  (vec_concat:V8SF\n-\t    (match_operand:V4SF 1 \"register_operand\" \"0\")\n-\t    (match_operand:V4SF 2 \"nonimmediate_operand\" \"xm\"))\n+\t    (match_operand:V4SF 1 \"register_operand\" \"0,x\")\n+\t    (match_operand:V4SF 2 \"nonimmediate_operand\" \"xm,xm\"))\n \t  (parallel [(const_int 0) (const_int 4)\n \t\t     (const_int 1) (const_int 5)])))]\n   \"TARGET_SSE\"\n-  \"unpcklps\\t{%2, %0|%0, %2}\"\n-  [(set_attr \"type\" \"sselog\")\n+  \"@\n+   unpcklps\\t{%2, %0|%0, %2}\n+   vunpcklps\\t{%2, %1, %0|%0, %1, %2}\"\n+  [(set_attr \"isa\" \"noavx,avx\")\n+   (set_attr \"type\" \"sselog\")\n+   (set_attr \"prefix\" \"orig,vex\")\n    (set_attr \"mode\" \"V4SF\")])\n \n ;; These are modeled with the same vec_concat as the others so that we\n@@ -3256,38 +3204,12 @@\n   DONE;\n })\n \n-(define_insn \"*avx_shufps_<mode>\"\n-  [(set (match_operand:SSEMODE4S 0 \"register_operand\" \"=x\")\n-\t(vec_select:SSEMODE4S\n-\t  (vec_concat:<ssedoublesizemode>\n-\t    (match_operand:SSEMODE4S 1 \"register_operand\" \"x\")\n-\t    (match_operand:SSEMODE4S 2 \"nonimmediate_operand\" \"xm\"))\n-\t  (parallel [(match_operand 3 \"const_0_to_3_operand\" \"\")\n-\t\t     (match_operand 4 \"const_0_to_3_operand\" \"\")\n-\t\t     (match_operand 5 \"const_4_to_7_operand\" \"\")\n-\t\t     (match_operand 6 \"const_4_to_7_operand\" \"\")])))]\n-  \"TARGET_AVX\"\n-{\n-  int mask = 0;\n-  mask |= INTVAL (operands[3]) << 0;\n-  mask |= INTVAL (operands[4]) << 2;\n-  mask |= (INTVAL (operands[5]) - 4) << 4;\n-  mask |= (INTVAL (operands[6]) - 4) << 6;\n-  operands[3] = GEN_INT (mask);\n-\n-  return \"vshufps\\t{%3, %2, %1, %0|%0, %1, %2, %3}\";\n-}\n-  [(set_attr \"type\" \"sselog\")\n-   (set_attr \"length_immediate\" \"1\")\n-   (set_attr \"prefix\" \"vex\")\n-   (set_attr \"mode\" \"V4SF\")])\n-\n (define_insn \"sse_shufps_<mode>\"\n-  [(set (match_operand:SSEMODE4S 0 \"register_operand\" \"=x\")\n+  [(set (match_operand:SSEMODE4S 0 \"register_operand\" \"=x,x\")\n \t(vec_select:SSEMODE4S\n \t  (vec_concat:<ssedoublesizemode>\n-\t    (match_operand:SSEMODE4S 1 \"register_operand\" \"0\")\n-\t    (match_operand:SSEMODE4S 2 \"nonimmediate_operand\" \"xm\"))\n+\t    (match_operand:SSEMODE4S 1 \"register_operand\" \"0,x\")\n+\t    (match_operand:SSEMODE4S 2 \"nonimmediate_operand\" \"xm,xm\"))\n \t  (parallel [(match_operand 3 \"const_0_to_3_operand\" \"\")\n \t\t     (match_operand 4 \"const_0_to_3_operand\" \"\")\n \t\t     (match_operand 5 \"const_4_to_7_operand\" \"\")\n@@ -3301,10 +3223,20 @@\n   mask |= (INTVAL (operands[6]) - 4) << 6;\n   operands[3] = GEN_INT (mask);\n \n-  return \"shufps\\t{%3, %2, %0|%0, %2, %3}\";\n+  switch (which_alternative)\n+    {\n+    case 0:\n+      return \"shufps\\t{%3, %2, %0|%0, %2, %3}\";\n+    case 1:\n+      return \"vshufps\\t{%3, %2, %1, %0|%0, %1, %2, %3}\";\n+    default:\n+      gcc_unreachable ();\n+    }\n }\n-  [(set_attr \"type\" \"sselog\")\n+  [(set_attr \"isa\" \"noavx,avx\")\n+   (set_attr \"type\" \"sselog\")\n    (set_attr \"length_immediate\" \"1\")\n+   (set_attr \"prefix\" \"orig,vex\")\n    (set_attr \"mode\" \"V4SF\")])\n \n (define_insn \"sse_storehps\"\n@@ -3341,62 +3273,37 @@\n   DONE;\n })\n \n-(define_insn \"*avx_loadhps\"\n-  [(set (match_operand:V4SF 0 \"nonimmediate_operand\" \"=x,x,o\")\n-\t(vec_concat:V4SF\n-\t  (vec_select:V2SF\n-\t    (match_operand:V4SF 1 \"nonimmediate_operand\" \"x,x,0\")\n-\t    (parallel [(const_int 0) (const_int 1)]))\n-\t  (match_operand:V2SF 2 \"nonimmediate_operand\" \"m,x,x\")))]\n-  \"TARGET_AVX\"\n-  \"@\n-   vmovhps\\t{%2, %1, %0|%0, %1, %2}\n-   vmovlhps\\t{%2, %1, %0|%0, %1, %2}\n-   vmovlps\\t{%2, %H0|%H0, %2}\"\n-  [(set_attr \"type\" \"ssemov\")\n-   (set_attr \"prefix\" \"vex\")\n-   (set_attr \"mode\" \"V2SF,V4SF,V2SF\")])\n-\n (define_insn \"sse_loadhps\"\n-  [(set (match_operand:V4SF 0 \"nonimmediate_operand\" \"=x,x,o\")\n+  [(set (match_operand:V4SF 0 \"nonimmediate_operand\"     \"=x,x,x,x,o\")\n \t(vec_concat:V4SF\n \t  (vec_select:V2SF\n-\t    (match_operand:V4SF 1 \"nonimmediate_operand\" \"0,0,0\")\n+\t    (match_operand:V4SF 1 \"nonimmediate_operand\" \" 0,x,0,x,0\")\n \t    (parallel [(const_int 0) (const_int 1)]))\n-\t  (match_operand:V2SF 2 \"nonimmediate_operand\" \"m,x,x\")))]\n+\t  (match_operand:V2SF 2 \"nonimmediate_operand\"   \" m,m,x,x,x\")))]\n   \"TARGET_SSE\"\n   \"@\n    movhps\\t{%2, %0|%0, %2}\n+   vmovhps\\t{%2, %1, %0|%0, %1, %2}\n    movlhps\\t{%2, %0|%0, %2}\n-   movlps\\t{%2, %H0|%H0, %2}\"\n-  [(set_attr \"type\" \"ssemov\")\n-   (set_attr \"mode\" \"V2SF,V4SF,V2SF\")])\n-\n-(define_insn \"*avx_storelps\"\n-  [(set (match_operand:V2SF 0 \"nonimmediate_operand\" \"=m,x,x\")\n-\t(vec_select:V2SF\n-\t  (match_operand:V4SF 1 \"nonimmediate_operand\" \"x,x,m\")\n-\t  (parallel [(const_int 0) (const_int 1)])))]\n-  \"TARGET_AVX\"\n-  \"@\n-   vmovlps\\t{%1, %0|%0, %1}\n-   vmovaps\\t{%1, %0|%0, %1}\n-   vmovlps\\t{%1, %0, %0|%0, %0, %1}\"\n-  [(set_attr \"type\" \"ssemov\")\n-   (set_attr \"prefix\" \"vex\")\n-   (set_attr \"mode\" \"V2SF,V2DF,V2SF\")])\n+   vmovlhps\\t{%2, %1, %0|%0, %1, %2}\n+   %vmovlps\\t{%2, %H0|%H0, %2}\"\n+  [(set_attr \"isa\" \"noavx,avx,noavx,avx,base\")\n+   (set_attr \"type\" \"ssemov\")\n+   (set_attr \"prefix\" \"orig,vex,orig,vex,maybe_vex\")\n+   (set_attr \"mode\" \"V2SF,V2SF,V4SF,V4SF,V2SF\")])\n \n (define_insn \"sse_storelps\"\n-  [(set (match_operand:V2SF 0 \"nonimmediate_operand\" \"=m,x,x\")\n+  [(set (match_operand:V2SF 0 \"nonimmediate_operand\"   \"=m,x,x\")\n \t(vec_select:V2SF\n-\t  (match_operand:V4SF 1 \"nonimmediate_operand\" \"x,x,m\")\n+\t  (match_operand:V4SF 1 \"nonimmediate_operand\" \" x,x,m\")\n \t  (parallel [(const_int 0) (const_int 1)])))]\n   \"TARGET_SSE\"\n   \"@\n-   movlps\\t{%1, %0|%0, %1}\n-   movaps\\t{%1, %0|%0, %1}\n-   movlps\\t{%1, %0|%0, %1}\"\n+   %vmovlps\\t{%1, %0|%0, %1}\n+   %vmovaps\\t{%1, %0|%0, %1}\n+   %vmovlps\\t{%1, %d0|%d0, %1}\"\n   [(set_attr \"type\" \"ssemov\")\n+   (set_attr \"prefix\" \"maybe_vex\")\n    (set_attr \"mode\" \"V2SF,V4SF,V2SF\")])\n \n (define_expand \"sse_loadlps_exp\"\n@@ -3419,60 +3326,39 @@\n   DONE;\n })\n \n-(define_insn \"*avx_loadlps\"\n-  [(set (match_operand:V4SF 0 \"nonimmediate_operand\" \"=x,x,m\")\n-\t(vec_concat:V4SF\n-\t  (match_operand:V2SF 2 \"nonimmediate_operand\" \"x,m,x\")\n-\t  (vec_select:V2SF\n-\t    (match_operand:V4SF 1 \"nonimmediate_operand\" \"x,x,0\")\n-\t    (parallel [(const_int 2) (const_int 3)]))))]\n-  \"TARGET_AVX\"\n-  \"@\n-   shufps\\t{$0xe4, %1, %2, %0|%0, %2, %1, 0xe4}\n-   vmovlps\\t{%2, %1, %0|%0, %1, %2}\n-   vmovlps\\t{%2, %0|%0, %2}\"\n-  [(set_attr \"type\" \"sselog,ssemov,ssemov\")\n-   (set_attr \"length_immediate\" \"1,*,*\")\n-   (set_attr \"prefix\" \"vex\")\n-   (set_attr \"mode\" \"V4SF,V2SF,V2SF\")])\n-\n (define_insn \"sse_loadlps\"\n-  [(set (match_operand:V4SF 0 \"nonimmediate_operand\" \"=x,x,m\")\n+  [(set (match_operand:V4SF 0 \"nonimmediate_operand\"     \"=x,x,x,x,m\")\n \t(vec_concat:V4SF\n-\t  (match_operand:V2SF 2 \"nonimmediate_operand\" \"0,m,x\")\n+\t  (match_operand:V2SF 2 \"nonimmediate_operand\"   \" 0,x,m,x,x\")\n \t  (vec_select:V2SF\n-\t    (match_operand:V4SF 1 \"nonimmediate_operand\" \"x,0,0\")\n+\t    (match_operand:V4SF 1 \"nonimmediate_operand\" \" x,x,0,x,0\")\n \t    (parallel [(const_int 2) (const_int 3)]))))]\n   \"TARGET_SSE\"\n   \"@\n    shufps\\t{$0xe4, %1, %0|%0, %1, 0xe4}\n+   vshufps\\t{$0xe4, %1, %2, %0|%0, %2, %1, 0xe4}\n    movlps\\t{%2, %0|%0, %2}\n-   movlps\\t{%2, %0|%0, %2}\"\n-  [(set_attr \"type\" \"sselog,ssemov,ssemov\")\n-   (set_attr \"length_immediate\" \"1,*,*\")\n-   (set_attr \"mode\" \"V4SF,V2SF,V2SF\")])\n-\n-(define_insn \"*avx_movss\"\n-  [(set (match_operand:V4SF 0 \"register_operand\" \"=x\")\n-\t(vec_merge:V4SF\n-\t  (match_operand:V4SF 2 \"register_operand\" \"x\")\n-\t  (match_operand:V4SF 1 \"register_operand\" \"x\")\n-\t  (const_int 1)))]\n-  \"TARGET_AVX\"\n-  \"vmovss\\t{%2, %1, %0|%0, %1, %2}\"\n-  [(set_attr \"type\" \"ssemov\")\n-   (set_attr \"prefix\" \"vex\")\n-   (set_attr \"mode\" \"SF\")])\n+   vmovlps\\t{%2, %1, %0|%0, %1, %2}\n+   %vmovlps\\t{%2, %0|%0, %2}\"\n+  [(set_attr \"isa\" \"noavx,avx,noavx,avx,base\")\n+   (set_attr \"type\" \"sselog,sselog,ssemov,ssemov,ssemov\")\n+   (set_attr \"length_immediate\" \"1,1,*,*,*\")\n+   (set_attr \"prefix\" \"orig,vex,orig,vex,maybe_vex\")\n+   (set_attr \"mode\" \"V4SF,V4SF,V2SF,V2SF,V2SF\")])\n \n (define_insn \"sse_movss\"\n-  [(set (match_operand:V4SF 0 \"register_operand\" \"=x\")\n+  [(set (match_operand:V4SF 0 \"register_operand\"   \"=x,x\")\n \t(vec_merge:V4SF\n-\t  (match_operand:V4SF 2 \"register_operand\" \"x\")\n-\t  (match_operand:V4SF 1 \"register_operand\" \"0\")\n+\t  (match_operand:V4SF 2 \"register_operand\" \" x,x\")\n+\t  (match_operand:V4SF 1 \"register_operand\" \" 0,x\")\n \t  (const_int 1)))]\n   \"TARGET_SSE\"\n-  \"movss\\t{%2, %0|%0, %2}\"\n-  [(set_attr \"type\" \"ssemov\")\n+  \"@\n+   movss\\t{%2, %0|%0, %2}\n+   vmovss\\t{%2, %1, %0|%0, %1, %2}\"\n+  [(set_attr \"isa\" \"noavx,avx\")\n+   (set_attr \"type\" \"ssemov\")\n+   (set_attr \"prefix\" \"orig,vex\")\n    (set_attr \"mode\" \"SF\")])\n \n (define_expand \"vec_dupv4sf\"\n@@ -3509,46 +3395,29 @@\n    (set_attr \"length_immediate\" \"1\")\n    (set_attr \"mode\" \"V4SF\")])\n \n-(define_insn \"*vec_concatv2sf_avx\"\n-  [(set (match_operand:V2SF 0 \"register_operand\"     \"=x,x,x,*y ,*y\")\n-\t(vec_concat:V2SF\n-\t  (match_operand:SF 1 \"nonimmediate_operand\" \" x,x,m, x , m\")\n-\t  (match_operand:SF 2 \"vector_move_operand\"  \" x,m,C,*ym, C\")))]\n-  \"TARGET_AVX\"\n-  \"@\n-   vunpcklps\\t{%2, %1, %0|%0, %1, %2}\n-   vinsertps\\t{$0x10, %2, %1, %0|%0, %1, %2, 0x10}\n-   vmovss\\t{%1, %0|%0, %1}\n-   punpckldq\\t{%2, %0|%0, %2}\n-   movd\\t{%1, %0|%0, %1}\"\n-  [(set_attr \"type\" \"sselog,sselog,ssemov,mmxcvt,mmxmov\")\n-   (set_attr \"length_immediate\" \"*,1,*,*,*\")\n-   (set_attr \"prefix_extra\" \"*,1,*,*,*\")\n-   (set (attr \"prefix\")\n-     (if_then_else (eq_attr \"alternative\" \"3,4\")\n-       (const_string \"orig\")\n-       (const_string \"vex\")))\n-   (set_attr \"mode\" \"V4SF,V4SF,SF,DI,DI\")])\n-\n ;; Although insertps takes register source, we prefer\n ;; unpcklps with register source since it is shorter.\n (define_insn \"*vec_concatv2sf_sse4_1\"\n-  [(set (match_operand:V2SF 0 \"register_operand\"     \"=x,x,x,*y ,*y\")\n+  [(set (match_operand:V2SF 0 \"register_operand\"     \"=x,x,x,x,x,*y ,*y\")\n \t(vec_concat:V2SF\n-\t  (match_operand:SF 1 \"nonimmediate_operand\" \" 0,0,m, 0 , m\")\n-\t  (match_operand:SF 2 \"vector_move_operand\"  \" x,m,C,*ym, C\")))]\n+\t  (match_operand:SF 1 \"nonimmediate_operand\" \" 0,x,0,x,m, 0 , m\")\n+\t  (match_operand:SF 2 \"vector_move_operand\"  \" x,x,m,m,C,*ym, C\")))]\n   \"TARGET_SSE4_1\"\n   \"@\n    unpcklps\\t{%2, %0|%0, %2}\n+   vunpcklps\\t{%2, %1, %0|%0, %1, %2}\n    insertps\\t{$0x10, %2, %0|%0, %2, 0x10}\n-   movss\\t{%1, %0|%0, %1}\n+   vinsertps\\t{$0x10, %2, %1, %0|%0, %1, %2, 0x10}\n+   %vmovss\\t{%1, %0|%0, %1}\n    punpckldq\\t{%2, %0|%0, %2}\n    movd\\t{%1, %0|%0, %1}\"\n-  [(set_attr \"type\" \"sselog,sselog,ssemov,mmxcvt,mmxmov\")\n-   (set_attr \"prefix_data16\" \"*,1,*,*,*\")\n-   (set_attr \"prefix_extra\" \"*,1,*,*,*\")\n-   (set_attr \"length_immediate\" \"*,1,*,*,*\")\n-   (set_attr \"mode\" \"V4SF,V4SF,SF,DI,DI\")])\n+  [(set_attr \"isa\" \"noavx,avx,noavx,avx,base,base,base\")\n+   (set_attr \"type\" \"sselog,sselog,sselog,sselog,ssemov,mmxcvt,mmxmov\")\n+   (set_attr \"prefix_data16\" \"*,*,1,*,*,*,*\")\n+   (set_attr \"prefix_extra\" \"*,*,1,1,*,*,*\")\n+   (set_attr \"length_immediate\" \"*,*,1,1,*,*,*\")\n+   (set_attr \"prefix\" \"orig,vex,orig,vex,maybe_vex,orig,orig\")\n+   (set_attr \"mode\" \"V4SF,V4SF,V4SF,V4SF,SF,DI,DI\")])\n \n ;; ??? In theory we can match memory for the MMX alternative, but allowing\n ;; nonimmediate_operand for operand 2 and *not* allowing memory for the SSE\n@@ -3567,30 +3436,21 @@\n   [(set_attr \"type\" \"sselog,ssemov,mmxcvt,mmxmov\")\n    (set_attr \"mode\" \"V4SF,SF,DI,DI\")])\n \n-(define_insn \"*vec_concatv4sf_avx\"\n-  [(set (match_operand:V4SF 0 \"register_operand\"   \"=x,x\")\n-\t(vec_concat:V4SF\n-\t  (match_operand:V2SF 1 \"register_operand\" \" x,x\")\n-\t  (match_operand:V2SF 2 \"nonimmediate_operand\" \" x,m\")))]\n-  \"TARGET_AVX\"\n-  \"@\n-   vmovlhps\\t{%2, %1, %0|%0, %1, %2}\n-   vmovhps\\t{%2, %1, %0|%0, %1, %2}\"\n-  [(set_attr \"type\" \"ssemov\")\n-   (set_attr \"prefix\" \"vex\")\n-   (set_attr \"mode\" \"V4SF,V2SF\")])\n-\n (define_insn \"*vec_concatv4sf_sse\"\n-  [(set (match_operand:V4SF 0 \"register_operand\"   \"=x,x\")\n+  [(set (match_operand:V4SF 0 \"register_operand\"       \"=x,x,x,x\")\n \t(vec_concat:V4SF\n-\t  (match_operand:V2SF 1 \"register_operand\" \" 0,0\")\n-\t  (match_operand:V2SF 2 \"nonimmediate_operand\" \" x,m\")))]\n+\t  (match_operand:V2SF 1 \"register_operand\"     \" 0,x,0,x\")\n+\t  (match_operand:V2SF 2 \"nonimmediate_operand\" \" x,x,m,m\")))]\n   \"TARGET_SSE\"\n   \"@\n    movlhps\\t{%2, %0|%0, %2}\n-   movhps\\t{%2, %0|%0, %2}\"\n-  [(set_attr \"type\" \"ssemov\")\n-   (set_attr \"mode\" \"V4SF,V2SF\")])\n+   vmovlhps\\t{%2, %1, %0|%0, %1, %2}\n+   movhps\\t{%2, %0|%0, %2}\n+   vmovhps\\t{%2, %1, %0|%0, %1, %2}\"\n+  [(set_attr \"isa\" \"noavx,avx,noavx,avx\")\n+   (set_attr \"type\" \"ssemov\")\n+   (set_attr \"prefix\" \"orig,vex,orig,vex\")\n+   (set_attr \"mode\" \"V4SF,V4SF,V2SF,V2SF\")])\n \n (define_expand \"vec_init<mode>\"\n   [(match_operand:SSEMODE 0 \"register_operand\" \"\")\n@@ -3601,145 +3461,127 @@\n   DONE;\n })\n \n-(define_insn \"*vec_set<mode>_0_avx\"\n-  [(set (match_operand:SSEMODE4S 0 \"nonimmediate_operand\"  \"=x,x, x,x,  x,m\")\n-\t(vec_merge:SSEMODE4S\n-\t  (vec_duplicate:SSEMODE4S\n-\t    (match_operand:<ssescalarmode> 2\n-\t      \"general_operand\"                            \" x,m,*r,x,*rm,x*rfF\"))\n-\t  (match_operand:SSEMODE4S 1 \"vector_move_operand\" \" C,C, C,x,  x,0\")\n-\t  (const_int 1)))]\n-  \"TARGET_AVX\"\n-  \"@\n-   vinsertps\\t{$0xe, %2, %2, %0|%0, %2, %2, 0xe}\n-   vmov<ssescalarmodesuffix>\\t{%2, %0|%0, %2}\n-   vmovd\\t{%2, %0|%0, %2}\n-   vmovss\\t{%2, %1, %0|%0, %1, %2}\n-   vpinsrd\\t{$0, %2, %1, %0|%0, %1, %2, 0}\n-   #\"\n-  [(set_attr \"type\" \"sselog,ssemov,ssemov,ssemov,sselog,*\")\n-   (set_attr \"prefix_extra\" \"*,*,*,*,1,*\")\n-   (set_attr \"length_immediate\" \"*,*,*,*,1,*\")\n-   (set_attr \"prefix\" \"vex\")\n-   (set_attr \"mode\" \"SF,<ssescalarmode>,SI,SF,TI,*\")])\n-\n+;; Avoid combining registers from different units in a single alternative,\n+;; see comment above inline_secondary_memory_needed function in i386.c\n (define_insn \"*vec_set<mode>_0_sse4_1\"\n-  [(set (match_operand:SSEMODE4S 0 \"nonimmediate_operand\"  \"=x,x, x,x,  x,m\")\n+  [(set (match_operand:SSEMODE4S 0 \"nonimmediate_operand\"\n+\t  \"=x,x,x ,x,x,x  ,x  ,m,m,m\")\n \t(vec_merge:SSEMODE4S\n \t  (vec_duplicate:SSEMODE4S\n-\t    (match_operand:<ssescalarmode> 2\n-\t      \"general_operand\"                            \" x,m,*r,x,*rm,*rfF\"))\n-\t  (match_operand:SSEMODE4S 1 \"vector_move_operand\" \" C,C, C,0,  0,0\")\n+\t    (match_operand:<ssescalarmode> 2 \"general_operand\"\n+\t  \" x,m,*r,x,x,*rm,*rm,x,*r,fF\"))\n+\t  (match_operand:SSEMODE4S 1 \"vector_move_operand\"\n+\t  \" C,C,C ,0,x,0  ,x  ,0,0 ,0\")\n \t  (const_int 1)))]\n   \"TARGET_SSE4_1\"\n   \"@\n-   insertps\\t{$0xe, %2, %0|%0, %2, 0xe}\n-   mov<ssescalarmodesuffix>\\t{%2, %0|%0, %2}\n-   movd\\t{%2, %0|%0, %2}\n+   %vinsertps\\t{$0xe, %d2, %0|%0, %d2, 0xe}\n+   %vmov<ssescalarmodesuffix>\\t{%2, %0|%0, %2}\n+   %vmovd\\t{%2, %0|%0, %2}\n    movss\\t{%2, %0|%0, %2}\n+   vmovss\\t{%2, %1, %0|%0, %1, %2}\n    pinsrd\\t{$0, %2, %0|%0, %2, 0}\n+   vpinsrd\\t{$0, %2, %1, %0|%0, %1, %2, 0}\n+   #\n+   #\n    #\"\n-  [(set_attr \"type\" \"sselog,ssemov,ssemov,ssemov,sselog,*\")\n-   (set_attr \"prefix_extra\" \"*,*,*,*,1,*\")\n-   (set_attr \"length_immediate\" \"*,*,*,*,1,*\")\n-   (set_attr \"mode\" \"SF,<ssescalarmode>,SI,SF,TI,*\")])\n+  [(set_attr \"isa\" \"base,base,base,noavx,avx,noavx,avx,base,base,base\")\n+   (set_attr \"type\" \"sselog,ssemov,ssemov,ssemov,ssemov,sselog,sselog,*,*,*\")\n+   (set_attr \"prefix_extra\" \"*,*,*,*,*,1,1,*,*,*\")\n+   (set_attr \"length_immediate\" \"*,*,*,*,*,1,1,*,*,*\")\n+   (set_attr \"prefix\" \"maybe_vex,maybe_vex,maybe_vex,orig,vex,orig,vex,*,*,*\")\n+   (set_attr \"mode\" \"SF,<ssescalarmode>,SI,SF,SF,TI,TI,*,*,*\")])\n \n+;; Avoid combining registers from different units in a single alternative,\n+;; see comment above inline_secondary_memory_needed function in i386.c\n (define_insn \"*vec_set<mode>_0_sse2\"\n-  [(set (match_operand:SSEMODE4S 0 \"nonimmediate_operand\"  \"=x, x,x,m\")\n+  [(set (match_operand:SSEMODE4S 0 \"nonimmediate_operand\"\n+\t  \"=x,x ,x,m,m ,m\")\n \t(vec_merge:SSEMODE4S\n \t  (vec_duplicate:SSEMODE4S\n-\t    (match_operand:<ssescalarmode> 2\n-\t      \"general_operand\"                            \" m,*r,x,x*rfF\"))\n-\t  (match_operand:SSEMODE4S 1 \"vector_move_operand\" \" C, C,0,0\")\n+\t    (match_operand:<ssescalarmode> 2 \"general_operand\"\n+\t  \" m,*r,x,x,*r,fF\"))\n+\t  (match_operand:SSEMODE4S 1 \"vector_move_operand\"\n+\t  \" C, C,0,0,0 ,0\")\n \t  (const_int 1)))]\n   \"TARGET_SSE2\"\n   \"@\n    mov<ssescalarmodesuffix>\\t{%2, %0|%0, %2}\n    movd\\t{%2, %0|%0, %2}\n    movss\\t{%2, %0|%0, %2}\n+   #\n+   #\n    #\"\n   [(set_attr \"type\" \"ssemov\")\n-   (set_attr \"mode\" \"<ssescalarmode>,SI,SF,*\")])\n+   (set_attr \"mode\" \"<ssescalarmode>,SI,SF,*,*,*\")])\n \n+;; Avoid combining registers from different units in a single alternative,\n+;; see comment above inline_secondary_memory_needed function in i386.c\n (define_insn \"vec_set<mode>_0\"\n-  [(set (match_operand:SSEMODE4S 0 \"nonimmediate_operand\"  \"=x,x,m\")\n+  [(set (match_operand:SSEMODE4S 0 \"nonimmediate_operand\"\n+\t  \"=x,x,m,m ,m\")\n \t(vec_merge:SSEMODE4S\n \t  (vec_duplicate:SSEMODE4S\n-\t    (match_operand:<ssescalarmode> 2\n-\t      \"general_operand\"                            \" m,x,x*rfF\"))\n-\t  (match_operand:SSEMODE4S 1 \"vector_move_operand\" \" C,0,0\")\n+\t    (match_operand:<ssescalarmode> 2 \"general_operand\"\n+\t  \" m,x,x,*r,fF\"))\n+\t  (match_operand:SSEMODE4S 1 \"vector_move_operand\"\n+\t  \" C,0,0,0 ,0\")\n \t  (const_int 1)))]\n   \"TARGET_SSE\"\n   \"@\n    movss\\t{%2, %0|%0, %2}\n    movss\\t{%2, %0|%0, %2}\n+   #\n+   #\n    #\"\n   [(set_attr \"type\" \"ssemov\")\n-   (set_attr \"mode\" \"SF,SF,*\")])\n+   (set_attr \"mode\" \"SF,SF,*,*,*\")])\n \n ;; A subset is vec_setv4sf.\n-(define_insn \"*vec_setv4sf_avx\"\n-  [(set (match_operand:V4SF 0 \"register_operand\" \"=x\")\n-\t(vec_merge:V4SF\n-\t  (vec_duplicate:V4SF\n-\t    (match_operand:SF 2 \"nonimmediate_operand\" \"xm\"))\n-\t  (match_operand:V4SF 1 \"register_operand\" \"x\")\n-\t  (match_operand:SI 3 \"const_pow2_1_to_8_operand\" \"n\")))]\n-  \"TARGET_AVX\"\n-{\n-  operands[3] = GEN_INT (exact_log2 (INTVAL (operands[3])) << 4);\n-  return \"vinsertps\\t{%3, %2, %1, %0|%0, %1, %2, %3}\";\n-}\n-  [(set_attr \"type\" \"sselog\")\n-   (set_attr \"prefix_extra\" \"1\")\n-   (set_attr \"length_immediate\" \"1\")\n-   (set_attr \"prefix\" \"vex\")\n-   (set_attr \"mode\" \"V4SF\")])\n-\n (define_insn \"*vec_setv4sf_sse4_1\"\n-  [(set (match_operand:V4SF 0 \"register_operand\" \"=x\")\n+  [(set (match_operand:V4SF 0 \"register_operand\" \"=x,x\")\n \t(vec_merge:V4SF\n \t  (vec_duplicate:V4SF\n-\t    (match_operand:SF 2 \"nonimmediate_operand\" \"xm\"))\n-\t  (match_operand:V4SF 1 \"register_operand\" \"0\")\n-\t  (match_operand:SI 3 \"const_pow2_1_to_8_operand\" \"n\")))]\n+\t    (match_operand:SF 2 \"nonimmediate_operand\" \"xm,xm\"))\n+\t  (match_operand:V4SF 1 \"register_operand\" \"0,x\")\n+\t  (match_operand:SI 3 \"const_pow2_1_to_8_operand\" \"n,n\")))]\n   \"TARGET_SSE4_1\"\n {\n   operands[3] = GEN_INT (exact_log2 (INTVAL (operands[3])) << 4);\n-  return \"insertps\\t{%3, %2, %0|%0, %2, %3}\";\n+  switch (which_alternative)\n+    {\n+    case 0:\n+      return \"insertps\\t{%3, %2, %0|%0, %2, %3}\";\n+    case 1:\n+      return \"vinsertps\\t{%3, %2, %1, %0|%0, %1, %2, %3}\";\n+    default:\n+      gcc_unreachable ();\n+    }\n }\n-  [(set_attr \"type\" \"sselog\")\n-   (set_attr \"prefix_data16\" \"1\")\n-   (set_attr \"prefix_extra\" \"1\")\n-   (set_attr \"length_immediate\" \"1\")\n-   (set_attr \"mode\" \"V4SF\")])\n-\n-(define_insn \"*avx_insertps\"\n-  [(set (match_operand:V4SF 0 \"register_operand\" \"=x\")\n-\t(unspec:V4SF [(match_operand:V4SF 2 \"nonimmediate_operand\" \"xm\")\n-\t\t      (match_operand:V4SF 1 \"register_operand\" \"x\")\n-\t\t      (match_operand:SI 3 \"const_0_to_255_operand\" \"n\")]\n-\t\t     UNSPEC_INSERTPS))]\n-  \"TARGET_AVX\"\n-  \"vinsertps\\t{%3, %2, %1, %0|%0, %1, %2, %3}\";\n-  [(set_attr \"type\" \"sselog\")\n-   (set_attr \"prefix\" \"vex\")\n+  [(set_attr \"isa\" \"noavx,avx\")\n+   (set_attr \"type\" \"sselog\")\n+   (set_attr \"prefix_data16\" \"1,*\")\n    (set_attr \"prefix_extra\" \"1\")\n    (set_attr \"length_immediate\" \"1\")\n+   (set_attr \"prefix\" \"orig,vex\")\n    (set_attr \"mode\" \"V4SF\")])\n \n (define_insn \"sse4_1_insertps\"\n-  [(set (match_operand:V4SF 0 \"register_operand\" \"=x\")\n-\t(unspec:V4SF [(match_operand:V4SF 2 \"register_operand\" \"x\")\n-\t\t      (match_operand:V4SF 1 \"register_operand\" \"0\")\n-\t\t      (match_operand:SI 3 \"const_0_to_255_operand\" \"n\")]\n+  [(set (match_operand:V4SF 0 \"register_operand\" \"=x,x\")\n+\t(unspec:V4SF [(match_operand:V4SF 2 \"nonimmediate_operand\" \"xm,xm\")\n+\t\t      (match_operand:V4SF 1 \"register_operand\" \"0,x\")\n+\t\t      (match_operand:SI 3 \"const_0_to_255_operand\" \"n,n\")]\n \t\t     UNSPEC_INSERTPS))]\n   \"TARGET_SSE4_1\"\n-  \"insertps\\t{%3, %2, %0|%0, %2, %3}\";\n-  [(set_attr \"type\" \"sselog\")\n-   (set_attr \"prefix_data16\" \"1\")\n+  \"@\n+   insertps\\t{%3, %2, %0|%0, %2, %3}\n+   vinsertps\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n+  [(set_attr \"isa\" \"noavx,avx\")\n+   (set_attr \"type\" \"sselog\")\n+   (set_attr \"prefix_data16\" \"1,*\")\n    (set_attr \"prefix_extra\" \"1\")\n    (set_attr \"length_immediate\" \"1\")\n+   (set_attr \"prefix\" \"orig,vex\")\n    (set_attr \"mode\" \"V4SF\")])\n \n (define_split\n@@ -4070,41 +3912,27 @@\n     operands[2] = force_reg (V2DFmode, operands[2]);\n })\n \n-(define_insn \"*avx_interleave_highv2df\"\n-  [(set (match_operand:V2DF 0 \"nonimmediate_operand\"     \"=x,x,x,m\")\n-\t(vec_select:V2DF\n-\t  (vec_concat:V4DF\n-\t    (match_operand:V2DF 1 \"nonimmediate_operand\" \" x,o,o,x\")\n-\t    (match_operand:V2DF 2 \"nonimmediate_operand\" \" x,1,x,0\"))\n-\t  (parallel [(const_int 1)\n-\t\t     (const_int 3)])))]\n-  \"TARGET_AVX && ix86_vec_interleave_v2df_operator_ok (operands, 1)\"\n-  \"@\n-   vunpckhpd\\t{%2, %1, %0|%0, %1, %2}\n-   vmovddup\\t{%H1, %0|%0, %H1}\n-   vmovlpd\\t{%H1, %2, %0|%0, %2, %H1}\n-   vmovhpd\\t{%1, %0|%0, %1}\"\n-  [(set_attr \"type\" \"sselog,sselog,ssemov,ssemov\")\n-   (set_attr \"prefix\" \"vex\")\n-   (set_attr \"mode\" \"V2DF,V2DF,V1DF,V1DF\")])\n-\n (define_insn \"*sse3_interleave_highv2df\"\n-  [(set (match_operand:V2DF 0 \"nonimmediate_operand\"     \"=x,x,x,m\")\n+  [(set (match_operand:V2DF 0 \"nonimmediate_operand\"     \"=x,x,x,x,x,m\")\n \t(vec_select:V2DF\n \t  (vec_concat:V4DF\n-\t    (match_operand:V2DF 1 \"nonimmediate_operand\" \" 0,o,o,x\")\n-\t    (match_operand:V2DF 2 \"nonimmediate_operand\" \" x,1,0,0\"))\n+\t    (match_operand:V2DF 1 \"nonimmediate_operand\" \" 0,x,o,o,o,x\")\n+\t    (match_operand:V2DF 2 \"nonimmediate_operand\" \" x,x,1,0,x,0\"))\n \t  (parallel [(const_int 1)\n \t\t     (const_int 3)])))]\n   \"TARGET_SSE3 && ix86_vec_interleave_v2df_operator_ok (operands, 1)\"\n   \"@\n    unpckhpd\\t{%2, %0|%0, %2}\n-   movddup\\t{%H1, %0|%0, %H1}\n+   vunpckhpd\\t{%2, %1, %0|%0, %1, %2}\n+   %vmovddup\\t{%H1, %0|%0, %H1}\n    movlpd\\t{%H1, %0|%0, %H1}\n-   movhpd\\t{%1, %0|%0, %1}\"\n-  [(set_attr \"type\" \"sselog,sselog,ssemov,ssemov\")\n-   (set_attr \"prefix_data16\" \"*,*,1,1\")\n-   (set_attr \"mode\" \"V2DF,V2DF,V1DF,V1DF\")])\n+   vmovlpd\\t{%H1, %2, %0|%0, %2, %H1}\n+   %vmovhpd\\t{%1, %0|%0, %1}\"\n+  [(set_attr \"isa\" \"noavx,avx,base,noavx,avx,base\")\n+  (set_attr \"type\" \"sselog,sselog,sselog,ssemov,ssemov,ssemov\")\n+   (set_attr \"prefix_data16\" \"*,*,*,1,*,1\")\n+   (set_attr \"prefix\" \"orig,vex,maybe_vex,orig,vex,maybe_vex\")\n+   (set_attr \"mode\" \"V2DF,V2DF,V2DF,V1DF,V1DF,V1DF\")])\n \n (define_insn \"*sse2_interleave_highv2df\"\n   [(set (match_operand:V2DF 0 \"nonimmediate_operand\"     \"=x,x,m\")\n@@ -4203,41 +4031,27 @@\n     operands[1] = force_reg (V2DFmode, operands[1]);\n })\n \n-(define_insn \"*avx_interleave_lowv2df\"\n-  [(set (match_operand:V2DF 0 \"nonimmediate_operand\"     \"=x,x,x,o\")\n-\t(vec_select:V2DF\n-\t  (vec_concat:V4DF\n-\t    (match_operand:V2DF 1 \"nonimmediate_operand\" \" x,m,x,0\")\n-\t    (match_operand:V2DF 2 \"nonimmediate_operand\" \" x,1,m,x\"))\n-\t  (parallel [(const_int 0)\n-\t\t     (const_int 2)])))]\n-  \"TARGET_AVX && ix86_vec_interleave_v2df_operator_ok (operands, 0)\"\n-  \"@\n-   vunpcklpd\\t{%2, %1, %0|%0, %1, %2}\n-   vmovddup\\t{%1, %0|%0, %1}\n-   vmovhpd\\t{%2, %1, %0|%0, %1, %2}\n-   vmovlpd\\t{%2, %H0|%H0, %2}\"\n-  [(set_attr \"type\" \"sselog,sselog,ssemov,ssemov\")\n-   (set_attr \"prefix\" \"vex\")\n-   (set_attr \"mode\" \"V2DF,V2DF,V1DF,V1DF\")])\n-\n (define_insn \"*sse3_interleave_lowv2df\"\n-  [(set (match_operand:V2DF 0 \"nonimmediate_operand\"     \"=x,x,x,o\")\n+  [(set (match_operand:V2DF 0 \"nonimmediate_operand\"     \"=x,x,x,x,x,o\")\n \t(vec_select:V2DF\n \t  (vec_concat:V4DF\n-\t    (match_operand:V2DF 1 \"nonimmediate_operand\" \" 0,m,0,0\")\n-\t    (match_operand:V2DF 2 \"nonimmediate_operand\" \" x,1,m,x\"))\n+\t    (match_operand:V2DF 1 \"nonimmediate_operand\" \" 0,x,m,0,x,0\")\n+\t    (match_operand:V2DF 2 \"nonimmediate_operand\" \" x,x,1,m,m,x\"))\n \t  (parallel [(const_int 0)\n \t\t     (const_int 2)])))]\n   \"TARGET_SSE3 && ix86_vec_interleave_v2df_operator_ok (operands, 0)\"\n   \"@\n    unpcklpd\\t{%2, %0|%0, %2}\n-   movddup\\t{%1, %0|%0, %1}\n+   vunpcklpd\\t{%2, %1, %0|%0, %1, %2}\n+   %vmovddup\\t{%1, %0|%0, %1}\n    movhpd\\t{%2, %0|%0, %2}\n-   movlpd\\t{%2, %H0|%H0, %2}\"\n-  [(set_attr \"type\" \"sselog,sselog,ssemov,ssemov\")\n-   (set_attr \"prefix_data16\" \"*,*,1,1\")\n-   (set_attr \"mode\" \"V2DF,V2DF,V1DF,V1DF\")])\n+   vmovhpd\\t{%2, %1, %0|%0, %1, %2}\n+   %vmovlpd\\t{%2, %H0|%H0, %2}\"\n+  [(set_attr \"isa\" \"noavx,avx,base,noavx,avx,base\")\n+   (set_attr \"type\" \"sselog,sselog,sselog,ssemov,ssemov,ssemov\")\n+   (set_attr \"prefix_data16\" \"*,*,*,1,*,1\")\n+   (set_attr \"prefix\" \"orig,vex,maybe_vex,orig,vex,maybe_vex\")\n+   (set_attr \"mode\" \"V2DF,V2DF,V2DF,V1DF,V1DF,V1DF\")])\n \n (define_insn \"*sse2_interleave_lowv2df\"\n   [(set (match_operand:V2DF 0 \"nonimmediate_operand\"     \"=x,x,o\")\n@@ -4364,90 +4178,49 @@\n })\n \n ;; punpcklqdq and punpckhqdq are shorter than shufpd.\n-(define_insn \"*avx_interleave_highv2di\"\n-  [(set (match_operand:V2DI 0 \"register_operand\" \"=x\")\n-\t(vec_select:V2DI\n-\t  (vec_concat:V4DI\n-\t    (match_operand:V2DI 1 \"register_operand\" \"x\")\n-\t    (match_operand:V2DI 2 \"nonimmediate_operand\" \"xm\"))\n-\t  (parallel [(const_int 1)\n-\t\t     (const_int 3)])))]\n-  \"TARGET_AVX\"\n-  \"vpunpckhqdq\\t{%2, %1, %0|%0, %1, %2}\"\n-  [(set_attr \"type\" \"sselog\")\n-   (set_attr \"prefix\" \"vex\")\n-   (set_attr \"mode\" \"TI\")])\n \n (define_insn \"vec_interleave_highv2di\"\n-  [(set (match_operand:V2DI 0 \"register_operand\" \"=x\")\n+  [(set (match_operand:V2DI 0 \"register_operand\" \"=x,x\")\n \t(vec_select:V2DI\n \t  (vec_concat:V4DI\n-\t    (match_operand:V2DI 1 \"register_operand\" \"0\")\n-\t    (match_operand:V2DI 2 \"nonimmediate_operand\" \"xm\"))\n+\t    (match_operand:V2DI 1 \"register_operand\" \"0,x\")\n+\t    (match_operand:V2DI 2 \"nonimmediate_operand\" \"xm,xm\"))\n \t  (parallel [(const_int 1)\n \t\t     (const_int 3)])))]\n   \"TARGET_SSE2\"\n-  \"punpckhqdq\\t{%2, %0|%0, %2}\"\n-  [(set_attr \"type\" \"sselog\")\n-   (set_attr \"prefix_data16\" \"1\")\n-   (set_attr \"mode\" \"TI\")])\n-\n-(define_insn \"*avx_interleave_lowv2di\"\n-  [(set (match_operand:V2DI 0 \"register_operand\" \"=x\")\n-\t(vec_select:V2DI\n-\t  (vec_concat:V4DI\n-\t    (match_operand:V2DI 1 \"register_operand\" \"x\")\n-\t    (match_operand:V2DI 2 \"nonimmediate_operand\" \"xm\"))\n-\t  (parallel [(const_int 0)\n-\t\t     (const_int 2)])))]\n-  \"TARGET_AVX\"\n-  \"vpunpcklqdq\\t{%2, %1, %0|%0, %1, %2}\"\n-  [(set_attr \"type\" \"sselog\")\n-   (set_attr \"prefix\" \"vex\")\n+  \"@\n+   punpckhqdq\\t{%2, %0|%0, %2}\n+   vpunpckhqdq\\t{%2, %1, %0|%0, %1, %2}\"\n+  [(set_attr \"isa\" \"noavx,avx\")\n+   (set_attr \"type\" \"sselog\")\n+   (set_attr \"prefix_data16\" \"1,*\")\n+   (set_attr \"prefix\" \"orig,vex\")\n    (set_attr \"mode\" \"TI\")])\n \n (define_insn \"vec_interleave_lowv2di\"\n-  [(set (match_operand:V2DI 0 \"register_operand\" \"=x\")\n+  [(set (match_operand:V2DI 0 \"register_operand\" \"=x,x\")\n \t(vec_select:V2DI\n \t  (vec_concat:V4DI\n-\t    (match_operand:V2DI 1 \"register_operand\" \"0\")\n-\t    (match_operand:V2DI 2 \"nonimmediate_operand\" \"xm\"))\n+\t    (match_operand:V2DI 1 \"register_operand\" \"0,x\")\n+\t    (match_operand:V2DI 2 \"nonimmediate_operand\" \"xm,xm\"))\n \t  (parallel [(const_int 0)\n \t\t     (const_int 2)])))]\n   \"TARGET_SSE2\"\n-  \"punpcklqdq\\t{%2, %0|%0, %2}\"\n-  [(set_attr \"type\" \"sselog\")\n-   (set_attr \"prefix_data16\" \"1\")\n+  \"@\n+   punpcklqdq\\t{%2, %0|%0, %2}\n+   vpunpcklqdq\\t{%2, %1, %0|%0, %1, %2}\"\n+  [(set_attr \"isa\" \"noavx,avx\")\n+   (set_attr \"type\" \"sselog\")\n+   (set_attr \"prefix_data16\" \"1,*\")\n+   (set_attr \"prefix\" \"orig,vex\")\n    (set_attr \"mode\" \"TI\")])\n \n-(define_insn \"*avx_shufpd_<mode>\"\n-  [(set (match_operand:SSEMODE2D 0 \"register_operand\" \"=x\")\n-\t(vec_select:SSEMODE2D\n-\t  (vec_concat:<ssedoublesizemode>\n-\t    (match_operand:SSEMODE2D 1 \"register_operand\" \"x\")\n-\t    (match_operand:SSEMODE2D 2 \"nonimmediate_operand\" \"xm\"))\n-\t  (parallel [(match_operand 3 \"const_0_to_1_operand\" \"\")\n-\t\t     (match_operand 4 \"const_2_to_3_operand\" \"\")])))]\n-  \"TARGET_AVX\"\n-{\n-  int mask;\n-  mask = INTVAL (operands[3]);\n-  mask |= (INTVAL (operands[4]) - 2) << 1;\n-  operands[3] = GEN_INT (mask);\n-\n-  return \"vshufpd\\t{%3, %2, %1, %0|%0, %1, %2, %3}\";\n-}\n-  [(set_attr \"type\" \"sselog\")\n-   (set_attr \"length_immediate\" \"1\")\n-   (set_attr \"prefix\" \"vex\")\n-   (set_attr \"mode\" \"V2DF\")])\n-\n (define_insn \"sse2_shufpd_<mode>\"\n-  [(set (match_operand:SSEMODE2D 0 \"register_operand\" \"=x\")\n+  [(set (match_operand:SSEMODE2D 0 \"register_operand\" \"=x,x\")\n \t(vec_select:SSEMODE2D\n \t  (vec_concat:<ssedoublesizemode>\n-\t    (match_operand:SSEMODE2D 1 \"register_operand\" \"0\")\n-\t    (match_operand:SSEMODE2D 2 \"nonimmediate_operand\" \"xm\"))\n+\t    (match_operand:SSEMODE2D 1 \"register_operand\" \"0,x\")\n+\t    (match_operand:SSEMODE2D 2 \"nonimmediate_operand\" \"xm,xm\"))\n \t  (parallel [(match_operand 3 \"const_0_to_1_operand\" \"\")\n \t\t     (match_operand 4 \"const_2_to_3_operand\" \"\")])))]\n   \"TARGET_SSE2\"\n@@ -4457,45 +4230,47 @@\n   mask |= (INTVAL (operands[4]) - 2) << 1;\n   operands[3] = GEN_INT (mask);\n \n-  return \"shufpd\\t{%3, %2, %0|%0, %2, %3}\";\n+  switch (which_alternative)\n+    {\n+    case 0:\n+      return \"shufpd\\t{%3, %2, %0|%0, %2, %3}\";\n+    case 1:\n+      return \"vshufpd\\t{%3, %2, %1, %0|%0, %1, %2, %3}\";\n+    default:\n+      gcc_unreachable ();\n+    }\n }\n-  [(set_attr \"type\" \"sselog\")\n+  [(set_attr \"isa\" \"noavx,avx\")\n+   (set_attr \"type\" \"sselog\")\n    (set_attr \"length_immediate\" \"1\")\n+   (set_attr \"prefix\" \"orig,vex\")\n    (set_attr \"mode\" \"V2DF\")])\n \n ;; Avoid combining registers from different units in a single alternative,\n ;; see comment above inline_secondary_memory_needed function in i386.c\n-(define_insn \"*avx_storehpd\"\n-  [(set (match_operand:DF 0 \"nonimmediate_operand\"     \"=m,x,x,*f,r\")\n-\t(vec_select:DF\n-\t  (match_operand:V2DF 1 \"nonimmediate_operand\" \" x,x,o,o,o\")\n-\t  (parallel [(const_int 1)])))]\n-  \"TARGET_AVX && !(MEM_P (operands[0]) && MEM_P (operands[1]))\"\n-  \"@\n-   vmovhpd\\t{%1, %0|%0, %1}\n-   vunpckhpd\\t{%1, %1, %0|%0, %1, %1}\n-   #\n-   #\n-   #\"\n-  [(set_attr \"type\" \"ssemov,sselog1,ssemov,fmov,imov\")\n-   (set_attr \"prefix\" \"vex\")\n-   (set_attr \"mode\" \"V1DF,V2DF,DF,DF,DF\")])\n-\n (define_insn \"sse2_storehpd\"\n-  [(set (match_operand:DF 0 \"nonimmediate_operand\"     \"=m,x,x,*f,r\")\n+  [(set (match_operand:DF 0 \"nonimmediate_operand\"     \"=m,x,x,x,*f,r\")\n \t(vec_select:DF\n-\t  (match_operand:V2DF 1 \"nonimmediate_operand\" \" x,0,o,o,o\")\n+\t  (match_operand:V2DF 1 \"nonimmediate_operand\" \" x,0,x,o,o,o\")\n \t  (parallel [(const_int 1)])))]\n   \"TARGET_SSE2 && !(MEM_P (operands[0]) && MEM_P (operands[1]))\"\n   \"@\n-   movhpd\\t{%1, %0|%0, %1}\n+   %vmovhpd\\t{%1, %0|%0, %1}\n    unpckhpd\\t%0, %0\n+   vunpckhpd\\t{%d1, %0|%0, %d1}\n    #\n    #\n    #\"\n-  [(set_attr \"type\" \"ssemov,sselog1,ssemov,fmov,imov\")\n-   (set_attr \"prefix_data16\" \"1,*,*,*,*\")\n-   (set_attr \"mode\" \"V1DF,V2DF,DF,DF,DF\")])\n+  [(set_attr \"isa\" \"base,noavx,avx,base,base,base\")\n+   (set_attr \"type\" \"ssemov,sselog1,sselog1,ssemov,fmov,imov\")\n+   (set (attr \"prefix_data16\")\n+     (if_then_else\n+       (and (eq_attr \"alternative\" \"0\")\n+\t    (eq (symbol_ref \"TARGET_AVX\") (const_int 0)))\n+       (const_string \"1\")\n+       (const_string \"*\")))\n+   (set_attr \"prefix\" \"maybe_vex,orig,vex,*,*,*\")\n+   (set_attr \"mode\" \"V1DF,V1DF,V2DF,DF,DF,DF\")])\n \n (define_split\n   [(set (match_operand:DF 0 \"register_operand\" \"\")\n@@ -4564,43 +4339,32 @@\n \n ;; Avoid combining registers from different units in a single alternative,\n ;; see comment above inline_secondary_memory_needed function in i386.c\n-(define_insn \"*avx_loadhpd\"\n-  [(set (match_operand:V2DF 0 \"nonimmediate_operand\"     \"=x,x,o,o,o\")\n-\t(vec_concat:V2DF\n-\t  (vec_select:DF\n-\t    (match_operand:V2DF 1 \"nonimmediate_operand\" \" x,x,0,0,0\")\n-\t    (parallel [(const_int 0)]))\n-\t  (match_operand:DF 2 \"nonimmediate_operand\"     \" m,x,x,*f,r\")))]\n-  \"TARGET_AVX && !(MEM_P (operands[1]) && MEM_P (operands[2]))\"\n-  \"@\n-   vmovhpd\\t{%2, %1, %0|%0, %1, %2}\n-   vunpcklpd\\t{%2, %1, %0|%0, %1, %2}\n-   #\n-   #\n-   #\"\n-  [(set_attr \"type\" \"ssemov,sselog,ssemov,fmov,imov\")\n-   (set_attr \"prefix\" \"vex\")\n-   (set_attr \"mode\" \"V1DF,V2DF,DF,DF,DF\")])\n-\n (define_insn \"sse2_loadhpd\"\n-  [(set (match_operand:V2DF 0 \"nonimmediate_operand\"     \"=x,x,x,o,o,o\")\n+  [(set (match_operand:V2DF 0 \"nonimmediate_operand\"\n+\t  \"=x,x,x,x,x,o,o ,o\")\n \t(vec_concat:V2DF\n \t  (vec_select:DF\n-\t    (match_operand:V2DF 1 \"nonimmediate_operand\" \" 0,0,x,0,0,0\")\n+\t    (match_operand:V2DF 1 \"nonimmediate_operand\"\n+\t  \" 0,x,0,x,x,0,0 ,0\")\n \t    (parallel [(const_int 0)]))\n-\t  (match_operand:DF 2 \"nonimmediate_operand\"     \" m,x,0,x,*f,r\")))]\n+\t  (match_operand:DF 2 \"nonimmediate_operand\"\n+\t  \" m,m,x,x,0,x,*f,r\")))]\n   \"TARGET_SSE2 && !(MEM_P (operands[1]) && MEM_P (operands[2]))\"\n   \"@\n    movhpd\\t{%2, %0|%0, %2}\n+   vmovhpd\\t{%2, %1, %0|%0, %1, %2}\n    unpcklpd\\t{%2, %0|%0, %2}\n+   vunpcklpd\\t{%2, %1, %0|%0, %1, %2}\n    shufpd\\t{$1, %1, %0|%0, %1, 1}\n    #\n    #\n    #\"\n-  [(set_attr \"type\" \"ssemov,sselog,sselog,ssemov,fmov,imov\")\n-   (set_attr \"prefix_data16\" \"1,*,*,*,*,*\")\n-   (set_attr \"length_immediate\" \"*,*,1,*,*,*\")\n-   (set_attr \"mode\" \"V1DF,V2DF,V2DF,DF,DF,DF\")])\n+  [(set_attr \"isa\" \"noavx,avx,noavx,avx,noavx,base,base,base\")\n+   (set_attr \"type\" \"ssemov,ssemov,sselog,sselog,sselog,ssemov,fmov,imov\")\n+   (set_attr \"prefix_data16\" \"1,*,*,*,*,*,*,*\")\n+   (set_attr \"length_immediate\" \"*,*,*,*,1,*,*,*\")\n+   (set_attr \"prefix\" \"orig,vex,orig,vex,orig,*,*,*\")\n+   (set_attr \"mode\" \"V1DF,V1DF,V2DF,V2DF,V2DF,DF,DF,DF\")])\n \n (define_split\n   [(set (match_operand:V2DF 0 \"memory_operand\" \"\")\n@@ -4633,47 +4397,35 @@\n \n ;; Avoid combining registers from different units in a single alternative,\n ;; see comment above inline_secondary_memory_needed function in i386.c\n-(define_insn \"*avx_loadlpd\"\n-  [(set (match_operand:V2DF 0 \"nonimmediate_operand\"    \"=x,x,x,x,m,m,m\")\n-\t(vec_concat:V2DF\n-\t  (match_operand:DF 2 \"nonimmediate_operand\"    \" m,m,x,x,x,*f,r\")\n-\t  (vec_select:DF\n-\t    (match_operand:V2DF 1 \"vector_move_operand\" \" C,x,x,o,0,0,0\")\n-\t    (parallel [(const_int 1)]))))]\n-  \"TARGET_AVX && !(MEM_P (operands[1]) && MEM_P (operands[2]))\"\n-  \"@\n-   vmovsd\\t{%2, %0|%0, %2}\n-   vmovlpd\\t{%2, %1, %0|%0, %1, %2}\n-   vmovsd\\t{%2, %1, %0|%0, %1, %2}\n-   vmovhpd\\t{%H1, %2, %0|%0, %2, %H1}\n-   #\n-   #\n-   #\"\n-  [(set_attr \"type\" \"ssemov,ssemov,ssemov,ssemov,ssemov,fmov,imov\")\n-   (set_attr \"prefix\" \"vex\")\n-   (set_attr \"mode\" \"DF,V1DF,V1DF,V1DF,DF,DF,DF\")])\n-\n (define_insn \"sse2_loadlpd\"\n-  [(set (match_operand:V2DF 0 \"nonimmediate_operand\"    \"=x,x,x,x,x,m,m,m\")\n+  [(set (match_operand:V2DF 0 \"nonimmediate_operand\"\n+\t  \"=x,x,x,x,x,x,x,x,m,m ,m\")\n \t(vec_concat:V2DF\n-\t  (match_operand:DF 2 \"nonimmediate_operand\"    \" m,m,x,0,0,x,*f,r\")\n+\t  (match_operand:DF 2 \"nonimmediate_operand\"\n+\t  \" m,m,m,x,x,0,0,x,x,*f,r\")\n \t  (vec_select:DF\n-\t    (match_operand:V2DF 1 \"vector_move_operand\" \" C,0,0,x,o,0,0,0\")\n+\t    (match_operand:V2DF 1 \"vector_move_operand\"\n+\t  \" C,0,x,0,x,x,o,o,0,0 ,0\")\n \t    (parallel [(const_int 1)]))))]\n   \"TARGET_SSE2 && !(MEM_P (operands[1]) && MEM_P (operands[2]))\"\n   \"@\n-   movsd\\t{%2, %0|%0, %2}\n+   %vmovsd\\t{%2, %0|%0, %2}\n    movlpd\\t{%2, %0|%0, %2}\n+   vmovlpd\\t{%2, %1, %0|%0, %1, %2}\n    movsd\\t{%2, %0|%0, %2}\n+   vmovsd\\t{%2, %1, %0|%0, %1, %2}\n    shufpd\\t{$2, %1, %0|%0, %1, 2}\n    movhpd\\t{%H1, %0|%0, %H1}\n+   vmovhpd\\t{%H1, %2, %0|%0, %2, %H1}\n    #\n    #\n    #\"\n-  [(set_attr \"type\" \"ssemov,ssemov,ssemov,sselog,ssemov,ssemov,fmov,imov\")\n-   (set_attr \"prefix_data16\" \"*,1,*,*,1,*,*,*\")\n-   (set_attr \"length_immediate\" \"*,*,*,1,*,*,*,*\")\n-   (set_attr \"mode\" \"DF,V1DF,V1DF,V2DF,V1DF,DF,DF,DF\")])\n+  [(set_attr \"isa\" \"base,noavx,avx,noavx,avx,noavx,noavx,avx,base,base,base\")\n+   (set_attr \"type\" \"ssemov,ssemov,ssemov,ssemov,ssemov,sselog,ssemov,ssemov,ssemov,fmov,imov\")\n+   (set_attr \"prefix_data16\" \"*,1,*,*,*,*,1,*,*,*,*\")\n+   (set_attr \"length_immediate\" \"*,*,*,*,*,1,*,*,*,*,*\")\n+   (set_attr \"prefix\" \"maybe_vex,orig,vex,orig,vex,orig,orig,vex,*,*,*\")\n+   (set_attr \"mode\" \"DF,V1DF,V1DF,V1DF,V1DF,V2DF,V1DF,V1DF,DF,DF,DF\")])\n \n (define_split\n   [(set (match_operand:V2DF 0 \"memory_operand\" \"\")\n@@ -4714,41 +4466,34 @@\n   [(set_attr \"type\" \"ssemov\")\n    (set_attr \"mode\" \"V2SF,V4SF,V2SF\")])\n \n-(define_insn \"*avx_movsd\"\n-  [(set (match_operand:V2DF 0 \"nonimmediate_operand\"   \"=x,x,m,x,o\")\n-\t(vec_merge:V2DF\n-\t  (match_operand:V2DF 2 \"nonimmediate_operand\" \" x,m,x,x,0\")\n-\t  (match_operand:V2DF 1 \"nonimmediate_operand\" \" x,x,0,o,x\")\n-\t  (const_int 1)))]\n-  \"TARGET_AVX\"\n-  \"@\n-   vmovsd\\t{%2, %1, %0|%0, %1, %2}\n-   vmovlpd\\t{%2, %1, %0|%0, %1, %2}\n-   vmovlpd\\t{%2, %0|%0, %2}\n-   vmovhps\\t{%H1, %2, %0|%0, %2, %H1}\n-   vmovhps\\t{%1, %H0|%H0, %1}\"\n-  [(set_attr \"type\" \"ssemov,ssemov,ssemov,ssemov,ssemov\")\n-   (set_attr \"prefix\" \"vex\")\n-   (set_attr \"mode\" \"DF,V1DF,V1DF,V1DF,V1DF\")])\n-\n (define_insn \"sse2_movsd\"\n-  [(set (match_operand:V2DF 0 \"nonimmediate_operand\"   \"=x,x,m,x,x,o\")\n+  [(set (match_operand:V2DF 0 \"nonimmediate_operand\"   \"=x,x,x,x,m,x,x,x,o\")\n \t(vec_merge:V2DF\n-\t  (match_operand:V2DF 2 \"nonimmediate_operand\" \" x,m,x,0,0,0\")\n-\t  (match_operand:V2DF 1 \"nonimmediate_operand\" \" 0,0,0,x,o,x\")\n+\t  (match_operand:V2DF 2 \"nonimmediate_operand\" \" x,x,m,m,x,0,0,x,0\")\n+\t  (match_operand:V2DF 1 \"nonimmediate_operand\" \" 0,x,0,x,0,x,o,o,x\")\n \t  (const_int 1)))]\n   \"TARGET_SSE2\"\n   \"@\n    movsd\\t{%2, %0|%0, %2}\n+   vmovsd\\t{%2, %1, %0|%0, %1, %2}\n    movlpd\\t{%2, %0|%0, %2}\n-   movlpd\\t{%2, %0|%0, %2}\n+   vmovlpd\\t{%2, %1, %0|%0, %1, %2}\n+   %vmovlpd\\t{%2, %0|%0, %2}\n    shufpd\\t{$2, %1, %0|%0, %1, 2}\n    movhps\\t{%H1, %0|%0, %H1}\n-   movhps\\t{%1, %H0|%H0, %1}\"\n-  [(set_attr \"type\" \"ssemov,ssemov,ssemov,sselog,ssemov,ssemov\")\n-   (set_attr \"prefix_data16\" \"*,1,1,*,*,*\")\n-   (set_attr \"length_immediate\" \"*,*,*,1,*,*\")\n-   (set_attr \"mode\" \"DF,V1DF,V1DF,V2DF,V1DF,V1DF\")])\n+   vmovhps\\t{%H1, %2, %0|%0, %2, %H1}\n+   %vmovhps\\t{%1, %H0|%H0, %1}\"\n+  [(set_attr \"isa\" \"noavx,avx,noavx,avx,base,noavx,noavx,avx,base\")\n+   (set_attr \"type\" \"ssemov,ssemov,ssemov,ssemov,ssemov,sselog,ssemov,ssemov,ssemov\")\n+   (set (attr \"prefix_data16\")\n+     (if_then_else\n+       (and (eq_attr \"alternative\" \"2,4\")\n+\t    (eq (symbol_ref \"TARGET_AVX\") (const_int 0)))\n+       (const_string \"1\")\n+       (const_string \"*\")))\n+   (set_attr \"length_immediate\" \"*,*,*,*,*,1,*,*,*\")\n+   (set_attr \"prefix\" \"orig,vex,orig,vex,maybe_vex,orig,orig,vex,maybe_vex\")\n+   (set_attr \"mode\" \"DF,DF,V1DF,V1DF,V1DF,V2DF,V1DF,V1DF,V1DF\")])\n \n (define_insn \"*vec_dupv2df_sse3\"\n   [(set (match_operand:V2DF 0 \"register_operand\" \"=x\")\n@@ -4780,35 +4525,25 @@\n    (set_attr \"prefix\" \"maybe_vex\")\n    (set_attr \"mode\" \"DF\")])\n \n-(define_insn \"*vec_concatv2df_avx\"\n-  [(set (match_operand:V2DF 0 \"register_operand\"     \"=x,x,x\")\n-\t(vec_concat:V2DF\n-\t  (match_operand:DF 1 \"nonimmediate_operand\" \" x,x,m\")\n-\t  (match_operand:DF 2 \"vector_move_operand\"  \" x,m,C\")))]\n-  \"TARGET_AVX\"\n-  \"@\n-   vunpcklpd\\t{%2, %1, %0|%0, %1, %2}\n-   vmovhpd\\t{%2, %1, %0|%0, %1, %2}\n-   vmovsd\\t{%1, %0|%0, %1}\"\n-  [(set_attr \"type\" \"ssemov\")\n-   (set_attr \"prefix\" \"vex\")\n-   (set_attr \"mode\" \"DF,V1DF,DF\")])\n-\n (define_insn \"*vec_concatv2df\"\n-  [(set (match_operand:V2DF 0 \"register_operand\"     \"=Y2,Y2,Y2,x,x\")\n+  [(set (match_operand:V2DF 0 \"register_operand\"     \"=Y2,x,Y2,x,Y2,x,x\")\n \t(vec_concat:V2DF\n-\t  (match_operand:DF 1 \"nonimmediate_operand\" \" 0 ,0 ,m ,0,0\")\n-\t  (match_operand:DF 2 \"vector_move_operand\"  \" Y2,m ,C ,x,m\")))]\n+\t  (match_operand:DF 1 \"nonimmediate_operand\" \" 0 ,x,0 ,x,m ,0,0\")\n+\t  (match_operand:DF 2 \"vector_move_operand\"  \" Y2,x,m ,m,C ,x,m\")))]\n   \"TARGET_SSE\"\n   \"@\n    unpcklpd\\t{%2, %0|%0, %2}\n+   vunpcklpd\\t{%2, %1, %0|%0, %1, %2}\n    movhpd\\t{%2, %0|%0, %2}\n-   movsd\\t{%1, %0|%0, %1}\n+   vmovhpd\\t{%2, %1, %0|%0, %1, %2}\n+   %vmovsd\\t{%1, %0|%0, %1}\n    movlhps\\t{%2, %0|%0, %2}\n    movhps\\t{%2, %0|%0, %2}\"\n-  [(set_attr \"type\" \"sselog,ssemov,ssemov,ssemov,ssemov\")\n-   (set_attr \"prefix_data16\" \"*,1,*,*,*\")\n-   (set_attr \"mode\" \"V2DF,V1DF,DF,V4SF,V2SF\")])\n+  [(set_attr \"isa\" \"noavx,avx,noavx,avx,base,noavx,noavx\")\n+   (set_attr \"type\" \"sselog,sselog,ssemov,ssemov,ssemov,ssemov,ssemov\")\n+   (set_attr \"prefix_data16\" \"*,*,1,*,*,*,*\")\n+   (set_attr \"prefix\" \"orig,vex,orig,vex,maybe_vex,orig,orig\")\n+   (set_attr \"mode\" \"V2DF,V2DF,V1DF,V1DF,DF,V4SF,V2SF\")])\n \n ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n ;;"}]}