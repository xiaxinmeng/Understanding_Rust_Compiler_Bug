{"sha": "1746d5f3e67703a5b6a3a4fd8ca625672c321313", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTc0NmQ1ZjNlNjc3MDNhNWI2YTNhNGZkOGNhNjI1NjcyYzMyMTMxMw==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2020-06-01T17:13:58Z"}, "committer": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2020-06-01T17:13:58Z"}, "message": "Cleanup global decl stream reference streaming, part 2\n\ngcc/ChangeLog:\n\n2020-06-01  Jan Hubicka  <hubicka@ucw.cz>\n\n\t* lto-streamer.h (enum LTO_tags): Remove LTO_field_decl_ref,\n\tLTO_function_decl_ref, LTO_label_decl_ref, LTO_namespace_decl_ref,\n\tLTO_result_decl_ref, LTO_type_decl_ref, LTO_type_ref,\n\tLTO_const_decl_ref, LTO_imported_decl_ref,\n\tLTO_translation_unit_decl_ref, LTO_global_decl_ref and\n\tLTO_namelist_decl_ref; add LTO_global_stream_ref.\n\t* lto-streamer-in.c (lto_input_tree_ref): Simplify.\n\t(lto_input_scc): Update.\n\t(lto_input_tree_1): Update.\n\t* lto-streamer-out.c (lto_indexable_tree_ref): Simlify.\n\t* lto-streamer.c (lto_tag_name): Update.", "tree": {"sha": "2b7c8d15f9a4f9f337a6c2590329372375808e84", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2b7c8d15f9a4f9f337a6c2590329372375808e84"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1746d5f3e67703a5b6a3a4fd8ca625672c321313", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1746d5f3e67703a5b6a3a4fd8ca625672c321313", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1746d5f3e67703a5b6a3a4fd8ca625672c321313", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1746d5f3e67703a5b6a3a4fd8ca625672c321313/comments", "author": null, "committer": null, "parents": [{"sha": "258059d91bd0e27cc335312f4558e1b339a2e77d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/258059d91bd0e27cc335312f4558e1b339a2e77d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/258059d91bd0e27cc335312f4558e1b339a2e77d"}], "stats": {"total": 154, "additions": 22, "deletions": 132}, "files": [{"sha": "5eaba7d16d4343c2d5881718d6f0a8698940b8ae", "filename": "gcc/lto-streamer-in.c", "status": "modified", "additions": 7, "deletions": 24, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1746d5f3e67703a5b6a3a4fd8ca625672c321313/gcc%2Flto-streamer-in.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1746d5f3e67703a5b6a3a4fd8ca625672c321313/gcc%2Flto-streamer-in.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer-in.c?ref=1746d5f3e67703a5b6a3a4fd8ca625672c321313", "patch": "@@ -316,34 +316,17 @@ lto_input_tree_ref (class lto_input_block *ib, class data_in *data_in,\n   unsigned HOST_WIDE_INT ix_u;\n   tree result = NULL_TREE;\n \n-  lto_tag_check_range (tag, LTO_field_decl_ref, LTO_namelist_decl_ref);\n-\n-  switch (tag)\n+  if (tag == LTO_ssa_name_ref)\n     {\n-    case LTO_ssa_name_ref:\n       ix_u = streamer_read_uhwi (ib);\n       result = (*SSANAMES (fn))[ix_u];\n-      break;\n-\n-    case LTO_type_ref:\n-    case LTO_field_decl_ref:\n-    case LTO_function_decl_ref:\n-    case LTO_type_decl_ref:\n-    case LTO_namespace_decl_ref:\n-    case LTO_global_decl_ref:\n-    case LTO_result_decl_ref:\n-    case LTO_const_decl_ref:\n-    case LTO_imported_decl_ref:\n-    case LTO_label_decl_ref:\n-    case LTO_translation_unit_decl_ref:\n-    case LTO_namelist_decl_ref:\n+    }\n+  else\n+    {\n+      gcc_checking_assert (tag == LTO_global_stream_ref);\n       ix_u = streamer_read_uhwi (ib);\n       result = (*data_in->file_data->current_decl_state\n \t\t->streams[LTO_DECL_STREAM])[ix_u];\n-      break;\n-\n-    default:\n-      gcc_unreachable ();\n     }\n \n   gcc_assert (result);\n@@ -1485,7 +1468,7 @@ lto_input_scc (class lto_input_block *ib, class data_in *data_in,\n \t{\n \t  enum LTO_tags tag = streamer_read_record_start (ib);\n \t  if (tag == LTO_null\n-\t      || (tag >= LTO_field_decl_ref && tag <= LTO_global_decl_ref)\n+\t      || tag == LTO_global_stream_ref\n \t      || tag == LTO_tree_pickle_reference\n \t      || tag == LTO_integer_cst\n \t      || tag == LTO_tree_scc\n@@ -1549,7 +1532,7 @@ lto_input_tree_1 (class lto_input_block *ib, class data_in *data_in,\n \n   if (tag == LTO_null)\n     result = NULL_TREE;\n-  else if (tag >= LTO_field_decl_ref && tag <= LTO_namelist_decl_ref)\n+  else if (tag == LTO_global_stream_ref || tag == LTO_ssa_name_ref)\n     {\n       /* If TAG is a reference to an indexable tree, the next value\n \t in IB is the index into the table where we expect to find"}, {"sha": "dfc4603d7aea73f0970626d20fa1ba08a658b469", "filename": "gcc/lto-streamer-out.c", "status": "modified", "additions": 5, "deletions": 71, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1746d5f3e67703a5b6a3a4fd8ca625672c321313/gcc%2Flto-streamer-out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1746d5f3e67703a5b6a3a4fd8ca625672c321313/gcc%2Flto-streamer-out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer-out.c?ref=1746d5f3e67703a5b6a3a4fd8ca625672c321313", "patch": "@@ -252,84 +252,18 @@ static void\n lto_indexable_tree_ref (struct output_block *ob, tree expr,\n \t\t\tenum LTO_tags *tag, unsigned *index)\n {\n-  enum tree_code code;\n-  enum lto_decl_stream_e_t encoder;\n-\n   gcc_checking_assert (tree_is_indexable (expr));\n \n-  if (TYPE_P (expr))\n+  if (TREE_CODE (expr) == SSA_NAME)\n     {\n-      *tag = LTO_type_ref;\n-      encoder = LTO_DECL_STREAM;\n+      *tag = LTO_ssa_name_ref;\n+      *index = SSA_NAME_VERSION (expr);\n     }\n   else\n     {\n-      code = TREE_CODE (expr);\n-      switch (code)\n-\t{\n-\tcase SSA_NAME:\n-\t  *tag = LTO_ssa_name_ref;\n-\t  *index = SSA_NAME_VERSION (expr);\n-\t  return;\n-\t  break;\n-\n-\tcase FIELD_DECL:\n-\t  *tag = LTO_field_decl_ref;\n-\t  encoder = LTO_DECL_STREAM;\n-\t  break;\n-\n-\tcase FUNCTION_DECL:\n-\t  *tag = LTO_function_decl_ref;\n-\t  encoder = LTO_DECL_STREAM;\n-\t  break;\n-\n-\tcase VAR_DECL:\n-\tcase DEBUG_EXPR_DECL:\n-\t  gcc_checking_assert (decl_function_context (expr) == NULL\n-\t\t\t       || TREE_STATIC (expr));\n-\t  /* FALLTHRU */\n-\tcase PARM_DECL:\n-\t  *tag = LTO_global_decl_ref;\n-\t  encoder = LTO_DECL_STREAM;\n-\t  break;\n-\n-\tcase CONST_DECL:\n-\t  *tag = LTO_const_decl_ref;\n-\t  encoder = LTO_DECL_STREAM;\n-\t  break;\n-\n-\tcase TYPE_DECL:\n-\t  *tag = LTO_type_decl_ref;\n-\t  encoder = LTO_DECL_STREAM;\n-\t  break;\n-\n-\tcase NAMESPACE_DECL:\n-\t  *tag = LTO_namespace_decl_ref;\n-\t  encoder = LTO_DECL_STREAM;\n-\t  break;\n-\n-\tcase LABEL_DECL:\n-\t  *tag = LTO_label_decl_ref;\n-\t  encoder = LTO_DECL_STREAM;\n-\t  break;\n-\n-\tcase RESULT_DECL:\n-\t  *tag = LTO_result_decl_ref;\n-\t  encoder = LTO_DECL_STREAM;\n-\t  break;\n-\n-\tcase TRANSLATION_UNIT_DECL:\n-\t  *tag = LTO_translation_unit_decl_ref;\n-\t  encoder = LTO_DECL_STREAM;\n-\t  break;\n-\n-\tdefault:\n-\t  /* No other node is indexable, so it should have been handled by\n-\t     lto_output_tree.  */\n-\t  gcc_unreachable ();\n-\t}\n+      *tag = LTO_global_stream_ref;\n+      *index = lto_get_index (&ob->decl_state->streams[LTO_DECL_STREAM], expr);\n     }\n-  *index = lto_get_index (&ob->decl_state->streams[encoder], expr);\n }\n \n "}, {"sha": "7d0fd3924c0e44e54011bd1a47ec7ce7b1b434bf", "filename": "gcc/lto-streamer.c", "status": "modified", "additions": 2, "deletions": 16, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1746d5f3e67703a5b6a3a4fd8ca625672c321313/gcc%2Flto-streamer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1746d5f3e67703a5b6a3a4fd8ca625672c321313/gcc%2Flto-streamer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer.c?ref=1746d5f3e67703a5b6a3a4fd8ca625672c321313", "patch": "@@ -84,24 +84,10 @@ lto_tag_name (enum LTO_tags tag)\n       return \"LTO_ert_must_not_throw\";\n     case LTO_tree_pickle_reference:\n       return \"LTO_tree_pickle_reference\";\n-    case LTO_field_decl_ref:\n-      return \"LTO_field_decl_ref\";\n-    case LTO_function_decl_ref:\n-      return \"LTO_function_decl_ref\";\n-    case LTO_label_decl_ref:\n-      return \"LTO_label_decl_ref\";\n-    case LTO_namespace_decl_ref:\n-      return \"LTO_namespace_decl_ref\";\n-    case LTO_result_decl_ref:\n-      return \"LTO_result_decl_ref\";\n+    case LTO_global_stream_ref:\n+      return \"LTO_global_sream_ref\";\n     case LTO_ssa_name_ref:\n       return \"LTO_ssa_name_ref\";\n-    case LTO_type_decl_ref:\n-      return \"LTO_type_decl_ref\";\n-    case LTO_type_ref:\n-      return \"LTO_type_ref\";\n-    case LTO_global_decl_ref:\n-      return \"LTO_global_decl_ref\";\n     default:\n       return \"LTO_UNKNOWN\";\n     }"}, {"sha": "241a46d4f316264437543d601dac6dd659db3481", "filename": "gcc/lto-streamer.h", "status": "modified", "additions": 8, "deletions": 21, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1746d5f3e67703a5b6a3a4fd8ca625672c321313/gcc%2Flto-streamer.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1746d5f3e67703a5b6a3a4fd8ca625672c321313/gcc%2Flto-streamer.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer.h?ref=1746d5f3e67703a5b6a3a4fd8ca625672c321313", "patch": "@@ -185,28 +185,15 @@ enum LTO_tags\n   LTO_trees,\n \n   /* References to indexable tree nodes.  These objects are stored in\n-     tables that are written separately from the function bodies that\n-     reference them.  This way they can be instantiated even when the\n-     referencing functions aren't (e.g., during WPA) and it also allows\n-     functions to be copied from one file to another without having\n-     to unpickle the body first (the references are location\n-     independent).\n-\n-     NOTE, do not regroup these values as the grouping is exposed\n-     in the range checks done in lto_input_tree.  */\n-  LTO_field_decl_ref,\t\t\t/* Do not change.  */\n-  LTO_function_decl_ref,\n-  LTO_label_decl_ref,\n-  LTO_namespace_decl_ref,\n-  LTO_result_decl_ref,\n+     tables that are written separately from the function bodies\n+     and variable constructors that reference them.  This way they can be\n+     instantiated even when the referencing functions aren't (e.g., during WPA)\n+     and it also allows functions to be copied from one file to another without\n+     having to unpickle the body first (the references are location\n+     independent).  */\n+  LTO_global_stream_ref,\n+\n   LTO_ssa_name_ref,\n-  LTO_type_decl_ref,\n-  LTO_type_ref,\n-  LTO_const_decl_ref,\n-  LTO_imported_decl_ref,\n-  LTO_translation_unit_decl_ref,\n-  LTO_global_decl_ref,\n-  LTO_namelist_decl_ref,\t\t/* Do not change.  */\n \n   /* This tag must always be last.  */\n   LTO_NUM_TAGS"}]}