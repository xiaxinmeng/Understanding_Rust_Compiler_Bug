{"sha": "e9b596c13252df2f1cea3f27183e9969ede54fbd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTliNTk2YzEzMjUyZGYyZjFjZWEzZjI3MTgzZTk5NjllZGU1NGZiZA==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2016-01-06T15:47:14Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2016-01-06T15:47:14Z"}, "message": "openacc.c (acc_on_device): Add routine pragma for C++ wrapper.\n\n\t* openacc.c (acc_on_device): Add routine pragma for C++ wrapper.\n\t* testsuite/libgomp.oacc-c-c++-common/acc-on-device-2.c: New.\n\nFrom-SVN: r232104", "tree": {"sha": "945fd4e724f1c10ee1609968b449d1da268975fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/945fd4e724f1c10ee1609968b449d1da268975fe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e9b596c13252df2f1cea3f27183e9969ede54fbd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9b596c13252df2f1cea3f27183e9969ede54fbd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9b596c13252df2f1cea3f27183e9969ede54fbd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9b596c13252df2f1cea3f27183e9969ede54fbd/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7c961392a68dcf032ec75aa38a41b6ec7d8ec477", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c961392a68dcf032ec75aa38a41b6ec7d8ec477", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c961392a68dcf032ec75aa38a41b6ec7d8ec477"}], "stats": {"total": 29, "additions": 29, "deletions": 0}, "files": [{"sha": "b958313c21b419aa501b908f656c41aa57f546e9", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9b596c13252df2f1cea3f27183e9969ede54fbd/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9b596c13252df2f1cea3f27183e9969ede54fbd/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=e9b596c13252df2f1cea3f27183e9969ede54fbd", "patch": "@@ -1,3 +1,8 @@\n+2016-01-06  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* openacc.c (acc_on_device): Add routine pragma for C++ wrapper.\n+\t* testsuite/libgomp.oacc-c-c++-common/acc-on-device-2.c: New.\n+\n 2016-01-04  Jakub Jelinek  <jakub@redhat.com>\n \n \tUpdate copyright years."}, {"sha": "7ea87945839c3710c1508275de2fcf26660f7dcb", "filename": "libgomp/openacc.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9b596c13252df2f1cea3f27183e9969ede54fbd/libgomp%2Fopenacc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9b596c13252df2f1cea3f27183e9969ede54fbd/libgomp%2Fopenacc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fopenacc.h?ref=e9b596c13252df2f1cea3f27183e9969ede54fbd", "patch": "@@ -121,6 +121,7 @@ int acc_set_cuda_stream (int, void *) __GOACC_NOTHROW;\n \n /* Forwarding function with correctly typed arg.  */\n \n+#pragma acc routine seq\n inline int acc_on_device (acc_device_t __arg) __GOACC_NOTHROW\n {\n   return acc_on_device ((int) __arg);"}, {"sha": "e5d9c36b107466e0be1972a85fe47c954db54a20", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/acc-on-device-2.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9b596c13252df2f1cea3f27183e9969ede54fbd/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Facc-on-device-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9b596c13252df2f1cea3f27183e9969ede54fbd/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Facc-on-device-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Facc-on-device-2.c?ref=e9b596c13252df2f1cea3f27183e9969ede54fbd", "patch": "@@ -0,0 +1,23 @@\n+/* { dg-additional-options \"-O0\" } */\n+\n+#include <openacc.h>\n+\n+/* acc_on_device might not be folded at -O0, but it should work. */\n+\n+int main ()\n+{\n+  int dev;\n+  \n+#pragma acc parallel copyout (dev)\n+  {\n+    dev = acc_on_device (acc_device_not_host);\n+  }\n+\n+  int expect = 1;\n+  \n+#if  ACC_DEVICE_TYPE_host\n+  expect = 0;\n+#endif\n+  \n+  return dev != expect;\n+}"}]}