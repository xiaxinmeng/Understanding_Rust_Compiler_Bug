{"sha": "4dd7c3b285daf030da0ff9c0d5e2f79b24943d1e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGRkN2MzYjI4NWRhZjAzMGRhMGZmOWMwZDVlMmY3OWIyNDk0M2QxZQ==", "commit": {"author": {"name": "Cary Coutant", "email": "ccoutant@google.com", "date": "2014-08-08T20:33:26Z"}, "committer": {"name": "Cary Coutant", "email": "ccoutant@gcc.gnu.org", "date": "2014-08-08T20:33:26Z"}, "message": "Remove skeleton type units that were being produced with -gsplit-dwarf.\n\nThese sections were originally intended as targets for .gdb_index\nentries that needed to point to type units.  Because of the limitations\nof the .debug_gnu_pubnames/pubtypes sections with split DWARF, we were\nnot able to pass along enough information to the gold linker to generate\nthose index entries properly, and they had to point to the CU instead.\nGDB had to deal with that, and was updated a while ago to no longer\ndepend on the skeleton TU sections at all. This allows us to reduce\nobject file sizes with split DWARF by about 30%.\n\ngcc/\n\t* dwarf2out.c (get_skeleton_type_unit): Remove.\n\t(output_skeleton_debug_sections): Remove skeleton type units.\n\t(output_comdat_type_unit): Likewise.\n\t(dwarf2out_finish): Likewise.\n\nFrom-SVN: r213765", "tree": {"sha": "a47e0373c2817eb387d22c840843694fabd422fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a47e0373c2817eb387d22c840843694fabd422fc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4dd7c3b285daf030da0ff9c0d5e2f79b24943d1e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4dd7c3b285daf030da0ff9c0d5e2f79b24943d1e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4dd7c3b285daf030da0ff9c0d5e2f79b24943d1e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4dd7c3b285daf030da0ff9c0d5e2f79b24943d1e/comments", "author": null, "committer": null, "parents": [{"sha": "a6b0c7bc4508a17fcd969080b9e721f4dcd5c305", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6b0c7bc4508a17fcd969080b9e721f4dcd5c305", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6b0c7bc4508a17fcd969080b9e721f4dcd5c305"}], "stats": {"total": 62, "additions": 7, "deletions": 55}, "files": [{"sha": "4be17717d74f028516b870d9e92a4cddc6716f88", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dd7c3b285daf030da0ff9c0d5e2f79b24943d1e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dd7c3b285daf030da0ff9c0d5e2f79b24943d1e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4dd7c3b285daf030da0ff9c0d5e2f79b24943d1e", "patch": "@@ -1,3 +1,10 @@\n+2014-08-08  Cary Coutant  <ccoutant@google.com>\n+\n+\t* dwarf2out.c (get_skeleton_type_unit): Remove.\n+\t(output_skeleton_debug_sections): Remove skeleton type units.\n+\t(output_comdat_type_unit): Likewise.\n+\t(dwarf2out_finish): Likewise.\n+\n 2014-08-07  Yi Yang  <ahyangyi@google.com>\n \n \t* predict.c (expr_expected_value_1): Remove the redundant assignment."}, {"sha": "c1aaa8a87f86266a5f39c56732b5b4d5c9bdc13c", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 0, "deletions": 55, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dd7c3b285daf030da0ff9c0d5e2f79b24943d1e/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dd7c3b285daf030da0ff9c0d5e2f79b24943d1e/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=4dd7c3b285daf030da0ff9c0d5e2f79b24943d1e", "patch": "@@ -9069,26 +9069,6 @@ add_top_level_skeleton_die_attrs (dw_die_ref die)\n   add_AT_lineptr (die, DW_AT_GNU_addr_base, debug_addr_section_label);\n }\n \n-/* Return the single type-unit die for skeleton type units.  */\n-\n-static dw_die_ref\n-get_skeleton_type_unit (void)\n-{\n-  /* For dwarf_split_debug_sections with use_type info, all type units in the\n-     skeleton sections have identical dies (but different headers).  This\n-     single die will be output many times.  */\n-\n-  static dw_die_ref skeleton_type_unit = NULL;\n-\n-  if (skeleton_type_unit == NULL)\n-    {\n-      skeleton_type_unit = new_die (DW_TAG_type_unit, NULL, NULL);\n-      add_top_level_skeleton_die_attrs (skeleton_type_unit);\n-      skeleton_type_unit->die_abbrev = SKELETON_TYPE_DIE_ABBREV;\n-    }\n-  return skeleton_type_unit;\n-}\n-\n /* Output skeleton debug sections that point to the dwo file.  */\n \n static void\n@@ -9127,8 +9107,6 @@ output_skeleton_debug_sections (dw_die_ref comp_unit)\n   ASM_OUTPUT_LABEL (asm_out_file, debug_skeleton_abbrev_section_label);\n \n   output_die_abbrevs (SKELETON_COMP_DIE_ABBREV, comp_unit);\n-  if (use_debug_types)\n-    output_die_abbrevs (SKELETON_TYPE_DIE_ABBREV, get_skeleton_type_unit ());\n \n   dw2_asm_output_data (1, 0, \"end of skeleton .debug_abbrev\");\n }\n@@ -9190,38 +9168,6 @@ output_comdat_type_unit (comdat_type_node *node)\n   output_die (node->root_die);\n \n   unmark_dies (node->root_die);\n-\n-#if defined (OBJECT_FORMAT_ELF)\n-  if (dwarf_split_debug_info)\n-    {\n-      /* Produce the skeleton type-unit header.  */\n-      const char *secname = \".debug_types\";\n-\n-      targetm.asm_out.named_section (secname,\n-                                     SECTION_DEBUG | SECTION_LINKONCE,\n-                                     comdat_key);\n-      if (DWARF_INITIAL_LENGTH_SIZE - DWARF_OFFSET_SIZE == 4)\n-        dw2_asm_output_data (4, 0xffffffff,\n-          \"Initial length escape value indicating 64-bit DWARF extension\");\n-\n-      dw2_asm_output_data (DWARF_OFFSET_SIZE,\n-                           DWARF_COMPILE_UNIT_HEADER_SIZE\n-                           - DWARF_INITIAL_LENGTH_SIZE\n-                           + size_of_die (get_skeleton_type_unit ())\n-                           + DWARF_TYPE_SIGNATURE_SIZE + DWARF_OFFSET_SIZE,\n-                           \"Length of Type Unit Info\");\n-      dw2_asm_output_data (2, dwarf_version, \"DWARF version number\");\n-      dw2_asm_output_offset (DWARF_OFFSET_SIZE,\n-                             debug_skeleton_abbrev_section_label,\n-                             debug_abbrev_section,\n-                             \"Offset Into Abbrev. Section\");\n-      dw2_asm_output_data (1, DWARF2_ADDR_SIZE, \"Pointer Size (in bytes)\");\n-      output_signature (node->signature, \"Type Signature\");\n-      dw2_asm_output_data (DWARF_OFFSET_SIZE, 0, \"Offset to Type DIE\");\n-\n-      output_die (get_skeleton_type_unit ());\n-    }\n-#endif\n }\n \n /* Return the DWARF2/3 pubname associated with a decl.  */\n@@ -24430,7 +24376,6 @@ dwarf2out_finish (const char *filename)\n          skeleton die attrs are added when the skeleton type unit is\n          created, so ensure it is created by this point.  */\n       add_top_level_skeleton_die_attrs (main_comp_unit_die);\n-      (void) get_skeleton_type_unit ();\n       htab_traverse_noresize (debug_str_hash, index_string, &index);\n     }\n "}]}