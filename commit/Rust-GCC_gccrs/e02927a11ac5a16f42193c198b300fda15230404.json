{"sha": "e02927a11ac5a16f42193c198b300fda15230404", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTAyOTI3YTExYWM1YTE2ZjQyMTkzYzE5OGIzMDBmZGExNTIzMDQwNA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2010-10-27T15:48:09Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2010-10-27T15:48:09Z"}, "message": "semantics.c (finish_compound_stmt): Avoid creating an unnecessary BIND_EXPR.\n\n\t* semantics.c (finish_compound_stmt): Avoid creating an\n\tunnecessary BIND_EXPR.\n\nFrom-SVN: r166006", "tree": {"sha": "2b370c8b3b7b55ab734d0d205edaa26482269ff5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2b370c8b3b7b55ab734d0d205edaa26482269ff5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e02927a11ac5a16f42193c198b300fda15230404", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e02927a11ac5a16f42193c198b300fda15230404", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e02927a11ac5a16f42193c198b300fda15230404", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e02927a11ac5a16f42193c198b300fda15230404/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bc8a0bd9fc9bc846333b2a50072558ce9b623af7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc8a0bd9fc9bc846333b2a50072558ce9b623af7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc8a0bd9fc9bc846333b2a50072558ce9b623af7"}], "stats": {"total": 17, "additions": 16, "deletions": 1}, "files": [{"sha": "178bed6cd6836331333f54d2ff5cdbbb6a9b7ff8", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e02927a11ac5a16f42193c198b300fda15230404/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e02927a11ac5a16f42193c198b300fda15230404/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=e02927a11ac5a16f42193c198b300fda15230404", "patch": "@@ -1,5 +1,8 @@\n 2010-10-27  Jason Merrill  <jason@redhat.com>\n \n+\t* semantics.c (finish_compound_stmt): Avoid creating an\n+\tunnecessary BIND_EXPR.\n+\n \t* call.c (convert_like_real): Don't check narrowing if the element\n \tis also an initializer-list.\n "}, {"sha": "0012bdde49fd9dc2ff7f6073d5efdce6f6415d06", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e02927a11ac5a16f42193c198b300fda15230404/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e02927a11ac5a16f42193c198b300fda15230404/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=e02927a11ac5a16f42193c198b300fda15230404", "patch": "@@ -1208,7 +1208,19 @@ void\n finish_compound_stmt (tree stmt)\n {\n   if (TREE_CODE (stmt) == BIND_EXPR)\n-    BIND_EXPR_BODY (stmt) = do_poplevel (BIND_EXPR_BODY (stmt));\n+    {\n+      tree body = do_poplevel (BIND_EXPR_BODY (stmt));\n+      /* If the STATEMENT_LIST is empty and this BIND_EXPR isn't special,\n+\t discard the BIND_EXPR so it can be merged with the containing\n+\t STATEMENT_LIST.  */\n+      if (TREE_CODE (body) == STATEMENT_LIST\n+\t  && STATEMENT_LIST_HEAD (body) == NULL\n+\t  && !BIND_EXPR_BODY_BLOCK (stmt)\n+\t  && !BIND_EXPR_TRY_BLOCK (stmt))\n+\tstmt = body;\n+      else\n+\tBIND_EXPR_BODY (stmt) = body;\n+    }\n   else if (STATEMENT_LIST_NO_SCOPE (stmt))\n     stmt = pop_stmt_list (stmt);\n   else"}]}