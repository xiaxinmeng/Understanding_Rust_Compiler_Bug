{"sha": "a7f46cc7fbdf5353c0f7cc3cc850880d1fd452e1", "node_id": "C_kwDOANBUbNoAKGE3ZjQ2Y2M3ZmJkZjUzNTNjMGY3Y2MzY2M4NTA4ODBkMWZkNDUyZTE", "commit": {"author": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2022-07-22T13:11:29Z"}, "committer": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2022-07-26T13:45:49Z"}, "message": "hir: Add `get_to_expr` to RangeToIncl", "tree": {"sha": "d86f020b7b75c4e4f38e08eeacf34d02fbe16b26", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d86f020b7b75c4e4f38e08eeacf34d02fbe16b26"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a7f46cc7fbdf5353c0f7cc3cc850880d1fd452e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7f46cc7fbdf5353c0f7cc3cc850880d1fd452e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7f46cc7fbdf5353c0f7cc3cc850880d1fd452e1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7f46cc7fbdf5353c0f7cc3cc850880d1fd452e1/comments", "author": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dec7ee4c5e703422ecb9bc94417645d66af7eaae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dec7ee4c5e703422ecb9bc94417645d66af7eaae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dec7ee4c5e703422ecb9bc94417645d66af7eaae"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "327a9accfe17b1cbfd6ac23c3c70206b29807496", "filename": "gcc/rust/hir/tree/rust-hir-expr.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7f46cc7fbdf5353c0f7cc3cc850880d1fd452e1/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-expr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7f46cc7fbdf5353c0f7cc3cc850880d1fd452e1/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-expr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-expr.h?ref=a7f46cc7fbdf5353c0f7cc3cc850880d1fd452e1", "patch": "@@ -2716,6 +2716,8 @@ class RangeToInclExpr : public RangeExpr\n   void accept_vis (HIRFullVisitor &vis) override;\n   void accept_vis (HIRExpressionVisitor &vis) override;\n \n+  std::unique_ptr<Expr> &get_to_expr () { return to; };\n+\n protected:\n   /* Use covariance to implement clone function as returning this object rather\n    * than base */"}]}