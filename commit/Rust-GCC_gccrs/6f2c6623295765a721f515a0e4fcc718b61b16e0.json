{"sha": "6f2c6623295765a721f515a0e4fcc718b61b16e0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmYyYzY2MjMyOTU3NjVhNzIxZjUxNWEwZTRmY2M3MThiNjFiMTZlMA==", "commit": {"author": {"name": "Jiong Wang", "email": "jiong.wang@arm.com", "date": "2016-05-17T16:41:18Z"}, "committer": {"name": "Jiong Wang", "email": "jiwang@gcc.gnu.org", "date": "2016-05-17T16:41:18Z"}, "message": "[AArch64, 4/4] Reimplement vmvn* intrinscis, remove inline assembly\n\ngcc/\n\t* config/aarch64/arm_neon.h (vmvn_s8): Reimplement using C operator.\n\tRemove inline assembly.\n\t(vmvn_s16): Likewise.\n\t(vmvn_s32): Likewise.\n\t(vmvn_u8): Likewise.\n\t(vmvn_u16): Likewise.\n\t(vmvn_u32): Likewise.\n\t(vmvnq_s8): Likewise.\n\t(vmvnq_s16): Likewise.\n\t(vmvnq_s32): Likewise.\n\t(vmvnq_u8): Likewise.\n\t(vmvnq_u16): Likewise.\n\t(vmvnq_u32): Likewise.\n\t(vmvn_p8): Likewise.\n\t(vmvnq_p16): Likewise.\n\nFrom-SVN: r236334", "tree": {"sha": "9c55c10997f14f606ccf7503045969f2a8c80fb3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9c55c10997f14f606ccf7503045969f2a8c80fb3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6f2c6623295765a721f515a0e4fcc718b61b16e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f2c6623295765a721f515a0e4fcc718b61b16e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f2c6623295765a721f515a0e4fcc718b61b16e0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f2c6623295765a721f515a0e4fcc718b61b16e0/comments", "author": null, "committer": null, "parents": [{"sha": "daab45621346c95196ce84fa3b9b9301bfe7e5a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/daab45621346c95196ce84fa3b9b9301bfe7e5a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/daab45621346c95196ce84fa3b9b9301bfe7e5a9"}], "stats": {"total": 259, "additions": 104, "deletions": 155}, "files": [{"sha": "b1d1bc022bc94d738c8e2fd2f38093bbef2d5568", "filename": "gcc/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f2c6623295765a721f515a0e4fcc718b61b16e0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f2c6623295765a721f515a0e4fcc718b61b16e0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6f2c6623295765a721f515a0e4fcc718b61b16e0", "patch": "@@ -1,3 +1,21 @@\n+2016-05-17  Jiong Wang  <jiong.wang@arm.com>\n+\n+\t* config/aarch64/arm_neon.h (vmvn_s8): Reimplement using C operator.\n+\tRemove inline assembly.\n+\t(vmvn_s16): Likewise.\n+\t(vmvn_s32): Likewise.\n+\t(vmvn_u8): Likewise.\n+\t(vmvn_u16): Likewise.\n+\t(vmvn_u32): Likewise.\n+\t(vmvnq_s8): Likewise.\n+\t(vmvnq_s16): Likewise.\n+\t(vmvnq_s32): Likewise.\n+\t(vmvnq_u8): Likewise.\n+\t(vmvnq_u16): Likewise.\n+\t(vmvnq_u32): Likewise.\n+\t(vmvn_p8): Likewise.\n+\t(vmvnq_p16): Likewise.\n+\n 2016-05-17  Jiong Wang  <jiong.wang@arm.com>\n \n \t* config/aarch64/aarch64-simd.md (vmul_n_f32): Remove inline assembly."}, {"sha": "e563e3d2f77ca1ec94ce4b834eeb3619882848b2", "filename": "gcc/config/aarch64/arm_neon.h", "status": "modified", "additions": 86, "deletions": 155, "changes": 241, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f2c6623295765a721f515a0e4fcc718b61b16e0/gcc%2Fconfig%2Faarch64%2Farm_neon.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f2c6623295765a721f515a0e4fcc718b61b16e0/gcc%2Fconfig%2Faarch64%2Farm_neon.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Farm_neon.h?ref=6f2c6623295765a721f515a0e4fcc718b61b16e0", "patch": "@@ -8388,161 +8388,6 @@ vmull_u32 (uint32x2_t a, uint32x2_t b)\n   return result;\n }\n \n-__extension__ static __inline poly8x8_t __attribute__ ((__always_inline__))\n-vmvn_p8 (poly8x8_t a)\n-{\n-  poly8x8_t result;\n-  __asm__ (\"mvn %0.8b,%1.8b\"\n-           : \"=w\"(result)\n-           : \"w\"(a)\n-           : /* No clobbers */);\n-  return result;\n-}\n-\n-__extension__ static __inline int8x8_t __attribute__ ((__always_inline__))\n-vmvn_s8 (int8x8_t a)\n-{\n-  int8x8_t result;\n-  __asm__ (\"mvn %0.8b,%1.8b\"\n-           : \"=w\"(result)\n-           : \"w\"(a)\n-           : /* No clobbers */);\n-  return result;\n-}\n-\n-__extension__ static __inline int16x4_t __attribute__ ((__always_inline__))\n-vmvn_s16 (int16x4_t a)\n-{\n-  int16x4_t result;\n-  __asm__ (\"mvn %0.8b,%1.8b\"\n-           : \"=w\"(result)\n-           : \"w\"(a)\n-           : /* No clobbers */);\n-  return result;\n-}\n-\n-__extension__ static __inline int32x2_t __attribute__ ((__always_inline__))\n-vmvn_s32 (int32x2_t a)\n-{\n-  int32x2_t result;\n-  __asm__ (\"mvn %0.8b,%1.8b\"\n-           : \"=w\"(result)\n-           : \"w\"(a)\n-           : /* No clobbers */);\n-  return result;\n-}\n-\n-__extension__ static __inline uint8x8_t __attribute__ ((__always_inline__))\n-vmvn_u8 (uint8x8_t a)\n-{\n-  uint8x8_t result;\n-  __asm__ (\"mvn %0.8b,%1.8b\"\n-           : \"=w\"(result)\n-           : \"w\"(a)\n-           : /* No clobbers */);\n-  return result;\n-}\n-\n-__extension__ static __inline uint16x4_t __attribute__ ((__always_inline__))\n-vmvn_u16 (uint16x4_t a)\n-{\n-  uint16x4_t result;\n-  __asm__ (\"mvn %0.8b,%1.8b\"\n-           : \"=w\"(result)\n-           : \"w\"(a)\n-           : /* No clobbers */);\n-  return result;\n-}\n-\n-__extension__ static __inline uint32x2_t __attribute__ ((__always_inline__))\n-vmvn_u32 (uint32x2_t a)\n-{\n-  uint32x2_t result;\n-  __asm__ (\"mvn %0.8b,%1.8b\"\n-           : \"=w\"(result)\n-           : \"w\"(a)\n-           : /* No clobbers */);\n-  return result;\n-}\n-\n-__extension__ static __inline poly8x16_t __attribute__ ((__always_inline__))\n-vmvnq_p8 (poly8x16_t a)\n-{\n-  poly8x16_t result;\n-  __asm__ (\"mvn %0.16b,%1.16b\"\n-           : \"=w\"(result)\n-           : \"w\"(a)\n-           : /* No clobbers */);\n-  return result;\n-}\n-\n-__extension__ static __inline int8x16_t __attribute__ ((__always_inline__))\n-vmvnq_s8 (int8x16_t a)\n-{\n-  int8x16_t result;\n-  __asm__ (\"mvn %0.16b,%1.16b\"\n-           : \"=w\"(result)\n-           : \"w\"(a)\n-           : /* No clobbers */);\n-  return result;\n-}\n-\n-__extension__ static __inline int16x8_t __attribute__ ((__always_inline__))\n-vmvnq_s16 (int16x8_t a)\n-{\n-  int16x8_t result;\n-  __asm__ (\"mvn %0.16b,%1.16b\"\n-           : \"=w\"(result)\n-           : \"w\"(a)\n-           : /* No clobbers */);\n-  return result;\n-}\n-\n-__extension__ static __inline int32x4_t __attribute__ ((__always_inline__))\n-vmvnq_s32 (int32x4_t a)\n-{\n-  int32x4_t result;\n-  __asm__ (\"mvn %0.16b,%1.16b\"\n-           : \"=w\"(result)\n-           : \"w\"(a)\n-           : /* No clobbers */);\n-  return result;\n-}\n-\n-__extension__ static __inline uint8x16_t __attribute__ ((__always_inline__))\n-vmvnq_u8 (uint8x16_t a)\n-{\n-  uint8x16_t result;\n-  __asm__ (\"mvn %0.16b,%1.16b\"\n-           : \"=w\"(result)\n-           : \"w\"(a)\n-           : /* No clobbers */);\n-  return result;\n-}\n-\n-__extension__ static __inline uint16x8_t __attribute__ ((__always_inline__))\n-vmvnq_u16 (uint16x8_t a)\n-{\n-  uint16x8_t result;\n-  __asm__ (\"mvn %0.16b,%1.16b\"\n-           : \"=w\"(result)\n-           : \"w\"(a)\n-           : /* No clobbers */);\n-  return result;\n-}\n-\n-__extension__ static __inline uint32x4_t __attribute__ ((__always_inline__))\n-vmvnq_u32 (uint32x4_t a)\n-{\n-  uint32x4_t result;\n-  __asm__ (\"mvn %0.16b,%1.16b\"\n-           : \"=w\"(result)\n-           : \"w\"(a)\n-           : /* No clobbers */);\n-  return result;\n-}\n-\n-\n __extension__ static __inline int16x4_t __attribute__ ((__always_inline__))\n vpadal_s8 (int16x4_t a, int8x8_t b)\n {\n@@ -18871,6 +18716,92 @@ vmulq_n_u32 (uint32x4_t __a, uint32_t __b)\n   return __a * __b;\n }\n \n+/* vmvn  */\n+\n+__extension__ static __inline poly8x8_t __attribute__ ((__always_inline__))\n+vmvn_p8 (poly8x8_t __a)\n+{\n+  return (poly8x8_t) ~((int8x8_t) __a);\n+}\n+\n+__extension__ static __inline int8x8_t __attribute__ ((__always_inline__))\n+vmvn_s8 (int8x8_t __a)\n+{\n+  return ~__a;\n+}\n+\n+__extension__ static __inline int16x4_t __attribute__ ((__always_inline__))\n+vmvn_s16 (int16x4_t __a)\n+{\n+  return ~__a;\n+}\n+\n+__extension__ static __inline int32x2_t __attribute__ ((__always_inline__))\n+vmvn_s32 (int32x2_t __a)\n+{\n+  return ~__a;\n+}\n+\n+__extension__ static __inline uint8x8_t __attribute__ ((__always_inline__))\n+vmvn_u8 (uint8x8_t __a)\n+{\n+  return ~__a;\n+}\n+\n+__extension__ static __inline uint16x4_t __attribute__ ((__always_inline__))\n+vmvn_u16 (uint16x4_t __a)\n+{\n+  return ~__a;\n+}\n+\n+__extension__ static __inline uint32x2_t __attribute__ ((__always_inline__))\n+vmvn_u32 (uint32x2_t __a)\n+{\n+  return ~__a;\n+}\n+\n+__extension__ static __inline poly8x16_t __attribute__ ((__always_inline__))\n+vmvnq_p8 (poly8x16_t __a)\n+{\n+  return (poly8x16_t) ~((int8x16_t) __a);\n+}\n+\n+__extension__ static __inline int8x16_t __attribute__ ((__always_inline__))\n+vmvnq_s8 (int8x16_t __a)\n+{\n+  return ~__a;\n+}\n+\n+__extension__ static __inline int16x8_t __attribute__ ((__always_inline__))\n+vmvnq_s16 (int16x8_t __a)\n+{\n+  return ~__a;\n+}\n+\n+__extension__ static __inline int32x4_t __attribute__ ((__always_inline__))\n+vmvnq_s32 (int32x4_t __a)\n+{\n+  return ~__a;\n+}\n+\n+__extension__ static __inline uint8x16_t __attribute__ ((__always_inline__))\n+vmvnq_u8 (uint8x16_t __a)\n+{\n+  return ~__a;\n+}\n+\n+__extension__ static __inline uint16x8_t __attribute__ ((__always_inline__))\n+vmvnq_u16 (uint16x8_t __a)\n+{\n+  return ~__a;\n+}\n+\n+__extension__ static __inline uint32x4_t __attribute__ ((__always_inline__))\n+vmvnq_u32 (uint32x4_t __a)\n+{\n+  return ~__a;\n+}\n+\n /* vneg  */\n \n __extension__ static __inline float32x2_t __attribute__ ((__always_inline__))"}]}