{"sha": "8c5fd59f94de0dd09cd451c532fe746dab52dfca", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGM1ZmQ1OWY5NGRlMGRkMDljZDQ1MWM1MzJmZTc0NmRhYjUyZGZjYQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2007-03-14T07:47:32Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2007-03-14T07:47:32Z"}, "message": "invoke.texi (i386 and x86-64 Options): Clarify -msahf option.\n\n       * doc/invoke.texi (i386 and x86-64 Options): Clarify -msahf option.\n\nFrom-SVN: r122910", "tree": {"sha": "8a061b678873e93e0f03fdff633af18b802c90bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8a061b678873e93e0f03fdff633af18b802c90bb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8c5fd59f94de0dd09cd451c532fe746dab52dfca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c5fd59f94de0dd09cd451c532fe746dab52dfca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c5fd59f94de0dd09cd451c532fe746dab52dfca", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c5fd59f94de0dd09cd451c532fe746dab52dfca/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e31657e8129711f53f3fd09d846b54bd1b5cfb39", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e31657e8129711f53f3fd09d846b54bd1b5cfb39", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e31657e8129711f53f3fd09d846b54bd1b5cfb39"}], "stats": {"total": 15, "additions": 10, "deletions": 5}, "files": [{"sha": "97d34f3c04e0cefe011be0b7d8d3a7f24b01d168", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c5fd59f94de0dd09cd451c532fe746dab52dfca/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c5fd59f94de0dd09cd451c532fe746dab52dfca/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8c5fd59f94de0dd09cd451c532fe746dab52dfca", "patch": "@@ -1,3 +1,7 @@\n+2007-03-14  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* doc/invoke.texi (i386 and x86-64 Options): Clarify -msahf option.\n+\n 2007-03-13  Seongbae Park <seongbae.park@gmail.com>\n \n \tPR tree-optimization/30590"}, {"sha": "60122e0a8914b65c8dfde6983e3adb7c5dd6d443", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c5fd59f94de0dd09cd451c532fe746dab52dfca/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c5fd59f94de0dd09cd451c532fe746dab52dfca/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=8c5fd59f94de0dd09cd451c532fe746dab52dfca", "patch": "@@ -10091,11 +10091,12 @@ atomic built-in functions: see @ref{Atomic Builtins} for details.\n \n @item -msahf\n @opindex -msahf\n-This option will enable GCC to use SAHF instruction in generated code.  Early\n-Intel CPUs with Intel 64 lacked LAHF and SAHF instructions supported by AMD64\n-until introduction of Pentium 4 G1 step in December 2005.  LAHF and SAHF are\n-load and store instructions, respectively, for certain status flags.  These\n-instructions are used for virtualization and floating-point condition handling.\n+This option will enable GCC to use SAHF instruction in generated 64-bit code.\n+Early Intel CPUs with Intel 64 lacked LAHF and SAHF instructions supported\n+by AMD64 until introduction of Pentium 4 G1 step in December 2005.  LAHF and\n+SAHF are load and store instructions, respectively, for certain status flags.\n+In 64-bit mode, SAHF instruction is used to optimize @code{fmod}, @code{drem}\n+or @code{remainder} built-in functions: see @ref{Other Builtins} for details.\n \n @item -mpush-args\n @itemx -mno-push-args"}]}