{"sha": "1cdaa211989e0de46e77f46d42367c42f9a0831c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWNkYWEyMTE5ODllMGRlNDZlNzdmNDZkNDIzNjdjNDJmOWEwODMxYw==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-04-02T16:50:04Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-04-02T16:50:04Z"}, "message": "re PR tree-optimization/43629 (Struct to register optimization fails)\n\n2010-04-02  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/43629\n\t* tree-ssa-ccp.c (likely_value): Reset all_undefined_operands\n\tif we have seen a constant value.\n\n\t* gcc.c-torture/execute/pr43629.c: New testcase.\n\nFrom-SVN: r157944", "tree": {"sha": "7db1d8b1c940c4988eb8031069cc5033efd35a1a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7db1d8b1c940c4988eb8031069cc5033efd35a1a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1cdaa211989e0de46e77f46d42367c42f9a0831c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1cdaa211989e0de46e77f46d42367c42f9a0831c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1cdaa211989e0de46e77f46d42367c42f9a0831c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1cdaa211989e0de46e77f46d42367c42f9a0831c/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d33da5cd571f4e3350589a905ab6c6001f763e69", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d33da5cd571f4e3350589a905ab6c6001f763e69", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d33da5cd571f4e3350589a905ab6c6001f763e69"}], "stats": {"total": 31, "additions": 29, "deletions": 2}, "files": [{"sha": "9ba9e7a46d086960fbafd2884bead1c9204840b1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1cdaa211989e0de46e77f46d42367c42f9a0831c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1cdaa211989e0de46e77f46d42367c42f9a0831c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1cdaa211989e0de46e77f46d42367c42f9a0831c", "patch": "@@ -1,3 +1,9 @@\n+2010-04-02  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/43629\n+\t* tree-ssa-ccp.c (likely_value): Reset all_undefined_operands\n+\tif we have seen a constant value.\n+\n 2010-04-02  Joseph Myers  <joseph@codesourcery.com>\n \n \t* read-rtl.c (read_rtx_1): Give an error for EOF while looking for"}, {"sha": "54ec0072334f54e3b17a0a3c19b0b446b0eeacaf", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1cdaa211989e0de46e77f46d42367c42f9a0831c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1cdaa211989e0de46e77f46d42367c42f9a0831c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1cdaa211989e0de46e77f46d42367c42f9a0831c", "patch": "@@ -1,3 +1,8 @@\n+2010-04-02  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/43629\n+\t* gcc.c-torture/execute/pr43629.c: New testcase.\n+\n 2010-04-01  Janne Blomqvist  <jb@gcc.gnu.org>\n             Dominique d'Humieres  <dominiq@lps.ens.fr>\n "}, {"sha": "10c0196c89bde7d46cf78ffd394ba56783856c26", "filename": "gcc/testsuite/gcc.c-torture/execute/pr43629.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1cdaa211989e0de46e77f46d42367c42f9a0831c/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr43629.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1cdaa211989e0de46e77f46d42367c42f9a0831c/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr43629.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr43629.c?ref=1cdaa211989e0de46e77f46d42367c42f9a0831c", "patch": "@@ -0,0 +1,13 @@\n+int flag;\n+extern void abort (void);\n+int main()\n+{\n+  int x;\n+  if (flag)\n+    x = -1;\n+  else \n+    x &= 0xff;\n+  if (x & ~0xff)\n+    abort ();\n+  return 0;\n+}"}, {"sha": "fcfdd18d1bfd5f94e1ca26a820dd11e5d381a587", "filename": "gcc/tree-ssa-ccp.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1cdaa211989e0de46e77f46d42367c42f9a0831c/gcc%2Ftree-ssa-ccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1cdaa211989e0de46e77f46d42367c42f9a0831c/gcc%2Ftree-ssa-ccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-ccp.c?ref=1cdaa211989e0de46e77f46d42367c42f9a0831c", "patch": "@@ -1,6 +1,6 @@\n /* Conditional constant propagation pass for the GNU compiler.\n-   Copyright (C) 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009\n-   Free Software Foundation, Inc.\n+   Copyright (C) 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009,\n+   2010 Free Software Foundation, Inc.\n    Adapted from original RTL SSA-CCP by Daniel Berlin <dberlin@dberlin.org>\n    Adapted to GIMPLE trees by Diego Novillo <dnovillo@redhat.com>\n \n@@ -558,6 +558,9 @@ likely_value (gimple stmt)\n \thas_constant_operand = true;\n     }\n \n+  if (has_constant_operand)\n+    all_undefined_operands = false;\n+\n   /* If the operation combines operands like COMPLEX_EXPR make sure to\n      not mark the result UNDEFINED if only one part of the result is\n      undefined.  */"}]}