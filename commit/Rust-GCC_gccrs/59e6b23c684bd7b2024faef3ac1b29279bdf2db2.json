{"sha": "59e6b23c684bd7b2024faef3ac1b29279bdf2db2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTllNmIyM2M2ODRiZDdiMjAyNGZhZWYzYWMxYjI5Mjc5YmRmMmRiMg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-29T13:21:45Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-29T13:21:45Z"}, "message": "[multiple changes]\n\n2011-08-29  Yannick Moy  <moy@adacore.com>\n\n\t* exp_ch13.adb (Expand_N_Freeze_Entity): Do nothing in Alfa mode.\n\t* exp_ch9.adb: Do not expand tasking constructs in Alfa mode.\n\t* gnat1drv.adb (Adjust_Global_Switches): Suppress the expansion of\n\ttagged types and dispatching calls in Alfa mode.\n\n2011-08-29  Javier Miranda  <miranda@adacore.com>\n\n\t* sem_ch3.adb (Process_Discriminants): Add missing check to ensure that\n\twe do not report an error on an Empty node.\n\n2011-08-29  Geert Bosch  <bosch@adacore.com>\n\n\t* Makefile.rtl (GNATRTL_NONTASKING_OBJECTS): Add a-nllrar.o,\n\ta-nlrear.o and a-nurear.o.\n\n2011-08-29  Robert Dewar  <dewar@adacore.com>\n\n\t* freeze.adb: Minor code reorganization.\n\tMinor reformatting.\n\t* sem_util.adb, errout.adb, exp_ch11.adb, a-ngrear.adb, s-gearop.adb,\n\tsem_ch6.adb: Minor reformatting\n\n2011-08-29  Tristan Gingold  <gingold@adacore.com>\n\n\t* s-except.ads, s-except.adb: Provide dummy body.\n\n2011-08-29  Yannick Moy  <moy@adacore.com>\n\n\t* sem_warn.adb (Within_Postcondition): Take into account the case of\n\tan Ensures component in a Test_Case.\n\nFrom-SVN: r178222", "tree": {"sha": "b8b8f6128e73d0fa5a4ba2d95e6338c5d22c6a2a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b8b8f6128e73d0fa5a4ba2d95e6338c5d22c6a2a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/59e6b23c684bd7b2024faef3ac1b29279bdf2db2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59e6b23c684bd7b2024faef3ac1b29279bdf2db2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/59e6b23c684bd7b2024faef3ac1b29279bdf2db2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59e6b23c684bd7b2024faef3ac1b29279bdf2db2/comments", "author": null, "committer": null, "parents": [{"sha": "4d7925493467572127fa18fb1227dd67e065861c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d7925493467572127fa18fb1227dd67e065861c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d7925493467572127fa18fb1227dd67e065861c"}], "stats": {"total": 346, "additions": 275, "deletions": 71}, "files": [{"sha": "d2010209ec25fb7bf7925211c5201b541afb183f", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59e6b23c684bd7b2024faef3ac1b29279bdf2db2/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59e6b23c684bd7b2024faef3ac1b29279bdf2db2/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=59e6b23c684bd7b2024faef3ac1b29279bdf2db2", "patch": "@@ -1,3 +1,36 @@\n+2011-08-29  Yannick Moy  <moy@adacore.com>\n+\n+\t* exp_ch13.adb (Expand_N_Freeze_Entity): Do nothing in Alfa mode.\n+\t* exp_ch9.adb: Do not expand tasking constructs in Alfa mode.\n+\t* gnat1drv.adb (Adjust_Global_Switches): Suppress the expansion of\n+\ttagged types and dispatching calls in Alfa mode.\n+\n+2011-08-29  Javier Miranda  <miranda@adacore.com>\n+\n+\t* sem_ch3.adb (Process_Discriminants): Add missing check to ensure that\n+\twe do not report an error on an Empty node.\n+\n+2011-08-29  Geert Bosch  <bosch@adacore.com>\n+\n+\t* Makefile.rtl (GNATRTL_NONTASKING_OBJECTS): Add a-nllrar.o,\n+\ta-nlrear.o and a-nurear.o.\n+\n+2011-08-29  Robert Dewar  <dewar@adacore.com>\n+\n+\t* freeze.adb: Minor code reorganization.\n+\tMinor reformatting.\n+\t* sem_util.adb, errout.adb, exp_ch11.adb, a-ngrear.adb, s-gearop.adb,\n+\tsem_ch6.adb: Minor reformatting\n+\n+2011-08-29  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* s-except.ads, s-except.adb: Provide dummy body.\n+\n+2011-08-29  Yannick Moy  <moy@adacore.com>\n+\n+\t* sem_warn.adb (Within_Postcondition): Take into account the case of\n+\tan Ensures component in a Test_Case.\n+\n 2011-08-29  Tristan Gingold  <gingold@adacore.com>\n \n \t* s-excdeb.ads, s-excdeb.adb: New files, created from s-except."}, {"sha": "eac13f7eacd3aa91e99ef4a3d7a961f02a0beefd", "filename": "gcc/ada/Makefile.rtl", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59e6b23c684bd7b2024faef3ac1b29279bdf2db2/gcc%2Fada%2FMakefile.rtl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59e6b23c684bd7b2024faef3ac1b29279bdf2db2/gcc%2Fada%2FMakefile.rtl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMakefile.rtl?ref=59e6b23c684bd7b2024faef3ac1b29279bdf2db2", "patch": "@@ -184,6 +184,9 @@ GNATRTL_NONTASKING_OBJS= \\\n   a-ngcoty$(objext) \\\n   a-ngelfu$(objext) \\\n   a-ngrear$(objext) \\\n+  a-nllrar$(objext) \\\n+  a-nlrear$(objext) \\\n+  a-nurear$(objext) \\\n   a-nlcefu$(objext) \\\n   a-nlcoty$(objext) \\\n   a-nlelfu$(objext) \\"}, {"sha": "8ce8d9a98b0fa9d133d02c8e927343506593700f", "filename": "gcc/ada/a-ngrear.adb", "status": "modified", "additions": 35, "deletions": 43, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59e6b23c684bd7b2024faef3ac1b29279bdf2db2/gcc%2Fada%2Fa-ngrear.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59e6b23c684bd7b2024faef3ac1b29279bdf2db2/gcc%2Fada%2Fa-ngrear.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ngrear.adb?ref=59e6b23c684bd7b2024faef3ac1b29279bdf2db2", "patch": "@@ -48,24 +48,24 @@ package body Ada.Numerics.Generic_Real_Arrays is\n    function Is_Non_Zero (X : Real'Base) return Boolean is (X /= 0.0);\n \n    procedure Back_Substitute is new Ops.Back_Substitute\n-       (Scalar        => Real'Base,\n-        Matrix        => Real_Matrix,\n-        Is_Non_Zero   => Is_Non_Zero);\n+     (Scalar        => Real'Base,\n+      Matrix        => Real_Matrix,\n+      Is_Non_Zero   => Is_Non_Zero);\n \n    function Diagonal is new Ops.Diagonal\n-        (Scalar       => Real'Base,\n-         Vector       => Real_Vector,\n-         Matrix       => Real_Matrix);\n+     (Scalar       => Real'Base,\n+      Vector       => Real_Vector,\n+      Matrix       => Real_Matrix);\n \n    procedure Forward_Eliminate is new Ops.Forward_Eliminate\n-       (Scalar        => Real'Base,\n-        Matrix        => Real_Matrix,\n-        Zero          => 0.0,\n-        One           => 1.0);\n+    (Scalar        => Real'Base,\n+     Matrix        => Real_Matrix,\n+     Zero          => 0.0,\n+     One           => 1.0);\n \n    procedure Swap_Column is new Ops.Swap_Column\n-       (Scalar        => Real'Base,\n-        Matrix        => Real_Matrix);\n+    (Scalar        => Real'Base,\n+     Matrix        => Real_Matrix);\n \n    procedure Transpose is new  Ops.Transpose\n        (Scalar        => Real'Base,\n@@ -100,7 +100,7 @@ package body Ada.Numerics.Generic_Real_Arrays is\n    --  Sort Values and associated Vectors by decreasing absolute value\n \n    procedure Swap (Left, Right : in out Real);\n-   --  Exchange Left and Right.\n+   --  Exchange Left and Right\n \n    function Sqrt (X : Real) return Real;\n    --  Sqrt is implemented locally here, in order to avoid dragging in all of\n@@ -132,7 +132,6 @@ package body Ada.Numerics.Generic_Real_Arrays is\n       if not (X > 0.0) then\n          if X = 0.0 then\n             return X;\n-\n          else\n             raise Argument_Error;\n          end if;\n@@ -158,9 +157,7 @@ package body Ada.Numerics.Generic_Real_Arrays is\n \n       for J in 1 .. 8 loop\n          Next := (Root + X / Root) / 2.0;\n-\n          exit when Root = Next;\n-\n          Root := Next;\n       end loop;\n \n@@ -401,29 +398,29 @@ package body Ada.Numerics.Generic_Real_Arrays is\n    ---------\n \n    function \"+\" (Right : Real_Vector) return Real_Vector\n-      renames Instantiations.\"+\";\n+     renames Instantiations.\"+\";\n \n    function \"+\" (Right : Real_Matrix) return Real_Matrix\n-      renames Instantiations.\"+\";\n+     renames Instantiations.\"+\";\n \n    function \"+\" (Left, Right : Real_Vector) return Real_Vector\n-      renames Instantiations.\"+\";\n+     renames Instantiations.\"+\";\n \n    function \"+\" (Left, Right : Real_Matrix) return Real_Matrix\n-      renames Instantiations.\"+\";\n+     renames Instantiations.\"+\";\n \n    ---------\n    -- \"-\" --\n    ---------\n \n    function \"-\" (Right : Real_Vector) return Real_Vector\n-      renames Instantiations.\"-\";\n+     renames Instantiations.\"-\";\n \n    function \"-\" (Right : Real_Matrix) return Real_Matrix\n-      renames Instantiations.\"-\";\n+     renames Instantiations.\"-\";\n \n    function \"-\" (Left, Right : Real_Vector) return Real_Vector\n-      renames Instantiations.\"-\";\n+     renames Instantiations.\"-\";\n \n    function \"-\" (Left, Right : Real_Matrix) return Real_Matrix\n       renames Instantiations.\"-\";\n@@ -435,58 +432,58 @@ package body Ada.Numerics.Generic_Real_Arrays is\n    --  Scalar multiplication\n \n    function \"*\" (Left : Real'Base; Right : Real_Vector) return Real_Vector\n-      renames Instantiations.\"*\";\n+     renames Instantiations.\"*\";\n \n    function \"*\" (Left : Real_Vector; Right : Real'Base) return Real_Vector\n-      renames Instantiations.\"*\";\n+     renames Instantiations.\"*\";\n \n    function \"*\" (Left : Real'Base; Right : Real_Matrix) return Real_Matrix\n-      renames Instantiations.\"*\";\n+     renames Instantiations.\"*\";\n \n    function \"*\" (Left : Real_Matrix; Right : Real'Base) return Real_Matrix\n-      renames Instantiations.\"*\";\n+     renames Instantiations.\"*\";\n \n    --  Vector multiplication\n \n    function \"*\" (Left, Right : Real_Vector) return Real'Base\n-      renames Instantiations.\"*\";\n+     renames Instantiations.\"*\";\n \n    function \"*\" (Left, Right : Real_Vector) return Real_Matrix\n-      renames Instantiations.\"*\";\n+     renames Instantiations.\"*\";\n \n    function \"*\" (Left : Real_Vector; Right : Real_Matrix) return Real_Vector\n-      renames Instantiations.\"*\";\n+     renames Instantiations.\"*\";\n \n    function \"*\" (Left : Real_Matrix; Right : Real_Vector) return Real_Vector\n-      renames Instantiations.\"*\";\n+     renames Instantiations.\"*\";\n \n    --  Matrix Multiplication\n \n    function \"*\" (Left, Right : Real_Matrix) return Real_Matrix\n-      renames Instantiations.\"*\";\n+     renames Instantiations.\"*\";\n \n    ---------\n    -- \"/\" --\n    ---------\n \n    function \"/\" (Left : Real_Vector; Right : Real'Base) return Real_Vector\n-      renames Instantiations.\"/\";\n+     renames Instantiations.\"/\";\n \n    function \"/\" (Left : Real_Matrix; Right : Real'Base) return Real_Matrix\n-      renames Instantiations.\"/\";\n+     renames Instantiations.\"/\";\n \n    -----------\n    -- \"abs\" --\n    -----------\n \n    function \"abs\" (Right : Real_Vector) return Real'Base\n-      renames Instantiations.\"abs\";\n+     renames Instantiations.\"abs\";\n \n    function \"abs\" (Right : Real_Vector) return Real_Vector\n-      renames Instantiations.\"abs\";\n+     renames Instantiations.\"abs\";\n \n    function \"abs\" (Right : Real_Matrix) return Real_Matrix\n-      renames Instantiations.\"abs\";\n+     renames Instantiations.\"abs\";\n \n    -----------------\n    -- Determinant --\n@@ -496,10 +493,8 @@ package body Ada.Numerics.Generic_Real_Arrays is\n       M : Real_Matrix := A;\n       B : Real_Matrix (A'Range (1), 1 .. 0);\n       R : Real'Base;\n-\n    begin\n       Forward_Eliminate (M, B, R);\n-\n       return R;\n    end Determinant;\n \n@@ -527,7 +522,6 @@ package body Ada.Numerics.Generic_Real_Arrays is\n    begin\n       Jacobi (A, Values, Vectors, Compute_Vectors => False);\n       Sort_Eigensystem (Values, Vectors);\n-\n       return Values;\n    end Eigenvalues;\n \n@@ -574,7 +568,6 @@ package body Ada.Numerics.Generic_Real_Arrays is\n       --        values of type Real.\n \n       Max_Iterations  : constant := 50;\n-\n       N               : constant Natural := Length (A);\n \n       subtype Square_Matrix is Real_Matrix (1 .. N, 1 .. N);\n@@ -606,6 +599,7 @@ package body Ada.Numerics.Generic_Real_Arrays is\n \n       function Sum_Strict_Upper (M : Square_Matrix) return Real is\n          Sum : Real := 0.0;\n+\n       begin\n          for Row in 1 .. N - 1 loop\n             for Col in Row + 1 .. N loop\n@@ -803,7 +797,6 @@ package body Ada.Numerics.Generic_Real_Arrays is\n      (Values  : in out Real_Vector;\n       Vectors : in out Real_Matrix)\n    is\n-\n       procedure Swap (Left, Right : Integer);\n       --  Swap Values (Left) with Values (Right), and also swap the\n       --  corresponding eigenvectors. Note that lowerbounds may differ.\n@@ -834,7 +827,6 @@ package body Ada.Numerics.Generic_Real_Arrays is\n       R : Real_Matrix (X'Range (2), X'Range (1));\n    begin\n       Transpose (X, R);\n-\n       return R;\n    end Transpose;\n "}, {"sha": "39d73027840ee684d2da917cca66b7e391f784e0", "filename": "gcc/ada/errout.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59e6b23c684bd7b2024faef3ac1b29279bdf2db2/gcc%2Fada%2Ferrout.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59e6b23c684bd7b2024faef3ac1b29279bdf2db2/gcc%2Fada%2Ferrout.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.adb?ref=59e6b23c684bd7b2024faef3ac1b29279bdf2db2", "patch": "@@ -2833,7 +2833,7 @@ package body Errout is\n       elsif Msg = \"size for& too small, minimum allowed is ^\" then\n \n          --  Suppress \"size too small\" errors in CodePeer mode and ALFA mode,\n-         --  since pragma Pack is also ignored in this configuration.\n+         --  since pragma Pack is also ignored in these configurations.\n \n          if CodePeer_Mode or ALFA_Mode then\n             return True;"}, {"sha": "5238a1c7c0c9438152f340db2f43a67072c5838e", "filename": "gcc/ada/exp_ch11.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59e6b23c684bd7b2024faef3ac1b29279bdf2db2/gcc%2Fada%2Fexp_ch11.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59e6b23c684bd7b2024faef3ac1b29279bdf2db2/gcc%2Fada%2Fexp_ch11.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch11.adb?ref=59e6b23c684bd7b2024faef3ac1b29279bdf2db2", "patch": "@@ -1665,7 +1665,6 @@ package body Exp_Ch11 is\n       --  does not have a choice parameter specification, then we provide one.\n \n       else\n-\n          --  Bypass expansion to a run-time call when back-end exception\n          --  handling is active, unless the target is a VM or CodePeer.\n "}, {"sha": "068ba582bb33e69dbf0f934dcd59a88678b891ba", "filename": "gcc/ada/exp_ch13.adb", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59e6b23c684bd7b2024faef3ac1b29279bdf2db2/gcc%2Fada%2Fexp_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59e6b23c684bd7b2024faef3ac1b29279bdf2db2/gcc%2Fada%2Fexp_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch13.adb?ref=59e6b23c684bd7b2024faef3ac1b29279bdf2db2", "patch": "@@ -307,6 +307,13 @@ package body Exp_Ch13 is\n       Delete         : Boolean := False;\n \n    begin\n+      --  In formal verification mode, do not generate useless and confusing\n+      --  expansion for freeze nodes.\n+\n+      if ALFA_Mode then\n+         return;\n+      end if;\n+\n       --  If there are delayed aspect specifications, we insert them just\n       --  before the freeze node. They are already analyzed so we don't need\n       --  to reanalyze them (they were analyzed before the type was frozen),"}, {"sha": "2dc78e9d98ac3f337b77096fe8f32daf5acf2b06", "filename": "gcc/ada/exp_ch7.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59e6b23c684bd7b2024faef3ac1b29279bdf2db2/gcc%2Fada%2Fexp_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59e6b23c684bd7b2024faef3ac1b29279bdf2db2/gcc%2Fada%2Fexp_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.adb?ref=59e6b23c684bd7b2024faef3ac1b29279bdf2db2", "patch": "@@ -7440,8 +7440,8 @@ package body Exp_Ch7 is\n    ------------------------------------\n \n    function Make_Set_Finalize_Address_Call\n-     (Loc : Source_Ptr;\n-      Typ   : Entity_Id;\n+     (Loc     : Source_Ptr;\n+      Typ     : Entity_Id;\n       Ptr_Typ : Entity_Id) return Node_Id\n    is\n       Desig_Typ : constant Entity_Id :=\n@@ -7502,12 +7502,12 @@ package body Exp_Ch7 is\n \n       return\n         Make_Procedure_Call_Statement (Loc,\n-          Name =>\n+          Name                   =>\n             New_Reference_To (RTE (RE_Set_Finalize_Address), Loc),\n           Parameter_Associations => New_List (\n             New_Reference_To (Finalization_Master (Ptr_Typ), Loc),\n             Make_Attribute_Reference (Loc,\n-              Prefix =>\n+              Prefix         =>\n                 New_Reference_To (TSS (Utyp, TSS_Finalize_Address), Loc),\n               Attribute_Name => Name_Unrestricted_Access)));\n    end Make_Set_Finalize_Address_Call;"}, {"sha": "9ec2e441c7365aa66dce8086a0631fc819ab4887", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 96, "deletions": 0, "changes": 96, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59e6b23c684bd7b2024faef3ac1b29279bdf2db2/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59e6b23c684bd7b2024faef3ac1b29279bdf2db2/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=59e6b23c684bd7b2024faef3ac1b29279bdf2db2", "patch": "@@ -5290,6 +5290,12 @@ package body Exp_Ch9 is\n       Tasknm : Node_Id;\n \n    begin\n+      --  Do not expand tasking constructs in formal verification mode\n+\n+      if ALFA_Mode then\n+         return;\n+      end if;\n+\n       Aggr := Make_Aggregate (Loc, Component_Associations => New_List);\n       Count := 0;\n \n@@ -5421,6 +5427,12 @@ package body Exp_Ch9 is\n    --  Start of processing for Expand_N_Accept_Statement\n \n    begin\n+      --  Do not expand tasking constructs in formal verification mode\n+\n+      if ALFA_Mode then\n+         return;\n+      end if;\n+\n       --  If accept statement is not part of a list, then its parent must be\n       --  an accept alternative, and, as described above, we do not do any\n       --  expansion for such accept statements at this level.\n@@ -5871,6 +5883,12 @@ package body Exp_Ch9 is\n       T   : Entity_Id;  --  Additional status flag\n \n    begin\n+      --  Do not expand tasking constructs in formal verification mode\n+\n+      if ALFA_Mode then\n+         return;\n+      end if;\n+\n       Process_Statements_For_Controlled_Objects (Trig);\n       Process_Statements_For_Controlled_Objects (Abrt);\n \n@@ -6820,6 +6838,12 @@ package body Exp_Ch9 is\n       S : Entity_Id;  --  Primitive operation slot\n \n    begin\n+      --  Do not expand tasking constructs in formal verification mode\n+\n+      if ALFA_Mode then\n+         return;\n+      end if;\n+\n       Process_Statements_For_Controlled_Objects (N);\n \n       if Ada_Version >= Ada_2005\n@@ -7136,6 +7160,12 @@ package body Exp_Ch9 is\n    procedure Expand_N_Delay_Relative_Statement (N : Node_Id) is\n       Loc : constant Source_Ptr := Sloc (N);\n    begin\n+      --  Do not expand tasking constructs in formal verification mode\n+\n+      if ALFA_Mode then\n+         return;\n+      end if;\n+\n       Rewrite (N,\n         Make_Procedure_Call_Statement (Loc,\n           Name => New_Reference_To (RTE (RO_CA_Delay_For), Loc),\n@@ -7155,6 +7185,12 @@ package body Exp_Ch9 is\n       Typ : Entity_Id;\n \n    begin\n+      --  Do not expand tasking constructs in formal verification mode\n+\n+      if ALFA_Mode then\n+         return;\n+      end if;\n+\n       if Is_RTE (Base_Type (Etype (Expression (N))), RO_CA_Time) then\n          Typ := RTE (RO_CA_Delay_Until);\n       else\n@@ -7175,6 +7211,12 @@ package body Exp_Ch9 is\n \n    procedure Expand_N_Entry_Body (N : Node_Id) is\n    begin\n+      --  Do not expand tasking constructs in formal verification mode\n+\n+      if ALFA_Mode then\n+         return;\n+      end if;\n+\n       --  Associate discriminals with the next protected operation body to be\n       --  expanded.\n \n@@ -7196,6 +7238,12 @@ package body Exp_Ch9 is\n       Index   : Node_Id;\n \n    begin\n+      --  Do not expand tasking constructs in formal verification mode\n+\n+      if ALFA_Mode then\n+         return;\n+      end if;\n+\n       if No_Run_Time_Mode then\n          Error_Msg_CRT (\"entry call\", N);\n          return;\n@@ -7252,6 +7300,12 @@ package body Exp_Ch9 is\n       Acc_Ent    : Entity_Id;\n \n    begin\n+      --  Do not expand tasking constructs in formal verification mode\n+\n+      if ALFA_Mode then\n+         return;\n+      end if;\n+\n       Formal := First_Formal (Entry_Ent);\n       Last_Decl := N;\n \n@@ -7520,6 +7574,12 @@ package body Exp_Ch9 is\n    --  Start of processing for Expand_N_Protected_Body\n \n    begin\n+      --  Do not expand tasking constructs in formal verification mode\n+\n+      if ALFA_Mode then\n+         return;\n+      end if;\n+\n       if No_Run_Time_Mode then\n          Error_Msg_CRT (\"protected body\", N);\n          return;\n@@ -7870,6 +7930,12 @@ package body Exp_Ch9 is\n    --  Start of processing for Expand_N_Protected_Type_Declaration\n \n    begin\n+      --  Do not expand tasking constructs in formal verification mode\n+\n+      if ALFA_Mode then\n+         return;\n+      end if;\n+\n       if Present (Corresponding_Record_Type (Prot_Typ)) then\n          return;\n       else\n@@ -9072,6 +9138,12 @@ package body Exp_Ch9 is\n    --  Start of processing for Expand_N_Requeue_Statement\n \n    begin\n+      --  Do not expand tasking constructs in formal verification mode\n+\n+      if ALFA_Mode then\n+         return;\n+      end if;\n+\n       --  Extract the components of the entry call\n \n       Extract_Entry (N, Concval, Ename, Index);\n@@ -9658,6 +9730,12 @@ package body Exp_Ch9 is\n    --  Start of processing for Expand_N_Selective_Accept\n \n    begin\n+      --  Do not expand tasking constructs in formal verification mode\n+\n+      if ALFA_Mode then\n+         return;\n+      end if;\n+\n       Process_Statements_For_Controlled_Objects (N);\n \n       --  First insert some declarations before the select. The first is:\n@@ -10288,6 +10366,12 @@ package body Exp_Ch9 is\n       --  Used to determine the proper location of wrapper body insertions\n \n    begin\n+      --  Do not expand tasking constructs in formal verification mode\n+\n+      if ALFA_Mode then\n+         return;\n+      end if;\n+\n       --  Add renaming declarations for discriminals and a declaration for the\n       --  entry family index (if applicable).\n \n@@ -10493,6 +10577,12 @@ package body Exp_Ch9 is\n       Decl_Stack : Node_Id;\n \n    begin\n+      --  Do not expand tasking constructs in formal verification mode\n+\n+      if ALFA_Mode then\n+         return;\n+      end if;\n+\n       --  If already expanded, nothing to do\n \n       if Present (Corresponding_Record_Type (Tasktyp)) then\n@@ -11034,6 +11124,12 @@ package body Exp_Ch9 is\n       S : Entity_Id;  --  Primitive operation slot\n \n    begin\n+      --  Do not expand tasking constructs in formal verification mode\n+\n+      if ALFA_Mode then\n+         return;\n+      end if;\n+\n       --  Under the Ravenscar profile, timed entry calls are excluded. An error\n       --  was already reported on spec, so do not attempt to expand the call.\n "}, {"sha": "7fae15526cb9d9ec6d683463e8c39588933ff716", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59e6b23c684bd7b2024faef3ac1b29279bdf2db2/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59e6b23c684bd7b2024faef3ac1b29279bdf2db2/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=59e6b23c684bd7b2024faef3ac1b29279bdf2db2", "patch": "@@ -2247,13 +2247,12 @@ package body Freeze is\n            and then RM_Size (Rec) >= Scalar_Component_Total_RM_Size\n \n            --  Never do implicit packing in CodePeer or ALFA modes since\n-           --  we don't do any packing in this mode, since this generates\n+           --  we don't do any packing in these modes, since this generates\n            --  over-complex code that confuses static analysis, and in\n            --  general, neither CodePeer not GNATprove care about the\n            --  internal representation of objects.\n \n-           and then not CodePeer_Mode\n-           and then not ALFA_Mode\n+           and then not (CodePeer_Mode or ALFA_Mode)\n          then\n             --  If implicit packing enabled, do it\n \n@@ -3067,8 +3066,7 @@ package body Freeze is\n                     and then not Is_Limited_Composite (E)\n                     and then not Is_Packed (Root_Type (E))\n                     and then not Has_Component_Size_Clause (Root_Type (E))\n-                    and then not CodePeer_Mode\n-                    and then not ALFA_Mode\n+                    and then not (CodePeer_Mode or ALFA_Mode)\n                   then\n                      Get_Index_Bounds (First_Index (E), Lo, Hi);\n "}, {"sha": "3924190a2508660fbcb8072bee99c8b6882c1485", "filename": "gcc/ada/gnat1drv.adb", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59e6b23c684bd7b2024faef3ac1b29279bdf2db2/gcc%2Fada%2Fgnat1drv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59e6b23c684bd7b2024faef3ac1b29279bdf2db2/gcc%2Fada%2Fgnat1drv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat1drv.adb?ref=59e6b23c684bd7b2024faef3ac1b29279bdf2db2", "patch": "@@ -455,14 +455,18 @@ procedure Gnat1drv is\n \n          Reset_Style_Check_Options;\n \n-         --  Suppress compiler warnings, since what we are\n-         --  interested in here is what formal verification can find out.\n+         --  Suppress compiler warnings, since what we are interested in here\n+         --  is what formal verification can find out.\n \n          Warning_Mode := Suppress;\n \n          --  Suppress the generation of name tables for enumerations\n \n          Global_Discard_Names := True;\n+\n+         --  Suppress the expansion of tagged types and dispatching calls\n+\n+         Tagged_Type_Expansion := False;\n       end if;\n    end Adjust_Global_Switches;\n "}, {"sha": "a0e33d769dff75bc374104ffcac34db3dd698110", "filename": "gcc/ada/lib-xref.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59e6b23c684bd7b2024faef3ac1b29279bdf2db2/gcc%2Fada%2Flib-xref.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59e6b23c684bd7b2024faef3ac1b29279bdf2db2/gcc%2Fada%2Flib-xref.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-xref.ads?ref=59e6b23c684bd7b2024faef3ac1b29279bdf2db2", "patch": "@@ -596,6 +596,7 @@ package Lib.Xref is\n         (CU           : Node_Id;\n          Process      : Node_Processing;\n          Inside_Stubs : Boolean);\n+      --  This procedure is undocumented ???\n \n       procedure Traverse_All_Compilation_Units (Process : Node_Processing);\n       --  Call Process on all declarations through all compilation units"}, {"sha": "76a028e66cd4afcb57d68de54baec3f1c4d46faa", "filename": "gcc/ada/prj-conf.adb", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59e6b23c684bd7b2024faef3ac1b29279bdf2db2/gcc%2Fada%2Fprj-conf.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59e6b23c684bd7b2024faef3ac1b29279bdf2db2/gcc%2Fada%2Fprj-conf.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-conf.adb?ref=59e6b23c684bd7b2024faef3ac1b29279bdf2db2", "patch": "@@ -722,7 +722,7 @@ package body Prj.Conf is\n          --  Hash table to keep the languages used in the project tree\n \n          IDE : constant Package_Id :=\n-           Value_Of (Name_Ide, Project.Decl.Packages, Shared);\n+                 Value_Of (Name_Ide, Project.Decl.Packages, Shared);\n \n          procedure Add_Config_Switches_For_Project\n            (Project    : Project_Id;\n@@ -744,6 +744,7 @@ package body Prj.Conf is\n             Lang          : Name_Id;\n             List          : String_List_Id;\n             Elem          : String_Element;\n+\n          begin\n             if Might_Have_Sources (Project) then\n                Variable :=\n@@ -813,13 +814,18 @@ package body Prj.Conf is\n \n          procedure For_Every_Imported_Project is new For_Every_Project_Imported\n            (State => Integer, Action => Add_Config_Switches_For_Project);\n+         --  Document this procedure ???\n+\n+         --  Local variables\n \n          Name     : Name_Id;\n          Count    : Natural;\n          Result   : Argument_List_Access;\n          Variable : Variable_Value;\n          Dummy    : Integer := 0;\n \n+      --  Start of processing for Get_Config_Switches\n+\n       begin\n          For_Every_Imported_Project\n            (By         => Project,\n@@ -839,6 +845,7 @@ package body Prj.Conf is\n          Count := 1;\n          Name  := Language_Htable.Get_First;\n          while Name /= No_Name loop\n+\n             --  Check if IDE'Compiler_Command is declared for the language.\n             --  If it is, use its value to invoke gprconfig.\n "}, {"sha": "9e0b27cdd6d4846289a2849ca50a6568b7b4d582", "filename": "gcc/ada/s-except.adb", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59e6b23c684bd7b2024faef3ac1b29279bdf2db2/gcc%2Fada%2Fs-except.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59e6b23c684bd7b2024faef3ac1b29279bdf2db2/gcc%2Fada%2Fs-except.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-except.adb?ref=59e6b23c684bd7b2024faef3ac1b29279bdf2db2", "patch": "@@ -29,4 +29,17 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-pragma No_Body;\n+--  This package does not require a body, since it is a package renaming. We\n+--  provide a dummy file containing a No_Body pragma so that previous versions\n+--  of the body (which did exist) will not interfere.\n+\n+--  pragma No_Body;\n+\n+--  The above pragma is commented out, since for now we can't use No_Body in\n+--  a unit marked as a Compiler_Unit, since this requires GNAT 6.1, and we\n+--  do not yet require this for bootstrapping. So instead we use a dummy Taft\n+--  amendment type to require the body:\n+\n+package body System.Exceptions is\n+   type Require_Body is new Integer;\n+end System.Exceptions;"}, {"sha": "f0da1e520d3fe21ad227f41971ee44dabd250493", "filename": "gcc/ada/s-except.ads", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59e6b23c684bd7b2024faef3ac1b29279bdf2db2/gcc%2Fada%2Fs-except.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59e6b23c684bd7b2024faef3ac1b29279bdf2db2/gcc%2Fada%2Fs-except.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-except.ads?ref=59e6b23c684bd7b2024faef3ac1b29279bdf2db2", "patch": "@@ -40,6 +40,21 @@ package System.Exceptions is\n    --  Visible copy to allow Ada.Exceptions to know the exception model.\n \n private\n+   type Require_Body;\n+   --  Dummy Taft-amendment type to make it legal (and required) to provide\n+   --  a body for this package.\n+   --\n+   --  We do this because this unit used to have a body in earlier versions\n+   --  of GNAT, and it causes various bootstrap path problems etc if we remove\n+   --  a body, since we may pick up old unwanted bodies.\n+   --\n+   --  Note: we use this standard Ada method of requiring a body rather\n+   --  than the cleaner pragma No_Body because System.Exceptions is a compiler\n+   --  unit, and older bootstrap compilers do not support pragma No_Body. This\n+   --  type can be removed, and s-except.adb can be replaced by a source\n+   --  containing just that pragma, when we decide to move to a 2008 compiler\n+   --  as the minimal bootstrap compiler version. ???\n+\n    ZCX_By_Default : constant Boolean := System.ZCX_By_Default;\n \n    Foreign_Exception : exception;"}, {"sha": "cb07f40902efc2c847025ed8041eb1d73a264c7a", "filename": "gcc/ada/s-gearop.adb", "status": "modified", "additions": 25, "deletions": 5, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59e6b23c684bd7b2024faef3ac1b29279bdf2db2/gcc%2Fada%2Fs-gearop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59e6b23c684bd7b2024faef3ac1b29279bdf2db2/gcc%2Fada%2Fs-gearop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-gearop.adb?ref=59e6b23c684bd7b2024faef3ac1b29279bdf2db2", "patch": "@@ -101,29 +101,35 @@ package body System.Generic_Array_Operations is\n    procedure Back_Substitute (M, N : in out Matrix) is\n       pragma Assert (M'First (1) = N'First (1) and then\n                      M'Last  (1) = N'Last (1));\n+\n       Max_Col : Integer := M'Last (2);\n \n       procedure Sub_Row\n         (M      : in out Matrix;\n          Target : Integer;\n          Source : Integer;\n          Factor : Scalar);\n+      --  Needs comments ???\n \n       procedure Sub_Row\n         (M      : in out Matrix;\n          Target : Integer;\n          Source : Integer;\n-         Factor : Scalar) is\n+         Factor : Scalar)\n+      is\n       begin\n          for J in M'Range (2) loop\n             M (Target, J) := M (Target, J) - Factor * M (Source, J);\n          end loop;\n       end Sub_Row;\n \n+   --  Start of processing for Back_Substitute\n+\n    begin\n       for Row in reverse M'Range (1) loop\n          Find_Non_Zero : for Col in M'First (2) .. Max_Col loop\n             if Is_Non_Zero (M (Row, Col)) then\n+\n                --  Found first non-zero element, so subtract a multiple\n                --  of this row from all higher rows, to reduce all other\n                --  elements in this column to zero.\n@@ -160,16 +166,19 @@ package body System.Generic_Array_Operations is\n          Target : Integer;\n          Source : Integer;\n          Factor : Scalar);\n+      --  Needs commenting ???\n \n       procedure Divide_Row\n         (M, N  : in out Matrix;\n          Row   : Integer;\n          Scale : Scalar);\n+      --  Needs commenting ???\n \n       procedure Switch_Row\n         (M, N  : in out Matrix;\n          Row_1 : Integer;\n          Row_2 : Integer);\n+      --  Needs commenting ???\n \n       -------------\n       -- Sub_Row --\n@@ -179,7 +188,8 @@ package body System.Generic_Array_Operations is\n         (M      : in out Matrix;\n          Target : Integer;\n          Source : Integer;\n-         Factor : Scalar) is\n+         Factor : Scalar)\n+         is\n       begin\n          for J in M'Range (2) loop\n             M (Target, J) := M (Target, J) - Factor * M (Source, J);\n@@ -227,6 +237,8 @@ package body System.Generic_Array_Operations is\n             Y := T;\n          end Swap;\n \n+      --  Start of processing for Switch_Row\n+\n       begin\n          if Row_1 /= Row_2 then\n             Det := Zero - Det;\n@@ -242,17 +254,22 @@ package body System.Generic_Array_Operations is\n          end if;\n       end Switch_Row;\n \n-      I   : Integer := M'First (1);\n+      I : Integer := M'First (1);\n+      --  Avoid use of I ???\n+\n+   --  Start of processing for Forward_Eliminate\n \n-   begin -- Forward_Eliminate\n+   begin\n       Det := One;\n \n       for J in M'Range (2) loop\n          declare\n             Max_I   : Integer := I;\n             Max_Abs : Scalar := Zero;\n+\n          begin\n-            --  Find best pivot in column J, starting in row I.\n+            --  Find best pivot in column J, starting in row I\n+\n             for K in I .. M'Last (1) loop\n                declare\n                   New_Abs : constant Scalar := abs M (K, J);\n@@ -359,6 +376,7 @@ package body System.Generic_Array_Operations is\n       return Result_Matrix\n    is\n       R : Result_Matrix (Left'Range (1), Left'Range (2));\n+\n    begin\n       if Left'Length (1) /= Right'Length (1)\n         or else Left'Length (2) /= Right'Length (2)\n@@ -557,6 +575,7 @@ package body System.Generic_Array_Operations is\n          for K in R'Range (2) loop\n             declare\n                S : Result_Scalar := Zero;\n+\n             begin\n                for M in Left'Range (2) loop\n                   S := S + Left (J, M)\n@@ -590,6 +609,7 @@ package body System.Generic_Array_Operations is\n       for J in Left'Range (1) loop\n          declare\n             S : Result_Scalar := Zero;\n+\n          begin\n             for K in Left'Range (2) loop\n                S := S + Left (J, K) * Right (K - Left'First (2) + Right'First);"}, {"sha": "34c063d3c975a7de4fe722b9d8b98700be4df469", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59e6b23c684bd7b2024faef3ac1b29279bdf2db2/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59e6b23c684bd7b2024faef3ac1b29279bdf2db2/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=59e6b23c684bd7b2024faef3ac1b29279bdf2db2", "patch": "@@ -17237,9 +17237,8 @@ package body Sem_Ch3 is\n             --  worst, and therefore defaults are not allowed if the parent is\n             --  a generic formal private type (see ACATS B370001).\n \n-            if Is_Access_Type (Discr_Type) then\n+            if Is_Access_Type (Discr_Type) and then Default_Present then\n                if Ekind (Discr_Type) /= E_Anonymous_Access_Type\n-                 or else not Default_Present\n                  or else Is_Limited_Record (Current_Scope)\n                  or else Is_Concurrent_Type (Current_Scope)\n                  or else Is_Concurrent_Record_Type (Current_Scope)"}, {"sha": "afd03c2d51f945d05e2f77c5d68be5b0e70886aa", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59e6b23c684bd7b2024faef3ac1b29279bdf2db2/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59e6b23c684bd7b2024faef3ac1b29279bdf2db2/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=59e6b23c684bd7b2024faef3ac1b29279bdf2db2", "patch": "@@ -7052,8 +7052,13 @@ package body Sem_Ch6 is\n       function Controlling_Formal (Prim : Entity_Id) return Entity_Id;\n       --  Return the controlling formal of Prim\n \n+      ------------------------\n+      -- Controlling_Formal --\n+      ------------------------\n+\n       function Controlling_Formal (Prim : Entity_Id) return Entity_Id is\n          E : Entity_Id := First_Entity (Prim);\n+\n       begin\n          while Present (E) loop\n             if Is_Formal (E) and then Is_Controlling_Formal (E) then"}, {"sha": "3072f6a3522ff7b154f468e140feec0344255fab", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59e6b23c684bd7b2024faef3ac1b29279bdf2db2/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59e6b23c684bd7b2024faef3ac1b29279bdf2db2/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=59e6b23c684bd7b2024faef3ac1b29279bdf2db2", "patch": "@@ -7953,8 +7953,8 @@ package body Sem_Util is\n    --------------------------------------------------\n \n    function Is_Subprogram_Stub_Without_Prior_Declaration\n-     (N : Node_Id) return Boolean is\n-\n+     (N : Node_Id) return Boolean\n+   is\n    begin\n       --  A subprogram stub without prior declaration serves as declaration for\n       --  the actual subprogram body. As such, it has an attached defining"}, {"sha": "d58a14d7bca23586b5bac9dd17ea4c4e88df1a4a", "filename": "gcc/ada/sem_warn.adb", "status": "modified", "additions": 16, "deletions": 4, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59e6b23c684bd7b2024faef3ac1b29279bdf2db2/gcc%2Fada%2Fsem_warn.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59e6b23c684bd7b2024faef3ac1b29279bdf2db2/gcc%2Fada%2Fsem_warn.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_warn.adb?ref=59e6b23c684bd7b2024faef3ac1b29279bdf2db2", "patch": "@@ -1748,14 +1748,15 @@ package body Sem_Warn is\n                      SE : constant Entity_Id := Scope (E);\n \n                      function Within_Postcondition return Boolean;\n-                     --  Returns True iff N is within a Precondition\n+                     --  Returns True iff N is within a Postcondition or\n+                     --  Ensures component in a Test_Case.\n \n                      --------------------------\n                      -- Within_Postcondition --\n                      --------------------------\n \n                      function Within_Postcondition return Boolean is\n-                        Nod : Node_Id;\n+                        Nod, P : Node_Id;\n \n                      begin\n                         Nod := Parent (N);\n@@ -1764,6 +1765,17 @@ package body Sem_Warn is\n                              and then Pragma_Name (Nod) = Name_Postcondition\n                            then\n                               return True;\n+\n+                           elsif Present (Parent (Nod)) then\n+                              P := Parent (Nod);\n+\n+                              if Nkind (P) = N_Pragma\n+                                and then Pragma_Name (P) = Name_Test_Case\n+                                and then\n+                                  Nod = Get_Ensures_From_Test_Case_Pragma (P)\n+                              then\n+                                 return True;\n+                              end if;\n                            end if;\n \n                            Nod := Parent (Nod);\n@@ -1893,8 +1905,8 @@ package body Sem_Warn is\n                      end if;\n \n                      --  One more check, don't bother if we are within a\n-                     --  postcondition pragma, since the expression occurs\n-                     --  in a place unrelated to the actual test.\n+                     --  postcondition, since the expression occurs in a\n+                     --  place unrelated to the actual test.\n \n                      if not Within_Postcondition then\n "}]}