{"sha": "1e873922f0d4fa08448d49c6f5333ffa67fe4704", "node_id": "C_kwDOANBUbNoAKDFlODczOTIyZjBkNGZhMDg0NDhkNDljNmY1MzMzZmZhNjdmZTQ3MDQ", "commit": {"author": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2022-03-17T09:38:07Z"}, "committer": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2022-03-17T09:38:07Z"}, "message": "ast: Add Kind::MACRO_INVOCATION and cleanup fatal errors in lowering\nmacro invocations", "tree": {"sha": "68f2a333968608cb17793de209d6e2e0109b1a12", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/68f2a333968608cb17793de209d6e2e0109b1a12"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1e873922f0d4fa08448d49c6f5333ffa67fe4704", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e873922f0d4fa08448d49c6f5333ffa67fe4704", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e873922f0d4fa08448d49c6f5333ffa67fe4704", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e873922f0d4fa08448d49c6f5333ffa67fe4704/comments", "author": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b776c4953ca125855f37e381ad51ae8ae836247c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b776c4953ca125855f37e381ad51ae8ae836247c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b776c4953ca125855f37e381ad51ae8ae836247c"}], "stats": {"total": 54, "additions": 12, "deletions": 42}, "files": [{"sha": "4cb24109c9a15631c08b23036f810317e84e9c1c", "filename": "gcc/rust/ast/rust-ast.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e873922f0d4fa08448d49c6f5333ffa67fe4704/gcc%2Frust%2Fast%2Frust-ast.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e873922f0d4fa08448d49c6f5333ffa67fe4704/gcc%2Frust%2Fast%2Frust-ast.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fast%2Frust-ast.h?ref=1e873922f0d4fa08448d49c6f5333ffa67fe4704", "patch": "@@ -41,6 +41,7 @@ enum Kind\n {\n   UNKNOWN,\n   MACRO_RULES_DEFINITION,\n+  MACRO_INVOCATION,\n };\n \n // Abstract base class for all AST elements\n@@ -900,7 +901,7 @@ class Item : public Stmt\n class ExprWithoutBlock;\n \n // Base expression AST node - abstract\n-class Expr\n+class Expr : public Node\n {\n public:\n   // Unique pointer custom clone function\n@@ -1073,7 +1074,7 @@ class Pattern\n class TraitBound;\n \n // Base class for types as represented in AST - abstract\n-class Type\n+class Type : public Node\n {\n public:\n   // Unique pointer custom clone function"}, {"sha": "1c5d1020b205b32629173b8e823b710dd5edcd23", "filename": "gcc/rust/ast/rust-macro.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e873922f0d4fa08448d49c6f5333ffa67fe4704/gcc%2Frust%2Fast%2Frust-macro.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e873922f0d4fa08448d49c6f5333ffa67fe4704/gcc%2Frust%2Fast%2Frust-macro.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fast%2Frust-macro.h?ref=1e873922f0d4fa08448d49c6f5333ffa67fe4704", "patch": "@@ -507,6 +507,8 @@ class MacroInvocation : public TypeNoBounds,\n     return ExprWithoutBlock::get_node_id ();\n   }\n \n+  Kind get_ast_kind () const override { return Kind::MACRO_INVOCATION; }\n+\n   NodeId get_macro_node_id () const { return node_id; }\n \n   MacroInvocData &get_invoc_data () { return invoc_data; }"}, {"sha": "1915389948cbf316aab4afb97705ea4bc62f0338", "filename": "gcc/rust/hir/rust-ast-lower-expr.h", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e873922f0d4fa08448d49c6f5333ffa67fe4704/gcc%2Frust%2Fhir%2Frust-ast-lower-expr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e873922f0d4fa08448d49c6f5333ffa67fe4704/gcc%2Frust%2Fhir%2Frust-ast-lower-expr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fhir%2Frust-ast-lower-expr.h?ref=1e873922f0d4fa08448d49c6f5333ffa67fe4704", "patch": "@@ -100,14 +100,6 @@ class ASTLoweringExpr : public ASTLoweringBase\n     return resolver.translated;\n   }\n \n-  void visit (AST::MacroInvocation &expr) override\n-  {\n-    rust_fatal_error (\n-      expr.get_locus (),\n-      \"macro expansion failed: No macro invocation should get lowered to HIR \"\n-      \"as they should disappear during expansion\");\n-  }\n-\n   void visit (AST::TupleIndexExpr &expr) override\n   {\n     HIR::Expr *tuple_expr"}, {"sha": "c9dfd1b65058c230e886d1dc9bc503af1b152479", "filename": "gcc/rust/hir/rust-ast-lower-implitem.h", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e873922f0d4fa08448d49c6f5333ffa67fe4704/gcc%2Frust%2Fhir%2Frust-ast-lower-implitem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e873922f0d4fa08448d49c6f5333ffa67fe4704/gcc%2Frust%2Fhir%2Frust-ast-lower-implitem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fhir%2Frust-ast-lower-implitem.h?ref=1e873922f0d4fa08448d49c6f5333ffa67fe4704", "patch": "@@ -52,14 +52,6 @@ class ASTLowerImplItem : public ASTLoweringBase\n     return resolver.translated;\n   }\n \n-  void visit (AST::MacroInvocation &invoc) override\n-  {\n-    rust_fatal_error (\n-      invoc.get_locus (),\n-      \"macro expansion failed: No macro invocation should get lowered to HIR \"\n-      \"as they should disappear during expansion\");\n-  }\n-\n   void visit (AST::TypeAlias &alias) override\n   {\n     std::vector<std::unique_ptr<HIR::WhereClauseItem> > where_clause_items;\n@@ -316,14 +308,6 @@ class ASTLowerTraitItem : public ASTLoweringBase\n     return resolver.translated;\n   }\n \n-  void visit (AST::MacroInvocation &invoc) override\n-  {\n-    rust_fatal_error (\n-      invoc.get_locus (),\n-      \"macro expansion failed: No macro invocation should get lowered to HIR \"\n-      \"as they should disappear during expansion\");\n-  }\n-\n   void visit (AST::TraitItemFunc &func) override\n   {\n     AST::TraitFunctionDecl &ref = func.get_trait_function_decl ();"}, {"sha": "376e6c2aabc15dfced3ce768eaafb104cf27e450", "filename": "gcc/rust/hir/rust-ast-lower-item.h", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e873922f0d4fa08448d49c6f5333ffa67fe4704/gcc%2Frust%2Fhir%2Frust-ast-lower-item.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e873922f0d4fa08448d49c6f5333ffa67fe4704/gcc%2Frust%2Fhir%2Frust-ast-lower-item.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fhir%2Frust-ast-lower-item.h?ref=1e873922f0d4fa08448d49c6f5333ffa67fe4704", "patch": "@@ -51,14 +51,6 @@ class ASTLoweringItem : public ASTLoweringBase\n     return resolver.translated;\n   }\n \n-  void visit (AST::MacroInvocation &invoc) override\n-  {\n-    rust_fatal_error (\n-      invoc.get_locus (),\n-      \"macro expansion failed: No macro invocation should get lowered to HIR \"\n-      \"as they should disappear during expansion\");\n-  }\n-\n   void visit (AST::Module &module) override\n   {\n     auto crate_num = mappings->get_current_crate ();"}, {"sha": "ede72bd71bff9edd1c0a5356a98b63a98a94605f", "filename": "gcc/rust/hir/rust-ast-lower-stmt.h", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e873922f0d4fa08448d49c6f5333ffa67fe4704/gcc%2Frust%2Fhir%2Frust-ast-lower-stmt.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e873922f0d4fa08448d49c6f5333ffa67fe4704/gcc%2Frust%2Fhir%2Frust-ast-lower-stmt.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fhir%2Frust-ast-lower-stmt.h?ref=1e873922f0d4fa08448d49c6f5333ffa67fe4704", "patch": "@@ -45,14 +45,6 @@ class ASTLoweringStmt : public ASTLoweringBase\n     return resolver.translated;\n   }\n \n-  void visit (AST::MacroInvocation &invoc) override\n-  {\n-    rust_fatal_error (\n-      invoc.get_locus (),\n-      \"macro expansion failed: No macro invocation should get lowered to HIR \"\n-      \"as they should disappear during expansion\");\n-  }\n-\n   void visit (AST::ExprStmtWithBlock &stmt) override\n   {\n     HIR::ExprWithBlock *expr"}, {"sha": "c373ae90a1523e5d74fd1ae54c3e4b46b56c48b2", "filename": "gcc/rust/hir/rust-ast-lower.cc", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e873922f0d4fa08448d49c6f5333ffa67fe4704/gcc%2Frust%2Fhir%2Frust-ast-lower.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e873922f0d4fa08448d49c6f5333ffa67fe4704/gcc%2Frust%2Fhir%2Frust-ast-lower.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fhir%2Frust-ast-lower.cc?ref=1e873922f0d4fa08448d49c6f5333ffa67fe4704", "patch": "@@ -70,6 +70,13 @@ ASTLoweringBlock::visit (AST::BlockExpr &expr)\n       if (s->get_ast_kind () == AST::Kind::MACRO_RULES_DEFINITION)\n \tcontinue;\n \n+      if (s->get_ast_kind () == AST::Kind::MACRO_INVOCATION)\n+\trust_fatal_error (\n+\t  s->get_locus (),\n+\t  \"macro invocations should not get lowered to HIR - At \"\n+\t  \"this point in \"\n+\t  \"the pipeline, they should all have been expanded\");\n+\n       if (block_did_terminate)\n \trust_warning_at (s->get_locus (), 0, \"unreachable statement\");\n "}]}