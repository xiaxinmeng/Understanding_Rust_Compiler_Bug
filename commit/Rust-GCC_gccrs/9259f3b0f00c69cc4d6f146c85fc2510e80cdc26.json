{"sha": "9259f3b0f00c69cc4d6f146c85fc2510e80cdc26", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTI1OWYzYjBmMDBjNjljYzRkNmYxNDZjODVmYzI1MTBlODBjZGMyNg==", "commit": {"author": {"name": "David Edelsohn", "email": "edelsohn@gnu.org", "date": "2003-04-01T18:05:46Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2003-04-01T18:05:46Z"}, "message": "{40x.md,603.md,6xx.md,7450.md,7xx.md,mpc.md, [...]: Change mult_compare to imul_compare.\n\n        * config/rs6000/{40x.md,603.md,6xx.md,7450.md,7xx.md,mpc.md,\n        power4.md,rios1.md,rios2.md,rs64.md}: Change mult_compare to\n        imul_compare.  Add lmul_compare.\n        * config/rs6000/power4.md: Bump some latencies.  Model extra cycle\n        in second pair of dispatch slots.  Model stores more accurately.\n        Tweak multiply model.  Add bypasses for CR instructions dependent\n        on complicated compares.\n        * config/rs6000/rs6000.md (mulsi3): Name imul_compare patterns.\n        (muldi3): Add lmul_compare patterns.\n        * config/rs6000/rs6000.c (rs6000_variable_issue): Move FPLOAD_UX\n        and FPSTORE_UX to split instructions and add COMPARE,\n        DELAYED_COMPARE, IMUL_COMPARE, LMUL_COMPARE, IDIV, LDIV.\n        (rs6000_adjust_cost): Add IMUL_COMPARE and LMUL_COMPARE.\n        (rs6000_rtx_costs): Separate POWER4 multiply case.\n\nFrom-SVN: r65135", "tree": {"sha": "9f7e12feaafa90dcaf089b23a2dd1836d970a254", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9f7e12feaafa90dcaf089b23a2dd1836d970a254"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9259f3b0f00c69cc4d6f146c85fc2510e80cdc26", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9259f3b0f00c69cc4d6f146c85fc2510e80cdc26", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9259f3b0f00c69cc4d6f146c85fc2510e80cdc26", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9259f3b0f00c69cc4d6f146c85fc2510e80cdc26/comments", "author": null, "committer": null, "parents": [{"sha": "7fe317e4eaba64967d11ac62c117c756303a25bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7fe317e4eaba64967d11ac62c117c756303a25bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7fe317e4eaba64967d11ac62c117c756303a25bd"}], "stats": {"total": 345, "additions": 238, "deletions": 107}, "files": [{"sha": "b08ab41f98d6a066282bab97f77b2b7e93f8570a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9259f3b0f00c69cc4d6f146c85fc2510e80cdc26/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9259f3b0f00c69cc4d6f146c85fc2510e80cdc26/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9259f3b0f00c69cc4d6f146c85fc2510e80cdc26", "patch": "@@ -1,3 +1,20 @@\n+2003-04-01  David Edelsohn  <edelsohn@gnu.org>\n+\n+\t* config/rs6000/{40x.md,603.md,6xx.md,7450.md,7xx.md,mpc.md,\n+\tpower4.md,rios1.md,rios2.md,rs64.md}: Change mult_compare to\n+\timul_compare.  Add lmul_compare.\n+\t* config/rs6000/power4.md: Bump some latencies.  Model extra cycle\n+\tin second pair of dispatch slots.  Model stores more accurately.\n+\tTweak multiply model.  Add bypasses for CR instructions dependent\n+\ton complicated compares.\n+\t* config/rs6000/rs6000.md (mulsi3): Name imul_compare patterns.\n+\t(muldi3): Add lmul_compare patterns.\n+\t* config/rs6000/rs6000.c (rs6000_variable_issue): Move FPLOAD_UX\n+\tand FPSTORE_UX to split instructions and add COMPARE,\n+\tDELAYED_COMPARE, IMUL_COMPARE, LMUL_COMPARE, IDIV, LDIV.\n+\t(rs6000_adjust_cost): Add IMUL_COMPARE and LMUL_COMPARE.\n+\t(rs6000_rtx_costs): Separate POWER4 multiply case.\n+\n 2003-04-01  Ulrich Weigand  <uweigand@de.ibm.com>\n \n \t* config/s390/s390.c (s390_fixup_clobbered_return_reg):"}, {"sha": "bfa6955dbc07bc7d35992fe81aa15f33c2c66bdb", "filename": "gcc/config/rs6000/40x.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9259f3b0f00c69cc4d6f146c85fc2510e80cdc26/gcc%2Fconfig%2Frs6000%2F40x.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9259f3b0f00c69cc4d6f146c85fc2510e80cdc26/gcc%2Fconfig%2Frs6000%2F40x.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2F40x.md?ref=9259f3b0f00c69cc4d6f146c85fc2510e80cdc26", "patch": "@@ -46,12 +46,12 @@\n   \"iu_40x,nothing,bpu_40x\")\n \n (define_insn_reservation \"ppc403-imul\" 4\n-  (and (eq_attr \"type\" \"imul,imul2,imul3,mult_compare\")\n+  (and (eq_attr \"type\" \"imul,imul2,imul3,imul_compare\")\n        (eq_attr \"cpu\" \"ppc403\"))\n   \"iu_40x*4\")\n \n (define_insn_reservation \"ppc405-imul\" 5\n-  (and (eq_attr \"type\" \"imul,mult_compare\")\n+  (and (eq_attr \"type\" \"imul,imul_compare\")\n        (eq_attr \"cpu\" \"ppc405\"))\n   \"iu_40x*4\")\n "}, {"sha": "ec206531c037ad8bbe88d313a60b3d919906cab0", "filename": "gcc/config/rs6000/603.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9259f3b0f00c69cc4d6f146c85fc2510e80cdc26/gcc%2Fconfig%2Frs6000%2F603.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9259f3b0f00c69cc4d6f146c85fc2510e80cdc26/gcc%2Fconfig%2Frs6000%2F603.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2F603.md?ref=9259f3b0f00c69cc4d6f146c85fc2510e80cdc26", "patch": "@@ -60,7 +60,7 @@\n \n ; This takes 2 or 3 cycles\n (define_insn_reservation \"ppc603-imul\" 3\n-  (and (eq_attr \"type\" \"imul,mult_compare\")\n+  (and (eq_attr \"type\" \"imul,imul_compare\")\n        (eq_attr \"cpu\" \"ppc603\"))\n   \"iu_603*2\")\n "}, {"sha": "7dbf759e28bdbecd4277eef86db82371034a26ed", "filename": "gcc/config/rs6000/6xx.md", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9259f3b0f00c69cc4d6f146c85fc2510e80cdc26/gcc%2Fconfig%2Frs6000%2F6xx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9259f3b0f00c69cc4d6f146c85fc2510e80cdc26/gcc%2Fconfig%2Frs6000%2F6xx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2F6xx.md?ref=9259f3b0f00c69cc4d6f146c85fc2510e80cdc26", "patch": "@@ -69,17 +69,17 @@\n   \"iu1_6xx|iu2_6xx\")\n \n (define_insn_reservation \"ppc604-imul\" 4\n-  (and (eq_attr \"type\" \"imul,imul2,imul3,mult_compare\")\n+  (and (eq_attr \"type\" \"imul,imul2,imul3,imul_compare\")\n        (eq_attr \"cpu\" \"ppc604\"))\n   \"mciu_6xx*2\")\n \n (define_insn_reservation \"ppc604e-imul\" 2\n-  (and (eq_attr \"type\" \"imul,imul2,imul3,mult_compare\")\n+  (and (eq_attr \"type\" \"imul,imul2,imul3,imul_compare\")\n        (eq_attr \"cpu\" \"ppc604e\"))\n   \"mciu_6xx\")\n \n (define_insn_reservation \"ppc620-imul\" 5\n-  (and (eq_attr \"type\" \"imul,mult_compare\")\n+  (and (eq_attr \"type\" \"imul,imul_compare\")\n        (eq_attr \"cpu\" \"ppc620,ppc630\"))\n   \"mciu_6xx*3\")\n \n@@ -94,7 +94,7 @@\n   \"mciu_6xx*3\")\n \n (define_insn_reservation \"ppc620-lmul\" 7\n-  (and (eq_attr \"type\" \"lmul\")\n+  (and (eq_attr \"type\" \"lmul,lmul_compare\")\n        (eq_attr \"cpu\" \"ppc620,ppc630\"))\n   \"mciu_6xx*5\")\n "}, {"sha": "b635ba85786dfd72bafcb205fdb4824d30d07e8b", "filename": "gcc/config/rs6000/7450.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9259f3b0f00c69cc4d6f146c85fc2510e80cdc26/gcc%2Fconfig%2Frs6000%2F7450.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9259f3b0f00c69cc4d6f146c85fc2510e80cdc26/gcc%2Fconfig%2Frs6000%2F7450.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2F7450.md?ref=9259f3b0f00c69cc4d6f146c85fc2510e80cdc26", "patch": "@@ -69,7 +69,7 @@\n   \"ppc7450_du,(iu1_7450|iu2_7450|iu3_7450)\")\n \n (define_insn_reservation \"ppc7450-imul\" 4\n-  (and (eq_attr \"type\" \"imul,mult_compare\")\n+  (and (eq_attr \"type\" \"imul,imul_compare\")\n        (eq_attr \"cpu\" \"ppc7450\"))\n   \"ppc7450_du,mciu_7450*2\")\n "}, {"sha": "45ba1d35a5c7d006b99558ed6f002641fecc7979", "filename": "gcc/config/rs6000/7xx.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9259f3b0f00c69cc4d6f146c85fc2510e80cdc26/gcc%2Fconfig%2Frs6000%2F7xx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9259f3b0f00c69cc4d6f146c85fc2510e80cdc26/gcc%2Fconfig%2Frs6000%2F7xx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2F7xx.md?ref=9259f3b0f00c69cc4d6f146c85fc2510e80cdc26", "patch": "@@ -64,7 +64,7 @@\n   \"ppc750_du,(iu1_7xx|iu2_7xx)\")\n \n (define_insn_reservation \"ppc750-imul\" 4\n-  (and (eq_attr \"type\" \"imul,mult_compare\")\n+  (and (eq_attr \"type\" \"imul,imul_compare\")\n        (eq_attr \"cpu\" \"ppc750,ppc7400\"))\n   \"ppc750_du,iu1_7xx*4\")\n "}, {"sha": "3e4d97ff9f90d517dd7381d7c5f48fcabec569a2", "filename": "gcc/config/rs6000/8540.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9259f3b0f00c69cc4d6f146c85fc2510e80cdc26/gcc%2Fconfig%2Frs6000%2F8540.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9259f3b0f00c69cc4d6f146c85fc2510e80cdc26/gcc%2Fconfig%2Frs6000%2F8540.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2F8540.md?ref=9259f3b0f00c69cc4d6f146c85fc2510e80cdc26", "patch": "@@ -90,7 +90,7 @@\n \n ;; Multiply\n (define_insn_reservation \"ppc8540_multiply\" 4\n-  (and (eq_attr \"type\" \"imul,imul2,imul3,mult_compare\")\n+  (and (eq_attr \"type\" \"imul,imul2,imul3,imul_compare\")\n        (eq_attr \"cpu\" \"ppc8540\"))\n   \"ppc8540_decode,ppc8540_issue+ppc8540_miu_stage0,ppc8540_miu_stage1,\\\n    ppc8540_miu_stage2,ppc8540_miu_stage3,ppc8540_retire\")"}, {"sha": "6e4903c2a34fe06273584a1a3217cda508c4e737", "filename": "gcc/config/rs6000/mpc.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9259f3b0f00c69cc4d6f146c85fc2510e80cdc26/gcc%2Fconfig%2Frs6000%2Fmpc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9259f3b0f00c69cc4d6f146c85fc2510e80cdc26/gcc%2Fconfig%2Frs6000%2Fmpc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fmpc.md?ref=9259f3b0f00c69cc4d6f146c85fc2510e80cdc26", "patch": "@@ -47,7 +47,7 @@\n   \"iu_mpc\")\n \n (define_insn_reservation \"mpccore-imul\" 2\n-  (and (eq_attr \"type\" \"imul,imul2,imul3,mult_compare\")\n+  (and (eq_attr \"type\" \"imul,imul2,imul3,imul_compare\")\n        (eq_attr \"cpu\" \"mpccore\"))\n   \"mciu_mpc\")\n "}, {"sha": "7b118a5e97c8a7507275c88eb0d931fada87feda", "filename": "gcc/config/rs6000/power4.md", "status": "modified", "additions": 124, "deletions": 77, "changes": 201, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9259f3b0f00c69cc4d6f146c85fc2510e80cdc26/gcc%2Fconfig%2Frs6000%2Fpower4.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9259f3b0f00c69cc4d6f146c85fc2510e80cdc26/gcc%2Fconfig%2Frs6000%2Fpower4.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fpower4.md?ref=9259f3b0f00c69cc4d6f146c85fc2510e80cdc26", "patch": "@@ -35,40 +35,41 @@\n (define_cpu_unit \"du1_power4,du2_power4,du3_power4,du4_power4,du5_power4\"\n \t\t \"power4disp\")\n \n-(define_reservation \"q1_power4\" \"du1_power4|du4_power4\")\n-(define_reservation \"q2_power4\" \"du2_power4|du3_power4\")\n-(define_reservation \"q4_power4\" \"du1_power4|du2_power4|du3_power4|du4_power4\")\n-\n-(define_reservation \"lsq_power4\" \"(q1_power4,lsu1_power4)\\\n-\t\t\t\t |(q2_power4,lsu2_power4)\\\n-\t\t\t\t |(du3_power4,nothing,lsu2_power4)\\\n-\t\t\t\t |(du4_power4,nothing,lsu1_power4)\")\n+(define_reservation \"lsq_power4\"\n+\t\t    \"(du1_power4,lsu1_power4)\\\n+\t\t    |(du2_power4,lsu2_power4)\\\n+\t\t    |(du3_power4,nothing,lsu2_power4)\\\n+\t\t    |(du4_power4,nothing,lsu1_power4)\")\n \n (define_reservation \"lsuq_power4\"\n \t\t    \"((du1_power4+du2_power4),lsu1_power4+iu2_power4)\\\n \t\t    |((du2_power4+du3_power4),lsu2_power4+iu2_power4)\\\n \t\t    |((du3_power4+du4_power4),lsu2_power4+iu1_power4)\")\n-;;;\t\t    |((du2_power4+du3_power4),lsu2_power4,iu2_power4)\n-\n-(define_reservation \"lsuxq_power4\"\n-\t\t    \"(du1_power4+du2_power4+du3_power4+du4_power4),\\\n-\t\t     iu1_power4,(lsu2_power4+iu2_power4)\")\n+;\t\t    |((du2_power4+du3_power4),nothing,lsu2_power4,iu2_power4)\n \n-(define_reservation \"iq_power4\" \"(q1_power4,iu1_power4)\\\n-\t\t\t\t|(q2_power4,iu2_power4)\\\n-\t\t\t\t|(du3_power4,nothing,iu2_power4)\\\n-\t\t\t\t|(du4_power4,nothing,iu1_power4)\")\n+(define_reservation \"iq_power4\"\n+\t\t    \"(du1_power4,iu1_power4)\\\n+\t\t    |(du2_power4,iu2_power4)\\\n+\t\t    |(du3_power4,nothing,iu2_power4)\\\n+\t\t    |(du4_power4,nothing,iu1_power4)\")\n \n-(define_reservation \"fpq_power4\" \"(q1_power4,fpu1_power4)\\\n-\t\t\t\t |(q2_power4,fpu2_power4)\\\n-\t\t\t\t |(du3_power4,nothing,fpu2_power4)\\\n-\t\t\t\t |(du4_power4,nothing,fpu1_power4)\")\n+(define_reservation \"fpq_power4\"\n+\t\t    \"(du1_power4,fpu1_power4)\\\n+\t\t    |(du2_power4,fpu2_power4)\\\n+\t\t    |(du3_power4,nothing,fpu2_power4)\\\n+\t\t    |(du4_power4,nothing,fpu1_power4)\")\n \n (define_reservation \"vq_power4\"\n-\t\t    \"(q4_power4,vec_power4)|(q4_power4,nothing,vec_power4)\")\n+\t\t    \"(du1_power4,vec_power4)\\\n+\t\t    |(du2_power4,vec_power4)\\\n+\t\t    |(du3_power4,nothing,vec_power4)\\\n+\t\t    |(du4_power4,nothing,vec_power4)\")\n+\n (define_reservation \"vpq_power4\"\n-\t\t    \"(q4_power4,vecperm_power4)\\\n-\t\t    |(q4_power4,nothing,vecperm_power4)\")\n+\t\t    \"(du1_power4,vecperm_power4)\\\n+\t\t    |(du2_power4,vecperm_power4)\\\n+\t\t    |(du3_power4,nothing,vecperm_power4)\\\n+\t\t    |(du4_power4,nothing,vecperm_power4)\")\n \n \n ; Dispatch slots are allocated in order conforming to program order.\n@@ -79,17 +80,17 @@\n \n \n ; Load/store\n-(define_insn_reservation \"power4-load\" 3\n+(define_insn_reservation \"power4-load\" 4 ; 3\n   (and (eq_attr \"type\" \"load\")\n        (eq_attr \"cpu\" \"power4\"))\n   \"lsq_power4\")\n \n (define_insn_reservation \"power4-load-ext\" 5\n   (and (eq_attr \"type\" \"load_ext\")\n        (eq_attr \"cpu\" \"power4\"))\n-  \"((du1_power4+du2_power4),lsu1_power4,nothing,nothing,iu2_power4)\\\n-  |((du2_power4+du3_power4),lsu2_power4,nothing,nothing,iu2_power4)\\\n-  |((du3_power4+du4_power4),lsu2_power4,nothing,nothing,iu1_power4)\")\n+  \"(du1_power4+du2_power4,lsu1_power4,nothing,nothing,iu2_power4)\\\n+  |(du2_power4+du3_power4,lsu2_power4,nothing,nothing,iu2_power4)\\\n+  |(du3_power4+du4_power4,lsu2_power4,nothing,nothing,iu1_power4)\")\n \n (define_insn_reservation \"power4-load-ext-update\" 5\n   (and (eq_attr \"type\" \"load_ext_u\")\n@@ -101,79 +102,79 @@\n   (and (eq_attr \"type\" \"load_ext_ux\")\n        (eq_attr \"cpu\" \"power4\"))\n   \"(du1_power4+du2_power4+du3_power4+du4_power4),\\\n-   iu1_power4,(lsu2_power4+iu1_power4),nothing,nothing,iu2_power4\")\n+   iu1_power4,lsu2_power4+iu1_power4,nothing,nothing,iu2_power4\")\n \n-(define_insn_reservation \"power4-load-update-indexed\" 3\n+(define_insn_reservation \"power4-load-update-indexed\" 4 ; 3\n   (and (eq_attr \"type\" \"load_ux\")\n        (eq_attr \"cpu\" \"power4\"))\n-  \"lsuxq_power4\")\n+   \"du1_power4+du2_power4+du3_power4+du4_power4,\\\n+   iu1_power4,lsu2_power4+iu2_power4\")\n \n-(define_insn_reservation \"power4-load-update\" 3\n+(define_insn_reservation \"power4-load-update\" 4 ; 3\n   (and (eq_attr \"type\" \"load_u\")\n        (eq_attr \"cpu\" \"power4\"))\n   \"lsuq_power4\")\n \n-(define_insn_reservation \"power4-fpload\" 5\n+(define_insn_reservation \"power4-fpload\" 6 ; 5\n   (and (eq_attr \"type\" \"fpload\")\n        (eq_attr \"cpu\" \"power4\"))\n   \"lsq_power4\")\n \n-(define_insn_reservation \"power4-fpload-update\" 5\n-  (and (eq_attr \"type\" \"fpload_u\")\n+(define_insn_reservation \"power4-fpload-update\" 6 ; 5\n+  (and (eq_attr \"type\" \"fpload_u,fpload_ux\")\n        (eq_attr \"cpu\" \"power4\"))\n   \"lsuq_power4\")\n \n-(define_insn_reservation \"power4-fpload-update-indexed\" 5\n-  (and (eq_attr \"type\" \"fpload_ux\")\n-       (eq_attr \"cpu\" \"power4\"))\n-  \"lsuxq_power4\")\n-\n-(define_insn_reservation \"power4-vecload\" 5\n+(define_insn_reservation \"power4-vecload\" 6 ; 5\n   (and (eq_attr \"type\" \"vecload\")\n        (eq_attr \"cpu\" \"power4\"))\n   \"lsq_power4\")\n \n (define_insn_reservation \"power4-store\" 1\n   (and (eq_attr \"type\" \"store\")\n        (eq_attr \"cpu\" \"power4\"))\n-  \"(q1_power4,lsu1_power4,iu1_power4)\\\n-  |(q2_power4,lsu2_power4,iu2_power4)\")\n+  \"(du1_power4,lsu1_power4,iu1_power4)\\\n+  |(du2_power4,lsu2_power4,iu2_power4)\\\n+  |(du3_power4,lsu2_power4,nothing,iu2_power4)\\\n+  |(du4_power4,lsu1_power4,nothing,iu1_power4)\")\n \n (define_insn_reservation \"power4-store-update\" 1\n   (and (eq_attr \"type\" \"store_u\")\n        (eq_attr \"cpu\" \"power4\"))\n-  \"lsuq_power4\")\n+  \"(du1_power4+du2_power4,lsu1_power4+iu2_power4,iu1_power4)\\\n+  |(du2_power4+du3_power4,lsu2_power4+iu2_power4,iu2_power4)\\\n+  |(du3_power4+du4_power4,lsu2_power4+iu1_power4,iu2_power4)\\\n+  |(du3_power4+du4_power4,lsu2_power4,iu1_power4,iu2_power4)\")\n \n (define_insn_reservation \"power4-store-update-indexed\" 1\n   (and (eq_attr \"type\" \"store_ux\")\n        (eq_attr \"cpu\" \"power4\"))\n-  \"lsuxq_power4\")\n+   \"du1_power4+du2_power4+du3_power4+du4_power4,\\\n+    iu1_power4,lsu2_power4+iu2_power4,iu2_power4\")\n \n (define_insn_reservation \"power4-fpstore\" 1\n   (and (eq_attr \"type\" \"fpstore\")\n        (eq_attr \"cpu\" \"power4\"))\n-  \"(q1_power4,lsu1_power4,fpu1_power4)\\\n-  |(q2_power4,lsu2_power4,fpu2_power4)\")\n+  \"(du1_power4,lsu1_power4,fpu1_power4)\\\n+  |(du2_power4,lsu2_power4,fpu2_power4)\\\n+  |(du3_power4,lsu2_power4,nothing,fpu2_power4)\\\n+  |(du4_power4,lsu1_power4,nothing,fpu1_power4)\")\n \n (define_insn_reservation \"power4-fpstore-update\" 1\n-  (and (eq_attr \"type\" \"fpstore_u\")\n-       (eq_attr \"cpu\" \"power4\"))\n-  \"((du1_power4+du2_power4),(fpu1_power4+iu2_power4),lsu1_power4)\\\n-  |((du2_power4+du3_power4),(fpu2_power4+iu2_power4),lsu2_power4)\\\n-  |((du3_power4+du4_power4),(fpu2_power4+iu1_power4),lsu2_power4)\")\n-;;;((du2_power4+du3_power4),fpu2_power4,(iu2_power4+lsu2_power4))\n-\n-(define_insn_reservation \"power4-fpstore-update-indexed\" 1\n-  (and (eq_attr \"type\" \"fpstore_ux\")\n+  (and (eq_attr \"type\" \"fpstore_u,fpstore_ux\")\n        (eq_attr \"cpu\" \"power4\"))\n-  \"(du1_power4+du2_power4+du3_power4+du4_power4),\n-   iu1_power4,fpu2_power4,(iu2_power4+lsu2_power4)\")\n+  \"(du1_power4+du2_power4,lsu1_power4+iu2_power4,fpu1_power4)\\\n+  |(du2_power4+du3_power4,lsu2_power4+iu2_power4,fpu2_power4)\\\n+  |(du3_power4+du4_power4,lsu2_power4+iu1_power4,fpu2_power4)\")\n+;  |(du3_power4+du4_power4,nothing,lsu2_power4+iu1_power4,fpu2_power4)\")\n \n (define_insn_reservation \"power4-vecstore\" 1\n   (and (eq_attr \"type\" \"vecstore\")\n        (eq_attr \"cpu\" \"power4\"))\n-  \"(q1_power4,lsu1_power4,vec_power4)\\\n-  |(q2_power4,lsu2_power4,vec_power4)\")\n+  \"(du1_power4,lsu1_power4,vec_power4)\\\n+  |(du2_power4,lsu2_power4,vec_power4)\\\n+  |(du3_power4,lsu2_power4,nothing,vec_power4)\\\n+  |(du4_power4,lsu1_power4,nothing,vec_power4)\")\n \n \n ; Integer latency is 2 cycles\n@@ -187,29 +188,65 @@\n        (eq_attr \"cpu\" \"power4\"))\n   \"iq_power4\")\n \n-(define_insn_reservation \"power4-compare\" 4\n+(define_insn_reservation \"power4-compare\" 2\n   (and (eq_attr \"type\" \"compare,delayed_compare\")\n        (eq_attr \"cpu\" \"power4\"))\n-  \"((du1_power4+du2_power4),iu1_power4,iu2_power4)\\\n-  |((du2_power4+du3_power4),iu2_power4,iu2_power4)\\\n-  |((du3_power4+du4_power4),iu2_power4,iu1_power4)\")\n+  \"(du1_power4+du2_power4,iu1_power4,iu2_power4)\\\n+  |(du2_power4+du3_power4,iu2_power4,iu2_power4)\\\n+  |(du3_power4+du4_power4,nothing,iu2_power4,iu1_power4)\")\n \n-(define_bypass 2 \"power4-compare\" \"power4-integer\")\n+(define_bypass 4 \"power4-compare\" \"power4-branch,power4-crlogical,power4-delayedcr,power4-mfcr\")\n \n-(define_insn_reservation \"power4-imul\" 7\n-  (and (eq_attr \"type\" \"imul,lmul,mult_compare\")\n+(define_insn_reservation \"power4-lmul-cmp\" 8 ; 7\n+  (and (eq_attr \"type\" \"lmul_compare\")\n        (eq_attr \"cpu\" \"power4\"))\n-  \"(q1_power4,iu1_power4*6)|(q2_power4,iu2_power4*6)\")\n+  \"(du1_power4+du2_power4,iu1_power4*6,iu2_power4)\\\n+  |(du2_power4+du3_power4,iu2_power4*6,iu2_power4)\\\n+  |(du3_power4+du4_power4,iu2_power4*6,iu1_power4)\")\n+;  |(du3_power4+du4_power4,nothing,iu2_power4*6,iu1_power4)\")\n \n-(define_insn_reservation \"power4-imul2\" 5\n-  (and (eq_attr \"type\" \"imul2\")\n+(define_bypass 10 \"power4-lmul-cmp\" \"power4-branch,power4-crlogical,power4-delayedcr,power4-mfcr\")\n+\n+(define_insn_reservation \"power4-imul-cmp\" 6 ; 5\n+  (and (eq_attr \"type\" \"imul_compare\")\n+       (eq_attr \"cpu\" \"power4\"))\n+  \"(du1_power4+du2_power4,iu1_power4*4,iu2_power4)\\\n+  |(du2_power4+du3_power4,iu2_power4*4,iu2_power4)\\\n+  |(du3_power4+du4_power4,iu2_power4*4,iu1_power4)\")\n+;  |(du3_power4+du4_power4,nothing,iu2_power4*4,iu1_power4)\")\n+\n+(define_bypass 8 \"power4-imul-cmp\" \"power4-branch,power4-crlogical,power4-delayedcr,power4-mfcr\")\n+\n+(define_insn_reservation \"power4-lmul\" 8 ; 7\n+  (and (eq_attr \"type\" \"lmul\")\n        (eq_attr \"cpu\" \"power4\"))\n-  \"(q1_power4,iu1_power4*4)|(q2_power4,iu2_power4*4)\")\n+  \"(du1_power4,iu1_power4*6)\\\n+  |(du2_power4,iu2_power4*6)\\\n+  |(du3_power4,iu2_power4*6)\\\n+  |(du4_power4,iu2_power4*6)\")\n+;  |(du3_power4,nothing,iu2_power4*6)\\\n+;  |(du4_power4,nothing,iu2_power4*6)\")\n \n-(define_insn_reservation \"power4-imul3\" 4\n-  (and (eq_attr \"type\" \"imul3\")\n+(define_insn_reservation \"power4-imul\" 6 ; 5\n+  (and (eq_attr \"type\" \"imul\")\n        (eq_attr \"cpu\" \"power4\"))\n-  \"(q1_power4,iu1_power4*3)|(q2_power4,iu2_power4*3)\")\n+  \"(du1_power4,iu1_power4*4)\\\n+  |(du2_power4,iu2_power4*4)\\\n+  |(du3_power4,iu2_power4*4)\\\n+  |(du4_power4,iu1_power4*4)\")\n+;  |(du3_power4,nothing,iu2_power4*4)\\\n+;  |(du4_power4,nothing,iu1_power4*4)\")\n+\n+(define_insn_reservation \"power4-imul3\" 5 ; 4\n+  (and (eq_attr \"type\" \"imul2,imul3\")\n+       (eq_attr \"cpu\" \"power4\"))\n+  \"(du1_power4,iu1_power4*3)\\\n+  |(du2_power4,iu2_power4*3)\\\n+  |(du3_power4,iu2_power4*3)\\\n+  |(du4_power4,iu1_power4*3)\")\n+;  |(du3_power4,nothing,iu2_power4*3)\\\n+;  |(du4_power4,nothing,iu1_power4*3)\")\n+\n \n ; SPR move only executes in first IU.\n ; Integer division only executes in second IU.\n@@ -268,7 +305,7 @@\n   \"du1_power4,iu1_power4\")\n \n ; Basic FP latency is 6 cycles\n-(define_insn_reservation \"power4-fp\" 6\n+(define_insn_reservation \"power4-fp\" 7 ; 6\n   (and (eq_attr \"type\" \"fp,dmul\")\n        (eq_attr \"cpu\" \"power4\"))\n   \"fpq_power4\")\n@@ -281,12 +318,22 @@\n (define_insn_reservation \"power4-sdiv\" 33\n   (and (eq_attr \"type\" \"sdiv,ddiv\")\n        (eq_attr \"cpu\" \"power4\"))\n-  \"(q1_power4,fpu1_power4*28)|(q2_power4,fpu2_power4*28)\")\n+  \"(du1_power4,fpu1_power4*28)\\\n+  |(du2_power4,fpu2_power4*28)\\\n+  |(du3_power4,fpu2_power4*28)\\\n+  |(du4_power4,fpu1_power4*28)\")\n+;  |(du3_power4,nothing,fpu2_power4*28)\\\n+;  |(du4_power4,nothing,fpu1_power4*28)\")\n \n (define_insn_reservation \"power4-sqrt\" 40\n   (and (eq_attr \"type\" \"ssqrt,dsqrt\")\n        (eq_attr \"cpu\" \"power4\"))\n-  \"(q1_power4,fpu1_power4*35)|(q2_power4,fpu2_power4*35)\")\n+  \"(du1_power4,fpu1_power4*35)\\\n+  |(du2_power4,fpu2_power4*35)\\\n+  |(du3_power4,fpu2_power4*35)\\\n+  |(du4_power4,fpu2_power4*35)\")\n+;  |(du3_power4,nothing,fpu2_power4*35)\\\n+;  |(du4_power4,nothing,fpu2_power4*35)\")\n \n \n ; VMX"}, {"sha": "f958bddab7c40fe0c31687dae619ee2131f762a9", "filename": "gcc/config/rs6000/rios1.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9259f3b0f00c69cc4d6f146c85fc2510e80cdc26/gcc%2Fconfig%2Frs6000%2Frios1.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9259f3b0f00c69cc4d6f146c85fc2510e80cdc26/gcc%2Fconfig%2Frs6000%2Frios1.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frios1.md?ref=9259f3b0f00c69cc4d6f146c85fc2510e80cdc26", "patch": "@@ -56,7 +56,7 @@\n   \"iu_rios1\")\n \n (define_insn_reservation \"rios1-imul\" 5\n-  (and (eq_attr \"type\" \"imul,mult_compare\")\n+  (and (eq_attr \"type\" \"imul,imul_compare\")\n        (eq_attr \"cpu\" \"rios1\"))\n   \"iu_rios1*5\")\n \n@@ -66,12 +66,12 @@\n   \"iu_rios1*4\")\n \n (define_insn_reservation \"rios1-imul3\" 3\n-  (and (eq_attr \"type\" \"imul,mult_compare\")\n+  (and (eq_attr \"type\" \"imul\")\n        (eq_attr \"cpu\" \"rios1\"))\n   \"iu_rios1*3\")\n \n (define_insn_reservation \"ppc601-imul\" 5\n-  (and (eq_attr \"type\" \"imul,imul2,imul3,mult_compare\")\n+  (and (eq_attr \"type\" \"imul,imul2,imul3,imul_compare\")\n        (eq_attr \"cpu\" \"ppc601\"))\n   \"iu_rios1*5\")\n "}, {"sha": "7669adac9e79e87d038d65e95f01bd4c7def33bb", "filename": "gcc/config/rs6000/rios2.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9259f3b0f00c69cc4d6f146c85fc2510e80cdc26/gcc%2Fconfig%2Frs6000%2Frios2.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9259f3b0f00c69cc4d6f146c85fc2510e80cdc26/gcc%2Fconfig%2Frs6000%2Frios2.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frios2.md?ref=9259f3b0f00c69cc4d6f146c85fc2510e80cdc26", "patch": "@@ -44,7 +44,7 @@\n   \"iu1_rios2|iu2_rios2\")\n \n (define_insn_reservation \"rios2-imul\" 2\n-  (and (eq_attr \"type\" \"imul,imul2,imul3,mult_compare\")\n+  (and (eq_attr \"type\" \"imul,imul2,imul3,imul_compare\")\n        (eq_attr \"cpu\" \"rios2\"))\n   \"iu1_rios2*2\")\n "}, {"sha": "0fed3ac178a33292f1c1a265e54c05e888e64655", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 15, "deletions": 4, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9259f3b0f00c69cc4d6f146c85fc2510e80cdc26/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9259f3b0f00c69cc4d6f146c85fc2510e80cdc26/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=9259f3b0f00c69cc4d6f146c85fc2510e80cdc26", "patch": "@@ -12522,12 +12522,15 @@ rs6000_variable_issue (stream, verbose, insn, more)\n     {\n       enum attr_type type = get_attr_type (insn);\n       if (type == TYPE_LOAD_EXT_U || type == TYPE_LOAD_EXT_UX\n-\t  || type == TYPE_LOAD_UX || type == TYPE_STORE_UX\n-\t  || type == TYPE_FPLOAD_UX || type == TYPE_FPSTORE_UX)\n+\t  || type == TYPE_LOAD_UX || type == TYPE_STORE_UX)\n \treturn 0;\n       else if (type == TYPE_LOAD_U || type == TYPE_STORE_U\n \t       || type == TYPE_FPLOAD_U || type == TYPE_FPSTORE_U\n-\t       || type == TYPE_LOAD_EXT || type == TYPE_DELAYED_CR)\n+\t       || type == TYPE_FPLOAD_UX || type == TYPE_FPSTORE_UX\n+\t       || type == TYPE_LOAD_EXT || type == TYPE_DELAYED_CR\n+\t       || type == TYPE_COMPARE || type == TYPE_DELAYED_COMPARE\n+\t       || type == TYPE_IMUL_COMPARE || type == TYPE_LMUL_COMPARE\n+\t       || type == TYPE_IDIV || type == TYPE_LDIV)\n \treturn more > 2 ? more - 2 : 0;\n     }\n \n@@ -12580,6 +12583,8 @@ rs6000_adjust_cost (insn, link, dep_insn, cost)\n \t      && (get_attr_type (dep_insn) == TYPE_CMP\n \t\t  || get_attr_type (dep_insn) == TYPE_COMPARE\n \t\t  || get_attr_type (dep_insn) == TYPE_DELAYED_COMPARE\n+\t\t  || get_attr_type (dep_insn) == TYPE_IMUL_COMPARE\n+\t\t  || get_attr_type (dep_insn) == TYPE_LMUL_COMPARE\n \t\t  || get_attr_type (dep_insn) == TYPE_FPCOMPARE\n \t\t  || get_attr_type (dep_insn) == TYPE_CR_LOGICAL\n \t\t  || get_attr_type (dep_insn) == TYPE_DELAYED_CR))\n@@ -13712,7 +13717,6 @@ rs6000_rtx_costs (x, code, outer_code, total)\n \n \tcase PROCESSOR_PPC620:\n \tcase PROCESSOR_PPC630:\n-\tcase PROCESSOR_POWER4:\n \t  *total = (GET_CODE (XEXP (x, 1)) != CONST_INT\n \t\t    ? GET_MODE (XEXP (x, 1)) != DImode\n \t\t    ? COSTS_N_INSNS (5) : COSTS_N_INSNS (7)\n@@ -13721,6 +13725,13 @@ rs6000_rtx_costs (x, code, outer_code, total)\n \t\t    ? COSTS_N_INSNS (3) : COSTS_N_INSNS (4));\n \t  return true;\n \n+\tcase PROCESSOR_POWER4:\n+\t  *total = (GET_CODE (XEXP (x, 1)) != CONST_INT\n+\t\t    ? GET_MODE (XEXP (x, 1)) != DImode\n+\t\t    ? COSTS_N_INSNS (5) : COSTS_N_INSNS (7)\n+\t\t    : COSTS_N_INSNS (4));\n+\t  return true;\n+\n \tdefault:\n \t  abort ();\n \t}"}, {"sha": "eb65422e0b4a173906f63a3ac3cdab9a6b725c40", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 65, "deletions": 9, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9259f3b0f00c69cc4d6f146c85fc2510e80cdc26/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9259f3b0f00c69cc4d6f146c85fc2510e80cdc26/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=9259f3b0f00c69cc4d6f146c85fc2510e80cdc26", "patch": "@@ -39,7 +39,7 @@\n \f\n ;; Define an insn type attribute.  This is used in function unit delay\n ;; computations.\n-(define_attr \"type\" \"integer,load,load_ext,load_ext_u,load_ext_ux,load_ux,load_u,store,store_ux,store_u,fpload,fpload_ux,fpload_u,fpstore,fpstore_ux,fpstore_u,vecload,vecstore,imul,imul2,imul3,lmul,idiv,ldiv,branch,cmp,fast_compare,compare,delayed_compare,mult_compare,fpcompare,cr_logical,delayed_cr,mfcr,mtcr,mtjmpr,fp,fpsimple,dmul,sdiv,ddiv,ssqrt,dsqrt,jmpreg,brinc,vecsimple,veccomplex,vecdiv,veccmp,veccmpsimple,vecperm,vecfloat,vecfdiv\"\n+(define_attr \"type\" \"integer,load,load_ext,load_ext_u,load_ext_ux,load_ux,load_u,store,store_ux,store_u,fpload,fpload_ux,fpload_u,fpstore,fpstore_ux,fpstore_u,vecload,vecstore,imul,imul2,imul3,lmul,idiv,ldiv,branch,cmp,fast_compare,compare,delayed_compare,imul_compare,lmul_compare,fpcompare,cr_logical,delayed_cr,mfcr,mtcr,mtjmpr,fp,fpsimple,dmul,sdiv,ddiv,ssqrt,dsqrt,jmpreg,brinc,vecsimple,veccomplex,vecdiv,veccmp,veccmpsimple,vecperm,vecfloat,vecfdiv\"\n   (const_string \"integer\"))\n \n ;; Length (in bytes).\n@@ -1669,7 +1669,7 @@\n \t\t(const_string \"imul2\")]\n \t(const_string \"imul\")))])\n \n-(define_insn \"\"\n+(define_insn \"*mulsi3_mq_internal1\"\n   [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,?y\")\n \t(compare:CC (mult:SI (match_operand:SI 1 \"gpc_reg_operand\" \"%r,r\")\n \t\t\t     (match_operand:SI 2 \"gpc_reg_operand\" \"r,r\"))\n@@ -1680,7 +1680,7 @@\n   \"@\n    {muls.|mullw.} %3,%1,%2\n    #\"\n-  [(set_attr \"type\" \"mult_compare\")\n+  [(set_attr \"type\" \"imul_compare\")\n    (set_attr \"length\" \"4,8\")])\n \n (define_split\n@@ -1699,7 +1699,7 @@\n \t\t    (const_int 0)))]\n   \"\")\n \n-(define_insn \"\"\n+(define_insn \"*mulsi3_no_mq_internal1\"\n   [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,?y\")\n \t(compare:CC (mult:SI (match_operand:SI 1 \"gpc_reg_operand\" \"%r,r\")\n \t\t\t     (match_operand:SI 2 \"gpc_reg_operand\" \"r,r\"))\n@@ -1709,7 +1709,7 @@\n   \"@\n    {muls.|mullw.} %3,%1,%2\n    #\"\n-  [(set_attr \"type\" \"mult_compare\")\n+  [(set_attr \"type\" \"imul_compare\")\n    (set_attr \"length\" \"4,8\")])\n \n (define_split\n@@ -1726,7 +1726,7 @@\n \t\t    (const_int 0)))]\n   \"\")\n \n-(define_insn \"\"\n+(define_insn \"*mulsi3_mq_internal2\"\n   [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x,?y\")\n \t(compare:CC (mult:SI (match_operand:SI 1 \"gpc_reg_operand\" \"%r,r\")\n \t\t\t     (match_operand:SI 2 \"gpc_reg_operand\" \"r,r\"))\n@@ -1738,7 +1738,7 @@\n   \"@\n    {muls.|mullw.} %0,%1,%2\n    #\"\n-  [(set_attr \"type\" \"mult_compare\")\n+  [(set_attr \"type\" \"imul_compare\")\n    (set_attr \"length\" \"4,8\")])\n \n (define_split\n@@ -1758,7 +1758,7 @@\n \t\t    (const_int 0)))]\n   \"\")\n \n-(define_insn \"\"\n+(define_insn \"*mulsi3_no_mq_internal2\"\n   [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x,?y\")\n \t(compare:CC (mult:SI (match_operand:SI 1 \"gpc_reg_operand\" \"%r,r\")\n \t\t\t     (match_operand:SI 2 \"gpc_reg_operand\" \"r,r\"))\n@@ -1769,7 +1769,7 @@\n   \"@\n    {muls.|mullw.} %0,%1,%2\n    #\"\n-  [(set_attr \"type\" \"mult_compare\")\n+  [(set_attr \"type\" \"imul_compare\")\n    (set_attr \"length\" \"4,8\")])\n \n (define_split\n@@ -6023,6 +6023,62 @@\n   \"mulld %0,%1,%2\"\n    [(set_attr \"type\" \"lmul\")])\n \n+(define_insn \"*muldi3_internal1\"\n+  [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,?y\")\n+\t(compare:CC (mult:DI (match_operand:DI 1 \"gpc_reg_operand\" \"%r,r\")\n+\t\t\t     (match_operand:DI 2 \"gpc_reg_operand\" \"r,r\"))\n+\t\t    (const_int 0)))\n+   (clobber (match_scratch:DI 3 \"=r,r\"))]\n+  \"TARGET_POWERPC64\"\n+  \"@\n+   mulld. %3,%1,%2\n+   #\"\n+  [(set_attr \"type\" \"lmul_compare\")\n+   (set_attr \"length\" \"4,8\")])\n+\n+(define_split\n+  [(set (match_operand:CC 0 \"cc_reg_not_cr0_operand\" \"\")\n+\t(compare:CC (mult:DI (match_operand:DI 1 \"gpc_reg_operand\" \"\")\n+\t\t\t     (match_operand:DI 2 \"gpc_reg_operand\" \"\"))\n+\t\t    (const_int 0)))\n+   (clobber (match_scratch:DI 3 \"\"))]\n+  \"TARGET_POWERPC64 && reload_completed\"\n+  [(set (match_dup 3)\n+\t(mult:DI (match_dup 1) (match_dup 2)))\n+   (set (match_dup 0)\n+\t(compare:CC (match_dup 3)\n+\t\t    (const_int 0)))]\n+  \"\")\n+\n+(define_insn \"*muldi3_internal2\"\n+  [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x,?y\")\n+\t(compare:CC (mult:DI (match_operand:DI 1 \"gpc_reg_operand\" \"%r,r\")\n+\t\t\t     (match_operand:DI 2 \"gpc_reg_operand\" \"r,r\"))\n+\t\t    (const_int 0)))\n+   (set (match_operand:DI 0 \"gpc_reg_operand\" \"=r,r\")\n+\t(mult:DI (match_dup 1) (match_dup 2)))]\n+  \"TARGET_POWERPC64\"\n+  \"@\n+   mulld. %0,%1,%2\n+   #\"\n+  [(set_attr \"type\" \"lmul_compare\")\n+   (set_attr \"length\" \"4,8\")])\n+\n+(define_split\n+  [(set (match_operand:CC 3 \"cc_reg_not_cr0_operand\" \"\")\n+\t(compare:CC (mult:DI (match_operand:DI 1 \"gpc_reg_operand\" \"\")\n+\t\t\t     (match_operand:DI 2 \"gpc_reg_operand\" \"\"))\n+\t\t    (const_int 0)))\n+   (set (match_operand:DI 0 \"gpc_reg_operand\" \"\")\n+\t(mult:DI (match_dup 1) (match_dup 2)))]\n+  \"TARGET_POWERPC64 && reload_completed\"\n+  [(set (match_dup 0)\n+\t(mult:DI (match_dup 1) (match_dup 2)))\n+   (set (match_dup 3)\n+\t(compare:CC (match_dup 0)\n+\t\t    (const_int 0)))]\n+  \"\")\n+\n (define_insn \"smuldi3_highpart\"\n   [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r\")\n \t(truncate:DI"}, {"sha": "011b3df350001578b1f3beab17eb2ceba39f57e6", "filename": "gcc/config/rs6000/rs64.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9259f3b0f00c69cc4d6f146c85fc2510e80cdc26/gcc%2Fconfig%2Frs6000%2Frs64.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9259f3b0f00c69cc4d6f146c85fc2510e80cdc26/gcc%2Fconfig%2Frs6000%2Frs64.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs64.md?ref=9259f3b0f00c69cc4d6f146c85fc2510e80cdc26", "patch": "@@ -47,7 +47,7 @@\n   \"iu_rs64\")\n \n (define_insn_reservation \"rs64a-imul\" 20\n-  (and (eq_attr \"type\" \"imul,mult_compare\")\n+  (and (eq_attr \"type\" \"imul,imul_compare\")\n        (eq_attr \"cpu\" \"rs64a\"))\n   \"mciu_rs64*13\")\n \n@@ -62,7 +62,7 @@\n   \"mciu_rs64*2\")\n \n (define_insn_reservation \"rs64a-lmul\" 34\n-  (and (eq_attr \"type\" \"lmul\")\n+  (and (eq_attr \"type\" \"lmul,lmul_compare\")\n        (eq_attr \"cpu\" \"rs64a\"))\n   \"mciu_rs64*34\")\n "}]}