{"sha": "2df88e9f5881eb6bbe3ae405fb86530143c50e22", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmRmODhlOWY1ODgxZWI2YmJlM2FlNDA1ZmI4NjUzMDE0M2M1MGUyMg==", "commit": {"author": {"name": "Jeffrey Oldham", "email": "oldham@codesourcery.com", "date": "2000-12-30T15:31:49Z"}, "committer": {"name": "Jeffrey D. Oldham", "email": "oldham@gcc.gnu.org", "date": "2000-12-30T15:31:49Z"}, "message": "defaults.h (BUILD_VA_LIST_TYPE): New definition.\n\n2000-12-30  Jeffrey Oldham  <oldham@codesourcery.com>\n\n\t* defaults.h (BUILD_VA_LIST_TYPE): New definition.\n\t* tree.c (build_common_tree_nodes_2): Ensure the va_list_type_node\n\tis a copy, not an alias.\n\nFrom-SVN: r38561", "tree": {"sha": "0028dd6b4eaeadecea47974de64d9f41192d90cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0028dd6b4eaeadecea47974de64d9f41192d90cd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2df88e9f5881eb6bbe3ae405fb86530143c50e22", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2df88e9f5881eb6bbe3ae405fb86530143c50e22", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2df88e9f5881eb6bbe3ae405fb86530143c50e22", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2df88e9f5881eb6bbe3ae405fb86530143c50e22/comments", "author": null, "committer": null, "parents": [{"sha": "b367c4162873ae47607ae8b04ee3636108fc5657", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b367c4162873ae47607ae8b04ee3636108fc5657", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b367c4162873ae47607ae8b04ee3636108fc5657"}], "stats": {"total": 20, "additions": 15, "deletions": 5}, "files": [{"sha": "38ed3eb36b23f50841bedab82fa26658413be6ca", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2df88e9f5881eb6bbe3ae405fb86530143c50e22/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2df88e9f5881eb6bbe3ae405fb86530143c50e22/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2df88e9f5881eb6bbe3ae405fb86530143c50e22", "patch": "@@ -1,3 +1,9 @@\n+2000-12-30  Jeffrey Oldham  <oldham@codesourcery.com>\n+\n+\t* defaults.h (BUILD_VA_LIST_TYPE): New definition.\n+\t* tree.c (build_common_tree_nodes_2): Ensure the va_list_type_node\n+\tis a copy, not an alias.\n+\n 2000-12-30  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n \t* calls.c (calls_function_1, case CONSTRUCTOR): New case."}, {"sha": "2f2aee9346f66d2bb06afd998b09cc70af27ec14", "filename": "gcc/defaults.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2df88e9f5881eb6bbe3ae405fb86530143c50e22/gcc%2Fdefaults.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2df88e9f5881eb6bbe3ae405fb86530143c50e22/gcc%2Fdefaults.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdefaults.h?ref=2df88e9f5881eb6bbe3ae405fb86530143c50e22", "patch": "@@ -252,5 +252,9 @@ do { ASM_OUTPUT_LABEL(FILE,LABEL_ALTERNATE_NAME (INSN)); } while (0)\n #define LONG_DOUBLE_TYPE_SIZE (BITS_PER_WORD * 2)\n #endif\n \n+#ifndef BUILD_VA_LIST_TYPE\n+#define BUILD_VA_LIST_TYPE(X) ((X) = ptr_type_node)\n+#endif\n+\n #endif  /* GCC_DEFAULTS_H */\n "}, {"sha": "a836b99ea2aa13b568329324c9c2b8744658c0e6", "filename": "gcc/tree.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2df88e9f5881eb6bbe3ae405fb86530143c50e22/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2df88e9f5881eb6bbe3ae405fb86530143c50e22/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=2df88e9f5881eb6bbe3ae405fb86530143c50e22", "patch": "@@ -4837,11 +4837,11 @@ build_common_tree_nodes_2 (short_double)\n   TREE_TYPE (complex_long_double_type_node) = long_double_type_node;\n   layout_type (complex_long_double_type_node);\n \n-#ifdef BUILD_VA_LIST_TYPE\n-  BUILD_VA_LIST_TYPE (va_list_type_node);\n-#else\n-  va_list_type_node = build_type_copy (ptr_type_node);\n-#endif\n+  {\n+    tree t;\n+    BUILD_VA_LIST_TYPE (t);\n+    va_list_type_node = build_type_copy (t);\n+  }\n \n   V4SF_type_node = make_node (VECTOR_TYPE);\n   TREE_TYPE (V4SF_type_node) = float_type_node;"}]}