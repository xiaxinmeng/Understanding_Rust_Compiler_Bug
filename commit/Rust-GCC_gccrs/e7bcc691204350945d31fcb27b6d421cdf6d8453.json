{"sha": "e7bcc691204350945d31fcb27b6d421cdf6d8453", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTdiY2M2OTEyMDQzNTA5NDVkMzFmY2IyN2I2ZDQyMWNkZjZkODQ1Mw==", "commit": {"author": {"name": "Jim MacArthur", "email": "jim.macarthur@arm.com", "date": "2012-05-24T11:07:57Z"}, "committer": {"name": "Marcus Shawcroft", "email": "mshawcroft@gcc.gnu.org", "date": "2012-05-24T11:07:57Z"}, "message": "recog.c (reg_fits_class_p): Check both regno and regno + offset are hard registers.\n\n2012-05-24  Jim MacArthur<jim.macarthur@arm.com>\n\n\t* recog.c (reg_fits_class_p): Check both regno and regno + offset are\n\thard registers.\n\t* regs.h (in_hard_reg_set_p): Assert that regno is a hard register and\n\tcheck end_regno - 1 is a hard register.\n\nFrom-SVN: r187826", "tree": {"sha": "d2f0426293ac9bb76b776e8b899cf5ed99edfaf4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d2f0426293ac9bb76b776e8b899cf5ed99edfaf4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e7bcc691204350945d31fcb27b6d421cdf6d8453", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7bcc691204350945d31fcb27b6d421cdf6d8453", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7bcc691204350945d31fcb27b6d421cdf6d8453", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7bcc691204350945d31fcb27b6d421cdf6d8453/comments", "author": null, "committer": null, "parents": [{"sha": "b44be1e6cfcd00aa166e84d006232d9ddeda7b6f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b44be1e6cfcd00aa166e84d006232d9ddeda7b6f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b44be1e6cfcd00aa166e84d006232d9ddeda7b6f"}], "stats": {"total": 22, "additions": 19, "deletions": 3}, "files": [{"sha": "8246ae9a5f7319079a319cd7ccaf48ccc0c332f0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7bcc691204350945d31fcb27b6d421cdf6d8453/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7bcc691204350945d31fcb27b6d421cdf6d8453/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e7bcc691204350945d31fcb27b6d421cdf6d8453", "patch": "@@ -1,3 +1,10 @@\n+2012-05-24  Jim MacArthur<jim.macarthur@arm.com>\n+\n+\t* recog.c (reg_fits_class_p): Check both regno and regno + offset are\n+\thard registers.\n+\t* regs.h (in_hard_reg_set_p): Assert that regno is a hard register and\n+\tcheck end_regno - 1 is a hard register.\n+\n 2012-05-24  Richard Guenther  <rguenther@suse.de>\n \n \t* varpool.c (add_new_static_var): Remove call to create_var_ann."}, {"sha": "d6645942cc74595d165dfa5bb56f958a7361569f", "filename": "gcc/recog.c", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7bcc691204350945d31fcb27b6d421cdf6d8453/gcc%2Frecog.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7bcc691204350945d31fcb27b6d421cdf6d8453/gcc%2Frecog.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frecog.c?ref=e7bcc691204350945d31fcb27b6d421cdf6d8453", "patch": "@@ -2792,14 +2792,16 @@ bool\n reg_fits_class_p (const_rtx operand, reg_class_t cl, int offset,\n \t\t  enum machine_mode mode)\n {\n-  int regno = REGNO (operand);\n+  unsigned int regno = REGNO (operand);\n \n   if (cl == NO_REGS)\n     return false;\n \n+  /* Regno must not be a pseudo register.  Offset may be negative.  */\n   return (HARD_REGISTER_NUM_P (regno)\n-\t  && in_hard_reg_set_p (reg_class_contents[(int) cl],\n-\t\t\t\tmode, regno + offset));\n+\t  && HARD_REGISTER_NUM_P (regno + offset)\n+\t  && in_hard_reg_set_p (reg_class_contents[(int) cl], mode, \n+\t\t\t\tregno + offset));\n }\n \f\n /* Split single instruction.  Helper function for split_all_insns and"}, {"sha": "d18bf0aa3c1185eea366a29c460ea8389c8d9599", "filename": "gcc/regs.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7bcc691204350945d31fcb27b6d421cdf6d8453/gcc%2Fregs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7bcc691204350945d31fcb27b6d421cdf6d8453/gcc%2Fregs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregs.h?ref=e7bcc691204350945d31fcb27b6d421cdf6d8453", "patch": "@@ -24,6 +24,7 @@ along with GCC; see the file COPYING3.  If not see\n \n #include \"machmode.h\"\n #include \"hard-reg-set.h\"\n+#include \"rtl.h\"\n \n #define REG_BYTES(R) mode_size[(int) GET_MODE (R)]\n \n@@ -367,10 +368,16 @@ in_hard_reg_set_p (const HARD_REG_SET regs, enum machine_mode mode,\n {\n   unsigned int end_regno;\n \n+  gcc_assert (HARD_REGISTER_NUM_P (regno));\n+  \n   if (!TEST_HARD_REG_BIT (regs, regno))\n     return false;\n \n   end_regno = end_hard_regno (mode, regno);\n+\n+  if (!HARD_REGISTER_NUM_P (end_regno - 1))\n+    return false;\n+\n   while (++regno < end_regno)\n     if (!TEST_HARD_REG_BIT (regs, regno))\n       return false;"}]}