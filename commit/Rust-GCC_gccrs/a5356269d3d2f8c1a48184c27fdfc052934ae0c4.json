{"sha": "a5356269d3d2f8c1a48184c27fdfc052934ae0c4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTUzNTYyNjlkM2QyZjhjMWE0ODE4NGMyN2ZkZmMwNTI5MzRhZTBjNA==", "commit": {"author": {"name": "Felix Natter", "email": "fnatter@gmx.net", "date": "2001-11-05T21:54:43Z"}, "committer": {"name": "Phil Edwards", "email": "pme@gcc.gnu.org", "date": "2001-11-05T21:54:43Z"}, "message": "porting-howto.xml: check in v0.9.4\n\n2001-11-05  Felix Natter  <fnatter@gmx.net>\n\n\t* docs/html/17_intro/porting-howto.xml:  check in v0.9.4\n\t* docs/html/17_intro/porting-howto.html:  regenerate\n\nFrom-SVN: r46793", "tree": {"sha": "e9b107bdc76fc7b8d06705bb045f0071f875befa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e9b107bdc76fc7b8d06705bb045f0071f875befa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a5356269d3d2f8c1a48184c27fdfc052934ae0c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5356269d3d2f8c1a48184c27fdfc052934ae0c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5356269d3d2f8c1a48184c27fdfc052934ae0c4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5356269d3d2f8c1a48184c27fdfc052934ae0c4/comments", "author": {"login": "fnatter", "id": 1979118, "node_id": "MDQ6VXNlcjE5NzkxMTg=", "avatar_url": "https://avatars.githubusercontent.com/u/1979118?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fnatter", "html_url": "https://github.com/fnatter", "followers_url": "https://api.github.com/users/fnatter/followers", "following_url": "https://api.github.com/users/fnatter/following{/other_user}", "gists_url": "https://api.github.com/users/fnatter/gists{/gist_id}", "starred_url": "https://api.github.com/users/fnatter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fnatter/subscriptions", "organizations_url": "https://api.github.com/users/fnatter/orgs", "repos_url": "https://api.github.com/users/fnatter/repos", "events_url": "https://api.github.com/users/fnatter/events{/privacy}", "received_events_url": "https://api.github.com/users/fnatter/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ac4f7ad92fa88dab7f72bbb2ba0a8a0b544e40fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac4f7ad92fa88dab7f72bbb2ba0a8a0b544e40fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac4f7ad92fa88dab7f72bbb2ba0a8a0b544e40fa"}], "stats": {"total": 375, "additions": 219, "deletions": 156}, "files": [{"sha": "0b420002bb679016537585fc8b75d7ad967c0dd3", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5356269d3d2f8c1a48184c27fdfc052934ae0c4/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5356269d3d2f8c1a48184c27fdfc052934ae0c4/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=a5356269d3d2f8c1a48184c27fdfc052934ae0c4", "patch": "@@ -1,3 +1,8 @@\n+2001-11-05  Felix Natter  <fnatter@gmx.net>\n+\n+\t* docs/html/17_intro/porting-howto.xml:  check in v0.9.4\n+\t* docs/html/17_intro/porting-howto.html:  regenerate\n+\n 2001-11-02  Loren J. Rittle  <ljrittle@acm.org>\n \n \t* include/bits/stl_threads.h (_Atomic_swap): Only enable path"}, {"sha": "c9a45c3bbfc62227525e80567936a3a374920e84", "filename": "libstdc++-v3/docs/html/17_intro/porting-howto.html", "status": "modified", "additions": 94, "deletions": 65, "changes": 159, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5356269d3d2f8c1a48184c27fdfc052934ae0c4/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Fporting-howto.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5356269d3d2f8c1a48184c27fdfc052934ae0c4/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Fporting-howto.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Fporting-howto.html?ref=a5356269d3d2f8c1a48184c27fdfc052934ae0c4", "patch": "@@ -13,8 +13,8 @@\n <div><div class=\"legalnotice\">\n <p class=\"legalnotice-title\"><b>Legal Notice</b></p>\n <p>\n-\t\tThis document can be distributed under the FDL\n-\t\t(<a href=\"http://www.gnu.org\" target=\"_top\">www.gnu.org</a>)\n+\tThis document can be distributed under the FDL\n+\t(<a href=\"http://www.gnu.org\" target=\"_top\">www.gnu.org</a>)\n       </p>\n </div></div>\n <div><p class=\"pubdate\">Tue Jun  5 20:07:49 2001</p></div>\n@@ -32,8 +32,8 @@\n <td align=\"left\">fnatter</td>\n </tr>\n <tr><td align=\"left\" colspan=\"3\">First released version using docbook-xml\n-\t\t  + second upload to libstdc++-page.\n-\t\t</td></tr>\n+\t  + second upload to libstdc++-page.\n+\t</td></tr>\n <tr>\n <td align=\"left\">Revision 0.9</td>\n <td align=\"left\">Wed Sep  6 02:59:32 2000</td>\n@@ -46,37 +46,46 @@\n <td align=\"left\">fnatter</td>\n </tr>\n <tr><td align=\"left\" colspan=\"3\">added information about why file-descriptors are not in the\n-\t\t  standard</td></tr>\n+\t  standard</td></tr>\n <tr>\n <td align=\"left\">Revision 0.9.2</td>\n <td align=\"left\">Tue Jun  5 20:07:49 2001</td>\n <td align=\"left\">fnatter</td>\n </tr>\n <tr><td align=\"left\" colspan=\"3\">\n-\t\t  a fix, added hint on increased portability of C-shadow-headers,\n-\t\t  added autoconf-test HAVE_CONTAINER_AT\n-\t\t</td></tr>\n+\t  a fix, added hint on increased portability of C-shadow-headers,\n+\t  added autoconf-test HAVE_CONTAINER_AT\n+\t</td></tr>\n <tr>\n <td align=\"left\">Revision 0.9.3</td>\n <td align=\"left\">Fri Jun 29 16:15:56 2001</td>\n <td align=\"left\">fnatter</td>\n </tr>\n <tr><td align=\"left\" colspan=\"3\">\n-\t\t\tchanged signature of nonstandard filebuf-constructor and\n-\t\t  update the section on filebuf::attach to point to ../ext/howto.html,\n-\t\t  added link to ../21/strings/howto.html\n-\t\t  in sec-stringstream, changed &lt;link&gt;-tags to have content\n-\t\t\t(so that these links work),\n-\t\t  replace &quot;user-space&quot; by &quot;global namespace&quot;\n-\t\t\tadd note about gcc 3.0 and shadow-headers\t\t\t\n-\t\t\tadd section about ostream::form and istream::scan\n-\t\t\tsec-vector-at: remove hint to modify headers\n-\t\t\tfix spelling error in sec-stringstream\n-\t\t</td></tr>\n+\t  changed signature of nonstandard filebuf-constructor and\n+\t  update the section on filebuf::attach to point to ../ext/howto.html,\n+\t  added link to ../21/strings/howto.html\n+\t  in sec-stringstream, changed &lt;link&gt;-tags to have content\n+\t  (so that these links work),\n+\t  replace &quot;user-space&quot; by &quot;global namespace&quot;\n+\t  add note about gcc 3.0 and shadow-headers\t\t\t\n+\t  add section about ostream::form and istream::scan\n+\t  sec-vector-at: remove hint to modify headers\n+\t  fix spelling error in sec-stringstream\n+\t</td></tr>\n+<tr>\n+<td align=\"left\">Revision 0.9.4</td>\n+<td align=\"left\">Mon Nov  5 17:01:04 2001</td>\n+<td align=\"left\">fnatter</td>\n+</tr>\n+<tr><td align=\"left\" colspan=\"3\">\n+\t  rewrite section 1.1.3 because of gnu.gcc.help-post by\n+\t  Juergen Heinzl\n+\t</td></tr>\n </table></div></div>\n <div><div class=\"abstract\">\n <p>\n-<a name=\"id2695641\"></a><b>Abstract</b>\n+<a name=\"id2697062\"></a><b>Abstract</b>\n </p>\n <p>\n \tSome notes on porting applications from libstdc++-2.90 (or earlier\n@@ -162,19 +171,19 @@\n       things:\n       <div class=\"itemizedlist\"><ul>\n <li><p>\n-<a name=\"id2695691\"></a>wrap your code in <b>namespace std {\n+<a name=\"id2697113\"></a>wrap your code in <b>namespace std {\n \t      ... }</b> =&gt; This is not an option because only symbols\n \t    from the standard c++-library are defined in namespace std::.\n \t  </p></li>\n <li><p>\n-<a name=\"id2695698\"></a>put a kind of\n+<a name=\"id2697126\"></a>put a kind of\n \t    <i>using-declaration</i> in your source (either\n \t    <b>using namespace std;</b> or i.e. <b>using\n \t      std::string;</b>) =&gt; works well for source-files, but\n \t    cannot be used in header-files.\n \t  </p></li>\n <li><p>\n-<a name=\"id2695717\"></a>use a <i>fully qualified name</i> for\n+<a name=\"id2697047\"></a>use a <i>fully qualified name</i> for\n \t    each libstdc++-symbol (i.e. <b>std::string</b>,\n \t    <b>std::cout</b>) =&gt; can always be used\n \t  </p></li>\n@@ -257,12 +266,32 @@\n <p>\n \tIf some compilers complain about <b>using\n \t  std::string;</b>, and if the &quot;hack&quot; for gtk-- mentioned above\n-\tdoes not work, then it might be a good idea to define a macro\n-\tNS_STD, which is defined to either &quot;&quot; or &quot;std&quot;\n-\tbased on an autoconf-test. Then you should be able to use\n-\t<b>NS_STD::string</b>, which will evaluate to\n-\t<b>::string</b> (&quot;string in the global namespace&quot;) on\n-\tsystems that do not put string in std::.  (This is untested)\n+\tdoes not work, then I see two solutions:\n+\t\n+\t<div class=\"itemizedlist\"><ul>\n+<li><p>\n+<a name=\"id2698648\"></a>\n+\t      Define <b>std::</b> as a macro if the compiler\n+\t      doesn't know about <b>std::</b>.\n+\t      <pre class=\"programlisting\">\n+\t\t#ifdef OLD_COMPILER\n+\t\t#define std\n+\t\t#endif\n+\t      </pre>\n+\t      (thanks to Juergen Heinzl who posted this solution on\n+\t      gnu.gcc.help)\n+\t    </p></li>\n+<li><p>\n+<a name=\"id2698680\"></a>\n+\t      Define a macro NS_STD, which is defined to\n+\t      either &quot;&quot; or &quot;std&quot;\n+\t      based on an autoconf-test. Then you should be able to use\n+\t      <b>NS_STD::string</b>, which will evaluate to\n+\t      <b>::string</b> (&quot;string in the global namespace&quot;) on\n+\t      systems that do not put string in std::.  (This is untested)\n+\t    </p></li>\n+</ul></div>\n+\t  \n       </p>\n </div>\n <div class=\"section\">\n@@ -276,7 +305,7 @@\n       </p>\n <div class=\"table\">\n <p>\n-<a name=\"id2696268\"></a><b>Table 1. Namespace std:: in Open-Source programs</b>\n+<a name=\"id2698746\"></a><b>Table 1. Namespace std:: in Open-Source programs</b>\n </p>\n <table summary=\"Namespace std:: in Open-Source programs\" border=\"1\">\n <colgroup>\n@@ -310,7 +339,7 @@\n </div>\n <div class=\"table\">\n <p>\n-<a name=\"id2696334\"></a><b>Table 2. Notations for categories</b>\n+<a name=\"id2698876\"></a><b>Table 2. Notations for categories</b>\n </p>\n <table summary=\"Notations for categories\" border=\"1\">\n <colgroup>\n@@ -377,21 +406,21 @@\n     </p>\n <p>\n       When using libstdc++-v3, you can use\n-      <div class=\"funcsynopsis\" id=\"id2696909\">\n+      <div class=\"funcsynopsis\" id=\"id2692860\">\n <p>\n-<a name=\"id2696909\"></a><pre class=\"funcsynopsisinfo\">\n+<a name=\"id2692860\"></a><pre class=\"funcsynopsisinfo\">\n \t  #include &lt;fstream&gt;\n \t</pre>\n <p><code><code class=\"funcdef\">\n-\t\t  <b class=\"fsfunc\">basic_filebuf&lt;...&gt;::basic_filebuf&lt;...&gt;\n-\t\t\t</b>\n-\t\t</code>(<var class=\"pdparam\">file</var>, <var class=\"pdparam\">mode</var>, <var class=\"pdparam\">size</var>);<br>__c_file_type* <var class=\"pdparam\">file</var>;<br>ios_base::open_mode <var class=\"pdparam\">mode</var>;<br>int <var class=\"pdparam\">size</var>;</code></p>\n+\t    <b class=\"fsfunc\">basic_filebuf&lt;...&gt;::basic_filebuf&lt;...&gt;\n+\t    </b>\n+\t  </code>(<var class=\"pdparam\">file</var>, <var class=\"pdparam\">mode</var>, <var class=\"pdparam\">size</var>);<br>__c_file_type* <var class=\"pdparam\">file</var>;<br>ios_base::open_mode <var class=\"pdparam\">mode</var>;<br>int <var class=\"pdparam\">size</var>;</code></p>\n <p>\n </div>\n       but the the signature of this constructor has changed often, and\n       it might change again. For the current state of this, check\n-\t  <a href=\"../ext/howto.html\" target=\"_top\">the howto for extensions</a>.\n-\t</p>\n+      <a href=\"../ext/howto.html\" target=\"_top\">the howto for extensions</a>.\n+    </p>\n <p>\n       For a portable solution (among systems which use\n       filedescriptors), you need to implement a subclass of\n@@ -410,8 +439,8 @@\n \tsource-code</a>.\n     </p>\n <p>\n-    The old C++-headers (iostream.h etc.) are available, but gcc generates\n-    a warning that you are using deprecated headers.\n+      The old C++-headers (iostream.h etc.) are available, but gcc generates\n+      a warning that you are using deprecated headers.\n     </p>\n <div class=\"section\">\n <a name=\"sec-cheaders\"></a><div class=\"titlepage\"><div><h3 class=\"title\">\n@@ -441,7 +470,7 @@\n \tFor more information on this, and for information on how the\n \tGNU C++ implementation might reuse (&quot;shadow&quot;) the C\n \tlibrary-functions, have a look at <a href=\"http://www.cantrip.org/cheaders.html\" target=\"_top\">\n-\twww.cantrip.org</a>.\n+\t  www.cantrip.org</a>.\n       </p>\n </div>\n <div class=\"section\">\n@@ -455,8 +484,8 @@\n \tIn earlier versions of the standard,\n \t<tt>&lt;fstream.h&gt;</tt>,\n \t<tt>&lt;ostream.h&gt;</tt>\n-\t and <tt>&lt;istream.h&gt;</tt>\n-\t  used to define\n+\tand <tt>&lt;istream.h&gt;</tt>\n+\tused to define\n \t<b>cout</b>, <b>cin</b> and so on. Because\n \tof the templatized iostreams in libstdc++-v3, you need to include\n \t<tt>&lt;iostream&gt;</tt>\n@@ -473,18 +502,18 @@\n       fixes for existing uses of iterators.\n       <div class=\"itemizedlist\"><ul>\n <li><p>\n-<a name=\"id2692127\"></a>you cannot do\n+<a name=\"id2693156\"></a>you cannot do\n \t    <b>ostream::operator&lt;&lt;(iterator)</b> to\n \t    print the address of the iterator =&gt; use\n \t    <b>operator&lt;&lt; &amp;*iterator</b> instead ?\n \t  </p></li>\n <li><p>\n-<a name=\"id2697070\"></a>you cannot clear an iterator's reference\n+<a name=\"id2693255\"></a>you cannot clear an iterator's reference\n \t    (<b>iterator = 0</b>) =&gt; use\n \t    <b>iterator = iterator_type();</b> ?\n \t  </p></li>\n <li><p>\n-<a name=\"id2697221\"></a><b>if (iterator)</b> won't work any\n+<a name=\"id2693277\"></a><b>if (iterator)</b> won't work any\n \t    more =&gt; use <b>if (iterator != iterator_type())</b>\n \t    ?</p></li>\n </ul></div>\n@@ -501,7 +530,7 @@\n       <tt>&lt;ctype.h&gt;</tt>\n       -functionality as macros (isspace, isalpha etc.). Libstdc++-v3\n       &quot;shadows&quot; these macros as described in the <a href=\"#sec-cheaders\">section about\n-      c-headers</a>.\n+\tc-headers</a>.\n     </p>\n <p>\n       Older implementations of libstdc++ (g++-2 for egcs 1.x and g++-3\n@@ -552,8 +581,8 @@\n \t--enable-cshadow-headers is currently broken. As a result, shadow\n \theaders are not being searched....\n       '\n-\t\t\tThis is now outdated, but gcc 3.0 still does not have fully\n-\t\t\tcompliant &quot;shadow headers&quot;.\n+      This is now outdated, but gcc 3.0 still does not have fully\n+      compliant &quot;shadow headers&quot;.\n     </p>\n </div>\n <div class=\"section\">\n@@ -646,10 +675,10 @@\n <a name=\"sec-scan-form\"></a><span class=\"label\">11.</span> <span class=\"title\">GNU Extensions ostream::form and istream::scan</span>\n </h2></div></div>\n <p>\n-\t\tThese\tare not supported any more - use\n-\t\t<a href=\"#sec-stringstream\">\n-\t\tstringstreams</a> instead.\t\n-\t\t</p>\n+      These\tare not supported any more - use\n+      <a href=\"#sec-stringstream\">\n+\tstringstreams</a> instead.\t\n+    </p>\n </div>\n <div class=\"section\">\n <a name=\"sec-stringstream\"></a><div class=\"titlepage\"><div><h2 class=\"title\" style=\"clear: all\">\n@@ -669,20 +698,20 @@\n       </pre>\n       <div class=\"itemizedlist\"><ul>\n <li><p>\n-<a name=\"id2692504\"></a> <b>strstream</b> is considered to be\n+<a name=\"id2693683\"></a> <b>strstream</b> is considered to be\n \t    deprecated\n \t  </p></li>\n <li><p>\n-<a name=\"id2692452\"></a> <b>strstream</b> is limited to\n+<a name=\"id2693629\"></a> <b>strstream</b> is limited to\n \t    <b>char</b>\n \t  </p></li>\n <li><p>\n-<a name=\"id2692539\"></a> with <b>ostringstream</b> you don't\n+<a name=\"id2693718\"></a> with <b>ostringstream</b> you don't\n \t    have to take care of terminating the string or freeing its\n \t    memory\n \t  </p></li>\n <li><p>\n-<a name=\"id2692552\"></a> <b>istringstream</b> can be re-filled\n+<a name=\"id2693735\"></a> <b>istringstream</b> can be re-filled\n \t    (clear(); str(input);)\n \t  </p></li>\n </ul></div>\n@@ -739,18 +768,18 @@\n \tvoid fromString(const string&amp; input, X&amp; any)\n \t{\n \t#ifdef HAVE_SSTREAM\n-\t  std::istringstream iss(input);\n+\tstd::istringstream iss(input);\n \t#else\n-\t  std::istrstream iss(input.c_str());\n+\tstd::istrstream iss(input.c_str());\n \t#endif\n-\t  X temp;\n-\t  iss &gt;&gt; temp;\n-\t  if (iss.fail())\n-\t    throw runtime_error(..)\n-\t  any = temp;\n+\tX temp;\n+\tiss &gt;&gt; temp;\n+\tif (iss.fail())\n+\tthrow runtime_error(..)\n+\tany = temp;\n \t}\n       </pre>\n-\t  Another example of using stringstreams is in <a href=\"../21_strings/howto.html\" target=\"_top\">this howto</a>.\n+      Another example of using stringstreams is in <a href=\"../21_strings/howto.html\" target=\"_top\">this howto</a>.\n     </p>\n <p>\n       I have read the Josuttis book on Standard C++, so some information"}, {"sha": "1c02843335580aaf069b4d60223984144096b0ec", "filename": "libstdc++-v3/docs/html/17_intro/porting-howto.xml", "status": "modified", "additions": 120, "deletions": 91, "changes": 211, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5356269d3d2f8c1a48184c27fdfc052934ae0c4/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Fporting-howto.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5356269d3d2f8c1a48184c27fdfc052934ae0c4/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Fporting-howto.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Fporting-howto.xml?ref=a5356269d3d2f8c1a48184c27fdfc052934ae0c4", "patch": "@@ -22,6 +22,7 @@\n <!-- TODO:\n o remove //@label: use automatic numbering\n o make this work: <link linkend=\"sec-gtkmm-hack\" endterm=\"sec-gtkmm-hack.title\"/>.\n+o clean up the section-numbering\n -->\n \n <article class = \"whitepaper\" id = \"libstdc++-porting-howto\" lang = \"en\">\n@@ -36,63 +37,72 @@ o make this work: <link linkend=\"sec-gtkmm-hack\" endterm=\"sec-gtkmm-hack.title\"/\n     </address>\n     <revhistory>\n       <revision>\n-\t\t<revnumber>0.5</revnumber>\n-\t\t<date>Thu Jun  1 13:06:50 2000</date>\n-\t\t<authorinitials>fnatter</authorinitials>\n-\t\t<revremark>First docbook-version.</revremark>\n+\t<revnumber>0.5</revnumber>\n+\t<date>Thu Jun  1 13:06:50 2000</date>\n+\t<authorinitials>fnatter</authorinitials>\n+\t<revremark>First docbook-version.</revremark>\n       </revision>\n       <revision>\n-\t\t<revnumber>0.8</revnumber>\n-\t\t<date>Sun Jul 30 20:28:40 2000</date>\n-\t\t<authorinitials>fnatter</authorinitials>\n-\t\t<revremark>First released version using docbook-xml\n-\t\t  + second upload to libstdc++-page.\n-\t\t</revremark>\n+\t<revnumber>0.8</revnumber>\n+\t<date>Sun Jul 30 20:28:40 2000</date>\n+\t<authorinitials>fnatter</authorinitials>\n+\t<revremark>First released version using docbook-xml\n+\t  + second upload to libstdc++-page.\n+\t</revremark>\n       </revision>\n       <revision>\n-\t\t<revnumber>0.9</revnumber>\n-\t\t<date>Wed Sep  6 02:59:32 2000</date>\n-\t\t<authorinitials>fnatter</authorinitials>\n-\t\t<revremark>5 new sections.</revremark>\n+\t<revnumber>0.9</revnumber>\n+\t<date>Wed Sep  6 02:59:32 2000</date>\n+\t<authorinitials>fnatter</authorinitials>\n+\t<revremark>5 new sections.</revremark>\n       </revision>\n       <revision>\n-\t\t<revnumber>0.9.1</revnumber>\n-\t\t<date>Sat Sep 23 14:20:15 2000</date>\n-\t\t<authorinitials>fnatter</authorinitials>\n-\t\t<revremark>added information about why file-descriptors are not in the\n-\t\t  standard</revremark>\n+\t<revnumber>0.9.1</revnumber>\n+\t<date>Sat Sep 23 14:20:15 2000</date>\n+\t<authorinitials>fnatter</authorinitials>\n+\t<revremark>added information about why file-descriptors are not in the\n+\t  standard</revremark>\n       </revision>\n       <revision>\n-\t\t<revnumber>0.9.2</revnumber>\n-\t\t<date>Tue Jun  5 20:07:49 2001</date>\n-\t\t<authorinitials>fnatter</authorinitials>\n-\t\t<revremark>\n-\t\t  a fix, added hint on increased portability of C-shadow-headers,\n-\t\t  added autoconf-test HAVE_CONTAINER_AT\n-\t\t</revremark>\n+\t<revnumber>0.9.2</revnumber>\n+\t<date>Tue Jun  5 20:07:49 2001</date>\n+\t<authorinitials>fnatter</authorinitials>\n+\t<revremark>\n+\t  a fix, added hint on increased portability of C-shadow-headers,\n+\t  added autoconf-test HAVE_CONTAINER_AT\n+\t</revremark>\n       </revision>\n       <revision>\n-\t\t<revnumber>0.9.3</revnumber>\n-\t\t<date>Fri Jun 29 16:15:56 2001</date>\n-\t\t<authorinitials>fnatter</authorinitials>\n-\t\t<revremark>\n-\t\t\tchanged signature of nonstandard filebuf-constructor and\n-\t\t  update the section on filebuf::attach to point to ../ext/howto.html,\n-\t\t  added link to ../21/strings/howto.html\n-\t\t  in sec-stringstream, changed &lt;link&gt;-tags to have content\n-\t\t\t(so that these links work),\n-\t\t  replace \"user-space\" by \"global namespace\"\n-\t\t\tadd note about gcc 3.0 and shadow-headers\t\t\t\n-\t\t\tadd section about ostream::form and istream::scan\n-\t\t\tsec-vector-at: remove hint to modify headers\n-\t\t\tfix spelling error in sec-stringstream\n-\t\t</revremark>\n+\t<revnumber>0.9.3</revnumber>\n+\t<date>Fri Jun 29 16:15:56 2001</date>\n+\t<authorinitials>fnatter</authorinitials>\n+\t<revremark>\n+\t  changed signature of nonstandard filebuf-constructor and\n+\t  update the section on filebuf::attach to point to ../ext/howto.html,\n+\t  added link to ../21/strings/howto.html\n+\t  in sec-stringstream, changed &lt;link&gt;-tags to have content\n+\t  (so that these links work),\n+\t  replace \"user-space\" by \"global namespace\"\n+\t  add note about gcc 3.0 and shadow-headers\t\t\t\n+\t  add section about ostream::form and istream::scan\n+\t  sec-vector-at: remove hint to modify headers\n+\t  fix spelling error in sec-stringstream\n+\t</revremark>\n+      </revision>\n+      <revision>\n+\t<revnumber>0.9.4</revnumber>\n+\t<date>Mon Nov  5 17:01:04 2001</date>\n+\t<authorinitials>fnatter</authorinitials>\n+\t<revremark>\n+\t  rewrite section 1.1.3 because of gnu.gcc.help-post by\n+\t  Juergen Heinzl\n+\t</revremark>\n       </revision>\n     </revhistory>\n     <legalnotice><title>Legal Notice</title>\n       <para>\n-\t\tThis document can be distributed under the FDL\n-\t\t(<ulink url = \"http://www.gnu.org\">www.gnu.org</ulink>)\n+\tThis document can be distributed under the FDL\n+\t(<ulink url = \"http://www.gnu.org\">www.gnu.org</ulink>)\n       </para>\n     </legalnotice>\n     \n@@ -216,12 +226,31 @@ o make this work: <link linkend=\"sec-gtkmm-hack\" endterm=\"sec-gtkmm-hack.title\"/\n       <para>\n \tIf some compilers complain about <command>using\n \t  std::string;</command>, and if the \"hack\" for gtk-- mentioned above\n-\tdoes not work, then it might be a good idea to define a macro\n-\t<symbol>NS_STD</symbol>, which is defined to either \"\" or \"std\"\n-\tbased on an autoconf-test. Then you should be able to use\n-\t<command>NS_STD::string</command>, which will evaluate to\n-\t<command>::string</command> (\"string in the global namespace\") on\n-\tsystems that do not put string in std::.  (This is untested)\n+\tdoes not work, then I see two solutions:\n+\t\n+\t<itemizedlist>\n+\t  <listitem><para>\n+\t      Define <command>std::</command> as a macro if the compiler\n+\t      doesn't know about <command>std::</command>.\n+\t      <programlisting>\n+\t\t#ifdef OLD_COMPILER\n+\t\t#define std\n+\t\t#endif\n+\t      </programlisting>\n+\t      (thanks to Juergen Heinzl who posted this solution on\n+\t      gnu.gcc.help)\n+\t    </para></listitem>\n+\t  \n+\t  <listitem><para>\n+\t      Define a macro <symbol>NS_STD</symbol>, which is defined to\n+\t      either \"\" or \"std\"\n+\t      based on an autoconf-test. Then you should be able to use\n+\t      <command>NS_STD::string</command>, which will evaluate to\n+\t      <command>::string</command> (\"string in the global namespace\") on\n+\t      systems that do not put string in std::.  (This is untested)\n+\t    </para></listitem>\n+\t</itemizedlist>\n+\t  \n       </para>\n     </section>\n     \n@@ -288,7 +317,7 @@ o make this work: <link linkend=\"sec-gtkmm-hack\" endterm=\"sec-gtkmm-hack.title\"/\n \tAs you can see, this currently lacks an example of a project\n \twhich uses libstdc++-symbols in headers in a back-portable way\n \t(except for Gtk--: see the <link linkend=\"sec-gtkmm-hack\"\n-\tendterm=\"sec-gtkmm-hack.title\">section on the gtkmm-hack</link>).\n+\t  endterm=\"sec-gtkmm-hack.title\">section on the gtkmm-hack</link>).\n       </para>\n     </section>\t\t\n   </section> <!-- end of namespace-section -->\n@@ -330,19 +359,19 @@ o make this work: <link linkend=\"sec-gtkmm-hack\" endterm=\"sec-gtkmm-hack.title\"/\n \t</funcsynopsisinfo>\n \t<funcprototype>\n \t  <funcdef>\n-\t\t  <function>basic_filebuf&lt;...&gt;::basic_filebuf&lt;...&gt;\n-\t\t\t</function>\n-\t\t</funcdef>\n-\t\t<paramdef>__c_file_type* <parameter>file</parameter></paramdef>\n+\t    <function>basic_filebuf&lt;...&gt;::basic_filebuf&lt;...&gt;\n+\t    </function>\n+\t  </funcdef>\n+\t  <paramdef>__c_file_type* <parameter>file</parameter></paramdef>\n \t  <paramdef>ios_base::open_mode <parameter>mode</parameter></paramdef>\n \t  <paramdef>int <parameter>size</parameter></paramdef>\n \t</funcprototype>\n       </funcsynopsis>\n       but the the signature of this constructor has changed often, and\n       it might change again. For the current state of this, check\n-\t  <ulink url=\"../ext/howto.html\">the howto for extensions</ulink>.\n-\t</para>\n-\t<para>\n+      <ulink url=\"../ext/howto.html\">the howto for extensions</ulink>.\n+    </para>\n+    <para>\n       For a portable solution (among systems which use\n       filedescriptors), you need to implement a subclass of\n       <command>std::streambuf</command> (or\n@@ -359,8 +388,8 @@ o make this work: <link linkend=\"sec-gtkmm-hack\" endterm=\"sec-gtkmm-hack.title\"/\n \tsource-code</ulink>.\n     </para>\n     <para>\n-    The old C++-headers (iostream.h etc.) are available, but gcc generates\n-    a warning that you are using deprecated headers.\n+      The old C++-headers (iostream.h etc.) are available, but gcc generates\n+      a warning that you are using deprecated headers.\n     </para>\n \n     <section id = \"sec-cheaders\" label = \"4.1\">\n@@ -372,30 +401,30 @@ o make this work: <link linkend=\"sec-gtkmm-hack\" endterm=\"sec-gtkmm-hack.title\"/\n \tomitting the extension (.h). For example, instead of using\n \t<filename class=\"headerfile\">&lt;math.h&gt;</filename>, you\n \tshould use <filename class =\n-\t\"headerfile\">&lt;cmath&gt;</filename>. In some cases this has\n+\t  \"headerfile\">&lt;cmath&gt;</filename>. In some cases this has\n \tthe advantage that the C++-header is more standardized than\n \tthe C-header (i.e. <filename\n-\tclass=\"headerfile\">&lt;ctime&gt;</filename> (almost)\n+\t  class=\"headerfile\">&lt;ctime&gt;</filename> (almost)\n \tcorresponds to either <filename class =\n-\t\"headerfile\">&lt;time.h&gt;</filename> or <filename class =\n-\t\"headerfile\">&lt;sys/time.h&gt;</filename>).\n+\t  \"headerfile\">&lt;time.h&gt;</filename> or <filename class =\n+\t  \"headerfile\">&lt;sys/time.h&gt;</filename>).\n \n \tThe standard specifies that if you include the C-style header\n \t(<filename class = \"headerfile\">&lt;math.h&gt;</filename> in\n \tthis case), the symbols will be available both in the global\n \tnamespace and in namespace <command>std::</command> (but\n \tlibstdc++ does not yet have fully compliant headers) On the\n \tother hand, if you include only the new header (i.e. <filename\n-\tclass = \"headerfile\">&lt;cmath&gt;</filename>), the symbols\n+\t  class = \"headerfile\">&lt;cmath&gt;</filename>), the symbols\n \twill only be defined in namespace <command>std::</command>\n \t(and macros will be converted to inline-functions).\n       </para>\n       <para>\n \tFor more information on this, and for information on how the\n \tGNU C++ implementation might reuse (\"shadow\") the C\n \tlibrary-functions, have a look at <ulink\n-\turl=\"http://www.cantrip.org/cheaders.html\">\n-\twww.cantrip.org</ulink>.\n+\t  url=\"http://www.cantrip.org/cheaders.html\">\n+\t  www.cantrip.org</ulink>.\n       </para>\n     </section>\n     \n@@ -408,8 +437,8 @@ o make this work: <link linkend=\"sec-gtkmm-hack\" endterm=\"sec-gtkmm-hack.title\"/\n \tIn earlier versions of the standard,\n \t<filename class=\"headerfile\">&lt;fstream.h&gt;</filename>,\n \t<filename class=\"headerfile\">&lt;ostream.h&gt;</filename>\n-\t and <filename class=\"headerfile\">&lt;istream.h&gt;</filename>\n-\t  used to define\n+\tand <filename class=\"headerfile\">&lt;istream.h&gt;</filename>\n+\tused to define\n \t<command>cout</command>, <command>cin</command> and so on. Because\n \tof the templatized iostreams in libstdc++-v3, you need to include\n \t<filename class = \"headerfile\">&lt;iostream&gt;</filename>\n@@ -452,8 +481,8 @@ o make this work: <link linkend=\"sec-gtkmm-hack\" endterm=\"sec-gtkmm-hack.title\"/\n       <filename class=\"headerfile\">&lt;ctype.h&gt;</filename>\n       -functionality as macros (isspace, isalpha etc.). Libstdc++-v3\n       \"shadows\" these macros as described in the <link\n-      linkend=\"sec-cheaders\" endterm=\"sec-cheaders.title\">section about\n-      c-headers</link>.\n+\tlinkend=\"sec-cheaders\" endterm=\"sec-cheaders.title\">section about\n+\tc-headers</link>.\n     </para>\n     <para>\n       Older implementations of libstdc++ (g++-2 for egcs 1.x and g++-3\n@@ -478,7 +507,7 @@ o make this work: <link linkend=\"sec-gtkmm-hack\" endterm=\"sec-gtkmm-hack.title\"/\n       Another solution which would fix g++ is to tell the user to modify a\n       header-file so that g++-2 (egcs 1.x) and g++-3 (gcc 2.95.x) define a\n       macro which tells <filename\n-\t\t\t\t  class=\"headerfile\">&lt;ctype.h&gt;</filename> to define functions\n+\tclass=\"headerfile\">&lt;ctype.h&gt;</filename> to define functions\n       instead of macros:\n       <programlisting>\n \t// This keeps isalnum, et al from being propagated as macros.\n@@ -492,7 +521,7 @@ o make this work: <link linkend=\"sec-gtkmm-hack\" endterm=\"sec-gtkmm-hack.title\"/\n     <para>\n       Another problem arises if you put a <command>using namespace\n \tstd;</command> declaration at the top, and include <filename class\n-\t\t\t\t\t\t\t\t     = \"headerfile\">&lt;ctype.h&gt;</filename>. This will result in\n+\t= \"headerfile\">&lt;ctype.h&gt;</filename>. This will result in\n       ambiguities between the definitions in the global namespace\n       (<filename class = \"headerfile\">&lt;ctype.h&gt;</filename>) and the\n       definitions in namespace <command>std::</command>\n@@ -506,8 +535,8 @@ o make this work: <link linkend=\"sec-gtkmm-hack\" endterm=\"sec-gtkmm-hack.title\"/\n \t--enable-cshadow-headers is currently broken. As a result, shadow\n \theaders are not being searched....\n       </quote>\n-\t\t\tThis is now outdated, but gcc 3.0 still does not have fully\n-\t\t\tcompliant \"shadow headers\".\n+      This is now outdated, but gcc 3.0 still does not have fully\n+      compliant \"shadow headers\".\n     </para>\n   </section>\n \n@@ -593,23 +622,23 @@ o make this work: <link linkend=\"sec-gtkmm-hack\" endterm=\"sec-gtkmm-hack.title\"/\n   </section>\n \n   <section id=\"sec-scan-form\" label=\"11\">\n-\t  <title>GNU Extensions ostream::form and istream::scan</title>\n-\t\t<para>\n-\t\tThese\tare not supported any more - use\n-\t\t<link\tlinkend=\"sec-stringstream\" endterm=\"sec-stringstream.title\">\n-\t\tstringstreams</link> instead.\t\n-\t\t</para>\n+    <title>GNU Extensions ostream::form and istream::scan</title>\n+    <para>\n+      These\tare not supported any more - use\n+      <link\tlinkend=\"sec-stringstream\" endterm=\"sec-stringstream.title\">\n+\tstringstreams</link> instead.\t\n+    </para>\n   </section>\n \n   <section id=\"sec-stringstream\" label=\"12\">\n     <title>Using stringstreams</title>\n     <para>\n       Libstdc++-v3 provides the new\n       <command>i/ostringstream</command>-classes, (<filename\n-      class=\"headerfile\">&lt;sstream&gt;</filename>), but for compatibility\n+\tclass=\"headerfile\">&lt;sstream&gt;</filename>), but for compatibility\n       with older implementations you still have to use\n       <command>i/ostrstream</command> (<filename\n-      class=\"headerfile\">&lt;strstream&gt;</filename>):\n+\tclass=\"headerfile\">&lt;strstream&gt;</filename>):\n       <programlisting>\n \t#ifdef HAVE_SSTREAM\n \t#include &lt;sstream&gt;\n@@ -689,19 +718,19 @@ o make this work: <link linkend=\"sec-gtkmm-hack\" endterm=\"sec-gtkmm-hack.title\"/\n \tvoid fromString(const string&amp; input, X&amp; any)\n \t{\n \t#ifdef HAVE_SSTREAM\n-\t  std::istringstream iss(input);\n+\tstd::istringstream iss(input);\n \t#else\n-\t  std::istrstream iss(input.c_str());\n+\tstd::istrstream iss(input.c_str());\n \t#endif\n-\t  X temp;\n-\t  iss >> temp;\n-\t  if (iss.fail())\n-\t    throw runtime_error(..)\n-\t  any = temp;\n+\tX temp;\n+\tiss >> temp;\n+\tif (iss.fail())\n+\tthrow runtime_error(..)\n+\tany = temp;\n \t}\n       </programlisting>\n-\t  Another example of using stringstreams is in <ulink\n-\t  url=\"../21_strings/howto.html\">this howto</ulink>.\n+      Another example of using stringstreams is in <ulink\n+\turl=\"../21_strings/howto.html\">this howto</ulink>.\n     </para>\n     <para>\n       I have read the Josuttis book on Standard C++, so some information"}]}