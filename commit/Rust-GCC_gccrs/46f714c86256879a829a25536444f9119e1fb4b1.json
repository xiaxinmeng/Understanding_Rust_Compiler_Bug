{"sha": "46f714c86256879a829a25536444f9119e1fb4b1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDZmNzE0Yzg2MjU2ODc5YTgyOWEyNTUzNjQ0NGY5MTE5ZTFmYjRiMQ==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@gmail.com", "date": "2012-06-05T01:59:14Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2012-06-05T01:59:14Z"}, "message": "rs6000.c (ptr_regno_for_savres): Comment.\n\ngcc/\n\t* config/rs6000/rs6000.c (ptr_regno_for_savres): Comment.\n\t(rs6000_emit_prologue): Ensure register used for inline saves\n\tof vector regs is not the static chain register.  Revise comment.\ngcc/testsuite/\n\t* gcc.target/powerpc/savres.c: Add -mdynamic-no-pic for darwin.\n\tCheck static chain in nested funcs.\n\nFrom-SVN: r188225", "tree": {"sha": "811e5d4b6e4a48e291710ee16616cdb9711dd7b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/811e5d4b6e4a48e291710ee16616cdb9711dd7b8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/46f714c86256879a829a25536444f9119e1fb4b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46f714c86256879a829a25536444f9119e1fb4b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/46f714c86256879a829a25536444f9119e1fb4b1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46f714c86256879a829a25536444f9119e1fb4b1/comments", "author": {"login": "amodra", "id": 6006325, "node_id": "MDQ6VXNlcjYwMDYzMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amodra", "html_url": "https://github.com/amodra", "followers_url": "https://api.github.com/users/amodra/followers", "following_url": "https://api.github.com/users/amodra/following{/other_user}", "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}", "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amodra/subscriptions", "organizations_url": "https://api.github.com/users/amodra/orgs", "repos_url": "https://api.github.com/users/amodra/repos", "events_url": "https://api.github.com/users/amodra/events{/privacy}", "received_events_url": "https://api.github.com/users/amodra/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6d1f6affb2d7c14f6c74d4a15be7e39de601bb85", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d1f6affb2d7c14f6c74d4a15be7e39de601bb85", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d1f6affb2d7c14f6c74d4a15be7e39de601bb85"}], "stats": {"total": 229, "additions": 158, "deletions": 71}, "files": [{"sha": "faae6b78d87e1532b39dfaed941391255f0d2c39", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46f714c86256879a829a25536444f9119e1fb4b1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46f714c86256879a829a25536444f9119e1fb4b1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=46f714c86256879a829a25536444f9119e1fb4b1", "patch": "@@ -1,3 +1,9 @@\n+2012-06-05  Alan Modra  <amodra@gmail.com>\n+\n+\t* config/rs6000/rs6000.c (ptr_regno_for_savres): Comment.\n+\t(rs6000_emit_prologue): Ensure register used for inline saves\n+\tof vector regs is not the static chain register.  Revise comment.\n+\n 2012-06-04  Oleg Endo  <olegendo@gcc.gnu.org>\n \n \t* doc/md.texi (Standard Pattern Names For Generation): Document"}, {"sha": "7b6e1e0ed2dba1cf8957e91a8986d7a13cafc3c2", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46f714c86256879a829a25536444f9119e1fb4b1/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46f714c86256879a829a25536444f9119e1fb4b1/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=46f714c86256879a829a25536444f9119e1fb4b1", "patch": "@@ -19109,6 +19109,9 @@ rs6000_emit_stack_reset (rs6000_stack_t *info,\n   return NULL_RTX;\n }\n \n+/* Return the register number used as a pointer by out-of-line\n+   save/restore functions.  */\n+\n static inline unsigned\n ptr_regno_for_savres (int sel)\n {\n@@ -19846,6 +19849,9 @@ rs6000_emit_prologue (void)\n \t  int sel = SAVRES_SAVE | SAVRES_VR;\n \t  unsigned ptr_regno = ptr_regno_for_savres (sel);\n \n+\t  if (using_static_chain_p\n+\t      && ptr_regno == STATIC_CHAIN_REGNUM)\n+\t    ptr_regno = 12;\n \t  if (REGNO (frame_reg_rtx) != ptr_regno)\n \t    START_USE (ptr_regno);\n \t  ptr_reg = gen_rtx_REG (Pmode, ptr_regno);\n@@ -19954,9 +19960,9 @@ rs6000_emit_prologue (void)\n       int offset;\n       int save_regno;\n \n-      /* Get VRSAVE onto a GPR.  Note that ABI_V4 might be using r12\n-\t as frame_reg_rtx and r11 as the static chain pointer for\n-\t nested functions.  */\n+      /* Get VRSAVE onto a GPR.  Note that ABI_V4 and ABI_DARWIN might\n+\t be using r12 as frame_reg_rtx and r11 as the static chain\n+\t pointer for nested functions.  */\n       save_regno = 12;\n       if (DEFAULT_ABI == ABI_AIX && !using_static_chain_p)\n \tsave_regno = 11;"}, {"sha": "c87ae14132bbe601acba1f7c1474813b74a15590", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46f714c86256879a829a25536444f9119e1fb4b1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46f714c86256879a829a25536444f9119e1fb4b1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=46f714c86256879a829a25536444f9119e1fb4b1", "patch": "@@ -1,3 +1,8 @@\n+2012-06-05  Alan Modra  <amodra@gmail.com>\n+\n+\t* gcc.target/powerpc/savres.c: Add -mdynamic-no-pic for darwin.\n+\tCheck static chain in nested funcs.\n+\n 2012-06-04  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/50619"}, {"sha": "f10c99a4b939dcdbff363fc71217a8625dbc3210", "filename": "gcc/testsuite/gcc.target/powerpc/savres.c", "status": "modified", "additions": 138, "deletions": 68, "changes": 206, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46f714c86256879a829a25536444f9119e1fb4b1/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsavres.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46f714c86256879a829a25536444f9119e1fb4b1/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsavres.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsavres.c?ref=46f714c86256879a829a25536444f9119e1fb4b1", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do run } */\n /* { dg-options \"-fno-inline -fomit-frame-pointer\" } */\n+/* { dg-additional-options \"-mdynamic-no-pic\" { target *-*-darwin* } } */\n \n /* -fno-inline -maltivec -m32/-m64 -mmultiple/no-multiple -Os/-O2.  */\n #ifndef NO_BODY\n@@ -73,6 +74,7 @@ __attribute__ ((vector_size (16))) int val31 = {-311,-312,-313,-314};\n \n #else /* NO_BODY */\n /* For looking at prologue and epilogue code without distractions.  */\n+#define abort()\n #define TRASH_ALL_CR\n #define TRASH_ALL_VR\n #define TRASH_ALL_FPR\n@@ -458,7 +460,7 @@ void s_0 (void)\n void wb_all (void)\n {\n   char b[10];\n-  void nb_all (void)\n+  char *nb_all (void)\n   {\n     char a[33000];\n     TRASH_ALL_CR;\n@@ -470,14 +472,16 @@ void wb_all (void)\n     USE_ALL_FPR;\n     USE_ALL_GPR;\n     __asm __volatile (\"#%0 %1\" : \"=m\" (a), \"=m\" (b) : : \"cr2\", \"cr3\", \"cr4\", \"v20\", \"v21\", \"v22\", \"v23\", \"v24\", \"v25\", \"v26\", \"v27\", \"v28\", \"v29\", \"v30\", \"v31\", \"fr14\", \"fr15\", \"fr16\", \"fr17\", \"fr18\", \"fr19\", \"fr20\", \"fr21\", \"fr22\", \"fr23\", \"fr24\", \"fr25\", \"fr26\", \"fr27\", \"fr28\", \"fr29\", \"fr30\", \"fr31\", \"r14\", \"r15\", \"r16\", \"r17\", \"r18\", \"r19\", \"r20\", \"r21\", \"r22\", \"r23\", \"r24\", \"r25\", \"r26\", \"r27\", \"r28\", \"r29\", \"r30\", \"r31\");\n+    return b;\n   }\n-  nb_all();\n+  if (nb_all() != b)\n+    abort ();\n }\n \n void wb_cvfr (void)\n {\n   char b[10];\n-  void nb_cvfr (void)\n+  char *nb_cvfr (void)\n   {\n     char a[33000];\n     TRASH_SOME_CR;\n@@ -489,14 +493,16 @@ void wb_cvfr (void)\n     USE_SOME_FPR;\n     USE_SOME_GPR;\n     __asm __volatile (\"#%0 %1\" : \"=m\" (a), \"=m\" (b) : : \"cr2\", \"v26\", \"v27\", \"v31\", \"fr28\", \"fr31\", \"r30\", \"r31\");\n+    return b;\n   }\n-  nb_cvfr ();\n+  if (nb_cvfr () != b)\n+    abort ();\n }\n \n void wb_vfr (void)\n {\n   char b[10];\n-  void nb_vfr (void)\n+  char *nb_vfr (void)\n   {\n     char a[33000];\n     TRASH_SOME_VR;\n@@ -506,14 +512,16 @@ void wb_vfr (void)\n     USE_SOME_FPR;\n     USE_SOME_GPR;\n     __asm __volatile (\"#%0 %1\" : \"=m\" (a), \"=m\" (b) : : \"v26\", \"v27\", \"v31\", \"fr28\", \"fr31\", \"r30\", \"r31\");\n+    return b;\n   }\n-  nb_vfr ();\n+  if (nb_vfr () != b)\n+    abort ();\n }\n \n void wb_cvf (void)\n {\n   char b[10];\n-  void nb_cvf (void)\n+  char *nb_cvf (void)\n   {\n     char a[33000];\n     TRASH_SOME_CR;\n@@ -523,30 +531,34 @@ void wb_cvf (void)\n     USE_SOME_VR;\n     USE_SOME_FPR;\n     __asm __volatile (\"#%0 %1\" : \"=m\" (a), \"=m\" (b) : : \"cr2\", \"v26\", \"v27\", \"v31\", \"fr28\", \"fr31\");\n+    return b;\n   }\n-  nb_cvf ();\n+  if (nb_cvf () != b)\n+    abort ();\n }\n \n void wb_vf (void)\n {\n   char b[10];\n-  void nb_vf (void)\n+  char *nb_vf (void)\n   {\n     char a[33000];\n     TRASH_SOME_VR;\n     TRASH_SOME_FPR;\n     USE_SOME_VR;\n     USE_SOME_FPR;\n     __asm __volatile (\"#%0 %1\" : \"=m\" (a), \"=m\" (b) : : \"v26\", \"v27\", \"v31\", \"fr28\", \"fr31\");\n+    return b;\n   }\n-  nb_vf ();\n+  if (nb_vf () != b)\n+    abort ();\n }\n #endif\n \n void wb_cvr (void)\n {\n   char b[10];\n-  void nb_cvr (void)\n+  char *nb_cvr (void)\n   {\n     char a[33000];\n     TRASH_SOME_CR;\n@@ -556,59 +568,67 @@ void wb_cvr (void)\n     USE_SOME_VR;\n     USE_SOME_GPR;\n     __asm __volatile (\"#%0 %1\" : \"=m\" (a), \"=m\" (b) : : \"cr2\", \"v26\", \"v27\", \"v31\", \"r30\", \"r31\");\n+    return b;\n   }\n-  nb_cvr ();\n+  if (nb_cvr () != b)\n+    abort ();\n }\n \n void wb_vr (void)\n {\n   char b[10];\n-  void nb_vr (void)\n+  char *nb_vr (void)\n   {\n     char a[33000];\n     TRASH_SOME_VR;\n     TRASH_SOME_GPR;\n     USE_SOME_VR;\n     USE_SOME_GPR;\n     __asm __volatile (\"#%0 %1\" : \"=m\" (a), \"=m\" (b) : : \"v26\", \"v27\", \"v31\", \"r30\", \"r31\");\n+    return b;\n   }\n-  nb_vr ();\n+  if (nb_vr () != b)\n+    abort ();\n }\n \n void wb_cv (void)\n {\n   char b[10];\n-  void nb_cv (void)\n+  char *nb_cv (void)\n   {\n     char a[33000];\n     TRASH_SOME_CR;\n     TRASH_SOME_VR;\n     USE_SOME_CR;\n     USE_SOME_VR;\n     __asm __volatile (\"#%0 %1\" : \"=m\" (a), \"=m\" (b) : : \"cr2\", \"v26\", \"v27\", \"v31\");\n+    return b;\n   }\n-  nb_cv ();\n+  if (nb_cv () != b)\n+    abort ();\n }\n \n void wb_v (void)\n {\n   char b[10];\n-  void nb_v (void)\n+  char *nb_v (void)\n   {\n     char a[33000];\n     TRASH_SOME_VR;\n     USE_SOME_VR;\n     __asm __volatile (\"#%0 %1\" : \"=m\" (a), \"=m\" (b) : : \"v26\", \"v27\", \"v31\");\n+    return b;\n   }\n-  nb_v ();\n+  if (nb_v () != b)\n+    abort ();\n }\n #endif\n \n #ifndef __NO_FPRS__\n void wb_cfr (void)\n {\n   char b[10];\n-  void nb_cfr (void)\n+  char *nb_cfr (void)\n   {\n     char a[33000];\n     TRASH_SOME_CR;\n@@ -618,112 +638,128 @@ void wb_cfr (void)\n     USE_SOME_FPR;\n     USE_SOME_GPR;\n     __asm __volatile (\"#%0 %1\" : \"=m\" (a), \"=m\" (b) : : \"cr2\", \"fr28\", \"fr31\", \"r30\", \"r31\");\n+    return b;\n   }\n-  nb_cfr ();\n+  if (nb_cfr () != b)\n+    abort ();\n }\n \n void wb_fr (void)\n {\n   char b[10];\n-  void nb_fr (void)\n+  char *nb_fr (void)\n   {\n     char a[33000];\n     TRASH_SOME_FPR;\n     TRASH_SOME_GPR;\n     USE_SOME_FPR;\n     USE_SOME_GPR;\n     __asm __volatile (\"#%0 %1\" : \"=m\" (a), \"=m\" (b) : : \"fr28\", \"fr31\", \"r30\", \"r31\");\n+    return b;\n   }\n-  nb_fr ();\n+  if (nb_fr () != b)\n+    abort ();\n }\n \n void wb_cf (void)\n {\n   char b[10];\n-  void nb_cf (void)\n+  char *nb_cf (void)\n   {\n     char a[33000];\n     TRASH_SOME_CR;\n     TRASH_SOME_FPR;\n     USE_SOME_CR;\n     USE_SOME_FPR;\n     __asm __volatile (\"#%0 %1\" : \"=m\" (a), \"=m\" (b) : : \"cr2\", \"fr28\", \"fr31\");\n+    return b;\n   }\n-  nb_cf ();\n+  if (nb_cf () != b)\n+    abort ();\n }\n \n void wb_f (void)\n {\n   char b[10];\n-  void nb_f (void)\n+  char *nb_f (void)\n   {\n     char a[33000];\n     TRASH_SOME_FPR;\n     USE_SOME_FPR;\n     __asm __volatile (\"#%0 %1\" : \"=m\" (a), \"=m\" (b) : : \"fr28\", \"fr31\");\n+    return b;\n   }\n-  nb_f ();\n+  if (nb_f () != b)\n+    abort ();\n }\n #endif\n \n void wb_cr (void)\n {\n   char b[10];\n-  void nb_cr (void)\n+  char *nb_cr (void)\n   {\n     char a[33000];\n     TRASH_SOME_CR;\n     TRASH_SOME_GPR;\n     USE_SOME_CR;\n     USE_SOME_GPR;\n     __asm __volatile (\"#%0 %1\" : \"=m\" (a), \"=m\" (b) : : \"cr2\", \"r30\", \"r31\");\n+    return b;\n   }\n-  nb_cr ();\n+  if (nb_cr () != b)\n+    abort ();\n }\n \n void wb_r (void)\n {\n   char b[10];\n-  void nb_r (void)\n+  char *nb_r (void)\n   {\n     char a[33000];\n     TRASH_SOME_GPR;\n     USE_SOME_GPR;\n     __asm __volatile (\"#%0 %1\" : \"=m\" (a), \"=m\" (b) : : \"r30\", \"r31\");\n+    return b;\n   }\n-  nb_r ();\n+  if (nb_r () != b)\n+    abort ();\n }\n \n void wb_c (void)\n {\n   char b[10];\n-  void nb_c (void)\n+  char *nb_c (void)\n   {\n     char a[33000];\n     TRASH_SOME_CR;\n     USE_SOME_CR;\n     __asm __volatile (\"#%0 %1\" : \"=m\" (a), \"=m\" (b) : : \"cr2\");\n+    return b;\n   }\n-  nb_c ();\n+  if (nb_c () != b)\n+    abort ();\n }\n \n void wb_0 (void)\n {\n   char b[10];\n-  void nb_0 (void)\n+  char *nb_0 (void)\n   {\n     char a[33000];\n     __asm __volatile (\"#%0 %1\" : \"=m\" (a), \"=m\" (b) );\n+    return b;\n   }\n-  nb_0 ();\n+  if (nb_0 () != b)\n+    abort ();\n }\n \n #ifdef __ALTIVEC__\n #ifndef __NO_FPRS__\n void ws_all (void)\n {\n   char b[10];\n-  void ns_all (void)\n+  char *ns_all (void)\n   {\n     char a[33];\n     TRASH_ALL_CR;\n@@ -735,14 +771,16 @@ void ws_all (void)\n     USE_ALL_FPR;\n     USE_ALL_GPR;\n     __asm __volatile (\"#%0 %1\" : \"=m\" (a), \"=m\" (b) : : \"cr2\", \"cr3\", \"cr4\", \"v20\", \"v21\", \"v22\", \"v23\", \"v24\", \"v25\", \"v26\", \"v27\", \"v28\", \"v29\", \"v30\", \"v31\", \"fr14\", \"fr15\", \"fr16\", \"fr17\", \"fr18\", \"fr19\", \"fr20\", \"fr21\", \"fr22\", \"fr23\", \"fr24\", \"fr25\", \"fr26\", \"fr27\", \"fr28\", \"fr29\", \"fr30\", \"fr31\", \"r14\", \"r15\", \"r16\", \"r17\", \"r18\", \"r19\", \"r20\", \"r21\", \"r22\", \"r23\", \"r24\", \"r25\", \"r26\", \"r27\", \"r28\", \"r29\", \"r30\", \"r31\");\n+    return b;\n   }\n-  ns_all();\n+  if (ns_all() != b)\n+    abort ();\n }\n \n void ws_cvfr (void)\n {\n   char b[10];\n-  void ns_cvfr (void)\n+  char *ns_cvfr (void)\n   {\n     char a[33];\n     TRASH_SOME_CR;\n@@ -754,14 +792,16 @@ void ws_cvfr (void)\n     USE_SOME_FPR;\n     USE_SOME_GPR;\n     __asm __volatile (\"#%0 %1\" : \"=m\" (a), \"=m\" (b) : : \"cr2\", \"v26\", \"v27\", \"v31\", \"fr28\", \"fr31\", \"r30\", \"r31\");\n+    return b;\n   }\n-  ns_cvfr ();\n+  if (ns_cvfr () != b)\n+    abort ();\n }\n \n void ws_vfr (void)\n {\n   char b[10];\n-  void ns_vfr (void)\n+  char *ns_vfr (void)\n   {\n     char a[33];\n     TRASH_SOME_VR;\n@@ -771,14 +811,16 @@ void ws_vfr (void)\n     USE_SOME_FPR;\n     USE_SOME_GPR;\n     __asm __volatile (\"#%0 %1\" : \"=m\" (a), \"=m\" (b) : : \"v26\", \"v27\", \"v31\", \"fr28\", \"fr31\", \"r30\", \"r31\");\n+    return b;\n   }\n-  ns_vfr ();\n+  if (ns_vfr () != b)\n+    abort ();\n }\n \n void ws_cvf (void)\n {\n   char b[10];\n-  void ns_cvf (void)\n+  char *ns_cvf (void)\n   {\n     char a[33];\n     TRASH_SOME_CR;\n@@ -788,30 +830,34 @@ void ws_cvf (void)\n     USE_SOME_VR;\n     USE_SOME_FPR;\n     __asm __volatile (\"#%0 %1\" : \"=m\" (a), \"=m\" (b) : : \"cr2\", \"v26\", \"v27\", \"v31\", \"fr28\", \"fr31\");\n+    return b;\n   }\n-  ns_cvf ();\n+  if (ns_cvf () != b)\n+    abort ();\n }\n \n void ws_vf (void)\n {\n   char b[10];\n-  void ns_vf (void)\n+  char *ns_vf (void)\n   {\n     char a[33];\n     TRASH_SOME_VR;\n     TRASH_SOME_FPR;\n     USE_SOME_VR;\n     USE_SOME_FPR;\n     __asm __volatile (\"#%0 %1\" : \"=m\" (a), \"=m\" (b) : : \"v26\", \"v27\", \"v31\", \"fr28\", \"fr31\");\n+    return b;\n   }\n-  ns_vf ();\n+  if (ns_vf () != b)\n+    abort ();\n }\n #endif\n \n void ws_cvr (void)\n {\n   char b[10];\n-  void ns_cvr (void)\n+  char *ns_cvr (void)\n   {\n     char a[33];\n     TRASH_SOME_CR;\n@@ -821,59 +867,67 @@ void ws_cvr (void)\n     USE_SOME_VR;\n     USE_SOME_GPR;\n     __asm __volatile (\"#%0 %1\" : \"=m\" (a), \"=m\" (b) : : \"cr2\", \"v26\", \"v27\", \"v31\", \"r30\", \"r31\");\n+    return b;\n   }\n-  ns_cvr ();\n+  if (ns_cvr () != b)\n+    abort ();\n }\n \n void ws_vr (void)\n {\n   char b[10];\n-  void ns_vr (void)\n+  char *ns_vr (void)\n   {\n     char a[33];\n     TRASH_SOME_VR;\n     TRASH_SOME_FPR;\n     USE_SOME_VR;\n     USE_SOME_FPR;\n     __asm __volatile (\"#%0 %1\" : \"=m\" (a), \"=m\" (b) : : \"v26\", \"v27\", \"v31\", \"r30\", \"r31\");\n+    return b;\n   }\n-  ns_vr ();\n+  if (ns_vr () != b)\n+    abort ();\n }\n \n void ws_cv (void)\n {\n   char b[10];\n-  void ns_cv (void)\n+  char *ns_cv (void)\n   {\n     char a[33];\n     TRASH_SOME_CR;\n     TRASH_SOME_VR;\n     USE_SOME_CR;\n     USE_SOME_VR;\n     __asm __volatile (\"#%0 %1\" : \"=m\" (a), \"=m\" (b) : : \"cr2\", \"v26\", \"v27\", \"v31\");\n+    return b;\n   }\n-  ns_cv ();\n+  if (ns_cv () != b)\n+    abort ();\n }\n \n void ws_v (void)\n {\n   char b[10];\n-  void ns_v (void)\n+  char *ns_v (void)\n   {\n     char a[33];\n     TRASH_SOME_VR;\n     USE_SOME_VR;\n     __asm __volatile (\"#%0 %1\" : \"=m\" (a), \"=m\" (b) : : \"v26\", \"v27\", \"v31\");\n+    return b;\n   }\n-  ns_v ();\n+  if (ns_v () != b)\n+    abort ();\n }\n #endif\n \n #ifndef __NO_FPRS__\n void ws_cfr (void)\n {\n   char b[10];\n-  void ns_cfr (void)\n+  char *ns_cfr (void)\n   {\n     char a[33];\n     TRASH_SOME_CR;\n@@ -883,104 +937,120 @@ void ws_cfr (void)\n     USE_SOME_FPR;\n     USE_SOME_GPR;\n     __asm __volatile (\"#%0 %1\" : \"=m\" (a), \"=m\" (b) : : \"cr2\", \"fr28\", \"fr31\", \"r30\", \"r31\");\n+    return b;\n   }\n-  ns_cfr ();\n+  if (ns_cfr () != b)\n+    abort ();\n }\n \n void ws_fr (void)\n {\n   char b[10];\n-  void ns_fr (void)\n+  char *ns_fr (void)\n   {\n     char a[33];\n     TRASH_SOME_FPR;\n     TRASH_SOME_GPR;\n     USE_SOME_FPR;\n     USE_SOME_GPR;\n     __asm __volatile (\"#%0 %1\" : \"=m\" (a), \"=m\" (b) : : \"fr28\", \"fr31\", \"r30\", \"r31\");\n+    return b;\n   }\n-  ns_fr ();\n+  if (ns_fr () != b)\n+    abort ();\n }\n \n void ws_cf (void)\n {\n   char b[10];\n-  void ns_cf (void)\n+  char *ns_cf (void)\n   {\n     char a[33];\n     TRASH_SOME_CR;\n     TRASH_SOME_FPR;\n     USE_SOME_CR;\n     USE_SOME_FPR;\n     __asm __volatile (\"#%0 %1\" : \"=m\" (a), \"=m\" (b) : : \"cr2\", \"fr28\", \"fr31\");\n+    return b;\n   }\n-  ns_cf ();\n+  if (ns_cf () != b)\n+    abort ();\n }\n \n void ws_f (void)\n {\n   char b[10];\n-  void ns_f (void)\n+  char *ns_f (void)\n   {\n     char a[33];\n     TRASH_SOME_FPR;\n     USE_SOME_FPR;\n     __asm __volatile (\"#%0 %1\" : \"=m\" (a), \"=m\" (b) : : \"fr28\", \"fr31\");\n+    return b;\n   }\n-  ns_f ();\n+  if (ns_f () != b)\n+    abort ();\n }\n #endif\n \n void ws_cr (void)\n {\n   char b[10];\n-  void ns_cr (void)\n+  char *ns_cr (void)\n   {\n     char a[33];\n     TRASH_SOME_CR;\n     TRASH_SOME_GPR;\n     USE_SOME_CR;\n     USE_SOME_GPR;\n     __asm __volatile (\"#%0 %1\" : \"=m\" (a), \"=m\" (b) : : \"cr2\", \"r30\", \"r31\");\n+    return b;\n   }\n-  ns_cr ();\n+  if (ns_cr () != b)\n+    abort ();\n }\n \n void ws_r (void)\n {\n   char b[10];\n-  void ns_r (void)\n+  char *ns_r (void)\n   {\n     char a[33];\n     TRASH_SOME_GPR;\n     USE_SOME_GPR;\n     __asm __volatile (\"#%0 %1\" : \"=m\" (a), \"=m\" (b) : : \"r30\", \"r31\");\n+    return b;\n   }\n-  ns_r ();\n+  if (ns_r () != b)\n+    abort ();\n }\n \n void ws_c (void)\n {\n   char b[10];\n-  void ns_c (void)\n+  char *ns_c (void)\n   {\n     char a[33];\n     TRASH_SOME_CR;\n     USE_SOME_CR;\n     __asm __volatile (\"#%0 %1\" : \"=m\" (a), \"=m\" (b) : : \"cr2\");\n+    return b;\n   }\n-  ns_c ();\n+  if (ns_c () != b)\n+    abort ();\n }\n \n void ws_0 (void)\n {\n   char b[10];\n-  void ns_0 (void)\n+  char *ns_0 (void)\n   {\n     char a[33];\n     __asm __volatile (\"#%0 %1\" : \"=m\" (a), \"=m\" (b) );\n+    return b;\n   }\n-  ns_0 ();\n+  if (ns_0 () != b)\n+    abort ();\n }\n \n int main (void)"}]}