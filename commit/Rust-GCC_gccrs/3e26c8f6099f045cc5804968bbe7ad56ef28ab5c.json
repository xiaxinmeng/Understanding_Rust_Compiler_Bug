{"sha": "3e26c8f6099f045cc5804968bbe7ad56ef28ab5c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2UyNmM4ZjYwOTlmMDQ1Y2M1ODA0OTY4YmJlN2FkNTZlZjI4YWI1Yw==", "commit": {"author": {"name": "Richard Sandiford", "email": "r.sandiford@uk.ibm.com", "date": "2014-05-26T18:50:55Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2014-05-26T18:50:55Z"}, "message": "re PR rtl-optimization/61222 (ICE on valid code at -O2 and -O3 on x86_64-linux-gnu in decompose, at rtl.h:1456)\n\ngcc/\n\tPR rtl-optimization/61222\n\t* combine.c (simplify_shift_const_1): When moving a PLUS outside\n\tthe shift, truncate the PLUS operand to the result mode.\n\ngcc/testsuite/\n\tPR rtl-optimization/61222\n\t* gcc.c-torture/compile/pr61222-1.c: New test.\n\t* gcc.c-torture/compile/pr61222-2.c: Likewise.\n\nFrom-SVN: r210945", "tree": {"sha": "21a0a8b4063a6435c89c6ef18670302306d554e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/21a0a8b4063a6435c89c6ef18670302306d554e3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3e26c8f6099f045cc5804968bbe7ad56ef28ab5c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e26c8f6099f045cc5804968bbe7ad56ef28ab5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e26c8f6099f045cc5804968bbe7ad56ef28ab5c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e26c8f6099f045cc5804968bbe7ad56ef28ab5c/comments", "author": null, "committer": null, "parents": [{"sha": "cf0ff174cd17856e67b222efaaf4344adc3e4410", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf0ff174cd17856e67b222efaaf4344adc3e4410", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf0ff174cd17856e67b222efaaf4344adc3e4410"}], "stats": {"total": 56, "additions": 50, "deletions": 6}, "files": [{"sha": "9d5ae9263203262583e131f68b528896ecf65f87", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e26c8f6099f045cc5804968bbe7ad56ef28ab5c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e26c8f6099f045cc5804968bbe7ad56ef28ab5c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3e26c8f6099f045cc5804968bbe7ad56ef28ab5c", "patch": "@@ -1,3 +1,9 @@\n+2014-05-26  Richard Sandiford  <r.sandiford@uk.ibm.com>\n+\n+\tPR rtl-optimization/61222\n+\t* combine.c (simplify_shift_const_1): When moving a PLUS outside\n+\tthe shift, truncate the PLUS operand to the result mode.\n+\n 2014-05-26  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/61271"}, {"sha": "72bde7a269434f23a8c0b40de58d43832756a54c", "filename": "gcc/combine.c", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e26c8f6099f045cc5804968bbe7ad56ef28ab5c/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e26c8f6099f045cc5804968bbe7ad56ef28ab5c/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=3e26c8f6099f045cc5804968bbe7ad56ef28ab5c", "patch": "@@ -10349,9 +10349,10 @@ simplify_shift_const_1 (enum rtx_code code, enum machine_mode result_mode,\n \t  /* (ashift (plus foo C) N) is (plus (ashift foo N) C').  */\n \t  if (code == ASHIFT\n \t      && CONST_INT_P (XEXP (varop, 1))\n-\t      && (new_rtx = simplify_const_binary_operation (ASHIFT, result_mode,\n-\t\t\t\t\t\t\t XEXP (varop, 1),\n-\t\t\t\t\t\t\t GEN_INT (count))) != 0\n+\t      && (new_rtx = simplify_const_binary_operation\n+\t\t  (ASHIFT, result_mode,\n+\t\t   gen_int_mode (INTVAL (XEXP (varop, 1)), result_mode),\n+\t\t   GEN_INT (count))) != 0\n \t      && CONST_INT_P (new_rtx)\n \t      && merge_outer_ops (&outer_op, &outer_const, PLUS,\n \t\t\t\t  INTVAL (new_rtx), result_mode, &complement_p))\n@@ -10368,9 +10369,10 @@ simplify_shift_const_1 (enum rtx_code code, enum machine_mode result_mode,\n \t  if (code == LSHIFTRT\n \t      && CONST_INT_P (XEXP (varop, 1))\n \t      && mode_signbit_p (result_mode, XEXP (varop, 1))\n-\t      && (new_rtx = simplify_const_binary_operation (code, result_mode,\n-\t\t\t\t\t\t\t XEXP (varop, 1),\n-\t\t\t\t\t\t\t GEN_INT (count))) != 0\n+\t      && (new_rtx = simplify_const_binary_operation\n+\t\t  (code, result_mode,\n+\t\t   gen_int_mode (INTVAL (XEXP (varop, 1)), result_mode),\n+\t\t   GEN_INT (count))) != 0\n \t      && CONST_INT_P (new_rtx)\n \t      && merge_outer_ops (&outer_op, &outer_const, XOR,\n \t\t\t\t  INTVAL (new_rtx), result_mode, &complement_p))"}, {"sha": "a9eab0024997c30e31d7d8bd341263070ea990ed", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e26c8f6099f045cc5804968bbe7ad56ef28ab5c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e26c8f6099f045cc5804968bbe7ad56ef28ab5c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3e26c8f6099f045cc5804968bbe7ad56ef28ab5c", "patch": "@@ -1,3 +1,9 @@\n+2014-05-26  Richard Sandiford  <r.sandiford@uk.ibm.com>\n+\n+\tPR rtl-optimization/61222\n+\t* gcc.c-torture/compile/pr61222-1.c: New test.\n+\t* gcc.c-torture/compile/pr61222-2.c: Likewise.\n+\n 2014-05-26  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* c-c++-common/cilk-plus/AN/pr61191.c: Fix dg-error directives."}, {"sha": "88901937559a68cc1fcaba35086559fbda878c29", "filename": "gcc/testsuite/gcc.c-torture/compile/pr61222-1.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e26c8f6099f045cc5804968bbe7ad56ef28ab5c/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr61222-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e26c8f6099f045cc5804968bbe7ad56ef28ab5c/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr61222-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr61222-1.c?ref=3e26c8f6099f045cc5804968bbe7ad56ef28ab5c", "patch": "@@ -0,0 +1,23 @@\n+int a, b, d, e;\n+char c;\n+\n+void\n+foo ()\n+{\n+  for (; a; a++)\n+    {\n+      d = ((b == 0) ^ (129 + a));\n+      c = d * 9;\n+      e = c < 1;\n+      if (e)\n+\tfor (;;)\n+\t  ;\n+    }\n+}\n+\n+int\n+main ()\n+{\n+  foo ();\n+  return 0;\n+}"}, {"sha": "23611c13b15ed6b225a1f962adc8108166c9b202", "filename": "gcc/testsuite/gcc.c-torture/compile/pr61222-2.c", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e26c8f6099f045cc5804968bbe7ad56ef28ab5c/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr61222-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e26c8f6099f045cc5804968bbe7ad56ef28ab5c/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr61222-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr61222-2.c?ref=3e26c8f6099f045cc5804968bbe7ad56ef28ab5c", "patch": "@@ -0,0 +1,7 @@\n+int a, b, d;\n+int main (void)\n+{\n+  int c = a && 1;\n+  d = 1 << (((c | (b - 842)) << 1) + 1);\n+  return 0;\n+}"}]}