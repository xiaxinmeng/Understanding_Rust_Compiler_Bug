{"sha": "619c238cb98cd3353b93d18db1c79c7f4d3a3ea8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjE5YzIzOGNiOThjZDMzNTNiOTNkMThkYjFjNzljN2Y0ZDNhM2VhOA==", "commit": {"author": {"name": "Bryce McKinlay", "email": "bryce@waitaki.otago.ac.nz", "date": "2001-12-19T02:45:20Z"}, "committer": {"name": "Bryce McKinlay", "email": "bryce@gcc.gnu.org", "date": "2001-12-19T02:45:20Z"}, "message": "* boehm.cc (_Jv_BuildGCDescr): Define unconditionally.\n\nFrom-SVN: r48170", "tree": {"sha": "b16f01328859461023cf943ea567b9642d4bc96a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b16f01328859461023cf943ea567b9642d4bc96a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/619c238cb98cd3353b93d18db1c79c7f4d3a3ea8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/619c238cb98cd3353b93d18db1c79c7f4d3a3ea8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/619c238cb98cd3353b93d18db1c79c7f4d3a3ea8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/619c238cb98cd3353b93d18db1c79c7f4d3a3ea8/comments", "author": null, "committer": null, "parents": [{"sha": "726abf5d79aeafa36473c865033fa7a97358fded", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/726abf5d79aeafa36473c865033fa7a97358fded", "html_url": "https://github.com/Rust-GCC/gccrs/commit/726abf5d79aeafa36473c865033fa7a97358fded"}], "stats": {"total": 7, "additions": 3, "deletions": 4}, "files": [{"sha": "cf601a26a9a77a3106737fadeb6ed98b0cacd3c1", "filename": "libjava/ChangeLog", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/619c238cb98cd3353b93d18db1c79c7f4d3a3ea8/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/619c238cb98cd3353b93d18db1c79c7f4d3a3ea8/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=619c238cb98cd3353b93d18db1c79c7f4d3a3ea8", "patch": "@@ -2,6 +2,7 @@\n \n \t* include/jvm.h (_Jv_BuildGCDescr): Declare unconditionally.\n \t* nogc.cc (_Jv_BuildGCDescr): Define unconditionally.\n+\t* boehm.cc (_Jv_BuildGCDescr): Likewise.\n \n 2001-12-18  Tom Tromey  <tromey@redhat.com>\n "}, {"sha": "4dc60fc43b74e9e5bcbae45155a391456ac18837", "filename": "libjava/boehm.cc", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/619c238cb98cd3353b93d18db1c79c7f4d3a3ea8/libjava%2Fboehm.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/619c238cb98cd3353b93d18db1c79c7f4d3a3ea8/libjava%2Fboehm.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fboehm.cc?ref=619c238cb98cd3353b93d18db1c79c7f4d3a3ea8", "patch": "@@ -319,9 +319,8 @@ _Jv_MarkArray (void *addr, void *msp, void *msl, void * /*env*/)\n   return mark_stack_ptr;\n }\n \n-// Return GC descriptor for interpreted class\n-#ifdef INTERPRETER\n-\n+// Generate a GC marking descriptor for a class.\n+//\n // We assume that the gcj mark proc has index 0.  This is a dubious assumption,\n // since another one could be registered first.  But the compiler also\n // knows this, so in that case everything else will break, too.\n@@ -332,7 +331,6 @@ _Jv_BuildGCDescr(jclass)\n   /* FIXME: We should really look at the class and build the descriptor. */\n   return (void *)(GCJ_DEFAULT_DESCR);\n }\n-#endif\n \n // Allocate some space that is known to be pointer-free.\n void *"}]}