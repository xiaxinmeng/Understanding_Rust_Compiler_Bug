{"sha": "81d57b8e1d9a23be27a1b4affaa03bc6c82d4471", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODFkNTdiOGUxZDlhMjNiZTI3YTFiNGFmZmFhMDNiYzZjODJkNDQ3MQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-07-29T22:58:13Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-07-29T22:58:13Z"}, "message": "(copy_rtx_and_substitute, case LABEL_REF): If we turn off\nLABEL_REF_NONLOCAL_P, increment function_call_count.\n\nFrom-SVN: r5040", "tree": {"sha": "c17cec85ecafeaab8dd2aef5205797a40856e960", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c17cec85ecafeaab8dd2aef5205797a40856e960"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/81d57b8e1d9a23be27a1b4affaa03bc6c82d4471", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81d57b8e1d9a23be27a1b4affaa03bc6c82d4471", "html_url": "https://github.com/Rust-GCC/gccrs/commit/81d57b8e1d9a23be27a1b4affaa03bc6c82d4471", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81d57b8e1d9a23be27a1b4affaa03bc6c82d4471/comments", "author": null, "committer": null, "parents": [{"sha": "b8bb540c818b7f18805f5319574928c7760b94ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8bb540c818b7f18805f5319574928c7760b94ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8bb540c818b7f18805f5319574928c7760b94ec"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "894a93847a7d34cd09726486fd311c84a0aff9c3", "filename": "gcc/integrate.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81d57b8e1d9a23be27a1b4affaa03bc6c82d4471/gcc%2Fintegrate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81d57b8e1d9a23be27a1b4affaa03bc6c82d4471/gcc%2Fintegrate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fintegrate.c?ref=81d57b8e1d9a23be27a1b4affaa03bc6c82d4471", "patch": "@@ -2052,6 +2052,14 @@ copy_rtx_and_substitute (orig, map)\n \t= (LABEL_REF_NONLOCAL_P (orig)\n \t   && ! (CODE_LABEL_NUMBER (XEXP (copy, 0)) >= get_first_label_num ()\n \t\t && CODE_LABEL_NUMBER (XEXP (copy, 0)) < max_label_num ()));\n+\n+      /* If we have made a nonlocal label local, it means that this\n+\t inlined call will be refering to our nonlocal goto handler.\n+\t So make sure we create one for this block; we normally would\n+\t not since this is not otherwise considered a \"call\".  */\n+      if (LABEL_REF_NONLOCAL_P (orig) && ! LABEL_REF_NONLOCAL_P (copy))\n+\tfunction_call_count++;\n+\n       return copy;\n \n     case PC:"}]}