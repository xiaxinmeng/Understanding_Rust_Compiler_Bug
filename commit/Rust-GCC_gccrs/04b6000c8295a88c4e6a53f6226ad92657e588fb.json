{"sha": "04b6000c8295a88c4e6a53f6226ad92657e588fb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDRiNjAwMGM4Mjk1YTg4YzRlNmE1M2Y2MjI2YWQ5MjY1N2U1ODhmYg==", "commit": {"author": {"name": "Vladimir Makarov", "email": "vmakarov@tofu.to.cygnus.com", "date": "1999-03-22T07:56:09Z"}, "committer": {"name": "Vladimir Makarov", "email": "vmakarov@gcc.gnu.org", "date": "1999-03-22T07:56:09Z"}, "message": "h8300.md (adjust_length): New attribute.\n\nMon Mar 22 10:44:33 1999  Vladimir Makarov  <vmakarov@tofu.to.cygnus.com>\n\t* config/h8300/h8300.md (adjust_length): New attribute.\n \t(modhi3+1, andsi3+1, iorsi3+1, extzv+1, extzv+2): Change insn\n \tdefault value of attribute \"adjust_length\" onto \"no\".\n\t* config/h8300/h8300.c (h8300_adjust_insn_length):  Use 0 if the\n\tshift is negative.\n\t* final.c (shorten_branches): Check insn length after its\n \tadjusting.\n\nFrom-SVN: r25895", "tree": {"sha": "2224bcc4032e992fb0d566a198b4ea8e539c70ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2224bcc4032e992fb0d566a198b4ea8e539c70ae"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/04b6000c8295a88c4e6a53f6226ad92657e588fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04b6000c8295a88c4e6a53f6226ad92657e588fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04b6000c8295a88c4e6a53f6226ad92657e588fb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04b6000c8295a88c4e6a53f6226ad92657e588fb/comments", "author": null, "committer": null, "parents": [{"sha": "4b9f933c7c0a006110f999f43867a880390fa2e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b9f933c7c0a006110f999f43867a880390fa2e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b9f933c7c0a006110f999f43867a880390fa2e0"}], "stats": {"total": 65, "additions": 49, "deletions": 16}, "files": [{"sha": "318f8a78d9fcef8ca47b96b97333c09ec1cc9a34", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04b6000c8295a88c4e6a53f6226ad92657e588fb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04b6000c8295a88c4e6a53f6226ad92657e588fb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=04b6000c8295a88c4e6a53f6226ad92657e588fb", "patch": "@@ -1,3 +1,15 @@\n+Mon Mar 22 10:44:33 1999  Vladimir Makarov  <vmakarov@tofu.to.cygnus.com>\n+\n+\t* config/h8300/h8300.md (adjust_length): New attribute.\n+ \t(modhi3+1, andsi3+1, iorsi3+1, extzv+1, extzv+2): Change insn\n+ \tdefault value of attribute \"adjust_length\" onto \"no\".\n+\n+\t* config/h8300/h8300.c (h8300_adjust_insn_length):  Use 0 if the\n+\tshift is negative.\n+\n+\t* final.c (shorten_branches): Check insn length after its\n+ \tadjusting.\n+\n Sun Mar 21 17:33:48 1999  Jeffrey A Law  (law@cygnus.com)\n \n \t* i860.h (TARGET_SWITCHES): Add documentation for default case."}, {"sha": "eb5d418aece3bacd15f0b49a362943dcbe754503", "filename": "gcc/config/h8300/h8300.c", "status": "modified", "additions": 22, "deletions": 14, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04b6000c8295a88c4e6a53f6226ad92657e588fb/gcc%2Fconfig%2Fh8300%2Fh8300.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04b6000c8295a88c4e6a53f6226ad92657e588fb/gcc%2Fconfig%2Fh8300%2Fh8300.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.c?ref=04b6000c8295a88c4e6a53f6226ad92657e588fb", "patch": "@@ -3031,7 +3031,12 @@ h8300_adjust_insn_length (insn, length)\n      rtx insn;\n      int length;\n {\n-  rtx pat = PATTERN (insn);\n+  rtx pat;\n+\n+  if (get_attr_adjust_length (insn) == ADJUST_LENGTH_NO)\n+    return 0;\n+\n+  pat = PATTERN (insn);\n \n   /* Adjust length for reg->mem and mem->reg copies.  */\n   if (GET_CODE (pat) == SET\n@@ -3109,34 +3114,37 @@ h8300_adjust_insn_length (insn, length)\n     {\n       rtx src = SET_SRC (XVECEXP (pat, 0, 0));\n       enum machine_mode mode = GET_MODE (src);\n+      int shift;\n \n       if (GET_CODE (XEXP (src, 1)) != CONST_INT)\n \treturn 0;\n \n+      shift = INTVAL (XEXP (src, 1));\n+      /* According to ANSI, negative shift is undefined.  It is\n+         considered to be zero in this case (see function\n+         emit_a_shift above). */\n+      if (shift < 0)\n+\tshift = 0;\n+\n       /* QImode shifts by small constants take one insn\n \t per shift.  So the adjustment is 20 (md length) -\n \t # shifts * 2.  */\n-      if (mode == QImode && INTVAL (XEXP (src, 1)) <= 4)\n-\treturn -(20 - INTVAL (XEXP (src, 1)) * 2);\n+      if (mode == QImode && shift <= 4)\n+\treturn -(20 - shift * 2);\n \n       /* Similarly for HImode and SImode shifts by\n \t small constants on the H8/300H and H8/300S.  */\n       if ((TARGET_H8300H || TARGET_H8300S)\n-\t  && (mode == HImode || mode == SImode)\n-\t  && INTVAL (XEXP (src, 1)) <= 4)\n-\treturn -(20 - INTVAL (XEXP (src, 1)) * 2);\n+\t  && (mode == HImode || mode == SImode) && shift <= 4)\n+\treturn -(20 - shift * 2);\n \n       /* HImode shifts by small constants for the H8/300.  */\n-      if (mode == HImode\n-\t  && INTVAL (XEXP (src, 1)) <= 4)\n-\treturn -(20 - (INTVAL (XEXP (src, 1))\n-\t\t       * (GET_CODE (src) == ASHIFT ? 2 : 4)));\n+      if (mode == HImode && shift <= 4)\n+\treturn -(20 - (shift * (GET_CODE (src) == ASHIFT ? 2 : 4)));\n \n       /* SImode shifts by small constants for the H8/300.  */\n-      if (mode == SImode\n-\t  && INTVAL (XEXP (src, 1)) <= 2)\n-\treturn -(20 - (INTVAL (XEXP (src, 1))\n-\t\t       * (GET_CODE (src) == ASHIFT ? 6 : 8)));\n+      if (mode == SImode && shift <= 2)\n+\treturn -(20 - (shift * (GET_CODE (src) == ASHIFT ? 6 : 8)));\n \n       /* XXX ??? Could check for more shift/rotate cases here.  */\n     }"}, {"sha": "7e49af5ef75312825bf7a7abbf581c7479fd393f", "filename": "gcc/config/h8300/h8300.md", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04b6000c8295a88c4e6a53f6226ad92657e588fb/gcc%2Fconfig%2Fh8300%2Fh8300.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04b6000c8295a88c4e6a53f6226ad92657e588fb/gcc%2Fconfig%2Fh8300%2Fh8300.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.md?ref=04b6000c8295a88c4e6a53f6226ad92657e588fb", "patch": "@@ -81,6 +81,12 @@\n \t\t\t\t     (const_int 6)))]\n \t(const_int 200)))\n \n+;; The necessity of instruction length adjustment.\n+\n+(define_attr \"adjust_length\" \"yes,no\"\n+  (cond [(eq_attr \"type\" \"branch\") (const_string \"no\")]\n+        (const_string \"yes\")))\n+\n ;; Condition code settings.\n ;; none - insn does not affect cc\n ;; none_0hit - insn does not affect cc but it does modify operand 0\n@@ -983,6 +989,7 @@\n    and\t%X2,%X0\n    bclr\t%W2,%R0\"\n   [(set_attr \"length\" \"2,4\")\n+   (set_attr \"adjust_length\" \"no\")\n    (set_attr \"cc\" \"set_znv,none_0hit\")])\n \n (define_expand \"andqi3\"\n@@ -1087,6 +1094,7 @@\n    or\t%X2,%X0\n    bset\t%V2,%R0\"\n   [(set_attr \"length\" \"2,4\")\n+   (set_attr \"adjust_length\" \"no\")\n    (set_attr \"cc\" \"set_znv,none_0hit\")])\n \n (define_expand \"iorqi3\"\n@@ -1173,6 +1181,7 @@\n    xor\t%X2,%X0\n    bnot\t%V2,%R0\"\n   [(set_attr \"length\" \"2,4\")\n+   (set_attr \"adjust_length\" \"no\")\n    (set_attr \"cc\" \"set_znv,none_0hit\")])\n \n (define_expand \"xorqi3\"\n@@ -2226,7 +2235,8 @@\n   \"\"\n   \"bld\t%Z2,%Y1\\;%b4\t#0,%R0\\;bst\t#0,%R0; bl1\"\n   [(set_attr \"cc\" \"clobber\")\n-   (set_attr \"length\" \"6\")])\n+   (set_attr \"length\" \"6\")\n+   (set_attr \"adjust_length\" \"no\")])\n \n (define_insn \"\"\n   [(set (match_operand:HI 0 \"bit_operand\" \"=Ur\")\n@@ -2240,7 +2250,8 @@\n   \"\"\n   \"bld\t%Z2,%Y1\\;%b5\t%Z4,%Y3\\;bst\t#0,%R0; bl3\"\n   [(set_attr \"cc\" \"clobber\")\n-   (set_attr \"length\" \"6\")])\n+   (set_attr \"length\" \"6\")\n+   (set_attr \"adjust_length\" \"no\")])\n \n \f\n ;; ----------------------------------------------"}, {"sha": "3cd2e0cb98927768679399514ecdc3f93722b86e", "filename": "gcc/final.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04b6000c8295a88c4e6a53f6226ad92657e588fb/gcc%2Ffinal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04b6000c8295a88c4e6a53f6226ad92657e588fb/gcc%2Ffinal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffinal.c?ref=04b6000c8295a88c4e6a53f6226ad92657e588fb", "patch": "@@ -1318,6 +1318,8 @@ shorten_branches (first)\n       /* If needed, do any adjustment.  */\n #ifdef ADJUST_INSN_LENGTH\n       ADJUST_INSN_LENGTH (insn, insn_lengths[uid]);\n+      if (insn_lengths[uid] < 0)\n+\tfatal_insn (\"Negative insn length\", insn);\n #endif\n     }\n "}]}