{"sha": "8cfa78994aa1cfbf28b6e0fb367f34900f0eeb76", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGNmYTc4OTk0YWExY2ZiZjI4YjZlMGZiMzY3ZjM0OTAwZjBlZWI3Ng==", "commit": {"author": {"name": "Kai Tietz", "email": "ktietz@redhat.com", "date": "2012-02-22T10:19:22Z"}, "committer": {"name": "Kai Tietz", "email": "ktietz@gcc.gnu.org", "date": "2012-02-22T10:19:22Z"}, "message": "re PR lto/50616 (lto1.exe: internal compiler error: invalid resolution in the resolution file)\n\n        PR lto/50616\n        * lto-plugin.c (PRI_LL): New macro.\n        (dump_symtab): Use PRI_LL instead of ll in print.\n        (process_symtab): Use PRI_LL instead of ll in scan.\n\nFrom-SVN: r184462", "tree": {"sha": "8f8856f49d0b6f6972c3bacad6d57ed21ea67fa4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8f8856f49d0b6f6972c3bacad6d57ed21ea67fa4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8cfa78994aa1cfbf28b6e0fb367f34900f0eeb76", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8cfa78994aa1cfbf28b6e0fb367f34900f0eeb76", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8cfa78994aa1cfbf28b6e0fb367f34900f0eeb76", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8cfa78994aa1cfbf28b6e0fb367f34900f0eeb76/comments", "author": null, "committer": null, "parents": [{"sha": "0b262c28c6bc818e3b93577f0354b7d61cd23c84", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b262c28c6bc818e3b93577f0354b7d61cd23c84", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b262c28c6bc818e3b93577f0354b7d61cd23c84"}], "stats": {"total": 19, "additions": 17, "deletions": 2}, "files": [{"sha": "ad2be69f642fba47db32cd2f74c8aedc3d222233", "filename": "lto-plugin/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cfa78994aa1cfbf28b6e0fb367f34900f0eeb76/lto-plugin%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cfa78994aa1cfbf28b6e0fb367f34900f0eeb76/lto-plugin%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/lto-plugin%2FChangeLog?ref=8cfa78994aa1cfbf28b6e0fb367f34900f0eeb76", "patch": "@@ -1,3 +1,10 @@\n+2012-02-22  Kai Tietz  <ktietz@redhat.com>\n+\n+\tPR lto/50616\n+\t* lto-plugin.c (PRI_LL): New macro.\n+\t(dump_symtab): Use PRI_LL instead of ll in print.\n+\t(process_symtab): Use PRI_LL instead of ll in scan.\n+\n 2011-12-20  Andreas Schwab  <schwab@linux-m68k.org>\n \n \t* configure: Regenerate."}, {"sha": "8d55cb8f49185c5043b6e1bbcda61f3897190f2b", "filename": "lto-plugin/lto-plugin.c", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cfa78994aa1cfbf28b6e0fb367f34900f0eeb76/lto-plugin%2Flto-plugin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cfa78994aa1cfbf28b6e0fb367f34900f0eeb76/lto-plugin%2Flto-plugin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/lto-plugin%2Flto-plugin.c?ref=8cfa78994aa1cfbf28b6e0fb367f34900f0eeb76", "patch": "@@ -62,6 +62,14 @@ along with this program; see the file COPYING3.  If not see\n #include \"simple-object.h\"\n #include \"plugin-api.h\"\n \n+/* We need to use I64 instead of ll width-specifier on native Windows.\n+   The reason for this is that older MS-runtimes don't support the ll.  */\n+#ifdef __MINGW32__\n+#define PRI_LL \"I64\"\n+#else\n+#define PRI_LL \"ll\"\n+#endif\n+\n /* Handle opening elf files on hosts, such as Windows, that may use\n    text file handling that will break binary access.  */\n #ifndef O_BINARY\n@@ -360,7 +368,7 @@ dump_symtab (FILE *f, struct plugin_symtab *symtab)\n       \n       assert (resolution != LDPR_UNKNOWN);\n \n-      fprintf (f, \"%u %llx %s %s\\n\",\n+      fprintf (f, \"%u %\" PRI_LL \"x %s %s\\n\",\n                (unsigned int) slot, symtab->aux[j].id,\n \t       lto_resolution_str[resolution], \n \t       symtab->syms[j].name);\n@@ -816,7 +824,7 @@ process_symtab (void *data, const char *name, off_t offset, off_t length)\n \n   s = strrchr (name, '.');\n   if (s)\n-    sscanf (s, \".%llx\", &obj->out->id);\n+    sscanf (s, \".%\" PRI_LL \"x\", &obj->out->id);\n   secdata = xmalloc (length);\n   offset += obj->file->offset;\n   if (offset != lseek (obj->file->fd, offset, SEEK_SET)"}]}