{"sha": "2334baf4907c77615b44d9ce15a6ae95246b548b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjMzNGJhZjQ5MDdjNzc2MTViNDRkOWNlMTVhNmFlOTUyNDZiNTQ4Yg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2010-07-02T11:52:30Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2010-07-02T11:52:30Z"}, "message": "misc.c (gnat_handle_option): Do not populate gnat_argv.\n\n\t* gcc-interface/misc.c (gnat_handle_option): Do not populate gnat_argv.\n\t(gnat_handle_option): Allocate only one element for gnat_argv.\n\t(gnat_init): Do not populate gnat_argv.\n\nFrom-SVN: r161704", "tree": {"sha": "48e472912d0e7cb8f89259f5d4ba926c1ebe81df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/48e472912d0e7cb8f89259f5d4ba926c1ebe81df"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2334baf4907c77615b44d9ce15a6ae95246b548b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2334baf4907c77615b44d9ce15a6ae95246b548b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2334baf4907c77615b44d9ce15a6ae95246b548b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2334baf4907c77615b44d9ce15a6ae95246b548b/comments", "author": null, "committer": null, "parents": [{"sha": "1a4fc49d7fccd1048eec7c73153e5de4da0a5885", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a4fc49d7fccd1048eec7c73153e5de4da0a5885", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a4fc49d7fccd1048eec7c73153e5de4da0a5885"}], "stats": {"total": 62, "additions": 15, "deletions": 47}, "files": [{"sha": "52bde045832aabc2ebd0255b962eef60526347de", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2334baf4907c77615b44d9ce15a6ae95246b548b/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2334baf4907c77615b44d9ce15a6ae95246b548b/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=2334baf4907c77615b44d9ce15a6ae95246b548b", "patch": "@@ -1,3 +1,9 @@\n+2010-07-02  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/misc.c (gnat_handle_option): Do not populate gnat_argv.\n+\t(gnat_handle_option): Allocate only one element for gnat_argv.\n+\t(gnat_init): Do not populate gnat_argv.\n+\n 2010-06-30  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n \n \t* gcc-interface/trans.c: Do not include tree-flow.h."}, {"sha": "8444e4f714cc90f7c861cf2f011d5e64a1b9055e", "filename": "gcc/ada/gcc-interface/misc.c", "status": "modified", "additions": 9, "deletions": 47, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2334baf4907c77615b44d9ce15a6ae95246b548b/gcc%2Fada%2Fgcc-interface%2Fmisc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2334baf4907c77615b44d9ce15a6ae95246b548b/gcc%2Fada%2Fgcc-interface%2Fmisc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fmisc.c?ref=2334baf4907c77615b44d9ce15a6ae95246b548b", "patch": "@@ -191,7 +191,6 @@ gnat_handle_option (size_t scode, const char *arg, int value,\n {\n   const struct cl_option *option = &cl_options[scode];\n   enum opt_code code = (enum opt_code) scode;\n-  char *q;\n \n   if (arg == NULL && (option->flags & (CL_JOINED | CL_SEPARATE)))\n     {\n@@ -201,20 +200,11 @@ gnat_handle_option (size_t scode, const char *arg, int value,\n \n   switch (code)\n     {\n-    case OPT_I:\n-      q = XNEWVEC (char, sizeof(\"-I\") + strlen (arg));\n-      strcpy (q, \"-I\");\n-      strcat (q, arg);\n-      gnat_argv[gnat_argc] = q;\n-      gnat_argc++;\n-      break;\n-\n     case OPT_Wall:\n       warn_unused = value;\n       warn_uninitialized = value;\n       break;\n \n-      /* These are used in the GCC Makefile.  */\n     case OPT_Wmissing_prototypes:\n     case OPT_Wstrict_prototypes:\n     case OPT_Wwrite_strings:\n@@ -223,15 +213,7 @@ gnat_handle_option (size_t scode, const char *arg, int value,\n     case OPT_Wold_style_definition:\n     case OPT_Wmissing_format_attribute:\n     case OPT_Woverlength_strings:\n-      break;\n-\n-      /* This is handled by the front-end.  */\n-    case OPT_nostdinc:\n-      break;\n-\n-    case OPT_nostdlib:\n-      gnat_argv[gnat_argc] = xstrdup (\"-nostdlib\");\n-      gnat_argc++;\n+      /* These are used in the GCC Makefile.  */\n       break;\n \n     case OPT_feliminate_unused_debug_types:\n@@ -242,9 +224,8 @@ gnat_handle_option (size_t scode, const char *arg, int value,\n       flag_eliminate_unused_debug_types = -value;\n       break;\n \n-    case OPT_fRTS_:\n-      gnat_argv[gnat_argc] = xstrdup (\"-fRTS\");\n-      gnat_argc++;\n+    case OPT_gdwarfplus:\n+      gnat_dwarf_extensions = 1;\n       break;\n \n     case OPT_gant:\n@@ -253,22 +234,12 @@ gnat_handle_option (size_t scode, const char *arg, int value,\n       /* ... fall through ... */\n \n     case OPT_gnat:\n-      /* Recopy the switches without the 'gnat' prefix.  */\n-      gnat_argv[gnat_argc] = XNEWVEC (char, strlen (arg) + 2);\n-      gnat_argv[gnat_argc][0] = '-';\n-      strcpy (gnat_argv[gnat_argc] + 1, arg);\n-      gnat_argc++;\n-      break;\n-\n     case OPT_gnatO:\n-      gnat_argv[gnat_argc] = xstrdup (\"-O\");\n-      gnat_argc++;\n-      gnat_argv[gnat_argc] = xstrdup (arg);\n-      gnat_argc++;\n-      break;\n-\n-    case OPT_gdwarfplus:\n-      gnat_dwarf_extensions = 1;\n+    case OPT_fRTS_:\n+    case OPT_I:\n+    case OPT_nostdinc:\n+    case OPT_nostdlib:\n+      /* These are handled by the front-end.  */\n       break;\n \n     default:\n@@ -283,8 +254,7 @@ gnat_handle_option (size_t scode, const char *arg, int value,\n static unsigned int\n gnat_init_options (unsigned int argc, const char **argv)\n {\n-  /* Initialize gnat_argv with save_argv size.  */\n-  gnat_argv = (char **) xmalloc ((argc + 1) * sizeof (argv[0]));\n+  gnat_argv = (char **) xmalloc (sizeof (argv[0]));\n   gnat_argv[0] = xstrdup (argv[0]);     /* name of the command */\n   gnat_argc = 1;\n \n@@ -423,14 +393,6 @@ gnat_init (void)\n   /* Show that REFERENCE_TYPEs are internal and should be Pmode.  */\n   internal_reference_types ();\n \n-  /* Add the input filename as the last argument.  */\n-  if (main_input_filename)\n-    {\n-      gnat_argv[gnat_argc] = xstrdup (main_input_filename);\n-      gnat_argc++;\n-      gnat_argv[gnat_argc] = NULL;\n-    }\n-\n   /* Register our internal error function.  */\n   global_dc->internal_error = &internal_error_function;\n "}]}