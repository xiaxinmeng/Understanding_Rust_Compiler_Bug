{"sha": "2f9ba5a9a32a37740571bbd4ab2cf10b1411ef4e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmY5YmE1YTlhMzJhMzc3NDA1NzFiYmQ0YWIyY2YxMGIxNDExZWY0ZQ==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1992-08-21T22:33:02Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1992-08-21T22:33:02Z"}, "message": "reorg.c (fill_simple_delay_slots): Always try to fill empty delay slots with insns from beyond the delay insn...\n\n\t* reorg.c (fill_simple_delay_slots): Always try to fill empty\n\tdelay slots with insns from beyond the delay insn, even if\n\toptimize_skip was attempted.\n\t(fill_simple_delay_slots): When filling with insns from after the\n\tdelay insn, make sure to always account for sets and references\n\tin the delay insn.\n\nFrom-SVN: r1931", "tree": {"sha": "f0fc322e22898dabfceb711e764bb8a91a3af542", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f0fc322e22898dabfceb711e764bb8a91a3af542"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2f9ba5a9a32a37740571bbd4ab2cf10b1411ef4e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f9ba5a9a32a37740571bbd4ab2cf10b1411ef4e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f9ba5a9a32a37740571bbd4ab2cf10b1411ef4e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f9ba5a9a32a37740571bbd4ab2cf10b1411ef4e/comments", "author": null, "committer": null, "parents": [{"sha": "415f583ec9b62469e67afe8500102a9d362576dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/415f583ec9b62469e67afe8500102a9d362576dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/415f583ec9b62469e67afe8500102a9d362576dd"}], "stats": {"total": 31, "additions": 18, "deletions": 13}, "files": [{"sha": "57539e3e2b9517c48732d950d2192501d5ebc042", "filename": "gcc/reorg.c", "status": "modified", "additions": 18, "deletions": 13, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f9ba5a9a32a37740571bbd4ab2cf10b1411ef4e/gcc%2Freorg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f9ba5a9a32a37740571bbd4ab2cf10b1411ef4e/gcc%2Freorg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freorg.c?ref=2f9ba5a9a32a37740571bbd4ab2cf10b1411ef4e", "patch": "@@ -2342,15 +2342,13 @@ fill_simple_delay_slots (first, non_jumps_p)\n \t  mark_referenced_resources (trial, &needed, 1);\n \t}\n \n-      if (slots_filled == slots_to_fill)\n-\t/* happy.  */ ;\n-\n       /* If all needed slots haven't been filled, we come here.  */\n \n       /* Try to optimize case of jumping around a single insn.  */\n #if defined(ANNUL_IFFALSE_SLOTS) || defined(ANNUL_IFTRUE_SLOTS)\n-      else if (delay_list == 0\n-\t       && GET_CODE (insn) == JUMP_INSN && condjump_p (insn))\n+      if (slots_filled != slots_to_fill\n+\t  && delay_list == 0\n+\t  && GET_CODE (insn) == JUMP_INSN && condjump_p (insn))\n \t{\n \t  delay_list = optimize_skip (insn);\n \t  if (delay_list)\n@@ -2382,9 +2380,10 @@ fill_simple_delay_slots (first, non_jumps_p)\n \t later unconditional jump branches to.  In that case, we don't\n \t care about the number of uses of our label.  */\n \n-      else if (GET_CODE (insn) != JUMP_INSN\n-\t       || (condjump_p (insn) && ! simplejump_p (insn)\n-\t\t   && JUMP_LABEL (insn) != 0))\n+      if (slots_filled != slots_to_fill\n+          && (GET_CODE (insn) != JUMP_INSN\n+\t      || (condjump_p (insn) && ! simplejump_p (insn)\n+\t\t   && JUMP_LABEL (insn) != 0)))\n \t{\n \t  rtx target = 0;\n \t  int maybe_never = 0;\n@@ -2401,12 +2400,18 @@ fill_simple_delay_slots (first, non_jumps_p)\n \t      mark_referenced_resources (insn, &needed, 1);\n \t      maybe_never = 1;\n \t    }\n-\t  else if (GET_CODE (insn) == JUMP_INSN)\n+\t  else \n \t    {\n-\t      /* Get our target and show how many more uses we want to\n-\t\t see before we hit the label.  */\n-\t      target = JUMP_LABEL (insn);\n-\t      target_uses = LABEL_NUSES (target) - 1;\n+\t      mark_set_resources (insn, &set, 0, 0);\n+\t      mark_referenced_resources (insn, &needed, 0);\n+\t      if (GET_CODE (insn) == JUMP_INSN)\n+\t\t{\n+\t\t  /* Get our target and show how many more uses we want to\n+\t\t     see before we hit the label.  */\n+\t\t  target = JUMP_LABEL (insn);\n+\t\t  target_uses = LABEL_NUSES (target) - 1;\n+\t\t}\n+\t\t\n \t    }\n \n \t  for (trial = next_nonnote_insn (insn); trial; trial = next_trial)"}]}