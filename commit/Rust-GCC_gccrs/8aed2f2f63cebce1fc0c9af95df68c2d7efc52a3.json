{"sha": "8aed2f2f63cebce1fc0c9af95df68c2d7efc52a3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGFlZDJmMmY2M2NlYmNlMWZjMGM5YWY5NWRmNjhjMmQ3ZWZjNTJhMw==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2014-09-11T10:01:20Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2014-09-11T10:01:20Z"}, "message": "re PR libstdc++/63219 (Superfluous template parameter in match_result::format overload)\n\n\tPR libstdc++/63219\n\t* include/bits/regex.h (match_results::format): Remove stray template\n\tparameter.\n\t* include/bits/regex_compiler.h (_RegexTranslator::_RegexTranslator):\n\tRemove parameter name to avoid -Wunused-parameter warning.\n\t* include/bits/regex_executor.h (_State_info::_State_info): Reorder\n\tmem-initializers to avoid -Wreorder warning.\n\t* include/bits/regex_executor.tcc (_Executor::_M_word_boundary):\n\tRemove parameter name to avoid -Wunused-parameter warning.\n\t* include/bits/regex_scanner.tcc (_Scanner::_M_advance): Add braces\n\tto avoid -Wempty-body warning when not in debug mode.\n\nFrom-SVN: r215160", "tree": {"sha": "7c2a608dd2b5c67bf802eb639245882f076d5c05", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7c2a608dd2b5c67bf802eb639245882f076d5c05"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8aed2f2f63cebce1fc0c9af95df68c2d7efc52a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8aed2f2f63cebce1fc0c9af95df68c2d7efc52a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8aed2f2f63cebce1fc0c9af95df68c2d7efc52a3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8aed2f2f63cebce1fc0c9af95df68c2d7efc52a3/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "21a16932df04c0745673815c29cd8fb52988f671", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21a16932df04c0745673815c29cd8fb52988f671", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21a16932df04c0745673815c29cd8fb52988f671"}], "stats": {"total": 26, "additions": 21, "deletions": 5}, "files": [{"sha": "29fdb5662f1bb8bf7fb6e34d9a0bad8966abbf91", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aed2f2f63cebce1fc0c9af95df68c2d7efc52a3/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aed2f2f63cebce1fc0c9af95df68c2d7efc52a3/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=8aed2f2f63cebce1fc0c9af95df68c2d7efc52a3", "patch": "@@ -1,3 +1,17 @@\n+2014-09-11  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/63219\n+\t* include/bits/regex.h (match_results::format): Remove stray template\n+\tparameter.\n+\t* include/bits/regex_compiler.h (_RegexTranslator::_RegexTranslator):\n+\tRemove parameter name to avoid -Wunused-parameter warning.\n+\t* include/bits/regex_executor.h (_State_info::_State_info): Reorder\n+\tmem-initializers to avoid -Wreorder warning.\n+\t* include/bits/regex_executor.tcc (_Executor::_M_word_boundary):\n+\tRemove parameter name to avoid -Wunused-parameter warning.\n+\t* include/bits/regex_scanner.tcc (_Scanner::_M_advance): Add braces\n+\tto avoid -Wempty-body warning when not in debug mode.\n+\n 2014-09-10  Siva Chandra Reddy  <sivachandra@google.com>\n \n \t* python/hook.in: Load the xmethods."}, {"sha": "9dc83fda562ecd43dc0df9d3b877c6386eea0f46", "filename": "libstdc++-v3/include/bits/regex.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aed2f2f63cebce1fc0c9af95df68c2d7efc52a3/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aed2f2f63cebce1fc0c9af95df68c2d7efc52a3/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex.h?ref=8aed2f2f63cebce1fc0c9af95df68c2d7efc52a3", "patch": "@@ -1814,7 +1814,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       /**\n        * @pre   ready() == true\n        */\n-      template<typename _Out_iter, typename _St, typename _Sa>\n+      template<typename _St, typename _Sa>\n \tbasic_string<char_type, _St, _Sa>\n \tformat(const basic_string<char_type, _St, _Sa>& __fmt,\n \t       match_flag_type __flags = regex_constants::format_default) const"}, {"sha": "1193a5aea5a728cfd36487398e12229c90166ec2", "filename": "libstdc++-v3/include/bits/regex_compiler.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aed2f2f63cebce1fc0c9af95df68c2d7efc52a3/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex_compiler.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aed2f2f63cebce1fc0c9af95df68c2d7efc52a3/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex_compiler.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex_compiler.h?ref=8aed2f2f63cebce1fc0c9af95df68c2d7efc52a3", "patch": "@@ -212,7 +212,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       typedef _CharT                       _StrTransT;\n \n       explicit\n-      _RegexTranslator(const _TraitsT& __traits)\n+      _RegexTranslator(const _TraitsT&)\n       { }\n \n       _CharT"}, {"sha": "130bc742b215070d885addea35f8bd56f5d4a5fd", "filename": "libstdc++-v3/include/bits/regex_executor.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aed2f2f63cebce1fc0c9af95df68c2d7efc52a3/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex_executor.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aed2f2f63cebce1fc0c9af95df68c2d7efc52a3/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex_executor.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex_executor.h?ref=8aed2f2f63cebce1fc0c9af95df68c2d7efc52a3", "patch": "@@ -159,7 +159,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t{\n \t  explicit\n \t  _State_info(_StateIdT __start, size_t __n)\n-\t  : _M_start(__start), _M_visited_states(new bool[__n]())\n+\t  : _M_visited_states(new bool[__n]()), _M_start(__start)\n \t  { }\n \n \t  bool _M_visited(_StateIdT __i)"}, {"sha": "3ca7de3d7fd1763dcf09a93b37e23fdf7ead11b0", "filename": "libstdc++-v3/include/bits/regex_executor.tcc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aed2f2f63cebce1fc0c9af95df68c2d7efc52a3/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex_executor.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aed2f2f63cebce1fc0c9af95df68c2d7efc52a3/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex_executor.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex_executor.tcc?ref=8aed2f2f63cebce1fc0c9af95df68c2d7efc52a3", "patch": "@@ -407,7 +407,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   template<typename _BiIter, typename _Alloc, typename _TraitsT,\n \t   bool __dfs_mode>\n     bool _Executor<_BiIter, _Alloc, _TraitsT, __dfs_mode>::\n-    _M_word_boundary(_State<_TraitsT> __state) const\n+    _M_word_boundary(_State<_TraitsT>) const\n     {\n       // By definition.\n       bool __ans = false;"}, {"sha": "1dc2fd9e92cc6b535526049cabb0e204dc2f2ca6", "filename": "libstdc++-v3/include/bits/regex_scanner.tcc", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aed2f2f63cebce1fc0c9af95df68c2d7efc52a3/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex_scanner.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aed2f2f63cebce1fc0c9af95df68c2d7efc52a3/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex_scanner.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex_scanner.tcc?ref=8aed2f2f63cebce1fc0c9af95df68c2d7efc52a3", "patch": "@@ -83,7 +83,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       else if (_M_state == _S_state_in_brace)\n \t_M_scan_in_brace();\n       else\n-\t_GLIBCXX_DEBUG_ASSERT(false);\n+\t{\n+\t  _GLIBCXX_DEBUG_ASSERT(false);\n+\t}\n     }\n \n   // Differences between styles:"}]}