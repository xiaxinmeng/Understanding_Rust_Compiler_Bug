{"sha": "791b59e35bd36fce29aea0f0f16ec65b1c6ace14", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzkxYjU5ZTM1YmQzNmZjZTI5YWVhMGYwZjE2ZWM2NWIxYzZhY2UxNA==", "commit": {"author": {"name": "Wei Guozhi", "email": "carrot@google.com", "date": "2009-06-30T06:51:29Z"}, "committer": {"name": "Wei Guozhi", "email": "carrot@gcc.gnu.org", "date": "2009-06-30T06:51:29Z"}, "message": "tree-ssa-sink.c (statement_sink_location): Stop sinking expression if the target bb post dominates from bb.\n\n\t* tree-ssa-sink.c (statement_sink_location): Stop sinking expression\n\tif the target bb post dominates from bb.\n\n\t* config/i386/i386.c (memory_address_length): Check existence of base\n\tregister before using it.\n\n\t* gcc.dg/tree-ssa/ssa-sink-5.c: New testcase.\n\nFrom-SVN: r149082", "tree": {"sha": "e6e40e470bbb22fbfafc92b65320e222942f2723", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e6e40e470bbb22fbfafc92b65320e222942f2723"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/791b59e35bd36fce29aea0f0f16ec65b1c6ace14", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/791b59e35bd36fce29aea0f0f16ec65b1c6ace14", "html_url": "https://github.com/Rust-GCC/gccrs/commit/791b59e35bd36fce29aea0f0f16ec65b1c6ace14", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/791b59e35bd36fce29aea0f0f16ec65b1c6ace14/comments", "author": {"login": "weiguozhi", "id": 57237827, "node_id": "MDQ6VXNlcjU3MjM3ODI3", "avatar_url": "https://avatars.githubusercontent.com/u/57237827?v=4", "gravatar_id": "", "url": "https://api.github.com/users/weiguozhi", "html_url": "https://github.com/weiguozhi", "followers_url": "https://api.github.com/users/weiguozhi/followers", "following_url": "https://api.github.com/users/weiguozhi/following{/other_user}", "gists_url": "https://api.github.com/users/weiguozhi/gists{/gist_id}", "starred_url": "https://api.github.com/users/weiguozhi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/weiguozhi/subscriptions", "organizations_url": "https://api.github.com/users/weiguozhi/orgs", "repos_url": "https://api.github.com/users/weiguozhi/repos", "events_url": "https://api.github.com/users/weiguozhi/events{/privacy}", "received_events_url": "https://api.github.com/users/weiguozhi/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6d984927d5e07a5ecce8a0a029885db94ffdb266", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d984927d5e07a5ecce8a0a029885db94ffdb266", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d984927d5e07a5ecce8a0a029885db94ffdb266"}], "stats": {"total": 75, "additions": 73, "deletions": 2}, "files": [{"sha": "90bed4eb1481f5d378f1380451183f5b7116337a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/791b59e35bd36fce29aea0f0f16ec65b1c6ace14/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/791b59e35bd36fce29aea0f0f16ec65b1c6ace14/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=791b59e35bd36fce29aea0f0f16ec65b1c6ace14", "patch": "@@ -1,3 +1,11 @@\n+2009-06-30  Wei Guozhi  <carrot@google.com>\n+\n+\tPR/40416\n+\t* tree-ssa-sink.c (statement_sink_location): Stop sinking expression\n+\tif the target bb post dominates from bb.\n+\t* config/i386/i386.c (memory_address_length): Check existence of base\n+\tregister before using it.\n+\n 2009-06-29  DJ Delorie  <dj@redhat.com>\n \n \t* doc/install.texi (mep-x-elf): Correct chip's full name."}, {"sha": "a6bab1b962dfa2cb9e8a6a9419c662d2543e761f", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/791b59e35bd36fce29aea0f0f16ec65b1c6ace14/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/791b59e35bd36fce29aea0f0f16ec65b1c6ace14/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=791b59e35bd36fce29aea0f0f16ec65b1c6ace14", "patch": "@@ -19389,7 +19389,7 @@ memory_address_length (rtx addr)\n \t    len = 4;\n \t}\n       /* ebp always wants a displacement.  Similarly r13.  */\n-      else if (REG_P (base)\n+      else if (base && REG_P (base)\n \t       && (REGNO (base) == BP_REG || REGNO (base) == R13_REG))\n \tlen = 1;\n \n@@ -19398,7 +19398,7 @@ memory_address_length (rtx addr)\n \t  /* ...like esp (or r12), which always wants an index.  */\n \t  || base == arg_pointer_rtx\n \t  || base == frame_pointer_rtx\n-\t  || (REG_P (base)\n+\t  || (base && REG_P (base)\n \t      && (REGNO (base) == SP_REG || REGNO (base) == R12_REG)))\n \tlen += 1;\n     }"}, {"sha": "42456c814d7b47a1b70121ddd496f2bb8b99a9c3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/791b59e35bd36fce29aea0f0f16ec65b1c6ace14/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/791b59e35bd36fce29aea0f0f16ec65b1c6ace14/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=791b59e35bd36fce29aea0f0f16ec65b1c6ace14", "patch": "@@ -1,3 +1,8 @@\n+2009-06-30  Wei Guozhi  <carrot@google.com>\n+\n+\tPR/40416\n+\t* gcc.dg/tree-ssa/ssa-sink-5.c: New testcase.\n+\n 2009-06-29  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/40274"}, {"sha": "0454245b24ac2b36e1c6317eb5c7e65e1ffd84b6", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-sink-5.c", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/791b59e35bd36fce29aea0f0f16ec65b1c6ace14/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-sink-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/791b59e35bd36fce29aea0f0f16ec65b1c6ace14/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-sink-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-sink-5.c?ref=791b59e35bd36fce29aea0f0f16ec65b1c6ace14", "patch": "@@ -0,0 +1,48 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -Os -fdump-tree-sink-stats\" } */\n+\n+typedef short int16_t;\n+typedef unsigned char uint8_t;\n+\n+void foo(int16_t runs[], uint8_t alpha[], int x, int count)\n+{\n+    int16_t* next_runs = runs + x;\n+    uint8_t*  next_alpha = alpha + x;\n+\n+    while (x > 0)\n+    {\n+        int n = runs[0];\n+\n+        if (x < n)\n+        {\n+            alpha[x] = alpha[0];\n+            runs[0] = (int16_t)(x);\n+            runs[x] = (int16_t)(n - x);\n+            break;\n+        }\n+        runs += n;\n+        alpha += n;\n+        x -= n;\n+    }\n+\n+    runs = next_runs;\n+    alpha = next_alpha;\n+    x = count;\n+\n+   for (;;)\n+    {\n+        int n = runs[0];\n+\n+        if (x < n)\n+        {\n+            alpha[x] = alpha[0];\n+            break;\n+        }\n+        x -= n;\n+        runs += n;\n+   }\n+}\n+\n+/* We should not sink the next_runs = runs + x calculation after the loop.  */\n+/* { dg-final { scan-tree-dump-times \"Sunk statements:\" 0 \"sink\" } } */\n+/* { dg-final { cleanup-tree-dump \"sink\" } } */"}, {"sha": "4f16addb32353d447a4bfe00c3c4148a60ee1f14", "filename": "gcc/tree-ssa-sink.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/791b59e35bd36fce29aea0f0f16ec65b1c6ace14/gcc%2Ftree-ssa-sink.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/791b59e35bd36fce29aea0f0f16ec65b1c6ace14/gcc%2Ftree-ssa-sink.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sink.c?ref=791b59e35bd36fce29aea0f0f16ec65b1c6ace14", "patch": "@@ -384,6 +384,11 @@ statement_sink_location (gimple stmt, basic_block frombb,\n \t  || sinkbb->loop_father != frombb->loop_father)\n \treturn false;\n \n+      /* Move the expression to a post dominator can't reduce the number of\n+         executions.  */\n+      if (dominated_by_p (CDI_POST_DOMINATORS, frombb, sinkbb))\n+        return false;\n+\n       *togsi = gsi_for_stmt (use);\n       return true;\n     }\n@@ -411,6 +416,11 @@ statement_sink_location (gimple stmt, basic_block frombb,\n       || sinkbb->loop_father != frombb->loop_father)\n     return false;\n \n+  /* Move the expression to a post dominator can't reduce the number of\n+     executions.  */\n+  if (dominated_by_p (CDI_POST_DOMINATORS, frombb, sinkbb))\n+    return false;\n+\n   *togsi = gsi_after_labels (sinkbb);\n \n   return true;"}]}