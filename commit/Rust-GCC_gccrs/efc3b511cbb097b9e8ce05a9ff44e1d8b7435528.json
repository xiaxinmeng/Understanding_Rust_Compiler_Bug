{"sha": "efc3b511cbb097b9e8ce05a9ff44e1d8b7435528", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWZjM2I1MTFjYmIwOTdiOWU4Y2UwNWE5ZmY0NGUxZDhiNzQzNTUyOA==", "commit": {"author": {"name": "Per Bothner", "email": "per@bothner.com", "date": "1999-08-14T19:49:06Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "1999-08-14T19:49:06Z"}, "message": "resolve.cc (_Jv_PrepareClass): Use ClassLoader::resolveClass0.\n\n1999-08-14  Per Bothner  <per@bothner.com>\n\n\t* resolve.cc (_Jv_PrepareClass): Use ClassLoader::resolveClass0.\n\t* java/lang/natClass.cc (initializeClass): Likewise.\n\t* java/lang/ClassLoader.java (resolveClass0): New static method.\n\t(resolveClass): Call resolveClass0.\n\t(findSystemClass): No longer static.\n\nFrom-SVN: r28711", "tree": {"sha": "ab7dd5060efb791ab5ae7d301b79c9216964368c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ab7dd5060efb791ab5ae7d301b79c9216964368c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/efc3b511cbb097b9e8ce05a9ff44e1d8b7435528", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efc3b511cbb097b9e8ce05a9ff44e1d8b7435528", "html_url": "https://github.com/Rust-GCC/gccrs/commit/efc3b511cbb097b9e8ce05a9ff44e1d8b7435528", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efc3b511cbb097b9e8ce05a9ff44e1d8b7435528/comments", "author": {"login": "PerBothner", "id": 10293361, "node_id": "MDQ6VXNlcjEwMjkzMzYx", "avatar_url": "https://avatars.githubusercontent.com/u/10293361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PerBothner", "html_url": "https://github.com/PerBothner", "followers_url": "https://api.github.com/users/PerBothner/followers", "following_url": "https://api.github.com/users/PerBothner/following{/other_user}", "gists_url": "https://api.github.com/users/PerBothner/gists{/gist_id}", "starred_url": "https://api.github.com/users/PerBothner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PerBothner/subscriptions", "organizations_url": "https://api.github.com/users/PerBothner/orgs", "repos_url": "https://api.github.com/users/PerBothner/repos", "events_url": "https://api.github.com/users/PerBothner/events{/privacy}", "received_events_url": "https://api.github.com/users/PerBothner/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2c169babb627a91c6dd3900707cdc53f170a9b70", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c169babb627a91c6dd3900707cdc53f170a9b70", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c169babb627a91c6dd3900707cdc53f170a9b70"}], "stats": {"total": 33, "additions": 19, "deletions": 14}, "files": [{"sha": "2422a71c91cac980f7792d4d3c9bd10de3d25a81", "filename": "libjava/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efc3b511cbb097b9e8ce05a9ff44e1d8b7435528/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efc3b511cbb097b9e8ce05a9ff44e1d8b7435528/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=efc3b511cbb097b9e8ce05a9ff44e1d8b7435528", "patch": "@@ -1,3 +1,11 @@\n+1999-08-14  Per Bothner  <per@bothner.com>\n+\n+\t* resolve.cc (_Jv_PrepareClass): Use ClassLoader::resolveClass0.\n+\t* java/lang/natClass.cc (initializeClass): Likewise.\n+\t* java/lang/ClassLoader.java (resolveClass0): New static method.\n+\t(resolveClass): Call resolveClass0.\n+\t(findSystemClass): No longer static.\n+\n 1999-08-12  Alexandre Oliva  <oliva@dcc.unicamp.br>\n \n \t* include/javaprims.h (TRUE, FALSE): Redefine as themselves."}, {"sha": "355e8f7b890b636b7eed37f06f6b5a5c91300c61", "filename": "libjava/configure.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efc3b511cbb097b9e8ce05a9ff44e1d8b7435528/libjava%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efc3b511cbb097b9e8ce05a9ff44e1d8b7435528/libjava%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fconfigure.in?ref=efc3b511cbb097b9e8ce05a9ff44e1d8b7435528", "patch": "@@ -50,7 +50,7 @@ AC_ARG_ENABLE(interpreter,\n      AC_DEFINE(INTERPRETER)\n   fi)\n \n-dnl This becomes -lffi if the interpreter is enables\n+dnl This becomes -lffi if the interpreter is enabled.\n INTERPSPEC=\n AC_SUBST(INTERPSPEC)\n "}, {"sha": "3135740a88ea2680f99999ec44480f2aabc47aea", "filename": "libjava/java/lang/ClassLoader.java", "status": "modified", "additions": 8, "deletions": 11, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efc3b511cbb097b9e8ce05a9ff44e1d8b7435528/libjava%2Fjava%2Flang%2FClassLoader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efc3b511cbb097b9e8ce05a9ff44e1d8b7435528/libjava%2Fjava%2Flang%2FClassLoader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FClassLoader.java?ref=efc3b511cbb097b9e8ce05a9ff44e1d8b7435528", "patch": "@@ -23,10 +23,6 @@\n  * @author  Kresten Krab Thorup\n  */\n \n-/* Written using \"Java Class Libraries\", 2nd edition, ISBN 0-201-31002-3\n- * Status: Just a stub; not useful at all.\n- */\n-\n public abstract class ClassLoader {\n \n   static private ClassLoader system;\n@@ -225,16 +221,17 @@ private static native void defineClass2 (Class klass, byte[] data,\n    * For historical reasons, this method has a name which is easily\n    * misunderstood.  Java classes are never ``resolved''.  Classes are\n    * linked; whereas method and field references are resolved.\n-   * <P>\n-   * FIXME: The JDK documentation declares this method\n-   * <code>final</code>, we declare it <code>static</code> -- any\n-   * objections?  This allows us to call it directly from native code\n-   * with less hassle. \n    *\n    * @param     clazz the class to link.\n    * @exception java.lang.LinkageError\n    */\n-  protected static void resolveClass(Class clazz)\n+  protected final void resolveClass(Class clazz)\n+    throws java.lang.LinkageError\n+  {\n+    resolveClass0(clazz);\n+  }\n+\n+  static void resolveClass0(Class clazz)\n     throws java.lang.LinkageError\n   {\n     synchronized (clazz)\n@@ -273,7 +270,7 @@ private static native void linkClass0(Class clazz)\n    * @exception java.lang.LinkageError \n    * @exception java.lang.ClassNotFoundException \n    */\n-  protected native static Class findSystemClass(String name) \n+  protected native Class findSystemClass(String name) \n     throws java.lang.ClassNotFoundException, java.lang.LinkageError;\n \n   /*"}, {"sha": "01058dc0e6b1bf54630d4dd7b3a5621608e69321", "filename": "libjava/java/lang/natClass.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efc3b511cbb097b9e8ce05a9ff44e1d8b7435528/libjava%2Fjava%2Flang%2FnatClass.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efc3b511cbb097b9e8ce05a9ff44e1d8b7435528/libjava%2Fjava%2Flang%2FnatClass.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FnatClass.cc?ref=efc3b511cbb097b9e8ce05a9ff44e1d8b7435528", "patch": "@@ -398,7 +398,7 @@ java::lang::Class::initializeClass (void)\n #ifdef INTERPRETER\n       if (_Jv_IsInterpretedClass (this))\n \t{\n-\t  java::lang::ClassLoader::resolveClass (this);\n+\t  java::lang::ClassLoader::resolveClass0 (this);\n \n \t  // Step 1.\n \t  _Jv_MonitorEnter (this);"}, {"sha": "d5ab739833a94b987a475b7669101792385b31b6", "filename": "libjava/resolve.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efc3b511cbb097b9e8ce05a9ff44e1d8b7435528/libjava%2Fresolve.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efc3b511cbb097b9e8ce05a9ff44e1d8b7435528/libjava%2Fresolve.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fresolve.cc?ref=efc3b511cbb097b9e8ce05a9ff44e1d8b7435528", "patch": "@@ -486,7 +486,7 @@ _Jv_PrepareClass(jclass klass)\n   // the super class, so we use the Java method resolveClass, which will\n   // unlock it properly, should an exception happen.\n \n-  java::lang::ClassLoader::resolveClass (klass->superclass);\n+  java::lang::ClassLoader::resolveClass0 (klass->superclass);\n \n   _Jv_InterpClass *clz = (_Jv_InterpClass*)klass;\n "}]}