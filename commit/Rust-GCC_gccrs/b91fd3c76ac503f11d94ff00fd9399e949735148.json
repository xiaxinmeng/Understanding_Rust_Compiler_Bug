{"sha": "b91fd3c76ac503f11d94ff00fd9399e949735148", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjkxZmQzYzc2YWM1MDNmMTFkOTRmZjAwZmQ5Mzk5ZTk0OTczNTE0OA==", "commit": {"author": {"name": "Alexander Monakov", "email": "amonakov@ispras.ru", "date": "2015-05-11T13:20:57Z"}, "committer": {"name": "Alexander Monakov", "email": "amonakov@gcc.gnu.org", "date": "2015-05-11T13:20:57Z"}, "message": "calls.c (prepare_call_address): Transform PLT call to GOT lookup and indirect call by forcing address into a...\n\n\t* calls.c (prepare_call_address): Transform PLT call to GOT lookup and\n\tindirect call by forcing address into a pseudo with -fno-plt.\n\t* common.opt (flag_plt): New option.\n\t* doc/invoke.texi (Code Generation Options): Add -fno-plt.\n\t([-fno-plt]): Document.\n\nFrom-SVN: r223003", "tree": {"sha": "532861d0edff899e1bd9fe5d71d6a207bb11a98a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/532861d0edff899e1bd9fe5d71d6a207bb11a98a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b91fd3c76ac503f11d94ff00fd9399e949735148", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b91fd3c76ac503f11d94ff00fd9399e949735148", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b91fd3c76ac503f11d94ff00fd9399e949735148", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b91fd3c76ac503f11d94ff00fd9399e949735148/comments", "author": {"login": "amonakov", "id": 1997391, "node_id": "MDQ6VXNlcjE5OTczOTE=", "avatar_url": "https://avatars.githubusercontent.com/u/1997391?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amonakov", "html_url": "https://github.com/amonakov", "followers_url": "https://api.github.com/users/amonakov/followers", "following_url": "https://api.github.com/users/amonakov/following{/other_user}", "gists_url": "https://api.github.com/users/amonakov/gists{/gist_id}", "starred_url": "https://api.github.com/users/amonakov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amonakov/subscriptions", "organizations_url": "https://api.github.com/users/amonakov/orgs", "repos_url": "https://api.github.com/users/amonakov/repos", "events_url": "https://api.github.com/users/amonakov/events{/privacy}", "received_events_url": "https://api.github.com/users/amonakov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9e4b3dd6bcbbd4cac2d461cef58fc912de8c33cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e4b3dd6bcbbd4cac2d461cef58fc912de8c33cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e4b3dd6bcbbd4cac2d461cef58fc912de8c33cd"}], "stats": {"total": 30, "additions": 29, "deletions": 1}, "files": [{"sha": "38f929bd19dbcc37110ee26222a48468dbc03360", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b91fd3c76ac503f11d94ff00fd9399e949735148/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b91fd3c76ac503f11d94ff00fd9399e949735148/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b91fd3c76ac503f11d94ff00fd9399e949735148", "patch": "@@ -1,3 +1,11 @@\n+2015-05-11  Alexander Monakov  <amonakov@ispras.ru>\n+\n+\t* calls.c (prepare_call_address): Transform PLT call to GOT lookup and\n+\tindirect call by forcing address into a pseudo with -fno-plt.\n+\t* common.opt (flag_plt): New option.\n+\t* doc/invoke.texi (Code Generation Options): Add -fno-plt.\n+\t([-fno-plt]): Document.\n+\n 2015-05-11  Markus Trippelsdorf  <markus@trippelsdorf.de>\n \t\n \tPR bootstrap/66105"}, {"sha": "51b896ef25cd7983b3cdbe365dcccf99012d8f9a", "filename": "gcc/calls.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b91fd3c76ac503f11d94ff00fd9399e949735148/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b91fd3c76ac503f11d94ff00fd9399e949735148/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=b91fd3c76ac503f11d94ff00fd9399e949735148", "patch": "@@ -225,6 +225,12 @@ prepare_call_address (tree fndecl_or_type, rtx funexp, rtx static_chain_value,\n \t       && targetm.small_register_classes_for_mode_p (FUNCTION_MODE))\n \t      ? force_not_mem (memory_address (FUNCTION_MODE, funexp))\n \t      : memory_address (FUNCTION_MODE, funexp));\n+  else if (flag_pic && !flag_plt && fndecl_or_type\n+\t   && TREE_CODE (fndecl_or_type) == FUNCTION_DECL\n+\t   && !targetm.binds_local_p (fndecl_or_type))\n+    {\n+      funexp = force_reg (Pmode, funexp);\n+    }\n   else if (! sibcallp)\n     {\n       if (!NO_FUNCTION_CSE && optimize && ! flag_no_function_cse)"}, {"sha": "6753fd31b6225005ca4905b983e5e0a0159465d3", "filename": "gcc/common.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b91fd3c76ac503f11d94ff00fd9399e949735148/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b91fd3c76ac503f11d94ff00fd9399e949735148/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=b91fd3c76ac503f11d94ff00fd9399e949735148", "patch": "@@ -1781,6 +1781,10 @@ fpie\n Common Report Var(flag_pie,1) Negative(fPIC)\n Generate position-independent code for executables if possible (small mode)\n \n+fplt\n+Common Report Var(flag_plt) Init(1) Optimization\n+Use PLT for PIC calls (-fno-plt: load the address from GOT at call site)\n+\n fplugin=\n Common Joined RejectNegative Var(common_deferred_options) Defer\n Specify a plugin to load"}, {"sha": "b5721c9f242dc01efe895f49b55e3977809d46b8", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b91fd3c76ac503f11d94ff00fd9399e949735148/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b91fd3c76ac503f11d94ff00fd9399e949735148/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=b91fd3c76ac503f11d94ff00fd9399e949735148", "patch": "@@ -1128,7 +1128,7 @@ See S/390 and zSeries Options.\n -finstrument-functions-exclude-function-list=@var{sym},@var{sym},@dots{} @gol\n -finstrument-functions-exclude-file-list=@var{file},@var{file},@dots{} @gol\n -fno-common  -fno-ident @gol\n--fpcc-struct-return  -fpic  -fPIC -fpie -fPIE @gol\n+-fpcc-struct-return  -fpic  -fPIC -fpie -fPIE -fno-plt @gol\n -fno-jump-tables @gol\n -frecord-gcc-switches @gol\n -freg-struct-return  -fshort-enums @gol\n@@ -23782,6 +23782,16 @@ used during linking.\n @code{__pie__} and @code{__PIE__}.  The macros have the value 1\n for @option{-fpie} and 2 for @option{-fPIE}.\n \n+@item -fno-plt\n+@opindex fno-plt\n+Do not use PLT for external function calls in position-independent code.\n+Instead, load callee address at call site from GOT and branch to it.\n+This leads to more efficient code by eliminating PLT stubs and exposing\n+GOT load to optimizations.  On architectures such as 32-bit x86 where\n+PLT stubs expect GOT pointer in a specific register, this gives more\n+register allocation freedom to the compiler.  Lazy binding requires PLT:\n+with @option{-fno-plt} all external symbols are resolved at load time.\n+\n @item -fno-jump-tables\n @opindex fno-jump-tables\n Do not use jump tables for switch statements even where it would be"}]}