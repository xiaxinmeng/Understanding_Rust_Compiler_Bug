{"sha": "94fd05f1f76faca9dc9033b55d44c960155d38e9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTRmZDA1ZjFmNzZmYWNhOWRjOTAzM2I1NWQ0NGM5NjAxNTVkMzhlOQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-10-20T10:19:58Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-10-20T10:37:48Z"}, "message": "libstdc++: Define noop coroutine details private and inline [PR 95917]\n\nThis moves the __noop_coro_frame type, the __noop_coro_fr global\nvariable, and the __dummy_resume_destroy function from namespace scope,\nreplacing them with private members of the specialization\ncoroutine_handle<noop_coroutine_promise>.\n\nThe function and variable are also declared inline, so that they\ngenerate no code unless used.\n\nlibstdc++-v3/ChangeLog:\n\n\tPR libstdc++/95917\n\t* include/std/coroutine (__noop_coro_frame): Replace with\n\tnoop_coroutine_handle::__frame.\n\t(__dummy_resume_destroy): Define inline in __frame.\n\t(__noop_coro_fr): Replace with noop_coroutine_handle::_S_fr\n\tand define as inline.\n\t* testsuite/18_support/coroutines/95917.cc: New test.", "tree": {"sha": "080d00360063e63b229428aa703171277c8b326d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/080d00360063e63b229428aa703171277c8b326d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/94fd05f1f76faca9dc9033b55d44c960155d38e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94fd05f1f76faca9dc9033b55d44c960155d38e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94fd05f1f76faca9dc9033b55d44c960155d38e9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94fd05f1f76faca9dc9033b55d44c960155d38e9/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2c2278f300cdd5f3181fe7df4dd1d869a67266a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c2278f300cdd5f3181fe7df4dd1d869a67266a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c2278f300cdd5f3181fe7df4dd1d869a67266a9"}], "stats": {"total": 61, "additions": 48, "deletions": 13}, "files": [{"sha": "2b635b982e06f29b279ec9c53892bde520358502", "filename": "libstdc++-v3/include/std/coroutine", "status": "modified", "additions": 17, "deletions": 13, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94fd05f1f76faca9dc9033b55d44c960155d38e9/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcoroutine", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94fd05f1f76faca9dc9033b55d44c960155d38e9/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcoroutine", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcoroutine?ref=94fd05f1f76faca9dc9033b55d44c960155d38e9", "patch": "@@ -249,16 +249,6 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   {\n   };\n \n-  void __dummy_resume_destroy() __attribute__((__weak__));\n-  void __dummy_resume_destroy() {}\n-\n-  struct __noop_coro_frame\n-  {\n-    void (*__r)() = __dummy_resume_destroy;\n-    void (*__d)() = __dummy_resume_destroy;\n-    struct noop_coroutine_promise __p;\n-  } __noop_coro_fr __attribute__((__weak__));\n-\n   // 17.12.4.1 Class noop_coroutine_promise\n   /// [coroutine.promise.noop]\n   template <>\n@@ -284,21 +274,35 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       // [coroutine.handle.noop.promise], promise access\n       noop_coroutine_promise& promise() const noexcept\n-      { return __noop_coro_fr.__p; }\n+      { return _S_fr.__p; }\n \n       // [coroutine.handle.noop.address], address\n       constexpr void* address() const noexcept { return _M_fr_ptr; }\n \n     private:\n       friend coroutine_handle noop_coroutine() noexcept;\n \n-      coroutine_handle() = default;\n+      struct __frame\n+      {\n+\tstatic void __dummy_resume_destroy() { }\n+\n+\tvoid (*__r)() = __dummy_resume_destroy;\n+\tvoid (*__d)() = __dummy_resume_destroy;\n+\tstruct noop_coroutine_promise __p;\n+      };\n+\n+      static __frame _S_fr;\n \n-      void* _M_fr_ptr = (void*) &__noop_coro_fr;\n+      explicit coroutine_handle() noexcept = default;\n+\n+      void* _M_fr_ptr = &_S_fr;\n     };\n \n   using noop_coroutine_handle = coroutine_handle<noop_coroutine_promise>;\n \n+  inline noop_coroutine_handle::__frame\n+  noop_coroutine_handle::_S_fr{};\n+\n   inline noop_coroutine_handle noop_coroutine() noexcept\n   {\n     return noop_coroutine_handle();"}, {"sha": "5c9cf57e001cff74347d386651ff166c0fce5a79", "filename": "libstdc++-v3/testsuite/18_support/coroutines/95917.cc", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94fd05f1f76faca9dc9033b55d44c960155d38e9/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fcoroutines%2F95917.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94fd05f1f76faca9dc9033b55d44c960155d38e9/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fcoroutines%2F95917.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fcoroutines%2F95917.cc?ref=94fd05f1f76faca9dc9033b55d44c960155d38e9", "patch": "@@ -0,0 +1,31 @@\n+// Copyright (C) 2020 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++2a -g0\" }\n+// { dg-do compile { target c++2a } }\n+// { dg-final { scan-assembler-not \"dummy_resume_destroy\" } }\n+// { dg-final { scan-assembler-not \"noop_coro\" } }\n+\n+#include <coroutine>\n+\n+// PR libstdc++/95917\n+\n+void\n+test01()\n+{\n+  std::coroutine_handle<> h;\n+}"}]}