{"sha": "6b3cf8c6c4c2a88b8b2d5cf5dd88cd685921a380", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmIzY2Y4YzZjNGMyYTg4YjhiMmQ1Y2Y1ZGQ4OGNkNjg1OTIxYTM4MA==", "commit": {"author": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "1993-08-12T02:45:47Z"}, "committer": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "1993-08-12T02:45:47Z"}, "message": "(build_module_descriptor):  Use new function get_file_function_name.\n\nFrom-SVN: r5137", "tree": {"sha": "2887038d8f81ff47e6f2f8ba9b2447140893536b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2887038d8f81ff47e6f2f8ba9b2447140893536b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6b3cf8c6c4c2a88b8b2d5cf5dd88cd685921a380", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b3cf8c6c4c2a88b8b2d5cf5dd88cd685921a380", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b3cf8c6c4c2a88b8b2d5cf5dd88cd685921a380", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b3cf8c6c4c2a88b8b2d5cf5dd88cd685921a380/comments", "author": null, "committer": null, "parents": [{"sha": "bb28827839783bec6c40cbded51a65c0faa1eee3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb28827839783bec6c40cbded51a65c0faa1eee3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb28827839783bec6c40cbded51a65c0faa1eee3"}], "stats": {"total": 47, "additions": 4, "deletions": 43}, "files": [{"sha": "72b859baee0279b0d06f05a9aaa34d13c42e23ee", "filename": "gcc/objc/objc-act.c", "status": "modified", "additions": 4, "deletions": 43, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b3cf8c6c4c2a88b8b2d5cf5dd88cd685921a380/gcc%2Fobjc%2Fobjc-act.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b3cf8c6c4c2a88b8b2d5cf5dd88cd685921a380/gcc%2Fobjc%2Fobjc-act.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.c?ref=6b3cf8c6c4c2a88b8b2d5cf5dd88cd685921a380", "patch": "@@ -1492,47 +1492,8 @@ build_module_descriptor ()\n   {\n     tree parms, function_decl, decelerator, void_list_node;\n     tree function_type;\n-    char *buf;\n-    char *global_object_name = 0;\n-    tree t;\n-\n-    /* Use a global object (which is already required to be unique over\n-       the program) rather than the file name (which imposes extra\n-       constraints).  -- Raeburn@MIT.EDU, 10 Jan 1990.  */\n-\n-    /* Find the name of some global object defined in this file.  */\n-    for (t = getdecls (); t; t = TREE_CHAIN (t))\n-      if (TREE_PUBLIC (t) && !DECL_EXTERNAL (t) && DECL_INITIAL (t) != 0)\n-\t{\n-\t  global_object_name = IDENTIFIER_POINTER (DECL_NAME (t));\n-\t  break;\n-\t}\n-\n-    /* If none, use the name of the file.  */\n-    if (!global_object_name)\n-      {\n-\tchar *p, *q;\n-\tglobal_object_name\n-\t  = (char *) alloca (strlen (main_input_filename) + 1);\n-\n-\tp = main_input_filename;\n-\tq = global_object_name;\n-\n-\t/* Replace any weird characters in the file name.  */\n-\tfor (; *p; p++)\n-\t  if (! ((*p >= '0' && *p <= '9')\n-\t\t || (*p >= 'A' && *p <= 'Z')\n-\t\t || (*p >= 'a' && *p <= 'z')))\n-\t    *q++ = '_';\n-\t  else\n-\t    *q++ = *p;\n-\t*q = 0;\n-      }\n-\n-    /* Make the constructor name from the name we have found.  */\n-    buf = (char *) xmalloc (sizeof (CONSTRUCTOR_NAME_FORMAT)\n-\t\t\t    + strlen (global_object_name));\n-    sprintf (buf, CONSTRUCTOR_NAME_FORMAT, global_object_name);\n+    extern tree get_file_function_name ();\n+    tree init_function_name = get_file_function_name ('I');\n \n     /* Declare void __objc_execClass (void*); */\n \n@@ -1557,7 +1518,7 @@ build_module_descriptor ()\n     /* void _GLOBAL_$I$<gnyf> () {objc_execClass (&L_OBJC_MODULES);}  */\n \n     start_function (void_list_node,\n-\t\t    build_parse_node (CALL_EXPR, get_identifier (buf),\n+\t\t    build_parse_node (CALL_EXPR, init_function_name,\n \t\t\t\t      /* This has the format of the output\n \t\t\t\t\t of get_parm_info.  */\n \t\t\t\t      tree_cons (NULL_TREE, NULL_TREE,\n@@ -1579,7 +1540,7 @@ build_module_descriptor ()\n     finish_function (0);\n \n     /* Return the name of the constructor function.  */\n-    return buf;\n+    return IDENTIFIER_POINTER (init_function_name);\n   }\n }\n "}]}