{"sha": "657fb0c6904b903621d89b8ca61e1500de66ee75", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjU3ZmIwYzY5MDRiOTAzNjIxZDg5YjhjYTYxZTE1MDBkZTY2ZWU3NQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2013-06-07T08:34:09Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2013-06-07T08:34:09Z"}, "message": "re PR c++/53658 (internal compiler error -- segmentation fault)\n\n/cp\n2013-06-07  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/53658\n\t* pt.c (lookup_template_class_1): Consistently use TYPE_MAIN_DECL,\n\tnot TYPE_STUB_DECL, to access the _DECL for a _TYPE.\n\n/testsuite\n2013-06-07  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/53658\n\t* g++.dg/cpp0x/alias-decl-36.C: New.\n\nFrom-SVN: r199793", "tree": {"sha": "df80ea5275c8283d97b3e69a3c3f8a6ddbab0037", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/df80ea5275c8283d97b3e69a3c3f8a6ddbab0037"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/657fb0c6904b903621d89b8ca61e1500de66ee75", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/657fb0c6904b903621d89b8ca61e1500de66ee75", "html_url": "https://github.com/Rust-GCC/gccrs/commit/657fb0c6904b903621d89b8ca61e1500de66ee75", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/657fb0c6904b903621d89b8ca61e1500de66ee75/comments", "author": null, "committer": null, "parents": [{"sha": "33e498354f7427f75237f7769dfe6d817b7fd3f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33e498354f7427f75237f7769dfe6d817b7fd3f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/33e498354f7427f75237f7769dfe6d817b7fd3f9"}], "stats": {"total": 41, "additions": 29, "deletions": 12}, "files": [{"sha": "c0977c3df0ee738e81a86a7a127e24e00f9e262b", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/657fb0c6904b903621d89b8ca61e1500de66ee75/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/657fb0c6904b903621d89b8ca61e1500de66ee75/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=657fb0c6904b903621d89b8ca61e1500de66ee75", "patch": "@@ -1,3 +1,9 @@\n+2013-06-07  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/53658\n+\t* pt.c (lookup_template_class_1): Consistently use TYPE_MAIN_DECL,\n+\tnot TYPE_STUB_DECL, to access the _DECL for a _TYPE.\n+\n 2013-06-06  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/55520"}, {"sha": "5d83cc6c967bd674c49db56cbeb49b7a9bbf7f74", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/657fb0c6904b903621d89b8ca61e1500de66ee75/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/657fb0c6904b903621d89b8ca61e1500de66ee75/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=657fb0c6904b903621d89b8ca61e1500de66ee75", "patch": "@@ -7561,7 +7561,7 @@ lookup_template_class_1 (tree d1, tree arglist, tree in_decl, tree context,\n       if (CLASS_TYPE_P (template_type) && is_dependent_type)\n \t/* If the type makes use of template parameters, the\n \t   code that generates debugging information will crash.  */\n-\tDECL_IGNORED_P (TYPE_STUB_DECL (t)) = 1;\n+\tDECL_IGNORED_P (TYPE_MAIN_DECL (t)) = 1;\n \n       /* Possibly limit visibility based on template args.  */\n       TREE_PUBLIC (type_decl) = 1;"}, {"sha": "260a871f7576010da2479ffa3ea78119683f61f4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 16, "deletions": 11, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/657fb0c6904b903621d89b8ca61e1500de66ee75/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/657fb0c6904b903621d89b8ca61e1500de66ee75/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=657fb0c6904b903621d89b8ca61e1500de66ee75", "patch": "@@ -1,21 +1,26 @@\n+2013-06-07  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/53658\n+\t* g++.dg/cpp0x/alias-decl-36.C: New.\n+\n 2013-06-06  Michael Meissner  <meissner@linux.vnet.ibm.com>\n \t    Pat Haugen <pthaugen@us.ibm.com>\n \t    Peter Bergner <bergner@vnet.ibm.com>\n \n \t* gcc.target/powerpc/p8vector-builtin-1.c: New test to test\n \tpower8 builtin functions.\n-\t* gcc/testsuite/gcc.target/powerpc/p8vector-builtin-2.c: Likewise.\n-\t* gcc/testsuite/gcc.target/powerpc/p8vector-builtin-3.c: Likewise.\n-\t* gcc/testsuite/gcc.target/powerpc/p8vector-builtin-4.c: Likewise.\n-\t* gcc/testsuite/gcc.target/powerpc/p8vector-builtin-5.c: Likewise.\n-\t* gcc/testsuite/gcc.target/powerpc/p8vector-builtin-6.c: Likewise.\n-\t* gcc/testsuite/gcc.target/powerpc/p8vector-builtin-7.c: Likewise.\n-\t* gcc/testsuite/gcc.target/powerpc/p8vector-vectorize-1.c: New\n+\t* gcc.target/powerpc/p8vector-builtin-2.c: Likewise.\n+\t* gcc.target/powerpc/p8vector-builtin-3.c: Likewise.\n+\t* gcc.target/powerpc/p8vector-builtin-4.c: Likewise.\n+\t* gcc.target/powerpc/p8vector-builtin-5.c: Likewise.\n+\t* gcc.target/powerpc/p8vector-builtin-6.c: Likewise.\n+\t* gcc.target/powerpc/p8vector-builtin-7.c: Likewise.\n+\t* gcc.target/powerpc/p8vector-vectorize-1.c: New\n \ttests to test power8 auto-vectorization.\n-\t* gcc/testsuite/gcc.target/powerpc/p8vector-vectorize-2.c: Likewise.\n-\t* gcc/testsuite/gcc.target/powerpc/p8vector-vectorize-3.c: Likewise.\n-\t* gcc/testsuite/gcc.target/powerpc/p8vector-vectorize-4.c: Likewise.\n-\t* gcc/testsuite/gcc.target/powerpc/p8vector-vectorize-5.c: Likewise.\n+\t* gcc.target/powerpc/p8vector-vectorize-2.c: Likewise.\n+\t* gcc.target/powerpc/p8vector-vectorize-3.c: Likewise.\n+\t* gcc.target/powerpc/p8vector-vectorize-4.c: Likewise.\n+\t* gcc.target/powerpc/p8vector-vectorize-5.c: Likewise.\n \n \t* gcc.target/powerpc/crypto-builtin-1.c: Use effective target\n \tpowerpc_p8vector_ok instead of powerpc_vsx_ok."}, {"sha": "dd3a422c2a230fe7c822bdb51d2c8290013e7be8", "filename": "gcc/testsuite/g++.dg/cpp0x/alias-decl-36.C", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/657fb0c6904b903621d89b8ca61e1500de66ee75/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-36.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/657fb0c6904b903621d89b8ca61e1500de66ee75/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-36.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-36.C?ref=657fb0c6904b903621d89b8ca61e1500de66ee75", "patch": "@@ -0,0 +1,6 @@\n+// PR c++/53658\n+// { dg-do compile { target c++11 } }\n+\n+struct A;\n+template <typename> using Foo = const A;\n+template <typename Item> Foo <Item> bar();"}]}