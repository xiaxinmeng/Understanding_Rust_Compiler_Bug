{"sha": "197e4514ff1feff34e0815afafb6555e56121e19", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTk3ZTQ1MTRmZjFmZWZmMzRlMDgxNWFmYWZiNjU1NWU1NjEyMWUxOQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-07-13T10:52:34Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-07-13T10:52:34Z"}, "message": "[multiple changes]\n\n2009-07-13  Emmanuel Briot  <briot@adacore.com>\n\n\t* prj.adb, prj.ads, prj-env.adb, prj-conf.adb, prj-tree.adb,\n\tmlib-prj.adb (Private_Part.Ada_Prj_Objects_File_Set,\n\tAda_Prj_Include_File_Set): Removed, since not needed\n\tCode clean up.\n\n2009-07-13  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch4.adb (Analyze_Set_Membership): New procedure, subsidiary of\n\tAnalyze_Membership_Op.\n\n\t* sem_res.adb (Resolve_Set_Membership): New procedure, subsidiary of\n\tResolve_Membership_Op.\n\n\t* exp_ch4.adb (Expand_Set_Membership): New procedure, subsidiary of\n\tExpand_N_In.\n\n2009-07-13  Robert Dewar  <dewar@adacore.com>\n\n\t* clean.adb: Minor reformattting\n\nFrom-SVN: r149569", "tree": {"sha": "21ef9fb1d95b2a33218ce793d8e33d15360d0784", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/21ef9fb1d95b2a33218ce793d8e33d15360d0784"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/197e4514ff1feff34e0815afafb6555e56121e19", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/197e4514ff1feff34e0815afafb6555e56121e19", "html_url": "https://github.com/Rust-GCC/gccrs/commit/197e4514ff1feff34e0815afafb6555e56121e19", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/197e4514ff1feff34e0815afafb6555e56121e19/comments", "author": null, "committer": null, "parents": [{"sha": "7bccff2426b3ed3c0400cf6610c61198779f797c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7bccff2426b3ed3c0400cf6610c61198779f797c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7bccff2426b3ed3c0400cf6610c61198779f797c"}], "stats": {"total": 302, "additions": 261, "deletions": 41}, "files": [{"sha": "1475a55da56676b95fc47df3a161c8ed8d8f8b36", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/197e4514ff1feff34e0815afafb6555e56121e19/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/197e4514ff1feff34e0815afafb6555e56121e19/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=197e4514ff1feff34e0815afafb6555e56121e19", "patch": "@@ -1,3 +1,25 @@\n+2009-07-13  Emmanuel Briot  <briot@adacore.com>\n+\n+\t* prj.adb, prj.ads, prj-env.adb, prj-conf.adb, prj-tree.adb,\n+\tmlib-prj.adb (Private_Part.Ada_Prj_Objects_File_Set,\n+\tAda_Prj_Include_File_Set): Removed, since not needed\n+\tCode clean up.\n+\n+2009-07-13  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch4.adb (Analyze_Set_Membership): New procedure, subsidiary of\n+\tAnalyze_Membership_Op.\n+\n+\t* sem_res.adb (Resolve_Set_Membership): New procedure, subsidiary of\n+\tResolve_Membership_Op.\n+\n+\t* exp_ch4.adb (Expand_Set_Membership): New procedure, subsidiary of\n+\tExpand_N_In.\n+\n+2009-07-13  Robert Dewar  <dewar@adacore.com>\n+\n+\t* clean.adb: Minor reformattting\n+\n 2009-07-13  Emmanuel Briot  <briot@adacore.com>\n \n \t* gnatcmd.adb, prj-proc.adb, make.adb, mlib-prj.adb, prj-ext.adb,"}, {"sha": "790b8423529de24ed0fbd5bae4a68ea8f65345d9", "filename": "gcc/ada/clean.adb", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/197e4514ff1feff34e0815afafb6555e56121e19/gcc%2Fada%2Fclean.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/197e4514ff1feff34e0815afafb6555e56121e19/gcc%2Fada%2Fclean.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fclean.adb?ref=197e4514ff1feff34e0815afafb6555e56121e19", "patch": "@@ -1045,13 +1045,14 @@ package body Clean is\n                      Proj := Project_Tree.Projects;\n                      while Proj /= null loop\n \n-                        --  for gnatmake, when the project specifies more than\n-                        --  Ada as a language (even if course we could not find\n-                        --  any source file for the other languages), we will\n-                        --  take all object files found in the object\n+                        --  For gnatmake, when the project specifies more than\n+                        --  just Ada as a language (even if course we could not\n+                        --  find any source file for the other languages), we\n+                        --  will take all the object files found in the object\n                         --  directories. Since we know the project supports at\n                         --  least Ada, we just have to test whether it has at\n-                        --  least two languages, and not care about the sources\n+                        --  least two languages, and we do not care about the\n+                        --  sources.\n \n                         if Proj.Project.Languages /= null\n                           and then Proj.Project.Languages.Next /= null"}, {"sha": "e6e539ec76b91a9a40d322da2b63b9f286800ea4", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 72, "deletions": 0, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/197e4514ff1feff34e0815afafb6555e56121e19/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/197e4514ff1feff34e0815afafb6555e56121e19/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=197e4514ff1feff34e0815afafb6555e56121e19", "patch": "@@ -4121,6 +4121,67 @@ package body Exp_Ch4 is\n       Rop    : constant Node_Id    := Right_Opnd (N);\n       Static : constant Boolean    := Is_OK_Static_Expression (N);\n \n+      procedure Expand_Set_Membership;\n+      --  For each disjunct we create a simple equality or membership test.\n+      --  The whole membership is rewritten as a short-circuit disjunction.\n+\n+      ---------------------------\n+      -- Expand_Set_Membership --\n+      ---------------------------\n+\n+      procedure Expand_Set_Membership is\n+         Alt  : Node_Id;\n+         Res  : Node_Id;\n+\n+         function Make_Cond (Alt : Node_Id) return Node_Id;\n+         --  If the alternative is a subtype mark, create a simple membership\n+         --  test. Otherwise create an equality test for it.\n+\n+         ---------------\n+         -- Make_Cond --\n+         ---------------\n+\n+         function Make_Cond (Alt : Node_Id) return Node_Id is\n+            Cond : Node_Id;\n+            L    : constant Node_Id := New_Copy (Lop);\n+            R    : constant Node_Id := Relocate_Node (Alt);\n+\n+         begin\n+            if Is_Entity_Name (Alt)\n+              and then Is_Type (Entity (Alt))\n+            then\n+               Cond :=\n+                 Make_In (Sloc (Alt),\n+                   Left_Opnd  => L,\n+                   Right_Opnd => R);\n+            else\n+               Cond := Make_Op_Eq (Sloc (Alt),\n+                 Left_Opnd  => L,\n+                 Right_Opnd => R);\n+            end if;\n+\n+            return Cond;\n+         end Make_Cond;\n+\n+      --  Start of proessing for Expand_N_In\n+\n+      begin\n+         Alt := Last (Alternatives (N));\n+         Res := Make_Cond (Alt);\n+\n+         Prev (Alt);\n+         while Present (Alt) loop\n+            Res :=\n+              Make_Or_Else (Sloc (Alt),\n+                Left_Opnd  => Make_Cond (Alt),\n+                Right_Opnd => Res);\n+            Prev (Alt);\n+         end loop;\n+\n+         Rewrite (N, Res);\n+         Analyze_And_Resolve (N, Standard_Boolean);\n+      end Expand_Set_Membership;\n+\n       procedure Substitute_Valid_Check;\n       --  Replaces node N by Lop'Valid. This is done when we have an explicit\n       --  test for the left operand being in range of its subtype.\n@@ -4146,6 +4207,13 @@ package body Exp_Ch4 is\n    --  Start of processing for Expand_N_In\n \n    begin\n+\n+      if Present (Alternatives (N)) then\n+         Remove_Side_Effects (Lop);\n+         Expand_Set_Membership;\n+         return;\n+      end if;\n+\n       --  Check case of explicit test for an expression in range of its\n       --  subtype. This is suspicious usage and we replace it with a 'Valid\n       --  test and give a warning.\n@@ -4733,6 +4801,10 @@ package body Exp_Ch4 is\n               Left_Opnd  => Left_Opnd (N),\n               Right_Opnd => Right_Opnd (N))));\n \n+      --  If this is a set membership, preserve list of alternatives\n+\n+      Set_Alternatives (Right_Opnd (N), Alternatives (Original_Node (N)));\n+\n       --  We want this to appear as coming from source if original does (see\n       --  transformations in Expand_N_In).\n "}, {"sha": "7c3981990f47098528317e937ae868fe8ae6eebb", "filename": "gcc/ada/gnat1drv.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/197e4514ff1feff34e0815afafb6555e56121e19/gcc%2Fada%2Fgnat1drv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/197e4514ff1feff34e0815afafb6555e56121e19/gcc%2Fada%2Fgnat1drv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat1drv.adb?ref=197e4514ff1feff34e0815afafb6555e56121e19", "patch": "@@ -752,7 +752,7 @@ begin\n       --  a VM, since representations are largely symbolic there.\n \n       if Back_End_Mode = Declarations_Only\n-        and then (not (Back_Annotate_Rep_Info or else Inspector_Mode)\n+        and then (not (Back_Annotate_Rep_Info or Inspector_Mode)\n                    or else Main_Kind = N_Subunit\n                    or else Targparm.Frontend_Layout_On_Target\n                    or else Targparm.VM_Target /= No_VM)"}, {"sha": "d01a329945bc2f690b262fe34b3ec2b443ffd194", "filename": "gcc/ada/mlib-prj.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/197e4514ff1feff34e0815afafb6555e56121e19/gcc%2Fada%2Fmlib-prj.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/197e4514ff1feff34e0815afafb6555e56121e19/gcc%2Fada%2Fmlib-prj.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-prj.adb?ref=197e4514ff1feff34e0815afafb6555e56121e19", "patch": "@@ -1328,12 +1328,12 @@ package body MLib.Prj is\n \n          In_Main_Object_Directory := True;\n \n-         --  for gnatmake, when the project specifies more than Ada as a\n+         --  For gnatmake, when the project specifies more than just Ada as a\n          --  language (even if course we could not find any source file for\n          --  the other languages), we will take all object files found in the\n          --  object directories. Since we know the project supports at least\n          --  Ada, we just have to test whether it has at least two languages,\n-         --  and not care about the sources\n+         --  and not care about the sources.\n \n          Foreign_Sources := For_Project.Languages.Next /= null;\n          Current_Proj := For_Project;"}, {"sha": "10fbdd77a88c3913713026c733c87a9e0c541cce", "filename": "gcc/ada/prj-conf.adb", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/197e4514ff1feff34e0815afafb6555e56121e19/gcc%2Fada%2Fprj-conf.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/197e4514ff1feff34e0815afafb6555e56121e19/gcc%2Fada%2Fprj-conf.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-conf.adb?ref=197e4514ff1feff34e0815afafb6555e56121e19", "patch": "@@ -1185,10 +1185,14 @@ package body Prj.Conf is\n          Name_Buffer (1 .. Name_Len) := Auto_Cgpr;\n          Name := Name_Find;\n \n+         --  An invalid project name to avoid conflicts with user-created ones\n+         Name_Len := 5;\n+         Name_Buffer (1 .. Name_Len) := \"_auto\";\n+\n          Config_File :=\n            Create_Project\n              (In_Tree        => Project_Tree,\n-              Name           => Name_Default,\n+              Name           => Name_Find,\n               Full_Path      => Path_Name_Type (Name),\n               Is_Config_File => True);\n "}, {"sha": "db688ce43cbf199f8eebdf8f3eb25bc71c4717fe", "filename": "gcc/ada/prj-env.adb", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/197e4514ff1feff34e0815afafb6555e56121e19/gcc%2Fada%2Fprj-env.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/197e4514ff1feff34e0815afafb6555e56121e19/gcc%2Fada%2Fprj-env.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-env.adb?ref=197e4514ff1feff34e0815afafb6555e56121e19", "patch": "@@ -1641,7 +1641,6 @@ package body Prj.Env is\n          Set_Path_File_Var\n            (Project_Include_Path_File,\n             Get_Name_String (In_Tree.Private_Part.Current_Source_Path_File));\n-         In_Tree.Private_Part.Ada_Prj_Include_File_Set := True;\n       end if;\n \n       if Including_Libraries then\n@@ -1654,7 +1653,6 @@ package body Prj.Env is\n               (Project_Objects_Path_File,\n                Get_Name_String\n                  (In_Tree.Private_Part.Current_Object_Path_File));\n-            In_Tree.Private_Part.Ada_Prj_Objects_File_Set := True;\n          end if;\n \n       else\n@@ -1667,7 +1665,6 @@ package body Prj.Env is\n               (Project_Objects_Path_File,\n                Get_Name_String\n                  (In_Tree.Private_Part.Current_Object_Path_File));\n-            In_Tree.Private_Part.Ada_Prj_Objects_File_Set := True;\n          end if;\n       end if;\n    end Set_Ada_Paths;"}, {"sha": "f054976e3211a274dc66bfb82a7492f185a7cc9e", "filename": "gcc/ada/prj-tree.adb", "status": "modified", "additions": 14, "deletions": 10, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/197e4514ff1feff34e0815afafb6555e56121e19/gcc%2Fada%2Fprj-tree.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/197e4514ff1feff34e0815afafb6555e56121e19/gcc%2Fada%2Fprj-tree.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-tree.adb?ref=197e4514ff1feff34e0815afafb6555e56121e19", "patch": "@@ -2848,15 +2848,17 @@ package body Prj.Tree is\n          Qualifier := Configuration;\n       end if;\n \n-      Prj.Tree.Tree_Private_Part.Projects_Htable.Set\n-        (In_Tree.Projects_HT,\n-         Name,\n-         Prj.Tree.Tree_Private_Part.Project_Name_And_Node'\n-         (Name           => Name,\n-          Canonical_Path => No_Path,\n-          Node           => Project,\n-          Extended       => False,\n-          Proj_Qualifier => Qualifier));\n+      if not Is_Config_File then\n+         Prj.Tree.Tree_Private_Part.Projects_Htable.Set\n+           (In_Tree.Projects_HT,\n+            Name,\n+            Prj.Tree.Tree_Private_Part.Project_Name_And_Node'\n+              (Name           => Name,\n+               Canonical_Path => No_Path,\n+               Node           => Project,\n+               Extended       => False,\n+               Proj_Qualifier => Qualifier));\n+      end if;\n \n       return Project;\n    end Create_Project;\n@@ -3044,7 +3046,9 @@ package body Prj.Tree is\n \n       --  Find out the case sensitivity of the attribute\n \n-      if Kind_Of (Prj_Or_Pkg, Tree) = N_Package_Declaration then\n+      if Prj_Or_Pkg /= Empty_Node\n+        and then Kind_Of (Prj_Or_Pkg, Tree) = N_Package_Declaration\n+      then\n          Pkg      := Prj.Attr.Package_Node_Id_Of (Name_Of (Prj_Or_Pkg, Tree));\n          Start_At := First_Attribute_Of (Pkg);\n       else"}, {"sha": "f9726be0e0231595d2a4a98d3a6a8a690ab9a18a", "filename": "gcc/ada/prj.adb", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/197e4514ff1feff34e0815afafb6555e56121e19/gcc%2Fada%2Fprj.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/197e4514ff1feff34e0815afafb6555e56121e19/gcc%2Fada%2Fprj.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.adb?ref=197e4514ff1feff34e0815afafb6555e56121e19", "patch": "@@ -223,14 +223,12 @@ package body Prj is\n       --  the empty string. On VMS, this has the effect of deassigning\n       --  the logical names.\n \n-      if Tree.Private_Part.Ada_Prj_Include_File_Set then\n+      if Tree.Private_Part.Current_Source_Path_File /= No_Path then\n          Setenv (Project_Include_Path_File, \"\");\n-         Tree.Private_Part.Ada_Prj_Include_File_Set := False;\n       end if;\n \n-      if Tree.Private_Part.Ada_Prj_Objects_File_Set then\n+      if Tree.Private_Part.Current_Object_Path_File /= No_Path then\n          Setenv (Project_Objects_Path_File, \"\");\n-         Tree.Private_Part.Ada_Prj_Objects_File_Set := False;\n       end if;\n    end Delete_All_Temp_Files;\n \n@@ -879,8 +877,6 @@ package body Prj is\n \n       Tree.Private_Part.Current_Source_Path_File := No_Path;\n       Tree.Private_Part.Current_Object_Path_File := No_Path;\n-      Tree.Private_Part.Ada_Prj_Include_File_Set := False;\n-      Tree.Private_Part.Ada_Prj_Objects_File_Set := False;\n    end Reset;\n \n    -------------------"}, {"sha": "4154e9b16929d5dafcf6acf01675c89736e82749", "filename": "gcc/ada/prj.ads", "status": "modified", "additions": 4, "deletions": 11, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/197e4514ff1feff34e0815afafb6555e56121e19/gcc%2Fada%2Fprj.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/197e4514ff1feff34e0815afafb6555e56121e19/gcc%2Fada%2Fprj.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.ads?ref=197e4514ff1feff34e0815afafb6555e56121e19", "patch": "@@ -1477,24 +1477,17 @@ private\n \n       Current_Source_Path_File : Path_Name_Type := No_Path;\n       --  Current value of project source path file env var. Used to avoid\n-      --  setting the env var to the same value.\n+      --  setting the env var to the same value. When different from No_Path,\n+      --  this indicates that logical names (VMS) or environment variables were\n+      --  created and should be deassigned to avoid polluting the environment\n+      --  on VMS.\n       --  gnatmake only\n \n       Current_Object_Path_File : Path_Name_Type := No_Path;\n       --  Current value of project object path file env var. Used to avoid\n       --  setting the env var to the same value.\n       --  gnatmake only\n \n-      Ada_Prj_Include_File_Set : Boolean := False;\n-      Ada_Prj_Objects_File_Set : Boolean := False;\n-      --  These flags are set to True when the corresponding environment\n-      --  variables are set and are used to give these environment variables an\n-      --  empty string value at the end of the program. This has no practical\n-      --  effect on most platforms, except on VMS where the logical names are\n-      --  deassigned, thus avoiding the pollution of the environment of the\n-      --  caller.\n-      --  gnatmake only\n-\n    end record;\n    --  Type to represent the part of a project tree which is private to the\n    --  Project Manager."}, {"sha": "ccfcf1fa0b7ef2d9e239559fea0981a788562351", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 95, "deletions": 0, "changes": 95, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/197e4514ff1feff34e0815afafb6555e56121e19/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/197e4514ff1feff34e0815afafb6555e56121e19/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=197e4514ff1feff34e0815afafb6555e56121e19", "patch": "@@ -2050,11 +2050,105 @@ package body Sem_Ch4 is\n \n       end Try_One_Interp;\n \n+      procedure Analyze_Set_Membership;\n+      --  If a set of alternatives is present, analyze each and find the\n+      --  common type to which they must all resolve.\n+\n+      ----------------------------\n+      -- Analyze_Set_Membership --\n+      ----------------------------\n+\n+      procedure Analyze_Set_Membership is\n+         Alt               : Node_Id;\n+         Index             : Interp_Index;\n+         It                : Interp;\n+\n+         Candidate_Interps : Node_Id;\n+         Common_Type       : Entity_Id := Empty;\n+\n+      begin\n+         Analyze (L);\n+         Candidate_Interps := L;\n+\n+         if not Is_Overloaded (L) then\n+            Common_Type := Etype (L);\n+\n+            Alt := First (Alternatives (N));\n+            while Present (Alt) loop\n+               Analyze (Alt);\n+\n+               if not Has_Compatible_Type (Alt, Common_Type) then\n+                  Wrong_Type (Alt, Common_Type);\n+               end if;\n+\n+               Next (Alt);\n+            end loop;\n+\n+         else\n+            Alt := First (Alternatives (N));\n+            while Present (Alt) loop\n+               Analyze (Alt);\n+               if not Is_Overloaded (Alt) then\n+                  Common_Type := Etype (Alt);\n+\n+               else\n+                  Get_First_Interp (Alt, Index, It);\n+                  while Present (It.Typ) loop\n+                     if\n+                       not Has_Compatible_Type (Candidate_Interps, It.Typ)\n+                     then\n+                        Remove_Interp (Index);\n+                     end if;\n+                     Get_Next_Interp (Index, It);\n+                  end loop;\n+\n+                  Get_First_Interp (Alt, Index, It);\n+                  if No (It.Typ) then\n+                     Error_Msg_N (\"alternative has no legal type\", Alt);\n+                     return;\n+                  end if;\n+\n+                  --  If alternative is not overloaded, we have a\n+                  --  unique type for all of them.\n+\n+                  Set_Etype (Alt, It.Typ);\n+                  Get_Next_Interp (Index, It);\n+\n+                  if No (It.Typ) then\n+                     Set_Is_Overloaded (Alt, False);\n+                     Common_Type := Etype (Alt);\n+                  end if;\n+\n+                  Candidate_Interps := Alt;\n+               end if;\n+\n+               Next (Alt);\n+            end loop;\n+         end if;\n+\n+         Set_Etype (N, Standard_Boolean);\n+\n+         if Present (Common_Type) then\n+            Set_Etype (L, Common_Type);\n+            Set_Is_Overloaded (L, False);\n+\n+         else\n+            Error_Msg_N (\"cannot resolve membership operation\", N);\n+         end if;\n+      end Analyze_Set_Membership;\n+\n    --  Start of processing for Analyze_Membership_Op\n \n    begin\n       Analyze_Expression (L);\n \n+      if No (R)\n+        and then Extensions_Allowed\n+      then\n+         Analyze_Set_Membership;\n+         return;\n+      end if;\n+\n       if Nkind (R) = N_Range\n         or else (Nkind (R) = N_Attribute_Reference\n                   and then Attribute_Name (R) = Name_Range)\n@@ -2090,6 +2184,7 @@ package body Sem_Ch4 is\n       Set_Etype (N, Standard_Boolean);\n \n       if Comes_From_Source (N)\n+        and then Present (Right_Opnd (N))\n         and then Is_CPP_Class (Etype (Etype (Right_Opnd (N))))\n       then\n          Error_Msg_N (\"membership test not applicable to cpp-class types\", N);"}, {"sha": "42a7e1208c4b0e3d8d4678d71b46ca4fdfee366d", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 38, "deletions": 2, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/197e4514ff1feff34e0815afafb6555e56121e19/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/197e4514ff1feff34e0815afafb6555e56121e19/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=197e4514ff1feff34e0815afafb6555e56121e19", "patch": "@@ -6734,16 +6734,52 @@ package body Sem_Res is\n    procedure Resolve_Membership_Op (N : Node_Id; Typ : Entity_Id) is\n       pragma Warnings (Off, Typ);\n \n-      L : constant Node_Id := Left_Opnd (N);\n+      L : constant Node_Id := Left_Opnd  (N);\n       R : constant Node_Id := Right_Opnd (N);\n       T : Entity_Id;\n \n+      procedure Resolve_Set_Membership;\n+      --  Analysis has determined a unique type for the left operand.\n+      --  Use it to resolve the disjuncts.\n+\n+      ----------------------------\n+      -- Resolve_Set_Membership --\n+      ----------------------------\n+\n+      procedure Resolve_Set_Membership is\n+         Alt : Node_Id;\n+\n+      begin\n+         Resolve (L, Etype (L));\n+\n+         Alt := First (Alternatives (N));\n+         while Present (Alt) loop\n+\n+            --  Alternative is an expression, a range\n+            --  or a subtype mark.\n+\n+            if not Is_Entity_Name (Alt)\n+              or else not Is_Type (Entity (Alt))\n+            then\n+               Resolve (Alt, Etype (L));\n+            end if;\n+\n+            Next (Alt);\n+         end loop;\n+      end Resolve_Set_Membership;\n+\n+   --  start of processing for Resolve_Membership_Op\n+\n    begin\n       if L = Error or else R = Error then\n          return;\n       end if;\n \n-      if not Is_Overloaded (R)\n+      if Present (Alternatives (N)) then\n+         Resolve_Set_Membership;\n+         return;\n+\n+      elsif not Is_Overloaded (R)\n         and then\n           (Etype (R) = Universal_Integer or else\n            Etype (R) = Universal_Real)"}]}