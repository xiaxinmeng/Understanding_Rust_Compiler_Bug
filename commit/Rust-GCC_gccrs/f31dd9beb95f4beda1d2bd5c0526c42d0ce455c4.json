{"sha": "f31dd9beb95f4beda1d2bd5c0526c42d0ce455c4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjMxZGQ5YmViOTVmNGJlZGExZDJiZDVjMDUyNmM0MmQwY2U0NTVjNA==", "commit": {"author": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2020-07-30T02:06:36Z"}, "committer": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2020-07-30T02:06:36Z"}, "message": "c++: abbreviated function template friend matching [PR96106]\n\nIn the below testcase, duplicate_decls wasn't merging the tsubsted\nfriend declaration for 'void add(auto)' with its definition, because\nreduce_template_parm_level (during tsubst_friend_function) lost the\nDECL_VIRTUAL_P flag on the auto's invented template parameter, which\ncaused template_heads_equivalent_p to deem the two template heads as not\nequivalent in C++20 mode.\n\nThis patch makes reduce_template_parm_level carry over the\nDECL_VIRTUAL_P flag from the original TEMPLATE_PARM_DECL.\n\ngcc/cp/ChangeLog:\n\n\tPR c++/96106\n\t* pt.c (reduce_template_parm_level): Propagate DECL_VIRTUAL_P\n\tfrom the original TEMPLATE_PARM_DECL to the new lowered one.\n\ngcc/testsuite/ChangeLog:\n\n\tPR c++/96106\n\t* g++.dg/concepts/abbrev7.C: New test.", "tree": {"sha": "10b1da7d264c52a9206d6565a2925bce6aba4c6e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/10b1da7d264c52a9206d6565a2925bce6aba4c6e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f31dd9beb95f4beda1d2bd5c0526c42d0ce455c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f31dd9beb95f4beda1d2bd5c0526c42d0ce455c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f31dd9beb95f4beda1d2bd5c0526c42d0ce455c4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f31dd9beb95f4beda1d2bd5c0526c42d0ce455c4/comments", "author": null, "committer": null, "parents": [{"sha": "dc3d1e181445fafbbd146eb355a750c41c338794", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc3d1e181445fafbbd146eb355a750c41c338794", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc3d1e181445fafbbd146eb355a750c41c338794"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "15be7b6d9720fa1795be38569d749997be74e05e", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f31dd9beb95f4beda1d2bd5c0526c42d0ce455c4/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f31dd9beb95f4beda1d2bd5c0526c42d0ce455c4/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=f31dd9beb95f4beda1d2bd5c0526c42d0ce455c4", "patch": "@@ -4453,6 +4453,7 @@ reduce_template_parm_level (tree index, tree type, int levels, tree args,\n \t\t\t      type);\n       TREE_CONSTANT (decl) = TREE_CONSTANT (orig_decl);\n       TREE_READONLY (decl) = TREE_READONLY (orig_decl);\n+      DECL_VIRTUAL_P (decl) = DECL_VIRTUAL_P (orig_decl);\n       DECL_ARTIFICIAL (decl) = 1;\n       SET_DECL_TEMPLATE_PARM_P (decl);\n "}, {"sha": "443c1b7871bf7294d7d37eb47325232c6280f446", "filename": "gcc/testsuite/g++.dg/concepts/abbrev7.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f31dd9beb95f4beda1d2bd5c0526c42d0ce455c4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fabbrev7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f31dd9beb95f4beda1d2bd5c0526c42d0ce455c4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fabbrev7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fabbrev7.C?ref=f31dd9beb95f4beda1d2bd5c0526c42d0ce455c4", "patch": "@@ -0,0 +1,14 @@\n+// PR c++/96106\n+// { dg-do compile { target concepts } }\n+\n+template<typename>\n+struct number {\n+  friend void add(auto);\n+};\n+\n+void add(auto) { }\n+\n+void foo() {\n+  number<int> n;\n+  add(n); // { dg-bogus \"ambiguous\" }\n+}"}]}