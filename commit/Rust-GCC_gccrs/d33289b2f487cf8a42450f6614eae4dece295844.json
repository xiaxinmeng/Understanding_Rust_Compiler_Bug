{"sha": "d33289b2f487cf8a42450f6614eae4dece295844", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDMzMjg5YjJmNDg3Y2Y4YTQyNDUwZjY2MTRlYWU0ZGVjZTI5NTg0NA==", "commit": {"author": {"name": "Richard Sandiford", "email": "rsandifo@nildram.co.uk", "date": "2007-10-18T17:13:06Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2007-10-18T17:13:06Z"}, "message": "mips.c: Delete trailing whitespace.\n\ngcc/\n\t* config/mips/mips.c: Delete trailing whitespace.\n\nFrom-SVN: r129450", "tree": {"sha": "9c179ef6ac298caae01a35e4b2585e9d35e14ff9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9c179ef6ac298caae01a35e4b2585e9d35e14ff9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d33289b2f487cf8a42450f6614eae4dece295844", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d33289b2f487cf8a42450f6614eae4dece295844", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d33289b2f487cf8a42450f6614eae4dece295844", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d33289b2f487cf8a42450f6614eae4dece295844/comments", "author": null, "committer": null, "parents": [{"sha": "e8b7a1372c940ebd8e6db448efeb6386d4c1c206", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8b7a1372c940ebd8e6db448efeb6386d4c1c206", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e8b7a1372c940ebd8e6db448efeb6386d4c1c206"}], "stats": {"total": 34, "additions": 19, "deletions": 15}, "files": [{"sha": "6caddf8bb3cb25ef124c93bbf17cbaf5b1ac4d27", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d33289b2f487cf8a42450f6614eae4dece295844/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d33289b2f487cf8a42450f6614eae4dece295844/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d33289b2f487cf8a42450f6614eae4dece295844", "patch": "@@ -1,3 +1,7 @@\n+2007-10-18  Richard Sandiford  <rsandifo@nildram.co.uk>\n+\n+\t* config/mips/mips.c: Delete trailing whitespace.\n+\n 2007-10-18  Richard Sandiford  <rsandifo@nildram.co.uk>\n \n \t* config/mips/mips.c (mips_expand_call): Use FAKE_CALL_REGNO."}, {"sha": "2477c1778f3470e79923f5102de062b9a1a4658a", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d33289b2f487cf8a42450f6614eae4dece295844/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d33289b2f487cf8a42450f6614eae4dece295844/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=d33289b2f487cf8a42450f6614eae4dece295844", "patch": "@@ -1,6 +1,6 @@\n /* Subroutines used for MIPS code generation.\n    Copyright (C) 1989, 1990, 1991, 1993, 1994, 1995, 1996, 1997, 1998,\n-   1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007 \n+   1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007\n    Free Software Foundation, Inc.\n    Contributed by A. Lichnewsky, lich@inria.inria.fr.\n    Changes by Michael Meissner, meissner@osf.org.\n@@ -5508,7 +5508,7 @@ mips_set_tune (const struct mips_cpu_info *info)\n    relocations and the traditional assembler macros.  It can\n    split absolute 32-bit symbolic constants into a high/lo_sum\n    pair but uses macros for other sorts of access.\n-   \n+\n    Like explicit relocation support for REL targets, it relies\n    on GNU extensions in the assembler and the linker.\n \n@@ -5656,8 +5656,8 @@ mips_set_mips16_mode (int mips16_p)\n   flag_reorder_blocks_and_partition = mips_base_reorder_blocks_and_partition;\n   flag_move_loop_invariants = mips_base_move_loop_invariants;\n   flag_delayed_branch = mips_flag_delayed_branch;\n-  \n-  if (mips16_p) \n+\n+  if (mips16_p)\n     {\n       /* Select mips16 instruction set.  */\n       target_flags |= MASK_MIPS16;\n@@ -5694,7 +5694,7 @@ mips_set_mips16_mode (int mips16_p)\n       if (flag_pic || TARGET_ABICALLS)\n \tsorry (\"MIPS16 PIC\");\n     }\n-  else \n+  else\n     {\n       /* Reset to select base non-mips16 ISA.  */\n       target_flags &= ~MASK_MIPS16;\n@@ -5847,7 +5847,7 @@ mips_merge_decl_attributes (tree olddecl, tree newdecl)\n \t\t\t   DECL_ATTRIBUTES (newdecl));\n }\n \n-/* Implement TARGET_SET_CURRENT_FUNCTION.  Decide whether the current \n+/* Implement TARGET_SET_CURRENT_FUNCTION.  Decide whether the current\n    function should use the MIPS16 ISA and switch modes accordingly.  */\n \n static void\n@@ -7905,7 +7905,7 @@ mips_output_function_prologue (FILE *file, HOST_WIDE_INT size ATTRIBUTE_UNUSED)\n   /* Select the mips16 mode for this function.  */\n   if (TARGET_MIPS16)\n     fprintf (file, \"\\t.set\\tmips16\\n\");\n-  else \n+  else\n     fprintf (file, \"\\t.set\\tnomips16\\n\");\n \n   if (!FUNCTION_NAME_ALREADY_DECLARED)\n@@ -8661,7 +8661,7 @@ mips_expand_epilogue (int sibcall_p)\n       emit_jump_insn (gen_return ());\n       return;\n     }\n-  \n+\n   /* In mips16 mode, if the return value should go into a floating-point\n      register, we need to call a helper routine to copy it over.  */\n   if (mips16_cfun_returns_in_fpr_p ())\n@@ -9636,7 +9636,7 @@ mips16_fp_args (FILE *file, int fp_code, int from_fp_p)\n \t\t reg_names[gparg], reg_names[fparg]);\n       else if (ISA_HAS_MXHC1)\n \t/* -mips32r2 -mfp64 */\n-\tfprintf (file, \"\\t%s\\t%s,%s\\n\\t%s\\t%s,%s\\n\", \n+\tfprintf (file, \"\\t%s\\t%s,%s\\n\\t%s\\t%s,%s\\n\",\n \t\t s,\n \t\t reg_names[gparg + (WORDS_BIG_ENDIAN ? 1 : 0)],\n \t\t reg_names[fparg],\n@@ -11680,8 +11680,8 @@ mips_promote_ready (rtx *ready, int lower, int higher)\n   ready[i] = new_head;\n }\n \n-/* If the priority of the instruction at POS2 in the ready queue READY \n-   is within LIMIT units of that of the instruction at POS1, swap the \n+/* If the priority of the instruction at POS2 in the ready queue READY\n+   is within LIMIT units of that of the instruction at POS1, swap the\n    instructions if POS2 is not already less than POS1.  */\n \n static void\n@@ -11740,20 +11740,20 @@ mips_74k_agen_reorder (rtx *ready, int nready)\n \t    if (store_pos == -1)\n \t      store_pos = i;\n \t    break;\n-\t    \n+\n \t  case TYPE_LOAD:\n \t    if (load_pos == -1)\n \t      load_pos = i;\n \t    break;\n-\t    \n+\n \t  default:\n \t    break;\n \t  }\n     }\n-  \n+\n   if (load_pos == -1 || store_pos == -1)\n     return;\n-  \n+\n   switch (mips_last_74k_agen_insn)\n     {\n     case TYPE_UNKNOWN:"}]}