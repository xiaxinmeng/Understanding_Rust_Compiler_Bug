{"sha": "a4710e09ed089313e3d4189d00fcfc487262e05a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTQ3MTBlMDllZDA4OTMxM2UzZDQxODlkMDBmY2ZjNDg3MjYyZTA1YQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2017-12-21T19:26:34Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-12-21T19:26:34Z"}, "message": "re PR tree-optimization/83521 (ICE: verify_gimple failed (error: invalid operand in unary operation))\n\n\tPR tree-optimization/83521\n\t* tree-ssa-phiopt.c (factor_out_conditional_conversion): Use\n\tgimple_build_assign without code on result of\n\tfold_build1 (VIEW_CONVERT_EXPR, ...), as it might not create\n\ta VIEW_CONVERT_EXPR.\n\n\t* gcc.dg/pr83521.c: New test.\n\nFrom-SVN: r255952", "tree": {"sha": "7eda300f6c4a50ae8f15d3f568032ab17bdd4068", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7eda300f6c4a50ae8f15d3f568032ab17bdd4068"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a4710e09ed089313e3d4189d00fcfc487262e05a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4710e09ed089313e3d4189d00fcfc487262e05a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a4710e09ed089313e3d4189d00fcfc487262e05a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4710e09ed089313e3d4189d00fcfc487262e05a/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "da98f7424ee636d5254b5b90adbdb9f880818692", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da98f7424ee636d5254b5b90adbdb9f880818692", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da98f7424ee636d5254b5b90adbdb9f880818692"}], "stats": {"total": 31, "additions": 29, "deletions": 2}, "files": [{"sha": "2b1aa73775ac7b22e5f012fbc2b314fcabc02d76", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4710e09ed089313e3d4189d00fcfc487262e05a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4710e09ed089313e3d4189d00fcfc487262e05a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a4710e09ed089313e3d4189d00fcfc487262e05a", "patch": "@@ -1,3 +1,11 @@\n+2017-12-21  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/83521\n+\t* tree-ssa-phiopt.c (factor_out_conditional_conversion): Use\n+\tgimple_build_assign without code on result of\n+\tfold_build1 (VIEW_CONVERT_EXPR, ...), as it might not create\n+\ta VIEW_CONVERT_EXPR.\n+\n 2017-12-21  Andrew Pinski  <apinski@cavium.com>\n \t    Steve Ellcey  <sellcey@cavium.com>\n "}, {"sha": "566efde7a336526d8b6087a64e167b38a6774be8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4710e09ed089313e3d4189d00fcfc487262e05a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4710e09ed089313e3d4189d00fcfc487262e05a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a4710e09ed089313e3d4189d00fcfc487262e05a", "patch": "@@ -1,3 +1,8 @@\n+2017-12-21  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/83521\n+\t* gcc.dg/pr83521.c: New test.\n+\n 2017-12-21  Nathan Sidwell  <nathan@acm.org>\n \n \tPR c++/83406"}, {"sha": "fc7ca04d1b4b28046ed22e2838b82e57e94fbdbc", "filename": "gcc/testsuite/gcc.dg/pr83521.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4710e09ed089313e3d4189d00fcfc487262e05a/gcc%2Ftestsuite%2Fgcc.dg%2Fpr83521.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4710e09ed089313e3d4189d00fcfc487262e05a/gcc%2Ftestsuite%2Fgcc.dg%2Fpr83521.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr83521.c?ref=a4710e09ed089313e3d4189d00fcfc487262e05a", "patch": "@@ -0,0 +1,10 @@\n+/* PR tree-optimization/83521 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O1 -fno-tree-forwprop\" } */\n+\n+int\n+foo (unsigned int x, int y)\n+{\n+  int *z = (int *)&x;\n+  return (y == 0) ? y : *z;\n+}"}, {"sha": "9e6eb9c41dd4ddf67aaed52d186d09b76347c66f", "filename": "gcc/tree-ssa-phiopt.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4710e09ed089313e3d4189d00fcfc487262e05a/gcc%2Ftree-ssa-phiopt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4710e09ed089313e3d4189d00fcfc487262e05a/gcc%2Ftree-ssa-phiopt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-phiopt.c?ref=a4710e09ed089313e3d4189d00fcfc487262e05a", "patch": "@@ -548,8 +548,12 @@ factor_out_conditional_conversion (edge e0, edge e1, gphi *phi,\n \n   /* Create the conversion stmt and insert it.  */\n   if (convert_code == VIEW_CONVERT_EXPR)\n-    temp = fold_build1 (VIEW_CONVERT_EXPR, TREE_TYPE (result), temp);\n-  new_stmt = gimple_build_assign (result, convert_code, temp);\n+    {\n+      temp = fold_build1 (VIEW_CONVERT_EXPR, TREE_TYPE (result), temp);\n+      new_stmt = gimple_build_assign (result, temp);\n+    }\n+  else\n+    new_stmt = gimple_build_assign (result, convert_code, temp);\n   gsi = gsi_after_labels (gimple_bb (phi));\n   gsi_insert_before (&gsi, new_stmt, GSI_SAME_STMT);\n "}]}