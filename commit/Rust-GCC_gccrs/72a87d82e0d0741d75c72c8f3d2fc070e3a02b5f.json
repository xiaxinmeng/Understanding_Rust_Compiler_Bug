{"sha": "72a87d82e0d0741d75c72c8f3d2fc070e3a02b5f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzJhODdkODJlMGQwNzQxZDc1YzcyYzhmM2QyZmMwNzBlM2EwMmI1Zg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-10-28T12:35:44Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-10-28T12:35:44Z"}, "message": "libstdc++: Fix name clash with _Cosh in QNX headers [PR 95592]\n\nThis replaces unqualified names like _Cosh with struct std::_Cosh to\nensure there is no ambiguity with other entities with the same name.\n\nlibstdc++-v3/ChangeLog:\n\n\tPR libstdc++/95592\n\t* include/bits/valarray_after.h (_DEFINE_EXPR_UNARY_OPERATOR)\n\t(_DEFINE_EXPR_BINARY_OPERATOR, _DEFINE_EXPR_BINARY_FUNCTION):\n\tUse elaborated-type-specifier and qualified-id to avoid\n\tambiguities with QNX system headers.\n\t* testsuite/26_numerics/valarray/95592.cc: New test.", "tree": {"sha": "0501884eb8c43bc8cc9c784818900d9f364083d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0501884eb8c43bc8cc9c784818900d9f364083d3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/72a87d82e0d0741d75c72c8f3d2fc070e3a02b5f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72a87d82e0d0741d75c72c8f3d2fc070e3a02b5f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/72a87d82e0d0741d75c72c8f3d2fc070e3a02b5f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72a87d82e0d0741d75c72c8f3d2fc070e3a02b5f/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0f7cd5e5735e5536bf7bc8ca2b998f7ce8b4ddee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f7cd5e5735e5536bf7bc8ca2b998f7ce8b4ddee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f7cd5e5735e5536bf7bc8ca2b998f7ce8b4ddee"}], "stats": {"total": 103, "additions": 66, "deletions": 37}, "files": [{"sha": "439b3e9a5edd7f34c77e7a33fc640c385a01d852", "filename": "libstdc++-v3/include/bits/valarray_after.h", "status": "modified", "additions": 37, "deletions": 37, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72a87d82e0d0741d75c72c8f3d2fc070e3a02b5f/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fvalarray_after.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72a87d82e0d0741d75c72c8f3d2fc070e3a02b5f/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fvalarray_after.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fvalarray_after.h?ref=72a87d82e0d0741d75c72c8f3d2fc070e3a02b5f", "patch": "@@ -331,9 +331,9 @@ namespace __detail\n       return _Expr<_Closure, _Tp>(_Closure(this->_M_closure));            \\\n     }\n \n-    _DEFINE_EXPR_UNARY_OPERATOR(+, __unary_plus)\n-    _DEFINE_EXPR_UNARY_OPERATOR(-, __negate)\n-    _DEFINE_EXPR_UNARY_OPERATOR(~, __bitwise_not)\n+    _DEFINE_EXPR_UNARY_OPERATOR(+, struct std::__unary_plus)\n+    _DEFINE_EXPR_UNARY_OPERATOR(-, struct std::__negate)\n+    _DEFINE_EXPR_UNARY_OPERATOR(~, struct std::__bitwise_not)\n \n #undef _DEFINE_EXPR_UNARY_OPERATOR\n \n@@ -402,24 +402,24 @@ namespace __detail\n       return _Expr<_Closure, _Value>(_Closure(__v, __e ()));            \\\n     }\n \n-    _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n-    _DEFINE_EXPR_BINARY_OPERATOR(-, __minus)\n-    _DEFINE_EXPR_BINARY_OPERATOR(*, __multiplies)\n-    _DEFINE_EXPR_BINARY_OPERATOR(/, __divides)\n-    _DEFINE_EXPR_BINARY_OPERATOR(%, __modulus)\n-    _DEFINE_EXPR_BINARY_OPERATOR(^, __bitwise_xor)\n-    _DEFINE_EXPR_BINARY_OPERATOR(&, __bitwise_and)\n-    _DEFINE_EXPR_BINARY_OPERATOR(|, __bitwise_or)\n-    _DEFINE_EXPR_BINARY_OPERATOR(<<, __shift_left)\n-    _DEFINE_EXPR_BINARY_OPERATOR(>>, __shift_right)\n-    _DEFINE_EXPR_BINARY_OPERATOR(&&, __logical_and)\n-    _DEFINE_EXPR_BINARY_OPERATOR(||, __logical_or)\n-    _DEFINE_EXPR_BINARY_OPERATOR(==, __equal_to)\n-    _DEFINE_EXPR_BINARY_OPERATOR(!=, __not_equal_to)\n-    _DEFINE_EXPR_BINARY_OPERATOR(<, __less)\n-    _DEFINE_EXPR_BINARY_OPERATOR(>, __greater)\n-    _DEFINE_EXPR_BINARY_OPERATOR(<=, __less_equal)\n-    _DEFINE_EXPR_BINARY_OPERATOR(>=, __greater_equal)\n+    _DEFINE_EXPR_BINARY_OPERATOR(+, struct std::__plus)\n+    _DEFINE_EXPR_BINARY_OPERATOR(-, struct std::__minus)\n+    _DEFINE_EXPR_BINARY_OPERATOR(*, struct std::__multiplies)\n+    _DEFINE_EXPR_BINARY_OPERATOR(/, struct std::__divides)\n+    _DEFINE_EXPR_BINARY_OPERATOR(%, struct std::__modulus)\n+    _DEFINE_EXPR_BINARY_OPERATOR(^, struct std::__bitwise_xor)\n+    _DEFINE_EXPR_BINARY_OPERATOR(&, struct std::__bitwise_and)\n+    _DEFINE_EXPR_BINARY_OPERATOR(|, struct std::__bitwise_or)\n+    _DEFINE_EXPR_BINARY_OPERATOR(<<, struct std::__shift_left)\n+    _DEFINE_EXPR_BINARY_OPERATOR(>>, struct std::__shift_right)\n+    _DEFINE_EXPR_BINARY_OPERATOR(&&, struct std::__logical_and)\n+    _DEFINE_EXPR_BINARY_OPERATOR(||, struct std::__logical_or)\n+    _DEFINE_EXPR_BINARY_OPERATOR(==, struct std::__equal_to)\n+    _DEFINE_EXPR_BINARY_OPERATOR(!=, struct std::__not_equal_to)\n+    _DEFINE_EXPR_BINARY_OPERATOR(<, struct std::__less)\n+    _DEFINE_EXPR_BINARY_OPERATOR(>, struct std::__greater)\n+    _DEFINE_EXPR_BINARY_OPERATOR(<=, struct std::__less_equal)\n+    _DEFINE_EXPR_BINARY_OPERATOR(>=, struct std::__greater_equal)\n \n #undef _DEFINE_EXPR_BINARY_OPERATOR\n \n@@ -442,20 +442,20 @@ namespace __detail\n       return _Expr<_Closure, _Tp>(_Closure(__v));                        \\\n     }\n \n-    _DEFINE_EXPR_UNARY_FUNCTION(abs, _Abs)\n-    _DEFINE_EXPR_UNARY_FUNCTION(cos, _Cos)\n-    _DEFINE_EXPR_UNARY_FUNCTION(acos, _Acos)\n-    _DEFINE_EXPR_UNARY_FUNCTION(cosh, _Cosh)\n-    _DEFINE_EXPR_UNARY_FUNCTION(sin, _Sin)\n-    _DEFINE_EXPR_UNARY_FUNCTION(asin, _Asin)\n-    _DEFINE_EXPR_UNARY_FUNCTION(sinh, _Sinh)\n-    _DEFINE_EXPR_UNARY_FUNCTION(tan, _Tan)\n-    _DEFINE_EXPR_UNARY_FUNCTION(tanh, _Tanh)\n-    _DEFINE_EXPR_UNARY_FUNCTION(atan, _Atan)\n-    _DEFINE_EXPR_UNARY_FUNCTION(exp, _Exp)\n-    _DEFINE_EXPR_UNARY_FUNCTION(log, _Log)\n-    _DEFINE_EXPR_UNARY_FUNCTION(log10, _Log10)\n-    _DEFINE_EXPR_UNARY_FUNCTION(sqrt, _Sqrt)\n+    _DEFINE_EXPR_UNARY_FUNCTION(abs, struct std::_Abs)\n+    _DEFINE_EXPR_UNARY_FUNCTION(cos, struct std::_Cos)\n+    _DEFINE_EXPR_UNARY_FUNCTION(acos, struct std::_Acos)\n+    _DEFINE_EXPR_UNARY_FUNCTION(cosh, struct std::_Cosh)\n+    _DEFINE_EXPR_UNARY_FUNCTION(sin, struct std::_Sin)\n+    _DEFINE_EXPR_UNARY_FUNCTION(asin, struct std::_Asin)\n+    _DEFINE_EXPR_UNARY_FUNCTION(sinh, struct std::_Sinh)\n+    _DEFINE_EXPR_UNARY_FUNCTION(tan, struct std::_Tan)\n+    _DEFINE_EXPR_UNARY_FUNCTION(tanh, struct std::_Tanh)\n+    _DEFINE_EXPR_UNARY_FUNCTION(atan, struct std::_Atan)\n+    _DEFINE_EXPR_UNARY_FUNCTION(exp, struct std::_Exp)\n+    _DEFINE_EXPR_UNARY_FUNCTION(log, struct std::_Log)\n+    _DEFINE_EXPR_UNARY_FUNCTION(log10, struct std::_Log10)\n+    _DEFINE_EXPR_UNARY_FUNCTION(sqrt, struct std::_Sqrt)\n \n #undef _DEFINE_EXPR_UNARY_FUNCTION\n \n@@ -545,8 +545,8 @@ namespace __detail\n       return _Expr<_Closure, _Tp>(_Closure(__t, __v));                 \\\n     }\n \n-_DEFINE_EXPR_BINARY_FUNCTION(atan2, _Atan2)\n-_DEFINE_EXPR_BINARY_FUNCTION(pow, _Pow)\n+_DEFINE_EXPR_BINARY_FUNCTION(atan2, struct std::_Atan2)\n+_DEFINE_EXPR_BINARY_FUNCTION(pow, struct std::_Pow)\n \n #undef _DEFINE_EXPR_BINARY_FUNCTION\n "}, {"sha": "e530cbdc212b38dfe1a75483e20c6f6562a00aed", "filename": "libstdc++-v3/testsuite/26_numerics/valarray/95592.cc", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72a87d82e0d0741d75c72c8f3d2fc070e3a02b5f/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fvalarray%2F95592.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72a87d82e0d0741d75c72c8f3d2fc070e3a02b5f/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fvalarray%2F95592.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fvalarray%2F95592.cc?ref=72a87d82e0d0741d75c72c8f3d2fc070e3a02b5f", "patch": "@@ -0,0 +1,29 @@\n+// Copyright (C) 2020 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-do compile }\n+\n+// PR libstdc++/95592\n+// Collision with struct _Cosh when Cross compiling libstdc++\n+\n+namespace std\n+{\n+  double _Cosh(double);\n+  double _Pow(double, double);\n+}\n+\n+#include <valarray>"}]}