{"sha": "4a148e19be2b45ab4c8dcd081e37cc99f976649f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGExNDhlMTliZTJiNDVhYjRjOGRjZDA4MWUzN2NjOTlmOTc2NjQ5Zg==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2016-03-21T19:56:50Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2016-03-21T19:56:50Z"}, "message": "re PR target/70327 (ICE: in extract_insn, at recog.c:2287 (unrecognizable insn) with -mavx512ifma and v4ti argument)\n\n\tPR target/70327\n\t* config/i386/i386.md (movxi): Use ix86_expand_vector_move instead\n\tof ix86_expand_move.\n\t(movoi): Ditto.\n\t(movti): Use general_operand for operand 1 predicate.\n\ntestsuite/ChangeLog:\n\n\tPR target/70327\n\t* gcc.target/i386/pr70327.c: New test.\n\nFrom-SVN: r234380", "tree": {"sha": "ba762dd52b128b69673d1699e514b187d5976337", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ba762dd52b128b69673d1699e514b187d5976337"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4a148e19be2b45ab4c8dcd081e37cc99f976649f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a148e19be2b45ab4c8dcd081e37cc99f976649f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a148e19be2b45ab4c8dcd081e37cc99f976649f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a148e19be2b45ab4c8dcd081e37cc99f976649f/comments", "author": null, "committer": null, "parents": [{"sha": "60d15bae0c64d8385949ab720a0dc387b729915e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60d15bae0c64d8385949ab720a0dc387b729915e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/60d15bae0c64d8385949ab720a0dc387b729915e"}], "stats": {"total": 66, "additions": 46, "deletions": 20}, "files": [{"sha": "67b5df424b331b824ce6ade57142c565b4e23d0a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 6, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a148e19be2b45ab4c8dcd081e37cc99f976649f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a148e19be2b45ab4c8dcd081e37cc99f976649f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4a148e19be2b45ab4c8dcd081e37cc99f976649f", "patch": "@@ -1,3 +1,11 @@\n+2016-03-21  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/70327\n+\t* config/i386/i386.md (movxi): Use ix86_expand_vector_move instead\n+\tof ix86_expand_move.\n+\t(movoi): Ditto.\n+\t(movti): Use general_operand for operand 1 predicate.\n+\n 2016-03-21  Martin Liska  <mliska@suse.cz>\n \n \t* hsa-dump.c (dump_hsa_insn_1): dump default branch of SBR\n@@ -32,7 +40,7 @@\n 2016-03-21  Kirill Yukhin  <kirill.yukhin@intel.com>\n \n \tPR target/70293\n-        * config/i386/sse.md: (define_insn \"*vec_dup<mode>\"/AVX2):\n+\t* config/i386/sse.md: (define_insn \"*vec_dup<mode>\"/AVX2):\n \tBlock third alternative for AVX-512VL target,\n \n 2016-03-21  Martin Liska  <mliska@suse.cz>\n@@ -55,7 +63,7 @@\n \n \tPR rtl-optimization/69102\n \t* sched-deps.c (sched_analyze_insn): Do not set last_args_size field\n-\twhen we have a readonly dependency context. \n+\twhen we have a readonly dependency context.\n \n 2016-03-18  Jeff Law  <law@redhat.com>\n \n@@ -67,7 +75,7 @@\n \tthe REG_EQUIV note created in the dump file.\n \n 2016-03-16  David Wohlferd  <dw@LimeGreenSocks.com>\n-            Bernd Schmidt  <bschmidt@redhat.com>\n+\t    Bernd Schmidt  <bschmidt@redhat.com>\n \n \t* doc/extend.texi: Document more potential problems with basic asms.\n \n@@ -83,8 +91,8 @@\n \n 2016-03-18  Kirill Yukhin  <kirill.yukhin@intel.com>\n \n-        * config/i386/sse.md: Use vpbroadcastq for broadcasting DF\n-        values to 128b regs.\n+\t* config/i386/sse.md: Use vpbroadcastq for broadcasting DF\n+\tvalues to 128b regs.\n \n 2016-03-18  Ilya Enkovich  <enkovich.gnu@gmail.com>\n \n@@ -564,7 +572,8 @@\n 2016-03-10  Jan Hubicka  <hubicka@ucw.cz>\n \n \tPR lto/69589\n-\t* cgraph.c (cgraph_node::dump): Dump split_part and indirect_call_target.\n+\t* cgraph.c (cgraph_node::dump): Dump split_part and\n+\tindirect_call_target.\n \t* cgraph.h (cgraph_node): Add indirect_call_target flag.\n \t* ipa.c (has_addr_references_p): Cleanup.\n \t(is_indirect_call_target_p): New."}, {"sha": "90fec1b289401501bf41e1bfa41ee2f2a6d059e5", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a148e19be2b45ab4c8dcd081e37cc99f976649f/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a148e19be2b45ab4c8dcd081e37cc99f976649f/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=4a148e19be2b45ab4c8dcd081e37cc99f976649f", "patch": "@@ -1872,14 +1872,6 @@\n    (set_attr \"mode\" \"<MODE>\")])\n \n \f\n-;; Move instructions.\n-\n-(define_expand \"movxi\"\n-  [(set (match_operand:XI 0 \"nonimmediate_operand\")\n-\t(match_operand:XI 1 \"general_operand\"))]\n-  \"TARGET_AVX512F\"\n-  \"ix86_expand_move (XImode, operands); DONE;\")\n-\n ;; Reload patterns to support multi-word load/store\n ;; with non-offsetable address.\n (define_expand \"reload_noff_store\"\n@@ -1914,15 +1906,23 @@\n   DONE;\n })\n \n+;; Move instructions.\n+\n+(define_expand \"movxi\"\n+  [(set (match_operand:XI 0 \"nonimmediate_operand\")\n+\t(match_operand:XI 1 \"general_operand\"))]\n+  \"TARGET_AVX512F\"\n+  \"ix86_expand_vector_move (XImode, operands); DONE;\")\n+\n (define_expand \"movoi\"\n   [(set (match_operand:OI 0 \"nonimmediate_operand\")\n \t(match_operand:OI 1 \"general_operand\"))]\n   \"TARGET_AVX\"\n-  \"ix86_expand_move (OImode, operands); DONE;\")\n+  \"ix86_expand_vector_move (OImode, operands); DONE;\")\n \n (define_expand \"movti\"\n   [(set (match_operand:TI 0 \"nonimmediate_operand\")\n-\t(match_operand:TI 1 \"nonimmediate_operand\"))]\n+\t(match_operand:TI 1 \"general_operand\"))]\n   \"TARGET_64BIT || TARGET_SSE\"\n {\n   if (TARGET_64BIT)"}, {"sha": "d91d999df76f0e0b882545f2edb389d3fb472318", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a148e19be2b45ab4c8dcd081e37cc99f976649f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a148e19be2b45ab4c8dcd081e37cc99f976649f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4a148e19be2b45ab4c8dcd081e37cc99f976649f", "patch": "@@ -1,8 +1,13 @@\n+2016-03-21  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/70327\n+\t* gcc.target/i386/pr70327.c: New test.\n+\n 2016-03-21  Martin Liska  <mliska@suse.cz>\n \n \t* gcc.dg/ipa/pr70306.c: New test.\n \n-2016-03-21  Andre Vieira  <andre.simoesdiasvieira@arm>\n+2016-03-21  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n \n \t* gcc.target/arm/attr-align1.c: Skip if M-profile.\n \t* gcc.target/arm/attr-align3.c: Likewise.\n@@ -34,7 +39,7 @@\n \n \tPR rtl-optimization/69307\n \t* gcc.target/arm/pr69307.c: New test.\n-\t\n+\n 2016-03-21  Andrey Belevantsev  <abel@ispras.ru>\n \n \tPR rtl-optimization/69102\n@@ -259,7 +264,7 @@\n 2016-03-15  Andrey Belevantsev  <abel@ispras.ru>\n \n \tPR rtl-optimization/63384\n-\t* g++.dg/pr63384.C: New test. \n+\t* g++.dg/pr63384.C: New test.\n \n 2016-03-15  Andrey Belevantsev  <abel@ispras.ru>\n \n@@ -607,7 +612,7 @@\n \t* gcc.target/arm/pr45701-2.c: Likewise.\n \n 2016-02-26  Richard Biener  <rguenther@suse.de>\n-            Jeff Law  <law@redhat.com>\n+\t    Jeff Law  <law@redhat.com>\n \n \tPR tree-optimization/69740\n \t* gcc.c-torture/compile/pr69740-1.c: New test."}, {"sha": "035bb68d458f61618809ce22482efc2db92df715", "filename": "gcc/testsuite/gcc.target/i386/pr70327.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a148e19be2b45ab4c8dcd081e37cc99f976649f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr70327.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a148e19be2b45ab4c8dcd081e37cc99f976649f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr70327.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr70327.c?ref=4a148e19be2b45ab4c8dcd081e37cc99f976649f", "patch": "@@ -0,0 +1,12 @@\n+/* PR target/70327 */\n+/* { dg-do compile } */\n+/* { dg-require-effective-target int128 } */\n+/* { dg-options \"-mavx512f\" } */\n+\n+typedef unsigned __int128 v4ti __attribute__ ((vector_size (64)));\n+\n+void\n+foo (v4ti v)\n+{\n+  foo(v);\n+}"}]}