{"sha": "3026f2dfd9cc61191297488551c287f321375205", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzAyNmYyZGZkOWNjNjExOTEyOTc0ODg1NTFjMjg3ZjMyMTM3NTIwNQ==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2007-03-12T16:24:18Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2007-03-12T16:24:18Z"}, "message": "re PR c++/30108 (internal compiler error: in make_decl_rtl, at varasm.c:890)\n\n\tPR c++/30108\n\t* call.c (convert_default_arg): Copy non-constant arguments.\n\n\tPR c++/30108\n\t* g++.dg/other/default6.C: New test.\n\nFrom-SVN: r122844", "tree": {"sha": "088268aba264edcd21878f750aced0e277f47c33", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/088268aba264edcd21878f750aced0e277f47c33"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3026f2dfd9cc61191297488551c287f321375205", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3026f2dfd9cc61191297488551c287f321375205", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3026f2dfd9cc61191297488551c287f321375205", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3026f2dfd9cc61191297488551c287f321375205/comments", "author": null, "committer": null, "parents": [{"sha": "6d4817e3740f021599e620067452c223f7b3b397", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d4817e3740f021599e620067452c223f7b3b397", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d4817e3740f021599e620067452c223f7b3b397"}], "stats": {"total": 38, "additions": 35, "deletions": 3}, "files": [{"sha": "ccbb842d2fe3ee35ded239d325f9dca2b52951d1", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3026f2dfd9cc61191297488551c287f321375205/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3026f2dfd9cc61191297488551c287f321375205/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=3026f2dfd9cc61191297488551c287f321375205", "patch": "@@ -1,3 +1,8 @@\n+2007-03-12  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/30108\n+\t* call.c (convert_default_arg): Copy non-constant arguments.\n+\n 2007-03-11  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/31038"}, {"sha": "00e0c063e862bbea62597c4b59a5b55f37c0654c", "filename": "gcc/cp/call.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3026f2dfd9cc61191297488551c287f321375205/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3026f2dfd9cc61191297488551c287f321375205/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=3026f2dfd9cc61191297488551c287f321375205", "patch": "@@ -4664,10 +4664,14 @@ convert_default_arg (tree type, tree arg, tree fn, int parmnum)\n     }\n   else\n     {\n-      /* This could get clobbered by the following call.  */\n-      if (TREE_HAS_CONSTRUCTOR (arg))\n+      /* We must make a copy of ARG, in case subsequent processing\n+\t alters any part of it.  For example, during gimplification a\n+\t cast of the form (T) &X::f (where \"f\" is a member function)\n+\t will lead to replacing the PTRMEM_CST for &X::f with a\n+\t VAR_DECL.  We can avoid the copy for constants, since they\n+\t are never modified in place.  */\n+      if (!CONSTANT_CLASS_P (arg))\n \targ = copy_node (arg);\n-\n       arg = convert_for_initialization (0, type, arg, LOOKUP_NORMAL,\n \t\t\t\t\t\"default argument\", fn, parmnum);\n       arg = convert_for_arg_passing (type, arg);"}, {"sha": "9d0a8df6333a46023764538fd3f59ffe12e0526b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3026f2dfd9cc61191297488551c287f321375205/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3026f2dfd9cc61191297488551c287f321375205/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3026f2dfd9cc61191297488551c287f321375205", "patch": "@@ -1,3 +1,8 @@\n+2007-03-12  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/30108\n+\t* g++.dg/other/default6.C: New test.\n+\n 2007-03-12  Richard Sandiford  <richard@codesourcery.com>\n \n \t* lib/target-supports.exp (check_profiling_available): Return false"}, {"sha": "2641801b1e4f52076e59fbf94aa971d447829d0a", "filename": "gcc/testsuite/g++.dg/other/default6.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3026f2dfd9cc61191297488551c287f321375205/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fdefault6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3026f2dfd9cc61191297488551c287f321375205/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fdefault6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fdefault6.C?ref=3026f2dfd9cc61191297488551c287f321375205", "patch": "@@ -0,0 +1,18 @@\n+// PR c++/30108\n+\n+class BaseRobot {\n+  typedef void (BaseRobot::*PseudoState)(void);\n+  typedef PseudoState STATE;\n+  STATE initial ();\n+  int ready ();\n+  STATE stpOtherTask ();\n+  STATE commonEventProcessing (STATE pIdleTarget=(STATE)&BaseRobot::ready);\n+};\n+BaseRobot::STATE BaseRobot::initial ()\n+{\n+  return commonEventProcessing ();\n+}\n+BaseRobot::STATE BaseRobot::stpOtherTask ()\n+{\n+  return commonEventProcessing ();\n+}"}]}