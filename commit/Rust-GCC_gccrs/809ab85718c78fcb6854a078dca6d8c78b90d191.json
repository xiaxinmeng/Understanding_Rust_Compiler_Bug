{"sha": "809ab85718c78fcb6854a078dca6d8c78b90d191", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODA5YWI4NTcxOGM3OGZjYjY4NTRhMDc4ZGNhNmQ4Yzc4YjkwZDE5MQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-08-19T23:23:00Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-08-19T23:23:00Z"}, "message": "(emit_move_insn_1): Never make a no-conflict block.\n\nFrom-SVN: r7951", "tree": {"sha": "9a8e3a88d876c4aad580d87da777f07b007f264d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9a8e3a88d876c4aad580d87da777f07b007f264d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/809ab85718c78fcb6854a078dca6d8c78b90d191", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/809ab85718c78fcb6854a078dca6d8c78b90d191", "html_url": "https://github.com/Rust-GCC/gccrs/commit/809ab85718c78fcb6854a078dca6d8c78b90d191", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/809ab85718c78fcb6854a078dca6d8c78b90d191/comments", "author": null, "committer": null, "parents": [{"sha": "c8ad69c183faa9932f9bd50e85e52e25c7b3b614", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8ad69c183faa9932f9bd50e85e52e25c7b3b614", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8ad69c183faa9932f9bd50e85e52e25c7b3b614"}], "stats": {"total": 19, "additions": 0, "deletions": 19}, "files": [{"sha": "220559121e2e6d73f585d453152a67d62dc8447b", "filename": "gcc/expr.c", "status": "modified", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/809ab85718c78fcb6854a078dca6d8c78b90d191/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/809ab85718c78fcb6854a078dca6d8c78b90d191/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=809ab85718c78fcb6854a078dca6d8c78b90d191", "patch": "@@ -1826,8 +1826,6 @@ emit_move_insn_1 (x, y)\n       int stack = push_operand (x, GET_MODE (x));\n       rtx insns;\n \n-      start_sequence ();\n-\n       /* If this is a stack, push the highpart first, so it\n \t will be in the argument order.\n \n@@ -1861,17 +1859,6 @@ emit_move_insn_1 (x, y)\n \t\t     (gen_imagpart (submode, x), gen_imagpart (submode, y)));\n \t}\n \n-      insns = get_insns ();\n-      end_sequence ();\n-\n-      /* If X is a CONCAT, we got insns like RD = RS, ID = IS,\n-\t each with a separate pseudo as destination.\n-\t It's not correct for flow to treat them as a unit.  */\n-      if (GET_CODE (x) != CONCAT)\n-\temit_no_conflict_block (insns, x, y, NULL_RTX, NULL_RTX);\n-      else\n-\temit_insns (insns);\n-\n       return get_last_insn ();\n     }\n \n@@ -1883,8 +1870,6 @@ emit_move_insn_1 (x, y)\n       rtx last_insn = 0;\n       rtx insns;\n       \n-      start_sequence ();\n-\n       for (i = 0;\n \t   i < (GET_MODE_SIZE (mode)  + (UNITS_PER_WORD - 1)) / UNITS_PER_WORD;\n \t   i++)\n@@ -1909,10 +1894,6 @@ emit_move_insn_1 (x, y)\n \t  last_insn = emit_move_insn (xpart, ypart);\n \t}\n \n-      insns = get_insns ();\n-      end_sequence ();\n-      emit_no_conflict_block (insns, x, y, NULL_RTX, NULL_RTX);\n-\n       return last_insn;\n     }\n   else"}]}