{"sha": "de9805c08121a84ce368dccfe043a3f44c3ff13b", "node_id": "C_kwDOANBUbNoAKGRlOTgwNWMwODEyMWE4NGNlMzY4ZGNjZmUwNDNhM2Y0NGMzZmYxM2I", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2022-08-31T14:39:27Z"}, "committer": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2022-08-31T14:39:27Z"}, "message": "aarch64: Update sizeless tests for recent GNU C changes\n\nThe tests for sizeless SVE types include checks that the types\nare handled for initialisation purposes in the same way as scalars.\nGNU C and C2x now allow scalars to be initialised using empty braces,\nso this patch updates the SVE tests to match.\n\ngcc/testsuite/\n\t* gcc.target/aarch64/sve/acle/general-c/gnu_vectors_1.c: Update\n\ttests for empty initializers.\n\t* gcc.target/aarch64/sve/acle/general-c/gnu_vectors_2.c: Likewise.\n\t* gcc.target/aarch64/sve/acle/general-c/sizeless-1.c: Likewise.\n\t* gcc.target/aarch64/sve/acle/general-c/sizeless-2.c: Likewise.", "tree": {"sha": "555762b0bb745b315b38034119f850b7addcc65d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/555762b0bb745b315b38034119f850b7addcc65d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/de9805c08121a84ce368dccfe043a3f44c3ff13b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de9805c08121a84ce368dccfe043a3f44c3ff13b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de9805c08121a84ce368dccfe043a3f44c3ff13b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de9805c08121a84ce368dccfe043a3f44c3ff13b/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a8ebd27d0ab69b08fd6e335bbb48a73a50202586", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8ebd27d0ab69b08fd6e335bbb48a73a50202586", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a8ebd27d0ab69b08fd6e335bbb48a73a50202586"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "9db9535831ae1925ef9ff873edc1913c06105f5d", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/general-c/gnu_vectors_1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de9805c08121a84ce368dccfe043a3f44c3ff13b/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fgeneral-c%2Fgnu_vectors_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de9805c08121a84ce368dccfe043a3f44c3ff13b/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fgeneral-c%2Fgnu_vectors_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fgeneral-c%2Fgnu_vectors_1.c?ref=de9805c08121a84ce368dccfe043a3f44c3ff13b", "patch": "@@ -12,7 +12,7 @@ f (svuint8_t sve_u1, svint8_t sve_s1,\n   /* Initialization.  */\n \n   svuint8_t init_sve_u1 = 0; /* { dg-error {incompatible types when initializing type 'svuint8_t' using type 'int'} } */\n-  svuint8_t init_sve_u2 = {}; /* { dg-error {empty scalar initializer} } */\n+  svuint8_t init_sve_u2 = {};\n   svuint8_t init_sve_u3 = { sve_u1 };\n   svuint8_t init_sve_u4 = { gnu_u1 };\n   svuint8_t init_sve_u5 = { sve_s1 }; /* { dg-error {incompatible types when initializing type 'svuint8_t' using type 'svint8_t'} } */\n@@ -31,7 +31,7 @@ f (svuint8_t sve_u1, svint8_t sve_s1,\n \n   /* Compound literals.  */\n \n-  (svuint8_t) {}; /* { dg-error {empty scalar initializer} } */\n+  (svuint8_t) {};\n   (svuint8_t) { 0 }; /* { dg-error {incompatible types when initializing type 'svuint8_t' using type 'int'} } */\n   (svuint8_t) { sve_u1 };\n   (svuint8_t) { gnu_u1 };"}, {"sha": "c05b16406a4c3e61a9c530bc5e6fb652c10a9777", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/general-c/gnu_vectors_2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de9805c08121a84ce368dccfe043a3f44c3ff13b/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fgeneral-c%2Fgnu_vectors_2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de9805c08121a84ce368dccfe043a3f44c3ff13b/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fgeneral-c%2Fgnu_vectors_2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fgeneral-c%2Fgnu_vectors_2.c?ref=de9805c08121a84ce368dccfe043a3f44c3ff13b", "patch": "@@ -12,7 +12,7 @@ f (svuint8_t sve_u1, svint8_t sve_s1,\n   /* Initialization.  */\n \n   svuint8_t init_sve_u1 = 0; /* { dg-error {incompatible types when initializing type 'svuint8_t' using type 'int'} } */\n-  svuint8_t init_sve_u2 = {}; /* { dg-error {empty scalar initializer} } */\n+  svuint8_t init_sve_u2 = {};\n   svuint8_t init_sve_u3 = { sve_u1 };\n   svuint8_t init_sve_u4 = { gnu_u1 };\n   svuint8_t init_sve_u5 = { sve_s1 };\n@@ -31,7 +31,7 @@ f (svuint8_t sve_u1, svint8_t sve_s1,\n \n   /* Compound literals.  */\n \n-  (svuint8_t) {}; /* { dg-error {empty scalar initializer} } */\n+  (svuint8_t) {};\n   (svuint8_t) { 0 }; /* { dg-error {incompatible types when initializing type 'svuint8_t' using type 'int'} } */\n   (svuint8_t) { sve_u1 };\n   (svuint8_t) { gnu_u1 };"}, {"sha": "4b34a71c1fefda4b04af35e0da6c20493d9bfd9d", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/general-c/sizeless-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de9805c08121a84ce368dccfe043a3f44c3ff13b/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fgeneral-c%2Fsizeless-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de9805c08121a84ce368dccfe043a3f44c3ff13b/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fgeneral-c%2Fsizeless-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fgeneral-c%2Fsizeless-1.c?ref=de9805c08121a84ce368dccfe043a3f44c3ff13b", "patch": "@@ -66,14 +66,14 @@ statements (int n)\n \n   svint8_t init_sve_sc1 = sve_sc1;\n   svint8_t init_sve_sc2 = sve_sh1; /* { dg-error {incompatible types when initializing type 'svint8_t' using type 'svint16_t'} } */\n-  svint8_t init_sve_sc3 = {}; /* { dg-error {empty scalar initializer} } */\n+  svint8_t init_sve_sc3 = {};\n \n   int initi_a = sve_sc1; /* { dg-error {incompatible types when initializing type 'int' using type 'svint8_t'} } */\n   int initi_b = { sve_sc1 }; /* { dg-error {incompatible types when initializing type 'int' using type 'svint8_t'} } */\n \n   /* Compound literals.  */\n \n-  (svint8_t) {}; /* { dg-error {empty scalar initializer} } */\n+  (svint8_t) {};\n   (svint8_t) { sve_sc1 };\n \n   (int) { sve_sc1 }; /* { dg-error {incompatible types when initializing type 'int' using type 'svint8_t'} } */"}, {"sha": "34dfd598e321b15be6f8b093fe9cbebbd9548cd2", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/general-c/sizeless-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de9805c08121a84ce368dccfe043a3f44c3ff13b/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fgeneral-c%2Fsizeless-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de9805c08121a84ce368dccfe043a3f44c3ff13b/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fgeneral-c%2Fsizeless-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fgeneral-c%2Fsizeless-2.c?ref=de9805c08121a84ce368dccfe043a3f44c3ff13b", "patch": "@@ -66,14 +66,14 @@ statements (int n)\n \n   svint8_t init_sve_sc1 = sve_sc1;\n   svint8_t init_sve_sc2 = sve_sh1; /* { dg-error {incompatible types when initializing type 'svint8_t' using type 'svint16_t'} } */\n-  svint8_t init_sve_sc3 = {}; /* { dg-error {empty scalar initializer} } */\n+  svint8_t init_sve_sc3 = {};\n \n   int initi_a = sve_sc1; /* { dg-error {incompatible types when initializing type 'int' using type 'svint8_t'} } */\n   int initi_b = { sve_sc1 }; /* { dg-error {incompatible types when initializing type 'int' using type 'svint8_t'} } */\n \n   /* Compound literals.  */\n \n-  (svint8_t) {}; /* { dg-error {empty scalar initializer} } */\n+  (svint8_t) {};\n   (svint8_t) { sve_sc1 };\n \n   (int) { sve_sc1 }; /* { dg-error {incompatible types when initializing type 'int' using type 'svint8_t'} } */"}]}