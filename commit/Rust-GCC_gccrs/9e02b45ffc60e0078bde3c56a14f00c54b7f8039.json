{"sha": "9e02b45ffc60e0078bde3c56a14f00c54b7f8039", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWUwMmI0NWZmYzYwZTAwNzhiZGUzYzU2YTE0ZjAwYzU0YjdmODAzOQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-05-21T10:45:47Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-05-21T10:46:23Z"}, "message": "Add outline-atomics to target attribute.\n\n\t* common/config/aarch64/aarch64-common.c (aarch64_handle_option):\n\tHandle OPT_moutline_atomics.\n\t* config/aarch64/aarch64.c: Add outline-atomics to\n\taarch64_attributes.\n\n\t* doc/extend.texi: Document the newly added target attribute.\n\n\t* gcc.target/aarch64/target_attr_20.c: New test.\n\t* gcc.target/aarch64/target_attr_21.c: New test.", "tree": {"sha": "30a5b984ae4b8c782d9a111a889ac13cdfd9c89b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/30a5b984ae4b8c782d9a111a889ac13cdfd9c89b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9e02b45ffc60e0078bde3c56a14f00c54b7f8039", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEE6I4wzqqylQBfXaRhTcGC3A+nN4UFAl7GXAYACgkQTcGC3A+n\nN4X1wgf/W67CptW9eDOfOIibY0Dxb43IxXvFOcTiebZWArke6Ubd4Jp4YgWxjgJx\nLUy9Daj/vX59s42OpAr4HeAqWrANxYGQ27G42GEOCRr9gQROxF11qFT0IvFUK3es\nyS54aqbBPQtegy+BQkYyZbrMSuR3PvZpZfAvqukQ7IZ6XybD/iiwaNc25pmA5B6e\n/vsqDpwNi7+5phYAbp8wLNXl1lLDOaPsQz+0BZ2ebr1LJguH8Sq8uwSf0Pu++L1L\nfwyYXDIrMedElnhLruyyUyCH+LgDLL5G3ougAguon4XtQVz8hWCOi8cW1CWtvp9J\nueLTTyTbTPO+qFO8d2Vrq1iNZqTv4g==\n=835G\n-----END PGP SIGNATURE-----", "payload": "tree 30a5b984ae4b8c782d9a111a889ac13cdfd9c89b\nparent 62b5b53e94dc0314d86d9729733b0c65dff3b53e\nauthor Martin Liska <mliska@suse.cz> 1590057947 +0200\ncommitter Martin Liska <mliska@suse.cz> 1590057983 +0200\n\nAdd outline-atomics to target attribute.\n\n\t* common/config/aarch64/aarch64-common.c (aarch64_handle_option):\n\tHandle OPT_moutline_atomics.\n\t* config/aarch64/aarch64.c: Add outline-atomics to\n\taarch64_attributes.\n\n\t* doc/extend.texi: Document the newly added target attribute.\n\n\t* gcc.target/aarch64/target_attr_20.c: New test.\n\t* gcc.target/aarch64/target_attr_21.c: New test.\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e02b45ffc60e0078bde3c56a14f00c54b7f8039", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e02b45ffc60e0078bde3c56a14f00c54b7f8039", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e02b45ffc60e0078bde3c56a14f00c54b7f8039/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "62b5b53e94dc0314d86d9729733b0c65dff3b53e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62b5b53e94dc0314d86d9729733b0c65dff3b53e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62b5b53e94dc0314d86d9729733b0c65dff3b53e"}], "stats": {"total": 79, "additions": 79, "deletions": 0}, "files": [{"sha": "d48fbfcab81d96e29ec9a5438640022722ef94ff", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e02b45ffc60e0078bde3c56a14f00c54b7f8039/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e02b45ffc60e0078bde3c56a14f00c54b7f8039/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9e02b45ffc60e0078bde3c56a14f00c54b7f8039", "patch": "@@ -1,3 +1,11 @@\n+2020-05-21  Martin Liska  <mliska@suse.cz>\n+\n+\t* common/config/aarch64/aarch64-common.c (aarch64_handle_option):\n+\tHandle OPT_moutline_atomics.\n+\t* config/aarch64/aarch64.c: Add outline-atomics to\n+\taarch64_attributes.\n+\t* doc/extend.texi: Document the newly added target attribute.\n+\n 2020-05-21  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n \n \tPR target/95218"}, {"sha": "51bd319d6d30a9f39abd7eff4bd61bd224cd0a4a", "filename": "gcc/common/config/aarch64/aarch64-common.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e02b45ffc60e0078bde3c56a14f00c54b7f8039/gcc%2Fcommon%2Fconfig%2Faarch64%2Faarch64-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e02b45ffc60e0078bde3c56a14f00c54b7f8039/gcc%2Fcommon%2Fconfig%2Faarch64%2Faarch64-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon%2Fconfig%2Faarch64%2Faarch64-common.c?ref=9e02b45ffc60e0078bde3c56a14f00c54b7f8039", "patch": "@@ -116,6 +116,10 @@ aarch64_handle_option (struct gcc_options *opts,\n       opts->x_flag_omit_leaf_frame_pointer = val;\n       return true;\n \n+    case OPT_moutline_atomics:\n+      opts->x_aarch64_flag_outline_atomics = val;\n+      return true;\n+\n     default:\n       return true;\n     }"}, {"sha": "78db0a5632326be9c6e20ff09b9dd17cfa231cf0", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e02b45ffc60e0078bde3c56a14f00c54b7f8039/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e02b45ffc60e0078bde3c56a14f00c54b7f8039/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=9e02b45ffc60e0078bde3c56a14f00c54b7f8039", "patch": "@@ -15266,6 +15266,8 @@ static const struct aarch64_attribute_info aarch64_attributes[] =\n      aarch64_handle_attr_branch_protection, OPT_mbranch_protection_ },\n   { \"sign-return-address\", aarch64_attr_enum, false, NULL,\n      OPT_msign_return_address_ },\n+  { \"outline-atomics\", aarch64_attr_bool, true, NULL,\n+     OPT_moutline_atomics},\n   { NULL, aarch64_attr_custom, false, NULL, OPT____ }\n };\n "}, {"sha": "a2ebef8cf8ca30f073e65744632268c6a221178e", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e02b45ffc60e0078bde3c56a14f00c54b7f8039/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e02b45ffc60e0078bde3c56a14f00c54b7f8039/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=9e02b45ffc60e0078bde3c56a14f00c54b7f8039", "patch": "@@ -4066,6 +4066,12 @@ Select the function scope on which branch protection will be applied.  The\n behavior and permissible arguments are the same as for the command-line option\n @option{-mbranch-protection=}.  The default value is @code{none}.\n \n+@item outline-atomics\n+@cindex @code{outline-atomics} function attribute, AArch64\n+Enable or disable calls to out-of-line helpers to implement atomic operations.\n+This corresponds to the behavior of the command line options\n+@option{-moutline-atomics} and @option{-mno-outline-atomics}.\n+\n @end table\n \n The above target attributes can be specified as follows:"}, {"sha": "3940cfd48c4f21b2e13ed4d9e1c21e611855dc9b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e02b45ffc60e0078bde3c56a14f00c54b7f8039/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e02b45ffc60e0078bde3c56a14f00c54b7f8039/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9e02b45ffc60e0078bde3c56a14f00c54b7f8039", "patch": "@@ -1,3 +1,8 @@\n+2020-05-21  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcc.target/aarch64/target_attr_20.c: New test.\n+\t* gcc.target/aarch64/target_attr_21.c: New test.\n+\n 2020-05-20  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n \n \t* g++.dg/warn/Wconversion-null-2.C: Add explicit declarations for l()"}, {"sha": "509fb039e8476327a0659c43a3e5c8801b476ca6", "filename": "gcc/testsuite/gcc.target/aarch64/target_attr_20.c", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e02b45ffc60e0078bde3c56a14f00c54b7f8039/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftarget_attr_20.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e02b45ffc60e0078bde3c56a14f00c54b7f8039/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftarget_attr_20.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftarget_attr_20.c?ref=9e02b45ffc60e0078bde3c56a14f00c54b7f8039", "patch": "@@ -0,0 +1,27 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=armv8-a+nolse -moutline-atomics\" } */\n+\n+int b, c, d, e, f, h;\n+short g;\n+int foo (int) __attribute__ ((__const__));\n+\n+__attribute__ ((target (\"no-outline-atomics\")))\n+void\n+bar (void)\n+{\n+  while (1)\n+    {\n+      while (1)\n+\t{\n+\t  __atomic_load_n (&e, 0);\n+\t  if (foo (2))\n+\t    __sync_val_compare_and_swap (&c, 0, f);\n+\t  b = 1;\n+\t  if (h == e)\n+\t    break;\n+\t}\n+      __sync_val_compare_and_swap (&g, -1, f);\n+    }\n+}\n+\n+/* { dg-final { scan-assembler-not \"bl.*__aarch64_cas2_acq_rel\" } } */"}, {"sha": "acace4c8f2af931f618ff2f83d6e5adc0c477af5", "filename": "gcc/testsuite/gcc.target/aarch64/target_attr_21.c", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e02b45ffc60e0078bde3c56a14f00c54b7f8039/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftarget_attr_21.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e02b45ffc60e0078bde3c56a14f00c54b7f8039/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftarget_attr_21.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftarget_attr_21.c?ref=9e02b45ffc60e0078bde3c56a14f00c54b7f8039", "patch": "@@ -0,0 +1,27 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=armv8-a+nolse -mno-outline-atomics\" } */\n+\n+int b, c, d, e, f, h;\n+short g;\n+int foo (int) __attribute__ ((__const__));\n+\n+__attribute__ ((target (\"outline-atomics\")))\n+void\n+bar (void)\n+{\n+  while (1)\n+    {\n+      while (1)\n+\t{\n+\t  __atomic_load_n (&e, 0);\n+\t  if (foo (2))\n+\t    __sync_val_compare_and_swap (&c, 0, f);\n+\t  b = 1;\n+\t  if (h == e)\n+\t    break;\n+\t}\n+      __sync_val_compare_and_swap (&g, -1, f);\n+    }\n+}\n+\n+/* { dg-final { scan-assembler-times \"bl.*__aarch64_cas2_acq_rel\" 1 } } */"}]}