{"sha": "7ff23740a3d7fa1e41f7e58891c711b7ef25a90b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2ZmMjM3NDBhM2Q3ZmExZTQxZjdlNTg4OTFjNzExYjdlZjI1YTkwYg==", "commit": {"author": {"name": "Paolo Bonzini", "email": "bonzini@gnu.org", "date": "2009-06-27T14:46:56Z"}, "committer": {"name": "Paolo Bonzini", "email": "bonzini@gcc.gnu.org", "date": "2009-06-27T14:46:56Z"}, "message": "bitmap.h (bitmap_ior_and_into): New.\n\n2009-06-27  Paolo Bonzini  <bonzini@gnu.org>\n\n\t* bitmap.h (bitmap_ior_and_into): New.\n\t* bitmap.c (bitmap_ior_and_into): New.\n\nFrom-SVN: r149009", "tree": {"sha": "609ecc7fc0d5a3e5925a98f04c86fbef685eecc9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/609ecc7fc0d5a3e5925a98f04c86fbef685eecc9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7ff23740a3d7fa1e41f7e58891c711b7ef25a90b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ff23740a3d7fa1e41f7e58891c711b7ef25a90b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ff23740a3d7fa1e41f7e58891c711b7ef25a90b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ff23740a3d7fa1e41f7e58891c711b7ef25a90b/comments", "author": {"login": "bonzini", "id": 42082, "node_id": "MDQ6VXNlcjQyMDgy", "avatar_url": "https://avatars.githubusercontent.com/u/42082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bonzini", "html_url": "https://github.com/bonzini", "followers_url": "https://api.github.com/users/bonzini/followers", "following_url": "https://api.github.com/users/bonzini/following{/other_user}", "gists_url": "https://api.github.com/users/bonzini/gists{/gist_id}", "starred_url": "https://api.github.com/users/bonzini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bonzini/subscriptions", "organizations_url": "https://api.github.com/users/bonzini/orgs", "repos_url": "https://api.github.com/users/bonzini/repos", "events_url": "https://api.github.com/users/bonzini/events{/privacy}", "received_events_url": "https://api.github.com/users/bonzini/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ccf5c864c9bae45e3c1a9858529f346005e5ca25", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ccf5c864c9bae45e3c1a9858529f346005e5ca25", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ccf5c864c9bae45e3c1a9858529f346005e5ca25"}], "stats": {"total": 85, "additions": 85, "deletions": 0}, "files": [{"sha": "f7fdd4fa464763eacff589452ca8d645ecff63af", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ff23740a3d7fa1e41f7e58891c711b7ef25a90b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ff23740a3d7fa1e41f7e58891c711b7ef25a90b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7ff23740a3d7fa1e41f7e58891c711b7ef25a90b", "patch": "@@ -1,3 +1,8 @@\n+2009-06-27  Paolo Bonzini  <bonzini@gnu.org>\n+\n+\t* bitmap.h (bitmap_ior_and_into): New.\n+\t* bitmap.c (bitmap_ior_and_into): New.\n+\n 2009-06-27  Paolo Bonzini  <bonzini@gnu.org>\n \n         * domwalk.h (struct dom_walk_data): Remove all callbacks except"}, {"sha": "deca5e535a9bcaea2f53df50113903c978e320a3", "filename": "gcc/bitmap.c", "status": "modified", "additions": 78, "deletions": 0, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ff23740a3d7fa1e41f7e58891c711b7ef25a90b/gcc%2Fbitmap.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ff23740a3d7fa1e41f7e58891c711b7ef25a90b/gcc%2Fbitmap.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbitmap.c?ref=7ff23740a3d7fa1e41f7e58891c711b7ef25a90b", "patch": "@@ -1942,6 +1942,84 @@ bitmap_ior_and_compl_into (bitmap a, const_bitmap from1, const_bitmap from2)\n   return changed;\n }\n \n+/* A |= (B & C).  Return true if A changes.  */\n+\n+bool\n+bitmap_ior_and_into (bitmap a, const_bitmap b, const_bitmap c)\n+{\n+  bitmap_element *a_elt = a->first;\n+  const bitmap_element *b_elt = b->first;\n+  const bitmap_element *c_elt = c->first;\n+  bitmap_element and_elt;\n+  bitmap_element *a_prev = NULL;\n+  bitmap_element **a_prev_pnext = &a->first;\n+  bool changed = false;\n+  unsigned ix;\n+\n+  if (b == c)\n+    return bitmap_ior_into (a, b);\n+  if (bitmap_empty_p (b) || bitmap_empty_p (c))\n+    return false;\n+\n+  and_elt.indx = -1;\n+  while (b_elt && c_elt)\n+    {\n+      BITMAP_WORD overall;\n+\n+      /* Find a common item of B and C.  */\n+      while (b_elt->indx != c_elt->indx)\n+\t{\n+          if (b_elt->indx < c_elt->indx)\n+\t    {\n+\t      b_elt = b_elt->next;\n+\t      if (!b_elt)\n+\t\tgoto done;\n+\t    }\n+          else\n+\t    {\n+\t      c_elt = c_elt->next;\n+\t      if (!c_elt)\n+\t\tgoto done;\n+\t    }\n+\t}\n+\n+      overall = 0;\n+      and_elt.indx = b_elt->indx;\n+      for (ix = BITMAP_ELEMENT_WORDS; ix--;)\n+\t{\n+\t  and_elt.bits[ix] = b_elt->bits[ix] & c_elt->bits[ix];\n+\t  overall |= and_elt.bits[ix];\n+\t}\n+\n+      b_elt = b_elt->next;\n+      c_elt = c_elt->next;\n+      if (!overall)\n+\tcontinue;\n+\n+      /* Now find a place to insert AND_ELT.  */\n+      do\n+\t{\n+\t  ix = a_elt ? a_elt->indx : and_elt.indx;\n+          if (ix == and_elt.indx)\n+\t    changed = bitmap_elt_ior (a, a_elt, a_prev, a_elt, &and_elt, changed);\n+          else if (ix > and_elt.indx)\n+\t    changed = bitmap_elt_copy (a, NULL, a_prev, &and_elt, changed);\n+\n+          a_prev = *a_prev_pnext;\n+          a_prev_pnext = &a_prev->next;\n+          a_elt = *a_prev_pnext;\n+\n+          /* If A lagged behind B/C, we advanced it so loop once more.  */\n+\t}\n+      while (ix < and_elt.indx);\n+    }\n+\n+ done:\n+  gcc_assert (!a->current == !a->first);\n+  if (a->current)\n+    a->indx = a->current->indx;\n+  return changed;\n+}\n \f\n /* Debugging function to print out the contents of a bitmap.  */\n "}, {"sha": "bbc0e20cfefe778894f4e766daedc5085ab37ef0", "filename": "gcc/bitmap.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ff23740a3d7fa1e41f7e58891c711b7ef25a90b/gcc%2Fbitmap.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ff23740a3d7fa1e41f7e58891c711b7ef25a90b/gcc%2Fbitmap.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbitmap.h?ref=7ff23740a3d7fa1e41f7e58891c711b7ef25a90b", "patch": "@@ -129,6 +129,8 @@ extern bool bitmap_ior_into (bitmap, const_bitmap);\n extern void bitmap_xor (bitmap, const_bitmap, const_bitmap);\n extern void bitmap_xor_into (bitmap, const_bitmap);\n \n+/* DST = A | (B & C).  Return true if DST changes.  */\n+extern bool bitmap_ior_and_into (bitmap DST, const_bitmap B, const_bitmap C);\n /* DST = A | (B & ~C).  Return true if DST changes.  */\n extern bool bitmap_ior_and_compl (bitmap DST, const_bitmap A, const_bitmap B, const_bitmap C);\n /* A |= (B & ~C).  Return true if A changes.  */"}]}