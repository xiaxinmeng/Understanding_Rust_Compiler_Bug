{"sha": "4579ccbc0e8bf33ee29ece3ff5294661215e9131", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDU3OWNjYmMwZThiZjMzZWUyOWVjZTNmZjUyOTQ2NjEyMTVlOTEzMQ==", "commit": {"author": {"name": "Dodji Seketeli", "email": "dodji@redhat.com", "date": "2012-08-22T13:50:58Z"}, "committer": {"name": "Dodji Seketeli", "email": "dodji@gcc.gnu.org", "date": "2012-08-22T13:50:58Z"}, "message": "Make TREE_NOTHROW use the base.nothrow_flag again\n\nWhile working on something else, I noticed that debug_tree (vec), when\nvec is a TREE_VEC was crashing because TREE_NOTHROW was asserting that\nits argument is not a TREE_VEC, so print_node would crash.\n\nIt turned out that TREE_NOTHROW was accidentally modified by this\nchange set:\n\ncommit 87d8f7b67c6a36c37e48e298f26e693520099b1e\nAuthor: rguenth <rguenth@138bc75d-0d04-0410-961f-82ee72b054a4>\nDate:   Tue Aug 21 10:03:38 2012 +0000\n\n    2012-08-21  Richard Guenther  <rguenther@suse.de>\n\n    \tcp/\n    \t* cp-tree.h (TREE_INDIRECT_USING): Use TREE_LANG_FLAG_0 accessor.\n    \t(ATTR_IS_DEPENDENT): Likewise.\n    \t(ARGUMENT_PACK_INCOMPLETE_P): Use TREE_ADDRESSABLE instead of\n    \tTREE_LANG_FLAG_0 on TREE_VECs.\n\n    \t* tree.h (struct tree_base): Add union to make it possible to\n    \tre-use the upper 4 bytes for tree codes that do not need as\n    \tmany flags as others.  Move visited and default_def_flag to\n    \tcommon bits section in exchange for saturating_flag and\n    \tunsigned_flag.  Add SSA name version and tree vec length\n    \tfields here.\n    \t(struct tree_vec): Remove length field here.\n    \t(struct tree_ssa_name): Remove version field here.\n\n    git-svn-id: svn+ssh://gcc.gnu.org/svn/gcc/trunk@190558 138bc75d-0d04-0410-961f-82ee72b054a4\n\nRichard Guenther pre-approved the reverting of the TREE_NOTHROW change\nline.\n\nTested on x86_64-unknown-linux-gnu against master and applied to\ntrunk.\n\ngcc/\n\t* tree.h (TREE_NOTHROW): Use the base.nothrow_flag.\n\nFrom-SVN: r190595", "tree": {"sha": "c9d1d486721745479ff3209d3aaac6129ba9c739", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c9d1d486721745479ff3209d3aaac6129ba9c739"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4579ccbc0e8bf33ee29ece3ff5294661215e9131", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4579ccbc0e8bf33ee29ece3ff5294661215e9131", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4579ccbc0e8bf33ee29ece3ff5294661215e9131", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4579ccbc0e8bf33ee29ece3ff5294661215e9131/comments", "author": null, "committer": null, "parents": [{"sha": "9bb06c2a9f8b83179cb76ba928b22aa3a2b57501", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9bb06c2a9f8b83179cb76ba928b22aa3a2b57501", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9bb06c2a9f8b83179cb76ba928b22aa3a2b57501"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "c9b0e0a84cf75068d83c1e725234a995bdd8bbc5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4579ccbc0e8bf33ee29ece3ff5294661215e9131/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4579ccbc0e8bf33ee29ece3ff5294661215e9131/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4579ccbc0e8bf33ee29ece3ff5294661215e9131", "patch": "@@ -1,3 +1,7 @@\n+2012-08-22  Dodji Seketeli  <dodji@redhat.com>\n+\n+\t* tree.h (TREE_NOTHROW): Use the base.nothrow_flag.\n+\n 2012-08-22  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/46590"}, {"sha": "bca0576d5a77828228b41d490345f56c3645fe74", "filename": "gcc/tree.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4579ccbc0e8bf33ee29ece3ff5294661215e9131/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4579ccbc0e8bf33ee29ece3ff5294661215e9131/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=4579ccbc0e8bf33ee29ece3ff5294661215e9131", "patch": "@@ -1305,7 +1305,7 @@ extern void omp_clause_range_check_failed (const_tree, const char *, int,\n    throw an exception.  In a CALL_EXPR, nonzero means the call cannot\n    throw.  We can't easily check the node type here as the C++\n    frontend also uses this flag (for AGGR_INIT_EXPR).  */\n-#define TREE_NOTHROW(NODE) (TREE_NOT_CHECK (NODE, TREE_VEC)->base.nothrow_flag)\n+#define TREE_NOTHROW(NODE) ((NODE)->base.nothrow_flag)\n \n /* In a CALL_EXPR, means that it's safe to use the target of the call\n    expansion as the return slot for a call that returns in memory.  */"}]}