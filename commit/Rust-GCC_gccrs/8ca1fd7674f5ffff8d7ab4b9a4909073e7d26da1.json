{"sha": "8ca1fd7674f5ffff8d7ab4b9a4909073e7d26da1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGNhMWZkNzY3NGY1ZmZmZjhkN2FiNGI5YTQ5MDkwNzNlN2QyNmRhMQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2009-03-28T10:05:24Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2009-03-28T10:05:24Z"}, "message": "re PR tree-optimization/38968 (Complex matrix product is not vectorized)\n\n2009-03-28  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/38968\n\t* tree-vect-analyze.c (vect_compute_data_ref_alignment):\n\tUse FLOOR_MOD_EXPR to compute misalignment.\n\n\t* gfortran.dg/vect/fast-math-pr38968.f90: New testcase.\n\nFrom-SVN: r145171", "tree": {"sha": "309865ec92e23cd15ca1d8b8dfea9c09dbe4e2c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/309865ec92e23cd15ca1d8b8dfea9c09dbe4e2c7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8ca1fd7674f5ffff8d7ab4b9a4909073e7d26da1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ca1fd7674f5ffff8d7ab4b9a4909073e7d26da1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ca1fd7674f5ffff8d7ab4b9a4909073e7d26da1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ca1fd7674f5ffff8d7ab4b9a4909073e7d26da1/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a254e44de7e7f417e3cdff485b27396e6bb16650", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a254e44de7e7f417e3cdff485b27396e6bb16650", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a254e44de7e7f417e3cdff485b27396e6bb16650"}], "stats": {"total": 34, "additions": 33, "deletions": 1}, "files": [{"sha": "48715d3178d9eeb25d211818066f534a6c0e10e8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ca1fd7674f5ffff8d7ab4b9a4909073e7d26da1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ca1fd7674f5ffff8d7ab4b9a4909073e7d26da1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8ca1fd7674f5ffff8d7ab4b9a4909073e7d26da1", "patch": "@@ -1,3 +1,9 @@\n+2009-03-28  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/38968\n+\t* tree-vect-analyze.c (vect_compute_data_ref_alignment):\n+\tUse FLOOR_MOD_EXPR to compute misalignment.\n+\n 2009-03-28  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/37795"}, {"sha": "e0f7df77cf4659ef893ceb4baa2e2a8718ffdb23", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ca1fd7674f5ffff8d7ab4b9a4909073e7d26da1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ca1fd7674f5ffff8d7ab4b9a4909073e7d26da1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8ca1fd7674f5ffff8d7ab4b9a4909073e7d26da1", "patch": "@@ -1,3 +1,8 @@\n+2009-03-28  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/38968\n+\t* gfortran.dg/vect/fast-math-pr38968.f90: New testcase.\n+\n 2009-03-28  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/37795"}, {"sha": "e16131502dba03ed0457a793f93f7c25b88be85c", "filename": "gcc/testsuite/gfortran.dg/vect/fast-math-pr38968.f90", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ca1fd7674f5ffff8d7ab4b9a4909073e7d26da1/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Ffast-math-pr38968.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ca1fd7674f5ffff8d7ab4b9a4909073e7d26da1/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Ffast-math-pr38968.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Ffast-math-pr38968.f90?ref=8ca1fd7674f5ffff8d7ab4b9a4909073e7d26da1", "patch": "@@ -0,0 +1,21 @@\n+program mymatmul\n+  implicit none\n+  integer, parameter :: kp = 4\n+  integer, parameter :: n = 2000\n+  real(kp), dimension(n,n) :: rr, ri\n+  complex(kp), dimension(n,n) :: a,b,c\n+  real :: t1, t2\n+  integer :: i, j, k\n+\n+  do j = 1, n\n+     do k = 1, n\n+        do i = 1, n\n+           c(i,j) = c(i,j) + a(i,k) * b(k,j)\n+        end do\n+     end do\n+  end do\n+\n+end program mymatmul\n+\n+! { dg-final { scan-tree-dump \"vectorized 1 loops\" \"vect\" } }\n+! { dg-final { cleanup-tree-dump \"vect\" } }"}, {"sha": "eb5166bac92371d7ea626e573b45610c8ca4f28c", "filename": "gcc/tree-vect-analyze.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ca1fd7674f5ffff8d7ab4b9a4909073e7d26da1/gcc%2Ftree-vect-analyze.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ca1fd7674f5ffff8d7ab4b9a4909073e7d26da1/gcc%2Ftree-vect-analyze.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-analyze.c?ref=8ca1fd7674f5ffff8d7ab4b9a4909073e7d26da1", "patch": "@@ -1504,7 +1504,7 @@ vect_compute_data_ref_alignment (struct data_reference *dr)\n \t\t  && DECL_ALIGN (base) >= TYPE_ALIGN (vectype)));\n \n   /* Modulo alignment.  */\n-  misalign = size_binop (TRUNC_MOD_EXPR, misalign, alignment);\n+  misalign = size_binop (FLOOR_MOD_EXPR, misalign, alignment);\n \n   if (!host_integerp (misalign, 1))\n     {"}]}