{"sha": "579f75aefaf6ad541772195667b4f3afbf738fe5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTc5Zjc1YWVmYWY2YWQ1NDE3NzIxOTU2NjdiNGYzYWZiZjczOGZlNQ==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2014-08-21T09:40:09Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2014-08-21T09:40:09Z"}, "message": "peephole returns an rtx_insn\n\n2014-08-21  David Malcolm  <dmalcolm@redhat.com>\n\n\t* output.h (peephole): Strengthen return type from rtx to\n\trtx_insn *.\n\t* rtl.h (delete_for_peephole): Likewise for both params.\n\t* genpeep.c (main): In generated \"peephole\" function, strengthen\n\treturn type and local \"insn\" from rtx to rtx_insn *.  For now,\n\trename param \"ins1\" to \"uncast_ins1\", adding \"ins1\" back as an\n\trtx_insn *, with a checked cast.\n\t* jump.c (delete_for_peephole): Strengthen params \"from\", \"to\" and\n\tlocals \"insn\", \"next\", \"prev\" from rtx to rtx_insn *.\n\nFrom-SVN: r214264", "tree": {"sha": "bdaedc88d062be340eb32158d131b0b8754dd0f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bdaedc88d062be340eb32158d131b0b8754dd0f9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/579f75aefaf6ad541772195667b4f3afbf738fe5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/579f75aefaf6ad541772195667b4f3afbf738fe5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/579f75aefaf6ad541772195667b4f3afbf738fe5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/579f75aefaf6ad541772195667b4f3afbf738fe5/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "622dbadfab3efe2677b5e789b4e930482630a99e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/622dbadfab3efe2677b5e789b4e930482630a99e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/622dbadfab3efe2677b5e789b4e930482630a99e"}], "stats": {"total": 30, "additions": 22, "deletions": 8}, "files": [{"sha": "840c79f1f8aad606756a2e3fdb0cdc44b92a0554", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/579f75aefaf6ad541772195667b4f3afbf738fe5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/579f75aefaf6ad541772195667b4f3afbf738fe5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=579f75aefaf6ad541772195667b4f3afbf738fe5", "patch": "@@ -1,3 +1,15 @@\n+2014-08-21  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* output.h (peephole): Strengthen return type from rtx to\n+\trtx_insn *.\n+\t* rtl.h (delete_for_peephole): Likewise for both params.\n+\t* genpeep.c (main): In generated \"peephole\" function, strengthen\n+\treturn type and local \"insn\" from rtx to rtx_insn *.  For now,\n+\trename param \"ins1\" to \"uncast_ins1\", adding \"ins1\" back as an\n+\trtx_insn *, with a checked cast.\n+\t* jump.c (delete_for_peephole): Strengthen params \"from\", \"to\" and\n+\tlocals \"insn\", \"next\", \"prev\" from rtx to rtx_insn *.\n+\n 2014-08-21  Marc Glisse  <marc.glisse@inria.fr>\n \n \tPR tree-optimization/62112"}, {"sha": "bc2785e6e7d412296a7e7c5ac138327b78cb971b", "filename": "gcc/genpeep.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/579f75aefaf6ad541772195667b4f3afbf738fe5/gcc%2Fgenpeep.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/579f75aefaf6ad541772195667b4f3afbf738fe5/gcc%2Fgenpeep.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenpeep.c?ref=579f75aefaf6ad541772195667b4f3afbf738fe5", "patch": "@@ -378,8 +378,10 @@ from the machine description file `md'.  */\\n\\n\");\n   printf (\"extern rtx peep_operand[];\\n\\n\");\n   printf (\"#define operands peep_operand\\n\\n\");\n \n-  printf (\"rtx\\npeephole (rtx ins1)\\n{\\n\");\n-  printf (\"  rtx insn ATTRIBUTE_UNUSED, x ATTRIBUTE_UNUSED, pat ATTRIBUTE_UNUSED;\\n\\n\");\n+  printf (\"rtx_insn *\\npeephole (rtx uncast_ins1)\\n{\\n\");\n+  printf (\"  rtx_insn *ins1 = as_a <rtx_insn *> (uncast_ins1);\\n\");\n+  printf (\"  rtx_insn *insn ATTRIBUTE_UNUSED;\\n\");\n+  printf (\"  rtx x ATTRIBUTE_UNUSED, pat ATTRIBUTE_UNUSED;\\n\\n\");\n \n   /* Early out: no peepholes for insns followed by barriers.  */\n   printf (\"  if (NEXT_INSN (ins1)\\n\");"}, {"sha": "96bdbe8ffbbbd2d4c202740e0526574f524397fe", "filename": "gcc/jump.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/579f75aefaf6ad541772195667b4f3afbf738fe5/gcc%2Fjump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/579f75aefaf6ad541772195667b4f3afbf738fe5/gcc%2Fjump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjump.c?ref=579f75aefaf6ad541772195667b4f3afbf738fe5", "patch": "@@ -1398,14 +1398,14 @@ delete_related_insns (rtx insn)\n    peephole insn that will replace them.  */\n \n void\n-delete_for_peephole (rtx from, rtx to)\n+delete_for_peephole (rtx_insn *from, rtx_insn *to)\n {\n-  rtx insn = from;\n+  rtx_insn *insn = from;\n \n   while (1)\n     {\n-      rtx next = NEXT_INSN (insn);\n-      rtx prev = PREV_INSN (insn);\n+      rtx_insn *next = NEXT_INSN (insn);\n+      rtx_insn *prev = PREV_INSN (insn);\n \n       if (!NOTE_P (insn))\n \t{"}, {"sha": "53d575a3de66f258ededcf7eed3b61ef7900b299", "filename": "gcc/output.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/579f75aefaf6ad541772195667b4f3afbf738fe5/gcc%2Foutput.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/579f75aefaf6ad541772195667b4f3afbf738fe5/gcc%2Foutput.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foutput.h?ref=579f75aefaf6ad541772195667b4f3afbf738fe5", "patch": "@@ -281,7 +281,7 @@ extern void assemble_addr_to_section (rtx, section *);\n extern int get_pool_size (void);\n \n #ifdef HAVE_peephole\n-extern rtx peephole (rtx);\n+extern rtx_insn *peephole (rtx);\n #endif\n \n extern void output_shared_constant_pool (void);"}, {"sha": "7d31333c6bef27e97f873a31c9c01b9a3f4c3891", "filename": "gcc/rtl.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/579f75aefaf6ad541772195667b4f3afbf738fe5/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/579f75aefaf6ad541772195667b4f3afbf738fe5/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=579f75aefaf6ad541772195667b4f3afbf738fe5", "patch": "@@ -3062,7 +3062,7 @@ extern rtx reversed_comparison (const_rtx, enum machine_mode);\n extern enum rtx_code reversed_comparison_code (const_rtx, const_rtx);\n extern enum rtx_code reversed_comparison_code_parts (enum rtx_code, const_rtx,\n \t\t\t\t\t\t     const_rtx, const_rtx);\n-extern void delete_for_peephole (rtx, rtx);\n+extern void delete_for_peephole (rtx_insn *, rtx_insn *);\n extern int condjump_in_parallel_p (const_rtx);\n \n /* In emit-rtl.c.  */"}]}