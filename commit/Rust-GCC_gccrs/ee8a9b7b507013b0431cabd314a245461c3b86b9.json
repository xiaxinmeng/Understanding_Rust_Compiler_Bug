{"sha": "ee8a9b7b507013b0431cabd314a245461c3b86b9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWU4YTliN2I1MDcwMTNiMDQzMWNhYmQzMTRhMjQ1NDYxYzNiODZiOQ==", "commit": {"author": {"name": "Joern Rennecke", "email": "joern.rennecke@embecosm.com", "date": "2013-04-10T09:54:25Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2013-04-10T09:54:25Z"}, "message": "re PR tree-optimization/55524 (If fnma exists but not fms, convert_mult_to_fma should prefer to former over the latter.)\n\ngcc:\n2013-04-10  Joern Rennecke <joern.rennecke@embecosm.com>\n\n        PR tree-optimization/55524\n        * tree-ssa-math-opts.c\n        (convert_mult_to_fma): Don't use an fms construct\n        when we don't have an fms operation, but fnma, and it looks\n        likely that we'll be able to use the latter.\n\ngcc/testsuite:\n2013-04-10  Joern Rennecke <joern.rennecke@embecosm.com>\n\n        PR tree-optimization/55524\n        * gcc.target/epiphany/fnma-1.c: New test.\n\nFrom-SVN: r197668", "tree": {"sha": "1fe05c42b5420c41fb7bc6483e954ffd10927339", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1fe05c42b5420c41fb7bc6483e954ffd10927339"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ee8a9b7b507013b0431cabd314a245461c3b86b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee8a9b7b507013b0431cabd314a245461c3b86b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee8a9b7b507013b0431cabd314a245461c3b86b9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee8a9b7b507013b0431cabd314a245461c3b86b9/comments", "author": {"login": "amylaar", "id": 1663475, "node_id": "MDQ6VXNlcjE2NjM0NzU=", "avatar_url": "https://avatars.githubusercontent.com/u/1663475?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amylaar", "html_url": "https://github.com/amylaar", "followers_url": "https://api.github.com/users/amylaar/followers", "following_url": "https://api.github.com/users/amylaar/following{/other_user}", "gists_url": "https://api.github.com/users/amylaar/gists{/gist_id}", "starred_url": "https://api.github.com/users/amylaar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amylaar/subscriptions", "organizations_url": "https://api.github.com/users/amylaar/orgs", "repos_url": "https://api.github.com/users/amylaar/repos", "events_url": "https://api.github.com/users/amylaar/events{/privacy}", "received_events_url": "https://api.github.com/users/amylaar/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6957a6f6f90ef5be56e154ee7ce8656ec0248e6f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6957a6f6f90ef5be56e154ee7ce8656ec0248e6f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6957a6f6f90ef5be56e154ee7ce8656ec0248e6f"}], "stats": {"total": 40, "additions": 40, "deletions": 0}, "files": [{"sha": "98c6462794d401b6da0a7f6f12e8fd9306b1777b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee8a9b7b507013b0431cabd314a245461c3b86b9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee8a9b7b507013b0431cabd314a245461c3b86b9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ee8a9b7b507013b0431cabd314a245461c3b86b9", "patch": "@@ -1,3 +1,11 @@\n+2013-04-10  Joern Rennecke <joern.rennecke@embecosm.com>\n+\n+\tPR tree-optimization/55524\n+\t* tree-ssa-math-opts.c\n+\t(convert_mult_to_fma): Don't use an fms construct\n+\twhen we don't have an fms operation, but fnma, and it looks\n+\tlikely that we'll be able to use the latter.\n+\n 2013-04-10  Zhouyi Zhou <yizhouzhou@ict.ac.cn>\n \n \t* cif-code.def (OVERWRITABLE): Correct the comment for overwritable"}, {"sha": "aacd0094a0951eedfb174e26d31b5e6cc3a71073", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee8a9b7b507013b0431cabd314a245461c3b86b9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee8a9b7b507013b0431cabd314a245461c3b86b9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ee8a9b7b507013b0431cabd314a245461c3b86b9", "patch": "@@ -1,3 +1,8 @@\n+2013-04-10  Joern Rennecke <joern.rennecke@embecosm.com>\n+\n+\tPR tree-optimization/55524\n+\t* gcc.target/epiphany/fnma-1.c: New test.\n+\n 2013-04-10  Zhouyi Zhou <yizhouzhou@ict.ac.cn>\n \n \t* gcc.dg/tree-ssa/inline-11.c: New test"}, {"sha": "3155079f4a14cf8ca7f1c2b17ca1b14f9e0bfff2", "filename": "gcc/testsuite/gcc.target/epiphany/fnma-1.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee8a9b7b507013b0431cabd314a245461c3b86b9/gcc%2Ftestsuite%2Fgcc.target%2Fepiphany%2Ffnma-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee8a9b7b507013b0431cabd314a245461c3b86b9/gcc%2Ftestsuite%2Fgcc.target%2Fepiphany%2Ffnma-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fepiphany%2Ffnma-1.c?ref=ee8a9b7b507013b0431cabd314a245461c3b86b9", "patch": "@@ -0,0 +1,9 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-final { scan-assembler-times \"fmsub\\[ \\ta-zA-Z0-9\\]*,\" 1 } } */\n+\n+float\n+f (float ar, float ai, float br, float bi)\n+{\n+  return ar * br - ai * bi;\n+}"}, {"sha": "e7e09f6a9decb8a9e00e702df7551219d47395ee", "filename": "gcc/tree-ssa-math-opts.c", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee8a9b7b507013b0431cabd314a245461c3b86b9/gcc%2Ftree-ssa-math-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee8a9b7b507013b0431cabd314a245461c3b86b9/gcc%2Ftree-ssa-math-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-math-opts.c?ref=ee8a9b7b507013b0431cabd314a245461c3b86b9", "patch": "@@ -2570,6 +2570,24 @@ convert_mult_to_fma (gimple mul_stmt, tree op1, tree op2)\n \t  return false;\n \t}\n \n+      /* If the subtrahend (gimple_assign_rhs2 (use_stmt)) is computed\n+\t by a MULT_EXPR that we'll visit later, we might be able to\n+\t get a more profitable match with fnma.\n+\t OTOH, if we don't, a negate / fma pair has likely lower latency\n+\t that a mult / subtract pair.  */\n+      if (use_code == MINUS_EXPR && !negate_p\n+\t  && gimple_assign_rhs1 (use_stmt) == result\n+\t  && optab_handler (fms_optab, TYPE_MODE (type)) == CODE_FOR_nothing\n+\t  && optab_handler (fnma_optab, TYPE_MODE (type)) != CODE_FOR_nothing)\n+\t{\n+\t  tree rhs2 = gimple_assign_rhs2 (use_stmt);\n+\t  gimple stmt2 = SSA_NAME_DEF_STMT (rhs2);\n+\n+\t  if (has_single_use (rhs2)\n+\t      && gimple_assign_rhs_code (stmt2) == MULT_EXPR)\n+\t    return false;\n+\t}\n+\n       /* We can't handle a * b + a * b.  */\n       if (gimple_assign_rhs1 (use_stmt) == gimple_assign_rhs2 (use_stmt))\n \treturn false;"}]}