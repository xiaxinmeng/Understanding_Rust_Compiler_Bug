{"sha": "a9730200523b035a4bb6db87b93811c170409443", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTk3MzAyMDA1MjNiMDM1YTRiYjZkYjg3YjkzODExYzE3MDQwOTQ0Mw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2012-01-03T09:09:41Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2012-01-03T09:09:41Z"}, "message": "re PR tree-optimization/51719 (ICE: verify_gimple failed: LHS in noreturn call with -fpartial-inlining -fprofile-use and exceptions)\n\n\tPR tree-optimization/51719\n\t* value-prof.c (gimple_ic): When indirect call isn't noreturn,\n\tbut direct call is, clear direct call's lhs and don't add fallthrough\n\tedge from dcall_bb to join_bb and PHIs.\n\n\t* g++.dg/tree-prof/pr51719.C: New test.\n\nFrom-SVN: r182832", "tree": {"sha": "f7d063113d3bb8352f8c367f218f990fa7fef5eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f7d063113d3bb8352f8c367f218f990fa7fef5eb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a9730200523b035a4bb6db87b93811c170409443", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9730200523b035a4bb6db87b93811c170409443", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a9730200523b035a4bb6db87b93811c170409443", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9730200523b035a4bb6db87b93811c170409443/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "be5de7a15852f98586bc6e1b3fbe951f35d72915", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be5de7a15852f98586bc6e1b3fbe951f35d72915", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be5de7a15852f98586bc6e1b3fbe951f35d72915"}], "stats": {"total": 62, "additions": 55, "deletions": 7}, "files": [{"sha": "cac010800fc365ba1a9ef25f4c5f143fb3a30c48", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9730200523b035a4bb6db87b93811c170409443/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9730200523b035a4bb6db87b93811c170409443/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a9730200523b035a4bb6db87b93811c170409443", "patch": "@@ -1,3 +1,10 @@\n+2012-01-03  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/51719\n+\t* value-prof.c (gimple_ic): When indirect call isn't noreturn,\n+\tbut direct call is, clear direct call's lhs and don't add fallthrough\n+\tedge from dcall_bb to join_bb and PHIs.\n+\n 2012-01-03  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>\n \n \t* config/s390/s390.md (\"*cmp<mode>_ccs\"): Fix comment mentioning"}, {"sha": "a75ef954a563e49a52c7bcfacad45fff8d24db38", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9730200523b035a4bb6db87b93811c170409443/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9730200523b035a4bb6db87b93811c170409443/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a9730200523b035a4bb6db87b93811c170409443", "patch": "@@ -1,3 +1,8 @@\n+2012-01-03  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/51719\n+\t* g++.dg/tree-prof/pr51719.C: New test.\n+\n 2012-01-03  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/51730"}, {"sha": "01e81ff66eda0f46fafcb25ea69c4252bf4b03cb", "filename": "gcc/testsuite/g++.dg/tree-prof/pr51719.C", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9730200523b035a4bb6db87b93811c170409443/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-prof%2Fpr51719.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9730200523b035a4bb6db87b93811c170409443/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-prof%2Fpr51719.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-prof%2Fpr51719.C?ref=a9730200523b035a4bb6db87b93811c170409443", "patch": "@@ -0,0 +1,27 @@\n+// PR tree-optimization/51719\n+// { dg-options \"-O -fpartial-inlining\" }\n+\n+int\n+bar (void)\n+{\n+  throw 1;\n+}\n+\n+int __attribute__ ((noinline, noclone))\n+foo (int (*f) (void))\n+{\n+  try\n+  {\n+    return (*f) ();\n+  }\n+  catch (...)\n+  {\n+  }\n+  return 0;\n+}\n+\n+int\n+main ()\n+{\n+  return foo (bar);\n+}"}, {"sha": "a6afd5515b522fe0f028328af63857182dcf61ea", "filename": "gcc/value-prof.c", "status": "modified", "additions": 16, "deletions": 7, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9730200523b035a4bb6db87b93811c170409443/gcc%2Fvalue-prof.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9730200523b035a4bb6db87b93811c170409443/gcc%2Fvalue-prof.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvalue-prof.c?ref=a9730200523b035a4bb6db87b93811c170409443", "patch": "@@ -1,5 +1,5 @@\n /* Transformations based on profile information for values.\n-   Copyright (C) 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011\n+   Copyright (C) 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012\n    Free Software Foundation, Inc.\n \n This file is part of GCC.\n@@ -1149,7 +1149,7 @@ gimple_ic (gimple icall_stmt, struct cgraph_node *direct_call,\n   tree optype = build_pointer_type (void_type_node);\n   edge e_cd, e_ci, e_di, e_dj = NULL, e_ij;\n   gimple_stmt_iterator gsi;\n-  int lp_nr;\n+  int lp_nr, dflags;\n \n   cond_bb = gimple_bb (icall_stmt);\n   gsi = gsi_for_stmt (icall_stmt);\n@@ -1176,6 +1176,9 @@ gimple_ic (gimple icall_stmt, struct cgraph_node *direct_call,\n   update_stmt (icall_stmt);\n   dcall_stmt = gimple_copy (icall_stmt);\n   gimple_call_set_fndecl (dcall_stmt, direct_call->decl);\n+  dflags = flags_from_decl_or_type (direct_call->decl);\n+  if ((dflags & ECF_NORETURN) != 0)\n+    gimple_call_set_lhs (dcall_stmt, NULL_TREE);\n   gsi_insert_before (&gsi, dcall_stmt, GSI_SAME_STMT);\n \n   /* Fix CFG. */\n@@ -1220,17 +1223,23 @@ gimple_ic (gimple icall_stmt, struct cgraph_node *direct_call,\n \n   if (e_ij != NULL)\n     {\n-      e_dj = make_edge (dcall_bb, join_bb, EDGE_FALLTHRU);\n-      e_dj->probability = REG_BR_PROB_BASE;\n-      e_dj->count = count;\n+      if ((dflags & ECF_NORETURN) != 0)\n+\te_ij->count = all;\n+      else\n+\t{\n+\t  e_dj = make_edge (dcall_bb, join_bb, EDGE_FALLTHRU);\n+\t  e_dj->probability = REG_BR_PROB_BASE;\n+\t  e_dj->count = count;\n \n+\t  e_ij->count = all - count;\n+\t}\n       e_ij->probability = REG_BR_PROB_BASE;\n-      e_ij->count = all - count;\n     }\n \n   /* Insert PHI node for the call result if necessary.  */\n   if (gimple_call_lhs (icall_stmt)\n-      && TREE_CODE (gimple_call_lhs (icall_stmt)) == SSA_NAME)\n+      && TREE_CODE (gimple_call_lhs (icall_stmt)) == SSA_NAME\n+      && (dflags & ECF_NORETURN) == 0)\n     {\n       tree result = gimple_call_lhs (icall_stmt);\n       gimple phi = create_phi_node (result, join_bb);"}]}