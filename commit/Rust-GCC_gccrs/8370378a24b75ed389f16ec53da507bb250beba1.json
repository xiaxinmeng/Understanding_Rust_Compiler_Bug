{"sha": "8370378a24b75ed389f16ec53da507bb250beba1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODM3MDM3OGEyNGI3NWVkMzg5ZjE2ZWM1M2RhNTA3YmIyNTBiZWJhMQ==", "commit": {"author": {"name": "Nathan C. Myers", "email": "ncm-nospam@cantrip.org", "date": "2003-06-26T16:38:40Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2003-06-26T16:38:40Z"}, "message": "filebuf_copy.cc: New, testing char by char file copy.\n\n2003-06-26  Nathan C. Myers  <ncm-nospam@cantrip.org>\n\t    Paolo Carlini  <pcarlini@unitus.it>\n\n\t* testsuite/performance/filebuf_copy.cc: New, testing char\n\tby char file copy.\n\nCo-Authored-By: Paolo Carlini <pcarlini@unitus.it>\n\nFrom-SVN: r68538", "tree": {"sha": "edc539d7164c568070c496ed1912156eaad78d40", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/edc539d7164c568070c496ed1912156eaad78d40"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8370378a24b75ed389f16ec53da507bb250beba1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8370378a24b75ed389f16ec53da507bb250beba1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8370378a24b75ed389f16ec53da507bb250beba1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8370378a24b75ed389f16ec53da507bb250beba1/comments", "author": null, "committer": null, "parents": [{"sha": "10d6ea27dc89bb05301d134e0703958a5d58d34e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10d6ea27dc89bb05301d134e0703958a5d58d34e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10d6ea27dc89bb05301d134e0703958a5d58d34e"}], "stats": {"total": 81, "additions": 81, "deletions": 0}, "files": [{"sha": "9e2c2c13761000fa30dd517569311363f52234f2", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8370378a24b75ed389f16ec53da507bb250beba1/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8370378a24b75ed389f16ec53da507bb250beba1/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=8370378a24b75ed389f16ec53da507bb250beba1", "patch": "@@ -1,3 +1,9 @@\n+2003-06-26  Nathan C. Myers  <ncm-nospam@cantrip.org>\n+            Paolo Carlini  <pcarlini@unitus.it>\n+\n+\t* testsuite/performance/filebuf_copy.cc: New, testing char\n+\tby char file copy.\n+\n 2003-06-26  Paolo Carlini  <pcarlini@unitus.it>\n             Nathan C. Myers  <ncm-nospam@cantrip.org>\n "}, {"sha": "f393b92c0a304a9c67c03e1e829cb8c9b91b25ed", "filename": "libstdc++-v3/testsuite/performance/filebuf_copy.cc", "status": "added", "additions": 75, "deletions": 0, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8370378a24b75ed389f16ec53da507bb250beba1/libstdc%2B%2B-v3%2Ftestsuite%2Fperformance%2Ffilebuf_copy.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8370378a24b75ed389f16ec53da507bb250beba1/libstdc%2B%2B-v3%2Ftestsuite%2Fperformance%2Ffilebuf_copy.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fperformance%2Ffilebuf_copy.cc?ref=8370378a24b75ed389f16ec53da507bb250beba1", "patch": "@@ -0,0 +1,75 @@\n+// Copyright (C) 2003 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <cstdio>\n+#include <fstream>\n+#include <testsuite_performance.h>\n+\n+int main()\n+{\n+  using namespace std;\n+  using namespace __gnu_cxx_test;\n+\n+  time_counter time;\n+  resource_counter resource;\n+  const unsigned long count = 1ul << 30;\n+\n+  // C unlocked\n+  FILE* fpi = fopen(\"/dev/zero\", \"r\");\n+  FILE* fpo = fopen(\"/dev/null\", \"w\");\n+  start_counters(time, resource);\n+  for (unsigned long i = 0; i < count; ++i)\n+    {\n+      int c = getc_unlocked(fpi);\n+      if (c == EOF || putc_unlocked(c, fpo) == EOF)\n+\tbreak;\n+    }\n+  stop_counters(time, resource);\n+  fclose(fpi);\n+  fclose(fpo);\n+  report_performance(__FILE__, \"C unlocked\", time, resource);\n+  clear_counters(time, resource);\n+\n+  // C++\n+  filebuf in;\n+  in.open(\"/dev/zero\", ios::in);\n+  filebuf out;\n+  out.open(\"/dev/null\", ios::out);\n+  start_counters(time, resource);\n+  for (unsigned long i = 0; i < count; ++i)\n+    {\n+      int c = in.sbumpc();\n+      if (c == EOF || out.sputc(c) == EOF)\n+\tbreak;\n+    }\n+  stop_counters(time, resource);\n+  in.close();\n+  out.close();\n+  report_performance(__FILE__, \"C++\", time, resource);\n+\n+  return 0;\n+}"}]}