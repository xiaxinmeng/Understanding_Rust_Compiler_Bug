{"sha": "0cdd3dddaec089933fadb35754aeb93f16f2117b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGNkZDNkZGRhZWMwODk5MzNmYWRiMzU3NTRhZWI5M2YxNmYyMTE3Yg==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-03-18T21:17:20Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-03-18T21:17:20Z"}, "message": "(output_file): New static var.\n\n(main): Set output_file.\n(my_exit): Delete output_file on failure.\n\nFrom-SVN: r3777", "tree": {"sha": "9ff8f93b64e93476bd264473d7252a4d92a8cf1e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9ff8f93b64e93476bd264473d7252a4d92a8cf1e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0cdd3dddaec089933fadb35754aeb93f16f2117b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0cdd3dddaec089933fadb35754aeb93f16f2117b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0cdd3dddaec089933fadb35754aeb93f16f2117b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0cdd3dddaec089933fadb35754aeb93f16f2117b/comments", "author": null, "committer": null, "parents": [{"sha": "461beb1055c836767e7ec420aba89eae7b363290", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/461beb1055c836767e7ec420aba89eae7b363290", "html_url": "https://github.com/Rust-GCC/gccrs/commit/461beb1055c836767e7ec420aba89eae7b363290"}], "stats": {"total": 18, "additions": 12, "deletions": 6}, "files": [{"sha": "37da651b4a8f808ed1e1f58b2000d86b8347bcc4", "filename": "gcc/collect2.c", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cdd3dddaec089933fadb35754aeb93f16f2117b/gcc%2Fcollect2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cdd3dddaec089933fadb35754aeb93f16f2117b/gcc%2Fcollect2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcollect2.c?ref=0cdd3dddaec089933fadb35754aeb93f16f2117b", "patch": "@@ -188,6 +188,7 @@ static int   temp_filename_length;\t/* Length of temp_filename */\n static char *temp_filename;\t\t/* Base of temp filenames */\n static char *c_file;\t\t\t/* <xxx>.c for constructor/destructor list. */\n static char *o_file;\t\t\t/* <xxx>.o for constructor/destructor list. */\n+static char *output_file;\t\t/* Output file for ld.  */\n static char *nm_file_name;\t\t/* pathname of nm */\n static char *strip_file_name;\t\t/* pathname of strip */\n \n@@ -261,6 +262,9 @@ my_exit (status)\n   if (o_file != 0 && o_file[0])\n     maybe_unlink (o_file);\n \n+  if (status != 0 && output_file != 0 && output_file[0])\n+    maybe_unlink (output_file);\n+\n   exit (status);\n }\n \n@@ -696,7 +700,6 @@ main (argc, argv)\n   char *full_strip_suffix = strip_suffix;\n   char *gstrip_suffix\t= \"gstrip\";\n   char *full_gstrip_suffix = gstrip_suffix;\n-  char *outfile\t\t= \"a.out\";\n   char *arg;\n   FILE *outf;\n   char *ld_file_name;\n@@ -720,6 +723,8 @@ main (argc, argv)\n \n   our_file_name = argv[0];\n \n+  output_file = \"a.out\";\n+\n   /* We must check that we do not call ourselves in an infinite\n      recursion loop. We save the name used for us in the COLLECT_NAME\n      environment variable, first getting the previous value.\n@@ -933,7 +938,7 @@ main (argc, argv)\n \t      break;\n \n \t    case 'o':\n-\t      outfile = (arg[2] == '\\0') ? argv[1] : &arg[2];\n+\t      output_file = (arg[2] == '\\0') ? argv[1] : &arg[2];\n \t      break;\n \n \t    case 'r':\n@@ -1033,7 +1038,7 @@ main (argc, argv)\n   if (rflag)\n     return 0;\n \n-  scan_prog_file (outfile, PASS_FIRST);\n+  scan_prog_file (output_file, PASS_FIRST);\n \n   if (debug)\n     {\n@@ -1048,7 +1053,7 @@ main (argc, argv)\n \t{\n \t  char **strip_argv = (char **) xcalloc (sizeof (char *), 3);\n \t  strip_argv[0] = strip_file_name;\n-\t  strip_argv[1] = outfile;\n+\t  strip_argv[1] = output_file;\n \t  strip_argv[2] = (char *) 0;\n \t  fork_execute (\"strip\", strip_argv);\n \t}\n@@ -1066,7 +1071,8 @@ main (argc, argv)\n \n   if (debug)\n     {\n-      fprintf (stderr, \"\\n========== outfile = %s, c_file = %s\\n\", outfile, c_file);\n+      fprintf (stderr, \"\\n========== output_file = %s, c_file = %s\\n\",\n+\t       output_file, c_file);\n       write_c_file (stderr, \"stderr\");\n       fprintf (stderr, \"========== end of c_file\\n\\n\");\n     }\n@@ -1079,7 +1085,7 @@ main (argc, argv)\n \n   /* Let scan_prog_file do any final mods (OSF/rose needs this for\n      constructors/destructors in shared libraries.  */\n-  scan_prog_file (outfile, PASS_SECOND);\n+  scan_prog_file (output_file, PASS_SECOND);\n \n   maybe_unlink (c_file);\n   maybe_unlink (o_file);"}]}